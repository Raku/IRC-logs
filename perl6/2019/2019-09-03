[00:05] <discord6> <theangryepicbanana> there don't happen to be llvm bindings for Perl 6, does there?

[00:06] *** lichtkind_ joined
[00:23] *** Seance[m] left
[00:23] *** AlexDaniel` left
[00:23] *** xliff[m] left
[00:23] *** unclechu left
[00:23] *** matiaslina left
[00:24] *** Guest55169 left
[00:24] *** aearnus[m] left
[00:24] *** sergiotarxz[m] left
[00:24] *** rba[m] left
[00:24] *** CIAvash left
[00:24] *** EuAndreh[m] left
[00:24] *** lance_w[m] left
[00:24] *** TravisRt2botio[m left
[00:24] *** Matthew[m] left
[00:24] *** BlackChaosNL[m] left
[00:24] *** uzl[m] left
[00:24] *** mack[m]1 left
[00:24] *** folex left
[00:24] *** Demos[m] left
[00:30] *** AlexDaniel` joined
[00:37] *** epony joined
[00:42] <discord6> <RaycatWhoDat> All right, peeps. Can I get a quick glance at this toy program? It's doing three different things but, I'm trying to reduce the code all the same. Any comments or critique would be fantastic. https://gist.github.com/RayMPerry/e38337cc48e389fe15796d5642871a19

[00:43] *** EuAndreh[m] joined
[00:43] *** BlackChaosNL[m] joined
[00:43] *** lance_w[m] joined
[00:43] *** sergiotarxz[m] joined
[00:43] *** Matthew[m] joined
[00:43] *** Guest999 joined
[00:43] *** TravisRt2botio[m joined
[00:43] *** rba[m] joined
[00:44] *** unclechu joined
[00:44] *** Seance[m] joined
[00:44] *** aearnus[m] joined
[00:44] *** matiaslina joined
[00:44] *** CIAvash joined
[00:44] *** Demos[m] joined
[00:44] *** folex joined
[00:44] *** mack[m]1 joined
[00:44] *** uzl[m] joined
[00:44] *** xliff[m] joined
[00:56] <netrino> So, i've been trying out Cro and encountered a problem. The SPA framework i'm using in dev-mode produces symlinks to output directory instead of copying actual files and when i try to serve those with cro's static router such as get -> @*path { static 'frontend/dist', @path } it refuses with 403. Now, i've been looking into this issue and it seems that's because IO::Path::ChildSecure expands the symlinks and

[00:56] <netrino> then checks if this is indeed a child path. Naturally, expanded path isn't, so it returns 403. Currenly, i'm using workaround doing a join of @path.join('/') and appending that to base, so `static' doesn't have to construct the path on its own, but i wonder, what are security issues that ChildSecure tries to prevent in this case? Will my workaround be dangerous in this case? Should `static' somehow vet that

[00:56] <netrino> base also doesn't follow symlinks, or maybe vice versa, it sholdn't follow symlinks at all and allow them, so it wouldn't be 403? 

[00:56] <netrino> Sorry for so much text :D

[01:04] <netrino> RaycanWhoDat i'm not an expert, but from a quick glance, while loop in your sample will only execute its body once, cause reduce will do the looping over @numbers. Also, you can use a short form $whileSum = [+] @numbers

[01:04] <netrino> RaycatWhoDat*

[01:05] <netrino> RaycatWhoDat: and also, fibonacci sequence can be expressed as 1, 1, * + * ... *

[01:06] <netrino> m: my @fibs = 1, 1, * + * ... *; say @fibs[^10]

[01:06] <evalable6> netrino, rakudo-moar b380fd207: OUTPUT: «(1 1 2 3 5 8 13 21 34 55)␤»

[01:06] <discord6> <theangryepicbanana> so no one answered me?

[01:06] <discord6> <theangryepicbanana> ok ik what I'm doing tomorrow

[01:10] *** molaf left
[01:13] *** aborazmeh joined
[01:13] *** aborazmeh left
[01:13] *** aborazmeh joined
[01:23] *** molaf joined
[01:26] *** netrino left
[01:36] *** Cabanossi left
[01:42] *** jaldhar joined
[01:47] *** Cabanossi joined
[02:04] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:07] <discord6> <Aearnus> @theangryepicbanana what did you ask?

[02:19] *** jaldhar_ joined
[02:20] *** jaldhar left
[02:20] *** jaldhar_ left
[02:21] *** jaldhar_ joined
[02:22] <discord6> <RaycatWhoDat> Why does 1, 1, * + * ... * work?

[02:23] <timotimo> the ... operator has a "complex" LHS and a simple RHS; the LHS starts with a list of starting values and ends with a callable; the RHS is something that can be smart-matched against to decide a stopping condition

[02:23] <timotimo> * + * is equivalent to -> $a, $b { $a + $b }

[02:23] <timotimo> not exactly the same, but in this situation similar enough

[02:23] <discord6> <RaycatWhoDat> Very interesting.

[02:24] <timotimo> the ... operator checks how many arguments that callable takes and grabs that many values from the end of the values list, which is initialized with "1, 1" in this example

[02:24] <discord6> <RaycatWhoDat> So, in theory, is it possible to express fizzbuzz with this syntax?

[02:24] <timotimo> m: .say for 1, 2, -> *@a { (@a.pick, @a.sum).pick } ... * > 999;

[02:24] <evalable6> timotimo, rakudo-moar b380fd207: OUTPUT: «1␤2␤3␤6␤12␤2␤1␤6␤2␤12␤47␤2␤96␤192␤384␤768␤6␤192␤3␤1737␤»

[02:25] <timotimo> just a silly sequence

[02:25] <discord6> <RaycatWhoDat> Interesting.

[02:26] <timotimo> yeah, fizzbuzz would be possible with that, but since it's meant to take previous values, it'll have to look further back then just one, or have its own state in the generator function

[02:26] <timotimo> at that point you may be better off using xx

[02:26] <discord6> <RaycatWhoDat> what's that

[02:26] <timotimo> repetition operator for creating lists

[02:27] <timotimo> it thunks the LHS, i.e. what's on the left of it will be evaluated multiple times

[02:27] <discord6> <RaycatWhoDat> thunks?

[02:28] <discord6> <RaycatWhoDat> Who made these words

[02:28] <timotimo> yeah, you know how when you call a function with something like "$a + $b" it will first calculate the result of $a + $b, and then calls the function with the result

[02:28] <discord6> <RaycatWhoDat> Ah.

[02:28] <timotimo> and thunking means that instead of getting the result, the function will be called with the code

[02:28] <timotimo> and it can do whatever it wants with the code. run it once, run it any number of times, don't run it at all

[02:29] <timotimo> anyway, i'm heading out to bed

[02:29] <timotimo> have a good one!

[02:29] <discord6> <RaycatWhoDat> Good night!

[02:29] <timotimo> o/

[02:30] <AlexDaniel> RaycatWhoDat: @numbers.reduce(&[+]) can be written as just [+] @numbers

[02:30] <astronavt> how does that work..?

[02:31] <AlexDaniel> astronavt: https://docs.perl6.org/language/operators#Reduction_metaoperators

[02:31] <astronavt> aha

[02:31] <AlexDaniel> I think of it as if it simply shoves + ops between the elements

[02:32] <AlexDaniel> RaycatWhoDat: @numbers.tail(*-1) is like uhh, simply @numbers.tail or @numbers[*-1]

[02:33] <astronavt> AlexDaniel that's not what [] is doing inside the .reduce() though right?

[02:33] <astronavt> i assume &[+] is just syntax to make + something you can call .reduce on

[02:33] <AlexDaniel> astronavt: oh yeah, in that case &[+] is just another way of writing &infix:<+>

[02:34] <astronavt> thats like some kind of uncanny valley of syntax similarity

[02:34] <astronavt> how do i search for that

[02:36] <AlexDaniel> astronavt: the docs usually do a good job at figuring it out if you just type stuff in the search bar, but in this case I'm afraid &[…] syntax is simply not documented :o

[02:36] <astronavt> yikes

[02:36] <astronavt> PRs accepted?

[02:36] <astronavt> seems like it should be part of the sigils doc page, no?

[02:36] <AlexDaniel> of course!

[02:36] <AlexDaniel> maybe it's better to document it on https://docs.perl6.org/language/operators

[02:37] <astronavt> that seems more like a reference listing all the operators

[02:37] <AlexDaniel> the syntax is used many times in the docs, just never explained: https://gist.github.com/AlexDaniel/f3ed89d252918c3a6de67eb9ec608de2

[02:39] <AlexDaniel> astronavt: it also talks about precedence, metaops, identity, etc.

[02:39] <AlexDaniel> so I think that page fits

[02:40] <astronavt> i cant even find the sigils doc page anyway

[02:40] <astronavt> i just had it a minutes ago

[02:40] <astronavt> this one https://docs.perl6.org/language/variables#index-entry-sigil_&

[02:48] <discord6> <RaycatWhoDat> AlexDaniel, I'm doing @numbers.tail(*-1), not -1.

[02:48] <AlexDaniel> m: say <a b c d e>.tail(*-1)

[02:48] <evalable6> AlexDaniel, rakudo-moar b380fd207: OUTPUT: «(b c d e)␤»

[02:48] <AlexDaniel> ahhh right

[02:48] <AlexDaniel> sorry :)

[02:48] <discord6> <RaycatWhoDat> No worries.

[02:48] <AlexDaniel> m: say <a b c d e>[1..*]

[02:48] <evalable6> AlexDaniel, rakudo-moar b380fd207: OUTPUT: «(b c d e)␤»

[02:49] <discord6> <RaycatWhoDat> I come from a Lisp background, so head and tail made more sense to me

[02:49] <AlexDaniel> interesting

[02:50] <AlexDaniel> I have to invert my brain backwards to understand .tail(*-1) :D

[02:50] <AlexDaniel> as in 1..* is kinda left to right for me

[02:51] <discord6> <RaycatWhoDat> That makes sense. Having constructs and routines that operate on the first element and the rest of the list makes thinking about recursion super easy

[02:52] <AlexDaniel> m: my ($first, @rest) = <a b c d e f>[1, 1..*]; say $first; say @rest

[02:52] <evalable6> AlexDaniel, rakudo-moar b380fd207: OUTPUT: «b␤[(b c d e f)]␤»

[02:53] <AlexDaniel> uhh

[02:53] <discord6> <RaycatWhoDat> .flat?

[02:54] <AlexDaniel> I mean, we can just use := in this case, probably safely

[02:55] <AlexDaniel> m: my ($first, @rest) := <a b c d e f>[1, 1..*]; say $first; say @rest

[02:55] <evalable6> AlexDaniel, rakudo-moar b380fd207: OUTPUT: «b␤(b c d e f)␤»

[02:55] <AlexDaniel> or $

[02:55] <AlexDaniel> m: my ($first, $rest) = <a b c d e f>[1, 1..*]; say $first; say $rest

[02:55] <evalable6> AlexDaniel, rakudo-moar b380fd207: OUTPUT: «b␤(b c d e f)␤»

[02:55] <discord6> <RaycatWhoDat> what does that do

[02:55] <AlexDaniel> binding https://docs.perl6.org/language/operators#index-entry-Binding_operator

[02:56] <AlexDaniel> I guess chloekek++ can comment on using := where others typically use = :)

[02:56] <AlexDaniel> .seen chloekek

[02:56] <tellable6> AlexDaniel, I saw chloekek 2019-08-22T20:46:28Z in #perl6: <chloekek> I've heard chicken is quite versatile

[03:21] *** evalable6 left
[03:21] <cpan-p6> New module released to CPAN! Lazy::Static (0.0.1) by 03SAMGWISE

[03:24] *** Sgeo__ left
[03:24] *** Sgeo__ joined
[03:25] *** evalable6 joined
[03:25] *** ChanServ sets mode: +v evalable6

[03:55] *** molaf left
[04:00] *** MetaPrem joined
[04:07] *** [Sno] left
[04:37] *** jaldhar_ left
[04:38] *** jaldhar_ joined
[04:54] *** lgtaube joined
[04:58] *** lgtaube left
[05:04] *** [particle]1 joined
[05:04] *** [particle] left
[05:09] *** sena_kun joined
[05:12] *** lgtaube joined
[05:15] *** [particle]1 left
[05:17] *** [particle]1 joined
[05:20] <El_Che> it would be cool if the discord6 bot would enter the channel for each user, so we could address them with "nick:" instead of "discord6: nick:"

[05:30] *** eseyman joined
[05:47] <AlexDaniel> El_Che: so, puppeting?

[05:50] <El_Che> The master of puppets

[05:50] *** aborazmeh left
[05:50] <El_Che> use all the nick in mIRC war mode (yes, you're too young to get the reference :) )

[05:53] <AlexDaniel> well, I did use mIRC for quite some time

[05:53] <AlexDaniel> and yes I was a little shit back then :)

[06:00] *** jmerelo joined
[06:03] <Geth> ¦ ecosystem: 0e4d20b7c6 | (Konstantin Narkhov)++ | META.list

[06:03] <Geth> ¦ ecosystem: Add LZW::Revolunet to ecosystem

[06:03] <Geth> ¦ ecosystem: 

[06:03] <Geth> ¦ ecosystem: https://gitlab.com/pheix/lzw-revolunet-perl6

[06:03] <Geth> ¦ ecosystem: 

[06:03] <Geth> ¦ ecosystem: 👻

[06:03] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/0e4d20b7c6

[06:03] <Geth> ¦ ecosystem: 833c6b438e | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[06:03] <Geth> ¦ ecosystem: Merge pull request #466 from pheix/master

[06:03] <Geth> ¦ ecosystem: 

[06:03] <Geth> ¦ ecosystem: Add LZW::Revolunet to ecosystem

[06:03] <Geth> ¦ ecosystem: Thanks!

[06:03] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/833c6b438e

[06:06] <Xliff> How can I tell if I have data waiting in $*IN?

[06:08] <jmerelo> Xliff: use a tap?

[06:08] <tellable6> 2019-09-02T21:58:25Z #perl6 <tbrowder> jjmerelo doc v2 is looking good structurally, but i wish i could launch it local

[06:09] <Xliff> jmerelo: I thought $*IN was IO::Handle...

[06:10] <jmerelo> Xliff: but IIRC you could create a supply out of any IO::Handle

[06:10] <Xliff> Yeah. That's what I was thinking.

[06:11] <jmerelo> Xliff: right: https://docs.perl6.org/type/IO::Handle#method_Supply

[06:12] <jmerelo> .tell tbrowder what seems to be the problem? installing it or setting it up? Can we maybe talk this afternoon to get it going?

[06:12] <tellable6> jmerelo, I'll pass your message to tbrowder

[06:31] *** squashable6 left
[06:32] *** MetaPrem left
[06:34] *** squashable6 joined
[06:44] *** [particle]1 left
[06:52] <El_Che> morning

[07:03] *** domidumont joined
[07:03] *** rindolf joined
[07:04] *** robertle_ joined
[07:04] *** rindolf left
[07:12] <Xliff> m: ~^1.say

[07:12] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «(exit code 1) WARNINGS for /tmp/p1d2aB6K_P:␤1␤Useless use of "~^" in expression "~^1.say" in sink context (line 1)␤prefix:<~^> NYI␤  in block <unit> at /tmp/p1d2aB6K_P line 1␤␤»

[07:12] <Xliff> m: +^1.say

[07:12] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «WARNINGS for /tmp/W8nQW2lDyw:␤1␤Useless use of "+^" in expression "+^1.say" in sink context (line 1)␤»

[07:12] <Xliff> m: (+^1).say

[07:12] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «-2␤»

[07:13] <Xliff> m: my $a = 1; $a +&= +^1); $a.say

[07:13] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/Ce_VjX4nwu␤Unexpected closing bracket␤at /tmp/Ce_VjX4nwu:1␤------> 03my $a = 1; $a +&= +^108⏏04); $a.say␤»

[07:13] <Xliff> m: my $a = 1; $a +&= +^1; $a.say

[07:13] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «0␤»

[07:15] <holyghost> I am reading for making another statistical package based on statistical chaos theory. For example the chaos in a Markov Chain.

[07:15] <holyghost> The probabilities therein start with random variables, thus noise

[07:16] *** _jrjsmrtn left
[07:17] *** __jrjsmrtn__ joined
[07:27] *** jmerelo left
[07:45] *** dolmen joined
[07:53] <Xliff> Anybody around to proof? 

[07:53] <Xliff> https://gist.github.com/Xliff/d426039cc162e1cb84d1b7f8067fe9fb

[08:16] *** dolmen left
[08:16] *** Actualeyes joined
[08:20] <Xliff> m: my %a = ( b => 3 ); .say for ^ %a<b>

[08:20] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «0␤1␤2␤»

[08:27] *** dolmen joined
[08:33] *** jaldhar_ left
[08:33] *** jaldhar_ joined
[08:35] <Xliff> m: 'n-video'.substr(2).say

[08:35] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «video␤»

[08:37] *** Black_Ribbon left
[08:40] <Xliff> m: .say for 'current-' «~« <video audio text>;

[08:40] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «current-video␤current-audio␤current-text␤»

[08:40] *** jaldhar_ left
[08:41] *** jaldhar_ joined
[08:42] *** jaldhar_ left
[08:43] *** jaldhar_ joined
[08:52] *** jaldhar_ left
[08:53] *** jaldhar_ joined
[08:54] <discord6> <timotimo> @RaycatWhoDat i think .tail(*-1) is equivalent to .skip(1)

[08:54] *** jaldhar_ left
[08:55] *** jaldhar_ joined
[08:56] *** jaldhar_ left
[08:57] *** jaldhar_ joined
[08:58] <tadzik> I think skip(1) is more likely t work for infinite lists :)

[08:58] *** jaldhar_ left
[08:59] *** jaldhar_ joined
[09:04] *** jaldhar_ left
[09:05] *** jaldhar_ joined
[09:06] *** jaldhar_ left
[09:07] *** jaldhar_ joined
[09:08] *** jaldhar_ left
[09:09] *** jaldhar_ joined
[09:10] *** jaldhar_ left
[09:11] *** jaldhar_ joined
[09:20] *** jaldhar_ left
[09:21] *** jaldhar_ joined
[09:22] *** jaldhar_ left
[09:23] *** jaldhar_ joined
[09:24] *** jaldhar_ left
[09:25] *** jaldhar_ joined
[09:26] *** jaldhar_ left
[09:27] *** jaldhar_ joined
[09:28] *** satori__ joined
[09:30] *** reach_satori_ left
[09:38] *** jaldhar_ left
[09:38] *** netrino joined
[09:39] *** jaldhar_ joined
[09:40] *** jaldhar_ left
[09:41] *** jaldhar_ joined
[09:41] *** pecastro joined
[09:44] *** jaldhar_ left
[09:45] *** jaldhar_ joined
[09:50] *** pilne left
[09:50] *** jaldhar_ left
[09:51] *** jaldhar_ joined
[10:00] *** jaldhar_ left
[10:01] *** jaldhar_ joined
[10:02] *** jaldhar_ left
[10:03] *** jaldhar_ joined
[10:06] <discord6> <RaycatWhoDat> m: (1..5).skip(1).say

[10:06] <evalable6> RaycatWhoDat, rakudo-moar b380fd207: OUTPUT: «(2 3 4 5)␤»

[10:06] <discord6> <RaycatWhoDat> Sweet

[10:08] *** pecastro left
[10:08] *** jaldhar_ left
[10:08] *** jaldhar_ joined
[10:09] *** mowcat joined
[10:10] *** jaldhar_ left
[10:11] *** jaldhar_ joined
[10:12] *** jaldhar_ left
[10:13] *** jaldhar_ joined
[10:14] *** jaldhar_ left
[10:15] *** jaldhar_ joined
[10:16] *** jaldhar_ left
[10:17] *** jaldhar_ joined
[10:22] *** jaldhar_ left
[10:23] *** jaldhar_ joined
[10:25] *** domidumont left
[10:43] *** dolmen left
[10:50] <Geth> ¦ problem-solving/path-to-raku: 115a26084f | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[10:50] <Geth> ¦ problem-solving/path-to-raku: Elaborate on IRC logging

[10:50] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/115a26084f

[10:56] <Geth> ¦ problem-solving/path-to-raku: dcd66a7be2 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[10:56] <Geth> ¦ problem-solving/path-to-raku: Suggest solution to .perl methods in non-core modules

[10:56] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/dcd66a7be2

[11:01] <Geth> ¦ problem-solving/path-to-raku: 0dc6534242 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:01] <Geth> ¦ problem-solving/path-to-raku: Elaborate on $*RAKU and Raku class

[11:01] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/0dc6534242

[11:04] <Geth> ¦ problem-solving/path-to-raku: 6b2ddf812f | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:04] <Geth> ¦ problem-solving/path-to-raku: Do **NOT** change "Perl5" where it's used

[11:04] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/6b2ddf812f

[11:09] <Geth> ¦ problem-solving/path-to-raku: 50f7697fd0 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:09] <Geth> ¦ problem-solving/path-to-raku: Defer versioning discussion

[11:09] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/50f7697fd0

[11:12] <Geth> ¦ problem-solving/path-to-raku: 998232afca | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:12] <Geth> ¦ problem-solving/path-to-raku: Elaborate on tagging

[11:12] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/998232afca

[11:14] <Geth> ¦ problem-solving/path-to-raku: 50c14e2157 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:14] <Geth> ¦ problem-solving/path-to-raku: Mention installers

[11:14] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/50c14e2157

[11:19] <Geth> ¦ problem-solving/path-to-raku: 24fddab779 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:19] <Geth> ¦ problem-solving/path-to-raku: Introduce concept of a migration guide

[11:19] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/24fddab779

[11:20] <discord6> <theangryepicbanana> @Aearnus I had asked if there were pre-existing Perl 6 bindings to the LLVM

[11:21] <discord6> <theangryepicbanana> but now I have a nativecall question: how do I represent an opaque struct in Perl 6

[11:22] *** pecastro joined
[11:24] *** robertle_ left
[11:27] <Geth> ¦ problem-solving/path-to-raku: 5789db03a6 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:27] <Geth> ¦ problem-solving/path-to-raku: Migration guide for book authors

[11:27] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/5789db03a6

[11:29] <Xliff> RaycatWhoDat: Yeah. I just found that out, myself.

[11:29] <Xliff> m: ^5.tail(3).say

[11:29] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesiz…»

[11:29] <evalable6> Xliff, Full output: https://gist.github.com/17ab346bc190a9de87dc8446adbd4229

[11:29] <Xliff> m: (^5).tail(3).say

[11:29] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «(2 3 4)␤»

[11:30] <Xliff> m: (^5).head(3).say

[11:30] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «(0 1 2)␤»

[11:30] <Xliff> m: (^5).head(3).pop.say

[11:30] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «(exit code 1) No such method 'pop' for invocant of type 'Seq'␤  in block <unit> at /tmp/PyXelriylE line 1␤␤»

[11:30] <Xliff> m: (^5).head(3).Array.pop.say

[11:30] <evalable6> Xliff, rakudo-moar b380fd207: OUTPUT: «2␤»

[11:30] <Geth> ¦ problem-solving/path-to-raku: 01efd7e39d | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:30] <Geth> ¦ problem-solving/path-to-raku: Follow suggestion on phrasing

[11:30] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/01efd7e39d

[11:31] <Xliff> \o lizmat!

[11:33] <Geth> ¦ problem-solving/path-to-raku: 813165ea04 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:33] <Geth> ¦ problem-solving/path-to-raku: More phrasing suggestions followed

[11:33] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/813165ea04

[11:38] *** satori__ left
[11:40] *** mowcat left
[11:45] <netrino> :qall

[11:45] <netrino> Sorry, wrong window

[11:48] *** dolmen joined
[11:58] *** pmurias joined
[12:00] <Kaiepi> ./t/01-monad.t .. ===SORRY!=== Error while compiling /home/morfent/Documents/p6-Monad/lib/Monad/MonadPunning.pm6 (Monad::MonadPunning)

[12:00] <Kaiepi> Undeclared routine:

[12:00] <Kaiepi>     require used at line 5

[12:00] <Kaiepi> wat

[12:01] <tadzik> :D

[12:01] <tadzik> to be fair I don't have it either

[12:01] <sena_kun> m: sub require() { 'pls god no'.say }; require;

[12:01] <evalable6> sena_kun, rakudo-moar b380fd207: OUTPUT: «pls god no␤»

[12:01] <tadzik> is it not a routine, but a statement?

[12:01] <tadzik> m: require Test;

[12:01] <evalable6> tadzik, rakudo-moar b380fd207: OUTPUT: «»

[12:02] <sena_kun> m: sub return($haha) { "pls god no $haha".say }; return 'more';

[12:02] <evalable6> sena_kun, rakudo-moar b380fd207: OUTPUT: «pls god no more␤»

[12:02] <tadzik> :>

[12:02] <Kaiepi> i have a line like `my $pun_meta := require Monad::ClassHOW;` that's causing this

[12:02] <Kaiepi> ohh wait

[12:03] <Kaiepi> nope, still throws the same error when it's `require ::("Monad::ClassHOW")` instead

[12:03] <pmurias> vrurg: I have fixed up the js backend after Makefile changes

[12:03] <tellable6> 2019-09-02T14:07:48Z #perl6-dev <vrurg> pmurias I'll try to handle JS backend makefile on my own but most likely you'd need to fix it afterwards. Perhaps if you can take care of python2.7 requirement for a node's module I would manage with it all on my own.

[12:06] <tadzik> Kaiepi: I don't think require is an expression

[12:06] <tadzik> yeah, it's a statement

[12:06] <tadzik> you can't use it as something that returns a value

[12:06] <tadzik> when you do, rakudo thinks you're calling a function

[12:06] <tadzik> what are you trying to do there?

[12:09] *** dakkar joined
[12:12] *** domidumont joined
[12:12] <Kaiepi> i'm trying to make it possible to pun monads (apply them to a class). the problem is i end up with a circular dependency between Monad::ClassHOW and Monad::MonadPunning unless i somehow pass the pun's HOW to it

[12:13] <Kaiepi> what i was doing there was seeing if lazily loading the modules would fix it, but it didn't

[12:13] *** lucasb joined
[12:14] <Kaiepi> the way rakudo does this with Metamodel::RolePunning is it has a configure_punning method that's called in src/Perl6/bootstrap.c/BOOTSTRAP.nqp, but i can't figure out how to port this to perl 6

[12:15] *** rindolf joined
[12:28] *** satori__ joined
[12:30] <jnthn> Just call it in the module mainline, so it's set up at load time of the moudle?

[12:33] <netrino> As there are seems to be more people now, maybe someone can help me with my question? https://colabti.org/irclogger/irclogger_log/perl6?date=2019-09-03#l43

[12:36] <netrino> Also, i've just encountered another issue. I'm trying to use Cro::HTTP::Client to do a web-request, a very simple one, such as Cro::HTTP::Client.get('https://google.com') but it just freezes at this line and sits like this for several minutes already. It appears that when i remove [s] from https it works instantly. Did anyone encountered similar issue? Is there a workaround? I'm using rakudo-star 2019.3.1 on

[12:36] <netrino> macos

[12:38] <timotimo> netrino: it could be that getting Cro::HTTP from the github repo, i.e. an unreleased version, fixes that

[12:40] <jnthn> Also try passing :http<1.1>

[12:41] *** netrino_ joined
[12:42] *** netrino left
[12:42] <netrino_> Thanks, i'll try that!

[12:43] <netrino_> Yup, :http<1.1> resolved the issue for me

[12:48] *** dolmen left
[12:48] *** dolmen joined
[12:55] *** [particle] joined
[13:02] *** pat_js joined
[13:13] *** pmurias left
[13:15] *** pmurias joined
[13:25] *** molaf joined
[13:34] *** lichtkind_ is now known as lichtkind

[13:36] *** ravenous_ joined
[13:56] *** titsuki joined
[13:58] <Xliff> If I have a lib in /usr/lib/i386-linux-gnu/gstreamer-1.0, how would I specify that to NativeCall?

[14:04] *** ravenous_ left
[14:12] *** Altai-man_ joined
[14:14] *** Altai-man_ left
[14:15] *** sena_kun left
[14:31] *** satori__ left
[14:34] <Grinnz> https://loudwire.com/maynard-james-keenan-new-tool-album-fantastic-eight-years-ago/ only took 13 years, rookies

[14:35] <Grinnz> posting because it was a familiar release process ;)

[14:38] *** pmurias left
[14:44] <tyil> \o/ my docker-perl6 stuff seems to be building again https://gitlab.com/tyil/docker-perl6/-/jobs/286503031

[14:44] <tyil> seems like the Configure.pl is no longer executable

[14:47] *** sauvin left
[14:52] *** mowcat joined
[14:53] *** Sgeo__ left
[14:54] *** aborazmeh joined
[14:54] *** aborazmeh left
[14:54] *** aborazmeh joined
[14:59] *** aborazmeh left
[15:02] *** vike left
[15:05] <El_Che> Keenan? Sounds like the p5p guy I met at YAPCE::Amsterdam :)

[15:06] <Grinnz> heh. he does share 2 of his 3 names

[15:07] <El_Che> (or maybe it was in Brussels. I don't know, getting old)

[15:09] *** atroxaper joined
[15:10] *** jmerelo joined
[15:12] <jmerelo> squashable6: next

[15:12] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 2 days and ≈12 hours (2019-09-07 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:12] <jmerelo> We're getting there!

[15:16] *** mowcat left
[15:19] <El_Che> AlexDaniel: I can not comment on https://github.com/perl6/problem-solving/pull/89/files/50c14e215714ba203610120ed916eaf0d7172e6c..24fddab7799f1d02e13f4a859895df997771c10b. Can you add a comment to also include p6-* repos?

[15:22] <AlexDaniel> El_Che: sorry, what was your github handle?

[15:22] <El_Che> nxadm

[15:22] <AlexDaniel> El_Che: can you leave a comment now?

[15:23] *** vike joined
[15:23] *** domidumont left
[15:24] <El_Che> let me check

[15:25] <lucasb> I think any p6/perl6 prefix or suffix is already implied in that idea :)

[15:25] <[Coke]> jmerelo: you here?

[15:26] <El_Che> it is, but AlexDaniel and co want practical aand explicit info :)

[15:26] <Geth> ¦ doc: JJ assigned to antoniogamiz Issue Some pages are not linked from language.html https://github.com/perl6/doc/issues/2997

[15:28] <El_Che> AlexDaniel: thx, I added the comment

[15:29] <jmerelo> [Coke]: right

[15:30] <jmerelo> [Coke]: at your service

[15:30] <[Coke]> so I think we're talking past each other on those tickets.

[15:30] <[Coke]> You have a minute to chat here?

[15:30] <jmerelo> [Coke]: of course.

[15:31] * jmerelo also sorry about all the problems caused. There's light at the end, though :-)

[15:31] <[Coke]> so, I understand you're trying to split things into two repos (docs vs. tooling)

[15:31] <jmerelo> [Coke]: more than that

[15:32] <[Coke]> but the way things are today, I start with the docs, and then while in that repo, run the tooling. So, from this standpoint, the tools are a(n undocumented) pre-req of the docs (for building the site.)

[15:32] <Xliff> Anybody around to proof? 

[15:32] <[Coke]> (additionally, the previous way to run the old tools (make) was removed instead of being updated)

[15:32] <Xliff> https://gist.github.com/Xliff/d426039cc162e1cb84d1b7f8067fe9fb

[15:32] <jmerelo> [Coke]: the fact that everything was so closely coupled was causing all kinds of problem.

[15:32] *** |oLa| left
[15:33] <jmerelo> [Coke]: it was updated. Only in a different repository.

[15:33] <[Coke]> so, understanding you have more steps... what is your future state here? If someone wants to build the site, what are they doing? If I knew where you were going (that is apparently different from what I'm expecting), I would be less frustrated about the current broken setup

[15:33] <jmerelo> [Coke]: the split is at the bottom of the roadmap.

[15:34] <[Coke]> jmerelo: I just told you the steps I used and how they're broken: how are *you* doing the builds that this isn't an issue?

[15:34] <jmerelo> [Coke]: The instructions are in the README.md: https://github.com/perl6/doc#building-the-html-documentation

[15:34] <[Coke]> I understand that Documentable is in a separate repo: that's the problem with the build step I'm trying to fix.

[15:35] <jmerelo> [Coke]: IIRC, with the latest (non-released) version of documentable everything was working correctly on a Mac?

[15:35] <[Coke]> Yes. the documentation that says to use the 'documentable' script but with no directions on how to install it. we have a way to indicate that declaratively in META6.json, which you're against, which is what I'm trying to understand/fix

[15:36] <[Coke]> jmerelo: I never got as far as going back to do the build once I installed Pod::To::Cached by hand.

[15:36] <jmerelo> [Coke]: but please understand that one of the fundamental differences is that we don't intend people installing the documentation to want, or even be able, to build HTML and serve it.

[15:36] <[Coke]> So make it an optional prereq.

[15:37] <jmerelo> [Coke]: OK, I'll create an issue for that. 

[15:37] <[Coke]> or at the worst, give instructions on how to install it as part of that section of code. (but having it declared rather than in docs is better)

[15:37] <jmerelo> [Coke]: right now, if you want to build the documentation you need to able to: install perl and Mojolicious. Install node. You need node even if you don't want to serve the pages.

[15:38] <jmerelo> [Coke]: I think we'll do that.

[15:38] <jmerelo> [Coke]: take into account that, now, node *and* perl are prerrequisites for building the documentation (and highlighing). That can't even be listed in META6.json

[15:39] <[Coke]> I understand, but I'd rather have as much as possible declared.

[15:40] <jmerelo> [Coke]: that's (one of the reasons) we want to split all the non-essential tooling (meaning: not needed to test the documentation) 

[15:40] <jmerelo> [Coke]: eventually, documentable will need to be listed as a dependency, since tests will depend on it. But that's further down the roadmap.

[15:41] <jmerelo> [Coke]: (also it will be a test dependency, and all site-building tools will be split off)

[15:44] *** Geth left
[15:45] *** Geth joined
[15:45] <jmerelo> [Coke]: fittingly, it's got the 3k ID: https://github.com/perl6/doc/issues/3000

[15:47] *** molaf left
[15:48] <Geth> ¦ ecosystem/JJ-patch-6: 95fb50c84a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[15:48] <Geth> ¦ ecosystem/JJ-patch-6: Switches to new version

[15:48] <Geth> ¦ ecosystem/JJ-patch-6: 

[15:48] <Geth> ¦ ecosystem/JJ-patch-6: This version is community-maintained as part of the perl6 repos. It also contains a new version, 0.3.5

[15:48] <Geth> ¦ ecosystem/JJ-patch-6: review: https://github.com/perl6/ecosystem/commit/95fb50c84a

[15:49] <Geth> ¦ ecosystem: JJ++ created pull request #467: Switches to new version

[15:49] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/467

[15:49] *** |oLa| joined
[15:52] <Geth> ¦ ecosystem: 95fb50c84a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[15:52] <Geth> ¦ ecosystem: Switches to new version

[15:52] <Geth> ¦ ecosystem: 

[15:52] <Geth> ¦ ecosystem: This version is community-maintained as part of the perl6 repos. It also contains a new version, 0.3.5

[15:52] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/95fb50c84a

[15:52] <Geth> ¦ ecosystem: 1232e84e86 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[15:52] <Geth> ¦ ecosystem: Merge pull request #467 from perl6/JJ-patch-6

[15:52] <Geth> ¦ ecosystem: 

[15:52] <Geth> ¦ ecosystem: Switches to new version

[15:52] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/1232e84e86

[15:53] *** Actualeyes left
[15:56] *** abraxxa left
[15:56] *** cpan-p6 left
[15:56] *** ChoHag left
[15:56] *** cpan-p6 joined
[15:56] *** cpan-p6 left
[15:56] *** cpan-p6 joined
[15:58] *** ChoHag joined
[16:05] *** sena_kun joined
[16:11] *** pat_js left
[16:15] *** dolmen left
[16:17] <Geth> ¦ doc: 27490b39a1 | (JJ Merelo)++ | 3 files

[16:17] <Geth> ¦ doc: Adds detailed instructions for generating HTML

[16:17] <Geth> ¦ doc: 

[16:17] <Geth> ¦ doc: Refs #3000

[16:17] <Geth> ¦ doc: 

[16:17] <Geth> ¦ doc: Also eliminates some trailing whitespace (and reflow) found while testing.

[16:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/27490b39a1

[16:18] <jmerelo> Anyone around can help testing instructions?

[16:19] <jmerelo> Can someone please check https://github.com/perl6/doc#building-the-html-documentation and tell me if it works?

[16:20] <Geth> ¦ doc: 36a9fe7adf | (JJ Merelo)++ | README.md

[16:20] <Geth> ¦ doc: Clarification about update

[16:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/36a9fe7adf

[16:21] <sena_kun> No candidates found matching identity: documentable

[16:22] <sena_kun> s/documentable/Documentable/

[16:22] <jmerelo> sena_kun: right. Thanks.

[16:22] <sena_kun> jmerelo, I am continuing with the process...

[16:23] <Geth> ¦ doc: 4910b10c71 | (JJ Merelo)++ | README.md

[16:23] <Geth> ¦ doc: Fixes error, thanks @altaiman, refs #3000

[16:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4910b10c71

[16:23] <jmerelo> sena_kun++

[16:24] *** molaf joined
[16:28] <jmerelo> .tell [Coke] Can you please try the new instructions?

[16:28] <tellable6> jmerelo, I'll pass your message to [Coke]

[16:28] *** ravenous_ joined
[16:30] <sena_kun> jmerelo, I am not sure if it can be an issue, but I see that Documentable has `Pod::To::HTML:ver<0.6.2+` in dependencies, but the version in the p6c is `Found: Pod::To::HTML:ver<0.6.2>:auth<Perl 6>`, and then zef just hangs.

[16:30] <[Coke]> .

[16:31] <[Coke]> ... why did tellable6 not tell me anything just there?

[16:31] <sena_kun> [Coke], it is smart enough to know that you are in the channel and wanted to drop the message you saw

[16:31] *** Black_Ribbon joined
[16:32] <jmerelo> sena_kun: shouldn't that be OK? Or the + excludes the current version? Also, shouldn't it say something like "not found"?

[16:32] <sena_kun> the same for Perl6::TypeGraph, version is 2.1.1, but Documentable wants 2.1.1+.

[16:32] <sena_kun> jmerelo, no idea, I just see that zef hangs. :(

[16:33] <sena_kun> maybe it's unrelated

[16:33] *** ravenous_ left
[16:36] *** Cabanossi left
[16:36] <jmerelo> m: say say v1.0 ~~ v1.0+;

[16:36] <evalable6> jmerelo, rakudo-moar 17d036ad4: OUTPUT: «True␤True␤»

[16:36] <jmerelo> m: say v1.0 ~~ v1.0+;

[16:36] <evalable6> jmerelo, rakudo-moar 17d036ad4: OUTPUT: «True␤»

[16:37] <sena_kun> I guess my network is crap, because `zef install Pod::Utilities" was hanging too, and now it worked

[16:38] *** cxreg joined
[16:41] <jmerelo> The new Pod::To::Cached seems to be already available in the ecosystem

[16:42] <jmerelo> And we're back to random test errors: https://travis-ci.org/perl6/doc/builds/580318750?utm_medium=notification&utm_source=email

[16:44] *** sauvin joined
[16:46] <Xliff> jmerelo: Pod::To::Cached is not listed as a dependency in META6.json

[16:47] <Xliff> Actually... it is, but tests are failing because it didn't get installed?!?

[16:50] *** Cabanossi joined
[16:54] <jmerelo> Xliff: no, I think the problem is that the zef cache is not updated there.

[16:56] <jmerelo> Xliff: however, I don't understand why the message issued by zef is not more informative... That leads to confusion.

[16:57] *** grayrider joined
[16:57] <jmerelo> Xliff: that's why Travis, with a different configuration, did not fail https://travis-ci.org/perl6/Documentable/builds

[16:59] * sena_kun was able to install Documentable

[17:00] <jmerelo> sena_kun++

[17:00] <sena_kun> jmerelo, do commands like `make assets` have to be executed from clone of doc repo?

[17:00] <jmerelo> sena_kun: right. Is that not clear in the docs?

[17:01] *** [Sno] joined
[17:01] <sena_kun> jmerelo, well, I was able to guess that, but giving that a lot of people contribute with a different background, I'd write it

[17:01] <Geth> ¦ doc: 25906f2deb | (JJ Merelo)++ | README.md

[17:01] <Geth> ¦ doc: Clarify where make assets has to be run

[17:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/25906f2deb

[17:02] <jmerelo> sena_kun^^^

[17:02] *** |oLa| left
[17:03] <atroxaper> Just now I can not install Documentable - Could not find Pod::To::Cached

[17:04] <jmerelo> atroxaper: the new version was just released. Maybe do "zef update" and try again?

[17:04] <Geth> ¦ doc: 6695ae7215 | Altai-man++ (committed using GitHub Web editor) | README.md

[17:04] <Geth> ¦ doc: Add clonning commands

[17:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6695ae7215

[17:06] <atroxaper> jmerelo: not yet I think. Do not work after zef update for now.

[17:07] <jmerelo> atroxaper: what does zef search Pod::To::Cached return?

[17:09] <atroxaper> jmerelo: 0.3.3 in local; 0.3.5 in ecosystem

[17:09] <jmerelo> atroxaper: so it should be able to install that...

[17:09] <atroxaper> Zef::Repository::Ecosystems<p6c>|Pod::To::Cached:ver<0.3.5>:auth<finanalyst>

[17:09] <atroxaper> Zef::Repository::LocalCache     |Pod::To::Cached:ver<0.3.3>

[17:10] <atroxaper> jmerelo: Does auth matters?

[17:11] <jmerelo> atroxaper: it might... 

[17:12] <atroxaper> sena_kun: I wrote you an email about CommaIDE bugs a couple hours ago. Please take a look ^^

[17:12] <sena_kun> atroxaper, writing an answer right now. :)

[17:15] * sena_kun was able to successfully build docs and peek at the local website

[17:16] <sena_kun> Whole process has taken 545.9691593 seconds

[17:16] <jmerelo> sena_kun: great! That's a bit slow, though. 

[17:17] <jmerelo> sena_kun: I'm kind of mystified with the Pod::To::Cached thing. I've eliminated the "auth" field to see if it's not finding it for that reason... I just added it because comma advised me to do it.

[17:18] <sena_kun> jmerelo, you mean that it "kind of" caused zef to hang as I wrote before? that was a lie, it's just that my network right now is beyond horrible

[17:19] *** pecastro left
[17:19] <jmerelo> No, the fact that the "old" Pod::To::Cached didn't have auth, and now it does, and it seems like it's unable to find it or something...

[17:20] <jmerelo> sena_kun: yet it's not reporting anything...

[17:22] <jmerelo> atroxaper: can you please just install Pod::To::Cached to see which version is downloaded and installed?

[17:22] <atroxaper> jmerelo: 0.3.3

[17:23] <jmerelo> atroxaper: can you please uninstall and install it anew?

[17:23] <atroxaper> Sure

[17:23] <jmerelo> atroxaper: anyway, that version should work in Linux; 0.3.5 fixes stuff in OSx...

[17:24] <jmerelo> atroxaper: try and install documentable after installing Pod::To::Cached...

[17:24] <atroxaper> jmerelo: I use a Mac actually ^^

[17:25] <atroxaper> jmerelo: uninstall -> update -> install -> got 0.3.3

[17:25] *** Kaiepi left
[17:26] <jmerelo> atroxaper: it's maybe taking it from the local cache... which still contains it.

[17:26] *** Kaiepi joined
[17:27] <atroxaper> zef install "Pod::To::Cached:ver<0.3.5>:auth<finanalyst>" -> got 0.3.3(!)

[17:27] <jmerelo> atroxaper: try that with --/cached?

[17:28] <atroxaper> jmerelo: zef install "Pod::To::Cached" --/cached -> 0.3.3

[17:28] <jmerelo> atroxaper: (also, maybe raise an issue with zef. I don't think this is how it should work)

[17:28] * jmerelo throws hands up in despair

[17:29] <jmerelo> (not to mention --/cached is not documented, but mentioned in an issue)

[17:30] *** mowcat joined
[17:30] <jmerelo> atroxaper: apparently there's a config.json for zef somewhere, which you can change to avoid local cache... Other than that...

[17:31] <[Coke]> jmerelo: new instructions seem fine. (noting that I haven't verified that Pod::To::Cached installs correctly, I installed that via a clone of the repo)

[17:31] <jmerelo> atroxaper: some tips here: https://github.com/ugexe/zef/issues/179

[17:32] <jmerelo> [Coke]: we still have trouble with that... And I really don't understand why. See above.

[17:32] <jmerelo> [Coke]: Thanks anyway for checking that.

[17:34] *** kamog left
[17:41] <Xliff> m: '🙉'.ord.say

[17:41] <evalable6> Xliff, rakudo-moar 17d036ad4: OUTPUT: «128585␤»

[17:41] <Xliff> m: '◒'.ord.say

[17:41] <evalable6> Xliff, rakudo-moar 17d036ad4: OUTPUT: «9682␤»

[17:42] *** aborazmeh joined
[17:42] *** aborazmeh left
[17:42] *** aborazmeh joined
[17:43] *** wildtrees joined
[17:48] *** jaldhar_ left
[17:54] <atroxaper> jmerelo: created an issue https://github.com/ugexe/zef/issues/313

[17:57] *** atroxaper left
[17:57] *** atroxaper joined
[17:58] <jmerelo> atroxaper: thanks!

[17:59] <jmerelo> atroxaper: the question is that the 0.3.3 version does not even have that auth field...

[18:00] *** aborazmeh left
[18:02] *** pecastro joined
[18:04] <jmerelo> Just realized zef hasn't changed since April...

[18:05] *** ravenous_ joined
[18:05] *** dakkar left
[18:11] *** aborazmeh joined
[18:11] *** aborazmeh left
[18:11] *** aborazmeh joined
[18:23] *** pecastro left
[18:25] *** pecastro joined
[18:31] *** pecastro left
[18:32] *** sauvin left
[18:32] *** domidumont joined
[18:34] *** pecastro joined
[18:37] *** domidumont left
[18:42] *** domidumont joined
[18:48] *** jmerelo left
[19:03] *** aborazmeh left
[19:10] *** aborazmeh joined
[19:10] *** aborazmeh left
[19:10] *** aborazmeh joined
[19:12] *** domidumont left
[19:20] *** Kaiepi left
[19:25] *** netrino_ left
[19:30] *** aborazmeh left
[19:37] *** aborazmeh joined
[19:37] *** aborazmeh left
[19:37] *** aborazmeh joined
[19:37] *** aborazmeh left
[19:41] *** aborazmeh joined
[19:41] *** aborazmeh left
[19:42] *** Ven`` joined
[19:43] <discord6> <theangryepicbanana> wait it hasn't?

[19:44] <discord6> <theangryepicbanana> wow it hasn't

[19:46] *** aborazmeh joined
[19:46] *** aborazmeh left
[19:46] *** aborazmeh joined
[19:47] *** Ven`` left
[19:49] *** epony left
[19:55] *** aborazmeh left
[19:57] <[Coke]> tell jmerelo yup, 'zef install Pod::To::Cached' finds 0.3.5 and then fails the tests.

[19:57] <[Coke]> .tell jmerelo yup, 'zef install Pod::To::Cached' finds 0.3.5 and then fails the tests, still

[19:57] <tellable6> [Coke], I'll pass your message to jmerelo

[20:01] *** dolmen joined
[20:03] <Juerd> What is QX (uppercase)?

[20:07] <sena_kun> Juerd, as in? `X` is proably cross operator, but Q is a quote, so... what's the context?

[20:10] *** f0x joined
[20:10] *** wamba joined
[20:10] <Juerd> &Proc::QX

[20:10] <Juerd> It exists and someone at the hackerspace has it in old Perl 6 code

[20:10] <Juerd> But it's not documented, there's no roast test for it

[20:11] <Juerd> And it seems fully redundant with qx//

[20:11] <sena_kun> ah

[20:12] <sena_kun> bisectable6, Proc::QX

[20:12] <bisectable6> sena_kun, Bisecting by output (old=2015.12 new=17d036a) because on both starting points the exit code is 1

[20:13] <bisectable6> sena_kun, bisect log: https://gist.github.com/0a0f6f950acd2af718bc1087827ea132

[20:13] <bisectable6> sena_kun, (2017-06-07) https://github.com/rakudo/rakudo/commit/e538cbc5464447c4a0cf217119a9ff30bd74d765

[20:22] *** ravenous_ left
[20:24] *** sena_kun left
[20:28] *** pmurias_ joined
[20:32] *** pecastro_ joined
[20:32] *** cpage_ joined
[20:34] *** pmurias_ left
[20:35] *** pecastro left
[20:35] *** cpage_ is now known as cpage

[20:35] *** pecastro_ left
[20:42] *** pmurias joined
[20:43] *** dolmen left
[20:43] *** Ven`` joined
[20:49] *** dolmen joined
[20:55] *** mowcat left
[20:56] <AlexDaniel> 6c: Proc::QX

[20:56] <committable6> AlexDaniel, https://gist.github.com/2911fc7bca048df9b5a353895f167613

[21:05] <cpan-p6> New module released to CPAN! LibXML (0.0.2) by 03WARRINGD

[21:08] *** netrino joined
[21:10] *** robertle left
[21:10] *** Cabanossi left
[21:17] *** Cabanossi joined
[21:17] *** Kaiepi joined
[21:24] *** sftp left
[21:27] *** dolmen left
[21:29] *** Ven`` left
[21:50] *** [particle]1 joined
[21:51] *** wamba left
[21:51] *** [particle] left
[21:51] *** wamba joined
[22:09] *** sftp joined
[22:22] *** [particle]2 joined
[22:23] <cpan-p6> New module released to CPAN! LibXML (0.0.3) by 03WARRINGD

[22:24] *** [particle]1 left
[22:28] *** Itaipu_ left
[22:33] *** Itaipu joined
[22:44] <discord6> <RaycatWhoDat> Weird question but is there a way to instantiate a variable with the results of a block?

[22:45] <discord6> <RaycatWhoDat> Ideally, I'd like to do something like my $forSum = for @numbers { $forSum + $_ };

[22:45] <discord6> <RaycatWhoDat> (invalid syntax but, bear with me)

[22:51] *** pmurias left
[22:51] <jnthn> my @results = do for @numbers { $forSum + $_ }

[22:51] <jnthn> Alternatively spelled: my @results = @numbers.map($forSum + *)

[22:52] *** rindolf left
[22:55] *** satori__ joined
[22:55] <discord6> <RaycatWhoDat> Oh, sweet. Thanks.

[22:57] <AlexDaniel> c: all Proc::QX

[22:58] <committable6> AlexDaniel, https://gist.github.com/019478421099dfe4c016f1cf941ee5ac

[23:01] *** wamba left
[23:30] *** Sgeo joined
[23:39] *** Hrmmmmm joined
[23:40] *** Sgeo_ joined
[23:41] *** Sgeo left
[23:42] *** Hrmmmmm left
[23:43] *** lucasb left
