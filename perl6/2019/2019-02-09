[00:02] <Geth> ¦ ecosystem: 98e71400c3 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[00:02] <Geth> ¦ ecosystem: Add module  to the list

[00:02] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/98e71400c3

[00:02] <AlexDaniel> timotimo: am I going to get in trouble for this?

[00:06] <jnthn> Only if you also submit a Rakudo patch to make `use ;` valid :P

[00:06] *** random_yanek left
[00:07] <AlexDaniel> jnthn: this module has tests. It installs correctly

[00:07] <AlexDaniel> it's not `use ;` but it does work

[00:07] <timotimo> hmm

[00:07] <timotimo> well, it still has a full name that's longer than just ""

[00:07] <AlexDaniel> timotimo: what do you mean? It's ""

[00:08] <timotimo> :auth<blah>:ver<bloop>

[00:08] <AlexDaniel> eh, right

[00:08] <timotimo> m: use :auth<*>:ver<*>

[00:08] <camelia> rakudo-moar d904b7048: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    use used at line 1 (in Perl 6 please use "v" prefix for pragma (e.g., "use v6;", "use v6.c;") instead)␤␤»

[00:09] <jnthn> m: use ::(''):auth<*>:ver<*>

[00:09] <camelia> rakudo-moar d904b7048: OUTPUT: «===SORRY!===␤Could not find :ver<*>:auth<*> at line 1 in:␤    inst#/home/camelia/.perl6␤    inst#/home/camelia/rakudo-m-inst-2/share/perl6/site␤    inst#/home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    inst#/home/camelia/rakudo-m-inst-2/…»

[00:09] <timotimo> nice

[00:10] <squashable6> 🍕 AlexDaniel++ labeled issue “Bench” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/346

[00:10] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Bench”: https://github.com/perl6/ecosystem-unbitrot/issues/346#issuecomment-461989222

[00:11] <AlexDaniel> btw that's not the only offensive module I have, there's also https://github.com/AlexDaniel/foo-dotdotslash

[00:11] <AlexDaniel> which, yeah, works exactly as you'd expect on https://modules.perl6.org/

[00:12] <AlexDaniel> so please slap me if these cause problems for you

[00:14] *** zengargoyle left
[00:21] *** pmurias left
[00:22] *** random_yanek joined
[00:25] *** pecastro left
[00:29] *** Cabanossi left
[00:32] *** Cabanossi joined
[00:41] *** w_richard_w joined
[00:46] *** w_richard_w left
[00:46] *** Kaiepi left
[00:47] *** Kaiepi joined
[00:50] *** zachk left
[00:52] *** w_richard_w joined
[01:07] *** mowcat joined
[01:10] *** cydf left
[01:11] *** woolfy1 left
[01:11] *** woolfy joined
[01:17] <vrurg> Interesting fact: by 'c3mro' query to google the third line is Metamodel::C3MRO.

[01:23] *** zacts joined
[01:34] *** Kaiepi left
[01:36] *** Kaypie joined
[01:42] *** Sgeo__ joined
[01:45] *** Sgeo_ left
[01:50] *** zengargoyle joined
[02:10] *** markoong left
[02:11] *** zacts left
[02:14] <SmokeMachine> vrurg: for me it was the first...

[02:23] <vrurg> SmokeMachine: turns out to be language dependent. I have first two results from a JS repo of a cyrillic user.

[02:29] *** zengargoyle left
[02:30] <Kaypie> m: use NativeCall; class Foo is repr('CStruct') { has CArray[uint32] @.foo[4]; }

[02:30] <camelia> rakudo-moar d904b7048: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤CStruct representation only handles attributes of type:␤  (u)int8, (u)int16, (u)int32, (u)int64, (u)long, (u)longlong, num32, num64, (s)size_t, bool, Str␤  and types with representation: CArray, CPo…»

[02:31] <timotimo> Kaypie: that describes an Array of CArray

[02:31] <Kaypie> oh right

[02:31] *** Kaypie is now known as Kaiepi

[02:31] <Kaiepi> m: use NativeCall; class Foo is repr('CStruct') { has @.foo[4] is CArray[uint32]; }

[02:31] <camelia> rakudo-moar d904b7048: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is' -> 'unknown subtype' in an attribute declaration.␤at <tmp>:1␤    expecting any of:␤        rw␤        readonly␤        box_target␤        leading_docs␤        …»

[02:34] *** cpan-p6_ left
[02:34] <Kaiepi> if i have a struct like struct Foo { uint8_t Kr[16]; }, in the perl part of the code, will struct Foo is repr('CStruct') { has CArray[uint8] $.Kr } give the correct size of Kr?

[02:34] *** cpan-p6 joined
[02:40] <timotimo> i know you can somehow do it

[02:41] <timotimo>     HAS int32 @.b[3] is CArray;

[02:42] <timotimo> that is from the test suite

[02:42] <Kaiepi> ahh

[02:42] <Kaiepi> perfect

[02:42] <Kaiepi> thanks

[02:45] *** zacts joined
[02:46] *** jme` joined
[03:22] *** zacts left
[03:50] *** molaf joined
[04:13] *** leont left
[04:25] *** [particle]1 joined
[04:27] *** [particle] left
[05:13] *** rindolf joined
[05:19] *** w_richard_w left
[05:27] *** mowcat left
[05:29] *** jme` left
[05:31] *** richieBoy joined
[05:32] <richieBoy> \help

[05:32] <richieBoy> \Help

[05:33] *** richieBoy left
[05:48] *** tyil left
[05:49] *** discord61 joined
[05:49] *** cpan-p6_ joined
[05:49] *** discord6 left
[05:50] *** discord61 is now known as discord6

[05:58] <squashable6> 🍕 titsuki++ wrote a comment on “MeCab”: https://github.com/perl6/ecosystem-unbitrot/issues/471#issuecomment-462017112

[05:58] <squashable6> 🍕🍕🍕  First contribution by titsuki++! ♥

[06:06] *** cpan-p6 left
[06:11] *** tyil joined
[06:16] *** jme` joined
[06:45] *** sauvin joined
[06:48] <squashable6> 🍕 PowellDean++ wrote a comment on “Locale-Codes-Country”: https://github.com/perl6/ecosystem-unbitrot/issues/455#issuecomment-462019693

[06:48] <squashable6> 🍕🍕🍕  First contribution by PowellDean++! ♥

[06:49] *** Kaiepi left
[06:50] *** Kaiepi joined
[06:52] *** sauvin left
[06:54] <squashable6> 🍕 lukasvalle++ wrote a comment on “Web::Scraper”: https://github.com/perl6/ecosystem-unbitrot/issues/541#issuecomment-462019954

[06:54] <squashable6> 🍕 lukasvalle++ unlabeled issue “Web::Scraper” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/541

[06:56] *** andrzejku_ joined
[06:59] *** isomorphismes left
[06:59] <andrzejku_> hey

[07:00] <andrzejku_> I want to write again about that 3rdparty issue

[07:00] <andrzejku_> I am downloading release and then I want to build it separately

[07:00] <andrzejku_> moarvm nqp and rakudo

[07:00] <andrzejku_> is it possible to attach 3rdparty?

[07:03] *** jmerelo joined
[07:04] <andrzejku_> ah shit :D

[07:05] <andrzejku_> there is a message

[07:05] <andrzejku_> to download it form site

[07:05] <andrzejku_> srry

[07:06] *** isomorphismes joined
[07:07] <squashable6> 🍕 lukasvalle++ labeled issue “Web::Scraper” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/541

[07:07] <squashable6> 🍕 lukasvalle++ wrote a comment on “Web::Scraper”: https://github.com/perl6/ecosystem-unbitrot/issues/541#issuecomment-462020709

[07:18] <squashable6> 🍕 JJ++ wrote a comment on “jmp”: https://github.com/perl6/ecosystem-unbitrot/issues/551#issuecomment-462021296

[07:41] *** ufobat___ joined
[07:45] *** lizmat_ left
[07:46] <Geth> ¦ ecosystem: 7a86d97534 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[07:46] <Geth> ¦ ecosystem: Releasing a new "auth" version

[07:46] <Geth> ¦ ecosystem: 

[07:46] <Geth> ¦ ecosystem: With pull requests admitted and bumped up.

[07:46] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/7a86d97534

[07:46] *** andrzejku__ joined
[07:48] *** andrzejku_ left
[07:48] <squashable6> 🍕 JJ++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462022952

[07:49] <squashable6> 🍕 JJ++ labeled issue “Terminal::Print” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/526

[07:50] *** isomorphismes left
[07:52] <squashable6> 🍕 JJ++ labeled issue “Terminal::Print” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/526

[07:52] <squashable6> 🍕 JJ++ labeled issue “jmp” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/551

[07:55] <squashable6> 🍕 JJ++ wrote a comment on “WebService::FootballData”: https://github.com/perl6/ecosystem-unbitrot/issues/542#issuecomment-462023388

[07:56] <squashable6> 🍕 JJ++ labeled issue “WebService::FootballData” (deprecated module): https://github.com/perl6/ecosystem-unbitrot/issues/542

[07:56] <squashable6> 🍕 JJ++ wrote a comment on “WebService::FootballData”: https://github.com/perl6/ecosystem-unbitrot/issues/542#issuecomment-462023424

[07:59] <squashable6> 🍕 ufobat++ wrote a comment on “HTTP::Server::Ogre”: https://github.com/perl6/ecosystem-unbitrot/issues/418#issuecomment-462023537

[08:05] *** andrzejku__ left
[08:10] <squashable6> 🍕 JJ++ wrote a comment on “PDF::Class”: https://github.com/perl6/ecosystem-unbitrot/issues/492#issuecomment-462024166

[08:11] *** sauvin joined
[08:13] *** sauvin left
[08:14] <jmerelo> .tell AlexDaniel for next unbitrot, I would say it's better we focus on distros that have some dependency. There are too many failing ones, and maybe we're focusing some that have no relevancy or have been abandoned by authors.

[08:14] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[08:14] *** sauvin joined
[08:22] <squashable6> 🍕 JJ++ wrote a comment on “License::Software”: https://github.com/perl6/ecosystem-unbitrot/issues/452#issuecomment-462024894

[08:30] *** lizmat joined
[08:43] *** robertle joined
[08:48] *** molaf left
[09:18] *** Ven`` left
[09:19] *** ExtraCrispy joined
[09:27] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Lumberjack”: https://github.com/perl6/ecosystem-unbitrot/issues/458#issuecomment-462028869

[09:36] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Lumberjack::Dispatcher::Syslog”: https://github.com/perl6/ecosystem-unbitrot/issues/460#issuecomment-462029469

[09:38] *** cpan-p6_ left
[09:38] *** cpan-p6 joined
[09:38] <cpan-p6> New module released to CPAN! Lumberjack (0.0.8) by 03JSTOWE

[09:47] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Lumberjack::Application”: https://github.com/perl6/ecosystem-unbitrot/issues/459#issuecomment-462030137

[09:53] <squashable6> 🍕 JJ++ labeled issue “Pluggable” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/502

[10:09] *** sena_kun joined
[10:12] <AlexDaniel> o/

[10:12] <yoleaux> 08:14Z <jmerelo> AlexDaniel: for next unbitrot, I would say it's better we focus on distros that have some dependency. There are too many failing ones, and maybe we're focusing some that have no relevancy or have been abandoned by authors.

[10:13] <AlexDaniel> for the next unbitrot there'd be like 10 times less modules

[10:13] <AlexDaniel> so don't worry about that

[10:15] <AlexDaniel> (because this time we're not closing issues)

[10:18] <AlexDaniel> timotimo: heh I can't click on the module. Even this link doesn't work: https://modules.perl6.org/dist/:github:Aleks-Daniel%20Jakimenko-Aleksejev

[10:19] *** cydf joined
[10:19] *** cydf left
[10:29] *** eseyman left
[10:29] <jmerelo> AlexDaniel: I'm back

[10:29] <jmerelo> Pluggable is a pain

[10:35] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Lumberjack”: https://github.com/perl6/ecosystem-unbitrot/issues/458#issuecomment-462032978

[10:39] <squashable6> 🍕 AlexDaniel++ wrote a comment on “MeCab”: https://github.com/perl6/ecosystem-unbitrot/issues/471#issuecomment-462033223

[10:43] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Locale-Codes-Country”: https://github.com/perl6/ecosystem-unbitrot/issues/455#issuecomment-462033426

[10:46] *** SCHAPiE left
[10:48] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462033697

[10:48] <squashable6> 🍕 JJ++ labeled issue “Pluggable” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/502

[10:49] <ufobat___> anyone got an idea what's happening here: https://travis-ci.org/ufobat/HTTP-Server-Ogre/jobs/490888179#L1027 because IO::Glob actually works on my box

[10:50] <squashable6> 🍕 JJ++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462033832

[10:50] * lizmat has other commitments today and won't be able to do much online in the next 20 hours or so

[10:51] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462033945

[10:52] *** Kaiepi left
[10:52] <squashable6> 🍕 JJ++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462033975

[10:53] *** Kaiepi joined
[10:53] <AlexDaniel> jmerelo: be careful with that one

[10:53] <AlexDaniel> jmerelo: the author intentionally used a whitelist

[10:54] <jmerelo> AlexDaniel: Terminal::Print?

[10:54] <AlexDaniel> yeah

[10:54] <jmerelo> AlexDaniel: as a matter of fact, it's using run, not qq:x

[10:55] <jmerelo> AlexDaniel: comment is wrong

[10:55] <jmerelo> https://github.com/JJ/Terminal-Print/blob/f35f679e403e794250d46b273da2ab2d9a417930/lib/Terminal/Print/Commands.pm6#L47

[10:55] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462034169

[10:56] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462034227

[10:57] <squashable6> 🍕 JJ++ wrote a comment on “Terminal::Print”: https://github.com/perl6/ecosystem-unbitrot/issues/526#issuecomment-462034309

[11:02] <squashable6> 🍕 AlexDaniel++ wrote a comment on “PDF::Class”: https://github.com/perl6/ecosystem-unbitrot/issues/492#issuecomment-462034658

[11:04] *** markoong joined
[11:07] <squashable6> 🍕 JJ++ wrote a comment on “PDF::Class”: https://github.com/perl6/ecosystem-unbitrot/issues/492#issuecomment-462035072

[11:08] <squashable6> 🍕 JJ++ wrote a comment on “PDF::Class”: https://github.com/perl6/ecosystem-unbitrot/issues/492#issuecomment-462035162

[11:09] *** SCHAPiE joined
[11:10] <AlexDaniel> 24 minutes to test a module? Uhhhh… I don't know…

[11:10] <AlexDaniel> I don't want to double the limit in Blin…

[11:11] <jmerelo> AlexDaniel: just skip it, then... I don't think it's reasonable either to tell the moduleer to skip half their tests

[11:12] <AlexDaniel> is it?

[11:12] <AlexDaniel> any user who wants to install that module will have to wait as much

[11:13] <AlexDaniel> maybe it makes sense to move some of the tests to xt/ ?

[11:15] <jmerelo> AlexDaniel: that's up to the moduleer. You can't ask them to change for that reason. I mean, you can, but they probably have a good reason for that.

[11:16] <jmerelo> AlexDaniel: If I had to set some limit, it would have the 50 minutes Travis sets on their modules. Less than that, you're asking them to adjust to an arbitrary limit you've set yourself.

[11:17] <jmerelo> AlexDaniel: you can also special-case it, if you don't want it blacklisted (or whitelisted)

[11:17] <jmerelo> AlexDaniel: and as a matter of fact, you probably would need to triple it, not double :-)

[11:18] <AlexDaniel> Blin tests on the new revision and if that fails, then it tests on the old revision… if that succeeds, it then runs it on new *4* times to make sure it's not a flapper

[11:19] <AlexDaniel> and then it bisects, which is like 11 or 12 commits to test?

[11:19] <AlexDaniel> so with 50 minute limit that's like 15 hours

[11:19] <jmerelo> AlexDaniel: then your limit makes sense, and I understand you don't want to change that. You should just skip that distro then.

[11:20] <jmerelo> AlexDaniel: alternatively, you could try and check its Travis status. Don't do anything if it's green.

[11:20] <jmerelo> AlexDaniel: you can scrape Travis status quite easily.

[11:20] <AlexDaniel> that's an interesting idea

[11:21] <jmerelo> AlexDaniel: I don't have any other kind :-)

[11:22] *** pecastro joined
[11:22] <jmerelo> AlexDaniel: now seriously, you could ask them to slightly change their travis conf and set it to run every month using cron. If it's using "latest", you might know where it failed.

[11:22] <jmerelo> AlexDaniel: it's mock-regression, but well, better than nothing.

[11:29] *** jmerelo left
[11:29] *** wi15ht joined
[11:32] *** w17t left
[11:32] *** ravenousmoose joined
[11:43] *** ravenousmoose left
[11:49] *** Ven`` joined
[11:53] <squashable6> 🍕 Scimon++ wrote a comment on “Test::Time”: https://github.com/perl6/ecosystem-unbitrot/issues/528#issuecomment-462038065

[11:53] <Geth> ¦ ecosystem-unbitrot: Scimon self-assigned Test::Time https://github.com/perl6/ecosystem-unbitrot/issues/528

[12:19] *** dvdl joined
[12:34] <squashable6> 🍕 Scimon++ wrote a comment on “Test::Time”: https://github.com/perl6/ecosystem-unbitrot/issues/528#issuecomment-462040776

[12:39] <squashable6> 🍕 Scimon++ labeled issue “Test::Time” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/528

[12:39] <squashable6> 🍕 Scimon++ wrote a comment on “Test::Time”: https://github.com/perl6/ecosystem-unbitrot/issues/528#issuecomment-462041260

[12:41] *** yqt joined
[12:57] <Geth> ¦ ecosystem-unbitrot: jonathanstowe self-assigned Device::Velleman::K8055 https://github.com/perl6/ecosystem-unbitrot/issues/379

[13:00] <squashable6> 🍕 AlexDaniel++ labeled issue “Text::Indented” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/530

[13:00] <squashable6> 🍕 AlexDaniel++ labeled issue “Text::Indented” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/530

[13:00] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Text::Indented”: https://github.com/perl6/ecosystem-unbitrot/issues/530#issuecomment-462042704

[13:08] <squashable6> 🍕 AlexDaniel++ labeled issue “Text::Names” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/531

[13:08] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Text::Names”: https://github.com/perl6/ecosystem-unbitrot/issues/531#issuecomment-462043230

[13:11] <squashable6> 🍕 AlexDaniel++ labeled issue “Do123” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/382

[13:11] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Do123”: https://github.com/perl6/ecosystem-unbitrot/issues/382#issuecomment-462043450

[13:12] *** Kaiepi left
[13:12] <squashable6> 🍕 AlexDaniel++ labeled issue “Facter” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/385

[13:12] <Xliff_> m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my @b := @expr.pick(5); say @b; say @b

[13:12] <camelia> rakudo-moar d904b7048: OUTPUT: «Type check failed in binding; expected Positional but got Seq ($(("field3", "'ee'", ...)␤  in block <unit> at <tmp> line 1␤␤»

[13:12] <Xliff_> m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my $b := @expr.pick(5); say $b; say $b

[13:12] <camelia> rakudo-moar d904b7048: OUTPUT: «(5 'ee' @var2 ns.field4 "ee")␤(5 'ee' @var2 ns.field4 "ee")␤»

[13:12] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Facter”: https://github.com/perl6/ecosystem-unbitrot/issues/385#issuecomment-462043530

[13:14] *** Kaypie joined
[13:14] <squashable6> 🍕 AlexDaniel++ labeled issue “Sum” (rakudobug): https://github.com/perl6/ecosystem-unbitrot/issues/521

[13:14] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Sum”: https://github.com/perl6/ecosystem-unbitrot/issues/521#issuecomment-462043677

[13:15] *** Kaiepi joined
[13:15] *** Kaiepi left
[13:15] <squashable6> 🍕 AlexDaniel++ labeled issue “List::Utils” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/454

[13:15] <squashable6> 🍕 AlexDaniel++ wrote a comment on “List::Utils”: https://github.com/perl6/ecosystem-unbitrot/issues/454#issuecomment-462043724

[13:18] <squashable6> 🍕 masak++ wrote a comment on “Text::Indented”: https://github.com/perl6/ecosystem-unbitrot/issues/530#issuecomment-462043885

[13:19] <squashable6> 🍕 AlexDaniel++ labeled issue “JsonC” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/443

[13:19] <squashable6> 🍕 AlexDaniel++ wrote a comment on “JsonC”: https://github.com/perl6/ecosystem-unbitrot/issues/443#issuecomment-462043979

[13:20] *** Voldenet left
[13:22] <squashable6> 🍕 masak++ labeled issue “Text::Indented” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/530

[13:22] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Facter”: https://github.com/perl6/ecosystem-unbitrot/issues/385#issuecomment-462044172

[13:24] <squashable6> 🍕 AlexDaniel++ labeled issue “Map::Ordered” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/464

[13:25] *** Voldenet joined
[13:25] *** Voldenet left
[13:25] *** Voldenet joined
[13:25] *** greppable6 left
[13:26] *** greppable6 joined
[13:31] <squashable6> 🍕 AlexDaniel++ labeled issue “Foo::Dependencies::Self” (broken beyond repair): https://github.com/perl6/ecosystem-unbitrot/issues/395

[13:31] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Foo::Dependencies::Self”: https://github.com/perl6/ecosystem-unbitrot/issues/395#issuecomment-462044796

[13:31] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Foo::Dependencies::B-on-A”: https://github.com/perl6/ecosystem-unbitrot/issues/394#issuecomment-462044803

[13:32] <squashable6> 🍕 AlexDaniel++ labeled issue “Foo::Dependencies::B-on-A” (broken beyond repair): https://github.com/perl6/ecosystem-unbitrot/issues/394

[13:32] <squashable6> 🍕 AlexDaniel++ labeled issue “Foo::Dependencies::A-on-B” (broken beyond repair): https://github.com/perl6/ecosystem-unbitrot/issues/393

[13:32] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Foo::Dependencies::A-on-B”: https://github.com/perl6/ecosystem-unbitrot/issues/393#issuecomment-462044820

[13:34] *** cpan-p6 left
[13:35] *** cpan-p6 joined
[13:35] <squashable6> 🍕 AlexDaniel++ labeled issue “LMDB” (rakudobug): https://github.com/perl6/ecosystem-unbitrot/issues/445

[13:39] <squashable6> 🍕 AlexDaniel++ wrote a comment on “LMDB”: https://github.com/perl6/ecosystem-unbitrot/issues/445#issuecomment-462045370

[13:40] <squashable6> 🍕 AlexDaniel++ labeled issue “TestML” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/529

[13:40] <squashable6> 🍕 AlexDaniel++ wrote a comment on “TestML”: https://github.com/perl6/ecosystem-unbitrot/issues/529#issuecomment-462045472

[13:42] <squashable6> 🍕 AlexDaniel++ labeled issue “Rakudo::Perl6::Parsing” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/513

[13:42] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Rakudo::Perl6::Parsing”: https://github.com/perl6/ecosystem-unbitrot/issues/513#issuecomment-462045603

[13:43] <namibj>  m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my &b := {@expr.pick(5)}; say &b(); say &b()

[13:43] <camelia> rakudo-moar d904b7048: OUTPUT: «(field3 @var2 'ee' ns.field4 "ee")␤(ns.field4 field3 5 'ee' @var2)␤»

[13:43] <namibj> Xliff_: did you want this?

[13:44] <Xliff_> \o/

[13:44] <Xliff_> Thanks!

[13:44] <squashable6> 🍕 AlexDaniel++ labeled issue “Math::ThreeD” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/470

[13:44] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Math::ThreeD”: https://github.com/perl6/ecosystem-unbitrot/issues/470#issuecomment-462045687

[13:44] <namibj> It's called further simplified sub syntax

[13:44] <Xliff_> Actually, that makes sense. 

[13:44] <Xliff_> I was trying to see if I could bind directly to a method. 

[13:44] <namibj> basically a sub like normal, but all the signature defining can be left out if you don't need parameters at all

[13:45] <Xliff_> Don't mind me, I'm still trying to wake up.

[13:45] <namibj>  m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my &b := {@expr.pick(*)}; say &b(5); say &b(3)

[13:45] <camelia> rakudo-moar d904b7048: OUTPUT: «(ns.field4 'ee' field3 "ee" 5 @var2)␤(5 'ee' ns.field4 field3 "ee" @var2)␤»

[13:45] <squashable6> 🍕 AlexDaniel++ labeled issue “Hinges” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/422

[13:45] <squashable6> 🍕 AlexDaniel++ labeled issue “Hinges” (deprecated module): https://github.com/perl6/ecosystem-unbitrot/issues/422

[13:45] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Hinges”: https://github.com/perl6/ecosystem-unbitrot/issues/422#issuecomment-462045787

[13:45] <Xliff_> namibj: You wouldn't want the asterisk in that case.

[13:45] <namibj> Xliff_: it doesn't work there, right?

[13:45] <Xliff_> m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my &b := {@expr.pick}; say &b(5); say &b(3)

[13:45] <camelia> rakudo-moar d904b7048: OUTPUT: «5␤ns.field4␤»

[13:46] <Xliff_> m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my &b := {@expr.pick($^a)}; say &b(5); say &b(3)

[13:46] <camelia> rakudo-moar d904b7048: OUTPUT: «(ns.field4 "ee" 5 @var2 'ee')␤(@var2 "ee" field3)␤»

[13:46] <namibj> oh

[13:46] <Xliff_> :)

[13:46] <namibj> example

[13:46] <Xliff_> Anonymous param.

[13:46] <Xliff_> It's an alternative notation to this:

[13:47] <Xliff_> m: my @expr = <5 'ee' "ee" ns.field4 field3 @var2>; my &b := -> $a {@expr.pick($a)}; say &b(5); say &b(3)

[13:47] <camelia> rakudo-moar d904b7048: OUTPUT: «('ee' @var2 5 field3 ns.field4)␤(@var2 ns.field4 "ee")␤»

[13:47] <squashable6> 🍕 AlexDaniel++ labeled issue “Compress::Snappy” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/360

[13:47] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Compress::Snappy”: https://github.com/perl6/ecosystem-unbitrot/issues/360#issuecomment-462045926

[13:47] <namibj> m: my $mult = * * *; say $mult(5, 4);

[13:47] <camelia> rakudo-moar d904b7048: OUTPUT: «20␤»

[13:47] <Xliff_> Right, but * in contest of an array means "give me the array size"

[13:48] <squashable6> 🍕 AlexDaniel++ labeled issue “Class::Utils” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/354

[13:48] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Class::Utils”: https://github.com/perl6/ecosystem-unbitrot/issues/354#issuecomment-462045998

[13:48] <namibj> my book says that's equiv to the braced version with the anon a and b

[13:48] <namibj> arg, damn you!

[13:49] <namibj> damn you, non-universal-currying

[13:50] <squashable6> 🍕 jonathanstowe++ wrote a comment on “SSL”: https://github.com/perl6/ecosystem-unbitrot/issues/518#issuecomment-462046124

[13:50] <Xliff_> :)

[13:50] <squashable6> 🍕 AlexDaniel++ labeled issue “Data::StaticTable” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/375

[13:50] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Data::StaticTable”: https://github.com/perl6/ecosystem-unbitrot/issues/375#issuecomment-462046133

[13:51] <squashable6> 🍕 AlexDaniel++ labeled issue “IO::Path::More” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/424

[13:51] <squashable6> 🍕 AlexDaniel++ wrote a comment on “IO::Path::More”: https://github.com/perl6/ecosystem-unbitrot/issues/424#issuecomment-462046189

[13:51] <namibj> universal currying makes stuff really, really uniformely easy to compose, if you've ever thought about cmposing haskell functions in differently chained ways

[13:51] <AlexDaniel> wow folks there are so many modules

[13:51] <Xliff_> Yes, but your book isn't wrong. It's just not explicit enough.

[13:51] <namibj> AlexDaniel: that's a good thing?

[13:52] <Xliff_> That format will work, because the args are expected to be numeric.

[13:52] <namibj> Xliff_: it probably mentions the array size functionality of the star somewhere

[13:52] <AlexDaniel> namibj: yes, of course

[13:52] <Xliff_> Hell, you can even give the parameter an array argument and it would work.

[13:52] <namibj> just not within 10 lines up/down of the mult triple star i wrote

[13:52] <Xliff_> m: my @a = (1, 2, 3); my $mult = * * *; say $mult(5, @a);

[13:53] <camelia> rakudo-moar d904b7048: OUTPUT: «15␤»

[13:53] <Xliff_> ^^ see?

[13:53] <AlexDaniel> namibj: I'm just bad at realizing how large some quantities are. I was like “meh, just a bit over 1000 modules”. That's a lot of modules.

[13:53] *** leont joined
[13:53] <namibj> AlexDaniel: 1k things of code are not a trivial amount

[13:53] * Xliff_ away....

[13:54] <namibj> Xliff_: that's doing the count number of entries "Cool" way to treat an array, right?

[13:56] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Inline::Perl5”: https://github.com/perl6/ecosystem-unbitrot/issues/435#issuecomment-462046581

[13:56] <squashable6> 🍕 AlexDaniel++ labeled issue “Inline::Go” (native dependency): https://github.com/perl6/ecosystem-unbitrot/issues/433

[13:56] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Inline::Go”: https://github.com/perl6/ecosystem-unbitrot/issues/433#issuecomment-462046619

[13:58] <squashable6> 🍕 AlexDaniel++ labeled issue “Image::Resize” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/431

[13:58] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Image::Resize”: https://github.com/perl6/ecosystem-unbitrot/issues/431#issuecomment-462046772

[13:59] <namibj> AlexDaniel: are you gonna stay around today for a bit? I wanna read the docs/explanation of Cro i was referred to 3 days ago, and maybe come back regarding how to go for and structure a json/http RPC client for a file-transfer-software in it's daemon-mode, so I profit from persistent connections and directory entry caching, as well as uniform rate limiting/queueing behaviour. I'd like to control it all from 

[13:59] <namibj> perl6, and I want a perl6 module for some object abstraction over jobId's the RPC gives you for async operations.

[14:00] <namibj> FOr nnow the client will ahve to poll for async completion, but I'll get the dev of the RPC server to offer something like at least long-polling.

[14:00] <AlexDaniel> namibj: I'm here every day! But I haven't used Cro extensively, so I'm afraid I won't be of much help :)

[14:01] <squashable6> 🍕 AlexDaniel++ labeled issue “Acme::Flutterby” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/325

[14:01] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Acme::Flutterby”: https://github.com/perl6/ecosystem-unbitrot/issues/325#issuecomment-462047052

[14:03] <namibj> AlexDaniel: I'd not be asking about cro, but rather general perl6 module organization/architecture for it being a object-oriented wrapper around async RPC calls

[14:03] *** isomorphismes joined
[14:06] <AlexDaniel> hmm

[14:08] *** domidumont joined
[14:08] <squashable6> 🍕 AlexDaniel++ wrote a comment on “AWS::Pricing”: https://github.com/perl6/ecosystem-unbitrot/issues/323#issuecomment-462047619

[14:08] <squashable6> 🍕 AlexDaniel++ closed issue “AWS::Pricing”: https://github.com/perl6/ecosystem-unbitrot/issues/323

[14:09] <AlexDaniel> namibj: by the way, I'm curious, what problem are you trying to solve? Like, why are you implementing this?

[14:19] *** jeromelanteri joined
[14:19] *** jerome_ joined
[14:19] *** jerome_ left
[14:21] <namibj> AlexDaniel: there is a data feed

[14:22] <namibj> it includes some metadata. this is then used to prioritize based on disk util and quota allocation (the latter to pre-allocate future disk allocation/traffic), if and when to fetch the actual data referrred to in the feed entry

[14:24] <Geth> ¦ ecosystem-unbitrot: jonathanstowe self-assigned SSL https://github.com/perl6/ecosystem-unbitrot/issues/518

[14:25] <namibj> this feed is like some regex-able irc channel or rss or something. the data get's fetched by different software, depending on what source is referred to (if it's a youtube video, it'll use yourube-dl, if it's a website, it might use httrack, etc.). After it is fetched, it needs to do introspection and someimes extraction of lower datarate subparts of the fetched data (e.g., subtitles, or audio transcoding).

[14:27] <AlexDaniel> sounds like a lot of work :)

[14:27] <namibj> Once the data is in the format that is supposed to be send off to the archive (via rclone, for the time being), this transfer will be initiated/scheduled based on rate limit avoidance calculations. Once the data succesfully archived and any local data extraction is finished, it will be deleted (unless the fetching requires the data to stick around, as some feeds have rather strict be nice to each other 

[14:27] <namibj> policies and cut you off if you delete too soon)

[14:29] <namibj> yes, but it's better to automate a basic, yet at least fucntioning version of the feed ingest, fetch, archive than to live with hourly feed polling (having serious negative sideeffects due to the provessing latency compared to an irc feed)

[14:30] <namibj> and full-manual shift-click range-select in a gui by hand and manually typing out tar commands to prevent cluttering the archive with tiny files (it doesn't like files smaller than a couple megabyte very much, so they're basically the same price to archive, be it 1KiB or 10MiB)

[14:32] <namibj> . That ofc followed by failing to manually clock ratelimit rolling-average utilisation to try and get good utilisation out of the archival transfers without them hitting rate limits.

[14:33] <squashable6> 🍕 dogbert17++ wrote a comment on “Math::FFT::Libfftw3”: https://github.com/perl6/ecosystem-unbitrot/issues/468#issuecomment-462049393

[14:33] <squashable6> 🍕🍕🍕  First contribution by dogbert17++! ♥

[14:35] <namibj> what i'm hoping to allow is load-responsive scheduling of lower priority feeds in times of spare capacity and generation of properly serachable metadata index database thingy's, so that I can search the archive for data in a less dreadful way than ncdu -f archive.ncdu and/or less archive.ls\ -l

[14:35] *** isomorphismes left
[14:37] <namibj> I expect payoff on the basic one, not counting perl6-newbie learning time of 2~5 months until that automation will have payd for itself in just time not spend. THe impact innot having to check in and handle it every day/every second day isn't even included in that.

[14:37] <squashable6> 🍕 AlexDaniel++ labeled issue “Math::FFT::Libfftw3” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/468

[14:37] <masak> huh. S03 differs between "chain associativity" and "list associativity". that makes sense, now that I think of it.

[14:39] <AlexDaniel> namibj: I see. It's interesting.

[14:42] <namibj> AlexDaniel: thanks, and you probably understand why i'd ask for advice on how to go about organizing the module for communicating with the rclone daemon.

[14:42] *** jeromelanteri left
[14:43] <namibj> After I got lunch, I'll probably get ready to ask more specific about architecture design questions

[14:45] <squashable6> 🍕 AlexDaniel++ labeled issue “HTML::Tag” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/414

[14:45] <squashable6> 🍕 AlexDaniel++ wrote a comment on “HTML::Tag”: https://github.com/perl6/ecosystem-unbitrot/issues/414#issuecomment-462050188

[14:46] <AlexDaniel> namibj: maybe for a big thing like this it's better to write a small document explaining the idea? Like “Here's the description of the problem, here's how I want to solve it”. Then you can post this on Reddit or elsewhere for feedback

[14:46] <AlexDaniel> namibj: I think this was done for module Red and it worked really well

[14:47] <AlexDaniel> though Red probably had a proof-of-concept by then and a semi-working module

[14:47] <leont> I don't really understand the travis issues I keep running into today. It all works fine for me and then travis does something different.

[14:48] <AlexDaniel> but in any case, something like that is needed to get proper feedback for a big system

[14:50] <AlexDaniel> leont: are you sure that the same rakudo version is used in both cases?

[14:50] <Xliff_> namibj: Yes. That's exactly what it is doing.

[14:50] * Xliff_ away's again.

[14:50] <AlexDaniel> squashable6: status

[14:50] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:50] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/125c3b7efdf40a7d6084f0401b454d3c

[14:59] <cpan-p6> New module released to CPAN! MeCab (0.0.10) by 03TITSUKI

[14:59] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Net::Jupyter”: https://github.com/perl6/ecosystem-unbitrot/issues/483#issuecomment-462051201

[15:00] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Log::ZMQ”: https://github.com/perl6/ecosystem-unbitrot/issues/457#issuecomment-462051260

[15:00] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Text::TFIdf”: https://github.com/perl6/ecosystem-unbitrot/issues/532#issuecomment-462051332

[15:01] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Acme::Skynet”: https://github.com/perl6/ecosystem-unbitrot/issues/326#issuecomment-462051341

[15:03] <masak> m: my ($a, $b, $c) = 0, 1, 0; ($a ^^ $b ^^ $c) = "OH HAI"; say $b

[15:03] <camelia> rakudo-moar d904b7048: OUTPUT: «OH HAI␤»

[15:04] <masak> wow, infix:<^^> gives back an lvalue. that's pretty hardcore.

[15:04] <timotimo> || and // probably also do, right?

[15:05] <timotimo> tbh i don't actually have a good intuition of what you'd do with ^^. in perl6 or otherwise

[15:05] <timotimo> m: my ($a, $b, $c) = Any, 0, 5; ($a || $b || $c) = "lol"; ($a // $b // $c) = "oh my"; dd $a, $b, $c

[15:05] <camelia> rakudo-moar d904b7048: OUTPUT: «Any $a = Any␤Str $b = "oh my"␤Str $c = "lol"␤»

[15:06] <timotimo> i think on twitter i recently saw that C or C++ gives a lvalue for the ternary operator

[15:08] *** mowcat joined
[15:08] <masak> aye

[15:08] <squashable6> 🍕 jonathanstowe++ wrote a comment on “SSL”: https://github.com/perl6/ecosystem-unbitrot/issues/518#issuecomment-462051859

[15:08] <squashable6> 🍕 jonathanstowe++ labeled issue “SSL” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/518

[15:09] <masak> I never thought of it that way, but if infix:<^^> is to give an lvalue back, it sure makes more sense to have the (current) "exactly one must be truthy" semantics, not the (otherwise attractive) "an odd number of them must be truthy"

[15:09] <masak> ...semantics

[15:10] <timotimo> semantics semantics

[15:10] <masak> the only reason I even thought about this is I'm writing up an issue for 007 to get infix:<^^> :P

[15:10] <timotimo> you say semantics i say semantics

[15:11] * masak .oO( let's call the whole thing semantics )

[15:11] <timotimo> let's call off semantics

[15:11] <masak> let's off call semantics

[15:11] *** ravenousmoose joined
[15:11] <timotimo> call of let's semantics

[15:11] <timotimo> off* d'oh

[15:13] <timotimo> let's semantics cancelled

[15:14] * masak .oO( The Symposium of Implied Semantics has been canceled due to a tropical nihilism storm )

[15:15] *** lizmat left
[15:16] <masak> m: my ($a, $b) = 1, 2; ($a && $b) = "OH HAI"; dd [$a, $b]

[15:16] <camelia> rakudo-moar d904b7048: OUTPUT: «Array element = [1, "OH HAI"]␤»

[15:16] <masak> even that makes sense, I guess

[15:19] <masak> with the "guard" rationale/explanation for infix:<&&>

[15:19] <timotimo> hmm but

[15:19] <masak> m: my ($a, $b) = 0, 2; ($a && $b) = "OH HAI"; dd [$a, $b]

[15:19] <camelia> rakudo-moar d904b7048: OUTPUT: «Array element = ["OH HAI", 2]␤»

[15:20] <timotimo> if you have a guard in there

[15:21] <timotimo> m: my $a = "oh yeah"; (Bool.pick && $a) = "whoa"

[15:21] <camelia> rakudo-moar d904b7048: ( no output )

[15:21] <timotimo> m: my $a = "oh yeah"; (Bool.pick && $a) = "whoa"

[15:21] <camelia> rakudo-moar d904b7048: ( no output )

[15:21] <timotimo> m: my $a = "oh yeah"; (Bool.pick && $a) = "whoa"

[15:21] <camelia> rakudo-moar d904b7048: ( no output )

[15:21] <timotimo> m: my $a = "oh yeah"; (Bool.pick && $a) = "whoa"; say $a

[15:21] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[15:21] <timotimo> there

[15:21] <timotimo> unless you put an explicit scalar there, it's not safe

[15:22] <squashable6> 🍕 jonathanstowe++ wrote a comment on “SOAP::Client”: https://github.com/perl6/ecosystem-unbitrot/issues/517#issuecomment-462052916

[15:22] <Geth> ¦ ecosystem-unbitrot: jonathanstowe self-assigned SOAP::Client https://github.com/perl6/ecosystem-unbitrot/issues/517

[15:24] *** molaf joined
[15:26] *** zakharyas joined
[15:28] *** tyil left
[15:29] *** tyil joined
[15:31] <Geth> ¦ doc: ce26d48237 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/hashmap.pod6

[15:31] <synopsebot> Link: https://doc.perl6.org/language/hashmap

[15:31] <Geth> ¦ doc: tweak grammar

[15:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ce26d48237

[15:31] <masak> yeah, the guard needs to be an lvalue too for it to work

[15:34] <timotimo> we need an "assignment but only if there's an lvalue on the left side" operator, haha

[15:41] <moritz> sounds like a disaster :)

[15:45] *** molaf left
[15:45] <squashable6> 🍕 jonathanstowe++ wrote a comment on “SOAP::Client”: https://github.com/perl6/ecosystem-unbitrot/issues/517#issuecomment-462054773

[15:45] <squashable6> 🍕 jonathanstowe++ labeled issue “SOAP::Client” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/517

[15:54] <titsuki> bisectable: use Zef; Zef.^ver.Str.say;

[15:54] <bisectable6> titsuki, Bisecting by output (old=2015.12 new=d904b70) because on both starting points the exit code is 1

[15:55] <masak> sounds like something out of Algol 68 :P

[15:55] <bisectable6> titsuki, bisect log: https://gist.github.com/0662d7c7f9be4a532f67383030f3811b

[15:55] <bisectable6> titsuki, (2015-12-25) https://github.com/rakudo/rakudo/commit/07fecb52eb1fd07397659f19a5cf36dc61f84053

[15:55] <bisectable6> titsuki, The result looks a bit unrealistic, doesn't it? Most probably the output is different on every commit (e.g. ｢bisect: say rand｣)

[16:02] *** dct_ joined
[16:07] *** dct_ left
[16:12] *** Ven`` left
[16:24] <squashable6> 🍕 jonathanstowe++ wrote a comment on “YAML”: https://github.com/perl6/ecosystem-unbitrot/issues/546#issuecomment-462057915

[16:41] <Geth> ¦ ecosystem: b3b3cbd6ab | (Jonathan Stowe)++ | META.list

[16:41] <Geth> ¦ ecosystem: It seems that the TestML was moved to community

[16:41] <Geth> ¦ ecosystem: 

[16:41] <Geth> ¦ ecosystem: It's a bit weird because it had an intermediate stop

[16:41] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/b3b3cbd6ab

[16:42] <squashable6> 🍕 jonathanstowe++ wrote a comment on “TestML”: https://github.com/perl6/ecosystem-unbitrot/issues/529#issuecomment-462059385

[16:45] <cpan-p6> New module released to CPAN! MeCab (0.0.11) by 03TITSUKI

[16:48] <squashable6> 🍕 jonathanstowe++ wrote a comment on “TestML”: https://github.com/perl6/ecosystem-unbitrot/issues/529#issuecomment-462059889

[16:49] <squashable6> 🍕 jonathanstowe++ labeled issue “TestML” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/529

[16:49] <squashable6> 🍕 jonathanstowe++ unlabeled issue “TestML” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/529

[16:55] *** zakharyas left
[16:56] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:56] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:56] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && ($a = "whoa")); say $a

[16:56] <camelia> rakudo-moar d904b7048: OUTPUT: «whoa␤»

[16:56] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:56] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «whoa␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot modify an immutable Bool (False)␤  in block <unit> at <tmp> line 1␤␤»

[16:57] <Xliff_>  m: my $a = "oh yeah"; (Bool.pick && $a = "whoa"); say $a

[16:57] <camelia> rakudo-moar d904b7048: OUTPUT: «whoa␤»

[16:57] <squashable6> 🍕 AlexDaniel++ opened issue “ANTLR4::Grammar”: https://github.com/perl6/ecosystem-unbitrot/issues/553

[16:57] <Xliff_> Oops. Should be doing this in tnother window.

[16:57] <squashable6> 🍕 AlexDaniel++ opened issue “App::Prove6”: https://github.com/perl6/ecosystem-unbitrot/issues/554

[16:57] <squashable6> 🍕 AlexDaniel++ opened issue “Audio::Convert::Samplerate”: https://github.com/perl6/ecosystem-unbitrot/issues/555

[16:57] <squashable6> 🍕 AlexDaniel++ opened issue “Cache::Async”: https://github.com/perl6/ecosystem-unbitrot/issues/556

[16:57] <squashable6> 🍕 AlexDaniel++ opened issue “Cairo”: https://github.com/perl6/ecosystem-unbitrot/issues/557

[16:58] <squashable6> 🍕 AlexDaniel++ closed issue “Cro::HTTP”: https://github.com/perl6/ecosystem-unbitrot/issues/261

[16:58] <squashable6> 🍕 AlexDaniel++ closed issue “Cro::SSL”: https://github.com/perl6/ecosystem-unbitrot/issues/364

[16:58] <squashable6> 🍕 AlexDaniel++ closed issue “Cro::TLS”: https://github.com/perl6/ecosystem-unbitrot/issues/365

[16:58] <squashable6> 🍕 AlexDaniel++ closed issue “Crypt::TweetNacl”: https://github.com/perl6/ecosystem-unbitrot/issues/368

[16:58] <squashable6> 🍕 AlexDaniel++ opened issue “Fortran::Grammar”: https://github.com/perl6/ecosystem-unbitrot/issues/558

[16:58] <squashable6> 🍕 AlexDaniel++ opened issue “HTTP::Server::Middleware::JSON”: https://github.com/perl6/ecosystem-unbitrot/issues/559

[16:58] <squashable6> 🍕 AlexDaniel++ opened issue “IO::Glob”: https://github.com/perl6/ecosystem-unbitrot/issues/560

[16:58] <squashable6> 🍕 AlexDaniel++ opened issue “Java::Generate”: https://github.com/perl6/ecosystem-unbitrot/issues/561

[16:58] <squashable6> 🍕 AlexDaniel++ closed issue “Jupyter::Kernel”: https://github.com/perl6/ecosystem-unbitrot/issues/444

[16:58] <squashable6> 🍕 AlexDaniel++ opened issue “Linux::Proc::Statm”: https://github.com/perl6/ecosystem-unbitrot/issues/562

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “Lumberjack”: https://github.com/perl6/ecosystem-unbitrot/issues/458

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “Lumberjack::Dispatcher::Syslog”: https://github.com/perl6/ecosystem-unbitrot/issues/460

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “Math::FFT::Libfftw3”: https://github.com/perl6/ecosystem-unbitrot/issues/468

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “Net::FTPlib”: https://github.com/perl6/ecosystem-unbitrot/issues/482

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “Pastebin::Gist”: https://github.com/perl6/ecosystem-unbitrot/issues/494

[16:59] <squashable6> 🍕 AlexDaniel++ opened issue “Path::Finder”: https://github.com/perl6/ecosystem-unbitrot/issues/563

[16:59] <squashable6> 🍕 AlexDaniel++ opened issue “Readline”: https://github.com/perl6/ecosystem-unbitrot/issues/564

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “Unicode::GCB”: https://github.com/perl6/ecosystem-unbitrot/issues/538

[16:59] <squashable6> 🍕 AlexDaniel++ closed issue “epoll”: https://github.com/perl6/ecosystem-unbitrot/issues/550

[16:59] <squashable6> 🍕 AlexDaniel++ opened issue “p6-RandomColor”: https://github.com/perl6/ecosystem-unbitrot/issues/565

[17:00] <AlexDaniel> woah

[17:00] <AlexDaniel> Xliff_: looks like your module? :) https://github.com/perl6/ecosystem-unbitrot/issues/565

[17:01] <squashable6> 🍕 Leont++ wrote a comment on “Path::Finder”: https://github.com/perl6/ecosystem-unbitrot/issues/563#issuecomment-462060905

[17:02] <squashable6> 🍕 AlexDaniel++ wrote a comment on “IO::Glob”: https://github.com/perl6/ecosystem-unbitrot/issues/560#issuecomment-462060999

[17:02] <squashable6> 🍕 Leont++ wrote a comment on “App::Prove6”: https://github.com/perl6/ecosystem-unbitrot/issues/554#issuecomment-462061000

[17:03] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Path::Finder”: https://github.com/perl6/ecosystem-unbitrot/issues/563#issuecomment-462061073

[17:04] <squashable6> 🍕 AlexDaniel++ wrote a comment on “App::Prove6”: https://github.com/perl6/ecosystem-unbitrot/issues/554#issuecomment-462061142

[17:05] <leont> Ugh, what a mess :-(

[17:05] <squashable6> 🍕 AlexDaniel++ labeled issue “Fortran::Grammar” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/558

[17:05] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Fortran::Grammar”: https://github.com/perl6/ecosystem-unbitrot/issues/558#issuecomment-462061248

[17:06] <squashable6> 🍕 AlexDaniel++ labeled issue “Path::Finder” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/563

[17:07] <squashable6> 🍕 AlexDaniel++ labeled issue “IO::Glob” (rakudobug): https://github.com/perl6/ecosystem-unbitrot/issues/560

[17:07] <squashable6> 🍕 Kaiepi++ wrote a comment on “Readline”: https://github.com/perl6/ecosystem-unbitrot/issues/564#issuecomment-462061381

[17:07] <squashable6> 🍕 Kaiepi++ labeled issue “Readline” (works for me): https://github.com/perl6/ecosystem-unbitrot/issues/564

[17:08] *** Kaypie is now known as Kaiepi

[17:08] <AlexDaniel> leont: kinda normal, usually I figure this out before the release anyway

[17:09] <AlexDaniel> I mean the ones that stopped working like IO::Glob just did

[17:12] <AlexDaniel> leont: or maybe you meant something else?

[17:12] <leont> It seems most stuff I touched lately is involved in this mess :-(

[17:14] <leont> If you have rakudo-master at hand, can you try to add a 'no precompilation' to App/Prove6.pm and see if it still fails?

[17:14] <leont> If that fixes it, it's definitely a rakudobug

[17:15] *** molaf joined
[17:16] *** zacts joined
[17:19] <squashable6> 🍕 Leont++ wrote a comment on “HTTP::Server::Ogre”: https://github.com/perl6/ecosystem-unbitrot/issues/418#issuecomment-462062324

[17:22] <AlexDaniel> leont: I don't think it helps

[17:22] <leont> Hmmmm. Then I'm out of ideas

[17:23] <leont> I mean, I know it works well for me on 2018.12.

[17:23] <AlexDaniel> yeah and it just worked for me on a recent-ish rakudo and after updating it no longer does

[17:24] <AlexDaniel> and Blin claims that it is https://github.com/rakudo/rakudo/commit/b3eb38261736eb618fb6758e0186eb5c6d48a31d

[17:24] <squashable6> 🍕 jonathanstowe++ wrote a comment on “YAML”: https://github.com/perl6/ecosystem-unbitrot/issues/546#issuecomment-462062742

[17:25] <squashable6> 🍕 AlexDaniel++ labeled issue “HTTP::Server::Ogre” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/418

[17:25] <squashable6> 🍕 AlexDaniel++ wrote a comment on “HTTP::Server::Ogre”: https://github.com/perl6/ecosystem-unbitrot/issues/418#issuecomment-462062797

[17:26] <squashable6> 🍕 AlexDaniel++ deleted a comment on “HTTP::Server::Ogre”: https://github.com/perl6/ecosystem-unbitrot/issues/418#issuecomment-462062797

[17:26] <AlexDaniel> xD

[17:27] <leont> And TAP still passes? That is the weird thing. App::Prove6 is a fairly small wrapper around TAP.

[17:27] <squashable6> 🍕 jonathanstowe++ wrote a comment on “YAML”: https://github.com/perl6/ecosystem-unbitrot/issues/546#issuecomment-462063014

[17:29] <AlexDaniel> leont: uhhh yeah that error message… something is wrong somewhere

[17:31] *** cpan-p6 left
[17:31] *** cpan-p6 joined
[17:33] <Geth> ¦ ecosystem-unbitrot: dwarring self-assigned HTML::Canvas https://github.com/perl6/ecosystem-unbitrot/issues/412

[17:33] <squashable6> 🍕🍕🍕  First contribution by dwarring++! ♥

[17:35] <squashable6> 🍕 dwarring++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462063621

[17:35] <Geth> ¦ ecosystem-unbitrot: Xliff self-assigned p6-RandomColor https://github.com/perl6/ecosystem-unbitrot/issues/565

[17:35] <squashable6> 🍕🍕🍕  First contribution by Xliff++! ♥

[17:35] <squashable6> 🍕 Xliff++ labeled issue “p6-RandomColor” (high priority): https://github.com/perl6/ecosystem-unbitrot/issues/565

[17:36] <squashable6> 🍕 Xliff++ unlabeled issue “p6-RandomColor” (high priority): https://github.com/perl6/ecosystem-unbitrot/issues/565

[17:36] <Xliff_> AlexDaniel: Thanks.

[17:37] <squashable6> 🍕 AlexDaniel++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462063768

[17:39] <squashable6> 🍕 dwarring++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462063934

[17:43] <squashable6> 🍕 Xliff++ labeled issue “p6-RandomColor” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/565

[17:48] <Geth> ¦ ecosystem-unbitrot: Kaiepi self-assigned Protocol https://github.com/perl6/ecosystem-unbitrot/issues/510

[17:48] <squashable6> 🍕 jonathanstowe++ wrote a comment on “YAML”: https://github.com/perl6/ecosystem-unbitrot/issues/546#issuecomment-462064542

[17:49] <squashable6> 🍕 jonathanstowe++ labeled issue “YAML” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/546

[17:49] <squashable6> 🍕 Kaiepi++ labeled issue “Protocol” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/510

[17:53] <Kaiepi> huh, i had no idea source-url for META6.json was supposed to end in .git

[17:55] <squashable6> 🍕 dwarring++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462065159

[17:59] <AlexDaniel> Kaiepi: really?

[18:00] <AlexDaniel> ah… maybe…

[18:00] <Kaiepi> Test::META fails if you don't put it there

[18:01] <AlexDaniel> squashable6: status

[18:01] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈19 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:01] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/c0dedd828b7c4c6c559b784d8cb2c1b7

[18:02] <squashable6> 🍕 AlexDaniel++ labeled issue “HTML::Canvas” (native dependency): https://github.com/perl6/ecosystem-unbitrot/issues/412

[18:03] <squashable6> 🍕 AlexDaniel++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462065743

[18:06] <squashable6> 🍕 dwarring++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462065942

[18:06] *** zakharyas joined
[18:06] <squashable6> 🍕 FCO++ closed issue “Protocol”: https://github.com/perl6/ecosystem-unbitrot/issues/510

[18:07] <squashable6> 🍕 AlexDaniel++ edited wiki page “Home”: https://github.com/perl6/ecosystem-unbitrot/wiki/Home

[18:08] <squashable6> 🍕 AlexDaniel++ edited wiki page “Home”: https://github.com/perl6/ecosystem-unbitrot/wiki/Home

[18:08] <squashable6> 🍕 dwarring++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462066144

[18:13] <squashable6> 🍕 Kaiepi++ labeled issue “DB::SQLite” (native dependency): https://github.com/perl6/ecosystem-unbitrot/issues/372

[18:17] <AlexDaniel> Kaiepi: hm but what about “Could not find Concurrent::Stack”?

[18:19] <rindolf> AlexDaniel: hi, when does the hackathon end?'

[18:19] <AlexDaniel> squashable6: status

[18:19] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈19 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:19] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/d35a749baa287128f78eef3e1dc3791f

[18:20] <AlexDaniel> rindolf: in about 19 hours according to squashable6

[18:20] <Kaiepi> might be a missing dependency or provides AlexDaniel 

[18:21] <rindolf> AlexDaniel: ah

[18:21] <AlexDaniel> Kaiepi: I can't figure out where the corresponding `use` is

[18:21] <rindolf> AlexDaniel: can I be assigned a task?'

[18:22] <AlexDaniel> rindolf: sure, just pick any: https://github.com/perl6/ecosystem-unbitrot/issues?q=is%3Aopen+is%3Aissue+no%3Alabel

[18:23] <rindolf> AlexDaniel: i'll take https://github.com/perl6/ecosystem-unbitrot/issues/562

[18:24] <Kaiepi> AlexDaniel, it's a dependency of DB

[18:24] <AlexDaniel> Kaiepi: yeah, I see that now, but I don't understand why it's unable to find it…

[18:24] <Geth> ¦ ecosystem-unbitrot: shlomif self-assigned Linux::Proc::Statm https://github.com/perl6/ecosystem-unbitrot/issues/562

[18:24] <squashable6> 🍕🍕🍕  First contribution by shlomif++! ♥

[18:26] <AlexDaniel> Kaiepi: is it because of the “:ver<1.0>” ?

[18:26] <Kaiepi> possibly

[18:26] <Kaiepi> i'll test it out

[18:26] <AlexDaniel> Kaiepi: inst#/home/alex/Blin/installed/Concurrent::Trie_1.0

[18:26] <AlexDaniel> what's Concurrent::Trie?

[18:27] <Kaiepi> zef doesn't have any problem finding it for me

[18:28] <AlexDaniel> where does the dependency on Concurrent::Trie come from?

[18:29] <AlexDaniel> ok, now I'm really confused

[18:29] <AlexDaniel> `zef rdepends Concurrent::Trie` says DB:ver<0.1> DB:ver<0.2>

[18:29] <Kaiepi> ===> Testing [FAIL]: Concurrent::Stack:ver<1.0>

[18:29] <Kaiepi> that may be why

[18:31] <AlexDaniel> rindolf: that's an interesting issue you picked :)

[18:31] <AlexDaniel> rindolf: it does seem to work fine, I don't know why it timed out

[18:32] <rindolf> AlexDaniel: ah

[18:32] <AlexDaniel> rindolf: perhaps `works for me` is a good label for that, unless you can see any other issue

[18:34] <squashable6> 🍕 dwarring++ wrote a comment on “HTML::Canvas”: https://github.com/perl6/ecosystem-unbitrot/issues/412#issuecomment-462068172

[18:36] <Kaiepi> ok i can't reproduce the test error i had with concurrent::stack

[18:38] <squashable6> 🍕 AlexDaniel++ edited wiki page “Home”: https://github.com/perl6/ecosystem-unbitrot/wiki/Home

[18:38] <AlexDaniel> Kaiepi: truly concurrent

[18:41] *** zacts left
[18:43] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Audio::Convert::Samplerate”: https://github.com/perl6/ecosystem-unbitrot/issues/555#issuecomment-462068859

[18:44] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Audio::Convert::Samplerate”: https://github.com/perl6/ecosystem-unbitrot/issues/555#issuecomment-462068929

[18:47] <Kaiepi> ok i get some more interesting errors when i tweak t/stress.t for Concurrent::Stack

[18:47] <squashable6> 🍕 shlomif++ labeled issue “Linux::Proc::Statm” (works for me): https://github.com/perl6/ecosystem-unbitrot/issues/562

[18:48] <squashable6> 🍕 shlomif++ wrote a comment on “Linux::Proc::Statm”: https://github.com/perl6/ecosystem-unbitrot/issues/562#issuecomment-462069293

[18:48] * rindolf noms the 🍕s

[18:51] <Kaiepi> MoarVM panic: Internal error: invalid thread ID 306095296 in GC work pass

[18:51] <rindolf> ok, next one

[18:52] <Kaiepi> i only managed to get this once but i don't think 306095296 threads had been spawned

[18:53] <Geth> ¦ ecosystem-unbitrot: shlomif self-assigned HTTP::Server::Middleware::JSON https://github.com/perl6/ecosystem-unbitrot/issues/559

[18:59] <squashable6> 🍕 AlexDaniel++ labeled issue “IUP” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/430

[18:59] <squashable6> 🍕 AlexDaniel++ wrote a comment on “IUP”: https://github.com/perl6/ecosystem-unbitrot/issues/430#issuecomment-462070204

[19:00] <squashable6> 🍕 AlexDaniel++ labeled issue “Time::Duration” (works for me): https://github.com/perl6/ecosystem-unbitrot/issues/534

[19:00] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Time::Duration”: https://github.com/perl6/ecosystem-unbitrot/issues/534#issuecomment-462070301

[19:01] <squashable6> 🍕 shlomif++ labeled issue “HTTP::Server::Middleware::JSON” (works for me): https://github.com/perl6/ecosystem-unbitrot/issues/559

[19:01] <squashable6> 🍕 shlomif++ wrote a comment on “HTTP::Server::Middleware::JSON”: https://github.com/perl6/ecosystem-unbitrot/issues/559#issuecomment-462070354

[19:02] <AlexDaniel> rindolf: hmm, have you tried it multiple times? It says `Flapper`, so I assume tests pass sometimes

[19:02] *** jme` left
[19:04] <AlexDaniel> rindolf: yeah, running it in a loop now, no failures!

[19:08] <rindolf> AlexDaniel: ah

[19:08] *** zakharyas left
[19:15] <squashable6> 🍕 AlexDaniel++ labeled issue “Module::Does” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/473

[19:15] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Module::Does”: https://github.com/perl6/ecosystem-unbitrot/issues/473#issuecomment-462071424

[19:16] *** jme` joined
[19:16] <squashable6> 🍕 AlexDaniel++ labeled issue “Modular” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/472

[19:16] <squashable6> 🍕 AlexDaniel++ labeled issue “Modular” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/472

[19:16] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Modular”: https://github.com/perl6/ecosystem-unbitrot/issues/472#issuecomment-462071485

[19:17] *** jmerelo joined
[19:17] <jmerelo> squashable6: status

[19:17] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[19:17] <squashable6> jmerelo, Log and stats: https://gist.github.com/67adaccce32dd9bbbaa44f953a7de685

[19:18] <squashable6> 🍕 AlexDaniel++ labeled issue “File::Compare” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/386

[19:19] <squashable6> 🍕 AlexDaniel++ wrote a comment on “File::Compare”: https://github.com/perl6/ecosystem-unbitrot/issues/386#issuecomment-462071645

[19:27] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Audio::Convert::Samplerate”: https://github.com/perl6/ecosystem-unbitrot/issues/555#issuecomment-462072196

[19:27] <squashable6> 🍕 jonathanstowe++ labeled issue “Audio::Convert::Samplerate” (rakudobug): https://github.com/perl6/ecosystem-unbitrot/issues/555

[19:29] <squashable6> 🍕 CurtTilmes++ wrote a comment on “DB::SQLite”: https://github.com/perl6/ecosystem-unbitrot/issues/372#issuecomment-462072389

[19:32] *** jmerelo left
[19:32] <tbrowder> question on hash creation: is there a problem with this syntax: my %h =[1, ‘a’, 2, ‘b’];

[19:33] <sena_kun> m: my %h =[1, ‘a’, 2, ‘b’]; say %h<1>;

[19:33] <camelia> rakudo-moar d904b7048: OUTPUT: «a␤»

[19:33] <tbrowder> i have always used it since coming to p6 because i saw someone use it and it has always worked fine

[19:33] <sena_kun> I don't think there is a problem, but I'd remove `[]`.

[19:34] <sena_kun> m: my %h = 1, 'a', 2, 'b'; say %h<1>;

[19:34] <camelia> rakudo-moar d904b7048: OUTPUT: «a␤»

[19:34] <sena_kun> m: my %h = 1 => 'a', 2 => 'b'; say %h<1>;

[19:34] <camelia> rakudo-moar d904b7048: OUTPUT: «a␤»

[19:34] <sena_kun> I prefer last one, it is the most clear for me.

[19:34] *** zacts joined
[19:34] *** zacts left
[19:36] <squashable6> 🍕 AlexDaniel++ labeled issue “DB” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/369

[19:39] <squashable6> 🍕 AlexDaniel++ wrote a comment on “DB”: https://github.com/perl6/ecosystem-unbitrot/issues/369#issuecomment-462073137

[19:39] <squashable6> 🍕 AlexDaniel++ wrote a comment on “DB::MySQL”: https://github.com/perl6/ecosystem-unbitrot/issues/370#issuecomment-462073155

[19:39] *** ufobat___ left
[19:41] <squashable6> 🍕 AlexDaniel++ wrote a comment on “`Db::Pg` and `epoll`”: https://github.com/perl6/ecosystem-unbitrot/issues/316#issuecomment-462073234

[19:41] <squashable6> 🍕 AlexDaniel++ closed issue “`Db::Pg` and `epoll`”: https://github.com/perl6/ecosystem-unbitrot/issues/316

[19:46] *** mns` joined
[19:48] *** drolax joined
[19:49] <squashable6> 🍕 AlexDaniel++ labeled issue “GeoIP::City” (deprecated module): https://github.com/perl6/ecosystem-unbitrot/issues/405

[19:50] *** domidumont left
[19:51] *** dvdl left
[19:53] <sena_kun> AlexDaniel, o/

[19:53] <AlexDaniel> sena_kun: hi!

[19:53] <sena_kun> I wonder if I can be helpful in this squashathon.

[19:53] <sena_kun> I see we no longer close the issues.

[19:53] <AlexDaniel> sena_kun: of course!?

[19:54] <sena_kun> The idea is to check ones without a label, check && label, right?

[19:54] <AlexDaniel> sena_kun: yeah

[19:54] <sena_kun> ok

[19:54] <sena_kun> reviving after cold, but I'll try some tickets. :)

[19:55] <AlexDaniel> sena_kun: closing is LTA because if you submit a PR but then the author doesn't fix the module, someone will have to figure it all out from scratch the next time

[19:55] <AlexDaniel> now issues are closed automatically once the issue is resolved

[19:56] <sena_kun> >Java::Generate fails

[19:56] <sena_kun> EEEEEEEEEEH.

[19:56] <sena_kun> It is literaly too simple to fail, I wonder what's wrong...

[19:56] <sena_kun> >  Parse errors: No plan found in TAP output

[19:56] <sena_kun> heh

[19:56] <AlexDaniel> ===SORRY!=== finish_code_object t/01-hello-world.t

[19:57] <sena_kun> oh

[19:57] <AlexDaniel> also it's marked as Flapper?

[19:57] <sena_kun> that sounds to me like a rakudobug then.

[19:58] <sena_kun> just get `All tests successful` and `Installing: Java::Generate:ver<1.0.0>` from zef log.

[19:58] *** zachk joined
[19:59] <squashable6> 🍕 Altai-man++ labeled issue “Java::Generate” (works for me): https://github.com/perl6/ecosystem-unbitrot/issues/561

[19:59] <squashable6> 🍕🍕🍕  First contribution by Altai-man++! ♥

[19:59] <squashable6> 🍕 Altai-man++ labeled issue “Java::Generate” (rakudobug): https://github.com/perl6/ecosystem-unbitrot/issues/561

[20:00] *** xinming joined
[20:00] <squashable6> 🍕 Altai-man++ wrote a comment on “Java::Generate”: https://github.com/perl6/ecosystem-unbitrot/issues/561#issuecomment-462074680

[20:01] <Geth> ¦ doc: dc5017c6a1 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/hashmap.pod6

[20:01] <synopsebot> Link: https://doc.perl6.org/language/hashmap

[20:01] <Geth> ¦ doc: show another hash generation syntax

[20:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dc5017c6a1

[20:03] *** xinming_ left
[20:05] <squashable6> 🍕 Altai-man++ wrote a comment on “cro”: https://github.com/perl6/ecosystem-unbitrot/issues/549#issuecomment-462075069

[20:06] <sena_kun> what is the label for "We know there is a race condition bug, but nobody can fix it right now"?

[20:08] <AlexDaniel> `issue sent`

[20:08] <sena_kun> thanks

[20:08] *** ravenousmoose is now known as ravenousmoose[aw

[20:08] *** ravenousmoose[aw left
[20:09] <AlexDaniel> sena_kun: but then I wonder, is there a ticket? If not, maybe there should be one?

[20:09] <sena_kun> there are plenty

[20:09] <sena_kun> :(

[20:10] <squashable6> 🍕 Altai-man++ labeled issue “cro” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/549

[20:12] *** leszekdubiel joined
[20:13] *** ravenousmoose joined
[20:14] <leszekdubiel> Hello! :) :) Could someone please help translate this oneliner from perl5 to perl6? 

[20:14] <leszekdubiel> printf "\tname John\tage 24\t\ncity Kraków\tname Ann\tabout works here\tage 45\n\tspeaks Polish\tname Leszek\t\r\v\b\t\tnote malformed line still works\n" | perl -e 'use utf8; use Modern::Perl qw{2017}; use Data::Dumper; no warnings qw{uninitialized}; while (<STDIN>) { my %h = map { split / /, $_, 2 } grep { / / } split /[^[:print:]]/, $_, -1; 0 && warn Dumper(\%h); print "\t$_ $h{$_}" for @ARGV ? @ARGV : sort keys %h; print "\t

[20:15] <leszekdubiel> data format is set of lines; each line is set of records name-value; records are separated by \t; name and value are separated by space; there is \t at the beginning and end of each line 

[20:17] <leszekdubiel> to split line on \t and also throw away unprintable characters: split /[^[:print:]]/, $_, -1

[20:17] <leszekdubiel> then grep for records containting space:  grep { / / }

[20:17] <leszekdubiel> then make hash of name-value, where name is everything before space

[20:18] <leszekdubiel> then hash is ready;    so print records given as ARGV, and when ARGV is empty print all records

[20:18] <AlexDaniel> leszekdubiel: I think the one-liner didn't fit into the line

[20:19] <sena_kun> leszekdubiel, is your code full one? It seem to abrupt for me at `print "\`. Can you please post it as a gist?

[20:19] <leszekdubiel> sorry... I will put that in parts: 

[20:19] <leszekdubiel> here is test case: 

[20:19] <leszekdubiel> printf "\tname John\tage 24\t\ncity Kraków\tname Ann\tabout works here\tage 45\n\tspeaks Polish\tname Leszek\t\r\v\b\t\tnote malformed line still works\n"

[20:19] <leszekdubiel> and here is per5

[20:19] <leszekdubiel> perl -e 'use utf8; use Modern::Perl qw{2017}; use Data::Dumper; no warnings qw{uninitialized}; while (<STDIN>) { my %h = map { split / /, $_, 2 } grep { / / } split /[^[:print:]]/, $_, -1; 0 && warn Dumper(\%h); print "\t$_ $h{$_}" for @ARGV ? @ARGV : sort keys %h; print "\t\n"; }' name age about

[20:20] <leszekdubiel> has three command line arguments; last word in line is "about"

[20:20] <AlexDaniel> it's ok now

[20:20] <leszekdubiel> ps. I don't know what gist is... i use firefox to connect here

[20:26] <leszekdubiel> https://gist.github.com/leszekdubiel/46aa24388b067bc31c2e758ace6f3f51

[20:35] <AlexDaniel> leszekdubiel: why does the input start with \t ?

[20:35] <leszekdubiel> because we extensively filter on such files... 

[20:36] <leszekdubiel> and you could grep for  example     \tname Leszek\t

[20:36] <leszekdubiel> if there would be no \t at the beginning then you will have to write   (^|\t)name Leszek(\t|$)

[20:36] <leszekdubiel> so the \t at start is for simple filtering such a database

[20:37] <leszekdubiel> we call such a format "nvd" -- name-value data;    and the script we made yesterday converts csv to nvd

[20:39] <leszekdubiel> here is my final onlinter to convert csv (tab separated) to my format nvd: 

[20:39] <leszekdubiel> my @kol = get.split("\t"); .put for lines.map({ "\t" ~ (@kol Z .split("\t")).join("\t") ~ "\t" });

[20:39] <evalable6> leszekdubiel, rakudo-moar d904b7048: OUTPUT: «␉♥🦋 ꒛㎲₊⼦🂴⧿⌟ⓜ≹℻ 😦⦀🌵 🖰㌲⎢➸ 🐍💔 🗭…»

[20:39] <evalable6> leszekdubiel, Full output: https://gist.github.com/3681ff3997ed2db0d6122b54265ab9a4

[20:40] <AlexDaniel> leszekdubiel: what about this? https://gist.github.com/AlexDaniel/53e64bd4d6fa7361bb42c3d9ed75e8cf

[20:40] <AlexDaniel> leszekdubiel: oops, I edited it a bit, same link

[20:40] <leszekdubiel> Ok! Thank you very much. I will test that. 

[20:41] <leszekdubiel> I will let you know today, tommorow or on working monday. Thank you for help. 

[20:42] <AlexDaniel> leszekdubiel: it does seem to produce the same output, at least for that input

[20:45] <leszekdubiel> Yes. The same output. I will test that on bigger data. 

[20:45] <leszekdubiel> One question -- perl6 doesn't split on regexes but on fixed strings? 

[20:47] <tobs> leszekdubiel: it can do either, but regexes aren't needed in this case

[20:49] <leszekdubiel> but if we split on nonprintable chars results are different; for example when i print on input: 

[20:49] <leszekdubiel> printf "\tname alfa be\bta gamma\n"

[20:49] <evalable6> leszekdubiel, rakudo-moar d904b7048: OUTPUT: «␉name alfa be␈ta gamma␤»

[20:49] <leszekdubiel> then perl5 prints

[20:50] <leszekdubiel> ~~~>name alfa be~~~>ta gamma~~~>|

[20:50] <leszekdubiel> and the program by AlexDaniel discards record 

[20:56] *** olaf_ joined
[20:59] <Geth> ¦ ecosystem: 4cebbb44ee | (Jonathan Stowe)++ | META.list

[20:59] <Geth> ¦ ecosystem: cocked up line for TestML

[20:59] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/4cebbb44ee

[21:02] <leszekdubiel> say "\tname alfa be\bta gamma\n".split(/<!print>/).perl;

[21:02] <evalable6> leszekdubiel, rakudo-moar d904b7048: OUTPUT: «("", "\tname alfa be", "\bta gamma", "\n", "").Seq␤»

[21:03] <leszekdubiel> say "Xname alfa beXta gamma".split(/X/).perl;

[21:03] <evalable6> leszekdubiel, rakudo-moar d904b7048: OUTPUT: «("", "name alfa be", "ta gamma").Seq␤»

[21:03] <leszekdubiel> why nonprintables are included while X is not in resulting tables? 

[21:04] <timotimo> <!blah> is zero-length match

[21:05] <timotimo> you can put a . after it so it'll not end up in the result

[21:05] <timotimo> more exactly, <!blah> is a negative lookahead

[21:06] <squashable6> 🍕 jonathanstowe++ wrote a comment on “YAML”: https://github.com/perl6/ecosystem-unbitrot/issues/546#issuecomment-462079405

[21:06] <tobs> m: say "\tname alfa be\bta gamma\n".split(/<-print>/).perl

[21:06] <camelia> rakudo-moar d904b7048: OUTPUT: «("", "name alfa be", "ta gamma", "").Seq␤»

[21:07] <leszekdubiel> aaaa... thank you!   i was looking for   [^[:print:]]   as in perl5  :) :) 

[21:07] <timotimo> ah

[21:08] <timotimo> m: say "foo\tbar" ~~ / <-:Print> /

[21:08] <camelia> rakudo-moar d904b7048: OUTPUT: «｢f｣␤»

[21:08] <timotimo> no not like that

[21:08] <timotimo> m: say "foo\tbar" ~~ / <-<:Print>> /

[21:08] <camelia> rakudo-moar d904b7048: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3say "foo\tbar" ~~ / <-7⏏5<:Print>> /␤Unrecognized regex metacharacter - (must be quoted to match literally)␤at <tmp>:1␤----…»

[21:08] <timotimo> nope

[21:09] <leszekdubiel> in perl5 there was     split /[^[:print:]]/

[21:09] <leszekdubiel> and in perl6     .split(/<-print>/)

[21:09] <timotimo> or use anti-split

[21:09] <timotimo> m: say "foo\tbar\tbaz".comb(/<print>+/)

[21:09] <camelia> rakudo-moar d904b7048: OUTPUT: «(foo bar baz)␤»

[21:10] <timotimo> ^- gives you Str objects by default rather than Match objects

[21:10] <timotimo> if you prefer the simpler objects

[21:10] <tobs> that's not anti-split, that's co-split :)

[21:10] <timotimo> true

[21:12] <leszekdubiel> perl -e 'use Data::Dumper; my @a = split /[^[:print:]]/, "alfa\tbeta\bgamma", -1; print Dumper(\@a)'

[21:12] <leszekdubiel> this was perl5 

[21:12] <leszekdubiel> I will test comb too... thanks for hint. 

[21:13] <timotimo> YW

[21:16] *** abraxxa joined
[21:21] *** cpan-p6 left
[21:22] *** cpan-p6 joined
[21:27] *** isomorphismes joined
[21:28] *** molaf left
[21:36] *** ravenousmoose left
[21:37] *** leszekdubiel left
[21:43] *** drolax left
[21:45] *** drolax joined
[21:49] *** drolax left
[21:49] *** drolax joined
[21:52] *** molaf joined
[21:57] <squashable6> 🍕 bduggan++ wrote a comment on “Jupyter::Kernel”: https://github.com/perl6/ecosystem-unbitrot/issues/444#issuecomment-462082920

[21:57] <squashable6> 🍕🍕🍕  First contribution by bduggan++! ♥

[21:58] <squashable6> 🍕 AlexDaniel++ reopened issue “Jupyter::Kernel”: https://github.com/perl6/ecosystem-unbitrot/issues/444

[22:00] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Jupyter::Kernel”: https://github.com/perl6/ecosystem-unbitrot/issues/444#issuecomment-462083121

[22:00] <squashable6> 🍕 PowellDean++ wrote a comment on “Locale-Codes-Country”: https://github.com/perl6/ecosystem-unbitrot/issues/455#issuecomment-462083146

[22:02] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Jupyter::Kernel”: https://github.com/perl6/ecosystem-unbitrot/issues/444#issuecomment-462083269

[22:03] <squashable6> 🍕 AlexDaniel++ labeled issue “Locale-Codes-Country” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/455

[22:04] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Locale-Codes-Country”: https://github.com/perl6/ecosystem-unbitrot/issues/455#issuecomment-462083432

[22:05] <squashable6> 🍕 AlexDaniel++ labeled issue “File::Compare” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/386

[22:07] <squashable6> 🍕 jonathanstowe++ wrote a comment on “NativeCall”: https://github.com/perl6/ecosystem-unbitrot/issues/478#issuecomment-462083624

[22:08] <squashable6> 🍕 AlexDaniel++ wrote a comment on “NativeCall”: https://github.com/perl6/ecosystem-unbitrot/issues/478#issuecomment-462083685

[22:09] *** dct joined
[22:12] <squashable6> 🍕 jonathanstowe++ labeled issue “HTTP::UserAgent” (fixed): https://github.com/perl6/ecosystem-unbitrot/issues/420

[22:16] *** leszekdubiel joined
[22:19] <Xliff_> m: "0xdeadbeef" ~~ / <[0..A..Fa..f]>+ /

[22:19] <camelia> rakudo-moar d904b7048: OUTPUT: «Potential difficulties:␤    Repeated character (.) unexpectedly found in character class␤    at <tmp>:1␤    ------> 3"0xdeadbeef" ~~ / <7⏏5[0..A..Fa..f]>+ /␤»

[22:20] <Xliff_> ???

[22:20] <evalable6> Xliff_, rakudo-moar d904b7048: OUTPUT: «Stub code executed␤  in block <unit> at /tmp/Ppcr70IYZM line 1␤»

[22:21] *** yqt left
[22:21] <tobs> m: say "0xdeadbeef" ~~ m:g/ <[0..9A..Fa..f]>+ /

[22:21] <camelia> rakudo-moar d904b7048: OUTPUT: «(｢0｣ ｢deadbeef｣)␤»

[22:22] <tobs> Xliff_: there was a "9" missing, probably an LTA error in that case?

[22:23] <AlexDaniel> it makes sense, it did 0..A and then there were two .

[22:23] <Geth> ¦ perl6-examples: ba9f855689 | (David Warring)++ | categories/rosalind/mprt-grondilu.pl

[22:23] <Geth> ¦ perl6-examples: fix rosalind/mprt-grondilu.pl on Rakudo 2018.12+ bleed

[22:23] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/ba9f855689

[22:25] <tobs> hmm, yeah, it's just NQA

[22:30] *** Cabanossi left
[22:33] *** aindilis left
[22:34] <Xliff_> bisect: m: my token ulong_num { '0'? <[ xX ]> [ <[0..9A..Fa..f]>+ || "'" ~ "'" <[0..9A..Fa..f]>+ ] » }; ("0x1234567890" ~~ /^<ulong_num>$/).gist.say

[22:34] <bisectable6> Xliff_, On both starting points (old=2015.12 new=d904b70) the exit code is 0 and the output is identical as well

[22:34] <bisectable6> Xliff_, Output on both points: «｢0x1234567890｣␤ ulong_num => ｢0x1234567890｣␤»

[22:37] *** Cabanossi joined
[22:45] *** leah2 left
[22:46] *** aindilis joined
[22:48] <timotimo> m: class Broken is repr<CStruct> { has int32 $.x; has int32 $.y; method with-x(int32 $!x) { self } }; Broken.new.with-x(99).say

[22:48] <camelia> rakudo-moar d904b7048: OUTPUT: «Broken.new(x => 99, y => 0)␤»

[22:48] <timotimo> m: class Broken is repr<CStruct> { has int32 $.x; has int32 $.y; multi method with-x(int32 $!x) { self } }; Broken.new.with-x(99).say

[22:48] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot resolve caller with-x(Broken:D: Int:D); none of these signatures match:␤    (Broken: int32 $!x, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[22:48] <timotimo> ooh, of course

[22:55] <timotimo> m: class Broken is repr<CStruct> is rw { has int32 $.x; has int32 $.y; multi method with-x(Int $x) { $!x = $x; self } }; Broken.new.with-x(99).say

[22:55] <camelia> rakudo-moar d904b7048: OUTPUT: «Broken.new(x => 99, y => 0)␤»

[22:55] <timotimo> now why would i get an error locally

[22:56] *** dct left
[22:56] <moritz> because it's Broken :D

[22:57] <timotimo> oh, no way!

[22:58] <timotimo> m: class Broken is repr<CStruct> is rw { multi method with-x(Int $x) { $!x = $x; self }; has int32 $.x; has int32 $.y }; Broken.new.with-x(99).say

[22:58] <camelia> rakudo-moar d904b7048: OUTPUT: «Cannot assign to an immutable value␤  in method with-x at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:58] <timotimo> this has to accidentally generate the wrong code for $!x assignment there

[22:58] <timotimo> because it just assumes an object attribute by default?

[22:59] <timotimo> i wonder if we have a ticket for that?

[22:59] <timotimo> bisect: class Broken is repr<CStruct> is rw { multi method with-x(Int $x) { $!x = $x; self }; has int32 $.x; has int32 $.y }; Broken.new.with-x(99).say

[22:59] <bisectable6> timotimo, On both starting points (old=2015.12 new=d904b70) the exit code is 1 and the output is identical as well

[22:59] <bisectable6> timotimo, Output on both points: «Cannot assign to an immutable value␤  in method with-x at /tmp/xYrlcR2RbY line 1␤  in block <unit> at /tmp/xYrlcR2RbY line 1␤␤»

[23:00] <timotimo> committable: 2015.01 class Broken is repr<CStruct> is rw { multi method with-x(Int $x) { $!x = $x; self }; has int32 $.x; has int32 $.y }; Broken.new.with-x(99).say

[23:00] <committable6> timotimo, ¦2015.01: «===SORRY!===␤Cannot create rw-accessors for natively typed attribute '$!x'␤ «exit code = 1»»

[23:00] <timotimo> committable: 2015.06 class Broken is repr<CStruct> is rw { multi method with-x(Int $x) { $!x = $x; self }; has int32 $.x; has int32 $.y }; Broken.new.with-x(99).say

[23:00] <committable6> timotimo, ¦2015.06: «Cannot assign to an immutable value␤  in method with-x at /tmp/NKAFBd5fPu:1␤  in block <unit> at /tmp/NKAFBd5fPu:1␤␤ «exit code = 1»»

[23:00] <timotimo> it's always been this, eh?

[23:00] <timotimo> should perhaps build a better error message in any case

[23:01] *** mowcat left
[23:04] *** leah2 joined
[23:09] <squashable6> 🍕 jonathanstowe++ labeled issue “Lumberjack::Application” (failing dependency): https://github.com/perl6/ecosystem-unbitrot/issues/459

[23:12] *** ferreira left
[23:12] <squashable6> 🍕 AlexDaniel++ labeled issue “Color::Named” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/355

[23:12] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Color::Named”: https://github.com/perl6/ecosystem-unbitrot/issues/355#issuecomment-462088069

[23:14] *** rindolf left
[23:18] <squashable6> 🍕 AlexDaniel++ wrote a comment on “LN”: https://github.com/perl6/ecosystem-unbitrot/issues/446#issuecomment-462088470

[23:19] <squashable6> 🍕 AlexDaniel++ labeled issue “ArrayHash” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/340

[23:19] <squashable6> 🍕 AlexDaniel++ wrote a comment on “ArrayHash”: https://github.com/perl6/ecosystem-unbitrot/issues/340#issuecomment-462088574

[23:20] <squashable6> 🍕 AlexDaniel++ labeled issue “App::jsonv” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/339

[23:20] <squashable6> 🍕 AlexDaniel++ wrote a comment on “App::jsonv”: https://github.com/perl6/ecosystem-unbitrot/issues/339#issuecomment-462088641

[23:22] <squashable6> 🍕 AlexDaniel++ labeled issue “Masquerade” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/466

[23:22] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Masquerade”: https://github.com/perl6/ecosystem-unbitrot/issues/466#issuecomment-462088740

[23:23] <squashable6> 🍕 AlexDaniel++ labeled issue “Plosurin” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/501

[23:23] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Plosurin”: https://github.com/perl6/ecosystem-unbitrot/issues/501#issuecomment-462088816

[23:25] <squashable6> 🍕 AlexDaniel++ labeled issue “Math::ContinuedFractions” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/467

[23:25] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Math::ContinuedFractions”: https://github.com/perl6/ecosystem-unbitrot/issues/467#issuecomment-462088926

[23:26] <squashable6> 🍕 jnthn++ wrote a comment on “NativeCall”: https://github.com/perl6/ecosystem-unbitrot/issues/478#issuecomment-462089009

[23:26] <squashable6> 🍕 AlexDaniel++ labeled issue “IO::Prompter” (issue sent): https://github.com/perl6/ecosystem-unbitrot/issues/425

[23:26] <squashable6> 🍕 AlexDaniel++ wrote a comment on “IO::Prompter”: https://github.com/perl6/ecosystem-unbitrot/issues/425#issuecomment-462089019

[23:27] *** RobotAI joined
[23:28] <squashable6> 🍕 AlexDaniel++ labeled issue “Pod::Strip” (PR sent): https://github.com/perl6/ecosystem-unbitrot/issues/505

[23:28] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Pod::Strip”: https://github.com/perl6/ecosystem-unbitrot/issues/505#issuecomment-462089123

[23:29] <squashable6> 🍕 AlexDaniel++ wrote a comment on “NativeCall”: https://github.com/perl6/ecosystem-unbitrot/issues/478#issuecomment-462089184

[23:29] <squashable6> 🍕 AlexDaniel++ closed issue “NativeCall”: https://github.com/perl6/ecosystem-unbitrot/issues/478

[23:30] *** leszekdubiel left
[23:35] *** olaf_ left
[23:40] *** zacts joined
[23:44] *** zachk left
[23:44] *** zachk joined
[23:48] *** drolax left
[23:55] *** Kaiepi left
