[00:06] <guifa> kawaii: are you sure you’re passing a hash and not the literal value 2?

[00:23] *** MasterDuke joined
[00:24] *** MasterDuke left
[00:24] *** MasterDuke joined
[00:45] *** mowcat joined
[00:45] *** mowcat left
[00:54] *** w_richard_w joined
[00:59] *** xiaoyafeng joined
[01:16] *** khisanth_ left
[01:18] *** MasterDuke left
[01:22] *** tobs left
[01:23] *** MasterDuke joined
[01:24] *** MasterDuke left
[01:24] *** MasterDuke joined
[01:29] *** khisanth_ joined
[01:45] *** Manifest0 left
[01:48] *** netrino_ left
[01:50] *** Manifest0 joined
[02:03] *** Manifest0 left
[02:10] *** Manifest0 joined
[02:12] *** xiaoyafeng left
[02:15] *** Manifest0 left
[02:20] *** Manifest0 joined
[02:33] *** Manifest0 left
[02:36] *** tobs joined
[02:39] *** vrurg left
[02:39] *** vrurg joined
[02:40] *** Manifest0 joined
[02:57] *** Kaiepi left
[02:59] *** kurahaupo left
[02:59] *** kurahaupo joined
[03:07] *** Cabanossi left
[03:09] *** Cabanossi joined
[03:29] *** ChoHag joined
[03:33] <Xliff> m: use NativeCall; class A is repr('CStruct') { has Str $.a is rw }; (my $a = A.new).a = "Hi!"

[03:33] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) Cannot modify an immutable 'Str' type object␤  in block <unit> at /tmp/fx7vYeGymd line 1␤␤»

[03:33] <Xliff> ^^ This is still a problem?

[03:33] *** ChoHag left
[03:36] *** kurahaupo left
[03:36] *** kurahaupo joined
[03:42] *** ChoHag joined
[03:54] *** Manifest0 left
[03:59] *** Manifest0 joined
[03:59] *** regreg joined
[04:17] *** Manifest0 left
[04:23] *** Manifest0 joined
[04:45] *** Manifest0 left
[04:46] *** skids left
[04:50] *** Manifest0 joined
[05:12] *** epony left
[05:12] *** Manifest0 left
[05:17] *** sauvin joined
[05:18] *** Manifest0 joined
[05:41] *** epony joined
[05:52] *** khisanth_ left
[05:54] *** jmerelo joined
[05:57] *** khisanth_ joined
[06:01] *** khisanth_ left
[06:07] *** hamhu3 left
[06:07] *** hamhu3 joined
[06:08] *** domidumont joined
[06:12] *** domidumont1 joined
[06:14] *** domidumont left
[06:16] *** Xliff left
[06:24] *** hamhu3 left
[06:25] *** khisanth_ joined
[06:25] *** hamhu3 joined
[06:31] *** cpan-p6 left
[06:31] *** cpan-p6 joined
[06:31] *** cpan-p6 left
[06:31] *** cpan-p6 joined
[06:32] *** Manifest0 left
[06:36] *** hamhu3 left
[06:36] *** hamhu3 joined
[06:39] *** Manifest0 joined
[06:39] *** hamhu3 left
[06:41] *** hamhu3 joined
[06:44] *** atroxaper joined
[06:44] <atroxaper> Hello, #perl6 !

[06:45] <atroxaper> How It can be explained?

[06:45] <atroxaper> p6: sub e1 { CATCH { default { say 'caught'} }; [].pop }; e1

[06:45] <evalable6> atroxaper, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) Cannot pop from an empty Array␤  in sub e1 at /tmp/G3JhMmG8Kj line 1␤  in block <unit> at /tmp/G3JhMmG8Kj line 1␤␤»

[06:46] <atroxaper> p6: sub e2 { [].pop; CATCH { default { say 'caught'} }}; e2

[06:46] <evalable6> atroxaper, rakudo-moar d31fb2706: OUTPUT: «caught␤»

[06:46] <jmerelo> atroxaper: last lines of blocks do funky stuff

[06:47] <jmerelo> atroxaper: that one is described as a trap here: https://docs.perl6.org/language/traps#Phasers_and_implicit_return

[06:48] *** holyghost joined
[06:48] <holyghost> hello, back from vacation with my kids

[06:48] <jmerelo> holyghost: welcome back

[06:48] <holyghost> will start tommorrow on some more perl6 and objc code

[06:48] <holyghost> jmerelo : thanks

[06:49] <atroxaper> jmerelo: But why it wasn't caught in the first case?

[06:50] <jmerelo> atroxaper: not sure, but if I had to bet on something, I would say that it's thrown from outside the block, when it's sunk. I mean, it needs to be thrown in another scope

[06:51] *** ufobat_ joined
[06:51] <jmerelo> atroxaper: as a matter of fact, [].pop is not returned in the second case. 

[06:51] <atroxaper> jmerelo: It is funny, but if I use `@().pop` instead of `[].pop` it is caught in both cases :)

[06:52] <atroxaper> I wrote [].pop just for exception. For illustration;

[06:52] <jmerelo> atroxaper: itemization and contexts are arcanes...

[06:52] <jmerelo> atroxaper: you are forcing itemization when you do @()

[06:53] <atroxaper> jmerelo: I see. Thank you :)

[06:53] <jmerelo> I was going to test "return"

[06:53] <jmerelo> Let me see

[06:53] <jmerelo> p6: sub e1 { CATCH { default { say 'caught'} }; return [].pop }; e1

[06:53] <evalable6> jmerelo, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) Cannot pop from an empty Array␤  in sub e1 at /tmp/Boh7UGPhj8 line 1␤  in block <unit> at /tmp/Boh7UGPhj8 line 1␤␤»

[06:53] <jmerelo> p6: sub e1 { CATCH { default { say 'caught'} }; return [].pop }; say e1

[06:53] <evalable6> jmerelo, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) Cannot pop from an empty Array␤  in sub e1 at /tmp/GqiPZfp7Cv line 1␤  in block <unit> at /tmp/GqiPZfp7Cv line 1␤␤»

[06:54] <jmerelo> atroxaper: no, return does not itemize...

[06:54] <jmerelo> atroxaper: good catch, anyway. Thanks!

[06:54] *** ufobat__ left
[06:55] <atroxaper> jmerelo: `try { CATCH {} [].pop }` works well btw

[06:57] <jmerelo> atroxaper: try is a different thing... But, as I say, all the itemization/sink thing is a bit complicated and might always surprise you.

[06:58] <atroxaper> jmerelo: Thank you for explanation :)

[06:58] <jmerelo> atroxaper: my pleasure :-)

[07:21] *** hamhu3 left
[07:22] *** hamhu3 joined
[07:26] <Geth> ¦ doc: d463a81194 | (JJ Merelo)++ | doc/Type/CallFrame.pod6

[07:26] <Geth> ¦ doc: Revise CallFrame

[07:26] <Geth> ¦ doc: 

[07:26] <Geth> ¦ doc: Also have a look at history, like this commit

[07:26] <Geth> ¦ doc: https://github.com/rakudo/rakudo/commit/7966dad5e9b0ef8d78592ede76644d805db36215

[07:26] <synopsebot> Link: https://doc.perl6.org/type/CallFrame

[07:26] <Geth> ¦ doc: where it lost `level`. Eliminates references to it, and some grammar

[07:26] <Geth> ¦ doc: corrections. Refs #2719

[07:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d463a81194

[07:26] <Geth> ¦ doc: e90d7c10f3 | (JJ Merelo)++ | doc/Type/CallFrame.pod6

[07:26] <Geth> ¦ doc: Adds example for .code, refs #2719

[07:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e90d7c10f3

[07:31] <Geth> ¦ doc: fbddb56df3 | (JJ Merelo)++ | doc/Type/CallFrame.pod6

[07:31] <Geth> ¦ doc: Wraps up refs #2719

[07:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fbddb56df3

[07:31] <synopsebot> Link: https://doc.perl6.org/type/CallFrame

[07:34] <tyil> jmerelo: is there anything I need to do at this point for GSoC

[07:34] <tyil> I added myself as Want to Mentor on 2 projects

[07:34] <Geth> ¦ doc: 1b138b3da4 | (JJ Merelo)++ | html/robots.txt

[07:34] <Geth> ¦ doc: Adds directory to exclusion rules refs #2720

[07:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b138b3da4

[07:37] <jmerelo> tyil: I don't think so.

[07:37] <jmerelo> weekly: https://twitter.com/DrForr/status/1119141135631282176

[07:37] <notable6> jmerelo, Noted!

[07:37] <jmerelo> tyil: thanks a lot.

[07:38] <tyil> jmerelo: ack, I shall patiently wait then :)

[08:06] *** sena_kun joined
[08:06] *** Sgeo_ left
[08:06] *** Sgeo_ joined
[08:11] *** rindolf joined
[08:14] *** mowcat joined
[08:17] *** bakedb_ joined
[08:43] *** ravenousmoose_ left
[08:47] *** rindolf left
[08:48] *** ravenousmoose joined
[08:52] *** w_richard_w left
[08:54] *** rindolf joined
[09:04] *** molaf joined
[09:10] *** epony left
[09:12] *** kurahaupo left
[09:12] *** Xliff joined
[09:13] <Xliff> \o

[09:14] <Xliff> m: use NativeCall; my $b = Buf.allocate(10, 0); my $c = nativecast(Pointer, $b); say +$c;

[09:14] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «94844708859296␤»

[09:14] <Xliff> m: use NativeCall; my $b = Buf.allocate(10, 0); say $b.WHERE; my $c = nativecast(Pointer, $b); say +$c;

[09:14] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «140339953361616␤93951909038464␤»

[09:15] <Xliff> m: use NativeCall; my $b = Buf.allocate(10, 0); say $b.WHERE; my $c = nativecast(Pointer, $b); my $d = nativecast(CArray[uint8], $c); $d[$_].say for ^10;

[09:15] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «140303646201964␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤»

[09:16] <Xliff> m: use NativeCall; my $b = Buf.allocate(10, 1, 2, 3, 4, 5); say $b.WHERE; my $c = nativecast(Pointer, $b); my $d = nativecast(CArray[uint8], $c); $d[$_].say for ^10;

[09:16] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) Cannot resolve caller allocate(Buf:U: Int:D, Int:D, Int:D, Int:D, Int:D, Int…»

[09:16] <evalable6> Xliff, Full output: https://gist.github.com/7f1e7d0c1a150da57d8efa76d5e52387

[09:16] <Xliff> m: use NativeCall; my $b = Buf.new(^10); say $b.WHERE; my $c = nativecast(Pointer, $b); my $d = nativecast(CArray[uint8], $c); $d[$_].say for ^10;

[09:16] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «139953228733812␤0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤»

[09:17] *** _jrjsmrtn left
[09:17] *** __jrjsmrtn__ joined
[09:25] *** kurahaupo joined
[09:32] *** Manifest0 left
[09:37] *** Manifest0 joined
[09:40] *** Xliff left
[09:43] *** Xliff joined
[09:44] <Xliff> \o

[09:44] *** regreg left
[09:50] *** abraxxa left
[10:01] *** kurahaupo left
[10:01] *** kurahaupo_ joined
[10:03] <Xliff> m: use NativeCast; role A { method p { +self }; }; my $p = Pointer.new but A; say $p

[10:03] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find NativeCast at line 1 in:␤    file#/home/bisectab…»

[10:03] <evalable6> Xliff, Full output: https://gist.github.com/7634c4078f0a9574a007d3027d36790f

[10:03] <Xliff> m: use NativeCall; role A { method p { +self }; }; my $p = Pointer.new but A; say $p

[10:03] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «(exit code 1) This REPR cannot change type␤  in block <unit> at /tmp/AF3T9sd2A8 line 1␤␤»

[10:03] <Xliff> ^^ What's the best way to work around this error?

[10:03] <Xliff> m: use NativeCall; role A { method p { +self }; }; my $p = Pointer.new; say $p

[10:03] <evalable6> Xliff, rakudo-moar d31fb2706: OUTPUT: «NativeCall::Types::Pointer<NULL>␤»

[10:05] *** Black_Ribbon left
[10:06] *** holyghost left
[10:06] *** holyghost joined
[10:11] *** kaare_ left
[10:11] *** kaare_ joined
[10:12] *** epony joined
[10:13] *** atroxaper left
[10:14] *** hamhu3 left
[10:15] *** kaare_ left
[10:15] *** kaare_ joined
[10:16] *** hamhu3 joined
[10:18] *** holyghost left
[10:18] *** aborazmeh joined
[10:18] *** aborazmeh left
[10:18] *** aborazmeh joined
[10:19] *** jmerelo left
[10:20] *** holyghost joined
[10:21] *** kurahaupo joined
[10:21] *** kurahaupo_ left
[10:27] *** ufobat_ left
[10:41] *** beep joined
[10:42] <beep> hello

[10:47] *** beep left
[10:50] <tadzik> hi benchable6 

[10:50] <tadzik> hi beep

[10:50] <tadzik> oops

[11:12] *** Manifest0 left
[11:17] *** Manifest0 joined
[11:24] *** Manifest0 left
[11:30] *** Manifest0 joined
[11:32] *** cibs_ is now known as cibs

[11:36] *** aborazmeh left
[11:40] *** aborazmeh joined
[11:40] *** aborazmeh left
[11:40] *** aborazmeh joined
[11:43] *** netrino joined
[11:45] *** zxcvz joined
[11:52] *** netrino_ joined
[11:53] <moritz> good morning tadzik :D

[11:53] *** netrino left
[11:54] *** molaf left
[11:55] *** p6lert left
[11:56] *** masak left
[11:56] *** Util left
[11:56] *** pmichaud left
[11:56] *** synopsebot left
[11:56] *** dalek left
[11:56] *** [ptc] left
[11:57] *** Geth left
[11:57] *** aborazmeh left
[11:58] *** molaf joined
[12:00] *** molaf left
[12:06] <sena_kun> docs.perl6.org is down

[12:06] <sena_kun> moritz, ping? ^

[12:06] <lizmat> timotimo ^^

[12:08] *** cpan-p6 left
[12:09] *** cpan-p6 joined
[12:09] *** cpan-p6 left
[12:09] *** cpan-p6 joined
[12:13] <discord6> <Vendethiel> \o

[12:16] *** regreg joined
[12:30] <timotimo> moritz: can't reach the vm host of p6c again; is the network having trouble?

[12:31] <timotimo> traceroute says the last hop that responds is  9  ae12-0-rt1-nbg6a.core.noris.net (62.128.0.246)  2044.207 ms * *

[12:31] <timotimo> that's quite a lot of miliseconds there, compared to about 40 the hop before that

[12:34] <lizmat> I don't get any further than et7-0-5-0-rt4-nbg3.core.noris.net

[12:34] <timotimo> that's the last hop i get before this one i pasted, but the one i pasted only has 1/3 responses as well

[12:34] <lizmat> up to 20 msecs until then

[12:35] <timotimo> all in all, there's probably not much we can do from here?

[12:35] <lizmat> yeah, fraid so  :-(

[12:44] *** traxex joined
[12:50] <moritz> I can give some more folks access to the hypervisor

[12:51] <moritz> but it seems that one is down as well :(

[12:52] <moritz> but the fact that the last hop it reaches is a core router points to a larger-ish network issue within the hoster

[12:54] *** aborazmeh joined
[12:54] *** aborazmeh left
[12:54] *** aborazmeh joined
[12:55] <lizmat> moritz: :-(

[12:56] <lizmat> moritz: I guess it has somebody's full attention already then ?

[13:00] <timotimo> moritz: the hypervisor being master.? i have that and i use it regularly, but not in this case :)

[13:00] <timotimo> moritz: should we contact noris networks directly when we encounter this problem?

[13:05] <moritz> timotimo: no

[13:05] <moritz> I'm looking into it

[13:05] <timotimo> thank you

[13:13] <moritz> doesn't seem large-scale after all

[13:15] *** lucasb joined
[13:22] <moritz> not making much progress. The switch doesn't ping, but I don't know if it should

[13:22] <timotimo> you mean it could just be configured to ignore icmp?

[13:23] <moritz> so could either be a localized network issue, or a hardware problem with master

[13:23] <timotimo> i assume you're physically located quite a few kilometers away from the switch in question?

[13:23] <moritz> timotimo: or its management port could be not routed except from the network management system

[13:23] <moritz> yes :(

[13:23] <timotimo> isn't that always the case :S

[13:24] <moritz> and even if I drove there, I don't know if I could enter our datacenter

[13:24] <moritz> the days when noris was a small company, and everybody could do whatever they wanted are over

[13:25] <timotimo> yeah

[13:25] <timotimo> noris, nofun.

[13:27] <moritz> I mean, I could get access with pre-registration on a regular work day

[13:28] <timotimo> is the kind of song & dance you need to perform to fix network equipment also forbidden during karfreitag?

[13:30] <moritz> for a major outage I could certainly declare an incident and get people phoned out of their holiday, but I hesitate to do that to my colleagues

[13:30] <moritz> and I assume they monitor their network equipment... hey, I could check our systems for an alarm from that

[13:32] *** aborazmeh left
[13:37] <moritz> ok, I've written an email to my co-workers in the DC to powercycle the server when anybody happens to be there

[13:38] <moritz> if somebody is there over the weekend, they'll do it; if not, I can come in after the holidays (Tuesday) to do it, and maybe diagnoe it more if necessary

[13:38] <moritz> not great, but I don't think there's much more I can do right now :(

[13:39] <timotimo> hum. can we put up a temporary thingie that serves perl6.org, docs.perl6.org, and maybe modules.perl6.org

[13:40] <kawaii> I'm trying to extract a value from a hash but keep running into a `Odd number of elements found where hash initializer expected: 2.0` message https://www.irccloud.com/pastebin/xhVsoW2A/

[13:40] <timotimo> aha, you're passing something that's an item into a %foo via assignment

[13:40] <timotimo> you can := instead, for example

[13:41] <timotimo> or bloop.list or bloop<> for example to un-itemize it so it'll do an iteration over the object to hashify it

[13:41] <kawaii> hmm

[13:42] <timotimo> hm, i imagine we can make that error message better if there's just one element

[13:42] <kawaii> so %heights contains `{alolan => [10.9], default => [2]}`

[13:42] <kawaii> and then `values-or-defaults` is supposed to just contain a single result

[13:43] <kawaii> return*

[13:43] *** MasterDuke left
[13:43] <timotimo> in that case %height is probably wrong?

[13:43] <timotimo> and it should be $height?

[13:43] <kawaii> ```

[13:43] <kawaii> https://www.irccloud.com/pastebin/8b1t9ujH/

[13:43] <kawaii> it's supposed to just output what you ask for ($form in this case)

[13:43] <kawaii> one of the keys of the hash

[13:44] <kawaii> I'm just trying to extract the number I asked for, not the entire hash

[13:44] <sena_kun> `%output = |(%output), |(%overrides)` feels wrong to me

[13:45] <kawaii> i'm sure there's a better way but I don't know it :)

[13:45] <sena_kun> m: my %a = a => 1; my %b = b => 2; my %foo = |(%a), |(%b);

[13:45] <evalable6> sena_kun, rakudo-moar d31fb2706: OUTPUT: «»

[13:45] <sena_kun> m: my %a = a => 1; my %b = b => 2; my %foo = |(%a), |(%b); say %foo;

[13:45] <evalable6> sena_kun, rakudo-moar d31fb2706: OUTPUT: «{a => 1, b => 2}␤»

[13:45] <sena_kun> hmm, no, it's ok

[13:45] <sena_kun> m: my %a = a => 1; my %b = b => 2; my %foo = |(%a, %b); say %foo;

[13:45] <evalable6> sena_kun, rakudo-moar d31fb2706: OUTPUT: «{a => 1, b => 2}␤»

[13:45] <sena_kun> m: my %a = a => 1; my %b = b => 2; my %foo = %a, %b; say %foo;

[13:45] <evalable6> sena_kun, rakudo-moar d31fb2706: OUTPUT: «{a => 1, b => 2}␤»

[13:46] <sena_kun> kawaii, what's the exact line of error you are getting?

[13:46] <kawaii> sena_kun https://www.irccloud.com/pastebin/mruPzNS0/

[13:46] <kawaii> https://github.com/kawaii/p6-pokeapi/tree/master/lib/Pokeapi ^

[13:47] <kawaii> https://www.irccloud.com/pastebin/WYVVDbAb/and%20this%20is%20my%20test%20script

[13:49] <sena_kun> you are doing `my %output = %hash<default>` and the default is 2.0, so it is `my %a = 5`, only a single element. You want output to be `:default(2.0`, right?

[13:51] <sena_kun> kawaii, ^?

[13:51] <timotimo> if that's the case, maybe you want %hash<default>:p to get a pair out of it

[13:53] <kawaii> sena_kun, timotimo hmm yes I think that's right, need to step away from my laptop for 30 minutes but will test soon :)

[13:53] <kawaii> Probably missing {} from my $form too

[13:53] <kawaii> maybe

[13:53] *** regreg left
[13:54] <timotimo> i hope this isn't rude, but it'd be cool if the next pastes could go up somewhere that either runs the code on its own (like tio) or somewhere that camelia can run, and have example data in it so that it'll run immediately

[13:54] <timotimo> then we can super quickly iterate towards the right solution

[13:56] <kawaii> timotimo: of course not :) my code isn't very portable right now but I'm working on a ::Test datasource to hopefully resolve that!

[13:57] <timotimo> could potentially be enough to just dump the contents of relevant variables up front with dd and just copy-paste what it outputs to the snippet :)

[14:00] *** hamhu3 left
[14:01] *** hamhu3 joined
[14:06] <lizmat> moritz: so basically all of Perl 6's infra will be down until after Easter?

[14:06] * lizmat hopes for a resurrection on Sunday

[14:06] <lizmat> hopefully earlier..

[14:07] *** mowcat left
[14:08] <lizmat> fwiw, quite a few people are noticing on Facebook  :-(

[14:10] *** skids joined
[14:11] <sjn> hmf

[14:11] <sjn> let's hope for a resolution soon :)

[14:13] <timotimo> someone™ just™ has to build the repos locally and set up a temporary server to host the stuff, then we can ask the perl6 DNS to be reconfigured

[14:14] <timotimo> actually, since we build these repos on travis already anyway, maybe we should add a "zip everything up" step to the travis config and make the zips available as "artifacts" that can just be downloaded

[14:14] * sena_kun can rent a digitalocean droplet for the task, but instructions and likely help will be necessary

[14:15] <timotimo> cool

[14:15] <timotimo> i think looking at the .travis.yml files will be a good first step

[14:15] <timotimo> since they are there to make builds work from an almost "clean slate" system anyway

[14:16] <sena_kun> ok, delayed $dayjob...

[14:16] <sena_kun> timotimo, I can refer to you here when I'm having issues with a setup, right?

[14:17] <timotimo> hopefully

[14:18] <sena_kun> do we need a powerful droplet? or just the cheapest one (1 cpu, 1 GB RAM, 25 GB SSD, 1000 GB network) will do?

[14:19] <lizmat> moritz: ^^  any idea how the current setup is dimensioned ?

[14:19] <sena_kun> the least painful option is Ubuntu 16.04 x64, right?

[14:19] <timotimo> the cheapest one

[14:20] <timotimo> it's all static

[14:20] <timotimo> normally,  hack.p6c.org generates the html files, which are then rsync'd onto www.p6c.org, which has only one core iirc

[14:20] <sena_kun> timotimo, ok, what about OS?

[14:20] <timotimo> oh, rakudo.org is also down

[14:20] <timotimo> any OS that has a web server :P

[14:20] <lizmat> yeah, anything on hack

[14:21] <sena_kun> : )

[14:21] <timotimo> not windows please

[14:21] <sena_kun> Ubuntu then...

[14:21] <timotimo> hm, does haiku have a web server i wonder?

[14:21] <sena_kun> ok, creating a droplet...

[14:22] <timotimo> https://discuss.haiku-os.org/t/haiku-as-a-server-in-the-future/2560/4

[14:22] <sena_kun> ok, droplet is created

[14:23] <timotimo> https://github.com/perl6/perl6.org https://github.com/perl6/modules.perl6.org https://github.com/perl6/doc https://github.com/perl6/rakudo.org

[14:24] <timotimo> i think these are the most important repos to put up on the backup server

[14:26] <timotimo> there's also a few php scripts that make the download pages on rakudo.org, but i don't know if we have the rakudo downloads available on a back-up location

[14:26] <timotimo> which is surely something that needs changed

[14:29] *** random_yanek left
[14:31] * sena_kun is in the process...

[14:32] <timotimo> tyvm sena_kun

[14:33] <timotimo> jnthn, you control rakudo.org or .com, dont you?

[14:33] <timotimo> ok its .org

[14:35] <discord6> <timotimo> We might also want to put a little notice on relevant pages that the regular server is down at the moment

[14:35] <discord6> <timotimo> Ooooh

[14:35] <discord6> <timotimo> Oh no

[14:35] <sena_kun> hmm?

[14:35] <discord6> <timotimo> We don't have the SSL certs

[14:36] <discord6> <timotimo> And we surely have the settings that force browsers to reject different certificates compared to last time

[14:36] <discord6> <timotimo> Certificate pinning or what it's called

[14:36] <discord6> <timotimo> And probably also reject http without s

[14:37] <sena_kun> : |

[14:37] *** abraxxa joined
[14:37] *** abraxxa left
[14:37] *** abraxxa joined
[14:39] <sena_kun> it means another server won't help us?

[14:40] <discord6> <timotimo> Lets just try with one and see what our options are

[14:40] <sena_kun> ok...

[14:40] <sena_kun> in the middle of cpanm App::Mowyw Text::VimColor Plack...

[14:42] <timotimo> let's see if we can serve a "It Works!" index.html on one of our domains, shall we?

[14:42] *** b2gills left
[14:43] <timotimo> until we find someone who controls either domain we can just locally override it in /etc/hosts

[14:43] <moritz> another server helps us if we can move the DNS somewhere else

[14:43] <timotimo> that sounds like you don't have access to the DNS config? :)

[14:43] *** hamhu3 left
[14:43] *** ayerhart left
[14:43] *** hamhu3 joined
[14:44] <timotimo> isn't making our whole infrastructure more resilient against individual servers and services going down a fun activity for the whole family

[14:45] <moritz> timotimo: iirc the domain is controlled by TPF

[14:45] <discord6> <timotimo> Who controls perl6.org, does Moritz have access?

[14:46] *** hamhu3 left
[14:46] <moritz> use to be Dan White, then he transferred the domain to Perl Foundation. You could try contacting the https://noc.perl.org/ folks

[14:46] *** hamhu3 joined
[14:47] *** hamhu3 left
[14:48] *** b2gills joined
[14:49] *** hamhu3 joined
[14:49] <timotimo> sorry, that last message was written many minutes ago on my phone while it was out of wifi range %)

[14:50] <sena_kun> am I safe to post an IP address of the server here?

[14:50] <timotimo> i'd assume so

[14:51] <sena_kun> likely yes, but just in case

[14:51] <sena_kun> ok, so... http://134.209.245.173:5000/index.html

[14:51] <sena_kun> what's next?

[14:51] <sena_kun> it runs with simple `pluckup`

[14:51] <timotimo> ah, OK

[14:51] <timotimo> then we'll want an apache/cherokee/nginx/whatever on port 80 that has something like mod_proxy

[14:51] <timotimo> so that anything with Host: perl6.org will be forwarded to localhost port 5000

[14:52] <sena_kun> a-a-and here I am not totally skilled... Let's see if I remember nginx configs well enough...

[14:52] <timotimo> ha, right

[14:52] <timotimo> you'll need proxy_pass http://localhost:5000 at the very least

[14:52] *** hamhu3 left
[14:53] <sena_kun> ok, killed pluck for the time moment...

[14:53] *** hamhu3 joined
[14:53] <timotimo> https://www.digitalocean.com/community/questions/virtual-host-config-for-nginx-as-proxy - could this be it?

[14:53] <timotimo> ah, that's a question, not quite what we want

[14:53] <sena_kun> https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-16-04 <- I am using this

[14:54] <timotimo> maybe we'll have server { listen 80; server_name perl6.org www.perl6.org; proxy_pass http://localhost:5000; }

[14:57] *** hamhu3 left
[14:57] *** hamhu3 joined
[14:58] *** cpage left
[15:03] <sena_kun> pluckup is running, in sites-enabled/perl6org I am having https://gist.github.com/Altai-man/3352f8c2ba3d28e628ec4042a4e8f5b7

[15:04] <timotimo> that looks good to me

[15:04] <kawaii> timotimo: if you need any help, I do happen to be a professional Linux sysadmin :)

[15:04] <timotimo> ah, on perl6.org i now get a directory listing of what i assume is the perl6.org git repo

[15:04] <timotimo> so it's not matching that yet

[15:04] <sena_kun> kawaii, can you replace me? :) I can give you a sudo-able user

[15:05] <sena_kun> as I am not a sysadmin in any way

[15:05] <timotimo> oh

[15:05] <kawaii> I'm on mobile currently, will be back on my laptop in 20 minutes or so 

[15:05] <timotimo> perhaps it'd be enough to just set index.html to serve for /

[15:06] <timotimo> because perl6.org/index.html does what it's supposed to

[15:06] <timotimo> ah, index.html shall be served for any /, like downloads/

[15:06] <timotimo> sena_kun: can you try   try_files $uri $uri/index.html;

[15:06] <timotimo> inside the location block?

[15:07] <timotimo> sena_kun: or give me a sudo-able user and i'll give it a shot :)

[15:07] *** abraxxa left
[15:08] <sena_kun> done try_files

[15:08] <sena_kun> & reloaded nginx

[15:08] *** hamhu3_ joined
[15:08] <sena_kun> hmm, ok, I am not quick enuogh, I guess...

[15:08] <timotimo> ah, that's not it :)

[15:08] *** abraxxa joined
[15:10] *** hamhu3_ left
[15:11] *** hamhu3 left
[15:11] *** hamhu3_ joined
[15:11] *** hamhu3_ left
[15:12] *** hamhu3 joined
[15:14] *** hamhu3 left
[15:15] *** hamhu3 joined
[15:16] *** rindolf left
[15:19] *** abraxxa left
[15:20] *** abraxxa joined
[15:22] *** hamhu3 left
[15:22] *** hamhu3 joined
[15:35] *** hamhu3 left
[15:36] *** hamhu3 joined
[15:41] <timotimo> if y'all want, you can see if with perl6.org entered for 134.209.245.173 in your /etc/hosts you can reach and use http://perl6.org

[15:43] <lizmat> works for me

[15:43] <timotimo> very good

[15:43] <timotimo> i already sent mail to [email@hidden.address]
[15:44] <lizmat> does that also apply to docs.perl6.org ?

[15:44] <lizmat> timotimo: did you tell webmaster to also lower the TTL ?

[15:44] <lizmat> so we can switch back quicker ?

[15:44] <timotimo> oh

[15:44] <timotimo> good idea

[15:45] <lizmat> docs.perl6.org gives me a welcone to nginx  :-)

[15:45] <lizmat> afk for a bit&

[15:45] <timotimo> aye, that's not installed yet

[15:50] <timotimo> got an early answer from [email@hidden.address] that says the person in question doesn't have access to the DNS

[15:50] <timotimo> maybe i need to contact [email@hidden.address] instead?

[15:53] <timotimo> they did ping a second person who may have access

[15:54] <timotimo> oh no

[15:54] <timotimo> ecosystem-api.p6c.org

[15:55] <timotimo> Failed to get the directory contents of '/home/timo/perl6/p6doc/build/Programs': Failed to open dir: No such file or directory

[15:55] <timotimo>   in code  at htmlify.p6 line 153

[15:55] <timotimo> why is it like this?

[15:59] <timotimo> using "make html" is the right invocation, not perl6 htmlify.p6

[16:03] *** domidumont1 left
[16:16] *** hamhu3 left
[16:21] <japhb> Recommendation (I can't help it, I manage a reliability team): When all is back up and working again, do a (blameless!) postmortem focused on figuring out how the outage could be avoided and/or greatly reduced in duration/effect.

[16:21] *** random_yanek joined
[16:21] *** random_yanek left
[16:21] <japhb> It's a very useful habit to get into.  :-)

[16:22] <tadzik> +1

[16:23] <tadzik> a nice bonus is that you can then bill people for your ranting so you have to spend less time programming

[16:23] <japhb> Heh

[16:23] *** random_yanek joined
[16:23] *** random_yanek left
[16:25] *** random_yanek joined
[16:26] *** zacts joined
[16:31] *** hamhu3 joined
[16:34] *** titsuki left
[16:36] *** zacts left
[16:38] *** hamhu3 left
[16:39] *** abraxxa left
[16:49] *** random_yanek left
[16:49] <timotimo> ok, so the server has perl6.org and docs.perl6.org up

[16:50] *** hamhu3 joined
[16:50] *** hamhu3_ joined
[16:51] * sena_kun confirms docs.perl6.org working

[16:51] <sena_kun> timotimo++

[16:51] <sjn> yay!

[16:52] <timotimo> oh, the perl5 is too old for rakudo.org

[16:53] <sena_kun> : )

[16:53] <sena_kun> 2016...

[16:53] <timotimo> but with morbo i can run it

[16:53] <timotimo> it's the dev server rather than prod, but it should be fine?!?

[16:53] <timotimo> oh dang

[16:54] <timotimo> that also complains about the perl version

[16:54] <timotimo> time to figure out perlbrew

[16:54] *** hamhu3 left
[16:57] *** hamhu3 joined
[16:57] <timotimo> koto@perl6org-backup:~$ perlbrew install perl-5.28.2

[16:57] <timotimo> ERROR: Cannot find the tarball for perl-5.28.2

[16:57] <timotimo> ^- huh?!

[16:57] *** zakharyas joined
[16:57] <timotimo> i copypasted that from "perlbrew available"

[16:57] <tadzik> 5.28.1 is the newest one, no?

[16:58] <tadzik> at least according to perl.org

[16:58] <tadzik> and me when I installed it with plenv today :P

[16:58] <timotimo> is plenv better than perlbrew?

[16:58] <timotimo> anyway, i'm installing that version now

[16:59] <tadzik> I switched to it when perlbrew broke for me and I couldn't figure out wy

[16:59] <tadzik> plenv is less magical I think, generating shellscripts rather than relying on shell functions, or something

[17:00] *** hamhu3_ left
[17:10] <ugexe> 5.28.2 released today

[17:11] *** ChoHag left
[17:11] *** ctilmes_ joined
[17:11] <timotimo> it's taking pretty long to compile perl

[17:12] <timotimo> i should perhaps have tried to turn off tests

[17:12] *** vrurg left
[17:12] *** vrurg joined
[17:14] *** ctilmes left
[17:15] <vrurg> Anybody on Mac managed to succesfully install LibUUID? 

[17:15] *** vrurg left
[17:15] *** ChoHag joined
[17:16] *** vrurg joined
[17:19] <ugexe> yep

[17:21] <vrurg> ugexe: homebrew or macports?

[17:21] *** zachk joined
[17:21] <ugexe> homebrew

[17:22] <vrurg> Damn... Macports has more packages. But it's not the first time nativelibs can't load a dylib

[17:22] *** zachk left
[17:23] *** zachk joined
[17:23] *** zachk left
[17:23] *** zachk joined
[17:27] *** uzl joined
[17:27] <uzl> Hey, #perl6! 

[17:28] <uzl> perl6.org seems to be down :(

[17:29] *** vrurg left
[17:29] *** ctilmes_ left
[17:29] *** ctilmes joined
[17:29] <sena_kun> yes

[17:29] *** vrurg joined
[17:29] <sena_kun> we are working on it

[17:30] <sena_kun> pretty serious issue with hoster's network as I get it

[17:34] <uzl> sena_kun++

[17:34] <uzl> ...and the others working on it!

[17:34] <sena_kun> more of timotimo++ and moritz++

[17:43] <timotimo> the perl is installed, but i'll have dinner now first

[17:43] <sena_kun> timotimo++

[17:50] *** zakharyas left
[17:51] <uzl> enjoy your dinner, timotimo!

[17:51] <uzl> see you all later!

[17:51] *** uzl left
[18:00] *** zacts joined
[18:06] <Xliff> Wow! Drama!

[18:06] <Xliff> timotimo++

[18:07] *** zacts left
[18:21] *** natrys joined
[18:29] *** zacts joined
[18:31] *** Black_Ribbon joined
[18:35] *** natrys left
[18:39] *** zacts left
[18:42] *** hamhu3 left
[18:43] *** hamhu3 joined
[18:47] *** kurahaupo left
[18:47] *** kurahaupo joined
[18:51] <timotimo> okay, i'm back to the keyboard

[18:52] <timotimo> no further communication from [email@hidden.address] so don't know yet if we'll get to change the DNS yet

[18:54] <lucs> Is rakudo.org (currently down) victim of the same problem?

[18:55] *** lucasb left
[18:55] <timotimo> yes, rakudo.org also runs on the p6c server

[18:55] <lucs> Ah, okay.

[18:56] <timotimo> hum, my browser won't open rakudo.org on http, only https

[18:56] <timotimo> we don't have https up on the backup server yet

[18:57] <timotimo> using cpanm's installdeps and still got lots of missing stuff ;_;

[18:57] <timotimo> IO::Socket::SSL 2.009+ required for TLS support

[18:57] <timotimo> IO::Socket::SSL is up to date. (2.066)

[18:57] <timotimo> what's wrong here?

[18:58] <timotimo> 066 is clearly higher than 009?

[18:58] <ugexe> well if it was perl *6* it means the dependency is using the precompiled version that was created for the runtime dependency was installed. hope this helps! :P

[18:58] <ugexe> s/for/before/

[18:58] <tbrowder>  hi folks

[18:59] <timotimo> :)

[19:00] <tbrowder> since i can't see docs at thr moment, please remind me how i ask for a user response in a p6 prog.

[19:00] <ugexe> prompt()

[19:00] <timotimo> maybe i have to change @INC to get perlbrew's paths before the system installed perl's?!

[19:00] <tbrowder> timotimo: hi

[19:00] <timotimo> i don't know

[19:00] *** bakedb joined
[19:00] <tbrowder> ugexe: thanks!

[19:00] <ugexe> oh did you install cpanm via rakudobrew install-cpanm or whaever?

[19:01] <ugexe> perlbrew^

[19:01] *** bakedb_ left
[19:01] <timotimo> yes, but i had cpanm before that already

[19:02] <timotimo> what do i have to do to make locallib pick up the right perl5? is there a perlbrew command to set these vars up for me?

[19:02] <ugexe> which cpanm

[19:02] <ugexe> what is the output^

[19:02] <timotimo> /home/koto/perl5/perlbrew/bin/cpanm

[19:02] <timotimo> perl -v gives the .22

[19:02] <ugexe> ah

[19:03] <timotimo> ok i used perlbrew switch on it

[19:03] <timotimo> i thought i had that already

[19:03] <ugexe> you can do perlbrew switch ... or some such to change the main default

[19:03] <ugexe> plenv (and maybe even perlbrew now) lets you pin an application/directory to a specific version

[19:04] <timotimo> more installdeps

[19:05] <ugexe> are you using `cpanm -L local ...`?

[19:05] <timotimo> no

[19:05] <timotimo> i thought using perlbrew would put everything into my home already

[19:05] <timotimo> soon we'll have a backup rakudo.org running on the server

[19:05] <ugexe> yeah it'll work. its just even nicer having all your application dependencies pinned to the app

[19:06] <timotimo> jnthn: can you change rakudo.org's DNS to point at that server, and also reduce the TTL so switching back is fast and painless?

[19:06] <timotimo> oh, ok

[19:06] <ugexe> so later on some other application which requires a different version doesn't bork things up

[19:06] <timotimo> tbh it'd be cool to get everything to be the newest version regularl

[19:07] <ugexe> that hardly works in my experience, despite how hard i always try

[19:08] <timotimo> oh, hmm

[19:08] <timotimo> shrug, just rewrite it all in perl6 and cro all the things

[19:08] *** kurahaupo left
[19:08] *** kurahaupo joined
[19:10] <ugexe> i have a perl6 application still running some old ass rakudo before the hash randomization stuff because its to-json isn't randomized (which makes for better git diff)

[19:10] <ugexe> and i'm too lazy to swap in a module that does the same thing

[19:10] <timotimo> hum. so how do i make chrome connect to rakudo.org over http

[19:11] *** rindolf joined
[19:12] *** zacts joined
[19:12] <ugexe> i wonder if a free cloudflare package would have held up over a few days

[19:12] <ugexe> serving cached stuff

[19:12] <timotimo> oh, you mean because they cache

[19:13] <timotimo> there's people who aren't fond of cloudflare getting all traffic piped through their stuff

[19:13] <ugexe> true, but i submit that the number of people worried about that are less than those wondering why zef takes 9 minutes to update its ecosystem list

[19:14] <timotimo> oh, rakudo.org probably has some DNS record in it that says "ssl only"?

[19:14] <ugexe> well, at least for the ecosystem-api rather

[19:14] <timotimo> how do i query that with dig?

[19:16] <timotimo> every result i can websearchfind says it's not possible to use DNS to force https over http, but there is not a server on rakudo.org at the moment and still it immediately uses https

[19:17] <ugexe> what about curl? doesn't that not forward to https unless you give it some other option?

[19:18] <timotimo> oooh

[19:18] <timotimo> i used wget

[19:18] <timotimo> not curl

[19:18] <timotimo> ok, so i do get a rakudo site there, but it tries to link its assets via http://localhost:4242 and it gives a 404 for /

[19:21] <timotimo> URL transformed to HTTPS due to an HSTS policy

[19:21] <timotimo> that's what wget says

[19:21] <timotimo> where does that policy live? in DNS?

[19:22] <ugexe> i thought that was an http header, so i would guess config for web server?

[19:23] <Xliff> Why am I getting this: "This type cannot unbox to a native integer: P6opaque, Seq"

[19:23] <Xliff> When I am using native integers in this call:

[19:24] <Xliff> $!b = calloc($s1, $s2);

[19:25] <Xliff> m: use NativeCall; say nativesizeof(long);

[19:25] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «WARNING: unhandled Failure detected in DESTROY. If you meant to ignore it, you can mark it…»

[19:25] <evalable6> Xliff, Full output: https://gist.github.com/56a65888d6464201711a352c66f993b9

[19:25] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $a; }; say nativesizeof(A);

[19:25] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «8␤»

[19:25] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $a; }; say nativesizeof(A).^name;

[19:25] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «Int␤»

[19:25] *** atweedie left
[19:25] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $a; }; my uint64 $aa = nativesizeof(A);

[19:26] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «»

[19:26] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $a; }; my uint64 $aa = nativesizeof(A); say $aa

[19:26] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «8␤»

[19:26] <timotimo> Xliff: sounds like you're trying to assign a lazy list like thing to an integer variable or attribute

[19:27] <Xliff> m: use NativeCall; sub calloc (size_t, size_t --> Pointer) is native {}; say calloc(8, 8);

[19:27] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «NativeCall::Types::Pointer<0x558276b487a0>␤»

[19:27] <Xliff> m: use NativeCall; sub calloc (size_t, size_t --> Pointer) is native {}; my $a = 8; say calloc($a, 8);

[19:27] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «NativeCall::Types::Pointer<0x561eaedae0e0>␤»

[19:30] <jnthn> timotimo: Details of change required for rakudo.org?

[19:31] <timotimo> jnthn: remove AAAA record if it exists, put 134.209.245.173 as the A record, not sure how exactly you can change the TTL on your end

[19:31] <jnthn> It's apparently not a good day for these things; my home interent provider had a few hours outage that only just ended (which is unusual; most I've seen before was 10 minutes)

[19:31] <timotimo> also, see if there's something for HSTS or SSL or something in the dns settings

[19:32] <timotimo> because web clients are refusing to connect via http and we don't have certificates set up

[19:32] <timotimo> also, do you have only rakudo.org or do you happen to also control perl6.org?

[19:33] <jnthn> Only rakudo.org

[19:33] <timotimo> OK

[19:34] <jnthn> AAAAs gone, As updated

[19:34] <timotimo> OK, let's see when that propagates, and then i need to figure out what i need to change for it to work properly

[19:35] <timotimo> do you happen to know the IP of the dns server that has your changes? so that i can perhaps query it directly or something?

[19:35] <timotimo> or maybe that'd be a bad idea?!

[19:35] <jnthn> The TTL it seems I don't get to pick, but it's set at 4 hours

[19:36] <jnthn> Name Server: NS.123-REG.CO.UK

[19:36] <timotimo> OK, i was able to remove rakudo.org from chrome's settings #hsts page and now i get it

[19:36] <jnthn> Name Server: NS2.123-REG.CO.UK

[19:37] <timotimo> all i had to do was remove the "put index.html at the end of URLs"

[19:38] <moritz> when you have the DNS pointed your way, you can use letsencrypt to get free TLS certs

[19:39] <timotimo> oh, so hsts will only force any https to be used, not the same certificate as last time?

[19:40] <jnthn> I thought that same cert thing was certificate pinning and additional, 

[19:40] <jnthn> *additional to hsts

[19:43] <jnthn> afk for a bit

[19:43] <timotimo> thanks you

[19:55] <Xliff> Does anyone have a workaround for an array of CStructs?

[19:55] <Xliff> I'm looking here https://stackoverflow.com/questions/43544931/passing-an-array-of-structures-to-a-perl-6-nativecall-function but I am still running into issues. 

[19:57] *** hamhu3_ joined
[19:57] *** zacts left
[20:00] <timotimo> we have a PR for builtin CStructArray

[20:00] *** hamhu3 left
[20:00] <timotimo> shamefully, i have never reviewed it

[20:03] *** bakedb left
[20:05] *** Manifest0 left
[20:09] *** bakedb joined
[20:12] *** Manifest0 joined
[20:13] <timotimo> cool, on one of my devices rakudo.org is the right ip now

[20:13] <timotimo> can y'all check if it appears?

[20:13] <sena_kun> works for me

[20:13] <timotimo> high five sena_kun 

[20:13] <timotimo> or, as i like to spell it:

[20:14] * timotimo o/⁵o sena_kun

[20:14] <sena_kun> \o/

[20:16] *** kurahaupo left
[20:16] *** kurahaupo joined
[20:27] *** mowcat joined
[20:30] *** fake_space_whale joined
[20:30] <Xliff> timotimo: Do you know where that PR lives?

[20:31] <timotimo> it's a moarvm pr

[20:31] <Xliff> Oooh.

[20:33] <timotimo> until then there's also a module, NativeHelpers::Something, i think? or am i mixing that up again

[20:34] <fake_space_whale> do you know if there is a mirror for docs.perl6.org? perl6.org seems to be down.

[20:34] <timotimo> there is, but currently no DNS points at it

[20:34] <timotimo> though actually we could totally point any random DNS entry at it

[20:36] <Xliff> timotimo: Are you thinking of NativeHelpers::Blob?

[20:36] <Xliff> timotimo: How often do PRs like that wait for approval?

[20:37] <timotimo> too often ;_;

[20:37] *** |oLa| joined
[20:37] <timotimo> fake_space_whale: http://docs.perl6.wakelift.de/

[20:38] <fake_space_whale> Thank you

[20:38] <timotimo> you're quite welcome

[20:38] <timotimo> next time the server fails we ought to have a replacement up in an hour or so :D

[20:39] <Xliff> timotimo: Sorry to keep pestering, I know you are working on devops stuff. But is there an alternative for modules.perl6.org up, yet?

[20:39] <timotimo> because i'll backup everything on that server and it'll be much easier to get it up next time

[20:39] <timotimo> not yet, sorry

[20:39] <Xliff> (that's what she said)\

[20:44] <timotimo> anyway. working on that right now.

[20:45] <timotimo> installdeps taking a little bit

[20:46] <Xliff> OK, thanks.

[20:46] <Xliff> BTW - Thanks for the hard work!

[20:47] <timotimo> NP

[20:47] <timotimo> i'm not actually sure where the code lives that powers the ecosystem api?

[20:49] <ugexe> p6c.org

[20:50] <timotimo> oh no

[20:51] <ugexe> tony-o and i have a mostly fleshed out ecosystem with auth using cro/openapi thats just waiting on me to do the next round of review

[20:52] <timotimo> oh!

[20:52] <Xliff> Is there a decent way to memcpy a CStruct to another block of memory? Whenever I attempt it, I get a SEGV

[20:52] <timotimo> can you give me code that reproduces it?

[20:53] <timotimo> i'm not entirely sure what the ecosystem-api endpoint does; does it do more than produce master lists of modules that exist on cpan and the ecosystem?

[20:54] <timotimo> t/99_binary.t ......................... 19357/24576 

[20:54] <timotimo> well, it's good they're so thorough

[20:55] <Xliff> timotimo: I'll have to golf it down. Lemme see what I can do.

[20:55] <ugexe> i think a cron jobs creates the list used for ecosystem-api.p6c.org/[projects1.json|errors.json|etc]

[20:56] <Xliff> But it boils down to this: memcpy( Pointer.new($buff_start + $pos * nativesizeof(CStruct), nativecast(Pointer, CStruct), nativesizeof(CStruct) )

[20:56] <timotimo> that looks strange

[20:56] <Xliff> $buff_start comes from cmalloc. I may try to replace that with NativeHelpers::Blob.

[20:56] <timotimo> is that nativecast really supposed to be a second argument to Pointer.new?

[20:57] <Xliff>  /o\

[20:57] <Xliff> But it boils down to this: memcpy( Pointer.new( $buff_start + $pos * nativesizeof(CStruct) ), nativecast(Pointer, CStruct), nativesizeof(CStruct) )

[20:57] <timotimo> what is $buff_start type-wise?

[20:57] <Xliff> Pointer

[20:57] <timotimo> so that should be fine in theory

[20:58] <timotimo> i have honestly not done much pointer arithmetic with rakudo at all

[20:58] <Xliff> OK. Lemme see if I can crunch it.

[20:58] <timotimo> you should be able to gdb this

[20:58] <Xliff> Don't worry. You aren't missing anything.

[20:58] <timotimo> and it ought to tell you what pointers actually get passed there

[20:58] <timotimo> i actually need it for my grant work right now

[20:58] <Xliff> Yes. I know. I'll boil it down and see what gdb says.

[20:59] <timotimo> jeez what does this thing have in its dependency list

[20:59] <timotimo> no need to boil it down for the gdb thing

[20:59] <tony-o> and i couldn't lift my arm by the worst of it

[21:00] <tony-o> Xliff: there is the old version of what we had at modules.zef.pm but it's well out of date because i didn't bother restarting cron scripts when i changed AWS regions

[21:00] <tony-o> (a couple of months)

[21:01] *** kurahaupo left
[21:01] *** dduncan joined
[21:01] *** kurahaupo joined
[21:02] <timotimo> seriously what is this installing

[21:02] <dduncan> Is anyone else having problems accessing rakudo.org today?  Sometimes I get messages about the server not being found, and other times when I’m able to get in and try downloading the Mac Rakudo Star it reports a 500 error.  Didn’t have any problems before today.

[21:02] <yoleaux> 2 Jan 2019 11:15Z <timotimo> dduncan: the muldis object notation grammar spends a whole lot of time doing "mergesubrule" and "mergesubstates" and "optimize", which are related to building the NFA used for longest token matching, i.e. the | operator and proto/multi tokens. maybe there's some optimization opportunities there.

[21:03] <timotimo> dduncan: sorry, the server with rakudo.org and everything perl6.org is unreachable at the moment

[21:04] <timotimo> sena_kun helped me bring up a replacement server, but it doesn't have the download files

[21:04] <dduncan> So its not just me.  Though https://downforeveryoneorjustme.com/rakudo.org says its up.  Thank you.

[21:05] <timotimo> the DNS just got switched to the other server a few hours ago

[21:05] <timotimo> so i'd say you're not yet getting the new IP on every request

[21:05] <timotimo> like, anycast dns or something

[21:05] <dduncan> Thanks for explaining.  I would expect this to sort out over the next few hours or day then.

[21:05] <timotimo> i put a message on the 500 error page, too

[21:06] <timotimo> we expect to get the network or server or whatever is broken up by tuesday or perhaps monday

[21:06] <timotimo> oh

[21:06] <timotimo> until then, if you need perl6.org or docs.perl6.org, you can use docs.perl6.wakelift.de or perl6.wakelift.de for the time being

[21:07] <dduncan> Thanks, I refreshed and see the newer 500 error, should help others.

[21:07] <tony-o> Xliff: modules.zef.pm is updating, running the cron if your need is urgent

[21:08] <timotimo> can you point zef at modules.zef.pm easily?

[21:09] <tony-o> oh, not a replacement for the ecosystem

[21:09] <timotimo> OK

[21:09] <tony-o> that's in the second iteration ugexe referred to

[21:09] <timotimo> so it can replace modules.perl6.org instead

[21:09] <timotimo> which i'm still installing prerequisites for ...

[21:10] <tony-o> yea but it hasn't been updated to include cpan modules, it was made before that was possible

[21:10] <ugexe> yeah, but ecosystems.p6c.org still has to exists for the forseeable future for all existing installations of zef

[21:11] <timotimo> OK

[21:11] <ugexe> (thats also why there is a projects.json and a projects1.json)

[21:11] <timotimo> can we immediately put something into zef that makes it look at some fallback locations in the future?

[21:11] <timotimo> existing installations of zef wouldn't be "fixed" of course

[21:14] <ugexe> it does have that

[21:14] <ugexe> with a 180s timeout

[21:15] <ugexe> but the first two mirrors are projects1.json and projects.json, so its 6 minutes before using my github mirror :/

[21:15] <ugexe> i dont know why i still have projects.json in as a mirror though

[21:15] <timotimo> d'oh

[21:16] <timotimo> can't an error like "connection refused" give a quicker failover?

[21:16] <timotimo> oh i can't believe it, modules.perl6.org is now installed on the fallback server ... well, only the dependencies actually

[21:16] <timotimo> now it'll have to update the modules db, which will take ... what, an hour?

[21:16] <ugexe> yeah a different error would probably not make zef hang for the full 180s

[21:19] <timotimo> mhm

[21:19] <tony-o> it'd be a nice time for me to have a config plugin done for zef

[21:20] *** |oLa| left
[21:20] <ugexe> that would not help in this scenario much, because the required rakudo functionality doesn't exist in a release yet

[21:25] <timotimo> nooooooooo

[21:26] <timotimo> while trying to rebuild the modules database i get "out of memory!"

[21:26] <timotimo> since it's, like, the cheapest droplet you can get

[21:26] <sena_kun> timotimo, you can create a swap

[21:26] <sena_kun> a swap file, since its a SSD, it won't be too slow

[21:26] <timotimo> ooh

[21:27] <sena_kun> I also can resize a droplet, probably, but we don't want this, I think

[21:27] <timotimo> can we turn on zswap or so? :)

[21:27] <sena_kun> timotimo, https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-16-04 <- use this

[21:28] <sena_kun> and you can replace 1G with whatever you need

[21:28] <timotimo> wonderful

[21:28] <sena_kun> considering we want to have more RAM only for building and resizing is a one-direction operation, I think we want swap over resizing

[21:29] <timotimo> i got the swap file active

[21:29] <sena_kun> \o/

[21:29] <sena_kun> should be better now

[21:30] *** hamhu3 joined
[21:30] *** hamhu3 left
[21:30] <timotimo> can the droplet be, like, suspended?

[21:30] <timotimo> keep all data on the hard drive but not cost money?

[21:30] <sena_kun> no

[21:30] *** hamhu3 joined
[21:30] <sena_kun> I can power it off, of course, but it counts whenever it exists

[21:31] <sena_kun> it is like 5$ per month, so don't worry

[21:31] <sena_kun> and I thought I could volunteer a droplet for infrastructure reasons for long time, just it wasn't a right moment...

[21:31] <timotimo> in that case we can just download everything we made and just reupload whenever we need it

[21:32] <timotimo> absolutely no need to pay for this :)

[21:32] *** abraxxa joined
[21:32] <sena_kun> I am ok with adding the credentials to our infrastructure, with hosting something there.

[21:32] <ugexe> the tool could be modified to do like App::ecogen and write each meta json to a file as it is encountered instead of doing like this tool and reading all json into memory before encoding entire thing and writing entire thing to file

[21:33] *** abraxxa left
[21:33] *** dduncan left
[21:33] *** hamhu3_ left
[21:33] <ugexe> cause that aint webscale

[21:35] <ugexe> hell you could probably just steal the json from https://github.com/ugexe/Perl6-ecosystems for the time being

[21:36] <timotimo> modules.perl6.org builds a sqlite database though, not sure how they translate

[21:37] <ugexe> oh, i was thinking this was update/updatelist.pl from the perl6/ecosystem repo for some reason

[21:38] <discord6> <Tyler (Aearnus)> are the p6 docs down?

[21:38] <Xliff> timotimo: gdb reports SEGV here for __memmove_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:238

[21:38] <Xliff> Tyler: Yes

[21:39] <Xliff> They are working on it.

[21:39] * sena_kun has a moment of delight when the power of `but` feature is unleashed

[21:39] <discord6> <Tyler (Aearnus)> ah, np, just wasn't sure if it was my spotty internet or not

[21:43] <timotimo> Xliff: yeah, you'd want to "up" a few times until you see what memcpy was called with

[21:44] <sena_kun> m: my $a = Promise.new but role { method a { 42.say } }; $a.then({ say "Do something foo-foo..." }); $a.a; $a.keep;

[21:44] <evalable6> sena_kun, rakudo-moar 90e18b65f: OUTPUT: «42␤Do something foo-foo...␤»

[21:44] <timotimo> sena_kun: promises aren't compatible with being cloned

[21:44] <timotimo> i think

[21:44] <sena_kun> an offtopic right now, but my mind is blown.

[21:44] <sena_kun> timotimo, what are the implications? what I did is unsafe?

[21:44] <Xliff> \o/

[21:44] <Xliff> Solved it!

[21:44] <timotimo> i think so

[21:45] <sena_kun> ugh...

[21:45] <timotimo> i seem to recall someone tried something like that before

[21:45] <Xliff> I was doing nativecast(Pointer, T) where T was my frickin type object! /o=

[21:45] <timotimo> quotable6: Promise.new but

[21:45] <quotable6> timotimo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[21:45] <Xliff>  /o\, even

[21:45] <sena_kun> ok, then not so much fun, as I need to think of another interface...

[21:45] *** skids left
[21:45] <timotimo> no, you can probably just derive a class from Promise

[21:46] <quotable6> timotimo, 4 messages (Inf⌁-Inf): https://gist.github.com/c214a8119565e26ad7b3c8396afc97cf

[21:46] <jnthn> Or just use `does` to modify the original object in-place?

[21:46] <timotimo> or that

[21:46] <timotimo> quotable6: "Promise.new but"

[21:46] <quotable6> timotimo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[21:46] <sena_kun> well, that's details, I think, but thanks for advices!

[21:47] <quotable6> timotimo, Found nothing!

[21:47] <timotimo> hum.

[21:47] <timotimo> quotable6: Promise .*? but

[21:47] <quotable6> timotimo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[21:47] *** kurahaupo left
[21:47] <timotimo> or maybe it was clone rather than but

[21:47] <timotimo> quotable6: Promise .*? clone

[21:47] *** kurahaupo_ joined
[21:48] <quotable6> timotimo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[21:48] <quotable6> timotimo, 79 messages (2013-08-07⌁2018-03-22): https://gist.github.com/6050c75ac308e3b0fddffc09a20077cb

[21:48] <sena_kun> I am thinking about abandon operation of ldap. It accepts an ID of the request to abandon, and I am returning a Promise to the user that resolves into a response. Or a supply that emits responses. So I thought that probably I can just `but` or `does` the Promise or a supply with a role that knows how to send an abandon request and then keep/done it.

[21:49] <quotable6> timotimo, Found nothing!

[21:49] <timotimo> that sounds fair

[21:49] <timotimo> if you "whenever" something - even a one-value supply - you can have a phaser for "did the user unsubscribe" i think?

[21:50] <sena_kun> so the interface is actually my $req = $ldap.add; whenever $req -> $resp { foo }; (or $req.then({...})); $req.abandon; # <- oops, never mind the message

[21:50] <jnthn> Do it as a `Supply`, and use the `CLOSE` phaser. The the user can just close the tap on it.

[21:51] <sena_kun> jnthn, well, it suits only for supply case, but mostly I have promises returned.

[21:51] <jnthn> Ah, then yeah, probably a mixin approach

[21:51] <timotimo> no problem, the user can always .Promise the supply if they want

[21:51] <timotimo> right?

[21:51] <jnthn> timotimo: Yeah, but then you lose the means to abandon it :)

[21:51] <sena_kun> I think I'll go with a mixin now.

[21:52] <timotimo> right, but if they want that, they'd use .tap instead of .Promise

[21:52] <timotimo> so the user has the choice, rather than sena_kun 

[21:53] <guifa> While I’m guessing the answer is, uh, no, anyone here on Windows (and even better on a non-English system)?

[21:54] <timotimo> guifa: if a windows is all you need, use appveyor and turn its VNC support on :) :)

[21:54] <timotimo> it'll stay up for like an hour

[21:54] <sena_kun> well, the issue is that I am not 100% sure how it works in Net::LDAP, since there are basically no docs about its async mode... And Perl 5 there is too obscure for me to read. :| But I want to make a simplistic API: you can await a promise if you want a sync, you can `then` it to get an async, and in any time you can just call `abandon` and everything ends for the request.

[21:54] <timotimo> i once used that to fix a windows rakudo build for 32bit, which we don't make msis for

[21:55] <guifa> Interesting.  I’ll take a look at that. 

[21:56] <timotimo> https://github.com/timo/rakudo/blob/master/appveyor.yml - feel free to steal

[21:56] <guifa> I need Windows + P6 haha.  I think I finally figured out the command to use to grab the user’s language which means Intl::UserLanguage theoretically supports the big three

[21:56] <timotimo> the last five lines are what you'd need

[21:56] <timotimo> i.e. init and on_finish

[21:57] <guifa> timotimo++ I’ll dig into it post dinner.  

[21:58] <timotimo> bon appetit in that case :)

[21:58] <guifa> Plus I figure updating UserLanguage would be nice since it’s going to be a hot minute before I push a CLDR update — totally changing my approach to data loading and so I’m needing to recode a lot of stuff (but it’s for the best)

[22:00] *** kurahaupo_ left
[22:01] *** kurahaupo joined
[22:09] *** vrurg left
[22:09] *** vrurg joined
[22:11] <timotimo> not long until the sqlite file is done

[22:15] *** mowcat left
[22:17] *** random_yanek joined
[22:18] <cpan-p6> New module released to CPAN! JSON::Path (1.7) by 03JNTHN

[22:21] <jnthn> In the last 2 days, that module has had 2 releaess, both fixing bugs that originated from the initial commit of the module 7 years ago. :)

[22:27] *** random_yanek left
[22:38] * sena_kun goes afk

[22:41] *** random_yanek joined
[22:49] *** kiwi_31 joined
[22:50] <tony-o> jnthn: ty

[22:50] <kiwi_31> hi all. perl6.org appears to be down. https://www.reddit.com/r/perl6/comments/bf54ae/perl6org_and_ecosystemapip6corg_domains_seem/

[22:51] <timotimo> yup

[22:51] <tony-o> ty kiwi_31 i believe it's being worked on

[22:51] <timotimo> our hands are tied until we get the owners of the DNS entries on the line

[22:51] <timotimo> i'll post to reddit

[22:52] <kiwi_31> thx

[22:52] *** kiwi_31 left
[22:54] *** vrurg left
[22:55] *** rindolf left
[22:56] *** vrurg joined
[23:00] <tony-o> @ timotimo i can point zef.pm to wherever if the server would respond to that domain

[23:01] <timotimo> tony-o: what can we do with that?

[23:04] <timotimo> also, i believe i'll be AFK for a little while

[23:05] *** cpan-p6 left
[23:05] *** cpan-p6 joined
[23:05] *** cpan-p6 left
[23:05] *** cpan-p6 joined
[23:06] *** vrurg left
[23:06] *** vrurg joined
[23:07] <tony-o> timotimo: nothing, i was having a brainfart

[23:09] *** hamhu3 left
[23:22] *** Xliff left
[23:24] <guifa>  timotimo: actually I just realized I can download Windows for free from my university so … Bootcamp here we come :-D

[23:25] <ugexe> fckgw

[23:36] *** zachk left
[23:38] *** Manifest0 left
[23:47] *** Manifest0 joined
[23:51] *** skids joined
[23:53] <vrurg> With this perl6.org outage I will sonn have half of perl6-related github on my disk...

