[00:00] *** netrino left
[00:00] <ToddAndMargo> If I think I am saving something and it is not actaully saving, then it would seem like I am in a haunted house.  Next time I edit this program I will use vi

[00:02] <ToddAndMargo> Thatr trans thing works real pretty!  Thank you!  I never would have figure ti out from the docs either.

[00:03] <timotimo> for some reason the docs don't have results for the first few trans examples

[00:06] <ToddAndMargo> I am waiting for you guys new beginner level docs.  Maybe you should consider getting in on it.  Your explainations to me are extrodinarily easy to understand.  And I can be thick as a stone!

[00:07] <timotimo> hm, i wasn't exactly confident in my ability to explain stuff. or maybe my problem is more with building a bunch of knowledge into a coherent "narrative"

[00:09] <ToddAndMargo> Dude!  As your long staning pupil, you are way undercutting yourself.  Your explainations are extrodinary

[00:14] <timotimo> maybe i'm just good at getting into your head :P

[00:14] <timotimo> but the only thing i'll be getting into right now is my bed, i'm afraid

[00:17] <ToddAndMargo> Sleep?  What is that???   By the way, if Todd understands it, anyone will.  Anyone feel free bounce explainations off me to see if I get it.

[00:17] <ToddAndMargo> Thank you again.

[00:17] <timotimo> YW

[00:18] *** ToddAndMargo left
[00:23] *** cpup left
[00:23] *** cpup joined
[00:26] <vrurg> Any ideas how to delcare a 'my method' in a module to prevent it loosing closure after compilation?

[00:31] *** squashable6 left
[00:36] *** squashable6 joined
[00:36] *** ChanServ sets mode: +v squashable6

[00:36] *** AlexDani` joined
[00:38] <raschipi> vrurg: Do you have a snippet we can look at?

[00:39] <vrurg> raschipi: No, but it's about Red ORM: https://github.com/FCO/Red/issues/158

[00:40] *** AlexDaniel left
[00:41] <vrurg> I know it's possible because I use similar approach of adding methods in AttrX::Mooish. But it's a kind of magic anyway.

[00:42] *** kotrcka left
[00:42] *** kotrcka joined
[00:45] *** doufu300 joined
[01:10] *** Manifest0 left
[01:13] *** klapperl left
[01:13] *** adu joined
[01:15] *** Manifest0 joined
[01:29] *** Cabanossi left
[01:32] *** kurahaupo_ joined
[01:33] *** kurahaupo left
[01:40] *** Cabanossi joined
[01:40] *** dumbintel joined
[01:46] *** MidCheck left
[01:57] *** kurahaupo_ left
[01:58] *** kurahaupo joined
[01:59] *** raschipi left
[02:03] *** Manifest0 left
[02:03] *** wmoxam_ left
[02:05] *** wmoxam joined
[02:06] *** Manifest0 joined
[02:10] *** ayerhart left
[02:14] *** ayerhart joined
[02:15] *** ayerhart left
[02:15] *** ayerhart joined
[02:18] *** wmoxam left
[02:20] *** MidCheck joined
[02:23] *** zacts joined
[02:28] *** Manifest0 left
[02:31] *** MilkmanDan left
[02:33] *** MilkmanDan joined
[02:33] *** Manifest0 joined
[02:40] *** klapperl joined
[02:44] <Kaiepi> i really need to get my linux vm working again so i'm not wasting my time fighting with travis

[02:48] *** Manifest0 left
[02:53] *** Manifest0 joined
[03:14] *** kaare_ left
[03:14] *** kaare_ joined
[03:21] *** zacts left
[03:22] *** kurahaupo_ joined
[03:25] *** kurahaupo left
[03:33] *** Manifest0 left
[03:37] *** dumbintel left
[03:39] *** Manifest0 joined
[03:42] *** Cabanossi left
[03:44] *** Manifest0 left
[03:48] *** Cabanossi joined
[03:48] *** Manifest0 joined
[04:01] *** Kaiepi left
[04:07] *** abraxxa1 joined
[04:08] *** zacts joined
[04:08] *** abraxxa left
[04:19] *** molaf joined
[04:25] *** MasterDuke left
[04:26] *** MidCheck left
[04:50] *** Manifest0 left
[04:52] *** ufobat_ left
[04:56] *** Manifest0 joined
[04:57] *** Kaiepi joined
[05:00] *** molaf left
[05:06] *** Sgeo__ joined
[05:07] *** zacts left
[05:09] *** Sgeo_ left
[05:09] *** adu left
[05:19] *** adu joined
[05:22] *** xiaoyafeng left
[05:26] *** Manifest0 left
[05:31] *** Manifest0 joined
[05:34] *** domidumont joined
[05:53] *** jmerelo joined
[05:53] <jmerelo> releasable6: status

[05:53] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 132 out of 284 commits logged (⚠ 2 warnings)

[05:53] <releasable6> jmerelo, Details: https://gist.github.com/a5c42698e87f9d014afb55ad39d6fd55

[05:54] <jmerelo> :-(

[05:55] *** Sgeo joined
[05:57] *** Sgeo__ left
[05:58] *** domidumont left
[06:05] <Geth> ¦ doc: JJ assigned to antoniogamiz Issue Cursor should probably be taken off the type graph https://github.com/perl6/doc/issues/2770

[06:16] <Geth> ¦ doc: a0a7388044 | (JJ Merelo)++ | doc/Language/subscripts.pod6

[06:16] <Geth> ¦ doc: Changes to headers, refs #2483

[06:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a0a7388044

[06:16] <Geth> ¦ doc: 602dbaba18 | (JJ Merelo)++ | doc/Language/subscripts.pod6

[06:16] <Geth> ¦ doc: Reflows

[06:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/602dbaba18

[06:17] *** domidumont joined
[06:21] *** Manifest0 left
[06:22] *** ravenousmoose joined
[06:27] *** Manifest0 joined
[06:27] *** antoniogamiz joined
[06:28] <antoniogamiz> o/

[06:32] *** netrino joined
[06:35] *** kktt joined
[06:36] *** jmerelo left
[06:44] *** rindolf joined
[06:52] <antoniogamiz> rebuilding docs to fix #2770... time for breakfast

[07:06] *** vrurg left
[07:07] <El_Che> antoniogamiz: lo

[07:07] *** aindilis left
[07:09] *** patrickb joined
[07:11] *** yuriii joined
[07:17] <Geth> ¦ doc: 955184317a | Antonio++ | type-graph.txt

[07:17] <Geth> ¦ doc: deletes Cursor line in type-graph.txt, closes #2770

[07:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/955184317a

[07:21] *** netrino left
[07:21] *** aindilis joined
[07:37] *** Manifest0 left
[07:42] *** Manifest0 joined
[07:45] *** dakkar joined
[07:49] *** sno left
[07:50] *** zakharyas joined
[07:50] *** xiaoyafeng joined
[07:55] *** bbkr joined
[07:57] *** Manifest0 left
[07:58] *** antoniogamiz left
[07:58] *** renormalist joined
[08:00] *** antoniogamiz joined
[08:04] *** Manifest0 joined
[08:10] <tyil> antoniogamiz: o/

[08:16] *** aindilis left
[08:18] *** aindilis joined
[08:27] *** [particle]1 joined
[08:28] *** lizmat_ joined
[08:29] *** [particle] left
[08:30] *** lizmat left
[08:35] *** Juerd left
[08:41] *** Manifest0 left
[08:42] *** Juerd joined
[08:48] *** Manifest0 joined
[08:48] *** Juerd left
[08:53] *** bbkr left
[08:54] *** kktt left
[08:56] *** reach_satori left
[08:56] *** reach_satori joined
[08:58] *** lookqtme_q joined
[09:00] *** lookqtme_q left
[09:03] <antoniogamiz> tyil: what email client do you use?

[09:03] <tyil> antoniogamiz: claws-mail

[09:04] <antoniogamiz> tyil: ty :)

[09:04] <tyil> no probs ^_^

[09:12] *** Juerd joined
[09:23] *** _jrjsmrtn joined
[09:24] *** Manifest0 left
[09:24] *** __jrjsmrtn__ left
[09:24] *** Kaiepi left
[09:24] *** Kaiepi joined
[09:28] *** Manifest0 joined
[09:33] *** squashable6 left
[09:34] <Kaiepi> i'm excited about the grant someone just received for linking perl 6 programs

[09:36] <Kaiepi> shame it only focuses on making it work on windows, mac, and linux though

[09:38] *** squashable6 joined
[09:38] *** ChanServ sets mode: +v squashable6

[09:40] <Geth> ¦ doc: d5f06e5c96 | (Ben Davies)++ | 2 files

[09:40] <Geth> ¦ doc: Temporarily remove mentions of Scheduler.cue edge case version reqs

[09:40] <Geth> ¦ doc: 

[09:40] <Geth> ¦ doc: It may be in 2019.05, but may have to wait until 2019.06, but either

[09:40] <Geth> ¦ doc: way, 2019.04 isn't a version.

[09:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d5f06e5c96

[09:40] *** yqt joined
[09:46] <tyil> Kaiepi: you can't target everything, I guess

[09:46] <tyil> I think that with those 3 platforms you have most of humanity's computer platforms covered

[09:47] <Kaiepi> true

[09:47] <Kaiepi> maybe after the grant's done i could take a look at supporting bsd as well

[09:47] <timotimo> once that stuff is implemented, it's probably not too hard to expand it to also cover some BSDs

[09:47] <timotimo> yeah

[09:48] <Kaiepi> speaking of which, i'm planning on starting my own grant work soon

[09:48] <tyil> going from GNU+Linux to BSD should be easier than going from nothing to BSD, I hope :>

[09:48] <Kaiepi> it depends

[09:49] <Kaiepi> i still don't have a mentor yet, but i'm allowed to start work without one in the meantime

[09:49] <tyil> you're always allowed to make contributions, I think

[09:50] <Kaiepi> yeah

[09:52] <Kaiepi> ofc i chose to start with the hardest work to do: preparing 6.e.PREVIEW and refactoring IO::Socket and IO::Socket::Async for upcoming changes in that release

[09:53] <Kaiepi> i remember zoffix had trouble preparing 6.d

[10:00] <kawaii> timotimo: good morning sir! Are you the one controlling the current rakudo site hosting?

[10:00] <timotimo> i'm a part of the group who does

[10:01] <kawaii> so I only had access to the old server, and today I'm determined to do my first release

[10:01] <kawaii> it's going to be messy but hey, first time :D

[10:01] <kawaii> so I'll ping you later about uploading the new release files

[10:01] <timotimo> we'll support you as best we can! *goes away to take a nap*

[10:07] *** domidumont left
[10:09] *** kotrcka left
[10:09] *** kotrcka joined
[10:17] *** dumbintel joined
[10:22] <antoniogamiz> uoh githyb is not working? O.o

[10:22] <antoniogamiz> github*

[10:23] *** Manifest0 left
[10:24] <antoniogamiz> yep, github is down

[10:27] <timotimo> oh, huh

[10:27] <timotimo> not on my end

[10:27] <jast> works for me, too

[10:28] <jast> actually SSH is broken for me, too

[10:28] *** wbn left
[10:28] <timotimo> i was just able to "git pull" in my rakudo clone without issue

[10:29] *** Manifest0 joined
[10:29] *** wbn joined
[10:31] *** aborazmeh joined
[10:31] *** aborazmeh left
[10:31] *** aborazmeh joined
[10:33] *** lizmat_ is now known as lizmat

[10:35] *** dumbintel left
[10:36] *** aborazmeh left
[10:38] *** Kaypie joined
[10:38] *** Kaiepi left
[10:39] *** bbkr joined
[10:40] *** dumbintel joined
[10:45] *** dumbintel left
[10:48] <antoniogamiz> timotimo: it was only for a minute or so

[10:50] *** Sgeo_ joined
[10:51] <timotimo> OK

[10:53] *** doufu300 left
[10:54] *** Sgeo left
[10:59] <Kaypie> m: my Junction $alph = any 'abcdefghijklmnopqrstuvwxyz'.comb; my @words = flat ('aaaa'..'zzzz'), ('AAAA'..'ZZZZ'); my Instant $begin = now; @words.grep(-> $word { $alph ~~ all $word.comb }); say now - $begin

[10:59] <camelia> rakudo-moar b0dd44b00: OUTPUT: «(timeout)»

[10:59] <Kaypie> m: my Junction $alph = any 'abcdefghijklmnopqrstuvwxyz'.comb; my @words = flat ('aaa'..'zzz'), ('AAA'..'ZZZ'); my Instant $begin = now; @words.grep(-> $word { $alph ~~ all $word.comb }); say now - $begin

[11:00] <camelia> rakudo-moar b0dd44b00: OUTPUT: «20.846608␤»

[11:01] <Kaypie> m: my @words = flat ('aaa'..'zzz'), ('AAA'..'ZZZ'); my Instant $begin = now; @words.grep(-> $word { $word ~~ / ^ <[a..z]> $ / }); now - $begin

[11:01] <camelia> rakudo-moar b0dd44b00: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "-" in expression "now - $begin" in sink context (line 1)␤»

[11:01] <Kaypie> m: my @words = flat ('aaa'..'zzz'), ('AAA'..'ZZZ'); my Instant $begin = now; @words.grep(-> $word { $word ~~ / ^ <[a..z]> $ / }); say now - $begin

[11:01] <camelia> rakudo-moar b0dd44b00: OUTPUT: «0.1564643␤»

[11:01] <Kaypie> why is it so much faster to use regex than to use junctions?

[11:01] *** cpan-p6 left
[11:01] *** cpan-p6 joined
[11:01] *** cpan-p6 left
[11:01] *** cpan-p6 joined
[11:02] *** demanuel joined
[11:03] *** zakharyas left
[11:05] <timotimo> m: my Junction $alph = any 'abcdefghijklmnopqrstuvwxyz'.comb; my @words = flat ('aaaa'..'zzzz'), ('AAAA'..'ZZZZ'); my Instant $begin = now; @words.grep(-> $word { $alph eq all $word.comb }); say now - $begin

[11:05] <camelia> rakudo-moar b0dd44b00: OUTPUT: «(timeout)»

[11:05] <timotimo> the alph junction is a list of strings that all have to be string-compared separately

[11:06] <timotimo> <[a..z]> is just a check if the codepoint is between two numbers

[11:06] *** mowcat joined
[11:07] <timotimo> also, since the junction could have anything at all in it, resolving the result has to do full multi dispatch every time

[11:11] <Kaypie> ah

[11:11] <timotimo> oh, also your regex seems to only accept one-character words, i.e. it will reject everything in @words

[11:12] <timotimo> if our regex optimizer/engine were smarter it would immediately reject it based on string length

[11:12] <timotimo> but yeah, you're also turning all the three-letter "words" into arrays of strings again for checking

[11:13] *** Manifest0 left
[11:18] *** Manifest0 joined
[11:20] *** Kaypie left
[11:23] *** Kaiepi joined
[11:23] *** rindolf left
[11:37] *** Manifest0 left
[11:38] *** mowcat left
[11:39] *** rindolf joined
[11:41] *** Kaiepi left
[11:42] *** Manifest0 joined
[11:43] *** antoniogamiz left
[11:43] <tyil> looks like I've been getting timeouts for a while on www.nntp.perl.org

[11:44] <tyil> which is where I used to pull new CPAN uploads from

[11:45] *** Kaiepi joined
[11:45] <tyil> to whom can I report this issue?

[11:46] <lizmat> tyil: nntp.perl.org is still down to Perl NOC maintenance

[11:46] <tyil> ah

[11:46] <tyil> I assume it will be fixed in time, then

[11:47] <tyil> in the meantime I guess I should set up multiple sources so I can always get module updates

[11:47] <tyil> maybe something for tonight at amsterdam.pm

[11:47] <lizmat> yes... looks like  :-)

[11:47] <lizmat> indeed

[11:52] <lizmat> https://log.perl.org/2019/04/maintenance-week.html

[11:53] <lizmat> also: “We're mostly done with the heavy listing, and now we're cleaning up the dust and sharp edges and things we missed.  Things should be stabilizing rapidly.  I'm working on cleaning up the monitoring which will help us identify what's still out”

[11:53] <lizmat>  “This whole thing happened in a hurry, due to things outside our control, but we're pretty happy with how it went”

[11:56] <tyil> lizmat: thanks :>

[11:56] <Geth> ¦ doc: 7175096e4e | (Elizabeth Mattijsen)++ | doc/Language/setbagmix.pod6

[11:56] <Geth> ¦ doc: Further work on Set/Bag/Mix introduction

[11:56] <Geth> ¦ doc: 

[11:56] <Geth> ¦ doc: - reduce set operator lemma's to just intro

[11:56] <Geth> ¦ doc:   - add link to complete info in operators/terms

[11:56] <Geth> ¦ doc:   - add Wikipedia link to the mathematical explanation

[11:56] <Geth> ¦ doc: - note that they should be called QuantHash operators, but that's a mouthful

[11:56] <Geth> ¦ doc: 

[11:56] *** Geth left
[11:56] <tyil> ok

[11:56] <lizmat> oops, how did I do that ?

[11:56] <lizmat> killing Geth I mean ?

[11:56] *** Geth joined
[11:56] <tyil> nobody will know

[11:57] <tyil> probably too many messages in too short time

[11:57] <tyil> I need to configure persistent logging on my containers

[11:59] *** sena_kun joined
[11:59] <tyil> logs dont show any particular error, though

[12:03] <sena_kun>  

[12:06] *** zakharyas joined
[12:09] *** Kaiepi left
[12:11] *** domidumont joined
[12:11] *** raschipi joined
[12:14] <xinming> m: 1.5 div 1

[12:14] <camelia> rakudo-moar b0dd44b00: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "div" in expression "1.5 div 1" in sink context (line 1)␤Cannot resolve caller infix:<div>(Rat:D, Int:D); none of these signatures match:␤    (Int:D \a, Int:D \b --> Int:D)␤    (int $a, int $b --> int)␤  in…»

[12:14] <xinming> m: (1.5 div 1).perl.say;  A bit curious, Why will (1.5 div 1) returns the 0.5?

[12:14] <camelia> rakudo-moar b0dd44b00: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3ay;  A bit curious, Why will (1.5 div 1)7⏏5 returns the 0.5?␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        …»

[12:14] <xinming> (1.5 div 1).perl.say;  A bit curious, Why will (1.5 div 1) returns the 0.5?

[12:14] <xinming> m: (3 div 2).perl.say;

[12:14] <camelia> rakudo-moar b0dd44b00: OUTPUT: «1␤»

[12:15] <xinming> With integer, it worked, Why doesn't it work with floating numbers?

[12:15] <timotimo> i'll be running a fedora distro upgrade, which could take a little while. kawaii, you'll have to find someone to do the uploads; sena_kun can give away access and perhaps tell you who already has access to do the uploads

[12:16] <kawaii> no problem, I'll come and be annoying later when I'm ready to do all that! :D

[12:16] <moritz> xinming: div is an operator that explicitly coerces to integer

[12:16] * sena_kun agrees with timotimo 

[12:16] *** kensanata joined
[12:16] <sena_kun> kawaii, just ping me anytime you are fancy

[12:17] <moritz> masak: I've just learned that you can implement lambda calculus in mediawiki templates

[12:18] <xinming> moritz: I know it coerces to integer, I'm just curious why we don't have the Num version for it.

[12:18] <xinming> the design purpose

[12:18] <timotimo> "total download size: 5.7G" - probably cutting it a bit close with only 6.02G free on the hard drive ...

[12:19] <xinming> What I do for now is      $x - Int($x / 2)  to get the remainder.

[12:19] <xinming> But we have div already, I'm just curious why don't we have that support the Number.

[12:19] <xinming> The decision behind it.

[12:20] <timotimo> why not use % for getting remainders?

[12:22] <raschipi> xinming: div is supposed to work like the native integer division that processors have

[12:22] *** gregf_ joined
[12:23] *** AlexDani` is now known as AlexDaniel

[12:23] *** AlexDaniel left
[12:23] *** AlexDaniel joined
[12:24] <moritz> if you put two floats into %, you get the closest equivalent to div

[12:24] <moritz> works in the type you want, does a modulo

[12:25] <xinming> timotimo: Not remainder, I need the Int($x / 2)  part

[12:25] <xinming> raschipi: Thanks, That clear my confusion.

[12:26] <xinming> m: (5 % 3)

[12:26] <camelia> rakudo-moar b0dd44b00: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "%" in expression "5 % 3" in sink context (line 1)␤»

[12:26] <xinming> m: (5 % 3).perl.say;

[12:26] <camelia> rakudo-moar b0dd44b00: OUTPUT: «2␤»

[12:26] *** domidumont1 joined
[12:29] *** Kaiepi joined
[12:30] *** domidumont left
[12:30] <timotimo> m: for (1, 1.5, 2, 3.1, 3.2, 3.3) X (1, 2, 2.5, 3, 3.5, 0.1, 0.5) -> ($a, $b) { my $one = Int($a / $b); my $two = $a div $b; say "$a / $b: $one, $two" unless $one == $two }

[12:30] <camelia> rakudo-moar b0dd44b00: OUTPUT: «Cannot resolve caller infix:<div>(Int:D, Rat:D); none of these signatures match:␤    (Int:D \a, Int:D \b --> Int:D)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[12:30] <timotimo> oh?

[12:32] *** ravenousmoose left
[12:32] *** ravenousmoose_ joined
[12:35] <timotimo>    At least 3996MB more space needed on the / filesystem.

[12:35] <timotimo> bleeeehhhh

[12:37] <lizmat> that fits on a USB stick    :-)

[12:41] <timotimo> i just have to find some stuff that i can move over sensibly

[12:44] *** yqt left
[12:46] *** woolfy left
[12:47] <tyil> timotimo: time for zfs? :D

[12:47] *** lizmat left
[12:47] <tyil> or is your entire disk overflowing

[12:47] <timotimo> it's the entire disk

[12:48] <timotimo> it's an SSD

[12:48] <timotimo> not a big one

[12:51] *** sno joined
[12:53] <timotimo> BBL

[13:00] *** Sgeo__ joined
[13:03] *** Sgeo_ left
[13:16] *** vrurg joined
[13:18] *** raschipi left
[13:29] *** Manifest0 left
[13:35] *** Manifest0 joined
[13:47] *** cgfbee left
[13:48] *** Manifest0 left
[13:49] *** molaf joined
[13:51] *** ravenousmoose_ left
[13:53] *** Manifest0 joined
[13:53] *** ravenousmoose joined
[13:53] *** cgfbee joined
[13:59] *** bbkr left
[14:04] *** zacts joined
[14:10] <Geth> ¦ doc: b117438b90 | Antonio++ | doc/Type/Range.pod6

[14:10] <Geth> ¦ doc: EXISTS-POS method added #2739

[14:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b117438b90

[14:31] *** domidumont joined
[14:34] *** domidumont1 left
[14:35] *** kurahaupo_ left
[14:35] *** kurahaupo joined
[14:41] *** shadowpaste left
[14:54] *** shadowpaste joined
[14:57] *** shadowpaste left
[14:58] *** shadowpaste joined
[15:05] *** Sgeo_ joined
[15:07] *** kotrcka left
[15:07] *** Sgeo__ left
[15:08] *** kotrcka joined
[15:08] *** kensanata left
[15:09] *** Possum left
[15:09] *** Possum joined
[15:20] *** lizmat joined
[15:21] *** woolfy joined
[15:29] *** domidumont1 joined
[15:30] *** kktt joined
[15:31] * lizmat clickbaits https://p6weekly.wordpress.com/2019/05/06/2019-17-18-three-months-to-riga/

[15:32] *** domidumont left
[15:33] *** jmerelo joined
[15:34] <tadzik> \o/

[15:38] <moritz> twooot

[15:41] <Geth> ¦ doc: uzluisf++ created pull request #2772: Remove spaces around operators and reflow

[15:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2772

[15:43] <jmerelo> hey

[15:43] <moritz> ho

[15:44] *** Sgeo__ joined
[15:46] <jmerelo> moritz: let's go. A few riffs more, and we got a Ramones' song.

[15:47] *** Sgeo_ left
[15:51] *** patrickb left
[15:54] *** roguelazer left
[15:56] *** roguelazer joined
[15:57] *** mowcat joined
[15:58] *** cpage_ joined
[16:00] *** cpage left
[16:00] *** cpage_ is now known as cpage

[16:06] *** lucasb joined
[16:25] *** sena_kun left
[16:31] *** Sgeo_ joined
[16:33] *** Sgeo joined
[16:33] *** sena_kun joined
[16:34] *** Sgeo__ left
[16:35] *** dakkar left
[16:36] *** Sgeo_ left
[16:37] *** zacts left
[16:46] *** domidumont1 left
[16:48] *** sftp left
[16:49] *** sftp joined
[17:11] *** noisegul joined
[17:20] *** noisegul left
[17:22] *** noisegul joined
[17:23] *** noisegul left
[17:27] *** woolfy left
[17:27] *** woolfy joined
[17:39] *** zakharyas left
[17:39] *** kktt left
[17:55] *** Altreus left
[17:56] *** Altreus joined
[18:01] *** molaf left
[18:05] *** netrino joined
[18:12] <jmerelo> releasable6: status

[18:12] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 132 out of 284 commits logged (⚠ 2 warnings)

[18:12] <releasable6> jmerelo, Details: https://gist.github.com/32dd8143d266b08daa8cf2492c2957a4

[18:12] <jmerelo> That did not move a lot in the last few days.

[18:19] *** pecastro joined
[18:19] <masak> moritz: that's the best thing I've heard about MediaWiki templates in quite a while.

[18:19] * masak is really looking forward to Riga, too

[18:20] <masak> will be my first YAPC::EU in a while, and my first PerlCon ever ;)

[18:21] <jmerelo> masak: that's got to do something how the people is going to receive your totally not disruptive change in the Perl 6 core?

[18:22] <moritz> what did I miss?

[18:27] <jmerelo> moritz: masak's plans for world domination https://twitter.com/carlmasak/status/1125460437125017600

[18:27] <tadzik> I can't wait for the GGE rewrite in 007 replacing Grammar.pm

[18:29] <masak> tadzik: shhhhh!

[18:30] <tadzik> oops

[18:30] *** sauvin left
[18:30] <masak> gee, am I really that transparent?

[18:30] <tadzik> don't worry, with my GDPR superpowers I'm going to delete this from the internet

[18:30] <tadzik> y'all are not allowed to read this anymore

[18:30] <masak> "I exercise my right to be forgotten. hello. hello?"

[18:30] <tobs> masak: the Yoneda lemma has one layer of stuff much, right?

[18:31] <tobs> (re: your twitter blurb)

[18:31] <masak> tobs: you can always fix things by adding another layer of stuff... except possibly the Yoneda lemma, which already has way too much stuff. or too little, I can't decide.

[18:32] <moritz> jmerelo: ah, those plans :D

[18:32] <masak> mwhahah... I mean, please disregard any fallacious rumors about plans

[18:32] <tobs> I think the fixing effect of more layers is when you put indirections in between, not stack more and more on top :)

[18:33] <masak> well. "in between" is undoubtedly the best place to put indirections :P

[18:34] * masak .oO( "where does that indirection go?" -- "nowhere. it was put in at the very end, after we had any referents left." )

[18:35] <masak> I only really know two things about the Yoneda lemma: that I don't understand it, and that it's a beautiful generalization of Cayley's theorem

[18:35] <masak> (and even that latter fact I had to look up, so I didn't actually write "Cauchy's theorem")

[18:36] <masak> accidentally*

[18:36] <masak> I know all the ingredients and constituent parts that go into the lemma, but I can only really make them all fit together in my head when I'm drunk

[18:38] <jmerelo> masak: I'll get you to explain it to me over beers in Riga

[18:38] <jmerelo> masak: they have beer in Riga, right?

[18:42] <lizmat> yes, belgian beer even

[18:42] * lizmat has fond memories of the Belgian bar in Riga

[18:43] <jmerelo> lizmat: good to know. They have proper glasses for every kind of beer. That's probably essential to prove the Yoneda lemma

[18:44] <lizmat> http://bon-vivant.lv/en/home/

[18:48] *** Garland_g joined
[18:49] <masak> jmerelo: I'm not drunk right now, but there's a Swahili word "ubuntu" that's been having an upswing for the past 14 years for some reason.

[18:50] <masak> jmerelo: it means (IIUC) that people are defined by who they know and spend time with.

[18:50] <masak> jmerelo: that's a good description of the Yoneda lemma, except with categorical objects instead of people :D

[18:54] <jmerelo> and functors

[18:55] <jmerelo> masak: people are defined by what they functor with

[18:55] *** lucasb left
[19:00] *** Sgeo_ joined
[19:03] *** Sgeo left
[19:05] *** kaare__ joined
[19:05] *** kaare_ left
[19:05] *** Manifest0 left
[19:06] <masak> and who they cofunctor with

[19:11] *** Manifest0 joined
[19:13] *** zakharyas joined
[19:15] *** Manifest0 left
[19:22] *** Manifest0 joined
[19:24] *** zakharyas left
[19:25] *** jmerelo left
[19:30] *** mowcat left
[19:37] *** ufobat joined
[19:41] *** mowcat joined
[19:53] <ufobat> m: say grammar { rule TOP {  <.ws>* \w* }}.parse("foo")

[19:54] <ufobat> m: say "oi?"

[19:54] <ufobat> :-(

[19:54] <camelia> rakudo-moar b0dd44b00: OUTPUT: «(timeout)»

[19:54] <camelia> rakudo-moar b0dd44b00: OUTPUT: «oi?␤»

[19:54] <ufobat> uh!

[20:04] *** daxim left
[20:08] *** ufobat_ joined
[20:11] *** ufobat left
[20:12] *** yqt joined
[20:15] *** johnjohn101 joined
[20:16] *** molaf joined
[20:21] *** Manifest0 left
[20:29] *** Manifest0 joined
[20:34] <timotimo> ufobat_: did you find out why that was wrong?

[20:34] *** yqt left
[20:34] <ufobat_> not yet

[20:34] *** mtj_ left
[20:34] *** mtj_ joined
[20:37] <tobs> m: say "    foo" ~~ / <.ws> \w* /

[20:37] <camelia> rakudo-moar b0dd44b00: OUTPUT: «｢    foo｣␤»

[20:38] <tobs> if I had to guess it's because <ws> is already a star-quantified whitespace, so it can match 0 times if it must and you star it again, so it keeps consuming nothing over and over.

[20:39] <tobs> m: say all("foo", "  foo")  ~~ / <.ws> \w* /

[20:39] <camelia> rakudo-moar b0dd44b00: OUTPUT: «all(｢foo｣, ｢  foo｣)␤»

[20:39] *** lizmat left
[20:40] <tobs> m: say "foo"  ~~ / [<[ ]>*]* \w* /  # <.ws>*, I assume, is then something like this but with more kinds of whitespace

[20:40] <tobs> ufobat_ ^

[20:40] <camelia> rakudo-moar b0dd44b00: OUTPUT: «(timeout)»

[20:42] <ufobat_> i see :D

[20:42] <ufobat_> thanks tobs 

[20:42] *** woolfy left
[20:43] *** mtj_ left
[20:47] *** mtj_ joined
[20:55] *** lichtkind joined
[20:58] *** aborazmeh joined
[20:58] *** aborazmeh left
[20:58] *** aborazmeh joined
[21:01] *** aborazmeh left
[21:04] *** Garland_g left
[21:04] *** lichtkind left
[21:18] *** Sgeo__ joined
[21:21] *** alpha6 left
[21:21] *** alpha6 joined
[21:21] *** Sgeo_ left
[21:22] *** johnjohn101 left
[21:29] *** pecastro left
[21:31] *** molaf left
[21:41] *** Sgeo_ joined
[21:42] *** upupbb-user1 joined
[21:44] *** Sgeo__ left
[21:46] *** mowcat left
[21:47] *** zacts joined
[22:01] *** daxim joined
[22:03] *** zacts left
[22:13] *** MasterDuke joined
[22:13] *** MasterDuke left
[22:13] *** MasterDuke joined
[22:14] *** netrino left
[22:18] *** rindolf left
[22:25] *** tobs left
[22:30] *** Manifest0 left
[22:31] *** Sgeo__ joined
[22:33] *** Sgeo_ left
[22:35] *** Manifest0 joined
[22:37] *** sno left
[22:37] *** tobs joined
[22:38] *** Sgeo_ joined
[22:38] *** comborico1611 joined
[22:39] *** sno joined
[22:40] *** Sgeo__ left
[22:46] *** sno left
[22:47] *** [Sno] joined
[22:56] *** Manifest0 left
[23:01] *** Manifest0 joined
[23:13] *** Manifest0 left
[23:16] *** noisegul joined
[23:18] *** Manifest0 joined
[23:22] *** Manifest0 left
[23:24] *** woolfy joined
[23:28] *** Manifest0 joined
[23:28] *** yqt joined
[23:35] *** comborico1611 left
[23:44] *** yqt left
[23:56] *** Manifest0 left
[23:59] *** khisanth_ left
