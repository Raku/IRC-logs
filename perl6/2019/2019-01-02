[00:00] *** p6bannerbot sets mode: +v Sgeo__

[00:02] *** ryn1x left
[00:02] *** Sgeo_ left
[00:11] *** w_richard_w joined
[00:11] *** p6bannerbot sets mode: +v w_richard_w

[00:16] <vrurg> Funny, 'if' switches &?BLOCK and &?ROUTINE

[00:16] <vrurg> m: sub f { if True { say "BLOCK:", &?BLOCK.name, " is ", &?BLOCK.WHAT; say "ROUTINE:", &?ROUTINE.name, " is ", &?ROUTINE.WHAT; } }; f;

[00:16] <camelia> rakudo-moar afccc2c02: OUTPUT: «BLOCK:f is (Sub)␤ROUTINE:<unit> is (Block)␤»

[00:24] *** kurahaupo_ joined
[00:25] *** p6bannerbot sets mode: +v kurahaupo_

[00:28] *** kurahaupo left
[00:42] *** Ven`` joined
[00:43] *** p6bannerbot sets mode: +v Ven``

[00:45] *** doufu300 joined
[00:45] *** p6bannerbot sets mode: +v doufu300

[00:47] *** doufu300 left
[00:50] *** uzl joined
[00:50] *** p6bannerbot sets mode: +v uzl

[00:53] <uzl> .tell jjmerelo I read you're writing a P6 book, JJ! Will it be a "bible" reference like "Programming Perl" or something less extensive?

[00:53] <yoleaux> uzl: I'll pass your message to jjmerelo.

[01:08] *** uzl left
[01:10] *** w_richard_w left
[01:19] <holyghost> .tell jmerelo Good luck with your Perl6 book !

[01:19] <yoleaux> holyghost: I'll pass your message to jmerelo.

[01:22] *** w_richard_w joined
[01:22] *** p6bannerbot sets mode: +v w_richard_w

[01:26] *** Sgeo__ left
[01:27] *** Sgeo__ joined
[01:28] *** p6bannerbot sets mode: +v Sgeo__

[01:29] <SmokeMachine> is $?CLASS a type?!

[01:37] *** Sgeo_ joined
[01:38] *** p6bannerbot sets mode: +v Sgeo_

[01:41] *** Sgeo__ left
[01:47] <b2gills> $?CLASS is an alias to the surrounding class

[01:47] <b2gills> m: class Foo { method bar (){ say $?CLASS.^methods }}; Foo.bar()

[01:47] <camelia> rakudo-moar afccc2c02: OUTPUT: «(bar)␤»

[01:48] *** Manifest0 left
[01:48] *** Manifest0 joined
[01:49] *** p6bannerbot sets mode: +v Manifest0

[02:18] <SmokeMachine> m: say role :: { has $.bla }.^attributes.head.package

[02:18] <camelia> rakudo-moar afccc2c02: OUTPUT: «No such method 'gist' for invocant of type '$?CLASS'␤  in block <unit> at <tmp> line 1␤␤»

[02:18] <SmokeMachine> m: say role R { has $.bla }; class :: does R {}.^attributes.head.package

[02:18] <camelia> rakudo-moar afccc2c02: OUTPUT: «(R)␤»

[02:18] <SmokeMachine> how is it changed?

[02:32] <SmokeMachine> m: role R { has $.bla }; say class :: does R {}.^attributes.head.package

[02:32] <camelia> rakudo-moar afccc2c02: OUTPUT: «(<anon|1>)␤»

[02:32] <SmokeMachine> m: role R { has $.bla }; say class :: does R {}.^attributes.head.package.^name

[02:32] <camelia> rakudo-moar afccc2c02: OUTPUT: «<anon|1>␤»

[02:32] <SmokeMachine> m: role R { has $.bla }; say class C does R {}.^attributes.head.package.^name

[02:32] <camelia> rakudo-moar afccc2c02: OUTPUT: «C␤»

[02:32] <SmokeMachine> m: role R { has $.bla }; say class C does R {}.^attributes.head.package

[02:32] <camelia> rakudo-moar afccc2c02: OUTPUT: «(C)␤»

[02:33] <SmokeMachine> m: role R { has $.bla }; class C does R {}; my $r = R.^attributes.head.package; my $c = C^attributes.head.package; dd [:$r, :$c]

[02:33] <camelia> rakudo-moar afccc2c02: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    attributes used at line 1␤␤»

[02:33] <SmokeMachine> m: role R { has $.bla }; class C does R {}; my $r = R.^attributes.head.package; my $c = C.^attributes.head.package; dd [:$r, :$c]

[02:33] <camelia> rakudo-moar afccc2c02: OUTPUT: «No such method 'perl' for invocant of type '$?CLASS'␤  in block <unit> at <tmp> line 1␤␤»

[02:34] <SmokeMachine> m: role R { has $.bla }; class C does R {}; my $r = R.^attributes.head.package; my $c = C.^attributes.head.package; dd $c

[02:34] <camelia> rakudo-moar afccc2c02: OUTPUT: «C $c = C␤»

[02:34] <SmokeMachine> m: role R { has $.bla }; class C does R {}; my $r = R.^attributes.head.package; my $c = C.^attributes.head.package; say $r === $c

[02:34] <camelia> rakudo-moar afccc2c02: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got $?CLASS (?)␤  in block <unit> at <tmp> line 1␤␤»

[02:34] *** Ven`` left
[03:00] *** Xliff joined
[03:00] *** p6bannerbot sets mode: +v Xliff

[03:19] *** martin__ joined
[03:19] *** p6bannerbot sets mode: +v martin__

[03:23] *** leont left
[03:23] *** ufobat left
[03:33] *** reach_satori left
[03:42] *** ryn1x joined
[03:43] *** p6bannerbot sets mode: +v ryn1x

[04:00] *** reach_satori joined
[04:01] *** p6bannerbot sets mode: +v reach_satori

[04:04] *** Sgeo__ joined
[04:05] *** p6bannerbot sets mode: +v Sgeo__

[04:07] *** Sgeo_ left
[04:12] <dduncan> m: token od { <ab-[xy]> }

[04:12] <camelia> rakudo-moar afccc2c02: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3token od { <ab7⏏5-[xy]> }␤»

[04:12] <dduncan> Question, what is wrong with this?

[04:12] <dduncan> I’m trying to declare a character class that equals the class named “ab” but minus the characters given in the [].

[04:13] <dduncan> I recalled Perl 6 examples or docs in the past showing something similar.

[04:23] <dduncan> m: token od { <ab> & <-[xy]> }

[04:23] <camelia> rakudo-moar afccc2c02: OUTPUT: «Potential difficulties:␤    Useless declaration of a has-scoped method in mainline (did you mean 'my token od'?)␤    at <tmp>:1␤    ------> 3token 7⏏5od { <ab> & <-[xy]> }␤»

[04:24] <dduncan> Is that the best way to formulate my intention?

[04:25] <dduncan> Maybe my example was based on an older language design that is obsolete, but I had thought it was possible to more directly use set notions on character classes.

[04:26] *** w_richard_w left
[04:26] *** w_richard_w joined
[04:27] *** p6bannerbot sets mode: +v w_richard_w

[04:32] <dduncan> Question: Currently my 18K Perl 6 grammar takes the latest Rakudo Star 15 seconds to compile or syntax check; does that sound normal or might there be anything in particular about how I wrote my code that might be making this slower?

[04:33] <dduncan> This consists of a large number of small token declarations.

[04:39] <dduncan> This is a late-2013 iMac with a 3.2 GHz Intel Core i5, with plenty of RAM and an SSD, and running MacOS High Sierra 10.13.6.  It is Rakudo Star 2018.10.

[04:49] *** Cabanoss- joined
[04:50] *** Cabanossi left
[04:50] *** p6bannerbot sets mode: +v Cabanoss-

[04:54] *** MasterDuke joined
[04:54] *** p6bannerbot sets mode: +v MasterDuke

[04:54] *** MasterDuke left
[04:54] *** MasterDuke joined
[04:54] *** herbert.freenode.net sets mode: +v MasterDuke

[04:54] *** p6bannerbot sets mode: +v MasterDuke

[04:54] *** Ven`` joined
[04:55] <MasterDuke> dduncan: i'm not surprised. parsing is still pretty slow

[04:55] *** p6bannerbot sets mode: +v Ven``

[04:56] <MasterDuke> i'm not aware of any particular slowdown because of the number of token declarations

[04:57] <MasterDuke> but adding operators does get slower for each one added, see https://rt.perl.org/Public/Bug/Display.html?id=128760

[05:06] *** Ven`` left
[05:09] <dduncan> I don’t declare any operators here so that wouldn’t affect this.

[05:40] <Elronnd> does anyone else use vim?

[05:40] <Elronnd> when syntax highlighting is turned on in a perl6 file, it gets _really_ slow

[05:41] *** vrurg left
[05:51] <Elronnd> any tips?

[05:52] *** w_richard_w left
[06:09] *** kurahaupo_ left
[06:09] *** kurahaupo joined
[06:10] *** kurahaupo left
[06:10] *** kurahaupo joined
[06:11] *** p6bannerbot sets mode: +v kurahaupo

[06:11] <pony> I was just thinking that right now

[06:11] <pony> I wanted to ask as well

[06:20] *** lizmat left
[06:23] *** MasterDuke left
[06:28] *** llfourn left
[06:36] *** llfourn joined
[06:37] *** p6bannerbot sets mode: +v llfourn

[06:43] *** Manifest0 left
[06:43] *** Manifest0 joined
[06:43] *** llfourn left
[06:44] *** p6bannerbot sets mode: +v Manifest0

[06:46] *** lizmat joined
[06:46] *** p6bannerbot sets mode: +v lizmat

[06:53] *** kurahaupo left
[06:53] *** Manifest0 left
[06:54] *** Manifest0 joined
[06:54] *** p6bannerbot sets mode: +v Manifest0

[07:16] <Elronnd> in this line of code "return ord($c) if $c ne '\\';" I get an error in between the 'o' and the 'r' in ord (?) of "bogus statement.  Expecting any of: whitespace"

[07:16] <Elronnd> why?  Why can't I return?

[07:34] *** abraxxa joined
[07:34] *** p6bannerbot sets mode: +v abraxxa

[07:41] *** abraxxa left
[07:42] *** abraxxa joined
[07:42] *** abraxxa left
[07:42] *** abraxxa joined
[07:42] *** abraxxa left
[07:43] *** abraxxa joined
[07:44] *** p6bannerbot sets mode: +v abraxxa

[07:54] *** martin__ left
[07:59] *** jme` left
[07:59] *** jme` joined
[08:00] *** p6bannerbot sets mode: +v jme`

[08:07] <lookatme_q> Elronnd, do you mean "\\" ? String in '' will not escape

[08:12] *** ryn1x left
[08:14] *** rindolf joined
[08:14] *** p6bannerbot sets mode: +v rindolf

[08:15] *** ryn1x joined
[08:15] *** p6bannerbot sets mode: +v ryn1x

[08:23] *** jmerelo joined
[08:24] *** p6bannerbot sets mode: +v jmerelo

[08:25] *** reach_satori left
[08:34] *** Manifest0 left
[08:35] *** Manifest0 joined
[08:35] *** p6bannerbot sets mode: +v Manifest0

[08:39] *** |oLa| left
[08:45] *** ryn1x left
[08:46] *** scimon joined
[08:47] *** p6bannerbot sets mode: +v scimon

[08:50] <jmerelo> squashable6: status

[08:50] <yoleaux> 01:19Z <holyghost> jmerelo: Good luck with your Perl6 book !

[08:50] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 2 days and ≈1 hour (2019-01-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:50] <jmerelo> ^^^^  Squashathon is coming!

[08:51] <jmerelo> (And I'm going to London)

[08:57] *** cosimo joined
[08:58] *** p6bannerbot sets mode: +v cosimo

[08:58] *** abraxxa left
[08:59] *** abraxxa joined
[09:00] *** p6bannerbot sets mode: +v abraxxa

[09:02] *** abraxxa left
[09:05] <Geth> ¦ doc: 66ff9197f5 | (JJ Merelo)++ | doc/Type/Distribution/Hash.pod6

[09:05] <Geth> ¦ doc: Reviews Distribution::Hash

[09:05] <Geth> ¦ doc: 

[09:05] <Geth> ¦ doc: And with this, closes #2136.

[09:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/66ff9197f5

[09:05] <synopsebot> Link: https://doc.perl6.org/type/Distribution::Hash

[09:05] *** abraxxa joined
[09:06] *** p6bannerbot sets mode: +v abraxxa

[09:10] *** |oLa| joined
[09:11] *** p6bannerbot sets mode: +v |oLa|

[09:17] *** zakharyas joined
[09:18] *** p6bannerbot sets mode: +v zakharyas

[09:19] *** Sgeo_ joined
[09:20] *** p6bannerbot sets mode: +v Sgeo_

[09:20] *** |oLa| left
[09:20] *** reach_satori joined
[09:21] *** p6bannerbot sets mode: +v reach_satori

[09:23] *** Sgeo__ left
[09:28] <dduncan> FYI, this is the 18K grammar I was speaking of earlier, my first “complete” Perl 6 grammar.  https://github.com/muldis/Muldis_Object_Notation/tree/master/hosts/Perl6  This is complete conceptually and Rakudo parses it without error, but I still have to execute it and verify/fix that it behaves correctly, and tweak it to actually do capturing, my next task.

[09:32] *** domidumont joined
[09:33] <jmerelo> dduncan: great! :-)

[09:33] *** p6bannerbot sets mode: +v domidumont

[09:34] <moritz> I'm kinda amazed that you'd write 18K code (any code, be grammar or regular code) without testing parts of it

[09:35] <moritz> and by "amazed" I actually mean more like "horrified"

[09:36] <jmerelo> moritz: well, that's been known to happen.

[09:38] <dduncan> Well, in this case that code was originally documentation and not meant to be executable by itself, but I chose the Perl 6 grammar syntax rather than EBNF or ANTLR or whatever because I found the Perl 6 syntax to be more expressive.  Then when I was actually ready to execute, the natural first step would be to take what I wrote and try to run it in Perl 6.

[09:39] <moritz> dduncan: that makes more sense, thanks for providing more context

[09:41] <dduncan> It also turns out there were not more than 3 kinds of syntax errors, so I did fairly well getting it well formed without running it.

[09:42] <Geth> ¦ doc: 506ea88a9a | (JJ Merelo)++ | doc/Type/Telemetry/Sampler.pod6

[09:42] <Geth> ¦ doc: Those classes didn't actually exist.

[09:42] <Geth> ¦ doc: 

[09:42] <Geth> ¦ doc: Or they don't exist now. Substituted by their real names. Closes #1814.

[09:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/506ea88a9a

[09:42] <synopsebot> Link: https://doc.perl6.org/type/Telemetry::Sampler

[09:45] <dduncan> The first error was writing `<[\x<1A>]>` etc rather than `<[\x[1A]]>`; the second was writing `<foo> % <bar>` instead of `<foo>+ % <bar>`; the third was writing `<foo-[xy]>` rather than `<foo> & <-[xy]>`; other than a few instances of those, the grammar was already parseable.

[09:47] <Geth> ¦ doc: AlexDaniel unassigned from Tyil Issue GitHub Pod Parsing https://github.com/perl6/doc/issues/167

[10:00] *** scimon left
[10:01] *** scimon joined
[10:01] *** linnucks joined
[10:01] *** p6bannerbot sets mode: +v linnucks

[10:01] <linnucks> should I learn perl 5 or perl 6

[10:01] <jmerelo> linnucks: depends on what you are looking for. But, hey, this is a perl6 channel, so thumbs up perl 6

[10:01] *** p6bannerbot sets mode: +v scimon

[10:05] <El_Che> linnucks: desoite the confusing names, Perl 5 and 6 are two languages with their own strengths and weaknesses (it like asking "do I learn Ruby or Java"). In this channel, however, we can help you with your Perl 6 learning :)

[10:06] *** Sgeo__ joined
[10:07] *** p6bannerbot sets mode: +v Sgeo__

[10:09] *** Sgeo_ left
[10:26] *** dduncan left
[10:38] *** Manifest0 left
[10:38] *** Manifest0 joined
[10:39] * jmerelo calls a vote on closing the "Github pod parsing" issue: https://github.com/perl6/doc/issues/167#issuecomment-450831835

[10:39] *** p6bannerbot sets mode: +v Manifest0

[10:39] <jmerelo> I will keep the vote running until Sunday at least. Please repost vote, since I'm not going to be much available until that time.

[10:40] *** AlexDaniel left
[10:41] <tyil> jmerelo++

[10:41] *** AlexDaniel joined
[10:41] *** p6bannerbot sets mode: +v AlexDaniel

[10:41] <tyil> I would like to see a way to parse perl 6 pod without touching code

[10:42] <tyil> it generally seems to cause troubles in all sorts of places

[10:43] <jmerelo> tyil: well, raiph's summary on the original discussion, summarized here: https://github.com/perl6/Pod-To-HTML/issues/55#issuecomment-448836127, is extremely interesting. But that's orthogonal to the issue *in the documentation repository*.

[10:44] <jmerelo> tyil: it seems to be there just because, back then in October 2015, there was no better place to put this thing, and since it says "Pod", well, OK.

[10:46] <tyil> jmerelo: I'll read through that "soon", thanks :>

[10:46] <jmerelo> tyil: most of the original issues have been addressed, also. Pod and pod6 are now different, PRs have been merged into GitHub... HTML rendering of Pod6 now mostly works, too. 

[10:47] <tyil> yeah, I did keep track of the MRs we did for Github support on Pod6

[10:47] <tyil> and noticed they eventually got meregd

[10:48] *** Sgeo_ joined
[10:49] *** p6bannerbot sets mode: +v Sgeo_

[10:52] *** Sgeo__ left
[11:06] <AlexDaniel> are you all freaking kidding me :)

[11:06] <tyil> AlexDaniel: ?

[11:06] <AlexDaniel> there is an issue, and there is an obvious solution (though somebody has to do it)

[11:06] <AlexDaniel> and we're all voting? For what, for closing the issue?

[11:07] <AlexDaniel> you don't need a vote to move the issue to another repo

[11:07] <AlexDaniel> let it be user-experience or whatever you want

[11:07] <jmerelo> AlexDaniel: it's not clear to which one it should be moved. And it's got 37 comments. It's much better, as I said before, close and summarize, preferably somewhere else.

[11:08] <AlexDaniel> sure, do it, you don't need to gather votes for that

[11:08] <jmerelo> AlexDaniel: I couldn't risk moving it with you moving it back :-) So it's better if we reach a (rough) consensus.

[11:08] <AlexDaniel> I'm not moving it back

[11:08] <AlexDaniel> I just want to make sure we have an open ticket for tracking a real issue

[11:08] <jmerelo> AlexDaniel: the poll is already open. I can't move it *now*

[11:08] <AlexDaniel> (an issue that can be solved, by the way, if that's still not clear enough…)

[11:08] <AlexDaniel> go for it

[11:09] <tyil> theoretically, every issue can be solved

[11:09] <jmerelo> AlexDaniel: it can be solved *in theory*. My argument is that it's been solved *already* in the original terms.

[11:10] <AlexDaniel> yeah but for example in terms of user experience NOTHING was solved

[11:10] <tyil> I think that's why jmerelo wants to create a new one :)

[11:10] <AlexDaniel> but I'm all for it!

[11:11] <AlexDaniel> and was never against. But I reopened the issue because it was closed with the comment saying that it can't be done…

[11:11] <AlexDaniel> now again, I haven't followed the progress on that thing, but I'm just wondering

[11:11] <AlexDaniel> by any chance, can't we abuse https://github.com/perl6/atom-language-perl6 to do what we want?

[11:12] <jmerelo> tyil: I want to create a new one (somewhere else) *instead* of moving it somewhere else. But I am all for closing it.

[11:12] <AlexDaniel> jmerelo: https://github.com/perl6/user-experience is probably *the* somewhere else

[11:12] <jmerelo> AlexDaniel: feel free to open an issue in any of the repos you have mentioned.

[11:12] <AlexDaniel> and yeah I'm okay with restarting the discussion from scratch because the old one is hard to follow

[11:13] <jmerelo> AlexDaniel: that is the reason why I wanted to close it and you opened it back.

[11:13] <jmerelo> AlexDaniel: with 37 comments, the same issues kept cropping up over and over again.

[11:13] <AlexDaniel> jmerelo: ok, so did you open a new ticket? And if not, why?

[11:13] <AlexDaniel> why do you think it's OK to close an issue without opening a new one?

[11:14] *** jast joined
[11:14] <jmerelo> AlexDaniel: because I don't think it's an issue that can be easily solved right now, or in the near future. 

[11:14] *** p6bannerbot sets mode: +v jast

[11:15] <jmerelo> AlexDaniel: I don't want to burden whoever is in charge of user-experience (apparently no-one) or marketing (ditto) with an issue, when there are already 22 issues that have not been solved there.

[11:15] <timotimo> .tell dduncan the muldis object notation grammar spends a whole lot of time doing "mergesubrule" and "mergesubstates" and "optimize", which are related to building the NFA used for longest token matching, i.e. the | operator and proto/multi tokens. maybe there's some optimization opportunities there.

[11:15] <yoleaux> timotimo: I'll pass your message to dduncan.

[11:19] <jmerelo> AlexDaniel: I also think it's OK to close an issue if it can be no longer addressed in terms of the repository it's been created (and it didn't belong to the repo to start with)

[11:20] *** |oLa| joined
[11:21] *** p6bannerbot sets mode: +v |oLa|

[11:21] *** ChoHag joined
[11:22] *** p6bannerbot sets mode: +v ChoHag

[11:24] *** scimon left
[11:24] *** scimon joined
[11:25] *** p6bannerbot sets mode: +v scimon

[11:31] <AlexDaniel> jmerelo: the number of to-be-resolved issues is irrelevant

[11:31] <AlexDaniel> if there's a problem, you write it down

[11:32] <Geth> ¦ doc: 39270a90eb | (JJ Merelo)++ | 6 files

[11:32] <Geth> ¦ doc: Adds metadata to preferred word variants and fix occurrences

[11:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/39270a90eb

[11:33] <jmerelo> AlexDaniel: right. And if the problem has been solved, you close it. Those are two completely different issues. 

[11:33] <AlexDaniel> but it's not resolved. GitHub still doesn't render pod6

[11:34] <jmerelo> AlexDaniel: I think it is, in its original terms, and in the context of the documentation repository. But since there seems to be a difference of opinion, that's why I'm calling a vote.

[11:35] <AlexDaniel> “GitHub doesn't parse P6 pod and shows errors when viewing docs in this repo”

[11:35] <AlexDaniel> that's from the OP

[11:35] <jmerelo> (for the sake of those who have arrived late to the conversation, here's what we're talking about https://github.com/perl6/doc/issues/167)

[11:35] <AlexDaniel> ok it doesn't show errors now because they were renamed to .pod6…

[11:35] <jmerelo> AlexDaniel: which does not belong in perl6/doc to start with.

[11:36] <AlexDaniel> move it then, no problem with that

[11:36] <jmerelo> AlexDaniel: so that was one of the things that were addressed *in terms of the repo itself*

[11:36] <AlexDaniel> or close and reopen elsewhere

[11:37] <jmerelo> AlexDaniel: re: moving it. I've discussed it already. a) I don't think it's an issue. b) I have already called a vote, I can't move it now c) I have no idea where it belongs. 

[11:37] <AlexDaniel> /o\

[11:37] *** Manifest0 left
[11:38] <jmerelo> AlexDaniel: I have already closed it, and you have reopened it. I'll close it again if the vote reaches that conclusion (or anyone else can do it, for that matter).

[11:38] *** Manifest0 joined
[11:38] <AlexDaniel> a) great! b) voting is not needed to move it c) user-experience is fine

[11:38] *** p6bannerbot sets mode: +v Manifest0

[11:39] <jmerelo> AlexDaniel: then vote yes for closing and qualify your vote by assigning the issue to me and saying that you vote yes if JJ opens it in user-experience

[11:39] <AlexDaniel> we've been through that a few times now I think, and I still see issues closed with an expectation that somebody else will dig the discussion back, go through it and file a new ticket

[11:39] <jmerelo> (and again, I wouldn't transfer it, I would summarize the issues involved, saving whoever reads it the time to go through 37 comments, with links)

[11:41] <AlexDaniel> OK fuck I don't know why it's so hard

[11:41] * AlexDaniel moves it

[11:42] <jmerelo> AlexDaniel++

[11:44] <AlexDaniel> done https://github.com/perl6/user-experience/issues/35

[11:45] <AlexDaniel> took less than 4 minutes, please just do that instead next time…

[11:47] <jmerelo> AlexDaniel: I did what I thought would the best, you did the same. At least we agree on the fact that something should be done about it :-) 

[11:55] <El_Che> you agree to agree

[11:55] <lizmat> I don't .... disagree  :-)

[11:55] <scimon> So. Hi everyone. 

[11:57] <lizmat> scimon  o/

[11:59] *** |oLa|1 joined
[11:59] *** |oLa| left
[11:59] *** p6bannerbot sets mode: +v |oLa|1

[12:05] <jmerelo> hi!

[12:13] *** damaxi joined
[12:14] *** damaxi is now known as andrzejku

[12:14] *** p6bannerbot sets mode: +v andrzejku

[12:17] *** Manifest0 left
[12:17] *** Manifest0 joined
[12:17] *** linnucks left
[12:18] *** p6bannerbot sets mode: +v Manifest0

[12:21] *** kurahaupo joined
[12:22] <Geth> ¦ perl6-examples/master: 11 commits pushed by (Paul Cochrane)++

[12:22] <Geth> ¦ perl6-examples/master: review: https://github.com/perl6/perl6-examples/compare/2e7e162bd0a0...e1c34dea3cbe

[12:22] *** p6bannerbot sets mode: +v kurahaupo

[12:43] *** andrzejku left
[13:02] *** leont joined
[13:02] *** zakharyas left
[13:03] *** p6bannerbot sets mode: +v leont

[13:07] *** lucasb joined
[13:07] *** p6bannerbot sets mode: +v lucasb

[13:15] <Geth> ¦ perl6-examples: 6d33fcbcd8 | (Paul Cochrane)++ | Makefile

[13:15] <Geth> ¦ perl6-examples: Install test-required dependencies

[13:15] <Geth> ¦ perl6-examples: 

[13:15] <Geth> ¦ perl6-examples: The `--/test` option to `zef` doesn't install the dependencies needed to

[13:15] <Geth> ¦ perl6-examples: run all of the tests, hence we need to use `--test`.  However, in order

[13:15] <Geth> ¦ perl6-examples: to avoid running the tests for all of the other dependencies, we first

[13:15] <Geth> ¦ perl6-examples: install the base dependencies *without* tests and then install the

[13:15] <Geth> ¦ perl6-examples: remainder *with* tests.  This way dependencies required for running the

[13:15] <Geth> ¦ perl6-examples: tests (such as `Test::META`) are installed and the test suite passes.

[13:15] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/6d33fcbcd8

[13:15] <Geth> ¦ perl6-examples: 35ecaf0008 | (Paul Cochrane)++ | t/003-categories.t

[13:15] <Geth> ¦ perl6-examples: Revert "Fix sporadic categories test failure"

[13:15] <Geth> ¦ perl6-examples: 

[13:15] <Geth> ¦ perl6-examples: ... since it didn't fix the problem; the test failures in the categories

[13:15] <Geth> ¦ perl6-examples: tests are still sporadic.

[13:15] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/35ecaf0008

[13:34] *** jmerelo left
[13:45] *** MasterDuke joined
[13:45] *** p6bannerbot sets mode: +v MasterDuke

[13:45] *** MasterDuke left
[13:45] *** MasterDuke joined
[13:45] *** herbert.freenode.net sets mode: +v MasterDuke

[13:45] *** p6bannerbot sets mode: +v MasterDuke

[13:50] *** Sgeo__ joined
[13:51] *** cydf joined
[13:51] *** p6bannerbot sets mode: +v Sgeo__

[13:51] *** p6bannerbot sets mode: +v cydf

[13:53] *** Sgeo_ left
[13:57] *** |oLa|1 left
[14:06] *** damaxi joined
[14:07] *** p6bannerbot sets mode: +v damaxi

[14:13] *** zakharyas joined
[14:14] *** p6bannerbot sets mode: +v zakharyas

[14:27] *** vrurg joined
[14:28] *** p6bannerbot sets mode: +v vrurg

[14:28] *** cydf left
[14:30] *** damaxi left
[14:54] *** Ven`` joined
[14:55] *** p6bannerbot sets mode: +v Ven``

[14:57] *** Sgeo_ joined
[14:58] *** p6bannerbot sets mode: +v Sgeo_

[15:01] *** Sgeo__ left
[15:03] *** scimon left
[15:04] *** scimon joined
[15:04] *** p6bannerbot sets mode: +v scimon

[15:08] *** vike1 left
[15:18] *** vike1 joined
[15:19] *** p6bannerbot sets mode: +v vike1

[15:21] *** jme` left
[15:32] *** vike1 left
[15:39] *** Ven` joined
[15:39] *** vike1 joined
[15:39] *** p6bannerbot sets mode: +v Ven`

[15:40] *** p6bannerbot sets mode: +v vike1

[15:40] *** scimon left
[15:40] *** Ven` left
[15:40] *** scimon joined
[15:41] *** p6bannerbot sets mode: +v scimon

[15:43] *** vrurg left
[15:45] *** vrurg joined
[15:45] *** p6bannerbot sets mode: +v vrurg

[15:47] *** |oLa| joined
[15:48] *** p6bannerbot sets mode: +v |oLa|

[15:55] *** molaf joined
[15:56] *** p6bannerbot sets mode: +v molaf

[16:03] *** ponbiki joined
[16:04] *** p6bannerbot sets mode: +v ponbiki

[16:11] *** melezhik joined
[16:11] *** p6bannerbot sets mode: +v melezhik

[16:27] *** Sgeo__ joined
[16:28] *** p6bannerbot sets mode: +v Sgeo__

[16:31] *** Sgeo_ left
[16:32] *** Sgeo_ joined
[16:33] *** p6bannerbot sets mode: +v Sgeo_

[16:35] *** Sgeo__ left
[16:43] *** melezhik left
[16:49] *** kensanata joined
[16:49] *** p6bannerbot sets mode: +v kensanata

[16:49] *** kensanata left
[16:55] *** vrurg left
[16:57] *** pmurias joined
[16:57] *** p6bannerbot sets mode: +v pmurias

[16:57] *** Manifest0 left
[16:58] *** Manifest0 joined
[16:58] *** pmurias left
[16:58] *** pmurias joined
[16:58] *** p6bannerbot sets mode: +v pmurias

[16:59] *** p6bannerbot sets mode: +v Manifest0

[17:04] *** |oLa| left
[17:10] *** Ven`` left
[17:17] *** damaxi joined
[17:17] *** p6bannerbot sets mode: +v damaxi

[17:18] <Geth> ¦ perl6-examples: e487f8dae3 | (Paul Cochrane)++ | Makefile

[17:18] <Geth> ¦ perl6-examples: Use --test-depends to install test-required deps

[17:18] <Geth> ¦ perl6-examples: 

[17:18] <Geth> ¦ perl6-examples: Thanks to @ugexe for the heads up!

[17:18] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/e487f8dae3

[17:18] *** molaf left
[17:20] <Geth> ¦ doc: 93e28c399a | cfa++ | xt/headings.t

[17:20] <Geth> ¦ doc: Add "NQP" as an exception to the heading capitalisation test.

[17:20] <Geth> ¦ doc: 

[17:20] <Geth> ¦ doc: (Address test failure for subtitle added in [ceedca6d7].)

[17:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/93e28c399a

[17:22] *** damaxi is now known as andrzejku

[17:26] *** lucasb left
[17:29] *** scimon left
[17:32] *** leont left
[17:32] *** pmurias left
[17:34] * [Coke] waves.

[17:37] <[Coke]> m: say $?DISTRIBUTION

[17:37] <camelia> rakudo-moar d836ca4df: OUTPUT: «Nil␤»

[17:37] *** perigrin_ joined
[17:37] *** perigrin_ left
[17:42] *** melezhik joined
[17:42] *** p6bannerbot sets mode: +v melezhik

[17:44] <Geth> ¦ doc: 9a7861ad74 | Coke++ | doc/Language/variables.pod6

[17:44] <Geth> ¦ doc: run test in separate file

[17:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9a7861ad74

[17:44] <synopsebot> Link: https://doc.perl6.org/language/variables

[17:49] *** DrForr joined
[17:49] *** p6bannerbot sets mode: +v DrForr

[17:50] *** domidumont left
[17:51] *** domidumont joined
[17:52] *** p6bannerbot sets mode: +v domidumont

[17:54] *** pmurias_ joined
[17:54] *** p6bannerbot sets mode: +v pmurias_

[17:56] *** Manifest0 left
[17:56] *** Manifest0 joined
[17:57] *** p6bannerbot sets mode: +v Manifest0

[17:59] *** domidumont left
[18:03] *** brrt joined
[18:03] *** p6bannerbot sets mode: +v brrt

[18:06] *** regreg joined
[18:07] *** p6bannerbot sets mode: +v regreg

[18:10] *** leont joined
[18:11] *** p6bannerbot sets mode: +v leont

[18:23] *** sauvin left
[18:26] *** cfa joined
[18:26] *** p6bannerbot sets mode: +v cfa

[18:32] *** Sgeo__ joined
[18:33] *** p6bannerbot sets mode: +v Sgeo__

[18:35] *** zakharyas left
[18:35] *** Sgeo_ left
[18:37] *** natrys joined
[18:38] *** p6bannerbot sets mode: +v natrys

[18:42] *** Sgeo_ joined
[18:42] *** pmurias_ left
[18:43] *** p6bannerbot sets mode: +v Sgeo_

[18:45] *** Sgeo__ left
[18:52] *** pmurias_ joined
[18:52] *** p6bannerbot sets mode: +v pmurias_

[18:53] <masak> I have an open PR in 007 right now renaming `True` and `False` to `true` and `false`

[18:54] <masak> as usual, I don't mean to get anyone up in arms about changing Perl 6 :)

[18:54] <masak> but I'm curious in retrospect how it came to be in Perl 6 (and in Python) that we write those literals with upper-case

[18:54] <masak> because usually upper-case signals a class/role/grammar/type

[18:54] <masak> but these are more like enum values

[18:57] <moritz> they are type-like

[19:01] *** melezhik left
[19:04] *** Manifest0 left
[19:08] <cfa> morning all

[19:35] <masak> moritz: True and False are type-like?

[19:35] <masak> in what sense?

[19:36] * masak asked the same question on #python

[19:39] *** jme` joined
[19:39] *** p6bannerbot sets mode: +v jme`

[19:40] *** zakharyas joined
[19:41] *** p6bannerbot sets mode: +v zakharyas

[19:42] <masak> #python tells me "it's for historical reasons", basically

[19:43] <avuserow> masak, I assume you'll get this link from #python, but here's the Python PEP about True/False: https://www.python.org/dev/peps/pep-0285/

[19:43] <avuserow> tldr from my memory is "they surveyed pypi, then picked what was most popular"

[19:43] <masak> didn't -- thanks!

[19:44] <masak> this is very interesting reading

[19:45] <avuserow> (I may have misremembered that tldr, or gotten that from another document) 

[19:45] <avuserow> other fun fact: you can redefine True and False in Python 2 but not 3

[19:46] <masak> oh! `True` and `False` were based on `None`, which is more understandable because it's a singleton type

[19:46] <masak> funnily enough, the type of `None` is not called `None` but `NoneType`

[19:51] *** brrt left
[19:52] *** evenom joined
[19:53] *** p6bannerbot sets mode: +v evenom

[19:53] *** natrys left
[19:55] <masak> does anyone remember exactly when whitespace stopped being allowed before postfixes in the Perl 6 spec?

[19:55] <masak> I think it must've been sometime during the '00s

[19:57] *** SqrtNegInf joined
[19:57] *** p6bannerbot sets mode: +v SqrtNegInf

[19:59] *** domidumont joined
[20:00] *** p6bannerbot sets mode: +v domidumont

[20:03] <lizmat> masak: True and False are enums of Bool, and enums typically are titlecased?

[20:04] *** ChoHag left
[20:04] *** MasterDuke left
[20:07] *** kiwi_60 joined
[20:07] *** p6bannerbot sets mode: +v kiwi_60

[20:10] <Geth> ¦ perl6-examples: c5b9fc3e46 | (David Warring)++ | .travis.yml

[20:10] <Geth> ¦ perl6-examples: CI Rakudo bump for deps

[20:10] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/c5b9fc3e46

[20:10] <kiwi_60> m: { .say, .put } for (any( 1, 3, 7 ) + 1), any( <h H> ) ~ 'amadryas';

[20:10] <camelia> rakudo-moar 29d7f7095: OUTPUT: «any(2, 4, 8)␤2␤4␤8␤any(hamadryas, Hamadryas)␤hamadryas␤Hamadryas␤»

[20:12] <kiwi_60> m: say $*PERL.compiler

[20:12] <camelia> rakudo-moar 29d7f7095: OUTPUT: «rakudo (2018.12.117.g.29.d.7.f.7095)␤»

[20:14] <masak> lizmat: yes, that seems to be the case (although S12 seems to lower-case sometimes, too...?)

[20:14] *** evenom left
[20:15] <masak> lizmat: but then, _whyyyyy_ are enum values title-cased? is it to highlight their, um, singleton-y nature, even though they aren't really singletons?

[20:16] <masak> I only speak for myself, but it's weird to me that enum values are title-cased. title-case is for things like types. enum values feel to me much more like instances, or lexical variables, or members, all of which are lower-cased.

[20:16] <lizmat> well... yeah... enums are strange

[20:18] <masak> fun fact: enums are a poor echo of disjoint union types, in languages which don't have a type system that can sustain the latter :P

[20:18] <masak> but here I go, being smug again

[20:22] *** domidumont left
[20:23] <El_Che> masak: is 007 the 3rd-system syndrome done right? :P

[20:24] <masak> not aiming to supersede anything, no :)

[20:24] <masak> just trying to create a coherent whole, a fast-iterating experiment, and a working macro environment -- all in one package

[20:25] <masak> but sometimes I do take a bit of a stance "against" Perl 6 -- for example renaming s/grep/filter/ after some consideration

[20:25] <masak> and s/sub/func/

[20:26] <lizmat> masak: why not s/sub/function/ ?

[20:27] <El_Che> unix roots? 

[20:27] <El_Che> lazyness

[20:27] <El_Che> I prefer func myself

[20:28] <lizmat> well, grep -> filter has nothing to do with unix roots afaik, so why sub -> func then

[20:28] <lizmat> if you want to be clearer, sub -> function then makes more sense to me...

[20:28] <lizmat> looking towards the future

[20:29] <El_Che> being coherent is a pita

[20:30] <El_Che> (it's also true for documentation and papers)

[20:30] <masak> lizmat: I definitely considered 'function', but it felt too dehuffmanized for such a common keyword

[20:31] <cfa> fn, fun, func all seem common

[20:31] <masak> lizmat: similarly, I considered 'fun', but it felt too huffmanized and too cute

[20:31] <El_Che> "dehuffmanized" <-- you get points for that

[20:31] <masak> Arc does 'fun' and 'mac', which -- while I respect it on some level -- I feel is a bit too cute

[20:31] <cfa> well, it's arc

[20:32] <cfa> qed

[20:32] <masak> El_Che: I consider JavaScript to be a live experiment towards that conclusion

[20:32] <masak> EcmaScript 6 introduced something on the order of five different ways not to have to write `function` in your code :P

[20:32] <avuserow> if `fun` is too cute, why not make it less cute and call it `defun`? :P

[20:33] <masak> avuserow: I confess to not having considered that one :)

[20:33] <El_Che> masak: make sure things are kind of coherent before it becomes popular :)

[20:33] <masak> avuserow: but `defun` *is* cute, in how it re-uses the 'f' for both 'def' and 'fun'

[20:34] <masak> El_Che: one of the nice things about having ~0 users is I can make changes like that

[20:34] <El_Che> about "sub", to me it feels like a Perl 5 leftover

[20:34] <El_Che> with built-in signatures, but still 

[20:34] <masak> El_Che: which is why I felt a shiver down my spine when I got a person writing actual scripts and modules in 007 o.O

[20:34] <El_Che> masak: that's what happen when you put code out :)

[20:35] <[Coke]> We are a perl, so that seems fine.

[20:35] <masak> El_Che: I'm curious where Perl 5 got it from. I know "subroutine" is an established term, but it feels like a term that has been (at least somewhat) left behind

[20:35] <masak> 007 is a Perl too. discuss. :P

[20:36] <masak> and who can claim that it isn't Perlish to look towards other traditions and drink heavily from them?

[20:36] <[Coke]> masak: hard to argue with

[20:37] <masak> if I could spend the rest of my programming career making it easier for people to create quick-and-dirty languages like 007, I think I'd be pretty happy

[20:37] <masak> interestingly, that feels very much within Perl 6's charter

[20:37] <cfa> well, you could argue that function is a worse term in languages that don't enforce purity

[20:37] <El_Che> [Coke]: sub is for me something that can be a function and a method

[20:37] <cfa> subroutine seems more in line with communiting potential side effects

[20:37] <cfa> er, communicating*

[20:38] <masak> cfa: I think it's a case of "here's how the word is used in actual practice, so there"

[20:38] <cfa> true

[20:38] <masak> (i.e. descriptivism)

[20:38] <cfa> function and subroutine are used pretty interchangeably in most languages

[20:38] <masak> and function is by far the more common term nowadays

[20:39] <El_Che> cfa: not syntax-wise, like masak states you see mostly func(tion) nowadays

[20:39] <masak> "subroutine" feels like something they use in Star Trek when they want to belittle the Doctor hologram and tell him he isn't a real person

[20:39] <El_Che> haha, so true

[20:39] <cfa> ha 

[20:39] <lizmat> .oO( Jim, I'm a program, not a subroutine! )

[20:40] <[Coke]> I have a recollection that perl's sub came from the basic word, but I can't find anything to back that up

[20:40] <masak> which means it's somewhat still in the general vocabulary, but unused *enough* to be stolen for Star Trek technobabble

[20:40] <masak> [Coke]: ooooh that makes a lot of sense

[20:41] <masak> and BASIC (as I recently learned) is mostly gussied-up FORTRAN II

[20:41] <masak> ...and indeed FORTRAN II has `SUBROUTINE`

[20:41] <masak> :D

[20:41] <masak> it also has `FUNCTION`

[20:42] <pmurias_> masak: I thought a tiny bit about the regex explainer, and one idea is that something that shows which prefix of a regex still matches a string could be useful

[20:42] <masak> it'd be a good start, for sure

[20:43] <masak> pmurias_: with rakudo.js it could even be built for the browser :)

[20:44] *** |oLa| joined
[20:45] *** p6bannerbot sets mode: +v |oLa|

[20:45] <pmurias_> masak: even a CLI version would be useful 

[20:45] <masak> aye

[20:46] <[Coke]> regex101.com

[20:47] * [Coke] finds https://github.com/firasdib/Regex101/issues/848

[20:47] <masak> now that I think back on it, QBasic has `SUB` and `FUNCTION` as well

[20:50] *** pmurias_ left
[20:54] *** pmurias joined
[20:54] *** p6bannerbot sets mode: +v pmurias

[20:55] <pmurias> masak: the regex prefix thing would help with in the small regex writing

[20:57] <pmurias> masak: for larger stuff (like fully blown grammars) I think making testing individual subrules more convinient would help a lot

[21:01] <pmurias> masak: optimally once we have a decent way of displaying module docs it would be awesome if those regex unit tests could be used as examples

[21:02] <pmurias> masak: kind of like smart links in the old days

[21:06] *** jme` left
[21:08] <masak> aye

[21:14] *** Voldenet joined
[21:14] *** Voldenet left
[21:14] *** Voldenet joined
[21:14] *** p6bannerbot sets mode: +v Voldenet

[21:14] *** p6bannerbot sets mode: +v Voldenet

[21:15] *** kiwi_60 left
[21:18] <Geth> ¦ doc: 2f9ac56a46 | cfa++ | doc/Type/Signature.pod6

[21:18] <Geth> ¦ doc: Provide an example of combining array and hash slurpies.

[21:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2f9ac56a46

[21:18] <synopsebot> Link: https://doc.perl6.org/type/Signature

[21:20] *** zakharyas left
[21:22] *** MasterDuke joined
[21:22] *** p6bannerbot sets mode: +v MasterDuke

[21:22] *** MasterDuke left
[21:22] *** MasterDuke joined
[21:22] *** herbert.freenode.net sets mode: +v MasterDuke

[21:22] *** p6bannerbot sets mode: +v MasterDuke

[21:25] <pmurias> masak: if Perl 6 ended up with CPAN for grammar parts that would be awesome/useful

[21:26] *** ufobat joined
[21:30] *** pmurias left
[21:32] *** pmurias joined
[21:32] *** p6bannerbot sets mode: +v pmurias

[21:37] *** llfourn joined
[21:37] *** mowcat joined
[21:37] *** p6bannerbot sets mode: +v llfourn

[21:37] *** leont left
[21:38] *** p6bannerbot sets mode: +v mowcat

[21:40] *** |oLa| left
[21:41] *** andrzejku left
[21:43] *** melezhik joined
[21:43] *** p6bannerbot sets mode: +v melezhik

[21:43] *** jme` joined
[21:44] *** p6bannerbot sets mode: +v jme`

[21:44] *** |oLa| joined
[21:45] *** p6bannerbot sets mode: +v |oLa|

[21:45] <buggable> New CPAN upload: BlkMeV-0.2.0.tar.gz by DONPDONP https://cpan.metacpan.org/authors/id/D/DO/DONPDONP/Perl6/BlkMeV-0.2.0.tar.gz

[21:46] *** ChoHag joined
[21:46] *** p6bannerbot sets mode: +v ChoHag

[21:59] * [Coke] tries to do a build on windows for the first time in a year

[22:00] *** ufobat left
[22:04] *** leont joined
[22:05] *** p6bannerbot sets mode: +v leont

[22:06] <[Coke]> ... saw a bunch of warnings in moarvm build and one or two linker warnings on rakudo, but wnet very smoothly.

[22:12] *** molaf joined
[22:13] *** p6bannerbot sets mode: +v molaf

[22:16] *** jme` left
[22:25] <MasterDuke> [Coke]: running a spectest on windows?

[22:29] <[Coke]> no, wanted to be able to test docs there.

[22:29] *** robertle left
[22:29] <cfa> [Coke]: neat

[22:29] <[Coke]> I can fire off a spectest if you like. (ISTR zoffix was keeping a ticket up to date with windows spec results)

[22:35] <gfldex> jnthn++ # for a faster year 2019 :)

[22:38] <MasterDuke> [Coke]: i think he was doing that only periodically, and since he's less active now, might be nice to get some recent data if you can

[22:43] *** jme` joined
[22:43] *** mowcat left
[22:44] *** mowcat joined
[22:44] *** p6bannerbot sets mode: +v jme`

[22:44] *** p6bannerbot sets mode: +v mowcat

[22:54] *** Ven`` joined
[22:54] *** p6bannerbot sets mode: +v Ven``

[22:57] *** rindolf left
[23:03] *** pmurias left
[23:05] *** melezhik left
[23:14] *** |oLa|1 joined
[23:14] *** p6bannerbot sets mode: +v |oLa|1

[23:16] *** |oLa| left
[23:17] *** Sgeo__ joined
[23:18] *** p6bannerbot sets mode: +v Sgeo__

[23:20] *** Sgeo_ left
[23:25] *** jeek joined
[23:26] *** p6bannerbot sets mode: +v jeek

[23:33] *** vrurg joined
[23:34] *** p6bannerbot sets mode: +v vrurg

[23:35] *** Sgeo_ joined
[23:36] *** p6bannerbot sets mode: +v Sgeo_

[23:38] *** Sgeo__ left
