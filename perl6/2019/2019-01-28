[00:07] *** TreyHarris joined
[00:12] <Xliff> hahainternet: OK, thanks!

[00:12] <Xliff> I will start looking, too.

[00:19] *** w_richard_w joined
[00:19] *** Actualeyes joined
[00:28] *** w_richard_w left
[00:34] <ChoHag> Wow this is an interesting discussion which I have no idea how I stumbled upon: https://github.com/perl6/user-experience/issues/33

[00:35] <ChoHag> I know I'm not really much of a part of this community and so my opinion has as much weight, but from an outsider's perspective all I can suggest is: stop taking yourselces so fucking seriously.

[00:36] <ChoHag> I mean every word (but not every typo).

[00:39] <ChoHag> Genuine prima donnas would be ashamed.

[00:51] <El_Che> The famous issue 33

[00:52] <ChoHag> It's famous is it? I'm not surprised.

[00:54] <ChoHag> My "user experience" can be mostly summed up as "fucking hell you guys are so far up your own arses you heads appear where they're supposed to be".

[00:58] <rjbs> ChoHag: That issue is from two months ago and has no discussion on it since.  Now you show up to tell people they're being assholes.  What are you hoping to accomplish here?

[00:59] <ChoHag> Accomplish?

[00:59] <ChoHag> Mostly spend time until I'm tired enough to sleep.

[00:59] <ChoHag> Why? What do you generally intend to accomplish with things?

[01:00] <rjbs> If I showed up in a IRC channel and brought up a topic, it would be for a reason.

[01:01] <ChoHag> But wait. I forgot even though *I just read the damn thing*.

[01:01] <ChoHag> Considering the rants of yours that I've read, it probably would.

[01:02] <ChoHag> Some people always have to have a damn point.

[01:02] <ChoHag> That's C21 all over.

[01:05] <rjbs> Okay.

[01:05] <ChoHag> Really?

[01:05] <ChoHag> "Okay"?

[01:05] <ChoHag> Is that the best you can do?

[01:05] <El_Che> this conversation is going into a weird direction

[01:05] <ChoHag> "Here is a point but it might offend me so fuck it, I'm out".

[01:05] <ChoHag> "That's C21 all over."

[01:06] <rjbs> It seems like you are here to stir shit for your own entertainment, and I am not interested in being part of it.

[01:06] <ChoHag> God damn it people grow some fucking backbone.

[01:06] <ChoHag> rjbs: Aren't you the guy who said he trolls people for shits and giggles?

[01:06] <rjbs> No.  I have no idea who you are thinking of.

[01:06] <ChoHag> Am I conflating you with ribasushi?

[01:07] <ChoHag> If incorrectly I apolagise.

[01:07] <rjbs> That is not out of the question.

[01:07] <ChoHag> With correct spelling.

[01:08] <ChoHag> Anywai I'm not trying to stir shit, it seems like that would be redundant.

[01:08] <ChoHag> I'm trying to figure out what the fuck happened to the only programming language that seemed to be going anywhere.

[01:09] <ChoHag> I left it alone for a while and then this 'infamous' issue 33 shows up.

[01:09] <ChoHag> I mean what the fuck? Seriously?

[01:10] <ChoHag> And who the fuck cares what it's called?

[01:10] <ChoHag> Larry had the right idea there. "Stick 'raku' on it if you want, we have more important things to deal with".

[01:11] <timotimo> there were a couple examples showing having "perl" in the name makes people immediately reject the language

[01:11] <ChoHag> Good. Those people are idiots.

[01:11] <timotimo> and there's plenty people who are very angry at perl6 having Their Languages Name in it

[01:12] <ChoHag> I don't even reject *PHP* and that's ... well PHP.

[01:12] <timotimo> how about we clone you a few billion times and replace all of humanity

[01:12] <ChoHag> hmm. Not so sure about that.

[01:12] <ChoHag> Have you seen "Rimmerworld"?

[01:13] <timotimo> just saying "these people are all dumb for not having the same opinion as me" - which is a bit more extreme than what you're suggesting - is barely helpful for such an emotionally-charged situation

[01:13] <ChoHag> Humans need replacing, sure, but I can't think of any alternative that would actually be *better*.l

[01:13] <b2gills> That issue is just the latest incarnation of battle that has been happening for many years.

[01:13] <timotimo> that's true

[01:14] <ChoHag> What gave you the impression that I think people should have the same opinion as me?

[01:14] <ChoHag> I'd *hate* that.

[01:14] <El_Che> ChoHag: by calling those people idiots

[01:14] <ChoHag> Well?

[01:14] <ChoHag> They are.

[01:14] <timotimo> maybe not "the same opinion as me", more "only opinions i respect" i guess?

[01:14] *** aborazmeh joined
[01:14] *** aborazmeh left
[01:14] *** aborazmeh joined
[01:14] <ChoHag> Humans are idiots. It's built in.

[01:14] <timotimo> that's just a cop-out

[01:15] <ChoHag> Accepting the inadequacy of my own genetics is a cop-out?

[01:15] <timotimo> no

[01:16] <timotimo> "these people are idiots" has a well understood meaning, but then you go ahead and say "all humans are idiots", which just negates what you said in the first place

[01:16] <b2gills> Calling a person an "idiot", is saying they are more idiotic than normal

[01:16] <ChoHag> Both statements are true.

[01:16] <ChoHag> These people, whoever they are, are idiots.

[01:16] <ChoHag> All humans are idiots.

[01:16] <timotimo> what b2g said

[01:17] <ChoHag> Yes. Also true.

[01:18] <El_Che> ChoHag: issue 33 pales compared to calling people iditots because you disagree. 

[01:18] <timotimo> if you're really just looking to pass the time until you can fall asleep, i'd prefer you discuss something with us that doesn't have quite this potency for frustration and anger

[01:18] <ChoHag> I don't call people idiots because I disagree.

[01:18] <ChoHag> Disagreement is the first step towards the suggestion that maybe you *aren't* an idiot.

[01:18] <b2gills>  Then what was the point of this entire discussion?

[01:19] <El_Che> issue 33 is about a disagreement

[01:19] <ChoHag> timotimo: Then don't get frustrated or angry.

[01:19] <timotimo> i'm not the one i'm refering to

[01:20] <ChoHag> If my words can engender such feelings, perhaps you're too susceptible to the opinions of nobodies spouting their uninformed opinions on the internet?

[01:20] <b2gills> Issue 33 lead to one person getting a lot of unnecessary and unwarranted flak, that eventually lead to them leaving entirely.

[01:20] <timotimo> #perl6 is a mystical place where it can usually safely be assumed people are acting and speaking in good faith

[01:21] <ChoHag> Hahahaha.

[01:21] <ChoHag> Have you met people?

[01:21] <ChoHag> "Good faith".

[01:21] <timotimo> i have met people from #perl6

[01:21] <ChoHag> Dear god...

[01:21] <timotimo> you're aware i'm not talking about people in general?

[01:21] <b2gills> Frankly many of us are tired of hearing the countless naming arguments that have happened over the years.

[01:21] <ChoHag> I figure you're probably talking about me, but you're wrong so I deflected.

[01:22] <timotimo> hold on, am i wrong when i claim you can be assumed to be acting in good faith?

[01:22] <ChoHag> Yes. You're wrong.

[01:23] <timotimo> i'm not wrong, because that's not what i said

[01:23] <ChoHag> I'm being truthful

[01:23] <timotimo> in fact, a said almost the opposite

[01:23] <ChoHag> There's a difference.

[01:23] <b2gills> Perhaps you shouldn't say the "people" are idiots, but instead they are "acting" idiotic.

[01:23] <ChoHag> b2gills: But then I'd be stating a falsehood.

[01:24] <b2gills> If you want respect, then you have to give others respect.

[01:24] <timotimo> whether "every person is an idiot" is a universal truth is very much arguing semantics, isn't it?

[01:24] <ChoHag> Respect is earned, not assumed.

[01:24] <El_Che> Respect is lost rather

[01:24] <ChoHag> That too.

[01:25] <b2gills> You haven't been engendering any respect here.

[01:26] <timotimo> i'm getting the impression we're working with non-compatible dictionaries here

[01:27] <ChoHag> b2gills: Respect and $2.50 will get you a cup of coffee.

[01:27] <b2gills> A fast way to lose any respect is to give disrespect. Calling a person an idiot is disrespectful.

[01:27] <ChoHag> (+ inflation)

[01:27] <b2gills> Online communities fail when there isn't enough respect.

[01:28] <El_Che> Furthermore, whatever point you wanted to make about the issue or the community is lost by the delivery. See we"re talking about idiots now

[01:28] <ChoHag> We are indeed.

[01:28] <ChoHag> Yet nobody has looked in a mirror yet.

[01:29] *** markoong left
[01:29] <El_Che> why should we? We have to to tell us what we are ;)

[01:29] <ChoHag> "Why should we?"

[01:29] <ChoHag> Well that says it all I guess.

[01:30] <ChoHag> Introspection? Fuck THAT gas.

[01:30] <El_Che> See

[01:30] <b2gills> You do realize that was supposed to be a joke right?

[01:30] <lucs> ChoHag: What time have you got? Sleepy yet?

[01:31] <ChoHag> lucs: Not even close.

[01:31] <lucs> :(

[01:31] <ChoHag> Sorry. You'll just have to come up with actual arguments containing actual coherence.

[01:31] <ChoHag> It's a drag but there it is.

[01:32] <b2gills> What are you trying to accomplish?

[01:33] <leont> Honestly, this discussion suffers from the same issue as #33, it's not bringing us any further.

[01:34] <ChoHag> b2gills: Stick a wedge in the engine that's been grinding away at destroying my profession for the past 3/4 decades.

[01:34] <ChoHag> Or: Make people grow a fucking pair.

[01:34] <ChoHag> (Or the female equivalent - we're all about sexual equivalence here)

[01:34] <leont> I don't doubt the sincerity of the emotions that that issue, most people here share your frustration

[01:35] <b2gills> It takes a "real man" to call others idiots. (apparently)

[01:35] <ChoHag> No.

[01:35] <ChoHag> It takes a real man to admit that *he is also in the group he's calling idiots*.

[01:35] <leont> But this way of expressing it is not helpful. It's destructive instead of constructive.

[01:35] <ChoHag> I've met vanishingly few programmers who fit that mould.

[01:36] <ChoHag> Issue 33, as it's known, is a *fantastic* example of that lack.

[01:36] <ChoHag> It kind of amuses me that in a group of *programmers*, people who in theory pride themselves on precision, couldn't spot that.

[01:37] <b2gills> If you want others to see that, you are taking the exact wrong way to show them.

[01:37] <b2gills> When you call someone an idiot, they stop listening to you.

[01:37] <ChoHag> That's their loss.

[01:37] <ChoHag> When someone calls me an idiot, I ask what I've done wrong.

[01:38] <b2gills> I thought you wanted to stop the issue that was grinding away at your profession. You can't do anything to stop that if no-one listens to you.

[01:39] <timotimo> i have not yet grasped what exactly about #33 is about being up one's own arse, or what people should grow a backbone for

[01:40] <b2gills> As an example there was one person who would frequently call other people on P5P idiots or similar. No-one listened to him, even if he had good ideas.

[01:41] <ChoHag> b2gills: He sounds like a cunt.

[01:41] <b2gills> You sound a lot like him.

[01:41] <El_Che> lol

[01:41] <ChoHag> People are idiot. All people. Why single anyone out? That's not helpful.

[01:41] <leont> b2gills: Only one?

[01:41] *** kurahaupo left
[01:42] *** kurahaupo joined
[01:42] <b2gills> This was after P5P started cleaning up its act.

[01:43] <b2gills> You singled out the people who responded on #33 as idiots.

[01:43] <ChoHag> No. You did.

[01:43] <ChoHag> You jumped to conclusions that weren't ther.e

[01:44] <b2gills> Note that I didn't say who I was talking about on P5P. I also didn't call him an idiot

[01:44] <ChoHag> (Apparently)

[01:44] <timotimo> was the "idiots" specifically about people rejecting perl6 for having "perl" in the name?

[01:44] <b2gills> I said he was being unproductive by being such a jerk.

[01:44] <ChoHag> The "idiots" wasn't specific at all.

[01:45] <timotimo> the "all people are idiots" was obviously not specific

[01:45] <timotimo> but the "good. those people are idiots."?

[01:45] <ChoHag> Well they're people aren't they?

[01:45] <b2gills> It sounded specific. as in specifically the people who were involved on issue #33

[01:46] <ChoHag> "those people" is definitely a subset of "all people".

[01:46] <timotimo> you said that before you made clear what your interpretation of "idiot" was

[01:46] <ChoHag> I'm sorry.

[01:46] <ChoHag> Next time I'll start my ranting with a glossary.

[01:46] <timotimo> oh, you can put in explanations lazily

[01:47] <timotimo> when it becomes obvious that you're not communicating effectively because your target audience is working with a different dictionary

[01:47] <ChoHag> Well glossaries *do* usually come somewhere near the end...

[01:47] <timotimo> they do, but in mediums that allow random access, usually

[01:47] <ChoHag> You can random access me as much as you like.

[01:48] <ChoHag> It's called "asking questions" or "communication".

[01:48] <ChoHag> I assumed you'd heard of it.

[01:48] <b2gills> Also if they are using a non-standard definition they will generally bring it up at the first invocation.

[01:48] <ChoHag> Forgive me for my lack of insight.

[01:48] <ChoHag> I assumed developers were a bit bright.

[01:49] <timotimo> we're humans, humans use heuristics

[01:49] <ChoHag> You're right.

[01:49] <b2gills> We are bright, but we also are sticklers for precision. You were being imprecise with the definition of the word "idiot".

[01:49] <ChoHag> My basic premise is that humans are idiots. I should have extrapolated.

[01:49] <timotimo> when someone says "fuck you" to me, i wouldn't assume they're humorously referring to the fact that there's cells in me that are built to sexually multiply rather than just splitting. i'd assume they're insulting me

[01:50] <El_Che> ChoHag: I wonder if you're good at parties...

[01:50] <ChoHag> El_Che: Not really.

[01:50] <timotimo> when you say "these people are idiots", i'm assuming that you're saying it to transmit some information

[01:50] <El_Che> <shocked>

[01:50] <El_Che> :)

[01:50] <ChoHag> But - get this - there actually people who like me!

[01:50] <timotimo> i can totally understand that

[01:50] <El_Che> are they idiots?

[01:50] <b2gills> If all humans are idiots, there is no point it calling any group of people idiots. So why did you have to say it?

[01:51] <ChoHag> El_Che: They're human.

[01:52] <El_Che> Are there smarter and dumber idiots in your worldview?

[01:53] <ChoHag> El_Che: That's a good question. My gut feeling says no.

[01:54] *** aborazmeh left
[01:54] <ChoHag> I've met some very stupid smart people and some dumb people who's opinions I'd weigh with careful precision.

[01:55] <ChoHag> And vice versa, of course.

[01:58] <El_Che> stupid is an adjective, not a noun in your worldview

[01:59] <ChoHag> OK?

[01:59] <timotimo> would you mind elaborating for me what you think the people in #33 are doing wrong, with regards to being up their own arse, taking themselves too seriously, and needing to grow a backbone?

[02:01] <ChoHag> Politics.

[02:03] <timotimo> that didn't help me much, i think

[02:03] <ChoHag> No probably not.

[02:05] <ChoHag> Would it help if I said that "computers were invented by people who know things, but now they're run by people who merely know how things work"?

[02:06] <ChoHag> No probably not.

[02:07] <timotimo> you're mourning the lack of philosophers in computer science and technology fields?

[02:07] <ChoHag> That's a nicely succinct (although incomplete) way of putting it.

[02:08] <El_Che> I think we lost leont. He probably went to answer some p5p mails to relax :)

[02:09] <timotimo> hey now, don't call 'em out like that for leaving the discussion :)

[02:09] <ChoHag> I left?

[02:10] <ChoHag> Wow you guys are really *good* at seeing what's not there.

[02:10] <timotimo> no, the other guy

[02:10] <ChoHag> Ah sorry. Lack of comma.

[02:10] <ChoHag> Or assumed comma. One of those.

[02:10] <ChoHag> "I think we lost, leont" != "I think we lost leont"

[02:11] <timotimo> oh, that's how

[02:11] <ChoHag> Isn't it funny how a mere 8 bits can disrupt an entire conversation?

[02:12] <ChoHag> Perhaps that, and the larger lesson it implies, should be taken into account occasionally...

[02:12] <timotimo> that it's easy to misunderstand each other?

[02:13] <ChoHag> Indeed.

[02:13] <ChoHag> We're *good* at it.

[02:13] <timotimo> what's the important distinction between something being easy vs humans being good at something? :P

[02:14] <ChoHag> I'm not so sure there is a distinction.

[02:14] *** sena_kun left
[02:16] <timotimo> maybe miscommunication is even more likely than communication in the general case

[02:17] <ChoHag> (And as an aside, this is rather the point - I started this conversation as an apparent arsehole but, after what amounts to nothing more than a bytes transferred between devices in random parts of the world, the conversation is apparently edging towards civility)

[02:17] *** molaf left
[02:18] <ChoHag> (That's not to say that I've progressed beyond "apparent arsehole" - that's not really up to me anyway)

[02:23] <timotimo> i think we've got more signal in between the noise now

[02:23] <timotimo> though also less transmission in total as i've got rather sidetracked by other stuff

[02:24] <lucs> "There is no such thing as conversation. It is an illusion. There are intersecting monologues, that is all." -- Rebecca West

[02:25] <ChoHag> Well I almost went with "Rebecca" for my daughter's name but now I'm glad I didn't.

[02:25] <ChoHag> She's almost right. Very very almost. But also so very very wrong.

[02:26] <ChoHag> Conversations *do* happen. But rarely.

[02:26] <timotimo> there's the philosophy, finally

[02:27] <ChoHag> Amazing what happens when one doesn't storm off in a huff...

[02:28] <ChoHag> It's almost like the people one doesn't agree with can occasionally, and eventually, say something worth saying.

[02:29] <ChoHag> At least I like to think that's what I've done...

[02:30] <ChoHag> I guess to bring it all back to issue 33, what I saw was people leaving (sometimes dramatically) the discussion because - shock! horror! - there was disagreement.

[02:30] *** molaf joined
[02:30] <ChoHag> Disagreement is the spice of life. Only the English are happy to eat without spice.

[02:31] <ChoHag> And fuck those guys (for the record, I'm English).

[02:31] *** leont left
[02:45] <timotimo> btw what kind of thing are you interested in making/doing with perl6?

[02:54] <ChoHag> I think it's the language that can tell computers what they're supposed to do.

[02:55] <ChoHag> We've made, as a species, many attempts but perl 6 is the closest thing I've seen so far which bridges the gap between the way humans think and the way computers work.

[02:56] <timotimo> i guess that's larry's influence as a linguist that's causing this :)

[02:57] <ChoHag> And y'all are fucking it up in ways I have trouble articulating and it's making me upset, It *should* be great in exactly the way that Trump isn't.

[02:58] <timotimo> you're upset we've seemingly strayed far from the "underpromising and overselling" tradition?

[02:58] <ChoHag> No that's too trite.

[02:58] <timotimo> i'm not sure i grok the meaning of trite here

[02:58] <ChoHag> I'm upset that you (perl 6 "people") glimpsed greatness and nevertheless descended into bikeshedding.

[02:59] <ChoHag> I mean, who the fuck cares what it's called?

[02:59] <ChoHag> Nobody who matters, that's who.

[03:00] <timotimo> we have to rely mostly on word-of-mouth

[03:00] <timotimo> so people who have metaphorical mouths matter, which is most of them

[03:00] <ChoHag> The thing with mouths is, they're quite vocal.

[03:00] <ChoHag> But they rarely have brains behind them.

[03:01] <ChoHag> I mean just look at what I was sayin ~2 hours ago.

[03:01] <timotimo> thing is, it's not the loudness that makes a mouth more valuable

[03:01] <ChoHag> Very loud, very noisy, excited a lot of people, but for what?

[03:02] <ChoHag> But people pay attention to that and not to the people who actually, quitely, forge progress.

[03:02] <timotimo> speaking of, i should be blogging more than just my grant progress ...

[03:02] <Juerd> ChoHag: Why would the people who care about the name, not matter?

[03:03] <Juerd> That's a lot of people who supposedly wouldn't matter

[03:04] <ChoHag> Juerd: Quite.

[03:04] <ChoHag> They don't.

[03:05] <ChoHag> Why do they get airtime?

[03:05] <timotimo> hey Juerd, have you been able to do much with perl6 recently? your last thing i saw was MQTT being slow at building its matchers, right?

[03:06] <timotimo> i wonder who it was that had a multithreaded mandelbrot that output its result on an SDL window

[03:06] <timotimo> that was like 5 years ago, though

[03:14] <timotimo> actually i'll be signing off now, seeya!

[03:30] *** w17t left
[03:54] <Xliff> m: say |('a'..'z') xx *;

[03:54] <camelia> rakudo-moar 67cf829ff: OUTPUT: «(...)␤»

[03:54] <Xliff> m: my @digs = |('a'..'z') xx *; @digs.say

[03:54] <camelia> rakudo-moar 67cf829ff: OUTPUT: «[...]␤»

[03:54] <Xliff> m: my @digs = |('a'..'z') xx *; .say for @digs

[03:55] <camelia> rakudo-moar 67cf829ff: OUTPUT: «(timeout)a␤b␤c␤d␤e␤f␤g␤h␤i␤j␤k␤l␤m␤n␤o␤p␤q␤r␤s␤t␤u␤v␤w␤x␤y␤z␤a␤b␤c␤d␤e␤f␤g␤h␤i␤j␤k␤l␤m␤n␤o␤p␤q␤r␤s␤t␤u␤v␤w␤x␤y␤z␤a␤b␤c␤d␤e␤f␤g␤h␤i…»

[03:58] <Xliff> m: my @digs = |('a'..'z') xx *; @digs.elems.say

[03:58] <camelia> rakudo-moar 67cf829ff: OUTPUT: «Cannot .elems a lazy list␤  in block <unit> at <tmp> line 1␤␤»

[03:58] <Xliff> m: my @digs = ('a'..'z') xx *; @digs.elems.say

[03:58] <camelia> rakudo-moar 67cf829ff: OUTPUT: «Cannot .elems a lazy list␤  in block <unit> at <tmp> line 1␤␤»

[03:58] <Xliff> m: my @digs = |('a'..'z') xx *; @digs.elems.say

[03:58] <camelia> rakudo-moar 67cf829ff: OUTPUT: «Cannot .elems a lazy list␤  in block <unit> at <tmp> line 1␤␤»

[03:58] <Xliff> Huh! Endless loop? * == Inf in this case?

[04:00] <Xliff> m: my @a = 'a' xx *; @a.elems.say

[04:00] <camelia> rakudo-moar 67cf829ff: OUTPUT: «Cannot .elems a lazy list␤  in block <unit> at <tmp> line 1␤␤»

[04:00] <Xliff> m: my @a = 'a' xx *; @a[0]

[04:00] <camelia> rakudo-moar 67cf829ff: ( no output )

[04:00] <Xliff> m: my @a = 'a' xx *; @a[0].say

[04:00] <camelia> rakudo-moar 67cf829ff: OUTPUT: «a␤»

[04:00] <Xliff> m: my @a = 'a' xx *; @a[1].say

[04:00] <camelia> rakudo-moar 67cf829ff: OUTPUT: «a␤»

[04:00] <Xliff> m: my @a = 'a' xx *; @a[1000000].say

[04:00] <camelia> rakudo-moar 67cf829ff: OUTPUT: «a␤»

[04:12] *** Kaypie left
[04:16] *** holyghost joined
[04:25] *** jernster left
[04:28] *** MilkmanDan left
[04:28] *** MilkmanDan joined
[04:48] *** molaf left
[04:52] *** MilkmanDan left
[04:53] *** MilkmanDan joined
[04:56] <Geth> ¦ doc: finanalyst++ created pull request #2595: new test for generated html files

[04:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2595

[05:24] *** jme` joined
[06:01] *** curan joined
[06:15] *** isomorphismes left
[06:23] *** Kaypie joined
[07:05] *** domidumont joined
[07:08] *** gfldex left
[07:09] *** gfldex joined
[07:12] *** domidumont1 joined
[07:15] *** domidumont left
[07:16] *** ravenousmoose joined
[07:18] *** AlexDaniel joined
[07:27] *** satori__ left
[07:36] *** domidumont1 left
[07:51] *** robertle_ joined
[08:10] *** rindolf joined
[08:11] *** dncefan joined
[08:16] *** dncefan left
[08:17] *** dncefan joined
[08:18] *** zakharyas joined
[08:26] *** dncefan left
[08:26] *** dncefan joined
[08:32] *** ravenousmoose_ joined
[08:32] *** ravenousmoose left
[08:42] *** Kaypie left
[09:02] *** dakkar joined
[09:03] *** scimon joined
[09:04] *** kurahaupo_ joined
[09:05] *** kurahaupo left
[09:06] *** zakharyas left
[09:06] *** dncefan left
[09:06] *** zakharyas joined
[09:30] *** kurahaupo_ left
[09:34] *** shlomif joined
[09:36] *** rindolf left
[09:38] *** shlomif is now known as rindolf

[09:44] *** w17t joined
[09:52] *** cpan-p6 joined
[09:52] <cpan-p6> 03cpan-p6 reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[09:53] <cpan-p6> New module released to CPAN! Monitor-Monit (0.0.3) by 03JSTOWE

[09:53] <cpan-p6> New module released to CPAN! FastCGI-NativeCall-PSGI (0.0.4) by 03JSTOWE

[09:53] <cpan-p6> New module released to CPAN! Audio-Sndfile (0.0.13) by 03JSTOWE

[09:53] <cpan-p6> New module released to CPAN! Tinky-JSON (0.0.5) by 03JSTOWE

[09:53] <cpan-p6> New module released to CPAN! WebService-Soundcloud (0.0.7) by 03JSTOWE

[09:53] <cpan-p6> New module released to CPAN! Net-BGP (0.0.9) by 03JMASLAK

[09:53] <cpan-p6> New module released to CPAN! Pg-Notify (0.0.3) by 03JSTOWE

[09:53] <cpan-p6> New module released to CPAN! Net-BGP (0.0.8) by 03JMASLAK

[09:53] <tyil> ok, it seems it doesnt restart on disconnects yet

[09:53] <tyil> so that's something I should look in to

[09:59] <Geth> ¦ doc: 9c2589ee9a | (JJ Merelo)++ | doc/Type/Whatever.pod6

[09:59] <synopsebot> Link: https://doc.perl6.org/type/Whatever

[09:59] <Geth> ¦ doc: Revising and reflowing for #2017

[09:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9c2589ee9a

[10:03] *** abraxxa left
[10:03] *** ravenousmoose_ left
[10:04] *** ravenousmoose_ joined
[10:06] <Geth> ¦ doc: e24031ed4b | (Elizabeth Mattijsen)++ | doc/Language/glossary.pod6

[10:06] <synopsebot> Link: https://doc.perl6.org/language/glossary

[10:06] <Geth> ¦ doc: Update RT lemma

[10:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e24031ed4b

[10:10] *** ravenousmoose_ left
[10:10] *** ravenousmoose_ joined
[10:18] *** leont joined
[10:38] *** Kaypie joined
[10:50] <lizmat> notable6: weekly

[10:50] <notable6> lizmat, 7 notes: https://gist.github.com/ed8cbd0bbdbc651635df49242ebd5b46

[10:51] <AlexDaniel> reportable6: 2019-01-21T00:00:00Z 2019-01-28T00:00:00Z

[10:51] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[10:52] <reportable6> AlexDaniel, https://gist.github.com/7a46ee6e0a04abf1d187843777da1694

[10:55] *** ravenousmoose joined
[10:57] *** ravenousmoose_ left
[11:03] *** markoong joined
[11:25] *** ufobat joined
[11:25] <ufobat> hey guys

[11:27] <ufobat> is anyone of you using the Test module "Testo" written from zoffix? or is anyone able to explain me why "use Test" was replaced by Testo?

[11:32] <ufobat> i would like to remove "Testo" from zoffixs modules because Testo is not "complete" and unmaintained.

[11:32] <ufobat> Any opinions?

[11:32] <ufobat> AlexDaniel ^^

[11:32] <Geth> ¦ doc: 6b084b57aa | (JJ Merelo)++ | 2 files

[11:32] <Geth> ¦ doc: Clarifies Bufs closes #2596

[11:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6b084b57aa

[11:33] <AlexDaniel> ooooooooooh a gsoc project potential right there!

[11:39] <tadzik> nope! Chuck Testo

[11:40] <AlexDaniel> taa-daa https://github.com/perl-gsoc-2019/ideas/issues/9

[11:40] <AlexDaniel> greppable6: Testo

[11:40] <greppable6> AlexDaniel, 99 lines, 16 modules: https://gist.github.com/fe88e9c824b8442b600a5aafa91ac029

[11:40] <AlexDaniel> heh, Testo is a very Blin-like name

[11:41] <AlexDaniel> ufobat: I see only two modules

[11:41] <ufobat> Chuck Testo?

[11:42] <ufobat> AlexDaniel, well thats the 2 modules that bother me right now ;)

[11:43] <AlexDaniel> ufobat: so use Test was replaced by Testo because Test sucks

[11:43] <cpan-p6> New module released to CPAN! UNIX-Privileges (0.1.2) by 03JSTOWE

[11:43] *** nebg joined
[11:44] <AlexDaniel> ufobat: if move tests from Testo to Test, you'll likely introduce problems, because Test sucks

[11:44] <leont> Testing done right would be a good project

[11:44] <AlexDaniel> if you move**

[11:44] <leont> I have started such a module as well, but didn't get around to finishing it

[11:45] <AlexDaniel> ufobat: so… what's wrong with Testo? I mean, is there any reason to switch? Functions seems to be relatively similar and easy enough to understand

[11:45] <leont> What you need is something that is flexible, extensible and testable.

[11:45] <AlexDaniel> leont: can you mentor that GSoC project, please?

[11:45] <ufobat> AlexDaniel, it doesnt have skip tests

[11:45] <AlexDaniel> hmm

[11:45] <leont> I could. If I don't end up doing it myself before summer.

[11:46] <leont> But even if I do, writing an ecosystem around it would be a fine project

[11:46] <ufobat> AlexDaniel, and i am not sure but, do you know why zoffix had disabled the tests for Temp::Path?

[11:46] <AlexDaniel> leont: what do you mean by writing an ecosystem around it?

[11:46] *** mikejw joined
[11:46] <leont> Much like p5 Test::Builder has an ecosystem

[11:46] <ufobat> is it because Testo didn'# work 

[11:47] <ufobat> because Temp::Path doesn't have CI and I am unhappy with that

[11:47] <mikejw> whether I install rakudo star using the windows installer or using choclatey, git bash can't seem to find the perl6 binary

[11:47] <ufobat> # == ? (it was a question)

[11:47] <AlexDaniel> ufobat: https://github.com/perl6-community-modules/perl6-Temp-Path/commit/b42ee4714740d493b7a513c66897c7e5642bda96

[11:47] <AlexDaniel> ufobat: I'm not sure… try reenabling them maybe?

[11:48] <ufobat> yeah i saw that commit

[11:48] <AlexDaniel> leont: I'm not familiar with Test::Builder…

[11:48] <AlexDaniel> leont: can you leave a comment on the issue saying that you can mentor it? https://github.com/perl-gsoc-2019/ideas/issues/9

[11:49] <ufobat> maybe leont you could write a PR to Testo to explain the benefits in the README.md?

[11:49] <ufobat> and i wont drop it

[11:49] <ufobat> but unless Testo has a maintainer i am having concerns using it

[11:50] <AlexDaniel> ufobat: actually the benefits are written in SYNOPSIS

[11:50] <AlexDaniel> no `is` pitfall when comparing lists, no hard-to-remember routines like `like`

[11:51] <leont> AlexDaniel: Essentially it's a small core, but with lots of extensions, and a facility to test those extensions.

[11:52] <ufobat> it's a Test  Framework with Do-what-I-mean & disabling you the ability to be strict in tests anymore?

[11:52] <leont> That way you don't need one test framework that has to get everything right. Sometimes there isn't one way, other times the idea of what's right changes over time.

[11:53] <leont> It allows for much more growth.

[11:53] <leont> Having such a framework would also mean that writing a Testo on top would be trivial.

[11:54] <mikejw> has anyone had this issue?

[11:54] <ufobat> mikejw, have you added the path to the System Configuration / Global Path thingy?

[11:55] <ufobat> leont, how does it allow more growth?

[11:56] <ufobat> from perl5 i know there are modules that extend the syntax, with adding more keywords/subs

[11:56] <ufobat> but Testo is reimplementing them

[11:57] <leont> I wasn't talking about Testo, but about writing a Test::Builder

[11:57] <ufobat> ah!

[11:57] <leont> Two entangled conversations, because IRC

[11:58] <ufobat> well thenn AlexDaniel i dont see a benefit in what SYNOPSIS describes, a dwim on tests means that if you accidently change your interface from List to Seq and your test dont notice it, but your application might blow up

[11:58] <ufobat> leont, sorry :-)

[11:59] <AlexDaniel> ufobat: yes, you're absolutely right, which is why we have Testo…

[11:59] <AlexDaniel> ufobat: if you look closely it's exactly what it solves, when compared to Test

[11:59] * leont doesn't really see the point of Testo by itself either. It's slightly different functions, but ultimately still has the limitations as Test.pm

[12:00] <ufobat> AlexDaniel, huh?

[12:00] <AlexDaniel> leont: the point was to experiment with Testo and then replace Test with Testo

[12:00] <ufobat> with testo this passes: is (1, 2, (3, 4)), [1, 2, [3, 4]]; # test passes

[12:01] <ufobat> but in fact youre comparing list and array, i woud never like to pass it

[12:01] <leont> Both semantics are useful

[12:01] <AlexDaniel> ufobat: compare that to Test which compares strings in this case

[12:02] <jnthn> AlexDaniel: Only if you use `is` rather than `is-deeply`, though...

[12:02] <AlexDaniel> jnthn: that's correct, and in Testo that's `is-eqv`

[12:03] <jnthn> AlexDaniel: I think "`Test` sucks" is a bit over-simplistic; sure, you need to know what to use when, but if one has spent years doing that, it's quite serviceable. Can we give people better defaults? Surely, yes.

[12:04] <jnthn> is-eqv is nicely shorter than `is-deeply` :)

[12:04] <AlexDaniel> also more obvious, because is-deeply is using eqv, I think

[12:04] <jnthn> Yeah

[12:04] <jnthn> +1 to such a GSoC anyway. I'm just grumpy about blanket "X sucks" claims. :)

[12:04] <jnthn> *GSoC project

[12:05] <ufobat> i dont understand when Test is uses === and when eq

[12:05] <jnthn> And also, what leont++ says: something that makes writing additional test modules easier is a good thing.

[12:05] <ufobat> "unless $expected is a type object"  means an *:U

[12:05] * AlexDaniel likes high level terms

[12:05] *** mikejw left
[12:07] <AlexDaniel> ufobat: it's always using ~~, no?

[12:08] <AlexDaniel> https://github.com/perl6-community-modules/perl6-Testo/blob/f27f37267baed7e3c0d58f74743ada5e392d5370/lib/Testo/Test.pm6#L45

[12:08] <ufobat> no i meant test's is

[12:09] <ufobat> well i try to write a PR to add skip-tests into Testo, in oder to fix the tests for Subsets::IO

[12:09] *** mikejw joined
[12:09] <ufobat> but my concerns are still there. if testo doesn't have someone that maintains it, I would rather skip using it

[12:11] <mikejw> I added rakudo bin paths to the system global "path" variable but that hasn't helped

[12:17] *** ravenousmoose left
[12:18] *** ravenousmoose joined
[12:19] *** ravenousmoose_ joined
[12:20] *** zakharyas left
[12:23] <mikejw> seems like I might have better luck with ConEmu

[12:28] <ufobat> mikejw, did you reboot?

[12:29] <ufobat> i have perl6 working on my gitshell

[12:30] <mikejw> ufobat: I rebooted, yeah

[12:30] <mikejw> :S

[12:30] <ufobat> echo $PATH on the git shell?

[12:31] <mikejw> "/c/Users/msn/bin:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/mingw64/bin:/usr/bin:/c/Users/msn/bin:/c/WINDOWS/system32:/c/WINDOWS:/c/WINDOWS/System32/Wbem:/c/WINDOWS/System32/WindowsPowerShell/v1.0:/c/WINDOWS/System32/OpenSSH:/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:" ...

[12:31] <mikejw> "/c/HashiCorp/Vagrant/bin:/cmd:/mingw64/bin:/usr/bin:/c/ProgramData/chocolatey/bin:/c/rakudo/bin:/c/rakudo/share/site/bin:/c/Users/msn/AppData/Local/Microsoft/WindowsApps:/c/rakudo/bin:/c/rakudo/share/perl6/site/bin:/usr/bin/vendor_perl:/usr/bin/core_perl"

[12:32] <ufobat> $ echo $PATH | perl -nE 'say for split /:/' | grep rakudo

[12:32] <mikejw> "/c/rakudo/bin /c/rakudo/share/site/bin /c/rakudo/bin /c/rakudo/share/perl6/site/bin"

[12:33] <ufobat>  /c/rakudo/bin

[12:33] <ufobat>  /c/rakudo/share/perl6/bin

[12:33] <ufobat>  /c/rakudo/share/perl6/site/bin

[12:33] <ufobat> awesome

[12:33] <ufobat> :(

[12:34] *** Kaypie left
[12:40] *** rfold joined
[12:40] *** ravenousmoose_ left
[12:41] <rfold> MasterDuke: there's plenty of built-in stuff, and NativeCall. That's sufficient for my application.

[12:41] <ufobat> mikejw, when youre in c/rakudo/bin

[12:41] <ufobat> do you have a perl6 file (without file extension) ?

[12:42] <rfold> p6: sub circumfix:<⌈ ⌉>($x) { ceiling($x) }; say ⌈0.2⌉;

[12:42] <camelia> rakudo-moar 7133b81e4: OUTPUT: «1␤»

[12:42] <ufobat> i think that the git shell doesn't execute *.bat when you just type * (but i would execute *.exe if you just type *)

[12:42] <ufobat> ah no no no, i just set an alias: alias perl6='perl6.bat'

[12:43] <mikejw> ufobat: no there isn't a file called "perl6" in that location

[12:43] <mikejw> but there is perl6.bat

[12:43] <ufobat> i have a perl6 file, that i created myself. i had the same troubles like you had

[12:43] <ufobat> but i think i did fix it with the alias, my perl6 file, with no extension was my first try that didnt work

[12:44] <ufobat> just add alias perl6='perl6.bat' to your ~/.bashrc

[12:46] <mikejw> perl6.bat just hangs :/

[12:46] <mikejw> (within git bash)

[12:47] <ufobat> the repl?

[12:47] <mikejw> yeah

[12:47] <ufobat> that happens to me as well

[12:47] <ufobat> i just dont do it ;-p i just use perl6 -e

[12:48] <mikejw> ok :)

[12:49] <ufobat> I'll switch back go linux on the 1st of march :-)

[12:56] *** pmurias joined
[13:05] *** molaf joined
[13:18] *** cosimo left
[13:32] *** mowcat joined
[13:35] *** Sgeo left
[13:35] *** Sgeo joined
[13:40] *** w17t left
[13:41] *** satori__ joined
[13:47] *** pmurias left
[13:50] *** lucasb joined
[13:51] *** sena_kun joined
[13:56] <tobs> I'm hitting the problem quite often recently when I reduce a Seq with a custom infix, e.g. `[§] $seq`, that it won't work with if $seq is empty or has only one element. I understand that it doesn't make sense in general to do that if § is an infix, but can I tell the [§] construct how to make sense of it in my particular case somehow?

[13:57] <jnthn> tobs: I think you write arity 0 and arity 1 multis for your operator

[13:57] <tobs> m: say [+] (,)

[13:57] <camelia> rakudo-moar 7133b81e4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix , instead.␤at <tmp>:1␤------> 3say [+] (,7⏏5)␤»

[13:57] <tobs> m: say [+] ()

[13:57] <camelia> rakudo-moar 7133b81e4: OUTPUT: «0␤»

[13:57] <tobs> jnthn: oh, clever. Let me try.

[13:57] <tobs> But + somehow knows its identity element, too.

[13:57] <tobs> m: say [+] 1

[13:57] <camelia> rakudo-moar 7133b81e4: OUTPUT: «1␤»

[13:57] <jnthn> m: say infix:<+>()

[13:57] <camelia> rakudo-moar 7133b81e4: OUTPUT: «0␤»

[13:57] <jnthn> m: say infix:<+>(1)

[13:57] <camelia> rakudo-moar 7133b81e4: OUTPUT: «1␤»

[13:58] <jnthn> m: say infix:<+>(5)

[13:58] <camelia> rakudo-moar 7133b81e4: OUTPUT: «5␤»

[13:58] <tobs> got it, thanks. That's even less intrusive than I had hoped for :)

[13:59] <tobs> and once again totally logical

[14:01] *** Sgeo left
[14:01] *** Sgeo joined
[14:02] *** zakharyas joined
[14:05] *** nebg left
[14:14] <moritz> m: say infix:<*>()

[14:14] <yoleaux> 27 Jan 2019 18:59Z <MasterDuke> moritz: nice, i use perl6-all-modules a lot and that helps

[14:14] <camelia> rakudo-moar 7133b81e4: OUTPUT: «1␤»

[14:14] <moritz> m: say infix:<~>()

[14:14] <camelia> rakudo-moar 7133b81e4: OUTPUT: «␤»

[14:14] <moritz> m: say infix:<~>().perl

[14:14] <camelia> rakudo-moar 7133b81e4: OUTPUT: «""␤»

[14:22] *** Guest92871 joined
[14:30] *** Kaypie joined
[14:32] *** mikejw_ joined
[14:32] *** mikejw_ left
[14:33] <mikejw> does anyone know if I should expect issues with the Terminal::Table modules (again on windows)

[14:33] <mikejw> ?

[14:38] <timotimo> maybe it uses ansi escape codes?

[14:52] *** MasterDuke left
[14:57] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/01/28/2019-04-summer-of-code/

[15:10] *** Guest92871 left
[15:11] <hahainternet> the $_ commentary is very interesting

[15:11] <hahainternet> i wonder how that could have been detectable ahead of time

[15:12] <El_Che> it's always a trade of, so yes and no

[15:14] <moritz> lizmat: tweeted

[15:15] <El_Che> lizmat: great job. 

[15:15] <El_Che> moritz: idem for the @perl6org account

[15:16] <timotimo> "idem"?

[15:16] <El_Che> same in latin

[15:16] <lizmat> afk&

[15:18] *** curan left
[15:21] *** Manifest0 left
[15:35] <ufobat> AlexDaniel, could we pls have a cute picture for the perl community modules github group? :D

[15:38] <AlexDaniel> ufobat: yes, done, but it says that it will take a while before it goes live

[15:38] <AlexDaniel> ufobat: also if there's a different picture that you'd prefer, I can do that too :)

[15:41] <AlexDaniel> actually…

[15:42] * AlexDaniel also updates the image on perl6 org

[15:42] <AlexDaniel> the old one didn't have transparent background

[15:42] <AlexDaniel> MUCH better :)

[15:45] <AlexDaniel> jnthn: extremely critical issue! Rakudo logo on https://github.com/rakudo has white (not transparent) background. You can use this version instead: https://github.com/perl6/marketing/blob/master/LOGOs/Rakudo--1533514119/rakudo-box-3000.png

[15:45] <AlexDaniel> if you're at it, change the link too :) https://rakudo.org/ (with https)

[15:47] <moritz> URL changed

[15:48] <moritz>  Your profile picture has been updated. It may take a few moments to update across the site. 

[15:48] <moritz> turns out somebody has made me rakudo admin as well :)

[15:51] <AlexDaniel> moritz: maybe it's better to crop the name on the bottom?

[15:52] <ufobat> AlexDaniel, i think i can't, or at least i didnt find it. i am just member. but i am happy with camelia :D

[15:53] <jnthn> moritz++ for beating me to that :)

[15:53] <rfold> p6: qw{abc}.perl.say

[15:53] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «"abc"␤»

[15:53] <rfold> I was surprised that qw{abc} didn't evaluate to a singleton list

[15:55] <AlexDaniel> ufobat: yes, but you can order me to change it :)

[15:56] <rfold> I suppose every abstraction has to treat non-lists as singleton lists

[15:56] <timotimo> rfold: it's at least consistent with %foo<abc>

[15:56] <rfold> Except some, apparently

[15:58] <AlexDaniel> ufobat: we can also give it a description, like “Module Adoption Center” :)

[15:58] <ufobat> sounds nice :-)

[16:03] <AlexDaniel> ufobat: I'm actually not 100% sure about the goal of that repo

[16:03] <AlexDaniel> “community modules” sounds like the community is supposed to maintain these module

[16:03] <ufobat> repo or group?

[16:03] <AlexDaniel> org, yeah

[16:03] <mikejw> ok I'm not sure if this is related to the issues I'm having but I've just noticed that this doens't work in git bash: $ perl6 -e "shell 'clear'";

[16:04] <ufobat> somthing with orphaned, but that sounds pretty negative

[16:04] <moritz> mikejw: please be more specific than "doesn't work"

[16:04] <AlexDaniel> but that's just not going to work… I think it's best when the module is maintained and cared about by dedicated person/group, not “community”

[16:04] <mikejw> "Use of uninitialized value of type Any in string context. Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.   in block <unit> at -e line 1 The spawned command 'clear' exited unsuccessfully (exit code: 1)   in block <unit> at -e line 1"

[16:05] <moritz> mikejw: so, "clear" itself didn't work, whatever that means

[16:05] <ufobat> question is whether we want to maintain it or whether we want to find someone to take over. 

[16:05] <AlexDaniel> fwiw that snippet works fine here

[16:05] <ufobat> I might want to add that I could take some modules but, i am afraid to, and I like to get the feedback of other ppl, sometimes

[16:06] <AlexDaniel> well, it's open-source, we can always take it back by forking :D

[16:06] <AlexDaniel> so just let me know what exactly you want to maintain and I'll transfer

[16:07] * ufobat better stays silent now :)

[16:07] <ufobat> I can do temp::path, but for example there is the issue i've opend where i want someone to say something smart :)

[16:08] <ufobat> mikejw, not sure about shell, but run for example works differently on windows then on linux

[16:08] <ufobat> it's not well documented but there are a few issues sprinkled over various repositories

[16:08] <ufobat> mikejw, https://github.com/tadzik/Shell-Command/pull/22 <- have a look

[16:09] <ufobat> stolen from ugexe++

[16:09] <AlexDaniel> ufobat: what about deleting on END only, not on DESTROY?

[16:10] <mikejw> ufobat: interesting

[16:10] <ufobat> when you die there is not END, no?

[16:11] *** robertle_ left
[16:11] <AlexDaniel> m: END { say ‘hello’ }; die ‘boo’

[16:11] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «boo␤  in block <unit> at <tmp> line 1␤␤hello␤»

[16:11] <AlexDaniel> m: END { say ‘hello’ }; exit

[16:11] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «hello␤»

[16:11] <AlexDaniel> what…

[16:11] <AlexDaniel> how did that work

[16:13] <AlexDaniel> ufobat: so, I think there's no good reason to delete directories as early as possible

[16:13] <AlexDaniel> ufobat: who knows what the user did with the path object

[16:14] <AlexDaniel> deleting too late is better than deleting too early when you're still using it…

[16:14] <AlexDaniel> if someone needs to free some space ASAP they can always delete it manually, which is even better than waiting for a GC

[16:17] <ufobat> AlexDaniel, I agree. Thats a big design change, Is there a Phaser that runs on die as well?

[16:18] <AlexDaniel> ufobat: can you show an example when END doesn't run?

[16:20] *** ravenousmoose left
[16:23] <ufobat> I will have a look, i need to admit that i just thought so, because zoffix warned that you files wont get deleted when you program fails

[16:26] *** pmurias joined
[16:27] <pmurias> Was the gsoc advertised on the #perl irc channel?

[16:28] <ufobat> *shrug*

[16:30] * pmurias is traveling but I'll write down my project ideas when I get back home

[16:31] <timotimo> got a tiny preview for us? :D

[16:32] <pmurias> Code splitting for the Js backend

[16:33] <pmurias> So we don't bundle the whole setting and compiler

[16:33] <timotimo> sounds useful

[16:35] *** rfold left
[16:35] <mikejw> ok wow.. it seems my problems (with windows) have been solved by switching from '$input = prompt "command > "' to '$input = prompt "command > "'

[16:35] <mikejw> I mean...

[16:36] <mikejw> $input = $*IN.get vs $input = prompt "command > "

[16:36] <pmurias> The other project would to push the truffle backend further along

[16:39] *** ExtraCrispy joined
[16:39] *** patrickb joined
[16:39] <patrickb> pmurias: AFAIK it wasn't

[16:39] <ufobat> mikejw, on which shell?

[16:40] <ufobat> what is prompt? havent' seen it before

[16:40] *** jme` left
[16:40] <timotimo> it's print + get

[16:40] <ufobat> ah cool

[16:41] <patrickb> I tried to reach out to some people that know a bit about the p5 community but had no luck so far... Some advertisement would be a really good idea as we have only ~1 week left and up to now there were 0 responses from the p5ers...

[16:42] <mikejw> ufobat: both ConEmu and git bash

[16:42] <pmurias> Patrickb: try the channel

[16:44] <El_Che> mst: ^-- see patrickb's message

[16:44] <pmurias> And maybe also on irc.perl.org

[16:45] * pmurias is irc chatting on mobile web irc while trying to not miss the bus 

[16:45] <patrickb> pmurias: Will do!

[16:45] *** ExtraCrispy left
[16:47] *** pmurias left
[16:48] *** pmurias joined
[16:50] <pmurias> timotimo: the other idea would be to move the truffle backend further along

[16:51] <timotimo> yup, that message arrived successfully already

[16:52] <pmurias>  /Me got confused why it didn't show up in the irc log ;/

[16:53] <timotimo> oh? weird

[16:53] *** melezhik joined
[16:55] <patrickb> pmurias: It is ok to submit more than one idea you'd be willing to mentor for and see which one attracts a student. If I understand the system correctly, we (as in the perl gsoc organization) can decide afterwards which one we actually want to take.

[16:55] <melezhik> Hi! I have version numbers in format a.b.c, they packed internally into "$maijor.$minor$patch" for example "0.1.1" turns into "0.001001", so comparison with Vesion.new gives me what I don't expect

[16:55] <melezhik> m: say Version.new("0.1.1") > Version.new("0.001001")

[16:55] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «False␤»

[16:56] <melezhik> m: say Version.new("0.1.1") == Version.new("0.001001")

[16:56] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «False␤»

[16:56] *** patrickb left
[16:56] <pmurias> patrickb: In the past the ideas where just suggestions and the students where actually submitting proposal for what they found interesting 

[16:57] <pmurias> Even original ones

[16:57] <melezhik> so I need to convert "$major.$minor$patch" format into "canonical" one - "$major.$minor$patch" - what is the easiest way to do that?

[16:58] <melezhik> I am guessing if there if the way to do that through Version class?

[16:58] <melezhik> sorry, typo , the "canonical" formal is "$major.$minor.$patch"

[16:59] <sena_kun> m: (v1.3c).parts().join('.')

[16:59] <camelia> rakudo-moar 3d581c8d2: ( no output )

[16:59] <sena_kun> m: (v1.3c).parts().join('.').say

[16:59] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «1.3.c␤»

[16:59] <sena_kun> melezhik, can this help ^ ?

[17:01] <melezhik> sena_kun: not sure, I need to convert for example String "0.001001" into version 0.1.0

[17:02] <melezhik> I can use regexp/split for that, just looking probably for nicer way ((=:

[17:02] <sena_kun> hmm, then likely not

[17:02] <sena_kun> m: (v0.001001).parts.say

[17:02] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «(0 1001)␤»

[17:03] *** w17t joined
[17:03] <sena_kun> I think you want a custom code that will transform parts into a form you want then.

[17:04] *** patrickb joined
[17:10] *** pmurias left
[17:19] *** kurahaupo joined
[17:21] <tobs> m: say "0.001001".split('.').map(-> $major, $decimal { Version.new: join '.', $major, |$decimal.comb(3) })

[17:21] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «(v0.001.001)␤»

[17:21] <tobs> m: say "0.001001".split('.').map(-> $major, $decimal { Version.new: join '.', $major, |$decimal.comb(3)».Int })

[17:21] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «(v0.1.1)␤»

[17:22] <tobs> well, not too pretty either

[17:26] *** scimon left
[17:33] *** domidumont joined
[17:33] *** zakharyas left
[17:41] *** mikejw left
[17:42] *** w17t left
[17:44] <melezhik> tobs: works for me! I like it ... better than regexp parsing 

[17:52] *** satori__ left
[17:54] *** dakkar left
[17:56] *** sivoais left
[17:57] *** andrzejku joined
[18:00] <andrzejku> shit I checked my Linux distro

[18:00] <andrzejku> and have no default rakudo : (

[18:00] <andrzejku> anymore

[18:02] <sjn> oh noes!

[18:02] <sjn> andrzejku: have you had a look at http://blogs.perl.org/users/shoichi_kaji1/2019/01/p6env.html? :)

[18:02] *** melezhik left
[18:03] *** sauvin left
[18:04] <El_Che> andrzejku: which one?

[18:05] <andrzejku> eemm

[18:05] <andrzejku> I prefer

[18:05] <andrzejku> rakudo native package

[18:05] <andrzejku> Solus

[18:05] <El_Che> andrzejku: is it based on something?

[18:06] <El_Che> it doesn't look likes it on wikipedia

[18:07] <andrzejku> El_Che, no that's independent

[18:07] <andrzejku> but really nice

[18:08] <tadzik> ah, that's the one with gaming stuff in it

[18:08] <andrzejku> I have a big problems with Linuxes as I installed it on iMac

[18:08] <andrzejku> but Bundie looks really nice

[18:08] <andrzejku> with Retina

[18:08] <andrzejku> :D

[18:08] <andrzejku> Budgie

[18:09] <El_Che> andrzejku: do you write ryby? If you add support for their pkg format on fpm (https://github.com/jordansissel/fpm) I can add it rakudo-pkg for binaries

[18:09] <andrzejku> El_Che, amm no

[18:09] <andrzejku> El_Che, I am old school C programmer

[18:12] <El_Che> andrzejku: mmm, it does not make sense to invest time in eopkg because it will be replaced with "sol" (https://github.com/solus-project/sol)

[18:12] <El_Che> it seems

[18:12] <El_Che> however, that repo looks dead

[18:13] <andrzejku> are you Solus user too?

[18:13] <El_Che> no, I was looking at their docs to see if I would quickly add it to rakudo-pkg

[18:14] *** random_yanek left
[18:14] <El_Che> andrzejku: I use Ubuntu, mostly

[18:16] <andrzejku> actually eopkg is really nice and tiny

[18:17] <El_Che> yeah, but if it uses fpm it almost no work. Or if I know the pkging format (which I don't). 

[18:23] *** lucasb left
[18:27] *** satori__ joined
[18:42] <ufobat> m: my $x = *.not; $x.perl.say

[18:42] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «{ ... }␤»

[18:42] <ufobat> is that the expected and correct output?

[18:43] <ufobat> because i've got a test failure with Subsets::IO on windows, comparing a smartmatch (that returns False) with *.not

[18:45] <sena_kun> it outputs `{ ... }` as it is a WhateverCode object, I think. like...

[18:45] <sena_kun> m: my $x = *.not; $x.perl.say; say $x(5); say $x(False);

[18:45] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «{ ... }␤False␤True␤»

[18:46] <sena_kun> m: my $x = *.not; say True ~~ $x; say False ~~ $x;

[18:46] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «False␤True␤»

[18:46] <ufobat> m: my $test = 1 ~~ 2; my $expect = *.not; if $test ~~ $expect { say "got $test but expected { $expect.perl }"}

[18:46] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «got False but expected { ... }␤»

[18:46] <ufobat> and this error message sucks

[18:47] <sena_kun> ah

[18:47] <ufobat> its fine if the test succeeds, but if not then.. it confuses people

[18:47] <sena_kun> I am not sure you can expand it to see the code.

[18:48] <sena_kun> you can replace it with `$expect($test)`, no?

[18:48] <sena_kun> m: my $test = 1 ~~ 2; my $expect = *.not; if $test ~~ $expect { say "got $test but expected { $expect($test) }"}

[18:48] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «got False but expected True␤»

[18:48] <sena_kun> like this

[18:49] <sena_kun> if you want something like `expected (1 ~~ 2).not`, then I don't think it's easy.

[18:50] <ufobat> sena_kun, no. WhateverCode is just on possible expectation it could be a string or integer or something 

[18:50] <sena_kun> well, then you likely have to special-case it.

[18:50] <ufobat> if i could ask if $expect is a whatevercode, then i can if/else around that

[18:50] <ufobat> can i?

[18:51] <sena_kun> why not?

[18:51] <ufobat> m: $x = *.not; $x.WHAT.say

[18:51] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$x' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5$x = *.not; $x.WHAT.say␤»

[18:51] <ufobat> m: my $x = *.not; $x.WHAT.say

[18:51] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «(WhateverCode)␤»

[18:51] <ufobat> m: my $x = *.not; say $x ~~ WhateverCode

[18:51] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «True␤»

[18:51] <sena_kun> m: my $x = *.not; $x ~~ WhateverCode ?? 1.say !! 2.say;

[18:51] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «1␤»

[18:51] <ufobat> ja

[18:51] <sena_kun> m: my $x = *.not; $x !~~ WhateverCode ?? 1.say !! 2.say;

[18:51] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «2␤»

[18:51] <ufobat> that helped me a lot! thanks :)

[18:52] <sena_kun> yw

[18:52] *** pecastro joined
[18:53] *** andrzejku left
[18:58] *** zachk joined
[19:01] *** ravenousmoose joined
[19:03] *** ravenousmoose_ joined
[19:04] *** andrzejku joined
[19:07] *** MilkmanDan left
[19:08] *** zachk left
[19:08] *** zachk joined
[19:23] *** ravenousmoose_ left
[19:25] *** MilkmanDan joined
[19:28] <timotimo> ufobat: you can use a "none" junction

[19:32] <bartolin> m: use nqp; class Foo { has Int $!n }; class Bar { has Int $!n }; my $foo = nqp::create(Foo); nqp::bindattr(nqp::decont($foo),Bar,'$!n',42); say nqp::getattr(nqp::decont($foo),Foo,'$!n')

[19:32] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «42␤»

[19:33] <bartolin> ^^ is this supposed to work (using nqp::bindattr with type Bar, even if $foo is of type Foo (only))?

[19:33] <bartolin> j: use nqp; class Foo { has Int $!n }; class Bar { has Int $!n }; my $foo = nqp::create(Foo); nqp::bindattr(nqp::decont($foo),Bar,'$!n',42); say nqp::getattr(nqp::decont($foo),Foo,'$!n')

[19:33] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «java.lang.RuntimeException: No such attribute '$!n' for this object␤  in block <unit> at <tmp> line 1␤␤»

[19:33] <timotimo> yeah, i imagine that's supposed to explode

[19:38] <bartolin> Interesting. If I'm not mistaken it works, because try_get_slot (from P6opaque.c) doesn't look at the type of the object at all.

[19:39] <timotimo> quite possible

[19:41] <masak> the `none` junction is my least favorite junction :)

[19:42] <timotimo> oh?

[19:46] *** domidumont left
[19:48] *** satori__ is now known as reach_satori

[19:51] <bartolin> timotimo: to me it looks like we do something similiar in Rat.pm6 (but I might very well be wrong).

[19:51] <bartolin> r: use nqp; my $a = FatRat.new(42,5); dd nqp::getattr(nqp::decont($a),Rat,'$!numerator')

[19:52] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «java.lang.RuntimeException: No such attribute '$!numerator' for this object␤  in block <unit> at <tmp> line 1␤␤»

[19:52] <camelia> ..rakudo-moar 3d581c8d2: OUTPUT: «42␤»

[19:52] <bartolin> e.g. in infix:<==> https://github.com/rakudo/rakudo/blob/master/src/core/Rat.pm6#L265

[20:03] <timotimo> isn't FatRat derived from Rat? or is the $!numerator from Rational?

[20:05] <bartolin> ah, you're right. $!numerator is from Rational. So the usage in Rat.pm6 should be okay since both Rat and FatRat do Rational.

[20:05] *** ravenousmoose left
[20:07] <masak> timotimo: not by a lot, but... I tend to avoid things with negations in them from the start. I'm also averse to things like `unless` and `until`, except in narrow cases like `next unless ...;`

[20:08] *** mowcat left
[20:08] <tobs> masak: for me that was one of the greatest things when I learned perl. In fact, I've started using "unless" in conversational English only then :)

[20:08] <masak> timotimo: I think among all the hundreds of times I've reached for a junction, the distribution is something like 50% any, 45% all, 5% one, <1% none

[20:09] <masak> tobs: I know quite a lot of people who like it, yes :)

[20:10] <masak> tobs: I might be mistaken, but I think PBP recommends `if` in favor of `unless`. if so, that might be where I picked it up and then it solidified into Something I Do

[20:10] <tobs> I still remember how confusing the unfamiliar negation was in the beginning. It seems weird now to have found it weird

[20:12] <tobs> hmm, I should take a look again, not only because of "unless". The only thing I remember was to not cuddle elses, the rest was less memorable

[20:12] <masak> I've not cuddled elses since, to many linters' dismay :)

[20:14] *** [particle] left
[20:14] *** [particle] joined
[20:15] <tobs> my great grandmother was named Else, so I was skeptical of that rule at first

[20:17] *** ravenousmoose joined
[20:25] *** mowcat joined
[20:27] *** gfldex left
[20:27] *** dct joined
[20:28] *** ravenousmoose left
[20:28] *** gfldex joined
[20:40] *** ravenousmoose joined
[20:49] *** ravenousmoose left
[20:49] *** Kirisame joined
[20:50] *** mowcat left
[20:55] *** mowcat joined
[20:55] <leont> My ex is called Else, no cuddling for me!

[20:58] *** mowcat left
[20:59] *** drolax joined
[21:00] *** kst left
[21:02] *** mowcat joined
[21:20] <tbrowder> o/ #perl6

[21:23] <lucs> Hiya

[21:26] *** drolax left
[21:26] <lucs> Hmm... I think I'd like to have a $foo thing and an array of them (so, plural) @foo's; it's perfect and unambiguous to distinguish singular/plural, but I'm a bit uncomfortable with the unfortunate "plural's" kind of spelling :)

[21:26] *** drolax joined
[21:28] <lucs> (I'm already using the underscore in a meta-syntactic way, e.g., $d_home, $d_new-prj, … with the d_ prefix meaning "directory")

[21:30] <hahainternet> but ' is not for pluralising

[21:30] <hahainternet> it denotes ownership or a missed letter

[21:31] <hahainternet> "@foos" is correct grammar for "many instances of foo"

[21:31] <hahainternet> lucs: fwiw, if you use a prefix to mean something, use a type instead

[21:32] <hahainternet> types are enforced by the language instead of you, and provide real meaning rather than meaning to you

[21:32] <lucs> Um, they _are_ meaning for me, the reader of the code.

[21:32] <hahainternet> right, but they provide no meaning to the program

[21:32] <hahainternet> so if you accidentally do $d_home = $f_something

[21:32] <lucs> That doesnt' matter (in this case)

[21:32] <hahainternet> you might accidentally assign a file to something you think is a directory

[21:33] <hahainternet> if they had different types however, the compiler would warn you you had done this, or prevent it entirely

[21:33] <lucs> I understand, but it turns out that I'm okay with that (in what I'm currently doing).

[21:34] <hahainternet> your choice ☺

[21:34] <tbrowder> i’m porting some p5 code to p6 incrementally. in the process, i want a p6 script to use a p6 module that i transform in a BEGIN block. i can easily write the transformation, but the p5 module may have been updated since the p6 script was last run, so, being lazy, i want to have my updated p6 module provided by the same script that uses it. reading the docs i see that may be impossible, but is there a way to do it? i can get

[21:34] <tbrowder> the begin block to run the transformation code, but i haven’t yet been able to add the “use p6-module” in the file scope without error.

[21:34] <lucs> Yeah :) I love it

[21:35] *** ChoHag left
[21:38] <lucs> tbrowder: Could 'require' be put to use for this?

[21:41] *** ChoHag joined
[21:41] <tbrowder> i tried “require ::($module-name)” but i got an error that the mod couldn’t be found

[21:42] <lucs> I've had trouble getting 'require' to do my bidding in Perl6, but it's probably just me being dumb.

[21:42] <lucs> Someone here might know how to do this.

[21:43] <lucs> tbrowder: Um, you probably checked this, but is the file findable with PERL6LIB or something?

[21:47] <tbrowder> i’m not sure that would help, and i probably didn’t describe the issue any more.  something like. this:

[21:49] <tbrowder> BEGIN { # code to transform ‘m.pm’ to ‘m.pm6’ } use m; # more regular code using module ‘m’

[21:49] <tbrowder> that’s what i want to do

[21:52] <El_Che> use is also BEGIN I thought

[21:53] <El_Che> where do you put the require? outside the BEGIN block?

[21:58] *** nebg joined
[22:05] *** cronus_ joined
[22:06] <lucs> tbrowder: This works, maybe you can tweak it to your needs:

[22:06] <lucs> BEGIN { "/tmp/Foo.pm6".IO.spurt: "class Foo is export \{ method foo \{ 42 } }" }; use lib '/tmp'; use Foo; Foo.new.foo.say;

[22:06] <evalable6> lucs, rakudo-moar 3d581c8d2: OUTPUT: «42␤»

[22:06] <lucs> Hey, thanks evalable6.

[22:08] <tbrowder>  lucs: great, thanks, i’ll give it a shot!

[22:13] <cronus_> hello. I'm trying to use rakudo on win32.  it does not properly print any unicode characters. Is there something wrong with my build or is it something known for windows built?

[22:14] *** drolax left
[22:14] <cronus_> i've built it from source

[22:16] <SmokeMachine> m: say Mu.ACCEPTS: Set.HOW

[22:16] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «True␤»

[22:16] <moritz> cronus_: most likely your terminal isn't configured to use UTF-8

[22:17] <cronus_> moritz: i'm usng windows powershell. I don't think i can configure it to use utf8.

[22:17] <cronus_> moritz: can I?

[22:19] <jast> it may be worth trying to run it from the classic windows console (cmd.exe) and see if it's different there

[22:19] <moritz> dunno, not much of a window expert :/

[22:19] <jast> (I know essentially nothing about powershell, this is just information gathering really)

[22:20] <cronus_> jast: tried that, also with cmd /u. still same. using say i get Malformed UTF-8 at line 1 col 6

[22:20] <jast> when running what?

[22:21] <cronus_> say 'γεια'

[22:21] <evalable6> cronus_, rakudo-moar 3d581c8d2: OUTPUT: «γεια␤»

[22:21] <jast> oh, in the REPL?

[22:21] *** Kirisame left
[22:21] <cronus_> jast: yes

[22:22] <jast> yeah, probably your console(s) are configured with a different codepage, and it's probably not a good idea to wildly change it around

[22:22] <jast> you *can* change the default but it might break some windows utilities

[22:23] <jast> apparently, to do it temporarily in cmd.exe, enter this command: "chcp 65001"

[22:23] <cronus_> jast: yes but not to utf8. it is not supported by windows

[22:23] <jast> something close to UTF-8, at least :)

[22:24] <jast> according to microsoft docs, code page 65001 is UTF-8

[22:25] <El_Che> maybe it's MSUTF-8

[22:26] <El_Che> same same but incompatible

[22:26] <leont> CESU-8?

[22:26] <cronus_> jast: just tried it. i can't even type unicode on this terminal anymore....

[22:26] <leont> A lot of windows stuff does that :-/ 

[22:26] <jast> bah - well at least it's supposedly temporary

[22:28] <tbrowder> lucs: i will finish my code the hard way first (2 separate progs) and then try your unified method. if that is good, i think it is worth using your example in the docs for sure!

[22:30] *** MasterDuke joined
[22:30] *** MasterDuke left
[22:30] *** MasterDuke joined
[22:30] <cronus_> is there an irc channel for moar?

[22:30] <timotimo> yes, there is

[22:30] <timotimo> it's #moarvm

[22:30] <cronus_> timotimo: thanks

[22:31] *** andrzejku left
[22:31] <lucs> tbrowder: Great, best of luck!

[22:33] *** kirisame joined
[22:46] *** cpan-p6_ joined
[22:46] <cpan-p6_> 03cpan-p6_ reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[22:47] *** cpan-p6 left
[23:04] *** cronus_ left
[23:10] *** pmurias joined
[23:13] *** kirisame left
[23:17] *** nebg left
[23:17] *** pecastro left
[23:17] *** SCHAPiE left
[23:21] <El_Che> tyil: can you make cpan-p6 output less yellow/bright? It looks like a highlight.  

[23:22] <zachk> it's green to me 

[23:22] <El_Che> greenish-yellow

[23:23] <timotimo> it's regular green on my machine

[23:23] <El_Che> yeah, it depends on the colourscheme of your terminal

[23:25] <zachk> or gui irc client

[23:25] *** SCHAPiE joined
[23:25] <timotimo> probably also a little bit on the color profile you've set up for your monitor

[23:25] <timotimo> also (or including) having f.lux/redshift/whatever turned on

[23:28] *** dct left
[23:30] *** dct joined
[23:31] *** guifa joined
[23:32] <guifa> How does one get newlines to be rendered in an output block for pod?  I tried just new lines and also adding in a \n but neither work 

[23:32] <yoleaux> 25 Jan 2019 17:06Z <SmokeMachine> guifa: the =~~ operator is a great idea!

[23:33] <timotimo> i think it depends on the kind of block you're using

[23:33] <timotimo> it has to be one that's "verbatim" or something like that

[23:36] <guifa> Output causes it to be done all on one line.  Verbatim provides for line wrap, but neither do line breaks 

[23:37] *** cpan-p6_ left
[23:38] *** cpan-p6 joined
[23:38] <cpan-p6> 03cpan-p6 reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[23:39] *** pmurias left
[23:40] *** patrickb left
[23:46] *** random_yanek joined
[23:46] *** random_yanek left
[23:48] *** random_yanek joined
[23:49] <SmokeMachine> m: class CX::A does X::Control {}; CONTROL { when CX::A { .resume } }; CX::A.new.throw

[23:49] <camelia> rakudo-moar 3d581c8d2: OUTPUT: «Cannot find method 'sink': no method cache and no .^find_method␤  in block <unit> at <tmp> line 1␤␤»

[23:49] <SmokeMachine> is that expected? ^^

[23:54] *** aborazmeh joined
[23:54] *** aborazmeh left
[23:54] *** aborazmeh joined
