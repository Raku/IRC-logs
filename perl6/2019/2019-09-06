[00:00] *** [particle]1 left
[00:05] *** telex joined
[00:05] *** [particle] left
[00:05] *** |oLa| joined
[00:06] *** dotdotdot joined
[00:09] *** [particle] joined
[00:26] *** [particle] left
[00:27] *** [particle] joined
[00:32] *** [particle]1 joined
[00:34] *** [particle] left
[01:16] *** jaldhar_ joined
[01:43] *** molaf left
[01:55] *** molaf joined
[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:20] <Elronnd> irced: neh, can't think of anything in particular at the moment, but if you see anything you think might make it better, go ahead!

[02:20] *** netrino left
[02:21] <irced> Elronnd: sure

[02:22] <irced> i'm a blind colt on git (though i can manage local code with it easily enough)

[02:23] <irced> so i'll keep my eyes open

[02:23] <irced> 😃

[02:46] *** mowcat left
[03:15] *** molaf left
[03:24] *** hythm joined
[03:29] *** kktt007 left
[03:48] *** irced left
[03:48] <Elronnd> how to construct a CUnion which is nested inside of a CStruct?

[03:49] <Elronnd> http://ix.io/1UoN/perl6 I have this, and I can't figure out how to create a new P6Val.  I mean, I can create one, but then I have no way of setting the P6Data inside, nor can I set it from the constructor

[03:52] *** Doc_Holliwood joined
[03:58] *** gugod left
[03:59] *** gugod joined
[04:16] *** dustinm` joined
[04:26] *** jaldhar_ left
[04:26] *** jaldhar_ joined
[04:36] *** molaf joined
[04:37] *** [particle]1 left
[04:53] *** [particle] joined
[05:06] *** molaf left
[05:08] *** cpan-p6 left
[05:09] *** hythm left
[05:09] *** cpan-p6 joined
[05:09] *** cpan-p6 left
[05:09] *** cpan-p6 joined
[05:15] *** Xliff joined
[05:15] <Xliff> \p

[05:15] <Xliff> \o even

[05:16] <Elronnd> what is \p?

[05:16] <Elronnd> and \o?

[05:17] <Xliff> benchable: compare \p is nothing. That's me fat fingering \o

[05:17] <benchable6> Xliff, ¦\p: «Cannot find this revision (did you mean “all”?)»

[05:17] <Xliff> \o is a hand waving hello...

[05:17] <Elronnd> o/

[05:17] <Xliff> bench, compare HEAD 100.Str.chars for ^100000 || 100.log10 for ^100000

[05:18] <Xliff> bench: compare HEAD 100.Str.chars for ^100000 ||| 100.log10 for ^100000

[05:18] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:18] <benchable6> Xliff, https://gist.github.com/e6beb3891d1e8bd8d646c1c6a500f42a

[05:20] *** sauvin joined
[05:20] <Xliff> I would expect the log version to be faster unless you are doing some WEIRD optimizations with strings.

[05:23] <Elronnd> Xliff: perhaps .Str is a zero-cost operation following lexing

[05:24] <Xliff> Yah. Thinking about that. It would mean that moarvm's floating point math went non-native in log10

[05:38] *** Doc_Holliwood left
[05:42] *** domidumont joined
[05:46] <Xliff> bench: HEAD my @a = ('a'...'z') for ^100000 ||| @a = ('a'...'z').reverse for ^100000

[05:46] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:46] <benchable6> Xliff, No new data found

[05:47] *** domidumont left
[05:47] <Xliff> bench: HEAD my @a = ('a'...'z') for ^100000 ||| @a = ('a'...'d').reverse for ^100000

[05:47] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:47] <benchable6> Xliff, No new data found

[05:47] <Xliff> bench: HEAD my ('a'...'z') for ^100000 ||| ('a'...'z').reverse for ^100000

[05:47] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:47] <benchable6> Xliff, No new data found

[05:47] <Xliff> bench: HEAD ('a'...'z') for ^100000 ||| ('a'...'z').reverse for ^100000

[05:47] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:47] <benchable6> Xliff, No new data found

[05:48] <Xliff> ?!?

[05:48] <Xliff> bench: compare HEAD my @a = ('a'...'z') for ^100000 ||| @a = ('a'...'d').reverse for ^100000

[05:48] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:48] <benchable6> Xliff, ¦HEAD: «04===SORRY!04=== Error while compiling /tmp/aeFUACn8Ao␤Variable '@a' is not declared␤at /tmp/aeFUACn8Ao:1␤------> 03'a'...'z') for ^100000  } ,1␉ => sub {  08⏏04@a = ('a'...'d').reverse for ^100000 } ;␤»

[05:48] *** jaldhar_ left
[05:48] <Xliff> bench: compare HEAD my @a = ('a'...'z') for ^100000 ||| my @a = ('a'...'d').reverse for ^100000

[05:48] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:48] <benchable6> Xliff, ¦HEAD: «Benchmark: ␤«timed out after 10 seconds»»

[05:48] <Xliff> bench: compare HEAD my @a = ('a'...'z') for ^10000 ||| my @a = ('a'...'z').reverse for ^10000

[05:48] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:49] <benchable6> Xliff, ¦HEAD: «Benchmark: ␤«timed out after 10 seconds»»

[05:49] <Xliff> bench: compare HEAD my @a = ('a'...'z') for ^100 ||| my @a = ('a'...'z').reverse for ^100

[05:49] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:49] <benchable6> Xliff, https://gist.github.com/453496649c3764be8901270ce582ca48

[05:50] <Xliff> bench: compare HEAD my @a = ('a'...'z') for ^1000 ||| my @a = ('a'...'z').reverse for ^1000

[05:50] <benchable6> Xliff, starting to benchmark the 1 given commit

[05:50] <benchable6> Xliff, https://gist.github.com/7bf7d08d62be999bf49a44d89072d6b8

[05:58] <Xliff> m: my @a = gather for 'a'..'g' { take $_ => ^90.pick }; @a.sort( -*.value ).say

[05:58] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesiz…»

[05:58] <evalable6> Xliff, Full output: https://gist.github.com/e6e07d15e8f7754cee47fa87c3bb217c

[05:58] <Xliff> m: my @a = gather for 'a'..'g' { take $_ => (^90).pick }; @a.sort( -*.value ).say

[05:58] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «(b => 76 e => 48 d => 41 a => 21 c => 21 g => 19 f => 4)␤»

[05:59] <Xliff> m: my @a = gather for 'a'..'g' { take $_ => (90 * rand).Int }; @a.sort( -*.value ).say

[05:59] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «(b => 85 c => 83 a => 79 g => 49 e => 47 d => 18 f => 18)␤»

[05:59] <Xliff> m: 90.rand.say

[05:59] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «7.918046477777251␤»

[05:59] <Xliff> m: 90.rand.say

[05:59] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «61.47528102036286␤»

[06:04] *** [Sno] left
[06:04] *** abraxxa joined
[06:05] *** jmerelo joined
[06:05] <jmerelo> squashable6: status

[06:05] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in 2 days and ≈5 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:05] <jmerelo> Yay!

[06:05] <jmerelo> .tell AlexDaniel are hooks ready and everything?

[06:05] <tellable6> jmerelo, I'll pass your message to AlexDaniel

[06:06] *** wamba joined
[06:08] <SmokeMachine> jmerelo: I think it is... I’ve added the hook yesterday and it seems to be working... but I don’t know if anything else should be done...

[06:08] <jmerelo> SmokeMachine: that should be enough. Now we only need people to do stuff :-)

[06:09] <SmokeMachine> :)

[06:09] *** abraxxa left
[06:09] *** abraxxa joined
[06:09] *** [Sno] joined
[06:17] <squashable6> 🍕 FCO++ created wiki page “AST”: https://github.com/FCO/Red/wiki/AST

[06:17] <squashable6> 🍕🍕🍕  First contribution by FCO++! ♥

[06:17] *** domidumont joined
[06:19] <squashable6> 🍕 FCO++ created wiki page “AST Optimizations”: https://github.com/FCO/Red/wiki/AST-Optimizations

[06:21] <squashable6> 🍕 FCO++ edited wiki page “AST Optimizations”: https://github.com/FCO/Red/wiki/AST-Optimizations

[06:26] <squashable6> 🍕 FCO++ created wiki page “Traits”: https://github.com/FCO/Red/wiki/Traits

[06:29] <squashable6> 🍕 FCO++ created wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[06:31] <Xliff> m: <a b c d e f>.elems.log10.say

[06:31] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «0.7781512503836435␤»

[06:32] <Xliff> m: 200.fmt('%1.724275869600789d').say

[06:32] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[06:33] <Xliff> ^^ Houston... we have a problem.

[06:33] <Xliff> m: 200.fmt('%1d').say

[06:33] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «200␤»

[06:34] <squashable6> 🍕 FCO++ created wiki page “How to”: https://github.com/FCO/Red/wiki/How-to

[06:37] <squashable6> 🍕 FCO++ opened issue “Document how to use custom inflators/deflators”: https://github.com/FCO/Red/issues/347

[06:39] *** ravenousmoose joined
[06:39] <Xliff> jmerelo: For this squashy, are we to work on just the RED git repository or on the wiki, as well?

[06:40] <jmerelo> Xliff: both seem to be good for the bot

[06:43] *** robertle left
[06:43] *** ravenousmoose left
[06:45] <mtj> hey folks, is it possible to specify a module's required version number, or greater?

[06:45] <mtj> use SDL2::Raw:ver(0.2);

[06:46] <mtj> ^ ..could i set version 0.2, or greater?

[06:46] <jmerelo> mtj: it should be possible, yes.

[06:47] <mtj> awesome!... anyone know of an example?

[06:47] <mtj> https://docs.perl6.org/language/modules#use

[06:47] <mtj> ive gotten that far ^ :)

[06:48] <jmerelo> mtj: it should be straightforward, but give me a minute

[06:52] <jmerelo> mtj: https://github.com/JJ/my-perl6-examples/blob/master/versioned.p6

[06:56] <timotimo> oh, cool, someone's using SDL2::Raw :) :)

[06:57] <mtj> hi timotimo , yes. hopefully..

[06:58] <mtj> jmerelo: i have a look at your example, but still dont quite understand it

[06:59] <mtj> i attempted to execute it, it had an error

[07:01] <mtj> ok, its just an example - not to be executed

[07:02] <jmerelo> mtj: it needs to go with this: https://github.com/JJ/my-perl6-examples/blob/master/Versioned.pm6 and then run with perl6 -Ilib versioned.p6, sorry

[07:05] <mtj> jmerelo:  i see your commit... https://github.com/JJ/my-perl6-examples/commit/3d88ddfb461a2dfbf487041bee7ade65be39c6e6

[07:06] <mtj> ...and your pm6 module is set to Versioned:ver<0.0.1>

[07:06] <mtj> so, how do you say ver 0.0.1... and greater?

[07:07] <mtj> not.. 

[07:07] <mtj> unit class Versioned:ver<0.0.1>

[07:08] <jmerelo> mtj: you would need to say that in the client, not in the class. But I'm not sure you can. Let me just try

[07:08] <mtj> ah, sorry, its fri 7pm here.. 

[07:08] <mtj> yes click :)

[07:08] <jmerelo> mtj: Japan?

[07:09] <jmerelo> mtj: it's sunny and warm here in Granada, Southern Spain

[07:09] <jmerelo> mtj: but yes, right, that does not work. Versions work literally in "use", so if you say :ver<0.0.1+> it will literally look for that.

[07:10] <jmerelo> mtj: you can specify that as a dependency in META6.json, and zef will do its best to find something that accomodates your wishes. But then you need to either avoid any version or else use a specific one.

[07:10] <mtj> ha, i was just thinking of that example ^

[07:11] <mtj> jmerelo: thanks for your examples repo, looks very interesting

[07:12] <mtj> jmerelo: hi from new zealand :)

[07:14] <jmerelo> mtj: that's exactly the antipodes of Spain :-)

[07:15] <jmerelo> mtj: those are examples I use for the documentation, stackoverflow answers and so on... It's probably more informative if you go to any of those. But feel free to use and ask :-)

[07:15] <mtj> its raining and windy here... lets swap  

[07:17] *** _jrjsmrtn joined
[07:17] *** __jrjsmrtn__ left
[07:18] <jmerelo> mtj: onset of spring beats onset of fall any time... you'll be very welcome here, but I really love it here anyway

[07:24] <holyghost> I have programmed simple atom bindings for my cell system, the meaning is to build the DNA and os on on molecular quantum mechanics (using sigam, pi, delta orbitals)

[07:24] <holyghost> The code is on Xliff's server

[07:31] <holyghost> jemerelo, I'm back into work on Perl6, the cell system is something I can work on. I'll put it on github later on. Hi BTW

[07:32] <holyghost> I can work on tuesday, thrusday and friday. I'm doing a Bachelor of Arts on monday and Wednesday

[07:32] <holyghost> 1st year

[07:33] *** ravenousmoose joined
[07:33] *** aborazmeh joined
[07:33] *** aborazmeh left
[07:33] *** aborazmeh joined
[07:38] *** ravenousmoose left
[07:41] <jmerelo> holyghost: good luck

[07:45] <mtj> timotimo: many thanks for sdl2::raw, the NativeCall stuff looks very clean

[07:51] <timotimo> SDL2 was rather pleasant to bind, at least the directly-bindable low-level stuff; sadly, SDL2_ttf (or something else?) passes some data as structs which will require a bit more work on NativeCall itself, down to putting in more code to moarvm ...

[07:52] <timotimo> BBL

[08:00] *** scimon joined
[08:08] *** aborazmeh left
[08:08] *** sena_kun joined
[08:09] *** MasterDuke left
[08:10] *** reach_satori left
[08:17] *** dakkar joined
[08:18] *** dolmen joined
[08:19] *** pecastro joined
[08:23] *** no-n left
[08:27] *** zakharyas joined
[08:28] *** rindolf joined
[08:29] <Xliff> timotimo: How so? I have done a lot of work with Struct arrays with my GTK-Plus stuff.

[08:30] <Xliff> It's not perfect, but it's workable.

[08:33] *** chloekek joined
[08:40] *** Kaiepi left
[08:56] *** MasterDuke joined
[08:56] *** chloekek left
[08:58] <Xliff> What's the method I need to provide if I want +$object to coerce to numeric. Numeric()?

[08:58] *** zakharyas left
[09:01] <sena_kun> m: class A {}; +A.new;

[09:01] *** robertle joined
[09:01] <evalable6> sena_kun, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) WARNINGS for /tmp/xiJofE7CqI:␤Useless use of "+" in expression "+A.new" in s…»

[09:01] <evalable6> sena_kun, Full output: https://gist.github.com/7710d84f484431b46d5684d03c1eed76

[09:01] <sena_kun> m: class A {}; +(A.new);

[09:01] <evalable6> sena_kun, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) WARNINGS for /tmp/Bwc1hIFL4o:␤Useless use of "+" in expression "+(A.new)" in…»

[09:01] <evalable6> sena_kun, Full output: https://gist.github.com/d0376d1accb06d4ed8f3a2dfedc90210

[09:01] <MasterDuke> m: class A { multi method Numeric(|) { say "hi" } }; my A $a .= new; my $b = +$a

[09:01] <evalable6> MasterDuke, rakudo-moar 9dd67cb37: OUTPUT: «hi␤»

[09:02] *** pierrot joined
[09:02] *** zakharyas joined
[09:03] *** Doc_Holliwood joined
[09:10] *** reach_satori joined
[09:43] *** pat_js joined
[10:07] *** mowcat joined
[10:07] <Xliff> What invokes the following error?

[10:07] <Xliff> "cloning a CStruct is NYI"

[10:07] *** wamba left
[10:08] <Xliff> I'm getting it from the but operator... https://github.com/Xliff/p6-GStreamer/blob/master/lib/GStreamer/ElementFactory.pm6#L99

[10:10] <jnthn> You won't be able to mix into a CStruct

[10:10] <jnthn> A but is a clone followed by a `does`

[10:10] <jnthn> So even if the clone step worked, the `does` part ain't going to

[10:11] <Xliff> *ARGH*

[10:11] <Xliff> OK. Thanks, jnthn. Is there any plans on fixing that, or will that work when CStruct cloning is implemented?

[10:12] <Xliff> Oh. The 'does' part isn't either...

[10:12] <jnthn> The clone thing is worth doing, but maybe involves some interesting question on memory management

[10:12] <jnthn> The `does` part is not going to be happening, probably. Or if it is, then only if you want to add methods, but there's no way to add more attributes

[10:13] <jnthn> I mean, it's backed by a C structure

[10:13] <jnthn> Not a P6opaque

[10:13] <jnthn> And P6opaque has all kinds of things done to handle mixins

[10:13] <Xliff> Crap. I've been doing this everywhere and I THOUGHT it worked.

[10:14] <Xliff> But I was doing it with CPointers... maybe that explains it.

[10:14] *** rabbit0 joined
[10:20] *** pecastro left
[10:20] <Xliff> jnthn: Did you get my message about IO::Async::Socket::SSL/44?

[10:21] <Xliff> OK, the CStruct thing is not a problem. I forgot a critical aspect of the assignment. /o\

[10:34] *** Black_Ribbon left
[10:37] *** Kaiepi joined
[10:37] <jnthn> Xliff: Yes; my question is still "could it be a nativecall bug"

[10:43] *** reach_satori_ joined
[10:43] *** reach_satori left
[10:46] *** Voldenet left
[10:49] *** dolmen left
[10:51] *** zakharyas left
[11:04] *** wamba joined
[11:15] *** dolmen joined
[11:19] <Xliff> jnthn: Is there anything I can do to help you debug it?

[11:22] *** pat_js left
[11:25] *** ChoHag left
[11:32] *** ChoHag joined
[11:42] *** satori__ joined
[11:45] *** reach_satori_ left
[11:53] <tyil> if there's anybody around that is knowledgable on DB::SQLite: I'm getting 'Use of Nil in numeric context in block  at /home/tyil/.rakudo-star/rakudo-star-2019.03/install/share/perl6/site/sources/A96187CD3259EABBAF49C3BE8984779C46DABD52 (DB::SQLite::Statement) line 44' when trying to run the query over here https://gitlab.com/tyil/perl6-app-gtd/blob/projects/lib/App/GTD/Models/Sqlite/Thing.pm6#L152

[11:54] *** abraxxa left
[11:54] <tyil> and I'm unsure why I'm getting that error, nor a clue on how to fix it

[11:58] <timotimo> https://modules.perl6.org/dist/DB::SQLite:cpan:CTILMES/lib/DB/SQLite/Statement.pm6#L44

[11:58] <timotimo> could the .step value have become null?

[11:58] <timotimo> that == could be the numeric context it's talking about

[12:00] <timotimo> odd, step is a method that is defined to return an int32

[12:05] <jnthn> Xliff: Well, maybe reduce it to the smallest possible example (that is, golf down the module too)

[12:11] <Xliff> jnthn: Yeah, well. I have next to no skill at that.

[12:12] <Xliff> And I'm horribly worried that doing that will remove a catalyst. I will see what I can do.

[12:12] <Xliff> m: class A { }; my A $a; say $a;

[12:12] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «(A)␤»

[12:12] <Xliff> m: class A { }; my A $a; say $a.defined;

[12:12] <evalable6> Xliff, rakudo-moar 9dd67cb37: OUTPUT: «False␤»

[12:13] *** netrino joined
[12:14] <jnthn> Xliff: I suspect it's a skill that improves with a) practice, b) learning to treat it like doing scientific experiments.

[12:17] <Xliff> jnthn: It also needs c) patience. :)

[12:17] <jnthn> (e.g. understand what you're holding constant and what you're varying, and use it to provide evidence for/against a hypothesis about what's wrong)

[12:17] <jnthn> That, that is very true also :)

[12:17] <jnthn> *Yes

[12:17] <jnthn> Being stubborn can be useful :)

[12:17] <Xliff> Like I said, I will give it a shot. Maybe after I hit a good stopping point with GStreamer.

[12:18] <Xliff> Oh... I have the stubborn part down. :)

[12:19] *** dolmen left
[12:23] *** lucasb joined
[12:23] *** mowcat left
[12:30] *** jmerelo left
[12:37] *** Xliff left
[12:39] *** holyghost left
[12:39] *** holyghost joined
[12:42] *** pat_js joined
[13:18] *** reach_satori_ joined
[13:20] *** satori__ left
[13:24] *** zakharyas joined
[13:26] *** chloekek joined
[13:31] <tyil> timotimo: Guess I should make an issue on the DB::SQLite repository

[13:38] *** molaf joined
[13:41] *** rabbit0 left
[13:47] <AlexDaniel> squashable6: status

[13:47] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈22 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[13:47] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/724193e6725ae7e28c08ce7d2524f3d5

[13:47] <AlexDaniel> yaaay

[13:48] <SmokeMachine> \o/

[14:04] <uzl[m]> Is the ... as in sub foo { ... } still referred as the yada yada operator(?) in P6?

[14:09] <SmokeMachine> m: ...

[14:09] <evalable6> SmokeMachine, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) Stub code executed␤  in block <unit> at /tmp/HTvFOBDTJv line 1␤␤»

[14:09] <SmokeMachine> uzl[m]: I think so...

[14:13] <uzl[m]> SmokeMachine: I found it (https://docs.perl6.org/language/operators#listop_...). It's still called that or stub operator.

[14:20] <lucasb> m: ... 'yada ' x 3

[14:20] <evalable6> lucasb, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) yada yada yada ␤  in block <unit> at /tmp/m0fz3IflKj line 1␤␤»

[14:20] <lucasb> m: !!! 'bang ' x 3

[14:20] <evalable6> lucasb, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) bang bang bang ␤  in block <unit> at /tmp/YvZSOdiI5F line 1␤␤»

[14:20] <lucasb> m: ??? 'what ' x 3

[14:20] <evalable6> lucasb, rakudo-moar 9dd67cb37: OUTPUT: «what what what ␤  in block <unit> at /tmp/iu0slDmiTB line 1␤»

[14:23] <uzl[m]> What's the convention when using 'cannot' vs 'can not' in the docs? Generally, the latter is less frequently used than the former and mostly used when emphasizing something,  especially if followed by 'only' (e.g., ... can not only ...).

[14:24] *** Doc_Holliwood left
[14:24] <lucasb> I think the prefered style is 'cannot', for error messages

[14:26] <uzl[m]> What about the documentation? I myself preferred 'cannot' and I don't remember ever using 'can not' ;-).

[14:30] *** Xliff joined
[14:32] <moritz> I'd follow the same style as error messages there

[14:35] <lucasb> I said 'prefered style', which I think it is, for core Rakudo exception messages

[14:36] *** satori__ joined
[14:36] *** pat_js left
[14:37] <lucasb> but actually, my P5 code usually says: die "Can't open ...", "Didn't match ...", "Couldn't handle ..." :)

[14:38] *** reach_satori_ left
[14:39] *** wamba left
[14:42] <Geth> ¦ rakudo.org: jjatria++ created pull request #30: Remove trailing slash in exported PATH

[14:42] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/pull/30

[14:43] <Grinnz> mine usually say "Failed to..."

[14:44] <Grinnz> which has the benefit of being able to put it in single quotes without extra effort :P

[14:44] <rba> .seen sortiz

[14:44] <tellable6> rba, I saw sortiz 2019-09-05T04:41:34Z in #perl6: <sortiz> Elronnd: Don't need to. The constructor Pointer.new(Int) works.

[14:59] *** Doc_Holliwood joined
[15:01] *** chloekek left
[15:15] *** domidumont left
[15:30] *** feynman joined
[15:31] *** molaf left
[15:33] <Geth> ¦ rakudo.org: be001cf263 | (José Joaquín Atria)++ (committed using GitHub Web editor) | templates/files-rakudo-source.html.ep

[15:33] <Geth> ¦ rakudo.org: Remove trailing slash in exported PATH

[15:33] <Geth> ¦ rakudo.org: 

[15:33] <Geth> ¦ rakudo.org: The instructions on building from source for Linux had a trailing slash in the exported `$PATH`, which made the output of `which` ugly:

[15:33] <Geth> ¦ rakudo.org: 

[15:33] <Geth> ¦ rakudo.org: ```

[15:33] <Geth> ¦ rakudo.org: $ which perl6    

[15:33] <Geth> ¦ rakudo.org: /home/user/rakudo/install/bin//perl6

[15:33] <Geth> ¦ rakudo.org: ```

[15:33] <Geth> ¦ rakudo.org: 

[15:33] <Geth> ¦ rakudo.org: Although this is a purely cosmetic change, removing this trailing slash makes for less unexpected output.

[15:33] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/be001cf263

[15:33] <Geth> ¦ rakudo.org: dd5a3edb73 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | templates/files-rakudo-source.html.ep

[15:33] <Geth> ¦ rakudo.org: Merge pull request #30 from jjatria/patch-1

[15:33] <Geth> ¦ rakudo.org: 

[15:33] <Geth> ¦ rakudo.org: Remove trailing slash in exported PATH

[15:33] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/dd5a3edb73

[15:36] *** astronavt___ joined
[15:37] *** El_Che_ joined
[15:37] *** cpan-p6 left
[15:37] *** astronavt left
[15:37] *** cpan-p6 joined
[15:37] *** cpan-p6 left
[15:37] *** cpan-p6 joined
[15:37] *** Guest93 left
[15:37] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[15:37] *** dakkar left
[15:38] <feynman> hey everyone. they just discovered that 42 is the sum of 3 cubes: (-80538738812075974 ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:38] <feynman> but perl6 tells me it's 214281900452106748271702072587124736

[15:38] <feynman> what am i doing wrong?

[15:38] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[15:39] *** cpan-p6 left
[15:39] <ilbelkyr> p6: ((-80538738812075974) ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:39] <evalable6> ilbelkyr, rakudo-moar 9dd67cb37: OUTPUT: «WARNINGS for /tmp/qZOuFm8muQ:␤Useless use of "+" in expression "+ (80435758145817515 ** 3) + (12602123297335631 ** 3)" in sink context (line 1)␤»

[15:39] <ilbelkyr> p6: say ((-80538738812075974) ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:39] <evalable6> ilbelkyr, rakudo-moar 9dd67cb37: OUTPUT: «42␤»

[15:40] *** cpan-p6 joined
[15:40] *** cpan-p6 left
[15:40] *** cpan-p6 joined
[15:40] <ilbelkyr> feynman: operator precedence ^

[15:40] *** dakkar joined
[15:43] <feynman> ilbelkyr: oh ok, thanks. so exponentiation is higher than unary minus?

[15:44] <uzl[m]> p6: (-80538738812075974 ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:44] <evalable6> uzl[m], rakudo-moar 9dd67cb37: OUTPUT: «WARNINGS for /tmp/P_grnoNZkQ:␤Useless use of "+" in expression "+ (80435758145817515 ** 3) + (12602123297335631 ** 3)" in sink context (line 1)␤»

[15:44] <ilbelkyr> feynman: so is multiplication, afaik

[15:45] <uzl[m]> feynman's example outputs 42 in the REPL.

[15:45] <uzl[m]> m: say (-80538738812075974 ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:45] <evalable6> uzl[m], rakudo-moar 9dd67cb37: OUTPUT: «42␤»

[15:47] <ilbelkyr> oh hm right, in this case it doesn't actually make a difference. Hm

[15:47] <feynman> yeah, the way i typed it should've given me 42 regardless of grouping, i think. but it still gives me 214281900452106748271702072587124736

[15:48] *** mowcat joined
[15:49] <feynman> oh and ((-80538738812075974) ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3) also gives me the sum starting with 214...

[15:50] <uzl[m]>  * m: say ((-80538738812075974) ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:50] <feynman> maybe its an integer bounds issue? python gives me 42 though...

[15:50] <uzl[m]> m: say ((-80538738812075974) ** 3) + (80435758145817515 ** 3) + (12602123297335631 ** 3)

[15:50] <evalable6> uzl[m], rakudo-moar 9dd67cb37: OUTPUT: «42␤»

[15:50] *** scriplit joined
[15:51] <scriplit> feynman, are you on windows?

[15:51] <scriplit> I see the same here on Windows

[15:52] <feynman> scriplit: yes i am

[15:52] <uzl[m]> feynman: What Rakudo version are you using?

[15:53] <feynman> This is Rakudo Star version 2019.03.1 built on MoarVM version 2019.03implementing Perl 6.d.

[15:53] <scriplit> 2019.03.1

[15:54] <Elronnd> m: say (-80538738812075974) ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3

[15:54] <evalable6> Elronnd, rakudo-moar 9dd67cb37: OUTPUT: «42␤»

[15:54] <Elronnd> order of operations ftw!

[15:55] <feynman> elronnd: that expression still gives me 214281900452106748271702072587124736

[15:57] *** scriplit left
[15:57] <squashable6> 🍕 FCO++ created wiki page “How does it work”: https://github.com/FCO/Red/wiki/How-does-it-work

[15:59] *** robertle left
[16:03] *** scimon left
[16:06] <squashable6> 🍕 FCO++ created wiki page “How to   Pagination”: https://github.com/FCO/Red/wiki/How-to---Pagination

[16:06] <squashable6> 🍕 FCO++ edited wiki page “How to”: https://github.com/FCO/Red/wiki/How-to

[16:14] *** reach_satori_ joined
[16:17] *** satori__ left
[16:17] *** aborazmeh joined
[16:17] *** aborazmeh left
[16:17] *** aborazmeh joined
[16:18] *** reach_satori_ left
[16:20] *** Matthew[m] left
[16:20] *** matiaslina left
[16:20] *** lance_w[m] left
[16:21] *** AlexDaniel` left
[16:21] *** folex left
[16:21] *** rba[m] left
[16:21] *** Seance[m] left
[16:21] *** mack[m]1 left
[16:21] *** aearnus[m] left
[16:21] *** TravisRt2botio[m left
[16:21] *** unclechu left
[16:21] *** Guest999 left
[16:21] *** CIAvash left
[16:21] *** EuAndreh[m] left
[16:21] *** sergiotarxz[m] left
[16:21] *** Demos[m] left
[16:21] *** uzl[m] left
[16:21] *** xliff[m] left
[16:21] *** BlackChaosNL[m] left
[16:27] <[Coke]> heh, I just saw that sum of cubes on the 'net

[16:28] *** dakkar left
[16:31] *** AlexDaniel` joined
[16:44] *** EuAndreh[m] joined
[16:44] *** rba[m] joined
[16:44] *** TravisRt2botio[m joined
[16:44] *** Guest48976 joined
[16:44] *** Matthew[m] joined
[16:44] *** BlackChaosNL[m] joined
[16:44] *** lance_w[m] joined
[16:44] *** sergiotarxz[m] joined
[16:44] *** unclechu joined
[16:44] *** folex joined
[16:44] *** Demos[m] joined
[16:44] *** aearnus[m] joined
[16:44] *** xliff[m] joined
[16:44] *** CIAvash joined
[16:44] *** mack[m]1 joined
[16:44] *** uzl[m] joined
[16:44] *** matiaslina joined
[16:44] *** Seance[m] joined
[16:45] *** ravenousmoose joined
[16:51] <feynman> [Coke]: did you get 42 on the repl?

[16:51] *** aborazmeh left
[17:02] *** Kaiepi left
[17:13] *** domidumont joined
[17:15] <[Coke]> yes.

[17:15] *** wildtrees joined
[17:17] *** domidumont left
[17:17] *** sena_kun left
[17:21] <feynman> [Coke]: is there some type like a big int in perl6 that i need to use in order to get the right answer?

[17:21] *** kensanata joined
[17:24] <[Coke]> nope, builtin 

[17:24] <[Coke]> what version of rakudo do you have?

[17:24] <[Coke]> and what OS?

[17:24] <[Coke]> you're using the parens?

[17:25] <squashable6> 🍕 FCO++ labeled issue “Document how to use custom inflators/deflators” (Documentation): https://github.com/FCO/Red/issues/347

[17:25] <feynman> This is Rakudo Star version 2019.03.1 built on MoarVM version 2019.03implementing Perl 6.d.

[17:25] <feynman> Windows 10

[17:25] <feynman> i've tried all the groupings

[17:26] <feynman> python3 gives me 42

[17:27] <[Coke]> duplicated on my win10 box.

[17:27] <[Coke]> could be a win10 bug, could be a bug in that version of rakudo.

[17:27] *** rabbit0 joined
[17:27] <squashable6> 🍕 FCO++ opened issue “Document `$*RED-DB`”: https://github.com/FCO/Red/issues/348

[17:27] <[Coke]> can someone kick off a bisect to check?

[17:28] <squashable6> 🍕 FCO++ labeled issue “Document `$*RED-DB`” (Documentation): https://github.com/FCO/Red/issues/348

[17:29] <[Coke]> bisect: exit 1 if (-80538738812075974) ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3 != 42

[17:29] <bisectable6> [Coke], On both starting points (old=2015.12 new=9dd67cb) the exit code is 0 and the output is identical as well

[17:29] <bisectable6> [Coke], Output on both points: «»

[17:29] <[Coke]> so, looks like a windows bug.

[17:29] <[Coke]> Can you open a ticket at github.com/rakudo/rakudo/issues ?

[17:34] *** ravenousmoose left
[17:36] <squashable6> 🍕 FCO++ created wiki page “$*RED DB”: https://github.com/FCO/Red/wiki/%24%2ARED-DB

[17:38] *** maettu joined
[17:40] *** kensanata left
[17:40] <squashable6> 🍕 FCO++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[17:42] <feynman> i'm sorry, i don't know what a bisect is or how to use github. :S

[17:47] *** Ven`` joined
[17:49] <squashable6> 🍕 FCO++ created wiki page “$*RED DEBUG”: https://github.com/FCO/Red/wiki/%24%2ARED-DEBUG

[17:49] <squashable6> 🍕 FCO++ edited wiki page “$*RED  DEBUG”: https://github.com/FCO/Red/wiki/%24%2ARED--DEBUG

[17:55] *** dolmen joined
[17:55] *** Sgeo joined
[17:58] *** Ven`` left
[17:58] *** Sgeo__ left
[18:04] *** dolmen left
[18:07] *** dolmen joined
[18:08] *** Voldenet joined
[18:08] *** Voldenet left
[18:08] *** Voldenet joined
[18:09] *** dolmen left
[18:16] *** irced joined
[18:28] *** Xliff left
[18:29] *** MilkmanDan left
[18:30] *** MilkmanDan joined
[18:37] *** mowcat left
[18:40] *** khisanth_ left
[18:40] *** domidumont joined
[18:41] *** feynman left
[18:44] *** wamba joined
[18:46] *** rindolf left
[18:47] *** molaf joined
[18:52] *** khisanth_ joined
[18:54] *** Ven`` joined
[19:01] *** domidumont left
[19:03] *** zakharyas left
[19:03] <Doc_Holliwood> It would be super cool if we could use .NET/mono classes from Perl6. Has anybody given that a serious thought?

[19:04] <Doc_Holliwood> There is this P/Invoke mechanism and you can use .NET from C/C++ so it should be possible.

[19:05] <netrino> Does anybody have any tips on debuggin Cro::WebSocket library? I'm using library that is using websockets and on my production machine it just hangs on first `send' call and i don't know how to approach it. Tried to install different versions of perl6 to no success. I only have ssh access to production machine, so it sort of limits my options.

[19:06] <El_Che_> is the client side ok? E.g. when you open the browser console, can you send stuff (e.g. PING)

[19:07] <netrino> Ah, it is used as a client on the backend

[19:07] <irced> netrino: i dunno about the library but maybe i can help. are you attempting to make a secure (i.e. wss) websocket connection?

[19:07] <[Coke]> bisect: say (-80538738812075974) ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3 ; # try it with just the output.

[19:07] <bisectable6> [Coke], On both starting points (old=2015.12 new=9dd67cb) the exit code is 0 and the output is identical as well

[19:07] <bisectable6> [Coke], Output on both points: «42␤»

[19:08] <netrino> irced: I think so, it is used in API::Discord library, i've been able to trace the problem down to WebSockets, let me check if it's wss

[19:08] *** maettu left
[19:08] <netrino> irced: Yes, it is

[19:08] *** maettu joined
[19:09] <irced> netrino: have you attempted to make a plain https connection from the production machine using the command line?

[19:09] <netrino> So, to clarify, i'm talking about Cro::WebSocket::Client, not the server 

[19:10] <[Coke]> AlexDaniel: https://github.com/perl6/whateverable/wiki/Bisectable has an irc log link going through the party host. (near the end)

[19:10] <irced> this is important because websocket requires an http(s) opening handshake before upgrade

[19:10] <netrino> irced: well, curl https://google.com worked

[19:11] <AlexDaniel> [Coke]: that's right… and we have to restore that

[19:11] <AlexDaniel> [Coke]: so the redirection worked through Zoffix's stuff, and it's currently down

[19:12] <irced> netrino: you mentioned server. can you connect to the server via https ? (techinically you should be able to connect since again websocket is an upgrade after the https connection)

[19:12] <netrino> irced: and Cro::HTTP::Client.get('https://google.com', :http<1.1>) returned me a page

[19:12] <irced> now i am referring to the websocket server

[19:12] <netrino> irced: I don't have a websocket server there

[19:12] <irced> since we have established you can connnect to an known https server

[19:13] <netrino> irced: the program that is on the server uses WebSocket as a client

[19:13] <irced> instead of wss://SERVER can you https://SERVER 

[19:13] <netrino> Let me see

[19:15] <irced> it's okay if curl doesn't find the https index page

[19:15] <irced> as long as you get a response

[19:15] *** Kaiepi joined
[19:15] *** mowcat joined
[19:16] <irced> i got my own side question, i want to create an infinite sequence using gather, is this possible? my first attempt is failing.

[19:17] <irced> i have my $seq := gather { state $prev = 0; take ++$previous if test($previous); } # test is block code defined earlier

[19:17] <Doc_Holliwood> m: [+] (1 .. Inf)

[19:17] <evalable6> Doc_Holliwood, rakudo-moar 9dd67cb37: OUTPUT: «Potential difficulties:␤    Useless use of [+] in sink context␤    at /tmp/4bM7dhiV2V:1␤    ------> 03<BOL>08⏏04[+] (1 .. Inf)␤»

[19:18] <netrino> irced: yeah, it returns 404

[19:19] <irced> netrino: ok. have you tested Cro::WebSocket::Client with wss://echo.websocket.org ? (which can be used for simple tests)

[19:20] <irced> netrino: it would be good to test with ws://echo.websocket.org as well

[19:20] <irced> netrino: note that again i can't speak to Cro but be sure you are using the Cro secure websocket implementation for wss

[19:21] <squashable6> 🍕 FCO++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[19:21] <irced> because if you don't you will fail the handshake before the upgrade

[19:22] <netrino> irced: Interesting, got this when tried to do Cro::WebSocket::Connect with wss "Type check failed for return value; expected OpenSSL::Bio::BIO_METHOD but got Whatever (*)"

[19:22] *** SCHAPiE left
[19:23] <netrino> I wonder if it might be related to the ssl library verseion

[19:23] <irced> perhaps not the library version but instead that module OpenSSL may need to be installed

[19:23] <netrino> irced: and connection succeeded with plain ws

[19:23] <irced> another thing to which i cannot speak (but i know openssl in C)

[19:24] <netrino> irced: OpenSSL is a depedency, it is installed

[19:25] <netrino> and it's the same version as on my local machine, where everything just works

[19:25] <irced> netrino: oh

[19:25] <netrino> different OSs tho

[19:26] <squashable6> 🍕 FCO++ created wiki page “$*RED DEBUG RESPONSE”: https://github.com/FCO/Red/wiki/%24%2ARED-DEBUG-RESPONSE

[19:26] <irced> netrino: i don't know how cro calls bio but I suspect it's via a shared library. perhaps you don't have the openssl library? (perhaps cro needs the headers as well, that is the dev package? but i don't know much about native call atm)

[19:27] *** SCHAPiE joined
[19:27] <netrino> irced: i'll look into it now

[19:27] <squashable6> 🍕 FCO++ edited wiki page “How to”: https://github.com/FCO/Red/wiki/How-to

[19:28] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[19:29] *** krychu joined
[19:29] <irced> netrino: curl works and probably uses the openssl shared library but it won't hurt to make sure that libssl*so* is on the machine

[19:31] <irced> netrino: and your suggestion about it being a version issue could lead you somewhere

[19:34] <netrino> irced: everything seems to be in order. Thanks for helping me out, i'll try to dig more on this issue. But this is a bit strange. cause in my app i doesn't fail on connection, it actually receives some data from websocket server as i understand but hangs on sending. Might be not even related to SSL, i've read about some deadlock issue on cro::websocket github, but figured it probably should be the same on my

[19:34] <netrino> local machine too. 

[19:34] <netrino> Just spent whole day without any success, needed some fresh perspective :)

[19:35] *** [particle] left
[19:36] <irced> so i modified my gather code this way to at least get the first in the sequence: my $seq := gather { state $prev=0; while not test($previous) { $previous++; } take $previous; }

[19:36] *** [particle] joined
[19:36] <irced> netrino: good luck. maybe consider testing some more with the echo server

[19:36] <irced> hth

[19:36] <netrino> irced: Yeah, thanks, i'll try that

[19:39] <irced> m: my &test = -> m { ($a * $m)%$c == $b }; my $seq := gather { state $prev=0; $prev++ until test($prev); take $prev++; }

[19:39] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/BsxImpAh4C␤Variable '$a' is not declared␤at /tmp/BsxImpAh4C:1␤------> 03my &test = -> m { (08⏏04$a * $m)%$c == $b }; my $seq := gather {␤»

[19:40] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> m { ($a * $m)%$c == $b }; my $seq := gather { state $prev=0; $prev++ until test($prev); take $prev++; }

[19:40] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/JlnebdZwzh␤Variabl…»

[19:40] <evalable6> irced, Full output: https://gist.github.com/018206d2bd6383ff243e75f0f946b6f8

[19:40] *** [particle]1 joined
[19:40] *** [particle] left
[19:41] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather { state $prev=0; $prev++ until test($prev); take $prev++; }

[19:41] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «»

[19:41] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather { state $prev=0; $prev++ until test($prev); take $prev++; }; say $seq[0];

[19:41] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «805␤»

[19:41] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather { state $prev=0; $prev++ until test($prev); take $prev++; }; say $seq[1];

[19:41] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «Nil␤»

[19:42] *** [particle] joined
[19:42] <irced> how can i change this code to be an infinite list of solutions ?

[19:43] <irced> if it helps, i am trying to find solutions to the equation a * x = b (mod c) # solve for x

[19:44] <irced> i expected in the least that every subsequent call to $seq would give me the next solution

[19:44] <timotimo> netrino: did you already try setting CRO_TRACE in the environment?

[19:44] * irced rethinks.

[19:45] <timotimo> also, it could be you're running into a bug in the HTTP2 implementation in cro::http

[19:45] <netrino> timotimo: I did not, but i will try now

[19:45] *** [particle]1 left
[19:45] <timotimo> so maybe try the latest version off of github or pass :http<1.1> in the right spot to turn http2 off

[19:45] <netrino> Also, weirdly, i've tried again and now it doesn't complain about SSL and connection to wss works just fine

[19:45] <netrino> timotimo: yeah, i checked that WebSocket specifies http<1.1>

[19:46] <timotimo> oh, i didn't know that

[19:46] <netrino> timotimo: and the bug in http2 reproduced on my local machine, if websocket were to use it, it wouldn't work there too

[19:46] <SmokeMachine> irced: I've being playing with something like that...

[19:47] <irced> SmokeMachine: you getting into crypto too you mean ? 😃

[19:48] <netrino> Woah, CRO_TRACE resulted in a huge output :O gonna analyse it now

[19:49] <irced> SmokeMachine: or more generally you have been playing with sequences of solutions to equations ?

[19:50] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather { while 1 { state $prev=0; $prev++ until test($prev); take $prev++; }; }; say $seq;

[19:50] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(805 2822 4839 6856 8873 10890 12907 14924 16941 18958 20975 22992 25009 27026 29043 31060…»

[19:50] <evalable6> irced, Full output: https://gist.github.com/0b19a952fe6465a93c5c22de1252ed10

[19:50] <irced> whoa, that didn't work on my side when i returned it from a subroutine

[19:50] <SmokeMachine> irced: I've being playing with equations and in equations...

[19:51] <irced> SmokeMachine: that's equazy!

[19:52] <netrino> Interesting, getting this in trace "Cro::WebSocket::MessageSerializer QUIT Don't know how to jsonify Perl"

[19:53] <irced> well what do you know, must have been a typo before it's working now

[19:53] <irced> err, at least it's returning a sequence

[19:54] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather { while 1 { state $prev=0; $prev++ until test($prev); take $prev++; }; }; say $seq[1];

[19:54] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «2822␤»

[19:54] <irced> wtf, again a discrepency

[19:54] * irced looks at his side.

[19:54] * irced again.

[19:55] <SmokeMachine> irced: it was something like this: https://www.irccloud.com/pastebin/XRtli3Z8/

[19:55] *** perlbot left
[19:55] *** simcop2387 left
[19:57] <irced> SmokeMachine: Constraint dunno about it

[19:57] *** rindolf joined
[19:57] <SmokeMachine> irced: That's the module I was writing... (terrible name...)

[20:00] <SmokeMachine> irced: https://www.irccloud.com/pastebin/Lst9P361/

[20:00] *** perlbot joined
[20:01] <SmokeMachine> squashable6: status

[20:01] <squashable6> SmokeMachine, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈15 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[20:01] <squashable6> SmokeMachine, Log and stats: https://gist.github.com/3f331cbdb51f5ad629e2be4c94e4e00a

[20:01] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather { while 1 { state $prev=0; $prev++ until test($prev); take $prev++; }; }; say $seq[1];

[20:01] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «2822␤»

[20:01] *** simcop2387 joined
[20:01] <irced> when i run that code from a script it gives me the first 6 solutions instead of just the second one

[20:04] <irced> any ideas on why?

[20:07] <irced> oh my bad

[20:08] <irced> stdout had some extra fluff in my code, it works the same now

[20:10] <SmokeMachine> https://twitter.com/smokemachine/status/1170066565880012800

[20:10] <netrino> Okay, apparently, it just crashed on JSON serialisation and swallowed the error leaving the session in incomplete state. And the reason why it crashed on linux and didn't on macOS? Apparently, because on linux $*PERL variable is more complex and can not be serialised to JSON using JSON::Fast facilities :\

[20:11] *** Black_Ribbon joined
[20:12] <irced> netrino: bummer

[20:12] <irced> netrino: thanks for sharing

[20:12] <MasterDuke> timotimo: ^^^

[20:13] <netrino> thanks for helping, irced , timotimo :) CRO_TRACE is really nice thing to have

[20:13] <irced> netrino: i am sure you will find a viable workaround or now that you have mentioned a bug here that time will heal

[20:15] <netrino> irced: yeah, now that problem is known the solution should be relatively easy

[20:19] *** MasterDuke75 joined
[20:22] *** MasterDuke left
[20:23] <irced> here is my slightly refactored but still a ways to go code on my solve for x sequence...

[20:28] <squashable6> 🍕 FCO++ edited wiki page “$*RED DEBUG”: https://github.com/FCO/Red/wiki/%24%2ARED-DEBUG

[20:30] <squashable6> 🍕 FCO++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[20:30] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather loop { state $prev=0; take $prev if test($prev); $prev++ }; say $seq[1];

[20:30] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «2822␤»

[20:30] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather loop { state $prev=0; take $prev if test($prev); $prev++ }; say $seq;

[20:30] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(805 2822 4839 6856 8873 10890 12907 14924 16941 18958 20975 22992 25009 27026 29043 31060…»

[20:30] <evalable6> irced, Full output: https://gist.github.com/be3764cdd92ea2c4fb12ae1fd2a20368

[20:32] <irced> probably can size it down 😃

[20:32] <squashable6> 🍕 FCO++ created wiki page “$*RED DEBUG AST”: https://github.com/FCO/Red/wiki/%24%2ARED-DEBUG-AST

[20:38] <squashable6> 🍕 FCO++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[20:39] *** go|dfish joined
[20:39] <irced> m: my $a=197; my $b=1259; my $c=2017; my &test = -> $m { ($a * $m)%$c == $b }; my $seq := gather for 1 .. * { take $_ if test($_) }; say $seq;

[20:39] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(805 2822 4839 6856 8873 10890 12907 14924 16941 18958 20975 22992 25009 27026 29043 31060…»

[20:39] <evalable6> irced, Full output: https://gist.github.com/47dfaceeec2defe51213e6cf49fcdf92

[20:41] <squashable6> 🍕 FCO++ created wiki page “$*RED COMMENT SQL”: https://github.com/FCO/Red/wiki/%24%2ARED-COMMENT-SQL

[20:43] *** rabbit0 left
[20:54] *** maettu left
[20:54] *** maettu joined
[20:56] *** robinsmidsrod joined
[20:59] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[20:59] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[21:01] <squashable6> 🍕 FCO++ edited wiki page “$*RED DEBUG RESPONSE”: https://github.com/FCO/Red/wiki/%24%2ARED-DEBUG-RESPONSE

[21:08] *** [particle]1 joined
[21:10] *** [particle] left
[21:14] *** [particle] joined
[21:17] *** [particle]1 left
[21:20] *** maettu left
[21:25] *** maettu joined
[21:28] <squashable6> 🍕 FCO++ edited wiki page “Samples”: https://github.com/FCO/Red/wiki/Samples

[21:29] <SmokeMachine> is this a good example of Red usage? https://github.com/FCO/BlogSchema

[21:33] <squashable6> 🍕 FCO++ created wiki page “Complements”: https://github.com/FCO/Red/wiki/Complements

[21:34] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[21:43] <timotimo> netrino: yeah, JSON::Fast used to serialize the Perl object as { "0" => null } or so

[21:44] <netrino> timotimo: I assume it was fixed in 0.10? Encountered another problem caused by JSON::Fast switching to enum keys instead of values, reverted back to 0.9 now it finally works!

[21:44] <timotimo> are you working on a discord library?

[21:44] <netrino> timotimo: No, just using it

[21:44] <timotimo> OK

[21:44] <timotimo> because the devs of that one discord library had the exact same two problems

[21:45] <netrino> :D oh

[21:47] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[21:48] <squashable6> 🍕 FCO++ edited wiki page “Ecosystem”: https://github.com/FCO/Red/wiki/Ecosystem

[21:51] *** krychu left
[22:01] *** maettu left
[22:01] *** maettu joined
[22:23] *** Xliff joined
[22:24] *** reach_satori_ joined
[22:40] *** rindolf left
[22:40] <AlexDaniel> SmokeMachine: maybe it's better to have a single page with a list of variables

[22:41] <SmokeMachine> AlexDaniel: Good Idea...

[22:53] <squashable6> 🍕 FCO++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[22:53] <squashable6> 🍕 AlexDaniel++ opened pull request “Small whitespace fixes”: https://github.com/FCO/Red/pull/349

[22:53] <squashable6> 🍕🍕🍕  First contribution by AlexDaniel++! ♥

[22:55] <SmokeMachine> AlexDaniel: is it better this way? https://github.com/FCO/Red/wiki/Dynamic-Variables

[22:57] <squashable6> 🍕 FCO++ wrote a comment on “Small whitespace fixes”: https://github.com/FCO/Red/pull/349#issuecomment-529040169

[22:57] <squashable6> 🍕 FCO++ merged pull request “Small whitespace fixes”: https://github.com/FCO/Red/pull/349

[22:58] <SmokeMachine> AlexDaniel++ thanks!

[22:59] <AlexDaniel> SmokeMachine: yeah, I think it's better!

[23:01] <AlexDaniel> SmokeMachine: small problem, I can't edit the wiki

[23:01] <AlexDaniel> SmokeMachine: can you uncheck “Restrict editing to users in teams with push access only” option in the settings?

[23:02] <Xliff> \o

[23:02] <Xliff> timotimo: You around?

[23:02] <SmokeMachine> AlexDaniel: I'm search for it...

[23:02] <timotimo> o/

[23:03] <Xliff> timotimo: If I have a CStruct with another CStruct in it via HAS. The member CStruct is not ever supposed to be a type-object, right?

[23:03] <SmokeMachine> AlexDaniel: Done!

[23:03] <timotimo> yeah, shouldn't

[23:03] <AlexDaniel> SmokeMachine: yeah, it's better now!

[23:03] <SmokeMachine> AlexDaniel: could you test it, please?

[23:04] <Xliff> https://github.com/Xliff/p6-GStreamer/blob/master/lib/GStreamer/Raw/Types.pm6#L1365

[23:04] <Xliff> If I run t/06-pad-caps.t, that's the error message I get.

[23:05] <Xliff> Actually, now that I'm looking at it. Seems the whole CStruct is null....

[23:05] <squashable6> 🍕 AlexDaniel++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[23:06] <Xliff> timotimo: $.static_caps.GStreamer::Raw::Types::GstStaticCaps = Nil

[23:06] <squashable6> 🍕 AlexDaniel++ created wiki page “_Footer”: https://github.com/FCO/Red/wiki/_Footer

[23:08] <AlexDaniel> mst: please surprise me :) https://colabti.org/irclogger/irclogger_log/perl6?date=2019-08-24#l233

[23:08] <Xliff> timotimo: Almost looks like the HAS is getting ignored.

[23:08] <AlexDaniel> mst: https://github.com/FCO/Red/issues?q=is%3Aissue+is%3Aopen+label%3ADocumentation

[23:09] <AlexDaniel> SmokeMachine: oh, so the issue editing script worked? :)

[23:10] <AlexDaniel> or did you just edit it all manually? :)

[23:11] <SmokeMachine> AlexDaniel: I did try, but I'm having some problem on my mac... it was by hand...

[23:11] <AlexDaniel> aww

[23:11] <SmokeMachine> AlexDaniel: for some reason, my zsh was killing it...

[23:14] <SmokeMachine> AlexDaniel: but I was thinking on PRing this https://www.irccloud.com/pastebin/xVem1TdX/

[23:16] <AlexDaniel> SmokeMachine: sure!

[23:17] <SmokeMachine> AlexDaniel: but I couldn't test, so I didn't...

[23:18] <SmokeMachine> s/test/test it/

[23:24] *** Ven`` left
[23:37] *** wamba left
[23:49] *** ravenousmoose joined
[23:51] *** wildtrees left
[23:54] *** ravenousmoose left
[23:54] <irced> how would one create a sequence to solve for two variables as in 65537x + 3511y = 1 for all integer values (including -Z and 0) as a sequence?

[23:54] <squashable6> 🍕 FCO++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[23:55] <irced> basically i need to test over two infinite ranges

[23:58] <timotimo> given any x you get a set of ys for free

[23:58] <timotimo> you want to "diagonalize" the space

[23:58] * irced feels a ping pong knocking off the insides of his skull.

[23:58] <timotimo> imagine your x and y are coordinates, you'd be spiraling outwards from 0 through all valid values

[23:59] <timotimo> that way you'll get a good distribution of all manner of values

[23:59] <irced> in perl6 please

[23:59] * irced chuckles

[23:59] <timotimo> nah, i'm going to bed

[23:59] <irced> i follow you tho, thanks

