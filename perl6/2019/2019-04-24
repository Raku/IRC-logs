[00:21] *** lichtkind left
[00:25] *** hahainte1net is now known as hahainternet

[00:27] *** w_richard_w joined
[00:29] *** zacts joined
[00:41] *** fake_space_whale joined
[01:04] *** buffet_ joined
[01:06] *** buffet left
[01:09] *** netrino left
[01:17] <lucs> Darn oh darn (pre-edited paste incoming:)

[01:17] <lucs> Darn oh darn (pre-edited paste incoming:)                                                                          

[01:17] <lucs> Last Friday, after years of building my perl6 from the repo's latest source, and panda/zef'ing the modules I want (

[01:17] <lucs> Absolutely perfect bad timing :)                                                                                   

[01:17] <lucs> Now I have a project that is in a kind of limbo.                                                                   

[01:17] <lucs> I thought things might have been back to normal today, but it appears that the problem might be more serious than r

[01:17] <lucs> Best of luck to moritz et al. in fixing things.                                                                    

[01:17] * lucs goes back to drinking beer and listening to Schubert/Richter.                                                  

[01:17] <lucs> Bleah! Awful paste.

[01:18] <lucs> I thought things might have been back to normal today, but it appears that the problem might be more serious than requiring just a reboot, eh (else we'd have everything back, right?).

[01:18] <lucs> Last Friday, after years of building my perl6 from the repo's latest source, and panda/zef'ing the modules I want (worked pretty much flawlessly), I had a need for something more stable, so I went to get a Rakudo Star.

[01:18] <lucs> (reorder bitte)

[02:02] *** kktt joined
[02:02] *** vrurg left
[02:03] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:18] *** ToddAndMargo joined
[02:19] <ToddAndMargo> Help!  Anyone on newbie duty tonight?

[02:19] <ToddAndMargo> I just upgraded from       rakudo-pkg-Fedora29-2018.11-01.x86_64.rpm  to      rakudo-pkg-Fedora29-2019.03.1-01.x86_64.rpm   and now -M does n ot work in my one liners or my programs

[02:19] <ToddAndMargo> $ perl6 -M/home/CurlUtils.pm6 -e 'say "x";' ===SORRY!=== Could not find /home/CurlUtils.pm6 at line 1 in:     inst#/home/tony/.perl6     inst#/opt/rakudo-pkg/share/perl6/site     inst#/opt/rakudo-pkg/share/perl6/vendor     inst#/opt/rakudo-pkg/share/perl6     ap#     nqp#     perl5#

[02:20] <ToddAndMargo> $ perl6 -M/home/CurlUtils -e 'say "x";' ===SORRY!=== Could not find /home/CurlUtils at line 1 in:     inst#/home/tony/.perl6     inst#/opt/rakudo-pkg/share/perl6/site     inst#/opt/rakudo-pkg/share/perl6/vendor     inst#/opt/rakudo-pkg/share/perl6     ap#     nqp#     perl5#

[02:20] <ToddAndMargo> $ ls CurlUtils* CurlUtils.pm6

[02:23] <ToddAndMargo> This has broken virtually everything I have writen

[02:27] *** zacts left
[02:29] *** w_richard_w left
[02:32] *** w_richard_w joined
[02:32] *** w_richard_w left
[02:38] *** molaf joined
[02:41] *** molaf left
[02:44] *** lookatme_q left
[02:46] *** xiaoyafeng joined
[02:53] *** zacts joined
[02:55] <ugexe> I'm surprised that ever worked. -M does not do `require`, it does `use`. And you cannot `use` a path (although you can `require` one)

[02:57] <ugexe> you could do `perl6 -I /home -M CurlUtils -e '...'` but you should really keep your modules in their own directory

[02:57] <ToddAndMargo> qill do

[02:58] <ToddAndMargo> $ perl6 -I /home/linuxutil -M CurlUtils -e 'say "x";' ===SORRY!=== Could not find CurlUtils at line 1 in:     file#/home/linuxutil ...

[02:58] <ToddAndMargo> It says it can not find it in `file#/home/linuxutil`.  It is in "directory" not "file"

[02:59] <ugexe> if i create that same directory and put a file called 'CurlUtils.pm6' in it it works for me

[03:00] <ToddAndMargo> $ perl6 -v This is Rakudo version 2019.03.1 built on MoarVM version 2019.03

[03:00] <ToddAndMargo> This all worked for me int the prior version.  What is your version?

[03:01] <ugexe> what worked before was not defined behavior. if someone told you to use -M with an absolute file path they were wrong

[03:01] <ugexe> its still not clear to me how it ever worked

[03:02] <ugexe> and i have all versions available to me

[03:03] <ugexe> did you actually put the file CurlUtls.pm6 inside /home/linuxutil ?

[03:04] <ToddAndMargo> `-M./CurlUtils`, `-M CurlUtils`,` -M/home/linuxutil/CurlUtils`, `-MCurlUtils` does not work

[03:04] <ToddAndMargo> $ ls /home/linuxutil/CurlUtils.pm6 /home/linuxutil/CurlUtils.pm6

[03:04] <ToddAndMargo> yes

[03:04] <ToddAndMargo> `file#/home/linuxutil` is not the name of the file but the directory!  Did I just find a bug?

[03:05] <ugexe> no

[03:07] <ToddAndMargo> what version are you on?

[03:08] <ugexe> i have every version

[03:08] <ugexe> -M $absolute-file-path has *never* worked

[03:09] <ugexe> i just tested from 2017.03 to 2019.03

[03:09] <ugexe> so you must be mistaken 

[03:10] <ToddAndMargo> testing something

[03:13] <ToddAndMargo> lets move off of -M

[03:13] <ToddAndMargo> # cat eraseme.pl6 #!/usr/bin/env perl6 use lib '/home/linuxutil'; use PrintColors;

[03:13] <ToddAndMargo> # eraseme.pl6 ===SORRY!=== Could not find PrintColors at line 3 in:     file#/home/linuxutil

[03:14] <ToddAndMargo> This was a three liner.  Still it thinks /home/linuxutil is a file

[03:15] <ToddAndMargo> This has broken ever single program I have written with a custom module. I am in MAJOR trouble

[03:23] <ugexe> what files are in "/home/linuxutil"? and stop editing the path i know your home path is tony from the error messages and omitting information is only going to make this harder for me to figure out what is a mistake and what is an error

[03:24] <ToddAndMargo> linuxutil contain all my pl6 and pm6 programs that I have written.   "tony" is one of the user names on my machine, along with "todd" and "bozo"

[03:25] <ugexe> you need to be more precise with your answer

[03:25] <ToddAndMargo> $ eraseme.pl6 ===SORRY!=== Could not find PrintColors at line 3 in:     file#/home/linuxutil/*     inst#/home/tony/.perl6     inst#/usr/lib64/perl6/site     inst#/usr/lib64/perl6/vendor     inst#/usr/lib64/perl6     ap#     nqp#     perl5#

[03:25] <ugexe> what files are in /home/linuxutil specifically

[03:26] <ToddAndMargo> What information did I omit that you need?

[03:27] <ugexe> i'm going to bed in a few minutes, you can tell me the files if you want

[03:29] <ToddAndMargo> all my *.pl6 and *.pm6 files.  Would a directory listing help?

[03:29] <ugexe> yes

[03:31] <ToddAndMargo> http://vpaste.net/Gzgpa

[03:31] <ugexe> ok here is the problem

[03:32] <ugexe> there is a META6.json file. *if* the directory pointed at by file#/home/linuxutil has a META6.json it will only consider files that are listed inside of it

[03:32] <ugexe> you can either delete that META6.json, or move it into its own folder with whatever files it is associated with

[03:33] <ToddAndMargo> $ gls meta META6.json.000 [tony@rn6 linuxutil]$ eraseme.pl6 ===SORRY!=== Could not find PrintColors at line 3 in:     file#/home/linuxutil/*     inst#/home/tony/.perl6     inst#/usr/lib64/perl6/site     inst#/usr/lib64/perl6/vendor     inst#/usr/lib64/perl6     ap#     nqp#     perl5#

[03:33] <ToddAndMargo> No joy

[03:34] <ugexe> you still have to -I /home/linuxutil

[03:34] <ToddAndMargo> Wait.  I made a booboo.

[03:34] <ugexe> the * yeah

[03:34] <ToddAndMargo> I still had `/*` in the eraseme test

[03:35] <ToddAndMargo> Everything is working correctly now.  I owe you one!

[03:36] <ToddAndMargo> Well, now back to -M

[03:36] <ToddAndMargo> $ perl6 -MCurlUtils -e 'say "x";' ===SORRY!=== Could not find CurlUtils at line 1 in:     inst#/home/tony/.perl6     inst#/usr/lib64/perl6/site     inst#/usr/lib64/perl6/vendor     inst#/usr/lib64/perl6     ap#     nqp#     perl5#

[03:36] <ToddAndMargo> hwo do I fix -M

[03:36] <ToddAndMargo> how do I fix -M?

[03:39] <ugexe> ...again you still have to -I /home/linuxutil

[03:40] <ToddAndMargo> That worked.  What is the dirrerence between -M and -I.  Also is there a list of these somewhere?  

[03:41] <ugexe> -I is like “use lib ‘...’” and -M is “use ...”

[03:41] <ToddAndMargo> Okay.  I just check my one liners notes.  

[03:42] <ToddAndMargo> $ perl6 -I. -MRunNoShell -e '

[03:42] <ToddAndMargo> I totally missed the -I

[03:44] <ToddAndMargo> Thank you!  I looked all over the perl6.org docs and did not find a reference to the command liek switches.  Am I blind?

[03:50] *** molaf joined
[03:51] *** sauvin joined
[03:54] <ToddAndMargo> Something else broke. Perl6 now thinks my Pause.pm6 is perl5.

[03:54] <ToddAndMargo> $ perl6 -I. -MPause -e 'Pause("abc");' ===SORRY!=== Error while compiling -e This appears to be Perl 5 code. If you intended it to be Perl 6 code, please use a Perl 6 style declaration like "unit package Foo;" or "unit module Foo;", or use the block form instead of the semicolon form. at -e:1 ------> package Pause;⏏<EOL>

[03:55] <ToddAndMargo> If I load it up to vpate, would someone take a look?

[03:58] <ToddAndMargo> would this be doing it?  `use Term::termios;`

[04:01] <ToddAndMargo> $ perl6 -c Pause.pm6 Syntax OK

[04:01] <ugexe> The error has told you exactly what is wrong and how to fix it

[04:02] <ugexe> package Pause; — wrong. unit package Pause; — correct 

[04:02] <ugexe> I’m not sure how that ever worked for you prior either 

[04:06] *** kaare_ left
[04:06] <ToddAndMargo> THe name of the moduel is Pause.pm6 and the exported sub is also called pause.  Let me change its name

[04:06] *** kaare__ joined
[04:06] *** adu_ joined
[04:06] *** adu left
[04:06] *** adu_ is now known as adu

[04:07] <ToddAndMargo> make no difference.  I do ot hae the text "package" anywhere in my pm6.  Would a vpaste help?

[04:10] <ToddAndMargo> wait a minute ...

[04:11] *** kktt left
[04:11] <ToddAndMargo> Put `unit module Pause` at the top.  Made no difference

[04:12] <ToddAndMargo> None of my other (working) modules have this at the top

[04:12] <ToddAndMargo> $ perl6 -I. -MPrintColors -e 'PrintRed("abc\n");' abc

[04:13] *** molaf left
[04:14] <ToddAndMargo> Why does this work: $ perl6 -c Pause.pm6 Syntax OK

[04:15] <ugexe> I would suggest being more careful. You claim there is no text “package” in your pm6, but there very clearly is as shown in the error 

[04:15] <ugexe> at -e:1 ------> package Pause;⏏<EOL>

[04:15] <ugexe> The compiler is not just making up that code 

[04:17] <ToddAndMargo> Let me do another text search.  The word `package` does not appear in my code.  Would a vpaste help?

[04:18] <ToddAndMargo> "Pause" does.  I changed the name.  No joy, so I changed it back.

[04:21] <ToddAndMargo> Ah <explitive deleted> !!!!  Figured it out.  The new update of perl6 can not tell the difference between "Pause.pm" and "Pause.pm6"   AAAAHHHHH   Ths is goig to really hurt me.  

[04:21] <ToddAndMargo> How do I fix this besides renaming all my Perl 5 moduels?

[04:24] <ToddAndMargo> Would yo report this as a bug against $ perl6 -v This is Rakudo version 2019.03 built on MoarVM version 2019.03 implementing Perl 6.d.

[04:25] <ugexe> Don’t put perl5 and perl6 modules in the same directory 

[04:26] <ToddAndMargo> That is going to hurt me bad.  Is there a way to specify the extension in "pm6" and not "pm"?

[04:27] <ugexe> You are going to have to organize your project properly.

[04:28] <ugexe> we’ve already worked through two issues caused by that. This is yet anktger

[04:28] <ugexe> another 

[04:29] <ugexe> anyways im

[04:29] <ugexe> going to bed

[04:29] <ToddAndMargo> This is a revison regression.  Will you put it on the list to fix?

[04:31] <ugexe> no. long story short i don't agree with that based on the inconsistencies it involves. and i say this as the person who would be responsible for deciding how to "fix" it

[04:33] <ugexe> someone else is welcome to put it on the list, but i would end up arguing against the "fix"

[04:34] *** zacts left
[04:34] <ToddAndMargo> From my stand point, it use to work, now it does not.  It should be fixed, not have everyone tear through hundered of programs

[04:34] <ugexe> note that the behavior you request is not specced 

[04:34] <ToddAndMargo> Thank you for all the help!

[04:35] <ugexe> you were relying on unspecced and undocumented behavior

[04:35] <ToddAndMargo> Does the spec say to first read "pm" and then "pm6"?

[04:35] <ugexe> no, it does not say what it must do

[04:36] <ugexe> if i had my way .pm would not count as a perl6 module period

[04:36] <ToddAndMargo> Jsut an idea, but how about allowing for specifying the extension?  `use CrulUtils.pm6`

[04:36] <ugexe> require CurlUtils.pm6

[04:37] <ugexe> require "CurlUtils.pm6".IO; or some such

[04:37] <ToddAndMargo> RFE: only read "pm6", unless an extention to be added is added to the name.

[04:38] <ugexe> all sorts of magical rules only make it harder for people to know wtf is going on

[04:40] <ToddAndMargo> Judging by the confusion it just cause me (an amature) and you (a genius), not making this a hard and fast rule will cuase tons of confusion down the road.  And most of your P6 customers are coming fom p5 too!

[04:41] <ugexe> it is confusing for you because you have one directory with like 50 scripts, 10 perl6 modules, 10 perl  modules, and no organization.

[04:42] <ugexe> if you organized things just a bit things would simply fall into place

[04:42] <guifa> Is there a way to autovivify  hashes overriding scalar values that may be present?

[04:44] <guifa> p6: my %h = (a => 1); %h<a><d> = 2;

[04:44] <evalable6> guifa, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) Type Int does not support associative indexing.␤  in block <unit> at /tmp/JZRSlpVrBO line 1␤␤»

[04:44] * guifa knows why it’s happening just curious if there’s a way to avoid it particularly in heavily nested hashes

[04:46] <ToddAndMargo> And who coming from Perl 5 is going to know this when it is PRESUMED that pm6 is for Perl 6 adn pm5 is for Perl 5?  Not to mention the this is a regresson.

[04:47] <ugexe> if you organized your perl 5 modules in idiomatic perl 5 way you would also not have this problem

[04:48] *** aindilis left
[04:49] <ToddAndMargo> meaning, move them to a perl5 module directory.  AND REWRITE TONS of previously functioning code.  It is a good idea, but Perl 6 should also be fixed.

[04:51] <ugexe> if moving the modules locations requires rewriting TONS of code, there is something seriously wrong

[04:52] <ToddAndMargo> I have to go through each perl5 program one at a time and change the custom module directory.  And not just on my machine either!

[04:53] <ugexe> it would be smarter to use `perl -I /new/path myscript.pl`

[04:53] <ugexe> this requires changing no code

[04:54] <ToddAndMargo> I only use the one liners as tests.  My programs are *considerably* longer.

[04:54] <ugexe> so?

[04:54] <ugexe> that changes nothing with what i showed

[04:56] <ToddAndMargo> Still a pain in the neck.  Did you also notice a ton a bash scripts in that directory?  pm6 worked, now it doe not.  I am now arguing that what yo say is not a good idea, but the regression should be fixed and everyone working in both Perl 5 and Perl 6 should not have to going and change their stuff.

[04:57] <ugexe> and certain programs worked until hash randomization was added

[04:57] <ugexe> progress will not always work out well when you are relying on buggy behavior

[04:59] <ToddAndMargo> You need to specifically specify in the specification what the extension is.

[04:59] <ugexe> if you insist on having the terrible project structure then indeed add a META6.json and add each file to the META6 provides

[05:00] <ToddAndMargo> Just fix it

[05:00] <ugexe> no

[05:01] <ToddAndMargo> Pretty please?

[05:02] *** fake_space_whale left
[05:03] <ToddAndMargo> 60 p6 program to fix.  Bummer

[05:03] <elcaro> guifa: What do you want to happen to the `1` value in your hash. you just wan't to overwrite it?

[05:06] <elcaro> guifa: I don't think there's a simpler way than having to check what's at that key first, eg: if %h<a> ~~ Associative { %h<a><d> = 2 }

[05:07] <guifa> elcaro: Yeah, that’s what I ended up doing

[05:07] <guifa> It’s not the worst subroutine in the world to have, but an :overwrite adverb would be cool

[05:08] <guifa> https://tio.run/##XY/BDoIwDIbP21P0QgCDJGriwQWjN19jaM2IiGYFCSHw6rMMTiRNm/z9@rf9oi2PzlGTA@knRoHRZBLYXF7YUQy9FO8OAgOnDHxLSdGaokTwAJxhNzGiqUokYqT3empQPwYYR7gSfe6FrosfelCsEPa9sW1aYcvWYpATMW9bODLFs2adw2Ld2Gpr29UiJQcp5zsziDRkfFYC@VT3sZJy@SyBUIec8jBm7uAb05By7g8

[05:09] *** xinming_ joined
[05:12] *** xinming left
[05:14] <elcaro> I was tackling something maybe similar recently, putting text into a nested data structure based on the text indentation

[05:15] <elcaro> This didn't solve my problem (and doesn't solve yours) but i came up with something while i was mucking around. dunno if it's any use at all, but it's interesting... https://gist.github.com/0racle/e074c2d6634458bf43a1c79a4030486c

[05:16] *** Hotbees joined
[05:18] <guifa> The issue I’ve come across is that I’m importing some cascading-ish files.

[05:18] <guifa> (loading one, saving, then loading another one on top of the first, then saving as a separate file)

[05:20] <guifa> Some of the values are aliases that are saved as scalars because bound values don’t dump too well. But the overlayed file might define concrete values (in a more nested hash structure) and that requires clearing out the alias scalar

[05:22] *** rba left
[05:25] <holyghost> guifa : AFAIK from e.g. guile, you cannot just bypass types in a typed or untyped language

[05:26] <holyghost> thus your override keyword

[05:28] <holyghost> you cannot dispatch an untyped syntax as it is some sort of type inside your interpreter

[05:28] <holyghost> you can change them at will though

[05:28] *** zacts joined
[05:31] <guifa> Yeah.  I mean I know when you do {…}{…}{…} you’re technically doing three separate method calls that are chained, rather than a single call that knows you’re asking for something three levels deep.  Hence the issue that for most people rarely comes up

[05:33] <holyghost> this is daft at runtime

[05:33] *** ToddAndMargo left
[05:34] <holyghost> id in objective C might do it

[05:34] <elcaro> guifa: Yeah my problem was different, so I'm not sure how much of it maps to your problem, but shoehorning one of my solutions onto yours... i basically stored all my "values" as keys to a new nested hash

[05:34] <elcaro> like so: https://tio.run/##VY7RCoIwFIbvz1P8FxM1LKmgi8aky15jwmSQmWxaiPjsax6K6MDY4dt3/p3euPYUgh9r9HqwmbDa2wLiqdsCm8vNTD7HTIh1nyCcaaDAkmTYPBzYwraCiM1HXovts@J7Xt8WlKVCkq3pUBWuMWbXmVfOI0s83DgzjK7jMVqI4r@JlSDiBZO43b5AqtNc/sghkvqPHNn5YvKaU0J4Aw

[05:35] <elcaro> but for my problem, i only cared about whether a key existed, so values were not so important for my task

[05:39] <holyghost> this is something as access in UNIX, which you do not have to do when opening a file

[05:39] <holyghost> it depends on the system you want, if you lookup a key you should type or not

[05:41] <holyghost> If you shift keys you can use them in a typed variable for e.g. storing a string (char *) as an integer

[05:42] <holyghost> there's probably a ctach to bypass the type, bu I do not know it, as you were searchinhg for presumably

[05:42] <holyghost> s/ctach/catch

[05:46] <holyghost> The above char * routine is probably not done at runtime

[05:47] <holyghost> you can write your own with the basics I guess

[05:47] <holyghost> The above is fast code

[05:48] *** rba joined
[05:51] <holyghost> Probably the key of your hash is already typed by its value data structure

[05:51] <holyghost> which is probably how it works

[05:56] <holyghost> access by value or reference e.g. for a hash

[05:56] <holyghost> you only have 3 basic types ($,@,%) in perl6 *lol*

[05:58] <holyghost> which you access at runtime but you do not have runtime code which changes type

[05:59] <holyghost> For elisp that would be the wrong thing to do

[05:59] <holyghost> So I am just talking emacs lisp and guile :-)

[06:06] <holyghost> rms wrote elisp this way and Wingo guile 2

[06:07] <holyghost> If you want an example, look at my forty-two.sf.net, a flight sim which uses guile 1.6 for scripted levels

[06:09] <holyghost> this would be libperl6.so

[06:10] <holyghost> which is of course ridiculous :-)

[06:14] <holyghost> IF you look at some tutorials of embedded guile, you can see a list processor system for types on scheme which is basically a non-typed language

[06:16] <holyghost> this should be the same for perl6 as you have features to change type 

[06:16] *** rba left
[06:20] *** rba joined
[06:25] *** xiaoyafeng left
[06:35] *** domidumont joined
[06:37] *** abraxxa joined
[06:52] *** ufobat__ joined
[06:54] <ufobat__> are there any news regarding the infrastructure outtage?

[06:54] <ufobat__> p6c.org is still unavailable?

[06:54] *** ufobat__ is now known as ufobat

[06:56] *** ufobat_ left
[07:09] *** ayerhart left
[07:10] *** ayerhart joined
[07:29] *** rba left
[07:29] *** rba joined
[07:31] *** patrickb joined
[07:38] *** jast left
[07:39] *** jast joined
[07:40] *** romanroman joined
[07:45] * lizmat hopes that moritz will be able to  give an update today

[07:56] *** lizmat left
[07:58] *** dakkar joined
[08:01] *** aindilis joined
[08:02] *** telex left
[08:03] *** telex joined
[08:04] *** zakharyas joined
[08:17] *** atroxaper joined
[08:24] *** rindolf joined
[08:26] *** robertle joined
[08:33] *** domidumont left
[08:34] *** domidumont joined
[08:36] <cpan-p6> New module released to CPAN! LogP6 (1.5.1) by 03ATROXAPER

[08:48] *** woolfy left
[08:49] *** Sharparam left
[08:49] *** lookatme_q joined
[08:49] *** Sharparam joined
[08:59] *** sena_kun joined
[09:05] <atroxaper> .tell lizmat You ask me about writing a blog post about LogP6. I did it if form of repository and step-by-step README. https://github.com/atroxaper/p6-LogP6-Blog-Example I do not know where can I post the readme as blog. Maybe you suggest me something.

[09:05] <yoleaux> atroxaper: I'll pass your message to lizmat.

[09:18] <moritz> weekly: https://github.com/atroxaper/p6-LogP6-Blog-Example#readme

[09:18] <notable6> moritz, Noted!

[09:31] *** rba left
[09:31] *** rba joined
[09:31] *** rba left
[09:34] *** rba joined
[09:40] *** rba left
[09:42] *** rba joined
[09:44] *** rba left
[09:45] *** rba joined
[09:52] *** squashable6 left
[09:54] *** SmokeMachine left
[09:54] *** squashable6 joined
[09:54] *** ChanServ sets mode: +v squashable6

[09:54] *** isimulate left
[09:54] *** mithaldu_ left
[09:54] *** SmokeMachine joined
[09:54] *** mithaldu_ joined
[09:56] *** isimulate joined
[10:25] *** domidumont left
[10:26] *** ayerhart_ joined
[10:26] *** ayerhart left
[10:27] *** ayerhart_ is now known as ayerhart

[10:43] *** dpk left
[10:43] *** yoleaux left
[10:56] *** dpk joined
[11:10] *** zakharyas left
[11:12] *** Black_Ribbon left
[11:14] *** atroxaper left
[11:14] *** mowcat joined
[11:15] *** AlexDani` left
[11:21] *** Manifest0 left
[11:26] *** Manifest0 joined
[11:31] *** lichtkind joined
[11:45] <rindolf> hi all! is the hosting fixed?

[11:46] <moritz> timotimo++ has provided emergeny hosting

[11:46] <moritz> and I have an appointment in the DC tomorrow

[11:46] <sena_kun> rindolf, hi. as far as I know, only domains DNS were updated to point to a backup IP. haven't heard news about the main server yet.

[11:47] <moritz> a simple power cycle hasn't helped :(

[11:47] <sena_kun> :(

[11:47] <moritz> so need to connect to the console tomorrow, and see if I can get any mileage out of it

[11:47] <sena_kun> moritz++

[11:48] <rindolf> moritz: thanks

[11:48] <lucs> moritz++ Good luck!

[11:49] <rindolf> https://docs.perl6.org/ seems to work now

[11:49] <rindolf> sena_kun: thanks

[11:49] <rindolf> timotimo: thanks

[11:54] *** netrino joined
[12:06] <timotimo> sena_kun++ # the actual emergency hosting provider

[12:08] * sena_kun .oO ( setting up all necessary sites is way harder than clicking a bunch of buttons in digitalocean admin panel. :p )

[12:13] *** domidumont joined
[12:13] <timotimo> but i'm not actually hosting anything :)

[12:14] <sena_kun> well, true

[12:14] <timotimo> stop trying to evade praise :D

[12:14] *** atroxaper joined
[12:14] <timotimo> had you not gone ahead setting the server up and beginning with the first site, i might not have found the motivation/energy/courage to go through with the whole thing

[12:16] <sena_kun> I can agree that work was done by people, including me, you, moritz and all who helped with that. Now we just have to discuss what can be done next to improve the state of things. :)

[12:17] <moritz> there are some things we could do

[12:17] <timotimo> we'll have one container (or a kubernetes swarm configuration or whatever) that lets us deploy one entire perl6.org and rakudo.org with one command

[12:18] <moritz> the first is to create some automation

[12:18] <moritz> I'm more old-school, I could help with Ansible playbooks, for example

[12:18] <timotimo> also, have a DNS server of our own that the current perl6.org defers to, that's what an NS entry does, right?

[12:18] <moritz> though I can try my limited container knowledge as well

[12:18] <sena_kun> timotimo, is it described at the ticket?

[12:18] <timotimo> no, i just made that up

[12:18] <moritz> timotimo: you mean a hidden primary?

[12:19] <timotimo> could be totally useless :)

[12:19] <timotimo> moritz: i don't know enough DNS to speak to that, but .. probably?

[12:19] <rba> I've some DNS hosting I can offer and some virtual servers.

[12:19] <timotimo> anything that lets more of us set the records in the DNS so we don't have to rely on someone else

[12:19] <rba> Still on the go to containers as well...

[12:19] <moritz> or we could ask TPF folks if there is a faster way to get access the zone editing stuff

[12:20] <timotimo> i won a devops book from oreilly during the gpw near köln :) :)

[12:20] <rba> moritz: I think this should be the first step anyway.

[12:20] <sena_kun> hmm, just me or github is down...

[12:20] <moritz> there are two things with DNS that could work: the first is to delegate the perl6.org to some DNS servers we control

[12:20] <timotimo> seems to work for me, sena_kun 

[12:20] <moritz> that would mean we need to provide two public DNS servers though

[12:21] <sena_kun> timotimo, I guess, anyway, I think you might find interesting to write out some of your thoughts at https://github.com/perl6/problem-solving/issues/9

[12:21] <moritz> the second is a hidden primary, meaning that whoever currently hosts the DNS for perl6.org continues to do so, but asks a DNS server under our control for the contents of the zone, periodically

[12:22] <sena_kun> so we could make a plan, document it somewhere, evaluate if it's any good or something, and next write & configure & host.

[12:24] *** robertle left
[12:25] <moritz> do we want a separate repo for that?

[12:26] <jnthn> Maybe start on problem-solving?

[12:26] <sena_kun> we can do, maybe for Dockerfiles or instructions or something, but I would expect writing out a plan firstly

[12:26] <sena_kun> jnthn, AlexDaniel++ already did, https://github.com/perl6/problem-solving/issues/9

[12:26] <tbrowder> \o/

[12:26] <sena_kun> I just try to encourage people to write their thoughts on this matter there. :)

[12:27] <tbrowder> i have two prs at pod::treewalker needing a fresh look

[12:28] *** kensanata joined
[12:39] *** yoleaux joined
[12:39] *** ChanServ sets mode: +v yoleaux

[12:40] *** v-zor joined
[12:47] <v-zor> Can't locate ExtUtils/Command.pm in @INC in install of 2018.10 on fedora

[12:48] <moritz> v-zor: you need to install the Perl 5 module that contains ExtUtils::Command, since Fedora ships with a crippled Perl 5 by default

[12:48] <v-zor> thx

[12:52] *** abraxxa left
[12:53] *** zakharyas joined
[12:54] *** abraxxa joined
[12:54] *** pmurias joined
[12:55] <v-zor> I see, there's multiple perl-X modules I need to install with dnf, I'll cope I guess

[12:59] <v-zor> If anyone wants to know, Clementine music player with icecast inet radio dir is ok

[13:00] <v-zor> everything from 79-2000ies

[13:01] *** domidumont left
[13:01] *** domidumont joined
[13:02] *** matias joined
[13:03] *** domidumont1 joined
[13:04] <pmurias> is our #perl6-dev commit irc bot alive?

[13:04] <timotimo> no, it used to live on hack.p6c.org

[13:05] <cpan-p6> New module released to CPAN! Pod::Render (0.7.4) by 03MARTIMM

[13:05] <v-zor> lol

[13:06] *** domidumont left
[13:08] <v-zor> cpan-p6 is for cpan commits

[13:14] <v-zor> perl6 'make' on fedora 29 ... 

[13:14] <tyil> v-zor: cpan-p6 notifies about new uploads to CPAN

[13:14] <tyil> not on individual commits on modules

[13:15] <v-zor> I see

[13:15] <tyil> pmurias, timotimo: I can probably host an additional bot in my k8s cluster, if I know where the sources for that bot are

[13:17] <v-zor> tyil : which commits ?

[13:17] <tyil> ?

[13:18] <v-zor> I only see cpan commits here

[13:18] <tyil> you mean cpan-p6's output?

[13:18] <v-zor> for example

[13:19] <v-zor> you said 'individual commits'

[13:20] <v-zor> nm

[13:20] <tyil> most Perl 6 modules are in git repositories, which contain commits (a commit is a change in the source code), but cpan-p6 doesn't track those

[13:20] <v-zor> ok, now I understand

[13:20] <tyil> cpan-p6 only displays a message when someone releases a new version of their module

[13:20] <tyil> :)

[13:20] <v-zor> sure, but the git repos should be leased then

[13:21] <tyil> cpan-p6 doesn't know about the origin git repo, if any

[13:21] <v-zor> I live on Xliff's server, private git server, we should get ourselves in if we release some software :-)

[13:22] <tyil> it only knows about releases uploaded to cpan

[13:22] <tyil> if you upload your module to cpan (which can be done with a number of tools, such as App::Assixt or App::mi6, or manually), cpan-p6 will display a message about it

[13:22] <v-zor> I know :-)

[13:23] <v-zor> I upload on a mac Safari file copy

[13:23] <timotimo> tyil: the repo should be called "geth", i'd assume

[13:23] <tyil> ah, Geth

[13:24] <tyil> https://github.com/perl6/geth this one

[13:24] <v-zor> ok

[13:24] <v-zor> Could you guys let our server of Xliff in ?

[13:25] <v-zor> There's some hacks for linux in there

[13:25] <v-zor> anyway I need to have Xliff's permission

[13:25] <tyil> I'm not sure what you mean by "let our server in"

[13:25] <v-zor> the server is kinda ultra :-)

[13:26] <v-zor> tyil : searchable by your bot

[13:26] <Ulti> with all the recent website problems is someone already aware of this erroring out? https://rakudo.perl6.org/downloads/star/

[13:26] <Ulti> the base domain is up

[13:26] *** AlexDani` joined
[13:26] <pmurias> what happened to our server btw?

[13:27] <v-zor> hail.

[13:27] <tyil> good to see the main site is up :>

[13:27] <v-zor> Ulti : it's down

[13:27] <timotimo> Ulti: what links to that address?

[13:27] *** kurahaupo joined
[13:27] <pmurias> tyil:  up

[13:27] <Ulti> timotimo: p6env

[13:27] <Ulti> ;)

[13:27] <timotimo> i wasn't aware rakudo.perl6.org exists at all

[13:27] <pmurias> tyil: https://github.com/perl6/geth

[13:28] <v-zor> aaagh web problems

[13:28] <tyil> pmurias: yes, I found it, I should have time tomorrow afternoon to setup a geth deployment

[13:28] *** vrurg joined
[13:28] <v-zor> coolness

[13:29] *** gregf_ left
[13:29] <timotimo> Ulti: ctrl-f5 please

[13:31] *** abraxxa left
[13:32] <pmurias> tyil: I miss the instant gratification of my truffle backend commits being reported ;)

[13:32] *** abraxxa joined
[13:33] <tyil> I just like playing with k8s, so if I can host something I'd gladly see if I can help out

[13:35] <timotimo> i'd appreciate it, but the biggest problem is that all the commit hooks on github use a specific hostname

[13:35] <timotimo> via dns, i mean

[13:35] <tyil> it's a subdomain, so that can be CNAMEd for least trouble

[13:36] *** kurahaupo left
[13:36] *** kurahaupo joined
[13:36] <tyil> but that would require nothing else to be using hack.p6c.org rn

[13:36] *** kurahaupo left
[13:36] *** kurahaupo joined
[13:39] <cpan-p6> New module released to CPAN! Pod::Render (0.7.5) by 03MARTIMM

[13:39] *** v-zor left
[13:40] *** zacts left
[13:42] *** v-zor joined
[13:43] *** domidumont1 left
[13:44] *** abraxxa left
[13:44] *** abraxxa joined
[13:50] *** pmurias left
[13:52] *** pmurias joined
[13:55] *** skids joined
[13:55] *** molaf joined
[13:56] *** domidumont joined
[13:58] *** raschipi joined
[14:00] <Ulti> timotimo: 404 - Page Not Found the nice kind, rather than scary mojolicious debug info

[14:01] *** lucasb joined
[14:16] <v-zor> Fedora compile ... stage mast is taking as long time

[14:17] *** uzl joined
[14:17] <v-zor> hail.

[14:17] <uzl> m: my regex rgb { \s* [\s* (\d+) \s*] ** 3 % ',' \s* }; "123,23,123".match(/<rgb>/).put

[14:17] <evalable6> uzl, rakudo-moar 235f14cd5: OUTPUT: «123,23,123␤»

[14:19] <uzl> m: my regex rgb { \s* [\s* (\d+) \s*] ** 3 % ',' \s* }; my $m = "123,23,123".match(/<rgb>/); $m<rgb>.say

[14:19] <evalable6> uzl, rakudo-moar 235f14cd5: OUTPUT: «｢123,23,123｣␤ 0 => ｢123｣␤ 0 => ｢23｣␤ 0 => ｢123｣␤»

[14:20] <uzl> m: my regex rgb { \s* [\s* (\d+) \s*] ** 3 % ',' \s* }; my $m = "123,23,123".match(/<rgb>/); $m<rgb>.list.say

[14:20] <evalable6> uzl, rakudo-moar 235f14cd5: OUTPUT: «([｢123｣ ｢23｣ ｢123｣])␤»

[14:20] <uzl> How do I get a list of the captures (integers in this case) instead of the submatches?

[14:21] <v-zor> electra

[14:21] <tobs> uzl: you can coerce the submatches to string

[14:22] <timotimo> Ulti: good

[14:22] <tobs> m: my regex rgb { \s* [\s* (\d+) \s*] ** 3 % ',' \s* }; my $m = "123,23,123".match(/<rgb>/); $m<rgb>».Str.say

[14:22] <evalable6> tobs, rakudo-moar 235f14cd5: OUTPUT: «([123 23 123])␤»

[14:23] *** pmurias left
[14:23] <tobs> (you can coerce them all to Int as well, for that matter)

[14:23] <v-zor> Aborting due to test failure: zef:ver<0.5.3>:auth<github:ugexe>:api<0> (use --force-test to override)

[14:24] <v-zor> where do I put --force-test ?

[14:24] <timotimo> why would you /<rgb>/ instead of just &rgb?

[14:24] <timotimo> v-zor: zef takes it as an argument, i believe

[14:24] <uzl> tobs: Thanks!

[14:25] <uzl> timotimo: I didn't know it could be done that way ;-)! Although it makes since (I guess) `regex {}` is just another type of block.

[14:26] <uzl> Thanks for pointing it out.

[14:27] <v-zor> I'm putting bin/zef --force-test in the Makefile then

[14:28] *** fake_space_whale joined
[14:29] <v-zor> Failed to get passing tests, but continuing with --force-test

[14:29] <v-zor> ===> Installing: zef:ver<0.5.3>:auth<github:ugexe>:api<0>

[14:30] <v-zor> oh I cancelled install because of ctrl-c to copy the above text in here

[14:30] <v-zor> great

[14:31] *** kurahaupo left
[14:31] *** kurahaupo joined
[14:31] *** kurahaupo left
[14:32] *** kurahaupo joined
[14:32] <v-zor> double mouse click :-)

[14:34] *** pmurias joined
[14:35] <v-zor> many failed test on fedora 29

[14:36] <v-zor> s/test/tests

[14:36] <v-zor> --force-install should be useless :o)

[14:37] <v-zor> s/:o)/:o|

[14:39] <v-zor> every package tests fail

[14:40] <v-zor> lol

[14:40] <v-zor> installs do not fail

[14:40] <v-zor> :-)

[14:41] *** AlexDani` left
[14:45] <v-zor> Testing [FAIL]: OpenSSL

[14:46] <timotimo> any more specific output?

[14:47] *** molaf left
[14:47] <v-zor> ===> Testing: OpenSSL:ver<0.1.21>:auth<github:sergot>

[14:47] <v-zor> ===> Testing [FAIL]: OpenSSL:ver<0.1.21>:auth<github:sergot>

[14:47] <v-zor> Failed to get passing tests, but continuing with --force-test

[14:47] <v-zor> ===> Installing: OpenSSL:ver<0.1.21>:auth<github:sergot>

[14:49] <v-zor> I might not do a --force-install AFAIK

[14:49] <v-zor> Yeah every test fails ...

[14:50] *** uzl left
[14:50] *** _uzl joined
[14:51] *** buffet_ is now known as buffet

[14:51] <v-zor> as long as I have a perl6 binary I'll be alright

[14:52] <v-zor> I might need SDL2::Raw though it won't install

[14:56] <v-zor> So I guess the downloads are alright but I need to install from package files

[14:57] <v-zor> if perl6 make install finishes I'll try zef by hand

[14:57] *** mowcat left
[14:59] <v-zor> Is there an SDL 1.2 perl6 package ?

[15:00] <timotimo> there is

[15:00] <timotimo> it's called SDL

[15:00] <v-zor> ===> Testing [OK] for Linenoise:ver<0.1.1>:auth<Rob Hoelz>

[15:00] <v-zor> ok

[15:01] <v-zor> I'll write something with it, if it installs

[15:02] <v-zor> I do not know SDL2 that much

[15:03] <v-zor> Can I put a game in a cpan package ? So to run it instead of just being a module ?

[15:04] <moritz> you can

[15:04] <v-zor> thx

[15:05] <v-zor> I am doing a gargoyle's quest II in C, I have made 2 graphics for it, I might want to transform that to perl6 SDL

[15:05] *** robertle joined
[15:05] <v-zor> gargoyle's quest is a splendid game boy classic game

[15:06] <v-zor> ghouls 'n ghosts sequel IIRC

[15:06] <v-zor> you can run it in GBC emulator

[15:07] <v-zor> after paying the state :o|

[15:08] <v-zor> It's called "Stone Devil - Mongbat's Quest"

[15:08] <v-zor> I hope I can do several of those

[15:09] <v-zor> each with a seperate subquest name

[15:09] <v-zor> the C code is artisitic/GPL3

[15:10] <v-zor> licensed

[15:10] *** cpan-p6 left
[15:10] *** cpan-p6 joined
[15:10] *** cpan-p6 left
[15:10] *** cpan-p6 joined
[15:13] *** romanroman left
[15:16] *** pmurias left
[15:18] <v-zor> install ing TAP::Harness 

[15:19] <v-zor> the top command in a shell is handy if you think the install hangs

[15:19] <v-zor> ===> Testing [OK] for IO::String:ver<0.1.1>:auth<Rob Hoelz>

[15:21] <v-zor> emulator.perl6.org

[15:22] <v-zor> I wanted to do a perl6 NES and GB emulator, I need to have a debuggable system for it though

[15:23] <v-zor> on the long run with the perl6 SDl package

[15:23] <v-zor> sdl.perl.org is dead :-)

[15:24] <v-zor> I'm running the above on a intel atom (i386) system

[15:24] <v-zor> It has 1GB of RAM

[15:25] <v-zor> several tests ok in the end

[15:26] <v-zor> route show :-)

[15:28] <v-zor> I love my Clementine music player

[15:29] <v-zor> icecast inet radio :-)

[15:30] <v-zor> gets a bit swamped with the install though

[15:31] <v-zor> so I turned it off, I'll shut up when I have the compile in order :o|

[15:32] <v-zor> fedora 30 betas available :-)

[15:33] <v-zor> Alan Cox wouldn't want it another way

[15:33] *** _uzl left
[15:34] <v-zor> We are way past his Welsh blog

[15:34] <v-zor> It used to be called redhat linux

[15:35] <v-zor> or yellowdog linux for PPC

[15:35] <v-zor> I had it on a G3 desktop macintosh

[15:35] <daxim> how do I find out how to pronounce 𫇵?  (it's trickier than it seems)

[15:36] *** mowcat joined
[15:37] <lucs> daxim: Not rendering here. What's the codepoint?

[15:37] <v-zor> Rakudo Star has been built and installed successfully.

[15:37] <v-zor> testing zef install SDL

[15:37] <daxim> 2B1F5

[15:39] <v-zor> the perl6 REPL works

[15:39] *** _uzl joined
[15:39] *** zacts joined
[15:41] <v-zor> Package SDL-1.2.15-33.fc29.i686 is already installed.

[15:43] <holyghost> .tell Xliff I need to send you 2 ssh-keygens for my netbsd and linux system. We also need to talk about serving from your server as there's going to be netbsd perl6 software

[15:43] <yoleaux> holyghost: I'll pass your message to Xliff.

[15:47] <v-zor> ===> Searching for: SDL

[15:47] <v-zor> ===> Updating cpan mirror: https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/cpan1.json

[15:47] <v-zor> ===> Updating p6c mirror: http://ecosystem-api.p6c.org/projects1.json

[15:47] <v-zor> ===> Updated cpan mirror: https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/cpan1.json

[15:47] <v-zor> !!!> Failed to update p6c mirror: http://ecosystem-api.p6c.org/projects1.json

[15:47] <v-zor> ===> Updating p6c mirror: http://ecosystem-api.p6c.org/projects.json

[15:48] <v-zor> Your actions in #perl6 tripped

[15:48] <v-zor>           automated anti-spam measures (repetition detected),

[15:48] <v-zor> nice

[15:49] <v-zor> So now I am a spammer

[15:51] *** telex left
[15:52] <raschipi> Pasting isn't even allowed in IRC, you should use an external service for that for a start.

[15:54] *** telex joined
[15:55] *** _uzl left
[15:56] <timotimo> v-zor: it's considered not polite to be pasting multiple lines at the same time; also the your messages / all messages ratio for the last 2 hours or so have been above 90%, which is not common

[15:58] <v-zor> Installing: SDL:ver<0.2.0>

[15:58] <v-zor> I have it

[15:58] <lucs> daxim: Is that "boil"?

[15:58] <v-zor> I'm afk then

[15:59] *** gregf_ joined
[16:02] <Xliff_> moritz: Are you going to be in Washington, DC?

[16:02] *** Xliff_ is now known as Xliff

[16:03] <daxim> lucs, I don't think so

[16:04] <lucs> daxim: Do you have an idea what it is?

[16:04] <daxim> nope

[16:05] <lucs> Is it Chinese or Japanese in your context?

[16:06] *** kensanata left
[16:07] <daxim> chinese

[16:08] *** domidumont1 joined
[16:09] <lucs> Anyway, can't really help you, was just curious to see if I could find the character in my Nelson dictionary (Japanese, and "boil" was the closest I found).

[16:10] *** MilkmanDan left
[16:10] *** MilkmanDan joined
[16:11] *** domidumont left
[16:12] *** zacts left
[16:17] <Xliff> Can someone do the following for me?

[16:17] <yoleaux> 15:43Z <holyghost> Xliff: I need to send you 2 ssh-keygens for my netbsd and linux system. We also need to talk about serving from your server as there's going to be netbsd perl6 software

[16:18] <Xliff> .tell holyghost Sure! You have my email. Please remember I do NOT have a lot of resources on this VM, so that will limit what can be done.

[16:18] <yoleaux> Xliff: I'll pass your message to holyghost.

[16:18] <raschipi> That's like asking someone to pee for you. Doesn't work that way.

[16:19] <Xliff> Can someone do the following for me: "zef install Cairo; perl6 -e 'use Cairo; say FillRule.enums'

[16:20] * sena_kun tries it out

[16:20] <raschipi> Times out for me because I'm behind a firewall.

[16:21] *** dakkar left
[16:21] <Xliff> sena_kun++

[16:25] <Xliff> sena_kun: I have to leave for an eye appointment, soon. Can you privmsg me the results?

[16:26] <sena_kun> Xliff, sure

[16:26] <Xliff> Thanks! =)

[16:26] <sena_kun> np

[16:29] *** zacts joined
[16:36] <atroxaper> sena_kun: Many thanks to you for your fixes in my logp6 example. I appreciate it ^^

[16:37] <sena_kun> atroxaper, you are welcome. It was very nice to read and to think we have ideas and implementations(!) for a "proper" Perl 6 logging framework.

[16:38] <sena_kun> to be honest, I was just too sad with primitive `say "Log line" if $*DEBUG` in my modules. ;)

[16:39] *** Praise- is now known as Praise

[16:39] <atroxaper> sena_kun: me too :)

[16:39] <El_Che> I find it strange perl6 hasn't that built-in (it has the rest of the kitchensink) as minimal langs as Go provide a log functionality

[16:40] <raschipi> Is logging even available is some Perl6 taget environments?

[16:40] <raschipi> in every*

[16:41] <El_Che> What is a target environment?

[16:41] <El_Che> platform + OS?

[16:41] <raschipi> Like, in the Browser. But thinking that way file IO shouldn't be part of Core either.

[16:43] *** lizmat joined
[16:43] <El_Che> welwellwell, it depends on how you defien core.

[16:43] <sena_kun> I don't see Perl 6 as a kitchensink, to be honest. I mean, some things do look like a bit out of the place(though arguably), but we don't have a web server in core or something like that

[16:43] <El_Che> Is a supplied lib part of core

[16:43] <El_Che> std lib

[16:44] <El_Che> sena_kun: well, t

[16:44] <El_Che> that is maybe not a bad idea

[16:44] <El_Che> add what people will use and will built libs around it

[16:44] <sena_kun> there are a lot of types and they are all pretty useful. maybe it is pretty sugared, like we have `while`, `loop`, `for`, but that's how this language is.

[16:45] <El_Che> there is lots of stuff around the go tcp/http server/client code

[16:45] <raschipi> No one wanted to take on deciding what should be in a std lib, as I understand the problem.

[16:45] <sena_kun> El_Che, not a bad idea - having a web server in core? pls no, just no

[16:45] <El_Che> no libs? use core. Want something nicer? Use a small wrapper

[16:45] <El_Che> sena_kun: it's just an example

[16:45] <El_Che> sena_kun: do you go after the devops/small-rest-service crowd? 

[16:46] *** patrickb left
[16:46] <sena_kun> El_Che, sorry, what do you mean by this crowd?

[16:46] <El_Che> it's a good fit there, but not everywhere

[16:47] <El_Che> sena_kun: I mean that the simplicity and the just-the-needed-batteries-included of Go attracted a lot of people creating small rest services and clients

[16:47] <El_Che> as a lot of work in the devops world

[16:47] <sena_kun> I want to say that having cool types out of the box and a bunch of useful routine to not re-invent the wheel every time is great, but libraries are libraries.

[16:47] <sena_kun> maybe I am just too old-fashioned, of course

[16:47] <El_Che> of course you have big projects, but rest is often of the type of glue Perl 5 did in the past

[16:48] <El_Che> sena_kun: no, I get what you mean

[16:48] <El_Che> it's a choice

[16:48] <El_Che> but I woudln't say Perl 6 matches the minimalistic POV

[16:48] *** v-zor left
[16:48] <sena_kun> and having high-level stuff in core adds a loooot of complexity to the test suite and the implementation...

[16:48] <sena_kun> yes, I agree with you

[16:48] <El_Che> Go is less expressive, but It has builtin networking

[16:48] <El_Che> it's a choice

[16:49] <sena_kun> it is indeed the opposite of e.g. a Lisp approach, where there are almost no builtins

[16:49] <sena_kun> but I see it as there is a certain distinction between types that are generic and specific

[16:50] <El_Che> e.g., I learnt p5 before p6, like many people, and I thought that p5 was a big language :)

[16:50] <sena_kun> like, if you have a Supply or Int, you can use it in various, really various situations, but if you have a Net::WebServer in core, you cannot really use it as a generic thing

[16:50] <El_Che> true

[16:50] <El_Che> well, take the async/parallel stuff perl 6 has in core

[16:51] <El_Che> that a pretty much batteries included stance

[16:51] *** natrys joined
[16:51] <El_Che> and it's so nice, you won't need to often third party stuff for that

[16:51] <sena_kun> yes, but it is a generic thing, in my humble opinion. :)

[16:51] <El_Che> it's opiniated

[16:51] <El_Che> although a lot of opinions are supplied

[16:51] <raschipi> A log module could be includded in R*, but no wants the job of curating what's included.

[16:51] <El_Che> Go went the Channels-only way

[16:52] <El_Che> Perl 6 has lots of stuff to choose from

[16:52] <El_Che> raschipi: I don't think that including extra stuff today is the way to go

[16:52] <El_Che> first concentrate on mwhat's already there

[16:53] <raschipi> How many JSON modules are in R*?

[16:53] <El_Che> I never got the concept of R*, besides when noone besides the core devs used perl 6

[16:54] <El_Che> (== before it was released in 2015)

[16:54] <raschipi> Isn't it what's supposed to be a std lib? Or P6 Boost?

[16:54] <El_Che> R* is no stdlib

[16:54] <El_Che> is a random collection of modules

[16:54] <El_Che> there is no coherence

[16:55] <El_Che> no global versioning

[16:55] <sena_kun> well, we can make some

[16:55] <El_Che> it's from a time before distros packages perl 6, imho

[16:56] <raschipi> Exactly, no one wanted to take the job of making it a coherent collection.

[16:56] <El_Che> it's a huge undertaking

[16:56] <El_Che> and the world moved to containers and stuff

[16:56] <El_Che> in the meanwhile

[16:56] <El_Che> so a mismatch

[16:57] <El_Che> at least in my usecase

[16:57] <raschipi> world for some definition of world

[16:57] <El_Che> the trendy part :)

[16:57] <El_Che> but I reckon trendy people will use Perl 6

[16:57] <raschipi> In my world people are still weary of COBOL because it's too modern.

[16:57] <El_Che> and not those maintaining million-lines maintenace proyects

[16:58] <El_Che> raschipi: :)

[16:58] *** adu left
[16:58] <guifa> ugh, apparently the XML module isn’t processing some of the CLDR xml files.  And somehow I doubt that Unicode is pushing out invalid XML

[16:58] * El_Che : train arrived at my village

[16:58] <El_Che> bbl

[16:58] <atroxaper> Java has 'Java Logging API' in the core but no one use it for now.

[17:02] *** Black_Ribbon joined
[17:07] *** patrickb joined
[17:08] *** lizmat left
[17:08] *** woolfy joined
[17:12] *** woolfy left
[17:14] *** woolfy joined
[17:19] *** lichtkind left
[17:21] *** matias left
[17:22] *** woolfy left
[17:26] *** sauvin left
[17:27] *** matias joined
[17:28] *** zakharyas left
[17:33] *** matias left
[17:37] *** domidumont joined
[17:38] *** raschipi left
[17:40] *** domidumont1 left
[17:41] *** rindolf left
[17:49] *** pecastro joined
[17:53] *** mowcat left
[17:54] *** rindolf joined
[17:57] *** matias joined
[18:12] <Woodi> hi #perl6 :)

[18:13] <sena_kun> Woodi, hi!

[18:16] *** sarna joined
[18:17] <sarna> I don't know if you've seen that already, but we're finally on the redmonk programming language rankings :)

[18:17] <sarna> https://redmonk.com/sogrady/2019/03/20/language-rankings-1-19/

[18:20] *** matias left
[18:20] <sena_kun> sarna, I am afraid it is related to Perl (5), not Perl 6

[18:21] <sarna> sena_kun: nope, Perl is way higher! I specifically contacted them to tell them about our little language :)

[18:22] <Woodi> re R* : a) created "becouse only devs was using 'usable' R" - probably was main reason :)  b) curently, usually, R* is a showcase when some bigger features are merges and we are proud of it and want to comunicate this to World ("we" all are proud of it, even if only few of us do real work...)  c) so R* is release, why we don't have a rolling distro ?? ;)  d) there is no stdlib yet... are we ready for that ?

[18:22] <sarna> Perl5 (just Perl on the chart) is just below PowerShell, above Haskell

[18:23] <sena_kun> sarna, hmm, I see Perl at 18, but cannot find "Perl 6" on the page.

[18:23] <guifa> Perl 6 is in the chart

[18:23] <sarna> yeah, it's on the chart, they only list top 20 languages

[18:23] <sarna> they only list top 20 languages below the plot, I mean :)

[18:24] * guifa just put in a metric ton of work to handle alises in the CLDR main files… for exactly ONE file to use them.  could have just saved himself the stress and manually expanded that file

[18:24] <sena_kun> ah, ok

[18:24] *** abraxxa1 joined
[18:24] <guifa> One… out of 754

[18:29] *** netrino_ joined
[18:29] *** Manifest0 left
[18:30] *** netrino left
[18:34] *** zacts left
[18:34] *** Manifest0 joined
[18:37] <sena_kun> .note https://redmonk.com/sogrady/2019/03/20/language-rankings-1-19/

[18:37] <sena_kun> hmm...

[18:37] <sena_kun> .weekly

[18:38] <sena_kun> hmm

[18:38] <MasterDuke> i think just 'weekly: <foo>'

[18:39] <sena_kun> weekly: https://redmonk.com/sogrady/2019/03/20/language-rankings-1-19/

[18:39] <notable6> sena_kun, Noted!

[18:39] *** Manifest0 left
[18:39] <sena_kun> MasterDuke, thanks

[18:39] <MasterDuke> np

[18:39] *** pochi_ left
[18:39] *** netrino_ left
[18:39] *** netrino joined
[18:44] *** natrys left
[18:44] *** Manifest0 joined
[18:45] *** domidumont left
[18:48] *** abraxxa1 left
[18:52] *** kurahaupo left
[18:52] *** kurahaupo joined
[19:02] <patrickb> .tell Kiepi Could you review https://github.com/rakudo/rakudo/pull/2857 ?

[19:02] <yoleaux> patrickb: I'll pass your message to Kiepi.

[19:03] *** pecastro left
[19:03] *** abraxxa1 joined
[19:07] *** kaare_ joined
[19:07] *** kaare__ left
[19:11] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; 

[19:11] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «»

[19:11] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; use Package; sub main { say Fruit.enums; };

[19:11] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find Package at line 1 in:␤    file#/home/bisectable/…»

[19:11] <evalable6> Xliff, Full output: https://gist.github.com/fdd29b38575dc6021f2a04881955d817

[19:11] * sena_kun .oO ( it seems we have technical https://www.youtube.com/watch?v=rn-wj4pRpIE difficulties )

[19:11] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; sub main { say Fruit.enums; };

[19:11] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/KCQiERf44y␤Undeclared name:␤    Fruit used at line 1␤␤»

[19:11] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; use TEstPackagesub main { say Fruit.enums; };

[19:11] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/mOYd0gGKDH␤Undeclared name:␤    Fruit used at line 1␤Undeclared routine:␤    main used at line 1. Did you mean 'min'?␤␤»

[19:11] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; use TEstPackage; sub main { say Fruit.enums; };

[19:11] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find TEstPackage at line 1 in:␤    file#/home/bisecta…»

[19:11] <evalable6> Xliff, Full output: https://gist.github.com/422cda4b125a43fe7aee615a077a40ed

[19:12] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; use TrstPackage; sub main { say Fruit.enums; };

[19:12] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find TrstPackage at line 1 in:␤    file#/home/bisecta…»

[19:12] <evalable6> Xliff, Full output: https://gist.github.com/0dbb093c550453054a2a8922008c24dc

[19:12] <Xliff> m: package TestPackage { our enum Fruit is export <Apples Oranges Pears>; }; use TestPackage; sub main { say Fruit.enums; };

[19:12] <evalable6> Xliff, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find TestPackage at line 1 in:␤    file#/home/bisecta…»

[19:12] <evalable6> Xliff, Full output: https://gist.github.com/257fef866aa1818048b264d748840d40

[19:12] <Xliff> ^^ So how would you get such thing to work?

[19:13] <Xliff> timotimo: You around?

[19:18] *** zacts joined
[19:20] *** mowcat joined
[19:20] *** mowcat left
[19:21] *** mowcat joined
[19:22] <guifa> Xliff: weird, I’m able to get that to work

[19:22] <guifa> package Test { our enum ABC is export <a b c d> }; use Test; say Test::ABC.enums

[19:22] <evalable6> guifa, rakudo-moar 235f14cd5: OUTPUT: «Map.new((a => 0, b => 1, c => 2, d => 3))␤»

[19:23] <guifa> p6: package Test { our enum ABC is export <a b c d> }; use Test; sub main { say Test::ABC.enums }; main()

[19:23] <evalable6> guifa, rakudo-moar 235f14cd5: OUTPUT: «Map.new((a => 0, b => 1, c => 2, d => 3))␤»

[19:24] <gfldex> lolimnihilisticalittle: https://gfldex.wordpress.com/2019/04/24/nil-is-a-pessimist/

[19:24] <gfldex> guifa++ # for asking all the right questions

[19:25] *** zakharyas joined
[19:26] <guifa> gfldex: of course when I went back, I realized that the elements WAS in fact returning an empty array.  I have no idea what I was doing in the midst of my parsing that was causing me to get an (Any) in there. 

[19:26] * guifa needs sleep.  Finals week is just as bad for the profs as for the students.

[19:29] <guifa> oh, Xliff: perhaps you need to use ‘import’ instead of “use”:

[19:29] <guifa> p6: package Test { our enum ABC is export <a b c d> }; import Test; sub main { say ABC.enums }; main()

[19:29] <evalable6> guifa, rakudo-moar 235f14cd5: OUTPUT: «Map.new((a => 0, b => 1, c => 2, d => 3))␤»

[19:30] *** cpage joined
[19:33] *** cpage_ left
[19:36] *** zacts left
[19:40] *** abraxxa1 left
[19:41] <guifa> Tried running some tests to see the fastest way to check for a valid value 

[19:41] <guifa> Apparently the fastest to store them as hash keys, and use Hash{$foo}

[19:42] <guifa> Followed closely by dumping them in a set and using Set{$foo} (which I think makes sense, since internally isn’t a Set mostly a hash with true values?)

[19:42] <guifa> 10x longer is using $foo (elem) Array

[19:43] <guifa> but it’s literally 100x longer to store an any junction and do $foo eq $junction (!)

[19:49] <guifa> Creating the junction on the fly $foo eq Array.any is basically identical in (lack of) speed

[19:56] *** lichtkind joined
[19:59] *** sarna left
[20:00] *** adu joined
[20:01] <El_Che> weekly: Perl's decline in fortune was attributed to the uncertainty in its future due to the Perl 5/6 split. https://www.i-programmer.info/news/98/12710.html

[20:01] <notable6> El_Che, Noted!

[20:01] <El_Che> (it's a bullshit article, but still)

[20:03] <lucasb> basically, Perl 6 fucked everything up

[20:03] <lucasb> j/k

[20:03] <El_Che> they are not

[20:04] <El_Che> it's a weird article with weird magic metrics

[20:17] *** zacts joined
[20:17] *** kurahaupo left
[20:18] *** kurahaupo joined
[20:20] *** lichtkind left
[20:28] *** chris__ joined
[20:29] *** chris__ left
[20:48] *** zakharyas left
[20:54] *** zacts left
[21:03] *** skids left
[21:10] *** sftp left
[21:12] *** sftp joined
[21:23] *** molaf joined
[21:38] *** robertle left
[21:45] *** eseyman left
[21:53] *** eseyman joined
[22:01] *** Manifest0 left
[22:05] *** roguelazer left
[22:06] *** Manifest0 joined
[22:08] *** spacedbat left
[22:08] *** molaf left
[22:11] *** spacedbat joined
[22:12] *** rindolf left
[22:12] *** roguelazer joined
[22:20] *** john_parr_ joined
[22:21] *** john_parr left
[22:21] *** john_parr_ is now known as john_parr

[22:40] *** lizmat joined
[22:56] *** sena_kun left
[23:03] *** random_yanek left
[23:04] *** lizmat left
[23:11] *** zacts joined
[23:12] *** zacts left
[23:18] *** Sgeo_ joined
[23:20] *** random_yanek joined
[23:20] *** random_yanek left
[23:22] *** Sgeo left
[23:27] *** zacts joined
[23:31] *** patrickz joined
[23:35] *** patrickb left
[23:39] *** random_yanek joined
[23:39] *** random_yanek left
[23:44] *** zacts left
[23:47] *** random_yanek joined
[23:47] *** random_yanek left
[23:56] *** random_yanek joined
[23:56] *** random_yanek left
[23:59] *** aborazmeh joined
[23:59] *** aborazmeh left
[23:59] *** aborazmeh joined
