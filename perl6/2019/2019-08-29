[00:01] *** Actualeyes left
[00:02] *** eseyman left
[00:09] *** eseyman joined
[00:56] *** [particle] joined
[00:56] *** [particle]1 left
[00:58] *** [particle]1 joined
[01:00] *** [particle] left
[01:06] *** Kaiepi left
[01:06] *** Kaiepi joined
[01:07] *** [particle] joined
[01:09] *** Kaiepi left
[01:10] *** [particle]1 left
[01:12] *** [particle]1 joined
[01:12] *** Kaiepi joined
[01:12] *** [particle] left
[01:18] *** zakharyas joined
[01:21] *** [particle] joined
[01:24] *** [particle]1 left
[01:26] *** [particle]1 joined
[01:26] *** [particle] left
[01:29] *** molaf left
[01:42] *** [particle] joined
[01:42] *** molaf joined
[01:45] *** [particle]1 left
[01:49] <cpan-p6> New module released to CPAN! Structable (0.0.5) by 03SAMGWISE

[01:51] *** [particle] left
[01:51] *** [particle] joined
[01:52] *** Sgeo joined
[01:52] *** Cabanossi left
[01:53] *** Sgeo_ left
[02:00] *** Cabanossi joined
[02:02] *** [particle] left
[02:04] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:04] *** [particle] joined
[02:11] *** [particle] left
[02:13] *** [particle] joined
[02:21] *** [particle]1 joined
[02:23] *** [particle] left
[02:25] *** [particle] joined
[02:26] *** [particle]1 left
[02:31] *** [particle]1 joined
[02:31] *** [particle] left
[02:32] *** [particle] joined
[02:35] *** [particle]1 left
[02:39] *** go|dfish left
[02:40] *** go|dfish joined
[02:54] *** squashable6 left
[02:57] *** squashable6 joined
[02:58] *** Cabanossi left
[03:01] *** Cabanossi joined
[03:07] *** jaldhar joined
[03:09] *** jaldhar left
[03:09] *** jaldhar joined
[03:18] *** adu joined
[03:45] *** k0Le left
[03:47] *** jaldhar left
[03:47] *** jaldhar joined
[03:47] *** k0Le joined
[03:49] *** jaldhar left
[03:49] *** jaldhar joined
[03:53] *** [particle] left
[03:54] *** molaf left
[03:58] *** [particle] joined
[04:03] *** jaldhar left
[04:03] *** jaldhar joined
[04:05] *** jaldhar left
[04:05] *** jaldhar joined
[04:11] *** jaldhar_ joined
[04:11] *** jaldhar left
[04:14] *** jaldhar_ left
[04:14] *** jaldhar joined
[04:15] *** jaldhar left
[04:15] *** jaldhar joined
[04:17] *** jaldhar left
[04:17] *** jaldhar joined
[04:21] *** jaldhar left
[04:21] *** jaldhar joined
[04:22] *** pierrot left
[04:22] *** pierrot joined
[04:23] *** jaldhar left
[04:23] *** jaldhar joined
[04:25] *** jaldhar left
[04:25] *** jaldhar joined
[04:27] *** jaldhar left
[04:27] *** jaldhar joined
[04:29] *** jaldhar left
[04:29] *** jaldhar joined
[04:39] *** tyil left
[04:40] *** jaldhar left
[04:40] *** tyilanmenyn joined
[04:41] *** tyilanmenyn is now known as tyil

[05:35] *** Xliff left
[05:48] <aearnus[m]> hey all, i'm kinda stumped by react/whenever. i've been trying to do the whole concurrency thing but I can't wrap my head around it

[05:49] <aearnus[m]> how can I make this little script sleep until it gets connections? https://gist.github.com/Aearnus/dabc675ac1dd4317db93ccb195587373

[05:49] <aearnus[m]> I get that it just exits instantly because there's nothing there to actually block until the supply has something to tap... but I'm not sure where to go from there

[05:55] <aearnus[m]> do I need a react block around the original call to IO::Socket::Async in order to react to all the incoming connections right then and there? is that the only way to block on that supply

[06:10] *** squashable6 left
[06:11] *** antoniogamiz joined
[06:11] *** quester joined
[06:11] *** squashable6 joined
[06:11] *** ChanServ sets mode: +v squashable6

[06:12] <antoniogamiz> morning o/

[06:27] <rba> Notable6: weekly http://blogs.perl.org/users/ovid/2019/08/is-perl-6-being-renamed.html

[06:27] <notable6> rba, Noted! (weekly)

[06:29] *** jjmerelo joined
[06:33] *** [particle] left
[06:33] <aearnus[m]> jjmerelo: I bought your book today, it's coming the 30th :D

[06:34] <jjmerelo> aearnus[m]: have fun with it! :-)  Keep it for the next time we meet

[06:34] <tellable6> 2019-08-28T18:06:21Z #perl6 <tbrowder> jjmerelo the new doc page looks pretty good on my local

[06:34] <tellable6> 2019-08-28T18:07:15Z #perl6 <tbrowder> jjmerelo host but it hasn't shown on the public docs yet

[06:34] <jjmerelo> .tell tbrowder we're still kind of wary to deploy it in the production server. It will arrive eventually.

[06:34] <tellable6> jjmerelo, I'll pass your message to tbrowder

[06:36] <aearnus[m]> definitely! not a ton of good conventions on my side of the world but fingers crossed

[06:38] <El_Che> aearnus[m]: it sounds like your side of the world has bad manners :)

[06:38] <El_Che> aearnus[m]: you mean conferences?

[06:39] <aearnus[m]> err, yeah :)

[06:39] <aearnus[m]> it's late & my brain is fizzled

[06:41] <El_Che> well, both are possible :)

[06:42] <El_Che> where is your part of the world?

[06:43] <aearnus[m]> El_Che: good ol' Southern Arizona

[06:43] <aearnus[m]> west side of the US

[06:45] <jjmerelo> aearnus[m] Flagstaff is as far as I have gone in Southern Arizona

[06:45] <jjmerelo> aearnus[m]: but you probably mean further South...

[06:45] <aearnus[m]> aha, beautiful city. I bounce between phoenix and tuscon usually

[06:46] <El_Che> the regions looks beautiful in google images :)

[06:46] <jjmerelo> aearnus[m]: drove from Santa Fe via Alburquerque, and then obviously up to Grand Canyon via Kayenta

[06:46] <El_Che> Alburquerque? It sounds like Breaking Bad :)

[06:46] <jjmerelo> Amazing landscape, and beautiful country. And the clouds...

[06:46] <aearnus[m]> Arizona sunsets are unbeatable

[06:47] <jjmerelo> Actually, Breaking Bad does a pretty good job of showing the light and the clouds...

[06:49] <El_Che> The fact that people still speak about South Arizona (region) instead of Arizona (state), is it related to its history as Baja Arizona? A different (historical) identity than the rest of the state?

[06:49] <El_Che> of just because it's so bgig?

[06:49] <El_Che> big

[06:49] <aearnus[m]> I just said it because Arizona is massive & confusing to a lot of people who don't live here

[06:50] <aearnus[m]> Historical identity wise, it's all pretty uniform except for the new age-ish places

[06:50] <El_Che> Google is full of references to South Arizona

[06:51] <jjmerelo> aearnus[m] there are ~800 miles from North to South?

[06:51] <El_Che> aearnus[m]: where the hippies meet the ufos :)

[06:51] <jjmerelo> aearnus[m] I remember driving _a lot_

[06:51] <aearnus[m]> El_Che: hehe, yeah.

[06:51] <jjmerelo> aearnus[m] and I was just in the northern half...

[06:52] <aearnus[m]> jjmerelo: not sure about the exact mileage, but I know it's a 4 hour drive from Tuscon to Flagstaff, and a 6 hour drive if I wanted to go all the way to the grand canyon

[06:52] <El_Che> bbl, train arrived

[06:54] <jjmerelo> aearnus[m] yep, kind of... I might have seemed more to me with my rented Toyota Tercel

[06:54] <aearnus[m]> I could imagine -- especially with how people drive here

[06:55] <aearnus[m]> the AZ speed limits are mostly just a suggestion

[06:57] *** kensanata joined
[07:00] *** k0Le left
[07:01] *** k0Le joined
[07:12] *** domidumont joined
[07:33] <jjmerelo> Just a reminder that we're still testing the documentation generated with the new Documentable here https://docs-stage.p6c.org/

[07:33] <jjmerelo> Please check out the new site, the new Documentable, and raise errors where appropriate

[07:33] <jjmerelo> documentable is here: https://github.com/perl6/Documentable

[07:36] *** xi- left
[07:40] *** xi- joined
[07:51] *** renormalist left
[07:52] *** joy_ left
[07:52] *** joy_ joined
[07:53] <Geth> ¦ doc: d74adf5ff3 | (JJ Merelo)++ | README.md

[07:53] <Geth> ¦ doc: Added instructions, closes #2981

[07:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d74adf5ff3

[07:54] <moritz> jjmerelo: I've done a bit random click-through on the staging site, and it looks good to me

[07:55] <jjmerelo> moritz: thanks. It's mostly OK, I guess. I guess also while we're at it we should create some web-level tests doing that kind of random navigation to check it, using Selenium or somesuch

[07:57] *** Xliff joined
[07:57] <Xliff> \o

[07:58] <Xliff> m: constant ab := (($a == 1) ?? Int !! IntStr);

[07:58] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/EFVkABWTli␤Variable '$a' is not declared␤at /tmp/EFVkABWTli:1␤------> 03constant ab := ((08⏏04$a == 1) ?? Int !! IntStr);␤»

[07:58] <Xliff> m: my $a = 1; constant ab := (($a == 1) ?? Int !! IntStr);

[07:58] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «Use of uninitialized value of type Any in numeric context␤  in block  at /tmp/hDdiEvRqjX line 1␤»

[07:58] <Xliff> m: my $a = 1; constant ab := (($a == 1) ?? Int !! IntStr); ab.^name.say

[07:58] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «Use of uninitialized value of type Any in numeric context␤IntStr␤  in block  at /tmp/OPG6xIyn8J line 1␤»

[07:58] <Xliff> m: my $a = 1; constant ab = (($a == 1) ?? Int !! IntStr); ab.^name.say

[07:58] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «Use of uninitialized value of type Any in numeric context␤IntStr␤  in block  at /tmp/VJOquD8R0X line 1␤»

[08:00] *** renormalist joined
[08:12] *** rindolf joined
[08:15] *** dolmen joined
[08:28] *** aborazmeh joined
[08:28] *** aborazmeh left
[08:28] *** aborazmeh joined
[08:32] *** robertle joined
[08:33] *** PopovMP joined
[08:45] *** cpan-p6 left
[08:45] *** cpan-p6 joined
[08:45] *** cpan-p6 left
[08:45] *** cpan-p6 joined
[08:47] *** Xliff left
[09:00] *** aborazmeh left
[09:24] *** pat_js joined
[09:28] *** aborazmeh joined
[09:28] *** aborazmeh left
[09:28] *** aborazmeh joined
[09:34] *** Guest93 left
[09:36] *** antoniogamiz left
[09:41] <cpan-p6> New module released to CPAN! Gnome::Gtk3 (0.18.3) by 03MARTIMM

[09:43] *** Guest93 joined
[09:46] *** aborazmeh left
[09:50] <timotimo> aearnus[m]: still want an explanation for your tap/react thing?

[09:53] <jjmerelo> After a few hundred commits, new version of the documentation deployed to stage https://docs-stage.p6c.org/

[09:58] *** pecastro joined
[09:59] <Geth> ¦ doc: a5b1215a7a | (JJ Merelo)++ | template/header.html

[09:59] <Geth> ¦ doc: Adds note to templates

[09:59] <Geth> ¦ doc: 

[09:59] <Geth> ¦ doc: This closes #2986, although it was actually closed in perl6/Documentable#17. The problem there is that the variables were not being substituted, simply because no one thought they were actually used. Code to substitute them was added, and that was that.

[09:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a5b1215a7a

[10:12] <Geth> ¦ doc: 6961a79bb2 | (JJ Merelo)++ | type-graph.txt

[10:12] <Geth> ¦ doc: Reviews file and eliminates non-needed square bracket.

[10:12] <Geth> ¦ doc: 

[10:12] <Geth> ¦ doc: But also closes #2418 after review. All types are currently in typegraph, mainly after @antoniogamiz in 4591f2a288f53b8ea5349132b47252baf0b6ff93 and 9108f1a

[10:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6961a79bb2

[10:15] <Geth> ¦ doc: a51fbc9b94 | (JJ Merelo)++ | README.md

[10:15] <Geth> ¦ doc: Spaces, not tabs

[10:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a51fbc9b94

[10:21] *** zakharyas left
[10:27] *** Black_Ribbon left
[10:36] *** kensanata left
[10:39] *** jjmerelo left
[10:40] *** Xliff joined
[10:41] <Xliff> \o

[10:52] *** dolmen left
[11:04] *** veesh joined
[11:04] <Xliff> m: https://gist.github.com/Xliff/279d7094df4ad599f67216ffaad2733e

[11:05] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) 04===SORRY!04===␤Function 'TAKE_NONE' needs parens to avoid go…»

[11:05] <evalable6> Xliff, Full output: https://gist.github.com/147974b48672d847fea14c689845f9da

[11:05] <Xliff> m: https://gist.github.com/Xliff/279d7094df4ad599f67216ffaad2733e

[11:05] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(a TAKE_NONE 0 0 b TAKE_ONE 1 c TAKE_TWO d 3.142857)␤»

[11:05] <Xliff> ^^ Can someone tell me what I am doing wrong with that?

[11:06] *** PopovMP left
[11:08] <timotimo> i don't see it switch to another state when it's in Param?

[11:10] <Xliff> timotimo: Param jumps to one of TAKE_NONE,TAKE_ONE or TAKE_TWO

[11:10] <Xliff> m: https://gist.github.com/Xliff/279d7094df4ad599f67216ffaad2733e

[11:10] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /home/bisectable/git/wh…»

[11:10] <evalable6> Xliff, Full output: https://gist.github.com/53846ffa6240c17f6336d7f52b7909bc

[11:13] <Xliff> m: https://gist.github.com/Xliff/279d7094df4ad599f67216ffaad2733e

[11:13] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /home/bisectable/git/wh…»

[11:13] <evalable6> Xliff, Full output: https://gist.github.com/a4ec2d4006a50bcd23e8ce1d9bbbbe44

[11:13] <Xliff> m: https://gist.github.com/Xliff/279d7094df4ad599f67216ffaad2733e

[11:13] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(a TAKE_NONE 0 0 b TAKE_ONE 1 c TAKE_TWO d 3.142857)␤»

[11:13] <Xliff> timotimo: Working version in the comment.

[11:15] <timotimo> Xliff: does it, though?

[11:16] <Xliff> Now it does.

[11:17] <Xliff> I know it's not great.

[11:17] <timotimo> i don't see a difference

[11:17] <Xliff> In 'Slurp', the else block is now an unless.

[11:18] <timotimo> m: my $blerp = "hi"; given $blerp { when "hi" { $blerp = 9; proceed; }; say $_ }

[11:18] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «9␤»

[11:18] <timotimo> ah, because it's an alias

[11:18] *** cpan-p6 left
[11:19] *** cpan-p6 joined
[11:19] *** cpan-p6 left
[11:19] *** cpan-p6 joined
[11:26] *** k0Le left
[11:27] *** k0Le joined
[11:40] *** dolmen joined
[11:46] *** kiwi_7 joined
[11:49] <discord6> <RaycatWhoDat> .tell timotimo I'd be interested in hearing about the internals of Perl 6 as well.

[11:49] <tellable6> RaycatWhoDat, I'll pass your message to timotimo

[11:50] <timotimo> o/

[11:50] <discord6> <RaycatWhoDat> oh hai

[11:50] <kiwi_7> the camelia evalbot seems to be offline, i.e. /msg camelia p6: isn't working

[11:53] <kiwi_7> p6: my int $native-int = 2**54; Promise.in($native-int);

[11:53] <evalable6> kiwi_7, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Cannot unbox 64 bit wide bigint into native integer␤  in block <unit> at /tmp/5YnyBIu1m2 line 1␤␤»

[11:54] <kiwi_7> It looks like 2**54 is turning into 2**64. Am I missing something?

[11:54] <timotimo> the whateverable bots refuse to do stuff in private messages, but if you don't want to fill the channel with a bot-conversation, you can go to #whateverable

[11:55] <timotimo> m: my int $native = 2 ** 53

[11:55] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «»

[11:55] <timotimo> m: my int $native = 2 ** 54

[11:55] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «»

[11:55] <timotimo> oh, it's only in the Promise.in bit

[11:55] <kiwi_7> Ah. The welcome message directs folk to use /msg camelia p6: ....

[11:55] <timotimo> that is a very good point

[11:57] <timotimo> i don't have sufficient permissions to change the topic

[12:04] <kiwi_7> Thanks for trying

[12:06] *** dolmen left
[12:11] *** Sgeo_ joined
[12:11] *** |Sno| joined
[12:11] *** tilpner_ joined
[12:11] *** Kaypie joined
[12:12] *** tilpner left
[12:12] *** Kaiepi left
[12:14] *** [Sno] left
[12:14] *** Sgeo left
[12:21] *** lucasb joined
[12:45] *** adu left
[13:00] *** veesh left
[13:05] *** [particle] joined
[13:18] *** kensanata joined
[13:19] *** pat_js left
[13:31] *** epony left
[13:31] *** a6502 left
[13:31] *** a6502 joined
[13:32] *** epony joined
[13:36] *** vrurg left
[13:41] *** vrurg joined
[13:55] *** TeamBlast left
[13:55] *** roguelazer left
[13:55] *** Guest85788 left
[13:55] *** success joined
[13:55] *** rba[m] left
[13:55] *** uzl[m] left
[13:55] *** Seance[m] left
[13:56] *** oodani left
[13:56] *** success is now known as Guest48024

[13:57] *** uzl[m] joined
[13:58] *** oodani joined
[13:58] *** samcv left
[14:00] *** rba[m] joined
[14:01] *** Seance[m] joined
[14:02] *** kiwi_7 left
[14:05] *** samcv joined
[14:08] *** dolmen joined
[14:09] *** vrurg left
[14:11] *** roguelazer joined
[14:19] *** TeamBlast joined
[14:22] *** vrurg joined
[14:27] *** dolmen left
[14:30] *** dolmen joined
[14:45] *** pat_js joined
[14:53] <moritz> I haven't been able to follow all of the renaming debate, so just a quick question if somebody has thought of this before:

[14:53] <moritz> lots of stuff is licensed "under the same terms as perl itself"

[14:53] <moritz> what will that mean when Perl 6 no longer has "perl" in the name?

[14:55] <El_Che> nothing I suppose as everyone says perl 6 != perl ;)

[14:58] <moritz> I mean, specifically Perl 6 modules licensed that way

[14:58] <lucasb> We need a Raku Artistic License!

[15:02] *** molaf joined
[15:04] <El_Che> moritz: the license is valid, it's refers to the p5 license

[15:04] *** MilkmanDan left
[15:04] *** MilkmanDan joined
[15:05] *** kensanata left
[15:09] <Grinnz> I thought p6 was mostly adopting artistic-2?

[15:10] <Grinnz> maybe this is a good indication that such modules need to be clearer in their licensing ;)

[15:13] *** ufobat__ joined
[15:15] *** sena_kun joined
[15:16] *** domidumont left
[15:16] *** ufobat_ left
[15:25] *** cheese16 joined
[15:27] <AlexDaniel> timotimo: I thought the plan is to bring camelia back online

[15:33] *** robertle left
[15:35] <Grinnz> by the way: I am also pleasantly surprised at the ratio of positive comments about both languages in the hacker news thread (linked in the issue)

[15:37] <Grinnz> I don't know what causes comments to get grayed out, but that's happening to all of the negative ones

[15:45] *** pat_js left
[15:48] <cheese16> I do not think that I have a say in the rename discussion. However, I want to give my 0.02 on this channel anyway: For me, "Perl" is about the people, the community, the attitude. The same people that explained Perl 5 to me 15-20 years ago are now part of the Perl 6 community. It feels like home. I hope to preserve that feeling regardless of the na

[15:48] <cheese16> me, but I feel there is some missing umbrella, then.

[15:49] <Grinnz> cheese16: I get that sentiment, and my hope is that since this can resolve the tension with the Perl 5 community, that feeling can be had once again between our communities as well.

[15:52] *** Cabanossi left
[16:03] <El_Che> cheese16: there are people that are on both communities, but I think most people are in one of the 2

[16:04] <El_Che> cheese16: the thing is however, that the relationship between both communities must be one of friendship and collaboration

[16:04] <El_Che> cheese16: that is not always the case, and one of the objective of the proposal is to help on that regard

[16:05] <cheese16> I really like your positivity :-)  My lack of involvement is probably to blame for me not experiencing so much of the tension. I always had the impression that PM meet-ups, internet forums, conferences, etc. are (open) for both Perl 5 and Perl 6 (people). That is what I like to keep. But maybe I am wrongly holding on to something that should rather

[16:05] <cheese16>  be split.

[16:05] <Grinnz> in person conferences are generally cordial, people are much more polite without anonymity ;)

[16:05] *** Cabanossi joined
[16:05] <cheese16> hehe

[16:06] <El_Che> When organising the Perl devroom at Fosdem several people told me they only where interested in the P6 talks or only the 5 talks

[16:06] <Grinnz> however, those who have not stuck around in Perl 5 spaces online (and I totally understand why) will have an incomplete picture of the current relationship

[16:06] <El_Che> as long as it's polite and not in anonimosity, I have no problem with that

[16:07] <Grinnz> my view is that both are true: we should have our own spaces, like we do on IRC, but we can also get along constructively

[16:09] <Grinnz> or put another way: there are overlaps in interests, but not so much where it should be inferred that someone expressing interest in one language will be interested in the other

[16:09] <tadzik> it's safe to say that both languages benefited from each other and still do

[16:09] <tadzik> it'd be a shame if that relationship didn't continue

[16:10] <cheese16> Is there an initiative w.r.t. somewhat regular Perl 6 meet-ups like PM?

[16:12] <El_Che> tadzik: there is no need to. Easing tension help, in my opinion

[16:13] <El_Che> cheese16: there may be, but even having p5 meetups is hard nowadays

[16:13] <cheese16> True

[16:15] *** robertle joined
[16:16] <El_Che> tadzik: last yapce I attended was Amsterdam, and there I felt the existence of rather distinct perl 5 and Perl 6 groups

[16:16] <El_Che> (Perl 6 people tended to stick together, as the community is smaller)

[16:17] <El_Che> I didn't have the feeling of a big Perl family, but rather 2 related community co-hosting an event

[16:17] <El_Che> my *personal* impression, of course

[16:17] <El_Che> (I tried hard to have social activities with p5 and p6 people and had a lot of fun)

[16:19] *** ufobat__ left
[16:22] <cheese16> El_Che: Thank you for your impressions!

[16:26] <cheese16> moritz: this might not be the right place to ask, but are you still in touch with SidBurn, Tina, Renee, GwenDragon etc.? (I know lichtkind is part of both communities.) I would love to see you all IRL for once :D 

[16:35] *** dolmen left
[16:36] *** dolmen joined
[16:44] *** MasterDuke joined
[16:49] *** cheese16 left
[16:58] *** sena_kun left
[17:16] *** dolmen left
[17:35] *** molaf left
[17:40] *** Sgeo_ left
[17:41] *** Sgeo_ joined
[17:42] *** ravenous_ joined
[17:46] *** Kaypie is now known as Kaiepi

[17:56] *** pilne joined
[18:06] *** tilpner_ is now known as tilpner

[18:06] <moritz> .tell cheese16 come to the German Perl Workshop 2020, I'll be there (and I'm one of the organizers) :D

[18:06] <tellable6> moritz, I'll pass your message to cheese16

[18:26] *** untaken_username joined
[18:28] <untaken_username> this working?

[18:28] <discord6> <Aearnus> oh shoot! my perl6 irc client is working

[18:28] <untaken_username> :)

[18:29] *** untaken_username left
[18:43] *** aborazmeh joined
[18:43] *** aborazmeh left
[18:43] *** aborazmeh joined
[18:51] *** Woodi left
[18:52] *** Cabanossi left
[18:53] *** chloekek joined
[18:56] *** Itaipu left
[19:01] *** Itaipu joined
[19:02] *** Black_Ribbon joined
[19:05] *** Cabanossi joined
[19:09] <jdv79> crazy that "

[19:09] <jdv79> Is Perl 6 Being Renamed?" is sticking around on hn front page for so long

[19:10] <Grinnz> well, ovid did dial up the clickbait on that title :P

[19:10] <timotimo> "the answer will surprise you"

[19:11] *** p_gurra left
[19:13] *** guifa joined
[19:13] <jdv79> right

[19:13] *** _jrjsmrtn joined
[19:14] <guifa> jnthn: I feel like I’m going to find every way to break the syntax checker in Comma so let me apologize in advance for the deluge of issues I’m probably going to send in (I found one with combining diacritics just now ha, because of course lower case r with tilde is a super common letter haha)

[19:16] *** __jrjsmrtn__ left
[19:21] *** [Sno] joined
[19:23] *** |Sno| left
[19:30] *** aborazmeh left
[19:32] *** aborazmeh joined
[19:32] *** aborazmeh left
[19:32] *** aborazmeh joined
[19:32] *** kensanata joined
[19:35] *** wildtrees joined
[19:38] *** aborazmeh left
[19:40] *** aborazmeh joined
[19:40] *** aborazmeh left
[19:40] *** aborazmeh joined
[19:43] *** aborazmeh left
[19:49] <rindolf> timotimo: heh

[19:49] *** ravenous_ left
[19:51] *** aborazmeh joined
[19:51] *** aborazmeh left
[19:51] *** aborazmeh joined
[19:55] *** aborazmeh left
[19:59] *** molaf joined
[20:00] *** chloekek left
[20:00] *** aborazmeh joined
[20:00] *** aborazmeh left
[20:00] *** aborazmeh joined
[20:01] *** Itaipu_ joined
[20:01] *** netrino joined
[20:02] *** aborazmeh left
[20:03] <El_Che> there are people on hackernews that talk about Rakudo running on Parrot

[20:03] <El_Che> :)

[20:03] <El_Che> (today)

[20:03] <El_Che> as the Perl 6 run stack

[20:04] <Xliff> .

[20:04] *** Itaipu left
[20:09] *** aborazmeh joined
[20:09] *** aborazmeh left
[20:09] *** aborazmeh joined
[20:11] *** a3f left
[20:11] *** a3f joined
[20:14] <El_Che> rurban is his cheery self about Perl(s) future in the thread :)

[20:17] <El_Che> (I like him in real life, but the comment are rather depressing)

[20:22] <Kaiepi> where in rakudo does it check if something that has the :D smiley is actually defined?

[20:27] *** aborazmeh left
[20:27] <timotimo> Kaiepi: for signature binding, the binder has one implementation and the signature lowerer has another

[20:28] <Kaiepi> thanks

[20:28] <El_Che> "Ofun" can be pronounced as "Zero Fun" <-- HN made me LOL

[20:29] <Grinnz> yeah that was the first time I heard that one also :)

[20:29] <timotimo> 00Fun

[20:29] *** aborazmeh joined
[20:29] *** aborazmeh left
[20:29] *** aborazmeh joined
[20:29] <El_Che> People's imagination always amaze me in a good way

[20:31] <El_Che> I think 50% of the comments are Grinnz :)

[20:31] <El_Che> He's schooling the internet about Perl 5 and 6 :)

[20:33] <Xliff> m: class B { }; class A { method b (B $b) { say 'B'; }; method b (Str() $s) { say $s; }; }; A.new.b(B.new); A.new.b(1)

[20:33] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/ldXeIp2diS␤Package 'A' already has a method 'b' (did you mean to declare a multi-method?)␤at /tmp/ldXeIp2diS:1␤»

[20:34] <Grinnz> I have been known to be a keyboard warrior

[20:34] <Xliff> m: class B { }; class A { multi method b (B $b) { say 'B'; }; multi method b (Str() $s) { say $s; }; }; A.new.b(B.new); A.new.b(1)

[20:34] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «B␤1␤»

[20:36] <Kaiepi> Type check failed in assignment to $symbol; expected Symbol but got Symbol(Any) (Symbol(Any))

[20:36] <Kaiepi> what does it mean when there's a type in parentheses like that?

[20:37] <Kaiepi> oh, coercion

[20:38] <Kaiepi> wait, why is it trying to coerce Any to Symbol? the assignment's just `my Symbol $symbol = Symbol()`, which just calls .new internally

[20:39] <timotimo> Type() is also in some places syntax for creating a coercion type

[20:39] <timotimo> it looks like that's what you got there

[20:39] <timotimo> i.e. "Symbol(Any)"

[20:41] <El_Che> http://blogs.perl.org/users/ovid/2019/08/is-perl-6-being-renamed.html#comment-1807517 : "Go's dep model is distributed CPAN"

[20:42] <AlexDaniel> yeah, “zero fun” is an interesting idea :)

[20:42] <El_Che> funny someone wrote it, I was thinking the same today

[20:42] <timotimo> first i read "go's dep model is distributed on cpan"

[20:42] <El_Che> go == github repo's galore, but now google offer an indexed proxy for dep resolution

[20:43] <El_Che> so for complex projects you went from minutes and 3GB aan data to seconds and almost no data locally

[20:43] <El_Che> (small and medium projects get theirs deps alomost instantly, also pre proxy)

[20:43] <Grinnz> timotimo: now that would be an interesting cross community initiative :P

[20:43] <timotimo> funny how our "dep model" started like go, i.e. a bunch of github repos, indexed even, to going to cpan

[20:44] <El_Che> I was reading the go release notes for the RC candidate, one I was thinking of cpan

[20:44] <El_Che> timotimo: well, they are having the best of boths worlds

[20:45] <El_Che> they rely on the github model, but they cache everything, so deps don't disappear if you do npm crazyness

[20:45] <timotimo> or when github goes down

[20:45] <El_Che> it's firstly about speed and centralizing the resolution of complex dependencies

[20:46] <El_Che> but yes, also uptime google can provide

[20:46] <Grinnz> oof. a github outage at this point would be comparable to the amazon ones 

[20:46] <Grinnz> though not as much for websites as for tooling

[20:47] <El_Che> Grinnz: one of biggest selling points of Go is the silly fast compile time, getting deps is related to that

[20:47] <AlexDaniel> yeah, github outages are pretty annoying…

[20:47] <El_Che> they targetted C people, but ended with a lot of python people and everyone doing Ruby :)

[20:48] <Kaiepi> wdym timotimo?

[20:48] <timotimo> hm?

[20:48] <Kaiepi> i'm typing symbols as Symbol everywhere, i don't see where it could be trying to coerce Any to Symbol

[20:49] <timotimo> no you're literally creating a Coercion Type and passing that around as a value

[20:52] <Kaiepi> ohh

[21:08] *** pecastro left
[21:08] *** aborazmeh left
[21:21] *** kensanata left
[21:24] *** pecastro joined
[21:46] <cpan-p6> New module released to CPAN! Symbol (0.0.2) by 03KAIEPI

[21:46] <cpan-p6> New module released to CPAN! Symbol (0.0.1) by 03KAIEPI

[21:47] <Xliff> m: my @a = ('a'...'z').rotor( 1 => 1).say

[21:47] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «((a) (c) (e) (g) (i) (k) (m) (o) (q) (s) (u) (w) (y))␤»

[21:47] <Xliff> m: my @a = ('a'...'z').rotor( 2 => 1).say

[21:47] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «((a b) (d e) (g h) (j k) (m n) (p q) (s t) (v w) (y z))␤»

[21:48] <Xliff> How can I take every 2nd element?

[21:49] <Xliff> m: my @a = ('a'...'z').rotor( 1 => 2 ).say

[21:49] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «((a) (d) (g) (j) (m) (p) (s) (v) (y))␤»

[21:50] <jnthn> m: my @a = ('a'...'z').rotor( 0 => 1, 1 => 1).say

[21:50] <evalable6> jnthn, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Rotorizing sublist length is out of range. Is: 0, should be in 1..^Inf␤  in block <unit> at /tmp/zQabK0qf1e line 1␤␤»

[21:50] <jnthn> Not like that :)

[21:50] *** rindolf left
[21:50] <jnthn> m: my @a = ('a'...'z')[2, 4 ... *]; say @a

[21:50] <evalable6> jnthn, rakudo-moar 0455f42e3: OUTPUT: «[c e g i k m o q s u w y]␤»

[21:50] <jnthn> uh, starting at 0 :)

[21:50] <jnthn> oh, wait

[21:50] <jnthn> m: my @a = ('a'...'z')[1, 3 ... *]; say @a

[21:50] <evalable6> jnthn, rakudo-moar 0455f42e3: OUTPUT: «[b d f h j l n p r t v x z]␤»

[21:51] <Xliff> Huh. Thought rotor would do that. Thanks, jnthn++!

[21:51] <Xliff> m: my @a = ('a'...'z').rotor( 1, 1 => 1 ).say

[21:51] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «((a) (b) (d) (e) (g) (h) (j) (k) (m) (n) (p) (q) (s) (t) (v) (w) (y) (z))␤»

[21:52] <jnthn> There's probably a way with rotor, but I can't immediately thing what it is :)

[21:52] <jnthn> The slice feels more natural

[21:52] <jnthn> (To me :))

[21:52] <Xliff> Yeah. I am trying to bend my brain to think rotor-y

[21:52] <Xliff> Considering I'm using it, ATM.

[21:52] <Xliff> m: my @a = ('a'...'z').rotor( 1 => 0, 1 => 1 ).say

[21:52] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «((a) (b) (d) (e) (g) (h) (j) (k) (m) (n) (p) (q) (s) (t) (v) (w) (y) (z))␤»

[21:53] <Xliff> m: my @a = ('a'...'z').rotor( 0, 1 => 1 ).say

[21:53] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Rotorizing sublist length is out of range. Is: 0, should be in 1..^Inf; ␤Did you mean to specify a Pair with => 0?␤  in block <unit> at /tmp/FugqxdfUMW line 1␤␤»

[21:54] <jnthn> m: my @a = ('a'...'z').skip(1).rotor( 1 => 1 ).say # is this cheating? :)

[21:54] <evalable6> jnthn, rakudo-moar 0455f42e3: OUTPUT: «((b) (d) (f) (h) (j) (l) (n) (p) (r) (t) (v) (x) (z))␤»

[21:54] <Xliff> OOH! No! No it isn't! :D

[21:54] <Xliff> Thanks, jnthn!

[22:01] <Kaiepi> cpan lets you upload a module with the same name as an existing one?

[22:02] <Kaiepi> also, i get this when i try to install Symbol: "Enabled fetching backends [git path curl] don't understand git://github.com/grondilu/symbol"

[22:02] <Grinnz> cpan (as it's the same one perl 5 uses) allows you to upload any unique file path within your directory

[22:03] <Grinnz> whether it gets used by anything is up to other infrastructure

[22:21] *** netrino left
[22:22] *** netrino joined
[22:22] *** mnx joined
[22:51] *** dogbert17 left
[23:13] *** netrino left
[23:17] <Elronnd> I want a live coding graphical interactive perl6 environment.  Exists such a thing?

[23:17] *** pecastro left
[23:17] *** [particle]1 joined
[23:18] *** [particle] left
[23:18] <timotimo> i've got a start of one that Xliff has been helping me make

[23:19] <timotimo> https://bitbucket.org/gtkshooter/p6-gtk-shooter/src/master/livecoding-new.p6 - here's the code, all the GTK modules as well as TEPL live in xliff's github, Cairo lives in the ecosystem

[23:19] <timotimo> https://cdn.discordapp.com/attachments/538774203378171935/611696639274516501/unknown.png - this is what it looks like

[23:20] *** agentzh left
[23:20] <Elronnd> cool

[23:23] *** [particle] joined
[23:25] *** [particle]1 left
[23:27] <Elronnd> hmmm, I think it might be better if  the drawing code were in the top level instead of being in a frame function.  Obviously it's still in prototypephase

[23:28] *** [particle] left
[23:28] *** [particle]1 joined
[23:28] <timotimo> feel free to fork and experiment

[23:28] <timotimo> i must warn you, the build times for the gtk modules are Quite Something

[23:29] <Elronnd> ;<

[23:29] <Elronnd> thank god for cache

[23:29] <Elronnd> I imagine it's faster in the naive case to have the code in a function.  But there is probably some way to do it

[23:32] <timotimo> stuffing the code into EVAL once per frame would be Very Bad

[23:32] <timotimo> with some nqp:: ops, that you aren't supposed to use, you can get a handle to the mainline of a compunit

[23:32] <Elronnd> hmm

[23:33] <Elronnd> I was imagining stuffing all the code into its own function.  So my &code = EVAL("sub foo { $code; }")

[23:33] <timotimo> ah, just string manipulation

[23:34] <Elronnd> yeah

[23:34] <Elronnd> I'm not sure how well that would work, though.  Would that re-define the nested functions every time you called &code, or is it smart enough to not do that?

[23:34] <Elronnd> and also, variables would end up kind of volatile

[23:35] <Elronnd> why come gtk stuff isn't in repos?

[23:36] <timotimo> not sure

[23:37] *** [particle] joined
[23:38] *** [particle]1 left
[23:43] <Xliff> Elronnd: Some of it is still quite experimental. There are some things in Pango that I haven't gotten an handle on and that affects eferything downstream.

[23:44] <Xliff> Plus, the build times would be significant. With the current way Zef works, you might find your maching processing for almost an hour.

[23:44] <Elronnd> ahh

[23:44] <Xliff> And that might make people think it's hung, when it really isn't. I need to figure out a way to make the install process more verbose... or at least "user friendly"

[23:45] <Xliff> Seriously, it's to the point where I am thinking I might have to use a distro packaging system to not ward off potential users.

[23:46] <Xliff> Also thinking about breaking some of this out into its own projects, but I have other things I am working on dependent on p6-GtkPlus that I don't want to break.

[23:46] <Xliff> ...yet

[23:46] <Xliff> Besides, if you are brave enough, the git repo has installation instructions.

[23:47] <Xliff> Build times are actually quite "reasonable" on my 20-core 4GHz box. ;q

[23:47] <Xliff> (that was a joke... laugh!)

[23:47] * Elronnd has only a 2-core 2GHz machine ;-;

[23:48] <timotimo> did rakudo's recent change that prevents double precomps when two processes are competing help any with zef's install times of these modules?

[23:51] <Xliff> I've never tried with zef. Maybe I should?

[23:51] <Xliff> How recent was the change?

[23:51] <Xliff> Oh! So there actually was an issue with double precomps?!? HA! I was right!

[23:52] <Xliff> Or not. I am actually getting quite buzzed on beer. Don't mind me.

[23:52] <Elronnd> tbf, half of several hours is still at least a couple of hours

[23:53] <timotimo> it can be n times as much if there are n processes competing

[23:53] <Elronnd> ...right

[23:53] * Xliff looks at rakudo commit log.

[23:54] <timotimo> rakudo was honoring the lock on the precomp repo, but didn't check if what it wanted to precompile was precompiled while it was waiting for the lock to be freed

[23:54] <timotimo> i.e. if you start 50 processes at the same time that all "use" the same module, they can attempt to precomp 50x in a row

[23:54] <Xliff> Hmm....

[23:54] <timotimo> but now, the 49 processes that didn't win access to the lock will check again for their desired precomp thing and just load that when it has shown up in the mean time

[23:54] <Xliff> That might not be what I'm experiencing, then...

[23:55] <timotimo> maybe zef should be combined with the "staging repository"

[23:55] <timotimo> which allows precomp in one place to be copied over to a different place

[23:56] <Xliff> Yes.

[23:56] <Xliff> That would really help with packaging.

[23:57] <Xliff> timotimo: Also, I think I am close to having a grammar that parses new --stagestats. It's really growing on me. 

[23:57] <timotimo> glad to hear it

[23:57] <timotimo> i just like watching it go by

[23:57] <Xliff> LOL

[23:59] <Kaiepi> m: sub floor(Rat(Int(Rat)) $num) { $num }; say floor 1.1

[23:59] <evalable6> Kaiepi, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Type check failed in binding to parameter '$num'; expected Int(Rat) but got Rat (1.1)␤  in sub floor at /tmp/OuZcsnX8xa line 1␤  in block <unit> at /tmp/OuZcsnX8xa line 1␤␤»

[23:59] <Kaiepi> should this work?

[23:59] <timotimo> i'd actually expect the outermost type to match and it to skip the coercion completely

