[00:00] <scovit> but for a problem in dlsym unrelated to perl6

[00:00] <scovit> probably puts is a macro in linux?

[00:02] <scovit> different values of RTLD_DEFAULT?

[00:02] <scovit> yep

[00:03] <scovit> m: https://gist.github.com/scovit/d328be9817eef73fbe98cc98f99ee3a3

[00:03] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´Signature $sign = :(Str $text --> int32)‚ê§This comes from a dynamically generated nativecast of puts obtained by dlsym!‚ê§¬ª

[00:04] <scovit> success

[00:06] <scovit> now I can make a function with a slurpy and call my symbol with an appropriate dynamically generated signature

[00:07] <scovit> I wonder if there was no easier way..

[00:07] <sena_kun> >Serialization Error: missing static code ref for closure '' (src/Perl6/World.nqp:963)

[00:07] <sena_kun> heh

[00:07] <sena_kun> if it was so simple. :)

[00:10] *** HaraldJoerg left
[00:15] *** Kaypie left
[00:15] *** Merfont joined
[00:16] *** p6bannerbot sets mode: +v Merfont

[00:17] *** Kaypie joined
[00:17] *** Merfont left
[00:18] *** p6bannerbot sets mode: +v Kaypie

[00:23] *** w_richard_w joined
[00:24] *** p6bannerbot sets mode: +v w_richard_w

[00:31] *** w_richard_w left
[00:40] <sena_kun> m: my $new-enum = Metamodel::EnumHOW.new_type(name => 'custom', base_type => Int); $new-enum.^compose_repr; my \Two = $new-enum.new(2); my \custom = $new-enum; my custom $two = Two;

[00:40] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´===SORRY!===‚ê§No compile-time value for custom‚ê§¬ª

[00:40] <sena_kun> m: my $new-enum = Metamodel::EnumHOW.new_type(name => 'custom', base_type => Int); $new-enum.^compose_repr; my \Two = $new-enum.new(2); my \custom = $new-enum; my custom $two = Two;

[00:40] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´===SORRY!===‚ê§No compile-time value for custom‚ê§¬ª

[00:40] <sena_kun> hmmm...

[00:41] <sena_kun> m: my $new-enum = Metamodel::EnumHOW.new_type(name => 'custom', base_type => Int); $new-enum.^compose_repr; my \Two = $new-enum.new(2); my \custom = $new-enum; my custom $two = Two;

[00:41] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´===SORRY!===‚ê§No compile-time value for custom‚ê§¬ª

[00:43] *** Ven`` left
[00:46] <lookatme_q> m: constant $new-enum = Metamodel::EnumHOW.new_type(name => 'custom', base_type => Int); $new-enum.^compose_repr; my \Two = $new-enum.new(2); constant \custom = $new-enum; my custom $two = Two; say $two;

[00:46] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´2‚ê§¬ª

[00:48] <sena_kun> well, in my real code I am getting: `Type check failed in assignment to $!custom; expected Custom but got 2`. :|

[00:49] <sena_kun> I guess I have to sleep with this issue unresolved.

[00:49] <lookatme_q> good night sena_kun 

[00:49] <sena_kun> o/

[00:49] *** sena_kun left
[00:52] *** kent\n joined
[00:52] *** p6bannerbot sets mode: +v kent\n

[00:57] <timotimo> well, it wasn't imported

[00:57] <timotimo> oops, i was scrolled way up

[01:13] *** hphs^ left
[01:13] *** Sgeo_ joined
[01:14] *** p6bannerbot sets mode: +v Sgeo_

[01:17] *** Sgeo__ left
[01:21] *** kst joined
[01:22] *** p6bannerbot sets mode: +v kst

[01:29] *** hcs^ joined
[01:30] *** p6bannerbot sets mode: +v hcs^

[01:37] *** zachk left
[02:07] *** Sgeo_ left
[02:08] *** Sgeo_ joined
[02:08] *** p6bannerbot sets mode: +v Sgeo_

[02:16] <Xliff> Can you use Perl6 to parse perl6?

[02:16] <Xliff> (of course you can...) 

[02:16] <Xliff> A better question would be... how can you do it?

[02:16] <Xliff> For example, I'd like to parse a Grammar definition without reinventing the wheel

[02:23] *** khisanth_ left
[02:36] *** khisanth_ joined
[02:37] *** p6bannerbot sets mode: +v khisanth_

[02:52] <AlexDaniel> Xliff: see also: https://github.com/drforr/perl6-Perl6-Parser

[03:35] *** jme` joined
[03:35] *** p6bannerbot sets mode: +v jme`

[03:36] <Xliff> AlexDaniel++: Thanks for the recommendation, but perl6-Perl6-Parser may work, but I have no idea how to use it based on the code.

[03:36] <Xliff> Everything in the t/ directory is kinda inscrutable. :/

[03:39] <Xliff> I shall play with it further.

[03:39] <Xliff> Thanks!

[03:56] *** Cabanossi left
[03:57] *** Cabanossi joined
[03:58] *** p6bannerbot sets mode: +v Cabanossi

[03:59] *** Sgeo_ left
[04:00] *** Sgeo_ joined
[04:00] *** p6bannerbot sets mode: +v Sgeo_

[04:04] *** kurahaupo joined
[04:05] *** p6bannerbot sets mode: +v kurahaupo

[04:07] *** KDr2 joined
[04:07] *** p6bannerbot sets mode: +v KDr2

[04:32] *** Cabanoss- joined
[04:33] *** p6bannerbot sets mode: +v Cabanoss-

[04:34] *** Cabanossi left
[04:36] *** sauvin joined
[04:36] *** p6bannerbot sets mode: +v sauvin

[04:52] *** jernster joined
[04:53] *** p6bannerbot sets mode: +v jernster

[04:54] *** kurahaupo left
[04:54] *** AlexDani` joined
[04:54] *** kst` joined
[04:54] *** p6bannerbot sets mode: +v AlexDani`

[04:54] *** ferreira joined
[04:55] *** kurahaupo joined
[04:55] *** p6bannerbot sets mode: +v kst`

[04:55] *** p6bannerbot sets mode: +v ferreira

[04:55] *** p6bannerbot sets mode: +v kurahaupo

[04:56] *** scovit_ joined
[04:57] *** caa51h_ joined
[04:57] *** p6bannerbot sets mode: +v scovit_

[04:57] *** atacama_ joined
[04:58] *** p6bannerbot sets mode: +v caa51h_

[04:58] *** p6bannerbot sets mode: +v atacama_

[05:02] *** jme` left
[05:02] *** kst left
[05:02] *** AlexDaniel left
[05:02] *** ferreira1 left
[05:02] *** scovit left
[05:02] *** TreyHarris left
[05:02] *** abraxxa left
[05:02] *** caa51h left
[05:02] *** atacama left
[05:04] *** tankf33der left
[05:08] *** TreyHarris joined
[05:08] *** p6bannerbot sets mode: +v TreyHarris

[05:10] *** abraxxa joined
[05:11] *** p6bannerbot sets mode: +v abraxxa

[05:26] *** rindolf joined
[05:27] *** rindolf left
[05:29] *** mowcat joined
[05:29] *** mowcat left
[05:30] *** finanalyst joined
[05:30] *** p6bannerbot sets mode: +v finanalyst

[05:31] *** rindolf joined
[05:32] *** p6bannerbot sets mode: +v rindolf

[05:47] *** molaf joined
[05:48] *** p6bannerbot sets mode: +v molaf

[05:55] *** curan joined
[05:55] *** p6bannerbot sets mode: +v curan

[05:57] *** kst` left
[05:58] *** kst joined
[05:59] *** p6bannerbot sets mode: +v kst

[06:14] *** jmerelo joined
[06:15] *** rindolf left
[06:15] *** p6bannerbot sets mode: +v jmerelo

[06:16] <SmokeMachine> Xliff: https://github.com/FCO/GccJit/blob/master/jit.p6

[06:23] *** vrurg left
[06:30] *** rindolf joined
[06:31] *** p6bannerbot sets mode: +v rindolf

[06:31] *** mowcat joined
[06:32] *** vrurg joined
[06:32] *** p6bannerbot sets mode: +v mowcat

[06:32] *** Sgeo_ left
[06:32] *** p6bannerbot sets mode: +v vrurg

[06:35] <rindolf> Hi all! I was saddened to learn that PerlJam passed away - https://www.reddit.com/r/perl/comments/ab0kuk/201853_goodbye_perljam_weekly_changes_in_and/

[06:36] *** finanalyst left
[06:37] *** finanalyst joined
[06:37] *** vrurg left
[06:37] *** p6bannerbot sets mode: +v finanalyst

[06:40] *** molaf left
[06:41] <Geth> ¬¶ doc: 616941013f | (JJ Merelo)++ | doc/Language/modules.pod6

[06:41] <Geth> ¬¶ doc: Some rewording and reflow

[06:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/616941013f

[06:41] <Geth> ¬¶ doc: 70681c551f | (JJ Merelo)++ | doc/Language/variables.pod6

[06:41] <Geth> ¬¶ doc: We're no longer using tables here

[06:41] <synopsebot> Link: https://doc.perl6.org/language/modules

[06:41] <synopsebot> Link: https://doc.perl6.org/language/variables

[06:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/70681c551f

[06:41] <Geth> ¬¶ doc: 09a0263e4c | (JJ Merelo)++ | doc/Language/variables.pod6

[06:41] <Geth> ¬¶ doc: Makes distinction between "gist" and "stringification"

[06:41] <Geth> ¬¶ doc: 

[06:41] <Geth> ¬¶ doc: Also some reflow and grammar changes. This would close #2545.

[06:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/09a0263e4c

[06:41] <jmerelo> finanalyst: ^^^ and hi!

[06:41] *** finanalyst left
[06:43] <holyghost> hi JJ, I worked on PaganSound2, a wave editor in perl6

[06:44] <holyghost> using SDL2::Raw

[06:44] <jmerelo> holyghost: great!

[06:44] <holyghost> I need to grep the fourier analysis :-)

[06:52] <holyghost> DFT, DTFT

[06:53] *** finanalyst joined
[06:54] *** p6bannerbot sets mode: +v finanalyst

[06:59] *** domidumont joined
[06:59] <holyghost> bit pattern to wave and vv.

[07:00] *** p6bannerbot sets mode: +v domidumont

[07:10] *** w17t joined
[07:10] *** p6bannerbot sets mode: +v w17t

[07:11] *** Sgeo joined
[07:12] *** p6bannerbot sets mode: +v Sgeo

[07:20] * moritz had a fun venture into Lomb-Scargle analysis to find periodicity in unevenly spaced time series data

[07:35] *** jmerelo left
[07:48] <masak> that does sound like fun.

[07:58] <holyghost> I'm working on a video server for perl6, is there anything interfaced such as ffmpeg ?

[07:58] <holyghost> s/interfaced/modularized

[08:03] *** lgtaube left
[08:19] *** lgtaube joined
[08:20] *** p6bannerbot sets mode: +v lgtaube

[08:27] *** jast joined
[08:28] *** p6bannerbot sets mode: +v jast

[08:37] *** kensanata joined
[08:37] *** p6bannerbot sets mode: +v kensanata

[09:01] *** zakharyas joined
[09:02] *** p6bannerbot sets mode: +v zakharyas

[09:17] *** dakkar joined
[09:18] *** p6bannerbot sets mode: +v dakkar

[09:25] *** robertle_ joined
[09:26] *** p6bannerbot sets mode: +v robertle_

[09:54] *** reach_satori left
[10:04] *** Sgeo left
[10:04] *** Sgeo joined
[10:04] *** patrickb joined
[10:05] *** p6bannerbot sets mode: +v Sgeo

[10:05] *** p6bannerbot sets mode: +v patrickb

[10:16] *** lizmat joined
[10:16] *** p6bannerbot sets mode: +v lizmat

[10:20] *** tobs` joined
[10:21] *** p6bannerbot sets mode: +v tobs`

[10:21] *** reach_satori joined
[10:22] *** p6bannerbot sets mode: +v reach_satori

[10:33] <daxim> m: subset Nonempty of Str where *.chars ‚â• 0; my Nonempty $x = ''; say $x.chars;

[10:33] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´0‚ê§¬ª

[10:35] <lizmat> m: m: subset Nonempty of Str where *.chars > 0; my Nonempty $x = ''; say $x.chars;

[10:35] <yoleaux> 8 Jan 2019 15:31Z <Kaiepi> lizmat: msg me once you're on

[10:35] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´Type check failed in assignment to $x; expected Nonempty but got Str ("")‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:35] <yoleaux> 8 Jan 2019 16:52Z <sjn> lizmat: link in 2019.01 weekly to Brad Gilbert's tweet seems wrong

[10:35] <daxim> I'm stupid

[10:36] <jnthn> The * isn't needed there either, since the thing after `where` is already thunked wiht $_ set

[10:36] <daxim> I'll keep posting the examples, sometimes they are legitimate, sometimes I just need a whack 'side the head

[10:38] <lizmat> .tell sjn fixed link, thanks for noticing!

[10:38] <yoleaux> lizmat: I'll pass your message to sjn.

[10:38] <sjn> yay!

[10:38] <yoleaux> 10:38Z <lizmat> sjn: fixed link, thanks for noticing!

[10:38] <sjn> yay2!

[10:38] <sjn> :)

[10:41] <El_Che> .tell sjn You funny guy

[10:41] <yoleaux> El_Che: I'll pass your message to sjn.

[10:42] <sjn> yay3!

[10:42] <yoleaux> 10:41Z <El_Che> sjn: You funny guy

[10:51] *** finanalyst left
[10:54] *** lizmat left
[10:57] *** lizmat joined
[10:57] *** p6bannerbot sets mode: +v lizmat

[11:00] *** Sgeo left
[11:01] *** Sgeo joined
[11:02] *** p6bannerbot sets mode: +v Sgeo

[11:05] *** harrison joined
[11:05] *** p6bannerbot sets mode: +v harrison

[11:11] *** domidumont left
[11:33] <holyghost> lol

[11:33] <holyghost> the video server might be deamonized :-)

[11:43] <kurahaupo> d√¶monic video? üòã

[11:46] *** finanalyst joined
[11:47] *** p6bannerbot sets mode: +v finanalyst

[11:54] <holyghost> scalar video :-)

[12:09] <Kaypie> m: class X::Foo is Exception { method message(--> Str) { 'foo' } }; X::Foo.new.throw

[12:09] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´foo‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:10] <Kaypie> m: class X::Foo is Exception { method message(--> Str) { 'foo' } }; die X::Foo.new

[12:10] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´foo‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:10] <Kaypie> what's the difference between throwing these two ways?

[12:15] <timotimo> if someone overwrites the throw method on the exception object to do something funny, something funny will happen :D

[12:18] <Kaypie> do people do that?

[12:19] *** reach_satori left
[12:20] <timotimo> the answer to that question is always yes

[12:26] *** zakharyas left
[12:26] *** lucasb joined
[12:26] *** p6bannerbot sets mode: +v lucasb

[12:27] *** domidumont joined
[12:28] *** p6bannerbot sets mode: +v domidumont

[13:13] *** AlexDani` is now known as AlexDaniel

[13:13] *** finanalyst left
[13:20] *** kubrat joined
[13:21] *** p6bannerbot sets mode: +v kubrat

[13:23] *** reach_satori joined
[13:24] *** p6bannerbot sets mode: +v reach_satori

[13:28] *** w17t left
[13:40] *** vms14 joined
[13:40] *** p6bannerbot sets mode: +v vms14

[13:41] *** scovit_ is now known as scovit

[13:43] *** reach_satori left
[13:45] *** molaf joined
[13:46] *** p6bannerbot sets mode: +v molaf

[13:53] *** matthew[m] is now known as Matthew[m]

[13:58] *** molaf left
[13:59] *** zakharyas joined
[14:00] *** p6bannerbot sets mode: +v zakharyas

[14:06] *** kudzo joined
[14:07] <El_Che> $ brew info rakudo

[14:07] <El_Che> rakudo: stable 2018.12 (bottled)

[14:07] <El_Che> Perl 6 compiler targeting MoarVM

[14:07] <El_Che> https://rakudo.org

[14:07] <El_Che> Not installed

[14:07] <camelia> rakudo-moar 4d7cdc0f4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3stable 2018.127‚èè5 (bottled)‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement‚Ä¶¬ª

[14:07] <El_Che> From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/rakudo.rb

[14:07] <El_Che> ==> Dependencies

[14:07] <El_Che> Required: nqp ‚úò

[14:07] *** p6bannerbot sets mode: +v kudzo

[14:07] <El_Che> ==> Analytics

[14:07] <El_Che> install: 44 (30 days), 50 (90 days), 50 (365 days)

[14:07] <El_Che> install_on_request: 44 (30 days), 50 (90 days), 50 (365 days)

[14:07] <El_Che> oops

[14:07] <El_Che> anyway: good news

[14:07] <El_Che> there is now a rakudo pkg on homebrew

[14:07] <El_Che> next to rakudo-star

[14:08] <El_Che> It was on my todo list to create a rakudo only formula, but it's already done!

[14:08] *** harrison left
[14:09] <lizmat> El_Che++

[14:09] <El_Che> (not by me: El_Che--)

[14:10] <El_Che> I'll keep an eye on it, and try to collaborate on that repo

[14:16] *** vrurg joined
[14:16] *** p6bannerbot sets mode: +v vrurg

[14:24] *** random_yanek left
[14:31] *** vms14 left
[14:40] *** reach_satori joined
[14:41] *** p6bannerbot sets mode: +v reach_satori

[14:42] *** kensanata left
[14:46] *** curan left
[14:53] *** go|dfish joined
[14:53] *** p6bannerbot sets mode: +v go|dfish

[14:55] <tyil> I vaguely remember something about rakudo-star looking for a new maintainer/releaser

[14:56] <tyil> was one ever found, or am I remembering wrong and were they not looking for a new one to begin with?

[14:58] <El_Che> there where a few candidates on github

[15:00] <tyil> I only have GNU+Linux machines, so I can't release for mac/windows, so I'm not a great person to get into that stuff

[15:00] <tyil> I'm mostly interested in the updates for it rn because it should be time for a new R* soon-ish

[15:00] <El_Che> I release the Linux packages with Travis

[15:00] <El_Che> so that help

[15:00] <El_Che> s

[15:01] <El_Che> but need to get into windows packaging, btut don't use Windows enough to be knowledgable

[15:01] <tyil> I build R* from source, so that's not relevant for me :p

[15:01] <tyil> I thought you only did regular Perl 6 releases, not the R* releases

[15:02] <El_Che> yes, I don't use star

[15:02] *** molaf joined
[15:02] <El_Che> I was looking at expanding rakudo packages with macos and windows once I have the time

[15:02] <El_Che> not there yet

[15:02] *** Sgeo_ joined
[15:03] *** p6bannerbot sets mode: +v molaf

[15:03] *** p6bannerbot sets mode: +v Sgeo_

[15:05] *** Sgeo left
[15:07] *** kensanata joined
[15:07] *** p6bannerbot sets mode: +v kensanata

[15:07] *** sjoshi joined
[15:08] *** p6bannerbot sets mode: +v sjoshi

[15:12] *** go|dfish left
[15:14] *** sena_kun joined
[15:15] *** p6bannerbot sets mode: +v sena_kun

[15:20] *** jernster left
[15:21] *** Kaypie is now known as Kaiepi

[15:27] *** go|dfish joined
[15:27] *** p6bannerbot sets mode: +v go|dfish

[15:30] <Xliff> m: $a = ( do => 1 ); $a.gist.say

[15:30] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5$a = ( do => 1 ); $a.gist.say‚ê§¬ª

[15:30] <Xliff> m: my $a = ( do => 1 ); $a.gist.say

[15:30] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´do => 1‚ê§¬ª

[15:33] *** molaf left
[15:40] *** Ven`` joined
[15:41] *** p6bannerbot sets mode: +v Ven``

[15:42] *** powerbit left
[15:44] *** Sgeo joined
[15:45] *** p6bannerbot sets mode: +v Sgeo

[15:45] *** MasterDuke joined
[15:45] *** p6bannerbot sets mode: +v MasterDuke

[15:45] *** MasterDuke left
[15:45] *** MasterDuke joined
[15:45] *** herbert.freenode.net sets mode: +v MasterDuke

[15:45] *** p6bannerbot sets mode: +v MasterDuke

[15:46] *** Sgeo_ left
[15:46] *** Sgeo_ joined
[15:47] *** p6bannerbot sets mode: +v Sgeo_

[15:50] *** Sgeo left
[15:52] *** molaf joined
[15:53] *** p6bannerbot sets mode: +v molaf

[15:53] <Xliff> m: my $a = ( do => 1 ); $a<done> = $a<do>:delete; $a.gist.say

[15:53] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´Cannot modify an immutable Str (Nil)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:53] <Xliff> m: my $a = ( do => 1 ); $a<done> = $a<do>; $a.gist.say

[15:53] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´Cannot modify an immutable Str (Nil)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:54] <Xliff> m: my $a = ( do => 1 ); $a<d> = $a<do>; $a.gist.say

[15:54] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´Cannot modify an immutable Str (Nil)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:54] <Xliff> m: my %a = ( do => 1 ); %a<d> = %a<do>; %a.gist.say

[15:54] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´{d => 1, do => 1}‚ê§¬ª

[15:54] <Xliff> m: my %a = ( do => 1 ); %a<d> = %a<do>:delete; %a.gist.say

[15:54] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´{d => 1}‚ê§¬ª

[15:56] <Xliff> m: my %a = ( do => 1; e => ':P' ); %a<d> = %a<do>:delete; %a.gist.say; %a<d> //= $a<e>:delete; %a.gist.say

[15:56] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared. Did you mean '%a'?‚ê§at <tmp>:1‚ê§------> 3= %a<do>:delete; %a.gist.say; %a<d> //= 7‚èè5$a<e>:delete; %a.gist.say‚ê§¬ª

[15:56] <Xliff> m: my %a = ( do => 1; e => ':P' ); %a<d> = %a<do>:delete; %a.gist.say; %a<d> //= %a<e>:delete; %a.gist.say

[15:56] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´{d => 1, e => :P}‚ê§{d => 1, e => :P}‚ê§¬ª

[15:57] <Xliff> m: my %a = ( do => 1; e => ':P' ); %a<d> = %a<do>:delete; %a.gist.say; %a<d> //= %a<e> && %a<e>:delete; %a.gist.say

[15:57] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§You can't adverb &infix:<&&>‚ê§at <tmp>:1‚ê§------> 3ist.say; %a<d> //= %a<e> && %a<e>:delete7‚èè5; %a.gist.say‚ê§    expecting any of:‚ê§        pair value‚ê§¬ª

[15:58] <Xliff> m: my %a = ( do => 1; e => ':P' ); %a<d> = %a<do>:delete; %a.gist.say; %a<d> //= %a<e> && (%a<e>:delete); %a.gist.say

[15:58] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´{d => 1, e => :P}‚ê§{d => 1, e => :P}‚ê§¬ª

[15:58] <Xliff> m: my %a = ( do => 1; e => ':P' ); %a<d> = %a<do>:delete; %a.gist.say; %a<d> //= %a<e> || (%a<e>:delete); %a.gist.say

[15:58] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´{d => 1, e => :P}‚ê§{d => 1, e => :P}‚ê§¬ª

[15:58] <Xliff> m: my %a = ( do => 1; e => ':P' ); %a<d> = %a<do>:delete; %a.gist.say; %a<d> //= %a<e>; %a<e>:delete; %a.gist.say

[15:58] <camelia> rakudo-moar 095d216ae: OUTPUT: ¬´{d => 1, e => :P}‚ê§{d => 1}‚ê§¬ª

[16:01] *** robertle_ left
[16:13] *** cfa joined
[16:13] *** p6bannerbot sets mode: +v cfa

[16:13] <cfa> o/

[16:17] <Kaiepi> m: 'https://hastebin.com/raw/abcdefghij' ~~ / [ [ https?:\/\/ ]? hastebin\.com\/ [ raw\/ ]? ]? ( \w+ ) [ \.\w+ ]? /; say $0

[16:17] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´ÔΩ¢httpsÔΩ£‚ê§¬ª

[16:18] <Kaiepi> m: 'https://hastebin.com/raw/abcdefghij' ~~ / [ [ https?\:\/\/ ]? hastebin\.com\/ [ raw\/ ]? ]? ( \w+ ) [ \.\w+ ]? /; say $0

[16:18] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´ÔΩ¢abcdefghijÔΩ£‚ê§¬ª

[16:18] <Kaiepi> why does the colon in the non-capturing group make it capture if it isn't escaped?

[16:19] <moritz> it doesn't capture

[16:19] <moritz> you're printing $/, and that matches only the string 'https'

[16:19] <moritz> wait, no

[16:20] <moritz> the first part doesn't match, but since there's a ? before it, that doesn't cause the match to faile. So the (\w+) matches https

[16:21] *** kensanata left
[16:21] <moritz> (and it doesn't match because there's nothing that could match the : in the input string)

[16:21] <tobs`> m: 'https://hastebin.com/raw/abcdefghij' ~~ /^ [ [ https?:\/\/ ]? hastebin\.com\/ [ raw\/ ]? ]? ( \w+ ) [ \.\w+ ]? $/; say $0

[16:21] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´Nil‚ê§¬ª

[16:26] *** lucasb left
[16:29] <avuserow> m: 'https://hastebin.com/raw/abcdefghij' ~~ /^ [ [ https?\:\/\/ ]? hastebin\.com\/ [ raw\/ ]? ]? ( \w+ ) [\.\w+]? $/; say $0

[16:29] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´ÔΩ¢abcdefghijÔΩ£‚ê§¬ª

[16:30] <Kaiepi> oh

[16:30] <avuserow> colon needed to be escaped, tobs`, otherwise it has meaning

[16:31] <tobs`> yes, I understood the explanation

[16:32] <avuserow> ah okay, I just saw the last one not matching anything and jumped in

[16:35] <tobs`> "if you have lots of optional parts and you expect to match the whole string anyway, use the ^ and $ anchors to prevent false positive matches" is what I wanted to reaffirm with that line, I think

[16:43] <Geth> ¬¶ ecosystem: 38090d7fda | (Ben Davies)++ (committed using GitHub Web editor) | META.list

[16:43] <Geth> ¬¶ ecosystem: Add Hastebin module to META.list

[16:43] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/38090d7fda

[16:45] *** domidumont left
[16:45] *** tobs` left
[16:47] *** cnx joined
[16:47] *** p6bannerbot sets mode: +v cnx

[16:51] *** cnx left
[17:01] *** domidumont joined
[17:02] *** jmerelo joined
[17:02] *** p6bannerbot sets mode: +v domidumont

[17:02] *** p6bannerbot sets mode: +v jmerelo

[17:05] <jmerelo> Hi!

[17:06] <jmerelo> .tell AlexDaniel did you check out the Squashathon calendar? https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:06] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[17:06] <AlexDaniel> yes

[17:06] <yoleaux> 17:06Z <jmerelo> AlexDaniel: did you check out the Squashathon calendar? https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:06] <AlexDaniel> .

[17:06] <jmerelo> Hi, Alex

[17:06] <AlexDaniel> IMO we should try to keep it more fun

[17:07] <AlexDaniel> so maybe more new ideas

[17:07] <jmerelo> AlexDaniel: the only new idea is to look at the Most Wanted modules list and decide on the creation of new ones.

[17:07] <AlexDaniel> also the unbitrot one for the next month needs this resolved: https://github.com/perl6/Blin/issues/1

[17:08] *** w17t joined
[17:08] *** p6bannerbot sets mode: +v w17t

[17:08] <jmerelo> AlexDaniel: OK, right.

[17:08] <jmerelo> That's on me.

[17:08] <Geth> ¬¶ Blin: JJ self-assigned Automatically populate/update ecosystem-unbitrot issues https://github.com/perl6/Blin/issues/1

[17:08] <jmerelo> Sorry about that.

[17:10] *** sjoshi left
[17:10] <AlexDaniel> let me know if you need any help

[17:10] <AlexDaniel> maybe you'd also need to do https://github.com/perl6/Blin/issues/5 first

[17:13] *** random_yanek joined
[17:13] *** random_yanek left
[17:14] <Geth> ¬¶ Blin: JJ self-assigned JSON output is needed https://github.com/perl6/Blin/issues/5

[17:14] <jmerelo> I self-assigned it too, but of course anyone can do something about it if needed.

[17:15] *** melezhik joined
[17:15] *** p6bannerbot sets mode: +v melezhik

[17:16] *** random_yanek joined
[17:16] *** p6bannerbot sets mode: +v random_yanek

[17:22] <melezhik> Hi! I have module name in string variable. $name

[17:22] <yoleaux> 8 Jan 2019 06:36Z <SmokeMachine> melezhik: something like this: "Pod::To::Markdown:ver<0.1.4+>"

[17:22] *** zakharyas left
[17:22] <melezhik> thanks! yoleaux:

[17:22] <melezhik> how do I call module's function having $name ?

[17:23] <timotimo> have you already "require"d it?

[17:24] <melezhik> yes

[17:24] <tyil> m: my $f = "say"; ::("&$f")("hello!");

[17:24] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´hello!‚ê§¬ª

[17:24] <tyil> melezhik: ^

[17:24] <melezhik> yeah, tyil: thanks

[17:24] <melezhik> tyil: how the things are, btw? ((:

[17:24] *** w17t left
[17:25] <tyil> not bad, living with samcv in Amsterdam these days

[17:25] <jmerelo> melezhik: you need to use the module before the function, maybe.

[17:25] <tyil> got a new job as devops in amsterdam, where I can sometimes use Perl 6

[17:25] <tyil> jmerelo: would probably need a require, so it happens at runtime instead

[17:25] *** irdr left
[17:25] <tyil> melezhik: will u attend fosdem or TPC in Riga later this year?

[17:25] <jmerelo> tyil: great to hear about your new job. Congrats!

[17:26] <tyil> jmerelo: I've had said job for abour 3 months now, but I ahvent spoken to melezhik in a long time :(

[17:26] <melezhik> tyil: not sure, I am in the US now ((: congrat on new job!

[17:26] <tyil> melezhik: permanent basis, or holidays in USA?

[17:27] <melezhik> kinda permanent, already 9 months here ... working visa

[17:27] <melezhik> TX

[17:27] <tyil> nice

[17:27] <tyil> congrats!

[17:27] <melezhik> thanks

[17:27] <tyil> doing perl stuff?

[17:28] <melezhik> no ... it's devops ... but I am tireless perl6 guy ... try to use my opensource tools here ha-ha ((:

[17:28] <tyil> same here

[17:28] <tyil> if I get the chance I'm rewriting some tools to use Perl 6

[17:28] <melezhik> or else it's sometimes so boring .... ((;

[17:29] <tyil> I rewrote one tool to both Perl 6 and Python 3 today, to compare them against eachother (and the original posix sh script)

[17:29] <melezhik> I mean my main job atcitivities .. 

[17:29] <tyil> omw to a Linux user group now, where someone will inspect the python variant to see if it can be made better for a more fair comparison

[17:29] <melezhik> ok, who won?

[17:29] <melezhik> ok ... good

[17:29] <jmerelo> melezhik: I would say nothing beats sh...

[17:29] <tyil> currently Perl 6 i both smaller and more readable :p

[17:30] <tyil> mostly because I dont need to getopts with perl 6

[17:30] <jmerelo> melezhik: I mean, in terms of speed. If you are able to write something in awk, it will beat the hell out of C or anything else...

[17:30] <tyil> speedwise I didn't check, as performance is not the primary concert (it msotly fires off commands over ssh to other servers)

[17:31] <tyil> once I've given the python variant a pass with a more experienced py dev I'll check work if I can release the script in a blog post

[17:31] <melezhik> ok, understand ...

[17:33] <tyil> sadly work has taken time away from working on Perl 6 modules for me, but so long as I can use it at work from time to time I'm okay with it

[17:33] <tyil> I saw in the weekly that Red has finally been going to CPAN, so this might be the time to try it out in a new small API project, in combination with Cro

[17:33] *** dakkar left
[17:34] <tyil> that shouldn't take too much time to play around with to get a feel for it, as APIs are rather easy to create

[17:34] *** coverable6 left
[17:34] *** coverable6 joined
[17:35] *** p6bannerbot sets mode: +v coverable6

[17:42] *** Ven`` left
[17:47] <timotimo> did y'all see VoIRC? :D

[17:50] <jmerelo> timotimo: I'm not sure I want to

[17:51] <timotimo> it uses "codec2" at about 1.4kbps

[17:51] <timotimo> it sounds pretty terrible :D

[17:52] <jmerelo> timotimo: even if it didn't

[17:52] <timotimo> ?

[17:52] <jmerelo> I mean, so many people saying stuff.

[17:52] <eiro> i didn't see. any defined link ? 

[17:52] <timotimo> obviously you only hear people who have voirc

[17:53] <jmerelo> I would wait for the selected and abridged version. It a written tweet, if possible.

[17:54] <timotimo> https://youtu.be/0R--_ATzE6o?t=61 - here you can hear a bit

[17:54] *** zakharyas joined
[17:55] *** p6bannerbot sets mode: +v zakharyas

[18:00] <eiro> timotimo: thanks for the link :) i'm really happy some people want to improve IRC

[18:00] *** jmerelo left
[18:03] *** melezhik left
[18:15] <timotimo> the cool trick is that they don't have to change anything about irc to make it "work" :D

[18:15] *** releasable6 left
[18:15] *** notable6 left
[18:15] *** quotable6 left
[18:15] *** shareable6 left
[18:15] *** undersightable6 left
[18:16] *** undersightable6 joined
[18:16] *** quotable6 joined
[18:16] *** shareable6 joined
[18:16] *** notable6 joined
[18:16] *** releasable6 joined
[18:16] *** p6bannerbot sets mode: +v undersightable6

[18:16] *** p6bannerbot sets mode: +v quotable6

[18:16] *** p6bannerbot sets mode: +v shareable6

[18:16] *** p6bannerbot sets mode: +v notable6

[18:16] *** p6bannerbot sets mode: +v releasable6

[18:19] *** w17t joined
[18:19] *** p6bannerbot sets mode: +v w17t

[18:47] *** irdr joined
[18:48] *** p6bannerbot sets mode: +v irdr

[19:01] *** zakharyas left
[19:10] *** melezhik joined
[19:10] *** p6bannerbot sets mode: +v melezhik

[19:23] <Kaiepi> what does the $limit parameter do in Supply.throttle?

[19:23] <Kaiepi> the docs say "The first positional parameter specifies the limit that should be applied." but i don't understand what that's supposed to mean

[19:24] <melezhik> I am struggling with error when requiring Perl6 module in runtime and trying to call module's function - https://gist.github.com/melezhik/59fbdc0d40fca7ad7e12945bff16a3b6

[19:24] *** sena_kun left
[19:34] <tobs> melezhik: the error is raised from sub profile-list at Tomtit line 339, which isn't shown in your gist. It looks like you should try to declare profile-data is our in Pets.pm6

[19:35] <tobs> I mean "our sub profile-data".

[19:35] <melezhik> it is declared and exported - https://gist.github.com/melezhik/59fbdc0d40fca7ad7e12945bff16a3b6#file-gistfile1-txt-L9

[19:36] <melezhik> line 339 is shown in gist as well

[19:36] <melezhik> https://gist.github.com/melezhik/59fbdc0d40fca7ad7e12945bff16a3b6#gistcomment-2805346

[19:36] <melezhik> just added

[19:39] <tobs> if you declare "sub profile-data is export", you make ::("&profile-data") work, if you declare "our sub profile-data", you make ::($profile ~ '::&profile-data')() work

[19:39] <melezhik> your right, our sub should fix it!

[19:40] <melezhik> thanks tobs:

[19:40] <tobs> no problemo, although I wish I could find words to explain the mechanism properly :-)

[19:42] <TreyHarris> What's a one(ish) liner to answer the question, "what range of values can be stored in an N-bit vector?"

[19:48] <TreyHarris> (I know how to raise 2 to a power; I'm talking about signed integers. I fear the obvious math formula may be inelegant and lead to off-by-one error.)

[19:48] <tobs> TreyHarris: stored in the conventional unsigned int way? The answer is no longer than `^2**$N`

[19:48] <tobs> heh

[19:48] <moritz> -2**($N-1)..2**($N-1)-1

[19:49] <moritz> m: say -2**$_ .. 2**$_ -1 given 8-1

[19:49] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´-128..127‚ê§¬ª

[19:49] *** sena_kun joined
[19:49] <TreyHarris> moritz: thanks; I'd hoped there was a method on Blob or Buffer to help me, but that formula is a little more readable than the one I first wrote

[19:50] *** p6bannerbot sets mode: +v sena_kun

[19:50] <moritz> neither are bit vectors

[19:50] <tobs> m: my $N = 16; say ^2**$N-- - 2**$N

[19:50] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´-32768..^32768‚ê§¬ª

[19:50] <tobs> (I wonder if that's defined behaviour)

[19:52] <TreyHarris> Is there a bit vector type? You can stuff a sequence of N bits into a Blob or Buffer pretty easily, so that's why I was thinking in that direction anyway

[19:52] <moritz> tobs: no, I don't think so

[19:53] <TreyHarris> tobs: what's ambiguous about it?

[19:54] <tobs> TreyHarris: $N occurs twice in that expression but one occurrence changes its value

[19:54] <tobs> The compiler might not be obliged to always read from left to right

[19:55] <moritz> TreyHarris: I don't think there's a buit-in bit vector type

[19:55] <TreyHarris> tobs: oh, right. how does C deal with that? I know I've used a language where postincrement was after evaluation while preincrement was during evaluation

[19:57] <TreyHarris> (I can test gcc; just not sure where to look if it's defined in C11.)

[19:58] <tobs> hmm, gcc -Wall tells me "the operation may be undefined". I don't know about C standards anyway.

[20:00] <TreyHarris> In C++ it's specifically illegal it looks like (see "sequence points")

[20:00] <TreyHarris> Ah well, OT anyway; was just curious. Thanks, I'll use moritz++ formula

[20:02] *** domidumont left
[20:02] <TreyHarris> (I think I assumed this was easy because I've been doing a bit of Swift recently and every value type including generics can tell you the largest and smallest values they can represent.)

[20:03] <TreyHarris> *er, every ordered value type at least

[20:05] <Xliff> m: my \n = 3; say 2‚Åø

[20:05] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3my \n = 3; say 27‚èè5‚Åø‚ê§¬ª

[20:05] <Xliff> :*

[20:05] <Xliff> :(

[20:05] <Xliff> m: my \‚Åø = 3; say 2‚Åø

[20:05] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3my \‚Åø = 3; say 27‚èè5‚Åø‚ê§¬ª

[20:09] <tobs> m: "\c[SUPERSCRIPT DOLLAR SIGN]".say

[20:09] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized character name [SUPERSCRIPT DOLLAR SIGN]‚ê§at <tmp>:1‚ê§------> 3"\c[SUPERSCRIPT DOLLAR SIGN7‚èè5]".say‚ê§¬ª

[20:09] <tobs> too bad :)

[20:13] <TreyHarris> n, i, the digits, parens, and a few arithmetic operators are the only SUPERSCRIPT.* character names, so probably for the best; if n and i work, people would expect any letter to work

[20:13] <TreyHarris> since the digits are all there, it's more reasonable to support them

[20:16] <Xliff> TreyHarris: Good point. :/\

[20:16] *** zachk joined
[20:16] <Xliff> However, there are SUPERSCRIPT letters.

[20:17] <Xliff> Not all of them, though. I see your point.

[20:17] *** p6bannerbot sets mode: +v zachk

[20:19] *** zachk left
[20:19] *** zachk joined
[20:19] *** tepper.freenode.net sets mode: +v zachk

[20:19] *** p6bannerbot sets mode: +v zachk

[20:19] *** melezhik left
[20:21] <TreyHarris> I do wonder if there's an argument why you can't create a Rat literal like ¬≥/‚ÇÅ‚ÇÜ

[20:21] <TreyHarris> Since composing characters let you do it for any fraction

[20:21] *** leont joined
[20:22] *** p6bannerbot sets mode: +v leont

[20:25] <TreyHarris> m: say <3/16>.WHAT; say <¬≥/‚ÇÅ‚ÇÜ>.WHAT;

[20:25] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´(Rat)‚ê§(Str)‚ê§¬ª

[20:30] *** w17t left
[20:31] *** molaf left
[20:33] <Xliff> What does it mean when rakudo bombs out in stage parse with: 

[20:33] <Xliff> ===SORRY!===

[20:33] <Xliff> MVMArray: Index out of bounds

[20:34] <timotimo> it could mean anything; without a --ll-exception we won't know anything much

[20:34] <TreyHarris> Does Unicode subscripting have any meaning like superscripting does?

[20:35] <timotimo> i don't think it does

[20:35] <TreyHarris> Then a fraction written as superscript, solidus, subscript could be recognized as a Rat without ambiguity I think.

[20:37] <TreyHarris> Even mixed, which Rat doesn't allow AFAIK

[20:37] <TreyHarris> m: say <3/4>.WHAT; say <2/3/4>.WHAT

[20:37] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´(Rat)‚ê§(Str)‚ê§¬ª

[20:38] <TreyHarris> er, which <> literals don't allow

[20:38] <timotimo> you don't really have three slashes in a mixed fraction, though

[20:39] <TreyHarris> m: say <2 3/4>.WHAT; say <2-3/4>.WHAT;

[20:39] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´(List)‚ê§(Str)‚ê§¬ª

[20:40] <timotimo> yeah, that's already list

[20:40] <timotimo> it'd have to be a +, i'd say?

[20:40] <timotimo> kind of like <1+5i>

[20:40] <SmokeMachine> Xliff: this is working! https://github.com/FCO/GccJit/blob/master/jit.p6 thank you for your help!

[20:41] <TreyHarris> yeah, but 2¬≥/‚ÇÅ‚ÇÜ could be interpreted as <35/16> rather than as 2**3 / 16 

[20:42] <Xliff> SmokeMachine: \o/

[20:43] <Xliff> anytime

[20:44] <SmokeMachine> (but I had to create a vm with linux... I couldn't install libgccjit on my mac...)

[20:45] <Xliff> timotimo: Here's your --ll-exception 

[20:45] <Xliff> https://pastebin.com/FZwL7yuJ

[20:50] <timotimo> aha? that's our precedence parser implementation

[20:53] <Xliff> Yep. 

[20:53] <Xliff> I think I've narrowed it down to the code that caused the problem.

[20:53] <Xliff> Yep! Found it. Lemme gist it.

[20:57] <Xliff> timotimo: https://gist.github.com/Xliff/74a6f61e059df2d6792e7e6900cd9550

[20:57] <Xliff> Without that block, I don't have any problems.

[20:59] <timotimo> m: given 1 { when .value<toggled>:exists | .value<check>:exists | .value<toggle>:exists { say "hi" } }

[20:59] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´===SORRY!===‚ê§MVMArray: Index out of bounds‚ê§¬ª

[20:59] <timotimo> this also doesn't do what you mean

[20:59] <timotimo> the adverbs have a rather different precedence than you would expect

[20:59] <timotimo> m: given 1 { when (.value<toggled>:exists) | (.value<check>:exists) | (.value<toggle>:exists) { say "hi" } }

[20:59] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´No such method 'value' for invocant of type 'Int'. Did you mean 'values'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:59] <timotimo> this fixes the issue and works around the crash

[21:00] <timotimo> but the crash shouldn't be happening in the first place, of course

[21:00] <Xliff> I know. ;)

[21:00] <Xliff> Thanks for that fix. I suspected as much.

[21:00] <Xliff> No wonder I get complaints about adverbing && when I do "%a<e> //= %a<blah> && %a<blah>:delete"

[21:01] <timotimo> yeah

[21:01] <Xliff> m: my %a = (e => 1); %a<e> //= %a<blah> && %a<blah>:delete

[21:01] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§You can't adverb &infix:<&&>‚ê§at <tmp>:1‚ê§------> 3); %a<e> //= %a<blah> && %a<blah>:delete7‚èè5<EOL>‚ê§    expecting any of:‚ê§        pair value‚ê§¬ª

[21:01] <timotimo> i think it's a common "huh"

[21:01] <Xliff> :)

[21:01] <timotimo> i wonder if we have enough information at that point in the compiler to suggest parenthesis around %a<blah>:delete

[21:01] <Xliff> m: my %a = (e => 1); %a<blah> //= %a<e> && (%a<e>:delete)

[21:01] <camelia> rakudo-moar f329d6c6c: ( no output )

[21:01] <Xliff> m: my %a = (e => 1); %a<blah> //= %a<e> && (%a<e>:delete); %a.gist.say

[21:01] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´{blah => 1}‚ê§¬ª

[21:01] <Xliff> \o/

[21:01] <timotimo> for adverbs that we know are interesting to hash accesses

[21:03] *** sjn left
[21:05] <sena_kun> I know I am a bit annoying, but can anyone help me with proper MOP-driven enum value creation? My code golfed is at https://gist.github.com/Altai-man/049f7bf436d348a456ead66f7929a9f6 and I assume that first smartmatch should be evaluated to True, but it's False.

[21:06] <timotimo> sena_kun: i'm confused why you .^add_method on the $value?

[21:07] *** patrickb left
[21:07] <sena_kun> it does't work otherwise, `add_enum_value` requires `key` and `value` (likely Pair) methods to be implemented. I suspect it might be part of my issue.

[21:07] <sena_kun> give me a second...

[21:08] <timotimo> that's strange

[21:08] <sena_kun> https://github.com/rakudo/rakudo/blob/master/src/Perl6/Metamodel/EnumHOW.nqp#L70 <- .key and .value are accessed here.

[21:08] <timotimo> oh

[21:08] <sena_kun> I also saw code that adds `Enumeration` and `NumericalEnumeration` roles to the enum.

[21:08] <timotimo> yeah, $value wouldn't appear in the enum at all

[21:08] <sena_kun> But wasn't sure if that has any sense in this situation.

[21:09] <timotimo> it's supposed to be an object that has a key and a value method, nothing more

[21:09] <timotimo> having it be an instance of the enum class is super strange

[21:09] <timotimo> hold on

[21:09] <timotimo> i did that totally wrong

[21:10] <sena_kun> well, `.new(2)` was suggested by jnthn otherwise. I was quite happy, becuase it was something better than passing a plain Str->Int pair, but... But it didn't pass a smartmatch and usual type checks which I must have.

[21:10] <sena_kun> s/otherwise/yesterday/

[21:11] <timotimo> tbh i don't know what the compose_repr exactly is for

[21:11] *** sjn joined
[21:12] <sena_kun> well, without this line it doesn't work either. :( or without `^compose`.

[21:12] *** p6bannerbot sets mode: +v sjn

[21:12] <sena_kun> doesn't work as in "dies", not as in "fails smartmatch".

[21:12] <timotimo> mhm

[21:12] <timotimo> i would have to look at the World code that creates enums

[21:13] <sena_kun> I did.

[21:13] <sena_kun> it uses nqp::rebless.

[21:13] <sena_kun> https://github.com/rakudo/rakudo/blob/master/src/Perl6/World.nqp#L3898

[21:13] <sena_kun> ^ here.

[21:13] <timotimo> that might be important, then?

[21:14] <sena_kun> and high level equivalent of this one sounds like just a `.new` call on enum type.

[21:14] <sena_kun> well, I don't want to use nqp.

[21:14] <sena_kun> As a last resort, maybe.

[21:17] * sena_kun tries out nqp::rebless

[21:23] *** Kaiepi left
[21:24] *** Kaiepi joined
[21:24] *** p6bannerbot sets mode: +v Kaiepi

[21:27] *** guifa joined
[21:27] *** p6bannerbot sets mode: +v guifa

[21:27] *** Kaiepi left
[21:29] *** powerbit joined
[21:29] *** Kaiepi joined
[21:29] *** p6bannerbot sets mode: +v powerbit

[21:30] *** p6bannerbot sets mode: +v Kaiepi

[21:31] *** lizmat left
[21:31] <Kaiepi> Supply.throttle is awesome

[21:32] <Kaiepi> in a chat bot i'm writing i deal with the server's message throttling in just 3 lines because of it https://hastebin.com/awoyutoheg.rb

[21:34] <Kaiepi> when i wrote something similar to this in node it was a really hacky queue that took up something like 100 lines

[21:39] <Xliff> It's nice when you can write clean code, eh?

[21:41] <Kaiepi> yep :)

[21:42] <Xliff> Why is it that perl6 is constantly recompiling things I've just compiled?

[21:42] *** jme` joined
[21:42] <Xliff> Is it due to the fact that I am trying to run a script in a different directory (since I am passing a lot of -I options)

[21:43] *** p6bannerbot sets mode: +v jme`

[21:50] *** cfa left
[21:53] *** jme` left
[22:06] <zachk> how do I turn a string into either an array of strings, one for each character, or an array of characters?

[22:07] <sena_kun> .comb

[22:07] <sena_kun> m: 'ehehe'.comb.say

[22:07] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´(e h e h e)‚ê§¬ª

[22:07] <sena_kun> it can do more things with various args, but arg-less call does it. zachk ^

[22:08] <zachk> oh thank you

[22:10] <sena_kun> you are welcome

[22:11] <guifa> Really odd question.  If you using .assuming on a function, is there anyway to recover the bound arguments?

[22:12] <zachk> how do I export a function/sub from a module?

[22:13] <guifa> Like my &foo = sub ($x) { ... }; &bar = &foo.assuming: 1; &foo.assumed --> (1)

[22:13] <sena_kun> zachk, use `is export` trait. like `sub a is export { #`[ things done here ]}`

[22:14] <zachk> how do I export using function arguments? 

[22:14] <sena_kun> there are more ways, of course, but this one is likely what you want.

[22:14] <sena_kun> sub a($foo) is export {}

[22:15] <sena_kun> you can read more about traits at https://docs.perl6.org/language/traits

[22:15] <sena_kun> or look up `is export` into https://docs.perl6.org/routine/is%20export

[22:20] <sena_kun> guifa, cannot help with this one. maybe you want to use different approach for your task? I can only imagine caching arguments passed to `assuming`.

[22:22] <guifa> sena_kun Yeah, I've been using a different approach, just seems that with all the introspection possible that there would have been a way

[22:22] <guifa> (more of a curiosity question than a practical one)

[22:22] <zachk> can I use an if over a smarth match ~~ regex and still bind $0 and $1, etc from the regex in the successful if block?

[22:24] <Xliff> guifa: That might be a good feature request for 6.e

[22:24] <sena_kun> well, not sure if you checked that, but a resulting object has empty `.signature`(in case if all args were passed, of course), so I think there is no way to recreate this info, it's already another call in a sense. There might be some really black metal hackery, of course, but you likely don't want to use it. :)

[22:25] <sena_kun> m: if $a ~~ /('ehe') ('he')/ { say $0; say $1; }

[22:25] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared‚ê§at <tmp>:1‚ê§------> 3if 7‚èè5$a ~~ /('ehe') ('he')/ { say $0; say $1;‚ê§¬ª

[22:25] <sena_kun> m: my $a = 'ehehe'; if $a ~~ /('ehe') ('he')/ { say $0; say $1; }

[22:25] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´ÔΩ¢eheÔΩ£‚ê§ÔΩ¢heÔΩ£‚ê§¬ª

[22:25] <sena_kun> zachk, ^?

[22:26] <zachk> yes like that

[22:26] *** melezhik joined
[22:26] *** p6bannerbot sets mode: +v melezhik

[22:34] <guifa> sena_kun: it's a minor optimization I'd be making, and the workaround would add a whole intermediate layer so... as Xliff said, maybe in 6.e 

[22:36] <sena_kun> guifa, don't know the context, but if that'd be useful, patches are welcome, I think. :)

[22:38] <guifa> sena_kun: that may be a bit beyond my current level of coding, but perhaps once my dissertation is done I'll try to sit down and figure out the innards enough for that

[22:39] *** Sgeo_ left
[22:39] <sena_kun> guifa, good luck with your dissertation paper!

[22:39] *** MasterDuke left
[22:39] * guifa bashes head in with old books

[22:39] <guifa> (my own head haha)

[22:39] <guifa> Except I don't think the librarians will like me doing that (I'm a medievalist)

[22:40] <zachk> how do i force the reloading of a successfully loaded module at the repl, once I have changed the source to the module? 

[22:40] <sena_kun> zachk, have you tried just using `use Foo` again?

[22:43] <zachk> yeap, doesn't seem to run changes

[22:44] <sena_kun> oh, I guess it loads precompiled version of a module...

[22:45] <zachk> yea I want to force a reload from source

[22:45] <sena_kun> zachk, give me a second...

[22:47] <sena_kun> zachk, I don't know/see any easy way to do that, but to some extent https://stackoverflow.com/a/52615999 may help.

[22:52] <zachk> is there anywhere I can purchase a plushie camelia?

[22:54] <sena_kun> zachk, you want to ask lizmat or AlexDaniel, I think.

[22:54] <zachk> evalfile doesnt seem to bring the defined subroutines into a scope available to the repl :-/ 

[22:54] <AlexDaniel> you can't purchase it ATM, as far as I know

[22:55] <sena_kun> it probably still can be made Gentoo-way though. :>

[22:55] <AlexDaniel> we do promise a plushie to every squashathon winner (which happens every month), though I'm not sure if anybody claimed theirs yet

[22:55] <AlexDaniel> so that's one way I guess

[22:56] <AlexDaniel> another is to talk to lizmat in person on one of the conferences :)

[22:59] *** dct joined
[22:59] *** p6bannerbot sets mode: +v dct

[23:07] *** kurahaupo left
[23:08] <Xliff> AlexDaniel: Could you do me a fav and create an item in p6-GtkPlus for the cumulative graph?

[23:08] <zachk> can I have call perl6 with a  "one-liner" from the command prompt and have it dump its environment from that one liner into a repl? 

[23:09] *** kurahaupo joined
[23:10] <AlexDaniel> Xliff: done

[23:10] *** p6bannerbot sets mode: +v kurahaupo

[23:10] <Xliff> AlexDaniel: Thanks!

[23:11] <Xliff> AlexDaniel: Discovered I was missing properties in one GTK object and added over 1300 lines to it, yesterday.

[23:11] <Xliff> That will be interesting to track.

[23:14] <Xliff> :S

[23:14] <Xliff> How can I get Perl6 to clear a grammar definition, especially if I've made changes to it?

[23:14] <Xliff> I'm using EVAL to define it.

[23:14] <timotimo> how do you make changes to it? with add_method, or with mixins?

[23:15] <Xliff> I get "Redeclaration of 'T'" when I resubmit the eval

[23:15] <Xliff> timotimo: I just keep EVALing the grammar dec

[23:15] <Xliff> (now I can always cheat and add a bloody serial to it, but... don't wanna!)

[23:15] <timotimo> if it puts it into a package, try "my grammar T"

[23:16] *** Sgeo joined
[23:17] *** p6bannerbot sets mode: +v Sgeo

[23:20] <zachk> how can I use EVAL from the repl, use MONKEY; and use MONKEY-SEE-NO-EVAL don't seem to work :( 

[23:20] *** guifa left
[23:21] <sena_kun> m: EVAL 'say 1';

[23:21] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´1‚ê§¬ª

[23:21] <sena_kun> you mean like this?

[23:21] *** Ven`` joined
[23:21] <zachk> yea 

[23:21] <sena_kun> that's about it, I think. :)

[23:22] <zachk> EVAL is a very dangerous function!!! (use the MONKEY-SEE-NO-EVAL pragma to override this error,

[23:22] <zachk> but only if you're VERY sure your data contains no injection attacks)

[23:22] *** p6bannerbot sets mode: +v Ven``

[23:22] <sena_kun> hmm, are you loading a file? then you need to add a pragma it suggests at the beginning of the file.

[23:23] <sena_kun> or at the point where you are using EVAL, I think. so...

[23:23] <sena_kun> in file `foo.p6` it'd be like `use MONKEY-SEE-NO-EVAL; EVAL 'say 1';` and then `perl6 foo.p6` should work.

[23:24] <Xliff> m: my $a = "a\nb\nc\n"; say $a.lines.elems.Str.chars

[23:24] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´1‚ê§¬ª

[23:24] <Xliff> m: my $a = "\n\n\n\n\n\na\nb\nc\n"; say $a.lines.elems.Str.chars

[23:24] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´1‚ê§¬ª

[23:24] <Xliff> m: my $a = "\n\n\n\n\n\na\nb\nc\n\n\n\n\n\n\n\n"; say $a.lines.elems.Str.chars

[23:24] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´2‚ê§¬ª

[23:27] *** dct left
[23:31] <timotimo> zachk: you probably have to have monkey see no eval on every line in the repl

[23:31] <timotimo> the repl doesn't remember everything between lines

[23:31] <timotimo> it also forgets custom operators, for example

[23:31] <zachk> i found the error, i was escaping a $ :-/ 

[23:31] <zachk> i wasnt

[23:35] * sena_kun has handmade enums working (using nqp though)

[23:38] <gfldex> sena_kun++ # for being crafty :)

[23:41] <vrurg> m: sub f1 ( $msg, Int $i ) { }; sub f2 ( $msg, *@_ ) { }; sub f3 ( $msg, *%_ ) { }; say &f1.signature ~~ :( $, | ); say &f2.signature ~~ :( $, | ); say &f3.signature ~~ :( $, | );

[23:41] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´True‚ê§True‚ê§False‚ê§¬ª

[23:42] <vrurg> Does anybody know why *%_ makes difference here?

[23:43] * vrurg suspects a bug

[23:43] <timotimo> huh, interesting

[23:43] <timotimo> the semantics of smart match of signature vs signature are "is superset of"?

[23:43] <timotimo> or "is subset of"

[23:44] <vrurg> Dunno

[23:44] <vrurg> It is not documented anyway.

[23:44] <vrurg> m: sub f ( Str $msg ) { }; say &f ~~ :( Any $, | )

[23:44] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´False‚ê§¬ª

[23:45] <Xliff> sena_kun: Do you have an example of the code?

[23:45] <sena_kun> Xliff, sure, give me a second...

[23:45] <Xliff> Thanks!

[23:45] <vrurg> m: sub f ( Str $msg ) { }; say &f ~~ :( Any $ )

[23:45] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´False‚ê§¬ª

[23:45] <sena_kun> Xliff, that's a cheating though, so... :)

[23:45] <vrurg> m: sub f ( Str $msg ) { }; say &f.signature ~~ :( Any $, | )

[23:45] <camelia> rakudo-moar f329d6c6c: OUTPUT: ¬´True‚ê§¬ª

[23:46] <vrurg> I would guess that left is subset of the right.

[23:47] <sena_kun> Xliff, https://gist.github.com/Altai-man/b97ba9d8a054fae9309e16bf55ae392b <-

[23:47] *** MasterDuke joined
[23:47] *** p6bannerbot sets mode: +v MasterDuke

[23:47] *** MasterDuke left
[23:47] *** MasterDuke joined
[23:47] *** herbert.freenode.net sets mode: +v MasterDuke

[23:47] *** p6bannerbot sets mode: +v MasterDuke

[23:47] <sena_kun> create_enum_value is a copy-paste from World.nqp.

[23:48] <sena_kun> I still don't know how to get rid of `+Enumeration`, it is absent in "normal" enums, but as long as this code does the job I am fine with it being present.

[23:52] *** melezhik left
[23:54] <sena_kun> ok, sleep time. o/

[23:54] *** sena_kun left
