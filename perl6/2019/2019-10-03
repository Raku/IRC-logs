[00:08] *** Black_Ribbon left
[00:15] <Geth_> ¦ ecosystem: a66c513d2d | thundergnat++ (committed using GitHub Web editor) | META.list

[00:15] <Geth_> ¦ ecosystem: Add Filetype::Magic to the ecosystem

[00:15] <Geth_> ¦ ecosystem: 

[00:15] <Geth_> ¦ ecosystem: See https://github.com/thundergnat/Filetype-Magic

[00:15] <Geth_> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a66c513d2d

[00:36] *** MilkmanDan left
[00:39] *** MilkmanDan joined
[00:51] <discord6> <Aearnus> a few days ago postgres gave me an error along the lines of "Your current user postgres doesn't have access to the database. Please log into the postgres account to continue"

[00:51] <discord6> <Aearnus> or something silly like that

[00:56] *** Itaipu left
[01:02] *** softmoth joined
[01:11] *** gdonald left
[01:15] *** molaf left
[01:21] <Xliff> What's the best way to trim NUL characters from beginning and end of a Buf?

[01:27] <discord6> <Aearnus> with BEGIN and END phasers ofc

[01:27] *** molaf joined
[01:28] <discord6> <Aearnus> (that was a joke please don't bring that into existence)

[01:28] *** gdonald joined
[01:28] <Xliff> Aearnus: Well if you don't want such a ridiculous thing, plese don't make such RIDICULOUS jokes!

[01:29] <Xliff> (Sorry. Watching British TV. That sliped out.)

[01:29] *** aindilis left
[01:30] <discord6> <Aearnus> Xliff: maybe something like $buf.unshift while $buf[0] == 0 will work

[01:30] <Xliff> Nah. I just did Buf.decode.substr(0, $size-of-string)

[01:31] <discord6> <Aearnus> but then you have to allocate the whole string

[01:31] <discord6> <Aearnus> with a big buf that'll take really unnecessary amounts of time

[01:31] <discord6> <Aearnus> at least I would think

[01:32] *** aindilis joined
[01:33] <discord6> <Aearnus> or maybe that's a premature optimization

[01:46] *** Itaipu joined
[01:54] <Xliff> discord6: Oh! You're right. I want .subbuf, instead!

[01:56] <Xliff> Actually, these are tests, so the buffer will never get that big.

[02:10] *** Doc_Holliwood joined
[02:33] *** wildtrees left
[02:37] *** Cabanossi left
[02:42] *** Cabanoss- joined
[03:10] *** softmoth left
[03:33] *** AlexDani` joined
[03:37] *** AlexDaniel left
[03:58] *** adu joined
[04:04] *** [particle] joined
[04:05] *** [particle]1 left
[04:10] *** cinch__ joined
[04:13] *** cinch_ left
[04:15] *** Doc_Holliwood left
[04:31] *** adu left
[05:13] *** jmerelo joined
[05:26] *** sauvin joined
[05:26] <Xliff> 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.comb(16).say

[05:26] <evalable6> Xliff, rakudo-moar 168c9c2fb: OUTPUT: «(abcdefghijklmnop qrstuvwxyzABCDEF GHIJKLMNOPQRSTUV WXYZ)␤»

[05:27] *** sauvin left
[05:28] <elcaro> I'm sure there's an obvious reason (something something normalisation), but can someone tell me why `"\r" ~~ /\r/` is True, but `"\r\n" ~~ /\r/` is False

[05:31] <elcaro> m: say .so "\r" ~~ /\r/, "\r\n" ~~ /\r/

[05:31] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say .so7⏏5 "\r" ~~ /\r/, "\r\n" ~~ /\r/␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤     …»

[05:31] <elcaro> m: say .so for "\r" ~~ /\r/, "\r\n" ~~ /\r/

[05:31] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤False␤»

[05:32] <Xliff> elcaro: Why are you trying to do that?

[05:32] <Xliff> \r == CARRIAGE RETURN

[05:33] <Xliff> \n = LINE FEED

[05:33] <Xliff> Sometimes \n == CR LF

[05:33] <Xliff> It depends on the OS

[05:34] <Xliff> m: say .so for "\n" ~~ /\n/, "\r" ~~ /\n/

[05:34] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤True␤»

[05:34] <Xliff> m: say .so for "\n" ~~ /\n/, "\r\n" ~~ /\n/

[05:34] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤True␤»

[05:34] <Xliff> m: say .so for "\n" ~~ /\n/, "\r" ~~ /\n/, "\r\n" ~~ /\n/

[05:34] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤True␤True␤»

[05:34] <Xliff> m: say .so for "\n" ~~ /\n/, "\r" ~~ /\n/, "\r\n" ~~ /\n/, "\r" ~~ /\v/, "\n" ~~ /\v/

[05:34] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤True␤True␤True␤True␤»

[05:34] <Xliff> \v == VERTICAL WHITESPACE

[05:37] <elcaro> Xliff: well, I guess I'm not trying to do it... was just curious. but yeah I think you've anserwed it. Because /\n/ matches "\r\n", it doesn't match the additional /\r/ in the pattern

[05:38] <elcaro> I understand why now, but this still feels weird

[05:38] <elcaro> m: say ("\x0D" ~ "\x0A").contains("\x0D") 

[05:38] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «False␤»

[05:39] <elcaro> but no more weird than emoji characters that does not .contain it's constituent codepoints

[05:39] <Xliff> m: say ("\x0D" ~ "\x0A").encode.map( *.ord )

[05:39] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(49 49)␤»

[05:40] <Xliff> m: say ("\x0D" ~ "\x0A").encode

[05:40] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «utf8:0x<0D 0A>␤»

[05:40] <Xliff> You shouldn't be using contains to match those.

[05:40] <elcaro> yeah, i know

[05:40] <Xliff> m: say ("\x0D" ~ "\x0A").encode.map({ .ord })

[05:40] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(49 49)␤»

[05:40] <elcaro> .contains is a Str method, so it acts on strings

[05:40] <Xliff> m: say ("\x0D" ~ "\x0A").encode.List.map( *.ord )

[05:40] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(49 49)␤»

[05:41] <Xliff> m: say ("\x0D" ~ "\x0A").encode.list.map( *.ord )

[05:41] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(49 49)␤»

[05:41] <Xliff> WTF?

[05:42] <Xliff> m: say ("\x0D" ~ "\x0A").encode[0]

[05:42] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «13␤»

[05:42] <Xliff> m: say ("\x0D" ~ "\x0A").encode[1]

[05:42] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «10␤»

[05:42] <Xliff> m: say ("\x0D" ~ "\x0A").encode.list.grep( * == 10)

[05:42] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(10)␤»

[05:42] <elcaro> so this is the way if one wanted to 

[05:42] <elcaro> m: "\r\n".ords.first(13).so

[05:42] <camelia> rakudo-moar 168c9c2fb: ( no output )

[05:42] <elcaro> m: say "\r\n".ords.first(13).so

[05:42] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤»

[05:42] <elcaro> m: say "\n".ords.first(13).so

[05:42] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «False␤»

[05:43] <Xliff> m: say "\x0D" ~ "\x0A".ords

[05:43] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «

[05:43] <Xliff> m: say "This is a test".encode.map( *.ord )

[05:44] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(56 49 49 49 51 49 49 51 57 51 49 49 49 49)␤»

[05:44] <Xliff> m: say "This is a test".encode('ASCII').map( *.ord )

[05:44] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(56 49 49 49 51 49 49 51 57 51 49 49 49 49)␤»

[05:44] <Xliff> m: say "This is a test".encode('iso-8859-1').map( *.ord )

[05:44] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(56 49 49 49 51 49 49 51 57 51 49 49 49 49)␤»

[05:44] <elcaro> m: say ("\x0D" ~ "\x0A").ords.first(*.chr eq "\r").so :D

[05:44] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «True␤»

[05:44] <Xliff> m: say "This is a test".encode

[05:44] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «utf8:0x<54 68 69 73 20 69 73 20 61 20 74 65 73 74>␤»

[05:45] <Xliff> m: "This is a test".encode.map( .ord.say )

[05:45] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «No such method 'ord' for invocant of type 'Any'␤  in block <unit> at <tmp> line 1␤␤»

[05:45] <Xliff> m: "This is a test".encode.map( *.ord.say )

[05:45] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «56␤49␤49␤49␤51␤49␤49␤51␤57␤51␤49␤49␤49␤49␤»

[05:45] <Xliff> m: "This is a test".encode.map( *.say )

[05:45] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «84␤104␤105␤115␤32␤105␤115␤32␤97␤32␤116␤101␤115␤116␤»

[05:45] <Xliff> Dur! Don't need ord on a Buf

[05:45] *** cpan-p6 left
[05:46] <Xliff> m: "This is \o10 a test".encode.grep( * == 8).say

[05:46] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(8)␤»

[05:47] *** cpan-p6 joined
[05:47] *** cpan-p6 left
[05:47] *** cpan-p6 joined
[05:47] <Xliff> ^^ That's one way to test for a specific control char.

[06:03] <Geth_> ¦ doc: f28d194ccf | (JJ Merelo)++ | doc/Language/contexts.pod6

[06:03] <Geth_> ¦ doc: Documents item context.

[06:03] <Geth_> ¦ doc: 

[06:03] <Geth_> ¦ doc: This closes #1225, 30 months in the making.

[06:03] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/f28d194ccf

[06:03] <synopsebot> Link: https://doc.perl6.org/language/contexts

[06:11] *** wamba joined
[06:12] *** sena_kun joined
[06:36] *** jmerelo left
[06:42] *** Cabanoss- left
[06:53] *** Cabanossi joined
[07:02] *** sena_kun left
[07:32] *** wamba left
[07:37] *** isBEKaml joined
[07:42] *** nikita_1 left
[07:52] *** domidumont joined
[07:55] *** zakharyas joined
[07:59] *** scimon joined
[08:01] *** dakkar joined
[08:05] *** wamba joined
[08:11] *** Doc_Holliwood joined
[08:14] *** jasonc joined
[08:15] *** AlexDani` is now known as AlexDaniel

[08:15] *** AlexDaniel left
[08:15] *** AlexDaniel joined
[08:16] <AlexDaniel> elcaro: it's just an omission

[08:17] <AlexDaniel> or wait, maybe in this case it's not

[08:17] <AlexDaniel> elcaro: either way, \r gets treated differently in rakudo, and some of that needs to be fixed

[08:18] <AlexDaniel> elcaro: see also https://github.com/perl6/doc/issues/2992

[08:21] *** wamba left
[08:41] *** Ven`` joined
[08:43] *** Ven`` left
[08:45] <kawaii> https://usercontent.irccloud-cdn.com/file/61RG4Njb/blin-output-2019-10-03.tar.gz

[08:46] <kawaii> AlexDaniel: ping ^

[08:49] <AlexDaniel> doesn't look too bad!

[08:52] <AlexDaniel> new ticket: https://github.com/rakudo/rakudo/issues/3207

[08:53] *** ufobat_ joined
[08:56] *** kensanata joined
[08:57] *** ufobat__ left
[09:11] *** reach_satori left
[09:11] *** p9s``` joined
[09:14] *** p9s`` left
[09:18] <Xliff> 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.say

[09:19] <Xliff> m: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.say

[09:19] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «52␤»

[09:19] <Xliff> m: say 3 + 7 + 10 + 20

[09:19] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «40␤»

[09:19] <Xliff> m: say 3 + 8 + 11 + 21

[09:19] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «43␤»

[09:22] <Xliff> "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXYZ".chars.say

[09:22] <Xliff> m: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXYZ".chars.say

[09:22] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «51␤»

[09:51] *** reach_satori joined
[09:57] *** reach_satori_ joined
[09:58] *** reach_satori left
[10:10] *** isBEKaml left
[10:14] <AlexDaniel> kawaii: thanks :)

[10:15] <kawaii> No problem, looks like a good run.

[10:18] *** domidumont left
[10:20] <Xliff> Release?

[10:27] *** softmoth joined
[10:32] *** sena_kun joined
[10:45] *** Doc_Holliwood left
[10:49] *** wamba joined
[10:49] *** Doc_Holliwood joined
[11:14] <Xliff> m: my @a = <j 1 k 2 l 4 m 5 n 6>; for a.rotor(2) -> @b ($c, $d) { say @b; say $c. say $d }

[11:14] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3(2) -> @b ($c, $d) { say @b; say $c. say7⏏5 $d }␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement en…»

[11:14] <Xliff> m: my @a = <j 1 k 2 l 4 m 5 n 6>; for a.rotor(2) -> @b ($c, $d) { say @b; say $c; say $d }

[11:14] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    a used at line 1␤␤»

[11:14] <Xliff> m: my @a = <j 1 k 2 l 4 m 5 n 6>; for @a.rotor(2) -> @b ($c, $d) { say @b; say $c; say $d }

[11:14] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(j 1)␤j␤1␤(k 2)␤k␤2␤(l 4)␤l␤4␤(m 5)␤m␤5␤(n 6)␤n␤6␤»

[11:15] <Xliff> m: my @a = <j 1 k 2 l 4 m 5 n 6>; for @a.rotor(2) -> $b ($c, $d) { say $b; say $c; say $d }

[11:15] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «(j 1)␤j␤1␤(k 2)␤k␤2␤(l 4)␤l␤4␤(m 5)␤m␤5␤(n 6)␤n␤6␤»

[11:23] *** pmurias joined
[11:31] *** xinming left
[11:34] *** xinming joined
[11:34] *** zakharyas left
[11:41] *** domidumont joined
[11:42] <tbrowder> \o

[11:43] <tbrowder> good day, folks, i'm back looking for help

[11:44] <tbrowder> i'm trying to stop a warning when using "perl6 -e..."

[11:45] <tbrowder> it's from a line of code deep inside zef

[11:47] <tbrowder>  the warning is about "useless use of constant string in sink context"

[11:49] * Doc_Holliwood goes looking for his crystal ball

[11:49] <tbrowder> the chunk of zef code is in zef/lib/Zef/Service/Shell/LegacyBuild.pm6

[11:49] <Doc_Holliwood> I know I should keep it handy but the damn thing keeps looking at me funny

[11:50] <tbrowder> line number is....

[11:51] <tbrowder> the problem code starts at line 17

[12:08] <pmurias> https://www.npmjs.com/package////rakudo - any thing more I should add to the rakudo.js README?

[12:08] <pmurias> (the slashes are temporarily needed to get the newest version of the page instead of a cached one)

[12:09] <pmurias> I'm planning to finish the rakudo.js grant up this week and am preparing stuff for a decentish release

[12:16] *** Cabanossi left
[12:21] *** Cabanossi joined
[12:28] *** mensvaga joined
[12:31] *** satori__ joined
[12:34] *** reach_satori_ left
[12:42] <lizmat> weekly: http://blogs.perl.org/users/pawel_murias/2019/10/wip-rakudojs-final-grant-update.html

[12:42] <notable6> lizmat, Noted! (weekly)

[13:17] *** Itaipu left
[13:18] *** Itaipu joined
[13:19] *** pmurias left
[13:19] *** pmurias joined
[13:25] *** p9s``` left
[13:29] *** scimon left
[13:36] *** domidumont left
[13:36] *** zakharyas joined
[13:41] *** domidumont joined
[13:42] *** Sgeo joined
[13:42] *** isBEKaml joined
[13:54] *** lucasb joined
[13:54] *** p9s``` joined
[13:56] *** scimon joined
[13:57] *** pmurias left
[13:59] *** p9s``` left
[14:02] *** zakharyas left
[14:05] *** zakharyas joined
[14:05] *** isBEKaml left
[14:09] *** pmurias joined
[14:20] *** satori__ left
[14:29] <daxim> what's the preferred expression of <http://enwp.org/sum_type>?

[14:30] *** p9s``` joined
[14:30] *** wamba left
[14:31] *** wamba joined
[14:32] *** pmurias left
[14:35] *** p9s``` left
[14:36] *** Doc_Holliwood left
[14:36] *** _jrjsmrtn left
[14:37] *** sno left
[14:40] *** sno joined
[14:44] *** __jrjsmrtn__ joined
[14:47] *** AlexDaniel left
[14:48] *** AlexDaniel joined
[14:52] *** AlexDaniel left
[14:53] *** zakharyas left
[15:08] *** AlexDaniel joined
[15:08] *** AlexDaniel left
[15:08] *** AlexDaniel joined
[15:08] *** p9s``` joined
[15:13] *** p9s``` left
[15:17] *** Actualeyes joined
[15:22] *** kensanata left
[15:25] *** Guest23744 left
[15:27] *** wamba left
[15:31] *** jmerelo joined
[15:33] <discord6> <RaycatWhoDat> pmurias: re: rakudo.js, what is it exactly?

[15:33] <tellable6> RaycatWhoDat, I'll pass your message to pmurias

[15:34] <jmerelo> RaycatWhoDat it's an implementation of Rakudo on the Javascript virtual machine. Can be run on the browser

[15:34] <discord6> <RaycatWhoDat> What's not supported in it? Or is it 1:1?

[15:35] <jmerelo> RaycatWhoDat: hard to say. Mostly everything, but maybe concurrency and things like that... Check it out

[15:36] *** domidumont left
[15:37] <timotimo> yeah, threads are missing

[15:39] *** AlexDaniel left
[15:39] <discord6> <RaycatWhoDat> Blows up on macOS. 😦

[15:41] *** p9s``` joined
[15:41] *** wamba joined
[15:43] *** Doc_Holliwood joined
[15:46] *** patrickb joined
[15:49] *** p9s``` left
[15:58] *** jasonc left
[16:02] *** molaf left
[16:03] *** Doc_Holliwood left
[16:10] *** Doc_Holliwood joined
[16:17] *** p9s``` joined
[16:17] *** patrickb left
[16:17] *** scimon left
[16:17] *** wamba left
[16:22] *** p9s``` left
[16:25] * timotimo gets github notifications "@username pushed 0 commits:" and is slightly confused

[16:27] *** dakkar left
[16:30] *** p9s``` joined
[16:31] *** satori__ joined
[16:34] *** eseyman left
[16:35] *** eseyman joined
[16:35] <tbrowder>  note my panic calls for help with zef were false alarms, sorry

[16:35] *** p9s``` left
[16:40] *** eseyman left
[16:43] <timotimo> m: BEGIN my $orig-out = $*OUT; sub term:<ð¦¢> { class :: is IO::Handle { method WRITE(|) { $orig-out.say("HONK!") } }.new }; $*OUT = ð¦¢; $*OUT.write: .Str.encode("utf8") for ^10

[16:43] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «HONK!␤HONK!␤HONK!␤HONK!␤HONK!␤HONK!␤HONK!␤HONK!␤HONK!␤HONK!␤»

[16:43] <timotimo> ð¦¢ - does this show up as an emoji for anybody here?

[16:43] <timotimo> because i get garbage

[16:45] <Seance[m]> Doesn't look emoji like to me

[16:45] <timotimo> it's supposed to be a swan

[16:46] <timotimo> (because unicode doesn't have a goose emoji)

[16:46] *** zakharyas joined
[16:47] <Grinnz> 🦢

[16:47] <timotimo> ^- there i just get blank, haha

[16:47] <Grinnz> timotimo: you appear to have sent that double encoded

[16:48] <timotimo> i blame bsd

[16:48] <Grinnz> perlbot: utf8 🦢

[16:48] <perlbot> Grinnz: Error: U+1F9A2 (f0 9f a6 a2): no match found  

[16:49] <Grinnz> guess what f0 a6 a2 are in iso-8859-1 :P

[16:50] <timotimo> yeah

[16:50] <Grinnz> probably something along your line is not set to utf8

[16:51] *** Actualeyes left
[16:51] <timotimo> yeah

[16:51] <timotimo> but then how do i have üöä and such?

[16:51] <Grinnz> those are in iso-8859-1

[16:51] <Grinnz> and irc famously is just bytes

[16:51] <Grinnz> you can still send latin1 to it, and most clients will still parse it

[16:52] <Grinnz> once discovering a line is not valid utf-8

[16:52] <Grinnz> this is real fun in channel names btw

[16:53] <timotimo> hmm.

[16:53] <timotimo> ok what about a⃗ then?

[16:53] <timotimo> that works and is surely not in latin1

[16:54] <Grinnz> perlbot: utf8 a⃗

[16:54] <perlbot> Grinnz: U+0061 (61): LATIN SMALL LETTER A [a] U+20D7 (e2 83 97): COMBINING RIGHT ARROW ABOVE [ ⃗] 

[16:54] <Grinnz> yeah, the arrow definitely isn't

[16:54] <Grinnz> maybe it was just a problem copying the swan?

[16:54] <Grinnz> as you saw perlbot doesn't even know what that character is yet...

[16:56] <timotimo> yeah, only on copypasting was it wrong

[16:56] <timotimo> ð¦¢

[16:56] <timotimo> i was able to copypaste it from a terminal to itself no problem

[16:56] <timotimo> and from one terminal to another

[16:56] <timotimo> but not from one terminal to the terminal that has my weechat

[16:56] <Grinnz> peculiar

[16:57] <timotimo> quite

[16:57] *** jmerelo left
[17:04] *** p9s``` joined
[17:04] *** mtj_ joined
[17:04] *** MasterDuke joined
[17:05] *** mtj_ left
[17:07] *** mtj_ joined
[17:12] *** p9s``` left
[17:20] *** wamba joined
[17:25] *** domidumont joined
[17:31] *** xinming left
[17:32] *** xinming joined
[17:36] *** bartolin left
[17:38] *** chloekek joined
[17:41] *** p9s``` joined
[17:44] *** Black_Ribbon joined
[17:46] *** p9s``` left
[17:47] *** molaf joined
[17:50] *** discoD joined
[18:00] *** chloekek left
[18:01] <discoD> With github getting sued for hosting hacking tools, I'm wondering if the module ecosystem has any guidelines regarding such things.

[18:02] <discoD> I'm finishing up a fuzzing library and don't want to write POD and such if it won't be accepted

[18:05] *** bartolin joined
[18:08] <discoD> The README is up if you want to see what I'm talking about https://github.com/ddlws/Ripcurl  

[18:09] <timotimo> oh, i like the Description already

[18:11] <discoD> thanks, it's pretty slick, imo. I've written perl6uster too, which is a gobuster clone with some new tricks. haven't pushed it yet, though

[18:11] <El_Che> discoD: just host it on github :)

[18:12] <timotimo> you mean github or gitlab there?

[18:12] <El_Che> github

[18:12] <El_Che> if they get sued, they have lawyers

[18:12] <timotimo> ah

[18:12] <El_Che> being microsoft and all

[18:12] <timotimo> i mean, they may not actually want to go through the trouble to defend one of their users *shrug*

[18:13] <El_Che> timotimo: they would just close the repo, I don't expect trouble besides that

[18:14] <timotimo> yeah

[18:14] <discoD> i'm not worried about anyone suing me. they wouldn't get much, lol. I wouldn't want to see the perl foundation get hassled is all

[18:15] <El_Che> pretty relative of course. You can write DOS apps in a few lines in most languages

[18:17] <discoD> oops, it looks like i should've read the articles instead of the headlines

[18:17] <discoD> it was for hosting stolen data, not the tools

[18:17] <discoD> my fault

[18:17] <timotimo> there was some regulation somewhere, might have been germany, that wanted to outlaw hacker tools, but the law was so poorly written that it outlawed Windows because it came with telnet.exe

[18:19] *** aborazmeh joined
[18:19] *** aborazmeh left
[18:19] *** aborazmeh joined
[18:20] *** aborazmeh left
[18:20] <El_Che> now I not that much against that law

[18:20] <El_Che> :)

[18:21] <discoD> I'll submit a couple things to the ecosystem then. It seems like every pentesting tool is written in python, so this is me trying to "be the change you want to see in the world."

[18:22] <discord6> <Aearnus> that's super cool discoD

[18:22] *** p9s``` joined
[18:23] *** aborazmeh joined
[18:23] *** aborazmeh left
[18:23] *** aborazmeh joined
[18:29] *** eseyman joined
[18:35] *** HarmtH left
[18:35] *** p9s``` left
[18:36] *** domidumont left
[18:36] *** Jog100 joined
[18:37] *** Jog100 left
[18:40] *** ravenousmoose joined
[18:42] *** zakharyas left
[18:44] *** AlexDaniel joined
[18:44] *** AlexDaniel left
[18:44] *** AlexDaniel joined
[18:45] *** aborazmeh left
[18:49] *** wildtrees joined
[18:51] *** ravenousmoose left
[19:04] *** khisanth_ left
[19:10] *** p9s``` joined
[19:12] <Doc_Holliwood> timotimo: https://de.wikipedia.org/wiki/Vorbereiten_des_Aussp%C3%A4hens_und_Abfangens_von_Daten

[19:13] <timotimo> thanks, i hate it :) :)

[19:14] *** Altreus left
[19:14] <timotimo> no english translation, eh?

[19:14] *** Altreus joined
[19:15] *** p9s``` left
[19:21] *** khisanth_ joined
[19:37] *** pecastro joined
[19:40] *** Itaipu left
[19:41] *** MilkmanDan left
[19:43] *** Itaipu joined
[19:44] *** MilkmanDan joined
[19:51] *** p9s``` joined
[19:52] *** wamba left
[19:53] *** wamba joined
[19:58] <Xliff> \o

[20:00] *** p9s``` left
[20:07] <guifa> o/

[20:07] <cpan-p6> New module released to CPAN! Game::Sudoku (1.1.3) by 03SCIMON

[20:16] <guifa> We have the Hebrew calendar module, has anyone else worked on a calendar module for others?

[20:16] *** bartolin left
[20:17] <guifa> AFAICT it’s just jforget’s hebrew/frenchrevolutionary.  Was hoping there was a more edeveloped one to bum off of for Intl::

[20:32] *** p9s``` joined
[20:36] *** Ven`` joined
[20:37] *** p9s``` left
[20:41] *** Itaipu_ joined
[20:42] *** kensanata joined
[20:44] *** sena_kun left
[20:44] *** Itaipu left
[21:03] *** agentzh joined
[21:08] *** p9s``` joined
[21:12] *** bartolin joined
[21:14] *** p9s``` left
[21:16] *** Ven`` left
[21:28] *** camelCaser left
[21:28] *** camelCaser joined
[21:28] *** MasterDuke left
[21:32] *** MasterDuke joined
[21:47] *** kensanata left
[21:47] *** p9s``` joined
[21:52] *** p9s``` left
[22:03] * Doc_Holliwood has a new favourite font

[22:03] <Doc_Holliwood> https://fontlibrary.org/index.php?pretty=%2Fen%2Ffont%2Ffantasque-sans-mono

[22:04] <Doc_Holliwood> esp. the "i" looks so nice

[22:08] <Xliff> Doc_Holliwood: Does that do Unicode?

[22:08] <Doc_Holliwood> There's a textbox, try it out =)

[22:09] <Doc_Holliwood> but yes, a very good one

[22:16] <Xliff> Hmmm... not bad!

[22:16] <Xliff> Doc_Holliwood++

[22:20] *** p9s``` joined
[22:25] <Doc_Holliwood> my pleasure

[22:25] *** p9s``` left
[22:27] *** softmoth left
[22:28] <cpan-p6> New module released to CPAN! Console::Blackjack (1.0.4) by 03GDONALD

[22:30] *** p9s``` joined
[22:31] *** cpan-p6 left
[22:32] *** cpan-p6 joined
[22:32] *** cpan-p6 left
[22:32] *** cpan-p6 joined
[22:45] *** pecastro left
[22:47] *** Sgeo left
[22:49] *** Sgeo joined
[23:11] *** wamba left
[23:23] *** softmoth joined
[23:24] *** dogbert17 left
[23:34] *** lucasb left
[23:35] *** p9s``` left
[23:47] *** Doc_Holliwood left
[23:47] <Xliff> m: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXYZ'.elems.say

[23:47] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «1␤»

[23:47] <Xliff> m: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXYZ'.chars.say

[23:47] <camelia> rakudo-moar 168c9c2fb: OUTPUT: «51␤»

