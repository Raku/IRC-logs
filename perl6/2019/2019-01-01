[00:03] *** guifa joined
[00:03] *** p6bannerbot sets mode: +v guifa

[00:06] <guifa> I decided to try my hand at some code golf for which a Bag would be quite optimal... except that it generates from a list using === to determine initial weights, not eqv or cmp, which bombs if being passed an list of arrays of numbers.   Is there any way to (briefly, being golf) generate a bag using eqv/cmp?

[01:04] *** evalable6 joined
[01:05] *** p6bannerbot sets mode: +v evalable6

[01:06] *** zacts joined
[01:06] *** p6bannerbot sets mode: +v zacts

[01:20] *** vrurg left
[01:31] *** kurahaupo left
[01:37] *** dct left
[01:51] *** kiwi_41 joined
[01:51] *** p6bannerbot sets mode: +v kiwi_41

[01:52] *** kiwi_41 left
[01:58] <SmokeMachine> .tell jmerelo a easy way to create html from perl6 is to use MemoizedDOM

[01:58] <yoleaux> SmokeMachine: I'll pass your message to jmerelo.

[02:43] *** zacts left
[02:57] <buggable> New CPAN upload: Net-BGP-0.0.1.tar.gz by JMASLAK https://cpan.metacpan.org/authors/id/J/JM/JMASLAK/Perl6/Net-BGP-0.0.1.tar.gz

[03:02] *** ryn1x joined
[03:03] *** p6bannerbot sets mode: +v ryn1x

[03:06] *** kozet left
[03:29] <Xliff> How can I force a function signature to indicate no return value?

[03:31] *** zacts joined
[03:31] *** p6bannerbot sets mode: +v zacts

[03:32] <SmokeMachine> m: sub bla(--> Empty) {}; bla

[03:32] <camelia> rakudo-moar 495ac7c00: ( no output )

[03:32] <SmokeMachine> m: sub bla(--> Empty) { 42 }; bla

[03:32] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of constant integer 42 in sink context (line 1)‚ê§¬ª

[03:32] <SmokeMachine> m: sub bla(--> Empty) { return 42 }; bla

[03:32] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§No return arguments allowed when return value Empty is already specified in the signature‚ê§at <tmp>:1‚ê§------> 3sub bla(--> Empty) { return 42 7‚èè5}; bla‚ê§¬ª

[03:33] *** zacts_pi joined
[03:33] *** p6bannerbot sets mode: +v zacts_pi

[03:36] *** zacts left
[03:47] *** zacts_pi is now known as zacts

[03:57] *** ryn1x left
[04:04] *** reach_satori left
[04:06] *** zacts left
[04:08] *** zacts joined
[04:08] *** p6bannerbot sets mode: +v zacts

[04:28] *** zacts is now known as allen_ginsberg

[04:29] *** moonythedwarf joined
[04:29] *** p6bannerbot sets mode: +v moonythedwarf

[04:31] *** allen_ginsberg is now known as zacts

[04:35] *** uzl joined
[04:36] *** p6bannerbot sets mode: +v uzl

[04:36] <uzl> I'm having trouble connecting to perl6.org 

[04:36] <uzl> Anyone experiencing the same?

[04:37] *** reach_satori joined
[04:38] *** p6bannerbot sets mode: +v reach_satori

[04:41] *** uzl left
[04:43] *** zacts is now known as alonzo_church

[04:43] *** alonzo_church is now known as zacts

[04:47] <AlexDaniel> moritz: ‚Üë

[04:47] <AlexDaniel> I'm seeing that too

[04:52] *** Cabanossi joined
[04:52] *** p6bannerbot sets mode: +v Cabanossi

[04:53] *** Cabanoss- left
[04:58] *** dylanwh joined
[04:58] *** p6bannerbot sets mode: +v dylanwh

[05:20] <Geth> ¬¶ ecosystem: c798f22e1a | (Fernando Correa de Oliveira)++ (committed using GitHub Web editor) | META.list

[05:20] <Geth> ¬¶ ecosystem: Adding Red to the ecosystem!!!

[05:20] <Geth> ¬¶ ecosystem: 

[05:20] <Geth> ¬¶ ecosystem: \o/

[05:20] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/c798f22e1a

[05:21] <SmokeMachine> Red was released!!! \o/ :D

[05:26] *** finanalyst joined
[05:27] *** p6bannerbot sets mode: +v finanalyst

[05:28] *** atweiden-air joined
[05:28] *** Zoffix joined
[05:28] *** p6bannerbot sets mode: +v Zoffix

[05:29] <Zoffix> uzl, it's back up.

[05:29] <Zoffix> forced reboot through hypervisor

[05:29] *** Zoffix left
[05:30] *** Ven`` joined
[05:30] <finanalyst> Zoffix: I came on to ask about why docs.perl6.org was down, and you just fixed it. Thanks. Sort of faster than light for me :)

[05:30] *** p6bannerbot sets mode: +v Ven``

[05:32] <Xliff> SmokeMachine: Congratulations! Happy New Year!

[05:33] <SmokeMachine> Xliff: thanks! Happy new year!!!

[05:33] *** moonythedwarf is now known as moony2

[05:33] *** moony2 is now known as moony3

[05:34] *** moony3 is now known as moony2

[05:34] *** moony2 left
[05:35] *** MilkmanDan left
[05:36] *** Ven`` left
[05:37] *** MilkmanDan joined
[05:37] *** p6bannerbot sets mode: +v MilkmanDan

[05:39] <SmokeMachine> how long does it take to reload the ecosystem?

[05:41] <Xliff> At least an hour

[05:41] <Xliff> SmokeMachine: Did you manage to fix that last issue?

[05:41] <SmokeMachine> Xliff: yes, that's fixed! :)

[05:42] <SmokeMachine> the last rakudo version fixed that!

[05:45] *** zacts left
[05:46] <Xliff> Nice!

[05:46] <Xliff> m: sub a (--> Empty) { 42; Empty }

[05:46] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of constant integer 42 in sink context (line 1)‚ê§Useless use of constant value Empty in sink context (line 1)‚ê§¬ª

[05:46] <Xliff> m: sub a (--> Empty) { $a = 42; }

[05:46] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared‚ê§at <tmp>:1‚ê§------> 3sub a (--> Empty) { 7‚èè5$a = 42; }‚ê§¬ª

[05:47] <Xliff> m: sub a (--> Empty) { my $a = 42; }

[05:47] <camelia> rakudo-moar 495ac7c00: ( no output )

[05:50] <SmokeMachine> m: sub a (--> Empty) { my $a = 42; }; say a

[05:50] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´()‚ê§¬ª

[05:53] *** kktt007 left
[06:01] <SmokeMachine> is the ecosystem working (getting new modules)? https://travis-ci.org/perl6/ecosystem (i don't know how it works...)

[06:08] *** finanalyst left
[06:13] <SmokeMachine> https://twitter.com/smokemachine/status/1079983693098373121

[06:19] *** scroop joined
[06:19] *** p6bannerbot sets mode: +v scroop

[06:21] <SmokeMachine> I forget the source-url every time!!!

[06:25] *** scroop left
[06:33] *** atweiden-air left
[06:51] <SmokeMachine> https://twitter.com/smokemachine/status/1079993522386857984

[06:55] <Xliff> \o/

[07:09] *** skrshn joined
[07:09] *** p6bannerbot sets mode: +v skrshn

[07:12] <skrshn> Hi, I am trying to build rakudo for my company's internal distribution system

[07:14] <skrshn> The rakudo package can be consumed by different environments which also determine the path where rakudo files gets placed

[07:15] <skrshn> When building perl, someone wrote hacks so that, while building, perl was built using these options:

[07:16] <skrshn>           -Darchname="$PERL_ARCH" \           -Dinstallbin="$BUILD_ROOT/perl/perl/bin/perl5.8" \           -Dinstallman1dir="$BUILD_ROOT/perl/perl/lib/perl5.8-dist/man/man1" \           -Dinstallman3dir="$BUILD_ROOT/perl/perl/lib/perl5.8-dist/man/man3" \           -Dinstallprefix="$BUILD_ROOT/perl" \           -Dinstallprivlib="$BUILD_ROOT/perl/perl/lib/perl5.8-dist" \           -Dinstallscript="$BUILD_ROOT/perl/perl/bin/perl5.8" \   

[07:16] <skrshn> oops

[07:16] <skrshn> does not show up right

[07:17] <skrshn> Basically, the prefix had -Dinstallprefix="$BUILD_ROOT/perl" 

[07:18] <skrshn> But in order to prevent any inadvertant files getting read during runtime, this was set - -Dprefix="/dev/null" 

[07:18] <skrshn> At runtime, the paths were properly massaged with the right locations

[07:19] <skrshn> I am trying to do the same for rakudo/moar build

[07:20] <skrshn> But I do not see parallel options for -Dinstall* and -D* where * is ("prefix", "siteman1dir", "sitebin", etc)

[07:21] *** loops left
[07:21] <skrshn> Basically, how do I accomplish the distinction between install path and compiled path for searching during runtime ? 

[07:23] <skrshn> Btw, Happy New Year to all of you fine folks!

[07:33] *** scroop joined
[07:34] *** p6bannerbot sets mode: +v scroop

[07:38] *** scroop left
[08:06] *** skrshn left
[08:10] <atacama> \sb END

[08:10] <atacama> \sb HOME

[08:10] <atacama> \sb 30

[08:11] <atacama> \sb GOTO 30

[08:11] <atacama> \sb GOTO 30

[08:11] <atacama> \sb GOTO -30

[08:13] *** grondilu joined
[08:13] *** p6bannerbot sets mode: +v grondilu

[08:13] <grondilu> m: say rand()

[08:13] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of rand(); in Perl 6 please use rand‚ê§at <tmp>:1‚ê§------> 3say rand7‚èè5()‚ê§¬ª

[08:13] <grondilu> wasn't there a sub version of rand?

[08:13] <grondilu> in any case, that error message is not helping :/

[08:14] <grondilu> m: say Num.rand()

[08:14] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´Invocant of method 'rand' must be an object instance of type 'Num', not a type object of type 'Num'.  Did you forget a '.new'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:14] <grondilu> m: say 1.rand()

[08:14] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´0.04288197494520607‚ê§¬ª

[08:15] <grondilu> m: say rand

[08:15] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´0.7614196536507829‚ê§¬ª

[08:15] <grondilu> oh ok

[08:15] *** rindolf joined
[08:16] *** p6bannerbot sets mode: +v rindolf

[08:30] <grondilu> also : happy new Year everyone ;-)

[08:34] *** grondilu left
[08:53] *** kktt007 joined
[08:53] *** kktt007 is now known as kktt

[08:54] *** p6bannerbot sets mode: +v kktt

[09:11] *** random_yanek left
[09:21] *** random_yanek joined
[09:21] *** random_yanek left
[09:22] *** random_yanek joined
[09:22] *** p6bannerbot sets mode: +v random_yanek

[09:26] *** Sgeo_ left
[09:26] *** Sgeo_ joined
[09:27] *** p6bannerbot sets mode: +v Sgeo_

[10:12] *** ufobat joined
[10:13] *** p6bannerbot sets mode: +v ufobat

[10:50] *** jmerelo joined
[10:50] *** p6bannerbot sets mode: +v jmerelo

[10:57] <jmerelo> Happy new year!

[10:57] <yoleaux> 01:58Z <SmokeMachine> jmerelo: a easy way to create html from perl6 is to use MemoizedDOM

[10:57] <jmerelo> .tell SmokeMachine I'll check that out :-)

[10:57] <yoleaux> jmerelo: I'll pass your message to SmokeMachine.

[10:58] <jmerelo> squashable6: status

[10:58] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 2 days and ‚âà23 hours (2019-01-05 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:58] * jmerelo panics

[10:58] <jmerelo> Are you ready?

[11:07] <jmerelo> These are the stats for the visits for the Advent Calendar this year, including last month: https://perl6advent.files.wordpress.com/2019/01/Screenshot-from-2019-01-01-120236.png

[11:07] <jmerelo> They're almost half of what they were last year. We need to market a bit more our stuff...

[11:08] <jmerelo> It's been saved in part by the publication in Slashdot. They would have been totally dismal if that hadn't happened.

[11:12] <jmerelo> This is the breakdown of visits per year https://perl6advent.files.wordpress.com/2019/01/Screenshot-from-2019-01-01-120948.png Less visits than in 2010, and going down steadily since 2015.

[11:13] <jmerelo> Any thoughts on that? 

[11:13] <AlexDaniel> I guess something special happened in 2015!

[11:13] <AlexDaniel> ;) ;) ;)

[11:13] <jmerelo> AlexDaniel:  and it became increasingly less special...

[11:14] <El_Che> that's not a lot

[11:16] <jmerelo> El_Che: this year, as a matter of fact, the post with the most visits has been one written another year...

[11:16] <AlexDaniel> jmerelo: I'd agree with that statement. I think Raku & Rakudo development is very steady (in a good way)

[11:17] <jmerelo> AlexDaniel: while that's probably true, it does not apply to the rest of the ecosystem. And has nothing to do with the marketing side, of which the Advent Calendar is a part.

[11:17] <AlexDaniel> jmerelo: so every month you get a better compiler. If you want more hype let's make it once a year :D

[11:17] <AlexDaniel> v6.d was released very quietly though

[11:18] <jmerelo> AlexDaniel: the release was buried by a controversy that probably didn't help anyone or anything

[11:18] <AlexDaniel> and by that I mean that you couldn't hear anything because of all the screams related to ‚ÄúRaku‚Äù

[11:18] <AlexDaniel> :)

[11:18] <jmerelo> Precisely

[11:19] <El_Che> I wrote my 2c alson on wordpress :)

[11:19] <jmerelo> Maybe the selection of articles was not optimal. I mean, it was basically you want to write something, here's your WP ID. Maybe we should make some selection next year based on wide appeal.

[11:21] <El_Che> that was really a choice, I thought

[11:21] <jmerelo> El_Che: you mean about the articles? Not really. We didn't have people exactly fighting to get their article published.

[11:22] <El_Che> I mea you couldn't be selective because the lac of candidates

[11:22] <jmerelo> El_Che: exactly

[11:22] <jmerelo> This article, last year, got ~7k visits https://perl6advent.wordpress.com/2017/12/01/the-grinch-of-perl-6-a-practical-guide-to-ruining-christmas/ It was by zoffix, and it was a nice introduction to some Perl 6 quirks

[11:23] <El_Che> I am not a huge fan of advents

[11:24] <El_Che> finding to time to read an article each day is difficult

[11:24] *** ChoHag joined
[11:24] <El_Che> I use them when I am googling for something specific

[11:24] <jmerelo> El_Che: reading and visiting is not exactly the same :-)

[11:25] <El_Che> so, I often read older posts 

[11:25] *** p6bannerbot sets mode: +v ChoHag

[11:28] *** jjmerelo joined
[11:29] *** jmerelo left
[11:29] *** p6bannerbot sets mode: +v jjmerelo

[11:31] <AlexDaniel> El_Che: I have the same issue, yes

[11:31] <AlexDaniel> I've read some of the articles but definitely not all of them

[11:36] <jjmerelo> AlexDaniel: I perfectly understand that. But that's not my point.

[11:37] <AlexDaniel> jjmerelo: ok, so what's the point? Or what's the plan?

[11:37] <AlexDaniel> I saw very nice announcements on facebook

[11:38] <jjmerelo> The point is, we need more and better marketing. In general, and in particular during Advent. Better planning, too.

[11:38] <AlexDaniel> and reddit was fine too, I guess‚Ä¶ haven't checked twitter

[11:38] <AlexDaniel> struggling to understand what can be done better

[11:38] <AlexDaniel> better articles would be nice, but how?

[11:39] <AlexDaniel> I tried to do my best‚Ä¶ it took quite some energy, actually‚Ä¶ if the standards were much higher maybe I wouldn't even attempt it‚Ä¶

[11:39] *** dct joined
[11:39] *** p6bannerbot sets mode: +v dct

[11:40] <AlexDaniel> and that's the third year I did it on 23rd, and all these years I barely had any time to do it (wouldn't be able to post it ahead of time)

[11:42] <jjmerelo> AlexDaniel: articles with a wider appeal, and better marketed through reddit, hackernews, Twitter... 

[11:42] <jjmerelo> AlexDaniel: maybe a better first and last article...

[11:43] *** molaf joined
[11:44] <jjmerelo> Here's also the number of commits (with authors and entropy) per year. https://raw.githubusercontent.com/JJ/TPF-Grant/master/illos/commits-year.png in the documentation repo. Lowest number since 2015

[11:44] *** p6bannerbot sets mode: +v molaf

[11:45] <AlexDaniel> can be a positive, maybe the documentation doesn't suck that much anymore

[11:46] <AlexDaniel> but yeah, maybe you're right, maybe the overall interest is on a decline

[11:47] <jjmerelo> AlexDaniel++ on the "not sucking" part... 

[11:47] <jjmerelo> AlexDaniel: and overall interest was not that big to start with...

[11:48] * AlexDaniel feels a mug throwing vibe

[11:48] *** dct left
[11:48] <El_Che>  Don't say Perl 7

[11:51] <jjmerelo> AlexDaniel: not really mug throwing, but we do need to do some coordinated marketing and community-building efforts.

[11:52] <AlexDaniel> hmm I feel like there was someone working on it‚Ä¶

[11:52] <AlexDaniel> but I guess their efforts were not very appreciated ü§∑

[11:52] <jjmerelo> AlexDaniel: and, without naming them, we miss them now...

[11:52] <AlexDaniel> Zoffix: ‚ô•

[11:52] <jjmerelo> Zoffix++

[11:53] <jjmerelo> Anyway

[11:53] <jjmerelo> Let's talk about that in Riga, if not sooner.

[11:54] <jjmerelo> I feel like we would need a Perl 6 toolchain & marketing summit, all by itself...

[11:55] <El_Che> RakuConf

[12:11] *** regreg left
[12:16] <Xliff> Where is the Slashdot post?

[12:21] *** leont joined
[12:21] *** p6bannerbot sets mode: +v leont

[12:25] <Xliff> And yes. I'm not afraid to name names. I miss Zoffix, too.

[12:25] *** Xliff left
[12:34] <jjmerelo> .tell Xliff it was a generic "Advent calendar" post, not specifically devoted to Perl 6. It was published Dec 2nd, I think.

[12:34] <yoleaux> jjmerelo: I'll pass your message to Xliff.

[12:36] *** natrys joined
[12:37] *** p6bannerbot sets mode: +v natrys

[12:41] *** pmurias joined
[12:41] *** p6bannerbot sets mode: +v pmurias

[12:58] <masak> hehe, "and, without naming them," *names them* :P

[13:00] <masak> Gott Nytt Aar, moritz :)

[13:01] <AlexDaniel> of course our hero should be named

[13:02] <jjmerelo> One thing is missing and another, completely different, doing.

[13:02] <jjmerelo> And we need to do...

[13:02] <AlexDaniel> I guess the problem with ‚Äúcoordinated marketing and community-building efforts‚Äù is that whenever you attempt it, somebody will always object and critique your efforts, because everyone somehow has an opinion on it

[13:03] <jjmerelo> AlexDaniel: everyone is entitled to an opinion. But the point about coordination is that it will be made by many different people, not by a single person.

[13:03] <AlexDaniel> on the other hand, you can go and implement (without documenting and testing) a feature in rakudo and nobody will say a word :)

[13:04] <jjmerelo> AlexDaniel: that's another, and a completely different, problem, and it's a problem of governance of the whole thing

[13:04] <AlexDaniel> jjmerelo: yeah right. Like if adding more people with their own opinions is going to make our lives easier

[13:04] <AlexDaniel> IMO would've been better if we just let Zoffix do their thing, and maybe even focused on making it easier for them

[13:05] <jjmerelo> AlexDaniel: the point is never to make our lives easier, but to grow the community. It will definitely make our lives more complicated

[13:05] <jjmerelo> Just imagine 20 questions in StackOverflow a day... No way.

[13:06] <jjmerelo> AlexDaniel: at times, it's difficult to know who's calling the shots here. Overall, and in particular places. In general, it looks that whoever calls the shots is actually calling the shots.

[13:06] <AlexDaniel> btw I'm also guilty of that

[13:06] *** kensanata joined
[13:06] *** p6bannerbot sets mode: +v kensanata

[13:07] <AlexDaniel> jjmerelo: yeah, that's pretty much how it works in open-source

[13:07] <AlexDaniel> jjmerelo: https://communitywiki.org/wiki/DoOcracy :)

[13:07] <El_Che> The Perl 6 name is dead in the water, if you use an alias you get a civil war

[13:07] <El_Che> good luck!

[13:07] <jjmerelo> AlexDaniel: not really... in many cases, there are checks and balances and they can be implemented in GitHub.

[13:08] <kensanata> AlexDaniel: Oh wow, a community wiki link in the wild!

[13:08] <AlexDaniel> kensanata: ‚ô•

[13:08] <jjmerelo> El_Che: I wouldn't focus so much in the name, because you actually get a civil war too if you call it Perl 6. It's really a Catch-22 situation.

[13:08] <El_Che> jjmerelo: try to market something without a name

[13:09] <AlexDaniel> jjmerelo: I'm still struggling to understand your point, by the way. A lot of things are less than awesome, I get that. But if you're calling to action, then what's the action?

[13:09] <jjmerelo> The thing is, to market something you need to know _who_ you are marketing it too.

[13:10] <jjmerelo> AlexDaniel: for starters, I would say we should plan things more in advance. 

[13:10] <jjmerelo> And by things, I mean at least Squashathons and the Advent Calendar

[13:11] <jjmerelo> Or course, monthly and rakudo star releases too and things attached to them like package and docker container releases.

[13:13] <jjmerelo> Events with Perl 6 presence, too... 

[13:13] <jjmerelo> We need to know _what's_ to market before we do market it.

[13:14] <jjmerelo> kensanata: looks like an interesting site; I hadn't found it before. Good work.

[13:19] <jjmerelo> Maybe we should organize a Perl 6 conference?

[13:21] <El_Che> jjmerelo: that would be a logical evolution.

[13:22] <El_Che> jjmerelo: and also the trigger for the next big fight

[13:26] <moritz> we already some Perl 6 hackathons

[13:26] <moritz> wasn't a big deal

[13:26] <moritz> we can just make another Perl 6 hackathon, and add a talk or two

[13:26] <moritz> (which seems to fit the goal more than a regular conference)

[13:27] *** mowcat joined
[13:28] *** p6bannerbot sets mode: +v mowcat

[13:31] <Juerd> Hackathons and conferences have a different target audience

[13:32] <jjmerelo> Juerd, moritz: that's right. Are we going to do that? Despite fights? /cc El_che

[13:35] <jjmerelo> We need our very own toolchain summit, for instance. Doc tooling needs a major overhaul. The ecosystem needs some attention. The travis tests compiling rakudo every single time is terribly out of date

[13:35] <jjmerelo> And so on...

[13:46] <lizmat> Happy New Year everybody!

[13:46] * lizmat tries to shake off the hangover she has

[13:47] <lizmat> jjmerelo: wrt to "our own toolchain summit", I'm in two minds about that

[13:47] <lizmat> mostly because I wasn't at the last PTS, and I have no idea how much interaction happened between Perl 5 and Perl 6 at that summit

[13:48] <lizmat> or if everybody politely ignored the elephant in the room and did their own thing

[13:48] <lizmat> if the latter, then I think it is time for a Perl 6 Toolchain Summit

[13:51] *** rindolf left
[13:54] <jjmerelo> Happy new year!

[13:55] *** natrys left
[13:56] *** abraxxa joined
[13:56] <jjmerelo> lizmat: if we are going to have some meaningful interaction from the perl5 team, then it would be interesting to keep doing it together. But other than using CPAN and having people who know more about everything around, I don't see how the synergy would arise.

[13:56] <jjmerelo> I see more happening from the perl6 to perl5 field, substracting resources from perl5, than the other way round...

[13:56] *** p6bannerbot sets mode: +v abraxxa

[13:58] *** abraxxa1 joined
[13:59] *** p6bannerbot sets mode: +v abraxxa1

[13:59] <pmurias> jjmerelo: the module ecosystem works vastly better in Perl 5 (like they have metacpan instead of github homepages), so having something good to model ourself on is a benefit

[13:59] <yoleaux> 31 Dec 2018 17:14Z <jmerelo> pmurias: is there a way to embed program output in HTML in 6pad?

[13:59] <yoleaux> 31 Dec 2018 17:39Z <AlexDaniel> pmurias: `dd` is not working in 6pad, is that expected?

[13:59] <yoleaux> 31 Dec 2018 17:43Z <AlexDaniel> pmurias: oh, I think anything that prints to stderr doesn't show up in the console

[13:59] <yoleaux> 31 Dec 2018 17:44Z <AlexDaniel> pmurias: I can see it in the dev console though :)

[14:00] *** abraxxa1 left
[14:01] *** Ven`` joined
[14:01] *** abraxxa1 joined
[14:01] <pmurias> El_Che: have you ever been to a Perl conference?

[14:01] *** p6bannerbot sets mode: +v Ven``

[14:02] *** p6bannerbot sets mode: +v abraxxa1

[14:03] *** abraxxa1 left
[14:03] *** abraxxa2 joined
[14:03] *** domidumont joined
[14:04] *** p6bannerbot sets mode: +v abraxxa2

[14:04] *** p6bannerbot sets mode: +v domidumont

[14:06] *** i1nfusion left
[14:07] <pmurias> jjmerelo: if dd was fix and just printed stderr stuff to the 6pad terminal tap would it solve your (how to easily print stuff to html) problem

[14:07] <pmurias> ?

[14:08] *** i1nfusion joined
[14:09] *** p6bannerbot sets mode: +v i1nfusion

[14:09] <jjmerelo> sorry, I'm AFK now. Talk to you later... 

[14:10] *** jjmerelo left
[14:10] *** abraxxa2 left
[14:10] *** abraxxa1 joined
[14:10] *** kensanata left
[14:11] *** p6bannerbot sets mode: +v abraxxa1

[14:17] *** rindolf joined
[14:18] *** abraxxa1 left
[14:18] *** p6bannerbot sets mode: +v rindolf

[14:19] *** abraxxa1 joined
[14:19] <El_Che> pmurias: yes, I have

[14:19] *** p6bannerbot sets mode: +v abraxxa1

[14:19] <El_Che> pmurias: lots of fun

[14:24] *** abraxxa left
[14:24] *** abraxxa1 left
[14:27] *** Ven`` left
[14:27] *** molaf left
[14:32] *** Ven`` joined
[14:32] *** p6bannerbot sets mode: +v Ven``

[14:38] *** i1nfusion left
[14:40] *** i1nfusion joined
[14:40] *** p6bannerbot sets mode: +v i1nfusion

[14:41] *** Khisanth left
[14:43] <gfldex> lizmat: could dd be taught to make the distiction between (int) and  (Int)?

[14:49] *** i1nfusion left
[14:51] *** i1nfusion joined
[14:52] *** p6bannerbot sets mode: +v i1nfusion

[14:54] *** Khisanth joined
[14:55] *** p6bannerbot sets mode: +v Khisanth

[15:08] <pmurias> El_Che: everytime I was at one it seems the vast majority of the Perl 5 oriented folk had a positive attitude to Perl 6 so splitting the conferences seems like just seperating ourselves from potential users

[15:19] *** domidumont left
[15:20] *** domidumont joined
[15:20] *** p6bannerbot sets mode: +v domidumont

[15:22] *** domidumont left
[15:25] <jnthn> My experience matches what pmurias just said. A Perl 6 *track* within a larger Perl conference could be an option, but even that is maybe not so practical for organizers as Perl 6 talks placed into appropriate sized rooms by expected attendance.

[15:33] *** kktt left
[15:39] *** lucasb joined
[15:39] *** p6bannerbot sets mode: +v lucasb

[15:41] <pmurias> jnthn: didn't a Perl 6 track somewhat happend on a few conferences?

[15:41] <pmurias> * happen

[15:43] *** domidumont joined
[15:43] <jnthn> pmurias: I think it could have, though the majority have been single track, or mixed multi-track

[15:44] *** p6bannerbot sets mode: +v domidumont

[15:44] <timotimo> .o( multi-track presenting ?!? )

[15:46] *** robertle joined
[15:46] <pmurias> looking at the tpc 2018 none of the Perl 6 talks collided

[15:47] *** p6bannerbot sets mode: +v robertle

[15:50] <SmokeMachine> Will be happening any perl/perl6 event on London this year?

[15:50] <yoleaux> 10:57Z <jmerelo> SmokeMachine: I'll check that out :-)

[15:51] <SmokeMachine> .tell jmerelo, please, let me know what you think!

[15:51] <yoleaux> SmokeMachine: What kind of a name is "jmerelo,"?!

[15:52] <SmokeMachine> .tell jmerelo please, let me know what you think!

[15:52] <yoleaux> SmokeMachine: I'll pass your message to jmerelo.

[16:12] *** leont left
[16:23] *** atweiden-air joined
[16:24] *** dct joined
[16:24] *** p6bannerbot sets mode: +v dct

[16:24] *** p6bannerbot sets mode: +v atweiden-air

[16:24] <atweiden-air> ping timotimo

[16:24] <atweiden-air> https://github.com/Homebrew/homebrew-core/pull/34785#discussion_r244633788

[16:25] <atweiden-air> is it at all possible to get a "input.moarvm" from somewhere for a simple one-liner test?

[16:35] <buggable> New CPAN upload: Math-Polygons-0.0.1.tar.gz by PSIXSTEVE https://cpan.metacpan.org/authors/id/P/PS/PSIXSTEVE/Perl6/Math-Polygons-0.0.1.tar.gz

[16:41] *** jmerelo joined
[16:42] *** p6bannerbot sets mode: +v jmerelo

[16:42] <jmerelo> hi

[16:42] <yoleaux> 15:52Z <SmokeMachine> jmerelo: please, let me know what you think!

[16:45] <buggable> New CPAN upload: HTTP-Headers-0.3.0.tar.gz by HANENKAMP http://modules.perl6.org/dist/HTTP::Headers:cpan:HANENKAMP

[16:47] *** molaf joined
[16:47] *** p6bannerbot sets mode: +v molaf

[16:49] *** mowcat left
[16:54] *** dct left
[16:54] <SmokeMachine> jmerelo: what were you trying to do with perl6 and html?

[16:55] <jmerelo> SmokeMachine: just an example using 6pad

[16:56] *** ryn1x joined
[16:56] <SmokeMachine> jmerelo have you seen this? https://fco.github.io/MemoizedDOM/todo6.html

[16:56] *** p6bannerbot sets mode: +v ryn1x

[16:59] <SmokeMachine> jmerelo: or this... https://perl6.github.io/6pad/#ada3d7e0a4251c13e7b73a426a97039f

[16:59] <SmokeMachine> jmerelo: but I think I got it... it is a very big code...

[17:00] <SmokeMachine> To be used on a example...

[17:03] <jmerelo> SmokeMachine: that looks great, but I was looking more for something that didn't need much DOM knowledge to use it. Some way to insert output in some fancy way in a web page

[17:03] <jmerelo> something like <% your output goes here %>

[17:07] <SmokeMachine> jmerelo: what kind of output? HTML or just a string?

[17:07] *** Ven` joined
[17:08] <jmerelo> Well, HTML would be the thing; we already have the console if it's just a string. Can it be done?

[17:08] *** p6bannerbot sets mode: +v Ven`

[17:09] <[ptc]> m: 2/0 == 25/50

[17:09] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "==" in expression "/0 == 25/" in sink context (line 1)‚ê§¬ª

[17:09] <[ptc]> m: say(2/0 == 25/50)

[17:09] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[17:10] <[ptc]> btw: Happy New Year everyone :-)

[17:10] <[ptc]> dumb question: how can 2/0 == 25/50 evaluate to True?

[17:13] *** Ven` left
[17:27] <b2gills> [ptc]: Very simple, there is a bug here: https://github.com/rakudo/rakudo/blob/4a968059c2ea8e7ea4cd1f0b96938f5019d6b6cb/src/core/Rat.pm6#L222-L230

[17:30] <b2gills> It should probably just return False if either denominator is 0, rather than checking the numerators at all.

[17:33] <b2gills> It also seems to be based on earlier non-normalized forms of Rat, because I think it could just do `so(a.denominator && b.denominator && a.denominator == b.denominator && a.numerator == b.numerator)`

[17:35] <b2gills> Wait, that doesn't take care of Inf's

[17:37] <b2gills> Anyway the nqp::mul_I would only be needed for a non-normalized Rat, which can't happen anymore.

[17:38] <[ptc]> b2gills: thanks for the heads up, that certainly explains it

[17:45] <SmokeMachine> jmerelo: it‚Äôs hard doing this on a mobile phone, but here it is: https://perl6.github.io/6pad/#5c999baafb672e56d6772defa11e3d1c

[17:46] <SmokeMachine> jmerelo: see that the ‚Äúworking‚Äù is a link...

[17:46] *** Sgeo__ joined
[17:47] *** p6bannerbot sets mode: +v Sgeo__

[17:49] *** lucasb left
[17:50] *** Sgeo_ left
[17:53] *** Sgeo joined
[17:54] *** p6bannerbot sets mode: +v Sgeo

[17:55] <jmerelo> SmokeMachine: that makes it a bit simpler. Thanks!

[17:55] *** Sgeo__ left
[17:57] <jmerelo> m: say(2/0 == 333)   

[17:57] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´False‚ê§¬ª

[17:57] <jmerelo> m: say(2/0 == 1/2)   

[17:57] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[17:57] <jmerelo> m: say(2/0 == 3/6)   

[17:57] <SmokeMachine> jmerelo: please, let me know when whatever you want to do is done... I‚Äôm curious...

[17:57] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[17:58] <jmerelo> SmokeMachine: my intention is to provide examples for a new book (for Apress) I'm working in... 

[17:58] <jmerelo> m: say(2/0 == 3/9)   

[17:58] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[17:58] <jmerelo> m: say(333/0 == 3/9)   

[17:58] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[17:58] <jmerelo> That is not good...

[17:58] <jmerelo> say 333/0

[17:58] <jmerelo> m: say 333/0

[17:58] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´Attempt to divide by zero when coercing Rational to Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:58] <SmokeMachine> jmerelo: I was thinking of write the first perl6 book in Portuguese...

[17:59] <jmerelo> m: say (333/0).Numeric

[17:59] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´Attempt to divide by zero when coercing Rational to Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:59] <jmerelo> m: say (333/0).Num

[17:59] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´Inf‚ê§¬ª

[17:59] <b2gills> 2/0 becomes 1/0

[17:59] <jmerelo> m: say (333/0).Num == 3/6

[17:59] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´False‚ê§¬ª

[18:00] <SmokeMachine> m: say (333/0).Num == (3/0).Num

[18:00] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[18:00] <b2gills> 3/9  becomes 1/3

[18:01] <b2gills> The code I pointed to seems  to assume that only NaNs have a zero denominator

[18:02] <b2gills> m: say 1/0 == 1/3

[18:02] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[18:02] <b2gills> m: say 1/3 == 1/0

[18:02] <camelia> rakudo-moar 495ac7c00: OUTPUT: ¬´True‚ê§¬ª

[18:02] <b2gills> Without checking, the code might predate Inf.Rat

[18:03] <jmerelo> b2gills: but was that reported? It's a nasty bug...

[18:03] <b2gills> I didn't

[18:18] *** Sgeo_ joined
[18:19] *** p6bannerbot sets mode: +v Sgeo_

[18:20] *** Manifest0 left
[18:20] *** telex joined
[18:21] *** Manifest0 joined
[18:21] *** Sgeo left
[18:21] *** p6bannerbot sets mode: +v telex

[18:21] *** p6bannerbot sets mode: +v Manifest0

[18:23] *** ryn1x left
[18:29] *** i1nfusion left
[18:31] *** i1nfusion joined
[18:31] *** ChoHag left
[18:31] *** p6bannerbot sets mode: +v i1nfusion

[18:34] *** Sgeo__ joined
[18:35] *** p6bannerbot sets mode: +v Sgeo__

[18:37] *** Sgeo_ left
[18:42] *** vrurg joined
[18:43] *** p6bannerbot sets mode: +v vrurg

[18:43] *** |oLa| left
[18:50] *** zakharyas joined
[18:51] *** p6bannerbot sets mode: +v zakharyas

[18:53] <rindolf> Hi all, happy new year

[18:53] <Geth> ¬¶ doc: 47eeea2237 | (JJ Merelo)++ | 2 files

[18:53] <Geth> ¬¶ doc: Adds a section on :pack

[18:53] <Geth> ¬¶ doc: 

[18:53] <Geth> ¬¶ doc: Although it was rather well covered in the Blob page. Added some

[18:53] <Geth> ¬¶ doc: references, and changed definitions on that page.

[18:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/47eeea2237

[18:57] <Geth> ¬¶ doc: af41394a60 | (JJ Merelo)++ | doc/Language/experimental.pod6

[18:57] <Geth> ¬¶ doc: Removes comments

[18:57] <Geth> ¬¶ doc: 

[18:57] <Geth> ¬¶ doc: And introduction which is no longer relevant. Refs #2514 and it would

[18:57] <Geth> ¬¶ doc: close it if it weren't by the fact that I have discovered a new

[18:57] <synopsebot> Link: https://doc.perl6.org/language/experimental

[18:57] <Geth> ¬¶ doc: experimental feature, `smallnatives`, which begs documentation too.

[18:57] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/af41394a60

[18:58] <jmerelo> hi, rindolf Happy new year for you too!

[19:01] <rindolf> jmerelo: thanks

[19:01] *** andrzejku joined
[19:01] <rindolf> jmerelo: what's new?

[19:01] <jmerelo> Well, amazing Red by SmokeMachine is out

[19:01] *** atweiden-air left
[19:02] *** p6bannerbot sets mode: +v andrzejku

[19:02] <jmerelo> We also had a rather disappointing number of visits in the Advent Calendar and of contributions in the perl6 documentation

[19:02] <jmerelo> And I think we need a perl 6 toolchain summit/ hackathon/ con RSN

[19:04] *** leont joined
[19:04] *** p6bannerbot sets mode: +v leont

[19:05] *** |oLa| joined
[19:06] *** p6bannerbot sets mode: +v |oLa|

[19:06] <rindolf> jmerelo: https://twitter.com/smokemachine - i see

[19:08] *** lizmat left
[19:10] *** ryn1x joined
[19:11] *** p6bannerbot sets mode: +v ryn1x

[19:11] <rindolf> jmerelo: i've written some Perl 5 and C code for https://github.com/shlomif/black-hole-solitaire

[19:12] <jmerelo> rindolf: nice...

[19:14] <rindolf> jmerelo: i now have a golf solver

[19:14] <rindolf> jmerelo: i mean golf patience

[19:15] *** Manifest0 left
[19:16] *** Manifest0 joined
[19:16] *** p6bannerbot sets mode: +v Manifest0

[19:20] *** ryn1x left
[19:22] <jmerelo> rindolf: what kind of golf?

[19:23] <rindolf> jmerelo: https://en.wikipedia.org/wiki/Golf_(patience) - this one

[19:23] *** Manifest0 left
[19:24] <jmerelo> rindolf: I had no idea. Nice! Will you try perl 6 too?

[19:24] *** Manifest0 joined
[19:24] *** Sgeo_ joined
[19:24] *** p6bannerbot sets mode: +v Manifest0

[19:25] *** p6bannerbot sets mode: +v Sgeo_

[19:25] <rindolf> jmerelo: the code is not too long

[19:26] <rindolf> jmerelo: shouldn't take long to port from p5

[19:26] <jmerelo> rindolf: great!

[19:27] *** Sgeo__ left
[19:32] *** Eiquoh joined
[19:32] *** i1nfusion left
[19:32] *** p6bannerbot sets mode: +v Eiquoh

[19:33] <Eiquoh> .

[19:34] <rindolf> jmerelo: thing is the C version is much faster than the p5 one - https://groups.yahoo.com/neo/groups/hackers-il/conversations/messages/5130

[19:34] <jmerelo> rindolf: no wonder...

[19:37] <rindolf> jmerelo: yes

[19:42] *** ChanServ sets mode: +o mst

[19:42] *** mst sets mode: +b *!*James_Axl@176.98.156.*

[19:42] *** Eiquoh was kicked by mst (Eiquoh))
[19:42] *** mst sets mode: -o mst

[19:42] <mst> (he's not a perl6 user, he just joined to annoy me because I banned him elsewhere)

[19:50] <El_Che> pmurias: I agree with your sentiment. However there are many people that don't care much about the other community. My point that if a Perl 6 only conference would make sense, but it will fuel the argument of people that don't want Perl 6 at all at Perl conferences.

[19:52] <jmerelo> El_Che: what about a conference on concurrent, unicode-supporting, functional, MOP-including languages?

[19:53] *** jmerelo left
[20:11] <Garland_g[m]1> Is there currently a way to create a realtime priority thread in perl6?

[20:11] <Garland_g[m]1> I don't see anything in the documentation for Thread for it or in Thread.pm6.

[20:12] *** domidumont left
[20:25] *** Kaiepi joined
[20:25] *** p6bannerbot sets mode: +v Kaiepi

[20:32] *** molaf left
[20:34] *** Kaiepi left
[20:35] *** Kaiepi joined
[20:36] *** p6bannerbot sets mode: +v Kaiepi

[20:43] *** jme` left
[20:45] <Woodi> hi #perl6 :)

[20:45] <Woodi> Happy New Year everyone :)

[20:47] *** Sgeo__ joined
[20:47] *** lizmat joined
[20:47] *** p6bannerbot sets mode: +v lizmat

[20:48] <Woodi> I think that all that v5 vs v6 problems are hard becouse there are more than 2 sides and when two sides agree 3rd is unhappy. so just doing what good matters and not worring too much is resonable...

[20:48] *** p6bannerbot sets mode: +v Sgeo__

[20:50] *** Sgeo_ left
[20:51] <mst> Woodi: agree

[20:51] <Woodi> also browsing talks collection from SmallTalk conference I found "Extremally late binding" where is described virtual virtual machine YNFM with architecture very like current Rakudo... eg. page 22 and 24: http://esug.org/data/ESUG2003/piumarta.pdf

[20:52] <mst> Woodi: https://shadow.cat/blog/matt-s-trout/f_ck-perl-6/ is a rant of mine from years back basically saying that

[20:53] <Woodi> and googling for YNFM gives https://pages.lip6.fr/vvm/projects_realizations/ynvm/  where is description of RVM: recursive Virtual Machine... TimToady once mentioned such thing and I was sure he is trolling... silly me

[20:55] *** jme` joined
[20:56] *** p6bannerbot sets mode: +v jme`

[20:57] <Woodi> mst: so many ugly words :)

[20:58] <mst> Woodi: I did say rant

[20:58] <mst> also the tone was pitched for the intended audience

[20:58] <mst> also honestly if I'm ranting in real life my phrasing is basically exactly that

[20:59] * lizmat can corroborate that observation :-)

[21:00] <Woodi> mst: generally: it is not totally bad if you are right :)

[21:01] <Woodi> but not perfect either...

[21:02] *** ferreira1 joined
[21:03] *** p6bannerbot sets mode: +v ferreira1

[21:09] *** zakharyas left
[21:10] <Woodi> I like that: "Because hey, the Perl 6 people KNOW what they have isn't "ready" for a lot of people's values of "ready" and they know that Perl 5 isn't dead and they're not trying to kill it either.". also rant is from 2009 and *just* 10 years passed :>

[21:13] <Woodi> and last Advent posts was nice, even promised myself to do study of few posts

[21:13] <Woodi> k, night

[21:14] *** ferreira1 left
[21:15] *** ferreira joined
[21:15] *** p6bannerbot sets mode: +v ferreira

[21:16] *** andrzejku left
[21:17] <timotimo> Garland_g[m]1: you can probably use getpid in the thread itself and use NativeCall to set its priority, if it's possible to adjust an existing thread rather than explicitly creating one

[21:23] <Garland_g[m]1> Thanks. I'll look into that.

[21:31] *** Sgeo_ joined
[21:32] *** p6bannerbot sets mode: +v Sgeo_

[21:34] *** Sgeo__ left
[21:48] *** dduncan joined
[21:49] *** p6bannerbot sets mode: +v dduncan

[21:51] <guifa> Is there any way to get Bag and Sets to work semi-intelligently with Lists/Arrays?

[21:52] <lizmat> guifa: could you give an example ?

[21:52] <pmurias> El_Che: it would both cause a bunch of arguments and doesn't have significant benefits so there is no point in doing that

[21:53] <guifa> lizmat: bag([[1,2], [1,2], [1,2]])

[21:53] <guifa> Expected: Bag([1,2](3))

[21:54] <guifa> Actual: Bag([1 2], [1 2], [1 2])

[21:54] <guifa> I get that it's because it uses === and [1,2] !== [1,2], but that makes it really not useful.  ANd I don't think that there's a :with to tell it to use eqv instead

[21:55] <lizmat> guifa: it's not using eqv

[21:55] <guifa> Right, I know

[21:55] <lizmat> it's using .WHICH on the lists, and *that* is the real source of the issue

[21:55] <lizmat> we don't have a true equivalent that Map is to Hash, for Arrays

[21:56] <lizmat> as Lists (in my view) are being used for stuff they shouldn't be used for

[21:56] <lizmat> that's why I made https://modules.perl6.org/dist/Tuple:cpan:ELIZABETH 

[21:58] <lizmat> fwiw, that module is written in such a way that it should be directly pastable in the setting, should we decide that's a good idea

[21:58] <guifa> Yeah.  I was just trying to work on https://codegolf.stackexchange.com/questions/178184/most-contributing-rows and the most obvious solution seemed on the surface to be using Bag

[22:00] <guifa> (plus a way to try to show off another feature of p6 ha)

[22:01] <lizmat> I've been thinking of using some circumfix for tuples, but couldn't think of any

[22:02] <lizmat> guifa: suggestions welcome

[22:05] <lizmat> perhaps circumfix:<‚ù™ ‚ù´> ?

[22:06] <guifa> the Kirby circumfix? :-)

[22:07] <lizmat> circumfix:<‚∏® ‚∏©> ?

[22:07] <dduncan> I believe [] is an Array constructor, whose result is a mutable container, and in that case the implicit behavior should only consider the 2 equal when they are the same container.  To get the desired behavior with the bag, the elements should be immutable List instead.

[22:07] <dduncan> That‚Äôs how it should work.

[22:11] <lizmat> dduncan: except you cannot atm make a List immutable because it may have components that haven't been reified yet

[22:11] <dduncan> Oh?  I‚Äôm still catching up on this.

[22:12] <lizmat> that's the whole issue, really  :-(

[22:13] <dduncan> I‚Äôm accustomed to thinking of mutable containers still having value equality, but that for them they have value equality if and only if they are the same container.

[22:13] <lizmat> m: my $a = 42; dd $a.VAR === $a.VAR  # that is true

[22:13] <camelia> rakudo-moar afccc2c02: OUTPUT: ¬´Bool::True‚ê§¬ª

[22:14] <pmurias> Woodi: the rakudo design is a lot different from the YNVM

[22:14] <lizmat> m: my $a = 42; my $b := $a; dd $a.VAR === $b.VAR   # perhaps clearer

[22:14] <camelia> rakudo-moar afccc2c02: OUTPUT: ¬´Bool::True‚ê§¬ª

[22:14] <guifa> dduncan: that's why I was saying that maybe a :with(&foo) could be added to the bag constructor.  Since that becomes an explicit behavior, it's on the coder to ensure they're passing things that are (if not technically) inmutable

[22:14] <pmurias> Woodi: there is a big and clear abstraction layers rather then exposing the underlying machine and libc directly

[22:16] <guifa> (that's what Array's .unique does, for instance)

[22:22] <guifa> lizmat: ‚∏®‚∏© all by itself doesn't have any current meaning, yea? 

[22:26] <lizmat> m: dd ‚∏®‚∏©

[22:26] <camelia> rakudo-moar afccc2c02: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Bogus term‚ê§at <tmp>:1‚ê§------> 3dd 7‚èè5‚∏®‚∏©‚ê§    expecting any of:‚ê§        argument list‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        prefix‚ê§        statement end‚Ä¶¬ª

[22:26] <lizmat> don't think so

[22:26] <dduncan> For a bit of explanation, I was involved with Perl 6 for many years since around the early Pugs days, and then my personal time focused on developing a new language I created that was heavily inspired by or based on Perl 6 and aimed to match it in any cases it didn‚Äôt need to be different, but as a result I‚Äôm now looking back at Perl 6 with a worldview more centered in my own similar spinoff.  So I‚Äôm accustomed to thinking in terms 

[22:26] <dduncan> all types having immutable values exclusively but that a Container is used to fake mutability without making any actual values mutable.  So identity of an object compares deeply up to the point of reaching a Container and then doesn‚Äôt probe into what the Container contains, because that is the limit of what is guaranteed not to mutate.  If that makes any sense.

[22:28] *** molaf joined
[22:29] *** p6bannerbot sets mode: +v molaf

[22:29] *** Ven`` left
[22:41] <guifa> lizmat: what about using something akin to the slip prefix that creates a tupled version?  Say, _(1,2,3) 

[22:42] <lizmat> hmmm...

[22:43] <lizmat> m: sub prefix:<_>(\a) { dd a }; _(1,2,3)

[22:43] <camelia> rakudo-moar afccc2c02: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    _ used at line 1‚ê§‚ê§¬ª

[22:43] <guifa> Then it'd be easy to do @inmutable = _@mutable which I'm sure could be useful somewhere 

[22:44] <lizmat> m: sub circumfix:<_( )_>(*@a) { dd @a }; _(1,2,3)_

[22:44] <camelia> rakudo-moar afccc2c02: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§¬ª

[22:44] <lizmat> that might work 

[22:44] *** molaf left
[22:57] <dduncan> Question on naming conventions.  Would anyone frown on using underscores to separate words in package names, example Foo_Bar, like is the convention with routine names, or is that just as acceptable as writing FooBar?  My sensibilities prefer consistent underscores but I see no existing Perl 6 modules do that.

[22:58] <dduncan> To be clear, this is for cases when we aren‚Äôt trying to make a namespace.

[22:58] <dduncan> So I have something I could call Ax::Bx::Cx_Dx or Ax::Bx::CxDx.

[23:00] <jnthn> The most common convention I see is to use - rather than _ in routine and variable names, and camel case in package names.

[23:01] <dduncan> I was assuming the proper semantics were that - separators were only used when representing compound words in the larger name, and underscore was used otherwise.

[23:02] <jnthn> I'm not sure why I'd use both a case distinction and an underscore personally, though if it was a useful module I doubt I'd refuse to use it just because of the naming convention used :)

[23:03] <dduncan> I find case distinction useful so that its easier to tell when one‚Äôs referring to a proper name or acronym versus something else.

[23:03] <jnthn> dduncan: However "proper", those aren't what's actually happening. I think for many folks that's a very subtle distinction.

[23:03] <dduncan> So for example, one may make a routine name like convert_Foo_to_Bar() where Foo and Bar are type names.

[23:05] <dduncan> If one is normally capitalizing package or type names, I think all references to that should be the same case.

[23:05] <SmokeMachine> wouldn‚Äôt be better `multi convert(Foo $, Bar) {...}` ?

[23:05] <dduncan> I‚Äôm just illustrating a point.

[23:06] <jnthn> dduncan: And indeed coercion methods like $foo.Str do that

[23:06] <dduncan> So for example if we were working with JSON, an acronym name, both package names and routine names would spell it uppercase universally, not say JSON in one case and json in another.

[23:06] <dduncan> Right.

[23:08] <dduncan> So to my original question, I see on further look that some released Perl 6 module names use - for word separators.

[23:08] <lizmat> .oO( kebab-case )

[23:09] <dduncan> Or a small handful do, and one actually uses underscore.

[23:10] <dduncan> So eg PDF::ISO_32000 for one case and Locale-Codes-Country or Perl6-Math-Quaternion for the other, although the latter 2 look more like namespaces.

[23:10] <dduncan> Anyway, I have no further questions here, thank you.

[23:12] *** rindolf left
[23:18] *** kurahaupo joined
[23:19] *** p6bannerbot sets mode: +v kurahaupo

[23:25] *** sftp left
[23:26] *** sftp joined
[23:26] *** p6bannerbot sets mode: +v sftp

[23:35] *** ryn1x joined
[23:35] *** p6bannerbot sets mode: +v ryn1x

[23:43] *** pmurias left
[23:49] *** Cabanossi left
[23:50] *** Cabanossi joined
[23:51] *** p6bannerbot sets mode: +v Cabanossi

[23:59] *** Sgeo__ joined
