[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:01] *** ChanServ sets mode: +v reportable6

[00:04] *** dolmen left
[00:20] *** ayerhart joined
[00:24] *** Itaipu joined
[00:27] *** Itaipu_ left
[00:37] *** ayerhart left
[00:48] *** ayerhart joined
[00:56] *** ayerhart_ joined
[00:56] *** ayerhart left
[01:10] *** molaf left
[01:22] *** molaf joined
[01:25] *** uzl left
[01:50] *** noisegul_ joined
[01:54] *** noisegul left
[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:06] *** uzl joined
[02:08] <uzl> "A method's signature can have an invocant as its first parameter followed by a colon". Wouldn't it be more accurate to say ""A method's signature can have an explicit invocant as its first parameter followed by a colon"? After all, isn't self the first parameter, albeit implicitly, in a method call?

[02:09] <uzl> It's probably just nitpicking but I'm wondering about it ;-).

[02:14] <ugexe> you are technically correct

[02:15] <ugexe> the best kind of correct

[02:25] *** Cabanossi left
[02:33] *** Cabanossi joined
[02:43] *** pamplemousse_ left
[03:04] <uzl> Oh, great! I'm proofreading the OOP-related docs so I figured I'd consult here first.

[03:10] *** kaare_ left
[03:10] *** kaare_ joined
[03:23] <Geth> ¦ doc: uzluisf++ created pull request #2930: Update several documents

[03:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2930

[03:23] <squashable6> 🍕 uzluisf++ opened pull request “Update several documents”: https://github.com/perl6/doc/pull/2930

[03:24] *** uzl left
[03:39] *** rindolf joined
[04:10] *** pamplemousse_ joined
[04:10] *** molaf left
[04:56] *** pamplemousse_ left
[04:56] *** pamplemousse_ joined
[05:12] *** pamplemousse_ left
[05:15] *** sauvin joined
[05:26] *** sjm_uk joined
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:00] *** ChanServ sets mode: +v reportable6

[06:04] *** sjm_uk left
[06:04] *** sjm_uk joined
[06:24] *** khisanth_ left
[06:24] *** khisanth_ joined
[06:40] <squashable6> 🍕 JJ++ submitted a review on pull request “Update several documents”: https://github.com/perl6/doc/pull/2930#pullrequestreview-270449302

[06:48] <tyil> timotimo: poke

[06:51] <squashable6> 🍕 JJ++ synchronize pull request “Update several documents”: https://github.com/perl6/doc/pull/2930

[07:00] <squashable6> 🍕 JJ++ merged pull request “Update several documents”: https://github.com/perl6/doc/pull/2930

[07:00] <Geth> ¦ doc: a28a49eb80 | (Luis F. Uceta)++ | 5 files

[07:00] <Geth> ¦ doc: Update the following documents:

[07:00] <Geth> ¦ doc: 

[07:00] <Geth> ¦ doc: 101-basics.pod6, classtut.pod6, intro.pod6, objects.pod6 and pod.pod6

[07:00] <Geth> ¦ doc: 

[07:00] <Geth> ¦ doc: Changes include minor rewording, text reflow, move from indentation

[07:00] <Geth> ¦ doc: to sample codes wrapped with =code directives, etc.

[07:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a28a49eb80

[07:00] <Geth> ¦ doc: 2f812255ec | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[07:00] <synopsebot> Link: https://doc.perl6.org/language/pod

[07:00] <Geth> ¦ doc: It shouldn't error this way

[07:00] <Geth> ¦ doc: 

[07:00] <Geth> ¦ doc: At least that's how it was originally.

[07:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2f812255ec

[07:01] <Geth> ¦ doc: 4547eb6056 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 5 files

[07:01] <Geth> ¦ doc: Merge pull request #2930 from uzluisf/doc-proofreading-01

[07:01] <Geth> ¦ doc: 

[07:01] <Geth> ¦ doc: Update several documents

[07:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4547eb6056

[07:10] *** [particle]1 joined
[07:12] *** [particle] left
[07:21] <squashable6> 🍕 rba++ wrote a comment on “deployment of docs.perl6.org”: https://github.com/perl6/doc/issues/2929#issuecomment-517902228

[07:24] *** marcel_ joined
[07:24] *** rindolf left
[07:26] *** [particle] joined
[07:29] *** [particle]1 left
[07:30] *** [particle] left
[07:34] <tyil> p6: say "App::CPAN" ~~ / ^ [ \w+ % '::' ] /

[07:34] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «｢A｣␤»

[07:34] <tyil> I except this to match any number of characters that contain :: to seperate them, why does it only match the letter "A"?

[07:39] *** [particle] joined
[07:43] *** Itaipu_ joined
[07:43] *** Itaipu left
[07:49] *** [particle] left
[07:57] <squashable6> 🍕 threadless-screw++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310343413

[07:57] <squashable6> 🍕 threadless-screw++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-270451298

[07:57] *** [particle] joined
[08:03] *** japhb joined
[08:04] *** dolmen joined
[08:13] <squashable6> 🍕 JJ++ wrote a comment on “deployment of docs.perl6.org”: https://github.com/perl6/doc/issues/2929#issuecomment-517905209

[08:15] *** sjm_uk left
[08:20] <squashable6> 🍕 JJ++ opened issue “Move HTML/CSS/js out of the repo”: https://github.com/perl6/doc/issues/2931

[08:20] <squashable6> 🍕 JJ++ labeled issue “Move HTML/CSS/js out of the repo” (build): https://github.com/perl6/doc/issues/2931

[08:20] <squashable6> 🍕 JJ++ labeled issue “Move HTML/CSS/js out of the repo” (wishlist): https://github.com/perl6/doc/issues/2931

[08:20] *** [particle]1 joined
[08:22] *** [particle] left
[08:25] *** Itaipu joined
[08:25] *** Itaipu_ left
[08:25] *** demanuel left
[08:28] *** Black_Ribbon left
[08:33] *** [particle] joined
[08:35] *** [particle]1 left
[08:41] *** [particle]1 joined
[08:43] *** [particle] left
[08:43] <squashable6> 🍕 threadless-screw++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-270452548

[08:43] <squashable6> 🍕 threadless-screw++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310344440

[08:43] *** [particle] joined
[08:44] <squashable6> 🍕 threadless-screw++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310344478

[08:44] <squashable6> 🍕 threadless-screw++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-270452589

[08:45] <squashable6> 🍕 threadless-screw++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-270452593

[08:45] <squashable6> 🍕 threadless-screw++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310344483

[08:46] *** [particle]1 left
[08:49] *** dolmen left
[08:50] *** robertle left
[08:52] <squashable6> 🍕 threadless-screw++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310344652

[08:52] <squashable6> 🍕 threadless-screw++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-270452782

[08:52] <AlexDaniel> dpk: can you add real nickname to the csv dump (p6seens)?

[08:53] <AlexDaniel> dpk: for example, in the dump the nickname is “zoffix”, but the real nickname was “Zoffix”

[08:53] <AlexDaniel> dpk: and yoleaux has that info because it prints messages correctly

[08:55] <AlexDaniel> dpk: same goes for p6tells, but I don't know if that info is actually stored. The “from” column is correct, but “to” is normalized. If possible I'd love to have the actual nickname in “to”

[08:58] <dpk> for tells, it displays the real nickname based on the capitalization that is in use when the message is actually delivered

[08:58] <dpk> for seens … i'll check

[09:00] <dpk> since IRC nicks are case-insenstive anyway (modulo weirdness around {}|^ being equivalent to []\~), normalization is the right thing to do imo

[09:01] <dpk> ah yes, for the seens it does have the non-normalized form. just a sec

[09:01] <AlexDaniel> :)

[09:05] * dpk grumble, why did I make my own database format for this instead of just using SQLite …

[09:10] <dpk> AlexDaniel: okay, should be fixed if you download the p6seens csv from the same URL

[09:11] <AlexDaniel> dpk: looks great, thanks!

[09:16] *** marcel_ left
[09:18] <squashable6> 🍕 JJ++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-270453491

[09:18] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310345325

[09:43] *** noisegul_ left
[09:44] *** pnu__ joined
[09:47] *** Spot__ joined
[09:53] *** [particle] left
[09:54] *** [particle] joined
[09:58] *** Hotbees joined
[10:15] *** sena_kun joined
[10:25] *** [particle] left
[10:25] *** [particle] joined
[10:28] *** ufobat__ joined
[10:32] *** ufobat_ left
[11:19] *** [Sno] left
[11:25] *** ChoHag joined
[11:38] <AlexDaniel> squashable6: status

[11:38] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈0 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:38] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/fd09e28230a7e08b585afba12d793a2d

[11:48] *** sena_kun left
[11:50] *** rindolf joined
[11:51] *** rindolf left
[11:58] <timotimo> tyil: you probably already figured it out, but your regex was matching single characters separated by ::, you'd have wanted [\w+]+ % '::'

[11:59] *** rindolf joined
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:07] <tyil> timotimo: thanks!

[12:07] <tyil> I had not looked at it any further

[12:08] <tyil> also, I wanted to ask you, should I set up a seperate grafana into the cpan namespace on kubernetes for cpan stats, or should I reuse the grafana instance I use for the rest of the cluster

[12:09] <tyil> I want to set up a reverse proxy for it on /insight, which is automatically logged in with viewer permissions

[12:14] *** ChoHag left
[12:14] <timotimo> i'm not sure what the implications are; i don't think i have a preference either way

[12:16] <tyil> ah

[12:19] <tyil> one last question for now (I hope), can I export subsets from a module?

[12:19] <tyil> `module Pomf { subset A of Str is export where / \W+ / }; my A $s;` did not work :<

[12:20] <tyil> and `is export` behind the `where /.../` was a syntax error

[12:20] <timotimo> oh? it should definitely be possible

[12:20] <timotimo> grep for it in perl6-all-modules maybe :D

[12:20] <timotimo> i'll be AFK for a little bit

[12:26] *** squashable6 left
[12:28] *** marcel_ joined
[12:28] <lizmat> tyil: "subset A of Str is export where * eq "A";" works for me

[12:29] <lizmat> tyil: what was the error?

[12:29] *** pamplemousse joined
[12:30] *** squashable6 joined
[12:30] *** ChanServ sets mode: +v squashable6

[12:31] <tyil> Type 'A' is not declared

[12:31] <tyil> when actually using it

[12:32] <tyil> p6: module Pomf { subset A of Str is export where / \W+ / }; my A $s;

[12:32] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5===␤Type 'A' is not declared␤at <tmp>:1␤------> 3A of Str is export where / \W+ / }; my A7⏏5 $s;␤Malformed my␤at <tmp>:1␤------> 3t A of Str is export where / \W+ / }; my7⏏5 A $s;␤␤»

[12:37] <lizmat> why the module there ?

[12:38] <tyil> because I want to eventually put them in a module

[12:38] <tyil> which I can use throughout the rest of the codebase

[12:38] <lizmat> ok, well in this case, A only exists inside of the module, and your code uses it outside

[12:39] <lizmat> if you have a "use" command for the module, it will get imported

[12:39] <lizmat> automatically with the -use-

[12:39] <tyil> oh, so it should just work as I expect in my actual code

[12:39] <lizmat> yes

[12:39] <lizmat> and in this example, you could specifically import:

[12:39] <tyil> I was testing it out in the REPL before putting effort into implementing it

[12:39] <lizmat> m: module Pomf { subset A of Str is export where / \W+ / }; import Pomf; my A $s;

[12:39] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[12:39] <lizmat> m: module Pomf { subset A of Str is export where / \W+ / }; import Pomf; my A $s = "a";

[12:39] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Type check failed in assignment to $s; expected Pomf::A but got Str ("a")␤  in block <unit> at <tmp> line 1␤␤»

[12:40] <tyil> ah, awesome

[12:40] <tyil> thanks

[12:40] *** john_parr joined
[12:44] <AlexDaniel> m: say “\c[Flamingo]”

[12:44] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name [Flamingo]␤at <tmp>:1␤------> 3say “\c[Flamingo7⏏5]”␤»

[12:44] <AlexDaniel> samcv: what's the status of unicode 12 support?

[12:47] <lizmat> m: say “\c[FLAMINGO]”

[12:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name [FLAMINGO]␤at <tmp>:1␤------> 3say “\c[FLAMINGO7⏏5]”␤»

[12:48] <lizmat> seems camelia is stuck at ecf2b1e4f of 19 July ??

[12:48] <lizmat> AlexDaniel: works fine for me locally, except it doesn't render, but that's an OS issue

[12:49] <AlexDaniel> e: say “\c[FLAMINGO]”

[12:49] <evalable6> AlexDaniel, rakudo-moar bc45af3b8: OUTPUT: «🦩␤»

[12:49] <AlexDaniel> ah shoot

[12:49] <lizmat> $ 6 'say “\c[Flamingo]”.uninames'

[12:49] <lizmat> (FLAMINGO)

[12:49] <AlexDaniel> yeah evalable6 is happy to run that

[12:51] <AlexDaniel> rba: btw regarding https://github.com/perl6/problem-solving/issues/68, I'd like to have some contact info listed for every resource

[12:52] <AlexDaniel> rba: so let's say we go from the top, we see “DNS, perl6.org”. I want to see a person who can be bugged about perl6.org dns things

[12:53] <squashable6> 🍕🍕🍕  First contribution by AlexDaniel++! ♥

[12:54] <AlexDaniel> ok, so

[12:54] <AlexDaniel> who runs camelia?

[12:54] <AlexDaniel> nine, moritz, timotimo, rba: ?

[12:55] <AlexDaniel> nine: seems to be on your server!

[12:55] <AlexDaniel> nine: it no longer tracks master for some reason, can you fix it and also let me know why?

[12:56] <AlexDaniel> nine: either some cron job or whatever no longer works, or it is stuck at some commit because somebody force-pushed things into rakudo… but the latter would break whateverable too

[13:01] <AlexDaniel> e: say "\c[ALERT]";

[13:01] <evalable6> AlexDaniel, rakudo-moar bc45af3b8: OUTPUT: «␇␤»

[13:04] <Geth> ¦ doc: 752f19400c | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/unicode.pod6

[13:04] <Geth> ¦ doc: Proofreading: unicode.pod6

[13:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/752f19400c

[13:04] <synopsebot> Link: https://doc.perl6.org/language/unicode

[13:04] <squashable6> 🍕 AlexDaniel++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[13:11] *** chloekek joined
[13:16] <squashable6> 🍕 AlexDaniel++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[13:16] <squashable6> 🍕 AlexDaniel++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[13:17] *** Cabanossi left
[13:24] *** Cabanossi joined
[13:31] <rba> AlexDaniel: nine is afk for 3 weeks 

[13:32] <AlexDaniel> cool, who else has access?

[13:32] *** go|dfish joined
[13:36] *** adu left
[13:38] *** lucasb joined
[13:49] <Geth> ¦ doc: d24261620d | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/math.pod6

[13:49] <synopsebot> Link: https://doc.perl6.org/language/math

[13:49] <Geth> ¦ doc: Proofreading: math.pod6

[13:49] <Geth> ¦ doc: 

[13:49] <Geth> ¦ doc: IMO it the whole page needs heavy rephrasing and refactoring, but I

[13:49] <Geth> ¦ doc: fixed some basic things.

[13:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d24261620d

[13:49] <squashable6> 🍕 AlexDaniel++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[13:50] *** pecastro joined
[13:50] *** john_parr left
[13:55] *** silug joined
[14:02] *** nepugia joined
[14:06] <chloekek> Is there a template library that allows embedding of arbitrary Perl 6 expressions? Like ERB and PHP.

[14:09] <chloekek> Template::Protone seems similar to what I want, I'll make something like that. :)

[14:10] *** pamplemousse left
[14:12] *** john_parr joined
[14:20] <sjn> it's documentation proofreading day today, isn't it? :)

[14:23] <AlexDaniel> yeah

[14:24] <sjn> Sweet

[14:25] <sjn> I have a suggestion regarding the documentation

[14:26] <sjn> To make it easier to translate, I suggest that we put exactly 1 sentence per line where there is prose. 

[14:28] <sjn> that would make it a *lot* easier to keep translated documents up-to-date. A fix/change would be much more visible in the diffs, and if you make sure you only cover one topic/point/concept in each sentence, it becomes super easy to find which ones the changes map to in the translated text

[14:30] <sjn> Does this idea sound reasonable? (If it does, I can set up an issue in github, and/or start to jot down a few guidelines to a "how to document" guide, if we don't already have something like that)

[14:30] <sjn> If not, I'm quite happy to let the idea lie where it is :)

[14:34] <sjn> AlexDaniel: do we have a channel where we coordinate proofreading?

[14:34] * sjn is looking at and rewriting doc/Language/community.pod6

[14:36] <AlexDaniel> sjn: here is the good place

[14:36] <AlexDaniel> :)

[14:36] <AlexDaniel> sjn: I don't know what's the current plan with translations

[14:37] <AlexDaniel> especially given that the documentation is still improving rapidly

[14:38] <chloekek> p6: my $x := do { say 1; 2 }; BEGIN { say $x; }

[14:38] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(Any)␤1␤»

[14:39] <chloekek> Is precompilation supposed to call initializers of global my variables that aren't defined with constant?

[14:41] <chloekek> Oh, nevermind. I'm not precompiling, I'm generating documentation, I think.

[14:43] <chloekek> I'm getting ｢bindkey_o requires a concrete object (got a NQPMu type object instead)｣ when installing a distribution that uses EVAL. I'll see if I can make a reproducible example.

[14:43] *** pamplemousse joined
[14:44] <chloekek> With no precompilation; it does not fail.

[14:51] *** Manifest0 left
[14:58] *** cpan-p6 left
[14:58] *** cpan-p6 joined
[14:58] *** cpan-p6 left
[14:58] *** cpan-p6 joined
[15:07] *** marcel_ left
[15:10] <squashable6> 🍕🍕🍕  First contribution by sjn++! ♥

[15:10] <Geth> ¦ doc/sjn-docs-proofreading-1: 7a7e0189e2 | (Salve J. Nilsen)++ (committed using GitHub Web editor) | doc/Language/community.pod6

[15:10] <Geth> ¦ doc/sjn-docs-proofreading-1: Restructuring of text

[15:10] <Geth> ¦ doc/sjn-docs-proofreading-1: 

[15:10] <Geth> ¦ doc/sjn-docs-proofreading-1: - Added offline communities

[15:10] <Geth> ¦ doc/sjn-docs-proofreading-1: - Restructured text so each line has exactly one sentence, so translating based on diffs becomes easier

[15:10] <Geth> ¦ doc/sjn-docs-proofreading-1: review: https://github.com/perl6/doc/commit/7a7e0189e2

[15:11] <squashable6> 🍕 sjn++ opened pull request “Restructuring of text & …”: https://github.com/perl6/doc/pull/2932

[15:11] <Geth> ¦ doc: sjn++ created pull request #2932: Restructuring of text & mention offline communities

[15:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2932

[15:16] <sjn> First contribution according to squashable6++ :)

[15:17] *** Cabanossi left
[15:20] <chloekek> Filed a bug report.

[15:23] *** zakharyas joined
[15:23] *** MikeyG joined
[15:25] *** ilbelkyr_ joined
[15:26] *** Cabanossi joined
[15:29] *** ilbelkyr left
[15:36] *** sena_kun joined
[15:36] * sjn looks at doc/Language/101-basics.pod6

[15:38] <sjn> AlexDaniel: tell me what you think of my changes :)

[15:39] *** Sgeo left
[15:40] <AlexDaniel> sjn: I don't think a link to IRC lingo is needed. I think we should instead use language that is understood by people…

[15:42] <AlexDaniel> sjn: also you spelled Perl 6 without non-breaking space, there's a test in the doc repo which will complain about this

[15:43] <AlexDaniel> I'm not sure why this document talks about camelia…

[15:44] <AlexDaniel> sjn: also most documents are wrapped at 80 chars or so, and this was not done consistently in that document

[15:44] <AlexDaniel> but now you eliminated wrapping completely, as it seems?

[15:46] <sjn> yeah the (non-)wrapping is acutally my point

[15:48] <sjn> A while back, I gave a shot at translating the perl6intro page to Norwegian, but it quickly stalled because it became tedious to track changes when the 80-column wrapping made diffs bigger than necessary

[15:49] <sjn> that's the main reason for my suggestion. by following that one simple rule (1 topic per sentence, one sentence per line), keeping a translation up-to-date becomes *sooo* much easier

[15:49] <Kaiepi> if i wanted to make a custom metamodel class for creating monads that behaves mostly like parametric roles, would i subclass Metamodel::ParametricRoleHOW or Metamodel::ParametricRoleGroupHOW, or both?

[15:49] *** adu joined
[15:51] <Kaiepi> or would i be stuck having to extend Metamodel::ClassHOW or something else instead since rakudo doesn't let you write anything besides roles like RoleName[::T]

[15:51] <sjn> Regarding the IRC lingo, I agree that it should be unnecessary, but that's more dependant on what goes on here, and AFAIK we're still using it, so it's polite to mention a way to quickly learn it :)

[15:52] <sjn> AlexDaniel: I agree about Camelia. Is there another natural place to mention her, though?

[15:52] <AlexDaniel> sjn: start a ticket in https://github.com/perl6/problem-solving/

[15:53] <AlexDaniel> sjn: (regarding text wrapping in the doc repo)

[15:53] <sjn> ook

[15:53] *** noisegul joined
[15:53] <AlexDaniel> sjn: I think it's mentioned enough

[15:53] *** noisegul left
[15:53] <AlexDaniel> so if it it doesn't fit that document then just remove that sentence :)

[15:54] <sjn> btw, is there a good way for forcing a NBSP in the Perl 6 name when using the github editor?

[15:55] <Kaiepi> there's a script i wrote in /tools that replaces all instances of Perl 6 without NBSP

[15:55] <Kaiepi> oh the github editor

[15:56] <Kaiepi> not sure then

[15:56] *** Black_Ribbon joined
[15:58] *** kaare_ left
[15:59] *** kaare_ joined
[16:02] <AlexDaniel> sjn: I don't remember the situation with the github editor. Does it strip nbsp?

[16:10] <sjn> no idea

[16:17] <Geth> ¦ doc: uzluisf++ created pull request #2933: Proofread several documents

[16:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2933

[16:17] <squashable6> 🍕 uzluisf++ opened pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2933

[16:23] <sjn> Yay, uzluisf just "fixed" the example I was planning on using for my ticket for https://github.com/perl6/problem-solving/ :-P

[16:23] <sjn> oh well

[16:43] *** marcel_ joined
[16:46] <chloekek> Is it possible to do EVAL in the scope of the caller of a routine? Such that variables from the caller are in scope inside the EVAL.

[16:46] *** antoniogamiz joined
[16:47] <chloekek> p6: sub f { .say for CALLER::.pairs }; my $x := 1; f # seems I can reference the scope directly, is it possible to use it with EVAL somehow?

[16:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «$?PACKAGE => (GLOBAL)␤$=pod => []␤$=finish => (Mu)␤$¢ => Nil␤EXPORT => (EXPORT)␤!UNIT_MARKER => (!UNIT_MARKER)␤::?PACKAGE => (GLOBAL)␤$/ => Nil␤$x => 1␤&f => &f␤$_ => (Any)␤GLOBALish => (GLOBAL)␤$! => Nil␤»

[16:50] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Proofread several documents”: https://github.com/perl6/doc/pull/2933#issuecomment-517938856

[16:51] <squashable6> 🍕 JJ++ submitted a review on pull request “Restructuring of text & …”: https://github.com/perl6/doc/pull/2932#pullrequestreview-270466060

[16:52] <Geth> ¦ doc: 7a7e0189e2 | (Salve J. Nilsen)++ (committed using GitHub Web editor) | doc/Language/community.pod6

[16:52] <synopsebot> Link: https://doc.perl6.org/language/community

[16:52] <Geth> ¦ doc: Restructuring of text

[16:52] <Geth> ¦ doc: 

[16:52] <Geth> ¦ doc: - Added offline communities

[16:52] <Geth> ¦ doc: - Restructured text so each line has exactly one sentence, so translating based on diffs becomes easier

[16:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7a7e0189e2

[16:52] <Geth> ¦ doc: 8894171ced | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/community.pod6

[16:52] <squashable6> 🍕 JJ++ merged pull request “Restructuring of text & …”: https://github.com/perl6/doc/pull/2932

[16:52] <Geth> ¦ doc: Merge pull request #2932 from perl6/sjn-docs-proofreading-1

[16:52] <Geth> ¦ doc: 

[16:52] <Geth> ¦ doc: Restructuring of text & mention offline communities

[16:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8894171ced

[16:53] <squashable6> 🍕 JJ++ wrote a comment on “Proofread several documents”: https://github.com/perl6/doc/pull/2933#issuecomment-517939033

[16:55] <squashable6> 🍕 JJ++ synchronize pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2933

[16:58] <squashable6> 🍕 JJ++ submitted a review on pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2933#pullrequestreview-270466275

[17:01] <squashable6> 🍕 JJ++ synchronize pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2933

[17:01] <squashable6> 🍕 antoniogamiz++ deleted a comment on “Telemetry::Instrument::AdHoc not documented”: https://github.com/perl6/doc/issues/2928#issuecomment-517325506

[17:01] <squashable6> 🍕🍕🍕  First contribution by antoniogamiz++! ♥

[17:02] <squashable6> 🍕 antoniogamiz++ edited issue “Telemetry::Instrument::AdHoc not documented”: https://github.com/perl6/doc/issues/2928

[17:02] <squashable6> 🍕 antoniogamiz++ edited issue “X::Dynamic::NotFound not documented”: https://github.com/perl6/doc/issues/2928

[17:03] <squashable6> 🍕 antoniogamiz++ wrote a comment on “X::Dynamic::NotFound not documented”: https://github.com/perl6/doc/issues/2928#issuecomment-517939741

[17:03] <squashable6> 🍕 antoniogamiz++ reopened issue “X::Dynamic::NotFound not documented”: https://github.com/perl6/doc/issues/2928

[17:08] <squashable6> 🍕 JJ++ merged pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2933

[17:08] <Geth> ¦ doc/master: 4 commits pushed by (Luis F. Uceta)++, (Juan Julián Merelo Guervós)++

[17:08] <Geth> ¦ doc/master: 57e99711b0 | Proofread several documents

[17:08] <Geth> ¦ doc/master: b923529615 | Reindent code

[17:08] <Geth> ¦ doc/master: cfaa4b3c4f | Merge branch 'master' into doc-proofreading-02

[17:08] <Geth> ¦ doc/master: bf10033c91 | Merge pull request #2933 from uzluisf/doc-proofreading-02

[17:08] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/8894171ced52...bf10033c91d2

[17:21] *** beluga0 joined
[17:30] *** zakharyas left
[17:30] *** MilkmanDan left
[17:31] *** MilkmanDan joined
[17:37] *** dolmen joined
[17:42] *** vrurg left
[17:44] <Geth> ¦ doc: c401786501 | Coke++ | doc/Language/classtut.pod6

[17:44] <synopsebot> Link: https://doc.perl6.org/language/classtut

[17:44] <Geth> ¦ doc: Remove WHAT, since we already have name

[17:44] <Geth> ¦ doc: 

[17:44] <Geth> ¦ doc: This code isn't showing the difference between what and name,

[17:44] <Geth> ¦ doc: it's just a laundry list.

[17:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c401786501

[17:44] <Geth> ¦ doc: f660666228 | Coke++ | 2 files

[17:44] <Geth> ¦ doc: whitespace

[17:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f660666228

[17:48] *** beluga0 left
[17:53] <squashable6> 🍕 uzluisf++ wrote a comment on “Proofread several documents”: https://github.com/perl6/doc/pull/2933#issuecomment-517942929

[17:55] <squashable6> 🍕 uzluisf++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[17:56] <Kaiepi> squashable6, status

[17:56] <squashable6> Kaiepi, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:56] <squashable6> Kaiepi, Log and stats: https://gist.github.com/854ef646b559d9822b07ae725f5aaffc

[17:57] <Geth> ¦ doc: a03c33b3dd | Coke++ | doc/Language/classtut.pod6

[17:57] <synopsebot> Link: https://doc.perl6.org/language/classtut

[17:57] <Geth> ¦ doc: fix compilation

[17:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a03c33b3dd

[17:57] <Geth> ¦ doc: 52c0b08440 | Coke++ | doc/Language/objects.pod6

[17:57] <Geth> ¦ doc: whitespace

[17:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/52c0b08440

[17:57] <synopsebot> Link: https://doc.perl6.org/language/objects

[17:59] <squashable6> 🍕 Kaiepi++ wrote a comment on “Proofread documentation …”: https://github.com/perl6/doc/issues/2924#issuecomment-517943247

[17:59] <squashable6> 🍕🍕🍕  First contribution by Kaiepi++! ♥

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:04] <Geth> ¦ doc: da39efc5d6 | (Ben Davies)++ | doc/Type/Metamodel/EnumHOW.pod6

[18:04] <synopsebot> Link: https://doc.perl6.org/type/Metamodel::EnumHOW

[18:04] <Geth> ¦ doc: Correct Metamodel::EnumHOW's enum_from_value method description

[18:04] <Geth> ¦ doc: 

[18:04] <Geth> ¦ doc: Enum values aren't necessarily numeric. Say the value passed is of the

[18:04] <Geth> ¦ doc: enum's value type instead.

[18:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/da39efc5d6

[18:05] <sjn> AlexDaniel: https://github.com/perl6/problem-solving/issues/78

[18:08] <Geth> ¦ doc: 7b5fe33c5e | (Ben Davies)++ | doc/Type/Metamodel/EnumHOW.pod6

[18:08] <synopsebot> Link: https://doc.perl6.org/type/Metamodel::EnumHOW

[18:08] <Geth> ¦ doc: Actually correct Metamodel::EnumHOW's add_enum_value method description

[18:08] <Geth> ¦ doc: 

[18:08] <Geth> ¦ doc: Enums have a base type, not a value type.

[18:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7b5fe33c5e

[18:11] *** uzl joined
[18:11] <Elronnd> ¯\_(ツ)_/¯

[18:11] <uzl> m: my &callable = -> $ν { say "$ν is", $ν ~~ Int??" whole"!!" not whole" }; say callable(3)

[18:11] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «3 is whole␤True␤»

[18:11] <uzl> m: my &callable = -> $ν { say "$ν is", $ν ~~ Int??" whole"!!" not whole" }; say &callable(3)

[18:11] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «3 is whole␤True␤»

[18:12] <sjn> AlexDaniel: I've checked now; the github editor doesn't strip nbsp, but it doesn't show it's being used in any way either. Anyone unaware of it's requirement (e.g. when writing "Perl 6") won't be submitting the right thing

[18:12] <sjn> so having a way to automagically fix those would probably be a good idea :)

[18:12] <sjn> (e.g. a git hook? or a bot?)

[18:13] <uzl> Would it be fine to "has to be omitted" to "can be omitted" in "The sigil & is required when declaring the container and has to be omitted when executing the Callable."?

[18:13] <uzl> It doesn't seem necessary to drop & to execute the callable.

[18:13] <uzl> BTW, this is from https://docs.perl6.org/language/containers#Callable_containers

[18:14] <Geth> ¦ problem-solving: AlexDaniel assigned to JJ Issue Documentation principles for making translation easier https://github.com/perl6/problem-solving/issues/78

[18:14] <antoniogamiz> Have you read the new documentation proposal? => https://github.com/perl6/doc/wiki/Document-file-specification

[18:14] <Geth> ¦ doc: Kaiepi++ created pull request #2934: Correct all methods' signatures in Metamodel::EnumHOW's page

[18:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2934

[18:14] <squashable6> 🍕 Kaiepi++ opened pull request “Correct all methods' sig…”: https://github.com/perl6/doc/pull/2934

[18:14] <antoniogamiz> I'm asking for permission to add the necessary meta attributes to each pod file (right after =begin pod)

[18:16] <AlexDaniel> eh, problem solving repo needs an issue template badly :)

[18:16] <sjn> antoniogamiz: I haven't thanks

[18:17] <sjn> I looked for something like that in the repo; didn't occur to me to check the repo's wiki

[18:18] <squashable6> 🍕 Kaiepi++ wrote a comment on “Correct all methods' sig…”: https://github.com/perl6/doc/pull/2934#issuecomment-517944525

[18:18] <antoniogamiz> sjn: but that's the new specification, it's not implemented yet

[18:20] <sjn> antoniogamiz: understood

[18:21] <antoniogamiz> sjn: if you are looking for a guide explaining how to contribute, you can check this => https://github.com/perl6/doc/blob/master/CONTRIBUTING.mdhttps://github.com/perl6/doc/blob/master/CONTRIBUTING.mdhttps://github.com/perl6/doc/blob/master/CONTRIBUTING.md

[18:21] <sjn> antoniogamiz: Already seen it :)

[18:21] <antoniogamiz> ups I have pasted the url more than once, sorry => https://github.com/perl6/doc/blob/master/CONTRIBUTING.md

[18:21] <antoniogamiz> ah, good :)

[18:24] <Geth> ¦ problem-solving/AlexDaniel-issue-template-test: ff644fc28a | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | .github/ISSUE_TEMPLATE/issue-template.md

[18:24] <Geth> ¦ problem-solving/AlexDaniel-issue-template-test: Update issue templates

[18:24] <Geth> ¦ problem-solving/AlexDaniel-issue-template-test: review: https://github.com/perl6/problem-solving/commit/ff644fc28a

[18:24] <Geth> ¦ problem-solving: AlexDaniel++ created pull request #79: Update issue templates

[18:24] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/pull/79

[18:27] <tobs> uzl: seems fair. For completeness, you *have* to omit the sigil if you want to invoke a nullary callable without using parentheses (and I really like to omit parentheses where possible) :)

[18:28] <uzl> m: my &callable = -> $ν { say "$ν is", $ν ~~ Int??" whole"!!" not whole" }; &callable 3

[18:28] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3Int??" whole"!!" not whole" }; &callable7⏏5 3␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement…»

[18:28] <uzl> m: my &callable = -> $ν { say "$ν is", $ν ~~ Int??" whole"!!" not whole" }; callable 3

[18:28] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «3 is whole␤»

[18:28] <Geth> ¦ problem-solving: 6dce828977 | (Aleks-Daniel Jakimenko-Aleksejev)++ | .github/ISSUE_TEMPLATE/issue-template.md

[18:28] <Geth> ¦ problem-solving: Add a basic issue template

[18:28] <Geth> ¦ problem-solving: 

[18:29] <Geth> ¦ problem-solving: Otherwise people jump too fast to proposing solutions.

[18:29] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/6dce828977

[18:30] <Geth> ¦ problem-solving: 8839a33130 | (Aleks-Daniel Jakimenko-Aleksejev)++ | .github/ISSUE_TEMPLATE/issue-template.md

[18:30] <Geth> ¦ problem-solving: Tweak the template for better rendering

[18:30] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/8839a33130

[18:32] <uzl> tobs: Oh, that didn't cross my mind. I guess it's better to leave as is. I also like omitting the parenthesis whenever possible. Same with methods by using the colon-syntax :-).

[18:33] <Geth> ¦ problem-solving: 164f37f841 | (Aleks-Daniel Jakimenko-Aleksejev)++ | .github/ISSUE_TEMPLATE/issue-template.md

[18:33] <Geth> ¦ problem-solving: Add “about” field to the template

[18:33] <Geth> ¦ problem-solving: 

[18:33] <Geth> ¦ problem-solving: “About can't be blank”.

[18:33] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/164f37f841

[18:34] <AlexDaniel> ok I'm much happier now… :)

[18:35] <tobs> uzl: a remark about that can't hurt though (when put in the right place, which I don't know where it is). Then there's also the minimally different &callable.() syntax that WILL require the sigil...

[18:36] <squashable6> 🍕 antoniogamiz++ opened issue “Add metadata defined by new file specification”: https://github.com/perl6/doc/issues/2935

[18:36] <squashable6> 🍕 antoniogamiz++ labeled issue “Add metadata defined by new file specification” (easy to resolve): https://github.com/perl6/doc/issues/2935

[18:37] <Geth> ¦ doc: antoniogamiz self-assigned Add metadata defined by new file specification https://github.com/perl6/doc/issues/2935

[18:38] *** wildtrees joined
[18:38] *** Sgeo joined
[18:39] *** wildtrees left
[18:39] <uzl> tob: Totally right. The Functions page might be a good place for it, though I'm not sure.

[18:39] *** wildtrees joined
[18:40] <antoniogamiz> how can I specify in the return signature an array of a specific object?

[18:40] *** zakharyas joined
[18:40] <antoniogamiz> for instance, sub a() --> Hash @a { ... }

[18:41] <timotimo> the --> has to go inside of the ()

[18:41] *** robertle joined
[18:41] <antoniogamiz> oh, sorry I mistyped it

[18:41] <timotimo> but yeah, that'd be how to declare it

[18:41] *** wildtrees left
[18:42] <antoniogamiz> oh really? but I need to type a name right after @?

[18:42] *** wildtrees joined
[18:42] <timotimo> oooh, that's what you mean

[18:42] <timotimo> can just use Positional[Hash] in that case

[18:42] <uzl> Does --> have a name in this context?

[18:42] <antoniogamiz> ooooooohhhh good, thanks :)

[18:43] <timotimo> "long thin arrow"? :P

[18:43] <antoniogamiz> uzl: https://docs.perl6.org/type/Signature#index-entry---%3E

[18:43] <timotimo> maybe if => is "fat comma", then --> is "long comma" :D

[18:43] <sjn> "tall comma" :)

[18:44] <sjn> seems to me they're both lying down :)

[18:44] <uzl> Thanks, antoniogamiz. The docs calls return type arrow.

[18:44] <antoniogamiz> m: sub a(--> Positional[Hash]) { return [Hash.new]; }; a();

[18:44] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Type check failed for return value; expected Positional[Hash] but got Array ($[])␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:45] <timotimo> if we had a ; with two comma instead of a comma and a period, maybe that'd be fitting

[18:45] <antoniogamiz> it doesn't work :(

[18:45] <timotimo> antoniogamiz: well, you're returning an Array that has a Hash in it

[18:45] <timotimo> you need to return an Array parameterized to have Hash in it

[18:45] <antoniogamiz> how's that? mm

[18:46] <timotimo> just "return my Hash @ = Hash.new"

[18:46] <timotimo> for example

[18:46] <antoniogamiz> I see, thanks :D

[18:46] *** Sgeo_ joined
[18:47] <timotimo> could also Array[Hash].new(Hash.new) or "my Hash @ = $(my %)" should also work

[18:47] <uzl> m: sub a(--> Positional[Hash]) { return Array[Hash].new(Hash.new) }; a().say

[18:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «[]␤»

[18:48] *** vrurg joined
[18:48] <timotimo> oh, that actually iterates the hash

[18:48] <antoniogamiz> my Hash @ solved it

[18:48] <timotimo> m: sub a(--> Positional[Hash]) { return Array[Hash].new(Hash.new.item) }; a().say

[18:48] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «[{}]␤»

[18:48] <timotimo> need to tell the array iterator not to .list the Hash into its pairs

[18:49] <uzl> Oh, that makes sense.

[18:49] *** ChoHag joined
[18:49] *** Sgeo left
[19:00] *** dolmen left
[19:07] *** wildtrees left
[19:08] *** wildtrees joined
[19:11] *** dolmen joined
[19:11] *** Sgeo_ left
[19:13] *** dolmen left
[19:13] *** AlexDaniel left
[19:13] *** dolmen joined
[19:14] *** Sgeo joined
[19:21] *** antoniogamiz left
[19:34] *** vrurg left
[19:36] *** wildtrees_ joined
[19:39] *** wildtrees left
[19:41] <sjn> Quick question; Is p6doc still in use? I'm trying to update it, and zef aborts it's installation due to "build failure"

[19:41] <timotimo> where do i find unicode combining characters that go in front of the codepoint they are meant to combine onto?

[19:44] *** pamplemousse left
[19:44] *** john_parr left
[19:45] <timotimo> there is something like that, isn't there?

[19:45] *** john_parr joined
[19:46] <timotimo> Prepended_Concatenation_Mark = Yes

[19:50] *** khisanth_ left
[19:52] *** AlexDaniel joined
[19:56] <AlexDaniel> fantastic, after upgrading my system trackpoint sensitivity is now different

[19:56] <AlexDaniel> actually not just different, but pretty much unusable

[19:56] <AlexDaniel> wish me luck to figure this one out :)

[19:57] <AlexDaniel> though I guess people who use debian unstable are not supposed to complain :)

[19:57] <moritz> AlexDaniel: good luck! :D

[20:07] <Geth> ¦ doc: uzluisf++ created pull request #2936: Proofread several documents

[20:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2936

[20:07] <squashable6> 🍕 uzluisf++ opened pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2936

[20:08] *** khisanth_ joined
[20:10] <AlexDaniel> uzl++

[20:11] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Proofread several documents”: https://github.com/perl6/doc/pull/2936#issuecomment-517951392

[20:11] <Geth> ¦ doc: 12e69de4d9 | (Luis F. Uceta)++ | 3 files

[20:11] <Geth> ¦ doc: Proofread several documents

[20:11] <Geth> ¦ doc: 

[20:11] <Geth> ¦ doc: container.pod6, contexts.pod6 and control.pod6

[20:11] <Geth> ¦ doc: 

[20:11] <squashable6> 🍕 AlexDaniel++ merged pull request “Proofread several documents”: https://github.com/perl6/doc/pull/2936

[20:11] <Geth> ¦ doc: Changes include text reflow, minor grammatical fixes, removing

[20:11] <Geth> ¦ doc: whitespace, etc.

[20:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/12e69de4d9

[20:11] <Geth> ¦ doc: b82f914b70 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | 3 files

[20:11] <Geth> ¦ doc: Merge pull request #2936 from uzluisf/doc-proofreading-03

[20:11] <Geth> ¦ doc: 

[20:11] <Geth> ¦ doc: Proofread several documents

[20:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b82f914b70

[20:13] <Geth> ¦ doc: 8638544033 | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/Backtrace.pod6

[20:13] <synopsebot> Link: https://doc.perl6.org/type/Backtrace

[20:13] <Geth> ¦ doc: Oxford comma

[20:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8638544033

[20:13] *** marcel_ left
[20:13] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[20:14] *** ChoHag left
[20:14] <Geth> ¦ doc: b4f38f6066 | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/Backtrace/Frame.pod6

[20:14] <synopsebot> Link: https://doc.perl6.org/type/Backtrace::Frame

[20:14] <Geth> ¦ doc: Update Frame.pod6

[20:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b4f38f6066

[20:15] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[20:16] *** uzl left
[20:16] <cpan-p6> New module released to CPAN! Gnome::Glib (0.14.0) by 03MARTIMM

[20:17] <Geth> ¦ doc: 49bc02177d | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/IntStr.pod6

[20:17] <synopsebot> Link: https://doc.perl6.org/type/IntStr

[20:17] <Geth> ¦ doc: Update IntStr.pod6

[20:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/49bc02177d

[20:18] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[20:18] *** ilbelkyr_ is now known as ilbelkyr

[20:19] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[20:20] <squashable6> 🍕 sjn++ wrote a comment on “Proofread documentation …”: https://github.com/perl6/doc/issues/2924#issuecomment-517951891

[20:20] <Geth> ¦ doc: 9880c88d8c | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/NumStr.pod6

[20:20] <synopsebot> Link: https://doc.perl6.org/type/NumStr

[20:20] <Geth> ¦ doc: Update NumStr.pod6

[20:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9880c88d8c

[20:21] <Geth> ¦ doc: 6d3409dd41 | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/RatStr.pod6

[20:21] <synopsebot> Link: https://doc.perl6.org/type/RatStr

[20:21] <Geth> ¦ doc: Update RatStr.pod6

[20:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6d3409dd41

[20:22] <Geth> ¦ doc: cc04cb9ed2 | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/ComplexStr.pod6

[20:22] <synopsebot> Link: https://doc.perl6.org/type/ComplexStr

[20:22] <Geth> ¦ doc: Update ComplexStr.pod6

[20:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cc04cb9ed2

[20:23] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[20:26] *** reach_satori left
[20:28] *** reach_satori joined
[20:31] *** [particle]1 joined
[20:32] *** [particle] left
[20:33] *** reach_satori left
[20:33] *** [particle] joined
[20:36] *** [particle]1 left
[20:50] *** gdonald left
[20:51] *** dolmen left
[20:56] <sjn> In Pod6, what does this mean?  =begin code :method<False>

[20:56] *** [particle]1 joined
[20:57] *** [particle] left
[20:58] *** molaf joined
[20:59] *** wildtrees_ is now known as wildtrees

[21:00] <AlexDaniel> sjn: https://github.com/perl6/doc/blob/master/writing-docs/EXAMPLES.md#methods

[21:01] <sjn> it doesn't seem to be documented in the pod.pod6 file :)

[21:02] <sjn> but thanks, that helped :D

[21:05] *** zakharyas left
[21:06] <tobs> sjn: it is documented but maybe it could use an example? https://docs.perl6.org/language/pod#Configuration_information

[21:07] *** reach_satori joined
[21:10] *** Kaypie joined
[21:10] *** Kaiepi left
[21:10] *** chloekek left
[21:11] <AlexDaniel> it's a thing that is specific to the doc repo

[21:15] *** sena_kun left
[21:17] *** molaf left
[21:21] *** rindolf left
[21:41] *** rindolf joined
[21:51] *** dolmen joined
[22:07] *** nepugia left
[22:18] *** ufobat__ left
[22:18] *** jaldhar joined
[22:19] *** jaldhar left
[22:22] *** jaldhar joined
[22:25] *** rindolf left
[22:27] *** vrurg joined
[22:28] *** jaldhar left
[22:28] *** jaldhar joined
[22:34] *** jaldhar left
[22:34] *** jaldhar joined
[22:42] *** jaldhar left
[22:42] *** jaldhar joined
[22:44] *** jaldhar left
[22:44] *** jaldhar joined
[22:52] *** jaldhar left
[22:52] *** jaldhar joined
[23:11] *** pecastro left
[23:26] <timotimo> https://ziglang.org/ - this kind of looks pretty adorable

[23:32] <El_Che> is it a brandnew language that is fun?

[23:32] <El_Che> if yes, we are in trouble :)

[23:33] <timotimo> i've only read through the big feature list so far

[23:34] *** vrurg left
[23:40] *** jaldhar left
[23:40] *** jaldhar joined
[23:52] *** jaldhar left
[23:52] *** jaldhar joined
[23:53] <timotimo> zig has some zingers like "zig is better at using c libraries than c is at using c libraries"

[23:54] *** jaldhar left
[23:54] *** jaldhar joined
[23:54] <timotimo> errdefer kind of makes me want to have an UNDO phaser that "only runs if the code already passed it on the way"

[23:56] <timotimo> clearly what we need is zix

