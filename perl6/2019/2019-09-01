[00:05] *** AlexDaniel joined
[00:05] *** AlexDaniel left
[00:05] *** AlexDaniel joined
[00:10] *** rindolf left
[01:01] <Xliff> Does CURI actually support precompiling and installing to a staging directory?

[01:04] <vrurg> Xliff: perhaps you're looking for perl6 --target=mbc?

[01:10] *** evalable6 left
[01:12] *** evalable6 joined
[01:12] *** ChanServ sets mode: +v evalable6

[01:28] *** molaf joined
[01:37] *** netrino left
[01:43] *** aborazmeh joined
[01:43] *** aborazmeh left
[01:43] *** aborazmeh joined
[01:58] *** molaf left
[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:11] *** molaf joined
[02:34] *** Cabanossi left
[02:41] *** Cabanossi joined
[02:44] *** aborazmeh left
[02:57] <cpan-p6> New module released to CPAN! App::Tasks (0.0.16) by 03JMASLAK

[03:38] *** whosgonna joined
[03:39] <whosgonna> I'm looking to install perl6 on FreeBSD.  Testing with a clean VM from digital ocean.  I failed the spec test.  I've rolled back to a snapshot and am starting over, but if it fails again, in what log file would i check?  

[03:40] <whosgonna> Also, has anyone compiled on freebsd?  I didn't install gcc, and am using clang so it's possible (likely?) that this is the root of my failure.

[03:46] <Xliff> m: "%d".&sprintf(1).say

[03:46] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «1␤»

[03:46] <Xliff> m: "%d %s".&sprintf(1, "OHAI!").say

[03:46] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «1 OHAI!␤»

[03:47] <AlexDaniel> whosgonna: it depends. It should work fine on freebsd

[03:47] <AlexDaniel> whosgonna: which spectest failed?

[03:48] <whosgonna> I blieve the last test that it ran was t/spec/S15-nfg/grapheme-break.t

[03:49] <AlexDaniel> whosgonna: the last test? You mean it hanged after that?

[03:49] <whosgonna> i reverted the virtual machine to a snapshot, so i don't have it.  Re-runninig the spectest now,  so i should have it within about 30 min.

[03:49] <whosgonna> my recollection is that it gave a test failed message.

[03:49] <AlexDaniel> okay

[03:50] <whosgonna> unfortunately i don't have the details.

[03:50] <whosgonna> right now it's on t/spec/S02-types/subset.t

[03:50] <whosgonna> what would be the equivilent of running prove for the individual tests?

[03:51] <AlexDaniel> is it from rakudo repo? If so, then make t/spec/Sxx-.../....t

[03:52] <AlexDaniel> whosgonna: it could also be that the vm is relatively slow, and I think there are a few tests that may fail in that case

[03:52] <whosgonna> ./perl6 -Ilib t/spec/S15-nfg/grapheme-break.t   

[03:52] <whosgonna> ^ like that, from ~/rakudo/rakudo 

[03:52] <AlexDaniel> it is still worth reporting that so that we can fix them

[03:53] <whosgonna> Sounds cool.  I had hoped to start playing with perl6, and was hoping that eventually a rakudo port would reappear, but.... i guess i'll just build it myself.

[03:55] <whosgonna> i also don't think it was that test that failed.  if i run it individually, it passes, and this is the actual test:

[03:55] <whosgonna> ok 1, 'dummy test file';

[03:55] <whosgonna> so - i'm not sure how that could fail, or even waht it accomplishes.

[03:59] <AlexDaniel> whosgonna: oh, that file is simply a placeholder that we needed in the past. The actual test file is GraphemeBreakTest.t

[03:59] <AlexDaniel> vrurg: ↑ I think you fixed that, right? We can now delete these dummy files

[04:00] <AlexDaniel> vrurg: https://github.com/perl6/roast/commit/af6507822ca08bcdc3c340a5a8d1fb37e10e10f5

[04:00] <whosgonna> well, don't take my recollecction as 100% gospel truth.  I'm retesting now

[04:02] <whosgonna> but i'm also running GraphemeBeakeTest.t now individually.

[04:04] <whosgonna> it's also maybe worth my mentioning that when i run ` make rakudo-spectest` it fails pulling new tests from git, so maybe there's a change and it's not being pulled.

[04:05] <whosgonna> yeah, it's failed GraphemeBreakTest.t :)  

[04:08] <whosgonna> I followed the instructions https://rakudo.org/files/star/source for Linux/Unix.  That doesn't clone the p6 repository, but downloads a tarball.  when running make rakudo-spectest, it does this:

[04:08] <whosgonna> cd t/spec && git pull --ff-only

[04:08] <whosgonna> which fails because it's not a git repo:   fatal: not a git repository (or any of the parent directories): .git 

[04:15] <Xliff> Is there a way to block a module's exported symbols and subs from a scope?

[04:15] <Xliff> so...

[04:16] <Xliff> "use NativeCall # Nativecall Globally; do { no use NativeCall # But not in this scope; }

[04:16] <Xliff> "

[04:16] *** cxreg joined
[04:16] <Xliff> cxreg o/

[04:17] <cxreg> \o/

[04:18] *** reach_satori left
[04:26] <Xliff> .seen holli

[04:26] <tellable6> Xliff, I saw holli 2017-10-21T17:50:37Z in #perl6: <holli> oh hey tina :) sup?

[04:28] *** rainmanjam joined
[05:08] *** pilne joined
[05:44] *** cxreg left
[05:56] *** ravenous_ joined
[06:00] *** ravenous_ left
[06:01] *** reach_satori joined
[06:04] <vrurg> AlexDaniel: yes, since spectest.data has been moved into roast.

[06:17] *** ravenous_ joined
[06:43] *** aborazmeh joined
[06:43] *** aborazmeh left
[06:43] *** aborazmeh joined
[06:45] <Geth> ¦ doc: f93c5b84bd | (JJ Merelo)++ | doc/HomePage.pod6

[06:45] <Geth> ¦ doc: Minor rewrites

[06:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f93c5b84bd

[06:45] <Geth> ¦ doc: bc3dfea8ca | (JJ Merelo)++ | doc/Language/faq.pod6

[06:45] <Geth> ¦ doc: Minor rewrites again

[06:45] <synopsebot> Link: https://doc.perl6.org/language/faq

[06:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bc3dfea8ca

[06:45] <Geth> ¦ doc: cbf3f57852 | (JJ Merelo)++ | doc/Type/independent-routines.pod6

[06:45] <synopsebot> Link: https://doc.perl6.org/type/independent-routines

[06:45] <Geth> ¦ doc: Minor clarification

[06:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cbf3f57852

[06:48] *** ravenous_ left
[06:53] <Geth> ¦ doc: d2f78a4f30 | (Skye Shaw)++ (committed by sshaw) | doc/Language/rb-nutshell.pod6

[06:53] <synopsebot> Link: https://doc.perl6.org/language/rb-nutshell

[06:53] <Geth> ¦ doc: Ruby fixes

[06:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d2f78a4f30

[06:53] <Geth> ¦ doc: 4e819fb78e | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/rb-nutshell.pod6

[06:53] <Geth> ¦ doc: Merge pull request #2990 from sshaw/patch-1

[06:53] <Geth> ¦ doc: 

[06:53] <Geth> ¦ doc: Ruby fixes

[06:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4e819fb78e

[06:58] *** ravenous_ joined
[07:00] *** jjmerelo joined
[07:06] <Geth> ¦ doc: dd329e9369 | (JJ Merelo)++ | 3 files

[07:06] <Geth> ¦ doc: Deletes spun off libraries, refs #2983

[07:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dd329e9369

[07:13] *** jaldhar joined
[07:15] <jaldhar> I seem to remember you can write a function parameter such that it uses one name externally but another name in the function.

[07:17] <jaldhar> For example I might want sub MAIN(Int :$n) so I can get -n command line parameter but internally it maps to $foo not $n.  What is the syntax for that?

[07:19] *** ravenous_ left
[07:22] <Geth> ¦ doc: JJ assigned to antoniogamiz Issue Inconsistent index escaping https://github.com/perl6/doc/issues/2535

[07:24] *** MasterDuke joined
[07:24] <MasterDuke> jaldhar: https://docs.perl6.org/type/Signature#index-entry-argument_aliases

[07:25] <Geth> ¦ doc: JJ assigned to antoniogamiz Issue Indexes that include % do not work https://github.com/perl6/doc/issues/2527

[07:25] <El_Che> :external($private)

[07:28] *** MasterDuke left
[07:31] *** antoniogamiz joined
[07:35] <jjmerelo> Well, we're getting rid of htmlify.p6 today.

[07:35] <tellable6> 2019-08-31T11:07:36Z #perl6 <rba> jjmerelo: Do you prefer to build it on the circle-ci server and then? Are you able to just push the change to the webhosting using rsync?

[07:35] <tellable6> 2019-08-31T13:41:25Z #perl6 <tbrowder> jjmerelo note the docs page on the io page is missing the reference section

[07:35] <tellable6> 2019-08-31T13:55:08Z #perl6 <rba> jjmerelo doc.perl6.org or docs.perl6.org?

[07:37] <jjmerelo> .tell rba we're using circle-ci only for testing. We will probably build locally anyway. Also, I think both servers are used, but the official one is doc.perl6.org

[07:37] <tellable6> jjmerelo, I'll pass your message to rba

[07:37] <jjmerelo> .tell tbrowder what do you mean?

[07:37] <tellable6> jjmerelo, I'll pass your message to tbrowder

[07:39] <Geth> ¦ doc: e9f3a9d371 | (JJ Merelo)++ | htmlify.p6

[07:39] <Geth> ¦ doc: Removes htmlify.p6

[07:39] <Geth> ¦ doc: 

[07:39] <Geth> ¦ doc: Its functionality has been superseded by the new Documentable. It's had a nice run, but previously I deleted a couple of libraries that depended on it, so it was no longer functional.

[07:39] <Geth> ¦ doc: 

[07:39] <Geth> ¦ doc: Refs #2996. But also:

[07:39] <Geth> ¦ doc: 

[07:39] <Geth> ¦ doc: * Closes #2883 since disambiguation files are no longer generaed.

[07:39] <Geth> ¦ doc: <…commit message has 16 more lines…>

[07:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e9f3a9d371

[07:39] <jaldhar> El_Che: thanks.  How do I get it to take a default value as well?  Int :$n ($foo) = 1 doesn't work.

[07:42] *** molaf left
[07:45] <jjmerelo> .tell rba: sorry, docs.perl6.org is the one that's used and referenced.

[07:45] <tellable6> jjmerelo, I'll pass your message to rba

[07:51] <Geth> ¦ doc: 1470182c59 | (JJ Merelo)++ | 2 files

[07:51] <Geth> ¦ doc: No longer used in documentable, refs #2996

[07:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1470182c59

[07:51] <Geth> ¦ doc: 3adf10d18f | (JJ Merelo)++ | Makefile

[07:51] <Geth> ¦ doc: Deletes htmlify targets refs #2996

[07:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3adf10d18f

[07:51] <Geth> ¦ doc: faa7981f64 | (JJ Merelo)++ | 2 files

[07:51] <Geth> ¦ doc: Removing references from the documentation and updating, refs #2996

[07:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/faa7981f64

[07:55] *** aborazmeh left
[08:03] <discord6> <Aearnus> hey, how do you type the keys of a hash?

[08:03] <discord6> <Aearnus> you can do things like

[08:03] *** aindilis` joined
[08:04] <discord6> <Aearnus> m: (my Int %h = 'hello' => 5).say

[08:04] <evalable6> Aearnus, rakudo-moar 579ac66e8: OUTPUT: «{hello => 5}␤»

[08:04] <discord6> <Aearnus> but there's no real way to strongly type the keys as strings

[08:07] <discord6> <Aearnus> iirc there was a way to do it with subset?

[08:32] <jjmerelo> aearnus you can assign a type to both, but the key type must have WHICH to be hashable.

[08:35] *** molaf joined
[08:39] *** dolmen joined
[08:39] *** domidumont joined
[08:47] *** chloekek joined
[08:48] *** antoniogamiz left
[08:50] *** dolmen left
[08:52] *** molaf left
[09:03] *** rainmanjam left
[09:03] *** rainmanjam joined
[09:10] *** domidumont left
[09:25] *** rindolf joined
[09:25] *** pecastro joined
[09:43] <kent\n> I really don't like reading people who know less about Perl 6 than I do, as a person who doesn't use Perl 6, tell us about things Perl 6 does that are wrong, and then use that as justification... 

[09:43] <kent\n> Just ugh. 

[09:45] <kent\n> "you can totally run perl 5 in perl 6, they are thus compatible syntax"... sorry. What. Somebody doesn't understand what Inline:: stuff does.

[09:46] <kent\n> trying to explain why that line of logic doesn't make any sense is something I don't have the patience to do in a bug about "the name is bad" 

[09:52] <tadzik> where is that from?

[09:52] <tadzik> (the syntax quote)

[10:17] <kent\n> I'm paraphrasing

[10:20] <kent\n> so much of that last comment is beyond not-even-wrong

[10:25] *** evalable6 left
[10:27] *** evalable6 joined
[10:27] *** ChanServ sets mode: +v evalable6

[10:32] *** pecastro left
[10:49] *** jaldhar left
[10:49] *** jaldhar joined
[10:59] *** pecastro joined
[11:02] *** Black_Ribbon left
[11:04] <tobs> m: use Test; my Int %h{Str}; lives-ok { %h{'a'} = 10 }, 'Str → Int'; dies-ok { %h{$*PERL} = 10 }, 'Perl ↛ Int'; dies-ok { %h{'a'} = $*PERL }, 'Str ↛ Perl'  # Aearnus

[11:04] <evalable6> tobs, rakudo-moar 579ac66e8: OUTPUT: «ok 1 - Str → Int␤ok 2 - Perl ↛ Int␤ok 3 - Str ↛ Perl␤»

[11:05] *** aindilis` left
[11:05] *** pranks joined
[11:09] *** jjmerelo left
[11:31] *** kamog joined
[11:40] *** pranks left
[11:51] <tbrowder> jjmerelo: at one point i though one of the sections was missing on the language page of the docs

[11:51] <tellable6> tbrowder, I'll pass your message to jjmerelo

[11:52] <tbrowder> i thought there was a section for general reference but i must be wrong

[11:52] <tellable6> 2019-09-01T07:37:26Z #perl6 <jjmerelo> tbrowder what do you mean?

[11:53] <tbrowder> i still don't see my new page

[12:40] *** evalable6 left
[12:40] *** evalable6 joined
[13:02] *** kamog left
[13:05] *** vike joined
[13:11] *** kamog joined
[13:22] *** |oLa| joined
[13:22] *** aindilis joined
[13:30] *** sam39 joined
[13:43] *** squashable6 joined
[14:13] *** holyghost-androi left
[14:18] *** pecastro left
[14:20] *** pecastro joined
[14:22] *** sam39 left
[14:30] *** MilkmanDan left
[14:32] *** MilkmanDan joined
[14:32] *** lucasb joined
[14:37] *** pecastro left
[15:01] *** patrickb joined
[15:05] *** ravenous_ joined
[15:07] *** sena_kun joined
[15:08] *** sena_kun left
[15:09] *** ravenous_ left
[15:09] *** sena_kun joined
[15:10] *** squashable6 left
[15:10] *** squashable6 joined
[15:11] *** cpan-p6 left
[15:11] *** cpan-p6 joined
[15:11] *** cpan-p6 left
[15:11] *** cpan-p6 joined
[15:32] *** pecastro joined
[15:46] *** lichtkind joined
[15:59] *** ravenous_ joined
[15:59] *** lichtkind left
[16:01] <AlexDaniel> squashable6: status

[16:01] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 4 days and ≈11 hours (2019-09-07 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:02] <tobs> AlexDaniel: would be cool if it showed the topic once it has been settled...

[16:03] <sena_kun> +1

[16:03] <AlexDaniel> yeah…

[16:04] <tobs> oh, it's already in some ticket

[16:04] *** ravenous_ left
[16:05] <AlexDaniel> tobs: where?

[16:05] <tobs> #237 in the title

[16:05] <AlexDaniel> ah I see

[16:05] *** lichtkind joined
[16:06] <AlexDaniel> tobs: https://github.com/perl6/whateverable/issues/237#issuecomment-526931096

[16:07] <tobs> AlexDaniel: is there a formal procedure to decide the next topic or is it negotiated every month via IRC? Maybe the squashathons could be listed in some text file and the next topic be discussed as part of a PR to add it to the file.

[16:07] <AlexDaniel> tobs: it's discussed every month via IRC

[16:07] <tobs> AlexDaniel: read the comment now, getting it from the wiki seems good too. Less bureaucracy

[16:08] <AlexDaniel> but maybe it'd better to have a repo, so that everyone can file a ticket with their idea

[16:09] <AlexDaniel> still we use that page to list the current plan for the next month or months, so that wiki page is fine by itself

[16:10] <tobs> I feel like I had something to do this evening already, but I can't remember what it was, so I might as well try to close that issue

[16:11] <Geth> ¦ whateverable: taboege self-assigned Squashable should point to some wiki (and maybe say what's the topic of the next squashathon too) https://github.com/perl6/whateverable/issues/237

[16:12] <AlexDaniel> there are no tests so it's easier :D

[16:17] *** jmerelo joined
[16:18] <jmerelo> squashable6: status

[16:18] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 4 days and ≈11 hours (2019-09-07 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:18] <tellable6> 2019-09-01T11:51:34Z #perl6 <tbrowder> jjmerelo: at one point i though one of the sections was missing on the language page of the docs

[16:18] <tellable6> 2019-09-01T12:56:11Z #perl6-dev <[Tux]> jjmerelo: the test-t is (for me) the most interesting one, and as nine said csv-test-xs-20 it the only perl5 one, the rest is perl6

[16:18] <jmerelo> .tell [Tux]: got it, thanks!

[16:18] <tellable6> jmerelo, I'll pass your message to [Tux]

[16:26] *** Cabanossi left
[16:28] *** Cabanossi joined
[16:31] *** lichtkind left
[16:32] *** lichtkind joined
[16:38] *** Sgeo_ joined
[16:38] *** lichtkind left
[16:41] *** Sgeo left
[16:44] <Geth> ¦ doc: 6f34266960 | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[16:44] <Geth> ¦ doc: Normalizes to meta, refs #2966

[16:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6f34266960

[16:44] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[16:55] <AlexDaniel> tobs: you can use `sake debug:squashable` and it'll join #whateverable

[16:56] <tobs> AlexDaniel: ah cool, I was just finishing something up, haven't started yet on the ticket.

[16:59] <jmerelo> I've "adopted" Pod::To::Cached in the Perl6 organization https://github.com/perl6/Pod-To-Cached/

[17:01] <jmerelo> It's essentially a tool for managing documentation caches, and it's the lower layer of Documentable. Richard Hainsworth, the original author, has given us permission and has been added as maintainer to the repo

[17:02] <jmerelo> For the time being, the current version will remain in the repository. When we feel comfortable with the new one, we'll switch to it.

[17:08] <jmerelo> We've felt it was much more operative to do it this way, since we use it so intensively from Documentable

[17:12] <discord6> <RaycatWhoDat> So, uhhh

[17:12] <discord6> <RaycatWhoDat> What do you guys use Perl 6 for outside of Rakudo?

[17:13] <jmerelo> RaycatWhoDat: to generate Perl6 documentation. 

[17:13] <jmerelo> RaycatWhoDat: and to run evolutionary algorithms

[17:13] <jmerelo> RaycatWhoDat and pretty much everything. 

[17:14] <discord6> <RaycatWhoDat> You get to use it as your primary language?

[17:15] <discord6> <RaycatWhoDat> That sounds great.

[17:16] <sena_kun> RaycatWhoDat, serving web sites, scripting, parsers && parsing generating

[17:16] <tobs> I use it a lot for oneliners, my work revolving around text files

[17:16] <discord6> <RaycatWhoDat> That's really cool.

[17:17] *** molaf joined
[17:18] <tobs> it doesn't sound spectacular but it feels spectacular with all the builtins :)

[17:18] <jmerelo> tobs: documentation generation does not seem to have a lot of glamour, also. But It's a few thousand lines of code, and clever use of the fact that inline documentation is parsed by Perl 6

[17:18] <discord6> <RaycatWhoDat> I wish I knew more about this. As it stands, I adore this language but I struggle to replace the other languages I use.

[17:19] <jmerelo> RaycatWhoDat you're very welcome to ask around; we're here to help

[17:19] <discord6> <RaycatWhoDat> Much appreciated, jmer

[17:19] <discord6> <RaycatWhoDat> jmerelo*

[17:19] <discord6> <RaycatWhoDat> (TAB completion doesn't work on Discord, you nerd)

[17:20] <jmerelo> RaycatWhoDat :-)

[17:23] <discord6> <RaycatWhoDat> I guess, the two biggest issues I'm facing are 1) the lack of a specific problem this language solves and 2) speed/performance. Regarding 1, right now, P6 just scratches that weird part of my brain that lets me get concise as possible without ruining readability. But I can't pitch that to a tech lead successfully. The second issue I'm sure everyone is aware of. I also know that it's not an easy ask and I'm being selfish for asking for i

[17:23] <discord6> without contributing in any way. But it is a blocker for me on an enterprise scale.

[17:24] <discord6> <RaycatWhoDat> That being said, if the first issue could be resolved in my head, I could use this personally and the job be damned.

[17:26] <tbrowder> RayCatWhoDat: what are langs do you use?

[17:26] <tbrowder> s/are/other/

[17:26] *** Sgeo__ joined
[17:27] <discord6> <RaycatWhoDat> JavaScript is my primary, Lisp my secondary. I'm partial to Haxe, D, and of course, Perl 6.

[17:27] <discord6> <RaycatWhoDat> (I would love to reduce that to three.)

[17:29] <sena_kun> RaycatWhoDat, have you seen http://jnthn.net/papers/2019-perlcon-performance.pdf ? The performance issue is gradually becoming a myth, so I am sure it shouldn't be a bother unless you need it FAST, and if you do, I don't see why not choose e.g. C instead.

[17:30] *** Sgeo_ left
[17:30] <sena_kun> RaycatWhoDat, as for "where to apply the language" - well, as other languages you named, it is a general-purpose language, as in, you can use it for whatever you want / need, just as other languages.

[17:33] <discord6> <RaycatWhoDat> Those are fair points. As I expected, the problem is me for not just using the language. 😛

[17:33] <sena_kun> RaycatWhoDat you can also watch https://www.youtube.com/watch?v=hGyzsviI48M to see how Perl 6 delivers on the enterprise scale and why&&where it shines. :)

[17:34] <tobs> sena_kun: did the escape analysis land in a release yet?

[17:35] *** domidumont joined
[17:35] *** domidumont left
[17:35] <sena_kun> if you don't like the tool, that's fine, but if you do, "blockers" may be discovered as more or less just myths.

[17:36] <sena_kun> tobs, not yet

[17:36] <tobs> sena_kun: I'm very much looking forward to the boosts then!

[17:40] <sena_kun> tobs, well, in the (kind of famous) complex numbers benchmark rakudo is faster than cpython without PEA, and with PEA it is times faster. I mean, there is indeed a lot of hard work ahead, but I feel gratitude to mountains of work already done

[18:01] *** MilkmanDan left
[18:02] *** MilkmanDan joined
[18:06] *** aborazmeh joined
[18:06] *** aborazmeh left
[18:06] *** aborazmeh joined
[18:14] <discord6> <RaycatWhoDat> Thanks for the links, sena_kun

[18:25] *** no-n left
[18:26] *** PotatoGim joined
[18:27] *** no-n joined
[18:28] *** timeless joined
[18:31] *** kip joined
[18:33] *** zostay joined
[18:49] *** veesh joined
[18:50] *** kamog left
[18:50] *** jmerelo left
[18:52] *** afresh1 joined
[19:03] *** netrino joined
[19:09] *** rainmanjam left
[19:15] *** _jrjsmrtn joined
[19:16] *** __jrjsmrtn__ left
[19:26] *** aborazmeh left
[19:31] *** aborazmeh joined
[19:31] *** aborazmeh left
[19:31] *** aborazmeh joined
[19:33] *** Black_Ribbon joined
[19:39] *** aborazmeh left
[19:44] *** aborazmeh joined
[19:44] *** aborazmeh left
[19:44] *** aborazmeh joined
[19:51] *** rainmanjam joined
[19:53] <SmokeMachine> AlexDaniel: Sorry, but where's that script?

[19:55] *** sena_kun left
[19:56] *** aborazmeh left
[20:06] *** aborazmeh joined
[20:06] *** aborazmeh left
[20:06] *** aborazmeh joined
[20:19] *** rainmanjam left
[20:24] <discord6> <Aearnus> @RaycatWhoDat I use it as a calculator for my linear algebra class

[20:24] <discord6> <Aearnus> I used to use J but Perl 6 is nicer

[20:24] <discord6> <Aearnus> it's an esoteric use case but I like it

[20:29] <AlexDaniel> SmokeMachine: which script?

[20:29] <SmokeMachine> AlexDaniel: to edit the issues

[20:30] <AlexDaniel> SmokeMachine: https://github.com/perl6/ecosystem-unbitrot/blob/master/scripts/edit-issues.p6

[20:31] <SmokeMachine> AlexDaniel: Thanks!

[20:31] <AlexDaniel> SmokeMachine: example usage: ./edit-issues.p6 "I know what I'm doing" PUT-YOUR-GITHUB-ACCESS-TOKEN-HERE '$body .= subst: ‘priveleges’, ‘privileges’'

[20:31] <AlexDaniel> ah, it's in the script too :)

[20:35] *** [particle]1 joined
[20:38] *** [particle] left
[20:40] *** [particle]1 left
[20:42] *** [particle] joined
[21:01] *** aborazmeh left
[21:05] *** Xliff joined
[21:06] <Xliff> \o

[21:06] <Xliff> m: my %a =%= %( 1 => 2 );

[21:06] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «»

[21:06] <Xliff> m: my %a =%= %( 1 => 2 ); %a.gist.say

[21:06] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «{1 => 2}␤»

[21:06] <Xliff> m: my %a = %( 1 => 2 ); %a.gist.say

[21:06] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «{1 => 2}␤»

[21:07] <Xliff> ^^ Can anyone tell me what the difference is?

[21:12] *** [Coke] joined
[21:12] <[Coke]> new deps in doc repo aren't in META6.json, and when I try to install them, there are failures in Pod::To::Cached, which is required by Documentabled.

[21:12] <[Coke]> s/d//

[21:13] <[Coke]> building rakudo latest to ensure it's not my month old rakudo causing the issue.

[21:15] *** aborazmeh joined
[21:15] *** aborazmeh left
[21:15] *** aborazmeh joined
[21:20] <AlexDaniel> %z; my %a = %z = %( 1 => 2 ); %a.gist.say

[21:21] <AlexDaniel> my %z; my %a = %z = %( 1 => 2 ); %a.gist.say

[21:21] <evalable6> AlexDaniel, rakudo-moar 579ac66e8: OUTPUT: «{1 => 2}␤»

[21:21] <AlexDaniel> Xliff: difference between what?

[21:21] <AlexDaniel> Xliff: you're just assigning to % for no good reason

[21:21] *** jaldhar left
[21:21] *** jaldhar joined
[21:22] <Xliff> AlexDaniel: It's done here...https://modules.perl6.org/dist/Color::Names:cpan:HOLLI/lib/Color/Names/CSS3.pm6#L3

[21:22] <Xliff> Was wondering why.

[21:23] <AlexDaniel> O_o

[21:24] *** [particle] left
[21:24] *** [particle] joined
[21:45] *** aborazmeh left
[21:58] *** patrickb left
[22:08] <Xliff> AlexDaniel: Yeah. That was my response, too.

[22:10] <tobs> m: multi infix:<=%=> ($lval is rw, $rval) { $lval = $rval }; my %a =%= %(1 => 2); %a.gist.say  # better? :P

[22:10] <evalable6> tobs, rakudo-moar 579ac66e8: OUTPUT: «{1 => 2}␤»

[22:16] *** netrino left
[22:27] *** DarthGandalf joined
[22:27] *** Matthew[m] joined
[22:27] <AlexDaniel> tobs: it doesn't really work

[22:27] <AlexDaniel> m: multi infix:<=%=> ($lval is rw, $rval) { $lval = [=>] (^100).pick xx 2 }; (my $a) =%= %(1 => 2); $a.gist.say

[22:27] <evalable6> AlexDaniel, rakudo-moar 579ac66e8: OUTPUT: «4 => 99␤»

[22:29] <Xliff> m: say [=>] (^100).pick xx 2

[22:29] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «71 => 4␤»

[22:35] *** kurahaupo left
[22:35] *** [particle]1 joined
[22:37] *** [particle] left
[22:44] *** charsbar joined
[22:48] *** Sgeo_ joined
[22:50] *** matiaslina joined
[22:50] *** AlexDaniel` joined
[22:51] *** Sgeo__ left
[22:52] *** chloekek left
[22:56] *** kurahaupo joined
[23:04] * [Coke] opens a ticket in perl6/doc, Documentable, and Pod::To::Cached (note that I cannot build the docs with the new system)

[23:05] *** dolmen joined
[23:06] *** kurahaupo left
[23:24] <Xliff> [Coke]: What problems are you having?

[23:31] *** lucasb left
[23:33] *** mowcat joined
[23:33] *** mowcat left
[23:33] *** pecastro left
[23:43] *** dolmen left
[23:47] *** riatre joined
