[00:05] *** wbn left
[00:05] *** wbn_ joined
[00:24] *** aborazmeh left
[00:43] *** w_richard_w joined
[00:52] <AlexDaniel> weekly: https://perlweeklychallenge.org/blog/philippe-bruhat-challenge-001/

[00:52] <notable6> AlexDaniel, Noted!

[00:54] <ugexe> first challenge didnt print the number of Es

[00:54] <AlexDaniel> actually, now that I've read the post… I'm no longer sure what it is about

[00:55] <AlexDaniel> ugexe: it actually does?

[00:55] <ugexe> heh my eyes melded the $ and 5

[00:58] <lookatme_q> m: 

[00:58] <evalable6> lookatme_q, rakudo-moar 7aa72ce09: OUTPUT: «»

[00:58] <lookatme_q> m: $_ = 'Perl Weekly Challenge'; say +s:g/e/E/; .say;

[00:58] <evalable6> lookatme_q, rakudo-moar 7aa72ce09: OUTPUT: «5␤PErl WEEkly ChallEngE␤»

[01:09] <AlexDaniel> that's sorta what I sent

[01:09] <AlexDaniel> m: $_ = 'Perl Weekly Challenge'; say +t/e/E/; .say;

[01:09] <evalable6> AlexDaniel, rakudo-moar 7aa72ce09: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/bLcBG25y8U␤Missing…»

[01:09] <evalable6> AlexDaniel, Full output: https://gist.github.com/38f63d1d3f1aba68f7e834a26a0b38b8

[01:09] <AlexDaniel> m: $_ = 'Perl Weekly Challenge'; say +tr/e/E/; .say;

[01:09] <evalable6> AlexDaniel, rakudo-moar 7aa72ce09: OUTPUT: «5␤PErl WEEkly ChallEngE␤»

[01:10] <AlexDaniel> it's sorta different because you get StrDistance back

[01:12] <ugexe> anyone think of a polyglot way to do map between perl 5/6? that damn comma...

[01:15] <ugexe> i was hoping something like `sub mapp(&;@_) { }` but i would at the very least need &; to be &x;, which breaks it

[01:17] <AlexDaniel> what about

[01:17] <AlexDaniel> perl -E 'sub foo($_) { $_ + 1 }; say join ",", map &foo, (2,5,8)'

[01:17] <AlexDaniel> this works with `perl6 -e` too

[01:18] <ugexe> hmm, why can you say `map &foo,` but not `map { ... },`

[01:18] <AlexDaniel> map BLOCK LIST

[01:18] <AlexDaniel> map EXPR,LIST

[01:18] <Juerd> ugexe: Because it uses map EXPR instead of map BLOCK

[01:19] <ugexe> ah

[01:19] <Juerd> &foo is the old Perl 5 function call syntax that passes @_ implicitly

[01:20] <Juerd> &foo is like foo(@_). It's nasty.

[01:20] <AlexDaniel> I'm surprised sub foo($_) works

[01:21] <Juerd> AlexDaniel: Perl 5 ignores the _

[01:21] <Juerd> And $_ is a global

[01:21] <AlexDaniel> Juerd: yes but you can write `sub foo($x, $y)` and I guess it does something, right?

[01:22] <Juerd> Prototypes ignore invalid characters

[01:22] <AlexDaniel> oh… right… obviously…

[01:23] <Juerd> Oh, it doesn't (anymore?)

[01:23] <AlexDaniel> v5.28.1 doesn't complain

[01:24] <Juerd> Mine does.

[01:24] <Juerd> 1;0 juerd@cxien:~$ perl -e'sub foo($x, $y) { die $x } foo(4, 5)'

[01:24] <Juerd> Malformed prototype for main::foo: $x, $y at -e line 1.

[01:24] <AlexDaniel> yeah but only if you call it like that

[01:25] <AlexDaniel> `sub foo($x, $y) { }` by itself is legal

[01:25] <AlexDaniel> and so is

[01:25] <AlexDaniel> perl -E 'sub foo($x, $y) { $_ + 1 }; say join ",", map &foo, (2,5,8)'

[01:25] <Juerd> Isn't that just because prototype checking is runtime?

[01:25] <Juerd> & doen't do prototype checking

[01:25] <Juerd> s/doen/doesn/

[01:26] <AlexDaniel> heh… I'm happy perl 6 exists… :)

[01:26] <Juerd> 1;0 juerd@cxien:~$ perl -e'sub three($$$) { die } &three("one")'

[01:26] <Juerd> Died at -e line 1.

[01:26] <AlexDaniel> someone should create a polyglot code golf website

[01:29] <Xliff> You're joking..right? It is that time of year. :P

[01:30] *** leont left
[01:38] <Xliff> AlexDaniel: Mmm... Now why am I thinking about stones?! :P

[01:38] <Juerd> ugexe: map &{ sub ($_) { $_ + 1 } }.(), 2, 4, 6

[01:39] <ugexe> Juerd: nice, thats even better

[01:40] <Juerd> Note that you do end up with strings in Perl 5.

[01:46] *** MidCheck left
[01:52] <AlexDaniel> Xliff: stones?

[01:53] <AlexDaniel> like the rolling ones?

[01:59] <AlexDaniel> Xliff: but, not really, https://code-golf.io/ was a lot of fun for me but it got boring fast

[01:59] <AlexDaniel> so having to golf in two languages at the same time can add a little bit of spice

[02:06] <Xliff> AlexDaniel: RosettaStone

[02:07] <Xliff> It's not golfing, but you can definitely get tips.

[02:11] <AlexDaniel> April 1st… today I can finally submit a bunch of stupid tickets :)

[02:12] *** rindolf left
[02:12] *** aindilis` left
[02:13] <Xliff>  LOL!

[02:13] <Xliff> Not quite yet here on the East Coast USA

[02:13] *** aindilis joined
[02:13] <Xliff> StackOverflow got a head start.

[02:20] *** aindilis left
[02:21] *** aindilis joined
[02:29] *** Xliff left
[02:37] *** benjikun joined
[03:04] *** kurahaupo_ left
[03:05] *** kurahaupo joined
[03:19] *** MidCheck joined
[03:53] *** kst left
[03:59] *** Penglin joined
[04:00] *** Penglin left
[04:14] *** AlexDani` joined
[04:18] *** AlexDaniel left
[04:51] *** curan joined
[05:15] *** cpan-p6 left
[05:16] *** cpan-p6 joined
[05:16] *** cpan-p6 left
[05:16] *** cpan-p6 joined
[05:19] *** mowcat left
[05:21] *** jmerelo joined
[05:29] *** MidCheck left
[05:29] *** kst joined
[05:51] <Geth> ¦ doc/master: 4 commits pushed by (JJ Merelo)++

[05:51] <Geth> ¦ doc/master: 149d8506fa | Adds declaration of junctions, refs #2703

[05:51] <Geth> ¦ doc/master: eb5de2b552 | Adds example and reflow #2703

[05:51] <Geth> ¦ doc/master: 96546a4c58 | Adds another example and clarifies #2703

[05:51] <Geth> ¦ doc/master: b95e6b0267 | Documents junction.new refs #2703

[05:51] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/a0ab6a129e65...b95e6b0267a2

[06:00] *** Black_Ribbon left
[06:01] <Geth> ¦ doc: 10ff8d0ea8 | (JJ Merelo)++ | doc/Type/Junction.pod6

[06:01] <Geth> ¦ doc: Documents junction.Bool refs #2703

[06:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/10ff8d0ea8

[06:01] <synopsebot_> Link: https://doc.perl6.org/type/Junction

[06:09] *** domidumont joined
[06:11] *** zacts joined
[06:11] *** zacts left
[06:12] *** ravenousmoose joined
[06:19] *** kurahaupo_ joined
[06:23] *** kurahaupo left
[06:39] *** reach_satori left
[06:40] *** jmerelo left
[06:57] *** robertle joined
[07:02] *** pistacchio left
[07:02] *** pistacchio joined
[07:07] *** heince joined
[07:09] *** [Sno] left
[07:10] *** imcsk8 left
[07:12] <heince> what is the module recommendation to do http client (get,post,put,delete) now in term of performance ?

[07:18] *** aborazmeh joined
[07:18] *** aborazmeh left
[07:18] *** aborazmeh joined
[07:19] *** netrino joined
[07:23] *** imcsk8 joined
[07:25] <lookatme_q> heince, you can take a look at Cro

[07:28] <heince> is it included in rakudo star ?

[07:29] *** kurahaupo_ left
[07:29] <lookatme_q> IDK, you can install it by yourself

[07:32] *** patrickb joined
[07:32] <heince> ok thanks, testing it

[07:38] *** zakharyas joined
[07:40] *** stux|RC-only left
[07:55] *** aborazmeh left
[07:57] *** dakkar joined
[08:01] *** pistacchio left
[08:02] *** pistacchio joined
[08:08] *** ravenousmoose_ joined
[08:08] *** ravenousmoose left
[08:11] *** pistacchio left
[08:11] *** reach_satori joined
[08:11] *** pistacchio joined
[08:18] *** khisanth_ left
[08:26] *** reach_satori left
[08:27] *** ufobat joined
[08:28] *** w_richard_w left
[08:28] *** w_richard_w joined
[08:28] *** netrino left
[08:29] *** sena_kun joined
[08:33] *** AlexDani` left
[08:34] *** AlexDani` joined
[08:35] *** rindolf joined
[08:36] *** khisanth_ joined
[08:41] *** kurahaupo joined
[08:42] *** ravenousmoose_ left
[08:43] *** reach_satori joined
[08:45] *** rindolf left
[08:55] *** reach_satori left
[08:58] *** irco left
[08:58] *** rindolf joined
[09:00] *** ravenousmoose_ joined
[09:02] *** MidCheck joined
[09:03] *** heince left
[09:04] *** reach_satori joined
[09:05] *** rindolf left
[09:06] *** cpan-p6 left
[09:06] <lizmat> weekly: https://perl6.eu/gather-take.html

[09:06] <notable6> lizmat, Noted!

[09:06] *** cpan-p6 joined
[09:06] *** cpan-p6 left
[09:06] *** cpan-p6 joined
[09:09] *** rindolf joined
[09:10] *** w_richard_w left
[09:10] *** reach_satori left
[09:11] *** reach_satori joined
[09:15] *** reach_satori left
[09:17] *** reach_satori joined
[09:21] *** reach_satori left
[09:23] *** leont joined
[09:24] *** reach_satori joined
[09:27] *** abraxxa joined
[09:28] *** reach_satori left
[09:29] *** domidumont left
[09:31] *** rindolf left
[09:45] *** rindolf joined
[09:47] *** ravenousmoose_ left
[09:48] *** random_yanek left
[09:49] <tyil> is there a more perly way to write `for 1,3,4,5,6,7 { say $_ }`? I want to loop through a list of numbers, but skip a given number (in this case, 2)

[09:50] <sena_kun> `next if $_ ==`?

[09:50] <sena_kun> m: for (1..8) { next if $_ == 2; $_.say }

[09:50] <evalable6> sena_kun, rakudo-moar 1aae63a65: OUTPUT: «1␤3␤4␤5␤6␤7␤8␤»

[09:50] *** ravenousmoose joined
[09:51] <sena_kun> m: for (1..8) { next when 2; $_.say }

[09:51] <evalable6> sena_kun, rakudo-moar 1aae63a65: OUTPUT: «1␤3␤4␤5␤6␤7␤8␤»

[09:51] <tyil> I can add a couple next if ... clauses, I was hoping to be able to make the list itself represent the iterations of the loop

[09:51] <tyil> instead of handling it in the for loop's body

[09:52] <sena_kun> m: for (1..8).grep({ $_ != 2 }) { $_.say }

[09:52] <evalable6> sena_kun, rakudo-moar 1aae63a65: OUTPUT: «1␤3␤4␤5␤6␤7␤8␤»

[09:53] <lizmat> m: .say for (1..7).grep( * != 2 )

[09:53] <evalable6> lizmat, rakudo-moar 1aae63a65: OUTPUT: «1␤3␤4␤5␤6␤7␤»

[09:53] <sena_kun> benchable6, compare HEAD for (1..8) { next if $_ == 2; $_.say } ||| for (1..8).grep({ $_ != 2 }) { $_.say }

[09:53] <benchable6> sena_kun, starting to benchmark the 1 given commit

[09:53] <benchable6> sena_kun, https://gist.github.com/03465d31b9122609cc723e3078fc4fc4

[09:57] <sena_kun> for 100_000 iterations, the second way is a bit slower, but is not a disaster, so grepping may be an option.

[09:59] *** random_yanek joined
[10:04] *** scimon joined
[10:04] <lizmat> I think that is because the "for 1..8 {" gets highly optimized, whereas the "(1..8).grep" case is not, but is more general and not depending on the values being numbers

[10:07] <sena_kun> well, it is understandable that having a simple jmp for `next` on a branch would be cheaper than streaming values, just was curious how much and it isn't too much.

[10:07] <sena_kun> so pretty nice job was done in this area. :)

[10:09] <timotimo>  does anybody want to see how much gain there could be from building a "full-featured" iterator into resultsets in DBIish? so that push-until-lazy and push-all and such would be a very tight loop instead of calling pull-one over and over?

[10:12] *** kurahaupo left
[10:12] <sena_kun> timotimo, it depends on what "want to see" implies. ;)

[10:12] *** kurahaupo joined
[10:14] *** domidumont joined
[10:23] *** patrickb left
[10:27] *** AlexDani` is now known as AlexDaniel

[10:27] *** AlexDaniel left
[10:27] *** AlexDaniel joined
[10:29] *** mowcat joined
[10:29] <AlexDaniel> weekly: “Perl 5 and Perl 6 are too dissimilar” https://github.com/JRaspass/code-golf/issues/78#issuecomment-478498363

[10:29] <notable6> AlexDaniel, Noted!

[10:29] *** mowcat left
[10:30] *** mowcat joined
[10:31] <lizmat> notable6: weekly

[10:31] <notable6> lizmat, 10 notes: https://gist.github.com/b24bb7d5c7497900a774208dcaa3d93b

[10:41] *** patrickb joined
[10:46] *** reach_satori joined
[10:54] *** reach_satori left
[11:08] *** pmurias joined
[11:09] <pmurias> if I want to keep a known revision of roast that rakudo.js is known to pass is a submodule in my run-roast-in-chrome repo a good choice?

[11:12] <timotimo> sena_kun: implement it and benchmark i guess %)

[11:16] *** reach_satori joined
[11:29] *** mnoop is now known as mniip

[11:31] *** zakharyas left
[11:32] *** MidCheck left
[11:45] *** discord61 joined
[11:45] *** discord61 left
[11:45] *** discord61 joined
[11:46] *** discord6 left
[11:47] *** discord61 is now known as discord6

[11:55] *** domidumont left
[11:56] *** domidumont joined
[11:58] *** kurahaupo left
[11:58] *** kurahaupo_ joined
[11:58] *** kurahaupo_ left
[11:58] *** kurahaupo joined
[12:00] *** llfourn left
[12:20] *** Manifest0 left
[12:25] *** Manifest0 joined
[12:32] *** llfourn joined
[12:33] <patrickb> There has been this idea of a list of domain experts which helps with change proposals to Perl 6. Is this idea still a thing?

[12:35] <moritz> yes, see https://github.com/perl6/problem-solving/pull/2

[12:35] <sena_kun> https://github.com/perl6/problem-solving <- this?

[12:35] <sena_kun> oops, too slow

[12:35] *** reach_satori left
[12:37] *** llfourn left
[12:40] <lizmat> yet another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/04/01/2019-13-no-jokes-today/

[12:53] <tbrowder> ++lizmat

[12:54] <tbrowder> i just tried "zef upgrade DBIish" and got a moarvm core dump, rakudo 2019.03

[13:00] *** ravenousmoose left
[13:03] *** zakharyas joined
[13:06] <tbrowder> g'day all

[13:12] <tbrowder> i'm trying to use an END block to clean up db resources. does END run after an exit statement or is it ignored. the docs are a bit hazy to me in that regard when it says "late as possible".

[13:15] <tbrowder> in the docs the LEAVE block is specifically mentioned as being ignored after an exit statement, but no mention of END.

[13:30] <hahainternet> no idea but might be worth testing to see

[13:30] <hahainternet> i have my own question too, anyone written a graphicsmagick/imagemagick module worth looking at?

[13:32] <lizmat> m: END say "goodbye"; exit

[13:32] <evalable6> lizmat, rakudo-moar 1aae63a65: OUTPUT: «goodbye␤»

[13:32] *** patrickb left
[13:32] <lizmat> the exit will *first* run all of the END blocks

[13:33] *** skids joined
[13:33] <lizmat> m: exit; END say "goodbye"

[13:33] <evalable6> lizmat, rakudo-moar 1aae63a65: OUTPUT: «goodbye␤»

[13:33] <lizmat> m: exit; END say "goodbye"; LEAVE say "bye now"

[13:33] <evalable6> lizmat, rakudo-moar 1aae63a65: OUTPUT: «goodbye␤»

[13:34] <lizmat> interestin

[13:34] <lizmat> m: END say "goodbye"; LEAVE say "bye now"

[13:34] <evalable6> lizmat, rakudo-moar 1aae63a65: OUTPUT: «bye now␤goodbye␤»

[13:34] <lizmat> guess that makes sense, considering that "exit" is just a sub being called with magic properties

[13:36] <timotimo> m: my &*EXIT = -> | { say "haha" }; exit 1; say "fooled you"

[13:36] <evalable6> timotimo, rakudo-moar 1aae63a65: OUTPUT: «haha␤fooled you␤»

[13:37] <AlexDaniel> hahainternet: yeah there's https://modules.perl6.org/dist/MagickWand:cpan:AZAWAWI but it's incomplete

[13:38] <hahainternet> AlexDaniel: cheers, just need to generate a simple focus target image

[13:38] <hahainternet> so i thought i'd try and write a succinct p6 version

[13:38] *** kurahaupo left
[13:39] *** llfourn joined
[13:39] *** kurahaupo joined
[13:44] *** llfourn left
[13:59] *** curan left
[14:00] <tbrowder> ref my end problem: solved! duh,  ... the END was placed after a pod =finish directive!  ;-(

[14:10] <ugexe> m: print("$_\n") for map &{ sub ($_) { /^0[0123456789]+/ and (0+$_) or $_  } }.(), (1,2, "01", "0002", "03030", "a", "-001");

[14:10] <evalable6> ugexe, rakudo-moar 1aae63a65: OUTPUT: «1␤2␤01␤0002␤03030␤a␤-001␤»

[14:10] <ugexe> darn

[14:10] *** domidumont1 joined
[14:11] *** hasuwiz joined
[14:11] <hasuwiz> Good evening, #Perl6

[14:12] <eseyman> Good evening to you, hasuwiz 

[14:13] *** domidumont left
[14:13] <ugexe> m: print("$_\n") for map &{ sub ($_) { /^0(0|1|2|3|4|5|6|7|8|9)+/ && (0+$_) || $_  } }.(), (1,2,"01","0002", "03030", "a", "-001");

[14:13] <evalable6> ugexe, rakudo-moar 1aae63a65: OUTPUT: «1␤2␤1␤2␤3030␤a␤-001␤»

[14:15] <Geth> ¦ DBIish: 8d1749dd23 | (Tom Browder)++ (committed using GitHub Web editor) | README.pod

[14:15] <Geth> ¦ DBIish: tweak grammar

[14:15] <Geth> ¦ DBIish: review: https://github.com/perl6/DBIish/commit/8d1749dd23

[14:25] *** Bob- left
[14:30] *** bobby joined
[14:34] *** lucasb joined
[14:39] *** ravenousmoose joined
[14:44] *** ravenousmoose left
[14:45] *** llfourn joined
[14:49] *** vrurg_ joined
[14:50] *** vrurg left
[14:50] *** vrurg_ is now known as vrurg

[14:50] *** llfourn left
[14:53] *** Sgeo__ left
[15:00] *** llfourn joined
[15:01] *** Manifest0 left
[15:05] *** llfourn left
[15:06] *** Manifest0 joined
[15:06] <tbrowder> getting test failure for DBIish with unique constraint, but it installs anyway. i need that capability. i'm using deb 9 which uses sqlite3 version 3.16. it looks like LOTS of bug fixes to sqlite which is at version 3.27.2 now.

[15:06] *** rindolf left
[15:07] <tbrowder> any ideas other than compiling sqlite from source?

[15:11] *** rindolf joined
[15:15] *** jmerelo joined
[15:19] <sena_kun> with debian you _possibly_ can possibly get updates from custom repo... maybe a testing branch will do?

[15:19] <sena_kun> though from my experience with testing it takes some work.

[15:21] *** sena_kun left
[15:21] *** sena_kun joined
[15:22] <sena_kun> tbrowder, https://packages.debian.org/search?keywords=sqlite3 <- I see 3.27.2-1 available in stretch-backports.

[15:24] *** robertle left
[15:25] <tbrowder>  sena_kun: thanks!

[15:26] <tbrowder> when using backports, does that cause problems when buster is release?

[15:27] <tbrowder> *released%.

[15:30] <sena_kun> I am not a debian user, but I don't think so. I mean, those are backports... It is not like you are changing the release.

[15:30] <AlexDaniel> yeah, it should be fine

[15:37] *** llfourn joined
[15:41] *** llfourn left
[15:42] *** pmurias left
[15:56] *** hasuwiz left
[15:56] *** hasuwiz joined
[15:59] *** zakharyas left
[16:19] *** Manifest0 left
[16:21] *** MidCheck joined
[16:25] *** Manifest0 joined
[16:32] *** scimon left
[16:35] *** pistacchio left
[16:35] *** pistacchio joined
[16:36] *** pistacchio left
[16:36] *** pistacchio joined
[16:37] *** domidumont joined
[16:40] *** dakkar left
[16:40] *** domidumont1 left
[16:41] *** pistacchio left
[16:46] *** upline is now known as grumble

[16:56] *** llfourn joined
[16:58] *** jmerelo left
[17:11] *** robertle joined
[17:16] *** amosbird joined
[17:18] *** mowcat left
[17:23] <amosbird> hi, why is perl6  20 years later?

[17:23] <amosbird> heh https://github.com/perl7/perl7

[17:25] <tadzik> why is perl 6 what 20 years later?

[17:25] <AlexDaniel> amosbird: because we didn't invent time travel yet?

[17:25] *** domidumont left
[17:25] <AlexDaniel> or maybe we did, and sent it into the future…

[17:29] <amosbird> oops, I mean 20 years late

[17:29] <amosbird> perl 5 is 94

[17:29] <amosbird> perl 3 4 5   92 93 94

[17:30] <lizmat> amosbird: why does it matter and why do you want to know ?

[17:35] *** pistacchio joined
[17:36] <amosbird> ok, just found the answer that I'm looking for  https://www.quora.com/Perl-programming-language-Why-did-Larry-Wall-finally-ship-Perl-6-and-does-anybody-care

[17:38] *** reach_satori joined
[17:38] <amosbird> "Perl 6 is expected to facilitate creation of domain-specific languages by making it easier to create and parse grammars. If it delivers on this promise, it will be one valuable feature that helps distinguish Perl 6 from the crowd." This actually attracts me

[17:40] <amosbird> and this answers my question  "Larry is releasing Perl 6, because 15 years ago he decided to re-write his creation from the ground up. It was a long journey, and it took them to places he didn't imagine and the quest was different in the completion than in the onset. As for the validity of why he did this, that's a dumb question. We don't often do things just for validity, most of the time we are just

[17:40] <amosbird> scratching an intellectual itch, which he has done. I am pretty sure that some people are going to discuss it."

[17:42] *** cpan-p6 left
[17:43] *** cpan-p6 joined
[17:43] *** cpan-p6 left
[17:43] *** cpan-p6 joined
[17:43] *** theangryepicbana joined
[17:44] <theangryepicbana> I was readong the Perl 6 Weekly and noticed that my new module wasn't listed

[17:44] <theangryepicbana> *reading

[17:47] *** [Sno] joined
[17:47] *** ctilmes joined
[17:47] <lizmat> theangryepicbana:  :-(   I forgot to check the ecosystem repo

[17:50] *** pecastro joined
[17:50] <theangryepicbana> ok

[17:51] <theangryepicbana> next week I guess

[17:53] <lizmat> should be there now

[17:53] <lizmat> please reload the page

[17:54] <lizmat> sorry for missing it, my bad

[17:54] <theangryepicbana> no problem

[17:54] <theangryepicbana> I should work in it more today

[17:55] <lizmat> it's just much easier for me if a distribution is on CPAN, specifically for updates

[17:55] <theangryepicbana> *on

[17:55] <theangryepicbana> ah

[17:55] <lizmat> updates to CPAN are automatically tweeted: https://twitter.com/perl6_cpan_new

[17:55] <theangryepicbana> I don't use CPAN as much as modules.perl6

[17:56] <sena_kun> (my two modules latest were left out too, but it was some months ago already, I believe)

[17:56] <lizmat> :-(

[17:56] <lizmat> please let me know if you miss something: if nobody tells me I missed something, how am I to know ?

[17:56] <theangryepicbana> maybe make a bot that also posts additions to modules.perl6

[17:57] <lizmat> and how would the bot know>

[17:57] <lizmat> ?

[17:57] <theangryepicbana> well, how does the current bot know that modules are added to CPAN?

[17:57] <sena_kun> sure, I am usually pointing out these things, just somehow was in no use module that time.

[17:57] <lizmat> check every update to every repo that is in the ecosystem ?

[17:57] <theangryepicbana> oh

[17:58] <lizmat> the PAUSE mechanism has a callback mechanism, I believe...

[17:58] <lizmat> https://github.com/skaji/perl6-cpan-new has the code

[17:58] <theangryepicbana> lemme look

[17:59] <theangryepicbana> nvm I can't read go

[18:01] <theangryepicbana> maybe have it check for updates in https://github.com/perl6/ecosystem?

[18:01] *** natrys joined
[18:02] <amosbird> is this https://github.com/rakudo/rakudo the official perl6 compiler?

[18:02] <lizmat> amosbird: it is a compiler that passes the most tests that make up Perl 6

[18:04] <amosbird> so perl6 becomes test defined instead of implementation defined

[18:04] *** telex left
[18:04] <sena_kun> yes

[18:06] *** telex joined
[18:07] *** zachk joined
[18:10] <amosbird> are there similar projects like https://github.com/numba/numba  in perl6?

[18:13] <sena_kun> not ones I know about. there are some cool things built in, like 0.1 + 0.2 gives you what it has too, also some math and stat-related libraries, but nothing like NumPy yet. And performance benchmarks can sometimes be sad, so if you want something like Julia, R or whatever to _crunch_ numbers fast, that might be not it.

[18:13] <sena_kun> s/has too/has to/

[18:15] <amosbird> ok, so what can I use perl6 for currently (that it's actually good at right now)

[18:16] <sena_kun> amosbird, automating scripts, web, anything with concurrency nicely packed in, compilers...

[18:16] <theangryepicbana> amosbird: have you never heard of Inline::Python

[18:22] *** sauvin left
[18:22] *** theangryepicbana left
[18:28] *** Manifest0 left
[18:34] *** Manifest0 joined
[18:38] <Geth> ¦ doc: 6dd090ea59 | Coke++ | doc/Type/Junction.pod6

[18:38] <Geth> ¦ doc: avoid typo, reword slightly.

[18:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6dd090ea59

[18:38] <Geth> ¦ doc: 1ef04d824d | Coke++ | xt/code.pws

[18:38] <Geth> ¦ doc: word used in code

[18:38] <synopsebot_> Link: https://doc.perl6.org/type/Junction

[18:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1ef04d824d

[18:38] <Geth> ¦ doc: 36ee82e632 | Coke++ | doc/Type/Junction.pod6

[18:38] <Geth> ¦ doc: rephrase to avoid neologism

[18:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/36ee82e632

[19:03] *** netrino joined
[19:06] *** awwaiid left
[19:08] *** ExtraCrispy left
[19:10] *** ExtraCrispy joined
[19:11] <timotimo> once moarvm's jit learns about float ops and registers, we'll likely get better "raw number crunching" performance in some cases. that's the hope at least :)

[19:17] *** cpan-p6 left
[19:18] *** cpan-p6 joined
[19:18] *** cpan-p6 left
[19:18] *** cpan-p6 joined
[19:18] <ctilmes> Would be nice to have IO of multi-dimensional arrays of packed native integers and floats (like Perl5 PDLs)

[19:18] <timotimo> we do have .read-float32 and .read-float64 now for the buf class

[19:18] <timotimo> that gets you pretty far already

[19:19] <timotimo> the heap snapshot analyzer will, with its new format, grab a stream of packed integers from a file that goes through zstd and pull them into native arrays

[19:19] <ctilmes> I saw some of that coming in -- I haven't tried it yet -- maybe that will meet my needs -- I set aside a task that needed it a while ago

[19:19] <timotimo> i've got kind of an interest to have that be fast ;)

[19:20] *** pistacchio left
[19:20] *** pistacchio joined
[19:20] <timotimo> it actually does not yet beat the implementation i had before, but that's mostly because the parameters didn't match up quite

[19:21] <timotimo> read-uint32 and friends take an offset, whereas my implementation shifted off the beginning of the array so it didn't have to carry an index around (but now the version with .read-uint32 had to shift the values off the beginning as well)

[19:21] <timotimo> and i more or less cheated with my implementation by using nqp ops directly, which let me get away with zero method or sub calls :)

[19:31] *** stux|RC-only joined
[19:32] *** AlexDaniel left
[19:42] *** ctilmes left
[19:46] *** __jrjsmrtn__ joined
[19:47] *** Manifest0 left
[19:48] *** agentzh left
[19:51] *** MidCheck left
[19:53] *** Manifest0 joined
[20:25] *** __jrjsmrtn__ left
[20:40] *** agentzh joined
[20:42] *** bobby left
[20:43] *** pmurias joined
[20:51] *** mowcat joined
[20:52] *** mowcat left
[20:52] *** mowcat joined
[21:03] <kawaii> Does anyone from the Star team know when they'll be tagging their official Docker images for 2019.03?

[21:03] *** skids left
[21:15] *** Bob- joined
[21:15] *** pyrimidine left
[21:16] *** netrino_ joined
[21:17] *** netrino left
[21:20] *** robertle left
[21:23] *** melezhik joined
[21:24] *** lucasb left
[21:24] *** |Sno| joined
[21:27] *** [Sno] left
[21:27] *** pmurias left
[21:33] *** netrino joined
[21:35] *** netrino_ left
[21:36] *** Guest49515 left
[21:38] *** netrino_ joined
[21:39] *** netrino left
[21:47] *** success joined
[21:47] *** success is now known as Guest9349

[21:50] *** Guest9349 left
[21:50] *** failure joined
[21:51] *** failure is now known as Guest64932

[21:55] *** rindolf left
[22:00] *** lgtaube left
[22:00] *** stux|RC-only left
[22:00] *** lgtaube joined
[22:06] *** leont left
[22:17] *** MidCheck joined
[22:22] *** Sgeo joined
[22:23] *** sena_kun left
[22:27] <melezhik> Hi. Is it possible to insert comments into regexps?

[22:27] <timotimo> i believe so, yeah

[22:27] <timotimo> m: say "foobar" ~~ / foo #`( this is a comment ) bar /

[22:27] <evalable6> timotimo, rakudo-moar 1aae63a65: OUTPUT: «｢foobar｣␤»

[22:28] <melezhik> cool, thank you!

[22:31] <lizmat> also, simple # also works:

[22:31] <lizmat> dd "foo" ~~ /^

[22:31] <lizmat>  f   # first letter

[22:31] <lizmat>  o   # second letter

[22:31] <lizmat>  o   # third letter

[22:31] <lizmat> /

[22:32] <timotimo> i was too lazy to look for a nl symbol to copypaste

[22:32] <lizmat> sleep&

[22:32] <timotimo> fwiw, i might end up turning that bluetooth keyboard into a full keyboard of shortcuts for stuff

[22:32] <timotimo> could have a load of symbols on there as well

[22:32] <timotimo> though i'll have to memorize what is where, since the keys don't have displays on them for some unfathomable reason

[22:33] <timotimo> like, surely you can get like a hundred little oled screens into a thirty bucks bluetooth device without making it much more expensive, right? :P

[22:45] *** dogbert17 left
[22:46] *** natrys left
[22:47] *** stux|RC-only joined
[22:54] *** dogbert17 joined
[23:03] *** Possum left
[23:04] *** Possum joined
[23:08] *** netrino_ left
[23:09] *** pecastro left
[23:23] *** kurahaupo left
[23:23] *** kurahaupo joined
[23:23] *** kurahaupo left
[23:24] *** kurahaupo joined
[23:42] *** s0me0ne_ joined
[23:56] *** samcv left
[23:59] *** samcv joined
