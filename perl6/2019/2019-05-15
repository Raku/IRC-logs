[00:02] *** Manifest0 joined
[00:03] *** qiqi joined
[00:20] *** qiqi left
[00:20] *** Manifest0 left
[00:28] *** Manifest0 joined
[00:32] <cpan-p6> New module released to CPAN! Async::Workers (0.0.5) by 03VRURG

[00:40] *** Manifest0 left
[00:44] *** Manifest0 joined
[01:01] <Xliff> m: my @a = ( [1, 2], [3, 4], [5, 6]); say @a.all.elems

[01:01] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´all(2, 2, 2)‚ê§¬ª

[01:01] <Xliff> m: my @a = ( [1, 2], [3, 4], [5, 6]); say @a.all.elems == 2

[01:01] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´all(True, True, True)‚ê§¬ª

[01:02] <Xliff> m: my @a = ( [1, 2], [3, 4], [5, 6]); say so @a.all.elems == 2

[01:02] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´True‚ê§¬ª

[01:02] *** Manifest0 left
[01:02] <Xliff> m: my @a = ( [1, 2], [3, 4], [5, 6]); say so @a.all.elems == 2; sub a ( @a where *.all.elems == 2) { say 'Hi!' }; a(@a)

[01:02] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´True‚ê§Hi!‚ê§¬ª

[01:03] <Xliff> m: constant C = 10; say ^C;

[01:03] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^10‚ê§¬ª

[01:03] <Xliff> m: constant C = 10; say ^C.eager;

[01:03] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^1‚ê§¬ª

[01:04] <Xliff> m: constant C = 10; say (^C);

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^10‚ê§¬ª

[01:04] <Xliff> m: constant C = 10; say (^10);

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^10‚ê§¬ª

[01:04] <Xliff> m: say (^10);

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^10‚ê§¬ª

[01:04] <Xliff> m: say ^10;

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^10‚ê§¬ª

[01:04] <Xliff> m: say ^10.eager;

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Potential difficulties:‚ê§    Precedence of ^ is looser than method call; please parenthesize‚ê§    at <tmp>:1‚ê§    ------> 3say ^107‚èè5.eager;‚ê§^1‚ê§¬ª

[01:04] <Xliff> m: say (^10).eager;

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(0 1 2 3 4 5 6 7 8 9)‚ê§¬ª

[01:04] <Xliff> m: say (^10);

[01:04] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´^10‚ê§¬ª

[01:08] *** Manifest0 joined
[01:15] *** Manifest0 left
[01:16] *** xiaoyafeng joined
[01:22] *** khisanth_ left
[01:23] *** Manifest0 joined
[01:32] *** Manifest0 left
[01:36] *** khisanth_ joined
[01:36] <cpan-p6> New module released to CPAN! FindBin::Dirs (1.0.0) by 03LEMBARK

[01:37] *** Manifest0 joined
[01:42] *** Manifest0 left
[01:44] *** hythm joined
[01:47] *** Manifest0 joined
[01:51] *** Manifest0 left
[01:54] *** molaf left
[01:55] *** qiqi joined
[01:55] *** noisegul_ joined
[01:57] *** Manifest0 joined
[01:58] *** noisegul left
[02:03] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:06] *** molaf joined
[02:15] *** Manifest0 left
[02:20] *** Manifest0 joined
[02:28] *** Manifest0 left
[02:29] <Xliff> m: constant N = 10; .say for ^N;

[02:29] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§¬ª

[02:35] *** Manifest0 joined
[02:37] *** molaf left
[02:40] *** mowcat joined
[02:40] *** mowcat left
[02:40] *** espadrine_ left
[02:41] *** mowcat joined
[02:55] *** Manifest0 left
[03:01] *** Manifest0 joined
[03:07] *** kaare_ left
[03:07] *** kaare_ joined
[03:22] *** Manifest0 left
[03:25] *** vrurg left
[03:30] *** Manifest0 joined
[03:31] *** Cabanossi left
[03:33] *** Cabanossi joined
[03:39] *** mowotter joined
[03:40] *** mowcat left
[03:40] *** Manifest0 left
[03:42] *** dustinm` left
[03:46] *** Manifest0 joined
[03:46] *** dustinm` joined
[03:53] *** xiaoyafeng left
[03:53] *** mowotter left
[03:53] *** mowcat joined
[04:00] *** Manifest0 left
[04:06] *** Manifest0 joined
[04:09] *** molaf joined
[04:15] *** qiqi left
[04:17] *** hythm left
[04:17] *** Manifest0 left
[04:22] *** Manifest0 joined
[04:29] *** skids joined
[04:30] *** mowcat left
[04:35] *** qiqi joined
[04:35] *** Manifest0 left
[04:45] *** Manifest0 joined
[04:45] *** skids left
[04:51] *** __jrjsmrtn__ left
[04:51] *** Manifest0 left
[04:52] *** __jrjsmrtn__ joined
[04:56] *** curan joined
[04:56] *** Manifest0 joined
[04:58] *** dustinm` left
[05:04] *** qiqi left
[05:08] *** dustinm` joined
[05:10] *** sauvin joined
[05:21] *** Manifest0 left
[05:26] *** Manifest0 joined
[05:26] *** cpan-p6 left
[05:28] *** agentzh left
[05:30] *** robertle left
[05:30] *** agentzh joined
[05:31] *** agentzh left
[05:31] *** agentzh joined
[05:31] *** qiqi joined
[05:37] *** holyghost joined
[05:37] <holyghost> .

[05:37] <yoleaux> 14 May 2019 20:35Z <Xliff> holyghost: Please send me an email with that request. Thanks.

[05:37] <yoleaux> 14 May 2019 21:17Z <Xliff> holyghost: scsh is not found via apt.

[05:38] <holyghost> .tell Xliff, ok then the scsh package has been removed from ubuntu packages

[05:38] <yoleaux> holyghost: What kind of a name is "Xliff,"?!

[05:38] <holyghost> .tell Xliff ok then the scsh package has been removed from ubuntu packages

[05:38] <yoleaux> holyghost: I'll pass your message to Xliff.

[05:38] <holyghost> hi btw

[05:43] <holyghost> .tell Xliff I'll try to hack it up locally (in my home dir) but it has shell and makefile problems as it's more or less a BSD system. I need it for my scsh MUD/MOO

[05:43] <yoleaux> holyghost: I'll pass your message to Xliff.

[05:43] *** Manifest0 left
[05:44] <holyghost> .tell Xliff I have to keep my hand in other programming languages

[05:44] <yoleaux> holyghost: I'll pass your message to Xliff.

[05:48] *** Manifest0 joined
[05:53] *** Manifest0 left
[05:58] *** Manifest0 joined
[06:03] *** discord6 left
[06:03] *** discord6 joined
[06:03] *** discord6 left
[06:03] *** discord6 joined
[06:04] <holyghost> hail!

[06:04] *** qiqi left
[06:04] *** Manifest0 left
[06:06] *** discord6 left
[06:06] *** discord6 joined
[06:07] *** tyil left
[06:07] *** Geth left
[06:08] *** discord6 left
[06:09] *** Manifest0 joined
[06:19] *** synopsebot_ joined
[06:22] <masak> I think I found a Unicode bug in perlcon.eu: if you go to https://perlcon.eu/talk/75 and click the "Ëù∂" tag, you get "There are no talks submitted with this tag yet."

[06:22] *** domidumont joined
[06:23] <tadzik> oh it's 1 month left to submit a talk!

[06:25] *** xiaoyafeng joined
[06:27] *** Geth joined
[06:27] *** tyilanmenyn joined
[06:30] <holyghost> I'd like to be at perlcon EU but I don't have the money or car to get there

[06:31] <holyghost> I hope they all have a good time, especially a hack room :-)

[06:33] <holyghost> It's about 200 euros to get a train ticket from here to Riga

[06:34] *** tyilanmenyn left
[06:36] *** synopsebot_ left
[06:36] *** Geth left
[06:36] *** synopsebot left
[06:36] *** Geth joined
[06:37] *** molaf left
[06:37] *** feldspath joined
[06:38] *** tyilanmenyn joined
[06:40] *** qiqi joined
[06:42] *** feldspath left
[06:43] *** cpan-p6 joined
[06:43] *** cpan-p6 left
[06:43] *** cpan-p6 joined
[06:43] *** synopsebot joined
[06:43] *** discord6 joined
[06:47] *** Geth_ joined
[06:48] *** tyilanmenyn left
[06:57] <elcaro> .tell lizmat in Map::Agnostic lib, you need to bump version in the `use Hash::Agnostic` line

[06:57] <yoleaux> elcaro: I'll pass your message to lizmat.

[07:00] *** discord6 left
[07:01] *** Geth left
[07:01] *** quipa left
[07:02] *** quipa joined
[07:04] *** Geth joined
[07:06] *** abraxxa joined
[07:06] *** abraxxa left
[07:06] *** abraxxa joined
[07:11] *** discord6 joined
[07:11] *** discord6 left
[07:11] *** discord6 joined
[07:11] *** abraxxa left
[07:12] *** abraxxa joined
[07:14] *** patrickb joined
[07:16] *** Geth left
[07:17] *** discord6 left
[07:17] *** Geth joined
[07:18] *** synopsebot_ joined
[07:18] *** Geth left
[07:18] *** synopsebot_ left
[07:18] *** cpan-p6 left
[07:18] *** synopsebot left
[07:18] *** Geth_ left
[07:19] *** discord6 joined
[07:19] *** discord6 left
[07:19] *** discord6 joined
[07:20] *** tyilanmenyn joined
[07:21] *** abraxxa left
[07:22] *** discord6 left
[07:22] *** abraxxa joined
[07:23] *** tyilanmenyn left
[07:25] *** Geth joined
[07:25] *** discord6 joined
[07:25] *** synopsebot joined
[07:25] *** tyilanmenyn joined
[07:26] *** cpan-p6 joined
[07:26] *** cpan-p6 left
[07:26] *** cpan-p6 joined
[07:27] *** abraxxa left
[07:27] *** abraxxa joined
[07:33] *** adu left
[07:33] *** adu joined
[07:33] *** adu left
[07:34] *** adu joined
[07:34] *** adu left
[07:35] *** adu joined
[07:35] *** adu left
[07:35] *** adu joined
[07:36] *** adu left
[07:36] *** adu joined
[07:37] *** adu left
[07:38] *** xiaoyafeng left
[07:41] *** Black_Ribbon joined
[07:45] *** Black_Ribbon left
[07:46] *** Manifest0 left
[07:47] *** BR_ joined
[07:52] *** Manifest0 joined
[07:54] *** dolmen joined
[07:55] *** Black_Ribbon joined
[08:03] *** molaf joined
[08:04] *** zakharyas joined
[08:09] *** Manifest0 left
[08:12] *** dakkar joined
[08:14] *** Manifest0 joined
[08:14] *** nadim_ joined
[08:16] *** robertle joined
[08:22] *** kensanata joined
[08:27] *** rindolf joined
[08:31] *** nadim_ left
[08:33] *** tyilanmenyn left
[08:33] *** cpan-p6 left
[08:33] *** synopsebot left
[08:34] *** synopsebot joined
[08:35] *** tyilanmenyn joined
[08:38] *** cpan-p6 joined
[08:38] *** cpan-p6 left
[08:38] *** cpan-p6 joined
[08:39] *** tyilanmenyn is now known as tyil

[08:45] *** molaf left
[08:52] *** kensanata left
[08:58] <Geth> ¬¶ doc: antoniogamiz self-assigned Spin off Pod::Convenience https://github.com/perl6/doc/issues/2696

[09:04] *** nadim_ joined
[09:05] *** Black_Ribbon left
[09:05] *** BR_ left
[09:11] *** rindolf left
[09:14] *** powerbit joined
[09:16] *** feldspath joined
[09:20] *** rindolf joined
[09:24] *** xiaoyafeng joined
[09:25] <cpan-p6> New module released to CPAN! Map::Agnostic (0.0.3) by 03ELIZABETH

[09:26] *** ayerhart_ joined
[09:27] *** ayerhart left
[09:30] <lizmat> elcaro++  # thanks 

[09:30] <yoleaux> 06:57Z <elcaro> lizmat: in Map::Agnostic lib, you need to bump version in the `use Hash::Agnostic` line

[09:35] *** xiaoyafeng left
[09:37] *** scimon joined
[09:50] <nadim_> Morning

[09:50] <nadim_> m: dd a => (< a >, b => 2) 

[09:50] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´block <unit>()‚ê§¬ª

[09:50] <nadim_> founf another dd quirk I believe

[09:50] <nadim_> lizmat: what do you think?

[09:50] *** wamba joined
[09:51] *** Manifest0 left
[09:51] <lizmat> it's not a quirk, it's a side effect of it becoming a named parameter

[09:53] <lizmat> and using the (|) signature

[09:54] <nadim_> ok but shouldn it be dump to something which shows the contents? 

[09:54] <nadim_> m: dd a => 2 

[09:54] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´block <unit>()‚ê§¬ª

[09:54] <nadim_> m:  a => (< a >, b => 2).perl 

[09:54] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "a => (< a >, b => 2).perl" in sink context (line 1)‚ê§¬ª

[09:55] <nadim_> m:  (a => (< a >, b => 2)).perl 

[09:55] <camelia> rakudo-moar a643b8be1: ( no output )

[09:55] <nadim_> m:  (a => (< a >, b => 2)).gist

[09:55] <camelia> rakudo-moar a643b8be1: ( no output )

[09:55] <lizmat> I vaguely recall trying to do just that, and losing some type of info

[09:55] <lizmat> m: dd (a => (< a >, b => 2))

[09:55] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´:a(("a", :b(2)))‚ê§¬ª

[09:55] <lizmat> ah yes, if I use |c, I cannot get at the name of a variable anymore

[09:56] <lizmat> m: my $a = 42; dd $a   

[09:56] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Int $a = 42‚ê§¬ª

[09:56] <lizmat> would then not work anymore

[09:56] <lizmat> I figured that was more useful than needing to do an extra set of params when trying to dd a Pair

[09:56] *** Manifest0 joined
[09:59] <lizmat> weekly: http://www.khanate.co.uk/blog/2019/05/14/perl-weekly-challenge-part-8/

[09:59] <notable6> lizmat, Noted!

[10:06] *** scimon left
[10:06] *** scimon joined
[10:06] <lizmat> afk for a few hours&

[10:07] *** domidumont left
[10:18] *** wamba left
[10:20] *** mniip left
[10:36] *** aborazmeh joined
[10:36] *** aborazmeh left
[10:36] *** aborazmeh joined
[10:36] *** Manifest0 left
[10:41] *** Manifest0 joined
[10:47] *** zakharyas left
[10:48] *** Manifest0 left
[10:49] *** zakharyas joined
[10:54] *** dolmen left
[10:54] *** Manifest0 joined
[11:06] *** scimon left
[11:08] *** molaf joined
[11:11] *** zakharyas left
[11:17] *** mowcat joined
[11:17] *** mniip joined
[11:19] *** qiqi left
[11:19] <robertle> is there some module to syntax-highlight perl6 code (including pod6) to html? we must use something for the docs...

[11:23] *** molaf left
[11:27] *** MilkmanDan left
[11:29] *** MilkmanDan joined
[11:34] *** Manifest0 left
[11:37] *** dolmen joined
[11:40] *** Manifest0 joined
[11:45] *** agentzh left
[11:47] *** agentzh joined
[11:54] *** Manifest0 left
[11:54] *** scimon joined
[11:58] *** Manifest0 joined
[12:05] <moritz> there are several options

[12:05] <moritz> pygments can do it

[12:05] *** Manifest0 left
[12:05] <moritz> vim can do it (for example using p5 Text::VimColor=

[12:06] *** breinbaas left
[12:06] <moritz> I think the docs uses some hilighting that was built for the Atom editor

[12:06] <moritz> see the Makefile of perl6/doc for more details

[12:08] *** domidumont joined
[12:12] *** Manifest0 joined
[12:20] *** domidumont left
[12:24] *** ravenousmoose joined
[12:36] *** Manifest0 left
[12:39] *** adu joined
[12:40] *** Manifest0 joined
[12:43] *** zakharyas joined
[12:45] *** ravenousmoose left
[12:45] *** Manifest0 left
[12:51] *** Manifest0 joined
[12:52] *** qiqi joined
[13:13] *** qiqi left
[13:13] <robertle> moritz: thanks, found it! 

[13:20] *** Manifest0 left
[13:22] *** vrurg joined
[13:23] *** quipa left
[13:23] *** molaf joined
[13:25] <cpan-p6> New module released to CPAN! Term::Choose (1.5.5) by 03KUERBIS

[13:25] <cpan-p6> New module released to CPAN! Term::TablePrint (1.4.6) by 03KUERBIS

[13:27] *** Manifest0 joined
[13:29] *** molaf left
[13:31] *** Manifest0 left
[13:36] *** curan left
[13:37] *** Manifest0 joined
[13:39] *** skids joined
[13:46] *** Manifest0 left
[13:49] <Geth> ¬¶ problem-solving: AlexDaniel assigned to jnthn Issue What are the intended semantics of <== and <<== https://github.com/perl6/problem-solving/issues/27

[13:51] *** Manifest0 joined
[13:58] *** Manifest0 left
[14:02] *** Manifest0 joined
[14:08] *** aborazmeh left
[14:09] *** feldspath left
[14:12] *** mowcat left
[14:16] *** sena_kun joined
[14:19] *** feldspath joined
[14:20] *** molaf joined
[14:28] *** Manifest0 left
[14:36] *** Manifest0 joined
[14:50] *** feldspath left
[14:50] *** feldspath_ joined
[15:01] *** Manifest0 left
[15:06] *** Manifest0 joined
[15:16] <Xliff> \o

[15:16] <yoleaux> 05:38Z <holyghost> Xliff: ok then the scsh package has been removed from ubuntu packages

[15:16] <yoleaux> 05:43Z <holyghost> Xliff: I'll try to hack it up locally (in my home dir) but it has shell and makefile problems as it's more or less a BSD system. I need it for my scsh MUD/MOO

[15:16] <yoleaux> 05:44Z <holyghost> Xliff: I have to keep my hand in other programming languages

[15:22] *** patrickb left
[15:45] *** vrurg left
[15:54] *** Manifest0 left
[15:55] <Xliff> What's the best way to get const C data out of an object?

[15:55] *** robertle left
[15:55] <Xliff> A library, rather.

[15:56] <Xliff> I have array definitions, here: https://github.com/bytebrew/slope/blob/master/slope/source/slope/sampler.c#L159

[15:57] <Xliff> Oops.... brb

[15:58] <Xliff> Yeah. Still getting a SEGV.

[15:59] <Xliff> I will gist.

[15:59] <tobs> Xliff: independently of it being const, I believe cglobal() gets variables out of libraries.

[15:59] <Xliff> tobs: That's what I am trying, however it SEGVs.

[16:01] *** Manifest0 joined
[16:01] <tobs> I'd like to see the gist but I have to go right now

[16:02] <Xliff> Still writing it, but thanks.

[16:02] <Xliff> I will post the link when done.

[16:03] <Xliff> tobs: Just out of curiosity before you leave. How would you extract data given a Pointer is an array of structs?

[16:06] <Xliff> https://gist.github.com/Xliff/4d83cd0476d39d2ebce0d77884d7c6e3

[16:08] *** patrickb joined
[16:14] *** Manifest0 left
[16:16] <cpan-p6> New module released to CPAN! FindBin (0.3.1) by 03LEMBARK

[16:18] <cpan-p6> New module released to CPAN! FileSystem::Parent (0.1.0) by 03LEMBARK

[16:19] *** Manifest0 joined
[16:22] *** dakkar left
[16:23] *** TimToady joined
[16:24] *** feldspath_ left
[16:31] *** ctilmes joined
[16:32] *** domidumont joined
[16:32] *** scimon left
[16:33] <ctilmes> Xliff: I believe cglobal always gives you a pointer to the thing, so if the thing itself is a pointer, you get a pointer to a pointer to the array.

[16:33] <ctilmes> Xliff:  I think... I've had trouble trying to do similar things before

[16:33] <Xliff> ctilmes: Yikes.

[16:34] <Xliff> Thanks for the tip!

[16:36] <Xliff> m: class A is repr('CStruct') { has Str $!s; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a = A.new; $a.s = 'Hello'; $a.s.say

[16:36] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Hello‚ê§¬ª

[16:37] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a = A.new; $a.s = 'Hello'; $a.s.say

[16:37] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Hello‚ê§¬ª

[16:39] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; submethod BUILD (:$!coord, :$s) { self.s = 'Hi'}; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; 

[16:39] <camelia> rakudo-moar a643b8be1: ( no output )

[16:40] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; submethod BUILD (:$!coord, :$s) { self.s = 'Hi'}; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a1 = A.new(1, 'b'); $a1.gist.say;

[16:40] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Default constructor for 'A' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:40] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; submethod BUILD (:$!coord, :$s) { self.s = 'Hi'}; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a1 = A.new( coord=>1, s=>'b'); $a1.gist.say;

[16:40] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´This type cannot unbox to a native number: P6opaque, Int‚ê§  in submethod BUILD at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:40] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; submethod BUILD (:$!coord, :$s) { self.s = 'Hi'}; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a1 = A.new( coord=>1.Num, s=>'b'); $a1.gist.say;

[16:40] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´A.new(coord => 1e0)‚ê§¬ª

[16:41] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; submethod BUILD (:$!coord, :$s) { self.s = 'Hi'}; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a1 = A.new( coord=>1.Num, s=>'b'); $a1.gist.say; $a1.s.say

[16:41] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´A.new(coord => 1e0)‚ê§Hi‚ê§¬ª

[16:41] <Xliff> m: class A is repr('CStruct') { has num64 $.coord is rw; has Str $!s; submethod BUILD (:$!coord, :$s) { self.s = $s }; method s is rw { use nqp; Proxy.new: FETCH => -> $ {$!s}, STORE => -> $, $new { nqp::bindattr( nqp::decont(self), A, '$!s', nqp::unbox_s(~$new) ); }; }; }; my $a1 = A.new( coord=>1.Num, s=>'b'); $a1.gist.say; $a1.s.say

[16:41] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´A.new(coord => 1e0)‚ê§b‚ê§¬ª

[16:41] <ctilmes> Xliff: BTW -- post the cglobal question on StackOverflow if you get a chance -- you'll get better answers, and when I forget how it works I can search for cglobal on there and find the answer again

[16:41] <Xliff> ctilmes: OK. Good thought. Thanks.

[16:42] *** Manifest0 left
[16:42] <Xliff> WTF? "Missing serialize REPR function for REPR CStruct (Slope::Raw::Types::SlopeSample)"

[16:45] *** zakharyas left
[16:46] *** ravenousmoose joined
[16:47] *** Manifest0 joined
[17:09] *** abraxxa left
[17:13] <Xliff> Can this when statement be rewritten as an expression?  'when 3|5|7|9|11|13|15|17|19 { "odd" }'

[17:15] <Xliff> m: given 42 { when * %% 2 { say 'Odd' } default { say 'Even' }

[17:15] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3given 42 { when * %% 2 { say 'Odd' }7‚èè5 default { say 'Even' }‚ê§¬ª

[17:15] *** vrurg joined
[17:15] <Xliff> m: given 42 { when * %% 2 { say 'Odd' }; default { say 'Even' }; };

[17:15] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:15] <Xliff> m: given 43 { when * %% 2 { say 'Odd' }; default { say 'Even' }; };

[17:15] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Even‚ê§¬ª

[17:15] *** dolmen left
[17:16] <Xliff> m: given 43 { when (* %% 2).so { say 'Odd' }; default { say 'Even' }; };

[17:16] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Even‚ê§¬ª

[17:16] <Xliff> m: given 42 { when (* %% 2).so { say 'Odd' }; default { say 'Even' }; };

[17:16] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:16] <Xliff> m: given 42 { when (* %% 2) == 1 { say 'Odd' }; default { say 'Even' }; };

[17:16] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:16] <Xliff> ?!?

[17:17] <Xliff> m: given 42 { when ((* %% 2) == 1) { say 'Odd' }; default { say 'Even' }; };

[17:17] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:17] <Xliff> m: given 42 { when (* %% 2 == 1) { say 'Odd' }; default { say 'Even' }; };

[17:17] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:17] <Xliff> say 42 %% 2

[17:17] <evalable6> Xliff, rakudo-moar 6a60a99fc: OUTPUT: ¬´True‚ê§¬ª

[17:18] <Xliff> m: given 42 { when * % 2 { say 'Odd' }; default { say 'Even' }; };

[17:18] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Even‚ê§¬ª

[17:18] <Xliff> I'm having one of those days...

[17:23] *** ctilmes left
[17:24] <El_Che> sena_kun: I wrote a typical LDAP-admin script today (like we talked about), you want me to paste it somewhere?

[17:24] <sena_kun> El_Che, sure

[17:24] <El_Che> sena_kun: (a p5 script)

[17:24] <lizmat> m: $_ = 5; if $_ ~~ 3..19 && $_ % 2 { say "odd" } # Xliff 

[17:24] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´odd‚ê§¬ª

[17:24] <sena_kun> El_Che, well, I guessed that

[17:25] <sena_kun> El_Che, would be a bit more helpful to try to do a port and then create issues for everything that is missing or doesn't work, but I can as well look at it myself, probably

[17:26] <El_Che> sena_kun: sure

[17:26] <El_Che> sena_kun: it's short, so it should be even shorter in p6

[17:32] *** dwarring left
[17:32] *** ravenousmoose left
[17:33] <El_Che> sena_kun: it's always so impressive to see how much boilerplate can be dropped when converting p5 to p6

[17:33] <sena_kun> El_Che, well, the API is not too refined yet, though, imo. are you trying to do a port right now? or can I look at the script?

[17:34] <sena_kun> from what I know immediately, StartTLS doesn't work(we have ldaps instead), also extensions are not supported yet, controls are supported

[17:35] <Xliff> lizmat: Thanks. See above. I was using %% instead of %

[17:35] <Xliff> m: given 42 { when * % 2 { say 'Odd' }; default { say 'Even' }; };

[17:35] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Even‚ê§¬ª

[17:36] <Xliff> m: given 43 { when * % 2 { say 'Odd' }; default { say 'Even' }; };

[17:36] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:36] <Xliff> As opposed to...

[17:36] <Xliff> m: given 42 { when * %% 2 { say 'Odd' }; default { say 'Even' }; };

[17:36] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Odd‚ê§¬ª

[17:36] <Xliff> ^^ Which is wrong.

[17:37] <Xliff> I'm having a Day.

[17:38] <sena_kun> 6c: my %m is Mix = a => -15, b => 15; say %m.Baggy; say %m.Setty;

[17:39] <committable6> sena_kun, https://gist.github.com/ac545a1c03b7475e91ea586e741b7634

[17:41] <El_Che> sena_kun: I was having a go while I was here waiting on my kid to get out of music class

[17:42] <El_Che> let me gist it

[17:42] * sena_kun waits patiently

[17:44] *** noisegul_ is now known as noisegul

[17:45] <El_Che> sena_kun: https://gist.github.com/nxadm/84ff14675e4dbb2b97b3354e627cf5eb

[17:46] <sena_kun> oooooh, cool

[17:46] <sena_kun> El_Che++

[17:46] <sena_kun> El_Che, is SASL used?

[17:46] <El_Che> sena_kun: the ldap_modify is the only thing calling ldap

[17:46] <El_Che> no; simple auth

[17:46] <sena_kun> El_Che, ldaps?

[17:46] <El_Che> (on ssl)

[17:46] <El_Che> yes, but the code is protocol agnostic

[17:46] <El_Che> it expect an URI

[17:46] <El_Che> s

[17:47] <sena_kun> yup, seeing this

[17:47] <El_Che> just ran it on out production db and haven't got any calls yet :)

[17:47] <sena_kun> well, right now I don't see anything that cannot be written with Cro::LDAP

[17:47] <El_Che> the ldap server is provisioned by an IAM system

[17:47] <sena_kun> as all features are in place already

[17:47] <El_Che> but it can not set pwdChangedTime

[17:48] <El_Che> as it's an operational attribute

[17:48] <El_Che> password resets are done through the IAM system

[17:48] <El_Che> but the pwdChangeTime is useful for stuff using that to trigger password changes from users

[17:48] <El_Che> like our Shibboleth SSO IDP

[17:48] <El_Che> I wrote some code to keep it in sync, but it's in Go

[17:49] <El_Che> this small script is just meant to rectify history mismatches and/or if something goed wrong with the service doing this

[17:49] <El_Che> it would be extremely cool if it would be in native perl6 :)

[17:50] <El_Che> so, does cro-ldap support operational aatributes?

[17:50] <El_Che> (the Relax control in the sub)

[17:50] <sena_kun> El_Che, Relax is supported

[17:51] <sena_kun> El_Che, https://github.com/Altai-man/cro-ldap/blob/master/docs/reference/cro-ldap-client.md#controls <- https://github.com/Altai-man/cro-ldap/blob/b001997493da7151eaae4cecca4629cdcf51fd52/lib/Cro/LDAP/Control.pm6#L26

[17:51] <El_Che> nice

[17:51] <sena_kun> once again, I don't see anything that cannot be done with cro-ldap right now, so

[17:51] <sena_kun> El_Che, I will try to rewrite ldap_modify sub part in Perl 6 and then post the code

[17:52] <El_Che> thx, I'll post the rest

[17:52] <sena_kun> s/post/port/ ? :)

[17:52] <El_Che> I must say the Perl 5 code is single-threader but damn fast

[17:52] <El_Che> yes, port

[17:52] <sena_kun> ok

[17:52] <El_Che> (depending on time of course)

[17:53] <sena_kun> sure

[17:53] <sena_kun> anyway, got it, thanks a lot. I am having a rest day today, so cannot promise anything, but at least I plan to make some docs-related work along with cro-ldap related work

[17:53] <sena_kun> El_Che, I'll ping or .tell you when the results will be available

[17:54] <El_Che> sena_kun: you see how slow I am to react, so don't feel any pressure what so ever

[17:55] <El_Che> sena_kun: it was a fun little script (it's been a while), but I see how much I missed the p6 error messages

[17:55] *** telex left
[17:56] *** telex joined
[18:01] <nine> jnthn: https://mi.cro.services/

[18:02] *** MilkmanDan left
[18:02] *** netrino joined
[18:05] *** DerHolzer joined
[18:05] <DerHolzer> rakudo: (1..*).pick(1)

[18:05] <camelia> rakudo-moar a643b8be1: ( no output )

[18:06] <Xliff> rakudo: (1..*).pick(1).say

[18:06] <DerHolzer> rakudo: say (1..*).pick(1)

[18:06] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´()‚ê§¬ª

[18:06] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´()‚ê§¬ª

[18:06] *** hythm_ joined
[18:06] <Xliff> rakudo: (1..20).pick(1).say

[18:06] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(5)‚ê§¬ª

[18:07] <tobs> m: (1..*).list.pick.say

[18:07] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot .pick from a lazy list‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:07] <DerHolzer> i know. the * kinda was the point :)

[18:08] <tobs> this seems like a sensible exception or failure to have for (1..*).pick as well

[18:09] *** MilkmanDan joined
[18:10] <tobs> DerHolzer: have you seen R#1581 ?

[18:10] <synopsebot> R#1581 [open]: https://github.com/rakudo/rakudo/issues/1581 [edge cases][ranges][rationals] range with large Rat as bound returns Nil for .pick()

[18:10] *** mowcat joined
[18:13] <hythm_> p6: class A { method TOP ($/) { make ~$<tail> }}; grammar G { token TOP { <tail> }; token tail { '.abc' }}.parse('.abc', actions => A); 

[18:13] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot convert string to number: radix point must be followed by one or more valid digits in '3.‚èè5abc' (indicated by ‚èè)‚ê§  in regex tail at <tmp> line 1‚ê§  in regex TOP at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:15] <hythm_> ^ is this a bug or intended? if i used different token name other than 'tail' it works, possibly name conflict?

[18:17] <DerHolzer> rakudo: Any.tail.WHAT.say

[18:17] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(Any)‚ê§¬ª

[18:18] <DerHolzer> rakudo: tail.WHAT.say

[18:18] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    tail used at line 1. Did you mean 'fail'?‚ê§‚ê§¬ª

[18:19] *** molaf left
[18:23] *** ctilmes joined
[18:24] *** ctilmes left
[18:32] *** sauvin left
[18:32] *** dogbert17 joined
[18:36] *** zacts joined
[18:41] *** MitarashiDango[m left
[18:47] *** kybr joined
[18:55] *** kensanata joined
[18:59] *** wamba joined
[19:01] *** antoniogamiz joined
[19:06] *** zacts left
[19:09] *** kaare_ left
[19:09] *** kaare_ joined
[19:12] <Geth> ¬¶ doc/mix-coercion-note: 8fc7432805 | Altai-man++ | doc/Type/QuantHash.pod6

[19:12] <Geth> ¬¶ doc/mix-coercion-note: Clarify Setty/Baggy and add examples

[19:12] <Geth> ¬¶ doc/mix-coercion-note: review: https://github.com/perl6/doc/commit/8fc7432805

[19:14] <Geth> ¬¶ doc: Altai-man++ created pull request #2792: Clarify Setty/Baggy and add examples

[19:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2792

[19:16] *** zacts joined
[19:18] *** domidumont left
[19:26] *** wamba left
[19:28] *** robertle joined
[19:30] *** |oLa| left
[19:31] *** pecastro joined
[19:33] <Geth> ¬¶ doc: 8fc7432805 | Altai-man++ | doc/Type/QuantHash.pod6

[19:33] <Geth> ¬¶ doc: Clarify Setty/Baggy and add examples

[19:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8fc7432805

[19:33] <Geth> ¬¶ doc: 92ff8fd64b | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | doc/Type/QuantHash.pod6

[19:33] <Geth> ¬¶ doc: Merge pull request #2792 from perl6/mix-coercion-note

[19:33] <synopsebot> Link: https://doc.perl6.org/type/QuantHash

[19:33] <Geth> ¬¶ doc: 

[19:33] <Geth> ¬¶ doc: Clarify Setty/Baggy and add examples

[19:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/92ff8fd64b

[19:40] *** zacts left
[19:40] *** Manifest0 left
[19:41] <kybr> what is the simplest class of grammars that perl (6) cannot do? maybe that's a dumb question. i'm still new to the area. i remember reading about the limitations somewhere, but now i cannot remember where :/

[19:42] *** MasterDuke left
[19:46] *** Manifest0 joined
[19:52] <lizmat> weekly: https://perl6.eu/perfect-indentation.html

[19:52] <notable6> lizmat, Noted!

[20:00] *** Manifest0 left
[20:05] *** Manifest0 joined
[20:08] *** ufobat_ joined
[20:09] *** Manifest0 left
[20:12] *** ufobat__ left
[20:16] *** Manifest0 joined
[20:20] <moritz> kybr: since you can call regular Perl 6 code from grammars, everything that can be parsed by a turing machine can be parsed by a Perl 6 grammar

[20:20] *** Sgeo left
[20:20] *** Manifest0 left
[20:22] *** Sgeo joined
[20:24] <kybr> okay. i found the text that i mentioned.. it is Lenz 2017 Parsing with Perl 6 Regexes and Grammars. he describes a recursive descent parser and an operator-precedence parser. i don't know why i remembered these as limitations of perl 6. they are just specific examples.

[20:26] <moritz> that sounds like something Lenz might write :D

[20:27] <lizmat> kybr: moritz === Lenz  :-)

[20:27] <kybr> oh, cool. well, Thank You! :)

[20:28] <moritz> my pleasure :D

[20:29] *** Manifest0 joined
[20:38] *** Manifest0 left
[20:40] *** mowcat left
[20:41] *** robinsmidsrod left
[20:42] *** robinsmidsrod joined
[20:43] *** DarthGandalf left
[20:44] *** zacts joined
[20:44] *** Manifest0 joined
[20:46] *** zacts left
[20:46] *** zacts joined
[20:46] *** DarthGandalf joined
[20:46] *** espadrine_ joined
[20:47] *** antoniogamiz left
[20:48] *** nadim_ left
[20:53] *** Manifest0 left
[20:58] *** Manifest0 joined
[21:00] <cpan-p6> New module released to CPAN! Cro::HTTP::Session::Red (0.0.2) by 03FCO

[21:00] <cpan-p6> New module released to CPAN! Cro::HTTP::Session::Red (0.0.1) by 03FCO

[21:03] *** kst left
[21:05] *** Manifest0 left
[21:11] *** Manifest0 joined
[21:15] *** zacts left
[21:17] *** hythm_ left
[21:18] *** DerHolzer left
[21:23] *** sergot left
[21:23] *** masak left
[21:23] *** tadzik left
[21:25] *** tadzik joined
[21:29] *** robertle left
[21:30] *** dolmen joined
[21:32] *** skids left
[21:34] *** cpan-p6 left
[21:35] *** cpan-p6 joined
[21:35] *** cpan-p6 left
[21:35] *** cpan-p6 joined
[21:35] *** kensanata left
[21:40] *** Manifest0 left
[21:45] *** Manifest0 joined
[21:49] *** kst joined
[21:50] *** Manifest0 left
[21:51] *** adu left
[21:55] *** Manifest0 joined
[21:57] <dolmen> m: say given 43 { when * %% 2 { 'Odd' }; default { 'Even' }; };

[21:57] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or use an explicit invocant or argument, or use &say to refer to the function as a noun‚ê§at <tmp>:1‚Ä¶¬ª

[21:58] *** molaf joined
[21:58] <timotimo> dolmen: you want "say do" for this

[21:58] <timotimo> m: say do given 43 { when * %% 2 { 'Odd' }; default { 'Even' }; }

[21:58] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Even‚ê§¬ª

[21:59] <timotimo> it doesn't get far enough in the parsing to understand that you're not using post-statement given

[21:59] <timotimo> but if it were to lookahead and see that there's a block there, it could probably point that out i guess

[22:12] *** Manifest0 left
[22:14] *** molaf left
[22:14] *** SCHAPiE left
[22:19] *** SCHAPiE joined
[22:20] *** Manifest0 joined
[22:40] *** Manifest0 left
[22:43] <Xliff> m: rand.say

[22:43] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´0.5367149299797227‚ê§¬ª

[22:43] *** dolmen left
[22:43] *** dolmen joined
[22:44] *** dolmen left
[22:44] *** Manifest0 joined
[22:51] *** Manifest0 left
[22:55] *** Manifest0 joined
[23:01] *** pecastro left
[23:02] *** netrino left
[23:03] *** Manifest0 left
[23:08] *** Manifest0 joined
[23:11] *** rindolf left
[23:14] <Xliff> m: use NativeCall; my $x = CArray[num64].new; $x.REPR.say

[23:14] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´CArray‚ê§¬ª

[23:14] <Xliff> m: use NativeCall; my $x = CArray[num64].new; $x.REPR.say; $x[1] = 1; $x.REPR.say

[23:14] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´CArray‚ê§This type cannot unbox to a native number: P6opaque, Int‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:14] <Xliff> m: use NativeCall; my $x = CArray[num64].new; $x.REPR.say; $x[1] = 1e0; $x.REPR.say

[23:14] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´CArray‚ê§CArray‚ê§¬ª

[23:14] <Xliff> m: use NativeCall; my $x = CArray[num64].new; $x.REPR.say; $x[1] = rand; $x.REPR.say

[23:14] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´CArray‚ê§CArray‚ê§¬ª

[23:15] <Xliff> m: use NativeCall; my $x = CArray[num64].new; sub doPoints( for ^10 { $x[$_] = rand; }; $x.REPR.say; doPoints; $x.REPR.say

[23:15] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Invalid typename 'for' in parameter declaration.‚ê§at <tmp>:1‚ê§------> 3x = CArray[num64].new; sub doPoints( for7‚èè5 ^10 { $x[$_] = rand; }; $x.REPR.say; do‚ê§¬ª

[23:16] <Xliff> m: use NativeCall; my $x = CArray[num64].new; sub doPoints { for ^10 { $x[$_] = rand; }; $x.REPR.say; doPoints; $x.REPR.say

[23:16] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3d; }; $x.REPR.say; doPoints; $x.REPR.say7‚èè5<EOL>‚ê§    expecting any of:‚ê§        statement end‚ê§        statement modifier‚ê§        statement modifier loo‚Ä¶¬ª

[23:16] <Xliff> m: use NativeCall; my $x = CArray[num64].new; sub doPoints { for ^10 { $x[$_] = rand; };  }; $x.REPR.say; doPoints; $x.REPR.say

[23:16] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´CArray‚ê§CArray‚ê§¬ª

[23:16] <Xliff> m: $*PERL.compiler.version.say

[23:16] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´v2019.03.1.385.ga.643.b.8.be.1‚ê§¬ª

[23:31] *** Manifest0 left
[23:33] *** aborazmeh joined
[23:33] *** aborazmeh left
[23:33] *** aborazmeh joined
[23:34] *** telex left
[23:35] *** patrickz joined
[23:35] *** telex joined
[23:36] *** Manifest0 joined
[23:37] *** Sgeo_ joined
[23:38] *** aborazmeh left
[23:38] *** patrickb left
[23:40] *** Sgeo left
[23:45] *** patrickz left
[23:46] *** sena_kun left
[23:53] *** Manifest0 left
[23:57] *** Manifest0 joined
