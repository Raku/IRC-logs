[00:00] *** Brilpikk3wyn left
[00:02] *** nepugia left
[00:09] *** aborazmeh joined
[00:09] *** aborazmeh left
[00:09] *** aborazmeh joined
[00:30] *** MilkmanDan left
[00:32] *** MilkmanDan joined
[00:44] <lucs> Asking any of you folks using Template::Mojo: do you use the extension '.ep6' for your template files? (mimicking the suggested '.ep' extension for Perl 5's Mojo::Template -- why '.ep', I dunno, eh)

[00:45] <timotimo> emazing

[00:49] <timotimo>  Type check failed in binding to parameter '$blob'; expected Blob but got Failure (&CORE::infix:<orelse>...)

[00:49] <timotimo> o_O

[00:53] *** goon_ joined
[01:18] *** aborazmeh left
[01:21] *** noisegul_ joined
[01:25] *** noisegul left
[01:55] *** aborazmeh joined
[01:55] *** aborazmeh left
[01:55] *** aborazmeh joined
[02:07] *** smash left
[02:23] *** [Coke] joined
[02:23] <[Coke]> FYI: http://news.perlfoundation.org/2019/07/grants-mayjun-2019-votes.html

[02:23] *** [Coke] left
[02:30] *** reach_satori_ joined
[02:30] *** Cabanossi left
[02:32] *** satori__ left
[02:37] *** jaldhar joined
[02:43] *** Cabanossi joined
[02:58] *** aborazmeh left
[03:18] *** kaare__ joined
[03:18] *** kaare_ left
[04:04] *** Brilpikk3wyn joined
[04:05] *** Brilpikk3wyn left
[04:26] *** aborazmeh joined
[04:26] *** aborazmeh left
[04:26] *** aborazmeh joined
[04:56] *** aborazmeh left
[05:33] *** jmerelo joined
[05:33] <jmerelo> releasable6: status

[05:33] <releasable6> jmerelo, Next release will happen when it's ready. R6 is down. At least 1 blocker. 286 out of 667 commits logged (⚠ 1 warnings)

[05:33] <releasable6> jmerelo, Details: https://gist.github.com/da29dbdb9ffd04d81fc80af614a74433

[05:50] *** nadim joined
[05:51] *** sauvin joined
[06:08] *** mniip left
[06:09] *** mniip joined
[06:17] <Geth> ¦ doc: 28e627ddee | (JJ Merelo)++ | doc/Language/typesystem.pod6

[06:17] <Geth> ¦ doc: Fixes formatting problems

[06:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/28e627ddee

[06:17] <synopsebot> Link: https://doc.perl6.org/language/typesystem

[06:26] *** nadim left
[06:37] <jmerelo> OK, survey is over with 202 answers.

[06:44] <jmerelo> The PDF has been hanged in a "release" https://github.com/perl6/p6survey/releases/tag/v2019.06. There's a link to the result spreadsheet here https://github.com/perl6/p6survey

[06:44] <jmerelo> I'll process it a bit more and post results; also comparison to last year.

[06:52] *** nadim joined
[06:52] *** mowcat joined
[07:02] *** antoniog1miz joined
[07:02] *** noisegul_ is now known as noisegul

[07:03] *** patrickb joined
[07:07] *** sno left
[07:15] <woolfy> jmerelo++

[07:16] <antoniog1miz> jmerelo: first link is broken

[07:21] <woolfy> antoniog1miz : it's working fine for me...

[07:22] <woolfy> (maybe your browser takes the . at the end as part of the url)

[07:22] *** domidumont joined
[07:22] *** kensanata joined
[07:26] <antoniog1miz> woolfy: oh you're right. Thanks :)

[07:32] *** mowcat left
[07:36] <jmerelo> woolfy: that's correct. Thanks, woolfy

[07:38] *** dakkar joined
[07:40] <antoniog1miz> what do you think #XXX comment means? 

[07:41] <mst> anything from "need to remember to look at this bit again" to "oh gods the spiders the spiders the spiders are coming for me"

[07:41] <mst> depending on the author

[07:41] <antoniog1miz> oh haahahah

[07:41] <mst> I usually do '# XXX some context goes here cos I'll forget'

[07:41] <antoniog1miz> I think the first one fits 

[07:41] <antoniog1miz> ty :)

[07:59] *** domidumont left
[08:01] *** dominix joined
[08:02] <dominix> hi everyone, I would like to know if there is debian aware dev here-around

[08:03] <dominix> the goal is to have information on the question I ask to myself "is there a perl6 team in debian"

[08:04] <dominix> like there is a perl5 team the manage modules packages across distributions

[08:10] *** Manifest0 left
[08:16] *** domidumont joined
[08:18] *** reach_satori_ left
[08:19] *** Manifest0 joined
[08:24] *** irced joined
[08:25] <irced> yo when I pipe and slurp $*IN i lose the ability to interact i.e. prompt does not wait for input, what gives? (e.g. cat output.txt | my-interactive.pl6)

[08:25] <patrickb> dominix: You did the current debian packages, right?

[08:26] <patrickb> I think currently there are the heroes who took the task upon them to create and publish the debian packages, but there is no official group that I know of.

[08:26] <dominix> ok

[08:27] <patrickb> Robert Lemmen and Dominique Dumont (is that you?) are the two people I know of that did things with debian packaging.

[08:27] *** guifa left
[08:27] <dominix> so the perl6 packages are handled by the perl team whichever it is 5 or 6

[08:28] *** ravenousmoose joined
[08:28] <antoniog1miz> how can I set the path to a default file in a module? I mean:

[08:28] <dominix> I know dominique dumont from the french perlmongueur but that not me

[08:28] <antoniog1miz> I have a module that needs a file, and sometimes that files is not passed so the default is taken

[08:28] <patrickb> dominix: I guess by whoever picks up the torch and does the work.

[08:29] <patrickb> domidumont: Maybe you know more details. ^

[08:29] <antoniog1miz> that default file is located at resources dir, and the code using it is at lib dir

[08:30] <irced> so no one else has experienced this?

[08:32] *** eponym joined
[08:32] *** eponym left
[08:33] *** domidumont left
[08:36] <tadzik> irced: I guess slurp() maybe closes $*IN at the end?

[08:36] <tadzik> hard to say what your my-interactive.pl6 does :)

[08:37] <irced> tadzik: that's a thought. it calls prompt after slurping $*IN.

[08:37] *** sena_kun joined
[08:41] <irced> any other way to effectively slurp piped input?

[08:45] <tadzik> well, the question is "slurp until when"?

[08:45] <tadzik> if you need $*IN later then the answer is clearly not "until the end"

[08:46] *** domidumont joined
[08:46] <irced> ok. I can reframe the question to any ideas on how to capture piped input and then make the script interactive. e.g. piping to more does this.

[08:48] <tadzik> ha

[08:49] <irced> ok bad exampe

[08:49] <tadzik> I think more's interactivity comes from ncurses or equivalent, not from stdin

[08:51] <irced> i suspect anyway that piped input eventually terminates with EOF

[08:51] <irced> but this I would need to investigate

[08:52] <irced> after all, the shell can know when it has finished piping

[08:52] <irced> and it could inform the receiving program some way

[08:52] <irced> unless of course the shell leaves the pipe open, but i do not imagine that is the default

[08:52] <irced> i am using BASH

[08:58] *** Manifest0 left
[08:59] <irced> $*IN.so says False before reading True after.

[08:59] <irced> that is before slurping

[08:59] <irced> $*IN.eof.so

[09:00] *** jasonc joined
[09:01] <irced> now the question is as you referred to is it closed

[09:03] <irced> $*IN.opened.so shows False before reading and True after reading. docs say that when a standard filehandle (native descriptor 2 or lower) once closed cannot be reopened

[09:03] <irced> anyway, it hasn't been closed, i have confirmed it. and also the pipe ends with an eof.

[09:04] *** rindolf joined
[09:04] *** Manifest0 joined
[09:04] <irced> but good thinking anyway tadzik

[09:05] *** reach_satori_ joined
[09:05] <irced> on the side, i also tried getting input after looping on its lines instead of slurping, in case slurp was affecting the filehandle, and the result was the same.

[09:05] <timotimo> irced: you should be able to open /dev/pty or /dev/tty or something and use that for input

[09:05] * irced scratches his chin.

[09:06] <irced> timotimo: thanks I will look at that next!

[09:06] <timotimo> there's this tool "vipe" that slurps its input then gives you a vim with the data and when you exit it spits the data out on stdout; i believe it opens stderr as a tty, i.e. "this is supposed to be an output file descriptor, but in practice it's usually bound to the tty, which is input/output, so fingers crossed!"

[09:07] <tadzik> hehe, good digging :)

[09:08] <irced> but first I am wondering if it is because it may have opened in binary mode...

[09:08] <timotimo> jmerelo: i'm not entirely sure we should just openly display everybody's answers like that? like, the exact form data? at least making the order of answers not the same for every question?

[09:09] <tadzik> maybe it's possible to convince perl6 to not close the input after it sees the EOF

[09:09] <tadzik> and kind of establish a protocol where there could be multiple EOFs

[09:09] <irced> tadzik: it shows it is and remains open after slurping.

[09:09] <tadzik> oh, hm

[09:09] <tadzik> then it should be quite readable imo

[09:10] <tadzik> perhaps perl6 just soft-closes it when it sees an EOF for the first time

[09:10] <tadzik> as in, refuses to keep readingj

[09:11] *** dominix left
[09:13] <antoniog1miz> any help is highly appreciated => https://stackoverflow.com/questions/56849064/relative-path-inside-a-module

[09:13] <irced> timotimo: your suggestion is working. thanks!

[09:16] <timotimo> jmerelo: like, i don't think it said anywhere that the answers you give would be visible to the public like that?

[09:17] *** kensanata left
[09:17] <irced> my $io = '/dev/tty'.IO.open; # then $prompt.getc or i guess whatever your fancy

[09:18] <irced> err, $io.getc but you get the picture.

[09:18] <timotimo> yeah

[09:19] *** irced left
[09:19] *** domidumont left
[09:39] <antoniog1miz> patrickb: thanks for your help!

[09:41] <patrickb> yw

[09:45] *** zakharyas joined
[09:50] *** Manifest0 left
[09:51] *** kensanata joined
[09:56] *** Manifest0 joined
[10:12] *** Manifest0 left
[10:18] *** Manifest0 joined
[10:26] *** ravenousmoose left
[10:29] *** nepugia joined
[10:35] *** antoniog2miz joined
[10:35] <antoniog2miz> I need to pick up a name for the module responsible of taking a Perl6::Documentable::Registry and generate the HTML site

[10:35] <antoniog2miz> suggestions?

[10:36] <antoniog2miz> Registry::To::HTML?

[10:36] <antoniog2miz> (for those who don't know what a Perl6::Documentable::Registry is, is the object that process all pod files in the documentation and generate indexes, etc)

[10:38] *** antoniog1miz left
[10:39] <Geth> ¦ doc: 5c8e873b6c | (JJ Merelo)++ | doc/Type/Match.pod6

[10:39] <Geth> ¦ doc: Merges the two definitions of make

[10:39] <Geth> ¦ doc: 

[10:39] <Geth> ¦ doc: This closes #2878. It's been there for a long time, about time we

[10:39] <Geth> ¦ doc: caught this bug...

[10:39] <synopsebot> Link: https://doc.perl6.org/type/Match

[10:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c8e873b6c

[10:41] <jmerelo> timotimo: It was kinda implicit. If you want me to edit something, I can do it.

[10:41] <jmerelo> timotimo: in general, the results of the survey are published for anyone to see, in the same way we did last year.

[10:52] *** Manifest0 left
[10:57] *** Manifest0 joined
[11:00] *** antoniog2miz left
[11:06] <sena_kun> jmerelo++

[11:12] *** Manifest0 left
[11:15] *** abraxxa1 joined
[11:15] *** abraxxa left
[11:16] *** ravenousmoose joined
[11:17] <jmerelo> sena_kun: thanks!

[11:18] *** Manifest0 joined
[11:18] *** jmerelo left
[11:28] *** Manifest0 left
[11:32] *** dolmen joined
[11:36] *** Manifest0 joined
[11:37] *** nepugia left
[11:45] *** Manifest0 left
[11:46] *** domidumont joined
[11:50] *** Manifest0 joined
[11:53] *** AlexDaniel left
[12:01] *** ravenousmoose left
[12:04] *** dolmen left
[12:04] *** dolmen joined
[12:05] *** AlexDaniel joined
[12:05] <Geth> ¦ doc: pmqs++ created pull request #2879: minor typo & grammar changes

[12:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2879

[12:06] *** domidumont1 joined
[12:09] *** domidumont left
[12:18] <Geth> ¦ doc: 6ee90baf0b | (Paul Marquess)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[12:18] <Geth> ¦ doc: minor typo & grammar changes

[12:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6ee90baf0b

[12:18] <Geth> ¦ doc: c8b064eaa2 | (Paul Marquess)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[12:18] <Geth> ¦ doc: Merge pull request #2879 from pmqs/patch-2

[12:18] <synopsebot> Link: https://doc.perl6.org/language/modules

[12:18] <Geth> ¦ doc: 

[12:18] <Geth> ¦ doc: minor typo & grammar changes

[12:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c8b064eaa2

[12:19] *** mowcat joined
[12:23] *** ravenousmoose joined
[12:32] <tobs> Which package should my module's exceptions go into? X::MyModule or MyModule::X? I seem to recall this came up recently. Is there a best practice?

[12:33] <kawaii> tobs: X::YourModule

[12:35] *** albertferrico joined
[12:36] *** albertferrico left
[12:36] <tobs> kawaii: thanks, I have to admit I was anticipating the other answer :D

[12:37] <Summertime> in a smartmatchy area, (e.g. `when X {}`), is there any practical difference between m// and rx//? other than m// allowing matching-related adverbs?

[12:42] <moritz> no

[12:50] *** ravenousmoose left
[12:53] <AlexDaniel> kawaii: why?

[12:54] <AlexDaniel> tobs: I'd recommend MyModule::X

[12:55] <kawaii> AlexDaniel: it's just how I've always seen it elsewherw

[12:55] <AlexDaniel> greppable6: X::

[12:56] <sena_kun> we use X::Cro, not Cro::X

[12:56] <greppable6> AlexDaniel, 6813 lines, 366 modules: https://gist.github.com/2dbfd9cf73a534515043be9e2a4d4f8b

[12:56] <AlexDaniel> greppable6: class.*X::

[12:57] <greppable6> AlexDaniel, 1263 lines, 209 modules: https://gist.github.com/17c59c0990a818515be4d0ba193249ff

[12:57] *** domidumont1 left
[12:57] <AlexDaniel> tobs: or maybe X::YourModule, seems to be more popular

[12:57] * AlexDaniel files a problem-solving ticket

[12:58] *** kensanata left
[12:59] <AlexDaniel> greppable6: class\s*X::

[13:00] <greppable6> AlexDaniel, 1045 lines, 180 modules: https://gist.github.com/e2cf3062222c4c2bb28f2e3d2a423370

[13:00] *** domidumont joined
[13:00] <AlexDaniel> greppable6: class.*::X::

[13:00] <greppable6> AlexDaniel, 108 lines, 19 modules: https://gist.github.com/ff64469296d20d54e78490a1ea39605c

[13:04] *** dolmen left
[13:04] <Geth> ¦ problem-solving: AlexDaniel self-assigned X::MyModule::Foo or MyModule::X::Foo ? https://github.com/perl6/problem-solving/issues/57

[13:05] *** ravenousmoose joined
[13:08] *** natrys joined
[13:24] *** Manifest0 left
[13:29] *** Manifest0 joined
[13:34] *** Black_Ribbon left
[13:37] *** dogbert17 joined
[13:48] <Summertime> for $someproc.out.lines { s/find/replace/; .say; } # fails, since $_ is immutable

[13:49] <Summertime> what would be the practical way of "preparsing" each line (while still getting to use topical after)?

[13:50] <Summertime> oh nevermind, <-> I'm guessing, just found it

[13:50] <jnthn> for $someproc.out.lines -> $_ is copy { }

[13:51] <jnthn> Though I'd probably just do `.subst('find', 'replace').say` in the loop body :)

[13:51] <Summertime> need the subst before a bunch of when statements, so having it for each would be a bit much

[13:52] <AlexDaniel> Summertime: also S/find/replace/

[13:52] <AlexDaniel> doesn't change the $_ but you can do `say S/find/replace/`

[13:53] <Summertime> more accurate for the usecase: for $someproc.out.lines { s/find/replace/; when A {}; when B {}; ... }

[13:53] <Summertime> or completely accurate: running tail, and then removing timestamps from server logs before working out what to do for each log line

[13:55] *** nadim left
[13:57] <AlexDaniel> .tell jmerelo what's https://github.com/perl6/perl6-type

[13:57] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[13:58] <AlexDaniel> moritz: any news regarding https://github.com/perl6/coding-contest-2019 ?

[13:59] <AlexDaniel> .tell jmerelo also what's https://github.com/perl6/paper

[13:59] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[14:01] <AlexDaniel> timotimo: what's the status of https://github.com/perl6/cpandatesters.perl6.org ? last update dec 2015…

[14:01] *** dolmen joined
[14:02] <AlexDaniel> domidumont, robertle, El_Che, nine: do any of you use https://github.com/perl6/os-build ?

[14:02] <AlexDaniel> .tell robertle https://colabti.org/irclogger/irclogger_log/perl6?date=2019-07-02#l273

[14:02] <yoleaux> AlexDaniel: I'll pass your message to robertle.

[14:02] *** MasterDuke left
[14:03] <El_Che> releasable6: status

[14:03] <releasable6> El_Che, Next release will happen when it's ready. R6 is down. At least 1 blocker. 286 out of 667 commits logged (⚠ 1 warnings)

[14:03] <releasable6> El_Che, Details: https://gist.github.com/b1f1cf8bb03744001f8e86a60ac36e2d

[14:05] *** ravenousmoose left
[14:05] <AlexDaniel> https://github.com/perl6/rakudo.de what's that :)

[14:05] *** MilkmanDan left
[14:06] *** jasonc left
[14:06] *** nadim joined
[14:07] *** zakharyas left
[14:07] *** mowcat left
[14:08] *** MilkmanDan joined
[14:08] *** antoniog1miz joined
[14:10] *** jaldhar left
[14:11] *** jaldhar joined
[14:15] *** natrys left
[14:19] *** natrys joined
[14:19] <El_Che> AlexDaniel: the german version of the rakudo compiler. Word is it's very efficient

[14:20] *** abraxxa1 left
[14:21] <moritz> AlexDaniel: the only news is that I don't seem to find enough time, motivation and contributors to pull it off :(

[14:28] <Geth> ¦ doc: 5181c55263 | Coke++ | 2 files

[14:28] <Geth> ¦ doc: whitespace

[14:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5181c55263

[14:28] <tobs> AlexDaniel: also thanks. X::* was more popular in my mind as well. MyModule::X avoids that split in the modules provided by a distribution. Everything is below that one package.

[14:29] <AlexDaniel> tobs: that sounds very appealing to me :)

[14:34] *** Manifest0 left
[14:34] *** nadim left
[14:39] *** Manifest0 joined
[14:41] *** pmurias joined
[14:43] *** Manifest0 left
[14:48] *** jmerelo joined
[14:48] <jmerelo> squashable6: status

[14:48] <yoleaux> 13:57Z <AlexDaniel> jmerelo: what's https://github.com/perl6/perl6-type

[14:48] <yoleaux> 13:59Z <AlexDaniel> jmerelo: also what's https://github.com/perl6/paper

[14:48] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 2 days and ≈13 hours (2019-07-06 UTC-14⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:49] <jmerelo> .tell AlexDaniel the first is what eventually became Perl6::Typegraph, recently released. Can be deleted

[14:49] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[14:50] <jmerelo> .tell AlexDaniel the second is a repo to write a paper on Perl 6 architecture. Maybe we should leave that one for the time being.

[14:50] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[14:51] *** Manifest0 joined
[14:52] <AlexDaniel> .

[14:52] <yoleaux> 14:49Z <jmerelo> AlexDaniel: the first is what eventually became Perl6::Typegraph, recently released. Can be deleted

[14:52] <yoleaux> 14:50Z <jmerelo> AlexDaniel: the second is a repo to write a paper on Perl 6 architecture. Maybe we should leave that one for the time being.

[14:52] <AlexDaniel> jmerelo: delete it yourself, please :)

[14:53] *** domidumont left
[14:54] *** nadim joined
[14:57] <jmerelo> AlexDaniel: transferred it to me. You never know...

[14:57] <AlexDaniel> jmerelo: 👍

[14:57] <AlexDaniel> jmerelo: maybe do the same for the paper repo :)

[15:00] *** rindolf left
[15:01] <jmerelo> AlexDaniel: OK

[15:03] *** rindolf joined
[15:06] *** reach_satori_ left
[15:09] *** Manifest0 left
[15:14] *** Manifest0 joined
[15:18] *** pmurias left
[15:25] <Xliff> jnthn: Do you have any idea when you will be able to look into https://github.com/jnthn/p6-io-socket-async-ssl/issues/44?

[15:28] *** dolmen left
[15:28] *** molaf joined
[15:33] *** Manifest0 left
[15:36] <AlexDaniel> any way I can put an arbitrary string into a match object from within a regex?

[15:38] *** Manifest0 joined
[15:39] *** patrickb left
[15:42] *** abraxxa joined
[15:47] *** Manifest0 left
[15:47] <jnthn> Xliff: Towards the end of this week at the earliest.

[15:47] *** antoniog1miz left
[15:49] <jmerelo> AlexDaniel: what do you mean exactly? Something like using "make"? You probably can... You can insert any kind of code into a regex

[15:49] <AlexDaniel> m: ‘xyz’ ~~ /{$/<foo> = ‘bar’}/; say $/

[15:49] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «Cannot modify an immutable Str (Nil)␤  in block <unit> at <tmp> line 1␤␤»

[15:50] <AlexDaniel> jmerelo: something like this ↑

[15:50] <jmerelo> m: say "foobar" ~~ /foo { make "bar }/; say $/.perl

[15:50] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3bar" ~~ /foo { make "bar }/; say $/.perl7⏏5<EOL>␤    expecting …»

[15:50] <jmerelo> m: say "foobar" ~~ /foo { make "bar" }/; say $/.perl

[15:50] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «｢foo｣␤Match.new(hash => Map.new(()), list => (), pos => 3, from => 0, made => "bar", orig => "foobar")␤»

[15:50] <jmerelo> AlexDaniel: something like ^^^^

[15:50] <AlexDaniel> how do I access it though

[15:51] <jnthn> .made

[15:51] <jmerelo> AlexDaniel: $/.made

[15:51] <AlexDaniel> riight

[15:51] <AlexDaniel> thanks

[15:52] <jmerelo> AlexDaniel: sure :-)

[15:52] *** Manifest0 joined
[16:00] <AlexDaniel> m: || False || say 50

[16:00] <camelia> rakudo-moar d4ceb97e0: ( no output )

[16:00] <AlexDaniel> I guess it does something else :)

[16:02] <jnthn> Calls the prefix operator

[16:07] <Xliff> jnthn: Thanks!

[16:11] *** mowcat joined
[16:17] *** Manifest0 left
[16:24] *** Manifest0 joined
[16:24] *** kiwi_95 joined
[16:26] *** dolmen joined
[16:26] *** zakharyas joined
[16:28] *** MasterDuke joined
[16:29] *** zakharyas1 joined
[16:30] *** zakharyas2 joined
[16:31] *** zakharyas left
[16:33] *** zakharyas1 left
[16:39] *** zakharyas2 left
[16:43] *** abraxxa left
[16:44] *** freackout joined
[16:46] <freackout> hi guys i know there are good ide's for perl6 like comma, atom and vscose, but is there a regex checker specifically for perl6 and not perl 5

[16:46] <freackout> vs code

[16:47] <sena_kun> freackout, regex checker as in sites like https://regexr.com/ and the like or a tool that does linting?

[16:48] <freackout> like regexr or similar but perl6 has slightly diff syntax thus how do i know its being checked is 6 not 5

[16:49] <freackout> i notice comma perl6 ide has great linting (ie shows hints ect, is that lining)

[16:50] <sena_kun> freackout, I haven't heard about such thing, but it is a matter of writing a nice UI app and hosting it, I guess. Though it'll mainly be web boilerplate. If you are interested in writing it... :)

[16:51] <freackout> would love too.. but probably take me too long as it'll come out when i'm in next life

[16:52] <freackout> should that make sence as they are slightly different

[16:53] *** domidumont joined
[16:54] <freackout> guess i would have to try something even if its just highlight black n white hey..as a starter

[16:55] <sena_kun> I think it can be started with a simple matcher, you just grab a regex and text, apply it and align the results nicely. though you must be very careful when it comes to sandbox restrictuion, as Perl 6 regexes can execute arbitrary code

[16:55] <freackout> one more question do i need to register on this channel as i cant see too meny convo's

[16:57] <AlexDaniel> freackout: it's just quiet right now :)

[16:57] <sena_kun> freackout, you don't need to when it comes to irc channels. you can register your accaunt on the irc server itself, but even this is not really necessary. by not seeing too much you mean that the people are not chatting constantly like in more modern IM?

[16:57] *** dakkar left
[17:00] <freackout> yup,,got ya...once a old timer on yahoo chat before they changed it to pirate boat,, lost all linux chat rooms, used to be able to \cat :- all answers like copy past files ect was great before they changed it..havent really irc since years ago...old days where better

[17:02] *** kiwi_95 left
[17:04] *** domidumont left
[17:05] <Xliff> frackout: I have written something like that but it depends on code that's not yet released.

[17:05] <Xliff> https://github.com/Xliff/p6-VisualGrammar

[17:09] <freackout> Xliff thanks for the link will check it out..(been on phone xx)

[17:12] <freackout> will also try to get gist of code and maybe add to the commits (something to do hey Thanks).

[17:15] *** noisegul left
[17:17] *** Manifest0 left
[17:17] <Xliff> Sure thing! I would love it if it could act as both a grammar and a basic regex explorer.

[17:18] *** dolmen left
[17:21] *** domidumont joined
[17:21] <freackout> seems just a case of putting the pair together and add the syntax.. cant see why this has not been implemented in like last 2 years at least... i know its new maybe larry's gang have something coming out somewhere...;)

[17:23] *** Manifest0 joined
[17:24] *** dolmen joined
[17:24] *** dolmen left
[17:24] *** sno joined
[17:34] <Xliff> I think I know how to do it, it's just that for regexes, you don't have much of a way to figure out internal error conditions. jnthn came up with a nice tracer for grammars.

[17:34] *** freackout left
[17:45] *** molaf left
[17:47] *** nepugia joined
[17:47] <caa51h> :3

[17:47] <caa51h> oops sorry

[17:52] *** jaldhar left
[17:56] *** Xliff left
[17:57] *** domidumont left
[17:59] *** molaf joined
[18:00] <Geth> ¦ whateverable: 0a2861682e | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[18:00] <Geth> ¦ whateverable: Make Notable not create new topics on the fly

[18:00] <Geth> ¦ whateverable: 

[18:00] <Geth> ¦ whateverable: Resolves #344. Also a little bit of refactoring.

[18:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/0a2861682e

[18:14] *** noisegul joined
[18:16] *** nadim left
[18:18] *** noisegul left
[18:23] *** Maylay joined
[18:26] *** sauvin left
[18:26] <Geth> ¦ ecosystem: kjkuan++ created pull request #463: Update META6.json

[18:26] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/463

[18:27] *** robertle joined
[18:36] *** nadim joined
[18:39] *** jmerelo left
[18:41] <MasterDuke> bunch of commentary here about math operators and creating new ones and such. might be an appropriate perl6 comment to be made. https://news.ycombinator.com/item?id=20325638

[18:49] *** Cabanossi left
[18:50] *** Manifest0 left
[18:57] *** Manifest0 joined
[19:01] *** Cabanossi joined
[19:06] *** dolmen joined
[19:07] *** MilkmanDan left
[19:09] *** MilkmanDan joined
[19:12] <xinming_> in documentation about hyper/race, It says we can't use the same var inside the loop, What about the hash inside the loop?

[19:13] <xinming_> something like    my %h; my @a = hyper for 1..10 { %h{$_} = some_computation(); }      <--- Will this be safe to use hyper or race?

[19:17] <AlexDaniel> xinming_: no

[19:18] <moritz> a hash is also a variable

[19:18] <AlexDaniel> m: my %h; my @a = hyper for (1..1000000) { %h{$_} = rand }; say %h.elems

[19:18] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «(signal SEGV)»

[19:18] <AlexDaniel> demonstration :)

[19:19] *** Kaiepi left
[19:20] <AlexDaniel> very easy to fix though

[19:20] <AlexDaniel> m: my %h; my $h-lock = Lock.new; my @a = hyper for 1..100000 { my $x = rand; $h-lock.protect: { %h{$_} = $x } }; say %h.elems

[19:20] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «100000␤»

[19:20] <AlexDaniel> m: my %h; my $h-lock = Lock.new; my @a = hyper for 1..1000000 { my $x = rand; $h-lock.protect: { %h{$_} = $x } }; say %h.elems

[19:21] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «1000000␤»

[19:26] <MasterDuke> huh, i thought that had been made to just not work instead of causing a segfault

[19:27] *** adu left
[19:28] *** Manifest0 left
[19:28] *** kensanata joined
[19:33] *** Manifest0 joined
[19:38] *** Cabanossi left
[19:41] *** Cabanossi joined
[19:45] <xinming_> moritz: Yea, I understand that, What it actualy confuse me is, Why should we have the limitation for hash too,

[19:45] <moritz> xinming_: why not?

[19:45] *** pmurias joined
[19:45] <xinming_> hmm, we can use Lock to get rid of this.

[19:46] <xinming_> Then, instead of SEGV, in the future, will it be an Exception for attempt to use var in hyper/race block?

[19:51] *** dolmen left
[19:51] *** molaf left
[19:53] *** Manifest0 left
[19:55] *** Cabanossi left
[19:59] *** Manifest0 joined
[20:00] *** adu joined
[20:04] *** kaare__ left
[20:04] *** kaare__ joined
[20:04] *** dolmen joined
[20:05] *** Cabanossi joined
[20:05] *** adu left
[20:06] *** mowcat left
[20:06] *** adu joined
[20:09] *** dolmen left
[20:13] *** pecastro joined
[20:19] *** Manifest0 left
[20:21] *** Kaiepi joined
[20:24] *** Manifest0 joined
[20:25] *** dolmen joined
[20:34] *** Black_Ribbon joined
[20:34] *** sono__ joined
[20:35] *** Manifest0 left
[20:37] *** molaf joined
[20:39] *** robertle left
[20:41] *** Manifest0 joined
[20:45] <sena_kun> xinming_, I think you may be interesting in https://6guts.wordpress.com/2014/04/17/racing-to-writeness-to-wrongness-leads/

[20:45] *** sono__ left
[20:55] *** pmurias left
[20:56] *** pmurias joined
[20:56] *** kensanata left
[21:06] *** Manifest0 left
[21:09] *** Kaiepi left
[21:10] *** Manifest0 joined
[21:11] *** Kaiepi joined
[21:13] *** patrickb joined
[21:15] *** dolmen left
[21:16] *** dolmen joined
[21:21] *** maettu left
[21:21] *** MilkmanDan left
[21:22] *** MilkmanDan joined
[21:35] <AlexDaniel> MasterDuke: I don't remember that

[21:36] *** dolmen left
[21:46] *** Manifest0 left
[21:51] *** Manifest0 joined
[21:53] <ugexe> xinming_ you could use fixed size array

[21:53] <ugexe> m: my @b[1000]; my @a = hyper for (^1000) { @b[$_] = $_ => rand }; my %h = @b.hash; say %h.elems

[21:53] <camelia> rakudo-moar d4ceb97e0: OUTPUT: «1000␤»

[21:53] <ugexe> that should be thread safe

[21:54] <timotimo> adding new keys is dangerous in hashes, adding stuff to an array is dangerous

[21:54] <timotimo> those can cause segfaults in parallel code

[21:55] <ugexe> adding stuff to a variable size array is dangerous

[21:56] <timotimo> yes, by adding stuff i mean make it grow

[21:56] *** reach_satori_ joined
[22:04] *** Manifest0 left
[22:08] *** MasterDuke left
[22:09] *** Manifest0 joined
[22:11] *** |oLa| left
[22:12] <xinming_> ugexe: Ok, Thanks. Actually, Then, what will be the correct behavior instead of segv when user uses something like that?

[22:13] <xinming_> I just saw that   'There should be no read or write access to the same data structure inside the loop.'    <--- Why is read also dangerous?

[22:13] *** Manifest0 left
[22:14] *** tune joined
[22:15] <xinming_> I think, Maybe it's because when we try to read the same var at the same time, and cocerce of value happened

[22:16] <timotimo> well, we used to have autovivifying attribute slots in objects

[22:16] <timotimo> so doing that from two threads in pparallel could be dangerous

[22:17] <timotimo> but in general reading from a datastructure should be safe in threaded code; just not necessarily always

[22:18] *** patrickb left
[22:20] <xinming_> timotimo: Yea, I just read that post, and understand why we need to be careful to use hyper/race

[22:20] *** Manifest0 joined
[22:21] <xinming_> timotimo: But do you think that the segfault return would be wrong for the integerpreter?

[22:21] <timotimo> ideally pure perl6 code will never segfault

[22:21] <xinming_> At least, We should have have some info to tell user about and exit gracefully.

[22:21] <timotimo> there is a way for us to not segfault when concurrently doing stuff with arrays and hashes

[22:22] <timotimo> it's just a little extra work, and it'll still cause data loss when you do it wrong

[22:22] <xinming_> Ok, THanks, then, I understand.

[22:23] <timotimo> figuring out it happens requires making every single hash/array access slower :(

[22:23] <xinming_> timotimo: So, as far as I can understand,    hyper for xxx { .is-prime; }        <---   here, we call .is-prime is ok, since they are operating on $object in xxx in parallel.

[22:24] <timotimo> right

[22:24] <timotimo> hyper takes care of pulling all data from xxx out in one thread and splitting it up into batches

[22:24] <timotimo> those batches then land on the different threads to be done in parallel

[22:24] <xinming_> So, in this case, We should also need to avoid that $object to access the shared data, right?

[22:24] *** vike left
[22:25] <xinming_> I think my thought is right.

[22:25] <xinming_> then, We'll need lock.

[22:25] <xinming_> timotimo: If that'll make access array/hash slow, Let's segfault. :-)

[22:25] <xinming_> and ask people to read the doc to know they are doing wrong.

[22:26] <timotimo> they can use memory safety checking stuff like asan or valgrind

[22:32] *** Manifest0 left
[22:32] *** Kaiepi left
[22:32] *** Kaiepi joined
[22:34] *** nadim left
[22:36] *** Manifest0 joined
[22:43] *** rindolf left
[22:48] *** vike joined
[22:48] *** natrys left
[23:06] *** pmurias left
[23:09] <xinming_> Is there a module where we can use so hashes can have relations with dbm file kind of thing.

[23:09] *** pecastro left
[23:10] <xinming_> something like NDBM_File  in perl5.

[23:10] <xinming_> is there a already sollution in perl6 for this?

[23:14] *** sena_kun left
[23:23] <AlexDaniel> xinming_: maybe Red?

[23:29] *** Manifest0 left
[23:34] *** Manifest0 joined
[23:41] *** Manifest0 left
[23:45] *** nepugia left
[23:46] *** Manifest0 joined
[23:53] *** Manifest0 left
[23:59] *** Manifest0 joined
