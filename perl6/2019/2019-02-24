[00:08] *** matthew[m] is now known as Matthew[m]

[00:36] *** alnk left
[00:39] *** alnk joined
[00:56] *** zacts joined
[01:10] *** zachk left
[01:14] *** choiboi joined
[01:19] *** choiboi left
[01:22] *** choiboi joined
[01:22] *** choiboi left
[01:23] *** choiboi joined
[01:26] *** zacts left
[01:27] *** choiboi left
[02:14] *** mikfire joined
[02:20] *** molaf left
[02:29] *** grayrider joined
[02:29] <Elronnd> is it possible to call into perl6 functions from c?

[02:33] *** molaf joined
[02:44] *** grayrider left
[03:30] *** netrino left
[03:38] *** mikfire left
[03:40] *** Cabanossi left
[03:42] *** mahafyi left
[03:54] *** Cabanossi joined
[04:09] *** ferreira left
[04:29] *** zacts joined
[04:31] *** zacts left
[04:37] *** zacts joined
[04:56] *** zacts left
[05:30] *** vike left
[05:40] *** Cabanossi left
[05:41] *** zacts joined
[05:52] *** Cabanossi joined
[05:53] *** cpage_ joined
[05:56] *** cpage left
[05:56] *** cpage_ is now known as cpage

[06:21] *** zacts left
[07:13] *** zacts joined
[07:28] *** nasqum joined
[07:33] *** rindolf joined
[07:52] *** molaf_ joined
[07:53] *** vike joined
[07:54] *** molaf left
[07:59] *** kurahaupo_ joined
[07:59] *** kurahaupo left
[08:00] *** kurahaupo_ left
[08:00] *** kurahaupo joined
[08:08] *** domidumont joined
[08:16] *** kurahaupo left
[08:16] *** kurahaupo joined
[08:16] *** kurahaupo left
[08:17] *** kurahaupo joined
[08:28] *** sena_kun joined
[08:33] <moritz> yes, that's what Inline::Perl6 does

[08:34] *** kurahaupo left
[08:34] *** kurahaupo_ joined
[08:34] *** kurahaupo_ left
[08:35] *** kurahaupo joined
[08:36] *** aindilis left
[08:37] *** domidumont left
[08:38] *** aindilis joined
[08:38] <chee> is there somewhere i can read the motivation behind the design decision of perl 6's `use` lookup, and why it is the way it is instead of something like file paths

[08:38] *** domidumont joined
[08:40] <Geth> ¦ doc: 76c40f7361 | (JJ Merelo)++ | doc/Language/control.pod6

[08:40] <Geth> ¦ doc: Reindexes with orwith without

[08:40] <Geth> ¦ doc: 

[08:40] <Geth> ¦ doc: Also some rephrasing here and there. Closes #2633

[08:40] <Geth> ¦ doc: Apparently the problem was it was indexing from a secondary page and creating a tertiary page. Indexing is always mysterious.

[08:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/76c40f7361

[08:40] <synopsebot> Link: https://doc.perl6.org/language/control

[09:02] *** kurahaupo left
[09:02] *** kurahaupo_ joined
[09:02] *** kurahaupo_ left
[09:03] *** kurahaupo joined
[09:06] *** kurahaupo left
[09:07] *** kurahaupo joined
[09:13] *** kurahaupo left
[09:14] *** kurahaupo joined
[09:49] *** kurahaupo left
[09:50] *** kurahaupo_ joined
[09:50] *** kurahaupo_ left
[09:50] *** kurahaupo joined
[10:04] *** dct joined
[10:09] *** dct left
[10:44] *** wi15ht joined
[10:46] *** w17t left
[10:51] <kybr> i was looing into "no strict" and i noticed that sigilless variables don't work. is that because that work has not been done or because there's some good reason not to allow it.

[10:58] <moritz> kybr: it can't work

[10:59] <moritz> the long answer is that Perl 6 uses a predictive parser, so it always knows whether to expect a term or an operator

[11:00] <moritz> when it parses an identifier (without a sigil in front), it looks into its symbol table. If it's a known term (like a type or a constant), it expects an operator; otherwise, it assumes it's a function name, and expects a term

[11:01] <moritz> so, if you write  newname = 42, and newname hasn't been declared before, perl 6 *has* to parse `newname` as a function call, turing the = after it immediately into a syntax error

[11:01] <moritz> there might be ways to fudge around that, but IMHO they are not worth it making the language much more complicated, for a such rarely-used feature such as "no strict"

[11:01] <moritz> s/turing/turning/

[11:05] <kybr> moritz: thanks. 

[11:21] *** kurahaupo_ joined
[11:23] <discord6> <Vendethiel> moritz: immediately into a syntax error? What if the function returns a container? :P

[11:25] *** kurahaupo left
[11:29] <kybr> i'm working more with uncode text and i notice that different terminals, editors, ... environments exhibit odd behaviour whensing unicode characters. moving the cursor over some characters changes their appearance, deleting some characters takes a couple keystrokes (not just one). characters have varying widths, so in a monospace context like most source code, they sometimes overlap with other characters.

[11:29] <kybr> there's more. i'm sure you'all know what i'm talking about. what's the story? is there somewhere i can read abou this stuff? 

[11:36] <lizmat> kybr: you could consider using a Perl 6 IDE like commaide.com

[11:40] *** ravenousmoose joined
[11:40] *** ravenousmoose left
[11:47] <moritz> Vendethiel: if a function returns a container, you have to assign to it as fun() = ...; (parens are important here to unconfuse the parser)

[11:51] <discord6> <Vendethiel> Alright :)

[11:55] <kybr> lizmat: interesting. thanks. i was wondering how one would do things like code completion with a language like perl6.... you'd need a parser for broken perl6!

[11:55] <kybr> it looks like it's 135/year to even try it.

[11:56] <lizmat> kybr: don't despair... the free community edition is to be released soon, if I understand jnthn correctly

[11:57] <sena_kun> kybr, community version will be released "soon"(well, reiavitely) which will be free as a beer. If you will like it, you can sponsor it. :)

[11:57] <sena_kun> *relatively

[11:57] <kybr> i'm excited. thanks. 

[11:58] <sena_kun> I hope we will make it this month, but cannot promise.

[12:05] <El_Che> sena_kun: keep up the good work.

[12:05] <El_Che> I wonder what will be in the free edition and what in de complete one

[12:05] <sena_kun> El_Che, thanks! Cool major features come for the next release. :)

[12:05] <El_Che> the question "Why is the parser based on the Perl 6 grammar rather than being the Perl 6 grammar itself?" in the faq looks promising

[12:06] <El_Che> "Finally, we don't try to run `BEGIN`-time code, which a real Perl 6 parser would."

[12:06] <sena_kun> re features set: well, it's yet to be decided.

[12:06] <El_Che> Is this a intelliJ-java thing of a separate process? (eg available to vim)

[12:06] <El_Che> like the road MS is taking

[12:06] <El_Che> the language server thing

[12:07] <sena_kun> hmm, what?

[12:07] <sena_kun> everything is intellij-based, so it's java.

[12:07] <sena_kun> and cannot be really adapted well to other editors.

[12:08] <El_Che> sena_kun: some program use a standalone server where the client can send stuff for validation: https://langserver.org/

[12:09] <chee> a really good perl6 language server would be so great.

[12:10] <sena_kun> El_Che, no, Comma is a thing in itself, so no "scallability" of this sort.

[12:10] <sena_kun> at least with current plans I am aware of.

[12:11] <El_Che> sena_kun: yeah, I get that, I use IntelliJ myself. But you never know the design choices that were made for a new product

[12:19] *** netrino joined
[12:27] <El_Che> sena_kun: anyway, looking fwd to it

[12:27] <sena_kun> \o/

[12:29] <sena_kun> I also should start designing means for Cro::LDAP, but just too tired with things now, so it moves further into late March or something like that. :(

[12:29] <timotimo> having seen what the intellij code offers in terms of "you don't have to build everything yourself", it'd be a *lot* of work to take what comma has and turn it into a language server

[12:29] <timotimo> unless of course you take a whole intellij idea and just make the GUI invisible

[12:29] <timotimo> which IIRC is how the eclipse-emacs thing works?

[12:38] *** SCHAPiE left
[12:39] <El_Che> sena_kun: Cro::LDAP?

[12:39] <El_Che> a client?

[12:39] <sena_kun> a protocol.

[12:39] <sena_kun> I suspect client will be there too, along with means to plug-in a server.

[12:40] <El_Che> net::ldap is a big miss in perl6

[12:40] <El_Che> that would be great

[12:40] <sena_kun> https://github.com/Altai-man/cro-ldap <- currently, only types are implemented(not counting grammars that have to be written) and https://github.com/Altai-man/cro-ldap/blob/master/t/01-basic.t works.

[12:41] <sena_kun> El_Che, you may be not, but I remember I can ping you if help with e.g. usage patterns will be needed. ;)

[12:44] *** SCHAPiE joined
[12:50] *** SCHAPiE left
[12:55] <El_Che> sena_kun: sure

[12:55] *** SCHAPiE joined
[12:56] *** netrino_ joined
[12:56] *** jmerelo joined
[12:56] <jmerelo> Hi again

[12:56] <yoleaux> 23 Feb 2019 13:21Z <AlexDaniel> jmerelo: I renamed “Blocker” label in the doc repo to “Top Priority” so that we don't get that confused with rakudo release process

[12:56] <jmerelo> .tell AlexDaniel no problem.

[12:56] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[12:56] <sena_kun> jmerelo, o/

[12:56] <jmerelo> Hi, sena_kun 

[12:57] *** netrino left
[13:03] <jmerelo> releasable6: status

[13:03] <releasable6> jmerelo, Next release will happen when it's ready. 3 blockers. 262 out of 313 commits logged

[13:03] <releasable6> jmerelo, Details: https://gist.github.com/dbdec862ad8d93d13ab4c934043af9c9

[13:05] *** volkov joined
[13:12] *** lucasb joined
[13:34] *** domidumont left
[13:36] *** domidumont joined
[13:40] *** volkov left
[13:41] *** jmerelo left
[13:42] *** kent\n left
[13:42] *** mowcat joined
[13:48] <AlexDaniel> .

[13:48] <yoleaux> 12:56Z <jmerelo> AlexDaniel: no problem.

[13:54] *** kent\n joined
[14:10] *** kurahaupo_ left
[14:11] *** kurahaupo joined
[14:13] *** rindolf left
[14:45] *** ravenousmoose joined
[14:47] <kybr> so, i look forward to trying Comma IDE, but i would still like to know more about difficulties with unicode in code editors and terminals (i posted aabout it earlier).

[14:49] <MasterDuke> kybr: difficulties in general, or with perl6 in particular?

[14:49] <AlexDaniel> kybr: which text editors and editors are we talking about exactly?

[14:51] <MasterDuke> https://docs.perl6.org/language/unicode_entry has some info about how to enter unicode characters into different editors

[14:51] <AlexDaniel> kybr: oops, “and terminals” I meant

[14:52] *** kurahaupo left
[14:52] *** kurahaupo joined
[14:53] *** kurahaupo left
[14:53] *** kurahaupo joined
[14:53] <kybr> generally. it comes up because i'm working with unicode because i'm using perl6, but i've seen it before. iTerm2+vim, hyper.is+vim, chrome+codemirror.. it each case, i'm using a monospace font. i see characteers overlap, backspace sometimes does not delete a character, moving the cursor will change how a character is rendered

[14:54] <kybr> i looked though this: https://www.cl.cam.ac.uk/~mgk25/unicode.html

[14:55] <AlexDaniel> kybr: is backspace not deleting a character only an issue with skin toned emojis and other multi codepoint graphemes?

[14:55] <nine> Finally, after years of fretting about the API, Inline::Perl5 supports calling P5 methods in scalar context!

[14:56] <nine> And it turned out to be surprisingly OK: $p5obj.foo(Scalar, "foo", "bar")

[14:57] <MasterDuke> kde just recently fixed a bug with displaying wide glyphs in konsole https://bugs.kde.org/show_bug.cgi?id=401298

[14:58] <El_Che> kybr: have you tried to change the font of iterm2?

[14:59] <MasterDuke> nine++ and this gets you that speedup in Tux's csv benchmark you mentioned earlier?

[15:00] <kybr> AlexDaniel: maybe. i guess i'll make some gifs to show just what i mean.

[15:00] <nine> MasterDuke: no, but it points in the right direction. For speeding up that benchmark I tried implementing void context, too. I'm not sure about the interface though. I went with $p5obj.foo(Mu, "foo")

[15:04] <AlexDaniel> kybr: to be honest I don't understand how something can be that broken

[15:04] <kybr> El_Che: i've played with fonts, but i have not done a careful search

[15:04] <AlexDaniel> kybr: let me explain…

[15:05] <AlexDaniel> kybr: some characters are wide and some characters are narrow (full-width and half-width). So even if you have a fixed-width font, it doesn't mean that all characters will take the same width

[15:05] *** gfldex_ is now known as gfldex

[15:05] <AlexDaniel> kybr: however, if your editor renders characters on top of each other when it shouldn't, then your editor is utter crap… :)

[15:06] <AlexDaniel> kybr: then, some graphemes are composed of more than one codepoint

[15:06] <kybr> half-width is the size of a single monospace character and full-width is two of those?

[15:07] <AlexDaniel> kybr: depends on which character you have in mind

[15:07] <AlexDaniel> but leaving all details aside: yes

[15:10] <kybr> thanks for the time. i know that this is sort of off topic. where's a better place to ask? 

[15:10] <AlexDaniel> kybr: it's the right place :)

[15:11] <AlexDaniel> kybr: ok continuing on graphemes, for example you can have a thumbs up emoji with a skin tone, like: 👍🏾

[15:11] <AlexDaniel> kybr: usually it will be rendered as a single emoji, even though it is two codepoints

[15:12] <AlexDaniel> kybr: now, text editors may do different things when you hit backspace there

[15:13] <AlexDaniel> some will delete just the last codepoint, so that'd be the skin tone, so the emoji will turn toneless but the character will remain where it is

[15:13] <AlexDaniel> but arguably the right behavior is to delete the whole emoji (both codepoints)

[15:13] <AlexDaniel> IMO both are useful behaviors

[15:14] <AlexDaniel> However! If your text editor does *something else*, then it is utter crap :)

[15:14] <AlexDaniel> for example if it takes multiple backspace presses to delete a single codepoint, that's bad

[15:15] *** domidumont left
[15:17] *** molaf_ left
[15:19] *** abraxxa joined
[15:26] <kybr> is there a way to ask a character if it is full or half width in perl6?

[15:33] <MasterDuke> unicodable6: 👍🏾

[15:33] <unicodable6> MasterDuke, U+1F44D THUMBS UP SIGN [So] (👍)

[15:33] <unicodable6> MasterDuke, U+1F3FE EMOJI MODIFIER FITZPATRICK TYPE-5 [Sk] (🏾)

[15:33] <MasterDuke> .u 👍🏾

[15:33] <yoleaux> U+1F44D THUMBS UP SIGN [So] (👍)

[15:33] <MasterDuke> unicodable6: help

[15:33] <unicodable6> MasterDuke, Just type any Unicode character or part of a character name. Alternatively, you can also provide a code snippet. # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Unicodable

[15:34] <MasterDuke> unidump: 👍🏾

[15:34] <unicodable6> MasterDuke, https://gist.github.com/9f97c9379f33a324e5e03d4ff3425abb

[15:37] <kybr> interesting.. on this gist (rendered in chrome) i see that you are using a dark skin tone thumbs up, but here (hyper.is + mosh + tmux + weechat) i see a light skin tone thumbs up.

[15:37] *** wi15ht left
[15:39] *** ravenousmoose left
[15:39] <timotimo> in my terminal i see the yellow thumbs up followed by a square in the skin tone

[15:39] <timotimo> also, font and terminal can disagree on whether a character is supposed to be double-width or not

[15:40] <timotimo> which is super extra fun

[15:40] <kybr> also, i find myself doing control-l frequently to clean up the screen when random characters show up.

[15:41] *** wi15ht joined
[15:41] <timotimo> what versions of software are involved in your setup?

[15:41] <timotimo> maybe an update in the right place could clear things up

[15:42] <kybr> or downgrading to a less beta setup. 

[15:43] *** kurahaupo left
[15:43] *** kurahaupo joined
[15:43] <kybr> teminal: Hyper 3.0.0-canary.8 (canary) os: macOS 10.14.4 Beta (18E194d)

[15:43] <timotimo> or maybe even changing a font

[15:44] <timotimo> how much do you have to pay to get a mac os beta version?

[15:44] <kybr> no dollars. you only pay in anxiety.

[15:44] <timotimo> ha

[15:46] <AlexDaniel> kybr: not really

[15:46] <AlexDaniel> kybr: (is it full or half width?)

[15:47] <AlexDaniel> kybr: you can look at East_Asian_Width property, but many times it doesn't give a definite answer

[15:48] <AlexDaniel> timotimo: double-width xDD

[15:48] <AlexDaniel> timotimo: I don't think it's a thing xD either half-width or full-width

[15:48] <kybr> the thumbs up looks full width: +yoleaux | U+1F44D THUMBS UP SIGN [So] (👍)

[15:49] <timotimo> u: double

[15:49] <unicodable6> timotimo, U+00AB LEFT-POINTING DOUBLE ANGLE QUOTATION MARK [Pi] («)

[15:49] <unicodable6> timotimo, U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK [Pf] (»)

[15:49] <unicodable6> timotimo, 443 characters in total: https://gist.github.com/fb0a16919d78aad56ad4317ebea409b2

[15:50] <timotimo> u: width

[15:50] <unicodable6> timotimo, U+200B ZERO WIDTH SPACE [Cf] (control character)

[15:50] <unicodable6> timotimo, U+200C ZERO WIDTH NON-JOINER [Cf] ( ‌)

[15:50] <unicodable6> timotimo, 236 characters in total: https://gist.github.com/32a954328fa07433845fe6580b67c7ab

[15:50] <timotimo> OK, fullwidth and halfwidth

[15:50] <AlexDaniel> heh they have a Venn diagram: https://www.unicode.org/reports/tr11/#Set_Relations

[15:50] <kybr> i switched to iterm and the thumbs up is treated correctly. full-width.

[15:51] <AlexDaniel> oh yeah, and of course, zero width… yet another thing you probably shouldn't expect to be rendered as any other character :)

[15:51] <kybr> also, if you are using a proportional font, the character might be an arbitrary width, right? not just half or full?

[15:52] <AlexDaniel> sure

[15:54] <AlexDaniel> maybe we should come up with a list of software that works nicely with unicode

[15:54] <AlexDaniel> especially for the basics, like terminals, editors, etc.

[16:08] *** andrzejku joined
[16:08] <andrzejku> Hello

[16:08] <andrzejku> :)

[16:10] *** molaf joined
[16:10] <AlexDaniel> hello :)

[16:15] <kybr> yes. i'd like that. copy/pasting is a thing too. when i copy in program X and paste to program Y, X and Y (and the OS) each get a chance to interpret the bytes. a after copy from iterm+vim to TextEdit (macOS builtin), a stsample ring of unicode is using many different fonts

[16:21] <Geth> ¦ doc: 6de08e3673 | cfa++ | 2 files

[16:21] <Geth> ¦ doc: (Attempt to) clarify Pair.ACCEPTS (refs #2622).

[16:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6de08e3673

[16:24] *** eseyman_ is now known as eseyman

[16:27] *** molaf left
[16:29] *** jmerelo joined
[16:31] *** cfa joined
[16:31] <cfa> 👋🏽

[16:32] <jmerelo> cfa: hey

[16:33] <cfa> hey jmerelo 

[16:34] <Geth> ¦ ecosystem: JJ++ created pull request #434: Uses a new Travis environment

[16:34] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/434

[16:35] <jmerelo> Someone check ^^^ that out. I was a bit fed up with waiting up to 20 minutes for testing a simple META6.json, so I've created a docker container for it.

[16:36] <jmerelo> I can merge it, but I'd rather have someone else take a look because that will impact on how all new modules submitted to the ecosystem are tested from now on.

[16:40] *** ravenousmoose joined
[16:44] *** molaf joined
[17:00] *** wi15ht left
[17:01] <sena_kun> jmerelo, for what reason "docker images" command is necessary?

[17:01] <sena_kun> or, rather, used.

[17:02] <sena_kun> for logging/build reproducibility purposes?

[17:03] *** andrzejku left
[17:07] *** abraxxa left
[17:09] *** cfa left
[17:13] *** w17t joined
[17:16] *** zacts left
[17:28] *** zacts joined
[17:34] <jmerelo> sena_kun: for speed

[17:35] <jmerelo> sena_kun: ah, docker images. No, it's useless. It just shows that the image has been downloaded successfully, just in case something goes wrong.

[17:35] <jmerelo> sena_kun: it can be eliminated without losing functionality; I can take it ouf is you want.

[17:39] <sena_kun> well, we may either remove it or comment its purpose, as "Why is it here" was my first question and I am not sure I will be the only one. :)

[17:40] *** Kaiepi left
[17:40] <jmerelo> sena_kun: OK, will do.

[17:41] <Geth> ¦ ecosystem: 3b993dd925 | (JJ Merelo)++ | 2 files

[17:41] <Geth> ¦ ecosystem: Changes travis and space for testing

[17:41] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/3b993dd925

[17:41] <Geth> ¦ ecosystem: be38692599 | (JJ Merelo)++ | 2 files

[17:41] <Geth> ¦ ecosystem: Rewrites .travis.yml with specific container

[17:41] <Geth> ¦ ecosystem: 

[17:41] <Geth> ¦ ecosystem: Built for speed, closes #390

[17:41] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/be38692599

[17:42] <jmerelo> sena_kun: OK, I pushed that by mistake. Anyway, just revert it if you don't think it's necessary

[17:43] <jmerelo> sena_kun: sorry about that. I forgot I had "origin" defined as the original, and "JJ" as my fork...

[17:47] <sena_kun> jmerelo, I don't mind it being in master.

[17:47] <sena_kun> I mean... The job is to test out how it works with your docker image-based travis config, right?

[17:48] <sena_kun> I don't see anything criminal in your PR, so I don't think it has to be reverted "just because".

[17:57] *** ravenousmoose left
[17:57] <jmerelo> sena_kun: thanks. I think it's a great improvement

[17:57] <jmerelo> sena_kun: but then, I think that the community travis image should change. The one we're using now downloads and compiles perl 6 every single time.

[18:01] <sena_kun> jmerelo, https://travis-ci.org/perl6/ecosystem <- "Nothing changed all fine.", is it how it should look like?

[18:01] *** lucasb left
[18:01] <jmerelo> sena_kun: right, it means that there's no modification in META.list

[18:02] <sena_kun> well, now we only have to wait for a new module to be released. :)

[18:02] <jmerelo> sena_kun: the perl6 script looks for diffs in that file, downloads the META6.json and tests it. In this case this has nothing to do with that, so we're good

[18:03] <jmerelo> sena_kun: I'm going to test-add Avolution::Emoji, which had some problems a few days ago

[18:04] <jmerelo> sena_kun: oh, that was eventually added

[18:06] <Geth> ¦ ecosystem: 3305416284 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[18:06] <Geth> ¦ ecosystem: Adds again BCP47

[18:06] <Geth> ¦ ecosystem: 

[18:06] <Geth> ¦ ecosystem: And tests new travis while we're on it.

[18:06] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/3305416284

[18:06] *** andrzejku joined
[18:07] <jmerelo> sena_kun: well, only PRs are tested...

[18:08] <Geth> ¦ ecosystem/JJ-patch-1: c27ac9a48f | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[18:08] <Geth> ¦ ecosystem/JJ-patch-1: Eliminates space

[18:08] <Geth> ¦ ecosystem/JJ-patch-1: 

[18:08] <Geth> ¦ ecosystem/JJ-patch-1: (Actually, I want to test the new travis)

[18:08] <Geth> ¦ ecosystem/JJ-patch-1: review: https://github.com/perl6/ecosystem/commit/c27ac9a48f

[18:09] <Geth> ¦ ecosystem: JJ++ created pull request #435: Eliminates space

[18:09] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/435

[18:10] <Geth> ¦ doc: 6b1baa6892 | Coke++ | doc/Type/Pair.pod6

[18:10] <Geth> ¦ doc: remove duplicate

[18:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6b1baa6892

[18:10] <synopsebot> Link: https://doc.perl6.org/type/Pair

[18:13] <Geth> ¦ ecosystem/JJ-patch-2: 5dacf34c19 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[18:13] <Geth> ¦ ecosystem/JJ-patch-2: Trims spaces

[18:13] <Geth> ¦ ecosystem/JJ-patch-2: 

[18:13] <Geth> ¦ ecosystem/JJ-patch-2: Since there seemed to be a problem

[18:13] <Geth> ¦ ecosystem/JJ-patch-2: review: https://github.com/perl6/ecosystem/commit/5dacf34c19

[18:14] <Geth> ¦ ecosystem: JJ++ created pull request #436: Trims spaces

[18:14] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/436

[18:17] <jmerelo> sena_kun: it works and tests in 36 seconds, as opposed to 12 minutes before: https://travis-ci.org/perl6/ecosystem/builds/497837363

[18:17] <jmerelo> This one fails, however...

[18:17] *** rindolf joined
[18:18] <sena_kun> looks awesome

[18:18] <sena_kun> jmerelo++

[18:19] <jmerelo> sena_kun: thanks! Docker really rocks, once you get the hang of it. I'm going to try and patch that distro while I'm at it.

[18:20] <sena_kun> I wonder what may cause "P6M Merging GLOBAL symbols failed: duplicate definition of symbol BCP47-Actions" though.

[18:23] <sena_kun> aaaah

[18:24] <jmerelo> sena_kun: problem in META6.json 

[18:24] <jmerelo> sena_kun: doing PR now.

[18:24] <b2gills> chee: Module names are Unicode, but file-systems handle Unicode as arbitrary bytes. (You can have 4 files named "résumé" in the same directory)

[18:24] <b2gills> Some file-systems are also case-insensitive.

[18:24] <b2gills> Perl6 allows you to have multiple versions of the same module installed.

[18:24] <b2gills> There has been talk about changing the file-system layout to use punycode rather than sha1, but that was a long time ago.

[18:24] <sena_kun> yes

[18:29] <chee> b2gills: thank you

[18:30] *** sena_kun left
[18:32] *** sena_kun joined
[18:36] *** domidumont joined
[18:52] *** mowcat left
[18:56] *** mowcat joined
[18:58] <b2gills> m: sub nfc ($_) {.encode('utf8-c8').decode }; for dir(test => {.&nfc eq 'résumé'}) { .relative.&nfc.say }

[18:58] <camelia> rakudo-moar 616b757a4: OUTPUT: «résumé␤résumé␤résumé␤résumé␤»

[19:24] *** ravenousmoose joined
[19:25] *** ravenousmoose left
[19:39] *** ravenousmoose joined
[19:50] *** Kaiepi joined
[19:58] *** molaf left
[20:01] <jmerelo> Redirecting program output: https://stackoverflow.com/q/54855966/891440 How can we do that?

[20:02] *** domidumont left
[20:02] <sena_kun> jmerelo, can't one just redefine $*OUT?

[20:03] <jmerelo> sena_kun: Maybe, but I haven't seen any documentation for doing it. I haven't tried either...

[20:03] *** grumble left
[20:04] <jmerelo> m: $*OUT = "/tmp/test".IO; say "Hey"; "/tmp/test".IO.slurp.say

[20:04] <camelia> rakudo-moar 616b757a4: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[20:04] <jmerelo> m: $*OUT = "/tmp/test".IO; say "Hey";

[20:04] <camelia> rakudo-moar 616b757a4: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[20:04] *** grumble joined
[20:04] <jmerelo> Now that's unexpected.

[20:05] <jmerelo> m: temp $*OUT = "/tmp/test".IO; say "Hey"; "/tmp/test".IO.slurp.say

[20:05] <camelia> rakudo-moar 616b757a4: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[20:05] <jmerelo> m: temp $*OUT = "/tmp/test".IO; say "Hey";

[20:05] <camelia> rakudo-moar 616b757a4: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[20:05] <moritz> m: $*OUT = open('/tmp/test', :w); say 'Hei';

[20:05] <camelia> rakudo-moar 616b757a4: ( no output )

[20:06] <moritz> m: $*OUT = open('/tmp/test', :w); say 'Hei'; print slurp '/tmp/test'

[20:06] <camelia> rakudo-moar 616b757a4: ( no output )

[20:06] <moritz> m: $*OUT = open('/tmp/test', :w); say 'Hei'; $*ERR.print slurp '/tmp/test'

[20:06] <camelia> rakudo-moar 616b757a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3'/tmp/test', :w); say 'Hei'; $*ERR.print7⏏5 slurp '/tmp/test'␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤ …»

[20:06] <moritz> m: $*OUT = open('/tmp/test', :w); say 'Hei'; $*ERR.print: slurp '/tmp/test'

[20:06] <camelia> rakudo-moar 616b757a4: OUTPUT: «Hei␤»

[20:06] <jmerelo> moritz: great. Maybe needs to be closed?

[20:06] <moritz> jmerelo: no, I just duplicated it :D

[20:07] <moritz> I tried to print its content to STDOUT, which was redirected to the file

[20:10] <jmerelo> moritz: and I just saw this: https://github.com/sergot/IO-Capture-Simple/

[20:14] <moritz> https://github.com/sergot/IO-Capture-Simple/blob/master/lib/IO/Capture/Simple.pm#L7 this doesn't look save if the called code throws an exception

[20:17] <jmerelo> moritz: but if it works, there's no problem. I want it basically to test script output

[20:19] *** jmerelo left
[20:32] *** kst`` left
[20:33] <Elronnd> http://ix.io/1BXl/perl6 what's wrong with this code?  I get an error about the last line, cannot assign to an immutable value, which is a bit...cryptic

[20:39] <Elronnd> ahh, found https://gist.github.com/Xliff/96e48eaad469e42e3c604380a73a918a.  I still don't understand _why_ but...

[20:42] <andrzejku> I make a risky step :D

[20:42] <andrzejku> send my cv with Perl6 experience :D

[20:42] <tadzik> nice :)

[20:42] <andrzejku> anyway is too risky as they ask me about Python all the time

[20:42] <andrzejku> but I think if recruiters would see that there are people who know

[20:42] <andrzejku> then maybe they will start to use that technology

[20:43] <tadzik> realistically, I think it may just attract someone's attention and think "oh, a person who does things for fun and not just for work"

[20:44] <andrzejku> tadzik, ya you are right but we are in Poland

[20:45] <tadzik> so? :)

[20:45] <andrzejku> tadzik, in Poland it is more like what he know and if we can use him to make money

[20:45] <andrzejku> it is rarely that company allows you to make what you like

[20:45] <tadzik> I assure you, it's the same everywhere. Companies exists in order to make money, everything else is a secondary objective at best

[20:46] <andrzejku> tadzik, not at all

[20:46] <andrzejku> western companies push in QA more

[20:46] <andrzejku> here is just outsourcing

[20:46] <tadzik> I worked for many "western companies". Not true

[20:46] <tadzik> or maybe I had a sad experience :)

[20:46] <andrzejku> tadzik, I woroked in outsource it is even worse :P

[20:47] <tadzik> but I've been both exploited as a cheap foreign worker by those "nice companies", and worked for companies who push for results with little regard to QA

[20:47] <tadzik> so at the very least it's not so black and white :)

[20:47] <andrzejku> tadzik, well lets not argue

[20:48] <tadzik> but what I meant is, if I, preparing for an interview, see a candidate that does their own projects in their spare time, I immediately think of them higher than someone who just does their job and nothing else

[20:48] <tadzik> perhaps it's just my opensource hacker bias :P

[20:48] <tadzik> if I saw someone with Perl 6 in their resume, I'd think "oh, cool that they're researching new technologies; I hope their Perl5 is good enough to hire them" :)

[20:48] <andrzejku> tadzik, that's right maybe not all the people have enough time to do that

[20:48] <tadzik> yeah

[20:49] <tadzik> I've been there as well. Sometimes you just want to chill out and step away from the screen, nothing wrong or unprofessional at that

[20:49] <andrzejku> tadzik, I will not blame everyone for that

[20:49] <andrzejku> or you have to play with your kids :D

[20:49] <tadzik> yep :)

[20:50] <andrzejku> tadzik, are you still living in Warsaw?

[20:50] <tadzik> anyway, if you have Perl 5 experience too feel free to drop me your resume :)

[20:50] <tadzik> andrzejku: yes

[20:50] <andrzejku> tadzik, no I am looking for C/C++

[20:50] <tadzik> ah

[20:50] <andrzejku> tadzik, Perl6 is just a hobby

[20:51] <tadzik> right, you mentioned Python before, I thought you're looking for that

[20:51] <andrzejku> but they always ask me about Python in addition

[20:51] <tadzik> curious

[20:51] <andrzejku> because some companies write tests

[20:51] <tadzik> heh, that's a good sign then :)

[20:51] <andrzejku> a higher level tests

[20:51] <andrzejku> so in my opinion there is no bigger difference to do that in Perl6

[20:52] <andrzejku> they guys who do that they usually have no knowledge how to start it in Python :D

[20:52] <tadzik> for that purpose, the ease of learning is crucial I think

[20:55] <andrzejku> anyway if more guys come with Perl6 I believe that someone decides to use it for testing staff because he have a team members who prefer Perl over Python

[20:55] <andrzejku> but it is just a dream :(

[20:56] <tadzik> you're fighting a good fight :)

[21:06] *** ravenousmoose left
[21:10] *** zacts left
[21:16] *** sena_kun left
[21:24] *** dct joined
[21:29] *** Kaiepi left
[21:35] * irced punches himself in the face.

[21:42] *** ferreira joined
[21:46] <moritz> sounds painful

[21:50] *** snarkyboojum joined
[21:54] <andrzejku> moritz, why?

[21:55] <moritz> andrzejku: I was commenting on >  irced punches himself in the face.

[21:56] <andrzejku> ahh

[21:58] *** choiboi joined
[22:01] *** random_yanek left
[22:05] *** zacts joined
[22:07] *** dant joined
[22:12] *** |oLa| joined
[22:13] *** robertle left
[22:13] *** |oLa| left
[22:16] *** random_yanek joined
[22:43] *** zacts left
[22:46] *** choiboi left
[22:55] *** zacts joined
[22:56] *** zacts left
[22:56] *** zacts joined
[22:59] *** |oLa| joined
[23:00] *** |oLa| left
[23:05] *** snarkyboojum left
[23:11] *** snarkyboojum joined
[23:17] *** andrzejku left
[23:19] *** mowcat left
[23:25] *** snarkyboojum left
[23:39] *** kktt joined
[23:40] *** Kaiepi joined
[23:52] *** w_richard_w joined
[23:56] *** w_richard_w left
