[00:02] *** Cabanossi left
[00:05] *** aborazmeh joined
[00:05] *** aborazmeh left
[00:05] *** aborazmeh joined
[00:06] *** rindolf left
[00:08] *** Cabanossi joined
[00:10] *** integral left
[00:11] *** AlexDaniel` left
[00:11] *** Mithaldu` left
[00:11] *** Mithaldu joined
[00:13] *** AlexDaniel` joined
[00:19] *** integral joined
[00:24] *** pecastro left
[00:26] *** lichtkind left
[00:27] *** netrino left
[00:29] *** w_richard_w joined
[00:36] *** epony joined
[00:41] *** lichtkind joined
[00:52] *** zacts joined
[00:55] *** lichtkind left
[01:00] *** zacts left
[01:03] *** zacts joined
[01:04] *** zachk left
[01:08] *** lichtkind joined
[01:32] <elcaro> Any valid reason why Mix doesn't implement .pick ?

[01:32] <elcaro> It does roll

[01:33] *** lichtkind left
[01:35] *** aborazmeh left
[01:37] <timotimo> maybe because "remove 1 from the value" isn't totally sensible? not sure

[01:39] <AlexDaniel> Mix can have negative and fractional amounts

[01:39] <AlexDaniel> so what's the meaning of pick?

[01:39] <elcaro> yeah, I supposed that makes sense, can't pick 2.2 times

[01:40] <elcaro> I just presumed it would pick a weighted random key, but yeah, picking fractional amounts make no sense

[01:40] <AlexDaniel> m: my $m = ("foo" => -5).Mix; say $m; say $m.roll(2)

[01:40] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´Mix(foo(-5))‚ê§()‚ê§¬ª

[01:41] <AlexDaniel> m: my $m = ("foo" => 0.5).Mix; say $m; say $m.roll(2)

[01:41] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´Mix(foo(0.5))‚ê§(foo foo)‚ê§¬ª

[01:41] <AlexDaniel> m: my $m = ("foo" => 0.1).Mix; say $m; say $m.roll(2)

[01:41] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´Mix(foo(0.1))‚ê§(foo foo)‚ê§¬ª

[01:51] *** lichtkind joined
[01:57] <vrurg> m: sub foo($a) { my $b is default($a); $b = Nil; say $b }; foo("where is it?")

[01:57] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(Mu)‚ê§¬ª

[01:57] <vrurg> This isn't an expected output, is it?

[01:59] *** lichtkind left
[02:00] *** lichtkind joined
[02:00] *** zacts left
[02:05] <AlexDaniel> vrurg: well, yeah, that shouldn't be allowed

[02:05] *** aborazmeh joined
[02:05] *** aborazmeh left
[02:05] *** aborazmeh joined
[02:05] <AlexDaniel> vrurg: is default is not run time, so you can't use it for that

[02:06] <AlexDaniel> m: sub foo($a) { my $b is default(rand); $b = Nil; say $b }; foo("a"); foo("b")

[02:06] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´0.2091059658132023‚ê§0.2091059658132023‚ê§¬ª

[02:07] <vrurg> sub foo(::T $v) { my T $v } ‚Äì is ok, but sub foo(::T $v) { my $v is default(T); } is not?

[02:07] <AlexDaniel> I guess so, I'm not sure

[02:08] <vrurg> It currently dies with a TypeCheck exception if my T $v is default(T) form is used.

[02:09] <vrurg> Ok, I thought it's a bug to be fixed. 

[02:10] *** molaf left
[02:13] *** zacts joined
[02:15] *** zacts left
[02:15] *** zacts joined
[02:19] <guifa> Ugh it looks like I really just need to implement ICU

[02:21] *** mahafyi left
[02:23] *** molaf joined
[02:32] <Xliff> guifa: ??

[02:32] <guifa> Xliff: http://userguide.icu-project.org

[02:33] <guifa> I got the number classification done, but then I also realized I needed to get a number formatter done (one that‚Äôs fully locale aware)

[02:33] <Xliff> Ooh! Want help?

[02:34] <guifa> I‚Äôm definitely up for it.  I‚Äôm sitting here right now thinking whether it‚Äôs better to do a NativeCall or try to implement it in pure Perl 6

[02:35] <Xliff> No doubt that you are up for it.

[02:35] <Xliff> Looking, now.

[02:36] <guifa> I really just want to get the numbers finished (even if barely) so that I can release a semi-useful version of Fluent.  One of the most wanted modules was an older-style localization framework, and so what I‚Äôve got for Fluent would cover that and then some

[02:38] <Xliff> Well, I don't know what you know, but looking at the source, this is a LOT of work!

[02:38] <Xliff> NativeCall or Pure Perl6

[02:39] <guifa> Yeah.  But it‚Äôs definitely something that long term should be done.  It‚Äôd align with Perl‚Äôs strengths too 

[02:40] <Xliff> Yep!

[02:40] <Xliff> https://github.com/unicode-org/icu/tree/master/icu4c/source/i18n <-- Easier to NC

[03:02] *** Sgeo left
[03:03] *** Sgeo joined
[03:16] *** zacts left
[03:16] <Xliff> .tell jnthn What's the best way to debug requests when using Cro::HTTP::Client? I need to verify certain headers are being sent when performing a POST

[03:16] <yoleaux> Xliff: I'll pass your message to jnthn.

[03:20] *** w_richard_w left
[03:21] *** w_richard_w joined
[03:27] *** epony left
[03:28] *** epony joined
[03:35] *** epony left
[03:42] <guifa> Xliff: check out https://github.com/alabamenhu/Fluent (it‚Äôs not production ready, but the playground.p6 file has some fun test stuff)

[03:46] *** Kaiepi left
[04:24] *** aborazmeh left
[04:25] *** epony joined
[05:02] *** Cabanossi left
[05:03] <Xliff> m: say [&&](0, do { 0/0 });

[05:03] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´0‚ê§¬ª

[05:03] <Xliff> m: 0/0

[05:03] <camelia> rakudo-moar 9770c1aa1: ( no output )

[05:03] <Xliff> m: 0/0.say

[05:03] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§0‚ê§Useless use of "/" in expression "0/0.say" in sink context (line 1)‚ê§¬ª

[05:03] <Xliff> m: say 0/0

[05:03] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´Attempt to divide by zero when coercing Rational to Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[05:03] <Xliff> m: say [and](0, do { 0/0 });

[05:03] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´0‚ê§¬ª

[05:04] <Xliff> m: say [and](0, die "Bleah");

[05:04] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´0‚ê§¬ª

[05:05] *** gregf_ left
[05:05] <Xliff> m: say ().IO.e

[05:05] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´Must specify something as a path: did you mean '.' for the current directory?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[05:05] <Xliff> m: my $a = (); say $a.IO.e

[05:05] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´Must specify something as a path: did you mean '.' for the current directory?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[05:06] <Xliff> m: my $a = (); say $a.elems; say $a.IO.e

[05:06] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´0‚ê§Must specify something as a path: did you mean '.' for the current directory?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[05:07] *** Cabanossi joined
[06:01] *** squashable6 left
[06:03] <Geth> ¬¶ doc: 5d49909fe1 | (JJ Merelo)++ | doc/Type/DateTime.pod6

[06:03] <synopsebot> Link: https://doc.perl6.org/type/DateTime

[06:03] <Geth> ¬¶ doc: Adds comparison ops, refs #2632

[06:03] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5d49909fe1

[06:04] *** squashable6 joined
[06:14] *** Spot___ is now known as Spot-

[06:15] *** Spot- is now known as Spot

[06:15] *** Spot is now known as Spot--

[06:15] *** Spot-- is now known as Spot-

[06:16] *** Spot- is now known as jkinnula

[06:17] *** jkinnula is now known as Spot

[06:19] *** Spot is now known as Spot_

[06:21] *** sortiz left
[06:26] *** abraxxa joined
[06:27] *** molaf left
[06:30] *** w17t joined
[06:30] *** abraxxa left
[06:35] *** eseyman left
[06:43] *** eseyman joined
[06:45] *** abraxxa joined
[06:45] *** random_yanek left
[06:57] *** random_yanek joined
[06:58] *** domidumont joined
[07:08] <jmerelo> releasable6: status

[07:08] <releasable6> jmerelo, Next release will happen when it's ready. 2 blockers. 319 out of 338 commits logged

[07:08] <releasable6> jmerelo, Details: https://gist.github.com/a478afb65bb6260998a066fe91c4e797

[07:09] <AlexDaniel> heh, weather-- https://imgur.com/a/lfcA2bq

[07:10] <jmerelo> AlexDaniel: that's a fine weather for staying indoors.

[07:11] *** guifa left
[07:12] <AlexDaniel> jmerelo: ya, well, let's hope all that is fixed when I have to go out tomorrow‚Ä¶

[07:21] *** guifa joined
[07:23] *** reach_satori left
[07:23] *** reach_satori joined
[07:27] *** drclaw1 joined
[07:28] *** drclaw left
[07:29] *** ravenousmoose_ joined
[07:29] *** w_richard_w left
[07:31] *** drclaw1 left
[07:41] *** lichtkind left
[07:53] *** w_richard_w joined
[08:04] *** cwilson left
[08:04] *** cwilson joined
[08:07] *** w17t left
[08:08] *** w17t joined
[08:08] *** rindolf joined
[08:14] * lizmat clickbaits https://p6weekly.wordpress.com/2019/03/04/2019-09-cool-stuff-this-summer/

[08:19] *** ufobat joined
[08:24] *** patrickb joined
[08:24] *** cpan-p6 left
[08:24] *** cpan-p6 joined
[08:24] <cpan-p6> New module released to CPAN! Smack (0.1.1) by 03HANENKAMP

[08:24] <cpan-p6> New module released to CPAN! Test-META (0.0.16) by 03JSTOWE

[08:24] <cpan-p6> New module released to CPAN! META6 (0.0.23) by 03JSTOWE

[08:24] <cpan-p6> New module released to CPAN! JSON-Class (0.0.12) by 03JSTOWE

[08:24] *** cpan-p6 left
[08:31] <lizmat> aw.... tyil ^^^

[08:31] <tyil> ;~;

[08:32] <tyil> I already put in a ratelimiting mechanism

[08:34] *** vike1 left
[08:36] *** vike1 joined
[08:39] *** netrino joined
[08:39] <hahainternet> it's truly amazing freenode can get rid of people who sent 5 lines in 5 seconds

[08:40] <hahainternet> but not concerted centralised spamming campaigns using identical messages each time

[08:40] <hahainternet> in 10 years the quality of their administration has not advanced a jot

[08:43] *** lizmat left
[08:45] *** ChoHag_ left
[08:45] *** kensanata joined
[08:46] *** ChoHag joined
[08:46] <tyil> going by the logs, the bot is currently banned for those 4 lines of output

[08:46] * tyil shrugs

[08:46] <tyil> I'll try again tomorrow I guess

[08:46] <tyil> hahainternet: in general I'm not too happy with freenode's administration tbh

[08:46] <tyil> but it's where all the free software channels are, so here I am

[08:47] *** dakkar joined
[08:48] *** vike1 left
[08:51] *** vike joined
[08:53] *** vike left
[08:57] *** vike joined
[09:00] *** andrzejku joined
[09:01] <andrzejku> Hey

[09:01] <andrzejku> :)

[09:01] *** drclaw1 joined
[09:01] <tyil> hi

[09:01] *** netrino left
[09:02] <andrzejku> have a good news for Perl6 :D

[09:02] <tyil> do tell me more :>

[09:04] <andrzejku> my request passed https://dev.getsol.us/T7609

[09:04] <andrzejku> now it is in status needs maintainer

[09:04] *** ravenousmoose_ left
[09:04] <andrzejku> but I will have time to look there at weekend : (

[09:05] <tyil> cool

[09:05] <andrzejku> tyil, ja I am happy too

[09:05] *** ravenousmoose_ joined
[09:07] <tadzik> andrzejku: awesome :)

[09:08] *** woolfy left
[09:22] *** cpan-p6 joined
[09:23] *** reach_satori left
[09:23] *** reach_satori joined
[09:26] <tyil> alright, cpan-p6 should now be ignored by Sigyn 

[09:27] <tyil> it seems that Sigyn just bans whenever it sees a number of messages that look alike, and legit bots are to be ignored by it (set by channel ops apparently)

[09:28] <tyil> I wonder if Sigyn has actually done a ban that was warranted in it's lifetime, tho

[09:29] <jast> it seems quite likely, because those kinds of heuristics do detect spam, too :)

[09:29] *** woolfy joined
[09:29] <tyil> except on freenode, where spam is rampant

[09:29] <jast> there's a reason I didn't say "all spam"

[09:30] *** pmurias joined
[09:31] <tyil> in the years I've been on Freenode I've seen Sigyn kill plenty of regular users and people trying to build a bot

[09:31] <tyil> but only once or twice I'ev seen it kill someone actually trying to spam

[09:31] <jast> most kills I've seen were not related to a message on the channel I saw them on

[09:33] *** [Sno] left
[09:33] *** woolfy left
[09:33] <tyil> all I know is that from my experience, Sigyn seems to hurt a lot more than it actually helps

[09:34] <jast> I don't need it on my channels anyway, the anti-spam measures we use work well enough

[09:35] <tyil> tbh, +s seems to help a great deal already

[09:35] <jast> unless you're a well-known channel...

[09:36] *** w_richard_w left
[09:36] <tyil> freenode doesn't have delayed joins, does it?

[09:36] <jast> I don't think so

[09:40] *** lichtkind joined
[09:47] *** cpan-p6 left
[09:47] *** cpan-p6 joined
[09:50] *** lichtkind_ joined
[09:50] *** lichtkind left
[09:51] *** pmurias left
[10:01] *** zakharyas joined
[10:05] *** integral left
[10:05] *** integral joined
[10:08] <jmerelo> andrzejku: great

[10:08] *** cpan-p6 left
[10:08] *** cpan-p6 joined
[10:16] *** scovit joined
[10:16] *** pmurias joined
[10:27] *** ravenousmoose_ left
[10:27] *** ravenousmoose_ joined
[10:33] *** cpan-p6 left
[10:34] *** cpan-p6 joined
[10:53] *** dogbert2_ left
[11:05] *** domidumont left
[11:22] *** cpan-p6 left
[11:23] *** cpan-p6 joined
[11:25] *** Black_Ribbon left
[11:31] *** mowcat left
[11:47] *** cpan-p6 left
[11:48] *** cpan-p6 joined
[11:56] <discord6> <kawaii> obligatory "where is rakudo star 2019.0(2|3) release?" question for today :)

[12:02] *** cpan-p6 left
[12:03] *** cpan-p6 joined
[12:08] *** lucasb joined
[12:14] <lucasb> look, Raku posts! :D

[12:15] <lucasb> "Larry Wall made the decision to use Raku as its official name" haha, made me laugh :)

[12:16] *** cpan-p6 left
[12:17] *** cpan-p6 joined
[12:19] <tadzik> where is that? :)

[12:19] <lucasb> top entry in http://blogs.perl.org/ :)

[12:20] *** ufobat_ joined
[12:21] *** mowcat joined
[12:22] *** ufobat left
[12:24] <tadzik> heh, talk about reducing the confusion...

[12:26] *** dustinm`_ left
[12:27] *** jmerelo left
[12:31] *** dustinm` joined
[12:32] *** zakharyas left
[12:37] <masak> "I hope the discussion of names will decrease and talks about language features will increase." -- well, there's something to agree on.

[12:38] <masak> maybe someone should start a subcommunity called "people who don't want to talk about names" or something

[12:38] <masak> the actual name of the subcommunity doesn't matter. really, it doesn't.

[12:38] <El_Che> fat change

[12:39] <El_Che> I wrote a blog why it won't happen :)

[12:39] *** cpan-p6 left
[12:39] <masak> people from both Perl 5 and... not Perl 5, would be welcome.

[12:39] *** cpan-p6 joined
[12:39] <tadzik> finally, a comunity for my Perl 4 fetish

[12:40] <masak> proposed slogan: "what you all just said about names? We Don't Care."

[12:41] <masak> feel free to call Perl 6 "WC Duck" if you want. and feel free to call that name an alias if you feel that's important.

[12:41] <masak> to me the important thing has never been the name, but the language the name refers to.

[12:42] <masak> tadzik: Perl 4 seems a fascinating language. weren't we both at a talk about Perl 4 once?

[12:44] <tadzik> masak: I don't think I was :(

[12:44] *** drclaw1 left
[12:44] <masak> someone had dug up Perl 4 and was taking it through the motions.

[12:44] <masak> fascinating how much was there and yet how different the language felt.

[12:45] <tadzik> I recently thought what keeps attracting me to Perl 5 while Perl 6 is a thing, and I think it's the simplicity of its list-iness

[12:46] <masak> I cannot +1 you enough

[12:46] <tadzik> sub arguments are just lists of things. You can alter them and pass them further around. It may be weird at first, but it's just wonderful when you get your head around it

[12:47] <tadzik> I've been writing Perl 6 on and off for 8 years and often I'm still not sure what *kind* of list I'm dealing with at a given time

[12:47] <masak> tadzik: in my head I have Perl 5 lists as being a kind of "intermediate medium" when things fly between functions, or between arrays/hashes

[12:47] <tadzik> exactly!

[12:47] <masak> \o/

[12:47] <masak> agree about the confusion in Perl 6 too. worse, I don't really know how to fix that.

[12:48] <tadzik> yeah :(

[12:48] <masak> in 007 I've opted for utmost simplicity, to the point of (recently) removing Tuple and its syntax

[12:48] <tadzik> it made me wonder if there are other languages build entirely around a different basic data structure and indeed: Lua is that language

[12:48] <tadzik> I don't recall what they call them, but Hashes are everything it in. Lists/Arrays are just a specialcase of Hashes that have numeric indexes

[12:48] <masak> the basic data structure in Lua does not strike me as elegant, though :)

[12:48] <masak> tadzik: "tables"

[12:49] <tadzik> that's it, thanks

[12:49] <masak> PHP and awk also consider arrays to be special cases of associative arrays

[12:49] <masak> can't say I'm a fan :)

[12:49] <masak> oh, and JavaScript

[12:49] * tadzik shakes with PTSD

[12:49] <tadzik> I've been writing a lot of angular the past few weeks

[12:49] <masak> I feel like it's one of those cute-ideas-today that comes back and shoots you in the performance later

[12:50] <masak> the storage and indexing modes of arrays vs hashes are *way* different

[12:50] <tadzik> yep

[12:50] <El_Che> masak + tadzik == https://i.ytimg.com/vi/iBSF0Gi7oM0/hqdefault.jpg

[12:51] <tadzik> :D:D

[12:51] * masak .oO( tag yourself: I'm the guy on the right )

[12:53] *** kst left
[12:54] *** jeromelanteri joined
[12:55] <El_Che> DrForr: are you from breton heritage? https://pbs.twimg.com/media/D05Ok5CXgAAco3U.jpg

[12:55] *** domidumont joined
[13:01] *** cpan-p6 left
[13:02] *** cpan-p6 joined
[13:13] <masak> oh, I never realized that "Kov√°cs" meant "Smith". interesting also that it's from the Slavic wordstock, not the Finnic

[13:14] <El_Che> there isn't a source, so grain of salt

[13:14] <El_Che> interesting nevertheless

[13:15] <El_Che> (I speak Spanish and it never occurred to me that the surname "Herrera" was derived from "Herrero" (Smith) :) )

[13:16] *** cpan-p6 left
[13:17] *** cpan-p6 joined
[13:17] <tadzik> don't feel bad. It took me like 2 years to realize that my boss and another employee who share the last name, look similar, differ by 30-40 years of age and both have been with the company forever are actually father and son

[13:17] <tadzik> it seems obvious in retrospect

[13:22] <masak> I'm super-bad at recognizing those things as well

[13:24] <El_Che> hehe, great one, tadzik 

[13:29] *** zakharyas joined
[13:30] *** aborazmeh joined
[13:30] *** aborazmeh left
[13:30] *** aborazmeh joined
[13:33] *** w17t left
[13:39] *** llfourn left
[13:41] *** cpan-p6 left
[13:42] *** cpan-p6 joined
[13:46] *** scimon joined
[13:50] *** jeromelanteri left
[14:01] *** llfourn joined
[14:03] *** patrickb left
[14:07] *** cpan-p6 left
[14:07] *** cpan-p6 joined
[14:08] *** ufobat__ joined
[14:11] *** ufobat_ left
[14:17] <guifa> El_che: it‚Äôs not even just Smith, it‚Äôs an iron smith (hierro [iron]¬†+ -ero [one that works with prev noun]) :-)

[14:18] <El_Che> indeed :)

[14:22] *** ufobat_ joined
[14:24] *** ufobat__ left
[14:25] *** aborazmeh left
[14:34] <guifa> If a module is ‚Äòuse‚Äôd multiple times, is it loaded multiple times or can we safely assume that variables are shared?

[14:35] *** jmerelo joined
[14:35] *** aborazmeh joined
[14:35] *** aborazmeh left
[14:35] *** aborazmeh joined
[14:35] <guifa> That is, class A says use ‚ÄòX‚Äô, and class B says use ‚ÄòX‚Äô.  A modifies an exported variable in X, does B get to see the modified or does it have its own copy?

[14:35] *** mowcat left
[14:38] *** aborazmeh left
[14:44] *** ExtraCrispy joined
[14:44] *** andrzejku left
[15:03] *** cpan-p6 left
[15:03] *** cpan-p6 joined
[15:15] *** patrickb joined
[15:29] *** kini left
[15:33] *** atweiden-air joined
[15:39] *** kini joined
[15:49] *** pmurias left
[15:50] *** cpan-p6 left
[15:51] *** cpan-p6 joined
[15:55] <jnthn> guifa: Compilation units are loaded once, so it'd be shared.

[15:55] *** pmurias joined
[15:57] <guifa> jnthn++ perfect

[16:02] *** tyil[m]1 left
[16:02] *** tyil[m]1 joined
[16:06] *** molaf joined
[16:06] *** telex left
[16:07] *** telex joined
[16:08] *** kent\n left
[16:09] *** kent\n joined
[16:14] <guifa> https://github.com/alabamenhu/UserLanguage 

[16:15] <guifa> If anyone could test and see that it gets the right info for their system (or tell me how to get it for their system so I can add it), appreciation given in pluses :-)

[16:15] *** cpan-p6 left
[16:15] *** cpan-p6 joined
[16:18] *** ravenousmoose_ left
[16:20] <Geth> ¬¶ ecosystem: alabamenhu++ created pull request #438: Add UserLanguage module

[16:20] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/438

[16:23] *** pmurias left
[16:25] *** domidumont left
[16:29] *** cpan-p6 left
[16:29] *** cpan-p6 joined
[16:37] *** ufobat_ left
[16:40] <Geth> ¬¶ ecosystem: c04a545946 | L'Alabame√±u++ (committed using GitHub Web editor) | META.list

[16:40] <Geth> ¬¶ ecosystem: Add UserLanguage module

[16:40] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/c04a545946

[16:40] <Geth> ¬¶ ecosystem: 399d1c2450 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[16:40] <Geth> ¬¶ ecosystem: Merge pull request #438 from alabamenhu/patch-2

[16:40] <Geth> ¬¶ ecosystem: 

[16:40] <Geth> ¬¶ ecosystem: Add UserLanguage module

[16:40] <Geth> ¬¶ ecosystem: Thanks!

[16:40] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/399d1c2450

[16:42] <guifa> jmarelo++ (also, any chance you‚Äôll be up in the Gran Villa next week?)

[16:43] <SmokeMachine> guifa: for me its working:

[16:43] <SmokeMachine> https://www.irccloud.com/pastebin/vASb5f03/

[16:44] <SmokeMachine> when I get in home Ill try on my Brazilian Portuguese machine...

[16:45] <SmokeMachine> guifa: but the `use 'Intl::UserLanguage'` on your README seems odd...

[16:45] <guifa> SmokeMachine++

[16:45] <guifa> and oops haha

[16:52] *** cpan-p6 left
[16:53] *** cpan-p6 joined
[17:02] *** sno joined
[17:06] *** cpan-p6 left
[17:07] *** cpan-p6 joined
[17:10] *** patrickb left
[17:22] *** cpan-p6 left
[17:22] *** cpan-p6 joined
[17:25] *** scimon left
[17:26] *** abraxxa left
[17:28] *** patrickb joined
[17:32] *** sno left
[17:44] *** cpan-p6 left
[17:45] *** cpan-p6 joined
[17:57] *** ravenousmoose joined
[18:06] *** reach_satori left
[18:07] *** reach_satori joined
[18:09] *** cpan-p6 left
[18:10] *** cpan-p6 joined
[18:19] *** atweiden-air left
[18:20] *** ravenousmoose left
[18:21] *** vrurg_ joined
[18:21] *** vrurg left
[18:21] *** vrurg_ is now known as vrurg

[18:32] *** sena_kun joined
[18:33] *** cpan-p6 left
[18:34] *** cpan-p6 joined
[18:35] *** TreyHarris joined
[18:36] *** sno joined
[18:40] <discord6> <Rogue> When are we getting a rakudo-star for 6.d?

[18:41] *** sno left
[18:44] *** zacts joined
[18:49] <AlexDaniel> Rogue: hello :)

[18:49] <AlexDaniel> so rakudo-star can only happen once we release rakudo, as I understand

[18:50] <AlexDaniel> all preparations were done, so we're ready for the release

[18:51] <AlexDaniel> so once moarvm is released, I'll release rakudo shortly, and that should happen really soon I hope

[18:52] <AlexDaniel> but I don't know how much time the new rakudo-star team will take

[18:55] *** zachk joined
[18:56] *** zachk left
[18:56] *** zachk joined
[18:57] *** cpan-p6 left
[18:57] *** cpan-p6 joined
[19:00] *** dakkar left
[19:06] <DrForr> llfourn: Not that I'm aware, the furthest ancestor I'm aware of was from Sussex, England in the 1600s.

[19:09] *** sno joined
[19:12] *** cpan-p6 left
[19:12] *** cpan-p6 joined
[19:14] *** sno left
[19:16] *** ravenousmoose joined
[19:20] *** sortiz joined
[19:25] *** netrino joined
[19:27] *** cpan-p6 left
[19:27] *** cpan-p6 joined
[19:41] *** zacts left
[19:42] *** cpan-p6 left
[19:42] *** cpan-p6 joined
[19:46] *** zakharyas left
[19:48] *** Black_Ribbon joined
[20:03] *** mowcat joined
[20:04] *** cpan-p6 left
[20:05] *** cpan-p6 joined
[20:07] *** abraxxa joined
[20:14] *** sno joined
[20:19] <kybr> i find myself refreshing https://commaide.com/ frequently. i want it.

[20:20] *** sno left
[20:21] *** pecastro joined
[20:23] <Seance[m]> What tools do you guys use to write perl6 currently? I've really only used Atom

[20:24] <tadzik> vim :)

[20:24] <kybr> vim, vscode, atom.. 

[20:25] <AlexDaniel> emacs

[20:26] <AlexDaniel> AlexDaniel`: hello

[20:26] *** cpan-p6 left
[20:26] *** AlexDaniel-old[m joined
[20:26] <AlexDaniel> ahh‚Ä¶ ok‚Ä¶

[20:27] *** AlexDaniel-old[m left
[20:27] *** cpan-p6 joined
[20:31] <kybr> i want to see code completion and syntax hilighting working on perl6. that sounds like quite a feat to me.

[20:33] *** Kaiepi joined
[20:33] <Seance[m]> Yeah, I use vim bindings + the recommended perl6 atom packages on perl6.org/whatever. I'm not too crazy about Atom though, so was curious about people's setups

[20:33] <AlexDaniel> so what's the issue with syntax highlighting? I though most editors do it relatively well?

[20:34] <tadzik> perl is quite hard to parse though

[20:34] <tadzik> editors usually do matching with regexes, which doesn't work perfectly with complex languages

[20:35] <Kaiepi> yeah, just look at the grammar perl 6 uses

[20:36] <Kaiepi> speaking of which what does <O(%foo)> do?

[20:36] <Kaiepi> in grammars

[20:38] <Kaiepi> i see it a lot in rakudo but but i can't find any docs onit

[20:42] <guifa> Is there a way to programmatically determine the files in %*RESOURCES?  I tried .keys but that failed, even though it gives key-like access. 

[20:44] *** cpan-p6 left
[20:46] <guifa> Kaiepi: maybe it‚Äôs a NQP thing?

[20:47] *** ravenousmoose left
[20:48] *** abraxxa left
[20:48] *** sno joined
[20:50] <sena_kun> judging by the syntax, it may be just a call to the method `O` with %foo arg.

[20:51] *** jmerelo left
[20:53] *** sno left
[20:56] *** Kaiepi left
[20:57] *** Kaiepi joined
[21:00] *** ravenousmoose joined
[21:00] *** cpan-p6 joined
[21:05] *** andrzejku joined
[21:10] <moritz> right, it's the operator precedence parser implemented as a method

[21:10] *** ExtraCrispy left
[21:12] *** ExtraCrispy joined
[21:13] *** lichtkind_ left
[21:20] *** sno joined
[21:22] <moritz> in nqp, src/HLL/Actions.nqp is method O

[21:25] *** cpan-p6 left
[21:25] *** cpan-p6 joined
[21:26] *** sno left
[21:28] *** drclaw1 joined
[21:28] *** lucasb left
[21:39] *** cpan-p6 left
[21:39] *** rindolf left
[21:39] *** cpan-p6 joined
[21:40] *** rindolf joined
[21:44] <jdv79> tadzik: i agree i think on the list point.  slip/flat/list/array/one arg rule - its a hurdle sometimes.

[21:53] *** sno joined
[21:56] *** sena_kun left
[21:57] *** sno left
[21:58] *** cpan-p6 left
[22:01] *** cpan-p6 joined
[22:03] *** Cabanossi left
[22:04] *** Cabanossi joined
[22:12] *** sortiz left
[22:18] *** mowcat left
[22:26] *** kst joined
[22:26] *** cpan-p6 left
[22:26] *** cpan-p6 joined
[22:30] *** ravenousmoose left
[22:32] *** dominix joined
[22:32] <dominix> hi everyone

[22:33] <dominix> m: for "puan".comb.permutations {$_.join.say}

[22:33] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§¬ª

[22:33] <dominix> I would like to do the same but without the for loop

[22:34] <dominix> I think of

[22:34] <dominix> m: "puan".comb.permutations.map {.join.say}

[22:34] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected block in infix position (missing statement control word before the expression?)‚ê§at <tmp>:1‚ê§------> 3"puan".comb.permutations.map7‚èè5 {.join.say}‚ê§    expecting any of:‚ê§        inf‚Ä¶¬ª

[22:34] <dominix> but it doesn't works

[22:35] <AlexDaniel> m: say "puan".comb.permutations.map(*.join)

[22:35] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan puna paun panu pnua pnau upan upna uapn uanp unpa unap apun apnu aupn aunp anpu anup npua npau nupa nuap napu naup)‚ê§¬ª

[22:35] <AlexDaniel> m: say "puan".comb.permutations.map(*.join).join: "\n"

[22:35] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§¬ª

[22:35] <dominix> m: "puan".comb.permutations.map {*.join.say}

[22:35] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected block in infix position (missing statement control word before the expression?)‚ê§at <tmp>:1‚ê§------> 3"puan".comb.permutations.map7‚èè5 {*.join.say}‚ê§    expecting any of:‚ê§        in‚Ä¶¬ª

[22:35] <dominix> m: "puan".comb.permutations.map {*.join}.say

[22:35] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected block in infix position (missing statement control word before the expression?)‚ê§at <tmp>:1‚ê§------> 3"puan".comb.permutations.map7‚èè5 {*.join}.say‚ê§    expecting any of:‚ê§        in‚Ä¶¬ª

[22:35] <AlexDaniel> you need parens or :

[22:36] <AlexDaniel> m: "puan".comb.permutations.map({*.join}).say

[22:36] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed double closure; WhateverCode is already a closure without curlies, so either remove the curlies or use valid parameter syntax instead of *‚ê§at <tmp>:1‚ê§------> 3"puan".comb.permutations.map‚Ä¶¬ª

[22:36] <dominix> I didn't got this : thing

[22:36] <AlexDaniel> m: "puan".comb.permutations.map(*.join).say

[22:36] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan puna paun panu pnua pnau upan upna uapn uanp unpa unap apun apnu aupn aunp anpu anup npua npau nupa nuap napu naup)‚ê§¬ª

[22:36] <AlexDaniel> or

[22:36] <AlexDaniel> m: "puan".comb.permutations.map({.join}).say

[22:36] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan puna paun panu pnua pnau upan upna uapn uanp unpa unap apun apnu aupn aunp anpu anup npua npau nupa nuap napu naup)‚ê§¬ª

[22:36] <dominix> m: "puan".comb.permutations.map({*.join}).say

[22:36] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed double closure; WhateverCode is already a closure without curlies, so either remove the curlies or use valid parameter syntax instead of *‚ê§at <tmp>:1‚ê§------> 3"puan".comb.permutations.map‚Ä¶¬ª

[22:36] <AlexDaniel> {.join} or *.join, not both at the same time :)

[22:36] <dominix> m: "puan".comb.permutations.map({.join}).say

[22:36] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan puna paun panu pnua pnau upan upna uapn uanp unpa unap apun apnu aupn aunp anpu anup npua npau nupa nuap napu naup)‚ê§¬ª

[22:37] <dominix> m: "puan".comb.permutations.map(*.join).say

[22:37] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan puna paun panu pnua pnau upan upna uapn uanp unpa unap apun apnu aupn aunp anpu anup npua npau nupa nuap napu naup)‚ê§¬ª

[22:37] <dominix> ok, thanks

[22:38] <dominix> is there details in the perl6 docuentation on how this * vs {} works

[22:38] <dominix> I am formating my brain but there is bad sector 

[22:39] <dominix> sectors 

[22:41] <dominix> humm this is not exacly the same

[22:41] <dominix> m: for "puan".comb.permutations {$_.join.say}

[22:41] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§¬ª

[22:41] <dominix> here, there is a newline after each name

[22:41] <AlexDaniel> m: "puan".comb.permutations.map(*.join).join("\n").say

[22:41] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§¬ª

[22:41] <dominix> m: "puan".comb.permutations.map(*.join).say

[22:41] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan puna paun panu pnua pnau upan upna uapn uanp unpa unap apun apnu aupn aunp anpu anup npua npau nupa nuap napu naup)‚ê§¬ª

[22:42] <AlexDaniel> yeah, you'll have to .join again with a newline

[22:42] <AlexDaniel> m: "puan".comb.permutations.map(*.join ~ "\n").join.say

[22:42] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§‚ê§¬ª

[22:42] <AlexDaniel> also a possibility, depending on what you need

[22:43] <dominix> m: "puan".comb.permutations.map(*.join ~ "\n").say

[22:43] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´(puan‚ê§ puna‚ê§ paun‚ê§ panu‚ê§ pnua‚ê§ pnau‚ê§ upan‚ê§ upna‚ê§ uapn‚ê§ uanp‚ê§ unpa‚ê§ unap‚ê§ apun‚ê§ apnu‚ê§ aupn‚ê§ aunp‚ê§ anpu‚ê§ anup‚ê§ npua‚ê§ npau‚ê§ nupa‚ê§ nuap‚ê§ napu‚ê§ naup‚ê§)‚ê§¬ª

[22:43] <dominix> m: "puan".comb.permutations.map(*.join ~ "\n").join.say

[22:43] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§‚ê§¬ª

[22:44] <dominix> the effect of the second join is visible but still obscure to me

[22:45] <AlexDaniel> see this:

[22:45] <AlexDaniel> m: "puan".comb.permutations.map(*.join).join("\n").say

[22:45] <camelia> rakudo-moar 9770c1aa1: OUTPUT: ¬´puan‚ê§puna‚ê§paun‚ê§panu‚ê§pnua‚ê§pnau‚ê§upan‚ê§upna‚ê§uapn‚ê§uanp‚ê§unpa‚ê§unap‚ê§apun‚ê§apnu‚ê§aupn‚ê§aunp‚ê§anpu‚ê§anup‚ê§npua‚ê§npau‚ê§nupa‚ê§nuap‚ê§napu‚ê§naup‚ê§¬ª

[22:45] <AlexDaniel> you're getting a list of lists from .permutations, so yes, you'll have to join the inner lists first and then the outer ones

[22:49] <dominix> ok, that clear. that AlexDaniel

[22:50] <dominix> that is very kind of you 

[22:50] *** cpan-p6 left
[22:51] *** cpan-p6 joined
[22:52] <dominix> I appreciate this help cause perl6 has some weird concept (to me) it might be because of my primitive background in perl5

[22:52] *** woolfy joined
[22:52] <dominix> but I'll keep formatting

[22:54] <AlexDaniel> :)

[22:58] *** andrzejku left
[23:03] <Xliff> \o

[23:03] <yoleaux> 15:42Z <jnthn> Xliff: CRO_TRACE=1 in the environment

[23:24] *** squashable6 left
[23:27] *** cpan-p6 left
[23:28] *** cpan-p6 joined
[23:28] *** squashable6 joined
[23:28] *** ChanServ sets mode: +v squashable6

[23:42] *** cpan-p6 left
[23:43] *** cpan-p6 joined
