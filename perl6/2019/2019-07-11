[00:00] *** aborazmeh joined
[00:00] *** aborazmeh left
[00:00] *** aborazmeh joined
[00:03] *** wildtrees left
[00:15] *** Manifest0 left
[00:17] *** aborazmeh left
[00:17] *** pounce joined
[00:20] *** Manifest0 joined
[00:29] *** Manifest0 left
[00:34] *** Manifest0 joined
[00:39] *** Manifest0 left
[00:44] *** Manifest0 joined
[00:50] *** Manifest0 left
[00:55] *** Manifest0 joined
[01:04] *** Manifest0 left
[01:10] *** Manifest0 joined
[01:12] *** noisegul_ joined
[01:16] *** noisegul left
[01:19] *** aborazmeh joined
[01:19] *** aborazmeh left
[01:19] *** aborazmeh joined
[01:21] *** molaf left
[01:23] *** aborazmeh left
[01:28] *** Manifest0 left
[01:30] *** Actualeyes left
[01:33] *** Manifest0 joined
[01:33] *** molaf joined
[01:39] *** Manifest0 left
[01:40] *** xiaoyafeng joined
[01:45] *** irced left
[01:47] *** Manifest0 joined
[01:51] *** Manifest0 left
[01:54] *** goon_ left
[01:57] *** Manifest0 joined
[02:03] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:10] *** Manifest0 left
[02:12] *** kaare_ left
[02:15] *** Manifest0 joined
[02:15] <devz3ro> is there a perl6 equivalent to grep -A1 (match + line after)

[02:19] *** Sgeo_ joined
[02:22] *** Sgeo__ left
[02:24] *** squashable6 left
[02:24] <Juerd> m: my @foo = ^20; say @foo[ @foo.grep(* %% 4, :k).map: { $^i .. $i + 1 } ]

[02:24] <camelia> rakudo-moar af1088635: OUTPUT: «((0 1) (4 5) (8 9) (12 13) (16 17))␤»

[02:24] <Juerd> devz3ro: Something like that?

[02:27] *** jeromelanteri joined
[02:29] <vrurg> Juerd: did you mean $^i + 1?

[02:29] *** squashable6 joined
[02:30] *** Manifest0 left
[02:30] <vrurg> I mean, yours works but it probably shouldn't. :)

[02:32] <vrurg> Ah, no, it's correct. Sorry.

[02:35] *** Manifest0 joined
[02:35] <devz3ro> perfect, thank you

[02:38] *** alnk joined
[02:39] *** alnk left
[02:39] *** alnk joined
[02:40] *** jeromelanteri left
[02:48] *** Manifest0 left
[02:54] *** Manifest0 joined
[03:06] *** Manifest0 left
[03:10] *** dpk left
[03:10] *** [dpk] joined
[03:10] *** [dpk] is now known as dpk

[03:12] *** Manifest0 joined
[03:20] *** Manifest0 left
[03:26] *** Manifest0 joined
[03:29] *** Xliff left
[03:30] *** Manifest0 left
[03:31] *** molaf left
[03:36] *** Manifest0 joined
[03:41] *** Manifest0 left
[03:46] *** Manifest0 joined
[03:50] *** goon_ joined
[03:55] *** Manifest0 left
[04:03] *** Manifest0 joined
[04:11] *** [Sno] left
[04:20] *** Manifest0 left
[04:25] *** yht joined
[04:25] *** Manifest0 joined
[04:26] *** [particle] joined
[04:26] *** [particle]1 left
[04:31] *** Manifest0 left
[04:37] *** Manifest0 joined
[04:54] *** Manifest0 left
[05:01] *** pounce left
[05:02] *** Manifest0 joined
[05:04] *** [particle] left
[05:08] *** [particle] joined
[05:08] *** Manifest0 left
[05:14] *** Manifest0 joined
[05:16] *** rindolf joined
[05:18] *** Manifest0 left
[05:26] *** Manifest0 joined
[05:33] *** Manifest0 left
[05:38] *** Manifest0 joined
[05:42] *** Manifest0 left
[05:43] *** Actualeyes joined
[05:48] *** Manifest0 joined
[05:50] *** Actualeyes left
[05:50] *** Actualeyes joined
[06:00] *** Manifest0 left
[06:04] *** Manifest0 joined
[06:09] *** Manifest0 left
[06:14] *** Manifest0 joined
[06:19] *** Manifest0 left
[06:23] <tyil> https://perl6.org/getting-started/involved shows "not found"

[06:23] *** Manifest0 joined
[06:24] *** aborazmeh joined
[06:24] *** aborazmeh left
[06:24] *** aborazmeh joined
[06:31] *** Manifest0 left
[06:32] <rba> tyil: noted

[06:35] *** Manifest0 joined
[06:47] *** Manifest0 left
[06:53] *** Manifest0 joined
[07:05] *** Manifest0 left
[07:05] <Kaiepi> camelia, help

[07:05] <camelia> Kaiepi: Usage: <(nqp-js|nqp-jvm|debug-cat|rakudo-moar|prof-m|rakudo-jvm|nqp-moarvm|star-m|p5-to-p6|rm|rakudo|r-j|nqp-m|r|p6|nqp|j|rj|sm|p56|perl6|nqp-q|master|star|r-jvm|m|r-m|nqp-mvm)(?^::\s(?!OUTPUT)) $perl6_program>

[07:06] <Kaiepi> rakudo-jvm: use NativeCall; say size_t

[07:06] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «(size_t)␤»

[07:07] <lizmat> weekly: http://blogs.perl.org/users/damian_conway/2019/07/infinite-work-is-less-work.html

[07:07] <notable6> lizmat, Noted!

[07:08] *** patrickb joined
[07:08] <Kaiepi> rakudo-jvm: say $*VM.version

[07:08] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «v1.8␤»

[07:09] *** Manifest0 joined
[07:09] <Kaiepi> 1.8...? i thought the target was 1.9

[07:10] <Kaiepi> how long ago was perl6-j updated on camelia?

[07:12] *** robertle joined
[07:12] <Kaiepi> rakudo-jvm: say $*VM.properties

[07:12] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «{awt.toolkit => sun.awt.X11.XToolkit, file.encoding => UTF-8, file.encoding.pkg => sun.io, file.separator => /, java.awt.graphicsenv => sun.awt.X11GraphicsEnvironment, java.awt.printerjob => sun.print.PSPrinterJob, java.class.path => :/home/camelia/rak…»

[07:13] <Kaiepi> rakudo-jvm: say $*PERL.version

[07:13] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «v6.c␤»

[07:14] <robertle> releasable6: status

[07:14] <yoleaux> 2 Jul 2019 14:02Z <AlexDaniel> robertle: https://colabti.org/irclogger/irclogger_log/perl6?date=2019-07-02#l273

[07:14] <releasable6> robertle, Next release will happen when it's ready. R6 is down. At least 1 blocker. 666 out of 681 commits logged

[07:14] *** giaccard joined
[07:14] <releasable6> robertle, Details: https://gist.github.com/3ed6da8a322d9845c06b6a3e416f31b0

[07:20] *** domidumont joined
[07:28] <robertle> .tell dominix Dominique Dumont or I (robertle@semistable.com) would be good fols to talk to regarding debian packaging, there is some stuff to be found starting https://wiki.debian.org/Teams/DebianRakudoGroup and https://salsa.debian.org/perl6-team

[07:28] <yoleaux> robertle: I'll pass your message to dominix.

[07:44] *** giaccard left
[07:47] *** zakharyas joined
[07:48] *** abraxxa joined
[07:53] *** Manifest0 left
[07:55] *** dakkar joined
[07:56] *** formalin14 left
[07:57] *** formalin14 joined
[07:57] *** Manifest0 joined
[08:01] *** molaf joined
[08:04] *** molaf left
[08:10] *** Manifest0 left
[08:11] *** scimon joined
[08:13] *** aborazmeh left
[08:14] *** Manifest0 joined
[08:16] *** abraxxa left
[08:17] *** abraxxa joined
[08:21] *** domidumont left
[08:21] *** domidumont joined
[08:24] *** noisegul_ is now known as noisegul

[08:31] *** Manifest0 left
[08:38] *** Manifest0 joined
[08:43] *** Manifest0 left
[08:47] *** xiaoyafeng left
[08:48] *** Manifest0 joined
[08:50] <lizmat> weekly: https://news.ycombinator.com/item?id=20409663

[08:50] <notable6> lizmat, Noted!

[08:52] *** Manifest0 left
[08:57] *** Manifest0 joined
[09:02] *** Manifest0 left
[09:07] *** Manifest0 joined
[09:09] *** Black_Ribbon left
[09:10] *** Cabanossi left
[09:14] *** Cabanossi joined
[09:22] *** leont joined
[09:23] *** khisanth_ left
[09:24] *** Manifest0 left
[09:29] *** Manifest0 joined
[09:35] *** Actualeyes left
[09:36] *** breinbaas joined
[09:36] *** Manifest0 left
[09:37] *** khisanth_ joined
[09:39] *** antoniogamiz joined
[09:40] <antoniogamiz> how do you pass a variable by reference in perl6? I mean, I want to pass an array to a function and I want all changes made to that array inside the function stay the same when the function finishs

[09:40] *** Manifest0 joined
[09:44] <jnthn> When you pass an array you pass a reference to the array, so that'll happen anywy

[09:44] <jnthn> If you want it on a Scalar container, add `is rw`

[09:52] <antoniogamiz> mmmm

[09:54] *** domidumont left
[09:55] <antoniogamiz> then why @refs it's empty in this case?

[09:55] <antoniogamiz> https://gist.github.com/antoniogamiz/fbf0a7da9fc145b61df27b36ea5d7ee7 

[10:01] *** yht left
[10:01] *** formalin14 left
[10:02] *** formalin14 joined
[10:04] <jnthn> No idea without seeing your top-level call toit

[10:04] <jnthn> *to it

[10:04] <antoniogamiz> my @refs = [];find-references(:$pod, :$origin, url => $origin.url :@refs);

[10:04] <jnthn> Missing , before the :@refs?

[10:05] <jnthn> Also, `= []` is pointless there; `my @refs` is already an empty array

[10:05] <antoniogamiz> omg, the , 

[10:05] <antoniogamiz> ............ Idk why I did not see it

[10:05] <antoniogamiz> thanks a lot!

[10:18] *** Manifest0 left
[10:24] *** Manifest0 joined
[10:25] *** mowcat joined
[10:26] *** yht joined
[10:30] *** sena_kun joined
[10:38] *** HarmtH left
[10:55] <antoniogamiz> recomendations to debug this kind of error? => The iterator of this Seq is already in use/consumed by another Seq(you might solve this by adding .cache on usages of the Seq, orby assigning the Seq into an array)

[10:55] *** Manifest0 left
[11:00] *** kaare_ joined
[11:01] *** Manifest0 joined
[11:04] <sena_kun> antoniogamiz, the error message already says what should be done, and points exact line where the used seq is.

[11:04] <antoniogamiz> but it points to a function definition

[11:05] <sena_kun> antoniogamiz, can you show the code?

[11:16] *** Manifest0 left
[11:17] <antoniogamiz> mmm code is quite long and I cannot simplify the situation x'd

[11:17] <antoniogamiz> I will try a little more and if I cannot solve it I will try to make a reduced example

[11:21] <lizmat> are per chance binding a Seq to an array or so ?

[11:23] *** zakharyas left
[11:24] *** Manifest0 joined
[11:27] <antoniogamiz> lizmat: yes! but I think I have found the problem

[11:27] <lizmat> ok, good to hear

[11:27] <antoniogamiz> the error is thrown when I consult a specific key of a hash

[11:31] *** rfold joined
[11:32] <rfold> p6: sub f(*@args) { @args.perl.say }; f: «foo bar»;

[11:32] <camelia> rakudo-moar 20e74837a: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant value foo bar in sink context (lines 1, 1, 1, 1)␤»

[11:33] <lizmat> rfold: you're creating a label called "f" there

[11:34] <rfold> Ah, I see.

[11:34] <lizmat> m: f: «foo bar»;

[11:34] <camelia> rakudo-moar 20e74837a: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant value foo bar in sink context (lines 1, 1, 1, 1)␤»

[11:34] <lizmat> : only works on methods

[11:34] <lizmat> if the sub is known, you can omit parens

[11:34] <lizmat> m: sub f(*@args) { @args.perl.say }; f «foo bar»;

[11:34] <camelia> rakudo-moar 20e74837a: OUTPUT: «["foo", "bar"]␤»

[11:34] <rfold> Aha, thanks, that makes sense!

[11:45] *** molaf joined
[11:45] *** Manifest0 left
[11:50] *** Manifest0 joined
[12:01] *** Manifest0 left
[12:04] *** candr joined
[12:05] *** mowcat left
[12:06] *** Manifest0 joined
[12:06] *** domidumont joined
[12:11] *** Manifest0 left
[12:14] *** formalin14 left
[12:16] *** Manifest0 joined
[12:20] *** rfold left
[12:20] *** Manifest0 left
[12:21] *** domidumont left
[12:26] *** Manifest0 joined
[12:26] *** antoniogamiz left
[12:32] *** Manifest0 left
[12:37] *** Manifest0 joined
[12:50] *** Manifest0 left
[12:54] *** zakharyas joined
[12:54] *** molaf left
[12:54] *** squashable6 left
[12:55] *** Manifest0 joined
[12:56] *** squashable6 joined
[12:57] *** lucasb joined
[12:57] *** formalin14 joined
[12:57] *** domidumont joined
[13:01] <El_Che> this may intereset some folks here: https://medium.com/darklang/the-design-of-dark-59f5d38e52d2

[13:04] <jnthn> Read it yesterday; yes, it's an interesting perspective indeed.

[13:05] <moritz> note that gitlab takes a similar approach

[13:06] <moritz> it started with just version control, then added issues / project management, CI/CD, and I think chat and editor/IDE support as well (or might be upcoming)

[13:08] *** yht left
[13:10] *** HarmtH joined
[13:12] <El_Che> moritz: yeah, but is is ambition on an other level

[13:12] <moritz> El_Che: agreed

[13:13] <El_Che> wishful thinking of course, but a concurrent and flexible lang as p6 could come in handy autobuilding the backend glue code

[13:13] <El_Che> Go's static nature makes is less flexible

[13:13] <El_Che> python concurrency is a no-no

[13:15] *** pmurias joined
[13:16] <tadzik> I wish people stopped using Medium :(

[13:17] *** domidumont left
[13:18] <timotimo> i'd love it if people brought back webrings with a vengeance

[13:18] <robertle> I heard an interesting talk from Stroustrup, in the discussion afterwards the question about C++'s choice of a linker came up. it uses the C linker, which obviously has lot's of drawbacks for C++, like no namespaces and symbols do not understand types, and from there comes all the weird mangling and I guess something towards template complications.

[13:20] <robertle> strupstrup comment was that even if that was true in hindsight, it would have been impossible to build a linker *and* a new language at the time, so there you are. but also that if you do everything "batteries included", you end up with one monolithic thing that does all, and you probably do not have a community to support that. do you believe your compiler writers are also great at writing standard 

[13:20] <robertle> libraries

[13:20] <pmurias> tadzik: isn't having a site that consists almost entries of dubious quality blog posts convinient to keep them in one place?

[13:21] <pmurias> the graalvm is the only decent thing I ever saw on medium

[13:21] <robertle> I came away with the conclusion that it makes a lot more sense to do one thing and do it well, and then some other people who are better at it can compete, discuss and build a better make tool, library, repository system etc

[13:21] <tadzik> pmurias: well, there is actually interesting stuff there, but it's confusingly mixed with attempts at viral marketing

[13:21] <robertle> this dark language seems to be the exact opposite: reinvent the whole world in one big go

[13:21] *** yht joined
[13:22] <tadzik> which is probably no different to most of the internet these days, but not all content publishing websites are hostile to your readers

[13:23] <El_Che> tadzik: agree about medium 

[13:24] <tadzik> fortunately it looks mostly ok in Reader Mode :)

[13:24] <El_Che> robertle: not reinvent, actually. It's pretty close to what Spring Boot does for Java People today

[13:24] <El_Che> It abstract a lot of the moving pieces

[13:25] <El_Che> s

[13:25] <lucs> Hmm... 'zef install p6doc' wants to write to root owned "/usr/share/perl6..." :(

[13:25] <El_Che> anyway, I think the monolith approach risk crashing against a basic assumption while the world moved on

[13:25] <El_Che> e.g. concurrency and scripting languages

[13:25] <El_Che> not easy to di

[13:26] <El_Che> fix

[13:26] <El_Che> lucs: is it a zef installed as root of a local one in your home?

[13:27] *** dogbert17 joined
[13:27] <lucs> El_Che: I think it's a root-installed zef. Note that I've been installing other modules in $HOME/.zef without problem.

[13:28] <lucs> Can I fix this?

[13:28] <El_Che> I have seen this before, that's why my pkgs provide a root zef and a script to install zef as a user

[13:28] <El_Che> which zef

[13:29] <El_Che> see which zef you're running

[13:29] <lucs> Um, not sure how to find out

[13:29] <lucs> (I don't see a 'version' option or something)

[13:30] <renormalist> Isn't Dark the redo of Smalltalk, just in a different century?

[13:31] <El_Che> lucs: what OS?

[13:31] <El_Che> renormalist: pretty much

[13:32] <lucs> Oh, 'zef --version' works: v0.7.1

[13:32] <pmurias> El_Che: is there an example of what the dark language is somewhere?

[13:32] *** pmurias left
[13:32] <El_Che> I mean which script

[13:32] <ugexe> m: say first { .can-install() }, map { CompUnit::RepositoryRegistry.repository-for-name($_) }, <site home>;

[13:32] <camelia> rakudo-moar 20e74837a: OUTPUT: «Nil␤»

[13:32] <ugexe> that will tell you which repository zef will try to install to with a default config

[13:33] *** pmurias joined
[13:33] <lucs> ugexe: Um, what would <site home> be like?

[13:33] <pmurias> El_Che: the medium post seems to be just a wall of marketing text

[13:34] <ugexe> run it and see

[13:34] <lucs> Oh, I though

[13:34] <lucs> Oh, I thought it was a place holder :)

[13:35] <lucs> inst#/home/lucs/.perl6

[13:35] <ugexe> strange then that it is trying to install to the root owned directory

[13:35] <lucs> More details then...

[13:35] <ugexe> did you install zef from source or another way?

[13:36] <lucs> Checking...

[13:37] <lucs> From a Slackbuild: http://slackbuilds.org/repository/14.2/perl/zef

[13:37] <ugexe> do `zef --help`, towards the bottom it will tell you the full path of the configuration file. open that file and look at the ~5th entry called "DefaultCUR" -- what value is this field?

[13:37] <El_Che> pmurias: my adblocker (ublock origin) + pihole blocks that shit for me

[13:38] <lucs> "DefaultCUR" : ["auto"],

[13:38] <ugexe> yeah that should be doing the right thing then :/

[13:38] <lucs> :(

[13:39] <lucs> Let me get more details...

[13:41] <ugexe> fwiw you should be able to force a workaround via `--install-to=home`

[13:41] <lucs> ugexe: I will paste to you in /msg

[13:41] <lucs> I'll try that.

[13:42] <ugexe> ok I understand now

[13:42] <ugexe> p6doc Build.pm seems flawed

[13:43] <ugexe> https://github.com/perl6/doc/blob/41c473934f9cdd8d1f70fceef0bfa0e66da6b6a7/Build.pm6#L11-L12

[13:43] <lucs> (same result with `--install-to=home`)

[13:43] <lucs> Oho.

[13:43] <ugexe> it assumes it can write to any repository that contains perl6 modules

[13:43] <El_Che> code hidden in a private alpha it seems

[13:45] <ugexe> lucs: you will want to file an issue with p6doc that they cannot assume they can create a /doc directory inside any perl6 repository in their Build.pm

[13:46] <lucs> Could I mention where this directory should have been created, or will they figure that out?

[13:50] *** Necro^Byte joined
[13:50] <ugexe> its a little more complicated than just change the directory

[13:50] <lucs> Yeah, I guess.

[13:51] <ugexe> i.e. if you just install to $*HOME then the docs generated by root are not available

[13:51] <lucs> :/

[13:51] *** domidumont joined
[13:51] <ugexe> however it probably should not be installing docs under a perl6 repo directory

[13:52] <ugexe> that would be ok if docs were installed along with the module, but after-the-fact

[13:53] <ugexe> but not after-the-fact

[13:53] <lucs> ugexe: I will paste parts of this conversation in the issue I will open. Are you okay with that?

[13:54] <ugexe> sure

[13:54] <lucs> Okay, thanks.

[13:56] *** domidumont left
[13:58] *** domidumont joined
[13:59] *** domidumont left
[14:02] *** kaare_ left
[14:09] *** antoniogamiz joined
[14:10] *** Cabanossi left
[14:10] *** formalin14 left
[14:10] *** natrys joined
[14:11] <Geth> ¦ doc: f5e2d6d917 | Coke++ | xt/words.pws

[14:11] <Geth> ¦ doc: learn new word

[14:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f5e2d6d917

[14:12] *** Cabanossi joined
[14:12] *** domidumont joined
[14:15] *** domidumont1 joined
[14:18] *** domidumont left
[14:25] *** domidumont joined
[14:28] *** domidumont1 left
[14:32] *** pmurias left
[14:39] *** pmurias joined
[14:46] *** ravenousmoose joined
[14:54] <AlexDaniel> El_Che: any idea how can I use https://github.com/perl6/rakudo-pkg-canary without the regular prerelease upload location?

[14:58] *** candr left
[15:00] *** domidumont left
[15:05] *** robertle left
[15:07] *** pmurias left
[15:11] *** Black_Ribbon joined
[15:11] <El_Che> AlexDaniel: I can change the wget by git clone of a tag?

[15:12] <AlexDaniel> El_Che: but there's no tag :)

[15:12] <El_Che> branch?

[15:12] <El_Che> or better: what do you have

[15:12] <El_Che> ?

[15:13] <AlexDaniel> El_Che: I'm not sure

[15:13] <AlexDaniel> :)

[15:13] *** domidumont joined
[15:13] <El_Che> AlexDaniel: we need something :)

[15:14] <El_Che> otherwide we need to add some AI code :)

[15:14] *** mowcat joined
[15:19] <El_Che> AlexDaniel: in the meantime, I'll add it to my TODO list to add new distro releases and remove the EOL'ed

[15:21] <AlexDaniel> El_Che: I mean, it almost sounds like we need a release branch :)

[15:22] <AlexDaniel> like, one that we wouldn't delete after the relese :)

[15:22] <AlexDaniel> a

[15:22] *** domidumont1 joined
[15:23] *** domidumont1 left
[15:23] <El_Che> or tag release candidates?

[15:23] <El_Che> v2019.07.2-RC1

[15:23] <AlexDaniel> El_Che: ye but then the link will be different all the time, no?

[15:24] <El_Che> or Tag "canary"

[15:24] <AlexDaniel> El_Che: and with the release branch, we can configure the same travis thingy you have on https://github.com/perl6/rakudo-pkg-canary, but right in the rakudo repo

[15:24] <El_Che> and move the tag around (not done :), I know)

[15:24] <El_Che> but lighter than branching

[15:24] *** domidumont1 joined
[15:24] <AlexDaniel> ok let's try it… hold on…

[15:25] *** domidumont left
[15:25] *** uzl joined
[15:25] <El_Che> rakudo-pkg is building every release, maybe a cron job with a extra param is an option?

[15:26] <El_Che> (just thinking out loud)

[15:26] <uzl> Hello, everyone.

[15:26] <yoleaux> 4 Jul 2019 15:23Z <jmerelo> uzl: you're probably right...

[15:26] <antoniogamiz> uzl: o/

[15:26] <El_Che> uzl: and you're probably right about something

[15:26] <uzl> El_Che: 😃

[15:26] <El_Che> :)

[15:26] <uzl> antoniogamiz: hey!

[15:27] <uzl> m: my @a = letter => 'a', letter => 'b'; @a.hash.put

[15:27] <camelia> rakudo-moar 20e74837a: OUTPUT: «letter  b␤»

[15:27] <uzl> How would I create a hash from @a without using a for loop? 

[15:29] <sena_kun> uzl, how are elements stored?

[15:29] <sena_kun> m: my @a = 'a', 2; @a.Hash.say;

[15:29] <camelia> rakudo-moar 20e74837a: OUTPUT: «{a => 2}␤»

[15:29] <sena_kun> m: my @a = 'a' => 2, 'b' => 3; @a.Hash.say;

[15:29] <camelia> rakudo-moar 20e74837a: OUTPUT: «{a => 2, b => 3}␤»

[15:29] <sena_kun> m: my @a = 'a', 2, 'b', 3; @a.Hash.say;

[15:29] <camelia> rakudo-moar 20e74837a: OUTPUT: «{a => 2, b => 3}␤»

[15:29] <sena_kun> uzl ^ ?

[15:31] <uzl> sena_kun: hold on a sec.

[15:31] <AlexDaniel> there's also classify and categorize, it could be that you need that

[15:31] *** vike left
[15:33] <AlexDaniel> El_Che: ok, so if we have this https://github.com/rakudo/rakudo/tree/prerelease

[15:33] <AlexDaniel> El_Che: there's no way to configure travis specifically for that branch?

[15:34] *** patrickb left
[15:34] <uzl> m: my @a = a = ["test-walk/contents" => "file1.md", "test-walk/contents" => "file3.md", "test-walk/contents/blog" => "blog4.md", "test-walk/contents/blog" => "blog2.md"];

[15:34] <camelia> rakudo-moar 20e74837a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix = instead.␤Did you make a mistake in Pod syntax?␤at <tmp>:1␤------> 3my @a = a =7⏏5 ["test-walk/contents" => "file1.md", "t␤»

[15:34] *** vike joined
[15:34] *** pamplemousse joined
[15:34] <uzl> sena_kun: that's a simplified version.

[15:34] <sena_kun> `@a = a = [...]`?

[15:35] <uzl> m: my @a = ["test-walk/contents" => "file1.md", "test-walk/contents" => "file3.md", "test-walk/contents/blog" => "blog4.md", "test-walk/contents/blog" => "blog2.md"];

[15:35] <camelia> rakudo-moar 20e74837a: ( no output )

[15:35] <sena_kun> just .Hash it

[15:35] <uzl> That one. 

[15:35] <sena_kun> ah, stop

[15:35] <sena_kun> .classify?

[15:35] <uzl> Yeah, but then I loss some of the values except one.

[15:36] <uzl> m: my @a = ["test-walk/contents" => "file1.md", "test-walk/contents" => "file3.md", "test-walk/contents/blog" => "blog4.md", "test-walk/contents/blog" => "blog2.md"]; @a.hash.say

[15:36] <camelia> rakudo-moar 20e74837a: OUTPUT: «{test-walk/contents => file3.md, test-walk/contents/blog => blog2.md}␤»

[15:36] <uzl> I'd like the directory key to map to an array of the files on it.

[15:36] <sena_kun> I remember a trick to collect those, but not exact lines. /afk

[15:37] <uzl> m: my @a = ["test-walk/contents" => "file1.md", "test-walk/contents" => "file3.md", "test-walk/contents/blog" => "blog4.md", "test-walk/contents/blog" => "blog2.md"]; my %h; for @a { %h{$_.key}.push: $_.value }; say %h

[15:37] <camelia> rakudo-moar 20e74837a: OUTPUT: «{test-walk/contents => [file1.md file3.md], test-walk/contents/blog => [blog4.md blog2.md]}␤»

[15:37] <uzl> I can do that but I was wondering if there was possibly a more straightforward way.

[15:39] * uzl looks into classify.

[15:40] <antoniogamiz> uzl: in perl6 there's always more than one way :DDDD

[15:42] <jnthn> m: my @a = ["test-walk/contents" => "file1.md", "test-walk/contents" => "file3.md", "test-walk/contents/blog" => "blog4.md", "test-walk/contents/blog" => "blog2.md"]; my %h.push(@a); say %h;

[15:42] <camelia> rakudo-moar 20e74837a: OUTPUT: «{test-walk/contents => [file1.md file3.md], test-walk/contents/blog => [blog4.md blog2.md]}␤»

[15:44] <uzl> jnthn: That will do the trick ;-)! Didn't thought it'd be so simple. Thanks!

[15:45] <uzl> antoniogamiz: I know. That's why I like P6!

[15:46] *** MasterDuke joined
[15:47] *** zakharyas left
[16:00] *** abraxxa left
[16:05] *** Necro^Byte left
[16:05] *** domidumont1 left
[16:06] *** pamplemousse left
[16:10] *** Cabanossi left
[16:10] *** abraxxa joined
[16:12] *** Manifest0 left
[16:13] *** pamplemousse2 joined
[16:15] *** abraxxa left
[16:16] *** molaf joined
[16:16] *** abraxxa joined
[16:16] *** Cabanossi joined
[16:17] *** uzl left
[16:17] *** Manifest0 joined
[16:19] *** yht left
[16:28] *** Manifest0 left
[16:28] *** scimon left
[16:31] *** yht joined
[16:33] *** abraxxa1 joined
[16:34] *** abraxxa left
[16:34] *** dakkar left
[16:34] *** Manifest0 joined
[16:34] *** abraxxa1 left
[16:39] *** ChoHag left
[16:40] *** Manifest0 left
[16:43] *** robertle joined
[16:46] *** Manifest0 joined
[16:46] <TreyHarris> .tell grondilu looking back in logs, that was sent in March--you were looking for syntax on how to specify a constraint clause where the Whatevers referred to a list's contents being numeric in various ways instead of the list itself as a unit (which is obviously always numeric, but in very different ways to its possibly-numeric contents). Someone suggested .ACCEPTS(Array) as a decent way of getting at list-y

[16:46] <yoleaux> TreyHarris: I'll pass your message to grondilu.

[16:47] <TreyHarris> structures, so I cobbled that together

[16:53] *** Manifest0 left
[16:56] *** Sgeo__ joined
[16:58] *** Manifest0 joined
[16:58] *** pamplemousse2 left
[17:00] *** Sgeo_ left
[17:07] *** antoniogamiz left
[17:08] *** Manifest0 left
[17:08] *** antoniogamiz joined
[17:09] *** [Sno] joined
[17:09] *** |oLa| left
[17:14] *** Sgeo_ joined
[17:14] *** Manifest0 joined
[17:18] *** Sgeo__ left
[17:20] <Geth> ¦ doc: 7925341365 | (Tim Van den Langenbergh)++ | doc/Language/regexes.pod6

[17:20] <Geth> ¦ doc: Add the `S///` section from operators to regexes

[17:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7925341365

[17:20] <Geth> ¦ doc: 84a44ceb2a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[17:20] <Geth> ¦ doc: Merge pull request #2894 from tmtvl/2892-add-non-destructive-substitution-to-regex-documentation

[17:20] <synopsebot> Link: https://doc.perl6.org/language/regexes

[17:20] <Geth> ¦ doc: 

[17:20] <Geth> ¦ doc: Add the `S///` section from operators to regexes

[17:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/84a44ceb2a

[17:20] <Geth> ¦ doc: JJ assigned to noisegul Issue Can't install p6doc as a non-privileged user,  https://github.com/perl6/doc/issues/2896

[17:23] *** rfold joined
[17:24] *** antoniogamiz left
[17:24] *** antoniogamiz joined
[17:25] *** ChoHag joined
[17:31] *** molaf left
[17:31] *** Manifest0 left
[17:33] *** wildtrees joined
[17:36] *** Manifest0 joined
[17:40] *** antoniogamiz left
[17:40] *** antoniogamiz joined
[17:53] *** Manifest0 left
[17:56] *** ChoHag left
[17:58] *** mowcat left
[17:59] *** Manifest0 joined
[18:02] *** ChoHag joined
[18:08] <antoniogamiz> What do you think of this? => https://github.com/antoniogamiz/Perl6-Documentable

[18:08] *** Manifest0 left
[18:08] <antoniogamiz> recommendations? suggestions? any feedback is welcomed

[18:09] <antoniogamiz> it's a fix for https://github.com/perl6/doc/issues/1823

[18:12] *** pounce joined
[18:12] <ugexe> improve CI testing

[18:12] <ugexe> look at how zef tests the various cli commands -- https://github.com/ugexe/zef/blob/master/.travis.yml#L60

[18:13] <ugexe> which also act as examples of use

[18:14] *** Manifest0 joined
[18:15] <antoniogamiz> mmm currently it does not have any CI tests so I will add them :D

[18:15] <antoniogamiz> so you execute every command to see if it fails, right?

[18:15] <ugexe> right

[18:16] <antoniogamiz> good, thanks for that :D

[18:17] <ugexe> you probably should write subtests like this

[18:17] <ugexe> subtest 'Foo bar' => { }

[18:17] <ugexe> instead of subtest { }, 'Foo bar';

[18:18] <antoniogamiz> oh that way is more readable isn't it?

[18:18] <ugexe> exactly

[18:21] <ugexe> lib/Perl6/Documentable.pm6 uses Pod::Utilites, but it is only listed under test-depends, not depends

[18:21] <antoniogamiz> oh right, I will fix it right now

[18:22] *** Manifest0 left
[18:24] <antoniogamiz> do you think I should shorten the modules names stripping out Perl6::?

[18:24] <ugexe> i think its fine with Perl6

[18:24] <ugexe> you list `resources/language-order-control.json` in resources section of META6.json, but it should just be `language-order-control.json`

[18:25] <ugexe> i'm guessing you havent tried to install this yet?

[18:25] <antoniogamiz> eemm you are right

[18:26] <ugexe> there is a `unit class Perl6::Documentable:ver<0.0.1>;` but the META6.json says it is version 1.0.0

[18:26] <ugexe> as part of your CI test you will want to actually install your module (not just run the tests)

[18:27] <antoniogamiz> I will take that in mind!

[18:28] *** Manifest0 joined
[18:34] *** Manifest0 left
[18:39] *** Manifest0 joined
[18:39] *** Sgeo__ joined
[18:43] *** Sgeo_ left
[18:48] <antoniogamiz> ugexe: after fix a lot of problems now I have learned that I really have to add installing the module to CI

[18:49] <antoniogamiz> thanks a lot for taking the time and help me! :D

[18:49] <ugexe> have fun progressing 

[18:52] *** pounce left
[18:56] *** antoniogamiz left
[18:58] *** pounce joined
[19:02] *** Manifest0 left
[19:08] *** Manifest0 joined
[19:13] *** Manifest0 left
[19:19] *** Manifest0 joined
[19:26] *** ChoHag left
[19:28] *** molaf joined
[19:33] *** Manifest0 left
[19:37] *** ChoHag joined
[19:38] *** Manifest0 joined
[19:43] *** Manifest0 left
[19:48] *** Manifest0 joined
[19:56] *** pounce left
[19:56] *** Kaiepi left
[19:57] *** Manifest0 left
[20:02] *** Manifest0 joined
[20:04] *** Sgeo_ joined
[20:05] *** __jrjsmrtn__ left
[20:05] *** ChoHag left
[20:05] *** __jrjsmrtn__ joined
[20:07] *** Sgeo__ left
[20:10] *** pecastro joined
[20:12] *** Manifest0 left
[20:18] *** Manifest0 joined
[20:18] *** Sgeo_ left
[20:19] *** Sgeo_ joined
[20:24] *** Manifest0 left
[20:26] *** squashable6 left
[20:26] *** ChoHag joined
[20:29] *** squashable6 joined
[20:29] *** ChanServ sets mode: +v squashable6

[20:29] *** Manifest0 joined
[20:30] *** mowcat joined
[20:44] *** Manifest0 left
[20:45] <El_Che> there was less perl drama when Twitter was down. 

[20:45] * El_Che closes Twitter

[20:50] *** Manifest0 joined
[20:56] *** rindolf left
[21:03] <Geth> ¦ doc: 0b0a01fc4e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/unicode.pod6

[21:03] <Geth> ¦ doc: tidy text

[21:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0b0a01fc4e

[21:03] <synopsebot> Link: https://doc.perl6.org/language/unicode

[21:08] *** pounce joined
[21:14] <wildtrees> how can I erase or redefine a class, say at the repl? 

[21:15] *** MasterDuke left
[21:15] *** kst` is now known as kst

[21:18] *** Kaiepi joined
[21:19] *** rfold left
[21:24] *** MasterDuke joined
[21:34] *** Xliff joined
[21:34] <Xliff> \o

[21:34] <Xliff> m: %a = ( a => 1, b =>2, c => 3)

[21:34] <camelia> rakudo-moar 20e74837a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '%a' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5%a = ( a => 1, b =>2, c => 3)␤»

[21:34] <Xliff> m: my %a = ( a => 1, b =>2, c => 3 );  %a.values »*=« 5; %a.gist.say

[21:34] <camelia> rakudo-moar 20e74837a: OUTPUT: «Lists on either side of non-dwimmy hyperop of infix:<*> + {assigning} are not of the same length while recursing␤left: 3 elements, right: 1 elements␤  in block <unit> at <tmp> line 1␤␤»

[21:35] <Xliff> m: my %a = ( a => 1, b =>2, c => 3 );  %a.values «*=» 5; %a.gist.say

[21:35] <camelia> rakudo-moar 20e74837a: OUTPUT: «{a => 5, b => 10, c => 15}␤»

[21:35] <Xliff> I love hyper-ops

[21:36] <Xliff> m: my %a = ( a => 1, b =>2, c => 3 );  %a.values.map( * * 5 ).say

[21:36] <camelia> rakudo-moar 20e74837a: OUTPUT: «(15 5 10)␤»

[21:37] <Xliff> m: my %a = ( a => 1, b =>2, c => 3 );  %a.values.map( * * 5 ).sum.say

[21:37] <camelia> rakudo-moar 20e74837a: OUTPUT: «30␤»

[21:37] <Xliff> Is there a more readable way to do this: ^^

[21:38] <Xliff> m: my %a = ( a => 1, b =>2, c => 3 );  %a.values.map({ $_ * 5 }).sum.say # may have to do

[21:38] <camelia> rakudo-moar 20e74837a: OUTPUT: «30␤»

[21:38] <Xliff> Yeah.

[21:45] *** [particle]1 joined
[21:46] *** pounce left
[21:47] *** [particle] left
[21:51] <Xliff> m: my $i; sub wtf { if $i++ > 10 { say 'H!'; exit }; for ^100 { wtf }; say "WTF?"

[21:51] <camelia> rakudo-moar 20e74837a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3!'; exit }; for ^100 { wtf }; say "WTF?"7⏏5<EOL>␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        stat…»

[21:52] <Xliff> m: my $i; sub wtf { if $i++ > 10 { say 'H!'; exit }; }; for ^100 { wtf }; say "WTF?";

[21:52] <camelia> rakudo-moar 20e74837a: OUTPUT: «H!␤»

[21:52] <Xliff> m: my $isItAMatterOfLength; sub wtf { if $isItMatterOfLength++ > 10 { say 'H!'; exit }; }; for ^100 { wtf }; say "WTF?";

[21:52] <camelia> rakudo-moar 20e74837a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$isItMatterOfLength' is not declared. Did you mean '$isItAMatterOfLength'?␤at <tmp>:1␤------> 3my $isItAMatterOfLength; sub wtf { if 7⏏5$isItMatterOfLength++ > 10 { say 'H!'; e␤»

[21:52] *** [particle]2 joined
[21:53] <Xliff> m: my $isItAMatterOfLength; sub wtf { if $isItAMatterOfLength++ > 10 { say 'H!'; exit }; }; for ^100 { wtf }; say "WTF?";

[21:53] <camelia> rakudo-moar 20e74837a: OUTPUT: «H!␤»

[21:53] <Xliff> m: $*PERL.compiler.version.say

[21:53] <camelia> rakudo-moar 20e74837a: OUTPUT: «v2019.03.1.683.g.20.e.74837.a␤»

[21:53] *** [particle]1 left
[21:54] <sena_kun> was rakudo released? I see some failures on HEAD with Cro::LDAP, now checking it again, might be a blocker.

[21:55] *** Kaiepi left
[21:56] <sena_kun> can someone on release branch test it out?

[21:56] *** [particle] joined
[21:57] <Geth> ¦ doc: tbrowder self-assigned Need section on bracketing constructs https://github.com/perl6/doc/issues/2897

[21:57] *** [particle]2 left
[21:57] *** [particle]1 joined
[21:59] *** kensanata joined
[22:01] *** [particle] left
[22:02] <wildtrees> how can I erase or redefine a class, say at the repl? (reposting ) 

[22:04] <jnthn> Declare it lexically (my class Foo { })

[22:15] *** [particle] joined
[22:15] *** [particle]1 left
[22:16] *** Kaiepi joined
[22:18] <wildtrees> cool, thanks jnthn 

[22:20] <Xliff> m: 1000.exp(5).say

[22:20] <camelia> rakudo-moar 20e74837a: OUTPUT: «93326361850321887899008954472381716961709144637170802462171433979596691097577563445444032709788110235959498993032424262421548752135403239484152081720393075623441066613832515027399507598590183151110049079626511311824051251479593379080517827112541510381…»

[22:21] <Xliff> m: 1000.log.say

[22:21] <camelia> rakudo-moar 20e74837a: OUTPUT: «6.907755278982137␤»

[22:21] <Xliff> m: 1000.log(5).say

[22:21] <camelia> rakudo-moar 20e74837a: OUTPUT: «4.29202967422018␤»

[22:23] <Xliff> m: 5 =~= 5.1

[22:23] <camelia> rakudo-moar 20e74837a: ( no output )

[22:23] <Xliff> m: say 5 =~= 5.1

[22:23] <camelia> rakudo-moar 20e74837a: OUTPUT: «False␤»

[22:23] <Xliff> m: say 5 =~= 5 + 1e-10

[22:23] <camelia> rakudo-moar 20e74837a: OUTPUT: «False␤»

[22:23] <Xliff> m: say 5 =~= 5 + 1e-15

[22:23] <camelia> rakudo-moar 20e74837a: OUTPUT: «True␤»

[22:23] <Xliff> m: say 5 =~= 5 + 1e-14

[22:23] <camelia> rakudo-moar 20e74837a: OUTPUT: «False␤»

[22:23] *** kensanata left
[22:40] <ugexe> sena_kun: I see regression between 2019.03.1 and blead. although i dont know about the release itself

[22:41] <ugexe> '===SORRY!=== Missing serialize REPR function for REPR NativeRef (StrLexRef)' for each test

[22:42] <sena_kun> ugexe, sigh, I saw the same error on travis.

[22:43] <sena_kun> I wonder if I get killed after creating a blocker ticket...

[22:43] <ugexe> which module uses NativeCall in that dependency chain?

[22:43] <sena_kun> ugexe, only OpenSSL, I believe.

[22:43] <sena_kun> also SSL::Async.

[22:43] <ugexe> er, i dont know if NativeRef is nativecall or not

[22:44] <ugexe> its not

[22:45] <ugexe> nqp/ops.markdown shows it alot for the atomics/cas

[22:55] <ugexe> sena_kun: `perl6 -I. -e 'use Cro::LDAP::Client;'`

[22:56] <ugexe> thats enough to trigger it

[22:56] <sena_kun> ugexe, on bleed?

[22:56] <Xliff> nfin!sole

[22:57] <ugexe> yes

[22:57] <ugexe> use Cro::LDAP::Types

[22:58] <ugexe> thats better, as that module only uses 3 other modules (all of which can be used fine)

[22:58] <sena_kun> nooooooooo

[22:58] <sena_kun> Cro::LDAP::Types has ASN::META behind it and it contains the most black magic.

[22:58] *** Kaiepi left
[22:59] <ugexe> looks like `use ASN::META <file docs/ldap.asn>;` is the line that does it (but only if used inside a module, not when dong via -e 'use use ASN::META <file docs/ldap.asn>;')

[23:01] <sena_kun> https://github.com/rakudo/rakudo/issues/3045

[23:04] <ugexe> im not sure how that will work

[23:04] <ugexe> that docs/ldap.asn

[23:05] <ugexe> that means you have to run things from a specific directory

[23:05] <sena_kun> yes

[23:05] <sena_kun> from cro-ldap

[23:05] <sena_kun> apparently

[23:05] *** pecastro left
[23:06] <sena_kun> it relies on zef being run from there and it does, as it worked before just fine

[23:06] <sena_kun> though it is bad

[23:06] <sena_kun> and ugly too

[23:06] <ugexe> yeah, and its unrelated to this. but i mean when its installed

[23:06] <ugexe> that wont work

[23:06] <sena_kun> ugexe, can module be installed and then re-precompiled?

[23:06] <sena_kun> without sources?

[23:07] <sena_kun> during compilation I basically parse it, build AST, then generate types, export them, finita la comedia.

[23:07] <sena_kun> so it only happens once.

[23:08] *** rindolf joined
[23:08] <AlexDaniel> *heavy breathing*

[23:08] <sena_kun> OTOH I am not aware of guts, so there is probably a more robust way of passing the file instead of this relative filename. :/

[23:08] <sena_kun> AlexDaniel, o/

[23:09] <sena_kun> AlexDaniel, feel free to pretend my ticket doesn't exist

[23:09] <AlexDaniel> sena_kun: sooo… `git bisect` ?

[23:09] <sena_kun> AlexDaniel, it fails on release branch too, not just master?

[23:09] <ugexe> bisect `use Cro::LDAP::Types`

[23:10] <AlexDaniel> sena_kun: I don't know! But any reason why you can't run `git bisect` to figure it out? :)

[23:11] <sena_kun> AlexDaniel, I don't have rakudo development stuff to git bisect it. :/

[23:11] <sena_kun> inb4: so just get it

[23:15] <AlexDaniel> let's see if I can get the answer reeeally quick with blin

[23:16] <sena_kun> AlexDaniel, can Blin work with modules not from ecosystem?

[23:16] <AlexDaniel> sena_kun: it can work with any arbitrary script, yeah

[23:17] <AlexDaniel> in this case I'm doing something like: use lib ‘/home/alex/git/Blin/cro-ldap’; use Cro::LDAP::Types;

[23:17] <AlexDaniel> it should work I guess

[23:17] <AlexDaniel> and these are the deps: OO::Monitors Text::LDIF Cro::TLS Cro::Core IO::Socket::Async::SSL ASN::BER ASN::META ASN::Grammar OpenSSL Type::EnumHOW

[23:18] <AlexDaniel> so it's like

[23:18] <sena_kun> the deps are likely safe, I think it's a regression for ASN::META.

[23:18] <AlexDaniel> bin/blin.p6 --old=2019.03.1 --new=HEAD --custom-script=doodle.p6 OO::Monitors Text::LDIF Cro::TLS Cro::Core IO::Socket::Async::SSL ASN::BER ASN::META ASN::Grammar OpenSSL Type::EnumHOW

[23:18] <Xliff> AlexDaniel: see ugexe's comment. 

[23:18] <sena_kun> you need to use it with a file

[23:19] <AlexDaniel> ooo… oh?

[23:19] <sena_kun> AlexDaniel, `use Cro::LDAP::Types <file /home/alex/git/Blin/cro-ldap/docs/ldap.asn>;`, I think

[23:20] <ugexe> no, use Cro::LDAP::Types is enough

[23:21] <ugexe> that will call ASN::META <file ...>

[23:21] <ugexe> which needs to be called from a module to get the same error

[23:21] <sena_kun> ah, sorry

[23:21] <sena_kun> it seems I am brain dead from lack of sleep already...

[23:24] *** Kaiepi joined
[23:25] <AlexDaniel> OK I had a path problem, trying again…

[23:26] <AlexDaniel> (to ldap.asn file that is)

[23:26] *** lucasb left
[23:27] <sena_kun> I think you need cd, to do it from `cro-lda` directory

[23:27] *** natrys left
[23:29] <AlexDaniel> 🥞🥞🥞 Bisecting doodle.p6

[23:29] <AlexDaniel> okay!

[23:34] <AlexDaniel> https://gist.github.com/AlexDaniel/602d4af5feb32870540582d336533172

[23:35] <AlexDaniel> sena_kun, ugexe: ↑

[23:35] <AlexDaniel> nine: :)

[23:36] <AlexDaniel> Blin++

[23:39] <sena_kun> AlexDaniel++

[23:40] <AlexDaniel> and yeah, it's on the release branch too, so please take a look while I'm doing the release stuff at turtle speeds

[23:42] <sena_kun> well, I know there is a lot of hard work around this release, so feel very, ahem, not too nice reporting this. :( I'll present Cro::LDAP at Perlcon, so we won't be able to cut a new release before that. Though I still can say that there was a regression and 03 is ok.

[23:42] <sena_kun> anyway, I am going to sleep to keep some sanity. o/

[23:42] *** sena_kun left
[23:45] <Xliff> Yikes!

[23:46] <Xliff> That was done to support my use of Method::Also on various projects.

[23:51] <ugexe> i'd prefer to not mess up the talk if possible

[23:51] *** rindolf left
[23:56] <AlexDaniel> ah re “the deps are likely safe”, you *have* to tell Blin about these modules, otherwise they won't be installed

[23:56] <AlexDaniel> and I believe Blin won't use anything installed on your system

[23:58] *** wildtrees left
