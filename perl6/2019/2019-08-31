[00:06] *** lichtkind_ joined
[00:09] *** lichtkind left
[00:16] *** guifa joined
[00:17] <guifa> jnthn++ as always 

[00:23] <cpan-p6> New module released to CPAN! POSIX::getaddrinfo (0.0.1) by 03MLDEVINE

[00:27] *** Sgeo left
[00:29] *** Sgeo joined
[00:49] *** lichtkind_ left
[00:57] *** aborazmeh joined
[00:57] *** aborazmeh left
[00:57] *** aborazmeh joined
[01:12] *** Kaiepi joined
[01:13] *** sortiz joined
[01:53] *** netrino left
[01:59] *** molaf left
[02:04] *** Manifest0 joined
[02:12] *** molaf joined
[02:29] *** pilne left
[02:31] *** adu joined
[02:32] *** aborazmeh left
[02:33] *** Cabanoss- left
[02:36] *** Cabanossi joined
[02:54] <Grinnz> AlexDaniel: agreed with the transferring individual repos idea, github has very good compatibility set up for this case and it sounds like they don't for the org transfer

[02:55] *** tejr joined
[02:57] <AlexDaniel> Grinnz: yeah, well. Just out of curiousity, I wonder if gitlab handles transfers better

[02:57] <Grinnz> no idea on that

[03:13] *** powellc joined
[03:28] <Xliff> \o

[03:29] <Xliff> Is there an ^add_method equivalent for packages?

[03:34] <Xliff> How would I dynamically add a sub to a package?

[03:46] <Xliff> m: package A { BEGIN { my $name = 'fpp'

[03:46] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/mTJAQHIViW␤Missing…»

[03:46] <evalable6> Xliff, Full output: https://gist.github.com/b3d6075838b7804efc98fd84db55c042

[03:48] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod<is>(:export, &a) }; 

[03:48] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/HZUYVNpqt9␤Undeclared routine:␤    trait_mod used at line 1␤␤»

[03:48] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) }; 

[03:48] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/7Vz2NGdfLv␤Missing block␤at /tmp/7Vz2NGdfLv:1␤------> 03ame } }; trait_mod:<is>(:export, &a) }; 08⏏04<EOL>␤»

[03:48] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) } }; 

[03:48] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «»

[03:48] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) } }; foo;

[03:48] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/SFnOpKWK3r␤Undeclared routine:␤    foo used at line 1␤␤»

[03:49] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) } }; use A; foo;

[03:49] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find A at line 1 in:␤    file#/home/bisectable/git/wh…»

[03:49] <evalable6> Xliff, Full output: https://gist.github.com/7952e189b2735575bff9b16931a0c75a

[03:49] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) } }; use A::foo;

[03:49] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find A::foo at line 1 in:␤    file#/home/bisectable/g…»

[03:49] <evalable6> Xliff, Full output: https://gist.github.com/f5412725711f07b794192a86e83a7d58

[03:49] <Xliff> m: module A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) } }; use A::foo;

[03:49] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find A::foo at line 1 in:␤    file#/home/bisectable/g…»

[03:49] <evalable6> Xliff, Full output: https://gist.github.com/1b9603fb320846dd88b5f0c8d22c8b54

[03:51] <Xliff> m: package A { BEGIN { my $name = 'foo'; sub a { say 'OHAI!' } but role { method name { $name } }; trait_mod:<is>(:export, &a) } } }; use A::foo;

[03:51] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/j9hKiAVO2v␤Unexpected closing bracket␤at /tmp/j9hKiAVO2v:1␤------> 03me } }; trait_mod:<is>(:export, &a) } } 08⏏04}; use A::foo;␤»

[03:58] <Xliff> .tell moritz https://gist.github.com/moritz/2366919

[03:58] <tellable6> Xliff, I'll pass your message to moritz

[04:03] *** TreyHarris joined
[04:05] *** molaf left
[04:07] *** adu left
[04:25] <sortiz> m: package A { };  A::<&foo> = -> { say "ohai" }; A::foo(); # Xliff

[04:25] <evalable6> sortiz, rakudo-moar 579ac66e8: OUTPUT: «ohai␤»

[04:28] *** Woodi joined
[04:44] <Xliff> sortiz++

[04:45] <Xliff> Can I do that from within the package? I want to alias a sub to another name.

[04:45] <Xliff> Or could I just "constant alias is export := &orig" ?

[04:45] <Xliff> Also, how can I send to stdout without a CR?

[04:48] <Woodi> print ?

[04:48] <Woodi> hi today :)

[04:50] <sortiz> m: package A { our sub foo() { say "ohai"} }; package B { constant bar = ::("&A::foo"); }; B::bar();

[04:50] <evalable6> sortiz, rakudo-moar 579ac66e8: OUTPUT: «ohai␤»

[04:55] <sortiz> m: package A { our sub foo() { say "ohai"} }; package B { our &bar = ::("&A::foo"); }; B::bar();

[04:55] <evalable6> sortiz, rakudo-moar 579ac66e8: OUTPUT: «ohai␤»

[04:56] <sortiz> o/ Woodi

[04:59] <sortiz> m: package A { our sub foo() { say "ohai"} }; package B { our &bar is export = ::("&A::foo"); }; import B; bar();

[04:59] <evalable6> sortiz, rakudo-moar 579ac66e8: OUTPUT: «ohai␤»

[05:06] *** sortiz left
[05:09] <Xliff> m: my @qp = (1, :all); say |@qp; say @qp.gist

[05:09] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «1all => True␤[1 all => True]␤»

[05:15] <Xliff> m: sub a ($a, :$b) { say 'ohai' }; a(:full)

[05:15] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) Too few positionals passed; expected 1 argument but got 0␤  in sub a at /tmp/_MYtSUhasc line 1␤  in block <unit> at /tmp/_MYtSUhasc line 1␤␤»

[05:15] <Xliff> m: sub a ($a, :$b) { say 'ohai' }; a(1, :full)

[05:15] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) Unexpected named argument 'full' passed␤  in sub a at /tmp/P_Mo1CKwBa line 1␤  in block <unit> at /tmp/P_Mo1CKwBa line 1␤␤»

[05:15] <Xliff> m: sub a ($a, :$full) { say 'ohai' }; a(1, :full)

[05:15] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «ohai␤»

[05:15] <Xliff> m: sub a ($a, :$full) { say 'ohai' }; a(:full)

[05:15] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «(exit code 1) Too few positionals passed; expected 1 argument but got 0␤  in sub a at /tmp/26pPDBRPGI line 1␤  in block <unit> at /tmp/26pPDBRPGI line 1␤␤»

[05:15] <Xliff> m: my @a = (:full); sub a ($a, :$full) { say 'ohai' }; a(|@a)

[05:15] <evalable6> Xliff, rakudo-moar 579ac66e8: OUTPUT: «ohai␤»

[05:20] <Xliff> This is the right way to define an all-args proto, yes? "proto method query_duration (|)"

[05:47] *** sauvin joined
[06:32] *** jjmerelo joined
[06:45] <moritz> Xliff: yes

[06:46] <tellable6> 2019-08-31T03:58:50Z #perl6 <Xliff> moritz https://gist.github.com/moritz/2366919

[06:46] <Geth> ¦ doc: 568ff30797 | (JJ Merelo)++ | .circleci/config.yml

[06:46] <Geth> ¦ doc: Adds CircleCI to generate documentation refs #2983

[06:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/568ff30797

[06:48] <Geth> ¦ doc: e0533eb223 | (JJ Merelo)++ | .circleci/config.yml

[06:48] <Geth> ¦ doc: Re-testing documentable refs #2983

[06:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e0533eb223

[06:55] *** argent0 left
[06:59] <Geth> ¦ doc: 2a812ba812 | (JJ Merelo)++ | .circleci/config.yml

[06:59] <Geth> ¦ doc: Re-testing documentable refs #2983

[06:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2a812ba812

[07:06] <Geth> ¦ doc: 50f7448797 | (JJ Merelo)++ | .circleci/config.yml

[07:06] <Geth> ¦ doc: Re-testing documentable refs #2983

[07:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/50f7448797

[07:15] *** __jrjsmrtn__ joined
[07:18] *** [particle]1 joined
[07:20] *** [particle] left
[07:21] <Geth> ¦ doc: 909c52092a | (JJ Merelo)++ | README.md

[07:21] <Geth> ¦ doc: Adds CircleCI badge refs #2983

[07:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/909c52092a

[07:25] <Geth> ¦ doc: b7a24c79c4 | (JJ Merelo)++ | README.md

[07:25] <Geth> ¦ doc: Fixes CircleCI badge refs #2983

[07:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b7a24c79c4

[07:26] <Geth> ¦ doc: 3eb02cc8a7 | Antonio++ (committed using GitHub Web editor) | README.md

[07:26] <Geth> ¦ doc: Update README.md

[07:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3eb02cc8a7

[07:26] *** gugod joined
[07:27] <Geth> ¦ doc: 5eaaad68d0 | Antonio++ (committed using GitHub Web editor) | README.md

[07:27] <Geth> ¦ doc: Update README.md

[07:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5eaaad68d0

[07:29] <jjmerelo> This is badge-driven development...

[07:29] <Xliff> \o jj!

[07:33] *** [particle]1 left
[07:37] *** antoniogamiz joined
[07:37] <antoniogamiz> o/

[07:38] <Xliff> \o

[07:40] *** Ven`` joined
[07:41] <antoniogamiz> what do you think of this super complex github-hook? => https://gist.github.com/antoniogamiz/8837c32c57cfa6eb06a90da59dc56fe4

[07:41] <antoniogamiz> recommendations? is to auto-update the documentation of perl6

[07:42] *** [particle] joined
[07:42] <rba> antoniogamiz: you can consider too, to let the auto-update run on the server using cron in regular intervals

[07:43] <antoniogamiz> I know, but we want to update it when someone pushs

[07:45] <Geth> ¦ doc: c7a38214cd | (JJ Merelo)++ | .circleci/config.yml

[07:45] <Geth> ¦ doc: Changes to documentable container refs #2983

[07:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c7a38214cd

[07:46] <jjmerelo> rba: we were thinking about creating a webhook

[07:47] <rba> antoniogamiz: so we install the above hook on the server?

[07:48] <rba> you have to consider port-scanners.

[07:48] <jjmerelo> rba: hum

[07:48] <jjmerelo> rba: so it's safer to pull than to get pushed?

[07:49] <rba> antoniogamiz: no, we have to consider some minimal security. mainly to avoid denial of service

[07:49] <antoniogamiz> rba: mmm 

[07:50] <antoniogamiz> rba: and could have docker installed?

[07:50] <antoniogamiz> we have a container with everything ready-to-use

[07:50] <antoniogamiz> to avoid installing perl6 and a lot of dependencies

[07:51] <rba> antoniogamiz: https://developer.github.com/webhooks/securing/

[07:52] <rba> docker will be installed, yet not not planned atm on the host we currently run the websites.

[07:55] <rba> jjmerelo: for testing, you can let run the hook without security though...

[07:58] <jjmerelo> rba: you mean we can install a hook as long as we provide it with some kind of security?

[08:00] <jjmerelo> rba: we could still have a DoS attack, though. Although I guess we run the risk of having it anyway as long as we serve HTTP ports

[08:02] <antoniogamiz> rba: and if we redirect a url from nginx?

[08:03] <antoniogamiz> I mean, Rediret the hook using nginx (wheRe we use https)

[08:05] *** xinming_ joined
[08:08] *** xinming left
[08:08] <rba> jjmerelo: you‘re right. above token for only validate, that the request is come from github.

[08:09] <rba> antoniogamiz: we can redirect it from nginx, yes.

[08:09] <Geth> ¦ doc: 4fa72d037b | (JJ Merelo)++ | .circleci/config.yml

[08:09] <Geth> ¦ doc: Eliminates annoying progress bars, refs #2983

[08:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4fa72d037b

[08:11] <rba> jjmerelo: you like to do this yourself on the host where docs-stage is served?

[08:11] <jjmerelo> rba: so the basic idea would be to configure nginx to listen to an URL, and also to validate where the request is coming from, and only run in that case

[08:11] <rba> coming from might be difficult, as github might run a bunch of hosts.

[08:12] <jjmerelo> jjmerelo: yep, I guess so. Would be the easiest. The web hook would run documentable update, and then rsync the result to /var/www/

[08:12] <jjmerelo> rba: what do you suggest?

[08:13] <rba> jjmerelo: just try it out.

[08:13] <rba> signature could be added later.

[08:15] <jjmerelo> rba: OK.

[08:15] *** molaf joined
[08:15] <jjmerelo> rba: I think we're going to start a doc-infra repo and start to put everything in there, including all the stuff that's needed to actually build the documentation

[08:16] <jjmerelo> like node, for instance.

[08:17] <antoniogamiz> yep, good idea

[08:18] <rba> makes sense

[08:19] <El_Che> p

[08:19] <El_Che> sorry

[08:20] <El_Che> If you run docker, the Dockerfile with comments could be a good doc for the part it runs

[08:21] <jjmerelo> rba: what do you suggest as a bootstrap script to install everything that's needed for this? Ansible? A simple shell script?

[08:23] <El_Che> I am not rba, but to me it sounds you're thinking into the right lines. You can also migrate to a automated setup piece by piece

[08:25] *** Ven`` left
[08:25] <El_Che> (I like the ideas of containers because it's easy to move stuff around to a new host. Distro and version of the host don't matter

[08:25] <rba> We haven‘t decieded yet which tool (Ansible, Jenkins, Chef, ...) we like to use. Like to start first using docker and CI tools, then look more into this.

[08:26] <rba> Shell script is fine atm.

[08:28] <jjmerelo> rba thanks

[08:28] <jjmerelo> rba also, I would try to install everything in userspace

[08:33] <antoniogamiz> can I invoke MAIN Functions from another module?

[08:33] <tadzik> what happens if you try? :)

[08:33] <tadzik> also, yes

[08:34] <antoniogamiz> I have tried it, but it does not wokr :,/

[08:34] <tadzik> what does the error say?

[08:34] <tadzik> have you `is export`ed them?

[08:34] <antoniogamiz> could not find symbol &MAIN

[08:34] <antoniogamiz> I have added it to proto MAIN

[08:34] <antoniogamiz> maybe i need to add it to every main

[08:35] <tadzik> I just see all my MAINs exported in my module, maybe there is a better way

[08:35] <antoniogamiz> mmm 

[08:36] <antoniogamiz> I have the main's statements inside a package

[08:36] <antoniogamiz> maybe that's Related?

[08:37] <rba> jjmerelo, antoniogamiz: I will be afk for the majority of the day. In case you need urgent help, send me a private irc message and I will go online as soon as I can...

[08:38] <antoniogamiz> rba: ok, thanks for your help :)

[08:38] <tadzik> hm, mine are in the module :)

[08:38] <rba> jjmerelo: when you restart nginx, run „nginx -t“ before, as the nginx servers all the sites.

[08:39] <antoniogamiz> tadzik: I had to delcare proto main with our!

[08:41] <jjmerelo> rba have fun, thanks a lot. I don't think we'll be doing much now...

[08:44] *** rindolf joined
[08:49] <tadzik> antoniogamiz: oh? Are you calling it with the fully qualified name then?

[08:49] <antoniogamiz> yep

[08:49] <tadzik> if yes, then you shouldn't need to export them

[08:49] <tadzik> but of course you need to our them, yes :)

[08:50] <antoniogamiz> oh thanks :)

[08:50] <tadzik> what exporting does it it makes you use the name as "your own", in other modules, without the prefix:: thingy

[08:53] <antoniogamiz> ah great

[08:55] <antoniogamiz> m: "a" ~~ !/a/

[08:55] <evalable6> antoniogamiz, rakudo-moar 579ac66e8: OUTPUT: «»

[08:56] <antoniogamiz> m:  say "a" ~~ !/a/

[08:56] <evalable6> antoniogamiz, rakudo-moar 579ac66e8: OUTPUT: «False␤»

[08:56] <antoniogamiz> is there another way to negate an entire Regex?

[08:56] <antoniogamiz> I want to negate the regex inside the regex, I mean, a Regex to match strings without 'a', for instanec

[09:00] <antoniogamiz> ah moritz has the answer! https://stackoverflow.com/questions/47396166/how-to-negate-subtract-regexes-not-only-character-classes-in-perl-6

[09:11] *** antoniogamiz left
[09:17] *** [particle]1 joined
[09:18] *** [particle] left
[09:20] <Xliff> Why not use iptables to restrict anything to that port from an unknown IP?

[09:20] <Xliff> I doubt github runs from that many hosts.

[09:20] <Xliff> ^^ jjmerelo, rba

[09:21] <jjmerelo> Xliff: not in my pay grade, I can only change nginx configuration. rba could do it, anyway

[09:22] *** [particle]1 left
[09:23] <Xliff> Just a thought. Good luck!

[09:24] <Xliff> jjmerelo: Oh! Check this out! https://github.com/Xliff/p6-GStreamer

[09:25] <Xliff> I need to make install instructions though. It's the same as https://github.com/Xliff/p6-COGL but with the p6-GStreamer repo

[09:26] *** antoniogamiz joined
[09:27] <Xliff> antoniogamiz: \o -- How did that negative regex work out?

[09:32] <antoniogamiz> not good i think x'd

[09:33] *** [particle] joined
[09:35] <jjmerelo> Xliff: cool! Starred!

[09:36] <jjmerelo> Xliff: so you have a new home for all GTK projects...

[09:43] <jjmerelo> .tell rba first documentation build in the staging server. It takes 15 minutes, more than the circle-ci server, but it works.

[09:43] <tellable6> jjmerelo, I'll pass your message to rba

[09:48] *** antoniogamiz left
[09:51] *** chloekek joined
[09:53] <Geth> ¦ doc: cdb3cb53a4 | (JJ Merelo)++ | cpanfile

[09:53] <Geth> ¦ doc: For the time being, pins that version refs #2993

[09:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cdb3cb53a4

[09:56] *** aborazmeh joined
[09:56] *** aborazmeh left
[09:56] *** aborazmeh joined
[10:19] *** Black_Ribbon left
[10:21] *** chloekek left
[10:52] *** netrino joined
[11:00] *** jjmerelo left
[11:07] <rba> .tell jjmerelo: Do you prefer to build it on the circle-ci server and then? Are you able to just push the change to the webhosting using rsync?

[11:07] <tellable6> rba, I'll pass your message to jjmerelo

[11:09] *** dogbert17 joined
[11:10] *** Woodi left
[11:26] *** Woodi joined
[11:31] *** pecastro joined
[11:33] *** pyrimidi_ joined
[11:54] <Xliff> \o/

[11:57] <Xliff> https://gist.github.com/Xliff/5bec8c5a2c30ef45f71d3e6a45d16e91

[12:03] *** patrickb joined
[12:08] <timotimo> i think doc.perl6.org should put the FAQ in a similar style to the four links in the middle

[12:10] *** sena_kun joined
[12:18] <timotimo> maybe we should remove the mention of sixfix from perl6.org/resources; it gives a 502 at the moment

[12:18] <timotimo> .seen nigel

[12:18] <tellable6> timotimo, I haven't seen nigel around, did you mean nige?

[12:18] <timotimo> .seen nige

[12:18] <tellable6> timotimo, I saw nige 2018-12-10T13:34:03Z in #perl6: <nige> ludovic-tc++ you can take my slot on the 17th for your advent entry 

[12:25] <Geth> ¦ doc: 32094f9794 | timo++ (committed using GitHub Web editor) | doc/HomePage.pod6

[12:25] <Geth> ¦ doc: frontpage: make FAQ more prominent, add mention of community/chat

[12:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/32094f9794

[12:25] *** Ekho left
[12:26] *** Ekho joined
[12:28] *** lucasb joined
[12:29] <Geth> ¦ perl6.org: 4d30abe3a9 | timo++ (committed using GitHub Web editor) | source/community/index.html

[12:29] <Geth> ¦ perl6.org: put a discord invite on the community page

[12:29] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/4d30abe3a9

[12:30] <Geth> ¦ perl6.org: 53ffb70e07 | timo++ (committed using GitHub Web editor) | source/community/irc/index.html

[12:30] <Geth> ¦ perl6.org: put discord invite on the IRC page as well

[12:30] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/53ffb70e07

[12:37] <timotimo> the sixfix entry could probably be replaced with the weekly challenge

[12:41] <Geth> ¦ perl6.org: 8df93792e9 | timo++ (committed using GitHub Web editor) | source/resources/index.html

[12:41] <Geth> ¦ perl6.org: sixfix is down, replace it with perlweeklychallenge

[12:41] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/8df93792e9

[12:44] <Geth> ¦ perl6.org: 706988f66e | timo++ (committed using GitHub Web editor) | source/resources/index.html

[12:44] <Geth> ¦ perl6.org: add js to p6 migration guide

[12:44] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/706988f66e

[12:59] <rba> timotimo: I was asked once in the last few months to make a rewrite permanent from doc.perl6.org to docs.perl6.org. So I assumed the main website name is docs.perl6.org?

[12:59] <tellable6> 2019-08-31T09:43:28Z #perl6 <jjmerelo> rba first documentation build in the staging server. It takes 15 minutes, more than the circle-ci server, but it works.

[12:59] <timotimo> not sure

[12:59] <timotimo> i always confuse the two

[13:00] <rba> atm the same content is served by both names.

[13:01] <rba> see: https://docs-stage.p6c.org/ for the current staging area

[13:03] <timotimo> how is updating handled at the moment?

[13:04] <timotimo> ah, the Pod::To::OnePage isn't installed there it seems

[13:04] <timotimo> i wonder why the "chat with us" link isn't there?

[13:06] <rba> I wonder too. Yet it's work in progress...

[13:06] <timotimo> sure, sure

[13:06] <timotimo> i wonder what's commonly used to collect logs from many places and show them centrally

[13:07] <timotimo> even if it's just for simple things like "docs.perl6.org update started/finished" or "no changes to source detected in docs.perl6.org" or whatever

[13:07] <rba> timotimo: unix log files?

[13:08] <rba> the idea is to partially update docs.perl6.org using a github webhook.

[13:08] <rba> https://colabti.org/irclogger/irclogger_log/perl6?date=2019-08-31#l128

[13:08] <timotimo> i'm more interested in a web interface to see everything from logs in one place

[13:09] <Xliff> *yawn*

[13:09] <Xliff> .oO( So much for napping... )

[13:09] <Xliff> Has the docs build been parallelized, yet?

[13:09] <rba> timotimo: do you like to see if the websites got updated sucessfully after doing a change in the repo?

[13:10] <rba> Xliff: jjmerelo or antoniogamiz shold be able to answere it.

[13:14] <timotimo> ah, that'd be cool, i think there's a feature for that on github

[13:14] <Geth> ¦ doc: Xliff++ created pull request #2995: - MInor changes to independent-routines.pod6 to clarify options for run()

[13:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2995

[13:15] *** aborazmeh left
[13:28] <Xliff> Took me 13 minutes to do a "make" in p6-doc

[13:29] *** dotdotdot joined
[13:29] <timotimo> yeah, we're not fast at this

[13:29] <Xliff> I'm not sure the HTML portion is done in parallel.

[13:29] *** sena_kun left
[13:29] <timotimo> not by default

[13:30] <timotimo> it used to be pretty crashy, dunno how it is at the moment

[13:30] <Xliff> is "make -j" sufficient to do it or do I need to do something else?

[13:30] *** ravenous_ joined
[13:30] *** sena_kun joined
[13:31] <timotimo> maybe there's a target for the parallel mode

[13:32] <Xliff> I'll look in a second. Working on p6-VisualGrammar ATM

[13:32] <timotimo> heck yeah

[13:41] <tbrowder> .tell jjmerelo note the docs page on the io page is missing the reference section

[13:41] <tellable6> tbrowder, I'll pass your message to jjmerelo

[13:49] <lucasb> with regard {doc,docs}.perl6.org, I think, in the past, doc.perl6.org was a redirect to docs.perl6.org. But now I see they are served in both adress, which I don't think is a very good a idea. One should be a redirect to the other. I prefer doc.perl6.org (in singular) to be the canonical one. I have proposed this in the past, but people prefered 'docs' in the plural.

[13:49] <lucasb> rba: ^^

[13:50] <rba> lucasb: hmm.

[13:51] <sena_kun> (clearly remembers we changed `docs` to `doc` in past)

[13:51] <lucasb> sena_kun: ah, that's good. I wasn't aware. sorry :)

[13:51] <Xliff> \o sena_kun

[13:51] <sena_kun> o/

[13:51] <rba> I agree we just need to stick with one only and redirect the other. 

[13:52] <rba> I have no preference. 

[13:53] <lucasb> IMO, +1 for singular 'doc'

[13:53] <sena_kun> google clearly knows about `docs`, but not `doc`

[13:55] <rba> .tell jjmerelo doc.perl6.org or docs.perl6.org?

[13:55] <tellable6> rba, I'll pass your message to jjmerelo

[13:55] *** sena_kun left
[13:56] *** sena_kun joined
[14:10] *** sena_kun left
[14:17] *** pecastro left
[14:38] <tbrowder> rba: i think that may be temporary during dev of docs v2

[14:50] *** cpan-p6 left
[14:51] *** cpan-p6 joined
[14:51] *** cpan-p6 left
[14:51] *** cpan-p6 joined
[14:53] <Geth> ¦ doc: 327f852677 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/faq.pod6

[14:53] <Geth> ¦ doc: tweak punctuation

[14:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/327f852677

[14:53] <synopsebot> Link: https://doc.perl6.org/language/faq

[15:19] *** Manifest0 left
[15:19] *** sfdsfsdf joined
[15:21] *** ravenou__ joined
[15:22] *** ravenous_ left
[15:24] <kawaii> rba: doesn't `docs` make more sense?

[15:24] <kawaii> since they're a lot of documents

[15:24] <kawaii> as opposed to a single document

[15:30] *** sfdsfsdf left
[15:31] *** Manifest0 joined
[15:37] <rba> kawaii: For me both is ok. But we need to choose one and the other as a redirect. 

[15:47] *** Sgeo left
[15:53] *** domidumont joined
[15:55] <Geth> ¦ doc: e9dc2466fd | (Clifton Wood)++ | doc/Type/independent-routines.pod6

[15:55] <synopsebot> Link: https://doc.perl6.org/type/independent-routines

[15:55] <Geth> ¦ doc: - MInor changes to independent-routines.pod6 to clarify options for

[15:55] <Geth> ¦ doc: 

[15:55] <Geth> ¦ doc: run()

[15:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e9dc2466fd

[15:55] <Geth> ¦ doc: 817f78c053 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/independent-routines.pod6

[15:55] <Geth> ¦ doc: Merge pull request #2995 from Xliff/op-setbagmix-changes

[15:55] <Geth> ¦ doc: 

[15:55] <Geth> ¦ doc: - MInor changes to independent-routines.pod6 to clarify options for run()

[15:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/817f78c053

[15:58] *** Manifest0 left
[15:59] *** Manifest0 joined
[16:06] *** domidumont left
[16:06] *** domidumont joined
[16:44] *** khisanth_ joined
[16:45] *** ravenous_ joined
[16:46] *** chloekek joined
[16:46] *** ravenou__ left
[17:00] *** ravenou__ joined
[17:03] *** ravenous_ left
[17:09] *** pecastro joined
[17:25] *** pecastro left
[17:31] *** chloekek left
[17:33] *** pecastro joined
[17:53] *** wildtrees joined
[18:25] <Geth> ¦ doc: a98c4209ca | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[18:25] <synopsebot> Link: https://doc.perl6.org/language/syntax

[18:25] <Geth> ¦ doc: add comment on comments

[18:25] <Geth> ¦ doc: 

[18:25] <Geth> ¦ doc: also tweak punctuation

[18:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a98c4209ca

[18:32] <tbrowder>  oops, added a typo...fixing

[18:36] <Geth> ¦ doc: 88cceb8462 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[18:36] <synopsebot> Link: https://doc.perl6.org/language/syntax

[18:36] <Geth> ¦ doc: fix my typo

[18:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/88cceb8462

[18:37] <lucasb> oops, a stray quote :)

[18:38] <Geth> ¦ doc: 3134f2c510 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[18:38] <Geth> ¦ doc: fix finger fumble

[18:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3134f2c510

[18:42] *** aborazmeh joined
[18:42] *** aborazmeh left
[18:42] *** aborazmeh joined
[18:48] *** domidumont left
[19:00] *** chloekek joined
[19:17] *** molaf left
[19:32] *** HarmtH left
[19:38] *** HarmtH joined
[19:45] *** aborazmeh left
[19:47] *** aborazmeh joined
[19:47] *** aborazmeh left
[19:47] *** aborazmeh joined
[19:54] *** holyghost-androi joined
[19:56] <holyghost-androi> Hi

[19:56] <holyghost-androi> I'm going to restart work on monday, I am going to work on a graphics pipeline, soft 3D

[19:57] <holyghost-androi> maybe unto a pixel array

[19:57] <holyghost-androi> then blitting is polyvalent on that array

[19:59] *** aborazmeh left
[20:00] *** patrickb left
[20:00] <AlexDaniel> holyghost-androi: sounds interesting

[20:00] <holyghost-androi> sure

[20:01] *** Sgeo joined
[20:01] <holyghost-androi> I have a convex and concave model search already

[20:02] <holyghost-androi> IT should use lots of optimizations

[20:02] *** ravenou__ left
[20:03] <holyghost-androi> It's on Xliff's server

[20:03] <El_Che> We made slashdot: https://developers.slashdot.org/story/19/08/31/0132219/is-perl-6-being-renamed

[20:04] *** cpan-p6 left
[20:04] *** cpan-p6 joined
[20:04] *** cpan-p6 left
[20:04] *** cpan-p6 joined
[20:05] *** aborazmeh joined
[20:05] *** aborazmeh left
[20:05] *** aborazmeh joined
[20:05] *** aborazmeh left
[20:07] *** aborazmeh joined
[20:07] *** aborazmeh left
[20:07] *** aborazmeh joined
[20:07] <El_Che> of course, Slashdot being Slashdot the level of the comment is low

[20:08] *** aborazmeh left
[20:11] *** aborazmeh joined
[20:11] *** aborazmeh left
[20:11] *** aborazmeh joined
[20:13] *** aborazmeh left
[20:14] <tbrowder> El_Che: slashdot sounds like twitter: full of anonymous, foul-mouthed, juvenile, hateful people

[20:15] *** aborazmeh joined
[20:15] *** aborazmeh left
[20:15] *** aborazmeh joined
[20:17] <tadzik> except it's not cool anymore so it's only full of old-school nerds :P

[20:20] <tbrowder> good point, and "juvenile" still applies

[20:22] *** epony left
[20:24] <El_Che> indeed

[20:24] <El_Che> it turned into a sad place

[20:30] <Grinnz> apparently they haven't upgraded from the 1990s view on LGBT

[20:31] <AlexDaniel> wow that thread is some concentrated cancer

[21:03] *** aborazmeh left
[21:04] <tbrowder> how are the rakudo build changes going to affect new users? will i be able to define standard system-wide env vars so, whether i am an ordinary user or root, the same location will be used (including for zef)?

[21:11] *** aborazmeh joined
[21:11] *** aborazmeh left
[21:11] *** aborazmeh joined
[21:12] *** aborazmeh left
[21:12] <tobs> oh that's a good question. More concretely, will I be able to just rely on this as always or are changes needed? https://github.com/zoffixznet/r

[21:16] *** aborazmeh joined
[21:16] *** aborazmeh left
[21:16] *** aborazmeh joined
[21:21] <TreyHarris> I just liked the idea of being able to say "Perl 6 is now 楽 (Raku)" (meaning easy, joyous, simple)

[21:24] <tbrowder> reason i asked is i just saw the new (to me) env vars RAKUDO_PREFIX and RAKUDOLIB

[21:25] <AlexDaniel> vrurg: ↑ ?

[21:26] <tbrowder> i guess i need to see if zef help says anything...

[21:28] <tbrowder> don't see anything about env vars...

[21:30] <tbrowder> as a root user, i would like to have a rakudo tool to install all ecosystem p6 modules that pass tests, i'll file some issues with zef and see what nick says

[21:32] <TreyHarris> tbrowder: RAKUDOLIB can't be just the new canonical name of PERL6LIB, can it? B/c then other non-Rakudo implementations would have to implement "RADKUOLIB" as well...

[21:33] <tbrowder> yes, i  assumed RAKUDOLIB is same as PERL6LIB

[21:34] <TreyHarris> So a non-Rakudo implementation *would* need to implement "RAKUDOLIB" rather than or in addition to "{$other}LIB"?

[21:37] <TreyHarris> I can see where you might wante a "{$compiler}LIB" *in addition* to a PERL6LIB--if your implementation needed certain specific libraries, or stored system-dependent artifacts, but you still need a variable that all programs can use without immediately tying them to one implementation

[21:44] *** aborazmeh left
[21:44] *** epony joined
[21:45] <tbrowder> Hm, i can't answer that--i have a hard time imagining a non-rakudo implementation now.

[21:46] <tbrowder> oh, maybe what i'm missing is RAKULIB (my head hurts...)

[21:47] <tbrowder> time for a brewski in utc-5

[21:47] <TreyHarris> That makes sense. RAKULIB would equal PERL6LIB, RAKUDOLIB would be something else

[21:49] <tbrowder> sounds good to me--thats the way i was reading it anyway :-(

[21:56] <vrurg> AlexDaniel: RAKUDO_PREFIX first appears in 98966bf15722c17e80977a42b4d847e40121dff0 as a rename for RAKUDO_PRECOMP_PREFIX. 

[21:56] <tbrowder> back to sysadmin installation: i would appreciated a curated script to use with zef to install all testable ecosystem modules and install into $RAKULIB. of course it would use concurrency and parallelization to save time (and be usable in a cron job).

[21:58] <tbrowder> *RAKULIB or whatever is decided (RAKU_PREFIX?)

[22:06] <TreyHarris> tbrowder: If you're writing up an actual feature request, you may want to specify that parallelization of processing is what's needed in priority to parallelization of I/O (which might help on some systems, but on most will hurt or at best do no good)

[22:12] <tbrowder> good point!

[22:25] <Kaiepi> do actions classes need to make anything if you don't actually do anything with what they parse outside of parsing?

[22:26] *** Cabanossi left
[22:30] *** Cabanossi joined
[22:31] <timotimo> no need to make anything

[22:39] *** Black_Ribbon joined
[22:53] *** MilkmanDan joined
[22:54] *** satoriprints left
[22:58] *** AlexDaniel joined
[22:58] *** AlexDaniel left
[22:58] *** AlexDaniel joined
[22:58] *** chloekek left
[23:05] *** Itaipu left
[23:15] *** mgogeri joined
[23:17] *** mgogeri left
[23:20] *** Itaipu joined
[23:32] *** wildtrees left
[23:38] *** lucasb left
[23:42] *** pecastro left
[23:58] *** AlexDaniel left
