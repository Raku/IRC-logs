[00:23] <discord6> <RaycatWhoDat> m: say 42;

[00:24] *** pamplemousse joined
[00:24] <discord6> <RaycatWhoDat> Not sure if these messages are getting through.

[00:24] <discord6> <RaycatWhoDat> But it's a shame that the IRC bot doesn't trigger from the bridge

[00:30] <Elronnd> I would probably add a separate evaluation bot to the discord, instead of having the irc bot respond

[00:30] <Elronnd> that way each network is self-contained

[00:35] <AlexDaniel> and other bots?

[00:35] <AlexDaniel> we have 18 in whateverable project

[00:35] <AlexDaniel> no, the bots should understand messages from the discord bridge, that's for sure

[00:36] <AlexDaniel> tobs: ↑ something important to implement :)

[00:36] <AlexDaniel> RaycatWhoDat: we'll get it working eventually, sorry :)

[00:38] <AlexDaniel> tobs: somewhere in Whateverable.pm6 we need `irc-privmsg-channel` which redispatches messages from discord6

[00:39] <AlexDaniel> tobs: I think redispatching to this is going to work: https://github.com/perl6-community-modules/perl6-IRC-Client/blob/3c6cebf9e394c6d51a8d2a49549ffae1427c5824/lib/IRC/Client.pm6#L233

[00:39] <AlexDaniel> it's a private method, but… so what?

[00:41] <AlexDaniel> .tell tobs https://colabti.org/irclogger/irclogger_log/perl6?date=2019-08-26#l10

[00:41] <tellable6> AlexDaniel, I'll pass your message to tobs

[00:45] *** aborazmeh joined
[00:45] *** aborazmeh left
[00:45] *** aborazmeh joined
[01:04] *** aborazmeh left
[01:32] *** zakharyas joined
[01:33] *** molaf left
[01:36] *** mahafyi left
[01:40] *** MilkmanDan left
[01:42] *** MilkmanDan joined
[01:43] *** epony left
[01:45] *** molaf joined
[01:49] *** Kaiepi joined
[01:58] *** cpan-p6 left
[01:58] *** cpan-p6 joined
[01:58] *** cpan-p6 left
[01:58] *** cpan-p6 joined
[01:59] *** pamplemousse left
[02:02] *** mowcat left
[02:04] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:31] *** Xliff left
[02:34] *** epony joined
[02:58] *** Herby_ joined
[02:58] <Herby_> o/

[03:04] *** Kaiepi left
[03:16] *** Herby_ left
[03:29] *** astj joined
[03:40] *** aborazmeh joined
[03:40] *** aborazmeh left
[03:40] *** aborazmeh joined
[03:58] *** [Sno] left
[04:09] *** irced joined
[04:11] <irced> hey all i can't seem to make a simple grammer that parses a block of text surrounded by { } where the inside text may or may not be surrounded by { } without it matching beyond the closing } to a different closing curly brace. you dig?

[04:14] <irced> like say for the case of illustration i define a struct within a struct in a c source code then outside of that initial struct i do the same. only i want to match the structs (outer structs) separately

[04:15] <irced> seems the ~ surrounding operator will overreach

[04:19] <irced> consider for those who know c++ a namespace. so i have like namespace MyDomain { blah blah namespace InnerDomain { blah blah struct { ... }; }; }; followed by maybe class MyClass { ... }

[04:21] <irced> given grammar namespace { regex TOP { .* \n namespace <namespace-token> <block> .* } token namespace-token < <.ws> <ident>+ <.ws> } regex block { '{' ~ '}' .* } } I can match namespace-token and block but block includes the MyClass { ... }

[04:23] <irced> surely such parsing is very common where one wants to capture a specific grouping. i imagine i can eventually find a regex book or something that gets into it. but is there some idiomatic perl6 way perhaps ? (using perl6 regex special sauce)

[04:27] * irced can't seem to spell grammar

[04:41] *** camelia left
[04:42] <irced> not camlelia!

[04:42] <moritz> irced: using .* in a grammar is basically always wrong

[04:42] <irced> moritz: k, thanks for the tip

[04:44] <moritz> at the very least, ask yourself what *can't* be inside the block (for example), and make a negated character class out of it

[04:45] <irced> moritz: sounds like a good way to go about things if only i can stay inside the outside { }'s

[04:53] <irced> maybe this particular problem is not one a regex would most facilely address. i suppose i could just iterate and track opening and closing braces

[04:54] <irced> as an action perhaps

[04:54] <irced> to get the best of both worlds

[04:55] <irced> track == count

[04:55] <irced> count == +/-

[04:56] * irced still explores the regex way tho.

[04:58] * irced has got some ideas about the negated character classes, try 1002

[05:05] *** molaf left
[05:10] <irced> moritz: i'm making some progress here especially taking the focus off of too-encompassing metacharacters

[05:10] <irced> moritz: thanks

[05:22] *** Kaiepi joined
[05:23] <irced> k

[05:23] <irced> ijl

[05:55] *** robertle left
[05:55] *** jaldhar joined
[06:15] *** lizmat joined
[06:15] *** lizmat left
[06:46] *** aborazmeh left
[06:53] *** vike left
[06:58] *** vike joined
[07:00] *** k0Le left
[07:01] *** k0Le joined
[07:07] *** domidumont joined
[07:31] *** Doc_Holliwood left
[07:34] *** kensanata joined
[07:35] <El_Che> irced: :q! to escape vim :)

[07:36] *** cpan-p6 left
[07:37] *** cpan-p6 joined
[07:37] *** cpan-p6 left
[07:37] *** cpan-p6 joined
[07:43] *** Doc_Holliwood joined
[07:54] *** patrickb joined
[07:55] <irced> El_Che: hahah

[07:55] *** robertle joined
[07:57] <irced> El_Che: funny how you got that seeing that i didn't write k hkl as jl would make a funny insertion

[07:59] *** irced left
[08:00] *** astj left
[08:00] <El_Che> :)

[08:02] *** jjmerelo joined
[08:04] *** [particle] joined
[08:07] *** [particle]1 left
[08:08] <jjmerelo> Hey

[08:09] <jjmerelo> Just to warn you about some bumpy road ahead for the documentation https://github.com/perl6/doc/milestone/2

[08:09] <jjmerelo> We are going to be using mainly rba's staging servers and maybe others for testing, but behond the milestone there's going to be a serious overhaul of the documentation repo.

[08:10] <jjmerelo> Your input (and help) is welcome during the process

[08:13] *** Black_Ribbon left
[08:14] <rba> jjmerelo: As part of your tasks, may you please publish to docs-prod as well, as I like to take over docs.perl6.org soon, to offload the temp server.

[08:15] <jjmerelo> rba: OK

[08:23] *** sena_kun joined
[08:31] *** ufobat joined
[08:32] <Geth> ¦ doc: JJ assigned to antoniogamiz Issue Test documentable https://github.com/perl6/doc/issues/2972

[08:42] *** abraxxa joined
[08:50] *** jaldhar left
[08:51] *** jaldhar joined
[08:51] *** rindolf joined
[08:56] *** jaldhar_ joined
[08:56] *** jaldhar left
[08:57] *** aborazmeh joined
[08:57] *** aborazmeh left
[08:57] *** aborazmeh joined
[09:04] *** aborazmeh left
[09:07] <Geth> ¦ doc: 8135a4442b | Antonio++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[09:07] <synopsebot> Link: https://doc.perl6.org/language/syntax

[09:07] <Geth> ¦ doc: Lowercase leading T, fix #2975

[09:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8135a4442b

[09:23] <Geth> ¦ doc: a857488049 | Antonio++ | doc/Type/independent-routines.pod6

[09:23] <synopsebot> Link: https://doc.perl6.org/type/independent-routines

[09:23] <Geth> ¦ doc: Change the value of kind to Language, fix #2973

[09:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a857488049

[09:25] *** pecastro joined
[09:37] *** migo joined
[09:41] *** domidumont left
[09:48] *** pat_js joined
[09:49] <migo> Hi, I have problem with mysql connector, im returning iterator from method `return $!sth-aggregate.execute( $created-at, :finish ).hashes;` and then iterating over it using `for $message-stats-repository.aggregate($time-range) -> %row {...` and finally getting at "random" row error `Cannot look up attributes in a DB::MySQL::Native::ResultsBind type

[09:49] <migo>  object` any ideas what wrong?

[09:50] <tyil> AlexDaniel: why fix it in IRC::Client, when the bot could check for / ^ [ "<" $nick ">" ]? "m:" / (or something like that, basically, check for an optional nick in front of m:)

[09:54] *** pilne left
[09:58] *** finanalyst joined
[09:59] <Geth> ¦ doc: 735a673f87 | (JJ Merelo)++ | htmlify.p6

[09:59] <Geth> ¦ doc: Adds deprecation notice to disambiguation files closes #2974

[09:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/735a673f87

[09:59] <jjmerelo> hi, finanalyst

[10:02] <finanalyst> jjmerelo: hi. 

[10:14] *** jjmerelo left
[10:21] <cpan-p6> New module released to CPAN! WebService::Soundcloud (0.0.8) by 03JSTOWE

[10:24] *** pat_js left
[10:27] *** zakharyas left
[10:34] *** rindolf left
[10:51] *** rindolf joined
[10:51] *** finanalyst left
[11:01] *** pat_js joined
[11:05] *** passingby joined
[11:05] *** passingby left
[11:06] *** jaldhar_ left
[11:07] *** jaldhar_ joined
[11:26] *** jaldhar_ left
[11:27] *** jaldhar_ joined
[11:45] <Geth> ¦ whateverable: taboege self-assigned Bots should respond to messages from the discord bridge https://github.com/perl6/whateverable/issues/356

[11:53] *** dumarchie joined
[12:00] <Geth> ¦ whateverable: 4d49f92814 | Xliff++ | lib/Whateverable/Processing.pm6

[12:00] <Geth> ¦ whateverable: - Process code in between ```...``` markdown tags.

[12:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/4d49f92814

[12:00] <Geth> ¦ whateverable: 889b1e8860 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | lib/Whateverable/Processing.pm6

[12:00] <Geth> ¦ whateverable: Merge pull request #347 from Xliff/master

[12:00] <Geth> ¦ whateverable: 

[12:00] <Geth> ¦ whateverable: - Process code in between ```...``` markdown tags.

[12:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/889b1e8860

[12:02] *** robertle left
[12:04] *** robertle joined
[12:19] *** kensanata left
[12:20] *** migo left
[12:22] <AlexDaniel> tyil: I didn't say it should be fixed in IRC client, I just pointed out which IRC::Client method should be called from whateverable

[12:23] <tyil> ah, okay

[12:23] <AlexDaniel> and I think tobs we'll get it working soon :)

[12:23] <AlexDaniel> will*

[12:27] <tyil> awesome!

[12:37] <tobs> no ETA yet. I wrote the code, now I have to write the tests :)

[12:37] <tellable6> 2019-08-26T00:41:49Z #perl6 <AlexDaniel> tobs https://colabti.org/irclogger/irclogger_log/perl6?date=2019-08-26#l10

[12:38] <AlexDaniel> tobs: maybe somewhere here: https://github.com/perl6/whateverable/blob/889b1e8860fd3b78652f804a6536458b678ba75b/xt/lib/Testable.pm6#L148

[12:38] <AlexDaniel> tobs: these are used for every bot

[12:39] <AlexDaniel> feel free to add tests to specific bots too :)

[12:39] <tobs> oh great, I was looking in a completely different place

[12:39] <AlexDaniel> tyil: which nick discord6 will use if discord6 is taken?

[12:40] <AlexDaniel> tyil: discord6` or discord6_ or … ?

[12:41] *** [Coke] left
[12:41] <AlexDaniel> tobs: and you can probably do $!irc-client.nick(‘discord6’)

[12:50] *** mahafyi joined
[12:54] *** domidumont joined
[13:00] <tyil> discord6_ iirc, but we can test that

[13:00] *** discord61 joined
[13:00] *** discord61 left
[13:00] *** discord61 joined
[13:01] <tyil> AlexDaniel: also, it should always have the cloak "perl6/bot/discord6"

[13:01] <tyil> it seems to have become discord61

[13:01] *** discord61 left
[13:01] <AlexDaniel> hah

[13:01] <tobs> the numbering seems fine. AFAICS Testable does the same thing

[13:02] <tobs> but I'm not sure if I should match all of discord6\d+…

[13:02] <AlexDaniel> we can't check for cloaks yet…

[13:02] <tyil> oh

[13:03] <tyil> that removes that option, then

[13:03] <AlexDaniel> tobs: you can slap `1?` into the regex

[13:03] <AlexDaniel> might save us a little bit of frustation in the future :)

[13:04] <AlexDaniel> tobs: fwiw testable needed to have random nicknames (with numbers) when a single irc server was used for testing all the bots

[13:04] <AlexDaniel> tobs: now that it starts a new irc server on a random port each time, there's no need for that

[13:04] *** jaldhar_ left
[13:05] *** jaldhar_ joined
[13:05] <tobs> ah, ok

[13:06] <AlexDaniel> which is why you can now do .nick(‘discord6’) without worrying that it'll clash with some other process :)

[13:06] <AlexDaniel> tobs: or, you can start a new irc-client: https://github.com/perl6/whateverable/blob/889b1e8860fd3b78652f804a6536458b678ba75b/xt/tellable.t#L230

[13:07] *** pat_js left
[13:09] *** molaf joined
[13:19] *** robertle left
[13:22] <tobs> e: use IRC::Client; IRC::Client.new.nick('x')

[13:22] <evalable6> tobs, rakudo-moar 636888c69: OUTPUT: «(exit code 1) ===SORRY!===␤Could not find IRC::Client at line 1 in:␤    file#/home/bisecta…»

[13:22] <evalable6> tobs, Full output: https://gist.github.com/5ff0213b96467cf6ec8b1f7e8668cb25

[13:22] <tobs> ah

[13:22] <tobs> anyway, did anybody use the .nick method recently? It gives me a "wrong number or arguments error"

[13:24] <AlexDaniel> tobs: yes

[13:24] <AlexDaniel> tobs: I mean, this test works: https://github.com/perl6/whateverable/blob/889b1e8860fd3b78652f804a6536458b678ba75b/xt/tellable.t#L251

[13:25] <tobs> touché

[13:28] *** molaf left
[13:33] *** lucasb joined
[13:34] *** |oLa| joined
[13:40] *** vike left
[13:44] <Geth> ¦ whateverable: f1563a651f | (Aleks-Daniel Jakimenko-Aleksejev)++ | 4 files

[13:44] <Geth> ¦ whateverable: Fix code block processing in md files

[13:44] <Geth> ¦ whateverable: 

[13:44] <Geth> ¦ whateverable: This time with tests to make sure it actually works.

[13:44] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/f1563a651f

[13:46] *** grondilu joined
[13:46] *** committable6 left
[13:46] *** vike joined
[13:46] <grondilu> m: say "1 2 3" ~~ m/<digit> ** 3/

[13:46] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «False␤»

[13:46] <tellable6> https://gist.github.com/6d3386ef88a4f99e3bd7414df6d63432

[13:46] *** evalable6 left
[13:46] *** bisectable6 left
[13:47] <AlexDaniel> grondilu: oh oops, that gist has a message for you

[13:47] <AlexDaniel> and tellable6 is acting weird :)

[13:48] *** evalable6 joined
[13:49] *** bisectable6 joined
[13:50] <AlexDaniel> e: https://gist.github.com/AlexDaniel/c5c1aa0fdcee3fd1f74cbb099d0f9b19

[13:50] <evalable6> AlexDaniel, rakudo-moar 636888c69: OUTPUT: «41␤41␤»

[13:50] *** committable6 joined
[13:50] *** ChanServ sets mode: +v committable6

[13:53] <grondilu> m: say "1 2 3" ~~ m/[<digit>\s] ** 3/

[13:53] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «False␤»

[13:53] <grondilu> m: say "1 2 3" ~~ m/[<digit><ws>] ** 3/

[13:53] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «｢1 2 3｣␤ digit => ｢1｣␤ ws => ｢ ｣␤ digit => ｢2｣␤ ws => ｢ ｣␤ digit => ｢3｣␤ ws => ｢｣␤»

[13:53] <grondilu> m: say "1 2 3" ~~ m/[<digit><.ws>] ** 3/

[13:53] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «｢1 2 3｣␤ digit => ｢1｣␤ digit => ｢2｣␤ digit => ｢3｣␤»

[13:54] <grondilu> I really thought this was simpler

[13:55] <grondilu> m: grammar Foo { rule TOP { <digit>**3 } }; say Foo.parse: "1 2 3"

[13:55] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «Nil␤»

[13:55] <grondilu> m: grammar Foo { rule TOP { <digit>**3 } }; say Foo.parse: "123"

[13:55] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «｢123｣␤ digit => ｢1｣␤ digit => ｢2｣␤ digit => ｢3｣␤»

[13:55] <grondilu> m: grammar Foo { rule TOP { <digit> **3 } }; say Foo.parse: "1 2 3"

[13:55] <evalable6> grondilu, rakudo-moar 636888c69: OUTPUT: «｢1 2 3｣␤ digit => ｢1｣␤ digit => ｢2｣␤ digit => ｢3｣␤»

[13:55] <grondilu> oh my, the space is relevant here?

[13:56] <grondilu> that seems LTA

[13:57] <AlexDaniel> grondilu: but that's the point of using a rule, no?

[13:57] <grondilu> I thought that on the contrary, spaces were relevant in tokens, not rules.

[13:58] <grondilu> And I mean the space before the ** operator

[13:59] <grondilu> basically I thought <foo>**number was the same as <foo> **number

[13:59] <grondilu> apparently not :/

[14:00] <grondilu> grammars are hard.  Everytime I try to write one, I struglle with things like that :/

[14:02] *** |oLa| left
[14:03] <moritz> grammars are a whole programming topic that you have to learn through practice, much like writing good OO code is

[14:04] *** molaf joined
[14:07] *** pat_js joined
[14:08] <tadzik> oh, it took me ages too :/

[14:12] <timotimo> tbf our tooling around grammars could use some improvement

[14:14] <grondilu> yeah, there is a debugger but it's in module space.  Not sure it should not be in the core or something.

[14:14] <timotimo> not necessary, i think

[14:15] <grondilu> maybe not a debugger, but a failure to parse should be a bit more verbose than just returning "Nil".

[14:16] <timotimo> that's just one thing, but yeah

[14:16] <timotimo> there's been discussion on making failed parses return a Failure object with extra info

[14:17] <jnthn> The problem is it broke back-compat, *but* it can be done for 6.e (and that was being worked on recently by vrurg++)

[14:18] <grondilu> ok, good to know it's being looked at.

[14:18] <timotimo> yep

[14:20] *** robertle joined
[14:23] <tobs> AlexDaniel: getting there. Now I'm getting the test error I always ancitipated :)

[14:24] *** grondilu left
[14:32] *** [particle] left
[14:32] *** [particle] joined
[14:38] *** jaldhar_ left
[14:39] *** jaldhar_ joined
[14:40] *** jaldhar_ left
[14:41] *** jaldhar_ joined
[14:44] *** mowcat joined
[14:52] *** pat_js left
[14:54] *** jaldhar_ left
[14:55] *** jaldhar_ joined
[14:56] *** jaldhar_ left
[14:57] *** jaldhar_ joined
[14:58] <Geth> ¦ doc: d29fe6990b | Antonio++ | 3 files

[14:58] <Geth> ¦ doc: Delets trailing 's' from comment pod block, fix #2970

[14:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d29fe6990b

[14:58] *** MilkmanDan left
[14:59] *** MilkmanDan joined
[15:03] *** antoniogamiz joined
[15:03] <antoniogamiz> o/

[15:03] <antoniogamiz> how can i know what roles implements a role? 

[15:04] *** pat_js joined
[15:04] *** jaldhar_ left
[15:05] <moritz> m: role A { }; role B does A { }; say B.^roles

[15:05] <evalable6> moritz, rakudo-moar 636888c69: OUTPUT: «((A))␤»

[15:05] <moritz> antoniogamiz: ^^

[15:05] <moritz> ah, you're asking the other way round

[15:05] *** jaldhar_ joined
[15:05] <moritz> no

[15:05] <moritz> in general, you can't, unless you have a list of all possible types

[15:07] <antoniogamiz> moritz: oh thanks !

[15:07] <antoniogamiz> I was asking the first one, actually haha

[15:08] <antoniogamiz> m: Telemetry.new

[15:08] <evalable6> antoniogamiz, rakudo-moar 636888c69: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/i3DdXtk5D1␤Undeclared name:␤    Telemetry used at line 1␤␤»

[15:08] <antoniogamiz> how can I declare an instance of that class?

[15:10] <MasterDuke> antoniogamiz: it's in Rakudo's lib directory, not part of the core, so you need to `use Telemetry` first

[15:11] <antoniogamiz> ah ok :)

[15:13] *** ufobat_ joined
[15:16] *** dumarchie left
[15:16] *** ufobat left
[15:26] *** jaldhar_ left
[15:27] *** jaldhar_ joined
[15:28] *** pat_js left
[15:28] *** jaldhar_ left
[15:29] *** jaldhar_ joined
[15:30] *** robertle left
[15:35] *** Sgeo left
[15:42] *** jaldhar_ left
[15:43] *** jaldhar_ joined
[15:44] *** jaldhar_ left
[15:45] *** jaldhar_ joined
[15:49] *** jaldhar_ left
[15:49] *** jaldhar_ joined
[15:52] *** antoniogamiz left
[16:00] *** aborazmeh joined
[16:00] *** aborazmeh left
[16:00] *** aborazmeh joined
[16:01] *** aborazmeh left
[16:04] *** patrickb left
[16:04] *** aborazmeh joined
[16:04] *** aborazmeh left
[16:04] *** aborazmeh joined
[16:09] *** domidumont left
[16:13] *** aborazmeh left
[16:19] *** reach_satori joined
[16:31] *** Kaiepi left
[16:33] *** pat_js joined
[16:41] *** lgtaube left
[16:51] *** Black_Ribbon joined
[16:57] <Geth> ¦ whateverable: taboege++ created pull request #357: Support messages from the discord bridge

[16:57] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/pull/357

[17:05] <AlexDaniel> oooh…

[17:08] <AlexDaniel> tobs: why not connect with the right nick right away?

[17:08] <AlexDaniel> instead of setting up `method irc-connected($m)`

[17:08] <AlexDaniel> `:nick` parameter is passed a few lines earlier :)

[17:09] *** aborazmeh joined
[17:09] *** aborazmeh left
[17:09] *** aborazmeh joined
[17:13] <AlexDaniel> tobs: another thing, we can't be testing just evalable…

[17:13] *** robertle joined
[17:14] <AlexDaniel> because it can affect other bots in unexpected ways

[17:14] <AlexDaniel> for example, tellable should also work

[17:14] <AlexDaniel> .seen and .tell and stuff

[17:14] <tellable6> AlexDaniel, I'll pass your message to and

[17:14] <tobs> AlexDaniel: good catch, that simplifies a bunch of stuff. I think I wasn't sure about when exactly to set nick and when to get the faked one and from where when I wrote that.

[17:14] <AlexDaniel> what the hell was that, tellable6 ?

[17:14] *** pecastro left
[17:15] <AlexDaniel> .seen MasterDuke bot test

[17:15] *** patrickb joined
[17:15] <tellable6> AlexDaniel, I'll pass your message to MasterDuke

[17:15] <AlexDaniel> oh

[17:15] <tadzik> :D

[17:15] <AlexDaniel> well it was kinda meant to work that way…

[17:15] <tobs> AlexDaniel: but doing it right in :nick works fine.

[17:18] <tobs> AlexDaniel: we could duplicate the entire test suite

[17:20] *** ravenous_ joined
[17:21] *** pecastro joined
[17:33] *** pilne joined
[17:35] *** aborazmeh left
[17:37] *** aborazmeh joined
[17:37] *** aborazmeh left
[17:37] *** aborazmeh joined
[17:38] *** aborazmeh left
[17:38] <AlexDaniel> tobs: hmm

[17:38] <AlexDaniel> tobs: well, every test goes through this: https://github.com/perl6/whateverable/blob/f1563a651f351c7ae8528268d0d257708aa065e6/xt/lib/Testable.pm6#L92

[17:38] <AlexDaniel> so in theory it should be doable to just run everything twice, once through the bridge and once directly

[17:38] <AlexDaniel> buuuut it won't work for all bots

[17:39] <AlexDaniel> definitely not for all tests. e.g. tellable will then start passing messages two times, and stuff like this

[17:39] <tobs> right, maybe the role is not the ideal solution.

[17:39] <AlexDaniel> the role is fine it's just the way we test things…

[17:40] <AlexDaniel> sooo what about adding a test here: https://github.com/perl6/whateverable/blob/f1563a651f351c7ae8528268d0d257708aa065e6/xt/lib/Testable.pm6#L149

[17:40] <AlexDaniel> if the bot can reply to the help command through the bridge, then it's not too broken

[17:41] *** sena_kun left
[17:42] <tobs> wouldn't that test less than what is tested now?

[17:42] <AlexDaniel> tobs: but I mean in addition to that

[17:44] *** aborazmeh joined
[17:44] *** aborazmeh left
[17:44] *** aborazmeh joined
[17:46] *** khisanth_ left
[17:49] *** holyghost joined
[17:54] *** aborazmeh left
[17:55] <tobs> AlexDaniel: the $!discord flag still needs to be set in the Testable instance so that it uses the right nick. So should there be an environment variable that every test inspects to see if :discord should be passed to Testable.new?

[17:56] *** pat_js left
[17:57] *** dumarchie joined
[17:58] <AlexDaniel> tobs: I think it will be easier if you connect another irc-client for the bridge

[17:58] <AlexDaniel> tobs: then the `test` routine can have a `:bridge` flag

[17:58] *** khisanth_ joined
[17:59] <AlexDaniel> tobs: if True, it can then send a message through the bridge client with `<$.our-nick> $command`

[18:00] <AlexDaniel> and the rest is processed as normal

[18:00] *** aborazmeh joined
[18:00] *** aborazmeh left
[18:01] <AlexDaniel> tobs: so self.test(:bridge, ‘help message’, “$.bot-nick, helP”, “$.our-nick, $help # blah blah”)

[18:02] <tobs> AlexDaniel: and remove the :discord flag for the entire instance?

[18:02] <AlexDaniel> tobs: yeah, don't need it

[18:02] *** jaldhar_ left
[18:02] <tobs> Ok, let me see.

[18:03] <AlexDaniel> tobs: and then, after that, we can perhaps add `:both` named parameter, which will run tests with both :bridge and without

[18:03] *** jaldhar_ joined
[18:03] <AlexDaniel> so after sprinkling some “:both” on the whole test suite we can get some nice coverage, maybe?

[18:04] *** aborazmeh joined
[18:04] *** aborazmeh left
[18:04] *** aborazmeh joined
[18:04] *** aborazmeh left
[18:05] *** jaldhar_ left
[18:05] *** jaldhar_ joined
[18:06] *** aborazmeh joined
[18:06] *** aborazmeh left
[18:06] *** aborazmeh joined
[18:06] *** jaldhar_ left
[18:07] *** jaldhar_ joined
[18:18] *** mowcat left
[18:22] *** sauvin left
[18:28] *** Kaiepi joined
[18:29] *** chloekek joined
[18:34] *** chloekek left
[18:34] *** jaldhar_ left
[18:35] *** jaldhar_ joined
[18:36] *** jaldhar_ left
[18:37] *** jaldhar_ joined
[18:41] *** aborazmeh left
[18:41] *** wildtrees joined
[18:47] *** aborazmeh joined
[18:47] *** aborazmeh left
[18:47] *** aborazmeh joined
[18:47] *** aborazmeh left
[18:48] *** veesh left
[18:50] *** aborazmeh joined
[18:50] *** aborazmeh left
[18:50] *** aborazmeh joined
[18:54] *** [Sno] joined
[19:02] *** jaldhar_ left
[19:03] *** jaldhar_ joined
[19:06] *** molaf left
[19:08] *** aborazmeh left
[19:12] *** aborazmeh joined
[19:12] *** aborazmeh left
[19:12] *** aborazmeh joined
[19:12] *** aborazmeh left
[19:13] *** _jrjsmrtn left
[19:13] *** kensanata joined
[19:13] *** __jrjsmrtn__ joined
[19:14] *** aborazmeh joined
[19:14] *** aborazmeh left
[19:14] *** aborazmeh joined
[19:15] *** aborazmeh left
[19:17] *** aborazmeh joined
[19:17] *** aborazmeh left
[19:17] *** aborazmeh joined
[19:19] *** aborazmeh left
[19:22] *** aborazmeh joined
[19:22] *** aborazmeh left
[19:22] *** aborazmeh joined
[19:22] *** aborazmeh left
[19:23] <tobs> e: sub f { once { say "hi" } }; f; f; f; f

[19:23] <evalable6> tobs, rakudo-moar 636888c69: OUTPUT: «hi␤»

[19:23] <tobs> e: sub f { if True { once { say "hi" } } }; f; f; f; f

[19:23] <evalable6> tobs, rakudo-moar 636888c69: OUTPUT: «hi␤hi␤hi␤hi␤»

[19:23] <tobs> this is unfortunate ^

[19:24] *** mahafyi left
[19:24] <tobs> can someone explain to me how once works?

[19:29] *** aborazmeh joined
[19:29] *** aborazmeh left
[19:29] *** aborazmeh joined
[19:30] <AlexDaniel> tobs: https://docs.perl6.org/language/traps#Using_a_once_block

[19:31] <tobs> ah, it's the same with a state variable inside an if block.

[19:32] <AlexDaniel> yup

[19:33] <tobs> now _that_ is a trap for an occasional perl5 programmer like me

[19:34] *** aborazmeh left
[19:35] *** Ven`` joined
[19:36] <tobs> AlexDaniel: I wonder if :both should be the default and opt-out for tests known to fail?

[19:36] <AlexDaniel> tobs: we can try that!

[19:37] <AlexDaniel> evalable.t will be fine, committable.t will be fine too

[19:37] <AlexDaniel> bisectable should be alright

[19:37] <AlexDaniel> unicodable too

[19:37] <AlexDaniel> notable and tellable definitely not

[19:37] *** Ven`` is now known as Ven_de_Thiel

[19:38] <AlexDaniel> actually, maybe all files except notable and tellable

[19:38] <AlexDaniel> and bisectable.t will become reeeeeeaally slow :)

[19:38] <AlexDaniel> but I don't mind

[19:40] *** cpan-p6 left
[19:40] <AlexDaniel> tobs: also, see this: https://github.com/perl6/whateverable/issues/340

[19:40] *** cpan-p6 joined
[19:40] *** cpan-p6 left
[19:40] *** cpan-p6 joined
[19:41] <AlexDaniel> tobs: you can simply ignore anything that is known to fail, I'll take a look later

[19:44] <tobs> hah, running the tests is pretty annoying now :)

[19:45] <AlexDaniel> I'm not sure if there's any other way

[19:45] <AlexDaniel> as we just had a `what:` issue uncovered by a bridge test

[19:46] <AlexDaniel> so it's useful for sure, just takes time :)

[19:47] *** chloekek joined
[19:47] <tobs> AlexDaniel: regarding the list of non-functional tests: benchable.t also doesn't work for me

[19:47] <tobs> instead of the expected data, it returns "No new data" for me. Maybe my repo is not fully initialized?

[19:48] <AlexDaniel> no… I think benchable changed and the tests were not updated

[19:48] <AlexDaniel> but hey, at least we have all these tests, they just need some love

[19:49] *** aborazmeh joined
[19:49] *** aborazmeh left
[19:49] *** aborazmeh joined
[19:50] <AlexDaniel> tobs: I updated the list: https://github.com/perl6/whateverable/issues/340

[19:51] <tobs> I'm hitting timeouts on the segfault test in evalable now...

[19:52] <AlexDaniel> tobs: possibly means that the bot doesn't respond?

[19:54] <tobs> AlexDaniel: no, doubling the timeout makes it pass. The whole thing seems to slow down a bit with time.

[19:55] <AlexDaniel> hhhhhhhhuuuuuuh

[19:55] <AlexDaniel> tobs: what's your rakudo version?

[19:55] <AlexDaniel> tobs: can you try monitoring memory usage while it runs?

[19:55] <tobs> the same but bridged test afterwards passes really quickly though and I just nuked /tmp/whateverable, so maybe it has to do some extra work

[19:55] <AlexDaniel> it can also be a bug in rakudo

[19:56] <tobs> AlexDaniel: This is Rakudo version 2019.07 built on MoarVM version 2019.07

[19:56] <AlexDaniel> this rings some bells because bots used to slow down quite a bit when memory leaks were present

[19:56] <AlexDaniel> it shouldn't be the case anymore, but please check… it can be a bug in rakudo…

[19:59] <tobs> AlexDaniel: the memory consumption grows steadily, but not obscenely, from 190M to 290M over the entire test

[19:59] <AlexDaniel> OK that's normal

[19:59] <tobs> with my 2019.07 rakudo.

[19:59] <AlexDaniel> it doesn't exactly grow, it just tends to settle on an amount that's a bit too high. It's ok

[20:00] *** Xliff joined
[20:00] <AlexDaniel> tobs: could it be the IRC server doing some throttling?

[20:00] <Xliff> \o

[20:00] <tobs> good idea.

[20:00] <AlexDaniel> o/

[20:00] <AlexDaniel> Xliff: ↓

[20:00] <AlexDaniel> e: https://gist.github.com/AlexDaniel/c5c1aa0fdcee3fd1f74cbb099d0f9b19

[20:00] <evalable6> AlexDaniel, rakudo-moar 636888c69: OUTPUT: «41␤41␤»

[20:01] <AlexDaniel> thanks for the PR! Had to fix it a little bit and write some tests, but the approach was exactly right :)

[20:02] <Xliff> ?

[20:03] <Xliff> Oh! LOL!

[20:03] <Xliff> That was from back in Feb! Glad you like it :)

[20:18] *** lgtaube joined
[20:20] <tobs> AlexDaniel: another failing test here https://github.com/perl6/whateverable/issues/340#issuecomment-525015600

[20:23] *** dumarchie left
[20:24] *** molaf joined
[20:26] <AlexDaniel> commit: releases say $*PERL

[20:27] <committable6> AlexDaniel, https://gist.github.com/6ced877769f319279e2d15993fa77bcf

[20:27] <AlexDaniel> tobs: meh and a bunch of tests after that are probably broken too

[20:27] *** holyghost left
[20:28] *** holyghost joined
[20:28] <AlexDaniel> tobs: just change the query to `say 42` and that's it

[20:28] <AlexDaniel> well, and the output accordingly

[20:29] <AlexDaniel> these tests were working before we release v6.d :D

[20:29] <AlexDaniel> released*

[20:31] *** aborazmeh left
[20:31] *** lizmat joined
[20:31] <lizmat> and yet another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/08/26/2019-34-a-quick-one-from-the-atlantic/

[20:31] <tellable6> 2019-08-23T19:51:51Z #perl6-dev <AlexDaniel> lizmat: that GB18030 roast merge was a bit too early, moarvm pull request is not merged yet

[20:31] <tellable6> 2019-08-25T11:43:30Z #perl6-dev <dogbert17> lizmat did you by any chance fix R#3069 ?

[20:31] <synopsebot> R#3069 [open]: https://github.com/rakudo/rakudo/issues/3069 Date formatter invalid after the twenty-eight day 

[20:31] <tellable6> https://gist.github.com/d4c1ca169f83e5a04a21f08cefbb7ff9

[20:32] *** lizmat left
[20:32] *** ravenous_ left
[20:37] <AlexDaniel> lizmat: re “FWIW, only these people are allowed to vote, after which Jonathan Worthington will decide.”, it's other way around

[20:37] <tellable6> AlexDaniel, I'll pass your message to lizmat

[20:38] <AlexDaniel> lizmat: so jnthn will be giving feedback so that we get a PR that is aligned with his view, then everyone votes (technically jnthn too)

[20:38] <tellable6> AlexDaniel, I'll pass your message to lizmat

[20:46] *** MasterDuke left
[20:49] *** scotticles joined
[20:50] *** scotticles left
[20:53] *** irced joined
[20:54] <irced> hello, i am having difficulty using subparse. is there a site to which i can paste my code and discuss the issues is?

[20:58] <AlexDaniel> irced: what about https://gist.github.com/

[20:59] <irced> that'll work, i thought maybe there was one where it can compile and run with output

[21:00] <Grinnz> https://f.perl.bot/#perl6 can, not sure if simcop2387 is keeping up with the rakudo updates

[21:00] <AlexDaniel> https://glot.io/ and a bunch of other websites…

[21:00] <AlexDaniel> evalable6 can run a gist just fine

[21:00] *** lizmat joined
[21:00] *** kensanata left
[21:01] <irced> hmm, ok, f.perl.bot seems ok. what's this about evalable6 ?

[21:02] <AlexDaniel> irced: evalable6 can run gists, so you upload your code on https://gist.github.com/ and we'll give a link to the bot

[21:04] <irced> that sounds ok too. f.perl.bot is more readable than an irc bot, so let me see if i can get help with that first

[21:05] <irced> https://f.perl.bot/raw/evq89c why won't this grammar match on the subparse ?

[21:06] <AlexDaniel> e: https://f.perl.bot/raw/evq89c

[21:06] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL

[21:06] <evalable6> AlexDaniel, rakudo-moar 636888c69: OUTPUT: «namespace Details {␤        some namespace details␤        some more namespace details␤}␤␤#<failed match>␤»

[21:06] <irced> kewl

[21:08] <irced> a quick inspection will show ratcheting is not the issue

[21:08] <irced> not the central one anyway

[21:15] <tobs> commit: v6c say $*PERL

[21:15] <irced> brb

[21:15] <committable6> tobs, https://gist.github.com/1a8a239299752c4a0042bf15a1f5516f

[21:16] <tobs> AlexDaniel: should this include v6.d also?

[21:18] *** Ven_de_Thiel left
[21:19] * irced burps.

[21:20] <AlexDaniel> irced: sry I'm in the middle of a bunch of tasks at the same time, can't look right now. Maybe someone else will :)

[21:20] <AlexDaniel> tobs: yyyyyeeea… https://github.com/perl6/whateverable/issues/345

[21:20] <irced> no problem

[21:21] <tobs> AlexDaniel: so much low-hanging(?) fruit :)

[21:22] <AlexDaniel> tobs: most whateverable tickets are relatively easy. Discord thing is probably one of the hardest ones

[21:23] <tobs> I only have the very last test of unicodable failing (and bisectable not run yet) before I can post the next version of the PR

[21:27] <irced> i think the central issue with my code was that the rule was the only thing subparsed and it may not have been complete enough

[21:41] *** patrickb left
[21:48] *** lizmat left
[21:49] *** Cabanossi left
[21:51] *** Cabanossi joined
[21:55] <irced> yeah it seemed to be a lack of understanding of the mechanics of subparse so disregard the question as stated thanks all

[21:56] *** irced left
[21:57] <guifa> jnthn: is there a place for bug reports for Comma?

[21:58] <guifa> It doesn’t like my perfectly acceptable indirect colon syntax lol

[22:01] *** chloekek left
[22:03] <guifa> irced: Take a look at the name token.  Two things: 

[22:03] <tellable6> guifa, I'll pass your message to irced

[22:07] *** pecastro left
[22:11] *** pecastro joined
[22:13] <guifa> (1) When you do the subparse, it assumes an initial ^

[22:13] <guifa> That means if a token/rule begins with an <?after>, it can never match on subparse.

[22:14] <guifa> (2) I can appreciate you wanting to capture just the name.  Rather than use the <?after> just use 

[22:15] <guifa> rule name-declarator { ‘namespace’ <name> ‘{‘ }

[22:15] <guifa> token name { \S+ }

[22:29] <simcop2387> Grinnz: i am sadly not, but with my current efforts to begin re-doing all that infrastructure I'll probably try to make that easier to manage.

[22:39] *** rindolf left
[22:41] <jnthn> guifa: Yes, make an account (in the buy process); you don't have to actually buy a copy to be able to reach the feedback page, just be logged in :)

[22:42] <jnthn> Though I think there's actually a ticket for indirect colon syntax, which is probably waiting for somebody to actually want it :P

[22:43] *** Sgeo joined
[22:53] * guifa raises hand 

[22:54] <guifa> I’m probably the only person who use push array COLON item but it lines up so much nicer when I do that with my own objects in the same block

[22:55] <jnthn> :)

[22:55] <jnthn> Found it in our internal bug tracker, shuffled it into the To Do Soon column. Apparently it's assigned to me. :)

[22:55] <AlexDaniel> tobs: oh, I know

[22:55] <AlexDaniel> tobs: unicodable does some tricks in order to get the full message

[22:55] <AlexDaniel> tobs: otherwise IRC::Client strips unicodey stuff like whitespace and whatever

[22:56] <AlexDaniel> discord6: help

[22:56] <AlexDaniel> uhhhhhhhhhh

[22:57] <AlexDaniel> well… what I like about whateverable bots is that at least it's easy to get help…

[22:57] <AlexDaniel> tobs: anyway, if discord6 is using IRC::Client, which I assume it does, then it's probably hard to get unicode through the bridge anyway

[23:00] <tobs> AlexDaniel: and yes, bisectable.t takes a while and makes for a nice heating

[23:01] <AlexDaniel> hah

[23:01] <tobs> it was the only test that ran through without problems the first time though

[23:05] <AlexDaniel> u: https://raw.githubusercontent.com/perl6/whateverable/master/xt/lib/Testable.pm6

[23:05] <unicodable6_> AlexDaniel, Successfully fetched the code from the provided URL

[23:05] <unicodable6_> AlexDaniel, U+0075 LATIN SMALL LETTER U [Ll] (u)

[23:05] <unicodable6_> AlexDaniel, U+0073 LATIN SMALL LETTER S [Ll] (s)

[23:05] <unicodable6_> AlexDaniel, Cowardly refusing to gist more than 5000 lines

[23:06] <AlexDaniel> tobs: that test is bullshit

[23:06] <AlexDaniel> tobs: $t.last-test; is missing from that file

[23:07] <AlexDaniel> tobs: it is needed so that can make sure that there are no messages in the queue from the last test

[23:07] <AlexDaniel> tobs: because of that, the test file was succeeding

[23:07] <AlexDaniel> so add $t.last-test; before done-testing, aaand…

[23:08] <AlexDaniel> and we can change the test to something like

[23:08] <AlexDaniel> u: https://gist.githubusercontent.com/AlexDaniel/b392c71ae7c3d7c89866366b4aeab511/raw/abe38d800f3605b009a7b0c9892ddfbc6138feb9/foo.txt

[23:08] <unicodable6_> AlexDaniel, Successfully fetched the code from the provided URL

[23:08] <unicodable6_> AlexDaniel, U+221E INFINITY [Sm] (∞)

[23:08] <AlexDaniel> I wonder if this works too

[23:08] <AlexDaniel> u: https://gist.github.com/AlexDaniel/b392c71ae7c3d7c89866366b4aeab511

[23:08] <unicodable6_> AlexDaniel, U+221E INFINITY [Sm] (∞)

[23:09] <AlexDaniel> lol, cool, we can test this too :)

[23:13] <tobs> heh, and my guess about `u:` turned out to be completely wrong, it was `use` :D

[23:17] <AlexDaniel> xD

[23:17] *** Kaiepi left
[23:23] <tobs> AlexDaniel: I fixed the expectations of that specific test instead of replacing it by the ∞-gist.

[23:23] <tobs> probably the file being .pm6 was important, looking at the test description?

[23:24] <AlexDaniel> ah, last-test was misplaced, doh

[23:24] <AlexDaniel> tobs: not really, the idea is just that it accepts something reasonable

[23:25] <AlexDaniel> unicodable should probably accept *any* mime type, but it shares the code path with other bots so maybe it doesn't

[23:25] <AlexDaniel> ok we're ready to merge I think

[23:25] <tobs> \o/

[23:26] <tobs> thanks for the mentoring

[23:26] <AlexDaniel> that private_method_table trick is pretty cool

[23:27] <Geth> ¦ whateverable/master: 6 commits pushed by (Tobias Boege)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[23:27] <Geth> ¦ whateverable/master: 49599dab23 | Allow Testable to impersonate discord6

[23:27] <Geth> ¦ whateverable/master: 276cc299e6 | Support messages from the discord bridge

[23:27] <Geth> ¦ whateverable/master: d55a5101f2 | Refactor discord bridge faking in Testable

[23:27] <Geth> ¦ whateverable/master: a5178bd3d6 | Test both, normal client and bridge, by default

[23:27] <Geth> ¦ whateverable/master: de2e26aca7 | Fix unicodable.t

[23:27] <Geth> ¦ whateverable/master: bc827e02ae | Merge pull request #357 from taboege/discordable

[23:27] <Geth> ¦ whateverable/master: review: https://github.com/perl6/whateverable/compare/f1563a651f35...bc827e02ae73

[23:27] <AlexDaniel> I'm happy to help :)

[23:28] *** evalable6 left
[23:28] *** bisectable6 left
[23:28] <timotimo> cool

[23:28] *** committable6 left
[23:28] <AlexDaniel> is anybody on discord?

[23:28] <discord6> <timotimo> m: say "you are"

[23:28] <AlexDaniel> OK good, too fast though!

[23:28] <timotimo> :)

[23:29] <AlexDaniel> also, that is not going to work!!

[23:29] <AlexDaniel> tobs: ok, we have a problem!

[23:29] <AlexDaniel> tobs: since camelia will not respond to messages from discord, some tests are a bit wrong!

[23:29] <AlexDaniel> tobs: so, currently evalable checks if camelia is around, and if she isn't, then it responds

[23:30] <tobs> I see

[23:30] *** committable6 joined
[23:30] *** ChanServ sets mode: +v committable6

[23:30] <AlexDaniel> tobs: but for messages from the discord bridge, evalable6 should respond regardless of whether camelia is here or not

[23:30] <discord6> <timotimo> m: say "it works!!"

[23:30] <discord6> <timotimo> c: HEAD say "it works!"

[23:30] <committable6> timotimo, ¦HEAD(636888c): «it works!␤»

[23:30] <AlexDaniel> omg it actually works :)

[23:31] *** tellable6 left
[23:31] *** notable6 left
[23:31] <tobs> I suppose yet another role could be mixed into messages handled by Discordable which could be used by evalable to decide to leave it to camelia or not

[23:32] <AlexDaniel> tobs: yeah, that's what I thought too, probably the easiest way

[23:32] *** evalable6 joined
[23:33] *** bisectable6 joined
[23:33] *** ChanServ sets mode: +v bisectable6

[23:33] *** notable6 joined
[23:33] <AlexDaniel> say 42

[23:33] <evalable6> AlexDaniel, rakudo-moar 636888c69: OUTPUT: «42␤»

[23:35] *** tellable6 joined
[23:35] <AlexDaniel> timotimo: ok try using evalable

[23:36] <discord6> <timotimo> m: say "hi"

[23:36] <evalable6> timotimo, rakudo-moar 636888c69: OUTPUT: «hi␤»

[23:36] <AlexDaniel> .seen timotimo

[23:36] <tellable6> AlexDaniel, I saw timotimo 2019-08-26T23:36:25Z in #perl6: <timotimo> m: say "hi"

[23:36] <AlexDaniel> cool

[23:36] <discord6> <timotimo> o7

[23:37] <AlexDaniel> o7?

[23:37] <timotimo> a salute gesture

[23:38] <AlexDaniel> .tell RaycatWhoDat now you can use the bots from discord! All *able6 bots!

[23:38] <tellable6> AlexDaniel, I'll pass your message to RaycatWhoDat

[23:39] <AlexDaniel> timotimo: looks a bit more like head scratching :D

[23:39] <timotimo> haha

[23:40] <tobs> .tell timotimo I wonder if that actually works

[23:40] <tellable6> tobs, I'll pass your message to timotimo

[23:40] <tobs> could you try, please? :)

[23:40] <AlexDaniel> not this way!

[23:41] <AlexDaniel> because timotimo himself requested a feature due to which messages are intentionally not delivered in the first 10 minutes on the same channel

[23:41] *** pecastro left
[23:41] <discord6> <timotimo> yep it's my fault

[23:42] <AlexDaniel> but if .seen works (I tested it ↑), then .tell also does

[23:42] <AlexDaniel> we can always add more tests :)

[23:43] <AlexDaniel> alternatively timotimo can receive it on #perl6-dev

[23:44] <AlexDaniel> .tell timotimo hello to perl6-dev

[23:44] <tellable6> AlexDaniel, I'll pass your message to timotimo

[23:44] <AlexDaniel> .tell timotimo like, from discord!!

[23:44] <tellable6> AlexDaniel, I'll pass your message to timotimo

[23:44] <discord6> <timotimo> .tell AlexDaniel can you get this?

[23:44] <tellable6> timotimo, I'll pass your message to AlexDaniel

[23:46] <discord6> <timotimo> can i what now?

[23:46] <tellable6> 2019-08-26T23:45:21Z #perl6-dev <AlexDaniel> timotimo sure, but can you receive this??

[23:46] <discord6> <timotimo> nice.

[23:46] <tobs> amazing what one small role gear can accomplish in the whateverable clockwork

[23:46] <AlexDaniel> :>

[23:48] <AlexDaniel> also IRC::Client++, it's a bit hacky but it works really well

[23:52] *** releasable6 left
[23:52] <AlexDaniel> tyil: ↑ you'd probably like to see that too :)

[23:52] <AlexDaniel> tobs++ :)

[23:53] *** releasable6 joined
[23:53] *** ChanServ sets mode: +v releasable6

[23:53] <tobs> where does Evalable take the presence of camelia into account?

[23:53] <tobs> there's one mention of the nick and a Whatever::Userlist, but I can't connect the dots

[23:54] <tobs> wait, it's not that hard

[23:55] <tobs> the dots are on a straight line, almost

[23:56] <discord6> <timotimo> these two dots are in a straight line! this can't be a coincidence!

[23:58] <AlexDaniel> yeah, make-believe method used to have a bit more code until I rewrote the userlist stuff

[23:59] <AlexDaniel> now it properly handles joins/parts/nick changes instead of doing /names every time

