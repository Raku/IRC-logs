[00:08] *** MasterDuke left
[00:18] *** wildtrees left
[00:35] <Grinnz> AlexDaniel / jnthn: one more opinion on the "shebangs in test files" track from perl 5 pov: given that almost all perl 5 test suites are made of entirely perl 5 test files, the shebang itself is actually ignored in most cases since you want to run using the interpreter that invoked the test tool, not whatever might be first in path or wherever the test writer thought you might have a perl. given that, the only shebang i use in my test 

[00:35] <Grinnz> files is the same one i use in my CPAN-deployed scripts, which is #!perl so that it won't work without the tool and the intention is obvious

[00:36] <Grinnz> so tldr: interpreters not always being /usr/bin/foo complicates relying on the shebang

[00:39] *** epony joined
[00:46] <Grinnz> that's not to say the language couldn't require shebangs in test files, just that doing so might set up misleading expectations of what the shebang means

[00:47] <Grinnz> er, s/require/recommend/

[00:47] *** TeamBlast left
[00:48] *** sivoais left
[00:52] *** mowcat left
[00:59] *** lucasb left
[00:59] *** TeamBlast joined
[01:01] *** sivoais joined
[01:16] *** AlexDani` joined
[01:17] *** shadowpaste left
[01:17] <tbrowder> tony-o: hm, i think many midules will have other module dependencies. any way to handle that?

[01:20] *** AlexDaniel left
[01:22] *** shadowpaste joined
[01:29] *** molaf left
[01:41] *** molaf joined
[01:49] <cpan-p6> New module released to CPAN! Tomtit (0.1.4) by 03MELEZHIK

[01:49] <cpan-p6> New module released to CPAN! Tomty (0.0.6) by 03MELEZHIK

[02:13] *** Sgeo_ joined
[02:13] *** KotH left
[02:16] *** KotH joined
[02:16] *** Sgeo__ left
[02:16] *** veesh left
[02:20] *** Itaipu left
[02:21] *** Itaipu joined
[02:30] *** veesh joined
[02:41] *** radvendii joined
[02:41] *** radvendii left
[02:46] *** Cabanoss- joined
[02:47] *** Cabanossi left
[02:47] *** Cabanoss- is now known as Cabanossi

[03:05] *** lgtaube left
[03:20] *** Guest14120 left
[03:23] *** success joined
[03:24] *** success is now known as Guest8978

[03:47] *** isBEKaml joined
[03:51] *** Sgeo joined
[03:53] *** Sgeo_ left
[04:05] *** Doc_Holliwood left
[04:28] *** khisanth_ left
[04:35] *** reach_satori_ left
[04:40] <tony-o> tbrowder: yea way, requires a little more finesse but looks like this: https://github.com/tony-o/travis-p6n/blob/master/.travis.yml

[04:40] *** khisanth_ joined
[04:41] <tony-o> i'm still paring down those docker run commands but the apt update stuff is necessary so curl can use https

[04:45] <tony-o> you can see the log and config here: https://travis-ci.org/tony-o/travis-p6n/jobs/589276662/config

[04:46] *** molaf left
[05:18] *** isBEKaml left
[05:19] *** Sgeo left
[05:36] *** wamba joined
[05:41] *** lgtaube joined
[05:49] *** jmerelo joined
[06:13] *** sauvin joined
[06:29] *** wamba left
[06:30] *** jmerelo left
[06:37] *** domidumont joined
[06:39] *** Sgeo joined
[06:46] *** TreyHarris left
[06:51] *** TreyHarris joined
[07:10] *** wamba joined
[07:20] *** ambs left
[07:25] *** AlexDani` is now known as AlexDaniel

[07:25] *** AlexDaniel left
[07:25] *** AlexDaniel joined
[07:27] *** ambs joined
[07:27] *** squashable6 left
[07:29] <SmokeMachine> is there a easy way to make GitHub actions test a module (using a docker image no not have to install all de dependencies) and use mi6 to release it to CPAN?

[07:30] *** squashable6 joined
[07:31] *** ambs left
[07:33] *** ambs joined
[07:44] *** sena_kun joined
[07:48] * moritz hasn't found it easy to do anything with github actions

[07:49] *** abraxxa left
[07:49] *** abraxxa joined
[07:54] *** abraxxa left
[07:55] *** abraxxa joined
[08:00] *** leont joined
[08:01] *** zakharyas joined
[08:01] *** dakkar joined
[08:04] *** aindilis left
[08:10] *** Itaipu_ joined
[08:11] *** Itaipu left
[08:14] *** leont left
[08:14] *** Itaipu joined
[08:15] *** Itaipu_ left
[08:17] *** Doc_Holliwood joined
[08:25] *** Itaipu left
[08:29] *** Itaipu joined
[08:34] *** ChoHag left
[09:07] *** daxim left
[09:07] *** cpan-p6_ joined
[09:07] *** cpan-p6_ left
[09:07] *** cpan-p6_ joined
[09:07] *** cpan-p6 left
[09:07] *** cpan-p6_ is now known as cpan-p6

[09:07] *** cpan-p6_ joined
[09:07] *** cpan-p6_ left
[09:07] *** cpan-p6_ joined
[09:08] *** cpan-p6_ left
[09:11] <Doc_Holliwood> You guys ever looked at Kotlin?

[09:14] *** daxim joined
[09:15] <sena_kun> Doc_Holliwood, what's with it?

[09:16] <Doc_Holliwood> I'm watching a video about it. Seems to be very expressive.

[09:16] <Doc_Holliwood> Just curious about peoples thoughts

[09:20] <sena_kun> Doc_Holliwood, to me it sounded like a sugar upon java. in large projects java is ewww, but at least you can read/write even if you are tired beyond repair.

[09:22] <sena_kun> they write that "code is shorter" is a benefit, but... the code is shorter _compared to java_, so it is not really that cool

[09:25] <sena_kun> maybe that's just me, of course, don't saying it's a universal truth

[09:31] *** cpage left
[09:33] <Doc_Holliwood> It seems quite rakish to me at times

[09:34] <Doc_Holliwood> i like this syntax `someobject.someMethod().let( -> returnValue { ... } )`

[09:52] *** aborazmeh joined
[09:52] *** aborazmeh left
[09:52] *** aborazmeh joined
[09:52] <sena_kun> m: 42.abs().(->$a { say $a })()

[09:52] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´No such method 'CALL-ME' for invocant of type 'Int'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:52] <sena_kun> m: 42.abs().&( ->$a { say $a })()

[09:52] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´42‚ê§¬ª

[10:08] *** cpan-p6_ joined
[10:08] *** cpan-p6_ left
[10:08] *** cpan-p6_ joined
[10:08] *** cpan-p6 left
[10:08] *** cpan-p6_ is now known as cpan-p6

[10:08] *** cpan-p6 left
[10:08] *** cpan-p6 joined
[10:08] *** cpan-p6 left
[10:08] *** cpan-p6 joined
[10:09] <tyil> woah

[10:09] <tyil> calm down, cpan-p6 

[10:09] <timotimo> cpan-chan

[10:09] <tyil> wonder if I broke something :(

[10:13] *** domidumont left
[10:18] <tyil> I think I did :(

[10:19] <tyil> I guess the GHOSTing feature of IRC::Client::Plugin::NickServ is working at least

[10:24] *** squashable6 left
[10:24] *** Black_Ribbon left
[10:25] *** squashable6 joined
[10:25] *** ChanServ sets mode: +v squashable6

[10:30] *** cpan-p6_ joined
[10:30] *** cpan-p6_ left
[10:30] *** cpan-p6_ joined
[10:30] *** cpan-p6 left
[10:30] *** cpan-p6_ is now known as cpan-p6

[10:31] *** cpan-p6 left
[10:31] <tyil> hmm

[10:31] *** cpan-p6 joined
[10:31] *** cpan-p6 left
[10:31] *** cpan-p6 joined
[10:31] *** wamba left
[10:31] <tyil> ok, I'll turn it off for now, until I can fix that

[10:31] *** wamba joined
[10:32] *** cpan-p6 left
[10:33] *** cpan-p6_ joined
[10:33] *** cpan-p6_ left
[10:33] *** cpan-p6_ joined
[10:33] *** cpan-p6_ is now known as cpan-p6

[10:33] *** cpan-p6 left
[10:33] <Altreus> i don't like the idea of my code ghosting me

[10:33] <Altreus> although, it happens

[10:37] *** wamba left
[10:41] *** zakharyas left
[10:51] <tbrowder> .tell tony-o thanks, looks good, i'll try it today and report back!

[10:51] <tellable6> tbrowder, I'll pass your message to tony-o

[11:03] *** wamba joined
[11:06] *** squashable6 left
[11:08] *** squashable6 joined
[11:19] *** reach_satori joined
[11:21] *** reach_satori_ joined
[11:23] *** reach_satori left
[11:35] *** ufobat__ left
[11:46] <tbrowder>  .tell tony-o wow!! test went from a bit over 10 minutes to a little under 5 minutes--good job! thank you!

[11:47] <tbrowder> .tell tony-o ^^^

[11:47] <tellable6> tbrowder, I'll pass your message to tony-o

[12:09] *** Doc_Holliwood left
[12:19] *** jmerelo joined
[12:27] <Ulti> is there something in core akin to Duration(:8days) so I dont have to specify seconds

[12:28] <Ulti> Im aware of how terrible a general concept that is given a day isnt of equal length always

[12:29] *** kiwi_7689 joined
[12:29] *** kiwi_7689 left
[12:32] *** holyghost left
[12:34] <[Coke]> nope, it's just seconds; if you want day math, Date is probably a better choice.

[12:34] <[Coke]> m: say Date.new(2019,12,25)+7

[12:34] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´2020-01-01‚ê§¬ª

[12:36] *** cpan-p6 joined
[12:36] *** cpan-p6 left
[12:36] *** cpan-p6 joined
[12:37] *** wamba left
[12:38] *** rbt joined
[12:39] *** pat_js joined
[12:40] <[Coke]> m: Date.new(Instant.from-posix: 11**7)

[12:40] <camelia> rakudo-moar 17d036ad4: ( no output )

[12:40] <[Coke]> m: say Date.new(Instant.from-posix: 11**7)

[12:40] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´1970-08-14‚ê§¬ª

[12:41] *** Doc_Holliwood joined
[12:45] <Doc_Holliwood> Ok, so I just installed IntelliJ to look closer at Kotlin and I noticed something interesting.

[12:45] *** reach_satori_ left
[12:45] <Doc_Holliwood> jnthn++ is a cheater =)

[12:45] <Doc_Holliwood> I admired him so much how he can develop an IDE next to all the other work

[12:46] <tadzik> :D

[12:46] <tadzik> well it's "only" a modded IDEA, yes :)

[12:46] <jmerelo> with "only" a plugin that allows you to visualize concurrent execution...

[12:47] <jnthn> There's no way we could have done it without such a nice base platform to build it on :)

[12:47] *** veesh left
[12:47] <jnthn> It's still an incredible amount of work even with that.

[12:47] <tadzik> what do you mean, how can VimScript not be enough for all this? :P

[12:47] <Doc_Holliwood> I believe

[12:47] <[Coke]> jnthn++

[12:47] <[Coke]> et al.++

[12:47] <jnthn> Well, yes, not just me :)

[12:48] <jmerelo> also sena_kun++

[12:48] <Doc_Holliwood> while we're at it. Also lizmat++

[12:49] <jmerelo> Doc_Holliwood: that always applies

[12:49] <Doc_Holliwood> she came up with a pull request regarding subclassing `Proxy`

[12:53] *** reach_satori joined
[12:54] *** reach_satori_ joined
[12:56] *** pmurias joined
[12:57] <pmurias> Doc_Holliwood: isn't Kotlin intended as a better Java?

[12:58] *** reach_satori left
[12:58] <Doc_Holliwood> It's definitly more concise

[12:58] *** mowcat joined
[13:00] <pmurias> Doc_Holliwood: that seems to be the *better* part ;)

[13:01] <Doc_Holliwood> It has nice things. Multi-Paradigm too

[13:02] <Doc_Holliwood> https://youtu.be/0sPzDwS55wM?t=181

[13:07] *** jmerelo left
[13:12] <pmurias> Doc_Holliwood: just meant that from looking on the docs it seems like more fun replacement for Java rather (interesting in a pragmatic way instead of some new cool weird thing)

[13:14] *** satori__ joined
[13:15] *** reach_satori_ left
[13:15] <Doc_Holliwood> Well it's definitly generating more buzz than Perl6 that's for sure

[13:16] <Doc_Holliwood> Man, we need a big corporate sponsor

[13:16] *** aborazmeh left
[13:17] *** vrurg joined
[13:18] <pmurias> Doc_Holliwood: yes, one of those wouldn't hurt for sure ;)

[13:18] <pmurias> Doc_Holliwood: making Java less tedious/more fun is a good niche

[13:20] *** zakharyas joined
[13:21] <Doc_Holliwood> https://perl6.org/compilers/ still states "Rakudo runs on MoarVM and the Java Virtual Machine (JVM)"

[13:21] <Doc_Holliwood> That's no longer true, is it?

[13:32] <[Coke]> We target the JVM but it's not (never has been) as full featured.

[13:33] <[Coke]> I would at least change that to "has experimental support for the JVM"

[13:37] <Doc_Holliwood> priorities

[13:38] *** ambs left
[13:40] *** ambs joined
[13:48] *** lucasb joined
[13:49] *** molaf joined
[13:52] *** domidumont joined
[13:58] *** satori__ left
[14:01] <SmokeMachine> vrurg: Hi! are you there? why do you want to get the SQL from the AST?

[14:02] *** rbt left
[14:10] <vrurg> SmokeMachine: to simplify logging for users. It's not actually me wanting it but I'm just thinking of possible use cases. :)

[14:11] *** Sgeo_ joined
[14:11] <SmokeMachine> vrurg: do you think Red::Event should have a `method sql { die unless $!data ~~ Red::AST; $!db.translate: $!data }` ?

[14:13] <vrurg> SmokeMachine: not necessarily. To my view it's enough if $ev.db.translate($ev.data) does what's expected.

[14:13] *** Sgeo left
[14:20] *** MilkmanDan left
[14:25] *** domidumont left
[14:27] *** MilkmanDan joined
[14:31] *** pmurias left
[14:33] *** wamba joined
[14:39] <SmokeMachine> m: sub infix:<< < >>(*@a) is assoc<left> { dd @a; @a.join: "|" }; say 1 < 2 < 3 # is there a way to make this return `1|2|3` ?

[14:39] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Array element = [1, 2]‚ê§2|3‚ê§Array element = [2, 3]‚ê§¬ª

[14:40] <SmokeMachine> m: sub infix:<< | >>(*@a) is assoc<left> { dd @a; @a.join: "|" }; say 1 | 2 | 3 # like this?

[14:40] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§1|2|3‚ê§¬ª

[14:43] <discord6> <RaycatWhoDat> Seems like the first one is making multiple two-element arrays

[14:44] <discord6> <RaycatWhoDat> I dunno all of the syntax but maybe something is preventing it from parsed the other arguments as *

[14:45] <discord6> <RaycatWhoDat> Maybe < has some other behavior that prevents that

[14:47] <discord6> <RaycatWhoDat> Or maybe it's the other way around. Maybe | has behavior that happens to work in your favor.

[14:47] <discord6> <RaycatWhoDat> shrugs

[14:48] *** pat_js left
[14:48] <SmokeMachine> m: sub infix:<< a >>(*@a) is assoc<left> { dd @a; @a.join: "|" }; say 1 a 2 a 3

[14:48] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Array element = [1, 2]‚ê§1|2|3‚ê§Array element = ["1|2", 3]‚ê§¬ª

[14:49] <SmokeMachine> m: sub infix:<< a >>(*@a) is assoc<list> { dd @a; @a.join: "|" }; say 1 a 2 a 3

[14:49] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§1|2|3‚ê§¬ª

[14:49] <discord6> <RaycatWhoDat> Ey

[14:49] <SmokeMachine> m: sub infix:<< < >>(*@a) is assoc<list> { dd @a; @a.join: "|" }; say 1 < 2 < 3

[14:49] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Array element = [1, 2]‚ê§2|3‚ê§Array element = [2, 3]‚ê§¬ª

[14:49] <discord6> <RaycatWhoDat> Ya got it

[14:50] <SmokeMachine> RaycatWhoDat: No... I didn't... ^^ :(\

[14:50] <discord6> <RaycatWhoDat> D:

[14:50] <SmokeMachine> m: sub infix:<< a >>(*@a) is assoc<chain> { dd @a; @a.join: "|" }; say 1 a 2 a 3

[14:50] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Array element = [2, 3]‚ê§1|2|3‚ê§Array element = [1, "2|3"]‚ê§¬ª

[14:51] <discord6> <RaycatWhoDat> Wait. Is your array getting remade every time?

[14:52] <discord6> <RaycatWhoDat> @a

[14:53] <SmokeMachine> RaycatWhoDat: sorry, what do you mean?

[14:54] <discord6> <RaycatWhoDat> Oh, never mind. @a is passed in as a parameter

[14:59] <AlexDaniel> RaycatWhoDat can you try m: say 42

[14:59] <AlexDaniel> just wanna make sure it works

[14:59] <discord6> <RaycatWhoDat> no

[14:59] <discord6> <RaycatWhoDat> okay

[14:59] <discord6> <RaycatWhoDat> m: say 42

[14:59] <evalable6> RaycatWhoDat, rakudo-moar d00674b31: OUTPUT: ¬´42‚ê§¬ª

[14:59] <discord6> <RaycatWhoDat> Ye

[14:59] *** vike left
[14:59] <AlexDaniel> k, thanks :)

[15:02] <discord6> <RaycatWhoDat> SmokeMachine, here's a thought

[15:02] <discord6> <RaycatWhoDat> Is that pipe operator making your other arguments a Junction?

[15:02] <discord6> <RaycatWhoDat> If so, would it cause this effect when called with .Str?

[15:03] <SmokeMachine> m: say 1|2|3 # a junction would be printed like this

[15:03] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´any(1, 2, 3)‚ê§¬ª

[15:03] <discord6> <RaycatWhoDat> Ah.

[15:04] <SmokeMachine> I think there is something "hardcoded" on <...

[15:04] <discord6> <RaycatWhoDat> Agreed.

[15:04] *** isBEKaml joined
[15:05] <discord6> <RaycatWhoDat> m: say | [2] | [3] | [4]

[15:05] <evalable6> RaycatWhoDat, rakudo-moar d00674b31: OUTPUT: ¬´any(2, [3], [4])‚ê§¬ª

[15:05] <discord6> <RaycatWhoDat> m: say 2 | 3 | 4

[15:05] <evalable6> RaycatWhoDat, rakudo-moar d00674b31: OUTPUT: ¬´any(2, 3, 4)‚ê§¬ª

[15:06] <discord6> <RaycatWhoDat> m: say |(2, 3, 4)

[15:06] <evalable6> RaycatWhoDat, rakudo-moar d00674b31: OUTPUT: ¬´234‚ê§¬ª

[15:06] <discord6> <RaycatWhoDat> So strange

[15:08] <SmokeMachine> |(2,3,4) is a Slip

[15:08] <SmokeMachine> m: |(2,3,4).^name.say

[15:08] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´List‚ê§¬ª

[15:08] <SmokeMachine> m:( |(2,3,4)).^name.say

[15:08] <evalable6> SmokeMachine, rakudo-moar d00674b31: OUTPUT: ¬´Slip‚ê§¬ª

[15:08] <discord6> <RaycatWhoDat> blinks

[15:08] <discord6> <RaycatWhoDat> What even is?

[15:09] <discord6> <RaycatWhoDat> And what's a piece of clothing have to do with this? üòõ

[15:09] <SmokeMachine> m: say [1,2,3,(4,5,6), |(7,8,9)]

[15:09] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´[1 2 3 (4 5 6) 7 8 9]‚ê§¬ª

[15:09] <discord6> <RaycatWhoDat> Oh, does it auto-flatten based on its parent container?

[15:10] <SmokeMachine> m: say { a => 1, b => 2, c => {d => 4, e => 5}, |{f => 6, g=> 7}}

[15:10] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´{a => 1, b => 2, c => {d => 4, e => 5}, f => 6, g => 7}‚ê§¬ª

[15:11] *** vike joined
[15:12] <SmokeMachine> m: sub bla(|c) {say c}; my @a = 1,2,3; bla @a; bla |@a

[15:12] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´\([1, 2, 3])‚ê§\(1, 2, 3)‚ê§¬ª

[15:13] <SmokeMachine> m: sub bla($a?, $b?, $c?) {say { :$a, :$b, :$c }}; my @a = 1,2,3; bla @a; bla |@a

[15:13] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´{a => [1 2 3], b => (Any), c => (Any)}‚ê§{a => 1, b => 2, c => 3}‚ê§¬ª

[15:13] <AlexDaniel> so I was thinking, maybe run `apt-file search .` and then pipe it into a script to generate some stats about extensions

[15:13] <discord6> <RaycatWhoDat> So, not based on the parent container, but it does auto-flatten. Additionally, it looks like a Slip can be any type underneath?

[15:13] <discord6> <RaycatWhoDat> Neat-o

[15:13] <AlexDaniel> but that thing wouldn't output any paths before it reaches the end

[15:14] <AlexDaniel> so it just keeps counting millions of files and eating my memory

[15:15] <AlexDaniel> I can of course try the same on a machine with 64GB RAM, but uhh‚Ä¶

[15:15] <AlexDaniel> is there any easier way?

[15:15] <AlexDaniel> to just print some quick stats about extensions that are being used in the wild

[15:21] <AlexDaniel> ok I can narrow down the search with a regex

[15:27] *** thowe joined
[15:32] <thowe> Taking a sick day, so gonna play with Perl6.

[15:32] <thowe> silver lining

[15:32] <discord6> <RaycatWhoDat> Smart.

[15:40] *** eythian left
[15:42] *** eythian joined
[15:42] *** eythian left
[15:42] *** eythian joined
[15:42] <Geth_> ¬¶ perl6.org: Alexey-T++ created pull request #135: CudaText has Perl 6 lexer too

[15:42] <Geth_> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/pull/135

[15:53] *** isBEKaml left
[15:53] <AlexDaniel> oh wow, that's the first time swap ever did some good for me

[15:54] <tony-o> once is all ya need

[15:54] <tellable6> 2019-09-25T10:51:12Z #perl6 <tbrowder> tony-o thanks, looks good, i'll try it today and report back!

[15:54] <tellable6> 2019-09-25T11:47:30Z #perl6 <tbrowder> tony-o ^^^

[15:55] <tony-o> oh nice, hopefully that worked. writing an article breakinng down that and circle config 

[15:57] <thowe> The name change might be a bit of a pain in the ass for those who have published books, no?

[15:59] <lizmat> yes

[16:00] *** domidumont joined
[16:01] <jnthn> For those of us who procrastinated heavily on attempting to write books, it's testimony to the power of procrastination, though. :P

[16:02] *** MasterDuke joined
[16:03] <thowe> heh.  I made a point of buying all the books published since the official release.  I use them for advocacy at work and have started learning Perl6 about 4 times now.  I look forward to a book on Cro or somesuch.

[16:04] <thowe> I'm trying to rewrite one of the most complicate dthings I ever wrote in Perl6...  I think I used to be smarter, though.

[16:12] <jnthn> The chances of a concurrency/parallelism book went up quite a bit thanks to me having to do a lot of the thinking/writing that would need anyway when preparing the course I gave at PerlCon :)

[16:19] *** ChoHag joined
[16:21] *** obfusk__ left
[16:22] <tony-o> .weekly https://deathbyperl6.com/rakudo-nightly-faster-ci/

[16:22] <tony-o> gah, can never remember that command

[16:23] *** obfusk__ joined
[16:23] <timotimo> i think just "weekly:" is enough?

[16:23] <tony-o> weekly: https://deathbyperl6.com/rakudo-nightly-faster-ci/

[16:23] <notable6> tony-o, Noted! (weekly)

[16:23] <tony-o> sure enough

[16:24] *** leont joined
[16:24] <tony-o> ty

[16:25] *** grumble left
[16:27] *** cpan-p6 left
[16:27] *** cpan-p6 joined
[16:27] *** cpan-p6 left
[16:27] *** cpan-p6 joined
[16:29] <lizmat> tony-o: posted on /r/perl6 as well

[16:29] *** grumble joined
[16:30] <Juerd> thowe: Changing a name is a PITA in any case, but sometimes it's a smaller PITA than keeping the old one :)

[16:31] <Juerd> This is probably true for both people and projects.

[16:31] <lizmat> :-)

[16:31] *** leont left
[16:32] <tony-o> ty lizmat 

[16:33] *** veesh joined
[16:40] <Geth_> ¬¶ perl6.org: 35eb03cd15 | Alexey++ (committed using GitHub Web editor) | source/whatever/index.html

[16:40] <Geth_> ¬¶ perl6.org: CudaText has Perl 6 lexer too

[16:40] <Geth_> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/35eb03cd15

[16:40] <Geth_> ¬¶ perl6.org: 211943b002 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | source/whatever/index.html

[16:40] <Geth_> ¬¶ perl6.org: Merge pull request #135 from Alexey-T/patch-1

[16:40] <Geth_> ¬¶ perl6.org: 

[16:40] <Geth_> ¬¶ perl6.org: CudaText has Perl 6 lexer too

[16:40] <Geth_> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/211943b002

[16:41] <AlexDaniel> tony-o: re ‚Äúcan never remember that command‚Äù usually you just tell something to the bot

[16:41] <AlexDaniel> tony-o: so it should tab autocomplete :)

[16:41] <AlexDaniel> tellable6: test test (please ignore)

[16:41] <tellable6> AlexDaniel, I'll pass your message to test

[16:41] <AlexDaniel> notable: test test (please ignore)

[16:41] <notable6> AlexDaniel, Noted! (weekly)

[16:42] <AlexDaniel> sorry, wrong bot xD

[16:42] *** krychu joined
[16:42] <tony-o> ahh

[16:42] <tony-o> unlike the m: 

[16:42] *** dakkar left
[16:42] <AlexDaniel> evalable6: say 42

[16:42] <evalable6> AlexDaniel, rakudo-moar d00674b31: OUTPUT: ¬´42‚ê§¬ª

[16:43] <AlexDaniel> all *ables are more or less consistent

[16:43] *** Sgeo joined
[16:44] *** Sgeo_ left
[16:44] <AlexDaniel> weekly: test test (ignore)

[16:44] <notable6> AlexDaniel, Noted! (weekly)

[16:44] <AlexDaniel> that also works

[16:46] <El_Che> tbrowder: https://github.com/nxadm/rakudo-pkg#using-rakudo-pkg-on-travis

[16:46] <AlexDaniel> note: test test test

[16:47] <AlexDaniel> right, that no longer does because people tend to say that sometimes

[16:53] *** krychu left
[16:58] <tbrowder> tony-o: you prob missed by report earlier: with yr travis, my module test went from 10+ minutes down to < 5 minutes--nice speedup for the impatient. good job, and thanks for the post!

[17:01] *** dogbert11 joined
[17:02] *** wildtrees joined
[17:02] <tbrowder> El_Che: good, i forgot about that, thanks!

[17:11] <uzl[m]> I often use `p6doc --doc=Markdown ...` to extract the markdown-ified Pod from a module. Although for the most part it does a great job, sometimes it's kind of wacky. For instance, declarator blocks for a subroutine's

[17:11] <uzl[m]> parameters are formatted as H2-level headings while the subroutine's name is formatted as H3-level heading. This makes them seem out of place. Example: https://gist.github.com/uzluisf/ec9fa34e603bdc11d5e84642e6d74ddc

[17:11] <uzl[m]> Where should I submit this as an issue? perl6/doc?

[17:13] *** krychu joined
[17:20] *** wamba left
[17:21] <sena_kun> uzl[m], Pod::To::Markdown?

[17:21] *** wamba joined
[17:23] <sena_kun> https://github.com/softmoth/perl6-pod-to-markdown

[17:23] <tony-o> tbrowder: a+, glad that helped - building p6 with each change for ci is so time consuming.  i think with circle ci it's even easier

[17:24] <uzl[m]> sena_kun: Thanks. Will do that.

[17:39] *** krychu left
[17:41] *** zakharyas left
[17:51] *** aindilis joined
[18:00] *** SyrupThinker left
[18:01] *** krychu joined
[18:02] <timotimo> zostay: can you show some screenshots of p6-prometheus-client being used with, for example, a cro application or something? (obviously not just the client itself, more like graphs seen in the prometheus web interface)

[18:03] *** lgtaube left
[18:04] *** lgtaube joined
[18:05] *** domidumont left
[18:11] <discord6> <RaycatWhoDat> Weird question. Are there any "hackish" parts of Perl 6? Anywhere certain concessions were made and pushed off 'til later?

[18:12] <timotimo> there's a few things that are NYI

[18:12] <timotimo> for example, shaped arrays cannot be sliced into arrays of a lower dimension yet

[18:12] <discord6> <RaycatWhoDat> What do you mean?

[18:13] <AlexDaniel> blobs that are str-like but not really and honestly they shouldn't be

[18:13] <AlexDaniel> m: my Blob @blobs; my Blob $single-blob = [~] @blobs

[18:13] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Type check failed in assignment to $single-blob; expected Blob but got Str ("")‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:14] <timotimo> m: my int @foo[3;3;3]; say @foo[1;2;*]

[18:14] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Partially dimensioned views of shaped arrays not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:14] <AlexDaniel> at least that one says sorry

[18:15] <discord6> <RaycatWhoDat> What's the reasoning behind that one, timotimo?

[18:15] <timotimo> nobody implemented it yet :)

[18:15] <discord6> <RaycatWhoDat> No-one got around to it yet?

[18:15] <discord6> <RaycatWhoDat> Ah.

[18:15] <timotimo> yeah

[18:15] <timotimo> it's not terribly easy, either

[18:15] <kybr> macros are still being worked out too, right?

[18:16] <timotimo> that's right

[18:16] <timotimo> the "figure out how macros should be implemented" toy language has recently been finished

[18:16] <discord6> <RaycatWhoDat> Is that 007?

[18:16] <kybr> every now and then i take a look at 007

[18:16] <timotimo> just needs everything to be ported

[18:16] <timotimo> yeah, 007

[18:17] <MasterDuke> renamed to alma, though, right?

[18:17] *** reach_satori joined
[18:17] <discord6> <RaycatWhoDat> So, overall, it seems like Perl 6 is in a very good spot. Just needs more hands, yeah?

[18:18] <timotimo> i imagine alma to be more like a fork

[18:18] <timotimo> but the kind of fork that's shaped like a knife i guess

[18:18] <timotimo> yeah, more hands would be a benefit

[18:19] <timotimo> not only in the compiler, though. more modules would also be pretty valuable

[18:19] <AlexDaniel> timotimo: what are you even talking about

[18:19] <timotimo> and the usual, articles, tutorials, examples, documentation, ...

[18:19] <AlexDaniel> what do you mean everything needs to be ported, who is going to work on that?

[18:19] <timotimo> AlexDaniel: 007 stopped, but alma starts where it ended

[18:20] <AlexDaniel> yeah but we're not getting it on rakudo?

[18:20] <timotimo> i don't actually know. masak or ven would be candidates AIUI

[18:20] <AlexDaniel> or do we?

[18:20] <timotimo> neither 007 nor alma can just be plugged into rakudo 1:1

[18:20] <AlexDaniel> there are absolutely zero plans to get that in rakudo at this point

[18:20] <timotimo> the research results are the main deliverable

[18:21] <AlexDaniel> ‚Äújust needs everything to be ported‚Äù is just false

[18:21] <timotimo> i guess there are hopes and dreams

[18:21] <AlexDaniel> hopes and dreams true

[18:21] <timotimo> i thought the mechanisms are all explored sufficiently to be used for a rakudo-based implementation?

[18:23] <timotimo> BBL

[18:28] <AlexDaniel> well maybe masak can chime in and tell us how we can get macros in rakudo. For example, what would be the timeframe (2, 5, 10 or whatever years) and how can we work towards it

[18:28] <AlexDaniel> current timeframe is ‚Äúnone‚Äù

[18:30] *** sauvin left
[18:30] *** lel left
[18:32] *** chloekek joined
[18:41] <jdv79> is the build broke again?

[18:42] <jdv79> https://nopaste.xyz/?396c24350926146d#+DXVvIOahWiu1uL0y5xec4bzHBwmAzcKIjN6VWmdug0=

[18:42] <jdv79> vrurg: ^ ?

[18:43] <jdv79> i ran git submodule update to resolve an initial issue

[18:43] <vrurg> jdv79: why didn't submodule update??

[18:44] <vrurg> Still, see if grep -r _m_bpv comes up with NQP/Macros.pm

[18:44] <thowe> I want some classes to map to some database objects.  I want them to share a database connection for the life of a script running.  I think in the past (in other languages) I have created a singleton that I pass to things.  Can I do that and have a DB::Pg connection in it; or should I create a closure with that in it?  Are are those basically the same?

[18:44] <thowe> And yes, I know what an ORM is, but I'm not using one here (yet) for reasons.

[18:45] <vrurg> jdv79: it's submodule in NQP which is stuck.

[18:45] <jdv79> i ran "git submodule update" - is that not enough?

[18:45] <vrurg> jdv79: if you did it in rakudo ‚Äì then it could be that it's stuck in nqp/. 

[18:46] <vrurg> They're different repos, after all. But I wonder how did it happen, after all?

[18:46] <jdv79> no idea - the last time i touched this checkout is the last time it got stuck like this

[18:47] <jdv79> i ran git submodule update in nqp and its getting farther now

[18:48] <jdv79> why were submodules introduced?  they seem to be a bit of trouble.

[18:48] <vrurg> jdv79: to avoid code duplication. nqp-configure is common code among Rakudo and NQP. Any other method of sharing it is even worse.

[18:49] <vrurg> We anyway have other submodules too in both NQP and MoarVM

[18:56] <jdv79> its just a large change to the build process that involves a less used feature of git so its not obvious how to handle issues

[18:57] <jdv79> maybe "git submodule update --init --recursive" is what i'm looking for

[18:59] *** SyrupThinker joined
[19:02] <vrurg> jdv79: Actually, at the first run Configure.pl does 'git config submodule.recurse true' so submodules are updated on any git pull. 

[19:03] <vrurg> That's why I wonder why does it happen to you? Can you check if this option is set for you in nqp/

[19:03] <vrurg> ?

[19:17] *** krychu left
[19:18] *** hoelzro joined
[19:26] *** wamba left
[19:26] *** SyrupThinker left
[19:29] *** wamba joined
[19:49] *** reach_satori left
[19:52] <Voldenet> submodules is the hairiest part of git

[19:52] <Voldenet> but afair submodule.recurse requires git 2.14 or higher

[19:55] <jdv79> i have git 2.7.4

[19:55] *** reach_satori joined
[19:58] <jdv79> i have submodule.recurse=true

[19:58] <jdv79> also, what is "rakudo.initialized=1" in my git config?

[19:59] <jdv79> maybe it has something to do with i never git pull - i always git pull --rebase

[20:01] *** Black_Ribbon joined
[20:02] *** __jrjsmrtn__ left
[20:04] *** __jrjsmrtn__ joined
[20:05] *** zakharyas joined
[20:16] <jdv79> vrurg: oddly in git master config docs i see submodule.recursive - i see .recurse - https://github.com/git/git/blob/master/Documentation/config/submodule.txt#L60

[20:17] <jdv79> s/see/ don't see/

[20:18] <vrurg> jdv79: that's it, I mistyped it.

[20:18] <vrurg> Erh, wait, no

[20:18] <jdv79> i'm not sure how to test it as i'm fairly ignorant of submodules

[20:18] <vrurg> jdv79: I need to go now, will be back in ~2hrs and will re-check it

[20:19] <jdv79> ok.  later!

[20:29] <jdv79> vrurg: looks like that typo is mine.  nevermind.

[20:32] *** chloekek left
[20:34] *** apathor joined
[20:45] *** reach_satori left
[20:50] <Geth_> ¬¶ perl6.org: Alexey-T++ created pull request #136: make Editors/IDEs part splitted per each editor, groups Atom items, g‚Ä¶

[20:50] <Geth_> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/pull/136

[20:55] *** abraxxa left
[20:55] <SmokeMachine> thowe: I would suggest you to try Red

[20:55] <tony-o> Xoos is also nice.

[20:56] <SmokeMachine> thowe: https://fco.github.io/Red/tutorials/start

[20:56] <thowe> SmokeMachine, I am aware of Red.  I'm just asking if passing a closure makes sense.

[20:57] <tony-o> thowe: i think creating a singleton makes more sense

[20:58] <SmokeMachine> I agree...

[20:59] <thowe> OK.  That's what I have done in the past.  Not sure what that looks like in Perl6 yet.  Need to learn Classes.

[21:00] <thowe> What is the state of Red?

[21:00] <discord6> <RaycatWhoDat> Overall? Not blue.

[21:00] <thowe> Production ready-ish?

[21:01] <SmokeMachine> ish

[21:01] <SmokeMachine> For simple stuff it works very well...

[21:03] <SmokeMachine> RaycatWhoDat: it was almost called Blue! :P

[21:03] <SmokeMachine> And it‚Äôs just Red because it‚Äôs not Blue :)

[21:05] *** aborazmeh joined
[21:05] *** aborazmeh left
[21:05] *** aborazmeh joined
[21:06] *** aborazmeh left
[21:09] *** zakharyas left
[21:12] *** aborazmeh joined
[21:12] *** aborazmeh left
[21:12] *** aborazmeh joined
[21:13] *** reach_satori joined
[21:13] *** aborazmeh left
[21:14] <sena_kun> thowe, a dynamic variable at the top? as an alternative, I'd move it around using argument, but that depends on how much of a pain that sounds like in your particular case.

[21:14] <sena_kun> if lexical scoping can satisfy you completely, just closure way is great too

[21:16] <thowe> I'm slightly more familiar with the singleton idea as that is how I have done it with Qt4 in the past.  I'm going to look at Red also, though.  I'm getting ahead of myself, though...  Still working my way through Learning Perl and not to Classes yet.

[21:17] *** lucasb left
[21:18] *** aborazmeh joined
[21:18] *** aborazmeh left
[21:18] *** aborazmeh joined
[21:18] *** Syrup joined
[21:19] <sena_kun> m: my $foo = 42; class A { method a { say $foo } }; class B { method b { say $foo } }; A.new.a; B.new.b;

[21:19] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´42‚ê§42‚ê§¬ª

[21:19] *** aborazmeh left
[21:19] <sena_kun> but it restricts to you in where you can define your classes

[21:19] <sena_kun> also, that sounds like Scary Bad Practice of global variables.

[21:20] *** Sgeo_ joined
[21:20] <sena_kun> it doesn't matter for a simple script (in my humble opinion), but if you are not ok with that, then

[21:21] <sena_kun> m: role DB { has $.db }; class A does DB { method a { say $.db } }; class B does DB { method b { say $.db } }; my $db = 42; A.new(:$db).a; B.new(:$db).b;

[21:21] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´42‚ê§42‚ê§¬ª

[21:21] <sena_kun> m: role DB { has $.db }; class A does DB { method a { say $!db } }; class B does DB { method b { say $!db } }; my $db = 42; A.new(:$db).a; B.new(:$db).b;

[21:21] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´42‚ê§42‚ê§¬ª

[21:22] <thowe> Well, simple thing is to just pass around an object, but if it is a singleton or something like that you can manage the connection a bit better.

[21:22] *** krychu joined
[21:22] *** aborazmeh joined
[21:22] *** aborazmeh left
[21:22] *** aborazmeh joined
[21:22] <thowe> There's probably other good ways I simply don't know.

[21:23] <sena_kun> m: class DB { has $!db; method get-db { $!db } }; class A is DB { method a { say self.get-db; } }; class B is DB { method b { say self.get-db } }; my $db = 42; A.new(:$db).a; B.new(:$db).b;

[21:23] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§(Any)‚ê§¬ª

[21:23] <sena_kun> hmm, the last one needs a constructor

[21:23] *** Syrup left
[21:23] *** Sgeo left
[21:24] * sena_kun stops procrastinating and goes back to writing

[21:28] <sena_kun> m: class Foo { my $single; method init { $single //= 42 }; method db { $single }  }; say Foo.db; say Foo.init; say Foo.db;

[21:28] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§42‚ê§42‚ê§¬ª

[21:28] <sena_kun> so you can once initialize class DBWrapper (or something) and then just call a method on it.

[21:32] *** aborazmeh left
[21:32] <tony-o> you might want state $single

[21:50] *** sena_kun left
[21:52] <timotimo> m: say <foo bar baz quux> ... "baz"

[21:52] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(foo bar baz)‚ê§¬ª

[21:52] <timotimo> m: say <foo bar baz quux> ...^ "baz"

[21:52] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(foo bar)‚ê§¬ª

[21:52] <timotimo> i love this

[22:07] *** MasterDuke left
[22:17] *** wamba left
[22:32] *** Itaipu_ joined
[22:33] *** Itaipu left
[22:33] *** krychu left
[22:34] *** wamba joined
[22:40] <tony-o> o.O

[23:03] *** wamba left
[23:11] *** mowcat left
[23:57] *** wildtrees left
