[00:00] <wildtrees> tbrowder, maybes #emacs? ;) 

[00:02] <tbrowder> thanks, wasn't aware of that. but p6 emacs users share a special bond. but i'll try there.

[00:03] *** noisegul left
[00:04] <wildtrees> tbrowder, you can type most open source things say #project on freenode and find someone idling there at least 

[00:05] <wildtrees> sometimes they are ##project 

[00:05] <tbrowder> thanks, good to know. #perl6 was my first real irc experience

[00:06] <wildtrees> does Net::HTTP::GET cache page fetches between invocations of perl6? 

[00:06] <tbrowder> although #ffmpeg has recently been a great resource!

[00:08] *** khisanth_ joined
[00:16] <Xliff> DrForr: You can extract the .o files from the .a using "ar -x libname.a" and then relink into an .so using gcc/ld

[00:16] <Xliff> [Coke]: Reproduced, on the VM. I got to 1006

[00:17] *** Manifest0 left
[00:22] *** Manifest0 joined
[00:24] *** wildtrees left
[00:27] *** aborazmeh joined
[00:27] *** aborazmeh left
[00:27] *** aborazmeh joined
[00:32] *** Manifest0 left
[00:37] *** formalin14 joined
[00:38] *** Manifest0 joined
[00:40] *** Cabanossi left
[00:41] *** Cabanossi joined
[00:48] *** redhands left
[00:54] *** formalin14 left
[01:03] *** Manifest0 left
[01:04] *** [Sno] left
[01:04] *** [Sno] joined
[01:06] *** formalin14 joined
[01:09] *** Manifest0 joined
[01:17] *** Manifest0 left
[01:22] *** Manifest0 joined
[01:28] *** mowcat left
[01:32] *** molaf left
[01:33] *** Manifest0 left
[01:36] *** aborazmeh left
[01:37] *** daxim left
[01:38] *** Manifest0 joined
[01:42] *** Manifest0 left
[01:43] *** daxim joined
[01:44] *** molaf joined
[01:45] *** sufrostico left
[01:48] *** Manifest0 joined
[01:55] *** Manifest0 left
[02:00] *** Manifest0 joined
[02:01] *** formalin14 left
[02:02] *** formalin14 joined
[02:04] *** Manifest0 left
[02:04] <cpan-p6> New module released to CPAN! Sparrow6 (0.0.1) by 03MELEZHIK

[02:05] *** Manifest0 joined
[02:06] *** uzl joined
[02:11] *** Manifest0 left
[02:11] <cpan-p6> New module released to CPAN! Sparrow6 (0.0.2) by 03MELEZHIK

[02:17] *** Manifest0 joined
[02:18] <cpan-p6> New module released to CPAN! Tomtit (0.1.0) by 03MELEZHIK

[02:21] *** redhands joined
[02:22] *** irced joined
[02:25] <cpan-p6> New module released to CPAN! Sparrowdo (0.1.0) by 03MELEZHIK

[02:30] <cpan-p6> New module released to CPAN! Sparrowdo (0.1.1) by 03MELEZHIK

[02:31] *** Manifest0 left
[02:36] *** Manifest0 joined
[02:37] *** uzl left
[02:44] *** Manifest0 left
[02:44] *** noisegul joined
[02:49] *** noisegul left
[02:50] *** Manifest0 joined
[03:00] *** Manifest0 left
[03:05] *** Manifest0 joined
[03:13] *** Manifest0 left
[03:20] *** Manifest0 joined
[03:24] *** noisegul joined
[03:24] *** Manifest0 left
[03:29] *** noisegul left
[03:30] <Xliff> m: my \multN = -> \N { N }; my \priceI = -> \I, $n? { I * multN($n) }; 

[03:30] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '&multN' is not declared‚ê§at <tmp>:1‚ê§------> 3\N { N }; my \priceI = -> \I, $n? { I * 7‚èè5multN($n) };‚ê§¬ª

[03:30] <Xliff> m: my $multN = -> $n { $n }; my $priceI = -> $I, $n = 1 { $I * multN($n) }; 

[03:30] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    multN used at line 1‚ê§‚ê§¬ª

[03:30] <Xliff> m: my $multN = -> $n { $n }; my $priceI = -> $I, $n = 1 { $I * $multN($n) }; 

[03:30] <camelia> rakudo-moar 152d3c5b4: ( no output )

[03:31] <Xliff> m: my $multN = -> $n { $n }; my $priceI = -> $I, $n = 1 { $I * $multN($n) }; $priceI(10, 2).say

[03:31] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´20‚ê§¬ª

[03:31] *** Manifest0 joined
[03:31] <Xliff> m: my $multN = -> $n { $n }; my $priceI = -> $I, $n = 1 { $I * $multN($n) }; $priceI(10).say

[03:31] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´10‚ê§¬ª

[03:33] <Xliff> m: my $multN = -> $n { $n }; my $priceI = -> $I, $n = 1 { $I * $multN($n) }; my $priceBeer = -> $n { $priceI(5.99, $n) }; $priceI(10).say, $priceBeer(2).say

[03:33] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´10‚ê§11.98‚ê§¬ª

[03:37] *** molaf left
[03:38] *** Manifest0 left
[03:44] *** Manifest0 joined
[03:48] *** Manifest0 left
[03:54] *** Manifest0 joined
[04:05] *** Manifest0 left
[04:09] *** [Sno] left
[04:11] *** Manifest0 joined
[04:25] *** Manifest0 left
[04:25] *** Black_Ribbon left
[04:31] *** Manifest0 joined
[04:31] *** formalin14 left
[04:32] *** mniip left
[04:43] *** kaare_ left
[04:43] *** kaare_ joined
[04:51] <Xliff> m: say Nil.trim.chars

[04:51] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´Use of Nil in string context‚ê§0‚ê§  in block <unit> at <tmp> line 1‚ê§¬ª

[04:52] <Xliff> m: say Nil.chars

[04:52] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´Use of Nil in string context‚ê§0‚ê§  in block <unit> at <tmp> line 1‚ê§¬ª

[04:52] *** Manifest0 left
[04:52] <Xliff> m: say Any.chars

[04:52] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´No such method 'chars' for invocant of type 'Any'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[04:58] *** Manifest0 joined
[05:02] *** Manifest0 left
[05:07] *** Manifest0 joined
[05:12] *** Manifest0 left
[05:17] *** Manifest0 joined
[05:18] *** thundergnat left
[05:21] *** thundergnat joined
[05:28] *** sauvin joined
[05:29] *** sauvin left
[05:37] *** sauvin joined
[05:39] *** robertle left
[05:44] *** formalin14 joined
[05:44] *** Manifest0 left
[05:47] *** dolmen joined
[05:49] *** Manifest0 joined
[05:52] *** stom joined
[05:57] *** Manifest0 left
[06:04] *** Manifest0 joined
[06:08] *** Manifest0 left
[06:12] *** patrickb joined
[06:15] *** noisegul joined
[06:15] *** Manifest0 joined
[06:16] *** reach_satori_ left
[06:19] *** dolmen left
[06:22] *** ufobat__ joined
[06:24] *** Manifest0 left
[06:26] *** ufobat_ left
[06:28] *** Manifest0 joined
[06:32] *** irced left
[06:37] *** Black_Ribbon joined
[06:39] *** Manifest0 left
[06:44] *** Manifest0 joined
[06:45] *** devz3ro left
[06:51] *** Manifest0 left
[06:51] *** domidumont joined
[06:56] *** Manifest0 joined
[07:18] *** noisegul left
[07:23] *** rindolf joined
[07:26] <cpan-p6> New module released to CPAN! Gnome::Gdk3 (0.14.5) by 03MARTIMM

[07:29] *** reach_satori_ joined
[07:29] *** domidumont1 joined
[07:29] *** bbkr left
[07:31] *** domidumont left
[07:36] *** Manifest0 left
[07:41] *** Manifest0 joined
[07:45] *** Sgeo_ joined
[07:46] *** devz3ro joined
[07:48] *** Sgeo__ left
[07:55] *** rfold joined
[08:00] *** Manifest0 left
[08:01] *** zakharyas joined
[08:03] *** devz3ro left
[08:06] *** Manifest0 joined
[08:09] *** El_Che left
[08:10] *** El_Che joined
[08:18] *** El_Che left
[08:19] *** Manifest0 left
[08:24] *** Manifest0 joined
[08:24] *** El_Che joined
[08:28] *** domidumont1 left
[08:28] *** dolmen joined
[08:28] *** dakkar joined
[08:29] *** scimon joined
[08:31] *** devz3ro joined
[08:33] *** noisegul joined
[08:36] *** dolmen left
[08:38] *** dolmen joined
[08:42] *** aborazmeh joined
[08:42] *** aborazmeh left
[08:42] *** aborazmeh joined
[08:43] *** Manifest0 left
[08:48] *** Manifest0 joined
[08:55] *** patrickb left
[08:59] *** patrickb joined
[09:00] *** [particle] left
[09:00] *** formalin14 left
[09:00] *** [particle] joined
[09:02] *** sftp left
[09:11] *** Manifest0 left
[09:12] *** domidumont joined
[09:17] *** Manifest0 joined
[09:19] *** formalin14 joined
[09:21] *** Manifest0 left
[09:28] *** Manifest0 joined
[09:28] *** Black_Ribbon left
[09:37] *** Manifest0 left
[09:37] *** domidumont1 joined
[09:40] *** domidumont left
[09:44] *** Manifest0 joined
[09:52] *** Manifest0 left
[09:56] *** Manifest0 joined
[10:00] *** redhands left
[10:01] *** Manifest0 left
[10:06] *** Manifest0 joined
[10:10] *** Manifest0 left
[10:17] *** ravenousmoose left
[10:17] *** ravenousmoose joined
[10:19] *** Manifest0 joined
[10:20] *** reach_satori_ left
[10:21] *** sena_kun joined
[10:21] *** formalin14 left
[10:35] *** dolmen left
[10:48] *** aborazmeh left
[10:49] *** Manifest0 left
[10:53] *** Manifest0 joined
[11:08] *** zakharyas left
[11:22] *** reach_satori_ joined
[11:55] *** Manifest0 left
[12:00] *** ravenousmoose left
[12:00] *** ravenousmoose joined
[12:01] *** Manifest0 joined
[12:04] *** mniip joined
[12:09] *** reach_satori_ left
[12:09] *** formalin14 joined
[12:11] *** dolmen joined
[12:12] <[Coke]> thanks for the folks who repeated my results. I'm assuming I am missing something in terms of freeing up those resources.

[12:17] *** Manifest0 left
[12:20] *** vike left
[12:22] *** Manifest0 joined
[12:25] *** mowcat joined
[12:32] *** Manifest0 left
[12:34] *** reach_satori_ joined
[12:35] *** stom1 joined
[12:35] *** stom left
[12:38] *** cwilson left
[12:38] *** xinming_ joined
[12:40] *** zakharyas joined
[12:40] *** stom1 left
[12:40] *** Manifest0 joined
[12:40] *** xinming left
[12:45] *** Manifest0 left
[12:47] *** sftp joined
[12:51] *** Manifest0 joined
[12:54] *** jkramer joined
[12:54] <jkramer> Ahoy!

[12:55] *** pat_js joined
[12:55] <jkramer> Is there a nice way to find out how many elements of two ranges overlap that works with Inf? I was doing something like ((2..5) (&) (3..8)).elems but it doesn't work if one if the ranges is (2..*) for example

[12:56] *** Manifest0 left
[12:59] <cpan-p6> New module released to CPAN! Gnome::GObject (0.13.9) by 03MARTIMM

[13:01] *** Manifest0 joined
[13:02] *** mowcat left
[13:10] *** Manifest0 left
[13:16] *** Manifest0 joined
[13:17] <rfold> p6: my @a := 2 .. 4; my @b := 0 .. Inf; say so any(@a) (elem) @b;

[13:17] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´False‚ê§¬ª

[13:17] <rfold> Interesting, (elem) also doesn't like infinity.

[13:19] <timotimo> would probably have to smartmatch for this purpose?

[13:21] <rfold> p6: my @a := 2 .. 4; my @b := 0 .. Inf; say so any(@a) ~~ @b;

[13:21] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´True‚ê§¬ª

[13:21] <rfold> Doesn't tell you how many elements overlap though.

[13:22] <rfold> And it's presumably linear time.

[13:23] <jkramer> (1..3).grep(2..Inf).Int works but is very slow with big ranges

[13:24] *** patrickb left
[13:26] <jkramer> Hmm

[13:26] <jkramer> m: (1..3).race.grep(2..Inf).elems.say

[13:26] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´A worker in a parallel iteration (hyper or race) initiated here:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died at:‚ê§    Type check failed in binding; expected Callable but got Range (2..Inf)‚ê§‚ê§¬ª

[13:26] <jkramer> Does grep with race not smartmatch?

[13:29] <sena_kun> you need to * ~~ 2..Inf, I suspect

[13:29] <sena_kun> m: (1..3).race.grep(* ~~ 2..Inf).elems.say

[13:29] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´2‚ê§¬ª

[13:30] <timotimo> but i think it should use smartmatch with anything you pass in

[13:30] <timotimo> ideally, it'd behave as closely to regular grep as possible

[13:31] <scimon> Utterly dumb question but as a fan of sloths I need to know how we get new Emoji into the code base. (SLOTH is being added in the next set of Emoji). 

[13:34] <scimon> @jkramer I was working on a module. It's not quite finished Range::SetOps that deal with this kind of thing (1..10) (&) (5..*) gives set(5..10) for instance.

[13:35] <scimon> It's a bit slow because it's jamming a BUNCH of operators into the system and it's not finished yet. But it might do what you need.

[13:35] <scimon> And spur me on to finish it.

[13:35] <scimon> (Note all the ops return Sets or Booleans. But the Sets will be Sets of Ranges.

[13:36] <scimon> And it works for things like (1.5..10.7) (&) (5.3..*)

[13:36] <scimon> (Which was the main use case I wanted to cover. That and DateTime ranges)

[13:37] <[Coke]> scimon: every so often we go through and update against the latest version of unicode. samcv's done like 99.99% of that work.

[13:37] <scimon> :D

[13:37] <samcv> it should probably be easy to update it

[13:38] *** formalin14 left
[13:38] <scimon> (I hadn't tried that code with infinity but it worked, that was cool)

[13:39] <samcv> something i need to do is updated unicode again. been pretty consumed with work. and trying to plan a perl conference (2020)

[13:39] <rfold> p6: .lc.say for 'Œ£' Xx 1 .. 3;

[13:39] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´œÉ‚ê§œÉœÇ‚ê§œÉœÉœÇ‚ê§¬ª

[13:39] *** patrickb joined
[13:40] <scimon> (No worries I was just thinking aloud).

[13:40] <samcv> i have funding and a venue so i'm doing good.. not sure how many other proposals there are going to be. i heard mumblings of some other locations but not sure how far or serious they are

[13:42] *** mowcat joined
[13:45] <[Coke]> samcv: in the eu?

[13:45] <samcv> yeah

[13:46] <samcv> Amsterdam. if you know anyone planning on doing a proposal let me know so i can get in touch with them

[13:48] <[Coke]> I'm pretty out of the loop. :)

[13:48] <[Coke]> Best of luck, though!

[13:53] *** Manifest0 left
[13:56] *** domidumont joined
[13:59] *** domidumont1 left
[13:59] *** Manifest0 joined
[14:02] *** HarmtH left
[14:02] *** Kaiepi left
[14:04] *** Kaiepi joined
[14:04] *** geekosaur joined
[14:10] *** HarmtH joined
[14:10] *** Manifest0 left
[14:10] <rfold> Oh fun, a Perl conference close to home.

[14:15] *** Manifest0 joined
[14:15] *** geekosaur left
[14:18] *** lucasb joined
[14:25] *** pamplemousse joined
[14:31] *** Manifest0 left
[14:32] *** Kaiepi left
[14:33] *** pat_js left
[14:33] *** Kaiepi joined
[14:33] *** pat_js joined
[14:37] *** Manifest0 joined
[14:38] <Xliff> m: .lc.say for 'Œ£' Xx 1 .. 3;

[14:38] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´œÉ‚ê§œÉœÇ‚ê§œÉœÉœÇ‚ê§¬ª

[14:38] <Xliff> m: .lc.say for 'a' Xx 1 .. 3;

[14:38] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´a‚ê§aa‚ê§aaa‚ê§¬ª

[14:39] <Xliff> m: .lc.say for 'a' x 1 .. 3;

[14:39] <camelia> rakudo-moar 152d3c5b4: ( no output )

[14:39] *** Sgeo__ joined
[14:39] <Xliff> m: say 'a' X 1..3

[14:39] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´((a 1) (a 2) (a 3))‚ê§¬ª

[14:39] <Xliff> m: say 'a' Xx 1..3

[14:39] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(a aa aaa)‚ê§¬ª

[14:40] * Xliff headdesks

[14:40] *** pat_js left
[14:40] <Xliff> m: say 'a' zx 1..3

[14:40] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3say 'a'7‚èè5 zx 1..3‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚Ä¶¬ª

[14:40] <Xliff> m: say 'a' Zx 1..3

[14:40] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(a)‚ê§¬ª

[14:40] <Xliff> m: say <a aa aaa> Zx 1..3

[14:40] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(a aaaa aaaaaaaaa)‚ê§¬ª

[14:41] <Xliff> m: say 'Name' Zx 1..3

[14:41] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(Name)‚ê§¬ª

[14:41] <Xliff> m: say 'Name' x 1..3

[14:41] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´"Name"..3‚ê§¬ª

[14:41] <Xliff> m: say 'Name' x ^3

[14:41] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´NameNameName‚ê§¬ª

[14:41] <Xliff> m: say 'Name' Xx ^3

[14:41] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´( Name NameName)‚ê§¬ª

[14:41] <sena_kun> m: say 'Name' xx 3

[14:41] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(Name Name Name)‚ê§¬ª

[14:42] <Xliff> m: say 'Name' ¬ªx¬´ ^3

[14:42] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´Lists on either side of non-dwimmy hyperop of infix:<x> are not of the same length while recursing‚ê§left: 1 elements, right: 3 elements‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:42] <rfold> p6: say ^3 eqv 0 .. 2

[14:42] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´False‚ê§¬ª

[14:42] <Xliff> m: say 'Name' ¬´x¬ª ^3

[14:42] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´( Name NameName)‚ê§¬ª

[14:42] <Xliff> m: say 'Name' ¬´Z~¬ª ^3

[14:42] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´((Name0) (Name1) (Name2))‚ê§¬ª

[14:42] <Xliff> m: say ('Name' ¬´Z~¬ª ^3).flat

[14:42] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(Name0 Name1 Name2)‚ê§¬ª

[14:43] *** Sgeo_ left
[14:43] <Xliff> m: say ('Name' ¬´Z~¬ª 4..^7).flat

[14:43] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(Name4 Name5 Name6)‚ê§¬ª

[14:44] *** sena_kun left
[14:45] <Xliff> m: say ('Name' X~ 4..^7).flat

[14:45] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(Name4 Name5 Name6)‚ê§¬ª

[14:45] <Xliff> m: say ('Name' X~ 4..10).flat

[14:45] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´(Name4 Name5 Name6 Name7 Name8 Name9 Name10)‚ê§¬ª

[14:45] <Xliff> \o/

[14:52] *** Manifest0 left
[14:52] *** cwilson joined
[14:56] *** Ven`` joined
[14:56] <Ven``> o/

[14:57] *** Manifest0 joined
[14:58] *** MilkmanDan left
[14:58] *** nubie joined
[14:59] *** MilkmanDan joined
[15:01] *** cwilson left
[15:02] *** domidumont left
[15:03] *** patrickb left
[15:04] <rfold> Hello Ven``

[15:05] *** [particle] left
[15:05] *** [particle] joined
[15:06] *** molaf joined
[15:10] *** MilkmanDan left
[15:12] *** MilkmanDan joined
[15:13] *** pat_js joined
[15:18] *** Manifest0 left
[15:20] *** Kaiepi left
[15:21] *** Kaiepi joined
[15:23] *** nepugia joined
[15:24] *** Manifest0 joined
[15:28] *** Manifest0 left
[15:29] *** scimon left
[15:34] <rfold> Is there an IDL that can generate Perl 6 code? I wonder how hard it would be to support Perl 6 in protobuf.

[15:34] *** Manifest0 joined
[15:34] <rfold> Probably not very hard.

[15:34] *** Woodi left
[15:34] *** Kaiepi left
[15:35] *** Kaiepi joined
[15:41] <japhb> rfold: There have been attempts in the past to support protobuf (I even helped with one of them).  Multiple options are available, from hand-coding textproto grammars and binary protobuf parsers/emitters in pure Perl 6, to wrapping a library such as https://github.com/protocolbuffers/upb .   Problem is that any way you slice it, it's a lot of fiddly work that requires concentrated time to get done.

[15:42] <rfold> Thanks, might choose something simpler.

[15:42] <rfold> Something homegrown NIH :)

[15:45] <japhb> rfold: Here's the one I helped with before I ran out of spare cycles: https://github.com/samuraisam/p6-pb

[15:45] *** Kaiepi left
[15:45] <japhb> Although huh, looking at the contributors info, I guess I wrote it based on someone else's idea.  :-)

[15:46] *** Kaiepi joined
[15:46] <rfold> Speaking of protobufs I never got it to work.

[15:46] <japhb> It's old enough that it predates 6.c, so there may be a few updates necessary to get it working again.

[15:47] *** pat_js left
[15:49] <Geth> ¬¶ ecosystem: 6f12db8e01 | (Ben Davies)++ (committed using GitHub Web editor) | META.list

[15:49] <Geth> ¬¶ ecosystem: Remove Kaiepi's Failable module

[15:49] <Geth> ¬¶ ecosystem: 

[15:49] <Geth> ¬¶ ecosystem: It's now on CPAN

[15:49] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/6f12db8e01

[15:49] *** rfold left
[15:50] <Kaiepi> Failable's a cool module, you should use it ;)

[15:50] <japhb> What's it do?

[15:50] <Kaiepi> you can do Failable[Str] and create a Failure and Str sum type

[15:50] <Kaiepi> creates Failure sum types

[15:51] <Kaiepi> it's useful for if you have a variable that takes the return value of a function that can fail

[15:51] <japhb> But why?  Failure bypasses type checks.

[15:51] <Kaiepi> m: sub fails(--> Str) { fail 'whoops!' }; my Str $foo = fails

[15:51] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´Earlier failure:‚ê§ (HANDLED) whoops!‚ê§  in sub fails at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Final error:‚ê§ Type check failed in assignment to $foo; expected Str but got Failure (&CORE::infix:<orelse>...)‚ê§  in block <unit> at <tm‚Ä¶¬ª

[15:52] <[Coke]> are cpan modules visible on modules.perl6.org ?

[15:52] <Kaiepi> yep

[15:52] <japhb> Ah, I see.  It bypasses the return value type check, but not the assignment of that return to a typed variable.

[15:52] <Kaiepi> i didn't realize that for a while so my modules were up there twice

[15:52] <[Coke]> I just searched for Failable there, and it seems to be there once, on githbu.

[15:53] <cpan-p6> New module released to CPAN! Failable (0.0.2) by 03KAIEPI

[15:53] <Kaiepi> there it is

[15:54] <[Coke]> ah.

[15:54] <Kaiepi> Failable's small enough to fit in an irc eval i think

[15:55] *** Sgeo__ left
[15:55] *** MilkmanDan left
[15:55] <Kaiepi> m: my class Failable { method ^parameterize(Mu $, Mu:U \T) { Metamodel::SubsetHOW.new_type: name => 'Failable[' ~ T.^name ~ '], refinee => T ~~ Junction ?? Mu !! Any, refinement => Failure | T } }; sub fails(--> Str) { fail 'whoops' }; my Failable[Str] $foo = fails; say $foo.exception.message

[15:55] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3ure | T } }; sub fails(--> Str) { fail '7‚èè5whoops' }; my Failable[Str] $foo = fails‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§   ‚Ä¶¬ª

[15:55] *** Sgeo__ joined
[15:56] <Kaiepi> p6: my class Failable { method ^parameterize(Mu $, Mu:U \T) { Metamodel::SubsetHOW.new_type: name => 'Failable[' ~ T.^name ~ '], refinee => T ~~ Junction ?? Mu !! Any, refinement => Failure | T } }; sub fails(--> Str) { fail 'whoops' }; my Failable[Str] $foo = fails; say $foo.exception.message

[15:56] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3ure | T } }; sub fails(--> Str) { fail '7‚èè5whoops' }; my Failable[Str] $foo = fails‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§   ‚Ä¶¬ª

[15:56] <Kaiepi> m: my class Failable { method ^parameterize(Mu $, Mu:U \T) { Metamodel::SubsetHOW.new_type: name => 'Failable[' ~ T.^name ~ ']', refinee => T ~~ Junction ?? Mu !! Any, refinement => Failure | T } }; sub fails(--> Str) { fail 'whoops' }; my Failable[Str] $foo = fails; say $foo.exception.message

[15:56] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´whoops‚ê§¬ª

[15:57] <Kaiepi> m: my class Failable { method ^parameterize(Mu $, Mu:U \T) { Metamodel::SubsetHOW.new_type: name => 'Failable[' ~ T.^name ~ ']', refinee => T ~~ Junction ?? Mu !! Any, refinement => Failure | T } }; sub doesnt-fail(--> Str} { 'yay!' }; my Failable[Str] $foo = doesnt-fail; say $foo

[15:57] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed return value‚ê§at <tmp>:1‚ê§------> 3Failure | T } }; sub doesnt-fail(--> Str7‚èè5} { 'yay!' }; my Failable[Str] $foo = do‚ê§¬ª

[15:57] <Kaiepi> m: my class Failable { method ^parameterize(Mu $, Mu:U \T) { Metamodel::SubsetHOW.new_type: name => 'Failable[' ~ T.^name ~ ']', refinee => T ~~ Junction ?? Mu !! Any, refinement => Failure | T } }; sub doesnt-fail(--> Str) { 'yay!' }; my Failable[Str] $foo = doesnt-fail; say $foo

[15:57] <camelia> rakudo-moar 152d3c5b4: OUTPUT: ¬´yay!‚ê§¬ª

[15:57] <Kaiepi> and there you have it, Failable

[15:58] *** MilkmanDan joined
[15:58] <Kaiepi> this isn't the full implementation though, the module caches subsets created based off the type passed

[15:59] *** Kaiepi left
[16:02] *** Kaiepi joined
[16:04] *** cpan-p6 left
[16:04] *** cpan-p6 joined
[16:04] *** cpan-p6 left
[16:04] *** cpan-p6 joined
[16:05] *** Sgeo_ joined
[16:07] *** MilkmanDan left
[16:08] *** Sgeo__ left
[16:10] *** MilkmanDan joined
[16:13] *** Kaiepi left
[16:14] *** Kaiepi joined
[16:41] *** Cabanossi left
[16:43] *** Cabanossi joined
[16:50] *** kadavr joined
[16:50] *** rfold joined
[16:52] *** kadavr left
[16:54] *** [Sno] joined
[16:55] *** MilkmanDan left
[16:56] *** nubie left
[16:57] *** Xliff left
[16:57] *** MilkmanDan joined
[16:57] *** kadavr joined
[16:57] *** kadavr left
[16:59] *** kadavr joined
[17:01] *** dakkar left
[17:07] *** MilkmanDan left
[17:09] *** Kaiepi left
[17:10] *** MilkmanDan joined
[17:14] *** molaf left
[17:18] *** Sgeo__ joined
[17:20] *** Manifest0 left
[17:21] *** Sgeo_ left
[17:24] *** Black_Ribbon joined
[17:25] *** Manifest0 joined
[17:28] *** Ven`` left
[17:30] *** pwilk joined
[17:32] *** mniip left
[17:34] *** dolmen left
[17:34] <pwilk> Hello!  new perl6 user here.  I'm working on a grammar to parse a small subset of php (trying to extract logic from an old bloated piece of code) and am running into a bit of a block...is this a reasonable place to ask about that?

[17:35] <Juerd> Yes

[17:36] *** Manifest0 left
[17:37] <pwilk> Uploaded file: https://uploads.kiwiirc.com/files/aaa8bad9ea00dc3635f2e0da1f2baba0/ParseTagInfo.p6

[17:37] <pwilk> so, my problem right now is that my grammar chokes when I've got an if statement nested in another if statement

[17:37] *** lucasb left
[17:40] <Juerd> In what way does it choke?

[17:41] <pwilk> oops, my apologies, that was my last issue.  The current issue is handling equality statements within the if condition.  I single var works fine, but it's not parsing equality

[17:41] *** Manifest0 joined
[17:41] <pwilk> it just gives me nil on the sample input when I parse

[17:42] *** sjm_uk joined
[17:42] <Juerd> In what way does it not parse? :)

[17:42] <timotimo> i would recommend installing the module Grammar::Tracer::Compact and putting "use Grammar::Tracer::Compact" before your grammar

[17:42] <pwilk> it looks like $var == 34 isn't being recognized as a valid expression

[17:43] <timotimo> that ought to give interesting hints, hopefully :)

[17:43] *** veesh joined
[17:43] <pwilk> @timtimo okay, thanks

[17:43] <veesh> my perl6 ackermann function is faster than my perl5 one

[17:43] <veesh> is this cause for celebration?

[17:43] <veesh> it's literally the same code

[17:43] <timotimo> huh, that's odd

[17:44] <timotimo> how big is the difference?

[17:44] <veesh> for a(4,1), about .3 seconds

[17:44] <veesh> my goal for the week is to get a(4,2) to compute

[17:44] <veesh> many up arrows for me

[17:45] <veesh> to be fair, p5 got slowed down because i used bigint

[17:45] <timotimo> ah, hehe.

[17:46] <timotimo> yeah, perl6's bigint is likely faster than perl5's, since we've had much reason to invest time and work into it

[17:47] <veesh> that is one of the selling points

[17:47] <veesh> how do i get non-bigints, by the way?

[17:48] <veesh> this is my first actual foray into p6

[17:48] <timotimo> you'd use "my int $blah" for a 64bit int, or int32 or int16 or int8 or uintblah etc

[17:48] <timotimo> num gives you a double-precision floating point, num32 gives you a single-precision floating point

[17:50] <veesh> so it's lowercase for the non-big version?

[17:50] <timotimo> yes, though "Num" is not something like a "big float"

[17:51] <timotimo> with those you'll get stuff stored compactly as registers (whenever possible), which means an "int" cannot have, for example, roles mixed in; there is no object there to mix a role into

[17:51] <veesh> got it

[17:51] <timotimo> though it will automatically give you a "box" (an Int) when you use a method on it or so

[17:51] <veesh> is there something to do for MAIN when using 'int'? i tried switching the types there and now it won't run

[17:52] <veesh> i meant something special

[17:52] <timotimo> maybe it's just not supported by the default main runner

[17:53] <timotimo> try assigning to a variable inside the MAIN, that should definitely work

[17:55] <veesh> shucks, that kills Memoize

[17:55] <veesh> so lemme implement that myself

[17:55] *** melezhik joined
[17:57] <veesh> i really like the helpful error messages in p6

[17:57] *** Ven`` joined
[17:59] <timotimo> \o/

[18:06] <melezhik> Hi. I've just released the first version of Sparrow6 to CPAN. I wonder if anyone interested in automation with Perl6? I can't t actively use  the project at my job now, so looking for possible involvements , prospects for Sparrow6

[18:09] *** zakharyas left
[18:17] <veesh> nevermind, 4 second difference

[18:17] <veesh> wow, it's not as bad as they say at all

[18:17] <pwilk> got Grammar::Tracer::Compact installed, it's been a huge help, thanks!

[18:19] *** Manifest0 left
[18:20] *** _jrjsmrtn left
[18:20] *** __jrjsmrtn__ joined
[18:21] *** MilkmanDan left
[18:22] *** MilkmanDan joined
[18:25] *** Ven`` left
[18:26] *** pwilk left
[18:26] *** Manifest0 joined
[18:27] *** sauvin left
[18:27] *** MilkmanDan left
[18:29] *** MilkmanDan joined
[18:38] *** MilkmanDan left
[18:41] *** kst left
[18:50] *** MilkmanDan joined
[18:55] *** nepugia left
[19:03] *** MilkmanDan left
[19:10] *** Manifest0 left
[19:12] <Geth> ¬¶ problem-solving: AlexDaniel assigned to jnthn Issue Status of NativeCall is unclear https://github.com/perl6/problem-solving/issues/66

[19:12] <veesh> where's the docs for using 'where' in a function signature?

[19:13] *** MilkmanDan joined
[19:14] <AlexDaniel> veesh: what about https://docs.perl6.org/type/Signature#Type_constraints

[19:14] <AlexDaniel> ‚ÄúIn addition to those nominal types, additional constraints can be placed on parameters in the form of code blocks which must return a true value to pass the type check‚Äù

[19:14] <veesh> just found it now

[19:14] <veesh> thanks

[19:15] *** Manifest0 joined
[19:25] <melezhik> please email/pm me is someone interested in Sparrow6 development/usage. It's  hard to keep it going without real life applications ... Thanks

[19:26] *** redhands joined
[19:30] <ugexe> melezhik: one day i hope to use Sparrow6 in a zef plugin to allow installing native dependencies listed in META6.json file.

[19:40] <melezhik> thanks ugexe I replied privately 

[19:44] *** Manifest0 left
[19:45] *** zakharyas joined
[19:50] *** MasterDuke joined
[19:50] *** Manifest0 joined
[19:55] *** Manifest0 left
[19:56] *** rfold left
[20:01] *** Manifest0 joined
[20:03] *** HarmtH left
[20:03] <Geth> ¬¶ problem-solving: AlexDaniel self-assigned [WIP] Detrapping https://github.com/perl6/problem-solving/issues/67

[20:04] *** kaare_ left
[20:04] *** kaare_ joined
[20:04] *** zakharyas left
[20:06] *** HarmtH joined
[20:07] *** HarmtH left
[20:08] *** HarmtH joined
[20:19] *** Manifest0 left
[20:22] <veesh> ugexe: I can't install Math::Arrow with zef

[20:22] <veesh> i see your name on the ecosystem list

[20:24] *** HarmtH left
[20:24] *** Manifest0 joined
[20:25] *** sjm_uk left
[20:25] *** HarmtH joined
[20:29] <veesh> and now i can't install p6doc

[20:32] *** molaf joined
[20:32] <El_Che> veesh: there was a problem with perl 6 doc that was solved yesterday or the day before here. Check the channel logs

[20:32] <El_Che> I thought it has to do with the zef cache and the zef nuke command was an option

[20:33] <El_Che> something about newer version than what perl doc used but didn't declare correctly

[20:34] *** dolmen joined
[20:34] <veesh> i'm having permission failures, that it's trying to install in root's space, when I save all my stuff in my user

[20:35] *** cwilson joined
[20:36] <El_Che> yes, that was also part of the bug

[20:36] <El_Che> check the logs

[20:37] <El_Che> I remember just vaguely

[20:37] <veesh> kkk, reading now

[20:38] *** cwilson left
[20:40] <veesh> saw the discussion yesterday, nuked and still having the problem

[20:47] *** HarmtH left
[20:49] *** HarmtH joined
[20:52] *** molaf left
[21:00] *** Manifest0 left
[21:06] *** Manifest0 joined
[21:06] *** ayerhart joined
[21:08] *** HarmtH left
[21:09] *** HarmtH joined
[21:11] *** veesh left
[21:17] *** Manifest0 left
[21:19] *** pecastro joined
[21:22] *** Manifest0 joined
[21:23] *** MasterDuke left
[21:24] *** veesh joined
[21:30] *** Manifest0 left
[21:31] *** MasterDuke joined
[21:33] *** dolmen left
[21:35] *** Manifest0 joined
[21:44] <woolfy> Congrats to the Perl 6 community on a new release.  Wow, that list of changes is impressive.

[21:44] <woolfy> Hey, it is not mentioned at all here yet.  So I just copy what I wrote on Facebook in the group Perl 6.

[21:44] *** HarmtH left
[21:44] <woolfy> The first new shiny version of Perl 6 since March: the July version of Rakudo Perl 6, release #131, or Rakudo Perl 6 2019.07.  Beware: this is not yet Rakudo Star!  But I am happy anyway that a new version is available.  Congrats and many thanks for all involved (and they are many!).  And wow, that has been a lot of work.https://github.com/rakudo/rakudo/blob/master/docs/announce/2019.07.md

[21:45] *** dolmen joined
[21:46] *** HarmtH joined
[21:48] <El_Che> it it out?

[21:48] <AlexDaniel> El_Che: yes!

[21:49] <woolfy> Claudio Ramirez: follow the link, come on, you know you want to, just have a look...  :-)

[21:49] <AlexDaniel> woolfy: fwiw we now have this link: https://github.com/rakudo/rakudo/releases/tag/2019.07

[21:49] <AlexDaniel> woolfy: it's a bit better, commits are linked and there are tarballs to download on the same page

[21:50] <El_Che> I'll sping packages then

[21:50] <El_Che> -g

[21:50] <woolfy> AlexDaniel : cool.  Hey, Liz is mentioned second.  Wow.  I will change the thing on Facebook.  Thanks.

[21:51] <AlexDaniel> woolfy: the list is sorted by the amount of commits, I guess vrurg did more :)

[21:52] *** sena_kun joined
[21:52] <woolfy> AlexDaniel : yeah, I understand, and since Liz did a lot of other things the last couple of months, I was a bit surprised that she was still listed on second place. So proud of my lady.

[21:54] <AlexDaniel> woolfy: yes, everyone in the dev team is quite amazing!

[21:54] <El_Che> https://travis-ci.org/nxadm/rakudo-pkg/builds/560205656 <-- if this passes, I'll do a run with uploading of packages to repos

[21:54] <lizmat> weekly: https://github.com/rakudo/rakudo/releases/tag/2019.07

[21:54] <notable6> lizmat, Noted!

[21:55] <AlexDaniel> 52 contributors in that list, btw

[21:56] <AlexDaniel> fwiw that also includes the doc repo

[21:56] <AlexDaniel> and there are a lot more people who are around :)

[21:58] <woolfy> AlexDaniel : I am not a contributor, but I read this same document for every release for many years back, and I am always impressed by the small amount of people (relatively speaking, I mean, because, come on, only 52 people, and they make this?  that is just awesome!) and the immense amount of work.

[21:58] <El_Che> AlexDaniel: https://travis-ci.org/nxadm/rakudo-pkg/jobs/560205661

[21:59] <El_Che> fail is weird, I will restart it (in case is a flopper, but maybe you want to look at it first

[21:59] <El_Che> ah, a new perl 5 dependency it seems

[21:59] <El_Che> Can't locate IPC/Cmd.pm in @INC (@INC contains: /nqp/tools/lib /nqp/3rdparty/nqp-configure/lib /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at /nqp/3rdparty/nqp-configure/lib/NQP/Macros.pm line 88.

[22:01] *** pecastro left
[22:01] <veesh> my first p6 blog post! http://blogs.perl.org/users/veesh/2019/07/up-up-and-away.html

[22:04] <sena_kun> weekly: http://blogs.perl.org/users/veesh/2019/07/up-up-and-away.html

[22:04] <notable6> sena_kun, Noted!

[22:05] <El_Che> veesh: cheers

[22:06] <veesh> thanks

[22:06] <veesh> now i can go to sleep

[22:06] *** veesh left
[22:07] <lizmat> veesh++

[22:07] <lizmat> sleep&

[22:11] <MasterDuke> .tell veesh fyi, you can just put a literal 0 instead of the where expression and it'll be a little bit faster. e.g., `multi sub A( 0, $n ) { $n + 1 }` instead of `multi sub A( $m where 0, $n ) { $n + 1 }`

[22:11] <yoleaux> MasterDuke: I'll pass your message to veesh.

[22:12] *** SCHAPiE left
[22:14] <jnthn> Is it actually faster? I think they compiled into about the same thing :)

[22:14] <jnthn> *thought

[22:15] <El_Che> jnthn: it's typed faster, at least :)

[22:19] *** SCHAPiE joined
[22:20] <jnthn> Well, no argument there :-)

[22:20] <MasterDuke> m: multi sub A( $m where 0, $n ) { $n + 1 }; multi sub A( $m, $n where 0 ) { A($m - 1, 1) }; multi sub A( $m, $n ) { A($m - 1, A($m, $n - 1)) }; say A(3,6); say now - INIT now

[22:20] <camelia> rakudo-moar a7ca396a2: OUTPUT: ¬´509‚ê§4.2021362‚ê§¬ª

[22:20] <MasterDuke> m: multi sub A( 0, $n ) { $n + 1 }; multi sub A( $m, 0 ) { A($m - 1, 1) }; multi sub A( $m, $n ) { A($m - 1, A($m, $n - 1)) }; say A(3,6); say now - INIT now

[22:20] <camelia> rakudo-moar a7ca396a2: OUTPUT: ¬´509‚ê§3.5301671‚ê§¬ª

[22:21] <jnthn> Hm, wow :)

[22:21] <MasterDuke> i get a pretty consistent 0.5s faster locally

[22:21] <jnthn> Sometimes Rakudo is smarter than I think :)

[22:24] <MasterDuke> --target=optimize is different between them. more stuff in the where version

[22:30] *** Manifest0 left
[22:31] *** dolmen left
[22:35] *** Manifest0 joined
[22:38] *** MasterDuke left
[22:55] *** pamplemousse left
[23:01] *** Manifest0 left
[23:01] *** Xliff joined
[23:02] *** rindolf left
[23:03] <Xliff> Was there a release?!?

[23:03] <Xliff> There was a release wasn't there?

[23:03] <Xliff> https://github.com/rakudo/rakudo/releases/tag/2019.07

[23:03] <Xliff> There.... THAT'S a good release!

[23:03] <vrurg> Xliff: good morning, sir! ;)

[23:04] <Xliff> vrurg: \o

[23:04] <Xliff> vrurg: And how are you, sir? 

[23:04] <Xliff> .oO( Weirdo needs food... BADLY! Weirdo == ME! )

[23:04] <vrurg> Xliff: very well, sir! Hope you too, sir! ;)

[23:05] <Xliff> vrurg: Indeed, sir!

[23:06] *** Manifest0 joined
[23:06] <vrurg> And shall only any filthy scum say this is not the most polite community around! :D

[23:07] <Xliff> LOL!

[23:07] <Xliff> vrurg: Did the release wine bottle go around, yet?

[23:08] <Xliff> s/wine/champagne/

[23:08] <vrurg> Xliff: even if it did I wasn't around to get a sip out of it!

[23:16] *** Manifest0 left
[23:18] <Xliff> vrurg: Oh. Me neither. :(

[23:18] <Xliff> This is Rakudo version 2019.07-58-ga7ca396a2 built on MoarVM version 2019.07-9-ge07c0f252

[23:18] <Xliff> implementing Perl 6.d.

[23:18] <Xliff> \o/

[23:18] <Xliff> Now I have to re-precompile all of my modules.

[23:21] <Geth> ¬¶ problem-solving: AlexDaniel unassigned from jnthn Issue There's a huge PR/issue deficit in the Rakudo repo https://github.com/perl6/problem-solving/issues/5

[23:21] <Geth> ¬¶ problem-solving: AlexDaniel self-assigned There's a huge PR/issue deficit in the Rakudo repo https://github.com/perl6/problem-solving/issues/5

[23:21] *** Manifest0 joined
[23:27] *** Sgeo_ joined
[23:29] *** silug left
[23:30] *** Sgeo__ left
[23:35] *** Manifest0 left
[23:40] *** silug joined
[23:40] *** Manifest0 joined
[23:41] *** Cabanossi left
[23:43] *** leah2 left
[23:50] *** Manifest0 left
[23:52] <sena_kun> .tell AlexDaniel re https://github.com/perl6/problem-solving/issues/64 <- you might be interested in efforts about proper licenses in META6.json, there is an interesting ticket https://github.com/perl6/ecosystem/issues/324 that we once tried to resolve in 2017, but then it kind of was abandoned. I also think this might be a nice and simple thing for an automated script or a squashathon.

[23:52] <yoleaux> sena_kun: I'll pass your message to AlexDaniel.

[23:52] <AlexDaniel> .

[23:52] <yoleaux> 23:52Z <sena_kun> AlexDaniel: re https://github.com/perl6/problem-solving/issues/64 <- you might be interested in efforts about proper licenses in META6.json, there is an interesting ticket https://github.com/perl6/ecosystem/issues/324 that we once tried to resolve in 2017, but then it kind of was abandoned. I also think this might be a nice and simple thing for an automated script or a squashathon.

[23:52] * sena_kun runs away

[23:54] <AlexDaniel> sena_kun: thanks! Yeah, added it to the list

[23:54] <sena_kun> AlexDaniel, also, how are you doing?

[23:55] *** Cabanossi joined
[23:55] *** Manifest0 joined
