[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:32] *** nepugia left
[00:33] <pilne> perl6 really does have a lot of things going for it as a language for making compilers....

[00:44] *** sena_kun left
[00:53] *** aborazmeh left
[01:13] <irced> hey all i have a class that needs to refer to a type that is a subclass of itself, however, if I declare/define the subclass before the class or after the class I get an error. is there a way to do like a forward declaration so the parser knows to create the symbol table first ?

[01:15] <tobs> irced: "forward declarations" in indexed on docs.perl6.org

[01:15] <irced> tobs: doh!

[01:16] <irced> tobs: thanks i see it now

[01:18] <irced> tobs: ok, that's what i needed, although there was still an ordering property that's no big deal!

[01:21] *** ayerhart joined
[01:26] *** gdonald left
[01:26] *** ayerhart left
[01:31] *** gdonald joined
[01:39] *** ayerhart joined
[01:50] *** ayerhart left
[01:51] *** noisegul_ joined
[01:54] *** noisegul left
[02:05] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:11] *** Sgeo left
[02:23] *** pamplemousse left
[02:23] *** pamplemousse joined
[02:49] *** aborazmeh joined
[02:49] *** aborazmeh left
[02:49] *** aborazmeh joined
[02:50] *** Sgeo joined
[02:53] *** khisanth_ left
[03:07] *** khisanth_ joined
[03:16] *** molaf joined
[03:26] *** molaf left
[03:35] *** aborazmeh left
[03:49] *** kaare_ joined
[03:49] *** kaare__ left
[04:02] *** curan joined
[04:12] *** irced left
[04:23] *** Sgeo left
[04:46] *** pamplemousse left
[04:53] *** Sgeo joined
[05:25] *** sauvin joined
[05:29] *** robertle left
[05:39] *** noisegul_ is now known as noisegul

[05:40] *** sftp joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:04] *** cpan-p6 left
[06:04] *** cpan-p6 joined
[06:04] *** cpan-p6 left
[06:04] *** cpan-p6 joined
[06:17] *** eythian joined
[06:56] *** robertle joined
[06:59] *** marcel_ joined
[07:15] *** Cabanoss- left
[07:29] *** Cabanossi joined
[07:32] *** dudz left
[07:35] *** chloekek joined
[07:37] <chloekek> p6: say (('a', 'a',), ('b', 'c',), ('d', 'e'), ('f', 'f')).grep(&[ne] o [o])

[07:37] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «((b c) (d e))␤»

[07:38] <chloekek> Remove pairs where the elements are the same. :') o [o] is a neat trick.

[07:39] <chloekek> &f o [o] is like f, but it slips the argument you give it into f.

[07:40] <chloekek> That's what the first infix:<o> does if the RHS returns a list. And [o] is the identity function.

[07:41] <chloekek> err, if the LHS takes more than one argument*

[07:42] <chloekek> Perhaps &[ne] o |* is less questionable.

[07:46] <chloekek> p6: say (('a', 'a',), ('b', 'c',), ('d', 'e'), ('f', 'f')).grep(&infix:<ne> o |*)

[07:46] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «((b c) (d e))␤»

[07:50] *** ravenousmoose_ joined
[07:53] *** ravenousmoose left
[07:59] *** zakharyas joined
[08:06] *** squashable6 left
[08:10] *** squashable6 joined
[08:11] *** dolmen joined
[08:14] <squashable6> Webhook for perl6/doc is now active! Half measures are as bad as nothing at all.

[08:14] <AlexDaniel> squashable6: status

[08:14] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 2 days and ≈3 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:14] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/b74c9a720b3b95b02e8ac4548cb3a884

[08:16] *** reach_satori left
[08:17] <chloekek> Ah repositories finally make sense to me.

[08:48] *** reach_satori joined
[08:50] *** marcel_ left
[08:51] *** rindolf joined
[08:52] *** reach_satori_ joined
[08:55] *** reach_satori left
[09:00] *** reach_satori_ left
[09:18] *** scimon joined
[09:28] *** aborazmeh joined
[09:28] *** aborazmeh left
[09:28] *** aborazmeh joined
[09:30] *** pat_js joined
[09:32] *** ravenousmoose_ left
[09:32] *** ravenousmoose_ joined
[09:36] *** [particle] joined
[09:37] *** [particle]1 left
[09:39] *** [particle]1 joined
[09:41] *** [particle] left
[09:41] *** pilne left
[09:45] *** [particle]1 left
[09:48] *** ravenousmoose_ left
[09:49] *** [particle] joined
[09:56] *** Black_Ribbon left
[10:00] *** reach_satori_ joined
[10:09] *** [particle]1 joined
[10:11] *** aborazmeh left
[10:11] *** [particle] left
[10:12] *** satori__ joined
[10:14] *** reach_satori_ left
[10:18] *** curan left
[10:24] *** marcel_ joined
[10:28] *** ufobat_ joined
[10:31] *** pat_js left
[10:31] *** ravenousmoose_ joined
[10:32] *** ufobat left
[10:35] *** dolmen left
[10:36] *** ravenousmoose_ left
[10:37] *** ravenousmoose_ joined
[10:38] *** go|dfish left
[10:38] *** pat_js joined
[10:44] *** gregf_ joined
[10:49] <SmokeMachine> m: say S:g[^ (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given 1234567890

[10:49] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1,234,567,890␤»

[10:50] <SmokeMachine> m: say S:g[^ (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given 123456

[10:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «123,456␤»

[10:50] <SmokeMachine> m: say S:g[^ (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given 12345678

[10:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «12,345,678␤»

[10:55] *** gregf_ left
[11:01] <SmokeMachine> m: my $a = "1234567890"; my $index = (3, 6, 9 ... * < $a.chars).all; $a.substr($a.chars - $index, 0) = ","; say $a

[11:01] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Cannot modify an immutable Str ()␤  in block <unit> at <tmp> line 1␤␤»

[11:04] <SmokeMachine> 12:01 <SmokeMachine> m: my $a = "1234567890"; my $index = (3, 6, 9 ... * > $a.chars).all; $a.substr($a.chars - $index, 0) = ","; say $a

[11:10] *** [particle]1 left
[11:11] *** pat_js left
[11:17] *** zakharyas left
[11:19] *** [particle] joined
[11:19] *** satori__ left
[11:19] *** satori__ joined
[11:26] *** satori__ left
[11:27] *** reach_satori joined
[11:32] *** mowcat joined
[11:34] *** ravenousmoose joined
[11:36] *** ravenousmoose_ left
[11:50] *** dolmen joined
[11:52] *** mowcat left
[11:56] <SmokeMachine> m: my $a = "1234567890"; my $index = (3, 6, 9 ... * < $a.chars).all; $a.substr-rw($a.chars - $index, 0) = ","; say $a; # what am I doing wrong?

[11:56] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Cannot modify an immutable Str ()␤  in block <unit> at <tmp> line 1␤␤»

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:10] <El_Che> hi, thx everyone for the new releases!

[12:12] *** angelds joined
[12:21] <squashable6> 🍕 threadless-screw++ synchronize pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927

[12:21] <squashable6> 🍕🍕🍕  First contribution by threadless-screw++! ♥

[12:23] *** reach_satori left
[12:25] *** angelds left
[12:26] *** robertle left
[12:28] *** robertle joined
[12:31] *** thundergnat joined
[12:32] <thundergnat> m: my $a = "1234567890"; my $index = (3, 7, 11 ... * > $a.chars); $index.map: { $a.substr-rw($a.chars - $_, 0) = "," }; say $a; # SmokeMachine maybe?

[12:32] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1,234,567,890␤»

[12:32] <thundergnat> Awfully fragile though.

[12:34] <SmokeMachine> thundergnat: but why it doesn't work with junctions?

[12:35] <SmokeMachine> m: my $a = "1234567890"; $a.substr-rw(1&3&5, 0) = "!"; say $a

[12:35] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Cannot modify an immutable Str ()␤  in block <unit> at <tmp> line 1␤␤»

[12:35] <tobs> m: my $a = "1234567890"; my $index = (3, 6, 9 ... * < $a.chars).all; $a.substr-rw($a.chars - $index, 1) = ","; say $a;

[12:35] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Cannot modify an immutable Str (8)␤  in block <unit> at <tmp> line 1␤␤»

[12:35] <thundergnat> <shrug> Probably because substr-rw doesn't know how to handle them.

[12:37] <tobs> m: all(my $a, my $b) = 1; dd $a, $b

[12:37] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Cannot modify an immutable 'Any' type object␤  in block <unit> at <tmp> line 1␤␤»

[12:39] <thundergnat> m: say &substr-rw.signature;

[12:39] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «($, $?, $?, *%)␤»

[12:39] <chloekek> p6: say S:g/ (\d ** 0..3) <?before [\d ** 3]+ $> /$0,/ given '123456789';

[12:39] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «123,456,,789␤»

[12:39] <SmokeMachine> m: say &substr-rw.signature.params.head.^name

[12:39] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Parameter␤»

[12:39] <SmokeMachine> m: say &substr-rw.signature.params.head.type.^name

[12:39] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Any␤»

[12:39] *** ravenousmoose left
[12:40] <SmokeMachine> say S:g[^ (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given 1234567890

[12:40] <evalable6> SmokeMachine, rakudo-moar 971d4bf63: OUTPUT: «1,234,567,890␤»

[12:40] *** reach_satori joined
[12:40] *** xinming joined
[12:40] <SmokeMachine> m: say S:g[^ (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given 1234567890

[12:40] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1,234,567,890␤»

[12:41] *** molaf joined
[12:41] *** molaf left
[12:42] <thundergnat> yeah but...

[12:42] <thundergnat> m: say S:g[^ (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given -1234567890

[12:42] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «-1234567890␤»

[12:42] <thundergnat> oops

[12:42] <chloekek> m: say S:g[^ '-'? (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given 1234567890

[12:42] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1,234,567,890␤»

[12:42] <chloekek> m: say S:g[^ '-'? (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given -1234567890

[12:42] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1,234,567,890␤»

[12:43] <SmokeMachine> m: say S:g[^ ["-"|"+"]? (\d ** 1..3) (\d ** 3)+ $] = "$0,$1.join(",")" given -1234567890

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1,234,567,890␤»

[12:43] *** xinming_ left
[12:43] <SmokeMachine> m: say S:g[^ ("-"|"+")? (\d ** 1..3) (\d ** 3)+ $] = "$0$1,$2.join(",")" given -1234567890

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «-1,234,567,890␤»

[12:44] <squashable6> 🍕 rba++ opened issue “deployment of docs.perl6.org”: https://github.com/perl6/doc/issues/2929

[12:44] <Geth> ¦ doc: rba assigned to JJ Issue deployment of docs.perl6.org https://github.com/perl6/doc/issues/2929

[12:44] <squashable6> 🍕🍕🍕  First contribution by rba++! ♥

[12:44] <Geth> ¦ doc: rba assigned to antoniogamiz Issue deployment of docs.perl6.org https://github.com/perl6/doc/issues/2929

[12:44] <squashable6> 🍕 rba++ labeled issue “deployment of docs.perl6.org” (site): https://github.com/perl6/doc/issues/2929

[12:44] <squashable6> 🍕 rba++ labeled issue “deployment of docs.perl6.org” (build): https://github.com/perl6/doc/issues/2929

[12:44] <SmokeMachine> m: say S:g[^ ("-"|"+")? (\d ** 1..3) (\d ** 3)+ ("." \d+)$] = "$0$1,$2.join(",")$3" given -1234567890.12345

[12:44] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «-1,234,567,890.12345␤»

[12:45] *** pamplemousse joined
[12:48] <tobs> SmokeMachine: It doesn't feel like something Junctions are made for. They're this opaque superposition of values that you can manipulate as a whole, but you can't get a hold of the eigenstates to assign to them. Besides, one could probably settle on semantics for assignment to one(), any(), none() junction types, but that would be too funky imho.

[12:49] <thundergnat> Or, you could use something like Lingua::EN::Number comma() which avoids going through the regex engine. # shameless plug 

[12:49] <SmokeMachine> tobs: but I'm not setting to a junction...

[12:50] <tobs> m: dd "abc".substr-rw(all(1,2),0)

[12:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «all("", "")␤»

[12:50] <tobs> SmokeMachine: you are, junctions carry through operations.

[12:50] *** thundergnat left
[12:51] *** telex left
[12:51] <SmokeMachine> tobs: I would not if it were a `substr-rw(Junction, $)`candidate...

[12:52] *** reach_satori left
[12:52] *** telex joined
[12:52] *** pmurias joined
[12:53] <pmurias> timotimo: the gtk shooter repo is meant to evolve into a game?

[12:56] <SmokeMachine> tobs: I was trying to create a function to do that... I think you are right... thanks!

[13:00] <timotimo> pmurias: it hopefully will

[13:00] <SmokeMachine> m: say "blablabla".substr-eq: 0 & 3 & 6, "bla" # tobs: this this should work...

[13:00] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Cannot resolve caller substr-eq(Str:D: Int:D, Str:D); none of these signatures match:␤    (Str:D: Cool:D $needle, *%_ --> Bool)␤    (Str:D: Str:D $needle, *%_ --> Bool)␤    (Str:D: Cool:D $needle, Int:D $pos, *%_ --> Bool)␤    (Str:D: Str:D $n…»

[13:04] *** vrurg joined
[13:04] <SmokeMachine> wrong parameters...

[13:05] <SmokeMachine> m: say "blablabla".substr-eq: "bla", 0 & 3 & 6 #it works...

[13:05] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «all(True, True, True)␤»

[13:11] *** pamplemousse left
[13:11] *** pamplemousse joined
[13:11] *** zakharyas joined
[13:17] <pmurias> timotimo: I'm not sure if rakudo.js will be fast for a realtime game :/

[13:18] <timotimo> it tends to be a little slow, doesn't it? :(

[13:18] <timotimo> smartest would of course be to marry rakudo and gdnative for godot

[13:19] <timotimo> at least clutter offers a scene graph, so instead of doing some kind of dance to get textures in place, and then render it, and maybe do stuff like offscreen culling

[13:20] *** ravenousmoose joined
[13:20] <timotimo> you can literally just set the x and y coordinates, and optionally rotation and scaling and all that. and it can even do tweening of attributes for you

[13:21] <pmurias> timotimo: I haven't really benchmarked rakudo.js much

[13:22] <timotimo> does putting "async" on literally every function make stuff slower than not doing that?

[13:23] <pmurias> timotimo: yes

[13:23] <timotimo> d'oh

[13:23] <timotimo> do we have *any* functions that don't call other functions where we know that we can drop the "async" safely?

[13:23] <timotimo> barely, right?

[13:23] *** lichtkind joined
[13:26] <pmurias> timotimo: I guess the emitted code could be a lot better with a bit of static analysis

[13:28] <pmurias> I haven't touched rakudo.js in a bit, just recently got back to thinking about it

[13:28] *** dolmen left
[13:28] *** pat_js joined
[13:30] <pmurias> timotimo: the current focus is to have a cool tutorial for it and as currently planned it will include drawing your spaceship on a canvas

[13:30] *** dolmen joined
[13:30] <timotimo> ha

[13:31] *** atweiden-air joined
[13:31] *** marcel_ left
[13:31] <chloekek> Where should I look if I want to make custom syntax that acts similar to sub? E.g. "bloop foo($x, Str $y) { ... }", custom keyword "bloop"

[13:31] <atweiden-air> regression in rakudo installation is still present in 2019.07.01 for users who install with --libdir=/usr/lib

[13:31] <atweiden-air> "Unhandled exception: While looking for '/usr/share/perl6/runtime/perl6.moarvm': no such file or directory"

[13:31] <atweiden-air> fixed with ln -rs /usr/lib/perl6 /usr/share/perl6

[13:31] <chloekek> Do I need to make a slang for that?

[13:32] <timotimo> i think to have something like "sub" you will need a slang

[13:32] <timotimo> stuff like "class" and "grammar" are easier to make custom stuff for

[13:34] <chloekek> More specifically I want to turn template foo($x, $y) { <h1>hello <%= $x + $y %></h1> } into sub foo($x, $y) { lazy gather { take " <h1>hello "; take(do { $x + $y }); take "</h1> " } } I already got parsing and compilation of the stuff within the curly braces working. :)

[13:34] <chloekek> Thanks I'll look into patching the Perl 6 grammar with slangs.

[13:35] *** reach_satori joined
[13:35] *** cpage left
[13:37] * atweiden-air thinks it's because a huge chunk of libdir code was removed from rakudo/Configure.pl

[13:38] <chloekek> Oh actually, I think sub foo($x, $y) { template { ... } } would be even nicer since you can do extra stuff around it easily.

[13:42] *** atweiden-air left
[13:43] *** pmurias left
[13:44] <squashable6> 🍕 coke++ wrote a comment on “build broken (OS X)”: https://github.com/perl6/doc/issues/2926#issuecomment-517706018

[13:44] <squashable6> 🍕🍕🍕  First contribution by coke++! ♥

[13:44] *** pmurias joined
[13:45] *** sena_kun joined
[13:45] <sena_kun> bisectable6, help

[13:45] <bisectable6> sena_kun, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Bisectable

[13:45] <sena_kun> bisectable6, enum Norse-gods <Þor Oðin Freija>;

[13:45] <bisectable6> sena_kun, On both starting points (old=2015.12 new=971d4bf) the exit code is 0 and the output is identical as well

[13:45] <bisectable6> sena_kun, Output on both points: «»

[13:59] *** lucasb joined
[14:16] *** tmtvl joined
[14:25] *** pmurias left
[14:30] *** pat_js left
[14:52] *** wahnburger joined
[14:54] <wahnburger> hello!  I am trying the Cro sesssion management shown here: 

[14:54] <wahnburger> https://cro.services/docs/http-auth-and-sessions#Web_form_based_login

[14:55] <wahnburger> When i am trying to run the code Ill get an "Could not find symbol '&InMemory'" .. does anyone can help me with a hint?

[14:56] *** mowcat joined
[14:56] <wahnburger> oh damn..shame on me ... i missed to add the lib with use :/

[14:57] <wahnburger> sorry for the noise :D

[15:05] *** pat_js joined
[15:12] *** atweiden-air joined
[15:17] *** scimon left
[15:25] *** AlexDaniel is now known as testable9291

[15:26] *** wahnburger left
[15:27] <atweiden-air> is patzim on here?

[15:27] *** testable9291 is now known as AlexDaniel

[15:29] *** marcel_ joined
[15:34] *** robertle left
[15:35] *** dolmen left
[15:36] <El_Che> ugexe: I see the tag for the new zef release is without a 'v' (v0.7.3 --> 0.7.4). Is this the new format you use or a one-off?

[15:43] *** zakharyas left
[15:46] *** netrino joined
[15:52] *** pat_js left
[16:03] *** mowcat left
[16:14] <rba> modules.perl6.org is running on the server from nine. let me know if there are any issues.

[16:15] <timotimo> cool

[16:15] <rba> timotimo: Did you ever see "iCCP: known incorrect sRGB profile", btw?

[16:16] <timotimo> yeah, that could be optipng or pngcrush output

[16:17] *** atweiden-air left
[16:18] <rba> Found exaclty one file, which has tis "wanring", yet Imager::File::PNG thought it's an error.

[16:18] <rba> "warning"

[16:25] <ugexe> El_Che: i guess i just forgot the v

[16:26] <ugexe> just added the v

[16:26] <El_Che> ok, thx (just pinning the zef release when a pkg is built, more reporducible)

[16:29] *** agentzh joined
[16:29] *** agentzh left
[16:29] *** agentzh joined
[16:30] *** chloekek left
[16:31] *** netrino left
[16:42] *** pamplemousse_ joined
[16:44] *** pamplemousse left
[16:57] *** sena_kun left
[16:57] *** sena_kun joined
[16:58] <sena_kun> bisectable6, old=2018.06 new=head my $i = 0; loop { $_ = $i; last if $i++ == 5; when Int { .say } }

[16:58] <bisectable6> sena_kun, Cannot find revision “head” (did you mean “Bend”?)

[16:59] <sena_kun> bisectable6, old=2018.06 new=HEAD my $i = 0; loop { $_ = $i; last if $i++ == 5; when Int { .say } }

[16:59] <bisectable6> sena_kun, Bisecting by output (old=2018.06 new=bc45af3) because on both starting points the exit code is 0

[16:59] <bisectable6> sena_kun, bisect log: https://gist.github.com/b7031c93698002bebdd969e149e20369

[16:59] <bisectable6> sena_kun, (2019-01-07) https://github.com/rakudo/rakudo/commit/541a4f1628e4e156f6eefc547938746f7b736104

[16:59] *** mst joined
[17:00] <sena_kun> I wonder if it should print just 0 or 0,1,2,3,4.

[17:01] *** mowcat joined
[17:07] <timotimo> ah, that might depend on how succeed/proceed identify the "topicalizing block"

[17:07] <timotimo> the loop statement there doesn't really topicalize there, right?

[17:07] <timotimo> since you're just assigning $_ manually

[17:08] <sena_kun> I guess

[17:08] <sena_kun> it's a golf of the code that caused Cro leak, I think

[17:09] <timotimo> oh, interesting

[17:10] <sena_kun> I also see...

[17:11] <sena_kun> https://github.com/croservices/cro-websocket/commit/c3d3ce8d0db805782ebdca99d485fdf64346b418 so looks like it was a bug and current thing is correct

[17:11] <timotimo> aha

[17:14] *** nepugia joined
[17:16] *** dolmen joined
[17:17] <El_Che> If I want to be a relocatable rakudo, I gues I need to build moarvm with --relocatable and --static?

[17:17] <El_Che> I remember vaguely something weird about --static

[17:17] <vrurg> El_Che: just relocatable should be enough, AFAIR

[17:18] <El_Che> the idea is to build it on the oldest supported linux distro available and run it everywhere, hence static sound right to me

[17:18] <El_Che> but maybe static means something completely different

[17:18] <El_Che> (reading the Configure.pl)

[17:20] <El_Che> "Build MoarVM as a static library instead of a shared one.

[17:20] <El_Che> "

[17:20] <El_Che> mm

[17:21] <El_Che> I assume Rakudo needs a shared moarvm lib

[17:21] <squashable6> 🍕 JJ++ wrote a comment on “deployment of docs.perl6.org”: https://github.com/perl6/doc/issues/2929#issuecomment-517781101

[17:21] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[17:22] <vrurg> El_Che: Actually, you should be able to carry the .so around together with the binary. 

[17:22] <vrurg> Though there're compatibility questions.

[17:23] <vrurg> But in either case rakudo doesn't have support for static libmoar. Nor that I can see any.

[17:25] *** atweiden-air joined
[17:25] *** dolmen left
[17:26] *** sena_kun left
[17:28] *** dolmen joined
[17:30] *** chloekek joined
[17:34] *** kylese joined
[17:36] *** tmtvl left
[17:40] *** dolmen left
[17:41] *** marmor joined
[17:43] *** atweiden-air left
[17:44] *** marmor left
[17:50] *** marmor joined
[17:50] *** marmor left
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:00] *** ChanServ sets mode: +v reportable6

[18:03] *** Black_Ribbon joined
[18:04] *** sauvin left
[18:14] *** Black_Ribbon left
[18:15] *** Black_Ribbon joined
[18:15] *** khisanth_ left
[18:29] *** khisanth_ joined
[18:31] *** mowcat left
[18:57] *** molaf joined
[19:17] *** robertle joined
[19:24] *** marcel_ left
[19:35] <chloekek> Welp, I'm going to install all modules.

[19:41] <ugexe> even Module::Uninstallable??

[19:44] <vrurg> ugexe: what if installation succeeds?

[19:45] <ugexe> then it should be renamed to Module::Installable

[19:46] <timotimo> InstallMeIDareYou

[19:47] <ugexe> one of these days someone will slip a `rm -rf ...` into a module without anyone noticing. thats when we know we're moving up to the big leagues 

[19:47] <timotimo> it's bound to happen and we're basically completely unprepared

[19:48] <ugexe> theres not much one can do but audit code before running it

[19:48] <timotimo> ugh, that's the worst

[19:48] <ugexe> if its code i wrote then you are ok. but everyone else you should make sure

[19:49] <timotimo> haha

[20:02] *** nepugia left
[20:02] <chloekek> New favorite line to put between reports: put ｢✂ ｣ ~ ｢- ｣ x 39;

[20:03] <chloekek> ugexe: if installation fails then it's skipped.

[20:03] <timotimo> hah

[20:07] <AlexDaniel> chloekek: are you reimplementing Blin? :)

[20:07] <chloekek> What is Blin?

[20:07] <AlexDaniel> chloekek: https://github.com/perl6/Blin

[20:08] <chloekek> Nope, I'm gathering metadata for all distributions and rendering POD for all comp units.

[20:09] <chloekek> And also integrating it with Nix, but that's mostly working now.

[20:12] <chloekek> But I need more sandboxing, parallelism, and a beefier machine.

[20:12] *** lichtkind left
[20:16] <AlexDaniel> Blin does install modules in parallel

[20:17] <AlexDaniel> but maybe it's something zef should learn (if it doesn't already?)

[20:17] <ugexe> zef used to install modules in parallel like 6 years ago

[20:18] <chloekek> I now also install them in parallel; all I had to do was s/for/hyper for/.

[20:18] <ugexe> installation itself is single threaded

[20:18] <ugexe> inside of rakudo

[20:19] <ugexe> parallelizing helps when fetching and testing

[20:21] <AlexDaniel> chloekek: IIRC this doesn't work that great when you're installing multiple modules that have same dependencies, especially when doing that with many cores

[20:21] *** adu left
[20:22] <ugexe> yeah, and its unlikely reproducible

[20:22] <ugexe> at least using a naive solution

[20:22] <AlexDaniel> it'll somewhat work though

[20:22] <ugexe> for something like Blin its fine

[20:22] <ugexe> you can just rerun it

[20:22] <ugexe> but on some production system that isn't going to be welcomed

[20:23] <AlexDaniel> Blin installs modules in the right dependency order

[20:23] <ugexe> does it do testing with one module while installing another?

[20:24] <chloekek> AlexDaniel: Nix takes care of ensuring consistent output, the only issue is that the parallelism isn't optimal because of locking.

[20:24] <chloekek> If A depends on B, and you build B and A in parallel, A will wait for B to be built. But you could've been building something else on that thread, e.g. C.

[20:25] <ugexe> even if two modules do not depend on each other installing a module while code is running can go wrong

[20:26] <chloekek> Each module is installed to a separate directory and the installation happens in a chroot and user and network namespace.

[20:26] <AlexDaniel> ugexe: well… if every module is installed into a different --to, is there any issue?

[20:27] <ugexe> AlexDaniel: it depends. what happens is installing a new module *or* adding a new repo to "INC" will change the repo id

[20:27] <timotimo> "rr record" can record whole trees of processes fwiw :D

[20:27] <timotimo> at least i think it can

[20:27] <ugexe> so depending on how or when you are adding those directories to PERL6LIB it might be ok

[20:28] <chloekek> For each executable Perl 6 script a Bash script is generated that first sets PERL6LIB and then execs Rakudo with the executable. PERL6LIB is the concatenation of all transitive dependencies in some arbitrary order.

[20:29] *** asdgasg joined
[20:29] <chloekek> It also contains duplicates if there's diamond dependencies, need to fix that :D

[20:29] <AlexDaniel> chloekek: yeah, sounds like Blin :)

[20:29] *** asdgasg left
[20:29] <ugexe> what if the module name contains... unicode?

[20:29] <ugexe> still waiting on some asshole to flex that feature

[20:30] <chloekek> You mean Acme::ಠ_ಠ?

[20:30] * ugexe checks to make sure he isn't the asshole

[20:30] <chloekek> Seems to work just fine.

[20:31] <AlexDaniel> fwiw there's also module `../Foo` :)

[20:31] <AlexDaniel> maybe not that critical in this case but still fun

[20:31] <ugexe> thats not a legal identifier

[20:32] <AlexDaniel> so?

[20:32] <AlexDaniel> it even has tests that pass, if I'm not mistaken: https://github.com/AlexDaniel/foo-dotdotslash/blob/master/t/basic.t

[20:32] <chloekek> That'll fail to build with my tooling since Nix derivations can't contain solidi in their names. :)

[20:33] <AlexDaniel> ===> Testing: ../Foo ===> Testing [OK] for ../Foo ===> Installing: ../Foo

[20:33] <AlexDaniel> zef is happy to install it :)

[20:33] <ugexe> zef treats anything starting with a `.` as a local path

[20:34] <ugexe> $ zef install "../Foo"

[20:34] <ugexe> The following were recognized as file paths but don't exist as such - ../Foo

[20:35] <AlexDaniel> yeah, I did ‘zef install .’ in the repo

[20:36] *** kylese left
[20:38] *** adu joined
[20:41] <ugexe> too bad you cant `zef uninstall .` >:)

[20:42] <AlexDaniel> you can uninstall it just fine

[20:42] <AlexDaniel> `zef uninstall ../Foo` works

[20:42] <squashable6> 🍕 JJ++ edited a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-269432204

[20:42] <squashable6> 🍕 JJ++ submitted a review on pull request “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#pullrequestreview-269432204

[20:42] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309551271

[20:42] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309551360

[20:42] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309551946

[20:42] <ugexe> i guess since you cant install paths its ok to treat it like a name

[20:42] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310290741

[20:42] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r310290995

[20:42] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309554266

[20:43] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309551833

[20:43] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309554659

[20:43] <AlexDaniel> omg

[20:43] <squashable6> 🍕 JJ++ wrote a comment on a review for “Rewrite of regex interpolation section”: https://github.com/perl6/doc/pull/2927#discussion_r309555077

[20:43] <ugexe> cant *uninstall* paths rather

[20:43] <squashable6> 🍕 uzluisf++ wrote a comment on “Proofread documentation …”: https://github.com/perl6/doc/issues/2924#issuecomment-517838557

[20:43] <squashable6> 🍕🍕🍕  First contribution by uzluisf++! ♥

[20:44] <AlexDaniel> yay, finally some actual contributions :)

[20:55] *** cpan-p6 left
[20:56] *** cpan-p6 joined
[20:56] *** cpan-p6 left
[20:56] *** cpan-p6 joined
[20:59] *** dolmen joined
[21:01] *** uzl joined
[21:04] <uzl> In the documentation (pod files), code samples are created by using either indentation or the code directives. Is there any preference for one of them?

[21:04] <timotimo> only with the code directives can you put configuration options

[21:05] <AlexDaniel> uzl: I think indentation goes through to the html output which is not that nice

[21:06] <AlexDaniel> uzl: if you're looking at some specific example, check if there's unnecessary indentation in the rendered version

[21:07] <uzl> So would it be find to replace indentation with the code directives? Personally I prefer code directives.

[21:07] <uzl> AlexDaniel: I'll be in the lookout for it. 

[21:08] <AlexDaniel> yeah, that'd be an improvement

[21:09] *** lucasb left
[21:17] *** chloekek left
[21:28] *** MasterDuke joined
[21:29] <MasterDuke> just noticed that (at least) one of damian's articles about the perl weekly challenge was posted on lwn.net, https://lwn.net/Articles/793441/

[21:33] *** pamplemousse_ left
[21:48] *** pamplemousse_ joined
[21:55] <Geth> ¦ whateverable/master: 6 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[21:55] <Geth> ¦ whateverable/master: 2911e5f330 | Remove trailing whitespace

[21:55] <Geth> ¦ whateverable/master: 6f222b5c27 | Add a did-you-mean function for fuzzy matching

[21:55] <Geth> ¦ whateverable/master: bb3fc66b30 | Only sleep if not running the tests

[21:55] <Geth> ¦ whateverable/master: a09bd876ac | Add some convenience functions

[21:55] <Geth> ¦ whateverable/master: e9397c9f6c | Add FootgunDB

[21:55] <Geth> ¦ whateverable/master: 17fb275cc2 | New bot: Tellable

[21:55] <Geth> ¦ whateverable/master: review: https://github.com/perl6/whateverable/compare/ce2fde35a5dd...17fb275cc29d

[21:59] *** tellable6 joined
[21:59] *** ChanServ sets mode: +v tellable6

[21:59] <AlexDaniel> .seen Zoffix

[21:59] <tellable6> AlexDaniel, I haven't seen Zoffix around

[21:59] <AlexDaniel> huh

[22:00] <AlexDaniel> .seen zoffix

[22:00] <tellable6> AlexDaniel, I saw zoffix 2019-01-06T17:41:14Z in #perl6: <zoffix> moritz: the project's direction and management style doesn't match my goals and I'll be happier elsewhere.

[22:01] <AlexDaniel> okay I haven't noticed that before…

[22:01] <AlexDaniel> so yoleaux lowercased all nicks…

[22:02] *** pilne joined
[22:02] *** tellable6 left
[22:02] <AlexDaniel> ok I'll put that down, get some sleep and fix that tomorrow :)

[22:05] <squashable6> 🍕 rba++ wrote a comment on “deployment of docs.perl6.org”: https://github.com/perl6/doc/issues/2929#issuecomment-517857391

[22:10] <squashable6> 🍕🍕🍕  First contribution by MasterDuke17++! ♥

[22:10] <Geth> ¦ doc: 364038af3f | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/StrDistance.pod6

[22:10] <synopsebot> Link: https://doc.perl6.org/type/StrDistance

[22:10] <Geth> ¦ doc: Remove an errant `|` from a `StrDistance` example

[22:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/364038af3f

[22:14] <Geth> ¦ doc: 19a54a121d | MasterDuke17++ (committed using GitHub Web editor) | doc/Type/StrDistance.pod6

[22:14] <synopsebot> Link: https://doc.perl6.org/type/StrDistance

[22:14] <Geth> ¦ doc: Make `before`/`after` formatting more consistent

[22:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/19a54a121d

[22:14] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[22:15] <AlexDaniel> fwiw anyone can tell squashable6 to be silent if there's a lot of spam

[22:28] <squashable6> 🍕 JJ++ wrote a comment on “deployment of docs.perl6.org”: https://github.com/perl6/doc/issues/2929#issuecomment-517861742

[22:28] *** Summertime joined
[22:33] <Geth> ¦ doc: d92770ba99 | MasterDuke17++ (committed using GitHub Web editor) | doc/Language/performance.pod6

[22:33] <Geth> ¦ doc: Update performance.pod6

[22:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d92770ba99

[22:33] <synopsebot> Link: https://doc.perl6.org/language/performance

[22:33] <squashable6> 🍕 MasterDuke17++ edited issue “Proofread documentation …”: https://github.com/perl6/doc/issues/2924

[22:46] *** sjm_uk joined
[22:54] *** netrino joined
[23:00] *** netrino_ joined
[23:03] *** netrino left
[23:17] *** netrino_ left
[23:23] *** uzl left
[23:27] *** uzl joined
[23:32] *** Itaipu left
[23:32] *** Itaipu_ joined
[23:37] *** rindolf left
[23:44] *** sjm_uk left
