[00:05] <Kaiepi> working around the issue i was having with nativecall ended up being fairly simple

[00:06] <timotimo> assigning to a @foo also makes arrays, that uses the same "single argument rule", too

[00:06] <timotimo> m: my @foo = [1, 2, 3]; say @foo.perl

[00:06] <camelia> rakudo-moar 21ae9f3e2: OUTPUT: ¬´[1, 2, 3]‚ê§¬ª

[00:06] <timotimo> that's why this isn't an array of arrays

[00:06] <timotimo> m: my @foo = 1; say @foo.perl; my @bar = 1, 2; say @bar.perl

[00:06] <camelia> rakudo-moar 21ae9f3e2: OUTPUT: ¬´[1]‚ê§[1, 2]‚ê§¬ª

[00:06] <timotimo> the second one has a list of 1 and 2, but it makes an array of 1 and 2, rather than an array of the list of 1 and 2 in its first slot

[00:32] *** kurahaupo_ left
[00:36] *** rindolf left
[00:43] *** w_richard_w joined
[00:49] *** kurahaupo joined
[01:02] *** aborazmeh joined
[01:02] *** aborazmeh left
[01:02] *** aborazmeh joined
[01:11] *** w_richard_w left
[01:17] *** MasterDuke left
[01:26] *** zachk left
[01:28] *** w_richard_w joined
[01:30] *** koto joined
[01:31] *** koto left
[01:33] *** sena_kun left
[01:47] <lookatme_q> so why they not add comma after the first element: [1,]

[01:47] <lookatme_q> m: say [1]

[01:47] <camelia> rakudo-moar 21ae9f3e2: OUTPUT: ¬´[1]‚ê§¬ª

[01:47] <lookatme_q> m: say (1)

[01:47] <camelia> rakudo-moar 21ae9f3e2: OUTPUT: ¬´1‚ê§¬ª

[01:48] <lookatme_q> oh, that make sense :D

[01:56] *** cpan-p6 left
[01:58] *** cpan-p6 joined
[01:58] <cpan-p6> 03cpan-p6 reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[02:00] *** holyghost left
[02:05] *** MasterDuke joined
[02:05] *** MasterDuke left
[02:05] *** MasterDuke joined
[02:12] *** cpan-p6_ joined
[02:12] <cpan-p6_> 03cpan-p6_ reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[02:12] *** cpan-p6_ left
[02:12] *** Sgeo joined
[02:13] *** dogbert17 left
[02:14] <isomorphismes> in https://docs.perl6.org/language/grammar_tutorial#Inheriting_from_a_grammar there are two quotes (starting and ending) that somehow should be "tied together"

[02:15] <isomorphismes> whereas <quote>? <stuff> <quote>?   would match abcdefg‚Äô  or `abcdefg

[02:16] <isomorphismes> and shouldn't

[02:20] *** markoong left
[02:22] *** molaf left
[02:25] *** mowcat left
[02:34] *** molaf joined
[02:35] *** ynoom is now known as moony

[02:38] *** aborazmeh left
[02:50] *** leont left
[02:58] *** cjkinni left
[02:59] *** w17t left
[02:59] *** cjkinni joined
[03:10] *** MasterDuke_ joined
[03:10] *** MasterDuke left
[03:15] *** MasterDuke_ left
[03:19] *** robertle left
[03:19] *** robertle joined
[03:24] *** MasterDuke joined
[03:24] *** MasterDuke left
[03:24] *** MasterDuke joined
[03:31] *** zacts joined
[03:31] *** AlexDani` joined
[03:33] *** zacts left
[03:33] *** nightfrog left
[03:36] *** AlexDani` left
[03:36] *** AlexDani` joined
[03:36] *** AlexDaniel left
[03:36] *** AlexDani` is now known as AlexDaniel

[03:45] *** kurahaupo left
[03:45] *** kurahaupo_ joined
[03:45] *** kurahaupo joined
[03:49] *** robertle left
[03:49] *** kurahaupo_ left
[03:49] *** robertle joined
[03:51] *** martin__ joined
[03:55] *** ufobat_ left
[03:57] *** w_richard_w left
[04:01] <lookatme_q> isomorphismes, I think they just want show you how the grammar inheritance works.

[04:01] *** MasterDuke left
[04:02] *** MasterDuke joined
[04:04] *** MasterDuke left
[04:04] *** MasterDuke joined
[04:06] *** holyghost joined
[04:42] *** molaf left
[04:48] *** Cabanossi joined
[04:49] *** Cabanoss- left
[05:07] *** cpup left
[05:11] *** cpup joined
[05:19] *** _isomorphismes joined
[05:29] *** w17t joined
[05:34] *** chacewells joined
[05:38] *** chacewells left
[05:51] *** sno left
[05:52] *** curan joined
[06:02] <Geth> ¬¶ doc: bfc9ee63c9 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[06:02] <synopsebot> Link: https://doc.perl6.org/language/pod

[06:02] <Geth> ¬¶ doc: update pod.pod6 re P<>. remove bad links

[06:02] <Geth> ¬¶ doc: 

[06:02] <Geth> ¬¶ doc: If `L<>` is used for an non-existent link (as an example), then the rendered pod will have a link error. In Placements, non-existent links are used. However, a link can be 'rendered' with `C<>` or `V<>`. Note that if a renderer cannot reach a link, then putting it as a target in a link `L<>` will not be much use as the user clicking on such a link will also not reach it.

[06:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bfc9ee63c9

[06:12] *** sno joined
[06:27] *** jmerelo joined
[06:31] <jmerelo> releasable6: status

[06:31] <releasable6> jmerelo, Next release will happen when it's ready. 11 blockers. 115 out of 247 commits logged (‚ö† 41 warnings)

[06:31] <releasable6> jmerelo, Details: https://gist.github.com/16a43f0f45b8ccbf6047fe9494163f2a

[06:31] <jmerelo> What? 7 blockers more?

[06:32] <jmerelo> OK, now it's some modules...

[06:35] *** nightfrog joined
[06:40] *** jme` joined
[06:44] <AlexDaniel> jmerelo: yeah, blin

[06:45] <jmerelo> AlexDaniel: I want _you_ for Google summer of Code mentor

[06:46] <AlexDaniel> jmerelo: I can't, most likely I'll be away for quite a bit during the summer

[06:47] <AlexDaniel> in fact, we will need a release manager for that time

[06:47] <jmerelo> Then for project ideas someone else can tutor

[06:47] <jmerelo> https://github.com/perl-gsoc-2019/ideas

[06:48] <AlexDaniel> speaking of which‚Ä¶ potential release managers, please let me know if you exist :)

[06:49] *** domidumont joined
[06:49] <AlexDaniel> jmerelo: well, I did leave a comment here :) https://github.com/pierre-vigier/Perl6-Math-Matrix/issues/2#issuecomment-457023361

[06:49] <jmerelo> AlexDaniel: I might/could give it a test drive... But it would have to be July or October. And I'm not sure I'm up to the task. Anyone woule be better, I guess

[06:50] <AlexDaniel> jmerelo: ok, good to know, thanks!

[06:50] <jmerelo> AlexDaniel: you could add some of all your bots there... Or, as caretaker of Zoffix's modules, add some of them too

[06:51] <AlexDaniel> fwiw I'm looking for a more permanent solution, in some sense (more than two months)

[06:52] <jmerelo> AlexDaniel: OK. I understand that. Not this year, then. Maybe Feb 2020 on

[06:54] <jmerelo> Please take StackOverflow developer's survey: https://stackoverflow.az1.qualtrics.com/jfe/form/SV_1RGiufc1FCJcL6B?utm_source=so-owned&utm_medium=announcement-banner&utm_campaign=dev-survey-2019&award=3bbace05f1fe4c5ca93ee9594eaa7f4d&site=stackoverflow.com

[06:54] <jmerelo> (Maybe not that link, but if you've got the link, please do it) (To speak about Perl, I mean)

[06:55] <AlexDaniel> .tell brrt some cool hardcore ideas from you? :) https://github.com/perl-gsoc-2019/ideas

[06:55] <yoleaux> AlexDaniel: I'll pass your message to brrt.

[07:00] <Geth> ¬¶ doc: 1de4ab9704 | (JJ Merelo)++ | doc/Language/control.pod6

[07:00] <synopsebot> Link: https://doc.perl6.org/language/control

[07:00] <Geth> ¬¶ doc: Fix target refs #2568

[07:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1de4ab9704

[07:06] *** kensanata joined
[07:20] *** domidumont left
[07:26] *** jmerelo left
[07:27] *** ravenousmoose joined
[07:50] *** patrickb joined
[07:51] *** eseyman left
[07:51] *** martin__ is now known as ufobat

[07:51] <ufobat> good morning

[07:53] *** ravenousmoose left
[08:04] <Xliff> Morning.

[08:04] <Xliff> https://gist.github.com/Xliff/afed9c58e738dec8e144d76645520c8f

[08:05] <Xliff> \o/

[08:07] <Xliff> And now.... I sleep!

[08:08] <ufobat> hehe :D

[08:09] <ufobat> good night Xliff 

[08:09] <Xliff> ufobat: Did you read the gist?

[08:09] <ufobat> yeah, i did

[08:09] <Xliff> Good days work!

[08:10] *** domidumont joined
[08:10] <Xliff> o7

[08:25] *** zakharyas joined
[08:42] *** dakkar joined
[09:06] *** Xliff left
[09:10] *** isomorphismes left
[09:16] *** robertle left
[09:17] *** robertle joined
[09:17] *** pmichaud_ left
[09:17] *** pmichaud joined
[09:30] *** yqt joined
[09:54] *** cpan-p6_ joined
[09:54] <cpan-p6_> 03cpan-p6_ reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[09:54] *** cpan-p6 left
[09:54] <cpan-p6_> New module released to CPAN! XML-XPath (0.9.2) by 03UFOBAT

[09:56] <ufobat> oh that took a while.. like 2 hours :(

[09:56] <ufobat> ah it was offline :)

[09:58] <tyil> its not as stable as I'd like it to be

[09:58] <tyil> but it's being worked on :>

[10:02] <tyil> I just redeployed it with a fix suggested by lizmat, which I hope will keep it stable

[10:04] <tyil> now that I have my own db of metadata on perl 6 modules I dont need the bot to scan/parse nntp for updates at all, actually

[10:04] <tyil> I can just query the db to see if there's anything new

[10:10] *** dakkar left
[10:10] *** dakkar joined
[10:15] *** kensanata left
[10:20] *** ExtraCrispy joined
[10:34] *** rindolf joined
[10:50] *** _isomorphismes left
[10:55] *** markoong joined
[10:59] *** dogbert2_ joined
[11:23] *** scimon joined
[11:36] <ufobat> sergot and jnthn: i've came up with the idea for the Google Summer of Code https://github.com/perl-gsoc-2019/ideas/pull/1 . This idea of mine is due to my perception of openssl not being maintained nor being activly developed on it. I just wanted to ping you maybe one of you could improve the propose and/or mentor someone else doing "TLS improvements on the ecosystem"

[11:37] <ufobat> s/propose/proposal/

[11:39] *** molaf joined
[11:44] *** leont joined
[11:48] *** kurahaupo left
[11:48] *** kurahaupo joined
[11:55] *** molaf left
[11:57] *** pmurias joined
[11:57] <pmurias> wouldn't a wiki be better for gsoc project ideas that a repo? 

[11:59] <El_Che> .tell jmerelo: 12:57 < pmurias> wouldn't a wiki be better for gsoc project ideas that a repo?

[11:59] <yoleaux> El_Che: What kind of a name is "jmerelo:"?!

[11:59] <El_Che> .tell jmerelo 12:57 < pmurias> wouldn't a wiki be better for gsoc project ideas that a repo?

[11:59] <yoleaux> El_Che: I'll pass your message to jmerelo.

[12:00] <El_Che> yoleaux: dwim and strip the end : in an nick :)

[12:12] *** pmurias left
[12:12] *** cpan-p6 joined
[12:12] <cpan-p6> 03cpan-p6 reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[12:13] *** cpan-p6_ left
[12:15] *** cpan-p6__ joined
[12:18] *** sena_kun joined
[12:20] *** cpan-p6__ left
[12:33] *** lucasb joined
[12:35] *** aborazmeh joined
[12:35] *** aborazmeh left
[12:35] *** aborazmeh joined
[12:39] *** pmurias joined
[12:41] *** zakharyas left
[12:44] *** aborazmeh left
[12:47] *** _isomorphismes joined
[12:51] *** _isomorphismes left
[12:59] *** aborazmeh joined
[12:59] *** aborazmeh left
[12:59] *** aborazmeh joined
[13:04] *** pmurias left
[13:05] *** pmurias joined
[13:10] *** pmurias left
[13:12] *** pmurias joined
[13:15] *** aborazmeh left
[13:20] *** dogbert2_ left
[13:23] *** patrickb left
[13:34] <Altreus> I seem to have crashed MoarVM by doing ¬´react { whenever ... -> $message { return unless $message.content } }¬ª

[13:34] <Altreus> i assumed the whenever block was a sub because of the -> and therefore I could use return

[13:35] <Altreus> What is the correct way of inverting if x { the rest of the thing } ?

[13:36] <pmurias> ufobat: do you ideas for what "TLS improvements" are needed?

[13:37] <jnthn> Altreus: Things with -> are never subs, they're blocks

[13:37] <jnthn> So return is opaque ot them

[13:37] <jnthn> `whenever` is a loop, so just use `next unless $message.content`

[13:42] *** Tormod joined
[13:44] <ufobat> pmurias, whenever i worked professionally with TLS in perl5 I had to meet project specifications. and every time I had to pick perl5 over perl6 because i was not able to implement those

[13:46] <ufobat> pmurias, my opinion is that enterprises need a feature compelte openssl bindings, and of course that whatever you can express/implement on top of openssl would be respected in a application that might be on top of cro for example

[13:46] <Altreus> next! OK :)

[13:47] <Altreus> thank

[13:47] <El_Che> related somewhat are oauth and saml libraries

[13:47] <El_Che> with those, good db support and cro, you can write most webapps and rest services

[13:48] <jnthn> I'd like to see the TLS support get more love also. Cro largely just passes options down to IO::Socket::Async::SSL, so whatever it gets should be available.

[13:48] <jnthn> IO::Socket::Async::SSL does a bunch of native call bindings too, which ideally it would not need to do and could just get from an OpenSSL binding module

[13:53] *** Xliff joined
[13:53] *** Xliff_ joined
[13:56] *** zakharyas joined
[13:56] *** Xliff_ left
[13:56] *** w17t left
[13:57] *** Xliff left
[13:57] <Altreus> query. Why can't I use await as a method on a Promise? I'd be less surprised if I couldn't call return as a method on an arbitrary thing

[14:01] *** molaf joined
[14:05] <pmurias> ufobat: adding bindings for missing features and moving back stuff from IO::Socket::Async::SSL does sound like a more concrete proposal for a GSoC project

[14:08] <Geth> ¬¶ doc: Michael-S++ created pull request #2587: Add section on exporting multi methods in a Module

[14:08] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2587

[14:09] <ufobat> pmurias, jup

[14:13] *** Actualeyes joined
[14:20] *** pmurias left
[14:22] *** pmurias joined
[14:26] *** pmurias left
[14:27] *** pmurias joined
[14:31] <sergot> ufobat++: that's a nice idea!

[14:31] <yoleaux> 17 Mar 2018 10:22Z <ufobat> sergot: I need your help for my PR. I dont know what I am doing, but I need to set the &verfiy-callback

[14:31] <yoleaux> 24 Mar 2018 20:01Z <tyil> sergot: I opened a PR on one of your repos https://github.com/sergot/datetime-parse/pull/8 :>

[14:31] <yoleaux> 29 May 2018 07:37Z <Xliff_> sergot: Can you email me a simple way to use HTTP::UserAgent to send a POST with a specific BODY (not form data).

[14:32] <sergot> oh, Mar and May...

[14:32] *** pmurias left
[14:33] *** pmurias joined
[14:37] <tyil> thats almost a year ago

[14:41] *** pmurias left
[14:47] *** pmurias joined
[14:48] *** _isomorphismes joined
[14:52] *** _isomorphismes left
[14:55] *** someuser joined
[14:56] *** Tormod left
[15:02] *** skids joined
[15:13] *** pmurias left
[15:13] *** pmurias joined
[15:14] *** dalek left
[15:15] *** dalek joined
[15:15] *** ChanServ sets mode: +v dalek

[15:16] *** pmichaud left
[15:17] *** pmichaud joined
[15:18] *** robertle left
[15:18] *** robertle joined
[15:30] *** ravenousmoose joined
[15:33] *** lucasb left
[15:39] *** mowcat joined
[15:39] <andrzejku> do we have mac users here?

[15:48] <lizmat> .tell Coke https://www.reddit.com/r/perl/comments/ail59k/grant_report_revitalize_blogsperlorg_december_2018/eeuiaws/

[15:48] <yoleaux> lizmat: I'll pass your message to Coke.

[16:10] *** curan left
[16:11] *** jme` left
[16:22] *** domidumont left
[16:25] <vrurg> andrzejku: I'm on mac, if it's not too late

[16:26] <pmurias> andrzejku: yes (I'm not one as I try to avoid Apple stuff if I can)

[16:28] <El_Che> andrzejku: some times

[16:29] *** ravenousmoose left
[16:31] *** molaf left
[16:33] *** avalenn left
[16:38] <SmokeMachine> m: Set.HOW ~~ Metamodel::EnumHOW

[16:38] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:39] <SmokeMachine> m: Metamodel::EnumHOW.ACCEPTS: Set.HOW

[16:39] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:45] <SmokeMachine> What is that bot that shows where a call is implemented?

[16:45] <timotimo> that's sourcebaby

[16:45] <timotimo> one of zof's bots, so at the moment not online

[16:46] <SmokeMachine> :(

[16:46] <timotimo> there's also a module that you can use on the commandline i believe

[16:46] <timotimo> i'd ask buggable for the module link, but it's also not online

[16:47] <SmokeMachine> timotimo: thanks... but I‚Äôm not with my computer now... :(

[16:47] <timotimo> OK, can i help you perhaps?

[16:48] <SmokeMachine> timotimo: I was curious with this: https://github.com/rakudo/rakudo/issues/2640

[16:50] <ufobat> is IO::Path.resolve (still) broken on windows?

[16:50] <ufobat> https://github.com/zoffixznet/perl6-Temp-Path/blob/master/lib/Temp/Path.pm6#L27-L33

[16:50] <ufobat> i am wondering line 27 vs line 33

[16:59] *** pmurias left
[17:00] *** pmurias joined
[17:00] <SmokeMachine> timotimo: thanks!

[17:00] <timotimo> sorry, i didn't actually find the relevant code

[17:01] <SmokeMachine> Np

[17:03] *** lizmat left
[17:04] <SmokeMachine> m: Metamodel::EnumHOW.^lookup: ‚ÄúACCEPTS‚Äù

[17:04] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:05] <SmokeMachine> m: Metamodel::EnumHOW.^lookup: ‚Äúnew_type‚Äù

[17:05] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:05] <SmokeMachine> m: say Metamodel::EnumHOW.^methods

[17:05] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´(archetypes new new_type add_parent add_enum_value set_export_callback enum_values elems enum_from_value enum_value_list compose compose_values set_composalizer composalize is_composed role_typecheck_list set_name set_shortname name shortname WHY set_‚Ä¶¬ª

[17:06] <SmokeMachine> m: .say for Metamodel::EnumHOW.^methods

[17:06] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:06] <SmokeMachine> m: say $_ for Metamodel::EnumHOW.^methods

[17:06] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´archetypes‚ê§new‚ê§new_type‚ê§add_parent‚ê§add_enum_value‚ê§set_export_callback‚ê§enum_values‚ê§elems‚ê§enum_from_value‚ê§enum_value_list‚ê§compose‚ê§compose_values‚ê§set_composalizer‚ê§composalize‚ê§is_composed‚ê§role_typecheck_list‚ê§set_name‚ê§set_‚Ä¶¬ª

[17:07] <SmokeMachine> m: .say for Metamodel::EnumHOW.^methods.grep: *.name ~~ /A/

[17:07] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´WhateverCode object coerced to string (please use .gist or .perl to do that)‚ê§  in block <unit> at <tmp> line 1‚ê§Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:07] *** pmurias left
[17:07] <SmokeMachine> 15:07 <SmokeMachine> m: .say for Metamodel::EnumHOW.^methods.grep: { .name ~~ /A/ }

[17:08] <SmokeMachine> m: .say for Metamodel::EnumHOW.^methods.grep: { .name ~~ /A/ }

[17:08] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:08] <SmokeMachine> m: .say for Metamodel::EnumHOW.^methods.grep: { .?name ~~ /A/ }

[17:08] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:08] *** pmurias joined
[17:09] <SmokeMachine> m: say $_ for Metamodel::EnumHOW.^methods.grep: { .?name ~~ /A/ }

[17:09] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´create_BUILDPLAN‚ê§BUILDPLAN‚ê§BUILDALLPLAN‚ê§Method+{is-nodal}.new‚ê§Method+{is-nodal}.new‚ê§Method+{is-nodal}.new‚ê§Method+{is-nodal}.new‚ê§Method+{is-nodal}.new‚ê§Method+{is-nodal}.new‚ê§Method+{is-nodal}.new‚ê§ACCEPTS‚ê§ACCEPTS‚ê§CREATE‚ê§BUILDALL‚Ä¶¬ª

[17:09] <SmokeMachine> m: say .name for Metamodel::EnumHOW.^methods.grep: { .?name ~~ /A/ }

[17:09] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´create_BUILDPLAN‚ê§BUILDPLAN‚ê§BUILDALLPLAN‚ê§Array‚ê§AT-POS‚ê§ASSIGN-POS‚ê§AT-KEY‚ê§ASSIGN-KEY‚ê§FLATTENABLE_LIST‚ê§FLATTENABLE_HASH‚ê§ACCEPTS‚ê§ACCEPTS‚ê§CREATE‚ê§BUILDALL‚ê§BUILD_LEAST_DERIVED‚ê§DUMP-OBJECT-ATTRS‚ê§WALK‚ê§¬ª

[17:10] <SmokeMachine> m: say  Metamodel::EnumHOW.^find_method(‚ÄúACCEPTS‚Äù)

[17:10] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´ACCEPTS‚ê§¬ª

[17:10] <SmokeMachine> m: say¬†.signature for Metamodel::EnumHOW.^find_method(‚ÄúACCEPTS‚Äù).candidates

[17:10] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´(Mu:U: \topic, *%_)‚ê§(Mu:U: Mu:U \topic, *%_)‚ê§(Any:D: Mu:D \a, *%_)‚ê§(Any:D: Mu:U, *%_ --> Bool::False)‚ê§(Any:U: \topic, *%_ --> Bool)‚ê§¬ª

[17:12] <SmokeMachine> m: say Set.HOW ~~ Any

[17:12] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:12] <SmokeMachine> m: say Set.HOW

[17:12] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´No such method 'gist' for invocant of type 'Perl6::Metamodel::ClassHOW+{<anon>}'. Did you mean 'isa'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:12] <SmokeMachine> m: say Set.HOW.^name

[17:12] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§¬ª

[17:14] <Geth> ¬¶ doc: c480425c74 | (Mike Swierczek)++ | doc/Language/modules.pod6

[17:14] <synopsebot> Link: https://doc.perl6.org/language/modules

[17:14] <Geth> ¬¶ doc: Update Module docs on is export with multi methods

[17:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c480425c74

[17:14] <Geth> ¬¶ doc: 986a9c6b8d | (Mike Swierczek)++ | doc/Language/modules.pod6

[17:14] <Geth> ¬¶ doc: Module is export for multi methods

[17:14] <Geth> ¬¶ doc: 

[17:14] <Geth> ¬¶ doc: Experimented with other combinations and added text.

[17:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/986a9c6b8d

[17:14] <Geth> ¬¶ doc: c104c8ccc3 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[17:14] <Geth> ¬¶ doc: Merge pull request #2587 from Michael-S/master

[17:14] <Geth> ¬¶ doc: 

[17:14] <Geth> ¬¶ doc: Add section on exporting multi methods in a Module

[17:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c104c8ccc3

[17:16] <andrzejku> I have iMac get it as a gift

[17:16] <SmokeMachine> m: say Set.HOW.^find_method(‚ÄúACCEPTS‚Äù)

[17:16] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´ACCEPTS‚ê§¬ª

[17:16] <andrzejku> and now it is hard for me to sell : (

[17:16] <SmokeMachine> m: say .signature for Set.HOW.^find_method(‚ÄúACCEPTS‚Äù).candidates

[17:16] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:16] <andrzejku> but my Linux has audio problems and bluettoth

[17:16] <andrzejku> what makes me crazy

[17:17] <SmokeMachine> m: say .signature for Set.HOW.^find_method(‚ÄúACCEPTS‚Äù)

[17:17] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:17] *** reach_satori_ joined
[17:17] <SmokeMachine> m: say $_ for Set.HOW.^find_method(‚ÄúACCEPTS‚Äù).candidates

[17:17] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:17] <SmokeMachine> m: say .signature for Set.HOW.^find_method(‚ÄúACCEPTS‚Äù)

[17:17] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:18] <SmokeMachine> m: say $_ for Set.HOW.^find_method(‚ÄúACCEPTS‚Äù)

[17:18] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:20] *** reach_satori left
[17:25] *** scimon left
[17:28] *** patrickb joined
[17:40] *** dakkar left
[17:43] *** smallick joined
[17:56] *** ravenousmoose joined
[17:56] *** kybr joined
[17:57] *** smallick left
[17:58] *** w17t joined
[18:00] <SmokeMachine> m: say Set.HOW.^find_method(‚ÄúACCEPTS‚Äù).candidates

[18:00] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Method::NotFound‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:05] *** ravenousmoose left
[18:13] <sena_kun> m: Set.HOW.find_method(‚ÄúACCEPTS‚Äù).candidates

[18:13] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Too few positionals passed; expected 3 arguments but got 2‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:14] <sena_kun> SmokeMachine, `^` is a shortcut for `.HOW`, so it is either `HOW.foo` or `^foo`.

[18:15] <SmokeMachine> sena_kun: I know... I don‚Äôt want the methods of Set, but of Set.HOW...

[18:15] <sena_kun> m: say Set.HOW.^methods>>.name;

[18:15] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´(parameterize archetypes new new_type add_fallback compose roles role_typecheck_list concretization is_composed setup_junction_fallback find_method_fallback has_fallbacks set_name set_shortname name shortname WHY set_why ver auth api set_ver set_auth ‚Ä¶¬ª

[18:16] <sena_kun> m: say Set.HOW.^methods.grep(*.name eq 'ACCEPTS').first;

[18:16] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´ACCEPTS‚ê§¬ª

[18:16] <SmokeMachine> sena_kun: I was trying to find the candidates of ACCEPTS...

[18:16] <SmokeMachine> m: say Set.HOW ~~ Any

[18:16] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:17] *** smallick joined
[18:17] <SmokeMachine> m: say Any.ACCEPTS: Set.HOW

[18:17] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:17] *** Xliff joined
[18:18] <sena_kun> it resolves to NQPRoutine, not a normal Perl 6 method. And Set.HOW object seems to be low-level too... Not sure if that helps in any way though. :|

[18:18] <SmokeMachine> m: say Any.ACCEPTS: Metamodel::ClassHOW

[18:18] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´True‚ê§¬ª

[18:19] <SmokeMachine> m: say Set.HOW.^name

[18:19] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§¬ª

[18:19] <sena_kun> m: say Set.HOW

[18:19] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´No such method 'gist' for invocant of type 'Perl6::Metamodel::ClassHOW+{<anon>}'. Did you mean 'isa'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:19] <sena_kun> ugh...

[18:20] <sena_kun> it gives me `(low-level object `Perl6::Metamodel::ClassHOW+{<anon>}`)` in REPL.

[18:20] <smallick> m: dd Set.HOW

[18:20] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´(Perl6::Metamodel::ClassHOW+{<anon>} without .perl method)‚ê§¬ª

[18:20] <SmokeMachine> m: my $meta = Any.ACCEPTS: Metamodel::ClassHOW; say $meta.^name; Any.ACCEPTS: $model

[18:20] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$model' is not declared‚ê§at <tmp>:1‚ê§------> 3ClassHOW; say $meta.^name; Any.ACCEPTS: 7‚èè5$model‚ê§¬ª

[18:21] <SmokeMachine> m: my $meta = Any.ACCEPTS: Metamodel::ClassHOW; say $meta.^name; Any.ACCEPTS: $meta

[18:21] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Bool‚ê§¬ª

[18:21] <SmokeMachine> m: my $meta = Any.ACCEPTS: Metamodel::ClassHOW; say $meta.^name; say Any.ACCEPTS: $meta

[18:21] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Bool‚ê§True‚ê§¬ª

[18:21] <SmokeMachine> m: my \meta = Any.ACCEPTS: Metamodel::ClassHOW; say meta.^name; Any.ACCEPTS: meta

[18:21] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Bool‚ê§¬ª

[18:22] <SmokeMachine> m: my \meta = Any.ACCEPTS: Metamodel::ClassHOW; say meta.^name; say Any.ACCEPTS: meta

[18:22] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Bool‚ê§True‚ê§¬ª

[18:22] <SmokeMachine> m: my \meta = Set.HOW; say meta.^name; say Any.ACCEPTS: meta

[18:22] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§Died with X::Multi::NoMatch‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:23] <SmokeMachine> m: my \meta = Set.HOW; say meta.^name; say meta.^roles

[18:23] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§Required named parameter 'local' not passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:23] <SmokeMachine> m: my \meta = Set.HOW; say meta.^name; say meta.^roles: :local

[18:23] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§No such method 'gist' for invocant of type '<anon>'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:24] <SmokeMachine> m: my \meta = Set.HOW; say meta.^name; say meta.^roles(:local)>>.^name

[18:24] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§List‚ê§¬ª

[18:24] *** dogbert17 joined
[18:24] <SmokeMachine> m: my \meta = Set.HOW; say meta.^name; say meta.^roles(:local)>>.^methods

[18:24] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´Perl6::Metamodel::ClassHOW+{<anon>}‚ê§(from-iterator from-slurpy from-slurpy-onearg from-slurpy-flat new to from sum fmt ASSIGN-POS BIND-POS reification-target iterator sink STORE eager Capture FLATTENABLE_LIST FLATTENABLE_HASH CALL-ME pick roll rever‚Ä¶¬ª

[18:25] *** patrickb left
[18:25] <Xliff> \o

[18:26] <SmokeMachine> I should be doing that on #whateverable ... sorry...

[18:26] <Xliff> \o/ https://gist.github.com/Xliff/afed9c58e738dec8e144d76645520c8f

[18:27] <SmokeMachine> \o/

[18:27] <SmokeMachine> Xliff: congratulations!

[18:27] <Xliff> Thanks.

[18:29] <sena_kun> Xliff++

[18:31] <sena_kun> weekly: https://gist.github.com/Xliff/afed9c58e738dec8e144d76645520c8f

[18:31] <notable6> sena_kun, Noted!

[18:31] <Xliff> LOL!

[18:31] <sena_kun> not sure if it is used like that, sorry if not. :)

[18:31] <Xliff> Its still experimental, tho

[18:33] *** sno left
[18:39] <sena_kun> I still think that progressing efforts on getting GTK support worth noting.

[18:45] <El_Che> andrzejku: are you looking for a buyer or for a mac support group? :)

[18:47] <andrzejku> El_Che me sell you buy?

[18:47] * andrzejku joking :) 

[18:48] *** smallick left
[18:50] *** sno joined
[18:51] *** chacewells joined
[18:53] *** jmerelo joined
[18:53] *** zachk joined
[18:55] *** kst left
[18:58] <b2gills> Altreus: Promise has a `.result()` method that does the same thing as `await`.

[19:03] *** andrzejku left
[19:06] *** abraxxa1 joined
[19:06] *** abraxxa1 left
[19:07] <jmerelo> The StackOverflow developer survey is on. Please rush there and spread the word about Perl 6

[19:07] <yoleaux> 11:59Z <El_Che> jmerelo: 12:57 < pmurias> wouldn't a wiki be better for gsoc project ideas that a repo?

[19:07] *** abraxxa1 joined
[19:08] <jmerelo> .tell El_Che, pmurias: a repo offers more possibilities for discussion, or to flesh things out in a wiki. problem with wikis is no one gets notified when something changes.

[19:08] <yoleaux> jmerelo: What kind of a name is "El_Che,"?!

[19:08] <jmerelo> .tell pmurias: a repo offers more possibilities for discussion, or to flesh things out in a wiki. problem with wikis is no one gets notified when something changes.

[19:08] <yoleaux> jmerelo: What kind of a name is "pmurias:"?!

[19:08] <jmerelo> .tell pmurias a repo offers more possibilities for discussion, or to flesh things out in a wiki. problem with wikis is no one gets notified when something changes.

[19:08] <yoleaux> jmerelo: I'll pass your message to pmurias.

[19:08] <jmerelo> Really

[19:08] <jmerelo> releasable6: status

[19:08] <releasable6> jmerelo, Next release will happen when it's ready. 10 blockers. 157 out of 250 commits logged

[19:08] <releasable6> jmerelo, Details: https://gist.github.com/62692a8e21d982b291ad5ce17d7948e5

[19:13] <El_Che> jmerelo: for formal proposals drafts, a repo is beter. For one-off idea's, a wiki is less overhead 

[19:13] *** ravenousmoose joined
[19:13] <jmerelo> El_Che: I don't mind the overhead

[19:14] <El_Che> then it's ok

[19:16] <jmerelo> El_Che: Can you take a look at this? https://github.com/perl6/doc/issues/2589 Apparently, you wrote the paragraph that introduced that word. 

[19:19] <El_Che> Mmm. I think the issue creator mind the term indirection because (s)he is not a fan of OO. But in the doc, indirection is not used for OO. We can replace it by abstractions probably, but I don't see if we should. I wonder what other people think

[19:19] *** ravenousmoose left
[19:21] <jmerelo> El_Che: the OO hypothesis looks plausible. Abtraction does not look quite the same concept to me.

[19:22] <El_Che> it's not the same indeed, but they are related

[19:23] *** sauvin left
[19:23] <El_Che> I don't have much to add to the ticket besides the dumbs up I gave to your answer

[19:24] <jmerelo> El_Che: OK. It might be a hard nut to crack... As far as I understand it, it would imply rewriting a big part of it, at least the intro.

[19:25] <jmerelo> .seen isomorphisms

[19:25] <yoleaux> I haven't seen isomorphisms around.

[19:25] <jmerelo> .seen isomorphism

[19:25] <yoleaux> I haven't seen isomorphism around.

[19:27] <El_Che> jmerelo: Ruby and Perl 6 have real OO, e.g. compared to C and Go which use structs. So this does not have much sense:

[19:27] <El_Che> "Let‚Äôs forget object oriented religion or references to ruby. Pretend they never existed. Doing so creates dependencies of knowledge which themselves have dependencies, and which aren‚Äôt ultimately worth the time."

[19:28] <El_Che> you could get away with that in Perl 5, but on on 6 as it's an important part of the language

[19:28] <El_Che> so I don't know if you'll get something useful out of that ticket

[19:28] *** ravenousmoose joined
[19:28] <El_Che> besides a huge PR removing OO from Perl 6 :)

[19:29] <jmerelo> El_Che: you'll have to remove the meta-OO first...

[19:29] <sena_kun> >OO is just nouns and verbs tied together

[19:29] <sena_kun> dark gods pls no

[19:30] <Xliff> If I have a c_routine(struct** v) ... what would be the best nativecall signature to use?

[19:30] <jmerelo> sena_kun: that's the thing, I'm not sure if it's a real concern with the docs or an attempt to start a flame war.

[19:30] <Xliff> CArray[struct] $v or CArray[Pointer[struct]] $v?

[19:31] <jmerelo> Xliff: off the top of my head, I'd say the latter, but give it a spin to see if it works...

[19:31] <Xliff> I've been using the latter, but I wonder if Perl6 can deal with the ambiguity of the former.

[19:31] <sena_kun> jmerelo, I think the safe route is to just ask for some clarification, which you already did.

[19:31] <jmerelo> Xliff: probably not

[19:31] <El_Che> jmerelo: give him time to articulate what he wants, otherwise I won't mind closing it with a "won't fix"

[19:31] <Xliff> jmerelo: LOL!

[19:32] <jmerelo> sena_kun: I'm always for safe routes :-)

[19:32] <Xliff> Yeah. Me too.

[19:32] <sena_kun> :)

[19:32] <jmerelo> El_Che: we don't have that in the docs. As a label. We _do_ don't fix things, though.

[19:33] <El_Che> as in "we don't close tickets with "won't fix" because it's impolite. That said, you'll ticket will be ignored from now on"

[19:33] <El_Che> how is that for polite?

[19:34] *** |oLa| left
[19:34] <El_Che> but let's wait, maybe the issue is valid and the anti-OO language irrelevant

[19:34] <jmerelo> El_Che: +1 for politeness, -1 for label length

[19:35] <El_Che> label: "no"

[19:35] <jmerelo> El_Che: +1 for both.

[19:35] <El_Che> the "hellNo" is also an option :)

[19:36] <jmerelo> El_Che: "You wish!"

[19:36] <El_Che> "JustForkItAlready"

[19:36] *** ravenousmoose left
[19:36] <jmerelo> Lol

[19:37] *** ravenousmoose joined
[19:41] *** someuser left
[19:48] *** cpan-p6 left
[19:54] *** cpan-p6 joined
[19:54] <cpan-p6> 03cpan-p6 reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[19:55] *** robertle left
[19:55] *** robertle joined
[19:56] *** robertle left
[19:56] *** robertle joined
[19:57] *** cpan-p6_ joined
[19:57] <cpan-p6_> 03cpan-p6_ reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[19:57] *** cpan-p6_ left
[19:58] *** jmerelo left
[19:58] *** xinming_ joined
[20:01] *** xinming left
[20:03] *** robertle left
[20:05] *** lizmat joined
[20:10] *** robertle joined
[20:14] *** pierrot left
[20:16] *** pierrot joined
[20:18] *** kurahaupo_ joined
[20:18] *** kurahaupo left
[20:18] *** kurahaupo_ left
[20:18] *** kurahaupo joined
[20:21] *** ravenousmoose left
[20:22] *** kurahaupo_ joined
[20:23] *** ferreira left
[20:25] *** kurahaupo left
[20:26] <Xliff> If I have a class CS is repr('CStruct') class in $cs, how do I convert that to a pointer? Will nativecast(Pointer[CS], $cs) do?

[20:26] *** kurahaupo_ left
[20:26] *** drolax joined
[20:26] <timotimo> well, CStruct already is a pointer

[20:26] *** kurahaupo joined
[20:27] <Xliff> OK, so if I assign it to a CArray[Pointer[CS]], I don't need anything?

[20:27] <Xliff> In that situation, do I even need Pointer[CS]?

[20:27] <timotimo> Pointer[CS] will be CS**, which you may not want

[20:28] <Xliff> No. That's EXACTLY what I want. ;)

[20:28] <Xliff> No wait.

[20:28] *** kurahaupo left
[20:28] <Xliff> Pointer[CS] is CS*

[20:28] *** dct joined
[20:28] <Xliff> CArray[Pointer[CS}] is CS**

[20:28] <Xliff> And that has been working.

[20:28] <timotimo> no, Pointer[CS] is CS**

[20:29] <Xliff> CArray[CS] would ALSO be CS*

[20:29] <timotimo> CArray[Pointer[CS]] is CS***

[20:29] <Xliff> So how do you represent an array of CS structs?

[20:29] <Xliff> Because now CArray[CS] will NOT do that.

[20:29] *** AlexDani` joined
[20:30] *** kurahaupo joined
[20:30] <timotimo> i believe wa had a PR for that that hasn't been merged yet

[20:31] <Xliff> So rakudo currently implements CArray[CS] as the equivalent of CS**

[20:31] *** AlexDaniel left
[20:31] <timotimo> yes

[20:31] <Xliff> OK, thanks!

[20:32] <Xliff> timotimo: Working on Webkit bindings. ;)

[20:32] <timotimo> i saw something about that!

[20:33] <Xliff> https://gist.github.com/Xliff/afed9c58e738dec8e144d76645520c8f

[20:33] <timotimo> that's the one

[20:34] <Xliff> Right now I am trying to get the view and the JSCore to talk to each other.

[20:34] <Xliff> Or at the least, allow Perl6 to overhear the discussion.

[20:40] *** AlexDani` is now known as AlexDaniel

[20:40] *** Actualeyes left
[20:43] *** zakharyas left
[20:52] <Geth> ¬¶ p6-sake: 12fb0fa5a7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 12 files

[20:52] <Geth> ¬¶ p6-sake: Use v6.c in test files for dynamic $_

[20:52] <Geth> ¬¶ p6-sake: 

[20:52] <Geth> ¬¶ p6-sake: Resolves rakudo/rakudo#2639.

[20:52] <Geth> ¬¶ p6-sake: review: https://github.com/perl6/p6-sake/commit/12fb0fa5a7

[20:52] <synopsebot> RAKUDO#2639 [closed]: https://github.com/rakudo/rakudo/issues/2639 [‚ö† blocker ‚ö†] Tests in Sake module and dynamic $_

[20:55] <Xliff> timotimo: Do you know which PR you were referring to? The one that hadn't been merged, yet?

[20:55] *** cronus_ joined
[20:56] <timotimo> putting structs into a CArray directly rather than as pointers

[20:56] <cronus_> hello. is there a way to use OpenSSL on win32. i get cannot locate ... libeay32.dll. Thanks

[20:57] <timotimo> https://github.com/MoarVM/MoarVM/pull/577

[20:57] <timotimo> cronus_: i thought the module we have brings its own dll along with it?

[20:58] <cronus_> yes

[20:58] <cronus_> the file exists there

[20:59] <cronus_> timotimo: ^^

[20:59] <timotimo> how are you running your code?

[21:00] *** ferreira joined
[21:01] <cronus_> timotimo: I get the problem when I try to install Cro::HTTP. The simplest example that I get the error is -- use OpenSSL; OpenSSL.new

[21:01] <timotimo> OK, and you tried to install OpenSSL just with "zef install OpenSSL"?

[21:02] <cronus_> timotimo: yes. I have built rakudo star from source on win32

[21:02] <timotimo> hum :/

[21:02] <timotimo> dunno what's wrong there

[21:03] <timotimo> can you try the newest rakudo compiler release? perhaps whatever that was got fixed in the mean time?

[21:03] <cronus_> timotimo: using strawberry perl. I have also tried to recompile openssl using mingw on ubuntu 18.04

[21:03] <cronus_> timotimo: would that be 18.12?

[21:03] <timotimo> yeah, i think the 2018.01 release isn't ready yet, we've got a few blockers

[21:04] <cronus_> timotimo: ok, I'll try that. Thanks

[21:04] <timotimo> best of luck!

[21:04] *** cpup left
[21:04] <timotimo> unfortunately i don't have experience with rakudo on windows :(

[21:10] *** pecastro joined
[21:12] *** cpup joined
[21:14] <Xliff> timotimo++ # Thanks for the URL!

[21:14] *** _isomorphismes joined
[21:15] <timotimo> YW

[21:19] *** robertle left
[21:20] *** lookatme_q left
[21:20] *** lookatme_q joined
[21:20] *** molaf joined
[21:25] *** jme` joined
[21:29] *** abraxxa1 left
[21:31] *** kensanata joined
[21:40] *** Kaiepi left
[21:45] *** melezhik joined
[21:46] *** Kaiepi joined
[21:46] <melezhik> HI! I am looking for the module to check versions ,like $a = "0.2.1";  $b = "0.3.0"; compare($a,$b);

[21:47] <gfldex> m: my $v = Version.new("1.2.3"); say $v > Version.new("1,2,2");

[21:47] <camelia> rakudo-moar 8095ceada: OUTPUT: ¬´True‚ê§¬ª

[21:47] <gfldex> melezhik: ^^^

[21:48] <melezhik> gfldex: wow so simple! thanks

[21:50] <gfldex> melezhik: we even got literals for versions, see: https://docs.perl6.org/type/Version

[21:51] <melezhik> fantastic ... I'd ok with just numbers ((:

[21:51] *** Khisanth left
[21:56] <cpan-p6> New module released to CPAN! gtk-glade (0.7.0) by 03MARTIMM

[21:56] <cpan-p6> New module released to CPAN! Monitor-Monit (0.0.2) by 03JSTOWE

[21:57] *** pmurias left
[21:58] *** pmurias joined
[21:59] *** MasterDuke left
[22:04] *** pmurias left
[22:04] <leont> I think I just gained a new understanding of perl6's argument parsing. I don't like it at all.

[22:04] *** pmurias joined
[22:08] *** cronus_ left
[22:09] *** skids left
[22:14] *** Khisanth joined
[22:19] *** drolax left
[22:25] <AlexDaniel> leont: why?

[22:25] *** alpha6 joined
[22:26] <leont> The argument parsing is entirely independent from the arguments as defined in MAIN.

[22:26] <leont> That's not really helpful in letting it DWIM.

[22:27] <leont> That's why ¬´--foo 3¬ª isn't possible, and ¬´--foo=1 --foo=2¬ª may break things because you're expecting an integer and not a list

[22:28] <AlexDaniel> leont: wanna be a mentor for a gsoc project?

[22:29] <AlexDaniel> leont: Something like ‚ÄúBetter argument parsing in rakudo‚Äù, I think there are many NYI tickets and it's indeed less than awesome. https://github.com/perl-gsoc-2019/ideas

[22:29] <leont> Well, I am already inventing a module for better argument handling

[22:30] <leont> But AFAIK the way it does things is specced, so can't easily be changed

[22:30] <leont> (my module is Getopt::Long, and it can do pretty much everything the p5 equivalent can do)

[22:31] <AlexDaniel> leont: sure but it'd be great to get this stuff in core. Some of it may be specced, but it doesn't mean we can't fix/improve things

[22:31] <AlexDaniel> leont: for example there's this PR that needs some love: https://github.com/rakudo/rakudo/pull/688

[22:32] <AlexDaniel> I'm not sure actually, maybe it needs to be rejected, maybe not

[22:33] <leont> Actually, that has already been fixed AFAIK

[22:34] <leont> Setting the named-anywhere entry of %*SUB-MAIN-OPTS to a true value should fix that

[22:36] <AlexDaniel> leont: fwiw I hate MAIN too, but I think there are ways to fix it instead of just hating it :)

[22:37] <leont> I know. That's why I've been writing a Getopt implementation that will magically make it do what I want it to do ;-)

[22:38] <AlexDaniel> sure but‚Ä¶ let's move it to core if it's that great? :)

[22:38] <AlexDaniel> or we can have a gsoc project focused on the module, with a plan to get it ready for core‚Ä¶

[22:42] <pmurias> AlexDaniel: what do you mean by module ready for core?

[22:42] <yoleaux> 19:08Z <jmerelo> pmurias: a repo offers more possibilities for discussion, or to flesh things out in a wiki. problem with wikis is no one gets notified when something changes.

[22:44] <AlexDaniel> pmurias: so that it has all the features that we already have + maybe some of the NYI stuff + roast changes and different behavior depending on which language version is used

[22:45] <pmurias> leont: does you module keep MAIN signature interface or does it offer a different one?

[22:46] <AlexDaniel> pmurias: according to the docs: https://github.com/Leont/getopt-long6/blob/9875e459b14314bc671cb1ce3a49ffdacfcb38f2/lib/Getopt/Long.pm#L432-L433

[22:47] *** yqt left
[22:48] *** eseyman joined
[22:51] <leont> pmurias: both

[22:51] <leont> Because TIMTOWTDI

[22:55] *** melezhik left
[22:57] *** atweiden-air joined
[23:03] *** _isomorphismes left
[23:04] *** pmurias left
[23:07] <atweiden-air> what are some ways to split an array of strings into groups of N elems?

[23:07] <jnthn> .rotor($n)

[23:07] <Util> atweiden-air: .comb.rotor(...pairs indicating groupings...)

[23:08] <Util> jnthn++ # For reading the question better than I !

[23:08] <jnthn> I think if you want leftovers that don't fit into $n you'd want .rotor($n, :partial)

[23:09] <atweiden-air> jnthn: perfect, thank you

[23:09] *** kensanata left
[23:10] <Util> m: my @a = <abc def ghi jkl>; .say for @a.rotor(2);

[23:10] <camelia> rakudo-moar 4fd8e8731: OUTPUT: ¬´(abc def)‚ê§(ghi jkl)‚ê§¬ª

[23:12] *** MasterDuke joined
[23:12] *** MasterDuke left
[23:12] *** MasterDuke joined
[23:13] *** coet joined
[23:13] *** pecastro left
[23:19] *** Cabanossi left
[23:20] *** Cabanossi joined
[23:26] <leont> Is there anything left in perl6-land that uses blib?

[23:54] *** kurahaupo_ joined
[23:57] *** kurahaupo left
