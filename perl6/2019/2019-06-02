[00:09] <squashable6> 🍕 vrurg++ wrote a comment on a review for “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#discussion_r289622067

[00:09] <squashable6> 🍕 vrurg++ submitted a review on pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244605150

[00:10] *** Manifest0 left
[00:14] <squashable6> 🍕 vrurg++ wrote a comment on “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#issuecomment-497987454

[00:17] *** Manifest0 joined
[00:29] *** netrino left
[00:39] *** aborazmeh joined
[00:39] *** aborazmeh left
[00:39] *** aborazmeh joined
[00:47] *** Manifest0 left
[00:51] *** Manifest0 joined
[00:53] *** kurahaupo1 joined
[00:59] *** netrino joined
[01:00] *** dolmen left
[01:02] *** dolmen joined
[01:05] <squashable6> 🍕 vrurg++ opened pull request “Make subsets validate ag…”: https://github.com/rakudo/rakudo/pull/2946

[01:06] <squashable6> 🍕 vrurg++ wrote a comment on “Make subsets validate ag…”: https://github.com/rakudo/rakudo/pull/2946#issuecomment-497989584

[01:16] *** Manifest0 left
[01:18] *** dolmen left
[01:21] *** Manifest0 joined
[01:32] *** Manifest0 left
[01:32] *** netrino left
[01:37] *** Manifest0 joined
[01:37] *** syb joined
[01:38] *** syb left
[01:38] *** netrino joined
[01:43] *** Manifest0 left
[01:49] *** Manifest0 joined
[01:53] *** Manifest0 left
[01:59] *** Manifest0 joined
[02:00] *** jeromelanteri joined
[02:11] *** netrino left
[02:11] *** adu left
[02:11] *** Manifest0 left
[02:16] *** Manifest0 joined
[02:17] *** netrino joined
[02:25] *** aborazmeh left
[02:30] *** Manifest0 left
[02:36] *** Manifest0 joined
[02:46] *** Manifest0 left
[02:50] *** netrino left
[02:51] *** Manifest0 joined
[02:54] *** cpan-p6 left
[02:56] *** netrino joined
[03:01] *** roguelazer left
[03:02] *** cpan-p6 joined
[03:02] *** cpan-p6 left
[03:02] *** cpan-p6 joined
[03:03] *** roguelazer joined
[03:11] *** Manifest0 left
[03:13] *** Guest10 joined
[03:14] *** Guest10 left
[03:17] *** Manifest0 joined
[03:22] *** Manifest0 left
[03:24] *** gfldex joined
[03:27] *** Manifest0 joined
[03:29] *** netrino left
[03:35] *** Manifest0 left
[03:35] *** netrino joined
[03:40] *** Manifest0 joined
[03:45] *** Manifest0 left
[03:48] <cpan-p6> New module released to CPAN! Cofra (0.1.1) by 03HANENKAMP

[03:49] *** Manifest0 joined
[03:50] *** hythm joined
[03:56] *** Manifest0 left
[04:01] *** jeromelanteri left
[04:02] *** Manifest0 joined
[04:04] *** jeromelanteri joined
[04:07] *** johnjohn101 joined
[04:08] *** netrino left
[04:14] *** netrino joined
[04:19] *** Manifest0 left
[04:21] *** johnjohn101 left
[04:24] *** Manifest0 joined
[04:33] *** Manifest0 left
[04:38] *** Manifest0 joined
[04:42] <hythm> is there equivalent to `callsame` and `callwith` (not for dmulti dispatch) but for individual methods or subs, (instead of writing the name of the method or sub again)?  

[04:47] *** Manifest0 left
[04:47] *** netrino left
[04:50] <hythm> p6: sub s ( $i ) { say $i; return if $i == 7; samewith $i + 1 }; s 1

[04:50] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤2␤3␤4␤5␤6␤7␤»

[04:51] <hythm> nvm, its working already

[04:52] *** Manifest0 joined
[04:53] *** netrino joined
[04:56] <hythm> p6: class C { method m ( $i ) { say $i; return if $i == 7; samewith: $i + 1 } }; C.new.m

[04:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in method m at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[04:58] *** SqrtNegInf left
[05:00] *** Manifest0 left
[05:01] <hythm> ^ does it work for methods though?

[05:05] *** Manifest0 joined
[05:10] *** Manifest0 left
[05:15] *** Manifest0 joined
[05:20] *** Manifest0 left
[05:25] *** Manifest0 joined
[05:26] *** netrino left
[05:32] *** netrino joined
[05:33] *** Manifest0 left
[05:36] *** jeromelanteri left
[05:37] *** Manifest0 joined
[05:46] *** Manifest0 left
[05:51] *** Manifest0 joined
[05:55] *** Manifest0 left
[06:04] *** Manifest0 joined
[06:05] *** netrino left
[06:09] *** eseyman left
[06:10] *** eseyman joined
[06:11] *** netrino joined
[06:13] <gfldex> hythm: see https://docs.perl6.org/language/variables#&?ROUTINE

[06:17] *** Manifest0 left
[06:19] <hythm> thanks gfldex, checking...

[06:24] *** Manifest0 joined
[06:26] *** robertle joined
[06:26] *** jmerelo joined
[06:30] *** Manifest0 left
[06:31] *** hythm left
[06:33] *** leont joined
[06:39] *** Manifest0 joined
[06:39] *** vrurg left
[06:44] *** netrino left
[06:45] *** Manifest0 left
[06:50] *** netrino joined
[06:51] *** Manifest0 joined
[07:08] *** Manifest0 left
[07:14] *** Manifest0 joined
[07:20] *** aindilis left
[07:21] *** Manifest0 left
[07:23] *** netrino left
[07:25] *** aindilis joined
[07:26] *** Manifest0 joined
[07:29] *** netrino joined
[07:36] *** Manifest0 left
[07:37] <Geth> ¦ doc: b85bfd3974 | (JJ Merelo)++ | doc/Type/Any.pod6

[07:37] <Geth> ¦ doc: Changes and qualifies links

[07:37] <Geth> ¦ doc: 

[07:37] <Geth> ¦ doc: These subs were moved away from List since they are actually not

[07:37] <Geth> ¦ doc: defined there. Changed links, eliminated sub definition from

[07:37] <Geth> ¦ doc: Any. Closes #2834

[07:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b85bfd3974

[07:37] <synopsebot> Link: https://doc.perl6.org/type/Any

[07:40] *** Manifest0 joined
[07:43] *** nadim_ joined
[07:44] *** Manifest0 left
[07:45] *** leont left
[07:46] <cpan-p6> New module released to CPAN! Term::TablePrint (1.4.8) by 03KUERBIS

[07:46] <cpan-p6> New module released to CPAN! Term::Form (1.2.5) by 03KUERBIS

[07:46] <cpan-p6> New module released to CPAN! Term::Choose (1.5.7) by 03KUERBIS

[07:46] <cpan-p6> New module released to CPAN! Term::Choose::Util (1.2.8) by 03KUERBIS

[07:48] *** rindolf joined
[07:51] *** Manifest0 joined
[07:59] *** Manifest0 left
[08:03] *** netrino left
[08:04] *** Manifest0 joined
[08:08] *** netrino joined
[08:09] *** Manifest0 left
[08:14] *** Manifest0 joined
[08:32] *** gfldex left
[08:33] *** Manifest0 left
[08:36] *** gfldex joined
[08:37] *** lgandras joined
[08:39] *** Manifest0 joined
[08:41] *** netrino left
[08:41] *** gfldex left
[08:42] <Geth> ¦ doc: 63490e6d5a | (JJ Merelo)++ | assets/sass/_jquery-ui.scss

[08:42] <Geth> ¦ doc: Debugging CSS, refs #2837

[08:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/63490e6d5a

[08:42] <Geth> ¦ doc: d69b311217 | (JJ Merelo)++ | 2 files

[08:42] <Geth> ¦ doc: Eliminates CSS errors in Firefox

[08:42] <Geth> ¦ doc: 

[08:42] <Geth> ¦ doc: This closes #2837. Checked #2836, still failing in the same way.

[08:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d69b311217

[08:47] *** Manifest0 left
[08:47] *** netrino joined
[08:52] *** Manifest0 joined
[08:53] <squashable6> 🍕 lizmat++ wrote a comment on “Possible slowdown in is-prime”: https://github.com/rakudo/rakudo/issues/2945#issuecomment-498012336

[08:56] <lizmat> weekly: https://digitalbarbedwire.com/2019/06/01/converting-decimal-to-roman-numbers-in-perl-6/

[08:56] <notable6> lizmat, Noted!

[08:59] *** gfldex joined
[09:01] *** Manifest0 left
[09:02] *** lgandras_ joined
[09:04] *** lgandras left
[09:05] *** gfldex left
[09:06] *** Manifest0 joined
[09:12] *** Manifest0 left
[09:13] *** netrino_ joined
[09:14] *** netrino left
[09:18] *** Manifest0 joined
[09:27] *** Manifest0 left
[09:32] *** Manifest0 joined
[09:32] *** gfldex joined
[09:32] <squashable6> 🍕 lizmat++ wrote a comment on “.reverse takes time when it probably shouldn't”: https://github.com/rakudo/rakudo/issues/2925#issuecomment-498014999

[09:35] <squashable6> 🍕 lizmat++ wrote a comment on “.reverse takes time when it probably shouldn't”: https://github.com/rakudo/rakudo/issues/2925#issuecomment-498015185

[09:46] *** Manifest0 left
[09:53] *** Manifest0 joined
[09:57] *** Manifest0 left
[10:01] *** BigBadaboom joined
[10:02] <BigBadaboom> Well, hello you beautiful people

[10:02] *** Manifest0 joined
[10:04] <BigBadaboom> is there a tool to bootstrap a new module? i'm looking at zef but dont see an option like "zef new"

[10:05] *** adu joined
[10:06] <jmerelo> BigBadaboom: you're looking for App::Mi6

[10:11] *** Manifest0 left
[10:11] <BigBadaboom> Looks promising. Tx

[10:15] *** BigBadaboom left
[10:15] *** Manifest0 joined
[10:23] *** Manifest0 left
[10:27] *** Manifest0 joined
[10:32] *** Manifest0 left
[10:37] *** Manifest0 joined
[10:42] *** demanuel left
[10:44] *** pecastro joined
[10:50] *** Manifest0 left
[10:55] *** domidumont joined
[10:55] *** Manifest0 joined
[10:57] *** domidumont left
[11:00] *** gfldex left
[11:08] *** Manifest0 left
[11:13] *** Manifest0 joined
[11:16] *** gfldex joined
[11:21] *** lgandras_ left
[11:21] *** Manifest0 left
[11:23] <squashable6> 🍕 MasterDuke17++ wrote a comment on “Possible slowdown in is-prime”: https://github.com/rakudo/rakudo/issues/2945#issuecomment-498022281

[11:28] *** Manifest0 joined
[11:32] *** Manifest0 left
[11:38] *** Manifest0 joined
[11:42] *** Manifest0 left
[11:45] *** Sgeo_ left
[11:46] *** Sgeo_ joined
[11:46] *** aborazmeh joined
[11:46] *** aborazmeh left
[11:46] *** aborazmeh joined
[11:48] *** Manifest0 joined
[11:49] *** dustinm` left
[11:58] *** gfldex left
[12:17] *** Manifest0 left
[12:22] *** Manifest0 joined
[12:31] *** Manifest0 left
[12:37] *** Manifest0 joined
[12:40] *** gfldex joined
[12:45] *** aborazmeh left
[12:46] *** veesh left
[12:55] *** Manifest0 left
[12:56] *** gfldex left
[13:00] *** Manifest0 joined
[13:07] *** Manifest0 left
[13:07] *** niceperl joined
[13:11] *** veesh joined
[13:13] *** Manifest0 joined
[13:19] *** veesh left
[13:22] *** veesh joined
[13:23] *** gfldex joined
[13:25] *** Manifest0 left
[13:29] *** Manifest0 joined
[13:34] *** Manifest0 left
[13:39] *** Manifest0 joined
[13:44] *** gfldex left
[13:44] *** Manifest0 left
[13:45] *** gfldex joined
[13:45] *** antoniogamiz joined
[13:48] *** Manifest0 joined
[13:58] *** Manifest0 left
[14:03] *** Manifest0 joined
[14:07] *** Manifest0 left
[14:13] *** Manifest0 joined
[14:16] *** jeromelanteri joined
[14:17] *** cpan-p6 left
[14:18] *** Manifest0 left
[14:20] *** molaf joined
[14:22] *** kurahaupo1 left
[14:23] *** Manifest0 joined
[14:24] *** veesh left
[14:25] *** veesh joined
[14:26] *** cpan-p6 joined
[14:26] *** cpan-p6 left
[14:26] *** cpan-p6 joined
[14:32] *** veesh left
[14:33] *** veesh joined
[14:37] *** dolmen joined
[14:40] *** veesh left
[14:42] *** veesh joined
[14:44] *** Manifest0 left
[14:50] *** Manifest0 joined
[15:00] <bfisher> Guile

[15:01] <bfisher> Python

[15:06] *** dolmen left
[15:09] <bfisher> maxima

[15:09] *** shameen left
[15:10] <bfisher> integrate(sqrt(16*t^2 + 9*t^4), t, 0, 2);

[15:10] <bfisher> factor(%);

[15:12] *** jeromelanteri left
[15:15] <AlexDaniel> bfisher: sorry?

[15:15] *** Manifest0 left
[15:19] *** Manifest0 joined
[15:20] <antoniogamiz> » operator is sooo useful

[15:21] <bfisher> quit();

[15:21] <bfisher> clear 

[15:22] *** bfisher left
[15:26] *** zakharyas joined
[15:35] *** Manifest0 left
[15:40] *** Manifest0 joined
[15:42] <antoniogamiz> AlexDaniel: is possible that a hash does not find some of its keys?

[15:42] <antoniogamiz> I'm running the same code and sometimes it does not find the key I'm consulting

[15:42] <AlexDaniel> antoniogamiz: O_O

[15:43] <AlexDaniel> antoniogamiz: that sounds too bad to be a bug :)

[15:43] <AlexDaniel> antoniogamiz: could it be an issue in your code?

[15:43] <antoniogamiz> even I'm printing the keys before and it's there

[15:43] <AlexDaniel> hmmm… can we see the code?

[15:44] <moritz> antoniogamiz: might be something like a non-printable character (like a zero-width space) that you don't notice?

[15:45] <antoniogamiz> here it is: https://gist.github.com/antoniogamiz/992945353cb9fab964cc63a98e8aa6c2

[15:47] <antoniogamiz> here a screenshot: https://paste.pics/5POHD

[15:47] <antoniogamiz> moritz: mmm I dont think, but maybe? idk

[15:48] <antoniogamiz> btw, pretty cool all your work in docs

[15:49] *** niceperl left
[15:51] <moritz> antoniogamiz: ok, so it looks like the hash access isn't the problem. Sometimes I get "No such method 'name' for invocant of type 'Any'. Did you mean any of these?"

[15:52] <moritz> antoniogamiz: which means that .super must have returned an empty list

[15:52] <antoniogamiz> oh you're right :ooo

[15:52] <antoniogamiz> but that still quite strange because it should work always mmm

[15:52] <moritz> agreed

[15:53] <antoniogamiz> I mean is the same code xd

[15:56] <moritz> so, either there's some bug in rakudo, or Perl6::TypeGraph has some non-deterministic behavior

[15:58] <antoniogamiz> yep :/

[15:59] <moritz> antoniogamiz: if I remove all sections except the first one from test-type-graph, it triggers the same bug

[16:00] *** lgandras_ joined
[16:00] <antoniogamiz> mmmm

[16:02] <jmerelo> antoniogamiz: is that code also here? https://github.com/antoniogamiz/Perl6-TypeGraph

[16:02] <moritz> (fwiw I'm testing with Perl6::TypeGraph from the perl6/doc repo)

[16:02] <antoniogamiz> not yet

[16:03] <jmerelo> antoniogamiz: add the test there, please, even if does not pass. Easier to test it that way.

[16:03] <antoniogamiz> moritz: I've done the same and also happens, with the same input

[16:03] <antoniogamiz> jmerelo: ok

[16:05] <moritz> and the weird thing is that the code that applies the "Any" superclass is super simple

[16:05] <moritz> hm

[16:06] <moritz> I've added some debugging output, and this is what I get when I run it multiple times: http://perlpunks.de/paste/show/5cf3f3eb.1160.116

[16:07] <moritz> so it seems that the application of superclasses is in random order, and doesn't always work for all classes

[16:07] <moritz> and I know why :(

[16:07] <moritz> or maybe not...

[16:08] <moritz> but the application of superclasses happens while iterating %.types.values, which is in random order, and it modifies the elements

[16:08] <moritz> and at least the @roles iteration can add superclasses

[16:09] <moritz> so it would be safer to do the Any default in a separate iteration

[16:09] <antoniogamiz> moritz: ty for the help, I will do that :)

[16:09] <moritz> no, that's not it, since it's even random when I remove roles from the example file :(

[16:10] <antoniogamiz> :,(

[16:11] <jmerelo> moritz: the QAST is a hash, right? It should be random...

[16:11] <moritz> jmerelo: yes

[16:11] *** cpage joined
[16:15] <moritz> fuuuu

[16:15] <moritz> I think I know why, volume 2

[16:15] <moritz> so, $t.super.append: $get-type('Any') can modify %.types

[16:16] <moritz> because if Any hasn't been parsed, $get-type inserts Any into %.types

[16:16] <moritz> and that messes up the iterator over %.types

[16:16] <moritz> which leads to one key being iterated over twice, and one key being missed

[16:17] <antoniogamiz> so initializing %.types with a Perl6::Type of Any should fix it right?

[16:17] <moritz> antoniogamiz: it seems you've found a bug that only happens when there is no class "Any" in the type graph

[16:17] <jmerelo> antoniogamiz: you shouldn't use % as a lexical variable

[16:17] *** ravenousmoose joined
[16:17] <moritz> antoniogamiz: either that, or assert that %.types<Any> exists after the initial parse

[16:17] <moritz> though initializing with Any sounds cleaner

[16:18] *** ravenousmoose left
[16:18] <antoniogamiz> mm yep, I will do that then 

[16:18] <jmerelo> moritz: still. $get-type has side effects. 

[16:18] <antoniogamiz> jmerelo: what should I use then? $?

[16:18] <jmerelo> moritz, antoniogamiz: over a state variable

[16:18] *** ravenousmoose joined
[16:19] <moritz> huh?

[16:19] * moritz confused

[16:19] <jmerelo> antoniogamiz: simply have $get-type return a value, not modify a state variable %.

[16:20] <moritz> jmerelo: that's no good

[16:20] <jmerelo> antoniogamiz: that's kind of a cache, but still, you can cache some other way. Easiest way would be to make it a external routine and make it "is pure"

[16:20] *** sena_kun joined
[16:20] *** cpage left
[16:20] <jmerelo> antoniogamiz: you might get a bit of speed by caching, but I don't think it's worth the while.

[16:21] <moritz> if a type is referenced in multiple places and it's not in %.types, it will create several instance of it

[16:22] <jmerelo> Ah, OK, I'm being dumb here

[16:23] <jmerelo> anyway, better not to have side effects. You can assign %!types (better this way) outside the function.

[16:25] <jmerelo> Line 89 is kinda a hack, too. Imagine $t is a "Junction" or simply a class that's not core. 

[16:26] <moritz> anyway, that class is designed to deal with core, so it makes some assumptions

[16:26] <moritz> so, there are generally two ways to deal with that:

[16:26] <moritz> 1) if it detects those assumptions don't hold, die instead of introducing subtle bugs

[16:27] <moritz> 2) harden it do not make those assumptions

[16:27] <moritz> 2) is harder, but might be necessary depending on intended future use cases

[16:28] <jmerelo> moritz: the basic idea is to have a tested, documented version of what's in there for use in documentation, in general. Could be used, in principle, outside perl6/doc

[16:28] <antoniogamiz> moritz: the future use cases is to delete type-graph.txt

[16:28] <moritz> antoniogamiz: then it doesn't make sense to investigate much effort into it

[16:28] <jmerelo> moritz: I mean, right now it's only perl6/doc the one that draws pretty graphs, but imagine something complicated like Cro or Mojo (for Perl 6). Automatically generating a chart might help.

[16:29] <antoniogamiz> jmerelo: if I declare it as %!types then it can be accessed 

[16:29] <ugexe> maybe im missing something, but `for %.types.values` isn't going to be deterministic 

[16:29] <antoniogamiz> cannot from outside*

[16:29] <moritz> ugexe: that's known and not the point

[16:29] <ugexe> ok, im still trying to catch up

[16:29] *** leont joined
[16:29] <moritz> ugexe: the problem is that the code modifies %!types during iteration, under (admittedly undocumented) circumstances

[16:29] <moritz> that confuses the iterator

[16:29] <jmerelo> antoniogamiz: well, it's hidden but you probably want that. Depends on what you really want.

[16:29] <ugexe> ah ok

[16:30] <antoniogamiz> jmerelo: $typegraph.types is used a lot in htmlify

[16:31] <moritz> m: my @keys = <a b c d e f>; my %h = @keys Z=> 1; for %h { %h<g> = 1 if $_ eq 'c'; say $_ }

[16:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «a => 1␤»

[16:31] <jmerelo> antoniogamiz: Ah, OK. Let's leave it that way. Anyway, that you declare it like that does not mean you can't use it like %!types. Quite the opposite.

[16:31] <moritz> m: my @keys = <a b c d e f>; my %h = @keys Z=> 1; for %h.values { %h<g> = 1 if $_ eq 'c'; say $_ }

[16:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤»

[16:31] <moritz> m: my @keys = <a b c d e f>; my %h = @keys Z=> @keys; for %h.values { %h<g> = 1 if $_ eq 'c'; say $_ }

[16:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «f␤a␤e␤d␤b␤c␤»

[16:31] <moritz> m: my @keys = <a b c d e f>; my %h = @keys Z=> @keys; for %h.values { %h<g> = 1 if $_ eq 'c'; say $_ }

[16:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «d␤a␤f␤b␤c␤e␤»

[16:31] <antoniogamiz> jmerelo: I know but you still need to be able to do .types

[16:31] <moritz> m: my @keys = <a b c d e f>; my %h = @keys Z=> @keys; for %h.values { %h<g> = 1 if $_ eq 'c'; say $_ }

[16:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «f␤c␤b␤d␤e␤a␤1␤»

[16:32] <moritz> you see that this last time, it iterated over the 'g' key, but not the other times

[16:32] <jmerelo> antoniogamiz: that depends on how you declare it. You can still declare it the way it is, but use it like %!types. 

[16:33] <antoniogamiz> aaaah ok ok, sorry I didnt get it

[16:34] <antoniogamiz>         %.types{"Any"} = Perl6::Type.new(:name("Any"));

[16:34] <ugexe> yeah ok. although now that i'm fully aware its not exactly surprising. getting to the fully aware part was not immediately intuitive

[16:34] <antoniogamiz> %!types{"Any"} = Perl6::Type.new(:name("Any"));

[16:34] <antoniogamiz> that solves the problem, as moritz said

[16:36] <jmerelo> antoniogamiz++ moritz++

[16:37] <antoniogamiz> mm unit class Perl6::sth {...code...}, the syntax is correct?

[16:38] *** cpage joined
[16:38] <jmerelo> no curly braces

[16:38] <antoniogamiz> oh

[16:38] <jmerelo> The whole point of unit is not to use curly braces

[16:38] *** lgandras_ left
[16:39] <ugexe> its really to differentiate it from perl 5

[16:39] <ugexe> class Foo; used to work

[16:44] <antoniogamiz> o/

[16:44] *** antoniogamiz left
[16:51] *** Manifest0 left
[16:56] *** rindolf left
[16:56] *** Manifest0 joined
[17:00] *** cpan-p6 left
[17:01] *** Manifest0 left
[17:04] *** cpan-p6 joined
[17:04] *** cpan-p6 left
[17:04] *** cpan-p6 joined
[17:06] *** Manifest0 joined
[17:17] *** Manifest0 left
[17:19] *** andrzejku joined
[17:23] *** Manifest0 joined
[17:23] *** khisanth_ left
[17:24] <cpan-p6> New module released to CPAN! FindBin (0.4.0) by 03LEMBARK

[17:29] *** MilkmanDan left
[17:30] *** Manifest0 left
[17:31] *** MilkmanDan joined
[17:34] *** Manifest0 joined
[17:35] <andrzejku> hey, people

[17:38] *** khisanth_ joined
[17:42] <jmerelo> andrzejku: hey!

[17:43] <andrzejku> jmerelo, I took a risk to keep learning Perl6 again :D even if there no job

[17:43] <andrzejku> but actually I think to try to use it instead of shell

[17:43] <andrzejku> do you think it is quite good substitution?

[17:43] *** MilkmanDan left
[17:44] *** MilkmanDan joined
[17:45] <sena_kun> with an ability to run jobs nicely and various constructions out of the box - I'd say "yes", but shell is much more widely accepted, of course

[17:46] <andrzejku> sena_kun, I know however I tried to learn shell more in deep but it looks very hard

[17:46] <andrzejku> to write smth

[17:46] <andrzejku> it is not intuitive

[17:47] <sena_kun> can't disagree with this. :) (though there are people who can)

[17:51] *** Manifest0 left
[17:58] *** Manifest0 joined
[18:03] *** Manifest0 left
[18:08] *** Manifest0 joined
[18:12] *** Manifest0 left
[18:13] *** patrickb joined
[18:13] <Xliff> \o

[18:13] <Xliff> https://github.com/Xliff/p6-Clutter/commit/a2c0876262b207bb3e10fdc317a0870e0aa79647

[18:15] <jmerelo> andrzejku: it's quite good for everything... It gives you a very rich set of tools for OS automation...

[18:15] <jmerelo> Xliff: congratulations! Those are a lot of lines of code :-)

[18:15] <Xliff> jmerelo: You have no idea! ;)

[18:15] <Xliff> jmerelo: Thanks much tho!

[18:18] *** Manifest0 joined
[18:20] <Xliff> jmerelo: https://docs.google.com/spreadsheets/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/edit#gid=1199858184

[18:20] *** gfldex left
[18:21] <Xliff> jmerelo: This link might work better: https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?ths=true

[18:23] <AlexDaniel> sena_kun: I mean… piping is really hard

[18:24] <AlexDaniel> sena_kun: when compared to shells, of course

[18:24] <sena_kun> AlexDaniel, when compared to shells, yes. Why not define a DSL? ;)

[18:24] <sena_kun> iirc in Haskell there is a just ok DSL for such a things. You can define a `|` operator and boom.

[18:24] <AlexDaniel> sena_kun: because I don't want to develop that myself :)

[18:24] <Xliff> jmerelo: 4th p6 related project I've taken over 10kloc, 5th if you include p6-GtkPlus

[18:27] <sena_kun> AlexDaniel, Perl 6 right now is not particularly a language one should take when afraid of writing things, though the situation improves over time, of course.

[18:29] <Xliff> sena_kun++

[18:29] <AlexDaniel> so are you saying that perl 6 is not for me? :)

[18:29] <Xliff> LOL

[18:30] * Xliff wonders if he should flee, or make popcorn.

[18:30] <ugexe> perl6 piping doesn't work on windows

[18:30] <Xliff> sena_kun: See https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?ths=true to see why I find your previous comment extremely humorous.

[18:31] <AlexDaniel> “You need permission”

[18:31] <Xliff> WTF?

[18:31] <Xliff> OK, then lets try.... 

[18:31] <Xliff> https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[18:33] <xinming> perl6: src/6model/sc.c:401: MVM_SC_WB_OBJ: Assertion `!(obj->header.flags & MVM_CF_FORWARDER_VALID)' failed.

[18:33] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3src/67⏏5model/sc.c:401: MVM_SC_WB_OBJ: Assertion␤»

[18:33] <camelia> ..rakudo-jvm 08b449e1a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3src/67⏏5model/sc.c:401: MVM_SC_WB_OBJ: Assertion␤»

[18:33] <xinming> I just encounter this once, Is this a big issue?

[18:34] <AlexDaniel> xinming: not sure, but it needs to be fixed

[18:34] *** gfldex joined
[18:34] *** johnjohn101 joined
[18:34] <xinming> I'll try if I can repeat the problem, Maybe because of memory error.

[18:37] <ugexe> seems like jit issue

[18:41] <sena_kun> AlexDaniel, not sure when I became a moderator allowing or forbidding usage of someting!

[18:44] *** adu left
[18:47] <xinming> It seems, the problem is in old version of Moar

[18:47] <xinming> I just compiled to the newest version, I don't see that anymore.

[18:48] *** gfldex left
[18:49] *** gfldex joined
[18:53] *** rindolf joined
[18:53] *** alnk left
[18:55] *** gfldex left
[18:57] *** jmerelo left
[19:00] *** gfldex joined
[19:05] *** Manifest0 left
[19:10] *** netrino_ left
[19:11] *** Manifest0 joined
[19:19] *** Manifest0 left
[19:21] *** Altai-man_ joined
[19:22] *** Altai-man_ left
[19:23] *** ufobat joined
[19:24] *** sena_kun left
[19:25] *** Manifest0 joined
[19:26] *** kurahaupo1 joined
[19:33] *** Cabanossi left
[19:33] *** andrzejku left
[19:38] *** vrurg joined
[19:44] *** netrino_ joined
[19:46] *** |oLa| left
[19:46] *** Cabanossi joined
[19:57] *** zakharyas left
[20:07] *** Manifest0 left
[20:10] *** ufobat_ joined
[20:11] *** cjkinni left
[20:12] *** ravenousmoose left
[20:14] *** Manifest0 joined
[20:14] *** ufobat left
[20:16] *** netrino_ left
[20:19] *** xinming_ joined
[20:20] *** kaare_ left
[20:20] *** kaare_ joined
[20:21] *** Manifest0 left
[20:22] *** xinming left
[20:23] *** netrino_ joined
[20:26] *** Manifest0 joined
[20:27] *** patrickb left
[20:29] *** gfldex left
[20:46] *** Manifest0 left
[20:51] *** Manifest0 joined
[20:56] *** netrino_ left
[20:56] *** khisanth_ left
[21:02] *** netrino_ joined
[21:04] *** Manifest0 left
[21:06] *** dougsp joined
[21:09] *** Manifest0 joined
[21:14] *** Manifest0 left
[21:19] *** khisanth_ joined
[21:21] *** Manifest0 joined
[21:30] *** gfldex joined
[21:35] *** netrino_ left
[21:39] *** gfldex left
[21:41] *** netrino_ joined
[21:41] *** gfldex joined
[21:42] *** sena_kun joined
[21:48] *** gfldex left
[21:48] *** gfldex joined
[21:54] *** Manifest0 left
[22:00] *** uzl joined
[22:00] <uzl> Hello, #perl6!

[22:00] *** Manifest0 joined
[22:01] <uzl> So I'm wondering how do I access a module documentation after it's installed.

[22:03] <uzl> I mean the doc created by the declarator blocks (#| and #=). I could access each module's doc (`PERL6LIB=lib p6doc lib/Module.pm6`) if I have the source but how would someone who just installed it would do it?

[22:06] *** gfldex left
[22:11] *** Manifest0 left
[22:13] *** gfldex joined
[22:14] *** netrino_ left
[22:18] *** Manifest0 joined
[22:18] *** Grauwolf left
[22:18] <uzl> I just remembered that you just specify module's full qualified name. 

[22:19] *** uzl left
[22:19] *** Grauwolf joined
[22:20] *** netrino_ joined
[22:24] *** Manifest0 left
[22:29] *** alnk joined
[22:29] *** Manifest0 joined
[22:34] *** Manifest0 left
[22:38] *** AlexDaniel left
[22:40] *** Manifest0 joined
[22:46] *** Manifest0 left
[22:52] *** netrino_ left
[22:54] *** Manifest0 joined
[22:58] *** Manifest0 left
[22:59] *** netrino_ joined
[22:59] *** pecastro left
[23:02] *** phogg left
[23:03] *** Manifest0 joined
[23:08] *** phogg joined
[23:11] *** MilkmanDan left
[23:13] *** MilkmanDan joined
[23:19] *** Manifest0 left
[23:27] *** Manifest0 joined
[23:31] <cpan-p6> New module released to CPAN! Ranker (0.0.1) by 03UZLUISF

[23:31] *** Manifest0 left
[23:31] *** netrino_ left
[23:36] *** Manifest0 joined
[23:38] *** netrino_ joined
[23:42] *** adu joined
[23:47] *** rindolf left
[23:47] *** leont left
[23:48] *** Manifest0 left
[23:50] *** vrurg left
[23:53] *** vrurg joined
[23:54] *** Manifest0 joined
