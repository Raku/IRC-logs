[00:00] *** reportable6 left
[00:00] *** pamplemousse joined
[00:01] *** reportable6 joined
[00:01] *** [particle]1 left
[00:02] *** nepugia left
[00:03] *** [particle] joined
[00:06] *** [particle]1 joined
[00:08] *** [particle] left
[00:09] *** aborazmeh joined
[00:09] *** aborazmeh left
[00:09] *** aborazmeh joined
[00:10] *** [particle]1 left
[00:11] *** dolmen left
[00:13] *** [particle] joined
[00:16] *** dolmen joined
[00:16] *** [particle]1 joined
[00:18] *** [particle] left
[00:20] *** dolmen left
[00:21] *** [particle] joined
[00:23] *** [particle]1 left
[00:24] *** [particle]1 joined
[00:25] *** [particle] left
[00:27] *** [particle] joined
[00:29] *** [particle]1 left
[00:36] *** [particle] left
[00:37] *** [particle] joined
[00:40] *** [particle]1 joined
[00:41] *** [particle] left
[00:45] *** [particle]1 left
[00:45] *** pamplemousse left
[00:46] *** [particle] joined
[01:02] <cpan-p6> New module released to CPAN! Console::Blackjack (1.0.1) by 03GDONALD

[01:19] *** Ven`` joined
[01:24] *** Ven`` left
[01:37] *** mowotter left
[01:39] *** pamplemousse joined
[01:44] *** noisegul_ joined
[01:44] *** pamplemousse_ joined
[01:47] *** noisegul left
[01:49] *** pamplemousse left
[01:50] *** Xliff_ joined
[01:51] *** Xliff_ left
[01:53] *** Xliff left
[02:04] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:14] *** pamplemousse_ left
[02:20] *** [particle] left
[02:20] *** [particle] joined
[02:21] *** Cabanossi left
[02:22] *** pilne left
[02:25] *** molaf joined
[02:27] *** Cabanoss- joined
[02:35] *** cpup joined
[02:37] *** dustinm` left
[02:46] *** dustinm` joined
[02:54] *** aborazmeh left
[02:57] *** dustinm` left
[02:58] *** dustinm` joined
[03:27] *** jaldhar_ joined
[03:52] *** jaldhar joined
[03:52] *** jaldhar_ left
[04:34] *** aeruder left
[04:35] *** aeruder joined
[04:43] *** curan joined
[04:56] *** jaldhar left
[04:56] *** jaldhar joined
[04:58] *** jaldhar left
[04:59] *** jaldhar joined
[05:24] *** jaldhar left
[05:24] *** jaldhar joined
[05:32] *** sena_kun joined
[05:35] *** sena_kun left
[05:43] *** [particle]1 joined
[05:45] *** [particle] left
[05:51] *** rindolf joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:02] *** ChanServ sets mode: +v reportable6

[06:03] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue "Perl" in the name "Perl 6" is confusing and irritating https://github.com/perl6/problem-solving/issues/81

[06:04] *** [particle] joined
[06:05] *** [particle]1 left
[06:10] *** [particle]1 joined
[06:11] *** [particle] left
[06:12] *** Woodi joined
[06:17] *** lizmat left
[06:28] <SmokeMachine> Is there the Riga’s opening TimToady’s vídeo available anywhere I could watch?

[06:35] *** [particle] joined
[06:35] *** [particle]1 left
[06:37] *** integfred joined
[06:38] <integfred> Hi, does anyone know if automake, openssl, and the linux kernel is able to build with rakudo perl?

[06:41] <integfred> i'm currently including perl5, but it uses cmd.exe to build using mingw, perhaps perl 6 is different in that it may be able to cross compile somewhat better, assuming it can build the above

[06:42] *** uid9164 joined
[06:44] *** AlexDaniel left
[06:45] *** [Sno] left
[06:46] <uid9164> <code>perl5 -e "my @a = split(',', 'a,b,c,d'); print @a[0];"  <output> a

[06:49] <uid9164> <code>perl -e "my @a = split('\s', 'a b c d'); print @a[1];" <output> b

[06:49] <uid9164> sorry

[06:50] <uid9164> <code> perl5 -e "my @a = split('\s', 'a b c d'); print @a[1];" <output> b

[06:50] <uid9164> <code> p6 -e "my @b = split('\s', 'a b c d'); say @b[1];" <output> (Any)

[06:51] <uid9164> How should I write the split pattern to get @b[1] = 'b' in perl6?

[06:53] <uid9164> It works in perl6 by typing "my @b = split(' ', 'a b c d'); say @b[1];"

[06:55] <uid9164> OK, I just felt confusing.

[06:59] <tadzik> SmokeMachine: it was a part of day1's '$' room livestream, but I think that video is down now for some reason

[07:00] <tadzik> I assume it was live while it was... live, and now we'll have to wait for it to be uploaded as a separate video

[07:00] <tadzik> otoh, room @ seems to be up

[07:01] <Geth> ¦ whateverable: 3bba6abff0 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6

[07:01] <Geth> ¦ whateverable: Use :!g as a workaround for sub s issue

[07:01] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/3bba6abff0

[07:03] *** AlexDaniel joined
[07:03] *** cpage left
[07:07] <tobs> integfred: Perl 6 is not a drop-in replacement for Perl 5. It won't be able to run these build scripts correctly.

[07:07] *** ttobioetiker joined
[07:08] *** Black_Ribbon joined
[07:08] <ttobioetiker> good morning all. I am preparing a docker image for a large perl6 project ... and I would like for it to be precompiled ... is there a way to just get everything precompiled, short of runnig the actuall application ?

[07:19] *** cygx joined
[07:20] *** lgtaube left
[07:21] <cygx> Hey, I'm famous: just got quoted in lizmat's keynote for calling Perl6 abysmally slow ;) 

[07:22] <SmokeMachine> tadzik: thanks!

[07:22] <SmokeMachine> AlexDaniel`: What mean "being involved on the project"? 

[07:28] *** cpan-p6 left
[07:28] *** cpan-p6 joined
[07:28] *** cpan-p6 left
[07:28] *** cpan-p6 joined
[07:29] *** cygx left
[07:30] *** cygx joined
[07:30] <cygx> ttobioetiker: https://gist.github.com/cygx/9b2b8add4b8ce4beb596def597b68999

[07:31] <cygx> it's not yet particularly user-friendly, but there's some related Google Summer of Code work being done right now

[07:35] *** chloekek joined
[07:47] *** Doc_Holliwood joined
[07:47] *** zakharyas joined
[07:50] *** AlexDaniel left
[08:05] <SmokeMachine> m: say "a\n\tb\n\t\tc\n".subst: /\s+/, " "

[08:05] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «a b␤            c␤␤»

[08:05] <SmokeMachine> is that expected?

[08:08] <SmokeMachine> m: say "a\n\tb\n\t\tc\n".subst: /\s+/, " ", :g # Im too dumb...

[08:08] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «a b c ␤»

[08:14] *** irdr left
[08:19] *** dolmen joined
[08:20] <kawaii> Is there anyone in the community doing Perl 6 streams at all? I haven't seen anyone doing it but figured it might have some interest.

[08:20] <kawaii> As in like, livestream working on a project or module.

[08:21] *** [Sno] joined
[08:30] *** [Sno] left
[08:32] <tadzik> SmokeMachine: quoting the #yapc: That's a Google thing. Long streams take longer to process and move to viewable after stream stops. Give them time to churn the data

[08:33] *** [Sno] joined
[08:42] *** AlexDaniel joined
[08:45] *** rindolf left
[08:52] *** [Sno] left
[08:55] *** lizmat joined
[08:58] *** veesh1 joined
[08:59] *** rindolf joined
[08:59] <discord6> <Aearnus> kawaii: that could be a lot of fun

[09:00] <discord6> <Aearnus> I'd be down

[09:02] *** ravenousmoose left
[09:02] *** rindolf left
[09:02] *** ravenousmoose joined
[09:02] *** rindolf joined
[09:03] <kawaii> Aearnus: well, I recently started using my Twitch channel, and had the idea of code-reviewing an old unfinished P6 project, and working on refactoring it on stream, could be interesting :)

[09:04] <discord6> <Aearnus> Yes! It's late here and I might not stick around tonight, but I'll shoot you a follow

[09:05] <AlexDaniel> SmokeMachine: well, being on that list means that you'd have to give your opinion on every such issue

[09:05] <AlexDaniel> SmokeMachine: so if you're doing perl6 stuff and want to be involved in that, you qualify :)

[09:06] <AlexDaniel> kawaii: right, well, I haven't seen anybody doing perl 6 streams yet

[09:06] <eiro> hello people. the download page of rakudo.org is probably outdated and i would like to add the guix package in the 3rd party. any repo for pull requests ?

[09:07] <kawaii> I don't think the rakudo.org site is public.

[09:07] <AlexDaniel> kawaii: I personally livestream sport events using pan-tilt-zoom cameras that are operated by perl6, but that's not what you were asking for :)

[09:07] <kawaii> At least, I've never seen a repo for it

[09:07] <eiro> neither did i 

[09:07] <AlexDaniel> https://github.com/perl6/rakudo.org

[09:07] <eiro> AlexDaniel: thanks 

[09:08] <eiro> i checked the rakudo namespace 

[09:08] *** lgtaube joined
[09:08] <SmokeMachine> AlexDaniel: is that list alphabetically ordered

[09:09] <AlexDaniel> yeah, it's also weird becase moarvm website is in moarvm org https://github.com/MoarVM/moarvm.org

[09:09] <kawaii> AlexDaniel: haha, not quite but I think I'll schedule a date and time for doing a trial stream just to see how it works out, then I can thinly veil my requests for help without annoying the IRC too much ;)

[09:09] <AlexDaniel> but that inconsistency is known and we'll probably move it soon

[09:09] <AlexDaniel> kawaii: sounds great

[09:09] <AlexDaniel> SmokeMachine:

[09:09] <AlexDaniel> SmokeMachine: yeat

[09:10] <AlexDaniel> yeah*

[09:10] <AlexDaniel> :)

[09:10] <SmokeMachine> PRed

[09:12] <chloekek> Oh cool, Rakudo in Guix.

[09:12] <eiro> chloekek: yeah :) but i spot a bug in it: NativeCall don't find the .so files

[09:12] <eiro> very frustrating

[09:13] <AlexDaniel> SmokeMachine: hmm, I can't see it yet?

[09:13] <Geth> ¦ problem-solving: FCO++ created pull request #82: Add my name to the list

[09:13] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/pull/82

[09:13] <chloekek> eiro: That's a feature if the .so is not an input to the build description of the Perl 6 program in question.

[09:13] <eiro> (there was the same on debian package and it's fixed now)

[09:14] <SmokeMachine> sorry... I should have clicked on that button... :)

[09:14] *** Black_Ribbon left
[09:14] <eiro> a feature ? how so? my code just doesn't work anymore ...

[09:15] <kawaii> all bugs are features 

[09:15] <eiro> (so i have 2 rakudo on my machine: the debian one (outdated) and the guix one (without NativeCall))

[09:15] <chloekek> Depending on files being there without them being mentioned in the build script makes the build unreproducible. :)

[09:16] <chloekek> But if NativeCall doesn't work at all then that's bad.

[09:16] <eiro> kawaii: protecting myself from my own sins... like a big brother

[09:16] <chloekek> I maintain a Nix package for Rakudo and NativeCall works just fine, what does the Guix one look like?

[09:17] <eiro> well ... i just made guix edit rakudo to see it. i'm waiting for the source

[09:18] <eiro> please let me some seconds

[09:18] <chloekek> eiro.seconds++

[09:18] <tadzik> :P

[09:19] *** Geth left
[09:19] *** Geth joined
[09:19] <Geth> ¦ problem-solving: kawaii++ created pull request #83: Adding kawaii to the reviewers list

[09:19] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/pull/83

[09:20] <Doc_Holliwood> where do i find the sourcecode of the Promise module=

[09:20] <Doc_Holliwood> ?

[09:20] <eiro> chloekek: i'm talking with the maintainer right now on #guix

[09:20] <tadzik> Doc_Holliwood: https://github.com/rakudo/rakudo/blob/master/src/core/Promise.pm6 I think

[09:20] <chloekek> Doc_Holliwood: https://github.com/rakudo/rakudo/blob/master/src/core/Promise.pm6

[09:22] *** lizmat left
[09:24] *** efraim joined
[09:24] <AlexDaniel> SmokeMachine++ kawaii++

[09:25] <efraim> hello everyone!

[09:25] <eiro> chloekek: finally please give me some minutes :)

[09:25] *** pat_js joined
[09:26] <eiro> people: efraim is the maintainer of the guix package 

[09:26] <eiro> efraim: thanks for your work and thanks for joining 

[09:26] <efraim> no problem, I figured I should take a look at it

[09:27] <SmokeMachine> \o/

[09:27] <efraim> here's the package I created from SDL2::Raw http://dpaste.com/1Z31KW1

[09:28] <efraim> and this is the build-system it uses https://git.savannah.gnu.org/cgit/guix.git/tree/guix/build/rakudo-build-system.scm

[09:28] <Geth> ¦ problem-solving: 6a52fafa65 | (Fernando Correa de Oliveira)++ (committed using GitHub Web editor) | README.md

[09:28] <Geth> ¦ problem-solving: Add my name to the list

[09:28] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/6a52fafa65

[09:28] <Geth> ¦ problem-solving: 1b4a81e0c3 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | README.md

[09:28] <Geth> ¦ problem-solving: Merge pull request #82 from FCO/patch-1

[09:28] <Geth> ¦ problem-solving: 

[09:28] <Geth> ¦ problem-solving: Add my name to the list

[09:28] <Geth> ¦ problem-solving: Welcome!

[09:28] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/1b4a81e0c3

[09:30] <Geth> ¦ problem-solving/revert-82-patch-1: 10b7c14384 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | README.md

[09:30] <Geth> ¦ problem-solving/revert-82-patch-1: Revert "Add my name to the list"

[09:30] <Geth> ¦ problem-solving/revert-82-patch-1: review: https://github.com/perl6/problem-solving/commit/10b7c14384

[09:30] *** Ven`` joined
[09:31] <cygx> masak's live...

[09:31] *** pilne joined
[09:32] <efraim> for completeness our rakudo package is here: https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/perl6.scm#n166

[09:33] *** Ven`` left
[09:33] <efraim> and the bug report with my notes https://debbugs.gnu.org/cgi/bugreport.cgi?bug=36973

[09:35] <tadzik> "Perl 6 Userspace Explorer" reminds me of the good old Perl 6 mmorpg

[09:35] <tadzik> which of course is masak's: http://strangelyconsistent.org/blog/perl-6-is-my-mmorpg

[09:37] <Geth> ¦ problem-solving: 4c72730d38 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[09:37] <Geth> ¦ problem-solving: Revert "Merge pull request #82 from FCO/patch-1"

[09:37] <Geth> ¦ problem-solving: 

[09:37] <Geth> ¦ problem-solving: This reverts commit 1b4a81e0c31f3bb458347b3feab834bbca8d5ad5, reversing

[09:37] <Geth> ¦ problem-solving: changes made to 164f37f841186a4b678ad2fbc524ea42b4cdae5b.

[09:37] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/4c72730d38

[09:37] <eiro> meeting. have to leave

[09:37] <eiro> cya

[09:40] <Geth> ¦ problem-solving/merge-mishap: 7af1dfc3f9 | (Fernando Correa de Oliveira)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | README.md

[09:40] <Geth> ¦ problem-solving/merge-mishap: Add my name to the list

[09:40] <Geth> ¦ problem-solving/merge-mishap: review: https://github.com/perl6/problem-solving/commit/7af1dfc3f9

[09:40] *** [Sno] joined
[09:44] <Geth> ¦ problem-solving: AlexDaniel++ created pull request #84: Add FCO to the list

[09:44] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/pull/84

[09:44] <AlexDaniel> SmokeMachine: sorry for the noise :)

[09:45] *** dolmen left
[09:52] <Doc_Holliwood> I struggled all morning trying to find out how to add a timeout to my code from yesterday. But now the penny dropped. 

[09:52] <Doc_Holliwood> https://pastebin.com/B3WpFfrg

[09:56] <Doc_Holliwood> I expected Promise.anyof( PromiseIn( $timeout ), $promise ) to return whatever Promise is kept first, which is bollocks of course

[09:56] *** dolmen joined
[09:58] *** Ven`` joined
[10:01] *** Ven`` left
[10:12] *** Ven`` joined
[10:12] *** Ven`` left
[10:18] *** veesh1 left
[10:19] *** pilne left
[10:21] *** AlexDaniel left
[10:23] *** chloekek left
[10:23] *** chloekek joined
[10:24] *** AlexDaniel joined
[10:33] *** [Sno] left
[10:34] *** AlexDaniel is now known as `|AlexDaniel

[10:35] *** `|AlexDaniel is now known as AlexDaniel

[10:36] *** noisegul_ is now known as noisegul

[10:38] *** integfred left
[10:44] *** dolmen left
[10:45] *** Ven`` joined
[10:51] *** Ven`` left
[10:54] *** Ven`` joined
[10:58] <ugexe> of course!

[10:58] *** AlexDaniel left
[10:58] *** sena_kun joined
[11:00] *** marcel_ joined
[11:00] *** sena_kun left
[11:04] *** Ven`` left
[11:05] <SmokeMachine> AlexDaniel`: np!

[11:16] *** Ven`` joined
[11:22] *** uid9164 left
[11:24] <Kaiepi> how do you handle code examples that need to throw in the docs?

[11:24] *** lizmat joined
[11:28] *** zakharyas left
[11:29] <Kaiepi> nvm, checked the exceptions page

[11:29] *** Ven`` left
[11:31] *** _jrjsmrtn left
[11:32] *** __jrjsmrtn__ joined
[11:32] *** aborazmeh joined
[11:32] *** aborazmeh left
[11:32] *** aborazmeh joined
[11:34] <Geth> ¦ whateverable: dec2b50901 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xt/tellable.t

[11:34] <Geth> ¦ whateverable: Add normalization tests

[11:34] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/dec2b50901

[11:34] *** AlexDaniel joined
[11:41] *** dolmen joined
[11:42] *** [Sno] joined
[11:49] *** mowcat joined
[11:49] *** dolmen left
[11:52] *** dolmen joined
[11:57] *** dolmen left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:00] *** ChanServ sets mode: +v reportable6

[12:08] *** lizmat left
[12:10] *** Guest73 joined
[12:11] *** dolmen joined
[12:19] *** dolmen left
[12:24] <El_Che> hopefully yesterday video will be up soon. Saw half of jnthn's talk and want to see the rest :)

[12:24] <El_Che> (there was a copyright complain so google took it offline. it will be up after shadowcat van chop the videos)

[12:25] <timotimo> damn

[12:25] <tadzik> ugh

[12:25] <timotimo> i hope there will be a big shitstorm against google for this

[12:26] <El_Che> tadzik's one is still hope

[12:26] <tadzik> how many people can we rally up to make a peertube for this?

[12:26] <El_Che> also saw half last night

[12:26] <tadzik> because frankly, fuck google

[12:26] <El_Che> some ranting about OO :)

[12:26] <timotimo> i'm just now watching tadzik's talk about moose

[12:26] <timotimo> https://www.youtube.com/watch?v=u12t4PiM7pQ&t=65s

[12:26] <El_Che> at 1 am I decided that tadzik would forgive me if I watched the rest today and went to bed :)

[12:27] <El_Che> (now starting liz talk)

[12:27] <tadzik> El_Che: I will :)

[12:27] <tadzik> in fact I already have! :P

[12:27] <El_Che> :)

[12:27] <tadzik> feel free to poke me about the details or whatnot

[12:27] <El_Che> it was interesting so far

[12:28] <El_Che> sound was sometimes less when your shirt touched the mic :)

[12:28] <El_Che> next time use a mic like madonna or lady gaga :)

[12:29] *** dolmen joined
[12:29] <tadzik> hehe

[12:29] <tadzik> I heard some complaints about the audio, yeah

[12:30] <tadzik> from what I've heard the provided microphones weren't stellar

[12:32] *** dolmen left
[12:33] *** pat_js left
[12:34] <timotimo> there's some microphone-rubs-against-fabric noise, or maybe it's radio trouble

[12:34] * timotimo briefly rolls a "takes" syntax for perl6 around in his head

[12:35] <timotimo> hmm, immootability

[12:37] *** [Sno] left
[12:37] <chloekek> timotimo: What is takes?

[12:38] <timotimo> one point in tadzik's talk is that people tend to abuse "has" to specify arguments to the constructor, even when the things that go there are not actually needed to be stored in the object

[12:39] <timotimo> in a later slide he shows a "needs" syntax which is much like what i would have imagined "takes" to do

[12:39] <timotimo> but in perl6, that's probably better done with multi submethod BUILD

[12:39] <timotimo> damn

[12:40] *** pat_js joined
[12:40] <timotimo> when tadzik says "i look like this, meet me in the hallway track if you have questions", he's outside the camera's view at that moment

[12:40] <timotimo> so how do i know if tadzik looked any different in that moment

[12:40] <timotimo> like, does tadzik have a physical manifestation for giving talks and one for haunting the hallways?

[12:41] <timotimo> there's no way to know

[12:42] <chloekek> I think a solution to this would be to better document new, bless, and BUILD.

[12:43] *** [Sno] joined
[12:43] <chloekek> I think the current design is ok but hard to grasp. It's not clear how to write custom constructors.

[12:44] <timotimo> yeah, the difference between "how easy is it to use" and "how easy it is to understand" is surprisingly vast for this

[12:45] <chloekek> Took me a long time to realize BUILD is called on each class in the hierarchy, with the fitting keyword arguments from bless.

[12:49] <timotimo> right

[12:50] *** sena_kun joined
[12:50] <sena_kun> El_Che, o/

[12:51] *** zakharyas joined
[12:51] <sena_kun> your wish was granted! (with some grammar mistakes alas)

[12:51] <El_Che> sena_kun: how was it? looking forward to see it

[12:51] <El_Che> (watching liz's talk)

[12:53] <sena_kun> El_Che, dunno, but some people have said to me it was pretty fine for the first time for someone without much experience, I didn't run out of time (wow), and I hope the mistakes were not fatal to express things. :)

[12:54] <El_Che> I am exited about your work, so I am sure it will be fine!

[12:54] <El_Che> and not being a native english speaker I get the extra trouble

[12:55] *** marcel_ left
[12:55] <sena_kun> El_Che, enjoy. :)

[12:55] <timotimo> not everybody can have learned an excellent english like me did

[12:56] *** nepugia joined
[12:56] <El_Che> ttps://www.youtube.com/watch?v=5035TY5RSpg <-- loved this scene

[12:56] <El_Che> https://www.youtube.com/watch?v=5035TY5RSpg <-- loved this scene

[12:56] <timotimo> ahaha

[12:56] <timotimo> yes, that was fantastic

[12:57] <sena_kun> timotimo, well, by now my written one is mostly fine or fine enough, but when it coems to speaking, it is like once in a year, lol, so my mouth just doesn't do right things. :S

[12:57] <timotimo> that actor was actually german, wasn't he?

[12:57] <sena_kun> s/coems/comes/

[12:58] <timotimo> i used to spend time on voice chat regularly with english speakers, i haven't done that in a long while

[13:02] <tadzik> https://tadzik.net/talks/perlcon-moose/ the last two slides show this

[13:02] *** AlexDaniel left
[13:02] <tadzik> needs vs has

[13:02] <chloekek> timotimo: what was this talk called? About needs.

[13:02] <tadzik> I don't like publishing slides in general; I feel like if they're useful without the talk itself then I've become a writer, not a speaker and I should've just stayed home

[13:03] <tadzik> chloekek: How Moose Made me a Bad Programmer, room @, day 1, first talk

[13:03] <jast> well, the published slides might help those who attended the talk recall the key points more easily

[13:03] <jast> I do agree with the general sentiment though

[13:04] <chloekek> tadzik: Thanks!

[13:04] <tadzik> good point; fair enough

[13:04] * chloekek never used moose, only bless and hashes

[13:05] <tadzik> chloekek: re documenting things better: absolutely. But I'd also like for the better thing to be easier to write in general, even if you know what you want to do :)

[13:05] <tadzik> so that you have to fight the tool if you want to do things wrong – not to do things right :)

[13:10] *** lucasb joined
[13:13] <tadzik> timotimo: right; Perl 6 has way more resources to do this right, mostly by having really powerful subroutine signatures

[13:13] <tadzik> perhaps in our case this is indeed a documentation/education problem :)

[13:14] <timotimo> we need a formal docucation

[13:14] <cygx> tadzik: not entirely

[13:14] <cygx> you still have to jump through hoops to make Point.new(3,4) work

[13:15] <tadzik> cygx: well, you have to do more than with named arguments, yes

[13:16] <tadzik> whether that's jumping through hoops? Not sure

[13:16] <timotimo> but really you want special syntax for that: sub infix:<·>($x, $y) { Point.new(:$x, :$y) }

[13:16] <tadzik> :>

[13:17] <El_Che> lizmat++

[13:18] <tadzik> but from the top of my head, I'm not sure: should I write `method new(Int $x, Int $y) { self.bless(:$x, :$y) }` or `submethod BUILD(Int $!x, Int $!y) { }`

[13:18] <tadzik> I'd rather write the first one because I think I actually got it right

[13:18] <timotimo> correct, BUILD doesn't get positional args

[13:19] <tadzik> wait, at all?

[13:19] <timotimo> that's right

[13:19] *** AlexDaniel joined
[13:19] <tadzik> then I truly don't get it :P

[13:20] <timotimo> positionals don't work well with the "call every BUILD in the object's hierarchy" thing

[13:20] <tadzik> ah right

[13:20] <chloekek> Also, kwargs that are not taken by any of the BUILDs are silently ignored, no error.

[13:20] <tadzik> but yeah, default .new accepts slurpies anyway

[13:20] <tadzik> slurpy nameds I mean

[13:20] *** Ven`` joined
[13:21] <timotimo> chloekek: there's actually a module in the ecosystem for that! \o/

[13:21] <tadzik> and when you rewrite it to handle positionals you don't need your own BUILD anymore

[13:21] <tadzik> or two :P

[13:21] <tadzik> https://github.com/tadzik/ClassX-StrictConstructor that's mine

[13:21] <tadzik> Class Constrictor

[13:22] <chloekek> coolio

[13:23] *** AlexDaniel left
[13:23] <jnthn> .oO( ClassX::StructConstrictor - disallows declaration of methods, so it's really a struct :) )

[13:23] <tadzik> :D

[13:27] <chloekek> BoaConstrictor

[13:29] <tadzik> Imagine a `use Boa` that just puts more constraints on your code

[13:30] <timotimo> "use Boa" is the new "use strict"

[13:31] <Geth> ¦ doc: Kaiepi++ created pull request #2941: Document missing Enumeration and Metamodel::EnumHOW methods

[13:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2941

[13:31] <chloekek> community service officer is written boa in Dutch

[13:31] <tadzik> apt

[13:32] <chloekek> use boa; for warnings and use police; for strict

[13:32] *** FieldsaBB joined
[13:32] <timotimo> "use bastards;"

[13:32] <timotimo> "use pigs"? "use hogs"?

[13:33] <timotimo> m: use hogs :amount(20..50);

[13:33] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «===SORRY!===␤Could not find hogs at line 1 in:␤    inst#/home/camelia/.perl6␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6…»

[13:36] *** mahafyi joined
[13:36] *** Ven`` left
[13:39] <timotimo> Raku Roll Musak

[13:40] *** cpage joined
[13:40] *** Ven`` joined
[13:41] *** Ven`` left
[13:41] *** harmil joined
[13:41] *** [Sno] left
[13:42] <timotimo> timezones be blessed. i thought i wouldn't get to see the game programming thing, but it's actually now

[13:42] <Kaiepi> tadzik, ClassX::StrictConstructor doesn't check for attributes in any roles the class mixes in in .new when it probably should

[13:42] <harmil> Okay, I really am going to TRY to stop tinkering with http://ajs.github.io/tools/your-regex-here/ -- I've already posted it to r/programming and I've cleaned up quite a bit. If anyone finds problems, though, please let me know.

[13:43] *** nepugia is now known as nephele

[13:43] <Geth> ¦ doc: cc6e4c820f | (Ben Davies)++ | doc/Type/Enumeration.pod6

[13:43] <synopsebot> Link: https://doc.perl6.org/type/Enumeration

[13:43] <Geth> ¦ doc: Document missing Enumeration methods

[13:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cc6e4c820f

[13:43] <Geth> ¦ doc: b14a563aba | (Ben Davies)++ | doc/Type/Metamodel/EnumHOW.pod6

[13:43] <Geth> ¦ doc: Document missing Metamodel::EnumHOW methods

[13:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b14a563aba

[13:43] <Geth> ¦ doc: 52e20d5986 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 2 files

[13:43] <synopsebot> Link: https://doc.perl6.org/type/Metamodel::EnumHOW

[13:43] <Geth> ¦ doc: Merge pull request #2941 from Kaiepi/enum

[13:43] <Geth> ¦ doc: 

[13:43] <Geth> ¦ doc: Document missing Enumeration and Metamodel::EnumHOW methods

[13:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/52e20d5986

[13:43] *** dolmen joined
[13:45] <tadzik> Kaiepi: huh, really? I thought it'd do that

[13:45] <tadzik> can you send me a testcase that fails, if it's not too much of a bother?

[13:45] <Kaiepi> m: role Foo {}; class Bar does Foo {}; say Foo.^parents

[13:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «No such method 'parents' for invocant of type 'Perl6::Metamodel::ParametricRoleGroupHOW'␤  in block <unit> at <tmp> line 1␤␤»

[13:45] <Kaiepi> er

[13:46] <Kaiepi> m: role Foo {}; class Bar does Foo {}; say Bar.^parents

[13:46] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «()␤»

[13:46] <Kaiepi> m: role Foo {}; class Bar does Foo {}; say Bar.^roles

[13:46] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «((Foo))␤»

[13:46] <timotimo> tadzik: any interest in perl6 gamedev recently? :)

[13:46] <tadzik> timotimo: I'm now on a talk from someone who writes a clone of Invisible Inc. to Perl

[13:46] <tadzik> so: yes

[13:47] <tadzik> I'm excited :)

[13:47] <timotimo> is it josé joaquín atria's talk?

[13:47] <tadzik> yes

[13:47] <timotimo> i've just started watching at 1.25x

[13:47] *** dolmen left
[13:47] <cygx> m: role Constructor[*@params] { method CALL-ME(::?CLASS:U: *@args) { self.bless(|%(@params Z=> @args)) } }; class Point does Constructor[<x y>] { has $.x; has $.y }; say Point(1, 2)

[13:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Point.new(x => 1, y => 2)␤»

[13:48] *** zingzhang joined
[13:48] <tadzik> oooh

[13:48] <tadzik> neato :)

[13:50] <Kaiepi> m: use NativeCall; EXPORT::<long> := long; say EXPORT::<long>

[13:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(long)␤»

[13:50] <tadzik> Kaiepi: aha, I see

[13:50] <Kaiepi> can't believe i didn't think of a way to export symbols from other modules like that until now

[13:51] *** Ven`` joined
[13:52] *** AlexDaniel joined
[13:55] <tadzik> Kaiepi: hmm https://github.com/tadzik/ClassX-StrictConstructor/blob/master/t/02-roles.t

[13:55] <tadzik> so this doesn't cover something?

[13:55] <tadzik> ah, of course not. The attrs from roles are composed into the class so you don't need to check mro or whatever

[13:56] <Geth> ¦ problem-solving: AlexDaniel self-assigned Update Travis configuration so that it does not compile Rakudo every single time. https://github.com/perl6/problem-solving/issues/85

[13:56] <tadzik> so I think it is all good

[13:56] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Core class version syntax https://github.com/perl6/problem-solving/issues/80

[13:58] *** pamplemousse joined
[13:59] <timotimo> tadzik: https://bitbucket.org/gtkshooter/p6-gtk-shooter/src/master/starfield_scroller.p6 - did you see this? :)

[13:59] *** Ven`` left
[13:59] <tadzik> I remember the name

[13:59] <timotimo> it's a new thing basically

[13:59] <tadzik> oh!

[13:59] <tadzik> then no, I have not

[13:59] <timotimo> now based on clutter, which has a scene graph

[13:59] <tadzik> Clutter, huh

[13:59] <timotimo> that file only has a starfield that uses clutter's easing features to scroll a background with depth layers

[13:59] *** [Sno] joined
[14:00] <tadzik> I'm not sure what Clutter is. Is it The New Gtk?

[14:00] <tadzik> or is the QML of GTK

[14:01] <timotimo> slightly, vaguely similar to "the QML of GTK"

[14:01] <timotimo> but really a bit more like QSceneView i guess?

[14:01] <timotimo> QGraphicsScene i think

[14:01] <tadzik> nod nod

[14:02] <tadzik> I'll need to read this :)

[14:02] <tadzik> The Gaming JJ suggested a new Perl SDL Game Contest

[14:02] <timotimo> oh, cool

[14:02] <tadzik> perhaps there should be a perl 6 representation :)

[14:02] <timotimo> i didn't see that, was it not in the presentation itself?

[14:03] <timotimo> maybe i was a little too distracted by @stuff

[14:03] <tadzik> there was a suggestion at the end

[14:03] <timotimo> would it be only for SDL1?

[14:04] <Kaiepi> tadzik, you could also write it as a subclass of Metamodel::ClassHOW and throw the code for attribute checking in its compose method before calling self.Metamodel::ClassHOW::compose, then throw it in EXPORTHOW::DECLARE::<strict-class> or something if you want it to have its own package declarator or EXPORTHOW::SUPERCEDE::<class> if you want it to override how regular classes work

[14:04] <Kaiepi> since it's entirely dealing with the MOP

[14:05] <timotimo> ah, it's the "community participation and events for visibility"

[14:06] <timotimo> oh is that a samcv

[14:07] *** AlexDaniel left
[14:07] <timotimo> ah, lightning talks, of course

[14:08] *** lizmat joined
[14:12] *** [Sno] left
[14:12] <timotimo> ooh jesus the sound

[14:14] <timotimo> that kind of sounds hella expensive

[14:18] <cygx> role Constructor, a bit more polished: https://gist.github.com/cygx/23638f780f77ba032d21f600d8f7d2cd

[14:18] <cygx> is there a built-in way to dynamically deconstruct a capture based on a signature?

[14:18] <timotimo> the %room stream starts in the middle of masak's talk =o

[14:19] <timotimo> m: given \(1, 2, 3, :foo, :bar) { when -> $a, $b, $c, :$bar, :$foo { say "$a, $b, $c and $foo and $bar" } }

[14:19] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5===␤Expression needs parens to avoid gobbling block␤at <tmp>:1␤------> 3o { say "$a, $b, $c and $foo and $bar" }7⏏5 }␤Missing block (apparently claimed by expression)␤at <tmp>:1␤------> 3o { say "$a, $b, $c and $foo a…»

[14:20] <timotimo> m: given \(1, 2, 3, :foo, :bar) { when (-> $a, $b, $c, :$bar, :$foo { say "$a, $b, $c and $foo and $bar" }) }

[14:20] <timotimo> not quite

[14:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5===␤Expression needs parens to avoid gobbling block␤at <tmp>:1␤------> 3o { say "$a, $b, $c and $foo and $bar" }7⏏5) }␤Missing block (apparently claimed by expression)␤at <tmp>:1␤------> 3 { say "$a, $b, $c and $foo a…»

[14:20] <timotimo> m: given \(1, 2, 3, :foo, :bar) { when  :($a, $b, $c, :$bar, :$foo) { say "$a, $b, $c and $foo and $bar" } }

[14:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared␤at <tmp>:1␤------> 3hen  :($a, $b, $c, :$bar, :$foo) { say "7⏏5$a, $b, $c and $foo and $bar" } }␤»

[14:20] <timotimo> m: given \(1, 2, 3, :foo, :bar) { when  :($a, $b, $c, :$bar, :$foo) -> $a, $b, $c, :$bar, :$foo { say "$a, $b, $c and $foo and $bar" } }

[14:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Too few positionals passed; expected 3 arguments but got 0␤  in block  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:20] *** curan left
[14:20] <timotimo> *shrug*

[14:25] *** FieldsaBB left
[14:25] <timotimo> m: given \(1, 2, 3, :foo, :bar) { $_ ~~ -> $a, $b, $c, :$bar, :$foo { say "$a, $b, $c and $foo and $bar" } }

[14:25] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Too few positionals passed; expected 3 arguments but got 1␤  in block  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:25] <timotimo> the important bit is that the variables have to be declared so they become usable

[14:26] <timotimo> a signature literal by itself doesn't do that, i believe?

[14:26] <cygx> there's nqp::p6bindcaptosig

[14:26] <cygx> I'll see if that leads anywhere

[14:27] *** nephele left
[14:27] <vrurg> timotimo: when doesn't pass arguments to a pointy block. 

[14:27] <cygx> that requires lexicals with appropriate names being present :(

[14:27] <vrurg> m: given \\(1, 2, 3, :foo, :bar) { when  :($a, $b, $c, :$bar, :$foo) -> |c { say c.perl } }

[14:27] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[14:28] <El_Che> sena_kun: half of the day seems to be missing on the second room

[14:28] <El_Che> % I mean

[14:28] <El_Che> missing your talk for now :(

[14:29] <sena_kun> El_Che, how so? I watched it just after Masak's talk. :o

[14:31] <sena_kun> El_Che, oh goodness... well, something was certainly removed. :( I have a feeling they'll edit and re-upload it then.

[14:32] <El_Che> they certainly will

[14:32] <El_Che> see this twitter chat between mdk and me: https://twitter.com/nxadm/status/1159193860070944769

[14:33] <El_Che> (about the removal of the room 1 videos of the first day)

[14:33] <vrurg> m: given \\(1, 2, 3, :foo, :bar) { when  :($a, $b, $c, :$bar, :$foo) { -> |c { say c.perl }(|$_) }}

[14:33] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[14:33] <vrurg> m: given \(1, 2, 3, :foo, :bar) { when  :($a, $b, $c, :$bar, :$foo) { -> |c { say c.perl }(|$_) }}

[14:33] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «\(1, 2, 3, :bar, :foo)␤»

[14:35] <cygx> what I need is a hash mapping parameter names to argument values so I can pass that to bless

[14:38] <cygx> the relevant logic can be found in Perl6/Metamodel/BOOTSTRAP.nqp, class Binder

[14:55] *** aborazmeh left
[14:55] *** lizmat left
[15:04] *** dolmen joined
[15:07] *** lizmat joined
[15:07] *** lizmat left
[15:08] *** [Sno] joined
[15:22] *** [Sno] left
[15:25] <cpan-p6> New module released to CPAN! Tomtit (0.1.1) by 03MELEZHIK

[15:26] <SmokeMachine> there is no sound on Riga stream...

[15:53] *** nepugia joined
[15:54] *** lizmat joined
[15:56] *** ambs joined
[15:57] *** lizmat left
[16:01] *** chloekek left
[16:07] *** pat_js left
[16:08] <sena_kun> El_Che, the stream is back, so you can laugh at auto-clapping all you want. ;)

[16:08] * sena_kun goes off

[16:08] *** sena_kun left
[16:11] <El_Che> sena_kun++

[16:25] *** Itaipu left
[16:30] *** cpan-p6 left
[16:31] *** cpan-p6 joined
[16:31] *** cpan-p6 left
[16:31] *** cpan-p6 joined
[16:31] *** mensvaga joined
[16:38] *** mowcat left
[16:40] *** dolmen left
[16:46] *** nepugia left
[17:16] <jdv79> looks like liz's keynote is not on the live video

[17:16] <jdv79> anyone know if its available anywhere else?  slides or other video?...

[17:17] *** Itaipu joined
[17:25] *** wildtrees joined
[17:26] *** wildtrees left
[17:26] *** wildtrees joined
[17:27] *** wildtrees left
[17:28] *** wildtrees joined
[17:29] *** chloekek joined
[17:29] <El_Che> it was this morning

[17:29] <El_Che> Google is being an ass it seems

[17:30] <chloekek> Hmm

[17:30] <El_Che> jnthn's talk is back, though

[17:31] *** wildtrees left
[17:40] *** |oLa| joined
[17:52] *** pamplemousse left
[17:52] *** zakharyas left
[18:00] *** reportable6 left
[18:00] *** pamplemousse joined
[18:04] *** reportable6 joined
[18:04] *** ChanServ sets mode: +v reportable6

[18:09] *** cygx left
[18:10] *** MasterDuke joined
[18:11] <MasterDuke> Elronnd: did you get rakudo-js to build in arch linux?

[18:12] *** mowcat joined
[18:12] *** sjm_uk joined
[18:15] *** pamplemousse left
[18:16] *** molaf left
[18:23] *** efraim left
[18:26] *** marcel_ joined
[18:31] *** |oLa| left
[18:44] *** jaldhar left
[18:48] *** sena_kun joined
[18:52] *** Black_Ribbon joined
[19:10] *** pamplemousse joined
[19:15] *** molaf joined
[19:15] *** zakharyas joined
[19:16] <Elronnd> MasterDuke: nope

[19:17] <Elronnd> I was told to ask pmurias about it, but they never seem to be on

[19:30] *** zingzhang left
[19:33] *** mowcat left
[19:47] *** molaf left
[19:48] *** MARTIMM joined
[19:49] *** marcel_ left
[20:03] *** pilne joined
[20:11] *** leont joined
[20:27] *** zakharyas left
[20:31] *** [Sno] joined
[20:35] *** sjm_uk left
[20:37] *** pamplemousse left
[20:42] *** irced joined
[20:45] *** Guest73 left
[20:52] *** veesh joined
[20:53] *** Kaiepi left
[20:54] *** Kaiepi joined
[20:54] <veesh> why is the name change getting pushed through now?

[20:56] <moritz> is it?

[20:56] <veesh> i asked the wrong question

[20:57] <veesh> i meant to say what did Larry say that started this discussion again

[20:58] *** chloekek left
[20:59] *** MARTIMM left
[21:00] *** mensvaga left
[21:02] *** Xliff joined
[21:09] *** netrino joined
[21:10] *** mowcat joined
[21:19] *** Doc_Holliwood left
[21:25] <irced> so, Oracle is changing its java license to commercial only? java is one of the few major langauges i know nothing about. does this affect the vm in which perl6 runs at all?

[21:26] *** zingzhang joined
[21:28] <moritz> irced: there's still an Open Source version of that JVM (OpenJDK), so we're good

[21:28] <moritz> this mainly affects enterprises that want commercial support

[21:29] <irced> moritz: thank you for your input!

[21:32] *** zingzhang left
[21:34] <Xliff> vrurg: How is 3075 looking? :)

[21:36] *** lizmat joined
[21:40] <vrurg> Xliff: sorry, but 3113 is the priority for now. Though one problem is almost fixed.

[21:49] <Xliff> OK.

[21:50] <Xliff> Yeek! Good luck! Let me know if you need extra hands or something.

[21:58] *** leont left
[22:03] <vrurg> Xliff: thanks!

[22:03] *** mowcat left
[22:13] <Xliff> How would you do a conditional enum? 

[22:13] <Xliff> Say... so that the contents vary due to OS?

[22:14] <sena_kun> Xliff, BEGIN {  } or sub EXPORT a-a-a-and EnumHOW module. :)

[22:14] <Xliff> LOL! Thought so.

[22:14] <sena_kun> ;)

[22:14] <Xliff> sena_kun++

[22:14] <Xliff> I take it you've tried tackling this monster as well?

[22:15] * sena_kun tweaks slides for MOP talk rn

[22:15] <sena_kun> Xliff, erm, moster to be...?

[22:16] <Xliff> Conditional enums...

[22:16] <sena_kun> ah, nope

[22:16] <sena_kun> no usecase for me

[22:16] <Xliff> I mean, C just uses an enum definition and constants.

[22:16] <sena_kun> but I think it is _very_ doable in Perl 6

[22:16] <Xliff> I just canme up with one. 

[22:16] <sena_kun> I mean, I don't see how it can _not_ work...

[22:16] <Xliff> Enum with constants that vary due to OS

[22:16] <sena_kun> and if it's not, that'd be a bug

[22:16] <Xliff> Think low level IO.

[22:16] <Xliff> And flags.

[22:17] <sena_kun> I think the problem will be how can you use them conditionally

[22:17] <sena_kun> because afaik they are checked at compile time and must be present

[22:17] <Xliff> I want to define them once... at compile time... based on OS.

[22:18] <Xliff> So it looks like I'll have to create them in MAIN using the MOP. Yes?

[22:18] <Xliff> That can get problematic really quickly.

[22:18] <sena_kun> so you can't just write, e.g., "if $*OS is Foo { $a = FooParam } else { $a = BarParam }", the compiler won't listen to your "But this branch will never be executed at the place where it is not defined! Ignore it!"

[22:18] <sena_kun> it will say to you that either FooParam or BarParam is an unknown thing. :(

[22:19] <Xliff> The problem with that is that it's not just $a.

[22:19] <sena_kun> I think you can workaround that defining every possible enum value, leaving the meaningless ones without a value, say just -1 or something

[22:19] <Xliff> Enums have ALL of its values exported to MAIN.

[22:19] <Xliff> The enum names are the same, though. It's their value that changes.

[22:19] <sena_kun> Xliff, why MAIN? `sub EXPORT`(just look it up in the docs) is executed at compile time, MAIN is not

[22:19] <Xliff> I may just use Linux as a default and if OS changes, reassign via MOP.

[22:20] <sena_kun> ah, if they are the same, just values are different, then you have no such issue. :)

[22:20] <sena_kun> give me a second...

[22:20] <Xliff> I would rather NOT have to use sub EXPORT for just this one thing. In a file where I am exporting a LOT through the normal method.

[22:21] <Xliff> If I can use EXPORT to help me special case stuff, then fine.

[22:21] <timotimo> did you see that cute EXPORT<bleh> := Bloop::<bleh> trick?

[22:21] <sena_kun> Xliff, then BEGIN block somewhere in this method if you have enough data there

[22:21] <Xliff> timotimo: No. Where?

[22:21] <timotimo> EXPORT::<bleh> i should have said

[22:22] <timotimo> 154915*   Kaiepi ? m: use NativeCall; EXPORT::<long> := long; say EXPORT::<long>

[22:22] <sena_kun> https://github.com/Altai-man/ASN-META/blob/master/lib/ASN/META.pm6#L75 <- EnumHOW is very neat, Kaiepi++

[22:23] <Kaiepi> :)

[22:23] <Xliff> Kaiepi: Have you been reading?

[22:23] * sena_kun returns to slides, there are 73 of them for 20 minutes

[22:23] <sena_kun> o/

[22:24] <Xliff> Thanks, sena_kun++

[22:24] <Kaiepi> wdym

[22:24] <Xliff> Say I have "our enum TheseChangeByOS  ( a => 1, b => 2, c => 3, d => 4 ) # Linux"

[22:25] <Xliff> But the values for a, b, c, and d change for Windows.

[22:25] <Xliff> How would I do that in Perl6?

[22:25] <Xliff> No matter what OS, I still want "a ~~ TheseChangeByOS" to be True

[22:26] <Kaiepi> gimme a sec

[22:26] <Xliff> 'k thanks!

[22:26] *** lizmat_ joined
[22:28] <Kaiepi> something like this Xliff http://fpaste.scsys.co.uk/585646?tx=on

[22:29] <Xliff> Ooooh!

[22:29] <Xliff> Kaiepi++

[22:30] <Kaiepi> er, add_value should be whatever the name for the meta-method for adding enum values is, it's in the docs for Metamodel::EnumHOW

[22:30] *** lizmat left
[22:32] <Xliff> add_enum_value.

[22:32] <Kaiepi> yeah that

[22:32] <Xliff> :)

[22:33] *** epony left
[22:34] <Kaiepi> i updated the docs earlier today to show an example of that and document the methods that were missing from Metamodel::EnumHOW's documentation

[22:38] *** zingzhang joined
[22:44] <sena_kun> folks, is e.g. "BEGIN block" a "(language) construction" or "(language) construct"?

[22:45] *** rindolf left
[22:47] * sena_kun goes for "language construct"

[22:57] *** wildtrees joined
[23:05] *** sena_kun left
[23:23] <japhb> 'construct' sounds more natural to me, but it's a pretty fine difference between those two words, I think.

[23:29] *** Possum joined
[23:42] *** netrino left
[23:47] *** lucasb left
[23:49] <Kaiepi> so you may have seen javascript code like this that's the stuff of nightmares: +((!![]+!![]+!!!![]+!!!![])+(!![]+!![]+![]+[]))

[23:50] <Kaiepi> naturally i ported it

[23:50] <Kaiepi> m: say (! ! !() + ! ! !() + ! ! ! ! !() + ! ! ! ! !()) ~ (! ! !() + ! ! !() + ! !() + ())

[23:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «42␤»

