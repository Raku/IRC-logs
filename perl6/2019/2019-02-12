[00:15] *** jernster joined
[00:15] *** jme` left
[00:15] *** leont left
[00:23] *** w_richard_w joined
[00:33] *** jernster left
[00:34] <cpan-p6> New module released to CPAN! Date-Names-Perl6 (1.1.0) by 03TBROWDER

[00:37] *** rindolf left
[00:39] *** dct left
[00:47] *** w_richard_w left
[00:59] *** pnu__ joined
[00:59] *** peteretep joined
[00:59] *** mrsolo joined
[00:59] *** iviv joined
[01:06] *** htoc^ left
[01:11] *** hphs^ joined
[01:13] *** Actualeyes joined
[01:13] *** alpha6 joined
[01:14] *** molaf joined
[01:26] *** sacomo joined
[01:26] *** albongo joined
[01:36] *** markoong left
[01:36] *** markoong joined
[01:41] *** markoong left
[01:43] *** kurahaupo left
[01:45] *** kurahaupo joined
[02:03] *** hythm joined
[02:14] <Xliff> Is there a way to get the Rakudo Star installer to install somewhere other than C: drive?

[02:18] <MasterDuke> Xliff: currently no. however, someone is working on making rakudo relocatable, which would make that possible

[02:18] <yoleaux> 11 Feb 2019 15:35Z <uzl> MasterDuke: Thanks! I was kind of shortsighted because doing, for example, my @a[2].perl prints out how it'd be declared explicitly. ;-)

[02:24] <Xliff> MasterDuke++ # Thanks for the heads up.

[02:28] <Xliff> Does anyone know if NativeCall will work with MSYS2 libraries?

[02:39] *** kurahaupo_ joined
[02:41] *** hythm left
[02:41] *** kurahaupo left
[02:41] *** hythm joined
[02:47] *** molaf left
[02:50] <Geth> ¦ doc/master: 4 commits pushed by cfa++

[02:50] <Geth> ¦ doc/master: 6a177600fa | Spelling: 'piggie' → 'piggy'

[02:50] <Geth> ¦ doc/master: b440d67890 | Spelling: add a few more words to {code,words}.pws

[02:50] <Geth> ¦ doc/master: 7f82a3a72c | Fix typo.

[02:50] <Geth> ¦ doc/master: e9603ce7ff | Spelling: add a few more words to code.pws

[02:50] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/1993a30685b3...e9603ce7ffc8

[02:59] <Geth> ¦ doc: b21e83c87d | cfa++ | xt/words.pws

[02:59] <Geth> ¦ doc: Spelling: allow 'initialise' as we already whitelist 'initialised'.

[02:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b21e83c87d

[02:59] <Geth> ¦ doc: f962861d04 | cfa++ | 2 files

[02:59] <Geth> ¦ doc: Spelling: sort dictionaries to make auditing easier.

[02:59] <Geth> ¦ doc: 

[02:59] <Geth> ¦ doc: (There are no changes to dictionary contents in this commit.)

[02:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f962861d04

[03:00] *** molaf joined
[03:03] *** cpan-p6 left
[03:03] *** cpan-p6 joined
[03:04] *** zachk left
[03:24] <Xliff> Well, I think I will stop my attempts at getting Rakudo to build under MSYS at "Command failed (status 32768): git fetch"

[03:33] *** w17t left
[03:38] <Geth> ¦ doc/master: 4 commits pushed by cfa++

[03:38] <Geth> ¦ doc/master: e39219e9ad | "Orcish Manoeuvre" → "Orcish Maneuver"

[03:38] <Geth> ¦ doc/master: 112ad9353c | Spelling: add a few more words to {code,words}.pws

[03:38] <Geth> ¦ doc/master: 5f2dc09f89 | Spelling: Prefer the already whitelisted 'falsy'.

[03:38] <Geth> ¦ doc/master: 355aede69f | Spelling.

[03:38] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/f962861d040f...355aede69fd4

[03:50] <Geth> ¦ doc: a8a39f38aa | cfa++ | 2 files

[03:50] <Geth> ¦ doc: Spelling: add a couple more words to {code,words}.pws

[03:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a8a39f38aa

[03:50] <Geth> ¦ doc: 3c4d4ebf75 | cfa++ | doc/Type/Mu.pod6

[03:50] <Geth> ¦ doc: Spelling: "ided" → "enriched".

[03:50] <synopsebot> Link: https://doc.perl6.org/type/Mu

[03:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3c4d4ebf75

[03:55] *** hythm left
[03:57] *** kurahaupo_ left
[04:01] *** Actualeyes left
[04:06] *** kerrhau left
[04:11] *** avuserow joined
[04:17] *** ferreira left
[04:19] *** MasterDuke left
[04:23] *** abraxxa joined
[04:23] *** abraxxa left
[04:24] *** abraxxa joined
[04:28] *** abraxxa left
[04:30] *** eythian joined
[04:38] *** mowcat left
[04:40] *** mowcat joined
[04:40] *** mowcat left
[04:41] *** mowcat joined
[04:43] *** abraxxa joined
[04:44] *** mowcat left
[05:01] *** w17t joined
[05:13] *** molaf left
[05:13] *** reach_satori left
[05:14] *** dustinm` left
[05:21] *** reach_satori joined
[05:24] *** dustinm` joined
[05:32] *** Xliff left
[05:53] *** curan joined
[05:56] <cpan-p6> New module released to CPAN! Math-Factorial-Operator (0.1.2.0) by 03RIBNOTTER

[05:56] <cpan-p6> New module released to CPAN! Text-Names (0.0.2) by 03RIBNOTTER

[05:56] <cpan-p6> New module released to CPAN! Math-Factorial-Operator (0.1.2) by 03RIBNOTTER

[06:04] *** jmerelo joined
[06:05] *** dustinm` left
[06:06] *** molaf joined
[06:08] *** ufobat___ left
[06:08] <jmerelo> notable6: Pod6 can be now visualized in GitHub https://github.com/perl6/doc/blob/master/doc/Language/modules.pod6

[06:08] <notable6> jmerelo, Noted!

[06:09] <jmerelo> it's been deployed by kivikkak in GitHub last Dec 2018 https://github.com/github/markup/commit/b8843a4b81d31495b90a0c63a3daafef45a4a2f0

[06:11] *** [particle] joined
[06:13] *** [particle]1 left
[06:14] *** dustinm` joined
[06:25] <Geth> ¦ doc: b8e92c9c38 | cfa++ | doc/Language/nativetypes.pod6

[06:25] <synopsebot> Link: https://doc.perl6.org/language/nativetypes

[06:25] <Geth> ¦ doc: Fix index entries.

[06:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b8e92c9c38

[06:26] *** molaf left
[06:29] <Geth> ¦ doc: 87f2b70ba9 | cfa++ | doc/Language/list.pod6

[06:29] <synopsebot> Link: https://doc.perl6.org/language/list

[06:29] <Geth> ¦ doc: Fix typo.

[06:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/87f2b70ba9

[06:33] *** domidumont joined
[06:42] *** cpan-p6 left
[06:42] *** cpan-p6 joined
[06:44] <Geth> ¦ ecosystem: 98bee26916 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[06:44] <Geth> ¦ ecosystem: Unreleases auth version of Terminal-Print

[06:44] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/98bee26916

[07:02] *** domidumont left
[07:06] <Geth> ¦ doc: 230292c39d | (JJ Merelo)++ | CONTRIBUTING.md

[07:06] <Geth> ¦ doc: Howto linked, closes #2266

[07:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/230292c39d

[07:09] *** abraxxa left
[07:14] *** ravenousmoose_ joined
[07:19] <Geth> ¦ doc: b12bdd3402 | cfa++ | .gitignore

[07:19] <Geth> ¦ doc: Update .gitignore (node modules, package lock).

[07:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b12bdd3402

[07:21] *** jeromelanteri joined
[07:22] *** domidumont joined
[07:34] *** jmerelo left
[07:36] *** zacts joined
[07:37] *** zacts left
[07:39] *** w_richard_w joined
[07:56] *** domidumont left
[07:58] *** domidumont joined
[08:00] *** sauvin joined
[08:03] *** jeromelanteri left
[08:05] *** w_richard_w left
[08:11] *** integral_ left
[08:11] *** integral_ joined
[08:11] *** integral_ is now known as integral

[08:19] *** powerbit joined
[08:34] *** abraxxa joined
[08:36] *** obfusk_ left
[08:37] *** obfusk joined
[08:37] *** dakkar joined
[08:39] *** kurahaupo joined
[08:40] <Geth> ¦ ecosystem: acdb5d799e | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[08:40] <Geth> ¦ ecosystem: Deprecates HTTP::Server::Threaded

[08:40] <Geth> ¦ ecosystem: 

[08:40] <Geth> ¦ ecosystem: Closes perl6-http-server-threaded#5

[08:40] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/acdb5d799e

[08:57] *** zakharyas joined
[09:04] *** ravenousmoose_ left
[09:05] *** ravenousmoose joined
[09:14] *** ravenousmoose left
[09:27] *** ufobat joined
[09:34] *** random_yanek left
[09:41] *** ravenousmoose joined
[09:47] *** Actualeyes joined
[10:03] *** ravenousmoose left
[10:06] *** Sgeo__ left
[10:07] *** Sgeo__ joined
[10:10] *** ravenousmoose joined
[10:16] *** rindolf joined
[10:32] *** cpan-p6 left
[10:32] *** cpan-p6 joined
[10:33] *** phogg left
[10:42] *** random_yanek joined
[10:42] *** random_yanek left
[10:44] *** random_yanek joined
[10:54] *** rindolf left
[11:06] *** yqt joined
[11:07] *** rindolf joined
[11:21] *** markoong joined
[11:22] *** Sgeo_ joined
[11:25] *** Sgeo__ left
[11:26] *** domidumont left
[11:46] *** Sgeo__ joined
[11:47] *** hphs^ left
[11:48] *** sena_kun joined
[11:49] *** Sgeo_ left
[12:03] *** kst` joined
[12:03] *** kst left
[12:07] *** kurahaupo left
[12:07] *** sena_kun left
[12:08] *** mowcat joined
[12:11] <AlexDaniel> weekly: Pod6 can be now visualized in GitHub https://github.com/perl6/doc/blob/master/doc/Language/modules.pod6

[12:11] <notable6> AlexDaniel, Noted!

[12:11] <AlexDaniel> notable6: reset Pod6

[12:11] <notable6> AlexDaniel, Moved existing notes to “Pod6_2019-02-12T12:11:09Z”

[12:11] <AlexDaniel> weekly: it's been deployed by kivikkak in GitHub last Dec 2018 https://github.com/github/markup/commit/b8843a4b81d31495b90a0c63a3daafef45a4a2f0

[12:11] <notable6> AlexDaniel, Noted!

[12:13] <AlexDaniel> although I don't understand that note at all

[12:15] *** leont joined
[12:16] <AlexDaniel> weekly: (↑ original note by jmerelo, here's some commentary from AlexDaniel): actually that commit just slurps the content, without doing any rendering. And that was live for quite a bit I think…

[12:16] <notable6> AlexDaniel, Noted!

[12:21] *** domidumont joined
[12:23] *** domidumont left
[12:28] *** leont left
[12:38] *** ravenousmoose left
[12:38] *** ravenousmoose joined
[12:44] *** zakharyas left
[12:58] *** Sgeo_ joined
[12:59] *** domidumont joined
[13:00] *** mowcat left
[13:01] *** Sgeo__ left
[13:01] *** lucasb joined
[13:08] *** ravenousmoose left
[13:17] *** MilkmanDan left
[13:21] *** MilkmanDan joined
[13:28] *** bhm_ is now known as bhm

[13:33] *** ravenousmoose joined
[13:35] *** random_yanek left
[13:36] *** random_yanek joined
[13:36] *** random_yanek left
[13:38] *** random_yanek joined
[13:39] *** w17t left
[13:40] *** abraxxa left
[13:40] *** abraxxa joined
[13:45] *** scimon joined
[13:49] *** ravenousmoose left
[14:04] <scimon> So. What happened to HTTP::Server::Async ?

[14:12] *** phogg joined
[14:17] *** reach_satori left
[14:25] <Geth> ¦ ecosystem-unbitrot: AlexDaniel self-assigned MeCab https://github.com/perl6/ecosystem-unbitrot/issues/471

[14:27] *** molaf joined
[14:31] *** cpan-p6 left
[14:31] *** zakharyas joined
[14:31] *** cpan-p6 joined
[14:31] *** sena_kun joined
[14:33] *** molaf left
[14:34] *** sacomo left
[14:47] *** zakharyas left
[14:49] *** zakharyas joined
[14:52] <zostay> this is curious:

[14:52] <zostay> m: multi foo($a, :$str) { samewith().join }; multi foo($a) { <a b c> }; say foo('blah', :str);

[14:52] <camelia> rakudo-moar 30fc5146c: OUTPUT: «Cannot resolve caller foo(...); none of these signatures match:␤    ($a, :$str)␤    ($a)␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:52] <zostay> even more curious since that was supposed to be the working example i just ran on my rakudo :-p

[14:53] <zostay> m: multi foo($a, :$str) { samewith($a).join }; multi foo($a) { <a b c> }; say foo('blah', :str);

[14:53] <camelia> rakudo-moar 30fc5146c: OUTPUT: «(timeout)»

[14:54] <zostay> oh, i see what i've done... nevermind, not curious, just sleep deprived... thanks channel for being my teddy bear

[14:57] *** melezhik joined
[15:05] *** curan left
[15:06] <guifa> We all have those moments

[15:19] *** w17t joined
[15:31] <masak> yes, nameds are optional

[15:31] <masak> (and, perhaps more importantly, optional nameds don't figure in dispatch resolution)

[15:34] *** ravenousmoose joined
[15:53] *** domidumont left
[15:53] *** domidumont joined
[15:53] *** ravenousmoose left
[15:55] *** pmurias joined
[15:55] <pmurias> AlexDaniel: by visualized you mean syntax highlighted?

[15:55] <AlexDaniel> pmurias: I have no idea what jmerelo meant

[15:56] <AlexDaniel> there was a PR that was supposed to render .pod6 files

[15:56] <AlexDaniel> but later that was changed to just dump the source

[15:56] <AlexDaniel> and all that is not news

[15:56] <pmurias> AlexDaniel: ahh ok

[16:00] *** abraxxa left
[16:04] *** ufobat left
[16:05] *** domidumont left
[16:06] *** domidumont joined
[16:22] *** ferreira joined
[16:31] *** w17t left
[16:32] *** w17t joined
[16:39] *** zacts joined
[16:40] *** Peter_R joined
[16:41] *** Xliff joined
[16:42] *** pmurias left
[16:43] *** molaf joined
[16:45] *** random_yanek left
[16:48] *** gregf_ left
[16:51] *** lucasb left
[16:52] *** leszekdubiel joined
[16:54] *** imcsk8 left
[16:56] *** random_yanek joined
[16:56] *** random_yanek left
[16:58] *** cfa joined
[16:58] <cfa> o/

[17:00] <leszekdubiel> I've been reading aboutu perl history, and recently about renaming perl6 to Raku...  Why not name language "spy" -- as Larry suggested in interviews :) :)   Just a free thought... :) 

[17:01] *** zacts left
[17:01] <cfa> leszekdubiel: perl 6 hasn't been renamed, fwiw

[17:02] <leszekdubiel> anyway... it's quite strange that there are two names:     "Raku is an alternative name for Perl 6 language and can be used interchangeably."    <--- from docs

[17:02] *** abraxxa joined
[17:03] <AlexDaniel> leszekdubiel: some people are very attached to “Perl” :)

[17:03] *** random_yanek joined
[17:03] <AlexDaniel> and it's possible to argue that in some ways it'll be better if Perl 6 stays “Perl”

[17:03] <AlexDaniel> so I guess we're trying to have it both ways for now :)

[17:10] <leszekdubiel> :) :) Okey... :) I understand that naming is a big problem. :) :) There were big blog articles from lizmat and zoofixznet

[17:23] *** domidumont left
[17:23] <cfa> xt/aspell.t: # Looks like you failed 28 tests of 376

[17:24] <cfa> think i'll leave it there for now

[17:28] *** scimon left
[17:34] *** yqt left
[17:42] *** dakkar left
[17:46] * guifa . o O ( if only it were possible to get the hunspell dictionary format with aspell corrections )

[17:47] <cfa> i'm sure this can be improved upon; i've just been focusing on whitelisting and corrections though

[17:47] <cfa> (since we weren't spellchecking the tree for a while)

[17:53] *** zacts joined
[17:56] *** zacts left
[17:56] *** melezhik left
[18:05] <cfa> # Looks like you failed 25 tests of 376

[18:05] *** leszekdubiel left
[18:12] <tbrowder> .ask lucs check your email when you get a chance

[18:12] <yoleaux> tbrowder: I'll pass your message to lucs.

[18:17] *** cpan-p6 left
[18:17] *** cpan-p6 joined
[18:19] *** natrys joined
[18:27] *** abraxxa left
[18:27] *** abraxxa joined
[18:28] *** abraxxa left
[18:37] *** domidumont joined
[18:37] <SmokeMachine> m: multi foo($a, :$str!) { samewith($a).join }; multi foo($a) { <a b c> }; say foo('blah', :str);

[18:37] <camelia> rakudo-moar 84ed8548f: OUTPUT: «abc␤»

[18:41] *** pecastro joined
[18:46] <cpan-p6> New module released to CPAN! DB-SQLite (0.3) by 03CTILMES

[19:02] *** cpage_ joined
[19:03] *** Grauwolf_ joined
[19:03] *** cfa left
[19:03] *** Peter_R_ joined
[19:04] *** sergot_ joined
[19:04] *** aindilis` joined
[19:04] *** pmichaud_ joined
[19:04] *** bisectable6_ joined
[19:04] *** ChanServ sets mode: +v bisectable6_

[19:04] *** Bob- joined
[19:04] *** mephinet- left
[19:04] *** Peter_R left
[19:04] *** probablymoony left
[19:04] *** reu_ left
[19:04] *** sftp left
[19:04] *** albongo left
[19:04] *** reportable6 left
[19:04] *** bisectable6 left
[19:04] *** APic left
[19:04] *** pmichaud left
[19:04] *** sergot left
[19:04] *** atta left
[19:04] *** aindilis left
[19:04] *** reportable6 joined
[19:04] *** esh_ left
[19:04] *** integral left
[19:04] *** leah2 left
[19:04] *** SCHAPiE left
[19:04] *** cpage left
[19:04] *** Grauwolf left
[19:04] *** evalable6 left
[19:04] *** bobby left
[19:04] *** masak left
[19:04] *** dalek left
[19:04] *** dalek joined
[19:04] *** Peter_R_ is now known as Peter_R

[19:04] *** cpage_ is now known as cpage

[19:04] *** ChanServ sets mode: +v reportable6

[19:04] *** ChanServ sets mode: +v dalek

[19:04] *** APic joined
[19:05] *** esh joined
[19:05] *** integral joined
[19:05] *** moony joined
[19:05] *** mephinet joined
[19:05] *** atta joined
[19:05] *** albongo joined
[19:05] *** sftp joined
[19:05] *** masak joined
[19:05] *** SCHAPiE joined
[19:06] *** masak is now known as Guest32385

[19:06] *** reu joined
[19:07] *** leah2 joined
[19:10] *** lichtkind joined
[19:34] *** integral left
[19:34] *** integral joined
[19:36] *** domidumont left
[19:42] *** ufobat joined
[19:43] *** natrys left
[19:43] *** shphrd joined
[19:44] *** shphrd left
[19:54] *** patrickb joined
[19:56] *** evalable6 joined
[20:02] *** calyx left
[20:04] *** molaf left
[20:11] *** zakharyas left
[20:14] *** drolax joined
[20:22] *** gurmble joined
[20:22] *** gurmble is now known as grumble

[20:30] <Xliff> m: $_ = 'aabc'; s[ 'bc' ] = 'yz'; .say

[20:30] <camelia> rakudo-moar 84ed8548f: OUTPUT: «aayz␤»

[20:31] <Xliff> Altreus: ^^

[20:31] <Xliff> m: $n = 'aabc'; ($n ~~ s[ 'bc' ]) = 'yz'; $n.say

[20:31] <camelia> rakudo-moar 84ed8548f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$n' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5$n = 'aabc'; ($n ~~ s[ 'bc' ]) = 'yz'; $␤»

[20:31] <Xliff> m: my $n = 'aabc'; ($n ~~ s[ 'bc' ]) = 'yz'; $n.say

[20:31] <camelia> rakudo-moar 84ed8548f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing assignment operator␤at <tmp>:1␤------> 3my $n = 'aabc'; ($n ~~ s[ 'bc' ]7⏏5) = 'yz'; $n.say␤»

[20:31] <Xliff> m: my $n = 'aabc'; $n ~~ s[ 'bc' ] = 'yz'; $n.say

[20:31] <camelia> rakudo-moar 84ed8548f: OUTPUT: «aayz␤»

[21:04] *** zachk joined
[21:04] *** d4l3k_ joined
[21:04] *** ChanServ sets mode: +v d4l3k_

[21:05] *** ufobat left
[21:06] *** reportable6 left
[21:06] *** integral left
[21:06] *** dalek left
[21:06] *** integral_ joined
[21:06] *** mephinet left
[21:06] *** d4l3k_ is now known as dalek

[21:06] *** mephinet joined
[21:07] *** zachk left
[21:08] *** zachk joined
[21:10] *** yqt joined
[21:10] *** zachk left
[21:10] *** zachk joined
[21:16] *** cpan-p6 left
[21:17] *** integral_ left
[21:17] *** integral_ joined
[21:17] *** integral_ is now known as integral

[21:17] *** cpan-p6 joined
[21:19] *** kensanata joined
[21:19] *** ofperfection joined
[21:20] <ofperfection> Hey guys, got a question on the regex as I perused the docs and I'm not sure why the following isn't working

[21:20] <ofperfection> if $_ ~~ m:g/<?after \=> <-[ " ]> +/ {say ~$/}

[21:20] <ofperfection> I'm matching against: NAME="Trisquel GNU/Linux"

[21:21] <ofperfection> if I change it to read:  if $_ ~~ m:g/<?after \=\"> .+/ {say ~$/}

[21:21] <ofperfection> I get Trisquel GNU/Linux"

[21:22] *** lizmat left
[21:22] <ofperfection> The way I understand in the first example, the negative character class should match ALL non quotation mark characters globally, consequently returning ALL NON QUOTATION MARK CHARACTERS after the "="

[21:22] <ofperfection> i.e., Trisquel GNU/Linux

[21:22] <ofperfection> I'm thinking I perhaps don't understand either the function of character classes or the <?after> lookbehind assertion

[21:22] <ofperfection> Can anyone point me in the right direction (:

[21:23] <sena_kun> ofperfection, so you want to get `Trisquel GNU/Linux` without `""` around it?

[21:23] <sena_kun> m: my $a = 'NAME="Trisquel GNU/Linux"'; if $a ~~ m:g/<?after '='> '"' (.+?) '"' / { say $0 }

[21:23] <camelia> rakudo-moar 84ed8548f: OUTPUT: «｢"Trisquel GNU/Linux"｣␤ 0 => ｢Trisquel GNU/Linux｣␤»

[21:25] <sena_kun> ofperfection, your first regex fails, because it tries to match anything except `"` symbol after `=`, but there is `="` in your test string.

[21:27] <sena_kun> your first regex means, like, "after you match '=', please get me all characters that are not `"`", but there are no symbols like that, because in test string there is a `"` right after '='.

[21:27] <sena_kun> so my version of your regex just states explicitly "get everything between `"`, that goes right after `=` symbol".

[21:29] <sena_kun> character classes match symbols based on if the symbol is included in the class or not, they don't work as "filters", where you can say "get me all digit characters, ignore all other characters that may be between them".

[21:30] <ofperfection> ooooh, I see now that using a capture group would have made my life much easier

[21:30] <ofperfection> Thank you

[21:31] <sena_kun> you are welcome

[21:31] <ofperfection> The reason I was trying to capture all non quote characters after the equals

[21:31] <ofperfection> is in some situations the format will be: NAME="Trisquel GNU/Linux"

[21:31] <ofperfection> In others, DISTRIB_ID=Ubuntu

[21:32] <sena_kun> ofperfection, if there is only this case, can you consider just strip off `"` after the match?

[21:32] <ofperfection> basically I was trying to capture all the text, as simply alphanumeric removed the characters that can occur in the name, such as GNU/Linux containing the '/'

[21:32] *** molaf joined
[21:33] <b2gills> m: my $a = 'NAME="Trisquel GNU/Linux"'; say $a ~~ / '='   '"' ~ '"'  [<(.*?)>] /

[21:33] <camelia> rakudo-moar 84ed8548f: OUTPUT: «｢Trisquel GNU/Linux｣␤»

[21:33] <b2gills> m: my $a = 'NAME="Trisquel GNU/Linux"'; say $a ~~ / '='   '"'? <( .*? )> '"'? /

[21:33] <camelia> rakudo-moar 84ed8548f: OUTPUT: «｢｣␤»

[21:34] <b2gills> m: my $a = 'NAME="Trisquel GNU/Linux"'; say $a ~~ / '='   ['"' <( .*? )> '"' | <(.*)>]  /

[21:34] <camelia> rakudo-moar 84ed8548f: OUTPUT: «｢Trisquel GNU/Linux｣␤»

[21:35] <sena_kun> m: my $a = 'NAME="Trisquel GNU/Linux"'; my $b = 'DISTRIB_ID=Ubuntu'; m:g/<?after '='> .+ /.subst('"', '', :g).say for ($a, $b);

[21:35] <camelia> rakudo-moar 84ed8548f: OUTPUT: «Trisquel GNU/Linux␤Ubuntu␤»

[21:35] *** lizmat joined
[21:35] <sena_kun> I think it's safe to assume `"` character cannot be part of the distro name.

[21:36] <sena_kun> if you want to support this case too, I think you can do a check, like `if $foo.starts-with('"') && $foo.ends-with('"') { chop off here }`

[21:36] <sena_kun> that's the safest route.

[21:36] <sena_kun> but if you don't need to support such odd cases, I'd go with subst.

[21:37] <sena_kun> ah, also, in this case, regex is redundant.

[21:38] <sena_kun> m: my $a = 'NAME="Trisquel GNU/Linux"'; my $b = 'DISTRIB_ID=Ubuntu'; .split('=')[1].subst('"', '', :g).say for ($a, $b);

[21:38] <camelia> rakudo-moar 84ed8548f: OUTPUT: «Trisquel GNU/Linux␤Ubuntu␤»

[21:38] <sena_kun> which is both faster and easier to read compared to the regex approach. :)

[21:38] <ofperfection> Thank you sena_kun, it is safe for my purposes to assume that the " character won't be part of the distro name

[21:39] <ofperfection> and I appreciate you walking me through all these potential solutions :)

[21:40] <sena_kun> you are welcome. :)

[21:41] <ofperfection> b2gills, I've not seen that syntax previously: say $a ~~ / '='   '"' ~ '"'  [<(.*?)>] /

[21:41] <sena_kun> https://docs.perl6.org/language/regexes#index-entry-regex__tilde-_regex__~-Tilde_for_nesting_structures <- here it is

[21:48] *** yqt left
[22:02] *** reportable6 joined
[22:02] *** ChanServ sets mode: +v reportable6

[22:03] <lizmat> so Geth is still AWOL ?

[22:03] <lizmat> oops, mischan

[22:04] <discord6> <Rogue> I feel like doing a small project but I just don't know what to do

[22:07] *** rindolf left
[22:08] *** kerrhau joined
[22:09] *** KotH left
[22:12] *** KotH joined
[22:14] *** kensanata left
[22:26] *** melezhik joined
[22:26] <melezhik> Hi! I am struggling with this error - @!stdout-data; expected Array but got Str ("OK1")

[22:26] <AlexDaniel> weekly: I guess it's old news, but: https://github.com/trizen/sidef “Sidef is a modern, high-level, general-purpose programming language, inspired by Ruby, Perl 6 and Julia.”

[22:26] <notable6> AlexDaniel, Noted!

[22:26] <melezhik> class A { has Array @.stdout-data is rw }

[22:27] <AlexDaniel> melezhik: @ is already an Array

[22:27] <AlexDaniel> melezhik: Array @array is an array of arrays :)

[22:27] <AlexDaniel> melezhik: Str @array is an array of Str

[22:28] <melezhik> m: class Foo { has Array @.a is rw }; push Foo.new.a, 1

[22:28] <camelia> rakudo-moar b394b63c2: OUTPUT: «Type check failed in assignment to @!a; expected Array but got Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[22:28] <AlexDaniel> so either

[22:28] <AlexDaniel> m: class Foo { has Int @.a is rw }; push Foo.new.a, 1

[22:28] <camelia> rakudo-moar b394b63c2: ( no output )

[22:28] <AlexDaniel> or

[22:28] <AlexDaniel> m: class Foo { has @.a is rw }; push Foo.new.a, 1

[22:28] <camelia> rakudo-moar b394b63c2: ( no output )

[22:28] <melezhik> m: perl6 -e 'class Foo { has Array @.a is rw }; push Foo.new.a, "1"'

[22:28] <camelia> rakudo-moar b394b63c2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3perl6 -e7⏏5 'class Foo { has Array @.a is rw }; pus␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement…»

[22:28] <melezhik> m: class Foo { has Array @.a is rw }; push Foo.new.a, "g"

[22:28] <camelia> rakudo-moar b394b63c2: OUTPUT: «Type check failed in assignment to @!a; expected Array but got Str ("g")␤  in block <unit> at <tmp> line 1␤␤»

[22:29] <melezhik> m: class Foo { has Array $.a is rw }; push Foo.new.a, "g"

[22:29] <camelia> rakudo-moar b394b63c2: ( no output )

[22:29] <melezhik> m: class Foo { has Array $.a is rw }; push Foo.new.a, "g"; say Foo.a.perl

[22:29] <camelia> rakudo-moar b394b63c2: OUTPUT: «Cannot look up attributes in a Foo type object␤  in method a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:30] *** robertle left
[22:30] <melezhik> m: class Foo { has Array $.a is rw }; my $a = Foo.new.a; push a.a, "g"; say a.a.perl

[22:30] <camelia> rakudo-moar b394b63c2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    a used at line 1␤␤»

[22:32] <discord6> <Rogue> m: class Foo { has @.a is rw; }; my $a = Foo.new; push $a.a, 'value'; say $a.a;

[22:32] <discord6> <Rogue> oof I guess that doesn't work with the bridge

[22:33] <discord6> <Rogue> but that's the idea ^

[22:34] <melezhik> m: class Foo { has Str @.a is rw }; my $obj=Foo.new; push $obj.a, "g"; push $obj.a, "h"; for $obj.a -> $i { say $i }

[22:34] <camelia> rakudo-moar b394b63c2: OUTPUT: «g␤h␤»

[22:34] <discord6> <Rogue> You need to use the sigil any time you refer to a variable (except when accessing it from a class instance, as that's technically just calling a method)

[22:34] <AlexDaniel> Rogue: someone will make it work, eventually, especially if discord becomes more popular :)

[22:35] <melezhik> thanks to all, I was just misused "lines" , in my case the difference is critical ...

[22:35] <melezhik> m: class Foo { has Str @.a is rw }; my $obj=Foo.new; push $obj.a, "g"; push $obj.a, "h"; for $obj.a.lines -> $i { say $i }

[22:35] <camelia> rakudo-moar b394b63c2: OUTPUT: «g h␤»

[22:35] <AlexDaniel> <JustATest>: say 42

[22:35] <melezhik> g h VS g nl h

[22:37] <discord6> <Rogue> Oh wow, I never knew .lines worked on an array in that manner

[22:38] *** leont joined
[22:40] <ofperfection> I've got a weird bit with lines earlier I'm attempting to sort that seems like it should be easy- if I wanted to coerce $filename.lines(1) to a string instead of a seq so I could perform .split, .subst, etc.

[22:40] <ofperfection> WHat is the best method of achieving this?

[22:40] <ofperfection> I was attempting to coerce with ~, but no dice

[22:41] <ofperfection> Cannot resolve caller split(Any, Str); Routine does not have any candidates. Is only the proto defined?

[22:41] <ofperfection> Seems like the root is that the output of $filename.lines(1) is a seq, and consequently I can't call Str methods on it

[22:42] <melezhik> > Oh wow, I never knew .lines worked on an array in that manner -  yeah - that took me hours of debugging today )=;

[22:43] <melezhik> it's tricky when your function accepts input parameters $something, which could be both array(list) and filehandler 

[22:43] <melezhik> so you have  $something.lines 

[22:43] <melezhik> and get terrible hard to debug code

[22:45] <lizmat> melezhik: multi's are your friend :-)

[22:46] <timotimo> what sometimes bothers me is that you can't always just .say on something to get an output of what it is; if the something is a file handle, it'll complain about missing arguments

[22:46] <timotimo> though of course there's dd which doesn't have that issue

[22:48] <melezhik> lizmat: yeah, I relied on "lines" "polymorphic" behavior and it bite me )-;  

[22:50] <lizmat> there's a whole class of problems like that

[22:50] <lizmat> m: dd <a b c>.contains("a b")

[22:50] <camelia> rakudo-moar b394b63c2: OUTPUT: «Bool::True␤»

[22:50] <lizmat> sometimes I think we should at least warn about these, or deprecate them

[22:51] *** molaf left
[22:52] <AlexDaniel> lizmat: yes yes for sure

[22:53] * lizmat is spectesting a fix for R#2686

[22:53] <synopsebot> R#2686 [open]: https://github.com/rakudo/rakudo/issues/2686 [regression][⚠ blocker ⚠] Some issue exposed by IO::Glob

[22:55] *** drolax left
[22:57] *** thundergnat left
[23:02] *** patrickz joined
[23:03] *** random_yanek left
[23:04] <AlexDaniel> lizmat++

[23:05] *** patrickb left
[23:08] *** kurahaupo joined
[23:08] <Xliff> m: my @a = <a b c>; .say for ^@a;

[23:08] <camelia> rakudo-moar b394b63c2: OUTPUT: «0␤1␤2␤»

[23:09] <lizmat> AlexDaniel: and that concludes my hacking for today

[23:09] <lizmat> good night&

[23:09] <AlexDaniel> lizmat: thank you! Good night!

[23:10] *** melezhik left
[23:11] *** random_yanek joined
[23:11] *** random_yanek left
[23:13] *** random_yanek joined
[23:46] *** lichtkind left
[23:57] *** w_richard_w joined
