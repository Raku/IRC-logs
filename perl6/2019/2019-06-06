[00:00] *** Manifest0 joined
[00:17] *** Manifest0 left
[00:22] *** Manifest0 joined
[00:28] <nadim_> evening!

[00:28] <nadim_> a simple questio here https://nopaste.linux-dev.org/?1215439

[00:29] <nadim_> I'd like to write the two line in the sort block as one line but didn't manage

[00:29] *** Manifest0 left
[00:33] <nadim_> hmm no more programming late for me, I am too old tofind even simple errors before I ask everyone and then find it :)

[00:35] *** Manifest0 joined
[00:42] *** Manifest0 left
[00:49] *** Manifest0 joined
[00:53] *** Manifest0 left
[00:59] *** Manifest0 joined
[01:06] *** Manifest0 left
[01:10] *** Manifest0 joined
[01:10] *** MasterDuke left
[01:12] *** MasterDuke joined
[01:13] *** MasterDuke left
[01:13] *** MasterDuke joined
[01:14] *** mniip left
[01:14] <Xliff> nadim: LOL! I resemble that remark!

[01:23] *** aborazmeh joined
[01:23] *** aborazmeh left
[01:23] *** aborazmeh joined
[01:23] *** Manifest0 left
[01:27] *** Manifest0 joined
[01:37] *** Xliff left
[01:46] *** mniip joined
[01:47] *** MasterDuke left
[01:53] *** giraffe_ left
[01:54] *** giraffe joined
[02:01] *** Manifest0 left
[02:01] *** imcsk8 joined
[02:06] *** Manifest0 joined
[02:09] *** cpup left
[02:14] *** Manifest0 left
[02:20] *** Manifest0 joined
[02:36] *** aborazmeh left
[02:57] *** Manifest0 left
[03:06] *** Manifest0 joined
[03:07] *** Cabanossi left
[03:17] *** Cabanossi joined
[03:18] *** Manifest0 left
[03:18] *** moysL joined
[03:20] <moysL> Where can I get nqp-2019.03.tar.gz? (rakudo.org/files/rakudo is 500)

[03:23] *** Manifest0 joined
[03:25] *** melezhik joined
[03:30] *** aborazmeh joined
[03:31] *** aborazmeh left
[03:31] *** aborazmeh joined
[03:32] *** Manifest0 left
[03:34] * moysL goes to bed. Please .tell if there is an answer. Thanks.

[03:34] *** moysL left
[03:37] *** Manifest0 joined
[03:39] *** veesh left
[03:42] *** melezhik left
[03:44] *** veesh joined
[03:49] *** kaare__ left
[03:49] *** kaare__ joined
[03:54] *** Manifest0 left
[03:55] *** cpup joined
[03:59] *** Manifest0 joined
[04:06] *** Manifest0 left
[04:11] *** Manifest0 joined
[04:22] *** Manifest0 left
[04:28] *** Manifest0 joined
[04:40] <holyghost> Good morning

[04:41] *** curan joined
[04:41] *** reach_satori left
[04:41] *** reach_satori joined
[04:56] *** Manifest0 left
[05:02] *** Manifest0 joined
[05:04] *** molaf joined
[05:06] *** Manifest0 left
[05:11] *** Manifest0 joined
[05:17] *** molaf left
[05:19] *** Manifest0 left
[05:19] *** sauvin joined
[05:24] *** Manifest0 joined
[05:28] *** Manifest0 left
[05:33] *** Manifest0 joined
[05:36] *** aborazmeh left
[05:37] <nadim_> morning

[05:44] *** Manifest0 left
[05:48] <moritz> .tell moysL https://perlgeek.de/static/p6/nqp/nqp-2019.03.tar.gz

[05:48] <yoleaux> moritz: I'll pass your message to moysL.

[05:49] *** Manifest0 joined
[05:58] *** Manifest0 left
[06:03] *** Manifest0 joined
[06:08] *** Manifest0 left
[06:14] *** Manifest0 joined
[06:14] *** Kaypie joined
[06:15] *** Kaiepi left
[06:24] *** Manifest0 left
[06:30] *** Manifest0 joined
[06:36] *** kst left
[06:40] *** Manifest0 left
[06:47] *** Manifest0 joined
[06:53] *** Manifest0 left
[06:59] *** Manifest0 joined
[07:04] *** rindolf joined
[07:10] *** Manifest0 left
[07:15] *** Manifest0 joined
[07:20] *** Manifest0 left
[07:24] *** Manifest0 joined
[07:32] *** patrickb joined
[07:33] *** Manifest0 left
[07:33] *** abraxxa joined
[07:36] *** dakkar joined
[07:38] *** Manifest0 joined
[07:42] *** adu left
[07:44] *** noisegul joined
[07:47] *** zakharyas joined
[07:48] *** Manifest0 left
[07:51] *** reach_satori left
[07:52] *** dolmen joined
[07:54] *** Manifest0 joined
[07:54] *** arkaitz joined
[08:00] *** arkaitz left
[08:11] *** Manifest0 left
[08:12] *** dolmen left
[08:15] *** dolmen joined
[08:17] *** Manifest0 joined
[08:39] *** reach_satori joined
[08:44] *** reach_satori_ joined
[08:47] *** reach_satori left
[08:49] *** Manifest0 left
[08:53] *** Manifest0 joined
[09:02] *** Manifest0 left
[09:07] *** Manifest0 joined
[09:16] *** AlexDani` is now known as AlexDaniel

[09:16] *** AlexDaniel left
[09:16] *** AlexDaniel joined
[09:24] <nadim_> I added an example of DDT filters, dumping json, for those that are want make their data look even nicer. https://github.com/nkh/P6-Data-Dump-Tree/blob/release/examples/JSON_filter.pl

[09:24] <nadim_> timotimo: ^

[09:25] *** Manifest0 left
[09:26] <patrickb> AlexDaniel: How did you thesis defending go?

[09:26] <AlexDaniel> patrickb: it was rescheduled :)

[09:27] <AlexDaniel> patrickb: tomorrow will be the day

[09:29] <jnthn> AlexDaniel: Best of luck!

[09:29] <AlexDaniel> thanks

[09:29] *** Manifest0 joined
[09:36] *** arkaitz joined
[09:37] *** Manifest0 left
[09:40] *** zakharyas left
[09:41] *** Manifest0 joined
[09:41] <timotimo> nadim_: that's super slick!

[09:41] <nadim_> in just a few lines

[09:42] <nadim_> I want to make you use filters ;)

[09:42] <nadim_> jq also displays json with nice colors but when one is inside perl ...

[09:43] <moritz> AlexDaniel: good luck!

[09:43] <AlexDaniel> thanks :)

[09:45] <timotimo> do as the perlans do?

[09:48] <nadim_> always! I always smile when I write 3 lines of perl and people tell me "but write it inxx language", hrrrm it's done why shall I re-write it?

[09:50] <nadim_> I thought I was going to wraap it in some little utility, Cannot modify an immutable List  ... Arff, Perl 6 is great but it breaks my balls sometimes; evenn though I am the one who is wrong here.

[09:50] <patrickb> AlexDaniel: Oh well. Hope it'll be good!

[09:51] <rindolf> Hi all! for (2..36) -> $b {(+$_).base($b).lc.say} does not work in perl6 -n - why?

[09:51] <nadim_> AlexDaniel: I won't say good luck, I am sure you don't need it but "success to you!"

[09:52] <AlexDaniel> thank you :)

[09:52] <nadim_> m: for (2..3) -> $b {(+$_).base($b).lc.say} 

[09:52] <camelia> rakudo-moar a643b8be1: OUTPUT: «Use of uninitialized value of type Any in numeric context␤0␤0␤  in block  at <tmp> line 1␤Use of uninitialized value of type Any in numeric context␤  in block  at <tmp> line 1␤»

[09:52] <timotimo> i wish you the best of luck around the thing. like, gentle traffic on the way to the location etc :)

[09:53] <nadim_> or be there very early and beat the traffic

[09:53] <timotimo> m: $_ = "99"; for (2..3) -> $b {(+$_).base($b).lc.say}

[09:53] <camelia> rakudo-moar a643b8be1: OUTPUT: «1100011␤10200␤»

[09:53] <timotimo> interesting

[09:55] <rindolf> m: $_="9999\n"; for (2..5) -> $b {(+$_).base($b).lc.say}

[09:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «10011100001111␤111201100␤2130033␤304444␤»

[09:55] <rindolf> hmmm

[09:56] *** cpan-p6_ left
[09:56] *** AlexDaniel left
[09:56] <rindolf> nadim_: bonjour

[09:56] *** AlexDaniel joined
[09:56] <nadim_> rindolf: shalom

[09:56] <rindolf> nadim_: oovrakhah

[09:57] *** cpan-p6 joined
[09:57] *** cpan-p6 left
[09:57] *** cpan-p6 joined
[09:58] <rindolf> nadim_: sup?

[09:59] <rindolf> perlbot: help basheval

[09:59] <perlbot> rindolf: The eval plugin. Syntax, «eval: code». Prefixes: w=>warnings, s=>strict, m=>use Ojo. Suffixes: t=>threaded, pb=>pastebin it, nl=>turn \n to ␤. languages: js, rk, r, pl, perl, deparse, rb, cp, bl, cobol, cb, bash, bleed, 1, 2, 3, 4, 5.0, 5.1, 5.2, 5.3, 5.4, 5.5, tall, all, rall, 5.6, 5.8, 5.8.4, 5.8.8, 5.10, 5.10.0, 5.12, 5.14, 5.16, 5.18, 5.20, 5.22, 5.24, 5.26, 5.28, 5.30

[10:00] *** arkaitz left
[10:01] <rindolf> echo 99999 | perl6 -n -e 'for (2..5) -> $b {(+$_).base($b).lc.say}'

[10:02] <nadim_> rindolf:  national day, I was supposed to put tiles on a wall,did some Perl 6 instead. now I have to beserious about it :) afk

[10:06] <rindolf> timotimo: how do i convert this pesky Any to Real?

[10:07] <timotimo> the problem isn't that it's an any, the problem is that it's undefined

[10:08] <timotimo> so even if you turn it to a Real, which your code already does successfully, it'll just end up as 0

[10:08] <timotimo> the output you get is just a warning, you can suppress those

[10:08] <timotimo> won't make the code right

[10:08] <timotimo> on the other hand

[10:08] <timotimo> i don't know why it doesn't have the lines in the $_

[10:08] <timotimo> that's quite possibly a bug in rakudo

[10:08] <timotimo> if you assign $_ in front of the for loop, it works properly, and that shouldn't be different from using -n i think

[10:10] *** zakharyas joined
[10:11] <timotimo> like, if you just use "for lines() { ... }" around the code it works fine

[10:13] *** atweiden-air joined
[10:16] *** arkaitz joined
[10:19] <holyghost> AlexDaniel : good luck with your Thesis Defence

[10:20] <AlexDaniel> thank you :)

[10:21] *** Manifest0 left
[10:22] <holyghost> If they take one day after, you have a good Ph.D I presume

[10:23] <timotimo> Thesis Defense sounds like a spin-off genre of Tower Defense games

[10:24] <rindolf> AlexDaniel: gl

[10:24] <holyghost> timotimo : It's Dutch for Thesis offload, but I will do my best on the Tower Defense Games

[10:26] *** Manifest0 joined
[10:26] <holyghost> I just came back from the bar, drinking 2 Chimay Blues' so don't harras me :o|

[10:27] <holyghost> I'm am going to hack in some good shit in PaganVisions2, if Xliff leads me on

[10:28] <holyghost> Today at 19h I mean

[10:31] <holyghost> GMT+2 :-)

[10:32] *** Manifest0 left
[10:38] *** Manifest0 joined
[10:43] *** Manifest0 left
[10:49] *** Manifest0 joined
[10:51] <rindolf> holyghost: https://www.gradschoolhub.com/faqs/what-is-a-thesis-defense/

[10:51] <rindolf> holyghost: it is in english too

[10:51] *** atweiden-air left
[10:53] *** zakharyas left
[10:53] *** Xliff joined
[10:53] <Xliff> \o

[10:54] <Xliff> m: for <a b c> X <e f g> -> ($a, $b) { say $a; say $b }

[10:54] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤e␤a␤f␤a␤g␤b␤e␤b␤f␤b␤g␤c␤e␤c␤f␤c␤g␤»

[10:54] <Xliff> m: for <a b c> Z <e f g> -> ($a, $b) { say $a; say $b }

[10:54] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤e␤b␤f␤c␤g␤»

[10:55] <Xliff> m: Hash.^attributes.say

[10:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Mu $!descriptor Mu $!storage)␤»

[10:55] <Xliff> m: Hash.^attributes.say

[10:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Mu $!descriptor Mu $!storage)␤»

[10:55] <Xliff> ^^ Is that order always guaranteed?

[10:55] <Xliff> m: Array.^attributes.say

[10:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Mu $!descriptor Mu $!reified Mu $!todo)␤»

[10:56] <Xliff> m: for Array.^attributes Z Hash.^attributes -> ($a, $b) { Sa.say; $b.say }

[10:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Sa used at line 1␤␤»

[10:56] <Xliff> m: for Array.^attributes Z Hash.^attributes -> ($a, $b) { $a.say; $b.say }

[10:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «Mu $!descriptor␤Mu $!descriptor␤Mu $!reified␤Mu $!storage␤»

[10:56] <Xliff> m: for Array.^attributes Z Hash.^attributes.reverse -> ($a, $b) { $a.say; $b.say }

[10:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «Mu $!descriptor␤Mu $!storage␤Mu $!reified␤Mu $!descriptor␤»

[10:58] <jnthn> Xliff: Do you mean does .^attributes return them in the declared order? Yes.

[10:58] <jnthn> Xliff: If you mean "can I depend on the internal structure of Array/Hash", then no, not at all.

[10:58] <Xliff> Thanks, jnthn

[10:58] <Xliff> m: for Array.^attributes «Z» Hash.^attributes.reverse -> ($a, $b) { $a.say; $b.say }

[10:58] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing infix inside hyper␤at <tmp>:1␤------> 3for Array.^attributes «Z»7⏏5 Hash.^attributes.reverse -> ($a, $b) { ␤    expecting any of:␤        infix␤        infix stopper␤»

[10:59] <Xliff> m: say <a b> Z <1 2 3>

[10:59] <camelia> rakudo-moar a643b8be1: OUTPUT: «((a 1) (b 2))␤»

[10:59] <Xliff> m: say <a b> »Z« <1 2 3>

[10:59] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing infix inside hyper␤at <tmp>:1␤------> 3say <a b> »Z«7⏏5 <1 2 3>␤    expecting any of:␤        infix␤        infix stopper␤»

[10:59] <Xliff> m: say <a b> »zip« <1 2 3>

[10:59] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing infix inside hyper␤at <tmp>:1␤------> 3say <a b> »7⏏5zip« <1 2 3>␤    expecting any of:␤        infix␤        infix stopper␤»

[10:59] <Xliff> m: say <a b> »[Z]« <1 2 3>

[10:59] <camelia> rakudo-moar a643b8be1: OUTPUT: «Lists on either side of non-dwimmy hyperop of infix:<Z> are not of the same length while recursing␤left: 2 elements, right: 3 elements␤  in block <unit> at <tmp> line 1␤␤»

[11:01] <Xliff> m: for roundrobin(Array.^attributes, Hash.^attributes.reverse) -> ($a, $b) { $a.say; $b.say }

[11:01] <camelia> rakudo-moar a643b8be1: OUTPUT: «Mu $!descriptor␤Too few positionals passed to '<anon>'; expected 2 arguments but got 1 in sub-signature␤  in block <unit> at <tmp> line 1␤␤Mu $!storage␤Mu $!reified␤Mu $!descriptor␤»

[11:01] <Xliff> m: say roundrobin(Array.^attributes, Hash.^attributes.reverse) 

[11:01] <camelia> rakudo-moar a643b8be1: OUTPUT: «((Mu $!descriptor Mu $!storage) (Mu $!reified Mu $!descriptor) (Mu $!todo))␤»

[11:03] *** farcas82regreg joined
[11:05] *** ravenousmoose left
[11:06] *** ravenousmoose joined
[11:09] <rindolf> my golf is down to 40bytes

[11:10] <rindolf> my$x=+slurp;$x.base($_).lc.say for 2..36

[11:10] *** ravenousmoose left
[11:11] *** araraloren joined
[11:13] *** dolmen left
[11:14] *** reach_satori_ left
[11:19] *** araraloren left
[11:19] *** araraloren joined
[11:27] <holyghost> Xliff, there's a subfeatured Cairo gfx backend in PaganVisions2

[11:28] <holyghost> I hope that you can help out later on

[11:28] *** Manifest0 left
[11:29] *** veesh left
[11:30] *** namibj left
[11:31] *** dolmen joined
[11:32] *** namibj joined
[11:33] *** Manifest0 joined
[11:34] *** veesh joined
[11:38] *** Kaypie left
[11:38] *** Kaypie joined
[11:48] *** Manifest0 left
[12:00] *** Manifest0 joined
[12:04] *** moysL joined
[12:04] <moysL> .

[12:04] <yoleaux> 05:48Z <moritz> moysL: https://perlgeek.de/static/p6/nqp/nqp-2019.03.tar.gz

[12:04] *** squashable6 left
[12:05] <moysL> moritz: Thanks!

[12:07] *** squashable6 joined
[12:08] *** ravenousmoose joined
[12:11] *** dakkar left
[12:11] *** dakkar joined
[12:33] *** aborazmeh joined
[12:33] *** aborazmeh left
[12:33] *** aborazmeh joined
[12:39] *** Manifest0 left
[12:40] <cpan-p6> New module released to CPAN! Term::Choose (1.5.8) by 03KUERBIS

[12:40] *** scimon joined
[12:43] *** Manifest0 joined
[12:48] *** Manifest0 left
[12:51] <Xliff> If I get a type like Positional[Int]... how can I determine the Int part?

[12:51] <Xliff> m: Positional[Int].of.say

[12:51] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Int)␤»

[12:51] <Xliff> \o/

[12:52] *** arkaitz left
[12:53] *** Manifest0 joined
[12:55] <cpan-p6> New module released to CPAN! Term::Choose::Util (1.2.9) by 03KUERBIS

[13:08] *** dolmen left
[13:17] *** moysL left
[13:18] *** dolmen joined
[13:20] *** dolmen left
[13:26] *** dolmen joined
[13:26] *** Kaypie left
[13:26] *** Kaypie joined
[13:32] *** domidumont joined
[13:33] *** domidumont1 joined
[13:36] *** domidumont left
[13:40] *** curan left
[13:42] *** domidumont joined
[13:42] *** molaf joined
[13:42] *** aborazmeh left
[13:44] *** domidumont1 left
[13:49] *** Manifest0 left
[13:58] *** Manifest0 joined
[14:00] *** Kaypie is now known as Kaiepi

[14:03] *** guifa left
[14:03] *** pmurias joined
[14:04] <pmurias> https://www.npmjs.com/package/rakudo - are the instructions clear enough? (I'll more about using rakudo.js in the browser later on)

[14:06] <pmurias> super hard for me to judge such things myself

[14:09] *** dolmen left
[14:13] *** Manifest0 left
[14:18] *** imcsk8 left
[14:18] *** Manifest0 joined
[14:24] *** sena_kun joined
[14:28] *** skids joined
[14:30] <patrickb> pmurias: It's pretty much copy paste of the commands there. I think so far it can't be much clearer. Question is, how do you continue from there on? How would a sane project setup look like?

[14:32] *** molaf left
[14:33] <pmurias> patrickb: thanks for feedback, I'll think about what the answers to that questions are

[14:39] *** aborazmeh joined
[14:39] *** aborazmeh left
[14:39] *** aborazmeh joined
[14:55] *** aborazmeh left
[15:05] *** Manifest0 left
[15:06] *** cpup left
[15:07] *** pmurias left
[15:09] *** dolmen joined
[15:10] *** domidumont left
[15:13] *** Manifest0 joined
[15:15] *** dolmen left
[15:16] *** dolmen joined
[15:26] *** cpup joined
[15:29] *** reach_satori joined
[15:30] *** abraxxa left
[15:30] *** Manifest0 left
[15:31] *** johnjohn101 joined
[15:36] *** Manifest0 joined
[15:40] *** Manifest0 left
[15:47] *** mtg joined
[15:47] *** Manifest0 joined
[15:58] *** Manifest0 left
[16:04] *** Manifest0 joined
[16:06] *** patrickb left
[16:11] *** mowcat joined
[16:11] *** mowcat left
[16:11] *** mowcat joined
[16:17] *** khisanth_ left
[16:18] *** scimon left
[16:20] <moritz> as an npm user, I'd certainly want to know how to integrate my js and my perl 6

[16:23] *** dakkar left
[16:30] *** khisanth_ joined
[16:30] *** Manifest0 left
[16:32] <Geth> ¦ ecosystem: tmtvl++ created pull request #458: Add Neural::Net to ecosystem

[16:32] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/458

[16:34] *** dolmen left
[16:36] *** Manifest0 joined
[16:37] *** araraloren left
[16:40] *** dolmen joined
[16:51] <Geth> ¦ ecosystem: 958e99de9f | (Tim Van den Langenbergh)++ | META.list

[16:51] <Geth> ¦ ecosystem: Add Neural::Net to ecosystem

[16:51] <Geth> ¦ ecosystem: 

[16:51] <Geth> ¦ ecosystem: See https://github.com/tmtvl/neural-net

[16:51] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/958e99de9f

[16:51] <Geth> ¦ ecosystem: cf8f16018b | Altai-man++ (committed using GitHub Web editor) | META.list

[16:51] <Geth> ¦ ecosystem: Merge pull request #458 from tmtvl/master

[16:51] <Geth> ¦ ecosystem: 

[16:51] <Geth> ¦ ecosystem: Add Neural::Net to ecosystem

[16:52] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/cf8f16018b

[16:54] *** mowcat left
[16:58] <jdv79> vrurg: i still can't build on this box

[16:59] <jdv79> is git pull --rebase && git clean -dfx && perl Configure.pl --gen-moar not enough anymore?

[17:00] <vrurg> jdv79: what error do you get? If it's first run of Configure.pl in some time you might need `git submodule update` for once.

[17:13] <jdv79> its not the first run - its a checkout that's existed for months

[17:14] <jdv79> and this way of updating has always worked

[17:14] <jdv79> https://nopaste.xyz/?47b34ec1400105ad#5LtuhSvinp0KVpXipe241k2uWdCQGJlccxnPPV4iI9E=

[17:19] <vrurg> jdv79: "First in some time" – meaning that a while ago it's been done in a way that Configure.pl sets submodule.recurse in git config and git pull updates submodules alongside with the repo tree.

[17:19] <vrurg> You could've not run Configure since then.

[17:20] <vrurg> And from the error message I conclude that this is the case. If you repeat `git pull` it'll now update everything and build will work.

[17:21] *** kurahaupo is now known as kurahaupo_

[17:26] *** Manifest0 left
[17:28] <nadim_> is ther  something that  is like map but doesn't return anything,  a loop of sort. I whant to apply a block on all the elements of a list.

[17:28] <ugexe> for loop

[17:28] <jdv79> vrurg: so that's a one time extra step?

[17:28] <jdv79> it seems to be chugging along now

[17:29] <nadim_> that is not a for loop :)

[17:29] <ugexe> how is it not a for loop?

[17:29] <jdv79> vrurg: i missed the "in some time"

[17:29] <nadim_> @l.apply: {..}

[17:29] <vrurg> jdv79: yep, it is. Transition period of a kind.

[17:29] <jdv79> cool.  thanks.

[17:29] <vrurg> yw :)

[17:29] <ugexe> {...} for @l

[17:29] <nadim_> ugexe: I mean I want somethingthat's not a for loop

[17:30] <ugexe> why do you not want a for loop for something that applies side effects?

[17:30] <nadim_> just curious id there is another way to write it

[17:31] *** Manifest0 joined
[17:32] *** |oLa| joined
[17:33] <timotimo> i think when you just sink the result of a map, nothing will be retained?

[17:33] <timotimo> m: (^100_000_000).map(* + 1); say "done";

[17:33] <camelia> rakudo-moar a643b8be1: OUTPUT: «done␤»

[17:34] <timotimo> you can't tell from camelia, but increasing the number here doesn't increase the memory it takes

[17:34] <timotimo> nadim_: you can try that on your machine

[17:37] <nadim_> it says "done"

[17:37] <nadim_> m:(^100_000_000).map(* + 1); say "done";

[17:37] <evalable6> nadim_, rakudo-moar bd2ceefd5: OUTPUT: «done␤»

[17:37] <ugexe> void context map always grinds my gears

[17:37] <nadim_> it took 8 secs on my machine and I thought it was intantaneous here ;)

[17:38] <nadim_> ugexe: I agree

[17:42] *** dolmen left
[17:48] *** noisegul left
[17:48] *** Manifest0 left
[17:51] *** kurahaupo_ is now known as kurahaupo

[17:53] *** Manifest0 joined
[17:54] *** andrzejku_ joined
[17:55] *** andrzejku_ left
[17:59] *** molaf joined
[18:03] <Kaiepi> the js backend is really messy

[18:04] <Kaiepi> i'm gonna clean it up and throw in some minor optimizations here and there

[18:06] <ugexe> nadim_: (1,2,3)>>.&{say $_}; # :P

[18:07] <ugexe> m: (1,2,3)>>.&{say $_}; # :P

[18:07] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤2␤3␤»

[18:08] <timotimo> ugexe: that returns something tho!

[18:08] <ugexe> ah right

[18:08] *** Manifest0 left
[18:15] *** Manifest0 joined
[18:19] *** kurahaupo left
[18:22] *** dolmen joined
[18:25] *** Manifest0 left
[18:29] *** Manifest0 joined
[18:33] <nadim_> hehe

[18:33] <nadim_> is there a way to tell dd to print where it was called?

[18:33] *** sauvin left
[18:34] *** Manifest0 left
[18:36] <AlexDaniel> m: say callframe

[18:36] <camelia> rakudo-moar a643b8be1: OUTPUT: «<tmp> at line 1␤»

[18:36] <AlexDaniel> m: sub foo { say callframe }; foo

[18:36] <camelia> rakudo-moar a643b8be1: OUTPUT: «<tmp> at line 1␤»

[18:36] <AlexDaniel> m: sub foo { say Backtrace.new }; foo

[18:36] <camelia> rakudo-moar a643b8be1: OUTPUT: «Backtrace(4 frames)␤»

[18:37] <AlexDaniel> m: sub foo { say Backtrace.new.Str }; foo

[18:37] <camelia> rakudo-moar a643b8be1: OUTPUT: «  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:37] <AlexDaniel> nadim_: that?

[18:38] <nadim_> no, not that, that I can, because DDT can render call frames, what I meant is the rakudo built in "dd", it seems theres one in my code that I can't pin point :)

[18:38] <nadim_> now don't laug, or do, but this happens quite often to me

[18:39] <nadim_> I put debug printouts and then I have to chase them around

[18:39] *** Manifest0 joined
[18:40] <nadim_> DDT has a mechanism to enable display of call site globally ... because I sometime lose the call site

[18:40] *** dolmen left
[18:41] *** Woodi left
[18:43] <timotimo> m: dd

[18:43] <camelia> rakudo-moar a643b8be1: OUTPUT: «block <unit>()␤»

[18:43] *** pecastro joined
[18:43] <timotimo> nadim_: you mean like that?

[18:44] <timotimo> it's not the best

[18:44] <timotimo> but it's a start

[18:45] <nadim_> I mean that if I have this code at line L of file F: dd @something ... then I'd like dd to tell me it was called at F:L

[18:45] *** Manifest0 left
[18:48] <ugexe> callframe.line(), callframe.file() ?

[18:49] <nadim_> yes but I want dd to do that, not me. all dd calls, because I have lost where dd  is in the code

[18:49] <ugexe> oh right, dd isn't your module

[18:50] <nadim_> dd is rakudo, not even Perl 6

[18:50] <ugexe> i suppose you could &dd.wrap({ ... })

[18:51] <nadim_> ah! that sounds interesting

[18:51] <ugexe> m: &dd.wrap({ say callframe.line; say callframe.file }); dd 1

[18:51] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤<tmp>␤»

[18:51] *** Manifest0 joined
[18:53] <ugexe> m: &dd.wrap({ say callframe.line; say callframe.file; callsame }); dd 42

[18:53] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤42␤<tmp>␤»

[18:53] <ugexe> stupid order

[18:55] <nadim_> and I get this error: Too many positionals passed; expected 0 or 1 arguments but got 2

[18:55] <ugexe> you'll have to show your work

[18:56] <nadim_> I just put your code in the begining of my script and I got that error

[18:57] <ugexe> m: &dd.wrap({ say callframe.line; say callframe.file; callsame }); dd my %x = [42,1]

[18:57] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤Hash %x = {"42" => 1}␤<tmp>␤»

[18:57] <ugexe> you should probably check what values are tripping it up

[19:06] *** |oLa| left
[19:06] *** Manifest0 left
[19:07] *** molaf left
[19:11] *** ravenous_ joined
[19:12] *** Manifest0 joined
[19:14] <nadim_> where is precompile code cached? it seems that it's not in lib anymore

[19:16] *** andrzejku joined
[19:16] *** andrzejku left
[19:22] <Kaiepi> nadim_, it depends

[19:23] <Kaiepi> it can be in $installdir/precomp, $installdir/share/perl6/precomp, $installdir/share/perl6/site/precomp, or in lib if you use `use 'lib'`

[19:25] <vrurg> m: my module A { role B[$x] is export { } }; say B.HOW.^name;

[19:25] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    B used at line 1␤␤»

[19:25] <Kaiepi> i'm not sure if there's a way to grep where the precomp file for a specific module is

[19:25] <vrurg> m: my module A { role B[$x] is export { } }; import A; say B.HOW.^name;

[19:25] <camelia> rakudo-moar a643b8be1: OUTPUT: «Perl6::Metamodel::ParametricRoleHOW␤»

[19:25] <vrurg> ^ shouldn't it be ParametricRoleGroupHOW???

[19:26] <vrurg> m: my module A { role B[$x] is export { }; role B is export { } }; import A; say B.HOW.^name;

[19:26] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤A symbol 'B' has already been exported␤at <tmp>:1␤»

[19:26] <vrurg> m: my module A { role B[$x] is export { }; role B { } }; import A; say B.HOW.^name;

[19:26] <camelia> rakudo-moar a643b8be1: OUTPUT: «Perl6::Metamodel::ParametricRoleHOW␤»

[19:27] <nadim_> Kaiepi: thanks, I want to remove everything 

[19:41] *** farcas82regreg left
[19:48] *** dolmen joined
[19:49] *** pmurias joined
[19:50] *** bioevolgenec joined
[19:52] <bioevolgenec> Hello! I am a longtime Perl 5 programmer, trying to learn Perl 6 with the Learning Perl 6 program. I am stuck at the very second exercise in the book (Exercise 0.2).

[19:53] <bioevolgenec> I am supposed to run some perl6 code provided by the author as "perl6 find_moth_genera.p6 Butterflies_and_Moths.txt". When I do that, nothing happens as if the program hangs. The top command doesn't show perl6 using the cpu. I tried reinstalling perl6 from source but it didn't help.

[19:53] <bioevolgenec> *Learning Perl 6 book, not program

[19:55] <nadim_> bioevolgenec: did you try simple perl 6 programs like "hi".say

[19:55] <nadim_> to see if P6 runs

[19:55] <ugexe> well, they *are* on the second exercise

[19:55] <bioevolgenec> nadim_: Yes, that works.

[19:56] <nadim_> is the code that you want to run long?

[19:56] <bioevolgenec> Well, it's available here: https://github.com/fluca1978/LearningPerl6_Downloads/blob/master/Preface/find_moth_genera.p6

[19:56] <nadim_> nopaste it somewhere if you can't make it smaller

[19:57] <nadim_> ok, I look at it

[19:58] *** guifa joined
[20:02] <nadim_> it looks like it's reading from stdin

[20:03] <nadim_> if you run it as perl6 program something_whatever (it doesn't matter it is not used)

[20:03] *** hythm_ joined
[20:04] <nadim_> then you can type a line that contains something that matches the regex

[20:04] <nadim_> that line wil be output

[20:04] <timotimo> hm. why does it suggest to put *@*ARGS in MAIN as its first argument?

[20:04] <Xliff> .seen tadzik

[20:04] <yoleaux> I saw tadzik 3 Jun 2019 20:03Z in #perl6: <tadzik> impeachment aside, hostility towards visitors was there long before anyone in particular became president

[20:05] <bioevolgenec> Hmm, if I run it like 'perl6 find_moth_genera.p6 < Butterflies_and_Moths.txt', it complains that I haven't given it a file to read.

[20:05] <timotimo> yeah

[20:05] <timotimo> it's asking for at least one argument to be passed

[20:05] <timotimo> when you're just passing something to stdin, that's not a commandline argument

[20:05] <timotimo> the shell eats that up and perl6 doesn't get to see that it ever existed

[20:08] <timotimo> i don't have a copy of Learning Perl6 so i don't know what exactly it describes

[20:08] <nadim_> I think the code is supposed to run line P5 when you give multiple files and run a while(<>)  loop

[20:08] <nadim_> but it doesn't

[20:09] <timotimo> hm. wasn't the behaviour of lines() inside of MAIN changed a few months back

[20:10] <timotimo> hm.

[20:10] <timotimo> perl6 -e 'sub MAIN($a, $b) { say $*ARGFILES.perl; .say for lines() }' 1 2

[20:10] <bioevolgenec> You can see exercise 0.2 here: https://books.google.co.uk/books?id=sbRqDwAAQBAJ&printsec=frontcover&dq=learning+perl6&hl=el&sa=X&ved=0ahUKEwjs9t6y1NXiAhVhs3EKHVmsAt4Q6AEIKTAA#v=onepage&q=exercise%200.2&f=false

[20:10] <timotimo> this outputs whatever i enter back at me

[20:11] <hythm_> hello, this grammar sometimes work and other times do not, https://gist.github.com/hythm7/7f45390cffa26844287fd18bac4d19d1   , can someone verify if its working consistently for them before i reopen issue 

[20:11] <nadim_> timotimo:   that' it

[20:11] <nadim_> renaming the sub made it work

[20:11] <timotimo> but once you are inside MAIN, you can't get it to take filenames from the commandline any more, it seems like

[20:11] <timotimo> hythm_: i'll have a look

[20:12] <timotimo> yeah, it's inconsistent all right

[20:12] <nadim_> bioevolgenec: are you following?

[20:12] <timotimo> that was probably a bit much at once

[20:12] <bioevolgenec> nadim_: I'm a bit confused but I'm here.

[20:12] <nadim_> that's why I ask, so I can explain

[20:13] <nadim_> bioevolgenec: that example worked till a few months ago

[20:13] <timotimo> wow, what exactly is turning the google ui greek when following that link

[20:13] <bioevolgenec> timotimo: Probably the "&hl=el" part. Sorry about that

[20:13] *** Actualeyes joined
[20:14] <timotimo> what does "el" stand for in that?

[20:14] <hythm_> thanks timo, its probably related to this issue i filed and closed, the only difference is that i changed role to grammar

[20:14] <bioevolgenec> In greek, "greek" is written as "ellinika".

[20:14] <hythm_> https://github.com/rakudo/rakudo/issues/2933

[20:14] <timotimo> that explains it

[20:15] <timotimo> oh no, the "Constant width bold" title is before the page break before the explanation

[20:16] <nadim_> bioevolgenec: commentout out the sub MAIN ...  line

[20:16] <nadim_> bioevolgenec: replace it with sub execercise2 or whatever you please

[20:16] <nadim_> bioevolgenec: call the exercise2 sub

[20:17] <nadim_> bioevolgenec: you can at least continue from there

[20:17] <timotimo> it'd sure be nice if all examples from LearningPerl6 were turned into a very-easy-to-run test suite

[20:17] <timotimo> that we maybe run regularly in CI

[20:17] <bioevolgenec> nadim_: It worked, thanks so much! :D

[20:18] <timotimo> oh btw

[20:18] <timotimo> "use v6.c" will fix the problem, too

[20:18] <timotimo> the argfiles-inside-MAIN thing was changed as part of v6.d i believe

[20:18] <nadim_> even better

[20:18] <timotimo> anybody want to send a pull request to bdf?

[20:18] <bioevolgenec> timotimo: Good to know. I will try that before asking, next time.

[20:19] <timotimo> ah there's already an issue

[20:19] <timotimo> i assume tenther on github is bioevolgenec?

[20:19] <timotimo> bioevolgenec: don't hesitate to ask, though

[20:19] <timotimo> that way we'll also find out when things are wrong somewhere

[20:19] <nadim_> bioevolgenec: maybe you can send the pull request

[20:19] <bioevolgenec> timotimo: Nope, I looked at all the forks to see if someone had modified the exercise and tenther's was the only one I had open at the time.

[20:20] *** molaf joined
[20:20] <bioevolgenec> nadim:_ I can check if there is an issue already and, if not, I will open one.

[20:21] <timotimo> i added a comment on the issue in the LP6D repo

[20:21] <bioevolgenec> timotimo: Oh, great

[20:22] <Kaiepi> how does the repl print (low level object x) for stuff from nqp land when there's no gist or perl method or anything on those low level objects usually?

[20:22] <timotimo> Kaiepi: look in HLL/Backend.nqp or HLL/Compiler.nqp or Perl6/Compiler.nql in nqp, nqp, and rakudo respectively

[20:22] <Kaiepi> thanks

[20:23] <Kaiepi> i'm adding an eval-nqp command to my bot since i'm sick of typing use nqp; and forgetting about it half the time lol

[20:24] <timotimo> m: use nqp; say "foo bar { nqp::add_i(1, 2) }";

[20:24] <camelia> rakudo-moar a643b8be1: OUTPUT: «foo bar 3␤»

[20:24] *** kst joined
[20:25] <ugexe> m: say %(a => 1).DUMP; # i forget if DUMP works for that

[20:25] <camelia> rakudo-moar a643b8be1: OUTPUT: «Hash<1>(␤    :$!descriptor(ContainerDescriptor::Untyped<2>(...)),␤    :$!storage(BOOTHash<3>(...))␤)␤»

[20:25] <timotimo> what the fuuuuuuuuu

[20:25] <timotimo> m: DOC INIT { say "hi" }; use nqp; say "foo bar w{ nqp::add_i(1, 2) }";

[20:25] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::add_i, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3se nqp; say "foo bar w{ nqp::add_i(1, 2)7⏏5 }";␤»

[20:25] <timotimo> m: DOC INIT { say "hi" }; use nqp; say nqp::add_i(1, 2)

[20:25] <camelia> rakudo-moar a643b8be1: OUTPUT: «3␤»

[20:26] <timotimo> m: DOC INIT { say "hi" }; use nqp; say "{nqp::add_i(1, 2)}"

[20:26] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::add_i, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3 "hi" }; use nqp; say "{nqp::add_i(1, 2)7⏏5}"␤»

[20:26] <timotimo> what the fffffffuuuuuuuuuuu??

[20:26] <timotimo> that's super odd

[20:26] <timotimo> bisect: DOC INIT { say "hi" }; use nqp; say "{nqp::add_i(1, 2)}"

[20:26] <bisectable6> timotimo, Bisecting by exit code (old=2015.12 new=89f8f60). Old exit code: 0

[20:26] *** sivoais left
[20:27] <bisectable6> timotimo, bisect log: https://gist.github.com/507346c1eae9afe2b8129ae88c726df0

[20:27] <bisectable6> timotimo, There are 25 candidates for the first “new” revision. See the log for more details

[20:27] *** sivoais joined
[20:28] *** Exodist left
[20:28] *** Exodist joined
[20:28] *** bioevolgenec left
[20:29] <timotimo> hythm_: sorry, i got a bit distracted :)

[20:30] <nadim_> timotimo: there was alreadya pull request, the only one, of course I saw it after making one :)

[20:31] <timotimo> oh, for the example in LP6?

[20:31] <Kaiepi> m: use nqp; nqp::getcomp('nqp').eval('nqp::say("hi!")')

[20:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «Cannot call method 'eval' on a null object␤  in block <unit> at <tmp> line 1␤␤»

[20:31] <timotimo> nadim_: did i ever ask for a more convenient API to get a "ddt" that does the grammar dumping stuff?

[20:32] <Kaiepi> m: use nqp; nqp::getcomp('nqp').compile('nqp::say("hi!")')

[20:32] <camelia> rakudo-moar a643b8be1: OUTPUT: «Cannot call method 'compile' on a null object␤  in block <unit> at <tmp> line 1␤␤»

[20:32] <Kaiepi> m: use nqp; nqp::getcomp('nqp')

[20:32] <camelia> rakudo-moar a643b8be1: ( no output )

[20:32] <Kaiepi> m: use nqp; say nqp::getcomp('nqp')

[20:32] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Mu)␤»

[20:32] <Kaiepi> i guess it won't let me get nqp's compiler because it's restricted?

[20:33] <nadim_> timotimo: not that I remember

[20:33] <Kaiepi> it works on the repl

[20:33] <nadim_> what do you want?

[20:33] <timotimo> Kaiepi: i got you, hold on a sec

[20:34] <nadim_> timotimo:  think I said, derive a class but then we didn't talk much more about it

[20:34] <timotimo> nadim_: "ddt $parseresult, :grammardump" modulo naming

[20:34] <timotimo> yeah i know how to make it work

[20:34] <nadim_> I know you know ;)

[20:34] <timotimo> i just don't want to have more than a single word to get it :)

[20:34] <nadim_> and what would that line do?

[20:35] <timotimo> use Data::Dump::Tree::ExtraRoles ;  Data::Dump::Tree.new: :does(DDTR::MatchDetails) ...

[20:36] <timotimo> Kaiepi: getcomp only gets you compilers that have been registered; rakudo doesn't actually load the nqp compiler in normal operation

[20:37] <timotimo> Kaiepi: but i also wasn't able to get the nqp compiler pulled in easily

[20:37] <Kaiepi> right, i keep forgetting the repl's weird

[20:38] <timotimo> hm.

[20:38] <timotimo> m: use nqp; use NQPHLL:from<NQP>; say ::<HLL>

[20:38] <camelia> rakudo-moar a643b8be1: OUTPUT: «No such method 'gist' for invocant of type 'HLL'␤  in block <unit> at <tmp> line 1␤␤»

[20:38] <timotimo> something's in there, but it's a very picky low-level object

[20:38] <timotimo> it doesn't seem to have a single method on it

[20:40] <timotimo> it's a KnowHOW, which has all of its features built inside of MoarVM using some "manual" C calls

[20:40] <hythm_> timotimo: no worries, when you have time. ill also try from home laptop, i dont want to reopen the issue and turns out im running older version.

[20:41] <timotimo> hythm_: it's also giving different output each time on my machine

[20:43] <hythm_> I will reopen the issue then. thanks for testing

[20:44] <timotimo> i wonder if this is a problem with NFAs

[20:44] *** ravenous_ left
[20:44] <timotimo> Grammar::Tracer thinks this: in one instance it tries pkg:sym<name> and that fails. in the other instance it tries pkg:sym<build> and that succeeds

[20:44] <timotimo> no, wrong

[20:45] <timotimo> the order in which it tries those is different every time

[20:45] <hythm_> just to add, if changed it from grammar to role, it works consistently

[20:45] <timotimo> well, that's certainly weird

[20:46] <nadim_> timotimo: apropos Grammar::Tracer, i have another version, same thing more compact output with same amount of info

[20:46] <timotimo> i think i saw it once

[20:47] <timotimo> is it in a pull request to Grammar::Debugger?

[20:47] <timotimo> oh, also, your examples folder (or is it the test folder?) has "jumction" somewhere

[20:47] <timotimo> in a filename

[20:49] <nadim_> in the test directory, fixed that, thanks

[20:49] <nadim_> timotimo: https://github.com/nkh/P6-Grammar-Tracer-Compact

[20:50] <nadim_> haven't touched it for a while ymmv

[20:50] <timotimo> a screenshot directly in the readme would be swell

[20:51] <timotimo> hythm_: when turning on the NQP_NFA_DEB debug stuff, i can see that it's getting the "mergesubrule" calls for different methods of the grammar in a randomized order or something

[20:51] <timotimo> i'm not sure why that makes the difference between a parse fail and a parse success, though

[20:55] <timotimo> oh, nadim_, did you know that you can get a TTY (or PTY really) connected to a process via a socket by using the excelleng "socat" tool?

[20:57] <timotimo> i do not yet know all that implies

[20:57] <timotimo> but it's surely a thing worth investigating

[20:58] <Xliff> Is there a perl6doc?

[20:59] <Xliff> Nevermind. Found it.

[21:04] *** ejd joined
[21:08] <nadim_> timotimo: https://imgur.com/Fa0W0u4 the screenshot, I'll add one when there is a third user inthe world ;)

[21:08] *** ejd left
[21:11] <nadim_> timotimo: I haven't used socat, netcat  yes. I think they mean that you can share your TTY. you can do that with netcat, so your session is on a socket and if you rhave the address and port you get a remote shell

[21:11] <timotimo> netcat doesn't give you a full terminal

[21:11] <timotimo> i think it gives you line-oriented input?

[21:12] <nadim_> true

[21:12] <timotimo> with a pty input on one side of socat and tcp on the other, you can get at individual keystrokes

[21:12] <timotimo> so that's nice

[21:13] <nadim_> the socat man page is looong, everytime i look at It i postpone playing with it

[21:14] <timotimo> yeah, socat is immensely powerful with its billions of endpoint types

[21:14] <timotimo> it really is a swiss army knife

[21:14] *** skids left
[21:15] <timotimo> you'll usually only ever use like four of the hundreds for any given use case :D

[21:16] *** Kaiepi left
[21:16] <timotimo> nadim_: love how "question" and "answer" accidentally line up like that :) :)

[21:18] *** ejd joined
[21:19] <nadim_> apropos the ddt interface, what about ddt $result, :does(YourSetup); So anyone can write a setup, I can call it after internal setup so you get the dumper and can do what you want with it 

[21:21] <nadim_> I writea little prototype and get back to you

[21:26] *** pmurias left
[21:49] <kawaii> So tomorrow I have a job interview, there will be some paired programming

[21:49] <kawaii> I have the advantage since I can choose the language, I'll be using Perl 6 :)

[21:50] *** hythm_ left
[21:50] <sena_kun> kawaii, good luck!

[21:50] <kawaii> thank you sena_kun!

[21:51] <kawaii> this company use a lot of Rust and Go, I think this will be the first time they've seen P6 :)

[21:52] *** Summertime left
[21:52] *** pmurias joined
[21:53] *** Kaiepi joined
[21:54] <pmurias> Kaiepi: if you have questions about things feel free to ask

[21:55] *** Summertime joined
[21:55] *** Kaiepi left
[21:55] *** Kaiepi joined
[21:56] <Kaiepi> aight, thanks pmurias

[21:58] *** Kaiepi left
[21:59] <pmurias> .tell Kaiepi if things seem unclear it's highly possible they actually are and they need to be fixed

[21:59] *** pecastro left
[21:59] <yoleaux> pmurias: I'll pass your message to Kaiepi.

[22:05] <Xliff> What does this mean? 

[22:05] <Xliff> No appropriate parametric role variant available for 'Amazon::AWS::Roles::Eqv'

[22:08] <Xliff> m: role A[::T] { }

[22:08] <camelia> rakudo-moar a643b8be1: ( no output )

[22:08] <Xliff> m: role A::B[::T] { }

[22:08] <camelia> rakudo-moar a643b8be1: ( no output )

[22:08] <Xliff> m: role A::B::Eqv[::T] { }

[22:08] <camelia> rakudo-moar a643b8be1: ( no output )

[22:08] *** dolmen left
[22:10] *** pmurias left
[22:18] *** Manifest0 left
[22:23] *** Manifest0 joined
[22:23] *** dolmen joined
[22:29] *** cpan-p6 left
[22:29] *** cpan-p6 joined
[22:29] *** cpan-p6 left
[22:29] *** cpan-p6 joined
[22:29] *** Manifest0 left
[22:35] *** Manifest0 joined
[22:38] <kawaii> m: my %hash<value> = 7;

[22:38] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Shaped variable declarations not yet implemented. Sorry.␤at <tmp>:1␤------> 3my %hash<value>7⏏5 = 7;␤»

[22:38] <kawaii> oh, okay :(

[22:41] <timotimo> that'd be for hashes that are limited to a very specific set of keys

[22:41] <timotimo> you can do this tho:

[22:41] <timotimo> m: (my %hash)<value> = 7; say %hash.perl

[22:41] <camelia> rakudo-moar a643b8be1: OUTPUT: «{:value(7)}␤»

[22:42] <Xliff>  Oh! Parametric role requires a parameter! LOL! /o\

[22:45] *** Kaiepi joined
[22:47] *** lotreck joined
[22:47] <Xliff> How can I get the type of self if I can't use .^WHAT

[22:47] <lotreck> Hello, Are there any common perl6 web frameworks ?

[22:47] <lotreck> in use ?

[22:47] <Xliff> m: class A { method a { say self.^WHAT.name }; }; A.a

[22:47] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use .^ on a non-identifier method call␤at <tmp>:1␤------> 3class A { method a { say self.^WHAT7⏏5.name }; }; A.a␤    expecting any of:␤        method arguments␤»

[22:47] <timotimo> .^WHAT is rwong

[22:47] <timotimo> you need .WHAT

[22:48] <Xliff> lotreck: There's Baildor

[22:48] <Xliff> timotimo++

[22:48] <Xliff> m: class A { method a { say self.WHAT.name }; }; A.a

[22:48] <camelia> rakudo-moar a643b8be1: OUTPUT: «No such method 'name' for invocant of type 'A'. Did you mean any of these?␤    none␤    note␤    take␤␤  in method a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:48] <Xliff> m: class A { method a { say self.WHAT }; }; A.a

[22:48] <camelia> rakudo-moar a643b8be1: OUTPUT: «(A)␤»

[22:48] <timotimo> cro is more of a backend-oriented framework for webby stuff, but if you have a single-page-application it's great

[22:50] <lotreck> Xliff, timotimo thanks

[22:52] <lotreck> Xliff, timotimo, Is Catalyst still a thing ? or no?

[22:53] <timotimo> that's a perl5 thing, no perl6 port exists at the moment

[22:53] <lotreck> should I be coding in 6? is it prod ready ?

[22:53] <timotimo> cro does a lot of async i/o things, which is i think what catalyst is for?

[22:53] *** johnjohn101 left
[22:54] <timotimo> i'm biased, i'm not allowed to answer that :) :)

[22:55] *** kst left
[22:56] <timotimo> there's that agriculture-related thing that recently-ish had a talk about it given at a perl workshop

[22:57] <timotimo> that's a perl6 web app built with cro

[22:57] <timotimo> huh. i can't find it on youtube, but i'm sure i saw it in video form

[22:57] <nadim_> timotimo: what about something like this? https://gist.github.com/nkh/a33c213563534eb48606953a4c0853c9

[22:59] <timotimo> hmm. i've got a feeling that should be possible without EVAL

[23:00] <nadim_> it is

[23:00] *** Kaiepi left
[23:00] <nadim_> this is an example where the modules to use in the custom setup may not be present

[23:01] <timotimo> yeah, with require

[23:01] <nadim_> no that wouldn't workif thefilters need something from the modules, like enums

[23:02] <timotimo> it can't use indirect lookup?

[23:02] *** kst joined
[23:02] <nadim_> what's that?

[23:02] <nadim_> through the class?

[23:03] <timotimo> what are these enums used for? is DDT_DISPLAY_NONE one?

[23:03] <nadim_> yes

[23:03] *** dolmen left
[23:06] <timotimo> if you've used require to get the module, you can get at the package that defines these enums and grab the one you want via its name as a string

[23:06] <Xliff> nadim: An indirect lookup ::("ThisSymbolMayNotYetExist")

[23:06] <nadim_> never used it, I need a big fat Perl 6 book in 5 tomes that's fun to read and 6 month off

[23:07] <Xliff> nadim: So ...| require ::('Module::At::Runtime'); my $a = ::('ASymbolFromModule');

[23:07] *** skids joined
[23:07] <Xliff> Note that require is lexical, so if you need those symbols elsewhere you will need to use globals.

[23:08] <Xliff> Or at least assign them to a value available in the scope you want to use.

[23:08] <timotimo> oh, that requires things in these modules to be declared "our"

[23:08] <nadim_> Am I wrong, that's only good as long there is nothing to compile that need the symboles, in that case only EVAL works

[23:09] <timotimo> no, it's possible to do all that at run time

[23:09] <nadim_> timotimo: declaring them our is not  aproblem, it's an enum for external use

[23:09] <timotimo> i thought that's how DDT reacts to whether or not Terminal::ANSIColor is installed?

[23:09] <nadim_> it does require

[23:09] <timotimo> yeah

[23:10] <timotimo> i'm not entirely sure how you'd use CustomSetup if you don't already have Data::Dump::Tree installed and usable anyway

[23:11] <nadim_> indeed and that why EVAL is not needed, just use the modules

[23:12] *** veesh left
[23:12] <nadim_> but using DDT without Terminal::ANSIColor is like eating English cheese while living in France, one is missing it all

[23:15] <timotimo> or eating american bread in france

[23:15] *** Kaiepi joined
[23:16] <nadim_> lol

[23:16] *** AlexDaniel left
[23:16] <nadim_> can I import symboles from required modules? 

[23:17] <Xliff> Now THAT would be something.

[23:17] <Kaiepi> wdym?

[23:17] <yoleaux> 21:59Z <pmurias> Kaiepi: if things seem unclear it's highly possible they actually are and they need to be fixed

[23:18] <Kaiepi> .tell pmurias, you're gonna have to remind me of the context of that message you sent

[23:18] <yoleaux> Kaiepi: What kind of a name is "pmurias,"?!

[23:18] <jnthn> Kaiepi: Presumably your comments on the JS backend :)

[23:18] <nadim_> I mean that "use" gets me the symboles from the module, "require" doesn't

[23:18] <Kaiepi> ah

[23:18] <timotimo> Xliff: but you can do that, right? with require Blerb <&foo &bar>;

[23:18] <jnthn> pmurias++ has done nearly all the work on that :)

[23:19] <timotimo> yes! and also increased the test coverage of nqp ops by a whole lot

[23:19] <timotimo> which is highly appreciated

[23:19] <jnthn> Indeed

[23:19] *** veesh joined
[23:19] <nadim_> timotimo:  how does one get roles from required modules, that looked like subs

[23:20] <Kaiepi> unit module Foo; our role Bar {...}; require Foo::Bar?

[23:21] *** rindolf left
[23:21] <Xliff> timotimo: So... | require ::("ModuleThatMightNotBeInstalled") <&bar &baz>| will work?

[23:21] <nadim_> with the role defined in another file?

[23:21] <Xliff> Or even...

[23:21] <timotimo> just leave out the &

[23:21] <timotimo> m: require ThisDoesntExist <Blerb>; say Blerb.WHAT

[23:21] <camelia> rakudo-moar a643b8be1: OUTPUT: «Could not find ThisDoesntExist at line 0 in:␤    inst#/home/camelia/.perl6␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6␤ …»

[23:22] <timotimo> m: try require ThisDoesntExist <Blerb>; say Blerb.WHAT

[23:22] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Any)␤»

[23:22] <timotimo> look, Blerb exists, it's just set to an undefined value

[23:22] <timotimo> m: try require ::("DoesNotExist") <Blerb>; say Blerb.WHAT

[23:22] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Any)␤»

[23:22] <timotimo> m: try require ::("Test") <Blerb>; say Blerb.WHAT

[23:22] <camelia> rakudo-moar a643b8be1: OUTPUT: «(Any)␤»

[23:22] <Xliff> timotimo: require ::("ModuleThatMightNotBeInstalled") <DEFAULT>

[23:23] <Xliff> That imports into the current scope, right?

[23:23] <nadim_> I get No such method 'IO' for invocant of type 'Signature' for: require :('examples/CustomSetup')<CustomSetup> ;

[23:24] <Xliff> nadim_:  require ::('examples/CustomSetup') <CustomSetup>

[23:24] <Xliff> Better yet...

[23:24] <timotimo> Xliff: that just gives you a lexical symbol named DEFAULT

[23:24] <Xliff> nadim_:  require ::('CustomSetup') <CustomSetup>; # You may need to "use lib 'examples'

[23:25] <timotimo> nadim_: you have one : too few

[23:25] <timotimo> and there needs to be a space after the )

[23:25] <timotimo> between ) and <

[23:26] <ugexe> m: require ::("Test") <&ok>;

[23:26] <camelia> rakudo-moar a643b8be1: ( no output )

[23:26] <nadim_> Could not find examples/CustomSetup ...

[23:26] <nadim_> code: require ::('examples/CustomSetup') <CustomSetup> ;

[23:27] <Kaiepi> what's the purpose for `need`?

[23:27] <Kaiepi> i've used require and use before, but never need

[23:27] <ugexe> a file path doesnt need indirect name lookup

[23:28] <timotimo> so it'd be just  require 'examples/CustomSetup' <CustomSetup>; ?

[23:28] <nadim_> no, I tried that before

[23:29] <ugexe> something like that yes

[23:29] <nadim_> but . is not in the seach path

[23:29] *** Kaiepi left
[23:29] <nadim_> must it be set with use lib?

[23:29] <ugexe> no

[23:30] <ugexe> require "$*CWD/lib/Foo.pm6"

[23:31] *** Kaiepi joined
[23:32] <nadim_> full path works

[23:33] <nadim_> but importing symboles doesn't, can't get a role out of it

[23:35] <nadim_> Ah! role must be exported, of course!

[23:35] <timotimo> depends on many, many factors

[23:35] <timotimo> hm, is it about exportation or about packages, i.e. "our" stuff?

[23:36] <nadim_> require "$*CWD/examples/CustomSetup.pm" <CustomSetup> ; # works fine if CustomSetup is export

[23:36] <timotimo> cool

[23:36] <Xliff> \o/

[23:36] <nadim_> indeed, very practical

[23:37] <ugexe> dont use $*CWD in whatever you write

[23:37] *** mtg left
[23:37] <Xliff> ugexe: Why not?

[23:37] <timotimo> because that depends on where you're launching the program from

[23:37] <timotimo> not where the code lives

[23:37] <nadim_> ugexe:  doesn't work without

[23:38] <ugexe> $*PROGRAM.child(2).add("examples/CustomSetup.pm") is better (changed as appropriae)

[23:38] <Xliff> O_o

[23:38] <Xliff> Is that documented anywhere?

[23:38] <Xliff> m: $*PROGRAM.^name.say

[23:38] <camelia> rakudo-moar a643b8be1: OUTPUT: «IO::Path␤»

[23:38] <nadim_> in ugexe's head

[23:39] <Xliff> m: $*PROGRAM.say

[23:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «"<tmp>".IO␤»

[23:39] <Xliff> m: $*PROGRAM.child(1).say

[23:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «"<tmp>/1".IO␤»

[23:39] <Xliff> m: $*PROGRAM.child(2).say

[23:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «"<tmp>/2".IO␤»

[23:39] <timotimo> hm. we should probably have a bot (or just a command) to search the docs

[23:39] <timotimo> much like greppable and quotable

[23:39] <ugexe> oops i didnt mean child :P

[23:39] <nadim_> the space after the string don't matter, zero, one, ten, all go 

[23:39] <ugexe> .parent(2), not .child(2)

[23:39] <Xliff> m: $*PROGRAM.parent.say

[23:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «"/tmp".IO␤»

[23:40] <Xliff> m: $*PROGRAM.parent(2).say

[23:40] <camelia> rakudo-moar a643b8be1: OUTPUT: «"/".IO␤»

[23:40] <Xliff> Ahh!

[23:41] <timotimo> m: say $*PROGRAM.absolute

[23:41] <camelia> rakudo-moar a643b8be1: OUTPUT: «<tmp>␤»

[23:43] <ugexe> m: say $*PROGRAM.Str eq $?FILE.Str

[23:43] <camelia> rakudo-moar a643b8be1: OUTPUT: «True␤»

[23:44] <ugexe> tho that is not always true since $?FILE appends the module names when precompiled, so they end up `/home/foo/bar (Foo::Bar)`

[23:44] <ugexe> hence using $*PROGRAM

[23:45] <timotimo> or site#sources/4226E6A3EC7B6F5B2601AD9B2A969FC07CED017E (Data::Dump::Tree)

[23:46] <timotimo> ^- these only depend on the source, right? like, it's a hash of the source file at the point of installation?

[23:47] <ugexe> i don't think $?FILE ever contains anything but an absolute path

[23:47] <ugexe> m: say CompUnit::RepositoryRegistry.repository-for-name("site").prefix; # but for brevity

[23:47] <camelia> rakudo-moar a643b8be1: OUTPUT: «"/home/camelia/rakudo-m-inst-1/share/perl6/site".IO␤»

[23:48] <ugexe> m: say "/home/camelia/rakudo-m-inst-1/share/perl6/site".IO.dir

[23:48] <camelia> rakudo-moar a643b8be1: OUTPUT: «("/home/camelia/rakudo-m-inst-1/share/perl6/site/short".IO "/home/camelia/rakudo-m-inst-1/share/perl6/site/precomp".IO "/home/camelia/rakudo-m-inst-1/share/perl6/site/sources".IO "/home/camelia/rakudo-m-inst-1/share/perl6/site/resources".IO "/home/cam…»

[23:48] <nadim_> $*PROGRAM.absolute contains the name of the program, can't work

[23:49] <ugexe> well, yes. hence .parent(2) or whatever

[23:49] <ugexe> this is for a test?

[23:49] <timotimo> ugexe: can i take a bloop#sources/(.*) and look up what it is with something like perl6-all-modules?

[23:50] <timotimo> like, it'd let me get the exact version, too

[23:50] <ugexe> zef locate ...

[23:51] <timotimo> ok, the file contents aren't what i get when i sha1sum it

[23:52] <ugexe> zef locate ... --sha1 

[23:52] <ugexe> rather

[23:52] *** lotreck left
[23:53] <nadim_> this worked: require ($*PROGRAM.parent(1).absolute ~ "/CustomSetup/CustomSetup.pm")  <CustomSetup> ;

[23:53] <nadim_> this worked: require ($*PROGRAM.parent(1).absolute ~ "/CustomSetup/CustomSetup.pm")  <CustomSetup> ;

[23:53] <timotimo> ugexe: sha1sum /home/timo/perl6/install/share/perl6/site/sources/4226E6A3EC7B6F5B2601AD9B2A969FC07CED017E

[23:53] <timotimo> 944e62ef405d2df2779ff78deb57347753b073ed  /home/timo/perl6/install/share/perl6/site/sources/4226E6A3EC7B6F5B2601AD9B2A969FC07CED017E

[23:53] <timotimo> zef locate 944e62ef405d2df2779ff78deb57347753b073ed --sha1 

[23:53] <timotimo> !!!> Nothing located

[23:53] <ugexe> $*PROGRAM.parent.child('CustomSetup/CustomSetup.pm').absolute

[23:54] <ugexe> i dont know what the first thing you pasted means

[23:55] <timotimo> that's the sha1sum of the file followed by the filename

[23:55] <timotimo> and then i put the sha1sum of the file in "zef locate --sha1" and it fails to find it

[23:55] <ugexe> for installs sha1 of files is only used for repo-id

[23:56] <ugexe> its something like sha1 of lib/Name/Path.pm6 ~ DistributionName

[23:57] <timotimo> what i'm thinking about is adding that to the linkify userscript

[23:58] <timotimo> i'd prefer not to have to put a whole perl6 + zef + all modules into LocalStorage or whatever to make that work

[23:58] <nadim_> before I leave, is there a PAR like application for perl 6

[23:58] <ugexe> you have to parse META6.json data to do it

[23:59] <timotimo> it'd be fine to preprocess all meta6 json entries that exist up front

[23:59] <ugexe> you could create a rainbow table I think though

