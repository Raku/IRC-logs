[00:03] *** Xliff joined
[00:06] *** lichtkind_ joined
[00:08] *** lichtkind left
[00:11] *** yqt left
[00:26] <AlexDaniel> somebody suggested “Pelr” xD

[00:26] *** Sgeo_ left
[00:27] *** Sgeo_ joined
[00:29] *** reportable6 joined
[00:30] *** irced joined
[00:36] <vrurg> Oh my... (facepalm)

[00:36] *** Actualeyes left
[00:37] <Grinnz> ... ok, that's one of the more creative "I didn't read the discussion" suggestions :P

[00:37] <vrurg> I wish to see the voting results and be over with it one way or another

[00:43] <AlexDaniel> vrurg: it may take some time

[00:44] <AlexDaniel> I think we'll start this week, then it'd be at least two weeks from now

[00:44] <AlexDaniel> if there are requests for changes, then it'll take a bit more

[00:46] <vrurg> AlexDaniel: I know. I'm patient. Just wanna something to happen because soon it'll start causing reputational harm. 

[00:49] <vrurg> AlexDaniel: BTW, back to the yesterday discussion. I now recall more details of what I spoke about with timotimo and it was mostly related to Configure and to the possibility of rewriting it in NQP. make.nqp can be used after moar is built.

[00:50] <AlexDaniel> vrurg: well, there's this ticket now https://github.com/perl6/problem-solving/issues/100

[00:50] <AlexDaniel> which is kinda related

[00:50] <AlexDaniel> we'll see how it goes

[00:50] <vrurg> But then another thing crossed my mind: so far, our Makefile generation convers perhaps 99% of all use cases by supporting BSD, GNU makes and NMAKE. There is just no point of using something non-standard.

[00:51] <discord6> <RaycatWhoDat> Grammars are doin' my head in. :<

[00:51] <tellable6> 2019-09-09T06:10:22Z #perl6 <SmokeMachine> RaycatWhoDat if you wanna see a example of a simple toy language: https://github.com/FCO/bernaLang

[00:51] <discord6> <RaycatWhoDat> oh hey

[00:52] <vrurg> Oh, BTW, you once took #3000 on rakudo, now it's #100 on problem-solving – do you hunt for these numbers? ;) :D

[00:52] <AlexDaniel> hah

[00:54] <discord6> <RaycatWhoDat> How do you make a grammar parse recursively?

[00:56] <vrurg> AlexDaniel: as to #100 – yep, I read it. There is nothing to add to what jnthn wrote. Besides, prventing stage0 nqp from being bundled into a pacakge is like preventing from bundling with images. Or, other way around, how do they distribute precompiled Java code? 

[00:57] <vrurg> stage0 nqp is both code and resourse, from this point.

[00:59] <AlexDaniel> vrurg: there's so much wrong in your message :D

[01:00] <AlexDaniel> vrurg: you must be able to get your package from source code, what does this have to do with precompiled java code?

[01:00] <AlexDaniel> and how images are related to executable stuff?

[01:01] <AlexDaniel> I understand it's a hard problem, I understand it's pain for us

[01:02] <vrurg> AlexDaniel: if one creates a package of an application acting as a web server too and implemented in java then the package would have to be built with some images and likely some java bytecode. Isn't it?

[01:03] <AlexDaniel> we should just figure out if debian is OK with this, as soon as possible, and then we can skip the denial stage :)

[01:03] <AlexDaniel> vrurg: sure, and debian will only take source code and will build the app themselves

[01:04] <AlexDaniel> vrurg: users will get it in the compiled form, yes, and that's irrelevant

[01:04] <AlexDaniel> a package without source code won't make its way into debian

[01:05] <AlexDaniel> drivers with blobs might get into nonfree but that's different

[01:05] <AlexDaniel> vrurg: and images are fine, you're not executing images…

[01:07] <vrurg> AlexDaniel: I'm not denying, but looking for a way to get it solved by, perhaps, finding workarounds. I think I was misunderstanding it. Nobody needs stage0 to be included into the package, but debian wouldn't compile NQP on their side because it's using a blob to be compiled. Right?

[01:09] <vrurg> ^ there is :) after 'workaround' ;)

[01:10] <Xliff> RayCatWhoDat: What do you mean?

[01:11] <AlexDaniel> vrurg: well, that's the question. I'm not sure, which is why I asked robertle to clarify it https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-09-09#l83

[01:11] <Xliff> Grammars can parse recursively, as long as you have rules that advance the position.

[01:11] <AlexDaniel> vrurg: from my point of view it's irrelevant if stage0 makes it into the final package or not

[01:11] <discord6> <RaycatWhoDat> Oh. Then, I probably did it wrong, Xliff.

[01:11] <Xliff> Got code?

[01:11] <discord6> <RaycatWhoDat> I'm trying to make a Lisp grammar.

[01:11] <Xliff> Urg! I'm List-alergic. ;)

[01:12] <discord6> <RaycatWhoDat> Welp.

[01:12] <discord6> <RaycatWhoDat> I'll just see myself out

[01:12] <discord6> <RaycatWhoDat> 😛

[01:13] <Xliff> Hah!

[01:13] <Xliff> Show me da code!

[01:13] <discord6> <RaycatWhoDat> https://gist.github.com/RayMPerry/f8e1f8042bf1ccb81d491f5a3836fb20

[01:13] <Xliff> RaycatWhoDat: My, those are sharp teeth you have.

[01:14] <discord6> <RaycatWhoDat> wat

[01:14] * irced throws peanuts into the gallery.

[01:14] * Xliff throws the gallery at irced

[01:14] <discord6> <RaycatWhoDat> EY. That's good food gone to waste.

[01:14] * irced dodges the gallery, yes, the gallery.

[01:14] <Xliff> What? You levelled up and put points into dodge? You sly one, you!

[01:14] <vrurg> AlexDaniel: I think robertle replied on your direct question without taking into account all aspects. So, yes, further investigation is needed.

[01:15] <AlexDaniel> vrurg: which is why I asked for more clarifications

[01:16] <AlexDaniel> vrurg: but if I were them I'd tell us to fuck right off :P

[01:16] <vrurg> AlexDaniel: meanwhile, I have removed BLOCKER from R#3100. I see no bug on my macos.

[01:16] <synopsebot> R#3100 [open]: https://github.com/rakudo/rakudo/issues/3100 [macOS] IO::Notifications for changes to file contents (2019.03 vs 2019.07.1)

[01:17] <AlexDaniel> vrurg: interesting! OK

[01:17] <vrurg> AlexDaniel: but when we'll grow up with fuck them back! Yeah! :D (hope they don't take this seriously...)

[01:18] <AlexDaniel> vrurg: I haven't figured out what they do with go or haskell

[01:18] <AlexDaniel> vrurg: the guide mentions them but I'm not sure what's the workaround

[01:19] <vrurg> AlexDaniel: Also, with R#3132 – it's still uncertain what happened with Blin and why it reported old problems.

[01:19] <synopsebot> R#3132 [open]: https://github.com/rakudo/rakudo/issues/3132 [BLOCKER] [WIP] Blin 2019-08-20

[01:19] <AlexDaniel> vrurg: oh, that's ok then, ignore it for now

[01:19] <vrurg> AlexDaniel: I know nothing how those two are compiled. As far as I understand, they compile themselves?

[01:20] <Xliff> RaycatWhoDat: Looking.

[01:25] <Xliff> https://repl.it/repls/VapidBountifulRobots

[01:25] <Xliff> <atom> needed to be first to advance the cursor.

[01:25] <discord6> <RaycatWhoDat> Oh

[01:26] <discord6> <RaycatWhoDat> Interesting. And what does the change to sexp do?

[01:26] <Xliff> It's just a rewrite of what you did. It helps when dealing with nested pairs of tokens.

[01:27] <discord6> <RaycatWhoDat> Ah. Gotcha. Thank you for that.

[01:27] <Xliff> 😛

[01:27] <Xliff> O. Wait. ☺

[01:28] <Xliff> m: '😛'.uniname.say

[01:28] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «FACE WITH STUCK-OUT TONGUE␤»

[01:28] <irced> wow!

[01:28] <irced> m: '😃'.uniname.say

[01:28] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «SMILING FACE WITH OPEN MOUTH␤»

[01:29] <Xliff> 😀

[01:29] <Xliff> Wow. That looks freaky in this font.

[01:29] <irced> m: '😀'.uniname.say

[01:29] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «GRINNING FACE␤»

[01:29] <Xliff> 😛 <- Thought this was a dracula smile!

[01:29] <irced> m: '😀'.unicode.say

[01:29] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «(exit code 1) No such method 'unicode' for invocant of type 'Str'. Did you mean 'encode'?␤  in block <unit> at /tmp/cXVrQHXnPP line 1␤␤»

[01:29] <discord6> <RaycatWhoDat> o

[01:30] <Xliff> The tongue is not really rendered well. It looks like fangs in the mouth on this end. LOL!

[01:30] <irced> m: printf("%x", '😃')

[01:30] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «(exit code 1) Directive x not applicable for value of type Str (😃)␤  in block <unit> at /tmp/EU47X4Vakv line 1␤␤»

[01:30] <Xliff> m: '😃'.ord.fmt('%x').say

[01:30] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «1f603␤»

[01:31] <irced> m: '😀'.ord.fmt('%x').say

[01:31] *** MasterDuke left
[01:31] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «1f600␤»

[01:31] <irced> 😀😀😀

[01:31] <Xliff> <😀😀😀>.map( .ord.fmt('%x') ).join(' ').say

[01:31] <Xliff> m: <😀😀😀>.map( .ord.fmt('%x') ).join(' ').say

[01:31] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «(exit code 1) No such method 'ord' for invocant of type 'Any'␤  in block <unit> at /tmp/QlmXykqUhY line 1␤␤»

[01:32] <timotimo> needs a *

[01:32] <Xliff> m: <😀 😀 😀>.map( .ord.fmt('%x') ).join(' ').say

[01:32] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «(exit code 1) No such method 'ord' for invocant of type 'Any'␤  in block <unit> at /tmp/AQ4UjQrm8T line 1␤␤»

[01:32] <Xliff> m: <😀 😀 😀>.map( *.ord.fmt('%x') ).join(' ').say

[01:32] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «1f600 1f600 1f600␤»

[01:32] <Xliff> D'oh

[01:32] <irced> m: say '😀' xx 3;

[01:32] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «(😀 😀 😀)␤»

[01:32] <Xliff> timotimo: o/ -- Hey u! How are things?

[01:33] <irced> say '😀'.ord.fmt('%x') xx 3

[01:33] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «(1f600 1f600 1f600)␤»

[01:33] <Xliff> timotimo: How difficult would this be? -- https://github.com/perl6/problem-solving/issues/96

[01:35] <timotimo> starting at it should be easy, then you get to fix all the problems that we didn't foresee

[01:35] <Xliff>  /o\

[01:37] <discord6> <RaycatWhoDat> m: '"'.unicode.say

[01:37] <evalable6> RaycatWhoDat, rakudo-moar fce964231: OUTPUT: «(exit code 1) No such method 'unicode' for invocant of type 'Str'. Did you mean 'encode'?␤  in block <unit> at /tmp/gDYeGE5N_P line 1␤␤»

[01:37] <Xliff>  m: '"'.ord.say

[01:37] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «34␤»

[01:37] <Xliff>  m: '"'.uniname.say

[01:37] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «QUOTATION MARK␤»

[01:37] <discord6> <RaycatWhoDat> Thanks

[01:38] <irced> say "\x[1f600]"

[01:38] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «😀␤»

[01:38] <irced> say "\c[QUOTATION MARK]and I quote!\c[QUOTATION MARK]"

[01:38] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «"and I quote!"␤»

[01:38] <irced> print "\c[QUOTATION MARK]and I quote!\c[QUOTATION MARK]"

[01:38] <evalable6> irced, rakudo-moar fce964231: OUTPUT: «"and I quote!"»

[01:38] <Xliff> timotimo: Can you point me to where a ThreadContext is created?

[01:39] <timotimo> MVM_thread_create or whatever, should be the function called by the OP(newthread)

[01:39] <timotimo> and also at startup a TC gets created, which is either in the main.c or whereever the MVMInstance is created

[01:39] <timotimo> a nice trick i found if oyu want to see where a certain type gets allocated, look for sizeof(that type) in the code

[01:40] <Xliff> OK, thanks!

[01:40] <Xliff> ThreadContext is the type?

[01:40] * Xliff wishes you could grep the code using github.

[01:41] <timotimo> MVMThreadContext

[01:41] <Xliff> Cool

[01:42] <timotimo> i wonder what needs to be done to make a webpage with cross-referenced moarvm source code

[01:42] <timotimo> containing every regular go-to-definition that C knows, plus some stuff we come up with ourselves

[01:43] <Xliff> O! Github can search in repositories!

[01:43] <Xliff> https://github.com/MoarVM/MoarVM/search?q=%22sizeof%28MvmThreadContext%29%22&unscoped_q=%22sizeof%28MvmThreadContext%29%22

[01:44] <timotimo> its search isn't fantastic

[01:45] *** molaf left
[01:48] <Xliff> OK. So I think I have MUCH of what goes into a MVMThreadContext. Now I need to figure out what else goes into it aside from a thread_id

[01:49] <Xliff> I can see this being a lot more than I expected, but I need it for GStreamer.

[01:51] <timotimo> you are brave

[01:51] <Xliff> LOL

[01:52] <Xliff> I'll start by coming up with a spec. I'm not THAT crazy.

[01:57] *** Itaipu left
[01:57] *** molaf joined
[02:10] *** Itaipu joined
[02:19] *** cpan-p6 left
[02:20] *** cpan-p6 joined
[02:20] *** cpan-p6 left
[02:20] *** cpan-p6 joined
[02:54] *** Cabanoss- joined
[02:56] *** Cabanossi left
[02:56] *** Cabanoss- is now known as Cabanossi

[03:14] *** MilkmanDan left
[03:16] *** MilkmanDan joined
[03:19] *** Xliff left
[03:20] *** Kaypie left
[03:22] *** Kaiepi joined
[03:55] *** aborazmeh joined
[03:55] *** aborazmeh left
[03:55] *** aborazmeh joined
[03:57] *** sno left
[04:04] *** aborazmeh left
[04:10] *** molaf left
[04:31] * irced disembarks.

[04:31] *** irced left
[04:48] *** Kaiepi left
[05:23] *** squashable6 left
[05:28] *** squashable6 joined
[05:32] *** sauvin joined
[05:59] *** jmerelo joined
[06:04] *** HoboWithAShotgun left
[06:12] *** sena_kun joined
[06:16] *** wamba joined
[06:18] *** domidumont joined
[06:18] *** ufobat joined
[06:29] <jmerelo> m: say Cursor.^mro

[06:29] <evalable6> jmerelo, rakudo-moar fce964231: OUTPUT: «((Match) (Capture) (Cool) (Any) (Mu))␤»

[06:32] *** leont joined
[06:40] <Geth> ¦ doc: 49b5a4e902 | (JJ Merelo)++ | xt/type-graph.t

[06:40] <Geth> ¦ doc: Removes unneeded path refs #3001

[06:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/49b5a4e902

[06:40] <Geth> ¦ doc: eaf6652ce5 | (JJ Merelo)++ | type-graph.txt

[06:40] <Geth> ¦ doc: Eliminates wrong mro refs #3001

[06:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/eaf6652ce5

[06:40] <Geth> ¦ doc: 5fb93693f6 | (JJ Merelo)++ | README.md

[06:40] <Geth> ¦ doc: Revises documentation, closes #3000

[06:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5fb93693f6

[06:46] <jmerelo> notable6: weekly Lots of work done for upgrading the documentation processing and generation system, mainly around this issue: https://github.com/perl6/doc/issues/2983

[06:46] <notable6> jmerelo, Noted! (weekly)

[07:02] *** aborazmeh joined
[07:02] *** aborazmeh left
[07:02] *** aborazmeh joined
[07:04] *** robertle_ joined
[07:08] *** leont left
[07:11] *** wamba left
[07:16] *** jmerelo left
[07:22] *** Itaipu left
[07:23] <El_Che> funny how an localized mindset means you don't see a lot of possibilities. I never thought about the script/module extension difference that other languages don't have and why raku should keep it. Mind blown.

[07:24] <El_Che> the ending a pm with "1" is an artifact from the old days. Otherwise, I wouldn't know why.

[07:30] *** dakkar joined
[07:30] <SmokeMachine> RaycatWhoDat: have you seen the bernaLang example?

[07:32] *** Itaipu joined
[07:35] <daxim> AlexDaniel, if you want to add a pull req to address <https://github.com/perl6/problem-solving/pull/89#issuecomment-526881879>, then you can use <https://old.reddit.com/r/perl6/comments/9tws89/its_raku/e92djoj/>.  maybe add a note that approximate pronunciation is fine so that it's less intimidating for those who never learnt ipa.

[07:38] *** Itaipu left
[07:39] *** rindolf joined
[07:43] *** Itaipu joined
[07:45] *** wamba joined
[07:46] *** lnx joined
[07:46] <sena_kun> re "how to pronounce": while not being the one who suggested the name or the one who holds the Great Truth about pronunciation, e.g. https://www.youtube.com/watch?v=uk1CZSogZ6I shows what sounds close enough to "楽" (from English perspective, though). of course, there are always accents to strike later (I'd pronounce it in a more clean/rough way), but that shouldn't be any more of an issue as with any other name.

[07:46] <tellable6> 2019-09-09T10:23:16Z #perl6 <SmokeMachine> sena_kun: what about adding a submodule on `docs/` pointing to the wiki repo? make sense?

[07:46] <tellable6> 2019-09-09T10:25:51Z #perl6 <SmokeMachine> sena_kun: or maybe make the entire `docs/` be the submodule. That way, when generating the docs (if you push it) it will be on the wiki as well

[07:47] <SmokeMachine> sena_kun: I tried the submodule and didn't work...

[07:48] *** Itaipu left
[07:48] <SmokeMachine> sena_kun: but: https://fco.github.io/Red/

[07:49] <sena_kun> SmokeMachine, it depends on if you want to keep the wiki (in the long term perspective) or not. If you do, then any path that keeps the maintainence low sounds great to me. OTOH, I thought that maybe a more clean / short readme is needed, like "We are cool Perl 6 ORM, you can find docs at $URL (instead of the long cheatcheat, but we can only remove it after the docs will be written in its entirely), you can contribute with this and that, 

[07:49] <sena_kun> license is foo, thanks".

[07:50] *** zakharyas joined
[07:50] <sena_kun> and if we have an inline docs (for tools) and the dedicated pages for rendering, and a way to contribute, I don't see where wiki is better than that, but maybe I am just ignorant.

[07:50] <SmokeMachine> sena_kun: I agree...

[07:52] <SmokeMachine> sena_kun: do you know any way to make gh-pages highlight perl6 code?

[07:52] <sena_kun> SmokeMachine, are generated API pages use "```perl6```" in code chunks, for just ```?

[07:53] <sena_kun> s/use/using/

[07:53] <SmokeMachine> sena_kun: it's using that, but still not highlighting it...

[07:54] *** dolmen joined
[07:54] <sena_kun> SmokeMachine, no idea, but I see https://help.github.com/en/articles/using-syntax-highlighting-on-github-pages

[07:54] <SmokeMachine> sena_kun: here it's highlighted: https://github.com/FCO/Red/blob/master/docs/api/Red/ResultSeqSeq.md but here it isn't: https://fco.github.io/Red/api/Red/ResultSeqSeq

[07:55] <SmokeMachine> and: https://raw.githubusercontent.com/FCO/Red/master/docs/api/Red/ResultSeqSeq.md

[07:55] <tellable6> SmokeMachine, I'll pass your message to and

[07:55] <SmokeMachine> sena_kun: I saw that... but rouge doesn't recognises perl6...

[08:03] *** aborazmeh left
[08:04] *** scimon joined
[08:05] *** sono__ joined
[08:06] *** Black_Ribbon left
[08:18] *** Itaipu joined
[08:28] *** Itaipu_ joined
[08:29] *** Itaipu left
[08:40] *** grumble left
[09:01] *** aborazmeh joined
[09:01] *** aborazmeh left
[09:01] *** aborazmeh joined
[09:01] *** HoboWithAShotgun joined
[09:04] <daxim> sena_kun, I can't youtube here. what does it show?

[09:06] <sena_kun> daxim, (apparent) prononciation of "raku", which I found the most matching among other video that try to do it

[09:06] <daxim> what's it in ipa?

[09:09] * sena_kun has no idea how to use ipa. "r" as in "road", "a" as in "slavic", "k" as in "kitchen", "u" as "oo" in "google".

[09:09] <huf> i'm just completely flabbergasted that the pronunciation is an issue

[09:10] <huf> "raku" is about as easy as you can possibly get in english

[09:10] <daxim> I have no idea what kind of english you're having in mind.  learn ipa to avoid ambiguities.

[09:12] <El_Che> /raku/ probably :)

[09:12] <huf> also, you're probably never going to get everyone to pronounce it the same :)

[09:13] <huf> there's gonna be people who say it like the front part of "raccoon"

[09:13] <El_Che> peetô and databaaasé

[09:13] <El_Che> something I hear when in France

[09:13] <huf> "perl" probably had a bunch of international pronunciation attempts

[09:13] <jnthn> huf: hah, that's how I assumed it should be said :P

[09:14] <daxim> El_Che: alveolar trill?

[09:14] <huf> jnthn: it's the one that comes to my lips easiest, but that reduced first vowel is not very japanese i think?

[09:15] <El_Che> daxim: raku for the French? Sure :)

[09:15] <lizmat> pronunciation has never been an issue for SQL, has it ?

[09:15] <huf> not a *real* issue

[09:15] <huf> just an evergreen joke

[09:16] <huf> or possibly nevergreen

[09:16] <lizmat> I'll go for evergreen any time

[09:16] <jnthn> huf: Maybe not; my attempts at Japanese extend to asking for a draught beer. :P

[09:16] <lizmat> means a long life ahead

[09:16] <El_Che> anyway, pronunciation of software has always been tricky

[09:16] <El_Che> Take Linux

[09:16] <huf> and seriously, not even C is pronounced consistently (across the world)

[09:16] <daxim> now I'm upgrading that "approximate pronunciation is fine" be included from a suggestion to a strong suggestion

[09:16] <jnthn> And probably doing that poorly :P

[09:16] <El_Che> some American infidels read it as La-ee-nux

[09:17] <El_Che> and no one cares, really

[09:17] <jnthn> .oO( all this talk of IPA makes me thirsty... )

[09:17] <lizmat> it *can* be important: in the mini-computer days, a Japanese company called "FAComp" had trouble in the US

[09:18] <lizmat> "fake-em" "f*ck-em" ?

[09:18] <huf> yes, those things inevitably happen

[09:18] <huf> but they happen within a single country too

[09:18] <huf> penisland, etc

[09:18] *** aborazmeh left
[09:18] <lizmat> what?

[09:18] <huf> http://www.penisland.net/

[09:18] <SmokeMachine> https://easypronunciation.com/en/japanese-kanji-to-romaji-converter#phonetic_transcription

[09:18] <huf> it's about pens.

[09:18] <daxim> ファコンプ

[09:21] <sena_kun> エフエイコンプ

[09:22] <El_Che> Even the most simpel name of a computer language --Go-- is pronounce differently

[09:23] <El_Che> English speakers use of course the hard G, but I've heard it with a soft variant oferen, and for the o there are lots of variants

[09:25] <El_Che> and if the name can easily localized to a local pronounciation, it will

[09:26] *** pat_js joined
[09:30] <Voldenet> in Polish "raku" is locative/vocative case of "rak" which means "crayfish"/"cancer"

[09:31] <sena_kun> Voldenet, it holds true for number of slavic languages, e.g. in Ukrainian too, as well as Serbian, was mentioned already in the long-long thread

[09:31] <El_Che> Voldenet: the asociation is not cancer-constellation-crab?

[09:32] <daxim> also cancer the illness

[09:33] <huf> if it's anything like hungarian, it's the constellation, cancer, crab, crayfish, lobster, shrimp, etc

[09:33] <huf> all those weird water insects

[09:33] <Voldenet> It's mostly used for cancer the illness, in IPA it would probably be written as "raku" simply

[09:37] *** aborazmeh joined
[09:37] *** aborazmeh left
[09:37] *** aborazmeh joined
[09:37] *** domidumont left
[09:51] *** cgfbee left
[09:54] *** pat_js left
[09:54] *** pat_js joined
[10:02] *** cgfbee joined
[10:24] *** grumble joined
[10:29] *** [particle]1 left
[10:34] *** aborazmeh left
[10:36] *** sono__ left
[10:44] *** dolmen left
[10:48] *** rurban joined
[10:48] *** rurban left
[10:59] *** robertle_ left
[11:00] *** [particle] joined
[11:01] *** robertle_ joined
[11:14] *** HoboWithAShotgun left
[11:21] *** domidumont joined
[11:24] *** sena_kun left
[11:34] *** titsuki left
[11:37] *** aborazmeh joined
[11:37] *** aborazmeh left
[11:37] *** aborazmeh joined
[11:37] *** Guest93 joined
[11:41] *** zakharyas left
[11:57] *** cwilson joined
[12:16] *** domidumont left
[12:21] *** aborazmeh left
[12:22] *** gabiruh left
[12:22] *** gabiruh joined
[12:32] <ufobat> does anyone have an idea how to obtain the depth of the perl6 callstack (related to https://github.com/rakudo/rakudo/issues/3148)

[12:35] *** molaf joined
[12:36] *** grumble is now known as \emph{grumble}

[12:37] <SmokeMachine> I've always listen rake as /ɾɐ.ˈku/

[12:38] *** dolmen joined
[12:41] <SmokeMachine> I mean: /ɾa.'ku/

[12:45] <Voldenet> ufobat: `+(Backtrace.new.Str ~~ m:g/\n/)` works fine

[12:45] <SmokeMachine> and not /ra.'ku//

[12:45] <Voldenet> maybe this is broken, because of https://github.com/rakudo/rakudo/blob/master/src/core.c/Backtrace.pm6#L316

[12:45] <SmokeMachine>  /ra.'ku/

[12:46] <Voldenet> `do we need more than 100???` ツ

[12:46] <Voldenet> SmokeMachine: not many people can actually say r

[12:47] <Voldenet> most people read that as ɹ or ɻ

[12:48] <SmokeMachine> in Portuguese we do ɾ

[12:48] <SmokeMachine> Voldenet: ^^

[12:49] <SmokeMachine> and ʁ

[12:51] <SmokeMachine> Voldenet: I thought Japanese "r" was more to ɾ than to ɹ, ɻ and r... (but I don't speak Japanese...)

[12:52] *** HoboWithAShotgun joined
[12:55] <ufobat> Voldenet, thats a nice trick! thanks!

[12:55] *** lucasb joined
[13:05] <Voldenet> Let me rephrase, a lot of english-speaking people simply don't pronounce r/ɾ :)

[13:11] *** domidumont joined
[13:17] *** HoboWithAShotgun left
[13:26] *** zakharyas joined
[13:31] <SmokeMachine> Voldenet: yes, but should we only care about English speakers?

[13:33] <Voldenet> I don't think official IPA name matters much, people will not use it anyway

[13:33] *** esh joined
[13:34] <SmokeMachine> Voldenet: as almost every Brazilian say `perl` wrong... (including my self...)

[13:36] <Voldenet> as "pel"? :)

[13:37] <Voldenet> Well, some people pronounce nginx as "n jinx" even though it should be read as "engine x"

[13:37] <timotimo> i pronounce it "n jinx"

[13:37] <Grinnz> "en ginx" here

[13:37] <Grinnz> correctly pronouncing nginx has been very difficult for me :P

[13:38] <Voldenet> I pronounced it like that when someone told me I should use the other reading

[13:38] <Voldenet> Now I still read it like that, but now I feel bad about it

[13:40] <Grinnz> "I still do, but I feel bad" apologies to mitch hedberg ;)

[13:48] *** lizmat left
[13:49] <Voldenet> I think "raku" is universal enough that most people will read it correctly if they used english though

[13:52] *** HoboWithAShotgun joined
[13:52] <Grinnz> as an american, I pronounced it correctly by default, probably due to its similarity to ragu :P

[13:53] <Grinnz> but I am sure "ray ku" will be common as well here

[13:54] <Grinnz> seems like a far cry from the nginx and sql problems

[13:59] <jdv79> is it "reh jex" or "reh gex" or "reh gehxp"?

[14:00] *** Kaiepi joined
[14:01] *** pmurias joined
[14:01] <pmurias> .

[14:07] <[Coke]> I say "reh jex" myself. and if you say "en jinx", you're a monster. :)

[14:08] <Voldenet> Welp, sql had no official pronunciation, so mysql is "my es q el", but sql language was literally called "sequel"

[14:08] <[Coke]> (nginx has a FAQ about that somewhere)

[14:08] <timotimo> when i was a teenager, other teenagers said "SQL" when they meant "school"

[14:08] <[Coke]> Voldenet: I have always heard "my sequel" in my circles

[14:08] <timotimo> well, they probably spelled it "sql"

[14:09] <Voldenet> https://dev.mysql.com/doc/refman/8.0/en/what-is-mysql.html 3> The official way to pronounce “MySQL” is “My Ess Que Ell” (not “my sequel”), but we do not mind if you pronounce it as “my sequel” or in some other localized way.

[14:10] <timotimo> for some time, the firefox FAQ said firefox was to be abbreviated "fx"

[14:10] <kawaii> Weekly "where is Rakudo Star?" post

[14:11] <[Coke]> kawaii: are you on windows?

[14:15] <kawaii> Linux, tried to build it myself but the install scrips or something have changed in Rakudo itself and the build instructions are therefore outdated

[14:16] <[Coke]> Voldenet: neat, thanks.

[14:25] *** HoboWithAShotgun left
[14:32] *** sena_kun joined
[14:40] * guifa doesn’t think pronunciation of raku will be a problem

[14:41] *** wamba left
[14:41] *** yqt joined
[14:41] <tadzik> rakudo didn't have any problems, so I don't think raku will :)

[14:41] *** wamba joined
[14:41] <guifa> Any variation will be less, no doubt, than the differences between dialects.  I’ll say raku with the A in father, but if a Brit says raku with the A in ate, I’ll just assume dialect difference, not “hey doesn’t know how to say it”

[14:43] <Juerd> I've heard numerous different pronunciations of "Perl" too, and that's never been an issue

[14:43] <Grinnz> oh yes, the juxtaposition (or whatever you call it when it's not contrasting) with rakudo probably helped me pronounce raku correctly

[14:43] <guifa> ^^ Exactly

[14:44] <Juerd> Many Dutch people like to call it "prul", which means "piece of trash"...

[14:44] <Juerd> (Trash bin = prullenbak)

[14:45] <guifa> Just posted a huge code review on SE, comments welcome: https://codereview.stackexchange.com/questions/227774/perl6-html-color-gradient-generator

[14:49] *** pmurias left
[14:50] <Voldenet> m: sub prefix:<#> { $^hex; }; say #242424;

[14:50] <evalable6> Voldenet, rakudo-moar fce964231: OUTPUT: «(exit code 1) 04===SORRY!04===␤Argument to "say" seems to be malformed␤at /t…»

[14:50] <evalable6> Voldenet, Full output: https://gist.github.com/da136ab29d8069733e5b3a65a757caf7

[14:54] *** HoboWithAShotgun joined
[14:56] <guifa> I think doing a # prefix operator could uh… result in problems lol

[14:56] <jnthn> No comment... :)

[14:57] <jnthn> Ah, actually, comments win :)

[14:57] <guifa> That looks like a beautiful potential for a tweet if I tweeted

[14:57] <Grinnz> perlbot: sweval: say q#foo#

[14:57] <perlbot> Grinnz: ===SORRY!===␤Could not find warnings at line 1 in:␤    inst#/langs/perl6/share/perl6/site␤    inst#/langs/perl6/share/perl6/vendor␤    inst#/langs/perl6/share/perl6␤    ap#␤    nqp#␤    perl5#␤[Exited 1]

[14:57] <Grinnz> oh it defaults to 6 here, right :P

[14:58] <lucasb> m: my @a; $#a

[14:58] <evalable6> lucasb, rakudo-moar fce964231: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/wpvaH2yHP2␤Unsupported use of $#a variable; in Perl 6 please use @a.end␤at /tmp/wpvaH2yHP2:1␤------> 03my @a; $#a08⏏04<EOL>␤»

[14:58] <jnthn> m: say q#but here?#

[14:58] <evalable6> jnthn, rakudo-moar fce964231: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/A3nTmgC1lA␤# not allowed as delimiter␤at /tmp/A3nTmgC1lA:1␤------> 03say q#08⏏04but here?#␤»

[14:58] <jnthn> There it knows it's not going to allow it :)

[14:58] <Grinnz> spoiler, it's allowed in perl 5 ;)

[14:59] <jnthn> Can you put comments inside of a regex using # in perl 5?

[14:59] <Grinnz> with /x, yes

[14:59] <timotimo> m: "a" xx 1024 ~~ / (a+)+ b+ | <!> /; say now - INIT now

[14:59] <evalable6> timotimo, rakudo-moar fce964231: OUTPUT: «0.0303148␤»

[15:00] <timotimo> ^- use the power of NFA to get an otherwise catastrophically backtracking regex to give non-match results instantaneously

[15:00] <Grinnz> i'm not sure if allowing # as delimiter is a better or worse idea than allowing \ as delimiter

[15:01] <Grinnz> hmm... or if those non printable characters still work

[15:03] <Voldenet> m: sub prefix:<$_> { }; say $_

[15:03] <evalable6> Voldenet, rakudo-moar fce964231: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/QBImmVbFcK␤Prefix …»

[15:03] <evalable6> Voldenet, Full output: https://gist.github.com/f309af6e153900164469b6e27954af75

[15:04] <Voldenet> Splendid

[15:05] <jnthn> m: sub prefix:<$_> { $^n + 1 }; say $_ 41

[15:05] <evalable6> jnthn, rakudo-moar fce964231: OUTPUT: «42␤»

[15:05] <jnthn> hah :)

[15:06] *** pmurias joined
[15:08] <Voldenet> m: sub prefix:<my> { $^a }; sub prefix:<$_> { $^a }; sub prefix:<=> { $^a }; my $_ = 2;

[15:08] <evalable6> Voldenet, rakudo-moar fce964231: OUTPUT: «(exit code 1) ===SORRY!===␤Cannot find method 'ast' on object of type NQPMu␤»

[15:08] <Voldenet> i'd be quite worried if that worked

[15:08] *** yqt left
[15:12] *** pmurias left
[15:13] *** nikita_1 joined
[15:13] *** pmurias joined
[15:13] *** yqt joined
[15:14] *** ufobat_ joined
[15:18] *** ufobat left
[15:18] <nikita_1> hello, fathers. I'm trying to 'make install' the latest rakudo-star on DragonFlyBSD, but there are a lot of error messages: "Failed to resolve host name 'localhost' with family 0. Error: 'servname not supported for ai_socktype'" where the problem can be?

[15:19] *** yqt left
[15:19] *** robertle_ left
[15:23] *** zakharyas left
[15:25] *** zakharyas joined
[15:38] *** domidumont left
[15:40] <Geth> ¦ problem-solving/path-to-raku: 4 commits pushed by (Jonathan Worthington)++

[15:40] <Geth> ¦ problem-solving/path-to-raku: 52b02f8d81 | Tweak proposed language changes

[15:40] <Geth> ¦ problem-solving/path-to-raku: b96dff18b0 | Grammar tweak

[15:40] <Geth> ¦ problem-solving/path-to-raku: 749a9a2f6c | Improve description of Windows file associations

[15:41] <Geth> ¦ problem-solving/path-to-raku: 7faff8b4e6 | Mention two env vars that include PERL6

[15:41] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/compare/3021673634d5...7faff8b4e696

[15:55] <Kaiepi> nikita_1, if you give me a minute, would you be up for running a small c program to see why that could be happening?

[15:56] *** leont joined
[15:57] *** wamba left
[16:01] *** aborazmeh joined
[16:01] *** aborazmeh left
[16:01] *** aborazmeh joined
[16:03] <Geth> ¦ problem-solving: ajs assigned to AlexDaniel Issue Perl 6, if renamed, needs new filneame extensions https://github.com/perl6/problem-solving/issues/101

[16:04] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Perl 6, if renamed, needs new filename extensions https://github.com/perl6/problem-solving/issues/101

[16:04] <Geth> ¦ problem-solving: AlexDaniel unassigned from jnthn Issue Perl 6, if renamed, needs new filename extensions https://github.com/perl6/problem-solving/issues/101

[16:04] <Geth> ¦ problem-solving: AlexDaniel self-unassigned Perl 6, if renamed, needs new filename extensions https://github.com/perl6/problem-solving/issues/101

[16:05] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Perl 6, if renamed, needs new filename extensions https://github.com/perl6/problem-solving/issues/101

[16:12] *** lizmat joined
[16:13] *** jmerelo joined
[16:20] *** scimon left
[16:24] *** pmurias left
[16:24] *** pat_js left
[16:24] *** aborazmeh left
[16:26] *** wamba joined
[16:27] <Geth> ¦ problem-solving/path-to-raku: 9310222f55 | (Jonathan Worthington)++ | solutions/language/PATH-TO-RAKU.md

[16:27] <Geth> ¦ problem-solving/path-to-raku: Add a draft module author guide to the changes

[16:27] <tony-o> nikita_1: does localhost resolve to 127.0.0.1 ?

[16:27] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/9310222f55

[16:27] <Geth> ¦ problem-solving/path-to-raku: 9285582c0a | (Jonathan Worthington)++ | solutions/language/PATH-TO-RAKU.md

[16:27] <Geth> ¦ problem-solving/path-to-raku: Grammar tweak

[16:27] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/9285582c0a

[16:27] <tony-o> m: module Foo { our $xz = 42; our sub foo is export { say $xz//"undef"; }; }; import Foo; foo()

[16:27] <evalable6> tony-o, rakudo-moar fce964231: OUTPUT: «42␤»

[16:27] <tony-o> m: module Foo { our $*xz = 42; our sub foo is export { say $*xz//"undef"; }; }; import Foo; foo()

[16:27] <evalable6> tony-o, rakudo-moar fce964231: OUTPUT: «undef␤»

[16:28] *** Actualeyes joined
[16:31] <SmokeMachine> This script is given this error: https://www.irccloud.com/pastebin/k8vAJCp6/

[16:31] <SmokeMachine> https://www.irccloud.com/pastebin/cuW1aVB8/

[16:32] <nikita_1> tony-o: yes, on my machine localhost is 127.0.0.1, I suppose, that ai family is set to zero, not PF_INET. 

[16:37] *** dakkar left
[16:42] *** pmurias joined
[16:49] *** dolmen left
[16:51] <nikita_1> Kaiepi: yes, i'm able to run

[16:53] <Kaiepi> ok nikita_1 run this and tell me what if it prints an error or not https://hastebin.com/lahefeyexu.cpp

[16:57] *** aborazmeh joined
[16:57] *** aborazmeh left
[16:57] *** aborazmeh joined
[17:01] *** molaf left
[17:12] *** sno joined
[17:12] *** sno left
[17:20] *** MasterDuke joined
[17:22] *** pmurias left
[17:26] *** gabiruh_ joined
[17:27] *** gabiruh left
[17:28] *** wildtrees joined
[17:33] *** aborazmeh left
[17:42] *** zakharyas left
[17:51] *** ravenousmoose joined
[18:00] *** Sgeo__ joined
[18:03] *** Sgeo_ left
[18:04] *** pmurias joined
[18:09] *** |oLa| joined
[18:13] <Geth> ¦ problem-solving: vrurg assigned to AlexDaniel Issue Use of cmake for build subsystem https://github.com/perl6/problem-solving/issues/102

[18:18] *** sno joined
[18:21] *** pmurias left
[18:22] *** pmurias joined
[18:23] *** sauvin left
[18:41] *** Guest93 left
[18:42] <Kaiepi> i haven't used :D, :U, or :_ very much for typing stuff even though i type everything possible in my code, but i'm catching a lot more bugs in my code when using it now

[18:43] <guifa> Kaiepi: ikr?  I’m generally forced to use it because I do so much terminal output.  I just go ahead and assume gist needs to be multi based on definedness

[18:44] <guifa> What does Incompatible MROs in P6opaque rebless for types Rat and MyEnumClass mean?

[18:45] <guifa> Seems like you can’t use non-integers for enum vals I guess

[18:47] <tony-o> that would be my guess, you might be able to wrap p6opaque in something to make it work but that's a wag

[18:54] <Geth> ¦ problem-solving: vrurg assigned to jnthn Issue Roles, submethods, constructors, destructors. https://github.com/perl6/problem-solving/issues/103

[18:54] *** krychu joined
[18:56] *** |oLa| left
[19:00] *** Kaypie joined
[19:00] *** jmerelo left
[19:00] *** Kaiepi left
[19:05] *** ravenousmoose left
[19:08] <guifa> Is it possible to use regex for operator subs?  Like postfix:(/f o*/) to capture 1f 2foo 3fooo 2fooooooo ?

[19:09] *** reach_satori left
[19:09] *** reach_satori_ joined
[19:09] *** Kaypie is now known as Kaiepi

[19:10] <Kaiepi> m: subset Foo where Int; my Foo:U $foo; say $foo

[19:10] <evalable6> Kaiepi, rakudo-moar fce964231: OUTPUT: «(Foo)␤»

[19:10] <Kaiepi> m: subset Foo where Int; my Foo:D $foo; say $foo

[19:10] <evalable6> Kaiepi, rakudo-moar fce964231: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/p4QbIPNpyh␤Variabl…»

[19:10] <evalable6> Kaiepi, Full output: https://gist.github.com/3dc8147a321e2f755db331349084c490

[19:10] <Kaiepi> m: subset Foo where Int; my Foo:D $foo = 1; say $foo

[19:10] <evalable6> Kaiepi, rakudo-moar fce964231: OUTPUT: «1␤»

[19:10] *** AlexDaniel left
[19:11] *** AlexDaniel joined
[19:11] *** AlexDaniel left
[19:11] *** AlexDaniel joined
[19:18] *** __jrjsmrtn__ joined
[19:20] *** _jrjsmrtn left
[19:21] *** aborazmeh joined
[19:21] *** aborazmeh left
[19:21] *** aborazmeh joined
[19:28] *** yqt joined
[19:30] *** Ven`` joined
[19:41] *** AlexDaniel left
[19:41] *** AlexDaniel joined
[19:41] *** AlexDaniel left
[19:41] *** AlexDaniel joined
[19:42] <tony-o> m: multi sub x (Str:D $str where * ~~ /^'auth:'/) { say "yes: $str"; }; multi sub x (Str:D $str) { say "no: $str"; }; x('str ~~ /^auth:/'); x('other x');

[19:42] <evalable6> tony-o, rakudo-moar fce964231: OUTPUT: «no: str ~~ /^auth:/␤no: other x␤»

[19:42] <tony-o> m: multi sub x (Str:D $str where * ~~ /^'auth:'/) { say "yes: $str"; }; multi sub x (Str:D $str) { say "no: $str"; }; x('auth:test'); x('other x');

[19:42] <evalable6> tony-o, rakudo-moar fce964231: OUTPUT: «yes: auth:test␤no: other x␤»

[19:42] *** molaf joined
[19:42] <tony-o> guifa: ^ 

[19:44] <guifa> tony-o: I Mean with postfix operator subs :-)

[19:44] <guifa> multi postfix:<foo> ($bar) { … } works

[19:45] <tony-o> oh, i see - i'd imagine that only takes a string but likely doable in nqp

[19:46] <tony-o> i haven't dug around in those guys in a number of years though

[19:46] <tony-o> guts*

[19:46] <guifa> I have no plans to use it haha but was answering a code review question and thought there was potential for a good use for it

[19:48] *** marcusal1987 joined
[19:49] <guifa> https://codereview.stackexchange.com/questions/159150/mass-and-length-calculator-using-perl-6-custom-operator/227804#227804

[19:50] *** aborazmeh left
[19:52] <tony-o> hm, there's no $?ROUTINE in postfix: subs either

[19:52] <tony-o> m: sub postfix:<foo> (Str:D $a) { $?ROUTINE.name.say; }; 'a'foo;

[19:52] <evalable6> tony-o, rakudo-moar fce964231: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/Nn1KPD9ElD␤Variabl…»

[19:52] <evalable6> tony-o, Full output: https://gist.github.com/affa1bcf6e74382ee1d65699315144f5

[19:53] <nikita_1> Kaiepi:  nikita@dfly  ~  ./test2             

[19:53] <nikita_1> Error resolving localhost:8000: servname not supported for ai_socktype

[19:55] <tony-o> nikita_1: what is the output of getent hosts 0

[19:56] <tony-o> can you telnet 0 8000 ?

[19:56] <MasterDuke> m: sub postfix:<foo> (Str:D $a) { &?ROUTINE.name.say; }; 'a'foo;

[19:56] <evalable6> MasterDuke, rakudo-moar fce964231: OUTPUT: «postfix:<foo>␤»

[19:56] <tony-o> MasterDuke: ty, i am a clown

[19:57] *** lizmat left
[19:57] <AlexDaniel> 🤡

[19:57] <nikita_1>  nikita@dfly  ~  getent hosts 0

[19:57] <Grinnz> oh god. why did they have to make that an emoji. why

[19:57] <AlexDaniel> that emoji is really scary :D

[19:57] <nikita_1> 0.0.0.0           0

[19:58] <tony-o> guifa: you could abuse a `where` to match the postfix ?

[19:58] *** pmurias left
[19:59] <guifa> hmmm, you mean like sub postfix (Any $a) { #`( Check value based on &?ROUTINE )`} if not redispatch?

[19:59] <guifa> I wonder if that’s possible

[19:59] <tony-o> that's way too complicated though

[19:59] *** lizmat joined
[19:59] *** lizmat left
[20:00] <AlexDaniel> Grinnz: well, I mean… 𓂺

[20:00] <Grinnz> that one's not an emoji yet technically :P

[20:00] *** pmurias joined
[20:00] <Kaiepi> nikita_1, try changing ai_flags from AI_PASSIVE to AI_PASSIVE | AI_NUMERICSERV and run it again to see if that works

[20:01] <AlexDaniel> Grinnz: yeah, that part of unicode is not fleshed out properly

[20:01] <guifa> tony-o: Doesn’t work anyways haha I just tried.  Looks like you gotta have a string.  

[20:03] <nikita_1> Kaiepi: the same error. specifying ai_socktype with SOCK_STREAM (f.e.) solves the problem

[20:03] <nikita_1> but, i thinks, it's not the way

[20:03] <AlexDaniel> propdump: 🤡𓂺

[20:03] <unicodable6> AlexDaniel, https://gist.github.com/c245d2c4b935850561bca81f32f1758f

[20:04] <AlexDaniel> indeed, not emoji

[20:05] <AlexDaniel> m: say ‘#’.uniprop(‘Emoji’)

[20:05] <evalable6> AlexDaniel, rakudo-moar fce964231: OUTPUT: «True␤»

[20:05] <AlexDaniel> I never really understood that part :)

[20:05] <nikita_1> Kaiepi: here is the output:  nikita@dfly  ~  ./test2             

[20:05] <nikita_1> Successfully resolved localhost:8000!

[20:05] <nikita_1> Family:      28

[20:05] <nikita_1> Socket Type: 1

[20:05] <nikita_1> Protocol:    6

[20:06] <Kaiepi> ok nikita_1 a pullreq i have for improving hostname resolution fixes this then

[20:08] <Kaiepi> i checked dragonflybsd's kernel earlier to see when getaddrinfo is supposed to be returning that error and it does so when both ai_socktype and ai_protocol are 0 and AI_NUMERICSERV isn't passed as a flag. at the moment, moarvm does both, but whenever this gets merged it will pick an appropriate socket type and protocol and pass AI_NUMERICSERV since it's never passing a real service name

[20:11] *** yqt left
[20:13] <nikita_1> Kaiepi: is this code only for hostname resolve?

[20:13] *** Black_Ribbon joined
[20:13] <Kaiepi> yeah

[20:15] <nikita_1> is gethostbyname simpler?

[20:15] <Grinnz> gethostbyname should generally not be used anymore

[20:23] *** aborazmeh joined
[20:23] *** aborazmeh left
[20:23] *** aborazmeh joined
[20:25] *** marcusanthl1987 joined
[20:28] *** aborazmeh left
[20:28] <Kaiepi> struct hostent doesn't contain any struct sockaddr members, which moarvm needs to use when connecting or binding sockets, so idt gethostbyname2 would be appropriate to use here

[20:29] *** sena_kun left
[20:29] *** marcusal1987 left
[20:38] *** dwarring joined
[20:52] *** pmurias left
[20:53] <Kaiepi> is there anything on how to use cro pipelines online besides cro's documentation? they look like something that might make a bot i'm writing simpler

[21:03] *** marcus1987al joined
[21:03] *** pmurias joined
[21:06] *** marcusanthl1987 left
[21:06] <timotimo> there's the test suite that tests the pipelines, i'm sure that shows a lot of interesting stuff

[21:12] *** Xliff joined
[21:13] <Xliff> m: %?RESOURCES.say

[21:13] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «Nil␤»

[21:13] *** marcusanthl1987 joined
[21:13] <Xliff> m: %*DISTRIBUTION.keys.say

[21:13] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «(exit code 1) Dynamic variable %*DISTRIBUTION not found␤  in block <unit> at /tmp/tIXgUoNli6 line 1␤␤»

[21:13] <Xliff> m: $?DISTRIBUTION.keys.say

[21:13] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «()␤»

[21:14] <Xliff> Are %?RESOURCES and $?DISTRIBUTION the same, now?

[21:14] <Xliff> And does anyone know of a decent write up on how to use them?

[21:15] <Xliff> m: say %*DISTRO.perl

[21:15] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «Failure.new(exception => X::Dynamic::NotFound.new(name => "\%*DISTRO"), backtrace => Backtrace.new)␤»

[21:15] <Xliff> m: say $*DISTRO.perl

[21:15] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «Distro.new(release => "9", is-win => Bool::False, path-sep => ":", name => "debian", auth => "https://www.debian.org/", version => v9.stretch, signature => Blob, desc => "Debian GNU/Linux 9 (stretch)")␤»

[21:16] <Xliff> Why is path-sep ":"?

[21:17] <moritz> because PATH elements are separated by :

[21:17] <moritz> PATH=/bin:/usr/bin:/sbin

[21:17] *** marcus1987al left
[21:17] <Xliff> o

[21:17] <Xliff> Right

[21:18] <Xliff> $*SPEC.perl.say

[21:18] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «IO::Spec::Unix␤»

[21:18] <Xliff> $*SPEC.path-sep.say

[21:18] <Xliff> m: $*SPEC.path-sep.say

[21:18] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «(exit code 1) No such method 'path-sep' for invocant of type 'IO::Spec::Unix'␤  in block <unit> at /tmp/mTSQr5CKUA line 1␤␤»

[21:18] <Xliff> m: $*SPEC.dir-sep.say

[21:18] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: «/␤»

[21:21] <SmokeMachine> why is this taking so long? https://www.irccloud.com/pastebin/3FRW8JEo/

[21:23] *** gabiruh_ is now known as gabiruh

[21:28] *** krychu left
[21:39] <jnthn> SmokeMachine: Dunno, but 1) what is that .max actually applied to, 2) how much work is there, because start/await innevitably has some overhead, and if you're breaking the problem down into pieces that are way too small to overcome that, it won't help much

[21:42] <SmokeMachine> jnthn: `.max` is being applied to the return of `do for` a list Seq of Lists...

[21:53] <Xliff> \o

[21:53] <Xliff> SmokeMachine: Did you get my last bit of info?

[21:54] <SmokeMachine> Xliff: Sorry, I think I didn't... :(

[21:54] <Xliff> After setting up the columns, I'm still getting the same error.

[21:57] <Xliff> SmokeMachine: https://paste.fedoraproject.org/paste/zbrlO9TkUKhKmi6CZZwKaQ

[21:59] <SmokeMachine> Xliff: How is your driver?

[22:00] <SmokeMachine> Xliff: I think I've read somewhere that `.prepare` wan't working on that module, is that true?

[22:02] *** dpk left
[22:02] *** dpk joined
[22:06] *** lizmat joined
[22:08] *** Ven`` left
[22:18] <Xliff> SmokeMachine: Yeah. I think so.

[22:18] <SmokeMachine> Red's drivers (at least currently) uses prepare to run queries...

[22:19] <Xliff> Any query?

[22:19] <Xliff> Well, that makes sense.

[22:20] <Xliff> How can I set up a constant or scalar to use %?RESOURCES in an "is native" trait?

[22:20] <Xliff> Or can I just use it directly?

[22:24] *** leont left
[22:31] *** abraxxa left
[22:33] <jnthn> SmokeMachine: Hm, then I'm confused, since the loop gives back `Promise`s, and I'd have thought the .max should apply to the result of `await`?

[22:35] <SmokeMachine> jnthn: makes sense... I'm testing...

[22:36] <SmokeMachine> m: await do for ^5 { $_ }.^name

[22:36] <evalable6> SmokeMachine, rakudo-moar fce964231: OUTPUT: «(exit code 1) An operation first awaited:␤  in block <unit> at /tmp/Jy_9YcbAAa line 1␤␤Died with the exception:␤    Can only specify Awaitable objects to await (got a Str)␤      in block <unit> at /tmp/Jy_9YcbAAa line 1␤␤»

[22:36] <SmokeMachine> m: await do for ^5 { start { $_ } }.^name

[22:36] <evalable6> SmokeMachine, rakudo-moar fce964231: OUTPUT: «(exit code 1) An operation first awaited:␤  in block <unit> at /tmp/DMAFMgySbY line 1␤␤Died with the exception:␤    Can only specify Awaitable objects to await (got a Str)␤      in block <unit> at /tmp/DMAFMgySbY line 1␤␤»

[22:36] <SmokeMachine> m: await(do for ^5 { start { $_ } }).^name

[22:37] <evalable6> SmokeMachine, rakudo-moar fce964231: OUTPUT: «»

[22:37] <SmokeMachine> nothing?

[22:39] <SmokeMachine> https://www.irccloud.com/pastebin/fDx8mdmJ/

[22:40] <MasterDuke> await(do for ^5 { start { $_ } }).^name.say

[22:40] <evalable6> MasterDuke, rakudo-moar fce964231: OUTPUT: «List␤»

[22:40] <SmokeMachine> MasterDuke: sure! thanks! sorry!

[22:48] *** kensanata joined
[23:05] *** lucasb left
[23:09] *** holyghost left
[23:18] *** Xliff left
[23:21] *** wamba left
[23:23] *** marcusal1987 joined
[23:23] *** kensanata left
[23:24] *** yqt joined
[23:25] *** marcusanthl1987 left
[23:27] *** rindolf left
[23:35] *** pmurias left
[23:39] *** kst left
[23:39] *** yqt left
