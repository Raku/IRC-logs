[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:14] *** netrino left
[00:19] <discord6> <Aearnus> i'm being big dumb again how do you define per project dependencies again? is it in the meta6 file

[00:22] *** Cabanossi left
[00:22] <timotimo> yeah, that's the place

[00:27] *** Cabanossi joined
[00:31] <discord6> <Aearnus> hmm. how do you specify a default file to execute when you try to run a perl6 program? is that even smth you can do

[00:31] <timotimo> not really. you can put stuff in bin/ and zef will install launchers for those files

[00:31] <discord6> <Aearnus> ahh, that's what I want

[00:31] <timotimo> that serves as an entry point usually

[00:32] <discord6> <Aearnus> how does that work? just pop it in bin and zef install does the rest?

[00:32] <timotimo> yeah i believe so

[00:33] <discord6> <Aearnus> lemme give that a shot

[00:34] <discord6> <Aearnus> (trying to get a cro application to work)

[00:34] *** lucasb left
[00:35] <discord6> <Aearnus> ahh zef is slow it makes me sad

[00:35] <timotimo> for my cro app i have a "service.p6" in my project's root folder at the moment

[00:35] <timotimo> you need to get in there to run "npm install" and "npm run dev" anyway

[00:36] <discord6> <Aearnus> ah. so you just run service.p6 manually?

[00:36] *** Nightyb joined
[00:36] <discord6> <Aearnus> wouldn't be a bad idea. might just be nice to have some sort of standard file (for cro at least). sort of like rackup for ruby/rack

[00:37] <discord6> <Aearnus> cro-up. croup. hehe

[00:42] <timotimo> i mean, "cro run" is a thing

[00:43] *** Nightyb left
[00:45] <discord6> <Aearnus> oh! that's exactly what I wanted

[00:45] *** kerframil left
[00:45] <discord6> <Aearnus> 😄

[00:59] <discord6> <Aearnus> huh. i'm trying to run the example from cro's website and it doesn't do anything. it just blocks and doesn't output anything

[01:01] <discord6> <Aearnus> oh. i'm really dumb. the default application doesn't have a path for "/"

[01:03] <discord6> <Aearnus> cro run auto updates! that's really incredible

[01:07] *** mowcat left
[01:15] <timotimo> unfortunately it suffers from some buffering :(

[01:17] *** jaldhar_ joined
[01:19] *** rainmanj_ joined
[01:21] *** jaldhar left
[01:21] *** rainmanjam left
[01:23] <discord6> <Aearnus> timotimo: much better than the situation over in the world of Ruby, what i'm used to

[01:24] <timotimo> no way

[01:24] <timotimo> if you think this is good, "cro web" might just blow your mind

[01:25] <timotimo> it's an alternative to "cro run", so you'd kill that first

[01:25] <discord6> <Aearnus> woah

[01:25] <discord6> <Aearnus> that's insane

[01:26] <timotimo> just to cover all bases, do you know about CRO_TRACE?

[01:26] <discord6> <Aearnus> no, I don't

[01:26] <timotimo> it gives, potentially, a whole lot of output

[01:27] <discord6> <Aearnus> ahh. much nicer than cro run

[01:27] <discord6> <Aearnus> this seems too easy

[01:27] <timotimo> it allows you to follow messages back and forth through cro's different transformers

[01:27] <timotimo> you'll see web requests come in to the server, websocket messages go in and out, etc

[01:27] <discord6> <Aearnus> i don't think i can go back

[01:29] <discord6> <Aearnus> this is suuuper nice

[01:30] <timotimo> cro has its roots in microservices, which is also why there's "link templates" you can have it stub for you, and why "cro web" will run multiple services for you and hook them up to each other by starting dependent services with the hostname / port number of other services

[01:31] <discord6> <Aearnus> i can definitely appreciate using websockets with such ease

[01:38] *** Sgeo__ joined
[01:41] *** Sgeo_ left
[01:50] <discord6> <Aearnus> is https://github.com/perl6/DBIish more or less the standard for sqlite3 databases?

[01:51] <timotimo> i use that in moarperf

[01:51] <discord6> <Aearnus> works well?

[01:54] <timotimo> yeah, it's been good enough at least

[01:54] <timotimo> jn gave it a little performance-past not too long ago, too

[01:58] <timotimo> sleep, seeya!

[01:58] <discord6> <Aearnus> o/

[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:20] *** Cabanossi left
[02:33] *** Cabanossi joined
[02:37] *** Sgeo__ left
[02:43] *** Sgeo joined
[02:51] *** hythm joined
[03:00] *** [particle] joined
[03:00] <hythm> hello, is there a documentation for how to programatically check if a module exists in the ecosystem and retrieve its META6.json? something like `curl https://ecosystem-api.p6c.org/Foo::Bar`

[03:01] *** [particle]1 left
[03:02] *** pamplemousse left
[03:03] *** rainmanjam joined
[03:04] <hythm> I'm trying to check how `zef` search for a module to install it, but it's a little complicated to me and can't figure it out

[03:06] *** rainmanj_ left
[03:07] <vrurg> hythm: If you mean The ecosystem, then fetch https://github.com/perl6/ecosystem/blob/master/META.list and parse it.

[03:07] <vrurg> Not sure if there is a module for this task.

[03:08] <vrurg> https://modules.perl6.org/dist/Perl6::Ecosystem:cpan:JMERELO

[03:15] <hythm> Thanks vrurg, that's helpful, checking... I was reading this advent post which mention a "Recommendation Manager", and I was wondering how this works and if there is any documentation on working with Recommendation managers https://perl6advent.wordpress.com/2016/12/16/day-16-the-meta-spec-distribution-and-compunitrepository-explained-ish/#fnref1

[03:17] <hythm> checking https://modules.perl6.org/dist/Perl6::Ecosystem:cpan:JMERELO ...

[03:27] *** rainmanj_ joined
[03:28] *** rainmanjam left
[03:47] *** cpan-p6 left
[03:47] *** cpan-p6 joined
[03:47] *** cpan-p6 left
[03:47] *** cpan-p6 joined
[03:57] *** hythm left
[04:12] *** Kaiepi left
[04:12] *** Kaiepi joined
[04:20] *** rainmanj_ left
[04:21] *** rainmanjam joined
[04:52] *** curan joined
[05:10] *** orangejuice joined
[05:10] *** orangejuice left
[05:30] *** rainmanjam left
[05:39] *** sauvin joined
[05:47] *** quester joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:03] *** ChanServ sets mode: +v reportable6

[06:19] *** rindolf joined
[06:39] *** abraxxa joined
[06:48] *** [particle] left
[06:53] *** [particle] joined
[06:54] *** Sgeo left
[06:55] *** lizmat joined
[06:56] *** lizmat left
[07:01] *** molaf joined
[07:07] *** __jrjsmrtn__ joined
[07:09] *** _jrjsmrtn left
[07:10] *** [particle] left
[07:10] *** [particle]1 joined
[07:13] *** [particle] joined
[07:16] *** [particle]1 left
[07:17] *** demanuel left
[07:17] *** [particle]1 joined
[07:19] *** [particle] left
[07:41] *** satori__ joined
[07:45] *** scimon joined
[08:02] *** chloekek joined
[08:09] *** quester left
[08:17] *** kensanata joined
[08:19] *** antoniogamiz joined
[08:21] <antoniogamiz> what module do you recommend to generate digests from files?

[08:22] <El_Che> ecocode: lo

[08:32] <scimon> antoniogamiz: https://github.com/cosimo/perl6-digest-md5 ? (Looks like it's not been updated in a while it installs OK)

[08:33] <antoniogamiz> scimon: I will take a look, thanks :D

[08:33] <antoniogamiz> I was also looking this => https://github.com/grondilu/libdigest-perl6

[08:33] <antoniogamiz> it has some stars so I suppose it's good too

[08:34] <scimon> Seems to work. To do a file Digest::MD5.new.md5_hex("filename".IO.slurp) works OK.

[08:56] *** noisegul joined
[08:57] *** lizmat joined
[08:58] <scimon> Morning.

[09:01] *** Sgeo joined
[09:02] <antoniogamiz> morning o/

[09:04] <Geth> ¦ problem-solving/path-to-raku: 31a00384a6 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[09:04] <Geth> ¦ problem-solving/path-to-raku: Refince external references section

[09:04] <Geth> ¦ problem-solving/path-to-raku: 

[09:04] <Geth> ¦ problem-solving/path-to-raku: Add specific mention of Rosetta Code

[09:04] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/31a00384a6

[09:05] <discord6> <Aearnus> is there any way to combine routing applications in cro?

[09:13] <lizmat> Aearnus: perhaps #cro would be a better channel to ask this ?

[09:14] <lizmat> also: not sure what you mean exactly?

[09:14] <discord6> <Aearnus> fair, didn't know #cro existed :^)

[09:14] <discord6> <Aearnus> and i just meant being able to split routing across multiple files

[09:14] <discord6> <Aearnus> login routes in one module, application routes in another

[09:15] <lizmat> you could export a sub with the routes and combine those

[09:16] <scimon> Yup there is. It's in the docs. One sec.

[09:16] <discord6> <Aearnus> aha https://cro.services/docs/reference/cro-http-router#Composing_routers

[09:16] <discord6> <Aearnus> just managed to find it

[09:16] <scimon> There you go :)

[09:16] <discord6> <Aearnus> 😄

[09:30] *** Kaiepi left
[09:31] <discord6> <Aearnus> random thought: it's real fun how tight knit the perl 6/raku community is. i follow like half of y'all on twitter and vice versa, and you don't really get that with other tech communities

[09:34] *** Kaiepi joined
[09:37] <Geth> ¦ problem-solving/path-to-raku: 92fd411b67 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[09:37] <Geth> ¦ problem-solving/path-to-raku: Open the door to a joint rename / next version event

[09:37] <Geth> ¦ problem-solving/path-to-raku: 

[09:37] <Geth> ¦ problem-solving/path-to-raku: Also fix some erroneous backslashes

[09:38] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/92fd411b67

[09:40] *** netrino joined
[09:40] <scimon> It is nice. It won't last, there's more people getting interested all the time. Only so long you can keep track of them all.

[09:46] *** noisegul left
[09:47] <Geth> ¦ problem-solving/path-to-raku: cfd072d974 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[09:47] <Geth> ¦ problem-solving/path-to-raku: Mention a "Raku Foundation" as part of YAS

[09:47] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/cfd072d974

[09:51] *** pat_js joined
[09:52] <discord6> <Aearnus> scimon: always going to be some sort of core community

[09:52] <discord6> <Aearnus> haskell's still got a really strong core community despite the fact that it's rather huge

[09:52] <discord6> <Aearnus> hopefully p6 can stay like that too

[09:52] <scimon> Oh yes. Definitely.

[09:54] *** pilne left
[09:58] <lizmat> I think it wll

[09:58] <lizmat> *will

[09:59] *** leont joined
[09:59] <scimon> I'm just looking at the stats JJ put togther on Python vs Perl6 doing Fibonacci. That's impressive.

[09:59] <discord6> <Aearnus> link?

[10:00] <scimon> https://twitter.com/jjmerelo/status/1162103498437210115

[10:03] <discord6> <Aearnus> definitely impressive, but something about that python strikes me as particularly undogmatic

[10:03] <scimon> unidiomatic? 

[10:04] <scimon> It's probably not Pythonic. (A phrase that grates my teeth everytime I here it).

[10:04] <discord6> <Aearnus> well, you know python and their One True Way To Do It. so in this situation undogmatic == unidiomatic == not... pythonic, ahah

[10:04] <jast> is it perlonic though? :}

[10:04] <scimon> TIMTOWTDI

[10:05] <discord6> <Aearnus> regardless of the performance, i'd take the bottom over the top any day

[10:06] <scimon> Indeed.

[10:10] *** scimon left
[10:11] <discord6> <Aearnus> huh. it seems like dbiish is kinda broken

[10:12] <discord6> <Aearnus> or at least my install is broken. probably that.

[10:12] *** scimon joined
[10:12] <discord6> <Aearnus> ahh. i accidentally created a table twice. gotta figure out how to handle that....

[10:16] *** kensanata left
[10:16] *** lizmat left
[10:28] <SmokeMachine> timotimo: about languages with much words and few symbols (or none at all), I agree... and can show you an example: https://github.com/FCO/Bernalang (sorry, backlogging...)

[10:47] *** kensanata joined
[10:53] <kawaii> Aearnus: CREATE TABLE IF NOT EXISTS? :)

[10:54] <antoniogamiz> I can install some modules with zef using alpine, but not some mm

[11:04] *** jaldhar_ left
[11:04] *** jaldhar_ joined
[11:07] <antoniogamiz> tyil: using your docker image, I can make zef install Pod::Load, but I cannot execute zef install Perl6::TypeGraph for instance

[11:08] <antoniogamiz> oh sorry, ignore that

[11:10] <Voldenet> Huh, I'm parsing irc logs with perl6 and get 'malformed utf' when encountering �

[11:10] *** netrino left
[11:11] <Voldenet> Yes, it may be a malformed utf character, but can lines just ignore it somehow?

[11:11] <antoniogamiz> Voldenet: maybe this helps you https://www.perlmonks.org/?node_id=902060

[11:12] <Voldenet> it would if it was perl6 answer :P

[11:12] <antoniogamiz> oh there's a stack overwflow answer too (in perl6) => https://stackoverflow.com/questions/49320061/perl-6-error-message-malformed-utf-8-in-block-unit

[11:12] <tyil> antoniogamiz: ignore that as in, you did a mistake and you fixed it now, or is it something I could improve (whetehr by documentation, or the image itsefl)

[11:13] <antoniogamiz> I did a mistake hehe

[11:14] *** Guest93 left
[11:14] *** Guest93 joined
[11:15] <Voldenet> antoniogamiz: Ah, thanks, apparently using utf8-c8 is the way to handle maybe-invalid utf8

[11:16] <antoniogamiz> Voldenet: you're welcome :D

[11:19] *** lizmat joined
[11:26] *** netrino joined
[11:30] <chloekek> p6: class C { has $.x; method f($y) { $!x + $y } }; my &f := *.f; f(C.new(x => 1), 2).say

[11:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[11:30] <chloekek> p6: class C { has $.x; method f($y) { $!x + $y } }; my &f := *.f(*); f(C.new(x => 1), 2).say

[11:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[11:37] *** Black_Ribbon left
[11:42] *** lichtkind_ joined
[11:43] *** lichtkind_ left
[11:44] *** lichtkind_ joined
[11:45] *** lichtkind left
[11:45] *** lichtkind_ is now known as lichtkind

[11:56] *** pat_js left
[11:58] <SmokeMachine> Aearnus: Using Red: `MyModel.^create-table: :if-not-exists;`

[12:00] *** reportable6 left
[12:03] *** pat_js joined
[12:04] *** reportable6 joined
[12:11] *** lizmat left
[12:14] *** lizmat joined
[12:20] *** noisegul joined
[12:25] *** antoniogamiz left
[12:27] <kawaii> I still need to try Red :)

[12:28] *** mensvaga joined
[12:40] <SmokeMachine> kawaii: please, do!

[12:42] <SmokeMachine> I would expect to `&[+]` be faster than `*+*` (or at least the same speed)... but it seems to be the opposite:

[12:42] <SmokeMachine> m: (1, 1, *+* ... *)[65535]; say now - INIT now

[12:42] <SmokeMachine> m: (1, 1, &[+] ... *)[65535]; say now - INIT now

[12:42] <SmokeMachine> m: (1, 1, *+* ... *)[1000]; say now - INIT now

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «17.03908035␤»

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(timeout)32.5424868␤»

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «0.7587308␤»

[12:43] <SmokeMachine> m: (1, 1, &] ... *)[1000]; say now - INIT now

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in parenthesized expression; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3(1, 1, &7⏏5] ... *)[1000]; say now - INIT now␤    ex…»

[12:43] <SmokeMachine> m: (1, 1, &[+] ... *)[1000]; say now - INIT now

[12:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «0.98636324␤»

[12:49] <chloekek> 100 ms per element, oh my.

[12:49] <chloekek> Oh no, 1 ms per element.

[12:53] *** ravenous_ joined
[12:58] *** ravenous_ left
[13:09] <scimon> It doesn't seem the best use of [+] really. I'd guess that's why it's slow. The Sequence code (I'm guessing) is optimised for a code block. 

[13:09] *** pat_js left
[13:10] <AlexDaniel> clarkema: question about star: https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-08-16#l149

[13:10] <AlexDaniel> clarkema: maybe you should hang around on #perl6-dev too :)

[13:14] *** nepugia joined
[13:25] *** lembark left
[13:30] *** avalenn left
[13:31] *** Kaiepi left
[13:31] *** Kaiepi joined
[13:41] *** curan left
[13:43] *** nepugia left
[13:52] *** lucasb joined
[13:55] <kawaii> Itching with boredom not having my laptop :(

[13:55] <kawaii> Need to get back to Perling asap

[13:57] *** domidumont joined
[13:57] *** domidumont left
[13:57] *** domidumont joined
[14:02] *** rainmanjam joined
[14:09] <timotimo> you got everything you need to hook up your phone to mouse/keyboard and display? :)

[14:10] *** lembark joined
[14:10] <mst> AlexDaniel++ # unfortunately necessary

[14:13] <mst> heh, and the opinion from the perl5 side appears to be "the only reason we're sorry it's locked is because it means we can't post to disavow the assholes claiming to be on the same side of us who posted after the last time we did that"

[14:13] <mst> s/of/as/

[14:15] *** satori__ left
[14:16] <scimon> It was getting a bit annoying.

[14:17] <mst> indeed

[14:17] <scimon> I was managing to control my urge to wade in. 

[14:17] <mst> lizmat's 'coming out' metaphor was genius though and I'm glad it lasted long enough for that to get posted

[14:18] <timotimo> i've read parts of the thread but github doesn't remember for me how much i've read so now i'm lost

[14:19] * lucasb is lost too

[14:19] <scimon> I've mostly been reading the emails.

[14:20] <mst> I've read all of it and politely LARTed a few people, mostly perl5ers being daft

[14:20] <scimon> I saw. 

[14:22] *** Guest93 left
[14:23] *** Guest93 joined
[14:24] *** antoniogamiz joined
[14:24] *** pat_js joined
[14:27] *** rindolf left
[14:40] *** rainmanj_ joined
[14:42] *** rainmanjam left
[14:43] *** scimon left
[14:46] *** rainmanj_ left
[14:46] *** rainmanjam joined
[14:50] *** rindolf joined
[14:50] <jdv79> how can i assign an array into a scalar without the $[] bit again?

[14:50] <Geth> ¦ doc/master: 4 commits pushed by Coke++

[14:50] <Geth> ¦ doc/master: dd599d8c94 | whitespace

[14:50] <Geth> ¦ doc/master: 0223948b2d | learn new words

[14:50] <Geth> ¦ doc/master: e8d89a2ef0 | fix typo in code

[14:50] <Geth> ¦ doc/master: 149bb20c13 | fix compilation

[14:50] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/ccf2245704ac...149bb20c13e8

[14:56] *** pamplemousse joined
[14:57] *** molaf left
[14:58] <jdv79> m: class c { has Array[Str] $.a; }; c.new(a => [1,2,3]);

[14:58] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Type check failed in assignment to $!a; expected Array[Str] but got Array ($[1, 2, 3])␤  in block <unit> at <tmp> line 1␤␤»

[14:58] <jdv79> m: class c { has Array[Str] $.a; }; c.new(a => ["asdf"]);

[14:58] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Type check failed in assignment to $!a; expected Array[Str] but got Array ($["asdf"])␤  in block <unit> at <tmp> line 1␤␤»

[14:59] <jdv79> ignore the first one - my bad

[15:02] *** rainmanj_ joined
[15:02] *** [Sno] left
[15:03] *** pat_js left
[15:03] *** [Sno] joined
[15:04] *** rainmanjam left
[15:05] <jnthn> You need to creaet an Array[Str]

[15:05] <jnthn> *create

[15:05] *** noisegul left
[15:05] <jnthn> m: class c { has Array[Str] $.a; }; c.new(a => Array[Str]("asdf"));

[15:05] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[15:07] <jdv79> thanks

[15:08] <jnthn> (When it's an @ sigil, like `has Str @.a`, then assignment is copying, so it checks each element as it assigns)

[15:19] *** rainmanj_ left
[15:22] *** Cabanossi left
[15:30] *** kensanata left
[15:34] *** pat_js joined
[15:34] *** Cabanossi joined
[15:36] <antoniogamiz> mi6 bumps version automatically?

[15:37] <timotimo> it has a thing in it that does it for you, but you can deactivate it

[15:37] <timotimo> also, it asks what you want the version to be, but it defaults to "minor version increase by 1"

[15:37] <antoniogamiz> I want to know what thing exactly

[15:37] <antoniogamiz> I mean, what should I execute for that to happen

[15:37] <timotimo> "mi6 release" will do everything

[15:38] <antoniogamiz> ah ok, thanks :D

[15:52] *** Grinnz joined
[15:53] <Grinnz> apologies for the intrusion :) I just had some unsolicited opinion to offer on the latest concern in #81

[15:53] <timotimo> ohai grinnz

[15:54] <timotimo> i appreciate your contributions on reddit :)

[15:54] <Grinnz> It's a valid concern. As a modern Perl 5 user I am keenly aware that people will say stupid, uninformed things about anything. And it will happen for this. But the question for this decision is: will it be worse than the distortion and misrepresentation of the current usage of the name Perl? What can be done to direct the narrative?

[15:57] <timotimo> i'm not sure what exactly you're refering to

[15:58] <Grinnz> https://github.com/perl6/problem-solving/issues/81

[15:58] <timotimo> ah, that part i know

[15:58] <timotimo> i was more wondering about "the distortion and misrepresentation of the current usage of the name perl"

[15:58] <timotimo> i expect you're talking about usage of "perl" in the greater programming community?

[15:59] <timotimo> the typical "lol perl is line noise" stuff?

[15:59] *** pamplemousse left
[15:59] <Grinnz> all of the ways that Perl 6 having the name Perl 6 have been misinterpreted due to all of that

[15:59] <antoniogamiz> 213 comments uf

[15:59] *** pamplemousse joined
[16:00] <timotimo> so including things like "perl 6 killed perl 5" and "php skipped version 6 because it's cursed"?

[16:00] <Grinnz> sure, though I don't know if the latter is very prevalent :P

[16:00] <mst> timotimo: fundamentally, all the things masak was gesturing at in his later comments

[16:01] <mst> and given he and I were the ones who co-ordinated the sister language narrative, yeah, we've both got the scars

[16:02] <timotimo> i think mysql either also skipped version 6 or had a bad experience with their version 6?

[16:02] <Grinnz> *and* 7, in that case

[16:03] <Grinnz> apparently because 6 existed at some point, and 7 was used by mysql cluster

[16:03] <mst> co-ordinating this and making sure we retain control of the narrative is going to be a stone cold bitch of a problem

[16:04] <mst> on the upside, though, a decent chunk of the perl5 people who were ... issues ... in the previous case will likely be assets this time around if we can get them aimed properly

[16:11] <Grinnz> The way I'd approach it would be to make sure the nuance and gray area is acknowledged, not hidden: Raku is a Perl but it's not the same Perl, thus it needs its own identity, and emphasize that the communities still plan to work together

[16:12] *** Sgeo_ joined
[16:12] <Grinnz> LeoNerd's Lisp/Scheme analogy is also apt I think, though of course we are dealing with a very different audience

[16:14] *** Sgeo left
[16:19] *** trinityhex joined
[16:19] <jdv79> i'm curious to see what the rename will result in

[16:26] *** lizmat left
[16:27] *** harmil joined
[16:27] *** lizmat joined
[16:27] *** lizmat left
[16:31] <tadzik> indeed

[16:31] <tadzik> I got excited today seeing someone use Raku at work... but it turned out that I misread and it was actually `rake` :(

[16:32] *** Ven`` joined
[16:32] <timotimo> haha

[16:34] <harmil> Rake should be the name of a test harness for something in the ecosystem.

[16:35] *** lembark left
[16:40] *** pat_js left
[16:43] *** Sgeo_ left
[16:45] *** Kaiepi left
[16:45] *** Kaiepi joined
[16:53] *** chloekek left
[16:55] <gdonald> rake is already the name of a tool Ruby developers use daily

[16:58] <kawaii> I said this in the Perl 6 Discord server but I'll repeat here: it's a silly debate. I don't care what the name of the language is. You shouldn't either, it's distracting you from programming :)

[16:59] <antoniogamiz> kawaii: you should ping that in the issues repo

[17:00] <Grinnz> The problem is, people do care, whether you want them to or not

[17:00] <gdonald> what debate?

[17:01] <timotimo> renaming perl 6

[17:01] <antoniogamiz> renaming perl6

[17:01] <antoniogamiz> gdonald: see https://github.com/perl6/problem-solving/issues/81

[17:01] <gdonald> oh, that's still a thing?

[17:01] *** leont left
[17:01] <gdonald> I thought that idea got squashed already.

[17:01] <tadzik> kawaii: we wouldn't be having the discussion if "you shouldn't care" worked on the general public ;)

[17:01] <kawaii> antoniogamiz: I don't have such powers to comment on locked issues ;)

[17:02] <kawaii> I'm just AlexDaniel's lowly apprentice

[17:03] <tadzik> oh, locked! Time to subscribe to it again :)

[17:03] <gdonald> did the Perl 5 peeps run out of version numbers?

[17:03] <kawaii> Perl 5 is at .30, no?

[17:03] <tadzik> it is indeed

[17:03] <kawaii> So they have another .69 versions to use, right?

[17:04] <gdonald> sounds like plenty

[17:04] <Grinnz> 969 actually. but that's not relevant

[17:04] <tadzik> only if they settle for 2-digit numbers :)

[17:05] <kawaii> On average how long is there between Perl 5 releases?

[17:05] <Grinnz> major releases, 1 year

[17:05] <tadzik> ...why does it matter?

[17:06] <tadzik> I can see where you're going with this, but it's unrelated to the discussion

[17:06] <Grinnz> (though each major release is 2 major versions apart)

[17:06] <kawaii> So according to Grinnz's comment about them having another 969 version numbers to use, and the fact that there's a release each year if we estimate... We can delay this debate for another 969 years.

[17:07] <Grinnz> perl 5's use of version numbers is not at all relevant to the issue

[17:07] *** Ven`` left
[17:07] <kawaii> It seems to be their main point of contention, that we 'stole' 6 from them.

[17:07] <Grinnz> it is a small note in the history of the long contention

[17:08] *** Ven`` joined
[17:08] <Grinnz> and one of the least relevant to Perl 6

[17:08] <Grinnz> as such I would only consider it a strawman in the current discussion

[17:08] *** mowcat joined
[17:09] <gdonald> I can't even spell Camelia :(

[17:10] <AlexDaniel> gdonald: it's ok, I can't pronounce Raku

[17:10] <gdonald> good point.

[17:13] <Grinnz> I'd also like to apologize that the blowhards from perlmonks caused the discussion to have to be locked, since I'm sure there are more people that would like to at least give some reactions on the posts

[17:13] *** molaf joined
[17:13] *** Ven`` left
[17:17] *** lucasb left
[17:18] <gdonald> so that was the "poll

[17:19] *** ravenous_ joined
[17:19] <gdonald> "

[17:19] <gdonald> the github issue I mean?  people like voted there or whatever?

[17:19] <AlexDaniel> Grinnz: it's not that, really, I think everyone should take a break from that thread and go do stuff

[17:20] <AlexDaniel> gdonald: not exactly, but it was a way to show your support and love

[17:23] *** antoniogamiz left
[17:24] *** ravenous_ left
[17:27] <kawaii> Perlmonks is probably the worst place to learn Perl

[17:27] <kawaii> Or to ask for help

[17:27] <kawaii> Unless you have a fetish for being ridiculed and verbally abused

[17:28] <kawaii> The only downside to tmtowtdi: everyone thinks their way is best :)

[17:29] <timotimo> pfft, you only get ridiculed and verbally abused if you're not good at what you're trying to learn

[17:29] <timotimo> or if you've learned it wrong

[17:29] <timotimo> or if you have the wrong opinion on something

[17:29] <timotimo> actually, i know barely anything about perlmonks' community

[17:29] <timotimo> so this is totally hyperbole based on no knowledge *shrug*

[17:30] <kawaii> https://usercontent.irccloud-cdn.com/file/ktPz4YUi/CGtLNTtUgAIhmlM.png

[17:30] <kawaii> timotimo: ^ :)

[17:30] <kawaii> friendly guys

[17:31] <gdonald> that's harsh right there.

[17:32] <timotimo> i hope our treatment of holyghost didn't feel like that screenshot to them

[17:41] *** lembark joined
[17:42] *** harmil left
[17:45] *** wildtrees joined
[17:46] *** wildtrees left
[17:46] *** wildtrees joined
[17:46] <Geth> ¦ whateverable: 3965841bc8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6

[17:46] <Geth> ¦ whateverable: Strip numbers aggressively

[17:46] <Geth> ¦ whateverable: 

[17:46] <Geth> ¦ whateverable: Previous regex was wrong anyway.

[17:46] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/3965841bc8

[17:46] <Geth> ¦ whateverable: 97d9d28b68 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6

[17:46] <Geth> ¦ whateverable: Save requested nickname from .tell

[17:46] <Geth> ¦ whateverable: 

[17:46] <Geth> ¦ whateverable: So that we can later use it for renormalization.

[17:46] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/97d9d28b68

[17:46] <Geth> ¦ whateverable: 2ac5e98bda | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[17:46] <Geth> ¦ whateverable: Print actual nickname

[17:47] <Geth> ¦ whateverable: 

[17:47] <Geth> ¦ whateverable: Instead of repyling back what was requested, or replying with a

[17:47] <Geth> ¦ whateverable: overnormalized string.

[17:47] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/2ac5e98bda

[17:48] *** samcv joined
[17:48] *** wildtrees left
[17:49] <Geth> ¦ whateverable: a0ae90710e | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6

[17:49] <Geth> ¦ whateverable: Renormalize nicknames on startup

[17:49] <Geth> ¦ whateverable: 

[17:49] <Geth> ¦ whateverable: Should improve the bus factor a bit, assuming that nothing goes wrong

[17:49] <Geth> ¦ whateverable: with these few lines.

[17:49] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/a0ae90710e

[17:49] *** wildtrees joined
[17:50] <AlexDaniel> vrurg++ # doing work

[17:50] *** wildtrees left
[17:50] <vrurg> AlexDaniel: just closing own stuff. Boring.

[17:51] <AlexDaniel> vrurg: close someone else's stuff, that's always more fun

[17:51] *** wildtrees joined
[17:51] <AlexDaniel> :)

[17:51] <AlexDaniel> especially if you *just* close it, without resolving :)

[17:51] <vrurg> AlexDaniel: Wish to. For that I currently need jnthn approval for CORE::<lang-rev> namespaces.

[17:52] <vrurg> Oh, really! That's an idea! Gonna choose one most hurtfull one for that! :D

[17:52] *** wildtrees left
[17:52] *** eiro left
[17:52] *** satori__ joined
[17:53] *** harmil joined
[17:53] *** eiro joined
[17:53] <vrurg> "His last words were: What harm could it be?" ;)

[17:54] <Grinnz> perlmonks is like any other perl community. it has people that are helpful and nice and people that are an overall drain on the community (as helper or asker). it just does not have any apparent moderation direction to keep the latter from getting out of hand

[17:55] <Grinnz> i assume out of some fear of censorship but I'm not familiar enough to say

[17:56] <El_Che> and it's looked that's stuck in the 90s

[17:56] <Grinnz> I have many opinions on the look yes ;)

[17:57] <El_Che> it confirms to many people the perl is dead idea

[17:57] *** nepugia joined
[18:00] *** reportable6 left
[18:00] <Grinnz> it reminds me of what I've heard about #perl before a more... strict approach was taken

[18:02] *** reportable6 joined
[18:02] *** ChanServ sets mode: +v reportable6

[18:03] *** Xliff joined
[18:03] <Xliff> \o

[18:12] *** pilne joined
[18:15] *** nepugia left
[18:15] <Xliff> kawaii	https://usercontent.irccloud-cdn.com/file/ktPz4YUi/CGtLNTtUgAIhmlM.png

[18:15] <Xliff> ^^ Where was this discussion?

[18:15] <timotimo> https://cdn.discordapp.com/attachments/538774203378171935/611696639274516501/unknown.png - Xliff 

[18:16] <kawaii> Xliff: I don't remember the thread exactly, it's an old screenshot I had laying around on my Google drive

[18:16] <Xliff> \o/

[18:16] <kawaii> You could probably Google the wording and find it

[18:16] <Xliff> ^ timotimo

[18:16] <timotimo> \o/

[18:16] <Xliff> kawaii: OK.

[18:17] *** domidumont left
[18:17] <Xliff> timotimo: So... L-systems?

[18:17] <timotimo> well, this one isn't an L-system

[18:17] *** sena_kun joined
[18:17] <Xliff> Yeah, but you were talking about 'em and I've been reading.

[18:18] <Xliff> Would make a great livecoding experiment

[18:18] <timotimo> sure

[18:18] <timotimo> it'll also want things you can change without recompiling, though

[18:18] *** aborazmeh joined
[18:18] *** aborazmeh left
[18:18] *** aborazmeh joined
[18:19] *** domidumont joined
[18:19] <Xliff> timotimo: Predefined routines?

[18:20] <timotimo> i'm thinking of an API to declare a UI that'd be displayed alongside the source or canvas

[18:20] <timotimo> like, the frame function could have extra variables in the signature that youcan give type constraints to that are then used to create the UI

[18:20] <timotimo> type constraints and documentation comments

[18:20] <timotimo> and default values

[18:21] <Xliff> timotimo: Mhm..... you wanna spec that out for me? 

[18:21] <timotimo> nope, gotta run! lol

[18:21] *** lucasb joined
[18:21] <Xliff> Hahaha!

[18:22] <Xliff> It's funny. Whenever I use the word "spec", timotimo finds somewhere else to go. :D

[18:22] *** zakharyas joined
[18:23] *** sauvin left
[18:24] *** netrino_ joined
[18:27] *** netrino left
[18:31] *** thundergnat joined
[18:32] *** ravenous_ joined
[18:32] <thundergnat> Xliff: L-systems and Hilbert curves (if you weren't already aware) http://rosettacode.org/wiki/Hilbert_curve#Perl_6

[18:37] <tony-o> AlexDaniel: any reason that thread (renaming) is locked for me?

[18:38] <AlexDaniel> tony-o: it shouldn't be, but unfortunately there's no fine-grained control over this stuff on github. Why it was locked in general: https://github.com/perl6/problem-solving/issues/81#issuecomment-522000319

[18:39] <AlexDaniel> tony-o: let me try something

[18:40] *** domidumont left
[18:42] *** kerframil joined
[18:43] *** wildtrees joined
[18:44] <AlexDaniel> tony-o: what about now?

[18:44] *** domidumont joined
[18:47] *** domidumont left
[18:52] <discord6> <Aearnus> SmokeMachine: I thought Red wasn't functional yet?

[18:55] <vrurg> Aearnus: Red is pretty much functional already.

[18:55] <vrurg> I used it in a local project.

[18:57] *** sena_kun left
[18:57] <discord6> <Aearnus> nice! I'll check it out

[18:58] *** zakharyas left
[18:59] *** jaldhar_ left
[18:59] *** jaldhar_ joined
[19:01] *** jaldhar_ left
[19:02] *** jaldhar_ joined
[19:02] <vrurg> What'd be the best way to compile and test a QAST tree in a script? 

[19:02] <MasterDuke> vrurg: i think zoffix++ has a module to make that easy

[19:03] *** jaldhar_ left
[19:04] <vrurg> MasterDuke: modules.perl6.org finds nothing. :(

[19:04] *** jaldhar_ joined
[19:04] <vrurg> There is a visualizer, but that's all.

[19:04] *** Black_Ribbon joined
[19:05] <MasterDuke> AlexDaniel, timotimo: ^^^ am i imagining something? what am i thinking of?

[19:07] <MasterDuke> i think it was moved to some perl6 git organization/repo

[19:08] <timotimo> zoffix made a little script that turns a qast tree into html

[19:08] <timotimo> with collapsible/expandable lines

[19:09] <vrurg> MasterDuke: A lot was moved, yes. But search for 'QAST' give only 'q' visualizer again

[19:09] <timotimo> and automatically de-emphasizes things that are not important

[19:09] <timotimo> oh, you want to compile a qast

[19:09] <timotimo> yeah, zoffix made an irc bot for that

[19:09] <timotimo> it accepts a shorthand for qast creating code

[19:09] <vrurg> I guess HLL::Backend::Moar.mast is the thing, I guess.

[19:10] *** grayrider joined
[19:27] *** aborazmeh left
[19:33] *** grayrider left
[19:36] *** rindolf left
[19:42] *** Ven`` joined
[19:46] <kawaii> I miss Zoffix :(

[19:47] *** adu joined
[19:52] *** rindolf joined
[19:54] *** kerframil left
[19:55] *** pmurias joined
[19:55] *** mowcat left
[19:56] *** pamplemousse left
[20:00] <pmurias> In regards to the rename what's interesting is how will Raku be presented/marketed to people following the rename

[20:07] *** pamplemousse joined
[20:10] *** pmurias left
[20:11] *** pmurias joined
[20:15] *** harmil left
[20:17] <lichtkind> kawaii: is zoffix gone?

[20:17] <kawaii> lichtkind: iirc he had some issues with the community

[20:17] <kawaii> but I don't know much about it

[20:20] *** |Sno| joined
[20:21] *** jaldhar_ left
[20:21] *** jaldhar_ joined
[20:23] <lichtkind> kawaii: there are several people i miss especially the who was around during exegesis times

[20:23] *** [Sno] left
[20:23] *** jaldhar_ left
[20:24] *** jaldhar_ joined
[20:26] *** pamplemousse left
[20:31] *** mensvaga left
[20:32] *** pamplemousse joined
[20:35] *** jaldhar_ left
[20:35] <discord6> <Aearnus> I'm really hoping for something more like a playful minimalist design. Even though that's a little contrary to what Larry Wall wanted.

[20:36] *** jaldhar_ joined
[20:36] <discord6> <Aearnus> I really like how cro is branded in that regard

[20:37] *** jaldhar_ left
[20:37] *** jaldhar_ joined
[20:46] *** ravenous_ left
[20:48] <tony-o> AlexDaniel: works good now ty

[20:50] <lichtkind> what did you mean with rebrand?

[21:00] *** nepugia joined
[21:01] *** nepugia left
[21:04] *** harmil joined
[21:09] *** Cabanossi left
[21:12] *** jaldhar_ left
[21:12] *** jaldhar_ joined
[21:22] *** Cabanossi joined
[21:25] *** epony left
[21:36] *** cpan-p6 left
[21:37] <gdonald> issue 81 is a long read.. and I have yet to run into anything like a poll or survey. it's like some kind of practical extraction and reporting language is needed to sum it all up.

[21:37] *** cpan-p6 joined
[21:37] *** cpan-p6 left
[21:37] *** cpan-p6 joined
[21:37] <cpan-p6> New module released to CPAN! Tomty (0.0.1) by 03MELEZHIK

[21:39] <AlexDaniel> gdonald: the process was summarized in one of the first comments

[21:39] <AlexDaniel> gdonald: here: https://github.com/perl6/problem-solving/issues/81#issuecomment-519386472

[21:40] <AlexDaniel> gdonald: there's no voting and it's meant to be this way

[21:42] <AlexDaniel> gdonald: then, jnthn said that a PR should be submitted with more details: https://github.com/perl6/problem-solving/issues/81#issuecomment-520591781

[21:42] <AlexDaniel> gdonald: so that is currently in the works

[21:43] <AlexDaniel> gdonald: once it is submitted, these people will need to approve it (or request changes): https://github.com/perl6/problem-solving#reviewers

[21:44] <AlexDaniel> in fact, we'll probably have some discussion about required changes first, and a bit later we'll get to approving stuff

[21:44] <gdonald> I see. Thanks.

[21:46] <lucasb> lol "Camila, or whatever they are calling it these days"

[21:51] *** Ven`` left
[21:52] <gdonald> is 'Rakuist' 3 syllables or 2?

[21:53] <gdonald> I kinda like how `#!raku` looks in my editor.

[21:57] <ecocode> If anything, I'd say I kinda feel sorry for the community

[22:08] <Xliff> m: say (1 + 1i).^name.say

[22:08] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Complex␤True␤»

[22:09] <kawaii> I feel like these kinds of debates detract from valuable technical discussion about the language

[22:10] <Xliff> kawaii++ # This stuff is mostly political.

[22:10] <Xliff> vrurg: Was a MoarVM ticket filed for #3075? If not, I should go file one.

[22:11] <vrurg> Xliff: No, I didn't file it.

[22:12] <AlexDaniel> ecocode: sorry about what?

[22:12] <AlexDaniel> ecocode: we now have a framework for working on such issues, and it looks like we're going to resolve this one for good this time

[22:12] <Xliff> vrurg: OK. I will. Thanks!

[22:13] <AlexDaniel> ecocode: I don't see anything negative in the situation, quite the opposite actually. Things are looking pretty great right now

[22:13] <Xliff> AlexDaniel: I hope they continue to be so.

[22:17] <ecocode> AlexDaniel: Yeah, it is a weird feeling, but not necessarily a negative one.  Just that I have seen so many people hurt and get hurted over the last years.

[22:31] *** jaldhar_ left
[22:32] *** jaldhar_ joined
[22:35] *** jaldhar_ left
[22:36] *** jaldhar_ joined
[22:43] *** jaldhar_ left
[22:44] *** jaldhar_ joined
[22:47] *** MasterDuke left
[22:50] *** rindolf left
[22:57] <Geth> ¦ whateverable: ed910fa418 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[22:57] <Geth> ¦ whateverable: Ignore Guests completely

[22:57] <Geth> ¦ whateverable: 

[22:57] <Geth> ¦ whateverable: My understanding is that the numbers are changing all the time, so

[22:57] <Geth> ¦ whateverable: it's not useful for both `.seen` and `.tell`.

[22:57] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/ed910fa418

[22:57] *** harmil left
[23:00] <john_parr> I am trying to use gather/take with a channel. Why does the following code simply print a single ‘3’? I would expect a continuous stream of”3\n4”.

[23:00] <john_parr> https://pastebin.com/pQCxtDUi

[23:00] <timotimo> gather itself isn't a looping construct

[23:01] <timotimo> so your code ends up just polling, getting the first value, then finishing sub a

[23:01] <timotimo> rather

[23:01] <timotimo> finishing the gather block

[23:02] <AlexDaniel> john_parr: it looks like you want react/whenever

[23:02] *** pamplemousse left
[23:03] <john_parr> AlexDaniel: ok, I can try that. I suppose I may have misunderstood the flow control mechanism created by gather/take …

[23:04] <tobs> `gather loop { … }` is a gathering loop construct :)

[23:04] <tobs> if you truly want it to loop ad infinitum

[23:04] <AlexDaniel> that'd actually work, I guess?

[23:05] <john_parr> tobs: ok, I may try that first. 

[23:05] *** Guest93 left
[23:05] <AlexDaniel> evalable6: https://gist.github.com/AlexDaniel/f21b0161dfb205224bff45234ca374e9

[23:05] <evalable6> AlexDaniel, rakudo-moar 2a5b642de: OUTPUT: «(signal SIGHUP) 3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤…»

[23:05] <john_parr> tobs: ok, perfect! I just made that small change. 

[23:06] <AlexDaniel> john_parr: not so quick… what are you trying to do?

[23:07] <john_parr> this will get me the continous stream of 3s and 4s https://pastebin.com/wrcwJGSw

[23:07] *** pamplemousse joined
[23:09] <john_parr> AlexDaniel: I am trying to create what might be called an infinite generator.

[23:09] <evalable6> AlexDaniel, Full output: https://gist.github.com/c598d15fb8146ea72fb64dfa59d97d5d

[23:09] <AlexDaniel> john_parr: so why not use sequence operator?

[23:09] <tobs> john_parr: unless this is just an exercise, think about AlexDaniel's question. Perl 6 has very nice structured ways to do concurrency. A busy gather loop is closer to a goto

[23:10] <tobs> (too late)

[23:11] <AlexDaniel> m: say (3, { $_ == 3 ?? 4 !! 3 }…∞)[^20]

[23:11] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4)␤»

[23:11] <john_parr> hmmm, I really didn’t know about sequence operators I’ll see if they make sense for what I am really trying to do.

[23:11] <AlexDaniel> m: say (3, { $_ == 3 ?? 4 !! 3 }…∞)

[23:11] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(...)␤»

[23:11] *** pamplemousse left
[23:12] <AlexDaniel> m: say ({3 + $++ % 2} … ∞)[^20]

[23:12] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4)␤»

[23:16] *** netrino_ left
[23:27] <Geth> ¦ whateverable: eda26f489e | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6

[23:27] <Geth> ¦ whateverable: Remove underscores too

[23:27] <Geth> ¦ whateverable: 

[23:27] <Geth> ¦ whateverable: Judging by the list of seen nicknames, this seems to be important.

[23:27] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/eda26f489e

[23:27] *** netrino joined
[23:27] <timotimo> m: .say for flat |(3, 4) xx *

[23:31] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(timeout)3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3␤4␤3…»

[23:32] <timotimo> impressive timeout

[23:34] *** uzl joined
[23:35] <uzl> Redispatch may be required to call a block that is not the current scope what provides nextsame and friends with the problem to referring to the wrong scope. Use nextcallee to capture the right candidate and call it at the desired time.

[23:36] <uzl> How could the first sentence be reworded? It's from https://docs.perl6.org/language/functions#sub_nextcallee

[23:53] *** jaldhar_ left
[23:53] *** jaldhar_ joined
[23:56] *** wildtrees left
