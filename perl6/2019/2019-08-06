[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:09] *** pamplemousse left
[00:11] *** vike joined
[00:12] *** pamplemousse joined
[00:15] *** lucasb left
[00:20] *** [particle] joined
[00:22] *** [particle]1 left
[00:23] *** pilne joined
[00:30] *** xi| joined
[00:31] *** pamplemousse left
[00:31] *** xi- left
[00:32] *** pamplemousse joined
[00:33] *** empee0 left
[00:45] *** adu joined
[00:46] *** pamplemousse left
[00:49] <pilne> i am getting quite impatient to see if the rakudostar installer gets updated for either of the big .07 rakudo upgrades, will i end up regretting installing 2019.3?

[00:50] <pilne> (windows version)

[00:57] *** aborazmeh joined
[00:57] *** aborazmeh left
[00:57] *** aborazmeh joined
[01:04] <timotimo> i don't see a reason to regret the installation

[01:13] <pilne> and when a new one comes out, it's as easy as an uninstall then fresh? anything to keep note of to backup before?

[01:15] <timotimo> hm, i don't know where on windows installed modules will be put; but you can get output for that with this code:

[01:15] <timotimo> m: .say for $*REPO.repo-chain

[01:15] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «inst#/home/camelia/.perl6␤inst#/home/camelia/rakudo-m-inst-1/share/perl6/site␤inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor␤inst#/home/camelia/rakudo-m-inst-1/share/perl6/core␤ap#␤nqp#␤perl5#␤»

[01:16] <timotimo> that's perhaps something to keep around, even though updating rakudo will invalidate the precompilation results and we don't actually have something to delete precomp stuff i don't think

[01:40] *** irced joined
[01:40] <pilne> that's fine, i really just need a list of what i have, not the actual code (i'll have my own code setup locally, should probably look into a git for windoze solution)

[01:41] <pilne> and will i be missing out using vscode over atom?

[01:44] <pilne> something tells me i'll go to comma soon™ but not quite ready for something as heavy as an intellij inspired solution quite yet (as i've never gotten along with them in general in the past).

[01:45] *** ravenousmoose_ left
[01:45] *** ravenousmoose_ joined
[01:50] <irced> anyone know of a perl6 direct or indirect way to change an environment variable so that it persists after the script ends? (specifically in BASH)

[01:51] *** Voldenet left
[01:55] *** Kaiepi left
[01:56] *** Voldenet joined
[01:56] *** Voldenet left
[01:56] *** Voldenet joined
[02:01] *** Manifest0 left
[02:01] *** Manifest0 joined
[02:02] <Elronnd> irced: no, you have to set it from within bash

[02:03] <Elronnd> (I mean, I could imagine a super convoluted situation where you have a perl6 instance that spawns a bash, and opens up a socket so child scripts can ask it to change env vars.  But that's really not worth it.)

[02:03] <irced> Elronnd: cool. i figured it would otherwise require low level maybe native call hacks or like what you said.

[02:04] <irced> Elronnd: thanks for your input

[02:04] <Elronnd> in general, if you are a script being controlled by someone else, you cannot change anything about them

[02:04] <Xliff> m: my $S = Supplier.new; my $s = $S.Supply; $S.emit(1); $s.tap({ say "Hi!" }); sleep 2;

[02:04] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[02:04] <Xliff> m: my $S = Supplier.new; my $s = $S.Supply; $S.emit(1); $s.tap(-> { say "Hi!" }); sleep 2;

[02:04] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[02:05] <Xliff> m: my $S = Supplier.new; my $s = $S.Supply; $S.emit(1); $s.tap({ say "Hi!" }); sleep 5;

[02:05] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[02:05] <Xliff> m: my $S = Supplier.new; my $s = $S.Supply; $S.emit(1) for ^4; $s.tap({ say "Hi!" }); sleep 5;

[02:05] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[02:06] <timotimo> ^- wants Supplier::Preserving

[02:06] <Xliff> Is that the only way to make it work?

[02:06] <Xliff> m: my $S = Supplier::Preserving.new; my $s = $S.Supply; $S.emit(1) for ^4; $s.tap({ say "Hi!" }); sleep 5;

[02:06] <timotimo> it's literally the raison dêtre for that class

[02:06] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hi!␤Hi!␤Hi!␤Hi!␤»

[02:06] <Xliff> m: my $S = Supplier::Preserving.new; my $s = $S.Supply; $S.emit(1) for ^4; $s.stable(0.5).tap({ say "Hi!" }); sleep 5;

[02:06] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hi!␤»

[02:07] <Xliff> I'm implementing my events in GTKPlus using just a supplier tho.

[02:08] <Xliff> Should those be ::Preserving now?

[02:08] <irced> sacré bleu!

[02:08] <timotimo> not necessarily

[02:08] * irced just wanted to show off unicode accents.

[02:08] <timotimo> could also have supply blocks, such that they set up the connections at the gtk-side of things when an actual tap happens

[02:08] <Xliff> m: use v6.c;my $S = Supplier.new; my $s = $S.Supply; $S.emit(1) for ^4; $s.tap({ say "Hi!" }); sleep 5;

[02:08] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[02:08] <timotimo> then it'll actually create one connection for every tap that exists

[02:08] <Xliff> Well fahrfignugen!

[02:08] <timotimo> unless you return the result of .share on the Supply

[02:09] <timotimo> good night!

[02:09] <Xliff> timotimo: I may need you to look at event code, then!

[02:10] <Xliff> timotimo: I will lasso you, if I have to pardnah!

[02:10] <timotimo> nah

[02:10] <timotimo> :

[02:10] <timotimo> :P

[02:11] <Xliff> yah

[02:11] <Xliff> :p

[02:11] <timotimo> i believe in the you that believes in yourself

[02:11] *** Cabanossi left
[02:13] <Xliff> i believe in my lasso.

[02:14] <Xliff> I am about to corral m'self a bed.

[02:14] <Xliff> m: use v6.c;my $S = Supplier.new; my $s = $S.Supply; $s.stable(0.5).tap({ say "Hi!" });  $S.emit(1) for ^4; sleep 2

[02:14] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hi!␤»

[02:16] <Xliff> m: my &a = sub { say "aa" }; &a;

[02:16] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «WARNINGS for <tmp>:␤Useless use of &a in sink context (line 1)␤»

[02:16] <Xliff> m: my &a = sub { say "aa" }; &a();

[02:16] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «aa␤»

[02:17] *** Cabanoss- joined
[02:18] *** uzl joined
[02:20] *** Cabanoss- is now known as Cabanossi

[02:23] *** aborazmeh left
[02:52] *** Voldenet left
[02:57] *** Voldenet joined
[02:57] *** Voldenet left
[02:57] *** Voldenet joined
[03:07] *** uzl left
[03:31] *** Kaiepi joined
[03:31] <Kaiepi> how do parametric roles know how many types they can be parameterized with?

[03:41] <irced> m: open "testfile", :w;

[03:41] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Failed to open file /home/camelia/testfile: Permission denied␤  in block <unit> at <tmp> line 1␤␤»

[03:46] <irced> in reflection, i suppose i could write a bash script to wrap and process return values or other magic to export to bash (utilizing exec most likely)

[04:02] <kentnl> I'm doing vendor stuff for moarvm, upgrading from moarvm 2019.07 to 2019.07.1 results in moarvm no-longer installing libmoar.so, is this the right place to hope for somebody to explain why? :)

[04:03] * kentnl couldn't spot anything in the commit diff that explained it

[04:03] *** [particle]1 joined
[04:04] <kentnl> the most likely candidate was https://github.com/MoarVM/MoarVM/commit/2501678a30b6cb79bebf4a68e1cc0553a04a6e11 , but it doesn't apply here, because we applied that patch on 2019.07 

[04:05] *** [particle] left
[04:07] <irced> kentnl: sit tight or perhaps ask again earlier next evening. i know there are some devs who can speak to the builds but maybe not this instant.

[04:07] <kentnl> it may actually be related to a similar problem where libmoar is installed to /lib64/ instead of /usr/lib64 

[04:08] *** [particle] joined
[04:08] * kentnl did change something in his tooling between these versions, I just didn't expect there to be a change that affected that

[04:08] *** [particle]1 left
[04:08] * kentnl will have to test that

[04:13] <kentnl> goddamn, it *is* something in tooling doing something funky with /lib64/ 

[04:13] *** [particle]1 joined
[04:15] *** [particle] left
[04:16] *** [particle] joined
[04:18] *** [particle]1 left
[04:26] <kentnl> nvm, it is 100% on our side, I get to blame somebody else for doing something wrong in the first place.

[04:26] <irced> kentnl: cool

[04:26] <irced> kentnl: and not so cool

[04:26] <kentnl> 90% of the time, you don't realise the real problem until you ask somebody about what you think the problem is :(

[04:26] <irced> kentnl: cool

[04:31] *** cpan-p6 left
[04:31] *** cpan-p6 joined
[04:31] *** cpan-p6 left
[04:31] *** cpan-p6 joined
[04:41] *** molaf joined
[04:46] <Geth> ¦ doc/master: 6 commits pushed by threadless-screw++, (Juan Julián Merelo Guervós)++

[04:46] <Geth> ¦ doc/master: d402e74319 | Rewrite of regex interpolation section

[04:46] <Geth> ¦ doc/master: aa3fe263fd | Some amendments

[04:46] <Geth> ¦ doc/master: 553d4bc6f7 | Further iteration with corrections and additions

[04:46] <Geth> ¦ doc/master: 424e055cd2 | Further revision; clarification of cascading interpolation

[04:46] <Geth> ¦ doc/master: 856e194c91 | Minor amendments

[04:46] <Geth> ¦ doc/master: 55b8c01e66 | Merge pull request #2927 from threadless-screw/regexes

[04:46] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/67aefcde9305...55b8c01e66d9

[04:49] *** curan joined
[05:08] *** Woodi joined
[05:11] *** molaf left
[05:54] *** robertle left
[05:57] *** sena_kun joined
[05:58] *** sena_kun left
[06:00] *** reportable6 left
[06:00] *** quester joined
[06:01] *** reportable6 joined
[06:19] *** jaldhar joined
[06:22] *** jaldhar left
[06:22] *** jaldhar joined
[06:25] *** jaldhar left
[06:25] *** jaldhar_ joined
[06:26] *** jaldhar_ left
[06:27] *** jaldhar_ joined
[06:28] *** jaldhar_ left
[06:28] *** jaldhar_ joined
[06:28] *** rindolf joined
[06:31] *** jaldhar_ left
[06:31] *** jaldhar joined
[06:32] *** jaldhar left
[06:33] *** jaldhar joined
[06:34] *** jaldhar left
[06:34] *** jaldhar joined
[06:38] *** jaldhar left
[06:38] *** jaldhar joined
[06:42] *** jaldhar left
[06:42] *** jaldhar joined
[06:50] *** jaldhar left
[06:50] *** jaldhar joined
[06:52] *** jaldhar left
[06:52] *** jaldhar joined
[06:54] *** jaldhar left
[06:54] *** jaldhar joined
[06:58] *** jaldhar left
[06:58] *** jaldhar joined
[07:00] *** jaldhar left
[07:00] *** jaldhar joined
[07:01] *** sena_kun joined
[07:01] *** sena_kun left
[07:02] *** jaldhar left
[07:02] *** jaldhar joined
[07:06] *** [Sno] left
[07:08] *** jaldhar left
[07:08] *** jaldhar joined
[07:10] *** jaldhar left
[07:10] *** jaldhar joined
[07:15] *** irced left
[07:18] *** jaldhar left
[07:18] *** jaldhar joined
[07:24] *** jaldhar left
[07:24] *** jaldhar joined
[07:28] *** jaldhar left
[07:28] *** jaldhar joined
[07:30] *** marcel_ joined
[07:30] *** jaldhar left
[07:30] *** jaldhar joined
[07:32] *** jaldhar left
[07:32] *** lizmat joined
[07:32] *** jaldhar joined
[07:34] *** jaldhar left
[07:34] *** jaldhar joined
[07:38] *** jaldhar left
[07:38] *** jaldhar joined
[07:40] *** jaldhar left
[07:40] *** jaldhar joined
[07:41] *** quester left
[07:42] *** sauvin joined
[07:42] *** jaldhar left
[07:42] *** jaldhar joined
[07:43] *** [Sno] joined
[07:44] *** jaldhar left
[07:44] *** jaldhar joined
[07:46] *** jaldhar left
[07:46] *** jaldhar joined
[07:48] *** jaldhar left
[07:48] *** jaldhar joined
[07:49] *** zakharyas joined
[07:50] *** jaldhar left
[07:50] *** jaldhar joined
[07:52] *** DarthGandalf left
[07:52] *** jaldhar left
[07:52] *** jaldhar joined
[07:54] *** jaldhar left
[07:54] *** jaldhar joined
[07:56] *** sauvin left
[07:56] *** sauvin_ joined
[08:00] *** jaldhar left
[08:00] *** jaldhar joined
[08:01] *** __jrjsmrtn__ joined
[08:02] *** lizmat left
[08:02] *** jaldhar left
[08:02] *** jaldhar joined
[08:03] *** lizmat joined
[08:04] *** jaldhar left
[08:04] *** jaldhar joined
[08:08] *** jaldhar left
[08:08] *** jaldhar joined
[08:10] *** DarthGandalf joined
[08:10] *** jaldhar left
[08:10] *** jaldhar joined
[08:12] *** jaldhar left
[08:12] *** jaldhar joined
[08:14] *** lizmat left
[08:19] *** lizmat joined
[08:20] *** jaldhar left
[08:20] *** jaldhar joined
[08:22] *** dolmen joined
[08:22] *** jaldhar left
[08:22] *** jaldhar joined
[08:24] *** [particle]1 joined
[08:27] *** [particle] left
[08:28] *** lizmat left
[08:32] *** jaldhar left
[08:32] *** jaldhar joined
[08:34] *** jaldhar left
[08:34] *** jaldhar joined
[08:36] *** jaldhar left
[08:36] *** jaldhar joined
[08:38] *** jaldhar left
[08:38] *** jaldhar joined
[08:42] *** chloekek joined
[08:50] *** lizmat joined
[08:51] *** ravenousmoose_ left
[08:52] *** ravenousmoose_ joined
[08:54] *** jaldhar left
[08:54] *** jaldhar joined
[09:00] *** jaldhar left
[09:00] *** jaldhar joined
[09:04] *** pecastro joined
[09:08] *** jaldhar left
[09:08] *** jaldhar joined
[09:10] *** jaldhar left
[09:10] *** jaldhar joined
[09:12] *** jaldhar left
[09:12] *** jaldhar joined
[09:12] *** lizmat left
[09:13] *** lizmat joined
[09:15] *** noisegul joined
[09:17] *** Black_Ribbon left
[09:24] *** pat_js joined
[09:28] *** lizmat left
[09:30] *** chloekek left
[09:31] *** ufobat joined
[09:32] *** jaldhar left
[09:32] *** jaldhar joined
[09:38] *** jaldhar left
[09:38] *** jaldhar joined
[09:44] *** jaldhar left
[09:44] *** jaldhar joined
[09:48] *** jaldhar left
[09:48] *** jaldhar joined
[09:52] *** jaldhar left
[09:52] *** jaldhar joined
[10:04] *** jaldhar left
[10:04] *** jaldhar joined
[10:09] *** pat_js left
[10:11] *** marcel_ left
[10:15] *** pilne left
[10:24] *** jaldhar left
[10:24] *** jaldhar joined
[10:25] *** pat_js joined
[10:26] *** jaldhar left
[10:26] *** jaldhar joined
[10:28] *** jaldhar left
[10:28] *** jaldhar joined
[10:33] *** marcel_ joined
[10:40] *** jaldhar left
[10:40] *** jaldhar joined
[10:44] *** jaldhar left
[10:44] *** jaldhar joined
[10:48] *** jaldhar left
[10:48] *** jaldhar joined
[10:56] *** marcel_ left
[11:00] *** jaldhar left
[11:00] *** jaldhar joined
[11:03] *** sena_kun joined
[11:04] *** jaldhar_ joined
[11:06] *** jaldhar left
[11:08] *** jaldhar_ left
[11:08] *** jaldhar_ joined
[11:11] *** Cabanossi left
[11:14] *** jaldhar_ left
[11:14] *** jaldhar_ joined
[11:16] *** jaldhar_ left
[11:16] *** jaldhar_ joined
[11:18] *** jaldhar_ left
[11:18] *** jaldhar_ joined
[11:20] *** jaldhar_ left
[11:20] *** jaldhar_ joined
[11:22] *** jaldhar_ left
[11:22] *** jaldhar_ joined
[11:25] *** zakharyas left
[11:26] *** Cabanossi joined
[11:30] *** jaldhar_ left
[11:30] *** jaldhar_ joined
[11:32] *** jaldhar_ left
[11:32] *** jaldhar_ joined
[11:33] *** aborazmeh joined
[11:33] *** aborazmeh left
[11:33] *** aborazmeh joined
[11:40] *** jaldhar_ left
[11:40] *** jaldhar_ joined
[11:44] *** jaldhar_ left
[11:44] *** jaldhar_ joined
[11:45] *** dolmen left
[11:48] *** jaldhar_ left
[11:48] *** jaldhar_ joined
[11:49] *** pat_js left
[11:50] *** jaldhar_ left
[11:50] *** jaldhar_ joined
[11:52] *** jaldhar_ left
[11:52] *** jaldhar_ joined
[11:56] *** marcel_ joined
[11:58] *** jaldhar_ left
[11:58] *** jaldhar_ joined
[12:00] *** reportable6 left
[12:00] *** jaldhar_ left
[12:00] *** jaldhar_ joined
[12:02] *** jaldhar_ left
[12:02] *** jaldhar_ joined
[12:05] *** reportable6 joined
[12:08] *** jaldhar_ left
[12:08] *** jaldhar_ joined
[12:14] *** chloekek joined
[12:14] *** jaldhar_ left
[12:14] *** jaldhar_ joined
[12:18] *** aborazmeh left
[12:18] *** jaldhar_ left
[12:18] *** jaldhar_ joined
[12:20] *** jaldhar_ left
[12:20] *** jaldhar_ joined
[12:22] *** dolmen joined
[12:22] *** jaldhar_ left
[12:22] *** jaldhar_ joined
[12:30] *** jaldhar_ left
[12:30] *** jaldhar_ joined
[12:40] *** xinming_ joined
[12:43] *** xinming left
[12:55] *** lucasb joined
[12:56] *** zakharyas joined
[12:57] *** pat_js joined
[13:02] *** pat_js left
[13:11] *** MilkmanDan left
[13:12] *** MilkmanDan joined
[13:14] *** curan left
[13:24] *** dolmen left
[13:24] *** pamplemousse joined
[13:25] *** dolmen joined
[13:52] *** nightfrog left
[14:05] *** molaf joined
[14:06] <chloekek> What's the difference between p6: and m:?

[14:07] *** mowcat joined
[14:07] <timotimo> nothing at the moment, i think

[14:07] *** mowcat left
[14:07] <timotimo> it used to run as many backends as we had

[14:08] *** mowcat joined
[14:10] <chloekek> p6: say $*PERL

[14:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Perl 6 (6.d)␤»

[14:10] <chloekek> m: say $*PERL

[14:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Perl 6 (6.d)␤»

[14:10] <chloekek> p6: say $*VM

[14:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «moar (2019.07.12.gab.7.bac.5.ad)␤»

[14:10] <chloekek> m: say $*VM

[14:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «moar (2019.07.12.gab.7.bac.5.ad)␤»

[14:13] <moritz> m: say $*PERL.version

[14:13] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «v6.d␤»

[14:13] <moritz> m: say $*PERL.version.^name

[14:13] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Version␤»

[14:21] *** pat_js joined
[14:31] <chloekek> p6: say $*PERL.perl

[14:31] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Perl.new(compiler => Compiler.new(id => "296F76A8515BD1E6C6059FD3644852E8D6649EAC", release => "", codename => "", name => "rakudo", auth => "The Perl Foundation", version => v2019.07.69.gecf.2.b.1.e.4.f, signature => Blob, desc => Str), name => "Perl…»

[14:34] <timotimo> j: say "hi"

[14:34] <timotimo> jvm: say "hi"

[14:34] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «␤(timeout)␤»

[14:53] <chloekek> jvm: say "hi"

[14:53] <chloekek> js: say "hi"

[14:53] <chloekek> Amazing.

[15:01] *** __none__ joined
[15:02] <timotimo> j: say "hi"

[15:02] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «␤(timeout)␤»

[15:02] <timotimo> m: sub postcircumfix:<h m>($before, $inside) { say "$before hours and $inside minutes" }; 3h40m

[15:02] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3$before hours and $inside minutes" }; 3h7⏏0540m␤»

[15:03] <timotimo> m: sub postcircumfix:<ⓗ ⓜ>($before, $inside) { say "$before hours and $inside minutes" }; 3ⓗ40ⓜ

[15:03] *** sena_kun left
[15:03] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «3 hours and 40 minutes␤»

[15:03] <timotimo> a bit annoying to type tho

[15:03] <chloekek> That's so cool.

[15:04] <timotimo> i need some more compose rules :)

[15:04] <chloekek> p6: sub postcircumfix:<時 分>($before, $inside) { say "$before hours and $inside minutes" }; 8時42分

[15:05] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3$before hours and $inside minutes" }; 8時7⏏0542分␤»

[15:05] *** cpage joined
[15:06] *** vrurg left
[15:06] *** vrurg joined
[15:07] *** MilkmanDan left
[15:07] <chloekek> p6: sub infix:<🕒>($h, $m) { say "$h hours and $m minutes" }; 8 🕒 42

[15:07] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «8 hours and 42 minutes␤»

[15:08] <timotimo> nice

[15:08] *** __none__ left
[15:08] <timotimo> ⅋ whoa

[15:09] *** MilkmanDan joined
[15:09] *** reach_satori_ left
[15:09] <chloekek> That symbol is used in linear logic.

[15:09] *** reach_satori_ joined
[15:10] <chloekek> Looks like a Thai letter in Fixedsys Excelsior.

[15:14] <timotimo> my new xcompose isn't taking effect for some reason :|

[15:15] <AlexDaniel> chloekek: there's also perl6:

[15:15] <AlexDaniel> perl6: say 42

[15:15] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «42␤»

[15:15] <camelia> ..rakudo-jvm 08b449e1a: OUTPUT: «read: Connection reset by peer␤»

[15:15] <AlexDaniel> which works great, as you can see

[15:16] <AlexDaniel> timotimo: do you have access to camelia's machine?

[15:16] <AlexDaniel> timotimo: because it is stuck

[15:17] *** marcel_ left
[15:17] *** khisanth_ left
[15:17] <chloekek> timotimo: you have to restart programs that use it, usually.

[15:17] <chloekek> timotimo: XCompose is read by every program separately, not by a daemon.

[15:18] <chloekek> 2019 won't be the year of the Linux desktop.

[15:18] <AlexDaniel> well, last time I was changing my xcompose stuff I had to restart X, so…

[15:18] <AlexDaniel> I hope it is really better now and you *just* have to restart every program instead…

[15:19] <timotimo> i've restarted my terminal emulator, tried a different one, tried setting GTK_IM_MODULE to xim before starting gnome-terminal or xfce4-terminal, tried terminology

[15:19] <chloekek> gnome-terminal shares one process for all windows.

[15:19] <chloekek> You have to close all gnome-terminal terminals.

[15:19] <timotimo> i killed the gnome-terminal-server process after closing all terminals

[15:20] <AlexDaniel> or just restart… :)

[15:20] <chloekek> At home I use Sakura and it works if I start a new terminal after changing .XCompose.

[15:20] <timotimo> sakura is what, a distro or a terminal emulator?

[15:20] *** pat_js left
[15:22] *** pat_js joined
[15:23] <chloekek> Terminal emulator.

[15:24] <chloekek> Oh right, probably everything in your stack matters when it comes to X shenanigans. I also use NixOS GNU/Linux distro, i3 window manager, and SDDM display manager.

[15:24] <timotimo> haha, yeah, every little thing can upset the delicate balance that is input on X

[15:25] <chloekek> And I can't remember whether it was .xinit, .xinitrc, .xsession, or .xsessionrc that I put my startup commands into.

[15:25] <chloekek> Some of them only work on some machines.

[15:25] <timotimo> :D

[15:25] <chloekek> https://xkcd.com/963/

[15:26] <timotimo> whoa, compose + v + / gives √

[15:26] <timotimo> that rocks

[15:27] <chloekek> p6: sub infix:<√>($b, $x) { $x ** (1 / $b) }; say 3 √ 27

[15:27] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «3␤»

[15:28] <chloekek> My .XCompose is simple, it has [[ for ｢ and ]] for ｣ :)

[15:29] <timotimo> i want that

[15:30] *** khisanth_ joined
[15:34] *** marcel_ joined
[15:38] <timotimo> aaaaah

[15:38] <timotimo> in the xfce4 control center thingie for "Keyboard", i can type compose+*+i to get ι

[15:38] <timotimo> wait

[15:38] <timotimo> that also works in my terminal now

[15:38] <timotimo> maybe opening that tool was all i had to do to make things work, lol

[15:43] <timotimo> now i have ⊏⊐ on the combinations you just mentioned

[15:43] <timotimo> which i think is also kind of cool

[15:44] <timotimo> unicodable6: ⊏⊐

[15:44] <unicodable6> timotimo, U+228F SQUARE IMAGE OF [Sm] (⊏)

[15:44] <unicodable6> timotimo, U+2290 SQUARE ORIGINAL OF [Sm] (⊐)

[15:44] <timotimo> what :) :)

[15:44] <timotimo> i haven't a clue where that comes from

[15:44] <timotimo> but i like how in my current font it forms one closed shape

[15:44] *** antoniogamiz joined
[15:44] <timotimo> i also have ⬚ and ⌷

[15:45] <timotimo> unicodable6: ⬚⌷

[15:45] <unicodable6> timotimo, U+2B1A DOTTED SQUARE [So] (⬚)

[15:45] <unicodable6> timotimo, U+2337 APL FUNCTIONAL SYMBOL SQUISH QUAD [So] (⌷)

[15:45] <timotimo> squish quad!

[15:45] <timotimo> that is an amazing name

[15:45] <AlexDaniel> m: say Q⊏hello world⊐

[15:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «hello world␤»

[15:46] *** mcmillhj joined
[15:46] <timotimo> heck yeah

[15:46] <antoniogamiz> m: "/sth".split("/").elems

[15:46] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[15:46] <antoniogamiz> m: say "/sth".split("/").elems

[15:46] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «2␤»

[15:46] <AlexDaniel> timotimo: `compose s q` should also give √

[15:46] <antoniogamiz> how can I avoid that? I mean, get one element only

[15:46] <AlexDaniel> depending on your config

[15:46] <timotimo> yeah it does

[15:47] <timotimo> m: say "/sth".split("/", :skip-empty).elems

[15:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤»

[15:47] <timotimo> m: say "/sth".split("/", :skip-empty).perl

[15:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «("sth",).Seq␤»

[15:47] <antoniogamiz> oh nice option

[15:47] <antoniogamiz> thanks

[15:47] <AlexDaniel> timotimo: and if you're using that compose file from github, then `compose * something` is always some math stuff, like `compose * p` is π

[15:48] <AlexDaniel> hm, or maybe not always…

[15:49] <timotimo> did i paste which file i'm using?

[15:49] <AlexDaniel> not yet

[15:49] <timotimo> there's probably only the top result, haha

[15:49] <timotimo> ah, yes, what i originally wanted was an h and an m that won't confuse perl6's parser when attempted to be used as a postcircumfix

[15:50] <timotimo> m: sub postcircumfix:<ₕ ₘ>($h, $m) { say "$h hours, $m minutes" }; say 10ₕ3ₘ

[15:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3 { say "$h hours, $m minutes" }; say 10ₕ7⏏053ₘ␤»

[15:51] *** marcel_ left
[15:51] <timotimo> m: sub postcircumfix:<ḣ ṁ >($h, $m) { say "$h hours, $m minutes" }; say 10ḣ3ṁ

[15:51] <timotimo> none of those work

[15:51] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3 { say "$h hours, $m minutes" }; say 10ḣ7⏏053ṁ␤»

[15:51] <timotimo> unicodable6: ľ

[15:51] <unicodable6> timotimo, U+013E LATIN SMALL LETTER L WITH CARON [Ll] (ľ)

[15:51] <timotimo> that's beautiful, at least on my font

[15:53] <timotimo> hum. supposedly i should be able to type multikey ( 1 : 0 0 ) but after (1: it already stops the composition giving nothing

[15:54] <timotimo> ha! multi key + multi key + p + o + w 💥

[15:54] <timotimo> but it does seem like every sequence of three letters-or-similar ends the thing immediately

[15:54] *** chloekek left
[15:55] *** pat_js left
[15:55] <AlexDaniel> 🕐

[15:55] <AlexDaniel> timotimo: iirc I had the same issue, but it works now…

[15:55] <timotimo> so i just need to reboot? :P

[15:56] <AlexDaniel> maybe wait until your OS is updated…

[15:56] <El_Che> AlexDaniel: I see a rectangle

[15:56] <timotimo> oh, i can type ℃ which is multi-multi-degC

[15:56] <AlexDaniel> I'm on debian unstable

[15:56] <AlexDaniel> ℃ ℉

[15:56] <timotimo> ☖ ☗ shogi pieces! i don't play that, but it's nice to have

[15:56] *** pamplemousse left
[15:56] <AlexDaniel> yeah, and there are all the cards and all chess pieces…

[15:57] <timotimo> 🂡 and such

[15:57] *** Wahnberger joined
[15:57] <timotimo> the only thing you see, you know it's gonna be the 🂡, the 🂡

[15:57] <Wahnberger> hello Folks

[15:58] <timotimo> guten tag Herr Wahnberger 

[15:58] *** john_parr left
[15:58] <AlexDaniel> 🙋

[15:58] <Xliff> 3√27

[15:58] <timotimo> that was probably too formal

[15:59] <Xliff> Ooh! I have that too. I windows, no less!

[15:59] <timotimo> nice. with wincompose or out of the box for some reason?

[15:59] <Xliff> Wincompose

[15:59] <timotimo> Wahnberger: you have joined us in a strange moment where we all try out input methods for strange unicode symbols. care to join?

[15:59] <AlexDaniel> timotimo: speaking of which, `compose compose o/` and `compose compose \o/`

[16:00] <timotimo> that's emoji compose codes, yeah?

[16:00] <AlexDaniel> yeah, if you have them included

[16:00] <AlexDaniel> actually these may be in the main file…

[16:01] <AlexDaniel> hmm, nope, where are these coming from then…

[16:01] <Wahnberger> uhm..actually i need to figure out something else :(

[16:01] <AlexDaniel> Wahnberger: sure! Just ask

[16:01] <timotimo> that's not a problem, we can probably help!

[16:02] <Xliff> ⏹️

[16:02] <Xliff> LOL!

[16:02] <Xliff> Multi+multi+"stop button"

[16:02] <Wahnberger> I have build a litte site using Cro and a tiny session management using this: https://cro.services/docs/http-auth-and-sessions#Web_form_based_login 

[16:03] <Xliff> ¯\_(ツ)_/¯

[16:03] <Xliff> Hahaha!

[16:04] <AlexDaniel> Wahnberger: sounds great so far

[16:04] <Xliff> 💩

[16:04] <Wahnberger> all the stuff is working well - but - i want to route then to static pages (just html and JS) .. on those sites i need to know whos is the user but i cant get POST/GET infos by using JS .. anyone an idea how to deal with it?

[16:05] <Xliff> I can't get that to come out of wincompose, though.

[16:05] <Wahnberger> of course..thats not really a perl6 question :(

[16:05] <Wahnberger> not even really cro but i am not sure :D

[16:06] <Wahnberger> btw: I would pay 100 bucks and more for a really handy cro handbook :D

[16:08] *** uzl joined
[16:09] <uzl> m: class H { multi method greet('hello') { 'Hello!'.put }; multi method greet('hello', :$padded!) { '**Hello!**'.put }}; H.new.greet('hello'); H.new.greet('hello', :padded)

[16:09] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hello!␤Hello!␤»

[16:09] <uzl> m: class H { multi method greet('hello') { 'Hello!'.put }; multi method greet('hello', Bool :$padded!) { '**Hello!**'.put }}; H.new.greet('hello'); H.new.greet('hello', :padded)

[16:09] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hello!␤Hello!␤»

[16:10] <timotimo> uzl: need to put the padded one first

[16:10] <uzl> m: class H { multi method greet('hello') { 'Hello!'.put }; multi method greet('hello', Bool :$padded!) { '**Hello!**'.put }}; H.new.greet('hello'); H.new.greet(:padded, 'hello')

[16:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hello!␤Hello!␤»

[16:10] <timotimo> haha, no i mean the method in the class body :)

[16:11] <uzl> m: class H { multi method greet('hello') { 'Hello!'.put }; multi method greet(Bool :$padded!, 'hello') { '**Hello!**'.put }}; H.new.greet('hello'); H.new.greet('hello', :padded)

[16:11] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot put required parameter  after variadic parameters␤at <tmp>:1␤------> 3lti method greet(Bool :$padded!, 'hello'7⏏5) { '**Hello!**'.put }}; H.new.greet('he␤    expecting any of:␤     …»

[16:11] <timotimo> sorry, i meant the candidate with :$padded! has to come first

[16:11] *** cpan-p6 left
[16:11] *** cpan-p6 joined
[16:11] *** cpan-p6 left
[16:11] *** cpan-p6 joined
[16:12] <uzl> m: class H {  multi method greet('hello', Bool :$padded!) { '**Hello!**'.put }; multi method greet('hello') { 'Hello!'.put }}; H.new.greet('hello'); H.new.greet('hello', :padded)

[16:12] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Hello!␤**Hello!**␤»

[16:12] <timotimo> i could have explained that much more clearly the first time :S

[16:13] <uzl> timotimo: Thanks. I was at the brink of pulling out my hair.

[16:13] <uzl> No problem!

[16:13] <timotimo> named arguments only serve for tie-breaking, and since methods accept all nameds by default, both candidates still have the same priority, so which comes first in the source code decides which one wins

[16:13] <timotimo> or putting an "is default" to boost the priority

[16:14] <uzl> timotimo: I was just going to ask why so thanks for the explanation. 

[16:15] <timotimo> that smells like an analysis comma could do

[16:17] <uzl> Using Vim at the moment but that's totally something Comma users would benefit from :-)

[16:17] *** john_parr joined
[16:21] *** dolmen left
[16:22] *** Kaiepi left
[16:23] *** Kaiepi joined
[16:23] <AlexDaniel> Wahnberger: hmmm, so why can't you do it in cro?

[16:23] *** pamplemousse joined
[16:23] <AlexDaniel> Wahnberger: I mean if you just add some routes for static files in cro, wouldn't it just work?

[16:24] <timotimo> the JS in the static app would want to ask the backend if there's a logged-in user i guess?

[16:24] <timotimo> if you don't want to modify the file you're delivering to have the user info in it

[16:25] *** nepugia joined
[16:36] <Wahnberger> alex: you cannot route GET parameter to html/JS afaik

[16:36] <Wahnberger> i just found a workaround by using jquery

[16:37] <Wahnberger> timotimo: yes the static page need to verify the user at a backend (rest api)

[16:37] <timotimo> on the client-side you can look what the URL is that the user entered or navigated to

[16:38] <timotimo> that could have the user name the user tried to authenticate as

[16:38] <timotimo> of course then the user can just change the URL

[16:39] <Wahnberger> oh damn

[16:40] <Wahnberger> I need some holydays

[16:40] <Wahnberger> sorry for the noise :)

[16:40] <timotimo> NP :)

[16:47] <Wahnberger> I love the Cro libs..thats amazing stuff.. but the documentation is really hard to understand to perl6 beginners .. i would love to see a cro doc from brian de foy

[16:48] <timotimo> hm, yeah, "getting started with cro & perl6" could be a good format for something book-ish

[16:49] *** epony left
[16:52] *** Wahnberger left
[16:58] <MasterDuke> is there way to get comma not to complain about `nqp::*` calls?

[16:59] <El_Che> so, is someone setting an ad hoc stream from perlcon for the perl6 talks? :)

[17:00] <antoniogamiz> El_Che: I hope someone does

[17:00] <antoniogamiz> s/does/is

[17:01] *** Guest_26 joined
[17:01] *** Guest_26 left
[17:02] <MasterDuke> oh, and i don't remember if i've asked this before, but is there a way to point it at the rakudo source such that go to declaration of perl6 built-ins works?

[17:02] <AlexDaniel> El_Che: that's a great questionE

[17:02] <AlexDaniel> s/E//

[17:04] <El_Che> some people have crazy high volume in their packs

[17:04] <El_Che> being a member of the EU all the crazy roaming coast disappear

[17:04] <MasterDuke> i'm sorry to miss perlcon. i thought i might be able to make it, but hopefully next year will work out

[17:06] *** jaldhar_ left
[17:06] <AlexDaniel> El_Che: or if not the stream, what about the recordings…

[17:06] *** jaldhar_ joined
[17:07] <AlexDaniel> El_Che: I can bring some lightweight equipment with me but I have no idea what's the situation

[17:07] <El_Che> More honestly, by now I would prefer a smaller perl 6 conf. Loosing somewhat intereset in p5 (I still use it though).

[17:07] <AlexDaniel> El_Che: like, is there somebody doing the recordings officially?

[17:07] <El_Che> AlexDaniel: yes, I read somewhere (tweet) that the sessions will be recorded and uploaded later

[17:08] <El_Che> AlexDaniel: people from shadowcat always do their own recording as well

[17:08] <AlexDaniel> ok, cool then

[17:08] <El_Che> Check with tom bloor if he can upload the p6 somewhere :)

[17:08] *** jaldhar_ left
[17:08] *** jaldhar_ joined
[17:09] <AlexDaniel> ahh

[17:10] <Kaiepi> i asked this last night and didn't get an answer so

[17:10] <Kaiepi> how do parametric roles know how many generic types they were declared to use?

[17:11] <Kaiepi> in it's meta-class, i mean

[17:11] *** Cabanossi left
[17:12] <Kaiepi> well i can't say its meta-class since there are actually four, so i mean Metamodel::ParametricRoleHOW

[17:14] *** abc3354 joined
[17:16] <vrurg> Kaiepi: what do you mean by that?

[17:17] *** wahnberger joined
[17:17] *** abc3354 left
[17:17] <wahnberger> timotimo: do you have examples to read?

[17:17] <timotimo> i think the difference between a role like Positional (Positional[Int]) or Rational (Rational[Int, Int])?

[17:17] <timotimo> wahnberger: for what exactly?

[17:17] <Kaiepi> vrurg like, if you declare a role like `role Foo[::T, ::U]` how does it know it needs to be parameterized with two types?

[17:17] *** Cabanossi joined
[17:18] <vrurg> Kaiepi: it has an associated block which has it's signature which is role parameters.

[17:18] *** jaldhar_ left
[17:18] <wahnberger> timotimo: Cro documentation

[17:18] *** jaldhar_ joined
[17:19] <Kaiepi> hooooooo boy then what i want to do will be a bitch to write, probably

[17:19] <timotimo> besides the cro documentation i don't think i have anything

[17:19] <Kaiepi> unless you can use multiple dispatch with the block, but even then...

[17:20] <wahnberger> oh..i missread something :D

[17:20] *** jaldhar_ left
[17:20] *** jaldhar_ joined
[17:21] <vrurg> Kaiepi: look at parameterize* family of methods in Role HOWs. For example: my @result := $!candidate.HOW.body_block($!candidate)(|@pos_args, |%!named_args);

[17:22] <vrurg> Kaiepi: though I don't remember all the details for now. If I need anything – I pick up my walkingstick and go into the metamodel wilderness.

[17:22] <timotimo> Kaiepi: don't forget any ParametricRoleGroupHOW has .candidates

[17:22] *** jaldhar_ left
[17:22] *** jaldhar_ joined
[17:24] <timotimo> m: .perl.say given Rational.^candidates[0].^body_block

[17:24] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «multi sub (::$?CLASS ::::?CLASS Mu $, ::NuT Mu $ = Int, ::DeT Mu $ = { ... }) { #`(Sub|79396720) ... }␤»

[17:24] <wahnberger> ok, thx anyway for clearing my mind :)

[17:24] <timotimo> m: .perl.say given Rational.^candidates[0].^body_block.signature

[17:24] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «:(::$?CLASS ::::?CLASS Mu $, ::NuT Mu $ = Int, ::DeT Mu $ = { ... })␤»

[17:24] *** wahnberger left
[17:24] <timotimo> ::::?CLASS, eh? that's ridiculous :D

[17:25] *** antoniogamiz left
[17:25] <vrurg> timotimo: what does it mean anyway?

[17:25] <vrurg> If anything at all.

[17:25] <timotimo> one :: is for type capture, i assume

[17:25] <vrurg> Ah, perhaps. 

[17:26] <timotimo> m: method test(::$?CLASS ::::?CLASS Mu $) { }

[17:26] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use :: as a type name␤at <tmp>:1␤------> 3method test(::7⏏5$?CLASS ::::?CLASS Mu $) { }␤»

[17:27] <El_Che> ooh

[17:27] <El_Che> https://www.youtube.com/watch?v=QeE9nBnx8d0

[17:27] <Kaiepi> m: method test($?CLASS ::?CLASS Mu $) { }

[17:27] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5===␤In signature parameter $?CLASS, it is illegal to use the ? twigil␤at <tmp>:1␤------> 3method test($?CLASS7⏏5 ::?CLASS Mu $) { }␤Malformed parameter␤at <tmp>:1␤------> 3method test($?CLASS ::7⏏5?CLASS Mu $) { }…»

[17:27] <timotimo> lovely!

[17:28] <timotimo> may have to actually be put inside a class body

[17:28] <Kaiepi> m: class { method test($?CLASS ::?CLASS Mu $) { } }

[17:28] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5===␤In signature parameter $?CLASS, it is illegal to use the ? twigil␤at <tmp>:1␤------> 3class { method test($?CLASS7⏏5 ::?CLASS Mu $) { } }␤Malformed parameter␤at <tmp>:1␤------> 3class { method test($?CLASS ::7⏏…»

[17:28] <Kaiepi> m: class { method test(::$?CLASS ::?CLASS Mu $) { } }

[17:28] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use :: as a type name␤at <tmp>:1␤------> 3class { method test(::7⏏5$?CLASS ::?CLASS Mu $) { } }␤»

[17:28] <Kaiepi> hm

[17:29] <El_Che> https://www.youtube.com/user/ShadowcatSystems/videos?view=2&flow=grid

[17:29] <El_Che> there is a channel per room

[17:30] *** jaldhar_ left
[17:30] *** jaldhar_ joined
[17:30] <timotimo> i pray to The Noodly Appendages that the sound recording will be Very Good for this perlcon

[17:31] <El_Che> yeah, that seems to be always the problem

[17:31] <timotimo> in the cases where it isn't, the slides are unreadable on the video, or both problems happen at the same time

[17:32] *** jaldhar_ left
[17:32] *** jaldhar_ joined
[17:33] <El_Che> unreadable slide are less troublesome than bad sound

[17:33] <El_Che> sometimes I keep working on something else and just listen

[17:33] <El_Che> for somewhat interesting talks that don't require my full attention

[17:34] *** marcel_ joined
[17:34] *** epony joined
[17:34] *** jaldhar_ left
[17:34] *** jaldhar_ joined
[17:35] <timotimo> aye

[17:40] *** jaldhar_ left
[17:40] *** jaldhar_ joined
[17:48] *** zakharyas left
[17:52] *** pamplemousse left
[17:54] <El_Che> timotimo: https://twitter.com/shadow_dot_cat/status/1158797157333385216

[17:54] *** jaldhar_ left
[17:54] *** jaldhar_ joined
[17:56] <timotimo> that's very promising!

[17:56] <El_Che> a nice surprise, as it was supposed to be uploaded later

[17:58] *** jaldhar_ left
[17:58] *** jaldhar_ joined
[18:00] *** reportable6 left
[18:00] *** jaldhar_ left
[18:00] *** jaldhar_ joined
[18:02] *** jaldhar_ left
[18:02] *** jaldhar_ joined
[18:03] *** reportable6 joined
[18:03] *** ChanServ sets mode: +v reportable6

[18:04] *** jaldhar joined
[18:08] *** jaldhar left
[18:08] *** jaldhar_ left
[18:08] *** jaldhar joined
[18:10] *** jaldhar left
[18:10] *** jaldhar joined
[18:13] *** chloekek joined
[18:14] *** jaldhar left
[18:14] *** jaldhar joined
[18:20] *** jaldhar_ joined
[18:20] *** jaldhar left
[18:22] *** jaldhar_ left
[18:22] *** jaldhar_ joined
[18:23] <Xliff> m: say max(Nil, 6)

[18:23] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «6␤»

[18:24] *** jaldhar_ left
[18:24] *** jaldhar_ joined
[18:30] *** jaldhar_ left
[18:30] <chloekek> Till you can write comments in qqww{ … }

[18:30] <chloekek> p6: say qqww{ foo #`(bar) baz }

[18:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(foo baz)␤»

[18:30] *** jaldhar_ joined
[18:34] *** jaldhar_ left
[18:34] *** jaldhar_ joined
[18:42] *** jaldhar_ left
[18:42] *** jaldhar_ joined
[18:44] *** jaldhar_ left
[18:44] *** jaldhar_ joined
[18:45] *** Woodi left
[18:46] *** chloekek left
[18:50] *** jaldhar_ left
[18:50] *** jaldhar_ joined
[18:50] <timotimo> m: say "foobar\qqww[#`( oh another comment )]bazquux"

[18:51] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «foobarbazquux␤»

[18:51] <timotimo> ^ that's wild

[18:52] *** Kaiepi left
[18:54] *** jaldhar_ left
[18:54] *** jaldhar_ joined
[18:55] *** Kaiepi joined
[18:55] <Xliff> Can you do that with the angled constructor?>

[18:55] <Xliff> m: say <a [#`( this isn't here )] b c>

[18:55] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(a [#`( this isn't here )] b c)␤»

[18:55] <Xliff> :p

[18:56] <Xliff> m: say <a {#`( this isn't here )} b c>

[18:56] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(a {#`( this isn't here )} b c)␤»

[18:56] <Xliff> m: say <a {2 + 2} b c>

[18:56] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(a {2 + 2} b c)␤»

[18:56] <MasterDuke> in comma, is there a way to exclude a particular directory from attempted indexing?

[18:58] *** jaldhar_ left
[18:58] *** jaldhar_ joined
[19:00] <timotimo> MasterDuke: i think in any intellij you can set the type of a folder, among other things there's "source code"

[19:00] <timotimo> or maybe that's just intellij idea

[19:02] *** jaldhar_ left
[19:02] *** jaldhar_ joined
[19:04] *** mcmillhj left
[19:04] <veesh> eh, someone left docs.perl6.org in development mode

[19:04] <veesh> though it's cool that it's on mojolicious

[19:05] <veesh> nothing juicy there, but disconcerting

[19:10] *** sftp left
[19:13] *** chloekek joined
[19:15] *** ratagin joined
[19:17] *** pamplemousse joined
[19:17] *** dolmen joined
[19:18] *** jaldhar_ left
[19:46] <chloekek> p6: ||42

[19:46] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[19:47] <chloekek> The precedence table on https://docs.perl6.org/language/operators mentions a unary || operator, but I can't find it.

[19:53] <Kaiepi> m: say CORE::{'&prefix:<||>'}:exists

[19:53] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «False␤»

[19:53] <Kaiepi> m: say CORE::{'&postfix:<||>'}:exists

[19:53] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «False␤»

[19:54] <Kaiepi> maybe it's in the grammar

[19:54] <timotimo> m: say(||1 ||2 ||3)

[19:54] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(1)␤»

[19:54] <timotimo> m: say(1 ||2 ||3)

[19:54] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤»

[19:54] <timotimo> it's a flattening operator i think?

[19:54] <timotimo> m: say &prefix:<||>

[19:54] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    prefix:<||> used at line 1. Did you mean 'prefix:<|>', 'prefix:<~^>', 'prefix:<!>', 'prefix:<->'?␤␤»

[19:57] *** mcmillhj joined
[19:57] *** sftp joined
[20:05] *** MilkmanDan left
[20:07] *** MilkmanDan joined
[20:09] *** [Sno] left
[20:19] *** mcmillhj left
[20:34] *** pilne joined
[20:36] *** empee0 joined
[20:42] *** noisegul left
[20:44] <chloekek> p6: say (|| 1, (2, 3), 4).perl

[20:44] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(1, (2, 3), 4)␤»

[20:47] *** mowcat left
[20:48] *** marcel_ left
[20:48] <Kaiepi> what's the difference between .^type_check and .^accepts_type?

[20:51] *** ufobat_ joined
[20:54] *** mowcat joined
[20:55] *** ufobat left
[20:55] *** chloekek left
[21:11] *** Cabanossi left
[21:13] *** pamplemousse left
[21:14] *** pamplemousse joined
[21:17] *** MasterDuke left
[21:21] *** Cabanossi joined
[21:24] *** lizmat joined
[21:28] *** pamplemousse left
[21:30] *** sauvin_ is now known as Sauvin

[21:33] *** ratagin left
[21:35] *** molaf left
[21:40] *** pecastro left
[21:43] *** dolmen left
[21:47] <Geth> ¦ doc/traps: 98f809b4b0 | threadless-screw++ | doc/Language/traps.pod6

[21:47] <Geth> ¦ doc/traps: Deletion of regex-interpolation trap section

[21:47] <Geth> ¦ doc/traps: review: https://github.com/perl6/doc/commit/98f809b4b0

[21:53] *** pamplemousse joined
[21:57] *** Aearnus joined
[21:58] <Aearnus> wanted to send this here too. it's a dice operator :D

[21:58] <Aearnus> p6: sub infix:<d>(Int $n, Int $max) { (^$max).pick xx $n }; say 4 d 20;

[21:58] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(15 7 18 16)␤»

[22:03] <AlexDaniel> veesh: file a bug report

[22:03] <AlexDaniel> p6: sub infix:<d>(Int $n, Int $max) { (^$max).pick($n) }; say 4 d 20;

[22:03] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(12 10 17 11)␤»

[22:03] <AlexDaniel> p6: sub infix:<d>(Int $n, Int $max) { (^$max).pick($n) }; say 4 d 20;

[22:03] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(8 14 6 16)␤»

[22:03] <AlexDaniel> e: sub infix:<d>(Int $n, Int $max) { (^$max).pick($n) }; say 4 d 20;

[22:03] <evalable6> AlexDaniel, rakudo-moar 74f2d3f46: OUTPUT: «(3 4 11 9)␤»

[22:03] <AlexDaniel> hmm, why is camelia so slow…

[22:04] <Aearnus> I noticed that too

[22:04] <Geth> ¦ doc: threadless-screw++ created pull request #2940: Deletion of regex-interpolation trap section

[22:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2940

[22:06] <AlexDaniel> e: sub infix:<d>(Int $n, Int $max) { (^$max).roll($n) }; say 4 d 20;

[22:06] <evalable6> AlexDaniel, rakudo-moar 74f2d3f46: OUTPUT: «(17 0 7 11)␤»

[22:06] <AlexDaniel> this is more correct, I guess

[22:08] *** dolmen joined
[22:10] *** Aearnus left
[22:14] *** mowcat left
[22:14] *** pamplemousse left
[22:34] <Xliff> m: say 1 / 2 * 8 

[22:34] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «4␤»

[22:41] *** GodsMadClown joined
[22:41] *** GodsMadClown left
[22:45] <Kaiepi> m: role Foo[::T, ::U] {}; say Foo[Int, Str].^body_block.signature

[22:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «No such method 'body_block' for invocant of type 'Perl6::Metamodel::CurriedRoleHOW'␤  in block <unit> at <tmp> line 1␤␤»

[22:45] <Kaiepi> m: role Foo[::T, ::U] {}; say Foo.^body_block.signature

[22:46] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «No such method 'body_block' for invocant of type 'Perl6::Metamodel::ParametricRoleGroupHOW'␤  in block <unit> at <tmp> line 1␤␤»

[22:46] <Kaiepi> m: role Foo[::T, ::U] {}.^body_block.signature

[22:46] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[22:46] <Kaiepi> m: say role Foo[::T, ::U] {}.^body_block.signature

[22:46] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(::$?CLASS ::::?CLASS Mu, ::T Mu, ::U Mu)␤»

[22:46] <Kaiepi> m: say role Foo[::T, ::U] {}.^body_block.signature.arity

[22:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «3␤»

[22:48] <Kaiepi> m: sub foo(::T $a --> T) { $a }; say foo 1

[22:48] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:48] <Kaiepi> m: sub foo(::T $a --> ::T) { $a }; say foo 1

[22:48] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Redeclaration of symbol 'T'␤at <tmp>:1␤------> 3sub foo(::T $a --> ::T7⏏5) { $a }; say foo 1␤»

[22:48] <Kaiepi> m: sub foo(::T $a --> T:D) { $a }; say foo 1

[22:48] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:49] <Kaiepi> m: sub foo(::T $a --> T) { T.new: $a }; say foo 1

[22:49] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:49] <Kaiepi> ?

[22:49] <Kaiepi> m: sub foo(::T $a) { say T; $a }; say foo 1

[22:49] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(Int)␤1␤»

[22:51] <Kaiepi> why doesn't `foo(::T $a --> T)` work? is it because T is still a generic when it type checks the return value or something?

[22:52] <timotimo> sounds like a bugge

[23:04] *** dolmen left
[23:13] *** rindolf left
[23:30] *** _jrjsmrtn joined
[23:31] *** uzl left
[23:31] *** __jrjsmrtn__ left
[23:31] *** _uzl joined
[23:31] *** nepugia left
[23:32] *** _uzl left
[23:36] *** [particle]1 left
[23:43] *** [particle] joined
[23:46] *** lucasb left
[23:50] <timotimo> m: https://gist.github.com/timo/47faa5c04b41c88a729aaa64fcc2aca8

[23:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «===SORRY!===␤Cannot bind to QAST::Var resolving to a lexicalref␤»

[23:50] <timotimo> committable6: releases https://gist.github.com/timo/47faa5c04b41c88a729aaa64fcc2aca8

[23:50] <committable6> timotimo, https://gist.github.com/b7d1583e780a3bfab6a6190de45252eb

[23:50] <timotimo> damn it

[23:51] <timotimo> bisectable: GOOD=2019.07.1 https://gist.github.com/timo/47faa5c04b41c88a729aaa64fcc2aca8

[23:51] <bisectable6> timotimo, Bisecting by exit code (old=2019.07.1 new=74f2d3f). Old exit code: 0

[23:51] <bisectable6> timotimo, bisect log: https://gist.github.com/96d8439fed2d4d209e37724697933dc3

[23:51] <bisectable6> timotimo, (2019-07-08) https://github.com/rakudo/rakudo/commit/80bf3d003c1c464ac8663e86d9f8d93423e0a51e

[23:51] <timotimo> of course it was i who broketh it

[23:52] <timotimo> am i glad it isn't in a release

[23:52] *** empee0 left
[23:54] <timotimo> m: sub rot(int $x is rw, int $y is rw) { my $t = $y; $y = $x; $x = $t; }

[23:54] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «===SORRY!===␤Cannot bind to QAST::Var resolving to a lexicalref␤»

[23:55] <timotimo> m: sub rot(int $x is rw) { $x = $x; }

[23:55] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «===SORRY!===␤Cannot bind to QAST::Var resolving to a lexicalref␤»

