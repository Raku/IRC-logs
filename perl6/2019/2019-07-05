[00:01] <irced> jnthn: instead of Proc::Async.new I am pushing promises unto an array where each promise calls a subroutine that itself calls run(..) and the method returns the results of the process.

[00:01] <irced> jnthn: then I tried await Promise.allof(@promises)

[00:02] <irced> jnthn: but I see 0 cpu on the processes, though they show they are all launched

[00:02] <irced> jnthn: and slowly i get the promise results one by one

[00:02] <irced> jnthn: as if i had done it in order in the first place

[00:03] <irced> jnthn: to make it a little clearer, I am invoking md5sum via run and passing it a long list of absolute paths then capturing the output of md5sum

[00:04] <irced> jnthn: which i confirm is working as expected when called directly and attempting to parallelize by calling the method to run it on several different lists of files.

[00:04] <irced> happy fourth btw

[00:04] *** vike joined
[00:06] <irced> i am rewriting now to see if Proc::Async.new will work better in this case, but i prefer to parallelizing by calls to a subroutine with of course different arguments

[00:09] *** lizmat_ joined
[00:09] <jnthn> Yeah, I'd use Proc::Async for that, it's scale much better.

[00:10] <jnthn> *it'll

[00:10] <irced> jnthn: cool, thanks.

[00:10] <jnthn> Sleep time for me o/

[00:10] <irced> jnthn: cool, lates.

[00:12] *** lizmat left
[00:12] *** ravenousmoose left
[00:16] *** [particle] joined
[00:16] *** [particle]1 left
[00:20] *** [particle] left
[00:20] *** [particle]1 joined
[00:21] <Kaiepi> i'm considering moving to comma from vim for perl 6 dev since vim's perl6 plugins are really slow on my machine

[00:21] <Kaiepi> does comma have a vim mode?

[00:23] *** [particle] joined
[00:24] <irced> crap

[00:25] *** [particle]1 left
[00:27] *** [particle]1 joined
[00:28] *** [particle] left
[00:39] *** Manifest0 left
[00:41] <irced> hmm, perhaps I was mistaken about the cpu usage part as I was no seeing the disk read total changes indicating the work being done in parallel :-p

[00:44] *** Manifest0 joined
[00:53] *** [particle] joined
[00:55] *** [particle]1 left
[01:11] *** [particle]1 joined
[01:13] *** [particle] left
[01:22] *** vike left
[01:27] *** S0l0x4qu1st3p1ng joined
[01:29] *** vike joined
[01:29] *** Black_Ribbon left
[01:30] *** kaare_ left
[01:32] <S0l0x4qu1st3p1ng> kl

[01:36] *** molaf left
[01:41] *** Manifest0 left
[01:41] *** Falcon678 joined
[01:42] *** S0l0x4qu1st3p1ng left
[01:44] <Falcon678> Hello guys! I am considering using P6 as a backend for a web app, but I wanted to know if P6 is fast enough yet, or if I should reconsider this in a few months/years? Thanks! :)

[01:45] *** Manifest0 joined
[01:47] <timotimo> Falcon678: performance of p6 code can go from bad to great with tiny changes i often find

[01:47] <timotimo> this here irc channel is pretty good at finding those tiny changes

[01:48] <timotimo> perl6's outstanding support for parallel and asynchronous stuff can help make performance issues not as dramatic as for example python would

[01:50] <timotimo> also, many times when people have come to the channel for help with a performance issue, it led to a rakudo patch that improved something by anywhere between 2x and 200x performance-wise

[01:50] <timotimo> that's always fun

[01:50] <timotimo> anyway, i've gotta go to bed :)

[01:50] * irced gasps.

[01:51] <timotimo> https://doc.perl6.org/language/performance - there's a few words on performance-related stuff

[01:51] *** S0l0x4qu1st3p1ng joined
[01:52] *** S0l0x4qu1st3p1ng left
[01:54] <Falcon678> Thank you very much timotimo! :)

[01:54] <Falcon678> I will check that

[01:54] <Falcon678> Have a good night!

[01:57] <timotimo> for web app backend stuff, Cro would surely be a decent choice (it's built with asynchronous I/O at its center)

[01:57] <timotimo> o/

[01:58] *** Black_Ribbon joined
[02:01] *** mahafyi left
[02:02] <Falcon678> Cro seems nice, yes, thanks! I will try to write a simple app with Cro and I will see how fast it is :)

[02:03] *** Manifest0 left
[02:07] *** Manifest0 joined
[02:16] *** Manifest0 left
[02:19] *** Black_Ribbon left
[02:21] *** Manifest0 joined
[02:27] *** irced left
[02:31] *** vrurg joined
[02:32] *** Manifest0 left
[02:32] *** Falcon678 left
[02:37] *** Manifest0 joined
[02:41] *** Manifest0 left
[02:49] *** Manifest0 joined
[03:00] *** Manifest0 left
[03:05] *** Manifest0 joined
[03:16] *** Manifest0 left
[03:22] *** Manifest0 joined
[03:35] *** Black_Ribbon joined
[03:39] *** Manifest0 left
[03:45] *** Manifest0 joined
[03:48] *** aborazmeh joined
[03:48] *** aborazmeh left
[03:48] *** aborazmeh joined
[03:50] *** Black_Ribbon left
[03:53] *** thundergnat joined
[03:56] *** Black_Ribbon joined
[03:57] *** Manifest0 left
[04:01] *** dominix_ joined
[04:03] *** Manifest0 joined
[04:04] *** dominix left
[04:10] *** Manifest0 left
[04:13] *** aborazmeh left
[04:15] *** Manifest0 joined
[04:19] *** Black_Ribbon left
[04:35] *** Manifest0 left
[04:36] *** Black_Ribbon joined
[04:41] *** Manifest0 joined
[04:45] *** lizmat_ is now known as lizmat

[04:49] *** aborazmeh joined
[04:49] *** aborazmeh left
[04:49] *** aborazmeh joined
[04:55] *** Manifest0 left
[04:57] *** vrurg left
[05:01] *** Manifest0 joined
[05:05] *** Manifest0 left
[05:09] *** nadim_ left
[05:10] *** Manifest0 joined
[05:23] *** Manifest0 left
[05:23] *** lizmat left
[05:28] *** Manifest0 joined
[05:33] *** reu left
[05:44] *** jmerelo joined
[05:46] *** Manifest0 left
[05:48] <jmerelo> squashable6: status

[05:48] <squashable6> jmerelo, üçïüçï SQUASHathon is in progress! The end of the event in 2 days and ‚âà8 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[05:48] <jmerelo> Almost there!

[05:48] <jmerelo> releasable6: status

[05:48] <releasable6> jmerelo, Next release will happen when it's ready. R6 is down. At least 1 blocker. 492 out of 672 commits logged

[05:48] <releasable6> jmerelo, Details: https://gist.github.com/d553c65cb1567a398a31e56f800629e3

[05:51] *** antoniogamiz left
[05:52] *** Manifest0 joined
[05:54] *** lizmat joined
[05:59] *** rindolf joined
[06:11] *** lizmat left
[06:15] *** domidumont joined
[06:17] *** krunen left
[06:17] *** krunen joined
[06:19] *** reach_satori_ left
[06:24] *** noisegul joined
[06:29] *** noisegul left
[06:38] *** k-man joined
[06:38] *** lizmat joined
[06:42] *** ravenousmoose joined
[06:47] *** noisegul joined
[06:49] *** aborazmeh left
[06:53] *** patrickb joined
[06:54] <Geth> ¬¶ doc: 996dd01425 | (JJ Merelo)++ | doc/Language/control.pod6

[06:54] <Geth> ¬¶ doc: Restores eliminated pages

[06:54] <Geth> ¬¶ doc: 

[06:54] <Geth> ¬¶ doc: This kinda closes #2881, but not really, since there were other pages

[06:54] <Geth> ¬¶ doc: the ones that were actually missing due to change in indexing. Please

[06:54] <synopsebot> Link: https://doc.perl6.org/language/control

[06:54] <Geth> ¬¶ doc: reopen if you must

[06:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/996dd01425

[06:58] *** Manifest0 left
[07:00] *** sjm_uk joined
[07:04] *** Manifest0 joined
[07:04] <Kaiepi> squashable6, status

[07:04] <squashable6> Kaiepi, üçïüçï SQUASHathon is in progress! The end of the event in 2 days and ‚âà6 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:07] *** sno left
[07:08] *** aborazmeh joined
[07:08] *** aborazmeh left
[07:08] *** aborazmeh joined
[07:08] <jmerelo> But I'm not sure the hook is set

[07:08] *** Manifest0 left
[07:10] <Kaiepi> no worries, i'm busy with other stuff atm

[07:12] *** DarthGandalf left
[07:13] *** Manifest0 joined
[07:17] *** Manifest0 left
[07:23] *** Manifest0 joined
[07:28] *** DarthGandalf joined
[07:35] *** Manifest0 left
[07:41] *** Manifest0 joined
[07:50] *** Manifest0 left
[07:52] *** rindolf left
[07:54] *** lizmat_ joined
[07:56] *** Manifest0 joined
[07:57] *** lizmat left
[07:59] *** zakharyas joined
[08:00] *** dolmen joined
[08:05] *** aborazmeh left
[08:05] *** Manifest0 left
[08:11] *** Manifest0 joined
[08:15] <lizmat_> weekly: https://perl6.eu/prime-vigenere.html

[08:15] <notable6> lizmat_, Noted!

[08:15] *** lizmat_ is now known as lizmat

[08:21] *** nepugia joined
[08:24] *** rindolf joined
[08:26] *** Manifest0 left
[08:26] *** sjm_uk left
[08:27] *** aborazmeh joined
[08:27] *** aborazmeh left
[08:27] *** aborazmeh joined
[08:30] *** Manifest0 joined
[08:43] *** Black_Ribbon left
[08:45] *** zakharyas left
[08:45] <tyil> jmerelo: o/

[08:45] *** Manifest0 left
[08:46] *** aborazmeh left
[08:47] *** scimon joined
[08:48] <jmerelo> tyil: hey!

[08:48] <tyil> I poked you in pm

[08:48] <jmerelo> Ah, OK

[08:49] <tyil> about the mentor summit :)

[08:50] *** Manifest0 joined
[08:50] <masak> g'day, #perl6

[08:51] <Kaiepi> o/

[08:54] <Kaiepi> not sure how much of the squashathon i'll be able to do since my hs math is pretty rusty but i'll give it a shot

[08:56] <masak> did someone say math?

[08:56] <masak> :)

[08:56] * masak rushes in, foolishly

[08:58] <jmerelo> squashable6: status

[08:58] <squashable6> jmerelo, üçïüçï SQUASHathon is in progress! The end of the event in 2 days and ‚âà5 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:59] <jmerelo> masak: it's about that ^^^ Although hooks are not set up, that's the topic: Math::Sequences

[08:59] <Kaiepi> sequences...

[08:59] <Kaiepi> i remember that from calc but it was taught pretty badly

[09:00] <tyil> I've notified one of my math-loving friends, even though he's currently on holidays

[09:00] <tyil> worth a shot either way :D

[09:02] <Kaiepi> yeah

[09:03] *** zakharyas joined
[09:12] *** Manifest0 left
[09:12] <masak> I'm math-loving too, and ready to assist with explanations, at least now and then during the day :)

[09:13] <masak> (and I have a soft spot for oeis)

[09:14] *** ravenousmoose left
[09:15] *** __jrjsmrtn__ left
[09:16] *** pecastro joined
[09:17] *** sena_kun joined
[09:17] *** Manifest0 joined
[09:28] *** Manifest0 left
[09:30] *** antoniogamiz joined
[09:31] *** noisegul left
[09:34] *** Manifest0 joined
[09:34] *** noisegul joined
[09:51] *** andrewalker joined
[09:57] *** Manifest0 left
[10:02] *** Manifest0 joined
[10:07] *** Manifest0 left
[10:11] <daxim> jmerelo, when does 996dd01 go live?

[10:12] <jmerelo> daxim: it should be live now. I just rsynced

[10:13] <daxim> /with is still 404

[10:13] *** Manifest0 joined
[10:13] *** kaare_ joined
[10:13] <jmerelo> daxim: riiight... I'm not sure that was a thing before, as I commented in the issue

[10:14] <jmerelo> daxim: not even /syntax/with

[10:14] <daxim> well, it's now.  otherwise ELI5 why /grep /andthen /Promise do something useful, and /with does not

[10:15] *** nepugia left
[10:15] <jmerelo> daxim: with is syntax, the rest are statements. Well, andthen, I don't know

[10:16] <jnthn> andthen is an infix operator

[10:16] <jmerelo> jnthn: right

[10:16] <jnthn> (I've no idea what that means for the URL structure, though. I've little clue about that. :))

[10:17] <antoniogamiz> jnthn: for now :D

[10:17] <yoleaux> 4 Jul 2019 23:22Z <tbrowder> antoniogamiz: you're welcome, but you've done the hard part!

[10:17] <jmerelo> jnthn: well, no one knows actually how the URL structure works. We're trying do find out.

[10:17] <jmerelo> jnthn: but basically syntax things (from /language pages) do not get their own disambiguation page

[10:18] <antoniogamiz> I hope to present you some aclarations about the system here => https://github.com/antoniogamiz/Perl6-Documentable/wiki

[10:18] <jmerelo> daxim: and disambiguation pages like the ones you mention, well, they are not documented anywhere, and cause confusion just like this one. They also take a loooong time to build.

[10:19] <daxim> is this supposed to dissuade me from using them?

[10:20] <jmerelo> daxim: not really. They are going to be there for the foreseeable future.

[10:21] <jmerelo> daxim: but the thing is that we're moving to a new document processing application, and that might include things like deprecation warnings. And that might be the first feature to do that.

[10:21] <jmerelo> daxim: it's not specced, it's not documented, it's not used but for a few people, it causes confusion, it takes a long time off the build process ‚áí clear candidate for deprecation.

[10:22] <jmerelo> daxim: here's the issue https://github.com/perl6/doc/issues/2499# We'll be grateful to hear any opinion

[10:25] <daxim> that's too much text, I'm not going to read that.  here's your user speaking: don't remove stuff I'm using, ignore me at your peril.  I don't care about build time, that's the computer's work.  computers are our willing slaves and don't complain.

[10:25] <jmerelo> daxim: you can't be using something that does not exist, like the /with link (I don't think it's ever existed, also)

[10:26] <daxim> you're unreasonable right now

[10:26] <jmerelo> daxim: also, not removing but deprecating it, if we eventually decide to go that way.

[10:27] <jmerelo> daxim: why do you think I'm being unreasonable?

[10:28] <daxim> I'm out of this conversation.  you're old enough to put yourself into my shoes and reflect internally

[10:28] <jmerelo> daxim: (also: undocumented, unspecced features are not really expected to work for ever)

[10:28] <jmerelo> daxim: what I would like you is to get into my shoes. There are lots of issues with the documentation, including the fact that it takes almost 20 minutes to build in a reasonably powered machine.

[10:29] <jmerelo> daxim: its behavior is a continuous source of surprises, due to the fact that it works how it works, but it's very difficult to know why it does.

[10:30] <jmerelo> daxim: case in point: the /with link. It's impossible to know if it was removed, or it simply never existed. If it was removed, it's impossible to know why, because how URL generation work is an arcane topic reserved to those willing to read 1000 lines of code.

[10:30] <jmerelo> daxim: we need to move to a specced, tested and, if possible, fast way of generating the documentation.

[10:31] <jmerelo> daxim: we're doing to with the help of issues in the doc repository, open to feedback and the opinions of everyone. And of course, we'll try to make everyone happy.

[10:32] <jmerelo> daxim: but there are degrees of happiness, and different stakeholders being happy or unhappy for different reasons. We need to hear from everyone, which is why the issues are open.

[10:42] *** Manifest0 left
[10:43] *** dolmen left
[10:46] *** __jrjsmrtn__ joined
[10:48] *** Manifest0 joined
[11:04] *** zakharyas left
[11:08] <AlexDaniel> .

[11:08] *** squashable6 left
[11:08] <AlexDaniel> jmerelo: oops very sorry

[11:09] <AlexDaniel> holy shit someone made a huge PR

[11:09] <jmerelo> AlexDaniel: right

[11:09] <AlexDaniel> I'll set the hook when squashable comes back up

[11:09] <AlexDaniel> I think redelivering the payload is all that's needed, so no prob it'll be in the log

[11:10] <jmerelo> OK

[11:10] *** reportable6 left
[11:10] *** shareable6 left
[11:10] *** greppable6 left
[11:10] *** committable6 left
[11:11] <AlexDaniel> also it's a bit earlier than I anticipated? :)

[11:11] *** greppable6 joined
[11:11] *** squashable6 joined
[11:11] *** ChanServ sets mode: +v squashable6

[11:12] <jmerelo> AlexDaniel: we extended it a bit to get more people from more continents in :-)

[11:12] *** reportable6 joined
[11:12] *** ChanServ sets mode: +v reportable6

[11:12] <AlexDaniel> Actually, I don't have admin privs for that repo

[11:12] *** committable6 joined
[11:12] *** ChanServ sets mode: +v committable6

[11:14] *** shareable6 joined
[11:14] *** ChanServ sets mode: +v shareable6

[11:16] <AlexDaniel> ah, you wouldn't be able to redeliver stuff for a hook that wasn't set up at that point

[11:25] *** Manifest0 left
[11:33] *** Manifest0 joined
[11:41] *** Manifest0 left
[11:48] *** Manifest0 joined
[11:51] *** dolmen joined
[11:52] *** abraxxa left
[11:52] <antoniogamiz> If someone can help me with this => https://gist.github.com/antoniogamiz/b13af31cca6185cbfa20a9abf75e2c48

[11:53] <antoniogamiz> I do not have any clue why it freezes

[11:55] <AlexDaniel> moritz: this repo is stuck https://github.com/moritz/perl6-all-modules

[11:55] <AlexDaniel> rba: fwiw another resource we kinda sorta depend on (at least the bots do) ‚Üë

[11:59] <AlexDaniel> antoniogamiz: so the gist method of the typegraph class loops infinitely

[11:59] <AlexDaniel> e: use lib ‚Äòsandbox/Perl6-TypeGraph‚Äô; use Perl6::TypeGraph; my $tg = Perl6::TypeGraph.new-from-file; say $tg.Str;

[11:59] <evalable6> AlexDaniel, rakudo-moar cf6f6d926: OUTPUT: ¬´Perl6::TypeGraph<94243787927072>‚ê§¬ª

[11:59] <AlexDaniel> Str is fine

[12:00] <AlexDaniel> e: use lib ‚Äòsandbox/Perl6-TypeGraph‚Äô; use Perl6::TypeGraph; my $tg = Perl6::TypeGraph.new-from-file; say $tg.gist;

[12:00] <AlexDaniel> gist is not

[12:00] <evalable6> AlexDaniel, rakudo-moar cf6f6d926: OUTPUT: ¬´(signal SIGHUP) ¬´timed out after 10 seconds¬ª¬ª

[12:00] <antoniogamiz> oh :o

[12:00] <antoniogamiz> weird

[12:03] <timotimo> antoniogamiz: i'm not sure what exactly the TypeGraph module does, but if you're crawling all types you may infinitely loop from enum types

[12:03] <yoleaux> 06:54Z <Kaiepi> timotimo: can we talk about whether or not i need to rebootstrap nqp for my nativecall wide string support pullreq again? i ran into an issue that may require it

[12:03] <yoleaux> 10:55Z <Kaiepi> timotimo: never mind, i didn't end up needing to rebootstrap after all

[12:03] <antoniogamiz> timotimo: yep, I think that's happening

[12:03] <timotimo> m: say True::.keys

[12:03] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´(True False)‚ê§¬ª

[12:03] <antoniogamiz> AlexDaniel: thanks a lot for your help!

[12:03] <timotimo> m: say True::<True>::.keys

[12:03] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3say True::<True>:7‚èè5:.keys‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[12:04] <timotimo> m: say True::("True")::.keys

[12:04] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Combination of indirect name lookup and call not supported‚ê§at <tmp>:1‚ê§------> 3say True::("True")::7‚èè5.keys‚ê§    expecting any of:‚ê§        argument list‚ê§¬ª

[12:04] <timotimo> m: say True.WHO<True>.WHO<True>

[12:04] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´True‚ê§¬ª

[12:04] <timotimo> m: say True.WHO<True>.WHO<True>.WHO<True>.WHO<True>

[12:04] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´True‚ê§¬ª

[12:04] <timotimo> ^- it's easy for a naive tool to run into this trap

[12:05] *** Manifest0 left
[12:10] *** Manifest0 joined
[12:11] *** kaare_ left
[12:11] <antoniogamiz> omg I have lost 1h debugging a program

[12:12] <antoniogamiz> the problem was changing two lines of order

[12:13] <jmerelo> antoniogamiz: I thought you were a person of order. Order is important.

[12:13] <antoniogamiz> jmerelo: I have learned that today haha

[12:18] *** antoniogamiz left
[12:21] *** pat_js joined
[12:26] *** mowcat joined
[12:27] *** Manifest0 left
[12:27] *** jmerelo left
[12:36] *** Manifest0 joined
[12:37] *** domidumont left
[12:40] *** xinming_ left
[12:41] *** xinming_ joined
[12:50] *** domidumont joined
[12:52] *** domidumont1 joined
[12:55] *** domidumont left
[12:56] *** Manifest0 left
[12:57] *** zakharyas joined
[13:01] *** Manifest0 joined
[13:05] *** Manifest0 left
[13:11] *** Manifest0 joined
[13:19] *** molaf joined
[13:24] *** sena_kun left
[13:25] *** sena_kun joined
[13:26] *** Manifest0 left
[13:27] *** jeromelanteri joined
[13:31] *** Manifest0 joined
[13:32] *** vrurg joined
[13:45] <moritz> the Order of Chaos :D

[13:52] *** Manifest0 left
[13:57] *** Manifest0 joined
[14:07] <masak> sounds Discordian

[14:09] *** Manifest0 left
[14:16] *** Manifest0 joined
[14:18] *** antoniogamiz joined
[14:23] *** antoniogamiz left
[14:23] *** antoniogamiz joined
[14:24] *** mowcat left
[14:28] *** domidumont joined
[14:31] <moritz> we have a discord bridge, so not so far off :D

[14:31] *** domidumont1 left
[14:37] *** Manifest0 left
[14:43] *** Manifest0 joined
[14:48] *** Manifest0 left
[14:51] *** molaf left
[14:53] *** Manifest0 joined
[14:57] *** Manifest0 left
[15:02] *** Manifest0 joined
[15:03] *** antoniog1miz joined
[15:03] *** antoniogamiz left
[15:04] *** scimon left
[15:11] *** Cabanossi left
[15:11] *** jmerelo joined
[15:17] *** Manifest0 left
[15:22] *** Manifest0 joined
[15:24] *** Cabanossi joined
[15:26] *** zakharyas left
[15:33] <AlexDaniel> squashable6: status

[15:33] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà22 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:33] <AlexDaniel> most of the easy sequences already seem to be implemented :)

[15:33] <AlexDaniel> unless I'm blind

[15:37] *** patrickb left
[15:40] *** woolfy left
[15:43] *** woolfy joined
[15:45] *** sena_kun left
[15:52] *** antoniogamiz joined
[15:52] *** antoniog1miz left
[15:52] *** Manifest0 left
[15:56] <Kaiepi> damn, comma's too unstable for me to run

[15:59] <jnthn> Kaiepi: Details?

[15:59] *** Manifest0 joined
[16:01] <Kaiepi> oh, nvm

[16:01] <Kaiepi> # There is insufficient memory for the Java Runtime Environment to continue.

[16:01] <Kaiepi> forgot to run ulimit

[16:01] *** dominix__ joined
[16:04] *** Manifest0 left
[16:05] *** dominix_ left
[16:09] *** Manifest0 joined
[16:12] <Geth> ¬¶ doc/master: 4 commits pushed by (JJ Merelo)++

[16:12] <Geth> ¬¶ doc/master: 1320a52090 | Commas out, refs #2885

[16:12] <Geth> ¬¶ doc/master: 771051fb58 | Changes hierarchy refs #2885

[16:12] <Geth> ¬¶ doc/master: 129ac6641f | Reflow and changes hierarchy... again #2885

[16:12] <Geth> ¬¶ doc/master: 0ceb847c01 | Fixes original syntax entry, closes #2885. Reopen if you must

[16:12] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/996dd01425f6...0ceb847c0195

[16:12] *** sno joined
[16:15] *** dolmen left
[16:20] <tobs> Do we have `uniq -c` built in? I want to turn (1,2,2,2,3,3,4) into (1 => 1, 2 => 3, 3 => 2, 4 => 1). Run-length encoding if you want.

[16:20] *** jmerelo left
[16:20] <tobs> I feel like the proper combination of List methods escapes me while staring at the docs.

[16:22] *** sena_kun joined
[16:23] <tobs> Ah! .Bag will do

[16:23] *** llfourn joined
[16:23] <TimToady> loses order, if you really want RLE

[16:23] <tobs> in this case, at least, because same numbers are always consecutive

[16:24] <tobs> TimToady: exactly

[16:30] *** Manifest0 left
[16:31] *** antoniogamiz left
[16:34] *** Manifest0 joined
[16:42] *** Manifest0 left
[16:47] *** Manifest0 joined
[16:53] *** mowcat joined
[16:59] *** rfold joined
[17:06] *** vrurg left
[17:12] *** Manifest0 left
[17:15] *** pat_js left
[17:18] *** MilkmanDan left
[17:18] *** Manifest0 joined
[17:19] *** MilkmanDan joined
[17:21] *** vrurg joined
[17:30] *** jeromelanteri left
[17:30] *** domidumont left
[17:38] *** er2 joined
[17:39] *** Manifest0 left
[17:45] *** xinming-pad joined
[17:45] *** xinming-pad left
[17:45] *** xinming-pad joined
[17:45] *** Manifest0 joined
[17:45] *** xinming-pad left
[17:46] *** xinming-pad joined
[17:46] *** xinming-pad left
[17:46] *** xinming-pad joined
[17:46] *** xinming-pad left
[17:46] *** xinming-pad joined
[17:47] *** xinming-pad left
[17:47] *** xinming-pad joined
[17:47] *** xinming-pad left
[17:47] *** xinming-pad joined
[17:47] *** xinming-pad left
[17:49] <xinming_> It's strange that my computer connect-disconnects so frequent. :-(

[17:50] <er2> p6: my (\a, \b) = 3,4; say a; say b; say \a-\b

[17:50] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´3‚ê§4‚ê§0‚ê§¬ª

[17:50] <er2> what's going on with this?

[17:51] <sena_kun> \a and \b are not `a` and `b`, they are captures

[17:51] <timotimo> \a is a capture, it has one element, so it numifies to 1

[17:51] * timotimo high-fives sena_kun

[17:51] <sena_kun> :)

[17:52] <er2> k, so how would I do `a-b` ?

[17:53] <sena_kun> just a - b

[17:53] <sena_kun> m:  my (\a, \b) = 3,4; say a; say b; say a-b

[17:53] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    a-b used at line 1‚ê§‚ê§¬ª

[17:53] <sena_kun> m:  my (\a, \b) = 3,4; say a; say b; say a - b

[17:53] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´3‚ê§4‚ê§-1‚ê§¬ª

[17:53] <sena_kun> ^

[17:53] <timotimo> m: my (\a, \b) = 3,4; say a; say b; say a\-b

[17:53] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3my (\a, \b) = 3,4; say a; say b; say a\7‚èè5-b‚ê§    expecting any of:‚ê§        postfix‚ê§¬ª

[17:54] <timotimo> mhm mhm

[17:54] <timotimo> m: my (\a, \b) = 3,4; say a; say b; say (a)-(b)

[17:54] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´3‚ê§4‚ê§-1‚ê§¬ª

[17:54] <er2> that'll do, thanks

[18:03] *** lizmat left
[18:07] *** vrurg left
[18:27] *** Manifest0 left
[18:33] *** Manifest0 joined
[18:38] *** Manifest0 left
[18:39] *** vrurg joined
[18:42] <Kaiepi> when i have the time i'm gonna take a look at writing IO::PTY

[18:42] <Kaiepi> Net::Telnet needs PTY support but i was advised by #posix that i should write the module and use it as a dependency

[18:43] <Kaiepi> it's on the most wanted modules list so...

[18:43] *** antoniogamiz joined
[18:43] *** molaf joined
[18:45] *** Manifest0 joined
[18:51] *** lucasb joined
[18:53] *** molaf left
[18:56] *** kotrcka joined
[19:00] *** nepugia joined
[19:10] <rfold> Hmm interesting, it seems the file names in the stack trace are off.

[19:10] <rfold> Let's see if I can make an example that reproduces it.

[19:11] *** Black_Ribbon joined
[19:20] *** Manifest0 left
[19:25] *** Manifest0 joined
[19:25] <AlexDaniel> .tell lizmat https://github.com/ajs/perl6-Math-Sequences/issues/39

[19:25] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[19:31] *** Manifest0 left
[19:35] *** patrickb joined
[19:37] *** Manifest0 joined
[19:37] *** vrurg left
[19:48] *** Manifest0 left
[19:50] *** vrurg joined
[19:54] *** Manifest0 joined
[20:00] *** empee0 joined
[20:03] *** antoniogamiz left
[20:07] *** Cabanossi left
[20:08] *** Manifest0 left
[20:14] *** Manifest0 joined
[20:18] *** Cabanossi joined
[20:18] *** Manifest0 left
[20:23] *** Manifest0 joined
[20:40] *** Manifest0 left
[20:41] *** lizmat joined
[20:46] *** Manifest0 joined
[20:53] <lizmat> weekly: https://perlweeklychallenge.org/blog/meet-the-champion-013/

[20:53] <yoleaux> 19:25Z <AlexDaniel> lizmat: https://github.com/ajs/perl6-Math-Sequences/issues/39

[20:53] <notable6> lizmat, Noted!

[20:54] *** lancew joined
[20:58] * lizmat is sad she cannot contribute more to the Squashathon this time

[20:58] <lizmat> will be travelling most of tomorrow

[20:58] *** kaare_ joined
[21:04] *** Manifest0 left
[21:09] *** Manifest0 joined
[21:12] *** b2gills joined
[21:13] *** Kaiepi left
[21:13] *** Manifest0 left
[21:15] *** kaare_ left
[21:17] *** lancew left
[21:18] *** Manifest0 joined
[21:23] *** Manifest0 left
[21:24] *** Kaiepi joined
[21:24] <Kaiepi> i can't work out any of the sequences for the squashathon now that all the easy ones have been done...

[21:25] <Kaiepi> the roic pages are over my head

[21:28] *** Manifest0 joined
[21:30] *** |oLa| joined
[21:36] *** irced joined
[21:37] *** Manifest0 left
[21:38] <lizmat> weekly: http://donaldh.wtf/2019/07/the-vigen√®re-cipher/

[21:38] <notable6> lizmat, Noted!

[21:39] <irced> lo all, I want to use the junction any on an array of IO::Path to see if .s (size) property of any of the elements is not equal to a preset value (in this case I sampled the size of one value to the others with, but this is incidental). any thoughts on how to invoke .s on each element of the array to pass into the any junction?

[21:39] <timotimo> no need

[21:39] <timotimo> the junction will do it for you

[21:40] <irced> cool, lemme try!

[21:40] <timotimo> say so any($a, $b, $c, $d).s != $a.s

[21:40] <timotimo> for example

[21:40] <timotimo> also possible without junctions:

[21:40] <timotimo> m: say [==] ($a, $b, $c, $d)>>.s

[21:40] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared‚ê§at <tmp>:1‚ê§------> 3say [==] (7‚èè5$a, $b, $c, $d)>>.s‚ê§¬ª

[21:40] <irced> nice and concise there trying now

[21:40] <irced> just when I thought I knew perl6 syntax j/k ok I'll try both

[21:41] <timotimo> if you don't know >> yet, you can also .map(*.s) instead

[21:41] *** Manifest0 joined
[21:42] <irced> timotimo: cool thanks for that tip and the others!

[21:42] <timotimo> NP

[21:44] <irced> now the wildcard token i recognize at least :-p

[21:48] *** molaf joined
[21:51] <AlexDaniel> Kaiepi: I think it's easier if you manage to find a wikipedia page

[21:51] <AlexDaniel> Kaiepi: for example https://github.com/ajs/perl6-Math-Sequences/pull/40

[21:51] <AlexDaniel> I dunno if that formula makes sense, is there a way to generate these values without using the previous ones?

[21:51] <AlexDaniel> but it does the job, I think?

[21:52] <AlexDaniel> it feels like the sequence operator could benefit from some sort of built-in counter

[21:53] <AlexDaniel> sure you can add a state var, but then it looks messy

[21:53] <AlexDaniel> Kaiepi: here's the list: https://en.wikipedia.org/wiki/List_of_OEIS_sequences :)

[21:56] <Kaiepi> that's much clearer!

[21:56] <Kaiepi> thanks

[21:56] <AlexDaniel> Kaiepi: also OEIS page mentions how some sequences are related to other ones, and if I'm not mistaken there are a few that depend on the Bell sequence https://github.com/ajs/perl6-Math-Sequences/commit/d30257a2380df788aeaa6166580659bcb6e1edcc

[21:57] <AlexDaniel> maybe not, but keep an eye on it

[21:57] <AlexDaniel> it's a fun squashathon, but yes it's a bit hard to start :)

[22:05] *** Manifest0 left
[22:05] *** squashable6 left
[22:05] *** squashable6 joined
[22:10] <irced> well the .map or >> syntax had some issues with the comparison operation but the standard any(@file-ios).s !== @files-ios[0].s looks good to go. :-)

[22:10] *** lucasb left
[22:10] <irced> postfixing the method on any() that is works like a charm

[22:11] <timotimo> any/all and negations can be weird sometimes

[22:11] <irced> mapping seems to add some complexity may as in subsequences, which I attempted to flatten but botched so anyway

[22:11] *** Manifest0 joined
[22:12] *** vrurg left
[22:12] *** epony left
[22:13] <irced> i will probably see it again and by that time may have seen enough perl6 to quickly manipulate it :-)

[22:14] <irced> languages can be learned with more facility when one sees how it's used. oh wait, i thought this was a computer language. not! :-p

[22:14] *** vrurg joined
[22:27] *** Juerd joined
[22:28] *** mowcat left
[22:33] <tobs> I wonder if the squashathon's repo could be forked, the webhook set up and the PRs merged there if the owner is indisposed.

[22:34] *** epony joined
[22:36] *** patrickb left
[22:38] *** rfold left
[22:38] *** jaldhar left
[22:39] *** jaldhar joined
[22:45] *** sena_kun left
[22:53] *** Manifest0 left
[22:58] *** Manifest0 joined
[23:00] *** er2 left
[23:05] *** Manifest0 left
[23:07] <AlexDaniel> tobs: I can merge the PRs

[23:07] <AlexDaniel> but can't add a webhook

[23:07] <AlexDaniel> that's how github works, I think, and I'm stupid for not noticing it earlier

[23:10] *** Manifest0 joined
[23:14] <tobs> ah, that sounds odd indeed

[23:15] *** Manifest0 left
[23:15] <AlexDaniel> tobs: if it was in an organization, then it'd have been fine

[23:15] <AlexDaniel> I'm not sure why they don't allow access to the settings tab for personal repos

[23:19] *** Manifest0 joined
[23:21] <AlexDaniel> btw I hate the fact that these sequences have numeric IDs

[23:21] <AlexDaniel> just‚Ä¶ why

[23:22] <AlexDaniel> like, why call it A000045 when you can call it A-FIBONACCI

[23:23] <timotimo> easy

[23:23] <timotimo> so that the list of OEIS specified sequences is itself an integer sequence

[23:24] <AlexDaniel> :|

[23:24] <irced> I say all it A-FIBONACCI.A000045

[23:26] <AlexDaniel> timotimo: reminds me of that idea that ‚Äú6lang‚Äù is not cool because it's not a valid identifier. Priorities :)

[23:27] <timotimo> there's another letter that looks a lot like a 6, isn't there

[23:27] <timotimo> some variant of a b maybe?

[23:28] <AlexDaniel> –± ùüû ‚≥í ùüî ë£ï 6 ùü≤ ùü® ùüº ·èÆ

[23:28] * irced rubs his eyes.

[23:28] <AlexDaniel> some of these are numerically 6 though :)

[23:29] <AlexDaniel> unidump: –±·èÆ‚≥íë£ïùüîùüûùü®ùü≤ùüº

[23:29] <unicodable6> AlexDaniel, https://gist.github.com/fa0ac2b6252273d15b1da4455d0d1c4d

[23:29] <AlexDaniel> unidump: 6–±·èÆ‚≥íë£ïùüîùüûùü®ùü≤ùüº

[23:29] <unicodable6> AlexDaniel, https://gist.github.com/300dd0855754d1be8b6b294deeba1d82

[23:30] <irced> really unicodable, it's like you're not even trying

[23:31] <AlexDaniel> irced: what do you mean? It works as expected

[23:31] <irced> careful 

[23:31] <irced> the Andy police frequent here.

[23:32] * irced eats a spider.

[23:32] *** aborazmeh joined
[23:32] *** aborazmeh left
[23:32] *** aborazmeh joined
[23:33] <irced> https://en.wikipedia.org/wiki/Do_Androids_Dream_of_Electric_Sheep%3F

[23:38] <irced> what no ketchup here?

[23:41] *** Juerd left
[23:41] *** Cabanossi left
[23:42] *** Juerd joined
[23:42] *** Cabanoss- joined
[23:42] *** Manifest0 left
[23:49] *** Manifest0 joined
[23:53] <irced> i'm slurping quoted strings line by line from a file into an array but the array is retaining the quote, what's a perly way to ignore the quotes and just read it as the string?

[23:53] <irced> e.g. the line '/path/quoted' is slurped entirely with the apostrophe in the Str

[23:54] <timotimo> depends entirely on your actual needs

[23:54] <timotimo> will there be stuff like \t that has to turn into the tab ascii character?

[23:54] <irced> so, there's a string with quotes

[23:54] <irced> at either end

[23:54] <timotimo> will there always be one quote in front, one quote at the end, or can there be multi-line strings?

[23:54] <irced> always

[23:54] <irced> always quoted '...'

[23:54] <timotimo> in that case just .substr(1, * - 1)

[23:55] <irced> good thinking, thanks for the suggestion!

[23:55] <irced> how about if some have and some don't?

[23:55] <irced> probable regex eh

[23:55] <timotimo> if performance is at all critical, .ends-with and .starts-with will be a whole lot faster

[23:56] <irced> \'? (.*) \'? / probably won't work but i am on the right track and maybe for performance address greediness 

[23:56] <timotimo> that's already greedy

[23:57] <irced> \<[']>? (.() <[

[23:57] <timotimo> "'"?

[23:57] <irced> <[']>? (.*) <[']>? / maybe

[23:57] <irced> --> / <[']>? (.*) <[']>? / maybe

[23:58] <irced> anyway, i'm sure there's some regex shorthand that will quickly get the match, and that the regex is similar to what I just drafted. thanks for helping me think thru this. any more suggestions welcome.

[23:59] <timotimo> m: for [<'bleh' blah bloop' 'bleep meep>] <-> { .=substr(.starts-with("'"), * - .ends-with("'")); .say }

[23:59] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´Too many positionals passed; expected 0 arguments but got 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:59] <timotimo> m: for [<'bleh' blah bloop' 'bleep meep>] <-> $_ { .=substr(.starts-with("'"), * - .ends-with("'")); .say }

[23:59] <camelia> rakudo-moar cf6f6d926: OUTPUT: ¬´bleh‚ê§blah‚ê§bloop‚ê§bleep‚ê§meep‚ê§¬ª

[23:59] <irced> nice

