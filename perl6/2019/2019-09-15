[00:01] *** jaldhar_ left
[00:01] *** jaldhar_ joined
[00:02] <vrurg> Demos[m]: not sure if I got you correctly, but is this what you're looking for: http://docs.perl6.wakelift.de/routine/assuming ?

[00:03] <Demos[m]> sorta, but I want it to do that for a whole bunch of methods at once

[00:03] *** jaldhar_ left
[00:03] <Demos[m]> and then call them

[00:03] *** jaldhar_ joined
[00:07] <vrurg> Demos[m]: no, there is nothing like that. Still, I don't see the point for this and how exactly it must work. But if you gonna do it then most likely you'd either need to introdpect a class, or use FALLBACK. 

[00:07] <jnthn> Demos[m]: Hm, maybe wrap the object up in another class that inserts the argument and forwards the call? Like: class C { has $.arg; has $.delegate; method FALLBACK($name, |args) { $!delegate."$name"($arg, |args) } }

[00:08] <jnthn> heh, vrurg just beat me to mentioning FALLBACK :D

[00:08] <vrurg> :D

[00:08] <Demos[m]> nim used to have this feature (still might) called `using`

[00:11] *** jaldhar_ left
[00:11] *** jaldhar_ joined
[00:13] *** leont left
[00:16] <vrurg> Demos[m]: not sure if it's possible to have all feature of all languages implemented. :)

[00:16] <Demos[m]> I mean one could do it with macros I'm sure

[00:17] <vrurg> Likely so. 

[00:21] *** jaldhar_ left
[00:21] *** jaldhar_ joined
[00:25] *** aborazmeh joined
[00:25] *** aborazmeh left
[00:25] *** aborazmeh joined
[00:25] <Demos[m]> oh, also: can I write a class "repr" in perl6

[00:25] <Demos[m]> and how flexable is it?

[00:27] *** jaldhar_ left
[00:27] *** jaldhar_ joined
[00:28] <vrurg> Demos[m]: if you mean VM representations, then – no.

[00:28] <Demos[m]> yeah like is repr('mythinghere')

[00:29] *** jaldhar_ left
[00:29] *** jaldhar_ joined
[00:31] <vrurg> Demos[m]: see my comment above. :) repr is a low-level thing. You can read about them here: https://github.com/edumentab/rakudo-and-nqp-internals-course/tree/master/src – slides-day2

[00:31] *** jaldhar_ left
[00:31] *** jaldhar_ joined
[00:32] *** __jrjsmrtn__ left
[00:33] *** jaldhar_ left
[00:33] *** jaldhar_ joined
[00:36] *** __jrjsmrtn__ joined
[00:39] *** cpan-p6 left
[00:39] *** cpan-p6 joined
[00:39] *** cpan-p6 left
[00:39] *** cpan-p6 joined
[00:47] *** jaldhar_ left
[00:47] *** jaldhar_ joined
[00:49] *** jaldhar_ left
[00:49] *** jaldhar_ joined
[00:51] *** jaldhar_ left
[00:51] *** jaldhar_ joined
[00:53] *** jaldhar_ left
[00:53] *** jaldhar_ joined
[00:55] *** jaldhar_ left
[00:55] *** jaldhar_ joined
[00:57] *** benchable6 left
[00:57] *** benchable6 joined
[00:57] *** jaldhar_ left
[00:57] *** jaldhar_ joined
[01:00] *** jaldhar_ left
[01:01] *** jaldhar_ joined
[01:01] *** jaldhar_ left
[01:01] *** jaldhar_ joined
[01:03] *** jaldhar_ left
[01:03] *** jaldhar_ joined
[01:05] *** jaldhar_ left
[01:05] *** jaldhar_ joined
[01:08] *** benchable6 left
[01:08] *** benchable6 joined
[01:11] *** jaldhar_ left
[01:11] *** jaldhar_ joined
[01:13] *** jaldhar_ left
[01:13] *** jaldhar_ joined
[01:19] *** jaldhar_ left
[01:19] *** jaldhar_ joined
[01:21] *** jaldhar_ left
[01:21] *** jaldhar_ joined
[01:22] <SmokeMachine> https://twitter.com/smokemachine/status/1173044437427134465

[01:23] *** jaldhar_ left
[01:23] *** jaldhar_ joined
[01:24] *** netrino left
[01:31] *** jaldhar_ left
[01:31] *** jaldhar_ joined
[01:34] *** aborazmeh left
[01:35] *** agentzh left
[01:37] *** jaldhar_ left
[01:37] *** jaldhar_ joined
[01:38] *** agentzh joined
[01:39] *** molaf left
[01:41] *** wamba joined
[01:43] *** jaldhar_ left
[01:43] *** jaldhar_ joined
[01:45] *** jaldhar_ left
[01:45] *** jaldhar_ joined
[01:49] *** hythm joined
[01:52] *** molaf joined
[01:53] *** jaldhar_ left
[01:53] *** jaldhar_ joined
[02:06] *** Cabanossi left
[02:08] <AlexDaniel> SmokeMachine: holy cow that looks fancy

[02:08] <hythm> hello, is there a way to use sigilless variable of reserved words? something like: `my \start = 0, say start;`

[02:09] <AlexDaniel> m: my \start = 0, say start

[02:09] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: «(Mu)␤»

[02:09] <AlexDaniel> m: my \start = 0; say start

[02:09] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: «0␤»

[02:09] <AlexDaniel> m: my \start = 42; say start

[02:09] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: «42␤»

[02:09] <AlexDaniel> hythm: so what's wrong with that?

[02:09] <AlexDaniel> I mean, I wouldn't do it, but who am I to judge :)

[02:10] <hythm> hmm, when I tried this in repel, it showed different thing, like waiting to complete the statement

[02:10] *** Cabanossi joined
[02:10] <hythm> > my \start = 0; say start

[02:10] <hythm> * 

[02:11] *** jaldhar_ left
[02:11] <hythm> may be it's only a reple thing then

[02:11] *** jaldhar_ joined
[02:12] <hythm> s/reple/repl

[02:13] *** jaldhar_ left
[02:13] *** jaldhar_ joined
[02:15] <hythm> needed semicolon at the end, to work for repl

[02:21] *** jaldhar_ left
[02:21] *** jaldhar_ joined
[02:29] *** jaldhar_ left
[02:29] *** jaldhar_ joined
[02:31] *** jaldhar_ left
[02:31] *** jaldhar_ joined
[02:33] *** jaldhar_ left
[02:33] *** jaldhar_ joined
[02:35] *** jaldhar_ left
[02:35] *** jaldhar_ joined
[02:37] *** jaldhar_ left
[02:37] *** jaldhar_ joined
[02:41] *** jaldhar_ left
[02:41] *** jaldhar_ joined
[02:51] *** jaldhar_ left
[02:51] *** jaldhar_ joined
[02:53] *** jaldhar_ left
[02:53] *** jaldhar_ joined
[02:55] *** jaldhar_ left
[02:55] *** jaldhar_ joined
[02:57] *** dominix joined
[02:57] <dominix> hi everyone

[02:57] *** jaldhar_ left
[02:57] *** jaldhar_ joined
[02:58] <dominix> I am seeking help on Text::CSV ? how do I pass options ?

[02:58] <dominix> like quote_char = '"' 

[02:58] <dominix> or allow-looses-quotes

[02:58] <dominix> no way to got it right

[02:59] *** jaldhar_ left
[02:59] *** jaldhar_ joined
[03:01] *** jaldhar_ left
[03:01] *** jaldhar_ joined
[03:13] <Grinnz> it literally shows you

[03:14] <Grinnz> https://metacpan.org/pod/Text::CSV#allow_loose_quotes

[03:19] <uzl[m]> dominix: Look at the module's doc. For allow-loose-quotes, https://modules.perl6.org/dist/Text::CSV:cpan:HMBRAND/lib/Text/CSV.pod6#L428

[03:19] <Grinnz> oh sorry, wrong channel again :)

[03:19] <Grinnz> it's similarly well documented, though

[03:21] <uzl[m]> Yeah, the Perl version is well documented. Is the P6 version probably a port of it?

[03:21] <Grinnz> yes, it's by the author of Text::CSV_XS

[03:22] <uzl[m]> OK. dominix might want take a look at it too.

[03:22] <uzl[m]> * to take

[03:25] *** jaldhar_ left
[03:25] *** jaldhar_ joined
[03:29] *** jaldhar_ left
[03:29] *** jaldhar_ joined
[03:34] <dominix> I am not able to pass options to the constructor. if I do

[03:34] <dominix> my $csv = Text::CSV.new(sep_char=";", allow_loose_quotes, );

[03:35] <dominix> I have errors like Undeclared routines: allow_loose_quotes used at line 3

[03:35] <dominix> I don't know how to set allow_loose_quotes ... have no exemple

[03:38] <dominix> documentation do not permit direc use of all the functionnality, or maybe my mind is full of perl5 because I have done such jobs in perl5 and I would like to do it in perl6 now

[03:39] *** jaldhar_ left
[03:39] *** jaldhar_ joined
[03:41] *** aborazmeh joined
[03:41] *** aborazmeh left
[03:41] *** aborazmeh joined
[03:41] *** jaldhar_ left
[03:41] *** jaldhar_ joined
[03:42] <dominix> my $csv = Text::CSV.new(); is OK

[03:42] <dominix> my $csv = Text::CSV.new(sep_char=";", allow_loose_quotes, quote_char='"', escape_char='\\', allow_loose_escapes ); is NOT

[03:42] <uzl[m]> dominix: allow-loose-quotes is a Pair so you must pass it using either `allow-loose-quotes => True` or colon-pair syntax `:allow-loose-quotes`.

[03:44] <Grinnz> the documentation has plenty of examples

[03:47] *** jaldhar_ left
[03:47] *** jaldhar_ joined
[03:49] *** jaldhar_ left
[03:49] *** jaldhar_ joined
[03:51] *** guifa2 joined
[03:55] *** jaldhar_ left
[03:55] *** jaldhar_ joined
[03:57] *** jaldhar_ left
[03:57] *** jaldhar_ joined
[03:59] *** jaldhar_ left
[03:59] *** jaldhar_ joined
[03:59] <dominix> uzl[m]: thanks, I've tryed = 1 with no success, just missing the syntax  allow_loose_quotes=>True,

[04:01] *** jaldhar_ left
[04:01] <Grinnz> just like in perl 5, = and => are completely different

[04:01] *** jaldhar_ joined
[04:02] <dominix> is there something like WWW::Mechanize in perl6 ?

[04:03] *** jaldhar_ left
[04:03] *** jaldhar_ joined
[04:04] *** wamba left
[04:05] *** jaldhar_ left
[04:05] *** jaldhar_ joined
[04:07] *** guifa2 left
[04:27] *** jaldhar_ left
[04:27] *** jaldhar_ joined
[04:29] *** jaldhar_ left
[04:30] *** jaldhar_ joined
[04:31] *** adu left
[04:48] *** Guest13777 left
[04:48] *** kip left
[04:48] *** f0x left
[04:48] *** jcallen joined
[04:48] *** Circlepuller joined
[04:49] *** f0x joined
[04:49] *** caasih joined
[04:49] *** kip joined
[04:49] *** skaji_ joined
[04:49] *** Circlepuller is now known as TeamBlast

[04:49] *** jhill joined
[04:49] *** hfjvjffju joined
[04:49] *** BuildTheRobots joined
[04:51] *** dominix left
[04:51] *** dominix joined
[04:54] *** Guest13777 joined
[04:54] *** domm joined
[04:54] *** spacedbat joined
[04:54] *** Hotbees joined
[04:54] *** ChoppedBacon joined
[04:54] *** tbrowder joined
[04:54] *** mtj joined
[04:54] *** Bucciarati joined
[05:00] *** dominix left
[05:05] *** aborazmeh left
[05:05] *** HoboWithAShotgun left
[05:17] *** hythm left
[05:26] *** reach_satori_ joined
[05:29] *** reach_satori left
[05:36] *** aborazmeh joined
[05:36] *** aborazmeh left
[05:36] *** aborazmeh joined
[06:13] *** jaldhar_ left
[06:28] *** kurahaupo left
[06:29] *** kurahaupo joined
[06:31] *** domidumont joined
[06:58] *** dominix joined
[07:05] <Ulti> dominix: HTTP::UserAgent or Cro::HTTP::Client I believe are the most developed

[07:06] <Ulti> the latter being good if you want all the other things from Cro

[07:06] *** ravenousmoose joined
[07:08] <Ulti> dominix: above typically you would do :allow_loose_quotes if its just a flag in a method call

[07:08] <Geth> ¦ doc/master: 8 commits pushed by (JJ Merelo)++

[07:08] <Geth> ¦ doc/master: 9eb5505239 | Changes regex to include word boundaries

[07:08] <Geth> ¦ doc/master: bba879f982 | Fixes another meta #3024

[07:08] <Geth> ¦ doc/master: 8dc829169a | Wraps in C to avoid error #3024

[07:08] <Geth> ¦ doc/master: 2a1c59612a | Fixes other occurrences, refs #3024

[07:08] <Geth> ¦ doc/master: d83acf3a16 | Suppress word variats refs #3024

[07:08] <Geth> ¦ doc/master: 9407baac41 | More ref #3024

[07:08] <Geth> ¦ doc/master: e7942a03f0 | More meta( |-) eliminated refs #3024

[07:08] <Geth> ¦ doc/master: e5c6b9e73b | Corrects word variants, refs #3024

[07:08] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/b65abb0e2684...e5c6b9e73b88

[07:21] *** wamba joined
[07:24] *** andrzejku joined
[07:24] *** sena_kun joined
[07:56] *** luvjoey joined
[08:35] *** leont joined
[08:43] *** aborazmeh left
[08:48] *** dominix left
[08:48] *** dominix joined
[09:09] *** HoboWithAShotgun joined
[09:21] *** daxim left
[09:30] *** aborazmeh joined
[09:30] *** aborazmeh left
[09:30] *** aborazmeh joined
[09:30] *** dominix left
[09:41] *** daxim joined
[09:42] *** netrino joined
[09:51] *** aborazmeh left
[10:25] *** andrzejku left
[10:26] *** andrzejku joined
[11:09] *** ravenousmoose left
[11:09] *** Black_Ribbon left
[11:10] *** ravenousmoose joined
[11:22] *** HoboWithAShotgun left
[11:44] *** ravenousmoose left
[11:47] *** ravenousmoose joined
[12:05] *** FROGGS joined
[12:08] *** andrzejku left
[12:14] *** reach_satori_ left
[12:14] *** reach_satori joined
[12:25] *** andrzejku joined
[12:46] <holyghost> hi FROGGS, great SDL code BTW !

[12:47] *** epony left
[12:50] *** HoboWithAShotgun joined
[12:59] *** lucasb joined
[13:00] *** luvjoey left
[13:11] <FROGGS> hi holyghost and thank you :o)

[13:11] <tellable6> 2015-05-23T10:37:04Z #perl6 <Ven> froogs: are you still looking at c++ name (un)mangling? this: https://github.com/kirbyfan64/unmangler might be interesting (even though it's in C)

[13:11] <tellable6> 2018-07-28T22:59:35Z #perl6 <benjikun> froggs: Interesting, perhaps we could do something somewhat similar with the GitHub side of things somehow. An aggregator server that does all of that for zef.

[13:11] <tellable6> 2018-08-06T09:38:57Z #perl6 <AlexDaniel> froggs: heyyo, https://github.com/FROGGS/p6-Games-BubbleBreaker/pull/6

[13:11] <tellable6> 2018-08-06T09:41:23Z #perl6 <AlexDaniel> froggs: also https://github.com/FROGGS/p6-Games-BubbleBreaker/issues/7 (I was kinda disappointed that it doesn't run)

[13:11] <FROGGS> are you referring to the Perl  5 module or the bit Perl 6 that I wrote in that matter?

[13:20] *** andrzejku left
[13:21] <holyghost> perl 5, I am going to write tons of games with it in kubuntu sdl-perl module

[13:22] <holyghost> I've written a super mario kart start with it

[13:25] <holyghost> I'm probably going to do a kRPG program on it, but I need to think about it some more

[13:25] <holyghost> a toolkit such as were in rpgrevolution.com, for writing qt/kde RPG games

[13:26] <holyghost> e.g. zeldaclassic.com

[13:29] <FROGGS> uhhh, that sounds awesome

[13:29] <holyghost> needs lots of work :-)

[13:30] *** MilkmanDan left
[13:31] <cpan-p6> New module released to CPAN! Operator::dB (0.0.94) by 03ALLSOPP

[13:32] *** MilkmanDan joined
[13:54] *** leont left
[13:57] *** ravenousmoose left
[14:00] *** gabiruh_ left
[14:03] *** pecastro joined
[14:15] *** gabiruh joined
[14:19] <netrino> m: sub infix:<====>($a, $b) { $a == $b }; ($a ==== $b).say

[14:19] <evalable6> netrino, rakudo-moar ef2ee7912: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/38wY7JSjQ4␤Variable '$a' is not declared␤at /tmp/38wY7JSjQ4:1␤------> 03sub infix:<====>($a, $b) { $a == $b }; (08⏏04$a ==== $b).say␤»

[14:19] <netrino> m: sub infix:<====>($a, $b) { $a == $b }; (10 ==== 10).say

[14:19] <evalable6> netrino, rakudo-moar ef2ee7912: OUTPUT: «True␤»

[14:19] <netrino> Nice, fixed i see

[14:20] *** gabiruh left
[14:22] *** HoboWithAShotgun left
[14:32] *** ravenousmoose joined
[14:33] *** HoboWithAShotgun joined
[14:36] *** FROGGS left
[14:38] *** ravenousmoose left
[14:41] *** Sgeo joined
[14:42] *** Sgeo_ left
[14:52] *** andrzejku joined
[14:54] *** sno left
[14:54] *** dogbert17 left
[14:57] *** sno joined
[15:04] *** andrzejku left
[15:04] *** andrzejku joined
[15:06] *** epony joined
[15:25] *** zakharyas joined
[15:32] *** dogbert17 joined
[15:36] <Voldenet> m: sub infix:<=>($a, $b) { $a == $b }; (10 = 10).say

[15:36] <evalable6> Voldenet, rakudo-moar ef2ee7912: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/bs63hOmRLz␤Cannot …»

[15:36] <evalable6> Voldenet, Full output: https://gist.github.com/621d46045d58edc87898ed581f648060

[15:37] <Voldenet> hm, I'm not sure if I should report inability to use infix:<=> as a bug - it could theoretically be used for debugging

[15:39] <masak> hm, I just upgraded my Rakudo, and `use Test;` stopped working.

[15:39] <masak> "Could not find Test at line 1 in [...]"

[15:42] *** adu joined
[15:42] <timotimo> probably related to the build system changes recently-ish

[15:43] <masak> I should add that the upgrade fast-forwarded past about 2 years of rakudo/nqp/moar development -- haven't used this machine for a while

[15:44] <timotimo> ha

[15:44] <timotimo> then we have a little more than just one change in the build system :) :)

[15:44] <masak> but I'm at a loss what to do. the build/install otherwise succeeded

[15:44] <thowe> nuke it from orbit and start over?

[15:45] <masak> I guess. worth a shot

[15:46] * masak does so

[15:46] <timotimo> aye

[15:49] *** andrzejku left
[15:49] <thowe> Someone was saying yesterday that something cro needs is long-time broken...  Is that the case?

[16:04] <gdonald> webpacker I think?

[16:05] <thowe> I just scrolled back and it seems he's writing an article about whatever he is doing, so maybe I can just read that and see what's up.

[16:06] <thowe> it was DrForr

[16:11] <Geth> ¦ ecosystem: allsopp++ created pull request #469: Migrate Operator::dB to CPAN

[16:11] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/469

[16:12] <Geth> ¦ ecosystem: 52f1fbccc1 | (Owen Allsopp)++ | META.list

[16:12] <Geth> ¦ ecosystem: Migrate Operator::dB to CPAN

[16:12] <Geth> ¦ ecosystem: 

[16:12] <Geth> ¦ ecosystem: This module can be removed from p6c ecosystem because it is now on CPAN:

[16:12] <Geth> ¦ ecosystem: - https://modules.perl6.org/dist/Operator::dB:cpan:ALLSOPP

[16:12] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/52f1fbccc1

[16:12] <Geth> ¦ ecosystem: 5b998335a0 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[16:12] <Geth> ¦ ecosystem: Merge pull request #469 from allsopp/master

[16:12] <Geth> ¦ ecosystem: 

[16:12] <Geth> ¦ ecosystem: Migrate Operator::dB to CPAN

[16:12] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/5b998335a0

[16:16] *** gdonald left
[16:18] <Geth> ¦ problem-solving: JJ assigned to AlexDaniel Issue Ecosystem stability issues https://github.com/perl6/problem-solving/issues/105

[16:18] *** gdonald joined
[16:19] *** HoboWithAShotgun left
[16:22] *** khisanth_ left
[16:35] *** khisanth_ joined
[16:40] *** ravenousmoose joined
[16:40] *** aindilis left
[16:42] <cpan-p6> New module released to CPAN! HTML::BoreDOM (0.0.5) by 03ALLSOPP

[16:44] *** Ven`` joined
[16:45] *** ravenousmoose left
[16:58] *** aborazmeh joined
[16:58] *** aborazmeh left
[16:58] *** aborazmeh joined
[17:02] *** aindilis joined
[17:12] <thowe> perl6 stuff is on CPAN?

[17:13] <timotimo> aye

[17:14] <thowe> HTML::BoreDOM isn't found on metacpan.  What am I missing

[17:14] <timotimo> metacpan doesn't give perl6 results

[17:15] <AlexDaniel> try https://modules.perl6.org/

[17:16] *** rindolf left
[17:17] <masak> hm, nope. a clean install did not bring back my Test.pm6 :/

[17:17] <timotimo> can try finding out what's happening with the module debug env var

[17:18] <masak> yes, sure. how?

[17:18] <vrurg> masak: set RAKUDO_MODULE_DEBUG=1

[17:18] <timotimo> right

[17:19] <vrurg> m: my @a = 1,2; my $j = all @a; say 1 ~~ $j; @a[0] = 3; say 1 ~~ $j;

[17:19] <evalable6> vrurg, rakudo-moar ef2ee7912: OUTPUT: «False␤False␤»

[17:19] <vrurg> m: my @a = 1,2; my $j = any @a; say 1 ~~ $j; @a[0] = 3; say 1 ~~ $j;

[17:19] <evalable6> vrurg, rakudo-moar ef2ee7912: OUTPUT: «True␤False␤»

[17:20] <vrurg> Hackedy-hack...

[17:20] <masak> ok, that printed more lines, but nothing illuminating, I think

[17:22] <timotimo> what are the lines it's looking for Test in?

[17:23] <masak> it's searching in inst#/home/masak/.perl6, inst#/usr/local/share/perl6/site, inst#/usr/local/share/perl6/vendor, inst#/usr/local/share/perl6/core, ap#, nqp#, and perl5#

[17:24] <timotimo> which of those locations got nuked?

[17:25] <masak> I... don't know how to answer that. I clone and build+insall my rakudo in ~/ours/rakudo -- that's the directory I nuked

[17:26] <timotimo> why is it looking in /usr/local/share at all?

[17:26] <timotimo> is "which perl6" the right one? "perl6 --version"?

[17:29] <masak> yes, seems to be the right one

[17:29] <masak> oh!

[17:30] <masak> if I do ./perl6 in the rakudo/install/bin directory, it works

[17:30] <masak> ok, mystery solved

[17:31] <masak> /usr/local/bin/perl6 is an old wrapper script that I set up, back in 2015 -- apparently, it's bitrotted

[17:31] <timotimo> ha

[17:31] *** domidumont left
[17:32] <masak> ...now it works :>

[17:32] <masak> timotimo++ # asking the right questions

[17:33] <masak> and all this was so that I could reproduce and fix a Travis regression in Alma. that will have to wait till tomorrow :)

[17:34] *** Ven`` left
[17:35] *** Ven`` joined
[17:35] *** Ven`` left
[17:37] *** dwarring joined
[18:02] *** natrys joined
[18:21] <DrForr> sena_kun: https://reactjs.org/docs/create-a-new-react-app.html has a list of recommended JSX toolchains, I note that babel appears at the bottom of the list.

[18:23] <DrForr> sena_kun: As a side note, raw React WFM - I'm resorting right now to having CodePen do decompilation from JSX for me, and dropping the 'var XX = () =>' in favor of 'const XX ='.

[18:25] <DrForr> sena_kun: I'm also adding my comments to sample-app-spa-react on github. If I can get the rest of this working minus the JSX compiler it'll be an article.

[18:28] *** aborazmeh left
[18:33] <sena_kun> DrForr, thank you for the info! I'll take a look a bit later after some other debugging.

[18:34] <DrForr> No worries. If I can get the React side working with sockets (I.E. Redux) I'll probably switch to using Vue, which is what we've standardized on at work. It's just that I couldn't get that to work, I figured some prior xperience with React/Redux would be the thing.

[18:36] *** netrino left
[18:40] <DrForr> sena_kun: "Babel having dependency issues as a compiler?" along with a few thoughts.

[18:56] <DrForr> Aaaand the Redux section requires '...' so thre's more JSX decompilation to go, maybe.

[19:03] <MasterDuke> might be some useful info here https://arxiv.org/abs/1908.04219 re promoting perl6/raku, but haven't read it yet myself

[19:04] *** Kaiepi left
[19:04] *** Kaypie joined
[19:08] *** [particle] left
[19:08] *** [particle] joined
[19:14] *** natrys left
[19:17] *** adu left
[19:18] *** Ven`` joined
[19:37] *** sena_kun left
[19:37] <cpan-p6> New module released to CPAN! ORM::ActiveRecord (0.0.4) by 03GDONALD

[19:54] *** netrino joined
[19:54] *** leont joined
[19:59] *** Kaypie left
[19:59] *** Kaypie joined
[20:04] *** aborazmeh joined
[20:04] *** aborazmeh left
[20:04] *** aborazmeh joined
[20:06] *** krychu joined
[20:19] *** cpan-p6 left
[20:20] *** cpan-p6 joined
[20:20] *** cpan-p6 left
[20:20] *** cpan-p6 joined
[20:47] *** Kaypie left
[20:47] *** Kaypie joined
[20:51] *** zakharyas left
[21:01] *** Ven`` left
[21:18] *** marcusr left
[21:18] *** dduncan joined
[21:24] *** marcusr joined
[21:24] *** marcusr left
[21:24] *** marcusr joined
[21:25] *** aborazmeh left
[21:26] <dduncan> Question: In some other languages such as .NET or Java it is possible for character strings to contain invalid codepoints such as UTF-16 surrogates not in proper pairs.  Does a Perl 6 Str potentially have this problem too, or does Perl 6 guarantee that all Str are well-formed and don’t have any UTF-16 surrogate codepoints, because it would have checked for and failed such input when creating the Str.  Or if a Str can be invalid, what i

[21:26] <dduncan> the best way to test if a Str is well formed, eg the “…” I can put in a “Str where …” to ensure I only get valid Str.  Thank you.

[21:36] <MasterDuke> dduncan: samcv would know more, but i would say that perl6 strings are guaranteed to be valid, trying to create an invalid one would throw an exception

[21:37] <dduncan> Thank you, that is what I was hoping for.

[21:42] <MasterDuke> m: my Buf $a .= new(0x61, 0x62, 0x63); say $a.decode("utf-8"); my Buf $b .= new(0xff, 0x62, 0x63); say $b.decode("utf-8");

[21:42] <evalable6> MasterDuke, rakudo-moar 2bc3ac4b6: OUTPUT: «(exit code 1) abc␤Malformed UTF-8 at line 1 col 1␤  in block <unit> at /tmp/cenhXBQjXO line 1␤␤»

[21:56] *** Black_Ribbon joined
[22:20] *** leont left
[22:25] *** rindolf joined
[22:34] *** krychu left
[22:53] *** kurahaupo left
[23:00] *** kurahaupo joined
[23:00] *** pecastro left
[23:02] <SmokeMachine> m: my Buf $a .= new(0x61, 0x62, 0x63); say $a.decode("utf-8-c8"); my Buf $b .= new(0xff, 0x62, 0x63); say $b.decode("utf-8-c8");

[23:02] <evalable6> SmokeMachine, rakudo-moar daaf0277e: OUTPUT: «abc␤􏿽xFFbc␤»

[23:34] *** netrino left
