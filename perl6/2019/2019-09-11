[00:06] *** lichtkind__ joined
[00:09] *** lichtkind_ left
[00:14] *** wildtrees left
[00:18] *** irced joined
[00:20] <irced> i must be addicted to perl6 because my heart pumped extra when i discovered ctags supports perl6 as a language, which means i can jump to my function declaration in pm6 files from my pl6 files and back in vim with the power of my mind! err, keyboard anyway

[00:21] <discord6> <Rogue> I get a little giddy every time a new p6weekly comes out lol

[00:21] <discord6> <Rogue> so you're not alone

[00:22] <irced> üòÄ

[00:24] *** cpan-p6 left
[00:24] *** cpan-p6 joined
[00:24] *** cpan-p6 left
[00:24] *** cpan-p6 joined
[00:38] *** Actualeyes left
[00:41] *** ravenousmoose joined
[00:43] *** lichtkind__ left
[00:45] *** marcusal1987 left
[00:46] *** marcusal1987 joined
[00:46] *** ravenousmoose left
[00:54] *** HoboWithAShotgun left
[00:57] <discord6> <Aearnus> Who can we bug to get the Perl 6 repl.it page onto the actual language selection menu?

[01:05] *** holyghost joined
[01:08] *** squashable6 left
[01:09] *** squashable6 joined
[01:09] *** ChanServ sets mode: +v squashable6

[01:09] *** lumin joined
[01:19] *** squashable6 left
[01:24] *** squashable6 joined
[01:24] *** squashable6 left
[01:29] *** squashable6 joined
[01:29] *** ChanServ sets mode: +v squashable6

[01:41] *** adu joined
[01:44] *** molaf left
[01:45] <irced> hmm, instead of ctags perhaps ale is non-inferior

[01:55] <irced> err, apparently not, no ALEGoToDefinition feature with perl6

[01:57] *** molaf joined
[02:00] *** dustinm` left
[02:04] *** dustinm` joined
[02:16] *** dustinm` left
[02:17] *** marcusanthl1987 joined
[02:19] *** marcusal1987 left
[02:23] *** dustinm` joined
[02:52] <uzl[m]> aearnus:  I came across a tweet from @replit that said that they were still working into integrating P6. I guess that might be one of the reasons why it's not in the selection menu yet.

[02:54] *** khisanth_ left
[02:54] *** Cabanossi left
[03:05] *** Cabanossi joined
[03:09] *** khisanth_ joined
[03:40] *** kst joined
[03:42] *** zostay left
[03:43] *** peteretep left
[03:43] *** kawaii joined
[03:44] *** Grinnz joined
[03:44] *** mithaldu_ joined
[03:45] *** peteretep joined
[03:45] *** zostay joined
[03:45] *** spycrab0 joined
[04:04] *** Actualeyes joined
[04:13] *** dwarring left
[04:22] *** reach_satori_ left
[04:22] <discord6> <Aearnus> uzl[m]: makes sense

[04:22] <discord6> <Aearnus> makes me sad though

[04:23] <irced> m: -11%3

[04:23] <evalable6> irced, rakudo-moar fce964231: OUTPUT: ¬´WARNINGS for /tmp/moju6roWGR:‚ê§Useless use of "%" in expression "-11%3" in sink context (line 1)‚ê§¬ª

[04:23] <irced> m: say -11%3

[04:23] <evalable6> irced, rakudo-moar fce964231: OUTPUT: ¬´1‚ê§¬ª

[04:29] <irced> {-11/3}

[04:30] <irced> m: {-11/3}

[04:30] <evalable6> irced, rakudo-moar fce964231: OUTPUT: ¬´WARNINGS for /tmp/TdZtL_5FN3:‚ê§Useless use of "/" in expression "-11/3" in sink context (line 1)‚ê§¬ª

[04:30] <irced> m: print -11/3

[04:30] <evalable6> irced, rakudo-moar fce964231: OUTPUT: ¬´-3.666667¬ª

[04:30] <irced> m: print (-11/3).floor

[04:30] <evalable6> irced, rakudo-moar fce964231: OUTPUT: ¬´-4¬ª

[04:39] <irced> good job evalable6

[04:40] *** irced left
[04:44] *** adu left
[04:44] *** adu joined
[04:45] *** adu left
[04:45] *** adu joined
[04:45] *** adu left
[04:46] <AlexDaniel> but it didn't do anything special!!

[04:46] *** adu joined
[04:46] *** adu left
[04:47] *** adu joined
[04:47] *** adu left
[04:47] *** adu joined
[04:48] *** adu left
[04:57] *** rindolf joined
[05:18] *** wamba joined
[05:21] *** sauvin joined
[05:34] *** HoboWithAShotgun joined
[05:38] *** robertle left
[05:40] *** domidumont joined
[05:40] *** rindolf left
[05:41] *** domidumont left
[05:41] *** Sgeo joined
[05:41] *** domidumont joined
[05:42] *** Sgeo__ left
[05:52] *** domidumont left
[05:56] *** sno left
[06:00] *** jmerelo joined
[06:00] <jmerelo> releasable6: status

[06:00] <releasable6> jmerelo, Next release in ‚âà10 days and ‚âà12 hours. R6 is down. At least 9 blockers. Unknown changelog format

[06:00] <releasable6> jmerelo, Details: https://gist.github.com/0df72958182eb6f13e86b5bd55782149

[06:01] *** rindolf joined
[06:06] *** ravenousmoose joined
[06:10] *** sno joined
[06:11] *** ravenousmoose left
[06:12] *** molaf left
[06:12] *** gdonald left
[06:14] *** gdonald joined
[06:18] *** domidumont joined
[06:20] *** jmerelo left
[06:34] *** wamba left
[06:39] *** sena_kun joined
[06:48] *** Actualeyes left
[07:07] *** wamba joined
[07:37] *** abraxxa joined
[07:37] *** abraxxa left
[07:37] *** abraxxa joined
[07:42] *** abraxxa left
[07:44] *** abraxxa joined
[07:48] *** abraxxa left
[07:49] *** abraxxa joined
[07:54] *** wamba left
[08:00] *** zakharyas joined
[08:11] *** sftp left
[08:14] *** dakkar joined
[08:20] *** domidumont left
[08:22] *** domidumont joined
[08:30] *** [particle]1 joined
[08:32] *** [particle] left
[08:37] *** aborazmeh joined
[08:37] *** aborazmeh left
[08:37] *** aborazmeh joined
[08:57] *** robertle joined
[08:59] *** leont joined
[09:09] *** pecastro joined
[09:19] *** leont left
[09:29] *** pat_js joined
[09:53] *** pat_js left
[09:56] *** [particle]1 left
[09:58] *** pat_js joined
[10:03] *** domidumont left
[10:03] *** marcus1987al joined
[10:07] *** marcusanthl1987 left
[10:10] *** [particle] joined
[10:20] *** mowcat left
[10:21] *** ravenousmoose joined
[10:23] *** [particle] left
[10:24] *** wamba joined
[10:29] *** Guest93 joined
[10:33] *** mowcat joined
[10:33] *** mowcat left
[10:34] *** [particle] joined
[10:52] *** mowcat joined
[11:00] *** zakharyas left
[11:06] *** Cabanossi left
[11:08] *** squashable6 left
[11:08] *** squashable6 joined
[11:08] *** ChanServ sets mode: +v squashable6

[11:10] *** Black_Ribbon left
[11:12] *** sftp joined
[11:14] *** Cabanossi joined
[11:19] *** dolmen joined
[11:22] *** wamba left
[11:23] *** wamba joined
[11:25] *** wamba left
[11:34] *** Xliff joined
[11:34] *** Xliff_ joined
[11:35] <Xliff_> Is there a way to perform a match operation, and then use that Match object to perform a subst on the original string?

[11:35] <Xliff_> Kinda like: 

[11:35] <Xliff_> m: regex a { 'a'+ }; $a = 'aabaabaaaa'; say $a ~~ &a;

[11:35] <evalable6> Xliff_, rakudo-moar fce964231: OUTPUT: ¬´(exit code 1) 04===SORRY!04===‚ê§Variable '$a' is not declared‚ê§at /tmp/YBeoDEC‚Ä¶¬ª

[11:35] <evalable6> Xliff_, Full output: https://gist.github.com/477715a3c81725253b32ebec95f97787

[11:36] <Xliff_> m: regex a { 'a'+ }; my $a = 'aabaabaaaa'; say $a ~~ &a;

[11:36] <evalable6> Xliff_, rakudo-moar fce964231: OUTPUT: ¬´(exit code 1) 04===SORRY!04===‚ê§Undeclared routine:‚ê§    a used at line 1‚ê§‚ê§Oth‚Ä¶¬ª

[11:36] <evalable6> Xliff_, Full output: https://gist.github.com/597393da22a7a47dbe172b19e3ca5607

[11:36] *** Xliff left
[11:36] <Xliff_> m: my regex a { 'a'+ }; my $a = 'aabaabaaaa'; say $a ~~ &a;

[11:36] <evalable6> Xliff_, rakudo-moar fce964231: OUTPUT: ¬´ÔΩ¢aaÔΩ£‚ê§¬ª

[11:36] <Xliff_> And then replace that 'aa' somehow and have that reflected back in $a?

[11:37] <Xliff_> It seems strange that I have tha Match object, and to subst, I'd have to use s///;

[11:37] *** Xliff_ is now known as Xliff

[11:37] *** lucasb joined
[11:38] <Xliff> m: my regex a { 'a'+ }; my $a = 'aabaabaaaa'; my $m = $a ~~ &a; $m.substr-rw = 'bb'; say $a

[11:38] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: ¬´(signal SIGKILL) ¬ª

[11:39] <Xliff> m: my regex a { 'a'+ }; my $a = 'aabaabaaaa'; my $m = $a ~~ &a; $/.substr-rw = 'bb'; say $a

[11:39] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: ¬´(signal SIGKILL) ¬ª

[11:39] <Xliff> Well... that shouldn't happen.

[11:39] <Xliff> m: my regex a { 'a'+ }; my $a = 'aabaabaaaa'; my $m = $a ~~ &a; 

[11:39] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: ¬´¬ª

[11:39] <Xliff> m: my regex a { 'a'+ }; my $a = 'aabaabaaaa'; my $m = $a ~~ &a; $m.gist.say

[11:39] <evalable6> Xliff, rakudo-moar fce964231: OUTPUT: ¬´ÔΩ¢aaÔΩ£‚ê§¬ª

[11:51] *** reach_satori_ joined
[11:56] *** pat_js left
[12:05] *** marcusanthl1987 joined
[12:08] *** domidumont joined
[12:09] *** marcus1987al left
[12:09] *** pmurias joined
[12:10] *** pat_js joined
[12:10] <pmurias> it's supposed to be only creating symlinks but it's installing stuff to

[12:10] <pmurias> what does 'npm link' really do?

[12:11] *** marcus1987al joined
[12:14] *** marcusal1987 joined
[12:15] *** marcusanthl1987 left
[12:18] *** marcus1987al left
[12:20] *** squashable6 left
[12:20] *** wamba joined
[12:21] *** squashable6 joined
[12:21] *** ChanServ sets mode: +v squashable6

[12:24] *** scimon joined
[12:28] *** pmurias left
[12:40] *** pmurias joined
[12:44] *** marcusanthl1987 joined
[12:45] *** marcus1987al joined
[12:45] *** zakharyas joined
[12:46] *** ravenous_ joined
[12:48] *** marcusal1987 left
[12:48] *** marcusanthl1987 left
[12:48] *** marcusal1987 joined
[12:49] *** Guest93 left
[12:50] *** wamba left
[12:51] *** marcus1987al left
[12:51] *** marcusanthl1987 joined
[12:52] *** marcus1987al joined
[12:52] *** pmurias left
[12:52] *** hankache joined
[12:53] <hankache> hello #perl6

[12:54] *** pmurias joined
[12:55] *** marcusal1987 left
[12:55] <sena_kun> hankache, o/

[12:55] *** marcusal1987 joined
[12:56] *** marcusanthl1987 left
[12:57] *** marcusanthl1987 joined
[12:57] *** marcus1987al left
[13:01] *** marcusal1987 left
[13:08] *** mensvaga joined
[13:08] *** aborazmeh left
[13:17] *** Guest93 joined
[13:26] *** marcus1987al joined
[13:29] *** marcusanthl1987 left
[13:36] *** lgtaube left
[13:48] *** ravenous_ left
[13:51] *** pmurias left
[13:54] *** pmurias joined
[14:14] *** wamba joined
[14:32] *** wamba left
[14:36] *** hankache left
[14:38] *** MilkmanDan left
[14:41] *** brian1729 joined
[14:41] *** MilkmanDan joined
[14:59] *** robertle left
[15:06] *** pmurias left
[15:06] *** molaf joined
[15:11] *** zakharyas left
[15:14] *** zakharyas joined
[15:14] *** ufobat__ joined
[15:18] *** ufobat_ left
[15:18] *** marcus1987al left
[15:27] *** domidumont left
[15:33] *** marcusal1987 joined
[15:43] *** cognominal joined
[15:54] <El_Che> hi

[15:55] <masak> o/

[15:56] <timotimo> ohai masak 

[15:56] <masak> ehlo timotimo 

[16:04] *** jmerelo joined
[16:04] *** scimon left
[16:05] *** scimon joined
[16:08] *** pat_js left
[16:14] *** marcusal1987 left
[16:14] *** irced joined
[16:15] *** shlomif joined
[16:15] *** marcusal1987 joined
[16:18] *** cpan-p6 left
[16:19] *** cpan-p6 joined
[16:19] *** cpan-p6 left
[16:19] *** cpan-p6 joined
[16:23] *** leont joined
[16:24] *** scimon left
[16:25] *** Xliff left
[16:25] *** Itaipu_ left
[16:26] *** aborazmeh joined
[16:26] *** aborazmeh left
[16:26] *** aborazmeh joined
[16:27] *** Itaipu joined
[16:32] *** dolmen left
[16:33] *** lgtaube joined
[16:33] *** aborazmeh left
[16:38] *** aborazmeh joined
[16:38] *** aborazmeh left
[16:38] *** aborazmeh joined
[16:44] *** aborazmeh left
[16:47] *** dakkar left
[16:52] *** aborazmeh joined
[16:52] *** aborazmeh left
[16:52] *** aborazmeh joined
[16:52] *** aborazmeh left
[16:54] *** jmerelo left
[16:54] *** marcusal1987 left
[16:55] *** aborazmeh joined
[16:55] *** aborazmeh left
[16:55] *** aborazmeh joined
[16:58] *** shlomif left
[16:59] <irced> .tell Elronnd please view the comment i made to the rakudo issue you referenced from libport

[16:59] <tellable6> irced, I'll pass your message to Elronnd

[17:02] *** shlomif joined
[17:03] *** domidumont joined
[17:11] *** marcusal1987 joined
[17:14] <Kaiepi> m: my Promise $p .= new; race for 1..10 { $p.keep }; react { whenever $p { say 'kept' }; whenever Promise.in(5) { done } }

[17:14] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) A worker in a parallel iteration (hyper or race) initiated here:‚ê§  in block ‚Ä¶¬ª

[17:14] <evalable6> Kaiepi, Full output: https://gist.github.com/8643d7b7ecd9e760e19301d6dac15756

[17:15] <Kaiepi> m: my Promise $p .= new; race for 1..10 { try $p.keep }; react { whenever $p { say 'kept' }; whenever Promise.in(5) { done } }

[17:15] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´kept‚ê§¬ª

[17:15] <Kaiepi> weird, it looks a lot like a whenever block for a promise in my code is running multiple times

[17:16] <Kaiepi> wait, this might be better to test with

[17:17] <Kaiepi> m: my Promise $p .= new; race for 1..10 { $p.keep if $p.status ~~ Planned }; react { whenever $p { say 'kept' }; whenever Promise.in(5) { done } }

[17:17] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´kept‚ê§¬ª

[17:17] <Kaiepi> m: my Promise $p .= new; race for 1..10 { start { $p.keep if $p.status ~~ Planned } }; react { whenever $p { say 'kept' }; whenever Promise.in(5) { done } }

[17:17] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´kept‚ê§¬ª

[17:19] <Kaiepi> m: my Supplier $s .= new; my Promise $p .= new; react { whenever $s.Supply.schedule-on($*SCHEDULER) { $p.keep if $p.status ~~ Planned }; whenever $p { say 'kept' }; whenever Promise.in(5) { done }; LEAVE { $s.emit: $i for 1..100 } }

[17:19] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/qfbOMGgroz‚ê§Variable '$i' is not declared‚ê§at /tmp/qfbOMGgroz:1‚ê§------> 03romise.in(5) { done }; LEAVE { $s.emit: 08‚èè04$i for 1..100 } }‚ê§¬ª

[17:19] <Kaiepi> m: my Supplier $s .= new; my Promise $p .= new; react { whenever $s.Supply.schedule-on($*SCHEDULER) { $p.keep if $p.status ~~ Planned }; whenever $p { say 'kept' }; whenever Promise.in(5) { done }; LEAVE { $s.emit: $_ for 1..100 } }

[17:20] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´kept‚ê§¬ª

[17:20] <Kaiepi> m: my Supplier $s .= new; my Promise $p .= new; react { whenever $s.Supply.schedule-on($*SCHEDULER) { $p.keep if $p.status ~~ Planned }; whenever $p { say 'kept' }; whenever Promise.in(5) { done }; LEAVE { Thread.start({ $s.emit: $_ }) for 1..100 } }

[17:20] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´kept‚ê§¬ª

[17:25] *** Actualeyes joined
[17:27] *** brian1729 left
[17:28] *** brian1729 joined
[17:29] *** molaf left
[17:29] *** brian1729 left
[17:30] *** \emph{grumble} left
[17:33] *** zakharyas left
[17:37] *** grumble joined
[17:37] *** domidumont left
[17:37] *** Xliff joined
[17:37] <Xliff> .

[17:40] *** kybr left
[17:41] *** reach_satori_ left
[17:41] *** reach_satori_ joined
[17:42] *** kybr joined
[17:47] *** leah2 joined
[17:57] *** leah2 left
[17:58] *** marcusal1987 left
[17:58] *** brian1729 joined
[18:01] *** leah2 joined
[18:04] *** wildtrees joined
[18:05] *** wildtrees left
[18:06] *** wildtrees joined
[18:07] *** wildtrees left
[18:08] *** wildtrees joined
[18:09] *** wildtrees left
[18:09] *** wildtrees joined
[18:11] *** wildtrees left
[18:12] *** wildtrees joined
[18:14] *** aborazmeh left
[18:14] *** wildtrees left
[18:14] *** wildtrees joined
[18:16] *** wildtrees left
[18:16] *** wildtrees joined
[18:17] *** ravenous_ joined
[18:18] *** wildtrees left
[18:18] *** wildtrees joined
[18:19] *** wildtrees left
[18:25] *** robertle joined
[18:25] *** rindolf left
[18:26] *** shlomif is now known as rindolf

[18:30] *** sauvin left
[18:36] *** dustinm` left
[18:42] *** dustinm` joined
[19:08] *** molaf joined
[19:08] *** wamba joined
[19:13] *** Sgeo left
[19:14] *** Sgeo joined
[19:15] *** cpan-p6 left
[19:16] *** cpan-p6 joined
[19:16] *** cpan-p6 left
[19:16] *** cpan-p6 joined
[19:21] *** ravenous_ left
[19:22] *** ravenous_ joined
[19:24] *** irced left
[19:25] *** irced joined
[19:30] *** Black_Ribbon joined
[19:31] *** ravenous_ left
[19:38] *** ufobat__ left
[19:53] *** pmurias joined
[19:55] *** |oLa| joined
[20:01] *** |oLa| left
[20:11] *** |oLa| joined
[20:15] *** |oLa| left
[20:24] <Elronnd> irced: sweeeeeet, thanks!

[20:24] <tellable6> 2019-09-11T16:59:29Z #perl6 <irced> Elronnd please view the comment i made to the rakudo issue you referenced from libport

[20:24] <Elronnd> irced: will integrate that later today.  Thank you sooooo much!

[20:28] *** brian1729 left
[20:43] *** sena_kun left
[20:44] *** rindolf left
[20:52] <Kaiepi> m: my Promise $p .= new; my Supplier $s .= new; start { react { whenever $s { whenever $p { say 'kept' } } } }; $p.keep; $s.emit: True; $p .= new; $p.keep; $s.emit: True; sleep 3

[20:52] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´¬ª

[20:52] <Kaiepi> m: my Promise $p .= new; my Supplier $s .= new; start { react { whenever $s.Supply { whenever $p { say 'kept' } } } }; $p.keep; $s.emit: True; $p .= new; $p.keep; $s.emit: True; sleep 3

[20:52] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´¬ª

[20:54] <Kaiepi> m: my Supplier $s .= new; start { react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } } } }; my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; sleep 3

[20:54] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´¬ª

[20:55] <Kaiepi> m: my Supplier $s .= new; start { say $s; react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } } } }; my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; sleep 3

[20:55] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´Supplier.new‚ê§¬ª

[20:56] <Kaiepi> m: my Supplier $s .= new; start { say $s; react { whenever $s.Supply -> Promise $p { say 'received promise'; whenever $p { say 'kept' } } } }; my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; sleep 3

[20:56] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´Supplier.new‚ê§¬ª

[20:57] <Kaiepi> m: my Supplier $s .= new; react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } } LEAVE { my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; sleep 3; done } } }

[20:57] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/VhtItmcZBO‚ê§Strange‚Ä¶¬ª

[20:57] <evalable6> Kaiepi, Full output: https://gist.github.com/21e1d225f6c792453c48ccf906454b34

[20:57] *** number6` joined
[20:57] <Kaiepi> m: my Supplier $s .= new; react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } }; LEAVE { my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; sleep 3; done } } }

[20:57] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/bBh9_qZ6VP‚ê§Unexpected closing bracket‚ê§at /tmp/bBh9_qZ6VP:1‚ê§------> 03$p.keep; $s.emit: $p; sleep 3; done } } 08‚èè04}‚ê§¬ª

[20:57] <Kaiepi> m: my Supplier $s .= new; react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } }; LEAVE { my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; sleep 3; done } }

[20:57] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´¬ª

[20:59] <number6`> hey, everyone. i try a simple case of binding variables and it fails. for example, my $a; my $b; $a := $b; This results in an error: "Cannot use bind operator with this left-hand side" what am i doing wrong?

[20:59] <number6`> even when one or both variables are initialized

[21:00] <Kaiepi> m: my Supplier $s .= new; react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } }; LEAVE { my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p } }

[21:01] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´(signal SIGHUP) kept‚ê§¬´timed out after 10 seconds¬ª¬ª

[21:01] <Kaiepi> m: my Supplier $s .= new; react { whenever $s.Supply -> Promise $p { whenever $p { say 'kept' } }; LEAVE { my Promise $p .= new; $p.keep; $s.emit: $p; $p .= new; $p.keep; $s.emit: $p; done } }

[21:01] <evalable6> Kaiepi, rakudo-moar b6bbc3642: OUTPUT: ¬´¬ª

[21:01] *** Cabanoss- joined
[21:01] *** Cabanossi left
[21:01] *** Cabanoss- is now known as Cabanossi

[21:02] <MasterDuke> m: my $a; my $b = 3; $a := $b; say $a; $a = 5; say $b

[21:02] <evalable6> MasterDuke, rakudo-moar b6bbc3642: OUTPUT: ¬´3‚ê§5‚ê§¬ª

[21:03] <MasterDuke> number6`: ^^^ looks to me like it works

[21:08] <number6`> MasterDuke: there seems to be something seriously wrong with Rakudo Star version 2019.03.1 on windows 10. last week, they discovered that 42 is the sum of 3 cubes and the interpreter failed that calculation as well (reproduced by others here). :(

[21:10] <MasterDuke> hmm. unfortunately i don't have a windows machine to test/help with, but i think people are aware and looking into it for the next release

[21:10] <number6`> MasterDuke: thanks for your help.

[21:11] <MasterDuke> np (but don't think i did anything...)

[21:12] *** brian1729 joined
[21:15] <Xliff> m: say -80538738812075974 ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3

[21:15] <evalable6> Xliff, rakudo-moar b6bbc3642: OUTPUT: ¬´42‚ê§¬ª

[21:15] <Xliff> Looks like that works, now.

[21:17] <Xliff> bisect:  -80538738812075974 ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3 == 42\]

[21:17] <bisectable6> Xliff, On both starting points (old=2015.12 new=b6bbc36) the exit code is 1 and the output is identical as well

[21:17] <bisectable6> Xliff, Output on both points: ¬´04===SORRY!04=== Error while compiling /tmp/Zg8MlpLTi9‚ê§Unexpected closing bracket‚ê§at /tmp/Zg8MlpLTi9:1‚ê§------> 03515 ** 3 + 12602123297335631 ** 3 == 42\08‚èè04]‚ê§¬ª

[21:17] <Xliff> bisect:  -80538738812075974 ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3 == 42

[21:17] <bisectable6> Xliff, On both starting points (old=2015.12 new=b6bbc36) the exit code is 0 and the output is identical as well

[21:17] <bisectable6> Xliff, Output on both points: ¬´WARNINGS for /tmp/JPsslwmnZ5:‚ê§Useless use of "==" in expression "+ 12602123297335631 ** 3 == 42" in sink context (line 1)‚ê§¬ª

[21:18] <Xliff> bisect:  exit 1 unless -80538738812075974 ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3 == 42

[21:18] <bisectable6> Xliff, On both starting points (old=2015.12 new=b6bbc36) the exit code is 0 and the output is identical as well

[21:18] <bisectable6> Xliff, Output on both points: ¬´¬ª

[21:18] <Xliff> number6`: OK, so trying that on Windows would be non-trivial, unfortunately.

[21:27] *** lucasb left
[21:30] <vrurg> Xliff: is it still feasible for you to generate Amazon MWS API modules?

[21:33] *** mahafyi joined
[21:35] <Xliff> vrurg: I think so. I will need to take a look at the pages. 

[21:36] <Xliff> Also need a way to test them if you have that capability.

[21:36] *** pyrimidi_ left
[21:37] <vrurg> Xliff: that's the point. I wanna try to create a tool for my wife.

[21:40] <irced> well, alert the mice, -80538738812075974 ** 3 + 80435758145817515 ** 3 + 12602123297335631 ** 3 == 42

[21:41] <irced> they might be interested in the left hand side of that equality

[21:41] <timotimo> true

[21:42] <irced> and they pay handsomely for good information

[21:42] * irced checks the attic for a mouse.

[21:44] * irced goes back to being relevant.

[21:47] <Xliff> vrurg: Will look into it.  Are you going to be around?

[21:49] <vrurg> Xliff: mostly ‚Äì yes. Usually I hear the notification if pinged.

[21:49] <Xliff> kk

[21:49] <vrurg> Xliff: thank you! 

[21:49] <Xliff> vrurg: Check the PMs.

[21:50] <Xliff> Would kinda like to know what you need, so I can focus on that.

[21:53] *** mahafyi left
[22:21] <irced> p6: use Terminal::AnsiColor; print {colored("the answer to the question octarine", "red");

[22:21] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Terminal::AnsiColor at line 1 in:‚ê§    file#/home‚Ä¶¬ª

[22:21] <evalable6> irced, Full output: https://gist.github.com/5f997af72bf919d29d57c63ed5f9e358

[22:22] <irced> p6: use Terminal::ANSIColor; print {colored("the answer to octarine", "red");

[22:22] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Terminal::ANSIColor at line 1 in:‚ê§    file#/home‚Ä¶¬ª

[22:22] <evalable6> irced, Full output: https://gist.github.com/37fb610abe9c6ba50b02201fbf4dcd50

[22:22] <irced> camelia: say "I am your slave"

[22:22] <tellable6> irced, I'll pass your message to camelia

[22:25] * irced wonders about Camelia.

[22:32] <irced> so i'm wondering how my code could be so much cooler using substitution as in $toformat ~~ s/ <wb>a<wb> /{colored("a", %colortable<a>)}/; where obviously toformat and colortable have been defined. i want to generalize so that the letter that matched, a, can be substituted into the substitution expression e.g. something $toformat ~~ s/ <wb>a<wb> /{colored("$0", %colortable{~$0})}/; i'm not sure about the map 

[22:32] <irced> lookup but anyway i can't get $0 to even go into the first part...

[22:32] <irced> any thoughts?

[22:35] <irced> obviously we can't test Terminal::ANSIColor here (or even on f.perl.bot) but maybe someone has done something similar?

[22:36] <irced> maybe i need to be explicit about $/[0]

[22:40] <Xliff> Is there a JSON object out there that can parse without the need for quoted keys?

[22:40] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb> /{say "an"}/; #testing

[22:40] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´an‚ê§¬ª

[22:41] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb> /{say "an"}/; say $targetstr; #testing

[22:41] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´an‚ê§what is True octarine color‚ê§¬ª

[22:41] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb> /{"an".Str}/; say $targetstr; #testing

[22:41] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´what is an octarine color‚ê§¬ª

[22:41] <MasterDuke> irced: i not 100% sure about evalable6, but committable6 can use modules

[22:41] <vrurg> Xliff: if I'm not mistaken, that'd be violation of JSON standard, isn't it?

[22:41] <AlexDaniel> evalable6 too

[22:42] <Xliff> vrurg: Yes, but not JS itself.

[22:42] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb> /{~"$0"~"n"}/; say $targetstr; #testing

[22:42] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´Use of Nil in string context‚ê§what is n octarine color‚ê§  in block  at /tmp/x6RxQKFNvQ line 1‚ê§¬ª

[22:42] <AlexDaniel> if it works for one bot, then it works for every other bot too :)

[22:42] <Xliff> I've extracted a JS object definition and I need to get that into JSON.

[22:42] <irced> MasterDuke: thanks for mentioning it, i might try Terminal::ANSIColor on it later

[22:42] <Xliff> Or... maybe not...

[22:43] <AlexDaniel> m: use lib ‚Äòdata/all-modules/github/tadzik/Terminal-ANSIColor/‚Äô; use Terminal::ANSIColor;

[22:43] <evalable6> AlexDaniel, rakudo-moar b6bbc3642: OUTPUT: ¬´¬ª

[22:43] <AlexDaniel> there

[22:43] <MasterDuke> AlexDaniel++

[22:45] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb>{} /{~"$0"~"n"}/; say $targetstr; #testing

[22:45] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´Use of Nil in string context‚ê§what is n octarine color‚ê§  in block  at /tmp/R06R_rlFQ9 line 1‚ê§¬ª

[22:46] <irced> i guess i can got the less concise why and try grammar actions

[22:47] <timotimo> m: my $targetstr = "what is a octarine color"; $targetstr ~~ s[ <wb>a<wb> ] = $0 ~ "n"; say $targetstr

[22:47] <evalable6> timotimo, rakudo-moar b6bbc3642: OUTPUT: ¬´Use of Nil in string context‚ê§what is n octarine color‚ê§  in code  at /tmp/zOF9R6o7N1 line 1‚ê§¬ª

[22:47] <timotimo> m: my $targetstr = "what is a octarine color"; $targetstr ~~ s[ <wb>a<wb> ] = $0 ~ "n"; say $/; say $targetstr

[22:47] <evalable6> timotimo, rakudo-moar b6bbc3642: OUTPUT: ¬´Use of Nil in string context‚ê§ÔΩ¢aÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§what is n octarine color‚ê§  in code  at /tmp/lDBA6q63wj line 1‚ê§¬ª

[22:48] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb>{} /= {~$0"~"n"}/; say $targetstr; #testing

[22:48] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/YbnNl45rdY‚ê§Two ter‚Ä¶¬ª

[22:48] <evalable6> irced, Full output: https://gist.github.com/db2fc010d8d5dbf4b959de77f6b0169e

[22:49] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb>{} /= {~$0"~"n"}/; say $/; #testing

[22:49] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/IM6QQikKhP‚ê§Two ter‚Ä¶¬ª

[22:49] <evalable6> irced, Full output: https://gist.github.com/be5b82eac4c71f5e71af5afdd8562524

[22:49] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb> /= {~$0"~"n"}/; say $/; 

[22:49] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/FwxpAjF2_J‚ê§Two ter‚Ä¶¬ª

[22:49] <evalable6> irced, Full output: https://gist.github.com/4475f007fec048fda3246d92cfc2182e

[22:49] <timotimo> i mean

[22:49] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>a<wb> /= ~$0"~"n"/; say $/; 

[22:49] <timotimo> m: my $targetstr = "what is a octarine color"; $targetstr ~~ s[ <wb>a<wb> )> ] = "n"; say $/; say $targetstr

[22:49] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´Use of Nil in string context‚ê§ÔΩ¢aÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§  in code  at /tmp/pA9t34imcG line 1‚ê§¬ª

[22:49] <evalable6> timotimo, rakudo-moar b6bbc3642: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§what is n octarine color‚ê§¬ª

[22:49] <timotimo> oh, wrong one

[22:49] <timotimo> m: my $targetstr = "what is a octarine color"; $targetstr ~~ s[ <wb>a<wb> <( ] = "n"; say $/; say $targetstr

[22:49] <evalable6> timotimo, rakudo-moar b6bbc3642: OUTPUT: ¬´ÔΩ¢ÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§what is an octarine color‚ê§¬ª

[22:50] * irced rubs his eyes

[22:50] <timotimo> oh, i derped totally

[22:51] <timotimo> m: my $targetstr = "what is a octarine color"; $targetstr ~~ s[ <wb>a<wb> ] = $/ ~ "n"; say $/; say $targetstr

[22:51] <evalable6> timotimo, rakudo-moar b6bbc3642: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§ wb => ÔΩ¢ÔΩ£‚ê§what is an octarine color‚ê§¬ª

[22:51] <timotimo> you weren't capturing anything so of course $0 was empty

[22:51] <irced> hmm, maybe there's another way. but i see your way is good! thanks for sharing.

[22:51] <irced> !

[22:52] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ (<wb>a<wb>){} /= {~$0"~"n"}/; say $targetstr; #testing

[22:52] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/Jtj7Jfayll‚ê§Two ter‚Ä¶¬ª

[22:52] <evalable6> irced, Full output: https://gist.github.com/59339c49a41fa50c55b54851b112d3d6

[22:52] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ [<wb>a<wb>]{} /= {~$0"~"n"}/; say $targetstr; #testing

[22:52] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/q0dsqYRC0C‚ê§Two ter‚Ä¶¬ª

[22:52] <evalable6> irced, Full output: https://gist.github.com/2ce6413be3b7c920ef17391fbc958ada

[22:52] * irced tries to capture.

[22:52] <timotimo> what's the = doing there

[22:52] <irced> oosp

[22:53] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>(a)<wb>{} /{~"$0"~"n"}/; say $targetstr; #testing

[22:53] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´what is an octarine color‚ê§¬ª

[22:53] <irced> by golly, you gave me an idea and it worked! thanks timotimo

[22:53] <timotimo> YW :)

[22:54] * irced touchdown irced! star quarterback timotimo shines again.

[22:54] *** mowcat left
[22:55] * irced dances in the inzone and points to the qb, as if to say, his dancing isn't all that.

[22:55] *** mowcat joined
[22:55] * irced no really, doesn't like being watched when he dances.

[22:56] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>(a)<wb> /{~"$0"~"n"}/; say $targetstr; #testing without {}

[22:56] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´what is an octarine color‚ê§¬ª

[22:59] <irced> p6: my $targetstr = "what is a octarine color"; $targetstr ~~ s/ <wb>(a)<wb> /{~"$0"~"n"}/; say $targetstr ~ " is not even a question but perhaps it has an answer"; #for fun

[22:59] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´what is an octarine color is not even a question but perhaps it has an answer‚ê§¬ª

[23:00] <irced> Xliff: tell us more about this JS object definition

[23:01] <Xliff> irced: Well, I am scraping a web page, and there is a JS object being defined in JS.

[23:01] *** pmurias left
[23:01] <Xliff> I want to get that object into something Perl6 can grok... ie JSON.

[23:01] <irced> Xliff: perhaps you can "pastebin" the text to parse

[23:01] <Xliff> The problem: I could convert that JS def to JSON, but doing so would be non-trivial at this point... as there is data in there that prevents the "easy" method of a regex.

[23:02] *** andrewalker joined
[23:02] <irced> or the javascript to parse anyway

[23:02] <Xliff> https://paste.fedoraproject.org/paste/xDCM03TdmPQuQOGDYXAOrg

[23:03] * irced passes out.

[23:03] <Xliff> LOL!

[23:03] <Xliff> There are ways...

[23:04] <Xliff> ( Ôæü‚àÄÔæü)ÔΩ±ÔæäÔæäÂÖ´ÂÖ´Ôæâ„ÉΩÔæâ„ÉΩÔæâ„ÉΩÔæâ Ôºº / Ôºº/ Ôºº

[23:04] * irced thinks he sees octarine.

[23:05] <irced> well, maybe you could, umm, use node.js first?

[23:05] <Xliff> Um. Well... that would be too simple.

[23:06] <Xliff> I want perl!

[23:06] <irced> umm, right, yes, i see

[23:06] <Xliff> (but node is a decent workaround... thanks!)

[23:06] <irced> do that thing with the air you just did, that was cool

[23:06] <Xliff> ( Ôæü‚àÄÔæü)ÔΩ±ÔæäÔæäÂÖ´ÂÖ´Ôæâ„ÉΩÔæâ„ÉΩÔæâ„ÉΩÔæâ Ôºº / Ôºº/ Ôºº

[23:06] <irced> nice

[23:07] <irced> so, i got nothing at the moment, channel ?

[23:08] *** pecastro left
[23:12] <irced> i don't have node installed atm but that might be really simple, simple as JSON.stringify(sidetoc_js) but my JS/Node.js is rusty as to how to interact with it via scripts

[23:13] <Xliff> YES!

[23:13] <Xliff> Hence the reason I want to avoid it, right now.

[23:15] <irced> how about perl? which I know absolutely nothing about except all the hype that is has a def module ecosystem

[23:16] *** pilne joined
[23:20] <vrurg> Xliff: interestingly enough, there are a couple of javascript modules on CPAN, but I don't know what they require to work.

[23:23] <irced> m: use Terminal::ANSIColor;

[23:23] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Terminal::ANSIColor at line 1 in:‚ê§    file#/home‚Ä¶¬ª

[23:23] <evalable6> irced, Full output: https://gist.github.com/99781eb28d329c9e1d94f43ddb04c0e4

[23:24] <irced> m: use lib 'data/all-modules/github/tadzik/Terminal-ANSIColor/'; use Terminal::ANSIColor; say "The colour of ", colored("octarine", "red");

[23:24] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´The colour of 04octarine‚ê§¬ª

[23:25] *** brian1729 left
[23:27] *** brian1729 joined
[23:31] <AlexDaniel> lol what it works as irc colors?

[23:32] <AlexDaniel> that's probably some magic that evalable6 is doing

[23:32] <irced> m: use lib 'data/all-modules/github/tadzik/Terminal-ANSIColor/'; my %colortable = a =>"red",d =>"yellow",q =>"magenta",r=>"green";my $toformat="Given a ‚àà ‚Ñ§ and d ‚àà ‚Ñ§+, there are unique integers q and r, with 0 ‚â§ r < d, st a = d * q + r"; $toformat ~~ s:g/ <wb>(<[adqr]>)<wb> /{ colored("$0", %colortable{$0}) }/; say $toformat;

[23:32] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/AcUyLdE8XJ‚ê§Undeclared routine:‚ê§    colored used at line 1‚ê§‚ê§¬ª

[23:32] <irced> m: use lib 'data/all-modules/github/tadzik/Terminal-ANSIColor/';use Terminal::ANSIColor;my %colortable = a =>"red",d =>"yellow",q =>"magenta",r=>"green";my $toformat="Given a ‚àà ‚Ñ§ and d ‚àà ‚Ñ§+, there are unique integers q and r, with 0 ‚â§ r < d, st a = d * q + r"; $toformat ~~ s:g/ <wb>(<[adqr]>)<wb> /{ colored("$0", %colortable{$0}) }/; say $toformat;

[23:32] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´Given 04a ‚àà ‚Ñ§ and 08d ‚àà ‚Ñ§+, there are unique integers 06q and 03r, with 0 ‚â§ 03r < 08d, st 04a = 08d * 06q + 03r‚ê§¬ª

[23:33] <irced> m: use lib 'data/all-modules/github/tadzik/Terminal-ANSIColor/';use Terminal::ANSIColor;my %colortable = a =>"red",d =>"yellow",q =>"magenta",r=>"green";my $toformat="Given a ‚àà ‚Ñ§ and d ‚àà ‚Ñ§+, there are unique integers q and r, with 0 ‚â§ r < d, st a = d * q + r"; $toformat ~~ s:g/ <wb>(<[adqr]>)<wb> /{ colored("$0", %colortable{$0}) }/; print $toformat;

[23:33] <evalable6> irced, rakudo-moar b6bbc3642: OUTPUT: ¬´Given 04a ‚àà ‚Ñ§ and 08d ‚àà ‚Ñ§+, there are unique integers 06q and 03r, with 0 ‚â§ 03r < 08d, st 04a = 08d * 06q + 03r¬ª

[23:35] <irced> and you can take that to the bank

[23:35] <irced> but they might call security on you, the ones with the white coats

[23:36] <irced> unless you say that a is also divisible by some number which may or may not leave a remainder

[23:36] <irced> then they'll just ignore you

[23:38] <irced> and might add, "pretty colors", especially if there is a customer wearing tai-die

[23:38] * irced goes back to being relevant.

[23:39] *** wamba left
[23:43] <irced> .tell Elronnd glad i was able to help, i know what you're thinking tho, what the heap!

[23:43] <tellable6> irced, I'll pass your message to Elronnd

[23:54] <Geth> ¬¶ problem-solving: vrurg assigned to jnthn Issue A threat of full CORE duplication for each language revision https://github.com/perl6/problem-solving/issues/104

[23:56] <vrurg> irced is flapping. Would he be a test we'd need to fit him!

[23:56] <vrurg> *fix him

[23:56] * irced checks his circuits guardedly.

[23:57] * irced steps thru his lifecycle.

[23:58] *** leont left
[23:58] * irced appears to be having tremendous difficulty.

[23:59] * irced concurs with vrurg.

