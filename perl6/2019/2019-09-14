[00:05] *** reach_satori joined
[00:08] <Xliff> m: "/path/to/myfile".IO.extension('pm6').say

[00:08] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´"/path/to/myfile".IO‚ê§¬ª

[00:08] <Xliff> ?!?

[00:08] <Xliff> ^^ Why not end in .pm6?

[00:08] <Xliff> m: "/path/to/myfile".IO.extension('pm6', joiner => '.').say

[00:08] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´"/path/to/myfile".IO‚ê§¬ª

[00:09] *** lucasb left
[00:09] <Xliff> m: "/path/to/myfile".IO.extension('pm6', joiner => '.').dirname.say

[00:09] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´/path/to‚ê§¬ª

[00:09] <Xliff> m: "/path/to/myfile/".IO.extension('pm6', joiner => '.').say

[00:09] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´"/path/to/myfile".IO‚ê§¬ª

[00:09] <Xliff> m: "/path/to/myfile.".IO.extension('pm6', joiner => '.').say

[00:09] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´"/path/to/myfile.pm6".IO‚ê§¬ª

[00:18] *** netrino left
[00:38] *** wildtrees left
[00:40] *** leont left
[00:41] *** khisanth_ left
[00:53] <SmokeMachine> https://fco.github.io/Red/API

[00:54] *** khisanth_ joined
[00:59] <vrurg> SmokeMachine++!!

[01:06] <cpan-p6> New module released to CPAN! FindBin (0.4.5) by 03LEMBARK

[01:09] <Xliff> I helped with that!

[01:10] <Xliff> SmokeMachine: You could do with less gutter space on the horizontal. It looks nice but it really curbs ones ability to see your code examples. Especially for Red.pm6

[01:11] <Xliff> Still. Very sharp! :)

[01:12] <SmokeMachine> Xliff: Yes... I'm planning on removing the comments on Red.pm...

[01:12] <Xliff> OK. Still, those examples are good.

[01:12] <Xliff> I would suggest breaking that long bit into discrete blocks, so that users can have a visible horizontal scroll bar.

[01:13] <Xliff> The SYNOPSIS section in particular.

[01:13] <Xliff> If you want, I can see if I can do that and submit a PR...

[01:14] <Xliff> Also.... hit 280Kloc in p6-GtkPlus related code, today! :>

[01:20] <SmokeMachine> Xliff: yes, please!

[01:21] <SmokeMachine> Xliff: 280K?!very big, isn't it?!

[01:25] <SmokeMachine> Xliff: is it better now? https://fco.github.io/Red/api/Red the comments still are on README.md...

[01:40] *** molaf left
[01:41] <Xliff> SmokeMachine: Better? Yes, and no. The comments were helpful.

[01:42] <Xliff> I will have to update and go back to a point where I can modify and show you what I mean.

[01:42] <Xliff> I may have to install Markdown and a reverse proxy and poke holes in my firewall..

[01:42] <Xliff> Or....

[01:43] <Xliff> Are the style sheets and stuff available in the repo? If so, then that's something I could work on.

[01:43] <Xliff> And yes... 280K is very big. 

[01:43] <Xliff> See: https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[01:53] *** molaf joined
[01:54] *** HoboWithAShotgun left
[02:08] *** Cabanossi left
[02:13] <cpan-p6> New module released to CPAN! Tomty (0.0.5) by 03MELEZHIK

[02:17] *** Cabanossi joined
[02:17] <Elronnd> s/

[02:18] <Xliff> SmokeMachine: PR submitted. Please check to insure I didn't overwrite anything important.

[02:19] <Xliff> BBL

[02:19] *** Xliff left
[02:29] *** adu joined
[02:37] *** kst left
[02:40] *** Kaiepi left
[02:41] *** ravenousmoose joined
[02:45] *** Xliff joined
[02:46] *** ravenousmoose left
[03:46] *** squashable6 left
[03:46] *** evalable6 left
[03:46] *** reportable6 left
[03:47] *** bloatable6 joined
[03:47] *** ChanServ sets mode: +v bloatable6

[03:47] *** bisectable6 joined
[03:47] *** ChanServ sets mode: +v bisectable6

[03:47] *** statisfiable6 joined
[03:47] *** reportable6 joined
[03:47] *** ChanServ sets mode: +v reportable6

[03:47] *** notable6 joined
[03:47] *** ChanServ sets mode: +v notable6

[03:47] *** nativecallable6 joined
[03:47] *** ChanServ sets mode: +v nativecallable6

[03:47] *** releasable6 joined
[03:47] *** ChanServ sets mode: +v releasable6

[03:48] *** benchable6 joined
[03:48] *** quotable6 joined
[03:48] *** ChanServ sets mode: +v quotable6

[03:48] *** shareable6 joined
[03:48] *** ChanServ sets mode: +v shareable6

[03:48] *** squashable6 joined
[03:48] *** ChanServ sets mode: +v squashable6

[03:49] *** unicodable6 joined
[03:49] *** committable6 joined
[03:49] *** ChanServ sets mode: +v committable6

[03:50] *** evalable6 joined
[03:50] *** ChanServ sets mode: +v evalable6

[03:50] *** greppable6 joined
[03:51] *** coverable6 joined
[03:51] *** ChanServ sets mode: +v coverable6

[03:51] *** tellable6 joined
[03:53] <Xliff> .

[03:55] *** rindolf left
[03:55] <Elronnd> ..

[04:04] <Xliff> ...

[04:26] <Elronnd> ....

[04:26] <Elronnd> m: ....

[04:26] <evalable6> Elronnd, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/IWGIY1yFVn‚ê§Malformed postfix call‚ê§at /tmp/IWGIY1yFVn:1‚ê§------> 03....08‚èè04<EOL>‚ê§¬ª

[04:27] <Xliff> Elronnd: No.. you were SUPPOSED to respond with '.....'. I will leave it to you to figure out why! ;P

[04:27] <Xliff> Although there is an argument for me to respond with '........'

[04:28] <Xliff> Actually... no... there isn't. I responded with '...'!

[04:36] <Elronnd> fibonacci?

[04:49] *** Xliff left
[04:58] *** wamba joined
[04:59] *** adu left
[04:59] *** aborazmeh joined
[04:59] *** aborazmeh left
[04:59] *** aborazmeh joined
[05:08] *** jaldhar joined
[05:15] *** jaldhar left
[05:15] *** sauvin joined
[05:15] *** jaldhar joined
[05:21] *** jaldhar left
[05:21] *** jaldhar joined
[05:34] *** holyghost joined
[05:35] *** jaldhar_ joined
[05:37] *** jaldhar_ left
[05:37] *** jaldhar_ joined
[05:39] *** jaldhar left
[05:39] *** jaldhar_ left
[05:39] *** jaldhar_ joined
[05:41] *** jaldhar_ left
[05:41] *** jaldhar_ joined
[05:45] *** shlomif joined
[05:45] *** shlomif is now known as rindolf

[05:51] *** wamba left
[05:52] *** dwarring left
[06:27] *** aborazmeh left
[06:37] *** aborazmeh joined
[06:37] *** aborazmeh left
[06:37] *** aborazmeh joined
[06:40] *** HoboWithAShotgun joined
[07:16] *** aborazmeh left
[07:19] *** aborazmeh joined
[07:19] *** aborazmeh left
[07:19] *** aborazmeh joined
[07:20] *** rindolf left
[07:25] *** sena_kun joined
[07:27] *** aborazmeh_ joined
[07:27] *** aborazmeh_ left
[07:27] *** aborazmeh_ joined
[07:28] *** aborazmeh left
[07:28] *** aborazmeh_ is now known as aborazmeh

[07:47] *** aborazmeh left
[08:01] *** ravenousmoose joined
[08:40] *** Actualeyes joined
[08:44] *** Actualeyes left
[08:58] *** HoboWithAShotgun left
[08:59] *** leont joined
[09:01] *** eseyman left
[09:03] *** ravenousmoose left
[09:12] *** eseyman joined
[09:13] *** aborazmeh joined
[09:13] *** aborazmeh left
[09:13] *** aborazmeh joined
[09:49] *** aborazmeh left
[10:11] <Geth> ¬¶ doc: a4cabe4f62 | (JJ Merelo)++ | doc/Language/about.pod6

[10:11] <Geth> ¬¶ doc: Fixes meta, refs #3024

[10:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a4cabe4f62

[10:11] <Geth> ¬¶ doc: 3825edbeb7 | (JJ Merelo)++ | doc/Language/classtut.pod6

[10:11] <Geth> ¬¶ doc: Joins meta, refs #3024

[10:11] <synopsebot> Link: https://doc.perl6.org/language/about

[10:11] <synopsebot> Link: https://doc.perl6.org/language/classtut

[10:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3825edbeb7

[10:11] <Geth> ¬¶ doc: b65abb0e26 | (JJ Merelo)++ | doc/Language/faq.pod6

[10:11] <synopsebot> Link: https://doc.perl6.org/language/faq

[10:11] <Geth> ¬¶ doc: Fixs meta, refs #3024

[10:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b65abb0e26

[10:18] *** Black_Ribbon left
[10:42] *** dogbert17 joined
[11:01] *** netrino joined
[11:06] *** CIAvash left
[11:20] *** chloekek joined
[11:25] *** HoboWithAShotgun joined
[11:37] <sena_kun> anyone around to asnwer my Red questions? SmokeMachine?

[11:44] <SmokeMachine> sena_kun: how can I help you?

[11:45] *** cpan-p6 left
[11:45] <sena_kun> SmokeMachine, in `model Foo is rw {}` what does rw trait do? I assumed it turns all columns into rw, but that doesn't work.

[11:45] *** cpan-p6 joined
[11:45] *** cpan-p6 left
[11:45] *** cpan-p6 joined
[11:45] <SmokeMachine> sena_kun: it should... but I think that‚Äôs a bug...

[11:46] <SmokeMachine> sena_kun: it should work just as `class Foo is rw {}` but if it isn‚Äôt, it‚Äôs a bug...

[11:47] <sena_kun> I see, thank you. I think https://github.com/FCO/Red/issues/364 reports it, but the documentation-side

[11:48] <sena_kun> I'll avoid it for now

[11:52] <SmokeMachine> sena_kun: when I wrote the synopsis it was working... something I‚Äôve changed may has broken that...

[11:52] <SmokeMachine> sena_kun: (I should have more tests...)

[12:31] *** rindolf joined
[12:39] *** aborazmeh joined
[12:39] *** aborazmeh left
[12:39] *** aborazmeh joined
[12:57] <MasterDuke> are there dates established for the 2020 amsterdam conference?

[13:03] *** lucasb joined
[13:20] <SmokeMachine> Xliff: I've made a few changes... but what do you think? https://fco.github.io/Red/api/Red

[13:20] <tellable6> SmokeMachine, I'll pass your message to Xliff

[13:28] <cpan-p6> New module released to CPAN! BDD::Behave (0.0.3) by 03GDONALD

[13:45] *** dogbert17 left
[13:46] <discord6> <RaycatWhoDat> Quick question

[13:46] *** aborazmeh left
[13:47] <discord6> <RaycatWhoDat> Is there a PasteBin or CodePen-esque page for Perl 6?

[13:47] <discord6> <RaycatWhoDat> One that y'all specifically use?

[13:50] <sena_kun> I don't think there is anything that everyone use. I usually use github gists.

[13:51] *** epony left
[14:01] *** mowcat left
[14:03] *** mowcat joined
[14:04] *** mowcat left
[14:10] <tbrowder> hi, all!

[14:10] <tellable6> 2019-09-03T06:12:06Z #perl6 <jmerelo> tbrowder what seems to be the problem? installing it or setting it up? Can we maybe talk this afternoon to get it going?

[14:12] <tbrowder> the docs page is still broken. there should be six language sections but only five are showing.

[14:14] <tbrowder> .tell jmerelo i've been afk for a while. i am available most of today.

[14:14] <tellable6> tbrowder, I'll pass your message to jmerelo

[14:16] *** HoboWithAShotgun left
[14:28] *** HoboWithAShotgun joined
[14:34] *** wamba joined
[14:43] *** epony joined
[14:53] *** marmor joined
[14:56] <sena_kun> SmokeMachine, `id`, for example in `so $attr.column.id` checks only if it is PRIMARY KEY or e.g. UNIQUE columns too? What does `id` mean (precisely) in sql?

[14:58] *** number6` joined
[14:58] *** HoboWithAShotgun left
[14:59] <sena_kun> `self.columns(type).grep(*.column.id).list` <- does it support composite primary keys? because I wonder why is it not a `self.columns(type).first(*.column.id)`.

[15:09] <sena_kun> https://github.com/FCO/Red/blob/master/lib/MetamodelX/Red/OnDB.pm6#L28 <- is this correct? I might be wrong, but it looks like it should use `set_value` to me. ping SmokeMachine

[15:12] *** kylese joined
[15:15] *** marmor left
[15:32] *** HoboWithAShotgun joined
[15:36] *** guifa2 left
[15:42] *** kylese left
[15:54] <SmokeMachine> sena_kun: Id mean primary key...

[15:55] <SmokeMachine> yes, it accepts composite pas...

[15:58] *** Kaiepi joined
[15:58] <SmokeMachine> s/pas/pks/

[16:03] <number6`> hey everyone. is it possible to open a buffer in emacs from perl6? i want to generate files with boilerplate (not necessarily  code) and have them be opened in an emacs buffer. for code i do this with autoinsert and yasnippet but i was wondering if i could do it through perl6. thanks!

[16:03] *** pecastro joined
[16:04] <SmokeMachine> sena_kun: I don't think so... it's using the attribute stored inside to the attribute...

[16:12] *** jjatria joined
[16:19] *** HoboWithAShotgun left
[16:22] *** dogbert17 joined
[16:23] *** jjatria left
[16:28] *** jjatria joined
[16:29] *** jjatria left
[16:31] *** HoboWithAShotgun joined
[16:32] *** jjatria joined
[16:52] <SmokeMachine> sena_kun: https://github.com/FCO/Red/issues/364 fixed!

[17:08] *** HoboWithAShotgun left
[17:13] <sena_kun> number6`, you can create a file in temp location ($*TMPDIR) and run `emacs filename.foo`, then await it and then grab the content && process it

[17:13] <SmokeMachine> sena_kun: thank you very much!

[17:13] <SmokeMachine> I've added 2 comments on that PR, but I'm begging it now...

[17:13] <SmokeMachine> sena_kun: ^^

[17:15] <sena_kun> SmokeMachine, great, also you can create a regression test with just https://gist.github.com/Altai-man/fd7583e7c291117b57fec9b96195c71f to prevent breaking it in the future

[17:17] <sena_kun> SmokeMachine, thanks for a review! Please, next time wait a bit with merging if there are things to fix... I'll write a patch now...

[17:17] <SmokeMachine> sena_kun: https://github.com/FCO/Red/blob/master/t/26-is-rw.t

[17:18] <sena_kun> SmokeMachine, you are great.

[17:25] *** mowcat joined
[17:25] *** HoboWithAShotgun joined
[17:34] <number6`> sena_kun: thanks!

[17:40] <MasterDuke> .ask samcv are there dates established for the 2020 amsterdam conference?

[17:40] <tellable6> MasterDuke, I'll pass your message to samcv

[17:44] *** domidumont joined
[17:50] <lizmat> MasterDuke: no, there aren't any dates fixed yet, but hopefully soon

[17:51] <lizmat> weekly: http://news.perlfoundation.org/2019/09/final-grant-report---moarvm-ji.html

[17:51] <notable6> lizmat, Noted! (weekly)

[17:51] <MasterDuke> lizmat: ah, thanks. but am i imagining that it would be in may?

[17:53] <lizmat> MasterDuke: I can't really say whether you are or aren't

[17:53] <MasterDuke> heh, i guess i'll find out eventually

[17:55] <lizmat> sorry I couldn't be more informative, maybe samcv will be able / willing to say more

[17:55] *** daxim left
[18:23] *** mowcat left
[18:31] *** natrys joined
[18:32] <samcv> MasterDuke, well. there are dates but unannounced

[18:32] <tellable6> 2019-09-14T17:40:38Z #perl6 <MasterDuke> samcv are there dates established for the 2020 amsterdam conference?

[18:33] <samcv> pm me if you want to know the tentative dates. will be announced when all paperwork signed etc

[18:34] <SmokeMachine> sena_kun: the grep‚Äôs block receive just one argument... that‚Äôs why a block generated by 2 whatever star will not work...

[18:34] *** domidumont left
[18:35] *** domidumont joined
[18:37] <El_Che> samcv: same place of the the last time in Amsterdam?

[18:38] *** reportable6 left
[18:40] *** domidumont left
[18:41] *** reportable6 joined
[18:41] *** ChanServ sets mode: +v reportable6

[18:41] <samcv> El_Che, nope

[18:41] <samcv> Here are my slides for more info https://cry.nu/TPC-2020-proposal/

[18:41] <samcv> if you want a teaser

[18:44] <El_Che> wow

[18:45] *** Black_Ribbon joined
[18:51] *** wamba left
[18:53] *** zakharyas joined
[18:56] *** wamba joined
[18:56] <DrForr> samcv: I used to live about 4 blocks from The Jewel :)

[18:57] *** mowcat joined
[18:57] <El_Che> DrForr: where are you based nowadays?

[18:57] <DrForr> Seattle, sadly. 

[18:57] <El_Che> Oh, I see

[18:58] <El_Che> hopefully you'll find your way back soon

[18:59] <DrForr> Right now I just need to find my way. I'm doing fine monetarily, it's just ... life.

[18:59] <DrForr> . o ( "Don't talk to me about life." )

[18:59] <DrForr> I lived on Postjeskade, little place with a canal view.

[18:59] <El_Che> Good luck on that front, it can be difficult at times

[19:00] <DrForr> Nod.

[19:01] <DrForr> OTOH after Prague and I parted ways I ended up in 12 countries in less than 3 months. I've found another way to do that, but I need to take a few test trips before that.

[19:02] <El_Che> it sounds tiring

[19:02] <DrForr> No question, but fun nonetheless.

[19:03] <El_Che> I spent 2 years of my life travelling non-stop with all my belongings in a backpack, while it was a life experienced, we were tired at the end

[19:06] *** rindolf left
[19:07] <DrForr> Nicely done. I was working most of the time throughout that, so I'm looking at a change for this year's vacation. I've done the cruise thing once in my life, and it was pretty much ruined because I was with my entire team and we were working 10-hour days on the ship.

[19:07] <El_Che> yeah, sounds more like a management trick than vacation

[19:09] <DrForr> Pretty much a threat. Shortly afterwards, after putting in several 12-hour days and 10-hour weekends trying to repair a f*ckup someone *else* had done by restarting a server out of sequence, I was let go for "not working hard enough."

[19:09] <El_Che> what the hell

[19:10] <DrForr> My boss sucked at communicating what his workers did to *his* boss.

[19:13] <El_Che> incredible

[19:13] <DrForr> He was new at it, I can't blame him... too much.

[19:14] *** mowcat left
[19:15] * DrForr installs browserify in the hopes that it does a better job than webpack... anyone that complains about the perl[56] ecosystems and holds Javascript up as a paragon of virtue needs to look at their own tools.

[19:18] <DrForr> (the cro demo w/ websockets uses webpack for JS, and I'm pretty sure it's been broken for several months - looking at SO and other places just lands me in a hell of dependencies.)

[19:19] *** pecastro left
[19:21] *** agentzh joined
[19:21] <DrForr> Working on an article about this, hopefully I'll have something this afternoon.

[19:23] <El_Che> DrForr: if you think devs hate dependencies, think of the poor admins

[19:24] <DrForr> Oh, I know, having been on both sides...

[19:24] <El_Che> same

[19:31] <DrForr> Well, bundling by hand seems to work...

[19:31] <sena_kun> >webpack is broken in cro examples

[19:31] <sena_kun> can I just quit this job?

[19:32] <DrForr> It's not cro's fault, and if I put that in there it was only as a note.

[19:32] <DrForr> And that's why I'm playing with browserify. It seems to be able to bundle up one file's worth of JS, which is better than what webpack was doing.

[19:32] <sena_kun> DrForr, no problem, and thanks a lot for writing it, because we have to fix it anyway, even if it's not ours fault

[19:33] <DrForr> I think if you can get it to load '@babel/core' rather than 'babel-core' you'll be able to load v7.0 which gets around the brokenness.

[19:38] <DrForr> sena_kun: 'npm run build' runs with no errors using browserify, although I'll want to do something more sophisticated than what I'm doing.

[20:01] *** daxim joined
[20:10] *** natrys left
[20:12] <number6`> what is the perl 6 equivalent of "while (<>) {...}" ? or is that functionality something that is discouraged in p6?

[20:15] <sena_kun> for $*IN.lines ?

[20:15] <MasterDuke> number6`: something like `for $*IN.lines {}`

[20:16] <El_Che> https://docs.perl6.org/language/5to6-nutshell#while_until

[20:17] <number6`> sena_kun: will that accept multiple files sent from the command line and return all lines inside each file?

[20:17] <number6`> El_Che: thanks

[20:17] <El_Che> although the form for $*In.lines -> $line { } is nicer

[20:17] * AlexDaniel shrugs

[20:17] <El_Che> if you have a file: for 'huge-csv'.IO.lines -> $line { }

[20:18] <AlexDaniel> lately I've been optimizing my code for word count :D

[20:18] *** sena_kun left
[20:18] <El_Che> AlexDaniel: how perlish of you

[20:18] <AlexDaniel> I dunno, there's just something about looking at a short piece of code and thinking ‚Äúoh, that's pretty short, it'll be easy to understand it‚Äù

[20:19] <El_Che> AlexDaniel: implicite stuff is often more difficult to understand, or easier to misunderstand

[20:19] <MasterDuke> number6`: for that you want 'for $*ARGFILES.lines {}'

[20:19] <AlexDaniel> I know, but it's not techical, more like psychological

[20:20] <number6`> El_Che: so there's no way to automatically retrieve multiple files sent from the command line and process them inside a for loop?

[20:20] <AlexDaniel> helps staying in flow too

[20:20] <AlexDaniel> m: for $*IN.lines.rotor(3) -> ($line1, $line2, $line3) { say $line1 }

[20:20] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´‚ô•ü¶ã Ííõ„é≤‚Çä‚º¶üÇ¥‚ßø‚åü‚ìú‚âπ‚Ñª‚ÄÖüò¶‚¶Äüåµ‚ÄÇüñ∞„å≤‚é¢‚û∏ üêçüíî‚ÄÉüó≠‚Ä¶¬ª

[20:20] <evalable6> AlexDaniel, Full output: https://gist.github.com/1fdd0fe3be8f55c30362ec3f3fcb73ee

[20:21] <AlexDaniel> number6`: ‚Üë

[20:21] <AlexDaniel> oh sorry

[20:21] <AlexDaniel> multiple files, not lines, I misread

[20:21] <El_Che> psychological, you said

[20:21] <AlexDaniel> $*ARGFILES something?

[20:22] <AlexDaniel> m: for $*ARGFILES { .say }

[20:22] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) say not yet implemented. Sorry.‚ê§  in block <unit> at /tmp/iiqsW5QIGJ line 1‚ê§‚ê§¬ª

[20:22] <AlexDaniel> m: for $*ARGFILES.lines { .say }

[20:22] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´‚ô•ü¶ã Ííõ„é≤‚Çä‚º¶üÇ¥‚ßø‚åü‚ìú‚âπ‚Ñª‚ÄÖüò¶‚¶Äüåµ‚ÄÇüñ∞„å≤‚é¢‚û∏ üêçüíî‚ÄÉüó≠‚Ä¶¬ª

[20:22] <evalable6> AlexDaniel, Full output: https://gist.github.com/10caf044f4de3166b09a3745ec317811

[20:23] <AlexDaniel> this stdin is a bit too unicodey :D

[20:23] *** domidumont joined
[20:24] <number6`> AlexDaniel: so in that output each line is the contents of a single file?

[20:25] *** domidumont left
[20:25] <AlexDaniel> number6`: hmm not sure I understand the question, but if you run your script with multiple files in args like `./foo.p6 file1 file2 file3` then $*ARGFILES.lines will go over all files

[20:25] <AlexDaniel> number6`: is it what you wanted or am I still misunderstanding your question? :)

[20:27] <number6`> AlexDaniel: yes, that's what I was asking, to be able to process the contents of multiple files sent from the command (as filenames) one at a time. thanks!

[20:27] <AlexDaniel> number6`: oh‚Ä¶ so as filenames, not as lines?

[20:28] <AlexDaniel> so for each file?

[20:28] <AlexDaniel> separately?

[20:28] <Voldenet> > for lines().map(*.IO.lines) { .say }

[20:29] <Voldenet> not sure if I understood the question correctly

[20:29] <AlexDaniel> if so, then maybe using `sub MAIN(*@files) {}` is better? There's also $*ARGFILES.handles‚Ä¶

[20:31] <number6`> AlexDaniel: yeah, like if file1 has 10 lines, file2 has 5 lines, file3 has some number of lines, then "perl6 my_script file1 file2 file3" would be able to process all the lines in file1, then the lines in file2, then the lines in file3. just like "while (<>) {...}" does in perl

[20:31] <AlexDaniel> number6`: oh, then $*ARGFILES.lines it is. Sorry I haven't touched perl5 in a while :)

[20:32] <AlexDaniel> number6`: one thing to keep in mind is how it's going to handle \r\n

[20:32] <AlexDaniel> number6`: if you're building unix tools that is

[20:32] <AlexDaniel> iirc it'll split on \r\n too, which is not exactly what you want for command line tools

[20:33] <number6`> AlexDaniel: so the code would be "for $*ARGFILES.lines {...}"?

[20:34] <number6`> what would the topic variable represent in that code? the current file?

[20:35] <number6`> Voldenet: thank you

[20:35] <AlexDaniel> number6`: each line

[20:35] <AlexDaniel> number6`: as in `for $*ARGFILES.lines -> $_ {...}` or so

[20:36] <AlexDaniel> m: spurt ‚Äòsandbox/file1‚Äô, ‚Äúhello\nworld\n‚Äù

[20:36] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´¬ª

[20:36] <AlexDaniel> m: spurt ‚Äòsandbox/file2‚Äô, ‚Äúfoo\nbar\nbaz\n‚Äù

[20:36] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´¬ª

[20:37] <AlexDaniel> m: run <perl6 -e>, ÔΩ¢for $*ARGFILES.lines { .say }ÔΩ£, <sandbox/file1 sandbox/file2>

[20:37] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´hello‚ê§world‚ê§foo‚ê§bar‚ê§baz‚ê§¬ª

[20:37] <AlexDaniel> m: run <perl6 -e>, ÔΩ¢for $*ARGFILES.lines -> $_ { .say }ÔΩ£, <sandbox/file1 sandbox/file2>

[20:37] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´hello‚ê§world‚ê§foo‚ê§bar‚ê§baz‚ê§¬ª

[20:38] <AlexDaniel> number6`: it's a good question btw, if you have more please don't hesitate :)

[20:40] <number6`> AlexDaniel: i tried for $*ARGFILES.lines and it did what i wanted. thanks for your help!

[20:40] <number6`>  

[20:41] <AlexDaniel> you're welcome :)

[20:43] <number6`> AlexDaniel: btw, i notice folks here typing "m: ..." which i assume invokes some sort of evaluator. what is the etiquette on that?

[20:43] <AlexDaniel> number6`: ‚Äúdon't try to break it‚Äù, and that's about it :)

[20:44] *** krychu joined
[20:44] <number6`> AlexDaniel: haha ok cool. what does the 'm' stand for?

[20:45] <AlexDaniel> number6`: moarvm, there used to be a bot that was able to run stuff on rakudo-jvm too

[20:45] <AlexDaniel> p6: say ‚Äòthis works too‚Äô

[20:45] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´this works too‚ê§¬ª

[20:45] <AlexDaniel> say ‚Äòproper code even runs fine without m: !‚Äô

[20:45] <AlexDaniel> say ‚Äòproper code even runs fine without m: !‚Äô # ok, maybe not always‚Ä¶

[20:45] <evalable6> AlexDaniel, rakudo-moar ef2ee7912: OUTPUT: ¬´proper code even runs fine without m: !‚ê§¬ª

[20:46] <AlexDaniel> :)

[20:46] <number6`> m: for 1..2 {say "Thanks!";}

[20:46] <number6`>  

[20:46] <evalable6> number6`, rakudo-moar ef2ee7912: OUTPUT: ¬´Thanks!‚ê§Thanks!‚ê§¬ª

[20:47] <number6`> haha, neat

[21:02] *** number6` left
[21:03] *** number6` joined
[21:10] *** Kaiepi left
[21:10] *** Kaiepi joined
[21:14] *** squashable6 left
[21:17] *** squashable6 joined
[21:17] *** ChanServ sets mode: +v squashable6

[21:24] *** wamba left
[21:25] *** MilkmanDan left
[21:25] *** MilkmanDan joined
[21:32] *** MilkmanDan left
[21:34] *** MilkmanDan joined
[21:37] *** jaldhar_ left
[21:38] *** jaldhar_ joined
[21:45] *** jaldhar_ left
[21:45] *** jaldhar_ joined
[21:47] *** chloekek left
[21:47] *** jaldhar_ left
[21:47] *** jaldhar_ joined
[21:49] *** jaldhar_ left
[21:49] *** jaldhar_ joined
[21:50] <DrForr> And of course babel is actually required for react, or something like that. Scrapping article, rewriting.

[21:51] *** jaldhar_ left
[21:51] *** jaldhar_ joined
[21:53] <DrForr> Hrm, react seems to have installed w/o requiring babel, maybe progress is being made...

[21:53] *** jaldhar_ left
[21:53] *** jaldhar_ joined
[21:56] *** zakharyas left
[21:57] *** jaldhar_ left
[21:57] *** jaldhar_ joined
[21:58] *** cpage_ joined
[22:01] *** cpage left
[22:01] *** cpage_ is now known as cpage

[22:02] *** Cabanossi left
[22:06] *** Cabanossi joined
[22:07] *** jaldhar_ left
[22:07] <Voldenet> DrForr: react doesn't need anything but react and react-dom

[22:07] *** jaldhar_ joined
[22:09] *** kst joined
[22:12] <DrForr> Voldenet: Okay, so it's down to my packaging then. If webpack didn't require babel... looking at that now...

[22:12] <DrForr> It'd also be a simple edit to make in the cro single-page docs.

[22:13] *** jaldhar_ left
[22:13] *** jaldhar_ joined
[22:16] *** number6` left
[22:16] <Voldenet> you don't also need webpack for react

[22:16] *** number6`` joined
[22:16] <Voldenet> You do need babel for jsx, but it's not strictly required

[22:19] <DrForr> Ah. It's mentioned in the cro single-page docs, which is why I've been trying to figure out how to work around it. I wasn't keeping close enough tabs on the install process, I suppose.

[22:23] *** jaldhar_ left
[22:23] *** jaldhar_ joined
[22:27] *** jaldhar_ left
[22:27] *** jaldhar_ joined
[22:37] *** number6`` left
[22:38] <DrForr> Installing React and adding the code, w/o any Babel references...

[22:51] <DrForr> And the JS works if you rewrite it to not use Babel, Go figure :)

[22:53] *** lucasb left
[22:53] <DrForr> Of course fixing Babel or giving the right instructions to install the thing would be TRT. I'm still a bit amazed that it seems to be broken; Reactjs.org writes their tutorials in JSX.

[23:01] *** jaldhar_ left
[23:01] *** jaldhar_ joined
[23:20] *** krychu left
[23:26] <Demos[m]> is there a function/operator that will bind a a parameter in a block

[23:26] * Demos[m] sent a long message:  < https://matrix.org/_matrix/media/v1/download/matrix.org/YnAXnrcPimaOrNBdhyCrEnRH >

[23:27] <Demos[m]> where some.method takes a parameter, and $p is passed to that parameter

[23:39] *** jaldhar_ left
[23:39] *** jaldhar_ joined
[23:41] *** jaldhar_ left
[23:41] *** jaldhar_ joined
[23:43] *** jaldhar_ left
[23:43] *** jaldhar_ joined
[23:44] *** rindolf joined
[23:44] *** adu joined
[23:56] *** mowcat joined
