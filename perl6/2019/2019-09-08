[00:00] <squashable6> 🍕 Xliff++ wrote a comment on “Error occurred in Red::Driver::CommonSQL”: https://github.com/FCO/Red/issues/357#issuecomment-529156262

[00:00] <squashable6> 🍕 Xliff++ closed issue “Error occurred in Red::Driver::CommonSQL”: https://github.com/FCO/Red/issues/357

[00:30] *** wildtrees left
[00:39] *** leont left
[00:44] <Xliff> $io-path.relative.split( $*SPEC.dir-sep ) -- is there a better way?

[00:45] <timotimo> there's $*SPEC.splitdir

[01:03] <squashable6> 🍕 Xliff++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529159300

[01:03] <Xliff> timotimo++

[01:05] <Xliff> squashable6: status

[01:05] <squashable6> Xliff, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈10 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[01:05] <squashable6> Xliff, Log and stats: https://gist.github.com/8d19231072a8172e528b90367794df49

[01:10] *** Sgeo__ left
[01:10] *** Sgeo__ joined
[01:13] *** Xliff left
[01:21] *** lucasb left
[01:22] *** adu left
[01:46] *** netrino left
[01:48] <SmokeMachine> Xliff: I was wondering... maybe it would be cool to use something like this: https://github.com/FCO/pulp/blob/master/pulp.p6#L39

[01:48] <tellable6> SmokeMachine, I'll pass your message to Xliff

[01:48] *** kybr left
[01:49] <SmokeMachine> sena_kun:  I was wondering... maybe it would be cool to use something like this: https://github.com/FCO/pulp/blob/master/pulp.p6#L39

[01:49] <tellable6> SmokeMachine, I'll pass your message to sena_kun

[02:02] *** kybr joined
[02:04] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:09] *** Cabanossi left
[02:12] *** Cabanossi joined
[02:16] *** gdonald joined
[02:20] <squashable6> 🍕 FCO++ wrote a comment on “Document how to delete a…”: https://github.com/FCO/Red/issues/320#issuecomment-529162907

[02:20] <squashable6> 🍕 FCO++ closed issue “Document how to delete a…”: https://github.com/FCO/Red/issues/320

[02:20] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.ast`”: https://github.com/FCO/Red/issues/216#issuecomment-529162933

[02:20] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.minus`”: https://github.com/FCO/Red/issues/215#issuecomment-529162939

[02:20] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.minus`”: https://github.com/FCO/Red/issues/215

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.ast`”: https://github.com/FCO/Red/issues/216

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.intersect`”: https://github.com/FCO/Red/issues/214#issuecomment-529162975

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.intersect`”: https://github.com/FCO/Red/issues/214

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.union`”: https://github.com/FCO/Red/issues/213

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.union`”: https://github.com/FCO/Red/issues/213#issuecomment-529162997

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.save`”: https://github.com/FCO/Red/issues/212#issuecomment-529163010

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.save`”: https://github.com/FCO/Red/issues/212

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.delete`”: https://github.com/FCO/Red/issues/211#issuecomment-529163021

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.delete`”: https://github.com/FCO/Red/issues/211

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.create`”: https://github.com/FCO/Red/issues/210#issuecomment-529163031

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.create`”: https://github.com/FCO/Red/issues/210

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.batch`”: https://github.com/FCO/Red/issues/209#issuecomment-529163038

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.batch`”: https://github.com/FCO/Red/issues/209

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.Bool`”: https://github.com/FCO/Red/issues/208#issuecomment-529163043

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.Bool`”: https://github.com/FCO/Red/issues/208

[02:21] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.elems`”: https://github.com/FCO/Red/issues/207#issuecomment-529163048

[02:21] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.elems`”: https://github.com/FCO/Red/issues/207

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.from`”: https://github.com/FCO/Red/issues/206#issuecomment-529163056

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.from`”: https://github.com/FCO/Red/issues/206

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.classify`”: https://github.com/FCO/Red/issues/205#issuecomment-529163064

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.classify`”: https://github.com/FCO/Red/issues/205

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.first`”: https://github.com/FCO/Red/issues/204#issuecomment-529163082

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.first`”: https://github.com/FCO/Red/issues/204

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.pick`”: https://github.com/FCO/Red/issues/199#issuecomment-529163104

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.pick`”: https://github.com/FCO/Red/issues/199

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.sort`”: https://github.com/FCO/Red/issues/198#issuecomment-529163112

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.sort`”: https://github.com/FCO/Red/issues/198

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.map`”: https://github.com/FCO/Red/issues/197#issuecomment-529163119

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.map`”: https://github.com/FCO/Red/issues/197

[02:22] <squashable6> 🍕 FCO++ wrote a comment on “Document `ResultSeq.grep`”: https://github.com/FCO/Red/issues/196#issuecomment-529163135

[02:22] <squashable6> 🍕 FCO++ closed issue “Document `ResultSeq.grep`”: https://github.com/FCO/Red/issues/196

[02:26] *** cpan-p6 left
[02:26] *** cpan-p6 joined
[02:26] *** cpan-p6 left
[02:26] *** cpan-p6 joined
[02:44] <guifa> my @a = <a b c>; say 8 mod @a

[02:44] <guifa> p6: my @a = <a b c>; say 8 mod @a

[02:44] <evalable6> guifa, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/I2E_DN50I5␤Calling…»

[02:44] <evalable6> guifa, Full output: https://gist.github.com/fb07e254237360ffdc18d5f94baad79c

[02:45] <guifa> That seems … odd.  “Calling infix:<mod>(Int, Positional) will never work with any of these multi signatures: (Real $a, Real $b)”

[02:45] <guifa> Shouldn’t an array be interpreted in numeric context for mathematical operators?

[02:56] <AlexDaniel> guifa: yeah weird

[03:05] *** Xliff joined
[03:06] *** Sgeo_ joined
[03:06] <Voldenet> % coerces arguments to numeric, mod doesn't

[03:10] <Voldenet> # NOTE: According to the spec, infix:<mod> is "Not coercive, so fails on differing types."  Thus no casts here.

[03:10] *** Sgeo__ left
[03:12] <Xliff> SmokeMachine: Well, if it makes things easier in the long run, I am not against it.

[03:12] <Xliff> For now, I don't see any need to change things if it does the job.

[03:15] *** john_parr left
[03:17] *** aborazmeh joined
[03:17] *** aborazmeh left
[03:17] *** aborazmeh joined
[03:20] <squashable6> 🍕 Xliff++ opened pull request “Doc tools”: https://github.com/FCO/Red/pull/358

[03:26] *** Sgeo joined
[03:29] *** Sgeo_ left
[03:42] *** ravenousmoose joined
[03:47] *** ravenousmoose left
[03:50] <discord6> <Rogue> It seems like numbers tends to decay to Nums pretty quickly

[03:50] <discord6> <Rogue> like sqrt will always return a Num

[04:47] *** evalable6 left
[04:49] *** evalable6 joined
[05:11] <guifa> Voldenet: indeed, but notice that the errror seems to imply that it can work with Real, not just Int

[05:27] <Voldenet> m: 3.1 mod 3.2

[05:27] <evalable6> Voldenet, rakudo-moar 66e0561f9: OUTPUT: «(exit code 1) WARNINGS for /tmp/AvBPCU4air:␤Useless use of "mod" in expression "3.1 mod 3.…»

[05:27] <evalable6> Voldenet, Full output: https://gist.github.com/7ba4a93d26bb5f75bf1e56e39140ef9f

[05:28] <Voldenet> Huh, that's a weird signature

[05:33] *** Doc_Holliwood joined
[05:35] <Voldenet> I bet that would work

[05:35] *** ravenousmoose joined
[05:36] <Voldenet> m: sub infix:<mod>(Numeric $a, Numeric $b) { $a - $b * floor($a / $b) }; 3.1 mod 3.2

[05:36] <evalable6> Voldenet, rakudo-moar 66e0561f9: OUTPUT: «»

[05:36] <Voldenet> m: sub infix:<mod>(Numeric $a, Numeric $b) { $a - $b * floor($a / $b) }; say 3.1 mod 3.2

[05:36] <evalable6> Voldenet, rakudo-moar 66e0561f9: OUTPUT: «3.1␤»

[05:41] *** ravenousmoose left
[05:42] <tobs> Rogue: That is because if a square root is not an integer, it is not even rational. Perl 6 simply lacks the adequate type to store a square root exactly. Definitely a prime candidate for a module.

[05:42] *** wamba joined
[05:43] <Elronnd> m: my @a = <a b c>; say 8 % @a

[05:43] <evalable6> Elronnd, rakudo-moar 66e0561f9: OUTPUT: «2␤»

[05:44] <Elronnd> tobs: perhaps Rat could be expanded to store exact representations of many kinds of numbers, rather than just rationals

[05:50] <tobs> I think Rat is fine as it is in that it does what the name suggests.

[05:50] *** rindolf joined
[06:09] *** rindolf left
[06:10] *** sena_kun joined
[06:15] <squashable6> 🍕 Altai-man++ wrote a comment on “Doc tools”: https://github.com/FCO/Red/pull/358#issuecomment-529173450

[06:25] *** rindolf joined
[07:07] *** AlexDaniel left
[07:07] *** AlexDaniel joined
[07:07] *** AlexDaniel left
[07:07] *** AlexDaniel joined
[07:11] <squashable6> 🍕 FCO++ wrote a comment on “Doc tools”: https://github.com/FCO/Red/pull/358#issuecomment-529176743

[07:13] <SmokeMachine> Xliff: me neither! The question was more to see if that would be useful...

[07:15] <SmokeMachine> squashable6: status

[07:15] <squashable6> SmokeMachine, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈4 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:15] <squashable6> SmokeMachine, Log and stats: https://gist.github.com/ef755ee54d283e71ca1602f8c6a90e71

[07:16] *** ravenousmoose joined
[07:18] <squashable6> 🍕 Altai-man++ wrote a comment on “Document trait `is nullable`”: https://github.com/FCO/Red/issues/274#issuecomment-529177130

[07:18] <squashable6> 🍕 Altai-man++ wrote a comment on “Document trait `is id`”: https://github.com/FCO/Red/issues/183#issuecomment-529177158

[07:19] <squashable6> 🍕 Altai-man++ wrote a comment on “Document trait `is serial`”: https://github.com/FCO/Red/issues/182#issuecomment-529177178

[07:22] <squashable6> 🍕 FCO++ closed issue “Document trait `is nullable`”: https://github.com/FCO/Red/issues/274

[07:23] <squashable6> 🍕 FCO++ closed issue “Document trait `is id`”: https://github.com/FCO/Red/issues/183

[07:23] <squashable6> 🍕 FCO++ closed issue “Document trait `is serial`”: https://github.com/FCO/Red/issues/182

[07:24] <squashable6> 🍕 FCO++ wrote a comment on “Document trait `is serial`”: https://github.com/FCO/Red/issues/182#issuecomment-529177557

[07:24] <squashable6> 🍕 FCO++ wrote a comment on “Document trait `is id`”: https://github.com/FCO/Red/issues/183#issuecomment-529177579

[07:24] <squashable6> 🍕 FCO++ wrote a comment on “Document trait `is nullable`”: https://github.com/FCO/Red/issues/274#issuecomment-529177586

[07:25] <SmokeMachine> Altai-man: thanks!

[07:25] <tellable6> SmokeMachine, I'll pass your message to Altai-man_

[07:25] *** sena_kun is now known as Altai-man

[07:25] <Altai-man> sublime truths are revealed

[07:25] <tellable6> 2019-09-08T07:25:33Z #perl6 <SmokeMachine> Altai-man: thanks!

[07:25] *** Altai-man is now known as sena_kun

[07:26] <SmokeMachine> :)

[07:27] <sena_kun> SmokeMachine, you are welcome. I'll probably write more stuff, but not sure if today, have to write as many pages of my paper as I can on weekend

[07:27] <tellable6> 2019-09-08T01:49:02Z #perl6 <SmokeMachine> sena_kun:  I was wondering... maybe it would be cool to use something like this: https://github.com/FCO/pulp/blob/master/pulp.p6#L39

[07:27] *** aborazmeh left
[07:28] <SmokeMachine> sena_kun: what are you thinking of Red so far?

[07:31] <sena_kun> SmokeMachine, re pulp: whatever you see fitting, I don't have preferences. I'd go with Xliff's script, because it enforces structure, builds index and looks pretty neat, but maybe that's just me

[07:35] <SmokeMachine> sena_kun: yes we are going with the script...

[07:37] <sena_kun> SmokeMachine, as for "what I think about Red" - well, a lot of efforts was put in, really, so I am just impressed. I did not have an opportunity to try it out, but certainly will do if chances will be around.

[07:37] *** Doc_Holliwood left
[07:38] <SmokeMachine> :)

[07:58] *** domidumont joined
[08:06] *** xinming_ joined
[08:08] *** xinming left
[08:15] *** Black_Ribbon left
[08:18] *** ravenousmoose left
[08:48] *** Sgeo_ joined
[08:52] *** Sgeo left
[09:13] *** [particle]2 joined
[09:15] *** [particle]3 joined
[09:15] *** [particle]1 left
[09:17] *** [particle]1 joined
[09:18] *** [particle]2 left
[09:19] *** [particle]3 left
[09:29] *** khisanth_ left
[09:38] *** leont joined
[09:38] *** MilkmanDan left
[09:39] *** MilkmanDan joined
[09:41] *** khisanth_ joined
[09:43] *** aborazmeh joined
[09:43] *** aborazmeh left
[09:43] *** aborazmeh joined
[09:47] <squashable6> 🍕 Xliff++ wrote a comment on “Doc tools”: https://github.com/FCO/Red/pull/358#issuecomment-529187053

[09:53] *** nepugia joined
[10:18] *** Doc_Holliwood joined
[10:45] <squashable6> 🍕 Xliff++ closed pull request “Doc tools”: https://github.com/FCO/Red/pull/358

[10:45] <squashable6> 🍕 Xliff++ opened pull request “Rebased doc_tool commit for PR”: https://github.com/FCO/Red/pull/359

[10:46] *** Xliff left
[10:47] <squashable6> 🍕 Altai-man++ submitted a review on pull request “Rebased doc_tool commit for PR”: https://github.com/FCO/Red/pull/359#pullrequestreview-285208628

[10:47] <squashable6> 🍕 Altai-man++ wrote a comment on a review for “Rebased doc_tool commit for PR”: https://github.com/FCO/Red/pull/359#discussion_r322002875

[11:00] *** ravenousmoose joined
[11:05] *** ravenousmoose left
[11:16] *** ravenousmoose joined
[11:19] *** Altai-man_ joined
[11:20] *** sena_kun left
[11:38] *** nepugia left
[11:44] *** molaf joined
[11:57] <Altai-man_> m: supply {}; say &supply;

[11:57] <evalable6> Altai-man_, rakudo-moar 66e0561f9: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/aDkxGo18CV␤Undeclared routine:␤    supply used at line 1. Did you mean 'SUPPLY'?␤␤»

[11:57] *** Altai-man_ is now known as sena_kun

[11:57] <sena_kun> I am a bit confused, is `supply` an actual keyword instead of a subroutine? that's surprising

[11:58] <sena_kun> is it because it needs to bound emit calls?

[12:12] *** daxim left
[12:24] *** aborazmeh left
[12:43] *** Xliff joined
[12:49] *** mowcat joined
[13:01] *** AlexDaniel left
[13:01] *** AlexDaniel joined
[13:02] *** AlexDaniel left
[13:02] *** AlexDaniel joined
[13:13] <SmokeMachine> sena_kun, Xliff: what about using it? https://github.com/marketplace/actions/wiki-page-creator-action

[13:14] *** lucasb joined
[13:15] <sena_kun> SmokeMachine, they describe a "github action" for some kind of workflow, but I have a feeling that just enabling github pages will be sufficient

[13:15] <tellable6> 2019-09-08T12:45:46Z #perl6-dev <Xliff> sena_kun: Thanks for the comment. I've updated the PR

[13:16] <sena_kun> https://help.github.com/en/articles/configuring-a-publishing-source-for-github-pages#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch <- this sounds very interesting, they suggest publishing stuff from `docs/` directory in master branch, which is exactly setup we do

[13:19] *** epony left
[13:21] <SmokeMachine> sena_kun: but the !API docs will be on the wiki and the API docs will be on gh-pages? or should both be on gh-pages?

[13:23] <sena_kun> SmokeMachine, I think that both should be on gh-pages, but there is no problem to have them in wiki too, since wiki is just a repo with markdown files

[13:23] <SmokeMachine> sena_kun: https://fco.github.io/Red/introduction

[13:24] <sena_kun> I mean, the only difference between API and !API is that the first one is generated from sources and the second one is not

[13:24] *** AlexDaniel left
[13:24] <SmokeMachine> yes...

[13:28] *** AlexDaniel joined
[13:28] *** AlexDaniel left
[13:28] *** AlexDaniel joined
[13:28] <sena_kun> SmokeMachine, sent a couple of PRs

[13:30] *** AlexDaniel left
[13:30] *** AlexDaniel joined
[13:30] *** AlexDaniel left
[13:30] *** AlexDaniel joined
[13:32] <SmokeMachine> sena_kun: thanks! merged!

[13:32] *** AlexDaniel left
[13:33] *** AlexDaniel joined
[13:33] *** AlexDaniel left
[13:33] *** AlexDaniel joined
[13:43] *** domidumont1 joined
[13:43] *** domidumont left
[13:47] *** mowcat left
[13:50] *** molaf left
[13:55] *** [particle] joined
[13:57] *** [particle]1 left
[13:58] *** [particle]1 joined
[14:00] *** [particle] left
[14:02] <Xliff> sena_kun: Do you know if anything Perl6 modulespace supports MSSQL?

[14:02] <Xliff> *anything in

[14:02] <sena_kun> Xliff, sorry, no idea

[14:02] <Xliff> OK

[14:07] <guifa> Elronnd: Yeah, definitely better to have an Irrat type to handle that.  P6 definitely opens up the possibilities for some immensely functional and easy to use symbolic algebra libraries but porting them would be an immense amount of work.

[14:08] <guifa> Xliff: there’s an DB::MySQL

[14:09] <guifa> it’s threadsafe, but uses native bindings, so currently Linux specific.  DBIsh isn’t threadsafe but I think has broader support

[14:11] <leont> Xliff: there is a ODBC driver, I think one can access MSSQL through ODBC

[14:11] <Xliff> leont: I think you still need a driver.

[14:12] <leont> I never had to use ODBC, so I don't know the details of how to set it up, I just know others have done it before

[14:18] <SmokeMachine> https://fco.github.io/Red/API

[14:19] <Xliff> \o/

[14:19] <Xliff> Looks like those API modules need subheaders.

[14:19] <Xliff> I'll see about a PR

[14:22] <AlexDaniel> squashable6: status

[14:22] <squashable6> AlexDaniel, Next SQUASHathon in 25 days and ≈13 hours (2019-10-05 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:22] <AlexDaniel> squashable6: status 2019-09-07

[14:22] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/ff2acbb3849bfdd902158ef76eccff00

[14:24] <sena_kun> Xliff, you can also urls in API index page while you're at it, `.md` extension should be removed as well as `docs` prefix

[14:24] <sena_kun> *also address

[14:25] <sena_kun> I'll do it myself later if you don't feel like it, of course, so no pressure, just a suggestion

[14:26] <Xliff> sena_kun: I am not understanding. Do the links, as generated, not work?

[14:26] <sena_kun> Xliff, yes

[14:26] <SmokeMachine> sena_kun: I've fixed that...

[14:26] <Xliff> OK, so no extension and remove docs?

[14:26] <sena_kun> SmokeMachine, you fixed the script or the output?

[14:26] <SmokeMachine> both

[14:26] <Xliff> Lemme merge.

[14:27] <sena_kun> oh, great! SmokeMachine++

[14:28] <SmokeMachine> https://github.com/FCO/Red/commit/a83ae10249da1a62a44d8674685cdc5e3e4d3697 and https://github.com/FCO/Red/commit/a2961f90a603c4801a7791e1ea10aa984f78fe74

[14:29] <sena_kun> yup, checked that

[14:30] <sena_kun> seems like the squashathon was a success in starting to set up the documentation. \o/

[14:31] <AlexDaniel> that's true

[14:31] <Xliff> SmokeMachine: I've merged your changes to the script. Made one minor adjustment that reads better.

[14:31] <AlexDaniel> I'm glad that Red is getting more love :)

[14:31] <Xliff> AlexDaniel: Now. About my p6-Gtk projects... ;)

[14:31] <AlexDaniel> SmokeMachine: can you announce the winner? I wasn't following the progress much

[14:32] <Xliff> squashable6, status

[14:32] <squashable6> Xliff, Next SQUASHathon in 25 days and ≈13 hours (2019-10-05 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:32] <AlexDaniel> Xliff: Log and stats: https://gist.github.com/ff2acbb3849bfdd902158ef76eccff00

[14:32] <AlexDaniel> SmokeMachine: oh yeah, here's the list of some contributions https://gist.github.com/ff2acbb3849bfdd902158ef76eccff00

[14:33] <AlexDaniel> some because I assume there were useful discussions on IRC :)

[14:33] <Xliff> AlexDaniel: I still have active changes to be committed.

[14:35] <Xliff> Testing them, now.

[14:54] *** epony joined
[15:04] <Xliff> SmokeMachine: Please check #362

[15:12] <SmokeMachine> Xliff: merged!

[15:20] <SmokeMachine> AlexDaniel: I think the winner is Xliff!

[15:20] <AlexDaniel> \o/

[15:21] <sena_kun> Xliff++

[15:22] *** zakharyas joined
[15:23] <Xliff> ┌╏ º □ º ╏┐

[15:23] <Xliff> (ට˓˳̮ට๑)

[15:24] <Xliff> (・о・)

[15:24] <Xliff> \o/

[15:24] <AlexDaniel> weekly: Last week we saw a squashathon dedicated to helping with documention of Red (a perl6 ORM, https://github.com/FCO/Red). The squashathon was a success in setting up the documentation for Red, and the winner is Xliff https://colabti.org/irclogger/irclogger_log/perl6?date=2019-09-08#l284

[15:24] <notable6> AlexDaniel, Noted! (weekly)

[15:25] <AlexDaniel> Xliff: I'm not 100% sure if they're still available, but please contact lizmat and ask for your plush camelia :)

[15:26] <AlexDaniel> SmokeMachine: thank you too!

[15:27] <Xliff> AlexDaniel: Ah. OK. Thanks.

[15:29] <SmokeMachine> Thank you all!!! Xliff congratulations!

[15:29] <Xliff> SmokeMachine: Thank you! I'm glad I got a chance to become more familiar with Red.

[15:30] <Xliff> I still have that Drop Table enhancement. I will try and finish that.

[15:32] <SmokeMachine> :)

[15:32] <SmokeMachine> Xliff: And what do you think about Red now?

[15:32] *** number6` joined
[15:32] <Xliff> The design is interesting enough, but I need to start using it before I have a worthwhile opinion.

[15:33] <Xliff> To that effect, I think we need support for MSSQL

[15:33] <Xliff> I've got some things there that would DEFINITELY benefit from something like red.

[15:33] <Xliff> *Red

[15:34] <SmokeMachine> :)

[15:37] <SmokeMachine> Xliff: is that the reason you asked about MSSQL? are you planing to write a new driver?

[15:37] <Xliff> If there isn't an old one.

[15:38] <Xliff> I downloaded the linux MSSQL driver, this morning. If it's anything resembling the Oracle one, I think it's possible.

[15:54] <guifa> Congrats Xliff!

[15:54] <guifa> Also I just had an idea for a module based off the most recent StackExchange perl6 question.  A color module

[15:54] <Xliff> guifa: Linky?

[15:55] <guifa> Xliff: https://stackoverflow.com/questions/57841219/perl6-html-color-gradient-generator

[15:55] <guifa> I’m actually going to make that my afternoon project.  I had good dissertation progress this week so I can treat myself

[15:56] <guifa> At least to make one that does basic RGB/HSB/LAB

[16:01] <timotimo> we have at least one color module at the moment

[16:01] <timotimo>  Color Format conversion, manipulation, and math operations on colours

[16:02] <timotimo>  CCColor Simple and flexible color color conversion module for Raku Perl 6 , easy-to-use simple learning.

[16:02] <guifa> hmm how did i miss that in searching?

[16:03] <guifa> oh right, searching for color perl6 on teh [sic] google only showed me term /ansi color stuff

[16:05] <discord6> <theangryepicbanana> I'm having an issue with NativeCall, could anyone help? https://repl.it/@theangryepicbanana/llvm-p6-thing

[16:05] <discord6> <theangryepicbanana> getting a segmentation fault

[16:07] <guifa> Zoffix’s acually seems the best.  Although it’s odd he chose to use $color.to-string(“cmyk”) instead of, I dunno, $color.Str :cmyk which seems more P6-ish 

[16:12] <Xliff> guifa: Submit a PR. :)

[16:12] <Xliff> I think the perl6 org has it now.

[16:14] <Xliff> theangryepicbanana: What is LLVMC>

[16:15] <Xliff> I'd need that module and the lib it uses, compiled with -g, to be able to give you accurate advice.

[16:16] *** MasterDuke left
[16:16] <discord6> <theangryepicbanana> Xliff: It's Perl 6 bindings to the LLVM

[16:16] <discord6> <theangryepicbanana> I am making it

[16:16] <Xliff> Ah. Github?

[16:16] <discord6> <theangryepicbanana> not yet, but soon

[16:17] <discord6> <theangryepicbanana> I was hoping to get an example working

[16:17] <Xliff> OK. Have you tried running this code with perl6-gdb-m?

[16:17] <discord6> <theangryepicbanana> the LLVMC library is in the "repl" project I posted

[16:17] <discord6> <theangryepicbanana> in the file tree

[16:17] <discord6> <theangryepicbanana> no I haven't

[16:17] <Xliff> If you are having a segfault, it will usually tell you where it is blowing up. That hint is a good start.

[16:17] <Xliff> If you haven't, I suggest you try.

[16:17] <discord6> <theangryepicbanana> ok

[16:17] <Xliff> What distro are you on?

[16:18] <discord6> <theangryepicbanana> Well repl.it uses 2019.03 iirc

[16:18] <discord6> <theangryepicbanana> I have something newer locally

[16:18] <Xliff> :S

[16:18] <discord6> <theangryepicbanana> yea...

[16:18] <Xliff> OK. Well, I'd need to see LLVM to be able to help you further.

[16:18] <discord6> <theangryepicbanana> ok

[16:18] <Xliff> Not being able to download debug symbols really hurts.

[16:19] <Xliff> Also... LLVM 7 or 8?

[16:19] <discord6> <theangryepicbanana> 7

[16:19] <Xliff> k

[16:19] <discord6> <theangryepicbanana> hoping to change to 8

[16:19] <discord6> <theangryepicbanana> I used this for reference btw http://llvm.org/doxygen/group__LLVMC.html

[16:20] <Xliff> Hmmm... got something that breaks it down into types/objects?

[16:21] <Xliff> Oh, nevermind. It does if you drill down enough. :p

[16:21] <discord6> <theangryepicbanana> maybe?

[16:21] <discord6> <theangryepicbanana> lol ok

[16:22] <Xliff> Yeah. I can't do much more unless I see your LLVM code.

[16:22] <discord6> <theangryepicbanana> I'm saying that it's in the file tree on the website

[16:22] <discord6> <theangryepicbanana> https://cdn.discordapp.com/attachments/557612644127997983/620293010168479754/unknown.png

[16:23] <Xliff> Ahh... 

[16:23] <Xliff> I found it.

[16:23] <discord6> <theangryepicbanana> awesome

[16:23] <discord6> <theangryepicbanana> I'd be doing the project locally, but I use windows and it's easier to do this on linux

[16:30] <Xliff> OK. I've confirmed the segfault... lesseeee....

[16:31] <discord6> <theangryepicbanana> yay

[16:31] <Xliff> LLVMRunFunction

[16:32] <discord6> <theangryepicbanana> ok. what happened there?

[16:33] <Xliff> Crap. No locals. :(

[16:34] <discord6> <theangryepicbanana> no locals?

[16:34] <discord6> <theangryepicbanana> I think I'm a bit lost

[16:35] <Xliff> Yeah, I am trying to see if I can tell what the arguments were when the problem function ran.

[16:35] <Xliff> But it looks like libLLVM-7 might have been compiled with a large -O number

[16:35] <discord6> <theangryepicbanana> what would that do?

[16:39] <discord6> <theangryepicbanana> wait maybe I should use uint32 instead of size_t

[16:39] <Xliff> Um. Not really.

[16:39] <discord6> <theangryepicbanana> no?

[16:39] <discord6> <theangryepicbanana> ok

[16:39] <Xliff> $engine doesn't contain a value.

[16:40] <discord6> <theangryepicbanana> oh

[16:40] <Xliff> I hope you have an autogenerator, rather than doing this by hand.

[16:40] <Xliff> I've found that CPointers do not react well to "is rw"

[16:40] <discord6> <theangryepicbanana> no I did it by hand

[16:40] <discord6> <theangryepicbanana> o

[16:40] <discord6> <theangryepicbanana> reeeee that's fun

[16:40] <Xliff> It's by far better to do CArray[LLVMExecutionEngineRef]

[16:41] <Xliff> That's all you need for all CPointer 'is rw' arguments in LLVMC.pm6

[16:41] <Xliff> It's tricker when you are tryint to call it.

[16:41] <discord6> <theangryepicbanana> what about Pointer[LLVMExecutionEngineRef]

[16:41] <discord6> <theangryepicbanana> ok

[16:42] <Xliff> Something like this: 'my $pa = CArray[LLVMExecutionEngineRef].new; $pa[0] = LLVMExecutionEngineRef.new; "

[16:42] <Xliff> You'd then pass $pa.

[16:42] <Xliff> Hmm... let me try something else. One sec.

[16:42] <discord6> <theangryepicbanana> ok

[16:43] <Xliff> HA!

[16:43] <Xliff> my $engine = LLVMExecutionEngineRef.new;

[16:44] *** epony left
[16:44] <Xliff> ^^ This gets me to line 48 befor you get another error.

[16:44] <Xliff> So hold off on those changes.

[16:44] <discord6> <theangryepicbanana> nice

[16:44] <discord6> <theangryepicbanana> ok

[16:44] <discord6> <theangryepicbanana> wasn't sure if .new worked on CPointers

[16:44] <Xliff> Yeah.

[16:44] <Xliff> Never pass an uninitialized CPointer or CStruct to a function.

[16:45] <discord6> <theangryepicbanana> ok

[16:45] <Xliff> It's easy to forget in Perl6. Trust me. I speak from experience. :D

[16:45] <discord6> <theangryepicbanana> lol I'd bet

[16:46] <discord6> <theangryepicbanana> this is my first time using NativeCall for a large api

[16:46] *** nepugia joined
[16:47] <discord6> <theangryepicbanana> omg it works yay

[16:49] *** nepugia left
[17:08] *** pmurias joined
[17:09] <pmurias> vrurg: relative to what?

[17:09] <tellable6> 2019-09-08T01:35:04Z #perl6-dev <vrurg> pmurias Is it possible to teach nqp-js to load modules with relative path? I tried setting libpath to blib, ./blib but in vain. Only @base_dir@/blib works.

[17:09] <tellable6> 2019-09-08T01:36:15Z #perl6-dev <vrurg> pmurias it also fails to load CORE.c.setting.js from ./ For the same reason, I guess.

[17:09] *** pmurias left
[17:09] *** pmurias joined
[17:10] *** epony joined
[17:12] *** zakharyas left
[17:30] *** jmerelo joined
[17:30] <jmerelo> squashable6: status

[17:30] <squashable6> jmerelo, Next SQUASHathon in 25 days and ≈10 hours (2019-10-05 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:30] <tellable6> 2019-09-07T13:18:07Z #perl6 <Xliff> jmerelo Suggestion: Consider total of (number of lines added - number of lines removed) for each PR in your consideration of contributions for the squashie.

[17:30] <jmerelo> .tell XLiff: OK, I can do that...

[17:30] <tellable6> jmerelo, I'll pass your message to Xliff

[17:34] *** MasterDuke joined
[17:35] *** molaf joined
[17:36] <Xliff> .

[17:36] <Xliff> \o

[17:36] <Xliff> jmerelo: Thanks for the consideration!

[17:38] <jmerelo> Xliff: no problem :-)

[17:51] <MasterDuke> Xliff: did you see my comment on https://github.com/rakudo/rakudo/issues/3171? think it makes sense?

[17:54] <Xliff> MasterDuke: Yes. I think it makes sense. Although I think a better solution would be to check that if %<n>d, then n is an integer

[17:54] <Xliff> Then you don't have any unexpected delays.

[17:55] <Xliff> I can see even lizmat's solution masking a serious performance error.

[17:55] <MasterDuke> please add a comment then

[17:56] <Xliff> Yes, I will. Thanks.

[17:57] <MasterDuke> Xliff++

[18:02] <vrurg> pmurias: ping

[18:06] <vrurg> .tell pmurias relative like ., ./, blib. Runtime can't find Perl6::ModuleLoader if libpath is set to just blib (or node_modules as it was previously) but works fine if its set to absolute path like $HOME/src/Perl6/rakudo/blib

[18:06] <tellable6> vrurg, I'll pass your message to pmurias

[18:08] <pmurias> vrurg: pong

[18:09] <pmurias> vrurg: I meant to what directory should the paths be relative to?

[18:09] <pmurias> vrurg: the current working directory when compiling or when running, etc.

[18:10] <vrurg> I'm talking about working dir of compilation for now.

[18:11] <vrurg> pmurias: You could experiment on your own. I have merged the change.

[18:12] <pmurias> I'm compiling rakudo.js with the merged changes as we speak ;)

[18:12] <vrurg> pmurias: Try setting NQP_BASE_FLAGS in js/Makefile.in from @bpm(BLIB)@ to just blib.

[18:13] <vrurg> I had to change BLIB to be set using @base_dir@ in order for JS to compile somehow. Still, it fails on CORE.d.setting because it fails to load CORE.c.setting from ./

[18:15] <pmurias> vrurg: I could change the --libpath flag easily to just treat relative paths as relative to the cwd from the time of the compile

[18:16] <vrurg> pmurias: Actually, it's up to you how you handle it. Though to my view it must use cwd for relative path simply because this is what people usually expect it to be.

[18:17] <vrurg> Like perl6 -Ilib, tec.

[18:17] <vrurg> *etc

[18:19] <pmurias> in node.js the paths tend to be relative to where the compiled code is

[18:19] <pmurias> * in node.js land

[18:19] *** cpan-p6 left
[18:19] *** cpan-p6 joined
[18:19] *** cpan-p6 left
[18:19] *** cpan-p6 joined
[18:20] <pmurias> but I don't have a preference about the --libpath flag

[18:23] <vrurg> pmurias: Again, if it compiles – it's ok. I'd prefer to have BLIB to be set to a relative path and have it used for all backends. If we achieve this and JS compiles – I'm ok with it. :)

[18:45] *** domidumont1 left
[18:46] <Xliff> Hmm... no sourceable?

[18:55] *** zakharyas joined
[18:55] *** molaf left
[18:56] *** jmerelo left
[19:02] <AlexDaniel> Xliff: nope

[19:02] <Xliff> Ah.

[19:05] <MasterDuke> zoffix ran it

[19:21] *** MilkmanDan left
[19:23] *** MilkmanDan joined
[19:43] <Xliff> Oh.

[19:43] *** Sgeo__ joined
[19:43] <Xliff> Oh. That was "sourcebaby".

[19:47] *** Sgeo_ left
[19:49] *** MilkmanDan left
[19:51] *** MilkmanDan joined
[19:52] <Kaiepi> when i try to run unit tests for my monad library after adding support for type punning, it throws a sorrow with "No compile-time value for M", but gives no indication of where M actually is, even with --ll-exception. how do i debug this?

[19:54] <Kaiepi> all that i can really tell from --ll-exception is the issue's with a method signature somewhere, but i have M as a parameter in almost every method in a bunch of different classes and roles

[19:59] <Xliff> Kaiepi: Code?

[19:59] <vrurg> Kaiepi: `No compile-time` comes from deep inside of World where it knows nothing about the source. Looks like run-away exception in Grammar to me.

[19:59] <timotimo> when you're there you can try to reach a qast node that has a "node" attribute set

[20:00] <timotimo> that will have a Match object from parsing the source

[20:00] <Kaiepi> i figured it out, i was trying to use a parameter M as a return type, ig that's not allowed

[20:00] <Xliff> heh

[20:00] <timotimo> a better error message would be great

[20:03] *** Ven`` joined
[20:03] *** Kaiepi left
[20:03] *** pmurias left
[20:03] *** Kaiepi joined
[20:04] <vrurg> Kaiepi: a ticket with --ll-exception would be helpful. 

[20:08] *** number6` left
[20:09] *** sena_kun left
[20:10] *** mowcat joined
[20:11] *** mowcat left
[20:12] *** __jrjsmrtn__ left
[20:12] *** __jrjsmrtn__ joined
[20:12] *** ravenousmoose left
[20:14] *** pmurias joined
[20:19] *** domidumont joined
[20:19] *** roguelazer joined
[20:19] *** domidumont left
[20:21] *** domidumont joined
[20:22] *** pmurias left
[20:22] *** domidumont left
[20:23] *** dolmen joined
[20:28] *** molaf joined
[20:33] *** pmurias joined
[20:38] <pmurias> vrurg: should the compiled setting by directly in the rakudo directory instead of blib?

[20:38] <pmurias> * settings

[20:39] <vrurg> pmurias: you're rising the question I was asking myself. :) 

[20:39] <vrurg> I wasn't ready to experiment with this. They're historically placed in the source root.

[20:45] *** Cabanossi left
[20:48] <pmurias> do we have an easy way to turn a relative path into an absolute one in nqp?

[20:52] <vrurg> Unlikely. Not something I could quickly find with grep

[20:54] <vrurg> pmurias: IO::Spec::Unix implements rel2abs "manually".

[20:55] <vrurg> So, it's unlikely there is no op for this.

[20:55] <vrurg> *there is op

[20:55] *** Cabanossi joined
[21:28] *** dolmen left
[21:28] *** zakharyas left
[21:32] *** dolmen joined
[21:42] *** dolmen left
[21:42] *** dolmen joined
[21:43] *** dolmen left
[21:51] <pmurias> vrurg: --libpath now takes relative paths

[22:01] *** john_parr joined
[22:04] *** Black_Ribbon joined
[22:07] *** mowcat joined
[22:09] *** mowcat left
[22:12] *** pmurias left
[22:12] *** Ven`` left
[22:13] *** mowcat joined
[22:21] *** mowcat left
[22:23] *** mowcat joined
[22:26] *** wamba left
[22:35] *** irced joined
[22:46] <SmokeMachine> https://twitter.com/smokemachine/status/1170830747957157889

[22:46] <irced> lo SmokeMachine

[22:46] <tellable6> 2019-09-07T10:23:30Z #perl6 <SmokeMachine> irced: what do you mean with my math???

[22:46] <tellable6> 2019-09-07T11:08:48Z #perl6 <SmokeMachine> irced: it’s Red::Driver::SQLite... not SQLITE.

[22:46] <tellable6> 2019-09-07T11:09:58Z #perl6 <SmokeMachine> irced: in the synopsis, it uses Postgres just for 1 block

[22:47] <irced> nm that

[22:47] <SmokeMachine> irced: hi!

[22:47] <irced> SmokeMachine: nm the pg, that's sorted

[22:47] <irced> SmokeMachine: i thought your math was interesting

[22:47] <irced> SmokeMachine: i think i did encounter an real issue with the synopsis

[22:48] <SmokeMachine> irced: what math?

[22:48] <SmokeMachine> irced: what's the issue?

[22:48] <irced> SmokeMachine: the math to find a solution for two variables. nm that,

[22:48] <irced> lemme go back and see

[22:50] <irced> i typed the synopsys by hand but perhaps if i had copy and pasted (or download?) i wouldn't have gotten an error on line $author.name = "John Doe"; specifically, Cannot modify an immutable Str (Fernando)

[22:51] <irced> i checked some of the objects and the source of error was not clear to me at first look

[22:51] <irced> do you get the same error?

[22:51] <irced> background: i am using SQLite (tho i don't think this is a factor)

[22:52] <irced> maybe i checked out a dated version.?

[22:52] <SmokeMachine> irced: yes, I do...

[22:53] <irced> ok, so that's something.

[22:53] * irced actually i zef'd not checked out.

[22:54] * irced zef'd the standard repo.

[22:54] <SmokeMachine> it seems the `is rw` on model Person is not working for some reason... if you add a `is rw` on the name attribute declaration it works... would you mind to open an issue about that for me, please?

[22:55] <SmokeMachine> irced: ^^

[22:55] <irced> what is the correct procedure to do so, i am new to git collaboration

[22:55] <SmokeMachine> irced: https://github.com/FCO/Red/issues/new

[22:56] <irced> ok, i'll give it a go but first i'll try adding is rw on the name attribute declaration

[22:56] <SmokeMachine> irced: thank you for finding this!

[22:56] <irced> hth

[22:56] <SmokeMachine> it will, probably, work... but that's a bug...

[22:59] <SmokeMachine> irced: worked?

[23:00] *** HoboWithAShotgun joined
[23:00] <irced> no error this time

[23:02] <SmokeMachine> irced: great!

[23:02] <irced> except maybe that originally i had to comment one of two my Post declarations

[23:02] <irced> was that expected?

[23:02] <irced> my Post $post1 was declared twice

[23:02] <SmokeMachine> what do you mean?

[23:03] *** Doc_Holliwood left
[23:04] <SmokeMachine> hum... that's true... they should be post1, post2 and post3... thanks! would you mind to open another issue with that?

[23:04] <irced> SmokeMachine: i am still working on understand red with the synposis but one thing i needed to due to avoid a warning is comment one of the two repeated declaration/assignment to $post1

[23:04] <irced> sure, i can do that, let me first see what the adjustments produce

[23:06] <irced> it would help to know what the expected output of the synopsis is, fyi

[23:06] <SmokeMachine> irced: thanks! maybe it would be easier to understand by the examples dir: https://github.com/FCO/Red/tree/master/examples

[23:07] <irced> ok, for now i can report the issues without further comment 😃

[23:09] <irced> can i download the synopsys so that line numbering is consistent?

[23:09] <SmokeMachine> irced: the output should be: https://www.irccloud.com/pastebin/Djewhcap/

[23:11] <SmokeMachine> irced: but if you add a `my $*RED-DEBUG = True;` at the beginning, the output will become:

[23:11] <SmokeMachine> irced:  https://www.irccloud.com/pastebin/OSmfaESP/

[23:12] <irced> SmokeMachine: i see, thank1

[23:12] <irced> thanks!

[23:13] <SmokeMachine> good night!

[23:13] <irced> 😃later

[23:15] <Xliff> \o/

[23:15] <Xliff> I have DBDish connectiong to MS SQL Server!

[23:15] <Xliff> *DBIish

[23:15] * irced hears crickets chirping.

[23:16] <irced> just kidding, that sounds cool

[23:16] *** rindolf left
[23:17] <Xliff> irced: ;p

[23:17] <irced> congrats

[23:17] <Xliff> Thanks,

[23:17] <Xliff> I'm hoping I can get it to work with Red without much problem.

[23:18] <irced> ah nice

[23:19] <Xliff> SmokeMachine: How do I pass a DBH to Red?

[23:20] <SmokeMachine> Xliff: https://github.com/FCO/Red/blob/master/lib/Red/Database.pm6#L11

[23:20] <SmokeMachine> Is that what you want?

[23:25] *** kst left
[23:30] <Xliff> Yes. Let's see if CommonSQL will work with MS SQL Server

[23:33] <SmokeMachine> :)

[23:35] *** sftp_ joined
[23:36] *** kst joined
[23:37] *** sftp left
[23:37] *** sftp_ is now known as sftp

[23:50] <Xliff> SmokeMachine: Any thoughts about writing a driver for MS SQL?

[23:59] *** leont left
