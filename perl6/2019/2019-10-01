[00:29] *** lucasb left
[01:08] *** isBEKaml joined
[01:09] *** Sgeo__ joined
[01:12] *** Sgeo_ left
[01:18] *** Doc_Holliwood left
[01:56] <discord6> <RaycatWhoDat> "Parse errors: No plan found in TAP output"

[01:56] <discord6> <RaycatWhoDat> what in the what is this

[01:58] <tobs> RaycatWhoDat: a TAP parser. TAP is the test-anything protocol which is normally what tests emit to indicate successful or failed assertions. It requires a plan line somewhere.

[01:58] <tobs> so you're likely executing a badly written test

[02:01] *** isBEKaml left
[02:02] *** guifa left
[02:02] <discord6> <RaycatWhoDat> I mean

[02:02] <discord6> <RaycatWhoDat> I'm running the Rakudo tests, so

[02:02] <discord6> <RaycatWhoDat> That would be a bit awkward

[02:03] <Grinnz> can happen if something else is sending output improperly to the same stream being used for TAP

[02:04] <Grinnz> or if it died before it got to the plan

[02:04] <Grinnz> but that would be pretty early

[02:10] <tobs> might not be early if it uses done_testing

[02:10] <tobs> anyway, RaycatWhoDat, do you have more information? Which file is it, does it exit with non-zero exit code?

[02:11] <tobs> `make test` passes over here on rakudo master

[02:11] <discord6> <RaycatWhoDat> Looks like a couple of them are failing with non-zeroes

[02:12] <discord6> <RaycatWhoDat> I did modify some of the grammar but it was the inside of a string. Nothing game-breaking.

[02:12] <Grinnz> right, i forgot done_testing still counts as a plan

[02:12] <Grinnz> the best plans are made in hindsight :)

[02:13] <discord6> <RaycatWhoDat> Looks like 02-rakudo/03-cmp-ok, 06-telemetry/01 through 04, and 05-messages/02-errors

[02:13] <discord6> <RaycatWhoDat> The same tests passed when I built it on master so, maybe my changes really did break them

[02:36] <discord6> <RaycatWhoDat> Yeah, still haven't made headway on this. Reverting to master made the tests pass.

[02:37] <discord6> <RaycatWhoDat> All I did was change "only alphabetic methods may be detached" to "only basic method calls that exclusively use a dot can be detached".

[02:38] <discord6> <RaycatWhoDat> Why would a string passed into malformed cause that many tests to fail?

[03:00] <discord6> <RaycatWhoDat> https://i.imgur.com/raG4r9N.png

[03:00] <discord6> <RaycatWhoDat> Maybe I've missed something here?

[03:02] *** evalable6 left
[03:07] *** evalable6 joined
[03:09] <discord6> <RaycatWhoDat> CustomOps.pm6 is saying that: Missing or wrong version of dependency 'gen/moar/Grammar.nqp'

[03:09] <discord6> <RaycatWhoDat> Why would 'gen/moar/Grammar.nqp' be missing if it was built just before these test were run?

[03:11] *** Xliff left
[03:20] <discord6> <RaycatWhoDat> Looks like Rakudo needed to be completely rebuilt from the ground-up instead of whatever this Z-Script thing is doing.

[03:20] <discord6> <RaycatWhoDat> Now, the correct test fails.

[03:30] <discord6> <RaycatWhoDat> Done.

[03:34] <Elronnd> anyone wanna make a build system that doesn't suck?

[03:35] <discord6> <RaycatWhoDat> What do you mean, Elronnd?

[03:35] <discord6> <RaycatWhoDat> More specifically, what's the current build system and how would you improve it?

[03:36] <Elronnd> build system for c that is flexible (unlike makefiles), user-friendly (unlike cmake), developer-friendly (unlike autotools), and has market share (unlike all the others)

[03:36] <discord6> <RaycatWhoDat> Valid points but out of my depth since I don't know C

[03:38] *** molaf joined
[03:45] *** molaf left
[04:10] *** cinch_ joined
[04:10] *** khisanth_ left
[04:12] *** cinch left
[04:23] *** khisanth_ joined
[04:35] *** Doc_Holliwood joined
[04:42] <discord6> <Aearnus> Elronnd: https://xkcd.com/927/

[04:42] *** Sgeo__ left
[04:43] <discord6> <Aearnus> cmake, scons, c++20 modules, meson, vsbuild, conan, ...

[04:46] *** Sgeo joined
[04:50] <Elronnd> c++20 modules aren't a build system; scons is slow; meson isn't good enough; vsbuild is windows-only.  Conan I've seen, but only looked at in passing

[04:50] <Elronnd> may check it out more later

[04:50] <Elronnd> reggae also looks nice

[04:52] <Elronnd> oh, looks like conan generates makefiles for other build systems instead of doing the build itself

[05:20] *** robertle left
[05:25] *** cpan-p6 left
[05:31] *** jmerelo joined
[05:35] *** Juerd joined
[05:38] *** sena_kun joined
[05:38] *** domidumont joined
[05:50] *** cpan-p6 joined
[05:50] *** cpan-p6 left
[05:50] *** cpan-p6 joined
[06:02] *** domidumont left
[06:15] *** __jrjsmrtn__ joined
[06:16] *** wamba joined
[06:17] *** _jrjsmrtn left
[06:20] *** domidumont joined
[06:34] *** jmerelo left
[06:36] *** Kaiepi left
[06:42] <SmokeMachine> jnthn: support for Red models?! What a wonderful news?!!!

[06:43] *** ufobat joined
[06:49] *** Doc_Holliwood left
[06:54] *** domidumont left
[06:58] *** domidumont joined
[07:11] *** kensanata joined
[07:14] *** wamba left
[07:15] *** wamba joined
[07:33] *** sno left
[07:41] *** dakkar joined
[07:43] *** wamba left
[07:52] *** zakharyas joined
[07:58] *** sena_kun left
[07:59] *** sena_kun joined
[08:28] <SmokeMachine> sena_kun: ^^

[08:31] <sena_kun> SmokeMachine, hm? well, in this case "support" is just that `model` keyword does not break the parser anymore.

[08:32] <SmokeMachine> sena_kun: yes I got it, and that's great! I'll be able to use Comma to write Red! :)

[08:33] <sena_kun> glad if it's helpful. :)

[08:36] <sena_kun> u: r̃

[08:36] <unicodable6> sena_kun, U+0072 LATIN SMALL LETTER R [Ll] (r)

[08:36] <unicodable6> sena_kun, U+0303 COMBINING TILDE [Mn] ( ̃)

[08:40] <sena_kun> unicodable6, help

[08:40] <unicodable6> sena_kun, Just type any Unicode character or part of a character name. Alternatively, you can also provide a code snippet. # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Unicodable

[08:40] <sena_kun> unidump: r̃

[08:40] <unicodable6> sena_kun, https://gist.github.com/aa7f654082d618aae3b049edde417d5b

[08:53] *** ufobat_ joined
[08:56] *** wamba joined
[08:56] *** ufobat left
[08:57] *** leont joined
[09:12] *** leont left
[09:16] *** p9s`` joined
[09:17] *** zakharyas left
[09:19] *** zakharyas joined
[09:21] *** p9s` left
[09:35] *** ravenousmoose left
[09:39] *** reach_satori_ left
[10:02] *** wamba left
[10:07] *** wamba joined
[10:09] *** Doc_Holliwood joined
[10:09] *** domidumont left
[10:13] *** pat_js joined
[10:16] *** pmurias joined
[10:28] *** wbn left
[10:29] *** wbn joined
[10:36] * lizmat clickbaits https://p6weekly.wordpress.com/2019/09/30/2019-39-with-a-lump/

[10:39] *** pmurias left
[10:41] *** pmurias joined
[10:51] *** daxim left
[10:57] *** daxim joined
[10:58] *** pmurias left
[11:04] *** Kaiepi joined
[11:05] *** reach_satori joined
[11:12] *** xinming left
[11:12] *** xinming joined
[11:13] *** pat_js left
[11:15] *** Kaiepi left
[11:19] *** Kaiepi joined
[11:30] *** kini left
[11:35] *** pat_js joined
[11:36] *** domidumont joined
[11:37] *** kini joined
[11:37] *** zakharyas left
[11:41] *** rbt joined
[11:42] <cpan-p6> New module released to CPAN! Acme::Text::UpsideDown (0.0.2) by 03ELIZABETH

[11:42] <cpan-p6> New module released to CPAN! Acme::Text::UpsideDown (0.0.1) by 03ELIZABETH

[11:43] *** scimon joined
[11:43] *** cpan-p6 left
[11:46] <lizmat> hmmm... interesting they get emitted in the wrong order  ^^^  :-)

[11:47] *** cpan-p6 joined
[11:47] *** cpan-p6 left
[11:47] *** cpan-p6 joined
[11:49] <El_Che> upsidedown as it were

[11:50] <scimon> I wish the twitter bot for new modules and the modules site got updated in the other order (so often I see a new module, click on the link, get a 404). 

[11:58] <cpan-p6> New module released to CPAN! Acme::Text::UpsideDown (0.0.3) by 03ELIZABETH

[12:06] *** lizmat left
[12:08] *** domidumont left
[12:08] *** domidumont joined
[12:10] *** reach_satori_ joined
[12:12] *** reach_satori left
[12:14] *** squashable6 left
[12:14] *** squashable6 joined
[12:14] *** ChanServ sets mode: +v squashable6

[12:14] *** squashable6 left
[12:16] *** squashable6 joined
[12:16] *** mtj_ left
[12:30] *** pmurias joined
[12:30] <cpan-p6> New module released to CPAN! XML::Actions (0.4.2) by 03MARTIMM

[12:31] *** domidumont left
[12:34] *** aborazmeh joined
[12:34] *** aborazmeh left
[12:34] *** aborazmeh joined
[12:42] *** Cabanossi left
[12:43] *** pat_js left
[12:50] *** Itaipu left
[12:51] *** Itaipu joined
[12:54] *** MilkmanDan left
[12:54] *** MilkmanDan joined
[12:55] *** Cabanossi joined
[12:58] *** guifa joined
[13:05] *** domidumont joined
[13:07] *** chinarulez left
[13:08] *** zakharyas joined
[13:15] *** softmoth joined
[13:16] *** pmurias left
[13:17] *** chinarulez joined
[13:18] *** softmoth left
[13:18] *** softmoth joined
[13:23] *** pmurias joined
[13:30] *** wamba left
[13:31] *** wamba joined
[13:36] *** molaf joined
[13:47] *** rbt left
[13:47] *** rbt joined
[13:51] *** aborazmeh left
[13:57] *** lucasb joined
[14:00] <Doc_Holliwood> What's a Red model?

[14:01] <sena_kun> Doc_Holliwood, a meta-object supporting ORM operations from https://github.com/FCO/Red project

[14:03] <Doc_Holliwood> Ah I see. So nothing to do with the Red language then.

[14:03] *** zakharyas left
[14:03] <discord6> <RaycatWhoDat> Yeah, that confused me for a while too, Doc.

[14:03] <sena_kun> yeah, nothing to do with Red language

[14:04] <sena_kun> s/with /with the /

[14:04] <discord6> <RaycatWhoDat> An aside: Is there an equivalent of Common Lisp's loop macro in Perl 6?

[14:05] *** zakharyas joined
[14:05] <discord6> <RaycatWhoDat> More specifically, is there a way to emulate all the ways loop works?

[14:06] <timotimo> yes, perl6 is the equivalent of the loop macro :) :)

[14:06] <lucasb> it's all builtin in the language :)

[14:07] <timotimo> with a lisp loop macro you can do everything that perl6 can do

[14:10] <discord6> <RaycatWhoDat> So, I'll take that as a no and I have to build those facilities myself?

[14:10] <discord6> <RaycatWhoDat> Can't tell through all the smilies.

[14:10] <timotimo> i'm not familiar enough with the loop macro to answer

[14:11] <timotimo> i mean, you can do a lot with just Z and .kv or .pairs and friends

[14:12] <lucasb> I'm looking at http://www.gigamonkeys.com/book/loop-for-black-belts.html

[14:13] <lucasb> whereas the loop macro condensates a lot of features into a single entity

[14:13] <discord6> <RaycatWhoDat> Yeah, it gets gnarly because it's its own dialect, damn near

[14:13] <lucasb> in P6, the features are spread in the language

[14:14] <discord6> <RaycatWhoDat> Right. So, at a glance, how would you write this in Perl 6? https://github.com/RayMPerry/kitchen-sink/blob/master/common-lisp/deck-of-cards.lisp#L31

[14:15] <discord6> <RaycatWhoDat> 'floor' cheats a little bit because it's a multireturn

[14:16] <lucasb> I would need to study to translate that CL...

[14:16] <lucasb> but the basic list comprehension code is: (EXPR if PREDICATE for LIST)

[14:17] <discord6> <RaycatWhoDat> Got it. Actually, I think I'll give this a crack.

[14:17] <lucasb> m: say ("<$_>" if $_ %% 2 for ^10)

[14:17] <camelia> rakudo-moar 17d036ad4: OUTPUT: «(<0> <2> <4> <6> <8>)␤»

[14:17] <discord6> <RaycatWhoDat> Should be good practice.

[14:17] <timotimo> once it's in perl6 we can surely help make it more idiomatic

[14:17] <discord6> <RaycatWhoDat> what in tarnation is that

[14:17] <discord6> <RaycatWhoDat> Is $ the topic?

[14:18] <timotimo> yes

[14:18] <discord6> <RaycatWhoDat> Okay, makes sense. Sorry, I'm still getting used to all the glyphs and seeing them in their compact forms

[14:22] <lucasb> hmm, maybe it's better to use a gather/take for that make-deck-of-cards example

[14:23] <discord6> <RaycatWhoDat> Is that the "generator"/"yield" thing?

[14:23] <lucasb> yes

[14:24] <discord6> <RaycatWhoDat> Neat

[14:24] <discord6> <RaycatWhoDat> Is there a way to say a class should have exactly X of something

[14:25] *** Kaiepi left
[14:26] *** molaf left
[14:28] <discord6> <RaycatWhoDat> or is there a way to say I want this to be a List of Type?

[14:28] *** Kaiepi joined
[14:31] *** reach_satori_ left
[14:33] <MasterDuke> RaycatWhoDat: my SomeType @somelist; my OtherType @otherlist[4]; my @yalist where .elems == 5 and .all ~~ YAType; # something roughly like those

[14:33] <MasterDuke> or my @list of Type

[14:41] <abraxxa> sena_kun: I'm here regarding ldap paging control

[14:42] <sena_kun> abraxxa, yup

[14:42] <sena_kun> abraxxa, I am now looking at https://github.com/Altai-man/cro-ldap/issues/10 right now

[14:42] <abraxxa> sena_kun: no problem

[14:45] <sena_kun> abraxxa, as for paged one, I'd like to get more debug info, but probably a bit later... I see that the error from AD _possibly_ relates to cookie re-usage, but we explicitly change it... luckily, a couple of days ago I have finished my master's paper (which is the boring part) and can dedicate more of my time to ldap, so eventually we'll get there

[14:47] <abraxxa> sena_kun: I've already read RfCs and AD docs and the cookie returned from the server is the same for each page

[14:47] <abraxxa> sena_kun: and the RfC states that it has to be handled as binary blob and sent with the next page unaltered, so this part looks ok

[14:48] <sena_kun> oh, the same for each page? let me check the RFC...

[14:49] *** squashable6 left
[14:50] <sena_kun> hmm, RFC says that the server _may_ prohibit cookie reuse, but nothing about if it should be different or not

[14:52] <sena_kun> abraxxa, I see https://github.com/owncloud/core/issues/5438, but if the cookie is re-used by AD, then I wonder what may be the cause

[14:53] *** squashable6 joined
[14:54] *** Sgeo_ joined
[14:57] *** Sgeo left
[15:01] *** Sgeo joined
[15:03] *** MasterDuke left
[15:04] *** Sgeo_ left
[15:06] *** wamba left
[15:09] *** MasterDuke joined
[15:13] <discord6> <RaycatWhoDat> Woo. https://github.com/RayMPerry/kitchen-sink/blob/master/perl6/deck-of-cards.p6

[15:19] <guifa> Updated Intl::CLDR to add support for Genders and a much improved localized number support.  Meant to push it out yesterday but … yeah haha

[15:20] <guifa> Please play around with it and try to break it :-)

[15:28] *** kensanata left
[15:29] *** jmerelo joined
[15:43] *** pat_js joined
[15:48] *** liztormato joined
[15:52] *** liztormato left
[15:58] *** ChoHag left
[15:59] <guifa> RaycatWhoDat: you should make the .gist show the Unicode card :-)

[16:09] *** pat_js left
[16:09] <discord6> <RaycatWhoDat> wat

[16:09] <discord6> <RaycatWhoDat> is that a thing

[16:09] <discord6> <RaycatWhoDat> m: say \c[EIGHT OF SPADES CARD]

[16:09] <evalable6> RaycatWhoDat, rakudo-moar 1e2b0ec59: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/WvwSKSCzyb␤Undecla…»

[16:09] <evalable6> RaycatWhoDat, Full output: https://gist.github.com/49d53a5bad7b9fec8e0373c65c46433b

[16:10] <discord6> <RaycatWhoDat> m: say \c[PLAYING CARD EIGHT OF SPADES]

[16:10] *** rbt left
[16:10] <evalable6> RaycatWhoDat, rakudo-moar 1e2b0ec59: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/9tM87XjPuL␤Undecla…»

[16:10] <evalable6> RaycatWhoDat, Full output: https://gist.github.com/f408cd27bca0af7e06431cc43fa5c830

[16:10] *** rbt joined
[16:11] <discord6> <RaycatWhoDat> ohhhhhh

[16:11] <discord6> <RaycatWhoDat> It needs to be in a string

[16:11] <discord6> <RaycatWhoDat> duh

[16:11] <discord6> <RaycatWhoDat> m: say "\c[PLAYING CARD EIGHT OF SPADES]"

[16:11] <evalable6> RaycatWhoDat, rakudo-moar 1e2b0ec59: OUTPUT: «🂨␤»

[16:11] *** Doc_Holliwood left
[16:12] *** domidumont left
[16:16] *** lizmat joined
[16:16] * guifa still wants to know why Unicode didn’t just do generic cards of values 1..* and use a combiner for the different suites, since not all decks use hearts/diamonds/clubs/spades.  But at least they finally added cards for swords/coins/cups/sticks, but still no roses, acorns, bells, or leaves

[16:21] *** Doc_Holliwood joined
[16:28] <discord6> <RaycatWhoDat> Hmm.

[16:28] <discord6> <RaycatWhoDat> Is there a way to safely compose those character constants?

[16:28] <discord6> <RaycatWhoDat> Seems like string concatenation isn't doing it for me.

[16:29] *** scimon left
[16:30] <guifa> .uniparse

[16:30] <guifa> m: my $number = “EIGHT”; my $suite = “SPADES”; say “PLAYING CARD $number OF $suite”.uniparse

[16:30] <camelia> rakudo-moar 17d036ad4: OUTPUT: «🂨␤»

[16:31] <guifa> Latin deck (called “minor arcana” in Unicode, has slightly different format:)

[16:31] <guifa> m: say “TAROT CARD EIGHT OF CUPS”.uniparse

[16:31] <camelia> rakudo-moar 17d036ad4: OUTPUT: «Unrecognized character name [TAROT CARD EIGHT OF CUPS]␤  in block <unit> at <tmp> line 1␤␤»

[16:32] * guifa raises an eyebrow

[16:32] *** pat_js joined
[16:32] *** pat_js left
[16:33] *** chloekek joined
[16:35] *** wamba joined
[16:36] <discord6> <RaycatWhoDat> I did it but my editor doesn't understand

[16:37] <discord6> <RaycatWhoDat> Feels bad, man

[16:37] *** chloekek left
[16:37] *** wildtrees joined
[16:40] *** chloekek joined
[16:40] <guifa> Does it still run okay?  Sometimes certain constructs make it go crazy.  On Comma I find some random Regexes will cause the rest of the file to show as an error, but everythnig still runs

[16:40] *** wamba left
[16:41] <timotimo> guifa: have you made some reports? they could be valuable :)

[16:41] *** wamba joined
[16:42] <guifa> timotimo: I have :-)  I’m trying to find ones I can reproduce well and not end up reporting the same error multiple times over and over again

[16:42] <timotimo> great!

[16:42] <guifa> I’m sure jnhtn sees a new Comma issue and is like “damnit, that guifa again, always finding ways to mess things up”

[16:43] <discord6> <RaycatWhoDat> guifa, it runs fine. My editor just doesn't know how to display the playing card unicode series

[16:44] *** dakkar left
[16:54] *** Sgeo_ joined
[16:55] <sena_kun> guifa, not sure about jnthn, but this morning I fixed #53, for example.

[16:56] <sena_kun> along with e.g. `m => 42`

[16:57] *** Sgeo left
[17:10] <AlexDaniel> moritz, nine: camelia is still behind master HEAD

[17:28] *** Ven`` joined
[17:32] *** domidumont joined
[17:33] <moritz> m: say 42

[17:33] <camelia> rakudo-moar 17d036ad4: OUTPUT: «42␤»

[17:34] <moritz> m: say $*VERSION

[17:34] <camelia> rakudo-moar 17d036ad4: OUTPUT: «Dynamic variable $*VERSION not found␤  in block <unit> at <tmp> line 1␤␤»

[17:34] <moritz> m: say $*PERL.version

[17:34] <camelia> rakudo-moar 17d036ad4: OUTPUT: «v6.d␤»

[17:36] *** MilkmanDan left
[17:36] <moritz> camelia@camelia:~> ./rakudo-m-inst/bin/perl6-m --version

[17:36] <moritz> This is Rakudo version 2019.07.1-254-g17d036ad4 built on MoarVM version 2019.07.1-134-ga37504d12

[17:36] <moritz> implementing Perl 6.d.

[17:36] <moritz> so it seems to build a pretty recent rakudo, but doesn't use it?

[17:37] *** MilkmanDan joined
[17:39] <moritz> no, not recent

[17:45] *** zakharyas left
[17:48] *** chloekek left
[17:54] *** leont joined
[17:55] <moritz> http://perlpunks.de/paste/show/5d93931a.6c2a.15f this is how the build of a recent rakudo fails for camelia

[17:55] <moritz> any ideas?

[18:00] <lizmat> git submodule update ?

[18:00] *** chloekek joined
[18:01] <moritz> doesn't change anything

[18:02] <lizmat> starting with a fresh checkout ?

[18:04] * moritz tries

[18:05] *** chloekek left
[18:06] <moritz> today I learned a secret about fast rakudo builds

[18:06] <moritz> it doesn't feel slow if you don't wait for it

[18:07] <discord6> <RaycatWhoDat> o

[18:07] <discord6> <RaycatWhoDat> It's just that easy

[18:09] *** Sgeo__ joined
[18:11] *** Sgeo joined
[18:12] *** Sgeo_ left
[18:13] <moritz> m: say 42

[18:13] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «42␤»

[18:13] *** Sgeo_ joined
[18:13] <moritz> we have an up-to-date rakudo now

[18:13] *** Sgeo__ left
[18:14] <discord6> <RaycatWhoDat> What's new?

[18:16] *** Sgeo__ joined
[18:17] *** Sgeo left
[18:18] *** Sgeo joined
[18:20] *** Sgeo_ left
[18:21] *** Sgeo__ left
[18:22] *** Sgeo_ joined
[18:23] *** Sgeo left
[18:23] *** pmurias left
[18:24] *** Sgeo__ joined
[18:24] *** chloekek joined
[18:27] *** Sgeo_ left
[18:29] *** pmurias joined
[18:29] <AlexDaniel> moritz++

[18:39] *** jmerelo left
[18:40] *** softmoth left
[18:44] *** domidumont left
[18:45] *** domidumont joined
[18:49] *** domidumont left
[18:50] <eiro> no way to use an object as a key for Associative ?

[18:51] <sena_kun> just make it `does Associative`

[18:51] <sena_kun> and implement its methods

[18:52] <sena_kun> m: class A does Associative { method AT-kEY($key) { 42 }; method EXISTS-KEY($key) { True }; }; my $a = A.new; say $a<fufufu>;

[18:52] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «Associative indexing implementation missing from type A␤  in block <unit> at <tmp> line 1␤␤»

[18:52] <sena_kun> oh, really...

[18:53] <sena_kun> m: class A does Associative { method AT-kEY(\key) { 42 }; method EXISTS-KEY(\key) { True }; }; my $a = A.new; say $a<fufufu>;

[18:53] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «Associative indexing implementation missing from type A␤  in block <unit> at <tmp> line 1␤␤»

[18:53] <eiro> hmm... ok... too complicated for a simple sysop script: i'll find a way to get a Str from a Buf

[18:53] <sena_kun> erm

[18:53] <sena_kun> ok, never mind me then

[18:54] <eiro> sena_kun: no... the anwser is very interesting to *me* and i'll test for myself

[18:55] <sena_kun> ah

[18:55] <sena_kun> then I'll try a bit more. :)

[18:55] <eiro> but not relevant for the one i try to help. i try to convince him that perl6 will be simple enought to remove shell scripting (and he's a sysop, not a developper)

[18:55] <sena_kun> what's the exact thing to do?

[18:55] <tobs> m: my %h{Any}; %h{$*PERL} = 42; say %h; say %h{$*PERL}; say %h{$*PERL.clone} # <-- note that it uses object identity

[18:55] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «{Perl 6 (6.d) => 42}␤42␤(Any)␤»

[18:56] <eiro> (by the way it's a very interesting experience ... i wasn't aware of all the concepts we think as simple as they scare the sysops like hell

[18:56] <tobs> sena_kun: I understood the question differently. Isn't this about using some object as a key to a hash, instead of making your own Associative?

[18:56] *** softmoth joined
[18:56] <sena_kun> oooooh, I am stupid today

[18:57] <sena_kun> sorry for confusing, I totally mis-read this

[18:57] <eiro> for dir 'videos' {

[18:57] <eiro>   next if not .f && .r;

[18:57] <eiro>   %files{.s}{.slurp :bin} = $_

[18:57] <eiro> } 

[18:58] <eiro> there are a lot of files with the same content inthere. i wrote my first version using ..

[18:58] <eiro> oh w8: i'll paste-bin

[18:58] <tobs> eiro: I am not sure if %h{Buf} will do what you mean though, that is if it considers equal buf contents equal or only identical Buf objects...

[18:59] <sena_kun> maybe `unique` with a custom comparator is needed?

[19:00] <eiro> this is the shell script i want to translate https://gist.github.com/eiro/0ff057f154e811ba370c944d4e8fc169 

[19:00] <sena_kun> m: ['foo'.encode, 'bar'.encode, 'foo'.encode].unique(with => { $^a eqv $^b }).map(*.decode).say;

[19:00] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «(foo bar)␤»

[19:02] <eiro> i wrote it so easily and now we want to compare to perl6 version

[19:04] <eiro> i'm trying

[19:06] *** Sgeo joined
[19:09] *** Sgeo__ left
[19:12] *** chloekek left
[19:12] *** softmoth left
[19:12] <pmurias> is the rename decided?

[19:13] <pmurias> I'm considering I should be using the raku name for rakudo.js already

[19:15] *** chloekek joined
[19:15] <vrurg> pmurias: not yet.

[19:15] <Grinnz> (it's already an official alias, technically)

[19:15] <guifa> eiro: for non-string keys, use :{ … } to create it.  Or you can parameterize it directly

[19:16] <guifa> my Foo %x{Bar}

[19:16] <guifa> That creates a Hash with values of type Foo, but keys of type Bar

[19:21] <eiro> as i tested the unique thing from sena_kun's proposal, i found .classify in the documentation. raku is awesome

[19:21] <pmurias> what should a js Symbol be mapped to in Perl 6?

[19:21] <eiro> guifa: now i'll test your solution

[19:22] <guifa> sena_kun: ah!  I didn’t realize you were working Comma too.  Okay, “I’m sure jnthn and sena_kun look at a new Comma issue and are like, ‘damnit, that guifa again, always find ways to mess things up” ;-)

[19:22] <sena_kun> guifa, :)

[19:22] *** sno joined
[19:31] *** molaf joined
[19:31] <eiro> guifa: was your proposal to write thing this way: %files{.s}:{.slurp :bin} = $_ ?

[19:32] <guifa> No, you’d say … 

[19:33] <guifa> my %files{KeyType};  %files{$key} = $value;

[19:34] <eiro> hoo ... to declare the Associative! Nice ...

[19:35] <eiro> ok it works like a charm for a one level hash. thank you

[19:35] <guifa> If you need to create a second level, you have a few options

[19:35] *** pmurias left
[19:36] <guifa> If you are okay initializing each level, you can use Hash{KeyType}.new; instead of () 

[19:37] <guifa> Actually, I’m not sure if you could directly do %foo{$a}{$b} in that case, I should check

[19:39] <guifa> m: my %foo{Int}; %foo{1}{2.5} = "bar"; say %foo.keys[0].WHAT; say %foo{1}.keys[0].WHAT;

[19:39] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «(Int)␤(Str)␤»

[19:40] <eiro> guifa: not that important tonight as .classify really was the think i needed

[19:40] <guifa> Ah okay. 

[19:40] <eiro> actually: classify + your tip

[19:42] <eiro> https://gist.github.com/eiro/c21b6f62bcb9ea10df51ef6293283a15 < guifa 

[19:42] <eiro> i find it so sexy!

[19:43] <guifa> This one might even be a candidate for the ==> operators

[19:45] <eiro> i always fail trying to use it so i stick on my beloved perl5 style

[19:45] *** zakharyas joined
[19:46] <eiro> the only thing i miss when i write the things that way is , can't be prefixed line continuations

[19:48] *** pecastro joined
[19:49] *** lizmat left
[19:52] *** pmurias joined
[19:53] *** lizmat joined
[19:59] *** lizmat left
[20:02] *** kensanata joined
[20:12] *** Black_Ribbon joined
[20:15] <guifa> oooh I just came up with an icon for the Intl:: modules.  Apparently there’s a butterfly world map project :-D

[20:18] *** pmurias left
[20:20] <guifa> https://en.wikipedia.org/wiki/Waterman_butterfly_projection#/media/File:Waterman_projection.png

[20:24] <eiro> sena_kun, guifa thanks again for helping. 'night everyone

[20:24] *** pmurias joined
[20:37] *** softmoth joined
[20:39] <eiro> how guifa sena_kun i found a simple tip as well: {(.slurp: :bin).gist}

[20:49] *** zakharyas left
[20:49] *** softmoth left
[20:50] *** chloekek left
[20:58] *** sena_kun left
[21:10] *** krychu joined
[21:16] *** reach_satori_ joined
[21:18] *** kensanata left
[21:20] *** softmoth joined
[21:21] *** chinarulez left
[21:22] *** squashable6 left
[21:24] *** squashable6 joined
[21:24] *** ChanServ sets mode: +v squashable6

[21:25] *** softmoth_ joined
[21:25] *** softmoth left
[21:52] *** ChoHag joined
[21:53] *** Kaiepi left
[21:53] *** rbt left
[21:54] *** Kaiepi joined
[21:56] *** Xliff joined
[21:56] <Xliff> \o

[21:57] <Xliff> I'm having problem with %*RESOURCES not being populated prior to install. Isn't it supposed to read META6.json for that data?

[21:59] *** softmoth_ is now known as softmoth

[22:00] *** astronavt left
[22:01] *** astronavt joined
[22:13] *** ChoHag left
[22:13] *** wildtrees left
[22:16] <Xliff> m: "\o33".say

[22:16] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «␤»

[22:17] <Xliff> m: "/\o1\o2\o3/\o244".say

[22:17] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «//¤␤»

[22:21] *** reach_satori joined
[22:21] *** reach_satori_ left
[22:22] *** krychu left
[22:25] <Xliff> m: sub a(&f) { say &f.^name }; a(-> $a { });

[22:25] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «Block␤»

[22:25] *** MilkmanDan left
[22:26] *** MilkmanDan joined
[22:30] *** pecastro left
[22:31] *** Ven`` left
[22:32] *** Ven`` joined
[22:32] *** Ven`` left
[22:33] *** lizmat joined
[22:34] *** wamba left
[22:36] *** lucasb left
[22:42] *** Cabanossi left
[22:44] <tbrowder> any experts on use of Build.pm6 araound?

[22:44] <Xliff> lizmat: You around?

[22:47] *** ChoHag joined
[22:52] *** Cabanossi joined
[22:53] <Xliff> .tell lizmat Given https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GIO/Roles/LoadableIcon.pm6#L90, do you have any idea as to what I am doing wrong when using the "load-finish" alias gives me the following error: "Cannot resolve caller load_finish(GIO::FileIcon:D, GTK::Compat::Types::GAsyncResult:D); Routine does not have any candidates. Is only the proto defined?" 

[22:53] <tellable6> Xliff, I'll pass your message to lizmat

[23:18] *** ChoHag left
[23:20] *** softmoth left
[23:26] *** pmurias left
[23:29] *** bazzaar joined
[23:30] <bazzaar> \o perl6

[23:34] <bazzaar> p6 my %names = %(:family<Perl>, language => 'Perl 6', :alias<6>);my $useage = %names{'family'} ~ '\'s "' ~ %names{'alias'} ~ '" programming language is exquisite.';say $useage;

[23:34] <bazzaar> p6: my %names = %(:family<Perl>, language => 'Perl 6', :alias<6>);my $useage = %names{'family'} ~ '\'s "' ~ %names{'alias'} ~ '" programming language is exquisite.';say $useage;

[23:34] <camelia> rakudo-moar 1e2b0ec59: OUTPUT: «Perl's "6" programming language is exquisite.␤»

[23:36] <bazzaar> Just wondering if this is a wacky idea, if so please ignore it

[23:44] *** bazzaar left
[23:47] *** shadowpaste left
[23:59] *** go|dfish left
