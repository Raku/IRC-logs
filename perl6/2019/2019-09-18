[00:02] <vrurg> .seen TimToady 

[00:02] <tellable6> vrurg, I saw TimToady 2019-07-22T20:38:55Z in #perl6-dev: <TimToady> ‚êÅACTION had the power company swapping his electric meter, and it broke my / key‚êÅ

[00:02] <rindolf> hi all! my twitter is full of crazy but true stuff now - https://twitter.com/shlomif

[00:03] <rindolf> i'm hypomanic and paranoid

[00:03] <rindolf> vrurg: wow

[00:32] *** Actualeyes left
[00:34] *** _jrjsmrtn joined
[00:34] *** __jrjsmrtn__ left
[00:48] *** lucasb left
[00:48] <Geth_> ¬¶ whateverable: taboege self-assigned Tellable should format CTCP ACTION https://github.com/perl6/whateverable/issues/360

[00:50] <AlexDaniel> tobs: I'm actually not sure if tellable even records actions

[00:50] * AlexDaniel foo

[00:50] <AlexDaniel> .seen AlexDaniel

[00:50] <tellable6> AlexDaniel, I saw AlexDaniel 2019-09-18T00:50:55Z in #perl6: <AlexDaniel> ‚êÅACTION foo‚êÅ

[00:51] <AlexDaniel> ok it does‚Ä¶

[00:52] <AlexDaniel> but some ACTION lines came from yoleaux

[00:52] <AlexDaniel> .seen talexb

[00:52] <tellable6> AlexDaniel, I saw talexb 2015-12-27T05:01:09Z in #perl6: <talexb> ‚êÅACTION loves maxing out his Interwebs connection by pulling down all of github ..‚êÅ

[00:53] <AlexDaniel> ok then it's probably easier than I thought :)

[00:53] <tobs> AlexDaniel: what do you mean? yoleaux impersonated people?

[00:53] <tobs> oh, good, I thought it was very easy :)

[00:54] <AlexDaniel> tobs: I was just wondering if yoleaux stored them the same way tellable6 does now

[00:54] <AlexDaniel> tobs: in this case my message (a minute ago) was recorded by tellable6, but TimToady's message was probably recorded by yoleaux

[00:54] <tobs> ah, that's something a test wouldn't have caught indeed

[00:55] <AlexDaniel> how old are you, tellable6?

[00:55] <AlexDaniel> something they should probably know how to respond to :D

[01:07] <Kaiepi> posted part 2 of my series of metaprogramming q&as on so https://stackoverflow.com/questions/57982956/how-do-you-access-private-methods-or-attributes-from-outside-the-type-they-belon/57982957#57982957

[01:20] <Geth_> ¬¶ whateverable: taboege++ created pull request #362: Tellable: format CTCP ACTION

[01:20] <Geth_> ¬¶ whateverable: review: https://github.com/perl6/whateverable/pull/362

[01:21] *** nepugia left
[01:22] <AlexDaniel> tobs: brilliant

[01:22] <AlexDaniel> tobs: but‚Ä¶ bridged /me?

[01:22] <AlexDaniel> is the test doing what it is supposed to do? :)

[01:23] <tobs> I think a bridged user could write a message that inserts a /me-lookalike into the message db, right?

[01:23] <tobs> I don't think it's useful, no

[01:24] <tobs> at least that's what it's supposed to test

[01:25] <AlexDaniel> tobs: so if let's say someone /me's from Discord, what discord6 is going to print?

[01:25] <AlexDaniel> is it going to /me itself or is it going to say ‚Äú<user> ACTION blah blah‚Äù

[01:27] <tobs> probably the latter, right...

[01:28] <AlexDaniel> I think the former would be more logical, but we don't have an example of that so there's not much to do or test?

[01:28] <tobs> so let's say CTCP is an IRC thing and just test :!both? :)

[01:28] <AlexDaniel> it's not strictly an IRC thing, it exists in Matrix and even in Skype‚Ä¶

[01:28] <AlexDaniel> I don't know if discord has it

[01:28] <AlexDaniel> timotimo: ?

[01:29] <tobs> oh, TIL

[01:29] *** ravenous_ joined
[01:30] <AlexDaniel> the question is how bridges are handling it

[01:30] <AlexDaniel> but yeah, maybe :!both for the time being

[01:30] *** Doc_Holliwood left
[01:30] *** Doc_Holliwood joined
[01:32] <tobs> AlexDaniel: updated

[01:33] *** hythm_ joined
[01:33] *** hythm_ left
[01:33] *** hythm joined
[01:34] <Geth_> ¬¶ whateverable: a600ecb54f | (Tobias Boege)++ | 2 files

[01:34] <Geth_> ¬¶ whateverable: Tellable: format CTCP ACTION

[01:34] <Geth_> ¬¶ whateverable: 

[01:34] <Geth_> ¬¶ whateverable: Closes #360

[01:34] <Geth_> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/a600ecb54f

[01:34] <Geth_> ¬¶ whateverable: 0357ee557c | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | 2 files

[01:34] <Geth_> ¬¶ whateverable: Merge pull request #362 from taboege/tellable-ctcp-action

[01:34] <Geth_> ¬¶ whateverable: 

[01:34] <Geth_> ¬¶ whateverable: Tellable: format CTCP ACTION

[01:34] <Geth_> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/0357ee557c

[01:34] *** ravenous_ left
[01:34] *** tellable6 left
[01:36] *** molaf left
[01:37] <tobs> AlexDaniel: as for the bot age, that could be hardcoded, right? In some kind of %?RESOURCES<bot-birth.json>

[01:38] *** tellable6 joined
[01:38] *** ChanServ sets mode: +v tellable6

[01:39] * AlexDaniel yells

[01:39] <AlexDaniel> tellable6: AlexDaniel

[01:39] <tellable6> AlexDaniel, I saw AlexDaniel 2019-09-18T01:39:20Z in #perl6: * AlexDaniel yells

[01:41] <AlexDaniel> tobs++

[01:41] <AlexDaniel> tobs: maybe peek into the git history? :D

[01:41] <AlexDaniel> if it's not in the git repo, then answer ‚ÄúI don't know‚Äù

[01:42] <tobs> git log --follow is how that file could be created, or the command could be used directly

[01:42] <tobs> I didn't know if the git repo is usually available on the server

[01:43] <AlexDaniel> it is

[01:43] <AlexDaniel> I just git pull when new stuff is committed

[01:48] *** molaf joined
[01:50] *** Doc_Holliwood left
[01:51] <AlexDaniel> this does seem to work: git log --format="%aI" --follow xbin/Bisectable.p6

[01:51] <AlexDaniel> so the last line is the actual date

[01:57] <Geth_> ¬¶ whateverable: taboege self-assigned How old are you? https://github.com/perl6/whateverable/issues/361

[01:57] <tobs> that should be doable

[02:04] *** epony left
[02:16] *** Cabanossi left
[02:17] *** Cabanossi joined
[02:44] *** epony joined
[02:48] <hythm> m: say sort < z a >; say sort < zz aa >; # is there a difference in sorting characters and words? in case of sorting words, does that mean that the sort function splits each word into characters then compare each character with the respective character from the second word?

[02:48] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(a z)‚ê§(aa zz)‚ê§¬ª

[02:51] <hythm> rephrasing, what actually happens when passing two words ( for example 'hello world') to the`sort function? 

[03:20] <AlexDaniel> hythm: sooo‚Ä¶ good question, can you file a doc ticket for it? Basically, sort should use cmp, so we should look at how cmp compares strings. But cmp for Str is not currently documented

[03:21] <AlexDaniel> hythm: but anyway, that should call nqp::cmp_s which then seems to go to moarvm MVM_string_compare

[03:21] <AlexDaniel> https://github.com/MoarVM/MoarVM/blob/b2dc3f3ba2f0c4dc9c7bb35c0925a307b60b98d6/src/strings/ops.c#L2364-L2484

[03:21] <AlexDaniel> here

[03:27] <AlexDaniel> hythm: so it compares character by character, if all characters were same then the longest string wins

[03:27] <AlexDaniel> well‚Ä¶ graphemes, surely

[03:28] <AlexDaniel> hythm: so yes, when comparing ‚Äòhello‚Äô and ‚Äòworld‚Äô it'll look at ‚Äòh‚Äô and ‚Äòw‚Äô and that'd be it

[03:30] <hythm> Thanks AlexDaniel. opened #3026

[03:31] <hythm> makes sense, but I'm still confused by: 'apple app'.sort and 'apple app'.words.sort

[03:32] <hythm> m: say 'apple app'.sort; say 'apple app'.words.sort;

[03:32] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(apple app)‚ê§(app apple)‚ê§¬ª

[03:32] <AlexDaniel> m: dd 'apple app'.sort; dd 'apple app'.words.sort;

[03:32] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´("apple app",).Seq‚ê§("app", "apple").Seq‚ê§¬ª

[03:32] <AlexDaniel> hythm: in the first case it just treats it as a list with a single item

[03:33] <AlexDaniel> hythm: so there's nothing to sort, it's just one item

[03:33] <hythm> makes sense

[03:33] <hythm> thanks

[03:33] <AlexDaniel> for apple and app ‚Äúapp‚Äù part will match, so the longer string is More

[03:33] <AlexDaniel> m: say ‚Äòapple‚Äô cmp ‚Äòapp‚Äô

[03:33] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´More‚ê§¬ª

[03:34] <hythm> right

[03:37] *** rindolf left
[04:00] *** agentzh left
[04:02] *** agentzh joined
[04:19] *** hythm left
[04:22] *** molaf left
[04:53] *** wamba joined
[05:04] *** cpan-p6 left
[05:05] *** cpan-p6 joined
[05:05] *** cpan-p6 left
[05:05] *** cpan-p6 joined
[05:12] *** ravenous_ joined
[05:16] *** ravenous_ left
[05:24] <Geth_> ¬¶ whateverable: taboege++ created pull request #363: Answer ‚Äúhow old are you‚Äù and ‚Äúage‚Äù queries

[05:24] <Geth_> ¬¶ whateverable: review: https://github.com/perl6/whateverable/pull/363

[05:37] *** sena_kun joined
[05:37] *** Sgeo_ joined
[05:41] *** Sgeo__ left
[06:02] *** sauvin joined
[06:03] *** squashable6 left
[06:06] *** squashable6 joined
[06:06] *** ChanServ sets mode: +v squashable6

[06:09] *** _jrjsmrtn left
[06:14] *** domidumont joined
[06:15] *** domidumont left
[06:15] *** [Coke]_ joined
[06:15] *** wamba left
[06:16] *** domidumont joined
[06:17] *** [Coke] left
[06:23] *** domidumont left
[06:23] *** ravenous_ joined
[06:27] *** ravenous_ left
[06:33] *** reach_satori left
[06:40] *** domidumont joined
[06:47] *** Itaipu left
[06:47] *** Itaipu_ joined
[07:00] *** wamba joined
[07:05] <lizmat> weekly: Itch.scratch() | Damian Conway

[07:05] <notable6> lizmat, Noted! (weekly)

[07:05] <lizmat> weekly: http://blogs.perl.org/users/damian_conway/2019/09/itchscratch.html

[07:05] <notable6> lizmat, Noted! (weekly)

[07:16] *** Itaipu joined
[07:18] *** Itaipu_ left
[07:44] *** abraxxa left
[07:45] *** Doc_Holliwood joined
[07:50] *** ufobat joined
[07:50] <ufobat> good morning :)

[07:50] <El_Che> lo

[07:52] <AlexDaniel> El_Che: radkudoc?? Please fix it :D

[07:57] *** __jrjsmrtn__ joined
[08:00] <Kaiepi> m: class Foo { our $*BAR := 1 }; say Foo::<$*BAR>

[08:00] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§¬ª

[08:00] <Kaiepi> m: class Foo { our $*BAR := 1 }; say Foo::<$BAR>

[08:00] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§¬ª

[08:00] <Kaiepi> m: class Foo { our $*BAR := 1 }; say Foo::<BAR>

[08:00] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§¬ª

[08:00] *** abraxxa joined
[08:00] <Kaiepi> m: class Foo { our $*BAR := 1 }; say Foo::.keys

[08:00] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´($*BAR)‚ê§¬ª

[08:01] <Kaiepi> m: class Foo { our $*BAR := 1 }; say Foo::<($*BAR)>

[08:01] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§¬ª

[08:01] <Kaiepi> ?

[08:02] <Kaiepi> m: class Foo { our $*BAR := 1 }; say Foo::{"(\$*BAR)\n"}

[08:02] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Any)‚ê§¬ª

[08:03] *** reach_satori joined
[08:07] *** Cabanossi left
[08:08] *** sena_kun left
[08:11] *** zakharyas joined
[08:15] *** reach_satori left
[08:16] *** reach_satori joined
[08:19] *** Cabanossi joined
[08:23] *** reach_satori left
[08:24] *** reach_satori joined
[08:27] *** reach_satori left
[08:27] <abraxxa> lizmat: Damians issue sound like a use for a phaser to me

[08:28] *** reach_satori joined
[08:28] <lizmat> fwiw, I usually do the "if @values { for @values { } } else { }"

[08:28] *** dakkar joined
[08:29] <lizmat> abraxxa: phaser how ?

[08:30] <lizmat> for @values { NONE say "no values" } ?

[08:30] <lizmat> for @values { NEVER say "no values" } ?

[08:30] <lizmat> feels weird to me

[08:30] *** reach_satori left
[08:31] <abraxxa> lizmat: https://docs.perl6.org/language/phasers#FIRST

[08:31] <abraxxa> all phasers are weird to me because no language I had used had such a thing

[08:31] <lizmat> abraxxa: but that's the point: if @values is empty, it will never call FIRST either

[08:32] <abraxxa> so I'd add a new phaser, not an else

[08:32] *** reach_satori joined
[08:33] <abraxxa> I would have preferred syntax like else over phasers everywhere, because the phasers are inside a block instead of after it

[08:33] <abraxxa> mixing those two constructs feels weird

[08:33] <lizmat> all of the other phasers are only called if the block is actually executed

[08:33] <lizmat> phaser being able to share a lexical scope, is a very powerful thing

[08:35] *** reach_satori left
[08:36] *** reach_satori joined
[08:44] <El_Che> AlexDaniel: lol, add dyslexia to the list :)

[08:49] <daxim> https://perl6.org/compilers/features is 404

[08:55] *** sena_kun joined
[08:59] *** cgfbee left
[09:00] *** reach_satori left
[09:01] *** reach_satori joined
[09:03] *** reach_satori left
[09:04] *** reach_satori joined
[09:05] *** reach_satori left
[09:07] *** reach_satori joined
[09:17] *** ravenous_ joined
[09:22] *** reach_satori left
[09:23] *** reach_satori joined
[09:25] *** wamba left
[09:25] *** wamba joined
[09:27] *** MasterDuke left
[09:28] *** Black_Ribbon left
[09:39] *** reach_satori_ joined
[09:39] *** reach_satori left
[09:43] *** cgfbee joined
[09:55] *** reach_satori_ left
[09:55] <holyghost> I'm going to do a bit of psp-gcc for the PF&&PM, I can do my Cell system code in it (which I need to read a bit more for)

[09:55] *** reach_satori_ joined
[09:56] <holyghost> psp == Playstation Portable, a nice MIPS system

[09:58] <holyghost> R9000 processor such as for IRIX systems, SGI's processor

[09:58] <holyghost> There is no R9000 computer however, it was made for the PSP

[10:08] *** domidumont left
[10:17] *** ravenous_ left
[10:26] *** Doc_Holliwood left
[10:26] *** Doc_Holliwood joined
[10:29] *** gugod left
[10:32] *** Guest69469 joined
[10:33] *** aborazmeh joined
[10:33] *** aborazmeh left
[10:33] *** aborazmeh joined
[10:37] <lizmat> completely OT, but a little claim to fame of yours truly: https://www.bitsgalore.org/2019/09/09/recovering-90s-data-tapes-experiences-kb-web-archaeology

[10:43] *** wamba left
[10:43] *** wamba joined
[10:44] *** wamba left
[10:45] *** aborazmeh left
[10:51] *** pat_js joined
[10:55] *** Doc_Holliwood left
[11:03] *** reach_satori_ left
[11:06] *** wamba joined
[11:06] *** wamba left
[11:07] *** wamba joined
[11:17] *** reach_satori joined
[11:25] <tyil> AlexDaniel: I make PRs because I like having other people confirm that I'm not doing shit I'm not supposed to do

[11:25] <tyil> additionally, it helps make more people aware of things that have changed

[11:41] *** wamba left
[11:42] *** zakharyas left
[11:58] *** sno left
[12:03] *** domidumont joined
[12:03] *** wamba joined
[12:05] *** domidumont left
[12:06] *** domidumont joined
[12:15] *** reach_satori left
[12:16] *** pat_js left
[12:16] *** mowcat joined
[12:21] *** gabiruh_ joined
[12:24] <daxim> psp is a shit system (in the general sense, not for its intended purpose).  it can't even run userland linux programs because its hardware lacks a feature that was standard for 30 years or something.  I didn't even know such a thing is possible

[12:24] *** gabiruh left
[12:30] <timotimo> reminds me of the nintendo DS; it lacks an MMU, since it's not meant to run more than one thing at the same time, so the most linux you can get is an uclinux

[12:32] *** lucasb joined
[12:33] *** mowcat left
[12:34] *** Itaipu left
[12:35] *** Itaipu joined
[12:39] *** nepugia joined
[12:46] *** Itaipu left
[12:46] *** Itaipu joined
[12:49] *** wamba left
[12:54] *** wamba joined
[12:54] <tbrowder> hi, i am having no success with "zef install Perl6::TypeGraph". zef reports it can't be found. i am using lalest zef and raku 2019.03

[12:54] <tellable6> 2016-11-16T13:14:59Z #perl6 <moritz> tbowder: original content is preferred, but you can adopt existing articles if they haven't had too many readers yet

[12:54] <tellable6> 2017-12-07T02:53:09Z #perl6 <thou> tbowder: maybe you're interested in this prior work (older, but might help you?) on pod tables inside rakudo: https://github.com/rakudo/rakudo/compare/pod-table

[12:56] <tbrowder> can anyone dup the problem or report install ok if you have the time?

[12:56] <tbrowder> thnx

[12:58] <tbrowder> whoa! tellable dredges up the deep past

[12:58] <moritz> messages from 2016, wow!

[12:59] *** molaf joined
[13:01] <[Coke]_> tbrowder: WFM. I already had it installed, but if I add --force-install it went and found a candidate and installed it

[13:02] <tbrowder> ok, thnx!

[13:03] <jjatria> I also already had it installed, but if I try --force-install it says "No candidates found matching identity: Perl6::TypeGraph"

[13:04] <[Coke]_> https://gist.github.com/coke/33c63ab06168496d83c3398a943ff9a2

[13:05] <[Coke]_> (with my zef install)

[13:07] *** [Coke]_ is now known as [Coke]

[13:09] <[Coke]> ah. the "via local cache" in mine is probably of interest.

[13:10] <[Coke]> I don't see a zef command line option related to cache.

[13:13] <jjatria> I was using zef 0.6.6 but bumping to 0.7.4 makes no difference

[13:27] *** zakharyas joined
[13:31] *** Guest5539 left
[13:32] *** MilkmanDan left
[13:34] *** MilkmanDan joined
[13:35] <SmokeMachine> g

[13:35] <SmokeMachine> sorry...

[13:36] *** success joined
[13:36] <SmokeMachine> vrurg: what about? https://github.com/FCO/Red/issues/400#issuecomment-532686541

[13:36] *** domidumont left
[13:36] *** success is now known as Guest59014

[13:40] *** molaf_ joined
[13:41] *** molaf_ left
[13:41] *** molaf left
[13:42] *** molaf joined
[13:57] *** domidumont joined
[14:03] *** zakharyas left
[14:05] *** cwilson joined
[14:26] *** APic left
[14:30] *** APic joined
[14:34] *** camelia left
[14:36] *** camelia joined
[14:37] *** ChanServ sets mode: +v camelia

[14:40] *** rindolf joined
[14:41] *** reach_satori joined
[14:46] *** pat_js joined
[15:08] *** domidumont left
[15:13] *** Doc_Holliwood joined
[15:16] *** ufobat_ joined
[15:19] *** ufobat left
[15:19] *** domidumont joined
[15:26] *** afresh1 left
[15:28] *** afresh1 joined
[15:32] *** afresh1 left
[15:33] *** afresh1 joined
[15:35] *** MasterDuke joined
[15:37] *** afresh1 left
[15:38] *** domidumont left
[15:42] *** wamba left
[15:47] *** melezhik joined
[15:50] <melezhik> I run external command though run/Proc::Async/shell  on windows, in all cases  it seems  the current environment ( PATH and other env vars ) is not propagated to the launched process . What can I do about it?

[15:57] *** Kaiepi left
[15:58] *** Kaiepi joined
[15:58] *** khisanth_ left
[16:11] *** domidumont joined
[16:13] <melezhik> this for example means that  `run "perl6.bat", "--version"` would succeed , but `run "perl6", "--version";` won't; normally in my current shell perl6 is available both as perl6, perl6.bat, but when I run it though  

[16:13] <[Coke]> run takes an :env parameter.

[16:13] <melezhik> though `run ...` new windows environment misses `perl6`  "shortcut"

[16:14] <[Coke]> looks like it's supposed to default to %*ENV, though

[16:15] <melezhik> @coke can't see how to run `run` with `:env`, I am reading this - https://docs.perl6.org/routine/run

[16:16] <[Coke]> running perl6 itself is probably better done with $*EXECUTABLE, but I get your point.

[16:16] <[Coke]> look for :$env

[16:16] *** khisanth_ joined
[16:17] <melezhik> yeah, the problem with ANY executable which has alternative alias `foo`, `foo.bat`

[16:17] <melezhik> for example with scripts get installed as a part of zef modules

[16:17] <melezhik> into C:\rakudo\share\perl6\site\bin

[16:18] <melezhik> I never manage to run them as `run "foo"`

[16:18] <melezhik> I need to use `run "foo.bat"`

[16:18] <tbrowder> [Coke]: i can now install the problem child. seems like i needed to update several dependencies with problems.

[16:19] <melezhik> which obviously is not a solution because I can't control further executable calls ( which uses normal `foo` notation ) happening from those scripts 

[16:19] <[Coke]> env can be specified with run(..., :env($*ENV)) - but that should be the default. 

[16:20] <[Coke]> Are you sure it's a pathing issue and not a "how to invoke .bat files on windows" issue?

[16:22] <tbrowder> another install issue: two different modules have "resources" dirs and both list the files there inside the META6.json. however, the zef installation places the resources on the local install location but the other (Documental) doesn't!!!

[16:22] <tbrowder> is there any hiddenbmagic

[16:23] <tbrowder>  *hidden magic to make that work?

[16:24] *** k0Le joined
[16:24] <tbrowder> zef is the first of the "two" modules being compared.

[16:24] <Doc_Holliwood> https://docs.perl6.org/language/structures, I think 

[16:24] <Doc_Holliwood> "..., deepmap can perform more complicated operations:" should read ""..., duckmap can perform more complicated operations:" 

[16:24] *** k0Le left
[16:25] *** k0Le joined
[16:26] *** domidumont left
[16:27] <melezhik> @coke that's good question. but now I can't just run `foo` executable through `run`/`Proc.new`/`shell`

[16:28] *** p9s joined
[16:28] *** domidumont joined
[16:31] *** k0Le left
[16:31] *** Guest93 left
[16:32] *** k0Le joined
[16:32] <Doc_Holliwood> `run "cmd.exe", "/c", "foo.bat";` should work. 

[16:33] <melezhik> Doc_Holliwood I need without `.bat`

[16:33] <melezhik> just `foo` (((=:

[16:33] <Doc_Holliwood> batch files need a shell that interprets them. that's why a bare run won't work. Using the "/c" flag, you can tell cmd.exe to run a command and then exit

[16:33] *** k0Le left
[16:34] *** k0Le joined
[16:34] <Doc_Holliwood> it should work without foo i think

[16:34] <Doc_Holliwood> w/o .bat i mean

[16:34] <melezhik> yeah, let me try

[16:35] <melezhik> Doc_Holliwood , it works! thanks, let me test this approach against my code

[16:37] *** dakkar left
[16:37] *** domidumont left
[16:44] *** Guest93 joined
[16:45] *** sno joined
[16:53] *** robertle joined
[16:56] *** pat_js left
[16:56] *** sno left
[17:03] *** wamba joined
[17:24] *** Poohmaan left
[17:24] *** Poohman joined
[17:29] *** aborazmeh joined
[17:29] *** aborazmeh left
[17:29] *** aborazmeh joined
[17:35] *** ravenous_ joined
[17:43] *** nebuchad` joined
[17:44] *** nebuchadnezzar left
[17:44] *** nebuchad` is now known as nebuchadnezzar

[17:55] *** p9s left
[18:02] *** natrys joined
[18:02] *** molaf left
[18:03] *** krychu joined
[18:10] *** melezhik left
[18:15] *** aborazmeh left
[18:15] *** vrurg_ joined
[18:18] *** vrurg left
[18:18] *** vrurg_ is now known as vrurg

[18:25] *** sauvin left
[18:27] *** veesh left
[18:28] *** veesh joined
[18:31] <Geth_> ¬¶ doc: zostay++ created pull request #3027: Fixing a very small error in Baggy

[18:31] <Geth_> ¬¶ doc: review: https://github.com/perl6/doc/pull/3027

[18:42] *** |oLa| joined
[18:45] <discord6> <RaycatWhoDat> Does anyone here use Perl 6 in lieu of C++/D/Rust? If so, how? If not, why and what do you use instead?

[18:49] <vrurg> RaycatWhoDat: what is C++/D/Rust? (just kidding)

[18:51] <timotimo> GNU/Linux/Windows/BSD

[18:51] <discord6> <Rogue> running WSL in a windows VM on BSD

[18:51] <discord6> <Rogue> that's how I operate

[18:52] <discord6> <RaycatWhoDat> Muh semantics

[18:52] <discord6> <RaycatWhoDat> C++, D, or Rust*

[18:53] <discord6> <RaycatWhoDat> Putting that aside, the question remains.

[18:54] <timotimo> perl 6 is good enough for almost everything i do, except for developing moarvm (which is written in C) and doing in-browser stuff, where i go with javascript

[18:54] <discord6> <Rogue> I don't think we're quite there for super performance-critical stuff

[18:55] <timotimo> i sprinkle my performance-critical code with nqp ops

[18:55] <timotimo> it's okay, since i'm a core developer, lol

[18:55] <discord6> <Rogue> but most stuff doesn't have to be

[18:55] <vrurg> RaycatWhoDat: I meant not semantics but the fact that I use none of them. Though interested in Rust and trying to learn it at my spare time.

[18:55] <timotimo> memory usage can be a concern, though

[18:55] <discord6> <Rogue> A lot of performance-critical code is already there, ready for use in a C lib

[18:56] <timotimo> true, nativecall is good for that

[18:57] *** Guest59014 left
[19:00] <discord6> <RaycatWhoDat> So, it sounds like Lua in the sense that you'd use an FFI for performance-critical things?

[19:00] <discord6> <Rogue> Well, except that our performance is probably better than Lua in general and should only get better over the next few years

[19:00] <timotimo> except when you use luajit

[19:01] <timotimo> it's not possible to have better performance than luajit

[19:01] *** success joined
[19:01] <discord6> <Rogue> outside of super critical things, Perl 6 can handle

[19:01] *** success is now known as Guest14120

[19:02] * sena_kun thinks if there is anything as powerful/expressive as Perl 6 and is as fast as C (even better if faster :P), the world is saved. the issue is you often can't have a cake and eat it too and need to trade one for another.

[19:03] <sena_kun> timotimo, re luajit: ooc is it an exaggeration or? I suspect lua is pretty simple language (well, compared to) and so can be compiled very efficiently, right?

[19:04] <Grinnz> sena_kun: i've heard D expressed as a middle ground there. though definitely not as expressive

[19:04] <timotimo> i think one thing about luajit is that the jit itself is also tiny, so it tends to fit into instruction caches or so?

[19:04] <timotimo> but luajit tends to outperform just about anything, at least last time i looked at much of anything

[19:04] <discord6> <RaycatWhoDat> D is pretty expressive. UFCS is sweet.

[19:05] <discord6> <Rogue> I think benchmarks only take you so far

[19:05] <discord6> <Rogue> In the sense that they can only give you an approximation of how real code will perform

[19:06] <timotimo> at least multithreading in perl6 is very easy

[19:20] *** sno joined
[19:25] *** sno left
[19:31] *** fingolfin58 joined
[19:31] <fingolfin58> How to join saveral arrays to single one?

[19:32] <sena_kun> join?

[19:32] <sena_kun> m: my @a = <1 2 3>; my @b = <4 5 6>; join @a, @b;

[19:32] <timotimo> concatenate i think?

[19:32] <camelia> rakudo-moar 17d036ad4: ( no output )

[19:32] <sena_kun> m: my @a = <1 2 3>; my @b = <4 5 6>; say join @a, @b;

[19:32] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´41 2 351 2 36‚ê§¬ª

[19:32] <timotimo> no, that join is about strings

[19:32] <sena_kun> oh

[19:33] <timotimo> you'll want to combine "flat" and the , operator

[19:33] <sena_kun> m: my @a = <1 2 3>; my @b = <4 5 6>; my @a = |@a, @b;

[19:33] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5===‚ê§Cannot use variable @a in declaration to initialize itself‚ê§at <tmp>:1‚ê§------> 3a = <1 2 3>; my @b = <4 5 6>; my @a = |@7‚èè5a, @b;‚ê§    expecting any of:‚ê§        prefix‚ê§Other potential difficulties:‚ê§    Redeclaratio‚Ä¶¬ª

[19:33] <timotimo> m: my @a = <1 2 3>; my @b = <9 8 7>; my @result = flat @a, @b; say @result.perl

[19:33] <sena_kun> m: my @a = <1 2 3>; my @b = <4 5 6>; say |@a, @b;

[19:33] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´[IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3"), IntStr.new(9, "9"), IntStr.new(8, "8"), IntStr.new(7, "7")]‚ê§¬ª

[19:33] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´123[4 5 6]‚ê§¬ª

[19:33] <timotimo> right, intstr is what <> will make out of number-looking things

[19:33] <sena_kun> ok, I am just not very smart today

[19:34] <sena_kun> m: my @a = 1, 2, 3; my @b = 4, 5, 6; my @c = flat @a, @b;

[19:34] <camelia> rakudo-moar 17d036ad4: ( no output )

[19:34] <sena_kun> m: my @a = 1, 2, 3; my @b = 4, 5, 6; my @c = flat @a, @b; say @c;

[19:34] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´[1 2 3 4 5 6]‚ê§¬ª

[19:34] <sena_kun> fingolfin58, ^

[19:35] <Elronnd> can we make camelia display the result of the expression if there's no output?

[19:35] <Elronnd> (Or, maybe, even if there is?)

[19:35] <sena_kun> Elronnd, patches are welcome, I think...

[19:35] <sena_kun> camelia, source

[19:35] <sena_kun> hmm

[19:35] <sena_kun> camelia, help

[19:35] <camelia> sena_kun: Usage: <(rakudo-moar|p5-to-p6|nqp-moarvm|star-m|debug-cat|nqp-jvm|rakudo-jvm|prof-m|nqp-js|nqp-m|sm|j|nqp-q|rakudo|rm|star|p6|r-j|master|nqp-mvm|m|perl6|nqp|rj|r-m|r|r-jvm|p56)(?^::\s(?!OUTPUT)) $perl6_program>

[19:36] <sena_kun> https://github.com/perl6/evalbot

[19:38] <fingolfin58> Thanks! my @a = 1, 2, 3; my @b = 4, 5, 6; my @c = flat @a, @b; say @c; is I want.

[19:38] <sena_kun> fingolfin58, you are welcome!

[19:39] <Elronnd> can you

[19:40] <Elronnd> m: my @a = 1, 2; my @b = 3, 4; say my @c = flat @a, @b;

[19:40] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´[1 2 3 4]‚ê§¬ª

[19:40] <Elronnd> yay!

[19:40] *** molaf joined
[19:40] <sena_kun> m: my @a = 1,2; my @b = 3,4; .say for |@a, |@b;

[19:41] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§¬ª

[19:42] <sena_kun> oddly enough, I can't remember a case where I had to concatenate lists, but I recall cases like the above one, when you need to iterate a couple of sources.

[19:47] *** APic left
[19:47] *** wildtrees joined
[19:50] *** mowcat joined
[20:00] *** ravenous_ left
[20:08] *** fingolfin58 left
[20:10] *** domidumont joined
[20:11] *** domidumont left
[20:13] *** APic joined
[20:18] *** APic left
[20:21] *** Black_Ribbon joined
[20:25] *** natrys left
[20:26] *** netrino joined
[20:30] *** sena_kun left
[20:45] *** Ven`` joined
[21:09] *** MasterDuke left
[21:52] *** krychu left
[22:04] <AlexDaniel> Elronnd: how would you know? It just executes a file

[22:04] <AlexDaniel> Hey RaycatWhoDat

[22:14] <Elronnd> m: say EVAL "my @a = 1, 2, 3; my @b = 4, 5, 6; my @c = flat @a, @b;"

[22:14] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´[1 2 3 4 5 6]‚ê§¬ª

[22:15] *** APic joined
[22:15] <Elronnd> the value of EVAL is the value of the last expression

[22:15] <discord6> <RaycatWhoDat> it me

[22:15] <discord6> <RaycatWhoDat> Sup, AlexDaniel

[22:17] *** Ven`` left
[22:18] <AlexDaniel> RaycatWhoDat, is there an alternative to /me on discord?

[22:19] <AlexDaniel> like

[22:19] * AlexDaniel scratches his head

[22:19] <discord6> <RaycatWhoDat> /me is /me everywhere.

[22:19] <AlexDaniel> hmmm so did you just /me ? :)

[22:20] <discord6> <RaycatWhoDat> shrugs

[22:20] <AlexDaniel> oh

[22:20] <AlexDaniel> tobs: ‚Üë :)

[22:21] <AlexDaniel> m: say ‚Äò‚Äô.uniname

[22:21] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´<control-001D>‚ê§¬ª

[22:21] <AlexDaniel> m: say ‚Äò‚Äô.ord

[22:21] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´29‚ê§¬ª

[22:26] <tobs> AlexDaniel: it messes up my REPL when I try to see if it exists, so it exists :)

[22:26] <AlexDaniel> tobs: https://github.com/perl6/whateverable/issues/360#issuecomment-532889801

[22:27] <tobs> it's completely invisible here

[22:28] <AlexDaniel> emacs++ for showing control characters :)

[22:29] <AlexDaniel> (and yes I'm using emacs to be on IRC)

[22:29] <discord6> <RaycatWhoDat> ERC or Circe?

[22:29] <AlexDaniel> ERC

[22:29] <discord6> <RaycatWhoDat> Fair deal.

[23:18] *** netrino left
[23:20] *** Kaiepi left
[23:23] *** Kaiepi joined
[23:23] *** cpan-p6 left
[23:24] *** cpan-p6 joined
[23:24] *** cpan-p6 left
[23:24] *** cpan-p6 joined
[23:29] *** afresh1 joined
[23:37] *** ChoHag left
[23:38] *** Itaipu left
[23:38] *** Itaipu joined
[23:45] *** wamba left
[23:52] *** lucasb left
