[00:17] *** imhtrg left
[00:22] *** aborazmeh left
[00:43] *** cpan-p6 left
[00:44] *** cpan-p6 joined
[00:44] *** cpan-p6 left
[00:44] *** cpan-p6 joined
[01:08] *** zakharyas joined
[01:21] *** imhtrg joined
[01:40] *** aborazmeh joined
[01:40] *** aborazmeh left
[01:40] *** aborazmeh joined
[01:41] *** molaf left
[01:47] *** mowcat left
[01:54] *** molaf joined
[01:58] *** imhtrg left
[02:04] *** Manifest0 left
[02:10] *** Manifest0 joined
[02:36] *** adu joined
[02:48] *** RhetTbull joined
[02:50] *** RhetTbull left
[02:50] *** aindilis` joined
[02:54] *** aindilis left
[02:54] *** aindilis` left
[02:56] *** aindilis joined
[03:26] *** MasterDuke left
[03:30] *** kaare__ joined
[03:30] *** kaare_ left
[03:35] *** doufu300 joined
[03:55] *** molaf left
[04:12] *** doufu300 left
[04:16] *** Blue^NeXuS left
[04:25] *** Blue^NeXuS joined
[04:26] *** nadim_ joined
[04:29] *** aborazmeh left
[04:30] *** Blue^NeXuS left
[04:42] *** Blue^NeXuS joined
[04:51] *** curan joined
[04:58] *** Blue^NeXuS left
[05:00] *** Blue^NeXuS joined
[05:08] *** ChoHag joined
[05:19] *** samebchase joined
[05:32] *** jmerelo joined
[05:32] <jmerelo> releasable6: status

[05:32] <yoleaux> 16 Jun 2019 23:13Z <AlexDaniel> jmerelo: https://github.com/ajs/perl6-Math-Sequences/issues/30

[05:32] <releasable6> jmerelo, Next release in ≈3 days and ≈13 hours. 3 blockers. 221 out of 624 commits logged (⚠ 1 warnings)

[05:32] <releasable6> jmerelo, Details: https://gist.github.com/69484fdaf3b47b2a3d4f0ecc03aa43ca

[05:33] *** domidumont joined
[05:40] *** domidumont left
[05:48] *** epony left
[05:49] <samcv> .tell sena_kun I don't think I have that anymore. but i can check

[05:49] <yoleaux> 16 Jun 2019 21:01Z <sena_kun> samcv: hi! can you, please, try to remember where a script that generates https://gist.github.com/samcv/9177c43f2a78049248fcb954c63d28e5 can be found? I am doing kinda archeology at https://github.com/perl6/ecosystem/issues/324 and would like to revive it for a bit. no problem if not, I'll just write it then

[05:49] <yoleaux> samcv: I'll pass your message to sena_kun.

[05:50] <jmerelo> Hi, samcv ! How's the GSoC project going?

[05:54] <jmerelo> .tell AlexDaniel https://www.reddit.com/r/perl6/comments/c1jypz/math_sequences_remote_hackathon_up_and_coming/

[05:54] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[05:57] *** Itaipu left
[05:58] *** domidumont joined
[06:05] *** Blue^NeXuS left
[06:15] *** Itaipu joined
[06:20] <jmerelo> geth is apparently busted.

[06:24] *** adu left
[06:28] *** nadim_ left
[06:48] *** cpan-p6 left
[06:48] *** cpan-p6 joined
[06:48] *** cpan-p6 left
[06:48] *** cpan-p6 joined
[07:11] *** pecastro joined
[07:14] *** rindolf joined
[07:14] *** sena_kun joined
[07:18] <sena_kun> m: say 'o/'

[07:18] <yoleaux> 05:49Z <samcv> sena_kun: I don't think I have that anymore. but i can check

[07:18] <camelia> rakudo-moar a643b8be1: OUTPUT: «o/␤»

[07:21] *** jmerelo left
[07:28] *** noisegul joined
[07:29] *** ChoHag left
[07:52] *** wamiks joined
[07:55] *** dolmen joined
[07:58] *** zakharyas left
[08:06] *** dakkar joined
[08:15] *** Manifest0 left
[08:18] *** patrickb joined
[08:21] *** Manifest0 joined
[08:25] *** dumarchie joined
[08:25] *** Manifest0 left
[08:30] *** Manifest0 joined
[08:38] *** abraxxa joined
[08:57] <Xliff> o/

[08:59] *** Manifest0 left
[09:04] *** dumarchie left
[09:05] *** Manifest0 joined
[09:05] *** ravenousmoose left
[09:05] *** ravenousmoose joined
[09:08] *** patrickb left
[09:19] *** aborazmeh joined
[09:19] *** aborazmeh left
[09:19] *** aborazmeh joined
[09:21] *** stux|RC left
[09:24] *** aborazmeh left
[09:24] *** stux|RC joined
[09:26] *** squashable6 left
[09:26] *** aborazmeh joined
[09:26] *** aborazmeh left
[09:26] *** aborazmeh joined
[09:27] *** squashable6 joined
[09:33] *** pmurias joined
[09:47] *** aborazmeh left
[09:48] *** Manifest0 left
[09:50] *** patrickb joined
[09:55] *** Manifest0 joined
[10:00] *** Manifest0 left
[10:02] *** reach_satori left
[10:03] <AlexDaniel> .

[10:03] <yoleaux> 05:54Z <jmerelo> AlexDaniel: https://www.reddit.com/r/perl6/comments/c1jypz/math_sequences_remote_hackathon_up_and_coming/

[10:03] <AlexDaniel> nicee

[10:05] *** domidumont left
[10:05] *** Manifest0 joined
[10:06] *** ravenousmoose left
[10:14] *** squashable6 left
[10:15] *** squashable6 joined
[10:15] *** ChanServ sets mode: +v squashable6

[10:20] *** Manifest0 left
[10:25] *** Manifest0 joined
[10:35] *** ravenousmoose joined
[10:36] *** Manifest0 left
[10:41] *** Manifest0 joined
[10:42] *** nadim_ joined
[10:43] *** holyghost_ joined
[10:49] *** dolmen left
[10:51] *** Manifest0 left
[10:51] *** pmurias left
[10:52] *** pmurias joined
[10:52] *** nadim_ left
[10:55] *** Manifest0 joined
[11:00] *** Manifest0 left
[11:02] *** pmurias left
[11:03] *** pmurias joined
[11:06] *** Manifest0 joined
[11:07] *** reach_satori joined
[11:16] *** Manifest0 left
[11:21] *** Manifest0 joined
[11:29] *** pmurias left
[11:30] *** Manifest0 left
[11:35] *** Manifest0 joined
[11:37] *** domidumont joined
[11:38] <lizmat> weekly: https://engineering.purdue.edu/~mark/pwc-012.pdf

[11:38] <notable6> lizmat, Noted!

[11:41] *** dolmen joined
[11:43] *** Manifest0 left
[11:47] *** Manifest0 joined
[11:50] *** mowcat joined
[11:52] *** Manifest0 left
[11:52] *** domidumont1 joined
[11:55] *** AlexDaniel left
[11:55] *** AlexDaniel joined
[11:55] *** domidumont left
[11:57] *** Guest77572 joined
[11:57] *** Manifest0 joined
[12:02] *** Manifest0 left
[12:06] *** Manifest0 joined
[12:17] *** vrurg left
[12:19] *** Manifest0 left
[12:20] *** dolmen left
[12:26] *** Manifest0 joined
[12:26] *** dolmen joined
[12:30] *** Ulti left
[12:32] *** domidumont joined
[12:34] *** Manifest0 left
[12:35] *** domidumont1 left
[12:35] *** Praise left
[12:39] *** Ulti joined
[12:40] *** Manifest0 joined
[12:45] *** Manifest0 left
[12:47] *** nadim_ joined
[12:50] *** Manifest0 joined
[12:56] *** demanuel left
[12:56] *** Manifest0 left
[12:58] *** pecastro left
[12:58] *** vrurg joined
[13:03] *** Manifest0 joined
[13:07] *** pecastro joined
[13:07] *** Manifest0 left
[13:14] *** Manifest0 joined
[13:16] *** nadim_ left
[13:20] *** curan left
[13:20] *** silug joined
[13:21] *** lucasb joined
[13:30] *** telex left
[13:30] *** telex joined
[13:33] *** [particle]_ joined
[13:35] <lucasb> https://docs.google.com/forms/d/e/1FAIpQLSfX6cjuhen2xepsr_Cg8eYSdlEE4wbhufgOR1BrDwStby_hNg/viewanalytics

[13:35] <lucasb> ^^ the page to see the results :)

[13:36] <lucasb> (sorry for not replying the other day, I had gone AFK)

[13:41] *** Manifest0 left
[13:41] <lucasb> within most charts, my answers matched the majority

[13:50] *** Manifest0 joined
[13:52] <lucasb> https://rt.perl.org/Public/Bug/Display.html?id=133969#txn-1641016

[13:57] *** Manifest0 left
[14:00] <Xliff> Is there a p5-Graph module? Was mentioned in the survey results.

[14:03] <sena_kun> https://modules.perl6.org/search/?q=graph

[14:04] *** Manifest0 joined
[14:05] <lucasb> https://metacpan.org/pod/distribution/Graph/lib/Graph.pod

[14:05] <lucasb> for the p5 one

[14:07] <sena_kun> doesn't seem to me like we have this one

[14:07] <timotimo> hurm, weak references, still something we'll need to have at some point

[14:09] *** reach_satori left
[14:12] *** vrurg left
[14:12] <ugexe> what purpose do weak references serve with our type of GC?

[14:14] *** Xliff left
[14:14] <timotimo> hold a reference to an object that is allowed to die

[14:18] *** dolmen left
[14:18] *** vrurg joined
[14:20] *** gregf_ joined
[14:31] <ugexe> ah

[14:32] *** Manifest0 left
[14:38] *** kensanata joined
[14:39] *** Manifest0 joined
[14:43] <timotimo> the core would be able to use it for making "augment" immediately affect subclasses

[14:43] *** skids joined
[14:43] <timotimo> because right now, if we had something for that, it would keep all classes that are created alive forever

[14:43] *** Manifest0 left
[14:45] <AlexDaniel> o yey, distro packages at 27%

[14:48] <AlexDaniel> someone asks for “calm in the community” :)

[14:48] <AlexDaniel> and someone else says “Drop the “Perl 6” name”

[14:48] *** Manifest0 joined
[14:50] *** vrurg left
[14:50] *** vrurg joined
[14:51] *** vrurg left
[14:51] *** riatre left
[14:53] *** adu joined
[14:54] *** nadim_ joined
[14:56] *** riatre joined
[15:01] *** vrurg joined
[15:02] *** nadim_ left
[15:08] <moritz> ugexe: a good example is: a parent class might want to a store a list of all subclasses, to allow "augment"s to percolate to them. But the parent class doesn't want the subclasses to be kept alive by this reference

[15:08] *** Manifest0 left
[15:08] *** dolmen joined
[15:09] <ugexe> yeah not sure why i was associating weak references so heavily with reference counting

[15:13] *** Manifest0 joined
[15:13] *** wamiks left
[15:21] *** kaare__ left
[15:21] *** kaare__ joined
[15:22] *** imhtrg joined
[15:23] *** mowcat left
[15:31] *** nadim_ joined
[15:33] *** vrurg left
[15:37] *** patrickb left
[15:46] *** Manifest0 left
[15:51] *** Manifest0 joined
[15:53] *** woolfy left
[15:54] *** MilkmanDan left
[15:55] *** woolfy joined
[15:56] *** MilkmanDan joined
[15:58] *** jeromelanteri joined
[15:58] *** abraxxa left
[16:03] <moritz> too much Perl 5? :D

[16:04] *** Manifest0 left
[16:07] *** shlomif joined
[16:09] *** rindolf left
[16:10] *** shlomif is now known as rindolf

[16:11] *** Manifest0 joined
[16:13] *** molaf joined
[16:15] *** Manifest0 left
[16:17] *** ChoHag joined
[16:21] *** scimon joined
[16:21] *** domidumont left
[16:21] *** Manifest0 joined
[16:22] *** nadim_ left
[16:22] *** nadim joined
[16:22] <scimon> I may have caught a bug. When you call .succ on a Date object it passes on the custom formatter to the child object... up to a point 

[16:22] <scimon> m: my $d = Date.new( :2019year, :1month, :1day, formatter => sub ($s) { sprintf "%04d/%02d/%02d", .year, .month, .day given $s } );for ^30 { say ++$d }

[16:22] <camelia> rakudo-moar 6f8442ada: OUTPUT: «2019/01/02␤2019/01/03␤2019/01/04␤2019/01/05␤2019/01/06␤2019/01/07␤2019/01/08␤2019/01/09␤2019/01/10␤2019/01/11␤2019/01/12␤2019/01/13␤2019/01/14␤2019/01/15␤2019/01/16␤2019/01/17␤2019/01/18␤2019/01/19␤2019/01/20␤2019…»

[16:23] <scimon> m: my $d = Date.new( :2019year, :1month, :1day, formatter => sub ($s) { sprintf "D[%02d]", .day given $s } );for ^30 { say ++$d }

[16:23] <camelia> rakudo-moar 6f8442ada: OUTPUT: «D[02]␤D[03]␤D[04]␤D[05]␤D[06]␤D[07]␤D[08]␤D[09]␤D[10]␤D[11]␤D[12]␤D[13]␤D[14]␤D[15]␤D[16]␤D[17]␤D[18]␤D[19]␤D[20]␤D[21]␤D[22]␤D[23]␤D[24]␤D[25]␤D[26]␤D[27]␤D[28]␤2019-01-29␤2019-01-30␤2019-01-3…»

[16:23] <scimon> There we go. 

[16:24] <scimon> I would expect it to pass on the formatter but I'm not sure if it's specced. (This does mean Range or Sequences of Dates can't easily have custom formatters)

[16:24] <timotimo> ~oh damn, lol

[16:25] <timotimo> just some branch in the .succ that forgets to pass the value, eh?

[16:25] <timotimo> also, hi, good to see you :)

[16:25] <scimon> I'm guessing yes.

[16:25] <scimon> Hi. Yeah Been hella busy at work.

[16:25] <scimon> I've been working on a new module. I'm off next week and I'm hoping I'll have a goodly chunk done. 

[16:26] <scimon> (And I'm fleeing home in a sec but I thought I'd raise this)

[16:26] * timotimo plays CATCH

[16:27] <timotimo> aye, there's new-from-daycount and new-from-diff, and only new-from-daycount passes :&formatter

[16:27] <scimon> Awesome. 

[16:27] <scimon> So an easy fix then?

[16:28] <scimon> I'm going to run. I'll try and be around more.

[16:28] *** scimon left
[16:29] <timotimo> um. but nothing is passing :&formatter to new-from-daycount

[16:32] <timotimo> ah, ok, method later of DateTime passes &!formatter when setting the attributes on the new one

[16:33] <timotimo> er, new-from-diff is using clone, which does carry over the formatter

[16:35] *** kensanata left
[16:35] *** |oLa| left
[16:35] <tobs> I'm trying to create a class whose objects can "escape" subroutine/method calls and decide themselves what they want to do with them, like Junctions do. Is that possible or do I need explicit support for my class doing that in core?

[16:35] *** dakkar left
[16:36] <timotimo> junctions are implemented by a failure to bind arguments during an invocation and a special "junction autothreader" that gets called by the argument binder in that case

[16:36] <timotimo> so it'll not be as simple as building a class that "does something special", the special doings belong to a different part of the system

[16:37] *** |oLa| joined
[16:38] <tobs> is the argument binder in BOOTSTRAP.nqp?

[16:38] <tobs> or better: where is the argument binder? :)

[16:38] <timotimo> it could very well be

[16:40] <timotimo> OK, the "bind_error" thing in BOOTSTRAP is where it lives on everything except the jvm it seems like

[16:40] *** vike left
[16:40] <timotimo> other than that the Binder class also has an $autothreader attributes

[16:40] <timotimo> well, it's a scalar, not an attribute

[16:42] <tobs> aha, thanks

[16:45] *** nadim left
[16:46] <timotimo> depending on what exactly it is you need, you may be able to get it working anyway, but with a different mechanism

[16:51] <tobs> I was wondering if I could make symbolic variables, which instead of having code applied to them return an AST of what should have happened to them.

[16:52] <tobs> just a *really* fancy syntax for lambdas, I suppose, with the added option to have a syntax tree of the operations as well.

[16:52] <tobs> so a whatever star won't quite cut it either, I think.

[16:53] <tobs> I mean: in the end, I either want to play around with the AST or evaluate the object a bunch of times with different arguments. That's how the lambda/whatever came into the picture.

[17:02] <timotimo> i recommend you have a look at Red

[17:02] <timotimo> the ORM

[17:05] *** leont joined
[17:05] *** dolmen left
[17:08] <timotimo> tobs: in particular, https://github.com/FCO/Red/blob/master/lib/Red/Operators.pm6

[17:10] *** lucasb left
[17:11] *** jeromelanteri left
[17:14] <timotimo> i can't immediately find the code where it calls the filter function over and over, figuring out what it does, and reconstructing the AST from that

[17:15] <timotimo> AFKBBL

[17:20] *** Manifest0 left
[17:20] <tobs> thanks, I was on my way home

[17:21] *** vrurg joined
[17:24] <tobs> yeah, I mean, I thought about overloading every operator in existence too, but for my application, the fun only starts when expressions involve user-defined operators.

[17:24] *** imhtrg left
[17:24] *** vrurg left
[17:25] <tobs> it is certainly a fallback solution though, putting the additional operator overloading burden on the user

[17:26] *** Manifest0 joined
[17:27] *** vrurg joined
[17:37] *** Manifest0 left
[17:42] *** Manifest0 joined
[17:43] *** wamiks joined
[17:54] *** Manifest0 left
[17:55] *** lucasb joined
[17:55] *** vrurg left
[17:55] *** vrurg joined
[17:58] *** Manifest0 joined
[18:02] *** vrurg left
[18:03] *** Manifest0 left
[18:07] *** vrurg joined
[18:08] *** Manifest0 joined
[18:09] *** kensanata joined
[18:24] *** kawaii left
[18:27] *** kawaii joined
[18:29] *** sauvin left
[18:30] *** niceplace left
[18:31] *** niceplace joined
[18:35] *** vrurg left
[18:37] *** vike joined
[18:39] *** vrurg joined
[18:40] *** vrurg left
[18:41] *** cpan-p6 left
[18:42] *** vrurg joined
[18:45] *** molaf left
[18:46] *** discord6 left
[18:48] *** discord6 joined
[18:48] *** discord6 left
[18:48] *** discord6 joined
[18:48] *** Geth joined
[18:52] <timotimo> ooh geth is back

[18:56] *** |oLa| left
[18:58] *** cpan-p6 joined
[18:58] *** cpan-p6 left
[18:58] *** cpan-p6 joined
[19:03] *** reach_satori joined
[19:12] *** MasterDuke joined
[19:12] *** MasterDuke left
[19:12] *** MasterDuke joined
[19:20] *** wamiks left
[19:25] *** Manifest0 left
[19:30] *** Manifest0 joined
[19:37] *** pochi_ is now known as pochi

[19:43] *** vrurg left
[19:49] *** Hermit joined
[19:49] *** AlexDaniel left
[19:54] *** kaare__ left
[19:54] *** kaare__ joined
[19:58] *** vrurg joined
[19:59] *** wamiks joined
[20:00] *** Hermit left
[20:02] <lizmat> weekly: http://blogs.perl.org/users/damian_conway/2019/06/coding-with-a-full-toolset.html

[20:02] <notable6> lizmat, Noted!

[20:20] *** Manifest0 left
[20:25] *** Manifest0 joined
[20:48] *** Cabanossi left
[20:48] *** Manifest0 left
[20:51] *** AlexDaniel joined
[20:52] *** rindolf left
[20:53] *** Manifest0 joined
[20:55] *** Cabanossi joined
[20:55] *** kensanata left
[20:58] *** vrurg left
[20:59] *** patrickb joined
[21:03] *** dolmen joined
[21:05] *** skids left
[21:06] *** vrurg joined
[21:11] *** |oLa| joined
[21:25] *** mbp left
[21:25] *** mbp joined
[21:26] *** dolmen left
[21:33] *** sena_kun left
[21:35] *** molaf joined
[21:40] *** molaf left
[21:40] *** Black_Ribbon joined
[21:41] *** dolmen joined
[21:52] *** dustinm` left
[21:53] *** dustinm` joined
[22:03] *** vrurg left
[22:04] *** andrewalker left
[22:05] *** dolmen left
[22:09] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/06/17/2019-24-sequences-of-int/

[22:13] <Juerd> lizmat: Thanks! :)

[22:14] <lizmat> Juerd: you're welcome!

[22:14] * lizmat calls it a day

[22:16] *** nadim joined
[22:28] *** dolmen joined
[22:31] *** webstran- joined
[22:31] *** webstrand left
[22:32] *** webstran- is now known as webstrand

[22:48] *** Cabanossi left
[22:53] *** leont left
[22:54] *** Cabanossi joined
[22:56] *** nadim left
[22:59] *** patrickb left
[23:01] *** dolmen_ joined
[23:02] *** dolmen left
[23:05] *** pecastro left
[23:06] *** epony joined
[23:44] *** dolmen_ left
[23:46] *** Geth_ joined
[23:46] *** Geth_ left
[23:48] *** vrurg joined
[23:53] *** noisegul left
[23:56] *** vrurg left
