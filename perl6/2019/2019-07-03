[00:06] *** Manifest0 left
[00:11] *** Manifest0 joined
[00:18] *** Manifest0 left
[00:22] *** Manifest0 joined
[00:24] *** Cabanossi left
[00:38] *** Cabanossi joined
[00:46] *** noisegul joined
[00:51] *** noisegul left
[00:52] *** Manifest0 left
[00:57] *** Manifest0 joined
[01:26] *** Manifest0 left
[01:32] *** Manifest0 joined
[01:38] *** molaf left
[01:49] *** Manifest0 left
[01:50] *** molaf joined
[01:54] *** Manifest0 joined
[01:56] *** lumin left
[01:56] *** lumin joined
[02:01] *** Manifest0 left
[02:08] *** Manifest0 joined
[02:12] *** Manifest0 left
[02:18] *** Manifest0 joined
[02:31] *** khisanth_ left
[02:42] *** Manifest0 left
[02:45] *** khisanth_ joined
[02:47] *** Manifest0 joined
[02:54] *** Manifest0 left
[02:57] *** guifa2 joined
[02:58] *** Actualeyes left
[02:58] *** Manifest0 joined
[03:03] *** Manifest0 left
[03:06] *** kaare__ left
[03:06] *** kaare__ joined
[03:08] *** Manifest0 joined
[03:12] *** Manifest0 left
[03:17] *** Manifest0 joined
[03:26] *** Manifest0 left
[03:32] *** Manifest0 joined
[03:36] *** noisegul joined
[03:36] *** guifa2 left
[03:42] *** Manifest0 left
[03:44] *** molaf left
[03:49] *** Manifest0 joined
[03:56] *** Manifest0 left
[04:00] *** Manifest0 joined
[04:04] *** aborazmeh joined
[04:04] *** aborazmeh left
[04:04] *** aborazmeh joined
[04:11] *** Manifest0 left
[04:17] *** Manifest0 joined
[04:21] *** vike left
[04:28] *** Manifest0 left
[04:33] *** Manifest0 joined
[04:35] *** jaldhar joined
[04:36] *** jeromelanteri joined
[04:42] *** vike joined
[04:43] *** Manifest0 left
[04:47] *** Manifest0 joined
[04:51] *** Manifest0 left
[04:56] *** MasterDuke joined
[04:57] *** Manifest0 joined
[05:03] *** jaldhar left
[05:03] *** jaldhar joined
[05:04] *** tardisx left
[05:05] *** tardisx joined
[05:06] *** nepugia joined
[05:14] *** Manifest0 left
[05:15] *** tardisx left
[05:19] *** Manifest0 joined
[05:26] *** Manifest0 left
[05:31] *** nepugia left
[05:31] *** Manifest0 joined
[05:34] *** nadim joined
[05:39] *** tardisx joined
[05:40] *** MasterDuke left
[05:41] *** nadim left
[05:42] *** nadim joined
[05:51] *** jmerelo joined
[05:51] *** Manifest0 left
[05:54] *** jeromelanteri left
[05:57] *** Manifest0 joined
[06:03] *** Manifest0 left
[06:05] *** nadim_ joined
[06:08] *** jeromelanteri joined
[06:08] *** Manifest0 joined
[06:08] *** nadim left
[06:09] <Geth> ¬¶ ecosystem: 4ca1381fc7 | (Jack Kuan)++ (committed using GitHub Web editor) | META.list

[06:09] <Geth> ¬¶ ecosystem: Update META6.json

[06:09] <Geth> ¬¶ ecosystem: 

[06:09] <Geth> ¬¶ ecosystem: - [X] I **agree** to the usage of the META file as listed [here](https://github.com/perl6/ecosystem#legal).

[06:09] <Geth> ¬¶ ecosystem: 

[06:09] <Geth> ¬¶ ecosystem: - [X] I have a license field listed in my META file that is one of https://spdx.org/licenses

[06:09] <Geth> ¬¶ ecosystem:   - [ ] My license is not one of those found on spdx.org but I **do** have a license field.

[06:09] <Geth> ¬¶ ecosystem:         In this case make sure you have a license URL listed under support. [See this example](https://github.com/samcv/URL-Find/blob/master/META6.json).

[06:09] <Geth> ¬¶ ecosystem:    - [ ] I **don't** have a license field. Yes, I understand this is **not recommended**.

[06:09] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/4ca1381fc7

[06:09] <Geth> ¬¶ ecosystem: 1cfd144fba | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[06:09] <Geth> ¬¶ ecosystem: Merge pull request #463 from kjkuan/patch-1

[06:09] <Geth> ¬¶ ecosystem: 

[06:09] <Geth> ¬¶ ecosystem: Update META6.json

[06:09] <Geth> ¬¶ ecosystem: It's all good now. Thanks!

[06:09] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/1cfd144fba

[06:15] *** Manifest0 left
[06:17] *** nadim_ left
[06:21] *** Manifest0 joined
[06:24] *** nadim_ joined
[06:29] <jmerelo> releasable6: status

[06:29] *** avar left
[06:29] <releasable6> jmerelo, Next release will happen when it's ready. R6 is down. At least 1 blocker. 345 out of 667 commits logged

[06:29] <releasable6> jmerelo, Details: https://gist.github.com/ab4b28c08b5ad09e3eab2a1ea3450286

[06:29] *** avar joined
[06:29] *** avar left
[06:29] *** avar joined
[06:30] *** vrurg left
[06:30] *** vrurg joined
[06:31] <jmerelo> squashable6: status

[06:31] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 1 day and ‚âà21 hours (2019-07-06 UTC-14‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:31] <jmerelo> So close!

[06:34] *** sauvin joined
[06:42] *** jeromelanteri left
[06:42] *** Manifest0 left
[06:45] *** patrickb joined
[06:47] *** Manifest0 joined
[06:49] <El_Che> https://www.theregister.co.uk/2019/07/02/ipv6_routing_error/

[06:49] <El_Che> This major internet routing blunder took A WEEK to fix. Why so long? It was IPv6 ‚Äì and no one really noticed

[06:49] <El_Che> it looks like everything with "6" is doomed

[06:49] * El_Che ducks

[06:49] <El_Che> :)

[06:51] *** domidumont joined
[06:51] *** Manifest0 left
[06:56] <Geth> ¬¶ doc: fd229dcef0 | (JJ Merelo)++ | doc/Type/Any.pod6

[06:56] <Geth> ¬¶ doc: Any.first edited, with some explanations added. Closes #2877

[06:56] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fd229dcef0

[06:56] <synopsebot> Link: https://doc.perl6.org/type/Any

[06:59] *** Manifest0 joined
[07:00] *** sno left
[07:09] *** rindolf joined
[07:10] *** MilkmanDan left
[07:11] *** MilkmanDan joined
[07:13] *** antoniog1miz joined
[07:17] *** ravenousmoose joined
[07:20] *** Manifest0 left
[07:24] *** ravenousmoose left
[07:25] *** ravenousmoose joined
[07:26] *** Manifest0 joined
[07:32] <antoniog1miz> what this file does? => https://github.com/perl6/doc/blob/master/html/robots.txt

[07:33] <antoniog1miz> what does this file do? omg my english sometimes xd

[07:34] <El_Che> antoniog1miz: it tells search crowlers what not to index

[07:35] <moritz> not relevant anymore

[07:35] <moritz> we used to store build logs for docs.perl6.org on that site itself, but that isn't the case right now

[07:35] <antoniog1miz> so it could be deleted?

[07:36] <moritz> yes

[07:36] *** curan joined
[07:38] <jmerelo> antoniog1miz: please open an issue and link this as context when you do.

[07:39] <Geth> ¬¶ doc: 7d938ee9c1 | Antonio++ (committed using GitHub Web editor) | html/robots.txt

[07:39] <Geth> ¬¶ doc: Delete robots.txt, fix #2880

[07:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7d938ee9c1

[07:39] <antoniog1miz> jmerelo: I know from past times :)

[07:39] <antoniog1miz> I'll link the context

[07:45] *** Manifest0 left
[07:46] *** zakharyas joined
[07:47] *** abraxxa joined
[07:51] *** Manifest0 joined
[07:56] *** bbkr joined
[07:57] *** Manifest0 left
[07:58] *** dakkar joined
[08:03] *** Manifest0 joined
[08:07] *** aborazmeh left
[08:19] <Geth> ¬¶ perl6.org: rba self-assigned design.perl6.org and links to it are broken https://github.com/perl6/perl6.org/issues/131

[08:19] <Geth> ¬¶ perl6.org: rba assigned to maettu Issue design.perl6.org and links to it are broken https://github.com/perl6/perl6.org/issues/131

[08:31] *** molaf joined
[08:32] *** nepugia joined
[08:38] *** Manifest0 left
[08:39] *** sena_kun joined
[08:40] *** nepugia left
[08:43] *** Manifest0 joined
[08:53] *** antoniog2miz joined
[08:56] *** dolmen joined
[08:57] *** antoniog1miz left
[08:57] <antoniog2miz> mmm why this line => my $type-selected = slurp "./t/html/type-selected-header.html";

[08:57] <antoniog2miz> gives the following error => ===SORRY!===

[08:57] <antoniog2miz> No such method 'slurp' for invocant of type 'Slip'

[08:58] <antoniog2miz> oh sorry, ignore it

[09:04] *** curan left
[09:13] *** Manifest0 left
[09:17] *** Manifest0 joined
[09:24] *** Manifest0 left
[09:30] *** Manifest0 joined
[09:30] *** reach_satori_ left
[09:34] <kawaii> Is there some reason why this method seems to be returning a Seq instead of an array?

[09:35] <kawaii> https://www.irccloud.com/pastebin/Zu4qv4xt/

[09:35] <kawaii> https://www.irccloud.com/pastebin/oQyRiByj/

[09:42] *** Manifest0 left
[09:46] <jnthn> What does the fetch-messages Promise resolve to?

[09:47] <jnthn> Maybe you wanted .append instead of .push?

[09:47] <kawaii> ooo let me try that

[09:48] *** Black_Ribbon left
[09:48] <jmerelo> antoniog2miz: I can't see why. Why?

[09:49] <kawaii> jnthn: hey I think you're on to something, the output is now (seq) (seq) (message) ü§î

[09:49] <antoniog2miz> I left a wild line around, dont worry

[09:49] <jmerelo> ah, OK

[09:49] *** Manifest0 joined
[09:49] <kawaii> (seq) (message) (message), sorry

[09:55] *** reach_satori_ joined
[09:57] *** Manifest0 left
[09:58] *** molaf left
[10:02] *** Manifest0 joined
[10:06] *** zakharyas left
[10:07] *** Manifest0 left
[10:12] *** Manifest0 joined
[10:20] <Geth> ¬¶ doc: bbe8626feb | (JJ Merelo)++ | doc/Type/Any.pod6

[10:20] <Geth> ¬¶ doc: Wraps refs #2877

[10:20] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bbe8626feb

[10:20] <synopsebot> Link: https://doc.perl6.org/type/Any

[10:25] *** Manifest0 left
[10:27] *** ravenousmoose left
[10:28] *** patrickb left
[10:32] *** Manifest0 joined
[10:37] *** antoniog2miz left
[10:38] <jmerelo> .tell AlexDaniel did you get ready the Math::Sequences repo for the hackathon?

[10:38] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[10:42] *** Manifest0 left
[10:48] *** Manifest0 joined
[10:54] *** Manifest0 left
[10:55] *** domidumont left
[10:59] *** Manifest0 joined
[11:04] *** Manifest0 left
[11:09] *** Manifest0 joined
[11:13] *** Manifest0 left
[11:15] *** rindolf left
[11:18] *** rindolf joined
[11:18] *** Manifest0 joined
[11:21] *** dolmen left
[11:30] *** mowcat joined
[11:32] *** Manifest0 left
[11:36] *** Manifest0 joined
[11:42] <jmerelo> I have merged data for the two surveys extracting the common columns and adding a column with the year (although that can be extracted from the Timestamp, actually) https://github.com/perl6/p6survey/blob/master/processed-data/data-2018-2019.csv

[11:43] <jmerelo> I tried in Perl 6, but Text::CSV refused to install. I tried Perl, but it was all a nuisance attempting to keep a map of column positions and all that. Eventually, it was like 10 lines of R

[11:44] *** tcloud joined
[11:45] <kawaii> blasphemy :)

[11:46] *** dolmen joined
[11:48] <jmerelo> kawaii: riiight. But I at least filed a bug report: https://github.com/Tux/CSV/issues

[11:49] * sena_kun just installed Text::CSV fine

[11:49] <jmerelo> kawaii: with Perl 5, it's likely that I forgot everything. 

[11:50] <jmerelo> sena_kun: I don't know. These might be flappers: https://github.com/Tux/CSV/issues/16

[11:51] * kawaii was also just able to install Text::CSV ü§î

[11:51] <sena_kun> jmerelo, it seems like they are comparing hashes not by values, but by structure too, and it was broken with hash randomization

[11:51] <sena_kun> so might be broken tests, but not a broken code

[11:51] <jmerelo> sena_kun: but I seem to remember that was fixed. Maybe there was no new release after fixing it.

[11:51] <sena_kun> dunno

[11:53] <jmerelo> sena_kun: I'm trying to install now from source...

[11:53] <kawaii> iirc perl 6 has some new cool syntax you can use for checking if a number lies within a range

[11:53] <kawaii> but `if @messages.elems == 2 < @messages.elems < 100 { say "yes"; }`

[11:53] <kawaii> maybe that is not right

[11:53] <tadzik> just `if 2 < @messages.elems < 100 {` should be enough

[11:54] <kawaii> ugh, yes that's it!

[11:54] <kawaii> tadzik++

[11:54] <timotimo> or @messages.elems ~~ 2^..^100

[11:54] <kawaii> oh no now I have options!

[11:54] <jmerelo> sena_kun: right, source works. But it's not been released.

[11:54] *** patrickb joined
[11:56] <jmerelo> sena_kun: done a PR bumping up version https://github.com/Tux/CSV/pull/17

[11:58] <sena_kun> it is odd that with the same code `zef install` worked for me and didn't for you. :/

[12:00] *** tcloud left
[12:02] <jmerelo> sena_kun: zef install . worked. zef install Text::CSV didn't

[12:02] <sena_kun> well, I did `zef install Text::CSV`, which is that I see odd

[12:02] <jmerelo> sena_kun: now that's odd

[12:03] <sena_kun> and as far as I know, version bump helps zef to know there is a newer version, but for the first time it installs from latest git commit

[12:03] <jmerelo> sena_kun: only if it's in the ecosystem. This one is in CPAN

[12:04] <jmerelo> sena_kun: oh, no, it's not. It's in both places. Now that's odd...

[12:04] <sena_kun> I'd still bet that tests are broken, but can't investigate into it now

[12:05] <jmerelo> sena_kun: tests in CPAN are broken. Tests in p6c are not. You got the latter, I got the former. 

[12:06] <jmerelo> sena_kun: apparently the problem is that if the module is in both places it does not return the same version for everyone.

[12:06] <sena_kun> yes, then this is the problem

[12:06] <timotimo> jmerelo: tux is asking for you over in #perl6-dev

[12:08] *** tcloud joined
[12:14] *** ravenousmoose joined
[12:18] <jmerelo> timotimo: got it, thanks!

[12:25] <xinming_> is | op infront of a list build a Slip?

[12:26] <xinming_> m: sub t (*@a, *%h) { [@a, %h].perl.say;}; t((:x).Slip, :c); t(|(:x), :c)

[12:26] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´[[:x], {:c}]‚ê§[[], {:c, :x}]‚ê§¬ª

[12:26] <xinming_> If so, Why do they behave differently?

[12:26] <xinming_> Now, I'm trying to udnerstand more about Capture thing

[12:28] *** zakharyas joined
[12:28] <timotimo> putting | in front of a thing in passing parameters is syntax for actually slipping the parameters into either positionals or named slots or both

[12:33] *** domidumont joined
[12:38] *** antoniog1miz joined
[12:39] *** jmerelo left
[12:43] *** rjbs joined
[12:43] *** molaf joined
[12:46] *** Itaipu left
[12:51] *** Itaipu joined
[12:57] <antoniog1miz> I really like the way named arguments and MAIN works :,)

[12:57] *** jeromelanteri joined
[13:03] *** domidumont1 joined
[13:05] *** domidumont left
[13:10] *** Manifest0 left
[13:15] *** Manifest0 joined
[13:16] *** vrurg left
[13:16] *** vrurg joined
[13:19] *** vrurg left
[13:20] *** vrurg joined
[13:33] *** lucasb joined
[13:37] *** [particle]1 joined
[13:40] *** [particle] left
[13:43] *** jeromelanteri left
[13:45] *** h joined
[13:45] *** h is now known as Guest9252

[13:47] *** jasonc joined
[13:51] <antoniog1miz> If I declare a variable with 'my' in a module. that variable is available for the exported functions?

[13:52] <antoniog1miz> should I use instead?

[13:52] <antoniog1miz> should I use 'our' instead?

[13:52] *** Manifest0 left
[13:53] <ugexe> m: my $bar is export;

[13:53] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Can't apply trait 'is export' on a my scoped variable. Only our scoped variables are supported.‚ê§at <tmp>:1‚ê§------> 3my $bar is export7‚èè5;‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[13:54] <ugexe> there is your answer

[13:54] <antoniog1miz> but with our I have the same problem, for instance: I declare our $var = slurp "something"

[13:55] <antoniog1miz> and if I use the module from another file $var is not initialized

[13:55] <ugexe> m: our $bar is export = 42;

[13:55] <camelia> rakudo-moar d4ceb97e0: ( no output )

[13:56] <ugexe> m: package Foo { our $foo is export = 42; }; import Foo; say $foo

[13:56] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´42‚ê§¬ª

[13:57] <antoniog1miz> so should I use package? 

[13:57] *** Manifest0 joined
[13:57] <ugexe> no, i was using package { } for the same of a 1 liner

[13:57] <ugexe> s/same/sake/

[13:58] <antoniog1miz> though I dont really want to export the variable, what I want is to initialize a variable that will be used by the functions of the module

[13:58] <ugexe> then `my $foo = ...` should be fine

[13:58] <antoniog1miz> ant the problem is that if I execute the module that var is initialized, but not if I use the module from other file

[13:58] <antoniog1miz> mmm then something weird is happening with my module x,D

[13:59] <ugexe> i think you are just failing to describe your problem in enough detail. i doubt anything weird is happening.

[13:59] <ugexe> can you perhaps make a small example?

[14:02] <antoniog1miz> i'm on it

[14:03] <antoniog1miz> https://gist.github.com/antoniogamiz/5e3a9899aa06cd0110a4cb4506853f3f

[14:03] <antoniog1miz> if I execute perl6 example.pm6, I get => "template/head.html

[14:03] <moritz> you might want to try to initialize it with an INIT phaser

[14:04] <antoniog1miz> if I execute another-file.p6 I get => ()

[14:04] <antoniog1miz> moritz: mmmm 

[14:04] <moritz> though I'm not too familiar with how %?RESOURCES are set up

[14:05] <antoniog1miz> resources is set up by zef

[14:07] <ugexe> %?RESOURCES is just empty for your module

[14:07] *** antoniog1miz left
[14:07] *** antoniog2miz joined
[14:07] <ugexe> but its still truethy

[14:08] <moritz> m: my %h; say ?%h

[14:08] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´False‚ê§¬ª

[14:08] <antoniog2miz> ugexe: oh

[14:08] <moritz> is that (htat it's still truthy) particular to %?RESOURCES?

[14:08] <ugexe> well, %?RESOURCES isn't actually a hash

[14:08] <ugexe> its an object

[14:08] <moritz> ah, sure

[14:08] <antoniog2miz> mmm

[14:09] <antoniog2miz> then how should I initialize that variables?

[14:09] <ugexe> I dont see why you need the conditional

[14:09] <antoniog2miz> s/variables/variable

[14:09] <antoniog2miz> If I use || or // does not work neither

[14:09] <moritz> %?RESOURCES<template/head.html> // 'template/head.html'

[14:09] <ugexe> ^

[14:10] <antoniog2miz> that returns an empty list

[14:10] <ugexe> although you *probably* want `"template/head.html".IO.e ?? "template/head.html" !! %?RESOURCES<template/head.html>`

[14:10] *** nadim_ left
[14:10] <ugexe> which allows your user to override the default in %?RESOURCES

[14:11] <antoniog2miz> uoh, that works

[14:11] <antoniog2miz> ugexe: thanks a lot

[14:11] <antoniog2miz> moritz: and thanks to you too! :D

[14:12] <ugexe> https://github.com/ugexe/zef/blob/master/lib/Zef/Config.pm6#L21-L32 -- this is how zef does it

[14:14] *** nepugia joined
[14:14] *** nadim_ joined
[14:16] *** Guest9252 left
[14:23] *** MasterDuke joined
[14:30] *** domidumont joined
[14:33] *** domidumont1 left
[14:40] <AlexDaniel> .tell jmerelo what's up with the squashathon, btw? Any guide or how-to-start document?

[14:40] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[14:40] <yoleaux> 10:38Z <jmerelo> AlexDaniel: did you get ready the Math::Sequences repo for the hackathon?

[14:40] *** Itaipu left
[14:40] <AlexDaniel> hmmmmmmmmmmmmmm

[14:40] <AlexDaniel> I thought someone else will do it!!

[14:40] <AlexDaniel> :D

[14:45] *** Itaipu joined
[14:47] *** ravenousmoose left
[14:57] *** nadim_ left
[14:59] <domidumont> AlexDaniel: At Debian, we don't use  https://github.com/perl6/os-build. Files for Debian package are hosted on Debian's gitlab instance (See https://salsa.debian.org/perl6-team )

[15:01] *** domidumont1 joined
[15:02] *** Itaipu left
[15:04] <El_Che> releasable6: status

[15:04] <releasable6> El_Che, Next release will happen when it's ready. R6 is down. At least 1 blocker. 345 out of 667 commits logged

[15:04] <AlexDaniel> domidumont: ok, good, thanks

[15:04] <releasable6> El_Che, Details: https://gist.github.com/05c499a912a8fe5311adb16cddd2cf70

[15:04] *** domidumont left
[15:05] <AlexDaniel> El_Che: there's a release branch in nqp and rakudo

[15:05] <AlexDaniel> El_Che: the release will be called 2019.07 I guess, cuz that's less confusing

[15:06] <AlexDaniel> El_Che: but as soon as moarvm 2019.07 is out and some minor details are figured out (like where to upload the damn thing) it'll be out, I'm hoping in like a day or two

[15:11] *** nepugia left
[15:16] *** jmerelo joined
[15:19] <El_Che> AlexDaniel: thx for the info. So the way forward is checking out the 3 repos with the respective tag?

[15:19] <AlexDaniel> El_Che: I'll upload a .tar.gz somewhere here I think: https://github.com/rakudo/rakudo/tags

[15:20] <AlexDaniel> we'll see how it goes

[15:20] *** Itaipu joined
[15:21] *** Manifest0 left
[15:21] <AlexDaniel> El_Che: so it will be https://github.com/rakudo/rakudo/releases/download/2019.07/2019.07.tar.gz and https://github.com/rakudo/rakudo/releases/download/2019.07/2019.07.asc

[15:21] <AlexDaniel> I think

[15:21] <AlexDaniel> sorry https://github.com/rakudo/rakudo/releases/download/2019.07/2019.07.tar.gz.asc

[15:22] <El_Che> (as not knowing where to uplod stuff suggest the tar.gz way is doomed)

[15:22] <AlexDaniel> haha, well

[15:22] <jmerelo> Hey

[15:22] <yoleaux> 14:40Z <AlexDaniel> jmerelo: what's up with the squashathon, btw? Any guide or how-to-start document?

[15:22] <AlexDaniel> El_Che: alternatively just `git checkout` the appropriate tag, yeah, and check that the tag is signed by‚Ä¶

[15:22] <AlexDaniel> by‚Ä¶ me? I guess?

[15:23] <jmerelo> AlexDaniel: There was the blog entry by the distribution author. I don't think we need much more that that. It's linked form the squashathon page.

[15:23] <AlexDaniel> I don't know

[15:23] <AlexDaniel> :)

[15:23] <AlexDaniel> jmerelo: a-ha, I see

[15:25] <AlexDaniel> jmerelo: that's pretty good actually

[15:26] *** Manifest0 joined
[15:32] *** nadim_ joined
[15:32] *** Manifest0 left
[15:37] *** Manifest0 joined
[15:40] *** AlexDaniel left
[15:40] *** AlexDaniel joined
[15:40] *** Cabanossi left
[15:40] <El_Che> AlexDaniel: are github tags signed?

[15:41] <El_Che> haven't seen it yet

[15:42] *** dogbert11 joined
[15:42] *** Cabanossi joined
[15:42] *** nadim_ left
[15:43] <AlexDaniel> El_Che: both commits and tags should be signed

[15:43] <AlexDaniel> El_Che: git show --show-signature 2019.03.1

[15:43] <AlexDaniel> I think?

[15:44] *** dogbert17 left
[15:45] <AlexDaniel> El_Che: I'm a bit confused though. There's a signature for the commit and for the tag, and they can be different, right?

[15:45] <AlexDaniel> depends on whether it's a lightweight tag or not

[15:45] <AlexDaniel> we do use annotated tags though

[15:47] <jmerelo> AlexDaniel: they're different objects in git, so they can be different.

[15:53] *** Manifest0 left
[15:56] *** nadim_ joined
[15:56] *** patrickb left
[15:58] *** antoniog2miz left
[16:00] *** Manifest0 joined
[16:09] *** Manifest0 left
[16:15] *** Manifest0 joined
[16:19] *** DarthGandalf joined
[16:22] *** jmerelo left
[16:27] *** Manifest0 left
[16:28] *** squashable6 left
[16:32] *** squashable6 joined
[16:32] *** ChanServ sets mode: +v squashable6

[16:33] *** Manifest0 joined
[16:33] *** AlexDaniel left
[16:34] *** squashable6 left
[16:34] *** squashable6 joined
[16:34] *** ChanServ sets mode: +v squashable6

[16:35] *** dakkar left
[16:37] *** jaldhar left
[16:43] *** Manifest0 left
[16:47] *** Manifest0 joined
[16:58] *** dolmen left
[16:59] *** tcloud left
[17:02] *** antoniog1miz joined
[17:07] *** antoniog2miz joined
[17:09] *** antoniog1miz left
[17:14] *** nepugia joined
[17:15] *** Manifest0 left
[17:20] *** Manifest0 joined
[17:29] *** Manifest0 left
[17:35] *** Manifest0 joined
[17:50] *** jmerelo joined
[17:50] <jmerelo> squashable6: status

[17:50] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 1 day and ‚âà10 hours (2019-07-06 UTC-14‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:50] <jmerelo> Squashathon is coming!

[17:50] *** jmerelo left
[17:52] *** lembark joined
[17:53] <lembark> Q: Why do state variables behave differently in sub's & multis?

[17:54] <lembark> trying to save state of a first-pass variable as "state %first = %sample;" works fine in a sub; fails with the only change being a multi.

[17:57] <Kaiepi> m: proto sub foo { state $foo = 1; {*} }; multi sub foo { say $foo }; foo

[17:57] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$foo' is not declared. Did you mean '&foo'?‚ê§at <tmp>:1‚ê§------> 3te $foo = 1; {*} }; multi sub foo { say 7‚èè5$foo }; foo‚ê§¬ª

[17:57] <tobs> m: multi f (%sample) { say state %first = %sample } ; f %(a => 10); f %(a => 11); f %(a => 12)

[17:57] <Kaiepi> damn

[17:57] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´{a => 10}‚ê§{a => 10}‚ê§{a => 10}‚ê§¬ª

[17:57] <tobs> lembark: it seems to work in this tiny scenario

[17:59] <ugexe> Kaiepi: i'd be way more worried if that *did* work

[17:59] <ugexe> m: proto sub foo { my $*foo = 1; {*} }; multi sub foo { say $*foo }; foo # this is how to do what you were doing

[17:59] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´1‚ê§¬ª

[18:00] <Kaiepi> oh right

[18:01] <ugexe> m: proto sub foo { state $*foo = $*foo + 1; {*} }; multi sub foo { say $*foo }; foo; foo

[18:01] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§1‚ê§1‚ê§  in sub foo at <tmp> line 1‚ê§¬ª

[18:01] <lembark> Q: Why do state variables behave differently in sub's & multis? Checking multi sub doc it doesn't mention state vars.

[18:01] <ugexe> because they dont

[18:01] <ugexe> you need to show an example as requested earlier

[18:01] *** domidumont1 left
[18:02] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/57bd236f14a2ae2de2e6c80aa4462388/pasted.txt

[18:02] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/01f89ceec5bcc7ca48558c9504581049/pasted.txt

[18:03] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/8115c4cf40971b050b2b103fcf4c0c79/pasted.txt

[18:03] <ugexe> those dont compile

[18:03] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/6c307ce14f3f0a3f10bddd76b9f862c5/pasted.txt

[18:04] <lembark> Replacing  the 'sub' with a 'multi' leads to different output.

[18:04] <ugexe> the code you posted cannot be run by anyone here

[18:05] <lembark> Q: Is this somthing obvious in the syntax that I'm missing (as illustrated by the code as shown)?

[18:05] <lembark> If not then I have to write and test a working example that is shorter than the module I'm working on.

[18:06] <ugexe> if i had to guess off just what I can see (since it cannot be run) i'd guess the `samewith extract-stats(), |%args` creates a new closure clone. state only holds its state per closure clone.

[18:06] <ugexe> but if you make a shorter example you'll learn how state works along the way

[18:07] <lembark> Please note that the section having samewith is commented out in the example.

[18:07] <ugexe> well, this is a good reason to include a working example. i dont know what the hell im supposed to be considering

[18:07] <ugexe> s/working/compilable/

[18:07] <lembark> Q: Where are the closure clones described w/ state?

[18:09] <lembark> https://docs.perl6.org/syntax/state was where I started.

[18:09] <ugexe> https://docs.perl6.org/language/traps#Using_an_once_block

[18:09] <ugexe> once { } is essentially state $

[18:10] <Kaiepi> is "an once block" grammatically correct?

[18:11] <tadzik> I'd go for "a once block"

[18:11] <timotimo> once a block, always a block

[18:11] <tadzik> :>

[18:12] <ugexe> Kaiepi: no

[18:12] <ugexe> someone misapplied the old "always use 'an' before word starting with vowel"

[18:13] <antoniog2miz> everyone: what do you think of this => https://github.com/perl6/doc/issues/2499

[18:13] <antoniog2miz> someone is using disambiguation functionality?

[18:13] *** vrurg left
[18:13] * moritz does

[18:13] <antoniog2miz> moritz: I know you do haha

[18:13] *** vrurg joined
[18:14] <antoniog2miz> but it takes a big time to complete and if you are the only one who uses it...

[18:14] <lembark> Wonderful thing about English: There are no complete rules for it :-)

[18:14] <moritz> antoniog2miz: am I the only one? Or just the only vocal one?

[18:15] <ugexe> lol, it was changed from a to an with the justification "Grammar correction"

[18:15] <Geth> ¬¶ doc: b7b942290b | (Ben Davies)++ | doc/Language/traps.pod6

[18:15] <Geth> ¬¶ doc: Using an once block -> Using a once block

[18:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b7b942290b

[18:15] <synopsebot> Link: https://doc.perl6.org/language/traps

[18:16] <ugexe> This is why its always good to get peer review on things

[18:17] <antoniog2miz> moritz: Idk, should we leave it then? or make a kind of "votation"?

[18:17] <ugexe> I wouldnt mind if we required at least 1 peer reviewer to sign off on any change

[18:17] <moritz> antoniog2miz: I wouldn't mind if we had some kind of alternative, where I could link to something a search, for example

[18:18] <antoniog2miz> mmm can you go a little further in the explanation of the alternative?

[18:19] <moritz> my use case is "give me all meanings of the +", and I want to able to give other people a link to that

[18:20] <moritz> with google, I can link to google.com/?q=mysearchterm

[18:20] <moritz> I can't with perl6.org, to the best of my knowledge

[18:20] <moritz> hence the disambiguation files are the next best thing

[18:21] <antoniog2miz> mmm I see

[18:21] *** rindolf left
[18:21] <moritz> telling people "go to https://docs.perl6.org/, enter "+" in the search box, and see a list of possible matches in a tiny part of your browser window" simply doesn't cut it, if you ask me

[18:22] <lembark> Q: Where is the difference in context between a multi sub & regular sub described (e.g., what is it about declaring the multi that changes the scope of state variables to be in a deeper lexical scope)? 

[18:22] <ugexe> change the landing page to just be a search bar

[18:22] <antoniog2miz> moritz: yep, I think so too

[18:23] *** zakharyas left
[18:23] <antoniog2miz> mmm I will link this conversation to the issue to close or see what jmerelo thinks

[18:25] <ugexe> lembark: again, there is no difference. if you are using callwith/samewith/whatever then that is your problem

[18:25] <ugexe> m: multi sub foo(|c) { callwith(|c) }; multi sub foo { state $x; $x += 1; $x }; say foo(); say foo()

[18:25] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´1‚ê§2‚ê§¬ª

[18:26] <lembark> I'm not using samewith.

[18:26] <lembark> Sorry, bad paste.

[18:26] <ugexe> i think you'll need to come up with a better example then

[18:27] <ugexe> m: multi sub foo { state $x; $x += 1; $x }; say foo(); say foo()

[18:27] <camelia> rakudo-moar d4ceb97e0: OUTPUT: ¬´1‚ê§2‚ê§¬ª

[18:27] *** squashable6 left
[18:28] *** mowcat left
[18:28] *** sno joined
[18:28] <lembark> failing code replaces one 'sub' with a single 'multi with a state var at the outermost level in the block:

[18:28] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/4b87efa029c936cdb14bc002d3a20727/pasted.txt

[18:29] <lembark> Calling it via:

[18:29] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/e497df3f1ecf50c9dd722d66816280e3/pasted.txt

[18:29] <lembark> yields:

[18:29] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/f2b9ad4cd3aac5894ae68c47a050f37c/pasted.txt

[18:29] <lembark> Replacing 'sub' wit 'multi' leaves me with:

[18:29] *** squashable6 joined
[18:29] *** ChanServ sets mode: +v squashable6

[18:30] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/67abcd03d85421742ffb283118222b9c/pasted.txt

[18:30] <ugexe> that cant be right. the return type constraint will fail because its returning a pair

[18:30] <ugexe> not a hash

[18:30] <lembark> Why would that affect storage of the state var?

[18:31] <lembark> If you prefer:

[18:31] <lembark> Uploaded file: https://uploads.kiwiirc.com/files/baf22fb082898d21c2503273ae082c55/pasted.txt

[18:31] <ugexe> when someone gives me a piece of example code im going to assume all the errors it spews are relevant. if they are not then they should not be in the example

[18:32] <lembark> The question is why would sub foo() { state  $bar = 1 ; } behave differently for $bar than multi foo() { state $bar = 1 };

[18:33] <lembark> If the issue is closure conext fine, where can I look to find out how the closure context is defined and how it affects the state vars?

[18:33] *** eseyman joined
[18:33] <ugexe> well, "Calling it via:" code calls a function that doesn't exist in the example

[18:33] <ugexe> bbl

[18:33] *** sauvin left
[18:40] *** Manifest0 left
[18:40] *** AlexDaniel joined
[18:42] *** MasterDuke left
[18:43] *** antoniog2miz left
[18:44] *** reach_satori_ left
[18:45] *** rindolf joined
[18:45] *** noisegul left
[18:48] *** Black_Ribbon joined
[18:49] *** Manifest0 joined
[18:57] *** Manifest0 left
[19:02] *** MasterDuke joined
[19:03] *** Manifest0 joined
[19:19] *** pecastro joined
[19:24] *** |oLa| joined
[19:27] *** folex[m] is now known as folex

[19:31] *** |oLa| left
[19:32] *** Manifest0 left
[19:39] *** Manifest0 joined
[19:43] *** Manifest0 left
[19:44] *** nepugia left
[19:48] *** nepugia joined
[19:49] *** Manifest0 joined
[19:52] *** nepugia_ joined
[19:52] *** nepugia left
[20:01] *** rfold joined
[20:04] *** Altai-man_ joined
[20:05] *** |oLa| joined
[20:06] *** sena_kun left
[20:10] *** Altai-man_ left
[20:15] *** |oLa| left
[20:31] *** nepugia_ left
[20:35] <rfold> I'm trying to build nqp 2019.03 but I get an error: "New type QAST::Var+{QAST::SpecialArg} for QAST::Var is not a mixin type" anyone seen this before?

[20:37] <timotimo> that's odd; is your moarvm version also 2019.03 or maybe newer?

[20:37] <rfold> MoarVM 2019.05.

[20:38] <rfold> Should I try MoarVM 2019.03?

[20:38] <timotimo> yes, please give that a try

[20:39] <timotimo> there was a change that only things that were specifically marked were allowed to be mixed into things, i assume that change happened after 2019.03

[20:39] <timotimo> so nqp 2019.03 doesn't do it, but moarvm 2019.05 requires it to be done

[20:39] <rfold> Alright, building 2019.03.

[20:41] *** netrino joined
[20:42] *** squashable6 left
[20:43] *** sno left
[20:43] <rfold> Thanks, it compiles now. :)

[20:44] *** squashable6 joined
[20:44] *** ChanServ sets mode: +v squashable6

[20:45] *** sno joined
[20:49] *** nepugia_ joined
[20:50] *** kensanata joined
[20:58] *** lizmat joined
[21:05] *** Manifest0 left
[21:10] <rfold> I really like that I can use ‚ÄûDutch quotation marks‚Äù for string literals.

[21:12] <rfold> It looks really nice especially with a proportional font.

[21:13] *** Manifest0 joined
[21:17] *** Manifest0 left
[21:20] *** vrurg left
[21:21] *** vrurg joined
[21:23] *** Manifest0 joined
[21:26] *** powerbit left
[21:28] *** AlexDaniel left
[21:35] *** Manifest0 left
[21:38] <lizmat> weekly: http://blogs.perl.org/users/damian_conway/2019/07/as-simple-as-possiblebut-no-simpler.html

[21:38] <notable6> lizmat, Noted!

[21:39] *** Manifest0 joined
[21:52] *** Manifest0 left
[21:58] *** Manifest0 joined
[22:01] *** kensanata left
[22:03] *** nepugia_ left
[22:17] *** rfold left
[22:33] *** Manifest0 left
[22:33] *** xi- left
[22:36] *** xi- joined
[22:38] *** Manifest0 joined
[22:44] <Geth> ¬¶ ecosystem: 61d64a43ea | Altai-man++ (committed using GitHub Web editor) | META.list

[22:44] <Geth> ¬¶ ecosystem: Remove now unnecessary ASN::META plugin

[22:44] <Geth> ¬¶ ecosystem: 

[22:44] <Geth> ¬¶ ecosystem: It was refactored out to be redundant.

[22:44] <Geth> ¬¶ ecosystem: The module was a part of a very early, experimental stage of

[22:44] <Geth> ¬¶ ecosystem: ASN::META module, so those who had it installed likely knew

[22:44] <Geth> ¬¶ ecosystem: what they were doing at that time.

[22:44] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/61d64a43ea

[23:00] *** Manifest0 left
[23:05] *** Manifest0 joined
[23:12] *** Manifest0 left
[23:14] *** pecastro left
[23:18] *** Manifest0 joined
[23:25] *** netrino left
[23:25] *** rindolf left
[23:26] *** Manifest0 left
[23:32] *** Manifest0 joined
[23:34] *** thundergnat left
[23:44] *** Manifest0 left
[23:49] *** Manifest0 joined
[23:53] *** AlexDaniel joined
[23:56] *** vrurg left
[23:56] *** vrurg joined
[23:58] *** Manifest0 left
