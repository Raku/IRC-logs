[00:01] <irced> m: my $seq := gather for -* .. * { if 0 == 0 { take $_; } } }

[00:01] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/6ivpDLrYJQ␤Unexpected closing bracket␤at /tmp/6ivpDLrYJQ:1␤------> 03 for -* .. * { if 0 == 0 { take $_; } } 08⏏04}␤»

[00:01] <irced> m: my $seq := gather for -* .. * { if 0 == 0 { take $_; } } 

[00:01] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «»

[00:01] <irced> m: my $seq := gather for -* .. * { if 0 == 0 { take $_; } }; say $seq;

[00:01] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «({ ... })␤»

[00:01] <timotimo> lol, no. you can't start at negative infinity

[00:01] <irced> one infinite range down

[00:01] <irced> oh

[00:01] <irced> crap

[00:02] <timotimo> you start at 0

[00:02] <irced> k

[00:02] <timotimo> and then go like +1, -1, +2, -2, +3, -3

[00:02] <timotimo> that way you reach infinity and pass all numbers on the way

[00:02] *** AlexDani` joined
[00:03] * irced a current sears a filament of his brain.

[00:03] <irced> i follow you, lessee

[00:06] *** AlexDaniel left
[00:11] * irced has combinatorially determined there are 4 cases to test

[00:12] * irced ponders nested gathers.

[00:12] *** lucasb left
[00:15] <SmokeMachine> m: .say for 0, 1, 2, { (1 - 3511 * $_) / 65537 } ... *

[00:17] <evalable6> SmokeMachine, rakudo-moar 9dd67cb37: OUTPUT: «(signal SIGHUP) 0␤1␤2␤-0.10713␤0.00575452897␤-0.0002930276213293␤3.095686373326651e-05␤1.3…»

[00:17] * irced gets the fire extinguisher.

[00:21] <irced> m: my $seq := gather for 0 .. * -> $x { gather for 0 .. * -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:21] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[00:22] <irced> nested gather maybe is not the way to go

[00:22] <irced> maybe just one gather..

[00:23] <irced> or just move the gather assignment in

[00:23] <irced> nermost

[00:24] <squashable6> 🍕 FCO++ edited wiki page “How to”: https://github.com/FCO/Red/wiki/How-to

[00:28] *** aborazmeh joined
[00:28] *** aborazmeh left
[00:28] *** aborazmeh joined
[00:28] <irced> x and y can be integers only, maybe real numbers just don't compute here

[00:31] <evalable6> SmokeMachine, Full output: https://gist.github.com/fc42e9475c95c9319f1d69edab2eb6ef

[00:35] <irced> m: my $seq; my $seq-outer := gather for 0 .. * -> $x { $seq := gather for 0 .. * -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:35] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(Any)␤»

[00:40] <squashable6> 🍕 FCO++ created wiki page “How to relationship”: https://github.com/FCO/Red/wiki/How-to-relationship

[00:41] <irced> i can get a solution when I don't use the infinite for

[00:42] <irced> but even if I provide values close to the solution it loops forever with infinite *

[00:43] <irced> m: my $seq := gather for 26000 .. 27000 -> $x { gather for 1000 .. 2000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:43] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «Nil␤»

[00:43] <irced> m: my $seq := gather for 26000 .. 27000 -> $x { for 1000 .. 2000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:43] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «Nil␤»

[00:43] <irced> m: my $seq := gather for 1000 .. 2000 -> $x { for 26000 .. 27000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:43] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(1405 26226)␤»

[00:44] <irced> m: my $seq := gather for 1000 .. 2000 -> $x { gather 26000 .. 27000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:44] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/6Nv5ry2CQH␤Confuse…»

[00:44] <evalable6> irced, Full output: https://gist.github.com/a86dc0443d0084e7a8e349be620bf4f4

[00:44] <irced> m: my $seq := gather for 1000 .. 2000 -> $x { gather for 26000 .. 27000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:44] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «Nil␤»

[00:44] <irced> ahh but nested gathers don't work

[00:44] <irced> m: my $seq := gather for 1000 .. 2000 -> $x { for 26000 .. 27000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:45] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(1405 26226)␤»

[00:45] <irced> m: my $seq := gather for 1000 .. 2000 -> $x { for 26000 .. * -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:45] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[00:45] <irced> but infinity on the gather works fine

[00:46] <irced> m: my $seq := gather for 1000 .. * -> $x { for 26000 .. 27000 -> $y { if 65537*$x + 3511*$y == 1 || 65537*$x + -3511*$y == 1 || -65537*$x + 3511*$y == 1 || -65537*$x+-3511*$y==1 { take ($x, $y); } } }; say $seq[0];

[00:46] <evalable6> irced, rakudo-moar 9dd67cb37: OUTPUT: «(1405 26226)␤»

[00:46] <irced> so the question is, how do i get a nested gather to take so to speak

[00:47] <SmokeMachine> m: .say for gather for ^Inf { my $a = (1 - 3511 * ($_ * 2)) / 65537; take ($_, $a) if $a.Int == $a; my $b = (1 - 3511 * ($_ * 2 + 1)) / 65537; take ($_, $b) if $b.Int == $b }

[00:47] <evalable6> SmokeMachine, rakudo-moar 9dd67cb37: OUTPUT: «(signal SIGHUP) (13113 -1405)␤«timed out after 10 seconds»»

[00:49] * irced considers a double take

[00:51] <SmokeMachine> m: .say for (gather for ^Inf { my $a = (1 - 3511 * ($_ * 2)) / 65537; take ($_, $a) if $a.Int == $a; my $b = (1 - 3511 * ($_ * 2 + 1)) / 65537; take ($_, $b) if $b.Int == $b }).head: 20

[00:52] <irced> any way i slice it nested gathers run forever

[00:52] <evalable6> SmokeMachine, rakudo-moar 9dd67cb37: OUTPUT: «(13113 -1405)␤(45881 -4916)␤(78650 -8427)␤(111418 -11938)␤(144187 -15449)␤(176955 -18960)␤…»

[00:52] <evalable6> SmokeMachine, Full output: https://gist.github.com/5b5f96f8c555163f1cd9735a1b744991

[00:53] <SmokeMachine> irced: then I asked just 20... it stopped on 20... ^^

[00:53] <irced> i just realized i was not accounting for the negative value on y, thanks for that

[00:53] <irced> looking at your code too

[00:55] <SmokeMachine> I'm going to sleep... tomorrow I'll continue playing on the Red squashathon...

[00:55] <SmokeMachine> irced: would you like to play?

[00:55] <irced> SmokeMachine: I can make a little time for it 😃

[00:56] <SmokeMachine> irced: :)

[00:56] <SmokeMachine> irced: https://github.com/FCO/Red/issues?q=is%3Aissue+is%3Aopen+label%3ADocumentation

[00:57] <irced> SmokeMachine: the project itself is not one with which I am readily familiar. I'll see what I can do.

[00:58] <SmokeMachine> irced: it's a very good chance to make it become familiar! :)

[00:58] <irced> 😃

[01:00] <irced> that is, ORM is a vague tho not entirely vague concept to me atm. looking at the wiki now,

[01:00] <SmokeMachine> :)

[01:01] <irced> oh good a synopsis i'll start with that then. i know a little mysql too.

[01:04] <SmokeMachine> irced: how is it going so far?

[01:04] <irced> zef'ing it, gotta get a handle on red before i can look at the issues

[01:06] *** Doc_Holliwood left
[01:12] <SmokeMachine> irced: could you, please, let me know if something goes wrong?

[01:13] <irced> SmokeMachine: yeah sure i'm really green in the area of open source collaboration tho, as in, i've never really done anything with like git except for my own local projects for versioning control

[01:14] <irced> SmokeMachine: so i'll look at what's there and let you know if i see anything off (and look at the issues)

[01:15] * irced is currently typing/combing the synopsis.

[01:16] <irced> SmokeMachine: or your specifically referring to the synopsis ?

[01:16] *** netrino left
[01:21] <SmokeMachine> irced: anything! :)

[01:22] *** hythm joined
[01:22] <irced> got it sure thing

[01:41] <irced> SmokeMachine

[01:42] <irced> Could not find Red::Driver::SQLITE at line 0 in:

[01:42] <irced> rakudo/share/perl6/site/sources/4E5F23AE863CF34767643CDA7F4D52D2EE2BAF71 (Red::Database) line 7

[01:45] <irced> when my $*RED-DB = database "SQLITE";

[01:46] <irced> trying zef install DB::SQLite

[01:47] <irced> no change

[01:47] <irced> oh a typo SQLite

[01:48] <irced> Cannot locate native library 'libpq.so': libpq.so: cannot open shared object file: No such file or directory

[01:48] *** molaf left
[01:48] *** cpan-p6 left
[01:49] * irced installing pqxx

[01:49] *** cpan-p6 joined
[01:49] *** cpan-p6 left
[01:49] *** cpan-p6 joined
[01:50] <irced> err installing postregresql

[01:50] <irced> postgreSQL

[01:57] *** AlexDani` is now known as AlexDaniel

[01:57] *** AlexDaniel left
[01:57] *** AlexDaniel joined
[02:01] *** molaf joined
[02:03] * irced installing

[02:03] *** irced left
[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:10] *** irced joined
[02:10] <AlexDaniel> heh, wikipedia is down

[02:10] *** Cabanossi left
[02:10] <AlexDaniel> OK back up again :D

[02:11] <irced> hmm, seems red requires postgresql, this is a barrier to me because setup is not trivial on my system.

[02:12] <vrurg> irced: you could use SQLite too if your task is ok with it.

[02:12] <irced> hmm, i was just trying the synopsis, maybe i missed the part about postgresql because the database selected in it is SQLite

[02:14] <vrurg> irced: Sorry, I don't understand you. Red supports both SQLite and Pg. It doesn't require either, just choose what's best for you.

[02:14] <irced> oh, i see now

[02:14] <irced> thanks

[02:14] <vrurg> my pleasure! :)

[02:17] * vrurg is seriously considering writing a book on "How To Kill 8-core CPU"

[02:17] <irced> how about how to Kill With an 8-Core CPU ?

[02:18] <vrurg> No problem as long as it's enclosed in alluminum case with batteries...

[02:18] <irced> that is a novel way to use a cpu!

[02:19] <vrurg> It's better avoid dropping a new macbook pro on one's foot...

[02:20] <vrurg> "What's that sound?" – "It's my jacket fell down..." – "Why so loud?" – "I forgot to jump out of it..."

[02:20] <irced> hmm, maybe get a case next time?

[02:21] <irced> unless your in some country where tech is contraband

[02:21] <irced> or some time anyway

[02:22] *** Cabanossi joined
[02:24] *** AlexDaniel left
[02:38] *** khisanth_ left
[02:50] *** khisanth_ joined
[02:51] *** AlexDaniel joined
[02:51] <AlexDaniel`> oh, wikipedia is actually being DDoS-ed

[02:51] *** AlexDaniel left
[02:51] *** AlexDaniel joined
[03:20] *** mowcat left
[03:46] <hythm> \o What is there a significant difference between `map` and `for`? I have `@repo` of `Installation` repos and when I `@repo.map( *.uninstall: $dist)`, that doesn't work, however `.uninstall: $dist for @repo` works fine 

[03:46] <hythm> s/What//

[03:49] <hythm> ah, adding `eager` before `@repo.map( *.uninstall: $dist )` worked as expected

[03:50] <Elronnd> o/

[04:18] *** Black_Ribbon left
[04:19] *** Black_Ribbon joined
[04:20] *** [particle] left
[04:21] <Voldenet> hythm: using map makes sense only if you're going to collect results later, and collecting them will apply given function - if you're not collecting results, for might be more readable choice

[04:21] *** [particle] joined
[04:22] <hythm> noted. thanks Voldenet.

[04:22] <Voldenet> it's only my opinion though

[04:23] * irced eyes the scythe above Voldenet's head.

[04:26] <Voldenet> …mercy?

[04:26] <irced> i just like being the comic relief

[04:28] *** [particle]1 joined
[04:28] *** sena_kun joined
[04:29] *** [particle] left
[04:31] <Voldenet> in fact, I try to only use pure functions in .map, because some languages (not perl6) re-evaluate lazy sequences

[04:32] *** [particle] joined
[04:32] *** [particle]1 left
[04:35] *** [particle]1 joined
[04:36] *** adu joined
[04:36] *** [particle] left
[04:55] * irced studies SmokeMachine's math and realizes my math education is behind about 2000 years.

[05:00] <squashable6> 🍕 Altai-man++ wrote a comment on “Document `$*RED-COMMENT-SQL`”: https://github.com/FCO/Red/issues/343#issuecomment-529073303

[05:00] <squashable6> 🍕🍕🍕  First contribution by Altai-man++! ♥

[05:01] <squashable6> 🍕 Altai-man++ wrote a comment on “Document `$*RED-DEBUG-AST`”: https://github.com/FCO/Red/issues/342#issuecomment-529073335

[05:01] <squashable6> 🍕 Altai-man++ wrote a comment on “Document `$*RED-DEBUG`”: https://github.com/FCO/Red/issues/341#issuecomment-529073389

[05:02] <Elronnd> Voldenet: hmm, that's a matter of opinion.  Personally I find map much more readable

[05:09] *** hythm left
[05:18] *** wamba joined
[05:26] *** rabbit0 joined
[05:52] *** rabbit0 left
[05:58] *** aborazmeh left
[06:17] *** domidumont joined
[06:39] *** irced left
[06:42] *** jmerelo joined
[06:46] <squashable6> 🍕 JJ++ wrote a comment on “Find a better way to document it”: https://github.com/FCO/Red/issues/325#issuecomment-529079864

[06:46] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[06:46] <squashable6> 🍕 JJ++ wrote a comment on “Document how && and || work on `map` and `grep`”: https://github.com/FCO/Red/issues/323#issuecomment-529079903

[06:47] *** rindolf joined
[06:48] <squashable6> 🍕 JJ++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[06:52] <squashable6> 🍕 JJ++ edited wiki page “Dynamic Variables”: https://github.com/FCO/Red/wiki/Dynamic-Variables

[06:52] <squashable6> 🍕 JJ++ opened issue “Somme comments on Dynamic variables”: https://github.com/FCO/Red/issues/350

[06:54] <squashable6> 🍕 JJ++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[06:58] <squashable6> 🍕 JJ++ created wiki page “API Deprecation”: https://github.com/FCO/Red/wiki/API-Deprecation

[06:58] <squashable6> 🍕 JJ++ edited wiki page “API Deprecation”: https://github.com/FCO/Red/wiki/API-Deprecation

[07:00] <squashable6> 🍕 JJ++ wrote a comment on “Document the depreciation will occur on :api<2>”: https://github.com/FCO/Red/issues/340#issuecomment-529080638

[07:04] <squashable6> 🍕 JJ++ opened issue “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351

[07:11] <squashable6> 🍕 JJ++ opened issue “.idea/workspace.xml shou…”: https://github.com/FCO/Red/issues/352

[07:37] *** jmerelo left
[07:48] *** shnooshmand joined
[07:53] *** shnooshmand left
[07:54] *** shnooshmand joined
[07:55] *** shnooshmand left
[07:57] *** shnooshmand joined
[07:58] *** shnooshmand left
[08:05] *** MasterDuke75 left
[08:06] *** MasterDuke joined
[08:07] *** domidumont left
[08:07] *** Doc_Holliwood joined
[08:18] *** domidumont joined
[08:19] *** adu left
[08:39] *** molaf left
[08:49] *** popov_mp joined
[09:09] <Xliff> m: say Q ('")

[09:09] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «'"␤»

[09:49] *** evalable6 left
[09:49] *** evalable6 joined
[09:56] *** Ven`` joined
[10:22] <squashable6> 🍕 FCO++ wrote a comment on “Document how && and || work on `map` and `grep`”: https://github.com/FCO/Red/issues/323#issuecomment-529094524

[10:23] <SmokeMachine> irced: what do you mean with my math???

[10:23] <tellable6> SmokeMachine, I'll pass your message to irced

[10:47] *** Black_Ribbon left
[11:03] *** netrino joined
[11:05] <squashable6> 🍕 FCO++ edited wiki page “Ecosystem”: https://github.com/FCO/Red/wiki/Ecosystem

[11:08] <SmokeMachine> irced: it’s Red::Driver::SQLite... not SQLITE.

[11:08] <tellable6> SmokeMachine, I'll pass your message to irced

[11:09] <SmokeMachine> irced: in the synopsis, it uses Postgres just for 1 block

[11:09] <tellable6> SmokeMachine, I'll pass your message to irced

[11:13] <squashable6> 🍕 FCO++ wrote a comment on “Document `$*RED-COMMENT-SQL`”: https://github.com/FCO/Red/issues/343#issuecomment-529098647

[11:13] <squashable6> 🍕 FCO++ wrote a comment on “Document `$*RED-DEBUG-AST`”: https://github.com/FCO/Red/issues/342#issuecomment-529098696

[11:14] <squashable6> 🍕 FCO++ wrote a comment on “Document `$*RED-DEBUG`”: https://github.com/FCO/Red/issues/341#issuecomment-529098721

[11:14] <squashable6> 🍕 FCO++ closed issue “Document `$*RED-DEBUG`”: https://github.com/FCO/Red/issues/341

[11:14] <squashable6> 🍕 FCO++ closed issue “Document `$*RED-COMMENT-SQL`”: https://github.com/FCO/Red/issues/343

[11:15] <squashable6> 🍕 FCO++ closed issue “Document `$*RED-DB`”: https://github.com/FCO/Red/issues/348

[11:16] <squashable6> 🍕 FCO++ labeled issue “Generate HTML from Pod” (Documentation): https://github.com/FCO/Red/issues/351

[11:18] *** Altai-man_ joined
[11:19] *** sena_kun left
[11:20] *** robertle joined
[11:22] <squashable6> 🍕 FCO++ wrote a comment on “Somme comments on Dynamic variables”: https://github.com/FCO/Red/issues/350#issuecomment-529099300

[11:23] <squashable6> 🍕 FCO++ opened issue “Any other module to add on Ecosystem?”: https://github.com/FCO/Red/issues/353

[11:23] <squashable6> 🍕 FCO++ labeled issue “Any other module to add on Ecosystem?” (Documentation): https://github.com/FCO/Red/issues/353

[11:37] *** ravenousmoose joined
[11:59] <Xliff> m: my %a = ( a => 1, b => 2); my %b = ( c => 3, d => 4); %a.append(%b); %a.gist.say

[11:59] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «{a => 1, b => 2, c => 3, d => 4}␤»

[12:13] *** Doc_Holliwood left
[12:13] *** Doc_Holliwood joined
[12:15] *** krychu joined
[12:41] *** Altai-man_ left
[12:53] *** pmurias joined
[12:53] <pmurias> .

[12:59] *** |oLa| left
[12:59] *** cpan-p6 left
[12:59] <squashable6> 🍕 FCO++ wrote a comment on “.idea/workspace.xml shou…”: https://github.com/FCO/Red/issues/352#issuecomment-529106114

[12:59] <squashable6> 🍕 FCO++ closed issue “.idea/workspace.xml shou…”: https://github.com/FCO/Red/issues/352

[12:59] *** cpan-p6 joined
[12:59] *** cpan-p6 left
[12:59] *** cpan-p6 joined
[13:01] *** lucasb joined
[13:05] <squashable6> 🍕 Xliff++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529106639

[13:05] <squashable6> 🍕🍕🍕  First contribution by Xliff++! ♥

[13:09] <SmokeMachine> Xliff: thanks! what do you think of a travis task for that?

[13:11] <Xliff> Hmm... again... where would the output go?

[13:12] <Xliff> You'd have to answer that before dealing with Travis.

[13:12] <SmokeMachine> Xliff: maybe to a gh-pages branch?

[13:12] <Xliff> Why a branch?

[13:12] <SmokeMachine> Xliff: https://help.github.com/en/articles/configuring-a-publishing-source-for-github-pages

[13:13] <Xliff> If I were to make this out of whole cloth, the converted pod output would go into a doc/ dir. You don't have one on git, so that's available.

[13:13] *** sena_kun joined
[13:13] <Xliff> OK, so a docs/ dir

[13:14] <SmokeMachine> Xliff: GitHub auto-hosts (as an http server) everything in gh-pages branch..

[13:14] <Xliff> It also says it will work from master in a docs/ dir

[13:14] *** ravenousmoose left
[13:14] <SmokeMachine> Xliff: I didn't know that...

[13:15] <SmokeMachine> Xliff: that would be even better...

[13:15] <Xliff> The problem with a branch: HOW would that work? End users don't want to deal with that stuff. 

[13:15] <Xliff> OK

[13:15] <Xliff> So I can create a script and a Makefile that will call that script to make the docs, and save the output to a docs/ dir.

[13:16] *** ravenousmoose joined
[13:16] <Xliff> Now the issue is this... a pre-commit hook should be made somewhere to create docs/ and commit it.

[13:17] *** krychu left
[13:17] <SmokeMachine> Xliff: maybe not a Makefile, but travis calling the script...

[13:18] <Xliff> .tell jmerelo Suggestion: Consider total of (number of lines added - number of lines removed) for each PR in your consideration of contributions for the squashie.

[13:18] <tellable6> Xliff, I'll pass your message to jmerelo

[13:18] <Xliff> SmokeMachine: The makefile is there to make things easier for everyone.

[13:18] <SmokeMachine> Xliff: I thing that makes sense (your suggestion to jjmerelo...)

[13:18] *** pmurias_ joined
[13:18] <Xliff> I'd rather Travis call "make doc" than have to invoke it with a script where the arguments may change.

[13:19] <Xliff> Yes. That way someone can work on one LARGE commit and not be penalized for it.

[13:19] <SmokeMachine> Xliff: that's ok to me

[13:19] *** pmurias left
[13:19] <SmokeMachine> Xliff: ^this time for the Makefile

[13:20] *** mowcat joined
[13:20] *** mowcat left
[13:20] *** mowcat joined
[13:26] *** mowcat left
[13:29] <squashable6> 🍕 Xliff++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529108401

[13:31] *** mowcat joined
[13:32] *** mowcat left
[13:33] *** krychu joined
[13:34] *** pmurias_ left
[13:34] <Xliff> Looks like the only file with POD is Red.pm

[13:34] <Xliff> I assume it is NOT a safe assumtion to assume this will always be the case?>

[13:35] <Xliff> ^^ SmokeMachine

[13:36] *** pmurias joined
[13:37] <squashable6> 🍕 Xliff++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529108975

[13:37] <SmokeMachine> Xliff: yes, I think it’s not...

[13:39] <Xliff> OK. Then in that case, how should the docs tree look? Do you want files to appear as they are in lib? If so, then we need to create an Index page that appears in the root.

[13:39] <Xliff> That... might be the best way to proceed.

[13:39] <Xliff> We'd also need a method of noting the main class... that could be a command line arg.

[13:43] *** pmurias left
[13:43] <Xliff> m: my @a = <a b c d e f>; my @r; for @a { NEXT { @r.push: $_ }; LAST { @r.push: "{$_}.last" }; }; @r.gist.say

[13:43] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «[a b c d e f f.last]␤»

[13:43] <SmokeMachine> Xliff: about the .join... I like the idea that ResultSeq is just a Seq...

[13:43] <Xliff> Is there a way to bypass NEXT if LAST?!

[13:44] <Xliff> m: my @a = <a b c d e f>; my @r; for @a { NEXT { @r.push: $_ }; LAST { @r.pop; @r.push: "{$_}.last" }; }; @r.gist.say

[13:44] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «[a b c d e f.last]␤»

[13:45] <Xliff> m: my @a = <a b c d e f>; my @r; for @a { @r.push: $_; LAST { @r.pop; @r.push: "{$_}.last" }; }; @r.gist.say

[13:45] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «[a b c d e f.last]␤»

[13:48] <Xliff> m: say $++ for ^3; say $++ for ^3; 

[13:48] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤2␤0␤1␤2␤»

[13:49] *** ravenousmoose left
[13:50] *** pmurias joined
[13:51] <Xliff> Is #? documented anywhere?

[13:52] *** mowcat joined
[13:52] *** mowcat left
[13:52] <SmokeMachine> Xliff: #?

[13:54] <Xliff> https://github.com/rakudo/rakudo/blob/master/src/core.c/Iterable.pm6#L113

[14:08] <tobs> Xliff: I think it does not exist in Perl 6. It's only supported by a build tool in rakudo https://github.com/rakudo/rakudo/blob/master/tools/build/gen-cat.nqp#L29

[14:08] <Xliff> tobs: Ahh... thanks. That could still be useful for code that needs conditionals outside of the language.

[14:08] *** mowcat joined
[14:09] *** mowcat left
[14:09] *** mowcat joined
[14:13] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say;

[14:13] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤»

[14:13] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say;

[14:13] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤»

[14:13] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say;

[14:13] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤»

[14:13] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say;

[14:13] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤»

[14:13] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say;

[14:13] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤»

[14:13] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say;

[14:13] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤»

[14:14] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say; $a.say;

[14:14] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤0␤»

[14:14] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say; $a.say;

[14:14] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤1␤»

[14:14] <Xliff> m: my $a = 2.rand.Int; constant a = 3.14159 if $a; a.say; $a.say;

[14:14] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤1␤»

[14:14] <Xliff> :P

[14:15] <squashable6> 🍕 FCO++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529111999

[14:15] <Xliff> m: my $a = 2.rand.Int; constant a = $a ?? 3.14159 !! 0; a.say; $a.say;

[14:15] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤»

[14:15] <Xliff> m: my $a = 2.rand.Int; constant a = $a ?? 3.14159 !! 0; a.say; $a.say;

[14:15] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤0␤»

[14:15] <Xliff> m: my $a = 2.rand.Int; constant a = $a ?? 3.14159 !! 0; a.say; $a.say;

[14:15] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤0␤»

[14:15] <Xliff> m: my $a = 2.rand.Int; constant a = $a ?? 3.14159 !! 0; a.say; $a.say;

[14:15] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤»

[14:15] <Xliff> m: my $a = 2.rand.Int; constant a = $a ?? 3.14159 !! 0; a.say; $a.say;

[14:15] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤»

[14:16] <Xliff> OK... wow!

[14:16] <Xliff> m: my $a = 2.rand.Int; constant a = ($a ?? 3.14159 !! 0); a.say; $a.say;

[14:16] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤»

[14:16] <Xliff> m: my $a = 2.rand.Int; constant a = ($a ?? 3.14159 !! 0); a.say; $a.say;

[14:16] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤»

[14:16] <Xliff> m: my $a = 2.rand.Int; constant a = ($a ?? 3.14159 !! 0); a.say; $a.say;

[14:16] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «0␤1␤»

[14:16] *** SCHAPiE left
[14:16] <Xliff> So there seems to be no mechanism that will allow me to set a constant if...say... I need that constant to vary depending on OS.

[14:19] <tobs> m: BEGIN my $a = 2.rand.Int; constant a = ($a ?? 3.14159 !! 0); a.say; $a.say;

[14:19] <evalable6> tobs, rakudo-moar 6b2739a8d: OUTPUT: «3.14159␤1␤»

[14:19] <tobs> Xliff: a constant is initialized at BEGIN time

[14:19] <tobs> whereas your $a did not have a value until runtime earlier

[14:20] *** SCHAPiE joined
[14:25] <Xliff> tobs++

[14:29] <squashable6> 🍕 Xliff++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529113045

[14:30] *** mowcat left
[14:33] <Xliff> m: :{ Red::AST => prepare-response $ret }.^name.say

[14:33] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/ViOgI6I1EJ␤Precedi…»

[14:33] <evalable6> Xliff, Full output: https://gist.github.com/bd4491152109ebce8ab7512523180cda

[14:33] <squashable6> 🍕 FCO++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529113417

[14:34] <Xliff> m: my $a := :{ Red::AST => prepare-response $ret }; $a.^name.say

[14:34] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/3Jh6uYcJvI␤Precedi…»

[14:34] <evalable6> Xliff, Full output: https://gist.github.com/9552c326d227b2fc566f8e9ea749af5f

[14:34] <Xliff> m: my $a := :{ Red::AST => 1 }; $a.^name.say

[14:34] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/uQAk5ZSgiw␤Precedi…»

[14:34] <evalable6> Xliff, Full output: https://gist.github.com/910da42c4457728186e479163228804c

[14:34] <Xliff> m: my $a := :{ Int => 1 }; $a.^name.say

[14:34] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «Hash[Mu,Any]␤»

[14:34] <Xliff> m: my $a := :{ Str => 1 }; $a.^name.say

[14:34] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «Hash[Mu,Any]␤»

[14:35] <Xliff> m: my $a := :{ Str => 1 }; $a.gist.say

[14:35] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «{Str => 1}␤»

[14:35] <Xliff> m: my $a := :{ Str => 1 }; $a.gist.say; $a<Str>.say

[14:35] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «{Str => 1}␤1␤»

[14:38] <squashable6> 🍕 Xliff++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529113808

[14:40] *** MilkmanDan left
[14:40] *** krychu left
[14:40] *** Sgeo_ joined
[14:41] <SmokeMachine> m: my &filter = { 42 }; sub a(&f where *.WHAT ~~ Int) {}; a &filter

[14:41] <evalable6> SmokeMachine, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) Constraint type check failed in binding to parameter '&f'; expected anonymou…»

[14:41] <evalable6> SmokeMachine, Full output: https://gist.github.com/0a4caaec9f72e2503fd2b03bfdd95aad

[14:41] <SmokeMachine> m: my &filter = { 42 }; sub a(&f where .() ~~ Int) {}; a &filter

[14:41] <evalable6> SmokeMachine, rakudo-moar 6b2739a8d: OUTPUT: «»

[14:41] <SmokeMachine> m: my &filter = { 42 }; sub a(&f where .() ~~ Int) { say f }; a &filter

[14:41] <evalable6> SmokeMachine, rakudo-moar 6b2739a8d: OUTPUT: «42␤»

[14:41] <SmokeMachine> Xliff: ^^

[14:41] *** MilkmanDan joined
[14:42] <Xliff> m: my &filter = { 'Str' }; sub a(&f where .() ~~ Int) { say f }; a &filter

[14:42] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) Constraint type check failed in binding to parameter '&f'; expected anonymou…»

[14:42] <evalable6> Xliff, Full output: https://gist.github.com/90ebd93a7571aad7cca2900e437d5935

[14:42] *** Sgeo left
[14:43] <Xliff> SmokeMachine: Oooo.... /o\

[14:43] <squashable6> 🍕 FCO++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529114288

[14:44] <squashable6> 🍕 Xliff++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529114352

[14:46] <squashable6> 🍕 FCO++ wrote a comment on “Custom joins”: https://github.com/FCO/Red/issues/345#issuecomment-529114612

[14:47] <SmokeMachine> Xliff: make sense?

[14:48] <SmokeMachine> Xliff: this Routine should not have side effects... so... that's not a big problem...

[14:50] <SmokeMachine> Xliff: You'll need to run https://github.com/FCO/Red/blob/master/lib/Red/ResultSeq.pm6#L173 on it to "extract" the "real filter" from it...

[14:52] <SmokeMachine> Xliff: for example: https://github.com/FCO/Red/blob/master/lib/Red/ResultSeq.pm6#L100

[14:53] *** aborazmeh joined
[14:53] *** aborazmeh left
[14:53] *** aborazmeh joined
[15:00] *** Ven`` left
[15:04] *** zakharyas joined
[15:04] *** aborazmeh left
[15:06] <squashable6> 🍕 FCO++ edited wiki page “How does it work”: https://github.com/FCO/Red/wiki/How-does-it-work

[15:06] <SmokeMachine> Could some one take a look at it (https://github.com/FCO/Red/wiki/How-does-it-work) please? My english isn't good enough for that... :)

[15:08] <SmokeMachine> AlexDaniel: I didn't get the `Atom` on the wiki... what should be that?

[15:17] <squashable6> 🍕 FCO++ created wiki page “ResultSeq”: https://github.com/FCO/Red/wiki/ResultSeq

[15:18] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[15:19] <squashable6> 🍕 FCO++ edited wiki page “Home”: https://github.com/FCO/Red/wiki/Home

[15:19] <squashable6> 🍕 FCO++ created wiki page “Classes”: https://github.com/FCO/Red/wiki/Classes

[15:20] <squashable6> 🍕 FCO++ edited wiki page “Classes”: https://github.com/FCO/Red/wiki/Classes

[15:22] <AlexDaniel> SmokeMachine: it's for those who use RSS/Atom

[15:23] <AlexDaniel> SmokeMachine: like you can configure your rss reader to be notified when somebody updates the wiki

[15:23] <SmokeMachine> AlexDaniel: interesting! thanks!

[15:28] *** Doc_Holliwood left
[15:29] <squashable6> 🍕 FCO++ created wiki page “ResultSeqSeq”: https://github.com/FCO/Red/wiki/ResultSeqSeq

[15:37] <squashable6> 🍕 FCO++ edited wiki page “Classes”: https://github.com/FCO/Red/wiki/Classes

[16:07] <sena_kun> m: sub a(:@foo) { say @foo }; a(foo => [1, 2]); a(foo => 5);

[16:07] <evalable6> sena_kun, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) [1 2]␤Type check failed in binding to parameter '@foo'; expected Positional but got Int (5)␤  in sub a at /tmp/mtUubfdBTu line 1␤  in block <unit> at /tmp/mtUubfdBTu line 1␤␤»

[16:08] <sena_kun> is there anything to make :@foo accept a single value as well without introducing another candidate?

[16:09] *** mowcat joined
[16:09] <MasterDuke> sena_kun: https://docs.perl6.org/type/Signature#Single_argument_rule_slurpy i think

[16:09] <timotimo> slurpies don't work with named arguments tho

[16:10] <sena_kun> they don't seem to. :[

[16:11] <MasterDuke> huh, the docs show a *% one

[16:11] <timotimo> that's not the same thing

[16:11] <sena_kun> *% is named slurpy

[16:11] <timotimo> sena_kun: you'll want to take a :$foo and do your own logic with that i'm afraid, or have $foo(+@foos) or something

[16:11] <timotimo> er, a space in there

[16:12] <timotimo> m: sub a(:$foo (+@foos)) { say @foos.perl }; a(foo => [1, 2]); a(foo => 3)

[16:12] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) [1, 2]␤Cannot unpack or Capture `3`.␤To create a Capture, add parentheses: \…»

[16:12] <evalable6> timotimo, Full output: https://gist.github.com/19572961e8d2533edf20eb8c2362e0fb

[16:12] <timotimo> m: sub a(:$foo [+@foos]) { say @foos.perl }; a(foo => [1, 2]); a(foo => 3)

[16:12] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) [1, 2]␤Cannot unpack or Capture `3`.␤To create a Capture, add parentheses: \…»

[16:12] <evalable6> timotimo, Full output: https://gist.github.com/5d86bbfd75983b40250804d5ea88505b

[16:12] <timotimo> hmm

[16:12] <sena_kun> timotimo, hmm, maybe I need to re-imagine it altogether...

[16:12] <timotimo> m: sub a(:$foo [*@foos]) { say @foos.perl }; a(foo => [1, 2]); a(foo => 3)

[16:12] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) [1, 2]␤Cannot unpack or Capture `3`.␤To create a Capture, add parentheses: \…»

[16:12] <evalable6> timotimo, Full output: https://gist.github.com/9d8e601e59d0bcf04f02ba92f2aec0ad

[16:12] <timotimo> maybe

[16:12] <sena_kun> thanks for replies

[16:12] *** aborazmeh joined
[16:12] *** aborazmeh left
[16:12] *** aborazmeh joined
[16:15] *** daxim left
[16:21] *** daxim joined
[16:24] <squashable6> 🍕 JJ++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529123062

[16:25] *** zakharyas left
[16:27] *** vike left
[16:29] *** vike joined
[16:35] *** chloekek joined
[16:36] <sena_kun> re: squashathon: is there a way to work on github wiki pages using the repo or something? using online editor sounds pretty inefficient

[16:37] *** wildtrees joined
[16:40] *** mowcat left
[16:42] <sena_kun> >But... the Github wiki of a GitHub repo is a git repo in itself (introduced in August 2010).

[16:42] <sena_kun> oh, nice

[16:42] *** MilkmanDan left
[16:43] <SmokeMachine> sena_kun: https://github.com/FCO/Red.wiki.git

[16:43] *** mowcat joined
[16:44] *** mowcat left
[16:44] *** mowcat joined
[16:45] *** MilkmanDan joined
[16:45] <sena_kun> fatal: unable to access 'https://github.com/FCO/Red.wiki.git/': The requested URL returned error: 403

[16:46] <sena_kun> any ideas how can I push without/with rights?

[16:46] <SmokeMachine> sena_kun: really? I've just cloned it...

[16:46] <sena_kun> SmokeMachine, you're the owner of the repo and I'm not, I suspect.

[16:47] <sena_kun> SmokeMachine, ah, sorry! I was able to clone it, but I can't push my commits.

[16:51] <SmokeMachine> sena_kun: shouldn't this make it work? https://usercontent.irccloud-cdn.com/file/gneTvYZV/image.png

[16:52] *** daxim left
[16:52] *** daxim joined
[16:52] <SmokeMachine> sena_kun: but if you want to send me patches... that's ok...

[16:55] *** aborazmeh left
[16:57] <sena_kun> SmokeMachine, well, I am looking at all this right now. My first though is that it'd be very nice to have documentation to be inlined into sources so that tools like Comma could use it. My second though is that there are not a big amount of pages to create, looking at tickets I'd categorize them into something like: tutorials, operations (insert, delete etc), relationships, AST, traits, phasers, operators, classes.

[16:58] <SmokeMachine> sena_kun: that makes sense

[16:58] <sena_kun> SmokeMachine, do you have preferences against documenting things as inline pod?

[16:59] <sena_kun> I am kind of tempted to just jump in and start organizing things, but don't want to be a person who ruins the fun for everyone else working on it

[17:00] <sena_kun> SmokeMachine, I think I'll start with a fork and then, hopefully, present something...

[17:02] <SmokeMachine> sena_kun: I don’t think I have any preference on that...

[17:10] *** iviv joined
[17:15] <squashable6> 🍕 Altai-man++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529127232

[17:16] <sena_kun> squashable6, status

[17:16] <squashable6> sena_kun, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:16] <squashable6> sena_kun, Log and stats: https://gist.github.com/8c5cebbc2e0f34ab550f0e976d6a4cbe

[17:16] *** pmurias left
[17:18] *** leont joined
[17:18] *** pmurias joined
[17:18] <squashable6> 🍕 Altai-man++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529127463

[17:20] <sena_kun> any approvals/disapprovals along with comments are very welcome on ^

[17:21] <squashable6> 🍕 Xliff++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529127626

[17:21] <Xliff> sena_kun: Are you working on the docs script? 

[17:21] *** number6` joined
[17:22] <squashable6> 🍕 Xliff++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529127824

[17:22] <sena_kun> Xliff, I am currently writing up an introduction for all this scheme of things, but writing a script is on my roadmap, I guess.

[17:24] *** grumble left
[17:24] <sena_kun> what databases does Red support? sqlite, pg, mysql(mariadb) is the main one? because I see tickets for pg and sqlite

[17:25] <Xliff> sena_kun: OK. Well, I was planning on doing that once I have enough information for an informal spec.

[17:26] <Xliff> If you don't mind me stealing that from your roadmap, I can.

[17:27] *** mowcat left
[17:27] <sena_kun> Xliff, I have some chunks of code for recursively iterating over symbols in a package, can clean it up a bit and pass it to you to eventually polish it into something that works with WHY, that'd be very helpful

[17:28] <Xliff> sena_kun: OK. That could work. Would those be emitted to another file? If so, how will the script know the output filename?

[17:29] *** grumble joined
[17:29] <sena_kun> Xliff, it'd be categorized with predefined filenames, so they are not an issue. e.g. all collected operators' docs are concatenated into something that looks like a very basic markdown and then is flushed into e.g. `operators.md`

[17:29] <sena_kun> Xliff, what I am worried about much more is what to do with e.g. phasers

[17:30] <sena_kun> do you even create your own phasers!? that's a bit insane even for me. :)

[17:30] <number6`> hello everyone. what is the right way to read from a file one line at a time instead of getting the whole file? also can anyone recommend a good beginner's resource besides perl6intro.com? thank you!

[17:31] <Xliff> number6`: my $fh = "/path/to/file".open; die "Can't open file!" unless $fh; for $fh.lines { ... }; $fh.close

[17:31] <sena_kun> `for '50GB-file.txt'.IO.lines -> ...` <- reads a file line by line lazily

[17:31] <SmokeMachine> sena_kun: currently there are only drivers for SQLite and Postgres

[17:31] <Xliff> ^^ This too

[17:31] <sena_kun> SmokeMachine, noted

[17:31] <Xliff> number6`: Actually, it's "my $fh = "/path/to/file".IO.open; die "Can't open file!" unless $fh; for $fh.lines { ... }; $fh.close;

[17:32] <SmokeMachine> sena_kun: what’s the problem with phasers? I didn’t get it...

[17:33] <sena_kun> SmokeMachine, there is no problem, I was just surprised that you can create your own phasers.

[17:33] <Xliff> Really? WHERE?

[17:34] <number6`> sena_kun: Xliff: thanks!

[17:34] <sena_kun> Xliff, hmm? Where what? Custom phasers? Apparently, Red uses them, so looking at the sources can help. :)

[17:35] <Xliff> Yeah. Am doing.

[17:35] <SmokeMachine> sena_kun: they are phaser-like... but are only methods with special traits...

[17:35] *** krychu joined
[17:36] <SmokeMachine> sena_kun: https://github.com/FCO/Red#phasers

[17:44] *** aborazmeh joined
[17:44] *** aborazmeh left
[17:44] *** aborazmeh joined
[17:49] <sena_kun> m: #|'( cool ) sub a {};

[17:49] <evalable6> sena_kun, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:49] <sena_kun> m: #|'( cool ) sub a {}; say &a.WHY;

[17:49] <evalable6> sena_kun, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:49] <sena_kun> hmm, ok, forget it

[17:49] <timotimo> that's the wrong quote

[17:50] <timotimo> m: #|`( cool ) sub a {}; say &a.WHY;

[17:50] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:50] <timotimo> hm.

[17:50] <Xliff> I don't think that works in single line format.

[17:50] <sena_kun> well, it works when used in a file with just #|, so I don't care for one-liners

[17:50] <timotimo> m: #=`( cool ) sub a {}; say &a.WHY;

[17:50] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:50] <sena_kun> yeah

[17:50] <Xliff> You'd need an NL

[17:50] <timotimo> i thought there's something that does it with parenthesis

[17:50] <timotimo> m: #`|( cool ) sub a {}; say &a.WHY;

[17:50] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:50] <timotimo> m: #`( cool ) sub a {}; say &a.WHY;

[17:50] <evalable6> timotimo, rakudo-moar 6b2739a8d: OUTPUT: «No documentation available for type 'Sub'.␤Perhaps it can be found at https://docs.perl6.org/type/Sub␤»

[17:50] <timotimo> mhm

[17:51] <timotimo> oh, this should probably realize that .WHY is being called on a defined sub

[17:51] <timotimo> rather than the type itself

[17:51] <timotimo> anyway, gtg

[17:51] <Xliff> m: #`|( cool )` sub a {}; &a.WHY.say

[17:51] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:51] <Xliff> m: #`|( cool ); sub a {}; &a.WHY.say

[17:51] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «»

[17:52] <sena_kun> m: sub prefix:<Σ>( *@number-list ) { [+] @number-list }; say Σ (13, 16, 1);

[17:52] <evalable6> sena_kun, rakudo-moar 6b2739a8d: OUTPUT: «30␤»

[17:54] <MasterDuke> sena_kun: was that just to test syntax?

[17:54] <sena_kun> MasterDuke, yeah

[17:54] <MasterDuke> heh

[17:54] <sena_kun> https://github.com/Altai-man/Red/blob/master/docs/introduction.md <- so that's my kind of a proposal for documenting Red

[17:57] *** krychu left
[17:57] <sena_kun> API will be fleshed out using a script, while everything else will be written as is, then everything can be served

[17:57] <Xliff> sena_kun: I take it the links will be manually added, later?

[17:57] <sena_kun> Xliff, yes

[17:57] <Xliff> OK

[17:57] <sena_kun> Xliff, I did not stub pages, because they need to be created anyway and we can track progress easier this way

[17:58] <sena_kun> also for classes, because there are a lot of them and I have no idea what's internal and what's not

[17:58] <sena_kun> though I am not really sure about re-generating everything if just a single thing changes. :S

[17:59] <sena_kun> this seems like a bad decision... OTOH, maybe we will be able to migrate to Documentable, if it'll become really big, and the current approach is likely to take us a long road before that happens

[17:59] <squashable6> 🍕 Xliff++ wrote a comment on “Generate HTML from Pod”: https://github.com/FCO/Red/issues/351#issuecomment-529130989

[17:59] *** hernan604 joined
[18:01] <sena_kun> Xliff, re "Go through each .pm6 file and run it through Markdown conversion" will WHY symbols even stick if you'd use $=pod? I am not sure

[18:02] <sena_kun> my idea was to use each Red module and iterate over MY:: symbols recursively, categorizing them and asking their .WHY content

[18:03] <Xliff> sena_kun: That can be done separately. You haven't given me anything to use in the spec, so I am leaving place holders.

[18:03] <Xliff> I do NOT think the WHY markers will output.

[18:04] <Xliff> I would extract those in a separate pass and output them with a different spec.

[18:05] *** krychu joined
[18:06] <Xliff> sena_kun: If you can packagae up your script, I can grab a sample file, run some tests and determine how things can work from there.

[18:06] * sena_kun is a bit confused and probably needs pseudocode

[18:06] <sena_kun> Xliff, ok, I'm preparing the script right now...

[18:06] <Xliff> OK

[18:07] <SmokeMachine> sena_kun: what a beautiful document!!!

[18:07] <Xliff> SmokeMachine: I am still waiting on you to tell me what you want the docs/ tree to look like.

[18:07] <Xliff> Please give it some thought and let me know.

[18:10] <SmokeMachine> Xliff: do you have any suggestions?

[18:12] <SmokeMachine> Xliff: I’m not very good at documentation (that’s why red’s doc is the way it is)... I have no idea the best way to do that...

[18:14] <sena_kun> Xliff, a basic split for `tutorials` and `API` is enough, then one can form pages intuitively for one things (operators, phasers etc) or based on class name ("Red::Foo::Bar" becomes "red-foo-bar.md"), then it can be cross-linked and served as Cro does that

[18:15] *** Doc_Holliwood joined
[18:16] <Xliff> Well, the easiest way is to go through lib/ and run 'perl6 --doc=Markdown $_" 

[18:17] <Xliff> Taking the path of least resistance, those files would go into docs/ mirroring lib/

[18:17] <Xliff> Everything else would be left to another pass.

[18:18] <Xliff> Actually, that dest dir should be docs/api, so as to avoid any potential conflicts with any subsequent passes.

[18:18] <Xliff> If we can agree on at least that much, then I can start working something out.

[18:19] <tobs> m: #|`( cool ) ␤ sub a {}; ␤ &a.WHY.say

[18:19] <evalable6> tobs, rakudo-moar 6b2739a8d: OUTPUT: «No documentation available for type 'Sub'.␤Perhaps it can be found at https://docs.perl6.org/type/Sub␤»

[18:19] <Xliff> m: #| cool ␤ sub a {}; ␤ &a.WHY.say

[18:19] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «cool␤»

[18:19] <Xliff> \o/

[18:20] <tobs> m: #|« cool » ␤ sub a {}; ␤ &a.WHY.say

[18:20] <evalable6> tobs, rakudo-moar 6b2739a8d: OUTPUT: «cool␤»

[18:20] <sena_kun> Xliff, oh, ability to --doc=Markdown is TIL

[18:20] <Xliff> TIL?

[18:20] <sena_kun> Today I Learnt

[18:20] <Xliff> Oh! Yeah. Forgot. :)

[18:20] <Xliff> sena_kun: It's modulespace.

[18:21] <sena_kun> Xliff, I think then we don't need my crude script, because it'd be re-intenting, and probably a bad one

[18:21] <Xliff> Well, I don't know what it will do with the before and after docs

[18:21] <Xliff> That's why I wanted to experiment with it.

[18:21] <sena_kun> yes, that was the question I was going to ask. :S

[18:21] <sena_kun> let me check...

[18:21] *** AlexDaniel left
[18:22] *** AlexDaniel joined
[18:22] *** AlexDaniel left
[18:22] *** AlexDaniel joined
[18:22] <sena_kun> Xliff, it handles them

[18:23] <sena_kun> Xliff, then a much better option is to continue in this direction. if you want to write a script that'll iterate over files in `lib` and output stuff into docs/api, that'd be awesome

[18:24] <sena_kun> and yes, then a tree-like structure is more natural

[18:24] <Xliff> kk

[18:24] <sena_kun> I'll try to document some things right now...

[18:25] <SmokeMachine> Are you guys suggesting stopping using the wiki and use gh-pages or generating the wiki by the the pod

[18:25] <SmokeMachine> ?

[18:25] <Xliff> No

[18:25] <Xliff> This supplements the wiki

[18:26] <Xliff> I've updated my last comment on #351

[18:26] <Xliff> index page will be API.md

[18:29] <Xliff> However, I will be taking a break from Linux, soon... need to play some Control. :q

[18:31] <sena_kun> Xliff, https://github.com/Altai-man/Red/commit/c9316452cd96fc16af439f43002be9a9e4dc67b2 <- did this, as we won't enforce an outer structure to how code is structured

[18:32] *** Black_Ribbon joined
[18:40] <squashable6> 🍕 Altai-man++ opened pull request “Add introduction.md and document Red::Utils”: https://github.com/FCO/Red/pull/354

[18:42] *** Xliff left
[18:43] *** aborazmeh left
[18:43] *** number6` left
[18:44] <sena_kun> SmokeMachine, how do connections works? I am now writing out `is temp` which corresponds to TEMPORARY tables, they only exist for "current session"... but what is "current session"? when it starts and when it ends?

[18:48] *** krychu left
[18:55] <SmokeMachine> sena_kun: it uses the driver’s connection...

[18:56] <SmokeMachine> sena_kun: that usually is only the DBIish’s connection or DB::Pg’s connection...

[18:56] <sena_kun> SmokeMachine, `is !nullable` just works, right?

[18:57] <squashable6> 🍕 FCO++ merged pull request “Add introduction.md and document Red::Utils”: https://github.com/FCO/Red/pull/354

[18:57] <sena_kun> *does `is !nullable` just work`

[18:57] <SmokeMachine> sena_kun: that should...

[18:58] <sena_kun> ok

[18:58] <SmokeMachine> sena_kun: but are you talking about the column one of the model’s one?

[18:59] <sena_kun> SmokeMachine, I am now writing out what `multi trait_mod:<is>(Mu:U $model, Bool :$nullable!) {` does, so the model one

[19:00] <sena_kun> as I understood, the model one sets a default for every column, while the column one, well, sets it for the column itself

[19:00] <SmokeMachine> sena_kun: oh! is !nullable?! I’m not sure, sorry... but that’s the default...

[19:01] <SmokeMachine> sena_kun: yes, that’s it

[19:03] <sena_kun> SmokeMachine, `is id` == PRIMARY KEY, right?

[19:06] <SmokeMachine> Yes

[19:07] *** popov_mp left
[19:07] <SmokeMachine> And `is serial` == primary key + auto increment

[19:07] <sena_kun> SmokeMachine, can you explain a bit what `is rs-class` does?

[19:08] <sena_kun> I udnerstood that it is related to ResultSeq, but that's all.

[19:13] <SmokeMachine> You can use it to tell Red what class to use as ResultSeq...

[19:13] <SmokeMachine> Do you can extend ResultSeq with new methods and use it for your model...

[19:14] <SmokeMachine> Make sense?

[19:14] *** Cabanossi left
[19:14] <sena_kun> SmokeMachine, a bit, need to investigate more, thanks

[19:15] *** Cabanossi joined
[19:17] *** __jrjsmrtn__ joined
[19:17] *** __jrjsmrtn__ left
[19:17] *** __jrjsmrtn__ joined
[19:18] *** _jrjsmrtn left
[19:21] <squashable6> 🍕 Altai-man++ opened pull request “Document some traits”: https://github.com/FCO/Red/pull/355

[19:27] <sena_kun> I am going to sleep already, a lot more time is necessary to write something more involved than those tiny bits

[19:31] *** pmurias left
[19:31] <timotimo> rest well sena_kun 

[19:32] *** pmurias joined
[19:39] <sena_kun> timotimo, good night. :)

[19:40] <squashable6> 🍕 FCO++ merged pull request “Document some traits”: https://github.com/FCO/Red/pull/355

[19:41] <SmokeMachine> sena_kun: Thank you very much!

[20:00] *** mowcat joined
[20:00] *** mowcat left
[20:01] <squashable6> 🍕 MasterDuke17++ opened pull request “Just some typo fixes”: https://github.com/FCO/Red/pull/356

[20:01] <squashable6> 🍕🍕🍕  First contribution by MasterDuke17++! ♥

[20:08] <squashable6> 🍕 MasterDuke17++ edited wiki page “How does it work”: https://github.com/FCO/Red/wiki/How-does-it-work

[20:09] <squashable6> 🍕 MasterDuke17++ wrote a comment on “Let it clear that Red wi…”: https://github.com/FCO/Red/issues/339#issuecomment-529143209

[20:13] *** sena_kun left
[20:13] *** krychu joined
[20:17] *** mowcat joined
[20:17] *** mowcat left
[20:37] *** krychu left
[20:41] <squashable6> 🍕 FCO++ merged pull request “Just some typo fixes”: https://github.com/FCO/Red/pull/356

[20:42] <squashable6> 🍕 FCO++ wrote a comment on “Let it clear that Red wi…”: https://github.com/FCO/Red/issues/339#issuecomment-529145481

[20:42] <squashable6> 🍕 FCO++ closed issue “Let it clear that Red wi…”: https://github.com/FCO/Red/issues/339

[20:43] *** krychu joined
[20:43] <SmokeMachine> MasterDuke: thanks!

[20:48] *** dolmen joined
[20:53] *** domidumont left
[21:01] <squashable6> 🍕 MasterDuke17++ edited wiki page “CD sample”: https://github.com/FCO/Red/wiki/CD-sample

[21:02] <squashable6> 🍕 MasterDuke17++ edited wiki page “ResultSeq”: https://github.com/FCO/Red/wiki/ResultSeq

[21:02] <squashable6> 🍕 MasterDuke17++ edited wiki page “ResultSeqSeq”: https://github.com/FCO/Red/wiki/ResultSeqSeq

[21:07] <squashable6> 🍕 MasterDuke17++ edited wiki page “How to relationship”: https://github.com/FCO/Red/wiki/How-to-relationship

[21:07] *** Sgeo__ joined
[21:08] <squashable6> 🍕 MasterDuke17++ edited wiki page “How to create a new SQL command”: https://github.com/FCO/Red/wiki/How-to-create-a-new-SQL-command

[21:08] <squashable6> 🍕 MasterDuke17++ edited wiki page “map grep”: https://github.com/FCO/Red/wiki/map-grep

[21:10] *** Sgeo_ left
[21:11] <SmokeMachine> Thanks!

[21:11] <squashable6> 🍕 MasterDuke17++ edited wiki page “Traits”: https://github.com/FCO/Red/wiki/Traits

[21:12] <MasterDuke> SmokeMachine: np. wish i'd had time to make more substantial contributions

[21:22] *** Kaiepi left
[21:47] <SmokeMachine> :)

[21:47] <SmokeMachine> it seems that `is rs-class` is broken... I'm trying to fix it...

[21:52] *** chloekek left
[21:54] *** wamba left
[22:11] *** adu joined
[22:13] *** |oLa| joined
[22:24] *** dolmen left
[22:39] *** krychu left
[22:58] *** cpan-p6 left
[22:58] *** cpan-p6 joined
[22:58] *** cpan-p6 left
[22:58] *** cpan-p6 joined
[22:59] *** Xliff joined
[22:59] <Xliff> \o

[23:02] <SmokeMachine> Xliff: hi there!

[23:06] <Xliff> SmokeMachine: Hey there!

[23:07] <Xliff> I beat the next boss in Control. :)

[23:07] <Xliff> Working on script.

[23:11] <SmokeMachine> :)

[23:13] *** Doc_Holliwood left
[23:16] *** |oLa| left
[23:19] *** Kaiepi joined
[23:21] *** rindolf left
[23:21] *** mowcat joined
[23:21] *** mowcat left
[23:29] <squashable6> 🍕 Xliff++ opened issue “Error occurred in Red::AST::DropTable”: https://github.com/FCO/Red/issues/357

[23:30] <squashable6> 🍕 Xliff++ edited issue “Error occurred in Red::Driver::CommonSQL”: https://github.com/FCO/Red/issues/357

[23:36] *** pmurias left
[23:37] <Xliff> m: my $index = "API Pages\n"; $index .= '=' x $index.chars.chomp; $index.say;

[23:37] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/kLkwjGeZ_F␤Quoted …»

[23:37] <evalable6> Xliff, Full output: https://gist.github.com/bc9e3fbece115a285c7d561d3f7bd924

[23:38] <Xliff> m: my $index = "API Pages\n"; $index ~= '=' x $index.chars.chomp; $index.say;

[23:38] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «API Pages␤==========␤»

[23:41] <Xliff> Is there a safe way to get the path separator without directly going into something like IO::Spec::Unix?

[23:47] <timotimo> you'd usually want to get the currently active spec from $*SPEC

[23:56] <Xliff> Ah. That may be what I need.

[23:57] <Xliff> timotimo: Does IO::Path provide a way to split up the dirs into individual bits?

[23:57] <Xliff> I thought that was parts, but it isn't.

[23:57] <Xliff> m: "/home/me/this/sucks/text.txt".IO.parts.say

[23:57] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «Map.new((basename => text.txt, dirname => /home/me/this/sucks, volume => ))␤»

[23:58] <Xliff> m: "this/sucks/text.txt".IO.parts.say

[23:58] <evalable6> Xliff, rakudo-moar 6b2739a8d: OUTPUT: «Map.new((basename => text.txt, dirname => this/sucks, volume => ))␤»

[23:59] <squashable6> 🍕 FCO++ wrote a comment on “Error occurred in Red::Driver::CommonSQL”: https://github.com/FCO/Red/issues/357#issuecomment-529156201

