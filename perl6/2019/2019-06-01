[00:00] *** Manifest0 left
[00:07] *** Manifest0 joined
[00:16] *** Manifest0 left
[00:21] *** Manifest0 joined
[00:22] *** netrino__ left
[00:25] *** MasterDuke joined
[00:25] *** MasterDuke left
[00:25] *** MasterDuke joined
[00:27] *** netrino__ joined
[00:27] *** Manifest0 left
[00:32] *** Manifest0 joined
[00:33] <squashable6> 🍕 vrurg++ opened pull request “Fix incorrect handling of unknown 6.c modifiers”: https://github.com/rakudo/rakudo/pull/2941

[00:41] *** Manifest0 left
[00:46] *** Manifest0 joined
[00:50] *** Manifest0 left
[00:55] *** Manifest0 joined
[00:56] <squashable6> 🍕 vrurg++ merged pull request “Fix incorrect handling of unknown 6.c modifiers”: https://github.com/rakudo/rakudo/pull/2941

[01:00] *** netrino__ left
[01:03] <squashable6> 🍕 vrurg++ wrote a comment on “Rakudo no longer builds properly on OpenBSD”: https://github.com/rakudo/rakudo/issues/2904#issuecomment-497899712

[01:06] *** netrino__ joined
[01:08] *** khisanth_ left
[01:20] *** Manifest0 left
[01:21] *** khisanth_ joined
[01:26] *** Manifest0 joined
[01:30] *** Manifest0 left
[01:37] *** Manifest0 joined
[01:39] *** netrino__ left
[01:44] *** molaf left
[01:45] *** netrino__ joined
[01:55] *** Manifest0 left
[01:56] *** molaf joined
[01:57] *** bleep_ joined
[01:59] *** bleep_ left
[02:00] *** Manifest0 joined
[02:01] *** cjkinni left
[02:01] *** cjkinni joined
[02:02] *** AndroidKitKat left
[02:04] *** AndroidKitKat joined
[02:08] <guifa> Decided to start doing some blogging on random stuff I find.  Here’s my first one  — would appreciate feedback :-) 

[02:08] <guifa> https://tenesianu.blogspot.com/2019/05/perl-6s-given-switch-on-steroids.html

[02:13] *** Manifest0 left
[02:17] <vrurg> guifa++

[02:18] <MasterDuke> guifa: "tertiary operators" is usually "ternary operators". "I don’t there’s much" looks like it's missing a "think". "(one of these powerful things of given)" should be "... the powerful ...". "of some of some" has duplicated words

[02:18] *** netrino__ left
[02:18] <MasterDuke> but very nice article, guifa++

[02:19] <guifa> MasterDuke: d’oh.  Fixing now 

[02:20] *** Manifest0 joined
[02:24] *** Manifest0 left
[02:24] *** netrino__ joined
[02:29] *** Manifest0 joined
[02:34] *** Manifest0 left
[02:39] *** Manifest0 joined
[02:44] *** Manifest0 left
[02:46] *** hythm joined
[02:49] *** Manifest0 joined
[02:57] *** netrino__ left
[02:59] *** Manifest0 left
[03:03] *** netrino__ joined
[03:04] *** Manifest0 joined
[03:08] *** lgandras joined
[03:15] *** Manifest0 left
[03:21] *** Manifest0 joined
[03:36] *** netrino__ left
[03:36] *** Manifest0 left
[03:42] *** netrino__ joined
[03:44] *** Manifest0 joined
[03:53] *** lgandras left
[04:02] *** Kaypie left
[04:02] *** hythm left
[04:02] *** Kaypie joined
[04:03] *** hythm joined
[04:05] *** kurahaupo is now known as thecrowd

[04:06] *** thecrowd is now known as kurahaupo

[04:12] *** Manifest0 left
[04:14] *** kurahaupo left
[04:15] *** kurahaupo joined
[04:16] *** netrino__ left
[04:19] *** Manifest0 joined
[04:21] *** netrino__ joined
[04:22] *** kurahaupo1 joined
[04:29] *** Manifest0 left
[04:29] *** timeless left
[04:30] *** Spot___ left
[04:30] *** pirateFinn left
[04:30] *** caasih left
[04:34] *** Manifest0 joined
[04:35] *** chansen_ left
[04:38] *** vrurg left
[04:39] *** chansen_ joined
[04:44] *** chansen_ left
[04:49] *** Manifest0 left
[04:50] *** pirateFinn joined
[04:52] *** chansen_ joined
[04:52] *** timeless joined
[04:53] *** caasih joined
[04:54] *** netrino__ left
[04:54] *** Spot___ joined
[04:56] *** Manifest0 joined
[05:00] *** netrino__ joined
[05:09] *** Manifest0 left
[05:13] *** lgandras joined
[05:15] *** Manifest0 joined
[05:19] *** Manifest0 left
[05:25] *** Manifest0 joined
[05:33] *** netrino__ left
[05:34] *** Manifest0 left
[05:35] *** squashable6 left
[05:39] *** squashable6 joined
[05:39] *** ChanServ sets mode: +v squashable6

[05:39] *** netrino__ joined
[05:43] *** Manifest0 joined
[05:44] *** veesh left
[05:45] *** veesh joined
[05:46] *** holyghost left
[05:59] *** lgandras left
[06:01] *** nadim left
[06:01] *** nadim joined
[06:05] *** Manifest0 left
[06:06] *** hythm left
[06:10] *** andrzejku joined
[06:11] *** Manifest0 joined
[06:12] *** sauvin joined
[06:12] *** netrino__ left
[06:18] *** veesh left
[06:18] *** netrino__ joined
[06:20] *** lgandras joined
[06:21] *** jmerelo joined
[06:22] *** veesh joined
[06:24] <jmerelo> squashable6: status

[06:24] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈7 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:24] <squashable6> jmerelo, Log and stats: https://gist.github.com/327ef283fdac9a5c8f90c02e2e1d0a21

[06:26] *** kaare_ left
[06:26] <andrzejku> !seen loren

[06:26] <andrzejku> .seen loren

[06:26] <yoleaux> I saw loren 8 Jul 2016 13:51Z in #perl6: <loren> e, ^_^ .. haha don't mind

[06:26] *** veesh left
[06:26] <andrzejku> .seen araraloren

[06:26] <yoleaux> I saw araraloren 3 May 2019 17:59Z in #perl6: <araraloren> I am not sure

[06:26] <andrzejku> :(

[06:27] *** veesh joined
[06:32] *** Manifest0 left
[06:33] *** molaf left
[06:37] *** Manifest0 joined
[06:38] *** veesh left
[06:42] <lizmat> weekly: https://tenesianu.blogspot.com/2019/05/perl-6s-given-switch-on-steroids.html

[06:42] <notable6> lizmat, Noted!

[06:42] *** veesh joined
[06:44] *** Manifest0 left
[06:50] *** Manifest0 joined
[06:51] *** netrino__ left
[06:56] *** kaare_ joined
[06:56] *** Manifest0 left
[06:57] *** netrino__ joined
[07:01] *** Manifest0 joined
[07:04] <andrzejku> ya the language looks really hakish

[07:11] *** Manifest0 left
[07:16] *** rindolf joined
[07:16] *** Manifest0 joined
[07:24] *** Manifest0 left
[07:27] *** adu left
[07:29] *** Manifest0 joined
[07:32] *** molaf joined
[07:33] <squashable6> 🍕 patzim++ wrote a comment on “Move the core comp unit repo to a separate folder”: https://github.com/rakudo/rakudo/pull/2940#issuecomment-497921798

[07:36] *** andrzejku left
[07:37] *** netrino joined
[07:38] *** netrino__ left
[07:43] *** MasterDuke left
[07:44] *** Manifest0 left
[07:44] *** andrzejku joined
[07:49] *** Manifest0 joined
[07:49] *** Sgeo__ joined
[07:51] *** ijneb left
[07:53] *** Sgeo_ left
[07:59] *** Manifest0 left
[07:59] *** kaare_ left
[08:03] *** Manifest0 joined
[08:12] *** Manifest0 left
[08:18] *** Manifest0 joined
[08:18] *** Sgeo_ joined
[08:22] *** Sgeo__ left
[08:28] *** andrzejku left
[08:28] *** Manifest0 left
[08:30] *** andrzejku joined
[08:32] *** Manifest0 joined
[08:37] *** Manifest0 left
[08:38] *** veesh left
[08:42] *** Manifest0 joined
[08:43] *** veesh joined
[08:46] *** [Sno] left
[08:46] *** patrickb joined
[08:47] *** ravenousmoose joined
[08:47] *** Sgeo__ joined
[08:48] *** veesh_ joined
[08:48] *** veesh left
[08:48] *** veesh_ is now known as veesh

[08:50] *** Sgeo_ left
[08:57] *** Manifest0 left
[08:59] *** veesh left
[09:02] *** Manifest0 joined
[09:06] <Geth> ¦ doc: bbe06beec5 | (JJ Merelo)++ | doc/Language/grammars.pod6

[09:06] <Geth> ¦ doc: Rearranging for #1729

[09:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bbe06beec5

[09:06] <synopsebot> Link: https://doc.perl6.org/language/grammars

[09:06] <squashable6> 🍕 JJ++ wrote a comment on “Regex bug on custom <ws>”: https://github.com/rakudo/rakudo/issues/1222#issuecomment-497927558

[09:12] *** [Sno] joined
[09:17] *** andrzejku left
[09:17] *** Manifest0 left
[09:22] *** Manifest0 joined
[09:24] *** sena_kun joined
[09:27] *** [Sno] left
[09:30] *** jmerelo left
[09:35] *** Manifest0 left
[09:37] *** veesh joined
[09:40] *** Manifest0 joined
[09:41] *** veesh left
[09:42] *** ravenousmoose left
[09:47] *** Manifest0 left
[09:48] *** lgandras left
[09:50] *** ravenousmoose joined
[09:52] *** Manifest0 joined
[09:53] *** kurahaupo left
[09:53] *** veesh joined
[09:53] *** kurahaupo joined
[09:56] *** Sgeo_ joined
[09:59] *** Sgeo__ left
[10:02] *** Manifest0 left
[10:07] *** Manifest0 joined
[10:09] *** andrzejku joined
[10:12] *** aborazmeh joined
[10:12] *** aborazmeh left
[10:12] *** aborazmeh joined
[10:13] *** lgandras joined
[10:18] *** Sgeo__ joined
[10:21] *** Sgeo_ left
[10:26] *** Manifest0 left
[10:29] <squashable6> 🍕 patzim++ synchronize pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939

[10:30] *** patrickb left
[10:30] *** robertle left
[10:31] *** Manifest0 joined
[10:36] *** Manifest0 left
[10:41] <squashable6> 🍕🍕🍕  First contribution by lizmat++! ♥

[10:42] *** pmurias joined
[10:42] *** Manifest0 joined
[10:46] *** andrzejku left
[10:47] *** Manifest0 left
[10:47] <HarmtH> I am working on solving my issue https://github.com/rakudo/rakudo/issues/2929

[10:47] <HarmtH> And I just figured out the root cause is this bug:

[10:47] <HarmtH> m: class foo { multi method isdefined (Any:D: --> True) {}; multi method isdefined (Any:U: --> False) {}; method defined (--> False) {} }; say "defined foo.new: " ~ defined foo.new; say "foo.new.isdefined: " ~ foo.new.isdefined

[10:47] <camelia> rakudo-moar a643b8be1: OUTPUT: «defined foo.new: False␤foo.new.isdefined: True␤»

[10:49] <HarmtH> Can anyone point me to the code where Class:U: and Class:D: are calculated?

[10:49] <HarmtH> Have no idea where to look

[10:51] *** Manifest0 joined
[10:52] *** patrickb joined
[10:54] *** lizmat left
[10:55] <HarmtH> (I would expect foo.new.isdefined to return False, i.e. that Any:U: is entered)

[10:55] <tobs> HarmtH: sorry for not answering your question, but first: that behaviour seems right for me

[10:55] <tobs> HarmtH: foo.new is an instance of the class, so it's defined I'd think

[10:56] <tobs> m: class foo { multi method isdefined (Any:D: --> True) {}; multi method isdefined (Any:U: --> False) {}; }; say foo.isdefined; say foo.new.isdefined

[10:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «False␤True␤»

[10:56] <tobs> the type object is :U in that sense, an instance is :D

[10:57] <HarmtH> It's not very consistent

[11:00] *** andrzejku joined
[11:00] *** [Sno] joined
[11:02] *** lizmat joined
[11:06] *** veesh left
[11:07] *** Manifest0 left
[11:08] *** veesh joined
[11:12] *** Manifest0 joined
[11:13] *** veesh left
[11:18] <HarmtH> tobs: I see now, :D is for DEFINITE and not defined :-(

[11:20] <tobs> HarmtH: and what I found out is that a call to DEFINITE compiles down to a specific NQP instruction, p6definite, so that's where you find your answer.

[11:20] <HarmtH> tobs: Thanks :-)

[11:20] <HarmtH> But I guess 'fixing' it would introduce a whole lot of other bugs

[11:20] *** Manifest0 left
[11:22] <HarmtH> errors

[11:23] <HarmtH> Why I'm intesting in it is because @a[-1] returns a Failure, and a Failure doesn't hit     multi method EXISTS-POS(Any:U: Any:D $ --> False) { }     in Any.pm6

[11:24] <HarmtH> So that @a[-1][0] returns True

[11:26] *** Manifest0 joined
[11:27] *** aborazmeh left
[11:34] *** Manifest0 left
[11:39] *** Manifest0 joined
[11:44] *** Manifest0 left
[11:50] *** Manifest0 joined
[11:53] *** ufobat_ left
[11:58] *** Manifest0 left
[12:03] *** Manifest0 joined
[12:04] *** john_parr left
[12:10] *** Manifest0 left
[12:15] *** Manifest0 joined
[12:26] *** Manifest0 left
[12:27] *** lgandras left
[12:31] *** Manifest0 joined
[12:34] *** pecastro joined
[12:36] *** domidumont joined
[12:38] <squashable6> 🍕 lizmat++ opened pull request “Give SetHash a set/unset method”: https://github.com/rakudo/rakudo/pull/2942

[12:38] <cpan-p6> New module released to CPAN! Result (0.2.4) by 03SAMGWISE

[12:45] <lizmat> HarmtH: maybe adding a 'multi method EXISTS-POS(Any:U: Failure:D $ --> False) { }' candidate would be a solution ?

[12:46] *** kurahaupo1 left
[12:51] *** pmurias left
[12:52] <squashable6> 🍕 lizmat++ wrote a comment on “--profile doesn't show any callees / allocations”: https://github.com/rakudo/rakudo/issues/2934#issuecomment-497942825

[12:52] <squashable6> 🍕 lizmat++ closed issue “--profile doesn't show any callees / allocations”: https://github.com/rakudo/rakudo/issues/2934

[12:53] <lizmat> HarmtH: ping

[12:59] <squashable6> 🍕 patzim++ synchronize pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939

[13:00] *** domidumont left
[13:02] *** john_parr joined
[13:03] *** andrzejku left
[13:13] *** Kaypie left
[13:13] *** Kaypie joined
[13:14] <xinming> When I use flatten array as arg, I got error which is too many args. I forgot the concrete error it produces. But a bit curious, how many numbers of arg is limited?

[13:20] <lizmat> xinming: I think the only limit is the number of elements in a list

[13:20] *** molaf left
[13:22] *** veesh joined
[13:25] *** nadim left
[13:26] *** veesh left
[13:29] <squashable6> 🍕 rehsack++ opened issue “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943

[13:29] <squashable6> 🍕🍕🍕  First contribution by rehsack++! ♥

[13:30] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Helper function on SetHashes https://github.com/perl6/problem-solving/issues/35

[13:33] *** antoniogamiz joined
[13:35] <squashable6> 🍕 jnthn++ wrote a comment on “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497945752

[13:35] <squashable6> 🍕🍕🍕  First contribution by jnthn++! ♥

[13:35] <squashable6> 🍕 jnthn++ closed issue “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943

[13:35] <squashable6> 🍕 patzim++ submitted a review on pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244587041

[13:35] <squashable6> 🍕 patzim++ wrote a comment on a review for “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#discussion_r289604989

[13:36] <[Sno]> jnthn: please don't close - the example was badly copied

[13:36] <squashable6> 🍕 patzim++ submitted a review on pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244587081

[13:36] <squashable6> 🍕 patzim++ wrote a comment on a review for “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#discussion_r289605027

[13:38] <squashable6> 🍕 rehsack++ wrote a comment on “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497945965

[13:39] <squashable6> 🍕 patzim++ synchronize pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939

[13:39] <squashable6> 🍕 patzim++ submitted a review on pull request “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244587162

[13:39] <squashable6> 🍕 patzim++ wrote a comment on a review for “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#discussion_r289605089

[13:46] <antoniogamiz> can you use "is export" for class declaration in modules?

[13:47] <squashable6> 🍕 lizmat++ wrote a comment on “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497946486

[13:47] <squashable6> 🍕 lizmat++ reopened issue “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943

[13:47] <timotimo> yes you can

[13:48] <antoniogamiz> ty

[13:49] <squashable6> 🍕 patzim++ wrote a comment on “ Fix non-reloc install &…”: https://github.com/rakudo/rakudo/pull/2939#issuecomment-497946674

[13:57] *** kurahaupo_ joined
[14:00] *** kurahaupo left
[14:01] <antoniogamiz> where can I learn a little about grammars?

[14:01] <antoniogamiz> or where I could the meaning of things like <.alpha>?

[14:01] <sena_kun> antoniogamiz, doc pages?

[14:02] <timotimo> m: say Grammar.^methods(:all)>>.name

[14:02] <camelia> rakudo-moar a643b8be1: OUTPUT: «(parse subparse parsefile BUILDALL snapshot_braid punct !alt prematch postmatch !braid !cursor_start_cur !reduce_with_match switch_to_slang dump INDRULE !LITERAL !clone_match_at !highexpect xdigit make clone from chars caps blank ACCEPTS CURSOR_OVERLA…»

[14:02] <timotimo> not all of them are "interesting" for your purpose

[14:02] <sena_kun> antoniogamiz, https://docs.perl6.org/language/regexes#Predefined_character_classes <-

[14:03] <antoniogamiz> uoh

[14:03] <sena_kun> grammars are made of regexes

[14:03] <antoniogamiz> aahh I was searching with the dot

[14:03] <sena_kun> so it is better to read about regexes at first, and then go to grammars

[14:03] <sena_kun> since grammars are, well, I won't repeat myself. :)

[14:03] <antoniogamiz> ok, ty sena :)

[14:04] <timotimo> the . means "don't capture this"

[14:04] <timotimo> other than that <alpha> and <.alpha> are the same

[14:05] <antoniogamiz> oh cool

[14:07] <moritz> I think the . also means "always call as a method"

[14:07] <timotimo> there's also <my-own-name=alpha> and <my-own-name=.alpha>

[14:07] <moritz> m: my &a := regex { a+ }; say 'aaa' ~~ /<a>/

[14:07] <camelia> rakudo-moar a643b8be1: OUTPUT: «No such method 'a' for invocant of type 'Match'. Did you mean 'at'?␤  in block <unit> at <tmp> line 1␤␤»

[14:07] <moritz> m: my &a := regex { a+ }; say 'aaa' ~~ /<&a>/

[14:07] <camelia> rakudo-moar a643b8be1: OUTPUT: «｢aaa｣␤»

[14:07] <timotimo> i think it's more that without & it won't look for lexical regexen

[14:08] <moritz> ok, it seems <a> also alwas calls as a method, so never mind me

[14:08] <timotimo> m: my &a := regex { a+ }; say 'aaa' ~~ /<.&a>/

[14:08] <camelia> rakudo-moar a643b8be1: OUTPUT: «｢aaa｣␤»

[14:08] <timotimo> you can combine "look for lexical" with "don't capture" this way around

[14:09] <moritz> <&a> already doesn't capture

[14:09] <moritz> m: my &a := regex { a+ }; say 'aaa' ~~ /<a=&a>/

[14:09] <camelia> rakudo-moar a643b8be1: OUTPUT: «｢aaa｣␤ a => ｢aaa｣␤»

[14:10] <moritz> it only captures if the letter after < matches \w

[14:10] *** patrickb left
[14:10] <timotimo> ooh, right

[14:25] <squashable6> 🍕 lizmat++ wrote a comment on “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497949169

[14:26] *** Manifest0 left
[14:30] *** uzl joined
[14:30] <uzl> Hello, #perl6!

[14:30] <uzl> m: my $n = 4; '1'.fmt("%04d").put

[14:30] <camelia> rakudo-moar a643b8be1: OUTPUT: «0001␤»

[14:30] <uzl> m: my $n = 4; '1'.fmt("%0{$n}d").put

[14:30] <camelia> rakudo-moar a643b8be1: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤Your printf-style directives specify 0 arguments, but 1 argume…»

[14:31] <uzl> m: my $n = 4; '1'.fmt("%0{$n.Str}d").put

[14:31] <camelia> rakudo-moar a643b8be1: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤Your printf-style directives specify 0 arguments, but 1 argume…»

[14:31] *** Manifest0 joined
[14:31] <uzl> Is it possible to interpolate inside a printf directive? If so, how do I do it?

[14:32] <uzl> BTW, what's the squashaton about today? 

[14:33] *** [Sno] left
[14:33] *** cpan-p6 left
[14:34] *** vrurg joined
[14:35] *** cpan-p6 joined
[14:35] *** cpan-p6 left
[14:35] *** cpan-p6 joined
[14:35] *** patrickb joined
[14:37] <uzl> m: my $n = 4; '1'.fmt(('%0', $n, 'd').join).put

[14:37] <camelia> rakudo-moar a643b8be1: OUTPUT: «0001␤»

[14:38] <timotimo> sprintf is supposed to have some syntax for that purpose

[14:38] <timotimo> other than that you can literally just use regular string interpolation there

[14:38] <timotimo> since format strings are just strings

[14:40] <dogbert17> m: say sprintf("%0*d", 4, 1)

[14:40] <camelia> rakudo-moar a643b8be1: OUTPUT: «0001␤»

[14:42] <dogbert17> uzl: ^^ is it this you're looking for?

[14:43] <uzl> dogbert17: Oh, great! That does it ;-)!

[14:43] <uzl> Thanks!

[14:44] <lizmat> squashable6: status

[14:44] <squashable6> lizmat, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:44] <squashable6> lizmat, Log and stats: https://gist.github.com/8a46b42c139690f32a5ef0036d8e0b80

[14:44] <uzl> timotimo: Is it the same syntax used by dogbert17's example?

[14:45] <timotimo> i was refering just to regular old "%{$foo}s" which will literally just put $foo in there

[14:46] <timotimo> (important to have the parenthesis, otherwise the s will be interpreted as part of the variable name

[14:48] <uzl> m: my $n = 4; "%04s".sprintf(1).put

[14:48] <camelia> rakudo-moar a643b8be1: OUTPUT: «0001␤»

[14:48] <uzl> m: my $n = 4; "%0{$n}s".sprintf(1).put

[14:48] <camelia> rakudo-moar a643b8be1: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤Your printf-style directives specify 0 arguments, but 1 argume…»

[14:49] <uzl> For some reason it doesn't seem to work in that example. I might be doing something wrong though.

[14:52] <antoniogamiz> this regex  / ^ \s* $ / detects empty lines and lines with one space?

[14:52] <antoniogamiz> am I right?

[14:54] *** Manifest0 left
[14:55] <squashable6> 🍕 ugexe++ wrote a comment on “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497951336

[14:55] *** [Sno] joined
[14:57] <squashable6> 🍕 lizmat++ wrote a comment on “Push doesn't push items as documented”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497951476

[14:59] *** Manifest0 joined
[15:02] <uzl> antoniogamiz: Do you mean a single whitespace?

[15:02] <antoniogamiz> yep, or zero

[15:03] <uzl> So two whitespaces wouldn't match?

[15:03] <uzl> m: "".match: /^^ \s? $$/

[15:03] <camelia> rakudo-moar a643b8be1: ( no output )

[15:04] <antoniogamiz> I think so, beacuse of \s*

[15:04] <uzl> m: put "".match: /^^ \s? $$/

[15:04] <camelia> rakudo-moar a643b8be1: OUTPUT: «␤»

[15:04] <uzl> m: put " ".match: /^^ \s? $$/

[15:04] <camelia> rakudo-moar a643b8be1: OUTPUT: « ␤»

[15:04] <uzl> m: put "  ".match: /^^ \s? $$/

[15:04] <camelia> rakudo-moar a643b8be1: OUTPUT: «Use of Nil in string context␤␤  in block <unit> at <tmp> line 1␤»

[15:04] <antoniogamiz> why do use double ^^ and $$?

[15:04] *** Manifest0 left
[15:05] *** bfisher joined
[15:05] <uzl> antoniogamiz: \s* matches zero or more whitespaces. You might want to use ? for specifically zero or one

[15:06] <timotimo> ^^ and $$ are per-line versions of ^ and $, right?

[15:06] *** Kaypie left
[15:06] <antoniogamiz> aahh my mistake ty uzl

[15:06] <antoniogamiz> uoh today I have a lot of TILs hahaah

[15:06] <uzl> timotimo: the docs say so. start and end of line respectively.

[15:07] <uzl> antoniogamiz: we're all doing it ;-). that's what I love about P6.

[15:08] *** Sgeo_ joined
[15:09] *** Manifest0 joined
[15:09] <antoniogamiz> uzl: totally :)

[15:11] *** Sgeo__ left
[15:16] *** Manifest0 left
[15:19] <antoniogamiz> what's doing this code <type=longname>?

[15:19] <antoniogamiz> an alias of longname regex?

[15:20] *** thundergnat joined
[15:20] <patrickb> .seen sergot

[15:20] <yoleaux> I saw sergot 24 Jan 2019 14:32Z in #perl6: <sergot> oh, Mar and May...

[15:21] *** Manifest0 joined
[15:22] <timotimo> antoniogamiz: yeah, it'll be available under both names then

[15:22] <timotimo> if you put a . after the =, the name on the right won't be present in the match object

[15:22] <timotimo> which is sometimes something you want

[15:23] <antoniogamiz> mmmmmm ok, thank you :)

[15:23] <timotimo> and just for completeness sake there's also the $<bloop>=a+ syntax

[15:23] <timotimo> to give a name to something that's not a "call"

[15:23] <timotimo> AFKBBL

[15:24] <moritz> it's a capture that's not a call :D

[15:25] *** yqt joined
[15:25] *** nadim joined
[15:30] *** squashable6 left
[15:32] *** squashable6 joined
[15:38] *** Manifest0 left
[15:38] *** reach_satori left
[15:39] *** reach_satori joined
[15:40] <thundergnat> m: https://gist.github.com/thundergnat/e14ca4f2486f3a2c0c6764a3f603ab5f

[15:40] <camelia> rakudo-moar a643b8be1: OUTPUT: «|0|␤uno: 0␤uno: 1␤|1|␤uno: 1␤␤|0|␤uno: 0␤uno: 1␤dos: 0␤dos: 1␤|1|␤uno: 1␤dos: 1␤»

[15:41] <thundergnat> Explicit for loop variables shouldn't behave differently from implicit ones?

[15:41] <thundergnat> I suspect that ^^ is buggy behavior.

[15:42] *** Manifest0 joined
[15:47] <lizmat> weekly: https://medium.com/@mdango/fun-with-perl-6-using-roman-numerals-1133bc160239

[15:47] <notable6> lizmat, Noted!

[15:48] *** kurahaupo_ left
[15:50] *** zakharyas joined
[15:50] <squashable6> 🍕 thundergnat++ opened issue “Odd interaction between …”: https://github.com/rakudo/rakudo/issues/2944

[15:50] <squashable6> 🍕🍕🍕  First contribution by thundergnat++! ♥

[15:56] <antoniogamiz> time to come back to university exams, bye! :D

[15:56] *** antoniogamiz left
[15:58] *** Manifest0 left
[16:03] *** Manifest0 joined
[16:09] *** yqt left
[16:14] *** mtg joined
[16:18] *** kurahaupo joined
[16:27] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Removed Syntactic Feature https://github.com/perl6/problem-solving/issues/36

[16:28] *** Manifest0 left
[16:33] *** Manifest0 joined
[16:34] *** adu joined
[16:37] <AlexDaniel> squashable6: status

[16:37] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈21 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:37] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/4103e0efd1c173e81893553799e55118

[16:41] *** squashable6 left
[16:43] *** squashable6 joined
[16:50] *** Some-body_ joined
[16:51] *** DarthGandalf left
[16:51] *** Some-body_ is now known as DarthGandalf

[16:52] *** vrurg left
[16:55] *** domidumont joined
[17:00] *** AlexDaniel left
[17:02] *** gfldex left
[17:02] *** AlexDaniel joined
[17:03] *** gfldex joined
[17:08] *** kylese joined
[17:12] *** uzl left
[17:12] *** yqt joined
[17:16] <squashable6> 🍕 lizmat++ edited issue “Sub push doesn't die on named parameters”: https://github.com/rakudo/rakudo/issues/2943

[17:16] <squashable6> 🍕 lizmat++ closed issue “Sub push doesn't die on named parameters”: https://github.com/rakudo/rakudo/issues/2943

[17:17] *** Manifest0 left
[17:24] *** mtg left
[17:27] *** Manifest0 joined
[17:27] <squashable6> 🍕 lizmat++ wrote a comment on “Sub push doesn't die on named parameters”: https://github.com/rakudo/rakudo/issues/2943#issuecomment-497962986

[17:39] *** pecastro left
[17:41] *** Manifest0 left
[17:46] *** Manifest0 joined
[17:51] *** adu left
[17:51] *** adu joined
[17:54] *** [Sno] left
[17:59] *** Manifest0 left
[18:04] *** Manifest0 joined
[18:07] *** jmerelo joined
[18:08] *** lizmat left
[18:12] *** lizmat joined
[18:15] *** yqt left
[18:21] *** Manifest0 left
[18:22] *** patrickb left
[18:26] *** Manifest0 joined
[18:44] *** Grauwolf left
[18:46] *** Grauwolf joined
[18:46] *** Grauwolf left
[18:47] *** sena_kun left
[18:49] *** veesh joined
[18:49] *** Grauwolf joined
[18:50] *** leont joined
[18:54] *** gfldex left
[18:54] *** ravenousmoose left
[18:55] *** gfldex joined
[19:03] *** ravenousmoose joined
[19:03] *** kaare_ joined
[19:05] *** domidumont left
[19:06] *** Guest23886 left
[19:08] <Geth> ¦ doc: 2cb9441e58 | (JJ Merelo)++ | doc/Language/grammars.pod6

[19:08] <synopsebot> Link: https://doc.perl6.org/language/grammars

[19:08] <Geth> ¦ doc: Deindent

[19:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2cb9441e58

[19:08] <Geth> ¦ doc: e89a63b184 | (JJ Merelo)++ | doc/Language/grammars.pod6

[19:08] <Geth> ¦ doc: Reflow and deindent

[19:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e89a63b184

[19:08] <Geth> ¦ doc: c0e9876265 | (JJ Merelo)++ | doc/Language/grammars.pod6

[19:08] <Geth> ¦ doc: Adds more examples to the definition of ws

[19:08] <Geth> ¦ doc: 

[19:08] <Geth> ¦ doc: Thanks go  @jnthn for his clarification in StackOverflow. Closes #1729

[19:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c0e9876265

[19:10] <tobs> I'm trying to make one of my modules release-ready. One of the warts is that I compile a binary and put it into "resources" as part of Build.pm. But I can't execute it because it's not chmod +x'd when installed and I'm not supposed to change modes of installed resources.

[19:11] <tobs> Is there a canonical path I can put the file into? I don't want to leave garbage behind when the module gets uninstalled.

[19:12] <tobs> (I'm not very keen on having to turn the program into a shared object instead, but it would be doable in this case...)

[19:21] <lizmat> tobs: no idea atm, perhaps also ask on #perl6-dev and/or StackOverflow ?

[19:21] <tobs> oh, my memories are coming back: R#2571

[19:21] <synopsebot> R#2571 [open]: https://github.com/rakudo/rakudo/issues/2571 %?RESOURCES execute bit lost on installation

[19:21] <tobs> squashable6: status

[19:21] <squashable6> tobs, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[19:21] <squashable6> tobs, Log and stats: https://gist.github.com/34be849fc85f1c5567475cb33c94f41f

[19:21] <tobs> :)

[19:22] <tobs> lizmat: will do

[19:23] *** jmerelo left
[19:26] *** Sgeo__ joined
[19:28] *** Manifest0 left
[19:30] *** Sgeo_ left
[19:31] *** uzl joined
[19:34] *** ravenousmoose left
[19:35] *** ravenousmoose joined
[19:35] *** Manifest0 joined
[19:35] *** success joined
[19:36] *** success is now known as Guest80816

[19:36] <HarmtH> lizmat: Yes was think of that as well, thank you. Will try to make a pull request later today

[19:36] <lizmat> ++HarmtH

[19:41] *** Guest80816 left
[19:43] *** Sgeo_ joined
[19:46] *** Sgeo__ left
[19:57] *** pecastro joined
[19:58] *** andrzejku joined
[20:02] *** ravenousmoose left
[20:05] <lizmat> weekly: https://perl6.eu/roman.html

[20:05] <notable6> lizmat, Noted!

[20:12] *** failure joined
[20:12] *** failure is now known as Guest46403

[20:13] *** Manifest0 left
[20:17] *** andrzejku left
[20:20] *** Manifest0 joined
[20:20] *** MasterDuke joined
[20:20] *** MasterDuke left
[20:20] *** MasterDuke joined
[20:22] *** Guest46403 left
[20:24] *** success- joined
[20:32] *** Manifest0 left
[20:34] <squashable6> 🍕 lizmat++ wrote a comment on “Large non-Infinite gists are eager”: https://github.com/rakudo/rakudo/issues/2920#issuecomment-497975640

[20:34] <squashable6> 🍕 lizmat++ closed issue “Large non-Infinite gists are eager”: https://github.com/rakudo/rakudo/issues/2920

[20:34] *** kylese left
[20:34] *** nadim left
[20:34] *** Manifest0 joined
[20:35] <squashable6> 🍕 lizmat++ wrote a comment on “Fix is-lazy propagation bug in List::Reifier”: https://github.com/rakudo/rakudo/pull/2493#issuecomment-497975702

[20:35] <squashable6> 🍕 lizmat++ reopened pull request “Fix is-lazy propagation bug in List::Reifier”: https://github.com/rakudo/rakudo/pull/2493

[20:35] *** nadim joined
[20:39] *** nadim_ joined
[20:40] *** zakharyas left
[20:41] *** nadim left
[20:44] *** success- left
[20:44] *** success joined
[20:45] *** success is now known as Guest6771

[20:52] *** Manifest0 left
[20:57] *** nadim_ left
[20:59] <squashable6> 🍕 ugexe++ wrote a comment on “Move the core comp unit repo to a separate folder”: https://github.com/rakudo/rakudo/pull/2940#issuecomment-497977253

[21:00] *** nadim_ joined
[21:01] *** uzl left
[21:03] *** Manifest0 joined
[21:08] *** Manifest0 left
[21:08] <timotimo> gfldex: i think you can $*IN.lines.Channel.Supply to get a "worker" that receives the messages for you

[21:09] *** squashable6 left
[21:12] <gfldex> timotimo: No such method 'Channel' for invocant of type 'Seq'

[21:14] *** squashable6 joined
[21:14] <timotimo> oh, hum, i must have misremembered

[21:15] <timotimo> it could be .Supply.Channel and then whenever that

[21:15] *** Manifest0 joined
[21:16] *** nadim_ left
[21:17] <gfldex> timotimo: that does run but seams to add a buffer

[21:17] <gfldex> timotimo: also a Channel in IO::Handle may flood RAM

[21:18] *** nadim_ joined
[21:18] <gfldex> timotimo: if you want to tinker yourself: https://gist.github.com/017ea656c81a0d9b71bd8ad13f53fdb4

[21:22] <gfldex> Having a queue in IO::Handle.lines seams to be a good idea as long as the length of that queue aint ∞

[21:23] <timotimo> oh, there's an "allowance" system for backpressure for that exact reason

[21:23] <timotimo> i forgot what it's called

[21:25] <gfldex> there is Concurrent::BoundedChannel in the ecosystem that does quite a bit of extra work to limit the queue length

[21:28] <timotimo> ah, hmm

[21:29] *** [Sno] joined
[21:30] <timotimo> BBL

[21:36] *** gfldex left
[21:38] *** gfldex joined
[21:45] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Large non-Infinite gists are eager”: https://github.com/rakudo/rakudo/issues/2920#issuecomment-497979845

[21:45] <squashable6> 🍕🍕🍕  First contribution by AlexDaniel++! ♥

[21:45] <squashable6> 🍕 AlexDaniel++ reopened issue “Large non-Infinite gists are eager”: https://github.com/rakudo/rakudo/issues/2920

[21:45] <squashable6> 🍕 AlexDaniel++ labeled issue “Large non-Infinite gists are eager” (tests needed): https://github.com/rakudo/rakudo/issues/2920

[21:51] *** squashable6 left
[21:54] *** squashable6 joined
[22:07] *** gfldex left
[22:10] *** vrurg joined
[22:11] *** Manifest0 left
[22:16] *** Manifest0 joined
[22:21] *** Manifest0 left
[22:26] *** Manifest0 joined
[22:31] *** Manifest0 left
[22:37] *** Manifest0 joined
[22:39] *** rindolf left
[22:48] *** Manifest0 left
[22:54] *** Manifest0 joined
[22:54] *** pecastro left
[23:00] *** Manifest0 left
[23:03] *** leont left
[23:03] *** nadim_ left
[23:06] *** Manifest0 joined
[23:10] *** Manifest0 left
[23:15] <squashable6> 🍕 MasterDuke17++ opened issue “Possible slowdown in grep or is-prime or tail”: https://github.com/rakudo/rakudo/issues/2945

[23:15] <squashable6> 🍕🍕🍕  First contribution by MasterDuke17++! ♥

[23:16] *** dolmen joined
[23:16] *** Manifest0 joined
[23:17] <squashable6> 🍕 MasterDuke17++ edited issue “Possible slowdown in is-prime”: https://github.com/rakudo/rakudo/issues/2945

[23:31] *** Manifest0 left
[23:34] <namibj> fg

[23:35] *** HarmtH left
[23:35] *** Manifest0 joined
[23:36] <b2gills> m: react whenever Supply.from-list($*IN.lines,:schedular($*SCHEDULAR)) { .say }

[23:36] <camelia> rakudo-moar a643b8be1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤     »Am Mittelpfeiler.«␤         »Ich lösche die Flamm.«␤ »Ich mit«␤␤         »Ich komme vom Norden her.«␤        »Und ich vom Süden.…»

[23:41] *** HarmtH joined
[23:53] *** Manifest0 left
[23:58] *** Manifest0 joined
