[00:02] *** revdiablo left
[00:02] *** revdiablo joined
[00:02] *** p6bannerbot sets mode: +v revdiablo

[00:05] *** cpage joined
[00:06] *** p6bannerbot sets mode: +v cpage

[00:15] *** Sgeo joined
[00:15] *** Grauwolf joined
[00:15] *** Grauwolf left
[00:15] *** Grauwolf joined
[00:15] *** p6bannerbot sets mode: +v Grauwolf

[00:16] *** p6bannerbot sets mode: +v Sgeo

[00:16] *** p6bannerbot sets mode: +v Grauwolf

[00:19] *** aborazmeh joined
[00:19] *** aborazmeh left
[00:19] *** aborazmeh joined
[00:19] *** p6bannerbot sets mode: +v aborazmeh

[00:19] *** p6bannerbot sets mode: +v aborazmeh

[00:22] *** MasterDuke joined
[00:22] *** p6bannerbot sets mode: +v MasterDuke

[00:22] *** MasterDuke left
[00:22] *** MasterDuke joined
[00:22] *** herbert.freenode.net sets mode: +v MasterDuke

[00:22] *** p6bannerbot sets mode: +v MasterDuke

[00:30] *** mowcat joined
[00:30] *** p6bannerbot sets mode: +v mowcat

[00:54] *** Xliff joined
[00:55] *** p6bannerbot sets mode: +v Xliff

[00:56] *** daotoad joined
[00:57] *** p6bannerbot sets mode: +v daotoad

[00:58] *** hph^ joined
[00:59] *** p6bannerbot sets mode: +v hph^

[01:06] *** sena_kun left
[01:06] <SmokeMachine> m: CX::Next.throw; CONTROL { default { say “ok” } }

[01:06] <camelia> rakudo-moar ca177e583: OUTPUT: «Invocant of method 'throw' must be an object instance of type 'Exception', not a type object of type 'CX::Next'.  Did you forget a '.new'?␤  in block <unit> at <tmp> line 1␤␤»

[01:06] <SmokeMachine> m: CX::Next.new.throw; CONTROL { default { say “ok” } }

[01:06] <camelia> rakudo-moar ca177e583: OUTPUT: «ok␤»

[01:08] *** daotoad left
[01:10] <SmokeMachine> m: class :: is X::Control {}.new.throw; CONTROL { default { say “ok” } }

[01:10] <camelia> rakudo-moar ca177e583: OUTPUT: «ok␤»

[01:12] *** TimToady joined
[01:13] *** p6bannerbot sets mode: +v TimToady

[01:15] *** daotoad joined
[01:15] <SmokeMachine> jnthn: thank you for telling me to use CATCH and CONTROL on my control exceptions! :)

[01:16] *** p6bannerbot sets mode: +v daotoad

[01:17] *** Ven`` left
[01:19] *** lizmat left
[01:25] *** zachk left
[02:03] *** aborazmeh left
[02:24] *** Kaypie is now known as Kaiepi

[02:49] *** molaf left
[02:58] *** i1nfusion left
[02:59] *** i1nfusion joined
[03:00] *** p6bannerbot sets mode: +v i1nfusion

[03:01] *** molaf joined
[03:02] *** p6bannerbot sets mode: +v molaf

[03:03] *** daotoad left
[03:42] <Xliff> timotimo: Able to get data out of a failed grammar, now.

[03:53] *** i1nfusion left
[03:55] *** i1nfusion joined
[03:55] *** p6bannerbot sets mode: +v i1nfusion

[04:02] *** MasterDuke left
[04:22] *** daotoad joined
[04:23] *** p6bannerbot sets mode: +v daotoad

[04:25] *** daotoad left
[04:28] *** Cabanossi left
[04:28] *** Kaiepi left
[04:28] *** Cabanossi joined
[04:28] *** Kaiepi joined
[04:29] *** p6bannerbot sets mode: +v Cabanossi

[04:29] *** p6bannerbot sets mode: +v Kaiepi

[04:46] *** kst joined
[04:47] *** p6bannerbot sets mode: +v kst

[05:18] *** i1nfusion left
[05:44] *** pmurias joined
[05:44] *** p6bannerbot sets mode: +v pmurias

[05:50] *** pmurias left
[05:59] *** Cabanossi left
[06:00] *** Cabanossi joined
[06:01] *** p6bannerbot sets mode: +v Cabanossi

[06:21] *** dncefan left
[07:08] *** dncefan joined
[07:08] *** p6bannerbot sets mode: +v dncefan

[07:14] *** dncefan left
[07:22] *** dncefan joined
[07:22] *** p6bannerbot sets mode: +v dncefan

[07:25] *** hythm_ joined
[07:25] *** p6bannerbot sets mode: +v hythm_

[07:32] <hythm_> p6: enum C ( A => 1, B => 2); multi s(A) {}; say 1 ~~ A; s 1 # Why this doesn't work although 1  ~~ A ?

[07:32] <camelia> rakudo-moar ca177e583: OUTPUT: «True␤Cannot resolve caller s(1); none of these signatures match:␤    (C $ where { ... })␤  in block <unit> at <tmp> line 1␤␤»

[07:58] <hythm_> p6: multi i(Int) {}; i(1)

[07:58] <camelia> rakudo-moar ca177e583: ( no output )

[08:15] *** rindolf joined
[08:16] *** p6bannerbot sets mode: +v rindolf

[08:18] *** lizmat joined
[08:18] *** p6bannerbot sets mode: +v lizmat

[08:24] *** jmerelo joined
[08:25] *** p6bannerbot sets mode: +v jmerelo

[08:35] *** domidumont joined
[08:36] *** p6bannerbot sets mode: +v domidumont

[08:39] *** dncefan left
[08:40] *** MilkmanDan left
[08:40] *** MilkmanDan joined
[08:40] *** p6bannerbot sets mode: +v MilkmanDan

[08:47] *** robertle left
[08:49] *** dncefan joined
[08:49] *** p6bannerbot sets mode: +v dncefan

[08:51] *** molaf left
[09:01] *** hythm_ left
[09:14] *** kurahaupo_ left
[09:19] *** robertle joined
[09:20] *** p6bannerbot sets mode: +v robertle

[10:15] *** rindolf left
[10:21] *** ChoHag joined
[10:22] *** p6bannerbot sets mode: +v ChoHag

[10:29] *** rindolf joined
[10:30] *** p6bannerbot sets mode: +v rindolf

[10:47] *** aborazmeh joined
[10:47] *** aborazmeh left
[10:47] *** aborazmeh joined
[10:47] *** p6bannerbot sets mode: +v aborazmeh

[10:48] *** p6bannerbot sets mode: +v aborazmeh

[10:52] *** MilkmanDan left
[10:53] *** MilkmanDan joined
[10:53] *** p6bannerbot sets mode: +v MilkmanDan

[11:02] <Geth> ¦ doc: 6e390bd27d | (JJ Merelo)++ | 2 files

[11:02] <Geth> ¦ doc: Fixes description of archname

[11:02] <Geth> ¦ doc: 

[11:02] <Geth> ¦ doc: Thanks for the report. Closes #2557

[11:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6e390bd27d

[11:11] <pony> m: my $ls = (1 ... *).map({ sleep 1; $_ }); my $tap = $ls.Supply.tap: {;}; say 'hello'

[11:11] <camelia> rakudo-moar ca177e583: OUTPUT: «(timeout)»

[11:11] <pony> why doesn't it get to hello?

[11:12] <timotimo> i'm not sure if this is the right explanation, but i've heard multiple times that supplies don't introduce concurrency by themselves. rather, they exist to tame existing concurrency (like asynchronous events)

[11:13] <timotimo> so i guess without an explicit "start" or implicit scheduling action, this won't have multiple threads

[11:14] <pony> ah

[11:14] <timotimo> try this:

[11:15] <timotimo> m: my $ls = (1 ... *).map({ sleep 1; $_ }); my $tap = $ls.Supply.Channel.Supply.tap: {;}; say 'hello'

[11:15] <timotimo> ah, hm. no. not like this.

[11:15] <timotimo> that'll still eagerly send all the values to the channel

[11:15] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(timeout)»

[11:16] *** sena_kun joined
[11:17] *** p6bannerbot sets mode: +v sena_kun

[11:17] <timotimo> well, there'll just have to be a "start" somewhere i guess :)

[11:17] <pony> yeah, what i was thinking :)

[11:19] <pony> m: my $ls = (1 ... *).map({ sleep 1; $_ }); start my $tap = $ls.Supply.tap: { .put

[11:19] <pony> }; put "Hello"; sleep 3;

[11:19] <camelia> rakudo-moar 7be075eb5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3; start my $tap = $ls.Supply.tap: { .put7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modifier loo…»

[11:19] <pony> blah

[11:20] <pony> m: my $ls = (1 ... *).map({ sleep 1; $_ }); start my $tap = $ls.Supply.tap: { .put }; put "Hello"; sleep 3;

[11:20] <camelia> rakudo-moar 7be075eb5: OUTPUT: «Hello␤1␤2␤»

[11:20] <timotimo> put put

[11:38] *** pmurias_ joined
[11:38] *** p6bannerbot sets mode: +v pmurias_

[11:46] <jmerelo> timotimo: as long as we're talking threads, can you have a look at this? https://stackoverflow.com/questions/54088520/when-too-few-threads-program-hangs

[11:47] <jmerelo> timotimo: or this: https://stackoverflow.com/q/52082308/891440

[11:50] <timotimo> oh, i somehow thought the first one had been solved but not marked

[11:51] <timotimo> now i re-read the comment it says it still has the same problem, eh?

[11:51] <timotimo> it's probably just setting max_threads too low

[11:51] <timotimo> perhaps that causes the TPS to not engage its deadlock detection mode

[12:00] <timotimo> i'm not sure how the precomp store or precomp repository will do its precompilation stuff, exactly

[12:01] <timotimo> if it does out-of-process precomp, i'd expect it to also use at least one thread to handle output from the child process?

[12:04] <jmerelo> timotimo: I really don't know the first thing about precomp. Everything in that area is cloudy and mysterious (and so far undocumented)

[12:15] *** aborazmeh left
[12:25] *** remi_ness joined
[12:26] *** p6bannerbot sets mode: +v remi_ness

[12:28] <Geth> ¦ doc/ufobat-patch-1: 24babc1404 | (Martin Barth)++ (committed using GitHub Web editor) | doc/Language/list.pod6

[12:28] <Geth> ¦ doc/ufobat-patch-1: Fixed array slice with [0..^*]

[12:28] <Geth> ¦ doc/ufobat-patch-1: 

[12:28] <Geth> ¦ doc/ufobat-patch-1: ```

[12:28] <Geth> ¦ doc/ufobat-patch-1: $ perl6 -e 'my @a = 1..5; say @a[0..^*]'

[12:28] <Geth> ¦ doc/ufobat-patch-1: (1 2 3 4)

[12:28] <Geth> ¦ doc/ufobat-patch-1: ```

[12:28] <Geth> ¦ doc/ufobat-patch-1: review: https://github.com/perl6/doc/commit/24babc1404

[12:28] <Geth> ¦ doc: ufobat++ created pull request #2561: Fixed array slice with [0..^*]

[12:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2561

[12:29] <timotimo> m: my @a = 1..5; say @a[0..^*]

[12:29] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4)␤»

[12:30] <timotimo> ah, it's example output that's wrong

[12:32] *** ufobat joined
[12:33] *** p6bannerbot sets mode: +v ufobat

[12:33] <ufobat> m: my @a = 1..5; say @a[0..^3] ~~ @a[0..3-1]

[12:33] <camelia> rakudo-moar 7be075eb5: OUTPUT: «True␤»

[12:34] <ufobat> m: my @a = 1..5; say @a[0..^*] ~~ @a[0..*-1]

[12:34] <camelia> rakudo-moar 7be075eb5: OUTPUT: «False␤»

[12:34] <ufobat> if 0..^3 is the same as 0..3-1 why isn't 0..^* the same as 0..*-1 in a array slice

[12:36] <Geth> ¦ doc: 24babc1404 | (Martin Barth)++ (committed using GitHub Web editor) | doc/Language/list.pod6

[12:36] <Geth> ¦ doc: Fixed array slice with [0..^*]

[12:36] <Geth> ¦ doc: 

[12:36] <Geth> ¦ doc: ```

[12:36] <Geth> ¦ doc: $ perl6 -e 'my @a = 1..5; say @a[0..^*]'

[12:36] <synopsebot> Link: https://doc.perl6.org/language/list

[12:36] <Geth> ¦ doc: (1 2 3 4)

[12:36] <Geth> ¦ doc: ```

[12:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/24babc1404

[12:36] <Geth> ¦ doc: 69e7e3a57c | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/list.pod6

[12:36] <Geth> ¦ doc: Merge pull request #2561 from perl6/ufobat-patch-1

[12:36] <Geth> ¦ doc: 

[12:36] <Geth> ¦ doc: Fixed array slice with [0..^*]

[12:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/69e7e3a57c

[12:37] <timotimo> ufobat: 0..^* is an infinite range, whereas 0..^*-1 will create a WhateverCode that the postcircumfix:<[ ]> operator will pass the length of the array to

[12:37] <timotimo> and 0..^* is actually equivalent to 0..* AFAIK

[12:38] <timotimo> m: dd 0..^*; dd 0..*

[12:38] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(0, 1, 2, 3, 4, 5, 6, 7, 8, 9... lazy list)␤(0, 1, 2, 3, 4, 5, 6, 7, 8, 9... lazy list)␤»

[12:38] <timotimo> well...

[12:38] <timotimo> m: (0..^*).DUMP.say; (0..*).DUMP.say

[12:38] <camelia> rakudo-moar 7be075eb5: OUTPUT: «Range<1>(␤    :min(0),␤    :max(Inf),␤    :$!excludes-min(=Int<2>),␤    :$!excludes-max(1),␤    :$!infinite(=Int<4>),␤    :$!is-int(=Int<2>)␤)␤Range<1>(␤    :min(0),␤    :max(Inf),␤    :$!excludes-min(=Int<2>),␤    :$!excludes-…»

[12:38] <timotimo> not terribly helpful, i suppose

[12:42] *** pmurias_ left
[12:43] *** pmurias_ joined
[12:43] *** p6bannerbot sets mode: +v pmurias_

[12:44] *** mike_swie left
[12:47] *** dncefan left
[12:52] *** lucasb joined
[12:52] *** p6bannerbot sets mode: +v lucasb

[12:59] *** dncefan joined
[13:00] *** p6bannerbot sets mode: +v dncefan

[13:03] <ufobat> timotimo, no i dont get it from your explanation because 0..^* is actually all but the last element whereas 0..*-1 are all elements

[13:04] <timotimo> m: my @a = 1, 2, 3, 4, 5; say @a[0..^*]

[13:04] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4)␤»

[13:04] <timotimo> oh, huh, so it is

[13:04] <timotimo> m: my @a = 1, 2, 3, 4, 5; say @a[0..^Inf]

[13:04] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4 5)␤»

[13:04] <timotimo> m: say (0..^*).WHAT

[13:04] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(Range)␤»

[13:04] <timotimo> so that's a thing, OK!

[13:05] <ufobat> m: my @a = 1..5; say @a[0..*-1]

[13:05] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4 5)␤»

[13:05] <ufobat> so the * isnt a "fixed number" if you will

[13:05] <ufobat> if * woud be 3, the slice with 0..^3 means the same as 0..3-1

[13:06] <ufobat> with * in the slice, it isn't

[13:06] <ufobat> m: my @a = 1..5; say @a[0..Inf-1]

[13:06] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4 5)␤»

[13:06] <ufobat> m: my @a = 1..5; say @a[0..^Inf]

[13:06] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4 5)␤»

[13:06] <ufobat> m: my @a = 1..5; say @a[0..^*]

[13:06] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4)␤»

[13:07] <ufobat> ja

[13:07] <ufobat> m: my @a = 1..5; say @a[0..*-1]

[13:07] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4 5)␤»

[13:07] <ufobat> m: my @a = 1..5; say @a[0..Inf-2]

[13:07] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4 5)␤»

[13:07] <ufobat> m: my @a = 1..5; say @a[0..*-2]

[13:07] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4)␤»

[13:07] <ufobat> :D

[13:08] <timotimo> : my @a = 1..5; say @a[0..^*-1]

[13:08] <timotimo> m: my @a = 1..5; say @a[0..^*-1]

[13:08] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(1 2 3 4)␤»

[13:08] <ufobat> the -1 doesnt have an effect on it, now? 

[13:08] <ufobat> huh

[13:09] <ufobat> jmerelo *ping*

[13:10] <ufobat> if that makes sense to someone, it isnt documented or i didnt find it :(

[13:11] <timotimo> i'm headachy and having a hard time concentrating, but i suggest writing down a matrix (or two) for .. vs ..^, * vs *-1, maybe something else?

[13:13] *** molaf joined
[13:14] *** p6bannerbot sets mode: +v molaf

[13:15] *** kensanata joined
[13:15] *** p6bannerbot sets mode: +v kensanata

[13:27] <kensanata> AlexDaniel: tons of issues... :)

[13:31] *** patrickb joined
[13:32] *** p6bannerbot sets mode: +v patrickb

[13:35] *** kurahaupo joined
[13:35] *** p6bannerbot sets mode: +v kurahaupo

[13:46] *** jmerelo left
[13:50] *** john_parr joined
[13:50] *** p6bannerbot sets mode: +v john_parr

[13:58] *** aborazmeh joined
[13:58] *** aborazmeh left
[13:58] *** aborazmeh joined
[13:58] *** p6bannerbot sets mode: +v aborazmeh

[13:58] *** p6bannerbot sets mode: +v aborazmeh

[14:03] <sena_kun> m: class A { has Positional[Int] $.a; }; A.new(a => (1,2,3));

[14:03] <camelia> rakudo-moar 7be075eb5: OUTPUT: «Type check failed in assignment to $!a; expected Positional[Int] but got List ($(1, 2, 3))␤  in block <unit> at <tmp> line 1␤␤»

[14:05] <sena_kun> this is a golfed example, how can I fix that? Of course, I can `has Int @.a`, but let's say I cannot afford it for some reason and have to dance around typed `Positional`.

[14:05] <jnthn> m: class A { has Positional[Int] $.a; }; A.new(a => Array[Int](1,2,3))

[14:05] <camelia> rakudo-moar 7be075eb5: ( no output )

[14:05] *** [particle]1 joined
[14:06] <jnthn> sena_kun: type checking is nominal, not structural, so the incoming type needs to match up if just storing the thing into a Scalar. The `has Int @.a` works because it copies, and so can check each element as it goes.

[14:06] *** p6bannerbot sets mode: +v [particle]1

[14:07] <sena_kun> thanks, will go with it!

[14:07] <sena_kun> m: say Array[Int](1,2,3); say Array[Int].new(1,2,3);

[14:07] <camelia> rakudo-moar 7be075eb5: OUTPUT: «[1 2 3]␤[1 2 3]␤»

[14:08] <sena_kun> that's interesting to remember too. :)

[14:08] *** [particle] left
[14:11] *** molaf left
[14:22] *** aborazmeh left
[14:23] *** MasterDuke joined
[14:23] *** p6bannerbot sets mode: +v MasterDuke

[14:23] *** MasterDuke left
[14:23] *** MasterDuke joined
[14:23] *** herbert.freenode.net sets mode: +v MasterDuke

[14:23] *** p6bannerbot sets mode: +v MasterDuke

[14:28] *** kensanata left
[14:33] *** dogbert17 joined
[14:33] *** p6bannerbot sets mode: +v dogbert17

[14:34] <ufobat> i've running into the same lateley, sena_kun 

[14:35] <ufobat> and i ended up removing the types for @arrays because if the original Arrays came from a different module/api you have to write a lot of code to glue them together :(

[14:35] <sena_kun> well, I am having a "better" one here: `Type check failed in assignment to ; expected Control but got Control.new(control-type => ...`. :)

[14:36] *** pmurias_ left
[14:36] *** pmurias_ joined
[14:36] *** p6bannerbot sets mode: +v pmurias_

[14:45] *** pmurias_ left
[14:46] *** pmurias joined
[14:46] *** p6bannerbot sets mode: +v pmurias

[14:52] *** guifa joined
[14:52] *** p6bannerbot sets mode: +v guifa

[14:59] *** sno left
[15:08] <Xliff> \o

[15:08] <Xliff> Morning from snowedinland! ;)

[15:08] <MasterDuke> Xliff: likewise

[15:11] <Xliff> MasterDuke: East Coast US?

[15:12] <MasterDuke> yep, about 4-6" so far, still falling

[15:13] <Xliff> Same here.

[15:14] <guifa> We're just getting the frigid air here in Tennessee.  No snow to go with =\

[15:14] <Xliff> guifa: Snow is overrated.

[15:15] <guifa> Snow = no classes = I don't have to teach 

[15:15] <guifa> :-)

[15:17] <guifa> So I think I may be doing something wrong (I hope) or stumbled across something weird.  I've tried manually adding an attribute using ^add.attribute, but the .get_value on the attribute bombs with P6Opaque error saying the attribute doesn't exist (even though the setting goes with no problem)

[15:18] *** molaf joined
[15:18] *** p6bannerbot sets mode: +v molaf

[15:19] <Xliff> guifa: Example code?

[15:20] <Xliff> guifa: Also, it's Sunday. Maybe there's still time? ;)

[15:20] <guifa> Yeah, let me try to get a MWE here 

[15:24] *** bisectable6 left
[15:25] <b2gills> guifa: Here in Iowa we don't call off classes for less than 6 inches of snow on the roads.

[15:26] <Xliff> b2gills: LOL

[15:27] <Xliff> Who is the doc person here? I can't get perl6-doc to make due to an error in pod2onepage

[15:27] <guifa> Since we have lots of mountain roads and only 3-4 snow days a year it's just cheaper for us to close rather than salt every road.  Snow at 31-32 inevitably just turns into ice with folks driving, sadly.  

[15:28] <b2gills> I remember traveling home on the highway at near highway speeds where we could only tell where the road was by the shape of the ditches.

[15:28] <guifa> And here's a MWE: https://tio.run/##pVNNS8NAED03v2KMgSQlbG8eGlPoQVEQBBW9WbbNNA02u3Gz/RT71@tuNl@leBAvgcy@ee/N29kcxfLqeMx24MwF4h4hggzlgsfgOSlb8xllEtICxGbow5fVu4QEJRR8JWYIa7pcYQiMQy74dImZ1dNM1WkET5jglrxTKUU6XUksrkckEZh7fZIWdAjj@sCvy4xmCPgJrnNhWFyfLJDGRKlOSrnWlh9avYLuwL6vfWqjitYOoAGRt7vxSw18NsagCzQyv8A0sAsLzYBzwffI1IAeuLYLh2bkg/73yc3r@KH81Iy3puFE2JCcCLewVtjAKuEmyf@Fy0WapIwuq3Br@ceqDAwxruQbeiJ3uZ6/UynaOzEug4GyIQfNxbzqQ1Aw2KRqp1ay3pMAFAtmuU

[15:29] *** shareable6 left
[15:29] *** greppable6 left
[15:29] *** benchable6 left
[15:29] *** undersightable6 left
[15:29] *** releasable6 left
[15:29] *** notable6 left
[15:29] *** squashable6 left
[15:29] *** undersightable6 joined
[15:30] *** greppable6 joined
[15:30] *** ChanServ sets mode: +v greppable6

[15:30] *** p6bannerbot sets mode: +v undersightable6

[15:30] *** squashable6 joined
[15:30] *** notable6 joined
[15:30] *** ChanServ sets mode: +v notable6

[15:31] *** p6bannerbot sets mode: +v greppable6

[15:31] <holyghost> lol

[15:31] *** p6bannerbot sets mode: +v squashable6

[15:31] *** releasable6 joined
[15:31] *** ChanServ sets mode: +v releasable6

[15:31] *** bisectable6 joined
[15:31] *** p6bannerbot sets mode: +v notable6

[15:32] *** benchable6 joined
[15:32] <holyghost> We don;t have snow here in Belgium, Brussels

[15:32] *** kensanata joined
[15:32] *** p6bannerbot sets mode: +v kensanata

[15:32] <holyghost> Rain yes

[15:32] *** p6bannerbot sets mode: +v releasable6

[15:32] *** p6bannerbot sets mode: +v bisectable6

[15:32] *** p6bannerbot sets mode: +v benchable6

[15:33] *** shareable6 joined
[15:33] *** ChanServ sets mode: +v shareable6

[15:33] *** p6bannerbot sets mode: +v shareable6

[15:37] <Xliff> m: my $a = 'abcdefg'; given $a { when .starts-with( any('a'..'z') ) { say 1; }; }; 

[15:37] <camelia> rakudo-moar 7be075eb5: OUTPUT: «1␤»

[15:37] <Xliff> m: say $*PERL.compiler.version

[15:37] <camelia> rakudo-moar 7be075eb5: OUTPUT: «v2018.12.206.g.7.be.075.eb.5␤»

[15:45] *** hph^ left
[15:53] <Xliff> m: my $a = 'abcdefg'; given $a { when .starts-with( any(<a b c d>) ) { say 1; }; }; 

[15:53] <camelia> rakudo-moar 7be075eb5: OUTPUT: «1␤»

[15:55] *** ChoHag left
[16:04] <daxim> my lists are evaporating:  http://paste.scsys.co.uk/582758?ln=on

[16:09] *** zakharyas joined
[16:10] *** p6bannerbot sets mode: +v zakharyas

[16:12] <Xliff> m: 5.max(6).say

[16:12] <camelia> rakudo-moar 7be075eb5: OUTPUT: «Cannot resolve caller max(Int:D: Int:D); none of these signatures match:␤    ($: *%_)␤    ($: &by, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[16:15] <tyil> what constitutes an "alphabetic" method? just a method that only contains alphabetic characters (including the leading &, if needed)?

[16:16] <tyil> for context: https://tio.run/#perl6

[16:16] <tyil> err

[16:16] <tyil> https://tio.run/##K0gtyjH7/7@4NEkhLT9fQUMlUVOhWkElUaGWi0upID83TUlPDSihV5xYaa2grOCfnVgJk@ACy3BBpVKLivKLiv//BwA

[16:17] <tyil> should at least link it with some code

[16:17] *** Skarsnik joined
[16:17] <Skarsnik> Hello there

[16:17] *** p6bannerbot sets mode: +v Skarsnik

[16:17] <tyil> hi Skarsnik 

[16:19] <Skarsnik> almost done with my advent calandar post! just in time xD

[16:19] <Skarsnik> sucks, I got some computer issue on december x)

[16:19] <tyil> there'll be another advent calendar later this year

[16:19] <tyil> or so I heard

[16:21] *** jmerelo joined
[16:22] *** p6bannerbot sets mode: +v jmerelo

[16:23] *** mowcat left
[16:28] <holyghost> hail to jmerelo and Skarsnik !

[16:28] * holyghost is drunk

[16:28] <jmerelo> hi!

[16:28] <lizmat> daxim: no idea what's going on there

[16:28] <holyghost> the gobilins !

[16:29] <holyghost> lol

[16:29] <daxim> List(List(x)) works, which makes 1 List.  List(x) is the same as plain x, which makes an x.

[16:29] <daxim> I find this surprising

[16:29] <Skarsnik> why do i always hit weird bug when working on perl 6 stuff xD

[16:29] <lizmat> m: dd List(42)

[16:29] <camelia> rakudo-moar 7be075eb5: OUTPUT: «(42,)␤»

[16:29] <lizmat> daxim: not that simple ^^^

[16:30] <jmerelo> daxim: it's a single-element list. Might print out in the same way as that single element, but it's still a list.

[16:30] <daxim> jmerelo, ^name doesn't lie

[16:31] <lizmat> jmerelo: it's not that simple  :-(

[16:31] <sena_kun> how can two type objects have the same .WHICH value but fail smartmatch and type check? `===` is True, `==` is True, `~~` is False and type check fails too.

[16:31] <lizmat> daxim: ^name *can* lie, but isn't in this case  :-)

[16:32] <lizmat> m: BEGIN Int.^set_name("Foo"); say 42.^name

[16:32] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «Foo␤»

[16:32] <moritz> sena_kun: sounds like a bug. If === is True, smart-match should as well

[16:33] <moritz> m: my $a = { my class A { } }; my $b = { my class A { } }; say $a === $b

[16:33] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «False␤»

[16:33] <sena_kun> ouch... that is unfortunate.

[16:33] <moritz> do you have an easy way to reproduce it?

[16:34] <sena_kun> I'll try to make a short gist, yes.

[16:36] <sena_kun> my situation is: 1)create a class using MOP(say "Inner"); 2)assign it as a type of an attribute in another created class(say "Outer"); 3)when I try to create instance of Outer with Inner.new type check fails. 4)but if I manually get ^attributes of Outer to get type of this attr, I will get Inner -> it's .WHICH is the same to Inner that I have globally, it passes ===, but fails ~~ and fails type check.

[16:36] <sena_kun> I'll try to make a gist now...

[16:36] <Skarsnik> hm, I have a grammar that does not stop properly on current rakudo vs 2018.03

[16:37] <sena_kun> s/it's/its/

[16:37] <Skarsnik> 6.d have nothing new for grammar?

[16:38] *** kensanata left
[16:38] <guifa> daxim: it is returning a list, but I think the catch is, in your second loop, your loop is just returning a single list rather than a list of lists.  So when you -> $x, it's passing the inner value.

[16:40] <daxim> hmm

[16:40] <holyghost> Skarsnik, there's 2018.12 now

[16:41] <Skarsnik> I am trying the current one (git version)

[16:43] <guifa> daxim: add these lines and you'll see what I mean a bit better I think

[16:43] <guifa> say (span-slices 3, 0 => 4).WHAT; say (span-slices 3, 0 => 4).perl; say (span-slices 1, 0 => 4).WHAT; say (span-slices 1, 0 => 4).perl;

[16:44] <Skarsnik> m: enum Foo(A => 0, B => 1); say Foo(0); say Foo(42)

[16:44] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «A␤(Foo)␤»

[16:44] <Skarsnik> Should it produce an error and tell you are creating an invalid instance of the enum?

[16:45] <sena_kun> golfed it down...

[16:45] <daxim> that explanation was helpful, guifa++  that fits the intuition I need to return List(List(x)) for the `??` case of the ternary op expression

[16:46] <sena_kun> https://gist.github.com/Altai-man/225947b79a209619c5199333e1d76490 <- moritz

[16:46] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ s/'{' ~ '}' ./; say $m

[16:46] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use variable $m in declaration to initialize itself␤at <tmp>:1␤------> 3 }'; my $m = $t ~~ s/'{' ~ '}' ./; say $7⏏5m␤    expecting any of:␤        infix stopper␤        term␤»

[16:46] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ /'{' ~ '}' ./; say $m

[16:46] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «｢{ }｣␤»

[16:47] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ /'o' \s+ {' ~ '}' ./; say $m

[16:47] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)␤at <tmp>:1␤------> 3 $m = $t ~~ /'o' \s+ {' ~ '}' ./; say $m7⏏5<EOL>␤    expecting …»

[16:47] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ /'o' \s+ '{' ~ '}' ./; say $m

[16:47] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «(Any)␤»

[16:47] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ /'o' \s+ ' {' ~ '}' ./; say $m

[16:47] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «(Any)␤»

[16:47] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ /^ 'o' \s+ '{' ~ '}' ./; say $m

[16:47] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «(Any)␤»

[16:48] <Xliff> m: my $t = 'o { { } }'; my $m = $t ~~ /'{' ~ '}' ./; say $m

[16:48] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «｢{ }｣␤»

[16:48] <sena_kun> I am ready to try to debug this bug,(if that's a bug) as I need a workaround or a fix as soon as possible, but some help from experienced hackers is likely needed for it. :)

[16:48] <Xliff> m: my $t = 'o { { asdlkjasd[ {}} }'; my $m = $t ~~ /'{' ~ '}' ./; say $m

[16:48] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «｢{}}｣␤»

[16:49] <Xliff> m: my $t = 'o { { asdlkjas }'; my $m = $t ~~ /'{' ~ '}' ./; say $m

[16:49] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «(Any)␤»

[16:49] * holyghost is an experienced hacker :-)

[16:49] <Xliff> m: my $t = 'o { sdlkjas }'; my $m = $t ~~ /'{' ~ '}' ./; say $m

[16:49] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «(Any)␤»

[16:49] <Xliff> m: my $t = 'o { sdlkjas }'; my $m = $t ~~ /'{' ~~ '}' ./; say $m

[16:49] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter ~ (must be quoted to match literally)␤at <tmp>:1␤------> 3 sdlkjas }'; my $m = $t ~~ /'{' ~~ '}' .7⏏5/; say $m␤Unable to parse regex; couldn't find final '/'␤at <tmp>:1␤------> 3 s…»

[16:49] <Xliff> m: my $t = 'o { sdlkjas }'; my $m = $t ~~ /'{' ~ '}' \w+/; say $m

[16:49] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «(Any)␤»

[16:50] <Xliff> OK. I think I am forgetting something.

[16:50] <guifa> daxim: I've found whenever I get weird stuff, the .WHAT is the quickest thing to solving a lot of my hidden-in-plain-site mistakes.

[16:55] *** pochi joined
[16:56] *** p6bannerbot sets mode: +v pochi

[16:58] *** mowcat joined
[16:59] *** p6bannerbot sets mode: +v mowcat

[17:01] *** molaf left
[17:01] *** holyghost left
[17:01] *** molaf joined
[17:02] *** p6bannerbot sets mode: +v molaf

[17:03] *** MilkmanDan left
[17:03] *** zakharyas left
[17:05] *** MilkmanDan joined
[17:05] *** p6bannerbot sets mode: +v MilkmanDan

[17:10] *** lasse joined
[17:10] *** p6bannerbot sets mode: +v lasse

[17:14] *** jme` left
[17:19] <Xliff> m: my $t = 'o { { asdlkjasd[ { }'; my $m = $t ~~ /'{' ~ '}' <[\w [}{\s]>+ /; say $m

[17:19] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «｢{ { asdlkjasd[ { }｣␤»

[17:19] <Xliff> \o/

[17:22] *** Brynn joined
[17:22] *** guifa left
[17:22] *** p6bannerbot sets mode: +v Brynn

[17:25] <jmerelo> Hi, Xliff 

[17:25] <jmerelo> Working on your issue now

[17:26] <jmerelo> m: "/this/link".starts-with( any(<http:// https:// irc://>) )

[17:26] <camelia> rakudo-moar 0d9e9f34c: ( no output )

[17:26] <Xliff> jmerelo: \o

[17:27] <Xliff> jmerelo: Yeah. I tried working on it, but I couldn't reproduce it on camelia.

[17:32] <Geth> ¦ doc: Kaiepi++ created pull request #2563: Document trap on (cont) subroutine on Map/Hash

[17:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2563

[17:32] <jmerelo> m: say any(<http:// https:// irc://>)

[17:32] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «any(http://, https://, irc://)␤»

[17:33] <jmerelo> m: say "whatever".starts-with( any(<http:// https:// irc://>) )

[17:33] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «any(False, False, False)␤»

[17:33] <jmerelo> Ah, rithg

[17:33] <jmerelo> right.

[17:33] <Xliff> Yeah.

[17:33] <Xliff> m: say "whatever".starts-with( any(<http:// https:// irc://>) ).so

[17:33] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «False␤»

[17:33] <Kaiepi> m: my %a is Bag = (a => 0); %a (cont) 'a'

[17:33] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "(cont)" in expression "%a (cont) 'a'" in sink context (line 1)␤»

[17:34] <Xliff> So was it as simple as that? I thought "when" handled junctions.

[17:34] <Kaiepi> m: my %a is Bag = (a => 0); say %a (cont) 'a'

[17:34] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «False␤»

[17:35] <Skarsnik> hm anyone managed to use markdown (copy/paste from a file) on blog.perl.org?

[17:35] <Xliff> m: my %a is Bag = (a => 0); say %a ⊃ 'a'

[17:35] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «False␤»

[17:36] <sena_kun> don't want to be annoying, but is https://gist.github.com/Altai-man/225947b79a209619c5199333e1d76490 a bug? if yes, what can I help with besides filling an issue?

[17:37] <Xliff> m: '⊃'.uniname.say

[17:37] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «SUPERSET OF␤»

[17:37] *** zakharyas joined
[17:37] <Xliff> m: '⊃'.uniname

[17:37] <camelia> rakudo-moar 0d9e9f34c: ( no output )

[17:38] <Xliff> m: '⊃'.unicode

[17:38] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «No such method 'unicode' for invocant of type 'Str'. Did you mean 'encode'?␤  in block <unit> at <tmp> line 1␤␤»

[17:38] <Xliff> m: '⊃'.ord.say

[17:38] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «8835␤»

[17:38] <Xliff> m: '⊃'.ord.fmt("%x").say

[17:38] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «2283␤»

[17:38] *** p6bannerbot sets mode: +v zakharyas

[17:39] <Xliff> m: my %a is Bag = (a => 0); say %a ∋ 'a'

[17:39] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «False␤»

[17:39] <Xliff> m: my %a is Bag = (a => 0); say 'a' ∋  %a

[17:39] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «False␤»

[17:40] *** guifa joined
[17:40] *** p6bannerbot sets mode: +v guifa

[17:42] *** tokomer joined
[17:43] *** p6bannerbot sets mode: +v tokomer

[17:46] *** abaiste joined
[17:47] *** p6bannerbot sets mode: +v abaiste

[17:51] *** MilkmanDan left
[17:52] *** MilkmanDan joined
[17:52] *** p6bannerbot sets mode: +v MilkmanDan

[17:55] <Skarsnik> http://blogs.perl.org/users/sylvain_colinet/2019/01/mis-using-perl-6-grammars-decompressing-zelda-3-gfx.html x)

[18:02] *** lucasb left
[18:05] <Xliff> ͜sssss

[18:06] <Xliff> Oh wow! Wincompose is nice!

[18:06] *** MilkmanDan left
[18:07] <Xliff> ҉s

[18:08] *** MilkmanDan joined
[18:08] *** p6bannerbot sets mode: +v MilkmanDan

[18:25] *** random_yanek left
[18:29] <moritz> my IRC client renders lines as <+nick> message, and Xliff just composed something onto the > character :-)

[18:29] <jmerelo> Xliff: weechat composed it on the | right after the name

[18:32] <Geth> ¦ perl6-pod-to-bigpage: d05cb3dfce | (JJ Merelo)++ | t/render.t

[18:32] <Geth> ¦ perl6-pod-to-bigpage: Suppress debugging prints

[18:32] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/d05cb3dfce

[18:32] <Geth> ¦ perl6-pod-to-bigpage: a509c00c9f | (JJ Merelo)++ | 2 files

[18:32] <Geth> ¦ perl6-pod-to-bigpage: Fixing error perl6/doc#2562 #34. WIP

[18:32] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/a509c00c9f

[18:32] <Geth> ¦ perl6-pod-to-bigpage: 92f2e4ef9f | (JJ Merelo)++ | 4 files

[18:32] <synopsebot> DOC#2562 [open]: https://github.com/perl6/doc/issues/2562 [bug][external][⚠ Blocker ⚠] make Error Encountered When Building Docs

[18:32] <Geth> ¦ perl6-pod-to-bigpage: Fixes the problem of links-as-arrays

[18:32] <Geth> ¦ perl6-pod-to-bigpage: 

[18:32] <Geth> ¦ perl6-pod-to-bigpage: Which I don't really understand, but that's the way it is. Fixes #34.

[18:32] <Geth> ¦ perl6-pod-to-bigpage: 

[18:32] <Geth> ¦ perl6-pod-to-bigpage: Also WIP for perl6/doc#2562, will have to be tested.

[18:32] <Geth> ¦ perl6-pod-to-bigpage: 

[18:32] <Geth> ¦ perl6-pod-to-bigpage: Adds a ChangeLog for registering changes in every new version. Writes

[18:32] <Geth> ¦ perl6-pod-to-bigpage: tests also for new feature.

[18:32] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/92f2e4ef9f

[18:33] <Xliff> moritz: LOL!

[18:33] <Xliff> Combining unicode chars.

[18:34] <Xliff> It was supposed to go over the 's'

[18:34] <Geth> ¦ doc: 2f8a1c1d8b | (Ben Davies)++ | doc/Language/traps.pod6

[18:34] <Geth> ¦ doc: Document trap on set subroutines on Associative

[18:34] <Geth> ¦ doc: 

[18:34] <Geth> ¦ doc: Fixes https://github.com/rakudo/rakudo/issues/2604

[18:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2f8a1c1d8b

[18:34] <synopsebot> Link: https://doc.perl6.org/language/traps

[18:34] <Geth> ¦ doc: ca3067e5e7 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[18:34] <Geth> ¦ doc: Merge pull request #2563 from Kaiepi/traps

[18:34] <Geth> ¦ doc: 

[18:34] <Geth> ¦ doc: Document trap on set subroutines on Associative

[18:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ca3067e5e7

[18:36] <timotimo> Skarsnik: length or lenght? :)

[18:37] *** random_yanek joined
[18:38] *** p6bannerbot sets mode: +v random_yanek

[18:45] *** molaf left
[18:49] *** Grauwolf left
[18:49] *** Grauwolf joined
[18:49] *** p6bannerbot sets mode: +v Grauwolf

[18:54] <lizmat> weekly: https://trendsfocus.net/mis-using-perl-6-grammars-decompressing-zelda-3-gfx-2

[18:54] <notable6> lizmat, Noted!

[18:55] <lizmat> I wonder if someone can make a summary of that article...  It's all Chinese to me :-(

[18:55] <Geth> ¦ doc: edf550628a | (JJ Merelo)++ | META6.json

[18:55] <Geth> ¦ doc: Bumps up to use new version of p2obp refs #2562

[18:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/edf550628a

[18:55] <Geth> ¦ doc: 8c23b6ddba | (JJ Merelo)++ | doc/404.pod6

[18:55] <Geth> ¦ doc: Adds more info to 404.

[18:55] <Geth> ¦ doc: 

[18:55] <Geth> ¦ doc: Meanwhile, the change to p2obp has tested OK, so the previous commit

[18:55] <Geth> ¦ doc: closes #2562

[18:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8c23b6ddba

[18:57] <yoleaux> AlexDaniel: get huggable back on its feet

[18:59] <AlexDaniel> .in 7d get huggable back on its feet

[18:59] <yoleaux> AlexDaniel: I'll remind you on 20 Jan 2019 18:59Z

[18:59] <AlexDaniel> busy…

[18:59] <timotimo> m: multi sub data($cmd where 1 | 2, $length) { say "one or two: $length" }; multi sub data($cmd where 4 | 7, $length) { say "four or seven: $length" }; data(1, 1); data(2, 1); data(4, 99); data(7, 1000)

[18:59] <camelia> rakudo-moar 0d9e9f34c: OUTPUT: «one or two: 1␤one or two: 1␤four or seven: 99␤four or seven: 1000␤»

[18:59] <timotimo> Skarsnik: you can make the signatures much shorter!

[19:00] <lizmat> looks like the Camelia plushy has been cloned: https://twitter.com/hythm_hythm/status/1084524913959030786

[19:01] <El_Che> The first Raku butterfly at that

[19:01] <lizmat> yeah... I just realize that myself  :-)

[19:01] <El_Che> I was waiting for the penny to drop :)

[19:01] <lizmat> wonder who hythm_hythm is

[19:02] <lizmat> it's their first tweet

[19:02] <Skarsnik> timotimo, witch one? x)

[19:03] <timotimo> length is correct afaik

[19:03] <timotimo> oh, you mean the signatures?

[19:03] <timotimo> that's from "multi token data" in the "Validate commands" section of the post

[19:03] <El_Che> the account doesn't follow regular people

[19:03] <timotimo> sneshacking? you misspelt shaking there :) :)

[19:03] <timotimo> snek shaking

[19:03] <El_Che> only famous ones and institutions like Nasa en MegaDeath

[19:04] <timotimo> i've seen hythm as a nickname on irc at least

[19:04] <timotimo> ooooh, i see what you mean with raku butterfly

[19:04] <timotimo> .seen hythm

[19:04] <yoleaux> I saw hythm 19 Jul 2018 18:36Z in #perl6: <hythm> great, thanks

[19:05] <El_Che> 08:25 -!- hythm_ [4a495925@gateway/web/freenode/ip.74.73.89.37] has joined #perl6

[19:05] <Skarsnik> timotimo, hooo, I did not think of that form, my first idea what just foo(1 | 2)

[19:05] <Skarsnik> but it does not work

[19:05] <timotimo> true ,you need the value itself

[19:06] <Skarsnik> lenght or length I always get it wrong xD

[19:06] *** zakharyas left
[19:06] <timotimo> i had issues with width for the longest time when i was a kid

[19:07] <timotimo> probably also height

[19:11] *** dncefan left
[19:11] *** dncefan joined
[19:12] *** p6bannerbot sets mode: +v dncefan

[19:20] <guifa> Okay, I feel a bit stupid.  i should have been using augment all along. 

[19:21] <guifa> But it does still make e wonder why after using add_attribute things bomb when using set_value and get_value on the newly created attribute (stuff added via add_method work no problem)

[19:25] *** zakharyas joined
[19:26] *** p6bannerbot sets mode: +v zakharyas

[19:29] *** kurahaupo left
[19:31] *** dncefan left
[19:32] *** dncefan joined
[19:33] *** p6bannerbot sets mode: +v dncefan

[19:35] *** MasterDuke left
[19:36] *** tokomer left
[19:50] *** pmurias_ joined
[19:50] *** p6bannerbot sets mode: +v pmurias_

[19:50] *** pmurias_ left
[19:52] <sena_kun> lizmat++ is just awesome. \o/

[19:52] <lizmat> *blush*

[19:52] <lizmat> sena_kun: I just recognized the failure pattern from a similar issue a few days ago

[19:53] <sena_kun> for me it is a life-saving fix. :)

[19:54] <lizmat> glad to hear!

[19:54] <Skarsnik> I should do a small camelia image to use as twitch emote x)

[19:54] <jmerelo> sena_kun: I don't know what's the ocassion, but lizmat++ always applies

[19:55] <lizmat> jmerelo: https://github.com/rakudo/rakudo/issues/2607

[19:56] *** pmurias left
[19:57] *** kurahaupo joined
[19:58] *** pmurias joined
[19:58] *** p6bannerbot sets mode: +v pmurias

[19:58] *** p6bannerbot sets mode: +v kurahaupo

[20:01] *** dncefan left
[20:01] *** dncefan joined
[20:02] *** p6bannerbot sets mode: +v dncefan

[20:03] *** kurahaupo_ joined
[20:03] *** kurahaupo left
[20:03] *** p6bannerbot sets mode: +v kurahaupo_

[20:07] *** kurahaupo_ left
[20:08] <guifa> Actually grrr... even using augment new attributes are seemingly invisible.  Did I stumble upon a bug or is there special syntax for that?

[20:09] <sena_kun> guifa, I guess you already provided a gist? Maybe https://github.com/rakudo/rakudo/issues/2607 is at fault?

[20:10] *** thelounge02 joined
[20:10] *** p6bannerbot sets mode: +v thelounge02

[20:11] *** thelounge02 left
[20:12] <guifa> sena_kun: possibly?  I've been whittling things down and trying a couple of things to make sure it's not just me.  add_method() definitely works no problem, but add_attribute() doesn't, same for methods added via augment class Foo {} (work) vs attributes added via augment (don't work)

[20:12] <guifa> I just wanted to verify it's not me before I went and did a bug report

[20:12] <tyil> is it ok if I join a bot here that notifies of new perl 6 modules on cpan, now that buggable is gone?

[20:13] <tyil> source of bot is https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot/src/branch/master/lib/App/CPAN/UploadNotifierBot.pm6, if that matters

[20:15] *** zakharyas left
[20:15] <sena_kun> m: my $a = Metamodel::ClassHOW.new_type(name => 'A'); $a.^add_attribute(Attribute.new(name => '$!a', type => Int, package => $a, :has_accessor)); $a.^compose; say $a.^attributes;

[20:15] <camelia> rakudo-moar bf0dbbe6d: OUTPUT: «(Int $!a)␤»

[20:15] <sena_kun> guifa, ^?

[20:15] *** jmerelo left
[20:16] *** sno joined
[20:16] <sena_kun> m: my $a = Metamodel::ClassHOW.new_type(name => 'A'); $a.^add_attribute(Attribute.new(name => '$!a', type => Int, package => $a, :has_accessor)); my $aa = $a.new; $aa.^attributes[0].set_value($aa, 5); say $aa;

[20:16] <camelia> rakudo-moar bf0dbbe6d: OUTPUT: «No such method 'new' for invocant of type 'A'␤  in block <unit> at <tmp> line 1␤␤»

[20:16] <sena_kun> m: my $a = Metamodel::ClassHOW.new_type(name => 'A'); $a.^add_attribute(Attribute.new(name => '$!a', type => Int, package => $a, :has_accessor)); $a.^compose; my $aa = $a.new; $aa.^attributes[0].set_value($aa, 5); say $aa;

[20:16] <camelia> rakudo-moar bf0dbbe6d: OUTPUT: «A.new(a => 5)␤»

[20:16] <sena_kun> guifa, ^?

[20:16] *** p6bannerbot sets mode: +v sno

[20:17] <Xliff> https://github.com/Xliff/p6-VisualGrammar/

[20:17] <Xliff> \o/

[20:17] <tyil> Xliff: now that's hot

[20:17] <sena_kun> tyil, I don't see why you can't add the bot.

[20:18] <tyil> Xliff: I recently got my hands on a book on regexes and grammars, I can play around with that application while learning more about grammars 

[20:18] <Xliff> tyil: Ah! That's cool. Please share any issues or suggestions when you do! :)

[20:19] <Xliff> tyil: Sorry about all of the work required to install. I have so many projects in the pipe.

[20:19] <tyil> I know that feeling

[20:19] <guifa> sena_kun: this is what's bombing

[20:19] <guifa> https://tio.run/##VZBLa4NAEIDv/orBBLSw8dZepIEe2hBK00IDJZfKRkcN0R3ZXatS@tvtmIfE2zw@Zr6ZCnXx0Pe1QXh737w@7xbb3cd6swodp@xgrrBZlGhzSuARLsEvGNmB@0X6aFz4GzlprT7sa4uMPl3jgDu@kiUXl@DtpfYE2K46pZ9WC6hkfJTZKV8rKyCXJpJxjMaQHopbXeMd23Az@JZJEp0tfC8l8sSNIEMjM6r4U7MrE1NZkcHLkS0LD@VB9Z6ReRvw8NCZgSKFQCnYHCGloqDmoDJo@HLhTCcHBm30I4uaV7bCfSFyh0lTJrthznv4IaHT9/8

[20:19] <Xliff> tyil: Would be interested to know how long it takes for you to compile GtkPlus

[20:19] <tyil> I'm running low on time for all my projects ;(

[20:20] <tyil> Xliff: not that long

[20:20] <tyil> I already have it compiled

[20:20] <sena_kun> guifa, at the very least, I think you have to use a name with a sigil and twigil, like `$!bar`, not just `bar`.

[20:20] <tyil> x11-libs/gtk+, versions 2.24.32-r1 and 3.24.1

[20:21] <guifa> I've tried that too, sans success.  The add_attribute doesn't have much documentation so I've not been clear whether those get added based on has_accessor or not

[20:22] *** cpan-p6 joined
[20:23] *** p6bannerbot sets mode: +v cpan-p6

[20:24] <Xliff> tyil: No. p6-GtkPlus will take a while. 

[20:24] <Xliff> That's my upcoming perl6 binding for GTK. ;)

[20:24] <tyil> oh

[20:25] <tyil> nice

[20:25] <lizmat> add_attribute is relatively straightforward: it's probably an issue with the Attribute object that you created 

[20:25] *** domidumont left
[20:25] <Xliff> It's designed to cover the areas that GTK::Simple hasn't.

[20:25] <tyil> I don't fear the compiler, so no worries for me

[20:25] <Xliff> That makes it an order of magnitude larger.

[20:25] <guifa> lizmat: the same thing happens when using augment, though

[20:25] <Xliff> Wonder if I should be tongue-in-cheek and call it GTK::Complex

[20:25] <guifa> https://tio.run/##ZY4xC8IwFIT3/IpDOuhg6SAOho4iRawOgnQRYo1WbJqS11Kr9LfHtAoOTve493F3pTT53NqaJDbbeL1MpvtkF8Urzpior0oWFdJcECFy14sBmSB4/qN94kYwDUIE3NlKVpk@46L1QAEkWowO2txp1P@7H3MS5o9ZfDK/aMdcm39MtSo1STdFtfCEq@rtQjbjYMKZJ3zXNqhLHLRfFWLGrX0D

[20:25] <tyil> hehe

[20:26] <sena_kun> guifa, well, with `$!bar` as a name and `$x.^attributes.grep(*.name eq '$!bar')[0].set_value($x, 'Foo');` exploding I would call it a bug.

[20:26] <sena_kun> guifa, though, maybe still related to the issue I have pointed to. I don't have fresh rakudo right now to check if it explodes after the fix or not.

[20:27] <Skarsnik> You should patch GPTrixie to genrate good OO binding x)

[20:28] <guifa> sena_kun: Okay, I'll go ahead and write up an issue. Like I said, it was more of a "I know I'm working in the here-be-dragons part of the less documented forest, so I'd better check I'm not just a fool first"

[20:28] <sena_kun> guifa, can you build latest rakudo && check?

[20:28] *** cpan-p6 left
[20:30] *** cpan-p6 joined
[20:30] *** pmurias left
[20:31] *** p6bannerbot sets mode: +v cpan-p6

[20:31] *** pmurias joined
[20:31] *** p6bannerbot sets mode: +v pmurias

[20:33] <El_Che> Xliff: great! Learning Vala seems such a waste of time and not too fond of JS of Python for desktop apps. Rust seems be getting popular (as it has sane threading), but I reckon perl 6 will be easier to write!

[20:36] <guifa> sena_kun: I can possibly tonight or tomorrow.  I've not done a from-source build before but I suppose I should probably get that set up 

[20:37] <sena_kun> guifa, after about 12-14 hours I'll do it myself, so if you can wait a bit, then you don't need to. I'll also ping you on the results.

[20:39] <guifa> sena_kun: I mean, go for it but I still need to get a build set up done anyways, this just incentivizes it ;-)

[20:40] <sena_kun> guifa, that's fair.

[20:41] <guifa> In the meantime, I've gotten a set up that works with only add_method + Roles but it fails === Type comparisons 

[20:42] <Skarsnik> timotimo, no way to use Perl 6 from C/C++ yet? (by using libmoar maybe?)

[20:42] <guifa> (doing a freezable regex.  So if you do $a = /$b/, you can $a.freeze to lock in place the value of $b at the time.  $a.thaw has been where all the trouble is because I needed to store the original somewhere)

[20:45] *** cydf joined
[20:46] *** p6bannerbot sets mode: +v cydf

[20:49] *** kurahaupo joined
[20:50] *** p6bannerbot sets mode: +v kurahaupo

[20:52] *** pmurias left
[20:54] *** pmurias joined
[20:54] *** p6bannerbot sets mode: +v pmurias

[21:01] <Xliff> Is there a way to close all taps on a single supply?

[21:02] *** lasse left
[21:04] <lizmat> .close for $supply.taps ?

[21:11] *** kurahaupo left
[21:12] *** kurahaupo joined
[21:13] <Xliff> lizmat: Did I miss that, here? 

[21:13] <Xliff> https://docs.perl6.org/type/Supply

[21:13] *** p6bannerbot sets mode: +v kurahaupo

[21:13] <Xliff> m: use v6.c; my $s = Supply.new; $s.tap({ "Hi!".say }); .say for $s.taps;

[21:13] <camelia> rakudo-moar 4bb5c33c7: OUTPUT: «Cannot directly create a Supply. You might want:␤ - To use a Supplier in order to get a live supply␤ - To use Supply.on-demand to create an on-demand supply␤ - To create a Supply using a supply block␤  in block <unit> at <tmp> line 1␤␤»

[21:13] <lizmat> I misremembered: in a previous Supply implementation, there used to be a .taps method, I seem to recall

[21:13] <Xliff> m: use v6.c; my $s = Supplier.new.Supply; $s.tap({ "Hi!".say }); .say for $s.taps;

[21:13] <camelia> rakudo-moar 4bb5c33c7: OUTPUT: «No such method 'taps' for invocant of type 'Supply'. Did you mean any of these?␤    Map␤    map␤    tail␤    take␤␤  in block <unit> at <tmp> line 1␤␤»

[21:14] <Xliff> m: my $s = Supplier.new.Supply; $s.tap({ "Hi!".say }); .say for $s.taps;

[21:14] <camelia> rakudo-moar 4bb5c33c7: OUTPUT: «No such method 'taps' for invocant of type 'Supply'. Did you mean any of these?␤    Map␤    map␤    tail␤    take␤␤  in block <unit> at <tmp> line 1␤␤»

[21:14] <Xliff> lizmat: No worries. 

[21:14] <Xliff> lizmat: Any reason it's not in current Rakudo?

[21:14] <lizmat> I guess jnthn removed it because it was a race condition

[21:15] <Xliff> Ah!

[21:15] <Xliff> So just track all taps on a supply in user code and basically do what you just suggested.

[21:15] <lizmat> or perhaps jnthn has a better idea ?

[21:16] *** patrickb left
[21:17] *** kurahaupo left
[21:20] *** rindolf left
[21:21] <timotimo> Skarsnik: you can use Perl 6 from C/C++ with libmoar, but i haven't built much code with it. if you use sockets or something for the IPC, it should be trivial to set up an interface between host and client

[21:22] *** rindolf joined
[21:22] <Skarsnik> is there an example somewhere?

[21:23] *** p6bannerbot sets mode: +v rindolf

[21:26] <Xliff> m: class WrappedSupply is Supply { has @!taps; submethod BUILD { self.^find_method('tap').wrap(-> | { @!taps.push: callsame }); }; }

[21:26] <camelia> rakudo-moar 4bb5c33c7: ( no output )

[21:26] <Xliff> OK. So how do I get supplier to return a WrappedSupply?

[21:27] <Xliff> m: class WrappedSupply is Supply { has @!taps; submethod BUILD { self.^find_method('tap').wrap(-> | { @!taps.push: callsame }); }; }; constant Supply = WrappedSupply; Supplier.new.Supply.^name.say

[21:27] <camelia> rakudo-moar 4bb5c33c7: OUTPUT: «Supply␤»

[21:28] <lizmat> Xliff: good question, I'm afraid I lost the plot after the last Supply refactor

[21:28] <Xliff> lizmat: OK. Thanks.

[21:36] *** Kaiepi left
[21:38] *** Kaiepi joined
[21:38] *** p6bannerbot sets mode: +v Kaiepi

[21:39] *** dncefan left
[21:40] *** dncefan joined
[21:41] *** dncefan left
[21:41] *** dncefan joined
[21:41] *** Skarsnik left
[21:42] *** p6bannerbot sets mode: +v dncefan

[21:42] <Xliff> .tell jnthn What is the best way to close all taps on a Supply?

[21:42] <yoleaux> Xliff: I'll pass your message to jnthn.

[21:46] <cpan-p6> New module released to CPAN! CheckSocket (0.0.5) by 03JSTOWE

[21:49] *** dncefan left
[21:50] *** dncefan joined
[21:51] *** p6bannerbot sets mode: +v dncefan

[21:54] <Kaiepi> is there a difference between for and eager for?

[21:55] *** dncefan left
[21:56] *** dncefan joined
[21:57] *** p6bannerbot sets mode: +v dncefan

[22:01] *** pmurias left
[22:14] *** kensanata joined
[22:14] *** p6bannerbot sets mode: +v kensanata

[22:16] <Xliff> m: DateTime.now.say

[22:16] <camelia> rakudo-moar e87b7afb0: OUTPUT: «2019-01-13T23:16:52.832712+01:00␤»

[22:17] <Xliff> m: say "{ DateTime.now }"

[22:17] <camelia> rakudo-moar e87b7afb0: OUTPUT: «2019-01-13T23:17:03.642693+01:00␤»

[22:19] <Xliff> m: use DateTime::Format;

[22:19] <camelia> rakudo-moar e87b7afb0: OUTPUT: «===SORRY!===␤Could not find DateTime::Format at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/perl6␤    C…»

[22:28] *** molaf joined
[22:29] *** p6bannerbot sets mode: +v molaf

[22:31] <jnthn> Xliff: Just do .done on the sending end :)

[22:31] <yoleaux> 21:42Z <Xliff> jnthn: What is the best way to close all taps on a Supply?

[22:32] <Xliff> jnthn: Can't. That supplier is lost

[22:32] <jnthn> Don't lose it? ;-)

[22:33] <Xliff> This code should look familier: https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Roles/Signals/Generic.pm6#L19

[22:33] <Xliff> *blush*

[22:33] <jnthn> But otherwise, you can build a mechanism like `my $cancel = Promise.new; sub cancellable(Supply $s) { supply { whenever $s { .emit }; whenever $cancel { done } } }`

[22:33] <Xliff> s/familier/familiar/

[22:34] <jnthn> Then call cancellable on every Supply before tapping it, and then .keep the Promise to terminate the lot

[22:34] <Xliff> But I do understand your point. It makes for a LOT of code refactoring, and I was hoping there was a way to cheat.

[22:34] <jnthn> What I suggested is probably the best cheat 

[22:34] <Xliff> Yes. It probably is. :(

[22:35] <Xliff> Well! Fair dinkum! ;)

[22:35] <Xliff> jnthn++

[22:35] <Xliff> Oh, and while I have you... I mangled another piece of your code.

[22:35] <Xliff> https://github.com/Xliff/p6-VisualGrammar/blob/master/lib/Grammar/Gatherer.pm6

[22:35] <Xliff> Allows data collection of hit grammar rules, based on Grammar::Tracer.

[22:36] <Xliff> Do you think it would be useful, if it was cleaned up?

[22:39] *** kensanata left
[22:39] <jnthn> Xliff: Well, it's not safe for concurrent uses of the same grammar

[22:39] <jnthn> But maybe that's an acceptable limitation?

[22:40] <Xliff> Is there a way to achieve that, and could you give me a hint? 

[22:40] <jnthn> Hmm.

[22:40] <Xliff> But I wouldn't expect this to be used concurrently. At least not as-is.

[22:40] <jnthn> Yeah, I'd probably just document it

[22:41] <jnthn> If you find it useful, probably somebody else would; I'd just include an example of the kind of output it makes, to try and communicate better why it might be useful

[22:43] <Xliff> Yes. I'm currently using it for https://github.com/Xliff/p6-VisualGrammar

[22:43] <Xliff> Without it, I couldn't cover the FAIL case.

[22:43] <jnthn> ah, I see

[22:59] *** Cabanossi left
[23:00] *** Cabanossi joined
[23:01] *** p6bannerbot sets mode: +v Cabanossi

[23:14] *** MasterDuke joined
[23:14] *** p6bannerbot sets mode: +v MasterDuke

[23:14] *** MasterDuke left
[23:14] *** MasterDuke joined
[23:14] *** herbert.freenode.net sets mode: +v MasterDuke

[23:14] *** p6bannerbot sets mode: +v MasterDuke

[23:18] <TreyHarris> Kaiepi: Could I ask you a module design question? Why did you decide to implement Digest::BubbleBabble as a unit class with all "static methods"? Wouldn't a module with exported functions have been cleaner?

[23:18] *** molaf left
[23:19] <TreyHarris> Since AFAICT the class has no instance state at all

[23:19] <Xliff> Those are catch-alls.

[23:19] <Xliff> And rather than export the functions, it keeps everything in it's own "space"

[23:19] <Xliff> So as not to clutter MAIN

[23:19] <Xliff> That would at least be my reason for doing that.

[23:21] <Xliff> m: my $a = $*SCHEDULER.cue({ 1.say }, in => 2); $a.cancel;

[23:21] <camelia> rakudo-moar e87b7afb0: ( no output )

[23:21] <Xliff> m: my $a = $*SCHEDULER.cue({ 1.say }, in => 2); 

[23:21] <camelia> rakudo-moar e87b7afb0: ( no output )

[23:21] <Xliff> m: my $a = $*SCHEDULER.cue({ 1.say }, in => 2); await $a

[23:21] <camelia> rakudo-moar e87b7afb0: OUTPUT: «An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤    Can only specify Awaitable objects to await (got a Cancellation)␤      in block <unit> at <tmp> line 1␤␤»

[23:22] <Xliff> m: my $a; await start $a = $*SCHEDULER.cue({ 1.say }, in => 2); 

[23:22] <camelia> rakudo-moar e87b7afb0: ( no output )

[23:22] <Xliff> m: my $a; await start { $a = $*SCHEDULER.cue({ 1.say }, in => 2); } 

[23:22] <camelia> rakudo-moar e87b7afb0: ( no output )

[23:22] <Xliff> m: my $a = $*SCHEDULER.cue({ 1.say }, in => 2); $a.cancel; sleep 3

[23:22] <camelia> rakudo-moar e87b7afb0: ( no output )

[23:23] <Xliff> m: my $a = $*SCHEDULER.cue({ 1.say }, in => 2); sleep 3

[23:23] <camelia> rakudo-moar e87b7afb0: OUTPUT: «1␤»

[23:23] <TreyHarris> Xliff: How do you pass a "static method" like that as a value? That's why I noticed this; I wanted to set a variable to Digest::BubbleBabble.encode(), but I can't figure out the syntax. The way you'd do it for a function, it complains about the number of positionals no matter what syntax I've tried to use

[23:24] <Kaiepi> TreyHarris, i don't like exporting subs in case of namespace conflicts

[23:24] <TreyHarris> (set a variable like `my $func = ...` so that I could later do `$func($data)`)

[23:24] <Kaiepi> check t/01-basic.t for examples on how to use it

[23:25] <TreyHarris> Kaiepi: I don't see in 01-basic.t any case of the method being assigned to a variable; it seems to be used literally there. Which line are you talking about?

[23:26] <Kaiepi> wait what are you trying to do?

[23:26] <Kaiepi> oh

[23:26] <TreyHarris> Let the encoding function be set to different things, one of which being Digest::BubbleBabble.encode

[23:27] <Kaiepi> do something like sub bubblebabble-encode(Blob $data --> Blob) { Digest::BubbleBabble.encode: $data }

[23:33] <Kaiepi> actually there's a way you can do it like my &bubblebabble-encode = ...

[23:33] <Kaiepi> gimme a sec

[23:34] *** kurahaupo joined
[23:35] *** p6bannerbot sets mode: +v kurahaupo

[23:36] <Kaiepi> TreyHarris, my &bubblebabble-encode = Digest::BubbleBabble.^lookup('encode').assuming(Digest::BubbleBabble)

[23:40] *** dct joined
[23:40] *** p6bannerbot sets mode: +v dct

[23:48] *** jme` joined
[23:48] *** kurahaupo left
[23:48] <TreyHarris> Sorry... I'm not making myself clear, apologies... let me try another way: if it were `unit module Digest::BubbleBabble; our sub encode(Blob $digest --> Blob)`, you could just do `my $encoder = &Digest::BubbleBabble::encode; ... $encoder($data)...` and it wouldn't pollute any namespace, would it?

[23:48] *** p6bannerbot sets mode: +v jme`

[23:48] <TreyHarris> I shouldn't have used the word "export" like that since it's also a keyword

[23:51] <TreyHarris> Kaiepi: I meant that I didn't understand why it was using a class rather than a module, not methods rather than exported subs. Sorry for writing the question so confusingly

[23:53] <Kaiepi> i guess

[23:53] <Kaiepi> i'll make it a module instead of a class

[23:54] <TreyHarris> The "normal" calling pattern doesn't change but for "use" -> "need" and "BubbleBabble." -> "BubbleBabble::"

[23:55] *** w_richard_w joined
[23:55] *** p6bannerbot sets mode: +v w_richard_w

[23:57] <TreyHarris> It's really easy to turn a sub or multi into a method, but the reverse requires ugly MOP stuff like ^lookup. But that's just my impression; I'm probably missing an important wrinkle here

[23:59] *** dct left
