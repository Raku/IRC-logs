[00:23] <discord6> <RaycatWhoDat> Would it be possible to get a code review of this toy program?

[00:23] <tellable6> 2019-08-26T23:38:49Z #perl6 <AlexDaniel> RaycatWhoDat now you can use the bots from discord! All *able6 bots!

[00:23] <SmokeMachine> I was watching Laurent Rosenfeld's talk video and finished up doing this... is it interesting somehow?

[00:23] <discord6> <RaycatWhoDat> o

[00:23] <SmokeMachine> https://www.irccloud.com/pastebin/n8NRGXvY/

[00:23] <discord6> <RaycatWhoDat> m: say (1 + 1)

[00:23] <evalable6> RaycatWhoDat, rakudo-moar 0455f42e3: OUTPUT: ¬´2‚ê§¬ª

[00:23] <discord6> <RaycatWhoDat> Neato.

[00:23] <discord6> <RaycatWhoDat> Thanks, guy!

[00:24] <AlexDaniel> it was tobs :)

[00:25] <AlexDaniel> RaycatWhoDat: anyway, where's the program?

[00:25] <tellable6> AlexDaniel, I'll pass your message to RaycatWhoDat

[00:25] <AlexDaniel> oooops

[00:25] <AlexDaniel> tobs: that doesn't work! :)

[00:25] <discord6> <RaycatWhoDat> üòÆ

[00:25] <tellable6> 2019-08-28T00:25:43Z #perl6 <AlexDaniel> RaycatWhoDat: anyway, where's the program?

[00:26] <AlexDaniel> let me fix that real quick‚Ä¶

[00:27] <discord6> <RaycatWhoDat> Here ya go: https://github.com/RayMPerry/kitchen-sink/blob/master/perl6/bottles-of-beer.p6

[00:27] <discord6> <RaycatWhoDat> I wrote it as na√Øvely as possible

[00:27] <discord6> <RaycatWhoDat> But it's Perl so, it should all fit on four or so lines. üòõ

[00:28] <AlexDaniel> pluralize is wrong, it's ‚Äú0 bottles‚Äù

[00:28] <AlexDaniel> what about `for $bottlesOfBeer ‚Ä¶ 0 {}` ?

[00:29] <discord6> <RaycatWhoDat> That's fair.

[00:30] <discord6> <RaycatWhoDat> Changed both of those.

[00:31] <discord6> <RaycatWhoDat> Although the latter change became for $bottlesOfBeer ... 0 -> $remainingBottles {

[00:33] <discord6> <RaycatWhoDat> Oh, wait. I don't have to do that, do I? $_ would become my variable, right?

[00:33] <AlexDaniel> a have a solution in 192 characters and somebody did it in 102

[00:33] <AlexDaniel> yeah, $_ will be your thing then :)

[00:34] <discord6> <RaycatWhoDat> Sweet. Also, 102 characters is insane.

[00:35] <AlexDaniel> I think so too, yeah. I should try it again one day

[00:36] *** lgtaube left
[00:38] <Geth> ¬¶ whateverable: 0572755c90 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6

[00:38] <Geth> ¬¶ whateverable: Fix wrong automatic .tell to bridged users

[00:38] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/0572755c90

[00:39] *** tellable6 left
[00:43] *** tellable6 joined
[00:45] <AlexDaniel> hey, RaycatWhoDat can you say something?

[00:45] *** lucasb left
[00:45] <AlexDaniel> I want to see if the fix to the bot is working‚Ä¶

[00:48] <AlexDaniel> you can also use { } for pluralize on the last line

[00:48] <AlexDaniel> say "$distribution, $nextNumber bottle{pluralize($nextNumber)} of beer on the wall.";

[00:59] <discord6> <RaycatWhoDat> something

[01:00] <discord6> <RaycatWhoDat> Also, thanks. I'll add it.

[01:10] *** hobbified is now known as hobbs

[01:10] *** hobbs left
[01:10] *** hobbs joined
[01:14] <AlexDaniel> RaycatWhoDat: test test

[01:14] <AlexDaniel> ok, seems to be working

[01:20] <Geth> ¬¶ doc: tbrowder++ created pull request #2982: Openers

[01:20] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2982

[01:21] <Geth> ¬¶ doc: 641049f01e | (Tom Browder)++ | doc/Language/opener-chars.pod6

[01:21] <Geth> ¬¶ doc: add new pod6 doc for valid opener brackets

[01:21] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[01:21] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/641049f01e

[01:21] <Geth> ¬¶ doc: 891037ca2b | (Tom Browder)++ | doc/Language/00-POD6-CONTROL

[01:21] <Geth> ¬¶ doc: add new doc to the control file

[01:21] <synopsebot> Link: https://doc.perl6.org/language/00-POD6-CONTROL

[01:21] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/891037ca2b

[01:21] <Geth> ¬¶ doc: 97f9e14b2d | (Tom Browder)++ (committed using GitHub Web editor) | 2 files

[01:21] <Geth> ¬¶ doc: Merge pull request #2982 from tbrowder/openers

[01:21] <Geth> ¬¶ doc: 

[01:21] <Geth> ¬¶ doc: Openers

[01:21] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/97f9e14b2d

[01:30] *** molaf left
[01:40] *** zakharyas joined
[01:40] *** wildtrees left
[01:43] *** molaf joined
[01:54] *** luoheng joined
[02:04] *** Manifest0 left
[02:04] *** Manifest0 joined
[02:20] *** luoheng left
[02:23] *** lgtaube joined
[02:33] *** AlexDani` joined
[02:37] *** AlexDaniel left
[02:45] *** AlexDani` is now known as AlexDaniel

[02:45] *** AlexDaniel left
[02:45] *** AlexDaniel joined
[02:59] *** Cabanoss- joined
[02:59] *** Cabanossi left
[03:04] *** MasterDuke left
[03:29] *** Doc_Holliwood left
[03:29] *** jaldhar_ joined
[03:36] *** jaldhar_ left
[03:36] *** jaldhar_ joined
[03:38] *** jaldhar_ left
[03:38] *** jaldhar_ joined
[03:57] *** [Sno] left
[04:07] *** [particle] joined
[04:09] *** [particle]1 left
[04:14] *** [particle] left
[04:14] *** jaldhar_ left
[04:14] *** [particle] joined
[04:14] *** jaldhar_ joined
[04:16] *** jaldhar_ left
[04:16] *** jaldhar_ joined
[04:23] *** [particle]1 joined
[04:24] *** molaf left
[04:24] *** [particle] left
[04:44] *** Herby_ left
[04:44] *** curan joined
[05:02] *** jaldhar_ left
[05:02] *** jaldhar_ joined
[05:25] *** robertle left
[05:26] *** sauvin joined
[05:42] *** jaldhar_ left
[05:42] *** jaldhar_ joined
[05:45] *** [particle]1 left
[05:46] *** [particle] joined
[05:54] *** [particle]1 joined
[05:55] *** [particle] left
[06:00] *** [particle] joined
[06:02] *** epony left
[06:02] *** [particle]1 left
[06:03] *** [particle]1 joined
[06:05] *** [particle] left
[06:07] *** domidumont joined
[06:08] *** domidumont left
[06:09] *** [particle]1 left
[06:10] *** jaldhar_ left
[06:10] *** jaldhar_ joined
[06:12] *** jaldhar_ left
[06:12] *** jaldhar_ joined
[06:14] *** [particle] joined
[06:18] *** [particle]1 joined
[06:19] *** antoniogamiz joined
[06:19] *** [particle] left
[06:19] <antoniogamiz> o/// 

[06:21] <antoniogamiz> can I know the index of an element inside a map?

[06:21] <antoniogamiz> i though using :item or :label I could do it

[06:21] <antoniogamiz> but they return (Mu)

[06:48] *** cpan-p6 left
[06:49] *** cpan-p6 joined
[06:49] *** cpan-p6 left
[06:49] *** cpan-p6 joined
[06:49] *** k0Le left
[06:50] *** domidumont joined
[06:50] *** k0Le joined
[06:53] <moritz> m: my @a = <a b c>; say join ' ', map { "$^a:$^b"} @a.kv

[06:53] <evalable6> moritz, rakudo-moar 0455f42e3: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/oyQxxyIhuW‚ê§Missing‚Ä¶¬ª

[06:53] <evalable6> moritz, Full output: https://gist.github.com/f970516ecaa3ac8460e37696a2f6cc3e

[06:53] <moritz> m: my @a = <a b c>; say join ' ', map { "$^a:$^b"}, @a.kv

[06:53] <evalable6> moritz, rakudo-moar 0455f42e3: OUTPUT: ¬´0:a 1:b 2:c‚ê§¬ª

[06:53] <moritz> antoniogamiz: like this

[06:54] <antoniogamiz> oh thanks :)

[06:54] <moritz> or you can iterate over .pairs and then access .key and .value in the map block

[07:00] *** k0Le left
[07:06] *** k0Le joined
[07:10] *** [particle] joined
[07:12] *** [particle]1 left
[07:13] *** __jrjsmrtn__ left
[07:15] *** __jrjsmrtn__ joined
[07:17] *** patrickb joined
[07:19] *** Doc_Holliwood joined
[07:30] *** holyghost left
[07:32] *** [particle]1 joined
[07:35] *** [particle] left
[07:35] *** jjmerelo joined
[07:38] <antoniogamiz> can someone paste an emoji of a butterfly? :D

[07:38] <timotimo> √∞¬ü¬¶¬ã

[07:39] * timotimo shakes fist at openbsd or whatever runs on this terrible machine

[07:39] <hobbs> that came out rather garbly here. How about ü¶ã

[07:39] <antoniogamiz> hahaha

[07:39] <antoniogamiz> hobbs: I can only a rectangle

[07:39] <timotimo> there's supposed to be something there?

[07:39] <hobbs> install font with more butterfly

[07:40] <antoniogamiz> with more butterfly? which is that? 

[07:41] <hobbs> I dunno :)

[07:41] <hobbs> m: "ü¶ã".uniname

[07:41] <evalable6> hobbs, rakudo-moar 0455f42e3: OUTPUT: ¬´¬ª

[07:41] <hobbs> hmm

[07:41] <moritz> antoniogamiz: often browsers have better font fallback support. Try https://colabti.org/irclogger/irclogger_log/perl6?date=2019-08-28#l161

[07:42] *** jaldhar_ left
[07:42] <antoniogamiz> em that points to your message I think

[07:42] *** jaldhar_ joined
[07:43] <moritz> oops, sorry. Then scroll up a bit :D

[07:43] <antoniogamiz> but.. to where? x'D

[07:44] <antoniogamiz> sorry for not getting it, but I've tried the things timotimo and hobbs have said

[07:44] *** jaldhar_ left
[07:44] *** jaldhar_ joined
[07:48] <moritz> to the line "that came out rather garbly here. How about ü¶ã"

[07:48] <moritz> that might be rendered correctly in your browser

[07:49] *** [particle]1 left
[07:49] *** [particle] joined
[07:50] <CIAvash> antoniogamiz: You can use Noto Color Emoji font (if you're on Linux) or Twitter Color Emoji font(twemoji-color-font)

[07:52] *** scimon joined
[07:53] *** patrickb left
[07:53] <jjmerelo> We're still testing the new document generation script by antoniogamiz here: https://docs-stage.p6c.org/

[07:53] <tellable6> 2019-08-28T01:14:53Z #whateverable <AlexDaniel> jmerelo: bot test. Please ignore

[07:53] <tellable6> https://gist.github.com/a925cdca6f46d3dff1b5cc3b70265400

[07:54] *** antoniogamiz left
[07:54] <jjmerelo> Please check it out thoroughly. When all bugs have been ironed out, this will be deployed to generate the documentation from perl6/doc

[07:55] <jjmerelo> Here's the roadmap https://github.com/perl6/doc/issues/2983

[07:55] <jjmerelo> Please check it out, comment, make suggestions...

[08:03] *** dolmen joined
[08:03] *** dolmen left
[08:03] *** dolmen joined
[08:15] *** Xliff joined
[08:15] <Xliff> \o

[08:15] <Xliff> What's the best way to track down a MoarVM panic?

[08:18] <timotimo> you can run the program in gdb, "break MVM_panic" and then "call MVM_dump_backtrace(tc)"

[08:18] <Xliff> timo! :D

[08:18] <Xliff> Is this early or late for you?

[08:19] *** dolmen left
[08:19] <timotimo> early

[08:19] <Xliff> timotimo: https://github.com/Xliff/p6-GStreamer

[08:20] <Xliff> I want to get it to a point where you can put GStreamer video onto a Clutter actor. ;q

[08:20] <Xliff> OK, what's the best way to break perl6-gdb-m before a script actually runs so you can set up some breakpoints.

[08:20] <Xliff> Or would this be a good place for Comma?

[08:21] *** dolmen joined
[08:21] <timotimo> comma doesn't do C-level breakpoints

[08:21] <Xliff> Oh. :(

[08:21] <timotimo> i usually just ctrl-c the program, set the breakpoints, then "run" it from the start

[08:21] <Xliff> Ah. OK. 

[08:21] <Xliff> "MoarVM panic: native callback ran on thread (140336699950848) unknown to MoarVM"

[08:22] <timotimo> yeah, when a library calls a callback from another thread, that's complicated to deal with for moarvm

[08:23] <Xliff> Grr...

[08:23] <timotimo> i haven't had to deal with this topic at all yet

[08:23] <Xliff> So it might be internal to GStreamer?

[08:23] *** reach_satori left
[08:24] <timotimo> no clue

[08:27] <Xliff> wtf?

[08:27] <Xliff> Running it from perl6-gdb-m I get a completely different behavior

[08:27] <Xliff> "Error while reading from file: Malformed UTF-8"

[08:31] *** sena_kun joined
[08:32] <Xliff> https://gist.github.com/Xliff/280611277686d069d53859760db09ce3

[08:32] <Xliff> ^^ backtrace

[08:33] <timotimo> yeah it looks like gstreamer has a thread pool of its own and is trying to call into your code from there

[08:34] <Xliff> Dammit.

[08:34] <Xliff> Any idea if this is something that will be supported in the future?

[08:35] <timotimo> not sure how best to handle that. perhaps a dedicated moarvm threadcontext that does nothing but handle "thread-foreign" callbacks could be set up

[08:36] <Xliff> OK. Any workarounds you can think of?

[08:36] <timotimo> not really

[08:36] <Xliff> Otherwise events just can't be supported, and that will really be a blow to bringing GStreamer support to Perl6. :(

[08:37] <timotimo> cat time!

[08:37] <Xliff> :)

[08:44] *** pecastro joined
[08:46] *** jjmerelo left
[08:49] <timotimo> cat time already done

[08:50] *** rindolf joined
[08:50] <Geth> ¬¶ problem-solving: Xliff assigned to jnthn Issue MoarVM Support of Callbacks in a Different Thread https://github.com/perl6/problem-solving/issues/96

[08:57] *** vike left
[08:58] *** vike joined
[09:01] *** epony joined
[09:11] <kawaii> timotimo: there is always time for more cat time

[09:12] *** curan left
[09:12] *** zakharyas left
[09:13] *** curan joined
[09:16] <domidumont> Hi, On Debian/unstable with libuv 1.30.1, rakudo fails installation with "No writeable path found, /home/domi/debian-dev/build-area/rakudo-2019.07.1/debian/rakudo/usr/lib/perl6/core not writeable"

[09:16] <domidumont> We've seen this problem occurs with rakudo 2018.12 and 2019.07

[09:16] <domidumont> For instance see this build log https://buildd.debian.org/status/fetch.php?pkg=rakudo&arch=amd64&ver=2018.12-5%2Bb1&stamp=1565163228&raw=0

[09:17] <domidumont> Note that rakudo 2018.12  did build fine with libuv 1.24.1

[09:17] <domidumont> Any idea on how to fix this issue ?

[09:23] *** BuildTheRobots left
[09:24] *** BuildTheRobots joined
[09:26] *** holyghost joined
[09:27] <timotimo> kawaii: not when the cat leaves

[09:29] <scimon> Cat time is decided upon by the cat.

[09:29] <scimon> It is true.

[09:29] <timotimo> 100%

[09:29] *** Doc_Holliwood left
[09:32] <Xliff> Don't I know it. I have 2

[09:33] <timotimo> 200%

[09:33] <Xliff> More like 4....

[09:36] <scimon> :)

[09:38] <Xliff> m: sub a ($aa is rw) { say '0

[09:38] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/ybMI6g4c3U‚ê§Unable ‚Ä¶¬ª

[09:38] <evalable6> Xliff, Full output: https://gist.github.com/2c913d66a5a00a6d5fccb6b040f311b3

[09:38] <Xliff> m: sub a ($aa is rw) { say '0' }; a($)

[09:38] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´0‚ê§¬ª

[09:40] <Xliff> m: sub a ($aa is rw) { 1, 2 }; a($)

[09:40] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´¬ª

[09:40] <Xliff> m: sub a ($aa is rw) { 1, 2 }; a($).say

[09:40] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(1 2)‚ê§¬ª

[09:41] <Xliff> m: sub a ($aa is rw) { 1, 2 }; my $l = a($); $l.say;

[09:41] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(1 2)‚ê§¬ª

[09:41] <scimon> What are you trying to do?

[09:41] <Xliff> Damn. I was hoping $l == 1

[09:41] <scimon> Right.

[09:41] <Xliff> Is there a way to return a list with optional elements?

[09:42] <Xliff> Rather... I would like to return the list so that if I ask for a singular item, like above, I would only get 1 value?

[09:42] <scimon> m: sub a () { 1,2 }; my ($l) = a(); $l.say;

[09:42] <evalable6> scimon, rakudo-moar 0455f42e3: OUTPUT: ¬´1‚ê§¬ª

[09:42] <scimon> ?

[09:42] <Xliff> Yeah. I was hoping to do it without the parens.

[09:42] <Xliff> I know I can do it that way.

[09:43] <scimon> Figured you might.

[09:43] <scimon> That would require the function to know the context it's being called in an Perl6 doesn't do that.

[09:43] <Xliff> Yeah. Thought so.

[09:43] <scimon> (As per my understanding. I may be wrong).

[09:44] <jnthn> Yes, it's correct. I guess that's the revenge of multi-dispatch. :)

[09:44] <scimon> On the bright side. Multi dispatch is AWESOME. So you know. Swings and roundabouts.

[09:44] <Xliff> jnthn: Good morning.

[09:44] <Xliff> https://github.com/perl6/problem-solving/issues/96

[09:45] <Xliff> m: sub a ($aa is rw, :$all = False) { $all ?? 1 !! 1, 2 }; my $l = a($); $l.say;

[09:45] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(1 2)‚ê§¬ª

[09:45] <Xliff> m: sub a ($aa is rw, :$all = False) { $all ?? 1, 2 !! 1}; my $l = a($); $l.say;

[09:45] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/sVRR6ieSYC‚ê§Precede‚Ä¶¬ª

[09:45] <evalable6> Xliff, Full output: https://gist.github.com/4ca1a1d6d8670470d43be278a7385584

[09:45] *** kensanata joined
[09:45] <Xliff> m: sub a ($aa is rw, :$all = False) { $all ?? (1, 2) !! 1 }; my $l = a($); $l.say;

[09:45] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´1‚ê§¬ª

[09:56] <tbrowder> \o/ top of the utc-6 morning to all

[09:56] <Xliff> \o tbrowder

[09:56] <tbrowder> o/ Xliff

[09:57] <Xliff> I disbelieve. It's not tomorrow until I've gone to sleep. <denial>It's still wednesday!</denial>

[09:58] *** pilne left
[09:59] <tbrowder> i need jj's or antoniogamiz's help with new doc i added yesterday-- it's not showing up on the current doc site

[10:01] *** Black_Ribbon left
[10:03] <tbrowder> i may be in backslash hell with that doc (opener-chars.pod6)

[10:08] <tbrowder> ah, i see an error in it: no "=end pod" at the end!,

[10:09] <Geth> ¬¶ doc: 4ba74a7af4 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/opener-chars.pod6

[10:09] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[10:09] <Geth> ¬¶ doc: add missing line at enc

[10:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4ba74a7af4

[10:10] <kawaii> AlexDaniel: 

[10:10] <kawaii> started another Blin run

[10:13] *** sena_kun left
[10:14] <rindolf> https://www.mail-archive.com/perl6-users@perl.org/msg06933.html - posts like this make me sigh - deja vu

[10:19] <tbrowder> rindolf: are you aware of anyone using p6 for ml?

[10:19] <rindolf> tbrowder: no

[10:20] <tbrowder> that could be a "killer" thing for p6

[10:21] <tbrowder> i'll bet jnthn could whip up a system in no time--he wears a red cape!

[10:21] <rindolf> tbrowder: i mean the general "can someone please implement $insert-time-consuming-feature-here"

[10:22] <kawaii> pretty sure Python sadly has the ML demographic locked down

[10:23] <tbrowder> i know...just dreaming. howver, maybe use an open source py project and inlinepython...

[10:23] <Xliff> Mailing lists?

[10:24] <tbrowder> ??

[10:24] <rindolf> tbrowder: someone once told me that vista which will mix win xp and win ce will be ms' killer os

[10:24] <Xliff> Python would outperform P6 on high traffic sites, but the features....

[10:24] <Xliff> tbrowder: Oh. I thought you were talking Mailing Lists when you said "ml"

[10:24] <tbrowder> no, but sympa uses p5

[10:25] <Xliff> Yep. I remember sympa

[10:25] <rindolf> and it didnt mix ce and was almost universally hated

[10:26] <tbrowder> i'm about to go to sympa. why the hate?

[10:29] <tbrowder> mm3 was my hope but it seems to be in too many pieces to understand for a non-python person

[10:29] <Xliff> tbrowder: What did you mean by "ml"?

[10:30] <Xliff> re: symba - It was a complex beast to set up, but once done it wasn't bad.

[10:30] <tbrowder> i though ml was machine learning

[10:30] <Xliff> Oooooo

[10:30] <tbrowder> ai

[10:30] <tbrowder> big data

[10:30] <tbrowder> Yeeeeeessss

[10:31] <Xliff> I think P6 would be great for that kinda stuff. Could *ahem* borrow from what Python is doing.

[10:32] <tbrowder> a young one like antoniogamiz should charge into that fray

[10:33] <tbrowder> did you see the pic of him and jj in a mini-p6 hackathon?

[10:38] <scimon> So for the ML stuff it's mostly providing a nice interface to something like TensorFlow right?

[10:38] <scimon> Sounds like a job for NativeCall.

[10:39] <scimon> In fact DrForr started something along those lines a couple of years ago : https://github.com/drforr/perl6-TensorFlow

[10:40] <scimon> (Though... the github name and the module seem at odds).

[10:43] <tbrowder> yeah, looks like he was copy/pasting ready to start a new project

[10:43] *** dolmen left
[10:44] <scimon> Ahhh...

[10:47] *** dolmen joined
[10:49] <Geth> ¬¶ doc: 88e43474fb | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/opener-chars.pod6

[10:49] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[10:49] <Geth> ¬¶ doc: try to fix one line

[10:49] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/88e43474fb

[10:51] <Geth> ¬¶ doc: 42f74481d4 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/opener-chars.pod6

[10:51] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[10:51] <Geth> ¬¶ doc: try this fix

[10:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/42f74481d4

[10:56] <Geth> ¬¶ doc: 7319954974 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/opener-chars.pod6

[10:56] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[10:56] <Geth> ¬¶ doc: add blank line

[10:56] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7319954974

[10:59] *** dolmen left
[11:01] *** pat_js joined
[11:10] <Kaiepi> m: say |(|((|(("Baby", "Mommy", "Daddy", "Grandma", "Grandpa") X[~] " shark"), "Let's go hunt") XZ[~] (|(("," ~ (" doo" x 5)) xx 3), "!")), "Run away...").join("\n")

[11:10] <evalable6> Kaiepi, rakudo-moar 0455f42e3: OUTPUT: ¬´Baby shark, doo doo doo doo doo‚ê§Baby shark, doo doo doo doo doo‚ê§Baby shark, doo doo doo do‚Ä¶¬ª

[11:10] <evalable6> Kaiepi, Full output: https://gist.github.com/c218c8f9dc9a5b35f2b4f35974984642

[11:10] <Kaiepi> baby shark song in one statement without repeating a single part of it

[11:39] *** kensanata left
[11:42] <scimon> For true evil you need to encode and decode the strings.

[11:54] *** dolmen joined
[12:32] *** Doc_Holliwood joined
[12:36] *** sena_kun joined
[12:45] *** lucasb joined
[12:45] *** zakharyas joined
[12:57] *** dolmen left
[12:58] *** zakharyas left
[13:01] *** dolmen joined
[13:05] *** pat_js left
[13:15] <rindolf> tbrowder: not all ai is ml

[13:17] <rindolf> tbrowder: see https://twitter.com/turingfan

[13:17] *** zakharyas joined
[13:27] <kawaii> Kaiepi: why did you make this? It's the best and worst thing I've ever seen

[13:33] *** pat_js joined
[13:40] <tbrowder> rindolf: correct

[13:49] *** zakharyas left
[13:53] *** Kaiepi left
[13:53] *** Kaypie joined
[13:55] *** curan left
[13:57] *** zakharyas joined
[13:58] *** molaf joined
[14:00] *** Kaypie left
[14:00] *** Merfont joined
[14:02] <Doc_Holliwood> good morning you beautiful people

[14:08] <sena_kun> o/

[14:15] *** zakharyas left
[14:16] <Merfont> kawaii, because it's fun to try to write terrible ideas 

[14:16] *** Merfont is now known as Kaiepi

[14:18] <Kaiepi> if i started thinking about it now, i could probably come up with a part 2 to zoffix's "the grinch" advent calendar article from a year or two ago

[14:19] *** jaldhar_ left
[14:19] *** jaldhar_ joined
[14:27] *** jaldhar_ left
[14:27] <AlexDaniel> Kaiepi: now make it shorter by replacing strings with unicode characters and then using .uninames to extract the strings

[14:27] *** jaldhar_ joined
[14:29] <scimon> m: say "ü¶à".uninames.tclc

[14:29] <evalable6> scimon, rakudo-moar 0455f42e3: OUTPUT: ¬´Shark‚ê§¬ª

[14:29] <scimon> :D

[14:32] <AlexDaniel> domidumont: please file a rakudo bug

[14:32] <AlexDaniel> scimon: that's right :)

[14:32] *** ribasushi left
[14:34] <Doc_Holliwood> guys, i have written this https://github.com/holli-holzer/perl6-Win-VT/blob/master/README.md

[14:34] <Doc_Holliwood> I'm not sure if I'm happy with the name though, what do you think?

[14:39] *** mowcat joined
[14:39] *** ribasushi joined
[14:39] *** mowcat left
[14:40] *** mowcat joined
[14:40] <vrurg> Doc_Holliwood: considering that there could be VTs for other platforms too, I'd suggest just switching the order of subparts to make it easier to create a family of modules in the future: VT::Win

[14:40] *** k0Le left
[14:45] <Doc_Holliwood> my understanding is linux and macos have that by default

[14:47] <vrurg> Doc_Holliwood: the world is not limited to these three. 

[14:48] <Doc_Holliwood> what other platforms do we support?

[14:49] <Doc_Holliwood> my concern was more wether or not I should add the Terminal noun. Terminal::VT::Win?

[14:50] *** MilkmanDan left
[14:50] <vrurg> Doc_Holliwood: the question is not what we support now but what else could we support in the future. Do you know that OS/2 is not really dead yet? Terminal::VT:: is good too, I think. 

[14:51] <vrurg> Adding Terminal has second good thing in it: this is perhaps the most searchable word if somebody needs something related.

[14:52] *** MilkmanDan joined
[14:55] <domidumont> AlexDaniel: There's a similar problem for arch linux https://github.com/rakudo/rakudo/issues/3090 . I'll add some info in this bug instead of creating a new one

[14:56] <AlexDaniel> domidumont: we're definitely fixing it for the next release which will happen umm‚Ä¶ which will happen! :)

[14:57] <AlexDaniel> hopefully mid September

[14:59] *** kensanata joined
[15:02] *** ravenous_ left
[15:02] *** stux|RC-- left
[15:04] *** pat_js left
[15:05] *** stux|RC-only joined
[15:05] *** ravenous_ joined
[15:13] *** ufobat_ joined
[15:17] *** ufobat__ left
[15:23] *** domidumont left
[15:35] *** pat_js joined
[15:39] *** niceplace_ joined
[15:40] *** k0Le joined
[15:45] <Geth> ¬¶ doc: tbrowder++ created pull request #2984: update to show opener characters correctly

[15:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2984

[15:52] <Geth> ¬¶ doc: 094d2bffd1 | (Tom Browder)++ | doc/Language/opener-chars.pod6

[15:52] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[15:52] <Geth> ¬¶ doc: update to show opener characters correctly

[15:52] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/094d2bffd1

[15:52] <Geth> ¬¶ doc: bdea4a22ea | (Tom Browder)++ | doc/Language/opener-chars.pod6

[15:52] <Geth> ¬¶ doc: add missing pieces

[15:52] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bdea4a22ea

[15:52] <Geth> ¬¶ doc: 0be167409d | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/opener-chars.pod6

[15:52] <Geth> ¬¶ doc: Merge pull request #2984 from tbrowder/opener-update

[15:52] <Geth> ¬¶ doc: 

[15:52] <Geth> ¬¶ doc: update to show opener characters correctly

[15:52] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0be167409d

[15:53] *** scimon left
[16:08] *** MasterDuke joined
[16:24] *** Doc_Holliwood left
[16:26] *** khisanth_ left
[16:27] *** pyrimidine joined
[16:36] *** wildtrees joined
[16:36] *** wildtrees left
[16:37] *** wildtrees joined
[16:38] *** sena_kun left
[16:39] *** khisanth_ joined
[16:47] *** pat_js left
[16:52] *** ChoHag left
[16:59] *** squashable6 left
[17:00] *** squashable6 joined
[17:00] *** ChanServ sets mode: +v squashable6

[17:02] *** dolmen left
[17:07] *** ChoHag joined
[17:11] <Geth> ¬¶ doc: tbrowder++ created pull request #2985: escape the table pipes for proper table handling

[17:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2985

[17:12] <Geth> ¬¶ doc: be6122e43a | (Tom Browder)++ | doc/Language/opener-chars.pod6

[17:12] <Geth> ¬¶ doc: escape the table pipes for proper table handling

[17:12] <synopsebot> Link: https://doc.perl6.org/language/opener-chars

[17:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/be6122e43a

[17:12] <Geth> ¬¶ doc: 8ea87dd243 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/opener-chars.pod6

[17:12] <Geth> ¬¶ doc: Merge pull request #2985 from tbrowder/opener-update2

[17:12] <Geth> ¬¶ doc: 

[17:12] <Geth> ¬¶ doc: escape the table pipes for proper table handling

[17:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8ea87dd243

[17:16] *** kensanata left
[17:16] *** Actualeyes joined
[17:24] *** domidumont joined
[17:26] *** domidumont left
[17:27] *** domidumont joined
[17:35] <Kaiepi> if you have a method that mutates a class' state predictably, but otherwise doesn't do anything that could be considered impure, can you still use the is pure trait with it?

[17:42] <Kaiepi> basically what i'm asking is can i make every method of this role pure? http://fpaste.scsys.co.uk/585866

[17:44] *** k0Le left
[17:45] *** k0Le joined
[17:47] <timotimo> "is pure" will currently only happen when a value is known

[17:49] *** squashable6 left
[17:50] <timotimo> also, method lookup is probably too late-bound to happen in the optimizer stage

[17:52] *** Cabanoss- left
[17:54] *** Cabanossi joined
[17:54] *** squashable6 joined
[17:54] *** ChanServ sets mode: +v squashable6

[18:06] <tbrowder> .tell jjmerelo the new doc page looks pretty good on my local

[18:06] <tellable6> tbrowder, I'll pass your message to jjmerelo

[18:07] <tbrowder> .tell jjmerelo host but it hasn't shown on the public docs yet

[18:07] <tellable6> tbrowder, I'll pass your message to jjmerelo

[18:09] *** domidumont left
[18:16] *** [Sno] joined
[18:59] *** dominix joined
[19:01] *** dominix left
[19:10] *** cpan-p6 left
[19:11] *** cpan-p6 joined
[19:11] *** cpan-p6 left
[19:11] *** cpan-p6 joined
[19:16] *** Ven`` joined
[19:26] *** Popov6 joined
[19:29] *** [particle]1 joined
[19:31] *** [particle] left
[19:42] *** jaldhar_ left
[19:44] <discord6> <RaycatWhoDat> So, uh...

[19:44] <discord6> <RaycatWhoDat> Sorry, wrong server.

[19:48] *** [particle]1 left
[19:48] *** Black_Ribbon joined
[19:49] *** SCHAPiE left
[19:51] <timotimo> https://gist.github.com/timo/f4020bb85a1021f39b53483424cf0276 - subscribe to moarvm-internal events; when the GC runs and when spesh does some work

[19:52] *** Cabanossi left
[19:52] <MasterDuke> moarprof going to get some sort of visualizer for this info?

[19:53] <discord6> <RaycatWhoDat> m: say <1 ... 3> X <4 ... 6> X <7 ... 9>

[19:53] <evalable6> RaycatWhoDat, rakudo-moar 0455f42e3: OUTPUT: ¬´((1 4 7) (1 4 ...) (1 4 9) (1 ... 7) (1 ... ...) (1 ... 9) (1 6 7) (1 6 ...) (1 6 9) (... ‚Ä¶¬ª

[19:53] <evalable6> RaycatWhoDat, Full output: https://gist.github.com/3cd347faeca57a62d8485297500989a6

[19:54] <discord6> <RaycatWhoDat> m: say 1 ... 3 X~ 4 ... 6 X~ 7 ... 9

[19:54] <evalable6> RaycatWhoDat, rakudo-moar 0455f42e3: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/TcjcHKV7hb‚ê§Only id‚Ä¶¬ª

[19:54] <evalable6> RaycatWhoDat, Full output: https://gist.github.com/b6afd0129f90e19e3694b6a60417bdca

[19:55] <timotimo> MasterDuke: not sure; jn wants to make it play nice with Log::Timeline, though, that'll be good

[19:55] <discord6> <RaycatWhoDat> Ooohhh, it's two dors

[19:55] <MasterDuke> ah right

[19:55] <discord6> <RaycatWhoDat> dots*

[19:55] <discord6> <RaycatWhoDat> m: say 1 .. 3 X~ 4 .. 6 X~ 7 .. 9

[19:55] <evalable6> RaycatWhoDat, rakudo-moar 0455f42e3: OUTPUT: ¬´(147 148 149 157 158 159 167 168 169 247 248 249 257 258 259 267 268 269 347 348 349 357 358 359 367 368 369)‚ê§¬ª

[19:57] *** SCHAPiE joined
[19:57] *** Cabanossi joined
[19:59] *** [particle] joined
[20:07] *** ravenous_ left
[20:29] *** dolmen joined
[20:41] <Kaiepi> i found myself wishing perl 6 had a feature js has for the first time like, ever, almost 2 years after learning this and switching to this as my main language

[20:41] <Kaiepi> that being Symbol

[20:44] <Kaiepi> using an atomicint as an id was good enough for what i was doing, but if nothing similar to Symbol exists as a way of creating entirely unique objects given an optional string of some sort i might spend a day or two writing a library for it

[20:45] <timotimo> m: constant Thing = Any.new; constant OtherThing = Any.new; say Thing === OtherThing

[20:45] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: ¬´False‚ê§¬ª

[20:45] <timotimo> m: constant Thing = Any.new; constant OtherThing = Any.new; say Thing eqv OtherThing

[20:45] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: ¬´True‚ê§¬ª

[20:45] <timotimo> hm, that's perhaps not optimal

[20:46] <Kaiepi> in js, Symbol() !== Symbol(), but Symbol.for('') === Symbol.for('')

[20:47] <timotimo> ah

[20:48] <Kaiepi> i'm not 100% sure how the spec specifies it should be implemented, but with Symbol() the string you pass it only dictates how it gets stringified, while with Symbol.for it uses it as a key to store it in a global map of some sort that you can't reflect or anything

[20:49] <Kaiepi> s/should be implemented//

[20:53] <tobs> that should be well within reach of a module

[21:04] <AlexDaniel> tobs: had to slap this fix on tellable6: https://github.com/perl6/whateverable/commit/0572755c90633274d966a9ec6dff0dc673c19ec1

[21:04] <AlexDaniel> otherwise it was .tell-ing to discord users all the time :D

[21:09] <tobs> AlexDaniel: nice. Some oversights were to be expected I guess

[21:13] *** kensanata joined
[21:26] *** [particle]1 joined
[21:29] <Xliff> m: my (@a [$a, $b, $c]) = ('a'...'z'); $c.say

[21:29] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(exit code 1) Cannot call method 'say' on a null object‚ê§  in block <unit> at /tmp/ixz9nrWxpy line 1‚ê§‚ê§¬ª

[21:29] <Xliff> m: my (@a [$a, $b, $c]) = ('a'...'z'); @a.say

[21:29] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´[a b c d e f g h i j k l m n o p q r s t u v w x y z]‚ê§¬ª

[21:29] <Xliff> m: my (@a [$a, $b, $c]) = ('a'...'z'); $a.say

[21:29] <evalable6> Xliff, rakudo-moar 0455f42e3: OUTPUT: ¬´(exit code 1) Cannot call method 'say' on a null object‚ê§  in block <unit> at /tmp/o1wRRjdGpR line 1‚ê§‚ê§¬ª

[21:29] *** [particle] left
[21:30] <Xliff> ^^ Array decomposition in a my statement not spec'd?

[21:33] <AlexDaniel> oh cool a null object

[21:33] <Xliff> What is this "null" thing you speak of?!

[21:33] <Xliff> AlexDaniel: Bug?

[21:33] <AlexDaniel> something that should never happen

[21:44] *** lucasb left
[21:47] *** kensanata left
[21:51] <jnthn> Yeah, it should say that the LHS is too complicated for a list assignment.

[21:54] <AlexDaniel> or it might as well just work

[21:55] <AlexDaniel> m: my (Str() @a) = (0...5); say WHAT @a[0]

[21:55] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: ¬´(Int)‚ê§¬ª

[21:56] <AlexDaniel> heh

[21:56] *** Popov6 left
[21:58] <jnthn> AlexDaniel: Just use binding if you want it to "just work" :)

[22:00] <AlexDaniel> m: my (@a [$a, $b, $c, |c]) := [(‚Äòa‚Äô...‚Äòz‚Äô),]; $a.say

[22:00] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: ¬´a‚ê§¬ª

[22:02] *** dolmen left
[22:09] *** dolmen joined
[22:17] *** wildtrees left
[22:20] *** Ven`` left
[22:33] *** dolmen left
[22:42] *** rindolf left
[22:43] *** guifa left
[22:44] *** reach_satori joined
[22:54] *** pecastro left
[23:02] <cpan-p6> New module released to CPAN! Result (0.2.5) by 03SAMGWISE

[23:05] *** netrino joined
[23:08] *** rindolf joined
[23:14] *** MasterDuke left
[23:26] *** Maylay left
[23:30] *** netrino left
[23:47] *** rindolf left
