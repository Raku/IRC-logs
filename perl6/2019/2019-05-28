[00:00] *** vrurg left
[00:01] *** rindolf left
[00:03] *** netrino joined
[00:09] *** vrurg joined
[00:25] *** leont left
[00:35] *** netrino left
[00:41] *** Manifest0 left
[00:42] *** netrino joined
[00:44] *** john_parr joined
[00:46] *** Manifest0 joined
[00:59] *** MasterDuke joined
[00:59] *** MasterDuke left
[00:59] *** MasterDuke joined
[01:03] *** khisanth_ left
[01:05] *** kurahaupo_ joined
[01:06] *** kurahaupo left
[01:06] *** khisanth_ joined
[01:15] *** netrino left
[01:19] *** noisegul_ left
[01:20] <Xliff> m: 170408.sqrt.say

[01:20] <camelia> rakudo-moar a643b8be1: OUTPUT: «412.805038728938␤»

[01:21] *** netrino joined
[01:28] *** Manifest0 left
[01:28] *** aborazmeh joined
[01:28] *** aborazmeh left
[01:28] *** aborazmeh joined
[01:35] *** Manifest0 joined
[01:49] *** Manifest0 left
[01:52] *** adu joined
[01:52] *** mniip left
[01:54] *** netrino left
[01:54] *** Manifest0 joined
[01:58] *** mniip joined
[02:00] *** netrino joined
[02:03] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:11] *** Manifest0 left
[02:17] *** kurahaupo_ left
[02:17] *** kurahaupo joined
[02:18] *** Manifest0 joined
[02:18] *** MasterDuke left
[02:22] *** kurahaupo left
[02:22] *** Manifest0 left
[02:26] <Xliff> m: my enum <AAA BBB CCC>; my %n = ( AAA => 'a', BBB => 'b', CCC => 'c' }; say %n{AAA}

[02:26] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in parenthesized expression; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3 = ( AAA => 'a', BBB => 'b', CCC => 'c' 7⏏5}; say %n{AA…»

[02:26] <Xliff> m: my enum <AAA BBB CCC>; my %n = ( AAA => 'a', BBB => 'b', CCC => 'c' ); say %n{AAA}

[02:26] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤»

[02:29] *** Manifest0 joined
[02:32] <elcaro> Xliff: I'd say that's because enum values stringyfy as their name

[02:32] *** netrino left
[02:33] <elcaro> and hashes default to string keys unless declared with %h{Any} (or a more specific type)

[02:34] <elcaro> m: my enum <AAA BBB CCC>; my %h{Any} = (AAA) => 'a', (BBB) => 'b', (CCC) => 'c'; say %h{AAA}; say %h<AAA>;

[02:34] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤(Any)␤»

[02:37] *** eiro left
[02:38] *** eiro joined
[02:38] <Xliff> elcaro: Why %h{Any}?

[02:39] <Xliff> m: my enum <AAA BBB CCC>; my %n = ( AAA => 'a', BBB => 'b', CCC => 'c' ); say %n{AAA}; say %n<AAA>

[02:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤a␤»

[02:39] *** netrino joined
[02:39] <Xliff> Ah. I think I get it.

[02:45] <Xliff> m: rand * 360

[02:45] <camelia> rakudo-moar a643b8be1: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "*" in expression "rand * 360" in sink context (line 1)␤»

[02:45] <Xliff> m: say rand * 360

[02:45] <camelia> rakudo-moar a643b8be1: OUTPUT: «179.21518249519428␤»

[02:55] *** aborazmeh left
[03:01] *** kaare__ left
[03:02] *** kaare__ joined
[03:04] *** Manifest0 left
[03:09] *** Manifest0 joined
[03:12] *** netrino left
[03:16] <ChoHag> So, sometimes when I get like this I come in here and start ranting at whoever's around for doing this to my favourite language. How're things this time?

[03:16] <ChoHag> (Also that's a roundabout way of asking what's new in the last, I don't know, 6 months-ish)

[03:18] <ChoHag> Last I heard/really concentrated, perl 6 was "just about done, honestly, any minute now". I think 6d? Something like that.

[03:18] *** netrino joined
[03:19] <ChoHag> By the way if I'm coming across as antagonistic that's just because I'm drunk and trying to be funny. This is an honest question.

[03:28] <Xliff> m: my $s = 0; for ^12 { say $s > 12 ?? 0 !! $s++ }

[03:28] <camelia> rakudo-moar a643b8be1: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤»

[03:29] <Xliff> m: 3.rand.say

[03:29] <camelia> rakudo-moar a643b8be1: OUTPUT: «2.4185029798972404␤»

[03:29] <Xliff> m: 3.rand.say

[03:29] <camelia> rakudo-moar a643b8be1: OUTPUT: «0.8495419437821555␤»

[03:29] <Xliff> m: 3.rand.say

[03:29] <camelia> rakudo-moar a643b8be1: OUTPUT: «2.7888226234322904␤»

[03:30] <Xliff> m: 3.rand.floor.say for ^10

[03:30] <camelia> rakudo-moar a643b8be1: OUTPUT: «2␤1␤2␤2␤0␤2␤0␤0␤1␤1␤»

[03:30] *** noisegul joined
[03:36] *** Manifest0 left
[03:41] *** Manifest0 joined
[03:46] *** Manifest0 left
[03:50] *** netrino left
[03:51] *** Manifest0 joined
[03:57] *** netrino joined
[04:02] *** Manifest0 left
[04:07] *** Manifest0 joined
[04:11] *** Manifest0 left
[04:16] *** Manifest0 joined
[04:23] <ChoHag> What does the ^12 do if there's also a 12-ternary with a ++?

[04:24] *** skids joined
[04:24] <ChoHag> Does that just ultimately having two iterators, $_ (?) and $s, or something else that I'm not seeing?

[04:24] <ChoHag> have

[04:25] *** Manifest0 left
[04:27] *** Xliff left
[04:30] *** netrino left
[04:30] *** Manifest0 joined
[04:36] *** netrino joined
[04:36] *** skids left
[04:37] *** Manifest0 left
[04:40] *** molaf joined
[04:43] *** Xliff joined
[04:46] *** Manifest0 joined
[04:48] *** curan joined
[05:08] *** netrino left
[05:08] *** nadim_ joined
[05:09] *** jmerelo joined
[05:13] <elcaro> Xliff: sorry was AFK. by default, Hash's are secretly %h{Str}, so all keys get coerced to Str

[05:13] *** nadim_ left
[05:15] *** netrino joined
[05:19] <elcaro> ChoHag: Perl 6 is "done" as in, version 1 was released a few years ago... now it's undergoing constant development like most other languages

[05:19] *** Manifest0 left
[05:19] <elcaro> ChoHag: the '^12' is short-hand for '0 ..^ 12' which means the range "0 up-to-but-not-including 12"

[05:24] *** Manifest0 joined
[05:30] <Geth> ¦ doc: 31d7ee314f | (JJ Merelo)++ | doc/Type/Signature.pod6

[05:30] <Geth> ¦ doc: Addresses first part of #2404

[05:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/31d7ee314f

[05:30] <Geth> ¦ doc: 9ac0e9e92f | (JJ Merelo)++ | doc/Type/Signature.pod6

[05:30] <Geth> ¦ doc: Reindexes argument aliases as such, closes #2404

[05:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9ac0e9e92f

[05:30] <Geth> ¦ doc: 03274aae4c | (JJ Merelo)++ | doc/Type/Signature.pod6

[05:30] <synopsebot> Link: https://doc.perl6.org/type/Signature

[05:30] <Geth> ¦ doc: Minor clarifications

[05:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/03274aae4c

[05:31] *** cpan-p6 left
[05:31] *** Manifest0 left
[05:34] *** cpan-p6 joined
[05:34] *** cpan-p6 left
[05:34] *** cpan-p6 joined
[05:37] *** Manifest0 joined
[05:41] *** nadim_ joined
[05:44] *** Manifest0 left
[05:47] *** netrino left
[05:49] *** Manifest0 joined
[05:54] *** netrino joined
[06:05] *** sena_kun joined
[06:15] *** Manifest0 left
[06:18] *** molaf left
[06:21] *** Manifest0 joined
[06:22] *** nadim_ left
[06:27] *** netrino left
[06:28] <Xliff> m: role A { submethod BUILD { say 'role' }; }; class B does A { submethod BUILD { say 'class' }; }; B.new;

[06:28] <camelia> rakudo-moar a643b8be1: OUTPUT: «class␤»

[06:33] *** netrino joined
[06:35] *** Manifest0 left
[06:38] *** netrino_ joined
[06:39] *** netrino left
[06:40] *** Manifest0 joined
[06:51] *** Manifest0 left
[06:51] *** dolmen joined
[06:52] *** noisegul left
[06:56] *** lgtaube joined
[06:57] *** Manifest0 joined
[07:02] *** powerbit joined
[07:02] *** jmerelo left
[07:12] *** Manifest0 left
[07:16] *** Manifest0 joined
[07:17] *** zakharyas joined
[07:23] *** kst` joined
[07:23] *** Manifest0 left
[07:24] *** kst left
[07:30] *** Manifest0 joined
[07:30] * lizmat clickbaits https://p6weekly.wordpress.com/2019/05/27/2019-21-thats-why/

[07:39] <Xliff> m: say "\342"

[07:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized backslash sequence: '\342'. Did you mean $341?␤at <tmp>:1␤------> 3say "\7⏏05342"␤    expecting any of:␤        argument list␤        double quotes␤        term␤»

[07:39] <Xliff> m: say "\0342"

[07:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «␀342␤»

[07:39] <Xliff> m: say "\o342"

[07:39] <camelia> rakudo-moar a643b8be1: OUTPUT: «â␤»

[07:40] <Xliff> m: say "\o342\o236\o236"

[07:40] <camelia> rakudo-moar a643b8be1: OUTPUT: «â␤»

[07:40] <Xliff> m: say "\o236\o236"

[07:40] <camelia> rakudo-moar a643b8be1: OUTPUT: «␤»

[07:40] *** dakkar joined
[07:44] *** noisegul joined
[07:52] *** sean` joined
[07:52] <noisegul> Good morning everyone

[07:53] <holyghost> good morning

[07:53] <cpan-p6> New module released to CPAN! Soundn::Tina (0.1.2) by 03HOLYGHOST

[07:55] <holyghost> ^-- it's a WAV file parser with some sample pattern recognition, it's pretty straightforward code

[07:55] *** dolmen left
[07:57] <holyghost> I had it lying around, it comes from my holly6src scratchpad

[07:57] <holyghost> I need to add docs tomorrow

[08:01] *** scimon joined
[08:04] *** netrino_ left
[08:07] <timotimo> holyghost: you have a problem in your META6.json

[08:08] *** patrickb joined
[08:08] <timotimo> holyghost: the use statements for Vector32bit are also wrong

[08:08] <timotimo> you're publishing code that doesn't even compile. again.

[08:08] *** feldspath joined
[08:08] <timotimo> jj already told you in no uncertain terms that that's not cool

[08:08] <timotimo> did you perhaps miss that?

[08:10] <Xliff> What's the best way to form a unicode character?

[08:10] <timotimo> m: say "\c[snowman]"

[08:10] <camelia> rakudo-moar a643b8be1: OUTPUT: «☃␤»

[08:10] <Xliff> How about from octal numbers?

[08:10] *** molaf joined
[08:11] <timotimo> m: say "\o777"

[08:11] <camelia> rakudo-moar a643b8be1: OUTPUT: «ǿ␤»

[08:11] <timotimo> m: say "\o7777"

[08:11] <camelia> rakudo-moar a643b8be1: OUTPUT: «࿿␤»

[08:11] <Xliff> m: say "\o342\o236\o236"

[08:11] <camelia> rakudo-moar a643b8be1: OUTPUT: «â␤»

[08:11] <sena_kun> https://github.com/rakudo/rakudo/issues/2169 can be closed

[08:11] <Xliff> ^ That's not what I expected, though.

[08:11] <timotimo> m: say uninames(0o342, 0o236, 0o236)

[08:11] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling uninames(Int, Int, Int) will never work with signature of the proto ($, *%)␤at <tmp>:1␤------> 3say 7⏏5uninames(0o342, 0o236, 0o236)␤»

[08:12] <timotimo> m: say .&uniname for (0o342, 0o236, 0o236)

[08:12] <camelia> rakudo-moar a643b8be1: OUTPUT: «LATIN SMALL LETTER A WITH CIRCUMFLEX␤<control-009E>␤<control-009E>␤»

[08:12] <Xliff> Interesting. 

[08:12] <timotimo> m: say .&uniname for (0x342, 0x236, 0x236)

[08:12] <camelia> rakudo-moar a643b8be1: OUTPUT: «COMBINING GREEK PERISPOMENI␤LATIN SMALL LETTER T WITH CURL␤LATIN SMALL LETTER T WITH CURL␤»

[08:12] <Xliff> When I do "\342\236\236" in C I get an arrow.

[08:12] <timotimo> that'd be utf8 probably?

[08:12] <Xliff> uniname: →

[08:13] <timotimo> m: say Buf8(0o342, 0o236, 0o236).decode("utf8")

[08:13] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Buf8 used at line 1. Did you mean 'buf8', 'Buf'?␤␤»

[08:13] <Xliff> m: '→'.uniname.say

[08:13] <camelia> rakudo-moar a643b8be1: OUTPUT: «RIGHTWARDS ARROW␤»

[08:13] <timotimo> m: say buf8.new(0o342, 0o236, 0o236).decode("utf8")

[08:13] <camelia> rakudo-moar a643b8be1: OUTPUT: «➞␤»

[08:13] <timotimo> m: say buf8.new(0o342, 0o236, 0o236).decode("utf8").ords

[08:13] <camelia> rakudo-moar a643b8be1: OUTPUT: «(10142)␤»

[08:13] <timotimo> m: say "\c10142"

[08:13] <camelia> rakudo-moar a643b8be1: OUTPUT: «➞␤»

[08:13] <patrickb> sena_kun: Closed.

[08:13] <Xliff> m: '→'.unichar.say

[08:13] <camelia> rakudo-moar a643b8be1: OUTPUT: «No such method 'unichar' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[08:13] <sena_kun> patrickb++ vrurg++

[08:14] <patrickb> vrurg++ indeed

[08:14] <HarmtH> virt

[08:15] <holyghost> I'm working on it timotimo, I upload early 

[08:15] <timotimo> no, stop that

[08:15] <timotimo> cpan is not for early uploads

[08:16] <timotimo> use github or gitlab or bitbucket or sourceforge or savannah or whatever for early uploads

[08:16] <timotimo> stop putting broken code on cpan

[08:17] <holyghost> It'll be allright

[08:17] *** noisegul left
[08:19] *** sean` left
[08:21] <lizmat> holyghost: FWIW, at the moment I'm just ignoring *anything* you upload in the Perl 6 Weekly

[08:22] <lizmat> holyghost: if you like your uploads to show what you can do as a developer, you need to clean up your act

[08:22] *** Guest50087 joined
[08:22] <lizmat> note to self: I guess we need to work on creating a full-fledged recommendation manager with purging capabilities

[08:23] <cpan-p6> New module released to CPAN! Soundn::Tina (0.1.3) by 03HOLYGHOST

[08:23] *** Guest50087 left
[08:24] <holyghost> release often, release early, a few bugs won't damage anything

[08:26] <Xliff> holyghost: That works better for git.

[08:26] <Xliff> But even then... push carefully.

[08:26] <holyghost> I'm doing my best Xliff

[08:26] <Xliff> holyghost: Everyone is telling you that you should be trying harder.

[08:27] <Xliff> Nicely.

[08:27] <holyghost> ok, it used to compile BTW, I need to  update it just for the newest perl6

[08:28] <holyghost> I have it fixed fully by tomorrow

[08:29] * sena_kun can't imagine this community is the first that encounters such an issue

[08:30] <holyghost> Just don't worry about it, I can manage, I've done it before

[08:31] *** netrino_ joined
[08:33] <holyghost> lizmat, FWIW, you can see at Mathx::Stat and Bayes::Learn if you need to

[08:33] <holyghost> those are documented and bugless

[08:33] <holyghost> then there's Game::AI::Messaging

[08:34] <holyghost> The rest I need to figure out, I'm probably working on too much modules at the same time

[08:35] *** Manifest0 left
[08:36] <lizmat> what kind of test is this?

[08:36] <lizmat> is-deeply $p.Bayes(@indices, @plist, 1), $p.Bayes(@indices, @plist, 1);

[08:36] <holyghost> I cannot compare it to a number

[08:36] <holyghost> It calculates Bayes of course

[08:36] <lizmat> feels to me you're testing whether 42 is equal to 42

[08:37] *** rindolf joined
[08:37] <holyghost> yes, if ti runs it gives you the conditional probability calculated by the Bayes formula

[08:37] <holyghost> I cannot use aq number for it as that's different on e.g. 32 and 64 bit

[08:38] <holyghost> s/aq/a

[08:38] <holyghost> more or less

[08:38] *** netrino__ joined
[08:41] *** netrino_ left
[08:42] <holyghost> lizmat : I can help you out if you like but I don't have much time on my hands

[08:42] * lizmat neither

[08:42] *** Manifest0 joined
[08:45] <ChoHag> Perl 6 is done? Does that mean all the synopses?

[08:46] <ChoHag> Including the one on pod?

[08:47] <lizmat> ChoHag: there's been quite a lot of stuff done on pad in the past year or so, not sure how complete the work is

[08:47] <ChoHag> I was looking forward to a bit more runtime control over the documentation.,

[08:47] *** Manifest0 left
[08:47] <lizmat> jmerelo probably knows more about it

[08:47] <ChoHag> It's pad now? Is that a typo or is it short for Plain Annoying?

[08:48] <timotimo> nah, it's pod

[08:49] <lizmat> ChoHag: oops, typo, pod

[08:50] *** sena_kun left
[08:53] *** Manifest0 joined
[08:53] <timotimo> ChoHag: we don't have everything from all synopses, but the synopses haven't been considered "The Language Definition" for a while; that is roast's job now

[08:54] <Xliff> timotimo: Here's one for you. 

[08:55] <Xliff> m: class A { method Int { 1; } }: multi sub (A $a) { say 'a' }; multi sub (Int() $a) { say 0; }; a(A.new)

[08:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3class A { method Int { 1; } }:7⏏5 multi sub (A $a) { say 'a' }; multi sub␤    expecting any of:␤        colon pair␤»

[08:55] <Xliff> m: class A { method Int { 1; } }; multi sub (A $a) { say 'a' }; multi sub (Int() $a) { say 0; }; a(A.new)

[08:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤An anonymous routine may not take a multi declarator␤at <tmp>:1␤------> 3t { 1; } }; multi sub (A $a) { say 'a' }7⏏5; multi sub (Int() $a) { say 0; }; a(A.n␤    expecting any of:␤        h…»

[08:55] <Xliff> m: class A { method Int { 1; } }; multi sub a (A $a) { say 'a' }; multi sub a (Int() $a) { say 0; }; a(A.new)

[08:55] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤»

[08:55] <Xliff> WTF?

[08:56] <Xliff> m: class A { method Int { 1; } }; multi sub a (A $a) { say 'a' }; multi sub a (Int() $a) { say 0; }; A.new.Int

[08:56] <camelia> rakudo-moar a643b8be1: ( no output )

[08:56] <Xliff> m: class A { method Int { 1; } }; multi sub a (A $a) { say 'a' }; multi sub a (Int() $a) { say 0; }; A.new.Int.say

[08:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «1␤»

[08:56] *** seanrob joined
[08:56] <Xliff> m: class A { method Int { 1; } }; multi sub a (A $a) { say 'a' }; multi sub a (Int() $a) { say 0; }; a(A.new)

[08:56] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤»

[08:56] <Xliff> Why isn't that giving me the same confusing stuff as my code>?

[08:56] <Xliff> Hmm...

[08:57] <Xliff> m: class A { method Int { 1; } }; class B { multi method a (A $a) { say 'a' }; multi method a (Int() $a) { say 0; }; }; B.new.a(A.new)

[08:57] <camelia> rakudo-moar a643b8be1: OUTPUT: «a␤»

[08:57] <Xliff> m: $*PERL.compiler.version.say

[08:57] <camelia> rakudo-moar a643b8be1: OUTPUT: «v2019.03.1.385.ga.643.b.8.be.1␤»

[08:58] <timotimo> the version is also part of camelia's output

[08:58] <Xliff> timotimo: It's weird. But what I am seeing is that multi methods that have the same number of parameters, if one is coercive, that will BYPASS those that are more restrictive.

[08:58] <timotimo> OK, that seems odd

[08:59] <timotimo> without seeing the actual code, not sure i can help

[09:00] *** netrino__ left
[09:03] <Xliff>  /o\

[09:04] <Xliff> No. I figured it out. 

[09:04] <Xliff> Thanks for waiting. 

[09:08] *** farcas_ joined
[09:14] *** netrino__ joined
[09:15] *** reach_satori left
[09:18] *** netrino__ left
[09:20] *** dolmen joined
[09:21] *** Manifest0 left
[09:21] *** ravenousmoose joined
[09:23] *** demanuel joined
[09:27] *** dolmen left
[09:27] *** netrino__ joined
[09:29] *** Manifest0 joined
[09:40] <lizmat> someone needs a reply on twitter: https://twitter.com/marver/status/1133291661205934080

[09:43] <lizmat> :-)

[09:44] *** seanrob left
[09:46] *** dolmen joined
[09:53] <Xliff> lizmat: Replied.

[09:53] <lizmat> Xliff++

[09:53] *** leont joined
[09:56] <timotimo> butterfly hit squad assembla

[10:01] *** netrino__ left
[10:03] *** nadim_ joined
[10:04] *** lizmat_ joined
[10:07] *** lizmat left
[10:07] *** netrino__ joined
[10:08] *** leont left
[10:08] *** lizmat_ is now known as lizmat

[10:15] *** dolmen left
[10:18] *** reach_satori joined
[10:20] *** ravenousmoose left
[10:23] *** ravenousmoose joined
[10:23] *** reach_satori_ joined
[10:23] *** reach_satori left
[10:26] *** lgandras joined
[10:31] *** reach_satori_ left
[10:34] *** molaf left
[10:39] *** lgandras_ joined
[10:40] *** Manifest0 left
[10:40] *** netrino__ left
[10:42] *** lgandras left
[10:44] *** Manifest0 joined
[10:46] *** netrino__ joined
[10:50] *** lgandras_ left
[10:50] *** lgandras joined
[10:51] *** Manifest0 left
[10:56] *** Manifest0 joined
[11:00] *** dolmen joined
[11:00] *** Manifest0 left
[11:00] *** noisegul_ joined
[11:01] *** sergot joined
[11:06] *** Manifest0 joined
[11:09] *** nadim_ left
[11:12] *** nadim_ joined
[11:14] *** dolmen left
[11:19] *** netrino__ left
[11:19] *** dolmen joined
[11:23] *** nadim_ left
[11:25] *** netrino__ joined
[11:36] *** dg_subrata joined
[11:37] *** kurahaupo joined
[11:39] *** robertle_ joined
[11:40] *** zakharyas left
[11:41] * lizmat clickbaits https://p6weekly.wordpress.com/2019/05/27/2019-21-thats-why/

[11:44] *** nadim_ joined
[11:49] *** nadim_ left
[11:49] <holyghost> I need to adapt @8bitpattern in simplesearch(...) from the PatternChannelLib.pm6 but it should compile now

[11:49] <holyghost> It needs to be a scalar

[11:50] <holyghost> upload is version 0.1.4. from Soundn::Tina

[11:50] <lizmat> have you heard of github, gitlab or a gist ??

[11:51] *** molaf joined
[11:52] <holyghost> lizmat : ok

[11:52] <holyghost> WAM (wait a minute)

[11:54] <moritz> wake me up, before you go go!

[11:54] * kurahaupo starts humming "wake me up before you go-go"

[11:54] <kurahaupo> moritz: *snap*

[11:57] <cpan-p6> New module released to CPAN! Soundn::Tina (0.1.4) by 03HOLYGHOST

[11:58] *** netrino__ left
[11:59] <holyghost> lizmat : It's on github.com/theholyghost2/Soundn-Tina

[12:00] <holyghost> It needs to upload the neww code I importedd with the Web GUI, I guess

[12:02] <holyghost> anyway, it shouokld compile now from the version on cpan (0.1.4)

[12:04] *** netrino__ joined
[12:08] <holyghost> The docs are included

[12:11] * lizmat doesn't see any

[12:15] <Xliff> timotimo: p6-Clutter now has working tests in t

[12:16] *** noisegul_ left
[12:17] *** noisegul joined
[12:17] *** dg_subrata left
[12:20] <Geth> ¦ problem-solving: AlexDaniel assigned to rba Issue Push access to repositories in perl6 organization https://github.com/perl6/problem-solving/issues/33

[12:20] <Geth> ¦ problem-solving: AlexDaniel assigned to maettu Issue Push access to repositories in perl6 organization https://github.com/perl6/problem-solving/issues/33

[12:25] <timotimo> holyghost: does the test file run now?

[12:27] <timotimo> in the META6 there's still Matrix32.pm6 while in the folder it's called Matrix32bit.pm6

[12:28] <timotimo> and Vector32bit.pm6 tries to instantiate Vector8bit, which has to be Soundn::Tina::Vector8bit instead, since you renamed that

[12:29] <timotimo> and File32Parser.pm6 is the next file that doesn't compile, it doen't find "Parser"

[12:29] <timotimo> probably because it's called WAVParser in the file?

[12:30] *** Sgeo__ left
[12:30] <timotimo> and there's one } too many in File32Parser.pm6, before the last method. it warns you that you put the method transformtodata outside of a class

[12:30] *** noisegul left
[12:31] <timotimo> oh, you have two WAVParser classes actually, one is in WAVParser and one is in Parser

[12:31] <timotimo> why do you keep uploading broken code to cpan when multiple people have asked you to please stop doing that

[12:31] <Xliff> holyghost: If you would like, I can try and send you a PR that will allow you to build all of the classes in your project so you can run that BEFORE you release to CPAN.

[12:32] <timotimo> you're clearly not even trying to run the code a single time before uploading it, otherwise you would be getting these compiler errors

[12:35] <Xliff> timotimo: When you get some time, please try the latest p6-Clutter. Requires the latest p6-GtkPlus. 

[12:35] *** aborazmeh joined
[12:35] *** aborazmeh left
[12:35] *** aborazmeh joined
[12:35] <Xliff> I will have to update the install docs. It's become a lot easier to get things to run... unfortunately not faster, though.

[12:37] *** netrino__ left
[12:39] *** Cabanossi left
[12:41] *** Cabanossi joined
[12:42] <Xliff> OK. Installation instructions now written and sent to the github project page.

[12:42] <Xliff> https://github.com/Xliff/p6-Clutter/

[12:43] *** netrino__ joined
[12:48] *** Manifest0 left
[12:49] *** lgandras left
[12:54] *** john_parr left
[12:55] *** Manifest0 joined
[12:55] *** noisegul_ joined
[12:58] *** john_parr joined
[13:11] *** zakharyas joined
[13:16] *** Manifest0 left
[13:16] *** netrino__ left
[13:21] *** Manifest0 joined
[13:22] *** netrino__ joined
[13:22] *** molaf left
[13:27] *** Manifest0 left
[13:28] *** skids joined
[13:28] *** reach_satori_ joined
[13:34] *** Manifest0 joined
[13:49] <ugexe> someone should benchmark how long the 90+ distributions uploaded by holy ghost adds to zef/rakudo parsing and searching :P

[13:50] *** farcas_ left
[13:50] <lizmat> ugexe: perhaps a filter on holyghost would be more effective ?

[13:50] *** farcas_ joined
[13:52] <ugexe> well, its a policy issue and we don't really have any policy yet. additionally it could be argued we need a better api for the ecosytem than "include all meta data for everything"

[13:53] *** Xliff left
[13:54] *** ravenousmoose_ joined
[13:55] *** netrino__ left
[13:55] <ugexe> there are essentially two modes of meta data searching -- the primary one only searches for namespace data, while the other is searching tags/description etc. the former doesn't require all the meta data, while the later does

[13:56] *** ravenousmoose left
[13:57] <ugexe> anywho we *can* dictate policy, but we don't have any prior (perl6) art to work with yet. and such a policy would be that of specific ecosystems.

[13:58] <ugexe> what we don't want is various ecosystem generating tools to have stuff hardcoded like `next if $author ~~ /foo/`

[13:58] <ugexe> generating *or* consuming

[13:59] <ugexe> so an ultra naive solution would have some sort of way for members to "vote" for a module to be hidden

[14:01] *** netrino__ joined
[14:02] *** sena_kun joined
[14:05] *** curan left
[14:06] <lizmat> ugexe++

[14:10] *** molaf joined
[14:11] *** Manifest0 left
[14:13] <AlexDaniel> 90+ distributions?

[14:14] <ugexe> multiple versions of multiple namespaces

[14:16] *** Manifest0 joined
[14:21] *** Xliff joined
[14:21] <Xliff> \o

[14:22] <Xliff> I'm getting this when trying to rebuild rakudo:

[14:22] <Xliff> Can't locate object method "note" via package "NQP::Config::Rakudo"

[14:22] <Xliff> And now I can't rakudobrew moar or moar-blead

[14:22] <Xliff> Using rakudobrew v2 will compile, but I can't get shim or env mode to work... that means I can't run the build executables!

[14:23] *** Manifest0 left
[14:23] <ugexe> check last night backlog of #perl6-dev

[14:23] <Xliff> ugexe: OK

[14:24] <patrickb> Xliff: WRT rakudobrew v2 not working: Did you update the entry in .profile/.bash_profile/... ?

[14:24] <AlexDaniel> rakudobrew v2 O_o

[14:24] * AlexDaniel is hoping to catch up next week or so

[14:24] <Xliff> patrickb: Yes.

[14:25] <patrickb> AlexDaniel: It's the normal rakudobrew. He just meant not the v1 branch used in travis builds.

[14:26] *** MilkmanDan left
[14:27] <patrickb> Xliff: I'd be interested in how it fails.

[14:28] <patrickb> Xliff: Which branch of rakudobrew you use should have no influence on whether the build works or not. I'd be surprised if it does in your case.

[14:28] <Xliff> After "git submodule update" my entire perl6 install is now not working.

[14:28] *** Manifest0 joined
[14:29] <holyghost>  timotomo, Xliff : I'll update tomorrow (Matrix32bit META.json issue)

[14:30] <patrickb> vrurg: ^

[14:31] <Xliff> Back to latest v1. Completely new install. :p

[14:32] <holyghost> also the is ClassX::things

[14:32] <vrurg> Xliff: symptoms? What's broken?

[14:33] <Xliff> vrurg: Let me get back to you after the clean install finishes.

[14:33] <Xliff> Mine was very long in the tooth.

[14:34] *** netrino__ left
[14:34] <Xliff> vrurg: Although if you want the last failure mode, you can find it here: https://paste.fedoraproject.org/paste/-dsy~O1VMQOutBWiBU~~uQ

[14:35] <Xliff> After that bit, I had to force clean, co: rakudobrew: error while loading shared libraries: libmoar.so: cannot open shared object file: No such file or directory

[14:35] <Xliff> \o/ -- This is Rakudo version 2019.03.1-492-gca7408e9f built on MoarVM version 2019.05-11-g248e2980a

[14:36] *** dolmen left
[14:37] <holyghost> Xliff, timotimo, the upload should show soon

[14:37] <vrurg> Xliff: did you try moar-blead with rakudobrew? I'm just looking for something reproducible.

[14:38] <holyghost> Xliff, timotimo, I adpated to my best

[14:38] <Xliff> vrurg: moar-blead has been the only thing I could use from v1 for the last week or so.

[14:39] <ugexe> oh if thats the case then rakudobrew will be broke on travis when someone does `perl6: 2019.05` or whatever

[14:40] <ugexe> or 2019.03.1 rather

[14:40] <patrickb> I am pretty sure the rakudobrew that is used is irrelevant to these problems.

[14:40] *** netrino__ joined
[14:41] <Guest12727> do we know if the nuke command in rakudobre v2 has been fixed yet?

[14:41] *** dolmen joined
[14:41] <holyghost> I need to add test, still reaching out

[14:41] <holyghost> I'm a bit afk now

[14:42] <patrickb> Guest12727: What has been broken with nuke in the past?

[14:42] *** leont joined
[14:42] <Guest12727> patrickb: it used to work but in the new version it's broken

[14:43] <Guest12727> see https://github.com/tadzik/rakudobrew/issues/142

[14:43] <patrickb> Just found that. I'll have a look.

[14:43] <Guest12727> ++patrickb

[14:44] *** MilkmanDan joined
[14:44] <cpan-p6> New module released to CPAN! Soundn::Tina (0.1.5) by 03HOLYGHOST

[14:45] <vrurg> rakudobrew doesn't specify --prefix for Configure.pl. This is what breaks the build (nqp/moar are picked from PATH). 

[14:45] <patrickb> .tell tadzik Gentle reminder about https://github.com/tadzik/rakudobrew/pull/136

[14:45] <yoleaux> patrickb: I'll pass your message to tadzik.

[14:46] <patrickb> .tell tadzik I'd like to request a commit bit for rakudobrew.

[14:46] <yoleaux> patrickb: I'll pass your message to tadzik.

[14:46] <tadzik> heh, this chain of ifs reminds me of some of my JS code

[14:46] <yoleaux> 14:45Z <patrickb> tadzik: Gentle reminder about https://github.com/tadzik/rakudobrew/pull/136

[14:46] <yoleaux> 14:46Z <patrickb> tadzik: I'd like to request a commit bit for rakudobrew.

[14:46] <tadzik> patrickb: request granted :)

[14:46] <tadzik> use it responsibly ;)

[14:47] <Xliff> tadzik: Heyy! If it's that easy to get a commit bit...  .oO( I hope he realizes I'm kidding! )

[14:47] <holyghost> .tell Xliff I'm going to do an SDL2 game later on, I'd like you to debug it

[14:47] <yoleaux> holyghost: I'll pass your message to Xliff.

[14:47] <Xliff> o_O

[14:47] <yoleaux> 14:47Z <holyghost> Xliff: I'm going to do an SDL2 game later on, I'd like you to debug it

[14:48] <Xliff> holyghost: I'm quite busy these days. When you are ready, let me know. Give me a couple of days, however.

[14:48] <Xliff> And I'm utterly serious about getting you to use those scripts. They may need a bit of modification, but they will help you improve the code you submit.

[14:49] <holyghost> Xliff, we'll manage

[14:49] *** cpan-p6 left
[14:51] <holyghost> Xliff, I'm glad you're on game software, even if they're not Gtk based :-)

[14:51] *** cpan-p6 joined
[14:51] *** cpan-p6 left
[14:51] *** cpan-p6 joined
[14:52] *** aborazmeh left
[14:52] <holyghost> barf *lol*

[14:53] <vrurg> tadzik: may I ask you to have always specify --prefix for Configure.pl in rakudobrew?

[14:54] <patrickb> vrurg: What did the rakudo build do without --prefix before the build-revamp?

[14:54] <vrurg> patrickb: it was using ./install by default.

[14:55] <vrurg> That's what it does now if no nqp found in PATH.

[14:57] <ugexe> if i have an nqp from 2019.03.1 installed from rakudobrew, and do rakudobrew build moar-blead, couldn't the old nqp in the PATH get chosen by mistake?

[14:58] <patrickb> I guess that's what happens now.

[14:58] *** noisegul_ left
[14:58] <vrurg> ugexe: it currently will. That's why I'm asking for explicit --prefix. Or I'd have to pull PATH seeking from Configure.pl.

[14:58] <ugexe> i dont think the PATH thing is compatible with multiple perl6 installs then

[14:59] <patrickb> We should either fix rakudobrew by adding --prefix to the build, or remove the logic to check for nqp in PATH.

[14:59] <patrickb> I'm unsure whether I like that behavior...

[14:59] <ugexe> ignore rakudobrew -- what if i manually want to install two perl6s?

[14:59] <vrurg> ugexe: --prefix or --with-nqp turns that logic off.

[15:00] <ugexe> rakudobrew doesn't use --with-nqp then eh?

[15:00] <patrickb> Hm. It's using --gen-nqp IIRC

[15:00] <patrickb> In that case it should obviously also use the generated NQP...

[15:01] *** noisegul_ joined
[15:04] <patrickb> it uses `Configure.pl --backends=moar --gen-moar --git-reference=\"$git_reference\" --make-install`

[15:05] <patrickb> The `triple` command uses `Configure.pl --backend=moar` after installing moar and nqp into ./install

[15:05] <vrurg> patrickb: I copied the logic of handling --gen-nqp from the previous configure. It was pretty relaxed about this parameter. nqp takes --gen-moar more literally.

[15:05] <ugexe> you copied the logic, but the problem is you said --gen-nqp itself disables the PATH thing while also removing --gen-nqp from the command

[15:06] <ugexe> (im assuming it used to be there but can be wrong)

[15:07] <vrurg> ugexe: no, --gen-nqp doesn't disable it. --with-nqp does. That's because --gen-nqp was always kinda optional things saying 'gen if not found'

[15:07] <ugexe> oops

[15:08] <vrurg> I'm not sure yet which way is better: make it always rebuild nqp with --gen or leave as it is now.

[15:10] <patrickb> I'm leaning towards disabling the search in PATH thing. There is quite some potential for messing up and breaks backwards compatibility. On the other hand it's easy to print a message notifying the user that no NQP could be found and she needs to specify one.

[15:10] <vrurg> I'd like to keep PATH in place for beginners who would have nqp package pre-installed. Because what a typical beginner does – ./Configure, no params.

[15:11] <patrickb> vrurg: But such users would probably rather have a fitting NQP built for them than using some unkown NQP a distro provided.

[15:12] *** robertle_ left
[15:13] *** netrino__ left
[15:14] <vrurg> patrickb: I'm not certain about that. What's probably more relevant is compatibility matter. The package would most likely be outdated comparing to what one clones from git. 

[15:15] <patrickb> True.

[15:15] <vrurg> I have to go now. Would think of it over the day. But most likely will remove the feature tonight.

[15:15] <lizmat> fwiw, the current behaviour was a bit of a WAT to me

[15:15] <yoleaux> 14:29Z <vrurg> lizmat: picking up of moar/nqp from PATH is aimed at beginners who might have pre-installed packages. It is only used if there is no --prefix or --with-nqp/with-moar are used.

[15:16] <patrickb> o/

[15:16] <vrurg> lizmat: sorry for that. :(

[15:16] <vrurg> o/

[15:17] <lizmat> vrurg: no worries

[15:19] *** patrickb left
[15:19] *** netrino__ joined
[15:20] *** jmerelo joined
[15:21] <jmerelo> o

[15:27] *** nadim_ joined
[15:30] <Geth> ¦ doc: JJ assigned to antoniogamiz Issue Cache generated documentation https://github.com/perl6/doc/issues/717

[15:32] *** aindilis left
[15:34] *** aindilis joined
[15:35] *** feldspath left
[15:47] <Xliff> timotimo: You might need to bump Cairo. zef isn't picking up the latest changes.

[15:47] <holyghost> lo JJ, I'm into games with Xliff later on this week

[15:48] <holyghost> Xliff : indeed

[15:48] <holyghost> timotimo, writing interfaces really is for a true-hacker

[15:49] *** Manifest0 left
[15:49] <Xliff> .oO( wtf? )

[15:51] <Geth> ¦ doc/master: 5 commits pushed by (JJ Merelo)++

[15:51] <Geth> ¦ doc/master: d48f966ce1 | emit and done moved to independent routines page, closes #1032, refs #2810

[15:51] <Geth> ¦ doc/master: dfc6221612 | Moved rest of routines to Type page, refs #2810

[15:51] <Geth> ¦ doc/master: f3815a9fc5 | Wraps ups changes refs #2810

[15:51] <Geth> ¦ doc/master: a2b6d9a905 | Removes Language page, refs #2810

[15:51] <Geth> ¦ doc/master: 6c8f66cd0a | Reformats and checks definitions closes #2810

[15:51] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/03274aae4c90...6c8f66cd0a86

[15:52] *** netrino__ left
[15:53] *** Manifest0 joined
[15:54] <jmerelo> holyghost: I'd be very grateful if you read this I wrote a few days ago: https://colabti.org/irclogger/irclogger_log/perl6?date=2019-05-23#l222

[15:55] <jmerelo> holyghost: today you have released a new module without tests or documentation. You need to stop doing that, for the sake of the whole perl6 community

[15:55] <holyghost> jmerelo, there's docs

[15:55] <holyghost> I make the tests tomrrow

[15:56] <holyghost> I will read it

[15:56] <holyghost> I will

[15:56] <jmerelo> holyghost: no, you won't. You've said that repeatedly, yet you keep uploading stuff to CPAN that does not meet the minimum requirements for modules.

[15:57] <jmerelo> holyghost: the TL;DR of those messages is: stop uploading modules to CPAN if they are untested, undocumented, developed outside a repository where people can submit patches.

[15:57] *** abraxxa left
[15:57] <jmerelo> holyghost: I would also kindly ask you to remove all modules in CPAN that do not meet those standards.

[15:58] *** netrino__ joined
[15:58] <jmerelo> holyghost: and to stop uploading them until someone or a group of someones has reviewed them to check that they meet the community standards. You can upload them to some repo like GitHub or GitLab for that purpose, and share the link here.

[15:59] <holyghost> ok

[15:59] <holyghost> Did you see the docs of Soundn::Tina, they're in however

[16:00] <jmerelo> holyghost: do you understand that this means that if you upload any other module, or any other version of existing modules, we might have to take some measure about it?

[16:00] <holyghost> sure

[16:00] <jmerelo> holyghost: I saw the docs in the one previous to that. They're not docs, they're comments. It does not have a README.md file. No one will be able to find out what it does. That's the problem with all your modules I've checked.

[16:01] <jmerelo> holyghost: OK, thanks for understanding this. 

[16:03] <holyghost> I'll try to troll les on cpan

[16:04] *** nadim_ left
[16:05] <holyghost> I'll try to add tests and docs to my modules

[16:05] <holyghost> I understand that cpan is good code for everyone

[16:06] <holyghost> JJ, is Mathx::Stat and Bayes::Learn all right for you ?

[16:06] <holyghost> and Game::AI::Messaging ?

[16:07] <holyghost> they have docs and tests

[16:07] *** nadim_ joined
[16:07] <jmerelo> holyghost: this is one of the tests in Mathx::Stat. is-deeply $p.CalculatedCondP(3,0), $p.CalculatedCondP(3,0);

[16:07] <jmerelo> holyghost: do you think that's OK?

[16:07] <holyghost> as it's not a number, I explained lizmat before

[16:08] <jmerelo> holyghost: that's not the point. Something is going to always be equal to itself. Saying that's a test is cheating in Solitaire.

[16:08] <holyghost> yes but it runs ...

[16:08] <lizmat> m: use Test; is 42,42, 'success!'

[16:08] <camelia> rakudo-moar a643b8be1: OUTPUT: «ok 1 - success!␤»

[16:09] <jmerelo> holyghost: you might need to check out some literature about unitary tests. You can start here: https://docs.perl6.org/language/testing and continue here: https://perl6advent.wordpress.com/2017/12/07/day-7-test-all-the-things/

[16:09] <timotimo> jmerelo: but that calls the method twice, so if CalculateCondP accidentally modifies the $p, this could perhaps catch the mistake

[16:09] <holyghost> no it won't

[16:09] <holyghost> ok, I'll read up on that tommrow

[16:10] <AlexDaniel> timotimo: or if it segfaults… :D

[16:10] <timotimo> BBL

[16:10] <AlexDaniel> that's something that Blin can catch, at least

[16:10] <jmerelo> timotimo: you got me there. That's only an example, though.

[16:12] <jmerelo> timotimo: also, it does not test what it should actually be returning, only that whatever is returning, it's returning it twice.

[16:13] *** natrys joined
[16:15] <holyghost> JJ : anything else about Mathx::Stat an Bayes::Learn ? :-)

[16:16] *** nadim_ left
[16:16] <jmerelo> holyghost: it's still the same thing as the rest. I would be much more comfortable if you deleted them from CPAN and submitted the whole repo (these are in a repo, at least) for review here before uploading them again.

[16:17] <jmerelo> holyghost: there's an issue in that repo that's been gathering dust for some time. Addressing issues is always a good idea.

[16:17] <holyghost> ok

[16:22] *** Manifest0 left
[16:24] <ugexe> holyghost: what command do you use to test with?

[16:26] *** leah2 left
[16:27] *** nadim_ joined
[16:28] *** scimon left
[16:30] *** Manifest0 joined
[16:30] <holyghost> ugexe : perl6 --blob

[16:31] *** netrino__ left
[16:31] <jmerelo> holyghost: that syntax is incorrect. Just run it in your command line.

[16:33] <holyghost> the perl6 test command

[16:34] <holyghost> anyway, I uploaded Mathx::Stat and Bayes::Learn to github.com/theholygohst2, you cann ad PRs if you like or comment (latest version)

[16:35] <holyghost> *github.com/theholyghost2

[16:35] <ugexe> what is --blob?

[16:35] <jmerelo> holyghost: I added an issue. Just mentioned it above.

[16:36] <holyghost> jemerelo : I don't know if it updatedd correctly

[16:37] <holyghost> ugexe : I don't remember

[16:37] *** netrino__ joined
[16:39] *** Cabanossi left
[16:39] *** Cabanossi joined
[16:40] *** farcas_ left
[16:43] <ugexe> $ perl6 --blob foo.p6

[16:43] <ugexe> Illegal option --blob

[16:43] <ugexe> i find it hard to believe you are testing with `perl6 --blob`

[16:44] *** dakkar left
[16:47] <holyghost> ugexe : I'm sorry, I don't remember, it's the usual perl6 test flagged command

[16:47] <ugexe> there is no such thing

[16:50] <lizmat> .oO( unbelievable )

[16:51] <jmerelo> holyghost: you should really try to learn to run tests before uploading stuff to CPAN. Please check out the two links I've pointed you to above.

[16:52] *** Manifest0 left
[16:52] <jmerelo> holyghost: we'll be here to help you just in case you need help. But in order to get going, reading the documentation always helps.

[16:53] <holyghost> ok

[16:53] <holyghost> I did run the tests, I just forgot the command

[16:55] *** dolmen left
[16:56] *** leah2 joined
[16:57] *** Manifest0 joined
[17:05] *** netrino joined
[17:06] *** noisegul_ left
[17:06] *** netrino__ left
[17:07] *** noisegul joined
[17:07] <holyghost> jmerelo : thanks for the links

[17:10] *** farcas_ joined
[17:12] <jmerelo> holyghost: no problem. We're here to help. And be helped, too.

[17:12] <jmerelo> notable6: 

[17:12] <notable6> jmerelo, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Notable

[17:13] <jmerelo> notable6: Concurrent evolutionary algorithms in Perl 6, presented in EvoStar 2019 Leipzig https://geneura.wordpress.com/2019/05/28/exploring-concurrent-evolutionary-algorithms-in-perl-6/

[17:13] <notable6> jmerelo, Noted!

[17:13] <holyghost> jmerelo : thanks, I'm going to work on a game with Xliff as a ebugger soon

[17:13] <holyghost> *debugger

[17:13] <jmerelo> holyghost: good

[17:13] <holyghost> I'll try to push on some links of github

[17:16] *** broquain1 is now known as broquaint

[17:24] *** Manifest0 left
[17:30] *** Manifest0 joined
[17:35] *** netrino_ joined
[17:35] *** hythm_ joined
[17:36] *** netrino left
[17:38] *** zakharyas left
[17:39] <Geth> ¦ doc: 1a117976df | (JJ Merelo)++ | doc/Language/00-POD6-CONTROL

[17:39] <Geth> ¦ doc: Deletes page from control file refs #2810

[17:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1a117976df

[17:39] <synopsebot> Link: https://doc.perl6.org/language/00-POD6-CONTROL

[17:40] <hythm_> I have a grammar that broke after updating rakudo to latest: i made a small version of the grammar in this gist : https://gist.github.com/hythm7/dedb6638105029f7b103b7f99f04e323

[17:41] <moritz> m: https://gist.github.com/hythm7/dedb6638105029f7b103b7f99f04e323

[17:41] <camelia> rakudo-moar a643b8be1: OUTPUT: «True␤»

[17:42] <moritz> oh, it breaks only some times? that's really odd

[17:42] <hythm_> in the gist there is output file, with the perl6 version that works consistently. basically latest breaks intermittently 

[17:43] <hythm_> yes sometimes only, also i noticed 'no precompliation'  makes it break more often

[17:47] <moritz> hythm_: please report at https://github.com/rakudo/rakudo/issues/

[17:50] <moritz> I'm now building a current rakudo to reproduce

[17:52] <moritz> hythm_: cannot reproduce with 2019.03.1-493-gc9a78928f (current rakudo/master)

[17:54] <moritz> $ for i in $(seq 100); do ./perl6-m grammar.p6; done|grep -v True|wc -l

[17:54] <moritz> 0

[17:55] <hythm_> reported #2933

[17:55] <moritz> so it seems it was broken in 2019.03.1 but fixed later?

[17:56] <hythm_> i updated using 'rakudobrew build moar'

[17:56] <hythm_> i assume this build latest, i will update again a d check

[17:58] <dogbert17> perhaps it was this fix: https://github.com/perl6/nqp/commit/e49a70eb7e23036f7270c1c1c1367ae241ec2f4a (Parse |, ||, &, && prefixes not in nibble )

[18:04] <hythm_> i literally updated rakudo one hour ago, and i see the issue. probably im using rakudobrew wrong.  how can i install latest perl6 using rakudobrew?

[18:09] <jmerelo> can someone check this out? https://stackoverflow.com/questions/56346374/use-perl6-command-with-git-bash-on-windows

[18:09] <jmerelo> Maybe a Rakudo Star error?

[18:23] *** sauvin left
[18:25] *** pecastro joined
[18:30] *** vrurg left
[18:30] <hythm_> no issue after building with `rakudobrew build moar master`

[18:42] *** jmerelo left
[18:46] *** netrino__ joined
[18:48] *** netrino_ left
[18:50] *** natrys left
[18:54] *** molaf left
[19:01] *** natrys joined
[19:02] *** ravenousmoose joined
[19:08] *** ayerhart left
[19:09] *** dolmen joined
[19:09] *** ayerhart joined
[19:17] *** noisegul left
[19:21] *** farcas_ left
[19:28] *** Manifest0 left
[19:32] *** Manifest0 joined
[19:46] *** robertle left
[19:57] *** b2gills left
[19:59] *** molaf joined
[20:02] *** dolmen left
[20:07] *** b2gills joined
[20:10] *** ufobat__ joined
[20:14] *** ufobat_ left
[20:14] *** farcas_ joined
[20:16] <ugexe> rakudobrew build moar-blead

[20:16] <ugexe> gets the HEAD of rakudo, nqp, and moarvm

[20:17] <ugexe> rakudobrew build moar master will probably get the latest rakudo, but only the version of nqp and moarvm defined in the *_REVISION files

[20:22] *** zakharyas joined
[20:23] *** dolmen joined
[20:28] *** ravenousmoose left
[20:29] *** skids left
[20:30] *** lizmat_ joined
[20:33] *** lizmat__ joined
[20:34] *** lizmat left
[20:35] *** lizmat_ left
[20:35] *** lizmat__ is now known as lizmat

[20:42] *** pecastro left
[20:49] *** sena_kun left
[20:49] *** Manifest0 left
[20:53] *** lucasb joined
[20:53] <hythm_> rakudobrew build moar-blead did not work for me, failed during compiling

[20:54] *** Manifest0 joined
[20:54] *** skids joined
[20:58] *** Manifest0 left
[21:00] *** dolmen left
[21:01] *** skids left
[21:02] *** johnjohn101 joined
[21:03] *** Manifest0 joined
[21:13] *** zakharyas left
[21:21] *** niceperl joined
[21:23] *** Manifest0 left
[21:27] *** Manifest0 joined
[21:29] *** |oLa| left
[21:34] *** Manifest0 left
[21:34] *** dolmen joined
[21:36] *** niceperl left
[21:39] *** Manifest0 joined
[21:43] *** Manifest0 left
[21:46] *** niceperl joined
[21:49] *** pecastro joined
[21:52] *** Manifest0 joined
[21:54] *** ayerhart left
[22:01] *** nadim joined
[22:02] *** rindolf left
[22:03] *** dolmen left
[22:04] *** nadim_ left
[22:05] *** b2gills left
[22:05] *** b2gills joined
[22:12] *** farcas_ left
[22:12] *** Manifest0 left
[22:17] <AlexDaniel> weekly: jmerelo: Concurrent evolutionary algorithms in Perl 6, presented in EvoStar 2019 Leipzig https://geneura.wordpress.com/2019/05/28/exploring-concurrent-evolutionary-algorithms-in-perl-6/

[22:17] <notable6> AlexDaniel, Noted!

[22:18] *** leont left
[22:18] *** Manifest0 joined
[22:25] *** melezhik joined
[22:28] *** Sgeo joined
[22:30] *** MasterDuke joined
[22:30] <MasterDuke> Anyone want to do Perl 6 versions? https://news.ycombinator.com/item?id=20027281

[22:33] *** MasterDuke left
[22:38] *** kuppi joined
[22:40] *** Manifest0 left
[22:44] *** Manifest0 joined
[22:46] *** hythm_ left
[22:51] *** Manifest0 left
[22:52] *** natrys left
[22:56] *** Manifest0 joined
[23:02] *** niceperl left
[23:03] *** Manifest0 left
[23:04] *** kuppi left
[23:08] <cpan-p6> New module released to CPAN! Cofra (0.1.0) by 03HANENKAMP

[23:08] *** Manifest0 joined
[23:11] *** johnjohn101 left
[23:13] *** Sgeo_ joined
[23:17] *** Sgeo left
[23:22] *** aborazmeh joined
[23:22] *** aborazmeh left
[23:22] *** aborazmeh joined
[23:23] *** netrino__ left
[23:38] *** Manifest0 left
[23:42] *** Manifest0 joined
[23:51] *** Manifest0 left
[23:51] *** pecastro left
[23:52] *** netrino__ joined
[23:52] *** lucasb left
[23:54] *** aborazmeh left
[23:56] *** Manifest0 joined
[23:57] *** aborazmeh joined
[23:57] *** aborazmeh left
[23:57] *** aborazmeh joined
