[00:01] *** cpan-p6 left
[00:01] *** cpan-p6 joined
[00:02] <cpan-p6> New module released to CPAN! ULID (0.1.0) by 03HANENKAMP

[00:03] *** pecastro left
[00:17] *** dominix joined
[00:18] <dominix> hi perl6 community 

[00:18] <dominix> I have a question not directly related to perl6 but I trust this community for this kind of advice.

[00:19] <dominix> I need a low level/compiled language for performance reason. I would like this language to be integrated enought with perl6 

[00:20] <dominix> I am exploring Nim, crystal and Rust, with of these would you recomend to me 

[00:22] <dominix> i am currently learning perl6, and will mainly use perl6 over all 

[00:24] <zachk> I think C is kind of integrated with perl6, but not sure, I am kind of new to perl6 

[00:24] <leont> It's easy to integrate with anything that links like C

[00:26] <leont> I know Rust can do that (extern "C"), I don't know Nim well and hadn't even heard of crystal, but I suspect they can do the same

[00:28] <discord6> <Vendethiel> Rust is for « real-time »-ish app where having a gc is something you can’t afford. Crystal is nice but lacks manpower. Nim is nice bug the compiler is bugridden

[00:30] <dominix> what do you mean "lack manpower" ? too small community ?

[00:31] <dominix> btw I do not know any of these community.

[00:39] *** leont left
[00:48] *** patrickb joined
[00:48] *** patrickb left
[00:48] *** patrickb joined
[00:48] *** patrickb left
[00:52] *** patrickz left
[01:01] <discord6> <Vendethiel> No, I mean people working on the compiler toolchain.

[01:01] *** MasterDuke joined
[01:02] *** MasterDuke left
[01:02] *** MasterDuke joined
[01:07] *** sena_kun left
[01:15] <vrurg> m: role R0 { has $.a; }; role R1 does R0 { }; role R2 does R0 { }; class C does R1 does R2 { }

[01:15] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Attribute '$!a' conflicts in role composition␤at <tmp>:1␤»

[01:16] <vrurg> Is it a known problem?

[01:19] <AlexDaniel> vrurg: but is it a problem? I'm not sure

[01:19] *** zachk left
[01:20] <vrurg> AlexDaniel: imagine you consume roles from different packages which consume same role from a third package. Everything is ok until the third package decides they need an attribute in their role...

[01:23] <AlexDaniel> vrurg: maybe submit a ticket. If that's not supposed to work, then we can at least turn it into a doc ticket and explain what should be done in this case

[01:24] <vrurg> Sure I will. Just wanted to know if this has been considered before.

[01:27] *** juni joined
[01:28] *** juni left
[01:29] *** sjn_ is now known as sjn

[01:30] *** dominix left
[01:44] *** markoong left
[02:08] *** dominix joined
[02:12] *** w_richard_w left
[02:15] <dominix> From my latest question I will go for rust for a side language. 

[02:16] <dominix> Nim and crystal my be good language but rust is more disruptive in the innovations 

[02:16] *** reach_satori joined
[02:17] <dominix> Still it has good perspective for perfor

[02:17] <dominix> Mance

[02:22] *** dotdotdot left
[02:26] *** dominix left
[02:27] *** dotdotdot joined
[02:38] *** Guest32385 is now known as masak

[02:39] * masak is still a bit confused over "disrupt" taking on positive connotations

[02:41] *** Actualeyes left
[03:00] *** ofperfection left
[03:06] *** lookatme_q joined
[03:14] *** pyrimidine left
[03:14] *** pyrimidine joined
[03:36] *** ferreira left
[03:55] *** cpan-p6 left
[03:55] *** cpan-p6 joined
[04:13] *** mowcat joined
[04:35] *** abraxxa joined
[04:40] *** abraxxa left
[04:42] *** abraxxa joined
[04:46] *** abraxxa left
[04:49] *** kurahaupo left
[04:50] *** AlexDani` joined
[04:55] *** AlexDaniel left
[05:00] *** abraxxa joined
[05:01] *** Xliff left
[05:21] *** zacts joined
[05:30] *** zacts left
[05:35] *** w17t left
[05:54] *** curan joined
[05:54] *** abraxxa left
[05:56] *** robertle joined
[06:07] *** robertle left
[06:17] <moritz> language has disrupted you, masak :D

[06:33] *** domidumont joined
[06:47] * masak .oO( <archimedes> do not disrupt my circles! )

[06:51] *** zacts joined
[06:51] *** jaja joined
[06:52] *** kerrhau left
[06:53] *** random_yanek left
[06:56] *** w17t joined
[06:57] *** jmerelo joined
[07:08] *** random_yanek joined
[07:11] *** ravenousmoose joined
[07:18] *** ryn1x left
[07:21] *** domidumont left
[07:21] *** domidumont joined
[07:28] *** cpan-p6 left
[07:29] *** cpan-p6 joined
[07:38] *** rindolf joined
[07:41] *** jmerelo left
[07:46] *** ravenousmoose left
[07:46] *** ravenousmoose joined
[07:50] *** mindd joined
[07:50] <mindd> hi

[07:51] *** zacts left
[07:52] *** mindd left
[08:01] <discord6> <Vendethiel> People get bitter over Rust because they don’t actually fit too well within the initial use-case, methinks

[08:02] <discord6> <Vendethiel> It certainly has had more researchers writing about it than crystal and nim, though.

[08:02] <discord6> <Vendethiel> However I’m not sure I’d call that « disruptive »...

[08:11] *** ravenousmoose_ joined
[08:30] *** sno left
[08:33] *** zakharyas joined
[08:47] *** ufobat joined
[08:54] *** dustinm` left
[08:55] *** mowcat left
[08:58] *** dustinm` joined
[09:04] *** ryn1x joined
[09:06] *** dustinm` left
[09:08] *** ryn1x left
[09:17] *** dustinm` joined
[09:21] *** ryn1x joined
[09:22] *** dakkar joined
[09:32] *** abraxxa joined
[09:38] *** domidumont1 joined
[09:40] *** domidumont left
[09:50] *** sena_kun joined
[09:56] *** aindilis` left
[09:57] *** aindilis joined
[10:17] *** Actualeyes joined
[10:19] *** domidumont1 left
[10:21] *** kensanata joined
[10:21] *** AlexDani` is now known as AlexDaniel

[10:22] *** Geth left
[10:22] *** Geth joined
[10:22] *** ChanServ sets mode: +v Geth

[10:51] *** cpan-p6 left
[10:52] *** cpan-p6 joined
[11:00] *** Actualeyes left
[11:03] *** scimon joined
[11:10] <SyrupThinker> I cannot resolve rakudo.org , does anybody else have that problem?

[11:12] <sena_kun> isup.me says "It's not just you! rakudo.org looks down from here". :|

[11:13] <jnthn> Next question: does anyone know where it should resolve to? :)

[11:14] <moritz> to 213.95.82.53 

[11:15] <jnthn> The domain recently transferred ownership and moved registrar as part of that. It left the name server records intact. Unfortunately, the previous registrar seems to have immediately dropped answering resolution requests upon that happening.

[11:15] <moritz> more than that, the resolver time out

[11:15] <jnthn> Wow

[11:16] <moritz> and 2001:780:101:ff00::80:1 as IPv6 address

[11:18] <jnthn> Thanks; I've pointed it to a new nameserver and put in the A[AAA]? records :)

[11:18] <jnthn> Bit annoying that there was no grace period; I checked last night "is the transfer done yet" and the answer was "no".

[11:19] <moritz> yes, that's pretty shitty behavior from the old DNS provider

[11:19] <moritz> ok, a dig rakudo.org +trace now works for me

[11:19] <moritz> same for AAAA

[11:20] <moritz> so now it's just a matter of caches expiring

[11:20] <moritz> at $work, we decrease the zone TTL to 60s or so before migrating a domain, for cases exactly like this

[11:21] <moritz> but then we also strive to not be an asshole to people/companies leaving our service :D

[11:21] <jnthn> :)

[11:21] <jnthn> Thanks for checking/help; moritz++

[11:22] <moritz> no problem :D

[11:29] *** jaja left
[12:00] *** markoong joined
[12:01] *** AlexDaniel left
[12:11] *** cygx joined
[12:14] <El_Che> rakudo.org works for me (TM)

[12:14] *** lucasb joined
[12:15] <lizmat> as for me

[12:16] <jnthn> Still waiting on the timeout here, it seems

[12:17] *** mscha joined
[12:17] <lizmat> it might be your router keeping it...  

[12:17] <El_Che> jnthn: or your local pc cache

[12:17] <lizmat> but if it is just you, don't worry about it  :-)

[12:18] <mscha> m: for 1,3...99999999 -> int $i { }; say now - INIT now;

[12:18] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «0.3954962␤»

[12:18] <El_Che> lizmat: he probably doesn't even know what rakudo is :)

[12:18] <mscha> m: loop (my int $i = 1; $i ≤ 99999999; $i += 2) { }; say now - INIT now;

[12:18] <Geth> ¦ doc: d0b656b4fd | (JJ Merelo)++ | doc/Language/variables.pod6

[12:18] <synopsebot> Link: https://doc.perl6.org/language/variables

[12:18] <Geth> ¦ doc: Clarifies scope of state closes #2616

[12:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d0b656b4fd

[12:18] <cygx> so, no idea about other peple's workflow, but I've found local development with -I and PERL6LIB suboptimal

[12:18] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «8.87235327␤»

[12:18] <cygx> hence, I've created a tool that might help: https://github.com/cygx/6lib

[12:19] <cygx> it's literally only a day old, so be warned if yout try it out yourself

[12:19] <lizmat> mscha: the 1,3...9999 case is highly optimised

[12:19] <lizmat> m: loop (my $i = 1; $i ≤ 99999999; $i += 2) { }; say now - INIT now;

[12:20] <mscha> It isn't in my installation of Rakudo Star 2018.10 yet.  ;-)  (There, 1,3...99999999 is about 25 times slower than loop)

[12:20] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «(timeout)»

[12:20] *** robertle joined
[12:20] <mscha> But the loop version is a *lot* faster on my machine.

[12:20] <lizmat> m: loop (my int $i = 1; $i ≤ 99999999; $i = $i + 2) { }; say now - INIT now;

[12:20] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «9.4707716␤»

[12:21] <lizmat> 0.37937893 vs 2.683154 on mine

[12:22] <mscha> Rakudo Star 2018.10: loop takes half a second, for 1,3... takes 12.5 seconds.

[12:22] *** ravenousmoose_ left
[12:22] <lizmat> oops, actually: 0.37937893 vs 0.322489 for me (I had forgotten the "int"

[12:23] <mscha> So how come the loop one is so slow using the bot?

[12:23] <lizmat> good question

[12:27] *** ravenousmoose is now known as ravenousmoose[aw

[12:27] *** ravenousmoose[aw left
[12:28] *** zakharyas left
[12:33] *** ravenousmoose joined
[12:36] *** w17t left
[12:47] *** Xliff joined
[12:47] <Xliff> \o

[12:48] *** ravenousmoose_ joined
[12:48] <Xliff> If I have a bunch of subs in a .pm6 file, if I use that pm6 file, can I list those subs?

[12:49] <sena_kun> `use Foo; for MY::.keys -> do stuff`

[12:49] <Xliff> :)

[12:49] <Xliff> Lemme try

[12:50] <Xliff> Aaannd.... now I have to wait for precompile hell. 

[12:50] <Xliff> (Yes, this is GTK stuffs)

[12:50] *** Grauwolf_ is now known as Grauwolf

[12:50] <sena_kun> m: use NativeCall; MY::.grep({ $_.value ~~ Sub}).say

[12:50] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «(&postcircumfix:<[ ]> => &postcircumfix:<[ ]> &trait_mod:<is> => &trait_mod:<is> &explicitly-manage => &explicitly-manage &cglobal => &cglobal &nativecast => &nativecast &nativesizeof => &nativesizeof &refresh => &refresh)␤»

[12:50] <sena_kun> Xliff, something like ^

[12:51] <Xliff> Hmm... not getting the subs

[12:51] <Xliff> All subs are NOT listed as export.

[12:52] <sena_kun> erm, if they are not, I don't think you can get those.

[12:52] <Xliff> :(

[12:52] <Xliff> That's what I suspected.

[12:52] <sena_kun> I may be wrong, but that'd be too odd, isn't it?

[12:52] <sena_kun> I mean.

[12:52] <sena_kun> You know. :)

[12:53] <Xliff> I know. Was hoping I could introspect at the package level.

[12:53] <Xliff> Maybe I could make them our scoped?

[12:53] <sena_kun> well... That might be possible, but it's just that I don't know how.

[12:53] <moritz> if they are 'my' and not exported, that might have a reason

[12:53] <moritz> like, possibly nobody designed an API intended for public use

[12:54] <Xliff> I am now 'our' scoping the subs. ;)

[12:55] <Xliff> OK. Subs now "our" scoped, but not exported.

[12:55] <Xliff> I still can't see 'em.

[12:57] <sena_kun> well, if you do `use Foo;`, then you can do something with `Foo.HOW`, but tbh I don't remember right now what exactly.

[12:59] <sena_kun> ah, no, I think the case I know is made with `MY::.kv`, so please ignore me.

[13:01] <Xliff> So is there any way to get our scoped symbols out of a compunit?

[13:02] <lizmat> m: class Foo { our sub a { } }; dd Foo::   # Xliff 

[13:02] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «Stash element = {"\&a" => sub a { #`(Sub|62371648) ... }}␤»

[13:02] <lizmat> m: class Foo { our sub a { } }; dd Foo::.keys

[13:02] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «("\&a",).Seq␤»

[13:04] <Xliff> lizmat: File contains a role def and the sub defs are OUTSIDE of the role.

[13:05] <Xliff> Here's the file: https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Roles/Signals/Generic.pm6

[13:05] <Xliff> Subs at the bottom are "our" scoped in my local copy.

[13:06] <cygx> I suspect they end up in GLOBAL::

[13:07] <cygx> you might want to put them in a module...

[13:09] <lizmat> m: class Foo { sub a { }; method subs() { OUTER::.keys.grep: *.starts-with("&") } }; dd Foo.subs

[13:09] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «("\&a",).Seq␤»

[13:09] <lizmat> afk&

[13:14] *** sno joined
[13:23] <Xliff> OK, now exported and STILL can't find them.

[13:23] <Xliff> How would I look them up in GLOBAL?

[13:25] *** mscha left
[13:28] <timotimo> m: say GLOBAL::.keys

[13:28] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «()␤»

[13:29] <Xliff> Looking familiar, there. ;)

[13:30] *** rindolf left
[13:37] *** rindolf joined
[13:46] *** cygx left
[13:46] *** hsrt^ joined
[13:55] *** domidumont joined
[13:56] *** domidumont left
[14:00] *** domidumont joined
[14:01] *** araraloren joined
[14:07] <cpan-p6> New module released to CPAN! Canoe (0.0.3) by 03ALOREN

[14:10] *** cpan-p6 left
[14:11] *** cpan-p6 joined
[14:11] *** w17t joined
[14:18] *** zakharyas joined
[14:25] <perlbot> Eric pasted a new file at https://perlbot.pl/p/8m9big - 

[14:26] <AlexDaniel`> Haha

[14:27] <Ven``> what creativity.

[14:29] *** dogbert2_ left
[14:32] *** ravenousmoose_ left
[14:33] <El_Che> what a waste of perfectly fine air

[14:40] <tadzik> jokes are art

[14:40] <tadzik> but I worry this might be someone seriously thinking this'll work

[14:46] <timotimo> how do you sell perlbot.pl?

[14:46] <Geth> ¦ ecosystem: 2e82582bd4 | cygx++ (committed using GitHub Web editor) | META.list

[14:46] <Geth> ¦ ecosystem: Add App::SixLib

[14:46] <Geth> ¦ ecosystem: 

[14:46] <Geth> ¦ ecosystem: See https://github.com/cygx/6lib

[14:46] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/2e82582bd4

[14:46] <timotimo> er, i mean

[14:46] <timotimo> what do you sell on perlbot.pl?

[14:47] *** curan left
[14:50] <AlexDaniel`> That's automated for sure, but I wonder why it liked that form

[14:54] <timotimo> "i am a simple bot. i see a submit button, i click"

[14:56] *** ravenousmoose_ joined
[15:03] *** chacewells joined
[15:04] *** araraloren left
[15:07] <Ven``> m: use v6e;

[15:07] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «===SORRY!===␤Cannot call method 'typed_panic' on a null object␤»

[15:08] <Ven``> m: use v6.e;

[15:08] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «===SORRY!===␤Cannot call method 'typed_panic' on a null object␤»

[15:08] <Ven``> mh.

[15:08] <discord6> <Rogue> I wonder, how do multiline messages get handled by the bot? This is a new line

[15:08] <sena_kun> m: use v6.c;

[15:08] <camelia> rakudo-moar 9d6e508d0: ( no output )

[15:08] <sena_kun> m: use v6.d;

[15:08] <camelia> rakudo-moar 9d6e508d0: ( no output )

[15:08] <sena_kun> m: use v6.e;

[15:08] <camelia> rakudo-moar 9d6e508d0: OUTPUT: «===SORRY!===␤Cannot call method 'typed_panic' on a null object␤»

[15:09] <moritz> the bot translates ␤ into newlines in the input, and the other way round in the output

[15:10] <discord6> <Rogue> I meant the bridge bot, sorry

[15:13] *** saki joined
[15:18] *** Sgeo joined
[15:20] *** mikejw joined
[15:20] *** AlexDaniel joined
[15:21] *** Sgeo_ left
[15:30] *** powerbit left
[15:31] *** mowcat joined
[15:31] *** chacewells left
[15:34] *** ravenousmoose_ left
[15:35] *** w17t left
[15:36] *** jmerelo joined
[15:47] <timotimo> Rogue, it seems to just put a space in between the lines

[15:48] *** ChoHag left
[15:58] *** discord6 left
[15:58] <jmerelo> releasable6: status

[15:58] <releasable6> jmerelo, Next release in ≈3 days and ≈3 hours. 4 blockers. 174 out of 302 commits logged

[15:58] <timotimo> @Rogue - does this make a highlight?

[15:58] <releasable6> jmerelo, Details: https://gist.github.com/3a123f543a1c6c250bd4de06496122a0

[16:00] *** tyil left
[16:02] <timotimo> oh, the bot left

[16:03] <timotimo> that's why it doesn't send messages to discord any more

[16:03] *** leont joined
[16:05] *** skids joined
[16:10] *** ferreira joined
[16:13] *** discord6 joined
[16:14] *** discord6 left
[16:15] *** mowcat left
[16:15] *** mowcat joined
[16:18] *** discord6 joined
[16:19] <kybr> Perl6 regex library yet? now that i'm getting to know them, i want'em everywhere.

[16:20] *** discord6 left
[16:20] <Geth> ¦ doc: 55a996492b | cfa++ | doc/Language/variables.pod6

[16:20] <synopsebot> Link: https://doc.perl6.org/language/variables

[16:20] <Geth> ¦ doc: Phrasing.

[16:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/55a996492b

[16:21] <sjn> kybr: it just means you'll have to use Perl 6 everywhere ;)

[16:23] <kybr> i wish i could. in this case, maybe i can glue somethign together. i find myself using vim search and replace and i'd really like the p6re.

[16:24] *** discord6 joined
[16:25] *** discord6 left
[16:34] <El_Che> kybr: I would appreciate if you would implement :perl6do for vim

[16:35] <Ven``> do we not have some sort of .map-keys and .map-values? 

[16:35] *** discord6 joined
[16:35] <Ven``> I must misremember.

[16:36] <jmerelo> webstrand: we have .keys.map and .values.map

[16:36] *** cpan-p6_ joined
[16:36] <Ven``> er, not even the right prefix :P

[16:36] <Ven``> I don't want .keys.map and .values.map, I want .map-keys and .map-values

[16:36] <Ven``> (those keep the other side)

[16:37] <jmerelo> Ven``: You want to map keys or values? I don't think I understand what you mean.

[16:38] <timotimo> Ven``: you're probably looking for something with an :as parameter

[16:39] <timotimo> anyway, .pairs.map is probably the right thing in your instance

[16:39] <Ven``> m: sub map-keys(%h, $f) { %h.map(-> $p { $f($p.key) => $p.value }); }; map-keys({:1a, :2b, :3c}, *.succ).say

[16:39] <camelia> rakudo-moar 121ca5fda: OUTPUT: «(c => 2 b => 1 d => 3)␤»

[16:40] *** cpan-p6 left
[16:40] <Ven``> here's what I mean

[16:40] <jnthn> I'm not aware of anything shorter than that.

[16:41] *** ravenousmoose left
[16:41] *** ufobat_ joined
[16:41] <El_Che> perl 6, got to love it

[16:41] <Ven``> aw, ok

[16:41] <El_Che> in go you know you'll end writing a function

[16:41] <El_Che> in perl 6 there is some much in core, that you're always in doubt if the functionality isn't already built in

[16:42] <El_Che> it does not matter how weird it is :)

[16:42] *** tyil joined
[16:43] <timotimo> m: my %h = :1a, :2b, :3c; my %x = %h.keys.map(*.succ) Z=> %h.values; say %x

[16:43] <camelia> rakudo-moar 121ca5fda: OUTPUT: «{b => 1, c => 2, d => 3}␤»

[16:43] <jnthn> El_Che: Not to mention that having such stuff to hand often leads me to solve problems in good ways rather than "eh, I'll cheat a bit" :)

[16:44] *** ufobat left
[16:44] <El_Che> jnthn: I alway reason that people that implement that stuff for me are better programmers, so their core stuff will be faster and safer :)

[16:45] *** discord6 left
[16:45] *** discord6 joined
[16:45] *** discord6 left
[16:46] *** cpan-p6_ left
[16:46] <jnthn> El_Che: I'm not sure it's so much about "better programmers" so much as "more eyes, more tests"

[16:47] <Ven``> timotimo: not shorter enough to warrant the "weird Z" ;)

[16:47] <Ven``> (imho)

[16:47] *** kensanata left
[16:47] <Ven``> (and since I'm writing this code for $work, it'll have to be maintained by others)

[16:48] <timotimo> :)

[16:48] *** tyil left
[16:48] *** mowcat left
[16:49] *** ravenousmoose joined
[16:49] *** cpan-p6 joined
[16:49] *** discord6 joined
[16:50] *** tyil joined
[16:54] *** lucasb left
[16:57] *** discord6 left
[16:59] *** tyil left
[17:01] *** discord6 joined
[17:01] *** cpan-p6_ joined
[17:01] *** ravenousmoose left
[17:02] *** ravenousmoose joined
[17:03] *** discord61 joined
[17:03] *** discord61 left
[17:04] <Ven``> I'll probably stick a map-keys and map-values into a module and call it a day. Not sure whether as augments or not (I still like the feed operator...)

[17:04] *** cpan-p6 left
[17:04] *** sena_kun left
[17:04] *** sena_kun joined
[17:04] *** sena_kun left
[17:04] *** tyil joined
[17:05] *** molaf joined
[17:06] <scimon> I feel a strength of Perl6 is as a language for making shared languages. It's easy to extend and create an ecosystem a team can work in.

[17:06] <Ven``> I suppose some Common Lispers felt the same..:)

[17:06] *** aindilis` joined
[17:07] <scimon> One thing I think we should work on is documenting how to setup a shared local repository. DarkPan for Perl6. 

[17:07] <scimon> I keep meaning to do it.

[17:09] <jmerelo> scimon: I've also thought about that.

[17:09] <scimon> As far as I can tell the easiest way is for a local group using git would be to mimic the original system 

[17:09] *** aindilis left
[17:09] <jmerelo> scimon: but it's going to be a hard thing to do. For the time being, the paths to repos are hard-coded in zef.

[17:09] <scimon> zef config.

[17:09] <scimon> https://github.com/ugexe/zef#phases--plugins-settings

[17:10] <jmerelo> scimon: I'd do it in a roundabout way, and it's something I would like to do sooner or later: fork zef and do some other stuff.+

[17:10] <jmerelo> scimon: no matter what, it's healthy to have several entry points to the ecosystem. Rigth now, zef is the only gate, and gatekeeper.

[17:11] <scimon> I think it's a case of having a custom config with your local git repo data in and recreating the Meta json files. 

[17:11] <scimon> Hmmm I was looking for a talk to give at LPM in a couple of weeks.

[17:12] <jmerelo> scimon: theoretically. But in general, zef is not keen on being used outside its only intended purpose.

[17:12] <jmerelo> scimon: you might find paths to repo descriptions are hardcoded.

[17:12] <scimon> https://github.com/ugexe/zef/blob/master/resources/config.json

[17:12] <scimon> :D

[17:13] <scimon> (Now this is me just poking about.)

[17:13] *** tyil left
[17:14] <scimon> But it looks like having a  customer config that added a new Ecosystem from a given URL would be simple enough.

[17:14] <jmerelo> scimon: well, give it a spin and report back. Good luck.

[17:15] *** discord6 left
[17:15] *** discord6 joined
[17:15] <scimon> Aye. :)

[17:16] *** zacts joined
[17:28] <ufobat_> is there a "deep clone" method for (simple) objects, or do i need to implement such a ding by hand?

[17:29] *** mowcat joined
[17:31] <scimon> .clone ?

[17:31] *** vrurg left
[17:32] <ufobat_> it's shallow

[17:33] <jmerelo> ufobat_: what about dumping to JSON and getting it back on the other side? As long as you know the type...

[17:33] <scimon> What kind of objects are we talking about?

[17:34] <scimon> m: role Bob { has $.hi };role Sue { has Bob $.bob };my $b = Sue.new( bob => Bob.new( hi => "There" ) );say $b.perl;my $c = $b.clone;say $c.perl

[17:34] <camelia> rakudo-moar 121ca5fda: OUTPUT: «Sue.new(bob => Bob.new(hi => "There"))␤Sue.new(bob => Bob.new(hi => "There"))␤»

[17:35] <scimon> Anyway. I need to run away. 

[17:35] <scimon> Ciao

[17:35] *** scimon left
[17:42] *** dakkar left
[17:43] *** domidumont1 joined
[17:44] *** domidumont1 left
[17:45] *** ravenousmoose is now known as ravenousmoose[aw

[17:47] *** domidumont left
[17:47] *** zachk joined
[17:50] *** domidumont joined
[17:51] *** domidumont left
[17:52] *** domidumont joined
[17:53] *** sena_kun joined
[17:53] *** domidumont left
[17:53] *** domidumont joined
[17:54] <ufobat_> m: role Bob { has $.hi };role Sue { has Bob $.bob };my $b = Sue.new( bob => Bob.new( hi => "There" ) );say $b.perl;my $c = $b.clone; $b.bob.hi = "foo"; say $c.perl

[17:54] <camelia> rakudo-moar 121ca5fda: OUTPUT: «Sue.new(bob => Bob.new(hi => "There"))␤Cannot modify an immutable Str (There)␤  in block <unit> at <tmp> line 1␤␤»

[17:55] <ufobat_> m: role Bob { has $.hi is rw };role Sue { has Bob $.bob };my $b = Sue.new( bob => Bob.new( hi => "There" ) );say $b.perl;my $c = $b.clone; $b.bob.hi = "foo"; say $c.perl

[17:55] <camelia> rakudo-moar 121ca5fda: OUTPUT: «Sue.new(bob => Bob.new(hi => "There"))␤Sue.new(bob => Bob.new(hi => "foo"))␤»

[17:55] *** ravenousmoose_ joined
[17:55] *** domidumont left
[17:55] <ufobat_> but in general it are objects as simple as that

[17:56] *** ravenousmoose[aw is now known as ravenousmoose

[18:04] *** ravenousmoose_ left
[18:04] *** mowcat left
[18:07] *** |oLa| joined
[18:16] *** vrurg joined
[18:17] *** ChoHag joined
[18:18] *** mikejw left
[18:20] *** vendethiel- joined
[18:26] *** zacts left
[18:26] *** ravenousmoose is now known as ravenousmoose[aw

[18:30] <Xliff> m: 1.fmt('%02d').say;

[18:30] <camelia> rakudo-moar 121ca5fda: OUTPUT: «01␤»

[18:35] <Xliff> m: Version.new('v1.1.1').say

[18:35] <camelia> rakudo-moar 121ca5fda: OUTPUT: «vv.1.1.1␤»

[18:35] <Xliff> m: Version.new('v1.1.1'.substr(1)).say

[18:35] <camelia> rakudo-moar 121ca5fda: OUTPUT: «v1.1.1␤»

[18:36] *** vendethiel- left
[18:37] <Geth> ¦ doc: 7ff36db5f8 | (JJ Merelo)++ | doc/Type/Mu.pod6

[18:37] <synopsebot> Link: https://doc.perl6.org/type/Mu

[18:37] <Geth> ¦ doc: Clarifies example

[18:37] <Geth> ¦ doc: 

[18:37] <Geth> ¦ doc: Thanks to @raiph in

[18:37] <Geth> ¦ doc: https://stackoverflow.com/a/54635282/891440. This (hopefully) closes #2620

[18:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7ff36db5f8

[18:37] *** vendethiel- joined
[18:42] *** ravenousmoose[aw is now known as ravenousmoose

[18:45] <b2gills> m: Xliff: say v1.1.1 == Version.new('1.1.1')

[18:45] <camelia> rakudo-moar 121ca5fda: OUTPUT: «True␤»

[18:45] <b2gills> m: say Version.new('1.1.1')

[18:45] <camelia> rakudo-moar 121ca5fda: OUTPUT: «v1.1.1␤»

[18:50] <Xliff> b2gills: I know. ;)

[18:51] <Xliff> I haved a C-lib that I want to build version info for. So the Str output needs to prefix the v.

[18:51] <Xliff> I construct the Version output from the Str coz I'm lazy and the Str version was easy to write. :D

[18:56] *** leont left
[18:57] *** zacts joined
[19:02] <Xliff> Can you have a package/object with a name that ends in "::Version"?

[19:02] <Xliff> Or is that reserved?

[19:07] *** chiyosaki joined
[19:10] *** saki left
[19:10] <timotimo> should be fine

[19:10] <timotimo> since version modifiers go by :ver rather than ::Version

[19:10] *** zakharyas left
[19:22] *** sauvin left
[19:47] *** jmerelo left
[19:52] *** vendethiel- left
[20:00] *** xinming_ joined
[20:02] *** chiyosaki left
[20:03] *** xinming left
[20:04] *** cpan-p6 joined
[20:09] <cpan-p6> New module released to CPAN! Printing-Jdf (0.1.1) by 03JSTOWE

[20:12] <rindolf> .seen Zoffix

[20:12] <yoleaux> I saw Zoffix 6 Jan 2019 17:41Z in #perl6: <Zoffix> moritz: the project's direction and management style doesn't match my goals and I'll be happier elsewhere.

[20:14] <cpan-p6_> New module released to CPAN! Printing-Jdf (0.1.1) by 03JSTOWE

[20:14] *** cpan-p6_ left
[20:16] *** ravenousmoose left
[20:19] *** |oLa| left
[20:32] *** vendethiel- joined
[20:34] *** powerbit joined
[20:36] *** zakharyas joined
[20:39] *** pecastro joined
[20:54] *** cpan-p6_ joined
[20:55] *** cpan-p6 left
[20:59] *** ryn1x left
[21:04] *** daxim joined
[21:08] *** cpan-p6 joined
[21:09] *** cpan-p6 left
[21:09] *** zacts left
[21:10] *** ravenousmoose joined
[21:11] *** Cabanossi left
[21:15] *** zakharyas left
[21:17] *** Cabanossi joined
[21:31] *** [Sno] joined
[21:34] *** sno left
[21:35] *** ufobat_ left
[21:37] *** ravenousmoose left
[21:37] *** molaf left
[21:37] *** ravenousmoose joined
[21:46] *** xi left
[21:46] *** xi- joined
[21:48] *** ravenousmoose left
[21:49] *** ravenousmoose joined
[21:51] *** drolax joined
[21:52] *** ravenousmoose left
[21:56] *** dominix_ joined
[21:56] *** dominix_ is now known as dominix

[21:57] <dominix> hi everyone

[21:57] <dominix> I am looking for the short form of div 

[21:58] <dominix> the short form of multiply is $x *= 2;

[21:58] <dominix> but what is the short form of $x = $x div 2; ?

[21:58] <dominix> $x /= 2 ; do not work

[21:59] <Xliff> m: multi sub a ($i) { say "I"; }; multi sub a (*@i) { say "II"; }; a(1);

[21:59] <camelia> rakudo-moar 121ca5fda: OUTPUT: «I␤»

[21:59] <discord6> <Vendethiel> div=

[21:59] <Xliff> m: multi sub a ($i) { say "I"; }; multi sub a (*@i) { say "II"; }; a(1, 2);

[21:59] <camelia> rakudo-moar 121ca5fda: OUTPUT: «II␤»

[21:59] <discord6> <Rogue> you can simply do $x div= 2 I believe

[21:59] <discord6> <Rogue> = is both a normal operator and a metaoperator

[22:00] <discord6> <Vendethiel> $x [Rdiv]= 2 for the other way around

[22:00] <dominix> ok, ... weird  but acceptable.

[22:00] <Xliff> m: m $x = 4; $x [div]= 2; $x.say;

[22:00] <camelia> rakudo-moar 121ca5fda: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter = (must be quoted to match literally)␤at <tmp>:1␤------> 3m $x7⏏5 = 4; $x [div]= 2; $x.say;␤Couldn't find terminator $ (corresponding $ was at line 1)␤at <tmp>:1␤------> 3m $x =7…»

[22:01] <Xliff> m: m $x = 4; $x [&div]= 2; $x.say;

[22:01] <camelia> rakudo-moar 121ca5fda: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter = (must be quoted to match literally)␤at <tmp>:1␤------> 3m $x7⏏5 = 4; $x [&div]= 2; $x.say;␤Couldn't find terminator $ (corresponding $ was at line 1)␤at <tmp>:1␤------> 3m $x =7…»

[22:01] <Xliff> m: my $x = 4; $x [div]= 2; $x.say;

[22:01] <camelia> rakudo-moar 121ca5fda: OUTPUT: «2␤»

[22:01] <Xliff> There you go

[22:03] *** drolax left
[22:03] <dominix> m: my $x = 4; $x div= 2; $x.say;

[22:03] <camelia> rakudo-moar 121ca5fda: OUTPUT: «2␤»

[22:04] <dominix> this works for me.

[22:04] *** drolax joined
[22:05] <Xliff> :)

[22:06] *** skids left
[22:12] *** mowcat joined
[22:17] *** vendethiel- left
[22:27] *** drolax left
[22:33] *** Sgeo left
[22:33] *** petercommand left
[22:33] *** petercommand joined
[22:33] *** k-man left
[22:35] *** TeamBlast left
[22:35] *** k-man joined
[22:36] *** TeamBlast joined
[22:36] *** rjbs left
[22:36] *** rjbs joined
[22:39] *** discord6 left
[22:40] *** discord6 joined
[22:40] *** tyil joined
[22:57] *** dogbert17 left
[23:03] <Xliff> If I want to access something like an array, can I just implement method AT-POS?

[23:04] *** discord6 left
[23:04] *** tyil left
[23:05] *** discord6 joined
[23:06] <sena_kun> m: class A { has @.a = 1,2,3,4,5; method AT-POS($index) { @!a[$index] } }; say A.new[2]; say A.new[4];

[23:06] <camelia> rakudo-moar 121ca5fda: OUTPUT: «3␤5␤»

[23:06] *** rindolf left
[23:07] <Xliff> sena_kun++: :) # Thanks!

[23:07] * sena_kun .oO ( some questions can be easier to check than to ask )

[23:07] <sena_kun> yw

[23:07] <Xliff> I was thinking about how I would do that. You think faster. ;p

[23:13] *** discord6 left
[23:15] *** Xliff left
[23:15] *** Xliff joined
[23:16] *** cpan-p6_ left
[23:17] *** discord6 joined
[23:19] *** discord61 joined
[23:19] *** discord61 left
[23:22] *** tyil joined
[23:24] *** ryn1x joined
[23:27] *** tyil left
[23:29] *** discord61 joined
[23:29] *** discord6 left
[23:30] *** discord61 is now known as discord6

[23:36] *** reach_satori left
[23:46] *** tyil joined
[23:51] <timotimo> there's a module in the ecosystem meant to make it easier to build custom array-likes

[23:56] *** discord61 joined
[23:57] *** discord6 left
[23:57] *** discord61 is now known as discord6

