[00:15] *** pmurias left
[00:18] *** netrino left
[00:19] *** BrassLantern joined
[00:19] *** BrassLantern left
[00:19] *** BrassLantern joined
[00:23] *** __jrjsmrtn__ left
[00:28] <lookatme_q> morning 

[00:28] *** lucasb left
[00:28] *** cpan-p6 left
[00:28] *** cpan-p6 joined
[00:28] *** cpan-p6 left
[00:28] *** cpan-p6 joined
[00:29] *** rindolf left
[00:32] *** dalek left
[00:33] *** Geth left
[00:33] <timotimo> [ptc]: the footnotes on your blog don't work :< they just scroll to the very top

[00:37] *** BrassLantern left
[00:40] *** kaare__ left
[00:42] *** kaare__ joined
[00:43] <ugexe> m: for (1..10000) { my $b = 100; while (--$b) { my $bottles = (($b == 1) and "bottle" or "bottles"); (join("", "$b $bottles of beer on the wall\n", "$b $bottles of beer\n", "Take one down, pass it around\n", "$b $bottles of beer on the wall\n", "\n" )); } }; # 99 bottles of beer in perl5/perl6. perl5 runs in 0.469s (heheh) and perl6 in 6.584

[00:43] <camelia> rakudo-moar 0d47db86c: ( no output )

[00:44] <ugexe> print statement removed

[00:47] *** w_richard_w joined
[00:49] *** kaare_ joined
[00:50] <ugexe> without the join (using 1 giant string) its perl5 0.380 and perl6 4.008

[00:51] *** kaare__ left
[00:51] <ugexe> using method join perl6 is 4.980

[00:52] *** vrurg left
[00:53] <MasterDuke> m: say "foo"[0] # you don't even need the [] around it

[00:53] <camelia> rakudo-moar 0d47db86c: OUTPUT: «foo␤»

[00:53] *** zachk left
[00:54] <ugexe> you do if you want blank strings for items with remainders

[00:54] <ugexe> m: say ['foo'][1]

[00:54] <camelia> rakudo-moar 0d47db86c: OUTPUT: «(Any)␤»

[00:55] <ugexe> m: say 'foo'[1]

[00:55] <camelia> rakudo-moar 0d47db86c: OUTPUT: «Index out of range. Is: 1, should be in 0..0␤  in block <unit> at <tmp> line 1␤␤»

[00:55] <MasterDuke> yep

[00:57] *** vrurg joined
[01:05] *** cpan-p6 left
[01:06] *** cpan-p6 joined
[01:06] *** cpan-p6 left
[01:06] *** cpan-p6 joined
[01:11] *** eseyman left
[01:35] *** MidCheck left
[01:42] *** cpan-p6 left
[01:43] *** cpan-p6 joined
[01:43] *** cpan-p6 left
[01:43] *** cpan-p6 joined
[01:44] *** eseyman joined
[01:56] *** eseyman left
[02:00] *** aborazmeh joined
[02:00] *** aborazmeh left
[02:00] *** aborazmeh joined
[02:14] *** kerrhau left
[02:19] *** eseyman joined
[02:20] *** cpan-p6 left
[02:20] *** cpan-p6 joined
[02:20] *** cpan-p6 left
[02:20] *** cpan-p6 joined
[02:22] *** mowcat joined
[02:28] *** aborazmeh left
[02:32] *** rje_ joined
[02:34] *** cpan-p6 left
[02:34] *** cpan-p6 joined
[02:34] *** cpan-p6 left
[02:34] *** cpan-p6 joined
[02:35] <rje_> I just got my "fork" of Perl 2 to compile on Cygwin... It could fit in a tiny Docker image... It could be tailored for constrained environments... I think I want it to have its own "Marketing name"! ;)

[02:35] <rje_> Sorry, I guess I'm on the wrong channel for this.  But I had to tell someone.

[02:38] *** rje_ left
[02:49] *** cpan-p6 left
[02:49] *** cpan-p6 joined
[02:49] *** cpan-p6 left
[02:49] *** cpan-p6 joined
[03:16] *** [particle]1 joined
[03:16] *** [particle] left
[03:17] *** cpan-p6 left
[03:18] *** cpan-p6 joined
[03:18] *** cpan-p6 left
[03:18] *** cpan-p6 joined
[03:21] *** ufobat__ joined
[03:25] *** ufobat_ left
[03:26] *** aborazmeh joined
[03:26] *** aborazmeh left
[03:26] *** aborazmeh joined
[03:34] *** cpan-p6 left
[03:35] *** cpan-p6 joined
[03:35] *** cpan-p6 left
[03:35] *** cpan-p6 joined
[03:43] *** MidCheck joined
[03:55] <lucs> How can the CATCH set the map value here? (hoping to see «Caught [2 42 7]␤»)

[03:55] <lucs> m: my @a = (2, 0, 7).map(-> $n { CATCH { default { print "Caught "; 42; } }; $n == 0 ?? die() !! $n }); say @a

[03:55] <camelia> rakudo-moar 0d47db86c: OUTPUT: «Caught [2 (Any) 7]␤»

[04:12] *** cpan-p6 left
[04:12] *** cpan-p6 joined
[04:12] *** cpan-p6 left
[04:12] *** cpan-p6 joined
[04:12] <Xliff> m: sub meaning($n) { $n == 0 ?? die() !! $n }; my @a = (2, 0, 7).map(-> $n { my $a = do { CATCH { default { print "Caught "; }; }; }; $a = 42 if @!); say @a

[04:12] <camelia> rakudo-moar 0d47db86c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Negation metaoperator not followed by valid infix␤at <tmp>:1␤------> 3 print "Caught "; }; }; }; $a = 42 if @!7⏏5); say @a␤    expecting any of:␤        infix␤        infix stopper␤»

[04:12] <Xliff> m: sub meaning($n) { $n == 0 ?? die() !! $n }; my @a = (2, 0, 7).map(-> $n { my $a = do { CATCH { default { print "Caught "; }; }; }; $a = 42 if @! }; ); say @a

[04:12] <camelia> rakudo-moar 0d47db86c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Negation metaoperator not followed by valid infix␤at <tmp>:1␤------> 3 print "Caught "; }; }; }; $a = 42 if @!7⏏5 }; ); say @a␤    expecting any of:␤        infix␤        infix stopper␤»

[04:16] <Xliff> m: sub meaning($n) { $n == 0 ?? die() !! $n }; my @a = (2, 0, 7).map(-> $n { $! = Nil; my $a = do { CATCH { default { print "Caught "; }; }; meaning($n) }; $! ?? 42 !! $a } ); say @a

[04:16] <camelia> rakudo-moar 0d47db86c: OUTPUT: «Caught [2 42 7]␤»

[04:16] <Xliff> ^^ lucs

[04:18] *** w_richard_w left
[04:18] <lucs> I've worked out this too:

[04:18] <lucs> m: my @a = (2, 0, 7).map(-> $n { my $val = $n; { CATCH { default { print "Caught "; $val = 42; } }; die if $n == 0 }; $val; }); say @a

[04:18] <camelia> rakudo-moar 0d47db86c: OUTPUT: «Caught [2 42 7]␤»

[04:19] <Xliff> I don't think you can return values from exception handling blocks.

[04:20] <lucs> Doesn't look like it, right.

[04:21] <Xliff> Nope.

[04:21] <lucs> Oh well, this isn't too bad.

[04:24] <Xliff> Yours was better'n mine. I've been coding on other things all day.

[04:24] <Xliff> Now I go blow stuff up in Division 2

[04:24] <lucs> Have fun :)

[04:24] <Xliff> 'night! o/

[04:27] *** cpan-p6 left
[04:27] *** cpan-p6 joined
[04:27] *** cpan-p6 left
[04:27] *** cpan-p6 joined
[04:33] *** Cabanossi left
[04:35] *** Cabanossi joined
[04:42] *** cpan-p6 left
[04:42] *** cpan-p6 joined
[04:42] *** cpan-p6 left
[04:42] *** cpan-p6 joined
[04:43] *** aborazmeh left
[04:56] *** w_richard_w joined
[05:09] *** sauvin joined
[05:10] *** mowcat left
[05:11] *** [Sno] left
[05:17] *** cpan-p6 left
[05:17] *** cpan-p6 joined
[05:17] *** cpan-p6 left
[05:17] *** cpan-p6 joined
[05:19] *** jmerelo joined
[05:20] <jmerelo> An unanswered question in StackOverflow about memory usage, just in case someone can help https://stackoverflow.com/q/55352666/891440

[05:20] <jmerelo> Also, daily reminder that the period for prospective students to send their proposals to Google Summer of Code has just started.

[05:32] *** cpan-p6 left
[05:32] *** cpan-p6 joined
[05:32] *** cpan-p6 left
[05:32] *** cpan-p6 joined
[05:46] *** reach_satori_ left
[05:47] *** cpan-p6 left
[05:48] *** cpan-p6 joined
[05:48] *** cpan-p6 left
[05:48] *** cpan-p6 joined
[05:52] *** MidCheck left
[05:53] *** curan joined
[06:02] *** cpan-p6 left
[06:02] *** cpan-p6 joined
[06:02] *** cpan-p6 left
[06:02] *** cpan-p6 joined
[06:03] <jmerelo> .tell timotimo geth seems to be down...

[06:03] <jmerelo> ... and yoleaux too ...

[06:19] *** MidCheck joined
[06:30] *** cpan-p6 left
[06:31] *** cpan-p6 joined
[06:31] *** cpan-p6 left
[06:31] *** cpan-p6 joined
[06:39] <tyil> cronjob to build daily perl6 images seems to work, https://hub.docker.com/r/tyil/perl6/tags, alpine based image comes in at 46.4mb :D

[06:39] *** synopsebot left
[06:39] *** p6lert left
[06:39] *** dalek joined
[06:39] *** ChanServ sets mode: +v dalek

[06:39] <jmerelo> tyil: great!

[06:39] *** Geth joined
[06:39] *** ChanServ sets mode: +v Geth

[06:39] *** p6lert joined
[06:39] *** synopsebot joined
[06:39] *** ChanServ sets mode: +v synopsebot

[06:44] *** cpan-p6 left
[06:45] *** cpan-p6 joined
[06:45] *** cpan-p6 left
[06:45] *** cpan-p6 joined
[07:00] *** cpan-p6 left
[07:00] *** cpan-p6 joined
[07:00] *** cpan-p6 left
[07:00] *** cpan-p6 joined
[07:12] *** domidumont joined
[07:13] *** andrzejku joined
[07:14] *** cpan-p6 left
[07:14] *** cpan-p6 joined
[07:14] *** cpan-p6 left
[07:14] *** cpan-p6 joined
[07:15] <SmokeMachine> m: say “foo”[1]

[07:15] <camelia> rakudo-moar 0d47db86c: OUTPUT: «Index out of range. Is: 1, should be in 0..0␤  in block <unit> at <tmp> line 1␤␤»

[07:22] *** vrurg left
[07:27] *** jmerelo left
[07:33] *** |oLa| left
[07:35] <El_Che> pts 2019 looks like a perl5 event: http://blogs.perl.org/users/neilb/2019/03/announcing-the-perl-toolchain-summit-2019.html

[07:48] <El_Che> I imaging it's just the wording of the blogpost?

[07:51] *** w_richard_w left
[07:51] *** cpan-p6 left
[07:51] *** cpan-p6 joined
[07:51] *** cpan-p6 left
[07:51] *** cpan-p6 joined
[07:52] *** reach_satori_ joined
[08:06] *** cpan-p6 left
[08:06] *** cpan-p6 joined
[08:06] *** cpan-p6 left
[08:06] *** cpan-p6 joined
[08:08] *** netrino joined
[08:09] *** rindolf joined
[08:11] *** someuser joined
[08:19] *** __jrjsmrtn__ joined
[08:21] *** cpan-p6 left
[08:21] *** cpan-p6 joined
[08:21] *** cpan-p6 left
[08:21] *** cpan-p6 joined
[08:22] *** andrzejku left
[08:23] *** |oLa| joined
[08:32] *** patrickb joined
[08:37] *** raycatwhodat left
[08:39] *** kensanata joined
[08:49] *** sena_kun joined
[08:52] *** MidCheck left
[08:56] *** Geth left
[08:56] *** Geth joined
[08:56] *** ChanServ sets mode: +v Geth

[08:56] <timotimo> i restarted geth

[08:56] <timotimo> i don't have access to the machine yoleaux runs on

[08:58] *** cpan-p6 left
[08:58] *** cpan-p6 joined
[08:58] *** cpan-p6 left
[08:58] *** cpan-p6 joined
[09:06] *** netrino left
[09:09] <SmokeMachine> .ask jmerelo is it possible to ask squashathon help to document Red?

[09:09] *** someuser left
[09:10] <timotimo> that won't work without yoleaux

[09:10] <SmokeMachine> .tell jmerelo is it possible to ask squashathon help to document Red?

[09:10] <SmokeMachine> timotimo: thanks... :(

[09:11] *** dakkar joined
[09:11] <SmokeMachine> .ask yoleaux please, come back! :)

[09:11] <sena_kun> SmokeMachine, I am not sure if anyone said it already, but as an advice: write a draft and then ask for revisions of grammar. I mean, you _know_ the implementation and can really write what it does and what it is _indented_ to do. Fixing grammar then is trivial for native speakers. On the other hand, you ask for(it seems so for me) something like "Read the code, find out for yourself what it does(and the code can be complicated) and 

[09:11] <sena_kun> document it", which is a lot harder, so less people volunteer.

[09:12] *** cpan-p6 left
[09:13] <SmokeMachine> sena_kun: that makes sense... thank you very much for the advice... :) Ill try that way...

[09:13] *** cpan-p6 joined
[09:13] *** cpan-p6 left
[09:13] *** cpan-p6 joined
[09:13] <sena_kun> My English is non-native too and all I do are mistakes, but that doesn't really matter too much, in my experience. It is understand-able that for some English is not a first language, and that's ok, but some things are just harder than other. :)

[09:15] <sena_kun> and yes, I don't see why can't Red docs polishing a squashathon theme. But it must be really "polishing" with a list of things and easy to pick up tasks, like "Revise page A", "Revise page B", "Proof-read page C". With uncertain "Write docs" it is hard to volunteer even if person is willing too.

[09:15] <sena_kun> Just my 2 cents.

[09:16] <SmokeMachine> sena_kun: I think you are totally right! thank you very much!

[09:16] <sena_kun> SmokeMachine, you are welcome. Good luck with docs. \o/

[09:17] <sena_kun> s/a squashathon/be a squashathon/

[09:17] <SmokeMachine> sena_kun: next days Ill try to create a new documentation for Red...

[09:21] *** zakharyas joined
[09:23] *** robertle joined
[09:27] *** cpan-p6 left
[09:27] *** cpan-p6 joined
[09:27] *** cpan-p6 left
[09:27] *** cpan-p6 joined
[09:30] *** andrzejku joined
[09:36] *** ravenousmoose_ left
[09:36] *** ravenousmoose_ joined
[09:42] *** cpan-p6 left
[09:42] *** cpan-p6 joined
[09:42] *** cpan-p6 left
[09:42] *** cpan-p6 joined
[09:54] *** reach_satori_ left
[09:56] *** cpan-p6 left
[09:57] *** cpan-p6 joined
[09:57] *** cpan-p6 left
[09:57] *** cpan-p6 joined
[10:03] *** Black_Ribbon left
[10:09] *** Sgeo_ joined
[10:10] *** sca_ left
[10:10] *** pmurias joined
[10:10] *** sca joined
[10:12] *** cpan-p6 left
[10:12] *** cpan-p6 joined
[10:12] *** cpan-p6 left
[10:12] *** cpan-p6 joined
[10:12] *** Sgeo__ left
[10:18] *** SergiusUA joined
[10:25] *** mowcat joined
[10:25] *** kerrhau joined
[10:28] *** MidCheck joined
[10:35] *** robertle left
[10:37] *** pdurbin left
[10:46] *** __jrjsmrtn__ left
[10:47] *** gregf_ joined
[10:48] *** cpan-p6 left
[10:48] *** robertle joined
[10:48] *** cpan-p6 joined
[10:48] *** cpan-p6 left
[10:48] *** cpan-p6 joined
[11:00] <[ptc]> timotimo: re: footnotes: I know, it's a bug in the Jekyll theme I'm using. It's been fixed on master but no new version is out yet :-/

[11:00] *** robertle left
[11:02] *** ravenousmoose_ left
[11:02] <timotimo> damn

[11:02] *** ravenousmoose_ joined
[11:03] *** robertle joined
[11:05] <[ptc]> the project is fairly active, so as soon as a new release is out I can fix that problem :-)

[11:11] *** domidumont left
[11:17] *** cpan-p6 left
[11:17] *** cpan-p6 joined
[11:17] *** cpan-p6 left
[11:17] *** cpan-p6 joined
[11:18] *** jjmerelo joined
[11:19] *** jjmerelo is now known as jmerelo

[11:23] *** jmerelo left
[11:28] *** robertle left
[11:30] *** reach_satori_ joined
[11:32] *** cpan-p6 left
[11:32] *** cpan-p6 joined
[11:32] *** cpan-p6 left
[11:32] *** cpan-p6 joined
[11:40] *** gks joined
[12:09] *** cpan-p6 left
[12:10] *** cpan-p6 joined
[12:10] *** cpan-p6 left
[12:10] *** cpan-p6 joined
[12:13] *** ravenousmoose joined
[12:14] *** ravenousmoose_ left
[12:18] *** sena_kun left
[12:20] *** SergiusUA left
[12:24] *** cpan-p6 left
[12:25] *** cpan-p6 joined
[12:25] *** cpan-p6 left
[12:25] *** cpan-p6 joined
[12:33] *** zakharyas left
[12:39] *** robertle joined
[12:39] *** cpan-p6 left
[12:40] *** cpan-p6 joined
[12:40] *** cpan-p6 left
[12:40] *** cpan-p6 joined
[12:46] *** antoniogamiz joined
[12:53] *** cpan-p6 left
[12:54] *** cpan-p6 joined
[12:54] *** cpan-p6 left
[12:54] *** cpan-p6 joined
[13:00] *** antoniogamiz left
[13:02] *** pecastro joined
[13:13] *** rindolf left
[13:28] *** vrurg joined
[13:29] <Geth> ¦ doc: 805fccc8be | Coke++ | xt/words.pws

[13:29] <Geth> ¦ doc: role name

[13:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/805fccc8be

[13:30] *** rindolf joined
[13:31] *** cpan-p6 left
[13:32] *** cpan-p6 joined
[13:32] *** cpan-p6 left
[13:32] *** cpan-p6 joined
[13:42] *** aborazmeh joined
[13:42] *** aborazmeh left
[13:42] *** aborazmeh joined
[13:45] *** cpan-p6 left
[13:45] *** cpan-p6 joined
[13:45] *** ravenousmoose left
[13:45] *** cpan-p6 left
[13:45] *** cpan-p6 joined
[13:45] *** ravenousmoose joined
[13:45] *** domidumont joined
[13:56] *** leah2 left
[13:57] *** zakharyas joined
[13:58] *** domidumont left
[14:00] *** cpan-p6 left
[14:00] *** cpan-p6 joined
[14:00] *** cpan-p6 left
[14:00] *** cpan-p6 joined
[14:10] *** aborazmeh left
[14:12] *** leah2 joined
[14:14] *** cpan-p6 left
[14:14] *** cpan-p6 joined
[14:14] *** cpan-p6 left
[14:14] *** cpan-p6 joined
[14:19] *** lucasb joined
[14:23] *** ravenousmoose left
[14:23] *** yht_ joined
[14:27] *** yht left
[14:28] *** cpan-p6 left
[14:28] *** cpan-p6 joined
[14:28] *** cpan-p6 left
[14:28] *** cpan-p6 joined
[14:36] *** Sgeo__ joined
[14:38] *** Sgeo joined
[14:39] *** Sgeo_ left
[14:41] *** Sgeo__ left
[14:42] *** cpan-p6 left
[14:42] *** cpan-p6 joined
[14:42] *** cpan-p6 left
[14:42] *** cpan-p6 joined
[14:45] *** reach_satori_ left
[14:47] *** molaf joined
[14:52] *** ravenousmoose joined
[14:53] *** pmurias left
[14:55] *** aindilis left
[14:57] *** cpan-p6 left
[14:57] *** cpan-p6 joined
[14:57] *** cpan-p6 left
[14:57] *** cpan-p6 joined
[15:10] *** pmurias joined
[15:11] *** cpan-p6 left
[15:11] *** cpan-p6 joined
[15:11] *** cpan-p6 left
[15:11] *** cpan-p6 joined
[15:21] *** curan left
[15:25] *** reach_satori_ joined
[15:35] <ugexe> why does cpan-p6 always leave,join,leave,join? seems like if there are problems staying connected it would be easier to just join when making an announcement and then leave like other bots e.g. travis-ci do

[15:38] <ugexe> either way its a bit broken to leave,join,leave,join within one minute every time its loses connection

[15:38] <jast> could be fixed by having it use SASL to authenticate

[15:39] <jast> the second leave/join is a virtualized generated by the IRC server when the bot authenticates, to apply its new hostname

[15:41] <ugexe> ah ha

[15:45] <ugexe> so it could play nicer by authing before joining

[15:48] *** domidumont joined
[15:48] *** cpan-p6 left
[15:49] *** cpan-p6 joined
[15:49] *** cpan-p6 left
[15:49] *** cpan-p6 joined
[15:50] <tyil> ugexe: due to rampant memory usage it's getting OOMKilled, and due to authing it gets a new hostname which requires a rejoin

[15:51] <tyil> I presume it's related to https://github.com/rakudo/rakudo/issues/1501, as I'm using HTTP::UserAgent somewhere to look for new modules

[15:54] <tyil> jast: do you know whether IRC::Client supports SASL auth?

[15:54] <SmokeMachine> Ill start a new documentation for Red... if someone finds something that should be documented and is not here (https://github.com/FCO/Red/projects/2) please let me know (and PRs are welcome...)

[15:56] <jast> tyil: no idea - the other option is manually identifying with nickserv and waiting for / matching the response notice from nickserv *before* rejoining the channel

[15:56] <tyil> I think I'd have to change IRC::Client if I want to change those things

[15:56] <tyil> manual NickServ auth is what it's doing already, fwiw

[15:57] <jast> sure, but is IRC::Client forcing you to join a channel before you can control anything?

[15:58] <jast> because if you can react to NOTICE messages you receive, you can just wait to join until you receive the notice from nickserv that says that you're now identified

[15:58] <tyil> I guess I could do more stuff manually, but if I'm going to do pretty much everything manually I don't really need a framework to build a bot in :/

[16:02] *** cpan-p6 left
[16:03] *** cpan-p6 joined
[16:03] *** cpan-p6 left
[16:03] *** cpan-p6 joined
[16:05] <ugexe> maybe you should use a service pattern instead of having your bot use HTTP::UserAgent to do non-irc-bot things, such that it gets notified by something else (or polls something else) that you control

[16:06] <ugexe> to punt the OOM issue

[16:16] *** domidumont left
[16:23] *** jmerelo joined
[16:24] <jmerelo> .seen samcv

[16:26] <jmerelo> poor, poor yoleaux...

[16:40] *** sno joined
[16:40] *** cpan-p6 left
[16:40] *** zachk joined
[16:40] *** cpan-p6 joined
[16:40] *** cpan-p6 left
[16:40] *** cpan-p6 joined
[16:48] *** pmurias left
[16:50] *** |oLa| left
[16:54] *** kensanata left
[17:05] <guifa> SmokeMachine: I’m happy to help edit docs (and you can even write random things in Portuguese if you’re not sure how to say them in English even if your pt-BR sounds funny to me :P )

[17:11] <El_Che> guifa: are you from pt_PT, one of the smallest Portuguese speaking countries in the world? :P

[17:11] *** cpan-p6 left
[17:11] *** cpan-p6 joined
[17:11] *** cpan-p6 left
[17:11] *** cpan-p6 joined
[17:12] *** andrzejku left
[17:12] <jmerelo> El_Che: that would probably be Timor Leste

[17:12] <guifa> El_Che: I’m Southern by the Grace of God as we like to say :-)  

[17:12] <jmerelo> El_Che: or Macau, by surface (country, not state)

[17:13] <guifa> But I’m a medievalist by trade so Spain and Portugal are my typical haunts so I speak the peninsular varieties

[17:13] <jmerelo> guifa: :-)

[17:14] *** kerrhau left
[17:14] <El_Che> jmerelo: one of :)

[17:14] <El_Che> guifa: I also have a degree somewhere mentioning Portugal :)

[17:14] <El_Che> kind of

[17:15] * guifa is thinking about making all of his international modules default to mwl-PT or ast-ES just … because. :-)

[17:15] <gks> hi! is this the place to ask newbie questions about perl 6? it seems cool and i wanna learn it, but it's... intimidating :)

[17:15] <jmerelo> gks: shoot!

[17:15] <guifa> gks: absolutely, ask away

[17:16] *** domidumont joined
[17:16] <gks> ok! i found this piece of code in the docs, and i'm wondering what's up with the backslashes:

[17:16] <gks> say ( -> (\i, \j) { i + j } for (3,9) X (2,10) );

[17:16] <evalable6> gks, rakudo-moar d5faa02b1: OUTPUT: «(5 13 11 19)␤»

[17:16] <jmerelo> good ol' Camelia feel mentioned

[17:16] <timotimo> those are sigil-less variables

[17:16] <gks> you can have sigil-less variables?

[17:16] <El_Che> gks: as timotimo says, but not something you'll use soon

[17:16] <jnthn> Well, they're not very variable, but yes :)

[17:16] <timotimo> yup, they have specific semantics

[17:17] <jnthn> (You can't re-bind them afterwards)

[17:17] <gks> so i'm assuming if you want sigilless variables as arguments to a function, you need to escape them with a backslash?

[17:17] <jmerelo> gks: sigilless arguments. In this case, they are the arguments to a Block that is being defind on the faly

[17:17] <timotimo> or when you define them with "my"

[17:17] <jmerelo> gks: if you want to define any kind of sigilless variables or arguments, yes.

[17:18] <gks> ok, cool

[17:18] <guifa> Put in terms that probably makes sense coming from other languages, if you define something with \foo, it becomes a scalar constant and doesn’t need a sigil afterwards.

[17:18] <jnthn> gks: Yes, because otherwise it's ambiguous. `-> Int { }` for example means a block that takes an Int but then throws it away (doesn't put it into a variable). So the \ is saying "this is a variable name, not a type"

[17:18] <jnthn> But then you can refer to it without the \ elsewhere in the scope

[17:18] <El_Che> bareword is useful for constants imho

[17:19] <gks> hmm. that all makes sense

[17:19] <El_Che> https://docs.perl6.org/language/terms#Constants

[17:19] *** patrickb left
[17:19] <El_Che> you don't need the \ when defining them with the keyword "constant"

[17:20] <jmerelo> jnthn, timotimo grateful if you took a look at this question in SO: https://stackoverflow.com/q/55353143/891440 (anyone else too, of course)

[17:20] <jmerelo> El_Che: not exactly the same, but fair enough.

[17:20] <jnthn> In Perl 6, sigils are not just part of a name, but also have a meaning ($ is item, @ is array-like, % is hash-like, & is callable code). Occasionally you don't want to enforce any of those meanings, and sigilless variables are handy then also.

[17:21] <jnthn> But that tends to be relatively abstract code, not everyday code :)

[17:21] <jmerelo> jnthn: not so abstract in signatures... 

[17:21] * guifa still thinks custom sigils woudl totally be awesome, so ƒ could be IO::Path-like lol, etc.)

[17:22] <jnthn> jmerelo: Well, that code has no reason to be using them :)

[17:22] <jnthn> (The one that was posted here, I mean)

[17:22] <jnthn> But maybe in the docs it is illustrating the concept of sigilless variables

[17:23] <jmerelo> jnthn: I'll check that out.

[17:23] <gks> jnthn: this is the place in the docs i found it: https://docs.perl6.org/language/py-nutshell#List_comprehensions

[17:23] <jmerelo> jnthn: right

[17:24] <jmerelo> jnthn: python migration docs... well, maybe to look the same

[17:24] <gks> yeah, i was essentially wondering how to do cross (X operator, apparently!) and i figured the easiest way to look it up was to check the list comprehensions section of the python docs :)

[17:25] *** sena_kun joined
[17:25] <jmerelo> gks: if you find that piece confusing just post an issue. We'll do our best to address it. Just mentioning it is helfup, anyway.

[17:27] <guifa> Yeah.  That section is actually a bit tricky in terms of writing it.  Do we give all the ways to do the code, using $^i and $^j, or sigil-less to make it match python more, or do $_[0] and $_[1] or even just * and *?  It’s cool to show the variety of solutions but … also could be overwhelming

[17:27] <El_Che> I agree

[17:28] *** AlexDaniel left
[17:28] <SmokeMachine> guifa: thank you very much! Muito obrigado!

[17:29] *** zachk left
[17:29] *** zachk joined
[17:29] *** dakkar left
[17:30] <guifa> Maybe for that particular example, the best option would be to use say ( { $^i + $^j } for (3,9) X (2,10) ); and then link somewhere to the way the ^ twigil works.

[17:38] *** cpan-p6 left
[17:38] *** cpan-p6 joined
[17:38] *** cpan-p6 left
[17:38] *** cpan-p6 joined
[17:40] <tyil> ugexe: I could do that, yes, but that still feels like a dirty way around a symptom instead of solving the actual issue

[17:40] <tyil> at some point, *some* service will need to do this http request

[17:41] <tyil> doesn't really matter how much abstraction I put around it

[17:41] <ugexe> ...yes but that service can be restarted without telling everyone about it every 15 minutes

[17:41] <tyil> it would still tell me every 15 minutes

[17:41] <tyil> and again, if the underlying bug were to be solved, the issue would be gone too

[17:42] <ugexe> so are you going to solve the underlying problem, or apply a different paradigm to avoid the problem? both of these are what would be expected in a real world situation.

[17:43] <tyil> I don't think I have the required expertise to solve the underlying problem, but I'd gladly test out patches in moarvm and contribute feedback in order to help solve it

[17:43] *** patrickb joined
[17:44] <tyil> I'm not a big fan of symptom hunting

[17:45] <tyil> it'd add a lot of complexity, and all it'd do is move the issue, not fix it

[17:45] <ugexe> i think a little work should be a requirement if you wish to push it into the public space

[17:45] <tyil> could not I say the same about MoarVM?

[17:46] <ugexe> its not a bunch of added complexity to move code to download via HTTP::UserAgent into an external scrpit, and have your bot read from a file

[17:46] <tyil> except I don't, since I know they're doing the best they can, and mostly do it in their free time

[17:47] *** Actualeyes left
[17:47] <ugexe> you think that comparison is remotely equivilent?

[17:56] <Xliff> m: my $a; my $b; say "!" with $a && $b;

[17:56] <camelia> rakudo-moar d5faa02b1: ( no output )

[17:56] <Xliff> m: my $a=''; my $b; say "!" with $a && $b;

[17:56] <camelia> rakudo-moar d5faa02b1: OUTPUT: «!␤»

[17:56] <Xliff> m: my $a=''; my $b; say "!" with $a andwith $b;

[17:56] <camelia> rakudo-moar d5faa02b1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my $a=''; my $b; say "!" with $a7⏏5 andwith $b;␤    expecting any of:␤        infix␤        infix stopper␤»

[17:56] <Xliff> Hrm. Sometimes you just want to test definedness on more than one var.

[17:57] <Xliff> m: my $a=''; my $b; say "!" [andwith]($a, $b)

[17:57] <camelia> rakudo-moar d5faa02b1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing infix inside []␤at <tmp>:1␤------> 3my $a=''; my $b; say "!" [7⏏5andwith]($a, $b)␤    expecting any of:␤        bracketed infix␤        infix␤        infix stopper␤»

[17:58] <Xliff> m: my $a=''; my $b; say "!" if $a.defined && $b.defined

[17:58] <camelia> rakudo-moar d5faa02b1: ( no output )

[17:58] <Xliff> m: my $a=''; my $b=0; say "!" if $a.defined && $b.defined

[17:58] <camelia> rakudo-moar d5faa02b1: OUTPUT: «!␤»

[17:59] <ugexe> m: my $a = ""; my $x; with any($a, $x) { say 42 }

[17:59] <camelia> rakudo-moar d5faa02b1: OUTPUT: «42␤»

[17:59] <Xliff> m: my $a = ""; my $x; with ($a, $x).all { say 42 }

[17:59] <camelia> rakudo-moar d5faa02b1: ( no output )

[17:59] <Xliff> Ooh

[17:59] <Xliff> ugexe++

[18:00] <Xliff> Wonder what the perf hit is on that when using junction....

[18:00] <ugexe> isnt there a performanceable or something yet :P

[18:01] <Xliff> LOL. benchmarkable

[18:01] <sena_kun> benchable6, 

[18:01] <benchable6> sena_kun, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Benchable

[18:02] <sena_kun> bench: 2015.12, 2019.03 say 'hi'

[18:02] <benchable6> sena_kun, starting to benchmark the 2 given commits

[18:02] <benchable6> sena_kun, ¦2015.12: «0.1076» ¦2019.03: «0.1236»

[18:02] <benchable6> sena_kun, benchmarked the given commits and found a performance difference > 10%, now trying to bisect

[18:02] <benchable6> sena_kun, ¦2015.12: «0.1076» ¦b4f1f43: «0.1086» ¦7773c3d: «0.1195» ¦2019.03: «0.1236»

[18:04] <ugexe> yeah that junction is pretty slow

[18:04] *** cpan-p6 left
[18:05] <ugexe> 1.5s vs 0.5s

[18:05] *** cpan-p6 joined
[18:05] *** cpan-p6 left
[18:05] *** cpan-p6 joined
[18:05] <ugexe> for 1000000 iterations

[18:18] *** cpan-p6 left
[18:19] *** cpan-p6 joined
[18:19] *** cpan-p6 left
[18:19] *** cpan-p6 joined
[18:21] <Geth> ¦ doc: 70630a8355 | (JJ Merelo)++ | doc/Type/Metamodel/RolePunning.pod6

[18:21] <Geth> ¦ doc: Clarifications for RolePunning refs #1306

[18:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/70630a8355

[18:21] <Geth> ¦ doc: 99c20ef5b4 | (JJ Merelo)++ | 2 files

[18:21] <Geth> ¦ doc: Adds new (and correct) definitions to map

[18:21] <synopsebot> Link: https://doc.perl6.org/type/Metamodel::RolePunning

[18:21] <Geth> ¦ doc: 

[18:21] <Geth> ¦ doc: This closes  #1731 but as a matter of fact was meant to address issue #2675.

[18:21] <Geth> ¦ doc: The thing is map is just defined in Any (or frequently used in

[18:21] <Geth> ¦ doc: lists). It does not belong to either and might be a good candidate for

[18:21] *** zakharyas left
[18:21] <Geth> ¦ doc: the issue on independent routines: #2578 or #2070

[18:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/99c20ef5b4

[18:23] *** sauvin left
[18:24] *** dotdotdot left
[18:25] *** dotdotdot joined
[18:27] *** kerrhau joined
[18:33] *** kerrhau left
[18:35] *** entonian joined
[18:43] *** patrickb left
[18:43] *** entonian left
[18:55] *** cpan-p6 left
[18:55] *** cpan-p6 joined
[18:55] *** cpan-p6 left
[18:55] *** cpan-p6 joined
[19:03] <zostay> m: class A { has $.f; method WHICH { $!f.WHICH } }; (set(A.new(:f<a>)).<a>:k).say

[19:03] <camelia> rakudo-moar d5faa02b1: OUTPUT: «a␤»

[19:03] <zostay> I would have thought that code would be identical in operation to this, but I would be wrong.

[19:04] <zostay> m: class A { has $.f; method WHICH { $!f.WHICH } }; (set(A.new(:f<a>)).{A.new(:f<a>)}:k).say

[19:04] <camelia> rakudo-moar d5faa02b1: OUTPUT: «A.new(f => "a")␤»

[19:07] *** netrino joined
[19:07] <zostay> I was thinking it would be useful to use a Set for a case where I constructed a hash that maps $name => Foo.new(:$name, ...), but it looks like not

[19:07] *** MidCheck left
[19:08] <zostay> since AT-KEY lookups seem to be operating on the lookup=>value pair not the found=>value pair.

[19:09] *** cpan-p6 left
[19:09] *** cpan-p6 joined
[19:09] *** cpan-p6 left
[19:09] *** cpan-p6 joined
[19:10] *** |oLa| joined
[19:10] *** Black_Ribbon joined
[19:15] *** jmerelo left
[19:21] *** patrickb joined
[19:39] *** b2gills left
[19:40] *** molaf left
[19:44] *** cpan-p6 left
[19:44] *** cpan-p6 joined
[19:44] *** cpan-p6 left
[19:44] *** cpan-p6 joined
[19:51] *** domidumont left
[19:54] *** b2gills joined
[19:54] *** xinming joined
[19:59] *** andrzejku joined
[20:10] <cpan-p6> New module released to CPAN! Grammar-PrettyErrors (0.0.3) by 03BDUGGAN

[20:20] *** cpan-p6 left
[20:20] *** cpan-p6 joined
[20:20] *** cpan-p6 left
[20:20] *** cpan-p6 joined
[20:23] *** |oLa| left
[20:30] *** __jrjsmrtn__ joined
[20:31] *** patrickb left
[20:32] *** patrickb joined
[20:33] *** antoniogamiz joined
[20:34] <antoniogamiz> \o/

[20:35] <patrickb> o/

[20:35] *** cpan-p6 left
[20:35] *** cpan-p6 joined
[20:35] *** cpan-p6 left
[20:35] *** cpan-p6 joined
[20:36] *** |oLa| joined
[20:36] *** hankache joined
[20:37] *** |oLa| left
[20:39] *** pmurias joined
[20:40] *** __jrjsmrtn__ left
[20:48] *** hankache left
[20:49] <antoniogamiz> I need one phrase to encourage people to learn perl*

[20:49] <antoniogamiz> any ideas? 

[20:49] *** hankache joined
[20:49] *** cpan-p6 left
[20:49] *** cpan-p6 joined
[20:49] *** cpan-p6 left
[20:49] *** cpan-p6 joined
[20:51] <ugexe> Learn perl or eat shit 

[20:51] <patrickb> :-P

[20:51] <antoniogamiz> ugexe: mmmmm hahaahaha

[20:51] <antoniogamiz> maybe something more polite pls xdd

[20:52] <tadzik>  "check out why we still choose it even though it's so ugly"

[20:52] <patrickb> For Perl5: No hype, but battle proven.

[20:52] <antoniogamiz> tadzik: oh thats good :ooooo

[20:53] <antoniogamiz> patrickb: a good one too :oo

[20:53] <antoniogamiz> thanks :)

[20:54] <patrickb> (it's a quasi quote of ovid)

[20:55] <patrickb> For Perl6, well, it is rather epic in many respects...

[20:56] *** __jrjsmrtn__ joined
[20:56] *** __jrjsmrtn__ left
[20:58] <sena_kun> "Just epic in so many respects"

[21:00] <antoniogamiz> sena_kun: mmm I like that too thanks c:

[21:07] *** molaf joined
[21:12] *** hankache_ joined
[21:14] *** hankache left
[21:16] *** cpan-p6 left
[21:22] *** hankache_ left
[21:23] *** hankache_ joined
[21:26] *** rindolf left
[21:32] *** hankache_ left
[21:32] *** andrzejku left
[21:32] <antoniogamiz> s

[21:32] <antoniogamiz> ups

[21:33] *** andrzejku joined
[21:48] *** cpan-p6_ joined
[21:48] *** cpan-p6_ left
[21:48] *** cpan-p6_ joined
[21:48] <tyil> new cpan-p6_ is ups :D

[21:49] *** rindolf joined
[21:49] <antoniogamiz> yep hahaha

[21:51] <tyil> longer delay between messages, and pulls new module data from a postgres database (hopefully)

[21:51] <tyil> I should stay awake for at least an hour to make sure it doesn't shit itself immediately

[21:51] *** molaf left
[21:52] <tyil> and too see if my new docker images are stable for real world usage

[22:03] *** zacts joined
[22:03] *** zacts left
[22:03] <antoniogamiz> tyil: I hope they are :D

[22:03] <tyil> so far so good it seems :>

[22:05] <tyil> I used to use https://git.tyil.nl/docker/rakudo-star, but now I have https://git.tyil.nl/docker/perl6

[22:05] <tyil> it's about a tenth of the size, comes with a more recent Perl 6 (nightly), and allows me to easily test out specific branches to test fixes on real applications

[22:06] <antoniogamiz> uoh, that's quite good then, good job!

[22:06] <tyil> thanks :D

[22:06] <antoniogamiz> maybe I can use it someday :D

[22:06] <tyil> I'm very happy with the results thus far as well

[22:06] <tyil> I hope you can ^_^

[22:07] <tyil> if you need help getting something to work, don't hesitate to ask here, as there are many people eager to help out 

[22:07] <antoniogamiz> I know, thanks for the help c:

[22:09] <tyil> have you worked on anything in Perl 6 lately to show off?

[22:10] <antoniogamiz> well, I'm making a math module to learn the basics

[22:10] <antoniogamiz> it's quite simple yet though ahahah

[22:10] <antoniogamiz> you can check it out here: https://github.com/antoniogamiz/Math-ConvergenceMethods

[22:10] <tyil> nice

[22:13] <tyil> are you planning to add it to CPAN once youre confident with it?

[22:13] <tyil> (or did you already upload it?)

[22:13] <antoniogamiz> yep, I plan to upload it

[22:13] <antoniogamiz> but I dont have enough time lastly as you can see by the last commit ahahah

[22:14] <antoniogamiz> university is time consuming

[22:14] <tyil> I know the feeling

[22:14] <antoniogamiz> are you a student too? :)

[22:14] <tyil> used to be, I dropped out last year

[22:15] <guifa> antoniogamiz: I think most people on here have either are students, have been students, or worse, are professors

[22:15] <tyil> got a job which allows me to work with Perl 6 now

[22:15] * guifa glares in the mirror and looks at jmarelo

[22:15] <antoniogamiz> guifa: hahahahhaah I see

[22:15] <antoniogamiz> jmerelo is a good professor though :D

[22:16] <antoniogamiz> tyil: uoh congratulations! :D

[22:16] <guifa> I kind of want to port Colossal Caverns to show off my localization framework

[22:17] <antoniogamiz> Colossal Caverns?

[22:17] <guifa> Cave I mean lol

[22:18] <antoniogamiz> I still dont get it... :c

[22:18] <guifa> It’s an old text adventure game

[22:18] <guifa> But AFAIK it’s only been released in English (it was open sourced not long ago)

[22:19] *** sena_kun left
[22:20] <guifa> But it’s so old it has its own code for replacing %s %d in strings!

[22:20] <antoniogamiz> aah :oo

[22:37] <antoniogamiz> I gotta go! tyil I hope everything works fine :D!

[22:37] *** antoniogamiz left
[22:38] <tyil> I'm waiting for someone to upload a module tbh :(

[22:42] <timotimo> masak: today's autopun spotting, maybe: https://twitter.com/craigdissel/status/1110969036404199424 -   OH (@pypyproject): "cups of coffee are like analogies in that I'm making one right now"

[22:44] *** andrzejku left
[22:49] *** leont joined
[22:59] *** kent\n left
[23:00] *** kent\n joined
[23:10] *** leont left
[23:10] *** MidCheck joined
[23:17] *** huf left
[23:23] *** pmurias left
[23:24] *** huf joined
[23:39] <Garland_g[m]> Is there a way to do multicast sockets in Perl6?

[23:44] *** nebuchadnezzar left
[23:48] *** leont joined
[23:51] <ugexe> libuv has multicast support, but I think thats about as far as it goes 

[23:54] *** rindolf left
[23:57] *** pecastro left
