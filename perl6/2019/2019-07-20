[00:00] *** nepugia left
[00:01] *** Voldenet joined
[00:01] *** Voldenet left
[00:01] *** Voldenet joined
[00:04] *** Manifest0 joined
[00:17] *** Manifest0 left
[00:21] *** Manifest0 joined
[00:29] *** redhands left
[00:33] *** gdonald left
[00:43] *** Manifest0 left
[00:45] *** Sgeo__ joined
[00:48] *** Manifest0 joined
[00:48] *** Sgeo_ left
[00:56] *** melezhik17 joined
[00:57] *** melezhik17 is now known as melezhik2

[00:57] <melezhik2> Bird - lightweight alternative to chef inspec and goss, written in Perl6. Just started to play with it. https://github.com/melezhik/bird

[01:05] *** molaf left
[01:06] *** Manifest0 left
[01:06] *** melezhik2 left
[01:13] *** Manifest0 joined
[01:15] *** epony left
[01:16] *** noisegul_ joined
[01:18] *** molaf joined
[01:20] *** noisegul left
[01:30] *** Manifest0 left
[01:31] *** holyghost joined
[01:31] <holyghost> Hi

[01:32] *** melezhik46 joined
[01:32] *** melezhik46 is now known as melezhik2

[01:34] *** Sgeo_ joined
[01:34] *** epony joined
[01:34] *** Manifest0 joined
[01:37] *** comborico1611 joined
[01:37] *** Sgeo__ left
[01:37] <comborico1611> Does anyone know of a video discussion of using perl6 as a shell alernative?

[01:38] *** melezhik2 left
[01:39] *** Manifest0 left
[01:42] *** Sgeo joined
[01:44] *** Sgeo_ left
[01:45] *** Manifest0 joined
[01:47] <holyghost> It'd also be nice if perl6 was ported to PSP or PS linux. I'll look into that later on

[01:48] <discord6> <Tyler (Aearnus)> ps linux as in for the ps3?

[01:48] <holyghost> yes

[01:50] *** Manifest0 left
[01:50] <holyghost> Also SGI mips would love to have a perl6 for that

[01:52] *** comborico1611 left
[01:53] <holyghost> I am going to get an Octane machine for that one, there's no video driver for the gfx cards last time I checked in linux (2004)

[01:53] <holyghost> SGI made its own linux kernel for it

[01:56] <discord6> <Tyler (Aearnus)> that'd be pretty interesting. i know the moarvm folks have been really good about platform portability so it shouldn't be too hard

[01:57] <holyghost> indeed, portable C is more or less welcome

[01:59] *** Manifest0 joined
[02:02] *** molaf left
[02:04] <holyghost> It'll be for Christmas by my account

[02:04] *** Manifest0 left
[02:07] <discord6> <Tyler (Aearnus)> hahaha. well what version of gcc runs on ps Linux?

[02:08] <holyghost> I don't own a PS3 anymore, I gave mine to my children. gcc 4 minimum I think

[02:08] <discord6> <Tyler (Aearnus)> Hmm

[02:08] <holyghost> you can probably compile one

[02:08] <holyghost> or crosscompile

[02:09] <discord6> <Tyler (Aearnus)> Unrelated, but I wonder how easy porting to the Nintendo switch would be. They've already ported Ruby to it, so...

[02:09] <holyghost> cool, I hear it's a good system

[02:11] <holyghost> I'm a bit of a i386, powerpc and mips dude

[02:11] *** Manifest0 joined
[02:11] <holyghost> I don't know much japanese hardware except maybe for the ARM

[02:12] <discord6> <Tyler (Aearnus)> it's an Nvidia tegra with ARM

[02:13] <holyghost> which is good

[02:14] *** AlexDani` joined
[02:15] *** molaf joined
[02:16] *** cpan-p6 left
[02:16] *** cpan-p6 joined
[02:16] *** cpan-p6 left
[02:16] *** cpan-p6 joined
[02:17] <holyghost> We can use perl6 on ps and switch to develop games of course

[02:18] *** AlexDaniel left
[02:18] <holyghost> they're more or less like full capable systems with ram, video ram and disk space

[02:19] <holyghost> else you need a latch hex in perl6 (from C) then calibrate and you're done

[02:21] <discord6> <Tyler (Aearnus)> that was the big thing behind http://www.rubymotion.com/ on console

[02:21] <discord6> <Tyler (Aearnus)> and it works well (it's what I was mentioning earlier) so it's a really good idea

[02:28] *** Manifest0 left
[02:33] *** Manifest0 joined
[02:38] <Elronnd> I would probably use perl6 for games if it were possible to embed

[02:39] <Elronnd> I want to use something that has native compilation and static typing for the main loop/startup/all that, for performance

[02:49] *** Manifest0 left
[02:54] *** Manifest0 joined
[03:05] *** Manifest0 left
[03:11] *** Manifest0 joined
[03:15] *** Manifest0 left
[03:15] <cpan-p6> New module released to CPAN! Async::Workers (0.0.6) by 03VRURG

[03:20] *** Manifest0 joined
[03:27] *** epony left
[03:32] *** Manifest0 left
[03:35] *** epony joined
[03:38] *** Manifest0 joined
[03:54] *** Manifest0 left
[03:59] *** Manifest0 joined
[04:06] *** Manifest0 left
[04:15] *** Manifest0 joined
[04:19] *** Manifest0 left
[04:24] *** Manifest0 joined
[04:28] *** Manifest0 left
[04:33] *** Manifest0 joined
[04:39] *** squashable6 left
[04:40] *** squashable6 joined
[04:42] *** pamplemousse joined
[04:48] *** Manifest0 left
[04:52] *** pamplemousse left
[04:52] *** pamplemousse joined
[04:53] *** Manifest0 joined
[05:06] *** Manifest0 left
[05:12] *** Manifest0 joined
[05:12] *** Black_Ribbon left
[05:17] *** Manifest0 left
[05:23] *** Manifest0 joined
[05:25] *** rindolf joined
[05:27] *** Manifest0 left
[05:34] *** Manifest0 joined
[05:36] *** pamplemousse left
[05:41] *** Manifest0 left
[05:44] *** sauvin joined
[05:47] *** Manifest0 joined
[05:48] *** Sgeo_ joined
[05:51] *** Sgeo left
[05:58] *** Manifest0 left
[06:03] *** Manifest0 joined
[06:15] *** Manifest0 left
[06:21] *** Manifest0 joined
[06:30] *** Manifest0 left
[06:35] *** Manifest0 joined
[06:41] *** Manifest0 left
[06:48] *** Manifest0 joined
[06:51] *** ufobat joined
[06:53] *** Manifest0 left
[06:58] *** Manifest0 joined
[07:08] *** Manifest0 left
[07:13] *** antoniogamiz joined
[07:13] <antoniogamiz> noisegul_: what did you need?

[07:14] <antoniogamiz> noisegul_: I will make the release with the fixed versions in a moment

[07:16] *** Manifest0 joined
[07:18] *** sjm_uk joined
[07:20] *** Manifest0 left
[07:25] *** rfold joined
[07:25] *** Manifest0 joined
[07:29] *** kaare__ left
[07:30] *** Manifest0 left
[07:31] *** kaare_ joined
[07:35] *** Manifest0 joined
[07:45] *** Manifest0 left
[07:51] <antoniogamiz> mmm $! cannot be used to access one attribute from a parent class¿

[07:51] *** Manifest0 joined
[08:06] <xiaomiao> hrm. are there proper nqp tarballs, or do I need to cook my own now? (missing 3rdparty/ bits, and configure calls 'git' for no reason)

[08:06] *** Manifest0 left
[08:07] <antoniogamiz> I think I'm getting how oop works in perl6... => https://gist.github.com/antoniogamiz/3b9fa8fa4a284ab84518480b0506a307

[08:13] *** Manifest0 joined
[08:18] <Geth> ¦ doc/master: 4 commits pushed by (JJ Merelo)++

[08:18] <Geth> ¦ doc/master: b95bd085a6 | Minor changes and reflow

[08:18] <Geth> ¦ doc/master: e3d447b5eb | Use the correct comma project name

[08:18] <Geth> ¦ doc/master: 6cd0b1897b | This is what comma is looking for

[08:18] <Geth> ¦ doc/master: 9b2d884882 | Improves a bit the documentation on Iterator/Iterable

[08:18] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/e93988ac2bef...9b2d8848826c

[08:29] *** rfold left
[08:29] *** rfold joined
[08:35] <AlexDani`> xiaomiao: yes, here https://github.com/perl6/nqp/releases

[08:35] *** AlexDani` is now known as AlexDaniel

[08:35] *** AlexDaniel left
[08:35] *** AlexDaniel joined
[08:35] <AlexDaniel> xiaomiao: as for “proper”, yes there's an issue in configure

[08:36] <AlexDaniel> xiaomiao: we might have 2019.07.1 with that fixed

[08:36] *** Manifest0 left
[08:36] <AlexDaniel> xiaomiao: it should actually build fine, even though there are some errors about `git`. Or are you seeing some other errors?

[08:38] <antoniogamiz> is there a way to execute some code after an instance of a type object is created?

[08:38] <antoniogamiz> I mean, after bless or nextwith for instance

[08:39] <xiaomiao> AlexDaniel: it would build, if it had network access and git :)

[08:39] <xiaomiao> both assumptions that I find highly optimistic

[08:39] <AlexDaniel> xiaomiao: can you show the log?

[08:40] <xiaomiao> AlexDaniel: Can't exec "git": No such file or directory at Configure.pl line 15.

[08:40] <xiaomiao> I can sed things into compliance, but that's not the best way to package things

[08:41] <AlexDaniel> xiaomiao: and after that?

[08:41] *** Manifest0 joined
[08:42] <AlexDaniel> xiaomiao: I'm asking because even though it complains about not being able to exec git, it should still continue

[08:42] <AlexDaniel> at least that's my understanding

[08:43] <AlexDaniel> but maybe I'm wrong

[08:44] *** marmor joined
[08:46] <xiaomiao> the tarball at https://github.com/perl6/nqp/releases/download/2019.07/nqp-2019.07.tar.gz is missing 3rdparty/nqp-configure

[08:47] <xiaomiao> so of course it would try to quietly fetch that

[08:47] <AlexDaniel> xiaomiao: to me it looks like it is there

[08:48] <discord6> <Tyler (Aearnus)> how do I create a zef compatible package? or do I just have to create Build.pm manually

[08:48] <AlexDaniel> xiaomiao: I think you clicked on the wrong one :)

[08:48] <xiaomiao> AlexDaniel: so either github is tricking me, or you're not looking at the same tarball

[08:49] <AlexDaniel> xiaomiao: try the link you just sent here

[08:49] <xiaomiao> yes, that's the one that fails

[08:49] <AlexDaniel> but it has 3rdparty/nqp-configure with files in it

[08:51] <xiaomiao> now I am properly confused :D

[08:52] <xiaomiao> and now it doesn't abort and just spews 'harmless' warnings

[08:52] <xiaomiao> well ok

[08:53] <xiaomiao> your telekinesis skills impress me! ;)

[08:53] <AlexDaniel> :)

[08:53] <AlexDaniel> xiaomiao: unfortunately there's no way to disable autogenerated source tars on github :(

[08:54] <AlexDaniel> so yes, people will sometimes get the wrong one

[08:54] <xiaomiao> yes and github still can't into tarball, so ... 

[08:54] <antoniogamiz> <Tyler (Aearnus)>: you should create a META6.json file

[08:54] <xiaomiao> quite funny how they haven't found the time to fix that bug in years

[08:54] <antoniogamiz> <Tyler (Aearnus)>: see https://docs.perl6.org/language/modules

[08:54] <AlexDaniel> it's fine in most cases because people have internet connection and git

[08:56] <discord6> <Tyler (Aearnus)> cool, got that META6.json file all created

[08:59] <xiaomiao> AlexDaniel: unless you're one of them silly distro packagers who insist on weird constraints

[08:59] <AlexDaniel> xiaomiao: in that case just make sure to get the right tar :)

[08:59] <AlexDaniel> we will fix these annoying warnings anyway

[09:00] <xiaomiao> thanks

[09:00] <AlexDaniel> xiaomiao: see https://github.com/rakudo/rakudo/issues/3067 for what will be in the point release

[09:00] <xiaomiao> ... and now rakudo fails, it's a nice brain teaser :)

[09:01] *** antoniogamiz left
[09:01] <AlexDaniel> xiaomiao: let me guess, something about /usr ?

[09:01] <xiaomiao>  /usr/include/moar/moar.h:27:10: fatal error: ffi.h: No such file or directory

[09:01] *** avalenn left
[09:01] <xiaomiao> that looks like incomplete include path to me :)

[09:01] <rfold> When I run "make t/spec/S12-traits/parameterized.t" it says: "make: Nothing to be done for 't/spec/S12-traits/parameterized.t'." I did clone into t/spec and I installed Rakudo as per README.

[09:03] <rfold> "make spectest" does work.

[09:04] <AlexDaniel> xiaomiao: hmmm, are you sure you're using the right tarball? :)

[09:04] <xiaomiao> yes

[09:04] <AlexDaniel> xiaomiao: I see https://github.com/MoarVM/MoarVM/issues/320

[09:04] <xiaomiao> but libffi might not be in the expected place

[09:07] <AlexDaniel> xiaomiao: weird

[09:07] <xiaomiao> well, there might be more than one version present, so ... 

[09:08] <discord6> <Tyler (Aearnus)> Is there any nice syntax to define dynamically scoped subroutines?

[09:08] <discord6> <Tyler (Aearnus)> my &*g = sub ($x) { $x.say } doesn't seem to work right

[09:08] <rfold> I got it working by adding t/spec/*/*.t to the list of globs in Makefile.

[09:09] <AlexDaniel> rfold: interesting, what's your system?

[09:09] <AlexDaniel> could it be some sort of difference in make or something?

[09:09] <rfold> Oh I see what's wrong, t/spec is a symlink for some reason.

[09:09] <AlexDaniel> hmm

[09:10] <rfold> Must have done something wrong with the setup.

[09:10] <rfold> If I put the spec repo directly in there then it works.

[09:11] *** kylese joined
[09:15] *** marmor left
[09:24] <tobs> m: sub f { my &*g = sub ($x) { say "g: ", $x }; h $^x }; sub h { &*g.($^x) }; f 42

[09:24] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «g: 42␤»

[09:25] <tobs> <Tyler (Aearnus)>: it seems to work ^

[09:25] *** Manifest0 left
[09:29] *** rurban joined
[09:31] *** rurban1 joined
[09:31] *** Manifest0 joined
[09:32] *** rurban1 left
[09:34] *** rurban left
[09:36] *** Sgeo_ left
[09:36] *** Sgeo_ joined
[09:43] <rfold> p6: sub f(--> 2) { my &g = { 1 }; say g }; f

[09:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤»

[09:50] *** Manifest0 left
[09:53] *** kylese left
[09:55] *** Manifest0 joined
[10:00] *** Manifest0 left
[10:06] *** Manifest0 joined
[10:36] *** Manifest0 left
[10:40] *** Manifest0 joined
[10:47] *** Manifest0 left
[10:55] *** sjm_uk left
[10:55] *** Manifest0 joined
[11:05] *** aborazmeh joined
[11:05] *** aborazmeh left
[11:05] *** aborazmeh joined
[11:10] *** Manifest0 left
[11:15] *** Manifest0 joined
[11:22] *** avar left
[11:23] *** avar joined
[11:23] *** avar left
[11:23] *** avar joined
[11:23] *** literal joined
[11:26] *** robertle left
[11:33] *** kylese joined
[11:39] *** Manifest0 left
[11:44] *** Manifest0 joined
[11:44] <elcaro> rfold: f still returns 2, but you're not doing anything with the return

[11:45] <elcaro> m: sub f(--> 2) { my &g = { 1 }; say g }; say f

[11:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤2␤»

[11:47] *** molaf left
[11:49] *** Sgeo_ left
[11:50] *** Sgeo_ joined
[11:56] *** Manifest0 left
[12:01] *** Manifest0 joined
[12:05] *** sena_kun joined
[12:06] *** Manifest0 left
[12:12] *** Manifest0 joined
[12:13] *** pecastro joined
[12:18] *** rindolf left
[12:18] *** kaare_ left
[12:18] *** Manifest0 left
[12:25] *** Manifest0 joined
[12:30] *** aborazmeh left
[12:36] *** Manifest0 left
[12:41] *** Manifest0 joined
[12:44] <cpan-p6> New module released to CPAN! Gnome::GObject (0.13.11) by 03MARTIMM

[13:02] *** rindolf joined
[13:07] *** Raylier joined
[13:10] *** Raylier left
[13:20] *** molaf joined
[13:21] *** Manifest0 left
[13:23] *** pamplemousse joined
[13:26] *** Manifest0 joined
[13:30] *** Manifest0 left
[13:35] *** Manifest0 joined
[13:38] *** pamplemousse left
[13:38] *** pamplemousse joined
[13:46] *** Manifest0 left
[13:52] *** Manifest0 joined
[13:54] *** pamplemousse left
[13:55] *** antoniogamiz joined
[13:58] *** Manifest0 left
[14:07] <Kaypie> is it possible to create an IO::Handle instance with a given fd?

[14:08] *** Sgeo__ joined
[14:11] *** Sgeo_ left
[14:14] <timotimo> worst case - and not portably - you can open /proc/self/fd/$n

[14:14] <timotimo> but you surely already knew that

[14:16] <Kaypie> yeah, but i like being able to run my own code on my machine

[14:17] <Kaypie> there's a way to get the path with fcntl on mac it looks like, but that's not portable either

[14:17] *** Kaypie is now known as Kaiepi

[14:18] <Kaiepi> wait i can just use ptsname for what i'm doing to get the filename i want

[14:27] *** antoniogamiz left
[14:27] *** antoniogamiz49 joined
[14:34] *** molaf left
[14:38] *** uzl joined
[14:40] <uzl> .tell jmerelo From the SO question about iteration, this is the example using the Iterator role (http://sprunge.us/Mz6GCl) but I'm still unable to iterate over the Scalar object. Am I doing something wrong? Thanks.

[14:40] <yoleaux> uzl: I'll pass your message to jmerelo.

[14:49] <jnthn> uzl: The point of a Scalar container is to make things a single item

[14:49] <jnthn> *act as 

[14:50] <jnthn> So `.say for $obj` would be expected to do a single iteration whatever the $obj Scalar holds; it's the Scalar that determines that, not the contents of it

[14:54] <uzl> jnthn: I'd like to say I knew that already ;-)! Thanks for the clarification. 

[14:55] <uzl> So regardless of implementing the class with `Iterator`, assigning to Scalar means that I cannot iterate over the object instance (e.g., it's a single item)?

[14:56] <uzl> BTW, the code was in response to JJ's answer (https://stackoverflow.com/a/57122642/10824322) on SO. 

[14:57] <jnthn> uzl: Yes

[14:57] <jnthn> Similarly, it means it won't flatten away in other contexts

[14:58] *** Sgeo_ joined
[15:01] <uzl> jnthn: Sorry for being too pedantic. Wouldn't that mean that the only way to get the iterable items from a class implementing those roles is during object construction? What if I want to keep the class around?

[15:02] *** Sgeo__ left
[15:02] <uzl> I cannot, for example, create my object and then assign it to a Positional if I want its iterable items when I need them? 

[15:03] *** khisanth_ left
[15:05] <jnthn> You can bind it to a Positional instead (my @a := YourClass.new), or just do `for |$obj` at the point you iterate it, or use a sigilless variable

[15:06] <jnthn> Or put a method on the class that returns something iterable, rather than making it directly iterable

[15:06] <jnthn> Exactly which is best depends on the problem at hand

[15:12] *** Black_Ribbon joined
[15:16] *** khisanth_ joined
[15:18] *** Sgeo joined
[15:21] *** Sgeo_ left
[15:24] *** Sgeo left
[15:25] <cpan-p6> New module released to CPAN! Gnome::Gtk3 (0.17.2) by 03MARTIMM

[15:36] *** uzl left
[15:37] *** kylese left
[15:44] <rfold> p6: my $a = [1, 2, 3]; for $a.self { .say }

[15:44] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤2␤3␤»

[15:45] <rfold> p6: my $a := [1, 2, 3]; for $a { .say }

[15:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤2␤3␤»

[15:47] <timotimo> p6: my $a := [1, 2, 3]; for $a<> { .say }

[15:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤2␤3␤»

[15:47] <timotimo> p6: my $a = [1, 2, 3]; for $a<> { .say }

[15:47] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «1␤2␤3␤»

[15:47] <timotimo> that's the one i meant

[15:48] <timotimo> people are going to space today, it seems

[15:51] *** [particle] joined
[15:52] *** [particle]1 left
[16:03] *** JappleAck left
[16:08] *** Sgeo joined
[16:12] *** zakharyas joined
[16:37] *** Voldenet left
[16:40] <rfold> Can I run spectest with fewer threads?

[16:42] *** Voldenet joined
[16:42] *** Voldenet left
[16:42] *** Voldenet joined
[16:43] <rfold> Ah, TEST_JOBS=n environment variable.

[16:43] *** antoniogamiz49 left
[17:06] *** sjm_uk joined
[17:12] *** patrickb joined
[17:23] *** ChoHag left
[17:26] *** ChoHag joined
[17:27] *** zakharyas left
[17:28] *** Sgeo_ joined
[17:31] *** Sgeo left
[17:33] *** patrickb left
[17:39] *** redhands joined
[17:40] *** patrickb joined
[17:55] *** ayerhart_ left
[18:10] *** sjm_uk left
[18:18] *** _jrjsmrtn joined
[18:19] *** __jrjsmrtn__ left
[18:20] *** Sgeo joined
[18:22] *** Sgeo_ left
[18:31] *** antoniogamiz joined
[18:33] *** sjm_uk joined
[18:36] *** wildtrees joined
[18:37] <Kaiepi> currently working on a library that abstracts the annoying parts of using PTYs away from the user

[18:37] <antoniogamiz> pty?

[18:37] <Kaiepi> pseudo-terminal

[18:37] <antoniogamiz> ah

[18:37] <Kaiepi> it's a posix thing

[18:37] *** patrickb left
[18:37] <antoniogamiz> good luck with that then :D

[18:38] *** wildtrees left
[18:39] *** wildtrees joined
[18:43] <Kaiepi> nothing wrong with the custom thing i have for vim-easy-align for traits at all :^) https://media.discordapp.net/attachments/491775824509272070/602207973808406540/2019-07-20-153857_513x80_scrot.png

[18:54] <cpan-p6> New module released to CPAN! App::MoarVM::ConfprogCompiler (0.0.8) by 03TIMOTIMO

[19:08] *** gdonald joined
[19:11] *** antoniogamiz left
[19:36] <Kaiepi> ...turns out i can't just subclass IO::Handle at all for this

[19:37] <Kaiepi> or at least i can, just i can't abstract out the parts where you deal with the child process' stdin/stdout/stderr because IO::Handle doesn't support creating new instances using fds

[19:38] <Kaiepi> fuck

[19:40] *** reach_satori left
[19:40] *** reach_satori joined
[20:00] *** lucasb joined
[20:22] *** sjm_uk left
[20:33] *** Cabanossi left
[20:34] *** Cabanossi joined
[20:52] *** albongo joined
[20:53] *** redhands left
[20:57] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Should IO::Handle instances be possible to construct using file descriptors? https://github.com/perl6/problem-solving/issues/73

[21:00] *** Garland_g[m] joined
[21:10] *** noisegul_ is now known as noisegul

[21:34] *** kkielak joined
[21:35] *** kkielak left
[21:36] <discord6> <Tyler (Aearnus)> hey, so I have a module Tortoiseshell in Tortoiseshell.pm6. next to it there's a native folder, and in it a file GLFW.pm6 declaring Tortoiseshell::Native::GLFW. how do I use that library from Tortoiseshell.pm6?

[21:49] <Kaiepi> is https://design.perl6.org/S03.html down?

[21:50] <sena_kun> https://github.com/perl6/perl6.org/issues/131

[22:03] *** netrino joined
[22:10] *** adu left
[22:11] *** adu joined
[22:13] *** rindolf left
[22:14] *** epony left
[22:32] <noisegul> Which umbrella term does Perl6 terminology use for methods/subroutines/routines. According to https://docs.perl6.org/language/functions it's 'functions', or is it 'routines'?

[22:37] *** [Sno] left
[22:39] *** [Sno] joined
[22:44] <jnthn> noisegul: "routine" is the general term, and the type structure even matches that :)

[22:44] <jnthn> m: say Sub.^mro; say Method.^mro;

[22:44] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «((Sub) (Routine) (Block) (Code) (Any) (Mu))␤((Method) (Routine) (Block) (Code) (Any) (Mu))␤»

[22:50] <noisegul> jnthn: Alright, thank you for the clarification :)

[23:00] *** lucasb left
[23:02] <Xliff> What's the difference between a Block and a Routine?

[23:07] <sena_kun> >A Routine is a code object meant for larger unities of code than Block.

[23:07] *** pecastro left
[23:07] <sena_kun> >The routine level is also the one at which multiness (multi subs and multi methods) are handled

[23:12] *** rfold left
[23:16] *** pamplemousse joined
[23:20] <Xliff> jnthn: Any luck with IO::Socket::Async::SSL?

[23:41] *** [particle]1 joined
[23:42] *** sena_kun left
[23:43] *** [particle] left
[23:48] *** Sgeo_ joined
[23:49] *** nepugia joined
[23:51] *** Sgeo left
[23:58] *** netrino left
[23:59] <jnthn> Xliff: Not had chance to look yet, and I'm a bit behind with PerlCon prep compared to where I'd like to be (and the "punishment" for not getting that done in the next week is that I have to do it during my vacation :))

