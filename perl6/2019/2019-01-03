[00:07] *** w_richard_w joined
[00:08] *** p6bannerbot sets mode: +v w_richard_w

[00:20] *** vike1 left
[00:22] *** qzix joined
[00:23] *** p6bannerbot sets mode: +v qzix

[00:27] <qzix> Curious if anyone can report on the current status of support for generating java supportable bitcode that can be run directly from java? From what I can tell this is not yet in the 2018.10 rakudo-star release.

[00:28] <timotimo> right, the jar files that fall out of the perl6 compiler aren't runnable without the rest of perl6 to my knowledge

[00:29] <timotimo> it requires at the very least the core setting and the runtime classes and methods

[00:30] <qzix> Any pointers on where to find current status/progress towards java support?

[00:34] <timotimo> maybe it'd be best to just compile a rakudo locally and play around with it?

[00:35] <timotimo> the current master version seems broken, but the last release ought to compile fine

[00:35] <timotimo> it usually just doesn't pass all tests

[00:36] <qzix> Have been, running a number of containers with various flavors of things. But, so far have not found a way to run anything I generation from perl6 in java. This seemed like a hot concept in the past but maybe it is no longer a pirority.

[00:38] <timotimo> yes, we rely on volunteers to work on almost everything, and many of the volunteers working on the java parts aren't available at the moment

[00:40] <qzix> Thanks for the input wasn’t finding anything on line so just thought I would give this a try. I’m sure I will keep poking at it.

[00:40] <timotimo> have you looked at the evalserver yet?

[00:40] <timotimo> it basically receives code as a string or filename or similar and runs it

[00:40] <timotimo> and there's ways to import and use java classes right in perl6 code

[00:41] <timotimo> combining both should allow you to do whatever you want, though it will probably be a bit cumbersome

[00:41] <qzix> read about it a little but didn’t sound exactly like what I’m after.

[00:42] <qzix> This isn’t a hard requirement or blocking anything i need. Just something that I thought was one of the perl6 goals so I was just curious if I could do it ….

[00:47] <timotimo> worst case, plain old IPC can have your back

[01:06] <vrurg> m: sub f { [1,2,3], {a=>1, b=>2} }; my ( @a, %h ) = f; note @a

[01:06] <camelia> rakudo-moar 395d633db: OUTPUT: «[[1 2 3] {a => 1, b => 2}]␤»

[01:07] <vrurg> Is there a simple way to get @a assigned with the array in return value?

[01:07] <vrurg> I can always assign to a scalar, but would like to have it look great.

[01:07] <lookatme_q> Using the bind operator ?

[01:07] <lookatme_q> m: sub f { [1,2,3], {a=>1, b=>2} }; my ( @a, %h ) := f; note @a

[01:07] <camelia> rakudo-moar 395d633db: OUTPUT: «[1 2 3]␤»

[01:08] <vrurg> m: sub f { [1,2,3], {a=>1, b=>2} }; my ( @a, %h ); (@a, %h) := f; note @a; note %h

[01:08] <camelia> rakudo-moar 395d633db: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use bind operator with this left-hand side␤at <tmp>:1␤------> 031, b=>2} }; my ( @a, %h ); (@a, %h) := f7⏏5; note @a; note %h␤»

[01:09] <vrurg> Much better, but only works for my. Anyway, thanks! Might do for me anyway.

[01:10] *** leont left
[01:10] <lookatme_q> :)

[01:33] *** Ven`` left
[02:06] *** w_richard_w left
[02:08] *** reach_satori left
[02:54] *** reach_satori joined
[02:55] *** p6bannerbot sets mode: +v reach_satori

[02:58] *** molaf left
[02:59] *** ferreira left
[03:00] *** cpage_ joined
[03:01] *** p6bannerbot sets mode: +v cpage_

[03:02] *** cfa left
[03:02] *** cpage left
[03:02] *** cpage_ is now known as cpage

[03:11] *** molaf joined
[03:11] *** p6bannerbot sets mode: +v molaf

[03:39] <Elronnd> is there an easy way to match a simple white-space character (\r, \n, \t, space) in regex?  \s seems to also match exotic unicode

[03:45] <buggable> New CPAN upload: Net-BGP-0.0.2.tar.gz by JMASLAK http://modules.perl6.org/dist/Net::BGP:cpan:JMASLAK

[03:54] *** ferreira joined
[03:55] *** p6bannerbot sets mode: +v ferreira

[04:15] <Elronnd> what's the difference between next and succeed?

[04:35] *** Ven`` joined
[04:35] *** p6bannerbot sets mode: +v Ven``

[04:41] *** Ven`` left
[04:41] *** Khisanth left
[04:48] *** Cabanossi joined
[04:49] *** p6bannerbot sets mode: +v Cabanossi

[04:50] *** Cabanoss- left
[04:51] *** sauvin joined
[04:51] *** p6bannerbot sets mode: +v sauvin

[04:54] *** Khisanth joined
[04:55] *** p6bannerbot sets mode: +v Khisanth

[04:56] *** shelly joined
[04:57] *** p6bannerbot sets mode: +v shelly

[05:01] <shelly> okkkk

[05:01] <shelly> this is just a frenly PSA

[05:01] <shelly> not snitchin' just an FYI https://imgur.com/a/UAnFMWX you can join #nances_playhouse for more information

[05:01] *** shelly left
[05:15] *** guifa left
[05:16] *** Sgeo__ joined
[05:17] *** p6bannerbot sets mode: +v Sgeo__

[05:19] *** Sgeo_ left
[05:36] *** Sgeo_ joined
[05:37] *** p6bannerbot sets mode: +v Sgeo_

[05:40] *** Sgeo__ left
[05:58] *** curan joined
[05:58] *** p6bannerbot sets mode: +v curan

[06:06] *** molaf left
[06:18] *** vrurg left
[06:47] *** w_richard_w joined
[06:48] *** p6bannerbot sets mode: +v w_richard_w

[06:49] *** w_richard_w left
[07:49] *** squashable6 left
[07:49] *** releasable6 left
[07:49] *** committable6 left
[07:49] *** evalable6 left
[07:49] *** benchable6 left
[07:49] *** shareable6 left
[07:49] *** reportable6 left
[07:49] *** quotable6 joined
[07:49] *** ChanServ sets mode: +v quotable6

[07:50] *** undersightable6 joined
[07:50] *** p6bannerbot sets mode: +v quotable6

[07:50] *** p6bannerbot sets mode: +v undersightable6

[07:51] *** coverable6 joined
[07:51] *** committable6 joined
[07:51] *** notable6 joined
[07:51] *** greppable6 joined
[07:51] *** evalable6 joined
[07:51] *** ChanServ sets mode: +v evalable6

[07:51] *** p6bannerbot sets mode: +v coverable6

[07:51] *** releasable6 joined
[07:51] *** p6bannerbot sets mode: +v committable6

[07:51] *** p6bannerbot sets mode: +v notable6

[07:51] *** reportable6 joined
[07:52] *** p6bannerbot sets mode: +v greppable6

[07:52] *** bisectable6 joined
[07:52] *** p6bannerbot sets mode: +v evalable6

[07:52] *** bloatable6 joined
[07:52] *** ChanServ sets mode: +v bloatable6

[07:52] *** shareable6 joined
[07:52] *** p6bannerbot sets mode: +v releasable6

[07:52] *** p6bannerbot sets mode: +v reportable6

[07:52] *** unicodable6 joined
[07:52] *** ChanServ sets mode: +v unicodable6

[07:52] *** p6bannerbot sets mode: +v bisectable6

[07:53] *** p6bannerbot sets mode: +v bloatable6

[07:53] *** benchable6 joined
[07:53] *** p6bannerbot sets mode: +v shareable6

[07:53] *** nativecallable6 joined
[07:53] *** p6bannerbot sets mode: +v unicodable6

[07:53] *** rindolf joined
[07:53] *** p6bannerbot sets mode: +v benchable6

[07:53] *** squashable6 joined
[07:53] *** ChanServ sets mode: +v squashable6

[07:54] *** lizmat left
[07:54] *** statisfiable6 joined
[07:54] *** ChanServ sets mode: +v statisfiable6

[07:54] *** p6bannerbot sets mode: +v nativecallable6

[07:54] *** p6bannerbot sets mode: +v rindolf

[07:54] *** p6bannerbot sets mode: +v squashable6

[07:54] *** p6bannerbot sets mode: +v statisfiable6

[08:19] *** robertle joined
[08:20] *** p6bannerbot sets mode: +v robertle

[08:23] *** w_richard_w joined
[08:23] *** p6bannerbot sets mode: +v w_richard_w

[08:25] *** zakharyas joined
[08:26] *** p6bannerbot sets mode: +v zakharyas

[08:26] *** w_richard_w left
[08:59] *** lizmat joined
[08:59] *** p6bannerbot sets mode: +v lizmat

[09:02] *** andrzejku joined
[09:03] *** p6bannerbot sets mode: +v andrzejku

[09:05] *** andrzejku left
[09:05] *** andrzejku joined
[09:06] *** p6bannerbot sets mode: +v andrzejku

[09:13] *** mowcat left
[09:22] <pony> how do you write a function tht takes arbitrarily named arguments?

[09:22] <pony> as in sub f(<something here>) { ... }; f(:anything_i_want(1)), etc.

[09:24] <lizmat> m: sub f(*%args) { dd %args ); f a => 42, b => 666

[09:24] <camelia> rakudo-moar 395d633db: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3sub f(*%args) { dd %args 7⏏5); f a => 42, b => 666␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        st…»

[09:24] <lizmat> m: sub f(*%args) { dd %args }; f(a => 42, b => 666)

[09:24] <camelia> rakudo-moar 395d633db: OUTPUT: «Hash element = {:a(42), :b(666)}␤»

[09:24] <pony> thank you :)

[09:24] <lizmat> .oO( peskye curlies )

[09:25] <lizmat> it's called a slurpy hash

[09:25] <lizmat> it's always available in methods as %_

[09:25] <lizmat> m: class A { method f() { dd %_ }; A.f(a => 42, b => 666)

[09:25] <camelia> rakudo-moar 395d633db: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3od f() { dd %_ }; A.f(a => 42, b => 666)7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modifier loo…»

[09:25] <lizmat> m: class A { method f() { dd %_ } }; A.f(a => 42, b => 666)

[09:25] <camelia> rakudo-moar 395d633db: OUTPUT: «Hash element = {:a(42), :b(666)}␤»

[09:25] *** domidumont joined
[09:25] <pony> cool

[09:26] *** p6bannerbot sets mode: +v domidumont

[09:27] *** pmurias joined
[09:27] *** p6bannerbot sets mode: +v pmurias

[09:28] <pmurias> hmm is the package scripts and modules get different?

[09:30] <pony> m: sub f(:$x) { put $x }; sub g(*%h) { f(*%h) }; g(:x(1))

[09:30] <camelia> rakudo-moar 395d633db: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    h used at line 1␤␤»

[09:30] <pony> how do I unpack the named arguments into another call?

[09:32] <pmurias> I'm wrapping roast tests inside modules and it's causing some failures for things like GLOBAL::Foo instead of Foo starting to appear in error messages

[09:33] *** domidumont left
[09:45] <lizmat> pony: f( |%h )

[09:45] <lizmat> you "slip" the hash as named parameter

[09:45] <lizmat> s

[09:46] <lizmat> prefix | is the slip operator

[09:49] <pony> =]

[09:50] <pony> nice

[10:07] *** pmurias left
[10:09] *** pmurias joined
[10:09] *** p6bannerbot sets mode: +v pmurias

[10:10] *** parv joined
[10:10] *** parv left
[10:13] <Geth> ¦ doc: 0304aaf0e9 | (JJ Merelo)++ | doc/Language/exceptions.pod6

[10:13] <Geth> ¦ doc: Reflow

[10:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0304aaf0e9

[10:13] <Geth> ¦ doc: 20a3a7e920 | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[10:13] <Geth> ¦ doc: Reflow and rephrasing

[10:13] <synopsebot> Link: https://doc.perl6.org/language/exceptions

[10:13] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[10:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/20a3a7e920

[10:13] <Geth> ¦ doc: b67e24c681 | (JJ Merelo)++ | doc/Language/syntax.pod6

[10:13] <synopsebot> Link: https://doc.perl6.org/language/syntax

[10:13] <Geth> ¦ doc: Eiminates unwanted categories.

[10:13] <Geth> ¦ doc: 

[10:13] <Geth> ¦ doc: Refs #1410 but also #2221.

[10:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b67e24c681

[10:14] *** SyrupThinker joined
[10:15] *** p6bannerbot sets mode: +v SyrupThinker

[10:27] *** robertle left
[10:29] <Geth> ¦ doc: 7478e815a9 | (JJ Merelo)++ | doc/Language/syntax.pod6

[10:29] <Geth> ¦ doc: Reflows and rephrases

[10:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7478e815a9

[10:29] <synopsebot> Link: https://doc.perl6.org/language/syntax

[10:39] *** regreg left
[10:40] *** regreg joined
[10:40] *** p6bannerbot sets mode: +v regreg

[10:57] *** vrurg joined
[10:57] *** p6bannerbot sets mode: +v vrurg

[11:14] *** regreg left
[11:20] *** regreg joined
[11:21] *** p6bannerbot sets mode: +v regreg

[11:29] *** regreg left
[11:31] <pmurias> t/spec/S32-io/chdir.t fails under harness6 because the harness6 claims it has 'Multiple plans' 

[11:35] *** regreg joined
[11:36] *** p6bannerbot sets mode: +v regreg

[11:42] *** pmurias left
[11:44] *** regreg left
[11:55] *** regreg joined
[11:56] *** p6bannerbot sets mode: +v regreg

[12:01] *** pmurias joined
[12:01] *** p6bannerbot sets mode: +v pmurias

[12:07] <pmurias> lizmat: would the pragma works for Rats created by infix:</>?

[12:09] <lizmat> m: use full-precision; dd 1/4

[12:09] <camelia> rakudo-moar 5625ebc15: OUTPUT: «0.25␤»

[12:10] <lizmat> hmmm... I guess I need to check up on that  :-)

[12:10] <lizmat> it *should*

[12:10] <lizmat> m: use full-precision; dd 0.01

[12:10] <camelia> rakudo-moar 5625ebc15: OUTPUT: «FatRat.new(1, 100)␤»

[12:12] <pmurias> m: use full-precision; say &infix:</>(1, 20)

[12:12] <camelia> rakudo-moar e29554f5c: OUTPUT: «0.05␤»

[12:12] <pmurias> m: use full-precision; say &infix:</>(1, 20).^name

[12:12] <camelia> rakudo-moar e29554f5c: OUTPUT: «Rat␤»

[12:13] <pmurias> m: use full-precision; say 1 / (20+3).^name

[12:13] <camelia> rakudo-moar e29554f5c: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5Int' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[12:13] <pmurias> m: use full-precision; say(1 / (20+3)).^name

[12:13] <camelia> rakudo-moar e29554f5c: OUTPUT: «0.043478␤»

[12:13] <pmurias> m: use full-precision; say ((1 / (20+3)).^name)

[12:13] <camelia> rakudo-moar e29554f5c: OUTPUT: «Rat␤»

[12:13] <pmurias> m: use full-precision; say ((1 / 20).^name)

[12:13] <camelia> rakudo-moar e29554f5c: OUTPUT: «Rat␤»

[12:14] <pmurias> lizmat: the pragma seems reminiscent of the 'use integer' from Perl 5

[12:18] <lizmat> pmurias: soon 1/2 should also be a FatRat with full-precision

[12:20] *** kktt007 joined
[12:20] *** p6bannerbot sets mode: +v kktt007

[12:27] *** domidumont joined
[12:27] *** robertle joined
[12:28] *** p6bannerbot sets mode: +v domidumont

[12:28] *** p6bannerbot sets mode: +v robertle

[12:34] *** regreg left
[12:39] *** Sgeo_ left
[12:39] *** lucasb joined
[12:39] *** p6bannerbot sets mode: +v lucasb

[12:39] *** Sgeo_ joined
[12:39] *** zakharyas left
[12:40] *** p6bannerbot sets mode: +v Sgeo_

[12:40] *** regreg joined
[12:41] *** p6bannerbot sets mode: +v regreg

[12:41] <pmurias> lizmat: what I'm not convinced about 'use full-precision' that we can either view it as a "strongly recommended" pragma like 'use strict' or 'use warnings' in Perl 5 or a way to specify FatRat literals (like use integer/use bigint) in Perl 5

[12:41] <pmurias> s/that/is that/

[12:42] <pmurias> lizmat: in the first case pragmas that should be almost always on should be on by default

[12:42] <lizmat> well, that was just part of the discussion yesterday: not everybody is convinced that it should be the default 

[12:42] <pmurias> lizmat: in the second case it seems like a bit clunky and action-at-distancy way of getting FatRats

[12:43] <lizmat> well, it is as clunky as any pragma, I'd think

[12:53] <pmurias> lizmat: exactly ;)

[12:59] *** kktt007 left
[13:01] <lizmat> m: dd 1 / 9999999999999999999999999999999

[13:01] <camelia> rakudo-moar 4a152da50: OUTPUT: «1e-31␤»

[13:01] <lizmat> m: use full-precision; dd 1 / 9999999999999999999999999999999

[13:01] <camelia> rakudo-moar 4a152da50: OUTPUT: «FatRat.new(0, 1)␤»

[13:01] <lizmat> that's a bug that would need to get fixed if we decide to keep full-precision

[13:01] <lizmat> the Rat gets converted to float before .FatRat gets its hands on it

[13:02] *** kktt007 joined
[13:03] *** p6bannerbot sets mode: +v kktt007

[13:06] <AlexDaniel> squashable6: next

[13:06] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈20 hours (2019-01-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[13:09] *** regreg left
[13:10] *** regreg joined
[13:11] <pmurias> lizmat: as module I think full-precision is a good idea, I would hesitate to add it the core

[13:11] *** p6bannerbot sets mode: +v regreg

[13:12] *** vrurg left
[13:15] *** MasterDuke left
[13:20] <Woodi> hallo #perl6 :)

[13:21] <lizmat> Woodi o/

[13:25] <Woodi> some time ago I got to think, that everything is full of domains. eg. io is domain and numbers to print are their own domain. also numbers in CPU calculations are separate domain from eg. control flow :)  so maybe some method on io could decide what to print ? or some switch in numeric subsystem could decide what precision to use ? eg. Auto CAD (Lisp internally) allows to define what precision to use for 

[13:25] <Woodi> every "number"

[13:27] *** mowcat joined
[13:27] <Woodi> masak: MS Basic 1.0 didn't have any way to define routines; then MS B. 2.0 had 'gosub' that was terrible. also Pascal had functions and procedures so, obviously, those two cannot be used :)

[13:28] *** p6bannerbot sets mode: +v mowcat

[13:43] *** vrurg joined
[13:44] *** p6bannerbot sets mode: +v vrurg

[13:46] *** ExtraCrispy joined
[13:46] *** p6bannerbot sets mode: +v ExtraCrispy

[13:49] *** Sgeo joined
[13:49] *** p6bannerbot sets mode: +v Sgeo

[13:53] *** Sgeo_ left
[14:01] *** sena_kun joined
[14:02] *** p6bannerbot sets mode: +v sena_kun

[14:07] *** zakharyas joined
[14:08] *** MasterDuke joined
[14:08] *** p6bannerbot sets mode: +v MasterDuke

[14:08] *** p6bannerbot sets mode: +v zakharyas

[14:08] *** MasterDuke left
[14:08] *** MasterDuke joined
[14:08] *** herbert.freenode.net sets mode: +v MasterDuke

[14:08] *** p6bannerbot sets mode: +v MasterDuke

[14:14] *** Xliff_ joined
[14:15] *** p6bannerbot sets mode: +v Xliff_

[14:19] <Xliff_> \o

[14:23] *** mowcat left
[14:26] *** pmurias left
[14:31] *** mowcat joined
[14:31] *** p6bannerbot sets mode: +v mowcat

[14:32] *** Ven`` joined
[14:33] *** p6bannerbot sets mode: +v Ven``

[14:33] *** pmurias joined
[14:33] *** p6bannerbot sets mode: +v pmurias

[14:39] *** Xliff left
[14:42] *** curan left
[14:43] *** andrzejku left
[14:59] <masak> Woodi: are you mansplaining MS Basic and Pascal to me? I was talking about QBasic.

[15:00] <AlexDaniel> :S

[15:00] <masak> also, QBasic (and Turbo Basic, which I used a lot) *did* have the `FUNCTION` keyword, so I have no idea what your point is

[15:02] <masak> I think `GOSUB` was only terrible to the extent that doing function calls via line numbers (or labels) was terrible, instead of via functions/procedures. the main idea, of last-in-first-out control flow, is the opposite of terrible.

[15:08] <lizmat> weekly: http://blogs.perl.org/users/shoichi_kaji1/2019/01/p6env.html

[15:08] <notable6> lizmat, Noted!

[15:12] <pmurias> shoichi_kaji++ # p6env

[15:14] <pmurias> hooking it up to the mockup https://p6up.github.io/ would be awesome

[15:18] <Xliff_> Indeed! That looks nice!

[15:18] <Xliff_> lizmat: Thanks for the link!

[15:23] <vrurg> What advantages p6env has comparing to rakudobrew?

[15:24] *** ChoHag left
[15:26] *** regreg left
[15:28] *** lucasb left
[15:32] <sena_kun> m: constant $c = 5; say $c.HOW;

[15:32] <camelia> rakudo-moar 4a152da50: OUTPUT: «Perl6::Metamodel::ClassHOW.new␤»

[15:33] <sena_kun> it is a ClassHOW, but I don't get how I can create a constant using MOP? I've glanced over Actions.nqp part that handles constant declaration, though it didn't help much.

[15:35] <timotimo> constants aren't about what an object is, it's about packages, lexical pads, etc

[15:35] *** ChoHag joined
[15:36] *** p6bannerbot sets mode: +v ChoHag

[15:37] <sena_kun> ok, I guess I'll go with another approach. thanks.

[15:44] *** mowcat left
[16:02] <AlexDaniel> squashable6: status

[16:02] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈17 hours (2019-01-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:04] *** jme` left
[16:15] *** ChoHag left
[16:17] *** ChoHag joined
[16:17] *** p6bannerbot sets mode: +v ChoHag

[16:20] *** molaf joined
[16:21] *** p6bannerbot sets mode: +v molaf

[16:23] *** xinming joined
[16:24] *** p6bannerbot sets mode: +v xinming

[16:24] <MasterDuke> unfortunately i'm going to be travelling almost that entire period and probably won't be able to contribute to the squashathon

[16:26] *** xinming_ left
[16:42] <pmurias> vrurg: isn't p6env supposed to be fully sane?

[16:45] *** Sgeo_ joined
[16:46] *** molaf left
[16:46] *** p6bannerbot sets mode: +v Sgeo_

[16:49] *** Sgeo left
[16:56] *** pmurias left
[17:04] *** Sgeo__ joined
[17:05] *** p6bannerbot sets mode: +v Sgeo__

[17:06] *** Ven`` left
[17:07] *** Sgeo_ left
[17:24] *** ChoHag left
[17:26] *** ChoHag joined
[17:27] *** p6bannerbot sets mode: +v ChoHag

[17:28] <lizmat> https://pythonclock.org   # sometimes I think we should focus on writing a Python 2 grammar and make that work on MoarVM

[17:31] <lizmat> :-)

[17:36] <[Coke]> sub MAIN doesn't document how to handle array args on the doc site.

[17:37] <lizmat> with a Doc squashathon on the horizon, now is the time to add a doc issue !

[17:39] <Woodi> lizmat: do only Python can run Python or it is saner ? :)

[17:40] <lizmat> there are several Python implementations afaik

[17:40] <lizmat> so I guess in that sense it's saner  :-)

[17:48] <[Coke]> lizmat: added a comment on a relevant ticket.

[17:51] <[Coke]> wonder if strawberry perl's prove on windows works with -j or if it just ends up running one at a time - it shows 3 tests for me right now, for example, but only one is making any progress, other 2 are at 0.

[17:53] <[Coke]> (doc tests seem very slow compared to linux)

[17:54] *** cfa joined
[17:54] *** p6bannerbot sets mode: +v cfa

[17:56] <lizmat> [Coke]: my understanding of prove on Win is that it does parallelize, but doesn't start a new batch until *all* have finished

[17:57] <lizmat> of a given batch.  Which seems to be corroborated by your observations ?

[17:58] <[Coke]> hard to verify that, but it's possible

[18:01] *** leont joined
[18:01] *** p6bannerbot sets mode: +v leont

[18:08] *** pmurias joined
[18:08] *** p6bannerbot sets mode: +v pmurias

[18:10] *** ChoHag left
[18:11] <MasterDuke> btw, the MAIN array args business about it failing when there's just a single value, is that specced? could it be changed?

[18:16] *** molaf joined
[18:17] *** p6bannerbot sets mode: +v molaf

[18:18] *** dwarring joined
[18:18] *** p6bannerbot sets mode: +v dwarring

[18:23] *** sauvin left
[18:24] <MasterDuke> timotimo: just got BOOTNum allocations when compiling the muldis grammar down from 465,217 to 45,389

[18:25] <MasterDuke> oh, oops. that's from my other example

[18:26] <MasterDuke> but it does seem to reduce the time to compile the muldis grammar by 1s

[18:28] <pmurias> lizmat: python has C extensions like Perl 5 does, so just the language won't be enought to run all Python 2 programs :(

[18:28] <lizmat> argh  :-(

[18:39] <leont> There are multiple python implementations, even if cpython has always been the standard. At least that problem isn't new

[18:43] *** squashable6 left
[18:44] *** squashable6 joined
[18:44] *** ChanServ sets mode: +v squashable6

[18:44] <squashable6> Webhook for perl6/roast is now active! Design for failure.

[18:44] <Geth> ¦ perl6-examples: 2b9742a89d | (David Warring)++ | .travis.yml

[18:44] <Geth> ¦ perl6-examples: further CI Rakudo baseline bump for deps

[18:44] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/2b9742a89d

[18:45] <squashable6> Webhook for rakudo/rakudo is now active! Keep it logically awesome.

[18:45] <timotimo> pypy implements the cpython extension business

[18:50] <pmurias> it's still an significant obstacle for python on MoarVM

[18:51] *** Ven`` joined
[18:52] *** cjkinni joined
[18:52] *** p6bannerbot sets mode: +v Ven``

[18:53] *** p6bannerbot sets mode: +v cjkinni

[18:59] *** pmurias left
[19:00] *** pmurias joined
[19:00] *** p6bannerbot sets mode: +v pmurias

[19:05] <buggable> New CPAN upload: Tomtit-0.0.14.tar.gz by MELEZHIK http://modules.perl6.org/dist/Tomtit:cpan:MELEZHIK

[19:06] <Geth> ¦ doc: d1d41ccb57 | cfa++ | doc/Language/pod.pod6

[19:06] <Geth> ¦ doc: Index existing #| and #= declarator block documentation.

[19:06] <Geth> ¦ doc: 

[19:06] <Geth> ¦ doc: (Partially addresses #2305.)

[19:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d1d41ccb57

[19:06] <synopsebot> Link: https://doc.perl6.org/language/pod

[19:13] <Geth> ¦ perl6-examples: 0b4110f87a | (David Warring)++ | 2 files

[19:13] <Geth> ¦ perl6-examples: fix Categories

[19:13] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/0b4110f87a

[19:15] <El_Che> weekly: http://blogs.perl.org/users/shoichi_kaji1/2019/01/p6env.html

[19:15] <notable6> El_Che, Noted!

[19:35] *** zakharyas left
[19:49] *** kurahaupo left
[19:50] *** hph^ left
[19:50] *** kurahaupo joined
[19:51] *** p6bannerbot sets mode: +v kurahaupo

[19:54] <Geth> ¦ perl6-examples: bb38add87b | (David Warring)++ | lib/Examples/Categories.pm

[19:54] <Geth> ¦ perl6-examples: Define sort order in Categories.categories-list

[19:54] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/bb38add87b

[19:55] *** aiaiste joined
[19:56] *** p6bannerbot sets mode: +v aiaiste

[20:00] *** vrurg left
[20:00] *** domidumont left
[20:03] *** vrurg joined
[20:04] *** p6bannerbot sets mode: +v vrurg

[20:04] *** molaf left
[20:08] *** AlexDaniel left
[20:16] *** dct joined
[20:16] *** p6bannerbot sets mode: +v dct

[20:17] <cfa> hmm, looks like those index entries don't work in firefox

[20:21] *** Sgeo_ joined
[20:22] *** p6bannerbot sets mode: +v Sgeo_

[20:23] *** andrzejku joined
[20:23] *** p6bannerbot sets mode: +v andrzejku

[20:25] *** Sgeo__ left
[20:30] *** vrurg left
[20:38] <Xliff_> I keep getting this message from rakudo: Native call expected return type with CPointer representation, but got a P6opaque (Scalar)

[20:39] <Xliff_> Does that mean the sub RETURN value was a P6opaque or one of its parameters? That error doesn't really make it clear.

[20:51] *** Praise joined
[20:51] *** Praise left
[20:51] *** Praise joined
[20:51] *** p6bannerbot sets mode: +v Praise

[20:52] *** p6bannerbot sets mode: +v Praise

[20:57] *** MasterDuke left
[20:59] *** andrzejku left
[21:03] *** molaf joined
[21:04] *** p6bannerbot sets mode: +v molaf

[21:05] *** Cabanossi left
[21:08] *** andrzejku joined
[21:09] *** p6bannerbot sets mode: +v andrzejku

[21:11] *** Cabanossi joined
[21:11] <Geth> ¦ doc: df15cce724 | cfa++ | doc/Language/pod.pod6

[21:11] <Geth> ¦ doc: Fix declarator block xrefs (#2305).

[21:11] <Geth> ¦ doc: 

[21:11] <Geth> ¦ doc: Note that index entries for #| and #= are currently not working in Firefox.

[21:11] <Geth> ¦ doc: The generated anchor names are:

[21:11] <synopsebot> Link: https://doc.perl6.org/language/pod

[21:11] <Geth> ¦ doc: 

[21:11] <Geth> ¦ doc: - index-entry-declarator_blocks_%23|

[21:11] <Geth> ¦ doc: - index-entry-declarator_blocks_%23=

[21:11] <Geth> ¦ doc: <…commit message has 7 more lines…>

[21:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/df15cce724

[21:12] *** p6bannerbot sets mode: +v Cabanossi

[21:23] *** pmurias left
[21:49] *** Cabanossi left
[21:53] *** Cabanossi joined
[21:54] *** p6bannerbot sets mode: +v Cabanossi

[21:56] *** Cabanossi left
[21:58] *** andrzejku left
[22:00] *** Cabanossi joined
[22:01] *** p6bannerbot sets mode: +v Cabanossi

[22:04] *** vrurg joined
[22:05] *** p6bannerbot sets mode: +v vrurg

[22:08] *** Cabanossi left
[22:14] *** lucasb joined
[22:14] *** p6bannerbot sets mode: +v lucasb

[22:28] *** lizmat left
[22:28] *** lizmat joined
[22:28] *** p6bannerbot sets mode: +v lizmat

[22:31] *** scovit joined
[22:32] *** p6bannerbot sets mode: +v scovit

[22:53] *** scovit left
[22:56] *** Cabanossi joined
[22:57] *** p6bannerbot sets mode: +v Cabanossi

[23:02] *** Pikk3wyn joined
[23:02] *** p6bannerbot sets mode: +v Pikk3wyn

[23:25] <buggable> New CPAN upload: Tomtit-0.0.15.tar.gz by MELEZHIK http://modules.perl6.org/dist/Tomtit:cpan:MELEZHIK

[23:25] <buggable> New CPAN upload: Tomtit-0.0.16.tar.gz by MELEZHIK http://modules.perl6.org/dist/Tomtit:cpan:MELEZHIK

[23:30] *** sena_kun left
[23:55] *** kktt007 left
