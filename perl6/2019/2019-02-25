[00:05] *** aborazmeh joined
[00:05] *** aborazmeh left
[00:05] *** aborazmeh joined
[00:25] *** choiboi joined
[00:28] *** MilkmanDan left
[00:30] *** MilkmanDan joined
[00:31] *** rindolf left
[00:32] *** zacts left
[00:41] *** kurahaupo_ joined
[00:41] *** kurahaupo left
[00:42] *** kurahaupo_ left
[00:42] *** kurahaupo joined
[00:46] *** netrino_ left
[00:49] *** snarkyboojum joined
[01:00] *** snarkyboojum left
[01:11] <lookatme_q> :)

[01:45] *** AlexDani` joined
[01:49] *** kktt left
[01:49] *** AlexDaniel left
[01:50] *** AlexDani` is now known as AlexDaniel

[02:25] *** Sgeo_ joined
[02:27] *** Sgeo left
[03:11] *** reportable6 left
[03:13] *** choiboi left
[03:14] *** reportable6 joined
[03:14] *** ChanServ sets mode: +v reportable6

[03:29] *** zacts joined
[03:40] *** Zhang_ joined
[03:41] *** Cabanossi left
[03:47] *** Zhang_ left
[03:50] *** Cabanossi joined
[04:12] *** Cabanossi left
[04:23] *** Cabanossi joined
[04:28] *** zacts left
[04:43] *** avuserow joined
[05:08] *** MilkmanDan left
[05:08] *** MilkmanDan joined
[05:12] *** sno left
[05:37] *** w17t left
[05:41] *** zacts joined
[05:49] *** jmerelo joined
[05:49] <jmerelo> releasable6: status

[05:49] <releasable6> jmerelo, Next release will happen when it's ready. 6 blockers. 262 out of 315 commits logged

[05:49] <releasable6> jmerelo, Details: https://gist.github.com/903862d8b069c697c3ac7f59e6ba6c50

[05:56] <Geth> ¬¶ ecosystem: 5dacf34c19 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[05:56] <Geth> ¬¶ ecosystem: Trims spaces

[05:56] <Geth> ¬¶ ecosystem: 

[05:56] <Geth> ¬¶ ecosystem: Since there seemed to be a problem

[05:56] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/5dacf34c19

[05:56] <Geth> ¬¶ ecosystem: 213a65595d | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[05:56] <Geth> ¬¶ ecosystem: Merge pull request #436 from perl6/JJ-patch-2

[05:56] <Geth> ¬¶ ecosystem: 

[05:56] <Geth> ¬¶ ecosystem: Trims spaces

[05:56] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/213a65595d

[05:57] *** curan joined
[06:10] *** jmerelo left
[06:14] *** aborazmeh left
[06:16] *** volkov joined
[06:21] *** zacts left
[06:21] *** jmerelo joined
[06:24] *** pierrot left
[06:26] *** pierrot joined
[06:29] *** MilkmanDan left
[06:29] *** MilkmanDan joined
[06:33] *** pierrot left
[06:34] *** zacts joined
[06:36] *** pierrot joined
[06:38] *** dct left
[06:41] *** zacts left
[06:41] *** zacts joined
[06:42] *** volkov left
[06:43] *** dct joined
[06:52] *** pierrot left
[06:56] *** pierrot joined
[06:56] *** AlexDaniel left
[06:57] *** AlexDani` joined
[06:58] *** w17t joined
[07:09] *** ecmartz joined
[07:10] *** reach_satori left
[07:12] *** w17t left
[07:18] *** ravenousmoose joined
[07:20] *** pierrot left
[07:21] *** jmerelo left
[07:21] *** pierrot joined
[07:24] *** w17t joined
[07:30] *** mahafyi joined
[07:32] *** reach_satori joined
[07:52] *** domidumont joined
[08:09] *** w_richard_w joined
[08:09] *** w_richard_w left
[08:10] *** rindolf joined
[08:16] *** reach_satori left
[08:17] *** mahafyi left
[08:30] *** cgfbee joined
[08:43] *** abraxxa joined
[08:47] <rindolf> m: my $x=2¬π¬≤ ; say $x

[08:47] <camelia> rakudo-moar 176127fe4: OUTPUT: ¬´4096‚ê§¬ª

[08:47] <rindolf> heh

[08:55] *** pierrot left
[08:58] *** netrino joined
[09:00] *** zacts left
[09:06] *** Actualey` left
[09:08] *** pierrot joined
[09:11] *** MilkmanDan left
[09:12] *** pierrot left
[09:15] *** MilkmanDan joined
[09:21] *** pierrot joined
[09:24] *** dakkar joined
[09:26] *** pierrot left
[09:28] *** sena_kun joined
[09:33] *** pierrot joined
[09:42] *** pierrot left
[09:44] <masak> I know people are all gushy over the 2¬π¬≤ feature. maybe I'm alone in never taking to it. :)

[09:46] <masak> it's not so much an "everything should be ASCII" sentiment, I think -- it's more like, did we really need this other way to write `2 ** 12`? feels like just another thing that linting tools will have to go in and make consistent...

[09:46] <masak> the `**` operator has a long history. is it all the way back to FORTRAN?

[09:47] *** pierrot joined
[09:47] <masak> hm, seems so. or, at least, Fortran is the oldest language that has it.

[09:48] *** netrino left
[09:50] *** Grauwolf left
[09:50] *** Grauwolf joined
[09:50] *** Grauwolf left
[09:50] *** Grauwolf joined
[09:55] *** pierrot left
[09:58] *** pierrot joined
[09:59] <Geth> ¬¶ ecosystem/JJ-patch-3: e1024d395d | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[09:59] <Geth> ¬¶ ecosystem/JJ-patch-3: Adds Test::Script::Output to the ecosystem

[09:59] <Geth> ¬¶ ecosystem/JJ-patch-3: 

[09:59] <Geth> ¬¶ ecosystem/JJ-patch-3: Also a test...

[09:59] <Geth> ¬¶ ecosystem/JJ-patch-3: review: https://github.com/perl6/ecosystem/commit/e1024d395d

[10:00] <Geth> ¬¶ ecosystem: JJ++ created pull request #437: Adds Test::Script::Output to the ecosystem

[10:00] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/437

[10:06] <Geth> ¬¶ ecosystem: e1024d395d | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[10:06] <Geth> ¬¶ ecosystem: Adds Test::Script::Output to the ecosystem

[10:06] <Geth> ¬¶ ecosystem: 

[10:06] <Geth> ¬¶ ecosystem: Also a test...

[10:06] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/e1024d395d

[10:06] <Geth> ¬¶ ecosystem: 96c9e59711 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[10:06] <Geth> ¬¶ ecosystem: Merge pull request #437 from perl6/JJ-patch-3

[10:06] <Geth> ¬¶ ecosystem: 

[10:06] <Geth> ¬¶ ecosystem: Adds Test::Script::Output to the ecosystem

[10:06] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/96c9e59711

[10:19] *** nasqum left
[10:20] *** pierrot left
[10:21] *** pierrot joined
[10:24] *** mowcat joined
[10:34] *** pmurias joined
[10:34] <pmurias> masak: re 2¬≤ that feature doesn't seem to be of any benefit to me 

[10:35] <pmurias> masak: s/any/significant/

[10:36] <lizmat> masak: you could also argue that the ** operator is one of the oldest examples of Stockholm Syndrome in programming languages

[10:38] * lizmat learned programming in Tutor: https://en.wikipedia.org/wiki/TUTOR_(programming_language)#Expression_syntax

[10:38] <lizmat> nothing strange with 2¬π¬≤ there

[10:39] *** ecmartz left
[10:39] <lizmat> it's just that it's gotten harder to type (the PLATO keyboard had dedicated keys for SUB and SUPER)

[10:48] *** pierrot left
[10:50] *** pierrot joined
[10:57] <masak> lizmat: I'm not enthralled with the "Stockholm Syndrome" analogy in general. it seems to be used by people who just want to say "you've gotten used to the feature so you don't see that it's actually bad"

[10:58] <masak> the actual incident in Stockholm involved a bank robbery with hostages, and I find the comparison tenuous at best

[10:58] <lizmat> ok, fair enough

[10:58] <masak> I get the selling point about 2¬π¬≤

[10:58] <lizmat> let me rephrase that then: you've gotten used to the feature so you don't see that it's actually bad

[10:58] <masak> :)

[10:59] <masak> I don't see that it's actually bad, and I'd go further and argue that an operator there is actually good

[10:59] <masak> I grew up with `^` doing that in BASIC, but `**` is fine too, and the operator has a long history with that spelling in many languages

[11:00] <masak> I've even sometimes explained it to myself, in my internal dialogue, as "multiplication, only doubly do" :)

[11:00] <masak> so I think it's well-motivated

[11:01] <masak> one of the things I ended up _not_ liking about BASIC is that many things, even simple things, had their own specialized syntax. stuff like `LINE (x1,y1)-(x2,y2)`. as I moved on to other languages, that specialized syntax felt excessive.

[11:01] <masak> I guess 2¬π¬≤ reminds me a little of that excessiveness.

[11:01] *** pierrot left
[11:01] <masak> like, what's so special about exponentiation that it gets not just an operator, but a whole *separate way of writing it*

[11:02] <lizmat> ask mathematicians

[11:02] <pmurias> isn't 2¬π¬≤ actually a bad example of how the operator is used

[11:02] <masak> and that separate way of writing it doesn't even generalize to non-literal values

[11:02] <lizmat> they're the ones whi invented it 

[11:02] <lizmat> *who

[11:02] <masak> lizmat: I don't find that a compelling argument to adopt a feature ;)

[11:03] *** pierrot joined
[11:03] <masak> lizmat: "we don't know why this feature is like that, but mathematicians do it that way"

[11:03] <jkramer> Didn't rakudo have it's own website? Currently there's some community server thing at https://rakudo.org/

[11:04] <pmurias> I assume $a¬≤ and $b¬≥ are more representative examples, as I can't imagined exponentating to literals > than 10 to be a common thing 

[11:04] <lizmat> ask jnthn, he's in charge of that domain now  :-)

[11:04] <jkramer> Nvm, I just wanted to know what the latest release was :)

[11:04] <masak> pmurias: good point

[11:04] <lizmat> 2018.10 for Star, 2018.12 for compiler

[11:05] <pmurias> masak: if I remember correctly we even had someone arguing that we shouldn't support multi digits suerscripts

[11:06] <lizmat> afk&

[11:06] <masak> pmurias: I can certainly see that argument (though I don't think I made it)

[11:06] <pmurias> * superscripts

[11:06] <masak> pmurias: but I can also easily see the other argument, that once we set down this path, it's Least Surprise to suport multi-digit

[11:07] <masak> (even though, like you say, the returns diminish quickly with more digits)

[11:28] *** sno joined
[11:28] *** scimon joined
[11:42] *** dogbert2_ left
[11:46] *** pierrot left
[11:47] *** pierrot joined
[11:51] *** pmurias left
[11:55] *** SHODAN left
[12:04] *** sno left
[12:07] *** reach_satori joined
[12:18] *** pmurias joined
[12:43] *** pierrot left
[12:44] *** pierrot joined
[13:05] *** kensanata joined
[13:10] *** pierrot left
[13:15] *** pierrot joined
[13:36] *** w17t left
[13:39] *** mahafyi joined
[14:14] *** pierrot left
[14:17] *** pierrot joined
[14:19] *** lucasb joined
[14:31] *** pierrot left
[14:32] *** ravenousmoose left
[14:32] *** pierrot joined
[14:36] *** ravenousmoose joined
[14:39] *** mowcat left
[14:45] *** skids joined
[14:47] *** mikfire joined
[15:10] *** pierrot left
[15:12] *** reach_satori left
[15:12] *** pierrot joined
[15:26] <pmurias> masak: on the other hand the features fits well into the Perlish "Perfection is achieved when there is nothing more to add" philosophy

[15:26] <tadzik> :

[15:26] <tadzik> P

[15:26] <tadzik> see, I added a newline even

[15:28] *** pierrot left
[15:31] *** pierrot joined
[15:32] *** hankache joined
[15:42] *** curan left
[15:43] *** dogbert11 left
[15:50] *** pierrot left
[15:50] *** pierrot joined
[15:52] *** eliot joined
[15:52] *** ravenousmoose left
[15:54] *** ravenousmoose joined
[15:59] *** molaf joined
[16:00] *** choiboi joined
[16:01] *** jmerelo joined
[16:06] *** AlexDani` is now known as AlexDaniel

[16:16] *** pierrot left
[16:16] *** pecastro_ joined
[16:18] *** pierrot joined
[16:18] *** pecastro left
[16:21] *** eliot left
[16:25] *** pierrot left
[16:26] *** hankache left
[16:28] *** pierrot joined
[16:30] *** reach_satori joined
[16:32] *** w17t joined
[16:56] *** pierrot left
[16:58] *** domidumont left
[17:05] *** pierrot joined
[17:07] *** sno joined
[17:09] *** melezhik joined
[17:09] <melezhik> Hi! How to convert string into regexps?

[17:09] *** choiboi left
[17:09] <melezhik> say I have regexp representation through string 

[17:09] *** zacts joined
[17:10] <melezhik> my $a = '\d \s "hello:" \d';

[17:10] *** pierrot left
[17:11] <melezhik> and I like to use it as regexp

[17:11] <melezhik> "hello" ~~ /$a/

[17:11] *** pierrot joined
[17:11] <melezhik> the issue is that some regexps are not handled properly through this straight forward way 

[17:12] <melezhik> m: $a = 'foo: \s+ bar'; say "foo: bar" ~~ /$a/;

[17:12] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5$a = 'foo: \s+ bar'; say "foo: bar" ~~ /‚ê§¬ª

[17:12] <SmokeMachine> m: my $a = Q[\w ** 3]; say " abc"  ~~ /<$a>/

[17:12] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢abcÔΩ£‚ê§¬ª

[17:12] <melezhik> m: my $a = 'foo: \s+ bar'; say "foo: bar" ~~ /$a/;

[17:12] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´Nil‚ê§¬ª

[17:12] <melezhik> compare with

[17:12] <SmokeMachine> m: my $a = 'foo: \s+ bar'; say "foo: bar" ~~ /<$a>/

[17:12] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´Nil‚ê§¬ª

[17:13] <melezhik> m: say "foo: bar" ~~ /"foo:" \s bar /;

[17:13] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:13] *** rindolf left
[17:13] <melezhik> m: my $a = '"foo:" \s+ bar'; say "foo: bar" ~~ /$a/;

[17:13] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´Nil‚ê§¬ª

[17:14] <SmokeMachine> m: my $a = '"foo:" \s+ bar'; say "foo: bar" ~~ /<$a>/

[17:14] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:14] <melezhik> so that's the problem

[17:14] <SmokeMachine> melezhik: ":" is a special char... should have a \ or be inside of a ""

[17:15] <melezhik> but why it works just fine with

[17:15] <melezhik> m: say "foo: bar" ~~ /"foo:" \s bar /;

[17:15] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:15] <melezhik> ?

[17:15] <SmokeMachine> its inside of a " " 

[17:15] <melezhik> so do I when use regexp as is

[17:15] <SmokeMachine> m: say "foo: bar" ~~ /"foo:" \s bar /;

[17:15] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:15] <melezhik> but that does not work with interpolation 

[17:15] <SmokeMachine> m: say "foo: bar" ~~ /foo: \s bar /;

[17:15] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´Nil‚ê§¬ª

[17:15] <SmokeMachine> m: say "foo: bar" ~~ /foo\: \s bar /;

[17:15] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:15] *** pierrot left
[17:16] <SmokeMachine> melezhik: ^ ^ 

[17:16] <melezhik> SmokeMachine: sure. if you please write interpolation equivalent ? 

[17:17] <melezhik> m: my $a = 'foo\: \s+ bar'; say "foo: bar" ~~ /$a/;

[17:17] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´Nil‚ê§¬ª

[17:17] <melezhik> m: my $a = 'foo\: \s+ bar'; say "foo: bar" ~~ /<$a>/;

[17:17] <SmokeMachine> m: my $a = 'foo\: \s+ bar'; say "foo: bar" ~~ /<$a>/;

[17:17] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:17] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:17] <melezhik> looks like only implicit EVAL works

[17:18] <melezhik> however I am reading about warning on use in this mode

[17:18] <melezhik> https://docs.perl6.org/language/traps#%3C%7B%24x%7D%3E_vs_%24%28%24x%29%3A_Implicit_EVAL

[17:18] <melezhik> m: my $a = '"foo:" \s+ bar'; say "foo: bar" ~~ /<$a>/;

[17:18] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´ÔΩ¢foo: barÔΩ£‚ê§¬ª

[17:19] <melezhik> m: my $a = '"foo:" \s+ bar'; say "foo: bar" ~~ /$($a)/;

[17:19] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´Nil‚ê§¬ª

[17:20] <avuserow> it depends on if you want to use the string in $a as a regex or as a value to match

[17:20] *** frithnanth joined
[17:21] <avuserow> you want implicit EVAL <$a> in the first case

[17:23] *** pierrot joined
[17:24] *** frithnanth left
[17:25] *** scimon left
[17:25] <melezhik> avuserov: as a regex

[17:26] <melezhik> avuserow: as a regex

[17:27] <avuserow> then use it is <$a>

[17:28] <melezhik> yeah, I guessed that

[17:28] <jmerelo> So, does anyone care if we do a documentation hackathon this weekend instead of "Most wanted modules" hackathon?

[17:29] <jmerelo> squashable6: status

[17:29] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 3 days and ‚âà18 hours (2019-03-02 UTC-14‚åÅUTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:29] *** rindolf joined
[17:30] <jmerelo> It would basically be this issue: https://github.com/perl6/doc/issues/2632

[17:31] *** zacts left
[17:32] *** p701 joined
[17:35] *** p701 left
[17:43] *** pierrot left
[17:44] *** guifa joined
[17:45] *** dogbert17 joined
[17:48] *** choiboi joined
[17:48] *** dakkar left
[17:51] *** zachk joined
[17:51] *** pierrot joined
[17:51] *** ravenous_ joined
[17:53] <Geth> ¬¶ doc: 18de3c64f7 | (JJ Merelo)++ | doc/Type/Match.pod6

[17:53] <Geth> ¬¶ doc: Adds method definition for clone refs #2627

[17:53] <synopsebot> Link: https://doc.perl6.org/type/Match

[17:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/18de3c64f7

[17:53] <Geth> ¬¶ doc: 22a1cb51cb | (JJ Merelo)++ | doc/Type/Mu.pod6

[17:53] <Geth> ¬¶ doc: Adds method definition for clone and an example #2627

[17:53] <synopsebot> Link: https://doc.perl6.org/type/Mu

[17:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/22a1cb51cb

[17:53] *** ravenou__ joined
[17:54] *** raveno___ joined
[17:56] *** pierrot left
[17:56] *** ravenous_ left
[17:56] *** raveno___ left
[17:58] *** ravenou__ left
[17:58] *** ravenous_ joined
[18:00] *** domidumont joined
[18:00] *** pierrot joined
[18:01] *** choiboi_ joined
[18:12] *** pierrot left
[18:13] *** mahafyi left
[18:13] *** mahafyi joined
[18:13] *** pierrot joined
[18:15] *** ravenous_ left
[18:16] *** kensanata left
[18:23] <jmerelo> squashable6: status

[18:23] <squashable6> jmerelo, The date for the next SQUASHathon is not set

[18:23] <jmerelo> squashable6: status

[18:23] <squashable6> jmerelo, The date for the next SQUASHathon is not set

[18:24] <jmerelo> squashable6: status

[18:24] <squashable6> jmerelo, The date for the next SQUASHathon is not set

[18:24] <jmerelo> squashable6: status

[18:24] <squashable6> jmerelo, The date for the next SQUASHathon is not set

[18:26] <jmerelo> squashable6: status

[18:26] <squashable6> jmerelo, The date for the next SQUASHathon is not set

[18:27] <jmerelo> squashable6: status

[18:27] <squashable6> jmerelo, The date for the next SQUASHathon is not set

[18:27] <jmerelo> .tell AlexDaniel I broke squashable again

[18:27] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[18:27] <AlexDaniel> .

[18:27] <yoleaux> 18:27Z <jmerelo> AlexDaniel: I broke squashable again

[18:28] <jmerelo> Hi, AlexDaniel 

[18:28] <jmerelo> AlexDaniel: it might be it's just slow to take up the new version. Date seems fine, and the same format as before...

[18:28] <AlexDaniel> no it fetches the page fresh every time

[18:29] <jmerelo> squashable6: status

[18:29] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 3 days and ‚âà17 hours (2019-03-02 UTC-14‚åÅUTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:29] <jmerelo> OK, it works now :-)

[18:29] <jmerelo> Apparently not every CDN had the new version.

[18:29] <AlexDaniel> ahhh that could be it

[18:35] <jmerelo> What do you think?

[18:35] <jmerelo> I just found this and I think it's a good single topic for a Hackathon

[18:36] <jmerelo> at least get it started. We just didn't realize that 6.d needed also a 6.d documentation release. I basically ignore what's the state of that right now. Most of the "deprecated" things are done, but I have no idea about the rest.

[18:36] <jmerelo> Many might have been done already, but we need to really check. I mean, in general documentation should be more in sync with the rest of the releases.

[18:37] <jmerelo> We should also start to do this from now on with the rest of the releases. It's been done so far a bit haphazardly, if at all.

[18:38] *** choiboi__ joined
[18:38] *** lucasb left
[18:40] <jmerelo> BTW, I'm starting to feel needles and pins re: Google Summer of Code in the next 36 hours.

[18:44] *** molaf left
[18:47] *** zacts joined
[18:49] *** molaf joined
[18:50] *** ravenous_ joined
[18:53] <AlexDaniel> jmerelo: maybe https://github.com/perl6/problem-solving/pull/2#issuecomment-467075602

[18:55] *** ayerhart left
[19:01] *** pmurias left
[19:06] *** pierrot left
[19:08] <jmerelo> AlexDaniel: do I edit the PR to add myself? Comment on the PR?

[19:08] <AlexDaniel> jmerelo: just write a comment

[19:08] <jmerelo> AlexDaniel: OK, done. Also added as a review comment.

[19:10] *** pierrot joined
[19:12] <jmerelo> Perl accepted as a Summer of Code organization!!!!!!

[19:12] <timotimo> \o/

[19:12] <tadzik> awesome!

[19:13] <AlexDaniel> omg awesome \o/

[19:13] <AlexDaniel> jmerelo: is there a link?

[19:13] <tadzik> yeah, I'm looking too

[19:13] <jmerelo> AlexDaniel: to be sure, I don't know if I should have made this public...

[19:13] <tadzik> https://summerofcode.withgoogle.com/organizations/ :(

[19:13] <AlexDaniel> :X

[19:13] <tadzik> ok shhh then :P

[19:13] <jmerelo> Anyway, the list will be published in a while...

[19:14] <AlexDaniel> well, we haven't heard anything

[19:14] <AlexDaniel> so no worries

[19:14] <jmerelo> It's going to be published at 20:00 UTC, that's like 24 hours from now.

[19:16] <jmerelo> Anyway, that's good news.

[19:16] <sena_kun> jmerelo++ # a really great work

[19:17] <jmerelo> We can still add ideas to the repo: https://github.com/perl-gsoc-2019/ideas Add as many as possible, so that they can attract students. There are quite a few, and most are perl6 related

[19:17] <jmerelo> sena_kun: thanks!

[19:17] <AlexDaniel> jmerelo: btw I'm hoping that it will be possible to pick issues from the problem-solving repo next year

[19:18] <jmerelo> AlexDaniel: you mean for the hackathon?

[19:18] <jmerelo> AlexDaniel: BTW, great work here. We do need a bit of governance in this world.

[19:18] <AlexDaniel> jmerelo: for gsoc

[19:18] <jmerelo> AlexDaniel: not this year?

[19:19] <AlexDaniel> jmerelo: hmmm‚Ä¶ unlikely, but we'll see how it goes

[19:19] <jmerelo> AlexDaniel: you know you have to apply every single year, and you might get it... or not.

[19:20] *** robertle joined
[19:20] <jmerelo> So don't leave for later what you can do now... Just add anything you might think of to the ideas repo.

[19:20] <AlexDaniel> jmerelo: but it is meant to be used for sizeable problems (so suitable for gsoc) and assignee ‚âà mentor, so some infrastructure will be there

[19:20] *** zacts left
[19:21] <AlexDaniel> jmerelo: also it's unclear because people are somewhat reluctant to comment on it, hmm‚Ä¶

[19:22] <jmerelo> AlexDaniel: we do need something like that. Do-ocracy does not work at scale.

[19:23] <AlexDaniel> ‚ö† Please leave feedback on https://github.com/perl6/problem-solving/pull/2 ‚ö†

[19:23] <AlexDaniel> you, you, you and you :)

[19:25] <AlexDaniel> jmerelo: as for modules, I was hoping that someone who already had their feet in that stuff will pick it up. Maybe ugexe or niner

[19:26] <jmerelo> AlexDaniel: I don't have my feet, but I literally have issues. A lot of them. 

[19:26] <AlexDaniel> jmerelo: not that you or somebody else can't take it

[19:28] <jmerelo> AlexDaniel: my point is that somebody _else_ should get into that. If there's no other volunteering, I could gladly take it. Jonathan Stowe would be also a great candidate.

[19:28] <AlexDaniel> mmm

[19:29] <AlexDaniel> there's also tony-o with 72 commits to zef

[19:31] *** cfa joined
[19:31] <cfa> üëãüèΩ

[19:31] <jmerelo> hi, cfa !

[19:31] <cfa> hey jmerelo!

[19:31] <cfa> so, i'm a bit baffled by this:

[19:32] <cfa> m: say ">>a<<"; say 'foo bar baz'.split: /\s+/;  # fine

[19:32] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´>>a<<‚ê§(foo bar baz)‚ê§¬ª

[19:32] <cfa> m: my $a = 'a'; say ">>$a<<"; say 'foo bar baz'.split: /\s+/;  # wat

[19:32] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized backslash sequence: '\s'‚ê§at <tmp>:1‚ê§------> 3ay ">>$a<<"; say 'foo bar baz'.split: /\7‚èè5s+/;  # wat‚ê§    expecting any of:‚ê§        double quotes‚ê§        postfix‚ê§        she‚Ä¶¬ª

[19:32] <cfa> at the very least, seems trappy

[19:33] <cfa> what am i missing though?

[19:34] <cfa> bisectable6_: my $a = 'a'; say ">>$a<<"; say 'foo bar baz'.split: /\s+/;

[19:34] <bisectable6_> cfa, Bisecting by output (old=2015.12 new=e68e38e) because on both starting points the exit code is 1

[19:34] <jmerelo> cfa: or buggy?

[19:34] <cfa> jmerelo: right

[19:35] <cfa> jmerelo: basically i have no idea :)

[19:35] <bisectable6_> cfa, bisect log: https://gist.github.com/782051eac3a1f41bd673c626babd6e8e

[19:35] <bisectable6_> cfa, (2017-08-31) https://github.com/rakudo/rakudo/commit/ed4f6cc998906ab0f868e19c19a7e66efd70a4b2

[19:35] *** kurahaupo left
[19:35] *** kurahaupo joined
[19:35] <AlexDaniel> c: 2017.06,HEAD my $a = 'a'; say ">>$a<<"; say 'foo bar baz'.split: /\s+/;

[19:35] <committable6> AlexDaniel, https://gist.github.com/0f94e50cc9e1d1a02f31399910ede51a

[19:35] <AlexDaniel> ?

[19:35] <cfa> old here has: Unable to parse expression in double quotes; couldn't find final '"' 

[19:36] <cfa> which is at least clearer

[19:36] *** lucasb joined
[19:37] <cfa> but i don't see why the literal vs. interpolated string should make a difference

[19:37] <AlexDaniel> cfa: it attempts to parse it as $a<foo> ?

[19:37] <AlexDaniel> m: my $a = foo => 42; say "$a<foo>"

[19:37] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´42‚ê§¬ª

[19:38] <AlexDaniel> m: my $a = foo => 42; say "$a<<foo>>"

[19:38] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´42‚ê§¬ª

[19:38] *** pmurias joined
[19:38] <AlexDaniel> so because you didn't close that, it kept going

[19:38] <cfa> aha!

[19:38] <cfa> thanks, i completely missed that

[19:39] <cfa> AlexDaniel++

[19:40] *** domidumont left
[19:40] <cfa> one for the traps page, perhaps?

[19:40] <cfa> perhaps this is just a thinko on my part though

[19:41] <cfa> i think we can agree that the error is lta though?

[19:42] <AlexDaniel> cfa: yeah it's lta

[19:42] <AlexDaniel> cfa: and there are even simpler cases when this happens

[19:42] <AlexDaniel> like

[19:42] <AlexDaniel> m: say ‚Äúhello world‚Äô; my $x = 42; say $x

[19:42] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$x' is not declared‚ê§at <tmp>:1‚ê§------> 3say ‚Äúhello world‚Äô; my 7‚èè5$x = 42; say $x‚ê§¬ª

[19:43] <AlexDaniel> it should definitely say that it was parsing a string at that moment

[19:43] <SmokeMachine> AlexDaniel: what‚Äôs the intention of the problem solving repo?

[19:43] <cfa> AlexDaniel: yeah

[19:44] <AlexDaniel> SmokeMachine: do I understand it correctly that I didn't make the intention clear enough here? https://github.com/perl6/problem-solving/blob/5deec04d78e25da1ddef7560500694eb71050d80/README.md

[19:45] <AlexDaniel> if so then that needs to be fixed, I guess‚Ä¶

[19:46] <SmokeMachine> AlexDaniel: sorry, it was empty when I was looking... thanks!

[19:47] <AlexDaniel> SmokeMachine: ah, right now it is empty, yeah, but once we agree on that PR that will change of course

[19:48] <guifa> I seem to be having some trouble using the %?RESOURCES compile-time variable but debugging it doesn‚Äôt seem to do much.  I have some say ‚Äúfoo‚Äù lines around where I access it but nothing prints to the terminal.  Any ideas on how to debug easily?

[19:51] <sena_kun> guifa, try "put"

[19:51] <sena_kun> instead of "say"

[19:52] * guifa bashes keyboard over head

[19:52] <guifa> I swear that stupid META6.json file is going to be the death of me

[19:52] * guifa forgot to include one of the files =\

[19:52] <guifa> like a pm6 file lol

[19:52] <sena_kun> guifa, ah, also, `note`

[19:53] <cfa> note doesn't use the gist?

[19:53] <sena_kun> it doesn't matter

[19:53] <sena_kun> there is a bug with precomp

[19:53] <sena_kun> https://github.com/rakudo/rakudo/issues/2592 <-

[19:55] *** mahafyi left
[19:55] <lgtaube> top

[19:56] <tbrowder> .tell lizmat josh merged my PR...back working on blog...

[19:56] <yoleaux> tbrowder: I'll pass your message to lizmat.

[19:57] <guifa> Okay, now that I fixed the meta file‚Ä¶ the install process seems to be placing the resources one directory higher up in the hierarchy.  I have the resources folder in the same directory as META6.json and t/ folder, but it seems to be assume that the resources folder is the parent directory of all that

[19:57] *** ravenous_ left
[19:58] <guifa> I think I‚Äôm getting some lag between changes and new compiled versions.  Because now it‚Äôs referencing resources/resources lol

[19:59] <guifa> err no not that either actually.  /me apologizing for thinking outloud

[20:03] *** netrino joined
[20:10] *** jmerelo left
[20:11] *** zacts joined
[20:13] <guifa> https://imgur.com/a/SzZFRF0 <‚Äî that‚Äôs the error I‚Äôm getting but not sure how to force the BCP47 directory into the %?RESOURCES path

[20:13] *** irced left
[20:14] *** mikfire left
[20:22] <sena_kun> guifa, I cannot see your code, but 1)why do you want to use %?RESOURCES in the first place?

[20:22] <guifa> sena_kun the offending reference in the code is just %?RESOURCES<languages.bcp47data>.slurp.lines

[20:23] <guifa> I mean, I guess I could put the data files inside of the same directory as the module, but I was trying to stay in line with the general module format of putting data files in the resources folder

[20:24] <sena_kun> to use it, you need to 1)have a 'resources' directory in your module's root; 2)mention all resource files in META, see e.g. https://github.com/croservices/cro/blob/master/META6.json#L36 3)then it can be used e.g. https://github.com/croservices/cro/blob/40f6e247ade351fe799369db472b0d246a7a645b/lib/Cro/Tools/Web.pm6#L45 <- like this

[20:25] <guifa> I had had the data in the code before, but am moving to just loading it on a BEGIN block

[20:25] *** melezhik left
[20:25] <sena_kun> hmm, I wonder if the path on your screenshot exists.

[20:26] <cfa> hmm, more surprises:

[20:26] <guifa> The Applications/resources?  nope ‚Äî¬†it shouldn‚Äôt though, that‚Äôs outside of my project directory

[20:27] <cfa> m: my %c = foo => 'bar'; say %c<foo>; say %c<<foo>>; say %c¬´foo¬ª;  # ok

[20:27] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´bar‚ê§bar‚ê§bar‚ê§¬ª

[20:27] <cfa> m: my %c = foo => 'bar'; say "%c<foo>"; say "%c<<foo>>"; say "%c¬´foo¬ª";  # o...h

[20:27] <camelia> rakudo-moar e68e38e04: OUTPUT: ¬´bar‚ê§bar‚ê§%c¬´foo¬ª‚ê§¬ª

[20:27] <sena_kun> guifa, well, what do you have in "resources" section of your META file?

[20:28] <guifa> ‚Äúresources‚Äù : [‚Äúlanguages.bcp47data‚Äù ‚Ä¶ ]

[20:29] <guifa> I tried manually adding ‚ÄúBCP47/resources/‚Äú in the file name, but that just had it try to access Applications/resources/BCP47/resources/languages.bcp47data

[20:29] <sena_kun> and you are referring to it as %?RESOURCES<languages.bcp47data>?

[20:29] <guifa> Yeah

[20:29] <sena_kun> odd

[20:29] <sena_kun> do you have last changes in the repo?

[20:30] <sena_kun> I'd play with it locally.

[20:30] <timotimo> does the rakudo module debug variable spit out anything regarding resources?

[20:31] <guifa> Just that it aborts due to a test failure in some Zeif::Client precompile code.  

[20:33] *** ravenous_ joined
[20:33] *** ravenous_ left
[20:36] <guifa> https://github.com/alabamenhu/BCP47/tree/resource-error

[20:37] *** robertle left
[20:44] <sena_kun> guifa, it actually works for me.

[20:45] <sena_kun> but the code that processes the file gives a warning, but that's another question.

[20:45] <sena_kun> I am on linux though.

[20:45] <guifa> Yeah not surprising about other warnings ‚Äî¬†I‚Äôm still very much in the middle of the refactoring

[20:46] <sena_kun> I guess.

[20:46] <guifa> Are you just using ‚Äòzef install ./ ‚Äîforce-install‚Äô in the BCP47 directory?

[20:46] *** pyrimidine left
[20:46] <sena_kun> I think the issue is with $4 usage when it is optional

[20:47] <sena_kun> I do.

[20:47] <sena_kun> or, rather, I am doing 'BCP47 git:(resource-error) ‚úó zef --dry install .`.

[20:47] <sena_kun> guifa, just installed fine for me.

[20:48] <sena_kun> using your branch and with `zef install ./ --force-install`

[20:49] <guifa> so weird

[20:50] <guifa> the $4 thing is because I updated the reading side of things without having updated the writing side :P 

[20:50] *** molaf_ joined
[20:50] <sena_kun> I guess.

[20:53] *** molaf left
[20:59] *** cfa left
[21:02] *** vrurg left
[21:02] *** vrurg joined
[21:11] *** sena_kun left
[21:21] *** telex left
[21:22] *** domidumont joined
[21:23] *** telex joined
[21:24] *** domidumont left
[21:28] *** zacts left
[21:41] <guifa> This is so weird.  If I throw do things in the INIT phaser, there‚Äôs no error.  But consistently the install gives me errors using BEGIN 

[21:43] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/02/25/2019-08-inline-scalaring/

[21:45] <guifa> lizmat: you‚Äôre on a Mac, right?

[21:45] <lizmat> guifa: yes

[21:48] <guifa> Could you see if you‚Äôre able to install https://github.com/alabamenhu/BCP47/tree/resource-error from a local directory or if it bombs on the resources?  Trying to narrow down the cause, since sena_kun had it install no problem, but he‚Äôs on Linux.

[21:57] *** skids left
[21:58] <lizmat> guifa: installs ok on MacOS afaics, but generates a lot of warnings:

[21:58] <lizmat> Use of Nil in string context, Intl::BCP47::Subtag-Registry) line 16

[21:58] <guifa> Yeah warnings were expected for that upload

[21:59] <guifa> Arg, so something is causing my particular system to not get the correct path in the BEGIN and CHECK phaser, but correctly set it on the INIT

[21:59] <guifa> I guess in the meantime I can just develop with INIT and then change it to BEGIN since it seems to work for everyone and their mother¬†‚Ä¶ except me hahaha

[22:00] <lizmat> better like that than the other way around...

[22:00] <lizmat> afk&

[22:10] *** Sgeo_ left
[22:10] *** stux|RC-- joined
[22:10] *** pierrot left
[22:10] *** pierrot joined
[22:10] *** stux|RC left
[22:10] *** vike1 joined
[22:10] *** Sgeo joined
[22:10] *** aindilis left
[22:10] *** vike left
[22:10] *** broquaint left
[22:10] *** broquaint joined
[22:11] *** aindilis` joined
[22:11] *** pyrimidine joined
[22:13] *** leont joined
[22:17] *** [Sno] joined
[22:18] *** [Sno] left
[22:20] *** zacts joined
[22:20] *** sno left
[22:21] *** [Sno] joined
[22:23] *** vrurg left
[22:23] *** aindilis` left
[22:24] *** aindilis joined
[22:40] *** vrurg joined
[22:45] *** dotdotdot left
[22:48] *** dotdotdot joined
[22:56] *** zacts left
[23:08] *** lucasb left
[23:23] *** pmurias left
[23:33] *** choiboi__ left
[23:33] *** choiboi_ left
[23:33] *** choiboi left
[23:35] *** mowcat joined
[23:36] *** choiboi joined
[23:43] *** aborazmeh joined
[23:43] *** aborazmeh left
[23:43] *** aborazmeh joined
[23:43] *** drclaw1394 joined
[23:50] *** aborazmeh left
[23:50] *** dct left
[23:51] *** aborazmeh joined
[23:51] *** aborazmeh left
[23:51] *** aborazmeh joined
[23:54] *** Grrrr left
[23:54] *** Grrrr joined
