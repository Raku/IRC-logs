[00:04] *** pecastro left
[00:04] *** cpan-p6 left
[00:04] *** cpan-p6 joined
[00:06] <Xliff> SmokeMachine: Looks good, here. I haven't given it complete diff lookover, though.

[00:06] <SmokeMachine> Xliff: thanks!

[00:09] <Xliff> SmokeMachine: For Red::AST:: descendants, what does the args method need to return?

[00:09] <SmokeMachine> a list of every "important" argument of that node

[00:10] <Xliff> So it can be empty?

[00:11] <Xliff> Should it return an empty list, or can it return Nil?

[00:11] *** leont joined
[00:13] *** cjkinni left
[00:14] *** adu left
[00:16] <Kaiepi> what would be a good name for a module that lets you make enums dynamically at runtime?

[00:17] <Kaiepi> Enum::Dynamic? Type::Enum::Dynamic?

[00:18] <SmokeMachine> Xliff: yes... empty list

[00:19] <SmokeMachine> Xliff: a DropTable would return the table name...

[00:30] *** cpan-p6 left
[00:30] <ugexe> A few weeks ago a --contained flag was added to zef that will install all dependencies (even installed ones) such that you can do `zef install . --deps-only --contained --install-to=local`. It is still beta as i've not wired up support for installing e.g. Test, NativeCall (which are just skipped).

[00:30] *** leont left
[00:30] *** MidCheck joined
[00:35] *** cpan-p6 joined
[00:48] *** cpan-p6 left
[00:49] *** cpan-p6 joined
[00:50] *** vrurg joined
[00:56] *** vrurg left
[01:03] <timotimo> gfldex: use the return value of the whenever statement

[01:05] *** vrurg joined
[01:06] *** cpan-p6 left
[01:13] *** cpan-p6 joined
[01:16] *** adu joined
[01:17] *** aborazmeh left
[01:18] *** reach_satori joined
[01:34] <SmokeMachine> tbrowder: just to let you know, now `.^load` also works with uniques...

[01:36] <tbrowder> ok, great!

[01:37] *** cpan-p6 left
[01:37] *** cpan-p6 joined
[01:46] *** adu left
[01:46] *** adu joined
[01:46] *** adu left
[01:47] *** adu joined
[01:47] *** adu left
[01:47] *** adu joined
[01:48] *** adu left
[01:48] *** adu joined
[01:48] *** adu left
[01:49] *** adu joined
[01:49] *** adu left
[01:55] *** cpan-p6 left
[02:03] *** leont joined
[02:24] *** cpan-p6 joined
[02:37] *** cpan-p6 left
[02:46] <lucs> How do I permanently interpolate the value of a variable into a regex? This for example fails the second match attempt, the regex having changed;

[02:46] <lucs> m: my $s = 'S'; my $rx = /$s/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:46] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:46] *** glguy joined
[02:49] <Xliff> m: my $s = 'S'; my $rx = /<$s>/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:49] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:49] *** cpan-p6 joined
[02:49] <Xliff> m: my $s = 'S'; my $rx = /"$s"/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:49] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:49] <lucs> I tried a bunch of those variations, unsuccessfully :(

[02:50] <timotimo> you'll have to build a closure that keeps the value around for you

[02:50] <lucs> I'm wondering it it'll take an eval...

[02:50] <timotimo> or use eval to put it in

[02:50] <lucs> Okidoke

[02:50] *** zacts joined
[02:50] *** ravenousmoose joined
[02:51] <Xliff> m: my ($s, $rx); { $s = 'S'; $rx = /"$s"/; }; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:51] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:51] <Xliff> m: my ($s, $rx); { my $s = 'S'; $rx = /"$s"/; }; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:51] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§ÔΩ¢SÔΩ£‚ê§¬ª

[02:51] <Xliff> ^^

[02:52] <lucs> That should do I think.

[02:52] <lucs> Thanks

[02:55] <Xliff> m: my $s = 'S'; my $rx = /<{$s}>/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:55] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:55] *** ravenousmoose left
[02:56] <Xliff> Note that the <> form SHOULD be an implicit EVAL, according to the docs.

[02:56] <Xliff> https://docs.perl6.org/syntax/%20Regex%20Interpolation

[02:56] <Xliff> m: my $s = 'S'; my $rx = /<{$s.Str}>/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:56] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:57] <Xliff> m: my $s = 'S'; my $rx = /$($s)>/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:57] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse regex; couldn't find final '/'‚ê§at <tmp>:1‚ê§------> 3my $s = 'S'; my $rx = /$($s)7‚èè5>/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ‚ê§    expecting any of:‚ê§        infix stopper‚ê§   ‚Ä¶¬ª

[02:57] <Xliff> m: my $s = 'S'; my $rx = /$($s)/; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[02:57] <camelia> rakudo-moar 4ffb4082b: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§Nil‚ê§¬ª

[02:58] <lucs> I made the exact same typo when I tried that one! :)

[02:58] *** pistacchio joined
[02:58] <Xliff> lucs: :)

[03:03] *** pistacchio left
[03:14] *** cpan-p6 left
[03:14] *** cpan-p6 joined
[03:22] *** netrino left
[03:28] *** cpan-p6 left
[03:29] *** cpan-p6 joined
[03:41] *** kurahaupo joined
[03:47] *** cpan-p6 left
[03:49] *** cpan-p6 joined
[03:49] *** Cabanossi left
[03:52] *** Cabanossi joined
[04:10] *** zacts left
[04:13] *** cpan-p6 left
[04:16] *** kurahaupo left
[04:18] *** Khisanth left
[04:22] *** leont left
[04:22] *** kurahaupo joined
[04:25] *** zacts joined
[04:25] *** cpan-p6 joined
[04:29] *** araraloren joined
[04:33] *** Khisanth joined
[04:36] *** drclaw joined
[04:38] *** cpan-p6 left
[04:39] *** cpan-p6 joined
[04:44] *** Cabanossi left
[04:47] *** Cabanossi joined
[04:54] *** random_yanek left
[04:56] *** random_yanek joined
[05:00] *** zacts left
[05:01] *** leont joined
[05:01] *** drclaw left
[05:04] *** cpan-p6 left
[05:05] *** cpan-p6 joined
[05:05] *** vrurg left
[05:10] *** MidCheck left
[05:19] *** cpan-p6 left
[05:19] *** zacts joined
[05:19] *** cpan-p6 joined
[05:34] *** leont left
[05:34] *** cpan-p6 left
[05:35] *** cpan-p6 joined
[05:39] *** reach_satori_ joined
[05:41] *** reach_satori left
[05:59] *** cpan-p6 left
[06:00] *** cpan-p6 joined
[06:25] *** |oLa| joined
[06:25] *** cpan-p6 left
[06:27] *** cpan-p6 joined
[06:41] *** cpan-p6 left
[06:41] *** cpan-p6 joined
[06:44] *** zacts left
[06:59] *** cpan-p6 left
[06:59] *** pistacchio joined
[07:04] *** cwilson left
[07:04] *** pistacchio left
[07:29] *** cpage joined
[07:45] *** MidCheck joined
[07:48] *** cpan-p6 joined
[07:48] *** sena_kun joined
[08:01] *** pistacchio joined
[08:07] *** zacts joined
[08:10] *** zacts left
[08:11] *** |oLa| left
[08:14] *** cpan-p6 left
[08:14] *** cpan-p6 joined
[08:16] *** zacts joined
[08:29] *** cpan-p6 left
[08:29] *** cpan-p6 joined
[08:38] *** rindolf joined
[08:42] *** |oLa| joined
[08:42] *** cpan-p6 left
[08:42] *** cpan-p6 joined
[08:43] *** ravenousmoose joined
[09:01] *** |oLa| left
[09:01] *** cpan-p6 left
[09:01] *** cpan-p6 joined
[09:04] *** pistacchio left
[09:06] *** domidumont joined
[09:12] *** lgtaube left
[09:13] *** cpup left
[09:19] <Geth> ¬¶ doc: 461382f554 | (JJ Merelo)++ | doc/Programs/03-environment-variables.pod6

[09:19] <Geth> ¬¶ doc: Revises env variables page

[09:19] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/461382f554

[09:19] <Geth> ¬¶ doc: 24d7ce0114 | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[09:19] <Geth> ¬¶ doc: Revision, grammar and reflow

[09:19] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/24d7ce0114

[09:19] *** cpan-p6 left
[09:20] *** cpan-p6 joined
[09:25] *** lgtaube joined
[09:30] *** andrzejku joined
[09:33] *** ravenousmoose left
[09:40] *** antoniogamiz joined
[09:41] <antoniogamiz> good morning :D

[09:42] <antoniogamiz> moritz: thanks for the answer yestarday, I'll take a look at Math::RungeKutta to see if it can derive

[09:43] <andrzejku> araraloren, hey :)

[09:45] <antoniogamiz> mmm it looks like it doesnt derive :(

[09:46] *** Brilpikk3wyn joined
[09:51] *** zacts left
[09:55] *** cpan-p6 left
[09:56] *** cpan-p6 joined
[09:58] <antoniogamiz> .tell moritz with Math::Model can I calculate derivatives?

[09:58] <yoleaux> antoniogamiz: I'll pass your message to moritz.

[10:00] *** zakharyas joined
[10:04] <araraloren> andrzejku hey

[10:07] *** agentzh left
[10:09] *** agentzh joined
[10:10] *** cpan-p6 left
[10:10] *** cpan-p6 joined
[10:20] *** antoniogamiz left
[10:24] *** cpan-p6 left
[10:24] *** cpan-p6 joined
[10:26] *** antoniogamiz joined
[10:27] <Geth> ¬¶ doc: 72dad49691 | (JJ Merelo)++ | 2 files

[10:27] <Geth> ¬¶ doc: Adds Collation closes #2644

[10:27] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/72dad49691

[10:31] *** lucasb joined
[10:31] <moritz> .tell antoniogamiz no, Math::Model requires you to calculate some values that are interpreted as derivatives, and Math::Model integrates those values for you

[10:31] <yoleaux> moritz: I'll pass your message to antoniogamiz.

[10:31] <yoleaux> 09:58Z <antoniogamiz> moritz: with Math::Model can I calculate derivatives?

[10:38] *** cpan-p6 left
[10:38] *** cpan-p6 joined
[10:45] <antoniogamiz> moritz: mmmm, then there is no way to calculate derivatives? :(

[10:45] <yoleaux> 10:31Z <moritz> antoniogamiz: no, Math::Model requires you to calculate some values that are interpreted as derivatives, and Math::Model integrates those values for you

[10:50] <moritz> antoniogamiz: if you have a function f, a derivative is just f($x + $delta) - f($x - $delta) / (2 * $delta)

[10:50] <moritz> antoniogamiz: don't need a module for that

[10:50] <moritz> (for small $delta, obviously)

[10:54] <antoniogamiz> moritz: ah okey, I knew that but I thought that it wasnt a good practica to do it like that

[10:54] <antoniogamiz> thanks for the help :)

[10:55] *** andrzejku left
[10:55] *** cpan-p6 left
[10:57] *** cpan-p6 joined
[11:11] *** ravenousmoose joined
[11:16] *** cpan-p6 left
[11:26] *** Brilpikk3wyn is now known as Pikk3wyn

[11:34] <moritz> antoniogamiz: if there's more sophistication involved, feel free to create a module for it :D

[11:36] *** andrzejku joined
[11:38] *** cpan-p6 joined
[11:40] *** zakharyas left
[11:40] *** domidumont left
[11:40] *** ravenousmoose left
[11:42] *** kurahaupo left
[11:42] *** kurahaupo joined
[11:43] *** ravenousmoose joined
[11:44] <cpan-p6> New module released to CPAN! List-UtilsBy (0.0.3) by 03ELIZABETH

[11:51] *** mowcat joined
[11:52] *** cpan-p6 left
[11:52] *** cpan-p6 joined
[11:58] <antoniogamiz> someone can explain me what does this code :&assemble = -> *% { Nil }?

[11:59] <antoniogamiz> multi sub visit($root, :&pre, :&post, :&assemble = -> *% { Nil }) {}

[11:59] <antoniogamiz> well the part that I dont understant is -> *% {Nil}

[11:59] <cpan-p6> New module released to CPAN! List-UtilsBy (0.0.4) by 03ELIZABETH

[11:59] <hahainternet> that's a 'pointy block' that returns Nil

[12:00] <hahainternet> i assume that the *% signature is so that it takes only named arguments, but i'm not sure why

[12:00] <hahainternet> would have to be seen in context i assume

[12:01] <antoniogamiz> that function is declared in Pod::To::HTML module

[12:01] <hahainternet> well presumably whenever else 'assemble' is called it's given named arguments, and so this is just a default that guarantees you can always call it

[12:04] *** kurahaupo left
[12:05] *** kurahaupo joined
[12:08] <antoniogamiz> ok, thanks for the help :)

[12:14] *** kurahaupo left
[12:14] *** kurahaupo joined
[12:15] *** cpan-p6 left
[12:16] *** cpan-p6 joined
[12:17] *** antoniogamiz left
[12:27] <Geth> ¬¶ doc/Match-Int-method: cd16648d0e | Altai-man++ | doc/Type/Match.pod6

[12:27] <Geth> ¬¶ doc/Match-Int-method: Document Int method on Match

[12:27] <Geth> ¬¶ doc/Match-Int-method: review: https://github.com/perl6/doc/commit/cd16648d0e

[12:29] <Geth> ¬¶ doc: Altai-man++ created pull request #2676: Document Int method on Match

[12:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2676

[12:29] *** cpan-p6 left
[12:29] *** cpan-p6 joined
[12:30] *** mowcat left
[12:31] *** mowcat joined
[12:32] *** mowcat left
[12:33] <sena_kun> m: (* ~ 'a').cando(\(1)).say;

[12:33] <camelia> rakudo-moar ffe840999: ( no output )

[12:33] <sena_kun> m: (* ~ 'a').cando(\('z')).say

[12:33] <camelia> rakudo-moar ffe840999: ( no output )

[12:34] <sena_kun> this doesn't match the docs too much.

[12:35] <sena_kun> by the docs, it should return a list of candidates, but in repl it prints `{ ... }` and here it prints nothing.

[12:38] *** kurahaupo left
[12:38] *** kurahaupo joined
[12:39] *** Black_Ribbon left
[12:40] <lucasb> m: my &c = (* + 2).say; c(3)

[12:40] <camelia> rakudo-moar ffe840999: OUTPUT: ¬´5‚ê§¬ª

[12:40] <lucasb> maybe you are WhateverCode'ing everything

[12:40] *** rindolf left
[12:41] <lucasb> m: my &c = (* ~ 'a'); &c.cando(\('z')).say

[12:41] <camelia> rakudo-moar ffe840999: OUTPUT: ¬´({ ... })‚ê§¬ª

[12:41] <sena_kun> hmm

[12:42] <sena_kun> also, we have in 6.d changelog:

[12:42] <sena_kun> aaaaah

[12:42] <sena_kun> never mind

[12:42] *** cpan-p6 left
[12:42] *** cpan-p6 joined
[12:45] <Geth> ¬¶ doc/clarify-gcd-zero: 5c0c06252d | Altai-man++ | doc/Language/operators.pod6

[12:45] <Geth> ¬¶ doc/clarify-gcd-zero: Clarify gcd with zero results

[12:45] <Geth> ¬¶ doc/clarify-gcd-zero: review: https://github.com/perl6/doc/commit/5c0c06252d

[12:46] <Geth> ¬¶ doc: Altai-man++ created pull request #2677: Clarify gcd with zero results

[12:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2677

[12:48] *** pecastro joined
[12:50] *** Black_Ribbon joined
[12:56] *** domidumont joined
[12:56] <Geth> ¬¶ doc/more-uniprops-explanations: 35ea65f74b | Altai-man++ | doc/Type/Cool.pod6

[12:56] <Geth> ¬¶ doc/more-uniprops-explanations: Extend uniprop(s) explanation

[12:56] <Geth> ¬¶ doc/more-uniprops-explanations: review: https://github.com/perl6/doc/commit/35ea65f74b

[12:57] <Geth> ¬¶ doc: Altai-man++ created pull request #2678: Extend uniprop(s) explanation

[12:57] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2678

[12:58] *** Pikk3wyn left
[13:00] *** cpan-p6 left
[13:01] *** cpan-p6 joined
[13:01] *** pistacchio joined
[13:02] *** Black_Ribbon left
[13:06] *** pistacchio left
[13:06] <Geth> ¬¶ doc: 8da40fb12e | Altai-man++ | 2 files

[13:06] <Geth> ¬¶ doc: Update comb return type from List to Seq

[13:06] <Geth> ¬¶ doc: 

[13:06] <Geth> ¬¶ doc: We had it in a different way from 2016.11 to 2018.02, but in 6.d it is

[13:06] <Geth> ¬¶ doc: determined to be this way and Rakudo supports it from 2019.03.

[13:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8da40fb12e

[13:07] *** rindolf joined
[13:15] *** cpan-p6 left
[13:15] *** cpan-p6 joined
[13:16] <Xliff> moritz: \o

[13:16] <cpan-p6> New module released to CPAN! List-SomeUtils (0.0.5) by 03ELIZABETH

[13:16] <cpan-p6> New module released to CPAN! List-MoreUtils (0.0.5) by 03ELIZABETH

[13:16] <Xliff> m: my ($s, $rx); { my $s = 'S'; $rx = /"$s"/; }; say 'S' ~~ $rx; $s = 'moo'; say 'S' ~~ $rx;

[13:16] <camelia> rakudo-moar ffe840999: OUTPUT: ¬´ÔΩ¢SÔΩ£‚ê§ÔΩ¢SÔΩ£‚ê§¬ª

[13:16] <Xliff> Is there a way to do that without the closure?

[13:18] <timotimo> m: say "ssssssSsssSsSssSss".comb("S")

[13:18] <camelia> rakudo-moar ffe840999: OUTPUT: ¬´(S S S S)‚ê§¬ª

[13:21] *** netrino joined
[13:23] <AlexDaniel> kawaii: fyi I'm going to cut 2019.03.1 real quick according to this discussion: https://github.com/rakudo/star/issues/124#issuecomment-473601759

[13:25] <AlexDaniel> kawaii: ah btw, regarding the changelog. There's this page where devs can quickly log their changes: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[13:26] <lizmat> weekly: Something about IR optimization - Bart Wiegmans

[13:26] <notable6> lizmat, Noted!

[13:26] <lizmat> weekly: https://brrt-to-the-future.blogspot.com/2019/03/something-about-ir-optimization.html

[13:26] <notable6> lizmat, Noted!

[13:27] *** cpan-p6 left
[13:27] *** cpan-p6 joined
[13:31] <cpan-p6> New module released to CPAN! List-AllUtils (0.0.4) by 03ELIZABETH

[13:31] <cpan-p6> New module released to CPAN! List-Util (0.0.7) by 03ELIZABETH

[13:41] *** andrew joined
[13:41] <andrew> eeeey

[13:43] *** sno left
[13:45] <andrew> whats up bois

[13:46] *** cpan-p6 left
[13:47] *** molaf joined
[13:48] <lizmat> wood?

[13:48] *** cpan-p6 joined
[13:48] <andrew> no

[13:48] <cpan-p6> New module released to CPAN! P5opendir (0.0.4) by 03ELIZABETH

[13:48] <andrew> camelia is up

[13:49] <andrew> i almost read that as cspan

[13:51] *** leont joined
[13:54] *** TreyHarris left
[13:58] *** antoniogamiz joined
[14:02] *** cpan-p6 left
[14:02] *** cpan-p6 joined
[14:02] <cpan-p6> New module released to CPAN! pack6 (0.2) by 03ALOREN

[14:05] *** pecastro left
[14:07] *** TreyHarris joined
[14:26] *** Sgeo joined
[14:29] *** Sgeo_ left
[14:30] *** antoniogamiz left
[14:32] *** Sgeo left
[14:33] <cpan-p6> New module released to CPAN! DirHandle (0.0.2) by 03ELIZABETH

[14:34] *** AlexDaniel left
[14:47] *** MilkmanDan left
[14:48] *** MilkmanDan joined
[14:49] *** andrew left
[14:49] *** glguy left
[14:50] *** cpan-p6 left
[14:53] *** AlexDaniel joined
[14:53] *** sno joined
[14:54] *** araraloren left
[14:54] *** araraloren joined
[14:54] *** cpan-p6 joined
[14:54] <cpan-p6> New module released to CPAN! P5caller (0.0.6) by 03ELIZABETH

[14:56] *** squashable6 left
[14:56] *** quotable6 left
[14:56] *** benchable6 left
[14:56] *** shareable6 left
[14:57] *** quotable6 joined
[14:57] *** squashable6 joined
[15:00] *** shareable6 joined
[15:00] *** ChanServ sets mode: +v shareable6

[15:00] *** benchable6 joined
[15:00] *** ChanServ sets mode: +v benchable6

[15:06] *** kensanata joined
[15:08] *** cpan-p6 left
[15:08] *** cpan-p6 joined
[15:10] *** lucasb left
[15:11] *** andrzejku left
[15:12] *** ravenousmoose left
[15:13] *** araraloren left
[15:17] *** Elronnd left
[15:23] *** kurahaupo left
[15:23] *** kurahaupo joined
[15:32] *** cpan-p6 left
[15:33] *** cpan-p6 joined
[15:40] *** ravenousmoose joined
[15:50] <cpan-p6> New module released to CPAN! P5getgrnam (0.0.6) by 03ELIZABETH

[15:55] *** molaf left
[15:57] *** cpan-p6 left
[15:58] *** cpan-p6 joined
[15:58] *** natrys joined
[15:59] <Geth> ¬¶ doc: 37d899c796 | cfa++ | 2 files

[15:59] <Geth> ¬¶ doc: Spelling.

[15:59] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/37d899c796

[16:04] <Xliff> What would be the best way to install a set of pre-build set of Perl6 modules?

[16:05] <sena_kun> a dummy module with list of requirements?

[16:05] <sena_kun> a script that does `zef install foo1 foo2 foo3`?

[16:09] *** netrino_ joined
[16:09] <Xliff> sena_kun: Well, GtkPlus takes about an hour to compile on a normal laptop.

[16:09] <Xliff> I want to be able to distribute binaries so end users don't have to go through all that.

[16:10] <sena_kun> ah, that's the different thing.

[16:10] <Xliff> So using zef, as it currently is, will NOT work.

[16:10] *** netrino left
[16:10] <Xliff> Well... it will... but folks will have to go through the pre-compile phase. And currently zef doesn't have a way to make that wait any less painful.

[16:10] <Xliff> Mainly, zef doesn't have periodic output to let end-users know that it is still working on the install.

[16:11] <Xliff> If there were a way for perl6 to say "Hey I'm precompiling this module", it wouldn't be so bad.

[16:13] <sena_kun> I think the reliable thing you can do is to create a zef issue.

[16:13] <Xliff> Oh, I plan to. I do think this is more a perl6 issue, though.

[16:13] <Xliff> Not zef.

[16:14] <sena_kun> it'll be more or less persistent for more experienced folk to think about the issue.

[16:14] <Xliff> It could be limited to zef, but I think perl6 still needs to support something under-the-hood for zef to use.

[16:14] <sena_kun> well, it is to raise the discussion. :)

[16:14] <Xliff> And trust me... issues tend to get ignored if not focused enough. I'd rather start the discussion here so I can find that focus and THEN raise the issue.

[16:15] <Xliff> I've had this happen too many times before. 

[16:15] <sena_kun> yes, that happens too, unfortunately.

[16:15] *** MidCheck left
[16:15] <sena_kun> and we likely can do nothing with compilation time

[16:15] <sena_kun> as I suspect

[16:16] <Xliff> No. Compilation times actually not bad.

[16:17] <timotimo> Xliff: you can just "say" inside a BEGIN block to show to the user that precomp is happening

[16:17] <Xliff> timotimo: Ooh! Thanks!

[16:17] <Xliff> sena_kun: GtkPlus is some 479 modules.

[16:18] <Xliff> Plus scripts and example files.

[16:18] <sena_kun> that's a lot.

[16:18] <Xliff> :)

[16:18] <leont> Is that GIR based or not?

[16:19] <Xliff> leont: It's NativeCall, so I guess that depends on the installed libs.

[16:19] <Xliff> But no, I just worked off of the header files. If there is something GIR specific that this might benefit from, can you post a link?

[16:19] *** cpan-p6 left
[16:20] *** cpan-p6 joined
[16:20] <Xliff> leont: .pm files were started from .h files

[16:20] <leont> https://gi.readthedocs.io/en/latest/

[16:21] <leont> GIR is basically an XML format describing the interfaces, so that the binding can be fully generated from that.

[16:21] <Xliff> Ah. No.

[16:21] <leont> Some really ought to write a MetaObject that fully understands GIR, and then magically lots of GObject based libraries (including GTK AFAIK) become instantly available.

[16:21] <Xliff> I wrote script to start the process. I had to then hand adjust everything.

[16:22] <Geth> ¬¶ doc/more-uniprops-explanations: 44b3ad917a | Altai-man++ | doc/Type/Cool.pod6

[16:22] <Geth> ¬¶ doc/more-uniprops-explanations: Fix grammar

[16:22] <Geth> ¬¶ doc/more-uniprops-explanations: review: https://github.com/perl6/doc/commit/44b3ad917a

[16:22] <Xliff> leont: Based on my experience from GTK, you can get 75% from something like that. It then needs to be hand-refined to be good Perl6 code.

[16:22] <Xliff> But really, the 75% is still usable.

[16:22] <leont> It's a high-cost high-reward kind of endeavour though.

[16:23] <Xliff> I know. I'm thinking about doing it. :D

[16:23] <Geth> ¬¶ doc/Match-Int-method: fdb9477727 | Altai-man++ | doc/Type/Match.pod6

[16:23] <Geth> ¬¶ doc/Match-Int-method: Make examples clearer, fix indentation

[16:23] <Geth> ¬¶ doc/Match-Int-method: 

[16:23] <Geth> ¬¶ doc/Match-Int-method: cfa++

[16:23] <Geth> ¬¶ doc/Match-Int-method: review: https://github.com/perl6/doc/commit/fdb9477727

[16:24] <Xliff> leont: GLib itself is GIR, correct?

[16:25] <leont> AFAIK GLib is the layer underneath GObject/GIR

[16:26] *** jmerelo joined
[16:26] <Xliff> Ah. Looks like there are files for GLib.

[16:26] <Xliff> gir1.2-glib-2.0:amd64

[16:26] <jmerelo> squashable6: status

[16:26] <yoleaux> 12 Mar 2019 13:50Z <lizmat> jmerelo: s/Stefaner/Lenz/

[16:26] <yoleaux> 13 Mar 2019 12:21Z <tbrowder> jmerelo: have you seen any student interest in gsoc for p6?

[16:26] <yoleaux> 14 Mar 2019 16:01Z <AlexDaniel> jmerelo: I like the idea a lot, and I can totally do something like this‚Ä¶ but maybe next year. I'm too busy working on my thesis

[16:26] <squashable6> jmerelo, Next SQUASHathon in 18 days and ‚âà19 hours (2019-04-06 UTC-14‚åÅUTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:28] <jmerelo> .tell tbrowder there are a couple here in Granada (antoniogamiz is one, you might have seen it around) and another one who contacted via email. Not a whole lot, unfortunately

[16:28] <yoleaux> jmerelo: I'll pass your message to tbrowder.

[16:28] <jmerelo> .tell lizmat so right

[16:28] <yoleaux> jmerelo: I'll pass your message to lizmat.

[16:28] <Geth> ¬¶ doc/clarify-gcd-zero: 454bcfdd50 | Altai-man++ | doc/Language/operators.pod6

[16:28] <Geth> ¬¶ doc/clarify-gcd-zero: Improve wording

[16:28] <Geth> ¬¶ doc/clarify-gcd-zero: 

[16:28] <Geth> ¬¶ doc/clarify-gcd-zero: cfa++

[16:28] <Geth> ¬¶ doc/clarify-gcd-zero: review: https://github.com/perl6/doc/commit/454bcfdd50

[16:30] *** netrino joined
[16:31] *** netrino_ left
[16:32] *** cpan-p6 left
[16:33] *** cpan-p6 joined
[16:33] <Xliff> leont: Hmm... I can see the .typelib files, but those don't do me a bit of good. I need a way to go back to the original .gir

[16:33] *** zacts joined
[16:35] <ugexe> Xliff: zef does not precompile anything. zef passes the distribution to CUR.install(), at which point a perl6 implementation may precompile so that they may be installed as well

[16:35] <Xliff> ugexe: That's what I thought.

[16:37] <Xliff> Ah, if only there were a way to inject a BEGIN block into every piece of code would run.

[16:39] <ugexe> im not sure injecting code is the best idea

[16:39] *** daxim left
[16:40] <ugexe> just make your install instructions: `RAKUDO_MODULE_DEBUG=1 zef install ...` :P

[16:44] *** daxim joined
[16:47] *** cpan-p6 left
[16:47] *** cpan-p6 joined
[16:52] <Xliff> Heh. Thanks, ugexe

[16:52] <ugexe> actually

[16:52] <ugexe> RAKUDO_LOG_PRECOMP=1

[16:52] <ugexe> which wont output all the stuff from zef itself getting loaded 

[16:53] <ugexe> https://github.com/rakudo/rakudo/blob/ffe840999c6a971656e61ea2e0d904e3a4434a2c/src/core/CompUnit/Repository/Installation.pm6#L280

[16:54] <Xliff> Oh. Even better. Thanks!

[16:56] <jmerelo> This is just a reminder that the Perls are going to participate this year in Google Summer of Code, and we need to spread the word to get good candidates https://perl-gsoc-2019.github.io/ideas/

[16:56] <jmerelo> If you got eligible friends, tell them. If you can make a presentation in a local user group or university, do it. If you're yourself eligible, check out the ideas and prepare a good project!

[17:01] *** kensanata left
[17:02] *** kensanata joined
[17:04] *** pistacchio joined
[17:08] *** pistacchio left
[17:10] *** cpan-p6 left
[17:11] *** cpan-p6 joined
[17:15] *** Sgeo joined
[17:21] <SmokeMachine> tbrowder: are you there?

[17:22] <SmokeMachine> m: multi MAIN(1, :$debug) {...}

[17:22] <camelia> rakudo-moar ffe840999: OUTPUT: ¬´Usage:‚ê§  <tmp> [--debug=<Any>] 1‚ê§¬ª

[17:22] <SmokeMachine> m: multi MAIN(1, Bool :$debug) {...}

[17:22] <camelia> rakudo-moar ffe840999: OUTPUT: ¬´Usage:‚ê§  <tmp> [--debug] 1‚ê§¬ª

[17:25] *** zacts left
[17:25] <SmokeMachine> tbrowder: üëÜ

[17:27] *** cpan-p6 left
[17:28] <jmerelo> SmokeMachine: what's the probley?

[17:28] <tbrowder> thnx, so some duplication there, but a bit less than my method for simple xtra args.

[17:28] <yoleaux> 16:28Z <jmerelo> tbrowder: there are a couple here in Granada (antoniogamiz is one, you might have seen it around) and another one who contacted via email. Not a whole lot, unfortunately

[17:28] *** kensanata left
[17:29] <tbrowder> ok, not surprising given so much hype about python and bad press about perl

[17:29] *** ravenousmoose left
[17:30] <jmerelo> tbrowder: I wouldn't blame anyone else... We really need to get the word out.

[17:31] <SmokeMachine> tbrowder: what duplication?

[17:31] <tbrowder> i know, marketing is tough, that‚Äôs the way to get rich: be a successful marketeer

[17:31] <SmokeMachine> jmerelo: no problem...

[17:31] *** grumble left
[17:32] <tbrowder> duplication in that the debug arg has to go in each multi main does it not?

[17:32] *** grumble joined
[17:34] <jmerelo> tbrowder: still, we need to gather a good amount of candidates. I'll do a presentation here at the university soonish, but we need to repeat that in some other places

[17:35] *** cpan-p6 joined
[17:36] <jmerelo> .tell moritz geth seems to be down.

[17:36] <yoleaux> jmerelo: I'll pass your message to moritz.

[17:36] <AlexDaniel> not really but let's restart it

[17:36] *** Geth left
[17:36] *** Geth joined
[17:36] *** ChanServ sets mode: +v Geth

[17:36] <jmerelo> AlexDaniel: it's not sending latest changes in perl6/doc, at least...

[17:37] <AlexDaniel> I no

[17:37] <Geth> ¬¶ doc: cd16648d0e | Altai-man++ | doc/Type/Match.pod6

[17:37] <Geth> ¬¶ doc: Document Int method on Match

[17:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cd16648d0e

[17:37] <Geth> ¬¶ doc: fdb9477727 | Altai-man++ | doc/Type/Match.pod6

[17:37] <Geth> ¬¶ doc: Make examples clearer, fix indentation

[17:37] <Geth> ¬¶ doc: 

[17:37] <Geth> ¬¶ doc: cfa++

[17:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fdb9477727

[17:37] <Geth> ¬¶ doc: 83bf350718 | cfa++ (committed using GitHub Web editor) | doc/Type/Match.pod6

[17:37] <Geth> ¬¶ doc: Merge pull request #2676 from perl6/Match-Int-method

[17:37] <Geth> ¬¶ doc: 

[17:37] <Geth> ¬¶ doc: Document Int method on Match

[17:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/83bf350718

[17:37] <Geth> ¬¶ doc: 5c0c06252d | Altai-man++ | doc/Language/operators.pod6

[17:37] <Geth> ¬¶ doc: Clarify gcd with zero results

[17:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5c0c06252d

[17:37] <Geth> ¬¶ doc: 454bcfdd50 | Altai-man++ | doc/Language/operators.pod6

[17:37] <tbrowder> i have sent emails to two colleges in the area and got response from one cs department head. he was not aware of gsoc (surprise to me) and assured me he would spread the word. i cleverly mention the potential for cs students  who investigated p6

[17:37] <Geth> ¬¶ doc: Improve wording

[17:38] *** andrzejku joined
[17:38] <Geth> ¬¶ doc: 

[17:38] <Geth> ¬¶ doc: cfa++

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/454bcfdd50

[17:38] <Geth> ¬¶ doc: 65dedeed07 | cfa++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[17:38] <Geth> ¬¶ doc: Merge pull request #2677 from perl6/clarify-gcd-zero

[17:38] <Geth> ¬¶ doc: 

[17:38] <Geth> ¬¶ doc: Clarify gcd with zero results

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/65dedeed07

[17:38] <Geth> ¬¶ doc: cd16648d0e | Altai-man++ | doc/Type/Match.pod6

[17:38] <Geth> ¬¶ doc: Document Int method on Match

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cd16648d0e

[17:38] <Geth> ¬¶ doc: fdb9477727 | Altai-man++ | doc/Type/Match.pod6

[17:38] <Geth> ¬¶ doc: Make examples clearer, fix indentation

[17:38] <Geth> ¬¶ doc: 

[17:38] <Geth> ¬¶ doc: cfa++

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fdb9477727

[17:38] <Geth> ¬¶ doc: 83bf350718 | cfa++ (committed using GitHub Web editor) | doc/Type/Match.pod6

[17:38] <jmerelo> tbrowder: great!

[17:38] <Geth> ¬¶ doc: Merge pull request #2676 from perl6/Match-Int-method

[17:38] <Geth> ¬¶ doc: 

[17:38] <Geth> ¬¶ doc: Document Int method on Match

[17:38] <jmerelo> AlexDaniel: what's happened?

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/83bf350718

[17:38] <Geth> ¬¶ doc: 5c0c06252d | Altai-man++ | doc/Language/operators.pod6

[17:38] <Geth> ¬¶ doc: Clarify gcd with zero results

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5c0c06252d

[17:38] <Geth> ¬¶ doc: 454bcfdd50 | Altai-man++ | doc/Language/operators.pod6

[17:38] <Geth> ¬¶ doc: Improve wording

[17:38] <Geth> ¬¶ doc: 

[17:38] <Geth> ¬¶ doc: cfa++

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/454bcfdd50

[17:38] <jmerelo> AlexDaniel: overload?

[17:38] <Geth> ¬¶ doc: 65dedeed07 | cfa++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[17:39] <Geth> ¬¶ doc: Merge pull request #2677 from perl6/clarify-gcd-zero

[17:39] <Geth> ¬¶ doc: 

[17:39] <Geth> ¬¶ doc: Clarify gcd with zero results

[17:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/65dedeed07

[17:39] <Geth> ¬¶ doc: 35ea65f74b | Altai-man++ | doc/Type/Cool.pod6

[17:39] <AlexDaniel> OK I think it is repeating the same thing over and over xD

[17:39] <Geth> ¬¶ doc: Extend uniprop(s) explanation

[17:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/35ea65f74b

[17:39] <Geth> ¬¶ doc: 44b3ad917a | Altai-man++ | doc/Type/Cool.pod6

[17:39] <Geth> ¬¶ doc: Fix grammar

[17:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/44b3ad917a

[17:39] <tbrowder> the stipend was a real draw, too

[17:39] <Geth> ¬¶ doc: e482247f61 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Type/Cool.pod6

[17:39] <Geth> ¬¶ doc: Merge pull request #2678 from perl6/more-uniprops-explanations

[17:39] <AlexDaniel> my bad, sorry for bot spam

[17:39] <Geth> ¬¶ doc: 

[17:39] <Geth> ¬¶ doc: Extend uniprop(s) explanation

[17:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e482247f61

[17:39] <AlexDaniel> actually, maybe not

[17:39] <AlexDaniel> jmerelo: well, you know, bots

[17:39] <AlexDaniel> jmerelo: they like to misbehave

[17:40] <AlexDaniel> by the way I just released 2019.03.1

[17:41] <AlexDaniel> so that's my 20th rakudo release ü•≥üéÇüéâ

[17:42] <tbrowder> can anyone recommend a good, modern book on db, especially one that uses latest sql syntax, plus examples in a current, real world open source rdbms (preferably postgresql and sqlite)?

[17:43] <El_Che> new release?

[17:44] <AlexDaniel> El_Che: yes but primarily for windows users

[17:44] <SmokeMachine> tbrowder: you can do something like:

[17:44] <SmokeMachine> tbrowder:  https://www.irccloud.com/pastebin/QBfp29MQ/

[17:44] <El_Che> is there a point in new Linux packages? Maybe to not confuse users?

[17:45] <ugexe> only for ones that are missing uname

[17:45] <El_Che> I must say I am not a fan (anymore?) of the rakudo release page

[17:45] <El_Che> it's confusing as hell, and I know of rakudo

[17:46] <AlexDaniel> El_Che: I was also looking at the version numbers today and I was like ‚Äúwhat?‚Äù

[17:46] <AlexDaniel> so 2019.03 is also ‚Äú#130‚Äù and why do we even have that

[17:47] <AlexDaniel> but point releases don't increment that, and that kinda makes sense but uhhhh‚Ä¶

[17:47] <El_Che> so only rakudo bump, no nqp bump

[17:47] <AlexDaniel> ye

[17:47] *** dylanwh left
[17:48] <tbrowder> SmokeMachine: with all due respect, that is much uglier code than mine imo, although maybe a bit shorter. but, it‚Äôs your module and i will reluctantly use it if you wish me to.

[17:49] <SmokeMachine> tbrowder: you can do way you want...

[17:50] <SmokeMachine> tbrowder: but im curious... why do you think its uglier?

[17:50] <tbrowder> to change the subject a bit, i am changing my models to use the serial id on Person...

[17:50] <El_Che> AlexDaniel: I'll release linux packages in order not to confuse users

[17:51] <AlexDaniel> cool

[17:52] <tbrowder> well, just my style i‚Äôve used for years clashes with ALLCAPS sub names, and my not being a touch typist and all. mainly stiff muscle memory and stubbornness :-))

[17:53] *** cpan-p6 left
[17:53] <tbrowder> but wanting to be a team

[17:56] <tbrowder> player i will do as you suggest‚Äîyour module i think already is a good example of heavy-duty p6 programming and good practices and i don‚Äôt want to detract from that.

[17:57] <SmokeMachine> tbrowder: MAIN is allcaps in this case to show its not a common sub... its a perl6 special sub...

[17:57] <SmokeMachine> tbrowder: :)

[18:00] <tbrowder> i know, i‚Äôve wrestled with it before, and even contributed an example to the docs, but it still doesn‚Äôt fit naturally to me. i really like the given/when construct for option handling.

[18:00] <tbrowder> easy to code and modify for personal scripts.

[18:05] *** MidCheck joined
[18:08] *** cpan-p6 joined
[18:10] <ugexe> since you can have multiple options you would have to use lots of `continue;` inside your `when { ... }` ala `given $foo { when any(1..10) { say "between one and ten" proceede; }; when any(5..10) { say "between give and ten" }; }`

[18:10] <ugexe> switch do not compose

[18:13] <ugexe> s/continue/proceede/

[18:13] *** MilkmanDan left
[18:15] *** MilkmanDan joined
[18:20] *** cpup joined
[18:21] <Xliff> ugexe: "proceede" or "proceed"?

[18:22] <tbrowder> yes, much messier for more complex arg handling, operative word is ‚Äúsimple‚Äù arg handling.

[18:29] *** uzl joined
[18:39] *** Black_Ribbon joined
[18:41] <ugexe> well, i wouldnt consider multiple options/flags as simple. thats a pretty basic feature imo

[18:41] <ugexe> i would consider^

[18:42] <ugexe> if your script has but one flag or one option, then sure. but thats about the only case i can think of.

[18:42] <ugexe> one you have two options that are not exclusive then the switch statement gets in the way

[18:43] <uzl> .tell jjmerelo So I read over the Perl 6 project ideas for GSoC and I figured I might not be up for any of the tasks. I was particularly interested in the projects related with the ecosystem and documentation.

[18:43] <yoleaux> uzl: I'll pass your message to jjmerelo.

[18:43] <uzl> .tell jjmerelo If any, what do you think might be a good roadmap to prepare for one of these projects? I'm currently taking my first C++ based data structures class in college and also looking for an internship.

[18:43] <yoleaux> uzl: I'll pass your message to jjmerelo.

[18:43] <jmerelo> uzl: I'm around here.

[18:43] <uzl> jmerelo: Oh... didn't notice ;-)

[18:44] <jmerelo> uzl: just check them out, and if you can think of anything above and beyond what's there, feel free, comment it, tell us about it here...

[18:44] <jmerelo> uzl: they're just ideas; students should submit their own project proposals based on them, or something completely new altogether.

[18:45] <jmerelo> uzl: I'm obviously very interested in anything related to documentation, and there's a lot to do there...

[18:46] *** kst left
[18:47] <uzl> I'm also interested in the documentation since it's the entry point for any proglang.

[18:47] <jmerelo> uzl: but that's not covered by GSoC. However, there's also a "season for documentation" for which we intend to apply later on...

[18:48] *** vrurg joined
[18:49] *** kurahaupo left
[18:49] *** kurahaupo joined
[18:50] <uzl> jmerelo: One of the projects is somewhat with the docs but it's about the tool revamping for the docs. BTW, wasn't someone working on that? Was is @finalyst? Not sure if they hangout on #perl6.

[18:51] <uzl> Do apply it for that one ;-).

[18:51] <sena_kun> uzl, it is about tooling. But, I think, if you can help it out with enough time&funds at hands, I think, this will be awesome.

[18:52] <sena_kun> uzl++

[18:52] <jmerelo> uzl: finanalyst will be one of the mentors for that project. 

[18:54] <uzl> jmerelo: Oh, I see. Got his handle wrong.

[18:54] *** cpan-p6 left
[18:55] <jmerelo> uzl: he's around here from time to time.

[18:55] *** cpan-p6 joined
[19:01] <uzl> jmerelo: I'll probably catch him around here. I see tbrowder and you are also possible mentors. Is a single mentor assigned to a candidate?  Or can there be more than one per project?

[19:12] *** uzl left
[19:13] *** dylanwh joined
[19:13] *** cpan-p6 left
[19:14] *** cpan-p6 joined
[19:15] *** kurahaupo left
[19:16] <moritz> back in the days, there used to be a primary mentor, and optionally a backup mentor

[19:16] <yoleaux> 17:36Z <jmerelo> moritz: geth seems to be down.

[19:17] *** kurahaupo joined
[19:17] <moritz> jmerelo: I know nothing about geth, except that it's hosted on hack. hack is up.

[19:26] <jmerelo> .tell uzl there are several mentors involved usually, just in case someone is busy for some stretch of time. Summer is long...

[19:26] <yoleaux> jmerelo: I'll pass your message to uzl.

[19:26] <jmerelo> moritz: thanks. Finally AlexDaniel fired it up again.

[19:26] <jmerelo> .tell uzl we'll definitely do that.

[19:26] <yoleaux> jmerelo: I'll pass your message to uzl.

[19:27] *** cpan-p6 left
[19:28] *** cpan-p6 joined
[19:29] <tbrowder> SmokeMachine: MAIN use incorporated, i admit it looks pretty good, and quite a bit shorter!

[19:46] *** cpan-p6 left
[19:47] *** cpan-p6 joined
[19:52] *** domidumont left
[20:02] *** cpan-p6 left
[20:02] *** cpan-p6 joined
[20:14] <cpan-p6> New module released to CPAN! P5getnetbyname (0.0.4) by 03ELIZABETH

[20:14] *** MidCheck left
[20:14] *** andrzejku left
[20:17] *** jmerelo left
[20:17] *** ravenousmoose joined
[20:27] *** kensanata joined
[20:27] *** cpan-p6 left
[20:28] <SmokeMachine> tbrowder: good to know! :)

[20:29] <tbrowder> i can do MAIN tweaks later

[20:31] *** cpan-p6 joined
[20:31] <cpan-p6> New module released to CPAN! P5getprotobyname (0.0.3) by 03ELIZABETH

[20:32] <SmokeMachine> tbrowder: now its possible to `.^create-table: :if-exist`

[20:34] <tbrowder> or should that be if-not-exists

[20:35] <masak> one thing I had never realized until yesterday: `is export` wants the declarator to be `our`, not `my` (because we're exporting package-level stuff). but subs are `my` implicitly, so in essence exporting a sub makes it package-scoped behind the scenes.

[20:35] <SmokeMachine> tbrowder: sure! I think Im a little crazy...

[20:36] <tbrowder> welcome to the club!

[20:39] <SmokeMachine> fixed

[20:43] <SmokeMachine> `.^create-table: :if-not-exist`

[20:45] *** SergiusUA joined
[20:47] <lizmat> m: sub a is export { }; dd OUR::.keys   # masak: exporting does *not* make subs "our"

[20:47] <yoleaux> 16:28Z <jmerelo> lizmat: so right

[20:47] <camelia> rakudo-moar 6d8077cec: OUTPUT: ¬´().Seq‚ê§¬ª

[20:48] <lizmat> m: our sub a is export { }; dd OUR::.keys

[20:48] <camelia> rakudo-moar 6d8077cec: OUTPUT: ¬´("\&a",).Seq‚ê§¬ª

[20:54] <tbrowder> SmokeMachine: the "if-not-exist" is not working for me. also, i think the  sql is "not exists" plural exists

[21:00] <cpan-p6> New module released to CPAN! P5getpwnam (0.0.5) by 03ELIZABETH

[21:04] *** zacts joined
[21:06] <SmokeMachine> tbrowder: not working? what's happening?

[21:07] <SmokeMachine> i wrote it wrong here...

[21:08] <SmokeMachine> tbrowder:  https://www.irccloud.com/pastebin/xTOVoAFl/

[21:09] *** zacts left
[21:09] *** cpan-p6 left
[21:10] *** cpan-p6 joined
[21:10] *** pistacchio joined
[21:15] *** pistacchio left
[21:20] <SmokeMachine> tbrowder: please, let me know when you think its ok to merge it...

[21:25] *** cpan-p6 left
[21:25] *** cpan-p6 joined
[21:31] <cpan-p6> New module released to CPAN! P5getservbyname (0.0.4) by 03ELIZABETH

[21:32] *** [Sno] joined
[21:34] *** sno left
[21:42] *** cpan-p6 left
[21:42] *** kensanata left
[21:42] *** cpan-p6 joined
[21:46] <tbrowder> SmokeMachine: i pulled from upstream master, then i modified load-db.p6 to remove the CATCH block and add :if-not-exist to the create-table calls. i removed the sqlite db and ran load-dp.p6 twice. the second time the code threw an error saying the table exists.

[21:46] <cpan-p6> New module released to CPAN! P5localtime (0.0.6) by 03ELIZABETH

[21:47] *** natrys left
[22:02] <cpan-p6> New module released to CPAN! Memoize (0.0.4) by 03ELIZABETH

[22:02] <cpan-p6> New module released to CPAN! P5times (0.0.6) by 03ELIZABETH

[22:03] *** molaf joined
[22:08] *** cpan-p6 left
[22:09] *** cpan-p6 joined
[22:09] *** ravenousmoose left
[22:16] *** sena_kun left
[22:23] *** ravenousmoose joined
[22:23] *** ravenousmoose left
[22:24] *** Sgeo_ joined
[22:26] *** Sgeo left
[22:26] *** cpan-p6 left
[22:27] *** cpan-p6 joined
[22:39] <tbrowder> SmokeMachine: may be a false alarm...let me test again...

[22:44] <tbrowder> SmokeMachine: your fix works fine! i forgot to change lib location to use the fork's copy of Red

[22:48] *** kurahaupo left
[22:48] *** kurahaupo joined
[22:49] <lizmat> weekly: https://perl6.eu/gibberish.html

[22:49] <notable6> lizmat, Noted!

[22:49] <lizmat> # Gibberish by Perl 6

[22:50] *** cpan-p6 left
[22:54] *** cpan-p6 joined
[22:54] <cpan-p6> New module released to CPAN! P5built-ins (0.0.22) by 03ELIZABETH

[23:01] *** epony left
[23:05] *** leont left
[23:08] *** cpan-p6 left
[23:08] *** cpan-p6 joined
[23:22] *** cpan-p6 left
[23:22] *** cpan-p6 joined
[23:36] *** cpan-p6 left
[23:36] *** cpan-p6 joined
[23:41] <tbrowder> lizmat: have you seen my new pics?

[23:45] *** SergiusUA left
[23:53] *** cpan-p6 left
[23:55] <tbrowder> .tell SmokeMachine i'm happy with my PR with load-db.p6 and am now working on the next stage: query-db.p6

[23:55] <yoleaux> tbrowder: I'll pass your message to SmokeMachine.

[23:55] *** cpan-p6 joined
