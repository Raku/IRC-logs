[00:10] *** shameen left
[00:11] *** Actualey` left
[00:32] *** MasterDuke joined
[00:33] *** MasterDuke left
[00:33] *** MasterDuke joined
[00:34] *** netrino left
[00:38] <Elronnd> what on earth does this error message mean? "Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque (Int)"

[00:39] <Elronnd> when calling this function sub make_vectors(num32 $w, num32 $h, num32 $dist, size_t $num-tris is rw) returns OpaquePointer is native("stronghold") { .

[00:39] <Elronnd> .. };

[00:39] <Elronnd> I also tried with Pointer instead of OpaquePointer

[00:41] <Xliff_> Means that one of your parameters is a Perl6 integer and not int32, uint32, int64 or uint64

[00:41] <Xliff_> Those MUST be converted before they can be used in an NC call.

[00:42] <Xliff_> So you should use "returns Pointer" instead of OpaquePointer becuse it's ...well... dying.

[00:42] <Xliff_> Elrond: ^^

[00:43] <Xliff_> Er... Elronnd ^^

[00:43] <Elronnd> yes

[00:43] <Elronnd> I have tried with returns Pointer

[00:43] <Elronnd> I call it like this my $verts = make_vectors(nativecast(num32, $w), nativecast(num32, $h), nativecast(num32, $dist), $num-verts);

[00:43] <Elronnd> where $num-verts was just declared with my size_t $num-verts

[00:43] <Xliff_> Oooh! No.

[00:43] <Elronnd> err

[00:43] <Elronnd> my uint32 $num-verts

[00:44] <Xliff_> Are $w, $h, $dist Pointers?

[00:44] <Elronnd> no

[00:44] <Elronnd> shouldn't be

[00:44] <Xliff_> Also, check $num-verts. Make sure its int32

[00:44] <Elronnd> uint32; is that ok?

[00:44] <Geth_> ¦ problem-solving: AlexDaniel assigned to jnthn Issue where blocks vs sub signatures https://github.com/perl6/problem-solving/issues/24

[00:44] <Elronnd> also tried to initialize it—my uint32 $num-verts = 0; same result

[00:45] <Xliff_> OK. Then THAT is fine.

[00:45] <Xliff_> So, I assume $w, $h and $dist are just normal perl6 containers?

[00:45] <Elronnd> yah

[00:45] <Elronnd> just ints

[00:45] <Xliff_> You will want to validate and place them into the proper native type.

[00:46] <Xliff_> I have code to do that. Feel free to crib, just give me a mention. :)

[00:46] <Xliff_> https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Raw/Utils.pm6

[00:46] <Xliff_> So before your call to make_vectors, you don't even need THAT for floating point.

[00:47] <Xliff_> Just add "my num32 ($ww, $hh, $dd) = ($w, $h, $dist);

[00:47] <Elronnd> hmmm

[00:47] <Elronnd> looks like it ends up at real-resolve-uint64, and that doesn't seem to be declared anywhere?

[00:47] <Xliff_> Then: "my $verts = make_vectors($ww, $hh, $dd, $num-verts);"

[00:48] <Elronnd> why doesn't it work as-is, though?

[00:48] <Elronnd> $w, $h, and $dist are already num32, though

[00:48] <Xliff_> real-resolve-uint64 is used elsewhere so had to be abstracted out. It's basically: "($ru +& 0xffffffffffffffff)"

[00:49] <Xliff_> If you are SURE they are num32 already, then drop the nativecast calls.

[00:49] <Elronnd> same error, though

[00:49] <Xliff_> "my $verts = make_vectors($w, $h, $dist, $num-verts);"

[00:49] <Elronnd> yes

[00:50] <Xliff_> Then either $w, $h, or $dist is not a num32

[00:50] <Xliff_> They may be Cool! But that's a P6Opaque.

[00:50] <Elronnd> "my num32 $w = 1280e0; my num32 $h = 720e0; my num32 $dist = 15e0;"

[00:50] <Xliff_> Hmm....

[00:51] <Xliff_> Got a full code listing?

[00:51] <Xliff_> m: my num32 $w = 1280e0; my num32 $h = 720e0; my num32 $dist = 15e0;

[00:51] <camelia> rakudo-moar 48a12551f: ( no output )

[00:51] <Xliff_> Yep! Nums.

[00:51] <Xliff_> Check $num-verts

[00:51] <Elronnd> http://ix.io/1Is7/perl6

[00:53] <Xliff_> Are sdl and rng part of SDL2?

[00:54] <Xliff_> Aaand... that's not compiling.

[00:54] <Elronnd> sdl yes, rng no

[00:54] <Elronnd> one sec, I can push the code and send you the whole thing

[00:54] <Xliff_> OK.

[00:55] <Elronnd> https://github.com/Elronnd/elvenstronghold

[00:55] <Elronnd> go into 'c' and run make, then go into the top-level and run the 'es' script

[00:56] <Elronnd> might need to override CC to not-clang if you don't have clang

[00:56] <Xliff_> Installing it now.

[00:56] <Xliff_> Does libstronghold need to be moved anywhere?

[00:59] <Elronnd> shouldn't

[00:59] <Xliff_> scripts/fetch-libs.sh: line 72: check-checksums: command not found

[01:00] *** adu joined
[01:00] <Elronnd> uhh

[01:00] <Elronnd> that's weird

[01:00] <Elronnd> really weird

[01:00] <Elronnd> I would just delete lines 72-76 of that script

[01:01] <Xliff_> What distro are you running?

[01:01] <Xliff_> That sounds like it comes from a package. Can't find it in Ubuntu

[01:01] <Elronnd> it doesn't come from a package, it's a function I wrote in that file

[01:02] <Elronnd> also it's called _before_ line 72, and apparently that wasn't an error

[01:02] <Xliff_> Fixed. You may want to check what you pushed. It came over here as "heck_checksums"

[01:02] <Xliff_> That COULD have been me, though. %)

[01:03] <Elronnd> ;}

[01:03] <Elronnd> yah upstream looks like it has the c https://github.com/Elronnd/ElvenStronghold/blob/master/scripts/fetch-libs.sh#L72

[01:03] <Xliff_> OK, then! Moving along.

[01:04] <Xliff_> This type cannot unbox to a native integer: P6opaque, Num

[01:04] <Elronnd> yes

[01:09] *** [particle] joined
[01:10] *** [particle]1 left
[01:15] <Xliff_> # From Xliff...

[01:15] <Xliff_> multi sub resolve-uint($ru) is export {

[01:15] <Xliff_>   $ru +& 0xffffffff;

[01:15] <Xliff_> }

[01:15] <Xliff_> multi resolve-uint(*@ru) is export {

[01:15] <Xliff_>   @ru.map({ samewith($_) });

[01:15] <Xliff_> }

[01:15] <Xliff_> Oops.

[01:15] <Xliff_> Cannot locate native library '/home/cbwood/Other Projects/elvenstronghold/p/libstronghold.so': /home/cbwood/Other Projects/elvenstronghold/p/libstronghold.so: undefined symbol: alloc

[01:17] <Xliff_>  17: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND alloc

[01:17] <Xliff_> ^^ Not in libstronghold.so

[01:18] <Elronnd> wat

[01:18] <Elronnd> that's weird

[01:19] <Elronnd> I _have_ been testing under windows, because linux doesn't work on my box, but I don't _think_ that would break

[01:19] *** lmy9900 joined
[01:19] <Elronnd> also, is there a resolve-num anywhere?  Or is that needed?

[01:20] <Xliff_> Not needed since you only need to assign via my.

[01:20] <Xliff_> my num32 = $p6num

[01:20] <Xliff_> my num32 $n32 = $p6num

[01:20] <Xliff_> Same with double and num64

[01:21] <Elronnd> hmmm

[01:21] <Elronnd> why _do_ you need that with ints then?

[01:21] <Xliff_> Because I want to isolate against overflow.

[01:21] <Xliff_> Perl and BigInts are a thing.

[01:21] <Elronnd> ahh

[01:23] <Elronnd> anyway if you do a git pull the alloc thing should be fixed

[01:23] *** lmy9900 left
[01:27] <Xliff_> Hrm.

[01:27] <Xliff_> clang barfed at me.

[01:27] <Elronnd> oops

[01:27] <Elronnd> fixed

[01:28] <Xliff_> Clang barfed at me again.

[01:28] <Xliff_> https://paste.fedoraproject.org/paste/OHK9SZD8VAVVNBQ740unzg

[01:29] <Elronnd> that doesn't load for me

[01:30] <Xliff_> What are you using?

[01:30] <Elronnd> nvm, got it

[01:30] <Xliff_> Yes... I forgot the 'r'

[01:31] <Elronnd> oh...hah

[01:32] *** xiaoyafeng left
[01:34] <Elronnd> anyway, that should be fixed

[01:43] *** [particle]1 joined
[01:45] *** [particle] left
[01:46] <Xliff_> Segfault, now.

[01:47] <Xliff_> blit_verts

[01:47] <Xliff_> I'll send you a diff and you can work it from there.

[01:47] <Xliff_> Elronnd: ^^

[01:50] <Xliff_> Elronnd: https://paste.fedoraproject.org/paste/ACwNReuvMP369HUp3KB0CQ

[01:53] *** [particle] joined
[01:54] *** [particle]1 left
[02:02] *** Manifest0 left
[02:06] *** [particle] left
[02:07] *** [particle] joined
[02:09] *** Manifest0 joined
[02:13] *** Manifest0 left
[02:18] *** shameen joined
[02:18] *** Manifest0 joined
[02:23] *** [particle]1 joined
[02:23] *** [particle] left
[02:34] *** Manifest0 left
[02:40] *** Manifest0 joined
[02:48] *** Manifest0 left
[02:53] *** Manifest0 joined
[02:57] <Elronnd> Xliff_: thank you so much!

[02:58] <Elronnd> one question, why Num() instead of Num?

[02:59] *** [particle]1 left
[02:59] <Xliff_> Num() is the equivalent of writing Num(Any), which attempts to coerce the parameter to Num before its use.

[03:00] <Elronnd> ahhh ok

[03:00] <Xliff_> So...

[03:00] <Xliff_> sub a ($a) { $a.Num; ... }

[03:00] <Xliff_> Acturally...

[03:00] <Xliff_> sub a ($a) { $a .= Num; ... }

[03:00] <Xliff_> Hope its working for you!

[03:01] <Elronnd> I was busy, so just applying the diff now

[03:01] <Elronnd> but hopefully it works!

[03:01] <Xliff_> It will segfault

[03:01] <Xliff_> So you will need to check your calls to blit_verts

[03:01] <Xliff_> Make sure you aren't sending something like NULL

[03:02] <Elronnd> actually it's not segfaulting for me

[03:02] <Xliff_> Lucky bastard! :)

[03:02] <Elronnd> (also not working properly, but I'll figure that out later)

[03:02] <Xliff_> OK. Good luck!

[03:02] <Elronnd> well I probably still did something wrong but the memory randomly happens to be fine

[03:05] <Xliff_> stronghold.c:1:1: error: ISO C requires a translation unit to contain at least one declaration [-Werror,-Wempty-translation-unit]

[03:05] <Xliff_> WTF?

[03:07] <Elronnd> wat

[03:07] <Xliff_> Yeah!

[03:08] <Elronnd> what version of clang are you using?

[03:09] <Xliff_> No. My stornghold.c is empty.

[03:09] <Xliff_> Fixed it.

[03:09] <Elronnd> is there a problem with your git?

[03:09] <Elronnd> it corrupted the lib-fetching script too

[03:09] <Xliff_> More like my local repo

[03:09] <Xliff_> No. *I* did that.

[03:10] <Elronnd> huh

[03:10] <Elronnd> that is really weird

[03:10] <Xliff_> Segfaults here:

[03:11] <Xliff_> #3  0x00007fffef3be3b7 in blit_verts (state=0x5555598ec890, num_tris=2380) at fbnice.c:51

[03:11] <Xliff_> 51              glDrawArrays(GL_TRIANGLES, 0, num_tris * 3); // 3 points per triangl

[03:11] <Elronnd> wait—you can debug code you call with nativecall?

[03:12] <Xliff_> Kinda.

[03:12] <Xliff_> I use perl-gdb-m to diagnose segfaults.

[03:12] <Elronnd> anyway I bet that's because I'm asking for more triangles to be drawn than are actually in the array

[03:12] <Xliff_> I had to recompile libstronghold.so with -g

[03:12] <Xliff_> Yeah... that would do it.

[03:17] <Elronnd> ahh, figured out the segfault (probably)

[03:18] <Elronnd> I was allocating an array of vecs, not triangles, so it was a third the size it needed to be

[03:21] <Xliff_> \o/

[03:22] *** Manifest0 left
[03:28] *** Manifest0 joined
[03:50] *** zacts joined
[04:01] *** Sgeo__ joined
[04:04] *** Sgeo_ left
[04:12] *** Manifest0 left
[04:19] *** Manifest0 joined
[04:20] *** sauvin joined
[04:29] *** [particle] joined
[04:34] *** Manifest0 left
[04:35] *** [particle]1 joined
[04:37] *** [particle] left
[04:39] *** [particle]1 left
[04:39] *** zacts left
[04:40] *** Manifest0 joined
[05:14] *** Manifest0 left
[05:16] *** Xliff_ left
[05:18] *** jmerelo joined
[05:22] *** Manifest0 joined
[05:25] <jmerelo> releasable6: status

[05:25] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 132 out of 292 commits logged (⚠ 2 warnings)

[05:25] <releasable6> jmerelo, Details: https://gist.github.com/d5f8f5a43486b841c02a58890e49b7ba

[05:28] *** daxim joined
[05:31] *** Manifest0 left
[05:38] *** Manifest0 joined
[05:43] *** Manifest0 left
[05:44] <Geth_> ¦ doc/master: 4 commits pushed by (JJ Merelo)++

[05:44] <Geth_> ¦ doc/master: 780b6cb697 | Reflow while #2114

[05:44] <Geth_> ¦ doc/master: 63a2c5d012 | Reflow while #2114

[05:44] <Geth_> ¦ doc/master: 9ee4c7f054 | Reflow while #2114

[05:44] <Geth_> ¦ doc/master: a3944255bd | Checks, reflows, closes #2114

[05:44] <Geth_> ¦ doc/master: review: https://github.com/perl6/doc/compare/99d907493747...a3944255bd9f

[05:48] *** Manifest0 joined
[05:48] *** kst` joined
[05:49] *** kst left
[05:51] *** [particle] joined
[05:59] *** atroxaper joined
[05:59] *** Manifest0 left
[05:59] <atroxaper> Hello, #perl6 !

[06:00] <atroxaper> jmerelo: do you know about problem with test-perl6 docker container already? https://travis-ci.org/atroxaper/p6-LogP6-Writer-Journald

[06:05] *** Manifest0 joined
[06:08] *** patrickb joined
[06:15] *** kurahaupo_ left
[06:17] *** kurahaupo joined
[06:17] *** domidumont joined
[06:17] *** xiaoyafeng joined
[06:28] *** Manifest0 left
[06:30] *** antoniog1miz joined
[06:30] *** ribasushi left
[06:33] *** ufobat__ left
[06:35] *** Manifest0 joined
[06:36] *** Fritz joined
[06:36] *** Fritz is now known as Guest26692

[06:36] *** [particle] left
[06:38] *** [particle]1 joined
[06:41] *** Guest26692 left
[06:44] *** ribasushi joined
[06:44] *** zaucker joined
[06:46] *** adu left
[06:46] <zaucker> whois lizmat

[06:47] *** fz joined
[06:48] *** [particle]1 left
[06:49] *** [particle] joined
[06:49] <antoniog1miz> it would be nice if a message appears each time someone ask a question about perl6 in stackoverflow

[06:50] *** fz left
[06:51] *** [particle]1 joined
[06:51] <jmerelo> atroxaper: yesterday I recompiled the whole set. Can you please check again and if it does not work, raise an issue?

[06:52] <jmerelo> antoniog1miz: I just keep consulting it over and over... But if you want to create an IRC bot for that, feel free :-)

[06:52] <atroxaper> jmerelo: checking...

[06:53] *** fz joined
[06:53] *** jmerelo left
[06:53] *** [particle] left
[06:54] <antoniog1miz> jmerelo: maybe I will 

[07:00] *** Manifest0 left
[07:00] *** [particle] joined
[07:01] <tyil> weekly: https://pleroma.tyil.nl/notice/9icryMpmOfUJOpsIAC

[07:01] <notable6> tyil, Noted!

[07:02] *** [particle]1 left
[07:03] *** atroxaper left
[07:04] *** Manifest0 joined
[07:14] *** kurahaupo left
[07:14] *** kurahaupo joined
[07:23] *** atroxaper joined
[07:24] *** Manifest0 left
[07:24] <fz> join #freenode

[07:26] *** atroxaper left
[07:29] *** Manifest0 joined
[07:29] *** dakkar joined
[07:34] *** kensanata joined
[07:37] *** yqt joined
[07:43] *** Manifest0 left
[07:44] *** aindilis left
[07:45] *** aindilis joined
[07:47] *** Manifest0 joined
[07:50] *** kurahaupo left
[07:50] *** kurahaupo_ joined
[07:50] *** kurahaupo_ left
[07:50] *** kurahaupo joined
[07:51] *** aindilis left
[07:54] *** aindilis joined
[07:56] *** kst` is now known as kst

[07:56] <antoniog1miz> duckmap is quite amazing 

[07:56] *** Manifest0 left
[08:00] *** ravenousmoose left
[08:02] *** Manifest0 joined
[08:02] *** domidumont left
[08:02] *** ravenousmoose joined
[08:05] *** domidumont joined
[08:15] *** Manifest0 left
[08:19] *** rindolf joined
[08:21] *** zakharyas joined
[08:23] *** Manifest0 joined
[08:25] *** gfldex left
[08:28] *** Manifest0 left
[08:32] *** Manifest0 joined
[08:40] *** abraxxa left
[08:41] *** abraxxa joined
[08:52] *** Manifest0 left
[08:54] *** DarthGandalf left
[08:55] *** DarthGandalf joined
[08:55] *** oohoo joined
[08:57] *** Manifest0 joined
[09:00] *** holyghost joined
[09:02] <holyghost> hello

[09:02] <holyghost> I might be in on a second Ph. D position this afternoon

[09:02] <holyghost> I have an appointment at 13h

[09:03] <holyghost> I will keep working for perl6 one day a week

[09:03] <holyghost> eventually

[09:03] <holyghost> I alreayd have a Ph.D in quantum thermodynamics and game theory

[09:05] <holyghost> s/alreayd/already

[09:06] <holyghost> the tpoic is random forest neural networks

[09:06] <holyghost> s/tpoic/topic

[09:06] <holyghost> I know ANNs since 1997

[09:08] <holyghost> We still have to decide on the research topic

[09:08] *** huf left
[09:08] <holyghost> It'd be medical intormation systems so I have my healer class upgraded :-)

[09:09] <holyghost> random forests in the sense of destroying cancers in one's brain with a beam

[09:09] <antoniog1miz> hi!

[09:09] <holyghost> hi

[09:11] <holyghost> s/abrain/body and brain

[09:13] *** ravenousmoose left
[09:14] *** reach_satori left
[09:14] <El_Che> holyghost: good luck! Is it a funded position?

[09:14] *** sena_kun joined
[09:15] <holyghost> no

[09:15] <holyghost> I havce money on my own for it

[09:16] <holyghost> basically it's about bio-statistics

[09:16] <holyghost> computational statistics, so I can program

[09:16] <holyghost> I downloaded several books on statistics and ANNs yesterday at my cafe

[09:17] <holyghost> thanks fo the 'good luck !' :-)

[09:17] <holyghost> I scimmed AFAIK on cafe

[09:18] <holyghost> s/fo/for

[09:18] <holyghost> I earn some money from brussels pm

[09:19] <holyghost> then I'm funded myself for the rest

[09:19] <holyghost> I want to program scheme/lisp and C++ for it

[09:19] <holyghost> maybe some perl6 but it depends on what my promotor wants

[09:19] <El_Che> ah nice

[09:20] <El_Che> which university?

[09:20] <holyghost> VUB

[09:20] <holyghost> campus Jette

[09:20] <El_Che> ah not far :)

[09:20] <holyghost> you know El_Che 

[09:20] <holyghost> I'm in BISI then

[09:20] <holyghost> medical CS

[09:21] <holyghost> I have to take the train to Jette

[09:21] <El_Che> interesting

[09:21] <holyghost> UZ Jette

[09:22] <holyghost> anyway I'm off within an hour

[09:22] *** antoniog1miz left
[09:22] <El_Che> a nice challange!

[09:22] <El_Che> talks their socks off

[09:22] <El_Che> -s

[09:22] <holyghost> indeed, I hope to elevate my healer class

[09:23] <holyghost> I wanted to do a BSD kernel for their beam machine

[09:23] <holyghost> with software

[09:24] <holyghost> software in the sense that they'd load scheme/lisp programs on it

[09:24] <holyghost> I'll talk their socks off :-)

[09:24] *** reach_satori joined
[09:26] <holyghost> I'll tell you everything when I get back

[09:27] <holyghost> I hope I can write some perl6/perl5 for data analysis of the beaming machine

[09:28] <holyghost> perl5 would be better for slurping files of data, or does perl6 cope ?

[09:29] *** ravenousmoose joined
[09:30] *** oohoo left
[09:30] <holyghost> Then I'll have to get the whole doctor's syndicate to supply on open source software :-)

[09:35] <Woodi> hi #perl6

[09:35] *** Manifest0 left
[09:36] <Woodi> holyghost: I think perl5 is already well established in genetics works however it was some time ago 

[09:36] <holyghost> hi Woodi 

[09:36] <Woodi> holyghost: GL :)

[09:36] <holyghost> I know

[09:37] <holyghost> Larry put out a book "beginning perl for bioinformatics" AFAIK

[09:37] <holyghost> thanks Woodi :-)

[09:37] <holyghost> It's perl5 anyhow

[09:38] <holyghost> It's perl5 anyhowI'm just somewhat ill on what they want with the perl5 development next to perl6

[09:39] <holyghost> I hope Larry, Randall and Christiaensen will still support it

[09:39] <holyghost> Tom I mean

[09:40] <holyghost> He once fielded me with a permutation class for anamgrams

[09:41] <holyghost> 3 lines of perl5 for an anagram system

[09:41] *** Manifest0 joined
[09:41] <holyghost> hi Manifest0 

[09:42] <woolfy> holyghost : That book was not by larry Wall, but by James Tisdall: http://shop.oreilly.com/product/9780596000806.do

[09:42] <holyghost> I'm talking about programming perl 2nd O'Reilly

[09:42] <Woodi> holyghost: if research needed it then use C++ - first: be professional with humans brains :)

[09:42] <holyghost> Woodi : ok

[09:43] <holyghost> I want to develop something which helps out with medical patients

[09:43] <woolfy> By the same author: "Mastering Perl for Bioinformatics": http://shop.oreilly.com/product/9780596003074.do

[09:43] <holyghost> right, I've read it, went through it

[09:44] <holyghost> It depends on several informatics of GAs

[09:44] <woolfy> And by now, "Programming Perl" is in its 4th edition: http://shop.oreilly.com/product/9780596004927.do

[09:44] <holyghost> I have that one also

[09:44] <holyghost> I got it for Christmass 2 years ago

[09:45] <woolfy> And I think Larry Wall only marginally contributed to that one, most of the work was done (I would not mind being corrected there) by Tom Christiansen and Jon Orwant.

[09:45] <holyghost> It's somewhat basics in GA (genetic algorithms) theory

[09:46] <holyghost> I hope they'll get a second edition for it

[09:46] <holyghost> IT's per lfrom the 90ies

[09:46] <woolfy> holyghost : I thought I would correct you there.  larry Wall is not involved in bioinformatics.  And anybody promoting the second edition of "Programming Perl" needs to be told that that is quite an old edition, and the 4th edition is much more modern (even though it's a bit outdated now as well).

[09:47] <holyghost> sure

[09:47] <woolfy> And I am still hoping for a soon-ish release of "Programming Perl 6" by Larry Wall.

[09:47] <holyghost> indeed

[09:47] <El_Che> holyghost: I don't think that promoting Perl 5 for a research position will help you perception-wise, sadly

[09:47] <holyghost> That's also what I'd b egrateful to

[09:48] <holyghost> El_Che : What do you mean ?

[09:48] <El_Che> That academia moved on from Perl 5 long ago

[09:48] <holyghost> right I understand

[09:49] <El_Che> it's a good skill to have, certainly

[09:49] <holyghost> I just thought ANNs should be developed in scheme/lisp

[09:49] <El_Che> but not a skill that sells well

[09:49] <holyghost> right

[09:49] <woolfy> holyghost : if you need a more modern book about bioinformatics, you might want to check out this: http://bixsolutions.net/

[09:50] <El_Che> being a polyglot looks good on the resumé, though

[09:50] <holyghost> woolfy : ok

[09:50] *** netrino joined
[09:50] <holyghost> I once wrote amigablast, a bLAST algorithm

[09:51] <woolfy> This also seems quite modern: https://www.amazon.com/Bioinformatics-Data-Skills-Reproducible-Research/dp/1449367372/

[09:51] <holyghost> I'll take a look later on

[09:52] <holyghost> woolfy : it'd be theorethical progress on ANNs for random forests

[09:52] <holyghost> my prof works out the math, I do the programminf

[09:52] <holyghost> s/programminf/programming

[09:52] <holyghost> random forests are fractals, random fractals

[09:52] <El_Che> (train arrived, bbl)

[09:53] <holyghost> El_Che : ok

[09:53] <woolfy> holyghost : that sounds nice.  Also, just don't take the books on themselves, also search for the errata pages, and online comments.  Books can get outdated, and authors (and publishers) can make mistakes.  The different bioinformatics books seem to be no different.

[09:55] <holyghost> woolfy : ok

[09:57] <holyghost> woolfy : there's so many books to download I can read, but I need to read them

[09:57] *** agentzh left
[09:58] <holyghost> random forest ANNs would be about ANNs to start with AFAIK

[09:58] <holyghost> I need to cope with the bioinformatics though

[09:59] <holyghost> My master thesis was bout embryological GAs

[09:59] <holyghost> evolutionary and so on

[10:00] <holyghost> anyway, I'm nervous for my appointment, I'm not that good in explainging stuff

[10:00] *** noisegul joined
[10:01] <holyghost> hi noisegul 

[10:04] *** agentzh joined
[10:05] *** cpan-p6 left
[10:05] *** cpan-p6 joined
[10:05] *** cpan-p6 left
[10:05] *** cpan-p6 joined
[10:07] <holyghost> Woodi : I've looked up your 2 books, I'll download them later on

[10:08] <holyghost> I have an M$ surface as a pad, I'll download later on

[10:08] <holyghost> I just keep it for games as a UNIX wizard

[10:12] *** chansen_ left
[10:12] *** chansen_ joined
[10:12] <holyghost> mastering perl for bioinformatics, I might as well write a book for perl6 on that ;-)

[10:12] *** timeless left
[10:13] *** yoleaux left
[10:13] *** yoleaux joined
[10:13] *** ChanServ sets mode: +v yoleaux

[10:14] *** timeless joined
[10:19] *** atroxaper joined
[10:23] <holyghost> I'm off, wish me luck

[10:24] *** holyghost is now known as holyghost[AFK]

[10:26] *** domidumont left
[10:40] *** avalenn left
[10:41] *** avalenn joined
[10:42] *** patrickb left
[10:45] *** kurahaupo left
[10:48] *** kurahaupo joined
[11:04] *** Manifest0 left
[11:10] *** Manifest0 joined
[11:18] *** Manifest0 left
[11:23] *** Manifest0 joined
[11:23] *** atroxaper left
[11:31] *** rindolf left
[11:32] *** Manifest0 left
[11:36] *** zakharyas left
[11:38] *** Manifest0 joined
[11:43] *** Manifest0 left
[11:44] *** rindolf joined
[11:47] *** woolfy left
[11:50] *** MidCheck joined
[12:00] *** holyghost[AFK] is now known as holyghost

[12:01] <holyghost> For my second Ph. D, my promtor said he needs to contact the head of the exams commission

[12:01] <holyghost> s/promtor/promotor

[12:01] <holyghost> So I guess, really, that it's a no

[12:02] <holyghost> Apparently, you cannot do a second Ph.D in Belgium

[12:02] <holyghost> except he said, maybe at the medical sciences faculty

[12:02] <holyghost> in plcae of the exact sciences

[12:03] <holyghost> s/plcae/place

[12:04] <holyghost> I don't know really, but I think he didn't like me good enough for it :-)

[12:04] <holyghost> he;ll send me mail tommorrow or next week

[12:11] <MidCheck> hello, how do I return images or files? I recently built my first website using Perl6. And I chose the Bailadador, but I don't know how to use it to return images or files. I tried some methods but can't work. what shoud I do?

[12:12] *** xiaoyafeng left
[12:13] <sena_kun> MidCheck, you probably want to serve static files, see https://github.com/Bailador/perl6-Bailador-Plugin-Static maybe?

[12:13] *** mowcat joined
[12:13] <sena_kun> ah, it says Bailador now includes Bailador::Route::StaticFile in core

[12:14] *** domidumont joined
[12:15] <sena_kun> MidCheck, see https://github.com/Bailador/Bailador/tree/master/doc#static-dirpair-x

[12:16] <tyil> is there a way to get the name of the module inside of that module? ie, module Foo { sub Bar is export () { say "how can I get the name of the module, Foo, from in here?" } }

[12:17] <MidCheck> okay, i will try it now, thank you

[12:17] <sena_kun> tyil, $?MODULE?

[12:18] <lizmat> m: module Foo { dd $?MODULE.^name }

[12:18] <camelia> rakudo-moar 3cde10a7d: OUTPUT: «"Foo"␤»

[12:18] <sena_kun> m: module Foo { sub Bar is export { say $?MODULE } }

[12:18] <camelia> rakudo-moar 3cde10a7d: ( no output )

[12:18] <sena_kun> m: module Foo { sub Bar is export { say $?MODULE } }; Foo::Bar;

[12:18] <camelia> rakudo-moar 3cde10a7d: OUTPUT: «Could not find symbol '&Bar'␤  in block <unit> at <tmp> line 1␤␤»

[12:18] <sena_kun> ugh, you get the idea

[12:19] <tyil> sena_kun: yes, that seems to work

[12:19] <tyil> thanks!

[12:19] <sena_kun> lizmat++ for being faster. :)

[12:19] <sena_kun> and more correct~

[12:20] <tyil> more correct is always nice tbh

[12:23] <masak> even nicer than faster in some ways :P

[12:24] <tyil> when it comes to write code that I intend to keep around, I generally prefer clean and correct code over speed

[12:24] *** Guestss1 joined
[12:26] *** Guestss1 left
[12:30] *** antoniogamiz joined
[12:32] *** klapperl left
[12:40] *** rindolf left
[12:42] *** rindolf joined
[12:44] <discord6> <Vendethiel> But how will you feel superior to others if they can understand the code you wrote?

[12:44] <timotimo> by posting hatefully on hacker news, of course

[12:45] <discord6> <Vendethiel> .oO( as opposed to posting how on hacker news? )

[12:48] <hahainternet> as an aside, god HN is just so bad

[12:48] <hahainternet> usually all the top comments on any contentious thread are just propaganda now

[12:49] <timotimo> if your forum becomes big and you don't strictly moderate, i guess it'll become a "target"

[12:49] <hahainternet> the latter point is key

[12:50] <hahainternet> you have to actively curate your groups, removing the worst elements

[12:50] <hahainternet> i think a big part of why perl 6 is usually ignored is that tech is now consumed by memes

[12:51] <timotimo> aye, taking the Geek Social Fallacies, especially the one - you know which one, as a starting point is probably a good idea

[12:51] <hahainternet> i browse /r/programming threads and it's just post after post that's total nonsense but sounds vaguely plausible

[12:51] <hahainternet> having said that, /r/programminglanguages (i think) where raiph hangs around is pretty solid and raiph does an excellent job

[12:51] <timotimo> i enjoy consuming memes and shitposts, though it's probably quite important that it's usually very well separated

[12:52] <timotimo> from other stuff i mean

[12:52] <hahainternet> it's not the memes being posted, but being thought that are the problem

[12:52] <hahainternet> all of us cargo cult to some degree

[12:52] <hahainternet> but imo it's getting really bad of late

[12:52] <timotimo> oh, ok

[12:52] <hahainternet> so, try finding a systemd thread that isn't consumed with hate

[12:53] <timotimo> i hear you

[12:53] <hahainternet> or the furore over article 11/13, where for months an MEP was posting literal fake news

[12:53] <hahainternet> but it was spread around the tech community like a virus, uncritically repeating "LINK TAX LINK TAX!"

[12:53] <hahainternet> it's part of why i enjoy the philosophy of perl 6

[12:54] <hahainternet> there's very little effort to keep a belief in things that aren't true, and a lot more focus on finding out what is actually true

[12:55] <hahainternet> the current second top thread in /r/programming is about google introducing <portal> vs <iframe>, the only accurate post is literally the bottom post in the thread, at 0 points

[12:55] <hahainternet> every single other post is accusing google of trying to take over the web and trying to cripple firefox

[12:56] <hahainternet> out of 42 posts, 3 have accurate information

[12:56] <timotimo> oh, i haven't heard of portal yet

[12:56] <hahainternet> anyway that's the problem that faces our industry

[12:56] <hahainternet> everyone is so convinced they're right because they have a bunch of memes they can repeat to themselves

[12:56] *** abraxxa left
[12:57] <hahainternet> anyway it's basically just a remix on iframes timotimo that work as a 'next page' element too

[12:57] <timotimo> oh, interesting. so you can basically transition from your current page to what you had in the portal?

[12:57] <hahainternet> google are big on trying to ensure you can pre-load (via http push ideally) every asset for the page you're navigating to, and the next page after that

[12:57] *** kurahaupo left
[12:57] <hahainternet> yeah exactly

[12:57] <timotimo> yeah, that's a good user experience target, isn't it?

[12:57] <hahainternet> it is, and most of what they've been working on recently goes towards it

[12:58] <hahainternet> QUIC was very specifically for this sort of thing, and AMP includes many parts of it too

[12:58] <timotimo> AMP hasn't impressed me very much, tbh

[12:58] <hahainternet> i don't know how much it needs to impress

[12:58] <hahainternet> it's quite functional

[12:58] *** MilkmanDan left
[12:58] <timotimo> suddenly everything you read comes from a .google.com domain no matter who made it :P

[12:59] <hahainternet> timotimo: they have sorted that but it needed a browser extension

[12:59] *** MilkmanDan joined
[12:59] <hahainternet> you can now sign your amp content and chrome will display it under your domain

[12:59] <timotimo> oh? odd.

[12:59] <hahainternet> https://amp.dev/documentation/guides-and-tutorials/optimize-and-measure/signed-exchange

[13:00] <hahainternet> (also fwiw bing and cloudflare have amp inbound proxies too, not just google, but fair comment)

[13:00] *** kurahaupo joined
[13:00] <timotimo> OK

[13:00] <timotimo> when is amperl6.org

[13:00] *** kurahaupo left
[13:01] *** zakharyas joined
[13:01] <hahainternet> rent the bandwidth and soemeone will write it :D

[13:01] <timotimo> i can absolutely not afford this :)

[13:01] *** kurahaupo joined
[13:01] <hahainternet> that's what makes me laugh about people who hate on amp using a caching CDN

[13:02] <hahainternet> i argued with someone who told me it was deceptive to display the domain instead of amp.google.com or whatever, but never answered me if i asked if it's deceptive that www.reddit.com is on fastly's webservers

[13:02] <hahainternet> or the hundreds of thousands of sites on cloudflare

[13:02] <hahainternet> anyway morning rant from me

[13:02] <hahainternet> tired of communities that care about clicks and drama vs what is actually real

[13:02] <timotimo> morning coffee? nah, screw that. morning rant!

[13:02] <hahainternet> i have a tea here too :)

[13:02] <timotimo> that's the tea, my friend

[13:03] <hahainternet> i just despair at the state of our industry

[13:03] <timotimo> it has people in it, that's the problem ;) ;)

[13:03] <hahainternet> too pithy :)

[13:03] <timotimo> puny mortals

[13:03] <hahainternet> i think we should aspire to be like structural engineers

[13:04] <hahainternet> our news sites should be peer reviewed before publication

[13:04] <hahainternet> retractions should be extremely important and listed front and centre

[13:04] <hahainternet> this is all a bit naive really because it assumes people are capable of admitting when they're wrong, which few of us can reliably

[13:05] <timotimo> i'm certainly not good at that

[13:05] <timotimo> i can imagine why others would also not be good at that

[13:05] <hahainternet> it's why anonymous peer review is effective

[13:05] <hahainternet> cause you don't have to admit you're wrong, you get told "you're wrong, no publish"

[13:05] <hahainternet> and you can't go attacking the reviewer, cause you have no idea who they are

[13:06] <timotimo> i imagine something like that would easily be drowned in trolling

[13:07] <hahainternet> i think it depends on the audience

[13:07] <hahainternet> if you're looking to peer review reddit type links & maybe a sentence of commentary, yeah probably

[13:08] <hahainternet> but if you insisted that you must only post links with two paragraphs minimum of explanation and perspective

[13:08] <hahainternet> that would be more reasonable imho

[13:08] <hahainternet> a friend of mine tried to make a site like this years ago, but the problem is that ultimately you need an arbiter of truth

[13:08] <hahainternet> some group to say what is or isn't true, cause i can't prove the earth is round with 0s and 1s

[13:09] <timotimo> yeah, even for things that are "obviously true" or "obviously false" you can easily be wrong anyway

[13:09] <hahainternet> yes, are you aware most (if not all) nosql systems violate the laws of physics?

[13:09] <hahainternet> sounds obviously false right? but i assert that is true

[13:10] <hahainternet> it doesn't 'break the laws' in the sense of doing something unphysical, but builds its rules on an errant understanding of those laws

[13:10] <timotimo> interesting. and clearly a clickbaity way to express that idea :)

[13:11] <hahainternet> yep, but bombastic statements tend to be judged 'clearly true' or false much more readily

[13:11] <hahainternet> anyway this is all going nowhere

[13:11] <hahainternet> but i have decided to try and build something useful over the next month or two

[13:11] <timotimo> agreed on that

[13:12] <hahainternet> and for a year or so now i've been wondering what DSL could be used to describe computers so that we can understand truth more easily

[13:12] <timotimo> i don't know what that is supposed to mean :)

[13:13] <hahainternet> it's hard to even describe, i've been working on that part for months

[13:13] <hahainternet> tl;dr: If you write some code, how do you know you're not asking it to do something impossible?

[13:13] <hahainternet> if you write to an area of memory from multiple threads, how do you know you need to synchronise access to it?

[13:14] <timotimo> ah, so a little bit like agda/coq and friends?

[13:14] <hahainternet> on one end we have rules taught to us and explained rationally, 'you must synchronise or X will happen'

[13:14] <hahainternet> and on the other end you have code, which is often not statically analysable

[13:14] <hahainternet> yes a little like that, think more like Dhall

[13:14] <timotimo> i don't know dhall yet

[13:14] <hahainternet> and a question of 'how turing complete do things actually need to be'

[13:14] <hahainternet> it's a guaranteed-to-terminate config language

[13:15] <timotimo> oh, interesting

[13:16] <hahainternet> the question that nags at me is: how turing complete do things need to be, is there anything between my keyboard and you seeing these words that requires turing completeness?

[13:17] <hahainternet> (the answer is primarily: questions of unbound complexity, such as how many nodes are in this linked list)

[13:17] <hahainternet> well, complexity wrong term, 'runtime' maybe

[13:17] <timotimo> mhm

[13:17] <hahainternet> linked lists can be circular, and so naive algorithms don't halt

[13:17] <hahainternet> so, can you write a language where it can tell you "If pointer 'next' visits a previous item, this function call will not terminate"

[13:18] <hahainternet> thus requiring you to write an algorithm which must halt

[13:18] *** Manifest0 joined
[13:20] *** sivoais left
[13:20] *** sivoais joined
[13:21] *** kurahaupo left
[13:22] *** kurahaupo joined
[13:24] *** mowcat left
[13:24] *** kurahaupo left
[13:24] *** kurahaupo joined
[13:25] *** kurahaupo left
[13:25] *** kurahaupo joined
[13:29] *** kurahaupo left
[13:36] *** antoniogamiz left
[13:43] *** Manifest0 left
[13:45] <Woodi> hahainternet: maybe we need to s/objects/state machines/  in some places at least. and then using s.m. as we use varibles now :)

[13:49] *** Manifest0 joined
[13:51] <hahainternet> Woodi: state machines are an excellent and massively underused tool, but there's some unsolvable problems here too

[13:51] <hahainternet> Woodi: if you have a linked list, and you want to count the number of elements with a script, you must either know the maximum length it could possibly ever be, or write a function with recursion / an infinite loop

[13:52] <hahainternet> you can't guarantee the latter will halt, and iterating a list while also checking the pointer doesn't point to any previously visited nodes is way less efficient in CPU and RAM

[13:55] <Woodi> hahainternet: look like you "upgradeing" problem in during the transit :) problem is: count list and in the middle you add cyclical list...

[13:55] <hahainternet> exactly

[13:57] *** MilkmanDan left
[13:59] *** MilkmanDan joined
[13:59] <Woodi> hahainternet: I think thing need to be started with spec and every differen problem should have their own implementation. or few, interchengable

[14:00] <hahainternet> Woodi: the problem is that you can't verify the spec without having the same problems

[14:01] <Woodi> hahainternet: you can. :)  I saw few implementations of linked lists and strlen(char *str) works too :)  but you probably talking from different point of view :)

[14:01] <hahainternet> Woodi: those are all turing complete, you can't guarantee they halt

[14:02] <Woodi> hahainternet: what if you have not-cyclic and finished data ? then thing halt

[14:03] <sena_kun> hahainternet, are you sure it is solveable in the first place? I mean, there is a Gödel's incompleteness above this all. I am not a math person in any way, just unsure what you are trying to achieve. Also I am not really sure that infinite execution is the worst bug that exists in IT too.

[14:03] <hahainternet> Woodi: you can't prove the data is not-cyclic before you compile the program

[14:04] <hahainternet> sena_kun: the key here is that this isn't a 'general purpose' solution

[14:04] <hahainternet> godels just tells you that you can't implement all algorithms and know all truths with a limited set of tools (ok bad explanaion)

[14:04] <hahainternet> i'm interested in how many of our 'common' problems don't require turing completeness, and therefore don't have the halting problem

[14:05] <sena_kun> hahainternet, have you contacted your local CS PhD group in the nearest top-ranking university? :)

[14:06] <hahainternet> sena_kun: they're not really interested unless you're a student

[14:06] <hahainternet> and i can't afford £27,000+ to get the answer to this question

[14:07] <Woodi> hahainternet: not true. you read() portion of data and coun it by chopping a bit. how it can not halt ? for veryfing you need to choose data representation that allow to finish veryfication. then you can interpret chopped bits with smarter, cyclical semantics

[14:07] <hahainternet> Woodi: that is at 'runtime', if you are doing the checks then, it costs you memory and CPU cycles, which is why people don't do it

[14:07] <hahainternet> you need to be able to handle these datastructures at 'compile' time

[14:08] <hahainternet> sena_kun: fwiw i asked around a large, internationally known R&D department to get thoughts on this, and literally nobody cared

[14:08] <hahainternet> they were only interested in the latest javascript frameworks, i wish i was kidding

[14:09] <sena_kun> hahainternet, well, as I said, infinite execution is not the top issue in IT right now. It is, in fact, pretty rare. When it comes to concurrency, locks appear, but that's another issue with another set of solutions.

[14:09] <hahainternet> sena_kun: the problem is not infinite execution, but the core concept of static analysis being limited by the halting problem

[14:10] <hahainternet> you can't statically analyse a lot of programs because they arbitrarily modify memory based on input

[14:10] <Woodi> hahainternet: from some meta-magic math :)  like Godel's one :)  : there is proved, that in every language you can produce paradoxes. to resolve paradox you need meta-language over that language. then you need meta-meta-language, etc :)

[14:10] <hahainternet> but even strict functional programs don't meet htese criteria

[14:10] <hahainternet> only 'total functional programming' programs do, and they have the above problems i listed w/recursion

[14:11] <hahainternet> Woodi: i thought it was proven that you can say things that you can't prove are true or false, not that you can't build something without paradoxes

[14:11] <hahainternet> isn't ZFC supposed to be a paradox free set-theory construction, for example?

[14:11] <hahainternet> i'm definitely not a pure mathematician or number theorist :p

[14:11] <Woodi> don't ask me :) probably not :)

[14:12] <hahainternet> anyhow this is what i want to learn, but god it's dificult

[14:12] <Woodi> !wiki Tarski

[14:13] <hahainternet> i think banach tarski isn't a 'true' paradox

[14:13] <hahainternet> just seems confusing

[14:13] <hahainternet> i can't say that with authority though :p

[14:14] <tobs> I for one think it is paradoxical :)

[14:14] <tobs> but not contradictory

[14:15] <Woodi> such things finished "modernism" :)

[14:16] <Woodi> you know, in XIX scientists thinked just some calculations errors left :)

[14:17] <Woodi> and then communism and other ideologies was constucted... 

[14:20] <tobs> I've been (trying to find to for) reading about Descriptive Complexity Theory. As far as I know, the theory understands computation complexity by expressiveness of formal languages.

[14:21] <tobs> There's a whole load of equivalences between complexity classes and logical formalisms sub-Turing. You might be interested in that, hahainternet.

[14:21] *** pmurias joined
[14:22] <hahainternet> tobs: honestly as it stands i lack the formal education to understand the papers discussing this stuff

[14:22] <hahainternet> so i've been trying to slowly ease myself into type theory

[14:22] <hahainternet> but even remembering formal logic is difficult, i'm getting older and older and dumber and dumber

[14:22] <pmurias> hahainternet: re requires turing completeness the answer is no

[14:22] <hahainternet> pmurias: for what problem?

[14:24] <pmurias> hahainternet: re "between my keyboard and you seeing those words"

[14:24] <hahainternet> pmurias: oh, well the network it traverses is a cyclic graph

[14:24] <hahainternet> so that's not strictly true

[14:24] <pmurias> hahainternet: strictly speaking all tasks that can be computed under say 2 hours (or any arbitrary length of time)

[14:24] <hahainternet> the transport algorithm is recursive

[14:24] <hahainternet> and there are TTLs hardcoded in packets

[14:24] <pmurias> can be done without turing completeness

[14:24] <hahainternet> which limits the size of the graph

[14:25] <hahainternet> that's specifically what i'm trying to avoid

[14:25] <hahainternet> (broadcasts don't have usable TTLs, and so broadcast storms are a real effect)

[14:28] <Woodi> hahainternet: you throw more and more "variables" onto yourself :)  so that become managable like chaos theory

[14:35] *** molaf joined
[14:40] *** zacts joined
[14:52] *** zacts left
[15:00] *** lichtkind joined
[15:01] *** kensanata left
[15:09] *** mowcat joined
[15:12] *** pmurias left
[15:13] *** lichtkind left
[15:13] *** kurahaupo joined
[15:22] *** domidumont left
[15:26] *** huf joined
[15:38] *** fz_ joined
[15:39] *** fz_ left
[15:39] *** fz_ joined
[15:40] *** fz_ left
[15:40] *** fz_ joined
[15:41] *** fz left
[15:41] *** yqt left
[15:45] *** zaucker left
[15:45] *** MidCheck left
[15:50] *** jmerelo joined
[15:55] *** Manifest0 left
[16:03] *** Manifest0 joined
[16:07] *** Xliff joined
[16:10] <jmerelo> hi!

[16:10] <jmerelo> releasable6: status

[16:10] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 132 out of 304 commits logged (⚠ 2 warnings)

[16:10] <releasable6> jmerelo, Details: https://gist.github.com/01c3f9f971e41b57a3f9b2b36424773f

[16:10] <jmerelo> Doesn't look like it's going to be ready any time soon. This hasn't changed for the last few days. Anyone knows what's going on?

[16:12] <AlexDaniel> jmerelo: just check perl6-dev sometimes :) https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-05-09

[16:13] <Xliff> \o

[16:13] <holyghost> hello

[16:13] <jmerelo> AlexDaniel: Ah, OK. 

[16:13] <holyghost> my promotor doesn't want me to work out the random forest neural networks

[16:14] <holyghost> but I can being at campus Jette VUB as a postodc since I alreayd have a Ph.D

[16:14] <holyghost> s/being/begin

[16:14] <jmerelo> holyghost: congrats

[16:14] <holyghost> Cheers!

[16:14] <holyghost> thanks JJ

[16:14] <Xliff> holyghost++

[16:14] <holyghost> I'm happy :-)

[16:14] <Xliff> You should be!

[16:14] <holyghost> I will elevate my healer class although

[16:15] <holyghost> He just said "postdoc", I don;t know what I have to do :-)

[16:16] <holyghost> I'm going to promote perl6 but need to program perl5, scheme, lisp and C++ for it

[16:16] * jmerelo mildly proud for my third position in the CS Faculty "chef" prize for this: https://www.flickr.com/photos/atalaya/46894509195/in/dateposted/ (out of 5)

[16:16] <holyghost> I'll try to defend the ANNs

[16:17] <holyghost> anyway, I still have to sign my contract at campus Jette

[16:17] <holyghost> Jette is the university hospital of Brussels in Belgium

[16:18] <holyghost> It's in the north of Brussels

[16:18] <holyghost> I need to get there by train though, I live at the SOFT lab of the VUB (vub.ac.be)

[16:18] <holyghost> I'll try to send out a day of perl6 programming :-)

[16:19] <holyghost> s/a day/a day a week

[16:19] <holyghost> That I cannot work on random forest ANNs I find a pity

[16:19] <holyghost> anyway I'm not certain what I have to do

[16:19] <holyghost> he was a bit vague

[16:20] <holyghost> The prof of math faculty supports me though, I think

[16:20] <holyghost> but medicin man are no math teachers

[16:20] <holyghost> I need to get them into AI

[16:21] <holyghost> therefrom scheme and lisp

[16:21] <holyghost> it's for their cancer beam machines

[16:21] <holyghost> although I cannot work everything my promotor said

[16:22] <holyghost> I'll manage with writing programs for the UZ Jette (Uni hospital)

[16:22] <holyghost> anyway, I'm feasting :-)

[16:22] <holyghost> I have 3 contracts then, SOFT, pm Brussels and VUB campus Jette

[16:23] <holyghost> I need to talk to Larry whether he can help out

[16:23] <holyghost> I've send my (old) promotor a mail with the fact that I still need to need to be accepted at Jette with a contract

[16:24] <holyghost> Anyway, my healer's class will go up then

[16:24] <holyghost> Cheers!

[16:24] <holyghost> I'll shut up now :-)

[16:24] <holyghost> postdoc, here I come :-)

[16:25] <holyghost> For those who didn't look above, I have a Ph.D in quantum thermodynamics, game theory and gfx

[16:25] <holyghost> I'm going to get myself a beer :-)

[16:25] * holyghost drinks at perl6's sante

[16:26] <holyghost> sante == health

[16:27] <Xliff> You deserve one! Have a pint on me! :)

[16:27] <holyghost> I will, Xliffie :-)

[16:30] * holyghost has put on his 90ies music

[16:32] <holyghost> I hope they'll give me a desk at campus Jette

[16:32] *** dakkar left
[16:33] <holyghost> I need to get something done out of my onw appartment

[16:33] <holyghost> s/onw/own

[16:33] *** zakharyas left
[16:33] <holyghost> I don't know if I'll use a fedora or netbsd box

[16:33] <holyghost> netbsd == GNU/BSD

[16:34] <holyghost> Ken's BSD

[16:34] <holyghost> anyway, I'll try to shut up with you guys and galls

[16:35] <holyghost> I hope me and them'll manage

[16:38] <Xliff> .oO( Did he just call me "Xliffie"? )

[16:39] *** woolfy joined
[16:39] <Xliff> holyghost: (⋋▂⋌) ... don't do that again!

[16:40] <Xliff> (╯°□°）╯︵ (\﻿ .o.)\

[16:42] <holyghost> ok

[16:43] <holyghost> no Xliffies anymore then :-)

[16:45] *** Manifest0 left
[16:49] *** Manifest0 joined
[16:50] <holyghost> He just sent another mail that matlab is better than my informatics

[16:51] <holyghost> for data analysis

[17:02] *** Manifest0 left
[17:03] *** clarkema joined
[17:03] *** robertle joined
[17:07] *** Manifest0 joined
[17:08] *** melezhik left
[17:14] *** sebboh joined
[17:15] <Geth_> ¦ doc: kjkuan++ created pull request #2774: Clarify that assigning a Seq to an Array consumes it

[17:15] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/2774

[17:16] <sebboh> Hi.  It appears that the TLS certificate presented by examples.perl6.org is valid for many hosts (docs.perl6.nl, docs.perl6.org, docs.perl6.wakelift.de, modules.perl6.org, perl6.nl, perl6.org, perl6.wakelift.de, rakudo.org, rakudo.perl6.org, www.perl6.org), but not the one in question.

[17:24] <Geth_> ¦ doc: taboege++ created pull request #2775: Fix infinite range subscript examples

[17:24] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/2775

[17:30] *** Manifest0 left
[17:35] *** domidumont joined
[17:36] *** upupbb-user1 left
[17:37] *** zacts joined
[17:38] *** Manifest0 joined
[17:53] <Geth_> ¦ doc: taboege++ created pull request #2776: Small wording and punctuation fixes

[17:53] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/2776

[17:58] *** zacts left
[18:01] *** molaf left
[18:04] <Geth_> ¦ doc: 05afa2014f | (Tobias Boege)++ | doc/Type/Grammar.pod6

[18:04] <Geth_> ¦ doc: Type/Grammar: reflow and fix mis-capitalized word

[18:04] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/05afa2014f

[18:04] <Geth_> ¦ doc: 8c58a665d3 | (Tobias Boege)++ | doc/Language/concurrency.pod6

[18:04] <Geth_> ¦ doc: Language/Concurrency: fix punctuation

[18:04] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/8c58a665d3

[18:04] <Geth_> ¦ doc: e7b9314051 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 2 files

[18:04] <Geth_> ¦ doc: Merge pull request #2776 from taboege/misc-capitalization

[18:04] <Geth_> ¦ doc: 

[18:04] <Geth_> ¦ doc: Small wording and punctuation fixes

[18:04] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/e7b9314051

[18:09] <Kaiepi> releasable6, help

[18:09] <releasable6> Kaiepi, status | status link # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Releasable

[18:09] <Kaiepi> releasable6, status

[18:09] <releasable6> Kaiepi, Next release will happen when it's ready. 1 blocker. 132 out of 304 commits logged (⚠ 2 warnings)

[18:09] <releasable6> Kaiepi, Details: https://gist.github.com/11c3db5a4691671548a93fc918ed387c

[18:15] *** DrForr left
[18:19] *** MidCheck joined
[18:21] <Geth_> ¦ doc: 30c0348b50 | (Ben Davies)++ | 2 files

[18:21] <Geth_> ¦ doc: Mention that Scheduler.cue edge case handling is a 2019.05 feature

[18:21] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/30c0348b50

[18:22] *** mowcat left
[18:27] *** sauvin left
[18:32] *** Manifest0 left
[18:34] <MidCheck> sena_kun: thank you very much, It is already working very well. this is my code, but how to make it more elegant?                  get /'test'\.['png' | 'jp'['e']?'g' | 'gif']/ => { app.response.headers<Content-Type> = "image/jpg";          slurp (static-dir /(.+)/ => "data/").pop.execute('/car.png' ~~ /('car.png')/), :bin;     }

[18:36] <MidCheck> my directory structure is bin, data, t, views

[18:36] <MidCheck> images and files are stored in the dada directory

[18:44] *** Manifest0 joined
[18:47] *** xinming left
[18:48] *** kaare__ left
[18:48] *** kaare__ joined
[18:48] *** xinming joined
[18:48] <Geth_> ¦ doc/master: 4 commits pushed by (Jack Kuan)++, (Juan Julián Merelo Guervós)++

[18:48] <Geth_> ¦ doc/master: d19c977300 | Clarify that assigning a Seq to an Array consumes it

[18:48] <Geth_> ¦ doc/master: f4004e4b36 | Fix typo: comsuming -> consuming

[18:48] <Geth_> ¦ doc/master: f4d1e0554f | Address review comments

[18:48] <Geth_> ¦ doc/master: 0646bef0e4 | Merge pull request #2774 from kjkuan/patch-1

[18:48] <Geth_> ¦ doc/master: review: https://github.com/perl6/doc/compare/30c0348b501e...0646bef0e433

[18:49] *** domidumont left
[18:50] *** sebboh left
[18:52] *** kurahaupo_ joined
[18:53] *** kurahaupo left
[18:53] *** kurahaupo_ left
[18:53] *** kurahaupo joined
[18:57] *** jmerelo left
[19:00] *** antoniog1miz joined
[19:09] <clarkema> Has anyone had success building distro packages (particularly RPMS) of Star?

[19:09] <yoleaux> 26 Apr 2019 17:37Z <hankache> clarkema: do you by any chance still have a copy of the dmg for R*? File server went down and we need to host the files somewhere else.

[19:16] *** pecastro joined
[19:20] <clarkema> jnthn: btw, the moarvm.org ssl cert appears to have expired today

[19:21] <eseyman> clarkema: https://dl.bintray.com/nxadm/rakudo-pkg-rpms/

[19:26] <clarkema> hmm

[19:26] <clarkema> interesting, thanks

[19:27] <eseyman> beware that there isn't yet a repo for Fedora 30

[19:29] <clarkema> I've been trying to persuade rpmbuild to make a standard-looking RPM based on Star, but it's not proving straightforward

[19:38] *** pmurias joined
[19:46] *** klapperl joined
[20:00] <El_Che> hi

[20:00] <El_Che> Ubuntu 19.04 and Fedora 30 are coming once the release locations are available

[20:00] <El_Che> adding those distros is a 1 line change

[20:01] <El_Che> If a new location is chosen for the release I'll see that when the latest rakudo is released and change the build scripts accordingly

[20:05] *** xinming left
[20:05] <eseyman> I'm not sure what you mean by "release locations", El_Che 

[20:05] <eseyman> and thank you for those repos, while I'm at it

[20:08] *** molaf joined
[20:12] *** xinming joined
[20:12] <Altreus> How do I idiomatically concatenate arrays in a loop? e.g. where the arrays come from methods called on an array of objects? Not this: my @result = @objects.map: *.array-returning-method

[20:13] <Altreus> I figure a hyperoperator is involved

[20:13] <Xliff> Altreus: @result.append: array-returning-method

[20:13] *** |oLa|1 left
[20:13] <Altreus> oh

[20:14] <Altreus> that's more sensible but also less cool :D

[20:14] <Xliff> :P

[20:14] <Xliff> m: my @a = ^3; @a.append; 3...^6; say @a

[20:14] <camelia> rakudo-moar 3c5a53229: OUTPUT: «Potential difficulties:␤    Useless use of ...^ in sink context␤    at <tmp>:1␤    ------> 3my @a = ^3; @a.append; 3...^7⏏056; say @a␤[0 1 2]␤»

[20:15] <Xliff> m: my @a = ^3; @a.append; 3...6; say @a

[20:15] <camelia> rakudo-moar 3c5a53229: OUTPUT: «Potential difficulties:␤    Useless use of ... in sink context␤    at <tmp>:1␤    ------> 3my @a = ^3; @a.append; 3...7⏏056; say @a␤[0 1 2]␤»

[20:15] <Xliff> m: my @a = ^3; @a.append; 3..6; say @a

[20:15] <camelia> rakudo-moar 3c5a53229: OUTPUT: «WARNINGS for <tmp>:␤[0 1 2]␤Useless use of ".." in expression "3..6" in sink context (line 1)␤»

[20:15] <Xliff> Seriously?

[20:15] <tobs> m: my @a = [1.5, 5.4, 10.2]; say @a».&{ .nude.Slip }

[20:15] <camelia> rakudo-moar 3c5a53229: OUTPUT: «[3 2 27 5 51 5]␤»

[20:15] <clarkema> you have a semi colon after append

[20:15] <Altreus> nude :o

[20:15] <tobs> here, nude is the list producing method

[20:15] <Xliff> tobs++

[20:15] <Altreus> ya cos append appended the array as a single entry :)

[20:16] <Xliff> m: my @a = ^3; my @b = ^6; @a.append: |@b; @a.say

[20:16] <camelia> rakudo-moar 3c5a53229: OUTPUT: «[0 1 2 0 1 2 3 4 5]␤»

[20:16] <Xliff> ^^ so NYAA! ;P

[20:16] <tobs> I think we feel alike in that cool means less alphabetics :-)

[20:17] <Xliff> tobs: Mine was shorter than yours.

[20:17] <tobs> that's also cool

[20:17] <Altreus> the less ASCII the better

[20:19] <Altreus> oh wait heh this one doesn't even return arrays xD

[20:19] <Altreus> I'm always two steps ahead of myself, and I never catch myself up

[20:19] <Xliff> Altreus: await self

[20:19] <tobs> Xliff: mine contains a joke somewhere about covering up the nude

[20:20] <Xliff> tobs: I just made one too!

[20:20] <Xliff> Although are you SURE about that? Generally when someone mentions the word "Slip" the assumed term is "out"

[20:22] <tobs> oh! :D

[20:29] *** molaf left
[20:34] *** Manifest0 left
[20:34] *** mowcat joined
[20:39] *** Manifest0 joined
[20:42] *** molaf joined
[20:46] *** MidCheck left
[20:56] *** Manifest0 left
[20:58] *** molaf left
[21:01] *** Manifest0 joined
[21:02] *** jhill left
[21:03] *** jhill joined
[21:13] <Altreus> there's a way of aliasing a module at use time, but it's not here https://docs.perl6.org/language/modules#use

[21:13] <Altreus> I thought it was :name or something

[21:13] *** zacts joined
[21:14] <Altreus> use Short:name<Long::Name> ? or something like that

[21:19] <lizmat> Altreus: if you don't mind polluting your namespace with the full name

[21:19] <lizmat> you can simply create a constant

[21:19] <lizmat> m: my constant Foo = Str; dd Str.new("foo")

[21:19] <camelia> rakudo-moar 3c5a53229: OUTPUT: «Default constructor for 'Str' only takes named arguments␤  in block <unit> at <tmp> line 1␤␤»

[21:20] <lizmat> m: my constant Foo = Int; dd Foo.new(42)

[21:20] <camelia> rakudo-moar 3c5a53229: OUTPUT: «42␤»

[21:20] <Altreus> I'm sure there's one that goes on the use line... I remember being lectured on why it seemed wrong

[21:21] <Altreus> It was backwards and I said, why isn't it Long::Name:as<foo>

[21:21] <Altreus> and I forgot why :P

[21:23] *** netrino left
[21:23] *** zacts left
[21:23] <lizmat> Altreus: I think it was only specced but never implemented ?

[21:23] *** sena_kun left
[21:24] <Altreus> 🤔

[21:24] *** netrino joined
[21:24] <Altreus> ok :)

[21:24] <lizmat> I'd like to be proven wrong  :-)

[21:28] *** robertle left
[21:29] *** Manifest0 left
[21:31] <vrurg> What might result in the core attempting invocation on infix:«>»? Dies with no 'CALL-ME method' exception but it shouldn't.

[21:34] *** Manifest0 joined
[21:36] <lucs> Is it unusual for a freshly clone rakudo to fail some of its basic tests?

[21:36] <lucs> *cloned

[21:36] <timotimo> master branch, eh?

[21:36] <lucs> Yes

[21:37] <timotimo> "make test" or "make spectest"?

[21:37] <lucs> make test

[21:37] <timotimo> can you be more specific about what tests those are?

[21:37] <lucs> Sure, hang on...

[21:38] <lucs> Um, where do we paste temporary stuff around here?

[21:39] <timotimo> often gist, but sprunge.us is nice and small

[21:39] <lucs> Yeah, gist, hang on...

[21:41] <lucs> Doesn't tell much, but there it is: https://gist.github.com/lucs/86703bdba04b9446ccb0148d16e02b5f

[21:42] <lucs> And a bunch of others fail similarly (I think)

[21:42] <timotimo> can you run it manually?

[21:42] <timotimo> without the harness i mean

[21:42] <lucs> I guess, one minute...

[21:43] <lucs> Um, -Ilib will do if running from the root?

[21:43] <timotimo> apparently

[21:43] <timotimo> probably only if you run ./perl6-m though

[21:43] *** netrino left
[21:43] <timotimo> perhaps it's a "can't run tests before 'make install'" kind of problem

[21:44] <lucs> Could not find Test at line 3 in:...

[21:44] <timotimo> we had some changes recently to stuff related to that

[21:44] <timotimo> yeah, that'd want a -Ilib

[21:44] <lucs> Oops, wanted to put it, forgot...

[21:45] <lucs> Hmm... Similar; gist coming...

[21:46] <lucs> https://gist.github.com/lucs/9c234303a7b7044f5477a97e045c9a74

[21:47] <timotimo> well, that's just rude

[21:48] <lucs> Sorry ;)

[21:48] <timotimo> i don't have a ./perl6 at all

[21:48] *** netrino joined
[21:48] <timotimo> what is it?

[21:49] <lucs> Not sure, I guess it was built by the make? 

[21:49] <lucs> ./perl6 -v

[21:49] <lucs> This is Rakudo version 2019.03.1-310-g3c5a53229 built on MoarVM version 2019.03-110-g081823ffc

[21:49] <timotimo> maybe my makefile is out of date

[21:50] <timotimo> oh, i don't actually have a moar that compiles right now because i'm in the middle of something

[21:50] <timotimo> and honestly super tired right now, may perhaps go to bed very soon

[21:50] <lucs> Oh well, I have to leave anyway.

[21:50] <lucs> Thanks, and I'll be back later.

[21:51] <lucs> Sleep well!

[21:54] <timotimo> o/

[21:56] *** JappleAck left
[22:07] *** Manifest0 left
[22:08] *** thundergnat left
[22:11] *** antoniog1miz left
[22:13] *** Manifest0 joined
[22:20] *** Manifest0 left
[22:24] *** pmurias left
[22:25] *** Manifest0 joined
[22:27] *** AlexDaniel left
[22:31] *** rindolf left
[22:31] *** Manifest0 left
[22:34] *** pecastro left
[22:35] *** clarkema left
[22:36] *** Manifest0 joined
[22:43] *** Manifest0 left
[22:46] <Kaiepi> how useful would libkvm bindings be?

[22:47] *** kjk joined
[22:49] *** Manifest0 joined
[22:53] <kjk> p6: my $n = 1 / 0; try say $n; say "{$!.^name} is {$! ~~ Failure ?? 'a' !! 'not a'} Failure"

[22:53] <camelia> rakudo-moar 3c5a53229: OUTPUT: «X::Numeric::DivideByZero is not a Failure␤»

[22:53] <kjk> it seems the DivideByZero exception acts like a Failure but is actually not a Failure?

[23:03] <kjk> my $n = 1/0; try say $n; say "\$n is {$n ~~ Failure ?? 'a' !! 'not a'} Failure"

[23:03] <evalable6> kjk, rakudo-moar 3c5a53229: OUTPUT: «$n is not a Failure␤»

[23:04] <kjk> my $n = +'abc'; try say $n; say "\$n is {$n ~~ Failure ?? 'a' !! 'not a'} Failure"

[23:04] <evalable6> kjk, rakudo-moar 3c5a53229: OUTPUT: «$n is a Failure␤»

[23:10] <kjk> p6:  my $n = 1/0; try say '$n = ', $n; say $n.^name; say $n.^mro

[23:10] <camelia> rakudo-moar 3c5a53229: OUTPUT: «Rat␤((Rat) (Cool) (Any) (Mu))␤»

[23:11] *** Manifest0 left
[23:16] *** Manifest0 joined
[23:18] *** AlexDaniel joined
[23:18] <Geth_> ¦ doc/master: 8 commits pushed by Coke++

[23:18] <Geth_> ¦ doc/master: 9f2147d0a0 | Fix spelling/typos

[23:18] <Geth_> ¦ doc/master: 2c5578d7fd | whitespace

[23:18] <Geth_> ¦ doc/master: 98d4cdac56 | normalize

[23:18] <Geth_> ¦ doc/master: 72dcb8877d | fix signatures

[23:18] <Geth_> ¦ doc/master: c5d463b56e | learn new words

[23:18] <Geth_> ¦ doc/master: c30034075c | fix examples

[23:18] <Geth_> ¦ doc/master: 264280ce02 | Fix usage of L<>

[23:18] <Geth_> ¦ doc/master: b2a49776ba | deal with new headings

[23:18] <Geth_> ¦ doc/master: review: https://github.com/perl6/doc/compare/0646bef0e433...b2a49776ba43

[23:50] *** Manifest0 left
[23:57] *** Manifest0 joined
