[00:13] *** nick__ left
[00:17] *** w17t joined
[00:17] *** p6bannerbot sets mode: +v w17t

[00:17] *** shlomif left
[00:22] *** Manifest0 left
[00:22] *** Manifest0 joined
[00:23] *** p6bannerbot sets mode: +v Manifest0

[00:37] *** pecastro left
[00:38] <vrurg> Can't recall: does supply {} control start a new thread?

[00:50] <leont> No

[00:51] <leont> It's more like a coroutine

[00:54] <jnthn> supply { } doesn't in the immediate do anything until it's tapped, and then its setup logic runs on the thread that calls .tap; all `whenever`s run on the thread that sends the message, subject to the one-message-entirely-processed-at-a-time rule (which is enforced per tapping; think of a supply a bit like a class and each tapping of it like an object)

[01:01] <vrurg> Thanks! That's what I was missing in it.

[01:06] *** aborazmeh left
[01:08] *** kurahaupo left
[01:09] *** kurahaupo joined
[01:09] *** p6bannerbot sets mode: +v kurahaupo

[01:27] <Kaiepi> m: role A { has $.a; submethod TWEAK(:$!a) {} }; role B does A { method new(*%args) { self.bless: |%args } }; class C does B { has $.b; }; my C $c .= new: :1a, :2b; say $c.a, ' ', $c.b

[01:27] <camelia> rakudo-moar 304feae9f: OUTPUT: «1 2␤»

[01:27] <Kaiepi> PERFECT

[01:27] <Kaiepi> that's exactly what i need to be able to do for what i'm writing

[01:27] *** ferreira left
[01:31] *** zachk left
[01:49] *** Actualeyes joined
[01:50] *** p6bannerbot sets mode: +v Actualeyes

[01:54] *** lizmat left
[01:55] <b2gills> Kaiepi: You didn't need to add `method new`

[01:55] *** melezhik joined
[01:55] *** p6bannerbot sets mode: +v melezhik

[01:55] <b2gills> m: role A { has $.a; submethod TWEAK(:$!a) {} }; role B does A {  }; class C does B { has $.b; }; my C $c .= new: :1a, :2b; say $c.a, ' ', $c.b

[01:55] <camelia> rakudo-moar 304feae9f: OUTPUT: «1 2␤»

[01:55] <melezhik> Hi! If there are range operators in Perl6, like in Perl5: /regexp/ .. /regexp/ ...

[01:56] <b2gills> Actually you didn't need TWEAK either

[01:56] <b2gills> m: role A { has $.a; }; role B does A {  }; class C does B { has $.b; }; my C $c .= new: :1a, :2b; say $c.a, ' ', $c.b

[01:56] <camelia> rakudo-moar 304feae9f: OUTPUT: «1 2␤»

[01:56] <b2gills> melezhik: ff and fff

[01:57] <b2gills> https://docs.perl6.org/language/5to6-perlop

[01:57] <Kaiepi> it's a bad example b2gills 

[01:57] <melezhik> thanks b2gills

[01:57] <melezhik> I've found this one - https://docs.perl6.org/routine/ff

[01:58] <melezhik> anyway now I know the word ((-:

[01:58] <Kaiepi> in the code i'm writing i'm using private attributes in A and B and adding extra attributes in C

[01:58] <Kaiepi> er, just A

[01:58] <Kaiepi> so i need TWEAK there

[01:58] <Kaiepi> but you're right about not needing new

[01:59] <b2gills> I sometimes declare a variable as public just so that BUILD is created for me

[01:59] <b2gills> s/variable/attribute/

[02:11] *** Actualeyes left
[02:20] *** jeek joined
[02:21] *** p6bannerbot sets mode: +v jeek

[02:27] *** leont left
[02:32] *** melezhik left
[02:38] *** Kaiepi left
[02:41] *** molaf left
[02:54] *** molaf joined
[02:54] *** ferreira joined
[02:55] *** p6bannerbot sets mode: +v molaf

[02:55] *** p6bannerbot sets mode: +v ferreira

[03:01] *** kurahaupo left
[03:02] *** kurahaupo joined
[03:02] *** p6bannerbot sets mode: +v kurahaupo

[03:49] *** MasterDuke left
[03:50] *** Khisanth left
[04:09] *** Khisanth joined
[04:09] *** p6bannerbot sets mode: +v Khisanth

[04:34] *** kurahaupo left
[04:41] *** Kaiepi joined
[04:41] *** p6bannerbot sets mode: +v Kaiepi

[04:42] <Kaiepi> so i wrote a Crypt::Mode library to allow people writing cryptography libraries to use CFB, ECB, OFB, CFB, CTR block cipher modes with them easily

[04:42] <Kaiepi> to test it i used it on my own Crypt::CAST5 library

[04:42] <Kaiepi> only to find it's broken and i have to rewrite it

[04:42] <Kaiepi> :|

[04:45] <Kaiepi> should've tested it better before i released v0.0.1

[04:47] *** cpan-p6_ joined
[04:47] <cpan-p6_> 03cpan-p6_ reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[04:48] *** p6bannerbot sets mode: +v cpan-p6_

[04:57] *** smallick joined
[04:58] *** p6bannerbot sets mode: +v smallick

[04:59] <smallick> m: (1, 2, 3, *+*+* ... *)[^20].say

[04:59] <camelia> rakudo-moar 304feae9f: OUTPUT: «(1 2 3 6 11 20 37 68 125 230 423 778 1431 2632 4841 8904 16377 30122 55403 101902)␤»

[05:01] <smallick> m: my $a = 1, 2, 3; my @a = 1, 2, 3; .WHAT.perl.say for ($a, @a)

[05:01] <camelia> rakudo-moar 304feae9f: OUTPUT: «WARNINGS for <tmp>:␤Int␤Array␤Useless use of constant integer 3 in sink context (lines 1, 1)␤Useless use of constant integer 2 in sink context (lines 1, 1)␤»

[05:02] <smallick> m: my $a = (1, 2, 3); say $a

[05:02] <camelia> rakudo-moar 304feae9f: OUTPUT: «(1 2 3)␤»

[05:03] <smallick> my $a = (1, 2, 3); $a.WHAT.perl.say

[05:03] <evalable6> smallick, rakudo-moar 304feae9f: OUTPUT: «List␤»

[05:03] *** cpan-p6 left
[05:03] <smallick> say List ~~ Array

[05:03] <evalable6> smallick, rakudo-moar 304feae9f: OUTPUT: «False␤»

[05:04] <smallick> my $a; say $a ~~ Any:U

[05:04] <evalable6> smallick, rakudo-moar 304feae9f: OUTPUT: «True␤»

[05:05] *** smallick left
[05:06] *** cpan-p6 joined
[05:07] *** p6bannerbot sets mode: +v cpan-p6

[05:10] *** cpan-p6 left
[05:14] *** molaf left
[05:34] *** smallick joined
[05:35] *** p6bannerbot sets mode: +v smallick

[05:35] *** smallick left
[06:18] *** nelsonhb joined
[06:19] *** p6bannerbot sets mode: +v nelsonhb

[06:32] *** hythm_ joined
[06:32] *** p6bannerbot sets mode: +v hythm_

[06:33] <hythm_> Hello, is it possible to access a class variable from the class instance?

[06:35] <hythm_> p6: class C { my %h }; my $c = C.new; # can $c access %h?

[06:35] <camelia> rakudo-moar 304feae9f: ( no output )

[06:39] <hythm_> p6: class C { my %h }; my $c = C.new;  say $c.h

[06:39] <camelia> rakudo-moar 304feae9f: OUTPUT: «No such method 'h' for invocant of type 'C'␤  in block <unit> at <tmp> line 1␤␤»

[06:55] *** random_yanek left
[06:59] *** hythm_ left
[07:06] *** jmerelo joined
[07:06] *** p6bannerbot sets mode: +v jmerelo

[07:07] *** random_yanek joined
[07:07] <jmerelo> releasable6: status

[07:07] *** p6bannerbot sets mode: +v random_yanek

[07:07] <releasable6> jmerelo, Next release will happen when it's ready. 5 blockers. 113 out of 239 commits logged (⚠ 41 warnings)

[07:07] <releasable6> jmerelo, Details: https://gist.github.com/6220cd3d182fae1199722a97f6a49353

[07:11] *** nelsonhb left
[07:48] *** orevdiabl left
[07:48] *** revdiablo joined
[07:48] *** p6bannerbot sets mode: +v revdiablo

[07:51] *** molaf joined
[07:51] *** p6bannerbot sets mode: +v molaf

[08:29] *** molaf left
[08:44] <jmerelo> m: say Pod::Config.^mro

[08:44] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «((Config) (Any) (Mu))␤»

[08:55] *** AlexDaniel left
[08:59] <jmerelo> m: say Metamodel::MethodDispatcher.^mro

[08:59] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «((MethodDispatcher) (BaseDispatcher) (Any) (Mu))␤»

[09:00] <jmerelo> m: say Metamodel::EnumHOW.^mro, Metamodel::EnumHOW.^roles

[09:00] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «Required named parameter 'local' not passed␤  in block <unit> at <tmp> line 1␤␤»

[09:00] <jmerelo> m: say Metamodel::EnumHOW.^roles

[09:00] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «Required named parameter 'local' not passed␤  in block <unit> at <tmp> line 1␤␤»

[09:00] <moritz> m: say Metamodel::EnumHOW.^roles(:local)

[09:00] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'gist' for invocant of type 'Perl6::Metamodel::Naming'␤  in block <unit> at <tmp> line 1␤␤»

[09:01] <moritz> m: say Metamodel::EnumHOW.^roles(:!local)

[09:01] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'gist' for invocant of type 'Perl6::Metamodel::Naming'␤  in block <unit> at <tmp> line 1␤␤»

[09:01] <jmerelo> moritz: I'm looking at this: https://stackoverflow.com/a/50403124/891440

[09:01] <jmerelo> m: say Rat.^roles;

[09:01] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «((Rational[Int,Int]) (Real) (Numeric))␤»

[09:02] <jmerelo> Well, that works...

[09:02] <moritz> Metamodel::EnumHOW is composed of NQP roles

[09:02] <moritz> and stringiying them fails

[09:02] <moritz> m: say .name for Metamodel::EnumHOW.^roles(:!local)

[09:02] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'name' for invocant of type 'Perl6::Metamodel::Naming'. Did you mean 'name'?␤  in block <unit> at <tmp> line 1␤␤»

[09:03] <jmerelo> moritz: I see now why https://github.com/perl6/doc/blob/master/type-graph.txt is needed. But just in that case.

[09:03] <jmerelo> m: say Junction.^mro

[09:03] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «((Junction) (Mu))␤»

[09:04] <jmerelo> m: say Code.^mro, Code.^roles

[09:04] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «((Code) (Any) (Mu))((Callable))␤»

[09:04] <jmerelo> m: say Cursor.^mro, Cursor.^roles

[09:04] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'gist' for invocant of type 'NQPMatchRole'. Did you mean 'ast'?␤  in block <unit> at <tmp> line 1␤␤»

[09:05] <jmerelo> m: say Cursor.^mro, Cursor.HOW.archetypes

[09:05] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'gist' for invocant of type 'Perl6::Metamodel::Archetypes'. Did you mean 'isa'?␤  in block <unit> at <tmp> line 1␤␤»

[09:05] <jmerelo> m: say Cursor.^mro, Cursor.HOW.archetypes.^methods

[09:05] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «((Match) (Capture) (Cool) (Any) (Mu))(nominal nominalizable inheritable inheritalizable composable composalizable generic parametric coercive definite augmentable CREATE bless BUILDALL new defined ACCEPTS NOT-ACCEPTS isa)␤»

[09:13] *** marmor joined
[09:14] *** p6bannerbot sets mode: +v marmor

[09:19] *** cpan-p6 joined
[09:19] <cpan-p6> 03cpan-p6 reporting for duty! [Perl 6] 02https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[09:20] *** p6bannerbot sets mode: +v cpan-p6

[09:28] *** cpan-p6_ left
[09:34] <jmerelo> m: my @cursor-roles = Cursor.^roles; print $_ for @cursor-roles

[09:34] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'Str' for invocant of type 'NQPMatchRole'. Did you mean 'Str'?␤  in block <unit> at <tmp> line 1␤␤»

[09:38] <jmerelo> m: my @cursor-roles = Cursor.^roles; print $_.name for @cursor-roles

[09:38] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'name' for invocant of type 'NQPMatchRole'. Did you mean any of these?␤    made␤    make␤    same␤␤  in block <unit> at <tmp> line 1␤␤»

[09:38] <jmerelo> m: my @cursor-roles = Cursor.^roles; print $_.Str for @cursor-roles

[09:38] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'Str' for invocant of type 'NQPMatchRole'. Did you mean 'Str'?␤  in block <unit> at <tmp> line 1␤␤»

[09:41] <jmerelo> say Cursor.^roles

[09:41] <jmerelo> m: say Cursor.^roles

[09:41] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «No such method 'gist' for invocant of type 'NQPMatchRole'. Did you mean 'ast'?␤  in block <unit> at <tmp> line 1␤␤»

[09:42] *** lizmat joined
[09:42] *** p6bannerbot sets mode: +v lizmat

[09:42] <jmerelo> m: my @cursor-roles = Cursor.^roles; print $_.^name for @cursor-roles

[09:42] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «NQPMatchRole»

[09:42] *** rindolf joined
[09:43] *** p6bannerbot sets mode: +v rindolf

[09:51] *** molaf joined
[09:52] *** p6bannerbot sets mode: +v molaf

[10:17] *** andrzejku joined
[10:17] *** p6bannerbot sets mode: +v andrzejku

[10:19] *** |oLa| joined
[10:19] *** |oLa| left
[10:33] *** pecastro joined
[10:34] *** p6bannerbot sets mode: +v pecastro

[10:47] *** rindolf left
[10:52] *** shlomif joined
[10:52] *** p6bannerbot sets mode: +v shlomif

[10:58] *** aborazmeh joined
[10:58] *** aborazmeh left
[10:58] *** aborazmeh joined
[10:58] *** p6bannerbot sets mode: +v aborazmeh

[10:58] *** p6bannerbot sets mode: +v aborazmeh

[11:09] <andrzejku> how is situation with Perl6 jobs?

[11:10] <moritz> I don't know of any exclusively Perl 6 full time jobs

[11:10] <moritz> but I've made some side money with perl 6 before

[11:11] <moritz> and I know jnth++ is earning some of his money with perl 6

[11:13] <nine> We're actually hiring and started using Perl 6 for all new functionality we implement

[11:14] <tadzik> \o/

[11:15] <nine> The team has been quite enthusiastic so far :)

[11:16] *** ufobat joined
[11:17] *** p6bannerbot sets mode: +v ufobat

[11:18] <andrzejku> nine, !!:D

[11:19] *** shlomif is now known as rindolf

[11:32] <tadzik> that's fantastic :)

[11:33] *** pmurias joined
[11:33] *** p6bannerbot sets mode: +v pmurias

[11:34] <pmurias> nine: where do you work? ;)

[11:34] <nine> https://www.atikon.com/at/karriere/jobs/softwareentwickler_in_mit_begeisterung/

[11:35] *** sena_kun joined
[11:35] <nine> There supposedly exists a verion in English, but I don't have that at hand and I'm actually on a train on my way to a week's vacation

[11:36] *** p6bannerbot sets mode: +v sena_kun

[11:38] *** rindolf left
[11:39] <jmerelo> nine: great!

[11:39] *** [Sno] left
[11:40] <jmerelo> nine: also, have fun.

[11:41] <jmerelo> notable6: Atikon is looking for Perl 6 programmers (in German) https://www.atikon.com/at/karriere/jobs/softwareentwickler_in_mit_begeisterung/

[11:41] <notable6> jmerelo, Noted!

[11:41] <nine> thanks :)

[11:42] *** sno joined
[11:42] *** p6bannerbot sets mode: +v sno

[11:43] <El_Che> nine: great news

[11:43] *** rindolf joined
[11:44] *** p6bannerbot sets mode: +v rindolf

[11:47] <andrzejku> that's hard to believe

[11:47] <andrzejku> that we can have companies like that

[11:49] <nine> Side not: our new sysadmin was sold on Perl 6 when he saw sub MAIN and how easy it was to add usage information to individual command line options :)

[11:49] <nine> It's also one of my most favourite features

[11:50] <El_Che> nine: I also added some perl code into our ci/cloud env :)

[11:52] <nine> The team decision to switch to Perl 6 also prompted me to think some more about how to make extending a Perl 5 code base with Perl 6 even easier. I've got some good ideas for Inline::Perl6 to tackle after the vacation :)

[11:53] <El_Che> In this kind of setup I think a relocatable rakudo + lib bundler would be a winner

[11:53] <El_Che> nine: no mention of Perl 6 in the description?

[11:55] *** pecastro left
[11:56] <nine> El_Che: patrickb++ is working on a relocatable rakudo

[11:56] <El_Che> that is tremendous good news

[11:56] <El_Che> I would care more about that than about speed, to be honest

[11:56] <pmurias> nine: are you only looking for people who speak German or is English enough? 

[11:57] <nine> El_Che: the job ad mentions Perl which can be read as Perl 5/6 ;)

[11:57] <El_Che> you weasel :)

[11:59] <nine> pmurias: German would be a plus. We already have an English native on the team, all our source code and comments are in English ans are the team meetings. Still German would help with talking to users and we don't know for how many English speakers we can cover there

[12:00] <nine> And of course German helps with socializing... But in the end it's not a requirement

[12:02] <andrzejku> Actually I am looking for something C/C++/Perl6 job :D

[12:03] <andrzejku> that's probably only as moarvm developer hehe

[12:03] <ufobat> what happens if you have a END block in your codebase: does perl6 wait with the "global destruction" of all objects, on all threads, for all END blocks to return?

[12:04] <ufobat> i am thinkin about this issue: https://github.com/zoffixznet/perl6-Temp-Path/issues/4

[12:17] *** marmor left
[12:29] <moritz> rakudo skips global destruction for efficiency reasons

[12:37] *** MasterDuke joined
[12:37] *** p6bannerbot sets mode: +v MasterDuke

[12:37] *** MasterDuke left
[12:37] *** MasterDuke joined
[12:37] *** herbert.freenode.net sets mode: +v MasterDuke

[12:37] *** p6bannerbot sets mode: +v MasterDuke

[12:38] *** kurahaupo joined
[12:39] *** p6bannerbot sets mode: +v kurahaupo

[12:40] <cpan-p6> New module released to CPAN! Audio-Libshout (0.0.11) by 03JSTOWE

[12:44] <andrzejku> is it possible to embed Perl6 into C++?

[12:45] <moritz> yes

[12:45] <andrzejku> :O

[12:46] <andrzejku> I found only that link https://stackoverflow.com/questions/50769069/is-it-possible-to-embed-perl6-in-a-c-or-c-program

[12:46] <andrzejku> with some poor answers

[12:48] <moritz> feel free to improve on the answers, once you've found out

[12:48] <andrzejku> ok :D

[12:49] *** gfldex left
[12:56] <cpan-p6> New module released to CPAN! Audio-Playlist-JSPF (0.0.3) by 03JSTOWE

[12:56] *** aborazmeh left
[13:08] *** aborazmeh joined
[13:08] *** aborazmeh left
[13:08] *** aborazmeh joined
[13:08] *** p6bannerbot sets mode: +v aborazmeh

[13:09] *** p6bannerbot sets mode: +v aborazmeh

[13:11] *** El_Che left
[13:11] *** cpup left
[13:11] *** El_Che joined
[13:12] *** p6bannerbot sets mode: +v El_Che

[13:18] *** AlexDaniel joined
[13:18] *** p6bannerbot sets mode: +v AlexDaniel

[13:28] <cpan-p6> New module released to CPAN! Chronic (0.0.7) by 03JSTOWE

[13:39] *** [particle]1 joined
[13:40] *** p6bannerbot sets mode: +v [particle]1

[13:42] *** [particle] left
[13:54] *** Ulti joined
[13:55] *** p6bannerbot sets mode: +v Ulti

[13:59] *** andrzejku left
[14:17] <timotimo> i'd like a few more comments on my blog post draft: http://wakelift.de/p/542f3440-7e5e-4371-b203-402782e02f09/

[14:17] <yoleaux> 11:48Z <nine> timotimo: is there a way to have profiling ops not count towards the inlining limit? Apparently they can change performance behavior a lot by enlarging the bytecode.

[14:18] <timotimo> nine: it's already supposed to not count them in the size calculation, maybe there is a bug in that code

[14:20] *** molaf left
[14:24] *** pecastro joined
[14:25] *** p6bannerbot sets mode: +v pecastro

[14:30] *** leont joined
[14:31] *** p6bannerbot sets mode: +v leont

[14:34] *** aborazmeh left
[14:34] <sena_kun> timotimo, nice post. by the way, partially out of curiosity, is it planned to have an option to show user-defined only code in call graph? While being tremendously handy for core devs, average user will be having hard time optimizing e.g. `sink-all`.

[14:35] *** jmerelo left
[14:36] *** Guest2_ joined
[14:37] *** p6bannerbot sets mode: +v Guest2_

[14:40] *** zacts joined
[14:40] *** p6bannerbot sets mode: +v zacts

[14:42] *** sno left
[14:45] *** Guest2_ left
[14:47] <timotimo> sena_kun: i'm not entirely sure how i'd handle that, especially since a lot of code calls back into user's code, too

[14:48] <sena_kun> timotimo, that's to be tricky, I think. Anyway, a great progress, timotimo++

[14:51] *** ravenousmoose joined
[14:51] <timotimo> TYVM, but I just used an off-the-shelf library for flame graphs :D

[14:52] <timotimo> its API is not quite what i need, though :|

[14:52] *** p6bannerbot sets mode: +v ravenousmoose

[15:03] *** domidumont joined
[15:04] *** p6bannerbot sets mode: +v domidumont

[15:05] *** yqt joined
[15:06] *** p6bannerbot sets mode: +v yqt

[15:09] <Kaiepi> how do i emulate overflows with uint32?

[15:09] <El_Che> add a number bigger than 2^32?

[15:10] <Kaiepi> i mean i'm getting this error:

[15:10] <Kaiepi> Cannot unbox negative bigint into native unsigned integer

[15:10] *** someuser left
[15:11] <El_Che> it looks like a type mismatch

[15:11] <timotimo> not quite

[15:11] <El_Che> (mr obvious, here)

[15:11] <timotimo> there's an operation that results in a bigint instead of a native int

[15:11] <timotimo> and moar then complains that you can't put a negative value into an unsigned variable

[15:11] <Kaiepi> the operations i'm using are +, -, and +^

[15:11] <El_Che> what timotimo says

[15:12] <timotimo> m: my uint32 $a = 0x7fffff; say $a

[15:12] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «8388607␤»

[15:12] <timotimo> m: my uint32 $a = 0x7fffff; $a++; say $a

[15:12] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «8388608␤»

[15:12] <timotimo> that's not quite right, is it ...

[15:12] <timotimo> m: say 2 ** 32

[15:12] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «4294967296␤»

[15:12] <timotimo> yeah, lol

[15:12] <timotimo> m: my uint32 $a = 0x7fffffffff; $a++; say $a

[15:12] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «0␤»

[15:12] <timotimo> m: my uint32 $a = 0x7fffffffff; say $a

[15:12] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «4294967295␤»

[15:12] <timotimo> there it overfloweth

[15:13] *** cpup joined
[15:14] *** p6bannerbot sets mode: +v cpup

[15:14] *** ravenousmoose left
[15:14] <Kaiepi> m: my uint32 $foo = 110008024 - 2989985939

[15:14] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «Cannot unbox negative bigint into native unsigned integer␤  in block <unit> at <tmp> line 1␤␤»

[15:15] <Kaiepi> m: say 110008024.base(16)

[15:15] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «68E96D8␤»

[15:15] <Kaiepi> m: say 2989985939.base(16)

[15:15] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «B2379093␤»

[15:15] <timotimo> m: m: my uint32 $foo = 110008024; my $uint32 $otherfoo = 2989985939; say $foo - $otherfoo

[15:15] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3: my uint32 $foo = 110008024; my $uint327⏏5 $otherfoo = 2989985939; say $foo - $oth␤    expecting any of:␤        infix␤        infix stopper␤   …»

[15:15] <timotimo> m: my uint32 $foo = 110008024; my $uint32 $otherfoo = 2989985939; say $foo - $otherfoo

[15:15] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my uint32 $foo = 110008024; my $uint327⏏5 $otherfoo = 2989985939; say $foo - $oth␤    expecting any of:␤        infix␤        infix stopper␤     …»

[15:16] <timotimo> oops

[15:16] <timotimo> m: my uint32 $foo = 110008024; my uint32 $otherfoo = 2989985939; say $foo - $otherfoo

[15:16] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «-2879977915␤»

[15:16] <timotimo> m: my uint32 $foo = 110008024; my uint32 $otherfoo = 2989985939; my uint32 $result = $foo - $otherfoo; say $result

[15:16] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «1414989381␤»

[15:16] <Kaiepi> there we go

[15:16] <timotimo> in your code the calculation happens before the concept of uint32 ever enters the picture

[15:16] <timotimo> so it does a regular bigint calculation and then stumbles when you try to put the result in the 32bit variable

[15:17] <timotimo> putting the type on every step of the calculation is annoying, but at the moment apparently necessary

[15:22] <Kaiepi> m: my uint8 $type = 2; my uint32 $Kmi = 110008024; my uint32 $D = 2989985939; my uint32 $res = do given $type { when 2 { $Kmi - $D } }

[15:22] <camelia> rakudo-moar 5555bbf0b: OUTPUT: «Cannot unbox negative bigint into native unsigned integer␤  in block <unit> at <tmp> line 1␤␤»

[15:24] <Kaiepi> how would i write this to work?

[15:26] <timotimo> put a "my uint32 $ = " inside the when, too

[15:29] <Kaiepi> m: my uint8 $type = 2; my uint32 $Kmi = 110008024; my uint32 $D = 2989985939; my uint32 $res = do given $type { when 2 { my uint32 $ = $Kmi - $D } }

[15:29] <camelia> rakudo-moar 5555bbf0b: ( no output )

[15:31] <Kaiepi> m: sub foo(uint8 $type = 2, uint32 $Kmi = 110008024, uint32 $D = 2989985939 --> uint32) { given $type { when 2 { my uint32 $ = $Kmi - $D } } }; foo

[15:31] <camelia> rakudo-moar 5555bbf0b: ( no output )

[15:36] <cpan-p6> New module released to CPAN! JSON-Infer (0.0.16) by 03JSTOWE

[15:39] <Kaiepi> the last given block in this method still throws no matter what i try https://hastebin.com/ucepagepop.pl

[15:43] *** ravenousmoose joined
[15:44] *** p6bannerbot sets mode: +v ravenousmoose

[15:45] <Kaiepi> never mind, worked out how to do it

[15:47] <Kaiepi> https://hastebin.com/cisodubefe.pl

[16:09] *** zakharyas joined
[16:10] *** p6bannerbot sets mode: +v zakharyas

[16:14] *** domidumont left
[16:14] *** domidumont joined
[16:15] *** p6bannerbot sets mode: +v domidumont

[16:17] *** domidumont left
[16:17] *** mowcat left
[16:18] *** domidumont joined
[16:18] *** p6bannerbot sets mode: +v domidumont

[16:21] <leont> Am I correct to conclude there is not terminfo/termcap module?

[16:24] <sena_kun> leont, https://github.com/jonathanstowe/p6-Term-Cap ?

[16:24] <leont> Yeah, I found that right after I said that

[16:24] <leont> It's not on the module list though

[16:25] <sena_kun> indeed, I wonder why. I think a lot of modules are moved to span lately...

[16:26] <sena_kun> leont, can't you please file an issue? I am sure it will be resolved. :)

[16:31] *** ExtraCrispy joined
[16:31] *** p6bannerbot sets mode: +v ExtraCrispy

[16:40] *** jmerelo joined
[16:40] *** p6bannerbot sets mode: +v jmerelo

[16:43] *** gfldex joined
[16:43] *** gfldex left
[16:43] *** gfldex joined
[16:44] *** p6bannerbot sets mode: +v gfldex

[16:44] <jmerelo> releasable6: status

[16:44] <releasable6> jmerelo, Next release will happen when it's ready. 5 blockers. 113 out of 241 commits logged (⚠ 41 warnings)

[16:44] <releasable6> jmerelo, Details: https://gist.github.com/b5712ee2ecd31268d0ebcaff87f162b5

[16:56] <cpan-p6> New module released to CPAN! MQ-Posix (0.0.2) by 03JSTOWE

[16:56] *** andrzejku joined
[16:57] *** p6bannerbot sets mode: +v andrzejku

[16:58] <leont> It doesn't appear Term::Cap is actually usable. I'm guessing the grammar is chocking on a megabyte of text :-/

[16:59] <jmerelo> leont: in general, or in some particular problem?

[16:59] <leont> In general. It's chocking on parsing the database

[17:02] <jmerelo> leont: pointer to code? Issue? A bit of more context? Can we help, or is it just informative?

[17:10] <Geth> ¦ doc: 598465b336 | (JJ Merelo)++ | doc/Type/Proc/Async.pod6

[17:10] <synopsebot> Link: https://doc.perl6.org/type/Proc::Async

[17:10] <Geth> ¦ doc: Proc::Async works on the JVM

[17:10] <Geth> ¦ doc: 

[17:10] <Geth> ¦ doc: But only since June 2017: https://github.com/rakudo/rakudo/blob/master/docs/announce/2017.06.md

[17:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/598465b336

[17:10] <Geth> ¦ doc: acd61991f9 | (JJ Merelo)++ | doc/Type/Proc/Async.pod6

[17:10] <Geth> ¦ doc: Adds named parameter to def, expands explanation, closes #2582

[17:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/acd61991f9

[17:13] <ufobat> moritz, what could be a reason why the Channel in this modujle is closed, sometimes?

[17:13] <leont> jmerelo: Try running perl6 -e 'use Term::Cap; my $c = Term::Cap.new; dd $c.description'

[17:13] *** zacts left
[17:16] <jmerelo> leont: "No candidates found matching identity: Term::Cap

[17:18] <sena_kun> leont, it is worth a ticket, I think.

[17:19] <leont> Apparently it's a known issue, and the speed issue is the reason for it not being listed

[17:20] *** lucasb joined
[17:20] *** p6bannerbot sets mode: +v lucasb

[17:21] <jmerelo> OK, this Term::Cap https://github.com/jonathanstowe/p6-Term-Cap

[17:21] <jmerelo> But it's not in the ecosystem for some reason...

[17:21] <MasterDuke> couldn't it be parsed into a data structure at module build time? sure, module install would take a long time, but if it's small enough to be pre-compiled then any actual use should be fine

[17:42] *** dogbert11 left
[17:58] *** zacts joined
[17:58] *** p6bannerbot sets mode: +v zacts

[18:00] <cpan-p6> New module released to CPAN! FastCGI-NativeCall-Async (0.0.2) by 03JSTOWE

[18:03] <Geth> ¦ modules.perl6.org: badeaa41cc | (Lucas Buchala)++ (committed using GitHub Web editor) | lib/ModulesPerl6/Controller/Dist.pm

[18:03] <Geth> ¦ modules.perl6.org: Associate ".t6" extension with file type perl6

[18:03] <Geth> ¦ modules.perl6.org: 

[18:03] <Geth> ¦ modules.perl6.org: Per https://github.com/perl6/user-experience/issues/36

[18:03] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/badeaa41cc

[18:05] *** domidumont left
[18:07] *** eseyman left
[18:18] <Util> timotimo: (re: blog post preview)

[18:18] <Util> The aside in the 2nd paragraph: "which I'm planning to make easier in the future as well" 

[18:18] <Util> might fit more naturally into the last two paragraphs, where you are discussing future plans.

[18:18] <Util> Also s/github/GitHub/;

[18:18] <Util> Your work looks very promising!

[18:21] *** domidumont joined
[18:22] *** p6bannerbot sets mode: +v domidumont

[18:23] <leont> Is there a way to unregister a module from CPAN? Or otherwise get the github version to take precedence over it?

[18:24] <lizmat> leont: I think removing it from CPAN is enough

[18:24] <lizmat> but why do you want to do that ?

[18:24] <lizmat> (of course, given enough time for rebuilding db)

[18:25] <leont> It appears mi6 isn't quite ready for one of my dists.

[18:25] <leont> It has a hard assumption of one file is one class

[18:25] <lizmat> ah?

[18:25] <lizmat> hmmm... perhaps fix mi6 instead ?

[18:26] <leont> That messes up the provides meta entry

[18:26] <leont> Yeah, that is the better long term solution

[18:26] <leont> It's probably also not trivial, it kind of involves parsing the module

[18:28] <leont> The quick workaround in mi6 is probably an option to make it not touch provides

[18:35] <lizmat> a dist.ini setting ?

[18:40] <leont> Great, mi6 master fails tests here

[18:41] <lizmat> :-(

[18:44] <lizmat> weekly: https://wakelift.de/2019/01/20/these-graphs-are-on-fire/

[18:44] <notable6> lizmat, Noted!

[18:45] *** phogg joined
[18:45] *** p6bannerbot sets mode: +v phogg

[18:47] <lizmat> moritz: ^^

[18:56] <jmerelo> lizmat: can you think of a better way to compress a data structure than .perl-ify, put that on a Buf and call Compress::Bzip2 on it?

[18:57] <jmerelo> lizmat: maybe pack/unpack? 

[18:57] <lizmat> we don't really have a Perl 6 equivalent of Storable yet

[18:57] <lizmat> nowadays, I would almost always suggest using JSON 

[18:58] <jmerelo> lizmat: serialize to JSON and then compress the JSON string?

[18:58] <lizmat> right, it should compress pretty well

[18:59] <yoleaux> AlexDaniel: get huggable back on its feet

[18:59] <jmerelo> releasable6: status

[18:59] <releasable6> jmerelo, Next release will happen when it's ready. 5 blockers. 115 out of 244 commits logged (⚠ 41 warnings)

[18:59] <releasable6> jmerelo, Details: https://gist.github.com/41c03e20fc581eb3c0b334596d400493

[19:00] <ufobat> flamegraphs! i love them!

[19:01] <moritz> lizmat: tweeted

[19:02] *** zacts left
[19:03] *** eseyman joined
[19:03] *** p6bannerbot sets mode: +v eseyman

[19:05] <lucasb> timo should have used a screenshot from 'cacafire' as the image :D

[19:07] <ufobat> jmerelo, lizmat, i think json is not so good if you expect a lot of binary data

[19:07] <timotimo> i would recommend messagepack over json because it supports more features

[19:07] <timotimo> ufobat: you asked for them a long long time ago :D

[19:07] <jmerelo> timotimo: messagepack is in some module?

[19:07] <timotimo> yeah, i think the one i used is Data::MessagePack

[19:08] <jmerelo> timotimo: thanks!

[19:08] <ufobat> timotimo, yeah i had troubles with binary and JSON::XS in perl5

[19:08] <ufobat> then i swtiched to Sereal

[19:08] <timotimo> moarvm's debugserver uses it to transport messages between moar and the client library

[19:08] <ufobat> timotimo, ah you are talking about the flame graphs, jup, i did :)

[19:09] <timotimo> i am :)

[19:09] <lizmat> TIL JSON is not a good recommendation :-)

[19:09] <timotimo> well ...

[19:10] *** zacts joined
[19:10] *** p6bannerbot sets mode: +v zacts

[19:10] <timotimo> JSON is almost trivial to get in every language

[19:10] <timotimo> but json only allows strings for hash keys for example

[19:10] <timotimo> whereas MP allows other objects (hashes and lists), integers, ...

[19:10] <timotimo> and there's stuff for blobs as well

[19:10] <jmerelo> timotimo: that's just the ticket.

[19:10] <jmerelo> Thanks!

[19:11] <ufobat> does anyone have an idea why https://github.com/zoffixznet/perl6-Temp-Path/blob/master/lib/Temp/Path.pm6#L7 the END block sends 'nuke', instead of nuking all himself?

[19:12] * jmerelo clicks on the link as if he had any hope of finding an answer to the question

[19:13] *** zacts left
[19:13] *** zacts joined
[19:13] *** p6bannerbot sets mode: +v zacts

[19:14] <jmerelo> ufobat: you mean why it has a "when nuke ... .&nuke-path for %goods{ * }:delete:k; $GOODS.close " instead of just doing it on site, right?

[19:15] <jmerelo> I mean, right in the END block

[19:15] <ufobat> right, the end block sends this 'nuke' message, and as you can see it in ticket, the channel is closed sometimes

[19:15] <jmerelo> ufobat: I would say that that way it's allowing time for the channel to process any remaining messages. If the "nuke" message is added to the queue, and processed in due time, not inmediately. 

[19:15] <ufobat> no clue why the channel is closed, but not using it in the END block would 'fix' it

[19:16] <ufobat> ah, good point

[19:16] <jmerelo> ufobat: then the "await" waits until that particular message is processed and the channel closed.

[19:18] *** La_Magra joined
[19:18] *** p6bannerbot sets mode: +v La_Magra

[19:18] <La_Magra> God job guys

[19:19] <ufobat> could the end or the 'nuke' happen multiple times?

[19:20] <jmerelo> ufobat: you could send several messages, but the channel will be closed as soon as the first message is processed.

[19:20] <jmerelo> La_Magra: hi! And thanks!

[19:21] <ufobat> ahhh

[19:21] <ufobat> i missread the error that is happening :-)

[19:22] <ufobat> it is line 40 that "causes" the error

[19:24] *** cpup left
[19:25] *** La_Magra left
[19:25] <ufobat> but i dont understand the line 40, when is self === $orig, and when is it not?

[19:29] *** |oLa| joined
[19:30] *** p6bannerbot sets mode: +v |oLa|

[19:30] * jmerelo clicks again trying to know if he understand something

[19:31] <ufobat> you gain a lot of good karma tonight, jmerelo  :)

[19:31] <jmerelo> ufobat: it's a module, not a class. So, self is dodgy...

[19:32] <jmerelo> ufobat: let me walk through this to see if I understand what it's doing.

[19:32] <jmerelo> ufobat: it's a role that's mixed in $p, which is returned by make-rand-path. 

[19:33] <jmerelo> <forget delete>[self === $orig] sends forget if $p is $orig, delete if it's not

[19:33] <ufobat> how could it not be the case, 

[19:34] <ufobat> in line 44, where you do to mixin, dont you "say self is $orig"?

[19:34] <jmerelo> ufobat: hum.

[19:35] <ufobat> the parameter of the role AutoDel is the object itself? so self === $origin (which is the paremter of the role)

[19:35] <ufobat> no?

[19:35] <ufobat> s/origin/orig/

[19:35] <jmerelo> yep, it's AutoDel[$p]

[19:36] <ufobat> then, it is always 'forget' and never 'delete'?

[19:36] <jmerelo> self is always equal to $orig. So it's always 1 or delete

[19:37] <jmerelo> That's why it's called AutoDel and not AutoDelOrMaybeWhoKnowsDelete

[19:37] <jmerelo> I mean, there's a non-zero likelihood that this is just showing off

[19:37] <ufobat> ah sorry, yeah it is 1, but why is there a forget?

[19:39] <jmerelo> ufobat: assuming it's now just showing off... $p could be changed in the course of things. The role will keep its original value.

[19:40] <jmerelo> $p is an IO::Path, and some things like CWD could change... 

[19:41] <jmerelo> I mean, IO::Path is not immutable. That's a safety check against any change, I guess. Or if it's already closed or something.

[19:42] <jmerelo> Any change in $p, it's checked against orig, then just forget.

[19:43] <ufobat> but the === is object identity? so when the object itself changes it is still itself, no?

[19:43] <ufobat> you dont check for changed attributes inside of the object or something

[19:44] <ufobat> and most of the methods (if not all) of IO::Path return a new object

[19:44] <jmerelo> ufobat: um

[19:44] *** sno joined
[19:45] *** p6bannerbot sets mode: +v sno

[19:46] <jmerelo> m: class A { has $.þ =33}; my $a = A.new; my $orig = $a; $a.þ = 44; say $orig === $a

[19:46] <camelia> rakudo-moar 35a81d544: OUTPUT: «Cannot modify an immutable Int (33)␤  in block <unit> at <tmp> line 1␤␤»

[19:46] <jmerelo> m: class A { has $.þ is rw =33}; my $a = A.new; my $orig = $a; $a.þ = 44; say $orig === $a

[19:46] <camelia> rakudo-moar 35a81d544: OUTPUT: «True␤»

[19:46] <jmerelo> ufobat: right...

[19:47] *** cpup joined
[19:47] <jmerelo> ufobat: it's using sigilless variables, so there's no way to change that... 

[19:48] *** p6bannerbot sets mode: +v cpup

[19:49] <jmerelo> ufobat: the problem is the Travis fail error, right? It's failing somewhere and no idea why...

[19:50] <ufobat> not only :-( 

[19:50] <ufobat> i think the travis failing is because the sub DESTROY gets called afer the 'nuke' happend, so it tries to send something though the channel, maybe DESTROY was called beause of the nuke

[19:50] <ufobat> that's at least what i am assuming

[19:51] <ufobat> i realized that i have some tempfiles that dont get cleaned up, i dont know why/when this is happening but since i dont understand the forget it might a but somewhere in the code that i dont understand

[19:51] <ufobat> bug

[19:52] <jmerelo> ufobat: Where is finish_code_object?

[19:52] <cpan-p6> New module released to CPAN! Sys-Lastlog (0.0.10) by 03JSTOWE

[19:54] *** kurahaupo_ joined
[19:55] *** p6bannerbot sets mode: +v kurahaupo_

[19:56] <jmerelo> ufobat: none of the tests is failing for me locally

[19:56] <ufobat> finish_code_object?

[19:57] *** kurahaupo left
[19:57] <jmerelo> It's the travis error: https://travis-ci.org/zoffixznet/perl6-Temp-Path

[19:57] <ufobat> jmerelo, did you run the tests on xt?

[19:57] <jmerelo> ufobat: yep. There's nothing in t/

[19:57] *** xinming joined
[19:58] <ufobat> ah i havent seen this error :D

[19:58] <jmerelo> ufobat: I wouldn't worry about that unless you can reproduce it locally.

[19:58] <jmerelo> ufobat: looks like a zef error.

[19:58] *** p6bannerbot sets mode: +v xinming

[19:58] <ufobat> i can reproduce https://github.com/zoffixznet/perl6-Temp-Path/issues/4 

[20:00] *** xinming_ left
[20:01] <jmerelo> ufobat: that's line 39 or destroy, that's correct.

[20:02] <jmerelo> so there might be some variables still living when that DESTROY is called

[20:06] <jmerelo> ufobat: really no idea. I would try and print all messages that are sent, and also when DESTROY is called. 

[20:07] <ufobat> i'll try to golf it, because it's not happening when i just create a tempfile

[20:07] <ufobat> jup, thank you jmerelo++

[20:07] *** cpup left
[20:07] <jmerelo> ufobat: thanks to you. I've learned a lot :-)

[20:09] <Geth> ¦ doc: 8d9f331402 | cfa++ | doc/404.pod6

[20:09] <Geth> ¦ doc: Remove trailing whitespace.

[20:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8d9f331402

[20:11] *** jmerelo left
[20:15] *** domidumont left
[20:17] *** yqt left
[20:25] *** andrzejku left
[20:25] *** zacts left
[20:25] *** cpup joined
[20:26] *** p6bannerbot sets mode: +v cpup

[20:29] *** kurahaupo_ left
[20:30] *** kurahaupo joined
[20:30] *** p6bannerbot sets mode: +v kurahaupo

[20:34] *** zacts joined
[20:34] *** p6bannerbot sets mode: +v zacts

[20:38] *** kensanata joined
[20:38] *** p6bannerbot sets mode: +v kensanata

[20:54] *** kurahaupo left
[20:54] *** kurahaupo joined
[20:55] *** p6bannerbot sets mode: +v kurahaupo

[20:55] *** kurahaupo left
[20:56] *** atweiden-air joined
[20:57] *** p6bannerbot sets mode: +v atweiden-air

[20:58] *** kurahaupo joined
[20:58] *** p6bannerbot sets mode: +v kurahaupo

[20:59] *** molaf joined
[21:00] *** p6bannerbot sets mode: +v molaf

[21:01] *** mowcat joined
[21:02] *** p6bannerbot sets mode: +v mowcat

[21:03] *** zacts left
[21:03] *** zacts joined
[21:03] *** p6bannerbot sets mode: +v zacts

[21:03] *** kurahaupo_ joined
[21:03] *** kurahaupo left
[21:04] *** kurahaupo_ left
[21:04] *** kurahaupo joined
[21:05] *** p6bannerbot sets mode: +v kurahaupo

[21:05] <ufobat> how do i disaple spech and jit and all the magic?

[21:06] <ufobat> I've got something thats just happening when I change the sourcecode and start the program for the very first time, 

[21:08] <MasterDuke> ufobat: MVM_JIT_DISABLE=1 and MVM_SPESH_DISABLE=1 env variables

[21:08] <ufobat> ty!

[21:08] <MasterDuke> np

[21:08] <sena_kun> ufobat, also you can try to add `no precompilation;` pragma added in the file in question to see if it helps to make the thing persistent.

[21:08] <ufobat> ah :)

[21:08] <sena_kun> s/added//

[21:09] <sena_kun> I don't know if JIT/spesh may be guilty, but "something that happens only once after sources change" sounds to me like some BEGIN block, sub EXPORT and such folks. :)

[21:10] <ufobat> do I need to write "no precompilation; in the module or is it sufficient to write it in the oneliner right after the -e '

[21:10] *** ravenousmoose left
[21:11] <sena_kun> hmmm, does it happen when you run a oneliner with -e and there are no modules `use`d?

[21:11] <ufobat> in the modujle.

[21:11] <sena_kun> then it is not precomp, I think.

[21:11] <sena_kun> then in the module file.

[21:11] <ufobat> I am using a module

[21:11] <ufobat> awesome, now i can reproduce it :)

[21:11] <sena_kun> \o/

[21:11] <sena_kun> ufobat++

[21:12] <cpan-p6> New module released to CPAN! Sys-Utmp (0.0.12) by 03JSTOWE

[21:22] *** dogbert17 joined
[21:23] *** p6bannerbot sets mode: +v dogbert17

[21:36] *** |oLa| left
[21:45] <ufobat> fixed one bug :-)

[21:45] <ufobat> still dont understand 2nd bug :-(

[21:48] <ufobat> ah!

[21:50] *** zakharyas left
[21:50] *** kensanata left
[21:53] *** jme` left
[22:07] *** jme` joined
[22:08] *** p6bannerbot sets mode: +v jme`

[22:14] *** wi15ht joined
[22:14] *** p6bannerbot sets mode: +v wi15ht

[22:17] *** w17t left
[22:23] <Xliff> \o

[22:37] *** Guest18 joined
[22:37] *** p6bannerbot sets mode: +v Guest18

[22:44] *** kurahaupo left
[22:47] *** kurahaupo joined
[22:47] *** p6bannerbot sets mode: +v kurahaupo

[22:49] *** zacts left
[22:57] *** kurahaupo left
[22:57] *** kurahaupo joined
[22:58] *** p6bannerbot sets mode: +v kurahaupo

[23:08] *** lucasb left
[23:09] *** kurahaupo left
[23:10] *** kurahaupo joined
[23:11] *** p6bannerbot sets mode: +v kurahaupo

[23:16] *** Cabanoss- left
[23:17] *** Cabanossi joined
[23:17] *** Possum left
[23:18] *** p6bannerbot sets mode: +v Cabanossi

[23:18] <atweiden-air> what's the best way to randomly sort an array of strings?

[23:19] <sena_kun> m: my @a = 'qwer', 'rewq', 'weqr'; say @a.pick(*); say @a.pick(*);

[23:19] <camelia> rakudo-moar 94995d60e: OUTPUT: «(rewq qwer weqr)␤(qwer weqr rewq)␤»

[23:19] <atweiden-air> *randomize the order of elems

[23:19] *** Possum joined
[23:19] <sena_kun> likely this one.

[23:19] <atweiden-air> nice

[23:20] *** aborazmeh joined
[23:20] *** aborazmeh left
[23:20] *** aborazmeh joined
[23:20] *** p6bannerbot sets mode: +v aborazmeh

[23:20] *** p6bannerbot sets mode: +v Possum

[23:20] <sena_kun> .pick method takes out a random element, with an int argument you can choose how many items you want, and *(whatever) gives you all items in this case.

[23:20] <yoleaux> with an int argument you can choose how many items you want

[23:21] *** p6bannerbot sets mode: +v aborazmeh

[23:21] <sena_kun> .pick Exercises In Futility

[23:21] <yoleaux> sena_kun: You must provide at least two options.

[23:21] <sena_kun> .pick Exercises In Futility, With Hearts Toward None

[23:21] <yoleaux> With Hearts Toward None

[23:22] <sena_kun> hehe

[23:37] *** aborazmeh left
[23:37] *** pecastro left
[23:37] *** aborazmeh joined
[23:37] *** aborazmeh left
[23:37] *** aborazmeh joined
[23:37] *** p6bannerbot sets mode: +v aborazmeh

[23:38] *** p6bannerbot sets mode: +v aborazmeh

[23:50] *** w_richard_w joined
[23:51] *** p6bannerbot sets mode: +v w_richard_w

[23:51] *** kotrcka joined
[23:52] *** p6bannerbot sets mode: +v kotrcka

[23:52] *** kotrcka left
