[00:00] *** reportable6 left
[00:01] *** netrino left
[00:03] *** reportable6 joined
[00:09] *** lembark left
[00:10] *** molaf left
[00:55] *** Actualeyes left
[00:56] *** leont left
[00:59] *** Actualeyes joined
[01:00] *** Actualeyes left
[01:06] *** MasterDuke left
[01:10] *** john_parr joined
[01:12] <discord6> <Aearnus> here's a thought w.r.t. the naming discussion that's been going around

[01:12] <discord6> <Aearnus> Raku for the language, Camelia for the subset that we used to refer to as "baby perl 6"

[01:12] <discord6> <Aearnus> c.f. https://github.com/perl6/problem-solving/issues/81#issuecomment-520650352

[01:13] *** a3r0 joined
[01:25] *** |oLa| left
[01:37] *** uid9164 joined
[01:52] *** uid9164 left
[02:04] *** jaldhar_ left
[02:04] *** jaldhar_ joined
[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:08] *** jaldhar_ left
[02:09] *** jaldhar_ joined
[02:16] *** jaldhar_ left
[02:17] *** jaldhar_ joined
[02:18] *** adu joined
[02:18] *** jaldhar_ left
[02:19] *** jaldhar_ joined
[02:20] *** jaldhar_ left
[02:21] *** jaldhar_ joined
[02:22] *** jaldhar_ left
[02:22] *** kerframil left
[02:23] *** jaldhar_ joined
[02:23] *** squashable6 left
[02:23] *** Cabanossi left
[02:24] *** squashable6 joined
[02:24] *** ChanServ sets mode: +v squashable6

[02:28] *** Cabanossi joined
[02:33] *** lucasb left
[02:36] *** jaldhar_ left
[02:37] *** jaldhar_ joined
[02:38] *** jaldhar_ left
[02:39] *** jaldhar_ joined
[02:40] *** jaldhar_ left
[02:41] *** jaldhar_ joined
[02:46] *** jaldhar_ left
[02:47] *** jaldhar_ joined
[02:48] *** jaldhar_ left
[02:49] *** jaldhar_ joined
[02:50] *** jaldhar_ left
[02:51] *** jaldhar_ joined
[02:54] *** jaldhar_ left
[02:55] *** jaldhar_ joined
[03:05] *** majensen joined
[03:13] *** majensen left
[03:38] *** jaldhar_ left
[03:39] *** jaldhar_ joined
[03:40] *** jaldhar_ left
[03:41] *** jaldhar_ joined
[03:42] *** jaldhar_ left
[03:43] *** jaldhar_ joined
[03:44] *** jaldhar_ left
[03:45] *** jaldhar_ joined
[03:46] *** jaldhar_ left
[03:47] *** jaldhar_ joined
[03:52] *** jaldhar_ left
[03:53] *** jaldhar_ joined
[03:54] *** jaldhar_ left
[03:55] *** jaldhar_ joined
[03:55] *** khisanth_ left
[04:09] *** Sgeo_ joined
[04:09] *** khisanth_ joined
[04:13] *** Sgeo__ left
[04:28] *** __jrjsmrtn__ left
[04:37] *** avalenn joined
[04:43] *** Sgeo__ joined
[04:44] *** curan joined
[04:45] *** veesh left
[04:46] *** Sgeo_ left
[04:54] *** xinming left
[05:11] *** veesh joined
[05:28] *** ponbiki joined
[05:40] *** xinming joined
[05:59] *** snarkyboojum_ joined
[06:00] *** reportable6 left
[06:03] *** snarkyboojum__ left
[06:04] *** reportable6 joined
[06:07] *** [particle] left
[06:15] *** sauvin joined
[06:17] *** rindolf joined
[06:19] *** [particle] joined
[06:28] *** veesh left
[06:28] *** ravenousmoose joined
[06:39] *** [particle]1 joined
[06:40] *** [particle] left
[06:43] *** veesh joined
[06:43] *** [particle]1 left
[06:44] *** [particle] joined
[06:51] *** [particle] left
[06:53] *** molaf joined
[07:00] *** Geth left
[07:01] *** [particle] joined
[07:05] *** [particle]1 joined
[07:07] *** [particle] left
[07:07] *** __jrjsmrtn__ joined
[07:12] *** molaf left
[07:14] *** |Sno| left
[07:19] *** [particle]1 left
[07:20] *** kensanata joined
[07:21] *** abraxxa joined
[07:21] *** molaf joined
[07:22] *** [particle] joined
[07:25] *** chloekek joined
[07:29] *** El_Che_ joined
[07:29] *** El_Che_ left
[07:30] *** zakharyas joined
[07:32] *** ravenousmoose left
[07:32] *** ravenousmoose joined
[07:33] *** molaf left
[07:35] *** dolmen joined
[07:39] *** [particle] left
[07:41] *** robertle left
[07:46] *** [particle] joined
[07:51] *** epony left
[07:57] *** [particle] left
[07:59] *** dolmen left
[08:01] *** leont joined
[08:02] *** dakkar joined
[08:03] *** Manifest0 left
[08:04] *** Manifest0 joined
[08:05] *** lgtaube left
[08:07] *** [particle] joined
[08:09] *** leont left
[08:12] *** dolmen joined
[08:16] <AlexDaniel> Aearnus: just no

[08:17] *** dolmen left
[08:17] <AlexDaniel> I want the naming outcome to be easy to understand

[08:17] *** dolmen joined
[08:18] <AlexDaniel> so you'd have camelia, raku, rakudo, star‚Ä¶ and which one is which again?

[08:18] <AlexDaniel> raku the language, camelia the distribution, rakudo the compiler, no star?

[08:18] <AlexDaniel> I mean‚Ä¶ come on :)

[08:21] *** [particle]1 joined
[08:21] *** dolmen left
[08:22] *** lgtaube joined
[08:23] * lizmat is awake now, but is first going to have breakfast &

[08:23] *** [particle] left
[08:24] <discord6> <Aearnus> AlexDaniel: good point

[08:29] *** dolmen joined
[08:32] *** molaf joined
[08:38] *** ravenousmoose left
[08:38] *** ravenousmoose joined
[08:41] *** [particle] joined
[08:42] *** [particle]1 left
[08:49] <El_Che> I find the nqp, moarvm, rakudo, perl6 distinction pretty confusing

[08:49] *** sena_kun joined
[08:49] <El_Che> 1 compiler reached maturity, let's be happy with that and don't act like people are queuing up to write new ones

[08:50] <El_Che> let's call everything rakudo and move on ;)

[08:51] <El_Che> it made sense to dream big when Perl was still popular

[08:51] <El_Che> now? Less so.

[08:55] <AlexDaniel> El_Che: well‚Ä¶ not really

[08:55] *** noisegul joined
[08:56] <AlexDaniel> El_Che: people are still implementing perl6-like languages

[08:56] <El_Che> perl6-like

[08:57] <El_Che> that just a fork like people do in python and go

[08:59] *** mowcat joined
[08:59] *** mowcat left
[09:00] *** mowcat joined
[09:00] *** mowcat left
[09:00] *** mowcat joined
[09:10] *** satori__ left
[09:13] *** smash joined
[09:18] <discord6> <Aearnus> El_Che: that's why I like the idea of "rakudo" implementing "raku"

[09:18] <discord6> <Aearnus> and even though it's not english proper, it's as if the compiler for raku would be called raku-do

[09:20] *** molaf left
[09:21] <kensanata> The way of the raku?

[09:21] <kensanata> raku-jutsu!

[09:22] <El_Che> discord6: yes, I like the vim example Damien gave

[09:23] <El_Che> Aearnus: yes, I like the vim example Damien gave

[09:23] <El_Che> Aearnus: I would prefer rakudo, but raku is nice as well

[09:23] <El_Che> :rakudo 

[09:23] <El_Che> that would rock

[09:23] *** epony joined
[09:23] <El_Che> in vim

[09:24] <El_Che> rakudo > raku > camelia for me

[09:24] <El_Che> but even if it's camelia, it would be OK for me

[09:24] *** dolmen left
[09:24] <El_Che> unf*ck the situation once and for all

[09:28] *** dolmen joined
[09:28] <discord6> <Aearnus> definitely. most anything is better than the current situation

[09:33] <AlexDaniel`> That everyone seems to agree with

[09:35] <chloekek> I like Perl 6. üëå

[09:36] <discord6> <Aearnus> why do you say?

[09:44] <El_Che> is stmuk leaving perl 6? (the ticket about planet)

[09:46] *** wamiks joined
[09:47] *** satori__ joined
[09:49] *** Black_Ribbon left
[09:51] *** pilne left
[09:52] <lizmat> El_Che: I think stmuk and virtualsue hold me responsible for zoffix leaving the community

[10:06] <lizmat> https://github.com/perl6/problem-solving/issues/81#issuecomment-520773602

[10:06] <tadzik> rakudo implementing rakudo is a pun, willingly or not, and the idea grows on me

[10:07] <discord6> <Aearnus> lizmat: üëç

[10:07] <tadzik> (while standing by everything I wrote in the ticket)

[10:07] <tadzik> but lizmat++, I like how this is being handled

[10:22] <AlexDaniel> lizmat: what's the mistake we're talking about?

[10:22] *** nwc10 joined
[10:22] <nwc10> Good *, #perl6 

[10:23] <nwc10> It landed: https://www.nntp.perl.org/group/perl.perl6.compiler/2019/08/msg18326.html

[10:23] <lizmat> Many, many years ago, Damian suggested to Larry to rename "Perl 6" to "Rakudo"

[10:23] <lizmat> instead it was used to name the compiler

[10:23] <lizmat> AlexDaniel: ^^

[10:26] <AlexDaniel> nwc10: iirc one of the biggest issues is that we still have to return a match object

[10:27] <AlexDaniel> lizmat: seems like some people strongly dislike raku and some strongly dislike camelia. Meh, you can't win‚Ä¶

[10:29] <tadzik> to be fair, some people also strongly dislike perl 6 ;)

[10:30] <AlexDaniel> no that's not the question anymore

[10:30] <lizmat> fwiw, 1nickt's response exactly describes the vibe I've been getting at events like the Perl Toolchain Summit

[10:31] <tadzik> nwc10: that's one insightful writeup, thanks for this :)

[10:31] <tadzik> yeah, I know that's not the question

[10:32] <lizmat> or at perlmonks, for that matter

[10:32] <tadzik> I meant something more like: you'll never please anybody, and pleasing everybody shouldn't be the primary concern

[10:32] <nwc10> AlexDaniel: is the "I failed to match" object effectively a singleton?

[10:32] <AlexDaniel> nwc10: no

[10:32] <nwc10> ah OK.

[10:32] <lizmat> tadzik: trying to please everybody, is what got us here

[10:32] <tadzik> kind of, yes

[10:32] <nwc10> anyway, one can still generate the match objects even if one changes how the "matching" works

[10:33] <nwc10> but that's beyond what I know. What I knew about, I tried to write there

[10:33] <discord6> <Aearnus> i always thought that the bright & colorful branding of camelia was kind of odd for a programming language. not bad necessarily, just odd.

[10:33] *** nwc10 left
[10:34] <lizmat> Aearnus: I think it shows diversity, in colours, in age, in mindsets

[10:35] <lizmat> and with the eyes a little cross-eyed, not taking yourself too seriously

[10:36] <AlexDaniel> how is raku pronounced, btw?

[10:37] <AlexDaniel> I've heard somebody say it during the conference and I was thinking like ‚Äúwaait, that's not how you say that‚Äù, and now I wonder if I'm wrong

[10:37] <sena_kun> AlexDaniel, as in Japanese, I suspect

[10:38] <sena_kun> so "it reads as it is written", being "r" as in "risk", "a" as in "archer", "k" as "c" in "cat", "u" as in... eeeh...

[10:39] <discord6> <Aearnus> lizmat: all things that are really important for the language's branding, I agree. I just can't help but let my mind wonder to what a modernistic or minimalist sort of branding might look like

[10:39] <sena_kun> https://translate.google.com/#view=home&op=translate&sl=ja&tl=en&text=raku <- "u" as it pronounces it. :)

[10:39] <AlexDaniel> and the stress is on what?

[10:40] <tadzik> ra-koo I think? :

[10:40] <sena_kun> AlexDaniel, no stress!

[10:40] <sena_kun> tadzik, ah, yes, English "oo" is suitable, as in "boom".

[10:40] <tadzik> english is at fault for pronouncing "u" "you" instead of just "u" like we perfectly correctly do in Polish :>

[10:41] <AlexDaniel> what do you mean no stress?

[10:41] <sena_kun> Japanese has no stressing (as we understand it, at least), so...

[10:41] <tadzik> ah: RAku not raKUU?

[10:41] <sena_kun> you just pronounce both syllabiles without making a stress anywhere

[10:42] <tadzik> nodnod

[10:42] <AlexDaniel> :S

[10:42] *** dolmen left
[10:43] *** kensanata left
[10:45] <sena_kun> it(absence of stressing) is not completely true for the language as there are various interesting cases, but it doesn't apply to case with "raku" and "rakudo". no long vowels or anything like that, just two-three syllabiles

[10:46] *** TimToady joined
[10:46] <sena_kun> >For example, 70% of native nouns are unaccented, while only 50% of kango and only 7% of loanwords are unaccented

[10:46] <sena_kun> of course, there are always those 30%. ;)

[10:49] *** scimon joined
[10:51] *** veesh1 joined
[10:52] <AlexDaniel> actually, I think I'm wrong about failed matches

[10:52] <kawaii> sena_kun: rakUwUdo

[10:52] <AlexDaniel> in case of a simple regex, we just return Nil and set $/ to Nil, right?

[10:52] <AlexDaniel> so that's not extremely difficult, probably?

[10:54] <tadzik> and the optimizer probably knows if $/ is used in its scope, in case it's not Nil

[10:54] <discord6> <Aearnus> kawaii: the discussion about the name makes me feel like rakudOwO

[10:54] <kawaii> Both are acceptable corruptions of the name imo :)

[10:54] *** satori__ left
[10:54] <tadzik> m: do { 'foo' ~~ /foo/; do { 'bar ~~ /bar/ }; say ~$/ }

[10:54] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3~ /foo/; do { 'bar ~~ /bar/ }; say ~$/ }7‚èè5<EOL>‚ê§    expecting ‚Ä¶¬ª

[10:55] <tadzik> m: do { 'foo' ~~ /foo/; do { 'bar' ~~ /bar/ }; say ~$/ }

[10:55] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´bar‚ê§¬ª

[10:55] <tadzik> oof

[10:56] <jnthn> The thing about $/ is that it has dynamic scope

[10:56] <jnthn> So "is it used" is not easy :)

[10:56] <jnthn> (This is why we changed $_ - because it being dynamic made *everything* hard to analyze. :))

[11:02] *** Guest93 left
[11:03] *** Guest93 joined
[11:07] *** satori__ joined
[11:11] <tadzik> right, I was hoping it's lexical

[11:14] *** cygx joined
[11:16] <AlexDaniel> jnthn: why should it have dynamic scope though?

[11:17] <AlexDaniel> I understand it'll break existing code, but that doesn't necessarily mean we have to keep it that way forever

[11:18] <jnthn> AlexDaniel: Well, in the immediate so things like .match and .subst can set it :)

[11:19] *** Geth joined
[11:19] <jnthn> And I don't see how we get away from that

[11:19] <jnthn> lunch, bbiab

[11:24] *** molaf joined
[11:27] *** leont joined
[11:38] *** dolmen joined
[11:42] *** ChoHag left
[11:45] *** kensanata joined
[11:47] *** zakharyas left
[11:48] <daxim> http://redd.it/9tws89#e92djoj

[11:49] <daxim> unicodable6: who is your daddy and what does he do?

[11:49] <unicodable6> daxim, U+0077 LATIN SMALL LETTER W [Ll] (w)

[11:49] <unicodable6> daxim, U+0068 LATIN SMALL LETTER H [Ll] (h)

[11:49] <unicodable6> daxim, 38 characters in total (who is your daddy and what does he do?): https://gist.github.com/f703b63764a6df07a4966e2685a9e157

[11:51] <daxim> unicodable6: ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ

[11:51] <unicodable6> daxim, U+FFFD REPLACEMENT CHARACTER [So] (ÔøΩ)

[11:51] <unicodable6> daxim, 13 characters in total (ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ): https://gist.github.com/bc90e4d7ef4e9d5a445bf99c70f3f915

[11:59] <AlexDaniel> unidump: zÔøΩÔΩ¢

[12:00] *** reportable6 left
[12:00] <unicodable6> AlexDaniel, https://gist.github.com/7fea34135530432795cf6e05119236da

[12:00] <AlexDaniel> don't know what the daddy is doing, but unicodable6 can do some cool stuff like this ‚Üë

[12:04] *** reportable6 joined
[12:04] *** ChanServ sets mode: +v reportable6

[12:05] <AlexDaniel> so hold on a second, grammar.parse ‚ÄúReturns a Match object on success, and Nil on failure.‚Äù, and we're changing that in 6.e, right?

[12:06] <El_Che> lizmat: oh I see, the comment could be read like that. I wondered what it meant, it was kind of out of context/place

[12:06] <AlexDaniel> so now you'll be getting a Failure if it doesn't match

[12:06] <AlexDaniel> but we don't do the same for regexes‚Ä¶ should we?

[12:08] <woolfy> Op 2 augustus heeft Jolanda keurig netjes die 120 euro overgemaakt op jouw bankrekening.

[12:08] <woolfy> oh shit wrong window

[12:08] <woolfy> sorry...  eek...  that is so personal...  :-(

[12:08] <El_Che> I read it as rahkoo

[12:08] <El_Che> with the emphasis on the oo

[12:09] <daxim> use IPA

[12:09] <daxim> the approximations just trick you into thinking you have communicated your thought successfully, but >80% of the time it doesn't

[12:12] *** leont left
[12:13] <AlexDaniel> lizmat: IMO it's a bit more important now to establish a PR with the things asked for by jnthn, we may be jumping a bit too fast to choose a particular name

[12:14] <tbrowder> i just watched jnthn's talk on p6 performance--very informative, as usual!

[12:14] <El_Che> AlexDaniel: I feel the balance is moving towards raku

[12:14] <El_Che> tbrowder: yeah, it was a nice talk!

[12:14] <AlexDaniel> like it's first camelia, then raku, then who knows we might jump back to camelia‚Ä¶ let's just focus on things that need doing

[12:14] <El_Che> rakudo :)

[12:14] <lizmat> I won't be jumping back to Camelia

[12:14] <El_Che> rakudodo

[12:14] <lizmat> or rakudo

[12:15] <lizmat> I want to move ahead, as many other people do

[12:15] <lizmat> El_Che: rakudodo == raku dodo

[12:15] <El_Che> indeed

[12:15] <lizmat> not a positive thing I would say ?

[12:15] <AlexDaniel> haha

[12:15] <tbrowder> question: is anyone working on precompilation for the script as well as its modules? i

[12:15] <El_Che> I have tons of bad jokes

[12:15] <daxim> just to confirm my understanding: with issue 81 that would be raku the language and rakudo the implementation?

[12:15] <El_Che> call the language "straw"

[12:16] <El_Che> The straw that broke the camel's back

[12:16] <lizmat> daxim: that would be the idea, yes

[12:16] <AlexDaniel> daxim: that's right, yeah

[12:16] <El_Che> (you're not laughing now :) )

[12:17] <tbrowder> i think madeline's gsoc work should also pay off in parts of the head-to-head speed contesr with other languages, no?

[12:18] <lizmat> .oO( the last straw to rule them all :-)

[12:18] *** AlexDani` joined
[12:19] <El_Che> lizmat: I see you acknowledge the potential of the name

[12:20] *** AlexDani` left
[12:20] *** AlexDani` joined
[12:20] *** AlexDaniel left
[12:20] *** AlexDani` is now known as AlexDaniel

[12:27] <cygx> tbrowder: being able to precompile scripts will help with startup time

[12:27] <cygx> That's an immediate benefit

[12:28] <cygx> There's a bit more to do to make module linking a reality

[12:28] <cygx> I'm currently looking into getting the missing pieces into place

[12:29] <El_Che> nice

[12:30] <cygx> I should probably talk to her about that :)

[12:34] <woolfy> At PerlCon in Riga, I sold 31 Perl 6 books and 2 Perl 5 books.

[12:35] <tadzik> nice! :)

[12:35] <timotimo> it's already a nice win to have just the "perl6" command start up faster

[12:36] <daxim> one of the green books was by recommendation from me

[12:36] <woolfy> Including a set of 3 books to a small company of which the boss said that using Perl 6 was out of the question and after seeing several Perl 6 talks came and said "we should have started a lot sooner".

[12:36] <woolfy> daxim++

[12:36] *** veesh1 left
[12:37] *** lucasb joined
[12:37] <timotimo> cool

[12:37] <daxim> I (accidently) had breakfast with that boss, he was thoroughly impressed

[12:37] <woolfy> daxim : heh, I hoped that bit would remain anonymous...  :-)

[12:38] <AlexDaniel> I'm not too surprised, a lot of great perl6 talks

[12:38] <AlexDaniel> woolfy: o/

[12:39] <woolfy> AlexDaniel : it was nice finally meeting you!

[12:40] <AlexDaniel> woolfy: :)

[12:41] *** pmurias joined
[12:41] <pmurias> SmokeMachine: hi

[12:41] <El_Che> Hi woolfy 

[12:41] <jnthn> It was nice to meet up with lots of folks at PerlCon, though I'm sorry to any of you who met me and now have the cold I brought with me there. (All of my family here now have it. D'oh.)

[12:41] <AlexDaniel> jnthn: it's fine, I feel better today! :D

[12:42] <daxim> ü§ß

[12:42] <woolfy> Hi all\

[12:44] <jnthn> Wish I did! :)

[12:45] <El_Che> I am impressed by the civility of the discussion on github so far

[12:45] <AlexDaniel> woolfy: but yes, it was truly great to meet all of you :)

[12:46] *** pat_js joined
[12:47] <AlexDaniel> El_Che: well, is there a chance for it to be any other way?

[12:47] <AlexDaniel> things are different now

[12:47] <daxim> only a handful of outsiders in the thread, or rather fencesitters

[12:48] <El_Che> AlexDaniel: most discussions need asbestos clothings

[12:48] <daxim> imagine jjl contributing an opinion

[12:49] *** mowcat left
[12:51] <AlexDaniel> and we've finally hit the ‚ÄúLoad more...‚Äù feature on github :)

[12:52] *** zakharyas joined
[12:52] <AlexDaniel> El_Che: but it's interesting that there are no downvotes

[12:52] <AlexDaniel> some on the ‚ÄúCamelia‚Äù proposal, but that's fine

[12:53] <AlexDaniel> also some confused emojis, it's ok to be confused :)

[12:55] <cygx>  Petsonally, I'd vote for the name 'Prince' - has a nice symmetry to 'The language formerly known as Perl6' :p

[12:56] <cygx> *Personally

[12:56] *** wamiks left
[12:56] <El_Che> cygx: I thought about the OD on utf8

[13:02] *** lizmat left
[13:09] <pmurias> SmokeMachine: I'm getting around to adding extra methods on top of the wrapped js objects in rakudo.js

[13:09] <pmurias> SmokeMachine: which ones do you think we should add?

[13:10] <pmurias> one questions is what should .gist return in rakudo.js

[13:12] <SmokeMachine> pmurias: some... but now I‚Äôm on a train going back home... would you mind if I answer you in a few hours?

[13:14] *** Possum left
[13:17] *** Doc_Holliwood joined
[13:20] *** Cabanossi left
[13:20] <Doc_Holliwood> Can I express this any shorter? method roll { [+] ( 0 .. self.dice ).map({ (1 .. self.sides).pick }) }

[13:22] <timotimo> it looks like you're using the 0 .. self.dice .map just to have a repetition

[13:22] <timotimo> that is easier to do with xx self.dice at the end

[13:22] <Doc_Holliwood> confused

[13:23] *** mensvaga left
[13:23] <timotimo> oh, you're right, i misread

[13:23] *** sdu joined
[13:23] <Doc_Holliwood> it's a simple die class. dice is the number if dice, sides the number of sides. so when dice is 2 and sides is 6, it should roll two d6 and add up

[13:24] <timotimo> what you want is actually (1 .. self.sides).roll(self.dice)

[13:24] <timotimo> .sum

[13:24] <evalable6> timotimo, rakudo-moar 15e060107: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§  in block <unit> at /tmp/vO4H3D3D18 line 1‚ê§¬ª

[13:24] <AlexDaniel> huh

[13:24] *** Cabanossi joined
[13:24] <AlexDaniel> .say

[13:24] <evalable6> AlexDaniel, rakudo-moar 15e060107: OUTPUT: ¬´(Any)‚ê§¬ª

[13:25] <timotimo> (1 .. 9).roll(4).sum.say

[13:25] <evalable6> timotimo, rakudo-moar 15e060107: OUTPUT: ¬´12‚ê§¬ª

[13:25] <Doc_Holliwood> oh, roll is a builtin?

[13:25] <sena_kun> m: my $dice-num = 5; my $sides = 6; say [+] ((1..$sides).roll xx $dice-num)

[13:25] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´13‚ê§¬ª

[13:26] <timotimo> it is

[13:26] <jnthn> $foo.roll xx $n is just $foo.roll($n), I thought?

[13:26] <timotimo> roll takes the number of times to roll, so no need for xx either

[13:26] <pmurias> SmokeMachine: there's no hurry, I'll be grateful for suggestions as estimating what other people want is hard

[13:26] <timotimo> it also allows * or Inf and gives a lazy list of roll results

[13:27] <tyil> on my Alpine perl6 docker image `zef install File::Which` fails with "Fetching [FAIL]: git://github.com/azawawi/perl6-file-which.git from git://github.com/azawawi/perl6-file-which.git"

[13:28] <tyil> trying to `git clone` that specific URL works just fine

[13:28] <tyil> wat do

[13:29] *** zakharyas left
[13:30] *** zakharyas joined
[13:30] *** dakkar left
[13:30] *** dakkar joined
[13:31] <tbrowder> in jnthn' performance talk he mentions benefit of using contains and starts-with which i could use a lot more to be sure.

[13:33] *** sdu left
[13:33] <tbrowder> m: my $s = 'boo foo'; say $s.contains('foo');

[13:33] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´True‚ê§¬ª

[13:34] *** OiannisJVM joined
[13:34] <SmokeMachine> pmurias: but the ones I remember now were .Bool and .defined...

[13:34] *** cpan-p6 left
[13:34] *** OiannisJVM left
[13:35] *** cpan-p6 joined
[13:35] *** cpan-p6 left
[13:35] *** cpan-p6 joined
[13:35] *** antoniogamiz joined
[13:37] *** sdu joined
[13:41] *** jaldhar_ left
[13:42] *** jaldhar_ joined
[13:42] *** curan left
[13:48] <vrurg> tyil: make a ticket for the module developer to change the URL in META6.json. Or create a PR for that.

[13:48] <tyil> it's a valid URL, though

[13:49] <tyil> especially since `git clone` on that URL just works without any problem :/

[13:49] <vrurg> tyil: still, https works always.

[13:50] <vrurg> tyil: git@ requires authorization and zef cannot provide it. Perhaps somehow git:// does so too.

[13:51] <antoniogamiz> one doubt, if I precompile a file in my local machine, can I use that precompiled code in another machine?

[13:51] <tyil> `Fetching [FAIL]: https://github.com/azawawi/perl6-file-which.git from https://github.com/azawawi/perl6-file-which.git`

[13:51] <antoniogamiz> without recompile again

[13:51] <tyil> my main issue here is that zef doesn't really care to explain *why* its failing, tbh

[13:51] <tyil> so I can't really figure out if it's something I'm missing or if the URL is not supported or whatevers

[13:52] <timotimo> antoniogamiz: precompiled modules for rakudo usually depend on the exact core setting, which means the exact contents of CORE.setting.moarvm

[13:52] <antoniogamiz> tyil: I can install it using zef install File::Which 

[13:52] *** chloekek left
[13:52] <tyil> yes, I can install it on my Debian image too

[13:53] <timotimo> we do have stuff in place to ensure reproducible builds, i.e. that if you recompile your rakudo twice in a row with the same sources on the same machine you'll get the same file contents

[13:53] <tyil> hence my problem remains: why is zef failing, and why doesn't it report anything about the failure :I

[13:53] <timotimo> but i don't know what the guarantees are, if any, for different machines

[13:53] <vrurg> tyil: Heh, https is confusing, yes... And there is definitely something on your side. I agree that more diagnostics would be useful.

[13:53] <antoniogamiz> timotimo: mmm so if I use it always in the same environmet of circle ci it will work right?

[13:53] <tyil> I already knew it was on my side

[13:53] <tyil> :/

[13:53] <antoniogamiz> mmm zef nuke maybe fix it?

[13:53] <timotimo> there is a chance

[13:54] <tyil> antoniogamiz: it's a clean image as far as I can tell

[13:54] <antoniogamiz> mmm then your case is weird :/

[13:54] <tyil> I know

[13:55] <tyil> if it wasn't weird I wouldn't be going to IRC to ask about it :p

[13:55] <timotimo> yeah, the point is to find out how it's weird

[13:55] *** AlexDaniel left
[13:55] <timotimo> personally, i'd probably try to strace -f the thing to see what it ends up doing, among other things the exact parameters to "git clone" it's providing and the output it's getting

[13:55] <tyil> zef -v or --verbose neither seem to do much

[13:55] <timotimo> that'll also want a "don't cut off strings early" flag for strace

[13:56] <tyil> tbh I consider "no error reporting" a bug in zef

[13:56] <timotimo> agreed

[13:59] *** rainmanj_ joined
[14:00] *** lizmat joined
[14:01] *** rainmanjam left
[14:03] <antoniogamiz> tyil: error is thrown here => https://github.com/ugexe/zef/blob/e73897378b36cbf53f2ed8d98363d94bac70767d/lib/Zef/Client.pm6#L203

[14:04] <antoniogamiz> may you can add some says there to debug

[14:05] *** satori__ left
[14:05] <antoniogamiz> .fetch needs to create some .lock files, check if it has enough permissions

[14:06] *** sdu left
[14:06] <timotimo> the logging might want to go into the git plugin

[14:07] *** eiro joined
[14:08] *** eiro left
[14:11] *** rainmanj_ left
[14:12] *** cygx left
[14:13] <tbrowder> grammar help please: where in the docs is the grammar construct "<?{" and kin discussed?

[14:15] *** Ven`` joined
[14:17] <vrurg> tbrowder: https://docs.perl6.org/language/regexes#Regex_boolean_condition_check

[14:18] *** Sgeo__ left
[14:19] *** Sgeo__ joined
[14:26] <tbrowder> vrug: thnx! tried a search for "<?{" before i asked but no hit

[14:26] <tbrowder> vrurg: ^^

[14:28] *** Itaipu left
[14:32] *** Itaipu joined
[14:48] *** pmurias left
[14:50] *** davido joined
[14:54] *** Sgeo_ joined
[14:57] *** Sgeo__ left
[15:01] *** davido left
[15:01] *** davido joined
[15:07] <tbrowder> regex/grammar question: in p6 grammar there is a token <opener> defined which is a long alternative list of acceptable chars. in a later use is tested as <?opener>. i would like to temporarily stop the parse there and take an alternative, immediate action if it is false. so far i have had no success with attempts like "[ <?opener> || <.some-other-action> ]". any suggestions for another approach to try?

[15:08] <tbrowder> the actual file is rakudo/rakudo/src/Perl6/Grammar.nqp

[15:09] *** eiro joined
[15:16] *** lizmat left
[15:17] *** pamplemousse joined
[15:19] *** epony left
[15:22] *** Ven`` left
[15:23] *** kensanata left
[15:25] <tyil> https://gitlab.com/tyil/docker-perl6/-/jobs nightly Docker images with GitLab, so my desktop being off doesn't ruin my nightly images anymore :D

[15:25] <antoniogamiz> good :)

[15:25] <tyil> now to use those for building other images on GitLab, to reach automatic CPAN uploads on GitLab eventually

[15:25] *** [Coke] joined
[15:26] *** [Coke] left
[15:27] *** nepugia joined
[15:29] *** epony joined
[15:31] *** Doc_Holliwood left
[15:33] *** lizmat joined
[15:39] <masak> today's autopun: "5 out of 4 people struggle with math"

[15:41] <antoniogamiz> xdd

[15:44] *** jaldhar_ left
[15:47] *** molaf left
[15:56] *** pat_js left
[15:56] *** harmil joined
[16:10] *** mowcat joined
[16:10] *** dolmen left
[16:22] *** mensvaga joined
[16:25] *** dolmen joined
[16:29] *** scimon left
[16:30] *** dolmen left
[16:35] *** lizmat left
[16:36] *** dakkar left
[16:37] *** sena_kun left
[16:41] *** rindolf left
[16:43] <tobs> tbrowder: I think that's the approach.

[16:43] <tobs> m: my regex opener { 'a' }; sub f ($x) { $x ~~ / [ <?opener> || <?{ note "no opener"; False }> ] / }; for "abc", "zbc" { say "$_: " ~ f($_) }

[16:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´abc: ‚ê§no opener‚ê§zbc: ‚ê§no opener‚ê§no opener‚ê§no opener‚ê§Use of Nil in string context‚ê§  in block  at <tmp> line 1‚ê§¬ª

[16:44] <Geth> ¬¶ doc: f06c83cee7 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[16:44] <synopsebot> Link: https://doc.perl6.org/language/regexes

[16:44] <Geth> ¬¶ doc: make example classier

[16:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f06c83cee7

[16:44] <tobs> apart from the <?{}> assertion being executed more often than I would have expected, this works.

[16:45] <vrurg> tobs: I think it's because of backtracking.

[16:46] <vrurg> You have three letters ‚Äì one call for each

[16:46] <tobs> vrurg: ah, of course, because the match fails for each of them

[16:47] <vrurg> Though it's not backtracking but normal forward search.

[16:47] <tbrowder> tobs: thnx, i'll try that. the sneaky problem i think is the following code which nibbles or quibbles and shifts langs, but your syntax may work--fingers crossed!

[16:47] *** cpan-p6 left
[16:47] *** cpan-p6 joined
[16:47] *** cpan-p6 left
[16:47] *** cpan-p6 joined
[16:49] <tbrowder> and i'm only interested in failing at the first letter encountered, maybe that constraint would help...reporting back later...

[16:50] <El_Che> AlexDaniel`: kudos on all the project management work you're doing, by the way

[16:51] *** Actualeyes joined
[16:51] *** harmil left
[16:56] *** davido left
[17:03] <tbrowder> tobs:

[17:04] <tbrowder> vrurg: bummer, same behavior: skipping the action when <?opener> fails.

[17:06] *** wildtrees joined
[17:11] <vrurg> tbrowder: I would print $/ in a code block following the <?opener> and see what you have in it.

[17:13] <vrurg> [ || ] is the construct you're looking for, as tobs example shows.

[17:14] *** mtj_ is now known as mtj

[17:17] *** chloekek joined
[17:17] *** mtj is now known as mtj_

[17:18] *** mtj_ is now known as mtj

[17:28] <antoniogamiz> tyil: this link is broken: https://git.tyil.nl/docker/perl6

[17:28] <antoniogamiz> (it's here https://hub.docker.com/r/tyil/perl6)

[17:37] *** MilkmanDan left
[17:38] *** MilkmanDan joined
[17:39] *** zakharyas left
[17:39] <tyil> yes, I'm already working on making something better as well

[17:39] *** antoniogamiz left
[17:40] <tyil> using automated builds on gitlab

[17:43] <tyil> (still inconvenient though, I'll try to update that description later today)

[17:47] *** lizmat joined
[17:50] *** sjm_uk joined
[17:53] *** mowcat left
[17:54] *** mowcat joined
[17:56] *** antoniogamiz joined
[18:00] *** reportable6 left
[18:00] *** snarkyboojum__ joined
[18:00] *** reportable6 joined
[18:00] *** ChanServ sets mode: +v reportable6

[18:01] <antoniogamiz> tyil: ok, thanks :)

[18:03] *** snarkyboojum_ left
[18:05] *** |oLa| joined
[18:05] *** |oLa| left
[18:05] <tyil> antoniogamiz: are you using those images right now?

[18:06] <tyil> or is it just something you noticed :p

[18:06] *** rindolf joined
[18:06] <antoniogamiz> No, but I plan to use some docker image providing perl6

[18:06] <antoniogamiz> because I want to avoid build it each time I push I commit

[18:06] <tyil> ah, alright

[18:06] <antoniogamiz> s/I/1

[18:06] <tyil> I know the pain :p

[18:07] <tyil> anyway, those particular images are going to be replaced with https://gitlab.com/tyil/docker-perl6/tree/fresh

[18:08] <tyil> mostly because this way, automated builds happen every day on gitlab's hw, since mine is less trustworthy, so to speak

[18:08] <antoniogamiz> hugely thankful

[18:08] <antoniogamiz> tyil++

[18:08] <tyil> it's hopefully also easier for other people to contribute fixes like this, if they find any issues

[18:09] <El_Che> maybe this from travis is applicable for gitlab? https://github.com/nxadm/rakudo-pkg#using-rakudo-pkg-on-travis

[18:09] <tyil> on GitLab you can just use a different image

[18:09] <tyil> Travis is limited by only allowing their own images

[18:09] <El_Che> tyil: no they don't

[18:10] <El_Che> https://github.com/nxadm/rakudo-pkg/blob/master/.travis.yml

[18:10] <El_Che> I get them from the docker hub or build the locally

[18:10] <tyil> looks like you're using their image, and then run another docker inside of that

[18:11] <El_Che> tyil: yes, not good enough?

[18:11] <antoniogamiz> zef cache takes a while to update agh

[18:11] <tyil> El_Che: no

[18:11] <tyil> as I said, you're limited by their images, you can't just use another image as your build env

[18:11] *** pilne joined
[18:12] <tyil> https://gitlab.com/tyil/perl6-app-cpan/blob/master/.gitlab-ci.yml#L7 here I'm telling GitLab CI to use my image as the environment to work in

[18:12] <tyil> (or well, rakudo-star, but I can put in whatever)

[18:12] <El_Che> for me giving access to docker means using whatever dev environment I want. But needs vary of course

[18:12] <tyil> it's not a need, it's just a very inconvenient way of doing it with Travis

[18:13] <tyil> tbh, the tools available on GitHub have been tragically outdated compared to GitLab for years

[18:14] <El_Che> we pretty much copy github at work with gitea and jenkins

[18:14] <El_Che> I don't know why the linux admins picked that over gitlab (they tested that as well)√†

[18:15] <tyil> Im very happy we're using GitLab where I work

[18:15] *** sena_kun joined
[18:15] <El_Che> I am not complaining though

[18:15] <El_Che> it does what it needs to do, and complicated stuff has been automated

[18:16] <tyil> I do enjoy not the complicated stuff being made less complicated, though

[18:16] <tyil> without the first "not"

[18:16] <tyil> github/travis just makes it more complicated over time, whereas gitlab seems to actually try to improve things

[18:18] <tyil> I'm working towards automated CPAN uploads for my modules on gitlab rn

[18:18] <tyil> and if I get it working (which seems very likely), I'll make an advent blogpost on it, probably

[18:18] *** Xliff joined
[18:18] <Xliff> \o

[18:18] <tyil> o/

[18:19] *** Kaiepi joined
[18:19] <Xliff> m: use NativeCall; my num32 $d = 0.1; my $a = (0.01..0.5).pick; say "Hi" if $a ~~ 0..$d

[18:19] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot assign a literal of type Rat (0.1) to a native variable of type num. You can declare the variable to be of type Real, or try to coerce the value with 0.1.Num or Num(0.1)‚ê§at <tmp>:1‚ê§------> 3‚Ä¶¬ª

[18:19] *** molaf joined
[18:20] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).pick; say "Hi" if $a ~~ 0..$d

[18:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi‚ê§¬ª

[18:20] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).pick; say "Hi ({$a})" if $a ~~ 0..$d

[18:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi (0.01)‚ê§¬ª

[18:20] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).pick; say "Hi ({$a})" if $a ~~ 0..$d

[18:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi (0.01)‚ê§¬ª

[18:20] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).rand; say "Hi ({$a})" if $a ~~ 0..$d

[18:21] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[18:21] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).rand; say "Hi ({$a})" if $a ~~ 0..$d

[18:21] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[18:21] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; for ^20 { my $a = (0.01..0.5).rand; say "Hi ({$a})" if $a ~~ 0..$d }

[18:21] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi (0.0872051877353525)‚ê§Hi (0.09193340758775725)‚ê§Hi (0.0766649772865303)‚ê§Hi (0.08196589619195753)‚ê§¬ª

[18:22] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).rand; say "Hi ({$a})" unless $a ~~ 0..$d

[18:22] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi (0.2977662991346576)‚ê§¬ª

[18:22] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; my $a = (0.01..0.5).rand; say "Hi ({$a})" unless $a < 0 || $a > $d

[18:22] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[18:22] <Xliff> m: use NativeCall; my num32 $d = 0.1e0; for ^20 { my $a = (0.01..0.5).rand; say "Hi ({$a})" unless $a < 0 || $a > $d }

[18:23] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi (0.05569946138556649)‚ê§Hi (0.0334992762992786)‚ê§Hi (0.01663914715469208)‚ê§¬ª

[18:25] *** antoniogamiz left
[18:27] *** sauvin left
[18:30] <Xliff> m: use NativeCall; constant TIME_PER_SPARK = 0.1; my num32 $d = 0.1e0; for ^20 { my $diff-time = (0.01..0.5).rand; unless $diff-time < 0 || $diff-time > TIME_PER_SPARK { say "Hi ({$diff-time})" } }

[18:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Hi (0.08352882332718155)‚ê§Hi (0.075134915851173)‚ê§Hi (0.07344216336335872)‚ê§¬ª

[18:32] *** antoniogamiz joined
[18:34] *** robertle joined
[18:45] <Xliff> M: say Bool.pick for ^5

[18:45] <Xliff> m: say Bool.pick for ^5

[18:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´True‚ê§True‚ê§True‚ê§False‚ê§True‚ê§¬ª

[19:01] *** MasterDuke joined
[19:03] *** antoniogamiz left
[19:16] *** [particle]1 joined
[19:17] *** rindolf left
[19:17] *** [particle] left
[19:20] *** rindolf joined
[19:22] *** discord6 left
[19:22] *** [particle] joined
[19:22] *** discord6 joined
[19:23] *** [particle]1 left
[19:24] *** pamplemousse left
[19:27] *** [particle] left
[19:27] *** [Sno] joined
[19:31] *** [particle]1 joined
[19:33] <masak> "4 out of 5 Bools agree"

[19:35] <Geth> ¬¶ doc/traps: f6039af952 | threadless-screw++ | doc/Language/traps.pod6

[19:35] <Geth> ¬¶ doc/traps: Rewrite of interpolation trap section

[19:35] <Geth> ¬¶ doc/traps: review: https://github.com/perl6/doc/commit/f6039af952

[19:39] *** zakharyas joined
[19:53] *** netrino joined
[19:53] <Xliff> masak: "1 out of 5 Bools disagree"

[19:55] *** Doc_Holliwood joined
[19:56] <tbrowder> vrurg: ref $/ good idea...

[19:56] <Doc_Holliwood> So, I am trying to merge some files and skip the first line for each. This is my attempt: https://pastebin.com/ZuqCVeJb

[19:57] <vrurg> tbrowder: what what the cause after all?

[19:57] <Doc_Holliwood> Somehow, in the resulting file, there is a space character inserted at the beginning of each line, except for the very first one

[19:57] * vrurg is glad he was helpful.

[19:58] <Xliff> vrurg: Thanks for your hard work on 3075. Did you raise a bug with MoarVM?

[19:59] <vrurg> Xliff: no. I'm still have doubts. Actually, I spend all my time now trying to find a good gdb fronted.

[20:00] <Xliff> Oh! OK.

[20:00] <vrurg> I'm shocked how horribly bad the current status of gdb support is...

[20:00] <Xliff> I always thought DDD was a good front end.

[20:01] <vrurg> Xliff: somehow they don't recommend it. And it doesn't work on macos.

[20:01] <tbrowder> Doc_Holliwood: try removing the chomp. nice handle: great movie!

[20:01] * vrurg is afk

[20:01] <Doc_Holliwood> When I remove the chomp the output will be chomped and end up all in one line

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: 07c423e825 | (Elizabeth Mattijsen)++ | PATH-TO-RAKU.md

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: Initial version of the name change PR

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: 

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: Please note, this is only the initial version of the PR, intended for

[20:02] <Xliff> vrurg: https://stackoverflow.com/questions/26405865/running-ddd-on-mac-os-x-10-7-5

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: internal discussion / augmentation before being turned into a real

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: ("draft") PR, for wider discussion / voting.

[20:02] <Geth> ¬¶ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/07c423e825

[20:05] *** lizmat left
[20:05] *** [particle] joined
[20:05] *** [particle]1 left
[20:07] *** nepugia left
[20:10] *** netrino_ joined
[20:11] *** netrino left
[20:18] *** sena_kun left
[20:21] <timotimo> vrurg: gdbgui isn't bad, but it's browser-based which i've no clue if you're fine with that

[20:25] *** pmurias joined
[20:47] *** sjm_uk left
[20:51] *** Voldenet left
[20:53] *** mst left
[20:53] *** mst joined
[20:56] *** Voldenet joined
[20:56] *** Voldenet left
[20:56] *** Voldenet joined
[20:57] *** Doc_Holliwood left
[21:02] *** zakharyas left
[21:04] <Geth> ¬¶ doc/regexes: 7b5d7d3eac | threadless-screw++ | doc/Language/regexes.pod6

[21:04] <Geth> ¬¶ doc/regexes: Upgrade of Literals section

[21:04] <Geth> ¬¶ doc/regexes: review: https://github.com/perl6/doc/commit/7b5d7d3eac

[21:04] <Geth> ¬¶ doc/regexes: b1df019ede | threadless-screw++ | doc/Language/regexes.pod6

[21:04] <Geth> ¬¶ doc/regexes: Some additional amendments to updated Literals section

[21:04] <Geth> ¬¶ doc/regexes: review: https://github.com/perl6/doc/commit/b1df019ede

[21:04] <Geth> ¬¶ doc/regexes: d0d57cc7c9 | threadless-screw++ | doc/Language/regexes.pod6

[21:04] <Geth> ¬¶ doc/regexes: Fix table layout in regexes/regex interpolation section

[21:04] <Geth> ¬¶ doc/regexes: review: https://github.com/perl6/doc/commit/d0d57cc7c9

[21:06] <Geth> ¬¶ doc: threadless-screw++ created pull request #2950: Fix table layout in regexes/regex interpolation section

[21:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2950

[21:09] *** mst left
[21:09] *** mst joined
[21:12] <jdv79> i'm more on the raku side than the camelia side so yay.

[21:13] <jdv79> hopefully it'll mean less pointless arguing and more useful spending of resources.

[21:14] *** chloekek left
[21:16] <Geth> ¬¶ doc/master: 4 commits pushed by threadless-screw++

[21:16] <Geth> ¬¶ doc/master: 98f809b4b0 | Deletion of regex-interpolation trap section

[21:16] <Geth> ¬¶ doc/master: 092c748aa2 | New regex interpolation trap section

[21:16] <Geth> ¬¶ doc/master: 78193a4374 | Merge remote-tracking branch 'upstream/traps'

[21:16] <Geth> ¬¶ doc/master: 4f06cce77a | Fix table layout in regexes/regex interpolation section

[21:16] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/f06c83cee77b...4f06cce77afe

[21:25] <Xliff> m: class A { has $.x; method new ($x) { self.bless(:$x); }; }; A.new(42).gist.say

[21:25] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´A.new(x => 42)‚ê§¬ª

[21:27] *** pmurias left
[21:29] *** pmurias joined
[21:46] *** Black_Ribbon joined
[21:48] *** AlexDaniel joined
[21:48] *** AlexDaniel left
[21:48] *** AlexDaniel joined
[21:53] *** pamplemousse joined
[22:04] <Geth> ¬¶ doc/raku: 7bef410553 | Coke++ | 30 files

[22:04] <Geth> ¬¶ doc/raku: First pass at Perl¬†6 -> Raku

[22:04] <Geth> ¬¶ doc/raku: review: https://github.com/perl6/doc/commit/7bef410553

[22:05] *** rindolf left
[22:07] <Geth> ¬¶ doc: coke++ created pull request #2951: First pass at Perl¬†6 -> Raku

[22:07] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2951

[22:12] *** pamplemousse left
[22:19] *** noisegul left
[22:20] *** Cabanossi left
[22:21] <Xliff> say .gist for ^10.rotor(2).kv

[22:21] <Xliff> m: say .gist for ^10.rotor(2).kv

[22:21] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Potential difficulties:‚ê§    Precedence of ^ is looser than method call; please parenthesize‚ê§    at <tmp>:1‚ê§    ------> 3say .gist for ^107‚èè5.rotor(2).kv‚ê§¬ª

[22:21] <Xliff> m: say .gist for (^10).rotor(2).kv

[22:21] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´0‚ê§(0 1)‚ê§1‚ê§(2 3)‚ê§2‚ê§(4 5)‚ê§3‚ê§(6 7)‚ê§4‚ê§(8 9)‚ê§¬ª

[22:22] <Xliff> m: say "L: { .gist }" for (^10).rotor(2).kv

[22:22] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´L: 0‚ê§L: (0 1)‚ê§L: 1‚ê§L: (2 3)‚ê§L: 2‚ê§L: (4 5)‚ê§L: 3‚ê§L: (6 7)‚ê§L: 4‚ê§L: (8 9)‚ê§¬ª

[22:28] <vrurg> timotimo: I would be happy to get any frontend which would display source alongside with data structures. That's all I need.

[22:28] *** lizmat joined
[22:28] <vrurg> BTW, CLion failed ingloriously. I didn't find a way to expand pointers into arrays. :(

[22:29] <timotimo> does it offer an "evaluate expression" thing?

[22:29] <timotimo> i wish there were more programs out there that can display objects from gdb as graphs :\

[22:30] *** epony left
[22:30] <timotimo> more pretty printers and little commands for moar objects in particular would be good

[22:31] <timotimo> like, given just a pointer to an MVMObject it should be able to just give you the body pointer cast to the right struct, since it can look what REPR it has via the STable

[22:32] <vrurg> timotimo: I saw a warning about possible problems with pretty printers if asked to use gdb from macports. But nothing related in the context menu.

[22:32] <timotimo> CLion told you that?

[22:33] <vrurg> It did. I guess it needed python support, but I'm currently having problems with this too.

[22:34] <vrurg> BTW, for R#3075 all I would need is to be able to see compunit symbol table as a tree ‚Äì just to locate the place where one cu gets substituted with another one.

[22:34] <synopsebot> R#3075 [open]: https://github.com/rakudo/rakudo/issues/3075 [precompilation] Conflicting use statement does not produce an error, but fails dynamic compilation.

[22:34] *** Cabanossi joined
[22:35] *** pmurias left
[22:36] <timotimo> you can always write the prettyprinter in C and just "call dump_my_thingie(0xabcdef)" in gdb

[22:36] <timotimo> that can then go off and do what-the-hell-ever, or at least i hope so

[22:36] <vrurg> I probably must take all my courage and switch under linux vm for debugging. Even though it has many downsides.

[22:37] <timotimo> that is how we dump P6opaque, there's a debughelper written in C

[22:38] <timotimo> with a prettyprinter written in python, you get the ability to catch errors for when a pointer doesn't point at something valid

[22:38] <timotimo> but writing them in python is, like, super annoying

[22:38] <vrurg> Hm, I thought it's only available through python. Unfortunately, I didn't need to debug any compiled code for like almost 20 years, not counting for occasional minor things. Pretty much left behind.

[22:38] <timotimo> well, "automatic" pretty printing is only available through python

[22:39] <timotimo> though tbh you can actually write the printing logic in C, then register a prettyprinter python function that literally calls that c function via gdb

[22:39] <timotimo> if you need an example for python-written prettyprinter stuff, the moarvm repo has one under tools/

[22:40] <timotimo> there's also code in there to scan the heap for stuff and collect some random statistics

[22:40] <timotimo> it's rather slow

[22:41] <vrurg> timotimo: I saw the script, yes. Hoped it would help me with MVMObject, but then read the source. ;)

[22:42] <timotimo> ;( ;( ;(

[22:42] <timotimo> it's also really, really tricky to debug python scripts inside of gdb

[22:42] <timotimo> or at least i haven't found a good way

[22:44] <vrurg> I won't even try. Though I'm generally indifferent to other languages, by pascal and python both irritate me. :)

[22:45] *** pmurias joined
[22:46] *** mowcat left
[22:47] <Geth> ¬¶ doc: 65f0e414d2 | (Aleks-Daniel Jakimenko-Aleksejev)++ | CREDITS

[22:47] <Geth> ¬¶ doc: Remove obsolete pumpking mention

[22:47] <Geth> ¬¶ doc: 

[22:47] <Geth> ¬¶ doc: See https://github.com/rakudo/rakudo/commit/636ddcdb543ec8aa592ef20eabf693889c1e3e53

[22:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/65f0e414d2

[22:47] *** epony joined
[22:50] *** lucasb left
[22:51] *** mowcat joined
[22:51] *** mowcat left
[22:52] *** mowcat joined
[22:55] *** netrino_ left
[22:56] *** netrino joined
[23:01] *** satori__ joined
[23:09] *** netrino left
[23:11] *** netrino joined
[23:19] *** lembark joined
[23:20] *** pmurias left
[23:22] *** netrino left
[23:24] *** lembark left
[23:38] *** lembark joined
[23:45] <kent\n> AlexDaniel`: I've noticed at least on PR's there's a mechanism to mark comments as "hidden", with a "reason: " field ( some are 'offtopic' and 'outdated' , etc ), but not sure if that also exists on issues yet. If it does exist on issues, feel free to use it to keep the assholery to a manageable level.

[23:46] *** [particle]1 joined
[23:46] <kent\n> AlexDaniel: ^ in case the ` doesn't trigger you

[23:46] *** [particle] left
[23:47] <AlexDaniel`> Thanks

[23:47] <kent\n> ( people who want to see them still can, its just omitted from the default view )

[23:47] <AlexDaniel`> I'm going to bed now, will check tomorrow

[23:47] <kent\n> that way nobody complains of censorship :)

[23:48] <AlexDaniel`> It already hides most of the comments cuz there's just so many xd

[23:50] * kent\n is already mentally imagining a future where people sell pre-boxed "Camelia-pi" to schools

[23:57] *** irced joined
