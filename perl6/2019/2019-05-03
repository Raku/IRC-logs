[00:04] *** Sgeo_ joined
[00:05] *** Manifest0 left
[00:07] *** Sgeo__ left
[00:11] *** Manifest0 joined
[00:12] *** zacts joined
[00:31] *** sena_kun left
[00:32] *** lucasb left
[00:36] *** netrino left
[00:36] *** MilkmanDan left
[00:36] *** zacts left
[00:37] *** MilkmanDan joined
[00:39] *** mowcat left
[00:45] *** Manifest0 left
[00:50] *** Manifest0 joined
[01:07] *** Manifest0 left
[01:12] *** Manifest0 joined
[01:14] *** ZZZzz left
[01:23] *** Manifest0 left
[01:27] *** hythm joined
[01:28] *** Manifest0 joined
[01:33] *** Manifest0 left
[01:38] *** Manifest0 joined
[01:44] *** Elronnd left
[01:46] *** Elronnd joined
[01:55] <hythm> is there a way to test if a `Channel` is ready to receive data? I'm asking because I have a code that sometimes runs and other times doesn't, the only way to make sure it runs every time is to add `sleep .5`

[01:56] <ugexe> can you show an example of a Channel that is not ready to receive data?

[01:58] <hythm> so instead of sleeping for sometime, is there a way to send data only when `Channel` is ready to receive?

[02:01] <hythm> unfortunately not able to replicate it

[02:01] <hythm> p6: my $c = Channel.new; my $s = $c.Supply; start { $c.send: $++ for ^42 }; sleep 2; start react { whenever $s { .say }};

[02:01] <evalable6> hythm, rakudo-moar 532d19fc4: OUTPUT: «»

[02:02] <hythm> the above works everytime fine,, but in my code I have to add `sleep .5' in that line https://github.com/hythm7/Battleship/blob/master/lib/Battleship/Server.pm#L45

[02:03] <hythm> not able to replicate a small example, I mean

[02:04] *** Manifest0 left
[02:05] *** zacts joined
[02:05] *** Manifest0 joined
[02:06] <hythm> nvm, I thibk I'm not able to epress the problem I'm seeing well, I'll get back when I have a clear example

[02:06] <hythm> s/thibk/think/

[02:06] <hythm> s/epress/express/

[02:10] *** BuildTheRobots left
[02:10] *** scott left
[02:10] *** scott joined
[02:12] *** BuildTheRobots joined
[02:27] *** Manifest0 left
[02:33] *** Manifest0 joined
[02:38] *** zacts left
[02:43] *** reach_satori joined
[02:54] *** molaf joined
[02:55] *** Manifest0 left
[02:55] *** johnjohn101 joined
[02:59] *** zacts joined
[03:00] *** Manifest0 joined
[03:10] *** kaare__ joined
[03:11] *** vrurg left
[03:23] *** araraloren joined
[03:24] *** hythm left
[03:32] *** kaare__ left
[03:40] *** kurahaupo_ joined
[03:43] *** |oLa| joined
[03:43] *** kurahaupo left
[03:59] <lumin> Maybe my usage is wrong but why is "sum([[1,2],[2,3]])" 4 in perl6?

[04:07] <AlexDaniel> m: say +$_ for [[1,2],[2,3]]

[04:07] <evalable6> AlexDaniel, rakudo-moar 532d19fc4: OUTPUT: «2␤2␤»

[04:09] <AlexDaniel> lumin: basically, a list or array in numeric context evaluates to the number of elements

[04:09] <elcaro> lumin: sum takes all it's arguments, and then reduces them with the numeric addition operator

[04:09] <AlexDaniel> lumin: so .sum returns the sum of all elements, and your elements are arrays that are turned into a number of elements in them

[04:10] <elcaro> what he^ said

[04:11] <elcaro> lumin: perhaps you want...

[04:11] <elcaro> m: say ([1,2],[2,3]).map(*.sum)

[04:11] <evalable6> elcaro, rakudo-moar 532d19fc4: OUTPUT: «(3 5)␤»

[04:11] <elcaro> or

[04:11] <elcaro> m: say ([1,2],[2,3])».sum

[04:11] <evalable6> elcaro, rakudo-moar 532d19fc4: OUTPUT: «(3 5)␤»

[04:12] <lumin> Ah, I see. Thank you guys

[04:12] <AlexDaniel> if your structure is really deep, maybe you want something like

[04:13] <AlexDaniel> m: say sum gather ([1,2],[2,3]).deepmap(*.take)

[04:13] <evalable6> AlexDaniel, rakudo-moar 532d19fc4: OUTPUT: «8␤»

[04:13] <AlexDaniel> m: say sum gather ([1,2],[2,[3,9]]).deepmap(*.take)

[04:13] <evalable6> AlexDaniel, rakudo-moar 532d19fc4: OUTPUT: «17␤»

[04:14] *** johnjohn101 left
[04:14] <AlexDaniel> jnthn: would you agree that the code above looks stupid? I mean, it does work, and it's nice that perl6 is that flexible, but the code is still stupid. Do we need deepreduce or something?

[04:15] *** molaf left
[04:15] <AlexDaniel> jnthn: or, here's a crazy idea. What about a .deep method that returns an iterator?

[04:16] <AlexDaniel> jnthn: though that's going to suck bad because .deep.map is not going to do what .deep.map does :)

[04:16] <AlexDaniel> .deepmap I mean

[04:17] <elcaro> yeah... it's the flatmap problem all over again

[04:18] <elcaro> maybe .descend ?

[04:20] <elcaro> m: my &descend = { gather .deepmap(*.take) }; say ([1,2],[2,[3,9]]).&descend; say ([1,2],[2,[3,9]]).&descend.sum

[04:20] <evalable6> elcaro, rakudo-moar 532d19fc4: OUTPUT: «(1 2 2 3 9)␤17␤»

[04:20] <AlexDaniel> elcaro: oooh, flatmap **problem**? :) Maybe you can submit a ticket on https://github.com/perl6/problem-solving/

[04:21] <AlexDaniel> elcaro: I remember stumbling upon this like, umm… all the time actually

[04:21] <elcaro> no, i was just referring to the fact that flatmap was deprecated (i think?)

[04:21] <AlexDaniel> mm

[04:21] <elcaro> and i think one of the probs was it's semantics were slightly different to flat.map

[04:22] <elcaro> or... something... i dunno... but anyways... descend is a nice name

[04:26] *** kurahaupo_ left
[04:27] *** kurahaupo joined
[04:28] *** kurahaupo_ joined
[04:28] *** kurahaupo_ left
[04:29] *** kurahaupo_ joined
[04:31] *** kurahaupo left
[04:37] *** Manifest0 left
[04:43] *** Manifest0 joined
[04:48] *** Manifest0 left
[04:49] <cpan-p6> New module released to CPAN! Game::QFG (0.1.6) by 03HOLYGHOST

[04:49] <cpan-p6> New module released to CPAN! Game::AI::Messaging (0.1.6) by 03HOLYGHOST

[04:50] <cpan-p6> New module released to CPAN! Game::QFG (0.1.7) by 03HOLYGHOST

[04:50] <cpan-p6> New module released to CPAN! Game::AI::Messaging (0.1.7) by 03HOLYGHOST

[04:50] <cpan-p6> New module released to CPAN! Game::AI::Messaging (0.1.8) by 03HOLYGHOST

[04:55] *** Manifest0 joined
[05:06] *** Manifest0 left
[05:11] *** Manifest0 joined
[05:13] *** kurahaupo joined
[05:14] *** molaf joined
[05:15] *** kurahaupo_ left
[05:16] *** kurahaupo left
[05:16] *** kurahaupo joined
[05:24] *** jmerelo joined
[05:25] *** molaf left
[05:26] *** robertle left
[05:27] <jmerelo> releasable6: status

[05:27] <releasable6> jmerelo, Next release in ≈2 days and ≈13 hours. 2 blockers. 132 out of 273 commits logged (⚠ 2 warnings)

[05:27] <releasable6> jmerelo, Details: https://gist.github.com/4dd5308b3e1c66324635c31a5426e087

[05:28] <AlexDaniel> kawaii: btw I'm not sure if that's realistic ↑ :)

[05:28] <AlexDaniel> kawaii: but I'm out of the loop, so judge yourself

[05:28] <jmerelo> AlexDaniel: which one of the figures is not realistic?

[05:29] <AlexDaniel> the one that says that the release will happen in 2 days :)

[05:32] <jmerelo> AlexDaniel: right. One of the blockers is not a blocker, also: https://github.com/rakudo/rakudo/issues/2779

[05:32] <AlexDaniel> ah alright

[05:33] <jmerelo> AlexDaniel: although the PR has not been accepted: https://github.com/sergot/http-useragent/pull/223 Anyway, not Rakudo's thing.

[05:35] <Elronnd> why is it so hard to make a contructor in p6?

[05:35] <Elronnd> why do I need to create new _and_ bless?

[05:36] <jmerelo> Elronnd: bless starts the construction chain

[05:36] <jmerelo> Elronnd: you can use default constructors if you don't mind using nameds.

[05:37] <Elronnd> but—why do both exist?

[05:40] <jmerelo> Elronnd: new creates the object, bless bakes the attributes into an object.

[05:40] <jmerelo> (by calling the building chain)

[05:40] <AlexDaniel> Elronnd: yeah but do you need a constructor? What's the reason you can't use TWEAK?

[05:41] <Elronnd> because I didn't know about it :p

[05:41] * Elronnd looks up tweak

[05:43] <Elronnd> hmmm

[05:43] <AlexDaniel> yeah

[05:43] <Elronnd> looks...I don't know

[05:43] <Elronnd> ugly

[05:43] <AlexDaniel> huh

[05:43] <Elronnd> hack-ish

[05:43] <Elronnd> maybe I'm just used to languages where complex construction is normal

[05:48] *** domidumont joined
[05:49] *** sauvin joined
[05:50] *** sauvin left
[05:51] <jmerelo> Elronnd: this is phased rather than complex.

[05:51] *** sauvin joined
[05:52] <Elronnd> jmerelo: what do you mean?  Like, construction happens in phases rather than just having one complex step?

[05:52] <jmerelo> Elronnd: correct

[05:53] <Elronnd> hmmm

[05:54] <Elronnd> Idk, I think I like all the complexity to be in one place.  Constructors always have to be ugly, so why not compartmentalize that ugliness?

[05:54] <jmerelo> Elronnd: because you can delegate and hide ugliness all across the class hierarchy

[05:54] <jmerelo> Elronnd: also, Roles make stuff a bit more complicated. And there's the metamodel.

[05:55] <Elronnd> I don't want to hide the ugliness.  I want it out in the open because that's where the bugs are

[05:59] <jmerelo> Elronnd: well, it's quite in the open, but close to where it's actually used, because that's where the bugs are.

[06:00] <jmerelo> Elronnd: I mean, I'm not an adamant defender of this, but I guess that if you've got a meta-object protocol and roles, you will have to make some concessions.

[06:01] <jmerelo> Elronnd: plus new is really discouraged. It should only be used if you're pretty sure it's a final class, because unlike submethods it does not get called when subclasses are created.

[06:03] <jmerelo> Elronnd: Perls are the land of TIMTOWTDI. You can use the default constructor, you can create a custom BUILD phase to build the object just the way you want, you can let it build and then TWEAK, and you can create a new new API to start the chain.

[06:03] <jmerelo> Elronnd: it's up to you, there's more than one way to do it.

[06:06] *** Sgeo_ left
[06:07] *** Sgeo_ joined
[06:08] *** ayerhart left
[06:10] *** ayerhart joined
[06:14] <Geth> ¦ doc: c4bc0160a8 | (JJ Merelo)++ | 3 files

[06:14] <Geth> ¦ doc: Reflow and some method definition adaptation

[06:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c4bc0160a8

[06:14] <Geth> ¦ doc: 4bf022bc33 | (JJ Merelo)++ | doc/Type/Attribute.pod6

[06:14] <Geth> ¦ doc: Dedups is required, refs #2745

[06:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4bf022bc33

[06:16] *** abraxxa joined
[06:17] *** abraxxa left
[06:18] *** abraxxa joined
[06:18] <Elronnd> jmerelo: BSCINABTE?

[06:20] <jmerelo> TIMTOWTDI: There is more than one way to do it :-)

[06:22] <Elronnd> BSCINABTE: But Sometimes Consistency Is Not A Bad Thing Either ;)

[06:22] <jmerelo> Elronnd: well, Perls are strangely consistent(TM).

[06:22] *** abraxxa left
[06:23] *** abraxxa joined
[06:25] *** MilkmanDan left
[06:25] *** zacts left
[06:26] <Elronnd> is there a guide somewhere on how to use nqp?  I want to use it for stuff that needs to be fast

[06:28] *** MilkmanDan joined
[06:30] <ufobat_> Elronnd, https://github.com/perl6/nqp/blob/master/docs/ops.markdown

[06:34] <Elronnd> thanks

[06:34] <Elronnd> is there anything SIMD?

[06:35] <jmerelo> Elronnd: in general, it need not be faster than Perl 6

[06:35] *** jmerelo left
[07:10] <lumin> Is it possible to define an infix operator "in" so that I can write `"sub" in "string"` instead of `"string".contains("sub")` ?

[07:17] <SmokeMachine> m: multi infix:<in>(Str $sub, Str $str) { $str.contains: $sub }; say "sub" in "string"

[07:17] <evalable6> SmokeMachine, rakudo-moar 5669bc923: OUTPUT: «False␤»

[07:17] <SmokeMachine> m: multi infix:<in>(Str $sub, Str $str) { $str.contains: $sub }; say "tri" in "string"

[07:17] <evalable6> SmokeMachine, rakudo-moar 5669bc923: OUTPUT: «True␤»

[07:17] *** chuff joined
[07:17] <SmokeMachine> lumin: ^^

[07:18] <lumin> SmokeMachine: wow, cool!

[07:20] *** rindolf joined
[07:20] <SmokeMachine> m: multi infix:<in>(Str $sub, Str $str) { $str.contains: $sub }; multi infix:<in>(Str $sub, %str) { %str{ $sub }:exists }; say "sub" in "string"; say "bla" in { :42bla, :13ble }

[07:20] <evalable6> SmokeMachine, rakudo-moar 5669bc923: OUTPUT: «False␤True␤»

[07:21] <lumin> the newly defined infix operator doesn't work in REPL

[07:27] *** Manifest0 left
[07:32] *** Manifest0 joined
[07:32] <discord6> <Vendethiel> REPL has weird scopes, but I still think it should work

[07:45] *** Manifest0 left
[07:47] <Xliff> .seen holli

[07:47] <yoleaux> I saw holli 21 Oct 2017 17:50Z in #perl6: <holli> oh hey tina :) sup?

[07:47] <Xliff> .seen holliholzer

[07:47] <yoleaux> I haven't seen holliholzer around.

[07:47] <Xliff> .seen hholzer

[07:47] <yoleaux> I haven't seen hholzer around.

[07:48] <Xliff> .seen holzelro

[07:48] <yoleaux> I haven't seen holzelro around.

[07:48] <Xliff> .seen holzero

[07:48] <yoleaux> I haven't seen holzero around.

[07:48] <Xliff> .seen holzer

[07:48] <yoleaux> I haven't seen holzer around.

[07:49] <Xliff> Has irc.perl6.org been restored?

[07:52] *** Manifest0 joined
[07:56] *** Sgeo_ left
[07:56] *** Sgeo_ joined
[07:57] *** pmurias joined
[08:05] *** lasse joined
[08:06] *** reach_satori left
[08:14] *** zakharyas joined
[08:22] *** veesh left
[08:22] *** veesh joined
[08:26] <moritz> no

[08:27] *** holyghost joined
[08:27] *** cpan-p6 left
[08:27] <holyghost> Hello

[08:27] *** cpan-p6 joined
[08:27] *** cpan-p6 left
[08:27] *** cpan-p6 joined
[08:28] <holyghost> Apparently, there has been a crack on the cpan database for the version number of Game::QFG and Game::AI::Messaging

[08:29] <holyghost> So proceed with caution if you blame me for broken code

[08:29] <Elronnd> timotimo: any chance you can add SDL_QueryTexture to the sdl2 bindings?

[08:29] *** veesh left
[08:29] <timotimo> shouldn't be a problem at all

[08:29] <lumin> I'm reading https://docs.perl6.org/language/create-cli . Then I still got no idea on the way to write a CLI program with several different actions. For example the "ip" from iproute2: ip addr, ip route, ip link, etc. Any advice?

[08:30] <lumin> In python this can be achieved by subparser (argparse)

[08:30] <Elronnd> thanks!

[08:34] <timotimo> hm, i have a bunch of other changes that would go with it into a release but the stuff isn't finished yet, hrmpf

[08:35] <Elronnd> oh yeah, while you're here

[08:35] <timotimo> lumin: you can just put a literal string as the first argument in the multi subs, but it's not perfect. for example, you will want to set the "named arguments allowed everywhere" flag, too

[08:35] <Elronnd> can I ask what the 1234s mean in https://github.com/timo/SDL2_raw-p6/blob/master/examples/white-noise.p6#L30?

[08:35] <timotimo> oh, that's just trash

[08:36] <timotimo> see the comment in line 39

[08:36] <Elronnd> why do you need all this finicky casting?  Why not a plain Pointer[uint8]?

[08:36] <timotimo> er, 37 and 38 rather

[08:36] <Elronnd> but like, why do you  need a buffer in the first place?

[08:36] <timotimo> i tried it and it didn't work and then ten years passed and i didn't try fixing it ;)

[08:36] <Elronnd> hah, alright!

[08:36] <Elronnd> I will dutifully copy it and have the same experience 10 years hence

[08:38] <lumin> timotimo: That sounds like the easiest solution, yet not quite graceful :-)

[08:46] <Elronnd> also SDL_PollEvent seems to be broken

[08:46] <Elronnd> I can't get it to do anything sensible

[08:47] <Elronnd> tried using castevent but that says "Cannot look up attributes in a SDL2::Raw::SDL_Event type object"

[08:50] *** gregf_ joined
[08:50] *** pecastro joined
[08:50] *** veesh joined
[08:51] <timotimo> that means it gave you a null pointer

[08:51] <timotimo> how do you use it? i haven't had problems with it yet

[08:54] <Elronnd> sprunge.us/3QfBkS like this

[08:55] <cpan-p6> New module released to CPAN! Git::Blame (0.0.1) by 03JMERELO

[08:57] *** reach_satori joined
[08:58] <timotimo> maybe SDL_CastEvent is just wrong

[08:58] <timotimo> we do have CUnion now, so maybe CastEvent should be deprecated

[08:58] <Elronnd> oh, yeah

[08:58] <Elronnd> I bet what happened is, sdl added some new event types

[08:58] <Elronnd> I was getting weird errors without castevent, though

[08:59] <timotimo> huh, but in that case SDL_Raw just returns the original event object

[08:59] <Elronnd> Hmmm

[09:00] <Xliff> lumin: You can also do this: Use "sub MAIN ($cmd, *%opts)" as your signature, then just use given/when to run the right sub for $cmd. That each sub takes %opts as an argument.

[09:00] <timotimo> does outputting the event with .perl or so giv anything interesting?

[09:01] <Xliff> m: sub a ( say "Ehhh1" }; my $a = 'a'; "$a"()

[09:01] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/FbVU0ZS29P␤Invalid…»

[09:01] <evalable6> Xliff, Full output: https://gist.github.com/f63aef6beafa00a51cdf13c16c1faf6f

[09:01] <Xliff> m: sub a ( say "Ehhh1" }; my $a = 'a'; &"$a"()

[09:01] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/rwd1BAescA␤Invalid…»

[09:01] <evalable6> Xliff, Full output: https://gist.github.com/ecd13de51c999a874f3f9bbd17c4f03a

[09:01] <Xliff> huh

[09:01] <Elronnd> timotimo: .perl says SDL2::Raw::SDL_Event

[09:01] <Elronnd> when I try to use the event, without casting it, I get

[09:01] <Xliff> m: sub a { say "Ehhh1" }; my $a = 'a'; &"$a"()

[09:01] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/0L6NYZ1kNu␤Name mu…»

[09:01] <evalable6> Xliff, Full output: https://gist.github.com/9bd84cc3e9031438834e704915ca2443

[09:01] <Elronnd> Native call expected return type with CStruct representation, but got a P6opaque (Scalar)

[09:01] <timotimo> without a .new?

[09:02] <timotimo> oh

[09:02] <Xliff> m: sub a { say "Ehhh1" }; my $a = 'a'; "$a"()

[09:02] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at /tmp/hsxAzsZnGQ line 1␤␤»

[09:02] <timotimo> you'll need to .new it first

[09:02] <Elronnd> ohh

[09:02] <timotimo> before you can call SDL_CastEvent on it

[09:02] <timotimo> er

[09:02] <timotimo> before you can PollEvent on it

[09:02] <Xliff> m: sub a { say "Ehhh1" }; my $a = 'a'; &("$a")()

[09:02] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at /tmp/2vIjXgX94O line 1␤␤»

[09:02] * Elronnd *facepalms*

[09:02] <Xliff> Well... I'm sure there's a way you can do what I am trying to.

[09:02] <Xliff> m: sub a { say "Ehhh1" }; my $a = 'a'; &($a)()

[09:02] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at /tmp/lYirwdmoZN line 1␤␤»

[09:03] <Xliff> Fuggedy.

[09:03] <Xliff> m: sub a { say "Ehhh1" }; my $a = 'a'; "\&{$a}"()

[09:03] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at /tmp/V3mP3SSlV3 line 1␤␤»

[09:05] <Xliff> lumin: If all of your subs are in a static class, you can do it this way.

[09:05] <Xliff> m: class A { method a { say "Ehhh1" }; }; my $a = 'a'; A."$a"()

[09:05] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «Ehhh1␤»

[09:06] <Xliff> So now, class A contains a method for each command. and then you don't need the given/when statement.

[09:07] <Xliff> Heck, you could even drop the class and use a hash!

[09:07] <Xliff> TMTOWTDI!

[09:08] <moritz> depends on your plans for extensibility

[09:10] <Xliff> Sure.

[09:10] *** lizmat_ is now known as lizmat

[09:10] <Xliff> If you want real extensibility, use a has and Pluggable.

[09:11] <Xliff> s/has/hash/

[09:12] <moritz> or OO and sublclassing / roles

[09:20] <SmokeMachine> m: multi MAIN("addr") {}; multi MAIN("route") {}; multi MAIN("link") {}

[09:20] <evalable6> SmokeMachine, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 2) Usage:␤  /tmp/vCQ4DU4Cex addr␤  /tmp/vCQ4DU4Cex route␤  /tmp/vCQ4DU4Cex link␤»

[09:23] <SmokeMachine> m: sub a { say "Ehhh1" }; my $a = 'a'; &("$a")

[09:23] <evalable6> SmokeMachine, rakudo-moar 37b7ef7ce: OUTPUT: «»

[09:23] <SmokeMachine> this worked on my machine...

[09:23] <jnthn> Hm, you didn't call it?

[09:23] <yoleaux> 01:57Z <MasterDuke> jnthn: https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-05-03#l2 (but really starting a couple lines down) has some more info somewhat relevant to <statement> reporting an NQPArray

[09:24] <jnthn> m: sub a { say "Ehhh1" }; my $a = 'a'; &("$a")()

[09:24] <evalable6> jnthn, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at /tmp/X2wtCqN6MP line 1␤␤»

[09:24] <jnthn> Ah, also it's the wrong syntax for an indirect lookup :)

[09:24] <SmokeMachine> m: sub a { say "Ehhh1" }; my $a = 'a'; ::("$a")

[09:24] <evalable6> SmokeMachine, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) No such symbol 'a'␤  in block <unit> at /tmp/eGSvLtb46q line 1␤␤»

[09:24] <SmokeMachine> m: sub a { say "Ehhh1" }; my $a = 'a'; ::("&$a")

[09:24] <evalable6> SmokeMachine, rakudo-moar 37b7ef7ce: OUTPUT: «»

[09:24] <jnthn> m: sub a { say "Ehhh1" }; my $a = 'a'; ::("&$a")()

[09:24] <evalable6> jnthn, rakudo-moar 37b7ef7ce: OUTPUT: «Ehhh1␤»

[09:26] <Xliff> O I C!

[09:27] <Xliff> (SmokeMachine && jnthn)++

[09:27] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/gfYmcZrp/image.png

[09:28] <Xliff> SmokeMachine: You might want to insert a \ before the &

[09:28] <jnthn> SmokeMachine: first one "works" because ' is what you're using for shell quoting too :)

[09:28] <jnthn> So what Perl 6 actually sees is my $a = a;

[09:29] <Xliff> jnthn: I have some issues to report. Can you help me file the bug report?

[09:29] <SmokeMachine> yes!!! sorry!!! I copied and havent seen the '!!! sorry!

[09:29] <Xliff> It would help if we had IRC logs, but we currently do not.

[09:29] <jnthn> SmokeMachine: No worries, I only know to look for that becuase I've done the same so often :P

[09:30] <Xliff> However... latest versions of rakudo can't compile GTKPlus. Latest version that I can compile the whole project on is 2019.03.01-246

[09:30] <Xliff> m: $*PERL.compiler.version.say

[09:30] <evalable6> Xliff, rakudo-moar 37b7ef7ce: OUTPUT: «v2019.03.1.275.g.37.b.7.ef.7.ce␤»

[09:30] <Xliff> Latest one I've tested is 2019.03.1-272

[09:31] <Xliff> Since this involves p6-GtkPlus, it's kinda tricky to compile. Should I just file a rakudobug with a complete set of replication steps?

[09:32] <Xliff> Especially since this problem seems resistant to golfing.

[09:32] <jnthn> Xliff: You can, but the chances of it being worked on increase enormously if it's either bissected to a particular commit or golfed.

[09:33] <Xliff> jnthn: *sigh*

[09:33] <Xliff> I know.

[09:33] <jnthn> How does it fail?

[09:33] <jnthn> "Can't compile" is rather underspecified.

[09:33] <Xliff> On -272, memory use increases dramatically when it reaches a particular point in the build process.

[09:34] <Xliff> Eventually, it reaches a module (each module in project is compiled via perl6 --stagestats -e 'use <module>', but using dependency order)

[09:34] <Xliff> where it just stops. The process hangs, and continues to consume resources until the system bogs down.

[09:36] <Xliff> On -272, it stopped here: https://github.com/Xliff/p6-GtkPlus/blob/master/BuildList#L266

[09:36] <Xliff> Build script is here: https://github.com/Xliff/p6-GtkPlus/blob/master/build.sh

[09:37] <jnthn> OK, please set RAKUDO_MODULE_DEBUG=1 in the environment and run that failing step

[09:38] <Xliff> OK. Let me see if I can switch and do that without having to reinstall EVERYTHING.

[09:39] <timotimo> hold on, we don't have irc logs?

[09:39] <Xliff> irc.perl6.org is down

[09:39] <timotimo> https://colabti.org/irclogger/irclogger_log/perl6?date=2019-05-03#l365

[09:39] <Xliff> I don't know if channel is still getting logged.

[09:39] <timotimo> it has always just been a forward AFAIK

[09:39] <Xliff> Ah! Ok. Good.

[09:40] <Xliff> Jnthn. OK. I hit it. Do you want the entire log or just the module that started the hang?

[09:42] *** rindolf left
[09:42] *** veesh left
[09:43] <jnthn> Xliff: The one that hands, but please incldue it in the bug report; I've got something else I need to work on at the moment.

[09:44] <jnthn> *hangs

[09:44] <Xliff> jnthn: Writing it now. I'm also including the output from the previous module for comparison.

[09:49] *** veesh joined
[09:49] <Xliff> https://github.com/rakudo/rakudo/issues/2873

[09:53] *** rindolf joined
[09:56] <holyghost> Xliff, what are you writing with GTK ?

[09:58] <Xliff> holyghost: Anything I can.

[09:58] <holyghost> nice

[09:58] <Xliff> I guess you could say I am writing a version of "GTK::Complex: as opposed to jnthn's GTK::Simple

[09:59] <Xliff> If you just need a UI, GTK::Simple works great.

[09:59] <holyghost> I had to write and editor in GTK+ 1.2 in 1998 when I was still in college, now with the Cairo backend, it's neat

[09:59] <holyghost> s/and/an

[09:59] <Xliff> But if you need detailed signals and callbacks, then you'd have to use mine.

[09:59] <holyghost> right, and writing other widgets ?

[10:00] <Xliff> This is imperative if you want to use more complex widgets like GtkTextView

[10:00] <Xliff> Subclassing widgets is not yet in scope. Probably won't be. I may have to add another module for that...

[10:00] <Xliff> "GTK::Subclass", maybe.

[10:00] <Xliff> or "GTK::Class"

[10:01] <holyghost> cool, I mostly use SDL, as I know it better, I like to write a full widget system with it, e.g. game widgets

[10:01] *** domidumont left
[10:01] <holyghost> GTK packages are a good thing though

[10:02] <holyghost> It's very straightforward to use its API

[10:02] <timotimo> i want to build a binding for Dear Imgui

[10:02] <Xliff> Dear Imgui?

[10:02] <timotimo> but i've kind of got a few too many projects at the moment

[10:02] <Xliff> Want help? 8-)

[10:02] <holyghost> same here, I need to fix docs ASAP

[10:03] <timotimo> if you want to completely do it, sure, lol

[10:03] <Xliff> LOL! I have my own projects, too!

[10:03] <timotimo> cimgui comes with a description file

[10:04] <timotimo> which should give you the ability to just turn it into a NativeCall-based module, or even build it dynamically during precompilation

[10:05] <holyghost> good feature

[10:06] <Xliff> timotimo: Is that the libname?

[10:06] <timotimo> yes

[10:07] <holyghost> bindings to Ogre 3D (ogre3d.org) would be nice, apple's spritekit is about the same system, OGRE is older though

[10:07] <timotimo> at the start it was going to be called "imgui" but the dev realized that would be like calling, for example, gzip "compression" instead

[10:08] <Xliff> timotimo: Looking at the .h file, now.

[10:08] <Xliff> Everything looks fine, except the structs have to be hand defined, I think. Or maybe I could use trixie.

[10:08] <timotimo> why would you do that

[10:08] <Xliff> So I wouldn't have to handwrite the structs?

[10:09] <timotimo> oh hey would you look at that

[10:09] <timotimo> (one second)

[10:09] <timotimo> https://gist.github.com/timo/1edc45ba68bf8906f7d4e3d609a7b6d9

[10:10] <Xliff> 8-D

[10:12] <holyghost> with ogre3d we would have a 3D client system as panda3d uses a python API

[10:12] <holyghost> ogre is better however

[10:12] <timotimo> how about godot?

[10:12] <holyghost> far less dependencies etc

[10:13] <timotimo> what about irrlicht?

[10:13] <holyghost> lichtirr ?

[10:13] <holyghost> :-)

[10:16] <holyghost> Anyway, a nice 3D system would be great to develop in 

[10:16] <holyghost> problem with C/C++ APIs is you don't speed up your coding with a HLL such a perl6

[10:16] <holyghost> It needs more work than that, such as perl5's SDLx

[10:17] <holyghost> SDLx::App etc

[10:19] <holyghost> that's why I've put an MVC in Game::QFG, so I can speed up the SDL (1.2) dependency

[10:19] <timotimo> what does QFG stand for?

[10:19] <holyghost> I forgot about how I wanted to do its adaptiveness for generating rooms etc

[10:19] <holyghost> Quest For GLory (the sierra games)

[10:19] <timotimo> ah, i never played those

[10:20] <holyghost> You can play them in a DOS emulator e.g. dosbox.com

[10:20] <timotimo> probably also available on the internet archive

[10:20] <holyghost> many DOS/mac abandonware sites have them

[10:22] <holyghost> I'm going to use features of those games such as e.g. the Ogre which guards the kobold wizards' lair by a knowledge system (tree)

[10:22] <holyghost> then generate quests

[10:23] <holyghost> I need to find an AI or adaptive systems' engine for it

[10:23] <holyghost> It's very difficult, almost as automatic (genetic) programming

[10:23] <holyghost> which might be a good start to help out the system

[10:24] <holyghost> Quests might turn out stupid though

[10:25] <holyghost> anyway, I can hack on it from time to time, then it might do something cool

[10:26] <holyghost> It's no copyright infringement, if you must know, I'll do some graphics later on

[10:27] <holyghost> totally different stuff than the original game, except for a ruleset for e.g. the guardian ogre

[10:27] <holyghost> s/ruleset/rulesets

[10:28] *** chuff left
[10:28] <Xliff> timotimo: gist updated. :)

[10:29] <holyghost> these rulesets then go into a knowledge system and you can alter them at game loading time

[10:29] <timotimo> where?

[10:29] <holyghost> e.g. you talk to the ogre, then generate a NPC AI, character based on its talktext and their rules

[10:29] <Xliff> Read the comments

[10:30] <timotimo> oh

[10:30] <timotimo> interesting. those are not in the data?

[10:30] <Xliff> s:g/'Str()'/Str

[10:30] <timotimo> i mean ImVector_* are pretty much to be auto-generated

[10:31] <Xliff> No. I ran my h-to-p6 generator on a quick mod of the .h

[10:31] <Xliff> Put that together with what you've got and that's most of the plumbing.

[10:32] <timotimo> imgui itself doesn't pop open a window btw, so you'd want to have something else do that

[10:32] <timotimo> there's a bunch of examples, including "get imgui into a SDL window"

[10:32] <Xliff> You can use GTK::* for that, right?

[10:33] <timotimo> hm, possibly

[10:33] <Xliff> OK. If I write the classes, can you write the tests? :D

[10:33] <timotimo> not sure how best to test this stuff

[10:33] <Xliff> Me neither.

[10:34] <Xliff> OK. Well.... I will put it on my ever growing TODO list.

[10:34] <Xliff> Maybe if I'm bored with GTK stuffs, I will try this. Bookmarking gist.

[10:36] <Xliff> If I can give two commits, will bisectable tell me which commit is next to try?

[10:36] <Xliff> bisectable: help

[10:36] <bisectable6> Xliff, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Bisectable

[10:37] *** veesh left
[10:38] <holyghost> Xliff, if you do other things than just one Gtk::Comples package, you might alleviate your code later on, that's quite logical

[10:38] <holyghost> s/Comples/Complex

[10:38] <Xliff> Planning on it.

[10:38] <Xliff> It's one monolithic mass at the moment becuase I'm still working on it and it well... worksi.

[10:38] <holyghost> that's good

[10:39] <Xliff> When I get it to a decent starting point, I will make a preview release, then start breaking things into pieces.

[10:39] <holyghost> I would do that dependency wise

[10:39] <Xliff> Not until I get to the preview release, dude.

[10:39] <holyghost> ok

[10:42] <holyghost> in these days, everyone has package systems to download them, but some compile things too, GTK+ is a large deps thing

[10:43] <holyghost> there's also gnome-libs AFAIK

[10:43] <holyghost> I'm getting rusty on those :-)

[10:44] <Xliff> jnthn: OK. I have a strategty. I am bisecting, now.

[10:44] <Xliff> Will probably take all morning....

[10:46] *** reach_satori left
[10:47] *** veesh joined
[10:53] * holyghost drinks a beer

[10:54] <holyghost> I hope I can cope next week with docs for Game::AI::Messaging and Bayes::Learn and Mathx::Stat

[10:56] <holyghost> My english isn't too good

[10:58] <cpan-p6> New module released to CPAN! BSON (0.11.6) by 03MARTIMM

[10:58] <holyghost> noone else can write the docs however as it's a bit knurky

[10:59] <holyghost> martinm++

[11:04] <holyghost> I'm going to a brunch concert on sunday where my eldest daughter plays sax and flute

[11:05] <timotimo> wow, at the same time?!

[11:05] <holyghost> lol

[11:05] <timotimo> SCNR

[11:05] <holyghost> She knows those 2 instruments

[11:06] <holyghost> I'm looking forward to it :-)

[11:06] <timotimo> i can barely breathe proficiently, i have mad respects for wind instrument players

[11:06] <holyghost> :-)

[11:06] <holyghost> she has to tune the wind then

[11:07] <holyghost> my youngest also comes to the concert, I'm going to eat some nice king crab sandwiches

[11:07] <holyghost> mmmm

[11:09] <holyghost> the sunday that never ended :-)

[11:10] *** sena_kun joined
[11:11] <holyghost> hi

[11:19] <holyghost> timotimo : would someone want to get the ecosystem bot online, I don't know much about bots, but I have this machine where it can connect, so if you like I can field it

[11:19] *** pmurias left
[11:22] <holyghost> flooding it seems scary to me though

[11:25] *** domidumont joined
[11:26] *** domidumont1 joined
[11:30] *** domidumont left
[11:31] *** domidumont1 left
[11:31] *** domidumont joined
[11:32] *** domidumont left
[11:33] *** domidumont joined
[11:36] *** netrino joined
[11:38] *** jeromelanteri joined
[11:40] *** zakharyas left
[11:45] *** pmurias joined
[11:47] *** mowcat joined
[11:51] *** jeromelanteri left
[11:54] *** johnjohn101 joined
[11:59] *** mowcat left
[11:59] <lizmat> so, has the squashathon started ?

[12:01] <holyghost> jmerelo ?

[12:02] <Geth> ¦ doc: fe5044eb55 | (Elizabeth Mattijsen)++ | doc/Type/CompUnit/Repository/Installation.pod6

[12:02] <Geth> ¦ doc: Expand a bit on the reasons of CURI

[12:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fe5044eb55

[12:02] <squashable6> 🍕🍕🍕  First contribution by lizmat++! ♥

[12:02] *** alberto1 joined
[12:02] <lizmat> I guess it has  :-)

[12:09] <sena_kun> lizmat, o/

[12:10] <sena_kun> lizmat, how are you?

[12:10] <lizmat> better  :-)   not good really yet

[12:10] <lizmat> I thought I'd do some docs this weekend  :-)

[12:10] <sena_kun> lizmat, really glad you are feeling better. \o/

[12:11] <lizmat> thank you  :-)

[12:11] <sena_kun> lizmat, if you are going after docs, there are some pieces that I hope you can clarify. should I point to them?

[12:11] <lizmat> please do

[12:11] *** kensanata joined
[12:13] <sena_kun> https://github.com/perl6/doc/issues/2632 <- so we have this issue with 6.d changelog, and there are some items that, I am afraid, not so many understand. Particularly "Parameter.perl includes introspectable defaults"(and I saw your commits in this area) and there was something else, let me check the log...

[12:14] <sena_kun> lizmat, also https://colabti.org/irclogger/irclogger_log/perl6?date=2019-04-29#l901

[12:15] *** MasterDuke left
[12:16] <sena_kun> lizmat, also https://colabti.org/irclogger/irclogger_log/perl6?date=2019-04-29#l892 sounds suspicious to me, and I have no ideas why it works like that, so should be clarified and documented as a new Exception type.

[12:16] <sena_kun> that's enough from me. :)

[12:17] * sena_kun has hands full of $dayjob and $ldapjob, so cannot help much, but wishes luck to participants

[12:18] <lizmat> sena_kun: which commit is "Default Hash.of returns a Str(Any) coercer type object" from ?

[12:19] <sena_kun> lizmat, no idea. I saw https://github.com/perl6/roast/commit/34ce0e9a09e2c0d76284546c900f74bae08c6e26 that. But it clearly works with `keyof`, not with `of`. I wonder if there are mistakes possible in the changelog.

[12:20] <lizmat> sena_kun: will look at all of these over the weekend

[12:22] <sena_kun> ++lizmat

[12:24] <Xliff> *Whee* -- Bisecting an entire build process is (not) fun.

[12:25] *** Kaypie left
[12:25] *** Kaypie joined
[12:28] *** chuff joined
[12:31] * guifa is getting some segmentation faults and mallooc_errors occasionally when using hyper.  I’m assuming hash assignment isn’t super thread safe, but the error is LTA

[12:32] *** chuff left
[12:33] <lizmat> anything involving adding / removing keys from a hash, is *not* thread safe

[12:34] <lizmat> changing values in a hash should not cause segfaults afaik, but you may lose updates

[12:34] *** kensanata left
[12:35] <guifa> Yup, so that’d be it.  Problem is when it errors, it just gives a segmentation fault or a malloc_error but no line number or anything to suggest it’s a thread issue or where caused

[12:35] <lizmat> m: my $a = 0; await ^5 .map: { start { $a++ for ^10000 } }; say $a   # note that doesn't say 50000

[12:35] <evalable6> lizmat, rakudo-moar 37b7ef7ce: OUTPUT: «38868␤»

[12:36] <guifa> Yeah, I?m not saying it should magically work, just that the error message seems LTA

[12:37] <lizmat> yeah, it's on the radar

[12:38] <guifa> Ah okay, was just wondering if I needed to file an issue or not for it :-)

[12:38] <lizmat> things like that shouldn't segfault, but they are not guaranteed to produce the correct results either

[12:39] <jnthn> It's a known shortcoming. There's two things to do: 1) make things memory-safe so we don't SEGV, though you'd get dubious results (mostly "just" an implementation task), and 2) a mechanism to make such programs predictably break (a research project) :)

[12:39] <lizmat> guifa: https://6guts.wordpress.com/2014/04/17/racing-to-writeness-to-wrongness-leads/

[12:40] <guifa> Ultimately I may not need to worry about it.  Like with P6 in general, I’m aiming for a correct-but-slow, and then later correct-and-fast for the CLDR

[12:41] <guifa> It takes about a second or two to load each language’s full set of data, which isn’t awful (most people will probably onyl ever use one, unless they’re running a webserver or something, in which case a single load for 1000s of requests isn’t bad either), but I know there are going to be better ways to store/read the data

[12:41] <guifa> (ICU cheats and just loads it in as a blob, I’m not sure I want to go that far just yet)

[12:52] *** araraloren left
[12:52] *** araraloren joined
[12:52] *** veesh left
[12:57] *** leah2 left
[12:58] *** leah2 joined
[13:00] *** veesh joined
[13:04] *** _sfiguser joined
[13:05] *** domidumont1 joined
[13:05] <_sfiguser> guys i wouldl ike to start and get confident with perl, should i start with 5 or 6 ? 

[13:05] *** domidumont left
[13:07] <sena_kun> sftp, due to historical reasons, Perl 5 and Perl 6 are completely different languages. Some bits are indeed somewhat similar, but it is not like python 2/3 situation. If you want to work with Perl 5, Perl 5 is the way to go, if you fancy Perl 6, Perl 6 is the way to go.

[13:08] <Xliff> sena_kun++

[13:08] <sena_kun> oops, sorry!

[13:08] <sena_kun> _sfiguser, ^

[13:09] <sena_kun> this lightly green nickname color makes my eyes worse than usual. :(

[13:15] *** zakharyas joined
[13:20] *** Kaypie left
[13:21] *** Kaiepi joined
[13:21] *** vrurg joined
[13:25] *** johnjohn101 left
[13:41] <_sfiguser> sena_kun, i want to do some network programming, develop a port scanner or something like that...

[13:41] <daxim> then try both and see what suits you better

[13:41] <yoleaux> 25 Apr 2019 00:03Z <thundergnat> daxim: Regarding the pronunciation of 𫇵. Can't really help with that, but I will leave this without further comment. https://twitter.com/henryfhchan/status/1118688600864907265

[13:45] *** skids joined
[13:46] <_sfiguser> daxim, ok but can't find networking modules for perl6 

[13:46] <_sfiguser> like pcap stuff

[13:48] <daxim> <https://docs.perl6.org/language/nativecall> + libpcap

[13:48] <sena_kun> https://github.com/jpve/perl6-net-pcap

[13:48] <sena_kun> though probably it needs some bitrot

[13:49] <sena_kun> s/probably//

[13:51] <lizmat> unbitrotting ?

[13:51] <lizmat> :-)

[13:51] <lizmat> afk&

[13:52] <sena_kun> ugh, yes. :)

[13:54] *** Xliff left
[13:54] *** netrino left
[13:54] *** mowcat joined
[13:55] *** lucasb joined
[13:55] *** molaf joined
[13:55] *** netrino joined
[14:03] <daxim> how to interleave two lists?

[14:03] <daxim> rakudo: my @foo = 7,1,1,0; my @bar = 3,2,1; zip @foo, @bar;   # nok, expect: 7,3,1,2,1,1,0

[14:03] <evalable6> daxim, rakudo-moar 37b7ef7ce: OUTPUT: «WARNINGS for /tmp/wAqklHiV5b:␤Useless use of "zip @foo, @bar" in expression "zip @foo, @bar" in sink context (line 1)␤»

[14:03] <daxim> rakudo: my @foo = 7,1,1,0; my @bar = 3,2,1; say zip @foo, @bar;   # nok, expect: 7,3,1,2,1,1,0

[14:03] <evalable6> daxim, rakudo-moar 37b7ef7ce: OUTPUT: «((7 3) (1 2) (1 1))␤»

[14:03] *** _ramix_ joined
[14:06] <moritz> zip is documented to stop at the shortest list

[14:06] <moritz> In cases where data clipping is possible, but undesired, then consider using roundrobin instead of zip.

[14:08] *** lasse left
[14:10] *** _ramix_ left
[14:11] <daxim> rakudo: my @foo = 7,1,1,0; my @bar = 3,2,1; roundrobin(@foo, @bar).flat.say

[14:11] <evalable6> daxim, rakudo-moar 37b7ef7ce: OUTPUT: «(7 3 1 2 1 1 0)␤»

[14:12] *** lichtkind left
[14:16] *** JappleAck left
[14:17] *** yuriii left
[14:19] <moritz> m: my @foo = 7,1,1,0; my @bar = 3,2,1; roundrobin(@foo, @bar).say

[14:19] <evalable6> moritz, rakudo-moar 37b7ef7ce: OUTPUT: «((7 3) (1 2) (1 1) (0))␤»

[14:21] *** zacts joined
[14:24] *** lichtkind joined
[14:25] <holyghost> ok, I've found a ##chat channel on freenode, where I can talk somewhat, I thought you guys would have less laments from me :-)

[14:25] <holyghost> I've searched google and efnet, but everyone seems to be off irc these days of fora and chat clients

[14:25] *** domidumont joined
[14:26] <holyghost> if someone knows a channel for straights on some servre, I'd be glad to hear :o|

[14:26] <holyghost> s/servre/server

[14:28] *** domidumont1 left
[14:30] *** pmurias left
[14:32] *** pmurias joined
[14:35] *** alberto1 left
[14:44] *** domidumont1 joined
[14:47] *** domidumont left
[14:53] *** netrino_ joined
[14:54] *** netrino left
[15:04] *** discord62 joined
[15:04] *** discord62 left
[15:04] *** discord62 joined
[15:05] *** discord6 left
[15:05] *** discord62 is now known as discord6

[15:08] *** stux|RC left
[15:08] *** stux|RC joined
[15:22] *** kaare__ joined
[15:27] *** jmerelo joined
[15:28] <jmerelo> squashable6: status

[15:28] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈22 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:28] <squashable6> jmerelo, Log and stats: https://gist.github.com/5d1184d34cc9368ccee95480069fabad

[15:28] *** zacts left
[15:29] *** reach_satori joined
[15:29] <jmerelo> releasable6: status

[15:29] <releasable6> jmerelo, Next release in ≈2 days and ≈3 hours. 2 blockers. 132 out of 275 commits logged (⚠ 2 warnings)

[15:29] <releasable6> jmerelo, Details: https://gist.github.com/05e65546dbfeeeb853656ad59f30027c

[15:31] *** pminten joined
[15:32] *** gregf_ left
[15:32] *** pmurias left
[15:33] *** reach_satori left
[15:35] <jmerelo> OK, let's squash those bugs that ain't gonna squash themselves

[15:37] *** reach_satori joined
[15:38] *** netrino_ left
[15:40] *** netrino joined
[15:40] *** abraxxa left
[15:41] *** abraxxa joined
[15:41] *** abraxxa left
[15:54] *** reach_satori left
[15:54] *** reach_satori joined
[15:59] *** reach_satori left
[16:00] *** pminten left
[16:00] *** cpan-p6 left
[16:00] *** reach_satori joined
[16:00] *** cpan-p6 joined
[16:01] *** cpan-p6 left
[16:01] *** cpan-p6 joined
[16:04] *** gfldex joined
[16:05] <squashable6> 🍕 JJ++ labeled issue “document require more thoroughly” (docs): https://github.com/perl6/doc/issues/2735

[16:05] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[16:05] <squashable6> 🍕 JJ++ labeled issue “document require more thoroughly” (RFE): https://github.com/perl6/doc/issues/2735

[16:05] <lucs> Playing around copying code to try out and have this:  if $a >= $b <= $c { …

[16:05] <lucs> And it works fine.

[16:05] <lucs> Merci Perl6!

[16:06] *** reach_satori left
[16:06] <jmerelo> lucs: you wanna express your thanks, we're in the middle of a squashathon :-)

[16:06] <jmerelo> lucs: take a look at the documentation issues, help where you can :-)

[16:06] *** Grrrr left
[16:07] <lucs> jmerelo: I don't mean to be ungrateful, but I can't do it right now.

[16:07] <jmerelo> lucs: there's time until next Sunday! And you get to win a plush Camelia! 

[16:08] <lucs> I hope to get around to fixing some doc issues in the near future though.

[16:08] <lucs> The plush toy is tempting, eh! ;-)

[16:08] *** zakharyas left
[16:09] * sena_kun remembers kawaii wanting one

[16:10] <holyghost> jmerelo : where do I need to start with the squashaton ?

[16:11] <kawaii> sena_kun: sadly I'll be busy trying to do a rakudo release this weekend... Hopefully :)

[16:11] *** kensanata joined
[16:12] *** zacts joined
[16:12] <sena_kun> kawaii, good luck with the release.

[16:13] *** rindolf left
[16:17] *** zacts left
[16:17] *** zacts joined
[16:19] <jmerelo> holyghost: thanks for the interest. Start with the doc issues: https://github.com/perl6/doc/issues

[16:19] *** domidumont joined
[16:19] <jmerelo> holyghost: the 6.d issue is big, and in some cases it's only checking that it's there. Anything you need to know, let us know.

[16:20] <jmerelo> lucs: it's a nice plush toy :-)

[16:20] <jmerelo> kawaii: good luck! You've seen my comment to one of the blockers, right? TL;DR: It's not.

[16:21] <holyghost> kawaii : will it be ready next week ? I intend to do a pkgsrc NetBSD release of the latest perl6 (rakudo)

[16:22] * holyghost reads jemerelo's link

[16:22] *** domidumont1 left
[16:22] <kawaii> holyghost: planning to release this Sunday if all goes well

[16:22] <holyghost> coolness

[16:22] <holyghost> I'll work on th release next week then

[16:23] <squashable6> 🍕 JJ++ wrote a comment on “Methods `target` and `po…”: https://github.com/perl6/doc/issues/2736#issuecomment-489156000

[16:23] <jmerelo> kawaii++

[16:23] <holyghost> jmerelo : it's just the 21 open of a checklist of #2632 issues ?

[16:23] <holyghost> kawaii++

[16:23] <jmerelo> holyghost: no, there are quite a few, 270 or so.

[16:24] <jmerelo> holyghost: easy to resolve ones should be, well, easy to resolve https://github.com/perl6/doc/issues?q=is%3Aissue+is%3Aopen+label%3A%22easy+to+resolve%22

[16:25] <jmerelo> Also going through the checklist for 6.d will _really_ help. https://github.com/perl6/doc/issues/2632 We still don't have the whole list of 6.d features commented

[16:25] <jmerelo> More precisely, we don't know if we have them or not. We need to go through the checklist, some of them might have already been documented.

[16:26] <holyghost> I'll look at your latest link

[16:26] *** epony left
[16:26] <holyghost> I hope I can resolve 1, I'm too busy this weekend

[16:27] <holyghost> In fact I do not have time this weekend

[16:29] <squashable6> 🍕 JJ++ closed issue “Methods `target` and `po…”: https://github.com/perl6/doc/issues/2736

[16:29] <Geth> ¦ doc: eee08a6529 | (JJ Merelo)++ | doc/Type/Cursor.pod6

[16:29] <Geth> ¦ doc: Initiating transition from Cursor to Match

[16:29] <Geth> ¦ doc: 

[16:29] <Geth> ¦ doc: Redefinition, but now we need to transfer unexising methods from one

[16:29] <Geth> ¦ doc: to the other. Refs #2736.

[16:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/eee08a6529

[16:29] <Geth> ¦ doc: 6c3203cee2 | (JJ Merelo)++ | doc/Type/Match.pod6

[16:29] <Geth> ¦ doc: Moves target and pos to Match

[16:29] <Geth> ¦ doc: 

[16:29] <Geth> ¦ doc: And leaves Cursor as a simple alias. Closes #2736

[16:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6c3203cee2

[16:31] <Geth> ¦ doc: 7c2cd9b33a | (JJ Merelo)++ | 2 files

[16:31] <Geth> ¦ doc: Cleanup after 32736

[16:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7c2cd9b33a

[16:32] *** Geth left
[16:32] *** molaf left
[16:33] *** Geth joined
[16:33] <holyghost> sorry folks, I drank too much today, I'll see what I can do on sunday

[16:33] <jmerelo> holyghost: take care

[16:38] <jmerelo> C'mon, who wants issue 2483? https://github.com/perl6/doc/issues/2483 Just a bit of rewriting =item ⇒ =head2 or =head3 It's going to be fun!

[16:42] <guifa> jamrelo: I can’t help out this weekend I’m afraid =\ finishing up final grades.  I’m going to make it a project this summer to do a lot of doc work

[16:42] <guifa> (y tal vez pasaré por Granada)

[16:43] <guifa> jmerelo even

[16:43] <tobs> Can I run roast tests on a non-installed rakudo? `fudgeandrun --impl-cmd=$NEW_RAKUDO/perl6` fails to find Test.pm6 and the script apparently resets PERL6LIB

[16:46] <tobs> (well, I changed it not to reset the env var and it worked, but I'd still like to know if there's a more proper way)

[16:47] *** robertle joined
[16:48] <holyghost> I'm on ##chat, I have talked somewhat, I'm doing better

[16:49] <holyghost> I drank a bit on there, I'll try to make a NetBSD release of rakudo next week and work on Game::Markov and Game::AI::Messaging

[16:50] <holyghost> That way I'll be alright

[16:50] <squashable6> 🍕 JJ++ opened issue “Document NQPMatchRole methods within Match.”: https://github.com/perl6/doc/issues/2746

[16:51] <jmerelo> tobs: yes. You need to run some stuff. I was supposed to do a PR with it. Let me see if I find it

[16:58] <jmerelo> guifa: you'll be very welcome :-)

[17:00] <tobs> jmerelo: hopefully we can be friends this weekend. My calendar only says "Squashathon". Right now I'm trying my hand at R#2872 though

[17:03] <jmerelo> tobs++

[17:03] <jmerelo> tobs can't find the issue. You need to generate some stuff before doing the fudgeand run; but you don't need to fudge all tests, only some of them 

[17:04] <jmerelo> tobs: good luck with 2873. 

[17:06] <jmerelo> guifa: I'll take you on a tapas tour, if you like that thing :-)

[17:06] <guifa> jmerelo hahaha, but real tapas or the ones you pay for?  

[17:06] * guifa is traditional.  tapas aren’t tapas if they’re paid for separate from the drink

[17:07] <jmerelo> guifa: Granada is the place of the real tapas.

[17:08] <guifa> Funny, the Basque said the same thing :P

[17:08] *** Grrrr joined
[17:08] *** matias1 joined
[17:08] <jmerelo> guifa: those are pintxos, and you have to pay through your teeth.

[17:08] <guifa> (of course, they also try to claim cider and I’m like … uh… no.  And now they’re trying to escanciar the cider too and I’m just like 🤦 )

[17:09] <jmerelo> guifa: we don't have any claim on cider. Just good Alhambra beer.

[17:11] <squashable6> 🍕 JJ++ labeled issue “Document NQPMatchRole methods within Match.” (docs): https://github.com/perl6/doc/issues/2746

[17:11] <squashable6> 🍕 JJ++ labeled issue “Document NQPMatchRole methods within Match.” (new): https://github.com/perl6/doc/issues/2746

[17:11] <jmerelo> tobs: you know that's a Rakudo issue, not a doc issue, right?

[17:12] <tobs> yes, but it came up just last night.

[17:14] <tobs> and it seemed simple enough

[17:14] <jmerelo> tobs: OK :-)

[17:20] *** domidumont left
[17:24] * guifa is off for the weekend

[17:24] <holyghost> bye guifa

[17:24] <guifa> Good luck with the squashathon

[17:24] *** guifa left
[17:24] <jmerelo> guifa: thanks. Good luck with your project.

[17:26] <xinming> Is there a way to early return from a file?

[17:26] <Geth> ¦ doc: 9196284d50 | (JJ Merelo)++ | html/.htaccess

[17:26] <Geth> ¦ doc: Uncap now refs #935

[17:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9196284d50

[17:26] <Geth> ¦ doc: c1cd7a8f24 | (JJ Merelo)++ | html/.htaccess

[17:26] <Geth> ¦ doc: Fixed .htaccess

[17:26] <Geth> ¦ doc: 

[17:26] <Geth> ¦ doc: Still does not work far as I can tell, since this does not work in

[17:26] <jmerelo> xinming: exit?

[17:26] <Geth> ¦ doc: Mojolicious, but the URL is correct. Refx #935

[17:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c1cd7a8f24

[17:26] <xinming> jmerelo: exit is exiting the program

[17:27] <xinming> for example       in file test.p6    I have something like     if ... { "return here" };    the rest code will be compiled, But not run.

[17:27] <xinming> and when I try to use     require 'test.p6'      when it reached "return here";, we abort execution of test.p6

[17:28] *** patrickb joined
[17:28] <jmerelo> xinming: that's hackish

[17:28] <xinming> jmerelo: yes, hackish, Just for fast testing purpose

[17:28] <sena_kun> xinming, if you are running test files, `bail-out` maybe?

[17:28] <xinming> for now, I'll have to wrap the rest of the code, and call them as a function.

[17:29] <xinming> Not test files.

[17:29] <xinming> test some script

[17:29] <jmerelo> xinming: you could also try slurping, creating a sub around it, and doing EVAL.

[17:29] <xinming> Yes, I'm trying to avoid wrap the code as sub.

[17:29] <xinming> But if this is the only way, I'll live with it.

[17:29] <xinming> I'd say, It's a good to have feature. :-)

[17:30] <jmerelo> xinming: it's maybe less hackish. Plus it's not polluting your namespace. 

[17:30] <xinming> early returning from a file.

[17:30] <jmerelo> xinming: don't know what you're doing, but maybe my Test::Script::Output could help

[17:31] <xinming> a second

[17:32] <sena_kun> xinming, I am not sure the concept of "running a file" fits very well here. If you want to run a script(not get its symbols in scope), why not Proc::Async and then your script can `exit`?

[17:33] <squashable6> 🍕 JJ++ wrote a comment on “broken link https://docs…”: https://github.com/perl6/doc/issues/935#issuecomment-489177444

[17:34] <xinming> sena_kun: https://termbin.com/wy1q

[17:34] *** matias1 left
[17:34] <xinming> sena_kun: something like that. It's mix lib and script, for prototype, I write lib in a separate script. And later, I split them.

[17:35] <jmerelo> xinming: Hum. Maybe using phasers?

[17:35] <xinming> for now, i did something like, wrap the rest of the code as function, If it's not AS_LIB, then, I call that function.

[17:35] <xinming> jmerelo: How can we achieve that with phasers?

[17:35] <sena_kun> xinming, it looks to me like you want class xxx to live in `lib` of a distribution, and in `bin` you have `use xxx` and the script code. Trying to mix it is not totally bad, but hmmm.

[17:36] <xinming> there is nothing wrong with call as sub.

[17:36] <jmerelo> xinming: phasers run in the precomp and comp phase... 

[17:37] <xinming> sena_kun: Yes, mix them, for fast prototyping, So, for the script-as-lib.p6, I just need to add a line if %*ENV<AS_LIB> or %*ENV<EARLY_RETURN> { #`(Skip the rest of the file)  }

[17:37] <xinming> I'll check phasers.

[17:37] <sena_kun> xinming, and then you can have `if $is-lib { require Foo::Bar } else { Proc::Async.new(`foo.pl6`)... }` instead of pushing the deciding code to test-lib.p6

[17:40] *** _sfiguser left
[17:40] <xinming> It needs to be in test-lib.p6

[17:40] <sena_kun> xinming, wrapping with a sub is the way, I'd say.

[17:40] *** zacts left
[17:41] <xinming> I understand, But I hope a way to early return in a compiling file. :-)

[17:41] <xinming> that maybe good to have feature. since perl6 should do as we "want"

[17:43] <ugexe> but no one wants to consume code like that

[17:43] *** matias1 joined
[17:44] <ugexe> that makes the api to consume it whacky as hell

[17:46] *** kensanata left
[17:47] <xinming> ugexe: I said it's for fast prototyping, I'll split the lib after early development is finished.

[17:48] <xinming> the test-lib.p6  is writing the lib stuff and also sample script in test-lib.p6 directly.

[17:54] <ugexe> re: "good to have feature" -- features that encourage authors to write non-idiomatic code should be a side-effect of something else, not as a goal of TIMTOWTDI

[17:58] <tobs> commit: 2015.12 say (^3)[0 ..^ *]

[17:58] <committable6> tobs, ¦2015.12: «(0 1 2)␤»

[17:58] *** domidumont joined
[17:58] <araraloren> seems like what you guys talking is similar like __main__ of python?

[17:59] <araraloren> I am not sure 

[17:59] *** epony joined
[18:00] *** matias1 left
[18:03] <Geth> ¦ doc: 08f736ecc4 | (JJ Merelo)++ | 3 files

[18:03] <Geth> ¦ doc: Adds /type/int closes #935

[18:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/08f736ecc4

[18:03] <squashable6> 🍕 JJ++ closed issue “broken link https://docs…”: https://github.com/perl6/doc/issues/935

[18:09] *** rindolf joined
[18:25] <Geth> ¦ doc: 435336c7bd | (JJ Merelo)++ | 2 files

[18:25] <Geth> ¦ doc: Wrap up #935 eliminates wrong link

[18:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/435336c7bd

[18:28] <jmerelo> sena_kun: you're the one who's set up the mirror for perl6.org, right?

[18:28] <sena_kun> jmerelo, yes

[18:28] <jmerelo> sena_kun: documentation has not been updated since then.

[18:28] <sena_kun> jmerelo, well, technically, I own the hosting, it was timotimo++ who set up most of the things

[18:28] *** domidumont left
[18:29] <jmerelo> sena_kun: OK, I'll talk to him.

[18:29] <jmerelo> .seen timotimo

[18:29] <yoleaux> I saw timotimo 12:08Z in #perl6-dev: <timotimo> ah dang, el_che is gone already

[18:29] *** sauvin left
[18:29] <sena_kun> I also remember we had issues with building docs on the server, so we had to do it locally and rsync.

[18:30] <jmerelo> .tell timotimo the documentation is not being updated. Can you please set up a cron job or something to re-build it from time to time?

[18:30] <yoleaux> jmerelo: I'll pass your message to timotimo.

[18:30] <jmerelo> sena_kun: um. 

[18:30] <sena_kun> jmerelo, if you are familliar with rsync and have a fresh copy, I can give you access to the server

[18:30] <jmerelo> sena_kun: you should have warned me...

[18:30] <jmerelo> sena_kun: yes on both counts.

[18:31] <holyghost> ok, I'm off for the weekend

[18:31] <holyghost> I come back aftre my daughter's brunch concert

[18:31] *** holyghost left
[18:32] <sena_kun> jmerelo, do you have a public ssh key? please, PM it to me, then I'll add it to authorized_keys

[18:33] *** araraloren left
[18:33] *** matias1 joined
[18:40] <xinming> m: https://termbin.com/qw3bm

[18:40] <evalable6> xinming, Successfully fetched the code from the provided URL

[18:40] <evalable6> xinming, rakudo-moar 37b7ef7ce: OUTPUT: «｢G1｣␤Nil␤Nil␤»

[18:41] <xinming> Anyone here would tell me how do we in a single match, to match all key1 key2 and key3 out-ordered?

[18:41] <xinming> Or, we'll have to match 3 times to ensure all kv are scanned.

[18:42] <sena_kun> xinming, you can [`key1` | `key2` | `key3`] ** 

[18:42] <sena_kun> xinming, you can [`key1` | `key2` | `key3`] ** 3

[18:43] <sena_kun> it won't catch bad cases like double keys though

[18:46] <xinming> sena_kun: It's strange, Actually, Why will only ** 3 work?

[18:47] <xinming> before I tried something like [...] ** 0..3   It doesn't work. So, I thought I can't use repetition here.

[18:47] <xinming> But I found that with ** 3  worked.

[18:48] <moritz> token singlekey { key1|key2|key3 }; token allthree { :my %*SEEN; [<singlekey> <?{ !%*SEEN{ $<singlekey>][*-1]}++ }> ] ** 3}

[18:48] <moritz> you can even use the assertion to give a better error message on duplicate keys, if that's what you want

[18:49] <moritz> xinming: it should work. So we'd need a specific example of what you were doing to answer your question

[18:50] <xinming> I'm just curious why it doesn't work with  [...] ** 0..3

[18:50] <xinming> but work with  [...] ** 3    :-)

[18:52] *** khisanth_ left
[19:00] <AlexDaniel> sena_kun: what about https://github.com/JJ.keys ?

[19:00] <AlexDaniel> :)

[19:01] <jmerelo> AlexDaniel: should have thought about that :-)

[19:01] <AlexDaniel> interestingly, gpg keys are also visible on github, but you have to work harder to get them

[19:01] <AlexDaniel> https://api.github.com/users/AlexDaniel/gpg_keys

[19:01] <sena_kun> AlexDaniel, that's a smart feature I've never heard about before. But the docs are updated, so all well that ends well.

[19:06] *** khisanth_ joined
[19:09] *** jmerelo left
[19:15] *** antoniogamiz joined
[19:16] <skids> Woodi: I just pushed a quick fix to get perl6-xcb closer to "working".  You'll have to remove xinput.xml and screensaver.xml from the xcb files and there's still some issues but at least the "bindings" build and some of tests work.

[19:17] <antoniogamiz> Hi! I'm back to squash some bugs/issues :D

[19:23] *** daxim left
[19:27] <squashable6> 🍕🍕🍕  First contribution by moritz++! ♥

[19:27] <Geth> ¦ doc: d15e32a6d4 | (Moritz Lenz)++ | doc/Type/Match.pod6

[19:27] <Geth> ¦ doc: General improvements to Match documentation

[19:27] <Geth> ¦ doc: 

[19:27] <Geth> ¦ doc: * mention that Match can be an in-progress match as well

[19:27] <Geth> ¦ doc: * mention that method pos only makes sense for in-progress matches

[19:27] <Geth> ¦ doc: * orig can return a non-string

[19:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d15e32a6d4

[19:28] *** daxim joined
[19:30] <squashable6> 🍕 moritz++ wrote a comment on “Document NQPMatchRole methods within Match.”: https://github.com/perl6/doc/issues/2746#issuecomment-489213386

[19:30] <antoniogamiz> mm you can pass arguments beginning with numbers?

[19:30] <antoniogamiz> something like this:     say DateTime.new(:2016year, :3600timezone) - Duration.new(31536001.0);

[19:35] <Geth> ¦ doc: 88381417f0 | Antonio++ | 4 files

[19:35] <squashable6> 🍕🍕🍕  First contribution by antoniogamiz++! ♥

[19:35] <Geth> ¦ doc: change timezone with time zone, closes #2661

[19:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/88381417f0

[19:35] <Geth> ¦ doc: b4af072a75 | Antonio++ | doc/Type/Match.pod6

[19:35] <Geth> ¦ doc: Merge branch 'master' of github.com:perl6/doc

[19:35] <squashable6> 🍕 antoniogamiz++ closed issue “timezone vs time zone”: https://github.com/perl6/doc/issues/2661

[19:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b4af072a75

[19:36] <tobs> antoniogamiz: yes, :2016year turns into :year(2016)

[19:36] <antoniogamiz> tobs: :oo, I didnt know that, thanks

[19:37] <tobs> it's syntactic sugar that you can use in instances like `wait :2minutes` in favour of `wait minutes => 2`

[19:37] <antoniogamiz> quite useful yep

[20:01] <Geth> ¦ doc: 0ab9021d5c | (Moritz Lenz)++ | doc/Type/Match.pod6

[20:01] <Geth> ¦ doc: Document Match.chars and .make

[20:01] <Geth> ¦ doc: 

[20:01] <Geth> ¦ doc: Closes #2746

[20:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0ab9021d5c

[20:01] <squashable6> 🍕 moritz++ closed issue “Document NQPMatchRole methods within Match.”: https://github.com/perl6/doc/issues/2746

[20:07] *** vrurg left
[20:08] *** ufobat__ joined
[20:11] *** ufobat_ left
[20:14] <squashable6> 🍕 moritz++ edited issue “Nativecall function callback syntax”: https://github.com/perl6/doc/issues/2684

[20:15] <kybr> do we have a priority queue?

[20:17] <kybr> oh i see one on modules..

[20:18] <Geth> ¦ doc: antoniogamiz++ created pull request #2747: changes =item to =head3 sections #2483

[20:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2747

[20:18] <squashable6> 🍕 antoniogamiz++ opened pull request “changes =item to =head3 sections #2483”: https://github.com/perl6/doc/pull/2747

[20:20] *** kensanata joined
[20:21] <xinming> IIRC, We can make a 2 arg function to become "infix" operator

[20:21] <xinming> Is this syntax like   &[&test] ??

[20:21] <xinming> m: sub test ($a, $b) { "$a $b".say; }; "Good" [&test] "Bad"

[20:21] <evalable6> xinming, rakudo-moar 37b7ef7ce: OUTPUT: «WARNINGS for /tmp/tWPNbHQ6zK:␤Good Bad␤Useless use of &test in sink context (line 1)␤»

[20:22] <antoniogamiz> m: say $+;

[20:22] <evalable6> antoniogamiz, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/jvfgkqqsvB␤Missing…»

[20:22] <evalable6> antoniogamiz, Full output: https://gist.github.com/8aec1f15e5fc26cd43fa105f6aeba3c7

[20:22] <xinming> How do we remove this warning? I just forgot where I read this.

[20:22] <Geth> ¦ doc: c49b3117f0 | (Moritz Lenz)++ | doc/Language/regexes.pod6

[20:22] <Geth> ¦ doc: regexes: first empty of con/disjunctions are ignored.

[20:22] <Geth> ¦ doc: 

[20:22] <Geth> ¦ doc: Closes #2611

[20:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c49b3117f0

[20:22] <squashable6> 🍕 moritz++ closed issue “null alternatives are not documented in regexes”: https://github.com/perl6/doc/issues/2611

[20:24] <xinming> hmm, Ignore me, Finally I got it here   https://docs.perl6.org/language/functions#Subroutines

[20:24] <antoniogamiz> in #2632 one item says: Trying to use variables $;, $,, $., $\, $(, $),

[20:24] <antoniogamiz> $<, $>, $/, $\, $[, $-, $+, and $@

[20:24] <antoniogamiz> throws X::Syntax::Perl5Var

[20:25] <antoniogamiz> but when you use that variables it doesnt throw anything

[20:25] <antoniogamiz> someone knows why?

[20:26] <tobs> antoniogamiz: didn't it throw (in the form of a compiler error) when you tried above?

[20:27] <tobs> in case of $+ at least

[20:27] <antoniogamiz> mmm but it isnt X::Syntax::Perl5var

[20:28] <antoniogamiz> m: say $,;

[20:28] <evalable6> antoniogamiz, rakudo-moar 37b7ef7ce: OUTPUT: «(Any)␤»

[20:28] <antoniogamiz> m: say $\;

[20:28] <evalable6> antoniogamiz, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/7uBXJwAvDd␤Unsuppo…»

[20:28] <evalable6> antoniogamiz, Full output: https://gist.github.com/37b930d6e276bc7336032dc3ca25c6f6

[20:29] <antoniogamiz> mmmm in some cases it works

[20:30] <ugexe> bisectable: CATCH { default { say $_.perl } }; say $,;

[20:30] <bisectable6> ugexe, On both starting points (old=2015.12 new=37b7ef7) the exit code is 0 and the output is identical as well

[20:30] <bisectable6> ugexe, Output on both points: «(Any)␤»

[20:31] <tobs> m: say $, = 'something'

[20:31] <evalable6> tobs, rakudo-moar 37b7ef7ce: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/LkYJLSD0uq␤Unsupported use of $, variable; in Perl 6 please use .join() method␤at /tmp/LkYJLSD0uq:1␤------> 03say $,08⏏04 = 'something'␤»

[20:33] <tobs> according to Grammar.nqp, that exception is triggered if you try to assign to $,

[20:34] *** DarthGandalf left
[20:34] <antoniogamiz> mmmmm ok. thanks tobs, that should appear in the docs 

[20:34] <squashable6> 🍕 moritz++ wrote a comment on “Type Graph: what is it good for?”: https://github.com/perl6/doc/issues/2584#issuecomment-489231176

[20:34] <squashable6> 🍕 moritz++ edited issue “type-graph.txt: what is it good for?”: https://github.com/perl6/doc/issues/2584

[20:36] <moritz> can we close #2559 because it's not a bug?

[20:36] <moritz> a method is a routine after all

[20:37] *** DarthGandalf joined
[20:38] <moritz> duckit, I'm closing it, and people can reopen it if they object

[20:39] <squashable6> 🍕 moritz++ wrote a comment on “https://docs.perl6.org/r…”: https://github.com/perl6/doc/issues/2559#issuecomment-489232396

[20:39] <squashable6> 🍕 moritz++ closed issue “https://docs.perl6.org/r…”: https://github.com/perl6/doc/issues/2559

[20:39] <squashable6> 🍕 antoniogamiz++ wrote a comment on “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632#issuecomment-489232446

[20:45] *** molaf joined
[20:47] <squashable6> 🍕 moritz++ wrote a comment on “create standard location…”: https://github.com/perl6/doc/issues/2195#issuecomment-489234681

[20:47] *** skids left
[20:52] <Geth> ¦ doc: f5139e6d58 | Antonio++ | template/header.html

[20:52] <Geth> ¦ doc: add autofocus to search bar #2657

[20:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f5139e6d58

[21:00] <squashable6> 🍕🍕🍕  First contribution by taboege++! ♥

[21:00] <Geth> ¦ doc: taboege self-assigned Too many :skip-tests https://github.com/perl6/doc/issues/2738

[21:10] *** matias1 left
[21:39] *** unicodable6 left
[21:39] *** benchable6 left
[21:39] *** undersightable6 left
[21:39] *** committable6 left
[21:39] *** notable6 left
[21:39] *** nativecallable6 left
[21:39] *** rba[m] left
[21:39] *** Sharparam left
[21:39] *** tyil[m]1 left
[21:39] *** Spot_ left
[21:39] *** Grauwolf left
[21:39] *** eveith left
[21:39] *** eiro left
[21:40] *** KotH_ joined
[21:41] *** dpk left
[21:43] *** dpk joined
[21:43] *** a3f left
[21:43] *** spacedbat left
[21:43] *** reu_ left
[21:43] *** moony left
[21:43] *** MitarashiDango[m left
[21:43] *** Demos[m] left
[21:43] *** tyil[m] left
[21:43] *** Hotbees left
[21:43] *** oftl left
[21:43] *** obfusk left
[21:43] *** gks left
[21:43] *** KotH left
[22:02] <kawaii> `Too late for unit-scoped class definition; Please use the block form.`

[22:02] <kawaii> 🤔

[22:04] <kawaii> oh I understand!

[22:07] *** Sharparam joined
[22:07] *** Technaton joined
[22:07] *** eiro joined
[22:07] *** Grauwolf joined
[22:07] *** tyil[m]1 joined
[22:07] *** oftl joined
[22:07] *** gks joined
[22:07] *** Hotbees joined
[22:08] *** obfusk joined
[22:08] *** spacedbat joined
[22:08] *** Spot_ joined
[22:08] *** committable6 joined
[22:08] *** undersightable6 joined
[22:08] *** notable6 joined
[22:08] *** benchable6 joined
[22:08] *** ChanServ sets mode: +v committable6

[22:08] *** ChanServ sets mode: +v undersightable6

[22:08] *** ChanServ sets mode: +v notable6

[22:08] *** ChanServ sets mode: +v benchable6

[22:09] *** moony joined
[22:09] *** rba[m] joined
[22:09] *** a3f joined
[22:09] *** a3f left
[22:09] *** a3f joined
[22:09] *** nativecallable6 joined
[22:09] *** ChanServ sets mode: +v nativecallable6

[22:09] *** unicodable6 joined
[22:09] *** ChanServ sets mode: +v unicodable6

[22:12] *** tyil[m] joined
[22:12] *** reu joined
[22:13] *** MitarashiDango[m joined
[22:13] *** vrurg joined
[22:14] *** Demos[m] joined
[22:14] *** reach_satori joined
[22:17] *** yoleaux left
[22:18] *** yoleaux joined
[22:18] *** ChanServ sets mode: +v yoleaux

[22:24] *** rindolf left
[22:25] *** kensanata left
[22:27] *** niceplace left
[22:33] *** niceplace joined
[22:37] *** pecastro left
[22:42] *** patrickb left
[23:00] *** antoniogamiz left
[23:15] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2019/05/04/monkey-see-no-nil/

[23:32] *** lichtkind left
[23:59] *** mowcat left
