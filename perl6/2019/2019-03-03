[00:09] *** bpierre9 joined
[00:09] *** bpierre9 left
[00:11] *** Kaiepi joined
[00:28] *** cpan-p6 left
[00:28] *** cpan-p6 joined
[00:29] *** Dyonisos12 joined
[00:29] *** Dyonisos12 left
[00:31] *** vrurg joined
[00:42] <Geth> ¦ doc: 4dfc34001c | cfa++ | 2 files

[00:42] <Geth> ¦ doc: Spelling.

[00:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4dfc34001c

[00:45] *** patrickz joined
[00:48] *** patrickb left
[00:53] *** lucasb left
[00:53] *** pecastro left
[00:59] *** zachk left
[01:00] *** di0_ joined
[01:00] *** di0_ left
[01:07] *** jhford joined
[01:07] *** cpan-p6 left
[01:07] *** cpan-p6 joined
[01:12] *** jhford left
[01:19] <cpan-p6> New module released to CPAN!  (0.0.2) by 03HYTHM

[01:23] *** cpan-p6 left
[01:23] *** cpan-p6 joined
[01:34] *** comborico1611 joined
[01:35] *** MidCheck joined
[01:35] *** jeromelanteri joined
[01:36] *** MidCheck left
[01:36] *** zacts left
[01:39] *** cpan-p6 left
[01:40] *** cpan-p6 joined
[01:44] *** zacts joined
[01:46] *** hythm joined
[01:49] <hythm> '0.0.2' module name above is a typo ( the tar.gz file name was missing the name of the module), I removed it from cpan and uploaded the correct one

[01:49] <yoleaux> 26 Feb 2019 01:16Z <MasterDuke> hythm: https://github.com/rakudo/rakudo/blob/master/src/core/ShapedArray.pm6, https://github.com/rakudo/rakudo/blob/master/src/core/Shaped1Array.pm6, ... would probably be a good place to start

[01:51] *** patrickz left
[01:55] *** cpan-p6 left
[01:56] *** cpan-p6 joined
[02:02] *** hythm left
[02:05] <cpan-p6> New module released to CPAN! Grid (0.0.2) by 03HYTHM

[02:11] *** cpan-p6 left
[02:12] *** cpan-p6 joined
[02:13] *** molaf left
[02:13] *** jeromelanteri left
[02:25] *** comborico1611 left
[02:25] *** molaf joined
[02:30] *** zacts left
[02:40] *** Kaiepi left
[02:41] *** Kaiepi joined
[02:42] *** adu joined
[02:43] *** phuzion7 joined
[02:43] *** phuzion7 left
[02:44] *** moser joined
[02:48] *** agentzh left
[02:49] *** moser left
[02:51] *** cpan-p6 left
[02:51] *** cpan-p6 joined
[02:55] *** netrino left
[02:55] *** zacts joined
[02:56] *** adc joined
[02:56] *** adc left
[03:02] *** shootbird23 joined
[03:02] *** shootbird23 left
[03:12] *** aborazmeh left
[03:14] *** ShaRose24 joined
[03:15] *** leont left
[03:16] *** pnda25 joined
[03:18] *** Eduard_Munteanu7 joined
[03:19] *** ShaRose24 left
[03:20] *** pnda25 left
[03:22] *** Eduard_Munteanu7 left
[03:25] *** seance joined
[03:30] *** cpan-p6 left
[03:31] *** cpan-p6 joined
[03:37] *** P_B7 joined
[03:37] *** virmin joined
[03:37] *** virmin left
[03:37] *** P_B7 left
[03:41] *** ferreira left
[03:46] *** Xlbrag2 joined
[03:48] *** Xlbrag2 left
[03:58] *** zacts left
[04:00] *** mahafyi joined
[04:07] *** sph084blue joined
[04:09] *** cpan-p6 left
[04:09] *** cpan-p6 joined
[04:10] *** sph084blue left
[04:16] *** lupinix8 joined
[04:16] *** lupinix8 left
[04:19] *** kurahaupo left
[04:21] *** zacts joined
[04:25] *** cpan-p6 left
[04:25] *** cpan-p6 joined
[04:32] *** zacts left
[04:40] *** cpan-p6 left
[04:40] *** cpan-p6 joined
[04:45] *** AlexDani` joined
[04:46] *** drclaw1 left
[04:50] *** AlexDaniel left
[04:51] *** AlexDani` is now known as AlexDaniel

[04:56] *** cpan-p6 left
[04:56] *** cpan-p6 joined
[04:58] *** kybr left
[04:59] *** kybr joined
[05:02] *** drclaw1 joined
[05:11] *** cpan-p6 left
[05:11] *** cpan-p6 joined
[05:15] *** praxeology joined
[05:15] *** praxeology left
[05:20] *** seance left
[05:25] *** w17t joined
[05:27] *** wi15ht left
[05:35] *** zacts joined
[05:37] *** infty27 joined
[05:39] *** Platypus-Man joined
[05:40] *** Platypus-Man left
[05:42] *** infty27 left
[05:48] *** mrunix23 joined
[05:48] *** mrunix23 left
[05:50] *** cpan-p6 left
[05:51] *** cpan-p6 joined
[06:10] *** windslown joined
[06:10] *** windslown left
[06:12] *** jmbsvicetto14 joined
[06:12] *** jmbsvicetto14 left
[06:21] *** molaf left
[06:28] *** MidCheck joined
[06:37] *** cpan-p6 left
[06:37] *** cpan-p6 joined
[06:45] *** honestly24 joined
[06:46] *** ancarda3 joined
[06:50] *** honestly24 left
[06:51] *** ancarda3 left
[06:53] *** cpan-p6 left
[06:53] *** cpan-p6 joined
[07:00] *** zacts left
[07:01] *** adu left
[07:01] *** adu joined
[07:02] *** adu left
[07:02] *** adu joined
[07:02] *** adu left
[07:02] *** Johanna_1 joined
[07:03] *** Johanna_1 left
[07:03] *** adu joined
[07:03] *** adu left
[07:04] *** adu joined
[07:04] *** adu left
[07:04] *** cornholio6 joined
[07:04] *** adu joined
[07:05] *** adu left
[07:09] *** cpan-p6 left
[07:09] *** cornholio6 left
[07:09] *** cpan-p6 joined
[07:11] *** jmerelo joined
[07:12] *** zacts joined
[07:14] <jmerelo> squashable6: status

[07:14] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈6 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:14] <squashable6> jmerelo, Log and stats: https://gist.github.com/9119e176832050edd8618525c574c939

[07:14] <jmerelo> releasable6: status

[07:14] <releasable6> jmerelo, Next release will happen when it's ready. 2 blockers. 319 out of 336 commits logged

[07:14] <releasable6> jmerelo, Details: https://gist.github.com/17fdd3c4982580debb42280f5f059d28

[07:16] <jmerelo> m: say $;

[07:16] <camelia> rakudo-moar 43ff9f1ce: OUTPUT: «(Any)␤»

[07:16] <jmerelo> m: say "\$; is $;"

[07:16] <camelia> rakudo-moar 43ff9f1ce: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Non-variable $ must be backslashed␤at <tmp>:1␤------> 3say "\$; is 7⏏5$;"␤    expecting any of:␤        argument list␤        double quotes␤        prefix␤        term␤»

[07:16] <jmerelo> m: say "\$; is ", $;

[07:16] <camelia> rakudo-moar 43ff9f1ce: OUTPUT: «$; is (Any)␤»

[07:18] *** drclaw1 left
[07:20] <squashable6> 🍕 JJ++ wrote a comment on “Document $;”: https://github.com/perl6/doc/issues/2642#issuecomment-468996481

[07:21] *** drclaw1 joined
[07:34] <squashable6> 🍕 JJ++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[07:35] <squashable6> 🍕 JJ++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[07:44] *** sena_kun joined
[07:47] *** cpan-p6 left
[07:47] *** cpan-p6 joined
[07:51] *** cybr1d joined
[07:51] *** cybr1d is now known as Guest4705

[07:51] <squashable6> 🍕 JJ++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[07:51] *** Guest4705 left
[07:52] <Geth> ¦ doc: 29d0a6a45b | (JJ Merelo)++ | doc/Type/Cool.pod6

[07:52] <Geth> ¦ doc: Revs EVAL refs #2632

[07:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/29d0a6a45b

[07:52] <Geth> ¦ doc: 4872685f65 | (JJ Merelo)++ | doc/Language/typesystem.pod6

[07:52] <Geth> ¦ doc: Adds reason for is required, refs #2632

[07:52] <synopsebot> Link: https://doc.perl6.org/type/Cool

[07:52] <synopsebot> Link: https://doc.perl6.org/language/typesystem

[07:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4872685f65

[07:53] *** ravenousmoose joined
[07:53] *** drclaw2 joined
[07:55] *** drclaw1 left
[08:02] *** sno left
[08:03] *** sno joined
[08:05] *** Lynx_ joined
[08:08] *** daxim left
[08:10] *** Lynx_ left
[08:14] *** daxim joined
[08:14] *** steveklabnik joined
[08:15] *** Carefully joined
[08:15] *** Carefully left
[08:17] <squashable6> 🍕 JJ++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[08:18] <Geth> ¦ doc: 2196fe5582 | (JJ Merelo)++ | doc/Type/IO/Socket/Async.pod6

[08:18] <synopsebot> Link: https://doc.perl6.org/type/IO::Socket::Async

[08:18] <Geth> ¦ doc: Adds binding to port 0, refs #2632

[08:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2196fe5582

[08:19] *** steveklabnik left
[08:25] *** cpan-p6 left
[08:25] *** cpan-p6 joined
[08:41] *** cpan-p6 left
[08:41] *** cpan-p6 joined
[08:51] *** telex left
[08:51] *** Black_Ribbon left
[08:52] *** telex joined
[08:56] *** ryanakca25 joined
[08:58] *** ryanakca25 left
[09:03] *** MasterDuke left
[09:05] *** ravenousmoose left
[09:09] <squashable6> 🍕 Altai-man++ wrote a comment on “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632#issuecomment-469003272

[09:09] <squashable6> 🍕🍕🍕  First contribution by Altai-man++! ♥

[09:14] *** mpjetta20 joined
[09:18] *** mpjetta20 left
[09:20] *** cpan-p6 left
[09:20] *** cpan-p6 joined
[09:21] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[09:21] *** Finaluser000 joined
[09:24] *** Finaluser000 left
[09:28] *** MarsLevin22 joined
[09:29] <squashable6> 🍕 Altai-man++ opened issue “Collation type is not documented”: https://github.com/perl6/doc/issues/2644

[09:31] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[09:32] *** Kaiepi left
[09:33] *** MarsLevin22 left
[09:35] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[09:35] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[09:36] *** cpan-p6 left
[09:36] *** cpan-p6 joined
[09:37] <Geth> ¦ doc/document-two-dynamic-vars: 33ab4430e0 | Altai-man++ | doc/Language/variables.pod6

[09:37] <Geth> ¦ doc/document-two-dynamic-vars: Document $*USAGE and $*COLLATE

[09:37] <Geth> ¦ doc/document-two-dynamic-vars: review: https://github.com/perl6/doc/commit/33ab4430e0

[09:39] <Geth> ¦ doc: Altai-man++ created pull request #2645: Document $*USAGE and $*COLLATE

[09:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2645

[09:39] <squashable6> 🍕 Altai-man++ opened pull request “Document $*USAGE and $*COLLATE”: https://github.com/perl6/doc/pull/2645

[09:39] <squashable6> 🍕 Altai-man++ wrote a comment on “Document $*USAGE and $*COLLATE”: https://github.com/perl6/doc/pull/2645#issuecomment-469005498

[09:41] <sena_kun> bisectable6_, help

[09:41] <bisectable6_> sena_kun, Like this: bisectable6_: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Bisectable

[09:42] <sena_kun> bisectable6_, old=2015.12 new=2018.12 :(Str $x).params[0].perl

[09:42] <bisectable6_> sena_kun, On both starting points (old=2015.12 new=2018.12) the exit code is 0 and the output is identical as well

[09:42] <bisectable6_> sena_kun, Output on both points: «»

[09:42] <sena_kun> bisectable6_, old=2015.12 new=2018.12 :(Str $x).params[0].perl.say

[09:43] <bisectable6_> sena_kun, On both starting points (old=2015.12 new=2018.12) the exit code is 0 and the output is identical as well

[09:43] <bisectable6_> sena_kun, Output on both points: «Str $x␤»

[09:43] <sena_kun> hmm...

[09:45] *** rindolf joined
[09:46] <sena_kun> bisectable6_, old=2015.12 new=2018.12 my %a = 0 => 'z', 1 => 'a'; %a.min.say;

[09:46] <bisectable6_> sena_kun, Bisecting by exit code (old=2015.12 new=2018.12). Old exit code: 1

[09:46] <bisectable6_> sena_kun, bisect log: https://gist.github.com/1427d0ffb0db177bc354fb79eef8df77

[09:46] <bisectable6_> sena_kun, (2016-07-30) https://github.com/rakudo/rakudo/commit/1035edbb659da0ce4d8ab1635f92c66f6dfae592

[09:48] <sena_kun> committable6, help

[09:48] <committable6> sena_kun, Like this: committable6: f583f22,HEAD say ‘hello’; say ‘world’ # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Committable

[09:48] <sena_kun> committable6, 6c: my %a = 0 => "z", 1 => "a"; %a.min.say;

[09:48] <committable6> sena_kun, ¦6c:: «Cannot find this revision (did you mean “v6.c”?)»

[09:49] <sena_kun> 6c: my %a = 0 => "z", 1 => "a"; %a.min.say;

[09:49] <committable6> sena_kun, https://gist.github.com/fde00ba4613368a294efa8d0f8c121d3

[09:50] <sena_kun> 6c: my %a = 0 => "z", 1 => "a"; %a.max.say;

[09:50] <committable6> sena_kun, https://gist.github.com/46764d8eb084bf4d625df750f55c6c51

[09:52] <sena_kun> 6c: my %a = 0 => 'z', 1 => 'a'; say max %a;

[09:52] <committable6> sena_kun, ¦6c (36 commits): «1 => a␤»

[09:55] <squashable6> 🍕 Altai-man++ wrote a comment on “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632#issuecomment-469006681

[09:57] <sena_kun> 6c: my %a = one => 1; my %o = inner => %a; %o<inner><one>:exists.say;

[09:57] <committable6> sena_kun, ¦6c (36 commits): «True␤»

[09:58] <sena_kun> 6c: say UInt ~~ Int;

[09:58] <committable6> sena_kun, ¦6c (36 commits): «True␤»

[10:01] <Geth> ¦ doc: 92172698e3 | Altai-man++ | doc/Type/UInt.pod6

[10:01] <synopsebot> Link: https://doc.perl6.org/type/UInt

[10:01] <Geth> ¦ doc: Add explicit mention of UInt ~~ Int

[10:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/92172698e3

[10:01] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[10:02] <sena_kun> 6c: "      ".Int.say

[10:02] <committable6> sena_kun, ¦6c (36 commits): «0␤»

[10:02] <squashable6> 🍕 JJ++ wrote a comment on “Document $*USAGE and $*COLLATE”: https://github.com/perl6/doc/pull/2645#issuecomment-469007209

[10:04] <squashable6> 🍕 Altai-man++ wrote a comment on “Document $*USAGE and $*COLLATE”: https://github.com/perl6/doc/pull/2645#issuecomment-469007388

[10:07] *** netrino joined
[10:12] *** pecastro joined
[10:13] *** clarkb23 joined
[10:13] *** cpan-p6 left
[10:13] *** cpan-p6 joined
[10:17] *** clarkb23 left
[10:23] <Geth> ¦ doc: 33ab4430e0 | Altai-man++ | doc/Language/variables.pod6

[10:23] <Geth> ¦ doc: Document $*USAGE and $*COLLATE

[10:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/33ab4430e0

[10:23] <Geth> ¦ doc: dfcf1de969 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[10:23] <Geth> ¦ doc: Merge pull request #2645 from perl6/document-two-dynamic-vars

[10:23] <synopsebot> Link: https://doc.perl6.org/language/variables

[10:23] <Geth> ¦ doc: 

[10:23] <Geth> ¦ doc: Document $*USAGE and $*COLLATE

[10:23] <squashable6> 🍕 JJ++ merged pull request “Document $*USAGE and $*COLLATE”: https://github.com/perl6/doc/pull/2645

[10:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dfcf1de969

[10:23] <squashable6> 🍕 JJ++ wrote a comment on “Document $*USAGE and $*COLLATE”: https://github.com/perl6/doc/pull/2645#issuecomment-469009047

[10:24] <squashable6> 🍕 JJ++ wrote a comment on “Collation type is not documented”: https://github.com/perl6/doc/issues/2644#issuecomment-469009091

[10:24] <squashable6> 🍕 JJ++ labeled issue “Collation type is not documented” (docs): https://github.com/perl6/doc/issues/2644

[10:24] <squashable6> 🍕 JJ++ labeled issue “Collation type is not documented” (new): https://github.com/perl6/doc/issues/2644

[10:25] <rindolf> squashable6: status

[10:25] <squashable6> rindolf, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈3 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:25] <squashable6> rindolf, Log and stats: https://gist.github.com/077f145e681691156305901de845dab0

[10:28] *** lauwie joined
[10:28] *** drclaw2 left
[10:32] *** lauwie left
[10:36] <daxim> https://rakudo.org/  website is wrong

[10:43] <timotimo> daxim: i i think it's a DNS issue with the quad A entry; should work over ipv4 at the moment, right?

[10:44] <daxim> curl -4 …… does work

[10:45] <timotimo> the rakudo domain recently changed ownership, i'm not sure but i think jonathan got it?

[10:49] <sena_kun> he did

[10:49] *** cpan-p6 left
[10:49] *** cpan-p6 joined
[11:03] <timotimo> let's see when he becomes available during his travel and work to fix it up

[11:03] *** cpan-p6 left
[11:03] *** cpan-p6 joined
[11:08] *** foo15h joined
[11:08] *** foo15h left
[11:11] *** reach_satori left
[11:11] *** reach_satori joined
[11:21] *** teecee0 joined
[11:21] *** teecee0 left
[11:42] *** Kaiepi joined
[11:42] *** cpan-p6 left
[11:42] *** cpan-p6 joined
[11:55] *** dmbaturin26 joined
[11:55] *** dmbaturin26 left
[11:58] *** cpan-p6 left
[11:58] *** cpan-p6 joined
[12:15] *** cpan-p6 left
[12:15] *** cpan-p6 joined
[12:30] *** cpan-p6 left
[12:30] *** cpan-p6 joined
[12:32] <jmerelo> squashable6: status

[12:32] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:32] <squashable6> jmerelo, Log and stats: https://gist.github.com/0237603fdb458c167609e3bac6e4553c

[12:41] *** jmerelo left
[12:45] *** cpan-p6 left
[12:45] *** cpan-p6 joined
[12:49] *** mowcat joined
[12:49] *** mowcat left
[12:50] *** mowcat joined
[12:52] *** lpsmith- joined
[12:53] *** reach_satori left
[12:53] *** DrPete0 joined
[12:53] *** reach_satori joined
[12:56] *** lpsmith- left
[12:58] *** DrPete0 left
[13:11] *** patrickb joined
[13:12] *** leont joined
[13:17] *** rekishim joined
[13:17] *** rekishim left
[13:17] *** CLDZ12 joined
[13:17] *** CLDZ12 left
[13:20] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[13:20] *** lucasb joined
[13:20] *** cpan-p6 left
[13:20] *** cpan-p6 joined
[13:21] <sena_kun> 6c: say Complex.new

[13:22] <committable6> sena_kun, https://gist.github.com/629780c15d841c76109897ddc84bd86f

[13:25] *** giantm joined
[13:28] <squashable6> 🍕 Altai-man++ edited issue “Checklist for 6.d”: https://github.com/perl6/doc/issues/2632

[13:29] <Geth> ¦ doc/complex-new-method-addition: 8dbc66be7e | Altai-man++ | doc/Type/Complex.pod6

[13:29] <Geth> ¦ doc/complex-new-method-addition: Note arg-less Complex.new call

[13:29] <Geth> ¦ doc/complex-new-method-addition: review: https://github.com/perl6/doc/commit/8dbc66be7e

[13:29] *** giantm left
[13:30] <Geth> ¦ doc: Altai-man++ created pull request #2646: Note arg-less Complex.new call

[13:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2646

[13:30] <squashable6> 🍕 Altai-man++ opened pull request “Note arg-less Complex.new call”: https://github.com/perl6/doc/pull/2646

[13:31] *** reach_satori_ joined
[13:34] *** reach_satori left
[13:35] *** cpan-p6 left
[13:35] *** cpan-p6 joined
[13:36] *** pmurias joined
[13:39] *** john_parr left
[13:39] *** zacts left
[13:41] *** wendar1 joined
[13:46] *** wendar1 left
[14:11] *** aborazmeh joined
[14:11] *** aborazmeh left
[14:11] *** aborazmeh joined
[14:14] *** cpan-p6 left
[14:14] *** cpan-p6 joined
[14:15] *** kktt joined
[14:20] *** aborazmeh left
[14:22] *** molaf joined
[14:26] *** aborazmeh joined
[14:26] *** aborazmeh left
[14:26] *** aborazmeh joined
[14:31] *** aborazmeh left
[14:35] *** pmurias left
[14:46] *** reach_satori_ left
[14:47] *** reach_satori_ joined
[14:51] *** cpan-p6 left
[14:51] *** cpan-p6 joined
[14:52] *** pmurias joined
[14:53] *** reach_satori_ left
[14:55] *** w17t left
[14:58] *** catern27 joined
[14:59] *** ozfalcon10 joined
[14:59] *** ozfalcon10 left
[15:03] *** catern27 left
[15:05] *** cpan-p6 left
[15:05] *** cpan-p6 joined
[15:09] *** w17t joined
[15:17] *** reach_satori joined
[15:19] *** Zarutian1 joined
[15:20] *** jlpeters28 joined
[15:21] *** jlpeters28 left
[15:22] *** john_parr joined
[15:24] *** Zarutian1 left
[15:35] *** cpan-p6 left
[15:35] *** cpan-p6 joined
[15:37] *** nanont left
[15:42] *** spawk11 joined
[15:47] *** spawk11 left
[15:50] *** cpan-p6 left
[15:50] *** cpan-p6 joined
[15:54] <cpan-p6> New module released to CPAN! Random-Choice (0.0.1) by 03TITSUKI

[15:57] *** shinobi_cl joined
[15:58] <shinobi_cl> hello all :) So, whats the deal about 6.d and 6.c? The recommended version in 2018.10 is 6.c, when is the official transition to 6.d happening?

[16:02] <sena_kun> it is already done, I think

[16:02] <sena_kun> c: say $*PERL

[16:02] <committable6> sena_kun, Seems like you forgot to specify a revision (will use “v6.c” instead of “say”)

[16:03] <Geth> ¦ doc: 5cb674b0db | cfa++ | 2 files

[16:03] <Geth> ¦ doc: Remove trailing whitespace.

[16:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5cb674b0db

[16:03] <sena_kun> um, I suddenly forgot how to do this thing...

[16:03] <committable6> sena_kun, https://gist.github.com/affb4b0ecff9ff500c2caa9c8d7697d7

[16:03] <sena_kun> m: say $*PERL

[16:03] <camelia> rakudo-moar 43ff9f1ce: OUTPUT: «Perl 6 (6.d)␤»

[16:03] *** dwiesner joined
[16:04] <sena_kun> shinobi_cl, v6.d is used by default since 2018.11, if I recall correctly. Nonetheless, you can enforce usage of v6.c with `use v6.c`.

[16:04] *** dwiesner left
[16:04] <sena_kun> change log is available at https://github.com/perl6/roast/blob/master/docs/announce/6.d.md

[16:05] *** Kaiepi left
[16:05] *** cpan-p6 left
[16:05] <sena_kun> however, not that those were changed to the language specification, some of them are e.g. clarifications/documenting existing behavior, not changes. But some are behavior changes, of course.

[16:05] *** cpan-p6 joined
[16:08] <sena_kun> *note that those were

[16:17] *** adamm19 joined
[16:17] *** adamm19 left
[16:19] *** jmerelo joined
[16:20] *** molaf left
[16:20] <jmerelo> squashable6: log 2019-03-02

[16:20] <squashable6> jmerelo, Log and stats: https://gist.github.com/fd42ad595be016297ef2987c62cb8283

[16:24] *** kktt left
[16:25] <cpan-p6> New module released to CPAN! Random-Choice (0.0.2) by 03TITSUKI

[16:30] *** Black_Ribbon joined
[16:45] *** cpan-p6 left
[16:45] *** cpan-p6 joined
[16:48] *** mahafyi left
[16:53] *** ravenousmoose_ joined
[16:58] *** Sgeo__ joined
[17:00] *** cpan-p6 left
[17:00] *** ravenousmoose joined
[17:00] *** Sgeo left
[17:00] *** cpan-p6 joined
[17:03] *** ravenousmoose_ left
[17:04] *** belst20 joined
[17:06] *** belst20 left
[17:11] <jmerelo> releasable6: status

[17:11] <releasable6> jmerelo, Next release will happen when it's ready. 2 blockers. 319 out of 337 commits logged

[17:11] <releasable6> jmerelo, Details: https://gist.github.com/218fad0fa752f579ed017bcd61332262

[17:12] <jmerelo> And the winner of the plush Camelia for the documents squashathon is... 

[17:12] <jmerelo> ... drumroll ....

[17:12] <AlexDaniel> \o/ \o/ \o/

[17:12] <jmerelo> ... by a single contribution ...

[17:12] <jmerelo> ... I think I've got their nick right ...

[17:12] <AlexDaniel> wait why single

[17:13] <AlexDaniel> there were at least 2 prs by someone

[17:13] <AlexDaniel> are you sure? :)

[17:13] <jmerelo> AlexDaniel: I count everything

[17:13] <jmerelo> And you are interrupting.

[17:13] <jmerelo> Let's start over again

[17:13] <jmerelo> The winner is....

[17:14] <jmerelo> ... unless someone objects ...

[17:14] <jmerelo> sena_kun: you're the winner, with 21 contributions! https://github.com/JJ/p6-app-squashathons/blob/master/resources/data/squashathon-Mar-2019.csv

[17:14] * guifa objects.  

[17:14] <guifa> Oops too late :P

[17:14] <sena_kun> jmerelo, how comes, if you are the winner? :)

[17:14] <jmerelo> you can post-object

[17:14] <jmerelo> sena_kun: I'm not eligible

[17:14] <guifa> BEGIN object

[17:15] <jmerelo> guifa: :-)

[17:15] *** cpan-p6 left
[17:15] *** cpan-p6 joined
[17:15] <AlexDaniel> sena_kun: “OK, I'm organizing this squashathon… aaaand… I WIN!!” :)

[17:15] <jmerelo> sena_kun: congratulations! You need to email lizmat with your coordinates to have a plush camelia sent to you

[17:15] <jmerelo> AlexDaniel: I would do that. But I already have the plush camelia.

[17:16] <AlexDaniel> xD

[17:16] <AlexDaniel> it's fair

[17:16] <sena_kun> well, I just wanted to do some other stuff on my weekend after a hellish week with Comma (though the results are extra nice)...

[17:16] <sena_kun> and I have a Camelia already. ;) But I am pretty surprised and happy right now, so won't resist further. :)

[17:16] <sena_kun> \o/

[17:16] <AlexDaniel> jmerelo: no objections, your table is pretty great actually

[17:17] <jmerelo> sena_kun: thanks! Now it would be great if you continued at least for some time... there's a lot of stuff to do in fact

[17:17] <AlexDaniel> jmerelo: I was just confused a bit with “by a single conttribution”

[17:17] <sena_kun> well, the second place is 20, me is 21.

[17:18] <sena_kun> so to beat it only 1(2, technically) bits were necessary.

[17:18] <jmerelo> AlexDaniel: and related to that, I think we should do something like that issue for every single release.

[17:18] <jmerelo> AlexDaniel: since you collect every single functional change in every release, I think we should move that to an issue and at least try to keep up to date with documentation.

[17:19] <jmerelo> It's going to be pretty nigh impossible, but at least we will know what we miss, it's not like in 2020.11 we find we haven't documented something we should have in 2019.09

[17:19] <jmerelo> AlexDaniel: what do you think?

[17:19] *** MasterDuke joined
[17:20] *** MasterDuke left
[17:20] *** MasterDuke joined
[17:20] <AlexDaniel> jmerelo: sure, I'm OK with that, but you should ask the release manager

[17:20] <AlexDaniel> when we finally have one

[17:20] <AlexDaniel> so this release is going to be called 2018.03, no other release this month

[17:21] <jmerelo> It's a bit delayed :-)

[17:21] <guifa> 2018? ;-)

[17:21] <AlexDaniel> 2019*…

[17:21] <jmerelo> AlexDaniel: ^^^^

[17:21] <AlexDaniel> 2019.03, and it's ahead of time!

[17:21] <jmerelo> AlexDaniel: of course :-)

[17:21] <AlexDaniel> I'm not going to do 2019.04, I don't have enough time for that

[17:22] <jmerelo> AlexDaniel: you could delay it until April 1st and call it 6.þ

[17:22] <AlexDaniel> and my hope is that we finally find a new release manager by 2019.05

[17:22] <jmerelo> AlexDaniel: so you're on for 2019.04

[17:22] <AlexDaniel> well, if we find one before 2019.04, then they're free to cut 2019.04 too :)

[17:22] <lucasb> I was expecting releases to be named 2019.02

[17:23] <AlexDaniel> lucasb: me too, but if we're releasing it on 4th or 5th of this month, might as well call it .03 :)

[17:23] <jmerelo> AlexDaniel: would you say "fixes" and "additions" would imply some revision and changes in documentation? Or just additions? Generally bugs are not documented...

[17:23] <AlexDaniel> jmerelo: actually, speaking of your idea

[17:24] <jmerelo> AlexDaniel: only additions, I guess...

[17:24] <lucasb> I know 2019.03 might not happen, but if it did it would happen on the third saturday, not now

[17:24] <jmerelo> lucasb: it's going to happen, 2019.01 and 2019.02 will be skipped...

[17:24] <AlexDaniel> jmerelo: most additions/removals generally should not be documented at all… these are changes to rakudo, and we tend to only document language changes

[17:24] <jmerelo> lucasb: let's call it 2019.01.02.we're.almost.up.to.03

[17:25] <AlexDaniel> lucasb: I mean, you're right, but it's a great chance to make a release ahead of time :D

[17:25] <guifa> Release on March 15 and call it 2019.🏛🗡️?

[17:25] <jmerelo> AlexDaniel: the thing is, they are... documented

[17:25] <jmerelo> guifa: or on 3.15 and call it 2019.pi

[17:26] <jmerelo> sorry, that would be 3.14 and 2019.π

[17:26] <AlexDaniel> lucasb: and also a great chance to skip questions like “where's 2019.03?” :)

[17:27] <AlexDaniel> though the same question will probably be asked about .01 and .02… but oh well. The dev team was really busy fixing stuff

[17:27] <jdv79> wow, compile time for a moderately complex app is still kinda slow:(

[17:28] <jdv79> 14s for this particular app

[17:29] *** cpan-p6 left
[17:29] <jdv79> starting to feel like java.  is that still the grammar and all opti stuff that nobody is working on?

[17:29] <AlexDaniel> jdv79: what about moving the code into a module?

[17:29] <rindolf> jdv79: with what?

[17:29] *** cpan-p6 joined
[17:29] <jdv79> it is in a module - but once i edit it it invalidates

[17:29] <timotimo> doesn't help make development much faster :(

[17:29] <jdv79> yeah, a pre-comp startup is instantaneous

[17:29] <jdv79> but deving loses that completely

[17:29] <jdv79> rindolf: compiler speed

[17:30] <AlexDaniel> jdv79: use inotify to precompile ahead of time before you even attempt to run it? :)

[17:30] <rindolf> jdv79: in rakudo?

[17:30] <jdv79> i'm editting and running in a tight loop 

[17:30] <jdv79> so that's pointless

[17:30] <jdv79> rindolf: yes

[17:30] <AlexDaniel> jdv79: sorry :)

[17:30] <rindolf> jdv79: ah

[17:31] <jdv79> maybe a gsoc project could be part of that...

[17:31] <AlexDaniel> jdv79: yes, but also maybe we need a good way to benchmark it

[17:31] <jdv79> also, comin back to p6 dev from being away for a while - having to slip on a for loop seems very unintuitive

[17:31] <jdv79> just saying

[17:31] <shinobi_cl> Hi AlexDaniel... a question

[17:32] <jdv79> AlexDaniel: its not hard - just compile something:)

[17:32] <AlexDaniel> jdv79: for example, if we had a benchmark, we could run it across releases and stuff. If there was some commit that made things slower, then we'd be able to revert it, for example. That's not very common however, but we can try our luck to maybe save a % or two

[17:32] <shinobi_cl> The automated tests that runs against the modules in perl6 modules site. Are 6.c or 6.d?

[17:32] <jdv79> my lame regex heavy module is kinda a canary but its not as bad as this app for sure

[17:32] <AlexDaniel> shinobi_cl: you mean ecosystem-unbitrot? That is done with the latest rakudo version on master

[17:33] <AlexDaniel> shinobi_cl: and that defaults to v6.d

[17:33] <AlexDaniel> shinobi_cl: of course the the module can always `use v6.c;` to get v6.c behavior

[17:34] <AlexDaniel> shinobi_cl: or do you mean travis? Travis will do different things depending on the configuration in the module repo… and everyone does something different

[17:35] *** jasonp1 joined
[17:35] *** jasonp1 left
[17:36] <sena_kun> just noting that based on https://6guts.wordpress.com/2019/01/02/my-perl-6-wishes-for-2019/ decreasing startup/compile time is on jnthn's list of work. So if one can't become a core hacker itself, but still wants to make rakudo faster, it is still possible to donate to Perl Foundation so grants can be funded, I think.

[17:37] <AlexDaniel> anyone can also do a gsoc project on that topic, I think: https://twitter.com/jnthnwrthngtn/status/1100913444172324864

[17:38] <Geth> ¦ doc: 8dbc66be7e | Altai-man++ | doc/Type/Complex.pod6

[17:38] <synopsebot> Link: https://doc.perl6.org/type/Complex

[17:38] <Geth> ¦ doc: Note arg-less Complex.new call

[17:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8dbc66be7e

[17:38] <Geth> ¦ doc: 7153fcbec9 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Complex.pod6

[17:38] <Geth> ¦ doc: Merge pull request #2646 from perl6/complex-new-method-addition

[17:38] <Geth> ¦ doc: 

[17:38] <Geth> ¦ doc: Note arg-less Complex.new call

[17:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7153fcbec9

[17:38] <sena_kun> oh yeah, that'd be awesome too. :)

[17:38] <jmerelo> sena_kun: can you way how far away is the Comma community edition?

[17:39] <AlexDaniel> jdv79: RT#127330

[17:39] <synopsebot> RT#127330 [rejected]: https://rt.perl.org/Ticket/Display.html?id=127330 [SLOW] 10_000 lines with ｢say ‘a’;｣ take 16 seconds to run

[17:39] <AlexDaniel> haha there's a graph https://rt.perl.org/Ticket/Attachment/1385752/745154/perl6prints.png

[17:40] <sena_kun> jmerelo, I wonder how many details I can share, but it is closer than it may seem now. _winks_

[17:41] <jmerelo> sena_kun++

[17:42] *** cpan-p6 left
[17:43] *** lichtkind left
[17:43] *** cpan-p6 joined
[17:43] <jdv79> AlexDaniel: nice

[17:45] <lucasb> sena_kun: let me know if it needs beta testers :-)

[17:47] *** ravenousmoose left
[17:47] <sena_kun> I think there will be an announcement in the Weekly.

[17:48] <lucasb> cool, thanks

[17:48] *** ravenousmoose joined
[17:49] <jmerelo> m: say $:.perl

[17:49] <camelia> rakudo-moar a8cd286a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3say $:7⏏5.perl␤    expecting any of:␤        colon pair␤»

[17:49] *** chakli joined
[17:50] <jmerelo> m: say $;.perl

[17:50] <camelia> rakudo-moar a8cd286a4: OUTPUT: «(Any)␤»

[17:50] <jmerelo> m: say ($;).perl

[17:50] <camelia> rakudo-moar a8cd286a4: OUTPUT: «Any␤»

[17:52] <jmerelo> m: say ($,).perl

[17:52] <camelia> rakudo-moar a8cd286a4: OUTPUT: «(Any,)␤»

[17:52] <xinming> m: sub wrap_code (&code) { my $wrapped = &code.wrap: -> $arg { "wrap-begin:\n$arg\nwrap-end\n"; nextsame; }; }; wrap_code(-> $str { "Hello $str" });

[17:52] <camelia> rakudo-moar a8cd286a4: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "wrap-begin:\\n$arg\\nwrap-end\\n" in expression "wrap-begin:\\n$arg\\nwrap-end\\n" in sink context (line 1)␤No such method 'wrap' for invocant of type 'Block'. Did you mean any of these?␤    Map␤    grep␤ …»

[17:52] <xinming> So, Block can't be wrapped, right?

[17:54] *** chakli left
[17:56] <jmerelo> xinming: that seems to be the case

[17:56] *** lichtkind joined
[17:56] <sena_kun> it can't. routine can, though, so you can use anonymous one if you like.

[17:57] <jmerelo> xinming: wrap is a Routine method, as a matter of fact. https://github.com/rakudo/rakudo/blob/master/src/core/Routine.pm6

[17:57] *** cpan-p6 left
[17:58] *** cpan-p6 joined
[17:59] *** chakli joined
[17:59] <xinming> jmerelo, sena_kun Thanks,  I thought Block can do that too. i'm wrong.

[17:59] *** cwilson1 joined
[17:59] <jmerelo> xinming: sure :-)

[17:59] <sena_kun> I suspect the reason is that one has to call wrapped routine as unwrapped one.

[18:00] *** Sgeo joined
[18:00] <cwilson1> sigh. learning new things, one always feels dense for awhile.

[18:00] *** cwilson1 is now known as cwilson

[18:00] *** cwilson left
[18:00] *** cwilson joined
[18:00] <sena_kun> like, f('normal'); f.wrap(magic happens here); f('wrapped one is called'); f.unwrap. f('normal is again here');

[18:01] *** Kaiepi joined
[18:01] <jmerelo> cwilson: ah, but the joy of learning. The accumulations of TILs. The bliss of Doing New Stuff.

[18:01] *** Sgeo__ left
[18:03] *** chakli left
[18:04] <sena_kun> m: sub wrap_code (&code) { &code.wrap(-> $arg { say "wrap-begin:\n$arg\nwrap-end\n"; &code; }) }; my &f; my $handle = wrap_code(&f = sub ($str) { say "Hello $str" }); f("sena_kun"); $handle.restore; f("sena_kun");

[18:04] <camelia> rakudo-moar a8cd286a4: OUTPUT: «wrap-begin:␤sena_kun␤wrap-end␤␤Hello sena_kun␤»

[18:05] <cwilson> jmerelo:  Yeeeah. all that yak fur.  Anyhow, I'm trynig to pull together a little perl6 ditty to do some sys admin, and i've clearly dorked up somewhere, slapping together example code from SSH::LibSSH with some Config::INI parsing.  Why isn't my Config::INI::parse(@array.Str) working as I think it should here? https://pastebin.com/SyXYPrWS

[18:06] <jmerelo> cwilson: let's have a look. Anyway, you can also use StackOverflow. We're aiming at the 1k questions... Let's see those yaks...

[18:07] <jmerelo> cwilson: you probably need to golf that down a bit... It does not seem to have anything to do with the ssh stuff. Just the stdout thing and config::ini should do.

[18:07] <sena_kun> m: sub wrap_code (&code) { &code.wrap(-> $arg { say "wrap-begin:\n$arg\nwrap-end"; callsame; }) }; my &f; my $handle = wrap_code(&f = sub ($str) { say "Hello $str" }); f("sena_kun"); $handle.restore; f("sena_kun");

[18:07] <camelia> rakudo-moar a8cd286a4: OUTPUT: «wrap-begin:␤sena_kun␤wrap-end␤Hello sena_kun␤Hello sena_kun␤»

[18:08] <cwilson> jmerelo:  yea just including it incase i did something stupid in runCommand().

[18:10] * cwilson goes off to browse stackoverflow as well

[18:11] *** cpan-p6 left
[18:12] *** cpan-p6 joined
[18:12] *** volter13 joined
[18:17] *** volter13 left
[18:19] *** domidumont joined
[18:19] <AlexDaniel> weekly: Squashathon winner: @Altai-man https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day#dates

[18:19] <notable6> AlexDaniel, Noted!

[18:22] *** zacts joined
[18:22] <sena_kun> can someone tell me what's the idea behind most wanted modules squashathon?

[18:25] <AlexDaniel> jmerelo: ↑

[18:25] <sena_kun> it doesn't look to me like it may be just "find if the module exists and remove from the list if yes", but creating a module needs some time investment, as it is not a one-time thing, but something with a maintainence ahead.

[18:26] *** cpan-p6 left
[18:27] *** cpan-p6 joined
[18:30] *** bartolin left
[18:30] *** bartolin joined
[18:32] <jmerelo> sena_kun: correct. Some modules need to be done. At least focus on one module, or to, and work during the weekend.

[18:37] *** w17t left
[18:37] *** Welcome joined
[18:40] <guifa> Hrm it looks like one of the modules that’s asked for I’ve already done a decent bit of work towards

[18:42] <cpan-p6> New module released to CPAN! HTML-Canvas-To-PDF (0.0.3) by 03WARRINGD

[18:43] *** Welcome left
[18:43] <guifa> Also is there a need for Unicode-Tussle to be ported?  Most of it is in P6 natively

[18:45] <timotimo> it could be interesting to have the exact same API

[18:45] <timotimo> like the cpan butterfly project

[18:52] <jmerelo> guifa: please say there's some WIP there. About Tussle, who knows. Adding a comment won't hurt also.

[18:53] <guifa> Well, it’s one of those “my work kinda fulfills it but is separated out differently” so I’m not sure if I should mark as WIP.  Maybe adding a comment to say “look here for 90% of the work” or something?

[18:53] <jmerelo> guifa: that would be nice.

[18:55] *** cpan-p6 left
[18:55] *** cpan-p6 joined
[18:57] <guifa> I want to get a full implementation of ICU, but that’s a rather monstrous beast and has a lot of fairly opaque ways of encoding data

[19:04] *** abraxxa joined
[19:11] *** cpan-p6 left
[19:11] *** cpan-p6 joined
[19:13] *** sudden29 joined
[19:14] <xinming> m: class T { has %.items handles (:add-item<HASH-SET-KEY>, :item<HASH-GET-BY-KEY>); }; my $obj = T.new; T.add-item("xxx", $object);    <---

[19:14] <camelia> rakudo-moar a8cd286a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$object' is not declared␤at <tmp>:1␤------> 3; }; my $obj = T.new; T.add-item("xxx", 7⏏5$object);    <---␤»

[19:15] <xinming> In this example,  How do we create delegation methods for Hash attribute like this? I read the https://docs.perl6.org/type/Hash#(Map)_method_gist

[19:15] <xinming> But still not much clue about it.

[19:15] <xinming> push method is not that I want.

[19:15] <xinming> I know I can write simple helpers for this purpose.

[19:18] *** sudden29 left
[19:20] <timotimo> Hash::Agnostic is perhaps a place to look for inspiration

[19:20] <timotimo> perhaps not at all, on second thought

[19:23] <sena_kun> I don't think 'handles' can help in this situation... But I cannot think of anything else. I have another feeling though....

[19:25] <sena_kun> m: class T is Hash { method add-item($key, $new) { self.ASSIGN-KEY($key, $new) }; method item($key) { self.AT-KEY($key) }; }; my $obj = T.new; $obj.add-item("xxx", 3); say $obj.item("xxx")

[19:25] <camelia> rakudo-moar a8cd286a4: OUTPUT: «3␤»

[19:26] <sena_kun> I am not sure what is required though, maybe such inheritance is undesired though.

[19:26] *** cpan-p6 left
[19:26] <sena_kun> s/ though//

[19:26] *** cpan-p6 joined
[19:27] <timotimo> i mean, handles is supposed to take a Role as argument

[19:27] <timotimo> and Do The Right Thing

[19:30] <xinming> sena_kun:Actually, ASSIGN-KEY AT-KEY is what I want.

[19:30] <xinming> m: class T { has %.items handles (:add-item<ASSIGN-KEY>, :item<AT-KEY>); }; my $obj = T.new; $obj.add-item("xxx", "yy"); $obj.items.perl.say;

[19:30] <camelia> rakudo-moar a8cd286a4: OUTPUT: «{:xxx("yy")}␤»

[19:30] <sena_kun> ah, cool then.

[19:30] <sena_kun> :)

[19:31] <sena_kun> I thought those were just examples and that `handles` didn't work.

[19:31] <sena_kun> https://docs.perl6.org/type/Associative <- took it from here.

[19:32] <guifa> “…and the final subtag may be a date in the format YYYY, YYYYMM, or YYYYMMDD”, ooh that’s easy.  Oh, WAIT.  It said “may be a **valid** date”.  F$%& 

[19:32] * guifa googles how to calculate leap years.  Wait, is that valid historically?  DATES SUCK

[19:33] <sena_kun> guifa, you can check if a date is valid out of the box with Perl 6.

[19:33] <guifa> oooh?  Yeah?  :D :D :D

[19:33] <sena_kun> m: DateTime.new(year => 2012, month => 2, day => 29).say;

[19:33] <camelia> rakudo-moar a8cd286a4: OUTPUT: «2012-02-29T00:00:00Z␤»

[19:33] <sena_kun> m: DateTime.new(year => 201, month => 2, day => 29).say;

[19:33] <camelia> rakudo-moar a8cd286a4: OUTPUT: «Day out of range. Is: 29, should be in 1..28␤  in block <unit> at <tmp> line 1␤␤»

[19:33] <sena_kun> m: DateTime.new(year => 2019, month => 2, day => 29).say;

[19:33] <camelia> rakudo-moar a8cd286a4: OUTPUT: «Day out of range. Is: 29, should be in 1..28␤  in block <unit> at <tmp> line 1␤␤»

[19:33] <sena_kun> so it knows about leap years and so on. ;)

[19:34] <guifa> Nice!  

[19:34] * guifa ’s curiosity is peaked.

[19:34] <sena_kun> m: DateTime.new(year => 2016, month => 2, day => 29).say;

[19:34] <camelia> rakudo-moar a8cd286a4: OUTPUT: «2016-02-29T00:00:00Z␤»

[19:34] <guifa> How fine grained does the built in go?

[19:34] <xinming> guifa: perl6 is the language with CPAN built-in

[19:34] <sena_kun> guifa, what do you mean?

[19:34] <xinming> the core perl5 cpan is built-in into perl6 itself.

[19:36] <xinming> I think we need a javascript grammer in perl6. Then, We can write js in perl6 directly.

[19:37] <guifa> I’m reaching way back in my memory and there may be already libraries that have generalized it but I remember reading an article ages ago that Sun’s Calendar class for Java handled the most stuff — that is leap years, dates that time zones started/ended, even down to the differences in calendar dates between say Spain and England of the 1600s (when they were a few days off).  

[19:38] <sena_kun> well, as far as I know, it handles time zones, leap years, leap seconds, don't know about England and Spain though, it needs some examples so we could try it out in Perl 6 and see how it'll go.

[19:41] <guifa> The only date I know off the top of my head that’s same-date-different-day is April 22/23rd, 1616, which is Cervantes/Shakespeare’s date of death (Shakespeare’s is assumed, so some just say they died on the same day for poetic-ness) but they were more than a week apart at the time

[19:42] <sena_kun> and how the test will look like?

[19:42] <pmurias> xinming: wouldn't a javascript grammar in Perl 6 allow reading js rather the writting it from Perl 6?

[19:45] *** clarkema joined
[19:46] *** zacts left
[19:47] *** zer0c00l3 joined
[19:47] *** zer0c00l3 left
[19:49] *** zacts joined
[19:49] *** domidumont left
[19:52] *** greppable6 left
[19:52] *** releasable6 left
[19:52] *** unicodable6 left
[19:52] *** nativecallable6 left
[19:52] *** shareable6 left
[19:52] *** committable6 left
[19:52] *** squashable6 left
[19:52] *** reportable6 left
[19:52] <guifa> sena_kun You’d input a date for one area and the other and check an

[19:53] *** evalable6 left
[19:53] <guifa> if they’re equal.  Although actually now that I’m looking at it in more detail (it’s not something I deal with despite being a medievalist) it’s just that England was on the Julian calendar longer

[19:53] *** evalable6 joined
[19:53] *** ChanServ sets mode: +v evalable6

[19:53] *** domidumont joined
[19:53] <sena_kun> m: DateTime.new(year => 1616, month => 4, day => 22).say;

[19:53] <camelia> rakudo-moar a8cd286a4: OUTPUT: «1616-04-22T00:00:00Z␤»

[19:54] <sena_kun> and then you probably want to play with time zones.

[19:54] *** snits_ joined
[19:57] <guifa> I think P6 only does Gregorian ATM, but if we implemented ICU I believe it can handle converting between Gregorian and Julian types

[19:57] <guifa> (and ethiopic, hebrew, etc)

[19:57] <guifa> Admittedly fairly low on the list of priorities

[19:58] *** snits_ left
[19:59] *** domidumont left
[20:03] *** panda|rover|off joined
[20:03] *** panda|rover|off left
[20:04] *** cpan-p6 left
[20:04] *** cpan-p6 joined
[20:20] *** jmerelo left
[20:22] *** lgtaube left
[20:22] *** adu joined
[20:24] *** zacts left
[20:29] *** ravenousmoose left
[20:29] <cpan-p6> New module released to CPAN! XDG-BaseDirectory (0.0.10) by 03JSTOWE

[20:30] *** noyb joined
[20:31] *** noyb left
[20:34] *** lgtaube joined
[20:43] *** cpan-p6 left
[20:43] *** cpan-p6 joined
[20:44] *** epony left
[20:48] <adu> nice

[20:49] *** reportable6 joined
[20:49] *** committable6 joined
[20:49] *** ChanServ sets mode: +v committable6

[20:50] *** greppable6 joined
[20:50] *** shareable6 joined
[20:50] *** ChanServ sets mode: +v shareable6

[20:50] *** unicodable6 joined
[20:51] *** nativecallable6 joined
[20:51] *** ChanServ sets mode: +v nativecallable6

[20:51] *** releasable6 joined
[20:51] *** ChanServ sets mode: +v releasable6

[20:52] *** squashable6 joined
[20:57] *** zacts joined
[20:58] *** cpan-p6 left
[20:58] *** cpan-p6 joined
[21:01] *** zacts left
[21:07] *** pmurias left
[21:09] *** ferreira joined
[21:10] *** molaf joined
[21:13] *** cpan-p6 left
[21:13] *** cpan-p6 joined
[21:21] *** sena_kun left
[21:25] *** mowcat left
[21:26] *** mowcat joined
[21:28] *** mowcat left
[21:30] *** mowcat joined
[21:39] *** pmurias joined
[21:41] *** cpan-p6 left
[21:41] *** cpan-p6 joined
[21:47] *** Xliff_ joined
[21:50] *** Xliff left
[21:52] *** mowcat left
[21:56] *** cpan-p6 left
[21:56] *** cpan-p6 joined
[22:00] *** Guest62600 joined
[22:01] *** epony joined
[22:05] *** Guest62600 left
[22:13] *** epony left
[22:18] <Geth> ¦ perl6-most-wanted: alabamenhu++ created pull request #45: reference extant work

[22:18] <Geth> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/pull/45

[22:21] *** epony joined
[22:25] *** cpan-p6 left
[22:26] *** cpan-p6 joined
[22:31] *** sortiz joined
[22:39] *** hagbard0 joined
[22:41] *** cpan-p6 left
[22:42] *** cpan-p6 joined
[22:44] *** hagbard0 left
[22:57] *** cpan-p6 left
[22:58] *** cpan-p6 joined
[22:59] *** booshibonton joined
[23:01] <Xliff_> \o

[23:01] *** Xliff_ is now known as Xliff

[23:04] *** booshibonton left
[23:10] *** netrino left
[23:11] *** netrino_ joined
[23:11] <SmokeMachine> m: use NativeCall; class Msg is repr<CStruct> { has uint16 $.bla }; "./bla".IO.open(:bin).write: nativecast(Str, Msg.new: :bla(179)).encode: "ascii"

[23:11] <camelia> rakudo-moar a8cd286a4: OUTPUT: «Malformed UTF-8 at line 1 col 1␤  in sub nativecast at /home/camelia/rakudo-m-inst-2/share/perl6/sources/947BDAB9F96E0E5FCCB383124F923A6BF6F8D76B (NativeCall) line 685␤  in block <unit> at <tmp> line 1␤␤»

[23:12] <SmokeMachine> how an I do this? ^^

[23:12] <SmokeMachine> *can

[23:12] *** cpan-p6 left
[23:13] *** cpan-p6 joined
[23:13] <SmokeMachine> m: use NativeCall; class Msg is repr<CStruct> { has uint16 $.bla }; say nativecast(Str, Msg.new: :bla(179))

[23:13] <camelia> rakudo-moar a8cd286a4: OUTPUT: «Malformed UTF-8 at line 1 col 1␤  in sub nativecast at /home/camelia/rakudo-m-inst-2/share/perl6/sources/947BDAB9F96E0E5FCCB383124F923A6BF6F8D76B (NativeCall) line 685␤  in block <unit> at <tmp> line 1␤␤»

[23:14] *** Cyberpower67811 joined
[23:14] *** Cyberpower67811 left
[23:21] <SmokeMachine> m: use NativeHelpers::Blob; use NativeCall; class Msg is repr<CStruct> { has uint16 $.bla }; say blob-from-pointer Msg.new(:179bla), :type(Blob[int8])

[23:21] <camelia> rakudo-moar a8cd286a4: OUTPUT: «===SORRY!===␤Could not find NativeHelpers::Blob at line 1 in:␤    inst#/home/camelia/.perl6␤    inst#/home/camelia/rakudo-m-inst-2/share/perl6/site␤    inst#/home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    inst#/home/camelia/rakudo-m-ins…»

[23:25] *** adu left
[23:25] <Xliff> SmokeMachine: What are you trying to do?

[23:25] <yoleaux> 2 Mar 2019 14:48Z <timotimo> Xliff: is there anything much missing to getting gtk_widget_get_window and GDK_WINDOW_XID working in GTKPlus?

[23:26] <SmokeMachine> Im trying to write binary data from a class...

[23:26] <Xliff> .tell yoleax timotimo: If you are having problems with GTK::Widget.get_window and GDK_WINDOW_XID, can you file an issue. I have not tested that routine sufficiently enough to know if there are any problems.

[23:26] <yoleaux> Xliff: I'll pass your message to yoleax.

[23:26] <Xliff> .tell timotimo\ If you are having problems with GTK::Widget.get_window and GDK_WINDOW_XID, can you file an issue. I have not tested that routine sufficiently enough to know if there are any problems.

[23:26] <yoleaux> Xliff: I'll pass your message to timotimo\.

[23:27] <Xliff> .tell timotimo If you are having problems with GTK::Widget.get_window and GDK_WINDOW_XID, can you file an issue. I have not tested that routine sufficiently enough to know if there are any problems.

[23:27] <yoleaux> Xliff: I'll pass your message to timotimo.

[23:27] <Xliff> Yeesh.

[23:27] <SmokeMachine> Xliff: I have a class is repr<CStruct>, and want to write it on a file

[23:27] <Xliff> Ohhh..

[23:27] <Xliff> I don't know if binary serialization is yet a thing.

[23:28] <SmokeMachine> Xliff: so, you think Ill need to write a C code to do that?

[23:29] <Xliff> SmokeMachine: Yeah. That's probably for the best.

[23:29] <SmokeMachine> :(

[23:35] *** pmurias left
[23:45] *** pecastro left
[23:51] *** aborazmeh joined
[23:51] *** aborazmeh left
[23:51] *** aborazmeh joined
[23:51] *** leont left
[23:51] *** cpan-p6 left
[23:52] *** cpan-p6 joined
[23:52] *** clarkema left
[23:54] *** abraxxa left
[23:58] <Xliff> SmokeMachine: Yeah. Feel you there.

[23:58] <Xliff> Adding something like that to NativeCall (or even another module) might not be a bad idea.

[23:59] <Xliff> Something as simple as writestruct(void *Struct, size_t size) and the corresponsing readstruct shouldn't be that hard.

