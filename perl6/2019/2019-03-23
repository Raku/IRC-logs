[00:01] *** aborazmeh joined
[00:01] *** aborazmeh left
[00:01] *** aborazmeh joined
[00:04] *** Artie left
[00:09] *** cpan-p6 left
[00:09] *** cpan-p6 joined
[00:10] *** pecastro left
[00:11] <TreyHarris> ryanth_: I've just written an addendum that should help. One moment and I'll upload the patch and you can let me know if it looks ok to you

[00:15] *** SergiusUA joined
[00:18] *** leont joined
[00:19] <Geth> ¦ doc/traps-range-whitespace: 11cd1a269a | (Trey Harris)++ | doc/Language/traps.pod6

[00:19] <Geth> ¦ doc/traps-range-whitespace: Traps: point at operator trap in whitespace section

[00:19] <Geth> ¦ doc/traps-range-whitespace: 

[00:19] <Geth> ¦ doc/traps-range-whitespace: This particular trap is regarding an operator, but is created by

[00:19] <Geth> ¦ doc/traps-range-whitespace: incorrect use of whitespace, so it should probably be mentioned in

[00:19] <Geth> ¦ doc/traps-range-whitespace: both places.

[00:19] <Geth> ¦ doc/traps-range-whitespace: review: https://github.com/perl6/doc/commit/11cd1a269a

[00:19] <Geth> ¦ doc: treyharris++ created pull request #2692: Traps: point at operator trap in whitespace section

[00:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2692

[00:20] <TreyHarris> ryanth_: ↑

[00:21] <ryanth_> TreyHarris: Having a look now

[00:21] <TreyHarris> whoops, first time using this editor tool to create a pull request and it made the branch in the perl6/doc repo instead of my fork.

[00:22] <TreyHarris> I'll delete it once it's merged.

[00:24] <ryanth_> TreyHarris: It looks good to me. I might suggest s/confused with/confused for/ so you don't have two "with"s. Might read slightly better, but it's fine as is, too.

[00:25] *** zachk left
[00:32] <TreyHarris> "mistaken for" is even better I think. Thanks.

[00:32] <ryanth_> Yep, perfect.

[00:34] <Geth> ¦ doc/traps-range-whitespace: 3fba84d143 | (Trey Harris)++ | doc/Language/traps.pod6

[00:34] <Geth> ¦ doc/traps-range-whitespace: Fix awkward wording.

[00:34] <Geth> ¦ doc/traps-range-whitespace: review: https://github.com/perl6/doc/commit/3fba84d143

[00:35] *** aborazmeh left
[00:36] <Geth> ¦ doc: b0013f9ba5 | (Trey Harris)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[00:36] <Geth> ¦ doc: Traps: point at operator trap in whitespace section (#2692)

[00:36] <Geth> ¦ doc: 

[00:36] <Geth> ¦ doc: * Traps: point at operator trap in whitespace section

[00:36] <Geth> ¦ doc: 

[00:36] <synopsebot> Link: https://doc.perl6.org/language/traps

[00:36] <Geth> ¦ doc: This particular trap is regarding an operator, but is created by

[00:36] <Geth> ¦ doc: incorrect use of whitespace, so it should probably be mentioned in

[00:36] <Geth> ¦ doc: both places.

[00:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b0013f9ba5

[00:45] <tbrowder> SmokeMachine: I just updated from master and got farther but no full sucess. I will look into it a bit more in the morning. I have changed my model from the one on the PR and I am pushing my latest now. 

[00:46] *** w_richard_w joined
[00:49] <tony-o> .tell jmerelo i have a PR for rakudo that will allow us to simplify the zef plugin system, once that is merged, then we can modify the way zef handles plugins, _then_ i'll write a blog about extending zef

[00:49] <yoleaux> tony-o: I'll pass your message to jmerelo.

[00:52] *** cpan-p6 left
[00:52] *** cpan-p6 joined
[01:05] *** SergiusUA left
[01:13] *** netrino left
[01:15] *** random_yanek left
[01:17] *** cpan-p6 left
[01:19] *** cpan-p6 joined
[01:27] *** random_yanek joined
[01:33] *** cpan-p6 left
[01:34] *** cpan-p6 joined
[01:47] *** cpan-p6 left
[01:48] *** cpan-p6 joined
[01:50] *** ryanth_ left
[01:50] *** ryanth joined
[01:51] *** mantovani left
[02:06] *** cpan-p6 left
[02:06] *** cpan-p6 joined
[02:09] *** leont left
[02:16] <Geth> ¦ ecosystem: alabamenhu++ created pull request #441: Add Fluent

[02:16] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/441

[02:29] *** reach_satori left
[02:29] *** reach_satori joined
[02:32] *** cpan-p6 left
[02:33] *** cpan-p6 joined
[02:46] *** cpan-p6 left
[02:47] *** cpan-p6 joined
[03:03] *** aborazmeh joined
[03:03] *** aborazmeh left
[03:03] *** aborazmeh joined
[03:04] *** cpan-p6 left
[03:07] *** cpan-p6 joined
[03:12] *** reach_satori left
[03:16] *** reach_satori joined
[03:21] *** cpan-p6 left
[03:21] *** ufobat__ joined
[03:21] *** cpan-p6 joined
[03:25] *** ufobat_ left
[03:27] *** ryanth_ joined
[03:27] *** Xliff_ joined
[03:28] *** BR_ joined
[03:28] *** ryanth left
[03:30] *** Sgeo_ joined
[03:32] *** Xliff left
[03:32] *** Black_Ribbon left
[03:33] *** Sgeo left
[03:35] *** aborazmeh left
[03:46] *** cpan-p6 left
[03:48] *** cpan-p6 joined
[03:56] *** sauvin joined
[04:06] *** cpan-p6 left
[04:08] *** cpan-p6 joined
[04:22] *** cpan-p6 left
[04:22] *** cpan-p6 joined
[04:33] *** AlexDani` joined
[04:37] *** AlexDaniel left
[04:38] *** Cabanossi left
[04:45] *** Cabanoss- joined
[04:48] *** cpan-p6 left
[04:51] *** cpan-p6 joined
[05:19] *** MidCheck joined
[05:25] *** mowcat left
[05:39] *** w_richard_w left
[05:39] *** cpan-p6 left
[05:41] *** cpan-p6 joined
[05:53] *** cpan-p6 left
[05:54] *** cpan-p6 joined
[06:07] *** cpan-p6 left
[06:08] *** cpan-p6 joined
[06:21] *** cpan-p6 left
[06:22] *** cpan-p6 joined
[06:35] *** cpan-p6 left
[06:37] *** Sgeo__ joined
[06:39] *** cpan-p6 joined
[06:40] *** Sgeo_ left
[06:46] <titsuki> bisectable: class A { has @.a; submethod BUILD(:@!a) {}; method hello { say @!a; }}; class B { has @.b; submethod BUILD(:@!b) {}; method bye { say @!b; }}; class C is B is A { }; my $c = C.new(:b([1,2,3]),:a([3,4,5])); $c.bye; $c.hello;

[06:46] <bisectable6> titsuki, Bisecting by output (old=2015.12 new=c26ca6b) because on both starting points the exit code is 0

[06:47] <bisectable6> titsuki, bisect log: https://gist.github.com/c7a1acf31a761dd4a13dcf6ab015fdcf

[06:47] <bisectable6> titsuki, (2017-10-07) https://github.com/rakudo/rakudo/commit/16cb67980a7591a66d9259680b980c81067d3f8c

[06:52] *** pecastro joined
[06:57] *** jmerelo joined
[06:57] <jmerelo> squashable6: status

[06:57] <yoleaux> 00:49Z <tony-o> jmerelo: i have a PR for rakudo that will allow us to simplify the zef plugin system, once that is merged, then we can modify the way zef handles plugins, _then_ i'll write a blog about extending zef

[06:57] <squashable6> jmerelo, Next SQUASHathon in 13 days and ≈5 hours (2019-04-06 UTC-14⌁UTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:57] <jmerelo> .tell tony-o: great! Thanks!

[06:57] <yoleaux> jmerelo: What kind of a name is "tony-o:"?!

[07:00] <jmerelo> .tell tony-o great! Thanks!

[07:00] <yoleaux> jmerelo: I'll pass your message to tony-o.

[07:05] *** cpan-p6 left
[07:05] *** cpan-p6 joined
[07:10] <Geth> ¦ ecosystem: 04bc10e828 | L'Alabameñu++ (committed using GitHub Web editor) | META.list

[07:10] <Geth> ¦ ecosystem: Add Fluent

[07:10] <Geth> ¦ ecosystem: 

[07:10] <Geth> ¦ ecosystem: Add the Fluent localization framework

[07:10] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/04bc10e828

[07:10] <Geth> ¦ ecosystem: a365a51c7a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[07:10] <Geth> ¦ ecosystem: Merge pull request #441 from alabamenhu/patch-3

[07:10] <Geth> ¦ ecosystem: 

[07:10] <Geth> ¦ ecosystem: Add Fluent

[07:10] <Geth> ¦ ecosystem: Thanks!

[07:10] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a365a51c7a

[07:31] *** MidCheck left
[07:44] <Geth> ¦ doc: 8e36d90171 | (JJ Merelo)++ | doc/Language/terms.pod6

[07:44] <Geth> ¦ doc: Reflow, de-indent and elimination of PREVIEW, closes #2687

[07:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8e36d90171

[07:44] <synopsebot> Link: https://doc.perl6.org/language/terms

[07:50] *** zacts joined
[07:52] *** cpan-p6 left
[07:53] *** cpan-p6 joined
[07:54] <Geth> ¦ doc: efc2d4616b | (JJ Merelo)++ | doc/Type/Mu.pod6

[07:54] <Geth> ¦ doc: Clarifies explanation and example, closes #2693

[07:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/efc2d4616b

[07:54] <synopsebot> Link: https://doc.perl6.org/type/Mu

[08:11] *** cpan-p6 left
[08:15] *** cpan-p6 joined
[08:38] *** cibs left
[08:40] *** cpan-p6 left
[08:42] *** rindolf joined
[08:45] *** cibs joined
[08:47] *** cpan-p6 joined
[08:57] *** irco joined
[09:00] *** rindolf left
[09:00] *** cpan-p6 left
[09:01] *** cpan-p6 joined
[09:04] *** patrickb joined
[09:04] <Geth> ¦ doc: bf7ad1a16d | (JJ Merelo)++ | doc/Language/traits.pod6

[09:04] <Geth> ¦ doc: Eliminates m:; refs #2695

[09:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bf7ad1a16d

[09:04] <synopsebot> Link: https://doc.perl6.org/language/traits

[09:14] <Geth> ¦ doc: c3b6cb8cf1 | (JJ Merelo)++ | doc/Language/nativetypes.pod6

[09:14] <Geth> ¦ doc: Fixes table

[09:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c3b6cb8cf1

[09:14] <synopsebot> Link: https://doc.perl6.org/language/nativetypes

[09:25] *** cpan-p6 left
[09:27] *** cpan-p6 joined
[09:37] <patrickb> Hi!

[09:38] <patrickb> I'm currently failing running a program with Proc::Async with a space in it's path and arguments on Windows.

[09:38] <patrickb> Is there a known bug?

[09:40] <jmerelo> patrickb: not that I know of. But maybe you need to escape the space

[09:40] <patrickb> Another datapoint: The program needs to be a bat file.

[09:41] <patrickb> I start to suspect Proc::Async is actually calling the program correctly, but cmd is confused because it tries to read the program name and stops at the space

[09:45] *** rindolf joined
[09:53] *** cpan-p6 left
[09:56] *** cpan-p6 joined
[10:21] *** cpan-p6 left
[10:21] *** cpan-p6 joined
[10:24] *** nine_ is now known as nine

[10:36] *** BR_ left
[10:39] *** netrino joined
[10:39] *** cpan-p6 left
[10:41] *** cpan-p6 joined
[10:45] *** jmerelo left
[10:54] <timotimo> oh god

[10:54] <timotimo> that thing again

[10:54] <timotimo> there's something really strange in windows when it comes to commandline arguments in batch files vs exe files

[10:54] *** cpan-p6 left
[10:54] <timotimo> of the "you can't get it right" variety

[10:55] *** cpan-p6 joined
[11:05] <patrickb> I'll now try calling cmd directly.

[11:06] <patrickb> Also just found one can't call a program with a different ARGV[0] with Proc::Async, so that's also out for tricking cmd...

[11:08] <timotimo> ah, true, that could be an interesting feature

[11:09] <patrickb> and all because I Just Quickly (TM) wanted to make rakudo compilable with spaces in the path...

[11:09] *** cpan-p6 left
[11:09] *** cpan-p6 joined
[11:14] <guifa> jmarelo: ¡gracias!

[11:17] *** mowcat joined
[11:20] <hahainternet> ¡

[11:20] <hahainternet> :)

[11:22] <tbrowder> SmokeMachine: still around?

[11:23] *** cpan-p6 left
[11:23] *** cpan-p6 joined
[11:26] <tbrowder> .tell SmokeMachine i have updated local Red with your latest master. i have pushed all my current work to my PR. running load-db.p6 still throws similar error. error txt is in paste here: https://pastebin.com/m7BBeqUC

[11:26] <yoleaux> tbrowder: I'll pass your message to SmokeMachine.

[11:29] *** AlexDani` is now known as AlexDaniel

[11:29] *** AlexDaniel left
[11:29] *** AlexDaniel joined
[11:32] *** mowcat left
[11:41] *** cpan-p6 left
[11:42] *** cpan-p6 joined
[12:07] *** cpan-p6 left
[12:08] *** cpan-p6 joined
[12:18] *** reach_satori left
[12:18] *** leont joined
[12:22] *** cpan-p6 left
[12:23] *** cpan-p6 joined
[12:52] *** reach_satori joined
[13:07] *** cpan-p6 left
[13:07] *** cpan-p6 joined
[13:08] *** ryanth_ is now known as ryanth

[13:21] *** cpan-p6 left
[13:22] *** cpan-p6 joined
[13:26] *** cpan-p6 left
[13:29] <SmokeMachine> .

[13:29] <yoleaux> 11:26Z <tbrowder> SmokeMachine: i have updated local Red with your latest master. i have pushed all my current work to my PR. running load-db.p6 still throws similar error. error txt is in paste here: https://pastebin.com/m7BBeqUC

[13:29] <SmokeMachine> tbrowder: I’ve added som comenta there...

[13:32] <SmokeMachine> Could you make me a favor and open a issue talking about the LTA erros?

[13:32] <SmokeMachine> Please

[13:33] <SmokeMachine> tbrowder: 👆

[13:34] <guifa> Oh, SmokeMachine: that framework I was telling you back is now actually functional if you want to try brea— trying it  out :-)

[13:34] <tbrowder> SmokeMachine: yes, i will do that this evening after i get back on line--hitting the road again now. goodbye!

[13:34] <SmokeMachine> guifa: sure, please!

[13:35] <SmokeMachine> tbrowder: thanks!

[13:46] *** reach_satori left
[13:46] <tbrowder> SmokeMachine: i delayed to make the changes and try again. still an error, but i think progress is being made!  i puched my changes to my PR, and the latest error is in this paste: https://pastebin.com/zRwRWJ4K

[13:46] <tbrowder> goodby until later today!

[13:47] <tbrowder> oops, i didn't see the Person changes--will have to wait, but that change looks good...bye

[13:53] *** cpage_ joined
[13:54] *** cpan-p6 joined
[13:55] *** cpage left
[13:55] *** cpage_ is now known as cpage

[14:05] *** lucasb joined
[14:05] *** guifa left
[14:08] *** cpan-p6 left
[14:09] *** cpan-p6 joined
[14:12] *** reach_satori joined
[14:23] *** Manifest0 joined
[14:24] *** cpan-p6 left
[14:25] *** cpan-p6 joined
[14:26] *** Eynn joined
[14:30] *** Eynn left
[14:40] *** cpan-p6 left
[14:40] *** cpan-p6 joined
[14:52] *** kurahaupo_ joined
[14:52] *** Manifest0 left
[14:52] *** kurahaupo_ is now known as kurahaupo__

[14:53] *** Manifest0 joined
[14:53] *** kurahaupo__ is now known as inquorate

[14:56] *** inquorate is now known as kurahaupo_

[15:01] <SmokeMachine> .tell tbrowder ive fixed your code... there was also another Red bug... please pull last Red master and try it again...

[15:01] <yoleaux> SmokeMachine: I'll pass your message to tbrowder.

[15:01] *** cpan-p6 left
[15:01] *** cpan-p6 joined
[15:02] <Geth> ¦ doc: 44c8eda2ce | (Moritz Lenz)++ | lib/Perl6/Documentable.pm6

[15:02] <Geth> ¦ doc: Explain Perl6::Documentable a bit

[15:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/44c8eda2ce

[15:03] *** kurahaupo_ is now known as kurahaupo

[15:07] <Geth> ¦ doc: 1852044472 | (Moritz Lenz)++ | lib/Perl6/Documentable/Registry.pm6

[15:07] <Geth> ¦ doc: Explain Perl6::Documentable::Registry

[15:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1852044472

[15:15] *** cpan-p6 left
[15:16] *** cpan-p6 joined
[15:29] *** cpan-p6 left
[15:29] *** reach_satori left
[15:30] *** cpan-p6 joined
[15:33] *** MidCheck joined
[15:37] *** kurahaupo left
[15:39] *** Manifest0 left
[15:40] *** Manifest0 joined
[15:41] <lucs> How can I make a filehandle permanently flush?

[15:43] *** Manifest0 left
[15:45] *** Manifest0 joined
[15:51] *** cpan-p6 left
[15:52] *** cpan-p6 joined
[15:53] <ugexe> maybe .open(:out-buffer(1)) 

[15:57] *** reach_satori joined
[16:01] *** Khisanth left
[16:03] <lucs> Yep, seems to work fine, thanks.

[16:07] *** cpan-p6 left
[16:07] *** cpan-p6 joined
[16:13] *** Khisanth joined
[16:21] *** cpan-p6 left
[16:21] *** cpan-p6 joined
[16:44] <zostay> Mu is most undefined. Mu.new is least defined. I hadn't thought of calling .new on Mu or Any, but it does work.

[16:47] *** Sgeo_ joined
[16:49] <zostay> m: True.new

[16:49] <camelia> rakudo-moar c26ca6b08: ( no output )

[16:49] <zostay> m: say True.new

[16:49] <camelia> rakudo-moar c26ca6b08: OUTPUT: «False␤»

[16:50] <zostay> say 42.new

[16:50] <evalable6> zostay, rakudo-moar c26ca6b08: OUTPUT: «0␤»

[16:50] <zostay> there's a whole load of fun to find in this

[16:51] *** Sgeo__ left
[16:51] <zostay> m: say Nil.new

[16:52] <camelia> rakudo-moar c26ca6b08: OUTPUT: «Nil␤»

[16:52] <zostay> m: say "deadbeaf".new;

[16:52] <camelia> rakudo-moar c26ca6b08: OUTPUT: «␤»

[16:56] *** cpan-p6 left
[16:56] *** cpan-p6 joined
[17:12] *** cpan-p6 left
[17:13] *** cpan-p6 joined
[17:25] *** rindolf left
[17:36] *** cpan-p6 left
[17:36] *** cpan-p6 joined
[17:43] *** MidCheck left
[17:50] *** molaf joined
[17:50] *** cpan-p6 left
[17:50] *** cpan-p6 joined
[17:55] *** antoniogamiz joined
[17:58] *** rurban joined
[17:58] *** rurban left
[17:59] <antoniogamiz> hey \o/

[18:01] *** natrys joined
[18:04] *** cpan-p6 left
[18:04] *** cpan-p6 joined
[18:14] *** leont left
[18:15] *** rindolf joined
[18:15] <Geth> ¦ ecosystem: f315368013 | (Brian Duggan)++ | META.list

[18:15] <Geth> ¦ ecosystem: Add Grammar::PrettyErrors to the ecosystem

[18:15] <Geth> ¦ ecosystem: 

[18:15] <Geth> ¦ ecosystem: https://github.com/bduggan/p6-grammar-prettyerrors

[18:15] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/f315368013

[18:20] *** zacts left
[18:28] *** cpan-p6 left
[18:28] *** cpan-p6 joined
[18:42] *** zacts joined
[18:42] *** SergiusUA joined
[18:42] *** cpan-p6 left
[18:42] *** cpan-p6 joined
[18:45] *** mowcat joined
[18:47] *** MasterDuke left
[18:52] *** MasterDuke joined
[18:52] *** MasterDuke left
[18:52] *** MasterDuke joined
[18:59] *** zachk joined
[19:06] *** cpan-p6 left
[19:07] *** cpan-p6 joined
[19:13] *** zacts left
[19:19] *** cpan-p6 left
[19:20] *** cpan-p6 joined
[19:29] *** abraxxa joined
[19:32] *** abraxxa left
[19:33] *** abraxxa joined
[19:33] *** cpan-p6 left
[19:34] *** zachk left
[19:34] *** zachk joined
[19:34] *** cpan-p6 joined
[19:40] *** abraxxa left
[19:48] *** mowotter joined
[19:48] *** abraxxa joined
[19:50] *** mowcat left
[19:53] *** cpan-p6 left
[19:59] *** abraxxa left
[20:04] *** abraxxa joined
[20:05] <TreyHarris> lizmat mentioned 52 hours ago or so that docs.perl6.org was stuck at commit 88383891 -- I don't see any follow-up except trying to figure out how likely an all-decimal commit hash is, certainly nothing explaining why the website hasn't picked up any commits since then?

[20:06] <TreyHarris> But it's still stuck there

[20:13] <TreyHarris> I can't find the docs about debugging this, though I thought they existed because I thought I'd read them before...

[20:14] <TreyHarris> I tried to built and test the following commit, but made a dumb mistake and built and tested commit 88383891 itself. I'm starting over now with the next commit

[20:25] *** abraxxa left
[20:32] *** holyghost joined
[20:33] <holyghost> hello, I'm back from a month of vacation, I continue work on some Digital Audio Workstation (DAW) code tommorrow

[20:41] *** zachk left
[20:42] *** zachk joined
[21:02] *** zachk left
[21:02] *** zachk joined
[21:16] *** MasterDuke left
[21:25] *** antoniogamiz left
[21:29] <lucasb> To make a user-defined object participate in iteration constructs, all you need to do is either define a .list or a .iterator method. No need to do any specific role.

[21:30] <lucasb> do you agree with my statement? was it supposed to be that easy to iterate over objects? :) Because I think 'list' is a very common name. Other special methods are all UPPERCASE

[21:35] <ugexe> Subclasses of Any may choose to return any core type that does the Positional role from .list. Use .List to coerce specifically to List.

[21:35] <TreyHarris> Well, Any defines .list, so I think... yes, what ugexe said

[21:37] <TreyHarris> I think you can consider any routine defined on Mu, Any, or Cool as effectively quasi-reserved ("quasi-" because if you know it exists and what you're doing you can use it for your own purposes)

[21:39] *** cpan-p6 joined
[21:43] <TreyHarris> The final example in https://docs.perl6.org/language/operators#infix_minmax showing minmax on a Hash... it's fine as far as it goes in showing what minmax returns, but I can't figure out how one could ever use the Range that results. I thought I'd augment the xample, but I've gotten stuck trying to make a minmax on Hashes return a useful Range

[21:44] <cpan-p6> New module released to CPAN! FindBin (0.2.0) by 03LEMBARK

[21:46] <ugexe> never understood the point of FindBin in perl6...

[21:46] <lucasb> ugexe, TreyHarris: thanks for the comments. I'll try reflect more about this :)

[21:46] <ugexe> FindBin functionality (or anything you'd do with it) is built-in already

[21:47] *** patrickb left
[21:47] *** reach_satori left
[21:48] <TreyHarris> ugexe: What's the built-in?

[21:52] <TreyHarris> (I mean, FindBin itself is built-in to Perl 5, so I assume you mean something else not using FindBin that's also built-in)

[21:52] *** isomorphismes joined
[21:52] <TreyHarris> Er, s/built-in/packaged with/

[21:54] *** molaf left
[21:56] *** jiffyLOW left
[22:04] *** cpan-p6 left
[22:05] <lizmat> ugexe: if FindBin is already built-in, how would one use that then?

[22:05] *** cpan-p6 joined
[22:12] <TreyHarris> In Perl 6, $*EXECUTABLE is an IO object so it's arguably (nearly) as easy as FindBin, but in Perl 5, finding your script's location in a platform-independent way isn't trivial

[22:14] *** reach_satori joined
[22:15] <TreyHarris> I meant $*PROGRAM, but checking it I see it isn't the same as FindBin... it doesn't follow symlinks to find the canonical location of the actual program file

[22:17] <TreyHarris> I haven't looked at this just-uploaded FindBin's code -- it's not in my mirror and it isn't a public repo in lembark's GitHub -- but assuming it does what Perl 5's does, you'd have to replicate the same logic (check in a platform-dependent way for the actual file's canonical location even if it's called by unusual means like a three-arg *exec call or something like that)

[22:18] *** cpan-p6 left
[22:19] *** cpan-p6 joined
[22:25] *** Black_Ribbon joined
[22:34] *** reach_satori left
[22:38] *** reach_satori joined
[22:41] *** RaycatWhoDat joined
[22:41] <RaycatWhoDat> Hello.

[22:41] *** cpan-p6 left
[22:42] <timotimo> o/

[22:42] *** cpan-p6 joined
[22:42] *** natrys left
[22:43] <RaycatWhoDat> I was wondering if anyone has deployed Perl 6 to production. If so, what did you use it for and what were the downsides?

[22:44] <timotimo> i forgot the name of it, but there's a thing for agriculture that runs on perl6

[22:44] <timotimo> agrammon?

[22:45] <timotimo> https://www.agrammon.ch/home-en/

[22:45] <timotimo> but i didn't deploy that so i can't answer that particular question

[22:46] <RaycatWhoDat> Fair enough. Thanks for the link, though.

[22:47] <timotimo> there was also a presentation about agrammon, i think the recording is on line, on youtube probably. i think it was presented at a german perl workshop perhaps?

[22:49] <El_Che> I ran a service to assist with a CA SSL cert migration for a few thousands certs (around 3000 iirc). It checked the CA of webservers and other services and send notifications about the need to renew the cert with the new system (new CA).

[22:49] <El_Che> it ran for about 2 years

[22:49] <El_Che> the migration is done, so the service is gone

[22:50] *** SergiusUA left
[22:51] <RaycatWhoDat> Did you choose Perl 6 because it was what you knew? Or did you seek it out? Like, why Perl over the hundreds of languages out there?

[22:52] <El_Che> I chose Perl 6 because I wanted to learn the language in a real life scenario

[22:52] <kawaii> am I not allowed to call routines as the values in my hashes? `my %ivs = hp => (0..31).rand.Int,` gives me an error of unexpected `(`.

[22:52] <El_Che> I did know Perl 5, Java and Go

[22:53] <timotimo> m: my %ivs = hp => (0..31).rand.Int, "hi";

[22:53] <camelia> rakudo-moar c26ca6b08: OUTPUT: «Odd number of elements found where hash initializer expected:␤Found 3 (implicit) elements:␤Last element seen: "hi"␤  in block <unit> at <tmp> line 1␤␤»

[22:53] <timotimo> m: my %ivs = hp => (0..31).rand.Int;

[22:53] <camelia> rakudo-moar c26ca6b08: ( no output )

[22:53] <timotimo> it should work; the error might actually be nearby?

[22:53] <RaycatWhoDat> El_Che: Interesting. Did you run into any problems?

[22:53] <El_Che> RaycatWhoDat: no, it ran well (of course the scope was limited)

[22:53] <El_Che> no crashes

[22:54] <El_Che> no perfomance problems

[22:54] <RaycatWhoDat> Huh. Neat. Thanks for your insight.

[22:55] <El_Che> of course, it depends on what you do

[22:55] <El_Che> and nowadays there is some good stuff out there, like Cro if you are into webservices

[22:55] *** cpan-p6 left
[22:56] *** cpan-p6 joined
[22:58] <timotimo> well, cro is mainly for microservices, but it's good for webservices, too, of course

[23:01] *** Kaiepi joined
[23:03] <Geth> ¦ doc: 5e5d4e499b | (Ben Davies)++ | doc/Language/js-nutshell.pod6

[23:03] <Geth> ¦ doc: Correct description of List and Array in the JS nutshell

[23:03] <Geth> ¦ doc: 

[23:03] <Geth> ¦ doc: List is immutable and Array is mutable, not the other way around.

[23:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5e5d4e499b

[23:03] <synopsebot> Link: https://doc.perl6.org/language/js-nutshell

[23:06] <Geth> ¦ doc: 86ab3c5bc2 | (Ben Davies)++ | doc/Language/js-nutshell.pod6

[23:06] <Geth> ¦ doc: Fix link to List page in the JS nutshell

[23:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/86ab3c5bc2

[23:06] <synopsebot> Link: https://doc.perl6.org/language/js-nutshell

[23:09] *** pecastro left
[23:10] *** cpan-p6 left
[23:10] *** cpan-p6 joined
[23:25] *** cpan-p6 left
[23:25] *** cpan-p6 joined
[23:28] <vrurg> What would be the best way to test for a warning message? The first thing coming to mind is CONTROL { when CX::Warn { die $_ } } 

[23:31] <TreyHarris> vrurg: Test should probably have a warns-like... warn is pretty seldom-used though, given that its uses in Perl 5 are mostly subsumed by note() and by Failure

[23:32] <TreyHarris> For coverage purposes, though, you're right that it should be testable. The CONTROL block works, though I'm not sure throwing it is the best way, since presumably you'd want execution to continue, wouldn't you?

[23:32] <vrurg> TreyHarris: warns-like isn't documented. So, even if it exists.

[23:32] *** MasterDuke joined
[23:33] <TreyHarris> vrurg: It doesn't; that's why I should "should probably have", a la fails-like

[23:33] *** MasterDuke left
[23:33] *** MasterDuke joined
[23:33] <vrurg> It's been tested with throws-like anyway. So, rethrow of control is ok

[23:33] <TreyHarris> Oh! I thought calling die() on a warning turned it into a full-blown exception

[23:34] <vrurg> It does. Basically, what happens (schematically):

[23:34] <TreyHarris> I thought rethrow would be what would be needed in that case

[23:34] <vrurg> { CONTROL { when CX::Warn { die $_ } }; throws-like { warn "ok" }, CX::Warn; }

[23:35] <vrurg> Rethrow should preserve the original exception status, I presume. Even if it's not this way right now – it must be, to my view.

[23:35] <TreyHarris> ah, I see, you're throwing and then re-suppressing it all at once. Your elided example made me think you were promoting the warning and interrupting execution

[23:36] <vrurg> Damn laziness... Shoud've made it in full from the start. :)

[23:48] *** cpan-p6 left
[23:49] *** cpan-p6 joined
[23:53] <RaycatWhoDat> Hmm. Zef is a bit of a pain to install, huh?

[23:54] <RaycatWhoDat> Actually, lemme see if I'm just dense.

[23:57] <RaycatWhoDat> Yeah, never mind. I'm dense.

[23:58] <Kaiepi> m: my %foo = :1a, :2b, :3c; for %foo { .say }

[23:58] <camelia> rakudo-moar c26ca6b08: OUTPUT: «a => 1␤b => 2␤c => 3␤»

[23:59] <Kaiepi> m: my %foo = :1a, :2b, :3c; sub foo(%foo) { for %foo { .say } }; foo

[23:59] <camelia> rakudo-moar c26ca6b08: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling foo() will never work with declared signature (%foo)␤at <tmp>:1␤------> 3c; sub foo(%foo) { for %foo { .say } }; 7⏏5foo␤»

[23:59] *** aborazmeh joined
[23:59] *** aborazmeh left
[23:59] *** aborazmeh joined
[23:59] <Kaiepi> m: my %foo = :1a, :2b, :3c; sub foo(%foo) { for %foo { .say } }; foo %foo

[23:59] <camelia> rakudo-moar c26ca6b08: OUTPUT: «c => 3␤a => 1␤b => 2␤»

[23:59] <Kaiepi> how do i ensure the order of the values in the hash stay the same as when it was declared?

