[00:05] *** wamba left
[00:18] *** khisanth_ left
[00:28] *** wildtrees joined
[00:34] *** wildtrees left
[00:41] *** khisanth_ joined
[00:56] *** ravenousmoose joined
[01:00] *** ravenousmoose left
[01:05] *** macaronus left
[01:11] *** ZzZombo left
[01:16] *** lucasb left
[01:17] *** quester left
[01:20] *** quester joined
[02:00] *** cpan-p6 left
[02:03] *** cpan-p6 joined
[02:03] *** cpan-p6 left
[02:03] *** cpan-p6 joined
[02:03] *** aborazmeh joined
[02:03] *** aborazmeh left
[02:03] *** aborazmeh joined
[02:07] <discord6> <Aearnus> Just saw TimToady's blessing for the name change... I'm getting hyped!!

[02:17] *** aborazmeh left
[02:42] *** xelxebar left
[02:42] *** xelxebar joined
[02:44] *** Cabanossi left
[02:50] *** Cabanossi joined
[02:57] *** sankamur_ left
[04:18] *** coverable6 left
[04:18] *** reportable6 left
[04:18] *** quotable6 left
[04:18] *** evalable6 left
[04:18] *** benchable6 left
[04:18] *** committable6 left
[04:18] *** nativecallable6 left
[04:18] *** squashable6 left
[04:18] *** shareable6 left
[04:18] *** bloatable6 left
[04:18] *** statisfiable6 left
[04:18] *** tellable6 left
[04:18] *** greppable6 left
[04:18] *** notable6 left
[04:18] *** unicodable6 left
[04:18] *** bisectable6 left
[04:18] *** releasable6 left
[04:18] *** nativecallable6 joined
[04:19] *** Doc_Holliwood left
[04:19] *** coverable6 joined
[04:20] *** greppable6 joined
[04:20] *** statisfiable6 joined
[04:20] *** shareable6 joined
[04:20] *** bisectable6 joined
[04:21] *** bloatable6 joined
[04:21] *** ChanServ sets mode: +v bloatable6

[04:21] *** quotable6 joined
[04:21] *** ChanServ sets mode: +v quotable6

[04:21] *** committable6 joined
[04:22] *** squashable6 joined
[04:22] *** reportable6 joined
[04:22] *** ChanServ sets mode: +v reportable6

[04:22] *** benchable6 joined
[04:22] *** evalable6 joined
[04:22] *** releasable6 joined
[04:22] *** ChanServ sets mode: +v releasable6

[04:22] *** tellable6 joined
[04:22] *** unicodable6 joined
[04:22] *** ChanServ sets mode: +v tellable6

[04:22] *** ChanServ sets mode: +v unicodable6

[04:23] *** notable6 joined
[04:52] *** alnka joined
[05:12] *** alnk left
[05:12] *** alnka is now known as alnk

[05:45] *** sauvin joined
[05:49] *** llfourn joined
[06:17] *** Doc_Holliwood joined
[06:17] *** gnufr33dom joined
[06:26] *** araraloren joined
[06:27] <araraloren> Finally, Perl6 will become Raku. 

[06:31] <araraloren> Can we still using CAPN in the future ?

[06:37] <dpk> could have CRAN

[06:37] <dpk> , each package called a CRANberry, etc

[06:39] <Grinnz> for the time being, nobody has proposed any changes to use of cpan

[06:39] <araraloren> So which version will support the new name ? in 6.e ?

[06:42] *** jmerelo joined
[06:42] <jmerelo> squashable: status

[06:42] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 5 days and ≈21 hours (2019-10-19 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:50] *** kurahaupo left
[06:51] <Grinnz> lizmat: for what it's worth, i think supporting a Raku folder or whatever on cpan should not be impossible, sure it takes a while to get all the ducks in a row but at least we have the existing setup to model it on

[06:53] <jmerelo> Grinnz: what about just renaming the current Perl6 folder?

[06:53] *** wamba joined
[06:53] <Grinnz> jmerelo: it would be a lot more effort to coordinate all the necessary tools changing and changing all the existing dists in one swoop... supporting two variants is a lot more practical

[06:54] <jmerelo> m: my $sig = :('Þor', Str, Int); say <Þor Hammer 1> ~~ $sig

[06:54] <camelia> rakudo-moar 26696e490: OUTPUT: «True␤»

[06:54] <Grinnz> basically the same "add new, discourage old, remove old" progression proposed for the rest of the stuff, but probably on a few years longer timeline

[06:55] *** sena_kun joined
[06:57] <jmerelo> Grinnz: OK

[07:00] <Grinnz> (and given how CPAN dists from 2000 without META.yml are still supported... maybe the last step never happens :P)

[07:02] <Grinnz> by the way. next friday is the currently planned for migration of all perl 5 core tickets from RT to github. is raku still using RT?

[07:03] <Grinnz> i know it's not suggested anymore

[07:03] <jmerelo> Grinnz: "using" as in including new tickets, no. But I'm not sure all RT tickets have been migrated to Github. 

[07:04] <jmerelo> Grinnz there was this issue: https://github.com/perl6/problem-solving/issues/49

[07:04] <Grinnz> yeah taht's why i ask. the domain should work, but it will become read only

[07:05] <jmerelo> Grinnz: ah, OK. So it's not that urgent to transfer them... But we still need to do it.

[07:06] <Grinnz> i see toddr mentioned his migration method in there. it's quite sophisticated, he showed his demo of how its going to look today

[07:06] <Grinnz> https://github.com/Perl/perl5-test/issues

[07:07] <Grinnz> it's apaprently using an unreleased github api that he can't release info about

[07:07] <jmerelo> Grinnz the problem on our side is that it's not too clear where the tickets should go.  And we have two organizations, so dumping them into a repository owned by one is not really OK

[07:08] <Grinnz> yeah, that's messy

[07:11] <lizmat> weekly: https://www.theregister.co.uk/2019/10/11/perl_6_raku_larry_wall/

[07:11] <notable6> lizmat, Noted! (weekly)

[07:11] <lizmat> I vote for no changes to PAUSE

[07:13] <lizmat> afk for the rest of the day&

[07:19] <jmerelo> Grinnz: unreleased GitHub API? But accessible to some developers anyway? What gives?

[07:20] <Grinnz> jmerelo: he's in contact with github about it, probably because of the scope of the problem

[07:20] *** nodno joined
[07:21] <Grinnz> 17500 tickets and getting lots of metadata right is a fun task

[07:22] <jmerelo> I think it's probably OK if he does the same for Perl 6. I see there are some issues with name mapping, but since he's got the privs for the issue and everything, it's best if he proceeds when he's ready

[07:22] <jmerelo> Deciding what to do with the tickets is transparent to the process of creating the tickets. 

[07:25] <jmerelo> m: class Foo { has $.stuff; method bar( $self: ) }; say Foo.bar.signature ~~ :($:)

[07:25] <camelia> rakudo-moar 26696e490: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3Foo { has $.stuff; method bar( $self: ) 7⏏5}; say Foo.bar.signature ~~ :($:)␤»

[07:26] <jmerelo> m: class Foo { method bar( $self: ){} }; say Foo.bar.signature ~~ :($:)

[07:26] <camelia> rakudo-moar 26696e490: OUTPUT: «False␤»

[07:26] <jmerelo> m: class Foo { method bar( $self: ){} }; say Foo.bar.signature

[07:26] <camelia> rakudo-moar 26696e490: OUTPUT: «Nil␤»

[07:26] <jmerelo> m: class Foo { method bar( $self: ){} }; say Foo.new.bar.signature

[07:26] <camelia> rakudo-moar 26696e490: OUTPUT: «Nil␤»

[07:27] <jmerelo> m: class Foo { method bar( $self: ){} }; say Foo.new().bar

[07:27] <camelia> rakudo-moar 26696e490: OUTPUT: «Nil␤»

[07:27] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.new().bar

[07:27] <camelia> rakudo-moar 26696e490: OUTPUT: «baz␤»

[07:27] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.new().bar.signature

[07:27] <camelia> rakudo-moar 26696e490: OUTPUT: «No such method 'signature' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[07:27] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say &(Foo.new().bar).signature

[07:27] <camelia> rakudo-moar 26696e490: OUTPUT: «No such method 'signature' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[07:27] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say &(Foo.bar).signature

[07:27] <camelia> rakudo-moar 26696e490: OUTPUT: «No such method 'signature' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[07:28] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say &(Foo.bar)

[07:28] <camelia> rakudo-moar 26696e490: OUTPUT: «baz␤»

[07:28] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.&bar

[07:28] <camelia> rakudo-moar 26696e490: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    bar used at line 1. Did you mean 'VAR', 'bag'?␤␤»

[07:29] *** xinming left
[07:31] <discord6> <mj41> morning, is this bug or not https://github.com/mj41/Raku-Step-by-Step/blob/master/steps/array-hash-pair.p6#L15  ? There is related bug report https://github.com/rakudo/rakudo/issues/3211

[07:31] *** xinming joined
[07:32] <jmerelo> m: my $x = [ Hash.new('b',4) ]

[07:32] <camelia> rakudo-moar 26696e490: ( no output )

[07:32] <jmerelo> m: my $x = [ Hash.new('b',4) ]; say $x

[07:32] <camelia> rakudo-moar 26696e490: OUTPUT: «[b => 4]␤»

[07:34] *** ravenousmoose joined
[07:34] <jmerelo> m: my $x = [ %(b => 4) ]; say $x

[07:34] <camelia> rakudo-moar 26696e490: OUTPUT: «[b => 4]␤»

[07:39] <jmerelo> OK, I can't get this right. How do I get a handle on a class method? I can just add the & sigil for routines, but I can't seem to find how to do it for methods

[07:40] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say &(::Foo.bar)

[07:40] <camelia> rakudo-moar 26696e490: OUTPUT: «baz␤»

[07:40] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods

[07:40] <camelia> rakudo-moar 26696e490: OUTPUT: «(bar BUILDALL)␤»

[07:40] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods('bar')

[07:40] <camelia> rakudo-moar 26696e490: OUTPUT: «Too many positionals passed; expected 2 arguments but got 3␤  in block <unit> at <tmp> line 1␤␤»

[07:40] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods(Foo,'bar')

[07:40] <camelia> rakudo-moar 26696e490: OUTPUT: «Too many positionals passed; expected 2 arguments but got 4␤  in block <unit> at <tmp> line 1␤␤»

[07:41] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods[0]

[07:41] <camelia> rakudo-moar 26696e490: OUTPUT: «bar␤»

[07:41] <sena_kun> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods.grep(*.name eq 'bar');

[07:41] <camelia> rakudo-moar 26696e490: OUTPUT: «(bar)␤»

[07:41] <jmerelo> Well, that seemed to do it...

[07:41] <jmerelo> sena_kun: no other way?

[07:42] <sena_kun> jmerelo, none I know of

[07:42] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods.grep(*.name eq 'bar').signature

[07:42] <camelia> rakudo-moar 26696e490: OUTPUT: «No such method 'signature' for invocant of type 'Seq'␤  in block <unit> at <tmp> line 1␤␤»

[07:42] <sena_kun> what do you want to do in the first place?

[07:42] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods.grep(*.name eq 'bar')[0].signature

[07:42] <camelia> rakudo-moar 26696e490: OUTPUT: «($self: *%_)␤»

[07:42] <sena_kun> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods.first(*.name eq 'bar').signature

[07:42] <camelia> rakudo-moar 26696e490: OUTPUT: «($self: *%_)␤»

[07:43] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods.first(*.name eq 'bar').signature ~~ :($:)

[07:43] <camelia> rakudo-moar 26696e490: OUTPUT: «False␤»

[07:43] <jmerelo> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^methods.first(*.name eq 'bar').signature ~~ :($: *%)

[07:43] <camelia> rakudo-moar 26696e490: OUTPUT: «True␤»

[07:43] <jmerelo> sena_kun: thanks!

[07:44] <sena_kun> yw

[07:45] <jmerelo> Now I don't get why the signature of a methods gets *% added on top

[07:45] <jmerelo> But I guess that's a different thing altogether...

[07:46] <Geth_> ¦ doc: 383a93744e | (JJ Merelo)++ | 2 files

[07:46] <Geth_> ¦ doc: Checks content on Pod6 tables

[07:46] <Geth_> ¦ doc: 

[07:46] <Geth_> ¦ doc: Only some changes here and there, but it checks the item on "more well-defined pod tables" in #2632, since it seemt to have been written after that.

[07:46] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/383a93744e

[07:46] <Geth_> ¦ doc: 682f7496be | (JJ Merelo)++ | doc/Type/Signature.pod6

[07:46] <synopsebot> Link: https://doc.perl6.org/type/Signature

[07:46] <Geth_> ¦ doc: Adds examples that use signature literals

[07:46] <Geth_> ¦ doc: 

[07:46] <Geth_> ¦ doc: With literals or the invocant marker, $:. Refs #2632

[07:46] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/682f7496be

[07:46] <sena_kun> that's a default for methods, thought I don't know the exact reason

[07:47] <sena_kun> m: class A { method a($a) {} }; A.a(42, :fu)

[07:47] <camelia> rakudo-moar 26696e490: ( no output )

[07:49] <jmerelo> sena_kun: will you want to write something for the Advent calendar?

[07:51] <sena_kun> jmerelo, I want, but have no ideas for topics, alas. I am also a bit burnt out right now, which makes me a bit useless when it comes to writing anything related to code.

[07:51] <jmerelo> sena_kun take care then. In case you can think of something, just let us now.

[07:51] <sena_kun> jmerelo, sure!

[07:51] <jmerelo> sena_kun sorry to hear that, but sometimes you just need to step back, take a rest and relax.

[07:52] *** mj41 joined
[07:56] <mj41> m: my $x = [ Hash.new("b",4) ]; say $x; say WHAT $x[0];

[07:56] <camelia> rakudo-moar 26696e490: OUTPUT: «[b => 4]␤(Pair)␤»

[07:57] *** chloekek joined
[07:59] <sena_kun> m: my @a = Hash.new('b', 4),; say @a[0].^name;

[07:59] <camelia> rakudo-moar 26696e490: OUTPUT: «Hash␤»

[08:04] *** domidumont joined
[08:16] <mj41> sena_kun: thx, .^name is better https://github.com/mj41/Raku-Step-by-Step/commit/f1a65339da0fd33fec67b0eff955c934adbfacee :-)

[08:16] <jmerelo> notable6: weekly http://blogs.perl.org/users/ovid/2019/10/larry-has-approved-renaming-perl-6-to-raku.html

[08:16] <notable6> jmerelo, Noted! (weekly)

[08:17] <sena_kun> mj41, they are just different, ^name gives you a Str and a fully qualified type, .WHAT gives you an object of type

[08:17] <sena_kun> m: IO::Path.^name.say; IO::Path.WHAT.say;

[08:17] <camelia> rakudo-moar 26696e490: OUTPUT: «IO::Path␤(Path)␤»

[08:17] <sena_kun> ^ so with WHAT you're in trouble if you are checking type of something like Foo::Bar::Baz

[08:18] <jmerelo> mj41: May I interest you in writing something for the Advent Calendar? Just add your name here: https://github.com/perl6/advent/blob/master/perl6advent-2019/schedule

[08:19] <sena_kun> m: 42.WHAT.abs; 42.^name.abs;

[08:19] <camelia> rakudo-moar 26696e490: OUTPUT: «Invocant of method 'abs' must be an object instance of type 'Int', not a type object of type 'Int'.  Did you forget a '.new'?␤  in block <unit> at <tmp> line 1␤␤»

[08:19] <sena_kun> ^ I know calling `abs` on Int type object is a stretch, but with custom classes it'll look better

[08:25] <mj41> jmerelo: not sure to that "not easy to understand/learn parts" is good advent post :-)  ... and I am not sure these are my not-understandings or raku bugs 

[08:25] <jmerelo> mj41as long as you talk about Raku, it's OK

[08:25] * sena_kun would be interested to read about that

[08:25] <mj41> but anybody feel free to watch https://github.com/mj41/Raku-Step-by-Step/tree/master/steps and use it as a list to be clarified

[08:26] <sena_kun> I remember I promised a post about something, but don't remember the exact topic I promised. :S

[08:30] *** molaf joined
[08:31] *** molaf left
[08:38] *** ravenousmoose left
[08:40] *** chloekek left
[08:40] *** ravenousmoose joined
[08:40] <jmerelo> sena_kun: add yourself as TBD.

[08:46] <sena_kun> jmerelo, roger!

[08:47] <jmerelo> sena_kun: thanks!

[09:04] *** xinming_ joined
[09:07] *** xinming left
[09:12] *** khisanth_ left
[09:14] *** khisanth_ joined
[09:27] *** chloekek joined
[09:27] *** sno left
[09:29] *** sno joined
[09:34] *** abraxxa joined
[09:36] *** abraxxa left
[09:36] *** wamba left
[10:01] *** jmerelo left
[10:11] *** nodno left
[10:17] *** wamba joined
[10:19] <SmokeMachine> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^lookup(“bar”).signature

[10:19] <camelia> rakudo-moar 26696e490: OUTPUT: «($self: *%_)␤»

[10:22] <SmokeMachine> m: class Foo { method bar( $self: ){ "baz" } }; say Foo.^find_method(“bar”).signature

[10:22] <camelia> rakudo-moar 26696e490: OUTPUT: «($self: *%_)␤»

[10:23] <SmokeMachine> jmerelo: ^^

[10:23] <tellable6> SmokeMachine, I'll pass your message to jmerelo

[10:25] *** Black_Ribbon left
[11:17] *** aborazmeh joined
[11:17] *** aborazmeh left
[11:17] *** aborazmeh joined
[11:35] *** xinming_ left
[11:35] *** xinming_ joined
[11:46] *** X-Scale joined
[11:57] <xinming_> anyone here know, is Template::Haml  will be the same as haml.js?

[11:58] <xinming_> hm, ignore me, I don't like the haml syntax. :-)\

[11:58] <xinming_> I'm trying to find a template engine for both client and server.

[11:58] *** cinch joined
[11:58] <xinming_> really hard to find one.

[11:59] <SmokeMachine> xinming_: I’m thinking of using Cro::Webapp::Template...

[12:03] <xinming_> SmokeMachine: But it doesn't render in client side

[12:03] <xinming_> I'm looking into mustache, But still need to think on how the templates should be organized so I'll be easy to maintain.

[12:13] *** aborazmeh left
[12:25] *** gabiruh_ left
[12:25] *** gabiruh joined
[12:30] *** wamba left
[12:47] *** wamba joined
[12:55] *** mj41 left
[12:57] *** eseyman left
[13:02] *** Altai-man_ joined
[13:04] *** sena_kun left
[13:04] *** eseyman joined
[13:05] *** Altai-man_ left
[13:13] *** domidumont left
[13:13] *** pecastro joined
[13:14] *** gabiruh left
[13:49] <tony-o_> xinming_: i usually have lib/App/Controller and a view/<controller name>/<function name serving a uri path>

[13:50] <tony-o_> lib/App/Controller/<controller name> ^^

[13:50] *** ZzZombo joined
[13:53] *** lucasb joined
[14:07] *** silug left
[14:12] *** leont joined
[14:18] *** silug joined
[14:28] <cpan-p6> New module released to CPAN! Path::Finder (0.2.1) by 03LEONT

[14:39] *** Cabanossi left
[14:40] *** stanley_tam joined
[14:44] *** stanley_tam left
[14:45] *** stanley_tam joined
[14:46] *** Cabanossi joined
[14:46] *** _jrjsmrtn joined
[14:46] *** __jrjsmrtn__ left
[14:48] *** stanley_tam left
[15:05] <leont> Getting some weird test results on Windows that I can't quite explain

[15:08] <leont> does dir() do something weird with directories? I'm quite at a loss to what's going on.

[15:10] <araraloren> what's happening ?

[15:27] *** vrurg_ joined
[15:28] *** vrurg left
[15:28] *** vrurg_ is now known as vrurg

[15:39] *** reach_satori_ left
[15:40] <leont> The last failure in https://github.com/Leont/path-finder/issues/6

[15:40] <leont> It's supposed to filter out .bzr, .git and friends, yet somehow it doesn't on windows

[15:41] <Grinnz> strange results on windows? why, i never

[15:41] <discord6> <RaycatWhoDat> Yee-haw. https://raymperry.github.io/raku-fansite/

[15:42] <discord6> <RaycatWhoDat> Comments, critique, pitchfolks welcome.

[15:44] <leont> Ultimately the test it does is «item.basename ~~ $pattern && $item.d», but the basename implementation looks sensible to me, and .d being broken sounds rather unlikely

[15:45] <araraloren> Seems like on the windows Raku using \ instead /

[15:46] <leont> Yeah, I fixed most of those, but the last failure isn't a / versus \ issue

[15:46] <leont> It's a "those values shouldn't be in the list in the first place"

[15:46] <araraloren> oh, I see

[15:53] <chloekek> RaycatWhoDat: apart from the Resources menu it seems to work completely when JS is disabled so kudos for that.

[15:58] <discord6> <RaycatWhoDat> Nah, Resources menu never worked

[15:58] <discord6> <RaycatWhoDat> Just an icon lol

[15:59] <timotimo> @RaycatWhoDat it breaks horribly when zoomed in

[16:06] <uzl[m]> It looks good, RaycatWhoDat. Some of the code examples are bleeding into the footer though.

[16:07] *** Houl joined
[16:07] <discord6> <tmtvl> Oh yeah, p6ring will need renaming to rakuring after the merge come Monday.

[16:08] <timotimo> we be rakuringing

[16:09] <uzl[m]> One of the cleanest and clearest sites I've come across is Inko's (https://inko-lang.org/) but I guess this is suggestive. ;-)

[16:13] <araraloren> leont The issue code is the line 283 of file Finder.pm

[16:13] <araraloren> You should add | flat the Array 

[16:42] <leont> You mean the <.git …>?

[16:44] <leont> Then why does the test pass on linux? That seems illogical to me (though if you tested it I believe you)

[16:50] *** leont left
[16:55] <mst> oh fuck my life the IRC channel moves are going to be fun

[16:56] *** reach_satori_ joined
[16:57] <lucasb> why aren't you all in #raku yet? We are having fun there already :)

[16:58] *** jmerelo joined
[17:00] <timotimo> mst: and changing up the cloaks :)

[17:05] <mst> *lolsob*

[17:05] * timotimo offers hugs

[17:37] *** john_parr left
[17:41] *** literal_ is now known as literal

[17:43] <discord6> <tmtvl> Disco channel should move as well. Maybe add a second bridge until we can switch of the #perl6 bridge?

[17:44] <Grinnz> with discord you can just rename everything though

[17:44] <Grinnz> oh you mean the bridge should

[17:47] *** gnufr33dom left
[17:50] *** domidumont joined
[17:50] <timotimo> bridge the messages from the perl6 channels to the raku channels via two discord bridge bots

[17:50] *** Ekho- is now known as Ekho

[17:51] <Grinnz> what could possibly go wro--

[17:55] *** k0Le joined
[17:59] *** k0Le left
[18:00] *** k0Le joined
[18:00] *** k0Le left
[18:00] *** k0Le joined
[18:02] *** gabiruh joined
[18:12] *** wildtrees joined
[18:18] *** araraloren left
[18:20] *** finanalyst joined
[18:24] * Doc_Holliwood registers church-of-raku.com

[18:28] *** gabiruh_ joined
[18:29] *** gabiruh left
[18:53] <AlexDaniel> funny thing I always forget about, even without a rename we still have raku alias

[18:53] <AlexDaniel> so if you call your project rakusmth today then it's not wrong

[18:58] <Doc_Holliwood> "even without"?

[18:58] *** jmerelo left
[19:00] *** aindilis left
[19:06] <AlexDaniel> Doc_Holliwood: I mean, like, before Monday

[19:08] *** domidumont left
[19:08] *** aindilis joined
[19:14] *** jmerelo joined
[19:24] <xinming_> Maybe we'll soon rename the channel to #raku

[19:30] *** Black_Ribbon joined
[19:33] *** daxim joined
[19:34] <AlexDaniel> not maybe but definitely, after the rename :)

[19:34] *** jjatria left
[19:35] *** jjatria joined
[19:44] *** cpan-p6 left
[19:45] *** cpan-p6 joined
[19:45] *** cpan-p6 left
[19:45] *** cpan-p6 joined
[19:47] <jjatria> RaycatWhoDat: I like the "Created with ♥ by »ö« and the Raku community." at the bottom :D

[19:51] *** jmerelo left
[19:57] <discord6> <theangryepicbanana> ya know I've been having more luck getting people to switch to p6 by calling it raku

[19:57] <discord6> <theangryepicbanana> until they see what it's actually called, in which case I get yelled at

[19:57] <xinming_> Is there web irc client written in perl6?

[19:58] <xinming_> If not perl5 is ok too

[19:58] <discord6> <theangryepicbanana> probably not, although you could always look on cpan?

[19:59] <jjatria> If Perl 5 is fine, I've been using https://convos.by, and it works great

[20:07] <discord6> <RaycatWhoDat> Thanks, jjatria

[20:08] <discord6> <RaycatWhoDat> I think the basic draft is far enough along

[20:08] <discord6> <RaycatWhoDat> Now, to make it mobile friendly.

[20:15] <xinming_> jjatria: Thanks, I'll check it out.

[20:22] <Doc_Holliwood> writing an irc client would be fun. i already have a name. Chō (Butterfly)

[20:25] *** roguelazer left
[20:27] *** roguelazer joined
[20:38] *** veesh left
[20:39] *** veesh joined
[20:48] *** Houl left
[20:52] *** sagax joined
[20:54] *** simcop2387 is now known as rakubot

[20:54] *** rakubot is now known as simcop2387

[20:58] *** roguelazer left
[21:00] *** roguelazer joined
[21:07] *** simcop2387 left
[21:07] *** Ven`` joined
[21:09] *** ravenousmoose left
[21:09] *** simcop2387 joined
[21:11] *** perlbot left
[21:12] <cpan-p6> New module released to CPAN! LibXML (0.1.3) by 03WARRINGD

[21:14] *** perlbot joined
[21:14] <sagax> hi all!

[21:14] <sagax> where i can read about different between perl5 and perl6 ?

[21:16] *** chloekek left
[21:16] <jdv79> as ive said before ill do the pause changes - not a big deal

[21:17] <jdv79> whatever works...

[21:17] <jdv79> sagax: good question.

[21:18] <Voldenet> sagax: https://docs.perl6.org/language/5to6-nutshell

[21:19] <jdv79> did david adler do most of 5to6?

[21:19] <jdv79> havent seen him in a long time

[21:20] *** aborazmeh joined
[21:20] *** aborazmeh left
[21:20] *** aborazmeh joined
[21:21] *** gabiruh_ left
[21:21] <sagax> thanks

[21:22] <Voldenet> jdv79: you can check authors of this doc on github, if you're interested https://github.com/perl6/doc/blob/master/doc/Language/5to6-nutshell.pod6

[21:28] *** simcop2387 left
[21:30] *** simcop2387 joined
[21:34] *** simcop2387 left
[21:34] *** zakharyas joined
[21:36] *** simcop2387 joined
[21:37] *** gabiruh joined
[21:38] *** simcop2387 left
[21:38] *** perlbot left
[21:38] *** wamba left
[21:40] *** simcop2387 joined
[21:41] *** perlbot joined
[21:43] *** Kaiepi left
[21:44] *** Kaiepi joined
[21:44] *** aborazmeh left
[21:52] *** simcop2387 left
[21:52] *** perlbot left
[21:55] *** zakharyas left
[21:55] *** perlbot joined
[21:58] *** simcop2387 joined
[21:59] <El_Che> we made slashdot, although it's not the same as in the 90s :) https://developers.slashdot.org/story/19/10/12/2134246/larry-wall-approves-re-naming-perl-6-to-raku

[21:59] <El_Che> weekly: we made slashdot, although it's not the same as in the 90s :) https://developers.slashdot.org/story/19/10/12/2134246/larry-wall-approves-re-naming-perl-6-to-raku

[21:59] <notable6> El_Che, Noted! (weekly)

[22:06] *** perlbot left
[22:06] *** simcop2387 left
[22:09] *** perlbot joined
[22:10] *** finanalyst left
[22:11] *** simcop2387 joined
[22:51] *** perlbot left
[22:51] *** simcop2387 left
[22:53] *** perlbot joined
[22:53] *** simcop2387 joined
[22:53] *** perlbot left
[22:53] *** simcop2387 left
[22:55] *** cwilson2 joined
[22:55] *** perlbot joined
[22:55] *** Ven`` left
[22:56] *** cwilson left
[22:58] *** simcop2387 joined
[22:59] <Geth_> ¦ whateverable: 2cb042a436 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[22:59] <Geth_> ¦ whateverable: Join Raku channels

[22:59] <Geth_> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/2cb042a436

[23:00] *** committable6 left
[23:00] *** notable6 left
[23:00] *** greppable6 left
[23:00] *** nativecallable6 left
[23:00] *** shareable6 left
[23:00] *** evalable6 left
[23:00] *** bisectable6 left
[23:00] *** squashable6 left
[23:00] *** coverable6 left
[23:00] *** statisfiable6 left
[23:00] *** benchable6 left
[23:00] *** releasable6 left
[23:00] *** unicodable6 left
[23:00] *** bloatable6 left
[23:00] *** tellable6 left
[23:00] *** quotable6 left
[23:00] *** reportable6 left
[23:00] *** evalable6 joined
[23:00] *** ChanServ sets mode: +v evalable6

[23:01] *** releasable6 joined
[23:01] *** squashable6 joined
[23:01] *** ChanServ sets mode: +v squashable6

[23:01] *** unicodable6 joined
[23:02] *** greppable6 joined
[23:03] *** tellable6 joined
[23:03] *** ChanServ sets mode: +v tellable6

[23:04] *** bloatable6 joined
[23:04] *** quotable6 joined
[23:04] *** shareable6 joined
[23:04] *** reportable6 joined
[23:04] *** statisfiable6 joined
[23:04] *** benchable6 joined
[23:04] *** notable6 joined
[23:04] *** bisectable6 joined
[23:05] *** coverable6 joined
[23:05] *** ChanServ sets mode: +v coverable6

[23:05] *** committable6 joined
[23:05] *** nativecallable6 joined
[23:07] *** pecastro left
[23:07] *** aindilis left
[23:09] *** X-Scale left
[23:14] *** leont joined
[23:31] <cpan-p6> New module released to CPAN! Path::Finder (0.2.2) by 03LEONT

[23:40] *** simcop2387 left
[23:40] *** perlbot left
[23:43] *** perlbot joined
[23:45] *** simcop2387 joined
[23:50] *** cwilson2 left
[23:54] *** aindilis joined
