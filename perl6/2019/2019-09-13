[00:02] *** wamba left
[00:04] <cpan-p6> New module released to CPAN! ORM::ActiveRecord (0.0.2) by 03GDONALD

[00:10] <vrurg> m: $a = 1; $a ,= 2; $a.perl.say

[00:10] <evalable6> vrurg, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/tFbwUbOOwA‚ê§Variable '$a' is not declared‚ê§at /tmp/tFbwUbOOwA:1‚ê§------> 03<BOL>08‚èè04$a = 1; $a ,= 2; $a.perl.say‚ê§¬ª

[00:10] <vrurg> m: my $a = 1; $a ,= 2; $a.perl.say

[00:10] <evalable6> vrurg, rakudo-moar ef2ee7912: OUTPUT: ¬´(my \List_94780069600176 = $(List_94780069600176, 2))‚ê§¬ª

[00:10] <vrurg> Very, very strange...

[00:16] <timotimo> it just doesn't flatten automatically for you

[00:17] <timotimo> m: my $a = 1; $a = $a, 2; say $a.perl

[00:17] <evalable6> timotimo, rakudo-moar ef2ee7912: OUTPUT: ¬´WARNINGS for /tmp/2OtngIMtEJ:‚ê§1‚ê§Useless use of constant integer 2 in sink context (lines 1, 1)‚ê§¬ª

[00:17] <timotimo> m: my $a = 1; $a = ($a, 2); say $a.perl

[00:17] <evalable6> timotimo, rakudo-moar ef2ee7912: OUTPUT: ¬´(my \List_93876663334736 = $(List_93876663334736, 2))‚ê§¬ª

[00:17] <timotimo> m: my $a = 1; $a = flat($a, 2); say $a.perl

[00:17] <evalable6> timotimo, rakudo-moar ef2ee7912: OUTPUT: ¬´$((my \List_94568668927840 = ($(List_94568668927840.Seq), 2)).Seq)‚ê§¬ª

[00:17] <timotimo> also not like that, lol

[00:17] <timotimo> m: my $a = 1; $a = flat($a<>, 2); say $a.perl

[00:17] <evalable6> timotimo, rakudo-moar ef2ee7912: OUTPUT: ¬´$((1, 2).Seq)‚ê§¬ª

[00:18] <Xliff> https://github.com/Xliff/p6-GTK-CoreTemps

[00:18] <Xliff> Now I just need to figure out how to properly align the f'ing labels...

[00:19] <vrurg> timotimo: Actually, it comes from R#1205. 

[00:19] <synopsebot> R#1205 [open]: https://github.com/rakudo/rakudo/issues/1205 [junctions] Compound junction-assignement operators cause a hang

[00:19] <vrurg> m: my $a = 1; $a &= 2; $a.gist.say

[00:19] <evalable6> vrurg, rakudo-moar ef2ee7912: OUTPUT: ¬´(signal SIGHUP) ¬´timed out after 10 seconds¬ª¬ª

[00:19] <vrurg> ^ like this...

[00:20] <timotimo> it gives you an infinite recursion, yeah

[00:20] <timotimo> m: my $a = 1; $a = $a<> & 2; $a.gist.say

[00:20] <evalable6> timotimo, rakudo-moar ef2ee7912: OUTPUT: ¬´all(1, 2)‚ê§¬ª

[00:20] <timotimo> if you don't decont, the scalar sticks around, and gets stuff assigned into it

[00:20] <timotimo> which is the scalar itself, and the 2

[00:21] <timotimo> not sure if NOTABUG

[00:25] <vrurg> timotimo: it's rather a bug. But it must be carefully considered. Perhaps, would have to be fixed for each type in its own way.

[00:26] <timotimo> should metaop_assign put a decont in there always?

[00:26] <timotimo> you could try that and run a full spectest

[00:27] <vrurg> sounds reasonable. deconting would have to be done by Actions in QAST due to later optimization.

[00:29] <timotimo> hm?

[00:30] *** Xliff left
[00:30] <vrurg> METAOP_ASSIGN call gets optimized away

[00:30] *** MilkmanDan left
[00:30] <timotimo> oh, yeah, sometimes i guess

[00:31] <irced> .tell Elronnd http://dpaste.com/30NR3QS

[00:31] <tellable6> irced, I'll pass your message to Elronnd

[00:32] *** MilkmanDan joined
[00:35] *** kst left
[00:38] <irced> i am subclassing an Int and adding a role but after I construct my object i can't use the assignment operator = without changing the type. that is, my $a = dividend_t.new(0); # ^dividend_t; $a = 11; #^int

[00:39] <irced> i guess i have to be explicit everytime and do a = dividend_t.new(11)

[00:39] <timotimo> assignment to a scalar will replace the contents, if you want it to be different, you have to replace the scalar witha proxy

[00:39] <irced> so by proxy you mean what i just did?

[00:40] <timotimo> i don't see a proxy

[00:40] * irced searches the room for a proxy.

[00:40] * irced looks under the couch cushion that he's sleeping on.

[00:40] <timotimo> but i wouldn't say it's the right way to go, though

[00:41] * irced finds a proxy in the docs.

[00:41] <irced> ok, thanks for your tip timotimo!

[00:45] *** kst joined
[00:45] <irced> i understand objects such as literal constants better after the discussion.

[00:48] * irced puts literal constants in quotes retroactively.

[00:49] <irced> i'll just work with the language defaults as suggested

[01:11] *** HoboWithAShotgun left
[01:28] <Elronnd> irced: yes.  But that's nto a very common pattern in c

[01:28] <tellable6> 2019-09-13T00:31:54Z #perl6 <irced> Elronnd http://dpaste.com/30NR3QS

[01:28] <Elronnd> largely because it doesn't have closures

[01:28] <irced> Elronnd: ok

[01:28] <irced> Elronnd: thanks for your feedback.

[01:29] <Elronnd> I mean, it's used sometimes, but generally not for that kind of thing

[01:29] <Elronnd> if I were writing a c++ or d wrapper, though, I would totes make it throw an exception (which is basically the same thing)

[01:31] *** wildtrees left
[01:41] *** molaf left
[01:54] *** molaf joined
[02:08] *** Cabanossi left
[02:20] *** Cabanossi joined
[02:45] *** [particle]1 joined
[02:46] *** [particle] left
[02:49] *** [particle]1 left
[02:52] *** [particle] joined
[02:56] *** [particle]1 joined
[02:57] *** [particle] left
[03:00] *** [particle] joined
[03:00] *** [particle]1 left
[03:02] *** cpan-p6 left
[03:03] *** cpan-p6 joined
[03:03] *** cpan-p6 left
[03:03] *** cpan-p6 joined
[03:04] *** [particle]1 joined
[03:04] *** [particle] left
[03:13] *** [particle]1 left
[03:14] *** [particle] joined
[03:16] *** AlexDaniel left
[03:16] *** AlexDaniel joined
[03:17] *** AlexDaniel left
[03:17] *** AlexDaniel joined
[03:28] *** roy[m] joined
[03:50] *** aindilis left
[03:51] *** aindilis joined
[03:54] *** rindolf joined
[04:12] <irced> well subclassing Int opened a whole can a worms, seems like just as in c++, std types should be wrapped

[04:14] * irced impales a worm on a hook and casts a line.

[04:14] *** molaf left
[04:19] *** jmerelo joined
[04:24] *** irced left
[05:17] *** sauvin joined
[05:19] *** Itaipu left
[05:19] *** Itaipu joined
[05:26] *** Kaypie joined
[05:26] *** Kaiepi left
[05:35] *** robertle_ joined
[05:37] *** domidumont joined
[05:38] *** wamba joined
[05:42] *** domidumont left
[05:46] *** Sgeo joined
[05:49] *** Sgeo_ left
[05:52] *** Sgeo_ joined
[05:55] *** Sgeo left
[06:01] *** Sgeo_ left
[06:02] *** Cabanossi left
[06:02] *** Cabanossi joined
[06:05] *** Sgeo joined
[06:22] *** domidumont joined
[06:29] *** jmerelo left
[06:30] *** domidumont left
[06:38] *** shlomif joined
[06:39] *** rindolf left
[06:39] *** shlomif is now known as rindolf

[07:00] *** domidumont joined
[07:02] *** sena_kun joined
[07:14] *** bitnexus joined
[07:32] *** ChoHag left
[07:52] *** sftp left
[07:52] *** sftp joined
[08:01] *** zakharyas joined
[08:06] *** pecastro joined
[08:11] *** krychu_ joined
[08:11] *** krychu_ left
[08:15] *** krychu_ joined
[08:15] *** krychu_ left
[08:17] <tadzik> https://media.tenor.co/images/486aaf8e52310f6645e6affe18c33f82/raw

[08:19] *** krychu_ joined
[08:19] *** krychu_ left
[08:21] *** krychu_ joined
[08:21] *** krychu_ left
[08:22] *** krychu_ joined
[08:23] *** krychu_ left
[08:33] *** krychu_ joined
[08:33] *** krychu_ left
[08:33] *** krychu_ joined
[08:34] *** krychu_ left
[08:34] <cpan-p6> New module released to CPAN! LibXML (0.0.7) by 03WARRINGD

[08:43] *** leont joined
[08:45] *** krychu_ joined
[08:46] *** krychu_ left
[08:49] *** krychu_ joined
[08:50] *** krychu_ left
[08:52] *** krychu_ joined
[08:52] *** krychu_ left
[08:54] *** krychu_ joined
[08:55] *** krychu_ left
[08:59] *** HoboWithAShotgun joined
[08:59] *** krychu joined
[08:59] *** krychu left
[09:01] *** krychu joined
[09:01] *** krychu left
[09:06] *** krychu joined
[09:06] *** krychu left
[09:08] *** krychu joined
[09:08] *** krychu left
[09:16] *** krychu joined
[09:16] *** krychu left
[09:19] *** ravenousmoose joined
[09:22] *** krychu_ joined
[09:22] *** krychu_ left
[09:24] *** ravenousmoose left
[09:29] *** krychu_ joined
[09:29] *** krychu_ left
[09:36] *** krychu_ joined
[09:36] *** krychu_ left
[09:46] *** Black_Ribbon left
[09:53] *** krychu_ joined
[09:53] *** krychu_ left
[09:54] *** krychu_ joined
[09:54] *** krychu_ left
[09:58] *** krychu_ joined
[09:58] *** krychu_ left
[10:01] *** krychu_ joined
[10:01] *** krychu_ left
[10:01] *** krychu_ joined
[10:02] *** krychu_ left
[10:15] *** krychu_ joined
[10:15] *** krychu_ left
[10:19] *** krychu_ joined
[10:19] *** krychu_ left
[10:21] *** krychu_ joined
[10:22] *** krychu_ left
[10:22] *** krychu_ joined
[10:22] *** krychu_ left
[10:23] *** Guest93 left
[10:24] *** Guest93 joined
[10:27] *** krychu_ joined
[10:27] *** krychu_ left
[10:30] *** krychu joined
[10:30] *** krychu left
[10:42] *** krychu joined
[10:42] *** krychu left
[11:02] *** Cabanossi left
[11:02] *** krychu joined
[11:02] *** krychu left
[11:04] *** spycrab0 left
[11:05] *** krychu joined
[11:05] *** krychu left
[11:08] *** zakharyas left
[11:11] *** Cabanossi joined
[11:29] *** krychu_ joined
[11:29] *** krychu_ left
[11:31] *** krychu_ joined
[11:31] *** holyghost left
[11:31] *** krychu_ left
[11:36] *** krychu_ joined
[11:36] *** krychu_ left
[11:46] *** HoboWithAShotgun left
[11:49] *** krychu_ joined
[11:50] *** krychu_ left
[11:55] *** ChoHag joined
[12:00] *** krychu_ joined
[12:00] *** krychu_ left
[12:01] *** krychu_ joined
[12:02] *** krychu_ left
[12:07] <cpan-p6> New module released to CPAN! ORM::ActiveRecord (0.0.3) by 03GDONALD

[12:19] *** lucasb joined
[12:21] *** krychu joined
[12:21] *** krychu left
[12:22] *** krychu joined
[12:22] *** krychu left
[12:25] *** krychu joined
[12:25] *** krychu left
[12:26] *** krychu joined
[12:26] *** krychu left
[12:30] *** __jrjsmrtn__ left
[12:31] *** __jrjsmrtn__ joined
[12:31] *** krychu joined
[12:31] *** krychu left
[12:33] *** abraxxa left
[12:37] *** krychu joined
[12:37] *** epony left
[12:38] *** krychu left
[12:41] *** krychu joined
[12:42] *** krychu left
[12:42] *** astronavt left
[12:43] *** astronavt joined
[12:48] *** krychu joined
[12:48] *** krychu left
[13:02] *** krychu joined
[13:02] *** krychu left
[13:04] *** zakharyas joined
[13:10] *** krychu joined
[13:10] *** molaf joined
[13:10] *** krychu left
[13:12] *** krychu joined
[13:12] *** krychu left
[13:16] *** krychu joined
[13:16] *** krychu left
[13:21] *** HoboWithAShotgun joined
[13:24] *** epony joined
[13:25] *** krychu joined
[13:26] *** krychu left
[13:29] *** MasterDuke left
[13:34] <Geth> ¬¶ doc: 4a46515f62 | Coke++ | doc/Language/about.pod6

[13:34] <Geth> ¬¶ doc: mark code type

[13:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4a46515f62

[13:34] <Geth> ¬¶ doc: d777695aaa | Coke++ | doc/Language/nativecall.pod6

[13:34] <Geth> ¬¶ doc: Allow example to compile

[13:34] <synopsebot> Link: https://doc.perl6.org/language/about

[13:34] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[13:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d777695aaa

[13:37] *** cognominal left
[13:39] *** krychu joined
[13:39] *** krychu left
[13:39] *** vrurg left
[13:43] *** krychu joined
[13:43] *** krychu left
[13:45] *** krychu joined
[13:45] *** krychu left
[13:46] *** krychu joined
[13:46] *** krychu left
[13:52] *** veesh left
[13:54] *** krychu joined
[13:54] *** krychu left
[13:55] *** krychu joined
[13:55] *** krychu left
[13:57] <[Coke]> doc build failed on "make test", except it's working fine here. weird. Restarted the travis build

[14:00] *** krychu joined
[14:00] *** krychu left
[14:02] *** krychu joined
[14:02] *** krychu left
[14:05] *** krychu joined
[14:05] *** krychu left
[14:07] *** krychu joined
[14:07] *** krychu left
[14:09] <[Coke]> build failed on t/02-tests-valid.t again, but this time on a different file.

[14:09] <[Coke]> # f uninitialized value $repo-id of type Any in string context.

[14:14] *** krychu joined
[14:14] *** krychu left
[14:21] *** ravenousmoose joined
[14:22] *** krychu joined
[14:22] *** krychu left
[14:29] *** Sgeo_ joined
[14:32] *** Sgeo left
[14:37] *** Sgeo_ left
[14:45] *** krychu joined
[14:46] *** krychu left
[14:48] <HoboWithAShotgun> How do I tell comma not to insert spaces before open curlies?

[14:49] <HoboWithAShotgun> Every time i type { at the beginning of a line the darn thing puts a number of spaces in front of it, and never the right amount

[14:50] <HoboWithAShotgun> I disabled most of the smart keys, yet it is still doing it

[14:51] *** wamba left
[14:51] *** Xliff joined
[14:51] <Xliff> \o

[14:52] *** krychu joined
[14:53] *** krychu left
[14:53] * HoboWithAShotgun greets Xliff with a girdle of flowers and a bowl of lukewarm goat milk

[14:54] * lizmat takes inspiration from that and goes for a cuppa

[15:00] *** krychu joined
[15:00] *** krychu left
[15:04] *** krychu joined
[15:04] *** krychu left
[15:08] *** Sgeo joined
[15:09] *** krychu joined
[15:10] *** krychu left
[15:12] *** krychu joined
[15:12] *** krychu left
[15:18] *** krychu joined
[15:18] *** krychu left
[15:19] *** Kaypie is now known as Kaiepi

[15:19] *** ravenousmoose left
[15:24] <Xliff> https://github.com/Xliff/p6-GTK-CoreTemps

[15:30] *** MasterDuke joined
[15:31] *** domidumont left
[15:34] *** krychu joined
[15:34] *** krychu left
[15:38] *** pat_js joined
[15:39] <Xliff> Does someone know how to get core temp data without going through another process like sensors?

[15:40] *** krychu joined
[15:41] *** krychu left
[15:42] *** krychu joined
[15:42] *** krychu left
[15:46] *** krychu joined
[15:46] *** krychu left
[15:47] *** zakharyas left
[15:49] *** krychu joined
[15:50] *** krychu left
[15:52] <Elronnd> Xliff: probably something in /proc.  I would check out the source to sensors

[15:55] *** krychu joined
[15:55] *** krychu left
[15:56] *** krychu joined
[15:56] *** krychu left
[16:00] *** krychu joined
[16:01] *** krychu left
[16:05] *** daxim left
[16:05] *** daxim joined
[16:05] *** Sgeo_ joined
[16:06] <Xliff> Elronnd: Yeah. I was going to do that as a last resort. That's a LOT of code.

[16:06] <Xliff> And all I can get out of Google is that there are thermal_sensor? items in /sys

[16:06] <Xliff> Nothing that seems to enumerate the temperaturs by actual cpu.

[16:08] *** Sgeo left
[16:11] <HoboWithAShotgun> That doesn't seem to be trivial in vanilla C under Windows either. 

[16:14] <Xliff> HoboWithAShotgun: Key words: "Under" and "Windows". :)

[16:14] <Elronnd> Xliff: there is /sys/devices/virtual/thermal/thermal_zone*/temp

[16:15] <Elronnd> I think those are millidegrees C

[16:15] <HoboWithAShotgun> No, the keyword is "vanilla c". It's trivial using WMI

[16:15] *** krychu joined
[16:15] *** krychu left
[16:15] <HoboWithAShotgun> Having access to .NET / mono from Perl6 natively, THAT would be a killer feature

[16:19] *** krychu_ joined
[16:19] *** krychu_ left
[16:26] *** vrurg joined
[16:26] *** dogbert17 joined
[16:28] *** krychu joined
[16:28] *** krychu left
[16:28] <SmokeMachine> Shouldn't have a `preferences` here? I'm also trying `Cmd + ,` and nothing happens... https://usercontent.irccloud-cdn.com/file/MJQAnW3J/image.png

[16:29] <SmokeMachine> the problem may be my Mac... but idk

[16:29] <Xliff> Elronnd: Yes, but that's just one zone of two on my chip.

[16:29] *** krychu joined
[16:29] <Elronnd> Xliff: ahh, idk then

[16:30] *** krychu left
[16:30] <Xliff> I have 20 cores.

[16:30] <Elronnd> HoboWithAShotgun: I believe there was an experimental .net compiler.  Probably not on par with rakudo though

[16:30] <Xliff> That's 10 CPU temps that I need.

[16:30] <Xliff> Elronnd: Thanks for the suggestions, tho!

[16:31] <Xliff> OK. New topic. I have libraries that I am distributing with my module. How do I reference those in rakudo?

[16:31] <Xliff> %?RESOURCES<path-to-lib>?

[16:32] *** krychu joined
[16:32] *** krychu left
[16:34] *** vrurg left
[16:37] <HoboWithAShotgun> Elronnd: Yes, I know. Shame that didn't work out. But still, you can access .NET from vanilla C via P/Invoke. 

[16:38] <Xliff> Does perl6 support sending a false flag with "sub MAIN (:$verbose = True) {}"

[16:38] <HoboWithAShotgun> So in theory it should be possible to write some kind of interface layer. 

[16:38] <Xliff> Or do you need "--verbose=0"?

[16:38] <lizmat> HoboWithAShotgun: https://github.com/sorear/niecza

[16:38] <Xliff> I thought yyou could do "--no-verbose" for false.

[16:38] *** pat_js left
[16:42] <HoboWithAShotgun> lizmat: No activity since 6 years. Also, what I mean is a bridge from rakudo to .NET, not some other compiler.

[16:42] <lizmat> HoboWithAShotgun: ah, ok...  please do!  :-)

[16:42] <HoboWithAShotgun> I'd be happy to do the gruntwork.

[16:42] <Xliff> I could help with the NativeCall stuff.

[16:42] <HoboWithAShotgun> But coming up with a concept is over my head, sadly.

[16:43] <Xliff> o

[16:43] <lizmat> perhaps pmurias and jnthn could give you pointers

[16:45] *** krychu joined
[16:45] <Elronnd> HoboWithAShotgun: looks like 3 years actually, but yeah

[16:45] *** krychu left
[16:45] <Elronnd> HoboWithAShotgun: I might start by looking at the jvm compiler

[16:48] *** krychu joined
[16:49] *** krychu left
[16:49] *** leont left
[16:49] *** krychu joined
[16:50] *** krychu left
[16:51] *** krychu joined
[16:51] *** krychu left
[16:55] <Voldenet> I dislike design choice that led to using ~ for string concatenation

[16:56] <Voldenet> On windows, when using polish keymap, it requires typing in shift + ` + space

[16:56] <Voldenet> so to comfortably use it, one has to use english keymap, which is suboptimal

[16:59] *** aborazmeh joined
[16:59] *** aborazmeh left
[16:59] *** aborazmeh joined
[17:02] <AlexDaniel> Voldenet: fix your keyboard layout then

[17:02] <AlexDaniel> it's not like keyboard layouts are unchangeable‚Ä¶

[17:03] <AlexDaniel> like, I can type these ÔΩ¢ÔΩ£ right away, no compose sequences required

[17:03] <AlexDaniel> sure enough anybody can improve their layout to have ~ too

[17:09] *** krychu joined
[17:09] *** krychu left
[17:17] *** krychu_ joined
[17:17] *** krychu_ left
[17:17] *** krychu_ joined
[17:17] *** krychu_ left
[17:19] *** krychu joined
[17:19] *** krychu left
[17:24] *** krychu joined
[17:25] *** krychu left
[17:29] *** krychu joined
[17:29] *** krychu left
[17:29] *** vrurg joined
[17:30] *** vrurg left
[17:30] *** krychu joined
[17:30] *** krychu left
[17:33] *** Altai-man_ joined
[17:33] *** vrurg joined
[17:34] *** krychu joined
[17:34] *** krychu left
[17:34] *** vrurg left
[17:35] *** sena_kun left
[17:37] *** krychu joined
[17:37] *** krychu left
[17:38] *** krychu joined
[17:38] *** krychu left
[17:39] *** SCHAPiE left
[17:40] *** aborazmeh left
[17:43] *** leont joined
[17:47] *** krychu joined
[17:47] *** krychu left
[17:48] *** krychu joined
[17:48] *** krychu left
[17:49] *** SCHAPiE joined
[17:51] *** wildtrees joined
[17:52] *** krychu joined
[17:52] *** krychu left
[17:52] *** wildtrees left
[17:53] *** wildtrees joined
[18:00] *** krychu joined
[18:00] *** krychu left
[18:02] *** krychu joined
[18:02] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @locals.kv.rotor(2).grep({ .[2] eq 'd' ).flat.say

[18:02] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/U7QEw5KC6z‚ê§Missing‚Ä¶¬ª

[18:02] <evalable6> Xliff, Full output: https://gist.github.com/b8df1f8566e89612da2d0984292132f4

[18:02] *** krychu left
[18:02] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @locals.kv.rotor(2).grep({ .[2] eq 'd' }).flat.say

[18:02] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/3KaGPpkpf8‚ê§Variabl‚Ä¶¬ª

[18:02] <evalable6> Xliff, Full output: https://gist.github.com/499a56cd2867f00003dd3bd83ba118bf

[18:03] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[2] eq 'd' }).flat.say

[18:03] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´Use of Nil in string context‚ê§()‚ê§  in block  at /tmp/MQiEx9VBw3 line 1‚ê§Use of Nil in string‚Ä¶¬ª

[18:03] <evalable6> Xliff, Full output: https://gist.github.com/92f0b8083dfebae1d21591e63467f777

[18:03] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat.say

[18:03] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(3 d)‚ê§¬ª

[18:04] <Demos[m]> can I donwload the documentation to my local machine

[18:05] <Demos[m]> like in the repl I say `IO::Path.WHY` and get "no documentation available"

[18:06] *** krychu joined
[18:06] *** krychu left
[18:07] *** krychu joined
[18:07] *** patrickb joined
[18:07] <patrickb> .tell Xliff I forgot to tell you all of the complete tech stack I used to connect to MSSQL: DBIish, DBDish::ODBC, UnixODBC and FreeTDS.

[18:07] <tellable6> patrickb, I'll pass your message to Xliff

[18:07] *** krychu left
[18:07] <timotimo> yes you can. however, the .WHY on most things will not give you the docs even then

[18:08] <patrickb> .tell Xliff Why PreparedStatements don't work. ODBC requires to pass the *DB* column types of parameters when creating (or using?) a prepared statement. One can use `DescribeParam()` to determine that type (DBDish::ODBC uses that). FreeTDS does not support `DescribeParam()` and will not add support in the foreseeable future. One could work around

[18:08] <patrickb> that by guessing the DB column types based on the type of the passed values. A Python ODBC implementation (I think it was pyODBC I was looking at) does.  It's actually faster that way as the extra roundtrip of `DescribeParam()` is not needed.

[18:08] <tellable6> patrickb, I'll pass your message to Xliff

[18:08] <tellable6> 2019-09-09T19:42:28Z #perl6 <sortiz> patrickb I merge your PR, sorry for the delay.

[18:08] <tellable6> 2019-09-09T20:44:29Z #perl6-dev <Xliff> patrickb Thanks for the information. I was hoping it would be as simple as mapping to the right routine. 

[18:08] *** Actualeyes joined
[18:08] *** leont left
[18:09] *** krychu joined
[18:09] <patrickb> .tell Xliff Other drivers might actually support DescribeParam() and Just Work‚Ñ¢

[18:09] <tellable6> patrickb, I'll pass your message to Xliff

[18:09] *** krychu left
[18:10] * patrickb is back to vacationing

[18:10] *** patrickb left
[18:12] *** krychu joined
[18:13] *** krychu left
[18:18] <AlexDaniel`> Demos: not really

[18:19] *** mscha joined
[18:20] <AlexDaniel> rba: can you update https://github.com/perl6/problem-solving/issues/68 so that each resource has a list of people who maintain it?

[18:20] <AlexDaniel> rba: because I still have no fucking clue

[18:20] <mscha> m: say ‡ß™ + 3; # :-)

[18:20] <evalable6> mscha, rakudo-moar ef2ee7912: OUTPUT: ¬´7‚ê§¬ª

[18:20] <AlexDaniel> rba: for example, who should I bother to bring this link back up? https://docs.perl6.org/perl6.xhtml

[18:21] <AlexDaniel> u: ‡ß™

[18:21] <unicodable6> AlexDaniel, U+09EA BENGALI DIGIT FOUR [Nd] (‡ß™)

[18:21] <rba> AlexDaniel: where is this link come from?

[18:22] <AlexDaniel> rba: my memory

[18:22] <timotimo> it's linked to on the front page of the docs site

[18:23] *** krychu joined
[18:23] *** krychu left
[18:24] *** krychu joined
[18:24] *** krychu left
[18:24] <rba> AlexDaniel: html without x

[18:25] <rba> Yet unreachable 

[18:25] *** sauvin left
[18:25] <rba> docs.perl6.org is still on the tmp server 

[18:27] *** vrurg joined
[18:27] <rba> unreachable links is something we need to take care of 

[18:28] *** krychu joined
[18:29] *** krychu left
[18:33] *** krychu joined
[18:33] *** krychu left
[18:34] *** mscha left
[18:38] *** krychu joined
[18:38] *** krychu left
[18:39] *** krychu joined
[18:39] *** krychu left
[18:42] *** krychu joined
[18:42] *** krychu left
[18:47] *** krychu joined
[18:47] *** krychu left
[18:49] *** krychu joined
[18:49] *** krychu left
[18:50] *** krychu joined
[18:50] *** krychu left
[18:51] <Geth> ¬¶ problem-solving/path-to-raku: 90b8d0c7e7 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[18:51] <Geth> ¬¶ problem-solving/path-to-raku: Rephrase the Social Media paragraph

[18:51] <Geth> ¬¶ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/90b8d0c7e7

[18:52] *** krychu joined
[18:52] *** krychu left
[18:53] *** vrurg left
[18:54] *** vrurg joined
[18:54] *** vrurg left
[18:56] *** vrurg joined
[18:56] <Geth> ¬¶ problem-solving/path-to-raku: 43a1c6d6af | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[18:56] <Geth> ¬¶ problem-solving/path-to-raku: Move the extensions discussion to a separate issue / PR

[18:56] <Geth> ¬¶ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/43a1c6d6af

[18:57] *** wamba joined
[18:58] *** krychu joined
[18:58] *** krychu left
[18:58] *** zakharyas joined
[18:58] *** krychu joined
[18:59] <Geth> ¬¶ problem-solving/path-to-raku: 6e7e625e53 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[18:59] <Geth> ¬¶ problem-solving/path-to-raku: Use the #rakulang hash tag, please

[18:59] <Geth> ¬¶ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/6e7e625e53

[18:59] *** krychu left
[18:59] *** krychu joined
[19:00] *** krychu left
[19:03] *** krychu joined
[19:04] *** krychu left
[19:08] <Xliff> .tell patrickb Thanks for the additional info! I'll keep that in mind.

[19:08] <tellable6> Xliff, I'll pass your message to patrickb

[19:10] *** krychu joined
[19:10] *** krychu left
[19:13] *** krychu joined
[19:13] *** krychu left
[19:15] *** sena_kun joined
[19:15] *** sena_kun left
[19:16] *** krychu joined
[19:16] *** krychu left
[19:17] *** Altai-man_ left
[19:18] *** krychu joined
[19:19] *** krychu left
[19:21] *** krychu joined
[19:21] *** krychu left
[19:24] *** krychu joined
[19:24] *** krychu left
[19:25] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat.say; @a .= splice($k, 0); @a.say

[19:25] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(3 d)‚ê§[]‚ê§¬ª

[19:25] <tellable6> 2019-09-13T18:07:28Z #perl6 <patrickb> Xliff I forgot to tell you all of the complete tech stack I used to connect to MSSQL: DBIish, DBDish::ODBC, UnixODBC and FreeTDS.

[19:25] <tellable6> 2019-09-13T18:09:34Z #perl6 <patrickb> Xliff Other drivers might actually support DescribeParam() and Just Work‚Ñ¢

[19:25] <tellable6> https://gist.github.com/31b7853f59724594700719875d961aaf

[19:26] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat.say; @a.splice($k, 0); @a.say

[19:26] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(3 d)‚ê§[a b c d e f]‚ê§¬ª

[19:26] *** krychu joined
[19:27] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat.say; @a.splice($k, 0).sau

[19:27] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) (3 d)‚ê§No such method 'sau' for invocant of type 'Array'. Did you mean 'say'?‚ê§  in block <unit> at /tmp/ZMs2pJDrAZ line 1‚ê§‚ê§¬ª

[19:27] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat.say; @a.splice($k, 0).say

[19:27] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(3 d)‚ê§[]‚ê§¬ª

[19:27] *** krychu left
[19:27] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; @a.splice($k, 0).say

[19:27] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´[]‚ê§¬ª

[19:27] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; $k.say; @a.splice($k, 0).say

[19:27] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´3‚ê§[]‚ê§¬ª

[19:27] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; $k.say; @a.splice($k, 0, ()).say

[19:27] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´3‚ê§[]‚ê§¬ª

[19:27] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; $k.say; @a.splice($k, 1).say

[19:27] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´3‚ê§[d]‚ê§¬ª

[19:27] *** cpan-p6 left
[19:28] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; $k.say; @a .= splice($k, 1); @a.say

[19:28] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´3‚ê§[d]‚ê§¬ª

[19:28] *** cpan-p6 joined
[19:28] *** cpan-p6 left
[19:28] *** cpan-p6 joined
[19:28] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; $k.say; @a.splice($k, 1); @a.say

[19:28] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´3‚ê§[a b c e f]‚ê§¬ª

[19:29] <Xliff> m: my @a = <a b c d e f>; my ($k, $v) = @a.kv.rotor(2).grep({ .[1] eq 'd' }).flat; $k.say; @a.splice($k, 0, 'dd'); @a.say

[19:29] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´3‚ê§[a b c dd d e f]‚ê§¬ª

[19:37] *** krychu joined
[19:37] *** krychu left
[19:39] <Xliff> m: my @a = (<a b c>, <b c> <D <E F> G>); @a.say

[19:39] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/qTMkwLjQiO‚ê§Two ter‚Ä¶¬ª

[19:39] <evalable6> Xliff, Full output: https://gist.github.com/ee63c55ff3b01f4dd8fc26b89d17e3ce

[19:39] *** vrurg left
[19:40] <Xliff> m: my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) )

[19:40] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´¬ª

[19:40] <Xliff> m: my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); @a.say

[19:40] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´[0 (1 2) 3 (0 (2 (1 0)))]‚ê§¬ª

[19:40] <Xliff> m: my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); @a.flat.say

[19:40] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(0 (1 2) 3 (0 (2 (1 0))))‚ê§¬ª

[19:41] *** vrurg joined
[19:41] <Xliff> Is there a deepflat?

[19:41] *** krychu joined
[19:41] *** krychu left
[19:42] <Xliff> m: sub deepflat ($a) { $a ~~ Array $a.deepflat !! $a };  my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:42] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/IZ_TtOdARF‚ê§Two ter‚Ä¶¬ª

[19:42] <evalable6> Xliff, Full output: https://gist.github.com/fb438f0430a54b1d3397f17b81f78f94

[19:42] <Xliff> m: sub deepflat ($a) { $a ~~ Array ?? $a.deepflat !! $a };  my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:42] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´0‚ê§¬ª

[19:43] <Xliff> m: sub deepflat ($a) { $a ~~ Array ?? $a.&deepflat !! $a };  my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:43] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´0‚ê§¬ª

[19:43] *** netrino joined
[19:44] <Xliff> m: sub deepflat ($a) { $a ~~ Array ?? $a.map( *.deepflat ) !! $a };  my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:44] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´0‚ê§¬ª

[19:44] <Xliff> m: sub deepflat ($a) { $a ~~ Array ?? $a.map( *.&deepflat ) !! $a };  my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:44] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´0‚ê§¬ª

[19:45] <Xliff> m: sub deepflat ($a) { $a ~~ Array ?? $a.map( *.&deepflat ).flat !! $a };  my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:45] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´0‚ê§¬ª

[19:46] <Xliff> m: sub deepflat (@a) { @a.map({ $_ ~~ Array .&deepflat !! $a }).flat };   my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:46] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/uLj08AVxJG‚ê§Malform‚Ä¶¬ª

[19:46] <evalable6> Xliff, Full output: https://gist.github.com/769672e9062136c4fa6128b5f98cc5f8

[19:46] <Xliff> m: sub deepflat (@a) { @a.map({ $_ ~~ Array ?? .&deepflat !! $a }).flat };   my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:46] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/sP36U6fdkS‚ê§Variabl‚Ä¶¬ª

[19:46] <evalable6> Xliff, Full output: https://gist.github.com/ffcd726cb8f42ea69193188f2a2865a7

[19:47] <Xliff> m: sub deepflat (@a) { @a.map({ $_ ~~ Array ?? .&deepflat !! $_ }).flat };   my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); $a.&deepflat.say

[19:47] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) Type check failed in binding to parameter '@a'; expected Positional but got Int (0)‚ê§  in sub deepflat at /tmp/dm3QQhzZoE line 1‚ê§  in block <unit> at /tmp/dm3QQhzZoE line 1‚ê§‚ê§¬ª

[19:48] <Xliff> m: my ($a, $b, $c, $d) = ^4; my @a = ( ($a, ($b, $c), $d, ($a, ($c, ($b, $a)))) ); @a.deepflat.say

[19:48] <evalable6> Xliff, rakudo-moar ef2ee7912: OUTPUT: ¬´(exit code 1) No such method 'deepflat' for invocant of type 'Array'‚ê§  in block <unit> at /tmp/dW2UgDspjl line 1‚ê§‚ê§¬ª

[19:49] *** zakharyas left
[19:53] *** Black_Ribbon joined
[19:58] *** guifa2 joined
[20:05] *** krychu joined
[20:05] *** krychu left
[20:10] *** krychu joined
[20:11] *** krychu left
[20:12] *** krychu joined
[20:12] *** krychu left
[20:19] *** krychu joined
[20:19] *** krychu left
[20:21] *** krychu joined
[20:21] *** krychu left
[20:23] *** krychu joined
[20:23] *** krychu left
[20:25] *** krychu joined
[20:25] *** krychu left
[20:26] *** krychu joined
[20:27] *** krychu left
[20:33] *** krychu joined
[20:34] *** krychu left
[20:36] *** krychu joined
[20:36] *** krychu left
[20:39] *** krychu joined
[20:39] *** krychu left
[20:41] *** roy[m] left
[20:41] *** aearnus[m] left
[20:41] *** unclechu left
[20:41] *** lance_w[m] left
[20:41] *** folex left
[20:41] *** Demos[m] left
[20:41] *** CIAvash left
[20:41] *** EuAndreh[m] left
[20:42] *** TravisRt2botio[m left
[20:42] *** BlackChaosNL[m] left
[20:42] *** Matthew[m] left
[20:42] *** sergiotarxz[m] left
[20:42] *** xliff[m] left
[20:42] *** Guest48976 left
[20:42] *** rba[m] left
[20:42] *** mack[m]1 left
[20:42] *** Seance[m] left
[20:42] *** uzl[m] left
[20:42] *** matiaslina left
[20:42] *** AlexDaniel` left
[20:44] *** krychu joined
[20:44] *** krychu left
[20:48] *** AlexDaniel` joined
[20:50] *** krychu joined
[20:50] *** krychu left
[20:53] *** krychu joined
[20:53] <Xliff> \o/ -- 280Kloc of Perl6 code!

[20:55] *** krychu left
[20:56] *** krychu joined
[20:56] <MasterDuke> impressive

[20:57] <Xliff> :>

[20:57] <Xliff> Thanks, MasterDuke

[21:00] <Xliff> https://docs.google.com/spreadsheets/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/edit#gid=365670324

[21:00] <Xliff> https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[21:02] *** BlackChaosNL[m] joined
[21:02] *** EuAndreh[m] joined
[21:02] *** Matthew[m] joined
[21:02] *** lance_w[m] joined
[21:02] *** sergiotarxz[m] joined
[21:02] *** TravisRt2botio[m joined
[21:02] *** Guest53157 joined
[21:02] *** rba[m] joined
[21:02] *** unclechu joined
[21:02] *** roy[m] joined
[21:02] *** xliff[m] joined
[21:02] *** aearnus[m] joined
[21:02] *** matiaslina joined
[21:02] *** Demos[m] joined
[21:02] *** folex joined
[21:02] *** uzl[m] joined
[21:02] *** CIAvash joined
[21:02] *** Seance[m] joined
[21:02] *** mack[m]1 joined
[22:39] *** thowe joined
[22:45] *** krychu left
[23:09] *** pecastro left
[23:11] *** wamba left
[23:18] *** dogbert17 left
[23:54] *** leont joined
[23:59] *** Actualeyes left
