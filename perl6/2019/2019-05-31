[00:01] *** netrino__ joined
[00:06] *** Manifest0 left
[00:11] *** Manifest0 joined
[00:15] *** Manifest0 left
[00:20] *** Manifest0 joined
[00:25] *** Manifest0 left
[00:25] *** lucasb left
[00:30] *** Manifest0 joined
[00:30] *** coldforged left
[00:35] *** netrino__ left
[00:39] *** MasterDuke joined
[00:39] *** MasterDuke left
[00:39] *** MasterDuke joined
[00:40] *** netrino__ joined
[00:52] *** Sgeo__ joined
[00:55] *** Sgeo_ left
[00:57] *** Manifest0 left
[01:03] *** Manifest0 joined
[01:13] *** Manifest0 left
[01:13] *** netrino__ left
[01:18] *** Manifest0 joined
[01:19] *** netrino__ joined
[01:41] *** Manifest0 left
[01:45] *** molaf left
[01:46] *** Manifest0 joined
[01:53] *** netrino__ left
[01:55] <cpan-p6> New module released to CPAN! OEIS (1.0.0) by 03TOBS

[01:58] *** molaf joined
[01:58] *** Manifest0 left
[01:59] *** netrino__ joined
[02:03] *** Manifest0 joined
[02:07] *** Manifest0 left
[02:09] *** MasterDuke left
[02:12] *** Manifest0 joined
[02:21] *** Manifest0 left
[02:26] *** Manifest0 joined
[02:31] *** netrino__ left
[02:37] *** Manifest0 left
[02:38] *** netrino__ joined
[02:43] *** Manifest0 joined
[02:48] *** Manifest0 left
[02:48] *** angelds joined
[02:48] *** adu joined
[02:53] *** Manifest0 joined
[02:58] *** nadim_ left
[02:59] *** Manifest0 left
[03:01] *** hythm joined
[03:04] *** Manifest0 joined
[03:09] *** hythm_ joined
[03:09] *** hythm left
[03:12] *** Manifest0 left
[03:16] *** Manifest0 joined
[03:17] *** hythm_ left
[03:23] *** Manifest0 left
[03:28] *** Manifest0 joined
[03:30] *** veesh left
[03:30] *** hythm joined
[03:32] *** netrino__ left
[03:33] *** hythm left
[03:34] *** nadim_ joined
[03:34] *** hythm joined
[03:35] *** veesh joined
[03:37] *** netrino__ joined
[03:41] *** Manifest0 left
[03:42] <hythm> p6: my %h1 = < a 1 >; my %h2 = < a 2 >; my @a = %h1, %h2; say @a.unique(:as(&.<a>)) # How to unique based on hash key?

[03:42] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´({a => 1} {a => 2})‚ê§¬ª

[03:46] *** Manifest0 joined
[03:47] *** skids left
[03:54] *** Manifest0 left
[03:58] <elcaro> hythm: you mean merge hashes?

[03:58] <elcaro> m: my %h1 = < a 1 >; my %h2 = < a 2 >; say my %h3 = %h1, %h2; 

[03:58] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´{a => 2}‚ê§¬ª

[03:59] <elcaro> this works because I'm assigning to a Hash

[03:59] *** Manifest0 joined
[04:01] <elcaro> If you wanna put pairs into an array, based on unique key, here's one way

[04:02] <elcaro> flatten you hashes to produce a list of pairs, then unique by key

[04:02] <elcaro> m: my %h1 = < a 1 >; my %h2 = < a 2 >; say my @a = (%h1, %h2).flat.unique(as => *.key)

[04:02] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´[a => 1]‚ê§¬ª

[04:03] <elcaro> but unique will see the first and not the second... where as in hash merge, later keys overwrite older ones

[04:03] *** Manifest0 left
[04:09] *** hythm left
[04:09] *** netrino__ left
[04:10] *** Manifest0 joined
[04:11] *** veesh left
[04:16] *** netrino__ joined
[04:16] *** hythm joined
[04:16] *** Manifest0 left
[04:17] <hythm> eclaro I don't mean to merge hashes, what I'm trying to achieve is if I have my @a = { a => 1}, {a => 2}, { b => 3}; when I @a.unique, I  want the result to be {a => 1 }, {b => 3}

[04:21] <elcaro> well i guess it's similar to a merge, but you want a list of pairs when your done, right

[04:21] *** jmerelo joined
[04:23] <hythm> right

[04:25] <hythm> for example ({name => 'a', age = 20 }, {name => 'b', age = 30 }, {name => 'a', age = 40 }).unique: :as(*.name)   # something like that 

[04:25] <elcaro> m: my @a = {a => 1}, {a => 2}, {b => 3}; say my @b = @a.map(|*).unique(as => *.key)

[04:25] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´[a => 1 b => 3]‚ê§¬ª

[04:25] <elcaro> same theory applies as above... need to flatten your Hashes out into a list of Pairs... once you have a stream of Pairs, you can `unique` them via the key

[04:26] *** Manifest0 joined
[04:26] <hythm> Thanks, Will try that

[04:27] <elcaro> ok, with multiple keys it's a little different

[04:27] <jmerelo> squashable6: status

[04:27] <squashable6> jmerelo, üçïüçï SQUASHathon is in progress! The end of the event in 2 days and ‚âà9 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[04:27] <elcaro> let me play with your example there a sec

[04:27] <elcaro> m: say ({name => 'a', age => 20 }, {name => 'b', age => 30 }, {name => 'a', age => 40 }).unique(as => *<name> eq 'a')

[04:27] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´({age => 20, name => a} {age => 30, name => b})‚ê§¬ª

[04:28] <elcaro> like that?

[04:28] *** molaf left
[04:28] <elcaro> or you want any duplicate names to be filtered

[04:29] <hythm> exactly. the above works. thank you

[04:29] <elcaro> well, it just filters names that are 'a'... if you just want uniqe names, then drop the `eq 'a'` part

[04:30] <elcaro> m: say ({name => 'a', age => 20 }, {name => 'b', age => 30 }, {name => 'a', age => 40 }).unique(as => *<name>)

[04:30] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´({age => 20, name => a} {age => 30, name => b})‚ê§¬ª

[04:31] <elcaro> yeah that was an oops on my part... no need to check if name is eq to anything... this just says you want to filter out hashes with a previously seen value in the 'name' key

[04:33] <elcaro> hythm: https://tio.run/##K0gtyjH7/z@3UsEhUcFWQUOBSwEIqvMSc1MVbO0U1BPVdRQS08FsI4NaHTTZJLyySHqNMWWTiTXZBCSrac3FVZwIcqVeaV5mYWmqRmIxSFLLBqTFDiiNXRZoBlDy/38A

[04:36] <hythm> right, I was trying with &.<name>, while I should have used *.<name> like you did

[04:36] <elcaro> *.<name> works... as does *<name>

[04:37] <elcaro> another cool method to keep in mind is `squish` which is like `uniq` in unix, ie. filter consecutive duplicates 

[04:37] <elcaro> m: say < a a b b a c c >.squish

[04:37] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(a b a c)‚ê§¬ª

[04:38] <hythm> right, I got confused a little (bad from my part) because the docs examples using &

[04:38] <elcaro> but you can do .squish(as => *<somekey>) all the same

[04:38] <hythm> nice, yes squish would be faster too

[04:38] <elcaro> yeah, & is when you're passing a callable

[04:39] <elcaro> m: say < one One ONE Two TWO >.unique(as => &lc)

[04:39] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(one Two)‚ê§¬ª

[04:39] <hythm> yeah, makes sense

[04:45] *** hythm left
[04:46] *** kurahaupo left
[04:46] *** kurahaupo joined
[04:47] *** curan joined
[04:48] *** netrino__ left
[04:51] *** veesh joined
[04:55] *** netrino__ joined
[04:56] *** Manifest0 left
[05:00] *** Manifest0 joined
[05:05] *** Manifest0 left
[05:07] *** dolmen joined
[05:10] *** Manifest0 joined
[05:16] *** Sgeo_ joined
[05:17] *** Manifest0 left
[05:17] <jmerelo> .tell holyghost this is just to let you know that, after repeated warnings in this channel, I have requested your upload privileges to CPAN to be removed: https://www.nntp.perl.org/group/perl.modules/2019/05/msg100215.html . I am sorry about that, but there was no other alternative.

[05:17] <yoleaux> jmerelo: I'll pass your message to holyghost.

[05:18] *** nadim_ left
[05:19] *** Sgeo__ left
[05:23] *** Manifest0 joined
[05:27] *** netrino__ left
[05:29] *** veesh left
[05:31] *** veesh joined
[05:34] *** netrino__ joined
[05:38] *** nadim joined
[05:39] *** dolmen left
[05:40] *** vrurg left
[05:41] *** Manifest0 left
[05:45] *** Manifest0 joined
[05:50] *** Manifest0 left
[05:50] *** dolmen joined
[05:52] *** dolmen left
[05:54] *** dolmen joined
[05:55] *** Manifest0 joined
[06:03] *** Manifest0 left
[06:07] *** netrino__ left
[06:08] *** Manifest0 joined
[06:13] *** Manifest0 left
[06:13] *** netrino__ joined
[06:16] <Geth> ¬¶ doc: 15ce9aaf09 | (JJ Merelo)++ | doc/Language/variables.pod6

[06:16] <Geth> ¬¶ doc: Adds examples for anon refs #1655

[06:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/15ce9aaf09

[06:16] <synopsebot> Link: https://doc.perl6.org/language/variables

[06:16] <squashable6> üçïüçïüçï  First contribution by JJ++! ‚ô•

[06:17] <jmerelo> tell AlexDaniel the bots should point at Rakudo, NQP and MoarVM, not doc :-)

[06:17] *** jmerelo left
[06:18] *** Manifest0 joined
[06:22] *** Manifest0 left
[06:26] *** dolmen left
[06:27] *** Manifest0 joined
[06:30] *** adu left
[06:36] <SmokeMachine> jmerelo have you forgotten the . on .tell?

[06:37] <SmokeMachine> Too late...

[06:39] *** vrurg joined
[06:57] *** Manifest0 left
[07:00] *** noisegul joined
[07:01] <noisegul> o/

[07:01] *** Manifest0 joined
[07:10] *** Xliff joined
[07:10] <Xliff> \o

[07:10] <yoleaux> 30 May 2019 08:47Z <jnthn> Xliff: Yup, the value seems to match up with that hypothesis.

[07:10] <yoleaux> 30 May 2019 09:33Z <holyghost> Xliff: There's code for drawing GameObjects, Entity, MovingEntity and Sprites, I've put comments in all relevant files. This afternoon I'm going to try to put the first game subsystem in for starting out the game by drawing a Room (.pm6) in the main-loop

[07:10] <yoleaux> 30 May 2019 18:17Z <holyghost> Xliff: I'd like to debug the graphics system on Tuesday at GMT+2

[07:10] <Xliff> .tell holyghost From now on, please use emails for these missives. I'd like to keep then OFF OF YOLEAUX.

[07:10] <yoleaux> Xliff: I'll pass your message to holyghost.

[07:11] *** Manifest0 left
[07:12] <Xliff> m: my %h = ( 1=>1, 2=>2, 3=>3, 4=>4 ); for %h.keys { when 1 | 2} 4 { %h<1>:delete } default { .say } }

[07:12] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3, 3=>3, 4=>4 ); for %h.keys { when 1 | 27‚èè5} 4 { %h<1>:delete } default { .say } }‚ê§    expecting any of:‚ê§        block or pointy block‚ê§¬ª

[07:12] <Xliff> m: my %h = ( 1=>1, 2=>2, 3=>3, 4=>4 ); for %h.keys { when 1 | 2 | 4 { %h<1>:delete } default { .say } }

[07:12] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3h.keys { when 1 | 2 | 4 { %h<1>:delete }7‚èè5 default { .say } }‚ê§¬ª

[07:12] <Xliff> m: my %h = ( 1=>1, 2=>2, 3=>3, 4=>4 ); for %h.keys { when 1 | 2 | 4 { %h<1>:delete }; default { .say } }

[07:12] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´3‚ê§¬ª

[07:13] <Xliff> m: $*PERL.compiler.version.say

[07:13] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´v2019.03.1.385.ga.643.b.8.be.1‚ê§¬ª

[07:15] *** Manifest0 joined
[07:17] *** robertle_ joined
[07:18] *** netrino__ left
[07:22] *** netrino__ joined
[07:28] *** Manifest0 left
[07:33] *** Manifest0 joined
[07:33] *** netrino__ left
[07:39] *** dolmen joined
[07:44] *** dolmen left
[07:48] *** dolmen joined
[07:49] *** dolmen left
[07:52] *** reach_satori left
[07:54] *** angelds left
[07:54] *** Manifest0 left
[07:59] *** Manifest0 joined
[08:06] *** Manifest0 left
[08:07] *** domidumont joined
[08:11] *** Manifest0 joined
[08:17] *** reach_satori joined
[08:18] *** domidumont left
[08:18] *** Manifest0 left
[08:24] *** Manifest0 joined
[08:26] *** rindolf joined
[08:31] *** Manifest0 left
[08:31] *** ravenousmoose joined
[08:35] *** Manifest0 joined
[08:36] *** kurahaupo_ joined
[08:39] *** kurahaupo left
[08:41] *** Sgeo_ left
[08:42] *** Sgeo_ joined
[08:48] <AlexDaniel> ahem

[08:49] *** squashable6 left
[08:53] *** squashable6 joined
[08:53] *** ChanServ sets mode: +v squashable6

[08:54] <squashable6> Webhook for rakudo/rakudo is now active! Mind your words, they are important.

[08:54] <AlexDaniel> should be alright now!

[08:54] *** Sgeo__ joined
[08:57] <kawaii> good morning friends :)

[08:57] *** Sgeo_ left
[08:58] <gfldex> m: dd $*IN.lines.Seq.Supply;

[08:58] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Supply.new‚ê§¬ª

[08:58] <Altreus> SmokeMachine: I'm learning a lot of Perl6 from this code but I will not be able to help with it for a while xD

[08:58] <gfldex> I can't file where Seq.Supply is defined. Any pointers?

[08:58] <gfldex> *find

[08:59] <Altreus> kawaii:

[09:00] <gfldex> Found it. I was to blind while reading Any.pm6.

[09:00] <kawaii> Altreus: PR to replace DBI with Red in Pokeapi when sir? ;)

[09:00] <Altreus> when I'm as deep in perl6 as you are :P

[09:03] <kawaii> Altreus: hey we have an October this year right? We can tag some of the API::Discord issues with `Hacktoberfest` tags and see if the cool kids help out

[09:03] *** leont joined
[09:03] <Altreus> we might do

[09:04] <Altreus> the world might end before then so either way we're good

[09:08] <Altreus> Can someone help me understand how the keyword `model` is introduced in Red?

[09:08] <Altreus> I can see the code that makes it work, but I don't see the magic where it creates the keyword itself

[09:09] <jnthn> Altreus: grep EXPORTHOW

[09:09] *** reach_satori left
[09:09] <jnthn> Altreus: If you want to see a smaller module introducing a package declaration, see OO::Monitors

[09:10] <Altreus> ah nice, thanks :)

[09:11] *** reach_satori joined
[09:12] <Altreus> I suppose EXPORTHOW is named in parallel with ClassHOW, i.e. works on meta

[09:13] <jnthn> Yes

[09:13] <kawaii> Altreus: I want to make another library, or maybe revisit API::Cloudflare

[09:13] <jnthn> Even deeper: the compiler has a hash %*HOW that tracks the current mappings between package declarators and metaclasses :)

[09:18] *** Manifest0 left
[09:23] *** Manifest0 joined
[09:23] *** reach_satori_ joined
[09:25] *** reach_satori left
[09:27] *** Manifest0 left
[09:29] <Altreus> kawaii: awoo?

[09:34] *** Manifest0 joined
[09:35] *** sena_kun joined
[09:37] *** kurahaupo_ left
[09:38] *** kurahaupo joined
[09:43] *** Manifest0 left
[09:43] <SmokeMachine> Altreus: you mean you think you don't know enough to help? If so, I'm sure its not true... for example, here is a issue that would be easy to you to close: https://github.com/FCO/Red/issues/163

[09:44] <SmokeMachine> Altreus: https://github.com/FCO/Red/projects/2

[09:46] <SmokeMachine> https://github.com/FCO/Red/issues?utf8=‚úì&q=label%3A%22test+needed%22+

[09:46] <Geth> ¬¶ doc: 28f8591a8d | (JJ Merelo)++ | doc/Language/variables.pod6

[09:46] <Geth> ¬¶ doc: Adds example for anon class, closes #1655

[09:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/28f8591a8d

[09:46] <synopsebot> Link: https://doc.perl6.org/language/variables

[09:48] *** Manifest0 joined
[09:50] <Altreus> SmokeMachine: I am helping with ideas :D

[09:50] <Altreus> SmokeMachine: oh yeah, I can contribute docs too ^_^

[09:51] <SmokeMachine> Altreus: that helps a lot! :)

[09:54] *** rindolf left
[09:59] <SmokeMachine> Altreus: have you seen this as complementation of the `schema` discussion? https://github.com/FCO/Red/issues/15

[09:59] *** vrurg left
[10:00] *** rindolf joined
[10:05] *** Manifest0 left
[10:10] *** Manifest0 joined
[10:10] *** Sgeo_ joined
[10:12] <Altreus> nyet

[10:12] <Altreus> SmokeMachine: what did you use to make README.md?

[10:12] <SmokeMachine> mi6 build...

[10:13] <Altreus> new tools to learn :)

[10:13] <SmokeMachine> it's generated throw the pod6 on Red.pm6

[10:13] <Altreus> ya, I've updated that but can't check I've not broken it without trying to convert it

[10:13] *** Sgeo__ left
[10:14] <SmokeMachine> through

[10:15] *** noisegul left
[10:15] <SmokeMachine> https://modules.perl6.org/dist/App::Mi6:cpan:SKAJI

[10:18] *** reach_satori joined
[10:19] *** reach_satori_ left
[10:21] <Altreus> https://github.com/FCO/Red/pull/164

[10:22] <Altreus> migrations are a whole other thing that I've been struggling with at work for a long time xD

[10:22] <Altreus> nothing so far has beaten "SQL scripts in a discoverable place"

[10:24] *** rindolf left
[10:25] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2019/05/31/whatever-whenever-does/

[10:27] <Altreus> loli haet pizza?

[10:28] <Altreus> hrm, sort of surprised that $*IN.lines isn't already DWIMmy enough to work that way

[10:29] <gfldex> Altreus: Channels can fill up all your RAMz real qick in a hurry.

[10:30] <Altreus> ah heck

[10:30] *** rindolf joined
[10:32] <Altreus> what does ¬´self.list.Supply¬ª do then? something unrequited?

[10:32] <Altreus> uh

[10:32] <Altreus> unrequired

[10:34] <Altreus> Is it the case that $*IN.lines.Supply is not an async supply being fed by something when more lines arrive on STDIN?

[10:36] *** gregf_ joined
[10:36] <jnthn> Altreus: See my SO answer for an explanation of that, and how to do it right :)

[10:36] <jnthn> Or "as right as is possible today"

[10:46] *** Manifest0 left
[10:51] *** Manifest0 joined
[10:51] *** leont left
[10:55] *** holyghost joined
[10:55] <holyghost> Good morning.

[10:55] <yoleaux> 05:17Z <jmerelo> holyghost: this is just to let you know that, after repeated warnings in this channel, I have requested your upload privileges to CPAN to be removed: https://www.nntp.perl.org/group/perl.modules/2019/05/msg100215.html . I am sorry about that, but there was no other alternative.

[10:55] <yoleaux> 07:10Z <Xliff> holyghost: From now on, please use emails for these missives. I'd like to keep then OFF OF YOLEAUX.

[10:56] <Altreus> got it

[10:56] <Altreus> There's a lot of information if you just keep following links!

[10:56] <holyghost> PaganVisions2 compiles now except for the script, I need to debug it with Xliff on Tuesday

[10:57] <holyghost> I'm off for the weekend

[10:57] *** holyghost left
[10:57] <Altreus> This community is very wholesome

[11:00] *** reach_satori left
[11:02] *** reach_satori joined
[11:13] *** mowcat joined
[11:14] <SmokeMachine> Altreus: thank you! merged!

[11:15] *** reach_satori left
[11:17] *** mowcat left
[11:18] *** mowcat joined
[11:31] *** Manifest0 left
[11:37] *** Manifest0 joined
[11:48] *** Manifest0 left
[11:50] <woolfy> .tell jmerelo I want to discuss your latest action with you in private discussion please.

[11:50] <yoleaux> woolfy: I'll pass your message to jmerelo.

[11:53] *** Manifest0 joined
[11:53] *** cpan-p6 left
[11:59] *** lgandras joined
[12:00] *** cpan-p6 joined
[12:00] *** cpan-p6 left
[12:00] *** cpan-p6 joined
[12:02] *** mowcat left
[12:12] <lizmat> weekly: http://news.perlfoundation.org/2019/05/call-for-grant-proposals-may-2-4.html

[12:12] <notable6> lizmat, Noted!

[12:21] <lizmat> did the squashathon not start already ?

[12:21] <sena_kun> squashable6, status

[12:21] <squashable6> sena_kun, üçïüçï SQUASHathon is in progress! The end of the event in 2 days and ‚âà1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:21] <squashable6> sena_kun, Log and stats: https://gist.github.com/07f2569c6832a6c8ca7e17f04d237cea

[12:21] <lizmat> aha,..  ok  

[12:22] <sena_kun> lizmat, seems like it is

[12:22] *** aeruder_ joined
[12:22] *** iviv_ joined
[12:23] *** spycrab0_ joined
[12:23] *** Spot___ joined
[12:23] *** peteretep_ joined
[12:24] *** integral left
[12:24] *** perlbot left
[12:24] *** timeless_ joined
[12:24] *** Mithaldu left
[12:24] *** perlbot joined
[12:24] * lizmat sorta expected jmerelo would have twittered about it

[12:24] *** mtj_ left
[12:24] *** spacedbat left
[12:24] *** jnthn left
[12:24] *** rjbs left
[12:25] *** jcallen left
[12:25] *** gks joined
[12:25] *** rjbs joined
[12:25] *** timeless left
[12:25] *** dotdotdot left
[12:25] *** spycrab0 left
[12:25] *** peteretep left
[12:25] *** iviv left
[12:25] *** Spot__ left
[12:25] *** gks_ left
[12:25] *** aeruder left
[12:25] *** unclechu left
[12:25] *** rba[m] left
[12:25] *** albongo left
[12:25] *** integral_ joined
[12:25] *** iviv_ is now known as iviv

[12:25] *** spycrab0_ is now known as spycrab0

[12:25] *** peteretep_ is now known as peteretep

[12:25] *** go|dfish left
[12:26] *** mtj_ joined
[12:26] *** jnthn joined
[12:26] *** dotdotdot joined
[12:26] *** syntaxman left
[12:26] *** hoelzro_ left
[12:27] *** spacedbat joined
[12:27] *** syntaxman joined
[12:27] *** hoelzro joined
[12:27] *** timeless_ is now known as timeless

[12:27] *** jcallen joined
[12:27] *** albongo joined
[12:27] *** unclechu joined
[12:27] *** Brock left
[12:27] *** rba[m] joined
[12:27] *** Mithaldu joined
[12:27] *** awwaiid joined
[12:28] *** jhill left
[12:29] *** jhill joined
[12:35] <cpan-p6> New module released to CPAN! Result (0.2.3) by 03SAMGWISE

[12:36] *** Manifest0 left
[12:37] *** reach_satori joined
[12:41] *** Manifest0 joined
[12:48] *** Manifest0 left
[12:51] *** leont joined
[12:53] *** go|dfish joined
[12:54] *** Manifest0 joined
[12:55] *** holyghost joined
[13:05] <woolfy> squasha

[13:05] <woolfy> (sorry, wrong window)

[13:07] *** Manifest0 left
[13:08] *** rindolf left
[13:09] *** domidumont joined
[13:10] *** rindolf joined
[13:11] *** curan left
[13:16] <El_Che> woolfy: squasha your self!

[13:16] *** Manifest0 joined
[13:16] *** pmurias joined
[13:16] <pmurias> hi

[13:17] <pmurias> is telling people to "npm install -g" rakudo.js in it's README a good idea?

[13:19] <woolfy> Claudio Ramirez: I just did...

[13:19] <El_Che> don't squasha da pasta!

[13:20] *** vrurg joined
[13:21] <cpan-p6> New module released to CPAN! HTML::Lazy (0.0.1) by 03SAMGWISE

[13:21] <cpan-p6> New module released to CPAN! Structable (0.0.3) by 03SAMGWISE

[13:29] *** Manifest0 left
[13:30] *** kiwi_67 joined
[13:31] *** kiwi_67 left
[13:34] *** Manifest0 joined
[13:36] *** skids joined
[13:40] <Altreus> how long does m.p6.o take to index these ^ ?

[13:40] <Altreus> more than 20 minutes? :P

[13:41] <sena_kun> Altreus, around so, iirc

[13:41] *** Manifest0 left
[13:47] *** Manifest0 joined
[13:52] *** Manifest0 left
[13:58] *** Manifest0 joined
[13:59] <leont> It's a cronjob AFAIK

[14:00] <leont> I think it runs every 15 minutes

[14:12] *** pmurias left
[14:14] *** pmurias joined
[14:18] *** zxcvz joined
[14:20] *** jelkner joined
[14:21] <jelkner> ugexe, do you have a minute?

[14:21] <jelkner> i was referred to you by sena_kun on the cro channel

[14:22] <jelkner> i am having troubles installing cro, and sena_kun thinks its a zef issue, not a cro issue

[14:23] <jelkner> i'm a high school teacher whose planning period is about to end

[14:23] <jelkner> so i'll need to log off

[14:23] <sena_kun> https://pastebin.com/uKH6T6zp <- looks pretty odd, as it has the distributions, but doesn't install it. environment I believe is ubuntu 18.10 with rakudo-pkg installed.

[14:23] <jast> given his idle time of 15 hours, don't hold your breath :)

[14:23] <jelkner> np, sena_kun, how best to report this so it can be handled later?

[14:24] <sena_kun> I'd bet on https://github.com/ugexe/zef/issues with a detailed report: zef version, `zef which`, what was done, logs.

[14:24] <sena_kun> at the very least it'll be a case description to not write it out every time

[14:26] <Xliff> \o

[14:26] <sena_kun> Xliff, o/

[14:26] <holyghost> Xliff 'lo

[14:26] * Xliff needs coffee.

[14:26] <holyghost> Xliff, I've sent you some email

[14:26] <Xliff> holy: Fine.

[14:26] *** mowcat joined
[14:27] <Xliff> jnthn: Any idea how to fix issue with uint8?

[14:29] <jelkner> sena_kun, will the pastebin link hang around, or should i paste the error into the issue?

[14:29] <sena_kun> jelkner, I see its expire time is set to `never`, so you can just add an url to paste and that'd be ok

[14:29] <jelkner> thanks!

[14:38] *** Manifest0 left
[14:40] *** lichtkind joined
[14:40] <ugexe> that version of zef looks ancient

[14:40] <ugexe> its reporting versions as e.g. Cro::HTTP:ver('0.8.0')

[14:41] <ugexe> not :ver<0.8.0>

[14:42] *** Manifest0 joined
[14:46] <sena_kun> jelkner, ^

[14:48] *** lichtkind left
[14:51] *** lgandras left
[14:55] *** bob_ joined
[14:56] *** bob_ left
[14:56] *** bob_birdrock joined
[14:58] *** jelkner left
[14:59] <ugexe> https://github.com/ugexe/zef/issues/299#issuecomment-497729660

[14:59] <ugexe> they have two versions installed

[14:59] <ugexe> zef:ver('0.1.15') and zef:ver('0.7.1')

[15:00] <ugexe> the lower version is in the home repo which is checked first, which is why it is being used over 0.7.1

[15:00] <ugexe> so `zef nuke home` would probably fix it

[15:02] *** pmurias left
[15:03] <sena_kun> ugexe++

[15:19] *** nadim left
[15:20] *** Manifest0 left
[15:20] *** integral_ left
[15:20] *** integral_ joined
[15:20] *** integral_ is now known as integral

[15:24] *** guifa joined
[15:25] *** Manifest0 joined
[15:31] *** Manifest0 left
[15:38] <Xliff> m: sub foo(Num() $n is rw) { $n++ }; my $x = 1; foo($x)

[15:38] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller postfix:<++>(Num:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Num:D $a is rw)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool:D $a is rw)‚ê§    (Bool:U $‚Ä¶¬ª

[15:38] *** Manifest0 joined
[15:38] <Xliff> m: sub foo(Int() $n is rw) { $n++ }; my $x = 1e0; foo($x)

[15:38] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller postfix:<++>(Int:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Int:D $a is rw --> Int:D)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool:D $a is rw)‚ê§   ‚Ä¶¬ª

[15:39] <Xliff> ^^ Still running into mutable type errors on conversion.

[15:39] *** ravenousmoose left
[15:40] *** Sgeo__ joined
[15:40] <bob_birdrock> sub foo($n) { $n++ };  my $x = 1; foo($x);

[15:40] <bob_birdrock> Has the same results for me.

[15:41] <Xliff> sub foo($n) { $n++ };  my $x = 1; foo($x);

[15:41] <Xliff> m: sub foo($n) { $n++ };  my $x = 1; foo($x);

[15:41] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller postfix:<++>(Int:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Int:D $a is rw --> Int:D)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool:D $a is rw)‚ê§   ‚Ä¶¬ª

[15:41] <Xliff> m: sub foo($n is rw) { $n++ };  my $x = 1; foo($x);

[15:41] <camelia> rakudo-moar a643b8be1: ( no output )

[15:41] <Xliff> m: sub foo($n is rw) { $n++ };  my $x = 1; foo($x).say;

[15:41] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´1‚ê§¬ª

[15:41] <Xliff> m: sub foo(Int() $n is rw) { $n++ };  my $x = 1e0; foo($x).say;

[15:41] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller postfix:<++>(Int:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Int:D $a is rw --> Int:D)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool:D $a is rw)‚ê§   ‚Ä¶¬ª

[15:41] <bob_birdrock> Wow!

[15:42] <Xliff> m: sub foo(Int() $n is rw) { ++$n };  my $x = 1e0; foo($x).say;

[15:42] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller prefix:<++>(Int:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Int:D $a is rw --> Int:D)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool $a is rw)‚ê§    (M‚Ä¶¬ª

[15:42] <Xliff> m: sub foo(Int $n is rw) { ++$n };  my $x = 1e0; foo($x).say;

[15:42] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Type check failed in binding to parameter '$n'; expected Int but got Num (1e0)‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:42] <bob_birdrock> So why does adding "is rw" make it work?

[15:42] <Xliff> m: sub foo(Int $n is rw) { ++$n };  my $x = 1; foo($x).say;

[15:42] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´2‚ê§¬ª

[15:42] <bob_birdrock> Oh, because it's not mutable otw

[15:42] <Xliff> Yeah.

[15:42] <bob_birdrock> <duh>

[15:42] <Xliff> Ongoing issue.

[15:42] <bob_birdrock> So Int() $n is rw should work too

[15:42] <Xliff> m: sub foo(Int() $n is rw) { ++$n };  my $x = 1; foo($x).say;

[15:42] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´2‚ê§¬ª

[15:42] <Xliff> So it does.

[15:43] <Xliff> Note that the problem occurs if the type is different.

[15:43] <Xliff> m: sub foo(Int() $n is rw) { ++$n };  my $x = 1e0; foo($x).say;

[15:43] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller prefix:<++>(Int:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Int:D $a is rw --> Int:D)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool $a is rw)‚ê§    (M‚Ä¶¬ª

[15:43] <bob_birdrock> aahhh

[15:43] <tobs> bob_birdrock: the thing here is that Int() coerces the argument if it has to. This potentially creates another object. No what do you expect from mutating that other object with respect to the argument that was passed to the call?

[15:43] <bob_birdrock> But but but but.... 

[15:43] <bob_birdrock> Ohhhh

[15:44] <Xliff> tobs: I'd expect it to work because { my $x = 1 } does not specify type.

[15:44] <bob_birdrock> So Int() coerces a scientific(?) number in this case...

[15:44] <bob_birdrock> 1e0

[15:44] *** Sgeo_ left
[15:44] <Xliff> 1e0 is a Num literal

[15:45] <bob_birdrock> Int doesn't want to coerce a Num

[15:45] <Xliff> Now...  { my Num $x = 1e0 } should not work.

[15:45] <Xliff> Num and Int are Cool, so they can convert between each other just fine.

[15:46] <bob_birdrock> Auto-boxing/unboxing

[15:46] <Xliff> One fix....

[15:46] <Xliff> m: sub foo($n is rw) { $n .= Int if $n.^can('Int').elems; ++$n };  my $x = 1e0; foo($x).say;

[15:46] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´2‚ê§¬ª

[15:46] <Xliff> But I shouldn;'t have to do all that!!

[15:47] <bob_birdrock> In other words, Perl should know when and how to do this automagically

[15:47] <Xliff> Yep.

[15:50] <bob_birdrock> So what is actually happening?  Is Perl creating a new object during coercion, which happens to not be mutable?

[15:51] *** jmerelo joined
[15:52] <jmerelo> squashable6: status

[15:52] <yoleaux> 11:50Z <woolfy> jmerelo: I want to discuss your latest action with you in private discussion please.

[15:52] <squashable6> jmerelo, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà22 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:52] <squashable6> jmerelo, Log and stats: https://gist.github.com/48f452eb0663b35b09ed51bece7041fd

[15:52] *** yqt joined
[15:52] <tobs> bob_birdrock: this would be the most complete account of the issue, I think https://github.com/perl6/problem-solving/issues/21

[15:52] *** Sgeo_ joined
[15:53] <jmerelo> .tell AlexDaniel Are the bots ready for the squashathon?

[15:53] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[15:55] <tobs> in Perl 6 you need a container holding a value to mutate that value. If I understood correctly, (Int() $x is rw) takes in the caller's container to make the value mutable, but then, if the value had to be coerced, you lose track of that container (which will still hold the old value) and can't modify the new value anymore.

[15:55] *** Sgeo__ left
[15:56] <tobs> jmerelo: yes https://colabti.org/irclogger/irclogger_log/perl6?date=2019-05-31#l232

[15:57] *** patrickb joined
[15:57] <jmerelo> tobs: ah, great. It's only that no one has done anything, yet...

[15:58] <jmerelo> .tell AlexDaniel thanks!

[15:58] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[15:58] <tobs> I have a workshop upcoming, too much other things to do‚Ä¶

[16:03] *** Manifest0 left
[16:04] *** mtg joined
[16:07] <namibj> tobs: sounds very reasonable, the container GC feeding. It would need to have types so you can't pass a mutable that gets coerced during the function call itself. Allow the callee's signature to force the caller to either manually cast and loose the reference, or otherwise be known not to have a reference anymore (escape analysis for converting heap to stack in the optimizer is at least closely relates). 

[16:07] <namibj> Allow footgun-protection.

[16:07] <AlexDaniel> .

[16:07] <yoleaux> 15:53Z <jmerelo> AlexDaniel: Are the bots ready for the squashathon?

[16:07] <yoleaux> 15:58Z <jmerelo> AlexDaniel: thanks!

[16:09] <SmokeMachine> m: sub foo(Int() $n is rw) { ++$n };  my $x = "1"; foo($x); say $x.^name

[16:09] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Cannot resolve caller prefix:<++>(Int:D); the following candidates‚ê§match the type but require mutable arguments:‚ê§    (Mu:D $a is rw)‚ê§    (Int:D $a is rw --> Int:D)‚ê§‚ê§The following do not match for other reasons:‚ê§    (Bool $a is rw)‚ê§    (M‚Ä¶¬ª

[16:11] <SmokeMachine> m: sub foo(Int() $n is rw) { $n };  my $x = "1"; foo($x); say $x.^name

[16:11] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Str‚ê§¬ª

[16:11] <SmokeMachine> m: sub foo(Int() $n is rw) { say $n.^name };  my $x = "1"; foo($x); say $x.^name

[16:11] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´Int‚ê§Str‚ê§¬ª

[16:12] *** Manifest0 joined
[16:18] <namibj> If there was an alternative way to allow polymorphism in a friendly way, where the callee operates on a non-coerced container with alk that entails.

[16:26] *** Manifest0 left
[16:27] *** Sgeo__ joined
[16:31] *** Sgeo_ left
[16:32] *** Manifest0 joined
[16:47] *** sena_kun left
[16:52] *** molaf joined
[16:53] *** nadim joined
[17:13] *** kaare_ left
[17:13] *** Sgeo_ joined
[17:17] *** Sgeo__ left
[17:20] <squashable6> üçï patzim++ opened pull request ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939

[17:20] <squashable6> üçïüçïüçï  First contribution by patzim++! ‚ô•

[17:21] <squashable6> üçï patzim++ requested a review on pull request ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939

[17:25] <squashable6> üçï patzim++ opened pull request ‚ÄúMove the core comp unit repo to a separate folder‚Äù: https://github.com/rakudo/rakudo/pull/2940

[17:25] <squashable6> üçï patzim++ requested a review on pull request ‚ÄúMove the core comp unit repo to a separate folder‚Äù: https://github.com/rakudo/rakudo/pull/2940

[17:27] <squashable6> üçï patzim++ wrote a comment on ‚ÄúMove the core comp unit repo to a separate folder‚Äù: https://github.com/rakudo/rakudo/pull/2940#issuecomment-497794031

[17:29] *** kaare_ joined
[17:34] *** bfisher left
[17:36] *** Manifest0 left
[17:43] *** Manifest0 joined
[17:48] *** Sgeo__ joined
[17:51] <squashable6> üçï vrurg++ edited a review on pull request ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244436972

[17:51] <squashable6> üçïüçïüçï  First contribution by vrurg++! ‚ô•

[17:51] <squashable6> üçï vrurg++ submitted a review on pull request ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244436972

[17:51] <squashable6> üçï vrurg++ wrote a comment on a review for ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939#discussion_r289489624

[17:51] <squashable6> üçï vrurg++ wrote a comment on a review for ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939#discussion_r289489227

[17:51] <squashable6> üçï vrurg++ wrote a comment on a review for ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939#discussion_r289488896

[17:51] *** Sgeo_ left
[17:54] <SmokeMachine> vrurg: we could do something like: `red-do :version<0.0.1> {...}‚Äô and make it use a ‚Äúschema‚Äù instead of a ‚Äúconnection‚Äù...

[17:54] <jmerelo> notable6: weekly "Perl6 quick syntax reference" is ready for preorder and will be published in November 11th https://www.amazon.es/Perl-Quick-Syntax-Reference-Language/dp/1484249550/ref=sr_1_1?qid=1559325220&refinements=p_27%3AJ.J.+Merelo&s=books&sr=1-1&text=J.J.+Merelo

[17:54] <notable6> jmerelo, Noted!

[17:55] <vrurg> SmokeMachine: I see. Yep, makes sense if the schema is what I think of it: a collection of connection and models. Is it?

[17:56] <SmokeMachine> vrurg: yes, that‚Äôs what‚Äôs on my mind currently...

[17:56] <vrurg> jmerelo: As you're the documentation person: 6.e.PREVIEW is available as of yesterday. Perhaps it shall be noted in the docs.

[17:57] <jmerelo> vrurg: thanks!

[17:57] <vrurg> SmokeMachine: you're moving towards big corporate projects. Sounds great! 

[17:57] <jmerelo> vrurg: is it going to be in the next rakudo release? As I understand it, it's in master now, right?

[17:58] <vrurg> jmerelo: ping me if any help is needed. I have started some bits on building rakudo in its docs directory.

[17:58] <jmerelo> vrurg: at long last :-)

[17:58] <vrurg> jmerelo: yes, in master and gonna be released.

[17:58] <jmerelo> OK. I'll note that in an issue. Thanks for letting me know.

[17:58] <vrurg> jmerelo: Wait, wait, wait! I promised you nothing! ;) 

[17:59] <vrurg> jmerelo: yw and thank you too!

[17:59] <jmerelo> vrurg++

[18:01] <jmerelo> vrurg: https://github.com/perl6/doc/issues/2831

[18:05] *** zxcvz left
[18:13] *** Sgeo_ joined
[18:16] *** ravenousmoose joined
[18:16] *** Sgeo__ left
[18:18] *** ravenous_ joined
[18:19] *** leont left
[18:20] <vrurg> jmerelo: I'll keep my eye on it. 

[18:21] *** ravenousmoose left
[18:24] <squashable6> üçï vrurg++ closed issue ‚ÄúNeed t/spectest.data.6.d‚Äù: https://github.com/rakudo/rakudo/issues/2557

[18:24] <squashable6> üçï vrurg++ wrote a comment on ‚ÄúNeed t/spectest.data.6.d‚Äù: https://github.com/rakudo/rakudo/issues/2557#issuecomment-497813104

[18:24] *** zakharyas joined
[18:31] *** sauvin left
[18:32] *** Manifest0 left
[18:37] *** Manifest0 joined
[18:49] *** Sgeo__ joined
[18:49] *** domidumont left
[18:52] *** zakharyas left
[18:52] *** Sgeo_ left
[18:58] *** netrino__ joined
[19:01] <squashable6> üçï patzim++ synchronize pull request ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939

[19:07] *** jmerelo left
[19:08] *** kst` is now known as kst

[19:09] <cpan-p6> New module released to CPAN! Gnome::Gdk (0.13.1) by 03MARTIMM

[19:14] *** farcas82 joined
[19:14] *** leont joined
[19:25] <cpan-p6> New module released to CPAN! Gnome::N (0.13.2) by 03MARTIMM

[19:25] <cpan-p6> New module released to CPAN! Gnome::Gtk3 (0.13.1) by 03MARTIMM

[19:25] <cpan-p6> New module released to CPAN! Gnome::Glib (0.13.2) by 03MARTIMM

[19:25] <cpan-p6> New module released to CPAN! Gnome::GObject (0.13.2) by 03MARTIMM

[19:34] <Geth> ¬¶ doc: 2d276d107c | Coke++ | xt/code.pws

[19:34] <Geth> ¬¶ doc: fix word.

[19:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2d276d107c

[19:38] *** mowcat left
[19:42] *** rindolf left
[19:47] *** yqt left
[19:53] *** pecastro joined
[19:55] *** Sgeo_ joined
[19:58] *** rindolf joined
[19:58] *** Sgeo__ left
[20:00] *** hythm_ joined
[20:01] <hythm_> where does `gather` store the taken values, and can they be accessed from within the `gather` block?

[20:02] *** uzl joined
[20:03] <hythm_> in this gist, i m trying to take a value only if it was not taken before. https://gist.github.com/hythm7/2f3308afb9401a6f510d8bef89367845

[20:05] <uzl> The "Here be dragons." in https://docs.perl6.org/type/Attribute#method_get_value had me chuckle ;-)

[20:08] <uzl> Would anybody mind skimming over the following posts: https://uzluisf.gitlab.io/posts/2019/raku-attributes/? Mostly looking for inaccuracies :-)!

[20:11] *** ufobat_ joined
[20:15] *** ufobat__ left
[20:17] *** kaare_ left
[20:17] *** kaare_ joined
[20:17] *** uzl left
[20:26] *** feldspath joined
[20:28] <tobs> hythm_: a gather returns a Seq that is backed by the code block you provide. The taken values are stored nowhere as the block is lazily evaluated. The next value is only produced (by running the block until the next take) when someone asks for it from the Seq.

[20:29] *** veesh left
[20:30] *** feldspath left
[20:34] <tobs> you could of course keep a record of taken values yourself, but there is also a unique method which does the filtering for you

[20:34] <tobs> m: say gather { .take xx 2 for ^10 }

[20:34] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9)‚ê§¬ª

[20:34] *** Sgeo__ joined
[20:34] <tobs> m: say gather { .take xx 2 for ^10 }.unique

[20:34] <camelia> rakudo-moar a643b8be1: OUTPUT: ¬´(0 1 2 3 4 5 6 7 8 9)‚ê§¬ª

[20:34] *** veesh joined
[20:38] *** Sgeo_ left
[20:41] *** ravenous_ left
[20:43] <hythm_> thanks tobs

[20:49] *** ravenousmoose joined
[21:00] *** Sgeo_ joined
[21:03] *** Sgeo__ left
[21:12] *** skids left
[21:26] *** ravenousmoose left
[21:27] *** Manifest0 left
[21:30] *** hythm_ left
[21:33] *** Manifest0 joined
[21:40] *** Sgeo__ joined
[21:43] *** Sgeo_ left
[21:51] *** leont left
[21:53] *** Manifest0 left
[21:58] *** Manifest0 joined
[22:01] *** netrino__ left
[22:07] *** cpan-p6 left
[22:09] *** cpan-p6 joined
[22:09] *** cpan-p6 left
[22:09] *** cpan-p6 joined
[22:17] <squashable6> üçï ugexe++ wrote a comment on ‚ÄúMove the core comp unit repo to a separate folder‚Äù: https://github.com/rakudo/rakudo/pull/2940#issuecomment-497877132

[22:17] <squashable6> üçïüçïüçï  First contribution by ugexe++! ‚ô•

[22:18] *** Manifest0 left
[22:19] *** patrickb left
[22:22] *** Manifest0 joined
[22:23] *** adu joined
[22:27] *** ijneb left
[22:30] *** netrino__ joined
[22:31] *** bob_birdrock left
[22:36] *** ijneb joined
[22:38] <lizmat> weekly: https://yakshavingcream.blogspot.com/2019/05/getting-started-developing-for-perl-6.html

[22:38] <notable6> lizmat, Noted!

[22:40] *** Cabanossi left
[22:42] <lizmat> weekly: https://www.amazon.com/dp/1484249550/ref=cm_sw_r_tw_dp_U_x_5Nw8Cb4GSMCXH

[22:42] <notable6> lizmat, Noted!

[22:42] <lizmat> weekly: https://www.amazon.com/dp/1484249550

[22:42] <notable6> lizmat, Noted!

[22:48] *** Manifest0 left
[22:52] *** Cabanossi joined
[22:53] *** Manifest0 joined
[23:02] *** Manifest0 left
[23:04] *** netrino__ left
[23:07] *** Manifest0 joined
[23:09] *** netrino__ joined
[23:11] *** Manifest0 left
[23:12] <Geth> ¬¶ problem-solving: AlexDaniel assigned to jnthn Issue The status of PREVIEW modifier. https://github.com/perl6/problem-solving/issues/34

[23:19] *** Manifest0 joined
[23:26] *** mtg left
[23:29] <squashable6> üçï vrurg++ submitted a review on pull request ‚Äú Fix non-reloc install &‚Ä¶‚Äù: https://github.com/rakudo/rakudo/pull/2939#pullrequestreview-244555002

[23:37] *** rindolf left
[23:37] *** Sgeo_ joined
[23:40] *** Sgeo__ left
[23:42] *** netrino__ left
[23:47] *** Manifest0 left
[23:48] *** netrino__ joined
[23:48] *** pecastro left
[23:53] *** Manifest0 joined
