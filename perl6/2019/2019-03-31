[00:20] *** pecastro left
[00:20] *** bkyan joined
[00:21] *** bkyan left
[01:06] *** zachk left
[01:16] *** nevada1 joined
[01:17] <nevada1> Hey, is there any truth to some kind of unified language iteration called Perl 11? Or is that some kind of running joke.

[01:27] *** nevada1 left
[01:35] *** mowcat left
[01:38] *** MidCheck joined
[01:45] *** leont left
[01:47] *** aindilis left
[01:48] *** aindilis joined
[01:49] *** aindilis left
[01:52] *** aindilis joined
[02:26] *** dalek left
[02:27] *** bazzaar left
[02:48] *** sauvin left
[02:49] *** Geth left
[02:54] *** sauvin joined
[03:07] *** hythm joined
[03:08] *** jeromelanteri joined
[03:15] <hythm> how to execute one of two operations randomly? like ( $a + $b ) or ($a - $b ) ?

[03:17] *** netrino left
[03:20] <hythm> p6: given (^1).roll { say 1 + 1 when 0;  say 1 -  1 when 1 }

[03:20] <evalable6> hythm, rakudo-moar 0ecd037b7: OUTPUT: «2␤»

[03:22] <hythm> p6: given (0 .. 1).roll { say 1 + 1 when 0;  say 1 -  1 when 1 } # somethin like this but in more concise way

[03:22] <evalable6> hythm, rakudo-moar 0ecd037b7: OUTPUT: «0␤»

[03:36] *** benjikun joined
[03:48] *** MidCheck left
[04:26] *** sauvin left
[04:30] *** APic left
[04:31] *** sauvin joined
[04:31] *** sauvin left
[04:31] *** sauvin joined
[04:32] *** sauvin left
[04:34] <masak> m: say Bool.roll ?? 1 + 1 !! 1 - 1

[04:34] <evalable6> masak, rakudo-moar 0ecd037b7: OUTPUT: «0␤»

[04:34] <masak> hythm: maybe like that?

[04:35] <masak> works unless you're planning to expand beyond two operators later, I guess

[04:36] <masak> or, if you prefer `if`:

[04:36] <masak> m: say do if Bool.roll { 1 + 1 } else { 1 - 1 }

[04:36] <evalable6> masak, rakudo-moar 0ecd037b7: OUTPUT: «2␤»

[04:36] <masak> (though `?? !!` reads better to my eyes than `do if`)

[04:36] *** eythian left
[04:36] <masak> oh, parens work too:

[04:36] <masak> m: say (if Bool.roll { 1 + 1 } else { 1 - 1 })

[04:37] <evalable6> masak, rakudo-moar 0ecd037b7: OUTPUT: «0␤»

[04:37] <hythm> That works, Thanks masak

[04:37] *** eythian joined
[04:37] <masak> (note that the space after `say` is essential: the parens denote a sub-statement, not an argument list)

[04:38] <hythm> noted

[04:41] *** sauvin joined
[04:42] *** APic joined
[04:47] *** jeromelanteri left
[04:47] *** reach_satori left
[05:11] *** yht joined
[05:28] *** reach_satori joined
[05:31] *** sauvin left
[05:36] *** sauvin joined
[05:50] *** yht left
[06:04] *** molaf joined
[06:23] *** kurahaupo left
[06:25] *** kurahaupo joined
[06:26] <discord6> <Tyler (Aearnus)> hey all, trying to figure out a bit of a mystery here. what writes to $*MAIN_CTX on this line? https://github.com/perl6/nqp/blob/01da9b07c7d0a5e4eaca87225d5833e0ab5b996b/src/HLL/Compiler.nqp#L98

[06:33] *** aborazmeh joined
[06:33] *** aborazmeh left
[06:33] *** aborazmeh joined
[06:34] *** reach_satori left
[06:37] *** jmerelo joined
[06:38] *** rindolf joined
[06:45] *** reach_satori joined
[06:46] <nine> AlexDaniel: commented on the Inline::Python issue

[06:49] *** reach_satori left
[07:02] *** sauvin left
[07:24] <hythm> m: class A { method TOP ( $/ ) { make ($/<x>.Int, $<y>.Int) } } ;grammar G { token TOP { $<x>=<.digit>+ <space> $<y>=<.digit>+ } }; my $actions = A; say G.parse('42 77', :$actions).ast;

[07:24] <evalable6> hythm, rakudo-moar 0ecd037b7: OUTPUT: «(2 2)␤»

[07:25] <hythm> m: class A { method TOP ( $/ ) { make ($/<x>.join.Int, $<y>.join.Int) } } ;grammar G { token TOP { $<x>=<.digit>+ <space> $<y>=<.digit>+ } }; my $actions = A; say G.parse('42 77', :$actions).ast;

[07:25] <evalable6> hythm, rakudo-moar 0ecd037b7: OUTPUT: «(42 77)␤»

[07:28] <hythm> have to .join to get the correct matched numbers, is ther a way to make $<x> holds all <digit> values, and return this as one number, '42' instead of '4, 2'? I though using <.digit> will do that

[07:29] *** kurahaupo_ joined
[07:30] *** kurahaupo left
[07:35] *** rindolf left
[07:40] *** rindolf joined
[07:49] <hythm> Aah, I need brackets around $<x>

[07:49] <hythm> m: class A { method TOP ( $/ ) { make ($/<x>.Int, $<y>.Int) } } ;grammar G { token TOP { $<x>=[<.digit>+] <space> $<y>=[<.digit>+] } }; my $actions = A; say G.parse('42 77', :$actions).ast;

[07:49] <evalable6> hythm, rakudo-moar 0ecd037b7: OUTPUT: «(42 77)␤»

[07:52] *** sauvin joined
[08:06] <jmerelo> geth is down again...

[08:09] *** hythm left
[08:13] *** molaf left
[08:17] *** aborazmeh left
[08:21] *** dalek joined
[08:21] *** ChanServ sets mode: +v dalek

[08:21] *** synopsebot left
[08:21] *** p6lert_ left
[08:21] *** p6lert joined
[08:21] *** synopsebot_ joined
[08:21] *** Geth joined
[08:21] *** ChanServ sets mode: +v synopsebot_

[08:21] *** ChanServ sets mode: +v Geth

[08:59] *** aborazmeh joined
[08:59] *** aborazmeh left
[08:59] *** aborazmeh joined
[09:03] *** cpan-p6_ joined
[09:03] *** cpan-p6_ left
[09:03] *** cpan-p6_ joined
[09:04] *** cpan-p6 left
[09:13] <discord6> <timotimo> @Tyler (Aearnus) it gets set by the ctxsave method which gets called by a part of the code that alwyas gets compiled in; check out perl6 --target=ast -e' say "hi"' to see it

[09:42] *** mowcat joined
[09:51] *** ravenousmoose joined
[09:53] *** Black_Ribbon left
[09:57] *** sena_kun joined
[09:58] *** aborazmeh left
[10:14] *** netrino joined
[10:14] *** antoniogamiz joined
[10:14] <antoniogamiz> o/

[10:14] <timotimo> o/

[10:19] <jmerelo> hi!

[10:20] *** ravenousmoose left
[10:22] *** antoniog1miz joined
[10:22] *** antoniogamiz left
[10:23] *** |oLa| left
[10:24] *** antoniog1miz left
[10:24] *** antoniogamiz joined
[10:25] *** |oLa| joined
[10:46] *** [particle] joined
[10:48] *** [particle]1 left
[10:54] *** netrino left
[10:55] *** netrino joined
[10:57] *** pistacchio_ joined
[10:58] <pistacchio_> if I remember correctly, someone has a page where he's been running daily benchmarks of Rakudo's releases using the same algorithm everyday. can you given the link?

[11:03] <antoniogamiz> https://github.com/japhb/perl6-bench this?

[11:03] <timotimo> oh, that's tux's stuff

[11:04] <timotimo> http://tux.nl/Talks/CSV6/speed4.html

[11:05] <antoniogamiz> https://github.com/japhb/perl6-bench this

[11:06] *** antoniogamiz left
[11:06] *** antoniogamiz joined
[11:07] <antoniogamiz> sorry for the repeated message

[11:10] *** pistacchio_ left
[11:16] <jmerelo> antoniogamiz: that one apparently benchmarks perl5 vs perl6 implementation. But thanks for the link...

[11:17] <timotimo> it also benchmarks different perl6 implementations and different versions of the same perl6 implementation

[11:18] <jmerelo> timotimo: the speed increase is really amazing... 100x increase, a 2x increase in the last year...

[11:19] <timotimo> well, we started rather extremely slow

[11:19] <timotimo> 240 at the beginning ... i mean, wow

[11:20] <jmerelo> timotimo: still, 2 seconds is not great. There's a lot of room for improvement.

[11:20] <timotimo> yeah

[11:20] <jmerelo> timotimo: hope your profiler helps find out more bottlenecks...

[11:20] <timotimo> tux has been saying for years that making "next" faster would be a big help

[11:21] <jmerelo> timotimo: what would you say about that?

[11:22] <timotimo> that sounds likely

[11:22] <timotimo> unfortunately it's also tricky

[11:25] <jmerelo> timotimo: no other incremental path to improvement?

[11:25] <timotimo> if somebody wants to manually rewrite some code in there to turn "next" into basically "loop { beginning of loop body ...; if not $condition-for-next { rest of the loop body } }" we could probably get an estimation of the potential speed improvement

[11:26] <timotimo> i haven't looked into a profile or spesh log of that library for a while

[11:26] <timotimo> right now i'm adding stats to the profiler that will tell you what objects die young, not quite as young, or old

[11:27] <timotimo> i.e. for every gc run it'll tell you how many objects it freed of any given type and splits the count into "freed from nursery", "freed from nursery, but with the 'already seen in nursery' bit set", and "freed in the gen2" (which only happens in major collections)

[11:28] <jmerelo> timotimo: would be useful for what? Early gc? Objects that are not really used?

[11:28] <timotimo> one of the most expensive things you can have is an object that lives just barely long enough to reach the gen2, and then immediately becomes garbage

[11:29] *** pecastro joined
[11:33] <timotimo> other than that, objects that die young can be potential candidates for scalar replacement, but of course only if they are allocated and become garbage in the same frame, and don't escape

[11:43] *** llfourn left
[11:55] *** antoniogamiz left
[12:01] *** |oLa| left
[12:03] *** llfourn joined
[12:07] *** llfourn left
[12:21] <jmerelo> It's already April's fools in StackOverflow. Go and check it out now. I guarantee 100% that's an accurate reflection of what it tries to reflect.

[12:26] *** llfourn joined
[12:31] *** llfourn left
[12:33] *** |oLa| joined
[12:33] *** kurahaupo_ left
[12:38] *** ravenousmoose joined
[12:38] *** |oLa| left
[12:39] *** |oLa| joined
[12:39] *** kerrhau left
[12:54] *** jmerelo left
[12:56] *** abraxxa joined
[12:58] *** llfourn joined
[13:01] *** abraxxa left
[13:03] *** llfourn left
[13:15] *** |oLa| left
[13:16] *** abraxxa joined
[13:17] *** |oLa| joined
[13:19] *** Xliff left
[13:20] *** ravenousmoose left
[13:31] <AlexDaniel> oh well, and here's an April's fools joke from the weather: https://imgur.com/a/f3ZDdKy

[13:31] *** llfourn joined
[13:34] <AlexDaniel> hehe there's a guest book :)

[13:36] *** llfourn left
[13:36] *** rindolf left
[13:38] *** llfourn joined
[13:45] *** llfourn left
[13:46] *** rindolf joined
[13:51] *** llfourn joined
[13:55] *** llfourn left
[14:10] *** leont joined
[14:18] *** ravenousmoose joined
[14:22] *** antoniogamiz joined
[14:22] *** antoniogamiz left
[14:22] *** llfourn joined
[14:25] *** kurahaupo joined
[14:27] *** llfourn left
[14:35] *** netrino left
[14:37] *** netrino joined
[14:41] *** |oLa| left
[14:52] *** zakharyas joined
[14:53] *** ravenousmoose left
[14:53] *** molaf joined
[14:58] *** lucasb joined
[14:59] *** ravenousmoose joined
[15:05] *** molaf left
[15:16] *** llfourn joined
[15:16] *** kensanata joined
[15:21] *** llfourn left
[15:31] *** llfourn joined
[15:32] *** jmerelo joined
[15:32] *** TimToady left
[15:35] *** pmurias joined
[15:37] *** llfourn left
[15:40] *** schmjueg joined
[15:40] *** llfourn joined
[15:41] *** schmjueg left
[15:45] *** llfourn left
[15:48] *** llfourn joined
[15:52] *** llfourn left
[15:53] *** kensanata left
[16:08] *** abraxxa left
[16:18] *** |Sno| joined
[16:21] *** [Sno] left
[16:23] *** domidumont joined
[16:43] *** pmurias left
[16:46] *** llfourn joined
[16:51] *** llfourn left
[16:58] *** llfourn joined
[17:03] *** llfourn left
[17:11] *** reach_satori joined
[17:20] *** pmurias joined
[17:21] <timotimo> feelin' that long rakudo compile times; doubly so because i set --optimize=0

[17:27] <timotimo> hurm. i should really have some random go-to nqp profilable code

[17:28] <timotimo> so i don't have to build rakudo all the time to test changes in nqp

[17:50] *** natrys joined
[17:52] *** ravenousmoose left
[18:10] *** kensanata joined
[18:19] *** antoniogamiz joined
[18:24] *** domidumont left
[18:30] *** pmurias left
[18:33] <kybr> timotimo: i am up for trying moarperf. sure. 

[18:34] *** aindilis left
[18:35] *** aindilis` joined
[18:42] <AlexDaniel> kawaii: hello

[18:42] <AlexDaniel> kawaii: fyi https://github.com/rakudo/rakudo/issues/2805

[18:43] *** llfourn joined
[18:48] *** llfourn left
[18:53] *** kensanata left
[18:59] *** kensanata joined
[19:02] *** jmerelo left
[19:02] <antoniogamiz> some guide to publish new modules

[19:02] <antoniogamiz> ?

[19:07] <sena_kun> antoniogamiz, are you interested in module structure or making a module public/available?

[19:08] <antoniogamiz> making a module public yep 

[19:09] *** [Sno] joined
[19:09] *** |Sno| left
[19:09] <sena_kun> antoniogamiz, right now there are at least two popular options: CPAN and github. Unfortunately, I am not familiar with CPAN, so maybe someone else can tell more. As far as I know, you have to make an account, prepare your module distribution and upload it, but again, not my thing. The easier thing is to just make a PR for https://github.com/perl6/ecosystem <- you have to add url to your `META6.json` file and once it's accepted that's it.

[19:10] *** SCHAPiE left
[19:10] <antoniogamiz> ah ok, that's what I needed to know! thanks :)

[19:11] <antoniogamiz> I already have the repo done: https://github.com/antoniogamiz/Math-ConvergenceMethods

[19:11] <antoniogamiz> I will make the pr then

[19:11] <sena_kun> just an edit of META.list file with one more URL. You want a link to raw file in your repo, but in any case it is pretty tested and people are checking this repo, so if there will be any issues, you'll get help. :)

[19:12] <sena_kun> antoniogamiz, also, you can check if that's installable locally using `zef install .` in the module directory. Saves time if there are any immediate issues like wrong paths and the like.

[19:12] <antoniogamiz> ok, I will check that :)

[19:12] *** molaf joined
[19:14] <Geth> ¦ ecosystem: antoniogamiz++ created pull request #444: New Math::ConvergenceMethods module

[19:14] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/444

[19:16] *** SCHAPiE joined
[19:16] <sena_kun> antoniogamiz, now we only have to wait for travis to be ok and I'll merge it. ;)

[19:16] <antoniogamiz> yep :)

[19:16] <antoniogamiz> I can already merge it :D

[19:17] <antoniogamiz> but I prefer to make a pr and check everything is ok

[19:17] <antoniogamiz> I can merge it too*****

[19:17] <Geth> ¦ ecosystem: 2a7bf3d283 | Antonio++ (committed using GitHub Web editor) | META.list

[19:17] <Geth> ¦ ecosystem: Update META.list

[19:17] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/2a7bf3d283

[19:17] <Geth> ¦ ecosystem: ad9028d64d | Altai-man++ (committed using GitHub Web editor) | META.list

[19:17] <Geth> ¦ ecosystem: Merge pull request #444 from antoniogamiz/master

[19:17] <Geth> ¦ ecosystem: 

[19:17] <Geth> ¦ ecosystem: New Math::ConvergenceMethods module

[19:17] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/ad9028d64d

[19:17] *** cpan-p6_ left
[19:17] <sena_kun> oh wow, new checker is really fast

[19:17] *** cpan-p6 joined
[19:17] *** cpan-p6 left
[19:17] *** cpan-p6 joined
[19:17] *** zakharyas left
[19:17] <antoniogamiz> :oo

[19:18] <sena_kun> antoniogamiz, now a couple of hours for caches to be updated and it'll be installable. \o/

[19:19] <antoniogamiz> sena_kun: \o/

[19:23] *** molaf left
[19:37] *** kensanata left
[19:50] *** Xliff joined
[20:01] *** antoniogamiz left
[20:02] *** pmurias joined
[20:04] *** robertle left
[20:05] *** antoniogamiz joined
[20:12] *** Black_Ribbon joined
[20:32] <timotimo>         # github source https://github.com/antoniogamiz/Math-ConvergenceMethods needs to end in .git

[20:32] <timotimo> oh?

[20:37] <sena_kun> how did it pass the travis then?

[20:38] <sena_kun> https://travis-ci.org/perl6/ecosystem/builds/513833296?utm_source=github_status&utm_medium=notification <- seems like a suggestion, not an error

[20:38] <sena_kun> but, anyway, antoniogamiz ^

[20:42] * guifa cheers for Object not being a taken name

[20:44] *** llfourn joined
[20:45] <antoniogamiz> mmmmm I thought it had passed the Test::Meta

[20:48] <antoniogamiz> mmm Test::Meta is passing correctly :/

[20:49] <sena_kun> it is, just gives a suggestion, I guess

[20:49] *** llfourn left
[20:50] <antoniogamiz> ah ok, I will change it then :)

[20:56] *** entonian joined
[21:02] *** entonian left
[21:15] *** kurahaupo_ joined
[21:17] *** kurahaupo left
[21:27] *** grumble is now known as upline

[21:44] *** kurahaupo_ left
[21:46] <Xliff> Oh... ghod.

[21:47] <Xliff> StackOverflow's tribute to the Fool is... a tad overdone.

[21:47] <Xliff> Think Unicorns and Rainbows.

[21:47] <Xliff> Where the pointer is the unicorn.

[21:47] <Xliff> You. Have. Been. Warned.

[21:55] <timotimo> i liked it

[21:55] <timotimo> and maybe it'll be better soon. after all, it's still Under Construction™

[22:10] <Xliff> LOL

[22:10] <Xliff> I shudder to think of how it could be made "better"

[22:17] *** antoniogamiz left
[22:21] *** kurahaupo joined
[22:45] *** natrys left
[22:45] *** benjikun left
[22:46] *** llfourn joined
[22:46] *** pmurias left
[22:51] *** llfourn left
[22:56] *** llfourn joined
[23:02] *** sena_kun left
[23:17] *** netrino left
[23:23] *** pecastro left
[23:28] *** lucasb left
[23:37] *** MidCheck joined
[23:39] *** kurahaupo left
[23:39] *** kurahaupo_ joined
[23:40] *** aborazmeh joined
[23:40] *** aborazmeh left
[23:40] *** aborazmeh joined
[23:40] *** mniip is now known as mnoop

