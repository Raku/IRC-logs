[00:06] *** Manifest0 left
[00:12] *** Manifest0 joined
[00:24] *** Manifest0 left
[00:29] *** Manifest0 joined
[00:44] *** kurahaupo left
[00:44] *** kurahaupo_ joined
[00:49] *** kktt joined
[00:50] *** Manifest0 left
[00:53] *** kurahaupo joined
[00:54] *** kurahaupo_ left
[00:57] *** Manifest0 joined
[01:04] *** Manifest0 left
[01:09] *** Manifest0 joined
[01:13] *** fake_space_whale joined
[01:27] *** zachk left
[01:40] *** Manifest0 left
[01:41] *** netrino left
[01:47] *** Manifest0 joined
[02:02] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:07] *** mowcat joined
[02:11] *** El_Che left
[02:12] *** El_Che joined
[02:12] *** kktt007 left
[02:14] <Voldenet> I know that perl6 isn't haskell, but is there any way to get type safety out of Iterables?

[02:15] <Voldenet> m: sub do(Iterable[IO::Path] $paths) { … }; do(dir())

[02:15] <evalable6> Voldenet, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Type check failed in binding to parameter '$paths'; expected Iterable[IO::Path] but got Seq ($((IO::Path.new("bin"...)␤  in sub do at /tmp/YlH_pRX7FC line 1␤  in block <unit> at /tmp/YlH_pRX7FC line 1␤␤»

[02:16] *** cpan-p6 left
[02:16] *** cpan-p6 joined
[02:16] *** cpan-p6 left
[02:16] *** cpan-p6 joined
[02:16] <Voldenet> that's what I wanted - now I'm working this around by just using that:

[02:16] <Voldenet> m: sub y(IO::Path @a) { }; y(dir.&(Array[IO::Path]))

[02:16] <evalable6> Voldenet, rakudo-moar 90e18b65f: OUTPUT: «»

[02:17] <Voldenet> it works, but I wonder if there's a better way of doing this

[02:20] <Xliff> Voldnet: You can check arrays for types, but I don't do it in a parameter list.

[02:21] <Xliff> m: sub do(IO::Path @paths) { … }; do(dir())

[02:21] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Type check failed in binding to parameter '@paths'; expected Positional[IO::Path] but got List ($(IO::Path.new("bin",...)␤  in sub do at /tmp/sZ8ZnhLLLv line 1␤  in block <unit> at /tmp/sZ8ZnhLLLv line 1␤␤»

[02:21] <Xliff> m: sub do(IO::Path @paths) { … }; do(dir().Array)

[02:21] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Type check failed in binding to parameter '@paths'; expected Positional[IO::Path] but got Array ($[IO::Path.new("bin",...)␤  in sub do at /tmp/fadHCxxM4R line 1␤  in block <unit> at /tmp/fadHCxxM4R line 1␤␤»

[02:21] <Xliff> m: sub do(IO::Path @paths) { … }; do(|dir().Array)

[02:21] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Too many positionals passed; expected 1 argument but got 21␤  in sub do at /tmp/kXBq7vAPjz line 1␤  in block <unit> at /tmp/kXBq7vAPjz line 1␤␤»

[02:22] <Xliff> m: sub do(Array[IO::Path] @paths) { … }; do(|dir().Array)

[02:22] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Too many positionals passed; expected 1 argument but got 21␤  in sub do at /tmp/1PZKSTDpQi line 1␤  in block <unit> at /tmp/1PZKSTDpQi line 1␤␤»

[02:22] <Xliff> m: sub do(Array[IO::Path] @paths) { … }; do(dir())

[02:22] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Type check failed in binding to parameter '@paths'; expected Positional[Arra…»

[02:22] <evalable6> Xliff, Full output: https://gist.github.com/33c96da24514696d2684a9eb3edc87bd

[02:22] <ugexe> m: sub y(@a where .all ~~ IO::Path) { }; say y(dir); y("a")

[02:22] <evalable6> ugexe, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Nil␤Type check failed in binding to parameter '@a'; expected Positional but got Str ("a")␤  in sub y at /tmp/geEl3fii95 line 1␤  in block <unit> at /tmp/geEl3fii95 line 1␤␤»

[02:22] <Xliff> Or that...

[02:23] <Xliff> I keep forgetting about where.

[02:23] <Xliff> m: sub y(@a where .all ~~ (IO::Path, Str).any) { }; say y(dir); y("a")

[02:23] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «(exit code 1) Nil␤Type check failed in binding to parameter '@a'; expected Positional but got Str ("a")␤  in sub y at /tmp/RlCYcpcIb9 line 1␤  in block <unit> at /tmp/RlCYcpcIb9 line 1␤␤»

[02:23] <Xliff> m: sub y($a where .all ~~ (IO::Path, Str).any) { }; say y(dir); y("a")

[02:23] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «Nil␤»

[02:24] *** zacts joined
[02:25] <Voldenet> but using where would effectively just test all elements in the signature

[02:26] <ugexe> well that is going to happen one way or another

[02:26] <ugexe> when you do Array[IO::Path] or whatever it has to check each item

[02:28] <ugexe> dir.&(Array[IO::Path]) <-- this tests all alements

[02:32] <ugexe> m: sub y(IO::Path @a) { }; y(my IO::Path @ = dir); # if you are just looking for an (arguably) cleaner way to write what you are already doing

[02:32] <evalable6> ugexe, rakudo-moar 90e18b65f: OUTPUT: «»

[02:32] <ugexe> but this again is checking every element

[02:34] <Voldenet> But if Iterator from dir returns failure from pull-one, I'd have to handle the failure on the call site

[02:35] <Voldenet> instead of the consumer site

[02:37] <ugexe> that is true. however i would wonder if dir should not return failures.

[02:37] <ugexe> for instance: is it reasonable to not throw a failure if it encounters a file that no longer exists after the dir handle was opened?

[02:38] <ugexe> (i dont know if that is a real problem for us or not, just what i could think of failing for dir)

[02:38] <ugexe> i assume permissions as well

[02:41] <Voldenet> well, in most cases Failure is given instead of a list, but I wonder what happens if readdir returns an error

[02:45] <ugexe> https://github.com/MoarVM/MoarVM/blob/631cfdf6cf8cbb6c4820d7d61bb0c2f82e216dcb/src/io/dirops.c#L280

[03:06] *** Manifest0 left
[03:08] *** kktt left
[03:10] *** ctilmes left
[03:12] *** Manifest0 joined
[03:16] *** ctilmes joined
[03:19] <ugexe> there is also Array[IO::Path].new(dir)

[03:25] <Xliff> How can I get access to perl6 docs, right now?

[03:32] <Voldenet> http://docs.perl6.wakelift.de

[03:34] <Voldenet> a propos dir operation: https://github.com/rakudo/rakudo/blob/38f4b7b4383c976ac95f9d812a832638a047ee07/src/core/IO/Path.pm6#L567

[03:36] <Xliff> Voldenet++ # Thanks!

[03:36] <Xliff> Is p6c down as well?

[03:37] <Voldenet> it's described on p6c site

[03:37] <Voldenet> > www.p6c.org hosts many Perl 6-related websites, including the perl6.org main site, doc.perl6.org, modules.perl6.org and the Perl 6 design documents.

[03:41] <Xliff> So that's a yes. That means zef is also effectively neutered.

[03:41] <Xliff> Yikes.

[03:41] <Xliff> ...

[03:41] <Xliff> Or not. Install finally finished.

[03:42] <Xliff> Went to github.

[03:42] <Xliff> So zef is fine, just takes a while.

[03:47] *** atroxaper joined
[03:52] *** zacts left
[03:53] *** mowcat left
[04:01] *** zacts joined
[04:13] *** kurahaupo left
[04:13] *** kurahaupo joined
[04:19] *** Manifest0 left
[04:26] *** Manifest0 joined
[04:30] *** APic left
[04:40] *** APic joined
[05:00] *** Manifest0 left
[05:06] *** Manifest0 joined
[05:10] *** Manifest0 left
[05:16] *** Manifest0 joined
[05:31] *** atroxaper left
[05:37] *** Manifest0 left
[05:42] *** Manifest0 joined
[05:53] *** Manifest0 left
[05:58] *** Manifest0 joined
[06:19] *** kurahaupo1 joined
[06:27] *** Manifest0 left
[06:32] *** Manifest0 joined
[06:32] *** fake_space_whale left
[06:38] *** atroxaper joined
[06:38] *** kurahaupo1 is now known as kurahaupo____

[06:43] *** jmerelo joined
[06:43] <jmerelo> releasable6: status

[06:43] <releasable6> jmerelo, Next release will happen when it's ready. 11 blockers. 61 out of 225 commits logged (⚠ 51 warnings)

[06:43] <releasable6> jmerelo, Details: https://gist.github.com/837da75eb6f5424fd071e50cbd5d519d

[07:03] *** zacts left
[07:22] *** rindolf joined
[07:32] *** Manifest0 left
[07:32] *** adu left
[07:38] *** Manifest0 joined
[07:39] *** Black_Ribbon left
[08:06] <Xliff> m: $_ = 'gchar'; s/g?char/Str/; .say

[08:06] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «Str␤»

[08:07] <Xliff> m: $_ = 'char'; s/g?char/Str/; .say

[08:07] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «Str␤»

[08:07] <Xliff> m: $_ = ' char'; s/g?char/Str/; .say

[08:07] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: « Str␤»

[08:08] <Xliff> m: $_ = 'gchar $str char $a   char $b'; s:g/g?char /Str/; .say

[08:08] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «Str $str Str $a   Str $b␤»

[08:08] <Xliff> So why doesn't that work in my code?!? /o\

[08:09] <Xliff> m: $_ = 'gchar $strchar $a   char $b'; s:g/«g?char /Str/; .say

[08:09] <evalable6> Xliff, rakudo-moar 90e18b65f: OUTPUT: «Str $strchar $a   Str $b␤»

[08:16] *** kurahaupo____ left
[08:34] *** atroxaper left
[08:45] *** Manifest0 left
[08:56] *** Manifest0 joined
[08:59] *** Xliff left
[09:07] <El_Che> jmerelo: who is the release manager?

[09:11] <timotimo> i believe it's kawaii

[09:14] *** holyghost left
[09:18] <kawaii> El_Che: me! 

[09:24] *** sena_kun joined
[09:28] <jmerelo> kawaii: how is it going?

[09:29] <timotimo> kind of nice to see how many people miss the perl6 website

[09:29] <kawaii> jmerelo: I'm going to cut a release candidate on Monday hopefully

[09:30] <kawaii> If everyone is happy with that, then we'll do a full release later in the week

[09:32] <timotimo> how will we handle the blockers?

[09:34] *** mowcat joined
[09:35] <kawaii> timotimo: I'm going to remove the blocker label from those that are going unnoticed/not causing much trouble.

[09:35] <kawaii> (and then bug you guys to fix the real blockers ;) )

[09:39] *** kurahaupo_ joined
[09:40] *** Manifest0 left
[09:43] *** kurahaupo left
[09:44] *** Manifest0 joined
[09:45] <jmerelo> kawaii: great!

[09:45] *** kurahaupo_ left
[09:46] *** kurahaupo joined
[09:54] *** Manifest0 left
[09:58] *** Manifest0 joined
[10:05] *** Manifest0 left
[10:11] *** Manifest0 joined
[10:55] *** Manifest0 left
[11:00] *** Manifest0 joined
[11:06] <El_Che> kawaii: nice to hear we have a release manager. Thx

[11:07] <kawaii> lizmat: did you have a suggested resolution for: https://github.com/rakudo/rakudo/issues/2815 ?

[11:08] <kawaii> or can I remove the blocker label from it for this release?

[11:17] *** jmerelo left
[11:26] *** Manifest0 left
[11:32] *** Manifest0 joined
[11:33] *** SobiX joined
[11:34] *** SobiX left
[11:35] *** SobiX joined
[11:35] *** SobiX left
[11:36] *** SobiX joined
[11:39] *** SobiX left
[11:42] *** netrino joined
[11:48] *** Manifest0 left
[11:53] *** Manifest0 joined
[12:00] *** MasterDuke joined
[12:00] *** Manifest0 left
[12:04] *** MasterDuke left
[12:06] *** Manifest0 joined
[12:38] *** guifa left
[12:47] *** Manifest0 left
[12:52] *** Manifest0 joined
[13:26] *** netrino_ joined
[13:28] *** netrino left
[13:46] *** SobiX joined
[13:50] *** SobiX left
[13:57] <rindolf> hi all, what to do about this - https://travis-ci.org/shlomif/ci-gen-framework/jobs/522517049 ?

[14:00] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2019/04/21/wrapping-a-scope/

[14:01] *** kurahaupo left
[14:02] *** kurahaupo joined
[14:02] *** kurahaupo left
[14:02] *** kurahaupo joined
[14:06] *** kurahaupo left
[14:07] <dogbert17> rindolf: that is due to network related problems 

[14:09] <dogbert17> rindolf: a bit more info here https://colabti.org/irclogger/irclogger_log/perl6?date=2019-04-19#l810

[14:12] *** atroxaper joined
[14:12] *** atroxaper left
[14:17] *** diakopter joined
[14:23] *** Manifest0 left
[14:24] *** guifa joined
[14:25] <ugexe> rindolf: ouch

[14:25] <ugexe> tadzik: ping https://travis-ci.org/shlomif/ci-gen-framework/jobs/522517049

[14:25] <ugexe> or nine^

[14:28] <ugexe> .tell patrickb https://travis-ci.org/shlomif/ci-gen-framework/jobs/522517049 rakudobrew has regressed 

[14:28] <yoleaux> ugexe: I'll pass your message to patrickb.

[14:30] *** Manifest0 joined
[14:36] *** Manifest0 left
[14:36] *** atroxaper joined
[14:41] *** Manifest0 joined
[14:46] *** Manifest0 left
[14:47] <ugexe> ah masak has opened an issue even

[14:47] <gabc> hi, I'm looking at OO in p6, is there a way to give a type to the attributes of a class? Like class Foo { has Str $.whatever; } ? Or do you control that from the accessor functions

[14:48] *** mowcat left
[14:50] <lucs> r: class Foo {has Str $.s } ; Foo.new( :s(4.2) )

[14:50] <perlbot> lucs: Type check failed in assignment to $!s; expected Str but got Rat (4.2)␤  in block <unit> at /tmp/aFUFpT0NfM line 1␤␤[Exited 1]

[14:51] *** Manifest0 joined
[14:51] <gabc> Cool thanks!

[14:56] *** kurahaupo joined
[15:00] <jaldhar> FatRat is supposed to be arbitrary precision right?  How do I specify exactly how many digits of precision I want?

[15:00] <rindolf> dogbert17: ugexe : thanks

[15:13] *** imcsk8 left
[15:21] *** imcsk8 joined
[15:29] <gfldex> m: my $n = FatRat.new(1,2); $n = $n ** 2 for ^100; say $n.perl;

[15:29] <evalable6> gfldex, rakudo-moar 90e18b65f: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[15:29] <gfldex> jaldhar: you can't limit precision on FatRat

[15:29] <gfldex> m: my $n = FatRat.new(1,2); $n = $n ** 2 for ^10; say $n.perl;

[15:29] <evalable6> gfldex, rakudo-moar 90e18b65f: OUTPUT: «FatRat.new(1, 1797693134862315907729305190789024733617976978942306572734300811577326758055…»

[15:29] <evalable6> gfldex, Full output: https://gist.github.com/40cc1e0ee38c0a3872f91802b425e24f

[15:35] *** thundergnat joined
[15:36] <thundergnat> jaldhar: Are you looking to control precision during calculation or for output?

[15:37] <tadzik> ugexe: rakudobrew can/should be checked out at v1 to workaround this

[15:37] <tadzik> we'll need to pester patzim about the proper fix

[15:37] <tadzik> changes got merged before I managed to test them :/

[15:37] <tadzik> and similar thing broke it for me too

[15:39] <thundergnat> jaldhar: during calculation may be difficult without mucking around in the guts of FatRat. If you just want to control output stringification, check out Rat::Precise https://github.com/thundergnat/Rat-Precise (shameless plug)

[15:48] <jaldhar> thundergnat: sorry had to step away.  The module sounds like what I need.  Thanks.

[15:48] <jaldhar> It's so annoying having *.perl6.org down

[16:01] *** lembark joined
[16:10] *** jmerelo joined
[16:20] *** diakopter left
[16:27] *** Manifest0 left
[16:34] *** Manifest0 joined
[16:41] *** fake_space_whale joined
[16:52] *** Manifest0 left
[16:57] *** Manifest0 joined
[17:06] *** atroxaper left
[17:07] *** Manifest0 left
[17:13] *** Manifest0 joined
[17:32] <jmerelo> Repo for season of docs ideas: https://perl-gsoc-2019.github.io/season-of-docs-ideas/

[17:33] <jmerelo> It's two days to go, and it has overlapped with, well, life, so I didn't have much time to prepare this. Anyway, what we need for perl 6 documentation is clear enough.

[17:33] <jmerelo> Even so, if you can think of something different, or improve on what's there, I'll be inmensely grateful.

[17:33] *** Black_Ribbon joined
[17:34] <jmerelo> Season of docs does not have the concept of "umbrella" organization, every documentation project will have its own application. So if you think it's a good idea to request documentation for something else, go ahead.

[17:42] *** rindolf left
[17:52] *** netrino joined
[17:53] *** netrino_ left
[17:54] *** molaf joined
[18:05] *** zakharyas joined
[18:12] *** Manifest0 left
[18:14] *** molaf left
[18:16] *** vrurg joined
[18:17] *** Manifest0 joined
[18:23] *** cpan-p6 left
[18:23] *** cpan-p6 joined
[18:23] *** cpan-p6 left
[18:23] *** cpan-p6 joined
[18:28] *** natrys joined
[18:28] *** uzl joined
[18:29] <uzl> jmerelo: "...the chosen persons of persons." -> "...the chosen person or persons."? Could it be a typo?

[18:30] <jmerelo> uzl: very likely. Thanks.

[18:32] <uzl> No problem!

[18:45] *** dmaestro joined
[18:46] *** masak joined
[18:47] <masak> hi #perl6! dialing in from a... (urgh!) web client, because SSH doesn't seem to work today.

[18:47] <masak> my Travis CI runs are broken, and I'm sad about this :(

[18:47] <masak> see https://github.com/tadzik/rakudobrew/issues/134

[18:48] <masak> to add insult to injury, the PR that broke rakudobrew that broke Travis is named "Loads of stuff" :P

[18:49] *** uzl left
[18:58] <jmerelo> masak: well, it's a whole lot of stuff

[18:58] <masak> I guess the pain I'm feeling when I can't have Travis is a testament to some measure of success of the TDD/CI worldview

[18:58] <masak> is there a "quick fix"? can I do anything at this point to keep using Travis with Perl 6?

[18:59] <ugexe> masak: https://github.com/ugexe/Perl6-Net--HTTP/blob/master/.travis.yml you can do it the long way

[18:59] <jmerelo> masak: I use Docker containers, my own. But there are a bunch around.

[19:00] <jmerelo> masak: this one works pretty well https://hub.docker.com/r/jjmerelo/test-perl6/ and in fact it's the base of what we use for docs and many modules.

[19:00] <jmerelo> masak: but tyil's got nightly builds, and there's a official Rakudo Star container, and you've got a lot to choose from.

[19:00] <masak> this sounds good. I will try it the long way.

[19:01] <masak> thanks. <3

[19:01] <jmerelo> masak: you know the long way takes ~15 minutes longer than the other, right?

[19:01] *** jmerelo left
[19:03] *** lembark left
[19:04] <masak> jmerelo: I did not, but in this case ~15 minutes is shorter than ~Inf minutes... and I did as for a workaround ;)

[19:04] <ugexe> it also works for osx, and for blead moar/nqp (not just rakudo with tagged nqp/moar revisions)

[19:09] <masak> "it" being Travis with the current rakudobrew?

[19:10] <ugexe> no no, doing it manually instead of with a container

[19:11] <ugexe> "doing it" meaning getting perl6 running on travisu

[19:11] *** patrickb joined
[19:12] <ugexe> most things i work on could fail differently between linux and osx, so i test on both. having a linux container finish in 1m doesn't help with the osx still must run on bare metal and take 15 minutes to finish.

[19:12] <patrickb> o/

[19:12] <yoleaux> 14:28Z <ugexe> patrickb: https://travis-ci.org/shlomif/ci-gen-framework/jobs/522517049 rakudobrew has regressed

[19:12] <patrickb> seen it already.

[19:13] <patrickb> Sorry about that, I'm looking into this right now.

[19:13] *** sena_kun left
[19:19] <patrickb> ugexe: Travis CI lists you as someone to ping wrt perl6 travis. Can you tell me where the code that backs `language: perl6` in travis is?

[19:19] *** AlexDaniel joined
[19:19] <patrickb> tadzik: The rakudobrew merge seems to have broken travis testing at large. A quick revert might be a thing to consider...

[19:19] <ugexe> https://github.com/travis-ci/travis-build/blob/773dbcdb35ed25c63e1f62674bf3da4f8e9834e7/lib/travis/build/script/perl6.rb

[19:20] <patrickb> ugexe: Thanks!

[19:21] <patrickb> niner: The rakudobrew merge seems to have broken travis testing at large. A quick revert might be a thing to consider. (I don't have a commit bit)

[19:33] *** dylanwh left
[19:41] *** Manifest0 left
[19:46] <patrickb> I just created a travis-build PR to fix the latest travis rakudobrew/perl6 regression: https://github.com/travis-ci/travis-build/pull/1693

[19:46] <patrickb> ugexe: ^

[19:46] <patrickb> We'll see how quickly this will go through...

[19:46] *** Manifest0 joined
[19:49] <ugexe> i'm expecting it to take days

[19:50] <ugexe> https://github.com/BanzaiMan (note status says On Vacation)

[19:52] <ugexe> https://github.com/travis-ci/travis-build/pull/1643 this one took two weeks

[19:53] <ugexe> and at that point may as well rewrite it to use the updated changes properly

[19:55] <patrickb> .tell tadzik If possible, please revert rakudobrew for now. This breaks perl6 on travis. A PR was already committed, but may take days. I also pinged nine.

[19:55] <yoleaux> patrickb: I'll pass your message to tadzik.

[19:56] <ugexe> do you know what the underlying issue is yet?

[19:56] <patrickb> .tell nine If possible, please revert rakudobrew for now. This breaks perl6 on travis. A PR was already committed, but may take days. I also pinged tadzik.

[19:56] <yoleaux> patrickb: I'll pass your message to nine.

[19:56] <patrickb> ugexe: I do.

[19:56] <ugexe> what is it?

[19:56] <masak> patrickb: hi. thank you. :)

[19:57] <ugexe> to me it seems like it either nees to auto init or be able to understand a slightly different subset of cli arguments

[19:57] <ugexe> but i'm guessing its not, because those should be easy to fix

[19:57] <patrickb> The new rakudobrew relies on a shell function to be installed. It tests for it an complains when the hook is not found. The travis perl6.rb script does not install that hook.

[19:58] <patrickb> It just exports the .rakudobrew/bin dir to $PATH and does nothing else.

[19:58] <ugexe> can there be a fallback function that uses perl5?

[19:58] <ugexe> until travis can be fixed at least

[19:59] <patrickb> No, the sole purpose of the hook is to modify the shell of the caller. That can't be done any other way.

[19:59] <patrickb> I'd just revert rakudobrew fully, wait for the PR to use the v1 branch to go through and then revert the revert.

[20:01] <ugexe> can you point at the code/hook you are talking about specifically?

[20:03] <patrickb> https://github.com/tadzik/rakudobrew/blob/master/lib/Rakudobrew/ShellHook/Bash.pm

[20:03] <patrickb> There is a thing that could make it work again.

[20:03] <patrickb> Just switch the default mode to `shim` instead of `env`. Then it should continue to work as it did before.

[20:04] <masak> how does one do that? set an environment variable?

[20:04] <ugexe> well we can get more evil then

[20:04] <ugexe> just have rakudobrew check if its (presumably) running on travis-ci

[20:04] <patrickb> `rakudobrew mode shim` does that

[20:05] <patrickb> Current problem: I don't have a commit bit to rakudobrew

[20:05] <ugexe> i at least hope people arent seting $TRAVIS_BUILD_DIR in their local env :)

[20:06] <masak> patrickb: yes, but with the setup I had in my .travis.yml, I wasn't directly using rakudobrew at all. I just had `language: perl6`

[20:06] <patrickb> A four character change here would fix it: https://github.com/tadzik/rakudobrew/blob/master/lib/Rakudobrew/VersionHandling.pm#L140

[20:06] <masak> so I can't apply that fix

[20:07] <patrickb> masak: that `language: perl6` references this `https://github.com/travis-ci/travis-build/blob/master/lib/travis/build/script/perl6.rb` file which does use rakudobrew.

[20:10] <masak> ah, good to know

[20:11] *** AlexDaniel left
[20:12] <SyrupThinker> https://rakudo.org refuses connections for me. Non tls works.

[20:13] <ugexe> https://github.com/tadzik/rakudobrew/blob/master/lib/Rakudobrew/VersionHandling.pm#L232 This is missing .p6

[20:13] <patrickb> .tell tadzik Alternatively merging https://github.com/tadzik/rakudobrew/pull/135 is worth a try first.

[20:13] <yoleaux> patrickb: I'll pass your message to tadzik.

[20:13] <patrickb> .tell nine Alternatively merging https://github.com/tadzik/rakudobrew/pull/135 is worth a try first.

[20:13] <yoleaux> patrickb: I'll pass your message to nine.

[20:16] <ugexe> maybe an ENV var to force shim/env would be nice too

[20:17] <patrickb> ugexe: When would one use such an env var?

[20:18] <ugexe> is this an install-time behavior and not a run-time behavior?

[20:19] <ugexe> otherwise i would say this travis-ci issue is an ok example. for instance masak could add RAKUDOBREW_MODE=shim in their travis-ci file and it would start working again

[20:19] <patrickb> ugexe: rakudobrew needs to change stuff when switching modes (modifying $PATH, creating shims).

[20:20] <patrickb> ugexe: Do environment variables propagate to such language files?

[20:23] <ugexe> i cant say for sure. i would expect anything under `env: ...` to be, but not something like `before_install: export ...`

[20:26] <patrickb> Thinking about it some more I think changing the mode via environment variables is dangerous, because rakudobrew can't do it's setup work without being called. So setting the environment variable does not change anything without calling rakudobrew again. That would be very counter intuitive. The change would happen at the wrong point in time (basically the next rakudobrew invocation).

[20:26] <ugexe> isn't that easy to detect and inform the user though?

[20:27] <ugexe> i agree that does complicate things a bit though

[20:29] *** kurahaupo left
[20:29] *** kurahaupo joined
[20:30] <patrickb> ugexe: I have to leave. I hope we'll get this sorted out soon. I'll have an eye on this tomorrow.

[20:30] <patrickb> ugexe: Thanks for your pointers, btw!

[20:30] <patrickb> o/

[20:31] *** patrickb left
[20:37] *** sena_kun joined
[20:40] <masak> moritz: heh. I went back in time to the commit where I added the James Bond pastiche for 007, and discovered it was you who inspired me to write it: https://github.com/masak/007/commit/a9f213b049fc992a8df671b5d194dc600b1ef948 :)

[20:47] *** Manifest0 left
[20:48] *** molaf joined
[20:51] <moritz> it was? :D

[20:51] <moritz> curious

[20:52] *** Manifest0 joined
[21:10] *** Altai-man_ joined
[21:12] *** rindolf joined
[21:13] *** sena_kun left
[21:25] *** rindolf left
[21:27] <timotimo> masak: were you usually logging in from irc.p6c.org?

[21:34] *** Manifest0 left
[21:38] *** Manifest0 joined
[21:39] *** zakharyas left
[21:45] *** Altai-man_ is now known as sena_kun

[21:52] *** dylanwh joined
[22:11] *** patrickb joined
[22:12] <patrickb> masak: nine just merged the rakudobrew fix. Can you somehow try if this worked?

[22:15] <patrickb> Going to bed now. We'll see tomorrow...

[22:15] *** patrickb left
[22:15] *** rindolf joined
[22:21] *** natrys left
[22:28] *** jaldhar left
[22:29] *** jaldhar joined
[22:30] *** Manifest0 left
[22:35] *** Manifest0 joined
[22:45] *** dmaestro left
[22:54] *** Manifest0 left
[23:00] *** random_yanek left
[23:01] *** AlexDaniel joined
[23:02] *** Manifest0 joined
[23:08] *** random_yanek joined
[23:08] *** random_yanek left
[23:16] *** random_yanek joined
[23:16] *** random_yanek left
[23:18] *** random_yanek joined
[23:18] *** random_yanek left
[23:20] *** aindilis left
[23:26] *** aindilis joined
[23:27] *** Manifest0 left
[23:31] <masak> timotimo: aye

[23:31] *** sena_kun left
[23:32] *** Manifest0 joined
[23:35] *** random_yanek joined
[23:37] *** rindolf left
[23:45] *** molaf left
[23:52] <masak> patrickb: sad to report it doesn't work: https://travis-ci.org/masak/007/builds/522856888

[23:57] *** ayerhart left
[23:57] *** ayerhart joined
