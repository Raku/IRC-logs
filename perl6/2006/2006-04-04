[00:10] *** Quell joined
[00:43] *** sean` joined
[00:52] *** jiing_mIRC joined
[01:28] *** vel joined
[02:05] *** hexmode joined
[02:34] *** amnesiac joined
[02:42] *** Kattana joined
[02:45] *** Kattana left
[02:48] *** Kattana joined
[02:48] *** r0nny joined
[02:51] *** Kattana joined
[03:25] *** Khisanth joined
[03:45] *** sean joined
[04:06] *** dduncan joined
[05:30] * gaal observes that not knowing the right terminal is an all too common epistemic state

[05:33] *** kattana_ joined
[05:40] *** GeJ joined
[06:07] <gaal> audreyt: ah! r66 of perlsyck had fixed the bug!

[06:14] *** pdcawley joined
[06:36] *** spinclad_ joined
[06:38] *** marmic joined
[07:04] *** iblechbot joined
[07:15] *** drrho joined
[07:20] *** stennie joined
[07:41] *** KingDiamond joined
[07:43] *** bsb joined
[08:05] *** drbean joined
[08:40] *** clkao joined
[08:42] * TimToady observes that jet lag sucks, and resolves (after a 3 hour nap) to get over it faster than Audrey.

[08:44] <miyagawa> TimToady: nice to hear that your jetlag has resolved

[08:44] *** stennie joined
[08:47] <TimToady> Unfortunately, it's just me that's resolved...

[08:47] <TimToady> It's 1:47 in the morning here...

[08:48] <arcady> that it is...

[08:49] <arcady> probably a good time for sleep, all things considered

[08:49] <TimToady> considering all things is what's keeping me awake at the moment :)

[08:50] <miyagawa> maybe Daylight Saving Time disturbs resolving for a while

[08:50] <arcady> ah yes, there's that

[08:50] <TimToady> the clock in my bedroom adjusts automatically.  Maybe if I could just tune into WWV for the time.

[08:51] <arcady> at least it makes the sun come through the window at a reasonable time now

[08:51] <audreyt> I survived :)

[08:51] <arcady> hooray!

[08:51] <TimToady> the sun rarely comes through the window at a reasonable at any time of the year.

[08:51] <miyagawa> :)

[08:52] <TimToady> s/at/time at/

[08:52] <TimToady> audreyt: welcome home, er...

[08:52] <webmind> that's why curtains where invented :)

[08:56] <arcady> or, you could just destroy the sun, that would solve the problem too

[08:57] <arcady> and solve global warming too!

[08:58] *** lypanov joined
[08:59] <ingy> TimToady: nocturnal thee are or jetlag?

[09:00] * ingy reads back a little

[09:01] <TimToady> I now know where the Japanese keep the sun at night, so perhaps someone can be bribed to keep it locked away: http://www.dan.co.jp/~larry/pix/20060331/P1020523.JPG

[09:01] <TimToady> ingy: I'm learning the benefits of 3 hour naps...

[09:02] <miyagawa> haha

[09:02] <ingy> funny are you

[09:03] <gaal> wow, that's very similar to a building in tlv

[09:03] <gaal> I hope it isn't some sort of portal thing

[09:04] <TimToady> Does it have one of those sun control towers next to it?

[09:04] <TimToady> Might just be a lunar tower, y'know...

[09:04] <gaal> for a long while it did, in fact

[09:05] *** spinclad joined
[09:05] <TimToady> It's possible they really only need the tower for winching in the sun.

[09:06] <TimToady> This whole "land of the rising sun" thing is just government misdirection...

[09:07] <TimToady> On the gripping hand, there's a building shaped like that in Salem, Oregon, and I sincerely doubt anything in Oregon has much to do with the sun.

[09:08] <gaal> nice reaction to Greenwich chauvinism, I thought

[09:08] <TimToady> Maybe those buildings are really rain generators, and the Japanese were just giving the sun a washdown in the o-furo.

[09:09] <TimToady> would be just like 'em to want to clean up the sun a bit...

[09:10] <webmind> well I bit it is kinda dirty with all the dust that thing attracts

[09:10] <TimToady> I really shouldn't be on the net when my brain is in sideways.

[09:10] <TimToady> But then I'd never be on the net...

[09:10] <gaal> what was that with the ping pong table in Arbel...

[09:11] <TimToady> I believe it was a ping pong ball.

[09:11] <gaal> and a dodgy net

[09:11] <TimToady> It got better.

[09:12] <gaal> to bad the balls didn't

[09:12] <TimToady> I'm, um, not touching that one...

[09:13] <gaal> grrr, that was not meant as a double entendre, but there's unexpected use for everything I guess

[09:13] <gaal> maybe that was a ping pong ball and not the sun in that photo?

[09:13] <TimToady> A sideways brain has to be useful for something.  If you find out, let me know.

[09:14] <TimToady> You think *you* have an epistemic problem with terminals,..

[09:15] <gaal> Joyce had one too, he didn't know where to end his book so he made it cyclic

[09:15] <TimToady> prefer polycyclic aromatics myself...

[09:15] <rgs> riverrun ?

[09:17] <gaal> rgs: past Eve and Adam's

[09:18] <rgs> gaal: I vaguely remember some joyce-perl poetry by damian, but google doesn't seem to find it

[09:19] <rgs> well, it went off line.

[09:19] <gaal> http://sozluk.sourtimes.org/show.asp?t=a+litter # not perl nor poetry but wonderful

[09:19] <rgs> http://use.perl.org/comments.pl?sid=5198&op=&threshold=0&commentsort=0&mode=thread&cid=8108

[09:19] <TimToady> What, the ping pong ball?

[09:19] *** spinclad joined
[09:21] <gaal> (Vladimir Dixon)++ # top hit for "literary" and "funny" as far as I'm concerned

[09:21] *** nnunley joined
[09:45] *** ghenry joined
[09:55] *** KingDiamond joined
[10:07] *** elmex joined
[10:13] *** kane_ joined
[10:29] *** lypanov left
[10:34] *** avar joined
[10:36] *** KingDiamond joined
[10:39] *** dduncan left
[10:53] <svnbot6> r9832 | clkao++ | Use tie for AV aliasing.

[11:02] *** chris2 joined
[11:13] *** iblechbot joined
[11:37] *** GeJ joined
[11:44] *** b_jonas joined
[12:07] *** kolibrie joined
[12:24] *** mcummings joined
[12:24] *** Limbic_Region joined
[12:25] <mcummings> this is probably a silly question (even if this is the right channel) - but what provides the quantum library? (noticed it in make test output for parrot)

[12:29] <Gothmog_> all(), any() and one(), iirc

[12:30] <Gothmog_> http://search.cpan.org/~lembark/Quantum-Superpositions-2.02/lib/Quantum/Superpositions.pm

[12:33] <Limbic_Region> Gothmog - you forgot none()

[12:34] <Limbic_Region> in p5, they are called Quantum::Superpositions - in perl6 they are just called junctions

[12:34] <Limbic_Region> well, and they are part of the core

[12:35] * Limbic_Region is curios to know if all of the decisions regarding junctions have been worked out - like to thread or not to thread

[12:38] * Limbic_Region checks the mass of recent S changes to see if all( any() eq any() ); is going to DWIM out of the box

[12:43] <mcummings> Gothmog_: thanks :)

[12:43] * mcummings reads pod - crazy

[13:04] *** chris2_ joined
[13:08] *** GeJ joined
[13:12] *** chris2_ is now known as chris2

[13:16] *** xinming joined
[13:24] *** chris2_ joined
[13:26] *** chris2_ is now known as chris2

[13:27] *** Qiang joined
[13:33] *** PerlJam joined
[13:47] *** sockstat joined
[14:04] *** iblechbot joined
[14:05] *** xinming joined
[14:08] *** FurnaceBoy joined
[14:14] *** n00dlez joined
[14:15] *** n00dlez left
[14:17] <meppl> gugu

[14:22] *** ko1_away is now known as ko1_

[14:27] *** KingDiamond joined
[14:27] *** hexmode joined
[14:33] *** avar_ joined
[14:33] *** avar_ is now known as avarab

[14:37] *** vel joined
[14:42] *** ko1_ is now known as ko1_away

[15:11] <gaal> audreyt: moose?

[15:42] *** xinming joined
[15:43] *** rashakil joined
[15:55] *** justatheory joined
[15:56] *** xinming joined
[16:13] *** xinming joined
[16:16] *** fglock joined
[16:30] *** feng joined
[16:40] *** xinming joined
[17:03] <fglock> audreyt, pmichaud: ping

[17:08] <Limbic_Region> can someone confirm that the question I asked today about Junctions made it to the list

[17:09] <Limbic_Region> I haven't received the echo back from the list yet and I can't remember if that is normal behavior or not

[17:09] <obra> It did

[17:10] <Limbic_Region> thanks - so then should I have recieved a copy back or not?

[17:10] <Limbic_Region> I would think so

[17:11] *** eric256 joined
[17:11] *** eric256 left
[17:30] <nothing_pasta> Limbic_Region: you should have

[17:33] <Limbic_Region> thanks nothing_pasta - not sure I should blame gmail or not

[17:35] <nothing_pasta> always blame something you have no control over first

[17:35] <nothing_pasta> it makes the most sense

[17:35] <TimToady> Limbic_Region: just posted an attempted answer, though my eyes are still crossed this morning...

[17:38] *** ruoso joined
[17:39] *** ruz joined
[17:39] *** ruz_ joined
[17:44] *** ruz joined
[17:49] *** renormalist joined
[17:52] *** _bernhard joined
[17:52] *** siosiosios joined
[17:54] *** colares joined
[17:58] <Limbic_Region> TimToady - I just received it - thanks

[18:01] *** KingDiamond joined
[18:01] <Limbic_Region> TimToady - I was already to pounce on the fact that you had explained away all my concerns by saying "use Sets instead" with "But WTF do I go looking for Sets definition" until I got to the end where you adeptly note that they haven't made their way into the Synopses yet

[18:03] <Limbic_Region> I will just respond with "Ok, so when Sets do make it in to the synopses, which ones do I look at" for the benefit of everyone reading along at home

[18:03] <Limbic_Region> thanks - and good to know that it will work out of the box even if junctions aren't the tool to use

[18:07] *** awwaiid joined
[18:14] *** stennie joined
[18:16] <theorbtwo> Allo, awwaiid!

[18:19] <TimToady> Limbic_Region: yes, though at least the synopses mention the existence of Sets. It's possible that we could unify normal sets with all() junctions, if not the other kinds of junction.

[18:19] <awwaiid> hiya theorbtwo

[18:29] <TimToady> occurs to me that the problem with the "set of all sets that do not contain themselves" is that the closure defining it is not memoizable, so it's not an immutable value.

[18:30] <TimToady> off to $work &

[18:36] <webmind> hmm, aren't there any weekly summaries of perl6 lists anymor e?

[18:36] <webmind> anymore

[18:37] <theorbtwo> Not on perl.com.

[18:37] <theorbtwo> use.perl.org links to them, IIRC.

[18:37] <webmind> I don't see them in my mail archive anymore

[18:40] <Juerd> The last summary was >2weeks ago

[18:41] *** fglock left
[18:41] *** fglock joined
[18:42] <fglock> docs/journal/ is the place to contribute summaries...

[18:43] *** zgh joined
[18:44] *** GeJ joined
[18:48] <avar> Juerd: hi

[18:48] <theorbtwo> Blink... we have a (+) operator now?

[18:49] <theorbtwo> Oh, it's a Set operator.

[18:49] <awwaiid> thats what you get for blinking

[18:50] <PerlJam> Anyone not reading p6l would be in the dark about (+), (*), etc.

[18:50] * theorbtwo ponders starting to read p6l again.

[18:50] <theorbtwo> At present I look at it from time to time.

[18:51] <PerlJam> (those people, too, would be trying to fit round junctions into square Sets)

[18:51] <avar> PerlJam: Some middle between * and [*] ?;)

[18:52] <PerlJam> Hmm.  We've got *, (*), and [*], but where is {*} ?

[18:52] <PerlJam> or <*> ?

[18:53] <avar> Regarding Larry's reply to curly quotes, Perl currently knows how to match some stuff, like q{} q<>, q[] etc. Will it know how to match fancy quotes (outside latin1) even though they wouldn't be defined in any other way in the default language

[18:54] <avar> say q„hello, world“

[18:54] <avar> of course that might introduce ambiguities;)

[18:54] <PerlJam> avar: define your own cicumfix:<,, ">

[18:54] <PerlJam> er, circumfix

[18:55] <avar> PerlJam: Thought so

[18:56] <Juerd> avar: Hello.

[18:57] *** colares joined
[18:59] <avar> Juerd: I have time to talk about mw now;)

[18:59] <avar> Juerd: who had the insane idea of rewriting it?;)

[19:01] <Juerd> avar: But I do not :)

[19:01] <Juerd> avar: I'm at the amsterdam.pm meeting now

[19:01] <avar> Oh joy;)

[19:02] <PerlJam> mw?

[19:03] <Juerd> MediaWiki

[19:04] <PerlJam> oh

[19:05] <Limbic_Region> fglock ping

[19:05] <Limbic_Region> or anyone familiar with sets

[19:06] <Limbic_Region> What is the appropriate way to do all( any() eq any() ) using Sets?

[19:06] <Limbic_Region> IOW - find the intersection of 2 sets

[19:06] <fglock> Limbic_Region: pong

[19:07] <fglock> thinking...

[19:07] <fglock> any() eq any() is intersection - it gives which elements are common

[19:08] <wolverian> Limbic_Region, @set1 ∩  @set2, I assume

[19:08] <fglock> all() is the set itself, unless you have some special context

[19:08] <Limbic_Region> wolverian - the non-unicode version please

[19:08] <Limbic_Region> fglock - my example was of junctions

[19:09] <Limbic_Region> so let me start of by saying this....

[19:09] <Limbic_Region> ok - so he went *poof*

[19:09] <wolverian> Limbic_Region, are you asking the official story or for a suggestion? (I) maybe? the reversed U is kind of hard to map to ASCII..

[19:09] <Limbic_Region> perhaps he will backlog

[19:09] <wolverian> ruby uses %, I think

[19:09] <wolverian> unless that's symmetric difference .. I forget.

[19:09] *** fglock joined
[19:09] <theorbtwo> (^) and (v) ?

[19:10] <Limbic_Region> If I start out with @foo = 'a' .. 'z'; and @bar = <a b c 1 2 3>;

[19:10] <Limbic_Region> what do I do to find the intersection of @foo and @bar

[19:11] <fglock> I had a problem with unicode - I'm on cgi-irc (fixed)

[19:11] <Limbic_Region> ok - me too

[19:12] <fglock> the intersection is (a,b,c), and 'all' is (a,b,c) too

[19:12] <Limbic_Region> ok - that was like speaking greek to me

[19:13] <Limbic_Region> let me start with my example as though I were posting it as a SoPW and you tell me what I need to know (assuming I know nothing of set theory or junctions or anything p6 related)

[19:13] <fglock> ok

[19:14] <Limbic_Region> Hi, I am trying to find the what elements 2 arrays have in common.  How do I do that?  For instance, my @foo = 'a' .. 'z'; my @bar = <a b c 1 2 3>; # should produce a, b, c

[19:14] <Limbic_Region> fwiw - the bad phrasing of the question wasn't intentional but it truly fits my intentions

[19:14] *** stennie joined
[19:15] <fglock> you mean sets, right? imagine the items are hash keys

[19:15] <Limbic_Region> no, I don't mean sets

[19:15] <PerlJam> or don't imagine it, but make it so  :)

[19:16] <fglock> so that you can say %foo{'a'}.exists

[19:16] <Limbic_Region> you need to tell me that I should be using sets and then give me the syntax

[19:16] <fglock> arrays don't support that

[19:16] <Limbic_Region> ok - good

[19:16] <fglock> oh, you should be using sets instead

[19:17] <Limbic_Region> how do I do that?

[19:17] <fglock> $foo = Set.new( 'a'..'z'); $bar = Set.new( <a b c 1 2 3 > );

[19:18] <Limbic_Region> and to find the elements that are in common?

[19:18] <Limbic_Region> oh and if element isn't the right word since Arrays aren't Sets - what is?

[19:18] <fglock> then $common_elements = $foo.intersection( $bar );  - creates a new set with all common elements - it's automatic

[19:18] <Limbic_Region> . o O ( enjoys being a newbie f*&ckwit)

[19:18] <Limbic_Region> oh cool

[19:18] <fglock> arrays are a special kind of set

[19:18] <Limbic_Region> but I really wanted arrays

[19:18] <fglock> if you think hash, an array is

[19:18] <Limbic_Region> is there anyway I can do it using arrays

[19:19] <Limbic_Region> or perhaps can I treat a set as though it were an array?

[19:19] <fglock> { 0 => 'a', 1 => 'b', .... }

[19:19] <Limbic_Region> like for $set1 -> $_ { ... }

[19:20] <fglock> you can use an iterator - but a set is potentially infinite, so you have to be careful

[19:20] <Limbic_Region> fglock - thanks, we can drop the role playing now

[19:20] <awwaiid> multiset

[19:20] <fglock> I hope it helps

[19:20] <Limbic_Region> I just think that I illustrate the need for some clear documentation on Sets in the Synopses

[19:21] <Limbic_Region> fglock - well, yeah.  I mean I understand a bit of set theory so I knew how to do it mathematically speaking.  You helped more in the syntax arena.

[19:22] <PerlJam> L~R, are you attempting to draft such documentation?

[19:22] <Limbic_Region> no PerlJam - I was attempting to find out if I was being an idiot

[19:23] *** pmurias joined
[19:23] <pmurias> hi all

[19:23] <PerlJam> Well ... now that you have an idea about your status as an idiot, could you draft the Set documentation and send it to p6l?  ;-)

[19:23] <Limbic_Region> So for the p6 FAQ we can have at least 3 responses:  Here's how you do it using sets, here is the old p5 way of doing it, and here is how you can do it using a custom infix myeq and junctions

[19:24] <fglock> pmurias: hi

[19:24] <Limbic_Region> PerlJam - fglock and I would have to go back to role playing quite a bit more

[19:24] <Limbic_Region> I could easily ask the leading questions but I don't have the answers

[19:26] <fglock> There are many kinds of specialized sets, just like there are many kinds of other data structures - I think P6 set is just an API for many possible implementations

[19:27] <PerlJam> fglock: does that mean that you're volunteering to draft the Set docs?  ;)

[19:27] <Limbic_Region> well - sets are an amazing powerful thing to be part of the p6 core

[19:27] <pmurias> Limic_Region: don't hashes fill the role of sets?

[19:27] <Limbic_Region> they just aren't - er - common knowledge

[19:28] <PerlJam> L~R: indeed.

[19:28] *** FurnaceBoy is now known as FB|afk

[19:28] <Limbic_Region> pmurias - do they?

[19:28] <fglock> PerlJam: maybe

[19:28] <Limbic_Region> pmurias - IOW, if you can do everything with a hash that you can do with a set - why add set feature

[19:29] <Limbic_Region> pmurias - taking the same FAQ I asked earlier further

[19:29] <Limbic_Region> imagine if the two arrays I wanted to find the intersection of had multiple instances of the same element and I wanted a 1 - 1

[19:30] <Limbic_Region> the old p5 approach using hashes breaks

[19:30] * Limbic_Region has to go to a $work meeting

[19:30] <PerlJam> fglock: the thing that I haven't thought about too much, but would like to know, is what Set ops we have and what they mean. (+) and (-) I understand, but what about (*) and (/)? What do they mean?

[19:30] <PerlJam> (or do they exist even?)

[19:30] <PerlJam> and (^) and (v) makes sense, but do they exist t oo.

[19:31] * PerlJam tries to install the ESP module so that he can read @Larry's mindspace

[19:31] <pmurias> i didn't quite Limbic_Region's last point

[19:32] <fglock> see the ext/Set implementation - they have all kinds of symbols (one sec)

[19:32] <pmurias> i always thought sets can have one instance of each parameter

[19:32] <PerlJam> heh ... I didn't even think to look if there was already an implementation

[19:32] <zgh> pmurias: i think a p5 hash-based implementation of sets would be limited to sets of strings

[19:33] <fglock> they use \ for difference, and * for intersection

[19:33] <PerlJam> pmurias: yes, but he was asking about intersection of arrays using Sets as the implemention.

[19:34] <fglock> '-' is difference too

[19:34] <PerlJam> pmurias: Imagine the answer to perlfaq4's "How do I compute the difference of two arrays?  How do I compute the intersection of two arrays?"

[19:35] <fglock> of course p6 arrays could support difference() and intersection()

[19:36] <pmurias> PerlJam: i understand why hashes  fail here, but i think i'll propably have to read p6l to understand how set help

[19:36] <pmurias> :)

[19:36] <PerlJam> pmurias: I think the answer is that they don't help much :-)

[19:37] <PerlJam> Using either Set or hash you'll have to transform the array into a different representation and then back again.

[19:38] <fglock> p6 arrays and hashes are much closer to sets than the p5 version - support for infinite lists, keys can be objects...

[19:38] <theorbtwo> How is having object keys set-like?

[19:38] <theorbtwo> Sets don't have keys at all, or even indecies.

[19:38] *** itz joined
[19:39] <zgh> theorbtwo: if you have objects as hash keys you basically have a set, ignoring the values

[19:39] <PerlJam> theorbtwo: I think he means that sets hold "things" (objects) where they used to typically just hold numerics

[19:39] <fglock> hashes are special sets in which the elements can have a value attached

[19:40] <fglock> arrays are special sets which contain 0,1,2,3... and the elements can have a value attached

[19:40] *** xinming joined
[19:41] * PerlJam sets his Set upon the television set.

[19:42] <fglock> television sets don't support union or intersection very well - it's a destructive operation

[19:43] <PerlJam> fglock: but the fireworks are fun!

[19:43] <PerlJam> imploding tubes are always a little scary and nicely destructive (for the fun aspect)

[19:44] <fglock> bbiab

[19:46] <pmurias> PerlJam: the firefox you can shoot stuff with are the best

[19:46] <pmurias> s/firefox/fireworks/ #fireworks are a lot better

[19:55] <pmurias> will (+),(-) works on hashes?

[20:02] *** Fizzler joined
[20:06] <TimToady> pmurias: (+) etc work on anything that has the "as(Set)" coercion defined.

[20:07] <TimToady> hashes could certainly coerce their .keys to a set.

[20:07] <arcady> how does one define coercions?

[20:07] <TimToady> we just had a discussion of that in p6l

[20:08] <wolverian> I think the infix as syntax is rather cumbersome and gets in the way of what is really meant.

[20:08] <pmurias> TimToady: thanks, is the resault coerced back?

[20:08] <pmurias> s/resault/result

[20:08] <TimToady> not by the set operator.

[20:09] <wolverian> I don't have a much better alternative, besides just 'coerce Int { ... };' or so. hrm.

[20:09] <TimToady> An assignment could certainly coerce back though.

[20:09] <TimToady> So (+)= might coerce to set and back.

[20:09] <wolverian> as Int { ... } # Hm. trait?

[20:10] <TimToady> on the other hand, what values do you add for new hash keys?

[20:11] <fglock> would @a.intersection( @b ) autocoerce @a, @b to call Set.intersection?

[20:11] <TimToady> no traits necessary, just "multi method as (Set)" or some such.

[20:11] <TimToady> fglock: probably not.

[20:12] <TimToady> such external usages should generally be done with MMD, not SMD.

[20:12] <wolverian> TimToady, yeah. I just don't like it very much. I'd like it to say 'coerce' somewhere in the declaration. oh well, I can live with it :)

[20:12] <TimToady> but it's a fuzzy boundary, for sure.

[20:13] <clkao> when a array is passed in to a subroutine, it's by default readonly right?  but it seems t/operators/binding/array.t says it can be modified even without "is rw"

[20:14] <clkao> that is, foo (@arr), rather than foo(Array $arr)

[20:14] <nothing_pasta> big question:

[20:14] <wolverian> (in any case, just 'as' is very very huffmanised.. scarily so)

[20:14] <nothing_pasta> are most of the "builtins" in Perl 6's std lib (Set, String, Moose) roles or classes?

[20:14] <clkao> or do we consider it as normal method calls to @arr hence not an actual modification?

[20:14] <nothing_pasta> i think one of the yuckiest things in haskell is that 'map' and 'fmap' are two different functions

[20:15] <pmurias> fglock: you looked for a parser engine to replace PCR, using PGE might be an option (if we can live with a parrot dependency)

[20:17] <pmurias> (assuming you don't hate pir, as I did untill recently)

[20:17] <TimToady> sorry, in a meeting, can't pay proper attention right now...

[20:19] *** lisppaste3 joined
[20:23] <Fizzler> I've written thousands of lines of Perl code and I don't understand a thing that's been said here in the last 20 minutes.

[20:24] *** FurnaceBoy_ joined
[20:27] *** SamB joined
[20:30] <TimToady> Fizzler: not much point in talking about the things we already understand here...

[20:32] <Fizzler> The depressing thing is that I don't understand most things in #Perl either, but nobody's paying me to yet, so it's not so bad.

[20:35] <buu> Yay!

[20:35] <pmurias> Fizzler: somethings only make sense to the people developing the parts being discussed, others i don't understand as well

[20:37] <pmurias> Fizzler: feel free to ask if you don't understand something (i have never been bashed for clearly stupid questions, so i don't think you will)

[20:37] <Fizzler> Look at buu being happy that Wassercrats is back.

[20:37] <Fizzler> pmurias: I get by well enough with what little Perl I know. Someone once said I program Perl like it's Assembly.

[20:37] <nothing_pasta> wassercrats is back?

[20:37] <nothing_pasta> to pm?

[20:37] <nothing_pasta> crap

[20:38] <nothing_pasta> it always causes people to waste a ton of time

[20:38] <wolverian> so? it's fun

[20:38] <Fizzler> No, here. I'm Wassercrats, AKA Barry, but I switched IRC clients back and forth and now I'm known by a little-used name until I change it.

[20:38] <wolverian> oh no.

[20:39] <nothing_pasta> oi vey

[20:40] <Fizzler> There were other channels I had to visit, and I decided to see what's going on here.

[20:41] <Fizzler> BUU is one of my biggest foes, and I couldn't help exposing myself.

[20:41] <buu> =[

[20:41] <buu> I am friendly.

[20:41] <buu> Fizzler: I just want you to know, "Reset.pm" has changed my life.

[20:42] <nothing_pasta> this like a troll fest

[20:42] * nothing_pasta goes to watch TV or something

[20:44] <pmurias> "In roaring he shall rise and on the surface die"

[20:46] <Fizzler> buu: My proudest PM accomplishment was tricking someone into reposting VarStructor (or whatever it was called) after I deleted it, proving someone found it useful. PM's backup of it wasn't available. But I've accomplished so much there, it's hard to say.

[20:59] <pmurias> Fizzler:did you actually believe your "boycot O'Railly hacking books" opinion, or was it a provocation?

[20:59] <svnbot6> r9833 | clkao++ | translate all array tests.

[21:01] <Fizzler> I read a review of the book I referred to that made it sound especially cracker-oriented, even for that kind of book. Books like that should be titled or contain content that attracts crackers, if possible.

[21:02] <Fizzler> And I'm no fan of post-copyrighting a technology book. The timeliness of the information is important, and I need to know the real date of publication.

[21:02] <Fizzler> (snouldn't)

[21:03] <Fizzler> s/n/h/

[21:07] <Fizzler> Boycot O'Reilly wasn't a troll, though I doubted most people would like that post or want to boycot them. I feel the same way now about related issues. See my recent post at http://www.mattcutts.com/blog/miscellaneous-monday-march-27-2006/#comment-19469 about Google.

[21:07] <pmurias> as an owner of Hacking Linux Exposed(which can be used as a cracking cookbook) and not commiting any computer crimes, i disagree but consider the matter to obvious to discuss

[21:09] *** fglock_ joined
[21:10] <pmurias> i was just amazed at people responding to something which i considered a blunt provocation (i wasn't a monk than, and only seen the archived message later)

[21:10] *** FurnaceBoy_ is now known as FurnaceBoy

[21:11] <Fizzler> The word "hacking" attracts crackers. "Security" is a better word, and it should be taught without providing exploit code if possible, and it should be taught in school, not by off the shelf books, if possible.

[21:12] <fglock_> pmurias: re PGE it's an option, but currently it would not be practical - but it would be nice to have parrot embedding in p5 work

[21:14] <pmurias> Fizzler: the disscussion dosn't really belong here, we can continue it on a diffrent chanel & date if you are bored enough

[21:15] <Fizzler> Nah, I have to go eat. I'll probably be "Barry" the next time I'm chatting.

[21:16] <pmurias> fglock: got to sleep soon

[21:17] *** Fizzler left
[21:17] <PerlJam> fglock_: Just rewrite PGE in perl5  :-)

[21:18] <pmurias> fglock: i could help you embedd parrot,but i'm not familiar with perl guts

[21:18] <pmurias> PerlJam: maybe automatic translation would work?

[21:18] <pmurias> anyway "The Kraken sleepeth: faintest sunlights flee"

[21:18] <pmurias> good night

[21:19] <fglock_> PerlJam: see pX/tewk - it's a rewrite of PGE in p5 (and ruby)

[21:20] <fglock_> if someone would try to finish it and keep updated, it would be nice

[21:20] <fglock_> I haven't seen tewk here for some time

[21:21] <PerlJam> tewk looks only vaguely familiar.

[21:21] * PerlJam looks at the source

[21:23] *** KingDiamond joined
[21:32] <PerlJam> Hmm.  autotranslation from parrot->p5 would be ...  interesting.

[21:34] *** mcummings left
[21:36] <fglock_> PerlJam: it is not hard to write a Parrot grammar - the actual compiler/runtime would be a bit difficult

[21:36] <fglock_> but not impossible

[21:52] *** colares joined
[22:01] *** Barry joined
[22:04] *** Barry left
[22:13] *** p5evalbot joined
[22:13] *** KingDiamond joined
[22:19] *** fglock left
[22:19] *** fglock_ left
[22:35] <svnbot6> r9834 | clkao++ | positional args can be bound with name as well.

[22:38] *** kane_ joined
[23:15] <svnbot6> r9835 | clkao++ | tests for readonly subroutine params.

[23:31] <tewk> pX/tewk was a direct translation attempt.

[23:33] <tewk> I've got some new code that is a direct translation attempt from pugs/misc/pX/Common/Pugs-Compiler-Rule to Ruby,  I should probably check that in too.

[23:34] *** FurnaceBoy is now known as FB|afk

[23:44] *** wolverian_ joined
[23:53] *** hcarty joined
[23:53] *** hcarty left
[23:54] *** colares joined
