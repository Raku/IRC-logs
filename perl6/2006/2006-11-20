[00:02] *** kcwu joined
[00:19] *** phpError joined
[00:20] *** nicodaemos joined
[00:28] *** nekokak joined
[00:44] *** cjeris left
[00:57] *** awwaiid joined
[00:58] *** rhizo left
[00:59] *** thepler joined
[01:03] *** lyokato joined
[01:10] *** nekokak_ joined
[01:19] *** smokemachine joined
[01:21] *** dmq joined
[01:35] *** nipotaway is now known as nipotan

[01:45] *** sri_ joined
[01:49] *** phpError joined
[01:57] *** rodi joined
[02:00] *** sweinig|bbl is now known as sweinig

[02:08] *** theorb joined
[02:09] *** spoop joined
[02:18] *** H0LE joined
[02:19] *** AzureStone joined
[02:26] *** b00t joined
[02:28] *** greentea joined
[02:34] *** anatolyv joined
[02:38] *** greentea left
[03:17] *** phpError joined
[03:21] *** H0LE left
[03:38] *** sweinig is now known as sweinig|zZz

[03:39] *** lyokato joined
[03:46] *** codermattie joined
[04:04] *** phpError joined
[04:33] *** root4o joined
[04:55] *** GabrielVieira joined
[04:59] *** mjk joined
[05:13] *** ashleyb joined
[05:16] *** scsibug_ is now known as scsibug

[05:41] *** nperez joined
[05:45] *** nothingmuch joined
[06:10] *** nekokak joined
[06:20] *** phpError joined
[06:22] *** phpError joined
[06:23] *** BooK joined
[06:28] *** kanru joined
[06:42] *** awwaiid joined
[06:56] *** Aankh|Clone joined
[07:06] *** phpError joined
[07:16] *** root4o left
[07:22] *** Aankh|Clone is now known as Aankhen``

[07:30] *** marmic joined
[07:36] *** iblechbot joined
[08:02] *** jiing joined
[08:03] *** reg_ini joined
[08:08] *** phpError joined
[08:18] *** mdiep_ joined
[08:26] *** nicodaemos joined
[08:37] *** Yappo is now known as drawnboy_______9

[08:50] *** spinclad joined
[08:52] *** drawnboy_______9 is now known as Yappo

[08:53] *** H0LE joined
[08:57] *** elmex joined
[09:00] *** H0LE left
[09:13] *** kane-xs joined
[09:15] *** greentea joined
[09:24] *** ruoso joined
[09:42] *** greentea left
[10:15] *** andara joined
[10:43] *** ludan joined
[10:44] <ludan> hi

[10:55] *** nothingmuch joined
[11:02] *** wilx joined
[11:04] * smash_ good morning

[11:05] *** ruoso joined
[11:07] *** fglock joined
[11:08] <fglock> pmurias: re: 'does util/build-perl5.sh use the old v6.pm or MiniPerl6 itself?'

[11:08] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:08] <fglock> util/build-perl5.sh is pre-bootstrap - it used v6.pm

[11:08] <fglock> MP6 needs a new build script

[11:12] <nothingmuch> moooooo

[11:15] <svnbot6> r14791 | fglock++ | MP6 - util/build-perl5.sh renamed to build-with-v6.sh

[11:19] <fglock> nothingmuch: hey

[11:19] <svnbot6> r14792 | fglock++ | MP6 - new build script "util/build-perl5.sh"

[11:19] <svnbot6> r14792 | fglock++ | - recompiles MP6 using itself

[11:20] *** xinming_ joined
[11:20] <fglock> diff -u -r lib5 lib5-new == no differences :)

[11:22] <nothingmuch> hola fglock

[11:23] <fglock> nothingmuch: mp6 needs a MO :)

[11:24] <nothingmuch> =)

[11:24] <nothingmuch> what is it's target language right now?

[11:25] <fglock> nothingmuch: Perl5, Haskell, Parrot, and Javascript for now

[11:25] <nothingmuch> i meant the major one

[11:26] <fglock> mp6 is written in mp6, so mp6 is the major one

[11:26] <nothingmuch> it doesn't compile mp6 to mp6 though, does it?

[11:27] <nothingmuch> i mean you run mp6 through itself, and make a $x_lang "executable"

[11:27] <nothingmuch> which is the best supported $x_lang?

[11:27] <fglock> currently only perl5 is implemented

[11:27] <nothingmuch> okies =)

[11:27] <nothingmuch> so, that helps a lot

[11:27] <nothingmuch> there are two ways that you can plug MO

[11:27] <fglock> I'm working on c++ too

[11:28] <nothingmuch> 1) push it all down to the runtime

[11:28] <nothingmuch> by simply translating the metaclass mappings

[11:28] <nothingmuch> and implementing a metaclass in the target language's MO impl

[11:28] <nothingmuch> or (more robust, more work):

[11:28] <nothingmuch> 2) implement at least MO::Comple::* in MiniPerl6

[11:29] <nothingmuch> and do the metamodel calcs in the compiler

[11:29] <nothingmuch> emitting much more simplified responder interface calls

[11:29] <nothingmuch> that's actually the original intent

[11:29] <nothingmuch> but we might be able to get working code sooner by short cutting for now

[11:30] <fglock> I like the idea of MO::Comple::* in MiniPerl6 - this make it easier to port to other backends

[11:30] <nothingmuch> yes

[11:31] <nothingmuch> this is definitely the correct way to implement it

[11:31] <fglock> sorry - bbiab

[11:35] <fglock> nothingmuch is MO-perl5 published?

[11:45] <audreyt> fglock: darcs get http://nothingmuch.woobling.org/MO

[11:45] <lambdabot> audreyt: You have 3 new messages. '/msg lambdabot @messages' to read them.

[11:45] <lambdabot> Title: Index of /MO

[11:46] <fglock> audreyt: k

[11:49] <fglock> audreyt: re the 'Tree' example in http://svn.pugscode.org/pugs/v6/v6-MiniPerl6/miniperl6-spec.pod

[11:49] <lambdabot> http://tinyurl.com/yzs3h5

[11:49] <fglock> would it be: ($left, $right) = ($top.left, $top.right)

[11:50] <audreyt> sure

[11:50] <audreyt> er wait

[11:50] <audreyt> you are compiling mp6 to mp6?

[11:50] <audreyt> then it's :=, not =

[11:50] <fglock> right

[11:51] <audreyt> otherwise yes.

[11:51] <audreyt> and if there's not $top

[11:51] <audreyt> but simply

[11:51] <audreyt> (Tree ($left, $right))

[11:51] <audreyt> then you need to gensym a $temp to hold it.

[11:52] <fglock> is 'Tree (:$left, :$right)' better to write?

[11:52] <fglock>  :$var is now supported

[11:53] <audreyt> well I think it's a punning in spec

[11:53] <fglock> actually, '::Tree( :$left, :$right )'

[11:53] <audreyt> I think either will do

[11:54] <audreyt> but I support that proposition that :$left looks and works better.

[11:54] <fglock> so the exp grammar can be reused for sig - does it make sense?

[11:55] <audreyt> that is the expectation

[11:55] <audreyt> as sig is simply lhs of :=

[11:55] <audreyt> and in bind we already handle the lhs-side compilation

[11:55] <audreyt> for non-Control nodes

[11:57] <fglock> audreyt: did you try out the native MP6 compiler?

[11:57] <audreyt> no, sorry

[11:58] <audreyt> I'm too busy to proc a certain event

[11:58] <audreyt> that will hopefully stabilize tomorrow

[11:58] <fglock> audreyt: 'sh hello.sh' will do

[11:59] <audreyt> T:~/work/pugs/v6/v6-MiniPerl6 audreyt$ sh hello.sh

[11:59] <audreyt> hello, World

[11:59] <audreyt> that... was easy

[11:59] <audreyt> nice :)

[12:02] <fglock> is this valid p6? 'my ::Tree $top (:$left, :$right);'

[12:03] <nothingmuch> audreyt: did you see the .pdf?

[12:04] <audreyt> fglock: yes.

[12:04] <audreyt> nothingmuch: no.

[12:06] *** frankg joined
[12:08] *** TimToady joined
[12:09] * dmq waves hello

[12:12] <nothingmuch> ola!

[12:13] <dmq> wassup

[12:16] <dmq> @messages

[12:16] <lambdabot> You don't have any new messages.

[12:16] <masak> is pugscode down? I can't svn-up it at the moment

[12:18] <fglock> dmq: hi

[12:19] <audreyt> masak: it worksforme

[12:20] <dmq> how are tings?

[12:22] <dmq> i was doing battle with perl5 and how it handles \G and /g the past few days. Was wondering what perl6 does in that direction.

[12:25] <dmq> like could you say: $str='aabbccddeeff'; pos($str)=5; /(..)\G(..)/ and print "Before pos: $1 After pos: $2";

[12:25] <dmq> and if thats ok, can you do something like /xy*\G(..)/?

[12:26] <broquaint> That would be ace.

[12:26] <dmq> the latter would be forbidden by me. :-)

[12:27] <dmq> the former would fine.

[12:28] <broquaint> I like the idea of being able to use \G arbitrarily.

[12:28] *** Psyche^ joined
[12:28] <dmq> the only problem with that is you run into the problem of infinite loops, and serious performance issues.

[12:28] <broquaint> Details, details.

[12:29] <dmq> Yeah, well, ive been dealing with them

[12:29] <dmq> :-)

[12:29] <broquaint> Ah :)

[12:30] <dmq> like for instance its probably not cool to have pos($str)=2; @list=m/(..)\G/g; infinite loop until it sucks all available memory.

[12:31] <broquaint> Crappy non-turing-machine computers.

[12:31] <dmq> that was a doozy to figure out.

[12:35] *** kanru joined
[12:35] <svnbot6> r14793 | fglock++ | MP6 - updated miniperl6-spec 'coercion-form binding'

[12:37] *** Psyche^ is now known as Patterner

[12:37] <fglock> dmq: that would be ' <after (..)> (..) ' - but I'm not sure if <after> can make captures

[12:37] *** dduncan left
[12:42] *** mako132_ joined
[12:47] *** capixaba joined
[12:50] *** sweinig|zZz is now known as sweinig

[12:54] <dmq> after?

[12:54] <dmq> hmm ok.

[12:55] * dmq idly wonders how the english would take it if the germans invented a programming language where 'anus' was a keyword

[12:57] * rgs back

[12:57] *** lisppaste3 joined
[13:01] *** HiTech69 joined
[13:04] *** mako132_ joined
[13:08] <svnbot6> r14794 | fglock++ | * added v6/v6-MiniPerl6-MO

[13:11] *** Limbic_Region joined
[13:21] *** orafu joined
[13:25] *** iblechbot joined
[13:35] <svnbot6> r14795 | fglock++ | MP6 - added 'print', '!=', '=='

[13:35] <svnbot6> r14796 | fglock++ | MP6 - added 'bind' tests

[13:36] *** GnuVince joined
[13:38] <svnbot6> r14797 | fglock++ | MP6 - updated p5 image

[13:41] *** Reyben joined
[13:46] <Reyben> I open a file with something like 'open FH, "<", $filename;'. Is it possible to determine at a later time whether the FH is valid, i.e. whether the file could be opened?

[13:46] <svnbot6> r14798 | fglock++ | MP6 - more bind tests

[13:49] <Limbic_Region> Reyben - this is #perl6 which is to discuss and develop the perl 6 language.  Please try #perl

[13:50] <Limbic_Region> Reyben - in general, you should always check the return code of open my $rc = open(my $fh, '<', $file);

[13:50] <Limbic_Region> Reyben - then later on you can check $rc

[13:50] <Limbic_Region> Reyben - notice I used a lexical filehandle and a 3arg open, you should too

[13:50] <Limbic_Region> Reyben - now good luck and please check out #perl

[13:55] <Reyben> Thanks. Strangely, a #perl channel doesn't currently appear on my room list, though.

[13:56] *** Reyben left
[14:02] *** nipotan is now known as nipotaway

[14:02] *** thepler joined
[14:13] *** reg_ini joined
[14:24] *** bonesss joined
[14:27] *** drbean joined
[14:36] *** ofer1 joined
[14:42] *** [particle] joined
[14:42] *** rodi joined
[15:05] <fglock> particle: ping

[15:08] *** cjeris joined
[15:12] *** bonesss joined
[15:14] <masak> audreyt: ah, worksforme too now

[15:14] <[particle]> fglock: pong

[15:15] <fglock> particle: do you have some time to guide me through parrot? I'm working on mp6-on-parrot

[15:15] <[particle]> sure

[15:16] * [particle] updates his working copy

[15:16] <fglock> is parrot 0.4.1 usable? that's what I have here

[15:16] <[particle]> urk

[15:16] <[particle]> that's almost a year old

[15:16] <[particle]> 0.4.7 was just released. there should be a debian package if you need it

[15:17] <fglock> do you know if is there a package for osx?

[15:17] <[particle]> iirc 0.4.1 won't have a reentrant parser

[15:20] <[particle]> fglock: can you join #parrot? there's a bunch of excited folks looking to help :)

[15:20] <[particle]> (irc.perl.org)

[15:21] *** orafu joined
[15:21] <fglock> particle: ok

[15:24] *** rlb3 joined
[15:26] *** hexmode joined
[15:28] <fglock> pmichaud: this is the emitter that I need to translate: http://svn.pugscode.org/pugs/v6/v6-MiniPerl6/lib/MiniPerl6/Perl5/Emitter.pm

[15:28] <lambdabot> http://tinyurl.com/y3uxdp

[15:33] *** fglock left
[15:43] *** vel joined
[15:51] *** kanru joined
[15:56] *** norageek joined
[16:29] <svnbot6> r14799 | kudra++ | Summary

[16:44] <svnbot6> r14800 | fglock++ | MP6 - added initial Parrot emitter

[16:45] *** chris2 joined
[16:47] *** justatheory joined
[16:48] *** mr_ank joined
[16:48] *** mairc joined
[16:48] *** mairc left
[16:49] <TimToady> @tell dmq \G is discussed at S05:1043

[16:49] <lambdabot> Consider it noted.

[16:51] *** theorbtwo joined
[16:52] <TimToady> @tell dmq S05 can be found at http://dev.perl.org/perl6/doc/design/syn/S05.html or at https://svn.perl.org/perl6/doc/trunk/design/syn/S05.pod

[16:52] <lambdabot> Consider it noted.

[16:53] <TimToady> @tell dmq for the original rationale of the regex redesign please read http://dev.perl.org/perl6/doc/design/apo/A05.html

[16:53] <lambdabot> Consider it noted.

[16:55] <TimToady> @tell dmq many of the questions you are asking here are already answered in S05, so it seems someone somewhere has neglected to point you at S05.  Sorry...

[16:55] <svnbot6> r14801 | fglock++ | MP6 - added 'mp6-parrot' script

[16:55] <lambdabot> Consider it noted.

[17:00] *** thepler joined
[17:08] *** andara left
[17:13] <svnbot6> r14802 | fglock++ | MP6 - parrot emitter - added int, num, bool

[17:22] *** studentC joined
[17:22] <svnbot6> r14803 | fglock++ | MP6 - added undef, string to parrot emitter

[17:22] <studentC> hi everybody

[17:22] <studentC> do you know how to modify @INC?

[17:22] <studentC> I've tried to do: use lib /usr/local/pf/lib

[17:23] <studentC> and in another way using BEGIN{...}

[17:25] <studentC> could you help me please

[17:25] <svnbot6> r14804 | fglock++ | MP6 - added lib5/MiniPerl6/Parrot

[17:25] <TreyHarris> studentC: are you actually using "use lib /usr/local/pf/lib"?

[17:26] <TreyHarris> You need to quote the argument.  like "use lib </usr/local/pf/lib>"

[17:26] <TreyHarris> and of course, a semicolon after

[17:26] *** PerlJam joined
[17:27] <studentC> thanks

[17:28] <studentC> i'm a beginner ;)

[17:28] *** sweinig is now known as sweinig|bbl

[17:28] <TreyHarris> no problem, you're welcome

[17:31] *** bcorn joined
[17:34] *** wilx` joined
[17:35] <svnbot6> r14805 | fglock++ | MP6 - commented out some unused nodes in emitter

[17:39] *** ashleyb joined
[17:41] *** hexmode joined
[17:44] *** drbean joined
[17:48] *** ashleyb joined
[17:53] *** bcorn joined
[17:53] *** sweinig|bbl is now known as sweinig

[17:58] *** hexmode` joined
[18:09] *** norageek joined
[18:12] <GnuVince> .seen obra

[18:12] <GnuVince> @seen obra

[18:12] <lambdabot> obra is in #perl6. I don't know when obra last spoke.

[18:13] <obra> yes?

[18:18] *** ashleyb joined
[18:26] *** justatheory joined
[18:33] *** thepler_ joined
[18:50] *** larsen_ joined
[19:02] <svnbot6> r14806 | fglock++ | MP6 - parrot output starts to make sense

[19:02] <svnbot6> r14806 | fglock++ |   echo 'class x { say "hi" } ' | perl mp6-parrot.pl

[19:13] <obra> seen GnuVince

[19:13] <jabbot> obra: GnuVince was seen 1 hours 1 minutes 35 seconds ago

[19:16] <GnuVince> obra: Hi.  Earlier this afternoon, I got a 500 error for hiveminder.com, but it was fixed within a couple of minutes.  Just wanted to tell you in case.

[19:16] *** sri_ joined
[19:17] <obra> GnuVince: thanks. the server flipped out

[19:18] <GnuVince> obra: okay.  Keep up the nice work with Hiveminder, it's extremely nice :)

[19:18] <obra> thanks :)

[19:18] <obra> we've got some things we're really, really excited about coming

[19:18] <svnbot6> r14807 | particle++ | MP6 - quote the namespace

[19:20] *** buetow joined
[19:23] <GnuVince> obra: cool.  I'm still hoping to play with Jifty, but I've been having problems instaling it from CPAN :(

[19:23] <[particle]> jifty head doesn't like win32

[19:23] <[particle]> jifty cpan should work fine

[19:23] <[particle]> gnuvince: make sure you're using the tcool repo

[19:24] <obra> GnuVince: you're on win32?

[19:24] <GnuVince> Linux.

[19:24] <[particle]> oh, wait, i'm assuming here...

[19:24] <GnuVince> Not sure what the tcool repo is...

[19:24] <[particle]> sorry, wrong guy :)

[19:24] *** dmq joined
[19:24] * Limbic_Region is on Win32 [particle] but isn't interested in jifty

[19:24] <[particle]> gnuvince: ignore that tcool bit. that's for win32 folks

[19:24] <Limbic_Region> hey dmq - TimToady left you some @tell messages

[19:24] <obra> GnuVince: what's biting you?

[19:25] <dmq> thanks l_r. :-)

[19:25] <lambdabot> dmq: You have 4 new messages. '/msg lambdabot @messages' to read them.

[19:25] *** Belaf joined
[19:25] <GnuVince> obra: can't remember right now, I'm not on that machine.  If memory serves right, cpan couldn't find the ~/.cpan/Build/Jifty-0.xxxx/ folder.

[19:26] <GnuVince> If there's a mailing list/forum for Jifty, I'll post the entire thing there.

[19:26] <obra> there's [email@hidden.address]
[19:30] <GnuVince> obra: okay, I'll post there tonight.  I really want to play with Jifty.

[19:30] <GnuVince> I makes me think of Rails meets Seaside

[19:31] <obra> aw thanks

[19:32] *** wilx` is now known as wilx

[19:33] * dmq wonders if he should thank lambdabot or not.

[19:33] * dmq figures why not.

[19:34] *** araujo joined
[19:37] <Limbic_Region> salutations studentC

[19:38] <Limbic_Region> oh wow, I didn't realize I was scrolled back so far

[19:38] <GnuVince> Limbic_Region: :)

[19:39] <Limbic_Region> I was reading the msgs TimToady left for dmq in case I might also be interested and I was.  It has been a looooong time since I read A05

[19:41] <dmq> Well i can definitely agree that the best thing to do about \G is to get rid of it.

[19:41] *** ludan joined
[19:41] <ludan> ola

[19:42] *** Odin- joined
[19:45] <dmq> Er, which is not to imply i disagree with any of it.

[19:45] <svnbot6> r14808 | fglock++ | MP6-parrot - implemented Array

[19:58] *** polettix joined
[19:58] *** penk joined
[20:18] *** mdiep joined
[20:50] *** prism joined
[20:52] *** anatolyv joined
[20:54] <anatolyv> ?eval sub foo { my $x = 5; sub bar { $x; } }  bar()

[20:54] *** evalbot_r14790 is now known as evalbot_r14808

[20:54] <evalbot_r14808> \undef

[20:54] <anatolyv> anyone knows if this should be allowed at all?

[20:54] *** bernhard joined
[20:59] <wolverian> looks fine. what do you think is wrong about it?

[21:06] *** jferrero joined
[21:10] *** larsen__ joined
[21:16] *** sweinig is now known as sweinig|away

[21:27] *** phpError joined
[21:37] <svnbot6> r14809 | particle++ | MP6 - ws cleanup

[21:47] <anatolyv> wolverian: it's not clear which $x bar() should refer to.

[21:48] <wolverian> anatolyv, there is only one.

[21:48] <wolverian> (that I see.)

[21:50] <anatolyv> wolverian: in runtime, there may be many copies of $x. for example, imagine foo calls itself recursively with depth 100, every copy has its own $x.

[21:50] <anatolyv> wolverian: by calling into inside bar() we don't give it any information on which runtime pad of foo() it should use to access $x.

[21:50] <wolverian> it works in perl5! that's all I know! :)

[21:51] <anatolyv> no it doesn't, that is, it doesn't return 5

[21:53] <[particle]> sure, because you can't put a sub within a sub. but within a block, it works

[21:53] <wolverian> well, right. it doesn't share it.

[21:54] *** hexmode joined
[21:55] <anatolyv> how is a block different?

[21:55] <anatolyv> ?eval { my $x = 5; sub bar { $x; } }  bar()

[21:55] *** evalbot_r14808 is now known as evalbot_r14809

[21:55] <evalbot_r14809> Error: ␤Unexpected "bar"␤expecting operator

[21:55] <[particle]> ?eval { my $x = 5; sub bar { $x } }; bar()

[21:55] <evalbot_r14809> \5

[21:56] <[particle]> semicolon

[21:57] <anatolyv> ?eval sub foo { my $x = 5; sub bar { $x } }; bar()

[21:57] <evalbot_r14809> \undef

[21:57] <wolverian> heh

[21:57] <anatolyv> ?eval sub foo { my $x = 5; sub bar { "Can I put a sub within a sub?" } }; bar()

[21:57] <evalbot_r14809> "Can I put a sub within a sub?"

[21:58] <anatolyv> I can, that doesn't seem to be the issue.

[21:59] <anatolyv> ?eval my $y = { my $x = 5; sub bar { $x } }; bar()

[21:59] <evalbot_r14809> \undef

[22:00] *** justatheory joined
[22:25] *** sweinig|away is now known as sweinig

[22:27] *** thepler joined
[22:38] *** gnuvince joined
[22:39] *** trym_ joined
[22:46] *** mr_ank joined
[22:52] <svnbot6> r14810 | particle++ | MP6 - beginnings of object initialization

[22:54] *** ruz joined
[22:57] <svnbot6> r14811 | particle++ | MP6 (parrot) - use ResizablePMCArray, not PerlArray

[23:02] *** Debolaz2 joined
[23:05] *** norageek joined
[23:05] *** cj_ joined
[23:05] *** ruz joined
[23:05] *** mr_ank joined
[23:05] *** justatheory joined
[23:05] *** jferrero joined
[23:05] *** anatolyv joined
[23:05] *** mdiep joined
[23:05] *** Belaf joined
[23:05] *** dmq joined
[23:05] *** buetow joined
[23:05] *** bcorn joined
[23:05] *** wilx joined
[23:05] *** PerlJam joined
[23:05] *** revdiablo joined
[23:05] *** miyagawa_ joined
[23:05] *** SCalimlim joined
[23:05] *** jabbot joined
[23:05] *** Debolaz joined
[23:05] *** cj joined
[23:06] *** anatolyv joined
[23:06] *** neonoen joined
[23:06] *** revdiablo joined
[23:06] *** buetow joined
[23:06] *** mr_ank joined
[23:07] *** bcorn joined
[23:07] *** PerlJam joined
[23:31] *** cj_ is now known as cj

[23:31] *** justatheory_ joined
[23:35] *** Limbic_Region joined
[23:49] *** dduncan joined
