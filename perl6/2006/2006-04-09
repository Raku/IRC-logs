[00:32] *** weinig joined
[00:54] *** FurnaceBoy joined
[01:01] *** justatheory joined
[01:12] *** justatheory joined
[01:22] *** p5evalbot joined
[01:52] *** frederico joined
[02:34] *** Limbic_Region joined
[02:34] *** p5evalbot joined
[02:41] *** huhlig joined
[02:49] *** DesreveR joined
[02:50] *** weinig is now known as weinig|out

[02:54] *** justatheory joined
[03:01] *** itz joined
[03:11] *** qu1j0t3 joined
[03:20] *** knewt joined
[03:39] *** huhlig joined
[03:39] *** p5evalbot joined
[03:39] *** weinig|out joined
[03:39] *** q[uri]_ joined
[03:39] *** Khisanth joined
[03:39] *** Odin- joined
[03:39] *** xinming joined
[03:39] *** pmurias_ joined
[03:39] *** f0rth joined
[03:39] *** avar joined
[03:39] *** lisppaste3 joined
[03:39] *** PerlJam joined
[03:39] *** kattana_ joined
[03:39] *** ko1_away joined
[03:39] *** evalbot_9865 joined
[03:39] *** broquaint joined
[03:39] *** amv joined
[03:39] *** chip joined
[03:39] *** webmind joined
[03:39] *** wolverian joined
[03:39] *** xX[ReP]Xx joined
[03:39] *** chihchun joined
[03:39] *** merlyn joined
[03:39] *** buu joined
[03:39] *** LeTo joined
[03:39] *** Juerd joined
[03:39] *** audreyt joined
[03:39] *** tewk joined
[03:39] *** Steve_p joined
[03:39] *** pasteling joined
[03:39] *** coumbes joined
[03:42] *** xern joined
[04:20] *** revdiablo joined
[04:52] *** justatheory joined
[05:04] <audreyt> so Perl 6 has the long dot to form a long tail

[05:04] * audreyt ponders how to implement it

[05:05] <Juerd> audreyt: Change the \. rule to \.|\.\.\.\s+\.

[05:05] <Juerd> audreyt: Or am I thinking in too simple terms?

[05:06] <Juerd> It's 7am here and I'm still awake, so that'd be very much possible

[05:06] <audreyt> ... ?

[05:07] <audreyt> $x.   .foo;

[05:07] <audreyt> is what the spec now says

[05:07] <Juerd> Oh, right, it was \.+

[05:07] <Juerd> So $x... .foo and $x. .foo would work

[05:07] <Juerd> Trailing ... is nicer at the end of a line, because a single . tends to not be visible enough

[05:07] <azuroth> humm

[05:07] <Juerd> $foo...

[05:07] <Juerd> .bar()

[05:07] <azuroth> it _can_ have comments inside them though

[05:08] <Juerd> azuroth: Huh? That's wacky.

[05:08] *** Khisanth joined
[05:08] <azuroth> it just says "generally whitespace." which I don't think is very... sane

[05:08] <Juerd> Or do you mean normal #.*$ comments?

[05:08] <azuroth> no, I mean $x. comment .foo();

[05:08] <Juerd> You don't mean $foo. this is a comment .bar, I hope

[05:08] <Juerd> What the.

[05:08] <audreyt> I don't see "... .foo" forms anywhere in the spec.

[05:08] <Juerd> That's wacky

[05:08] <Juerd> $foo... # comment

[05:08] <Juerd> .bar

[05:09] <Juerd> would make sense

[05:09] <audreyt> "a single dot" is what S02 now says

[05:09] <audreyt> $x. .moose

[05:09] <Juerd> Oh, I see the new torrent of ugly ideas in p6l now

[05:09] <Juerd> .# foo #. is, ew.

[05:09] <audreyt> S02 has

[05:09] <audreyt> $foo .#(...) moose

[05:09] <azuroth> wouldn't it be $a.## foo #.foo()?

[05:09] <audreyt> er

[05:10] <audreyt> $foo .#(...) .moose

[05:10] <Juerd> I thought larry settled on \.|\.+<ws>\., but apparently not.

[05:10] <Juerd> audreyt: That's disgusting...

[05:10] <Juerd> Oh well, I'll worry about this after sleeping

[05:11] <audreyt> g'nite

[05:12] <Juerd> Just for the record: I think that when arbitrary constraints are too limiting to make something work, we should not only consider other (uglier) syntax, but consider also changing the constraints a little, and perhaps touch other parts of the language.

[05:12] <Khisanth> a comment method?

[05:12] <audreyt> Duly recorded.

[05:13] <Juerd> nite

[05:13] <Juerd> afk

[05:13] <Juerd> (Well, morning, really :P)

[05:15] *** knewt joined
[05:15] <arcady> it's really a quotelike noop

[05:15] <azuroth> one thing I wonder: is it really necessary to have delimited comments?

[05:16] <arcady> all the cool languages have them

[05:16] <arcady> or is the uncool ones?

[05:18] <azuroth> maybe it's just that the examples in the synopsis make me think it's useless. I think \.\s+\. is fine, but \.\s[^\.]+\. is pretty funky.

[05:45] <kattana_> ..late but it would be nice if you could write that without the brackets ^\. or ^. or /.

[05:53] <svnbot6> r9866 | audreyt++ | * Makefile.PL: Correctly skip the .xs perl5/ modules from

[05:53] <svnbot6> r9866 | audreyt++ |   "make" sequence.

[05:56] <svnbot6> r9867 | audreyt++ | * Support for multiline comments (currently only bracket as delimiters):

[05:56] <svnbot6> r9867 | audreyt++ |     say .#[

[05:56] <svnbot6> r9867 | audreyt++ |         this is

[05:56] <svnbot6> r9867 | audreyt++ |         multiline

[05:56] <svnbot6> r9867 | audreyt++ |         comment

[05:56] <svnbot6> r9867 | audreyt++ |     ] "Hello";

[05:57] * audreyt paises parsec fo builtin support (that patch was just two lines)

[05:57] <audreyt> now to figure out balancing delim

[06:01] <azuroth> macro goatlike($a) is parsed/\.#<balance>/ {}; rule balance { \< <balance>* \> | \( <balance>* \) | .* } # maybe? :x

[06:03] <azuroth> (of course w/ .* done more sensibly)

[06:04] <azuroth> oh duh, never mind.

[06:06] <audreyt> ...implemented

[06:08] <azuroth> :-)

[06:09] <gaal> heh.

[06:09] <audreyt> gugod++ # excellent delivery of a takahashi talk

[06:09] <svnbot6> r9868 | audreyt++ | * Lexer: Handle arbitrarily nested comment intoduces.

[06:10] <audreyt> > file.txt find . -name '.....' ....

[06:10] <audreyt> never knew that redirection can be prefix

[06:10] <audreyt> that will keep my left key from being worn out

[06:20] *** nothing_pasta joined
[06:44] *** xern is now known as henearkrxern

[06:58] *** integral joined
[07:03] <gaal> audreyt: it also decreases wear on the characters 'c', 'a', and 't'.

[07:04] * gaal notices the word 'shift' was implicit in audreyt's remark and wonders if it was, uh, reduced

[07:24] <nothing_pasta> yay! my computer is ready for pickup

[07:44] *** bsb joined
[08:02] *** KingDiamond joined
[08:11] *** xX[ReP]Xx is now known as rep

[08:12] *** rep is now known as reppie

[08:12] *** reppie is now known as reffie

[08:12] *** reffie is now known as xX[ReP]Xx

[08:31] *** wilx joined
[08:37] *** KingDiamond joined
[08:46] *** ghenry joined
[09:04] *** q[uri] joined
[09:07] *** chris2 joined
[09:20] *** xinming joined
[09:29] *** bsb_ joined
[09:29] *** bsb_ left
[09:31] *** david_ joined
[09:52] *** KingDiamond joined
[10:06] <meppl> guten morgen

[10:08] <azuroth> good mutant

[10:20] * nothing_pasta wonders which mutants are cooler

[10:20] <nothing_pasta> xmen-esque or the teenage nija turtle variety

[10:20] <nothing_pasta> *ninja

[10:20] <nothing_pasta> i mean, obviously ninjas must count for something

[10:20] <nothing_pasta> but ninjas are so cool because they're silent and deadly and stuff

[10:20] <nothing_pasta> and those turtles are pretty lame as far as style goes

[10:21] <nothing_pasta> what with the shouting and the dumb costumes and stuff

[10:21] <nothing_pasta> otoh the xmen types don't even pretend to be ninjas

[10:22] <nothing_pasta> i personally don't like pretence, so I think i'll go with the xmen mutants

[10:44] *** elmex joined
[10:50] <azuroth> but the turtles can /paint/ too

[10:56] <nothing_pasta> azuroth: that's only if they secretly understand LISP with a different syntax

[10:58] <azuroth> haha.

[11:10] <cognominal> newyorker++

[11:11] <cognominal> oops

[11:11] <azuroth> ...

[11:41] *** bsb joined
[11:50] <gaal> nothing_pasta: also say "found: {whatever grep ... }"

[11:50] * gaal is reminded of @{[]} in p5

[11:51] <nothing_pasta> gaal: ?

[11:51] <nothing_pasta> gaal: wrt the mail?

[11:52] <nothing_pasta> see, "whatever" is the worst bareword we can use for this =)

[11:52] <nothing_pasta> but yeah

[11:52] <nothing_pasta> we need something like the goatse operator

[11:52] <nothing_pasta> maybe *:

[11:52] <gaal> "beh"

[11:52] <azuroth> goatse operator...?

[11:53] <gaal> azuroth: $count = () = m//

[11:53] <gaal> please do not follow up on the etymology of that

[11:54] <gaal> azuroth: "I want your unspecial scalar cast", or, the length of what you'd return in list context

[11:55] <azuroth> hmm, interesting

[11:59] <nothing_pasta> =()= is more ilke it =)

[12:10] *** david__ joined
[12:13] <gaal> nothing_pasta: yesbutitdoesn'tmatterthatmuchdoesit?

[12:25] *** larsen joined
[13:21] *** elmex joined
[13:39] *** david_ joined
[13:45] *** lichtkind joined
[13:45] <lichtkind> hello monks please tell me how i force the int context

[13:46] <lichtkind> and wheres the difference

[13:50] <avar> int()

[13:51] <avar> gaal: I like writing it as "=()="

[13:51] <avar> closer to its etymological roots;)

[13:53] <lichtkind> but on the op level no difference?

[13:53] <lichtkind> thx

[13:59] *** rindolf joined
[13:59] <rindolf> Hi all!

[13:59] <rindolf> TimToady: here?

[14:02] <lichtkind> could me please somebody answer my question ?

[14:02] <lichtkind> hi rindolf

[14:07] <gaal> lichtkind: afaik there isn't an "int context". but there is numerical context; you force it with prefix +

[14:07] <gaal> rindolf: you pang? (the other day)

[14:08] <lichtkind> gaal yes that i know but in the ram book they write also about a Numeric context , is it gone?

[14:10] <gaal> like I said, numeric[al] context with +

[14:10] <gaal> ?eval +"this is a number"

[14:10] *** evalbot_9865 is now known as evalbot_9868

[14:10] <evalbot_9868> 0.0

[14:10] <gaal> ?eval +"42 is the answer"

[14:10] <evalbot_9868> 42.0

[14:13] <avar> gaal: The pseudoop to force int is int()

[14:13] <lichtkind> ?eval 1.1 +< 1

[14:13] <avar> ?eval int("42 is the answer")

[14:13] <evalbot_9868> 2

[14:14] <evalbot_9868> 42

[14:14] <gaal> pseudoop? that looks like a function to me

[14:14] <lichtkind> no that was valid

[14:14] <lichtkind> is this bot on pugs?

[14:14] <avar> yeah, very strong pugs

[14:14] <lichtkind> cool a bit slow but very cool

[14:15] <avar> gaal: I meant it's listed in the synopsis as the stuff to get int just like + gets num and ~ get str

[14:15] <lichtkind> i know

[14:15] <gaal> oh? cool, I didn't know that, thanks.

[14:15] <lichtkind> sorry

[14:15] <lichtkind> im writing tutorial

[14:15] <lichtkind> the only thing im argue with is this context

[14:16] <lichtkind> there is nothuing about anywhere

[14:16] <lichtkind> it seems that numerix context is forced by [+-*/%]

[14:16] <lichtkind> or such

[14:17] <lichtkind> so you also know nothing special about it ?

[14:19] <rindolf> gaal: yes

[14:19] <rindolf> gaal: happy Passover!

[14:20] <gaal> rindolf: uh, thanks

[14:21] <lichtkind> ?eval 3.3 + 3

[14:21] <evalbot_9868> 63/10

[14:21] <xinming> ...

[14:21] <lichtkind> strange

[14:22] <avar> what? That's perfectly valid)

[14:22] <gaal> lichtkind: that's a Rat (rational)

[14:22] <avar> evalbot_9868: sprintf "%f", 3.3+3

[14:22] <avar> arg

[14:22] <avar> ?eval sprintf "%f", 3.3+3

[14:22] <evalbot_9868> \"6.3"

[14:23] <avar> ?eval: "Three point three plus three is {3.3 + 3}"

[14:23] <avar> ?eval "Three point three plus three is {3.3 + 3}"

[14:23] <evalbot_9868> Error:  unexpected ":" expecting program

[14:23] <evalbot_9868> "Three point three plus three is 6.3"

[14:23] <avar> why is it so horridly slow?

[14:24] <gaal> unniced ghc on feather maybe?

[14:24] * gaal looks

[14:26] <gaal> no obvious thing that isn't nice, but there is a pugs that looks busy

[14:33] <gaal> ah, it's a smoke run, which explains why it isn't one long-lived pugs

[14:45] <Juerd> I'm not very happy with the darcs on feather. It feels like a terrible waste of CPU cycles. It's niced heavily, but I can't but think it impacts performance anyway.

[14:58] *** kanru joined
[15:02] *** nothingmuch joined
[15:04] *** ruoso joined
[15:06] *** Southen_ joined
[15:48] <Ontolog> Is it done yet?

[16:18] *** justatheory joined
[16:35] *** Khisanth joined
[16:42] *** Trojan_Horse joined
[16:43] <Trojan_Horse> hi to all

[16:45] <Trojan_Horse> m totally new to perl though hav a gud programming background............... can anybody suggest me an exhaustive tutorial on perl dat starts frm scratch for a newbee like me

[16:48] <Gothmog_> learn.perl.org

[16:49] <Gothmog_> But that's about Perl5, not Perl6.

[16:56] <Trojan_Horse> okey

[16:56] *** shamu joined
[16:56] <Trojan_Horse> so wat abt perl6

[16:59] <shamu> I don't suppose anyone's on who can edit the perl6 docs?

[17:00] *** kane_ joined
[17:00] <shamu> or answer a question about them

[17:08] <Toaster> shamu: ask anyway - i'm sure people are around, just lurking

[17:09] <Toaster> only (@larry, $audrey, @few_others) have svn access to update the docs, afaik

[17:09] <Toaster> (but then again, i'm just a kitchen appliance)

[22:05] *** ilogger2 joined
[22:32] *** sandrina_l joined
[22:39] *** shamu joined
[22:44] *** shamu joined
[22:49] <svnbot6> r9872 | fglock++ | PC-Tokenizer - added 'term'; all specification is done in plain p6 rules, with hash dispatch

[22:51] *** mako132_ joined
[23:07] *** dduncan joined
[23:13] *** justatheory joined
[23:27] *** rashakil joined
[23:32] *** Quell joined
[23:32] *** jdrago joined
[23:43] <jdrago> I have a couple questions about perl6 if anyone has a sec

[23:44] <jdrago> specifically about Pugs

[23:44] <ayrnieu> ask them.

[23:44] <jdrago> Is there some kind of roadmap available online that shows when certain features will be implemented?

[23:45] <jdrago> I'm wondering about type-checking

[23:45] <jdrago> and threading

[23:45] <jdrago> and delegatiopn

[23:45] <jdrago> I don't know Haskell but if there's anything I could do to contribute, that would be good too

[23:46] <shamu> are those things fully designed yet?

[23:47] *** hlen joined
[23:47] <shamu> (i.e., what the functionality and interface will be)?

[23:47] <jdrago> the tests exist, and pugs doesn't throw errors when parsing the syntax, but it didn't seem to work on Windows

[23:48] <jdrago> (I'm refering to delegation)

[23:48] <jdrago> as far as threading, I don't know if threading has been worked out from a design perspective yet

[23:49] <shamu> yeah, you got me ... I have a lot of trouble understanding the language-design-speak on the summary lists, and even have a bit of trouble making my way through the exegeses and synopses

[23:50] <jdrago> I see here ( http://www.codecomments.com/archive416-2006-1-749292.html ) that threading had not been completely worked out as of Jan 2006

[23:57] <jdrago> I suppose I'll have to fdo some searching under the name "Dan Sugalski" +threading

[23:59] *** FurnaceBoy_ joined
[23:59] *** justatheory joined
