[00:31] *** jisom joined
[00:37] *** grayson joined
[00:40] *** Sandrina joined
[00:40] *** Sandrina is now known as sandrina_l

[01:02] *** joepurl joined
[01:07] *** knewt joined
[01:07] *** nothingmuch joined
[01:12] <Kattana> "Perl6: Like Perl, but after major body-alteration surgery, just to make you happy. Perl6's body certainly looks younger and firmer, if you can overlook the frankensteinian scar tissue. Moreover, there are certain... enhancements. All of perl6's joints bend both ways; all of perl6's body parts are fully reconfigurable any way you like them. If your friends could see what you do with Perl6, they'd learn more about your taste than yo

[01:13] <avar> Kattana: got cut off

[01:13] <nothingmuch> that's kind of sick

[01:14] <nothingmuch> someone with joints that can go both ways

[01:14] * nothingmuch pushes the image out of his head before sleep

[01:14] <Kattana> pleasent dreams nothingmuch

[01:14] <jisom> throw in the Frankenstein's monster image into the mix

[01:14] <nothingmuch> thanks

[01:14] <jisom> no problem

[01:38] *** xern joined
[01:38] *** Supaplex joined
[01:42] *** stevan joined
[01:43] <stevan> (scrap your boilerplate)++ # really cool stuff, and I am only on page 3

[01:43] <obra> Getting Real?

[01:44] <stevan> 2 step recursive traversals 

[01:44] <stevan> type safe casts,..

[01:44] <stevan> all sortsa cool stuff

[01:44] <obra> ?

[01:45] <stevan> its hard to explain, I expect that I only barely grok it myself 

[01:45] <stevan> its a Simon Peyton Jones paper :P

[01:47] <stevan> http://www.cs.vu.nl/boilerplate/#papers

[01:47] <stevan> I am just reading the first one at this point

[01:47] <obra> Oh! it's not 37signals new book

[01:48] <stevan> oh no :)

[01:48] <stevan> I didnt know they had a book, let alone a new one

[01:48] <obra> they have two

[01:48] <obra> the new one is on "getting real"

[01:50] <stevan> ah

[01:51] <stevan> "Discover the smarter, faster, and easier way to build a successful web app." 

[01:51] <stevan> give us $19 and we will tell you

[01:51] <stevan> :P

[01:51] <stevan> what! no guinsu knife set included?

[01:52] <obra> "It's called rails"

[01:53] <stevan> :)

[01:53] *** Khisanth joined
[01:54] <stevan> Ruby on Rails, it slices it dices, is even cuts juliane fries!

[01:54] <Khisanth> bleh

[02:11] *** handon joined
[02:20] *** vel joined
[02:22] *** amnesiac joined
[02:39] *** mauke_ joined
[02:58] *** mauke_ is now known as mauke

[03:26] *** justatheory joined
[04:00] *** revdiablo joined
[04:29] *** szbalint joined
[04:32] *** beppu_ is now known as beppu

[04:47] *** f0rth joined
[05:57] *** K joined
[06:22] *** jp-autark joined
[06:23] <ayrnieu> ?eval sub foo { 'hello'.say }; sub bar { foo; 'world'.say }; bar; &foo := { 'goodbye'.say }; bar

[06:23] <evalbot_9251> OUTPUT[hello world goodbye world ] bool::true 

[06:25] <azuroth> nifty

[06:26] <jisom> the question is, does it do runtime checking for unsafe commands....

[06:27] <azuroth> as in, sub foo(Carrot $a) {..}; &foo := sub (Animal $a) { ...}; type checking?

[06:28] <jisom> as in the "rm -rf /" type

[06:28] <azuroth> ohh, right

[06:28] <azuroth> pretty sure it does

[06:28] <ayrnieu> wait, what are we talking about?

[06:29] <jisom> evalbot

[06:29] <azuroth> doing an "eval `rm -rf /`"

[06:31] <ayrnieu> ?eval (open "/etc/motd", :r).readline

[06:31] <evalbot_9251> Error: No such method in class IO: "&readline" 

[06:40] *** Alias_ joined
[06:46] *** beppu joined
[06:48] *** beppu joined
[06:51] *** huhlig joined
[06:59] *** fandango joined
[07:03] *** Draconit joined
[07:04] *** beppu joined
[07:15] *** jisom joined
[07:20] <huhlig> is there a good site to learn perl6 yet?

[07:22] <revdiablo> huhlig: Well, you can read the specs: http://dev.perl.org/perl6/doc/synopsis.html

[07:22] <revdiablo> huhlig: Keep in mind, it's all still a work in progress

[07:22] <ayrnieu> huhlig - pugs also comes with examples and tests.

[07:23] <huhlig> when are they expecting some form of solidification

[07:23] <revdiablo> When it's ready

[07:23] <huhlig> heh

[07:33] *** Draconit_ joined
[07:39] <buu> CHRISTMAS

[07:39] <buu> Solidification by christmas!

[07:39] <buu> I love that joke.

[07:45] *** lao joined
[07:47] *** gabor529 joined
[07:48] *** Aankhen`` joined
[07:58] *** handon joined
[08:06] *** ghenry joined
[08:08] *** orafu joined
[08:10] *** marmic joined
[08:26] *** bsb joined
[08:32] *** typonaise joined
[08:34] *** handon joined
[08:36] *** _freenode joined
[08:37] <gaal> putter: oh, go ahead and hack on Prelude.pm

[08:38] <gaal> the only thing is that currently, an installed pugs won't find a precompiled Prelude, probably

[08:38] <gaal> that's a simple matter of programming (and of some directory structure layout design) to fix

[08:39] <gaal> we don't inline the precompiled prelude bytecode inside the pugs executable, so there's need to tell pugs where to find it on the disk

[08:39] <gaal> currently there's one hardcoded location: in the source tree.

[08:41] <gaal> if there were an easy, nonhacky, portable way to inline stuff in the executable, the gzipped version of the bytecode (which we know how to handle) is just 42k

[08:43] <gaal> so all I was saying is that we should not release until we fix that

[08:43] <gaal> but that doesn't mean we can't also develop more P6 prims.

[08:45] *** gaal joined
[08:47] <pasteling> "ayrnieu" at 68.13.103.15 pasted "my rendition of $PUGS/examples/p6explain/p6explain" (19 lines, 480B) at http://sial.org/pbot/16122

[08:50] *** iblechbot joined
[08:56] <miyagawa> audreyt: ping

[09:04] *** handon joined
[09:15] *** clkao joined
[09:16] *** handon joined
[09:16] *** Aragone is now known as Arathorn

[09:33] <Alias_> miyagawa: She's still a bit thin on the ground

[09:34] <Arathorn> her wave function has yet to be collapsed

[09:34] <miyagawa> k

[09:37] *** lumi joined
[09:53] *** rindolf joined
[09:53] <rindolf> Hi all!

[09:53] <rindolf> How can I query CPAN for the list of distributions a certain CPAN id has?

[09:57] <ayrnieu> in CPAN shell?  "ls $author"

[10:00] *** elmex joined
[10:01] <Alias_> rindolf: A one off for just you, or in code?

[10:02] <Alias_> because if it's just you, y'know, search.cpan

[10:02] <rindolf> Alias_: in code. Programatically.

[10:02] *** Draconit_ joined
[10:02] <Alias_> Do you mind using CPANPLUS?

[10:02] <Alias_> It apparently has a much better API for doing that sort of thing

[10:06] <Alias_> Or so everyone I know that does that sort of thing says

[10:06] <Alias_> Personally, I want a SQLite DBIx::Class interface :)

[10:06] <Alias_> Like JSAN has

[10:07] *** nnunley joined
[10:19] *** rantanplan_ joined
[10:19] <rindolf> Alias_: I already whipped up a script using CPANPLUS. Sorry for bothering you.

[10:19] <rindolf> Let me nopaste it.

[10:19] <Alias_> ah, ok

[10:20] <pasteling> "rindolf" at 88.155.200.148 pasted "CPANPLUS script to return the distributions of an author." (12 lines, 321B) at http://sial.org/pbot/16123

[10:20] <rindolf> Alias_: http://sial.org/pbot/16123

[10:21] *** Gothmog_ joined
[10:25] *** szabgab joined
[10:25] <samhain1138> rindolf: you can expand Author, and $author->ls :)

[10:26] <samhain1138> something like: my ($author) = CPAN::Shell->expand('Author', $id);

[10:26] *** Gothmog_ joined
[10:26] <szabgab> when running pugs it says    "Loading Prelude... "  that takes nearly forever, maybe 5secs ? Can I get rid of that delay ?

[10:33] <rindolf> szabgab: hi!

[10:33] <jp-autark> isn't it supposed to read prelude.yaml?

[10:33] <jp-autark> PreludePC.yml even.

[10:34] <rindolf> szabgab: I sent you a patch to add some new authors and distributions to the Misc. Content Page on www.perl.org.il

[10:34] <szabgab> rindolf: thanks

[10:35] <rindolf> szabgab: you're welcome.

[10:35] <rindolf> I added Gaal and Yuval Kogman. 

[10:37] <Juerd> that takes nearly forever, maybe 5secs

[10:37] <Juerd> lol.

[10:40] <samhain1138> hehe :)

[10:47] *** Alias_ left
[10:51] *** rindolf left
[10:57] <Migo> szabgab: when I first ran "make unoptimized" and trivial "time ./pugs -Iext/Net-IRC/lib -MNet::IRC -e 1" it took 1 minute 40 seconds. Now it takes 33 seconds on my machine.

[11:01] <gaal> szabgab: what's your cwd when you run pugs?

[11:01] <szabgab> I compiled optimized - so I guess this should be faster - and I only wanted to run say "hello world"

[11:01] <szabgab> gaal: anything I use the symlink /usr/bin/perl6  pointing to pugs in my compilation directory

[11:02] <szabgab> gaal: it is much fatster if my cwd is the same where pugs resides...

[11:02] <gaal> right. it's a known issue: we don't look for the precompiled prelude in a system installation place

[11:03] <gaal> I was discussing it with putter eariler if you want to see the details

[11:03] <szabgab> gaal: no, I just want it to work fast :)

[11:03] <gaal> well, we want that too :)

[11:04] <Migo> "time ./pugs -e 'say <Hello, World!>'" is 3 seconds for me.

[11:04] <szabgab> real    0m2.242s

[11:04] <szabgab> the above for me

[11:05] <Migo> so, I guess, it is loading modules that takes huge time

[11:06] <szabgab> 2 sec is already reasonable for me

[11:06] <szabgab> for now

[11:07] <gaal> Migo, szabgab: these are known issues and we're still working to improve them.

[11:08] <szabgab> gaal: thanks

[11:09] <audreyt> rehi

[11:09] <audreyt> I _finally_ got network!

[11:09] <gaal> yay!

[11:09] <Juerd> Hi, audreyt 

[11:09] * audreyt suffers from massive withdrawal

[11:09] <Juerd> Welcome back :)

[11:09] <gaal> heard your stuff was mismoosed? :(

[11:09] <audreyt> my luggage has come back last night

[11:10] <audreyt> no net @ hotel, no net @ conf site (until now)

[11:10] <samhain1138> gaal: so why is it so much faster for me? real    0m0.252s?

[11:10] <gaal> samhain1138: (a) you are in the pugs build path (b) you made optimized (c) your machine is fast. :)

[11:10] <Migo> I would say, very fast :)

[11:11] <szabgab> he removed the sleep 2 from the code...

[11:11] <Migo> mine is 800MHz, 192Mb physical memory

[11:11] <samhain1138> (a) no, (b) just make -- is optimized the default? (c) I WISH! ;)

[11:11] <audreyt> optimized is default

[11:11] <samhain1138> ok

[11:11] <samhain1138> thanks :)

[11:12] <gaal> 192 is lower than I've ever tried, but migo may be able to get away with an optimized build too

[11:12] <gaal> if you set the heap size to about 150 in config.yml

[11:12] <gaal> run perl Makefile.PL again

[11:12] <Juerd> Migo: If you're upgrading anything, upgrade RAM. It's cheap and helps a lot.

[11:12] <Juerd> Migo: 512 MB costs around $50 if you look around a bit.

[11:13] <gaal> I'm curious if it works. (~200 worksforme)

[11:13] <gaal> Juerd: that sounds like a good price

[11:13] <Juerd> The hoersaal is too hot, outside it is too cold :|

[11:14] <Migo> gaal: yes it took 2 days to compile it optimized on Hackathon. Whenever network was lost, Pugs.AST.Internals and Pugs.Parser were recompiled again and again.

[11:14] <gaal> network!?

[11:15] <Migo> I compiled on my home machine, laptop had no haskel

[11:15] <gaal> anyway 2 days means your machine was thrashing. you really need to throttle GHC's ram usage

[11:15] <gaal> ah

[11:15] <Migo> better split them to smaller pieces :)

[11:15] <szabgab> Migo: at least you spend 2 days with useful work :)

[11:16] <gaal> Migo: commits welcome :)

[11:16] <gaal> but in fact that's exactly what lumi, audreyt, and integral were working on

[11:16] <gaal> among other things

[11:17] <Migo> gaal: I know. And it was my mistake not to use screen(1) in the first place.

[11:17] <integral> why did you need to compile it optimized?

[11:17] <gaal> also anatoly with the mad math skillz :)

[11:19] <Juerd> 12:18 < gaal> anyway 2 days means your machine was thrashing. you really need to throttle GHC's ram usage

[11:19] <Juerd> Yeah, I think it may be a good idea to disable swapping, if it's a home box or laptop, that may crash.

[11:20] <Migo> integral: it seems to be 2-3 times faster (30 seconds vus 90 seconds)

[11:20] *** Alias_ joined
[11:20] <Alias_> audreyt: ping?

[11:20] <audreyt> Alias_: pong

[11:20] <Alias_> joy!

[11:20] <integral> Migo: oh, you were doing lots of smoking?

[11:21] <Alias_> audreyt: OK, so I'm still working on making Bundle::CPAN sane on Win32

[11:21] <Migo> integral: no, just "-MSome::Module -e 1"

[11:21] <integral> oh!  a perl6 developer, excellent!

[11:21] <Alias_> audreyt: And next in my sights is Module::Signature, which is troublesome

[11:21] <audreyt> k

[11:21] <Alias_> audreyt: It seems to install  even without gpg or Crypt::OpenPGP

[11:21] <Alias_> When it shouldn't 

[11:22] <Alias_> And then on running complain that there's no gpg

[11:22] <Alias_> And occasionally freeze up the process in the process

[11:22] <Alias_> A bigger problem is that the bugs are somewhat nondeterministic

[11:23] <Alias_> But the big one is that Module::Signature shouldn't install on Win32 without either gpg or the OpenPGP feature enabled

[11:23] <Alias_> Can either 1) you fix it 2) Let me steal M:Sig

[11:24] <Alias_> (for a while)

[11:24] <audreyt> sure, you are now M::Sig comaint

[11:24] <Alias_> thanks

[11:25] <Alias_> Is it in SVN somewhere, or do I borg it to my SVN?

[11:25] <audreyt> borg it

[11:25] <Alias_> ok

[11:25] <audreyt> hm, or place it to modinstall/ ?

[11:25] <Alias_> You don't have a top-level somewhere inside that same area?

[11:26] <Alias_> ala http://svn.phase-n.com/svn/cpan/trunk/

[11:27] <audreyt> no... do whatever you'd like :)

[11:27] * audreyt is still backlogging

[11:27] <Alias_> ok

[11:27] <Alias_> I'll borg it for now

[11:27] <Alias_> I want to set up an orphanage some time soon anyway I think

[11:27] <Alias_> To let the collection of clueful people co-operatively maintain stuff like that

[11:29] <Alias_> Will Mod:Sig freak out if it isn't itself signed?

[11:30] <rafl> kane-xs: ping

[11:32] <miyagawa> audreyt: are you with Larry?

[11:32] <audreyt> miyagawa: no, we parted in .il a while ago

[11:32] <audreyt> Alias_: prolly not

[11:32] <miyagawa> k

[11:33] <miyagawa> audreyt: Matz will be in YAPC::Asia

[11:33] <miyagawa> and hackathon too

[11:33] <audreyt> oooooooh

[11:33] <audreyt> Sasada? Takahashi?

[11:34] <miyagawa> yeah Takahashi will speak at YAPC

[11:34] <miyagawa> not sure about Hackathon. I'll call him

[11:34] <miyagawa> I've never talked with Sasada before. Probably you want to mail them

[11:44] *** mj41_ joined
[11:47] <audreyt> okay, will do

[11:54] <audreyt> lunch, bbiab &

[11:56] *** salty-horse joined
[12:10] *** handon joined
[12:10] *** kane_ joined
[12:15] *** salty-horse left
[12:34] *** szabgab left
[12:35] *** salty-horse joined
[12:36] <salty-horse> hi. i was facinated by audreyt's style of presentation and failed to find much information about it. i started a wikipedia stub here: http://en.wikipedia.org/wiki/Takahashi_Style, and welcome everyone who's interested to contribute

[12:37] <Alias_> Takahashi Style? or Method?

[12:37] <wolverian> http://en.wikipedia.org/wiki/The_Takahashi_method

[12:37] <salty-horse> i'm not sure :) a redirect/rename is in order

[12:37] <salty-horse> ....

[12:38] <salty-horse> oops. http://en.wikipedia.org/wiki/Takahashi gave me nothing :(

[12:38] <wolverian> nod, I use http://en.wikipedia.org/wiki/Special:Search?search=%s

[12:38] <wolverian> (as a magic bookmark)

[12:39] <lypanov> salty-horse: http://www.presentationzen.com/

[12:39] <salty-horse> wolverian, me too :)

[12:39] <lypanov> salty-horse: (http://presentationzen.blogs.com/presentationzen/2005/09/living_large_ta.html)

[12:40] <salty-horse> lypanov, i linked to taht article in my now-defunct stub

[12:40] <lypanov> :)

[12:40] <lypanov> its an interesting blog

[12:43] <salty-horse> i updated http://en.wikipedia.org/wiki/Takahashi

[12:54] <stevan> miyagawa: when is the hackathon scheduled for?

[12:55] * stevan realllllllyyyy wants to go now 

[12:57] <Juerd> (Someone's using *MS Powerpoint*!)

[12:58] * stevan is suprised to find that plane/hotel rates are still reasonable

[12:59] * stevan ponders begging his $wife and $boss to let him go

[13:00] *** elmex joined
[13:00] <miyagawa> stevan: it's March 31 and April 1st.

[13:00] <miyagawa> the conference is March 29-30

[13:05] <rafl> Juerd: Who?

[13:06] <sahadev> coffee?

[13:06] <sahadev> sorry, wrong window

[13:06] <pasteling> "samhain1138" at 217.132.59.2 pasted "Problem compiling 6.2.11: no such key: 'rpath_blib'" (197 lines, 14.6K) at http://sial.org/pbot/16126

[13:07] <rafl> samhain1138: Embedded parrot?

[13:08] <Juerd> rafl: Someone who just tried the beamer in the break

[13:08] <rafl> Juerd: OK

[13:08] <rafl> WTF, then.

[13:09] *** chris2 joined
[13:09] <samhain1138> rafl: that's more-or-less on purpose (ok, ok: it's stolen from Gentoo's 6.2.10 ebuild ;))

[13:11] *** fglock joined
[13:11] <samhain1138> rafl: i'm (naturally) basing my 6.2.11 ebuild on the 6.2.10 ebuild (which worked, honestly ;))

[13:14] <rafl> samhain1138: Yeah, but parrot changed.

[13:14] <svnbot6> r9252 | fglock++ | iterator_engine - updated README

[13:14] <svnbot6> r9252 | fglock++ | - started 'macro' implementation

[13:15] <samhain1138> rafl: i'm using the same parrot, if that's what you mean

[13:15] <samhain1138> (i'm just compiling 6.2.10 again and it works so far :))

[13:15] <Juerd> Why does everyone seem to need logging? I very rarely use such stuff.

[13:15] <rafl> samhain1138: Which version? Maybe newer pugs needs newer parrots

[13:16] <samhain1138> rafl: 0.4.0

[13:16] <rafl> Juerd: For debugging only. And alrso very rarely.

[13:16] <Juerd> For debugging, which I also don't do much, I have print statements and a debugger...

[13:17] <svnbot6> r9253 | fglock++ | iterator_engine - p6 tests are *.p6t; p5 tests are *.t

[13:17] <Juerd> Ah well, I'm probably weird.

[13:17] <rafl> samhain1138: Could be caused by that. What does that output: parrot-config --dump

[13:21] * samhain1138 doesn't have parrot-config for some reason...

[13:22] *** _freenode joined
[13:22] *** kolibrie joined
[13:23] <pasteling> "samhain1138" at 217.132.59.2 pasted "parrot-config" (256 lines, 8.1K) at http://sial.org/pbot/16127

[13:28] *** _freenode is now known as typonaise

[13:30] <rafl> samhain1138: Yes, that's caused by an old parrot.

[13:33] <rafl> samhain1138: It is caused by an old parrot.

[13:33] <rafl> samhain1138: Unfortunately the current parrot doesn't work either.

[13:33] <rafl> samhain1138: I wanted to fix that with leo today.

[13:33] <samhain1138> rafl: heh, what should work then?

[13:34] <rafl> samhain1138: Only p5 embedding.

[13:34] <samhain1138> rafl: ok, thanks :)

[13:34] <lypanov> p/win 2

[13:34] <lypanov> um

[13:40] <jp-autark> cvs parrot works though

[13:40] <jp-autark> ?

[13:40] <fglock> re: macros - if a macro has an 'is parsed' trait then it doesn't need an argument list, right?

[13:43] <audreyt> fglock: right.

[13:43] <audreyt> fglock: "is parsed" subsumes the sigs part

[13:43] <fglock> audreyt: thanks!

[13:44] <fglock> audreyt: I'm implementing macros in i_e

[13:47] * Alias_ swears at Windows

[13:47] <Alias_> Bloody stale .dll locks

[13:48] <lypanov> Alias_: reboot!

[13:48] <Alias_> lypanov: Programmatically, not this instance

[13:49] <Alias_> I _really_ need to hunt down that method for deleting in-use file

[13:50] <Alias_> hmm... 

[13:50] <Alias_> ok, so you can move in-use files

[13:51] *** kisu joined
[14:08] *** Qiang joined
[14:19] *** nothingmuch joined
[14:27] <nothingmuch> morning

[14:28] *** pmurias joined
[14:36] <kolibrie> nothingmuch: morning, glad to hear your sister's party was a success

[14:36] <anatoly> it's not morning, nothingmuch :)

[14:36] <kolibrie> anatoly: it's always morning somewhere

[14:37] <Alias_> except when the sun blows up

[14:37] <Alias_> Then it's morning EVERYWHERE!

[14:37] <Alias_> (briefly)

[14:37] <kolibrie> and then night for a long time

[14:40] <anatoly> what was that story by Azimov

[14:40] <anatoly> when night finally came and they saw the stars

[14:41] <rgs> "nightfall"

[14:42] <anatoly> Right. Thanks.

[14:47] *** vel joined
[14:47] <svnbot6> r9254 | audreyt++ | * fix prelude generation on win32, due to CRLF problems reported by Ran.

[14:52] *** Chip_Zero joined
[14:52] <svnbot6> r9255 | audreyt++ | * Instead of forcing BEGIN evaluation of populating ::EXPORTS for 'is export' functions, make it evaluate at module body's runtime -- eventually the sub expression itself will be part of the runtime desugaring as well, for '$x = sub f is export {...}'.

[14:55] <nothingmuch> kolibrie: hi

[14:55] <svnbot6> r9256 | audreyt++ | * workaround to get PIL2JS compiling -- PIL wasn't handling VRefs correctly.

[14:55] <nothingmuch> anatoly: err, okay

[14:56] <nothingmuch> actually  when the sun blows up it's morning everywhere not so briefly

[14:56] *** justatheory joined
[14:56] <nothingmuch> novas usually take about 18 months to finish, IIRC

[14:56] <kolibrie> nothingmuch: thanks to you and gaal, I almost understand parsec now, I think

[14:57] <kolibrie> it is amazing how clear haskell is after initial comprehension is gained

[14:57] <nothingmuch> kolibrie: =)

[14:57] <nothingmuch> haskell is very simple

[14:57] <nothingmuch> (... from a certain perspective ;-)

[14:59] <Alias_> (the mirror universe)

[15:03] <rafl> samhain1138: OK. Actually the solution seems to be harder than we thought.

[15:08] <broquaint> ping, fglock.

[15:11] <broquaint> unping

[15:14] <audreyt> clkao: pil2js should be repaired now -- the fix is actually done several days back

[15:14] <audreyt> but net here is so extremely spotty

[15:15] <audreyt> got a lot of designing/thinking/syncing done though

[15:15] <nothingmuch> audreyt: i had something to ask you yesterday

[15:15] <nothingmuch> but now you will never know, it's too late

[15:15] <audreyt> with Nicholas on perl5 -lpcre, perl bounty, darkpan, etc

[15:15] <audreyt> and with Andk on sixpan, a better only.pm for p5, and the toolchain

[15:16] <audreyt> sadly the conf will end in an hour or so, and with it the network

[15:16] <rgs> andk on sixpan ? hope I'll see the slides

[15:16] <audreyt> I'll try to get better net ~48hrs from now when I'm in Cologne

[15:16] <audreyt> rgs: no, just discussions, not slides -- thogh they did have a BOF here on 6pan

[15:16] <fglock> broquaint: unpong

[15:16] <rgs> ok

[15:16] <audreyt> I'll journal what I can about it

[15:16] <rgs> thanks

[15:16] <svnbot6> r9257 | fglock++ | iterator_engine - macro declaration is parsed and installed in the 

[15:16] <svnbot6> r9257 | fglock++ | grammar. TODO - install the macro body

[15:17] <clkao> audreyt: oh ok.

[15:17] <Alias_> audreyt: I'm going to N/A Module::Signature on Win32 outright

[15:17] * rgs just notices "perl5 -lpcre" and goes "huh?"

[15:17] <Alias_> audreyt: Just FYI...

[15:18] <rgs> that would be for the PIL on P5 thing ?

[15:18] <audreyt> Alias_: sure

[15:18] <broquaint> Hey fglock, I was trying to figure out iterator_engine_p6compiler.pl but gave up :)

[15:18] <audreyt> rgs: er no, the possibility of solving all p5 re problems now and forever by switching to pcre

[15:18] <audreyt> and rid the porters of a maintainence nightmare

[15:18] <Alias_> audreyt: It appears that half of IO::, and in particular IO::Socket::INET, is completely fucked on Win32. And somehow IO:: has survived in the core without any of the problems being fixed

[15:18] <audreyt> and gain some nice features along the way (varwidth lookbehind, etc)

[15:18] <audreyt> Alias_: :/

[15:18] <rgs> you mean, transfer the maintainance nightmare somewhere else :)

[15:19] <Alias_> I'm still not sure how it managed to make it past testing

[15:19] <audreyt> rgs: well, it's not unlike syck vs YAML.pm.

[15:19] <audreyt> Alias_: N/Aing is fine for the time for me.

[15:19] <Alias_> ok

[15:19] <audreyt> but if IO:: chain is broken, gbarr needs to know.

[15:19] <Alias_> Oh, I'm filing bugs :)

[15:19] <audreyt> cool :)

[15:19] <Alias_> There's a ton of bugs in rt.cpan.org

[15:20] <fglock> broquaint: it compiles itself - you'd better start with iterator_engine.pl, which is the bare rule engine

[15:20] <Alias_> But some seems to be dismissed with "why do you care, it's in the core"

[15:20] <audreyt> Alias++ # pro player at this CPAN game

[15:20] <Alias_> ugh

[15:20] <fglock> then goto p6rule.pl, and then to p6compiler

[15:20] <Alias_> audreyt: It helps to not get sucked into the languages themselves :)

[15:20] <audreyt> indeed :)

[15:21] <Alias_> That's one Yak this little black duck is not going to shave

[15:21] <fglock> broquaint: there is an exponential growth in complexity

[15:21] <broquaint> Hrm, perhaps I don't quite understand it then,  fglock. Could you sum it up in a sentence or two?

[15:21] <audreyt> it's nice to hear that TimToady gives Nicholas goahead to commit his perl5-to-perl5 translator into a perforce branch

[15:21] <audreyt> so all can see it soon

[15:21] <audreyt> it's basically annotating PPI tree with B:: tree

[15:21] <Alias_> huh? what?

[15:21] <audreyt> so you have close correspondence of which area of source code are responsible for which opcode

[15:22] <Alias_> That sounds crazily evil

[15:22] <audreyt> actually it's the other way around, sorry

[15:22] <audreyt> annotating a (very pessimised) B:: tree

[15:22] <audreyt> with its document tree correspondents

[15:22] <rgs> against which perl has TimToady patched ?

[15:22] <audreyt> rgs: 592 iirc.

[15:22] <Alias_> So taking the code tree and embedding pointers into the document tree?

[15:22] <fglock> broquaint: p6compiler compiles Perl 6 - it does this by following a grammar, which is defined in p6 itself - so it reads the grammar one sentence at a time

[15:22] <audreyt> Alias_: yeah, and inventing opcodes like "junk"

[15:22] <rgs> there will be conflicts.

[15:22] <audreyt> for comments

[15:22] <Alias_> right

[15:23] <fglock> broquaint: and generates the compiler dinamically

[15:23] <rgs> OP_JUNK++

[15:23] <audreyt> rgs: right, but I care about getting into public review first

[15:23] <Alias_> Must say that's a good idea though

[15:23] <audreyt> we can survive conflicts :)

[15:23] <Alias_> Hadn't occured to me to do both trees in parallel and match

[15:23] <Alias_> Mostly because I don't work under the language

[15:23] <broquaint> The perl6 is compiled into perl5 right, fglock?

[15:23] <Alias_> Must be hella expensive 

[15:24] <audreyt> Alias_: indeed. I think it's a nice feature -- it even dumps yaml

[15:24] <Alias_> PPI trees are pretty big

[15:24] <fglock> broquaint: right

[15:24] <audreyt> (via syck)

[15:24] <audreyt> Alias_: and you can control it with an env

[15:24] * Alias_ runs away

[15:24] <audreyt> if that env is not set, then there's minimal perf slowdown

[15:24] <Alias_> Glad you found it useful at least

[15:24] <audreyt> if it's set, p5 switches to the mad lexer

[15:24] <audreyt> (mad = misc. annotation declaration or some such)

[15:25] <audreyt> and attach to each opnode madprops

[15:25] <audreyt> (misc. annotation declaration properties)

[15:25] <audreyt> to point to document tree

[15:25] * Alias_ head esplodes!

[15:25] <audreyt> to be dumped out with madskills

[15:25] <audreyt> into a madtree, which is then fed into "nomad"

[15:25] <Alias_> hahaha

[15:25] <audreyt> to extract the parallel trees out and dump to yaml

[15:25] <Alias_> names++

[15:26] <fglock> broquaint: what it makes it hard to get is that the compiler is not there - p6compiler is like a factory, which makes a compiler on demand - or something like that

[15:27] <Kattana> its so ingenious i thought of it myself which is what led me to #perl6 ^__^

[15:28] <broquaint> So how might I use it to compile a simple perl6 script?

[15:28] <Kattana> (ingenious in this case is also a synonym for lazy)

[15:29] *** Draconit_ joined
[15:29] <Alias_> audreyt: Do you have any cygwin ninjas floating around?

[15:29] <Alias_> audreyt: I noticed pjf doing some thing

[15:30] <fglock> broquaint: perl iterator_engine_p6compiler.pl <sourcefile>

[15:30] <fglock> broquaint: there is a sample file, if I didn't erase it by mistake - let me check

[15:32] <broquaint> Hrm, I keep getting errors of: syntax error in program '$PROGRAM_SOURCE' at '$PROGRAM_SOURCE'

[15:32] <broquaint> Even for simple "Hello World" programs.

[15:33] <fglock> broquaint: the current grammar file is very simple - try say 'something' (with single quotes - I didn't install double quotes yet)

[15:34] <fglock> broquaint: iterator_engine_p6compiler.p6t is the sample file I use for tests

[15:34] <fglock> broquaint: it will warn that 'macro' is not yet working, because that's what I'm working on

[15:37] <broquaint> Weird, iterator_engine_p6compiler.p6t works but: say "Hello World"; # doesn't :/

[15:37] *** Migo1 joined
[15:38] <fglock> broquaint: double quotes don't exist yet - it needs an entry in the grammar file - that's easy to add, but I'm trying to make macros work first :(

[15:38] <fglock> broquaint: try single quotes

[15:39] <broquaint> Cool :)

[15:40] <fglock> broquaint: :)

[15:40] <stevan> audreyt: ping

[15:41] <svnbot6> r9258 | fglock++ | recovered iterator_engine_p6sample.p6

[15:41] <fglock> broquaint: take a look at the grammar source file - iterator_engine_p6prelude.p6 - everything the compiler can do is specified there

[15:42] <audreyt> stevan: pong!

[15:42] <audreyt> stevan: theme for vienna^2 hackathon is: objspace on pir

[15:42] <stevan> audreyt: nice

[15:42] <stevan> I would be into doing that

[15:42] <audreyt> you have timeslice?

[15:42] <audreyt> wonderful!

[15:43] <stevan> I think

[15:43] <audreyt> the 'thon happens 4 days from now

[15:43] <audreyt> for ~1wk

[15:43] <audreyt> it'd be wonderful to have you on gobby/skype/etc

[15:43] <stevan> two projects have been "launching" for a week now, the $clients cant make up their @minds

[15:43] <audreyt> in .il we figured out how to serialize the code/pad/etc to objspace

[15:43] <stevan> nice

[15:43] <audreyt> as well as lang simplified enough so linking would be possible

[15:43] <stevan> :)

[15:44] <audreyt> so it's time to write them down as APIs, and promote S12.5 etc to Perl6::Doc tree

[15:44] <audreyt> et cetera

[15:44] <audreyt> it'd be wonderful if you can work on the P5 mapper

[15:44] <stevan> ok,.. I feel about ready to write 12.5 now, after Class::MOP

[15:44] <audreyt> so we can (when compiled to perl5) interop with native p5objs

[15:44] <audreyt> excellent!

[15:45] <stevan> cool, I will make as much room as possible in my schedule

[15:45] <stevan> I have a (sort of) unrelated question though, not sure if you can even answer

[15:45] <stevan> how releated is SYB and LINQ? 

[15:45] <stevan> are andres and SPJ working together at all?

[15:46] *** stennie joined
[15:46] <audreyt> LINQ is primarily emeijer

[15:46] <audreyt> they are @ .us

[15:47] <audreyt> SPJ and JaffaCake (S.Marlow) are @.uk

[15:47] <stevan> ah 

[15:47] <audreyt> LINQ is based more on monad comprehensions

[15:47] <audreyt> (ala Haskell 1.4)

[15:47] <audreyt> as well as emeijer's previous woek on HaskellDB and HSP

[15:47] <audreyt> so, not directly related

[15:48] <audreyt> but generic programming is a focus (as is relational ones) on CLR3

[15:48] *** lumi joined
[15:49] <stevan> the whole generic traversal thing in SYB 1 and the LINQ movie when taken together, kind of melded in my mind   

[15:49] <stevan> but that might have just been my brain melting 

[15:49] <stevan> SYB is the first Haskell stuff that really made sense to me,.. not sure if thats cause I am finally groking haskell now, or SYB is just so damn cool

[15:50] * fglock finds a cool way to implement macros

[15:51] <samhain1138> rafl: hmmm, what is the solution?

[15:54] <rafl> samhain1138: No solution yet.

[15:54] <rafl> samhain1138: Well. Actually there is a solution. Link installable_config.o into libparrot.

[15:54] <rafl> samhain1138: But unfortunately there is no implementation yet.

[15:57] <fglock> re: macro - dump the macro body AST into perl5, and { return } it when the macro rule matches

[15:58] <fglock> lunch &

[15:58] *** fglock left
[16:00] <rgs> perl 6 on perl 5 question on P5P : http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2006-03/msg00081.html

[16:12] *** fglock joined
[16:15] *** iblechbot joined
[16:16] <fglock> rgs: thanks!

[16:17] <rgs> what did I do ?

[16:17] * rgs looks behind him

[16:17] *** Draconit_ left
[16:18] <fglock> rgs: sent a link :) 

[16:19] <rgs> while you were off channel.

[16:20] <fglock> rgs: I just backlogged

[16:21] <rgs> you're irc addicted.

[16:25] <nothingmuch> irc addiction is bad

[16:27] <Odin-> What isn't?

[16:27] <nothingmuch> well

[16:27] <nothingmuch> err

[16:27] * nothingmuch firmly believes that balance is everything

[16:27] <Odin-> Or, to be more specific, what addiction isn't?

[16:27] <nothingmuch> so i actually couldn't agree more

[16:28] *** tcliou joined
[16:28] <nothingmuch> but irc as opposed to say tea addiction, or møøse addiction is not so bad

[16:29] * Odin- stamps a taijitu on nothingmuch.

[16:29] <huhlig> is perl6 functionably useable yet or is it still in a great enough flux that nothign that doesent need to be written 6 times should be tried

[16:29] <audreyt> huhlig: rewritten 6 times, probably not.

[16:30] <audreyt> the APIs are in flux, that's true, which is why we started the docs/Perl6/ tree to document them

[16:30] <audreyt> if you are looking for writing new production code in perl 6

[16:31] <audreyt> then perhaps wait another couple months

[16:31] <audreyt> till we get ->perl5 compiling in shape along with a fairly complete API docs

[16:31] <Alias_> heh, production perl 6

[16:31] <audreyt> (but you can help -- want a commit bit?)

[16:32] <szbalint> :)

[16:32] <nothingmuch> rgs: so, i'm playing a bit with -MO=Terse

[16:32] <rgs> Terse sucks. use B::Concise instead

[16:32] <nothingmuch> okay

[16:32] <audreyt> bbl -- hotel &

[16:32] <nothingmuch> ciao audreyt 

[16:33] <rgs> nowadays Terse is only a wrapper around Concise

[16:33] <nothingmuch> ah

[16:33] <rgs> see you audreyt 

[16:33] <fglock> is there a switch in Data::Dumper (p5) that makes it not show '$VAR1 =' ?

[16:33] <nothingmuch> anyway, i was thinking: the optional optimizer is useful for learning too

[16:33] <nothingmuch> 1 + 2 is optimized into 3

[16:33] <rgs> yes

[16:33] <nothingmuch> and that's not good for poking around

[16:33] <nothingmuch> so yet another reason

[16:33] <rgs> no, that's constant folding, only part of peephole optimisation

[16:34] <pmurias> s/::/ruleop/ is alternation([constant("..."),constant("...")]) implicitly ^ anchored ?

[16:34] <nothingmuch> yes, ofcourse =)

[16:34] <rgs> the optimiser turns some ops into nullops

[16:34] <nothingmuch> doesn't it just zap them?

[16:34] <rgs> with concise you can see what they were before (with B::Terse you can't)

[16:34] <rgs> (for example)

[16:34] <nothingmuch> aah

[16:34] <nothingmuch> okay, tha'ts a good thing

[16:35] <Migo1> fglock: Terse

[16:36] <fglock> Migol: thanks!

[16:37] <Migo1> hey, it is "1", not "l" :)

[16:37] <nothingmuch> fglock: also note that for some things you need a special flag

[16:37] <nothingmuch> to make it really emit perl 5 code

[16:37] <fglock> Migo1: fixed!

[16:37] <nothingmuch> not just something that looks familiar

[16:37] <nothingmuch> for complex structures

[16:38] <nothingmuch> there's like 31985895 closed bugs on Data::Dumper's RT queue about that ;-)

[16:38] <nothingmuch> (one of them is mine)

[16:38] <fglock> nothingmuch: it's a simple tree - I generate it myself, it's non-recursive

[16:38] *** cookys joined
[16:38] <nothingmuch> fglock: ni that case you're in the clear, IIRC

[16:39] <fglock> nothingmuch: iterator_engine ast tree - I need to return it from the rule that parses the macro

[16:39] <nothingmuch> rgs: was this ever finished? http://gisle.aas.no/perl/illguts/op.html

[16:40] <rgs> no

[16:40] <nothingmuch> shame

[16:41] <rgs> and it's probably a bit outdated w r t blead

[16:41] <nothingmuch> okay

[16:45] <Migo1> Data::Dumper has very silly API, I always wrap it into something like encode_value of http://search.cpan.org/src/MIGO/Arch-0.5.1/perllib/Arch/SharedIndex.pm

[16:45] <Migo1> will .perl accept parameters for different styles?

[16:45] <nothingmuch> ofcourse not, there is only one true way to style Perl 6 code

[16:47] <Migo1> in one line?

[16:49] <nothingmuch> $*USER.style

[16:49] <nothingmuch> seriously though ;-)

[16:49] <nothingmuch> i guess it will have it

[16:49] <nothingmuch> like

[16:49] <nothingmuch> :indent_type( tab || space );

[16:50] <nothingmuch> :indent_width( ... );

[16:50] <nothingmuch> ....

[16:52] <rgs> :brace_placement( one_true_way )

[16:52] <Kattana> And it will automagicaly generate an IDE at compile time?

[16:52] <Migo1> I hope the defaults will be less brain-dead than in Data::Dumper. :) I should yet find a usage for default $Terse = 1; $Indent = 2;

[16:53] <Migo1> I mean $Terse = 0;

[17:05] <svnbot6> r9259 | fglock++ | iterator_engine - macros!

[17:14] *** bsb joined
[17:28] *** Eimi joined
[17:30] *** nnunley joined
[17:37] <nothingmuch> so

[17:37] <nothingmuch> we're sitting at the table for dinner

[17:38] <nothingmuch> and some time near the end my 17 (Today!) year old sister says

[17:38] <nothingmuch> "I can't understand this evolutionary defect... Why is it that men get sexually aroused by rectal stimuli?" (ofcourse, with more blunt wording)

[17:39] <nothingmuch> so then my 7 year old sister starts giggling and repeating sub-phrases

[17:39] <chris2> that's an evolutionary defect?

[17:39] <nothingmuch> 10 points for style

[17:39] <nothingmuch> -100 for practicality

[17:39] <nothingmuch> well, her conjecture was that it doesn't help ensure procreation

[17:40] <nothingmuch> i think what she's missing is that perhaps the same system that makes both the "right" parts and the "wrong" parts work is simpler when generalized

[17:40] <nothingmuch> and thus perhaps it's actually a direct product of evolution

[17:40] <Alias_> The general purpose answer would be that she probably hasn't looked into it in enough detail yet

[17:40] <integral> there are some monkeys that use sex a _lot_ for community building and bonding, inc. homosexual sex

[17:40] <nothingmuch> Alias_: aye

[17:40] <chris2> i'm trying to connect it with the fact that assholes are older than mouthes

[17:41] <rgs> larger bottom -> larger route to make babies pass -> less risks of mother dying

[17:41] <stevan> nothingmuch: so you are saying that anal sex is merely a refactoring done by ($diety|$evolution)?

[17:41] <nothingmuch> chris2++

[17:41] <Alias_> rgs: I think he may mean physical stimulo

[17:41] <nothingmuch> stevan: no, i'm arguing that the feature was added at the same time

[17:41] <chris2> anal sex is just a blow-job that got stuck in evolution...

[17:41] <stevan> :D

[17:41] <chris2> ;)

[17:41] <rgs> Alias_: ah yes. I read it backwards.

[17:42] <nothingmuch> stevan: and that since this helped in one way

[17:42] <stevan> nothingmuch: so it's in the spec then?

[17:42] <nothingmuch> the by product also remained

[17:42] <nothingmuch> no

[17:42] <nothingmuch> it's one of those "accidental features"

[17:42] * stevan thumbs through his copy of Anal::Sex::Bible but cant seem to find the reference

[17:42] <chris2> still, the closeness of rectum and genitials is given in almost any creature

[17:42] <stevan> perhaps I have the wrong version

[17:43] * chris2 notices he is not in #haskell-blah. wow :P

[17:43] <stevan> nothingmuch: a more detailed question is "why do men have prostates"

[17:43] <chris2> ever tried to eat with an open mouth?

[17:43] <chris2> oops, confused two words :P

[17:44] * stevan tries to figure out which two

[17:44] <chris2> prostates != hemorrhoids

[17:44] <stevan> not at all

[17:45] <stevan> one usually is associated with bad feelings, the other with good,.. they couldnt be more diff

[17:45] <chris2> prostate controls flow of semen or urine, no?

[17:45] * stevan is not a doctor.... please turn your head and cough 

[17:46] <nothingmuch> stevan: two reasons

[17:46] <nothingmuch> or wait

[17:46] <stevan> chris2: some men are stimulated sexually when their prostate (something inside their anus) is stimulated

[17:46] <chris2> ever had to cough while the doc holds your balls?

[17:46] <nothingmuch> is this about their location?

[17:46] <nothingmuch> or their actual purpose?

[17:46] <chris2> no

[17:46] <Alias_> stevan: So we are encouraged to get those big dumps out and not hold them in

[17:46] <chris2> the prostates are somewhere different to my knowledge

[17:46] <nothingmuch> point 1: semen has to be slightly cooler than body tempreture, I don't know for what reason

[17:47] <nothingmuch> point 2: it probably encourages struggling males to chop each other's gonads off

[17:47] <stevan> Alias_: there you go,.. evolution at it's finest,.. its all about the shit

[17:47] <nothingmuch> thus ensuring that only the best fighters are left

[17:47] <chris2> then, to check if you got a big prostate, the doc actually fingers you...

[17:47] <nothingmuch> through a catalyzing protocol of ensuring that the losers can't reproduce

[17:47] <nothingmuch> ;-)

[17:47] <chris2> nothingmuch: know why we have finger nails, btw?

[17:47] <stevan> ok,.. all this talk about anal sex is making me hungry,.. and besides,.. my pizza is ready :P

[17:48] <nothingmuch> chris2: to keep various items stored in a convenient location?

[17:48] <nothingmuch> stevan: =)

[17:48] * stevan heads up stairs for food &

[17:48] <chris2> nope. to get rid of your ear wax

[17:48] <chris2> so you can hear the mammuths comming

[17:48] <nothingmuch> ouch

[17:48] <nothingmuch> actually, we don't really need to remove ear wax unless:

[17:48] <nothingmuch> a. we have some kind of medical condition that creates too much of it

[17:49] <nothingmuch> b. we used q-tips

[17:49] <nothingmuch> there are these tiny hairs that help the wax move out

[17:49] <chris2> it depends

[17:49] <nothingmuch> and if you just use warm water they aren't messed with

[17:49] <nothingmuch> otoh qtips flatten them

[17:49] <chris2> most asian people have different ear wax, or so i heard

[17:49] <chris2> they lack the gene for stickyness

[17:49] * nothingmuch hasn't heard of that

[17:49] <nothingmuch> what does it do?

[17:50] <chris2> it makes the ear wax sticky

[17:50] <nothingmuch> no no, i mean what is the effect of non sticky wax?

[17:50] <nothingmuch> does it just squirt occasionally when you turn your head?

[17:50] <chris2> "Asian people tend to have very dry (flakier) wax build-up opposed to a white person's oily wax build-up."

[17:51] <nothingmuch> oh

[17:51] *** netanya_goy joined
[17:51] <chris2> maybe

[17:51] <nothingmuch> ouch

[17:52] <chris2> "Thus, traditionally Asian people use wooden ear picks to clean out their ears instead of Q-tips, which aren't as thorough for this type of wax."

[17:52] <chris2> be careful :)

[17:56] <Alias_> I have to wonder if waxy ear wax is an adaptation for the cold

[17:57] *** jeh joined
[17:57] *** huhlig joined
[18:06] <nothingmuch> lypanov: i just started making stevan write us some piln docs

[18:06] * stevan denies all invovlement in nothingmuch's plot to document PIL^N

[18:07] <stevan> the first rule of PIL^N club is ... 

[18:07] <lumi> There was some terrorist thingy at the Church of the Annunciation in Nazerath (this is of possible interest to szabgab, anatoly, timtoady, bsb who were there with me a week ago)

[18:07] <stevan> nothingmuch is not allowed in :P

[18:08] *** rantanplan_ joined
[18:12] * nothingmuch imagines a bunch of perl hackers looking like perl syntax in a church

[18:13] <PerlJam> lumi: Great!  Now you've implicated them to the FBI/CIA/NSA/whoever is watching the Internet  ;-)

[18:14] <lumi> It's full of internets!

[18:14] <lumi> But apparently not a terrorist thing, rather three crazies

[18:20] <salty-horse> with fire crackers

[18:22] <huhlig> muhahah

[18:22] * huhlig tells the FBI

[18:22] *** bsb joined
[18:26] *** feng joined
[18:28] <stevan> ( bsb | audreyt | gaal ).ping()

[18:34] <szbalint> Is that a junction?

[18:35] <stevan> yeah, but it wouldnt actually work 

[18:35] <stevan> ping( bsb | audreyt | gaal ) would be more correct IIRC

[18:38] <salty-horse> something like ()>>.ping() would work as well, no?

[18:39] <salty-horse> actually, what will ping() do with a junction?

[18:40] <stevan> whatever ping wants to do :) assuming sub ping (Junc $people) { ... }

[18:41] <salty-horse> my irc client uses perl5 bindings only

[18:41] <salty-horse> and it doesn't even have ping() :/

[19:11] <huhlig> hmm

[19:11] <huhlig> anyone here use norton firewall?

[19:12] <huhlig> stopkeylogger

[19:12] *** bsb joined
[19:12] <huhlig> hmm

[19:15] *** Arathorn is now known as Aragone

[19:19] <ayrnieu> yeah, that's great, welcome to ONE WEEK AGO.

[19:24] <huhlig> heh

[19:24] <huhlig> didnt think it would affect anyone here

[19:24] <huhlig> this is kind of a unix channel

[19:25] <integral> ayrnieu: TWO WEEKS AGO

[19:29] *** dduncan joined
[19:31] *** iblechbot joined
[19:37] *** sahadev joined
[19:41] <ayrnieu> integral - oh.  Mind still in the weekend.

[19:41] *** larsen joined
[19:42] *** bsb joined
[19:47] *** pmurias joined
[19:48] *** Aankh|Clone joined
[19:50] <gaal> stevan: pong!

[19:51] <gaal> audreyt: ping

[19:53] <xerox> pang!

[19:54] <svnbot6> r9260 | pmurias++ | A version of iterator_engine.pl with comments in Smart::Comment format.

[19:54] <svnbot6> r9260 | pmurias++ | For consideration by fglock.

[20:01] *** Kattana joined
[20:07] *** bsb joined
[20:12] *** amnesiac joined
[20:22] <bsb> pong stevan 

[20:35] *** kulp joined
[20:35] *** Shachaf joined
[20:40] <stevan> gaal: bsd: I am having issues running "make pili"

[20:41] <stevan> nothingmuch's best guess was that it tries to use gzip despite lack of zlib

[20:41] <stevan> ld was getting undefined symbols _gz*

[20:47] <gaal> reproduced.

[20:49] <gaal> I thought we had MissingH but I can't find it now?

[20:50] <gaal> or is this actually not enough to have missingh, and we need zlib for faststring?

[20:52] *** bsb joined
[20:53] *** duckyd joined
[20:55] *** SamB joined
[21:02] *** marmic_ joined
[21:06] *** avar joined
[21:07] *** kulp left
[21:27] *** fglock joined
[21:29] <fglock> pmurias: re comments - nice! is there a way to selective enable Smart::Comments on specific subroutines? (haven't looked at the docs yet)

[21:37] <pmurias> fglock: hi

[21:37] <fglock> pmurias: hi!

[21:37] <pmurias> use Smart::Comments before the sub;no Smart::Comments after

[21:38] <fglock> pmurias: thanks!

[21:38] *** DesreveR joined
[21:39] <pmurias> shall i merge the changes into the main version ?

[21:39] <fglock> pmurias: I wished there was a way to enable from the command line --show-comments='sub xxx' :)

[21:40] <fglock> pmurias: sure - please leave it commented out in svn, as the users will not see debugging messages

[21:42] <pmurias> regarding the switch I we could either use a custom Smart::Comments, or change it's private subroutines at compile time

[21:42] <pmurias> or use a second source filter

[21:43] <pmurias> if it's Smarts internal change rarly, the second option is the best

[21:45] *** DesreveR joined
[21:45] <fglock> pmurias: I'd rather use an ENV variable to configure what to show - but I don't want to add another project to my list :)

[21:50] <pmurias> is there a way to determine the which subrutine a sub was called from?

[21:50] <PerlJam> pmurias: perldoc -f caller

[21:50] <PerlJam> :-)

[21:50] <PerlJam> That morphs into CALLER:: or something in perl6 though

[21:51] <PerlJam> (I think)

[21:51] *** Chip_Zero left
[21:53] <pmurias> forgot to look at the secong page of the caller desctiption in the camel(third edition,polish second by the way :)

[21:55] <svnbot6> r9261 | fglock++ | iterator_engine - macros can return perl5 code using:

[21:55] <svnbot6> r9261 | fglock++ |   return ' eval( \' print "xxx\n" \', :lang<perl5> ); ';

[21:58] <svnbot6> r9262 | fglock++ | iterator_engine - removed debug info

[22:01] *** pdcawley joined
[22:03] *** DesreveR is now known as r0nny

[22:03] <pmurias> a more difficult question, how do i get the subroutine a anonymous subroutine was *defined/created* in?

[22:04] <pmurias> in p5

[22:04] <pmurias> :(

[22:07] <pmurias> fglock: the problem with --show-comments is how do you name an anonymous sub :)

[22:09] <pmurias> fglock: ignoring that it's 7 lines of code in the %ENV version

[22:14] *** larsen_ joined
[22:21] *** Nouk joined
[22:26] *** elmex joined
[22:29] <pmurias> good night, hopefully I'll dream of solution to that problem

[22:31] *** jeh joined
[22:42] *** ruz joined
[22:43] *** nothingmuch joined
[22:43] <nothingmuch> møøseness

[22:50] *** Limbic_Region joined
[22:50] <fglock> Limbic_Region: hi

[23:01] *** frederico_ joined
[23:04] <fglock> frederico_: ola - voce e de Sao Paulo?

[23:04] <svnbot6> r9263 | fglock++ | iterator_engine - added very simple parameter binding to macros (need more work)

[23:09] <frederico_> fglock, eu sou sim

[23:09] <frederico_> fglock, mas da cidade de taibate

[23:10] <fglock> frederico_: ah ok, vc e do grupo de taubate :) nos vemos na cascavel-pm! (preciso ir agora)

[23:10] <frederico_> ok

[23:10] <frederico_> t +

[23:11] <fglock> &

[23:11] *** fglock left
[23:15] *** stennie joined
[23:17] *** macli left
[23:23] <rep> DCC SEND "string" 0 0 0

[23:23] <rep> oops, wrong channel.

[23:27] *** netanya_goy left
[23:31] <nothingmuch> seen stevan?

[23:31] <jabbot> nothingmuch: stevan was seen 2 hours 50 minutes 5 seconds ago

[23:31] <nothingmuch> =(

[23:33] *** stennie left
[23:39] *** mako132__ joined
