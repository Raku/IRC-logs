[00:04] <svnbot6> r12636 | lwall++ | Added .pm files, on assumption that duplicate parses are preferred to missing

[00:04] <svnbot6> r12636 | lwall++ | parses, and there might be examples that aren't named with the .pl extension.

[00:25] *** nekokak joined
[00:35] *** mjk joined
[00:37] <svnbot6> r12637 | markstos++ | Document in Differences.pod that eval {} in Perl5 is try{} in Perl6.

[00:53] *** christo joined
[00:53] *** christo left
[01:10] *** christo joined
[01:10] *** christo left
[01:19] <marksto1> I don't see my syntax error. I keep getting "undeclared variable" for %args.  Usually it seems declaring a data structure in the sub signature takes care of that.

[01:19] <marksto1> multi method run_modes (%args) { return %!run_modes = %!run_modes, %args; }

[01:19] *** marksto1 is now known as markstos_

[01:19] <markstos_> I tried a number of syntax variations, but I keep getting the error.

[01:19] <markstos_> It strange, because I've done similiar things a number of times and haven't run into this.

[01:23] *** mdiep_ joined
[01:23] *** cognominal joined
[01:23] *** xinming joined
[01:23] *** ludan joined
[01:23] *** weinig|away joined
[01:23] *** buu joined
[01:23] *** awwaiid joined
[01:23] *** Juerd joined
[01:23] *** Grrrr joined
[01:23] *** marcus_ joined
[01:23] *** clkao joined
[01:23] *** Yappo joined
[01:23] *** obra joined
[01:23] *** Frances joined
[01:23] *** LCamel joined
[01:23] *** notsri joined
[01:25] *** ingy joined
[01:26] *** justatheory joined
[01:29] *** justatheory joined
[01:30] <markstos_> It looks like pugs treats subroutine signatures of (@a) and (%a) the same.

[01:31] *** bpederse_ joined
[01:34] *** christo joined
[01:34] *** christo left
[01:51] *** dolmans joined
[02:05] <svnbot6> r12638 | fglock++ | v6 - s/$_V6_GRAMMAR/%_V6_GRAMMAR/

[02:05] <svnbot6> r12638 | fglock++ | - implemented %(...)

[02:05] <svnbot6> r12638 | fglock++ | - fixed P6Term.pm to implement Term.pm API

[02:05] <svnbot6> r12639 | markstos++ | Attempt to enhance the usefulness of this page by cross-referencing the Apocalypse and Exegesis documents,

[02:05] <svnbot6> r12639 | markstos++ | and also try to explain what the heck the difference is, and which set of docs to look to first.

[02:06] *** hikozaemon joined
[02:07] *** aufrank joined
[02:23] <pasteling> "markstos" at 12.176.101.89 pasted "selecting the right multi-method when choosing been arrays and hashes" (26 lines, 554B) at http://sial.org/pbot/19246

[02:24] <markstos_> So someone take a long at this failing test (it even is made with "use Test"!) ? I'm not sure if I've run into a pugs bug, or my own ignorance and confusion.

[02:44] *** lambdabot joined
[02:49] *** MacVince joined
[02:50] *** lambdabot joined
[02:50] *** amnesiac joined
[02:59] <svnbot6> r12640 | markstos++ | remove "$self: " references here, which don't seem to add anything here.

[02:59] <svnbot6> r12640 | markstos++ | (Tests still pass after removing it. )

[03:04] <markstos_> I think what I don't understand is: How declare for a subroutine signature that the first arg is a hashref, as opposed to a hash?

[03:14] <PerlJam> markstos_: What's a "hashref"?  Perl6 doesn't have refs anymore

[03:14] <markstos_> \%h

[03:15] <markstos_> What's \%h ?

[03:16] <markstos_> ?eval my %h = ( a => 'b'); say ref \%h;

[03:16] <evalbot_12640> OUTPUT[Hash ] Bool::True

[03:16] <markstos_> Hmmm.... smells like a working hashref.

[03:17] <markstos_> I want to handle   foo( a => 'b') and foo({ a => 'b' });

[03:18] <PerlJam> pugs understands refs, but it doesn't yet understand that they're going away

[03:19] <markstos_> Is \%h going away ?

[03:19] <markstos_> Is foo({ a => 'b' }) going away?

[03:19] <PerlJam> no, but they are just hashes to perl6

[03:19] *** arcady joined
[03:20] <markstos_> So then pugs is buggy if it dispatches foo(\%h) and foo(%h) differently?

[03:22] <markstos_> ( Incidently, there don't seem to be tests for  foo(\%h) and foo(\@a) in the test suite yet.

[03:22] <markstos_> I could add them, but I want to be sure of the expected behavior1

[03:22] <markstos_> s/1/!/

[03:22] <audreyt> \%h dispatches to Capture

[03:22] <audreyt> \@a too

[03:23] <audreyt> %h and @a dispatch to Hash and Array respectively

[03:23] <audreyt> {a=>'b'} dispatch to Array

[03:23] <audreyt> er

[03:23] <audreyt> {a=>'b'} dispatch to Hash

[03:23] <audreyt> [1,2,3] to Array

[03:23] <audreyt> (sorry, just woke up.)

[03:24] <markstos_> audreyt: Thanks. Is there an easy to express that I want \%h and %h handled as if they were the same?

[03:24] <audreyt> the current runcore is Dec 2005's perl6, before the notion of Capture and before the semantics of \ got worked out

[03:24] <audreyt> why would you want to do that?

[03:24] <markstos_> Ah.

[03:24] <PerlJam> audreyt: thanks, I was trying to find a reference (heh!) that confirmed that \XXX always Captures XXX  (all of the examples that I found use \(...) or \"constant")

[03:25] <markstos_> audreyt: I'm porting something from Perl5, and it allows you to do foo( a => b ) or foo({ a => b})

[03:25] <markstos_> Of course, I could drop support for one varation as part of the port...

[03:25] <audreyt> multi foo (%x) { ... }

[03:25] <PerlJam> markstos_: that's a Pair and a Hash

[03:25] <audreyt> multi foo (*%x) { foo(%x) }

[03:25] <audreyt> like that?

[03:25] <audreyt> PerlJam: er no, that's named and a hash :)

[03:25] * markstos_ checks

[03:26] <audreyt> Pair is when you do   foo('a'=>'b')

[03:26] <audreyt> note the lhs of => is not bare (which would be named)

[03:26] <PerlJam> oh, that's right, I've obviously forgotten

[03:27] <PerlJam> you've just woken up and I'm still thinking in perl5  :)

[03:28] <audreyt> markstos_: I think the most straightforward way is

[03:29] <audreyt> sub foo (*@_, *%_) { %_ = (%_, @_); say %_.perl }

[03:29] * markstos_ checks that

[03:30] <audreyt> er sorry

[03:30] <audreyt> sub foo (%pos?, *%nam) { my %arg = (%nam, %pos); say %arg.perl }

[03:30] <audreyt> the latter is what you've expressed in english, I think

[03:30] <audreyt> unless you want to mutually exclude them

[03:31] <audreyt> in which case you want

[03:31] <audreyt> sub foo (%pos?, *%nam) { my %arg = %pos || %nam; say %arg.perl }

[03:31] <audreyt> but hopefully the idea is clear :)

[03:32] <markstos_> audreyt: Thanks. I'll think about that.

[03:32] <audreyt> :))

[03:32] *** kwrprcw joined
[03:33] *** Khisanth joined
[03:36] <pasteling> "markstos" at 12.176.101.89 pasted "to complicate matters, I want to support a hash, hashref, and arrayref calling styles..." (17 lines, 268B) at http://sial.org/pbot/19247

[03:36] *** cooljoke joined
[03:37] <markstos_> audreyt: so to complicate things, the interface I'm porting also supports an arrayref. I'm having trouble modeling that as a multi method, in addition to the hash and hashref options.

[03:37] <PerlJam> audreyt: Is someone working on teaching pugs about Captures?

[03:38] <audreyt> PerlJam: sure, when you see "newland val" or "newval" or "vv" on channel mentioned by gaal luqui me etc

[03:38] <audreyt> it's the new Capture-based runtime

[03:38] <markstos_> I wonder if I should just revert to the Perl5 style code, which takes in an array, and then inspects it to see whether a hashref or arrayayref was based in.

[03:38] <audreyt> ?eval vv("newland string").method(x=>1)

[03:38] <evalbot_12640> "CCall \"method\" CaptMeth \{c_invocant = VPure (MkStr \"newland string\"), c_feeds = [MkFeed \{f_positionals = [], f_nameds = \{\"x\":=[VPure (IFinite 1)]}}]}"

[03:38] <audreyt> see, a capture!

[03:38] <audreyt> but of course we won't force everyone to write vv() :)

[03:39] <audreyt> so once the method dispatch stabilizes, all oldland values will become newland values, and the vv() bridge won't be needed

[03:39] <Alias_> audreyt: Oh good, you're here

[03:39] <PerlJam> audreyt: neato

[03:39] <Alias_> audreyt: We have to be really careful when using PERL5_CPANPLUS_IS_RUNNING

[03:39] <audreyt> Alias_: mm?

[03:39] <Alias_> It gives false positives

[03:40] <Alias_> Because the "RUNNING" isn't entirely accurate

[03:40] <audreyt> right, kane mentions he's working on more fine grained reporting

[03:40] <Alias_> Yep, but the reason I hadn't written in support for that check already was the first time I tried, I got false positives and it was acting wrong

[03:41] <audreyt> oy. I didn't know that

[03:41] <audreyt> how do I reproduce the error? (I need to run for $job in a few mins, though, so better to mail me the recipe :))

[03:41] <Alias_> It's in ::With, but my tests were showing invalid results

[03:41] <Alias_> I have a test dummy module up somewhere

[03:41] <audreyt> markstos_: don't use multi

[03:41] <Alias_> hang on

[03:42] <markstos_> audreyt: Thanks for the tip.

[03:42] <audreyt> sub foo (@a? %h?, *%nam) { my %arg = (%h, %nam, @a); say %arg.perl }

[03:42] <audreyt> sub foo (@a?, %h?, *%nam) { my %arg = (%h, %nam, @a); say %arg.perl }

[03:42] <Alias_> audreyt: http://svn.phase-n.com/svn/cpan/trunk/PITA-Test-Dummy-Perl5-MI/Makefile.PL

[03:43] <Alias_> That's my "cpan dummy" module for testing ::With

[03:43] <Alias_> You should be able to use that to test

[03:43] <audreyt> k thx :)

[03:44] <Alias_> Once we get all those working (CPAN|CPANPLUS|manual) + (EU:MM|M:B) + (user|author) I'll start making everything else use it

[03:46] <audreyt> that would be moosely

[03:47] * audreyt also needs to think about integrating Sage's work

[03:47] <Alias_> Which is that?

[03:48] <audreyt> ./pugs some_perl5_script_here.pl

[03:48] <audreyt> 5->6 autotranslator

[03:48] <audreyt> requires perl 5.9.4's MAD support

[03:48] <Alias_> Integrating it into M:I?

[03:48] <Alias_> Or do you mean pugs

[03:48] <audreyt> no, into pugs :)

[03:48] <Alias_> ah

[03:48] <markstos_> audreyt: following your suggestion, but it seems when passing a hash, it gets treated an array of pairs rather than a hash.

[03:49] <audreyt> markstos_: nopaste code?

[03:49] <pasteling> "markstos" at 12.176.101.89 pasted "more on passing hashes, hashrefs and arrayrefs" (13 lines, 196B) at http://sial.org/pbot/19248

[03:51] *** lambdabot joined
[03:51] <markstos_> unrelated, my attempt at improving the Perl6 documentation has gone live:

[03:51] <markstos_> http://feather.perl6.nl/~agentzh/syn/

[03:51] <lambdabot> Title: Index of /~agentzh/syn

[03:51] <markstos_> I tried to turn that page into more of a central resource.

[03:54] <audreyt> markstos_: indeed without mlultis it looks kinda hard

[03:54] <audreyt> multi foo (Array $a) { foo(hash($a.values)); }

[03:54] <audreyt> multi foo (Hash $h, *%nam) {  my %arg = (%nam, $h.pairs); say %arg.perl;

[03:54] <audreyt> }

[03:54] <audreyt> would work

[03:54] <audreyt> not pretty, though

[03:54] <audreyt> will think about it some more :) but gotta run now

[03:54] * markstos_ tests audreyt's code. 

[03:54] <markstos_> Thanks audreyt++!

[03:55] <audreyt> markstos_: on the portal page: I wonder if http://svn.openfoundry.org/pugs/docs/Perl6/Perl5/Differences.pod can be pod2html onthefly

[03:56] <audreyt> aso singular of  Exegeses is Exegesis

[03:56] <audreyt> but looks very pretty :)

[03:59] <svnbot6> r12641 | markstos++ | typo fixes. audreyt++

[04:00] <markstos_> I'm hoping agentz can help me Differences.pod into HTML.

[04:00] <markstos_> I also added some "smart links" to Differences.pod that I hoped will start working. :)

[04:01] *** rashakil joined
[04:08] *** mako132_ joined
[04:13] <pasteling> "markstos" at 12.176.101.89 pasted "methods and subs dispatch an arrayref differently. Bug?" (29 lines, 507B) at http://sial.org/pbot/19249

[04:14] <markstos_> I need to go, but someone may be interested in reviewing my nopaste-- it appears to be bug where multi sub and multi method behave diferently.

[04:24] <audreyt> MacVince: foo(@a) not foo(\@a)

[04:24] <audreyt> er

[04:24] <audreyt> s/macvince/markstos/

[04:24] <audreyt> please not be using \ anymore :)

[04:29] <Khisanth> the habits are going to be hard to kill

[05:18] *** chromo joined
[05:21] *** agentzh joined
[05:22] <agentzh> markstos++

[05:22] <agentzh> nice to see things had magically improved when i got up.

[05:24] <agentzh> markstos: i'll autoHTML-ize Differences.pod on feather today. :)

[05:25] * agentzh now has a long TODO list for himself.

[05:39] * gaal moosees

[05:56] *** chromo left
[06:07] *** zgh joined
[06:07] <svnbot6> r12642 | gaal++ | * t/README - English fix

[06:11] * agentzh feels like trying out mod_perl on feather.

[06:21] *** kanru joined
[06:23] <svnbot6> r12643 | agentz++ | [docs/feather/~/index.html]

[06:23] <svnbot6> r12643 | agentz++ | - updated this file using gen.pl on feather.

[06:24] *** lambdabot joined
[06:36] *** buetow joined
[06:47] *** zgh joined
[06:57] *** kanru joined
[07:02] *** zgh joined
[07:04] *** cookys joined
[07:07] *** zgh joined
[07:07] <svnbot6> r12644 | lwall++ | all_parse.t didn't interpolate filename correctly on failure.

[07:14] *** zgh joined
[07:16] <svnbot6> r12645 | lwall++ | Handle aBOMinations like the one currently in t/subroutines/param_signature.t

[07:16] <svnbot6> r12645 | lwall++ | (Also handle Unicode whitespace in general, while we're at it...)

[07:17] <TimToady> audreyt: that change uses oneOf.  Could probably be faster by short circuiting characters known to be in the ascii range.

[07:18] <TimToady> but my Haskell-fu isn't that good.

[07:21] <TimToady> I can't tell whether the 10% slowdown is due to that or due to more of all_examples.t working...

[07:21] <TimToady> (and other tests people have added recently)

[07:26] *** cookys_ joined
[07:32] *** nothingmuch joined
[07:40] *** cj joined
[07:40] <masak> "latest release" is out of synch on http://rt.openfoundry.org/Foundry/Project/?Queue=270

[07:40] <masak> it says "6.2.3"

[07:40] <lambdabot> Title: Pugs -- OSSF

[07:40] <masak> is someone able to fix that?

[07:52] *** kane-xs joined
[08:10] *** kane-xs joined
[08:28] *** Alias_ joined
[08:28] *** larsen joined
[08:29] *** drrho joined
[08:31] <integral> masak: what should it be?  the version that's on CPAN?

[08:34] <integral> ah, I see the problem, openfoundry thinks 6.2.12 < 6.2.3

[08:40] *** kanru2 joined
[08:56] <svnbot6> r12646 | agentz++ | [util/smartlinks.pl]

[08:56] <svnbot6> r12646 | agentz++ | - updated the comments

[09:01] *** ruoso joined
[09:12] *** chris2 joined
[09:18] *** azr|el joined
[09:54] *** elmex joined
[09:55] *** xdg joined
[10:03] <dolmans> ?eval my @subs = (sub foo { $_ * 2 }, sub bar { $_ * 3 });

[10:03] <evalbot_12646> Error:  unexpected "f" expecting comment, subroutine parameters, trait or block

[10:04] <dolmans> or the Synopsis outdated? though the sub name is meaningless there.

[10:21] <masak> integral: ah, so that's why. still strange though, because we didn't skip from 6.2.3 to 6.2.12, did we?

[10:21] <integral> no, but I guess no one bothered to create the versions on openfoundry

[10:21] <integral> it's not really part of the CPAN release process at all

[10:21] <masak> integral: it's a minor thing, but still it's good if the version number is correct

[10:21] <masak> methinks

[10:22] <integral> *nod*

[10:22] <masak> is there some sort of "ultimate" version comparison module somewhere?

[10:22] <masak> seems like there's always corner cases in version comparison

[10:23] <masak> what with 6.2.12 > 6.2.3

[10:23] <masak> and "alpha" and "beta" suffixes

[10:23] <masak> and so on, etc

[10:23] <integral> sadly not.  even version.pm is too picky at times

[10:25] <agentzh> masak: pugs' Test.pm can compare 6.2.12 and 6.2.3. :)

[10:26] <agentzh> masak: but not with "alpha" or "beta" suffix.

[10:26] <audreyt> first-class version object would be a win

[10:28] <audreyt> dolmans: named sub exprs is not yet supported in pugs

[10:29] <dolmans> audreyt: gotcha

[10:30] * audreyt goes looking at TimToady's haskell haxx0r

[10:31] <audreyt> TimToady: I think isSpace is already uunicody

[10:32] <audreyt> TimToady: but FEFF is not space

[10:32] <audreyt> I'll revert and implement my Haskell-prime encoding detection proposal :)

[10:33] <audreyt> # http://hackage.haskell.org/trac/haskell-prime/wiki/SourceEncodingDetection

[10:33] <lambdabot> Title: SourceEncodingDetection - Haskell Prime - Trac

[10:33] <audreyt> (which is, in part, based on perl5's encoding detection)

[10:38] <leo> audreyt: from which publically readable dir on feather should I start svnbot.pl? (I don't want to have another pugs repo in ~lt)

[10:39] <audreyt> ~audreyt/pugs

[10:39] <audreyt> but I use URL anyway

[10:39] <audreyt> (also it's not a svn checkout)

[10:42] <leo> thanks

[10:42] <audreyt> np :)

[10:42] <agentzh> is there any commandline utility for Pod::Simple::HTML?

[10:43] <audreyt> alias pod2html='perl -MPod::Simple::HTML -e Pod::Simple::HTML::go'

[10:47] <agentzh> audreyt: yeah, i know the one-liner. but there're too few options. :)

[10:47] <agentzh> for example, css file, index control, url prefix used by links, charset, title, and etc etc...

[10:48] <agentzh> so i'll start util/podhtm.pl if there's no such script. :)

[10:49] <agentzh> A lot of excellent features of Pod::Simple::HTML are just undocumented, which is really an unfortunate. :)

[10:51] <audreyt> please do feedback to allison so she can include it in the next release

[10:51] <audreyt> of Pod::Simple

[10:53] <agentzh> audreyt: okay

[10:55] *** norageek2 joined
[11:02] *** aholanda joined
[11:02] *** joke joined
[11:03] *** spinclad joined
[11:06] <svnbot6> r12647 | audreyt++ | * DrIFT.YAML: Make fromYamlBuf strict to save some more heap.

[11:09] <svnbot6> r12648 | audreyt++ | * Revert TimToady++'s Lexer patch as isSpace is already

[11:09] <svnbot6> r12648 | audreyt++ |   Unicode-aware.

[11:09] <svnbot6> r12648 | audreyt++ | * To handle BOM on UTF8 files (and UTF16, UTF32, etc),

[11:09] <svnbot6> r12648 | audreyt++ |   implement my source-code-encoding detection algorithm

[11:09] <svnbot6> r12648 | audreyt++ |   proposal for the next Haskell standard:

[11:09] <svnbot6> r12648 | audreyt++ |     http://hackage.haskell.org/trac/haskell-prime/wiki/SourceEncodingDetection

[11:09] <svnbot6> r12648 | audreyt++ |   Currently only UTF8 is handled; UTF16 and UTF32 throws

[11:09] <svnbot6> r12648 | audreyt++ |   an exception.

[11:09] <lambdabot> Title: SourceEncodingDetection - Haskell Prime - Trac

[11:24] *** joke left
[11:29] <agentzh> markstos: with the help of util/podhtm.pl, smartlinks in Differences.pod now work perfectly. (haven't uploaded to feather)

[11:29] <svnbot6> r12649 | agentz++ | - added util/podhtm.pl which is a POD to HTML

[11:29] <svnbot6> r12649 | agentz++ |   converter based on the excellent module

[11:29] <svnbot6> r12649 | agentz++ |   Pod::Simple::HTML.

[11:29] <svnbot6> r12650 | audreyt++ | * Support for UTF32LE, UTF32BE, UCS2LE, UCS2BE.

[11:29] <svnbot6> r12650 | audreyt++ |   Surrogate support coming soon...

[11:35] <svnbot6> r12651 | agentz++ | [util/podhtm.pl]

[11:35] <svnbot6> r12651 | agentz++ | - small tweaks

[11:44] <svnbot6> r12652 | agentz++ | [docs/feather/syn_index.html]

[11:44] <svnbot6> r12652 | agentz++ | - switched to the HTML version of the ``Differences''

[11:44] <svnbot6> r12652 | agentz++ |   document

[11:44] <svnbot6> r12652 | agentz++ | - added notes on the resynchronization cycles from the

[11:44] <svnbot6> r12652 | agentz++ |   Pugs repos. feather++

[11:44] <svnbot6> r12653 | audreyt++ | * Supprot for UTF16 surrogates: Now we can parse UTF16LE,

[11:44] <svnbot6> r12653 | audreyt++ |   UTF16BE source code, with and without BOMs.  That finishes

[11:44] <svnbot6> r12653 | audreyt++ |   all canonical Unicode (8/16/32) encodings. :-)

[11:46] <svnbot6> r12654 | agentz++ | [docs/feather/syn_index.html]

[11:46] <svnbot6> r12654 | agentz++ | - small wording fixes

[11:46] <svnbot6> r12655 | audreyt++ | * add -fglasgow-exts to Pugs.Parser.Program to silence warnings

[11:46] <agentzh> wow...

[11:47] <audreyt> :)

[11:47] * audreyt is a happy unicoder

[11:48] * agentzh is a happy htmler

[11:48] * wolverian is a tired lama

[11:48] <wolverian> llama I mean .. cough

[11:48] <audreyt> O wolverian lama

[11:49] <wolverian> :-)

[11:51] <agentzh> markstos: Differences.html is now updated by feather for every 1 hour, and the smartlinks such as L<S04/...> in it are also working properly:

[11:51] <agentzh> http://feather.perl6.nl/syn/index.html

[11:51] <lambdabot> Title: Official Perl6 Documentation

[11:51] <agentzh> and also:  http://feather.perl6.nl/syn/Differences.html

[11:51] <lambdabot> Title: Perl6::Perl5::Differences

[11:52] <agentzh> thanks to podhtm.pl. :)

[11:53] <wolverian> http://perlcabal.org/syn/Differences.html looks more official ;)

[11:53] <lambdabot> Title: Perl6::Perl5::Differences

[11:53] <agentzh> perlcabal?

[11:54] <gaal> moose moose

[11:54] <agentzh> oh, perlcabal has exactly the same IP as feather.perl6.nl. :)

[11:55] <agentzh> gaal: got some cycles?

[11:56] <gaal> yup!

[11:56] <agentzh> i just can't understand why http://feather.perl6.nl/~agentzh/syn/ is forbidden while http://feather.perl6.nl/syn/ is not.

[11:56] <lambdabot> Title: Index of /~agentzh/syn

[11:57] <agentzh> they're both symlinks pointed to ~agentzh/syn.

[11:57] <wolverian> agentzh, ~/public_html can't usually refer to outside the public_html

[11:57] <wolverian> (I mean, up the path)

[11:57] <agentzh> wolverian: oh...

[11:58] <agentzh> is there any workaround?

[11:58] <wolverian> I assume you can configure it, but you probably need to edit apache's own configuration to do it, i.e. you can't do it from .htaccess

[11:58] <wolverian> (I'm assuming though.. and in any case, you can give .htaccess the right to modify the setting in apache's config)

[11:58] <agentzh> no problem, i have root access.

[11:59] <wolverian> :-)

[12:00] <agentzh> but i don't know how to configure that...well...

[12:00] <agentzh> wolverian, gaal: do you know how to do that?

[12:02] *** Alias_ joined
[12:02] <agentzh> btw, i hope people will like my podhtm.pl. ;-)

[12:03] <agentzh> ...and even contribute to it.

[12:03] *** bpphillips joined
[12:04] <gaal> agentzh: sorry, don't know off hand

[12:04] <agentzh> gaal: no problem. :)

[12:05] <wolverian> I don't remember either.

[12:05] <gaal> this probably can help: http://httpd.apache.org/docs/2.0/howto/public_html.html

[12:07] <agentzh> looking

[12:07] *** cooljoke_ joined
[12:07] *** cooljoke_ is now known as cooljoke

[12:09] *** zgh joined
[12:16] <svnbot6> r12656 | agentz++ | [docs/feather/index.html]

[12:16] <svnbot6> r12656 | agentz++ | - added a link to feather's Synopsis index to feather's

[12:16] <svnbot6> r12656 | agentz++ |   homepage.

[12:22] *** Limbic_Region joined
[12:22] <svnbot6> r12657 | agentz++ | [docs/feather/index.html]

[12:22] <svnbot6> r12657 | agentz++ | - adjusted the page layout.

[12:22] <agentzh> oh, evalbot has been killed.

[12:22] <agentzh> ?eval 1+2

[12:25] <agentzh> okay, i've found the answer in feather's httpd.conf:

[12:25] <agentzh> Options SymLinksIfOwnerMatch

[12:27] *** weinig|away is now known as weinig

[12:36] *** Alias_ joined
[12:38] *** multic joined
[12:43] <agentzh> do i need to kill feather's apache and restart it so as to make my changes to httpd.conf take effect?

[12:43] *** Limbic_Region joined
[12:45] *** multic left
[12:45] *** macroron joined
[12:49] <agentzh> yay, it works!

[12:49] <agentzh> the FollowSymLinks option and the command "apachectl -k graceful" have solved my problem completely. :)

[12:50] <agentzh> gaal++ wolverian++

[12:51] <wolverian> yay :)

[12:52] <wolverian> if you're using debian's apache, I think the preferred method is 'invoke-rc.d apache restart', or so

[12:52] <wolverian> or reload

[12:53] <agentzh> debian's apache?

[12:53] <agentzh> etc/apache2?

[12:54] <wolverian> the one installed with apt-get :)

[12:54] <wolverian> i.e. not one that you've built locally

[12:54] <agentzh> ah

[12:55] <wolverian> the startup/restart/etc scripts are in /etc/init.d

[12:55] * agentzh has a lot of things to learn.

[12:55] <wolverian> I've aliased 'service' to 'sudo invoke-rc.d' :)

[12:56] <agentzh> okay

[12:58] <gaal> audreyt: in the source encoding detection proposal, how does xs@[_] work? and xs@[0x00, _] etc.?

[13:01] <gaal> is this new haskell prime syntax?

[13:12] * Limbic_Region wonders if he was the only one suprised and a little dismayed by Ponie buying the farm

[13:13] <[particle]> i certainly wasn't.

[13:17] <Limbic_Region> perhaps I shouldn't have been

[13:17] <Limbic_Region> I normally would have thought that it would have been offered up as a community project prior to getting the death blow

[13:18] <Limbic_Region> but then again, the smart folks making decisions probably realized that too many such projects spreads the volunteer work force too thin

[13:18] <[particle]> there was an offer some time ago for a new lead. nobody bit

[13:18] <Limbic_Region> particle - that's not the story I got

[13:18] * Limbic_Region pulls up the email

[13:19] <audreyt> gaal: no, it's just regular pattern matching

[13:20] <Alias_> This is open source, you can spread as thin as you like, if you are ok with things slowing down for a while

[13:20] <Alias_> Look at Module::Install...

[13:20] <Alias_> It's gone through a slow period while people are on other projects

[13:21] <Limbic_Region> the only email I have is from Andy Lester saying he was trying to get the project fired up again but I also recall a conversation on IRC with someone on the inside that said they were sifting through candidates and an announcement would be made soon

[13:21] <Limbic_Region> *shrug*

[13:21] <audreyt> hmm? new ponie news?

[13:22] <Limbic_Region> it's dead

[13:22] <audreyt> url?

[13:22] <Limbic_Region> perl6.announce

[13:22] <audreyt> (I know it's dead, just havn't seen the obituary)

[13:22] * Limbic_Region fetches a url

[13:22] <[particle]> bbiab

[13:22] <Limbic_Region> oh, it's on pugs blogs

[13:22] <Limbic_Region> that's where I first saw the headline

[13:23] *** agentzh joined
[13:23] <Limbic_Region> http://planetsix.perl-foundation.org/?

[13:23] <audreyt> ahh. http://www.nntp.perl.org/group/perl.perl6.announce/524

[13:23] <audreyt> it's not on pugs blogs

[13:23] <lambdabot> Title: nntp.perl.org - perl.perl6.announce (524)

[13:24] <Limbic_Region> audreyt - I meant the "journals" link from the pugs homepage

[13:24] <Limbic_Region> they are synonomous in my browser the way I have the links set up

[13:24] <audreyt> gotcha

[13:24] <Limbic_Region> so no chance to work on the weird Win32 IO thingy yet?

[13:24] <audreyt> obra++ # still preserved the "organ harvesting" meme

[13:24] * Limbic_Region has been conquering weird DNS problems the last 2 days for $work

[13:25] <audreyt> Limbic_Region: which test is that? :)

[13:25] <Limbic_Region> audreyt - t/examples/all_parse.t

[13:25] <Limbic_Region> the comment that says this is a horrible workaround that needs to be removed ASAP but is the only way Win32 currently works

[13:25] <audreyt> if $*OS eq any(<MSWin32 mingw msys cygwin>) { $f.debug = 1;

[13:25] <audreyt> }

[13:25] <audreyt> this?

[13:25] <Limbic_Region> $f.debug = 1; # should be completely unnecessary

[13:26] <Limbic_Region> yeah

[13:26] *** cjeris joined
[13:26] <Limbic_Region> in a nutshell, in File::Find if there are not 4 say "something" strategically placed - it bombs on Win32

[13:27] <Limbic_Region> interestingly enough say "" does not work the same as say 1; # the latter working for some definition of work

[13:27] <audreyt> yes, I remember that. booting into win32 now

[13:27] <Limbic_Region> but running pugs -d on this particular example on Win32 produces no debug output (at least for me)

[13:29] <Limbic_Region> audreyt - fwiw, it was confirmed by another Win32 user

[13:29] <Limbic_Region> cjeris that is

[13:31] *** weinig is now known as weinig|

[13:31] *** weinig| is now known as weinig|work

[13:32] <Limbic_Region> oh, you mentioned trying to upgrade to GHC 6.5, I might just do that as I have a few minutes

[13:33] <Limbic_Region> except http://www.haskell.org/ghc/download.html apparently doesn't list it - I'll check the IRC log as I thought you posted a link too

[13:33] <lambdabot> Title: The Glasgow Haskell Compiler

[13:34] <audreyt> oh no, my paralels image no longer boots

[13:34] <[particle]> great. she drops the laptop running os/x, and windows breaks.

[13:35] <audreyt> disk0s2: 0xe0030005 (UNDEFINED).

[13:35] <audreyt> that sounds like a HD corruption.

[13:35] <[particle]> sure does.

[13:35] <Limbic_Region> well, perhaps the head scratched as the laptop plummeted to the floor

[13:35] <Limbic_Region> but knowing how important it was for you to continue your work

[13:35] <audreyt> macbook supposedly has antiravity

[13:35] <audreyt> I mean, gravity detection

[13:35] <Limbic_Region> God saw fit only to damage the Win32 side

[13:37] *** vel joined
[13:38] <audreyt> I wonder what's the standard procedure for this

[13:38] <gaal> audreyt: so [1,2,3] in patmatch is the same as (1:2:3:[]) ?

[13:38] <audreyt> gaal: yes

[13:38] * Limbic_Region gets brave and attempts to build 6.5 on Win32 instead of waiting for the binaries

[13:38] *** norageek2 joined
[13:38] <agentzh> audreyt: btw, evalbot is down. so the feather site is no longer up-to-date. :)

[13:38] <audreyt> Limbic_Region: no, use the vinaries

[13:38] <audreyt> http://www.haskell.org/ghc/dist/current/dist/

[13:38] <lambdabot> Title: Index of /ghc/dist/current/dist

[13:38] <audreyt> scroll to bottom

[13:39] <audreyt> agentzh: evalbot is down but it will still autoupdate  :)

[13:39] <agentzh> oh? checking now...

[13:39] <agentzh> audreyt: yes, you're right. :)

[13:40] <Limbic_Region> audreyt - unless I am missing something, there is no way to tell where the binaries are as they all have the same naming convention

[13:40] <audreyt> http://www.haskell.org/ghc/dist/current/dist/ghc-6.5.20060823-i386-unknown-mingw32.tar.gz

[13:40] <audreyt> is the one you want

[13:40] <audreyt> "mingw32" is your platform

[13:40] * Limbic_Region thinks that is what he was downloading

[13:40] <audreyt> 20060823 is the latest snapshot

[13:41] <Limbic_Region> over 60MB for a binary distribution

[13:41] <audreyt> it's 45MB

[13:41] <Limbic_Region> oh, must have grabbed the wrong date then

[13:41] <audreyt> there's nothing there that's over 60mb, but some of them came close

[13:42] *** kanru2 is now known as kanru

[13:42] <Limbic_Region> audreyt - ghc-6.5.20060101-i386-unknown-mingw32.tar.gz   is listed as 61MB

[13:42] <Limbic_Region> just to nit

[13:42] <audreyt> ahh you grabbed the first one

[13:42] <audreyt> sorry, were scrolling backwards

[13:43] <audreyt> indeed you are right :)

[13:43] <Limbic_Region> yeah, wasn't realizing they were in ascending order but that makes sense

[13:43] * Limbic_Region believes his brain was damaged (hopefully not permanently) by the sustained high fever for the 2  weeks he was dealing with the acute symptoms of mononucleosis

[13:44] *** qmole joined
[13:45] <audreyt> oy

[13:49] *** Khisanth joined
[13:52] *** lambdabot joined
[13:53] *** plisk joined
[13:53] <agentzh> where should i put the timestamp in the Synopsis page? at the very begining, right after the `index', or in the VERSION section?

[13:54] <audreyt> very beginning

[13:54] <audreyt> I think

[13:54] <agentzh> audreyt: okay

[13:54] *** rashakil_ joined
[13:54] <Limbic_Region> audreyt - that particular snapshot does not include bin\ghc.exe ?

[13:54] <Limbic_Region> did the binary get renamed or something?

[13:55] <gaal> Limbic_Region: read INSTALL

[13:55] <lambdabot> Most guys don't understand me, but we really seem to connect.

[13:56] <Limbic_Region> ahhh

[13:56] <lambdabot> Whatever

[13:56] <Limbic_Region> given that it was a binary installation I would have assumed installation wasn't necessary

[13:56] * Limbic_Region bonks himself in the head with a cement brick

[13:56] <gaal> and you're blaming mono for brain damage....

[13:57] * Limbic_Region used the .msi last time

[13:59] <Limbic_Region> gaal - there is no configure so I will dig around somemore but if you happen to know of some Win32/MinGW install instructions - please let me know

[14:00] <gaal> sorry, no haven't used that patform in a while

[14:02] <gaal> try #haskell?

[14:02] <Limbic_Region> can't get there from here

[14:02] *** MacVince joined
[14:02] * Limbic_Region can only access channels/networks that feather allows

[14:04] <audreyt> Juerd: add #haskell to cgi-irc please? :)

[14:04] <svnbot6> r12658 | audreyt++ | * "use" and "require" of modules that has different encoding

[14:04] <svnbot6> r12658 | audreyt++ |   now works again.

[14:05] <Juerd> audreyt: You have root :)

[14:05] <Juerd> audreyt: I'm a bit busy getting my life back on tracks these days. I'm delegating as much as I can. Sorry about that.

[14:05] <audreyt> sure. "you have root" is good enough response

[14:06] <gaal> added

[14:06] <agentzh> Juerd: i'm adding timestamp to smartlinks.pl. audrey said it had better appear at the very beginning of the HTML page.

[14:06] <[particle]> #jifty and #svk would be nice, too

[14:06] <Limbic_Region> ok - the fact that there is no configure anywhere to be found leads me to believe this no workey

[14:06] <Juerd> agentzh: Somewhere at the top is a great place indeed.

[14:06] <gaal> adding. (are they both both on freenode?)

[14:06] <[particle]> yes

[14:06] <agentzh> okay, soon you'll see the effect. :)

[14:06] <Juerd> gaal: The "on" thing was my own hack. It no longer works since a system upgrade.

[14:06] <Juerd> gaal: We're back to servers and channels.

[14:07] <Juerd> Which it sees as two separate arrays, with no interrelation :|

[14:07] <Limbic_Region> ok, heading over to #haskell now - thanks everyone

[14:07] <Juerd> Limbic_Region: The thing lets you be in multiple channels, afaik...

[14:07] <Juerd>  "/join #haskell"

[14:09] <audreyt> Limbic_Region: a sec. I have a hypothesis about ghc win32...

[14:09] <Limbic_Region> Juerd - neato

[14:09] <Limbic_Region> audreyt - question already posed in #haskell but if you get to it first - great

[14:10] <Limbic_Region> it appears the channel is preoccupied with something ATM anyway

[14:10] *** evalbot_12658 joined
[14:13] <audreyt> Limbic_Region: my hypothesis is that the 20M of reduced size

[14:13] <audreyt> corresponds to a broken build that did not have ghc.exe and core binaries

[14:13] <svnbot6> r12659 | agentz++ | [util/smartlinks.pl]

[14:13] <svnbot6> r12659 | agentz++ | - added obvious timestamps to the resulting HTML pages

[14:13] <svnbot6> r12659 | agentz++ |   according to the suggestion of Juerd++.

[14:13] <audreyt> which means the last known-good version is http://www.haskell.org/ghc/dist/current/dist/ghc-6.5.20060819-i386-unknown-mingw32.tar.gz

[14:14] <audreyt> so please use that instead.

[14:14] <Limbic_Region> audreyt - my thought too except according to the build log - it worked

[14:14] * Limbic_Region needs to wander off but will be back

[14:14] <audreyt> I checked the build log, and I suggest not trust it

[14:14] <gaal> incomplete download?

[14:14] <gaal> insufficient disk space at unpacking site?

[14:14] <gaal> biteating worms?

[14:17] <audreyt> apparently I need to boot with macosx dvd to fix the disk

[14:18] <agentzh> Juerd: please comment on the brand new timestamps: http://feather.perl6.nl/syn/S02.html  :)

[14:18] <lambdabot> Title: S02

[14:20] <audreyt> Limbic_Region: sorry that I don't have a win32 anymore to fix the win32 problem -- I'll see what the apple repair people say tomorrow and hopefully I can get my old laptop back sufficiently to continue working on this

[14:21] * audreyt decides to sleep instead of trying potentially increasingly destructive repair mechanisms

[14:21] <audreyt> g'nite :) hopefully the biteating worms won't find their ways to my OSX data tonight...

[14:22] <agentzh> audreyt: sleep well. ;)

[14:23] <gaal> night audreyt

[14:24] *** b_jonas joined
[14:24] <[particle]> agentzh: i like the timestamp. is it possible to include the svn rev number?

[14:24] <agentzh> particle: oh, that's easy. :)

[14:24] <agentzh> adding now...

[14:25] <agentzh> particle: but there's problem: where should i put the revision number?

[14:26] <agentzh> *a

[14:26] <[particle]> how about in parens, after time

[14:26] <agentzh> but that way may be confusing

[14:26] <agentzh> we have different rev number for pugs and syns

[14:26] <[particle]> actually, i want both.

[14:26] * agentzh is shocked.

[14:27] <[particle]> so it can be determined what the sources were.

[14:27] <agentzh> well, i don't know where the pugs rev number stores.

[14:27] <agentzh> is it in the pugs tree?

[14:27] <[particle]> svn info

[14:28] <agentzh> i know the synopsis rev number in at docs/Perl6/Spec/

[14:28] <audreyt> ./pugs -v |grep Version

[14:28] <[particle]> i know it's in the parrot config file

[14:28] <[particle]> ah, great.

[14:28] <agentzh> ah, okay.

[14:29] <Juerd> agentzh: I like the timestamp

[14:29] <agentzh> Juerd: glad to hear that. :)

[14:29] <Juerd> agentzh: May I place a request for the time format? :)

[14:29] <agentzh> Juerd: oh, not really. :(

[14:29] <[particle]> perhaps you could format it as C<< <br/>using pugs revision 999 and synopsis revision 999. >>

[14:29] <Juerd> Okay then

[14:30] <agentzh> particle: it's getting longer and longer, i'm afraid. :)

[14:30] <[particle]> make the font smaller :)

[14:30] <Juerd> pugs r999, syn r999 :)

[14:30] <[particle]> sure, that works fine

[14:30] <agentzh> good

[14:31] <agentzh> particle: would like to add that to smartlinks.pl?

[14:31] <Juerd> I'm always for concise info :)

[14:31] <agentzh> i'm a bit tired.

[14:31] <Juerd> As long as it's clear enough :)

[14:31] <[particle]> agentzh: i'll try. but i haven't run smartlinks.pl yet

[14:31] <agentzh> i've been fight with feather these days. :)

[14:32] * [particle] builds a recent pugs

[14:32] <Juerd> agentzh: Has feather been naughty?

[14:32] <agentzh> Juerd: no, feather is cute.

[14:32] <agentzh> the ssh terminal here is terribly slow. :(

[14:32] <Juerd> Aw

[14:33] <agentzh> particle++

[14:34] <agentzh> particle: the synopsis rev info is in the file docs\Perl6\Spec\.spec-revision.

[14:35] <[particle]> thanks

[14:35] <markstos> agentz: Move the timestamps to the bottom of the page. Putting them at the top makes look they are most important thing to see.

[14:35] <markstos> The most prominent heading on the page should be "Synopsis 2: Bits and Pieces", because that's the key piece of information.

[14:36] <agentzh> markstos: to be honest, adding timestamps as html footer is much easier, but more poeple here tend to see the time at the very begining. :)

[14:36] <agentzh> *people

[14:37] <Juerd> markstos: The information is very relevant at the beginning. Not because it's key info, but because it's very dynamic, and indicates that the system works.

[14:37] <Juerd> markstos: Besides, POD starts after the index, so people scroll down anyway :)

[14:38] *** frederico joined
[14:38] <markstos> markstos: That's just my two cents as a professional website developer with some graphic design training...

[14:38] * markstos accidently replies to self. Weird. 

[14:39] <Juerd> markstos: In a marketing sense, you're absolutely right; but our goals differ... These documents are for interested people mainly...

[14:39] <Juerd> afk

[14:39] * Limbic_Region attempts ghc 6.5 from a snapshot earlier in the month

[14:39] <[particle]> C<nmake unoptimized> fails :(

[14:39] <agentzh> particle: you don't need to build pugs at all. :)

[14:39] <[particle]> oh? then how do i get the version info?

[14:39] <agentzh> util/smartlinks.pl doesn't require a working pugs.

[14:40] <audreyt> [particle]: fails how?

[14:40] <agentzh> i think the version info must be stored in the source tree.

[14:40] <[particle]> Writing new package config file... done.

[14:40] <[particle]> Installation failed for filepath at util\build_pugs.pl line 164.

[14:40] <[particle]> NMAKE : fatal error U1077: 'C:\WINDOWS\system32\cmd.exe' : return code '0xff'

[14:40] <[particle]> Stop.

[14:40] * agentzh hasn't built pugs for days.

[14:40] <audreyt> indeed the revinfo is src/Pugs/pugs_version.h

[14:40] <audreyt> so you can read that instead

[14:40] <[particle]> ah, great. i can read the header

[14:41] <audreyt> [particle]: nopaste a more complete log?

[14:42] <pasteling> "[particle]" at 144.81.84.139 pasted "win32 make failure" (85 lines, 3.9K) at http://sial.org/pbot/19251

[14:43] <audreyt> fixed.

[14:43] <Limbic_Region> audreyt - you are correct WRT snapshots being b0rk

[14:44] * Limbic_Region doesn't know who the right person to tell is so he will just throw it out in #haskell

[14:44] <audreyt> [particle]: r12660 should fix nmake

[14:46] <markstos> Juerd, check out how the darcs wiki works, which is moinmoin powered. They do included the changed timestamp on every page, but it's grayed out the bottom, so you have to look for it: http://wiki.darcs.net/   I think that's sufficient if anyone wants to check the freshness.

[14:46] <svnbot6> r12660 | audreyt++ | * modify build_pugs probing for older win32 Cabal

[14:46] <lambdabot> Title: FrontPage - DarcsWiki

[14:47] <markstos> Juerd, agentz: also, "S02.html" can removed from the timestamp, since it just repeats the URL. Something more useful would the source filename, like "Perl6/Spec/Operators.pod".

[14:47] <markstos> anyway, I'm grumpy and should get back to work.

[14:48] <audreyt> markstos: kindly hack util/smartlinks.pl however you see fit :)

[14:48] <markstos> Thanks to you both for your help with the documentation!

[14:48] <[particle]> audreyt: fixed. make continues...

[14:48] <[particle]> audreyt++

[14:48] <audreyt> [particle]++

[14:48] <markstos> audreyt: Agreed. I'll proceed in the wiki style once I return to FreeTime.

[14:48] <agentzh> markstos++

[14:49] <audreyt> speaking of FreeTime... I need to wake up early for $job tomorrow too

[14:49] * audreyt fades

[14:49] *** markstos left
[14:50] <cjeris> $job--

[14:52] *** mdiep_ is now known as mdiep

[14:55] * agentzh takes a break.

[14:58] <Limbic_Region> particle - you on Win32 ATM?

[14:59] <[particle]> yes

[14:59] <[particle]> crap, another build error

[14:59] <Limbic_Region> me too

[15:00] <Limbic_Region> thought it was related to my recent switch to ghc 6.5

[15:00] <[particle]> util\build_pugs.pl :383 ?

[15:00] <Limbic_Region> just a sec

[15:00] <Limbic_Region> no, mine looks different

[15:00] <Limbic_Region> let me nopaste

[15:01] <[particle]> it seems there's a lot of assumptions in pugs now that Judy is installed

[15:01] *** marmic joined
[15:01] <[particle]> i don't have Judy

[15:02] <agentzh> particle: Judy is in the pugs source tree.

[15:02] <[particle]> is it required, or optional and broken if you don't have it?

[15:02] <Limbic_Region> she's a real sweet lady, but nearly as sexy as Perl

[15:02] <[particle]> hrmm

[15:02] <agentzh> particle: your pugs has errors while compiling Judy?

[15:02] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "Current Win32 build error" (42 lines, 1.9K) at http://sial.org/pbot/19252

[15:02] <Limbic_Region> particle - see third-party

[15:02] * Limbic_Region believes that's where Judy is

[15:02] <pasteling> "[particle]" at 144.81.84.139 pasted "win32 make error (Judy ??)" (197 lines, 13.4K) at http://sial.org/pbot/19253

[15:02] <agentzh> particle: if yes, then that's my fault. :)

[15:03] <agentzh> looking now

[15:03] <[particle]> lr: are you building unoptimized?

[15:04] *** bpphillip1 joined
[15:05] <agentzh> it seems to me the C part of Judy has been successfully built, no?

[15:06] <Limbic_Region> particle - I never build unoptimized

[15:06] <Limbic_Region> my Judy error is different than yours anyway

[15:06] <agentzh> LR: "nmake fast"

[15:06] * Limbic_Region blames agentzh

[15:06] <Limbic_Region> how is fast different from unoptimized?

[15:07] <agentzh> LR: you may have a try...much faster!

[15:07] <agentzh> at leaset on my win32 box.

[15:08] <agentzh> LR, particle: you two are all having problems with the HS part of Judy, rather than the C part.

[15:08] <agentzh> i wrote the code which builds the C Judy on Win32.

[15:08] *** cookys joined
[15:08] <Limbic_Region> agentzh - faster build but is the resulting executable faster?

[15:08] *** lollan joined
[15:09] <agentzh> LR: of course, the resulting executable is *a bit* slower.

[15:09] <Limbic_Region> I don't mind pugs taking an hour to build - it's all about the runtime

[15:09] <agentzh> fast == unoptimized

[15:09] <agentzh> LR: but pugs is changing very fast.

[15:09] <Limbic_Region> particle - what version of ghc are you running

[15:09] <agentzh> so i have to rebuild pugs over and over again.

[15:10] <Limbic_Region> agentzh - I seldom have to build from scratch so keeping up to date is not bad

[15:10] <agentzh> i got the same error as particle.

[15:10] <agentzh> Win32, GHC 6.4.2 here.

[15:10] <Limbic_Region> I had no problems with Pugs with GHC 6.4.2 but I literally just switched to 6.5 within the last half hour

[15:10] <agentzh> i think only audreyt or cmarcelo can fix this kind of things. :)

[15:11] * Limbic_Region is wondering if it is related to that

[15:11] * agentzh has no clue

[15:11] <Limbic_Region> I did try removing stuff from third-party as that has been the solution in the past

[15:11] <Limbic_Region> so I am rebuilding now

[15:12] <agentzh> realclean now...

[15:12] <Limbic_Region> actually - I think removing stuff from 3rd party did fix it as it is beyond the point of failure last time

[15:13] <Limbic_Region> if it fails this time, it will be for a new reason

[15:13] <agentzh> hehe

[15:13] * Limbic_Region sticks his tongue out at particle for being left behind in the dust

[15:14] <Limbic_Region> is Win32 your primary environment agentzh?

[15:14] <agentzh> LR: true

[15:14] <[particle]> 6.4.1

[15:14] *** kanru joined
[15:15] <Limbic_Region> so how much do you know about haskell - specifically as it relates to pugs internals

[15:15] * [particle] cleans the puppy

[15:15] * agentzh knows very little.

[15:15] <Limbic_Region> particle - if you feel like throwing chicken bones - try this rmdir /s third-party; sv[kn] up; perl Makefile.PL; nmake fast

[15:16] <agentzh> it seems that realclean helps.

[15:16] <Limbic_Region> agentzh - not in this case

[15:16] <agentzh> why?

[15:16] <Limbic_Region> the realclean often misses files in 3rd party that are perpetually added after it is realized they should be included too

[15:17] <audreyt> 6.4.1 cabal specific problem.

[15:17] <audreyt> fixed.

[15:17] <Limbic_Region> the entire 3rd party removal is overkill btw - I just didn't know which files in there needed to be removed

[15:17] <agentzh> LR: i think i added many "rm" like commands to pugs' main Makefile.PL

[15:17] <Limbic_Region> ahh

[15:17] <Limbic_Region> audreyt - since you are either working in your sleep or not in bed yet - did you see my /msg

[15:17] <agentzh> yes, removing the whole 3rd party is indeed overkill.

[15:18] <Limbic_Region> yes, but cpu cycles are cheap - especially when I am wasting time chatting here

[15:18] <agentzh> yay, i've successfully built my pugs!

[15:18] <svnbot6> r12661 | audreyt++ | * in GHC 6.4.1, the third-party/installed/ layout is different,

[15:18] <svnbot6> r12661 | audreyt++ |   so we need to probe to another place to put Judy .o files

[15:18] <svnbot6> r12661 | audreyt++ |   into the HsJudy .a file.

[15:18] <audreyt> Limbic_Region: no I did not.

[15:18] <[particle]> hih! 'nmake clean' fails due to 'line too long'

[15:18] <audreyt> did you perhaps forget to identify to nickserv?

[15:18] <agentzh> particle: "realclean"?

[15:19] <audreyt> [particle]: svn up, rm -rf third-party, svn up third-party, make

[15:19] <audreyt> [particle]: that sequence should work. sorry for not considering GHC 6.4.1

[15:19] <Limbic_Region> no , but here it is just in case

[15:19] <Limbic_Region> audreyt WRT the Win32 IO problem (t/examples/all_parse.t) - I noticed this in the build (using GHC 6.5) "Could not find module `System.Console.Readline':"

[15:19] <[particle]> agentzh: switched from nmake 1.50 to 7.1... much better

[15:20] <agentzh> particle: nmake 7.10.3077 here. :)

[15:20] <[particle]> yes, me too

[15:20] <[particle]> just forgot to set my environment

[15:20] <Alias_> nmake, ugh :/

[15:20] <agentzh> heh

[15:20] <agentzh> Alias!

[15:20] <Alias_> Have you tried with dmake?

[15:20] <Alias_> We're already swapping from nmake to dmake for Perl 5 on Win32

[15:21] <agentzh> really?

[15:21] <Alias_> (since nmake is reporting to not work on Vista any more)

[15:21] <[particle]> fabulous.

[15:21] <Alias_> At least, according to me Micrsoft Corporate Support flatmate

[15:21] <[particle]> dmake?

[15:21] <agentzh> microsoft is working on xmake.

[15:21] <Alias_> my

[15:21] <agentzh> a ms guy told me that.

[15:21] <Limbic_Region> audreyt - would the missing System.Console.Readline conceivably have anything to do with the IO problem or without Win32 you have no way of making that guess?

[15:21] <Alias_> What'sit do?

[15:22] <agentzh> xmake is the next generation of nmake.

[15:22] <agentzh> and the vc team is working on that.

[15:22] <Alias_> So it's going to break everything again?

[15:22] <Limbic_Region> IOW - they are going to start shipping a make that works out of the box

[15:22] <agentzh> presumbly. ;)

[15:22] <Alias_> And we'll need to download Visual Studio to use it? :)

[15:22] <Limbic_Region> instead of the crappy 1.5

[15:22] <audreyt> Limbic_Region: not going to metter

[15:22] <Limbic_Region> k

[15:22] <Alias_> Limbic_Region: You could just use gnu make

[15:23] <agentzh> the win32 version of gmake has a lot of bugs.

[15:23] <Limbic_Region> Alias_ - I have 2 versions of nmake.exe, msys make, MinGW nmake32-make, and dmake

[15:23] <Alias_> As of the very latest 3.81 from last month, it incorporates the MinGW stuff by default

[15:23] <Limbic_Region> I think I got it covered

[15:23] <agentzh> i just can't remember how many bug reports i've sent to their mailing list.

[15:23] <Alias_> So it all works now

[15:23] <Alias_> The new Strawberry Perl alpha 2 will use it

[15:23] <Limbic_Region> the hardest part with having all those makes is remembering to set your environment correctly so they don't step on each other

[15:24] <Limbic_Region> for instance - if you have both mingw and msys in your path then building parrot using mingw doesn't work

[15:24] <Alias_> msys?

[15:24] <Alias_> Oh that's the "extra tools" or something right?

[15:24] <Limbic_Region> yes, msys - the companion to MinGW

[15:25] <Limbic_Region> http://www.mingw.org/ # second paragraph

[15:25] <lambdabot> Title: MinGW - Home

[15:25] <Alias_> We've managed to avoid it so far

[15:26] *** hexmode joined
[15:26] <Limbic_Region> audreyt - GHC 6.5 on Win32 does not fix the heap problem fyi

[15:26] <Alias_> audreyt: Why aren't you alseep

[15:26] <Alias_> hang on, why aren't _I_ asleep

[15:26] <Limbic_Region> she is

[15:27] <Limbic_Region> it looks like pugs is going to successfully build using ghc 6.5 - as soon as it is finished I am off to find lunch

[15:28] * [particle] rebuilds pugs

[15:35] <Limbic_Region> yep - pugs successfully rebuilt

[15:35] *** norageek joined
[15:35] * Limbic_Region svn ups just to be sure the latest checkin(s) didn't mess things up

[15:37] <agentzh> gaal: does `make smoke' use Test::TAP::Model to generate a .yml file?

[15:38] <agentzh> gaal: i think smartlinks.pl itself shouldn't serve as a test harness anyhow.

[15:38] <agentzh> gaal: it should read an existing .yml data file and represent that in the HTML pages.

[15:39] <agentzh> of course, the current tests.yml is far from ideal. The serialization method of Test::TAP::Model should be used. :)

[15:40] <agentzh> ah, Test::TAP::Model looks very nice.

[15:40] * Limbic_Region heads off to lunch

[15:40] *** fglock joined
[15:44] <agentzh> gaal: can you manage to obtain a typical .yml file from a real smoke which i can work on directly?

[15:44] * agentzh waves &

[15:44] *** agentzh left
[15:52] *** buetow joined
[15:57] <svnbot6> r12662 | agentz++ | [docs/feather/syn_index.html]

[15:57] <svnbot6> r12662 | agentz++ | - s/between Perl and Perl6/between Perl 5 and Perl 6/

[16:04] *** Eimi joined
[16:06] *** Daveman joined
[16:13] <gaal> Test::TAP::Model doesn't have a native serialization format. But tests.yml that yaml_harness produces just happens to be contain a node (called 'meat') that TTM knows how to construct an instance from (see new_with_struct, util/testgraph.pl line 25)

[16:13] <gaal> i'll start a smoke to send you.

[16:13] *** yhsuan joined
[16:14] <gaal> audreyt: doesn't your autobuild pugs run a smoke?

[16:19] <TimToady> I just did a smoke.

[16:19] *** lisppaste3 joined
[16:20] <TimToady> http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.12-r12661-linux-normal--1156435179-1591--11984-11342-642-1381-1498-70--2926b33cc668bf72c27837926df9bf23.html

[16:20] <lambdabot> Title: TAP Matrix - Thu Aug 24 15:58:13 2006 GMT

[16:21] <gaal> TimToady: could you scp your tests.yml to feather or somewhere else agentzh can moose it?

[16:21] <TimToady> It would be lovely if smokes were marked with deltas from the last smoke...

[16:22] <gaal> yes!

[16:22] *** Psyche^ joined
[16:22] <gaal> for a while someone put 'make test' outputs on a mediawiki

[16:23] <gaal> and nothingmuch was working on aggregating smoke results, but I don't know if that included history

[16:23] <[particle]> you want smokestat, similar to diffstat

[16:23] <TimToady> I put tests.yml into http://wall.org/~larry/tests.yml

[16:24] <gaal> thanks, TimToady

[16:24] <gaal> the smokeserver currently works on client-rendered html matrices

[16:25] <gaal> we should update to use Best Practical's code, which moves the rendering to the server side

[16:25] <gaal> that way the serialized TTM data -- suitable for diffing/aggregating/otherwise moosing is all in one place

[16:25] <TimToady> the rendering cranks the CPU for quite a while...

[16:25] <TimToady> so you'd want to cache it.

[16:25] <gaal> yeah, that should be fixed too :)

[16:26] <TimToady> fixing is also good.  :)

[16:26] <gaal> one WTDI (resulting in smaller html, too!) would be to bite the bullet and move to javascript

[16:27] <TimToady> now where did I put that JS backend for pugs...

[16:28] <gaal> gotta run off, bye folks

[16:29] <TimToady> ich auch. &

[16:30] <TimToady> moi aussi. &

[16:30] <TimToady> watashi mo &

[16:30] <TimToady> kai ego &

[16:30] <gaal> הגם אתה, לארי?

[16:31] <TimToady> heh

[16:31] <TimToady> but you spelled it backwards.  :)

[16:31] <[particle]> what interesting word usements you structure

[16:32] *** neoesque joined
[16:32] <TimToady> anyway, going for a walk. &

[16:37] *** Psyche^ is now known as Patterner

[16:46] *** nothingmuch joined
[16:51] *** weinig|work is now known as weinig|away

[16:58] *** dazjorz joined
[16:59] <dazjorz> <b_jonas> and then there's this other bot that prints titles of urls on #perl6

[16:59] <dazjorz> lemme try that...

[16:59] <dazjorz> http://www.google.com/search?hl=en&q=random+text+string+that+shorten+will+shorten&btnG=Google+Search

[16:59] <lambdabot> Title: random text string that shorten will shorten - Google Search

[16:59] <dazjorz> Yes! :D

[17:02] *** justatheory joined
[17:04] *** DaGo joined
[17:08] *** Southen_ joined
[17:11] *** larsen joined
[17:38] *** frederico joined
[17:49] <Limbic_Region> wow - pugs on ghc 6.5 is MUCH faster

[17:55] *** drrho joined
[17:56] <Limbic_Region> in the past, what did a plus in front of a variable in a sub signature indicate?

[17:56] <svnbot6> r12663 | fglock++ | * v6 - working Pugs/Grammar/P6Term.pm; can be tested by uncommenting

[17:56] <svnbot6> r12663 | fglock++ | the 'use' line at P::G::Expression.pm;

[17:56] <svnbot6> r12663 | fglock++ | - included the precompiled P6Term.pmc, which is needed to bootstrap

[17:56] <Limbic_Region> that it was optional?

[17:57] <Limbic_Region> s/signature/prototype/

[17:57] <Limbic_Region> or not

[18:00] <Limbic_Region> no one remembers?

[18:07] <Limbic_Region> ?eval my $foo = <HellO>; $foo.lc

[18:07] *** evalbot_12658 is now known as evalbot_12663

[18:07] <evalbot_12663> "hello"

[18:17] <svnbot6> r12664 | Limbic_Region++ | Parse issue: lc - fixed

[18:26] <svnbot6> r12665 | Limbic_Region++ | Fixed example not to assume being ran from .

[18:26] <svnbot6> r12666 | Limbic_Region++ | Added -Iblib6/lib as many examples use ext/

[18:32] <svnbot6> r12667 | Limbic_Region++ | Added 'p5' to directories skipped as examples include p5 code too

[18:36] <Limbic_Region> ?eval my ($true,$false,$string,$defined,$last); sub infix:{qn'\\'} ($lhs,$rhs){ $rhs // $lhs }; $last //= [\\] ($true,$false,$string,$defined,$last); $last;

[18:36] *** evalbot_12663 is now known as evalbot_12666

[18:36] <evalbot_12666> Error:  unexpected "[" expecting comment, "\\(" or term

[18:36] * Limbic_Region thinks that is a pugs parse bug - can anyone confirm/deny?

[18:38] <[particle]> does [\\] operate on a list, or array?

[18:38] <Limbic_Region> particle - the infix definition is in the ?eval

[18:38] <TimToady> actually, you can't have a [\\] reduce operator.

[18:39] *** cognominal joined
[18:39] <TimToady> now that I think about it...

[18:39] <Limbic_Region> not my code btw - I am trying to clean up examples

[18:39] <Limbic_Region> TimToady - see examples/cookbook/01strings/01-02default-variables.pl

[18:39] <[particle]> can {qn'\\'} be replaced with <'\\'> ??

[18:39] <Limbic_Region> line 76

[18:39] <TimToady> yes, I know, I saw it recently.

[18:40] <TimToady> and it didn't even occur to me at the time that [\\] was illegal

[18:40] <TimToady> [\...] is a metasyntax

[18:40] <Limbic_Region> TimToady - also, what did it used to mean when there was a plus in front of a variable in a sub's signature?

[18:40] <TimToady> that's the old named arg notation.  would be :$foo now

[18:41] <Limbic_Region> k - will fix

[18:41] *** fglock joined
[18:42] <TimToady> no, I'm wrong about [\\]

[18:42] <TimToady> S03 says it chooses the infix operator in case of ambiguity

[18:42] <TimToady> so that's a reduce of \\ if there is a \\ operator

[18:43] <TimToady> and the triangular version would be [\\\]

[18:43] <TimToady> the tricky thing is that the name of the \\ operator is infix:<\\\\>

[18:43] <TimToady> since \ has to be backwhacked in <...>

[18:44] <Limbic_Region> so why is that failing to parse correctly then I wonder

[18:44] <TimToady> which is why I think I changed it to infix:{q:n'\\'}, if I recall

[18:44] <TimToady> I think infix: and such aren't correctly modifying the parser currently.

[18:45] <TimToady> It's not recognizing Unicode operators either.  I noticed the set operators didn't recognize ∩ and such

[18:46] <TimToady> also, it's possible q:n isn't implemented yet...

[18:46] <svnbot6> r12668 | Limbic_Region++ | Changed old named arg +$var to :$var - TimToady++

[18:46] <TimToady> no, it is implemented, yay

[18:47] <Limbic_Region> I still can't get any incantation to parse as far as pugs is concerned so I am moving on

[18:47] <TimToady> so is qn//

[18:47] <TimToady> because [\\] is not going to be recognized if \\ isn't also.

[18:48] <TimToady> anyway, I tried a lot of permutataions too.  I agree with moving on for now

[18:49] <TimToady> one thing you could do is slurp the whole file in each time and examine it to see if it contains 'use v6', then eval (if that works).  That would get rid of the failures with p5 not be recognized.

[18:49] <TimToady> alternately, go through and rename all the p5 code with -p5 in the name

[18:49] <TimToady> but that'll probably break some things.

[18:49] *** zgh joined
[18:50] <Limbic_Region> TimToady - I started to do s/script-p5.pl/script.p5/

[18:50] <Limbic_Region> I wasn't sure of the proper way of removing the original file from the repo though so I left it alone

[18:50] <[particle]> svn rm foo

[18:50] <Limbic_Region> down to less than 30 examples not parsing

[18:51] <TimToady> I think that .p5 was originally proposed, and for some reason was rejected.  don't remember

[18:51] <TimToady> which is why we ended up with -p5.pl

[18:52] <Limbic_Region> if you want white space between the hash name %hash and the key <key> you need to using a leading . right as in %letter    .{$hostname} = $letter; # ??

[18:52] <TimToady> but if eval can be made to test parsability, then I don't see why slurping and checking for "use v6" wouldn't work.

[18:52] <TimToady> and then we could test any text file, not just ones ending in a particular extension.

[18:52] <Limbic_Region> true

[18:53] <TimToady> (unix programmers being loathe to put .pl on a file just to make it executable for Windows folks...)

[18:53] <PerlJam> TimToady: Have you listened to the recent perlcast interview with pmichaud?  There's some major kudos for you in there  :)

[18:53] <Limbic_Region> ?eval my %hash = 1..4; %hash    .<3>;

[18:53] *** evalbot_12666 is now known as evalbot_12668

[18:53] <evalbot_12668> Error:  unexpected "." expecting comment, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input

[18:54] <Limbic_Region> that's a pugs parse bug isn't it?

[18:54] <Limbic_Region> or has that whitespace thing changed too

[18:58] *** mdiep_ joined
[19:01] *** ruz joined
[19:03] <Limbic_Region> at least 4 or 5 of the examples are blowing up with the pugs error: pugs: Control.Concurrent.STM.atomically was nested

[19:03] *** cognominal left
[19:06] <fglock> mini-blog: http://use.perl.org/~fglock/journal/30742

[19:06] <lambdabot> Title: Journal of fglock (5723)

[19:07] *** cognominal joined
[19:10] <TimToady> PerlJam: uh, no, I haven't listened to it.  My head's already way too big.  What's the url?  :)

[19:11] <TimToady> Limbic_Region: that would have to be written %hash\  .<3> now

[19:11] *** Southen joined
[19:11] <PerlJam> For the audio it's http://www.perlcast.com/audio/Perlcast_Interview_032.mp3

[19:11] *** mauke joined
[19:11] <TimToady> postfix ops *never* *ever* have whitespace before them

[19:11] <TimToady> (but "unspace" doesn't count as whitespace)

[19:12] <PerlJam> TimToady: in  the beginning pmichaud sings the praises of perl, and then the regex-refactor :)

[19:13] <Limbic_Region> Thanks TimToady

[19:13] <svnbot6> r12669 | Limbic_Region++ | Changed my $test_file = shift || 'test' to @*ARGS[0]

[19:13] <Limbic_Region> fixing a lot of these isn't difficult

[19:14] <Limbic_Region> unfortunately that particular test is now resulting in pugs: Control.Concurrent.STM.atomically was nested - still going to check it in

[19:15] <TimToady> well, we're probably s/atomically/contend/ at some point anyway, so don't sweat that too much.  Probably just running into an unimpl.

[19:15] <TimToady> or is the test not actually saying "atomically"?

[19:16] <svnbot6> r12670 | Limbic_Region++ | changed %hash  .<key> to %hash\  .<key> TimToad++\nUnfortunately it now bombs with pugs: Control.Concurrent.STM.atomically was nested

[19:19] *** bernhard joined
[19:21] <[particle]> shame on patrick. not once did he mention that pge needs tests :(

[19:21] <svnbot6> r12671 | Limbic_Region++ | Added FindBin::Dir as not guaranteed to be run from .

[19:23] <Limbic_Region> TimToady - WRT atomically, I didn't dig in to the guts just running pugs -c

[19:24] <Limbic_Region> is the correct syntax for a p5 require 'file.pl' still require 'file.pl'; # ??

[19:24] <PerlJam> [particle]: you can mention it in your perlcast interview  :)

[19:27] <Limbic_Region> anyone have any idea what the following LOC might be trying to do:  my $life = 10 .?. 20;

[19:27] <[particle]> was that ever perl 6 syntax?

[19:28] <TimToady> there's a prior def of infix:<.?.>

[19:28] <Limbic_Region> dunno - I find it hard to keep up being a casual observer but it is used in more than one place in this example

[19:28] <TimToady> again, that appears not to be working

[19:28] <Limbic_Region> TimToady - you have already looked at all these then?

[19:28] <TimToady> I've at least glanced at most of them.

[19:29] <Limbic_Region> ok, will leave it then as it *should* work

[19:29] <Limbic_Region> what about the require 'file.pl'; ?

[19:29] *** cmarcelo joined
[19:29] <Limbic_Region> that's the only HOP example I haven't been able to fix (though you fixed most of them)

[19:30] *** spoop joined
[19:35] *** vel joined
[19:35] <svnbot6> r12672 | Limbic_Region++ | Changed old named arg +$var to :$var

[19:38] <svnbot6> r12673 | Limbic_Region++ | Used FindBin::Dir as not always run from . but require 'file.pl' still b0rk

[19:42] <Limbic_Region> YAY - down to only 22 examples that aren't parsing

[19:47] * Limbic_Region is going to count how many have that STM problem

[19:47] <TimToady> it's odd--I've never seen the STM problem.

[19:47] <TimToady> I wonder if it's Windows related...

[19:48] <Limbic_Region> likely

[19:48] <[particle]> what stm problem?

[19:48] <Limbic_Region> Win32 is the redheaded stepchild in perl 6 development

[19:49] <Limbic_Region> particle - many of the examples are having an stm problem - wait a sec and I will have a list

[19:49] <[particle]> using pugs, or v6, or what?

[19:49] <Limbic_Region> pugs

[19:51] <Limbic_Region> particle - for instance, try pugs examples/nested_loops/coroutine.pl

[19:53] <[particle]> wow, that barfed

[19:54] <Limbic_Region> pugs: Control.Concurrent.STM.atomically was nested right?

[19:54] <[particle]> no

[19:54] <Limbic_Region> oh, what did you get?

[19:55] <[particle]> no output to screen, just ms error reporter trying to send data to ms

[19:55] <[particle]> exception code 0xc0000005

[19:55] <Limbic_Region> wonder if that's a difference in ghc version

[19:55] <Limbic_Region> *shrug*

[19:56] <[particle]> *brr*

[19:57] <Limbic_Region> particle - let me give you another example and see if it has the same exception

[19:58] <Limbic_Region> pugs -c examples/vmethods/time.pl

[19:58] <[particle]> same

[19:59] <Limbic_Region> ok, so same problem - different output

[20:03] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "The following examples on Win32/MinGW/GHC 6.5 bomb with: "pugs: Control.Concurrent.STM.atomically was nested"" (6 lines, 204B) at http://sial.org/pbot/19259

[20:03] <Limbic_Region> audreyt - apparently more Win32 only bugs

[20:04] <cmarcelo> Limbic_Region: nested error here too (linux64 + ghc 6.5) on time.pl at least

[20:06] <Limbic_Region> good to know though about all I am good for is identifying the bugs - not fixing them

[20:07] *** jferrero joined
[20:10] <Limbic_Region> well, I am content with examples for the moment anyhow - between TimToady and myself, more than half the original parse-fails are now passing

[20:16] *** cmarcelo left
[20:35] *** lollan joined
[20:43] *** bpphillip1 left
[20:44] *** aufrank joined
[20:57] *** mdiep_ joined
[20:59] *** beppu joined
[21:04] *** Alias_ left
[21:15] *** penk joined
[21:27] *** kane-xs joined
[21:33] *** DaGo joined
[21:36] *** avarab joined
[21:46] *** shachaf joined
[21:47] *** avarab_ joined
[22:03] *** Odin- joined
[22:04] *** kanru joined
[22:05] *** marksto1 joined
[22:15] <svnbot6> r12674 | markstos++ | typo fix for 'minutes' and other minor phrasing cleanups on syn_index.html

[22:16] *** cmarcelo joined
[22:30] *** KxAx joined
[22:33] *** KxAx left
[22:40] *** Limbic_Region joined
[22:41] *** ludan joined
[22:57] *** silug joined
[23:03] *** cjeris left
[23:16] *** lisppaste3 joined
[23:25] *** weinig|away is now known as weinig

[23:29] *** stevan joined
[23:32] *** mako132_ joined
[23:33] *** avarab_ is now known as avar

[23:41] *** diakopter joined
[23:41] *** mako132_ joined
[23:45] *** justatheory joined
