[00:00] <Alias_> Well, it would be nice from a PR point of view to have it formalised and wrapped up in a candy-shell installer (windows) or apt-get'able (etc)

[00:00] <Alias_> And might actually finally mean I don't have to listen to the Duke Nukem jokes any more :)

[00:01] <avar> ascii art of the duke in the installer?:)

[00:01] <Alias_> That would be hilarious :)

[00:01] <[particle]> i think duke nukem is under misc/ somewhere in the repo... ;)

[00:01] <Alias_> A camel with a shotgun and strippers

[00:01] <avar> heh

[00:02] <TimToady> I think when people start playing with 6.2.13 they'll realize it's really getting rather solid already.

[00:02] * Alias_ nods

[00:02] <Alias_> I was just thinking in more symbolic terms

[00:03] <TimToady> and I really don't mind the anonymonks proving themselves to be idiots in front of everyone.  well, okay, I mind a little...

[00:04] *** buetow joined
[00:07] <TreyHarris> TimToady: which anonymonks are you referring to?  not names, just what comprehension results in the subset of anonymonks to which you refer? :)

[00:12] <TimToady> it seems a little odd to use the word "comprehension" on that particular subset

[00:12] *** dakrone joined
[00:13] *** hexmode joined
[00:16] *** weinig joined
[00:17] <TimToady> Parents' Back To School Night &

[00:18] *** nekokak joined
[00:46] *** Pomin joined
[00:46] *** mako132_ joined
[00:59] *** lollan joined
[01:01] *** buubot joined
[01:11] *** stef_ joined
[01:14] <svnbot6> r14411 | mgrimes++ | Fixed a number of old /regex/ style smartlinks and broken smartlinks.

[01:41] <svnbot6> r14412 | fglock++ | v6/emitter(2)

[01:41] <svnbot6> r14412 | fglock++ | - added README

[01:41] <svnbot6> r14412 | fglock++ | - fixed Value->Scalar conversion

[01:41] <svnbot6> r14412 | fglock++ | - updated HACKING, TODO

[01:41] <svnbot6> r14412 | fglock++ | - some code cleanup

[01:43] *** mdiep joined
[01:55] *** cognominal joined
[02:03] *** cjeris left
[02:04] *** Alias__ joined
[02:15] *** dduncan joined
[02:16] *** frederico joined
[02:16] <dduncan> fyi, I just smoked the final release of Pugs 6.2.13; http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.13-r0-darwin-normal--1161137352-5402--17954-17954-0-4638-747-0--f074b12a389a4acf75fbc278e10802cd.html

[02:16] <lambdabot> Title: TAP Matrix - Wed Oct 18 01:16:18 2006 GMT, http://tinyurl.com/yec5dj

[02:16] <dduncan> the results are the same as for pre1, except that it was faster this time

[02:17] <dduncan> specifically, it took 90 minutes today, vs 103 minutes for pre1 the other day, and around 135 minutes a couple months ago when I last did smokes of Pugs

[02:17] <dduncan> I attribute the 13 minute difference to that I was doing some other resource-intensive activities on the computer (watching videos, etc), when smoking pre1, but basically nothing was happening today

[02:18] *** eviltwin_b joined
[02:18] *** shachaf_ joined
[02:19] <dduncan> my system in both cases is Mac OS X 10.4.8, Perl 5.8.7, GHC 6.6.0, PowerPC G4 dual-1Ghz CPU, 1.25GB of RAM

[02:19] <dduncan> and the smoke was setup to use 4 threads

[02:19] <dduncan> so about 2 threads per CPU

[02:20] <dduncan> that is, concurrency=4

[02:20] <dduncan> that is all

[02:20] <dduncan> so 135 mins down to 90 mins is certainly a significant speedup

[02:21] <dduncan> what changed since the 135 and the 90 is mainly that GHC was updated from 6.4.1 to 6.6.0, and Pugs itself had large updates ... no other system changes of great significance to smokes

[02:21] *** HCoyote joined
[02:21] <dduncan> that is all

[02:22] <dduncan> all settings re the pugs make system were the default

[02:22] *** Alias_ joined
[02:23] <dduncan> s/since/between/

[02:31] *** justatheory joined
[02:35] <svnbot6> r14413 | Darren_Duncan++ | ChangeLog : added template for upcoming release 6.28.0, based on the one for 6.2.13 ... tweaks may be needed

[02:37] *** HCoyote left
[02:56] <TreyHarris> [particle] is showing off smartlinks at the seattle perl user group meeting as we speak :)  i use them every day and i forgot how very very cool they are.

[03:03] <audreyt> future is here just not evenly distributed

[03:07] <diotalevi_> smartlinks? Boo. I wish I was at SPUG.

[03:11] *** weinig is now known as weinig|sleep

[03:23] <cognominal> better distributed on pugs than parrot? :)

[03:23] <audreyt> maybe different timelines..

[03:24] <cognominal> I am working on the node^Wpugscapture pmc btw

[03:25] <cognominal> when done I will update PGE to use it

[03:26] <cognominal> I need to support shift, unshift, iterators, freeze. Still a lof of things missing

[03:27] *** christopher joined
[03:27] <audreyt> *nod* cool

[03:27] <cognominal> worked on the french Perl 6 wikipedia entry too

[03:32] *** AzureStone joined
[03:34] *** lisppaste3 joined
[03:35] *** root4o joined
[03:36] <root4o> hi, can u point me to gather() , take() explanation..or tell in several words their purpose

[03:36] <audreyt> root4o: it's for the pattern of

[03:36] <audreyt> my @result; while ... { ... for ... { ... push @result if ... } }  return @result

[03:36] <audreyt> now you write instead:

[03:37] <audreyt> gather { while ... { ... for ... { take $x if ... } } }

[03:37] <audreyt> see also http://search.cpan.org/dist/Perl6-Gather/Gather.pm

[03:37] <lambdabot> Title: Perl6::Gather - Implements the Perl 6 'gather/take' control structure in Perl 5  ..., http://tinyurl.com/vxftl

[03:37] <root4o> 10x

[03:38] <Alias_> It might just be me, but that seems like it has fairly limited gain

[03:39] <Alias_> Although I can see how it would simplify certain expressions

[03:39] <audreyt> Alias_: you can't refactor with push

[03:40] <audreyt> since it's depending on a lexical

[03:40] <audreyt> of course you can

[03:40] <Alias_> I get that

[03:40] <audreyt> our @result; sub gatherer { local @result; ...  taker() } sub taker { push @result }

[03:40] <Alias_> It's just a smart grep

[03:40] <audreyt> but it's considered badstyle

[03:40] <audreyt> anyway it's handy :)

[03:41] * Alias_ frets about keyword explosions stealing all the useful terms

[03:41] <Alias_> say is evil

[03:41] <Alias_> It has nothing whatsoever to do with saying anything

[03:42] <Alias_> But then hey, I'm sure it's cleanly worked around in P6

[03:42] <audreyt> it actually hooks into a text to speech engine

[03:42] <audreyt> but we're not revealing that yet

[03:42] <audreyt> ;)

[03:42] <Alias_> heh

[03:42] <audreyt> (nb: "print" has nothing to do with printing for a very long time now; we're not using teletypes)

[03:43] <cognominal> I suggested to rgs to add cowsay to 5.10 but he declined

[03:43] <Alias_> It prints pixels on a canvas

[03:43] <Alias_> But yes, I get your point

[03:43] <Alias_> It's more like ->send

[03:44] <root4o> many times in Perl5 i was tring/doing something like this (cant remember if it works now)

[03:44] <root4o> action1, action2 if condition;

[03:44] <root4o> could in some way do this shortcut in perl6

[03:44] <root4o> i mean two actions

[03:44] <root4o> and if at the end

[03:45] <Alias_> if at the end for complex cases of if is bad style anyway

[03:45] <audreyt> root4o: that is valid p5

[03:45] <root4o> yeah, but it was for simple stuff

[03:45] <Alias_> Multiple actions?

[03:45] <Alias_> not simple

[03:45] <root4o> no two simple actions

[03:45] <eviltwin_b> it'll work in perl5 as long as you'r very careful about lists

[03:45] <audreyt> Alias_: comma as stmt separator

[03:46] <audreyt> eviltwin_b: yup

[03:46] <root4o> print 'hi', $x = 12 if $cond;

[03:46] <eviltwin_b> that'd be a prime example of "as long as you're very careful" :)

[03:46] <eviltwin_b> (rather of the opposite...)

[03:46] <audreyt> in p6 there's something like

[03:46] <audreyt> {say 1; say 2}() if 3

[03:46] <audreyt> which is rather unambiguous to my eyes

[03:47] <eviltwin_b> hm, can't you use a block that way (minus the parens) in perl5?

[03:47] <eviltwin_b> hm, no, onlyas "do {...}"

[03:48] <root4o> one other thing that bugged me , not a big deal ... is that I had to do

[03:48] <root4o> my $x;

[03:48] <root4o> $x = 55 if $cond;

[03:48] <root4o> instead of just :

[03:48] <audreyt> ?eval my $x = 55 if $cond;

[03:48] *** evalbot_r14401 is now known as evalbot_r14413

[03:48] <evalbot_r14413> Error: Undeclared variable: "$cond"

[03:48] <audreyt> ?eval my $x = 55 if 1; $x

[03:48] <evalbot_r14413> \55

[03:48] <audreyt> there you go.

[03:48] <root4o> my $x = 55 if $cond;

[03:48] <audreyt> yeah. fixed

[03:49] <root4o> :)

[03:49] <audreyt> (my $x) can appear anytime $x can

[03:49] <audreyt> which is wonderful :)

[03:49] <audreyt> my $x[10] = 2;

[03:49] <audreyt> et

[03:49] <audreyt> etc

[03:49] <audreyt> declarators are finally real expressions

[03:54] <root4o> I use gentoo.... of cource when I install pugs it doesn't include tests and examples...I was wondering, I can write test with installed pugs...i.e.

[03:54] <root4o> it doesnt need additional stuff..

[03:55] <root4o> and I do not need to correct some PATH's?

[03:55] <audreyt> you can simply write tests and run them with installed pugs

[03:55] <audreyt> but "svn co http://svn.openfoundry.org/pugs/" will get you the test corpus in t/

[03:55] <root4o> ok...10x, will try

[03:55] <lambdabot> Title: Revision 14413: /

[03:56] <audreyt> you had a commit bit yet?

[03:56] <root4o> no

[03:56] <audreyt> ok. what's your email addr?

[03:56] <root4o> iraptor_at_gmail

[03:57] <audreyt> welcome aboard. try editing AUTHORS to add your name and "svn ci" it back to test the commit

[03:57] <root4o> where can find info in which part tests are missing

[03:57] <audreyt> http//spec.pugscode.org/

[03:57] <audreyt> click into specs and find noncovered parts

[03:57] <audreyt> _so_ happy that question can be answered straightforwardly

[03:57] <audreyt> smartlinks++

[03:59] <audreyt> root4o: check your mail for login

[03:59] <audreyt> I need to get lunch and pack; bbiab. have fun :)

[03:59] <Alias_> pack?

[03:59] <audreyt> pack my stuff for plane tonight to portland

[04:02] <root4o> cant load http//spec.pugscode.org/ .... is it something with my connection or it is down

[04:03] <Alias_> You missed the colon?

[04:04] *** b00t joined
[04:04] <root4o> no havent...just when wrote in the irc

[04:04] <root4o> sorry

[04:06] <root4o> hmm it seems my connection ...

[04:06] *** Eidolos joined
[04:06] <root4o> test

[04:07] <christopher> root4o: any SYN link on http://smoke.pugscode.org also will give you the synopses

[04:08] <root4o> 10x

[04:09] <lambdabot> Title: Pugs Smoke Reports

[04:10] <root4o> yes I'm getting this

[04:20] <root4o> how can I get supported methods for a class and/or attributes i.e.

[04:20] <root4o> Int.get_all_methods()

[04:20] <root4o> or 55.get_all_methods()

[04:20] <root4o> is there such beast

[04:33] <audreyt> root4o: $obj.^methods is canonical

[04:33] <audreyt> it's not yet implemented, sorry

[04:35] *** Yappo2 joined
[04:35] <root4o> bad ;)

[04:36] *** shachaf_ joined
[04:38] <audreyt> working on that though :) see http://search.cpan.org/dist/Moose/ for perl5 land prototype

[04:38] <lambdabot> Title: Stevan Little / Moose - search.cpan.org

[04:46] *** Alias_ joined
[04:47] <root4o> yeah, i've tried it .. very cool

[04:59] *** Yappo2 is now known as Yappo

[05:03] *** root4o left
[05:17] *** justatheory joined
[05:17] *** b00t joined
[05:21] *** Alias__ joined
[05:26] *** BooK joined
[05:34] *** AzureStone joined
[05:50] *** buetow joined
[06:07] *** hoowa joined
[06:10] *** marmic joined
[06:17] *** dakrone joined
[06:17] *** flw joined
[06:18] <flw> hi audrey

[06:23] <audreyt> flw: greetings

[06:25] <flw> Can you read Chinese on your workstation?

[06:25] <audreyt> probably yes

[06:25] <audreyt> try typing some chinese?

[06:26] <audreyt> (or should we go over to #perlchina?)

[06:26] <flw> ok, see you in #perlchina

[06:29] <flw> to audreyt: 我记得您曾经讲过，有一个 Module 可以把 Perl 源程序变成 TAB 和空格组成的一片空白，它的名字叫什么？

[06:31] <Alias__> (funny when you can't render it)

[06:31] <audreyt> it's more mysterious that way

[06:31] <Alias__> (square) (square) (square) (square) (square) (square) (square) (square) Module (square) (square) (square) (square) Perl...

[06:32] <Alias__> :)

[06:32] <audreyt> to translate: which module was that you mentioned that turns Perl programs to tabs and spaces?

[06:32] <audreyt> see, totally not mysterious then

[06:33] <Alias__> Well of course, but it has a nice parallel to listening to people talk in foreign languages

[06:33] <flw> Alias__, I'm sorry, my english is very poor.

[06:33] <Alias__> Except for the words taken from langauges that stick out, they might as well be saying (square) (square) (square) (square) Module (square) (square) (square) (square) etc

[06:33] <Alias__> flw: Don't apologise

[06:34] <Alias__> My English is very poor, and I speak it as a first language :)

[06:45] *** flw_ joined
[06:49] *** iblechbot joined
[07:03] <Eidolos> flw: To answer your question, Acme::Bleach. :)

[07:04] <flw_> Eidolos: Thank you!

[07:05] *** flw_ is now known as flw

[07:06] *** kanru joined
[07:16] *** bsb left
[07:22] *** zakharyas joined
[07:49] *** chris2 joined
[07:50] *** cognominal joined
[08:11] *** elmex joined
[08:20] *** b00t joined
[08:24] *** mjk joined
[08:25] *** andara joined
[08:32] <dduncan> fyi, just smoked r14413 ... same results as with the last release ... http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.13-r14413-darwin-normal--1161160105-6413--17954-17954-0-4638-747-0--63c47bdcc4b1aab5ce0a4a550243add0.html

[08:32] <lambdabot> Title: TAP Matrix - Wed Oct 18 08:22:43 2006 GMT, http://tinyurl.com/wpdz8

[08:34] *** fayland joined
[08:34] <dduncan> I will probably not do any more smokes until some large change has been checked in, such as to enable the new metamodel, or to remove the design cludges that GHC 4.4.1 requires but 6.6.0 doesn't

[08:35] <audreyt> right. that seems prudent

[08:36] <dduncan> incidentally, if it were me, I would make removing 4.4.1 support the first major change

[08:36] <dduncan> you were probably itching to remove those cludges, weren't you?

[08:36] <wolverian> 6.4.1, you mean :)

[08:36] <dduncan> yes, that

[08:36] <audreyt> well yes. in fact I am

[08:36] <audreyt> but rafl is still solving 6.6 bindist on debian

[08:37] <audreyt> and freebsd ports havn't been updated yet

[08:37] <audreyt> those two represent a fairly major portion of pugs devbase

[08:37] <audreyt> so I'd hold for another week or two

[08:37] <dduncan> sounds like a plan

[08:37] <audreyt> 1..1

[08:37] <wolverian> ubuntu 6.10 is slated to have 6.4.2, too

[08:39] <clkao> audreyt: hey you know all this us flight gel thing right? i assume you have loads. i throw away some shampoo in boston. so just fyi and fly safe. zzz time.

[08:41] <dduncan> audreyt, does your busy world tour by chance include the "Open Source Meets Business" conference in Germany this January; http://www.heise.de/veranstaltungen/2007/ho_osb/en/ ?

[08:41] <lambdabot> http://tinyurl.com/yd2a7v

[08:41] <dduncan> if so, you may want to check out the plat_forms study going on there

[08:41] <dduncan> fyi, http://www.plat-forms.org/

[08:41] <lambdabot> Title: Home

[08:41] <dduncan> I won't be there, but it might be interesting for you, perhaps

[08:42] <audreyt> dduncan: if someone flys me there, maybe, but prolly not

[08:42] <dduncan> what would it cost to fly there for you?

[08:44] <audreyt> usd$1k or a bit more

[08:44] <dduncan> I see

[08:45] <Alias__> I've changed my mind about gather/take

[08:45] <Alias__> Mostly because I wish I had it right now

[08:46] <dduncan> on a separate matter, I notice that the smartlinked Synopsis16 going with my last smoke has POD errors in it; see the end of: http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.13-r14413-darwin-normal--1161160105-6413--17954-17954-0-4638-747-0--63c47bdcc4b1aab5ce0a4a550243add0-synopses/S16.html

[08:46] <lambdabot> Title: S16, http://tinyurl.com/y4bpg7

[08:47] <dduncan> not sure if this is the original S16 or the auto-edited one

[08:48] * dduncan back in the future

[08:49] <audreyt> Alias__: good :) Perl6::Gather on CPAN is the answer :)

[08:50] <Alias__> I don't like it that much

[08:50] <Alias__> :)

[08:50] <Alias__> I may as well be using Acme:: modules in production

[08:50] * Alias__ &

[08:50] <audreyt> Perl6:: is the new Acme

[08:50] <audreyt> actually it's the old Acme

[08:50] <Patterner> it's Acme's New Clothes

[08:51] *** kanru joined
[09:30] <theorbtwo> Acme: The next generation.  These are the voyages of the crazy channel #perl6, on it's continuation mission, to seek out new features and new circular dependencies.

[09:31] <TreyHarris> we only have one circular dependency: on circular dependencies

[09:54] *** dduncan left
[10:18] *** andara left
[10:18] *** andara joined
[10:18] *** andara left
[10:33] *** penk joined
[10:52] *** andara joined
[11:14] *** xinming_ joined
[11:25] *** nipotan is now known as nipotaway

[11:26] *** Psyche^ joined
[11:34] *** Psyche^ is now known as Patterner

[11:36] *** theorbtwo joined
[11:41] *** mako132_ joined
[11:42] *** HiTech69 joined
[11:43] *** mdiep_ joined
[12:09] *** fglock joined
[12:18] *** iblechbot joined
[12:23] *** Limbic_Region joined
[12:31] <Limbic_Region> salutations all

[12:32] <fglock> Limbic_Region: hi

[12:36] <audreyt> greetings

[12:36] * Limbic_Region thought you were on a plane audreyt

[12:37] <audreyt> the one good thing about prioritypass lounges is that you don't have to hunt for electricity...

[12:37] <audreyt> no, that was checkin; the actual take off is 2hr in the future

[12:37] * audreyt meanwhie repairs pugscc

[12:43] <Limbic_Region> do you have an itinerary.txt of where you will be and what you will be doing for the next month?

[12:44] <audreyt> Oct18 arrive at Portland; Oct20 speak at Intel; Oct23 speak at OOPSLA; Oct 24~26 Jifty Hackathon; Oct27 speak at Amazon; Oct29 arrive at Sao Paulo

[12:45] <audreyt> Oct30~Nov2 Pugs/v6 hackathon

[12:45] <audreyt> Nov3 speak at YAPC::SA

[12:46] <audreyt> Nov6~10 at Rio; Nov13 back to .tw

[12:46] <fglock> audreyt: our sessions on YAPC::SA are contiguous - this gives us 3h to talk, how about planning something together

[12:46] <audreyt> end of itinerary

[12:46] <audreyt> fglock: sure, we can figure something out when we meet :)

[12:47] <fglock> with TimToady too - it would be nice

[12:47] <audreyt> maybe we'll just put a text-to-speech device to #perl6

[12:47] <audreyt> and then we type ahead into our laptops

[12:48] <audreyt> maybe too crazy

[12:49] * audreyt hacks her slides some more -- now at "Dual Core" section with Pugs.Eval at one side and Pugs::Runtime at another

[12:49] <fglock> we could have somebody typing what we are talking, and put #perl6 on the projector :)

[12:52] <audreyt> yeah :)

[12:53] *** Lorn joined
[12:53] *** Psyche^ joined
[12:57] <svnbot6> r14414 | audreyt++ | * Pugs.Compile.Pugs: Repair -CPugs, and by extension pugscc

[12:58] * audreyt ponders, now that libpugs contains libperl, whether to also link in the PAR loader 

[12:58] <audreyt> it's tiny (<100k)

[12:59] <audreyt> and gains us multiversioning automagically

[13:00] <audreyt> need to think about it some more.

[13:02] <fglock> audreyt: module versioning for ext/ ?

[13:02] <svnbot6> r14415 | audreyt++ | * pugscc: s/autrijus/audreyt/

[13:03] <nothingmuch> @seen cmarcelo

[13:03] <lambdabot> I saw cmarcelo leaving #perl6 1d 7h 24m 59s ago, and .

[13:04] <audreyt> fglock: the ability to install multiple versions of, say ,CGI.pm

[13:04] <audreyt> and use them in the same program distinguished by long names

[13:05] <audreyt> and use precompiled binary modules

[13:05] <audreyt> etc, etc. see tsee's directory on CPAN, including PAR::Repository, PAR::Dist, etc

[13:06] * nothingmuch starts the shittiest 

[13:06] <nothingmuch> MO refactoring of all

[13:06] <nothingmuch> making methods have a ->compile method

[13:06] *** cmarcelo joined
[13:06] <nothingmuch> cmarcelo: ah, i was just hunting for you

[13:09] <cmarcelo> nothingmuch: pong! :) didn't code much, but finished reading paper about software integration that gaal++ recommended to get some (more) ideas on how translate things..

[13:09] <nothingmuch> cool

[13:09] * nothingmuch is going to do the last yucky refactoring to MO

[13:09] *** Psyche^ is now known as Patterner

[13:11] <cmarcelo> the plugin refac?

[13:11] <nothingmuch> not yet

[13:11] <nothingmuch> that's easier from an engineering perspective

[13:11] <nothingmuch> giving methods a ->compile method

[13:11] <nothingmuch> and clearing up the attachment api

[13:17] <nothingmuch> ingy: ping

[13:18] <fglock> nothingmuch: will you create an intermediate language?

[13:18] <nothingmuch> no

[13:18] <nothingmuch> MO is orthogonal to the language

[13:19] <audreyt> modularity++

[13:19] <nothingmuch> i will create MO::Emit::Perl5 soon

[13:19] <nothingmuch> which should compile an "idealized" MO class into regular perl 5 packages

[13:19] <nothingmuch> using hacks like overriding can and wrapping to emulate private methods, etc

[13:19] <audreyt> which in Pugs's dual core vision

[13:20] <nothingmuch> precisely ;-)

[13:20] <audreyt> will then allow a single declaration to generate embedding native to both runtimes

[13:20] <audreyt> so we don't have to play AUTOLOAD games anymore

[13:20] <nothingmuch> huzzah

[13:20] <audreyt> huzzah indeed!

[13:20] <nothingmuch> we're so awesome

[13:20] <nothingmuch> group hug everyone

[13:20] <fglock> :)

[13:20] * audreyt hugs nothingmuch

[13:21] * nothingmuch hugs audreyt

[13:21] <nothingmuch> cmarcelo: ?

[13:21] <nothingmuch> fglock: ?

[13:21] <nothingmuch> beware of clkao though, i found out some facts about him

[13:21] * fglock hugs all

[13:21] * cmarcelo hugs everyone!

[13:21] <nothingmuch> chuck norris type facts, that is

[13:22] * audreyt hugs each(@perl6)

[13:22] <nothingmuch> @everyone».hug();

[13:22] <lambdabot> Unknown command, try @list

[13:22] * [particle] is always hugging himself

[13:22] <fglock> nothingmuch: I'm abstracting the base perl5 types in Pugs::Emitter::P6::P5(2)

[13:22] * stevan wonders what he has stumbled into 

[13:22] <nothingmuch> base types == unboxed?

[13:23] * audreyt hugs stevan whilst he's still wondering

[13:23] * stevan :)

[13:24] <stevan> nothingmuch: robkinyon agreed to give us Sub::Compose

[13:24] <nothingmuch> MUAHAHAHAA

[13:25] <stevan> one more thing to slow down Moose's compile time :)

[13:25] <fglock> nothingmuch: compile-time boxing as-needed, FETCH/STORE with typing, and a few other things

[13:25] <nothingmuch> fglock: sounds useful

[13:25] <stevan> fglock: yes, very useful

[13:25] <fglock> so the emitter don't have to worry about basic optimizations

[13:25] * [particle] presented moose at seattle.pm last night

[13:26] <stevan> [particle]: cool, how did it go?

[13:26] <[particle]> pretty well.

[13:26] <[particle]> i used my smartlink impl as an example

[13:27] <cmarcelo> [particle]: slides? :)

[13:27] <[particle]> agentzh: ping

[13:27] <[particle]> cmarcelo: no slides, just code

[13:28] <fglock> nothingmuch: these things are inlined, so you don't have the subroutine call overhead, or lexical scope problems

[13:28] <nothingmuch> *nod*

[13:28] <[particle]> http://svn.perl.org/parrot/trunk/lib/SmartLink.pm

[13:28] <lambdabot> http://tinyurl.com/y8uokd

[13:28] <[particle]> and http://svn.perl.org/parrot/trunk/t/tools/smartlinks.t

[13:28] <lambdabot> http://tinyurl.com/y7jw9s

[13:29] <[particle]> and of course, the smoke output from pugs

[13:29] <audreyt> at some point those technologies could go back to CPA...

[13:29] <audreyt> *CPAN

[13:30] <fglock> stevan: I think you could use it in Moose, through Module::Compile

[13:30] <audreyt> I mean, as standalone dists, such as http://search.cpan.org/dist/Test-Chimps/ and http://search.cpan.org/dist/Task-Smoke/

[13:30] <lambdabot> Title: Zev Benjamin / Test-Chimps - search.cpan.org

[13:31] <stevan> fglock: yes, this is what I am thinking

[13:31] <stevan> Moose::Autobox, while fun, has a *huge* performance penalty, even more so than regular Moose :)

[13:32] <[particle]> moose are slow creatures

[13:33] <stevan> actually once they get moving,.. they are pretty fast,.. long legs and all

[13:33] <[particle]> yeah, then try stopping them...

[13:34] <stevan> http://www.fugly.com/media/IMAGES/Crazy/moose1.jpg

[13:34] <audreyt> Moose.pm: SIGINT ignored

[13:34] <stevan> yup

[13:34] <fglock> stevan: very simple example of compile-time preprocessing: http://svn.openfoundry.org/pugs/perl5/Pugs-Emitter-Perl6-Perl5-2/t/00-compile-time/01-bool.t

[13:34] <lambdabot> http://tinyurl.com/ym8uzh

[13:34] <lambdabot> http://tinyurl.com/yapk44

[13:34] <audreyt> Moose.pm: SIGSTOP ignored (etc)

[13:34] <stevan> audreyt: ;)

[13:35] <stevan> Reaction is currently the largest Moose code base,.. and mst says startuptime is still managable

[13:38] *** idiotmax joined
[13:38] <nothingmuch> i so love darcs amend record

[13:38] <nothingmuch> nasty commits are a thing of the past

[13:38] <fglock> I've been thinking about the emitter model PCR uses - maybe it could be used for emitting optimized v6.pm code - try several emitters, and use the faster one that succeeds

[13:38] <nothingmuch> i haven't had a commit message titled "oops" in a long while

[13:38] * audreyt imagines a GA-based emitter

[13:38] <nothingmuch> fglock: talk to stevan about the Sub::Comose future plans

[13:38] <nothingmuch> GA?

[13:39] <audreyt> genetic algorithm aka spamassassin

[13:39] <nothingmuch> oi oi oi oi oi oi

[13:39] <audreyt> "train your emitter"

[13:39] <nothingmuch> that's a nice dream

[13:39] <fglock> audreyt: yes, like that

[13:39] <nothingmuch> but debugging these things.... oh my

[13:39] <audreyt> nothingmuch: not anymore crazy than your runtime profiling feedback idea

[13:39] <Khisanth> hmm easier to train than spam :)

[13:39] <audreyt> that is, both are terminally crazy

[13:39] <nothingmuch> heh

[13:39] <audreyt> which is the norm around here...

[13:39] <stevan> what happens when you emitter evolves to become smarter than you?

[13:40] *** ruoso joined
[13:40] <nothingmuch> stevan: skynet

[13:40] <nothingmuch> audreyt: touche

[13:40] <nothingmuch> ;-)

[13:40] <audreyt> then you port yourself to it...

[13:40] <fglock> Sub::Comose?

[13:40] <nothingmuch> Compose

[13:40] <nothingmuch> Sub::Compost;

[13:40] <nothingmuch> =)

[13:40] * stevan is suddenly replaced by v6 code

[13:41] <audreyt> Stevan The Bootstrapped

[13:41] <stevan> I wonder what that would smell like ... eaww

[13:42] <audreyt> interesting. Sub::Compose is called "combine" in pugs codebase...

[13:42] * fglock looking up Sub::Compose in CPAN

[13:42] <nothingmuch> audreyt: yesterday we discussed refactoring it

[13:42] <nothingmuch> i want it to be monad inspired

[13:42] <stevan> fglock: the one on CPAN is just a toy/experiment

[13:42] <stevan> it is too ambitious to be useful

[13:42] <nothingmuch> that is, using conjoin is a port of the Maybe monad, etc

[13:42] <nothingmuch> so that you can write highlevel compositions

[13:42] <nothingmuch> and then inline them

[13:42] <nothingmuch> == very good for type checking

[13:42] <audreyt> nothingmuch: scala's monad comprehension is a good model for that

[13:43] <stevan> and restrict the types of subs we accept as well

[13:43] *** diotalevi_ joined
[13:43] <nothingmuch> where the type subs are very small and hence the overhead is big (calling 10 subs for a param check is =()

[13:43] <nothingmuch> audreyt 1>stevan

[13:43] <audreyt> what's this infix 1> operator?

[13:43] <stevan> scala has monads?

[13:43] <nothingmuch> it's a shell redirect

[13:43] <stevan> audreyt: I think he is pipiing your STDOUT to me :)

[13:43] <audreyt> stevan: yes, with sugar for comprehension as well

[13:44] <nothingmuch> i was wondering if i should redirect stderrr too

[13:44] <stevan> audreyt: cool

[13:44] <audreyt> it's the thing Haskell 98 took away from 1.3 and I'm trying to restore it

[13:44] <stevan> nothingmuch: nah,.. I have enough issues of my own :)

[13:44] <nothingmuch> anymoose

[13:44] <nothingmuch> back to my refactor... nearly done!

[13:44] <nothingmuch> (attr::compiled::Attached is gone)

[13:44] *** dakkar joined
[13:44] <nothingmuch> (compiled == attached per definition now)

[13:44] <stevan> wow,.. audreyt can sleep and code at the same time,.. and nothingmuch can babble and code at the same time

[13:45] * nothingmuch 's idle loop is babbling

[13:45] <fglock> stevan: Set::Infinite, DateTime::Set::*, DateTime::Event::* all use composition

[13:45] * audreyt 's idle loop is coding...

[13:46] <stevan> audreyt idle? no? I dont believe it :P

[13:46] <fglock> stevan: so you have a sub body with perl5 code, and known input & output types?

[13:47] <audreyt> stevan: in any case, scala's monad comprehension is just their list comprehension

[13:47] <audreyt> see http://scala.epfl.ch/examples/files/simpleInterpreter.html for a demo

[13:47] <lambdabot> Title: sources/examples/files/simpleInterpreter.scala, http://tinyurl.com/zfdh8

[13:47] <audreyt> the doc for that is http://scala.epfl.ch/intro/comprehensions.html

[13:47] <lambdabot> Title: The Scala Programming Language: Sequence Comprehensions, http://tinyurl.com/zcv6o

[13:47] <audreyt> "Every datatype that supports the operations filter, map, and flatMap (with the proper types) can be used in sequence comprehensions."

[13:48] <cmarcelo> fglock: re PCP: just installing PCP and PCR from Pugs tree and the other deps from CPAN is enough to start hacking? or there are more modules that *must* be from pugs tree? (this answer is a good candidate to be "shifted" in PCP/HACKING file..)

[13:48] <fglock> stevan: this looks a bit like Pugs::Emitter::Perl6::Perl5-2

[13:48] <stevan> audreyt: nice :)

[13:48] <stevan> fglock: yes, I think it is probably along the same lines

[13:49] <fglock> cmarcelo: installing from CPAN is a good start, then update from Pugs tree

[13:49] <stevan> fglock: but keep in mind that we are gutting the current CPAN release and re-writing it to be more "production" useful

[13:49] *** dakrone joined
[13:50] <stevan> audreyt: hmm, this reminds me a little of the LISP loop macro

[13:50] <stevan> the compresions that is

[13:50] <fglock> stevan: PEPP2 has several implementations for each "sub", depending on want()

[13:51] <stevan> fglock: Sub::COmpose will be much simpler than that

[13:51] <fglock> stevan: so it can choose the best implementation

[13:51] <cmarcelo> audreyt: why comprehension syntax sugar was took away from Hs? it just works for lists then? I thought that was just more sugar over do-notation...

[13:51] <audreyt> cmarcelo: it was. then they had no idea how to generate good enough warnings for the simple case (list comprehension) and then took it away

[13:52] <stevan> fglock: the plan is to just deparse subs and then compose them back together with eval

[13:52] <stevan> and avoid the sub call overhead

[13:52] <audreyt> I tried to lure edwardk to hack it back in the GHC hackathon but it didn't happen... maybe do it myself some time (or maybe you can do it :))

[13:53] <stevan> fglock: and to support various ways of recombining as well (conjoin, disjoin, chain, etc)

[13:53] <cmarcelo> audreyt: I bet on you since i'm still reading the ghc commentary :o)

[13:54] <cmarcelo> and, what you mean by "good enough warnings for the simple case"?

[13:54] <audreyt> s/warnings/error messages/

[13:55] <cmarcelo> ah, it was hard to identify when list monad was being used and emit good enough msgs..

[13:55] <audreyt> right

[13:56] <fglock> stevan: cool - you can also support more high level things, like atomic

[13:56] <audreyt> but if you use -fmonad-comprehensions then you asked for it

[13:56] *** cjeris joined
[13:56] <audreyt> Pugs can certainly use more of that

[13:56] <fglock> stevan: Set::Infinite also supports undo, which is used for backtracking :)

[13:57] <cmarcelo> fglock: (i'll try cpan v6 and then upgrade from pugs tree to see if it works smoothly)

[13:59] <fglock> cmarcelo: the v6 in svn currently passes less tests than the CPAN version

[14:00] <audreyt> actually Test.pm's :depends<> handling seems to have broken it wrt v6.pm

[14:01] <fglock> audreyt: I'll take a look, thanks

[14:02] <cmarcelo> i see. but in hackaton context things will happen in svn repo, right?

[14:02] <stevan> fglock: it's possible, my first priority is a good conjoin as that is immediately useful for speeding up Moose type constraints, but the goal is to create a nice framework so that you can eaisly make new combination types

[14:03] <[particle]> are there any examples of refactoring from duck-typing to role-based composition?

[14:07] <fglock> cmarcelo: yes, I think we will need to move emitter-2 to misc/Common, and keep the CPAN version in perl5/ for a while

[14:09] <fglock> stevan: btw, I wrote this while trying out binding and typing implementations in plain p5: http://svn.openfoundry.org/pugs/perl5/Pugs-Emitter-Perl6-Perl5-2/type-example.pl

[14:09] <lambdabot> http://tinyurl.com/tdx9d

[14:10] <fglock>  x= is overloaded to typed assignment, and = does binding

[14:10] * nothingmuch 's idle loop is babbling

[14:11] <nothingmuch> wtf

[14:11] <nothingmuch> oh, wrong window

[14:11] <nothingmuch> up + enter

[14:11] <nothingmuch> urffff

[14:12] <fglock> stevan: the nice thing is that most operations only have the indirection overhead

[14:16] <stevan> x= ??

[14:16] <nothingmuch> $foo x= 3; # "$foo$foo$foo"

[14:16] <nothingmuch> methinks

[14:17] <fglock> stevan: it implements typed STORE

[14:17] <stevan> huh

[14:17] <fglock> the type is an object stored in the $var (try running the code)

[14:18] <fglock> the object also holds the value, which can be accessed directly (no OO overhead!)

[14:19] <fglock> so STORE is expensive, but FETCH is not

[14:20] <stevan> oh wow,..

[14:20] <stevan> :)

[14:20] <stevan> this is kind fun :)

[14:21] <fglock> I'm also using it for boxing Array and Hash, so they can be OO and unboxed at the same time

[14:21] <stevan> yeah

[14:21] <stevan> wow,.. this is really cool

[14:21] <stevan> I never knew it existed :)

[14:22] <fglock> oops - did I invent something?

[14:22] <audreyt> stevan: you should hang around #perl6 more :)

[14:22] <[particle]> :)

[14:23] <stevan> audreyt: so true :)

[14:23] <stevan> fglock: what does overloading '=' do?

[14:23] <fglock> it does binding - both variables share the same cell

[14:23] <stevan> oh i see

[14:24] <fglock>  actually, it shallow-copy the Type object :)

[14:24] <nothingmuch> woot

[14:24] <nothingmuch> i can now easily write Method::Accessor, Method::Constructor etc

[14:24] <nothingmuch> and thus remove all the hackish closures from MO itself

[14:24] <stevan> fglock: cool, so we can actually do autoboxing without having to use autobox :)

[14:25] *** hexmode joined
[14:25] <fglock> yes - that's what emitter-2 is about (plus some other cool optimizations)

[14:25] <audreyt> Moose::OutOfTheBox

[14:25] <fglock> like, it knows how to deal properly with Pair at p5 level

[14:26] <gaal> transgressive antlers!

[14:26] <fglock> and lazy lists

[14:26] <gaal> David Bowie should be so proud

[14:27] <stevan> fglock: very nice!!!!!!!

[14:27] <[particle]> perl 5 is a large box with many dark corners

[14:27] <fglock> stevan: thanks!

[14:28] <stevan> ok,.. I hate to go, but I have a deadline,.. but fglock lets talk about this again, very soon

[14:28] <nothingmuch> stevan: the problem converting this to perlland, of course, is that making people type x= is difficult ;-)

[14:29] <nothingmuch> fglock++ # nice reuse of an otherwise useless operator

[14:29] <[particle]> yes, and accidental binding will be common

[14:29] <stevan> nothingmuch: change is hard :P

[14:29] <nothingmuch> yep =/

[14:29] <audreyt> I hate to go too but I have a plane :) *wave*

[14:29] <nothingmuch> have a nice flight

[14:29] * stevan waves

[14:29] * [particle] waves

[14:29] <gaal> moose moose!

[14:29] <fglock> you can use v6 :)

[14:30] <Patterner> A moose once bit my sister.

[14:30] <[particle]> did she get superpowers?

[14:30] <stevan> fglock: I look forward to the day direct usage of Moose is no longer needed and I can just use v6 straight :)

[14:30] <fglock> gotta go too - lunch &

[14:30] <fglock> stevan: just rewrite Moose to v6?

[14:30] <stevan> circularity!

[14:30] <nothingmuch> stevan: i need a minion

[14:31] <stevan> nothingmuch: me too ;)

[14:31] <Patterner> It wasn't a radioactive moose :(

[14:31] <fglock> it will power Pugs & v6.pm :)

[14:31] *** fglock left
[14:32] <gaal> moose recognition: http://www.simplebits.com/notebook/2004/11/19/contest.html

[14:32] <lambdabot> Title: SimpleBits | Mystery Photo Contest Thing, http://tinyurl.com/ylvap8

[14:33] * stevan grumbles some and return to $work work

[14:46] *** diotalevi_ joined
[14:57] *** osfameron joined
[14:57] <osfameron> afternoon

[14:57] <osfameron> I'd really like to try http://feather.perl6.nl:8080/cgi-bin/runpugs?

[14:57] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[14:57] <osfameron> but silly work firewall dosn't like :8080

[14:57] <osfameron> is there any chance of having it listen on :80 as well?

[15:03] <Juerd> osfameron: No, none.

[15:04] <Juerd> osfameron: :80 is strictly static content, for security and maintaintenance reasons.

[15:04] <Juerd> This excludes finger.pl, which is practically still static. It doesn't interact with the user.

[15:04] * Juerd wants to make that fully static too one day

[15:05] *** weinig joined
[15:05] <Juerd> weinig: Da's niet veel

[15:05] *** bernhard joined
[15:06] <osfameron> oh well

[15:06] <osfameron> ta anyway

[15:17] <Juerd> osfameron: Can you access port 443 (https)?

[15:17] <Juerd> osfameron: Because then you could request a feather account, and then either:

[15:18] <Juerd> 1. connect with ssh, and try pugs locally on the server

[15:18] <Juerd> 2. set up an ssh tunnel to access port 8080

[15:18] <Juerd> The https port is used for both https and ssh.

[15:18] <dakkar> using the semi-magical proxy by BooK?

[15:18] <Juerd> Yep :)

[15:19] <theorbtwo> Of course, you could also get the code and throw up a server yourself that does run on :80.

[15:19] <Juerd> I had the same idea long time ago, but never came around to implementing it. I saw his talk about Net::Proxy at YAPC::Europe, and then saw that this was a far superior thing than I would ever have created myself :)

[15:19] <osfameron> I could also just run pugs locally :-)

[15:20] <Juerd> theorbtwo: But then, that means that you can run pugs locally, which means there's no reason for a web terminal anymore :)

[15:20] <osfameron> but feather seems handy as I'd just get out of sync

[15:20] <Juerd> osfameron: You can request an account by sending me an email.

[15:20] <osfameron> Juerd: yeah, 443 is good for me (it's how I irc)

[15:20] <theorbtwo> True, but running a copy on port 80 means that the next guy wouldn't have that problem.

[15:20] <Juerd> osfameron: Include your real name, and your requested username

[15:20] <osfameron> Juerd: cool, can you privmsg me your preferred email?

[15:20] <Juerd> theorbtwo: If someone has a spare box, sure

[15:20] <[particle]> juerd: are you backlogged with account requests?

[15:20] <Juerd> theorbtwo: But I prefer not to provide such things

[15:21] <Juerd> [particle]: Yes, by one account. I read the mail confirming the requested login today.

[15:21] *** vel joined
[15:21] <[particle]> ok, great

[15:21] <Juerd> [particle]: Sending a message with all necessary information in one time can save a few days :)

[15:21] <Juerd> [particle]: I'm currently more-than overloaded re work

[15:21] <Juerd> We moved our entire office

[15:21] <[particle]> juerd: ouch

[15:22] <Juerd> osfameron: No. Is a public message okay with you? [email@hidden.address]
[15:22] <[particle]> juerd: i'll let coke know you're working on it

[15:22] <Juerd> [particle]: The ouch factor is that this wasn't planned.

[15:22] <osfameron> Juerd: thanks :-)

[15:23] <[particle]> Juerd++

[15:23] <[particle]> unplanned move of entire office? yikes!

[15:26] <andara> juerd: what do you think of the load caused by runpugs?

[15:27] *** vel joined
[15:28] <Juerd> andara: So far, it has been acceptable. Do you renice the processes?

[15:29] <Juerd> Who's using ssh over port 443 right now by the way?

[15:29] <Juerd> I notice that sslh uses quite a lot of CPU power :(

[15:29] <Juerd> read(5, "", 4096)                       = 0

[15:29] <Juerd> write(2, "Use of uninitialized value in co"..., 101) = 101

[15:29] <Juerd> Oh :(

[15:30] <andara> juerd: no, how would i do that?

[15:30] <Juerd> andara: man nice

[15:31] <Juerd> BooK: ping

[15:31] <Juerd> BooK: paste for you:

[15:31] <Juerd> read(5, "", 4096)                       = 0

[15:31] <Juerd> write(2, "Use of uninitialized value in concatenation (.) or string at /usr/share/perl5/Ne"..., 101) = 101

[15:31] <Juerd> select(24, [4 5 6 7 8 9], [5], NULL, NULL) = 1 (in [5])

[15:31] <Juerd> write(2, "Use of uninitialized value in length at /usr/share/perl5/Net/Proxy.pm line 245.\n", 80) = 80

[15:31] * Juerd restarted sslh

[15:32] <andara> Juerd: :-) I can nice them on launch of course. Where whould you like them?

[15:32] <Juerd> andara: I don't understand the question

[15:33] <Juerd> Just start the process with nice

[15:33] <Juerd> nice pugs foo.p6

[15:33] <BooK> Juerd: pong

[15:34] <andara>  Juerd: I meant, any prefered -n value? But if just 'nice' is fine, no bother.

[15:34] <Juerd> BooK: Do you happen to know this bug? I lack tuits to debug

[15:34] <Juerd> andara: 10 is fine

[15:34] <BooK> Juerd: can you push a bug report on rt?

[15:35] <Juerd> even if you use 3 of 4, it already allows others to still use the box should runpugs turn into an infinite cpu hog, and all the limitations already on it fail :)

[15:35] <BooK> Net::Proxy sometimes dies without reason (or message) on me

[15:35] <Juerd> BooK: I haven't seen it dying yet. But then, I don't use it myself

[15:35] <Juerd> BooK: Sure

[15:35] <BooK> which is why I run it in a while true ; do ... ; done loop :)

[15:35] <BooK> thanks

[15:36] <Juerd> Done

[15:37] <Juerd> I only start it on boot

[15:37] *** cmarcelo joined
[15:37] <Juerd> Oh, no, I do have it in a loop.

[15:37] <Juerd> I don't remember setting that up :)

[15:37] <Juerd> afk

[15:43] *** fglock joined
[15:47] <ingy> nothingmuch: pong

[15:53] *** buetow joined
[15:57] *** Pomin joined
[15:59] *** hexmode joined
[16:19] <rafl> audreyt: The debian extralibs thingy is waiting for igloo (the debian ghc maintainer) uploading some extra packages.

[16:31] *** weinig_ joined
[16:39] *** andara left
[16:45] *** araujo joined
[16:50] *** kanru joined
[16:53] *** thepler joined
[16:56] *** weinig_ is now known as weinig

[17:01] *** justatheory joined
[17:11] <TimToady> @tell audreyt MOH is just a rotated HOW.  :)

[17:11] <lambdabot> Consider it noted.

[17:13] <gaal> also WHO

[17:13] <[particle]> also OHM

[17:14] <gaal> also ΣIO

[17:16] <TimToady> those are more like anagrams than rotations...

[17:16] <svnbot6> r14416 | fglock++ | v6/emitter - moving the unstable version to pX/Common

[17:18] <gaal> WHO is two different kinds of rotation

[17:18] <gaal> ΣIO is HOTEL-script

[17:19] <TimToady> doesn't work well in a sans-serif font...

[17:22] *** weinig is now known as weinig|bbl

[17:30] *** ofer1 joined
[17:31] *** hexmode joined
[17:41] *** kensanata joined
[17:51] *** beppu joined
[17:51] *** Limbic_Region joined
[17:52] *** theorbtwo joined
[17:53] <svnbot6> r14417 | fglock++ | v6 - merged with CPAN version

[17:53] <svnbot6> r14417 | fglock++ | - devel version of the emitter is now in pX/Common

[18:00] *** weinig|bbl is now known as weinig

[18:04] *** dmq joined
[18:29] *** pmichaud_ is now known as _pmichaud_

[18:30] *** _pmichaud_ is now known as pmichaud

[18:30] <TimToady> hi patrick, how's things?

[18:31] <gaal> any openfoundry-related folks around?

[18:32] <TimToady> seems unlikely, given the time of night

[18:33] <gaal> gotta try my luck, maybe someone's pulling an audrey

[18:34] <svnbot6> r14418 | fglock++ | v6 - Test.pm works again

[18:37] *** prism joined
[18:38] <TimToady> audrey's not even pulling an audrey...

[18:38] <TimToady> it's amazing how quite this channel gets when audrey is in an airplane.

[18:38] <TimToady> *quiet

[18:39] <gaal> The Elk Audreyborous

[18:41] <fglock> hi

[18:46] *** cdpruden joined
[19:10] *** takanori joined
[19:17] <Khisanth> TimToady: only until wireless connections on planes become common :)

[19:19] <TimToady> troonuff

[19:32] *** mauke joined
[19:34] *** iblechbot joined
[20:07] *** Eimi joined
[20:07] *** Daveman joined
[20:10] *** ruoso joined
[20:15] <cj> TreyHarris: btw, I was just giving you a hard time about spending all your working hours on this channel

[20:19] <ashleyb> is Perl6::Rules depreciated in favor of Pugs::Compiler::Rule?

[20:20] <PerlJam> heh.

[20:20] <PerlJam> ashleyb: did you read the docs for Perl6::Rules?

[20:20] <ashleyb> I quickly skimmed them

[20:21] <ashleyb> But I didn't find anything that compared them to Pugs::C::R

[20:21] <ashleyb> so I didn't find any expert confirming my hunch, so that's why I asked.

[20:21] <PerlJam> ashleyb: Let me draw your attention to all of the Notes in the docs for Perl6::Rules

[20:22] <PerlJam> ashleyb: they all follow a similar form to this:  "due to limitations of the Perl 5 regex engine, the Perl6::Rules module does not currently support this feature"

[20:22] <PerlJam> ad nauseum

[20:22] <TimToady> P6::R was abandoned before PCR was started...

[20:25] <fglock> ashleyb: Pugs::Compiler::Rule trades speed for features, except that it doesn't have many features yet

[20:26] <PerlJam> fglock: but you're also not hampered by the direct reliance on the perl5 RE engine

[20:27] <fglock> yes, most limitations of Perl6::Rules don't apply

[20:27] <ingy> hi cj

[20:27] <cj> hey there ingy.  long time no see

[20:27] <ingy> did you go to spug last night?

[20:28] <ashleyb> I assume it has the "feature" of implementing all of S05?

[20:28] <ingy> oh btw I got a motorcycle recently

[20:28] <ashleyb> (in p5 syntax that is)

[20:28] <ingy> do you still have yours?

[20:28] <cj> yeppers.  Sounds like lots of fun things are happening in the world of perl6.  I got commit rights, too, so I'll see if I can't make some mischief.  Of course I've got /work/ work to do for a while...

[20:28] <cj> ingy: I gave it to my brother.  My wife doesn't want to become a single mom :)

[20:29] <ingy> :P

[20:29] <cj> I bet I could borrow it for a jaunt or two, though.  Fall is my favorite time for riding

[20:29] <SamB> cj: who doesn't have commit access to the pugs repo?

[20:29] <cj> SamB: tdbptdpbh

[20:29] <cj> SamB: I feel like I'm special, therefore I'm special.

[20:29] <ingy> why does everyone assume that motorcycle == death

[20:29] <PerlJam> SamB: There are about 6 billion people who don't have access to the pugs repo  (yet)

[20:29] <cj> ingy: ask the folks in emergency rooms

[20:30] <ashleyb> SamB: no one is going to answer that question.

[20:30] <ashleyb> SamB: because if they answer it here, they get lassoed with a bit.

[20:30] *** ruoso joined
[20:30] <ashleyb> or they already have one.

[20:30] <ingy> I've been riding nearly 20 years with no major incidents

[20:30] <fglock> ashleyb: take a look at the tests in t/ - this gives a broad view of what works

[20:30] <ashleyb> k

[20:30] <ingy> I'm lucky I know. but I'm pretty lucky in general

[20:31] <PerlJam> ingy: The logic goes something like "people are stupid, ergo you're going to screw up or someone around you is going to screw up and you're dead"  :-)

[20:31] <PerlJam> ingy: do you wear a helmet?

[20:31] <cj> ingy: my incidents haven't been "major" in the sense of needing to spend time with a doctor, but I've fallen off/down quite a few times in ways that could very easily have hurt me badly

[20:31] <ingy> I do in now :)

[20:31] <ingy> I do now

[20:31] <cj> PerlJam: he's wearing one *right now*!!!

[20:31] <PerlJam> heh

[20:31] <PerlJam> not *that* kind of helmet!

[20:31] <PerlJam> ;-P

[20:32] <cj> now I'm curious what type of helmet you think he's wearing...

[20:32] <ingy> I once rode to the Illinois state capitol with 1000's of hogs to protest the helmet law

[20:32] <ingy> Illinois is still a free state

[20:33] <PerlJam> ingy: There was an accident on a major highway here the other day. An 18-wheeler switched lanes into a car which spun out and hit another car which was knocked into a lady on a motorcycle.  Guess who was the only one to get seriously hurt?

[20:33] <ingy> But now I rather like helmets ad leather

[20:33] <fglock> ashleyb: take a look also in lib/Pugs/Grammar/Rule2.pm - but to you that syntax you need to install the v6.pm module too

[20:33] <ingy> PerlJam: your mom?

[20:33] <ingy> ;)

[20:34] <cj> fglock: you mean "youse"?

[20:34] <cj> get back to work, cj

[20:34] <fglock> you use

[20:34] <ingy> I know shit happens. I just want to be on a motorcyle when I die.

[20:34] <fglock> for you to use

[20:34] <ingy> and I want to die old so I try hard to be safe

[20:35] <ashleyb> fglock:  I"m still confused

[20:35] <ashleyb> fglock: what's in Rule2.pm that I need?

[20:35] <fglock> ashleyb: I mean, take a look at the source code, to see what kind of stuff is supported

[20:36] <ashleyb> ok

[20:36] <fglock> it is compiled with PCR itself, with v6.pm help

[20:36] * SamB prefers to think that everyone has commit access, some of them just don't know it yet

[20:36] *** lanny joined
[20:38] <lanny> Hi all.  I'm seeing conflicts in perl5/Pugs-Emitter... but haven't modified anything in those directories.  Any suggestions?

[20:39] <PerlJam> What's the perl6 version of perl 5's  \b  (word boundary)  ?

[20:39] <fglock> lanny: try rm and svn up

[20:39] <fglock> lanny: the directories were moved today

[20:39] <ashleyb> is there a vim syntax highlighter for perl6?

[20:39] <lanny> And lose my 2  line change on a single  file!?  Are you crazy??

[20:39] <lanny> Ok.  Thanks.  :)

[20:40] <[particle]> pj: <?wb>

[20:41] *** justatheory joined
[20:41] <fglock> lanny: if you commit only the file you changed, it will not check elsewhere

[20:41] <fglock> ci filename

[20:41] <PerlJam> [particle]: and are there synonyms for fore and aft boundaries?  (ala vi's \> and \< )

[20:41] <kolibrie> ashleyb: util/perl6.vim

[20:41] <ashleyb> thx

[20:41] <fglock> svn ci filename

[20:41] <lanny> fglock: Good reminder.  I'm used to popping to top of tree, svk  update, svk st, then committing.

[20:42] <fglock> lanny: yes, that's safer

[20:42] <lanny> Yes.  The result of a misguided adulthood as a software developer.  :(

[20:43] <[particle]> pj: i don't think so

[20:43] *** larsen joined
[20:43] <[particle]> pj: perhaps <after wb> and <before wb> ?

[20:43] <fglock> PerlJam: word>> and <<word

[20:44] <[particle]> whoa, is that new?

[20:44] <[particle]> i need to test those

[20:44] <PerlJam> [particle]++  :-)

[20:44] <fglock> the unicode version should work in PCR, the ascii version had problems with M::C

[20:45] <svnbot6> r14419 | lanny++ | * docs/feather/index.html - expand pugscode.org to include irc and smoke

[20:45] *** vel joined
[20:45] *** thepler joined
[20:45] <[particle]> hrm, missing = in =item header in S05

[20:45] <lanny> fglock++ Thanks again.

[20:45] <[particle]> just before Backslash reform

[20:47] <fglock> home &

[20:48] *** fglock left
[20:53] *** justatheory_ joined
[20:56] <ingy> seen audreyt

[20:56] <jabbot> ingy: audreyt was seen 6 hours 26 minutes 36 seconds ago

[20:58] <TimToady> note however, that the definition of word boundary there was wrong up until about a minute ago...

[20:58] *** explorer joined
[21:02] *** seano joined
[21:03] <seano> gaal: ping?

[21:06] *** Limbic_Region joined
[21:06] *** SubStack joined
[21:09] <[particle]> timtoady: did you see the improper formatting?

[21:11] <[particle]> -item *

[21:11] <[particle]> +=item *

[21:11] <[particle]> S05:1014

[21:15] *** weinig is now known as weinig|bbl

[21:25] <seano> any good reason for having ":e foo" always run in an empty environment?

[21:26] <seano> seems to me you can always just use ":r" if you want that...

[21:26] <seano> (alternatively, is there some way to print the haskell-form of a value besides :e?)

[21:28] <theorbtwo> Hm, I thought that was fixed some time ago...

[21:31] <seano> not here (== CVS, er svn, as of this morning)  See src/Pugs.hs:336

[21:31] <seano> and I don't think "fixed" is the word, as someone went to some trouble to add a flag controlling this.

[21:32] *** dduncan joined
[21:48] *** Franky joined
[21:59] *** Franky left
[22:00] *** HiTech69 joined
[22:05] *** weinig|bbl is now known as weinig

[22:20] *** SubStack joined
[22:28] *** mako132_ joined
[22:29] *** nperez joined
[22:44] *** nothingmuch_ joined
[22:49] <gaal> seano: pong

[22:50] <gaal> seano: what does svn annotate say about it?

[22:50] <gaal> seano: I'm just about to write the openfoundry folks, unless you have already :)

[22:50] <seano> hang on a sec, let me check..

[22:51] <gaal> ingy: audreyt's conti-commuting

[22:51] <seano> what would you hope/expect it to say?

[22:52] *** cmarcelo joined
[22:53] <seano> mostly just says "audrey was here", and doesn't list the lines I've changed.

[22:53] <seano> Okay, I'll mail the openfoundry folks.

[22:53] <gaal> seano: would help you find the commit revision, so you can track down the ci log and see if it comes with a rationale.

[22:53] <seano> oh, other question.

[22:53] <seano> ok.

[22:55] <gaal> seano: ok, I'm about to turn in for tonight. If you get a response from them (might happen in a few hours) ask here to get reinvited

[22:55] <gaal> there are plenty of people who can send you a commit bit :)

[22:55] <seano> okay, will do.  thanks.

[22:56] <gaal> good night :)   zzZ&

[23:07] <ingy> gaal: thanks

[23:07] <ingy> where is she headed?

[23:07] <ingy> oops. ENOGAAL

[23:08] *** justatheory joined
[23:09] <Limbic_Region> seano - I can get you a commit bit

[23:09] <Limbic_Region> just need an email address

[23:12] <seano> sure -- my name at cs dot ucsd dot edu

[23:13] <seano> (er name == nick)

[23:14] <Limbic_Region> give me a minute

[23:16] <Limbic_Region> commit bit on its way

[23:17] <Limbic_Region> typically first commit is adding yourself to the AUTHORS file

[23:17] <Limbic_Region> don't be afraid to commit something to the wrong place if there is no one around to give you advice

[23:17] <Limbic_Region> commit it and it will get taken care of

[23:18] <seano> what about features you find personally useful?

[23:18] <Limbic_Region> seano - pugs features, perl 6 features, or modules that you think would make pugs more fun or what?

[23:18] <seano> e.g. I don't want the pugs shell to print results for evaluating things that end with a semicolon (think matlab).

[23:19] <seano> things to make development life more livable for the moment.

[23:20] <Limbic_Region> *shrug*

[23:20] <Limbic_Region> I dunno as I never use pugs shell (I write a file as I do with Perl)

[23:20] <Limbic_Region> I would guess you would want to discuss that with the channel though

[23:20] * seano freaking masochists...

[23:20] * seano mutters that, that is... 

[23:21] * Limbic_Region is definately a masochist

[23:21] <seano> k -- hey channel: anyone object if the shell doesn't output the evaluation result on things ending in a semicolon?

[23:21] * [particle] freak dances

[23:22] <seano> e.g. you can do "@x = something_really_big();"

[23:22] <seano> instead of "@x = srb(); 1"

[23:22] <Limbic_Region> seano - I don't think it currently prints anything out without print or say

[23:22] <Limbic_Region> ooh, it does

[23:22] <Limbic_Region> hrm

[23:22] <seano> yup...

[23:23] <[particle]> pugs> my @a= (1..10);

[23:23] <[particle]> my @a= (1..10);

[23:23] <[particle]> (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

[23:23] <[particle]> pugs>

[23:23] <Limbic_Region> seano - I would suggest making it configurable

[23:23] <[particle]> ah, too late :)

[23:23] <[particle]> how about a flag, like use/no 'echo';

[23:23] <Limbic_Region> right

[23:24] <seano> yeah.  $?STFU

[23:24] <seano> er, $*STFU that would be.

[23:25] <seano> Limbic_Region:  no dice on the invite -- I already have an account, so it doesn't seem to do anything.

[23:25] <seano> Limbic_Region:  I sent them an email, so I can just wait.

[23:26] <Limbic_Region> ahh

[23:26] <Limbic_Region> well, it could have been eaten as spam

[23:26] <Limbic_Region> I don't hand out commit bits very often but almost inevitably I end up using a second email address for the requester because the 1st never shows up

[23:26] <[particle]> seano: the best way forward is probably probably to write a pragma... that's what you'd do in perl 5, no?

[23:27] <seano> [particle]: no, this is only relevant in the shell.  so a commandline option and/or rc file

[23:28] *** Alias_ joined
[23:28] <seano> [particle]: well, I guess you *could* use a pragma, but I don't think pugs has those yet.

[23:28] <Limbic_Region> seano - what is you current OpenFoundry acct name?

[23:28] <seano> seano :)

[23:29] <Limbic_Region> ok - going to add you that way

[23:30] <Limbic_Region> seano - done

[23:30] <Limbic_Region> you should just be able to use your current acct/pw

[23:30] <seano> Limbic_Region: sweet -- works.

[23:31] * Limbic_Region takes a bow

[23:33] *** mako132_ joined
[23:33] <Limbic_Region> personally regarding the pugs shell

[23:33] <Limbic_Region> I was thinking a :flag

[23:33] <Limbic_Region> like :h = help

[23:34] <Limbic_Region> :q = quiet would have been nice, but :q is taken for quit

[23:34] <[particle]> :s for shhhh

[23:34] <Limbic_Region> :s = silent mode perhaps

[23:34] <svnbot6> r14420 | seano++ | added self

[23:34] * Limbic_Region high fives [particle]

[23:35] <seano> yeah, that makes sense.  maybe traipse down the slippery slope and have :s ARG..., short for "stty" ;)

[23:37] <svnbot6> r14421 | seano++ | * Turn of "strict 'vars'" for -e scripts via the non-standard variable

[23:37] <svnbot6> r14421 | seano++ |   $?STRICT.  This will go away with lexical pragmas.  (Note: you can

[23:37] <svnbot6> r14421 | seano++ |   also de-strict your pugs interactive experience with "$?STRICT=0".)

[23:39] *** dmq joined
[23:41] <Limbic_Region> salutations demerphq

[23:42] <Limbic_Region> ok, well welcome aboard seano

[23:42] * Limbic_Region is calling it a night

[23:42] <Limbic_Region> TTFN all

[23:43] *** mdiep joined
[23:53] *** mako132_ joined
