[00:01] *** araujo joined
[00:01] <araujo> hello :-)

[00:02] <markstos_> hello

[00:02] <araujo> hi markstos_

[00:03] * araujo just read a bit about perl6 and was interested to take a look at what the community has so far :-)

[00:04] <markstos_> araujo: You can try it out right here in the IRC channel:

[00:04] <markstos_> ?eval say "hello world!"

[00:04] <evalbot_12700> OUTPUT[hello world! ] Bool::True

[00:04] <araujo> oh nice :-)

[00:05] <markstos_> Yeah. I just used to post an OO problem I'm having:

[00:05] <markstos_> ?eval class Foo; has %!PARAM is rw; submethod BUILD (%param) { %!PARAM = %param; }; Foo.new( a => 'b' );

[00:05] <evalbot_12700> Error: Undeclared variable: "%param"

[00:05] <markstos_> You can see that some things look different!

[00:05] <araujo> well, yeah, i kind of remember a few things from perl5 ....

[00:06] <araujo> i got quite a time without using it

[00:06] <markstos_> Here's a nice starting point for documentation: http://feather.perl6.nl/syn/

[00:06] <lambdabot> Title: Official Perl6 Documentation

[00:06] <araujo> Ive been some kind of interested, since pugs is being written on Haskell

[00:06] * araujo is a lambda haskell folk

[00:06] <markstos_> Ah.

[00:07] <araujo> :-}

[00:07] <araujo> oh, yay, we got lambdabot here too!

[00:07] <markstos_> There's definitely still Haskell programming let to do if you are interested. :)

[00:07] <araujo> Thanks markstos_

[00:07] <araujo> i will check the docs

[00:07] <araujo> markstos_, sounds cool to me :-)

[00:07] <TreyHarris> markstos_: well, to start with, evalbot requires that you use class Foo { }, because it's not a compilation unit

[00:07] <markstos_> And I'm qualified to give you a commit bit if you find something you want to hack on...

[00:08] * araujo isn't a perl 'monger' though

[00:08] <araujo> cool markstos_ , thanks!

[00:09] <markstos_> TreyHarris: Ah. I still get the error with that {} syntax, though.

[00:09] * araujo wouldn't mind to read the code and report typos , small problems though

[00:10] <markstos_> araujo: Great, thanks! Your help is appreciated. I know Perl but not Haskell, so I help on other parts of the project. It takes all kinds!

[00:13] <Juerd> Seeing police cars is frightening if you're doing something illegal, even if you're quite certain they're after someone else :)

[00:13] <araujo> markstos_, Cool!

[00:13] <araujo> markstos_, it sounds like an interesting project indeed.

[00:14] <araujo> It's good to see two programming languages community working together :-)

[00:15] <markstos_> araujo: yes! I'm not a Haskell programmer, but I'm big fan and user of darcs, and have appreciated what I've learned about Haskel far

[00:15] <markstos_> Perl6 has been fun for me to learn about. I've been blogging about some of recent experiences here:

[00:15] <markstos_> http://use.perl.org/~markjugg/journal/

[00:15] <lambdabot> Title: Journal of markjugg (792)

[00:15] <markstos_> Juerd: Have you been watching DVDs on Linux again ?

[00:15] <Juerd> markstos_: Heh, no. I've been taking pictures of highway road signs.

[00:16] <TreyHarris> markstos_: well, another thing is you need a slurpy hash there.  otherwise you need to pass in an actual hash.  so submethod (*%params)

[00:16] <markstos_> And that's illegal?

[00:16] <Juerd> It's kind of illegal to have 0 velocity on a motorway :)

[00:16] <araujo> markstos_, nice , i check it

[00:16] <Juerd> Can't take good pictures while driving.

[00:16] <markstos_> TreyHarris: Thanks. I had begun to figure out I need the * from another example, but i hadn't figured out why yet.

[00:16] <araujo> I used to program on perl. But i have quite a time without touching it (since 2003 around)

[00:17] <Juerd> araujo: Don't worry; Perl 6 is sufficiently different in internals that it wouldn't help you anyway.

[00:17] <Juerd> araujo: Only the outside is clearly coming from Perl 5

[00:17] <araujo> I have read a bit about this new perl6 , and it practically seems like a 'new' language from the look.

[00:17] <Juerd> It is

[00:18] <araujo> Juerd, oh, yeah, so my first impressions are sort of true then :-)

[00:18] <Juerd> It's a new language, that borrows from many existing languages, but mostly Perl 5.

[00:18] <araujo> Cool!

[00:18] <Juerd> Many of the ideas you find in Perl 5 are still there. But the syntax is very different in many ways. Still, though, it looks like Perl.

[00:18] <markstos_> araujo: I suspect that even some influences of Haskell have snuck into it...

[00:18] <araujo> yeah, i get it.

[00:19] <araujo> markstos_, really? ... such as?

[00:19] <markstos_> I actually findit more different than the same.

[00:19] <markstos_> araujo: Oh, now you've called me out.

[00:19] <Juerd> markstos_: Compare it to Python or Ruby, and you'll find that Perl 6 is much more like Perl 5 than those languages are.

[00:19] <markstos_> I have to recall what I what I thinking of. :)

[00:21] <markstos_> I just recall Audrey Tang blogging about some things she liked about Haskell, but I'm not for certain how the use of Haskell has actually influenced the project.

[00:21] <araujo> haha

[00:22] *** eden_c joined
[00:22] <araujo> it's ok, i probably got too many questions because i _need_ to start reading about this stuff :-)

[00:22] <Juerd> araujo: Ask them :)

[00:22] <araujo> Juerd, :-)

[00:23] * araujo bookmarks markstos_ links to check when he gets back from dinner

[00:23] <araujo> off to eat now, thanks markstos_ Juerd

[00:24] *** eden_c left
[00:25] <Juerd> Bon apetit

[00:31] <markstos_> TreyHarris: The slurpy seems to help, but leads to a new error I don't understand. When I try examine the hash I popular, a casting error is reported:

[00:31] <markstos_> class Foo { has %!PARAM is rw; submethod BUILD (*%param) { %!PARAM = *%param; } }; Foo.new( a => 'b' ); say %!PARAM.perl;

[00:31] <markstos_> ?eval class Foo { has %!PARAM is rw; submethod BUILD (*%param) { %!PARAM = *%param; } }; Foo.new( a => 'b' ); say %!PARAM.perl;

[00:31] <evalbot_12700> Error: Cannot cast into Hash: VRef <Sub:0x895ea48>

[00:32] <markstos_> I'm working on CGI.pm for Perl6, and all I want to do is have args passed to new() availabe later through param()...

[00:33] <markstos_> It seemed so easy at the outset...

[00:36] *** Limbic_Region joined
[00:37] <Limbic_Region> anyone know where I can get a decent nmake.exe without downloading the toolkit?

[00:40] *** mako132_ joined
[00:47] <markstos_> I solved my problem. I was confused. I was calling %!PARAM outside of a class.

[00:47] <markstos_> It would have been nice if the error message was more along those lines, though: "%!PARAM is declared as an attribute of the Foo class, but is being referenced outside of it. "

[00:57] *** neoesque joined
[01:01] <svnbot6> r12701 | markstos++ | Allow Initializing the CGI object with your hash of params

[01:03] *** Limbic_Region joined
[01:19] *** diakopter joined
[01:19] *** Limbic_Region joined
[01:21] *** justatheory joined
[01:21] *** diakopter joined
[01:29] * Limbic_Region attempts to compile pugs using nmake.exe as he refuses to install AND REGISTER the toolkit with M$

[01:30] <Juerd> It must surely suck to be forced to use Windows

[01:31] <Limbic_Region> actually, I am not forced to use windows at home (where I am now)

[01:31] <Limbic_Region> in fact, my desktop is dual boot - this is my wife's shiny new laptop

[01:31] <Juerd> Oh. Why do you prefer Windows on it?

[01:32] <Limbic_Region> I don't - it makes things easier for my wife

[01:32] <Limbic_Region> I haven't had a chance to partition the drive and install linux on the laptop - it is brandy new

[01:32] <Juerd> ssh to your desktop ;)

[01:33] <Limbic_Region> desktop is off-line ATM - need to install wireless card in it

[01:33] <Juerd> Modern linux installers can resize partitions for you

[01:33] <Limbic_Region> long story

[01:33] <Juerd> Ah, wireless. Wireless sucks for nonlaptops

[01:33] <Limbic_Region> Juerd - yes I know

[01:33] <Limbic_Region> and to the second point, it wasn't originally that way - the desktop was hardwired to the wireless router

[01:33] <Juerd> It's hard to tell you something you don't know already :)

[01:34] <Limbic_Region> but unfortunately I needed to move the wifi router to a different floor in the house so the laptop could get reception everywhere - leaving my desktop SOL

[01:34] <Limbic_Region> though I am not really a winblows hater

[01:35] <Juerd> You say "M$" and "Winblows". You may not hate it, but I do sense some annoyance :)

[01:37] *** Bit-Man joined
[01:37] <Limbic_Region> sure - but I have yet to find an OS I am 100% happy with

[01:38] <Limbic_Region> it's not that I don't believe Microsoft can put out quality software, I just believe they choose not to most of the time

[01:39] <Limbic_Region> it's not that I don't think Bill is an uber smart guy, humanatarian, and a great business man - I just think many of those business practices suck

[01:39] <Limbic_Region> what does "==> Refreshing specs from http://svn.perl.org/perl6/doc/trunk/design/syn..." do in the perl Makefile.PL process?

[01:42] * Limbic_Region will brb

[01:42] <Juerd> I'm never 100% happy with any piece of software. But my Kubuntu desktop gets a lot closer than any Windows installation I've seen so far.

[01:46] *** thomason joined
[02:04] *** dolmans joined
[02:06] *** Limbic_Region joined
[02:12] <Limbic_Region> yay - pugs successfully built

[02:12] <Limbic_Region> cool beaners and moldy chicken

[02:19] *** onsen joined
[02:20] *** marksto1 joined
[02:21] <svnbot6> r12702 | dolmans++ | add eval_dies_ok.

[02:22] *** LimbicRegion joined
[02:22] *** dada joined
[02:22] <dada> http://www.djdada.dl.am RnB/HipHop Songs to Download & Musicclips! check it out ;)

[02:24] <svnbot6> r12703 | markstos++ | Add link to Documention.pod from syn_index.html, in hopes

[02:24] <svnbot6> r12703 | markstos++ | that Agentz will add it to the HTMLization system.

[02:25] *** dada left
[02:30] <svnbot6> r12704 | markstos++ | Add mention of kwid and Documentation.pod (S26) to Differences.pod

[02:30] <svnbot6> r12705 | dolmans++ | use eval_dies_ok to ensure user-defined non-assoc infix cannot be used chaining.

[02:32] <svnbot6> r12706 | markstos++ | Clarify on syn_index that Documentation spec is "DRAFT" status.

[02:32] <svnbot6> r12706 | markstos++ | (As opposed to the official-but-still-changing nature of the other specs...)

[03:03] *** kanru joined
[03:25] *** discordja left
[03:34] *** hikozaemon joined
[03:36] <svnbot6> r12707 | markstos++ | simple typo fix

[03:46] *** mako132_ joined
[03:51] *** markstos_ joined
[04:05] * araujo back

[04:06] <araujo> Perl 6 gains the lazy evaluation of lists that has been a feature of some functional programming languages such as Haskell

[04:06] <araujo> :-)

[04:14] *** justatheory joined
[04:26] <TimToady> araujo: did anyone send you a commit bit yet?

[04:26] *** mako132_ joined
[04:27] *** mdiep_ joined
[04:29] <araujo> TimToady, commit bit? ...

[04:30] <araujo> no , i am starting my learning process :-)

[04:32] <TimToady> that's no excuse.

[04:32] <TimToady> all of us are learning.

[04:33] <araujo> :-)

[04:33] <TreyHarris> TimToady: did you see my question earlier?  what happens when you have executable statements inside a class declaration?

[04:33] <araujo> TimToady, well, i would be more tha happy to help whenever i can definitely

[04:33] <TimToady> araujo _at_ gentoo?

[04:34] <araujo> TimToady, yes sir

[04:35] <TimToady> TreyHarris: they execute once at class construction time.

[04:36] <TreyHarris> ok, but RHS of accessor declarations are automatically run as if they were inside BUILD?

[04:37] *** Limbic_Region joined
[04:39] <TimToady> sorry, flakey connection

[04:40] * Limbic_Region just spent the last 3 hours diagnosing a flakey connection

[04:40] <Limbic_Region> turned out, all I had to do was release and renew the dhcp setting on my wireless router

[04:41] <TimToady> well, I'm in a remote location that just happens to have wifi, sort of

[04:41] <TimToady> \^H

[04:42] <TimToady> yes, pseudo assign to attrib is suppoed to happen at BUILD gtime

[04:43] <TreyHarris> ok.

[04:45] <TimToady> A12 explains better than S12, probably.

[04:46] <TimToady> araujo: still waiting for openfoundry to log me in...

[04:46] *** kanru joined
[04:49] <TimToady> araujo: commit bit is on its way.

[04:50] <TimToady> traditional first checkin is to add your name to AUTHORS

[04:50] <TimToady> and then you're emotionally committed.  :)

[04:51] <TimToady> checkin philosophy is to ask for forgiveness rather than permission.. :)

[04:52] <TimToady> have fun!

[04:57] *** Khisanth joined
[05:01] <araujo> TimToady, oh, that was ... fast :-P

[05:01] <araujo> Thanks TimToady ! , i'll do my best

[05:01] <TimToady> seemed kinda slow to me.  :)

[05:01] <araujo> hah, well, considering i just joined this channel ;-)

[05:02] <TimToady> lambdafolk generally seem to catch on about as fast as anyone...

[05:02] * araujo has pointed several times he is not any perl monger too :-)

[05:02] <TimToady> we consider differences to be features around here.

[05:02] <obra> You made the mistake of suggesting that you're at least passingly familiar with Haskell

[05:03] <araujo> haha nice one

[05:03] <obra> ;)

[05:03] <obra> Welcome

[05:03] <araujo> Hi obra , and thanks!

[05:03] <TimToady> sure, I've learned Haskell several times already...

[05:03] <araujo> ya, ive been coding Haskell from quite a time now :-)

[05:03] <obra> Haskell, is, sadly, over my head.

[05:04] <araujo> haha, i sometimes feel like that about perl ;-)

[05:04] <obra> Around perl6ish things, I mostly just suggest things people might want to hack on.

[05:04] * Limbic_Region equates trying to learn Haskell with trying to stuff the square in the round hole - it just don't fit

[05:04] <TimToady> which timezone are you in, araujo?

[05:04] * Limbic_Region will get it eventually though

[05:04] <araujo> TimToady, VET

[05:04] * araujo is from venezuela

[05:04] <Limbic_Region> those edges are bound to wear down eventually

[05:05] *** kanru joined
[05:05] <araujo> :-)

[05:06] <Limbic_Region> seen audreyt

[05:06] <Limbic_Region> ?seen audreyt

[05:06] <lambdabot> audreyt is in #perl6 and #haskell. I last heard audreyt speak 12 hours, 46 minutes and 57 seconds ago.

[05:07] <Limbic_Region> that's the last time I heard her speak too

[05:08] <TimToady> the other lambdafolk are scattered about the world, so around the world, so you can usually get advice here most times o of the day o rnight.

[05:09] <araujo> nice :-)

[05:09] <TimToady> sorry, relocated to better reception now, so not typing blind anymore...

[05:10] * araujo hopes to have some perl mongers around willing to answer questions from time to time :-)

[05:13] <TimToady> the place is infested with those...

[05:13] <araujo> haha

[05:13] <Limbic_Region> araujo - in the very unlikely event there isn't a perl monger here that can answer your question - #perl and PerlMonks are great alternatives

[05:13] <araujo> good

[05:14] <TimToady> though in both of those places most people will be more familiar with Perl 5 than Perl 6.

[05:15] <Limbic_Region> ah yes, nice augmentation TimToady

[05:15] <Limbic_Region> if there isn't a perl 6 monger here that can answer your question - the synopses http://dev.perl.org/perl6 or the mailing list perl6.language are great alternatives

[05:15] <lambdabot> Title: Perl 6 - perl6

[05:17] <araujo> TimToady, i see

[05:17] <aufrank> (slightly) OT:  does anyone know where I can download an archive of the info files for the prl 5.8.8?

[05:19] * Limbic_Region wonders what info files are

[05:22] <aufrank> http://www.gnu.org/software/texinfo/

[05:22] <lambdabot> Title: Texinfo - GNU Documentation System - GNU Project - Free Software Foundation (FSF ...

[05:23] <Limbic_Region> aufrank - oh, those info pages - as in alternatives to man pages

[05:23] <aufrank> yeah, those :)

[05:23] * Limbic_Region would assume there is a pod2info translator out there and generating your own with a little File::Find magic shouldn't be too difficult

[05:24] <Limbic_Region> or even man2info

[05:24] <Limbic_Region> sorry I couldn't be of more help

[05:24] <aufrank> np

[05:25] <Limbic_Region> did you try googling?

[05:25] <Limbic_Region> http://www.stanford.edu/services/pubsw/package/doc/perlinfo.html

[05:25] <lambdabot> Title: IT Services: Perl info 5.6

[05:26] <Limbic_Region> of course - that's for 5.6 but it looks like they are out there if you dig

[05:28] * aufrank digs

[05:35] <Limbic_Region> pod2info is on CPAN

[05:36] <Limbic_Region> or at least so claims perlamiga

[05:38] *** agentzh joined
[05:39] <agentzh> Limbic_Region: pugs' Makefile.PL invokes docs/Perl6/Spec/update and downloads the latest version of synopses via LWP.

[05:40] <agentzh> my smartlinks.pl also invokes the ``update'' script to sync with the synopses repos.

[05:43] <agentzh> markstos: should we offer links to syn drafts on syn_index.html? i really doubt it.

[05:43] <Limbic_Region> agentzh - yeah, the firewall on this laptop doesn't work the same as my desktop so I didn't realize it was silently hanging the LWP request

[05:43] * Limbic_Region fixed it though - thanks

[05:43] <agentzh> LR: you can set the HTTP_proxy env?

[05:43] <agentzh> you know, i'm also behind a firewall.

[05:44] <agentzh> (two firewalls, actually)

[05:44] <agentzh> and an HTTP proxy is just fine.

[05:45] <agentzh> oh, i just remember your brand new laptop at home has no web connection at all. :)

[05:46] <Limbic_Region> no - I am connected on that laptop

[05:46] <agentzh> markstos: there're already serveral syn drafts under docs/Perl6/Spec, but my smartlinks skip them all since they're not official yet.

[05:46] <agentzh> LR: good to hear that. :)

[05:46] <Limbic_Region> firewall not allowing the LWP connection - nothing to do with proxy

[05:47] <agentzh> oh, dear...

[05:47] <Limbic_Region> windows sw based firewalls tend to limit what programs have access to the internet not just what ports are open and where you are connecting to

[05:47] <Limbic_Region> so because the firewall hadn't been told perl.exe was ok - it just silently hung

[05:48] <agentzh> ah, i see. the win firewall. hehe.

[05:48] <agentzh> so it's trivial to fix.

[05:48] <agentzh> i was thinking you had fixed Makefile.PL or something else in the pugs tree.

[05:50] <Limbic_Region> oh, sorry - just getting the new laptop set up with everything I want (on this partition anyway)

[05:51] <agentzh> ah

[05:51] <agentzh> <markstos_> agentz: S29 currently cuts off after the "ref" entry in the HTML version. I'm not sure why. http://feather.perl6.nl/syn/S29.html

[05:51] <lambdabot> Title: S29

[05:51] <agentzh> markstos: looking now.

[05:54] <agentzh> <svnbot6> r12687 | audreyt++ | * eval 'UnicodeHere' now works again.  Thanks to agentzh++ for noticing.

[05:54] <perlbot> What kind of idiot karmas himself?  Your kind of idiot!

[05:54] <agentzh> audreyt: you mean the failing test in t/syntax/comments.t?

[05:54] <agentzh> perlbot: shut up!

[05:55] <ayrnieu> ayrnieu--

[05:57] <agentzh> marstos: it meems that S29 contains Pod errors. fixing now.

[05:59] *** avarab is now known as avar

[05:59] <agentzh> podchecker has told me that Functions.pod has 8 pod syntax errors. oh, my God.

[05:59] *** kattana_ joined
[06:00] <agentzh> and Documentation.pod also has 4 pod syntax errors.

[06:13] <svnbot6> r12708 | agentz++ | [docs/Perl6/Spec]

[06:13] <svnbot6> r12708 | agentz++ | - fixed all the POD syntax errors and warnings reported

[06:13] <svnbot6> r12708 | agentz++ |   by the excellent podchecker script.

[06:13] *** kanru joined
[06:15] <agentzh> sorry, it should have been "[docs/Perl6/Spec/Function.pod]" in the svn log. :)

[06:17] <agentzh> could anyone tell me the middle name of Ingy?

[06:17] <svnbot6> r12709 | agentz++ | [docs/Perl6/Spec/CPAN.pod]

[06:17] <svnbot6> r12709 | agentz++ | - fixed all the POD syntax errors and warnings reported

[06:17] <svnbot6> r12709 | agentz++ |   by the excellent podchecker script.

[06:20] <agentzh> d?t?

[06:20] <aufrank> døt

[06:20] <aufrank> or maybe döt

[06:21] <aufrank> I can never remember

[06:21] <audreyt> see AUTHORS :)

[06:21] <audreyt> but I don't think it's his middle name... "dot net" is the last name

[06:21] <audreyt> it's a preposition, part of his last name

[06:22] <audreyt> like the German "von", French "de",

[06:22] <audreyt> or Dutch "van"

[06:22] <ayrnieu> or the American ""

[06:22] <audreyt> lol

[06:25] <agentzh> thanks, already fixed in Documentation.pod. :)

[06:25] <svnbot6> r12710 | agentz++ | [docs/Perl6/Spec/Documentation.pod]

[06:25] <svnbot6> r12710 | agentz++ | - fixed the Pod syntax errors and warnings which i'm able

[06:25] <svnbot6> r12710 | agentz++ |   to fix.

[06:25] <audreyt> actually, the american equivalent would be "\cH"

[06:25] <svnbot6> r12710 | agentz++ | - changed the file encoding to UTF-8.

[06:26] *** zgh joined
[06:26] <agentzh> audreyt: do you think if we should put drafts into feather.perl6.nl/spec ?

[06:26] <agentzh> i'm doubting.

[06:26] <audreyt> sure, as long as it's clearly marked as such

[06:26] <agentzh> audreyt: okay, thanks for the answer.

[06:27] <audreyt> "unofficial draft written by members of the Perl community but not approved by the Perl 6 Design Team."

[06:27] <audreyt> is the wording ingy used in Perl6::Bible

[06:27] <agentzh> ok

[06:36] <agentzh> audreyt: i hope there will be 6.2.13 and 6.2.14 to fix basic issues in pugs. :)

[06:37] <agentzh> audreyt: i'm just hoping pugs to be somewhat ``trusty'' or sort of ``stable'' before 6.28.0.

[06:38] *** Daveman joined
[06:41] <audreyt> well... the problem is, a stable implementation of december 2005's perl6

[06:41] <audreyt> is kinda of not very useful :)

[06:42] <agentzh> hmm

[06:42] <audreyt> in particular: the object model and capture-based calling convention

[06:42] <audreyt> really needs to land before we can stabilize anything

[06:42] <gaal> moose.

[06:43] <audreyt> currently pugs does not even support user-defined &each and &zip

[06:43] <audreyt> and introspection is completely not there

[06:43] <agentzh> yeah

[06:43] <gaal> itrospection would be fun to write once vv is there

[06:43] <audreyt> today I think I'll fix the regression caused by the Var refactoring

[06:44] <audreyt> (which has delayed my time working on vv by a week, but is probably worth it by the speed and internal clarity win alone :))

[06:44] <agentzh> audreyt: i'll be happy if you're keeping fixing failing tests in t/

[06:44] <audreyt> and then go back to Capture callconv

[06:44] <gaal> I want to finish the \() stuff from last saturday

[06:44] <audreyt> agentzh: right, that's what I'm doing. but "regressions"

[06:45] <audreyt> i.e. tests that used to pass in the previous release but now fails

[06:45] <agentzh> that's great. :)

[06:45] <audreyt> would take precedence over new tests

[06:45] <agentzh> i think we just need more audreys here. :)

[06:47] <audreyt> or more hackathons :)

[06:47] * audreyt needs to get the Brazil hackathon figured out...

[06:47] <agentzh> audreyt: it's not a complaint. that's merely a wish. :)

[06:47] <agentzh> YAPC::SA?

[06:47] <audreyt> yeah

[06:48] <audreyt> or hey, maybe you can fly over to Taipei with xinming and other .cn foles

[06:48] <agentzh> that'll be wonderful. :)

[06:48] <audreyt> and we can have a hackathon here

[06:48] <audreyt> which would be far less expensive than flying to Brazil

[06:48] <agentzh> indeed!

[06:48] <audreyt> I hear that September onward you can get a visa with much more ease.

[06:48] <cmarcelo> anyone mentioned Brazil?

[06:49] <agentzh> audreyt: saddly the school will start in September. :/

[06:49] <audreyt> failing that, I can also come to YAPC::Beijing if there will still be one

[06:49] <audreyt> cmarcelo: yeah. I plan to fly to Brazil directly after OOPSLA

[06:50] <cmarcelo> audreyt: I tested i'm my linux and in feather, s/StrMap/Hash/ for both AST/Internals.hs and interning, no segfaults.. do you have any other segfault case with Hash that I can try reproduce?

[06:50] <audreyt> so that should give me a couple weeks of hacking time

[06:50] <agentzh> audreyt: sweet. :)

[06:50] <audreyt> cmarcelo: no, not at this moment, my macbook is in repair

[06:50] <audreyt> cmarcelo: but I kinda like StrMap better than Hash now

[06:50] <audreyt> as we can now put embedded nulls in hash keys too

[06:51] <audreyt> ?eval my %hash{"foo\0bar"} = 1; %hash.keys.[0].chars

[06:51] <evalbot_12710> 7

[06:51] <audreyt> and having hash ordered by default with minimal speed loss (<5%) is I think a win...

[06:52] <gaal> is that ordered by insertion or collation?

[06:52] <audreyt> by collation.

[06:52] <audreyt> autosorted hash, that is

[06:52] <gaal> so the 5% is insert time yes?

[06:53] <audreyt> I believe so. lookup time should be of no dicernable difference

[06:53] <agentzh> gaal, audreyt: does feather smoke pugs periodically? and where's the resulting tests.yml then?

[06:53] <audreyt> I don't think it does anymore

[06:54] <audreyt> eric256 used to run the smoke loop there

[06:54] <agentzh> ohhhhh

[06:54] <agentzh> used to == no longer

[06:54] <audreyt> aye

[06:55] <agentzh> gaal: any comments?

[06:55] <cmarcelo> audreyt: re StrMap: thats fine so. that Hash segfaults were the last big problem (i remember) in pugs' judy..

[06:55] <agentzh> or any suggestions?

[06:55] <gaal> agentzh: well, I vote for fixing that :) but no tuits to do it myself

[06:55] <audreyt> agentzh: running the smoke loop requires a bit of itmeout detection

[06:55] <agentzh> gaal: is it possible to use the data on the smoke server?

[06:55] <agentzh> audreyt: true.

[06:56] <gaal> agentzh: not really, it's html produce, not raw TAP data

[06:56] <gaal> also it's on iblech++'s server, not feather

[06:56] <audreyt> (brb)

[06:56] <gaal> audreyt: I don't understand Prim dispatch. look:

[06:56] <agentzh> gaal: is it possible to let the user also upload .yml?

[06:56] <gaal> ?eval \(42)

[06:56] <evalbot_12710> "--- !hs/VInt \n- 42\n"

[06:56] <audreyt> ?eval \(1,2)

[06:56] <evalbot_12710> Error: No compatible subroutine found: "&circumfix:\( )"

[06:57] <gaal> this is good, it means my capture crutch works

[06:57] <gaal> that is bad, it meas it doesn't

[06:57] <gaal> Prim:1996

[06:57] <audreyt> gaal: at this moment you need to intercept it

[06:57] <gaal> nothing I put there seems to work

[06:57] <audreyt> it's too late to do it there

[06:57] <gaal> hmm.

[06:57] <audreyt> you need to do like &each

[06:57] <audreyt> and &goto and &assuming

[06:57] <audreyt> and ignore the prim dispatching for now

[06:58] <audreyt> i.e. grep for "bloody"in Pugs.Eval

[06:58] <audreyt> and do it like that.

[06:58] <gaal> Eval's too late too, isn't it?

[06:58] <audreyt> it's not

[06:58] <audreyt> in Eval the args were yet unevaluated

[06:58] <gaal> or, you mean my capture is parsed, just not dispatched?

[06:58] <audreyt> so you can do whatever you want

[06:58] <gaal> *correctly

[06:58] <audreyt> aye

[06:58] <audreyt> to wit:

[06:59] <audreyt> pugs> :d \(1: 2,3, x=>4)

[06:59] <audreyt> Noop;

[06:59] <audreyt> App &circumfix:\( ) (1:

[06:59] <audreyt>                      2,

[06:59] <audreyt>                      3,

[06:59] <audreyt>                      Syn "named" {"x";

[06:59] <audreyt>                                   4})

[06:59] <audreyt> which is the Correct OPParse.

[06:59] <gaal> ack

[06:59] <audreyt> so nix the Prim line

[06:59] <gaal> but xlating it to feed in the evaluator is pretty bogus, isn't it?

[06:59] <audreyt> and swap Eval out? I'll be back in a bit

[06:59] <audreyt> it is, but we can unbogify it once the Exp supports Capt node

[07:00] <gaal> did't we do that already? EE?

[07:00] <gaal> ah, no :(

[07:00] <audreyt> no.

[07:00] <gaal> because of circularity

[07:00] <audreyt> right.

[07:00] <gaal> which can be fixed on 6.5

[07:01] <gaal> (committed in my branch)

[07:01] <audreyt> which is having build problems on win32 at this moment

[07:01] * gaal puts on the broken record

[07:01] <gaal> I will not buy this win32, it is scratched

[07:01] <audreyt> please have patience, I beseech thee. :)

[07:03] * gaal greps for 'bloody'

[07:04] * audreyt will bbiab

[07:06] *** kanru joined
[07:13] <agentzh> gaal: if there's no autosmoke on feather, then i'll feel less motivated to add smoke results to the HTML pages generated by smartlinks.pl. :(

[07:13] <agentzh> even if it's easy.

[07:14] <gaal> how can I help you get autosmokes?

[07:14] <agentzh> i just want an autoupdated tests.yml or something like that.

[07:14] <gaal> there are two approaches to getting this done:

[07:15] *** drbean joined
[07:15] <gaal> 1. hack audreyt's autobuild and add 'make smoke'

[07:15] <gaal> 2. copy her autobuild and modify it

[07:15] <gaal> #2 is wasteful, a little, because it means an extra pugs build

[07:15] <gaal> but #1 means evalbot suffers

[07:15] <gaal> so I say go for #2, just be sure it's niced

[07:16] <agentzh> timeout issue is also important here.

[07:16] <gaal> you mean for hanging tests?

[07:16] <agentzh> aal:

[07:16] <agentzh> eys

[07:16] <agentzh> yes

[07:16] <agentzh> so i would rather reuse others' smoke results instead to do it myself.

[07:17] <gaal> agentzh: I don't know if anybody still runs autosmokes.

[07:17] <agentzh> i mean manual smoke.

[07:17] <gaal> we used to do it -- nothingmuch, eric, me

[07:17] <gaal> but really feather is the perfect place to run it if you ask me

[07:18] <gaal> okay, wanna add hang detection to the harness maybe?

[07:18] <agentzh> i think so.

[07:18] <agentzh> but i don't have to tuits to add that myself since i've never run smoke on my machine.

[07:19] <agentzh> *the

[07:19] <gaal> "make smoke". :-)

[07:19] <agentzh> yes, i know the command. i just don't want to, since it's terribly time consuming. :)

[07:19] <gaal> it's not *that* bad

[07:19] <gaal> say 45 minutes

[07:20] <gaal> depending on your hardware, of course.

[07:21] <agentzh> gaal: if you can find anyone who likes to setup auto smoke on feather, i'll add smoke result support to smartlinks.pl in less than 1 hour.

[07:21] <gaal> just add it :)

[07:21] <agentzh> i have no data

[07:21] <gaal> what do you need right now? data?

[07:21] <agentzh> do you have a tests.yml?

[07:21] <gaal> ah, larry and I made you some

[07:22] <gaal> scroll back a bit

[07:22] <agentzh> url?

[07:22] <gaal> sec

[07:22] <gaal> http://wall.org/~larry/tests.yml

[07:22] <agentzh> thanks

[07:22] <gaal> sure

[07:23] <agentzh> gaal: one last thing, is this url auto updating?

[07:23] <gaal> nope! but that's orthogonal :)

[07:23] <agentzh> okay

[07:27] <gaal> audreyt: data Capt ... c_feeds :: [Feed a]

[07:27] <gaal> multiple feeds are semicolon based, yes?

[07:27] <gaal> so current parsing can't construct them anyway, and for now I should ignore them?

[07:28] <gaal> s/based/separated

[07:28] <TimToady> ==> and <== also theoretically make feeds

[07:29] <gaal> TimToady: ACK, but not in current pugs :)

[07:29] <TimToady> but yes, zip(@a;@b;@c) is a zip of 3 feeds

[07:29] *** drbean joined
[07:29] <gaal> also they construct one feed each, right?

[07:30] *** larsen joined
[07:30] <TimToady> yes, but the multiple feeds get flattened unless bound to @@

[07:30] <gaal> which Syn is this?

[07:30] <gaal> (gluttony, surely)

[07:30] <TimToady> 9 I think

[07:30] <gaal> thank you

[07:37] <TreyHarris> how do you write zip with :shortest?  i can't make the syntax work

[07:38] <ayrnieu> TreyHarris - how did you try?

[07:40] *** elmex joined
[07:40] <svnbot6> r12711 | agentz++ | [util/smartlinks.pl]

[07:40] <svnbot6> r12711 | agentz++ | - changed the confusing var name $links to $linktree in

[07:40] <svnbot6> r12711 | agentz++ |   the Perl 5 source.

[07:41] <agentzh> there's a bug in smartlinks.pl which results in incomplete HTML outputs. i'll try to fix it first. :/

[07:41] <agentzh> markstos: thanks for reporting this.

[07:42] <TreyHarris> ayrnieu: oh, i went to the source, it's unimpl.  but thanks

[07:45] *** iblechbot joined
[07:45] <ayrnieu> TreyHarris - oh, I was just curious.

[07:47] *** pina joined
[07:47] *** pina left
[07:54] <gaal> is \(1;;2) a syntax error?

[07:54] <gaal> (empty feed)

[07:55] <agentzh> oh, there seems to be a bug in File::Temp or Pod::Simple. well, not sure. but now i've fixed smartlinks.pl by avoiding temp files.

[07:56] <TimToady> I don't know why it should be a syntax error.

[07:57] <gaal> TimToady: okay

[07:57] <gaal> I won't make it an evaluation error either then :)(

[08:02] *** marmic joined
[08:05] <svnbot6> r12712 | agentz++ | [util/smartlinks.pl]

[08:05] <svnbot6> r12712 | agentz++ | - fixed the HTML truncating bug. it was due to

[08:05] <svnbot6> r12712 | agentz++ |   non-flushed output buffer.

[08:05] <svnbot6> r12712 | agentz++ | - removed the dependency File::Temp by using an

[08:05] <svnbot6> r12712 | agentz++ |   undocumented feature of Pod::Simple::HTML.

[08:05] <gaal> heh, agentzh++

[08:05] <agentzh> :)

[08:09] <agentzh> Juerd: i've just installed YAML::Syck and also upgraded YAML on feather.

[08:09] <svnbot6> r12713 | audreyt++ | * remove t\rules\rules.t as it's superceded by the spec-based tests in t\p6regex

[08:13] <agentzh> markstos: S29 (and also other synopses) is now complete on feather: http://feather.perl6.nl/syn/S29.html

[08:13] <lambdabot> Title: S29

[08:18] *** foo\ joined
[08:19] *** prefiks joined
[08:20] <agentzh> markstos: smartlinks pointing to syn drafts won't work. this is not a bug, but an intentional feature. or we can discuss it later.

[09:10] <svnbot6> r12714 | agentz++ | [util/smartlinks.pl]

[09:10] <svnbot6> r12714 | agentz++ | - added very detailed Pod documentation which explains

[09:10] <svnbot6> r12714 | agentz++ |   the internal algorithms and data structures we're

[09:10] <svnbot6> r12714 | agentz++ |   using. so others can understand and/or hack on the

[09:10] <svnbot6> r12714 | agentz++ |   source code more easily.

[09:10] <svnbot6> r12715 | agentz++ | [util/smartlinks.pl]

[09:10] <svnbot6> r12715 | agentz++ | - removed 'mkdir "tmp"' which was legacy.

[09:13] <svnbot6> r12716 | agentz++ | [util/smartlinks.pl]

[09:13] <svnbot6> r12716 | agentz++ | - added one "FIXME" comment.

[09:15] <agentzh> supper &

[09:15] *** agentzh left
[09:46] *** elmex joined
[09:56] *** cookys joined
[10:21] *** chris2 joined
[10:37] *** DaGo joined
[10:38] *** buetow joined
[11:01] *** dolmans joined
[11:06] *** agentzh joined
[11:13] <agentzh> TimToady: oh, sorry, i didn't download tests.yml and now it's not available at http://wall.org/~larry/tests.yml.

[11:13] <gaal> agentzh: I'll send you mine. sec

[11:13] <agentzh> gaal++

[11:15] <gaal> http://perlcabal.org/~gaal/tmp/tests.yml

[11:17] <agentzh> gaal: should i use the OO interface provided by Test::TAP::Model or directly access the data structure in .yml?

[11:17] <gaal> TTM is better

[11:17] <gaal> (TTM is a refectoring of yaml_harness)

[11:18] <agentzh> okay

[11:32] *** zgh joined
[11:32] *** soisoisoi joined
[11:37] *** zgh joined
[11:42] *** Nop0x90 joined
[11:43] *** zgh joined
[11:45] *** kane-xs joined
[11:45] <TimToady> woops, is there now.

[11:45] <TimToady> zzz &

[11:48] *** zgh joined
[11:56] *** zgh joined
[11:57] <svnbot6> r12717 | polettix++ | [t/builtins/strings/quotemeta.t]

[11:57] <svnbot6> r12717 | polettix++ |    Worked around the lack of a Config.pm module.

[11:57] <svnbot6> r12717 | polettix++ |    Marked absence with a todo.

[12:03] *** zgh joined
[12:03] *** Aankhen`` joined
[12:03] *** markstos_ joined
[12:05] *** jferrero joined
[12:09] *** foo\ joined
[12:11] <kane-xs> seen audreyt

[12:17] *** norageek2 joined
[12:19] *** zgh joined
[12:20] *** marmic joined
[12:25] *** norageek2 left
[12:26] *** zgh joined
[12:36] *** zgh joined
[12:41] *** zgh joined
[12:45] *** drbean joined
[12:48] *** zgh joined
[12:59] *** zgh joined
[13:02] <pasteling> "markstos_" at 12.176.101.89 pasted "bad mojo: What happens when you declare variable with 'my' that has the same name as an arg" (13 lines, 430B) at http://sial.org/pbot/19274

[13:02] <audreyt> markstos_: indeed, that should raise a warning

[13:02] <audreyt> or an error

[13:03] <audreyt> but probably a warning about redeclaration

[13:03] <markstos_> audreyt: Thanks!

[13:03] <markstos_> audreyt: So it should warn, but work as expected, with the arg getting a value ?

[13:03] <audreyt> it's conceptually same as

[13:03] <audreyt> sub f { my %p; my %p; }

[13:03] <markstos_> That's what I thought should happen.

[13:03] <audreyt> which is the same as

[13:04] <audreyt> sub f {my %p; %p}

[13:04] <audreyt> which is not what happened in perl5

[13:04] <audreyt> i.e. in perl6 redecl of the same var in the same storage class

[13:04] <audreyt> is a warning but noop

[13:04] <markstos_> It was one of those frustrating experiences where I made a reduced test case, but the test case passed..... until I found extra "my" in my code.

[13:04] <audreyt> yeah. a warning should definitely happen

[13:04] <markstos_> Thanks!

[13:04] *** zgh joined
[13:04] <audreyt> np :) write a test that demonstrates this shadowing?

[13:05] <markstos_> Here's anothe case that could use a better error-- calling an attribute outside of a class:

[13:05] <markstos_> ?eval class Foo { };  say %!PARAM.perl;

[13:05] <evalbot_12717> Error: Cannot cast into Hash: VRef <Sub:0x895ea48>

[13:05] <audreyt> aye

[13:06] <markstos_> It took me a while to figure that out one, too. :)

[13:06] <markstos_> audreyt: Test case for issue #1 coming up. Care where I file it?

[13:07] <audreyt> t/var/my.t seems logical

[13:07] <markstos_> coming up.

[13:07] <audreyt> moose!

[13:07] <markstos_> Is moose the new cool ?

[13:09] <audreyt> or the new hot... or both

[13:12] *** zgh joined
[13:13] <markstos_> audreyt: What about this second case I reported. Do you agree it should have a better warning? I could write a test for it, too. :)

[13:13] <svnbot6> r12718 | markstos++ | A new failing test case for my. audreyt confirmed it should work, but emit a warning.

[13:16] <audreyt> well, it's hard to test the presence of a warning

[13:16] <audreyt> maybe it should be a flat-out error

[13:16] <markstos_> ...until Test::Warn is ported. :)

[13:17] <audreyt> so let's make it that, and you can test that it would be a compile time error :)

[13:17] <markstos_> I think a syntax error for the second case would be reasonable.

[13:17] <audreyt> test for that then.

[13:17] *** zgh joined
[13:17] <markstos_> I use eval_ok() for that ?

[13:17] <audreyt> sure

[13:17] <markstos_> coming up.

[13:18] <gaal> hey audreyt. got some Eval code but it's not finished...

[13:19] <gaal> some coercions I'm not sure about, too

[13:19] <audreyt> does it compile? :)

[13:19] <gaal> nope :)

[13:19] <audreyt> check it in anyway? :)

[13:19] <gaal> let me scp up a patch

[13:21] <gaal> http://perlcabal.org/~gaal/capt.0.patch

[13:23] <audreyt> 404

[13:23] <gaal> oops http://perlcabal.org/~gaal/tmp/capt.0.patch

[13:24] <gaal> I wonder if there's a better way to manage this double-accum pattern, this is the second time I'm encountering it

[13:24] *** zgh joined
[13:25] <gaal> the first two args to argsFeed are accumulators, the third is the actual argstack, here used only with one semi-separated-section (we need a name for that!)

[13:26] <gaal> the first accum is the total Feed list, the second is the currently constructed Feed, Maybed because \(1;;2) is legal.

[13:26] <gaal> and it's in Eval because I'm assuming this should reduce.

[13:27] <audreyt> that's correct

[13:27] *** onsen joined
[13:28] <clkao> mmmm onsen

[13:29] <onsen> hello :)

[13:31] <svnbot6> r12719 | markstos++ | New test: calling a trait outside of a class should be a syntax error.

[13:31] <svnbot6> r12719 | markstos++ | ( I /think/ I got the syntax right for testing this... )

[13:32] *** zgh joined
[13:32] *** Revision17 joined
[13:36] <audreyt> gaal: looking at the patch now

[13:37] <gaal> cool

[13:37] <audreyt> (sorry, on a semi-defunct win32 work env)

[13:37] <audreyt> I had to download patch ;)

[13:37] <gaal> shall I paste the errors?

[13:37] <gaal> heh, sorry :)

[13:38] <audreyt> no, I got it now

[13:38] <agentzh> gaal: i've implemented that feature.

[13:38] <audreyt> compiling

[13:39] <gaal> /a.{6}/++

[13:39] <audreyt> it seems to compile just fine

[13:39] <audreyt> after a one line change that is

[13:39] <TimToady> btw, not expecting a fix soon, but my Test.pm.yml makes my pugs segv, even if complete tree is regened.

[13:40] <audreyt> !

[13:40] <audreyt> you mean you cannot run smoke anymore?

[13:40] <TimToady> I can run the part of it that doesn't use Test.pm :/

[13:40] <audreyt> heh

[13:40] *** nothingmuch joined
[13:40] <gaal> TimToady: can you regen the .yml itself? rm blib6/lib/Test.pm.yml ; make blib6/lib/Test.pm.yml

[13:40] *** zgh joined
[13:40] <audreyt> howlong has it been segfaulting?

[13:41] <TimToady> since sometime yesterday

[13:41] <TimToady> I'll try the specific regen, but certainly a full make won't work.

[13:41] <gaal> there was a strictness fix in hssyck, right?

[13:41] <audreyt> in drift yaml hat is

[13:41] <audreyt> reverting that

[13:42] <audreyt> actually, I don't even have a full svk mirror yet :/

[13:42] <audreyt> gaal: can you revert it? should be indriftyaml

[13:42] <gaal> sure

[13:42] <audreyt> gaal++

[13:43] <TimToady> complains about unexpected " at line 298

[13:43] <audreyt> gaal: you don't need separate IValue and Pure instances

[13:43] <audreyt> instance ICoercible P ValCapt where asStr _ = return (cast "<capt>") -- XXX

[13:44] <audreyt> is sufficient

[13:44] <audreyt> I'll commit in a bit

[13:44] <gaal> TimToady: line 298 of Test.pm?

[13:45] <TimToady> yes, print "not " unless $cond;

[13:45] <TimToady> print "not " unless $cond;

[13:46] <TimToady> apparently from some previous line

[13:46] <audreyt> weird, I can't quite duplicate that

[13:46] *** f0rth joined
[13:46] <audreyt> and it works once you remove .yml?

[13:46] <audreyt> oh wait, it must be unrelated, if it's a parse error

[13:47] <TimToady> I don't believe the error message shows with a full make, but a partial .yml would explain the segv...

[13:47] <gaal> um, I'll hold off with the revert patch then...

[13:48] <gaal> maybe we need a checksum to protect against this then.

[13:49] <TimToady> ./pugs -c ext/Test/lib/Test.pm works

[13:49] <TimToady> fails if I put -CParse-YAML in

[13:50] <gaal> asYAML [ver, desc, check dump, dump] where dump = asYAML ast

[13:50] *** zgh joined
[13:50] <gaal> hmm, ok, let me ci the revert.

[13:52] <gaal> TimToady: please try w/12720

[13:52] <svnbot6> r12720 | gaal++ | * revert audreyt++'s r12647, to see if it fixes TimToady++'s Test.pm.yml segfault

[13:52] <gaal> brb

[13:53] <TimToady> compiling

[13:54] <agentzh> an HTML-related question: <td><pre>...</pre></td> results in unbearable big table cells. how can i get rid of it?

[13:55] <agentzh> i've tried many methods, but saddly they don't work.

[13:55] <TimToady> now I get pugs: user error (no tag found)

[13:56] <agentzh> TimToady: please regenerate your prelude.pm.yml

[13:56] <gaal> rm the yml file and regen it manually again?

[13:56] <agentzh> i've ever got this error too.

[13:56] <Juerd> agentzh: Don't use <pre>.

[13:56] <agentzh> Juerd: then what should i use?

[13:56] <gaal> "regen it again" is superfluously reduntant, and also repeats itself

[13:56] <agentzh> that's code line, you know. :)

[13:56] <TimToady> same parse error, unexp "

[13:57] <Juerd> agentzh: Just expand \n to <br>, and whitespace to &nbsp; yourself.

[13:57] <TimToady> looking at prelude now

[13:57] <agentzh> Juerd: and also set a proper code font?

[13:57] <Juerd> agentzh: Obviously

[13:57] <gaal> agentzh: "<code>"

[13:57] <Juerd> agentzh: Don't change every horizontal whitespace to nbsp, or you'll have the same effect as pre.

[13:58] <agentzh> Juerd: when using <code>?

[13:58] <Juerd> agentzh: In leading whitespace, substitute every odd, and in other whitespace every even.

[13:58] <agentzh> Juerd: ahh

[13:59] <gaal> audreyt: doing that change you suggested with IValue etc. didn't work

[13:59] <gaal> looking forward to your commit ;)

[13:59] <Juerd> e.g. s/^(  )/"&nbsp; " x (length($1) / 2)/gem; s/  / &nbsp;/g

[13:59] <Juerd> Or something like that.

[13:59] <Juerd> (untested)

[13:59] <agentzh> Juerd: thank you. will use that. :)

[14:00] <TimToady> blew away both .pm.yml files, same problem

[14:00] <Juerd> Won't work, delemiter error.

[14:00] <gaal>  /^(  *)/

[14:00] <Juerd> Eh, right

[14:03] <TimToady> biab &

[14:04] <gaal> looks like a 6.4 issue, Test.pm worksforme

[14:04] <gaal> (but then what triggered it?)

[14:05] <wolverian> alternatively, use xhtml2 and its <l> element for each code line.

[14:05] <wolverian> (no, I'm not being entirely serious. I wish, though..)

[14:07] <gaal> ah, oops, against trunk Code.hs is still included. beh

[14:08] <wolverian> I suppose <l> wouldn't help, in fact. it doesn't create block structure in the dom. oh well.

[14:09] * audreyt waits for svk to fully catch up the repo history...

[14:10] <gaal> weird, touching Val and recompiling didn't fix it.

[14:10] <SamB> rm the .hi instead?

[14:11] <gaal> SamB: the module was recompiled

[14:11] <gaal> but the proposed fix didn't work

[14:12] <audreyt> anymoose... finally got it to sync fully

[14:12] <audreyt> committing

[14:12] <gaal> yay

[14:17] <audreyt> gaal: I handled the argsFeed case incorrectly it seems

[14:17] <audreyt> the feeds only recognizes invocants

[14:17] <gaal> could certianly have been a bug of mine...

[14:17] <svnbot6> r12721 | audreyt++ | Gaal's \(...) Capture-literal patch, hacked slightly so it compiles.

[14:17] <audreyt> argsFeed fAcc _ [] = return fAcc

[14:17] <audreyt> please fix that line appropriately

[14:18] <audreyt> dinner, bbiab

[14:28] <araujo> morning

[14:29] <markstos_> Good morning araujo.

[14:29] <araujo> morning markstos_ :-)

[14:31] <gaal> yay, it works (for positionals. fixing nameds.)

[14:32] <audreyt> gaal: it didn't compile as you were missing three fromVal

[14:32] <audreyt> that converts oldval to newval

[14:32] <audreyt> I think that's all

[14:32] <audreyt> TimToady: "svn di ext" shows nothing?:)

[14:32] <gaal> and bugs in argsFeed now :) turns out this is bogus: let (VStr key) = castV key'

[14:33] <gaal> but what's in key'? or shall I fromVal it too?

[14:33] <TimToady> audreyt: no output

[14:33] <gaal> (I was sure it _was_ a VStr by :D....)

[14:33] <audreyt> Syn "named [VStr key, ] <-

[14:33] <audreyt> would do

[14:33] *** mako132_ joined
[14:34] <audreyt> TimToady: I can't seem to duplicate this on feather nor win32 here...

[14:35] <audreyt> rm blib6/lib/Test.pm.yml ; make blib6/lib/Test.pm.yml

[14:35] <audreyt> does this also fail?

[14:37] <TimToady> yes, unexp " line 298

[14:37] *** kanru joined
[14:37] <audreyt> does "svn di" show anything?

[14:37] <araujo> markstos_, i am in (with a commit bit!) now :-)

[14:37] <gaal> well, it's better but the reduction's still a bit off. committing...

[14:37] <TimToady> nothing

[14:38] <TimToady> not surprising, considered I blew it all away and redownloaded

[14:39] <audreyt> extremely puzzling, then

[14:39] <markstos_>  araujo: Great! You must have found someone else to give one out then.

[14:40] <TimToady> *whistles*

[14:40] <araujo> markstos_, blame TimToady ;-)

[14:40] <araujo> hi TimToady !

[14:40] <audreyt> so if you do have a correct blib6/lib/Test.pm.yml

[14:40] <TimToady> good morning, hope you got more sleep than I did last night...

[14:40] <audreyt> such as can be downloaded from http://perlcabal.org/~audreyt/tmp/Test.pm.yml

[14:40] <markstos_> araujo: do you have a first task in mind to commit then ?

[14:40] <audreyt> put into blib6/lib/ and "touch"ed

[14:41] <audreyt> does it make smoke work?

[14:41] <araujo> TimToady, sort of :-)

[14:41] <araujo> markstos_, not really .. well i was thinking to update the AUTHORS file

[14:42] <araujo> i just got up, and i need to find my way around all this code first :-)

[14:42] *** lichtkind joined
[14:43] <lichtkind> hi PerlJam

[14:44] <lichtkind> can anybody explain why on $*IN there is alsways an = = ? and not a =

[14:44] <gaal> captures landed

[14:44] <ayrnieu> lichtkind - one of them is an operator.

[14:45] <lichtkind> ayrnieu thanks but what operator coul it be if its also =

[14:46] <integral> "$a = =$*IN", the first = is &infix:<=> for assignment,  the second = is &prefix:<=> for fetching a value from the iterator

[14:46] <TimToady> audreyt: still a segv

[14:49] <svnbot6> r12722 | gaal++ | * Capture construction, supporting invocants, positional and

[14:49] <svnbot6> r12722 | gaal++ |   (possibly recurring) named args:

[14:49] <svnbot6> r12722 | gaal++ |   pugs> \(1: 2, :a<b> :a<b>)

[14:49] <svnbot6> r12722 | gaal++ |   VPure (CaptMeth

[14:49] <svnbot6> r12722 | gaal++ |       { c_invocant = VPure (IFinite 1)

[14:49] <svnbot6> r12722 | gaal++ |       , c_feeds = [ MkFeed

[14:49] <svnbot6> r12722 | gaal++ |           { f_positionals = [VPure (IFinite 2)]

[14:49] <svnbot6> r12722 | gaal++ |           , f_nameds = fromList

[14:49] <svnbot6> r12722 | gaal++ |             [ ("a", [VPure (MkStr "b"), VPure (MkStr "b") ])]

[14:50] <svnbot6> r12722 | gaal++ |           }

[14:50] <svnbot6> r12722 | gaal++ |         ]

[14:50] <svnbot6> r12722 | gaal++ |       })

[14:50] <svnbot6> r12722 | gaal++ |   This doesn't seem to reduce everything correctly yet, e.g.

[14:50] <svnbot6> r12722 | gaal++ |   \(1: ("a"~"b") => "c") breaks.

[14:50] <TimToady> audreyt: in fact, the .pm.yml I generate is identical to the one you sent me

[14:50] <audreyt> hm. I'm puzzled

[14:50] <audreyt> the segv happens after the parse error

[14:51] <audreyt> or before?

[14:51] <lichtkind> thanks integral thyt where one of the missing peaces for my perl6 talk

[14:51] * audreyt isn't quite sure what's the error sequence

[14:51] <audreyt> gaal: that is entirely correct;

[14:51] <audreyt> "a"~"b"=>c

[14:51] <audreyt> is not a named param

[14:51] <audreyt> in fact, neither is "a"=>"c".

[14:51] <audreyt> only a=>"c" is

[14:51] <integral> lichtkind: hmm?

[14:52] <gaal> how do you programmatically select a named param then?

[14:52] <audreyt> [,]...

[14:52] <audreyt> would be the only way

[14:52] <lichtkind> integral ?

[14:52] <audreyt> which I think is a feature, actually :)

[14:52] <markstos_> It looks like $SIG{__WARN__} is not spec'ed for Perl6? Does something replace it? (yet?)

[14:52] <integral> lichtkind: I didn't understand what you meant

[14:52] <gaal> I'm not sure I agree :)

[14:53] <audreyt> gaal: consider that positionals can also be passed by name

[14:53] <audreyt> gaal: it is quite nice to be able to trnanslate those to positionals on compile time

[14:53] <audreyt> and invalidate bogus calls without requiring runtime dispatch...

[14:53] <audreyt> "a b c" => 'x'

[14:53] *** diakopter joined
[14:54] <lichtkind> integral your answer were one of the last missing sentences of my perl6 talk in 2 weeks in frankfurt

[14:54] <audreyt> would be an example; you cannot have $::("a b c") declared as a param

[14:54] <TimToady> maybe I should just try a reboot.  could have a corrupted memory image persisting or something.

[14:54] <integral> lichtkind: oh!

[14:54] <gaal> okay, okay. so say I want a mona^H^H^H^Hset of combinators for captures -- at the least, paste inplace and paste add-semisection

[14:54] <TimToady> biab &

[14:54] <audreyt> TimToady: if you're on win32, that might actually fix things...

[14:54] <TimToady> :P

[14:55] <audreyt> TimToady: but I'm not sure I understand the sequence

[14:55] <audreyt> when you "make blib6/lib/Test.pm.yml"

[14:55] <audreyt> it's generated, but then segfaulted?

[14:55] <audreyt> and when you actually run the tests, it fails with parse error?

[14:55] <lichtkind> integral have to go im in icafe .. thanks

[14:56] <lichtkind> by @ all

[14:56] <audreyt> gaal: it's [,]...

[14:56] <gaal> \([,] $capta ; $captb) ? \([,] $capta, $captb)

[14:56] <lichtkind> your grat

[14:56] <lichtkind> great

[14:56] <audreyt> \([,] =$capta, =$captb)

[14:56] <audreyt> is the currently specced way

[14:56] <gaal> what's =$capt?

[14:56] <audreyt> it's a shorthand for

[14:56] <audreyt> $$capt, @$capt, %$capt

[14:57] <gaal> ooh

[14:57] <audreyt> when occuring after [,]

[14:57] <audreyt> (bbiab)

[15:06] *** agentzh joined
[15:19] <agentzh> gaal, Juerd: <code> with interweaved spaces and `&nbsp;` results in exactly what i want. thank you!

[15:24] * gaal boings

[15:26] <TimToady> reboot didn't help, so if something is corrupt, it's on the disk.

[15:27] <TimToady> will now upgrade 6.4.1 to 6.4.2 (available via yum)

[15:27] *** Limbic_Region joined
[15:27] <TimToady> (pity they don't have 6.5 yet...)

[15:28] <gaal> TimToady: there's a binary build of 6.5 you can fetch

[15:28] <svnbot6> r12723 | markstos++ | Add a cross reference to help people looking for docs on references to learn about Captures.

[15:28] <svnbot6> r12724 | gaal++ | * Now that Captures are handled in Eval, revert the changes in Prim

[15:28] <svnbot6> r12724 | gaal++ |   from r12474 that were neither helpful nor pretty.

[15:29] <gaal> I put one under my home dir

[15:29] <gaal> all I needed was readline 4

[15:29] <TimToady> yeah, I know, but that's work. :)

[15:31] <audreyt> feather is also 6.4.1

[15:31] <audreyt> so I really doubt it's ghcvers problem

[15:31] <Limbic_Region> morning audreyt

[15:31] <Limbic_Region> or rather - evening your time

[15:31] <TimToady> but if my ghc is corrupt somehow, upgrade will fix

[15:31] <audreyt> greetings

[15:32] <audreyt> that is true

[15:33] <gaal> TimToady's box was hax0red by ruby zealots?

[15:33] <svnbot6> r12725 | gaal++ | * Add note about Capture FAQ

[15:33] <svnbot6> r12726 | agentz++ | [util/smartlinks.pl]

[15:33] <svnbot6> r12726 | agentz++ | - implemented the smoke result rendering feature

[15:33] <svnbot6> r12726 | agentz++ |   requested by gaal++

[15:33] <svnbot6> r12726 | agentz++ |   you can now use the --test-res option to add smoke

[15:33] <svnbot6> r12726 | agentz++ |   results into the HTML:

[15:33] <svnbot6> r12726 | agentz++ |     $ util/smartlinks.pl --test-res=tests.yml t/*/*.t t/*/*/*.t

[15:33] <gaal> whee!

[15:33] <audreyt> wheeeeee!

[15:33] <gaal> agentzh++ agentzh++ agentzh++ :)

[15:33] <audreyt> wow this is quickly turning into something most awesome

[15:34] * Limbic_Region also likes the way 6.5 compiles - much better look and feel

[15:34] <agentzh> gaal: not yet add --test-res option to feather's script, since there's no autoupdating tests.yml. :/

[15:34] <gaal> now to set up autosmokes on feather again :)

[15:35] <agentzh> i'm feeling quite comfortable with the smoke-result-rendered HTML-fied Synopses. :)

[15:35] <agentzh> they look very nice~~~

[15:35] <gaal> demo?

[15:35] <gaal> oh, never mind, I can gen one myself :)

[15:35] <agentzh> here's a demo:

[15:35] <agentzh> http://svn.berlios.de/svnroot/repos/unisimu/Perl/Syn/S02.html

[15:35] <lambdabot> Title: S02

[15:35] <gaal> even better :P

[15:36] <agentzh> :)

[15:36] <gaal> lol pugs' commit rss feed doesn't escape html, so the commit log that said :a<b> threw the rest of the message into bold

[15:36] <agentzh> skipped tests are currently not marked at all.

[15:36] <agentzh> and TODO tests are marked as normal tests.

[15:37] <agentzh> (i'm using actual_ok of Test::TAP::Model::Subtest)

[15:37] <gaal> *very* pretty :)

[15:37] <agentzh> gaal: thanks!

[15:37] <Limbic_Region> audreyt - still on Win32?

[15:37] <Juerd> agentzh: "5 √, 3 ×" in the clickable links?

[15:37] <agentzh> Juerd: pardon?

[15:38] <Juerd> agentzh: test result stats

[15:38] <Juerd> Per snippet :)

[15:38] <agentzh> ah, you mean a small summary, right?

[15:38] <Juerd> So you don't have to click-open everything to see what failed

[15:38] <Juerd> Yes

[15:38] <audreyt> Limbic_Region: yes. I figured out the nested atomicity problem

[15:38] <Juerd> s/to see what failed/to look for failed tests/

[15:38] <agentzh> Hmm, that's easy...

[15:38] <audreyt> and found a glaring bug in one of the examples

[15:38] <audreyt> Limbic_Region: fixing it now

[15:38] <agentzh> Juerd: thanks for suggesting this. :)

[15:39] <Juerd> agentzh: Thanks for creating this :)

[15:39] <agentzh> hehe

[15:39] <Limbic_Region> yay - that cleans up 6 more examples

[15:40] <Limbic_Region> or rather - potentially, there may be other problems

[15:40] * Limbic_Region wonders if he was successful in getting eric256 to come back and fix his examples/games/wizard.pl

[15:40] <svnbot6> r12727 | gaal++ | * make pass and fail marks a litle more prominent

[15:41] <audreyt> it can be reduced to "sub f {} my &g; sub h {} 1;"

[15:41] <audreyt> ?eval sub f {} my &g; sub h {} 1;

[15:41] <evalbot_12726> (no output)

[15:41] * audreyt praises easy access to the stack trace

[15:41] <gaal> the haskell stack trace?

[15:42] <audreyt> yeah +RTS -xc

[15:42] <gaal> after make fastprof yes?

[15:43] <audreyt> just prof

[15:43] <gaal> er yes. I need to buy some RAM before I can do that :-)

[15:44] <agentzh> gaal: personally i don't quite like bold marks. :)

[15:44] <Limbic_Region> it is amazing what 6 years will do WRT prices

[15:44] <Juerd> It's amazing they still profit.

[15:45] <agentzh> gaal: but i'm fine with that. :)

[15:45] <gaal> agentzh: ah, I didn't mean to start an argument about visualization.. the green just seemed a little faint for me...

[15:45] <Limbic_Region> Juerd - I think I have a hunch as to why that is - at least with WinTel PCs

[15:45] <Juerd> Limbic_Region: Which is? No overproduction, ever?

[15:45] <Limbic_Region> I have spent two days cleaning up crap trial ware software they install

[15:45] <agentzh> gaal: okay. :)

[15:45] <Limbic_Region> I am thinking they have SW sponsors

[15:45] <Juerd> I see chips for sale now, that were manufactured in 2004. That must be a terrible loss.

[15:46] <Juerd> Limbic_Region: Hm, seriously?

[15:46] <Limbic_Region> yes

[15:46] <Juerd> I sell Wintel boxes with lots of open source software :)

[15:46] <Limbic_Region> in fact, there is at least one lawsuit over it

[15:47] <Limbic_Region> in any case, this laptop (my wife's) is much bigger and badder than my desktop (which was top of the line when I bought it) and cost literrally 1/5 the price

[15:47] <Juerd> Yea

[15:47] <Juerd> When I think of my first laptop...

[15:48] <Juerd> My current laptop is expensive, but costs the same as that entry level laptop back then.

[15:49] <gaal> hey, where are captures actually parsed ruleVal shouldn't be enough...

[15:49] <Limbic_Region> well, the nice thing is that I should now be able to do a little hacking outside of work

[15:49] <TimToady> agentzh: allow me to also say that I'm exceedingly impressed.

[15:50] <gaal> aha! that's for the noncircumfix case, and indeed falls short:

[15:50] <gaal> ?eval \42

[15:50] <evalbot_12727> \42

[15:50] <agentzh> TimToady: oh, i'm also impressed to hear that. ;-)

[15:50] <gaal> fixing :)

[15:50] <Limbic_Region> agentzh++

[15:50] <Juerd> Why do people in American movies stress what they say by announcing the number of words?

[15:50] <agentzh> Limbic_Region: :)

[15:50] <Juerd> "One word: ...", "Three words: ..."

[15:50] <Juerd> To me, this is extremely silly :)

[15:50] <gaal> crude error detection protocol?

[15:51] <Juerd> gaal: Heh

[15:51] <TimToady> It might be related to the game of charades.

[15:51] <Juerd> That's in bad American comedies. "Two words: ..." "That's three words"

[15:51] <TimToady> but culturally I think it's a form of golf

[15:51] <Juerd> TimToady: Adding a checksum makes it *longer*

[15:52] <TimToady> "I can express that idea in fewer words than you can..."

[15:52] <Juerd> Heh

[15:52] <TimToady> it's meta-info, so doesn't count. :)

[15:52] <Limbic_Region> Juerd, after thinking about it for 30 seconds, I think it has to do with our need for instant gratification

[15:52] *** dolmen joined
[15:52] <svnbot6> r12728 | markstos++ | add commented-out links to FAQ from new docs index.

[15:52] <svnbot6> r12728 | markstos++ | Needs some help (from agentz?) to actually make the pod2html conversion happen.

[15:52] <Limbic_Region> when we see a movie review - we don't want two read a couple of paragraphs

[15:52] <Limbic_Region> we want

[15:52] <Juerd> Limbic_Region: Whoa. Explain that, please :)

[15:52] <Juerd> Ah

[15:52] <Limbic_Region> it can be summed up in 5 words ...

[15:52] <Limbic_Region> go see this movie today

[15:52] <Limbic_Region> etc

[15:52] <Juerd> In a movie review, maybe. But I'm talking about the movies themselves...

[15:53] <TimToady> there's a one-word metaform from Mr Rogers: "Can you say ___?"

[15:53] <Limbic_Region> Juerd - I think it stems from that

[15:53] <Juerd> I see

[15:53] <Limbic_Region> but again, that's only 30 seconds of thinking about it

[15:53] <agentzh> markstos: looking

[15:53] <Juerd> Limbic_Region: That's 28 more than I have

[15:53] <Juerd> I'm lazy. I don't think about such things; I ask on IRC :P

[15:53] <Limbic_Region> heh

[15:54] <Limbic_Region> well, I like to think of myself as not being as bad as my fellow americans

[15:54] <TimToady> It's a form of intellectual snobbery to be able to sum something up in very few words, I think.  But you have to call your shots, like in pool.

[15:54] <Limbic_Region> but I really have a hard time adjusting to the relaxed culture of the Philippines when I visit

[15:54] * Limbic_Region agrees with that too

[15:55] <Limbic_Region> My time is too valuable to waste explaining something to you so hear it is in N words

[15:55] * Juerd is often able to sum up very complex questions in one word

[15:55] <Juerd> "Why?"

[15:55] <gaal> \(my $x)   # allowed?

[15:55] <audreyt> sure

[15:55] <audreyt> my$x is allows whwnever $x is allowed in exprs

[15:55] <Juerd> Oh, gaal does that too :)

[15:56] <gaal> so ruleCapture should c <- parseTerm, basically, recursively

[15:56] <TimToady> the upgrade seems to have fixed my problem.  so must have been disk corruption, I guess, unless 6.4.2 fixed it somehow...

[15:56] <audreyt> not likely, seeing feather has 6.4.1 that works...

[15:56] <audreyt> though the word "disk corruption" sounds alarming

[15:56] <Juerd> Oh, right, I was upgrading feather. Thanks for reminding

[15:56] <gaal> maybe 6.4.2 fixed the disk corruption

[15:56] <Juerd> 584 upgraded, 15 newly installed, 3 to remove and 3 not upgraded.

[15:56] <Juerd> Need to get 343MB of archives.

[15:56] <Juerd> After unpacking 18.0MB of additional disk space will be used.

[15:56] * audreyt groans

[15:56] <gaal> the Glorious Glasgow etc.

[15:57] <TimToady> well, maybe it was just a cosmic ray.

[15:58] <Limbic_Region> TimToady - in your cursory investigation of all the examples that were failing to parse, were most (if not all) the golf examples due to white space issues?

[16:00] *** xinming joined
[16:00] <agentzh> markstos: you meant the link pointed to S26.html?

[16:04] <markstos_> agentz: I'd like that created, but I also just added some hopeful links to the FAQ PODs

[16:04] <agentzh> url?

[16:04] <agentzh> for example?

[16:04] <markstos_> one sec.

[16:05] <markstos_> The PODs are here:

[16:05] <markstos_> http://svn.openfoundry.org/pugs/docs/Perl6/FAQ/

[16:05] <lambdabot> Title: Revision 12728: /docs/Perl6/FAQ

[16:05] <agentzh> markstos: ah, i see. thanks.

[16:05] <markstos_> I guessed they would have HTML counter parts at FAQ/Capture.html, and FAQ/FUD.html

[16:06] <agentzh> L<FAQ::Capture>?

[16:06] <markstos_> The HTML versions will make them a lot more visible.

[16:06] <agentzh> markstos: just like L<S02/...>

[16:06] <markstos_> agentzh: Why not use the use full module name, which would be more normal: Perl6::FAQ::Capture.

[16:07] <agentzh> i'm fine with that. :)

[16:07] <markstos_> But S02 corresponds to Perl6::Spec::Syntax.

[16:07] <markstos_> Great.

[16:07] <agentzh> just use the syntax, and i'll look into that later.

[16:07] <markstos_> Thanks.

[16:08] <agentzh> i'm more motivated to fix things when they're broken.

[16:08] <agentzh> so feel free to leave links broken. don't comment them out.

[16:08] <agentzh> because i'm lazy. ;)

[16:08] <gaal> is it okay to fold \42 to &circumfix:<\\( )> inside Parser?

[16:11] <gaal> to put it another way, is \42 precisely \(42), for all values of 42?

[16:11] <markstos_> agentz. Ok. :)

[16:12] <agentzh> markstos: btw, i'm not using pod2html. i'm using podhtm.pl living in the Pugs repos (util/podhtm.pl) :)

[16:13] <audreyt> gaal: no.

[16:13] <svnbot6> r12729 | markstos++ | Go ahead and link directly to .pod FAQ files, until HTMLization happens.

[16:13] <gaal> aw.

[16:13] <audreyt> gaal: \42 is prefix:\ on 42, \(42) is circumfix \( )

[16:13] <audreyt> prec is diff

[16:14] <markstos_> hmm. can't connect to apache on feather now. http://feather.perl6.nl/syn/

[16:14] * markstos_ should really do the dishes now. 

[16:14] <gaal> audreyt: okay, so ruleCapture can be retired completely yes?

[16:14] <markstos_> wifi in the kitchen is dangerous.

[16:14] <audreyt> aye

[16:14] <gaal> good

[16:16] <TimToady> Limbic_Region: yes, they were mostly place where P6 requires whitespace to keep postfixes straight from infixes or statement blocks.

[16:16] <Limbic_Region> ok - that I think I can fix

[16:16] <Limbic_Region> on my own that is

[16:16] <TimToady> if($x){.say} is illegal two ways.

[16:17] *** zgh joined
[16:17] * Limbic_Region listens intently

[16:17] <Limbic_Region> while enjoying my breakfast that is

[16:17] <TimToady> if($x) parses as a sub call.

[16:17] <Juerd> Oh my

[16:17] <TimToady> and if($x){.say} parses as a hash subscript on the sub call

[16:17] <Juerd> Some people won't like this :)

[16:17] <TimToady> gee, I've never heard that sentiment before. :)

[16:18] <Juerd> Impressive :)

[16:18] <agentzh> Juerd: feather's website is down?

[16:18] <Juerd> I personally am glad with these changes. More horizontal whitespace would be great for many programmers.

[16:18] <Juerd> agentzh: Could be. It's in the middle of a dist-upgrade

[16:18] <agentzh> okay. ;)

[16:18] <Juerd> agentzh: I never check if things work while it's upgrading. I check afterwards :)

[16:18] <TimToady> I was actually kind of delighted to see how much clarity it forced on the golf examples.  :)

[16:19] <Limbic_Region> agentzh - yep, it's down not just you

[16:19] <Juerd> TimToady: Don't worry. People WILL find other ways of golfing :)=

[16:19] <agentzh> LR: i hear that. :)

[16:19] <Limbic_Region> well, my plan was just to whitespace everything until it started working and then remove them one by one to see when they started failing

[16:19] <Limbic_Region> but perhaps that isn't such a good idea

[16:20] <audreyt> on my first perlgolf tournament, I asked whether non-ascii characters count as one character...

[16:20] <Juerd> Who's going to YAPC::Europe btw?

[16:20] <audreyt> and perl6 golfers will certainly take advantage that the nonascii << counts as one char

[16:20] <svnbot6> r12730 | gaal++ | * fix \42. still orz: my $x; \$x

[16:20] <svnbot6> r12730 | gaal++ | * retire old Parser code for Captures

[16:21] <gaal> I don't quite see why toVV' is entered in \my $x...

[16:21] <gaal> still looking.

[16:21] <TimToady> audreyt: did you see my spec changes to "is" yesterday?

[16:21] <Limbic_Region> I did

[16:21] <Limbic_Region> TimToady++

[16:21] <Limbic_Region> that one actually made sense to me

[16:21] <Limbic_Region> which is a scary thought

[16:21] <Juerd> Nobody going to YAPC here? :(

[16:22] <miyagawa_> Juerd: i will.

[16:22] <audreyt> Limbic_Region: your brain is being larrified

[16:22] <Juerd> Yay, I won't be the only one from here there then :)

[16:22] <audreyt> TimToady: I noticed, and looks sane

[16:22] <TimToady> et tu, audrey

[16:23] <gaal> audreyt: if you have a profbuild handy, could you stacktrace \my $x please? r12730

[16:23] <Juerd> Je pense que c'est "toi" :)

[16:24] <audreyt> gaal: sure. a sec

[16:24] <Juerd> Doesn't feather have that?

[16:24] * audreyt is wrangling with inlinePerformSTM

[16:24] <Limbic_Region> audreyt - well, that may be but more likely it means I am once again paying enough attention to do more than just ask annoying questions that are answered in the synopses and complain about problems without offering to help fix them

[16:25] <Limbic_Region> audreyt - that's the problem I reported?

[16:25] *** Psyche^ joined
[16:25] <audreyt> Limbic_Region: nested atomically? yes

[16:25] <gaal> I rememeber inlinePerformIO, but what's the STM counterpart?

[16:26] <audreyt> ditto with atomic

[16:26] <audreyt> bbiab again

[16:26] <audreyt> gaal: <Pugs.AST.Internals.toVV',Pugs.Eval.argsFeed,Pugs.Eval.reduceApp,Pugs.Eval.reduc

[16:26] <audreyt> e,Pugs.Eval.evaluate,Pugs.Eval.evaluateMain,Pugs.Run.runEnv,Pugs.runProgramWith,

[16:26] <audreyt> Pugs.doRun,Pugs.run',Pugs.run,Pugs.Run.runWithArgs,Pugs.mainWith,Pugs.pugsMain,P

[16:26] <audreyt> ugs.CAF><Pugs.AST.Internals.toVV',Pugs.Eval.argsFeed,Pugs.Eval.reduceApp,Pugs.Ev

[16:26] <audreyt> al.reduce,Pugs.Eval.evaluate,Pugs.Eval.evaluateMain,Pugs.Run.runEnv,Pugs.runProg

[16:26] <audreyt> ramWith,Pugs.doRun,Pugs.run',Pugs.run,Pugs.Run.runWithArgs,Pugs.mainWith,Pugs.pu

[16:26] <gaal> heh

[16:26] <audreyt> gsMain,Pugs.CAF>pugs-prof: don't know how to toVV': VUndef

[16:26] <gaal> thanks

[16:27] <gaal> Juerd: have what, profpugs? don't think so

[16:27] <Juerd> Why not? :)

[16:27] <gaal> smokepugs is a sweeter fruit and we don't have that :)

[16:29] <agentzh> Juerd: stat info added: http://svn.berlios.de/svnroot/repos/unisimu/Perl/Syn/S02.html

[16:29] <lambdabot> Title: S02

[16:30] *** Psyche^ is now known as Patterner

[16:32] <Juerd> agentzh: Yay

[16:32] <agentzh> :)

[16:32] <Juerd> agentzh: s/--/&mdash;/ :)

[16:32] <agentzh> okay, fixing

[16:33] <gaal>  /g :)

[16:33] <gaal> um no actually

[16:33] <gaal> not on code.

[16:33] <svnbot6> r12731 | agentz++ | [util/smartlinks.pl]

[16:33] <svnbot6> r12731 | agentz++ | - added test stat to links' names:

[16:33] <svnbot6> r12731 | agentz++ |     7 ?\226?\136?\154, 1 ?\195?\151

[16:33] <svnbot6> r12731 | agentz++ |   which was suggested by Juerd++

[16:33] <gaal> ah, it's just on the stats. ok ok

[16:34] <agentzh> committing

[16:35] <Limbic_Region> heh - agentzh, when I loaded the S02.html link and minimized it - I read the S02 as 502 and thought there was an http error

[16:35] <agentzh> LR: (?)

[16:36] <Limbic_Region> oh nothing - just eyes playing tricks on me

[16:36] <agentzh> okay. :)

[16:38] <svnbot6> r12732 | agentz++ | [util/smartlinks.pl]

[16:38] <svnbot6> r12732 | agentz++ | - on stats info: s/--/&mdash;/ per Juerd++

[16:39] <agentzh> the demo page is also updated. :)

[16:40] <agentzh> so much for tonight. gotta run to bed...

[16:40] <agentzh> night, all~~~  &

[16:40] *** agentzh left
[16:41] <audreyt> Juerd: apache is down for upgrading, right?

[16:41] <Juerd> audreyt: Yes. Due to a design mistake in Debian, it's down longer than necessary.

[16:41] <Juerd> It could come up any moment

[16:44] <Juerd> Setting up apache (1.3.34-4) ...

[16:44] <Juerd> Starting apache 1.3 web server....

[16:47] <markstos_> it's up now.

[16:47] <svnbot6> r12733 | gaal++ | * '\my $moose' now works.

[16:50] <gaal> Signatures up next, I suppose

[16:50] <svnbot6> r12734 | agentz++ | [util/smartlinks.pl]

[16:50] <svnbot6> r12734 | agentz++ | - turn off stats info when smoke data is not available.

[16:50] <Juerd> Can roles initialize?

[16:51] <Juerd> i.e. Can Blah do something on "$foo does Blah;"?

[16:52] <Juerd> For web programming, it'd be nice to have "$param<file> does Upload" and "$param<url> does ParamArray", or something alike.

[16:52] <audreyt> runtime does?

[16:52] <audreyt> it would trigger BUILD, I think.

[16:54] <TimToady> the BUILD in the role

[16:54] <TimToady> don't want to reBUILD the existing object

[16:54] <audreyt> aye

[16:55] <audreyt> was just too lazy to type down the whole line :)

[16:55] <TimToady> I was just channeling you. :)

[16:55] <audreyt> et tu...

[16:55] <TimToady> et three

[16:57] <markstos_> linguists...

[16:58] <gaal> audreyt: parsing :(), plan of antler. is circumfix:<:( )> enough? what parses typeconstraints?

[16:58] <gaal> ooh!

[16:58] <gaal> ?eval Int

[16:59] <evalbot_12734> ::Int

[16:59] <gaal> that's a start :)

[16:59] <audreyt> need prolly to switch to another parser for :()

[17:00] <gaal> parameterize makeCircumOp?

[17:01] <Limbic_Region> wow, that STM problem must be a doozy

[17:01] <Limbic_Region> or perhaps I am just too used to - found the bug......fixed

[17:02] <audreyt> it's very complicated :)

[17:02] <audreyt> note that it only occurs when &f is used in parsing without a content

[17:02] <audreyt> i.e.

[17:02] <audreyt> sub f {} my &g := &f; sub h {} 1;

[17:02] <audreyt> breaks bug

[17:02] <audreyt> sub f {} my &g ::= &f; sub h {} 1;

[17:02] <audreyt> works

[17:03] <audreyt> reason is that the content of &g is consulted during parsing

[17:03] <audreyt> but it has no content (yet)

[17:03] <audreyt> so it goes to create a new storage cell for it

[17:03] <audreyt> but we are currently already in the parser, which is another atomic transaction, and so it triggered explosion

[17:03] <clkao> what's ::= ?

[17:04] <clkao> and is there :::= ?

[17:04] <audreyt> clkao: BEGIN time binding

[17:04] <audreyt> no.

[17:04] <gaal> BEING { := }

[17:04] <audreyt> LIGHTNESS { := }

[17:04] <clkao> ok

[17:04] <gaal> AND NOTHINGNESS

[17:04] <Juerd> TimToady, audreyt: thanks.

[17:06] <audreyt> np :)

[17:07] <Juerd> my $foo, $bar := *%param; will be GREAT for web programming :)

[17:08] <Juerd> And if coercion can be controlled, my @foo, $bar, Upload $baz :)

[17:08] <Juerd> (Or are parens needed with my?)

[17:08] <TimToady> yes

[17:08] <Juerd> my (@foo, $bar, Upload $baz) := *%param; then?

[17:09] <Juerd> Combined with "where", this is absolutely wonderful.

[17:09] <TimToady> MAIN binding works the same way

[17:09] * TimToady needs to wander off &

[17:10] <gaal> ok looks like end of cycles for me for today, I'm off to a bike ride

[17:10] <gaal> have fun y'all

[17:10] <Juerd> Uhhuh. I'm looking for something that doesn't require a named sub, though: PHP-like programming. (No matter how much I dislike it, I must admit that for smaller projects it's much easier to both create and maintain)

[17:10] <markstos_> bikerides++

[17:13] <audreyt> gaal: have fun :)

[17:15] <gaal> thanks! &

[17:16] <TimToady> oh, it's [,]%param now, now *%param

[17:16] <TimToady> *not

[17:16] <diakopter> [,]not

[17:16] *** xinming joined
[17:17] <TimToady> [,]now

[17:17] <TimToady> *not

[17:17] <TimToady> :)

[17:18] <markstos_> Is that the new slurp notation for subroutine params?

[17:18] <markstos_> s/slurp/slurpy/

[17:18] <audreyt> subroutine arguments.

[17:18] <audreyt> params still use *.

[17:18] <audreyt> (params are in signatures)

[17:19] *** justatheory joined
[17:19] * markstos_ still ponders the difference quietly.

[17:19] <audreyt> sub f ($param) {}

[17:19] * markstos_ likes examples. :)

[17:20] <audreyt> f($arg)

[17:20] <audreyt> makes some sense? :)

[17:20] <markstos_> Yes!

[17:21] <markstos_> I had always thought the two as interchangable concepts, at least in Perl5, which doesn't really use signatures the same way.

[17:21] <markstos_> Well, when that part my code breaks after a pugs upgrade, I'll know what to do...

[17:21] <wolverian> looppeel

[17:22] <wolverian> er, ww

[17:22] * markstos_ hunts and gathers some lunch. &

[17:23] <audreyt> Limbic_Region: also "nmake ghci" doesn't yet work on win32

[17:23] <audreyt> so my repl loop is 120 seconds

[17:23] <audreyt> as opposed to 12

[17:23] <audreyt> which significantly affects my productivity :)

[17:25] <audreyt> Limbic_Region: but it's fixed all the same...

[17:26] *** mako132_ joined
[17:27] <audreyt> and I really need to fix ghci for win32 tomorrow if I'm to actually do hacking here...

[17:27] <audreyt> but sleep first. :)

[17:27] <audreyt> Limbic_Region: please confirm that the fix worksforyou now when you get back.

[17:27] <svnbot6> r12735 | audreyt++ | * examples/vmethods/time.pl: fix one typo.

[17:27] <svnbot6> r12736 | audreyt++ | * uninitialized 'my &f' no longer performs a newTVar, so the dreaded 'nested atomically' bug won't be trigered when its params are queried for parsing.

[17:32] *** iblechbot joined
[17:34] <Limbic_Region> audreyt++

[17:34] * Limbic_Region checks

[17:39] * diakopter is exploring ways to make trypugs (webpugs) work so that one user can multicast their session to others.

[17:45] <Limbic_Region> audreyt++ # down to 18 failing examples

[17:51] *** mako132_ joined
[17:56] <Juerd> my %foo of Bar | Baz | Array of (Bar | Baz), possible?

[17:57] <audreyt> a smoke report of r12737 would be lovely

[17:57] <audreyt> sadly I can't stay up to finish the smoke loop now

[17:57] <audreyt> see you tomorrow :)

[17:57] <Juerd> Bye. Sleep well.

[17:57] <svnbot6> r12737 | audreyt++ | * do not hijack \3 to mean \(3,) just now; first, it probably means \(3:); second, VRef's cast instance to newVal is not written, and so it'd break a lot of existing code. maybe fix that tomorrow...

[18:06] <diakopter> is there anyone here who wants to talk about trypugs/webpugs ?

[18:08] <markstos_> diakopter: You could bounce some ideas off me.

[18:08] <markstos_> I'm a professional website developer by day.

[18:09] <diakopter> ok.  i was one for a while also.

[18:10] <diakopter> I've selected anyterm as a starting point for the javascript portion

[18:11] <markstos_> I'm not familiar with anyterm, but Ok.

[18:12] <diakopter> server side, i'm starting with the webgui framework to handle all the http requests, since webgui contains an asynchronous daemon that can host all the pugs virtual sessions.

[18:12] <markstos_> unrelated: The Perl6 FAQ appears to have been written in POD originally, but is not in the pugs tree with the other FAQs. Anyone know the story? It would be nice to to merge it in and have them in one place, but I don't want to reverse engineer the POD.

[18:12] <markstos_> http://dev.perl.org/perl6/faq.html

[18:12] <lambdabot> Title: Perl6 FAQ - perl6

[18:13] <markstos_> dakopter: OK. I'm not familiar with WebGUI either, but I have done some AJAX development.

[18:14] <diakopter> WebGUI was featured on perlcast a few months ago.  it's a large GPL'd perl web app framework

[18:15] <diakopter> it has never garnered viral attention

[18:15] <markstos_> diakopter: Yes I heard a bit about it at YAPC::NA.

[18:15] <svnbot6> r12738 | markstos++ | Add link to general FAQ to Feather's doc page.

[18:16] <markstos_> I'm used to the design of a small framework that is extensible throug plugins. Namely, CGI::Application.

[18:16] <diakopter> I wrote several k LoC in it, including the ajax dashboard/portal application

[18:16] <diakopter> ah yes

[18:16] <markstos_> But I suspect WebGUI would work fine here.

[18:17] <markstos_> diakopter: So are you asking for a peer review of your general approach before you go further?

[18:17] <diakopter> yes, sort of.

[18:17] <diakopter> yes :)

[18:17] <diakopter> overall architecture, featureset

[18:17] <diakopter> all the implementation details are still up in the air

[18:18] <diakopter> I want to make sure I'm not restricting the features any by any early wrong design choices

[18:18] <markstos_> diakopter: What do at work for programming projects is to create a "web blueprint". ...

[18:18] <markstos_> basically, create some static HTML pages that look like the "screens" of the web app, and some notes about the logic to connect them.

[18:19] <markstos_> It usually doesn't take long relative to the programming, and is much quicker to refine if there are "big picture" issues.

[18:19] <diakopter> ok. this has two screens - an entry page that lists other people's shared sessions to "watch", and the "create my own session" link to go to the actual pseudo terminal

[18:19] <diakopter> in my mind so far

[18:20] <markstos_> Ok.

[18:20] <markstos_> Would you allow anonymoose, or unshared sessions?

[18:21] <diakopter> I doubt it.  pugs sessions take too much ram

[18:21] <diakopter> too much potential for abuse

[18:21] <diakopter> errr

[18:21] <diakopter> yes on the unshared sessions

[18:21] <markstos_> :)

[18:21] <markstos_> Would there be a max number of sessions supported at once?

[18:21] <diakopter> i was going to enforce email address validation

[18:21] <diakopter> yeah, defined by the app admin

[18:21] <markstos_> Ok.

[18:21] <diakopter> later of course an autoadjusting algorithm could be added

[18:22] <markstos_> email address validation? You mean, you can't just use it casually without signing up ?

[18:22] <diakopter> yeah, because of the abuse potential

[18:22] <diakopter> do you have other ideas to deal with that problem?

[18:22] <markstos_> Wouldn't running pugs in a safe mode, like the eval bot, handle that ?

[18:22] <diakopter> I was figuring a 2-3 minute timeout before each session is killed

[18:23] <diakopter> hmm

[18:23] *** aufrank joined
[18:23] <markstos_> How you keep each user connected to the same context, so when they type line 3 and press return, it's in the same lexical context as line 2 ?

[18:23] <diakopter> you mean having only one active pugs session, shared among all the clients?

[18:24] <markstos_> I think the evalbot runs pugs in a "safe" way, so that file system interactions and other "dangerous" actions are disabled.

[18:25] <diakopter> right but that doesn't address state persistence

[18:25] <markstos_> You are right about that.

[18:25] <markstos_> Have you tried contacting the tryruby maintainer? http://tryruby.hobix.com/

[18:25] <lambdabot> Title: try ruby! (in your browser)

[18:26] <diakopter> haven't yet.

[18:26] <markstos_> If you could see their code and "port" it, that might be the easiest.

[18:26] <markstos_> They must have answered the persistency issue, too.

[18:26] <diakopter> yeah.  although I think the structured tutorial is very limited.  I was imagining a pugs environment where entire modules could be pasted in, loaded.

[18:26] <markstos_> You might also discover a good bit just by poking at the JavaScript it's running.

[18:27] <markstos_> "entire modules" doesn't sound like a beginner trying the language. I'm not sure it's necessary to support that.

[18:27] <diakopter> hmm; ok

[18:27] <diakopter> point taken

[18:28] <diakopter> another option is to persist the command history and spawn a new pugs session for each request, recreating the state

[18:28] <markstos_> Neat. On try ruby, watch what happens if you type "help" or "2 + 8".

[18:28] <markstos_> It's like an interactive tutorial. The web app captures certain inputs and provides helpful feedback.

[18:29] <diakopter> yeah I know; i've gone through it

[18:29] <markstos_> I'm just discovering it. :) Impressive.

[18:29] <diakopter> the server returns the terminal response along with the html and javascript code to eval

[18:30] <diakopter> anyterm does it similarly.

[18:32] <diakopter> and anyterm is already gpl

[18:32] <markstos_> Good. It sounds like you are on the right track.

[18:32] <markstos_> Great.

[18:32] <diakopter> it would be neat to develop a structured tutorial

[18:33] <diakopter> I suppose it could be integrated with a testing framework, to see if the state outcome matches what the tutorial step is demanding, to allow for timtowtdi

[18:34] <markstos_> Possibly.

[18:35] <markstos_> You might also take an existing tutorial and integrate it in. For example, here's a Perl6 OO cookbook:

[18:35] <markstos_> http://cog.cognitivity.com/perl6/

[18:35] <lambdabot> Title: Perl6 Object Oriented Cookbook (v0.2.1)

[18:35] <markstos_> It may be too advanced to be a good match for this project, though.

[18:35] <diakopter> so I was going to have WebGUI's daemon ("spectre") handle the pugs session management, and the WebGUI wobject (application) be a mere wrapper front-end to that time-sharing server.

[18:36] <diakopter> hunh.  hadn't seen that.  4 years old.

[18:36] <markstos_> Really? I just found it on Google a moment ago. I haven't read through it.

[18:37] <diakopter> copyright 2002.  i assume that means ago

[18:37] <diakopter> age

[18:37] *** lightstep joined
[18:37] <diakopter> any lurkers have anything to add?  please interject

[18:38] <markstos_> Yep. Some pages say 2003, but still..

[18:38] <markstos_> However, for the random pages I choose, the syntax was still accurate.

[18:40] *** SubStack joined
[18:46] <Juerd> Silly question... How do you flatten an arrayref? :)

[18:47] <Juerd> That is... array :)

[18:47] <Juerd> .foo returns an array. Is it:

[18:47] <Juerd> *.foo

[18:47] <Juerd> @{.foo}

[18:47] <lambdabot> Unknown command, try @list

[18:47] <Juerd> @ .foo

[18:47] <markstos_> @( .foo ) ?

[18:47] <lambdabot> Maybe you meant: . v

[18:48] <markstos_> ?eval my $aref = [<a b c>];  say @( $aref );

[18:48] <evalbot_12738> OUTPUT[a b c ] Bool::True

[18:48] *** xerox joined
[18:48] <markstos_> ?eval my $aref = [<a b c>];  say @( $aref ).perl;

[18:49] <evalbot_12738> OUTPUT[["a", "b", "c"] ] Bool::True

[18:50] *** diakopter_ joined
[18:52] *** justatheory joined
[18:59] <diakopter_> markstos_ - any other thoughts?

[18:59] <diakopter_> brb

[18:59] *** diakopter joined
[19:00] *** rashakil joined
[19:01] <markstos_> diakopter: Not for now. I appreciate your efforts!

[19:04] *** chris2 joined
[19:12] <Juerd> ?eval [ <a b c> ].kv

[19:12] <evalbot_12738> (0, "a", 1, "b", 2, "c")

[19:12] <Juerd> ?eval [ <a b c> ].kv.reverse

[19:12] <evalbot_12738> ("c", 2, "b", 1, "a", 0)

[19:12] <Juerd> ?eval my %foo = [ <a b c> ].kv.reverse

[19:12] <evalbot_12738> {("a" => 0), ("b" => 1), ("c" => 2)}

[19:12] <Juerd> Lovely!

[19:14] <diakopter> ?eval [ <a..z> ].kv.reverse

[19:14] <evalbot_12738> ("a..z", 0)

[19:14] <svnbot6> r12739 | markstos++ | Overhaul's feather's index and "syn" index pages to make them a much more

[19:14] <svnbot6> r12739 | markstos++ | comprehensive Perl6 resource.

[19:15] <markstos_> Lovely? Why does the zero appear at the beginning rather than the end when you treat a three element array as a hash ?

[19:15] <diakopter> apparently I haven't a clue

[19:17] * markstos_ takes snack break &

[19:17] <Juerd> diakopter:

[19:18] <Juerd> ?eval [ 'a'..'z' ].kv.reverse

[19:18] <evalbot_12739> ("z", 25, "y", 24, "x", 23, "w", 22, "v", 21, "u", 20, "t", 19, "s", 18, "r", 17, "q", 16, "p", 15, "o", 14, "n", 13, "m", 12, "l", 11, "k", 10, "j", 9, "i", 8, "h", 7, "g", 6, "f", 5, "e", 4, "d", 3, "c", 2, "b", 1, "a", 0)

[19:18] <Juerd> diakopter: <> is the new qw()

[19:18] <Juerd> markstos_: Hashes are unordered

[19:19] <Juerd> Ignore that pugs ignores this :)

[19:20] <Juerd> http://tnx.nl/5294IJOR  # HTTP::Headers for Perl 6 (lacks convenience methods)

[19:27] <diakopter> each pugs instance uses 8MB ram

[19:28] <diakopter> initially.

[19:30] <diakopter> executing 2**112412 causes it to take up 3 more MB ram

[19:32] <diakopter> hmm; I guess it have two modes

[19:32] <diakopter> session persistence mode for those who validate their email addresses, and state-recreation mode for those who don't.

[19:32] <diakopter> it could have two modes, I mean

[19:33] <diakopter> so on a 512 MB jail, apache/mod_perl/webgui will take about 110MB ram plus 10MB ram per apache child.

[19:34] <diakopter> so, assume 5 children

[19:34] <diakopter> 44 available empty pugs sessions

[19:34] <diakopter> not allowing for swapping.

[19:35] <diakopter> that would be more than plenty, I think.

[19:35] <diakopter> not accounting for whatever ram the system is using.  assume 200MB

[19:36] <diakopter> okay, so 19 pugses

[19:37] * diakopter ceases spamming the channel

[19:37] <diakopter> (for now)

[19:37] *** chris2_ joined
[19:38] <markstos_> diakopter: Sounds like reasonable math.

[19:40] <diakopter> hmm; and a 512MB jail from prgmr.com is....

[19:42] <diakopter> well, the site was up yesterday.

[19:48] *** chris2_ is now known as chris2

[19:50] <svnbot6> r12740 | markstos++ | fix broken <li> tags, which must have been broken in kwiki, too, since they were copy/pasted from there...

[19:56] *** araujo joined
[19:59] * diakopter finally gets a local WebGUI dev environment set up.

[19:59] <markstos_> Perl6 blogging about references vs. Capture objects: http://use.perl.org/~markjugg/journal/30762

[19:59] * diakopter prepares to hack spectre to host pugs sessions

[19:59] <lambdabot> Title: Journal of markjugg (792)

[20:12] <gaal> audreyt: re: Signatures needing alternate parsers - so do Captures! makeCircumOp+parseNoParenParamList doesn't permit \(1; 2)

[20:15] <markstos_> diakopter: I just got this result on tryruby. It provides a hit about how it works: "Your session has been closed, either due to inactivity or a bit of code which ran too long. Refresh the page and you can begin a new session. "

[20:25] <Juerd> ?eval Object.new

[20:25] <evalbot_12740> Object.new()

[20:33] <diakopter> markstos_: ah, okay

[20:35] *** elmex joined
[20:35] <diakopter> I'm going to posit a guess that he's doing state reconstruction via each's session history

[20:37] <markstos_> diakopter: I tried to confirm if you could even refer to a previous line from the next line, but I don't know enough ruby to even declar a simple variable. :)

[20:39] <diakopter> ah; it doesn't like 2**500000

[20:40] <diakopter> also: "If you happen to leave or refresh the page, your session will still be here for unless it is left inactive for ten minutes."

[20:40] <diakopter> [sic]

[20:41] <Juerd> 2;0 juerd@feather:~$ pugs -e'my $foo = [ 1..5 ]; say $foo.perl'

[20:41] <Juerd> [1, 2, 3, 4, 5]

[20:41] <Juerd> Eek

[20:41] <Juerd> Wrong channel

[20:44] *** Limbic_Region joined
[20:53] *** chris2 joined
[20:59] *** justatheory joined
[21:09] <svnbot6> r12741 | markstos++ | Add some practical examples of life without references to Differences.pod

[21:11] <Juerd> http://tnx.nl/5296LSEC

[21:11] <lambdabot> Title: TNX

[21:11] <Juerd> I wonder if it will compile. I haven't had the guts to try it, yet.

[21:14] <markstos_> Juerd: Why not try?

[21:15] <Juerd> Tried.

[21:15] <Juerd> Needed to change all @foo ==> map { .. } to non-pipe form

[21:15] <Juerd> I thought pipes worked

[21:16] <Juerd> Also, I thought hyper @foo>>.keys worked, but it doesn't

[21:16] <Juerd> Now I have something that compiles.

[21:16] <Juerd> Exciting

[21:17] <Juerd> ?eval class Foo { has %foo; method bar { %foo } } Foo.new.bar

[21:17] <evalbot_12741> Error: Undeclared variable: "%foo"

[21:18] <Juerd> ?eval class Foo { has %.foo; method bar { %.foo } } Foo.new.bar

[21:18] <evalbot_12741> {}

[21:18] <Juerd> Hm

[21:18] <Juerd> ?eval class Foo { has %!foo; method bar { %!foo } } Foo.new.bar

[21:18] <evalbot_12741> {}

[21:18] <Juerd> Hm, ok

[21:18] <Juerd> Thought you could leave out the !

[21:18] <markstos_> I guess not.

[21:19] <diakopter> markstos_: I think I'll just do the state-recreating commandHistory-persisting version first :)

[21:20] <markstos_> diakopter: Sounds good!

[21:20] <markstos_> Here's my own problem. I have an hash element that is an array that I want to append to, but I get a syntax error with this:

[21:20] <markstos_> my %h; my $b = 5; %h<a> = @( @$b, @( %h<a> ));

[21:20] <markstos_> ?eval my %h; my $b = 5; %h<a> = @( @$b, @( %h<a> ));

[21:20] <evalbot_12741> Error:  unexpected "(" expecting "::"

[21:24] <markstos_> Hmm, I think I just tried to hard to re-invent 'push'. I found an alternate solution.

[21:31] <Juerd> I give up.

[21:32] <Juerd> Pugs isn't at all complete enough to do this.

[21:32] <Juerd> On %!headers.keys it calls &keys in its own class, instead of Hash's

[21:33] <Juerd> And I don't like moving around syntax all the time. That's nice if you have lots of time, but unfortunately, I don't.

[21:33] * Juerd postpones trying Perl 6 again

[21:37] <Juerd> Do we have a historic graph or table of how many tests pass?

[21:38] <Juerd> Or perhaps a chart, for the nitpicky :)

[21:46] *** diakopter joined
[21:47] <TreyHarris> Juerd: no, I asked the other day and apparently the problem is that only HTML is saved, not TAP output

[21:47] <TreyHarris> In any case, audreyt's said that at this point she's just dealing with regression as she tries to replace the object model and implement Captures correctly

[21:47] <TreyHarris> so tests that used to fail, she's fixing to make pass, but new tests she's allowing to stay failing

[21:48] <TreyHarris> but fixing the object model and the captures is what's required to make feeds, hypermethodcalls, etc., work right, so it is an indirect answer to you, if not a direct one

[21:49] *** markstos_ joined
[21:49] <Juerd> Ah, that might explain why objects work so badly now

[21:51] <markstos_> Objects are working OK for me... but perhaps I'm not working them as hard as you are...

[21:51] <TreyHarris> i've found workarounds for almost everything, but i'll grant it's annoying to have to workaround when Perl 6 has such nice syntax that's not working

[21:52] <Juerd> ?eval class Foo { has %.bar; method keys { die "shouldn't be called" }; method quux { %.bar.keys } } Foo.new.quux

[21:52] <evalbot_12741> Error: shouldn't be called

[21:52] <Juerd> ?eval class Foo { has %.bar; method xkeys { die "shouldn't be called" }; method quux { %.bar.keys } } Foo.new.quux

[21:52] <evalbot_12741> ()

[21:52] <Juerd> Method resolution is wrong.

[21:52] <markstos_> Doh.

[21:52] <Juerd> Foo has nothing to do with %.bar

[21:53] <Juerd> But Pugs does think it does

[21:53] <markstos_> ?eval print if 'hello world' ~~ m/hello/;

[21:53] <evalbot_12741> OUTPUT[] Bool::True

[21:53] <markstos_> print if 'hello world' ~~ rx/hello/;

[21:53] <markstos_> ?eval print if 'hello world' ~~ m/hello/;

[21:53] <evalbot_12741> OUTPUT[] Bool::True

[21:53] <markstos_> That little test doesn't work here. It complains that parrot is not installed. Do I really have to install for Regexp support with pugs ?

[21:53] <Juerd> In boolean context, rx// and m// are the same.

[21:54] <Juerd> markstos_: AFAIK, yes. Otherwise you only get Perl 5 regexes.

[21:54] <Juerd> And then only if you have Perl 5 embedded.

[21:54] <markstos_> So that was the shortcut to get regular expressions working so quickly...

[21:54] <Juerd> Shortcut?

[21:55] <markstos_> As opposed to implementing them in Haskell.

[21:55] <Juerd> These are important techniques.

[21:55] <markstos_> embedding parrot, you mean ?

[21:55] <Juerd> Implementing them in Haskell is, in my opinion, madness, if we already have them elsewhere.

[21:55] <TreyHarris> ?eval class Foo { has %.bar; method keys { die "shouldn't be called" }; method quux { %(%.bar).keys } }; Foo.new.quux

[21:55] <evalbot_12741> Error: shouldn't be called

[21:55] <markstos_> As a user, it's just an annoyance at the moment, because I have to something else to install now.

[21:55] <Juerd> Implementing rules in Parrot is (I think) much harder than implementing them in Haskell, so I wouldn't call it a shortcut.

[21:56] <markstos_> I see your perspective about how it's a good technical decision.

[21:56] <markstos_> It just conflicts with convenience  at the moment. :)

[21:56] <Juerd> Pugs isn't really built for users just yet :)

[21:56] <markstos_> I've been noticing...

[21:56] <markstos_> I like it anyway. :)

[21:57] <Juerd> I like it, but every time I try to use it, it's just a frustrating experience.

[21:58] <Juerd> My brain already speaks Perl 6, and has a hard time accepting that much of it isn't implemented yet.

[21:58] <merlyn> my brain still speaks perl4 as enhanced by perl5

[21:59] <TreyHarris> lol

[21:59] <Juerd> Things like @foo.kv.reverse come entirely naturally to me, before I try if they work.

[21:59] <Juerd> In Perl 5 it'd be { my $i = 0; $bar{$_} = $i++ for @foo }

[21:59] <Juerd> Much more complex.

[22:00] <Juerd> Another thing that I like is @foo ==> map { ... } ==> map { ... }, but Pugs doesn't do that yet

[22:00] <Juerd> Or @foo>>.keys

[22:00] <Juerd> Err, @foo>>.key

[22:00] <merlyn> $bar{0..$#foo} = @foo

[22:00] <merlyn> @bar{0..$#foo} = @foo

[22:00] <lambdabot> Unknown command, try @list

[22:00] <merlyn> that's how I'd do that

[22:00] <Juerd> merlyn: @bar{@foo} = 0..$#foo

[22:00] <merlyn> oh, right

[22:01] <merlyn> backwardsin

[22:01] <Juerd> Good idea. I didn't think of it.

[22:01] <markstos_> Juerd: Perhaps I should just get an account on feather. From this page, it looks like parrot 0.4.5 is broken on FreeBSD, and thus I assume 0.4.6 wouldn't work any better.

[22:01] <markstos_> http://www.freshports.org/lang/parrot

[22:01] <lambdabot> Title: FreshPorts -- lang/parrot

[22:01] <Juerd> markstos_: Perhaps you should indeed. Do you know how to request one?

[22:02] <TreyHarris> but you hit the nail on the head: the tension with Perl has always been the most brilliant code is rejected by the people that matter (e.g., managers, learning programmers) because it's too opaque.  i think in Perl 6 a lot more of the brilliant is also obvious

[22:02] * markstos_ checks feather website

[22:03] <Juerd> I like it that people call that single page a website

[22:03] <markstos_> The instructions say to let Juerd know.

[22:03] <Juerd> Oooohhh!

[22:03] <markstos_> You looked at the website, didn't you ?

[22:03] <Juerd> Someone made it much better.

[22:03] * markstos_ grins...

[22:03] <Juerd> I hadn't seen the "site" in this form yet

[22:03] <markstos_> That was me, a few hours ago.

[22:04] <TreyHarris> how did you update feather without having an account on it?

[22:04] <markstos_> I'm L33t?

[22:04] <Juerd> Hehe

[22:04] <markstos_> subversion and cron.

[22:04] <Juerd> Long live wiki style delevopment :)

[22:04] <Juerd> markstos_: Thanks man :)

[22:04] <markstos_> Juerd: about adding more pages:

[22:05] <markstos_> I'm confused that syn/index.html is stored as syn_index.html in svn.

[22:05] <markstos_> I expected directories work work as a 1-to-1 mapping with svn and the feather directory.

[22:05] <Juerd> markstos_: Please request your account by sending me an email with your real name, and preferred username

[22:06] <Juerd> markstos_: This all got changed recently, and I haven't yet seen how they did it

[22:06] <Juerd> syn symlinks to somewhere

[22:06] <Juerd> syn/index.html symlinks back to syn_index

[22:06] <Juerd> I have no idea why, but there's probably a good reason.

[22:06] <markstos_> to ~agentz/syn, I htink.

[22:07] <markstos_> It was probably more convenient to agentz. Anyway, other directories can created normally under there ?

[22:07] <Juerd> Very probably.

[22:07] *** Oswyn joined
[22:08] <markstos_> Ok. I expect I'll continue to work on this site some of I have time.

[22:14] <Juerd> markstos_: Please use normal quotes, not backticks

[22:14] <svnbot6> r12742 | juerd++ | s/autrijus/audreyt/

[22:15] <markstos_> Where are backticks used? in the list of links to kwiki ?

[22:15] <svnbot6> r12743 | juerd++ | s:g/``|''/"/

[22:15] *** ajs_ joined
[22:19] *** justatheory joined
[22:22] <Juerd> markstos_: In quotes. I don't know if you did that, or someone else.

[22:23] <markstos_> That doesn't sound  like something I would do, but it's possible I copy/pasted some HTML from kwiki that was strange that like.

[22:24] <markstos_> BTW, How I can view a patch with svn ? I tried svn diff -r123, but that didn't work as I expected.

[22:24] <markstos_> Nevermind, I figured that out:

[22:25] <markstos_> svn diff -r 122:123

[22:25] <markstos_> It's simpler with darcs, just darcs diff -p 'human patch name'

[22:25] <markstos_> No number lookups. :)

[22:30] <svnbot6> r12744 | juerd++ | Random website improvements

[22:32] * markstos_ waits patiently for feather login

[22:35] <Juerd> Sorry, forgot to re-enable my mail beep

[22:36] <markstos_> Beep!

[22:36] <Juerd> Your password is markstos. Please change it immediately.

[22:37] <markstos_> updated.

[22:37] <markstos_> Thanks!

[22:38] <Juerd> You're welcome, in both senses

[22:39] <Juerd> Please create a ~/.qmail if you're not going to read email on feather

[22:39] <Juerd> And please create a ~/.plan describing your intentions with the machine

[22:39] <Juerd> Possibly hidden from the outside world by adding a ~/.nofinger

[22:40] *** diakopter joined
[22:41] *** jferrero joined
[23:00] *** diakopter_ joined
[23:01] *** diakopter joined
[23:06] *** mako132_ joined
[23:07] *** diakopter_ joined
[23:07] *** xdg joined
[23:07] <svnbot6> r12745 | juerd++ | google box

[23:10] <svnbot6> r12746 | juerd++ | typofix

[23:10] <svnbot6> r12747 | juerd++ | It's better on one line :)

[23:19] <svnbot6> r12748 | juerd++ | html improvements

[23:21] * araujo didn't know compiling pugs would take so long

[23:23] <Juerd> It used to take much longer even

[23:25] <araujo> oh ok, so is it a normal behaviour Juerd ?

[23:25] <araujo> i was thinking it was probably my box

[23:25] <araujo> sometimes some packages are compiled very slowly

[23:30] <Juerd> It could *also* be your box.

[23:30] <Juerd> What are the specs of your box?

[23:31] <araujo> amd64 , 1.8ghz , 512ram

[23:31] * araujo needs to get more memory

[23:32] <araujo> Big haskell applications tend to compile too slow :-(

[23:34] <araujo> ready!

[23:37] <Juerd> 512 MB is just enough for Pugs, but you'd better not be running X and firefox at the same time :)

[23:38] <Juerd> 512 MB is a bit on the low end for an amd64 1.8 - was this a conscious choice?

[23:58] *** dolmans joined
