[00:02] *** KingDiamond joined
[00:04] <TimToady> the only think I can see in atoms.t that might have changed recently is qq>hello<;

[00:05] <TimToady> I wonder if the parser went all backtracky on me...

[00:05] <TimToady> another good reason not to backtrack in a parser...

[00:12] *** KingDiamond joined
[00:14] *** KingDiamond joined
[00:15] *** Daveman joined
[00:30] *** arcady joined
[01:07] *** hexmode joined
[01:12] *** lichtkind joined
[01:12] <lichtkind> ?eval 1;

[01:17] *** f0rth joined
[01:24] *** geoffb joined
[01:41] *** david__ joined
[01:55] *** azuroth joined
[02:07] <azuroth> hmm. anyone know of any programs that can read visio files?

[02:08] <PerlJam> azuroth: you're using perl6 to read visio files?

[02:08] <azuroth> no :-)

[02:08] * azuroth runs away

[02:21] <svnbot6> r9930 | lwall++ | atoms.t took a gigabyte or so of memory to parse qq>hello<.

[02:22] <wolverian> heh

[02:22] *** mjk joined
[02:28] <svnbot6> r9931 | lwall++ | 1. must now be 1.0

[02:29] *** xern joined
[02:30] *** xern joined
[02:32] <arcady> hooray for parseability!

[02:35] * FurnaceBoy_ cheers

[02:36] <FurnaceBoy_> at MS that would be a "Pass! RTM!"

[02:36] * FurnaceBoy_ ducks

[02:37] *** justatheory joined
[02:37] *** amnesiac joined
[02:43] *** nothingmuch joined
[02:44] *** r0nny joined
[02:46] *** mako132_ joined
[03:14] *** scw joined
[03:24] *** dduncan joined
[03:28] <dduncan> well, we're drawing near commit 10,000 ... so any guesses who's going to commit that one?

[03:43] *** Khisanth joined
[03:55] <svnbot6> r9932 | Darren_Duncan++ | ext/Test/ : restored my name to the authors list of lib/Test.pm

[04:03] <FurnaceBoy_> shhh! that's audreyt's birthday present

[04:04] *** tek9 joined
[04:08] *** weinig is now known as weinig|sleep

[04:19] <dduncan> whenserbirthday?

[04:20] <arcady> "soon"

[04:20] <arcady> like, a week or so?

[04:20] <arcady> look it up in the IRC logs

[04:25] *** coumbes joined
[04:32] *** pdcawley joined
[04:39] *** kakos joined
[05:03] <PerlJam> Does audrey celebrate 2 birthdays?

[05:20] <svnbot6> r9933 | lwall++ | eval {} should be try {}

[05:24] *** justatheory joined
[05:27] *** justatheory joined
[05:29] <svnbot6> r9934 | lwall++ | bit more eval {...} to try {...} cleanup

[05:30] *** azuroth joined
[05:40] <gaal> morning

[05:41] <gaal> audreyt: if you're around, wanna gobby?

[05:43] <TimToady> haven't seen audrey all day, prolly $jobbing

[05:43] <svnbot6> r9935 | lwall++ | Added .= as assignop, so it at least parses (then doesn't find infix:<.> yet.)

[05:44] <gaal> TimToady: oh. I think I'll start by writing the Q part of the Capture FAQ then.

[05:57] <gaal> heh, that's one advantage of having more than one calendar, you can have more than one birthday.

[06:01] <gaal> TimToady: got gobby? want to take a look at this?

[06:05] <TimToady> what's gobby?

[06:05] <gaal> TimToady: a collaborative editor

[06:05] <TimToady> don't know if my brain is ready for that yet...

[06:05] <gaal> # http://darcs.0x539.de/trac/obby/cgi-bin/trac.cgi

[06:07] <gaal> I've not used it myself yet, audreyt has with stevan I think, when they were moosing around the MM stuff.

[06:07] <gaal> okay, I'll wait for her to show up (she said she might have some free time, but probably she's useing it to, like, rest)

[06:09] <gaal> s/sei/si/

[06:09] <TimToady> I hope so, she really exhausted herself the last few weeks.

[06:10] <TimToady> but will gobby let me type with vim instincts?  doesn't say...

[06:11] <TimToady> so I presume not...

[06:11] <gaal> no, I'm afraid it's a gnomy thing

[06:12] * wolverian uses vim-gnome

[06:12] <gaal> they're doing it right, with the editor just being a layer over a library that provides the collaboration thing, so I suppose sometime this'll get vim integration

[06:13] <TimToady> that'd be cool.

[06:16] <dduncan> I was just looking over the #perl6 log for yesterday

[06:17] <dduncan> do you prefer the term 'byte' or 'octet' to refer to something that's unambiguously 8 bits?

[06:17] <TimToady> I always use byte.

[06:17] <dduncan> I prefer 'octet' myself

[06:18] <TimToady> these days it always means 8 bits.

[06:18] <dduncan> bytes can be other lengths, I think

[06:18] <TimToady> that's the party line, but it's old news

[06:18] <TimToady> byte hasn't meant anything but 8 bits for years.

[06:18] <arcady> but what about all those 36 bit machines?

[06:18] <TimToady> what about 'em?

[06:18] <arcady> I'm sure there's still one or two running, somewhere

[06:19] <gaal> arcady: I think 32 != 8 also

[06:19] <TimToady> I'm sure there must be.  But I'm not going to fight the language, and the language has chosen "byte" to mean 8 bits.

[06:20] <TimToady> eventually octet will just become a shibboleth for standards writers.

[06:20] <dduncan> more to the present, I think something we may have to deal with is that the term 'tuple' has different meanings depending on context

[06:20] <TimToady> Yes, that's more of a problem.

[06:20] <dduncan> currently, that is listed as one of Perl's standard types, and its meaning is different than what I think of

[06:21] <arcady> what's the perl definition?

[06:21] <dduncan> I think of a tuple as a set of name-type-value triples, where the name part has to be unique for each triple in the set

[06:22] <dduncan> the uniqueness aspect is like that of a set

[06:22] <arcady> python, of course, disagrees

[06:22] <TimToady> haskell too

[06:22] <dduncan> my meaning comes from the relational data model, which is based on math or logic

[06:22] <TimToady> but dduncan's definition is right out of the D literature.

[06:23] <dduncan> although I understand that math also has other meanings

[06:23] <TimToady> and of course Haskell has nothing to do with math.  :P

[06:23] <arcady> the relational data model's definition seems like the reasonable one

[06:23] <dduncan> Haskell is about functional purity, is it not

[06:23] <dduncan> as is math

[06:24] <TimToady> yes, but it knows about positionals, something that is vehemently denied in the 3rd Manifesto stuff I was reading.

[06:24] <dduncan> yes

[06:24] <dduncan> a tuple in TTM is like a set, but that each element is typed

[06:24] <gaal> dduncan: what you described is called a "record" in haskell etc.

[06:24] <dduncan> TTM is based on sets

[06:25] <dduncan> yes, the Tuple of TTM is like a record or struct or class

[06:25] <gaal> TaPL-style tuples have fixed size and anonymous members

[06:25] <gaal> but their positions are of course fixed.

[06:25] <arcady> those are the kind one sees around programming languages

[06:25] <TimToady> in essence, their position in the tuple is their name.

[06:26] <dduncan> whereas, TTM opposes things being addressed by order, but rather says things have to be addressed by name only

[06:26] <TimToady> and of course, they can be well typed.

[06:26] <TimToady> the name of this element is "3rd".  :)

[06:26] <dduncan> actually, I found out where the name "3rd manifesto came from" ...

[06:26] <gaal> dduncan: when you gave your definition, you said a tuple is "a set of ... triples"

[06:26] <gaal> a triple is one kind of tuple :)

[06:27] <dduncan> essentially, TTM was a response 2 two other documents that people wrote about databases

[06:27] <dduncan> so it was noted 3rd

[06:27] <dduncan> I can pull the names of the first 2 if people want

[06:27] <TimToady> gee, it's an iterative process.  must be bogus...

[06:28] <arcady> of course, they don't even give their manifesto a proper name... only a number

[06:28] <gaal> gee, it's a manifesto, it must be bogus :-P

[06:28] <dduncan> that's just a name

[06:28] <dduncan> probably just a situational name that stuck

[06:29] <TimToady> the named-arg part of a Capture is like a D tuple, while the positional part is like a Haskell tuple.

[06:30] <dduncan> what it actually claims to be is  an abstract blueprint for the design of a DBMS and the language interface to such a DBMS

[06:30] <dduncan> that's what TTM is

[06:31] <dduncan> a rationale for tuples being wholly named based in a relational model is that it makes doing joins simple

[06:31] <TimToady> Interestingly, P6 has been pushing more towards the named parameters than the positionals.

[06:32] <dduncan> you don't have duplicate names after joins, causing ambiguity problems

[06:32] <dduncan> and you don't have fields that lack names entirely

[06:32] <TimToady> but all the parameters actually have a name--the positionals are just a convenient shorthand.

[06:32] <arcady> named parameters are less confusing

[06:32] <dduncan> both of which can happen in SQL because SQL lets rows be defined in order

[06:33] <TimToady> actually, we can have nameless parameters too, but they're pretty useless...

[06:34] <TimToady> but I can't think of anything that's quite like a join offhand.  probably just lack of imagination on my part, though.

[06:35] <TimToady> what does D do about name collisions on join?  didn't see anything about that in the Chapter 3 I read...

[06:35] <dduncan> anyway, I bring up this particular issue because the word 'tuple' is strongly associated with the relational data model and set mathematics before that

[06:35] <dduncan> TimToady, I'll answer that ...

[06:36] <dduncan> in D, there are 2 central kinds of joins, which are 'natural' joins and 'cross' joins

[06:36] *** pmichaud joined
[06:37] <dduncan> the latter is a cross-product, where inputs of N and M items produce an output with N*M items

[06:37] <dduncan> the former will match up each name in both inputs, lining them up where they are equal, and the output contains that column just once

[06:38] <TimToady> also known as "inner" and "outer" joins?

[06:38] <dduncan> so, say you have 2 relations with attributes { A, B } and { B, C } respectively ...

[06:39] <dduncan> a 'join' between those would produce 1 relation with attributes { A, B, C }

[06:39] <dduncan> it is essentially an inner join with same-named columns implicitly matched pu

[06:39] <dduncan> s/pu/up/

[06:39] <TimToady> sure

[06:40] <dduncan> so in D, you never specify 'join conditions' like in SQL's inner joins

[06:40] <dduncan> they just implicitly join on the same names, sort of like a SQL natural join

[06:40] <dduncan> partly as a result, it is very terse syntax to join N items

[06:40] <TimToady> okay, basically you have some kind of a URI-ish rule that says the name has to mean the same thing universally.

[06:41] <dduncan> or rather, the signature of join() can take N relations as input

[06:41] <dduncan> no

[06:41] <dduncan> you can still join on dis-similar names ...

[06:42] <dduncan> but you first transform one or both of the input relations so that they have same names where they should match up, and different names where they should not

[06:42] <TimToady> why does this remind me of ! addresses on Usenet...

[06:42] <dduncan> in D, all relational operators are pure functions, that take one or more relations as input, and produce one relation as output

[06:43] <dduncan> the join() function connects them

[06:43] <dduncan> the rename() function is 1:1, and lets you rename attributes

[06:44] <dduncan> of course, if you design your database well in the first place, you would just happen to tend towards having same and different/names where the meanings are meant to be same/different

[06:44] <dduncan> so you have relatively few renames to do later

[06:44] <TimToady> okay, so basically you have an aliasing mechanism for papering over the lack of universal names.

[06:44] <dduncan> so you don't need universal names at all, it just helps

[06:44] <dduncan> yes, rename() is an aliasing mechanism of sorts

[06:45] <dduncan> SQL's analogue is the 'as' syntax

[06:45] <TimToady> I can see a D Best Practices coming out about naming conventions... :)

[06:46] <dduncan> I will note that TTM intentionally focuses on certain core issues related to databases, and largely leaves other issues up to third parties, though they make a point of thinking through that everything they propose is actually implementable

[06:46] <dduncan> eg, they don't talk too much about an architecture for users and permissions and such

[06:47] <dduncan> one reason that I think this stuff or something similar can be built into Perl 6 is that, really, a relation is just a data type, and its operators are just functions

[06:47] <dduncan> it could be included the same as you have arrays or objects or junctions

[06:47] <TimToady> I can see this falling into the functional programming fallacy of hiding a lot of context in the "current execution state", but what happens when conflicting naming authorities are trying to run their own set of functions over the same data.  it gets "webby".

[06:48] <dduncan> there is no need for a naming authority, as all the names are locally defined

[06:48] <TimToady> what the heck does "local" mean?

[06:48] <TimToady> local is the enemy of webby

[06:48] <dduncan> perhaps I take that back

[06:48] <dduncan> what do you mean by "authority"

[06:48] <dduncan> ?

[06:49] <TimToady> I mean whatever it is that TTM is sweeping under the carpet.  :)

[06:49] <dduncan> TTM is a set of suggestions about a specific problem domain ... what it largely doesn't specify is some tangential things

[06:50] <TimToady> If I send out a relation in an RSS feed, what do I *really* call my columns?

[06:50] <dduncan> the 'columns' of relations are 'attributes'

[06:50] <dduncan> the 'fields' of tuples are also 'attributes'

[06:51] <dduncan> a relation is a set of distinct tuples where all the tuples have the same set of attributes

[06:51] <TimToady> yeah, yeah, cheap pun on RSS and 5th column and all that newsy stuff.

[06:51] *** Aankhen`` joined
[06:51] <dduncan> in loose implementation terms, we could say that a relation is like a class, and a tuple is an object of that class

[06:52] <dduncan> but a relation is actually just data too

[06:52] <TimToady> except for minor considerations of tuples being immutable, while the whole *point* of objects is to store mutable state...

[06:52] <dduncan> strictly in data terms, a tuple is a set of attributes, and a relation is a set of tuples

[06:52] <dduncan> yes

[06:53] <dduncan> I was just using the term class/object here to provide certain analogies to other languages ... perhaps wrongly

[06:53] <dduncan> its probably simpler to say that a relation is a set of sets

[06:53] <TimToady> so attributes is another term that actually means different things in various places.

[06:53] <dduncan> but that every element of the relation is the same size

[06:54] <dduncan> yes, 'attribute' has a variety of meanings depending on context

[06:54] <dduncan> an attribute in TTM speak is a value of any data type

[06:55] <TimToady> then why don't they just call them values?

[06:55] <dduncan> we could

[06:55] <dduncan> I just said attribute there because thats the terminology that TTM used ...

[06:55] <dduncan> but in a Perl implementation we can just call them values

[06:56] <dduncan> or rather, an attribute is a slot that represents or stores a value

[06:56] <dduncan> ...

[06:56] <dduncan> TTM distinguishes between values and variables ... as does Perl

[06:56] <dduncan> a value is something that goes in a variable

[06:56] <dduncan> and an expression has a value / return-value

[06:56] <TimToady> I'd like to know more about how TTM treats time.

[06:57] <dduncan> a value that isn't in a variable is immutable

[06:57] <TimToady> since time is what makes things mutable, almost by definition...

[06:57] <dduncan> when you assign to a variable, you are replacing its content value with a different value

[06:58] <dduncan> the term 'value' in TTM is something that is immutable

[06:58] <dduncan> eg, the number 4 is a value

[06:58] <dduncan> you can store a different value, such as 3, in a number variable that used to hold 4

[06:59] <TimToady> um, I've heard of variables...

[06:59] <dduncan> that changes the variable, but the 4 itself didn't change

[06:59] <dduncan> of course

[06:59] <dduncan> what's your question?

[06:59] <TimToady> I'd like to know more about how TTM treats time.

[07:00] <dduncan> for example?

[07:00] <TimToady> how it, um, emulates the mutability of objects over time.

[07:01] <dduncan> if this helps, what TTM describes is meant to be a portion of a larger language, not a complete language to its own

[07:01] <dduncan> in TTM speak, a mutable object is a variable

[07:01] <dduncan> in TTM speak, we have data types ...

[07:01] <dduncan> every value is of a type, and every variable is of a type

[07:02] <dduncan> a type definition can be arbitrarily complex

[07:02] <dduncan> a number or a character string is a type

[07:02] <dduncan> a tuple is a type and a relation is a type

[07:03] <dduncan> conceptually speaking, if a variable is of a complex type ...

[07:03] <dduncan> if you were to assign to a member of that type in the variable; eg, if the variable was what we consider an 'object' and we assign to one of its attributes ...

[07:04] *** pmurias joined
[07:04] <dduncan> conceptually we are replacing the entire larger value with another one that is the same but for the changed attribute value

[07:04] <pmurias> hi

[07:04] <TimToady> right, but I sincerely doubt you make a copy of the entire database every time an attribute is modified.

[07:04] <dduncan> not in actuality

[07:05] <dduncan> conceptually we are

[07:05] <dduncan> but the language can still provide syntax for appearing to update just part of it ...

[07:05] <dduncan> and behind the scenes, the implementation will do likewise

[07:06] <dduncan> a consequence of this is that if we want to, say, copy a whole database, like to make a backup, ...

[07:06] <dduncan> the language syntax is essentially: $db2 = $db1;

[07:06] <dduncan> you don't have to manually specify all the parts to copy

[07:06] <TimToady> or we can just run the whole thing on a quantum computer and really change the whole database in constant time. :)

[07:07] <dduncan> yes

[07:07] <wolverian> that should be fine for databases of 6 bits or so ..

[07:07] <TimToady> but then I always did believe in the transactional interpretion of QM...

[07:07] <dduncan> now, I know it may take time to explain, but I think that any concerns you may not actually have corresponding problems

[07:08] <dduncan> eg, anything that you think you should be able to do, you probably can and it will be fast

[07:08] <TimToady> no, I'm not worried about that.  I'm looking for the things I'm not allowed to think.

[07:09] <TimToady> for instance, if there's never any ordering anywhere, how do I serialize?

[07:09] <dduncan> serialization is external to the relational algebra

[07:09] <dduncan> ...

[07:10] <dduncan> you essentially use an operator that changes a relation into something that isn't a relation, like an array

[07:10] <dduncan> since relations are inherently orderless

[07:10] <dduncan> it can be done, no problem

[07:10] <TimToady> so I saw the title of some paper that talked about the relationship of time to all this.  My question is whether that is "outside the relational algebra".

[07:11] <dduncan> also keep in mind that some tasks people think they need to have serialized actually don't

[07:11] <dduncan> think like your junctions concept for example

[07:11] <dduncan> when transforming relations, it doesn't matter what order the tuples are processed, so they can be done in any order or parallelized; it will come together in the end

[07:12] <dduncan> serialization only really is useful when moving data between the relational and non-relational realms, such as for display to a user

[07:12] <TimToady> I don't mind that.  Again, I'm just trying to see what the relational algebra *doesn't* express.

[07:12] *** XaXXon joined
[07:13] <dduncan> the scope is probably analagous to what kinds of algebra you can have for a 'set'

[07:13] <XaXXon> ?eval 1+1

[07:13] <XaXXon> hrm

[07:13] <TimToady> In any given linguistic system, there are the things you have to say vs the things that are optional.

[07:13] *** XaXXon left
[07:13] <dduncan> eg, with a set, you can add or remove elements, do union, intersection, difference ...

[07:13] <dduncan> of multiple sets

[07:13] <TimToady> In a programming context, there are things you have to promise to the computer, and the things that you can promise optionally.

[07:13] <dduncan> stuff like that

[07:14] <TimToady> junctions are an optional promise of non-interference between the alternatives.

[07:14] <dduncan> since relations are sort-of 2-dimensional sets, you get the adding/removing unioning, differencing, intersecting in multiple dimensions

[07:14] <TimToady> one could write the same thing without making the promise.

[07:15] *** XaXXon joined
[07:15] <dduncan> every element in a relation is, by definition, unique, and addressable by name rather than position

[07:15] <dduncan> like with a set

[07:16] <TimToady> well, I need to go to bed, and I think we're just talking vaguely in each other's direction at this point.

[07:16] <wolverian> it's like two conversations..

[07:16] <wolverian> good night :)

[07:16] <dduncan> of course, if I actually made that implementation, it should be easier to discuss :)

[07:16] <TimToady> nite

[07:16] <dduncan> good night

[07:17] <dduncan> also, for now I'll just name my impression of a tuple as "Relation::Tuple"

[07:17] <dduncan> no ambiguity

[07:18] <dduncan> ultimately, the difficulty in using a relation shouldn't be much more than in using an array or a hash or a set

[07:18] <dduncan> or a simple object

[07:19] <dduncan> and that's it for me tonight too

[07:19] <dduncan> 12:19am and all

[07:22] <pmurias> good night

[07:26] <XaXXon> configure: error: GHC is required unless bootstrapping from .hc files.  Haskell support anyone? :)

[07:26] <XaXXon> the "building guide" on the web page is a 404

[07:26] <rgs> install ghc ?

[07:27] <XaXXon> oh I thought that was what I was doing

[07:27] <XaXXon> I downloaded ghc-6.4.2.xxxxxxxx, untarred it and read the README and it said to run ./configure

[07:28] <XaXXon> and it gave that error..

[07:28] <XaXXon> I see.. I'm supposed to start from a binary release..

[07:28] <rgs> yes

[07:28] <XaXXon> of course there's no universal os x build

[07:29] <XaXXon> I guess I rosetta bootstrap

[07:30] *** azuroth joined
[07:34] <XaXXon> sigh.. too hard :(

[07:36] <rgs> I don't use OS X :/

[07:38] <pmurias> XaXXon: maybe try compiling from .hc's

[07:38] *** drrho joined
[07:38] <XaXXon> no, actually I just grabbed the wrong package..

[07:38] <XaXXon> I grabbed the "pretty os x package" instead of the "unixy os x package"

[07:39] <XaXXon> so there was no "ghc", there was "GHC Compiler Kit.app"

[07:39] <XaXXon> doing the stuff from .hc files is waaay more than I'm prepared for.. I read a tad about that..

[07:40] <pmurias> i use gentoo, so i never had any problems, just a quick emerge ghc-bin

[07:40] <XaXXon> yeah.. darwin is a pita sometimes

[07:43] <pmurias> getting the graphic card working is the biggest pita on gentoo, everything else just works (except true type fonts in xterms)

[07:43] <XaXXon> yeah, I've run gentoo

[07:43] <pmurias> why did you switch?

[07:44] <ayrnieu> everybody was doing it.

[07:44] <ayrnieu> the computers were so pretty.

[07:44] <XaXXon> switch?  oh I haven't

[07:44] <ayrnieu> Mac people sneered at me for twisting to adapt to inhumane interfaces.

[07:44] <XaXXon> I have a windows box, a linux box, and a mac (actually 2 counting my powerbook) in my office

[07:45] <XaXXon> the new mac minis are so sweet, I had to grab one

[07:45] <ayrnieu> the initial state, where you're just learning and willing to adapt because you want to get a water-runs-downhill view of life in OSX, is very very pleasant, because Apple loves those who do what Apple says.

[07:46] <XaXXon> yeah, a lot of it pisses me off, I'll go with that

[07:46] <XaXXon> it's not for power users.. but if you're sitting in an app doing non-coding type work, it's nice

[07:46] <XaXXon> I use iMovie and iDVD a lot

[07:46] <ayrnieu> life past that probably depends on how 'twisted' you are.

[07:47] <XaXXon> but mostly I use it as a tiny, quiet dual-core unix-y system

[07:47] <XaXXon> if it didn't have so many damn wires coming out of it, I'd probably lose it

[07:47] <pmurias> i just use xterm's and firefox and the gimp if i do masochistic script-fu scripting

[07:48] <XaXXon> GHC was thinking about building from source.. but oh well..

[07:48] <XaXXon> I should be able to install pugs now?

[07:49] <XaXXon> or not

[07:49] <pmurias> is there a terminal emulator which can display images(no as backgrounds) but as part of the text flow?

[07:50] <XaXXon> would it wrap vertically?

[07:50] <XaXXon> I mean.. err.. huh?

[07:50] <ayrnieu> pmurias - cleverness along w3m's lines?

[07:51] <ayrnieu> someone wanted such a thing a while ago, and I thought them a bit crazy, but that suddenly makes sense for some new-type IF games.

[07:52] <pmurias> it makes sense for doing a lot of stuff

[07:52] <ayrnieu> I don't see those yet, though.

[07:53] <pmurias> you could do: icat image.png | filter1 | filter2 and the image would display filtered twice

[07:53] <ayrnieu> that has nothing to do with your terminal emulator.

[07:54] <pmurias> i spoils the fun if it displays in a new window

[07:55] *** Santana joined
[07:55] <ayrnieu> the view-jpg at the end of that stream is only part that matters.

[07:56] <ayrnieu> it could talk to X or it could talk to your terminal; your terminal can't possibly care about the filtering that happens up to then.

[07:58] <pmurias> visiting a friend&

[07:59] *** Santana left
[08:01] * integral has done pipelines like that for video... (ffplay/ffmpeg work fine on pipes)

[08:15] *** KingDillyDilly joined
[08:23] <svnbot6> r9936 | Darren_Duncan++ | trunk/Rosetta/ : a few minor updates; this now corresponds to the Perl 5 version's 0.724.0 CPAN release

[08:24] <dduncan> er, NOW I'm really going to be gone

[08:25] <dduncan> Larry, if you backlog and see this, and you're looking at the TTM stuff online, make sure to see the Chapter 4 of the 3rd edition, and not the Chapter 3 of the 2nd edition, which may be what you had seen online before a few days ago ... significant improvements

[08:25] <dduncan> or it may not change your impression at all, who knows

[08:26] <dduncan> regardless, what I propose for Perl 6 is only a small subset of what is mentioned there, and so the Relation for Perl 6 is essentially just an object, and is as mutable as a Perl 'Array' or 'Set' or 'Hash' etc

[08:27] <dduncan> I'll defer further discussions until I have an implementation ... any week now

[08:27] <dduncan> so to avoid us accidentally speaking past each other

[08:28] <dduncan> er, make that, TimToady, if you see this ... in case your client highlights your nick

[08:29] <dduncan> good night, anyway

[08:29] <wolverian> good night :)

[08:33] *** dduncan left
[08:33] <KingDillyDilly> The future of Perl depends on TimToady reading the above message? :-/

[08:35] <KingDillyDilly> Someone should invent email or something.

[08:36] <XaXXon> or usenet

[08:36] <XaXXon> now I know why perl6 is taking so long

[08:36] <buu> Pssh. Email sucks.

[08:39] *** integral is now known as ntgrl

[08:43] *** KingDiamond joined
[08:44] <KingDillyDilly> Diamonds can't cut Dillies.

[08:44] *** integral joined
[08:58] *** chris2 joined
[09:22] *** nothingmuch joined
[09:24] <nothingmuch> pmurias: ping

[09:25] *** Khisanth joined
[09:54] *** KingDillyDilly joined
[10:07] *** david__ joined
[10:09] *** _bernhard joined
[10:11] *** iblechbot joined
[10:12] *** PolettiX joined
[10:15] <pmurias> nothingmuch: pong

[10:15] <pmurias> i'll be back in 1h

[10:28] <pmurias> b, raining

[10:30] *** KingDiamond joined
[10:33] <ingy> hola

[10:36] *** elmex joined
[11:01] <ingy> elk

[11:02] <pmurias> ?

[11:10] <_bernhard> pmurias: Just cleanup up some Parrot_init() calls in Parrot

[11:19] <nothingmuch> hola ingy

[11:23] <pmurias> _berngard: which one should i clean up?

[11:30] <_bernhard> Sorry, I meant that I just cleaned up Parrot_init() calls. Parrot SVN r12217

[11:35] <nothingmuch> pmurias: got /msg?

[11:42] <pmurias> no

[11:46] <pmurias> __bernhard: i'm recompiling parrot to see if it still works

[11:50] <nothingmuch> pmurias: mail me an ssh key

[11:51] <nothingmuch> pmurias: or maybe /msg on irc.perl.org?

[11:51] <pmurias> i'll msg on irc.perl.org

[11:52] *** pmurias joined
[11:57] <nothingmuch> pmurias: urf, got nothing from yo on perl.org

[11:57] *** nnunley joined
[11:58] <pmurias> pmurias: sent now

[12:01] <nothingmuch> pmurias: are you messaging in the correct network?

[12:01] <nothingmuch> i got nothing except the "here i am"

[12:01] <nothingmuch> freenode--

[12:03] *** KingDillyDilly left
[12:13] *** turrepurre joined
[12:20] *** kolibrie joined
[12:27] *** Limbic_Region joined
[12:34] <pmurias> nothingmuch: msg the key to you

[12:34] <pmurias> s/msg/msg'ed/

[12:35] <pmurias> is it correct?

[12:35] <nothingmuch> looks OK

[12:38] *** nnunley_ joined
[12:55] *** KingDiamond joined
[12:58] *** cognominal joined
[13:00] *** dakkar joined
[13:09] <gaal> interesting lead: "packrat parsing"

[13:09] <gaal> # http://pdos.csail.mit.edu/~baford/packrat/

[13:09] <audreyt> gaal: how's your time look like in the next... er, 96 hours?

[13:09] *** SamB joined
[13:10] <gaal> audreyt: have to leave in fifteen minutes till... next morning, basically, IDT

[13:10] <audreyt> idt?

[13:10] <gaal> GMT+3

[13:11] <gaal> uh, so next 19 hours or so are out, unfortunately

[13:12] <audreyt> that's fine... I'll work rebooting the journal instead then

[13:12] <audreyt> fascinating news that pmichaud's tree starts to blossom

[13:13] <gaal> ok let's try gobby just for tech test, please connect to sike.forum2.org

[13:16] <audreyt> woot

[13:16] <audreyt> I mean, moose

[13:16] <audreyt> (it works)

[13:16] <gaal> whee, astounding, it works

[13:16] <gaal> you must acquit

[13:16] <audreyt> :D

[13:16] <audreyt> I must blog, is more like it

[13:16] <PerlJam> good morning #perl6 people

[13:17] <audreyt> several friends and acquaintances threatened dire actions if I continue to skip journaling

[13:17] <gaal> .oO( audreyt: I must ACCKKEKKEEK!!! QUIT!!! )

[13:17] <gaal> continuation style skip journalling

[13:20] <audreyt> ok, the subject of this entry should be "reset from the shift"

[13:20] <audreyt> gaal++ # providing obscure CPS reference

[13:21] <theorbtwo> You know, it took me a moment to realize that the Airport Express had nothing to do with 802.11

[13:22] <audreyt> which airport was that? :)

[13:22] * audreyt had that moment in Narita @ tokyo

[13:22] <gaal> audreyt: don't you mean obscure capture?

[13:22] <gaal> i'll miss references. they are the longest word I know with only one vowel.

[13:23] <audreyt> no, I mean CPS as in Capture / Pair / Signature

[13:23] <audreyt> the fundamental confusion-generating traid over perl6 calling convention

[13:23] <audreyt> triad, even

[13:23] <gaal> see, it's so obscure even I missed it

[13:23] <gaal> good thing we have you around :)

[13:23] <theorbtwo> Gaal: Mississippi is tied, I think.

[13:23] <audreyt> that's okay, I missed it the first time too

[13:24] <audreyt> backronym is fair play

[13:24] <theorbtwo> Longer, even.

[13:24] <gaal> "what's got four eyes and can't see?"

[13:24] <azuroth> hmm. c# uses {} in some strings, but there's no way to escape them? lame..

[13:24] <gaal> (joke from Mississippi Burning)

[13:25] <gaal> okay, must moose. elk y'all later! &

[13:26] <audreyt> g'alces, gaal

[13:33] <rafl> Juerd: That's fine with me.

[13:33] <rafl> Juerd: How about the stuff of mine you still have? :-)

[13:43] <Juerd> rafl: Yea, I should probably send that some time :)

[13:44] <Juerd> rafl: You were still in the process of making up your mind about ultrabay and such

[13:44] <rafl> Juerd: No money for that, currently. Sorry.

[13:44] <rafl> Juerd: What things do you still have?

[13:45] <Juerd> rafl: Eh, I forgot. At least PBP.

[13:45] <Juerd> I have it in a bag in a corner of my room

[13:46] <rafl> Juerd: That's also the only think I'm aware of.

[13:46] <rafl> Juerd: And the thing I'd really like to have :-)

[13:46] <Juerd> I can imagine

[13:50] <Limbic_Region> Juerd - I had a dream I was teaching someone to dypte dvorak last night

[13:51] <PerlJam> I once had a dream that we'd have a parrot-based perl6 compiler and lo one exists today!  ;)

[13:52] <Limbic_Region> PerlJam - should I backlog for an announcment or something?

[13:52] <Limbic_Region> and did we skip over pugs 6.28.0 ?

[13:53] <rafl> Juerd: You forgot your s/.*/perl/; shirt.

[13:53] <PerlJam> Limbic_Region: no, I'm referring to parrot/languages/perl6

[13:53] <Limbic_Region> oh - that's been there for a looooong time PerlJam (albeit not in its current form)

[13:54] <PerlJam> Limbic_Region: but now it works!

[13:54] <PerlJam> PGE+TGE+pmichaud == perl6 compiler based on parrot

[13:55] <Juerd> rafl: Oh...

[13:55] <Juerd> Limbic_Region: I actually did it for real two nights ago.

[13:55] <Limbic_Region> PerlJam - and it does what as an object model?

[13:55] <PerlJam> http://nopaste.snit.ch:8001/6938

[13:55] <Juerd> Limbic_Region: In a dvorak workshop. There were 10 attendees.

[13:55] <PerlJam> Limbic_Region: it's not *quite* that far along in working  :)

[13:56] <Limbic_Region> cool Juerd - I really need to find more time to practice.  There are just so many interesting distractions for me

[13:56] <Juerd> Maybe I should publish my slides for that

[13:56] <Limbic_Region> Juerd - please do

[13:56] <Juerd> The slides aren't finished yet; I forgot some important stuff, I discovered during the workshop

[13:56] * rafl forgot the gcc flag which skips linking.. could someone please remind me?

[13:56] <Juerd> (Prepared them in one hour)

[13:59] <Juerd> Limbic_Region: http://juerd.nl/files/slides/dvorak/dvorak.html

[14:00] <Juerd> Limbic_Region: http://juerd.nl/files/slides/dvorak/blue_highway_bold.ttf ;)

[14:01] <integral> rafl: -c to compile a single .c to a .o

[14:02] <rafl> integral: Yes! Thank you.

[14:03] <Limbic_Region> thanks Juerd

[14:04] <dakkar> Juerd: dvorak.nl is the same server as juerd.nl ?

[14:04] <Juerd> dakkar: Yes, why?

[14:04] <dakkar> it keeps sending me just the first few lines of every image ;-)

[14:05] * dakkar uses a dvorak keyboard

[14:05] <Juerd> Lines of images?

[14:05] <Juerd> And do you have this problem on both juerd.nl and dvorak.nl?

[14:05] <dakkar> yes, like the pictures in the slides, or the photos on the "buy keyboard" pages

[14:05] <Juerd> Weird...

[14:05] <dakkar> i get only part of each image...

[14:06] <Juerd> What's your IP?

[14:06] <dakkar> now I'll try to see if it's something on my side

[14:06] *** prefiks joined
[14:06] <dakkar> Juerd: might be 85.45.142.2 (I'm behind a couple of NATs)

[14:06] <Juerd> dakkar: tnx.nl/ip

[14:07] <dakkar> I confirm my ip

[14:07] <Juerd> ok

[14:08] <Juerd> dakkar: Huge latency on your line...

[14:09] <Juerd> between hops 8 and 9:

[14:09] <Juerd>  8  r-rm199-vl3.opb.interbusiness.it (151.99.29.152)  72 ms  90 ms  81 ms

[14:09] <Juerd>  9  r-pi31-rm199.opb.interbusiness.it (151.99.101.22) [MPLS: Label 481 Exp 0]  1410 ms  1266 ms  1213 ms

[14:09] <dakkar> quite probable... I'm at work

[14:09] <Juerd> My server has very strict timeouts

[14:09] <Limbic_Region> Juerd - it might be helpful to show how to change keyboard layout on a couple of the most common OSes

[14:09] <dakkar> it's the backbone trunk between Rome and Pisa...

[14:09] <dakkar> nice to know

[14:09] <Juerd> Limbic_Region: dvzine.org

[14:10] <Juerd> Limbic_Region: I want something that can create Flash movies out of screenshots

[14:10] <dakkar> mencoder!

[14:10] <Juerd> dakkar: Under Windows

[14:10] <Juerd> And *including* the cursor

[14:10] <dakkar> mencoder+cygwin ;-)

[14:10] <dakkar> ouch

[14:10] <Juerd> As in: demo the entire thing

[14:11] <Juerd> People used to GUIs get lost easily if you show them only intermediate screenshots.

[14:11] <Juerd> I'm off now; going to reinstall my laptop

[14:16] <stevan> audreyt: ping

[14:18] <audreyt> stevan: pong

[14:18] <stevan> audreyt: I was wondering about the YAPC::NA hackathon

[14:18] <stevan> the wiki says it is post-conference

[14:18] <stevan> any details on that?

[14:19] <audreyt> stevan: June 29 to July 2 (plus or minus pi days)

[14:19] <stevan> cool

[14:19] <stevan> accomidations? or are we on our own?

[14:19] <audreyt> ingy: accomodations? or are they on their own?

[14:20] <nothingmuch> yay! birthday

[14:20] * stevan wonders if ingy has a cabin somewhere in the woods

[14:20] <audreyt> (it's possible that we'll come to ingy's parents' place in Antioch)

[14:20] <stevan> ingy has parents?

[14:20] <stevan> he wasnts just spawned from the internet?

[14:20] <audreyt> surprising discovery, no?

[14:20] * stevan re-evaluates his entire perception of reality

[14:21] <audreyt> to quote from ingy's blog:

[14:21] <audreyt>  Like my Dad always told me, "Son, you can't always get your namesake domain, but you can always make your domain your namesake".

[14:21] <audreyt> see? he has a Dad.

[14:21] <stevan> :D

[14:21] <stevan> class Ingy { has @parents; }

[14:24] <stevan> class Ingy::d?t::Net { has @parents handles <hackathon_accomidations>; }

[14:24] <audreyt> it's scary that when I wget from http://..../moose

[14:24] <audreyt> wget saves it as moose.5

[14:25] <audreyt> evidently I've been brainwashed

[14:25] <theorbtwo> You already have moose and moose.[1234]?

[14:25] <audreyt> yeah, those are my favourite temp file names on other machines

[14:25] <audreyt> (and then I wget them back)

[14:25] * stevan thinks we should talk to o-reilly about changing the animal for Perl 6 

[14:25] *** kane_ joined
[14:26] <rgs> $ meta --ws antlers 5

[14:26] <rgs> hirvi velvet_antler caribou deer moose

[14:26] <rgs> favorite metasyntactic variable names :p

[14:30] <kolibrie> Juerd: http://www.macromedia.com/software/captivate/

[14:36] *** ghenry joined
[14:41] *** q[uri] joined
[14:45] <Juerd> kolibrie: Thanks. I'll have a look at it soon.

[14:45] *** kane__ joined
[14:45] <Juerd> Hoi kane__

[14:52] *** KingDiamond joined
[15:05] <spinclad> [aa|a|b] could compile into [a:[a:|]|b:] 1<2                                                    >

[15:13] *** xinming1983 joined
[15:13] *** vel joined
[15:13] <audreyt> 1<2> ?

[15:14] * audreyt decides to sleep instead of expanding more from the freshly-posted journal entry

[15:16] <Juerd> Sleep well, audreyt

[15:17] *** avarab joined
[15:17] <Juerd> Wow, long post. Thanks :)

[15:21] <svnbot6> r9937 | pmurias++ | works now for simple things

[15:21] <svnbot6> r9937 | pmurias++ | expressions are yet to be done

[15:21] <svnbot6> r9936 | Darren_Duncan++ | trunk/Rosetta/ : a few minor updates; this now corresponds to the Perl 5 version's 0.724.0 CPAN release

[15:21] <nothingmuch> i need a volunteer to finish off the smoke server

[15:21] <nothingmuch> i can'ty

[15:21] <nothingmuch> i just don't have design-fu

[15:23] <Juerd> What kind of design?

[15:24] <pmurias> nothingmuch: you are not the only one who dosn't have much

[15:26] <pmurias> design-fu is IMHO the part of programming that requires most experience

[15:26] *** FurnaceBoy joined
[15:27] <pmurias> mine suck completly,

[15:28] <nothingmuch> oh

[15:28] <nothingmuch> that kind of design fu i think i have =)

[15:28] <nothingmuch> i meant html-design-fu

[15:30] <nothingmuch> pmurias: wrt the mail address: the only thing you should know is that occasionally (~once per month) i have cable-carrier downtime, that is the connection drops for ~10-20 mins

[15:30] <nothingmuch> and in addition my ISP is filled with assholes

[15:30] <nothingmuch> but soon i will probably have a decent ISP in the states

[15:32] *** justatheory joined
[15:32] <kolibrie> nothingmuch: how long are you going to be in the states?  long-term?

[15:32] <pmurias> nothingmuch: we can make a deal, you help me design the emitter i'll do the html design for you :)

[15:33] <nothingmuch> okay =)

[15:33] <nothingmuch> kolibrie: 6 months, it seems

[15:33] <kolibrie> nothingmuch: cool

[15:35] <pmurias> i learned html/css the reverse-ajax way so don't expect art-design-fu

[15:35] <nothingmuch> pmurias: this is simple layout stuff

[15:36] <nothingmuch> i'll have a brain farting session with you later tonight, kay?

[15:36] <pmurias> ok

[15:39] <pmurias> where can i find the stuff you want layout?

[15:40] <ingy> hi nothingmuch

[15:41] <xinming1983> Round-half-even, what does round half even mean?

[15:41] <xinming1983> bbl

[15:41] *** xinming joined
[15:42] <xinming> back

[15:42] <xinming> what does round-half-even mean? hmm, It's from http://www.pldesignline.com/howto/showArticle.jhtml?articleID=175801189

[15:43] <Limbic_Region> xinming - perhaps to the next even number?

[15:43] <xinming> Limbic_Region: hmm, I don't know. :-/

[15:43] <theorbtwo> xinming: round half to the nearest even number.

[15:44] <xinming> so, 4.2 will be rounded to 5?

[15:44] <Juerd> Wha, fuck, my backup ends at half of my music archive :(

[15:44] <xinming> and 5.2 will be rounded to 5.0?

[15:44] <Juerd> xinming: 5 is not an even number.

[15:44] <Limbic_Region> it is defined further on xinming

[15:44] <dakkar> xinming: no, it only kicks in if you round at helf

[15:44] <xinming> oops...

[15:44] <Juerd> xinming: 2, 4, 6, 8, ... are even, 1, 3, 5, 7, ... are odd

[15:44] <theorbtwo> It only applies if you're at the halfway point.  4.2 rounds to 4.

[15:44] <Limbic_Region> search for Round-half-even: If half-way values are always

[15:44] <xinming> yea, I just confused these 2 words. :-)

[15:44] <dakkar> 4.5 rounds at 4, 3.5 rounds at 4

[15:44] <Juerd> KingDiamond: So 4.5 is rounded to 4, 5.5 is rounded to 6

[15:44] <theorbtwo> 4.5 rounds to 4, because it's round and 5 isn't.

[15:45] <theorbtwo> Er, s/round and/even and/

[15:45] <Juerd> even

[15:45] <xinming> how about 4.7?

[15:45] <xinming> 5.0?

[15:45] <dakkar> yes

[15:45] <dakkar> nearest

[15:45] <Juerd> 4.7 is always rounded to 5, because it's not .5

[15:45] <Juerd> .5 is special because it's *exactly* halfway.

[15:45] <Juerd> If it's .499999999999999999 or .50000000000000000001, there's no longer any question.

[15:46] <xinming> so, no matter what the number after the point...   It will always reach the even number?

[15:46] <Juerd> No...

[15:46] <Juerd> Only if the to-be-truncated part is exactly half (that is, 5), it rounds toward the nearest even number

[15:46] <xinming> 4.2 --(round-half-even)--> 5.0?

[15:47] <xinming> oops

[15:47] <Juerd> No, 0.2 is less than 0.5, so it's always rounded down.

[15:47] <Limbic_Region> no xinming - did you read the explanation yet

[15:47] <Juerd> 0.6 is more than 0.5, so it's always rounded up.

[15:47] <Juerd> 0.5 is exactly 0.5, so it rounds to the nearest even.

[15:47] <xinming> Limbic_Region: yes, but I don't understand as there isn't many example out there...

[15:47] <Limbic_Region> basically it is a way to remove the bias from a system that always rounds .5 up

[15:48] <Limbic_Region> imagine you have hundreds of floating point numbers that you wanted to do some statistics on

[15:48] <Limbic_Region> first you decide to round the numbers to make things more digestible

[15:48] <Limbic_Region> by rounding all the numbers at exactly .5 up - you could possibly bias the resulting statistics

[15:49] <Limbic_Region> if instead - you rounded numbers that were exactly #.5 to the nearest even number

[15:49] <Limbic_Region> you have a much better chance of averaging things out

[15:49] <Juerd> perl -e'for ($_ = 0; $_ <= 10; $_ += 0.1) { printf "%.1f --> %.0f", $_, $_; print " <--" if $_ =~ /\.5$/; print "\n"; }'

[15:50] <Limbic_Region> of course for datasets produced by a function that leads to more odd numbers than even - this is flawed thinking

[15:50] <Limbic_Region> make more sense xinming

[15:50] <Juerd> If it's at .5 without any <--, then see perlfaq for the explanation :)

[15:50] <xinming> Juerd: perl-fect one-liner. :-P

[15:50] <PerlJam> Limbic_Region: you should write that up in a little more expanded form and put it on perlmonks as a tutorial or something (Assuming it isn't already there somewhere)

[15:51] <Limbic_Region> PerlJam - first I had encountered it.  I am adding it to my list of things to contemplate

[15:51] <xinming> Round-half-up

[15:51] <xinming> Juerd: from your example, it seems it is the same as round-half-up

[15:52] *** sahadev joined
[15:52] <Juerd> xinming: No, look at 2.5, 4.5, 6.5

[15:55] <Limbic_Region> that's actually a really good article

[15:55] * Limbic_Region bookmarks

[15:56] <xinming> `head TASKS` :-)

[15:57] <dakkar> Juerd: what perl are you running? here it rounds up...

[15:57] <Juerd> Oh, it rounds 2.5 up, 4.5 down, 6.5 down

[15:58] <Juerd> Heh, add %.20f

[15:58] <Juerd> And another , $_

[15:58] <Juerd> Then you see why :)

[15:59] <dakkar> I hate limited-precision math...

[16:02] <dakkar> me ne vado a casa

[16:03] <dakkar> (wrong window)

[16:06] * Limbic_Region was going to ask dakkar what print 4 * atan2 1, 1;  should print on his limitless-precision math computer

[16:24] *** hexmode joined
[16:28] <obra> any of the javascript gang around?

[16:32] <miyagawa> audrey++ # http://pugs.blogs.com/audrey/2006/04/post.html

[16:32] <miyagawa> otori-tan is very lovely

[16:34] *** Daveman joined
[16:35] <theorbtwo> Is 'the Japanese romanization' really correct there?

[16:35] <Juerd> rafl: I lost all the geektour photos. Sorry.

[16:36] <Juerd> rafl: My backup is broken - the tar.bz2 is truncated at 4.0 GB :(

[16:36] <miyagawa> theorbtwo: yeah, it's correct. To be more accurate, the only difference is T vs. D in the middle of o and ri, but other than that, it's very naturally same

[16:37] *** frederico joined
[16:37] <rafl> Juerd: Ouch!

[16:37] <Juerd> rafl: Yes.

[16:37] <Juerd> I lost my music archive and photo archive.

[16:37] <rafl> Juerd: Oh well.. I only took quite bad photos. They are at gallery.perldition.org.

[16:38] <rafl> Juerd: *OUCH*~

[16:38] <Juerd> So... people with good music, donate some tgz's please :)

[16:38] * rafl only has CC-licensed music on his hard disk, currently.

[16:39] <rgs> that "otori-tan" naming story is awesome

[16:40] <theorbtwo> Oh!

[16:41] <theorbtwo> You take "Audrey Tang", convert it into hirigana using the Chinese rules, then into Latin with the Japanese rules, and try to pronunce that.

[16:41] <xinming> I worked with Larry to remove the concept of references from Perl 6, along with confusing concepts such as auto-enreferncing and auto-dereferencing. Now a Scalar holding an Array object is... well, just that.

[16:41] *** nnunley_ is now known as nnunley

[16:41] <xinming> hmm, what will the "reference" be called in the future? :-)

[16:48] <miyagawa> Well, when we try to "parse" Audrey Tang as Japanese, it sounds like Audrey + Tan. And "-tan" means a postfix for lovely girls. Audrey can be kanjized using "otori" which magically is the same kanji with her Chinese name for Phoenix

[16:50] <Juerd> Complex.

[16:50] <Juerd> I'm glad my name is ASCII :)

[16:53] * xinming is happy with several names. :-P

[16:55] <obra> miyagawa: are your plane reservations set?

[16:55] <miyagawa> obra: Not yet. Need to sort out my work schedule ...

[16:56] <miyagawa> I'll fix it on Monday

[16:57] <obra> ok

[16:57] <miyagawa> worst case is I stay in .jp for this golden week

[16:58] <obra> heh. *nod*

[16:58] <miyagawa> but anyhow I'm going to US end of May, and I'll fly to East Coast during the stay until August

[16:59] <obra> nice

[17:08] <pmurias> Juerd: what do you call good music?

[17:19] *** zgh joined
[17:21] <Juerd> pmurias: Almost anything that has a normal rhythm :)

[17:21] <Juerd> And doesn't sound like people whining

[17:22] <Juerd> I just discovered that I still have my Metallica, Weird Al, and SoaD

[17:23] <FurnaceBoy> so, no Alanis?

[17:24] <pmurias> we have a *lot* cds arranged mostly in piles in the house but it's mostly jazz,classical and King Crimson

[17:25] <Juerd> Classical's great.

[17:34] <cognominal> juerd : "I'm glad my name is ASCII :)" and you prononce it "weird"?

[17:34] <Juerd> cognominal: ASCII is not my name, it's a property of it :)

[17:35] <Juerd> And no, Juerd is not pronounced "weird"

[17:38] <kolibrie> Juerd: is there a diphthong in Juerd?

[17:39] <Juerd> kolibrie: If you want

[17:40] <Juerd> ue can be either a diphthong or uë

[17:40] <Juerd> In case of ue, it's pronounced as the dutch uu

[17:40] <Juerd> In case of üe, as uu-e

[17:40] <Juerd> eh

[17:40] <Juerd> I meant uë

[17:41] <Juerd> Though if you are/know German, feel free to imagine an umlaut on the u.

[17:41] <pmurias> Juerd: i could post you a list of mp3 on my fathers hd

[17:41] <Juerd> pmurias: And then? :)

[17:41] <kolibrie> Juerd: I probably say it mostly like dutch uë

[17:41] <Juerd> kolibrie: When have you mentioned my name irl then? :)

[17:42] <kolibrie> Juerd: perhaps never

[17:42] <Juerd> Hmm :)

[17:42] <Juerd> Confusing

[17:43] <kolibrie> Juerd: I just pronounce things in my mind while I read

[17:43] * Limbic_Region pronounces Juerd as Gerard in his head for some reason

[17:43] <Juerd> kolibrie: Hm, everything?

[17:43] <Juerd> Limbic_Region: HUH?

[17:43] <pmurias> Juerd: downloading via http would be ok, but i don't think you'll like any of that (unless you like Dylan (not the language))

[17:44] <ingy> a really drunk guy at a bar asked me "Are you a rock star?"

[17:44] <Juerd> pmurias: Doesn't ring any bell. I wasn't very serious, by the way, I don't think it's a good idea to ask other people to do illegal things for me :)

[17:44] <ingy> I said, "Um, yes actually"

[17:44] <ingy> "What's your band?"

[17:44] <Limbic_Region> Juerd - gerard pronounced jer rod

[17:44] <Juerd> ingy: Why else the ö

[17:44] <ingy> "Perl"

[17:45] <ingy> "What instrument do you play?"

[17:45] <FurnaceBoy> "keyboard"

[17:45] <ingy> "hmmm, um, keyboard"

[17:45] <ingy> yeah

[17:45] <FurnaceBoy> :)

[17:45] <miyagawa> ingy++

[17:45] * kolibrie is still puzzling over whether he pronounces everything in his mind while he reads

[17:45] <ingy> then he said he was Butch Vig's cousin

[17:45] <Juerd> kolibrie: ...

[17:45] <kolibrie> Juerd: I give up

[17:45] <Juerd> kolibrie: ...

[17:45] <Juerd> (?)

[17:47] *** jserv-- joined
[17:47] <kolibrie> Juerd: I think I can read faster than I speak, so I must not say everything in my mind, but when I slow down, I think I mentally pronounce what I'm reading

[17:49] <Juerd> I have to copy things to force myself to slow down.

[17:51] * kolibrie finds he does most things very slowly

[18:12] *** frederico joined
[18:15] *** Quell joined
[18:31] *** dduncan joined
[18:34] *** KingDiamond joined
[18:52] <xinming> gaal: could you please tell me what do you use to make this slide? http://perlcabal.org/~gaal/peek/slide7a.html

[18:57] <obra> that looks like spork

[19:01] <xinming> obra: home page please... googled for it... but lost in so many entries

[19:01] <obra> um. it's something of ingy's. try cpan

[19:02] <Juerd> xinming: <meta name="generator" content="Spork v0.20" />

[19:03] <xinming> :-) sorry, I missed that...

[19:13] <spinclad> re round-half-even: for exact arithmetic choose an exact binary fraction: perl -e'for ($_ = 0; $_ <= 10; $_ += 0.125) { print $_; printf " --> %.0f", $_; print " <--" if $_ =~ /\.5$/; print "\n"; }'

[19:19] *** rindolf joined
[19:20] *** rindolf left
[19:25] <Juerd> spinclad: Clever!

[19:29] *** xinming1983 joined
[19:31] *** xinming joined
[19:38] *** ahdahm joined
[19:44] *** weinig|sleep is now known as weinig

[19:47] *** avarab joined
[20:02] *** FurnaceBoy_ joined
[20:28] *** FurnaceBoy_ is now known as FurnaceBoy

[20:34] <gaal> xinming: spork, yes, and a plugin for the syntax coloring

[20:34] <gaal> Kwiki::VimMode

[20:44] <cognominal> scrapbook++

[20:44] <cognominal> firefox++

[20:52] <Juerd> What's scrapbook?

[20:52] <svnbot6> r9938 | Darren_Duncan++ | added beginnings of ext/Relation/ - a logical Relation data type for Perl 6 (a superset of the Set data type)

[20:55] <cognominal> oops, wrong window. Anyway that is http://amb.vis.ne.jp/mozilla/scrapbook/ a nice tool to archive pages

[20:55] <Juerd> Thanks

[20:55] <cognominal> recursive save is too agressive so.

[20:55] <Juerd> Looks useful

[20:56] <cognominal> you can save page weeded from a lot of junk

[20:59] <cognominal> while we are at it, I recommand  http://aluminum.sourmilk.net/reveal/ too, it allow to search material in all the tabs of a firefox wiindow

[21:00] <Juerd> Neat

[21:01] <Juerd> I don't use a lot of extensions

[21:02] <Juerd> noscript / adblock / adblock filterset.g updater / downthemall / web developer / fasterfox  is my standard set nowadays

[21:02] <Juerd> I'll see if reveal and scrapbook will be added. Probably :)

[21:03] <cognominal> I need an all encompassing extension for dealing with bookmarks, there are many incompatible half baked :(

[21:04] <Juerd> Holy cow. reveal is like expose for the only thing on earth I've ever used expose for! :))

[21:04] * Juerd hugs cognominal 

[21:04] <Juerd> You're my hero for today.

[21:05] <Juerd> s/expose/exposé/  # I keep forgetting I have utf8 working now, and wanted to pretend I'm a unicode fanboy

[21:05] <cognominal> I am using my kbd as qwerty so I am at a loss for diacritics outside emacs.

[21:06] <Juerd> I use standard X11 Multi_key

[21:06] <Juerd> Which lets me compose things.

[21:06] <cognominal> downthemall sounds nice

[21:07] <Juerd> for é I hit multi,',e

[21:07] <Juerd> On this box, my right ctrl key is mapped to multi

[21:07] <Juerd> Do you run X?

[21:07] <cognominal> yes, I am on linux.

[21:08] <Juerd> xmodmap -e 'keycode 117 = Mode_switch'

[21:08] <Juerd> ehh

[21:08] <Juerd> xmodmap -e 'keycode 117 = Multi_key'

[21:08] <cognominal> I have been to lazy to search but because you are feeding me with a spoon...

[21:08] <Juerd> That binds your windows menu key to multi

[21:09] <Juerd> gnome and kde have ways of setting this up gui-ly - if you use anything else, just script it so that xmodmap is started at startup

[21:09] <cognominal> I must say I sincerely hate X

[21:09] <Juerd> Everyone does

[21:09] <Juerd> But it's the best thing we have

[21:10] <cognominal> long ago, I worked peripherally for NeWS. that was awesome but never done properly

[21:10] <cognominal> conceptually X is crap compared to NeWS

[21:15] <gaal> Otori-tan: ping

[21:42] *** Kattana joined
[22:01] *** lichtkind joined
[22:04] <lichtkind> ?eval (2&8) == (2|3|5|7);

[22:05] <lichtkind> ?eval 1;

[22:06] <lichtkind> can someone please start evalbit?

[22:06] <lichtkind> bot

[22:06] <Juerd> lichtkind: Do you not have any pugs installation to test these things with?

[22:07] <Juerd> lichtkind: Even if evalbot would be around, this stuff would not be the intended purpose.

[22:07] <Juerd> lichtkind: evalbot is for showing people something, not for testing.

[22:07] <Juerd> lichtkind: You can get access to feather if you don't have a machine that can compile pugs

[22:07] <Juerd> (And even if you have such a machine, you can get access :))

[22:12] <lichtkind> your right

[22:12] <lichtkind> but im still writing this thing an wantet test only 2 3 cases

[22:12] <Juerd> You can run pugs -e for that

[22:13] <Juerd> pugs -e'say (2&8) == ...'

[22:13] <Juerd> Just like perl -e

[22:13] <TimToady> someone remind me why pugs always recompiles Syck?  it does it when you do a make install as root, which then breaks your build as non-root.

[22:17] *** hlen_ joined
[22:18] <TimToady> audreyt: see above

[22:19] *** hlen_ is now known as hlen

[22:20] *** nnunley_ joined
[22:25] <lichtkind> * % / ** impose num context too?

[22:27] *** xX[ReP]Xx left
[22:32] <TimToady> Let's say the standard definitions are biased towards num interpretation.  You could define any * % / ** MMD method you like and give it your own semantics, but stock Perl will treat Str as Num there.

[22:32] <TimToady> whether that's by coercion or by just defining Str MMDs with num semantics, I don't know.l

[22:33] <TimToady> coercion is just a way of autogenerating missing methods, is one way to look at it.

[22:36] <LeTo> why coercion, when MMD exists?

[22:37] <dduncan> TimToady, regarding that relation stuff, I will try to be brief and concise today ...

[22:37] <dduncan> first of all, I draw a clear separation between the data type I propose for perl 6 and anything to do with databases

[22:38] <dduncan> what I propose for perl 6 is just a set-like class, which is mutable like a set or array or hash data type

[22:38] <dduncan> and a few operators for it

[22:38] <dduncan> that's all

[22:38] <lichtkind> Thanks Tim (still enjoying your last talk)

[22:38] <dduncan> so TTM et al can basically be ignored

[22:39] <dduncan> I have also started to put an implementation in ext/Relation/ today

[22:39] * Juerd thinks it's funny that lichtkind calls TimToady Tim.

[22:39] <svnbot6> r9939 | lwall++ | Added * to %ENV and @ARGS that seem to be missing it (and aren't historical).

[22:39] <svnbot6> r9939 | lwall++ | Also added tests for importation of %ENV from GLOBAL.

[22:39] <dduncan> which should be done over the next few days

[22:40] <Juerd> LeTo: Because otherwise you have to define a method for each existing type?

[22:40] <dduncan> emphasizing that clear separation, I see that this Relation proposal is completely separate from my Rosetta project, so none of the Rosetta/TTM stuff needs to be read into it

[22:40] <Juerd> Nevermind. There is of course a single catchall type.

[22:40] <LeTo> MMD on 'Any' can still DTRT

[22:40] <dduncan> just instead think of Relation as ext/Set plus more, or something

[22:49] *** larsen joined
[22:53] <dduncan> question ... is anyone else finding that the make-test for Pugs modules is reaaaaalllllllyyyyyy sllllooooowwww?

[22:53] <dduncan> eg, running 'make test' for just ext/Test/ ...

[22:53] <dduncan> takes several minutes to run

[22:53] <dduncan> can this be affected by heap size?

[22:54] <dduncan> or does a larger heap just prevent crashing?

[22:54] <dduncan> the figures I see today specifically are: Files=3, Tests=83, 219 wallclock secs (210.59 cusr +  4.88 csys = 215.47 CPU)

[22:55] <dduncan> whareas, back around when 6.2.11 was new, that completed in just a few seconds

[22:56] <dduncan> (you can test individual modules after 'make' completes on the main pugs by first cd-ing to the ext module dir, like into ext/Test/ and running 'make test')

[22:57] <dduncan> note that launching Pugs directly only takes about 3 seconds to load the prelude, and normal statements seem to run right away

[22:57] <dduncan> so the prelude is pre-compiled

[22:59] <dduncan> this is all standard Haskell runcore, what is used by default

[23:02] *** fglock joined
[23:02] <dduncan> note that the speed problem here has been occurring for weeks, and I suspect it isn't happening to others as then it would have been fixed

[23:02] <dduncan> will try another clean build ...

[23:05] *** Limbic_Region joined
[23:08] <dduncan> maybe explicitly specify a larger heap too ...

[23:12] <svnbot6> r9940 | fglock++ | PCR - small fixes

[23:12] <svnbot6> r9941 | fglock++ | PG-P6 - 03-statement-control.t passes all tests

[23:14] *** nothingmuch joined
[23:16] *** stclare joined
[23:33] <svnbot6> r9945 | fglock++ | PG-P6 - removed List.pm

[23:36] *** kolibrie joined
[23:39] <fglock> pmurias++ - emitter for Pugs-Grammar

[23:41] <fglock> audreyt: Pugs::Grammar main engine looks ready - I'll start adding stuff to try to parse Pugs tests

[23:42] <fglock> later &

[23:42] *** fglock left
