[00:00] *** jisom joined
[01:21] <theorbtwo> ruoso: Interesting...

[01:33] <nothingmuch> ingy: stevan found us an apartment: http://newyork.craigslist.org/mnh/roo/144956640.html

[01:34] <obra> nothingmuch: you're moving to .us?

[01:34] <nothingmuch> obra: yes

[01:35] <obra> cool

[01:42] *** zhobson joined
[01:58] *** amnesiac joined
[02:19] *** avar joined
[02:22] * ruoso is surprised that beer is mentioned so many times in his presentation

[02:23] <theorbtwo> ruoso: Interesting indeed.  Um, you mean perlmonks, right?

[02:23] <ruoso> theorbtwo, yeah

[02:23] <theorbtwo> Where is this presentation?

[02:24] <ruoso> FLISOL

[02:24] <ruoso> latin-american free software installation festival

[02:24] <ruoso> this event takes place in more than 100 cities at the same day

[02:25] <theorbtwo> I'm afraid I won't be able to attend, then.  It'll be broadcast on the internet somehow?  I'm very interested in what you have to say about us.

[02:26] <ruoso> here in fortaleza, northeast of brazil, we also present talks...

[02:26] <ruoso> theorbtwo, sorry... no broadcast... and the slides are mainly pictures from yapc::brasil::2005

[02:26] <theorbtwo> Oh.

[02:28] <ruoso> the subject of the talk is "The Monastery - or - why a isolated programmer is a dumb programmer..."

[02:28] <theorbtwo> Heh.

[02:28] <theorbtwo> Sounds interesting.

[02:29] <nothingmuch> hmmm... late

[02:29] <nothingmuch> sleepy time

[02:29] <theorbtwo> G'night, nm.

[02:30] * ruoso needs to sleep too... the event starts in the next 8 hours... 

[02:31] <ruoso> bye

[02:32] <theorbtwo> Bye!

[02:32] <theorbtwo> You should maybe post your nodes as a PMDiscuss?

[02:46] *** amnesiac joined
[03:00] *** flounder99 joined
[03:07] <flounder99> who *

[03:46] <meppl> gute nacht

[04:01] *** elmex_ joined
[04:19] *** amnesiac joined
[04:23] *** dmitri joined
[04:27] *** dmitri left
[04:29] *** coignard joined
[05:26] *** scw joined
[05:37] <wolverian> http://www.bbspot.com/News/2002/11/fired.html ... :)

[05:48] *** coignard joined
[05:48] <coignard> how long does src/Pugs/Parser.hs take to compile?

[05:49] <coignard> it's been like 20 minutes now, I swear

[06:07] *** amnesiac joined
[06:17] *** KingDiamond joined
[06:56] *** iblechbot joined
[08:38] *** ghenry joined
[08:53] <gabor529> chown is mentioned in S29 but I could not find chmod anywhere, neither of them seems to be implemented in Pugs

[08:53] <gabor529> are they going to be around ? will they  work the same way as in Perl5 ?

[09:06] <gaal> gabor529: feel free to propose how it should look like. it's easy to code, so feel free to commit too :)

[09:07] <gabor529> I can write tests for them...

[09:08] <gaal> adding stuff to Prim.hs is a fun way to start haskell, go on you know you want to!

[09:09] <gaal> actually, there is a chmod already in pugs.

[09:09] <gaal> line 955 in Prim.hs

[09:10] <gaal> looks like it accepts a numerical mode and a list of files

[09:10] <gaal> and returns the count of successful chmods, which is kinda weird, because it also fails if it doesn't succeed :)

[09:11] <gaal> er no sorry, actually it doesn't fail on errors, it's doBoolIO not guardIO.

[09:11] <gaal> but that should probably be changed :)

[09:13] <gabor529> I think it should return the list of files that were successfully changed

[09:16] <gaal> is that what p5 does?

[09:17] <gaal> no; p5 returns the count as well.

[09:19] <gabor529> yeah, but I don't learn much from that information alone

[09:20] <gaal> agreed. by all means propose something better on p6l :)

[09:53] <gabor529> oh and it seems the stat() function of P5 is also missing from Pugs

[10:15] *** Aankhen`` joined
[10:32] *** chris2 joined
[11:03] *** larsen joined
[11:03] <svnbot6> r9735 | szabgab++ | tests for chmod,

[11:03] <svnbot6> r9735 | szabgab++ | some of them fail

[11:09] <svnbot6> r9736 | szabgab++ | more entries in docs/quickref

[11:18] *** gabor529_ joined
[11:45] *** nothingmuch joined
[11:46] <nothingmuch> question: how do you call that wire mesh thing you bake on?

[12:03] <gabor529_> nothingmuch: mangel ?

[12:04] <gabor529_> I wonder if <a b c>.say should print a newline after each element

[12:07] <Gothmog_> I would think that <a b c>.say is more like say <a b c> than say for <a b c>?

[12:09] <nothingmuch> gabor529_: reshet afiya

[12:09] * nothingmuch agrees with Gothmog_ 

[12:10] *** zor joined
[12:10] <nothingmuch> otoh <a b c>».say is like say for <a b c>

[12:28] *** elmex joined
[12:43] <gabor529_> I would like to write ./pugs -e '"t/numbers.txt".slurp.uniq.say'

[12:43] <gabor529_> but now I need to write ./pugs -e '"t/numbers.txt".slurp.uniq.map:{"$_\n"}.say'

[12:43] <gabor529_> better yet I would like to write ./pugs -e '"t/numbers.txt".slurp.uniq.map:{"$_\n"}.say("out.txt")'

[12:44] <gabor529_> I mean without the map ./pugs -e '"t/numbers.txt".slurp.uniq.say("out.txt")'

[12:45] <Gothmog_> You can use what nothingmuch suggested... pugs -e '"t/numbers.txt".slurp.uniq􏿽xBB.say'

[12:46] <gabor529_> ok, I missed that, what is that sign after q ?I only see some black thing

[12:47] <Gothmog_> >>

[13:09] *** cm_ joined
[13:10] *** cm_ is now known as cm

[13:12] <gabor529_> ?eval <a a b c>.uniq.say

[13:14] <gabor529_> evalbot seem to be down anyway

[13:14] <gabor529_> <a a b c>.uniq>>.say

[13:14] <gabor529_> unexpected ">"

[13:15] <gabor529_> and if I use a real >> then I get unexpected "\187"

[13:18] <Gothmog_> Probably the hyper operators are only partly implemented...

[13:26] *** Toaster joined
[13:34] *** turrepurre joined
[13:35] *** nothingmuch joined
[13:55] <svnbot6> r9737 | fglock++ | pX/PCR/opp - added ternary op; emits p6 or p5 code

[13:59] *** Southen joined
[14:04] *** r0nny joined
[14:17] <miyagawa> audreyt: ping

[14:28] *** Limbic_Region joined
[14:29] *** lightstep joined
[14:30] *** Toaster joined
[14:39] *** flounder99 joined
[14:42] *** flounder99 left
[14:50] *** pdcawley_ joined
[14:56] <TimToady> gabor529_: eventually <a a b c>.uniq.each: { .say } should work too.

[15:00] <avar> will <a b a c>.uniq.each: { .say } give the same output?

[15:00] <avar> or does the list need to be sorted like uniq(1) requires

[15:05] <TimToady> that would depend on the implementatoin of .uniq which has never been specified, since Perl 5 doesn't have it.

[15:06] <TimToady> I imagine the thinking with uniq(1) is that there might be some reason to want to collapse multiple runs for non-sorted data.

[15:06] <TimToady> Of course, these days anyone would use sort -u for that....

[15:06] <TimToady> (I mean, for the .sort.uniq case)

[15:07] <TimToady> gah, no coffee yet...

[15:08] <gabor529_> I am not picking on uniq here, I am just trying to figure out how to replace the unix pipeline in a fashionable way within Perl6

[15:10] <miyagawa> TimToady: ohayo!

[15:11] <TimToady> miyagawa: sochira mo!

[15:11] <miyagawa> TimToady: I assume your flight is a few hours away. Have a safe flight! (Yoi Tabi wo!)

[15:12] <TimToady> そうしたい、よ！

[15:12] <TimToady> I sent my preliminary slides to Kondo-san.

[15:13] <miyagawa> TimToady: appreciated.

[15:13] <miyagawa> (sorry, my irc terminal doesn't grok UTF-8 ...)

[15:13] <TimToady> 'sou shitai, yo!' to katta.

[15:14] <miyagawa> wakari masita :)

[15:14] <TimToady> *kaita

[15:14] <TimToady> *kakimashita

[15:14] <TimToady> *okaki shimashita

[15:16] * Limbic_Region hands TimToady some virtual coffee

[15:16] <TimToady> LR: thnx

[15:16] <avar> TimToady: I guess you could make arguments for <a b a c>.uniq => qw(a b c) or qw(a b a c) both ways

[15:16] * avar wonders when the other would be useful

[15:17] <miyagawa> TimToady: Considerign your Japanese skills, this Marty's talk http://tokyo.yapcasia.org/sessions/_kongougo.html looks very interesting.

[15:18] <TimToady> zannen desu ga, nihongo de wakari-nikui.  nihongo de, atama ga taihen osoku...

[15:18] <TimToady> *osoi

[15:21] <TimToady> jitsu wa, eigo de sono hanashi wo kikimashita.

[15:22] <miyagawa> naruhodo!

[15:22] <miyagawa> was it interesting?

[15:22] <TimToady> hai

[15:22] <gabor529_> are we going to have a slurp that does *not* chomp the newline or a "say" that adds a newline to every element in list context ?

[15:23] <gabor529_> the latter can be solved with a map in front but it looks less natural

[15:23] <TimToady> slurp should not autochomp.

[15:23] <nothingmuch> hat if it's chuck norris slurping?

[15:24] <gabor529_> TimToady: not even in list context ?

[15:25] <TimToady> slurp never splits, even in list context.  The whole point of slurp is to return the entire file as one string.

[15:25] <nothingmuch> list context is the =<> fish operator

[15:25] <nothingmuch> it's readline

[15:25] <nothingmuch> and it's lazy

[15:25] <nothingmuch> so it accomodates both slurping and loop-reading

[15:25] <nothingmuch> and it autochomps based on the handle's options, right?

[15:26] <gabor529_> then "t/numbers.txt".slurp.say  should be cat, but it is not for me

[15:26] <TimToady> Actually, it should add a newline.  You want .print for that.

[15:26] <gabor529_> it eliminates the newlines from between the lines

[15:27] <nothingmuch> gabor529_: then it's a bg

[15:27] <nothingmuch> bug

[15:27] <gabor529_> then "t/numbers.txt".slurp.print gives the same

[15:27] <nothingmuch> gabor529_: add tests please =)

[15:27] <gabor529_> nothingmuch: sure

[15:29] <TimToady> my attention will be spotty now--have to go pack for Japan...

[15:36] *** Khisanth joined
[15:43] <gabor529_> If I am not mistaken my chomp should work in list context on each element like in perl5 ? @a = chomp ("abc\n", "bcd\n");

[15:44] <gabor529_> @a is ("abc\n", "bcd") in my Pugs

[15:45] *** gabor529_ is now known as gabor529

[15:47] *** jisom joined
[15:49] <avar> it still works in place (in p5)

[16:20] *** viewer joined
[16:31] *** mc__ joined
[16:32] <mc__> is perl6 ready for serious development on it?

[16:32] <merlyn> development to finish perl6, yes. :)

[16:32] <merlyn> using perl6 for production, not quite.

[16:32] <merlyn> it'll be ready "by christmas"

[16:33] <mc__> merlyn: this year christmas?

[16:33] <merlyn> that's not quite clear

[16:33] <mc__> merlyn: ok thanks

[16:53] <svnbot6> r9738 | szabgab++ | test chomp in list context

[16:53] <svnbot6> r9738 | szabgab++ | it seems to join its paramaters into one string

[16:54] *** ajs_home joined
[16:55] *** amnesiac joined
[17:06] *** nothingmuch joined
[17:20] *** DesreveR joined
[17:26] *** jisom joined
[17:28] <coignard> hmm

[17:30] *** rindolf joined
[17:30] <rindolf> Hi all!

[17:30] <rindolf> How do I generate the HTML output for the test?

[17:30] <rindolf> How do I generate the HTML output for the *tests*?

[17:30] <jisom> make smoke?

[17:33] <svnbot6> r9739 | szabgab++ | some more string related tests

[17:35] *** mj41_ joined
[17:54] <nothingmuch> http://www.instructables.com/ex/i/961CB1300D351029BC4A001143E7E506/

[17:55] <rindolf> jisom: thanks

[18:03] *** justatheory joined
[18:09] *** FurnaceBoy joined
[18:15] *** tri joined
[18:29] *** jisom joined
[18:53] <rindolf> Damn - it takes a long time to run make smoke.

[19:01] <nothingmuch> well, the pugs test suite is huge

[19:09] <rindolf> nothingmuch: yeah

[19:09] <rindolf> That and pugs is slow.

[19:09] <coignard> heh.

[19:09] <gaal> commits welcome

[19:09] <coignard> I am running it on 400mhz cpu

[19:10] <coignard> gaal: I soon as as make ends of it, just downloaded pugs last night

[19:10] <coignard> :)

[19:11] *** b_jonas joined
[19:20] *** KingDiamond joined
[20:00] <rindolf> It finished.

[20:05] *** bernhard joined
[20:09] *** rashakil joined
[20:09] *** SamB joined
[20:35] *** premshree_ joined
[20:57] *** swarm joined
[21:14] *** ayrnieu joined
[21:17] *** ruz joined
[21:17] <spinclad> nm: 'wire mesh thingy': we call it a rack here (oven rack) (top rack, middle rack, bottom)

[21:20] <spinclad> we cooked some pizza here last night in 8x8" (20 x 20 cm) pans (too small) -- the first one didn't cook the dough through, the second we left in a long time and was crunchy but good.

[21:23] *** KingDiamond joined
[21:25] *** Kattana joined
[21:29] *** frobnitz joined
[21:34] *** kanru joined
[21:37] *** turrepurre joined
[21:45] <Toaster> pizza should always be cooked on a solid preheated tray, smeared with flour and oliveoil

[21:45] <Toaster> otherwise the base doesn't crisp

[21:45] <Toaster> (at the highest shelf of the oven)

[21:52] <PerlJam> Toaster: pizza should always be cooked on a pizza stone.

[21:55] *** iblechbot joined
[21:58] *** ColARes joined
[22:05] <nothingmuch> lowest place in the oven emulates a pizza stone

[22:06] <nothingmuch> that's my rationale anyway

[22:06] <nothingmuch> and it works for me =)

[22:07] <PerlJam> nothingmuch: no, a pizza stone is porous.  Your typical cookie sheet or pan or whatever isn't.

[22:07] <PerlJam> (but if it works for you, then it works for you. :-)

[22:08] <nothingmuch> the cookie sheet is very temporary

[22:09] <nothingmuch> it stays there only so that it doesn't stick to the rack

[22:09] <nothingmuch> otherwise the dough is cooked to deeply

[22:09] <nothingmuch> err, baked

[22:10] <PerlJam> nothingmuch: oh, that's excellent too.  Cook it just enough for the dough to support itself, then remove the cookie sheet.

[22:10] * PerlJam always just uses a stone though :)

[22:10] <nothingmuch> i don't have a stone

[22:10] <nothingmuch> please post a comment in step 6

[22:10] <nothingmuch> on how to use one

[22:14] <PerlJam> Really it should be in step 5 I think.  You need to get the stone hot with the oven.

[22:14] <nothingmuch> PerlJam: also, i slightly rephrased step 6 to make it clearer what the sheet's purpose is

[22:14] <nothingmuch> okay

[22:14] <nothingmuch> from a chronological POV that makes sense

[22:14] <nothingmuch> however from a versioning point of view i still think it relates more to baking

[22:15] <PerlJam> Once the stone is hot, you just put the pizza on it an let it cook  :)

[22:15] <nothingmuch> aye

[22:15] <PerlJam> some people (my wife) put corn meal to prevent sticking, but really I think that's just left-over knowledge that doesn't apply to the stone (I've yet to have *anything* stick on the stone)

[22:16] <nothingmuch> glue?

[22:17] <PerlJam> Though If you've spilled some cheese on the stone before and didn't clean it well, it may leave a slick (non-porous) spot that I would imagine could cause food to stick.

[22:18] <nothingmuch> hmm

[22:18] <nothingmuch> how pourus is it? like teapot clay? lava rock?

[22:19] <PerlJam> Um I don't know what "teapot clay" is like (my teapots are all either ceramic or metal) but it's definitely *not* like lava rock  :)

[22:20] <PerlJam> It's porous enough that if you drop some water on it, it will seep through rather quickly.

[22:21] <PerlJam> I guess it's kind of like unglazed tile

[22:22] <PerlJam> or perhaps dry but unfired clay brick.

[22:22] <nothingmuch> hm

[22:22] <PerlJam> er, scratch that last one, it's not like unfired clay

[22:24] <nothingmuch> PerlJam: so, are you posting? ;-)

[22:25] <PerlJam> too distracted at the moment.

[22:25] <nothingmuch> okies =)

[22:25] <nothingmuch> i'll make a script that uses WWW::Mechanize to mail you every hour that you didn't

[22:31] <svnbot6> r9740 | fglock++ | pX/PCR - /(.)*/ returns an array in @$0; t/06-subrule.t pass all tests

[22:56] <Toaster> hm, hadn't thought of a pizza stone, not owning one

[22:57] <Toaster> but with the materials available, a big slab of solid hot metal's worked well for me

[22:58] <Toaster> . o O ( next on #perl6, get to know and love your ramen)

[22:58] <nothingmuch> i gave up on that a while ago... too hard to clean, and since I learned about the sheet/rack trick i've been getting good results anyway

[22:58] <nothingmuch> ramen?

[22:59] <nothingmuch> maybe are pans are too thin

[22:59] <Toaster> noodahls

[22:59] <nothingmuch> i think they're cold again by the time i finish putting the pizza on them and back in the oven

[22:59] <nothingmuch> also, they're not really metal

[22:59] <Toaster> (pizza + ramen + jolt being the most stereotypical hacker food group i can think of)

[22:59] <nothingmuch> they're covered by enamel

[22:59] <nothingmuch> not this type of pizza =)

[23:00] <nothingmuch> see also VICTUALS in pugs root ;-)

[23:00] * Toaster has :)

[23:00] <Toaster> guess this pizzalore should be added to it

[23:02] <nothingmuch> "commits welcome"

[23:05] *** hlen joined
[23:26] *** coignard joined
[23:30] *** meppl joined
[23:39] *** meppl joined
