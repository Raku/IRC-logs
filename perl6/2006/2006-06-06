[00:03] <TimToady> as far as can tell, it basically means "addict lordling"

[00:04] <TimToady> 君子 by itself means a person of quality

[00:07] <TimToady> but note even in English how modifiers tend to negate druglord and slumlord

[00:08] <obra> "He's an excellent slumlord"

[00:20] <mugwump> yeah, interesting that it uses the child character there

[00:21] <mugwump> perhaps "master of addiction" would be a good retranslation :)

[00:23] <mugwump> but still doesn't capture that addiction is a lower order state.  hmm

[00:26] <TimToady> I thought "lordling" captured the youthfulness of it rather nicely.

[00:31] *** pfenwick joined
[00:47] *** hikozaemon joined
[00:57] <svnbot6> r10575 | audreyt++ | * recursive_definition.t: Mark as TODO, pending switch to OpTable

[00:59] <mugwump> lordling's not a real word, it's not even in Webster :)

[01:04] <szbalint> I beg to differ (if you were serious, not sarcastic). http://www.thefreedictionary.com/lordling

[01:05] <mugwump> yeah, see, it's only in  Houghton Mifflin

[01:07] <mugwump> how can you respect a dictionary that has words like "hummer" in it?  :)

[01:08] <mugwump> er,

[01:08] * mugwump frantically tries to find a better example of US dialect to poke fun at

[01:09] <TimToady> google finds "lordling" in both American Heritage and Merriam-Webster.

[01:10] <mugwump> weird.  time to throw away dictionary.com I guess

[01:12] <audreyt> er, dictionary.com has it too.

[01:12] <audreyt> http://dictionary.reference.com/search?q=lordling

[01:12] <audreyt> "A lord regarded as immature or insignificant."

[01:13] <mugwump> yes but it's american heritage... sorry I guess jokes based on etymological snobbery may be lost on some audiences :)

[01:14] <TimToady> As I recall, I learned the word from a certain Tolkien...

[01:14] <szbalint> I've been using http://szotar.sztaki.hu/webster/ for a while now...

[01:14] <mugwump> it's in Tolkien but not in Oxford?  bizarre

[01:16] <szbalint>  'Worm! Worm!' Saruman called; and out of a nearby hut came Wormtongue, crawling, almost like a dog. To the road again, Worm!' said Saruman. 'These fine fellows and lordlings are turning us adrift again. Come along!'

[01:17] <TimToady> It's mentioned as an example under -ling, I think.

[01:20] * mugwump will refer to smokers and drug addicts as "addiction lordling" from now on

[01:24] * TimToady has a hard enough time remembering 唐 without trying to remember 癮 as well.

[01:27] <mugwump> there's a lot of radicals in that one huh

[01:27] <mugwump> er, strokes

[01:27] <SamB> TimToady: maybe nobody thought it was the sort of word you needed to list in the dictionary in Oxford, because they all know how to use the formation rules ;-)

[01:31] <mugwump> there's a subtle difference I think, but largely between my personal definition of -ling and the actual definition

[01:33] *** weinig joined
[01:41] <TimToady> well, it's still less than half the strokes of 龘

[01:44] <TimToady> As for radicals, that depends on how you count (and define) radicals.  I can count it anywhere from 2 to 7 radicals.

[01:44] <mugwump> ah, I had the thought for a moment that only one could be called the radical

[01:44] <mugwump> ie, the one you look it up with

[01:45] <TimToady> that's one definition of radical

[01:46] *** sri__ joined
[01:46] <TimToady> but leaving out the "the one you look it up by" part, if you just count official radicals, there are 6

[01:47] <TimToady> I can only get it up to 7 by separating out "illness" into "ice" and "bigroof", which is kind of cheating.

[01:48] <TimToady> on the other hand, "Heart" obviously contains a "hook" radical, but it's not clear what you'd call the other three ticks...

[01:48] <audreyt> curious that wiktionary claims that the "excellent" meaning of "rad" comes from abbrev. of "radical"

[01:51] <TimToady> This is a strange channel, where English speakers discuss Chinese while Chinese speakers discuss English.  :)

[01:51] <SamB> audreyt: what is so curious about that?

[01:51] <SamB> lots of people believe it, whether or not it is true!

[01:52] <TimToady> Hmm, well, I think it's surfer talk, and there are a lot of surfers around here who think it came from "radical".

[01:53] <QtPlatypus> What is the alternative idea of its source?

[01:54] <audreyt> there is no alternative idea, it's just the connection never occured to me

[01:55] * QtPlatypus nods

[01:55] <audreyt> (and indeed its etymology is listed as surfer talk)

[01:56] * QtPlatypus doesn't think that "rad" meaning excelent comes from the unit of radation dose.

[01:56] <mugwump> radical means, like, far out, man

[01:57] <audreyt> http://developer.mozilla.org/es4/ is very rad.

[01:58] <TimToady> these surfers are from northern California, where radicals are just considered progressive progressives

[01:59] <TimToady> and ordinary democrats are suspected of being too conservative.

[01:59] *** weinig is now known as weinig|sleep

[02:11] <SamB> the idea that it might not be short for radical had not occurred to me ;-)

[02:12] <audreyt> leo: are you looking at the weird parrot bug coming from array_cap.t?

[02:12] <audreyt> leo: it says something about unicode and ascii and encoding but it looks bogus

[02:16] * SamB laments that some people think that wordplay, like that of shakespeare, is a thing of the past -- or do I laugh at them? they obviously don't know my family too well...

[02:31] <svnbot6> r10576 | audreyt++ | * array_cap.t: Mark the segfaulting-on-linux-when-run-in-batch-mode

[02:31] <svnbot6> r10576 | audreyt++ |   second test -- full recovery from embedded PGE failures is not

[02:31] <svnbot6> r10576 | audreyt++ |   exactly obvious to do

[02:44] *** trym_ is now known as trym

[03:19] *** mdiep joined
[03:19] <mdiep> is there a document on Perl6 POD somewhere? I'm having trouble even finding discussions in the list archives, though I know I've seen them

[03:21] <mdiep> oh, I found the thread. goodie.

[03:23] <mdiep> looks highly speculative though

[03:24] *** Tman joined
[03:25] <Tman> where's an overview of the changes in regex syntax for perl6?

[03:26] <mdiep> http://svn.perl.org/viewcvs/perl6/doc/trunk/design/syn/S05.pod

[03:26] <audreyt> mdiep: http://svn.openfoundry.org/pugs/docs/Perl6/Spec/Documentation.pod

[03:26] <Tman> thanks

[03:34] <obra> hiya audreyt

[03:38] <audreyt> hi obra

[03:38] <audreyt> congrats re http://bestpractical.com/news/svk.html

[03:39] <audreyt> nice to see Pugs's deveopment-tool-of-choice becoming more supported :D

[03:40] <obra> Thanks :)

[03:40] <obra> We're very excited

[03:41] <obra> hey. are you up for some jifty tutorial SEEing this week?

[03:41] <audreyt> friday possibly

[03:41] <audreyt> or sat

[03:41] <obra> ok. my friday is pretty bad

[03:41] <obra> but that's mostly your saturday morning ;)

[03:42] *** cmarcelo joined
[03:43] <audreyt> hey cmarcelo. BitSet2 looks sane

[03:43] <audreyt> though this line

[03:43] <audreyt> class Enum a => HashIO a where

[03:43] <audreyt> is probably wrong

[03:43] <audreyt> that makes HashIO a subclass of Enum

[03:43] <audreyt> we want the other way around

[03:43] <audreyt> i.e. generate instances of HashIO for Enum types

[03:44] <audreyt> instance Enum a => HashIO a where ...

[03:44] <audreyt> but you should be free to instance HashIO for non-Enum types

[03:44] <audreyt> for example, "IORef Int" is perfectly HashIOable

[03:44] <audreyt> but not an enum

[03:44] <audreyt> makes sense?

[03:45] <cmarcelo> audreyt: i know.. i was asking about it in #haskell, as far as I understood, the best scenario (having "class HashIO" and providing default impl for Enum) isnt possible..

[03:45] <audreyt> why? all you need is overlapping/incoherent instances

[03:47] <cmarcelo> well, GHC becames in doubt when there are two options to choose... i even suggested if there were some way to choose a more specific, but defining most specific in type classes maybe very hard for some cases...

[03:52] <audreyt> cmarcelo: not so

[03:52] <audreyt> fixed; see my commit

[03:53] <cmarcelo> ?? .. svn up'ing..

[03:53] <lambdabot> Maybe you meant: . v

[03:55] <svnbot6> r10577 | audreyt++ | * make Enum a subclass, not superclass, of HashIO

[04:02] <audreyt> actually, undecidable instance is the only thing needed

[04:02] <audreyt> overlapping/incoherent is not neccessary

[04:03] <gaal> good moose, all

[04:04] <audreyt> hey gaal

[04:04] <gaal> hi audreyt :)

[04:04] <cmarcelo> audreyt: err.. sorry =(... my mistake.. I even pasted (in #haskell) this solution yesterday but probably it get an error from other mistake made in the code... =P

[04:04] <gaal> so what's this HashIO thing? fast what?

[04:04] <audreyt> I need to run for a bit. bbiab :)

[04:05] <audreyt> gaal: fast mutable collections

[04:05] <gaal> oh! I thought judy was givign that

[04:05] <audreyt> cmarcelo will explain it to you :)

[04:06] <cmarcelo> gaal: we are doing fast mutable collections using Judy as backend... but the "fast" part still need to be tested =o)

[04:06] <gaal> :)

[04:07] <cmarcelo> audreyt: are you coming back "today"?

[04:07] <cmarcelo> gaal: are you same gaal friend of evan.livejournal ?

[04:08] <gaal> yup :)

[04:09] *** kanru joined
[04:11] <gaal> so where do I read up on HashIO?

[04:21] <cmarcelo> gaal: the code is in pugs tree: third-party/HsJudy. I'm still learning Haskell so some parts of code will "sound stange" =P... We are using this class to restrict which types may be used to Index a BitSet (map values to bits.. "equivalent" to a Set).. BitSet is backended by Judy1 (one of Judy datatypes).

[04:25] <cmarcelo> gaal: and this is my project for summer of code for Haskell.org..

[04:26] <gaal> ooh, cool

[04:30] <gaal> audreyt: instead of the compensate-for-ext/ heuristic in yaml_harness (r10554), maybe we should prefer shuffle? it's a little less convenient perhaps because tests aren't run in order, but should be fairer, and doesn't need to have the ratio tweaked from time to time.

[04:44] *** SamB joined
[04:49] *** tcliou joined
[04:54] *** tcliou joined
[05:21] <spinclad> cmarcelo: pong

[05:24] <cmarcelo> spinclad: hello.

[05:24] <spinclad> hi, cmarcelo

[05:24] <cmarcelo> spinclad: did you take a look in my test using HSIter?

[05:25] <cmarcelo> test/CheckDupLines2.c

[05:25] <spinclad> having some trouble compiling it, i may have interference from the installed libjudy

[05:29] <cmarcelo> hmm. here I installed your libjudy and it compiles fine.

[05:30] <spinclad> i installed debian's libjudy, which of course doesn't have HSIter.  dunno if that's what i'm seeing though.  will purge that package and try again...

[05:53] <cmarcelo> spinclad: need help?

[06:02] <spinclad> not now i think, will shout if i do

[06:04] <cmarcelo> ok

[06:08] <cmarcelo> svn help: i have files A and B, want to remove A and change B's name to A, keeping B history... it's ok to remove A and rename B to A in the same commit?

[06:11] *** kanru2 joined
[06:50] <svnbot6> r10578 | cmarcelo++ | * HsJudy: some details in BitSet2 implementation. Freeze stuff. More tests.

[07:03] <svnbot6> r10579 | cmarcelo++ | * HsJudy: removing old BitSet.

[07:09] <svnbot6> r10580 | cmarcelo++ | * HsJudy: new BitSet code.

[07:23] *** SSelva joined
[07:24] *** SSelva left
[07:45] *** Aankhen`` joined
[08:15] <cmarcelo> audreyt: BitSet seems to be ok, even imported some Freeze code from old BitSet.. I was "fighting" with cabal, so will be easier to set a Pugs branch in my machine to hack Pugs.Prim using BS.

[08:19] <cmarcelo> spinclad: any progress?

[08:22] * cmarcelo fades away... &

[08:37] *** iblechbot joined
[08:53] *** cognominal joined
[08:53] *** lisppaste3 joined
[09:08] *** mj41_ joined
[09:18] *** lichtkind joined
[09:21] *** lichtkind joined
[09:24] *** tifo joined
[10:05] *** rashakil_ joined
[10:06] *** elmex joined
[10:18] *** marmic joined
[10:20] *** tifo joined
[10:26] *** pfenwick left
[10:49] *** iblechbot joined
[11:07] *** kanru joined
[11:08] *** reZo joined
[11:10] <spinclad> cmarcelo: some progress, gdb showed me my first bug (duh); now recompiling libJudy with more debug info, to hope to see through my horrid macro expansions.

[11:16] <svnbot6> r10581 | spinclad++ | - JudyHSIter: first bug found (d'oh), more to come...

[11:17] <spinclad> more after a sleep(3) cycle... &

[11:34] *** elmex joined
[11:42] *** kanru joined
[11:42] *** iblechbot joined
[11:43] *** Odin- joined
[11:44] *** elmex joined
[11:52] *** phpError joined
[11:56] * Bleadof grins

[12:00] *** jsiracusa joined
[12:02] *** hcchien joined
[12:03] *** wilx joined
[12:25] *** reZo joined
[12:35] *** weinig|sleep is now known as weinig

[12:41] *** kane-xs joined
[12:44] *** DanielSC joined
[12:46] *** Limbic_Region joined
[12:46] *** weinig joined
[12:55] *** phpError joined
[13:03] *** coumbes joined
[13:10] *** reZo joined
[13:26] *** weinig is now known as weinig|work

[13:28] *** phpError joined
[13:39] *** hexmode joined
[13:39] *** nothingmuch joined
[13:52] *** reZo joined
[14:01] *** vel joined
[14:11] *** phpError joined
[14:27] *** reZo joined
[14:38] <svnbot6> r10582 | audreyt++ | * recursive_definition.t: fix test count.

[14:55] <scw> audreyt: where do you think I should put Parsec.pm in? Pugs-Compiler-Rule/lib/Pugs/Emitter/Rule or create another Pugs-(something like that) directory?

[15:07] <audreyt> the fomrer

[15:10] <scw> okey

[15:35] *** bjoern_ is now known as sense_crafter

[15:36] *** mako132 joined
[15:39] *** pjmm joined
[15:46] *** pjmm left
[16:06] *** ludan joined
[16:06] <ludan> ciao

[16:10] *** rindolf joined
[16:11] *** justatheory joined
[16:15] *** rafl joined
[16:25] *** ludan joined
[16:25] <ludan> re

[16:52] *** cdpruden joined
[16:55] *** elmex_ joined
[17:07] <pasteling> "leo" at 195.3.113.167 pasted "Test results r10582 on x86/linux" (21 lines, 1.3K) at http://sial.org/pbot/17612

[17:40] *** b_jonas joined
[17:47] *** Southen joined
[17:57] *** iblechbot joined
[17:58] *** hexmode joined
[18:14] *** coumbes joined
[18:34] *** beppu joined
[18:48] *** b_jonas left
[19:00] *** Tman joined
[19:00] *** larsen joined
[19:00] <Tman> can anyone tell me how correct this is? http://peltkore.net/~tman/bouncer.txt

[19:11] <prefiks> Tman: you should s/rule/token/ in some places i think

[19:11] <Tman> I don't know the difference :p

[19:12] <prefiks> in rule spaces are significant - they are replaced by <ws> rule in token they are eaten

[19:13] <Tman> ahh

[19:13] <Tman> does <ws> match any number of whitespace (including 0)?

[19:14] <kolibrie> <?ws> matches any number of whitespace, including 0

[19:14] *** particle_ joined
[19:14] <prefiks> more or less, spaces are required between two word chars

[19:15] <prefiks>  /a<ws>b/ will not match ab

[19:15] <Tman> alright

[19:31] *** stephanepayrard_ joined
[19:35] <PerlJam> Tman: <ws> and <?ws> are the same and they both match any number of whitespace characters.  <ws> means \s+ between tokens and \s* otherwise.

[19:36] <PerlJam> <?ws> tells perl to not capture and save the whitespace that was matched in the match object.

[19:48] *** Captain_Fourier joined
[19:51] *** particle_ joined
[19:52] <Tman> PerlJam: thanks :D

[19:53] *** marcus_ joined
[19:57] *** froh-doh joined
[20:00] *** penk joined
[20:16] *** weinig|work is now known as weinig

[20:23] *** mj41_ joined
[20:31] *** mako132 joined
[20:44] <beppu> ?eval my @list = (1,2,3) >>+<< (10, 20, 30);

[20:44] *** evalbot_10568 is now known as evalbot_10582

[20:44] <evalbot_10582> [11, 22, 33]

[21:15] *** Limbic_Region joined
[21:21] *** kanru joined
[21:21] *** macli joined
[21:24] *** DaGo joined
[21:59] *** shachaf joined
[22:14] *** jsiracusa joined
[22:19] *** Ymmv joined
[22:58] *** GeJ joined
[23:07] *** mako132_ joined
[23:08] *** pdcawley joined
[23:23] *** macli left
[23:33] *** mako132_ joined
[23:50] *** enantiodrome joined
[23:54] *** weinig is now known as weinig|away

