[00:01] <TreyHarris> anyone here who has a moment to look at a few lines of MMD logic to see if it's sane?

[00:04] *** weinig is now known as weinig|bbl

[00:11] <markstos> TreyHarris: Still there? I'll look at MMD

[00:12] <markstos> You might check examples/dispatch_quiz.pl though-- it shows some cases that I think are bugs.

[00:13] <pasteling> "TreyHarris" at 216.254.17.198 pasted "markstos: have a look" (16 lines, 412B) at http://sial.org/pbot/19457

[00:13] <markstos> will do. give me 5.

[00:13] <TreyHarris> thx

[00:15] *** buetow joined
[00:15] <markstos> TreyHarris. I think it's sane, but pugs is buggy WRT () vs (*%h)

[00:15] <markstos> That's one of the cases in the dispatch_quiz.pl

[00:16] <markstos> I would be more assertive about creating related tests, but the spec is not detailed about how MMD happens with optional and slurpy fields.

[00:16] <markstos> I asked p6l to clarify recently

[00:16] <markstos> and you may recall I also added some related language to mmd-draft.txt

[00:17] <markstos> To get code working, I combined the () and (*%h) cases into one method ...

[00:17] <markstos> with an  "if %h { ... }" clause.

[00:17] <TreyHarris> right.  this is for a draft i'm writing, so it doesn't have to work :-)

[00:18] <TreyHarris> yet.

[00:18] <TreyHarris> thanks much

[00:18] <markstos> Let me check the dispatch quiz result.

[00:19] <markstos> Those are actually the first a second tests in the quiz. Pugs does different things for subs and methods in that case!

[00:20] <TreyHarris> *grin*

[00:20] <markstos> The subs case looks correct, it sends (a => 'b') to (*%h).

[00:20] <markstos> the multi method case sends ( a=>'b') to (), which seems ... wrong.

[00:24] <TreyHarris> yes

[00:24] <markstos> I'll go ahead and poke around to make sure it is covered by a test.

[00:25] *** hikozaemon joined
[00:26] <markstos> Yes, it looks like I already made a failing test for it in t/oo/methods/multi.t

[00:26] <markstos> (And 3 other cases from the quiz!)

[00:27] *** nekokak joined
[00:40] *** frederico joined
[01:16] <nothingmuch> wow, adding roles made it even slower =)

[01:17] <TreyHarris> whoo-hooh!  push for O(Inf)!

[01:17] <nothingmuch> ;-)

[01:17] <nothingmuch> push for correctness actually

[01:17] <nothingmuch> i am explicitly not memoizing anything

[01:18] <nothingmuch> http://nothingmuch.woobling.org/MO/t/roles.t

[01:18] <TreyHarris> O(Inf) is just, after all, O(c), which is equivalent to O(1)....

[01:18] <nothingmuch> heh

[01:18] <nothingmuch> porting this 1:1 to haskell should speed it up a bit

[01:19] <nothingmuch> i also want to wirte Moose::Aspect::Memoize

[01:19] <nothingmuch> which implicitly declares attrs over methods

[01:19] <nothingmuch> and does auto caching

[01:19] <nothingmuch> with lazy => 1

[01:19] <nothingmuch> and auto expires caches using triggers

[01:19] <nothingmuch> which should bring this impl closer to the haskell version in terms of O(n) complexity

[01:27] *** ayrnieu left
[01:29] <nothingmuch> audreyt: when you backlog: http://nothingmuch.woobling.org/MO/t/roles.t

[01:43] *** syntaxfree joined
[02:12] <markstos> ?eval class Foo { has $.a; method a { delete $.a } } Foo.new.a;

[02:12] *** evalbot_13026 is now known as evalbot_13028

[02:12] <evalbot_13028> ()

[02:12] <markstos> Shouldn't it throw an error to try to delete something that's not a hash or array element ?

[02:12] * markstos checks the spec

[02:16] <markstos> I don't see this behavior spec'ed. I'll review the tests, and test for the kind of msg Perl 5 would throw:

[02:16] <markstos> delete argument is not a HASH or ARRAY element or slice

[02:19] *** revdiablo joined
[02:19] *** b00t joined
[02:25] <svnbot6> r13029 | markstos++ | [t/builtins/arrays_and_hashes/delete.t]

[02:25] <svnbot6> r13029 | markstos++ | New failing test for delete: mis-use of delete should return:

[02:25] <svnbot6> r13029 | markstos++ | Argument is not a Hash or Array element or slice

[02:31] <SamB> @timefor audreyt

[02:31] <lambdabot> Unknown command, try @list

[02:31] <SamB> @localtime audreyt

[02:31] <lambdabot> Local time for audreyt is Tue Sep  5 04:31:39 2006

[02:32] <markstos> @localtime markstos

[02:32] <lambdabot> Local time for markstos is Mon Sep 4 22:28:16 2006

[02:33] <markstos> That's the wrong time for Audreyt. It's reporting the time on feather, which is located in France I believe.

[02:33] <markstos> Audrey's localtime is Tues, 10:28am, I think.

[02:49] <bsb> hi markstos, I just responded to your p6l qn

[02:50] <bsb> with non-authoritative guesses :)

[02:52] *** weinig|bbl is now known as weinig

[02:52] <markstos> bsb: thanks

[02:52] *** reZo joined
[02:53] <TreyHarris> @localtime TreyHarris

[02:53] <lambdabot> Local time for TreyHarris is Mon Sep  4 19:53:36 2006

[02:55] *** Aankh|Clone joined
[02:55] *** weinig is now known as weinig|zZz

[02:55] <TreyHarris> anyone know if there's a way to tell a mac's dvd drive to spin down?  i TSTP'd the program that was using it, but it still spins....

[02:59] *** revdiablo joined
[03:18] <syntaxfree> my Mini does that sometime.

[03:19] *** Bit-Man joined
[03:39] *** markstos left
[03:44] <TreyHarris> how can I require an arbitrary file not in @*INC?

[03:45] <TreyHarris> ah, evalfile

[03:46] *** frankg joined
[03:48] *** frankg joined
[03:58] *** Khisanth joined
[04:08] *** frankg joined
[04:08] <masak> @localtime masak

[04:08] <lambdabot> Local time for masak is Tue Sep  5 06:08:26

[04:08] <masak> yep

[04:23] *** aufrank joined
[04:58] *** agentzh joined
[04:59] <agentzh> markstos: in case you don't know, there's a even shorter url for http://feather.perl6.nl, that is, http://perlcabal.org, which points to exactly the same IP.

[04:59] <lambdabot> Title: Perl6 Community Development Server

[05:00] <agentzh> (bbiab)

[05:00] *** agentzh left
[05:09] <audreyt> yeah, I registered it and used it as a, sortof ironic, sister domain to http://perlcabal.com

[05:09] <lambdabot> Title: 404 Not Found

[05:10] <audreyt> (don't be fooled by the 404 :))

[05:13] *** justatheory joined
[05:19] * araujo coding a bit on the Types Graph

[05:19] <audreyt> araujo++

[05:19] <araujo> :-)

[05:19] <araujo> hi there audreyt

[05:20] <audreyt> heya

[05:20] * audreyt at $job

[05:21] * araujo is _supposed_ to be UP within 4 hours :-)

[05:22] <audreyt> wow :)

[05:25] *** EdLin joined
[05:32] <gaal> hey

[05:37] <gaal> audreyt: I'd like to fix the use of existentialCoerce in Parser 1428 (that is, change Param.p_unpacking back to Maybe PureSig)

[05:37] <gaal> but as it is there's a type error

[05:41] <gaal> I hate it when Code.hs becomes stale. /me splines for the beziers or ghc 6.6

[05:54] <TreyHarris> erm.

[05:54] <TreyHarris> ?eval sub foo($a) { say "hi $a" }; foo("mom")

[05:55] *** evalbot_13028 is now known as evalbot_13029

[05:55] <evalbot_13029> OUTPUT[hi mom ] Bool::True

[05:55] <TreyHarris> ok, wasn't sure it was allowed to leave out the space between the subname and the sig

[05:57] <gaal> you are, but the style used thoroughly in existing code is to use the space there.

[05:58] <gaal> this makes me wonder though if the space is optional here: sub foo:($a) { ... }

[05:59] <gaal> (a Sig in a sub decl really is a Sig, dropping the colon is "just" an abbreviation)

[05:59] *** [particle] joined
[06:00] <TreyHarris> well, method self:meth can be defined for .= meth operations, but I don't think that causes any ambiguity

[06:01] * araujo off to sleep

[06:07] *** marmic joined
[06:07] <TreyHarris> is there a Perl 5 impl of sub MAIN yet?

[06:08] <gaal> I haven't heard of one

[06:28] <jdv79> MAIN?

[06:32] *** kasei joined
[06:33] <kasei> does anyone know if new ghc dists are being compiled for debian stable?

[06:42] *** traecer joined
[06:44] *** frederico joined
[06:58] <TreyHarris> gaal: how do I refer to the current type symbolically?  "my $?CLASS $x" doesn't work, nor would I expect it to...

[06:58] <gaal> jdv79: it's a mechanism for a default entry point to executables, that takes care of command line options automatically

[06:59] <gaal> TreyHarris: in signatures?

[06:59] <TreyHarris> signatures or storage defs

[06:59] <gaal> you need to already have bound a tyvar, so this:

[07:00] <gaal> :(Mammal ::T $x, ::T y)

[07:00] <gaal> will bind ::T to say Moose at call time

[07:00] <gaal> er, that's $y in there

[07:00] <gaal> I don't know how to bind a tyvar in other scopes so that your example works

[07:03] <TreyHarris> hmmm.  i should be able to write class Moose { method clone ( --> <mumble>) { ... } } without making <mumble> eq "Moose"

[07:05] <TreyHarris> I kinda think 'Self' (capital S) should work

[07:05] <TreyHarris> or maybe SELF

[07:06] <gaal> better ask the oo guys. from my unwashed viewpoint, I don't see that Moose should know how to clone arbitrary types correctly, though sure, superficially it should be able to.

[07:11] *** kanru joined
[07:14] <TreyHarris> hmm.  looks like ::?Class may be what I'm looking for

[07:19] *** iblechbot joined
[07:33] <svnbot6> r13030 | gaal++ | * fix 'make ghci' on colinux and possibly Windows. I hope this doesn't

[07:33] <svnbot6> r13030 | gaal++ |   break it elsewhere.

[07:33] <svnbot6> r13030 | gaal++ | * noticed that assert_ghc in Module::Install::Pugs litters ghc_flags

[07:33] <svnbot6> r13030 | gaal++ |   with threading options coming from perl5, so I added a crutch to

[07:33] <svnbot6> r13030 | gaal++ |   filter those out via the environment (set PUGS_NO_THREADS). I don't

[07:33] <svnbot6> r13030 | gaal++ |   know if this should be moved to config.yml, or be made to use some

[07:33] <svnbot6> r13030 | gaal++ |   heuristic to just do the right thing automatically (if there is a

[07:33] <svnbot6> r13030 | gaal++ |   right thing here: can ghci work correctly when linked against a

[07:33] <svnbot6> r13030 | gaal++ |   threaded perl5?).

[07:37] <gaal> wow! pugs in ghci shares readline buffers with its ghci! that's so cool

[07:42] <svnbot6> r13031 | gaal++ | * fix whitespace bug in Signature parsing, reported by salty-horse++:

[07:42] <svnbot6> r13031 | gaal++ |      :($x = 42 is rw)

[07:42] <svnbot6> r13031 | gaal++ |   now parses again.

[07:44] <lumi> ls

[07:45] <gaal> . ..

[07:45] <lumi> Erp. Wrong window

[07:45] <lumi> Wrong computer

[07:45] <lumi> Wrong os, even

[07:46] <gaal> Did you get the universe right?

[07:46] <lumi> Yes, it's a start, right?

[07:48] *** justatheory joined
[07:49] <gaal> what does the Param object look like in unspecified-invocant Sigs? :( : $moose)

[07:50] <gaal> is there a varname? $?SELF would be wrong

[07:55] *** neoesque joined
[08:10] *** drrho joined
[08:12] <TreyHarris> 'self'?  it's what you use when you don't specify a varname...

[08:16] <gaal> it's a callconv question, I guess. you can't do this after all: foo( self => $obj )

[08:16] <gaal> hmm, maybe you can?

[08:16] <gaal> but that means there can be no parameters called self.

[08:26] *** ruoso joined
[08:28] <ruoso> http://www.perlmonks.org/?node_id=571140

[08:28] <lambdabot> Title: Mary had a Little Camel

[08:28] <ruoso> one of the most fun posts I read in the last weeks

[08:33] <svnbot6> r13032 | trey++ | [t/oo/attributes/recursive.t]

[08:33] <svnbot6> r13032 | trey++ | Added new tests for recursive classes--

[08:33] <svnbot6> r13032 | trey++ | classes with attributes of the same type

[08:33] <svnbot6> r13032 | trey++ | as the class (or the ::?CLASS symbolic name).

[08:35] *** elmex joined
[08:39] *** kane-xs joined
[08:43] <TreyHarris> oops

[08:43] <TreyHarris> karma classes

[08:43] <TreyHarris> perlbot: karma classes

[08:43] <perlbot> Karma for classes: -2

[08:43] <TreyHarris> classes++

[08:43] <TreyHarris> perlbot: karma classes

[08:43] <perlbot> classes doesn't have any karma

[08:43] <TreyHarris> better :-)

[08:44] *** markstos joined
[08:45] * drrho is away: cinema

[09:00] *** chris2 joined
[09:13] *** traecer left
[09:36] <gaal> audreyt: I don't understand dist/build: why are some things under src/ there and some not?

[09:36] <gaal> I'm getting errors linking Pugszm6zi2zi12_PugsziEmbedziPerl5_perl5zueval_closure

[09:37] <gaal> the symbol is in dist/build/Pugs/Embed/Perl5.o

[09:37] <gaal> why not dist/build/src etc.?

[09:39] <gaal> the actual error is after 'make ghci', running 'main' in the ghci prompt:

[09:39] <gaal> <interactive>: src/Pugs/Run/Perl5_stub.o: unknown symbol `Pugszm6zi2zi12_PugsziRunziPerl5_zdfpugszueval_closure'

[09:39] <gaal> I had it working for a blissful hour :(

[09:46] *** meppl joined
[09:46] <svnbot6> r13033 | trey++ | [util/version_h.pl]

[09:46] <svnbot6> r13033 | trey++ | Script expects cwd to be base of the working

[09:46] <svnbot6> r13033 | trey++ | copy.  Made that so when using svn.  I don't

[09:46] <svnbot6> r13033 | trey++ | know how to do it with svk, so hopefully

[09:46] <svnbot6> r13033 | trey++ | someone else can come behind and fix that.

[09:46] <svnbot6> r13033 | trey++ | It's no more broken for svk than it was

[09:46] <svnbot6> r13033 | trey++ | before...

[09:46] <svnbot6> r13033 | trey++ | [util/smartlinks.pl]

[09:46] <svnbot6> r13033 | trey++ | Made file executable

[09:52] <svnbot6> r13034 | trey++ | [t/oo/attributes/class.t]

[09:52] <svnbot6> r13034 | trey++ | Tests for Class.^attr syntax;

[09:52] <svnbot6> r13034 | trey++ | better smartlinks

[09:54] *** meppl joined
[10:03] *** _meppl joined
[10:08] <svnbot6> r13035 | trey++ | [t/blocks/return.t]

[10:08] <svnbot6> r13035 | trey++ | Fixed old slurpy syntax

[10:11] *** _meppl is now known as meppl

[10:13] *** int-e joined
[10:20] <svnbot6> r13036 | trey++ | [t/blocks/return_function.t]

[10:20] <svnbot6> r13036 | trey++ | Fixed smartlink; added an actual test for

[10:20] <svnbot6> r13036 | trey++ | a line that was tried but whose value was

[10:20] <svnbot6> r13036 | trey++ | thrown away.

[10:27] *** Grrrr joined
[11:00] *** buetow joined
[11:03] *** TimToady joined
[11:26] *** iblechbot joined
[11:41] *** mako132_ joined
[11:42] *** justatheory joined
[12:07] *** iblechbot joined
[12:21] *** Limbic_Region joined
[12:21] *** hermax_ joined
[12:36] <audreyt> gaal: oy. the idea is that "make ghci" should ignore embedding

[12:37] <audreyt> and _not_ link in Perl5_stub

[12:37] <audreyt> i.e. you never get p5embed in ghci

[12:37] <audreyt> can you simply remove the _stub.o in src/?

[12:37] <audreyt> "make ghci" uses src/ to put the .o files

[12:37] <audreyt> normal "make" uses dist/build/

[12:37] <audreyt> totally separate spaces

[12:38] <audreyt> (I lost my old laptop's adaptor at $job, and new MacBook is still running ddrescue, so I'm stuck on this iBook G4 without much productivity tonight :/)

[12:38] <audreyt> hopefully ddrescue will finish on tomorrow morning

[12:39] <audreyt> markstos++ # subtle nuge at pugs.blogs.com for full MOP dispatch support

[12:39] <audreyt> nudge, even

[12:39] <audreyt> and with that... over and out for tonight :) &

[12:40] <Limbic_Region> yeah - that one liner is quite impressive when taking in context of the amount of p5 code it is replacing

[12:40] <Limbic_Region> sleep well audreyt

[12:41] <Limbic_Region> dunno if it is a good thing or not, but the binary snapshots appear to have ceased being built as of the 1st

[12:45] *** drbean joined
[12:57] <svnbot6> r13037 | agentz++ | [util/smartlinks.pl]

[12:57] <svnbot6> r13037 | agentz++ | - various English fixes from Sun Xin++ for the Pod.

[12:59] <SamB> ?eval 1

[12:59] *** evalbot_13029 is now known as evalbot_13037

[12:59] <evalbot_13037> 1

[13:03] <SamB> @tell audreyt please restart evalbot-loop, kthxbye!

[13:03] <lambdabot> Consider it noted.

[13:04] *** bpphillips joined
[13:08] *** svnbot6 joined
[13:08] *** evalbot_r13037 joined
[13:12] *** rafl joined
[13:18] *** cjeris joined
[13:20] <svnbot6> r13038 | agentz++ | [t/syntax/unicode.t]

[13:20] <svnbot6> r13038 | agentz++ | - broke too long lines

[13:20] <svnbot6> r13038 | agentz++ | - used eval_is to work around a parsefail.

[13:23] *** vel joined
[13:25] *** agentzh joined
[13:25] <agentzh> audreyt: there's a typo in S04: "When used as statement modifers".

[13:26] <agentzh> audreyt: it should have been "modifiers"

[13:29] <svnbot6> r13039 | agentz++ | [t/statements/modifiers/for.t]

[13:29] <svnbot6> r13039 | agentz++ | - adjusted the order of the tests a bit.

[13:33] <SamB> agentzh: looks like she went to bed

[13:33] <agentzh> SamB: oh, she sleeps quite early now. :)

[13:33] <svnbot6> r13040 | agentz++ | [util/smartlinks.pl]

[13:33] <svnbot6> r13040 | agentz++ | - now we would not try any further if the first match

[13:33] <svnbot6> r13040 | agentz++ |   of a certain smartlink had been found.

[13:34] <agentzh> it's just 21:32 in her timezone. :)

[13:34] <SamB> heh

[13:35] <Limbic_Region> well, I don't think she sleeps on a regular schedule

[13:35] <agentzh> hehe

[13:35] <Limbic_Region> and if she has been up for a prolonged period of time and tomorrow is a $work day - she may just be ensuring she gets some rest

[13:35] <Limbic_Region> and judging from her over and out, I don't think she has gone to sleep - just off channel so she doesn't get distracted

[13:38] <SamB> oh

[13:38] <SamB> hmm

[13:39] <SamB> she did say &

[13:39] <SamB> that does sort of imply some kind of continued activity

[13:39] <theorbtwo> People on this channel tend to always say &.

[13:44] <Limbic_Region> normally it is /me & #<verb that will take us away from the channel for an extended period of time>

[13:44] <Limbic_Region> as in /me & # sleep

[13:45] <lumi> #perl6 madlibs

[13:46] <Limbic_Region> s/libs//

[13:46] <Limbic_Region> ;-)

[13:46] *** xerox joined
[13:51] *** ofer0 joined
[13:51] <Limbic_Region> anyone else having trouble building an optimized pugs?

[13:52] <Limbic_Region> or rather - the pugs portion completes ok - it is the post build activities such as P::C::R

[13:53] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "Current Pugs build output" (147 lines, 12.4K) at http://sial.org/pbot/19463

[13:53] <svnbot6> r13041 | agentz++ | [t/TASKS]

[13:53] <svnbot6> r13041 | agentz++ | - added one task of updating legacy smartlink notations

[13:53] <svnbot6> r13041 | agentz++ |   in the test suite.

[13:53] <Limbic_Region> I have a pugs.exe but apparently it is somewhat b0rk

[13:59] <svnbot6> r13042 | agentz++ | [t/README]

[13:59] <svnbot6> r13042 | agentz++ | - mentioned the URL http://perlcabal.org/syn/ there

[13:59] <lambdabot> Title: Official Perl 6 Documentation

[14:05] *** frederico joined
[14:10] *** amnesiac joined
[14:19] <gaal> audreyt: yay, rm src/Pugs/Run/Perl5_stub.o worked!

[14:19] <svnbot6> r13043 | agentz++ | [util/smartlinks.pl]

[14:19] <svnbot6> r13043 | agentz++ | - added support for generic links used in the test suite.

[14:19] <svnbot6> r13043 | agentz++ |   Notations like

[14:19] <svnbot6> r13043 | agentz++ |     L<http://blah.blah.blah>

[14:19] <svnbot6> r13043 | agentz++ |   and

[14:19] <svnbot6> r13043 | agentz++ |     L<"http://foo.baz.bah">

[14:19] <svnbot6> r13043 | agentz++ |   are both recognized.

[14:20] <gaal> however: what I don't understand is something about src/ *under dist*.

[14:20] <gaal> under some circumstances, files get put there *not* under src

[14:21] <gaal> that is, dist/build/Pugs/* instead of dist/build/src/Pugs/*

[14:21] *** josh joined
[14:22] <gaal> right now for example I have both dist/build/Pugs/Embed/Perl5.o and dist/build/src/Pugs/Embed/Perl5.o

[14:29] <svnbot6> r13044 | agentz++ | [util/get-irc-logs.pl]

[14:29] <svnbot6> r13044 | agentz++ | - fixed the --channel option

[14:29] <svnbot6> r13044 | agentz++ | - changed the --out-dir option to ordinary command line

[14:29] <svnbot6> r13044 | agentz++ |   argument.

[14:32] *** elmex joined
[14:54] <Limbic_Region> gaal - did you see my nopaste and does it make any sense to you?

[14:54] <gaal> didn't see, looking now

[14:55] <gaal> hm looks like a ghc thing.

[14:55] <gaal> does manual yml creation work sometimes?

[14:55] <gaal> .\pugs.exe -CParse-YAML ext\Test\lib\Test.pm > blib6\lib\Test.pm.yml

[14:59] <gaal> if that doesn't work, try

[14:59] <gaal> .\pugs +RTS -A10m -RTS -CParse-YAML ext\Test\lib\Test.pm > blib6\lib\Test.pm.yml

[15:00] <gaal> also try -H200m

[15:01] *** ludan joined
[15:05] <Limbic_Region> gaal - sorry, was afk

[15:05] *** weinig joined
[15:05] <gaal> no worries

[15:05] <Limbic_Region> no, the first one doesn't work

[15:06] <Limbic_Region> though it did yesterday from home

[15:06] * Limbic_Region is using GHC 6.6rc btw

[15:06] <Limbic_Region> second one fails with same error

[15:06] <gaal> how big does the pugs get before dying?

[15:06] <Limbic_Region> pugs: getMBlocks: VirtualAlloc MEM_COMMIT failed: The parameter is incorrect.

[15:06] <Limbic_Region> not sure how to answer that

[15:07] <Limbic_Region> the pugs process ?

[15:07] <Limbic_Region> it returns almost immediately so not much chance to check the process table

[15:07] <gaal> yes. use Process Explorer?

[15:07] <gaal> oh

[15:07] <gaal> that's.. interesting

[15:08] <gaal> does this only happen with Test.yml? if you try to compile (say) the prelude again, does it also happen?

[15:08] <Limbic_Region> yes, much too fast for me to read it

[15:08] <Limbic_Region> and I would try and compile the prelude again how?

[15:09] <gaal> just put it as the arg for .\pugs.exe -CParse-YAML

[15:09] <gaal> instead of Test.pm

[15:09] <gaal> src/perl6/Prelude.pm

[15:09] <Limbic_Region> k, just a sec

[15:13] <Limbic_Region> same error gaal

[15:13] *** yhsuan_ joined
[15:14] <gaal> so from within make, it worked ok (your nopaste showed the prelude turned out fine) but subsequently it fails.

[15:14] <gaal> oh!

[15:14] *** yhsuan_ is now known as yhsuan

[15:14] <gaal> try del blib6\lib\Prelude.pm.yml

[15:14] <gaal> and then gen some .pm file

[15:14] <Limbic_Region> just a sec

[15:15] <gaal> or maybe, even before that

[15:15] <gaal> how big is that file?

[15:15] <gaal> the .yml

[15:15] <Limbic_Region> 727,460

[15:15] <gaal> hm no, that's kinda reasonable

[15:16] <gaal> ok, try removing it and genning something.

[15:16] *** avarab joined
[15:17] <Limbic_Region> same error

[15:17] <gaal> well, then I don't understand how the first gen succeeded

[15:17] <gaal> nmake again? (no clean)

[15:17] <Limbic_Region> tried that

[15:18] <Limbic_Region> no diff

[15:18] <Limbic_Region> that's one of the things I tried in between your "try this"

[15:18] <gaal> hm. ok. walk away from the computer please for a few minutes, then try genning again. keep the computer idle while you're away.

[15:19] <Limbic_Region> did that too

[15:19] <Limbic_Region> between the time I pasted the error and when I asked you if you had seen it

[15:19] <[particle]> did you kick it?

[15:19] <Limbic_Region> that I haven't done

[15:19] <gaal> do you have something that can show cpu temperatures? SpeedFan or something?

[15:20] <Limbic_Region> no

[15:20] <gaal> try installing one of those. also, try rebooting (no kidding).

[15:20] * Limbic_Region is about to realclean, svn up, reboot, nmake

[15:20] <Limbic_Region> gaal - I can't install one of those (work machine)

[15:20] <Limbic_Region> but the reboot is on my radar as indicated above

[15:20] <gaal> don't realclean yet

[15:20] <Limbic_Region> ok - just the reboot

[15:20] <gaal> actually

[15:21] <gaal> do a hard shutdown, wait five, start up

[15:21] <Limbic_Region> ok - see you in a few

[15:22] <gaal> (ghc predicted a cpu death on my computer once.)

[15:22] <xerox> ?remember gaal (ghc predicted a cpu death on my computer once.)

[15:22] <xerox> hahahaha.

[15:22] *** Eimi joined
[15:22] <gaal> it did!

[15:23] <xerox> How?

[15:24] <gaal> it kept giving random errors at different stages of compilation.

[15:25] <gaal> hm. how do I get a 'fail' to propagate upwards? here's my situation:

[15:25] <xerox> I see..

[15:25] <xerox> You'd better ask on #haskell, I've gotta dash in a moment.

[15:25] <gaal> nyeh

[15:25] <gaal> see you

[15:26] * gaal stares at his code some more

[15:26] <[particle]> ooh, a staring contest.

[15:26] * [particle] watches intently

[15:32] *** hexmode joined
[15:34] <nothingmuch> m

[15:34] <gaal> oose

[15:38] *** c6rbon joined
[15:41] <pasteling> "[particle]" at 144.81.84.141 pasted "make unoptimized fails w/ghc 6.4.1 on win32 for rHEAD" (512 lines, 25.6K) at http://sial.org/pbot/19465

[15:43] <[particle]> could be processor heat death :P

[15:43] <svnbot6> r13045 | gaal++ | * Signature parser: more whitespace fixes, and handle method signatures

[15:43] <svnbot6> r13045 | gaal++ |   with default invocant:

[15:43] <svnbot6> r13045 | gaal++ |     :(: $x)

[15:43] <svnbot6> r13045 | gaal++ |   The Param consturucted for this is perhaps a little shoddy still.

[15:43] <svnbot6> r13045 | gaal++ |   (i.e. what's its intended varname?)

[15:43] <svnbot6> r13045 | gaal++ | * traceM, a golf course in the desert.

[15:49] <gaal> wow, glimpse++:

[15:50] <gaal> (cd ghc-sources ; glimpseindex -o .)

[15:50] <gaal> glimpse "^!* ::"

[15:50] <gaal> er, alias hf glimpse "^!* ::"

[15:50] <gaal> now 'hf lookAhead' is like, instantaneous

[15:51] <xerox> Hey. What is hf?

[15:51] <gaal> a shell alias :)

[15:51] <xerox> Tags?

[15:51] <gaal> scroll back three lines

[15:52] <xerox> I don't know what glimpse is.

[15:52] <gaal> @google glimpse search

[15:52] <lambdabot> http://webglimpse.net/

[15:52] <lambdabot> Title: Webglimpse and Glimpse: advanced site search software for Unix : index websites  ...

[15:53] * Daveman waves to xerox

[15:53] <xerox> Yuck.

[15:53] <gaal> actually this is a better link: http://webglimpse.net/gdocs/glimpsehelp.html

[15:53] <lambdabot> Title: Glimpse manual page(1)

[15:54] <gaal> what are you yucking about?

[15:54] *** c6rbon joined
[15:55] <xerox> Thanks.

[15:56] *** onsen joined
[15:57] *** c6rbon joined
[16:01] *** lichtkind joined
[16:04] *** prism joined
[16:08] *** lisppaste3 joined
[16:10] *** Psyche^ joined
[16:15] <gaal> Parser:1406 looks almost like it could be golfed into a State monad...

[16:26] *** kanru joined
[16:26] *** Psyche^ is now known as Patterner

[16:29] *** Limbic_Region joined
[16:30] <Limbic_Region> gaal - left it powered off the entirety of lunch, same exact error

[16:30] <Limbic_Region> rebuilding from scratch now

[16:31] <[particle]> l_r: i'm having trouble building with 6.4.1

[16:32] <[particle]> "make unoptimized fails w/ghc 6.4.1 on win32 for rHEAD" (512 lines, 25.6K) at http://sial.org/pbot/19465

[16:32] <lambdabot> Title: Paste #19465 from "[particle]" at 144.81.84.141

[16:33] *** sili-babypuncher left
[16:35] <Limbic_Region> looking particle though I will only be guessing if I offer any advice

[16:35] <[particle]> yeah, i figured it was unrelated to your error

[16:36] <Limbic_Region> particle - you could try disabling perl5 embedding

[16:36] <Limbic_Region> since that is where it is failing

[16:37] <Limbic_Region> set PUGS_EMBED="!perl5"

[16:37] <[particle]> i guess it's defaulting to that embedding

[16:37] <[particle]> i haven't set any special env vars

[16:37] <Limbic_Region> yes, p5 embedding is enabled by default now

[16:37] <Limbic_Region> you have to specifically tell it not to if you don't want it

[16:37] <Limbic_Region> this btw is not a fix, just a workaround (presuming it works)

[16:38] <[particle]> do i need makefile.pl again?

[16:38] <Limbic_Region> the issue apparently is with some conflicting header files

[16:38] <Limbic_Region> particle, I never risk it - I always realclean;svn up;makefile;etc

[16:38] <[particle]> perhaps it's perl-version dependent?

[16:38] <[particle]> i'm on 5.8.6

[16:38] <Limbic_Region> AS Perl?

[16:38] <[particle]> yep

[16:38] <Limbic_Region> I believe it has been certified to be working with AS and Vanilla Perl

[16:39] <Limbic_Region> not sure about versions

[16:39] <[particle]> i'll kick the certifier :)

[16:39] <Limbic_Region> in any case make unoptimized is easier spelt make fast

[16:39] <Limbic_Region> it appears to be an issue with conflicting header files

[16:39] <[particle]> i'll retrain my fingers :)

[16:39] <Limbic_Region> the certifier likely didn't try with ghc 6.4.1

[16:40] <[particle]> i'm hoping to go direct to 6.6

[16:40] *** SubStack joined
[16:40] <[particle]> i don't want to install yet another ghc version

[16:40] <Limbic_Region> well, you shouldn't have to

[16:41] <Limbic_Region> but do try disabling perl5 embedding

[16:41] *** Odin- joined
[16:41] <[particle]> i'm recompiling now

[16:41] <Limbic_Region> fwiw, the conflict appears to be between usr/local/perl/lib/CORE/win32.h and /usr/local/ghc/ghc-6.4.1/include/mingw/stdint.h

[16:42] *** avarab is now known as avar

[16:49] <xerox> You surely know this one: how is it called the env var of a shell script that contains the number of arguments passed?

[16:50] *** fglock joined
[16:51] <Limbic_Region> xerox - what kind of shell?

[16:51] <Limbic_Region> sorry, was AFK

[16:51] <xerox> bash

[16:51] <xerox> hmm

[16:51] <xerox> sh in fact.

[16:51] <Limbic_Region> shouldn't matter much

[16:51] <Limbic_Region> let me check - been a while since I did any shell programming

[16:52] <xerox> For me too :(

[16:52] *** mauke_ joined
[16:52] <xerox> I ought to do a script that lets people add packages to hackage, in order to use them with cabal-install.

[16:52] <Limbic_Region> $* is all of them right?

[16:52] <Limbic_Region> so wouldn't it just be $# ?

[16:53] <xerox> That's right! Thank you.

[16:53] <Limbic_Region> no worries - had to stop and think about it

[16:53] *** araujo joined
[16:53] <xerox> I'll need to do some sed/awk/perl(?) hackery for this thing, gawk... it's ages since I did these kind of things.

[16:54] *** c6rbon_ joined
[16:54] <Limbic_Region> well, if this is to be portable - be sure not to assume versions of any of them

[16:54] <Limbic_Region> gawk != awk and what not

[16:56] <xerox> haha, I meant it as an exclamation, gawk1

[16:56] <xerox> gawk!

[16:57] <Limbic_Region> heh

[17:01] <Limbic_Region> well, I used to do an extensive amount of shell scripting with sed and awk so if you need help let me know

[17:05] * Limbic_Region likes to feel useful every now and then

[17:07] *** mauke_ is now known as mauke

[17:09] <xerox> Limbic_Region: still around?

[17:09] <Limbic_Region> in and out

[17:09] <Limbic_Region> but if you have questions I will stick around

[17:10] <xerox> Yes! thank you.

[17:10] <Limbic_Region> shoot

[17:10] <xerox> I need to do these steps:

[17:10] <xerox> ./cabal-put foo-1.0.tar.gz

[17:10] <xerox> 1. check the filename format is correct: PACKAGE-VERSION.tar.gz

[17:10] <xerox> 2. check that it unpacks to (case-sensitively) the same PACKAGE-VERSION/ dir

[17:11] <xerox> 3. check it exists (case-sensitively) PACKAGE-VERSION/PACKAGE.cabal

[17:11] <xerox> 4. check .cabal contains 'name: PACKAGE' and 'version: VERSION', 'name' and 'version' case-insensistively (one can use Name or name, and so on), while PACKAGE case-sensitively

[17:11] <Limbic_Region> is there a 4?

[17:12] <Limbic_Region> let me know when you have provided the last step

[17:12] <xerox> 5. copy out .cabal to foo/PACKAGE/PACKAGE-VERSION.cabal and .tar.gz to the same dir.  (foo is the base-packages-dir)

[17:12] <xerox> Done.

[17:13] <xerox> How would you do that?

[17:13] <Limbic_Region> ok - so we are assuming bash/sh/ksh type shell

[17:13] <Limbic_Region> and sed and/or awk but no perl?

[17:13] <xerox> Let me see

[17:13] <xerox> This is perl, v5.8.4 built for i386-linux-thread-multi

[17:13] <xerox> I can use this perl too

[17:14] <Limbic_Region> oh, well then there is no need for a shell script at all

[17:14] <xerox> Except I can't maintain the perl thing

[17:14] <xerox> But well, yeah.

[17:14] <Limbic_Region> ok - well I will just do shell with sed then

[17:14] <xerox> Oh well

[17:14] <xerox> If the perl one is easyer

[17:14] <xerox> *easier, go with it

[17:14] <xerox> You're too kind :)

[17:14] <Limbic_Region> sed is only needed for 1 step

[17:14] <xerox> Okay!

[17:14] <Limbic_Region> let me throw something together

[17:15] <xerox> I probably can manage some perl.

[17:15] <Limbic_Region> I will do both

[17:15] * xerox hugs Limbic_Region 

[17:15] <Limbic_Region> you check which one you want

[17:15] <xerox> I'm so stuck... too much higher level programming makes me unable to do this... yuck.

[17:16] <xerox> Heh, no pugs on monk

[17:16] <xerox> Otherwise we could've used perl6 ;-)

[17:27] *** salty-horse joined
[17:32] *** Eimi joined
[17:39] <justatheory> seen audreyt

[17:40] <gaal> "option Nothing $ fmap Just ruleThisOrOther"   -- is there a golfier way?

[17:41] <xerox> ?type option

[17:41] <lambdabot> Not in scope: `option'

[17:41] <xerox> What is it?

[17:41] <gaal> parsec

[17:41] <Limbic_Region> perlbot nopaste

[17:41] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[17:42] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "For xerox: This will likely need to be debugged." (41 lines, 1.2K) at http://sial.org/pbot/19467

[17:42] <gaal> xerox: option x p = p <|> return x

[17:42] <gaal> and <|> is mplus IIRC

[17:42] <Limbic_Region> xerox - there is a shell script version that is pretty ugly if you ask me

[17:42] <Limbic_Region> I will write a perl version which should be much cleaner

[17:42] <xerox> Limbic_Region: great!!!

[17:42] <xerox> Limbic_Region++

[17:43] <xerox> I'll be back in short time.

[17:43] <gaal> I can of course write a combinator - but I feel like there's a native way to exploit the Maybe here...

[17:43] <Limbic_Region> I already know the shell script is missing one command - the actual cabal-put

[17:43] <xerox> gaal: why do you need to option Nothing . fmap Just?

[17:43] <gaal> I *want* the parser to return a Maybe

[17:44] <Limbic_Region> as well as step 5 - must not have copied that

[17:44] <gaal> it's not Nothing . fmap just

[17:44] <xerox> It's option Nothing . fmap Just :)

[17:44] <gaal> it's option (Nothing) (fmap Just someRule)

[17:44] <xerox> Yeah, the point is someRule I mean.

[17:44] <xerox> Just make someRule fail with Nothing, i.e. return a Maybe a?

[17:45] <xerox> Limbic_Region: right, the actual cabal-put *is* step 5 right? or what do you mean?

[17:46] <Limbic_Region> xerox - let me finish the perl version then I will rectify any problems with the shell version

[17:46] * xerox nods

[17:48] <gaal> xerox: it compiles, but does not work :/

[17:48] <xerox> Aw.

[17:48] <xerox> Hmmmm.

[17:48] <gaal> that is, having the rule 'return Just x' instead of 'return x'

[17:49] <gaal> because apparently option catches the failure?

[17:49] <xerox> (option x p) tries to apply parser p. If p fails without consuming input, it returns the value x, otherwise the value returned by p.

[17:50] <xerox> I think the `without consuming input' part is the key.

[17:51] <gaal> but my rule has a 'try' combinator around it...

[17:51] <gaal> it doesn't consume input when failing.

[17:51] <xerox> Right, I was going to suggest that.

[17:52] <gaal> I think I'll just write a maybeRule function that does thi

[17:52] <gaal> s

[17:53] <gaal> :pl maybeRule r = option r $ fmap Just r

[17:53] <gaal> @pl maybeRule r = option r $ fmap Just r

[17:53] <xerox> Strange. Cale is good at Parsec, if he comes about ask him about that.

[17:53] <lambdabot> maybeRule = ap option (fmap Just)

[17:53] <gaal> okay, thanks.

[17:53] <gaal> I gotta moose for a bit...

[17:53] *** weinig is now known as weinig|bbl

[17:53] <xerox> Moose freely.

[17:54] <gaal> named parameters are in.

[17:54] <salty-horse> gaal, hi

[17:54] <gaal> hey salty-horse. the bug's fixed

[17:54] <salty-horse> yay. watching

[17:54] <gaal> as of this morning

[17:55] <salty-horse> can you help me figure out why my changes to pretty print Param.Default had no effect? (the ones that i msg-ed you when you were away)

[17:56] <gaal> i replied on the channel, please look in the irc.pugscode.org

[17:56] <gaal> gotta go for a bit

[17:57] <xerox> There's another irc network ?

[17:57] <gaal> logs

[17:57] <xerox> Ah-ha.

[17:57] <salty-horse> thanks

[17:59] <Limbic_Region> xerox - "copy out .cabal to foo/PACKAGE/PACKAGE-VERSION.cabal and .tar.gz to the same dir." where foo is base-packages-dir - how will I know what that is?

[17:59] <Limbic_Region> is it passed in as a command line argument?

[18:00] <xerox> Limbic_Region: a variable would be sweet

[18:01] <xerox> It's now a subdir in my $HOME but it'll be something different

[18:01] <Limbic_Region> what I mean is, something has to tell the script what it is

[18:01] <Limbic_Region> I can query the environment or it can be passed in as an arg

[18:01] <Limbic_Region> please disregard the shell script - I made a lot of incorrect assumptions when I wrote that

[18:02] <Limbic_Region> I read more carefully for the perl

[18:02] <xerox> OK

[18:02] <xerox> Limbic_Region: can it be a "global" variable?

[18:02] <xerox> It is just a fixed directory, users aren't supposed to change it

[18:03] <Limbic_Region> I don't care what kind of variable it is

[18:03] <Limbic_Region> I care how my script finds out about it in the first place

[18:03] <xerox> Just a variable in the script, it's a "fixed" path.

[18:03] <Limbic_Region> almost finished

[18:03] <xerox> One writes it in the source.

[18:05] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "for xerox - does a better job" (45 lines, 1.3K) at http://sial.org/pbot/19469

[18:05] <Limbic_Region> ok, I have to go - bbiab

[18:06] <xerox> Thank you!

[18:11] <svnbot6> r13046 | gaal++ | * Handle named parameters in Signatures.

[18:11] <svnbot6> r13046 | gaal++ |     :( :$justify )                # which is shorthand for...

[18:11] <svnbot6> r13046 | gaal++ |     :( :justify($justify) )       # but you can also say

[18:11] <svnbot6> r13046 | gaal++ |     :( :justify($justification) ) # the long name is used inside body;

[18:11] <svnbot6> r13046 | gaal++ |                                   # the short name by callers

[18:15] <xerox> brb

[18:16] <gaal> rehi

[18:17] <gaal> wow, 13 minutes to commit. that's... slow

[18:21] <gaal> so, modulo bugs, I think the new sig parser handles everything the old one does, and more.

[18:22] *** xerox joined
[18:22] <gaal> I wonder whether at this point it would be more fun to write the pugsy introspection interface, or to transition the the parser to use this in actual sub declarations.

[18:22] <xerox> Back.

[18:25] <gaal> or maybe a pretty printer, though perhaps writing the pretty printer in Perl would be a good way of testing an introspection interface!

[18:25] <xerox> Limbic_Region: anyway, there's no such thing as cabal-put. The script *is* cabal-put.

[18:32] <fglock> compiling Test.pm from scratch with v6 dropped from 13.5s to 9.1s (about 30%)

[18:32] <svnbot6> r13047 | fglock++ | v6 - just removed a debug comment

[18:41] *** renormalist joined
[18:42] *** DaGo joined
[18:53] *** prefiks joined
[18:56] *** prism joined
[19:01] *** ruz_ joined
[19:10] *** Shonhen joined
[19:11] *** Shonhen left
[19:27] *** fglock joined
[19:38] <TreyHarris> my make smoke is hung in ext/libwww-perl/t/live.t

[19:40] <TreyHarris> does test status get written to a file somewhere as it goes along, so I can try to figure out what test it's hung on?  tracing the process is proving unhelpful

[19:43] <nothingmuch> 2/w 12

[19:44] *** bernhard joined
[19:45] <TreyHarris> nothingmuch: hmmm... on my numlock, that would translate to "k0w jk", which is no more enlightening than what you actually typed ;-)

[19:45] <nothingmuch> that was just a typo ;-)

[19:45] *** polettix joined
[19:45] <nothingmuch> i was switching to window 12 in irssi

[19:46] <mauke> /w is an abbreviation for /window

[19:48] <TreyHarris> meh, i just killed live.t.  i'll come back behind once i've got the smoke.html and figure out where it hung :-)

[19:53] *** larsen joined
[19:56] <svnbot6> r13048 | Sage++ | The translator will now accept multiple modifiers after one -, so -VR and similar are valid. In addition, -O is now used for heavy object-oriented translation (but -Oo is still useable.

[19:56] <svnbot6> r13048 | Sage++ | In addition, I found a stupid little error in ASTParser that I fixed (just some bad indentation, not sure how that got there).

[19:58] *** polettix joined
[20:03] *** soisoisoi joined
[20:04] <gaal> this paper is fun to read: http://research.microsoft.com/~simonpj/Papers/inlining

[20:05] <lambdabot> Title: Simon Peyton Jones: papers, http://tinyurl.com/kevk6

[20:05] <gaal> [ Secrets of the GHC inliner ]

[20:08] <Limbic_Region> gaal - not sure if you saw my report earlier but leaving the machine turned off for the entirety of lunch had no effect, neither did recompiling from realclean

[20:08] <gaal> looks like a GHC bug to me

[20:08] <Limbic_Region> except that it worked fine yesterday

[20:08] <gaal> but I'm not sure.

[20:09] <Limbic_Region> I will know tonight if it is related to the pugs source as what I have at home is using the same version of ghc - so I verify that it still works, svn up, and see if it starts failing

[20:09] <gaal> the bug has festered, perhaps

[20:09] <Limbic_Region> not that it couldn't still be a ghc bug - but if so, then it is one that just recently got tickled

[20:09] <Limbic_Region> and AFAIK, I am the only one using ghc 6.6rc on Win32

[20:09] <gaal> okies.

[20:09] * gaal heads for bed

[20:10] <lumi> Night gaal

[20:10] * gaal eigens &

[20:19] <nothingmuch> mooooooooooooose

[20:24] <clkao> moose

[20:25] *** Zemyla joined
[20:29] *** deplifer joined
[20:30] *** deplifer left
[20:32] *** weinig|bbl is now known as weinig

[20:34] *** bpphillips left
[20:34] *** c6rbon_ is now known as c6rbon

[20:41] *** DaGo joined
[21:01] *** penk joined
[21:05] *** radian joined
[21:10] *** crem_ joined
[21:14] *** Limbic_Region joined
[21:14] *** weinig is now known as weinig_

[21:14] *** weinig_ is now known as weinig

[21:17] *** fglock left
[21:18] *** salty-horse left
[21:33] <xerox> Question.

[21:33] <xerox> To check for directory existence is it:

[21:33] <xerox> dir "arr" if ! $dir;

[21:33] <xerox> Or:

[21:33] <xerox> die "arr" if ! -d $dir;

[21:33] <xerox> ?

[21:34] <wolverian> just open/glob it and check the return value.

[21:34] <wolverian> there's a race condition in checking its existence first.

[21:34] <wolverian> er.

[21:34] <wolverian> oh, this is #perl6 :)

[21:34] <xerox> Hm?

[21:34] <wolverian> well, the advice still applies.

[21:34] <Limbic_Region> xerox - in perl, use ! -d $dir

[21:34] <xerox> hehe okay

[21:35] <wolverian> die unless -d $dir; ...someone removes the directory here...; glob $dir...

[21:35] <Limbic_Region> race conditions are not applicable here

[21:35] <xerox> Just checking for existance and moving on.

[21:36] <Limbic_Region> neither is portability and a half a dozen other things you might think are good ideas

[21:36] <Limbic_Region> ;-)

[21:36] <xerox> paolo@monk:~$ bin/cabal-put fps-0.7.tar.gz

[21:36] <xerox> paolo@monk:~$ ls projects/packages/fps/

[21:36] <xerox> fps-0.7.cabal  fps-0.7.tar.gz

[21:36] <xerox> Oh yeah!

[21:36] <wolverian> stop hacking and do it the right way :)

[21:36] *** weinig is now known as weinig|bbl

[21:36] * xerox prods himself... and Limbic_Region for the help hehe

[21:41] <xerox> wolverian: do you also know the idiomatic way to cwd to a directory and run a command there?

[21:41] <xerox> wolverian: I'm pretty sure it's system() for the latter part, but I don't know about the former.

[21:42] <wolverian> { temp $*CWD = ...; ... } # :)

[21:42] <xerox> Nice!!

[21:42] <wolverian> no, I'm not sure if that works. it's scary.

[21:42] <xerox> :(

[21:42] <wolverian> I remember discussion about it.

[21:42] <xerox> Something that works.. ?

[21:43] <wolverian> in perl6 or perl5?

[21:43] <xerox> perl5.

[21:44] <wolverian> I don't think there's a neat idiom.

[21:44] <wolverian> use Cwd qw/getcwd/; my $old = getcwd; if (chdir $target) { system command => -flags } else { die "foo" }

[21:44] <wolverian> er, and chdir back to $old :)

[21:44] <xerox> Yuck.

[21:44] <wolverian> quite.

[21:49] *** jlf joined
[21:54] *** prefiks left
[21:57] *** cjeris left
[22:37] <TreyHarris> xerox: if you can stomach turning commandline processing over to the shell, you can just do 'system "cd $target && $command"'... when the system exits, you'll be back in your old cwd

[22:37] <xerox> TreyHarris: that's what I am doing now in fact

[22:37] <xerox> Thanks anyway :)

[22:37] <TreyHarris> of course, this Is Not Portable... but incantations involving system() never are

[22:37] <xerox> Yeah

[22:38] <TreyHarris> what wolverian describes of temporizing $*CWD is already implementable by the Synopses.  I dunno if it's implementable under pugs yet

[22:39] <TreyHarris> actually, i know it's not.  Proxy objects aren't implemented.

[23:01] *** [particle] joined
[23:01] *** weinig|bbl is now known as weinig

[23:18] *** jlf joined
[23:23] *** reZo joined
[23:24] *** jferrero joined
[23:45] *** weinig is now known as weinig|food

[23:45] *** SubStack joined
[23:58] <svnbot6> r13049 | renormalist++ | cperl-mode.el:

[23:58] <svnbot6> r13049 | renormalist++ |  - Merged changes from original cperl-mode v5.20

[23:58] <svnbot6> r13049 | renormalist++ |  - perl 5.9 state variable declarations

[23:58] <svnbot6> r13049 | renormalist++ |  - experiments to fix y/tr bug with twigils, but no success yet

