[00:03] *** sanug left
[00:06] <svnbot6> r11165 | putter++ | welcome.p6: Revert r11157, which no doubt broke the livecd.

[00:09] <putter> clkao: It's been a while since I've looked at the p5 stuff, but I'll explore.  Congratulations.

[00:09] <clkao> putter: yay

[00:18] <audreyt> putter: a good way to start is Class::MultiMethod::Dispatch

[00:18] <audreyt> and extend it to support the notion of semicolons

[00:18] *** Bit-Man joined
[00:18] <clkao> what's this semicolon notion thing?

[00:19] <audreyt> multi f (Int $x, Int $y; $z, $w)

[00:20] <clkao>  and this Class::MultiMethod::Dispatch thing isn't on cpan

[00:20] <audreyt> sorry

[00:20] <audreyt> Class::MultiMethod::Pure

[00:20] <audreyt> thinko

[00:20] <clkao> so after ; it is... ?

[00:20] <audreyt> it is not used for tiebreaking purposes

[00:20] <audreyt> putter: actually

[00:21] <audreyt> (Int $x, Int $y; Int $z, Int $w)

[00:21] <audreyt> is as good as

[00:21] <audreyt> (Int $x, Int $y; Any, Any)

[00:21] <audreyt> putter: we didn't cover that

[00:22] <audreyt> i.e. any constraints after the final semicolon is not used for voting

[00:23] <clkao> audreyt: might worth to document that prelude.p6 requires/expects for the internal backend to implement

[00:24] <clkao> is it christmas yet

[00:24] <svnbot6> r11166 | sanug++ | Renaming PHEME.html

[00:26] <svnbot6> r11167 | sanug++ | Renaming PHEME.jpg

[00:29] <audreyt> putter: fixed

[00:30] <audreyt> clkao: indeed, a rationalized "grep Pugs::Internals:::*"

[00:31] *** tup joined
[00:31] <svnbot6> r11168 | audreyt++ | * mmd-draft.txt - add the exception that the parameters after the final

[00:31] <svnbot6> r11168 | audreyt++ |   semicolon is ignored for the voting process.

[00:34] <rafl> Why isn't the haskell module installed with 'make install' anymore?

[00:36] <audreyt> rafl: it used to break with a per-user package.conf

[00:36] <putter> audreyt: re CMMP, thanks.  re after final semi...

[00:36] <svnbot6> r11169 | rafl++ |  r168@ata:  rafl | 2006-07-05 02:37:31 +0200

[00:36] <svnbot6> r11169 | rafl++ |  * Fixed typos in Makefile.PL which prevented the detection of

[00:36] <svnbot6> r11169 | rafl++ |    {installed,parrot,null}_config.o for installed parrots.

[00:36] <audreyt> rafl: now maybe you can uncomment the Makefile rules

[00:36] <clkao> audreyt: do you want to do some module::compile debugging?

[00:36] <audreyt> actively want? no. to solve your problem? sure

[00:36] <putter> the are still checked for compatibility, yes?

[00:36] <audreyt> yes.

[00:36] <clkao> audreyt: yes, solve my problem

[00:37] <putter> is there a motivating example for this feature?

[00:38] <rafl> audreyt: It's still likely to break as the generated installed-pkg-conf or whatever it is called contains paths to the build tree which fucks things when using the system-wide haskell module if the build-dir isn't present.

[00:38] <audreyt> multi infix:<..> (Int $x, Int $y; $by)

[00:38] <audreyt> multi infix:<..> (Int $x, Int $y; Int $by)

[00:38] <audreyt> putter: well, "motivating" is maybe when you think about methods

[00:38] <audreyt> rafl: yeah.

[00:39] <audreyt> multi bark (Dog $x; Moving $target) { ... }

[00:40] <audreyt> multi bark (Tree $x; Layer $n) { ... }

[00:40] <audreyt> essentially the 2nd argument for each is "incidental"

[00:40] <putter> so we want the infix:<..> example to be an ambiguity failure why?

[00:40] <putter> (assuming handed an int)

[00:41] <audreyt> sorry, that was merely a typo on my part.

[00:41] <audreyt> hm.

[00:41] <audreyt> otoh, I can't quite see why "always an implicit semicolon at end" is bad.

[00:41] <audreyt> TimToady: help?

[00:43] <audreyt> putter: the relevant spec:

[00:43] <audreyt> Sometimes you want to have parameters that aren't counted as part of the

[00:43] <audreyt> long name.  For instance, if you want to allow an optional "step" parameter

[00:43] <audreyt> to your range operator, but not consider it for multi dispatch, then put a

[00:43] <audreyt> semicolon instead of a comma before it:

[00:43] <audreyt> multi sub infix:<..>(Int $min, Int $max; Int $by = 1) {...}

[00:43] <audreyt> The final semicolon, if any, determines the complete long name of a multi.

[00:43] <putter> ok, pondering...

[00:45] <dduncan> question ... does any .meta stuff work yet?

[00:45] <audreyt> dduncan: only .meta.name

[00:45] <audreyt> dduncan: the rest is pending The Arrival Of The Moose tomorrow

[00:45] <audreyt> (=stevan)

[00:45] <dduncan> so then I'll be able to say .meta.identifier.version tomorrow?

[00:46] <audreyt> yes.

[00:46] <dduncan> sounds good

[00:46] <audreyt> in perl5 too.

[00:46] <audreyt> I'll nudge stevan into releasing a new Moose with Moose::Meta::Module and Moose::Meta::Package

[00:47] <audreyt> would be fun to express Rosetta with moose

[00:47] <dduncan> fyi, I've decided to scale Relation back again to just a container, and not worry about subclassing at the moment ... I will also implement it out of things that work in Perl 6 and Perl 5 now, namely Hashes and Arrays ...

[00:47] <vsoni> audrey: in PIR what is the difference b/w .lex .sym and .local

[00:47] <dduncan> also, I expect to release a corresponding Perl 5 version on CPAN, using Moose

[00:47] <dduncan> I will probably rename it to Set::Relation so it fits in better

[00:47] <dduncan> how does that name sound to you?

[00:48] <audreyt> vsoni: .sym is just .local

[00:48] <dduncan> Rosetta will come after

[00:48] <audreyt> dduncan: that sounds good

[00:48] <audreyt> vsoni: .sym = .local; .lex lives on the pad, .sym does not

[00:48] <dduncan> okay, I'm about to commit said name change now ...

[00:48] <putter> so an f with (Int; Int) and (Int; Num) will always be ambiguous?

[00:49] <audreyt> putter: yes, though you can always force disambig with (Int, Odd)

[00:50] <svnbot6> r11170 | fglock++ | v6 - simple option processing in s///

[00:51] <putter> is (Int, Num) and (Int; Int) on (3,4) ambiguous or variant first?

[00:53] <svnbot6> r11171 | Darren_Duncan++ | ext/Relation/ : first step of renaming Relation to Set::Relation and otherwise reworking it

[00:57] <svnbot6> r11172 | Darren_Duncan++ | renamed ext/Relation/ to ext/Set-Relation/, which should be less ambiguous and fit better into CPAN

[00:58] <clkao> gr, i don't think fglock saw my changes

[00:58] <audreyt> putter: variant first.

[00:58] <audreyt> (Int;Int) is as good as (Int;Any) for voting.

[01:00] <putter> but only for the final semi, yes?

[01:02] <audreyt> parsefail

[01:02] <svnbot6> r11173 | sanug++ | 11159 perl6_compilation.graffle has now had each file exported to the perl6_compilation directory

[01:02] <svnbot6> r11173 | sanug++ | Added specific steps for Perl 6 pugs flow and Allison Randal's Parrot targets with specifics on future, present, and past languages.

[01:05] <putter> in a signature with multiple semis, the final semi means something somewhat different than the others.

[01:07] *** hikozaemon joined
[01:09] <putter> a thought question might be "if we were using manhattan rather than second-to-none-everywhere to combine individual parameter distances, what would ; mean then?".

[01:10] <putter> I'm am starting to be tempted to walk the design decision path just to get a better idea what the space looks like.

[01:11] <audreyt> nod.

[01:11] <putter> Or even better, look at a list of objectives, if there is one.

[01:12] <svnbot6> r11174 | rafl++ |  r175@ata:  rafl | 2006-07-05 03:11:42 +0200

[01:12] <svnbot6> r11174 | rafl++ |  * Only use rpath if the build dir where the rpath points to really exists.

[01:12] <svnbot6> r11174 | rafl++ |  r176@ata:  rafl | 2006-07-05 03:12:51 +0200

[01:12] <svnbot6> r11174 | rafl++ |  * Some debian/ updates towards 6.2.12 packages.

[01:12] <svnbot6> r11174 | rafl++ |  r177@ata:  rafl | 2006-07-05 03:14:25 +0200

[01:12] <svnbot6> r11174 | rafl++ |  * Remove some obsolete files in debian/.

[01:14] *** sanug joined
[01:14] <putter> we have a story for individual parameter type distances, and one for how to combine them.  we want to introduce inhomogeneities into the latter.

[01:16] <audreyt> putter: have you committed v6-**?

[01:17] <putter> oh, as an aside: might the second-to-none result in a "chase to the bottom"?  authors narrowing their types to escape ambiguity, which creates ambiguity for others, who then...  I haven't thought it through, but the possibility came to mind.

[01:19] <putter> no.  there was a note in t/README that the #! lines in test files help Test::Harness and prove.  so I'm off doing a full regression, which takes an hour or two.

[01:20] <putter> I could decouple the changes if you like?  (hmm, probably should have done that the minute I hit the issue.  ah well).

[01:21] *** ludan joined
[01:23] <putter> If yanking the #!'s from test files proves problematic, then the usefulness of use v6-** diminishes.

[01:28] <putter> sigh.  build goes boom.  Cannot import `Data.ByteString': it was found in multiple packages: pugs-fps-0.7 fps-0.7 (imported from src/Pugs/AST/Internals/Instances.hs)

[01:31] <nothingmuch> Perl::Generate dillema:

[01:31] <nothingmuch> i have the subcall node

[01:31] <nothingmuch> which is basically invoke as closure

[01:32] <nothingmuch> it takes a code like thing (an expression) and optional args

[01:32] <nothingmuch> if the expression is a bareword there is no ->

[01:32] <nothingmuch> otherwise that stuff will be added

[01:34] * putter is unsure what "that stuff" is, but nods encouragingly...

[01:34] <nothingmuch> anyway

[01:34] <nothingmuch> i need a name for the type of the code thing

[01:34] <nothingmuch> because Strs can coerce into barewords for that

[01:34] <nothingmuch> Perl::Generate::AST::Node::Invokable? (ambig)

[01:35] <nothingmuch> Node::Codeifyable? (sucks)

[01:35] <nothingmuch> just Node::Bareword|Node::Expr ?

[01:35] <nothingmuch> (which is redundant, because Node::Bareword does Node::Expr

[01:38] <putter> so... the thing is a code or bareword?

[01:38] <svnbot6> r11175 | Darren_Duncan++ | ext/Set-Relation/ : rewrote part of the DESCRIPTION in Relation.pm to indicate the new focus and direction of this module

[01:38] <putter> Node::CodeOrBareword?

[01:39] <putter> almost end of day for me I think.

[01:39] <nothingmuch> putter: hmm

[01:39] <nothingmuch> putter: good night

[01:40] <nothingmuch> btw, are you hackathoning with us tomorrow or later?

[01:41] <svnbot6> r11176 | fglock++ | v6 - rule/token/regex placeholders in parser

[01:43] <putter> yes tomorrow, and also later, for some value of later.

[01:44] <nothingmuch> were you here yesterday

[01:44] <nothingmuch> i only met spinclad

[01:44] <putter> I unfortunately do not have mobile computes, but I'm only a few minutes away, so will deal.

[01:45] *** scook0 joined
[01:45] <putter> yes.  I was mostly in the other room, with audrey, gaal, and later spinclad.

[01:45] <nothingmuch> okay

[01:46] <nothingmuch> i thought i saw someone but was unsure

[01:46] <nothingmuch> i mostly had my earphones on, and was being distracted

[01:46] *** ivanfrey joined
[01:47] <putter> I stepped in briefly to say hi, but didn't want to stomp on the non-hackathon work in progress, so it was low profile.  I look forward to seeing you and knowing I've seen you. ;)

[01:47] <nothingmuch> likewise =)

[01:47] * nothingmuch is not sure who is more insane

[01:47] <nothingmuch> syd barret or ingy

[01:48] <putter> any idea what time show starts?

[01:48] <nothingmuch> fireworks?

[01:48] <ivanfrey> Please forgive my ignorance but since I attended Damian's talk here in Toronto on Monday, I'm keenly interested in running pugs.

[01:48] <putter> hopefully not, though that might be interesting.  the hackathon tomorrow.

[01:49] <putter> ivanfrey: welcome.  let's see, do we have a page on download instr... oh, we just did a release, neat, one sec.

[01:50] <nothingmuch> putter: probably ~10ish

[01:50] <putter> ivanfrey:  http://pugs.blogs.com/  has a download link.

[01:50] <nothingmuch> maybe a little later

[01:50] <nothingmuch> yesterday we started at around that time

[01:50] <nothingmuch> but today wake up times varied from 8-somethingish to 13:00

[01:51] <putter> nothingmuch: thanks :)

[01:51] <obra> tomorrow, I need to be home from 8 - 12

[01:51] <obra> y'all are welcome to head toward the office earlier

[01:52] <putter> ivanfrey: after you download the http://search.cpan.org/dist/Perl6-Pugs-6.2.12/ release, there is a README and an INSTALL.

[01:52] <obra> but non-bps hackathoners should make sure someone you know will be in the office before heading there.

[01:52] <lambdabot> Title: "&#9786;&#21776;&#40179;&#9787; / Perl6-Pugs-6.2.12 - search.cpan.org"

[01:52] <ivanfrey> Only problem is that when I tried to install the latest binary build of pugs on my PowerBook G4 running Mac OS 10.3.9 it was looking for a libperl.dylib that didn't exist on my system. I will check this link you've just posted.

[01:52] <obra> surprising the office staff would be a not-good thing

[01:53] <nothingmuch> what if we surprise them with party hats?

[01:53] *** sanug left
[01:55] <clkao> audreyt++ # fixing module::compile madness

[01:55] <clkao> putter: are you changing the tests? i can't wait to hook things up

[01:56] <ivanfrey> putter: ok, I've already downloaded the source code. I was just checking to see if I could at all possibly avoid compiling, ;-)

[01:57] <putter> ivanfrey: oh, curious.  hmm, in about 14 hours there will be more people here, and thus greater potential for help.  I'm not sure anyone mac-ish is here at the momemnt.

[01:57] <putter> ivanfrey:  right. :)

[01:59] <svnbot6> r11177 | audreyt++ | * revert fglock++'s last patch on Term because clkao claims that he had

[01:59] <svnbot6> r11177 | audreyt++ |   it fixed already in a previous commit in a different way.

[02:00] <putter> clkao: hit a snag, delayed until tomorrow.  sorry.  t/README says the test #!'s help Test::Harness and prove, so I was going to run a full regression test.  But pugs HEAD doesnt build at the moment.

[02:01] <ivanfrey> putter: sure, I'll wait. After all I haven't seen a more enthusiastic advocate for a language than Damian.

[02:01] <putter> Would use the release to test, but out of time for today.   Need a diff so you can play this evening?

[02:02] <nothingmuch> clkao: ping

[02:02] <clkao> nothingmuch: pong

[02:02] <svnbot6> r11178 | audreyt++ | * "use v6" now handles "use Test" without preloading the Perl5-land

[02:02] <svnbot6> r11178 | audreyt++ |   "Test.pm", as we handle all block-rolling ourselves and refuse to

[02:02] <svnbot6> r11178 | audreyt++ |   play with any Perl5-based Module::Compile precompilers "use"d within

[02:02] <svnbot6> r11178 | audreyt++ |   this scope -- because our "use" doesn't mean the Perl5 "use" anyway.

[02:02] <svnbot6> r11178 | audreyt++ | * With this commit, this now works:

[02:02] <svnbot6> r11178 | audreyt++ |     % cd pugs/perl5/Pugs-Compiler-Perl6

[02:02] <clkao> nothingmuch: sighungry

[02:02] <svnbot6> r11178 | audreyt++ |     % export PERL6LIB=../../ext/Test/lib

[02:02] <svnbot6> r11178 | audreyt++ |     % perl -Ilib t/08-test.t

[02:02] <svnbot6> r11178 | audreyt++ | * We now complete 01-sanity/.  All tests pass.

[02:02] <nothingmuch> clkao: where's my v6 Test.pm with commented ugliness?

[02:03] <clkao> nothingmuch: commented? not yet.

[02:03] <nothingmuch> ;-)

[02:03] <nothingmuch> it can be incremental

[02:03] <nothingmuch> subetha?

[02:03] <nothingmuch> oh wait, you don't use os

[02:03] <nothingmuch> x

[02:04] <clkao> audreyt: Use of uninitialized value in split at t/13-match.t line 5.

[02:04] <clkao> only in the first compile

[02:04] <putter> good night all &

[02:04] <nothingmuch> good night putter

[02:04] <audreyt> clkao: I see that

[02:05] <vsoni> audreyt: Saw your email response for PIR :)

[02:05] <audreyt> vsoni: hi.

[02:05] <svnbot6> r11179 | audreyt++ | * don't warn when PERL6LIB is set to zero

[02:06] <audreyt> vsoni: well, allison's point is well-taken; if PIR wants to be mixed-interleaved-compilation with full side effects -- which is to say, like Perl 5 and only Perl 5 -- I'm fine with that

[02:06] <audreyt> I think it will make static analysis of .pir impossible, but allison also said she'll be okay with that.

[02:06] <audreyt> so, I consider my job done :)

[02:07] <audreyt> (and it'd be nice if you can proceed with submitting the remove-statics and hook-with-exceptions subtickets)

[02:07] <vsoni> I agree......IMCC should be used to target other backends too.....

[02:08] <vsoni> How bout running PERL on .net or JVM

[02:08] <vsoni> A retargettable IMCC might come in handy

[02:09] <vsoni> I will start working on the tickets......and keep you posted on progress

[02:09] <vsoni> Audreyt: Let me know if you run into any other problems with IMCC in the mean time.

[02:13] <audreyt> okay.

[02:13] <audreyt> (I've posted (hopefully final) followup to allison)

[02:14] <audreyt> <- learned to avoid any technical -- well, any kind of -- arguments with allison

[02:14] <clkao> doh :$depends is not working yet. that means depends => $depends right?

[02:14] <clkao> or has that changed?

[02:14] <audreyt> clkao: yes

[02:16] <clkao> is there :@foo as well?

[02:17] <audreyt> yes.

[02:19] <ivanfrey> Anybody have pugs running on Mac OS 10.3.9?

[02:19] <audreyt> not that I know of...

[02:19] <audreyt> what error are you running into?

[02:20] <clkao> audreyt: wait, it's depends => $depends or depends => 'depends' ?

[02:20] <audreyt> depends => $depends

[02:23] <ivanfrey> audreyt: All kinds of errors, with the latest binary builds from http://www.unobe.com/packages/, compiling pugs. I'm running into a real dog's breakfast.

[02:23] <lambdabot> Title: "Index of /packages/"

[02:24] <audreyt> ivanfrey: uhm, how about don't use binary build

[02:24] <audreyt> and try getting a build of GHC?

[02:24] <audreyt> http://haskell.org/ghc/download_ghc_641.html#macosx

[02:24] <lambdabot> Title: "GHC: Download version 6.4.1"

[02:26] <clkao> audreyt: Use of uninitialized value in string eq at lib/v6.pm line 41.

[02:27] <ivanfrey> audreyt: yeah, i've installed GHC 6.4.1. But when I go to compile pugs, no runnable GHC found. Hmmm, I'm sure there's some option which will help me set the GHC folder.

[02:28] <ivanfrey> audreyt: oops my bad there it is in INSTALL.

[02:29] * nothingmuch needs a pair programming buddy

[02:29] <nothingmuch> motivational problems

[02:30] <nothingmuch> any volunteers?

[02:30] <nothingmuch> Perl::Generate semantics for operators

[02:33] <audreyt> clkao: fixed

[02:34] <nothingmuch> audreyt.find( :item<minion>, for => $?SELF );

[02:35] <svnbot6> r11180 | audreyt++ | * more warning avoidance

[02:46] *** kanru joined
[02:50] <ivanfrey> Could not find module `Data.ByteString':

[02:50] <ivanfrey>   use -v to see a list of the files searched for

[02:50] <ivanfrey>   (imported from src/Pugs/AST/Internals/Instances.hs)

[02:50] <ivanfrey> Build failed: 256 at util/build_pugs.pl line 120.

[02:50] <ivanfrey> make: *** [pugs] Error 2

[02:50] <ivanfrey> This is getting painful.

[02:50] <audreyt> hm.

[02:51] <audreyt> this is GHC 6.4.1, on the release tarball?

[02:51] <audreyt> is it possible for you to try svn checkout http://svn.openfoundry.org/pugs/ and see if it works?

[02:51] <lambdabot> Title: "Revision 11075: /"

[02:51] <audreyt> I apologize for the pain. GHC641+OSX10.3 is as of yet an untested combination

[02:53] <ivanfrey> audreyt: This might not have anything to do with GHC or does it?

[02:54] <audreyt> ivanfrey: actually I'm pretty sure it does. GHC 6.4.1 ships with an older version of the Cabal library

[02:54] <audreyt> which is the likely cause of this problem

[02:55] <audreyt> rafl has checked in an alternative way of building this

[02:55] <audreyt> in the pugs svn trunk

[02:55] <audreyt> and so it maybe possible that it can be built easier that way

[02:55] <audreyt> alternatively, if this is the release tarball

[02:55] <audreyt> you can try

[02:55] <audreyt> cd third-party/fps ; ../../Setup configure ; ../../Setup build ; sudo ../../Setup install

[02:56] <audreyt> and then cd ../../ ; make

[02:56] <audreyt> and see if it now works.

[02:57] <ivanfrey> audreyt: ok, I'll try the alternative.

[03:05] *** shachaf joined
[03:08] *** shachaf joined
[03:12] *** weinig|away is now known as weinig

[03:12] <ivanfrey> audreyt: the alternative wasn't going to work because ghc wasn't in my PATH (/usr/local/bin/ghc).  So I stuck it on my path. I now suspect that if I had done this from the beginning I wouldn't have gotten my last error. I'm still building, btw.

[03:12] <audreyt> okay.

[03:13] <audreyt> it might be very possible that is the problem.

[03:13] <svnbot6> r11181 | audreyt++ | * perl6_compilation.graffle - "Ponie 2.0" is not actively

[03:13] <svnbot6> r11181 | audreyt++ |   developing -- it's planned for the future.  Pirate

[03:13] <svnbot6> r11181 | audreyt++ |   (Python on Parrot) is not dead; the list is active as

[03:13] <svnbot6> r11181 | audreyt++ |   of June 25th; it seems just that they've branched the

[03:13] <svnbot6> r11181 | audreyt++ |   Parrot tree to avoid the churn.

[03:13] <unobe> ivanfrey: are you on panther or tiger?

[03:13] <unobe> cog tried to do install the latest images and it didn't work for him on panther

[03:13] <ivanfrey> unobe: panther (10.3.9)

[03:13] <unobe> hmmm..thought so

[03:14] <ivanfrey> ubobe: You're the one who does the parrot and pug binary builds?

[03:14] <unobe> apparently the linked libraries are different, so the images I made won't work (unless I can figure out what dependencies are needed)

[03:15] <nothingmuch> hola unobe

[03:15] <unobe> well, the ones on unobe.com/packages anyway

[03:15] <unobe> hey nothingmuch

[03:15] <unobe> you still in boston?

[03:15] <nothingmuch> yep

[03:15] * nothingmuch is learning how to be an american couch potato

[03:15] <nothingmuch> beer + sitting

[03:15] <nothingmuch> no tv yet though

[03:15] <nothingmuch> that's the advanced course

[03:15] <unobe> hehe, welcome to the club :-)

[03:16] <unobe> how many days until you graduate to the advanced course?

[03:16] <nothingmuch> i dunno

[03:16] <nothingmuch> but clkao is a bad influence on my studies

[03:16] <nothingmuch> we're going camping tomorrow

[03:16] <nothingmuch> well, s/camping/hiking/ really

[03:17] <unobe> ivanfrey: i still have panther, so I'll try to install it on my laptop, and build an image for panther later this weel

[03:17] <unobe> s/weel/week/

[03:17] <nothingmuch> ooh! food

[03:17] <unobe> ah sweet!

[03:17] *** weinig is now known as weinig|sleeping

[03:17] <unobe> which mountain range are you doing again?

[03:18] <unobe> ivanfrey: or you can tell me what libraries, and I can see if just copying them over to your comp will work for now.

[03:19] <unobe> from what i remember, they were just newer versions of libraries, so i think they can co-exist with the ones already present on panther

[03:24] <ivanfrey> unobe: wait a sec, i'm on the phone.

[03:25] <unobe> k

[03:26] *** stevan joined
[03:29] <clkao> sb end

[03:30] <unobe> clkao: i just switched to irssi :-)

[03:30] <svnbot6> r11182 | clkao++ | Parse :$foo, which is a pair foo => $foo.

[03:32] <unobe> i love /sb command, which, with my little knowledge of ircii, wasn't available in ircii

[03:32] *** sanug joined
[03:32] <audreyt> what does /sb do?

[03:32] <audreyt> sanug: yeah :)

[03:33] <sanug> Over here now ... newbie on irc - you were first reason for me to learn...

[03:33] <unobe> audreyt: scrollback

[03:34] <unobe> so /sb home goes to the start of the session, /sb goto HH:MM:SS goes to a certain time in the past, and /sb end goes to the end

[03:35] <sanug> What about the Main.p6 and CGI.p6 examples - those would seem unlikely candidates - yes?

[03:35] *** nothingmuch_ joined
[03:36] <ivanfrey> unobe: sorry 'bout that but the phone rang. I'm building pugs right now but I don't know what I'm going to get because I had lot of configure statements that said this was missing and that was missing and what not. Anyhow I tried to get the build I downloaded from your site running by searching for libperl.dylib and putting that where the build expected to find it. Bad idea because it just wasn't the right version

[03:36] <nothingmuch_> clkao++; # great food

[03:36] <nothingmuch_> nothingmuch: you need your modem fixed

[03:36] <audreyt> sanug: unlikely candidates?

[03:37] <unobe> oh wow! i just typed /help scrollback and the other stuff i didn't know about: clear, status, redraw

[03:37] <clkao> nothingmuch_: glad you like it ;)

[03:37] <sanug> Would CGI.pm build to javaScript?

[03:37] <unobe> sweetness.

[03:37] <audreyt> sanug: why would it not?

[03:37] <audreyt> sanug: it involves no disk access

[03:38] <audreyt> so persumably you can write a web server in javascript with it

[03:38] <audreyt> and in fact, someone did that with javascript

[03:38] <sanug> audreyt: the mind reels - I am still getting my head around this...

[03:39] <audreyt> but well, Test.pm is a more neutral target

[03:39] <audreyt> and you can s/CGI.pm/Test.pm/g with not much effort

[03:40] <clkao> audreyt: help me get pc-p6 use lib ext/test/lib for make test ;0

[03:40] <sanug> audreyt: Also the virtual machine on the left of the Perl6 to JavaScript - We would be using Parrot - or something else?

[03:40] <sanug> audreyt: s/left/right/

[03:41] <clkao> is it almost christmas?

[03:41] * nothingmuch_ needs better minion locators

[03:41] <unobe> ivanfrey: hmm...if i remember correctly, a new version of libncurses was needed

[03:41] <ivanfrey> unobe: my build just failed. just hold on a sec while I'll post the error.

[03:41] <unobe> you didn't have a problem with that?

[03:42] <unobe> k

[03:42] <ivanfrey> Compiling Pugs             ( src/Pugs.hs, dist/build/src/Pugs.o )

[03:42] <ivanfrey> ar: creating archive dist/build/libHSPugs-6.2.12.a

[03:42] <ivanfrey> *** Building: /usr/local/bin/ghc -hide-all-packages -package stm -package network -package mtl -package template-haskell -package base -package pugs-fps -package pugs-HsSyck -package unix -idist/build -Ldist/build -idist/build/src -Ldist/build/src -o pugs src/Main.hs -lHSPugs-6.2.12 -threaded

[03:42] <ivanfrey> ld: archive: /Users/ivanfrey/Downloads/Perl6-Pugs-6.2.12/dist/lib/pugs-HsSyck-0.1/libHSpugs-HsSyck-0.1.a has no table of contents, add one with ranlib(1) (can't load from it)

[03:42] <ivanfrey> ld: archive: /Users/ivanfrey/Downloads/Perl6-Pugs-6.2.12/dist/lib/pugs-fps-0.7/libHSpugs-fps-0.7.a has no table of contents, add one with ranlib(1) (can't load from it)

[03:43] <ivanfrey> Build failed: 256 at util/build_pugs.pl line 217.

[03:43] <ivanfrey> make: *** [pugs] Error 2

[03:44] <audreyt> sudo ranlib /Users/ivanfrey/Downloads/Perl6-Pugs-6.2.12/dist/lib/*/*.a

[03:44] <audreyt> and then "make"

[03:45] <svnbot6> r11183 | clkao++ | don't skip when test failed to run.  This depends on audreyt++'s fix

[03:45] <svnbot6> r11183 | clkao++ | for make test to set PERL6LIB to ext/Test/lib to work.

[03:47] * nothingmuch_ is slowly discovering that types in Perl 6 are going to be much more useful than for just self documenting code and safety and speed

[03:47] <nothingmuch_> but in fact brevity too

[03:48] <audreyt> ivanfrey: does that work?

[03:49] <clkao> nothingmuch_: now you discover...

[03:49] <audreyt> clkao: there you go.

[03:49] <nothingmuch_> clkao: i never thought i'd use coercions as much as I do now

[03:49] <nothingmuch_> and how much they actually help ergonomics

[03:50] <clkao> nothingmuch_: you need more beer to understand many things

[03:50] <svnbot6> r11184 | audreyt++ | * Pugs-Compiler-Perl6 - Makefile.PL: Add PERL6LIB as requested by clkao

[03:50] <svnbot6> r11184 | audreyt++ |   so that the 08-test.t always passes.

[03:50] <clkao> audreyt: yay

[03:51] <clkao> so requestor doesn't get ++ on the comment log ;)

[03:51] <nothingmuch_> clkao: actually the beer is at the stage where it's slowing me down

[03:51] <clkao> orz

[03:51] <clkao> system($^X, '-p', '-i.old', '-e', 's,PERL_DL_NONLAZY=1,PERL6LIB=../../ext/Test/lib,g', 'Makefile');

[03:52] <ivanfrey> audreyt, unobe: well my build just failed, but for some other reason. But before I proceed further I have Perl installed via Fink in /sw/bin/perl and the build scripts are finding this version of Perl presumably because it's in my path. Is this bad?

[03:53] <unobe> ivanfrey: export PATH:/usr/bin:$PATH

[03:53] <unobe> the perl that comes with 10.3.9 should be fine

[03:54] *** justatheory joined
[03:54] <unobe> oops. s/export PATH:/export PATH=/

[03:57] *** MenTaLguY joined
[03:59] <ivanfrey> Could not find module `Data.Yaml.Syck':

[03:59] <ivanfrey>   use -v to see a list of the files searched for

[03:59] <ivanfrey>   (imported from src/Pugs/AST/Internals/Instances.hs)

[03:59] <ivanfrey> Build failed: 256 at util/build_pugs.pl line 120.

[03:59] <ivanfrey> make: *** [pugs] Error 2

[03:59] <ivanfrey> I fixed PATH, but I'm getting this error now.

[03:59] <clkao> audreyt: btw 10moose isnt compiling moose1.pm at all

[03:59] <clkao> weird

[04:01] <sanug> audreyt: re: perl6_compile: Page on  Perl 6 on Perl 6 - is it still a pretty printer as stated in the plan or now more advanced?

[04:01] <unobe> ivanfrey: sometimes i've gotten that error. try running make again

[04:02] <audreyt> ivanfrey: try the alternative path:

[04:02] <audreyt> cd third-party/HsSyck/ ; ../../Setup configure ; ../../Setup build ; sudo ../../Setup instal

[04:02] <unobe> or even ./configure again

[04:02] <audreyt> cd third-party/HsSyck/ ; ../../Setup configure ; ../../Setup build ; sudo ../../Setup install

[04:02] <audreyt> and then go back to "make"

[04:02] <audreyt> on the toplevel

[04:05] <audreyt> clkao, fglock: t/10-moose1.t fails here - known? or do I have an old moose?

[04:05] <clkao> audreyt: no, it's not compiling moose1.pm at all

[04:05] <clkao> i suspect something module-compile-y

[04:05] <clkao> nothingmuch_: we should book the car

[04:06] <nothingmuch_> clkao: could you do that?

[04:06] <ivanfrey> audreyt: in the ../../Setup build step there is a

[04:06] <nothingmuch_> i'm really not sure which you prefer

[04:06] <clkao> nothingmuch_: i don't care

[04:07] <nothingmuch_> i'd say we should pick it up at 19:00 and return it at 23:00

[04:07] <clkao> as long as we don't have to go all the way to the airport

[04:07] <nothingmuch_> i thought you had various milage deals

[04:07] <clkao> don't seem to worth it

[04:08] <nothingmuch_> what's jesse's address?

[04:08] <nothingmuch_> Ibbetson?

[04:08] <nothingmuch_> 23

[04:08] <nothingmuch_> nevermind

[04:08] <ivanfrey> Argggg pressed return by mistake ... is a "ar: creating archive dist/build/libHSpugs-HsSyck-0.1.a" statement. Should I run ranlib on this file?

[04:08] <audreyt> yes.

[04:08] <audreyt> with sudo if needed

[04:09] <audreyt> I think GHC 6.4.1 doesn't know about OSX needing to run ranlib

[04:10] <ivanfrey> audreyt: GHC 6.4.2 is coming soon for Mac OS X. Do you think it's worth reporting this bug to them? Is it a bug?

[04:11] <vsoni> audreyt: Any good sites to learn Haskell

[04:12] <audreyt> ivanfrey: it is a bug, and I believe it's fixed; if you want to check, you can finish building pugs first

[04:12] <audreyt> and upgrade your Cabal

[04:12] <nothingmuch_> clkao: herz at $125

[04:12] <audreyt> and see if it's indeed fixed

[04:12] <nothingmuch_> pick up at 17:00

[04:12] <nothingmuch_> drop off at 11pm friday

[04:13] <nothingmuch_> .1 miles from jesse's house

[04:13] <audreyt> Cabal 1.1.4 is available from http://haskell.org/cabal/download.html

[04:13] <nothingmuch_> hyundai accent

[04:13] <lambdabot> Title: "The Haskell Cabal"

[04:13] <audreyt> vsoni: check out the READTHEM file in pugs.

[04:14] <nothingmuch_> we can upgrade it for $5 to a midsize chevy

[04:14] <nothingmuch_> err, $7

[04:14] <nothingmuch_> or for $24 to a ford taurus

[04:14] <nothingmuch_> i don't think that's necessary, right?

[04:16] <nothingmuch_> ugh

[04:16] <nothingmuch_> it doesn't support .il for phone numbers

[04:16] <nothingmuch_> clkao: please do the reg yourself

[04:16] <nothingmuch_> i have the page open

[04:16] <clkao> coming

[04:18] *** sanug joined
[04:19] <audreyt> ivanfrey: once you've got this working, please run util/package-osx.pl

[04:20] <audreyt> unobe: do we have a build for 6.2.12-release?

[04:20] <audreyt> for 10.4 powerpc

[04:20] <audreyt> ivanfrey: so other people can get a binary installation without having to download or dance with ghc

[04:20] *** guaumiau joined
[04:22] <clkao> audreyt: oh the use lib is translated bad. fixing

[04:23] <ivanfrey> audreyt: when I saw Damian's code examples, he was running pugs on Tiger I believe. Anyhow I've successfully built it. Just need to install it I guess, but wait there is a make test step.

[04:24] <audreyt> ivanfrey: G4 CPU?

[04:24] <unobe> audreyt: not yet. i remember some of the smoke tests were failing, and had uploaded the smoke report: http://xrl.us/oear

[04:24] <audreyt> on single CPU G4, depending on memory, the test can take up to 3 hours.

[04:24] <lambdabot> Title: "TAP Matrix - Tue Jun 27 22:41:20 2006 GMT"

[04:25] <audreyt> unobe: right, but those are embparrot tests, no?

[04:25] <unobe> ahhh...right. sorry bout that. i'm rebuilding as we speak.

[04:25] <audreyt> ivanfrey: you can ensure that Pugs is basically sane by running

[04:25] <ivanfrey> audreyt: mine's a G4, I don't know about Damian's.

[04:25] <unobe> err...type

[04:25] <audreyt> env PERL_HARNESS=./pugs prove t/01-sanity/*.t

[04:26] <audreyt> if that passes, "sudo make install" and run the package script in utils should work

[04:26] <ivanfrey> audreyt: Oh, you were talking about mine.

[04:26] <audreyt> yeah

[04:26] <audreyt> if you are going to run "make test", maybe download Bundle::Pugs::SmokeKit from CPAN first

[04:26] <audreyt> and run a "make smoke upload-smoke" instead

[04:27] <audreyt> so that other people can see the smoke test results

[04:27] *** MenTaLguY left
[04:28] <unobe> ivanfrey, audreyt: PREFIX, as far as I knew, wasn't working, so I had changed the Makefile.PL to install to /usr/local

[04:28] <audreyt> ivanfrey: ivan dot frey at utronto dot ca?

[04:28] <audreyt> unobe: yeah, rafl subsequently fixed that on trunk

[04:28] <unobe> ah sweet

[04:28] <audreyt> so maybe try trunk again?

[04:29] <audreyt> rafl however havn't uncommented the "copy" lines from Makefile.PL so Pugs still wouldn't install as GHC libraries

[04:29] <ivanfrey> audreyt: utoronto

[04:29] <audreyt> ivanfrey: right. a commit bit is on its way to you

[04:29] <audreyt> you can checkin http://svn.openfoundry.org/pugs/ using that usernamd/passwd and with subversion

[04:29] <lambdabot> Title: "Revision 11075: /"

[04:29] *** merlyn joined
[04:30] <merlyn> in the current "v6.pm" in the cpan - Can't locate inc/Module/Install/Admin.pm in @INC

[04:30] * merlyn sighs

[04:30] <nothingmuch_> oi, bad make dist

[04:30] <audreyt> merlyn: fixing

[04:30] <audreyt> merlyn: fixed

[04:30] <audreyt> reuploading

[04:30] *** frederico joined
[04:31] <ivanfrey> audreyt:  please excuse my ignorance, but what's a commit bit?

[04:31] <merlyn> 12.5 cents, same as in town. :)

[04:31] <merlyn> sorry, old joke, bad joke

[04:32] <nothingmuch_> ivanfrey: the ability to check in code

[04:32] <nothingmuch_> a user in the SVN server

[04:32] <nothingmuch_> ivanfrey: if you have an email we can give you one

[04:33] <audreyt> nothingmuch_: I already gave him one.

[04:33] <nothingmuch_> oh

[04:33] <audreyt> ivanfrey: it is the login to write access to the pugs source repository with subversion

[04:34] <clkao> audreyt: 10moose now passes. but if you see moose1.pmc, it's doing the wrong thing having the use lib for PERL6LIB - because it thinks itself being main, before it actually turned into "class main'

[04:34] <svnbot6> r11185 | clkao++ | Make 10-moose pass - emitting import list for use lib.

[04:35] <clkao> audreyt: same thing for test.pmc

[04:35] <audreyt> k

[04:35] <audreyt> fglock: I'll rename v6-pugs to v6 in dist

[04:36] <audreyt> fglock: also I wonder if it's okay to rename perl5/Pugs-Compiler-Perl6/ to perl5/v6/

[04:36] <audreyt> to save typing and all

[04:38] <clkao> mmm

[04:40] <svnbot6> r11186 | audreyt++ | * "use v6-pugs" is now "use v6-**" for neutrality.

[04:41] <ivanfrey> audreyt: do I have to run make install and /util/whatever before I run make smoke upload-smoke?

[04:41] *** mdiep joined
[04:41] <audreyt> no.

[04:43] <audreyt> TimToady: "use v6-**" triggers -w

[04:43] <audreyt> rather unfortunate

[04:43] <clkao> :(

[04:44] <audreyt> Argument "*main::*" isn't numeric in negation (-) at -e line 1.

[04:45] <clkao> audreyt: 08-test.t no longer works

[04:45] <audreyt> due to ** ?

[04:46] <ivanfrey> audreyt: ok, the prerequisites of Bundle::Pugs::SmokeKit are Perl 5.6.1 or 5.8.3 whereas the Perl that comes with 10.3.9 is 5.8.1. This might be a problem.

[04:46] <clkao> audreyt: ya :/ i don't know why

[04:47] <audreyt> ivanfrey: oh?

[04:47] <audreyt> hm.

[04:47] <audreyt> where is such a prepreq decled?

[04:48] <ivanfrey> audreyt: in the pod for this module.

[04:48] <audreyt> aha.

[04:48] <audreyt> nothingmuch_: your doing?

[04:49] <ivanfrey> audreyt: oh sorry, I've misread the pod.

[04:49] <svnbot6> r11187 | sanug++ | Moving pugs/docs/perl6_compilation.pdf to perl6_compilation with the HTML and JPEG files

[04:50] <ivanfrey> audreyt:  it actually refers to Perl6::Pugs

[04:50] <audreyt> clkao: fixed

[04:51] <nothingmuch_> audreyt: what did I do?

[04:51] <audreyt> nothingmuch_: nothing much

[04:51] <audreyt> sorry, false alarm

[04:51] <nothingmuch_> WHAT HAPPEN?

[04:51] <clkao> whhot

[04:51] <nothingmuch_> SOMEBODY SET UP US THE BOMB

[04:51] <audreyt> ok. now let's think about this ** business.

[04:51] <svnbot6> r11188 | audreyt++ | * Pugs::Grammar::Term - parse "use v6-**" as valid.

[04:52] <audreyt> it seems that -_ and -() and -0 and -any and -Any and -pugs are valid

[04:53] <audreyt> since -bareword and -digit works

[04:54] <audreyt> hm, what to do what to do.

[04:55] <audreyt> oh well, it can always wait another day. releasing as v6-pugs.

[04:57] <audreyt> clkao: give us a Data::Bind without underscore please?

[04:57] <svnbot6> r11189 | sanug++ | Updated Perl 6 on JavaScript page to correct title

[04:57] <audreyt> (can't release this on CPAN with an underscore dep)

[04:57] <clkao> :/

[04:57] <clkao> should we do v6 release?

[04:58] <clkao> audreyt: also 08 might want to skip if there's no ../../ext/Test

[04:58] <audreyt> clkao: also you actually require 0.09 of Devel::Caller

[04:58] <audreyt> and also test::exception

[04:58] <svnbot6> r11190 | audreyt++ | * revert v6-** back to v6-pugs because, well, ** triggers perl -w,

[04:58] <svnbot6> r11190 | audreyt++ |   and "make test" uses -w.

[04:58] <audreyt> so register them and release D::B?

[04:58] <audreyt> I'll get v6 packed up with a t/Test.pm in it

[04:59] <clkao> sounds good

[05:00] <clkao> uploaded

[05:00] <svnbot6> r11191 | audreyt++ | * update dependencies. this be v6.pm 0.004.

[05:00] <svnbot6> r11192 | audreyt++ | * This be v6, 0.0004.

[05:00] *** vsoni left
[05:02] *** sanug left
[05:02] <svnbot6> r11193 | clkao++ | Data-Bind 0.25

[05:03] *** nothingmuch joined
[05:03] <clkao> audreyt: bah, you didn't make the test.pm

[05:03] <audreyt> clkao: huh?

[05:04] <clkao> 05:58 < audreyt> I'll get v6 packed up with a t/Test.pm in it

[05:04] <audreyt> yes?

[05:05] <clkao> but you release 004 without it ?

[05:08] <audreyt> 005 :)

[05:08] <svnbot6> r11194 | audreyt++ | * v6 0.0005 to fix ChangeLog and mispackaging

[05:09] <clkao> butstill no t/Test.pm ?

[05:09] <audreyt> no way

[05:10] <audreyt> I didn't check it in doesn't mean it's not in the pkg

[05:10] <audreyt> :)

[05:10] <clkao> is it in the manifest? ;)

[05:10] <audreyt> merlyn: give the new Data::Bind and v6 a try?

[05:10] <audreyt> why, it is

[05:10] <clkao> intersting

[05:11] <audreyt> merlyn: check pause incoming

[05:14] <audreyt> clkao: I'm getting

[05:14] <audreyt> t/07-tailcall......Use of uninitialized value in concatenation (.) or string at /Users/audreyt/tmp/v6-pugs-0.005/blib/lib/Pugs/Emitter/Perl6/Perl5.pm line 515.

[05:14] <audreyt> Use of uninitialized value in concatenation (.) or string at /Users/audreyt/tmp/v6-pugs-0.005/blib/lib/Pugs/Emitter/Perl6/Perl5.pm line 515.

[05:16] <clkao> ya. dunno what changed

[05:16] <clkao> will look after shower

[05:16] <clkao> but probably not important

[05:16] <audreyt> $name is under perhaps?

[05:16] <audreyt> s/under/undef

[05:16] <audreyt> yeah.

[05:16] <clkao> name shold be there

[05:17] <clkao> fixed

[05:17] <clkao> need multisub

[05:18] <gaal> sup yo

[05:18] *** ivanfrey joined
[05:20] <svnbot6> r11195 | clkao++ | Fix a warning emitting empty signature.

[05:22] <ivanfrey> audreyt: How do I install Bundle::Pugs::SmokeKit?

[05:22] <audreyt> ivanfrey: cpan Bundle::Pugs::SmokeKit

[05:22] <audreyt> sudo as neede

[05:22] <audreyt> d

[05:23] <gaal> http://irc.pugscode.org/ is down?

[05:24] <gaal> (but http://colabti.de/irclogger/irclogger_log/perl6 is up)

[05:24] * clkao . o O (Bundle::v6)

[05:26] <ivanfrey> GOT /Users/ivanfrey/.cpan/sources/modules/03modlist.data.gz

[05:26] <ivanfrey> Going to read /Users/ivanfrey/.cpan/sources/modules/03modlist.data.gz

[05:26] <ivanfrey> Going to write /Users/ivanfrey/.cpan/Metadata

[05:26] <ivanfrey> Warning: Cannot install Bundle::Pugs::SmokeKit, don't know what it is.

[05:26] <ivanfrey> Try the command

[05:26] <ivanfrey>     i /Bundle::Pugs::SmokeKit/

[05:26] <ivanfrey> to find objects with matching identifiers.

[05:27] <gaal> urp? do other modules install OK?

[05:28] <gaal> ivanfrey: try for example 'cpan YAML::Syck'

[05:28] <ivanfrey> This was the tail end of the result of perl -MCPAN -e 'install Bundle::Pugs::SmokeKit'

[05:29] <gaal> does this work?   perl -MCPAN -e 'install "YAML::Syck"'

[05:29] <gaal> (have you installed cpan modules on this machine before?)

[05:30] <audreyt> gaal: you going to join the 'thoners tomorrow?

[05:31] <audreyt> afternoon that is

[05:31] <gaal> thoning?

[05:31] <gaal> sure

[05:31] <audreyt> @ obra's office

[05:31] <ivanfrey> gaal: no I haven't installed cpan modules at all.

[05:31] <gaal> i was just meeting two local friends today

[05:31] <audreyt> cool. I'd like to get MM mapped

[05:31] <audreyt> to P6AST

[05:31] <gaal> good

[05:32] <audreyt> very happy that Test.pm and 01-sanity/* runs from v6.pm land

[05:32] <ivanfrey> audreyt: I'm getting this error:

[05:32] <gaal> I can use some time near the eye of the insanitorm

[05:32] <audreyt> which means we can deploy+test on both hs and p5 rapidly without worrying too much about surface scaffolding

[05:32] <ivanfrey> Trying with "/bin/wget -O -" to get

[05:32] <ivanfrey>     ftp://ftp.perl.org/pub/CPAN/authors/01mailrc.txt.gz

[05:32] <ivanfrey> --01:26:35--  ftp://ftp.perl.org/pub/CPAN/authors/01mailrc.txt.gz

[05:32] <ivanfrey>            => `-'

[05:32] <ivanfrey> Resolving ftp.perl.org... 192.75.95.80, 142.132.65.108

[05:32] <gaal> audreyt: yes that is quite spectacular! CBS doesn't know it, but the fireworks were for that?

[05:32] <ivanfrey> Connecting to ftp.perl.org[192.75.95.80]:21... connected.

[05:32] <ivanfrey> Logging in as anonymous ... Logged in!

[05:33] <ivanfrey> ==> SYST ... done.    ==> PWD ... done.

[05:33] <ivanfrey> ==> TYPE I ... done.  ==> CWD /pub/CPAN/authors ... done.

[05:33] <ivanfrey> ==> PORT ... done.    ==> RETR 01mailrc.txt.gz ...

[05:33] <audreyt> gaal: might be

[05:33] <ivanfrey> Error in server response, closing control connection.

[05:33] <ivanfrey> Retrying.

[05:33] <mdiep> so if Perl6 has n-backends, something like DBI will require n implementations? (even if they share most of the underlying code)

[05:33] <audreyt> ivanfrey: that's... usual.

[05:33] <audreyt> mdiep: yes, very good analogy

[05:33] <gaal> does that mean your net setup is unhappy with FTP active mode?

[05:34] <gaal> ivanfrey: try an HTTP mirror?

[05:34] <audreyt> ivanfrey: export  FTP_PASSIVE=1

[05:34] <audreyt> and try again

[05:34] <audreyt> s/export/setenv/ if you are on tcsh

[05:34] <audreyt> for my life I never understood why that is not the default.

[05:34] <gaal> 2nd that :(

[05:35] <audreyt> actually I do understand

[05:35] <gaal> audreyt: actually I think there are versions of Net::whatever it is that ignore that setting

[05:35] <audreyt> some early broken servers did not impleent PASV

[05:35] <audreyt> but all servers (allegedly) support active

[05:35] <gaal> ISTR I had to hack a hardcoded value in the installed module :(

[05:35] <audreyt> so the one is default

[05:35] <audreyt> gaal: LWP.

[05:36] <gaal> yeah but of course not all firewalls do

[05:36] <audreyt> LWP::Protocol::MyFTP

[05:36] <audreyt> I had to

[05:36] <audreyt>     my $self = $class->SUPER::new(@_, Passive => 1) || return undef;

[05:36] <gaal> do new perls ship with something that speaks http?

[05:36] <audreyt> gaal: not afaic

[05:36] <gaal> perl--

[05:36] <gaal> that makes new installations fiteen times more difficult than they need to be

[05:37] <audreyt> yeah.

[05:38] <audreyt> though, Perl 5.10 would ship with CPANPLUS

[05:38] <audreyt> which does force passive.

[05:38] <ivanfrey> audreyt: same error doesn't know what Bundle::Pugs::SmokeKit is.

[05:39] <gaal> ivanfrey: do you maybe have wget installed?

[05:39] <audreyt> ivanfrey: hm. type

[05:39] <audreyt> sudo cpan

[05:39] <audreyt> and then

[05:39] <audreyt> force install YAML URI MkDoc::XML Petal Test::TAP::Model Test::TAP::HTMLMatrix Best

[05:39] <audreyt> and see if that works?

[05:40] <gaal> audreyt: I think he doesn't have the index

[05:40] <gaal> so first order of business is fixing transport for him.

[05:40] <audreyt> oh right

[05:40] <gaal> ivanfrey: if you do have wget, please try:

[05:40] <audreyt> have to force reload.

[05:40] <gaal> cpan

[05:41] <gaal> > o conf urllist unshift http://www.perl.org/CPAN/

[05:41] <lambdabot>  Parse error

[05:41] <lambdabot> Title: "CPAN"

[05:41] <gaal> > o conf commit

[05:41] <lambdabot>  Not in scope: `commit'

[05:41] <gaal> > reload index

[05:41] <lambdabot>  Not in scope: `reload'

[05:41] <gaal> shush lambdabot

[05:41] <gaal> and then try the d/l again

[05:43] <gaal> if you do NOT have wget installed, you need to go to search.cpan.org and manually d/l a library that does http

[05:44] <ivanfrey> gaal: No, I have wget.

[05:44] <gaal> whew (geting lwp w/o something that fetches dependencies for you is painful)

[05:44] * gaal has done it several times on broken windows boxes

[05:46] <ivanfrey> gaal: there's a newer version of cpan I'm installing now.

[05:49] <clkao> audreyt: does devel::caller test pass for you?

[05:49] <clkao> audreyt: it's failing bizzarely for me. got and expected are the same

[05:50] <audreyt> not on win32

[05:50] <clkao> darwin?

[05:50] <audreyt> testing

[05:50] <audreyt> same failure mode. hmm

[05:50] <clkao> you meant you didn't test when you installed it?

[05:50] <clkao> ok, i am pinging richardc

[05:50] <audreyt> my cpanp is set to perpetual skiptest.

[05:51] <clkao> ...

[05:51] <clkao> orz

[05:51] <gaal> sure speeds it up!

[05:51] <clkao> can you do that in bundle file?

[05:51] <audreyt> gaal: exactly!

[05:51] <audreyt> clkao: no

[05:51] <clkao> nothingmuch: don't fall asleep hugging your laptop

[05:51] <gaal> clkao: too late

[05:52] <gaal> it would be cool to intercept the packets from last.fm and send him a wake up call

[05:57] <gaal> zzZ&

[06:02] <ivanfrey> audreyt: the Bundle::Pugs::SmokeKit install is asking whether I want the EUMM installer or the MB installer.

[06:02] <audreyt> you want EUMM, I think.

[06:04] <audreyt> shower, bbiab &

[06:13] <gaal> audreyt: maybe nothing at all is not as good as a mock shebang

[06:13] <audreyt> #!mock

[06:13] <audreyt> ?

[06:13] <gaal> # this is a perl6 program

[06:13] <gaal> not recognized by perl or unix

[06:13] <audreyt> #!perl6 ?

[06:13] <gaal> no, not a shebang

[06:14] <audreyt> $ echo '#!moose' > moose ; perl moose

[06:14] <audreyt> Can't exec moose at moose line 1.

[06:14] <gaal> because #!perl6 would be bad too

[06:14] <audreyt> indeed

[06:14] <gaal> sorry, "mock" was the wrong word

[06:14] <audreyt> that's another thing for bleadperl to address

[06:14] <gaal> non-#! line but still a comment

[06:14] <audreyt> well

[06:14] <audreyt> use v6-pugs

[06:14] <audreyt> would be that comment

[06:14] <audreyt> I think.

[06:15] <audreyt> use v6-perl; # unless it's this to be more explicit

[06:15] <audreyt> but we can sort out the -suffix mess tomorrow; it was -pugs, let's stay -pugs for tonight :)

[06:16] <gaal> if only because some day we'll want (maybe) to perl -pi -e to another real shebang

[06:16] <gaal> and having a neutral marker will make that easier

[06:16] <gaal> w/o falling into files that aren't tests under t/

[06:17] <audreyt> well, we'll do a

[06:17] <gaal> "# this is a perl6 program" works

[06:17] <ivanfrey> audreyt: I'm giving up for tonight. Gotta get some sleep.

[06:17] <audreyt> perl -pi -e 's/^use v6-pugs;/#!realshebang\n$&/'

[06:17] <audreyt> ivanfrey: that is a wise choice

[06:17] <audreyt> ivanfrey: at least we made progress...

[06:17] <audreyt> ivanfrey: sorry for the pain :)

[06:18] * gaal wonders why B:P:SK has an installer at all, being a bundle, but it being 2:18 precludes his further inquiry

[06:19] * audreyt suggests gaal retool it into Task::Pugs

[06:19] <audreyt> or Task::Smoke

[06:19] <gaal> not toniht though

[06:19] <audreyt> definitely tonight

[06:19] <audreyt> which is to say, ~18 hours from now

[06:19] <gaal> that sounds like a good schedule to me

[06:19] <audreyt> :)

[06:19] <gaal> moose moose

[06:20] <audreyt> moose moose

[06:20] <audreyt> shower for real &

[06:20] <gaal> i still have a niggling feeling a dummy line wold be helpful but don't know why

[06:20] <gaal> night for real &

[06:20] <ivanfrey> audreyt: Yes we did make some progress. Take Care.

[06:20] <audreyt> you too :)

[06:21] <audreyt> clkao: it's taking forever to commit

[06:22] *** lisppaste3 joined
[06:29] <clkao> audreyt: :(

[06:36] <svnbot6> r11196 | audreyt++ | * Sweeping change over all t/*.t t/*.pm files to make them executable with perl5.

[06:36] <svnbot6> r11196 | audreyt++ | * All the #! lines are gone.

[06:36] <svnbot6> r11196 | audreyt++ | * All the "use v6;" lines are replaced with "use v6-pugs;".

[06:36] <audreyt> clkao: there you go

[06:36] *** mjk joined
[06:42] <dduncan> audreyt, didn't you use update S11 to be implementation neutral, such as "use v6-**"?  ... that sounds like a step backwards then

[06:42] <audreyt> dduncan: yeah indeed.

[06:42] <dduncan> or is it okay because they're bundled with pugs?

[06:42] <audreyt> $ perl -we 'use v6-**'

[06:42] <audreyt> Argument "*main::*" isn't numeric in negation (-) at -e line 1.

[06:43] <audreyt> it is not okay

[06:43] <audreyt> it's just ** fails -w

[06:43] <audreyt> "make test" defaults to -w

[06:43] <audreyt> so we either find someway to subtly circumvent -w

[06:43] <audreyt> (which is unlikely)

[06:43] <audreyt> or switch back to

[06:43] <audreyt> use v6-()

[06:43] <audreyt> or use a bareword

[06:43] <audreyt> use v6-0

[06:43] <audreyt> use v6-any

[06:43] <audreyt> use v6-perl

[06:43] <audreyt> that is the leading candidates

[06:43] <dduncan> maybe put a 'no warnings' block around that? ... or that could be worse

[06:43] <audreyt> I think that's worse

[06:44] <audreyt> as the idea is to let people effortlessly write perl6 code

[06:44] <audreyt> that can be run in both perl5 and pugs

[06:44] <audreyt> so far, I like

[06:44] <audreyt> use v6-perl;

[06:44] <audreyt> best

[06:44] <audreyt> but I can certainly live with v6-() or v6-0 or any of the other alternatives.

[06:45] <dduncan> if you want to be open-ended, the use v6-any seems closest in spirit to v6-**

[06:45] <dduncan> in my opinion

[06:45] <audreyt> yeah.

[06:45] <audreyt> I like v6-perl because it's more self-descriptive

[06:45] <audreyt> especially now we don't have #! anymore

[06:45] <audreyt> it makes people see that "it's the version 6 of perl"

[06:47] <audreyt> but otherwise I like -any

[06:47] <audreyt> has the spirit of "anydbm"

[06:48] <audreyt> in any case, this thing can wait till tomorrow with putter timtoady etc are all awake

[06:48] <dduncan> now, what about ext/ modules etc?  some or all of them still use shebang lines; should those be changed to be like the tests?

[06:49] <audreyt> dduncan: I think so, but not before we 1)make the tests work with v6.pm

[06:49] <audreyt> and 2)decide what -suffix to use

[06:49] <dduncan> good idea

[07:04] *** kane_ joined
[07:06] <clkao> kane!

[07:06] <kane_> hey cl

[07:06] <clkao> how are you

[07:06] <kane_> tired :) but only 3 more days till a month of vacation :)))

[07:06] <clkao> we've just released a v6.pm that compiles perl6 Test.pm

[07:06] <clkao> whoot

[07:07] <kane_> gratz :)

[07:07] <kane_> its' going nicely i see

[07:07] <clkao> so you are going honeymoon before wedding?

[07:07] <kane_> nope, somewhere in the fall, when weather is crap again :)

[07:08] <kane_> so, what's your visa status saying?

[07:08] *** SM_ax joined
[07:09] <clkao> i think i can go back to uk

[07:10] <clkao> pugs still takes forever to compile on my laptop

[07:11] <kane_> so does perl5 though :)

[07:11] <kane_> so the plan is to reside in the uk for now then? at least that's a place where we can come look you up :)

[07:12] <clkao> for a while

[07:12] <clkao> i don't know yet.  attempting to plan makes me sad

[07:12] <kane_> hah

[07:12] <kane_> is it now the P*** word?

[07:15] *** cognominal joined
[07:18] *** typester joined
[07:30] <clkao> audreyt: pugs -BPerl5 needs to be smart about perl5lib

[07:31] *** Aankhen`` joined
[07:31] <clkao> audreyt: and perl6lib

[07:36] <audreyt> clkao: how, exactly?

[07:44] *** renormalist joined
[07:44] *** drrho joined
[07:46] <clkao> audreyt: should the perl5/* things go under blib rather than blib6/pugs/perl5 ? -M really hates the latter, because there is ../../../../blib

[07:46] <clkao> orz

[07:54] *** bsb_ left
[08:10] <audreyt> clkao: sorry, need to sleep now. let's continue tomorrow

[08:37] *** cognominal joined
[08:45] *** Aankh|Clone joined
[08:59] *** kanru joined
[09:00] *** Aankh|Clone is now known as Aankhen``

[09:09] *** elmex joined
[09:13] *** kanru joined
[09:16] *** visq joined
[09:36] *** joples joined
[09:44] *** SM_ax joined
[09:49] *** Aankhen`` joined
[09:51] *** elmex joined
[09:57] *** froh-doh joined
[09:59] *** drbean joined
[10:03] *** dduncan left
[10:09] *** buetow joined
[10:41] *** mauke joined
[11:04] *** nothingmuch joined
[11:08] *** chris2 joined
[11:08] *** frederico joined
[11:10] *** lisppaste3 joined
[11:15] *** bpphillips joined
[11:32] *** EarleMartin left
[11:34] *** ludan joined
[11:52] *** Nouk joined
[12:00] *** bpphillips left
[12:02] *** Nouk left
[12:23] *** weinig|sleeping is now known as weinig|away

[12:40] *** Limbic_Region joined
[12:47] *** Debolaz2 joined
[12:53] *** vel joined
[12:57] *** ruz joined
[13:00] *** lollan joined
[13:02] *** ivanfrey joined
[13:04] <ivanfrey> audreyt: Maybe I copied this command wrong:

[13:04] *** christopher joined
[13:05] <ivanfrey> env PERL_HARNESS=./pugs prove t/01-sanity/*.t

[13:05] <ivanfrey> env: prove: No such file or directory

[13:05] <pasteling> "broquaint" at 217.206.131.214 pasted "An idea to simplify installing Pugs::Compiler::Regex rules" (30 lines, 535B) at http://sial.org/pbot/18224

[13:07] <broquaint> You need Test::Harness installed, ivanfrey.

[13:07] <broquaint> http://search.cpan.org/~petdance/Test-Harness-2.62/

[13:07] <lambdabot> Title: "Andy Lester / Test-Harness-2.62 - search.cpan.org"

[13:10] <broquaint> Or not, ignore me.

[13:17] <meppl> guten morgen

[13:18] <ivanfrey> broquaint: thanks, that did the trick.

[13:20] *** kanru joined
[13:21] *** fglock joined
[13:25] <ivanfrey> audreyt: when I'm back on later I'll post my errors from "env PERL_HARNESS=./pugs prove t/01-sanity/*.t"

[13:28] *** bpphillips joined
[13:28] <svnbot6> r11197 | fglock++ | v6 - a bit more of 'rule' parsing

[13:29] *** cdpruden joined
[13:49] <nothingmuch> morning fair lambdmoose

[13:54] <fglock> nothingmuch: good morning

[13:58] <fglock> broquaint: thanks!   # backlogging

[13:59] <broquaint> np, fglock.

[14:00] <broquaint> That code could suck less too, but it should work in theory.

[14:01] <fglock> broquaint: do you have a commit bit?

[14:01] <broquaint> I believe so.

[14:01] <broquaint> Shall I make it so then?

[14:01] <broquaint> (with tests)

[14:02] <fglock> sure - many thanks!

[14:02] <fglock> source = perl5/Pugs-Compiler-Rule/

[14:03] <broquaint> Right oh, I'm on it :)

[14:04] *** daxim joined
[14:04] <clkao> audreyt: devel::caller 01.0 should pass tests

[14:05] <fglock> clkao: hi!

[14:06] *** rzoz joined
[14:07] <nothingmuch> clkao: morning

[14:07] <nothingmuch> i hope I didn't wake you

[14:08] <clkao> nothingmuch: no you didnt

[14:08] <clkao> fglock: hey

[14:09] <fglock> clkao: I'm working on compiling rules (p6-on-p6)

[14:10] <clkao> fglock: the s// rules are reverted, as it conflicts with my changes. i changed how the token substitution is parsed

[14:10] *** buubot joined
[14:11] <fglock> clkao: ok

[14:12] *** buubot joined
[14:13] <fglock> clkao: I don't know what to write in the ChangeLog - we changed a bit of everything :)

[14:13] <clkao> fglock: "Changed everything to make Test.pm compile?"

[14:13] *** justatheory joined
[14:14] * nothingmuch wonders what jesse meant by having to be up at 8

[14:17] <svnbot6> r11198 | fglock++ | v6 - ChangeLog on previous versions

[14:17] <clkao> nothingmuch: but it

[14:17] <clkao> 's for furniture devliery. os if they didn't ring it's probably alright

[14:18] <nothingmuch> i was just kidding

[14:18] <nothingmuch> i've been downstairs for a while and there has been no suspicious activity

[14:18] <nothingmuch> so it's prolly OK =)

[14:20] <fglock> clkao: ' sub { 42 } ' generates 'Data::Bind->sub_signature( \&, );' - looks wrong

[14:20] <clkao> that's wrong

[14:21] <clkao> create a test case?

[14:21] <clkao> i don't have much time for perl6 hacking today

[14:22] <merlyn> but if you don't work on perl6, the terrorists have already won!

[14:23] <clkao> devel::caller has a macro in caller.xs.

[14:23] <clkao> define #WORK_DAMN_YOU

[14:24] <clkao> merlyn: i think my country care less about terrorists ;)

[14:24] * clkao wakes up

[14:24] <clkao> nothingmuch: we need to go shopping. you still need shoes?

[14:24] <nothingmuch> ywa, od xoueaw

[14:24] <nothingmuch> yes, of course

[14:24] <nothingmuch> let's make breakfast, then go to herz and make sure the car is OK

[14:25] <nothingmuch> then go downtownish as per obra reccomendations

[14:25] <clkao> nothingmuch: you want to make breakfast? ;)

[14:25] <nothingmuch> sure

[14:25] <clkao> i know the gear shop, let me google map it

[14:26] <nothingmuch> i got some reccomendations for jwang (ex bostonian), but they were fairly "anything works"ish

[14:26] <nothingmuch> in Israel you have to be quite careful

[14:26] <nothingmuch> because return policies are hard

[14:27] <nothingmuch> so, breakfast arrangements have been delegated

[14:27] <rgs> return policies?

[14:27] <nothingmuch> as in, if these hiking boots are not good for me at all (which they may be, i have a pretty unique foot shape), in israel i could probably never return them

[14:28] *** xdg joined
[14:28] <nothingmuch> in the US i can

[14:29] <svnbot6> r11199 | fglock++ | v6 - 14-anon-sub.t - testing anon-sub compilation

[14:30] <nothingmuch> morning xdg

[14:30] <xdg> morning

[14:31] <xdg> nothingmuch, belated happy birthday, by the way

[14:31] <nothingmuch> clkao: btw, the next time i fall asleep on the couch you are entitled to slapping rights

[14:31] <nothingmuch> thanks, xdg  =)

[14:31] * nothingmuch was trying to think and then somewhat nodded off

[14:32] *** rzoz joined
[14:35] <svnbot6> r11200 | fglock++ | v6 - emitter: warn Dumper( $ast ) if $ENV{V6DUMPAST};

[14:38] <svnbot6> r11201 | fglock++ | v6 - s/Dumper/.perl/

[14:38] *** hexmode joined
[14:42] <ajs> FYI: > sudo cpan v6

[14:42] <ajs> Can't locate inc/Module/Install/Admin.pm in @INC

[14:43] <ajs> > perl -v

[14:43] <lambdabot>  Not in scope: `v'

[14:43] <ajs> This is perl, v5.8.6

[14:43] <ajs> just FYI

[14:44] <fglock> ajs: try 'reload index' - there is a new version already

[14:45] <ajs> Just did. Still same msg. When I "cpan Module::Install::Admin" it says it's up to date as well

[14:45] <ajs> I tried force installing Module::Install::Admin, and still no change

[14:47] *** shachaf joined
[14:48] <fglock> oops - it is still broken in the last version: http://search.cpan.org/src/AUDREYT/v6-pugs-0.005/inc/Module/Install/

[14:48] <lambdabot> Title: "Index of /src/AUDREYT/v6-pugs-0.005/inc/Module/Install"

[14:48] <fglock> ajs: I'll upload it again - thanks

[14:49] <fglock> it's missing in the MANIFEST file

[14:53] *** weinig|away is now known as weinig

[14:55] <fglock> audreyt: pugs/inc/Module/Install doesn't have Admin.pm

[14:55] <clkao> fglock: really? it seemed to work for me. i instaslled 00 from pause incoming last night

[14:56] <ajs> clkao: Did you have a previously installed, working copy?

[14:56] <clkao> i was trying a fresh install

[14:56] <ajs> clkao: huh. dunno

[14:57] *** scook0_ joined
[14:57] *** scook0_ left
[14:58] <fglock> Module::Install in cpan doesn't have Admin.pm either

[14:58] <clkao> admin is some special case in pugs/ only iirc

[14:59] <fglock> ajs: try 'install Module::Install' - Admin.pm is in lib/

[15:00] <ajs> Q: is sub defined(Scalar $thing, ::Role?) {...} the correct way to describe defined?

[15:01] <ajs> S06 is a bit fuzzy on how type passing works vs. generics.

[15:02] <fglock> ajs: I think this is describing 'does()'

[15:02] <ajs> fglock: Well http://svn.openfoundry.org/pugs/docs/Perl6/Spec/Functions.pod says: $x.defined(SomeRole);

[15:03] <fglock> ajs: sorry, I don't know

[15:03] <ajs> Which is the method variant, but the same would have to apply to both the sub and method

[15:03] <ajs> fglock: NP. thanks anyway. I'll assume it's right for now.

[15:05] *** chris2 joined
[15:08] <svnbot6> r11202 | broquaint++ | * Added the C<install()> method + tests + updated docs.

[15:09] <fglock> broquaint: thanks!

[15:09] <broquaint> Happy to help :)

[15:13] * gaal meows

[15:15] <audreyt> ajs: ping

[15:17] <audreyt> ajs: the M::I::Admin bug -- does it occur on v6.pm 0.005 on CPAN

[15:17] <audreyt> and if yes, can you give me a shell access so I can duplicate and fix it?

[15:17] <szbalint> audreyt: morning?

[15:17] <audreyt> I've seen people reporting it but I can't quite reproduce

[15:17] <audreyt> szbalint: greretings

[15:19] <szbalint> I was wondering whether there are any plans to fix that try/exception handling bug, as it is interfering with my DBI project. I managed to work around it but that's kind of ugly.

[15:19] <svnbot6> r11203 | fglock++ | Pugs-Compiler-Rule - ChangeLog install()

[15:19] <audreyt> szbalint: how did you work around it?

[15:21] *** elmex joined
[15:21] <nothingmuch> win14

[15:22] <broquaint> Thanks, fglock, forgot about that :)

[15:22] <fglock> np :)

[15:24] <szbalint> audreyt: using perl5 code to do the eval.

[15:24] <clkao> audreyt: can you see d::caller work for osx? it failed on threaded perl for me on bsd

[15:26] <ajs> audreyt: pong

[15:27] <ajs> F/FG/FGLOCK/v6-pugs-0.003.tar.gz

[15:27] <ajs> Should I be getting a newer version? I've updated my CPAN indexes...

[15:28] <nothingmuch> clkao: let's have lunch at diesel

[15:28] <audreyt> ajs: please download 0.005 from search.cpan.org/dist/v6/

[15:28] <nothingmuch> and then go on the subway

[15:29] <clkao> nothingmuch: that's wrong planning. we should go porter sq and harvard sq

[15:29] <nothingmuch> clkao: what part is wrong?

[15:31] <clkao> nothingmuch: diesel is the other way, davis sq

[15:32] *** rzoz_ joined
[15:33] <svnbot6> r11204 | fglock++ | v6 - parses very basic rule declarations; full parsing with

[15:33] <svnbot6> r11204 | fglock++ | Pugs::Grammar::Rule.rule is not possible yet

[15:33] <ajs> audreyt: doing

[15:33] <fglock> bbiab &

[15:35] <ajs> audreyt: Works, but wants Devel::Caller which fails tests on install. Other than that installation went cleanly

[15:36] *** JimKraj joined
[15:40] <audreyt> ajs: there's a new Devel::Caller too.

[15:40] <audreyt> http://pause.cpan.org/incoming/Devel-Caller-0.10.tar.gz

[15:41] *** rzoz_ is now known as rzoz

[15:41] <ajs> Thanks

[15:43] *** prefiks joined
[15:46] <audreyt> szbalint: wait a sec

[15:46] <audreyt> szbalint: you had

[15:46] <audreyt> use perl5:Foo

[15:46] <audreyt> but there is no Foo

[15:46] <audreyt> is that the error you want to trap?

[15:46] <szbalint> no

[15:46] <szbalint> but the test is path sensitive I'm afraid

[15:47] *** bpphillips joined
[15:47] <audreyt> oh. better to use core module

[15:47] <audreyt> I'll fix

[15:47] <szbalint> ok

[15:48] *** putter joined
[15:49] <putter> hi folks.

[15:49] <putter> so is there a 'thon plan for lunch?

[15:49] <audreyt> szbalint: it appears method-not-found does get captured

[15:50] <szbalint> hm

[15:50] <putter> fglock: congrats on recent milestones.

[15:50] <audreyt> and explicit "die" is not

[15:50] <audreyt> investigating

[15:50] <szbalint> okay.

[15:50] *** stevan joined
[15:53] <svnbot6> r11205 | audreyt++ | * exception_handling.t: switch to core module "Carp" for testing

[15:53] *** buubot joined
[15:55] <putter> hi stevan

[15:56] <gaal> stevan: moose?

[15:57] *** Daveman joined
[15:57] <putter> Hmm.  The pugs HEAD build is still broken.  Same error as last night.  Cannot import `Data.ByteString':  it was found in multiple packages: pugs-fps-0.7 fps-0.7.  Is there a workaround?

[15:59] <gaal> putter: try ghc-pkg unrefister fps

[15:59] <gaal> *unregister

[15:59] <stevan> gaal: moose

[15:59] <stevan> putter: hey

[15:59] <gaal> stevan! welcome?

[15:59] <audreyt> szbalint: I have a workaround

[15:59] <audreyt> szbalint: namely demoting all uncaught "die" in perl5 land into warnings

[16:00] <stevan> gaal: I am waiting downstairs for my hello hug

[16:00] <clkao> stevan: while you are gone, v6.pm became crazy

[16:00] <gaal> one hello hug, coming down!

[16:00] <audreyt> szbalint: would that be acceptible?

[16:01] <szbalint> audreyt: The reason I need try is to use it like the example in Inline::Java for exception handling (to interface with JDBC), so I need to trap the error/warning anyway somehow.

[16:02] *** buubot joined
[16:02] <audreyt> ok. so you do want $! in p6 land to contain the error in p5 land

[16:02] <szbalint> yeah.

[16:03] <audreyt> thinking.

[16:04] <gaal> c

[16:06] <svnbot6> r11206 | szbalint++ | Removing unused directory.

[16:06] *** buubot joined
[16:07] <stevan> putter: are you joining our happy hackathon today?

[16:07] <stevan> in meatspace that is

[16:08] <Daveman> Greetings, gaal :)

[16:08] <gaal> hey Daveman

[16:10] <audreyt> szbalint: I think I've got it fixed. testing

[16:10] *** thepler joined
[16:12] <szbalint> audreyt: oh, nice! Thanks for the fast help with it.

[16:12] <audreyt> np :) thanks for prompting

[16:12] <audreyt> the trick is essentially forcing a

[16:12] <audreyt> return ($@, ...)

[16:12] <audreyt> from p5 land

[16:13] <putter> stevan: yes.  though noone was at the office when I stopped by earlier.  don't know what the plan is.

[16:14] <rgs> hi all. just to check... (my $foo) = 42 is forbidden in P6 ?

[16:14] <audreyt> ?eval (my $foo) = 42

[16:14] *** evalbot_11162 is now known as evalbot_11168

[16:14] <evalbot_11168> (\42,)

[16:14] <audreyt> that works just fine, thanks :)

[16:14] <rgs> damn

[16:14] <rgs> I need a new pugs

[16:15] <audreyt> yeah. that's fixed in 6.2.12

[16:15] *** buetow joined
[16:17] *** buubot joined
[16:19] <svnbot6> r11207 | audreyt++ | * Pugs::Compile::Rule - Fix Makefile.PL as noted by DanKogai++

[16:20] *** rzoz_ joined
[16:20] *** guaumiau joined
[16:23] <fglock> putter: thanks!

[16:24] <putter> Ok, I removed ~/.ghc (didn't realize it was there - that sure made my past release testing a whole lot less useful).  ~/.ghc had the only package.conf with fps.  starting from scratch, make fails with: Could not find module `Data.Yaml.Syck'.

[16:24] <putter> fglock:  :)

[16:24] *** thepler left
[16:24] <audreyt> putter: can't be "scratch"; perl Makefile.PL will put a Data.Yaml.Syck there

[16:25] *** shachaf joined
[16:26] *** thepler joined
[16:26] <gaal> putter: I think this has happened to me too but I wasn't paying attention when I hackarounded it. What 'make' invocation are you using?

[16:27] <gaal> try just 'make'

[16:27] <stevan> putter: I am not sure of the details of the plan myself, but I know we will be migrating to the office somtime this afternoon

[16:27] <pasteling> "spinclad" at 209.94.133.172 pasted "build failure at r11196" (28 lines, 1.1K) at http://sial.org/pbot/18237

[16:27] <gaal> not unoptimized or pugs or anything

[16:27] <audreyt> spinclad: r11207 fixed that

[16:27] <gaal> putter, spinclad: yes, we should be moving to the office in an hour or so

[16:27] <putter> audreyt: re scratch - was, didnt, retrying.

[16:28] *** notThis joined
[16:28] <putter> perl Makefile.PL >log_1 2>&1; make >log_2make 2>&1

[16:31] *** amnesiac_ joined
[16:31] <putter> Unless I'm being very careless...  attempted build from scratch.  problem unchanged.  Hmm...

[16:31] *** amnesiac_ is now known as amnesiac

[16:33] <putter> ... nope, none of my package.conf's mention Yaml, so I'm not confusing things.

[16:34] <audreyt> ok.

[16:34] <audreyt> is this your laptop?

[16:35] <pasteling> "putter" at 66.30.119.55 pasted "perl Makefile.PL >log_1 2>&1" (94 lines, 3.4K) at http://sial.org/pbot/18238

[16:35] <audreyt> putter: ok. hm. I think "make" builds HsSyck

[16:35] <audreyt> but this may be somehow prevented

[16:36] <audreyt> try "make >log_1 2>&1" ?

[16:37] <pasteling> "putter" at 66.30.119.55 pasted "make >log_2make 2>&1" (409 lines, 27.5K) at http://sial.org/pbot/18239

[16:40] <audreyt> ok, so it registered pugs-fpc

[16:40] <audreyt> -fps

[16:40] <audreyt> but ghc-pkg can't find that

[16:40] <audreyt> that is curious.

[16:40] <audreyt> do you have write permission to ~/.ghc/ ?

[16:40] <spinclad> audreyt: thanks, i finally caught up with that in bl

[16:41] *** rzoz_ is now known as rzoz

[16:42] <putter> I disabled ~/.ghc per above.  I'll try putting it back.

[16:42] <putter> Can users be depended upon to have a .ghc ?

[16:43] <putter> "disabled" ~~ renamed

[16:43] <spinclad> gaal: thanks

[16:44] <audreyt> putter: yes ghc adds that automatically

[16:44] <gaal> spinclad: we'll ping you when we leave for the office, about 15 before getting there

[16:44] <audreyt> szbalint: please test.

[16:45] <audreyt> szbalint: I _think_ I got it right

[16:45] <svnbot6> r11208 | audreyt++ | * szbalint++ requested that we propagate Perl 5 "die" errors into

[16:45] <svnbot6> r11208 | audreyt++ |   Perl 6 "die" errors so that it can be caught and handled at "try" site.

[16:45] <svnbot6> r11208 | audreyt++ |   We implement it with prepending $@ to each return list.

[16:45] <audreyt> but I'm not sure of DBI6's test case

[16:45] <audreyt> so please test :)

[16:45] *** buubot joined
[16:46] <putter> ok.  thanks.  will add renormalizing it to my test scripts.  "yaks are cute creachers.  bit black wet noses.  friendly.  sigh"

[16:46] <szbalint> audreyt: okay.

[16:46] <spinclad> gaal: good

[16:46] * szbalint tests

[16:46] <audreyt> putter: working with Cabal is like... working with Module::Build

[16:47] <audreyt> it clearly solves real problems, it's even made into core module, but the user-side incompatibility among versions makes it hard to work around

[16:47] <audreyt> just yesterday I had M::B failing on me in a similar way.

[16:48] <PerlJam> So ... what's this I hear about ponie 2.0?  Anything interesting?  Or should I just wait for the official announcement?

[16:48] <audreyt> it needs ExtUtils::ParseXS to support XS modules, but it can only use it if it's installed _before_ it

[16:48] <audreyt> as it's not a dependency, only a recommends

[16:48] *** iblechbot joined
[16:48] <audreyt> PerlJam: it's ideaware at this moment; the idea seems to be rebuilding Perl 5 without using Perl 5 core, using TGE/PGE alone

[16:49] <putter> What can we do so that perl6 has less of this hair?

[16:49] <audreyt> I hope it's started after Punie passes more than 3 or 50 test files...

[16:49] <audreyt> s/it's/it'll be/

[16:49] <gaal> audreyt: which reminds me, does MB/MI have the concept of "require one of these n modules?" thinking of Task::PugsSmoke which surely recommends YAML::Syck but requires at least YAML.

[16:50] <gaal> putter: builting PAR and many pure-perl bootstrapping modules

[16:50] <audreyt> gaal:

[16:50] <audreyt> if ( can_cc() ) { requires('YAML::Syck' => '0.27') unless can_use('YAML'       => 0.35);

[16:50] <audreyt> } else { requires('YAML'       => '0.35') unless can_use('YAML::Syck' => 0.27);

[16:50] <audreyt> }

[16:50] <audreyt> but no it's not abstracted away yet

[16:50] <stevan> use Best :)

[16:50] <gaal> excellent

[16:50] <gaal> stevan: we do in fact :) but this is at install time

[16:50] <PerlJam> audreyt: so, they're going to forego bug-for-bug compatibility and start from scratch?

[16:50] <PerlJam> (assuming the idea gets off the ground)

[16:51] <audreyt> PerlJam: it's all ideaware at this moment so I have no idea

[16:51] <audreyt> wait for announcement later, maybe

[16:51] <putter> re fps unregister, one needs something like   ghc-pkg -f ~/.ghc/x86_64-linux-6.4.1/package.conf unregister fps   because the default ghc install has the main package.conf owned by root, pugs builds modify the ~/.ghc package.conf, and ghc-pkg goes boom when it finds it cant write the main .conf, even though it doesnt need to. :/

[16:51] <audreyt> ghc-pkg --user unregister fps

[16:51] <audreyt> is the incantation

[16:52] <spinclad> I noticed in my makelog last night: after sudo ../../Setup install of both pugs-fps and pugs-HsSyck, the make went through but appeared to be installing in ~/.ghc where it would not be found.  (before rafl's changes they were found there.)

[16:52] <audreyt> oh!

[16:52] <audreyt> hm.

[16:53] <audreyt> trying to duplicate here

[16:53] <spinclad> s:last/it/they/

[16:54] <spinclad> (it found the global installed ones so went through, but 'make' is no longer keeping them up to date...)

[16:54] <gaal> eep, /me remembers sudo chmod a+w his ghc pakcage registry after some losing battles with lossage of this sort

[16:55] <audreyt> spinclad: I'm seeing something else here

[16:55] <gaal> no doubt the Wrong Thing

[16:55] <audreyt> spinclad: here it looks into --user and found it

[16:55] <ingy> I want to be recognized as the one who coined TMTOWTJFDI

[16:56] <ingy> TimToadJifty

[16:56] * gaal recognizes ingy on sight

[16:56] <spinclad> tmtowtfiu

[16:56] * gaal cogs ingy again and again

[16:57] *** ruoso joined
[16:58] <spinclad> Cabal-1.1.3, btw, debian latest

[17:01] <spinclad> if we can get it looking in --user again reliably, we shouldn't have to sudo Setup install

[17:04] <putter> (btw, my .ghc is back, its package.conf is now [], make error apparently unchanged, package.conf remains unchanged despite fps registering.  now exploring the fps registering process.)

[17:06] * putter wonders whether you could shampoo yaks, and thus not mind them standing around all the time.  hay smells nice.  might need to housebreak them.

[17:06] <svnbot6> r11209 | fglock++ | Pugs-Compiler-Rule/compile_p6grammar.pl - compiles Rule.pm

[17:20] *** Debolaz2 is now known as Debolaz

[17:21] <putter> yipes. 33 thousand spam emails in just a couple of weeks.

[17:21] <gaal> spinclad, putter: we're moving over to the office now

[17:21] <rafl> spinclad: What do you mean with "would not be found"?

[17:21] <gaal> see you soon &

[17:21] <rafl> spinclad: also 1.1.4 is the latest Cabal in Debian.

[17:21] <putter> gaal: thanks.

[17:24] <spinclad> rafl: 1.1.3 is sid latest (that's experimental, right? is there later?)

[17:24] <szbalint> hm putter, the from-scratch build I've tried bombed out too

[17:24] <szbalint> "Could not find module `Data.Yaml.Syck'"

[17:24] <rafl> spinclad: There's ghc6 6.4.2-2 which comes with Cabal-1.1.4

[17:25] <spinclad> rafl: there's my clue, thanks

[17:28] <putter> szbalint: good to know.  it looks like the chain is Data.Yaml.Syck not found because HsSyck build failed because error reading ./.setup-config because cannot satisfy dependency pugs-fps-any because... something silently went wrong with fps registration or install.

[17:29] <spinclad> rafl: "would not be found":  i saw cases where the ghc-pkg register/unregister succeeded (presumably to ~/.ghc) but pugs-fps or pugs-HsSyck were not found when needed.

[17:30] <rafl> spinclad: It shouldn't use ~/.ghc anymore. I build wrappers around ghc and ghc-pkg which install/register things inside the build tree.

[17:31] <rafl> spinclad: third-party/installed/packages.conf or somesuch.

[17:31] <putter> (the registration at least is not happening. either to .ghc, or a chmod a+w main package.conf)

[17:31] <putter> rafl: does http://sial.org/pbot/18239  look like what you would expect?

[17:31] <lambdabot> Title: "Paste #18239 from "putter" at 66.30.119.55"

[17:32] <rafl> To see if it's registered in third-party/installed you could use ./util/ghc-pkg-wrapper -l

[17:32] <putter> is there a .conf file?

[17:33] <spinclad> ok, it is registered there

[17:33] <rafl> putter: That's not what I expected. There's a conf file in third-party/installed which is created on the first run of either the ghc or ghc-pkg wrapper.

[17:33] <spinclad> the dependency search may not be looking there

[17:34] *** notThis joined
[17:34] <pasteling> "putter" at 66.30.119.55 pasted "third-party/installed/packages.conf" (1 line, 1.1K) at http://sial.org/pbot/18241

[17:34] <rafl> putter: fps seems to be installed properly. Could you check if your ./util/ghc-pkg-wrapper -l can see it?

[17:35] <putter> checking...

[17:36] <spinclad> i'm going to unregister them from global and ~/.ghc and try again

[17:36] <putter> yes, pugs-fps-0.7

[17:36] <rafl> putter: You could also write a small haskell file which uses Data.ByteString and compile it with util/runcompiler -hide-all-packages -package pugs-fps

[17:37] <putter> writing...

[17:39] *** Aankhen`` joined
[17:40] *** bernhard joined
[17:41] <rafl> putter: You'll also need -package base, I guess.

[17:41] <putter> yes...

[17:44] *** frederico joined
[17:44] <TimToady> Cabal: A sufficiently advanced technology is indistinguishable from 90% crap...

[17:50] <spinclad> rafl: yes, that works (making ./pugs) (aside from needlessly rebuilding both packages, not a new problem)

[17:50] <Limbic_Region> um, did the GHC version requirement change or is Win32 b0rk a known problem?

[17:51] <Limbic_Region> and WTF is a Cabal installation?

[17:51] <rafl> spinclad: I'll try to fix the latter right now.

[17:51] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "Win32 perl Makefile.PL failure(s)" (13 lines, 534B) at http://sial.org/pbot/18243

[17:52] <rafl> putter: If that didn't work, try removing ~/.ghc. I'll be offline for about an hour now.

[17:52] <spinclad> not a problem with the wrapper that i can see

[17:53] <Limbic_Region> fwiw - this is after an nmake realclean and a svn up

[17:54] *** jkanter joined
[17:54] <svnbot6> r11210 | fglock++ | Pugs-Compiler-Rule - fixed quoting in emitted :ratchet code

[17:55] * spinclad &  # food, shower, check back here, head over to davis^2

[17:56] <audreyt> Limbic_Region: try now?

[17:56] <svnbot6> r11211 | audreyt++ | * Makefile.PL - fix win32 path in ghc-pkg wrapper

[17:56] <svnbot6> r11210 | fglock++ | Pugs-Compiler-Rule - fixed quoting in emitted :ratchet code

[17:57] *** stevan joined
[17:57] <audreyt> Limbic_Region: it's rafl and his unix-centric code again :)

[17:57] <audreyt> but it should be fixed nnow

[17:57] <audreyt> putter: come to the office and let's debug it f2f? :)

[17:57] <audreyt> (with your laptop)

[17:58] <stevan> yes putter please come by :)

[17:59] <fglock> does <@terms> capture to $/<terms> ?

[17:59] *** Aankh|Clone joined
[18:02] <putter> rafl: sorry, a call.  A simple ./util/runcompiler -hide-all-packages -package pugs-fps -package base Main.hs  works, where Main imports but does not use ByteString.  I'll try using next...

[18:03] <putter> audreyt: no laptop.  :(  awaits having a job.

[18:05] * Limbic_Region tries again

[18:06] <stevan> putter: come anyway

[18:07] <Limbic_Region> so far so good audreyt

[18:07] <Limbic_Region> audreyt

[18:07] <szbalint> audreyt: I seem to have the same problem as putter, if you want I can offer shell access to my development pc.

[18:07] <Limbic_Region> grrr - my ability to use plus symbol is gone again

[18:08] *** particle_ joined
[18:08] <kolibrie> stevan: I submitted a talk proposal for http://pghpw.org

[18:08] <lambdabot> Title: "Pittsburgh Perl Workshop - 2006-09-23 - About"

[18:08] <particle_> howdy all

[18:08] <fglock> Limbic_Region: no plus symbol here too

[18:08] <TimToady> fglock: no

[18:08] <stevan> kolibrie: nice

[18:09] <fglock> TimToady: thanks

[18:09] <TimToady> only <alphabetic> captures by default.

[18:09] <particle_> do regexes allow routine modifiers (eg. multi rule foo { ... } )?

[18:09] <TimToady> which is why <?ws> disables capturing ws.

[18:09] <putter> steven: right, will do

[18:10] <particle_> ?eval multi rule foo { ... }

[18:10] <evalbot_11168> Error:  unexpected "f" expecting comment, "handles", bare trait, subroutine parameters, trait or block

[18:10] <TimToady> yes, but a multi rule isn't going to do you much good without a different signature.

[18:10] <putter> anyone: could someone give me a oneliner use of ByteString.  my haskell-fu is failing me...

[18:10] <particle_> understood, just making parser mods

[18:10] <kolibrie> maybe tomorrow I can finally get around to looking at grammars again, after the nice fixes audreyt++ and pmichaud++ put into pugs and parrot for me

[18:11] <TimToady> rules are specifically allowed to declare sigs though.

[18:11] <putter> oh, neat (rules allow sigs)

[18:11] * kolibrie notes that in his brain for future reference

[18:12] <TimToady> we already use it for things like <operprecparser(@terminators)>

[18:13] <TimToady> though that's presumably just an ordinary sub there.

[18:13] <particle_> yep, pge does that

[18:13] <particle_> s/pge/pgc/

[18:13] <TimToady> or rules of the form <abc stuff>

[18:13] <TimToady> anyway, you can parameterize rules.

[18:14] <particle_> hrmm, so a space seperates the rule name from it's args

[18:14] <TimToady> rather important in recursive descent parsing to know what the expected terminators are.

[18:14] <particle_> iirc perl6 subs allow spaces in names

[18:14] <TimToady> <abc stuff> parses stuff as regex.  <abc(stuff)> parses stuff as arglist.

[18:14] <ingy> hola

[18:14] *** Aankh|Clone is now known as Aankhen``

[18:14] <particle_> howdy ingy

[18:15] <TimToady> currently <abc: stuff> is equivalent to <abc('stuff')> or some such.

[18:15] <putter> re ByteString, got it, exploring

[18:16] <ingy> ang it

[18:16] <ingy> d

[18:16] <ingy> I made coffee an hour ago

[18:16] <ingy> and forgot about it

[18:16] <ingy> a sure sign I haven't had my coffee yet

[18:18] <particle_> should 'my Int sub foo ( --> Int )' be a parse error?

[18:18] <particle_> ?eval my Int sub foo ( --> Int ) { ... }

[18:18] <evalbot_11168> Error:  unexpected "-" expecting comment, formal parameter or ")"

[18:19] *** larsen joined
[18:20] <TimToady> ?eval my Int Int sub foo () { ... }

[18:20] <evalbot_11168> Error:  unexpected "I" expecting comment, "\\", ":", "*" or parameter name

[18:20] <TimToady> ?eval sub foo (Int Int $x) {...}

[18:20] <evalbot_11168> Error:  unexpected "I" expecting comment, "\\", ":", "*", parameter name or ")"

[18:21] <TimToady> Looks like it doesn't handle "anded" types yet.

[18:21] <TimToady> In any event, shouldn't be a parse error.

[18:21] <particle_> great, was hoping that

[18:22] <TimToady> could possibly be a semantic error if you say my FloorTopping sub shinola (--> DesertWax), but it should always at least parse.

[18:22] <TimToady> *DessertWax

[18:23] <TimToady> and even if the two types can't be combined, it'd probably just be a warning about unreachable code.

[18:24] <particle_> and the --> must follow all params, yes?

[18:24] <TimToady> yes.

[18:25] <particle_> okay, next.

[18:25] <particle_> rule signature {  $<invocants>:=(<parameter>? [, <parameter>]*)

[18:25] <particle_>   $<paramlist>:=(\: <parameter>? [, <parameter>]*)?  }

[18:25] <TimToady> and we've reserved the ( --> Foo; ) syntax (note semi) for possible mmd tiebreaking on return type.

[18:25] <particle_> ooh, good to know

[18:26] <particle_> that's an optional semi denoting mmd type tiebreak... will do

[18:26] <particle_> the signature rule above populates $<invocants> in absense of a \:

[18:26] <particle_> this seems incorrect

[18:27] <particle_> i believe $<paramlist> should be populated if there's no '\:'. agreed?

[18:27] <TimToady> nowadays invocants (plural) is always incorrect.  we no longer call mmd longname parameters 'invocants'

[18:28] <TimToady> that seems right.

[18:28] <TimToady> the invocants vs longnames is partly why we differentiated : into : or ;

[18:28] <particle_> i see.

[18:29] <particle_> does anything every follow the ; ?

[18:29] <TimToady> so there can only ever be one :

[18:29] <TimToady> and if it's missing, the invocant is implied

[18:30] <putter> rafl: Ok, re runcompiler, my only note is it errors if Main is not defined.  Other than that, it worked in different directories, and ByteString was used ok (didnt try fps itself).  Happily dropped a.out's.

[18:30] <TimToady> previously, if we saw multi ($self:...) we had to guess...

[18:30] <TimToady> sure, you can replace every comma with ; if you like, then you get common lisp mmd semantics

[18:31] <TimToady> if you leave out all ; then there's one implied currently after the last param but before any -->

[18:31] <putter> TimToady: so what is a "oneliner" definition of ; ?

[18:33] <TimToady> well, the real definition is being worked out, but the oversimplified meaning is that anything to the right of a semicolon is treated as

[18:33] <TimToady> Any unless the information to the left is insufficient to determine a unique function.

[18:34] <particle_> does the following look (more) correct for the signature rule body?

[18:34] <particle_>     $<invocants>:=(<parameter>? [, <parameter>]* <':'>)?

[18:34] <particle_>     $<paramlist>:=(<parameter>? [, <parameter>]*)

[18:35] <rafl> putter: So it's probably breaking because of ~/.ghc.

[18:36] <TimToady> you can't have multiple parameters before the colon.

[18:36] <particle_> ah, in that case: $<invocants>:=(<parameter> <':'>)?

[18:36] <putter> TimToady: if the information to the left is insufficent, but a few parameters later we are down to a unique, are the remaining params Any?

[18:37] <TimToady> see ./misc/pX/Common/mmd-draft.txt

[18:38] <merlyn> should Devel::Caller fail badly on OSX?

[18:39] <putter> mmd-draft.txt doesn't seem to have changed since I last saw it...

[18:39] <TimToady> $<invocant>:=(<parameter>? <':'>)?

[18:39] <merlyn> I'm trying to install the new v6.

[18:42] <putter> sigh.  I keep running the same mind path.  perhaps needs to be a note in mmd-draft.  to wit,

[18:42] *** arguile joined
[18:45] <Limbic_Region> fglock - Juerd had fixed it once, but apparently some upgrade has reverted the change

[18:45] <Limbic_Region> Juerd ping

[18:46] <fglock> merlin: audreyt tested in OSX, afaik

[18:47] <Limbic_Region> audreyt - the Makefile.PL fix did not fix the Win32 build

[18:47] * Limbic_Region tries again just in case there was a fix checked-in that he didn't see

[18:49] <svnbot6> r11212 | fglock++ | Pugs-Compiler-Rule - implemented '<@rules>' in :ratchet mode

[18:49] *** weinig is now known as weinig|away

[18:50] <Limbic_Region> interesting nmake realclean is b0rk now

[18:51] <particle_> if you updated your working copy and files/dirs were shuffled, realclean may break

[18:51] <particle_> unless you regenerate the makefile

[18:51] <Limbic_Region> particle_ - well, first perl Makefile.PL was b0rk (audreyt fixed)

[18:52] <Limbic_Region> so then I did a realclean, svn'd up, and did a nmake

[18:52] <particle_> which compiler on win32?

[18:52] <Limbic_Region> that bombed not too far into the make so I did a nmake realclean again (to see if there was another update since I was AFK)

[18:52] <Limbic_Region> but that failed

[18:52] <Limbic_Region> which compiler?

[18:52] <Limbic_Region> GHC 6.4.1

[18:53] <particle_> oh

[18:53] <Limbic_Region> er 6.4.2

[18:53] <Limbic_Region> and AS perl 5.8.8 though it really isn't doing any of the compiling

[18:54] * Limbic_Region is attempting another nmake to see if the previous problem is still present and will nopaste accordingly

[18:55] <particle_> ouch... Devel::Caller tests just broke perl

[18:55] <particle_> (segfault)

[18:56] <Limbic_Region> well, they don't call it Devel for nothing ;-)

[18:56] <putter> given (Int;Int;Int,Int) (Int,Num,Int,Int) (Int,Int,Num,Int) (Int,Int,Int,Num) and (10,11,12,13),  with the sigs taken pairwise, 1&2 -> 1, 1&3 -> 3, 1&4 -> 1.  no ambiguities.  are all those intended?

[18:56] <merlyn> heh

[18:57] <putter> rafl: any tests you want me to run before heading out?

[19:00] *** Aankh|Clone joined
[19:00] <particle_> merlyn: Devel::Caller breaking badly on win32, too

[19:01] <Limbic_Region> pugs is currently b0rk on Win32

[19:01] <merlyn> it's broken all over, then, not just me.  good.  as long as others are sharing my pain. :)

[19:01] <Limbic_Region> both nmake

[19:01] <Limbic_Region> and nmake realclean

[19:02] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "Win32 nmake failure" (94 lines, 5.2K) at http://sial.org/pbot/18245

[19:03] *** frederico joined
[19:03] <putter> no, my examples are broken, let's see...

[19:03] * particle_ notices a new version of Devel::Caller on cpan today

[19:03] <particle_> perhaps the older Devel::Caller works better

[19:06] <stevan> putter: come to the offices,.. I am bored,.. they are babbling about ASTs

[19:06] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "In addition to the nmake failure nopaste, here is the nmake realclean failure for Win32" (58 lines, 5.1K) at http://sial.org/pbot/18246

[19:07] <spinclad> rafl: same question as putter

[19:09] * spinclad heads out now too &

[19:10] <spinclad> (about 45 min trip)

[19:10] * putter stops composing mmd cases

[19:10] <putter> ok, off to 'thon.  (about a 5 min trip;)

[19:10] <putter> &

[19:13] *** korihor joined
[19:15] *** korihor left
[19:17] <svnbot6> r11214 | audreyt++ | * SVG diagrams for old, and new, runtimes

[19:21] <svnbot6> r11215 | audreyt++ | * p6ast.hs - sync with gaal on examples of new runcore

[19:22] *** amv joined
[19:25] *** Aankhen`` joined
[19:40] *** dduncan joined
[19:46] *** xdg joined
[19:51] <svnbot6> r11216 | gaal++ | * Bundle::Pugs::SmokeKit has been obsoleted in favor of Task::Smoke

[19:52] <Limbic_Region> ok - so do any of the thon'ers know why Win32 is b0rk?

[19:53] <audreyt> Limbic_Region: I think I fixed it

[19:54] <Limbic_Region> k

[19:55] * Limbic_Region tests now

[19:55] <Limbic_Region> oh audreyt - my wife said the following about you when she saw your pic "she is pretty and she must be smart"

[19:55] *** cognominal joined
[19:56] <theorbtwo> She can tell that from a photo?

[19:56] <Limbic_Region> well the pretty part is mostly subjective so - yes

[19:57] <Limbic_Region> the smart part - I have no idea why she said that

[19:57] <Limbic_Region> perhaps it is because she doesn't often see me oogling pictures of hot female hackers and assumed for audreyt to be there - she must be smart

[19:58] * Limbic_Region wasn't capable of conveying the extent to how smart but it made me laugh when she said it

[20:00] <svnbot6> r11217 | fglock++ | v6 - added lib/Pugs/Grammar/P6Rule.pm - Rule grammar translated to P5

[20:01] <clkao> oh bloody scary

[20:01] <Limbic_Region> audreyt - still b0rk

[20:01] <Limbic_Region> will nopaste the results in case they are different

[20:01] <audreyt> ok

[20:02] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "lastest Win32 nmake failure" (136 lines, 7.5K) at http://sial.org/pbot/18247

[20:02] <Limbic_Region> testing nmake realclean to see if *that* is also still b0rk

[20:04] <Limbic_Region> nope, nmake realclean still b0rk too

[20:05] <audreyt> Setup.exe: ..\..\gcc-lib\ld.exe: runProcess: does not exist (No such file or directory)

[20:05] <audreyt> hm.

[20:05] <audreyt> where is gcc-lib\ld.exe originally?

[20:05] <audreyt> is it in your c:\ghc\

[20:06] * Limbic_Region doesn't have a c:ghc\

[20:06] <audreyt> ok, where is your ghc?

[20:06] <audreyt> c:\Gat\ghc

[20:06] <Limbic_Region> everything is under C:\gat\<root>

[20:06] <Limbic_Region> yep

[20:06] <audreyt> is there a ld.exe under c:\Gat\ghc ?

[20:06] <Limbic_Region> so let me find ld.exe

[20:06] <Limbic_Region> C:\Gat\GHC\gcc-lib

[20:06] <Limbic_Region> it's the only one there

[20:07] <audreyt> ok

[20:07] <audreyt> thinking

[20:07] <audreyt> is ghc.exe in c:\gat\ghc\ghc.exe ?

[20:07] <Limbic_Region> I do have mingw on this box btw - it is in the PATH later though

[20:08] <Limbic_Region> c:\gat\ghc\bin\ghc.exe

[20:08] <Limbic_Region> fwiw - this is a bin install with no tweakage on my part

[20:08] <audreyt> understood

[20:10] <ajs> Revisions to S29 away... I'm finally very, very slightly ahead of the curve ;)

[20:11] <rafl> spinclad: I thought it's working for you now..

[20:12] <audreyt> clkao: fixed

[20:14] <audreyt> Limbic_Region: if you copy c:\Gat\ghc\gcc-lib into the pugs tree

[20:14] <audreyt> does it suddenly work?

[20:14] <svnbot6> r11218 | audreyt++ | * Handle ./pugs -BPerl5 -e 'use Test' by recognizing lack of package

[20:14] <svnbot6> r11218 | audreyt++ |   as the main progrem in v6.pm

[20:14] <svnbot6> r11219 | fglock++ | v6 - parser does rules! ' rule xxx { a.b$ } '

[20:14] <audreyt> (it's not the correct fix, just diagnosis)

[20:16] <kolibrie> fglock++

[20:16] <ajs> fglock: that's very cool.

[20:16] <audreyt> ooh, bootstrap.

[20:17] <audreyt> today seems to be the day of bootstraps; stevan just got Class::MOP's immutable (fast) object layout bootstrap itself, so all metaobjects are suddenly fast

[20:17] *** notThis joined
[20:18] <kolibrie> oooh, stevan++

[20:19] *** spinclad_ joined
[20:20] <Limbic_Region> audreyt - checking now, was AFK

[20:20] *** fglock joined
[20:21] <audreyt> Limbic_Region: ok. is ghc in PATH?

[20:21] <Limbic_Region> you want all the files copied - or the dir itself

[20:21] <audreyt> the dir itself with all files in it

[20:21] <Limbic_Region> c:\gat\ghc\bin is

[20:21] <kolibrie> fglock: we all noticed r11219

[20:21] <audreyt> fglock: regex and tokens too?

[20:22] <svnbot6> r11220 | audreyt++ | * runcompiler.hs - use rawSystem to avoid whitespace trap

[20:22] <svnbot6> r11220 | audreyt++ |   on dirs with whitespace.

[20:22] <fglock> kolibrie: cool - I used compile_p6grammar to translate the grammar

[20:22] <fglock> audreyt: yes

[20:22] <Limbic_Region> audreyt - svn up'ing now

[20:23] <kolibrie> fglock: cool, I'll have to look and see what improvements it has grown since I last touched it

[20:23] <fglock> it's not hooked in emitter yet

[20:23] *** xdg joined
[20:23] *** bpphillips left
[20:25] <kolibrie> one step at a time

[20:26] *** notThis left
[20:27] <Limbic_Region> audreyt - if this does make the problem magically go away - what is the *right way* to fix it?

[20:27] *** vel joined
[20:28] <Limbic_Region> cause it appears to be compiling now

[20:28] *** nothingmuch joined
[20:31] <audreyt> Limbic_Region: the right way is to fix findpath

[20:32] <Limbic_Region> findpath is in build_util.pl ?

[20:32] <nothingmuch> clkao_: how do we plan on picking up the car?

[20:32] <nothingmuch> walk over?

[20:33] <Limbic_Region> though I am not sure I see how to fix it

[20:33] <kolibrie> nothingmuch: six people

[20:33] <Limbic_Region> gcc-lib is not part of my PATH

[20:33] <Limbic_Region> so walking the path is out

[20:33] <nothingmuch> kolibrie: moose pie

[20:33] <nothingmuch> what do six people have to do with it?

[20:33] *** TimToady joined
[20:34] <kolibrie> six strong people

[20:34] <kolibrie> for lifting

[20:34] <nothingmuch> oh

[20:35] <nothingmuch> i doubt six are enough

[20:35] <nothingmuch> 1500 k / 6 is quite a bit

[20:35] <nothingmuch> i doubt i can lift 200+ kilos

[20:35] <kolibrie> me neither

[20:35] <Limbic_Region> audreyt - must go now, will touch base with you tomorrow if it isn't fixed by then ;-)

[20:35] <szbalint> audreyt: Is there a way I can work around that Data.Yaml.Syck b0rk? I can't build Pugs without that to test your fix.

[20:37] <clkao> nothingmuch: sure

[20:38] <nothingmuch> clkao: so we should leave roughly now

[20:38] <audreyt> szbalint: give me shell?

[20:38] <clkao> i think we can be late a bit

[20:38] <szbalint> audreyt: ok

[20:39] <nothingmuch> clkao: when i looked up 18:00 it said "there are no open rental agencies at the hour you selected"

[20:39] <nothingmuch> maybe we can use jesse's car and two drivers?

[20:40] <clkao> nothingmuch: uhm, the opening hours saz till 1800

[20:40] <nothingmuch> clkao: oh

[20:40] <nothingmuch> okay

[20:40] <nothingmuch> i didn't read the sign

[20:46] <szbalint> audreyt: see pm for details.

[20:46] <spinclad_> rafl: it is... was wondering if any tests i could do would help (like reregister by hand in ~/.ghc, watch wrapper want to register in global)

[20:47] <spinclad_> but now i'm away.  could try things on feather (where sudo is not an option anyway)

[20:56] <fglock> clkao: how about making Data::Bind optional for now - default to the old behaviour if it is not installed

[20:56] *** weinig|away is now known as weinig

[20:57] <clkao> fglock: why? then things will break

[20:57] <clkao> no named args

[20:57] <fglock> clkao: I can't run in windows :(

[20:58] <fglock> I'm only testing simple statements

[20:58] <clkao> i thought audrey made the windows

[21:00] <fglock> we can make it proceed with warnings

[21:01] *** DaGo joined
[21:03] *** dolmen joined
[21:07] <svnbot6> r11221 | fglock++ | v6 - added "invalid rule syntax" message

[21:11] *** sahadev joined
[21:14] *** Sage joined
[21:16] <rafl> spinclad_: Nothing is registering globally anyway. I could only think of problems when things are already registered in ~/.ghc..

[21:16] <unobe> audreyt: uploaded latest smoke test with PUGS_EMBED=perl5, and created new image file @ unobe.com/packages/pugs-6.2.12-OSX-10.4.dmg

[21:24] <audreyt> woot

[21:25] *** ludan joined
[21:26] *** Daveman joined
[21:29] *** bpphillips joined
[21:32] <spinclad_> rafl: i was seeing attempts to register globally before i got rid of ~/.ghc entries... audreyt was working with Limbic_Region last night with a manual fix step of C<sudo ../../Setup install> to succeed in registering globally

[21:32] <spinclad_> can we detect old ~/.ghc entries and remove them?

[21:35] *** tup joined
[21:40] <svnbot6> r11222 | fglock++ | v6 - placeholder for rules in emitter;

[21:40] <svnbot6> r11222 | fglock++ | - "Useless use of a variable in void context at (eval 200) line 71."

[21:47] <clkao> audreyt: what's the win32 data::bind situation?

[21:55] *** Sage left
[22:01] *** cognominal joined
[22:06] *** vsoni joined
[22:06] <svnbot6> r11223 | fglock++ | Pugs-Compiler-Rule - fixed a problem with each() initialization in the

[22:06] <svnbot6> r11223 | fglock++ | emitters

[22:06] <vsoni> seen audreyt

[22:06] <jabbot> vsoni: audreyt was seen 42 minutes 5 seconds ago

[22:06] *** nothingmuch joined
[22:07] *** weinig joined
[22:07] *** bpphillip1 joined
[22:12] <svnbot6> r11224 | fglock++ | v6 - emits code for 'token { <a> }'; untested! - needs more work on parameters

[22:13] *** bpphillip1 left
[22:14] *** frederico joined
[22:16] *** Eimi joined
[22:17] <fglock> it's now possible to implement s/// with p6 rule syntax inside

[22:19] <fglock> &

[22:19] *** fglock left
[22:22] <gaal> TimToady /audreyt: L<06/"Immutable types"> is missing a Tuple type.

[22:23] <TimToady> s/Tuple/Seq/

[22:23] <TreyHarris> TimToady: what should I do with typos in Synopses?  send you a diff?

[22:23] <gaal> ah.

[22:23] <TimToady> TreyHarris: that works

[22:24] <gaal> TimToady: but that implies only positional lookup, doesn't it?

[22:24] <rgs> TimToady: audreyt: I'd love to have your advice on http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2006-07/msg00148.html

[22:24] <TimToady> we wanted to avoid conflict with the relational meaning of tuple.

[22:24] <lambdabot> Title: "state variables progress"

[22:24] <gaal> TimToady: what about "simple" immutable records?

[22:25] <gaal> are those simply locked mappings?

[22:26] <gaal> I don't know how important this is, but haskell gives records you can query either by position or by name.

[22:27] <TimToady> rgs: 1 is fine.  assignment to (state $x) is basically just erroneous, and they should be glad if they get a warning.

[22:27] <rgs> TimToady: OK. this one was my favourite actually. :)

[22:28] <TimToady> gaal: I suppose.  I'm not entirely sure how much we distinguish these things by type, and how much we can just recognize immutability as an optional "feature" of mutable types.  I suspect Audrey has a clearer idea about this...

[22:29] <TimToady> perhaps captures can be made to cough up their named associations sequentially somehow...

[22:31] <TimToady> even a hash can give you the elements in an order, if you don't mind random order. :)

[22:31] <gaal> :) yes, I noticed the ordedness of Mapping isn't specced...

[22:31] <TimToady> but Perl doesn't really care to confuse the Array and Hash roles...

[22:32] <TreyHarris> oh, c'mon.  it worked so well for PHP *choke8

[22:32] <TimToady> on the other hand, it certainly doesn't care if you wnat to define an object with both roles.

[22:32] <TimToady> after all, captures do just that...

[22:33] <TimToady> but not with the same data

[22:33] *** bpphillips joined
[22:34] <TreyHarris> TimToady: that's what i thought, but why doesn't this work then:

[22:34] <TreyHarris> ?eval my $z = \($x, $y, :a, :!b); say $z<a>

[22:35] <evalbot_11168> Error: Undeclared variable: "$x"

[22:35] <TreyHarris> oops.  well, it doesn't work even if you declare them :-)

[22:35] *** stevan joined
[22:35] <TimToady> I don't think captures are completely implemented yet.

[22:36] <TreyHarris> ok.  so that *should* work, and say "1"?

[22:36] <TimToady> I seem to recall it was one of the things that was waiting on .12

[22:36] <TimToady> yes, it should, I think.

[22:37] <TimToady> or rather, probably "Bool::True".

[22:44] <gaal> the forky view could be useful in XML<->Capture mappings, or maybe not.

[22:44] <gaal> I mean, does $node<foo> mean attribute foo or a child node <foo/>

[22:46] *** JimKraj left
[22:46] *** bpphillips left
[22:55] <ingy> hola

[23:01] <TimToady> gaal: I would take it to be attribute foo.  There's no guarantee of uniqueness for child node <foo/>.

[23:10] <gaal> sure. XML-Simplisti^H^H^H^He nonwithstanding.

[23:10] <svnbot6> r11225 | audreyt++ | * change the ref. implementation for multi-dispatch to

[23:10] <svnbot6> r11225 | audreyt++ |   cover the new change proposed by spinclad++:

[23:10] <svnbot6> r11225 | audreyt++ |     each variant eliminates itself at semicolon points

[23:10] <svnbot6> r11225 | audreyt++ |     if it's lost at that level.

[23:13] *** joples joined
[23:23] *** marksto1 joined
[23:31] *** rashakil joined
[23:42] <kolibrie> audreyt: can send me your .vimrc (or at least your minibufexpl.vim settings)

[23:44] <gaal> kolibrie: just put that file in ~/.vim/plugins/

[23:44] <gaal> (nad hi :)

[23:44] <gaal> *and

[23:44] <kolibrie> gaal: moose!

[23:45] <kolibrie> gaal: but I want my filenames down at the bottom

[23:49] <gaal> heh, interestingly I don't see an obvious setting for that

[23:50] <kolibrie> it's a very long file to browse through looking for settings

[23:52] * kolibrie thought audreyt might have other nifty things set up, too

[23:55] <kolibrie> shower &

