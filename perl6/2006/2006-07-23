[08:30] *** ilogger2 joined
[08:46] *** tup joined
[08:53] *** elmex joined
[09:03] *** Revision17 joined
[09:22] *** dmsantam joined
[09:30] *** wesley joined
[09:39] <svnbot6> r11693 | scw++ | Pugs::Emitter::Rule::Parsec

[09:39] <svnbot6> r11693 | scw++ |  * <ws> and <?subrule>

[09:39] <svnbot6> r11693 | scw++ |  * test updated, checked by replacing corresponding rules in

[09:39] <svnbot6> r11693 | scw++ |    Parser/Literal.hs

[10:04] *** dolmen joined
[10:05] *** froh-doh joined
[10:14] *** dolmen left
[10:16] *** pdcawley_ joined
[10:27] *** elmex joined
[10:36] <svnbot6> r11694 | cmarcelo++ | HsJudy:

[10:36] <svnbot6> r11694 | cmarcelo++ | * Change internal GC map-type name from Map to GCMap to avoid confusion.

[10:36] <svnbot6> r11694 | cmarcelo++ | * -Ofun in tests directory: Use prove to "make test", output is nicer.

[10:36] <svnbot6> r11694 | cmarcelo++ |   Moved all test-support functions to Test.hs. Experimental syntax for tests.

[10:36] <svnbot6> r11694 | cmarcelo++ | * Remove unused Try.hs, k-judy uses new API.

[10:41] <cmarcelo> audreyt: finalizer creation code doesn't work as I thought, it doesn't capture the right "needGC" definition, it takes all to be True, and this cause bugs to Maps who doesn't use GC. I'm going to sleep now and try some more type hackery tomorrow. part of my intent is described in http://paste.lisp.org/display/23024 [which doesnt work because "a" in undefined::a is diferent from "a" in type signature of the function].

[10:42] <cmarcelo> sleep &

[10:54] *** BooK joined
[10:57] *** bernhard joined
[11:18] *** z3ndrag0n joined
[11:36] <pmurias> someone fixed irc.pugscode.org

[11:49] <clkao> fglock: fnord

[11:49] <clkao> fglock: is t/11-parsec.t supposed to fail?

[11:51] *** iblechbot joined
[12:18] *** xinming__ joined
[12:19] *** xinming joined
[12:19] *** chris2 joined
[12:27] <lumi> cmarcelo: I think if you have g (x::a) = ... it should be the same 'a' as that

[12:30] <lumi> Oh, it's phantom.. Maybe you can hang the other type annotation on the C then

[12:36] *** mauke_ joined
[12:36] <gaal> pmurias: well, you could use symbol table stuff, if yout tokens aren't anonymous...

[12:41] <clkao> raah!

[12:51] *** mauke_ is now known as mauke

[13:02] <svnbot6> r11695 | clkao++ | Don't care about PVLV for now, this is about passing $_ in a for to

[13:02] <svnbot6> r11695 | clkao++ | another sub.

[13:05] <svnbot6> r11696 | clkao++ | Binding array and arrayref should work now.

[13:05] <svnbot6> r11697 | clkao++ | * Use Data::Bind's bind_op2 instead of tie for := operator.

[13:05] <svnbot6> r11697 | clkao++ | * Various tweaks for array related emit.

[13:05] <svnbot6> r11697 | clkao++ | * Fix capture emit for @array arguments.

[13:10] *** pmurias_ joined
[13:11] <pmurias_> gaal: how would it look like?

[13:12] *** drbean joined
[13:12] *** xdg joined
[13:15] *** ubuntu joined
[13:29] *** larsen joined
[13:37] <clkao>   splice @array, 1, 1, ();

[13:37] <svnbot6> r11698 | clkao++ | binding a element of a bound array should work.

[13:38] <clkao> does this replace the array element with undef or actually remove the element?  i think it should be the latter. then operator/arrays.t is wrong

[13:41] <svnbot6> r11699 | clkao++ | * Nuke ::Alias in favour of bind_op2, which works for array.

[13:41] <svnbot6> r11699 | clkao++ | * +@array --> scalar @array.

[13:41] <svnbot6> r11699 | clkao++ | This passes most of t/operators/binding/arrays.t

[13:43] <gaal> pmurias: %hash<$_> = Some::Package::{"&" . $_} for <token1 token2 someothertoken>

[13:43] *** penk joined
[13:49] *** stephanepayrard_ joined
[13:50] <gaal> pmurias: but I don't think we parse symtable lookup yet

[14:09] <nothingmuch> clkao: ping

[14:14] <clkao> nothingmuch: pong

[14:15] <nothingmuch> clkao: can you please, off the top of your head, list some App::CLI best practices?

[14:15] <nothingmuch> like how to get a nice --help subcommand for everything

[14:15] <nothingmuch> how to write usage

[14:16] <nothingmuch> how to make program with no command say something useful

[14:16] <nothingmuch> etc?

[14:16] <clkao> nothingmuch: ping glasser ;)

[14:16] <nothingmuch> glasser: ping

[14:17] <glasser> nothingmuch: ack

[14:17] <nothingmuch> glasser: backlog 10 lines ;-)

[14:18] <glasser> I think the answer is mostly "steal from SVK"

[14:18] <glasser> (or jifty)

[14:18] <nothingmuch> i was hoping for a shortcut

[14:18] <nothingmuch> since SVK uses base classes extensively

[14:18] <glasser> yeah

[14:18] <nothingmuch> but i guess i'll just do that

[14:19] <glasser> right, you have to watch out for the fact that &options is an App::CLIism whereas parse_arg is svkism eg

[14:22] <nothingmuch> hmm

[14:22] <nothingmuch> wanna look at my code, and maybe suggest some quick stuff?

[14:22] <nothingmuch> it'll be a while till i actually get around to it

[14:22] <nothingmuch> so in the mean while you may be tempted to do it for me ;-)

[14:23] <glasser> Sure

[14:23] <nothingmuch> http://nothingmuch.woobling.org/Mail-Summary-Tools/lib/Mail/Summary/Tools/CLI/

[14:23] <lambdabot> Title: Index of /Mail-Summary-Tools/lib/Mail/Summary/Tools/CLI

[14:23] <nothingmuch> and CLI.pm, of course

[14:24] <glasser> Yeah, we should whip up an app cli quickstart or something

[14:24] <nothingmuch> when ann and I poked through App::CLI we managed to get a reference docpatch

[14:24] <nothingmuch> but nothing introductory

[14:28] <glasser> bah, i never set up ghc/darcs on the macbook

[14:29] <glasser> (does darwinports install ghc yet?)

[14:29] <glasser> hmm, where's the bin?

[14:30] <glasser> ah, script

[14:34] <glasser> hmm, so bin/svk has a couple stanzas at the top that deal with help and version

[14:34] <glasser> and SVK::Command::Help has some special stuff in it

[14:34] <glasser> that could both probably be factored out, either into App::CLI, or into some sort of App::CLI::Help module... clkao's taste

[14:49] <glasser> clkao: if you think either of those plans are a good idea, might do that on train to tel aviv

[14:50] *** pdcawley joined
[14:51] *** cognominal joined
[15:04] *** ivanfrey is now known as Dr_Pi

[15:11] *** cdpruden joined
[15:25] <nothingmuch> 23

[15:32] *** szbalint_ joined
[15:33] <clkao> glasser: yes, that's a good idea

[15:40] *** szbalint_ is now known as szbalint

[15:42] *** shachaf__ joined
[15:45] <glasser> nothingmuch, clkao: ok i think the next train trip will be "pull help and friends out of svk into app::cli"

[15:46] <glasser> which is right now :)

[15:46] <nothingmuch> =)

[15:46] <nothingmuch> awesome

[15:47] <glasser> and if you really want to come to a hackathon at um, my girlfriend's cousin hotel in bat yam in a couple hours :)

[15:47] <glasser> though we probably have to sleep instead :)

[15:48] *** shachaf__ left
[15:50] *** jtextori joined
[15:54] *** frederico joined
[15:55] <gaal> glasser: does israrail have wifi?

[15:58] <jtextori> Hi, can we ask for help in this channel ? I'm trying to install pugs from CPAN since this morning and ...

[16:01] <Aankhen``> On what platform?

[16:02] *** douglashunter joined
[16:02] <jtextori> on linux mandriva 2006 (Intel 32bit architecture)

[16:02] <gaal> and what happened?

[16:02] <jtextori> I got a undefined reference during this build : *** Building: /usr/bin/ghc -hide-all-packages -package stm -package network -package mtl -package template-haskell -package base -package pugs-fps -package pugs-HsSyck -package unix -package readline -idist/build -Ldist/build -idist/build/src -Ldist/build/src -o pugs src/Main.hs -lHSPugs-6.2.12 -threaded

[16:02] <jtextori> /root/.cpan/build/Perl6-Pugs-6.2.12/dist/lib/pugs-HsSyck-0.1/libHSpugs-HsSyck-0.1.a(Syck.o):(.text+0xfe4c): undefined reference to `DataziYamlziSyck_da1l'

[16:02] <jtextori> and other are following

[16:03] <douglashunter> jtextori:  I had the same problem this morning until I did a `sudo make realclean`

[16:03] <douglashunter> Then the build went fine.

[16:03] <jtextori> Ok i'll try that first, thanks !

[16:04] <douglashunter> This was after about 6 months of staleness in my pugs checkout.

[16:05] <douglashunter> I had a question about comments.  S02 says:

[16:05] <douglashunter> Multiline comments are provided by extending the syntax of POD to

[16:05] <douglashunter>            nest "=begin comment"/"=end comment" correctly without the need for

[16:05] <douglashunter>            "=cut".

[16:05] <douglashunter> , but it seems that a "=cut" is needed after the "=end comment"

[16:05] <douglashunter> Am I misreading something?

[16:06] <douglashunter> (sorry for the crapflood)

[16:06] <gaal> you mean it seems in pugs? not all that is specced is 'plemented

[16:06] <gaal> could you look for tests and possibly add one?

[16:07] <douglashunter> gaal:  yes, I meant in pugs.  I'm just getting around to reading the synopsese and trying things out.

[16:07] <douglashunter> gaal: sure.

[16:07] <gaal> there is t/syntax/POD.t but that doesn't look very comprehensive.

[16:08] <gaal> take another look: there may be more tests hiding about this

[16:08] <gaal> if so, please unify

[16:08] <gaal> if not, please beef up that test

[16:08] <douglashunter> gaal:  thanks for the pointer.

[16:08] <gaal> and commit away

[16:08] <douglashunter> Is it an open repo?

[16:08] <gaal> what's your email address?

[16:08] <douglashunter> [email@hidden.address]
[16:09] <gaal> there's an invitation on it's way to you now.

[16:09] <douglashunter> Ahh, thanks.

[16:09] <gaal> when you commit, please add yourself to AUTHORS. welcome aboard :)

[16:09] <douglashunter> Heh, thanks ;-)

[16:11] <gaal> cpan-upload? util/add-text-file? what the world needs is util/add-pugs-committer, obviously.

[16:11] *** justatheory joined
[16:12] <gaal> this is actually an interesting test. it means use perl5:WWW::Mechanize, or for the ambitious, porting that to Perl 6

[16:12] <gaal> s/test/task/

[16:14] <svnbot6> r11700 | scw++ | Pugs::Compiler::Rule

[16:14] <svnbot6> r11700 | scw++ |  * accepting <!before ...> and <!after ...>

[16:14] <svnbot6> r11700 | scw++ |  * emit Parsec code for <!before ...>

[16:18] <jtextori> douglashunter: thanks, but it seems it hasn't change anything (compilation problem) the error is hapening in this Compiling Pugs             ( src/Pugs.hs, dist/build/src/Pugs.o )

[16:18] <jtextori> /usr/bin/ar: creating dist/build/libHSPugs-6.2.12.a

[16:18] <gaal> jtextori: can you try from svn please?

[16:18] <gaal> svn://svn.openfoundry.org/pugs

[16:19] <jtextori> Yes, non proble, i'll try that., thanks

[16:19] <gaal> if you want to use parrot though, you also need HEAD of that.

[16:19] <gaal> but don't worry, parrot doesn't take long to build

[16:20] <jtextori> i got parrot from svn this morning, don't really know why i didn't follow for pugs, and went to CPAN, maybe i'm tired ;-)

[16:20] <jtextori> thanks for help

[16:21] <gaal> let us know how it goes :)

[16:28] <jtextori> gaal: sorry, but  is co available for anonymous ? because i'm getting an error : can't connect to host, connection refused ??

[16:29] <gaal> http://svn.openfoundry.org/pugs # try the "http"

[16:29] <lambdabot> Title: Revision 11700: /

[16:29] <jtextori> OK

[16:38] *** Marsel joined
[16:41] *** Marsel joined
[16:42] <pmurias> fglock: ping

[16:44] <pmurias> cancel ping

[16:45] * gaal wonders what is the sound of a ping cancelled

[16:54] *** Marsel is now known as jtextori

[16:55] *** dolmen joined
[16:58] *** slanning joined
[16:58] *** salty-horse joined
[17:08] <clkao> something is going really wrong with v6

[17:08] <clkao> it's trying to compile html::entity???

[17:10] *** jabbot joined
[17:11] *** pdcawley_ joined
[17:14] <clkao> its gone totally mad

[17:19] <nothingmuch> I CAN"T LET YOU COMPILE THAT CLKAO

[17:19] <nothingmuch> CLKAO? WHAT ARE YOU DOING?

[17:20] <clkao> i am trying to smoke v6, andfound it totally went mad

[17:20] *** _maydayjay_ joined
[17:21] <gaal> you are the smoke?

[17:21] <nothingmuch> clkao: dude, that's what you get for smoking weird shit

[17:25] *** baest joined
[17:27] <svnbot6> r11701 | clkao++ | Emit ; for last statement in block.

[17:29] *** Dr_Pi joined
[17:33] <svnbot6> r11702 | clkao++ | Need params for bind_op2.

[17:33] <Dr_Pi> I'm running make smoke and it appears to be hanging at t/perl5/mothod.t

[17:34] <Dr_Pi> Aggggh, s/mothod/method/

[17:39] <clkao> so "grammar YetAnother {    rule def { D <eh> F }  }" fails parsing

[17:40] *** penk joined
[17:47] *** cdpruden joined
[17:49] <gaal> yay, it compiles! p6 view of new ast coming up...

[17:51] *** pdcawley_ joined
[17:51] <clkao> whoot

[17:51] <Juerd> Does anyone still use feather for other things than irc? :)

[17:52] <gaal> slides :)

[17:52] <gaal> and pugscode.org should move there

[17:52] <gaal> and repo too

[17:52] <svnbot6> r11703 | gaal++ | * CapInternals now compiles via CITest, which successfully dumps

[17:52] <svnbot6> r11703 | gaal++ |   some AST types. Demo output coming up in a nopaste near you...

[17:53] *** spinclad joined
[17:55] <Juerd> I put in extra RAM because the old amount was sufficient

[17:55] <Juerd> I mean insufficient

[17:55] <Juerd> Now it has more than enough and it's hardly even used :)

[17:56] <wolverian> gaal, should or will?

[17:56] <Juerd> Why should or would it?

[17:56] <gaal> would once tuits are obtained

[17:56] <Juerd> Do we want a single point of failure that badly? :)

[17:56] <gaal> should for community hackability

[17:56] <Juerd> That's a good point.

[17:57] <gaal> as for repo, I like fast updates+commits :)

[17:57] <Juerd> Is the current repo slow, then?

[17:57] <gaal> outside .tw? yeah

[17:58] <Juerd> Perhaps two repositories can synch, so it can be fast both in and outside .tw

[17:59] <Juerd> I have a rm -rf running for 10 minutes already

[17:59] <Juerd> On a single directory with gazillions of small files.

[17:59] <Juerd> qpsmtpd forgot to clean up after itself.

[18:00] <Juerd> Zapping directories should be easier

[18:00] <gaal> I'm sure there are filesystems where it's fast

[18:00] <Juerd> There are

[18:00] <gaal> but maybe those are slower for other things?

[18:00] <Juerd> Not really

[18:00] <Juerd> But they are, in general, less reliable.

[18:01] <Juerd> Still, though, that doesn't fix my case :)

[18:02] <Juerd> I don't even know how many files are in there

[18:02] <Juerd> But it's email, mostly small files

[18:02] <Juerd> 16 GB of it.

[18:03] <gaal> finding out how many probably takes about as long as deleting

[18:03] <Juerd> It does.

[18:03] <gaal> unless there's some clever incidental way of doing it, like looking at the space allocated for the directory itself.

[18:03] <Juerd> I'm using rm -rf just because other tools weren't able to do this as fast.

[18:03] <Juerd> Nope, because I use directory indexes

[18:04] <Juerd> If I knew any of the file names in this directory, I could retrieve the file very fast :)

[18:04] <Juerd> But this does make the directory entry allocation unpredictable

[18:04] <Juerd> This indexing thing is also why I hadn't noticed anything. There was no performance drop.

[18:04] <Juerd> It scales well, that much is obvious to me now :)

[18:05] <Juerd> I only noticed because the hard drive was getting full

[18:05] <Juerd> And du got stuck in this directory, eventually segfaulting.

[18:07] <jtextori> Hi again, does anyone would know where this error come from, and what it means ? => Building Pugs-6.2.12...

[18:07] <jtextori> ghc-6.4.1: Error: module 'Data.Yaml.Syck' is exposed by package pugs-HsSyck-0.1 and package pugs-HsSyck-0.2

[18:07] <jtextori> Build failed: 256 at util/build_pugs.pl line 156.

[18:07] <jtextori> i'm still trying to compile pugs

[18:07] <jtextori> with last svn version

[18:07] <gaal> jtextori: please run 'ghc-pkg unregister --user pugs-HsSyck-0.1'

[18:07] <jtextori> OK thanks

[18:08] <gaal> and for good measure, the same with 0.2 too

[18:08] <jtextori> OK

[18:15] *** penk left
[18:16] <clkao> weird. i don't see to be able to export to core::global

[18:16] <buubot> :global will be added by christmas

[18:17] <clkao> i mean in p5

[18:18] <gaal> clkao: do you have root?

[18:19] <clkao> gaal: huh?

[18:19] <clkao> on what?

[18:19] <gaal> sorry, I'm in a discordian mood, don't mind me :)

[18:20] <gaal> ladies, and gentlemen:

[18:20] <pasteling> "gaal" at 192.115.25.249 pasted "Perl 6 Representation of New AST" (788 lines, 11.5K) at http://sial.org/pbot/18586

[18:23] * xerox prods gaal 

[18:24] * gaal moose

[18:24] <gaal> s

[18:24] <clkao> moose

[18:24] <svnbot6> r11704 | gaal++ | * misc/pX/gaal/CITest.hs: demo generation of Perl6Class on new AST.

[18:24] <svnbot6> r11704 | gaal++ |   Output is here: http://sial.org/pbot/18586

[18:24] <lambdabot> Title: Paste #18586 from "gaal" at 192.115.25.249

[18:25] <clkao> mmm

[18:25] <clkao> src/Pugs/AST/Internals.hs:1987:0:

[18:25] <clkao>     Duplicate instance declarations:

[18:25] <clkao>       src/Pugs/AST/Internals.hs:1987:0: instance Typeable Regex

[18:25] <clkao>       src/RRegex/PCRE.hs:48:8: instance Typeable Regex

[18:25] <gaal> grr. fixing.

[18:25] <xerox> `instance Typeable Regex' is scary!

[18:26] <gaal> also, bogus. we don't support 6.2 any more...

[18:26] <gaal> eh, no, that's the Tree instance

[18:26] <xerox> Who uses 6.2 anyway... <chuckles>

[18:27] <gaal> you mean it sucks because it's typeOf () which is obviously a lie?

[18:27] <gaal> well, sometimes a hacker's gotta do... never mind :)

[18:31] <gaal> fixed.

[18:31] <xerox> %-)

[18:33] <svnbot6> r11705 | gaal++ | * unbreak the build

[18:33] <svnbot6> r11705 | gaal++ | * remove some old cruft from Pugs.AST.Internals

[18:33] <svnbot6> r11706 | gaal++ | * unbreak CapInternals, for all-around fairness and wellbeing

[18:36] *** aufrank joined
[18:48] <salty-horse> according to t/syntax/parsing/sub_calls.t it's still hasn't been decided whether the call foo'bar' is allowed. can i still 'fix' the examples using that method so they could run? or should it wait?

[18:49] <clkao> So once class is declared, the name became bareword.  what to do with Str::Foo ? is it a type ? or is it Foo under Str:: ?

[18:53] <wilx> Start using typename!

[18:53] <wilx> Yay!

[18:53] <wilx> j/k

[18:53] <wilx> :D

[19:08] *** Corion joined
[19:08] <lisppaste3> xinming pasted "Build fail" at http://paste.lisp.org/display/23040

[19:20] <xinming> no one encountered my error?

[19:22] <audreyt> xinming: try r11707

[19:23] <svnbot6> r11707 | audreyt++ | * unbreak the build.

[19:23] <gaal> that seems to be a popular commit message today :(

[19:23] <audreyt> clkao: once class is declared, it installs a nullary macro function of the same name

[19:23] <audreyt> clkao: it's a Pugs-ism (unspecced) but the only approach I find actually usable

[19:24] <gaal> I don't understand r11707, audreyt. don't we require 6.4?

[19:24] <audreyt> Str::Foo is Foo under Str::.

[19:24] <audreyt> <= 604

[19:24] <audreyt> not <604

[19:24] <gaal> is that 6.4.0?

[19:24] <audreyt> no

[19:25] <audreyt> hm

[19:25] <audreyt> it's 6.4.x

[19:25] <gaal> xinming: what ghc do you have?

[19:25] <audreyt> 604 is the level of GHC

[19:25] <audreyt> .0 .1 .2 are patchlevel

[19:25] <audreyt> governed by another macro

[19:25] <gaal> ah

[19:25] <xinming> gaal, 6.4.2

[19:25] <audreyt> add a comment perhaps?

[19:25] <audreyt> I need to go to the airporti n a few mins :)

[19:26] <aufrank> I'm beginning to question your commitment, audreyt ;)

[19:26] <audreyt> I'll go back from the airport if it has wifi

[19:26] <audreyt> :)

[19:26] <aufrank> slacker

[19:26] <audreyt> lol

[19:27] <gaal> oscon bound? have fun!

[19:27] <audreyt> yes, oscon bound :)

[19:27] <audreyt> thanks!

[19:27] <aufrank> audreyt: is this the trip that also involves microsoft presentations, or did that already happen?

[19:27] <audreyt> it happened quite a while ago

[19:27] <audreyt> I'm in Boston now

[19:28] <aufrank> cheaper than flying from .tw, I guess ;)

[19:28] <audreyt> :)

[19:29] <gaal> !?

[19:29] <gaal> ./third-party/HsSyck/Data/Yaml/Syck.hs:{-# OPTIONS_GHC -optc-D__GLASGOW_HASKELL__=604 #-}

[19:29] <gaal> another one of our white lies? :)

[19:29] <audreyt> no

[19:29] <audreyt> hsc2hs

[19:29] <audreyt> inserts syms

[19:30] <audreyt> it's genned

[19:30] <clkao> audreyt: ok

[19:30] <gaal> so is src/Pugs/Embed/Parrot_hsc.h probably? it mentions __GLASGOW_HASKELL__ < 409 :-)

[19:30] <audreyt> yeaah

[19:32] <svnbot6> r11708 | clkao++ | forget_unlocal injects to actual caller namespace now.

[19:33] <audreyt> gaal: blog bit sent, happy journaling!

[19:33] <svnbot6> r11709 | gaal++ | * add a comment warning about version sym gotcha

[19:35] <gaal> thanks! :)

[19:35] <svnbot6> r11710 | clkao++ | * bare_block in param is a anonsub.

[19:35] <svnbot6> r11710 | clkao++ | * avoid \(@x) and \(my @x) for bind_op2, as that flattens the arrays.

[19:41] <svnbot6> r11711 | clkao++ | Be more careful when looking for 'my @x :='.

[19:44] <nothingmuch> audreyt: subetha to see://pasta.woobling.org

[19:48] <xerox> nothingmuch: is it open to anybody?

[19:49] <nothingmuch> yes

[19:49] <nothingmuch> but probably not interesting to everybody =)

[19:49] <xerox> If it is code, mind if I stare?

[19:50] <nothingmuch> it's mailing list summaries

[19:50] <nothingmuch> but sure, you're welcome

[19:50] <xerox> Oh thank you.

[19:51] <gaal> journal up

[19:51] <nothingmuch> xerox: well? i'm waiting ;-)

[19:52] <gaal> that formatting is probably not very good for a narrowish column...

[19:52] <xerox> I am getting see :)

[19:56] <nothingmuch>     Dan Kogai requested a version of C<slurp()> which would unconditionally

[19:56] <nothingmuch>     return a scalar, and proposed C<swallow()>. Damian Conway offered some

[19:56] <nothingmuch> ah

[19:56] <nothingmuch> http://nothingmuch.woobling.org/p6_april.html

[19:56] <nothingmuch> please proofread

[19:56] <lambdabot> Title:

[19:56] <wolverian> haha

[19:57] <wolverian> oh, nice, I hadn't read the "Context and coercion" thread

[19:58] <wolverian> nothingmuch++

[19:58] <nothingmuch> wolverian: kudra++

[19:58] * nothingmuch is just the toolsmith

[19:58] <xerox> nothingmuch: oh the evaluation period finished.

[19:59] * xerox sighs

[19:59] <wolverian> oh, kudra++

[19:59] <nothingmuch> xerox: =(

[20:00] <wolverian> I still kind of want to get rid of context and only talk about return type mmd :-)

[20:00] <wolverian> (but only when feeling bad and vengeful against others)

[20:03] <nothingmuch> wolverian: i actually agree

[20:03] <nothingmuch> on some level

[20:03] <nothingmuch> links changed from gmane to google

[20:11] <salty-horse> asking again :/ :  according to t/syntax/parsing/sub_calls.t it's still hasn't been decided whether the call foo'bar' is allowed. can i still 'fix' the examples using that method so they could run? or should it wait?

[20:18] <nothingmuch> Written by audreyt and posted by grinder

[20:18] <nothingmuch> oops

[20:18] <nothingmuch> wrong window

[20:23] <svnbot6> r11712 | salty_horse++ | fixed typo

[20:26] <svnbot6> r11713 | nothingmuch++ | Mailing list summary for April 2006 in Mail::Summary::Tools/YAML format

[20:29] *** jferrero joined
[20:30] <nothingmuch> audreyt: summary draft saved pugs.blogs.com... does anything else have to happen?

[20:30] <nothingmuch> robkinyon: ping

[20:30] <nothingmuch> gaal: ping

[20:30] <nothingmuch> maybe one of you can see it there?

[20:32] <svnbot6> r11714 | fglock++ | v6 - parses 'Native.pm' from v6-Compiler

[20:33] <xerox> gaal: what does DriFT exactly do in your usecase?

[20:33] <svnbot6> r11715 | fglock++ | v6-Compiler - fixed 'bool' rule in Native.pm

[20:37] *** buubot joined
[20:43] *** buubot joined
[20:43] *** buubot joined
[20:45] <gaal> nothingmuch: change it to "publish now" and save again

[20:45] * nothingmuch delegates

[20:45] <gaal> xerox: writes "showPerl6TypeDefs" instances for arbitrary Hs data types

[20:46] <gaal> and soon<tm>, asPerl6Object instances, too

[20:46] <nothingmuch> gaal: she says she doesn't want to publish without review

[20:46] <nothingmuch> and whther audrey can review it in there'

[20:46] <gaal> I expect she can

[20:46] <nothingmuch> s/and/and the original question was/

[20:47] <gaal> but worst case, copy the html and send?

[20:47] <gaal> audrey's on the way to the airport now, may not have wifi there

[20:47] <nothingmuch> i guess it can just be posted, right

[20:48] <gaal> xerox: src/DrIFT/RulePerl6Class.hs - see also RuleYAML.hs and YAML.hs in that directory for similar stuff

[20:48] <gaal> and look for files called "Instances.hs" in the source tree

[20:48] <gaal> that's where the DrIFT output goes.

[20:59] *** larsen joined
[21:00] *** FurnaceBoy joined
[21:01] *** kanru joined
[21:05] *** buubot joined
[21:18] *** ludan joined
[21:23] *** SubStack joined
[21:25] *** buubot joined
[21:25] *** buubot joined
[21:35] *** daxim joined
[21:37] <obra> heads up: perl.org will be going off the air for the afternoon in about 15 minutes

[21:41] *** larsen joined
[21:45] <spinclad> "should t/perl5/method.t be diverging in time and space?" (r11690) ... i see Dr_Pi hit this too.

[21:46] <spinclad> t/perl5/roundtrip, too (test 3)

[21:49] <spinclad> something in or around eval(q/.../, :lang<perl5>); is getting unhappy; dunno what yet tho.

[22:09] *** rbrown_ joined
[22:15] <clkao> summon fglock

[22:22] *** tup joined
[22:27] <nothingmuch> hmm

[22:27] <nothingmuch> are email addresses in http://svn.openfoundry.org/pugs/docs/summaries/2006/04-30.yaml a bad thing?

[22:27] <nothingmuch> being publicly readable etc?

[22:36] <svnbot6> r11716 | cmarcelo++ | * Fixes GC.freeRef being called for non-GC Refeable types. Still could

[22:36] <svnbot6> r11716 | cmarcelo++ | be better.

[22:47] *** lichtkind joined
[22:49] <lichtkind> TimToady may i ask you something?

[22:53] <Juerd> seen TimToady

[22:53] <jabbot> Juerd: TimToady was seen 2 days 6 hours 16 minutes 28 seconds ago

[22:53] <Juerd> Sending an email may work better :)

[22:54] <lichtkind> thanks juerd

[22:55] *** nnunley joined
[22:56] <lichtkind> juerd juerd the editor does fine, 3rd release after bochum

[22:57] <Juerd> Good to hear. Does it have many users?

[22:58] <Juerd> I'm going to bed. I'll read your reply tomorrow

[22:58] <Juerd> Good night

[22:58] <lichtkind> it grows finally today began last phase of cpanification

[22:58] <lichtkind> good nighnt

[23:00] <lichtkind> we got some users in forum i know of but rest ist hard to say

[23:03] <clkao> so we are at 415 passes now. a bit less than last week

[23:07] <Dr_Pi> before I get to t/perl5/method.t hanging I'm getting "t/perl5/array.t

[23:07] <Dr_Pi> Not an ARRAY reference at (eval 3) line 23."

[23:08] *** FurnaceBoy joined
[23:11] *** bsb joined
[23:15] <svnbot6> r11717 | clkao++ | Resource bound support for v6.pm

[23:15] <svnbot6> r11718 | clkao++ | emit for 'sub { 42 }()' properly.

[23:16] <clkao> so t/operators/binding/arrays.t mostly pass

[23:42] <clkao> jmm

[23:42] <clkao> so if i set $::{X}, i can call X, but not X() ??

[23:52] <clkao> ok, 522 pass

