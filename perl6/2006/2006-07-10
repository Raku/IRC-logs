[00:04] * nothingmuch ponders tagging http://www.flickr.com/photos/clkao/185926028/ as "may offend"

[00:04] <nothingmuch> awesome! http://www.flickr.com/photos/clkao/185928599/

[00:13] *** Khisanth joined
[00:14] <svnbot6> r11386 | fglock++ | v6 - fixed infinite loop parsing invalid expression

[00:16] *** sanug joined
[00:19] <TimToady> perl5/Sub-Multi/inc seems to be both under svn and clobbered by "perl Makefile.PL".

[00:19] <TimToady> anybody know what's going on there?

[00:19] *** frederico joined
[00:19] <obra> TimToady: if there's a .author directory in inc/ it's blown away at runtime

[00:19] <obra> likely the .author inside shouldn't be versioned

[00:19] <audreyt> fixed.

[00:19] <audreyt> dinner &

[00:19] <TimToady> thanks

[00:20] <TimToady> btw, still blowing up on my smokes after upgrade to Task::Smokes

[00:20] <svnbot6> r11387 | audreyt++ | * TimToady noted Sub::Multi clobberness.

[00:21] <TimToady> next step is blow the whole thing away and re svn up I guess...

[00:24] <TimToady> actually, now that I look at it, it's pulling in files from 5.8.6!  That can't be right...

[00:29] <sanug> ping pmichaud

[00:35] <svnbot6> r11388 | fglock++ | v6 - clear other warnings when reporting syntax errors

[00:54] <TimToady> It took me half an hour to upgrade Test::Smoke to 5.8.8.  Gah...we've got to do better on this...

[00:55] <TimToady> my cpanp was stuck in 5.8.6 land for some reason, so I had to learn cpan shell syntax all over again.

[00:56] <TimToady> we need to translate these things to Perl 6 so we can translate them to JavaScript and run 'em under Firefox.  :)

[00:59] <TimToady> we just need a refactoring translator that's smart enough to remove stupid shell prompts and replace them with nice buttons.  :)

[01:00] <TimToady> maybe 6PAN should just be an svn repostory.  :)

[01:00] <TimToady> s/st/sit/

[01:01] <TreyHarris> TimToady: I feel your pain.  I've been fighting for the past several hours because too many dist packagers don't make allowances for the possibility that I might want to install somewhere other than /usr or /usr/local

[01:01] <TreyHarris> (or wherever perl itself is installed)

[01:01] *** scook0 joined
[01:07] <TreyHarris> so where does the most up to date S29 draft live now?

[01:09] <TreyHarris> is it docs/Perl6/Spec/Functions.pod in the repository?

[01:11] <TimToady> *nod*

[01:11] *** ludan joined
[01:18] <bennymack> maybe 6PAN should jusit be an svn repostory.  :)

[01:18] <bennymack> huuh?

[01:20] <TreyHarris> s/sit/st/; s:2nd/st/sit/;

[01:33] *** xdg joined
[01:35] <xdg> FYI: Strawberry Perl Alpha 1 for Win32 is available at http://vanillaperl.com.  It should make experiments with v6.pm even easier than Vanilla Perl.

[01:35] *** lambdabot joined
[01:36] <xdg> Also Perl::Dist::Builder is up on CPAN.  While hacky and poorly documented, it can be used to create custom variations with other bundled modules.

[01:40] *** markstos joined
[01:41] *** lollan joined
[01:49] *** datasieve left
[02:24] *** revision17_ joined
[03:07] *** kanru joined
[03:26] *** revision17_ is now known as Revision17

[03:29] *** kanru joined
[03:30] *** neoesque joined
[03:40] *** vel joined
[03:49] <ajs_home> TreyHarris: latest S29 is now docs/Perl6/Spec/Functions.pod in pugs, yes.

[03:54] *** scook0 joined
[04:14] *** tup joined
[04:24] <TreyHarris> ajs_home: thanks.  so what were you thinking about for system (run, whatever) as far as its return behavior?  that success will be booleanized true is a given.  but are you thinking it will return an int with a different boolean role, or an object you can call into for exit status, signal, maybe output & error, etc.?

[04:25] <ajs_home> It will almost certainly return a Conc::Proc::Status object, just like wait

[04:26] <ajs_home> Getting that to do the right thing in boolean context should be trivial enough

[04:29] <TreyHarris> a Conc::Proc::Status will numify to the old wait return value, I assume

[04:29] <ajs_home> I specifically wrote wait to try to match both the Perl 5 programmer's expectations and S17, so it should serve as a good model for anything that needs to think about an external process's status.

[04:29] <ajs_home> TreyHarris: Correct

[04:30] <ajs_home> That's stated in the section for wait, but in an unfortunately obscure way. I'll fix that.

[04:30] <TreyHarris> is there a draft S17 somewhere?

[04:32] <ajs_home> There is...

[04:32] <ajs_home> I'm hard pressed to recall where, and I have the bookmark at work

[04:32] <audreyt> docs/Perl6/Spec/Concurrency.pod

[04:32] <ajs_home> heh, oh right :)

[04:33] <svnbot6> r11389 | ajs++ | Make it clear that wait needs a numifyable return value

[04:40] <TreyHarris> interesting.  what would happen under "Co-Routines" in Concurrency.pod if you wrote: "for all(@list) -> $x { produce $x }" ?

[04:41] <audreyt> evaluation order of junctions and hyperops are undefined.

[04:41] <audreyt> (intentionally)

[04:43] <TreyHarris> audreyt: right, but I thought C<for all(@list)> would ordinarily cause parallel execution.  would the presence of a produce inside suppress that behavior, and just cause the order to no longer be defined?

[04:43] <audreyt> actually, it _can_ cause parallel execution

[04:44] <audreyt> but the semantic is the same as if it's randomized and run separately sequentually.

[04:45] <ajs_home> It might do the same thing in the general sense as "for(@foo) { fork || return }", which is probably not what you wanted.

[04:46] <ajs_home> Best to combine straighforward looping with produce in order to be sure of the results.

[04:46] <ajs_home> A warning might be in order....

[04:47] <TreyHarris> the same issue would present with produce as return

[04:47] <ajs_home> Yes, I was simplifying for demonstration purposes.

[04:48] *** vel joined
[04:48] <ajs_home> The fact that produce sets up a co-routine is beside the point I think... combining it with process creation is probably more volatile than you wanted to deal with in a sane world.

[04:49] <ajs_home> This is all off the top of my head, having only skimmed the co-routine docs.

[04:50] <TreyHarris> yes, but parallelization has always been more the domain of ninjas than pirates.  i still hold out hope that P6 can bring it to pirates too

[04:53] <dduncan> seen obra

[04:53] <jabbot> dduncan: obra was seen 4 hours 33 minutes 20 seconds ago

[04:54] <dduncan> for those of you going to OSCON 2006, for whatever reason, I will now probably be joining you ... following obra's suggestion yesterday, I have just registered for the hallway track, aka exhibit hall only

[04:54] <dduncan> so I look forward to meeting you in person and/or working together at whatever available opportunities

[04:56] <dduncan> the main hurdles I have yet to overcome is to find 1-3 people to share a lodging with, and getting things in order at home so my $job can get along without me for that time

[04:56] <dduncan> if you, or anyone you know is looking for room-mates, please let me know

[04:56] <dduncan> and yes, I saw the terse room-sharing wiki

[04:56] <dduncan> but wanted to ask closer to the community first

[04:57] <dduncan> s/looking for/is willing to accommodate more/

[04:57] <dduncan> Red Lion is preferred as it is near by, but I can take other options

[04:57] * clkao smokes -BPerl5

[04:58] <audreyt> ooh!

[04:58] <clkao> test::harness hates everything

[04:58] <audreyt> dduncan++ # prospect of joining the OSCONathon

[04:59] <dduncan> audreyt, I seem to recall you specifically asked if I was going ...

[04:59] <dduncan> I don't suppose you have space in your hotel room that I could share?

[04:59] <sanug> audreyt: Need help with properties in svn - can you help?

[04:59] <audreyt> dduncan: sadly not.

[04:59] <audreyt> sanug: sure

[05:00] <sanug> I have read about them in a book just now

[05:00] <sanug> I would like to setup the html and jpg files in perl6_compilation properly

[05:00] <sanug> Could you review my current properties and explain what I need to do so I will remember in the future

[05:01] <dduncan> as far as dates ... I figured that if I arrived late monday and left early saturday, that should fit all the important stuff in for tues-fri

[05:01] <sanug> Also could you send me you defaults as you set them up in your svn config file

[05:01] <dduncan> bus travel will take about 11-12 hours each way from home

[05:01] <sanug> 2nd you s/you/your/

[05:01] <dduncan> unless I can find a carpool

[05:02] <dduncan> but that's not a concern to carry on here

[05:02] <sanug> audreyt: Also please explain what you do to review the properties and what you look for...

[05:03] <dduncan> anyway, if someone knows of a space to stay, let me know ... meanwhile, I'll ask those few on the roomsharing wiki

[05:03] <audreyt> sanug: I use the "pl" command

[05:03] <audreyt> svk pl *

[05:03] <audreyt> (same as svn I believe)

[05:03] <audreyt> to list props

[05:03] <audreyt> then I see you have both mime-type and svn:mime-type

[05:03] <sanug> Do you like svk better than svn?

[05:03] <audreyt> the mime-type one is bogus

[05:04] <audreyt> well, seeing I'm svk's #2 committer...

[05:04] <audreyt> ...yes :)

[05:04] <sanug> What is best method to acquire svk?

[05:04] <audreyt> svk.elixus.org has links to .pkg

[05:04] <sanug> I use  OS X 10.4

[05:04] <dduncan> as do I

[05:05] <dduncan> in my experience, the way of getting the svk package was a bit indirect ...

[05:05] <dduncan> I'm not sure a current one is linked on the svk homepage ... will look ...

[05:05] <sanug> Assume that clkao herein is Chia-Liang Kao

[05:07] <svnbot6> r11390 | audreyt++ | * remove the mime-type prop

[05:08] <dduncan> sanug, the OS X packages I have been using of svk were by Michael Brouwer [email@hidden.address]
[05:08] <dduncan> not sure if that specifically was linked on the svk homepage, or whether I found it by Google or an IRC link

[05:09] <clkao> just click download and there's the same macosx package on openfoundry

[05:10] <clkao> why get rid of the mietypes

[05:10] <clkao> ?

[05:10] <audreyt> I'm seeing application/octet-stream for some .jpg files

[05:10] <audreyt> changing it

[05:10] <audreyt> clkao: sanug had it as mime-type and also svn:mime-type

[05:10] <audreyt> so I removed the first variant

[05:10] <clkao> sodes

[05:10] <audreyt> sanug: this is what I'm doing:

[05:10] <audreyt> svk ps svn:mime-type image/jpeg *.jpg

[05:10] <sanug> Please say how incorrect modes were detected and removed

[05:11] <audreyt> I detect it with

[05:11] <audreyt> svk pg svn:mime-type *.jpg

[05:11] <audreyt> (again, should be same with svn)

[05:11] <sanug> Now  the html files are they setup properly

[05:12] <dduncan> clkao, yes, the downloads section seems to have it

[05:12] <sanug> They were not opening properly in browser

[05:12] <svnbot6> r11391 | audreyt++ | * change jpg files to image/jpeg

[05:12] <dduncan> I just recall going somewhere else once ... maybe it was for a special version for 10.3

[05:12] <dduncan> no matter

[05:12] <audreyt> sanug: they look correct.

[05:14] <sanug> We setup svn when I downloaded pugs - does switch to svk require any addition?

[05:19] <audreyt> yes. it involves

[05:19] <audreyt> mv pugs pugs-old-svn

[05:19] <audreyt> svk co http://svn.openfoundry.org/pugs

[05:19] <lambdabot> Title: "Revision 11391: /"

[05:19] <audreyt> hit <enter> multiple times

[05:19] <audreyt> and then wait a long, long time.

[05:20] <audreyt> preferably do it before a meal, or before sleep

[05:20] <audreyt> but, you can full revision history of Pugs, and so can find any file's content in any timepoint, even without network.

[05:21] <audreyt> well, unless that timepoint is in the future, in which case you need an additional "sleep" command and then "svk pull".

[05:21] <audreyt> after you get the checkout, "svk ci" is the same; instead of "svn up" you say "svk pull"

[05:21] <audreyt> otherwise it's identical. except suddenly it feels much faster.

[05:22] <sanug> So this co does a mirror the first time

[05:22] <audreyt> aye.

[05:22] <sanug> I see that the html files - some of them have extra carriage returns in the properties:

[05:23] <sanug> Properties on 'perl6_compilation/Perl_6_Compilation_Overview.html':

[05:23] <sanug>   PHEME.html : text/html; charset=UTF-8

[05:23] <sanug>   svn:mime-type : text/html; charset=UTF-8

[05:23] <sanug> Properties on 'perl6_compilation/Perl_6_on_Haskell_is_Pugs.html':

[05:23] <sanug>   PHEME.html : text/html; charset=UTF-8

[05:23] <sanug>   svn:mime-type : text/html; charset=UTF-8

[05:23] <sanug> the second file has PHEME.html property even though it is a Perl_6_on_Haskell_is_Pugs.html'

[05:23] <sanug> Perhaps this is in just my version?

[05:24] <ivanfrey> Why is ranlib not working any more.

[05:24] <sanug> There also seems to be 2 carriage returns after that propert and the correct svn:mime-type

[05:25] <audreyt> that is svn bug

[05:25] <audreyt> I mean, feature.

[05:25] <audreyt> svk doesn't display 2 carriage returns

[05:25] <sanug> Do you see PHEME.html as property?

[05:25] <audreyt> yes and I've just pd'ed it

[05:26] <audreyt> svk pd PHEME.html *html

[05:26] <sanug> Good all gone...

[05:26] <svnbot6> r11392 | audreyt++ | * remove PHEME.html property

[05:27] <sanug> Language_AddressBook.html STILL opens up the text file though - I just checked out the recent update in r11392

[05:27] <ajs_home> Because of a very long discussion in late 2005 around Time, I'm going to mostly punt time in S29. But if anyone cares, I'm moving time down one namespace hop from Time::Local to Time, and pushing off any documentationn on the use of a Time object to an external document.

[05:28] <audreyt> ajs_home: oh, btw.

[05:28] <ajs_home> yes?

[05:28] <audreyt> ajs_home: I wonder if it actually makes some sense to list only the core (as in, have no qualified form) functions in Functions.pod

[05:28] <audreyt> and move everything else to docs/Perl6/API/*

[05:28] <sanug> audreyt: PHEME_Parrot_based_Scheme.html opens up correctly as an image-map file.

[05:28] <audreyt> as in Math.pod

[05:28] <audreyt> sanug: good

[05:29] <audreyt> ajs_home: may make it more manageable in the long run

[05:29] <audreyt> esp. with the new P6AST, there's a lot of API on core objects that we need to list

[05:29] <audreyt> and Functions.pod is already too long

[05:29] <audreyt> (see also the doc layout for builtin prelude of all other OO languages)

[05:30] <audreyt> and the Functions.pod can just say

[05:30] <ajs_home> I would tend to agree... however it sort of breaks the stride of the original purpose of sectioning the Ap/Sy documents the way Larry did, doesn't it?

[05:30] <audreyt> use Math :EXPORT;

[05:31] <audreyt> which imports from Math and then reexport

[05:31] <audreyt> ajs_home: I think it ceased to make sense a while ago.

[05:31] <nothingmuch> http://en.wikipedia.org/wiki/Ingy_döt_Net

[05:31] <nothingmuch> =)

[05:31] <ajs_home> Plus EVERYTHING is prefixed in S29... we  haven't yet defined which things are auto-use/exported.

[05:31] <audreyt> (which is why in copying it to docs/perl6/ I removed the numbering)

[05:32] <audreyt> ajs_home: esp. for the API, layout it out in Perl6/API/ I think provides more room for edits

[05:32] <audreyt> as in, hierarchical

[05:32] <ajs_home> Ok, let me continue as I am for a bit, and then at some point, I'll take on the brain surgurey that that suggests.

[05:35] <audreyt> okay!

[05:35] <audreyt> ajs_home++

[05:37] <sanug> audreyt: I moved directories around as you suggested and started svk, can I still do svn pe on moved directory and update Language_AddressBook.html so it has property

[05:37] <svnbot6> r11393 | ajs++ | Cleaned up word and added docs for time/localtime/gmtime -- in 2005 there was a big discussion about time that I want to avoid for now....

[05:37] <sanug> svn pe svn:mime-type Language_AddressBook.html

[05:39] <sanug> audreyt: Or should it be svn ps svn:mime-type 'text/html; charset=UTF-8'  Language_AddressBook.html

[05:40] <svnbot6> r11394 | ajs++ | Corrected sprintf signature

[05:40] <audreyt> sure, you can

[05:44] *** stevan joined
[05:46] <svnbot6> r11395 | sanug++ | Updated svn:mime-type properties using this command so that each html file would open up in a browser instead of showing the image map to the user:  svn ps svn:mime-type 'text/html; charset=UTF-8' *.html

[05:49] *** buetow joined
[05:50] <sanug> audreyt: HTML files now all properly set up. Thanks for lesson in svk, svn - switching to svk.

[05:50] <audreyt> yay. :)

[05:51] <audreyt> I need to sleep now. bbiab tomorrow :)

[05:51] <obra> audreyt: I'm hoping to leave the house between 9 and 10 tomorrow

[05:51] <obra> so that yuval gets f00d before he has to fl33

[05:56] <ajs_home> must go sleep as well. night all

[05:57] <audreyt> obra: ok

[05:58] <nothingmuch> night guys, i'm also off to bed

[06:04] <clkao> audreyt: should fix -c with v6. the first time (compiling) it doesn't exec, just check. the second time it does run the program

[06:05] <audreyt> clkao: okay, sounds like a great idea! :)

[06:05] <audreyt> (it's just the body of v6.pm)

[06:05] <audreyt> sorry, really gotta sleep.

[07:11] *** Aankhen`` joined
[07:14] *** iblechbot joined
[07:19] *** drrho joined
[07:36] *** elmex joined
[08:12] *** dduncan left
[08:52] *** gaal joined
[08:52] <gaal> greetings from Tel-Aviv!

[09:04] <miyagawa> gaal: hi

[09:06] <gaal> hey :)

[09:08] *** revision17_ joined
[09:10] <clkao> miyagawa!

[09:11] *** cmatei joined
[09:19] <gaal> clkao: isn't it like, very early where you are?

[09:20] <miyagawa> clkao: still in boston?

[09:22] <clkao> miyagawa: in london now

[09:22] <clkao> gaal: it's already 10am

[09:22] <miyagawa> great. so everyone's back home now

[09:24] *** rw-rw-r-- joined
[09:29] * clkao is kind of homeless

[09:34] *** xinming joined
[09:35] <nnunley> clkao: Awww.

[09:36] <nnunley> miyagawa, gaal: Hey.

[09:37] <miyagawa> nnunley: I just blogged about Algorithm::RabinKarp (in japanese) http://blog.bulknews.net/mt/archives/002057.html

[09:37] <lambdabot> Title: "Rabin Karp アルゴリズ􏿽xE3􏿽x83 でコード重複の検出: blog.bulknews.net"

[09:39] <nnunley> Typo in the module name in that post.

[09:40] <miyagawa> fixing

[09:40] <xerox> Japanese...

[09:41] <miyagawa> xerox: babelfish it :)

[09:41] <miyagawa> nnunley: hm, where's the typo?

[09:42] <nnunley> Last line, cpan Algorithm::RabinKarpe

[09:42] <miyagawa> mk

[09:42] <miyagawa> fixed.

[09:43] <gaal> nnunley: heya! I didn't get a chance to use the data gathered yet. but now that the hackathon's over maybe it's time :)

[09:43] * nnunley grins.

[09:43] <nnunley> Golf time.

[09:43] *** paultcochrane joined
[09:46] <nnunley> Audrey: I've extracted possible prerequisite module containing all the calls to the P(ugs|erl6)::Internals namespace. Had two issues: 1. There's two namespaces for Internals. Should there be? 2. there's an *::Internals::eval ... all the other evals have a suffix of the evaluator to be used.  Is this intentional?

[09:46] <nnunley> gaal: I still have to improve the dup collation code.

[09:48] <gaal> nnunley: cool, I'll be happy to try it out when you do

[09:49] <gaal> what's in Perl6::Internals? Can't see anything that uses that namespace

[09:49] *** Aankh|Clone joined
[09:50] <gaal> As for the evals, maybe I'm not understanding the question, but the idea is that eval is a fontend because in usermode you say "eval 'str' :lang<foo>"

[09:53] <nnunley> Pugs::Internals::eval is a direct hook to the Haskell runtime.

[09:53] <gaal> ahh, you're asking should that be renamed to eval_perl6?

[09:53] <nnunley> I'm assuming that everything in the Internals is primative, and is supposed to be supplied by the perl6 runtime.

[09:53] <nnunley> Right.

[09:54] <nnunley> For consistency.

[09:54] <gaal> probably it should. fixing.

[09:54] *** cognominal joined
[09:54] <nnunley> gaal: Look at src/perl6/INTERNALS.txt

[09:55] <nnunley> That's the map of all functions called from the Prelude in the Internals namespace.

[09:57] <gaal> yes, fixing that too :)

[10:04] <nnunley> Cool.

[10:05] <svnbot6> r11396 | gaal++ | * Rename Pugs::Internals::eval to Pugs::Internals::eval_perl6

[10:05] <svnbot6> r11396 | gaal++ |   for consistency, as advised by nnunley++

[10:06] <gaal> Looking again I wasn't sure about the Perl6:: issue, looks wrong to me but I'm not familiar with that code.

[10:07] *** stephanepayrard_ joined
[10:07] <gaal> bbiab &

[10:07] <nnunley> k

[10:08] *** kanru joined
[10:09] *** stephanepayrard_ joined
[10:27] *** Aankh|Clone is now known as Aankhen``

[10:40] *** szbalint joined
[10:47] *** myavuzselim joined
[10:51] *** myavuzselim joined
[10:51] *** nothingmuch joined
[10:56] *** Jedai joined
[11:14] *** kanru joined
[11:17] *** HXanadu joined
[11:19] *** orafu joined
[11:23] *** myavuzselim joined
[11:33] *** mauke_ joined
[11:36] *** kanru joined
[11:40] *** iblechbot joined
[11:48] *** mauke_ is now known as mauke

[11:58] *** tifo joined
[12:03] *** ludan joined
[12:10] *** bpphillips joined
[12:32] *** Limbic_Region joined
[12:33] <Limbic_Region> audreyt ping

[12:35] * Limbic_Region is playing catchup as he was (and still is) under the weather

[12:35] <Limbic_Region> did someone already point out that the p6 summary has links to discussions from 3 years ago

[12:35] <Limbic_Region> ?

[12:36] * Limbic_Region knew something was fishy when he saw Dan S. in the summary

[12:36] <nnunley> There's a bit of a backlog. ;)

[12:36] <Limbic_Region> I wasn't sure if it was a mistake, a joke, or a test to see who was paying attention

[12:40] <nnunley> It does look like a mistake.

[12:42] <nnunley> the p6-(internals|porters) stuff is from 2003.  The p6-language summary is from 2006.

[12:42] *** christopher joined
[12:42] <nnunley> Right month, though.

[12:43] <Limbic_Region> rafl ping

[12:43] <ivanfrey> I have forgotten how to run the command ranlib. What options am I supposed to pass it.

[12:44] *** prefiks joined
[12:55] <marcus_> if you run the parrot test suite backwards, it says 'ONE RUNTIME TO RULE THEM ALL, AND IN THE DARKNESS BIND THEM'

[12:58] *** buetow joined
[13:02] *** fglock joined
[13:12] *** myavuzselim joined
[13:13] *** myavuzselim joined
[13:14] *** chris2 joined
[13:20] *** lollan joined
[13:20] *** xinming joined
[13:32] <Limbic_Region> fglock - thanks for the starter example - I have been under the weather for several days now (and still am) but I should get to it sometime this week

[13:42] *** vel joined
[13:46] *** kanru joined
[13:49] <fglock> Limbic_Region: ok!

[13:50] *** myavuzselim_ joined
[13:50] *** myavuzselim joined
[13:51] <fglock> cofee &

[13:56] *** justatheory joined
[14:01] <ivanfrey> In the INSTALL file this address " http://wiki.kn.vutbr.cz/mj/?Perl%206%20and%20Parrot" doesn't work

[14:07] <ajs_> Looks like the site is down... might be transient

[14:08] <nothingmuch> audreyt: wakey wakey

[14:08] <ivanfrey> I get errors about libHSpugs-HsSyck-0.1.a and libHSpugs-fps-0.7.a not having a table of contents. I run ranlib on them, but the make process just recreates the archives.

[14:12] *** weinig joined
[14:24] *** Limbic_Region joined
[14:24] <gaal> nothingmuch: moosey moosey

[14:25] <clkao> nothingmuch: i can't send my smoke output. server saz invalid format

[14:26] <ajs_> Oh great... -Barry- is trolling the Perl 6 Wikipedia page now... I live in hell.

[14:26] *** ajs_ is now known as ajs

[14:26] <gaal> ajs: did the bit arrived untoggled?

[14:27] <ajs> gaal: I was able to create an account, and check in, if that's what you're asking

[14:27] <gaal> yup. welcome aboard :)

[14:27] <ajs> thanks. Felt good to be able to check in where others would actually read it ;)

[14:27] *** myavuzselim_ joined
[14:28] <gaal> ah, you already checked in? haven

[14:28] <gaal> 't blacklogged yet.

[14:29] <ajs> Yeah, I checked in my batch of updates, and then did a few small things last night

[14:29] <ajs> Heh, just panicked when I updated my at-work copy of the tree and saw all of the examples being deleted ;)

[14:30] *** coderhasan joined
[14:31] <gaal> heh, something similar happened to me when I ran 'svk sw' on a wifiless train and watched in horror as CapInternals.hs was D'ed. Happily another sw revived it :)

[14:31] <svnbot6> r11397 | fglock++ | Pugs-Compiler-Rule 0.10 - added Pugs::Runtime::Common.pm

[14:31] <svnbot6> r11397 | fglock++ | - testing on the svn dir works, but it fails all tests in a clean installation

[14:31] <svnbot6> r11397 | fglock++ | (it looks like a Makefile.PL problem)

[14:32] *** coderhasan joined
[14:36] <ajs> Does MMD dispatch on named parameters? If I have "multi foo(Int $x){...}" and "multi foo(Int $y)", is "foo :$y" going to do what I expect?

[14:37] *** coderhasan left
[14:37] *** myavuzselim__ joined
[14:43] <fglock> gaal: where is the current definition of the AST?

[14:43] <svnbot6> r11398 | fglock++ | v6 - emitter uses Pugs::Runtime::Common

[14:45] <clkao> fglock: do we want the smoke output

[14:46] <clkao> i can't upload it for some reason. and i have a full output of the failed compile etc

[14:48] <fglock> clkao: it would be good to have it for comparison with later versions

[14:48] <clkao> not sure where to put them though.

[14:48] <clkao> mm feather

[14:50] <clkao> i had to kill two tests i remember. one is the operator/listquote

[14:51] *** ludan joined
[14:51] <clkao> that seems also infinite loop when compiling

[14:53] <TimToady> clkao: I had to upgrade to latest Task::Smoke to get it to upload my smokes.  It was pulling something from 5.8.6 sitelib instead of 5.8.8...

[14:53] <TimToady> same error as you're getting, so probably same problem.

[14:53] <fglock> clkao: ok - I'm looking operators/listquote.t

[14:54] <clkao> TimToady: ah.

[14:54] <TimToady> ajs: that is specced to not be required in 6.0.0.

[14:55] <clkao> it'd be nice if the smoke system also captures stderr

[14:55] <ajs> Ok, I'll try to not rely on it in Functions

[14:55] <clkao> but see http://feather.perl6.nl/~clkao/ for the smoke output and the result

[14:55] <lambdabot> Title: "Index of /~clkao"

[14:55] <clkao> the output is more interesting because you can find things not compiled yet.

[14:55] <TimToady> what we do require in 6.0.0 is that if you have proto ($x) then both variants must use $x (which would be a collision).

[14:56] <TimToady> so all the infix builtins will have proto of ($x,$y), for example

[14:56] <TimToady> at least the numeric ones...

[14:57] <ajs> Right

[14:58] <TimToady> now if you have multi (; :$x) vs multi (; :$y), then it probably can differentiate them, but on the basis of weeding out completely unacceptable candidates in the first pass, not on the basis of trying to bind to a positional arg.

[14:59] <TimToady> to MMD those look like multi () with extra constraints

[14:59] *** r0nny joined
[14:59] <ajs> Oh, that might be useful for run() then...

[14:59] <clkao> fglock: also, it seems 08-test now requires 400M ram to finish

[15:00] <TimToady> one other factoid is that proto not only limits what you can use for the name, it forces rewrite of the call.

[15:00] *** r0nny joined
[15:00] <TimToady> so if you have proto($x,$y), then foo(:$y,$:x) gets rewritten to positional.

[15:00] <TimToady> (just for any recognized args)

[15:01] <TimToady> in other words, proto allows us to recognize some subset of named args as positionals at compile time.

[15:02] <ajs> Hmm... ok, lots to digest.

[15:02] <TimToady> (but only within the scope of the proto declaration, so different callers can have different protos)

[15:02] <ivanfrey> Does pugs require Perl 5.8.8 or is 5.8.6 good enough?

[15:03] *** snowstalker joined
[15:03] <ivanfrey> In light of TimToady's comment about Task::Smoke.

[15:03] <TimToady> it's possible that the smoke mechanism now requires 5.8.8, though likely it's just a change to the smoker modules.

[15:04] <TimToady> I did not attempt to install new Task::Smoke on 5.8.6.

[15:04] <TimToady> since I try to run my machines on the latest and greatest.

[15:04] *** snowstalker left
[15:04] <TimToady> aka bleeding edge

[15:05] <TimToady> but we need people who will do the other thing too...

[15:06] <fglock> 35% !!!

[15:07] <clkao> fglock: well, i'd say 2%

[15:07] *** snowstalker joined
[15:07] <clkao> because many tests aren't compiled at all, so the total test count is wrong

[15:07] <clkao> so look at v6-smoke.output and fix them ;)

[15:14] *** SamB joined
[15:16] <fglock> is postfix:{'<','>'} disallowed after circumfix:{'(',')'} ? I'm trying to parse '(1 | 3)<3'

[15:16] *** hexmode joined
[15:18] <TimToady> that's a syntax error.

[15:18] <TimToady> you must have a space before infix:{'<'}

[15:19] <TimToady> otherwise it will always be taken as the postfix.

[15:19] <fglock> is t/operators/listquote.t wrong?

[15:20] *** elmex joined
[15:21] <TimToady> yes, it's wrong.

[15:21] <TimToady> that should parsefail.

[15:22] <fglock> ok - thanks!

[15:23] *** merlyn joined
[15:23] <nothingmuch> gaal: moosy

[15:23] <nothingmuch> clkao: i don't know iblech's code very well

[15:23] <nothingmuch> it wants an HTML report

[15:23] <nothingmuch> i don't know how it could be invalid

[15:24] <nothingmuch> except for if compression is involved

[15:26] <fglock> bbiab &

[15:28] <svnbot6> r11399 | fglock++ | v6 - Expression.pm - added comments confirming '<' parsing behaviour

[15:28] <svnbot6> r11399 | fglock++ | - note: a parsing error on '<' currently causes an infinite loop

[15:29] <gaal> nothingmuch: why does the lopsided picture of you possibly be tagged as "may offend"?

[15:30] <nothingmuch> because it's very very ugly ;-)

[15:30] <gaal> haha

[15:30] * nothingmuch odes *not* photograph well

[15:30] <clkao> you know Nosing!

[15:30] <gaal> fglock: src/Pugs/AST/CapInternals.hs - but not finished yet :)

[15:30] <nothingmuch> nossing!

[15:31] <gaal> look for 'data Exp', 'data Stmt', etc, but please note that Exp is no longer necessarily the root of an AST

[15:31] <gaal> fglock: though a compilation unit, it looks like, desugars to something like:

[15:32] <gaal> COMPUNIT := module MMMMooo { our $se; sub elk {...} };

[15:32] <gaal> so at present we have data CompUnit's ast field be an Exp representing that binding.

[15:33] *** amnesiac joined
[15:35] <Limbic_Region> can someone nopaste me their third-party/installed/packages.conf file?

[15:42] <svnbot6> r11400 | ajs++ | Took a stab at run and runinstead as proposed by Larry. Suggested :bg mode as well, but that might not make sense

[15:55] *** mj41_ joined
[15:56] *** hexmode joined
[15:58] <gaal> wow, that was longer than expected

[15:59] <gaal> (p6-c post on testing)

[16:07] *** ryanus joined
[16:08] *** ruoso joined
[16:10] <nothingmuch> ee/w 26

[16:12] <svnbot6> r11401 | lwall++ | more tests for < postfix vs list policy

[16:13] <ivanfrey> what's the pugs mailing list? I'm trying to subscribe to the perl6-compiler list and I'm having trouble there.

[16:16] <gaal> ivanfrey: there's no official pugs list, but p6-c is the closest, I suppose. what trouble are you seeing there?

[16:20] <fglock> gaal: thanks

[16:22] <fglock> ?eval ( {1=>2,}|{3=>4,} )<3>

[16:23] <TimToady> you killed it!

[16:23] <ivanfrey> gaal: maybe the mailto subscribe link is wrong I'm getting back an undeliverable mail.

[16:24] <gaal> ivanfrey: [email@hidden.address] I believe.

[16:24] <TimToady> in the larrybot it gives undef.  should probably be undef|4, methinks

[16:25] *** ryanus left
[16:25] <fglock> larrybot: thanks :)

[16:26] <gaal> undef? junction? why?

[16:26] <svnbot6> r11402 | ajs++ | Fleshed out OS section with chroot, getlogin and kill -- kill suggests an OS::Signal class with string or integer initializers

[16:30] <fglock> gaal: it's an operation on a junction of pairs; it returns a junction of values

[16:30] <TimToady> subscripting should carry through junctions just like any other normal operator.  It's only boolean context that forces resolution

[16:31] <gaal> ooh, sorry, I didn't see the pipe in the expression.

[16:31] <TimToady> "pipe", he sez.  mutter, mutter...

[16:31] <svnbot6> r11403 | ajs++ | Corrected signature of method style kill

[16:32] <gaal> I didn't see the elognated quantum particle either...

[16:33] <buu> TimToady: Mind a quick question? Do you prefer lexical variable filehandles, eg $filehandle, or FILEHANDLES?

[16:34] <fglock> gaal: it's not vertically elongated - it's horizontally compressed

[16:34] <gaal> a compressed quantum particle? jeepers!

[16:34] <TimToady> given that Perl 6 doesn't have the latter, I think you can guess my opinion.

[16:34] <svnbot6> r11404 | ajs++ | Concurrency.pod suggests a zero-argument method variant of kill. Document that here.

[16:36] <theorbtwo> Are we considering a method with no noninvocant arguments to have zero-arguments (and arity zero) now?

[16:36] *** yango joined
[16:37] <theorbtwo> ?eval (method bar () {42}).arity;

[16:37] <ajs> Don't read my checkin comment as anything so sweeping. I may have used the wrong terminology.

[16:38] <ajs> But, I would think that that would be the case.

[16:40] <nothingmuch> see you at stevan's house

[16:40] <theorbtwo> OK.

[16:40] * stevan looks around for nothingmuch, but cant seem to find him

[16:41] * kolibrie looks around for stevan's house, but can't seem to see it

[16:41] <stevan> kolibrie: its behind all those buildings,.. to your left

[16:42] <kolibrie> stevan: oh, right, okay.

[16:44] <kolibrie> s/right/left/

[16:45] <PerlJam> good morroow perl6 people

[16:46] <kolibrie> good morrow, PerlJam

[16:50] *** weinig is now known as weinig|away

[16:53] <stephanepayrard_> where is the repository for the synopsis?

[16:54] <svnbot6> r11405 | fglock++ | v6 - implemented ' enum day <Sun Mon Tue Wed Thu Fri Sat>; '

[16:55] <gaal> stephanepayrard_: http://svn.perl.org/perl6/doc/trunk

[16:55] <lambdabot> Title: "Revision 10067: /doc/trunk"

[16:55] <gaal> but RO

[16:55] <stephanepayrard_> thx

[16:55] <gaal> wow, fglock++!

[17:14] *** vel joined
[17:24] <svnbot6> r11406 | fglock++ | v6 - enum importing: ' enum bool <False True>; say True; say bool::False; '

[17:26] <fglock> t/oo/enums.t - "Segmentation fault" :(

[17:30] *** kudra joined
[17:31] <kudra> hi

[17:31] <fglock> hi!

[17:32] <Limbic_Region> kudra - if you didn't notice, audreyt didn't set a very good example for the p6 summary

[17:32] <Limbic_Region> some of the lists that were summarized were from 3 years ago

[17:32] <kudra> That is my fault.

[17:33] <Limbic_Region> oh

[17:33] <kudra> I am not sure precisely how they ended up among the feb 2006 in a chronological list

[17:33] <kudra> but next time I will be sure to check the date of every post.

[17:34] <kudra> audrey can, at most, be blamed for not catching my mistakes ;)

[17:34] <rgs> good job anyway !

[17:34] <Limbic_Region> yes

[17:34] <Limbic_Region> kind of hard to complain about volunteer work

[17:34] <rgs> for people like me that don't have time to read p6-all

[17:34] <Limbic_Region> especially from someone who already does soooo much

[17:35] * Limbic_Region was only teasing anyway

[17:35] <kudra> well, I prefer suggestions to complaints, but that didn't sound like a complaint anyway.

[17:35] <kudra> but I was already informed of my error by email

[17:35] <kudra> I just thought I'd stop by to see if there were other suggestions.

[17:36] <rgs> I have one

[17:36] <rgs> be sure to include keywords

[17:36] <rgs> so summaries are greppable

[17:37] <rgs> for example dont say "S29", but "S29 about this and that"

[17:38] <kudra> Okay.

[17:38] <kudra> I made an effort to come up with descriptive titles early on, but I think that didn't go so well toward the end.

[17:38] <Limbic_Region> did I read that the summary will also cover discussions here and/or on #parrot?

[17:39] <rgs> this will even help you in the end, to track what was written

[17:39] <rgs> (speaking as a former summarizer)

[17:39] <kudra> rgs: My biggest problem is that I don't know anything about what I'm writing about ;)

[17:39] <kudra> Limbic: after August, yes.

[17:39] <rgs> not a problem, because you'll learn :)

[17:39] <Limbic_Region> gotcha

[17:39] <kudra> I was not warned of this occupational hazard.

[17:40] <rgs> I began to summarize P5P without knowing anything about the P5 internals, and look at me, I'm pumpking now.

[17:40] <TimToady> that's okay, it's also perfectly fine to say "this degenerated into a bunch of technobabble I couldn't be bothered to follow." :)

[17:40] <PerlJam> rgs: pumpkingship is your pennance ?  :)

[17:40] <kudra> Limbic: right now I just can't devote any more time to it.

[17:40] <TimToady> just pace yourself.

[17:41] <TimToady> don't let other people put requirements on you that don't fit.

[17:41] <Limbic_Region> kudra - no worries, I am very appreciative of your initiave

[17:41] * Limbic_Region can't speel

[17:41] * fglock started writing a compiler before knowing the syntax

[17:41] <kudra> one a week seems reasonable.  Now I know how long it will take me, so I will try to work on it on my commute instead of saving it for Saturday/Sunday.

[17:41] <TimToady> hey, I started designing a language without knowing the syntax.  :)

[17:42] <TimToady> still don't, in fact...

[17:42] <kudra> it's hard to know syntax that doesn't exist yet.

[17:42] <PerlJam> kudra++ in any case for summarizing :)

[17:42] <TimToady> in fact, I'm thinking about making listop<foo> illegal.

[17:42] <SamB> that reminds me of english, except for the design part...

[17:43] <TimToady> basically, if you want to put a postfix right after a listop, you're required to say listop()<foo>

[17:43] <kudra> well, thanks for the suggestions.

[17:43] <TimToady> otherwise we have the counterintuitive result that listop <foo> binds tighter than listop<foo>

[17:45] <TimToady> long term commitments are hard, so just try to look for things that are burnouty and avoid 'em occasionally.

[17:45] <TimToady> (speaking as the one volunteer in the community who is never, ever allowed to burn out. :)

[17:47] <kudra> I think with what I'm working on it will be busy until September, then settle down to a reasonable rate.

[17:48] <kolibrie> kudra: you did a great job

[17:48] <PerlJam> TimToady: People are always talking about -Ofun here and I don't think I've seen anyone ask you if you're having fun, so ...   Are you having fun?

[17:48] <kolibrie> that is most important

[17:48] <TimToady> from time to time. :)

[17:49] <TimToady> though I still hate writing speeches...

[17:49] <svnbot6> r11407 | fglock++ | v6 - enums.t passes 2/58

[17:49] <Limbic_Region> oh, can someone nopaste me their third-party/installed/packages.conf file?

[17:49] <Limbic_Region> s/someone/anyone/

[17:50] <PerlJam> TimToady: Get Damian or Audrey to ghostwrite them for you ;-)

[17:50] <kolibrie> Limbic_Region: audreyt just told me to delete mine, when I had a build error that mentioned it

[17:50] <Limbic_Region> kolibrie - what platform are you on?

[17:50] <kolibrie> but maybe that was specific to my build

[17:51] <kolibrie> Limbic_Region: debian

[17:51] <Limbic_Region> ok - anyone running ghc 6.2.4 on Win32 that works?

[17:51] * Limbic_Region blames rafl

[17:51] <TimToady> Unfortunately (or rather, fortunately) neither Damian nor Audrey thinks like me...

[17:52] <Limbic_Region> the only way I can get it to build is by copying the gcc-lib from my ghc directory to the pugs directory

[17:52] <Limbic_Region> this has to do with a change rafl made to the build process to use utils/runcompiler instead of ghc

[17:52] <PerlJam> TimToady: Ah, then the meta problem is to find (or create) someone that thinks like you.  How much do your children think like you?  :)

[17:53] <TimToady> they is all crazy different from me.

[17:53] <PerlJam> TimToady: Also, I've noticed TimToady-ish tendencies in pmichaud on occassion.  But that's probably only superficial as seen through his/your writings.

[17:54] <TimToady> well, $.commute(), alas.

[17:55] <TimToady> paying for a family is also not always fun...

[17:55] <TimToady> $job &

[17:56] <Limbic_Region> ok - so does anyone on Win32 (regardless of ghc version) have pugs compiling?

[17:57] <kudra> bye everyone.

[17:57] <kolibrie> kudra: bye

[17:57] <mj41_> r11097 - Successfully built!

[17:57] <mj41_> r11211 - Could not find module `Data.ByteString':.... Build failed: 256 at util\build_pugs.pl line 126.

[17:58] <Limbic_Region> mj41 - ok, so you are having the same problem I am

[17:58] <Limbic_Region> there is a work-around

[17:59] <Limbic_Region> ugly hack of copying the gcc-lib dir from your ghc root to the pugs root dir

[17:59] <Limbic_Region> but I want to figure out why that is necessary - but can't seem to ping rafl

[17:59] <Limbic_Region> who audreyt says is responsible for the change

[18:00] <mj41_> r11211 to r11392 - 70 attempts - still same problem :-(

[18:01] <Limbic_Region> yeah, it is because build_util.pl was changed to use util/runcompiler.exe instead of ghc.exe

[18:02] *** buubot joined
[18:03] * Limbic_Region is wondering if setting a env var might fix it

[18:03] <svnbot6> r11408 | fglock++ | v6 - parser: added 'cmp', 'does', 'but'

[18:07] *** buubot joined
[18:09] <Limbic_Region> mj41_ I think I am getting somewehre

[18:09] <Limbic_Region> somewhere even

[18:11] *** buubot joined
[18:13] *** buubot joined
[18:19] *** iblechbot joined
[18:20] <Limbic_Region> nope - dead end

[18:27] *** lollan joined
[18:30] <Limbic_Region> mj41_ does your nmake realclean also fail?

[18:30] <svnbot6> r11409 | fglock++ | v6 - added prefix:<->

[18:30] <svnbot6> r11409 | fglock++ | - added file Pugs/Runtime/Perl6Prelude.pm

[18:30] <svnbot6> r11409 | fglock++ | -- written in perl 6

[18:30] <svnbot6> r11409 | fglock++ | -- implements enum bool <False True>; true()

[18:30] <svnbot6> r11410 | rootmj++ | * PaP6 ( Parrot and Perl 6 ) testing

[18:30] <svnbot6> r11410 | rootmj++ | ** "svn up *-src dir (svn co first time), recursive copy to *-temp, configure, make, make smoke" test loop

[18:30] <svnbot6> r11410 | rootmj++ | ** redirect output to *-results

[18:30] <svnbot6> r11410 | rootmj++ | ** plus win32 watchdog

[18:30] <svnbot6> r11410 | rootmj++ | ** no warranty and no free time to work on it now

[18:30] <Limbic_Region> wow

[18:30] <Limbic_Region> mj41_ does your nmake realclean also fail

[18:31] <Limbic_Region> and if yes, perhaps the reason why nmake is failing is because some file that needs to be deleted isn't

[18:31] * Limbic_Region is grasping at straws

[18:31] <Jedai> My Win32 pugs is compiling

[18:32] <Jedai> r11332

[18:32] <Limbic_Region> Jedai - what version of GHC?

[18:33] <Jedai> ghc 6.4.2

[18:33] <mj41_> i am compiling with PaP6 ... svn up without any modifications

[18:33] <Limbic_Region> ok - and you don't have a gcc-lib dir in your pugs root directory right?

[18:34] <Jedai> no

[18:34] <Limbic_Region> Jedai?

[18:34] <Jedai> I don't have gcc-lib

[18:34] <Jedai> I use mingw and nmake

[18:34] <Limbic_Region> ok - so what's different

[18:34] <Limbic_Region> how exactly do you use mingw?

[18:35] <Jedai> I don't know if there is anything in pugs that use mingw though

[18:35] <Limbic_Region> oh, so you aren't specially using mingw in the pugs build process - it's just there

[18:35] *** cognominal joined
[18:36] <Jedai> Yes I said taht thinking of Parrot (which use mingw)

[18:36] <Jedai> that

[18:36] <Jedai> My compilation use runcompiler.exe and not ghc as you said

[18:36] <svnbot6> r11411 | ajs++ | Added getpw. OS::PW and PW::PWEnt are tentative names.

[18:36] <svnbot6> r11412 | fglock++ | v6 - added 'use Perl6Prelude' to compiled code

[18:37] <Jedai> I don't know what's the difference... o_O

[18:37] <Limbic_Region> would you mind doing a 'set' from the command line and nopasting me your env variables

[18:37] <Limbic_Region> removing of course any that aren't appropriate to share

[18:38] <pasteling> "Jedai" at 86.205.173.169 pasted "env win32" (36 lines, 1.4K) at http://sial.org/pbot/18296

[18:40] <Limbic_Region> ok - now can you nopaste me the results of Perl Makefile.PL

[18:40] <Limbic_Region> er s/Perl/perl/

[18:41] *** b_jonas joined
[18:42] <pasteling> "Jedai" at 86.205.173.169 pasted "perl Makefile.PL" (88 lines, 3.3K) at http://sial.org/pbot/18297

[18:42] * Limbic_Region does a little dance as he thinks he figured out the problem

[18:43] <Jedai> What was it ?

[18:44] <Limbic_Region> don't know for sure - but I got the behavior to change when I switched around %PATH

[18:44] <svnbot6> r11413 | fglock++ | v6 - fixed default package name

[18:44] <Limbic_Region> don't yet know if it actually fixes anything

[18:45] <Jedai> I'm using ActivePerl build 817

[18:45] <mj41_> ActiveState perl? and nmake from cmd.exe (no from msys)?

[18:46] <Jedai> from Visual Studio Express (free)

[18:47] <Limbic_Region> hrm - while "different", not fixed

[18:47] <Jedai> it's the latest version, 8.00.50727.42 (I copy it from VS to my Path because having VS on the path disturb ActivePerl Config)

[18:47] * Limbic_Region continues to thrash around hoping something works

[18:51] *** r0nny joined
[18:54] <Limbic_Region> ok, I don't know how, but I fixed it

[18:54] <Limbic_Region> which is the worst kind of fix

[18:55] <Jedai> That's always better than no fix at all ??

[18:55] <Limbic_Region> oh, no, it is still b0rk

[18:55] <Limbic_Region> or rather - I figured out how I "fixed it"

[18:56] <Limbic_Region> a batch file I use to automate some things had included the workaround of copying gcc-lib back into pugs

[18:56] <Limbic_Region> so back to square one - I cry uncle

[18:56] <Jedai> What's the content of this gcc-lib ?

[18:56] <Limbic_Region> mj41_ are you subscribed to p6.compiler?

[18:57] <Limbic_Region> Jedai - ld.exe and friends

[18:57] <Limbic_Region> Jedai - in your ghc root directory, you should have a gcc-lib directory

[18:58] <Jedai> It might be that my mingw provide all of that stuff

[18:58] <Jedai> I have it in my %PATH%

[18:58] <Limbic_Region> as do I

[18:59] <Jedai> strange :(

[18:59] <Limbic_Region> re-arranging my PATH to mirror yours produced different results - but still b0rk

[18:59] <Limbic_Region> not having the first clue as to how this stuff works doesn't really help much

[18:59] * Limbic_Region gives up for the day

[19:00] <Jedai> Maybe you should try with a fresh svn checkout ?

[19:00] <Jedai> (Well if you didn't already tried it...)

[19:03] <Limbic_Region> Jedai - any time I have any hiccups I do a nmake realclean; svn up; perl Makefile.PL; nmake

[19:03] <Limbic_Region> I am not the only one this is affecting btw

[19:03] <Jedai> but if nmake realclean is broken... (mine is)

[19:03] <Limbic_Region> but everyone else (but you) who had it working on Win32 indicated a different version of GHC

[19:04] <Limbic_Region> Jedai - AFAICT, it is only broke at the very end while wiping out Makefile.PL

[19:04] <Limbic_Region> err Makefile that is

[19:05] <Limbic_Region> though, that was one of my earlier suspicions - something isn't being deleted that should be

[19:05] <Limbic_Region> the easy fix is to sit back and wait

[19:06] <Limbic_Region> eventually, audreyt will want to release a new version

[19:06] * Limbic_Region will time his restatement of the failure accordingly

[19:07] <Limbic_Region> till then - I just stick gcc-lib in Pugs

[19:08] <Jedai> it seems my doesn't use config.yml anymore

[19:09] <Jedai> Was it superceded by anything ?

[19:09] <Jedai> Limbic_Region: as long as you can "fix" it like that I guess that's ok. :)

[19:11] <Jedai> just noticed this line : Setup.exe: gcc-lib\ld.exe: runProcess: does not exist (No such file or directory)

[19:11] <Jedai> Guess my build has broken bits (but I get my pugs in the end and it works so I can hack on it)

[19:12] <Limbic_Region> interesting

[19:13] <Jedai> this was r11413

[19:15] <Limbic_Region> clean build or incremental?

[19:15] <Jedai> this one was clean

[19:15] <Jedai> (almost since ghc ran out of memory in the middle... didn't read my config.yml apparently)

[19:16] <Limbic_Region> oh, yeah - heap problems

[19:17] <Jedai> ?eval method bar () {42};

[19:18] <Jedai> I get arity = 2 for this method, is this normal ?

[19:18] * Limbic_Region wouldn't think so but he is likely not the right person to be asking

[19:19] * Limbic_Region wanders off hoping that rafl will ping him tomorrow

[19:19] <Jedai> Well method signature seems to be broken (or rather TODO I guess ?) anyway

[19:22] *** ludan joined
[19:29] *** myavuzselim joined
[19:37] *** rindolf joined
[19:37] <rindolf> Hi all.

[19:37] <rindolf> ingy: here?

[19:42] *** b_jonas left
[19:43] *** jkanter joined
[19:46] *** Daveman joined
[19:51] <ingy> hi rindolf

[19:52] <rindolf> ingy: hi.

[19:52] <rindolf> ingy: I saw your pictures in nothingmuch' Flickr Moose stream.

[19:52] <rindolf> ingy: you're not too fat.

[19:52] <rindolf> ingy: in fact, I'm probably as fat as you are.

[19:53] <rindolf> ingy: did you lose weight?

[19:53] *** jkanter is now known as jikanter

[19:54] <Daveman> rofl

[19:55] <rindolf> http://www.flickr.com/photos/nuffin/tags/moose/

[19:55] <lambdabot> Title: "Flickr: nothingmuch's photos tagged with moose"

[19:56] <rindolf> http://www.flickr.com/photos/nuffin/179250879/ # She's pretty cute.

[19:56] <lambdabot> Title: "DSC_3407.jpg on Flickr - Photo Sharing!"

[19:59] <rindolf> OK, Firefox 1.5's text editor when editing bidi text is FUBAR. Guess I'll have to use Konqi.

[20:00] <rindolf> DILLIGAD == Do I look like I give a damn. I found it amusing.

[20:02] <rindolf> http://en.wikiquote.org/wiki/Hebraic_proverbs/Errata

[20:03] <rindolf> http://en.wikiquote.org/w/index.php?title=Hebraic_proverbs&diff=231588&oldid=224844 # Funny how many people don't know the wikipedia ettiquette.

[20:04] <rindolf> There was also something like that with the tchrist entry, that got fixed by someone else.

[20:04] *** weinig|away is now known as weinig

[20:07] *** SageLT joined
[20:16] *** bpphillips left
[20:24] <svnbot6> r11414 | Sage++ | Parser now has rough handling for multiple lines in a quoted yaml scalar block. \nRegexs in quotes in a split now translate (split('\s+', $foo) -> split(/\s+/, $foo)). \nSplit on a space now translates to .words (but doesn't handle a third arguement, split(/ /, $foo, 3) just drops the 3 at this point).

[20:37] *** weinig is now known as weinig|bbl

[20:51] <svnbot6> r11415 | daxim++ | naming docs/notes/context_coer[cs]ion.pod to something more reasonable

[20:54] <svnbot6> r11416 | Sage++ | Updating to reflect completed translations.

[21:00] <fglock> sent Pugs-Compiler-Rule-0.10 to cpan

[21:01] * nothingmuch returns with great dramatic effect

[21:01] <ajs> Should I expect that :$foo always expands to :foo<$foo>, or only in captures?

[21:02] <ajs> In other words, if I "return(:$foo, :$bar)" do I return a list of two pairs?

[21:02] <audreyt> it is in a capture.

[21:03] <audreyt> so you make a named return

[21:03] <audreyt> if it's used as a list instead of being bound to

[21:03] <audreyt> then it becomes two Pair objects

[21:03] <audreyt> compare

[21:03] <ajs> Nice. Thanks

[21:03] <audreyt> sub f { return(:$foo, :$bar) }

[21:04] <audreyt> my ($foo, $bar) := f();

[21:04] <audreyt> with

[21:04] <audreyt> my ($foo, $bar) = f();

[21:04] <audreyt> note however there is a way to unambiguously return two pairs instead of named returns

[21:04] <audreyt> and it's perhaps surprising:

[21:04] <fglock> audreyt: did you see the new Pugs::Runtime::Perl6Prelude.pm ?

[21:04] <audreyt> return (:$foo, :$bar);

[21:04] <audreyt> fglock: no... not yet

[21:04] <clkao> fglock: oh? did you talk to nnunley?

[21:05] <fglock> clkao: no

[21:05] <audreyt> fglock: btw, what do you think about making dirname-distname agree

[21:05] <audreyt> svk mv perl5/Pugs-Compiler-Perl6/ perl5/v6-alpha/

[21:05] <clkao> summon nnunley

[21:05] <audreyt> nnunley: *summon*

[21:05] <fglock> audreyt: sure - split into 2 modules, even

[21:06] <fglock> mm - no, it's easier to maintain in one place

[21:06] <audreyt> fglock: may make sense to bundle them until we have a second backend for v6.pm to dispatch to

[21:06] <nnunley> Yes?

[21:06] <audreyt> which = some time in the future I'm sure

[21:06] <nnunley> audreyt: You rang?

[21:06] <audreyt> (but not in the forseeable months)

[21:07] <clkao> use should reuse the src/perl6/Prelude.pm

[21:07] <audreyt> nnunley: clkao summoned you; I'll bbiab :)

[21:07] <clkao> audreyt: second backend - i think we should hook up a revised emitter in perl6, and self-bootstrap

[21:07] * nnunley glances across his flat.

[21:07] <clkao> nnunley: fglock is wokring on pugs::runtime::perl6prelude

[21:09] *** nxu7 joined
[21:09] <nnunley> fglock: Ok.  I have a stub implementation of the Internals that need to be present in order to compile Prelude.pm in perl6.

[21:09] <nnunley> There were some namespace issues (Pugs vs Perl6)

[21:10] <nnunley> But other than that, there weren't many things that couldn't be hoisted into the perl5 backend.

[21:10] <fglock> nnunley: the Prelude can export the subs, so the actual namespace doesn't make much difference

[21:11] <nnunley> True.

[21:12] <nnunley> fglock: Have you seen perl6/INTERNALS.txt? That is the list of functions that the old Prelude expects to be exported.

[21:12] <fglock> how about packaging the Prelude and Test.pm into a cpan package that would be common to all implementations

[21:14] <fglock> nnunley: my Perl6Prelude is mostly a placeholder - it would be nice to reuse Prelude.pm

[21:15] * nnunley nods.

[21:18] <clkao> fglock: can you see why 08test is takin 400M ram?

[21:18] <svnbot6> r11417 | daxim++ | explain use of "(history of this directory)" in openfoundry.org browsable VCS

[21:18] <fglock> otoh, the prelude is a bit low level, and implementation-dependent

[21:19] <clkao> there are many bits implementation-indepedent, i think the idea is to have those shared and define a list of required things to be implemented by backend

[21:19] <fglock> clkao: compiling it with non-backtracking rules will fix that - but PCR is not ready for the transition yet (missing a few functions)

[21:20] <fglock> clkao: each character in the source code requires creating a closure :(

[21:20] <clkao> *nod*

[21:21] <nnunley> Ieeee.

[21:21] <clkao> fglock: did you get a chance to look at the failed compile smoke output?

[21:22] <clkao> subroutine/multidimensional_arglists is also infinite loop

[21:22] <fglock> yes - that's why I started implementing enum - it's the test with more failures :)

[21:23] <clkao> ;)

[21:24] <fglock>  TimToady fixed the listquote test

[21:30] <fglock> some subs in Prelude.pm are already implemented - like eval, caller

[21:33] <nnunley> fglock: There's the multi eval, and then there's Pugs::Internals::eval_perl6 (which was eval in the INTERNALS doc when I wrote it)

[21:34] *** weinig|bbl is now known as weinig

[21:34] *** larsen joined
[21:36] <nnunley> fglock: But you're right. Things that are implemented in the Prelude should be trimmed from that list.

[21:40] <fglock> having a common Prelude is a good idea - nothingmuch was working on an idea for using a base Prelude and additional implementation-specific ones

[21:41] <fglock> the base Prelude would "depend on itself", so the implementation-specific Prelude would be used to break circularity

[21:41] <svnbot6> r11418 | lwall++ | hash subscript no longer allowed directly after listop.

[21:44] <fglock> nnunley: where is INTERNALS.txt ?

[21:45] <nnunley> src/perl6/INTERNALS.txt

[21:46] <nnunley> fglock: I can also commit my stub implementation. I was going to inject it into the Runtime directory of Pugs-Compiler-Perl6

[21:48] <fglock> nnunley: how about merging into Runtime::Perl6.pm (or Perl6Prelude.pm, if it is v6) ?

[21:49] <fglock> just create new 'package' sections

[21:53] <nnunley> Yeap.

[21:54] <fglock> nnunley: thanks!

[21:55] <fglock> we can rule a common rule for internal namespaces with audreyt later

[21:55] <fglock> s/rule rule/rule/ whatever

[21:57] *** b_jonas joined
[21:57] <fglock> clkao: how about bundling Test.pmc with v6 in cpan?

[21:59] <clkao> sure

[22:03] <fglock> clkao: I already submitted the changes I've made to PCR - if you are ok with Data::Bind in cpan we could do a new v6 release

[22:07] <fglock> s/we/you/ :)

[22:07] <svnbot6> r11419 | fglock++ | v6 - updated MANIFEST; ChangeLog

[22:09] <clkao> fglock: surething

[22:10] <nnunley> fglock: Hrm. What I have causes a parsefail. Do you want me to commit anyway?

[22:12] <fglock> nnunley: does it fail the v6 t/* ?

[22:14] <clkao> fglock: did you fix the hash test?

[22:16] <Jedai> Did someone manage to get Devel::Caller 0.10 to pass the tests on win32 ?

[22:16] <fglock> clkao: I implemented some of the syntax, but it's not complete yet

[22:17] <nnunley> fglock: Hrm. Doesn't much like me using 'caller' as a function name.

[22:17] <nnunley> Ok. I've commented out the offending line.

[22:18] <fglock> Jedai: I'm reinstalling - current is 0.11

[22:18] <fglock> nnunley: we can put 'caller' in the identifier mangling list if necessary

[22:19] *** prefiks left
[22:20] <nnunley> fglock: Committed.

[22:20] <nnunley> The signatures and documentation for the arguments are a bit lacking.

[22:20] <fglock> nnunley: thanks!

[22:21] <nnunley> Hrm. Current Prelude dies with a parse failure on 'class Control::Basic'

[22:21] <fglock> Jedai: Devel::Caller 0.11 installed fine with vanilla-perl on windows XP

[22:21] <svnbot6> r11422 | nnunley++ | Importing stubs implementations of internal functions required by /src/perl6/Prelude.pm

[22:22] <fglock> nnunley: given/when is not implemented yet in the parser

[22:24] * nnunley nods.

[22:26] <fglock> ' eval("sleep($seconds)", lang<perl5>) ' is compiled at runtime - is there an option in perl 6 to precompile?

[22:26] <Jedai> fglock: Thanks it works fine here too

[22:26] <Jedai> On ActivePerl build 817 with mingw and nmake

[22:27] <TimToady> BEGIN {...}

[22:28] <fglock> TimToady: the sentence is: sub sleep($seconds) { eval("sleep($seconds)", lang<perl5>); }

[22:29] <fglock> we need something like: sub sleep($seconds) { BEGIN { eval("sleep($seconds)", lang<perl5>) } }

[22:30] <nnunley> Or macro notation for the backend...

[22:31] <fglock> or intercept the calls in the emitter, which we've been doing so far

[22:32] <fglock> is macros the way to go?

[22:32] <TimToady> or are you just wanting to inline Perl 5 code?

[22:32] <fglock> TimToady: yes

[22:34] <fglock> TimToady: that's Prelude code for v6.pm

[22:38] <clkao> in the js prelude, it's using special javascript_inline

[22:39] <fglock> TimToady: can we use :P5 like in regexes? ' :P5 { sleep $seconds } '

[22:42] <svnbot6> r11423 | clkao++ | Data::Bind 0.27.

[22:45] <svnbot6> r11424 | fglock++ | v6 - Perl6Prelude.pm s/lang<perl5>/:lang<perl5>/

[22:45] <svnbot6> r11425 | clkao++ | Sub::Multi 0.001_2

[22:46] <nnunley> Doh.

[22:47] <fglock> clkao: can it be Sub::Multi 0.002 ? cpan doesn't install _x versions easily

[22:48] <clkao> orz

[22:52] <fglock> home &

[22:53] *** fglock left
[23:04] *** froh-doh joined
[23:19] <ivanfrey> Pr

[23:24] <svnbot6> r11426 | lwall++ | Discouraging constructs that look like subscripts but aren't.

[23:50] *** frederico joined
