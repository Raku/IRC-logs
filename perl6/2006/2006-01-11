[00:02] *** khaladan joined
[00:03] *** borkened joined
[00:48] *** daja77_ joined
[01:04] <svnbot6> r8637 | Darren_Duncan++ |  r1897@Darren-Duncans-Computer:  darrenduncan | 2006-01-10 16:59:46 -0800

[01:04] <svnbot6> r8637 | Darren_Duncan++ |  /ext/Rosetta : move/renamed 4 files from /docs to /lib/Rosetta, as they are or will be POD files; removed 'srt' from 3 .pm files; deleted the README

[01:11] *** stennie joined
[01:11] <dduncan> regretfully, it seems that svk doesn't propagate "moves" or "copies" as such when a client is setup in the mirror+local duality, and changes are made against the local ... while the right thing happens locally, svk push just seems to turn them into ordinary adds and/or deletes against the main repository, so those lose history information being attached to the moved/copied files

[01:11] <svnbot6> r8638 | Darren_Duncan++ |  r1901@Darren-Duncans-Computer:  darrenduncan | 2006-01-10 17:09:11 -0800

[01:11] <svnbot6> r8638 | Darren_Duncan++ |  /ext/Rosetta : oops, didn't actually delete README last time

[01:15] *** phredmoyer joined
[01:15] *** phredmoyer left
[01:17] *** Amnesiac joined
[01:23] *** stennie joined
[01:26] *** Cryptic_K joined
[01:39] *** luqui joined
[01:42] *** Shachaf joined
[01:50] *** lisppaste3 joined
[02:19] *** alexe_home joined
[02:41] *** verve_ joined
[02:42] *** xah_ joined
[02:43] *** venk joined
[02:46] *** hcart1 joined
[02:51] <svnbot6> r8639 | Darren_Duncan++ |  r1905@Darren-Duncans-Computer:  darrenduncan | 2006-01-10 18:48:04 -0800

[02:51] <svnbot6> r8639 | Darren_Duncan++ |  /ext/Rosetta : updated all 6 pod-only files for consistent formatting and some updated content

[03:03] *** Amnesiac joined
[03:08] <Debolaz> Hey Amnesiac.

[03:12] <Amnesiac> hey Debolaz, how's everything?

[03:13] *** mjl69 joined
[03:19] <Debolaz> Amnesiac: Good. Just started writing my own software license.

[03:43] <dduncan> something everyone needs to do at some point

[03:43] <dduncan> for what type of software?

[03:46] <Debolaz> dduncan: Just a game I'm writing. It's not really something serious, just a learning project.

[03:47] <dduncan> I hear U

[03:54] *** drbean joined
[04:11] *** stevan_ joined
[04:15] *** Cryptic_K joined
[04:24] *** xah joined
[04:25] *** K__ joined
[04:42] *** hcart1 left
[05:35] *** r0nny joined
[06:17] *** flw joined
[06:28] <svnbot6> r8640 | gaal++ | * improve error message for $x := $undeclared

[06:31] *** Cryptic_K joined
[06:33] <GeJ> greetings all

[06:36] <gaal> hey GeJ 

[06:37] <flw> hi GeJ

[06:42] <GeJ> hum, sweet, YAML, YAML::Syck and JSON::Syck in the ports. 

[06:43] <GeJ> Damn, it's nice to have a couple of commiters hanging around over here :)

[06:49] *** greister joined
[06:52] <gaal> I must go off to $work. I made a checkin of my further attempts with some comments in the hope that someone may pick it up and figure out what went wrong.

[06:52] <svnbot6> r8641 | gaal++ | mulitsub export: document a few unsuccessful attempts

[06:53] <gaal> have a nice day :)  &

[06:59] *** nothingmuch joined
[07:00] <GeJ> morning nm

[07:01] <nothingmuch> morning

[07:01] <nothingmuch> what's cooking?

[07:03] *** binary42 joined
[07:07] <GeJ> not much. no headache this morning.

[07:11] *** binary42 joined
[07:22] <nothingmuch> sorry, someone bugged me

[07:22] <nothingmuch> headaches are bad =(

[07:22] <nothingmuch> \are you sick? or hung over, etc/

[07:27] *** ycheng joined
[07:30] *** lisppaste3 joined
[07:48] *** DesreveR joined
[07:48] <buu> ?eval 1

[07:49] *** joepurl_ joined
[08:04] *** iblechbot joined
[08:23] <dduncan> fyi, I have some module v-num changes to commit tomorrow, to get in before 6.2.11 goes out, but otherwise I'll hold off any further changes until after the 6.2.11 release

[08:23] <dduncan> which is the weekend, I've heard

[08:26] *** K__ joined
[08:47] *** nnunley joined
[08:55] *** dolmans joined
[09:02] *** ilogger2 joined
[09:06] *** kane_ joined
[09:06] *** amv joined
[09:06] *** chip joined
[09:06] *** qmole joined
[09:06] *** cookys joined
[09:06] *** PerlJam joined
[09:06] *** Juerd joined
[09:06] *** pjcj joined
[10:06] *** bsb joined
[10:43] *** dmo joined
[10:46] *** PJF joined
[10:50] *** G2 joined
[10:57] *** elmex joined
[10:58] *** Odin- joined
[11:12] *** stennie joined
[11:17] *** Odin- joined
[11:22] *** adrian_ joined
[11:22] *** adrian_ left
[11:26] *** dada joined
[11:31] *** SamB joined
[11:34] *** pdcawley joined
[12:06] *** chris2 joined
[12:50] *** abram joined
[12:51] <bra> is now known as quuxman

[13:00] *** nnunley joined
[13:00] *** iblechbot joined
[13:03] *** stennie left
[13:15] *** kolibrie joined
[13:25] *** lisppaste3 joined
[13:36] *** nothingmuch joined
[13:38] *** bsb joined
[14:00] <esreve> is now known as r0nny

[14:04] <wolverian> audreyt++ # the D&R is hilarious :)

[14:06] *** stevan_ joined
[14:19] *** Rolan joined
[14:26] *** feng123 joined
[14:26] <tevan> is now known as stevan

[14:35] *** Qiang joined
[14:39] *** vel__ joined
[14:52] *** xern_ joined
[15:02] *** eric256_ joined
[15:05] *** eric256_ left
[15:05] *** nothingmuch joined
[15:24] *** Eimi joined
[15:30] *** rantanplan_ joined
[15:30] *** lisppaste3 joined
[15:31] *** bernhard joined
[15:40] <gaal> wolverian: D&R?

[15:41] <wolverian> gaal, http://search.cpan.org/src/AUTRIJUS/YAML-Syck-0.21/COPYING

[15:42] *** amnesiac joined
[15:43] * gaal considered "This software might be used" as a license.

[15:44] <mnesia> is now known as Amnesiac

[15:53] *** nomeata joined
[15:58] *** hexmode joined
[16:08] *** nothingmuch joined
[16:20] <ingy> seen audreyt 

[16:20] <jabbot> ingy: audreyt was seen 1 days 3 hours 56 minutes 20 seconds ago

[16:30] *** nomeata left
[16:32] *** Nei joined
[16:36] *** Pc03 joined
[16:40] *** Pc03 left
[16:44] *** chris2 joined
[16:45] <clkao> win 20

[16:47] <Nei> xD

[16:47] <Nei> keybindings not your thing?

[16:48] * webmind sometimes finds it easier to type /win 34, then to do alt-b 

[16:48] <webmind> but I'm not a 10finger typer eiher

[16:48] <Nei> interesting

[16:49] <Nei> after all you need 5 or 6 more keys for the command

[16:49] <Nei> any idea why it's easier?

[16:54] <webmind> I think because I find it harder to locate the key with the meta+<key>

[16:55] <webmind> it requires an extra mental step to convert 34 to b

[16:56] <webmind> I have it mainlt on the higher end the 30+ channels since I visit those less often

[16:56] <webmind> and I see a highlight on 37 and wonder now how do I get there again

[17:01] *** marmic joined
[17:03] <Nei> yea I have the same problem

[17:03] <Nei> that's why I have the act show keys instead of numbers

[17:05] <webmind> how do you do that ?

[17:06] <Nei> replacement perl script

[17:10] *** feng joined
[17:14] *** justatheory joined
[17:16] <webmind> ah

[17:17] <Nei> its hacked together in perl5 though

[17:17] <webmind> where can I find it ?

[17:18] <Nei> personally I'm using adv_windowlist script, you can find it on ai.onetrix.net

[17:18] <webmind> thanks

[17:19] <Nei> it is quite flexible but the drawback ist that it always reserves an extra statusbar just for the act

[17:19] <webmind> hmmm

[17:19] <Nei> if you don't like that I think there is also chanact script available on the irssi website

[17:19] <webmind> k

[17:19] <webmind> I'll take a look, thanks :)

[17:19] <Nei> but I don't know whether that can display keybindings >_>

[17:19] <Nei> I couldn't get it to

[17:41] *** Amnesiac_ joined
[17:43] *** nothingmuch joined
[17:44] *** G2 joined
[17:48] <gaal> yo

[17:58] <gaal> So, it turns out that the YAML rule deserialization problem isn't in YAML at all! look:

[17:58] <gaal> ?eval "a" ~~ /a/; say "alive"

[17:58] <gaal> ugh.

[17:58] <gaal> well, even with a pugs that works, that doesn't.

[17:59] <gaal> so PGE embedding appears to be broken with new parrots

[17:59] <gaal> and the YAML stuff very likely works as-is.

[18:04] *** sapper joined
[18:10] *** sapper joined
[18:28] *** Lartuv joined
[18:32] *** Limbic_Region joined
[18:36] *** ajs joined
[18:36] <nothingmuch> audreyt: i have a nice perl 5 hack for you

[18:38] <audreyt> nothingmuch: oh? (I'm about to sleep)

[19:05] <nothingmuch> audreyt: http://catalyst.perl.org/random/nothingmuch/2006/01/11/my_x_stashed

[19:13] *** elmex joined
[19:16] <Limbic_Region> my guess is she is asleep by now

[19:23] *** penk joined
[19:29] *** gantrixx joined
[19:29] <gantrixx> I was wondering if anyone had a reaction to nazarijo's comments on slashdot today

[19:32] <obra> What were tehy?

[19:33] <Nei> basically /. says 'python is god, perl sucks'

[19:33] <rep> slashdot is never wrong

[19:33] <Nei> hahaha

[19:35] <gantrixx> actually I think his comments were more along the line that python is replacing perl

[19:35] <gantrixx> and it is easier to do some things in python than in perl

[19:35] <gantrixx> and I don't think nazarijo speaks for all of slashdot

[19:35] <gantrixx> it's just one person's opinion

[19:36] <gantrixx> but it is a point that I've been speaking about for some time now

[19:36] <gantrixx> in industry many of my clients are loosing interest in perl

[19:36] <obra> Well, These days, many are jumping to Ruby, not Python

[19:37] <theorb> Yes, well, this is one major reason for the perl 6 project.

[19:38] <gantrixx> my other point was that if Perl6 takes too long to become available to the masses, there may be no interest in it since it has been replaced by what is considered newer technology

[19:38] <theorb> I doubt it.

[19:38] <theorb> Whenever perl 6 comes out, it'll be considered new technology.

[19:38] <gantrixx> Perl++

[19:38] <theorb> ...hm, or, on second though, not.

[19:38] <theorb> I quite agree.

[19:39] <gantrixx> I did have one client who was interested in using Perl6, but I had to tell him to wait a year or so

[19:39] <theorb> But me thinking perl++ doesn't help me get a job at it.

[19:39] <gantrixx> He is content to continue with Perl5, but he is augmenting his tool set with Python scripts now

[19:40] <gantrixx> If it were me, there would be no Python or PHP, just Perl and mod_perl

[19:40] <gantrixx> I like Perl, I've spent a lot of professional time with it

[19:40] <theorb> The question is, what is easier in Python and PHP, and how can we fix it?

[19:40] <gantrixx> but I think, like the article says, Python is gobbling up much of the Perl marketshare

[19:41] <gantrixx> Well the only saving grace is that Perl6 incorporate the best things from Python, Ruby, and PHP

[19:42] <xinming> gantrixx: Things will change after perl 6 is out. And the world will rock with perl 6. :-)

[19:42] <theorb> Yes, I expect things will change after perl 6 is out, what with the comming apoclypse and all.

[19:42] <gantrixx> and Perl6 must be made available to the masses sooner rather than later

[19:42] <theorb> Exactly.

[19:43] <gantrixx> Perl6 is not ready for prime time until ActiveState has a distro for win32 and at least one major Linix distro includes it

[19:43] <xinming> gantrixx: I don't agree. :-) where is parrot, and then where is perl 6. :-)

[19:44] <gantrixx> xinming, I don't understand your comment

[19:44] <xinming> gantrixx: And compile parrot on win 32 isn't that hard than perl 6 IMHO.

[19:44] <gantrixx> please explain

[19:44] <xinming> gantrixx: hmm, I mean, after the perl 6 can be self-hosting, perl 6 is desined to run on top of parrot.

[19:45] <rafl> Actually compiling parrot on win32 is a big mess.

[19:45] <gantrixx> OK, well when I refer to Perl6 I'm talking about Perl6 + Parrot

[19:45] <rafl> But I think that'll be changed as soon as someone works on parrot milestone 4..

[19:46] <xinming> hmm, I still wondering, If perl 6 will can be compiled to binary. hmm, Or, Parrot can compile it's byte code into binary. hmm, I don't mean embed a parrot in the binary.

[19:48] <gantrixx> Well I'm assuming that at first Parrot will be bundled with Perl6

[19:48] <rafl> xinming: Thought it already can do that (even if it's prove of concept, atm)

[19:48] <gantrixx> I don't see languages like Python promoting how they will run with Parrot

[19:48] <gantrixx> Parrot is a Perl6 creation

[19:49] <gantrixx> and everyone else has adopted a wait and see attitude toward it

[19:50] <theorb> I don't think anybody outside of perl6 hackers much care about parrot... and not even all of them.

[19:51] <rantanplan_> xinming, you can create native binaries out of parrot bytecode. But you have to link it agains libparrot.so.

[19:51] <rafl> theorb: Maybe because parrot isn't mature enough. But I think it will be attractive for a lot of other languages as it lets you get rid of lots of hard tasks during writing a compiler.

[19:51] <obra> seen alias

[19:51] <jabbot> obra: I havn't seen alias, obra

[19:53] <gantrixx> I agree that Parrot is a good idea and should eventually be considered it's own seperate entity, but it has to prove itself with Perl first

[19:53] <xinming> ever heard some people would port gcc to parrot... I can't imagine what the world will be if gcc is ported to parrot. Maybe the kernel only need to run the Parrot?

[19:54] <theorb> ...and I think that parrot is an interesting idea, but is moving too slowly and holding back perl6.

[19:54] <theorb> ...but perhaps I'm just not seeing the current picture -- I've gotten rather behind.

[19:55] <theorb> xinming: Making gcc target parrot in the general case is a /lot/ easier said then done.

[19:55] <gantrixx> Yes, I think that Perl6/Parrot is starting to sound like Mozilla to many people.   Great promises but very very slow results

[19:55] <theorb> Doing it with language interop is probably simply impossible.

[19:55] <gantrixx> My only hope is that Perl6 will be as successful as Mozilla/Firefox

[19:56] <theorb> .oO(Help me, Audry-wan Konobi, you're my only hope...)

[19:57] <rantanplan_> But its interesting how many new languages are created for Perl6 ;) PASM, PIR, Jako .. 

[19:58] <theorb> It certianly is, but I wouldn't want to write anything serious in any of them.

[19:58] <xinming> gantrixx: I won't agree, It's a bit like Java, It isn't that slow.

[19:58] <rafl> rantanplan_: What's Jako?

[19:58] <theorb> To me that's not a sign of how easy it is to write a language that targets parrot, but how difficult it is to write a good one, or we wouldn't keep getting more of them.

[19:59] <theorb> Jako is a language that was created around the time parrot first got usable PMCs.

[19:59] <rantanplan_> rafl, its higher level than PIR, but can be directly translated to PASM. So its like a scripting language for Parrot, pretty near to Assembly but looks and feels like a scripting language.

[19:59] <gantrixx> hey guys, I'll chat with you later, I'm on the company clock, I need to do some more Perl5 coding

[20:00] <theorb> To me, it looks like pugs was flying along until it started trying to target parrot, and since then has gotten bogged down in a twisty maze of mini-languages, all starting with P.

[20:00] <rafl> rantanplan_: Sounds cool. Can I use it with pure parrot or is it something in languages/?

[20:01] <rantanplan_> rafl, its in the languages/jako directory of the Parrot tree. Makes use of Perl5 and Parrot.

[20:01] <rafl> rantanplan_: Why Perl5?

[20:01] <rantanplan_> Dont know, the parser and lexer stuff seems do be in Perl5.

[20:02] <rantanplan_> To generate the AST.

[20:02] <theorb> Because it was easier to write it in perl5 then much of anything else.

[20:03] <rantanplan_> This is one think i still dont really understand. All parser  of all Parrot Languages seem to be in another language like Perl5, Python, C etc.. (Or flex, bison) isnt there a Parser engine in the Parrot Core?

[20:04] <rafl> Maybe it can be done with PGE and TGE soon..

[20:04] <theorb> Only recently, and they still aren't finished.

[20:06] <rantanplan_> I would be interested in porting nawk to Parrot, but dont wanna rewrite the parsing stuff if parrot supports it natively ;)

[20:10] *** xah joined
[20:12] <rantanplan_> Hehe, Parrot AWK == pawk.

[20:12] *** dduncan joined
[20:20] *** leo__ joined
[20:20] *** leo__ left
[20:28] *** scrottie joined
[20:32] *** justatheory joined
[20:34] *** Limbic_Region joined
[20:45] <webmind> hmm, feather has a k-line on efnet ?

[20:50] <Juerd> webmind: Good chance.

[21:45] *** frederico joined
[21:45] *** sapper joined
[21:47] *** nnunley joined
[21:51] *** PJF joined
[21:55] *** penk joined
[22:00] *** Odin- joined
[22:06] *** penk joined
[22:21] *** marmic joined
[22:28] *** nnunley_ joined
[22:29] *** justatheory joined
[22:39] *** elmex joined
[22:40] <nunley> is now known as nnunley

[22:55] *** Southen joined
[23:06] *** nnunley_ joined
[23:07] *** putter joined
[23:13] <putter> re python and perl<[56]>...  In a corporate setting, it seems clear that python is generally preferable to perl5.

[23:15] <putter> But the key thing re python and perl6, is that _python should be a perfectly fine way to write p6 code_.  As long as p6 doesn't keep losing hook-iness.  (Leaving goto to a hairy module, and the talk of disappearing globals, has me worried...)

[23:16] <putter> As long as p6 contains a superset of the language/runtime features other languages need (at least on backends which support continuations), doing transliteration-based implementations of those languages is remarkably easy.

[23:18] <putter> Emphasize remarkably.  One of the key advantages of perl5 over python when you are playing "interesting" games is the much greater "mess of hooks".  With python, one can find one self in a "you cant get there from here".

[23:22] <putter> One will usually spend _most_ of ones time dealing with the impedance mismatches.  As long as p6 remains hooky and a superset, there are no impedance mismatches.  Implementing a language is merely the grind of dumping its spec to code.

[23:26] <putter> For instance, consider goto.  Now gone from p6(?).  The JavaScript spec is written with intra-method control flow described as goto step N.  One can regexp massage the spec into p6 code with goto's.  But with p6 not having goto's, you now have to massage, by hand, most(?) of the methods.

[23:27] <putter> Which ends up being a major part of the total development time, a even larger likely source of bugs, and results in distinctly less maintainable code which no longer cleanly mirrors the spec.

[23:28] *** scook0 joined
[23:33] <putter> So re p6 and python, it should be straightforward to have  use Language::Python::OnPerl6::ByTransliteration; ...python code...,

[23:33] *** lisppaste3 joined
[23:33] <putter> and do piln->RPython to use the pypy codegen, etc, etc.

[23:36] *** bsb left
[23:37] <putter> We just need the tuple of pilng, fleshed out oo, working regexps and type system, and we'll be set to go.

[23:38] <putter> But without all four, its hard to do anything more than toys

[23:39] <putter> <end missive>

[23:39] * putter looks forward to a Cambrian Explosion of p6 code ;)

[23:40] *** trym joined
[23:44] <putter> Oh, and part of the beauty of piln and multiple backends, is that p6 need not be dependent on parrot.  There are lots of path to native codegen once one has already dealt with and boiled away the hairy semantics of the language (p6).

[23:44] <putter> s/path/paths/

[23:48] *** hcarty joined
[23:54] <putter> stevan, audreyt: it might be an interesting thought experiment to create a "wishlist" - tasks which are on the pugs critical path, which someone else can do (well defined, dont require you're global perspective), which you will have to do if someone else doesnt, near term (a few days or weeks), and...

[23:54] <putter> I think that's it.  Basically trying to accelerate the critical path.

[23:57] <putter> cheers &

