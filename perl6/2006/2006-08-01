[00:01] *** xinming joined
[00:02] *** xinming joined
[00:02] <TreyHarris> :-)

[00:23] *** kanru joined
[00:28] *** nekokak joined
[00:37] *** steveo joined
[00:38] *** steveo left
[00:42] *** toku_away is now known as tokuhirom

[00:48] *** nothingmuch joined
[00:58] <ludan> see you tomorrow guys

[01:13] *** Southen_ joined
[01:25] *** mjl69_ joined
[01:42] *** KingDiamond joined
[01:43] *** premshree_ joined
[01:48] *** dolmans joined
[02:30] *** amnesiac joined
[02:55] *** agentzh joined
[02:57] *** agentzh joined
[02:59] *** agentzh joined
[03:02] *** agentzh joined
[03:03] *** kanru joined
[03:13] <svnbot6> r11840 | fglock++ | pX/Pugs-Compiler-Rule - more fixes in capture; keep 'state' in the Match object

[03:18] *** esammer_home is now known as esammer

[03:35] *** weinig is now known as weinig|sleep

[04:02] *** shachaf joined
[04:24] *** [particle] joined
[04:26] *** HEx joined
[04:32] *** coderhasan joined
[04:33] *** coderhasan left
[04:35] *** justatheory joined
[04:38] *** _meppl joined
[04:38] *** _meppl is now known as meppl

[04:43] *** broquaint joined
[04:49] *** justatheory joined
[04:56] *** Captain_Fourier joined
[05:34] *** neoesque joined
[05:44] *** agentzh joined
[05:46] *** agentzh joined
[05:50] *** agentzh joined
[05:50] *** rgs joined
[05:50] *** agentzh joined
[06:05] *** Aankhen`` joined
[06:06] *** agentzh joined
[06:18] *** elmex joined
[06:23] <svnbot6> r11841 | dolmans++ | dolmans now signed in.

[06:35] <svnbot6> r11842 | dolmans++ | subroutines/param_sinature.t

[06:35] <dolmans> hi audreyt, could you kind to review my first commit, which i refer it as a babystep.

[06:38] <audreyt> well

[06:38] <audreyt> svn mv param_sinature param_signature

[06:38] <audreyt> (typo)

[06:38] <audreyt> ditto in the test body

[06:38] <audreyt> but otherwise looks sane

[06:38] <audreyt> dolmans++

[06:39] <dolmans> oops

[06:44] <Captain_Fourier> hey i have more free time

[06:44] <Captain_Fourier> if i dont know haskell, how can i help?

[06:45] <audreyt> there's perl5/Pugs-Compiler-Perl6/HACKING

[06:45] <audreyt> also http://pugs.blogs.com/pugs/2006/07/pugs_janitor_ta.html

[06:46] <audreyt> also, proofreading synopses is very important too

[06:46] <Captain_Fourier> ok

[06:47] <audreyt> i.e. take http://svn.perl.org/perl6/doc/trunk/design/syn/ and mark the places where the English is misleading or wrong

[06:47] <lambdabot> Title: Revision 10532: /doc/trunk/design/syn

[06:47] <audreyt> and submit patches to [email@hidden.address]
[06:47] <Captain_Fourier> will do

[06:47] <audreyt> yay

[06:47] * audreyt is still reeling from jetlag

[06:48] <Captain_Fourier> there were a flurry of perl cons last month

[06:50] *** macroron joined
[07:02] <svnbot6> r11844 | dolmans++ | deleted the typo version param_sinature.t

[07:05] *** iblechbot joined
[07:05] *** kanru joined
[07:09] <nothingmuch> Juerd: please add unicode to http://tnx.nl/php, it's an important argument nowadays

[07:09] <lambdabot> Title: PHP in contrast to Perl

[07:11] <Bleadof> Indeed

[07:14] *** zard1989 joined
[07:30] *** AppleIver joined
[07:30] *** AppleIver left
[07:35] *** buetow joined
[07:40] <pmurias> a couple of my friends wan't to use a dual language php/c++ solution for a webapp

[07:40] <pmurias> s/wan't/wanted/

[07:42] <nothingmuch> sounds like the best of both worlds ;-)

[07:45] <pmurias> i heard them planing a binary protocol at breakfast (with an XML header)

[07:45] <pmurias> on the next day (to use with the webap)

[07:47] <pmurias> s/webap/webapp/

[07:50] <pmurias> talked about perl6 with a pythonist who reveled himself by sugesting diango or another python framework

[07:52] <audreyt> django is neat.

[07:52] <audreyt> one of the inspirations of Jifty :)

[07:53] <pmurias> it suposably also does autogeneration of database schemas

[07:53] <audreyt> it is quite jiftylike.

[07:53] <audreyt> I enjoy jifty's "action" abstraction for no-effort ajaxy behaviour

[07:54] <audreyt> but otherwise the two frameworks are comparable in surface easy-to-codeness

[07:55] <pmurias> audreyt: during your talk you mentioned a lot of neat RPS thingys like Jifty::Query

[07:55] <audreyt> right. now that the 1.0 stuff are ported to jifty, I'm working on 2.0 stuff next week onward

[07:56] <audreyt> (Jifty::Plugin::REST is now in jifty trunk and supports both GET and POST interfaces)

[07:56] <audreyt> (and XML::All 0.02 is on CPAN)

[07:56] <pmurias> and Jifty::Query?

[07:56] <audreyt> it's in the "2.0" aka "exprimental" aka "we are still playing with the syntax" stage.

[07:56] <audreyt> ditto jifty::View.

[07:57] <audreyt> (though Jifty::Web::Session::ClientSide has since matured and is now part of jifty core)

[07:57] <pmurias> thanks

[07:58] <audreyt> np :) we'll get there, but unlike pugs, my jiftywork is prioritized by $client demand

[07:58] <audreyt> and they want ::REST and ::ClientSide to be deployed, more than Query/View abstractions

[07:58] <audreyt> so will get those two polished first

[08:00] <pmurias> the python guy was suprised that perl6 has an implementation

[08:01] <audreyt> ...and two other implementations

[08:01] <pmurias> told him that too

[08:01] <audreyt> and all three are on CPAN :)

[08:01] * audreyt praises CPAN some more.

[08:01] <pmurias> he liked junctions thought

[08:03] <pmurias> and when i told him about the grammar redefinability he liked it also and  wandered when will python

[08:03] <pmurias> have it

[08:04] <pmurias> is it posible to unimport syntax by the way?

[08:04] <audreyt> that is a very deep and interesting question :)

[08:04] <pmurias> eq. no statement_control <goto unless until>;

[08:05] <audreyt> no GLOBAL < &statement_control:<until> >;

[08:05] <audreyt> something like that

[08:05] <audreyt> but I can see grammatical categs becoming pragmas of their own, maybe.

[08:05] <audreyt> no infix '+';

[08:06] <audreyt> I don't see why not. will be lots of fun :)

[08:07] <pmurias> the python guy complained that too much things are in the core perl language, so it assumed he will be able to unimport them

[08:07] <audreyt> yup.

[08:07] <audreyt> can you work out a syntax and write a proposal to p6l?

[08:08] <pmurias> i'll try

[08:08] <audreyt> probably belongs to S04

[08:08] <audreyt> I'd love to have something like that.

[08:11] <pmurias> what's the best way to print the synopsis?

[08:13] <audreyt> use the excellent CPAN module

[08:13] *** crem joined
[08:13] <audreyt> http://search.cpan.org/~ajfry/Pod-Pdf-1.2/

[08:13] <lambdabot> Title: Alan J. Fry / Pod-Pdf-1.2 - search.cpan.org

[08:13] <audreyt> 6 years old module, still gives the best formatting

[08:14] *** trym_ joined
[08:14] <audreyt> simply install and run "pod2pdf"

[08:14] *** daxim joined
[08:16] *** azuroth joined
[08:17] <azuroth> morning/evening

[08:17] <audreyt> reetings.

[08:17] <audreyt> greetings.

[08:18] <Juerd> nothingmuch: Please, if you want to contribute, submit a patch :)

[08:19] <Juerd> nothingmuch: I'm afraid I don't have the time to investigate the matter in detail; though I knew that it sucks :)

[08:20] *** mdiep joined
[08:22] <nothingmuch> Juerd: okay, i'll try to find a spare 5 mins =)

[08:22] <nothingmuch> audreyt: how was your flight?

[08:23] <Juerd> nothingmuch: Thanks!

[08:23] <Juerd> nothingmuch: Please keep it in the compared-to-Perl athmosphere

[08:23] <Juerd> I've rejected contributions before because they were just anti PHP, without comparison

[08:23] <nothingmuch> yeppers

[08:23] <Juerd> Great, thanks

[08:29] <pmurias> math&

[08:36] <svnbot6> r11845 | dolmans++ | use the conventional :toto style

[08:36] *** drrho joined
[08:38] <azuroth> toto the dog?

[08:38] *** Oswyn joined
[08:40] <dolmans> that's cute. typo is my nightmare.

[08:40] *** crem_ joined
[08:40] *** crem joined
[08:44] *** crem_ joined
[08:44] *** Oswyn left
[08:46] <azuroth> oh, I got a job!

[08:47] <audreyt> congrats!

[08:48] <azuroth> I was originally planning on getting my diploma, bumming around for half a year, and then doing university

[09:02] *** Southen joined
[09:04] *** Revision17 joined
[09:11] <azuroth> ?eval my @b = [1,2,3]; grep({1},@b).say; grep({1},@b[0]).say;

[09:11] *** evalbot_11831 is now known as evalbot_11845

[09:11] <evalbot_11845> OUTPUT[123 123 ] Bool::True

[09:23] *** marmic joined
[09:52] *** chris2 joined
[09:54] <dolmans> how to write another test case?

[09:55] <audreyt> in the same .t file?

[09:55] <audreyt> simply change the "plan 1" to "plan 2"

[09:55] <audreyt> and then add another test case below

[09:57] <dolmans> :), i know, but i'm hunting for a case, any suggestion?

[09:58] <audreyt> oh btw, the -> in your test should be -->

[09:58] <audreyt> look at S06.pod and find even more parametric types :)

[09:59] * dolmans checking...

[10:04] *** elmex joined
[10:11] * dolmans ask himself, `why i made so many misdakes?'

[10:11] <svnbot6> r11846 | dolmans++ | amendment to the function return symbol

[10:13] *** Southen_ joined
[10:22] *** tokuhirom is now known as toku_away

[10:37] *** hotte joined
[10:41] *** hexmode joined
[10:54] *** agentzh joined
[10:56] * agentzh is preparing for the patch for S05.

[11:02] *** agentzh joined
[11:03] <agentzh> the patch for S05 looks huge. ;-)

[11:05] *** neoesque joined
[11:11] *** Aankh|Clone joined
[11:12] *** agentzh joined
[11:13] *** agentzh joined
[11:14] <gaal> interesting. I have a default method for class PLit in Perl6Class.hs line 91. And there's an instance on line 103 that looks like it's completely redundant, but I get compilation errors when I remove it. I don't understand why it's needed?

[11:15] <nothingmuch> hola gaal

[11:15] <gaal> when I say "class (Typeable a, Show a) => PLit a" isn't "instance (Typeable a, Show a) => PLit a" implicit?

[11:15] <gaal> hey nothingmuch

[11:16] *** agentzh joined
[11:16] <agentzh> is "semantics" a plural count noun?

[11:17] <agentzh> is the sentence "the semantics *are* confusing" correct?

[11:17] <nothingmuch> gaal: http://www.scannedinavian.com/hope/entry/68

[11:17] <theorbtwo> I'd say that's correct.

[11:17] <gaal> I think so.

[11:17] <nothingmuch> you should comment on that thread, methinks

[11:17] <theorbtwo> Possibly more to the point, I'd say "The semantics is confusing" is wrong.

[11:17] <nothingmuch> or wait

[11:18] <nothingmuch> are you the guilty party for hasktags?

[11:18] <agentzh> okay, thanks

[11:18] <gaal> nothingmuch: no, I have a patch for exuberant ctags.

[11:18] <nothingmuch> that's what i thought =)

[11:20] <nothingmuch> jerkcity++

[11:20] <nothingmuch> i have been following it for a while now, and i still don't know what they're talking about

[11:20] <nothingmuch> yet i'm having fun =)

[11:20] <agentzh> some comments in the sample code of the synopses are not "well-formed", should i fix them?

[11:20] <chris2> audreyt's rhox slides feature some neat examples with different output formats; where can i find the code for that?

[11:22] <gaal> nothingmuch: hah, that patch made it to Gentoo somehow.

[11:22] <nothingmuch> gaal: that's why i like gentoo

[11:22] <nothingmuch> if you need silly features they usually have em

[11:22] <nothingmuch> optional, of course

[11:22] <nothingmuch> it makes a control freak like me happy =)

[11:23] <gaal> oh wait no, the patch is by someone else, "Slightly based on haskell.c by Gaal Yahas"

[11:23] <gaal> maybe it's better!

[11:28] <gaal> hmm, it's a little more robust with whitespaces and character classes, and adds 'class', but it's basically the same thing. that is it doesn't do constructors and selectors, or instance methods.

[11:28] <broquaint> Anyone know if there's an operator like this currently in Perl 6: http://www.perlmonks.org/?node_id=564792 # ?

[11:28] <lambdabot> Title: Secret Perl Operators: the boolean list squash operator, x!!

[11:29] <gaal> broquaint: 'x?'

[11:29] <broquaint> So instead of doing COND ? THING : (), you can do (THING) x!! COND.

[11:30] <audreyt> chris2: you mean the json/yaml/etc one?

[11:30] <chris2> audreyt: yes

[11:30] <audreyt> chris2: installing plugins/REST/ from the jifty svn trunk gives you that

[11:30] <gaal> broquaint: yes; in Perl 6 '?' forces bool context

[11:30] <audreyt> in your jifty app, edit etc/config.yml

[11:30] <audreyt> framework:

[11:30] <audreyt>   Plugins:

[11:30] <audreyt>     - REST: {}

[11:31] * chris2 svn ups

[11:31] <broquaint> Aha, thanks, gaal :)

[11:31] <audreyt> that's it (the "framework:" key is already present)

[11:31] <audreyt> then navigate to /=/model/ and /=/action/

[11:31] <chris2> *now* it's there!

[11:31] <chris2> it wasnt when you posted the draft slides, was it?

[11:31] <audreyt> some of them were in the moose branch

[11:31] <audreyt> some of them were in $job branch

[11:31] <audreyt> but they were not in trunk, correct

[11:32] <chris2> thanks a lot

[11:32] <gaal> broquaint: but I'm not sure about precedence here. could be that the named version is better. I think that's called lowercase 'true' now.

[11:32] <audreyt> np :)

[11:32] * chris2 steals it for his ruby thingy :P

[11:32] <audreyt> good =)

[11:32] <audreyt> I'd love to see yaml-based RESTish RPC between ruby and perl web app frameworks

[11:33] *** Aankh|Clone is now known as Aankhen``

[11:33] *** agentzh joined
[11:33] <chris2> okay/rpc exists :)

[11:33] <gaal> and call it Rupee?

[11:33] <chris2> Peby

[11:33] <agentzh> is the sentence "Just as A, so does B." correct?

[11:34] <gaal> agentzh: when one of A and B have a verb.

[11:34] <agentzh> gaal: so this is incorrect, isn't it?

[11:34] <gaal> actually, A needs the verb.

[11:34] <Aankhen``> agentzh: It should be "Just as A does something, so does B".

[11:34] <agentzh> A and B are nouns here.

[11:35] <agentzh> following this reasoning, S05 is WRONG!!! yay!

[11:35] <gaal> agentzh: context? what's the suspect sentence?

[11:35] <agentzh> gaal: a sec...

[11:36] <agentzh> "Just as C<rx> has variants, so does the C<regex> declarator."

[11:36] <gaal> no, that's correct.

[11:36] <agentzh> oh, A seems to have a verb..

[11:36] <agentzh> gaal: okay, thanks

[11:37] <gaal> np :)

[11:49] *** hugues23 joined
[11:53] *** weinig|sleep is now known as weinig

[11:53] *** elmex joined
[12:11] *** weinig is now known as weinig|bbl

[12:16] *** dolmans joined
[12:18] *** frederico joined
[12:18] *** Limbic_Region joined
[12:21] *** tup joined
[12:26] <pasteling> "age" at 210.22.200.67 pasted "My patch for S05 (will be sent to p6-l soon). Please comment." (407 lines, 14.2K) at http://sial.org/pbot/18732

[12:27] <pasteling> "agentzh" at 210.22.200.67 pasted "My patch for S05 (will be sent to p6-l soon). Please comment. (Ingnore the previous paste)" (407 lines, 14.2K) at http://sial.org/pbot/18733

[12:29] *** weinig|bbl is now known as weinig

[12:29] <nothingmuch> agentzh: i suggest you wrap text, so that the committer doesn't have to.... what is the ss diff? ... The new C<:ratchet> modifier causes this regex to not backtrack - i think this is the correct form.

[12:29] <nothingmuch> oh, he's not here =/

[12:29] <Aankhen``> age: "causes this regex to not" reads better than "causes this regex not to".

[12:30] <Aankhen``> Bleh.

[12:32] <pasteling> "agentzh" at 210.22.200.67 pasted "thanks! will recover "to not backtrack" (btw I can't connect to IRC, so i use this to reply. ;-))" (1 line, 14B) at http://sial.org/pbot/18735

[12:34] <nothingmuch> agentzh: if you need ssh access can help i can set you up an account on my machine where you can use irssi

[12:34] <nothingmuch> within 2 mins

[12:34] <nothingmuch> reply the same way =)

[12:36] <pasteling> "agentzh" at 210.22.200.67 pasted "Cool! nothingmuch, please provide a (free) SOCKS proxy or something like that" (1 line, 14B) at http://sial.org/pbot/18736

[12:37] <nothingmuch> agentzh: i can run an instance of nylon for you but I don't want to keep that up because they are easy to abuse

[12:37] <nothingmuch> please nopaste a public ssh key

[12:37] *** Dr_Pi_ joined
[12:37] <nothingmuch> boy that's secure, eh ;-)

[12:38] <nothingmuch> agentzh: you have a socks running on pasta.woobling.org

[12:38] <nothingmuch> restricted to your IIP

[12:38] <nothingmuch> (based on the nopaste IPs)

[12:39] <pasteling> "agentzh" at 210.22.200.67 pasted "nothingmuch: i don't quite follow you. what is SSH key? would you please send the account info to my mailbox? "agentzh at gmail dot com" thank you. :=)" (1 line, 7B) at http://sial.org/pbot/18739

[12:41] <nothingmuch> agentzh: sent

[12:43] <meppl> guten morgen

[12:44] *** weinig is now known as weinig|away

[12:48] <pasteling> "agentzh" at 210.22.200.67 pasted "nothingmuch: that does not help. I remember i'm behind my school's firewall. 210.22.200.67 is the firewall's IP. thank you all the same :D" (1 line, 14B) at http://sial.org/pbot/18740

[12:49] <nothingmuch> agentzh: okay, what about the socks then? i have one running on pasta.woobling.org

[12:50] *** agentzh joined
[12:51] <nothingmuch> hola agentzh

[12:51] <agentzh> yay! i'm back! :=)

[12:51] <nothingmuch> how did you manage?

[12:51] <agentzh> i'm used a weird HTTP to SOCKS4 proxy in China

[12:51] <agentzh> *using

[12:51] <nothingmuch> ah

[12:51] <nothingmuch> • [pasta:~] nothingmuch % sudo nylon  -f -v -a 210.22.200.67 -i eth0

[12:51] <nothingmuch> Password:

[12:51] <nothingmuch> nylon: Listening on bzq-84-108-53-74.cablep.bezeqint.net:socks

[12:51] <agentzh> because it's free so it's very fragile

[12:52] <agentzh> nothingmuch: i can't directly connect to any foreign sites here

[12:53] <agentzh> every request should go through a chinese proxy

[12:53] <nothingmuch> oh, so the socks server has to be behind the great firewall?

[12:53] <nothingmuch> i see

[12:53] <agentzh> the great firewall is not a problem.

[12:53] <agentzh> the real problem is the little firewall of my university. :=)

[12:53] <nothingmuch> ah

[12:54] <nothingmuch> so which hosts/ports *are* allowed?

[12:54] <nothingmuch> http?

[12:54] <agentzh> http and https

[12:54] <nothingmuch> try ssh -p 443 pasta.woobling.org

[12:54] <agentzh> 80 and possibly 21

[12:54] <nothingmuch> if it doesn't detect the traffic, just the port, it may work

[12:54] <agentzh> trying...

[12:54] <nothingmuch> that's why i have it set up that way

[12:54] <nothingmuch> (university firewalls)--

[12:56] <agentzh> nothingmuch: "[error] unable to solve host name"

[12:56] <nothingmuch> urh

[12:56] <nothingmuch> 84.108.53.74

[12:56] <agentzh> trying...

[12:59] <nothingmuch> agentzh: another option is CGI::IRC

[13:00] <nothingmuch> http://cgiirc.sourceforge.net/

[13:00] <lambdabot> Title: CGI:IRC - Web based IRC Client

[13:00] <nothingmuch> i think feather.perl6.nl has an instance of it

[13:00] <nothingmuch> Juerd: can you confirm?

[13:02] *** agentzh joined
[13:04] *** mauke_ joined
[13:04] <pasteling> "agentzh" at 210.22.200.67 pasted "nothingmuch: IRC disconnected again. feather does have an CGI:IRC interface, but i'm getting this error: "An error occured: Communication socket already exists"" (1 line, 3B) at http://sial.org/pbot/18741

[13:05] <nothingmuch> agenthzh: odd... you did join the channel for a second

[13:05] <nothingmuch> any feather sudoer: can you reset my password to some dumb string?

[13:05] <nothingmuch> i use an ssh key so i can't actually change it now

[13:06] <nothingmuch> but i'd like to try CGI::IRC

[13:07] <pasteling> "agentzh" at 210.22.200.67 pasted "nothingmuch: is there any way to kill the running socket on feather? (maybe i should write a Perl script to automate this paster)" (1 line, 4B) at http://sial.org/pbot/18742

[13:10] <nothingmuch> pasteling: probably only as the www-data user (== someone with sudo)

[13:11] *** fglock joined
[13:17] *** stevan joined
[13:18] *** mauke_ is now known as mauke

[13:19] *** b00t joined
[13:45] *** cdpruden joined
[13:54] *** kanru joined
[13:55] *** esammer_ joined
[13:58] *** cdpruden_ joined
[14:05] <pasteling> "agentzh" at 210.22.200.67 pasted "Updated patch for S05 (Aankhen``++, nothingmuch++). Please review. :=)" (397 lines, 13.8K) at http://sial.org/pbot/18744

[14:10] *** mako132 joined
[14:10] *** cdpruden__ joined
[14:10] *** avar joined
[14:14] *** vel joined
[14:14] *** cdpruden joined
[14:20] *** rnorwood joined
[14:28] *** crem joined
[14:29] *** cjeris joined
[14:29] *** agentzh joined
[14:29] <agentzh> finally back...

[14:30] <agentzh> Perl 6's ms/.../ was constantly reminding me of Microsoft while i was reading S05.

[14:31] <agentzh> i think we had better switch to mm/.../ which looks more consistent with ss/.../ and furthermore...

[14:32] <agentzh> mm has a side effect of having the meaning "pretty girl" in Chinese. ;-)

[14:36] *** penk joined
[14:44] *** weinig|away is now known as weinig

[14:45] *** agentzh joined
[14:46] <agentzh> ?eval my $a = 1..3; say @{ $a };

[14:46] *** evalbot_11845 is now known as evalbot_11846

[14:46] <evalbot_11846> OUTPUT[1 2 3 ] Bool::True

[14:46] <agentzh> question: are @{ ... } and %{ ... } still valid Perl 6?

[14:48] <agentzh> i grepped through all the lastest synopses, only S05 uses this syntax, which is odd. (Maybe S05 is out of sync with others?)

[14:49] <agentzh> i also have grepped the pugs test suit and have got the following results:

[14:49] <PerlJam> agentzh: they ought to be valid. @{$capture} should give you the positiony things,  %{$capture} should give you the namey things.

[14:50] <agentzh> PerlJam: but i think we should use the syntax @($capture) and %($captuer) per S02

[14:50] <agentzh> or even @$capture and %$capture for short

[14:51] <PerlJam> Hmm.

[14:52] <agentzh> {...} is a always a clousure or a hash script

[14:52] <agentzh> this meaning of {...} is very consistent in Perl 6 IMHO

[14:52] <PerlJam> you're right.  /me isn't used to the nw world order yet

[14:52] <PerlJam> s/nw/new/

[14:52] <agentzh> PerlJam: :)

[14:53] * agentzh is adding this kind of fixes to his patch for S05...

[14:54] <PerlJam> yes, please do.  I'm looking at it now and the uses of @{...} appear vestigial

[14:56] <agentzh> aye

[14:59] <Juerd> nothingmuch: Confirmed

[14:59] <nothingmuch> Juerd | agentzh &

[15:01] <agentzh> ?

[15:01] <agentzh> Juerd: why am i getting that error when using feather's CGI:IRC?

[15:01] <agentzh> "Communication socket already exists"

[15:04] *** dakkar joined
[15:05] *** agentz joined
[15:05] <agentz> Juerd: it's my proxy's fault or must i always use /quit or /part after using CGI:IRC?

[15:11] *** iblechbot joined
[15:15] *** StudiesInWords joined
[15:15] *** justatheory joined
[15:17] <agentz> PerlJam: mail sent to p6-l

[15:19] *** agentz left
[15:20] *** agentzh joined
[15:26] * agentzh finds S05 quite comfortable to read because it contains *many* samples.

[15:27] <agentzh> hopefully @larry will add more sampe code to S02, S03, and S04. :)

[15:29] <ajs> I would think that @{...} would be "the return value of ... as a list (possibly lazy)"

[15:30] <ajs> Where @(...) would be "the value of the expression ... as a list (possibly lazy)"

[15:30] <PerlJam> ajs: I would think @{...} would be "evaluate this closure in an array context"  :)

[15:30] <agentzh> ajs: i think lists are always lazy in Perl 6 :)

[15:30] <ajs> PerlJam: you said the same thing I did, but I'm talking about the return value treatment and you're talking about the evaluation

[15:30] <PerlJam> ajs: list != array

[15:31] <ajs> agentzh: No. Lists are always lazy IF THEY CAN BE. So, it's important to note that an expression can be lazy

[15:31] <agentzh> the difference between lists and arrays is quite fuzzy to me.

[15:31] <agentzh> ajs: of course

[15:32] <agentzh> PerlJam: why not simply { ... }?

[15:32] <ajs> agentzh: lists are collections of values with inspecific typing. Arrays are a data structure. (as I understand it)

[15:32] <agentzh> @ is redundant in your usage

[15:32] <agentzh> ajs: thanks

[15:32] <PerlJam> agentzh: I'm not sure there isn't some difference between "list context" and "array context"

[15:33] <agentzh> PerlJam: you're confusing me even more. ;-)

[15:33] <ajs> Consider "$x = {...}" vs "$x = @{...}" These are radically different things (potentially)

[15:33] <agentzh> ajs: indeed

[15:33] <ajs> PerlJam: Array context would imply the creation of a datastructure, no? I'm guessing based on your usage.

[15:34] <PerlJam> ajs: that makes some sense to me, yes.

[15:34] <ajs> It's not a different context though. It's just a behavior

[15:34] <svnbot6> r11847 | fglock++ | pX/Pugs-Compiler-Rule - more tests; code cleanup

[15:34] <PerlJam> agentzh: confusion is that natural state of humanity  :)

[15:34] <ajs> The evaluation would still be in list context

[15:34] <PerlJam> (especially around #perl6)

[15:34] <agentzh> ?eval $x = @(do { 1..5 });

[15:34] <evalbot_11846> Error:  unexpected "(" expecting "::"

[15:35] <agentzh> ?eval $x = @{ 1..5 };

[15:35] <evalbot_11846> Error: Undeclared variable: "$x"

[15:35] <agentzh> ?eval my $x = @(do { 1..5 });

[15:35] <ajs> heh

[15:35] <evalbot_11846> Error:  unexpected "(" expecting "::"

[15:35] * agentzh stops playing

[15:35] <ajs> ?eval my $x = @{ 1..5 };

[15:35] <evalbot_11846> [1, 2, 3, 4, 5]

[15:36] <ajs> And there you have it

[15:36] <agentzh> it's not specified i'm afraid

[15:36] *** ludan joined
[15:36] <ajs> It's specified in the source ;)

[15:36] <agentzh> consider everything not mentioned in Perl 6 Spec should stay just the same as it was in Perl 5

[15:36] <agentzh> then yes

[15:51] *** buetow joined
[16:01] *** Wikipedia-Gast66 joined
[16:02] <Wikipedia-Gast66> why

[16:02] <Limbic_Region> why not?

[16:03] <PerlJam> ask not "why?", but rather, "why not?"

[16:03] <Wikipedia-Gast66> why

[16:03] <merlyn> y? :)

[16:03] <Limbic_Region> ok - because

[16:03] <Wikipedia-Gast66> merlyn sucks

[16:03] <Limbic_Region> no, merlyn guzzles

[16:04] <Wikipedia-Gast66> Limbic_Region sucks

[16:05] * PerlJam sounds the troll gong ...  *BONG*  

[16:09] <pmurias> it looks more like an artificial life form to me

[16:10] <Wikipedia-Gast66> does it?

[16:10] <pmurias> does it not?

[16:10] *** amnesiac joined
[16:11] *** Psyche^ joined
[16:12] <pmurias> Limbic_Region: why should things not mentioned int the Synopsis implicitly fall through into perl 6?

[16:20] *** Psyche^ is now known as StudiesInWords

[16:23] *** cdpruden joined
[16:25] <Limbic_Region> pmurias - huh?  When did I say anything regarding that?

[16:29] <PerlJam> pmurias: Larry has said that things that exist in perl5 but aren't in the perl6 spec are assumed to be "just like perl5"

[16:31] <rgs> formats !

[16:32] <PerlJam> formats are specced.

[16:33] <rgs> damn. pack templates? :)

[16:34] <Limbic_Region> no, they are specced to no longer be part of the core and to see Damian

[16:34] <Limbic_Region> IOW - relegated to a module

[16:34] <rgs> I remember that;

[16:34] <rgs> I was just switching my troll to the support of pack() in perl 6

[16:34] <Wikipedia-Gast66> rgs sucks

[16:34] <[particle]> reset ;)

[16:35] <PerlJam> ??

[16:35] <PerlJam> study

[16:35] <[particle]> (i know that's specced out of existance)

[16:35] <PerlJam> any others?

[16:35] <Wikipedia-Gast66> PerlJam sucks

[16:35] <[particle]> am i invisible?

[16:35] <Limbic_Region> chop

[16:35] * Limbic_Region thinks chop is gone anyway

[16:35] <Wikipedia-Gast66> Limbic_Region sucks

[16:35] <PerlJam> yep

[16:36] <[particle]> hrmm, it may be

[16:36] <[particle]> Wikipedia-Gast66: you suck! :P

[16:36] <PerlJam> [particle]: You may be invisible, but I can still see the text you type :)

[16:36] <[particle]> i'm just invisible to the stupid bot

[16:36] <[particle]> ...which should be kicked

[16:36] <PerlJam> indeed!

[16:37] * [particle] is not a channel op

[16:37] <Wikipedia-Gast66> PerlJam sucks

[16:37] <PerlJam> Wikipedia-Gast66 sucks

[16:37] <Wikipedia-Gast66> no

[16:37] <PerlJam> yes

[16:37] <Wikipedia-Gast66> PerlJam is gay

[16:38] * [particle] hands out square brackets to the crowd

[16:38] <[particle]> heh, whaddayaknow, there are no channel ops here

[16:39] <rgs> square brackets suck

[16:39] <[particle]> :)

[16:39] <PerlJam> all bracketing constructs suck

[16:39] <[particle]> perhaps i should call them earmuffs :)

[16:39] <Limbic_Region> if #perl6 is anything like #perl - no channel ops by default, you "power up", do the deed, and "power down"

[16:39] <PerlJam> They're too ... constraining :)

[16:40] <[particle]> perhaps you should learn about quantum tunneling

[16:40] * Limbic_Region knows about quantum tunneling

[16:41] <Limbic_Region> without it, the universe as we know it (including us) wouldn't exist

[16:42] <Limbic_Region> well, that's probably not true but other than divine intervention - there are no competing theories ;-)

[16:43] <svnbot6> r11848 | fglock++ | pX/Pugs-Compiler-Rule - fixed infinite loop in backtracking; more tests

[16:50] *** sheriff joined
[16:51] <Wikipedia-Gast66> svnbot6 sucks

[16:53] *** sheriff left
[16:56] *** cdpruden_ joined
[17:04] *** salty-horse joined
[17:07] *** cdpruden__ joined
[17:10] *** rodi joined
[17:10] <svnbot6> r11849 | fglock++ | pX/Pugs-Compiler-Rule - 247 tests pass, 2 skipped

[17:10] <salty-horse> audreyt, have you thought about soft linking pugs/docs/Perl6/Syn/ to the real synopsis repository using svn:externals? I, for one, don't run onfigure.PL every day (as opposed to "svn up; make")

[17:12] <obra> svn:externals doesn't work well with svk

[17:13] <salty-horse> obra, don't you mean svk doesn't work well with svn:externals? :)

[17:13] *** avar joined
[17:15] <obra> no, I mean "svn:externals is a bloody-awful hack that's damn near useless"

[17:15] <obra> :0

[17:15] <obra> :)

[17:17] *** pdcawley joined
[17:17] <salty-horse> i know one project that uses it to include development versions third-party projects in its tree, so it's good for atleast *one* thing. do many people here use svk?

[17:18] <PerlJam> salty-horse: I'll venture to say "yes"

[17:19] <obra> salty-horse: most of the core developers

[17:19] <obra> salty-horse: you run into big problems if the other repository goes away. and you lose versioning on those remote projects

[17:20] <rodi> additionally, if you want to go hiking in the mountains of Taiwan to find hot springs, you need SVK.

[17:21] <rodi> SVN is totally unsuitable for hotspring-finding.

[17:22] * PerlJam wonders how clkao powers his laptop on such hikes

[17:22] <salty-horse> rodi, I don't have a laptop, so I'm not sure I could use SVK or SVN on such trips, if I ever visit the hot-springed Taiwanian mountains

[17:24] *** SubStack joined
[17:25] <rodi> salty-horse: my problem is getting to Taiwan.  Maybe between the two of us, we could work something out ;)

[17:30] <salty-horse> rodi, send me your laptop. i'll see what I can do

[17:33] <salty-horse> where does it say in the synopsis that I can use a semicolon to seperate arguments in a parenthesised sub call? say("foo"; "bar")

[17:36] <pmurias> fglock: ping

[17:37] <PerlJam> salty-horse: I think you want http://dev.perl.org/perl6/doc/design/syn/S06.html#Feed_operators

[17:37] <lambdabot> Title: Synopsis 6: Subroutines -

[17:40] <ludan> help

[17:41] <salty-horse> hmm.. thanks PerlJam

[17:43] <ludan> /me &

[17:43] <ludan> /me &

[17:44] <fglock> pmurias: pong

[17:51] *** unobe_away is now known as unobe

[17:59] *** cdpruden_ joined
[18:05] *** pdcawley joined
[18:05] <pmurias> fglock: you pinged me before

[18:06] <fglock> pmurias: sorry, I forgot why :)

[18:10] <pmurias> how is the refactoring PCR going?

[18:10] *** unobe is now known as unobe_away

[18:11] <fglock> pmurias: I'm merging now, but it will take some time - there are many differences

[18:12] <gaal> and thus nothingmuch and agentzh developed IP over nopaste :)

[18:15] <pmurias> did you look into Parse-Rule

[18:15] <pmurias> ?

[18:15] <fglock> pmurias: not yet - looking

[18:17] <svnbot6> r11850 | fglock++ | pX/Pugs-Compiler-Rule - started merging with perl5/Pugs-Compiler-Rule;

[18:17] <svnbot6> r11850 | fglock++ | - updated ChangeLog, TODO; version is now 0.12_01

[18:19] <fglock> pmurias: Parse-Rule might be useful for the v6-Compiler project

[18:22] *** weinig is now known as weinig|bbl

[18:22] <pmurias> it would probably need some architectural changes to support emitters

[18:26] <fglock> pmurias: it needs to use the precedence parser, and implement dynamic grammar too

[18:26] <svnbot6> r11851 | fglock++ | pX/Pugs-Compiler-Rule - merged up to PCR 0.11

[18:30] <pmurias> dynamic grammar == magic hashes?

[18:31] <fglock> the new PCR runs the test suite in about 60% of the time

[18:31] <fglock> pmurias: yes

[18:31] <pmurias> fglock: wow

[18:32] *** rodi is now known as rodi_away

[18:33] * pmurias is learning Pod::Parser , so he can massage the synopsis for printing

[18:34] <pmurias> fglock: how much would faster would a C version of ratcher be?

[18:34] <pmurias> s/ratcher/ratcher

[18:36] <fglock> pmurias: it would depend a lot on the unicode library and on how you interface to the object system - but I think 10x to 100x would be reasonable

[18:37] <fglock> mm - it uses about 30% less memory too

[18:44] *** thepler joined
[18:46] *** weinig|bbl is now known as weinig

[19:02] *** pdcawley joined
[19:06] *** larsen joined
[19:21] *** bernhard joined
[19:25] *** Southen joined
[19:32] <pmurias> fglock: an evil non-unicode version could be made for the speed freaks :)

[19:45] <pmurias> sleep&

[20:09] <gaal> TimToady: "=head1 Changes to Perl 5 operators" -> shouldn't that be changes *from* Perl 5 operators?

[20:12] *** chris2 joined
[20:17] <TreyHarris> gaal: would be more logical, but less idiomatic English.

[20:18] <TreyHarris> actually, i'm not sure it would be more logical.  i might expect a section called "changes from Ruby operators, changes from Java operators, etc. etc."

[20:21] *** lolage joined
[20:21] <svnbot6> r11852 | lwall++ | Changed ${...} forms to $(...)

[20:23] *** hexmode joined
[20:27] *** [particle] joined
[20:35] *** Dr_Pi_ is now known as Dr_Pi

[20:37] <gaal> TreyHarris: the thing that's changed isn't Perl 5.

[20:57] *** SageLT joined
[21:00] <svnbot6> r11853 | lwall++ | Start changing !~ to !~~, but I can't test until Parrot_exit gets sorted out...

[21:03] <TimToady> anyone here know how to add a ParrotInterp arg to parrot_exit?  It doesn't like me.

[21:04] <PerlJam> TimToady: I bet someone on irc.perl.org #parrot knows :)

[21:05] <TimToady> this is a Haskell question...

[21:06] <TimToady> If I do the obvious cargo-culty thing, I get in trouble with the IO monad somehow

[21:06] <audreyt> line 360

[21:06] <audreyt> foreign import ccall "Parrot_exit"

[21:06] <audreyt>     parrot_exit :: CInt -> IO ()

[21:06] <TimToady> got that part

[21:06] <audreyt> the signature needs to change to match the C-land conv

[21:07] <audreyt> and then line 214

[21:07] <audreyt>         parrot_exit 0

[21:07] <audreyt> becomes

[21:07] <audreyt>         parrot_exit interp 0

[21:07] <audreyt> that should be all

[21:07] <TimToady> Oh, I had _ParrotInterp there

[21:09] <audreyt> *nod* it's a IORef, not the actual interp

[21:09] <audreyt>         interp <- readIORef _ParrotInterp

[21:09] <audreyt> that reads the interp out from the IORef (aka Scalar)

[21:11] <leo> audreyt: I hope that change to Parrot_exit is matching your expectations

[21:12] <audreyt> certainly is :) if that means we can retire the horrible setjmp kluge, then yes

[21:13] <leo> hopefully yes and imcc compile errors are now catchable exceptions

[21:13] <audreyt> leo++

[21:13] <audreyt> yay. :)

[21:14] <leo> the latter is courtesy of vsoni

[21:14] <audreyt> vsoni++

[21:14] <leo> indeed

[21:16] <leo> see e.g. tail -18 t/pmc/eval.t

[21:16] <leo> # in the parrot tree

[21:18] <audreyt> *nod*

[21:19] <audreyt> waking up at 5am. not bad for first day of jetlag

[21:19] <leo> in combination with push_new_c_exception_handler() you should be able to catch this exception - I hope

[21:19] <audreyt> ok. I'll take a look

[21:20] <audreyt> after some more sleep I hope :)

[21:20] <audreyt> TimToady++ # chasing up parrotembed churn

[21:20] <audreyt> brb...

[21:30] *** avar joined
[21:31] <svnbot6> r11854 | fglock++ | pX/Pugs-Compiler-Rule - merged Token hash and array interpolation; 8 more tests

[21:31] <svnbot6> r11855 | lwall++ | Parrot_exit and Parrot_on_exit now take interpreter arg.

[21:36] *** cjeris left
[21:55] <svnbot6> r11856 | lwall++ | Dewarnify embedder.

[22:07] <svnbot6> r11857 | fglock++ | pX/Pugs-Compiler-Rule - svn properties;

[22:07] <svnbot6> r11857 | fglock++ | - merged 'negate' node

[22:13] *** weinig_ joined
[22:14] <audreyt> TimToady: does this mean we get a

[22:14] <audreyt> infix_prefix_meta_operator:<!>

[22:14] <audreyt> i.e. a new metaop syncateg?

[22:15] *** rodi_away is now known as rodi

[22:16] <svnbot6> r11858 | fglock++ | pXPugs-Compiler-Rule - TODO

[22:17] <TimToady> audreyt: presumably

[22:17] <svnbot6> r11859 | Sage++ | The isInSequence function used for finding nodes in order now accepts junk in between matched nodes (so comments can't throw off a translation by mucking with a match).

[22:18] <TimToady> I could see infix_prefix_meta_operator:<-> applied to cmp and <=>

[22:18] <TimToady> but maybe not

[22:19] <audreyt> -cmp looks like filetest

[22:19] <TimToady> not as infix

[22:19] <audreyt> $x -cmp $b

[22:19] <TimToady> but the - does rather disappear

[22:19] <TimToady> $x !cmp $b doesn't quite work

[22:20] <audreyt> $x flip cmp $y

[22:20] <TimToady> probably not worth it, given most sorts will be done with sigs rather than closures

[22:20] <audreyt> yeah.

[22:20] <TimToady> can always define your own revcmp

[22:20] <TimToady> if you need to pass one in

[22:21] *** justatheory joined
[22:21] <svnbot6> r11860 | Sage++ | "@array" -> "@array[]" and "%hash"->"%hash{}" translations completed.

[22:21] <svnbot6> r11860 | Sage++ | Once regexs now translate: ?foo? -> m:once/foo/. This is performed BEFORE modifier translations (which I added yesterday) so as to not perturb anything.

[22:21] <svnbot6> r11860 | Sage++ | Some other clarifications and comments, just little fixes.

[22:21] <TimToady> infix:<cmp>.assuming(:a($b),:b($a))  :)

[22:22] <audreyt> :D

[22:25] <audreyt> [!~~=] $x, $y, $z;

[22:25] <audreyt> presumably legal?

[22:28] <TimToady> probably not, but merely because = doesn't apply itself to boolean producers

[22:28] <TimToady> don't have eq= either

[22:30] <audreyt> 'k

[22:31] <audreyt> and ||= works only because it's not technically boolean

[22:31] <audreyt> and !||= would work

[22:32] <audreyt> $x ~~= /.../; # $x now becomes Match object

[22:32] <TimToady> probably not, if !|| binds tighter

[22:32] <audreyt> yeah, that was the question

[22:32] <TimToady> and I think it does

[22:32] <audreyt> 'k

[22:36] <svnbot6> r11861 | fglock++ | pX/Pugs-Compiler-Rule - fixed <!before> rule; added tests

[22:37] *** Southen_ joined
[22:38] *** larsen joined
[22:38] <TimToady> I wonder why my t/perl5/method.t and t/perl5/roundtrip.t tests always hang...

[22:42] <audreyt> hangs here too...

[22:42] <audreyt> fixing

[22:49] *** Southen joined
[22:52] <audreyt> Jet lag hits!  You feel dizzy. --More--

[22:52] <audreyt> (sigh. bbiab)

[23:11] *** b_jonas joined
[23:44] *** rodi joined
[23:53] *** jferrero joined
