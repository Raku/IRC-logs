[00:00] <TimToady> note, we're also thinking about playing similar games with postfix (), which would force for() to be considered a function rather than a keywords.

[00:00] <salty-horse> TimToady, unrelated, I scanned the synopsis and didn't find a mention of foo$x being treated as foo $x

[00:01] <salty-horse> therefore giving room to for overloading, and much obfuscuation?

[00:01] *** rashakil joined
[00:04] <TimToady> I see that S03 is unclear on the subject.  I will look at how to remedy that.

[00:05] <TimToady> I was trying to say that you have to use parens to add a postfix: foo().[] and such, but what I said seems to disallow foo$bar.

[00:05] <TimToady> mind you, there's part of me that thinks foo$bar *ought* to be disallowed...

[00:11] <nothingmuch> quick off the top of your heads, i need a module to make '--from="some_date_spec"' parsing easy

[00:11] <nothingmuch> e.g. today, tomorrow, sunday, 1/2 (locale sensitive)

[00:12] *** mauke_ is now known as mauke

[00:12] <salty-horse> google cpan fuzzy date ?

[00:12] *** ruoso joined
[00:13] <nothingmuch> there's a bajillion hits

[00:13] <nothingmuch> i need the ones that are known to be good, hence the human factor =)

[00:14] <silug> Date::Manip works nicely, but it is a bit slow

[00:15] <salty-horse> no experience with it, but i also notice http://search.cpan.org/~muir/Time-modules-2003.1126/lib/Time/ParseDate.pm

[00:16] <lambdabot> Title: Time::ParseDate -- date parsing both relative and absolute - search.cpan.org

[00:17] <salty-horse> gnight

[00:19] <silug> perl -MDate::Manip -le 'for $n qw(today tomorrow sunday) { print &ParseDate($n) }'

[00:19] <silug> 2006071719:18:37

[00:19] <silug> 2006071819:18:37

[00:19] <silug> 2006072300:00:00

[00:19] <silug> things like "last sunday" work too

[00:20] <nothingmuch> awesome

[00:20] *** FurnaceBoy joined
[00:20] <silug> "last week" and "last month" work too, although strangely "last year" doesn't

[00:21] <nothingmuch> i doubt a mailing list summarizer will do a last year =)

[00:22] <silug> true

[00:22] *** SubStack joined
[00:23] *** daxim_ joined
[00:23] <silug> i love that things like "third monday in august" work.  that would have saved me a lot of coding when i was setting up my LUG sites a few years back.

[00:25] *** unobe is now known as unobe_away

[00:28] <robkinyon> seen alias

[00:29] <jabbot> robkinyon: I havn't seen alias, robkinyon

[00:43] *** frederico joined
[00:43] <Jedai> seen ingy

[00:43] <jabbot> Jedai: ingy was seen 3 hours 10 seconds ago

[00:54] *** hikozaemon joined
[01:04] <TreyHarris> seen audreyt

[01:04] <jabbot> TreyHarris: audreyt was seen 1 hours 14 minutes 37 seconds ago

[01:05] <TreyHarris> ?eval $_ = 3; if .defined -> $id { say "yes: $id" }

[01:05] *** evalbot_11605 is now known as evalbot_11606

[01:05] <evalbot_11606> Error:  unexpected ">" expecting comment, operator or block

[01:05] <TreyHarris> audreyt: if you see this when you get back, i'm trying to figure out this comment:

[01:06] <audreyt> TreyHarris: the "if ... ->{}" form doesn't yet work

[01:06] <TreyHarris> 09:47 < gaal> er. okay.  I'm just wondering

[01:06] <TreyHarris> oops :-)

[01:06] <TreyHarris> 09:39 < audreyt> if .defined -> $id { ... }

[01:06] <TreyHarris> oh, you replied, and that was what messed up my copy :-)

[01:07] <TreyHarris> ok, thanks

[01:08] <audreyt> np :)

[01:09] <TreyHarris> ?eval my $x = 3; undef $x;

[01:09] <evalbot_11606> Error:  unexpected "$" expecting comment, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input

[01:09] <TreyHarris> is undef() gone?

[01:09] <audreyt> it's now undefine()

[01:10] <TreyHarris> ahh, i missed that.  S29 needs to be tracked in email like the official synopses

[01:44] *** unobe joined
[01:45] *** unobe_away is now known as unobe

[01:50] *** unobe joined
[02:11] *** lisheeghan joined
[02:15] *** Kattana joined
[02:25] *** weinig is now known as weinig|zzz

[02:27] *** miyagawa joined
[02:31] *** xdg joined
[03:04] *** Khisanth joined
[03:31] *** scw joined
[03:59] *** amnesiac joined
[04:09] *** amnesiac joined
[04:09] *** rlb3 joined
[04:20] *** Khisanth joined
[04:40] *** SSelva joined
[04:48] <svnbot6> r11607 | audreyt++ | * Pugs::Compiler::Rule (fglock++'s branch): more fix on getting ::Ratchet initialization working

[05:07] *** SSelva left
[05:07] *** SSelva joined
[05:09] *** szbalint_ joined
[05:19] <svnbot6> r11608 | audreyt++ | * Implement $$match for real.

[05:21] *** SSelva left
[05:30] *** scook0 joined
[05:37] *** szbalint_ joined
[05:37] *** Kattana joined
[05:37] *** hikozaemon joined
[05:37] *** daxim_ joined
[05:37] *** rashakil joined
[05:37] *** esammer joined
[05:37] *** lumi joined
[05:37] *** silug joined
[05:37] *** typester joined
[05:37] *** xern_ joined
[05:37] *** drbean joined
[05:37] *** Jedai joined
[05:37] *** lollan joined
[05:37] *** theorbtwo joined
[05:37] *** thepler joined
[05:37] *** svnbot6 joined
[05:37] *** dvorak joined
[05:37] *** broquaint joined
[05:37] *** kcwu joined
[05:37] *** perlbot joined
[05:37] *** buubot joined
[05:37] *** Shabble joined
[05:37] *** Grrrr joined
[05:37] *** bennymack joined
[05:37] *** Yaakov joined
[05:37] *** revdiablo joined
[05:37] *** monkey_ joined
[05:37] *** LCamel joined
[05:37] *** tcliou joined
[05:37] *** _calvin_ joined
[05:37] *** geoffb joined
[05:37] *** trym joined
[05:37] *** meppl joined
[05:37] *** ajs joined
[05:37] *** PerlJam joined
[05:37] *** Odin- joined
[05:37] *** cwest joined
[05:37] *** xerox joined
[05:37] *** hcchien joined
[05:37] *** nelhage joined
[05:37] *** webmind joined
[05:37] *** nnunley joined
[05:37] *** audreyt joined
[05:37] *** ingy joined
[05:37] *** cls_bsd joined
[05:37] *** obra joined
[05:37] *** amv joined
[05:37] *** pjcj joined
[05:37] *** jiing joined
[05:37] *** clkao joined
[05:37] *** nperez joined
[05:37] *** rafl joined
[05:37] *** notsri_ joined
[06:00] <gaal> Should we make U+nnnn a string literal? (equivalent to chr(0xnnnn) but folded)?

[06:04] *** justatheory joined
[06:04] <TimToady> do you mean in Perl or Haskell?

[06:12] <TreyHarris> anyone know of a free fixed-width font containing that newline character?  My graphic-designer spouse's Mac, loaded with hundreds of fonts, has only two with that glyph, and both are variable-width :-(

[06:22] <gaal> TimToady: in Perl. By "folded" I mean constant-folded

[06:23] <gaal> "\x[nnnn]"

[06:23] <TimToady> It seems rather special-casey for "\xnnnn"

[06:24] <gaal> just seems useful when copy-pasting from reference tables :)

[06:25] <TimToady> I'm using Sazanami Gothic at the moment, but then I'm studying Japanese...

[06:27] * gaal has been looking for a monospaced font with Hebrew, Arabic, and Cyrillic to replace Courier New...

[06:30] <TimToady> I think asking for a monospaced Arabic font is kind of strange...

[06:30] <gaal> hey, they use xterms too...

[06:31] <gaal> Hebrew Yod is ugliest in fixed-width: it's just about two pixels wide.

[06:31] <gaal> רואים?

[06:32] <TimToady> doesn't look too bad in my font.

[06:32] <gaal> Maybe I should just create my own frankenfont.

[06:32] *** kanru joined
[06:33] <TimToady> The mem is a bit squished against the question mark though.

[06:33] <gaal> TimToady: it's *reasonable*, but can't be pretty. It's like seeing unkerned text after reading a quality typeset book.

[06:33] <TreyHarris> TimToady: you may find this of interest.  A couple of computing professors at Middlesex University say they've devised a test that can predict, before any programming instruction whatsoever, whether someone will be able to learn to program or not:

[06:33] <TreyHarris> http://www.codinghorror.com/blog/archives/000635.html

[06:33] <lambdabot> Title: Coding Horror: Separating Programming Sheep from Non-Programming Goats

[06:34] <gaal> it would be, because the question mark is from the ASCII range, optimized for English glyphs no doubt.

[06:35] <gaal> does Japanese use a Western question mark?

[06:35] <miyagawa> gall: we use both

[06:35] <TimToady> yes, but it has double-wide punctuations when it makes sense

[06:35] <TreyHarris> the test is snippets of code that just show imperative variable assignment, and ask what the values assigned are.  people who are consistent in their guesses of how assignment might work (whether they get the answers right or not) are much more likely to learn to program than people who are inconsistent or who refuse to answer

[06:35] <TimToady> "?" vs "？"

[06:36] <miyagawa> full-width question mark is U+FF1F btw

[06:36] <gaal> TreyHarris: I'd argue that indirection is an important major hurdle for beginners -> intermediate programmers

[06:36] <TreyHarris> miyagawa: what is traditional?  "ka" (sorry, I can't type hiragana in this window) followed by a circle?

[06:37] <gaal> like barre on guitar

[06:37] <TreyHarris> gaal: what do you mean by "indirection"?  abstraction?  references?

[06:37] <gaal> miyagawa, TimToady: thanks

[06:37] <miyagawa> TreyHarris: sorry I don't get your question ...

[06:37] <gaal> TreyHarris: pointers/references

[06:38] <TimToady> It sounds like the test is trying to determine whether you can run a model in your head.

[06:38] <gaal> lambdaheads would object to that :)

[06:38] <TreyHarris> miyagawa: before the question mark was imported, what if any mark was used to end questions?

[06:38] <TimToady> TreyHarris: the ka is often used in conversation with a rising intonation, so is often written with a ? anyway.

[06:38] <gaal> they'd say it's Von Neuman chauvinism to make that test

[06:38] <TimToady> And ka can men "or"ish things too.

[06:38] <TimToady> *mean

[06:39] <TimToady> or "some" as in "something".

[06:39] <TimToady> so the ? would not be entirely redundant.

[06:39] <miyagawa> TreyHarris: Ah, good question. Yeah, if the sentence itself composes the questional verb, the question mark is optional

[06:39] <miyagawa> i wasn't good for Japanese old literature in school and can't tell what's the traditional before the question mark was imported :/

[06:39] <TimToady> and in spoken Japanese the ka is often omitted when a rising tone on the final syllable can convey a question.

[06:40] <miyagawa> eight.

[06:40] <TimToady> You'll often hear: "nani?"

[06:40] <miyagawa> right.

[06:40] <TimToady> from the women, or "nanda?" from the men

[06:40] <gaal> TimToady: anyway, re: arabic and fixed-width: a lot of the characters are in fact reasonably close in width, if they are connectives. Alif for example is thin, but if it's connected on the right it's still reasonable to give it a cell width: ﺄ

[06:40] <TreyHarris> gaal: my first CS course was taught with Haskell.  I really think it made a big difference in my abilities (but permanently ruined my code's readability for complete novices who can't handle anything vaguely functional).  but i still "thought" imperatively and translated into Haskell

[06:41] <TimToady> some of the ligatures look to be at least triple width though...

[06:41] <TreyHarris> TimToady: my teachers were all women and didn't even attempt to teach male forms, so I say "nani" and get laughed at :-)

[06:41] <gaal> lim-alif is kinda wide, but can be squished in...

[06:42] <gaal> it's sin and final 'sad that are really cramped.

[06:42] <miyagawa> TrryHarris: Male using "nani" is nothing hillarious. it'd be okay

[06:43] *** iblechbot joined
[06:43] <TimToady> ﷆ

[06:43] <TimToady> now, you probably better use "kana..." rather than "kashira..."

[06:43] <TimToady> and don't say "atashi" instead of "watashi"...

[06:44] <miyagawa> right. "kana" can be used by both male/female but "kashira" implies female

[06:44] <TreyHarris> what about "o-<noun>"?  that's the one that I really don't get when I'm supposed to use.

[06:44] <TimToady> and don't use the "wa" particle (not to be confused with the "ha" particle that is pronounced "wa")

[06:45] <TimToady> depends on how respectful you're wanting to be.

[06:45] * gaal goes bike shopping &

[06:45] <TimToady> women are just in general expected to be more respectful by and large

[06:45] <TimToady> many of the o-nouns you can't really be understood without the o in any case

[06:46] <TimToady> it's sorta become part of the noun.

[06:46] <TimToady> but the o-verb suru kinds of things are more productive, I think.

[06:46] <TreyHarris> TimToady: ah, that's the crucial bit i was missing.  i was trying to form a hypothesis by exclusion, and didn't realize the particle was attaching at the lexical level

[06:49] <TimToady> it varies, of course, but if you just say "cha" they might just wonder if you said "ja", whereas "ocha" is much less ambiguous to the ear.

[06:50] <TimToady> it really does tend to be driven a lot by what will seem ambiguous--particle omission works the same way.

[06:50] <TreyHarris> right

[06:51] <TimToady> and unfortunately there's no way to know what'll be ambiguous without knowing the majority of the language.

[06:51] <TimToady> I don't know how many times I've struggle to parse a bit of writing, and finally figured out that it was a proper noun.

[06:51] <miyagawa> some historical nouns have "omi" as a prefix, which is a doubled version of "o"

[06:52] <TimToady> interesting.

[06:52] <TreyHarris> ?eval sub foo (Int $x) { say $x }; foo("hello")

[06:52] *** evalbot_11606 is now known as evalbot_11609

[06:52] <evalbot_11609> OUTPUT[hello ] Bool::True

[06:52] <TreyHarris> is that always supposed ot work, or is that a TBD with pugs?

[06:52] <miyagawa> "omiotsuke" is a tripple "o"-ed version of "tsuke" == picke

[06:52] <miyagawa> pickle

[06:53] <TimToady> that's a TBD, I'm sure.

[06:54] <TimToady> I only know "tsukemono"...

[06:55] <TimToady> but if I ever wish to be very respectful to a pickle... :)

[06:55] <TreyHarris> ok--so there's no catch-all "you tried to call a sub, and I don't have a matching one, but I do have one by that name, so I'll just use it" DWIM

[06:56] <lumi> Isn't this for being respectful while mentioning a pickle?

[06:56] <TimToady> I could argue that Int is just a role that is required of $x, and that say is not required to access $x via the Int role, I suppose...

[06:56] <TimToady> but it seems a stretch.

[06:57] <TimToady> lumi: hai, joudan desu...

[07:00] <TimToady> miyagawa-san: is omi spelled 御神?

[07:01] <miyagawa> TimToady: it comes with triple U+5FA1's: http://gogen-allguide.com/o/omiotsuke.html

[07:01] <lambdabot> Title: 􏿽x8C􏿽xE4􏿽x8C􏿽xE4􏿽x8C􏿽xE4􏿽x95t􏿽x82􏿽xAF􏿽x81i􏿽x82􏿽xA8􏿽x82݂􏿽xA8􏿽x82􏿽xAF􏿽x81j - 􏿽x8Cꌹ􏿽x97R􏿽x97􏿽x88􏿽x8E􏿽xAB􏿽x93T

[07:02] <miyagawa> oh, and I was wrong. omiotsuke stands for miso-soup, not pickle (tsukemono).

[07:06] <TimToady> sugoi.

[07:06] <TimToady> I think I'll have to bookmark that site...

[07:06] <miyagawa> :)

[07:12] *** Aankhen`` joined
[07:18] *** TimToady_ joined
[07:46] *** hugues23 joined
[08:02] *** buetow joined
[08:08] *** kolibrie joined
[08:09] *** drrho joined
[08:20] *** justatheory joined
[08:25] *** nothingmuch joined
[09:04] *** Revision17 joined
[09:29] *** szbalint joined
[09:33] *** bsb left
[09:44] *** ruoso joined
[09:54] *** avar joined
[09:56] *** froh-doh joined
[10:04] *** justatheory joined
[10:08] *** justatheory joined
[10:09] *** elmex joined
[10:17] <gaal> audreyt: ping

[10:18] <audreyt> pong

[10:21] <gaal> hey, stylistic question. I've always been a little unhappy with the deep patmatching in emitNode

[10:21] <gaal> what do you say about changing

[10:21] <gaal> emitNode _ e n@(MkYamlNode{nodeElem = YamlStr str}) =  ...

[10:21] <gaal> to

[10:21] <gaal> emitNode _ e n | YamlStr str <- nodeElem (MkYamlNode n) = ...

[10:21] <audreyt> that works fine

[10:21] <gaal> I don't know if it's better :)

[10:21] <audreyt> it is

[10:21] <audreyt> though

[10:22] <audreyt> YamlStr str <- nodeElem n

[10:22] <audreyt> suffices

[10:22] * audreyt is still playing this commit/revert/commit game with allison on parrot-porters

[10:22] <gaal> also, we could follow the new naming conventions and get even shorter identifiers :) but that'd break compatibility and we're a Packaged Library now :)

[10:23] <audreyt> nah. please break compatibility.

[10:23] <audreyt> before cabal-install gets deployed, Packaged Libraries means very little

[10:23] <gaal> whoo, you're right about not needing the record tag there! yay

[10:24] <gaal> s/tag/constructor/

[10:24] * audreyt should sleep, too

[10:24] <audreyt> *wave*

[10:24] *** ludan joined
[10:25] <xerox> Seeya!

[10:25] <gaal> night :)

[10:27] <gaal> clkao: svk sucks because it doesn't have a "svk ci --ephemeral" option to help audreyt in commit-revert games :)

[10:27] <audreyt> svk ci -P -

[10:27] <audreyt> is that :)

[10:27] <gaal> ah, obviously I should revert my last statement :)

[10:28] <gaal> er, no, that's just spelled "diff", no? :)

[10:29] <gaal> diff with the option to interactively select files to include.

[10:31] <webmind> s/is/ie/

[10:44] <nothingmuch> moose

[11:12] *** wesle1 joined
[11:17] *** iblechbot joined
[11:20] <gaal> nothingmuch: moose!

[11:28] *** nothingmuch joined
[11:33] <gaal> audreyt: one place our convention comes out a little clunky is in variants that have a sort of catch-all case. So data ValUndef = UndefUnit | ..., or, in the present case, data YamlAnchor = AnchorUnit | ... (used to be MkYamlAnchor, I'm thinking "unit" is misleading here)

[11:33] <gaal> maybe AnchorSimple

[11:34] <gaal> er, actually that should be UUnit and ASimple

[11:37] *** wesleyyaya joined
[11:40] <gaal> maybe in that case UUndef and AAnchor look less ridiculous :)

[11:57] *** wesleyyaya is now known as wesle1

[12:12] <svnbot6> r11610 | gaal++ | * util/claim_drift.pl: claim files more aggressively (works better for

[12:12] <svnbot6> r11610 | gaal++ |   first claim)

[12:26] *** frederico joined
[12:56] *** amnesiac_ joined
[12:56] *** amnesiac_ is now known as amnesiac

[12:56] *** Termy joined
[12:59] *** bpphillips joined
[13:00] *** vel joined
[13:03] *** tifo joined
[13:05] *** tup joined
[13:15] *** Qiang joined
[13:20] <gaal> fglock: is it ok to svn rm perl5/Pugs-Compiler-Rule/Makefile.old ?

[13:23] *** FurnaceBoy joined
[13:25] *** fglock joined
[13:28] *** weinig|zzz is now known as weinig

[13:30] *** jkanter joined
[13:40] <svnbot6> r11611 | fglock++ | pX/fglock/PCR - '$match->perl'

[13:44] *** buubot joined
[13:50] *** vel joined
[13:58] <svnbot6> r11612 | fglock++ | pX/fglock/PCR - some tests pass

[14:01] *** justatheory joined
[14:05] *** justatheory joined
[14:08] *** justatheory joined
[14:11] *** chris2 joined
[14:12] *** orafu joined
[14:13] *** christopher joined
[14:16] *** Jedai joined
[14:16] *** justatheory joined
[14:18] *** justatheory joined
[14:19] <svnbot6> r11614 | gaal++ | * HsSyck:

[14:19] <svnbot6> r11614 | gaal++ | - use Pugs naming convention and other misc. cleanups

[14:19] <svnbot6> r11614 | gaal++ | - this change breaks the API (only by name), so bump version to 0.2.

[14:19] <svnbot6> r11614 | gaal++ | * Pugs:

[14:19] <svnbot6> r11614 | gaal++ | - chase API changes and re-DrIFT.

[14:19] <svnbot6> r11614 | gaal++ | You may need to 'ghc-pkg unregister pugs-HsSyck' or even

[14:19] <svnbot6> r11614 | gaal++ | 'make clean' after this update.

[14:23] *** justatheory joined
[14:24] *** justatheory joined
[14:25] *** justatheory joined
[14:26] *** cjeris joined
[14:37] *** justatheory joined
[14:39] *** justatheory joined
[14:41] *** iblechbot joined
[14:42] *** justatheory joined
[14:53] *** justatheory joined
[14:55] <svnbot6> r11615 | fglock++ | pX/fglock/PCR - 03-match.t passes 38/46

[14:59] *** esammer_ joined
[15:00] *** weinig is now known as weinig|work

[15:16] <svnbot6> r11616 | fglock++ | pX/fglock/PCR - refactored non-anchored match in Regex

[15:24] *** weinig|work is now known as weinig

[15:35] *** putter joined
[15:41] *** amnesiac joined
[15:44] *** weinig joined
[15:44] *** lambdabot joined
[15:53] *** frederico joined
[16:28] *** mj41_ joined
[16:29] *** ruoso joined
[16:32] <svnbot6> r11618 | fglock++ | pX/fglock/PCR - 03-match.t all tests pass, including TODOs

[16:36] *** Aankh|Clone joined
[16:45] <ruoso> fglock, hi...

[16:45] <ruoso> fglock, did the Makefile work on Windows?

[16:46] <ruoso> I didn't have how to test it

[16:46] *** weinig is now known as weinig|bbl

[16:46] <fglock> ruoso: I didn't test - I'm currently working in PCR TODOs

[16:47] <fglock> I'll merge later, then I can fix any Makefile problems too

[16:49] <ruoso> ok...

[16:49] <ruoso> you can blame me for any problem  :)

[16:50] <fglock> ok :)

[16:58] *** chris2 joined
[17:00] *** buetow joined
[17:07] *** hcarty joined
[17:32] *** Aankh|Clone is now known as Aankhen``

[17:37] *** jkanter joined
[17:44] *** hcarty left
[17:53] *** buetow joined
[17:53] *** lollan joined
[17:57] *** orafu joined
[17:59] <svnbot6> r11621 | fglock++ | pX/fglock/PCR - docs update; passes 199/228

[18:02] *** vel joined
[18:23] *** scsibug_ joined
[19:07] *** larsen joined
[19:09] *** bpphillips left
[19:18] *** DaGo joined
[19:42] *** pochi joined
[20:01] *** rodi joined
[20:01] *** rodi is now known as baaaaazzz

[20:02] *** baaaaazzz is now known as rodi

[20:21] *** [particle] joined
[20:27] *** justatheory joined
[20:36] <svnbot6> r11627 | daxim++ | check if parrot is in PATH

[20:42] *** hcart1 joined
[20:50] *** fglock left
[21:06] *** SageLT joined
[21:09] *** SubStack joined
[21:33] *** SubStack joined
[21:41] *** weinig|bbl is now known as weinig

[22:07] <svnbot6> r11629 | Sage++ | More regex support. Almost finished internal regex translations.

[22:21] *** qubar2000 joined
[22:27] *** qubar2000 is now known as Arador

[22:58] *** cjeris left
[23:15] *** bsb joined
[23:36] *** furrybeagle joined
[23:47] <pasteling0> "Dr_Pi" at 72.136.69.198 pasted "Build Problems in Mac OS 10.3.9 and Fink. (It worked before)" (8 lines, 702B) at http://sial.org/pbot/18486

[23:50] <daxim_> install IPC::Cmd

[23:59] *** mauke_ joined
