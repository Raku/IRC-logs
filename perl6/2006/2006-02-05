[00:12] *** Qiang joined
[00:28] *** justatheory joined
[00:34] *** stevan_ joined
[00:44] *** justatheory joined
[00:51] *** scook0 joined
[00:59] *** macli left
[01:03] *** joepurl joined
[01:12] *** lisppaste3 joined
[01:31] *** frederico joined
[01:37] *** pmccann joined
[01:57] *** Alex24NJ joined
[02:42] *** stevan joined
[02:49] *** vel joined
[03:01] *** drbean joined
[03:03] *** justatheory joined
[03:41] *** vel joined
[04:12] *** Debolaz joined
[04:12] *** drbean joined
[04:57] *** _SamB_ joined
[04:57] *** Supaplex joined
[04:57] <Supaplex> hey folks =)

[04:59] *** _SamB_ is now known as SamB

[05:03] *** KingDiamond joined
[05:29] *** KingDiamond joined
[05:48] <gaal> are we going to have a printf == print sprintf builtin?

[05:48] <svnbot6> r8954 | gaal++ | PPT printf.p6 - implementation

[06:08] *** weinig joined
[06:10] *** Cryptic_K joined
[06:34] *** Khisanth joined
[06:40] *** KingDiamond joined
[06:40] *** justatheory joined
[07:12] *** azuroth joined
[07:30] *** drbean joined
[07:43] *** Aankhen`` joined
[08:03] *** nothingmuch joined
[08:12] *** Alex24NJ joined
[08:14] *** KingDiamond joined
[08:25] <nothingmuch> help

[08:25] <nothingmuch> i have a writer's block

[08:26] <nothingmuch> http://www.osdc.org.il/talk.html?id=7

[08:26] *** kanru joined
[08:37] *** iblechbot joined
[09:13] *** spo0nman2 joined
[09:30] *** Aankh|Clone joined
[09:36] *** nnunley joined
[09:40] *** larsen joined
[09:48] *** kane_ joined
[10:02] *** spo0nman2 is now known as grepthis

[10:08] *** chris2 joined
[10:20] *** KingDiamond joined
[10:26] *** Southen joined
[10:48] *** elmex joined
[10:48] *** nothingmuch joined
[10:55] <azuroth> ?eval $a = [1,2,3]; $a .= [1]; say $a

[10:55] *** evalbot_8949 is now known as evalbot_8954

[10:55] <evalbot_8954> Error:  unexpected "." expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[10:56] <azuroth> ?eval $a = "a" say $a.upper

[10:56] <evalbot_8954> Error:  unexpected "s" expecting operator, ">>=><<", "\187=>\171", "=>", "::=", "**=", "xx=", "||=", "&&=", "//=", "^^=", "+&=", "+|=", "+^=", "~&=", "~|=", "~^=", "?|=", "?^=", ":=", "~=", "+=", "-=", "*=", "/=", "%=", "x=", "Y=", "\165=", "|=", "^=", "&=", "=", postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[10:57] <azuroth> whoops :-)

[10:57] <azuroth> ?eval $a = "a"; say $a.upper 

[10:57] <evalbot_8954> Error: Undeclared variable: "$a" 

[10:57] <azuroth> ?eval my $a = "a"; say $a.upper 

[10:57] <evalbot_8954> Error: No such method in class Str: "&upper" 

[10:57] <azuroth> ?eval my $a = "a"; say $a.toUpper 

[10:57] <evalbot_8954> Error: No such method in class Str: "&toUpper" 

[10:59] <azuroth> ?eval my $a = "a"; say $a.toupper 

[10:59] <evalbot_8954> Error: No such method in class Str: "&toupper" 

[10:59] <azuroth> ?eval my $a = "ab"; say $a.chomp

[10:59] <evalbot_8954> OUTPUT[ab ] bool::true 

[11:00] <azuroth> ?eval my $a = "ab"; say $a.chop

[11:00] <evalbot_8954> OUTPUT[a ] bool::true 

[11:00] <azuroth> ?eval my $a = "ab"; $a .= chop; say $a

[11:01] <evalbot_8954> OUTPUT[a ] bool::true 

[11:01] <azuroth> ?eval my $a = "ab"; $a .= [0]; say $a

[11:01] <evalbot_8954> Error:  unexpected "." expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[11:01] <azuroth> ?eval my $a = "ab"; $a .= ([]) 0; say $a

[11:01] <evalbot_8954> Error:  unexpected "." expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[11:03] <azuroth> ?eval my $a = "ab"; $a .= substr 1; say $a

[11:03] <evalbot_8954> Error:  unexpected "1" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[11:03] <azuroth> I should be using pugs, shouldn't I?

[11:07] <xinming> azuroth: You are not using haskell definitely. :-)

[11:07] <xinming> my $a = "ABCDEFG"; $a.lc.say;

[11:07] <xinming> ?eval my $a = "ABCDEFG"; $a.lc.say;

[11:07] <azuroth> aha

[11:07] <evalbot_8954> OUTPUT[abcdefg ] bool::true 

[11:08] <xinming> ?eval $a = "abcdefg"; $a.uc;

[11:08] <xinming> ;-)

[11:08] <evalbot_8954> Error: Undeclared variable: "$a" 

[11:08] <azuroth> [] is a method though, so maybe  .= [1] should work?

[11:08] <xinming> ?eval my$a = "abcdefg"; $a.uc;

[11:08] <xinming> ?eval my $a = "abcdefg"; $a.uc;

[11:08] <evalbot_8954> "ABCDEFG" 

[11:08] <azuroth> I'm not sure whether it's in the synopses or not though, to be honest

[11:08] <evalbot_8954> "ABCDEFG" 

[11:09] <azuroth> is there a tc? title case? ;-p

[11:11] <xinming> ?eval sub tc ($s is copy) { $s ~~ s/./{uc $/}/; $s }; (tc "abcdef").say

[11:11] <xinming> :-)

[11:11] <xinming> :-P

[11:11] <evalbot_8954> OUTPUT[Abcdef ] bool::true 

[11:12] *** nothingmuch joined
[11:13] <azuroth> sneaky :-p

[11:17] <theorbtwo> Careful: In some languages, titlecase and uppercase aren't the same thing.

[11:17] <theorbtwo> (I don't know /what/ languages...)

[11:17] <nothingmuch> seen audreyt?

[11:17] <jabbot> nothingmuch: audreyt was seen 1 days 5 hours 53 minutes 30 seconds ago

[11:18] <xinming> theorbtwo: hmm, are you free? I've got a problem in debugging, I don't know if it is a bug in pugs, But I really can't catch it.

[11:18] <azuroth> hmm. I guess that makes sense, theorb

[11:19] *** iblechbot joined
[11:25] *** KingDiamond joined
[11:30] *** feng joined
[11:43] *** bsb joined
[12:02] *** DaGo joined
[12:18] <nothingmuch> i have a yucky problem with C++ here

[12:18] <azuroth> oh?

[12:18] <nothingmuch> i'd like to see how well it could be resolved in Perl

[12:18] <nothingmuch> (6)

[12:18] <nothingmuch> i have an object

[12:19] <nothingmuch> and I need to add an interface to it

[12:19] <nothingmuch> send/receive (serializability to a filehandle)

[12:19] <nothingmuch> first of all i see that send/receive themselves will be much simpler due to introspection

[12:20] <nothingmuch> i could just iterate the attributes

[12:20] <nothingmuch> second, decorating the class with this interface automaticallly

[12:20] <nothingmuch> third, applying the send/receive interface to all the classes within my class's members

[12:20] <nothingmuch> (automatically)

[12:21] <nothingmuch> lastly, getting compile time errors if a member in my class is not sendable/receivable, because it's a filehandle or something like that

[12:21] <nothingmuch> as I see it this is duck typing

[12:21] <nothingmuch> err

[12:21] <nothingmuch> a problem for duck typing

[12:21] <nothingmuch> if I just treat my class as if it does that

[12:21] *** bazman joined
[12:21] <nothingmuch> then it tries to apply send/receive to that class

[12:22] <nothingmuch> food for thought

[12:22] <nothingmuch> maybe I should p6l

[12:23] *** efunneko joined
[12:25] <azuroth> maybe something like... for each member, ~~ Serializable { $obj.send($fh); } ~~ Int { ... } ~~ String { ... } but no

[12:26] <azuroth> what do you mean by automatically decorating the class?

[12:26] <nothingmuch> well

[12:26] <nothingmuch> i declare the serializable interface

[12:26] <nothingmuch> in one place

[12:26] <nothingmuch> and if i demand this interface in another place

[12:26] <nothingmuch> from any class

[12:26] <nothingmuch> then that class automatically gets it

[12:26] <nothingmuch> think of it as a universal role

[12:28] <azuroth> what... $a = Monkey.new(); $a.serialize($fh) # $a now does Serializable ?

[12:28] <scook0> nothingmuch: sounds like deep magic

[12:28] <scook0> were you thinking of this taking place at compile-time, or run-time?

[12:28] <nothingmuch> azuroth: err, yes =)

[12:28] <nothingmuch> except perhbaps i need to declare my Serializable $a = Monkey.new;

[12:30] *** bazman left
[12:31] <nothingmuch> stevan: ping

[12:38] *** r0nny joined
[12:40] <nothingmuch> sent

[12:40] <azuroth> to p6l?

[12:41] <nothingmuch> yes

[12:48] *** bazman joined
[12:54] <scook0> nothingmuch: incidentally, I'm pretty sure "inference" only has one 'r'

[12:54] <nothingmuch> scook0: i always do that =)

[12:54] <nothingmuch> sorry

[12:56] <scook0> I remember intending to correct you on the same thing quite a while ago, and always forgetting to actually do so :)

[13:00] <nothingmuch> )

[13:00] <nothingmuch> =)

[13:46] *** kane_ joined
[13:55] <nothingmuch> http://www.oooms.nl/

[13:57] *** feng123 joined
[14:03] *** r0nny joined
[14:10] *** funkyville joined
[14:24] *** funkyville left
[15:07] *** stevan_ joined
[15:19] <Juerd> Hm

[15:19] <Juerd> Once upon a time, feather built pugs automatically, and typing "pugs" would start a very recent revision

[15:20] <Juerd> Now, it uses a debian package, which updates at release interval.

[15:20] <Juerd> And the automatic building is broken even.

[15:20] <Juerd> What have I missed?

[15:20] * Juerd prefers the old situation (pre-october)

[15:21] <Juerd> I now finally understand some of the complaints.

[15:21] <Juerd> (People don't all want to build their own pugses and parrots, many people just want to test drive Perl 6)

[15:22] <Juerd> I guess I'll do the automatic stuff myself again.

[15:22] <gaal> sneaky little pugses and parrotses

[15:23] <Juerd> Hell, the script that did the automatic builds no longer even exists, it seems.

[15:24] <gaal> it doesn't? look in ~eric256 ?

[15:25] <Juerd> All there's left is automatic smoking.

[15:26] <Juerd> Which wasn't the point of the automatic builds. It's certainly nice to have, but accessible pugs was the primary reason to have automatic building.

[15:30] *** justatheory joined
[15:42] <gaal> for me autosmokes are an immense benefit

[15:43] <gaal> because I don't have to remember to do one half of the regression test :-)

[15:43] <gaal> how does it do autosmoking if it doesn't do autobuilding? :)

[15:44] <gaal> you can probably prepend eric's directory to your path and get a recent pugs

[15:45] <Juerd> No, it's not about me.

[15:45] <Juerd> I don't care if I have to build pugs myself.

[15:45] <Juerd> It's for the users of feather. It's a service I once provided, and then handed over to eric256.

[15:45] <Juerd> I never installed the debian package.

[15:45] <Juerd> So things happened without me being aware, and as you may know, I don't like monitoring what other people do.

[15:45] <Juerd> So I'm just going to do it myself again

[15:46] <Juerd> People should be able to login and run pugs, and test some things to see if they're supported yet.

[15:47] <Juerd> The most recent pugs I can find in ~eric256/auto is from December

[15:48] <Juerd> eric256 hasn't logged in for a while

[15:49] <Juerd> Last login Nov 15

[15:50] <gaal> i thought i saw recent linux smokes? who submits those? 

[15:50] <Juerd> From the looks of it, eric's autosmoke has been broken since December

[15:50] <Juerd> An svk locking issue

[15:50] <gaal> I may have been wrong. In any case, I encourage you to also put smokes into the cycle, if you take back autobuild.

[15:51] *** nothingmuch joined
[15:51] <Juerd> I'll probably do that. I have been under the impression that eric256 did these things.

[15:51] <Juerd> gaal: Whereto are these smokes submitted?

[15:51] * gaal hopes eric has not been eaten by a grue

[15:51] <gaal> Juerd: smoke.pugscode.org

[15:51] *** rantanplan_ joined
[15:52] <gaal> you can have that automatically after 'make smoke' by adding one line to config.yml

[15:52] <Juerd> Nice

[15:53] <gaal> very.

[15:53] <Juerd> http://feather.perl6.nl/~eric256/t_index/ is updated often, but as far as I can tell, it's been operating on the same revision for months :)

[15:54] <gaal> :)

[15:55] *** nothingmuch_ joined
[15:56] <nothingmuch_> fucking guy!

[15:56] <nothingmuch_> seen audreyt?

[15:56] <jabbot> nothingmuch_: audreyt was seen 1 days 10 hours 31 minutes 41 seconds ago

[15:56] * nothingmuch_ hates the cable carrier

[15:56] <nothingmuch_> HATE HAT HATE

[15:57] *** nothingmuch_ is now known as nothingmuch

[16:00] <Juerd> For a moment I thought "hey, that eric256 guy IS logged in, and he's even watching top..."

[16:00] <Juerd> But then I realised "Oh, that's me, still working under his uid"

[16:01] <gaal> $$.head.bonk

[16:02] * gaal goes home &

[16:04] *** rantanplan_ joined
[16:05] *** elmex joined
[16:22] <Juerd> It appears that "make smoke" is part of debian/rules binary.

[16:22] <Juerd> Weird, but useful in this case.

[16:22] <Juerd> It does take quite a while.

[16:33] *** Qiang joined
[16:43] <gaal> still less than GHC :)

[16:43] <gaal> Juerd, is feather SMP by any chance?

[16:47] *** vel joined
[16:51] *** BakedB joined
[17:05] *** marmic joined
[17:24] *** wilx joined
[17:27] *** stevan joined
[17:30] *** leo_____ joined
[17:30] *** justatheory joined
[17:31] *** BakedB joined
[17:54] *** Alex24NJ joined
[18:33] *** revdiabl1 is now known as revdiablo

[18:34] *** Alex24NJ left
[18:36] *** nothingmuch joined
[19:04] *** feng joined
[19:14] *** elmex joined
[19:20] *** Bulgarian joined
[19:33] *** Amnesiac joined
[19:34] <Juerd> gaal: No

[19:34] <Juerd> gaal: Though if you happen to have hardware to donate... :)

[19:49] <Juerd> windows--  # learn to multitask

[19:53] <Juerd> I'll try autobuilding again later.

[19:53] <Juerd> Things don't currently debian-compile out of the box.

[19:53] <Juerd> Next attempt will be debless, to see if that will work.

[19:57] <Juerd> Thank you. An email will be sent to you with the URL for the requested download.

[19:57] <Juerd> No, fuckers, I want it NOW.

[19:58] <Juerd> Ah, there it is.

[19:58] <Juerd> Another minute wasted.

[19:58] <Juerd> Grr.

[19:58] <Juerd> Just in case you also want it, don't bother with the form, http://bits.xensource.com/ISO/latest/xen-3.0-demo-livecd-3.0.iso

[19:58] <obra> can Xen run unmodded windows these days?

[19:59] <szbalint> Heh. It blows the mind that someone wants an email address for a download.

[19:59] <obra> szbalint: why? It's pretty standard in the "and we want to talk to you later, and maybe sell you stuff" sense.

[19:59] <obra> (Assuming it's optional)

[20:00] <szbalint> Yeah, the emphasis is on optional. :)

[20:00] <obra> Sure. non-optional makes me squick. But I expect RT will have such an (optional) thing within a couple months if my sales person has something to say about it

[20:00] <Juerd> obra: Only with special inter CPUs supporting some kind of virtualization technology.

[20:01] <obra> ah :/

[20:01] <Juerd> obra: It wasn't optional in this case.

[20:01] <obra> eit

[20:01] <Juerd> obra: To get this GPL'ed software, I had to give my address.

[20:01] <Juerd> That's highly unusual, and deeply disturbs me.

[20:01] <obra> There's nothing preventing them from doing that.

[20:01] <Juerd> That is entirely correct.

[20:01] <obra> I've seen it before. But yes, now you're free to redist it

[20:02] <Juerd> However, I do happen to hate those forms.

[20:02] <Juerd> And I don't wish to associate such negative feelings with open source software, that generally is distributed in a user friendlier way.

[20:02] *** leo_____ is now known as LeTo

[20:04] <Juerd> obra: Re optional fields: I generally do leave my address

[20:05] <Juerd> But: I want to continue to download directly, and not have to wait for mail.

[20:05] <Juerd> I expected the same here :|

[20:25] <gaal> so, has anyone done some design work on embedding haskell in p6? we have eval :lang<haskell>, but that looks like an interpreter, and you can't seem to import modules from there.

[20:26] <gaal> I see we aren't squeezing everything we could out of System.Eval.eval_

[20:46] *** r0nny joined
[20:51] *** wilx joined
[21:06] *** G2 joined
[21:10] *** justatheory joined
[21:20] *** larsen joined
[21:46] *** nothingmuch joined
[21:46] *** justatheory joined
[22:20] *** Cryptic_K joined
[22:45] *** dduncan joined
[23:30] *** bsb left
[23:34] <wolverian> hm, STATUS needs updating

