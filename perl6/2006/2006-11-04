[00:19] <svnbot6> r14612 | Darren_Duncan++ | removed my in-progress docs/talks/rdbms_tutorial_draft.txt ... something analagous may or may not be added later

[00:40] *** Steve_PH_Pythuby joined
[00:53] *** eggzeck[laptop] joined
[00:54] *** eggzeck[laptop] is now known as eggzecl

[00:55] *** eggzecl is now known as eggzeck

[00:55] *** qmole joined
[01:07] *** digitalice joined
[01:07] <digitalice> hey

[01:07] <digitalice> !listo

[01:07] <digitalice> > cos 9

[01:07] <lambdabot>  -0.9111302618846769

[01:07] <digitalice> :D

[01:07] <digitalice> > www.google.com

[01:08] <lambdabot>  Not in scope: `com'

[01:08] <digitalice> > @google www.google.com

[01:08] <lambdabot>  Parse error

[01:08] <digitalice> > @google

[01:08] <lambdabot>  Parse error

[01:08] <digitalice> @google

[01:08] <lambdabot> Empty search.

[01:08] <digitalice> @google mvd shuffle

[01:08] <lambdabot> http://www.mvdshuffle.com/

[01:08] <lambdabot> Title: Cargando...

[01:08] <digitalice> @google foro mvd shuffle

[01:08] <lambdabot> http://www.mvdshuffle.com/

[01:08] <lambdabot> Title: Cargando...

[01:08] <digitalice> @google foro.mvd shuffle

[01:08] <lambdabot> http://dodeca.org.uy/foro/viewtopic.php?pid=1580

[01:08] <lambdabot> Title: Dodec√° // Foro / MVD Shuffle!

[01:08] <digitalice> @google foro.mvdshuffle.com

[01:09] <lambdabot> http://www.teatromagico.net/phpbb2/viewtopic.php?t=8102

[01:09] *** digitalice left
[01:21] *** dmq joined
[01:25] *** jferrero joined
[01:35] *** mjk joined
[01:46] *** lichtkind joined
[01:47] <lichtkind> when filling an capture it is possible to do my |car_cap = \("Model T", doors => 2);

[01:49] <audreyt> there's no | sigil anymore

[01:49] <audreyt> it existed for exactly one day and one revision

[01:49] <Limbic_Region> for some definitions of "day"

[01:50] <TreyHarris> urgh.... i'm so confused when i try to do Perl 5 now.... sometimes I confuse it with Perl 6, sometimes I confuse Perl 6 with Perl 5, and sometimes I just go off in some wild direction that is neither...

[01:50] <TreyHarris> in Perl 5, should "if (my $value = bar() and $value ne 'bad thing') { ... }" do what I expect?  i.e., go into the block iff both: a) bar() returned something true, and b) that same call to bar() did not return 'bad thing'?

[01:51] <lichtkind> audreyt but i read it still in http://svn.openfoundry.org/pugs/docs/Perl6/FAQ/Capture.pod

[01:51] <lambdabot> http://tinyurl.com/y5x48u

[01:52] <lichtkind> so now captures are just skalars?

[01:52] <audreyt> hm?

[01:52] <audreyt> the Capture.pod has no car_cap

[01:52] <audreyt> no |car_cap that is

[01:53] *** loumz joined
[01:53] <audreyt>   my $car_cap = \("Model T", doors => 2);

[01:53] <audreyt>   my $car = make_car(|$car_cap);

[01:53] <lichtkind> yes

[01:53] <audreyt> you can also say

[01:53] <audreyt> my $cap_cap := \(...)

[01:53] <lichtkind> and thatswhy it seemed to me that $car_cap is reference to capture

[01:54] <audreyt> but yeah, there's no special sigil anymore

[01:54] <audreyt> well, it's a Scalar containing a Capture object

[01:54] <audreyt> if you say

[01:54] <audreyt> my $c_c = \(...)

[01:54] <audreyt> hm, c_c is a cute face

[01:54] <TimToady> Trey_Harris: yes, it should do what you expect.

[01:54] <audreyt> to interpolate the capture into the arguments

[01:55] <audreyt> you need to |$c_c

[01:55] <audreyt> because otherwise it's passing in the Capture itself

[01:55] <audreyt> not interpolating its contents

[01:55] <TreyHarris> TimToady: thanks for the sanity check :)

[01:55] <TimToady> er, wait, no.

[01:55] <TimToady> P5 doesn't introduce the new variable that soon.

[01:55] <lichtkind> thanks audreyt makes sense so is this only meaning of | ?

[01:55] <TimToady> now you're confusing me...

[01:55] * TreyHarris snaps his fingers

[01:55] <TreyHarris> *that's* what I thought

[01:55] <TreyHarris> :)

[01:56] <TreyHarris> you see?

[01:56] <audreyt> with MP6 emitter looking good, tomorrow will be PCR-port-to-MiniPerl6, which will finish MP6 bootstrap

[01:56] <audreyt> and then if we have a emitter to js, then you can eval"" MP6 in your browser

[01:56] <TimToady> been in P6-land too long, and not long enough...

[01:56] <audreyt> if we have an emitter to C, then we have libp6re

[01:56] <audreyt> and so on and so forth.

[01:57] <audreyt> but p5 and hs will still be the first two emitters we'll work on.

[01:57] <audreyt> lichtkind: correct

[01:57] <lichtkind> audreyt thanks your very kind

[01:57] <TimToady> only meaning of unary | anyway

[01:58] <TimToady> infix | is of course junctional OR

[01:58] <audreyt> unless it's in type option, where it denotes a type union

[01:58] <audreyt> s/option/position/

[01:58] <TimToady> It's a junctional OR that gets coerced to a set.  :)

[01:59] <audreyt> well, it's really a different syntax there, much like its use in grammars

[01:59] <audreyt> to denote a choice

[01:59] <TimToady> yah

[02:01] <TimToady> so what's the js emitter gonna do with 'use v5'  :)

[02:01] <audreyt> we take out "use v5" already :)

[02:01] <audreyt> in the MP6 boot chain

[02:01] <TreyHarris> so it just gets run optimistically as if it were Perl 6 code? :)

[02:02] <audreyt> or maybe it assumes it's running inside Inline::SpiderMonkey...

[02:02] <audreyt> er JavaScript::SpiderMonkey

[02:02] <audreyt> rgs: how far away (by plane or car) is your currennt meatspace position from Nice, France?

[02:03] <audreyt> POPL'07 people (the SIGPLAN conference for lambdafolk language designers) just agreed to fly me there for opening keynote.

[02:03] <audreyt> January 2007

[02:04] <audreyt> rgs: so I wonder if we can have a couple days of minihackathon on unified perl runtime

[02:04] <lichtkind> audreyt and due the module of Perl6::Doc ....im now member of perldoc2.0 project, its all starting just and we sorting ideas and aim no will smash out a prototype app but i gladly will help adopt this system for perl6 if it will become standart

[02:04] <audreyt> "aim no will smash out"?

[02:05] <lichtkind> im mean now smash out hm a german term  im mean throw together

[02:05] <audreyt> but cool, we need a perl6doc viewer very much

[02:05] <audreyt> cool!

[02:05] <lichtkind> but hold on its more complicated :)

[02:06] <lichtkind> im about to write article for perl.com and the example code of this lession will be the building of a multi tab pod viewer

[02:07] <lichtkind> that can easily be extended for perl6 needs i think

[02:07] <audreyt> nice

[02:07] * audreyt nods happily

[02:07] *** kisu joined
[02:07] <lichtkind> the app for the perldoc2 project is more a tool for translators because perldoc2 is about to have centralized translated perldocs

[02:09] * audreyt ponders the curoius fact that there's both marsneedswomen.pm.org and women.pm

[02:09] <lichtkind> audreyt so throw me just some lines with what you think you need for features  to [email@hidden.address] or right here in channel so that i can copy the text in my dev dir as todo list

[02:11] <audreyt> sure. I'd like to have "perldoc -f keyword Some::Module"

[02:11] <audreyt> where keyword searches into sections and indices

[02:12] <lichtkind> yeah but would be command line tool better that gui app?

[02:12] <audreyt> I think it can invoke a gui app...

[02:13] <audreyt> I like gui apps that can be invoked by smart commandline options

[02:14] <lichtkind> yes but i think many like vi because they can work with it text based

[02:14] <audreyt> I have to admit my preferred gui interface is html

[02:14] <audreyt> but I'm biased :)

[02:14] <loumz> hello, small question about filetest operators... if I have sub w {} and I write - w("some-arg") with a space between "-" and "w" then it still executes the -w filetest

[02:14] <loumz> is this behavior correct?

[02:15] <audreyt> no that's utterly wrong. please write a test

[02:15] <TimToady> no

[02:15] <audreyt> in filetest.t or other places

[02:15] <audreyt> do you have a commit bit?

[02:15] <audreyt> if not, what's your email address? :)

[02:15] <loumz> no, I don't

[02:15] <loumz> william99 at myrealbox.com

[02:16] * eviltwin_b prefers command line for stuff like this:  a properly written command line app can be guified easily enough, plus I can run it in emacs  :)

[02:16] <lichtkind> so we make first command line version

[02:16] <pasteling> "loumz" at 125.164.185.231 pasted "filetest operators question" (17 lines, 476B) at http://sial.org/pbot/20869

[02:17] <loumz> there's some code that demonstrates it

[02:17] <audreyt> loumz: welcome aboard, please add yourself to AUTHORS :)

[02:17] <loumz> audreyt: thanks

[02:17] <lichtkind> audreyt what you mean with "perldoc -f keyword Some::Module" are there current modules in perl6?

[02:17] <audreyt> t/operators/filetest.t is a fine place for it, as is making a new file under t/syntax/parsing/

[02:18] <audreyt> lichtkind: sure, there's plenty of modules under ext/

[02:18] <audreyt> but I mean the -f keyword would be nice to work with modules not only perlfunc

[02:18] *** Khisanth joined
[02:18] <lichtkind> ok but i thougt that module ist firstly for the synopses

[02:18] <audreyt> synopses are modules too

[02:19] <lichtkind> ah :)

[02:19] <audreyt> Perl6::Spec::Operator

[02:20] <TreyHarris> i'm a module, you're a module, wouldn't you like to be a module too?

[02:21] <lichtkind> no

[02:21] <eviltwin_b> he's a module...

[02:21] <lichtkind> im special :)

[02:21] <eviltwin_b> so you're a pragma?

[02:22] <lichtkind> hihi no even stranger, stranger than fiction

[02:22] <lichtkind> ok just wanted show my goodwill need some sleep before down, keep up the good work @ all here

[02:23] <audreyt> goodwill is appreciated :)

[02:23] <audreyt> have fun hunting

[02:23] <audreyt> I mean sleeping

[02:24] <[particle]> audreyt: see parrot's shiny new src/pmc/capture.pmc

[02:24] <[particle]> (it's missing an invocant slot, but not for long)

[02:24] <audreyt> cool!

[02:25] <[particle]> soon we'll have subclasses for match, past, and maybe signature

[02:26] <lichtkind> gnight

[02:26] <audreyt> sure, that's how it's supposed to be used. nice!

[02:26] <[particle]> yes, indeed. this should speed up pge a bit, too :)

[02:27] <audreyt> will be nice to benchmark the capture-enabled pge with the native-code p6re thing fglock++ and I am working on :)

[02:27] <[particle]> then we need to convert the emitter from pir to c... that'll make it really fast

[02:28] <[particle]> yes, it will. hopefully soon i'll be implementing your miniperl6 grammar in pir

[02:28] <audreyt> implement in pir?

[02:28] <audreyt> I thought PGE already handles it?

[02:29] <[particle]> it doesn't handle everything there 'does', 'of'

[02:29] <audreyt> I mean, if you ignore the first paragraph

[02:29] <[particle]> 'where'

[02:29] <audreyt> http://svn.openfoundry.org/pugs/v6/v6-MiniPerl6/lib/MiniPerl6/Grammar.pm

[02:29] <lambdabot> http://tinyurl.com/y6j9yc

[02:29] <audreyt> should be totally PGE friendly

[02:29] <audreyt> so all you need is to write a MP6->PIR emitter

[02:29] <audreyt> and then you have MP6 working inside PGE as transformation language

[02:29] <audreyt> all bootstrapped for free.

[02:30] <audreyt> i.e. change the perl5 bits in  http://svn.openfoundry.org/pugs/v6/v6-MiniPerl6/lib/MiniPerl6/Emitter.pm to pir bits.

[02:30] <lambdabot> http://tinyurl.com/wrq2p

[02:30] <[particle]> hrmm

[02:31] <audreyt> the idea is the emitter is first run with pugs

[02:31] <audreyt> then you have entire MP6 chain emitted to PIR

[02:31] <audreyt> afterwards you save those .pir inside parrot treee

[02:31] <audreyt> and then you don't need pugs anymore, since you effectively have a MP6 language in native PIR

[02:32] <[particle]> right, but we can't bootstrap ourselves

[02:32] <audreyt> hm?

[02:32] <audreyt> you can

[02:32] <audreyt> after that you just use the MP6-in-PIR to run modified perl6 code

[02:32] <audreyt> it's not handwritte PIR

[02:32] <[particle]> ah, ok

[02:32] <audreyt> but why should you care? the master source is in perl6.

[02:32] <[particle]> so we use pugs once-and-once-only

[02:32] <audreyt> which I hope is still the goal for PGE :)

[02:32] <audreyt> yes.

[02:32] <[particle]> yes, it is the goal

[02:33] <[particle]> then we get shared spec, shared tests, and (mostly) shared implementation :)

[02:33] <[particle]> whee!

[02:33] <audreyt> the only bit not shared is the emitter

[02:33] <audreyt> but that's as it should be

[02:33] <[particle]> right, totally appropriate

[02:34] <[particle]> however, we may have an ast transformation before emitting

[02:34] <audreyt> if you look in Grammar.pm

[02:34] <audreyt> there's AST transformation right there

[02:34] <audreyt> written in MP6 :)

[02:34] <audreyt> which is a tree transformation language.

[02:34] <[particle]> right. we'll likely have to write one for perl6 ast to parrot ast

[02:34] <audreyt> that again is just the emitter.

[02:35] <audreyt> instead of emitting pir you emit past calls

[02:35] <[particle]> this is true.

[02:35] <audreyt> hopefully this can let us conveniently obsolete PGE, Parsec and PCR.

[02:35] <audreyt> which is #1 diverging part so far.

[02:36] <audreyt> the idea is the new p6re is written in MP6

[02:36] <audreyt> compiles rules to MP6

[02:37] <audreyt> which is emitted via whatever emitter to efficient native code that matches stuff.

[02:37] <audreyt> it's currently living in http://svn.openfoundry.org/pugs/perl5/Pugs-Compiler-Rule/lib/Pugs/Emitter/Rule/Perl6/Ratchet.pm

[02:37] <lambdabot> http://tinyurl.com/ydzvqn

[02:37] <audreyt> will be updated to MP6 and moved to v6/ space tomorrow.

[02:38] <[particle]> great, i look forward to it

[02:39] <audreyt> :)

[02:59] *** SubStack joined
[02:59] <pasteling> "loumz" at 125.164.185.231 pasted "proposed t/syntax/parsing/filetest.t, does this look right?" (19 lines, 361B) at http://sial.org/pbot/20870

[03:01] <TimToady> looks pretty good to me.

[03:02] <TimToady> go ahead and check it in.  we operator on the forgiveness-rather-than-permission principle around here.

[03:02] <loumz> TimToady: thanks for the review

[03:03] <TimToady> *operate

[03:03] <eviltwin_b> operator:<forgiveness> > operator:<permission>

[03:04] <loumz> all I have to do for the test to work in "make test" is create a new .t file right?

[03:05] <TimToady> I believe so

[03:05] <TimToady> might run util/add-svn-props.sh on it too

[03:08] <loumz> TimToady: OK, I guess I should read the Pugs/Doc/Hack.pod first

[03:09] <TimToady> that would probably be more than most of us have done. :)

[03:10] <TimToady> we just don't use the word "should" around here terribly often...

[03:14] <svnbot6> r14613 | loumz++ | Add my name to the AUTHORS file.

[03:14] <svnbot6> r14613 | loumz++ | Add filetest parsing tests for "- f(...)".

[03:15] <loumz> hopefully that will work :)

[03:25] *** seano joined
[03:51] <audreyt> didn't quite finish the MP6-bootstrap-katamari journal, so I posted something from earlier draft instead

[03:51] <audreyt> commitbit ACL transition is done, so we jut need a flag day or something. sleep, see you tomorrow :)

[03:54] *** diakopter left
[03:54] <audreyt> s/or something/to relocate master repo to svn.pugscode.org on feather/

[04:35] *** esstone joined
[04:53] <gnuvince> Good morning, afternoon and evening depending on your timezone

[05:33] *** bennymack joined
[05:45] *** toni_ joined
[06:15] *** BooK joined
[06:20] <wolverian> whoa - nice news about popl07. congratulations, audreyt :)

[06:34] <clkao> ,

[06:34] <clkao>  

[06:43] <nothingmuch> hola homies

[06:53] *** esstone joined
[06:54] *** chaoslawful joined
[06:59] <seano> um... word, g.

[07:00] <nothingmuch> you know what i'm sayin

[07:00] <seano> true dat.

[07:00] <seano> I mean, fo sheezy.

[07:00] <nothingmuch> maybe you'd like to participate

[07:00] <nothingmuch> http://avva.livejournal.com/1673636.html

[07:00] <lambdabot> Title: avva: geek rap contest (–∞–Ω–≥–ª.)

[07:02] <seano> verily, ma neezy

[07:17] *** eggzeck[laptop] joined
[07:39] *** codermattie joined
[07:47] *** codermattie left
[08:04] <rgs> audreyt: Paris <-> Nice is 6 or 7 h by train, 1 h by plane, lots by car.

[08:06] *** loumz joined
[08:16] *** gene9 joined
[08:22] *** kisu joined
[08:24] *** crem_ joined
[08:39] *** larsen_ joined
[08:41] *** gene9 joined
[08:46] *** iblechbot joined
[09:12] *** _fab joined
[09:12] *** Excedrin joined
[09:23] *** elmex joined
[09:23] *** theorbtwo joined
[09:25] *** marmic joined
[09:43] *** elmex joined
[09:51] *** spinclad joined
[10:06] *** loumz joined
[10:11] *** polettix joined
[10:13] *** Excedrin joined
[11:08] *** rodi joined
[11:11] *** TreyHarris joined
[11:12] *** the_dormant joined
[11:16] *** kanru joined
[11:35] *** kane-xs joined
[11:40] *** TreyHarris joined
[12:04] *** TSa joined
[12:04] *** TimToady joined
[12:06] *** Excedrin joined
[12:29] *** elmex joined
[12:30] *** nusgnaf joined
[12:31] *** Psyche^ joined
[12:47] *** Psyche^ is now known as Patterner

[12:55] *** the_dormant joined
[13:11] *** Excedrin joined
[13:21] *** Debolaz2 is now known as Debolaz

[13:23] *** anatolyv joined
[13:29] *** rodi joined
[13:33] *** mayweed joined
[13:35] *** the_dormant joined
[13:35] *** Excedrin_ joined
[13:44] *** fglock joined
[13:46] *** polettix joined
[13:49] <fglock> audreyt: PCR-in-Mp6 is under way - now writing a few tests

[13:50] <audreyt> fglock: where are you? and when is lightning talks

[13:54] <fglock> I'm at the Perl booth - don't know about the l-t yet

[13:57] *** turrepurre joined
[14:17] *** fglock joined
[14:29] <audreyt> fglock: coming to Perl booth in 15mins

[14:30] <clkao> zz

[14:31] <audreyt> greetings clkao. is there a way to make hiveminder and comitbit share auth?

[14:31] <audreyt> or do you think separate auth makes more sense?

[14:31] *** weinig joined
[14:32] <integral> a bitcard Jifty plugin would be handy...

[14:32] <fglock> audreyt: ok

[14:41] *** ruoso joined
[14:45] <fglock> ruoso: hi

[14:45] <ruoso> hi fglock

[14:45] * ruoso just sad for not being in CONISLI

[14:46] <fglock> CONISLI++

[14:46] <ruoso> how is it going?

[14:47] <fglock> the main talks are going pretty well, and we have a nice booth thanks to Segula :)

[14:47] <ruoso> :)

[14:49] <ruoso> are there video/audio streamings?

[14:51] <the_dormant> Hi, is there any tutorial to Perl6 rules ?

[14:53] <fglock> ruoso: no, but the video will be available later

[14:54] <ruoso> fglock, at least :)

[15:09] *** polettix joined
[15:11] *** Limbic_Region joined
[15:17] *** nperez joined
[15:26] *** jferrero joined
[15:32] *** diakopter joined
[15:39] *** TSa joined
[16:18] *** miyagawa_ joined
[16:19] *** the_dorm1nt joined
[16:48] *** eggzeck joined
[16:52] <audreyt> visiolization: http://pugs.blogs.com/photos/visiolization/mp6bootstrap.png

[16:52] <lambdabot> http://tinyurl.com/yzjxzo

[16:53] <audreyt> bold-black-lined boxes are the components written in mp6 that we produce in this hackathon

[16:54] <[particle]> you produced the regex source too, no?

[16:54] <audreyt> hm?

[16:54] <audreyt> it goes like this

[16:55] <audreyt> MP6 source containing both sub{...} and token{...} gets parsed

[16:55] <audreyt> for the token{...} part the content goes into a subcompilation cycle

[16:55] <audreyt> and then spliced back so it becomes just another sub{...}

[16:55] <audreyt> so one MP6 source produces one MP6 AST

[16:55] <TimToady> I think the regex part was mostly already there due to :ratchet emitter

[16:55] <audreyt> which is then emitted

[16:56] <audreyt> actually the only vapourware part now is emitter

[16:56] <audreyt> and emitter-specific prelude

[16:56] <audreyt> which we're working on now :)

[16:56] <audreyt> note the vapour cloud around "backends"

[16:56] <TimToady> I was wondering last night whether we need to partition out t/ into MP6 and non-MP6

[16:56] <audreyt> otoh MP6 uses no assignment

[16:57] <audreyt> so it warrants its own t/03- or something

[16:57] * audreyt is also working on a formal operational semantics for MP6

[16:57] <[particle]> is Test.pm valid MP6?

[16:57] <audreyt> not at all

[16:57] <audreyt> not by far!

[16:58] <TimToady> not without running it through the P6-to-MP6 translator.  :)

[16:58] <audreyt> but that is like, slow :)

[16:59] <audreyt> emulating P6 on MP6 is prolly not wise

[16:59] <audreyt> the plan is to make MP6 AST a proper subset of P6 AST

[16:59] <audreyt> not only the surface syntax

[16:59] <audreyt> once the MP6 boot completes

[16:59] <audreyt> and so we can reuse the emitters

[16:59] <audreyt> and gradually add P6 nodes to it

[16:59] <audreyt> I think that's the plan, anyway. still sketching madly with fglock

[16:59] <audreyt> ENOPAPER at the moment, so going to hunt for some

[16:59] <audreyt> bbiab

[17:01] <[particle]> i didn't realize mp6 ast wasn't a subset of p6 ast

[17:01] <TimToady> more like p6 ast isn't yet a proper superset of mp6 ast.  :)

[17:05] <TimToady> I predict someone will eventually write P6-to-MP6 just so that they can run P6 on their nanobots.  Who cares if it's "slow" if there's quadrillions of 'em running at molecular speeds....

[17:05] <TimToady> It's possible the gray goo catastrophe will be programmed in Perl...

[17:06] <TimToady> talk about disruptive technologies...

[17:06] *** fglock joined
[17:07] <audreyt> fglock: should we perhaps go back checking for lightning talk schedule first so we don't miss it?

[17:08] <fglock> audreyt: sure

[17:09] <Limbic_Region> pugs is like a box of chocolates - you never know what you're gonna get

[17:09] <audreyt> fglock: also do you know if there's a better place to get your new laptop other than shopping centre norde?

[17:10] <Limbic_Region> I thought we were going to get 6.28 (objects) but instead we look like we are gonna be getting bootstrapping

[17:10] <Limbic_Region> woot

[17:10] <fglock> audreyt: I'll ask

[17:10] <anatolyv> S02:2327 says, "in case of a "tie"  the grammatical category that is notionally "first" in the grammar wins." But is the ordering of the categoris specified? (in the list that follows, statement_control comes *after* prefix, so it doesn't seem to be it).

[17:10] <audreyt> Limbic_Region: we're getting 6.28. from the Haskell side this means we're getting a Rules engine _without_ requiring embed perl5

[17:10] <audreyt> and that runs on native haskell speed

[17:10] <audreyt> which will be like much faster.

[17:10] <anatolyv> unless the list in S02 is meant to specify categories from "last" to "first".

[17:10] <fglock> Limbic_Region: 6.28 might happen at both Haskell and Perl, who knows :)

[17:11] <fglock> Perl5, that is

[17:11] <audreyt> that requires another visiolization picture

[17:11] <audreyt> to include MO and fullperl6 AST's places

[17:13] <TimToady> anatolyv: the ordering in question is supposed to be how the magical hashes are ordered within the <%foo|%bar|%baz> construct

[17:14] <Limbic_Region> audreyt - neato

[17:14] <TimToady> S02 is obviously not terribly clear on that point.

[17:14] <Limbic_Region> fglock - super neato

[17:15] <anatolyv> TimToady: oh, I see.

[17:15] <fglock> Limbic_Region: we are accelerating so time slows down - audreyt++ only has a few days left here

[17:16] <anatolyv> TimToady: is the way they're ordered going to be constant - that is, category X will always come before category Y, no matter which context they both appear inside the category list for the lexer - or are there cases when one category is more important than the other in one context and vice versa in another context?

[17:16] <Limbic_Region> fglock - but the distortion in the space-time continuum is localized.  The few of us in IRC land are witnessing what is supposed to be impossible

[17:17] <audreyt> we need a singularity emitter

[17:17] * Limbic_Region just watched a StarGate SG1 episode in which the gate was connected to a world being sucked into a black hole and this very same phenomina was being experienced

[17:18] <fglock> Limbic_Region: we are avoiding to observe it so that it doesn't collapse

[17:18] * Limbic_Region wanders off to go grocery shopping

[17:18] <fglock> the vapourware seems to be densifying however

[17:19] *** TSa joined
[17:19] *** seano joined
[17:20] <fglock> audreyt: are you getting to the lobby?

[17:21] <audreyt> yes, give me another 5min or so

[17:24] *** pen1 joined
[17:24] <svnbot6> r14614 | fglock++ | MiniPerl6 - added initial Regex->MP6AST parser, Token->MP6 emitter

[17:28] <TimToady> anatolyv: that will be up to whoever writes the grammar.  the specified mechanism is local, so global ordering would be by policy, not by technological requirement.

[17:30] *** Excedrin joined
[17:39] <audreyt> back with more paper and design

[17:45] *** mr_ank joined
[17:51] *** mr_ank joined
[18:09] <audreyt> full-p6 boot plan sketched

[18:09] <audreyt> with run- and compile-time MO protocols

[18:09] <audreyt> more details later

[18:09] <audreyt> but we'll go laptop shopping now :) bbl

[18:14] *** mr_ank joined
[18:14] *** beppu_ joined
[18:33] *** weinig is now known as weinig_

[18:34] *** weinig_ is now known as weinig

[18:35] *** mr_ank joined
[18:42] *** gnuvince joined
[18:57] <eggzeck> Limbic_Region: Audrey just spoke in #perl6, heehee

[18:58] *** Excedrin joined
[19:02] *** buetow joined
[19:04] *** elmex joined
[19:05] *** mauke joined
[19:08] *** cmarcelo joined
[19:16] *** Excedrin joined
[19:16] <cmarcelo> @tell audreyt audrey and flavio: will you be at the lobby around 18h? im watching mongers talks. the lightinings are scheduled for tomorrow.

[19:16] <lambdabot> Consider it noted.

[19:17] <cmarcelo> lambdabot: tks

[19:21] *** kane-xs joined
[19:28] *** idiotmax joined
[19:45] *** Aankhen`` joined
[20:23] <xinming> audreyt: where to see the full plan of bootstraping perl 6 please? :-)

[20:28] <Limbic_Region> xinming - in her head

[20:29] <wolverian> audreyt, yay!

[20:38] <audreyt> @tell cmarcelo we are in the lobby and I'm rsync'ing my entire /Applications/ to fglock. come join us!

[20:38] <lambdabot> Consider it noted.

[20:40] <gnuvince> audreyt: have you had hardware problems with your MacBook?

[20:41] <audreyt> no...

[20:41] <lambdabot> audreyt: You have 8 new messages. '/msg lambdabot @messages' to read them.

[20:42] <wolverian> heh

[20:42] <wolverian> someone should fix that bug

[20:42] <wolverian> where lambdabot doesn't realise @tell means the person is present

[20:42] <gnuvince> audreyt: my iBook died, I want to buy a MacBook, but I keep hearing horror stories

[20:43] <audreyt> it all works for me

[20:43] <gnuvince> Great

[20:43] <gnuvince> Thanks for the info

[20:54] *** eggzeck joined
[20:56] *** wilx joined
[21:14] *** fglock joined
[21:15] <audreyt> fglock: hi :)

[21:15] <fglock> hey

[21:16] <audreyt> fglock: "svk pull" instead of "svn up"

[21:16] <audreyt> otherwise all commands are same

[21:19] *** esstone joined
[21:20] <clkao> audreyt: so commitbit-p?

[21:23] <audreyt> clkao: a sec. setting up things for fglock's all new macbook

[21:23] <audreyt> you'll find him running tests before commit now :)

[21:23] <clkao> yay

[21:23] <audreyt> and also svk won't take 1min to just startup

[21:24] <fglock> :)

[21:28] *** SubStack joined
[21:34] *** cmarcelo joined
[21:44] <svnbot6> r14615 | fglock++ | MP6 - added a Regex parser test

[21:47] *** _alex joined
[21:48] *** _alex left
[21:55] *** lisppaste3 joined
[21:57] *** ingy joined
[22:13] *** larsen_ joined
[22:19] *** jrockway joined
[22:21] <clkao> is this comit from new laptop? :)

[22:32] *** brent[] joined
[22:32] <audreyt> yes :)

[22:32] <audreyt> trying to find him an editor

[22:32] <audreyt> surprisingly hard to find one for ultraedit addict

[22:32] <audreyt> (you remember how you took two weeks to brainwash me into vim?)

[22:32] <audreyt> so TextMate for now

[22:33] <Limbic_Region> TextPad perhaps

[22:33] <audreyt> textpad is for mac?

[22:33] <Limbic_Region> oh

[22:33] <audreyt> (context: I just helped fglock buying a new macbook)

[22:33] <Limbic_Region> forgot that part

[22:33] <audreyt> well there is CrossOver

[22:34] <obra> TextMate is likely the most right thing

[22:34] <audreyt> worst case I can get fglock working with UltraEdit on Wine

[22:34] <audreyt> but that's like insane

[22:34] <audreyt> yeah. it even has svk support

[22:34] <wolverian> does textmate have vim keybindings?

[22:34] <wolverian> (or even vi)

[22:34] <obra> possibly jedit

[22:36] * obra has been finally getting around to actually configuring vim himself

[22:38] <clkao> audrey-vim is insanely slow

[22:39] <audreyt> doesn't feel slow in my macbook here...

[22:39] <wolverian> what's audrey-vim? :)

[22:40] <eviltwin_b> remember that brainwashing she mentioned? :)

[22:40] <obra> audreyt: it does on my mbookpro. I think it had to do with the buffer-scanning code

[22:41] <jrockway> doesn't emacs have the best haskell and perl6 modes ATM? that sounds like the right editor choice :)

[22:41] <audreyt> obra: aw. disable them then...

[22:41] <gnuvince> hmmm...

[22:41] <wolverian> hm, what buffer-scanning code? now I'm intrigued

[22:42] <gnuvince> ?eval 1538 / 60

[22:42] <evalbot_r14615> 769/30

[22:42] <gnuvince> ?eval (1538 / 60).fmt("%f")

[22:42] <evalbot_r14615> \"25.633333333333333"

[22:42] <obra> audreyt: I have. it's behaving better.

[22:43] <obra> I'm starting to play with minibufexplorer and taglist

[22:43] <gnuvince> fib(28) (recursive) on my PC with Pugs took 25 minutes :-)

[22:43] * gnuvince considers using a loop

[22:44] <wolverian> ghc is a bit faster there...

[22:45] <obra> but now -> hackerkitchen

[22:45] <Limbic_Region> gnuvince - with or without memoization?

[22:49] <wolverian> the lazy list method doesn't work yet :/ (flattening is eager)

[22:50] <svnbot6> r14616 | audreyt++ | * MP6::Grammar - Parse for escaped chars inside quoted strings.

[22:53] <svnbot6> r14617 | fglock++ | MP6 - Grammar::Regex compiles

[23:00] <Limbic_Region> gnuvince - first perl 6 I have written in months

[23:00] <Limbic_Region> recursive but with memoization

[23:00] <svnbot6> r14618 | audreyt++ | * v6.pm - change env knob V6NOTIDY to V6TIDY -- that is to say we

[23:00] <svnbot6> r14618 | audreyt++ |   don't run tidy by default. it slows down compilation 4x.

[23:00] <Limbic_Region> good stuff

[23:00] <Limbic_Region> perlbot nopaste

[23:00] <perlbot> Paste your code at http://sial.org/pbot/perl and #perl will be able to view it

[23:00] <lambdabot> Title: sial.org Pastebot - pasteling

[23:00] <pasteling> "Limbic_Region" at 24.35.57.240 pasted "recursive fibonacci with memoization via state variables" (25 lines, 444B) at http://sial.org/pbot/20890

[23:01] <Limbic_Region> fib(28) is pretty much instantaneous (minus pugs overhead)

[23:02] <Limbic_Region> (state variables)++

[23:05] <pasteling> "Limbic_Region" at 24.35.57.240 pasted "recursive fibonacci with memoization version 2 (more succinct)" (15 lines, 281B) at http://sial.org/pbot/20891

[23:06] <audreyt> Limbic_Region: examples/algorithms please :)

[23:07] <audreyt> I mean, add to

[23:08] <pasteling> "Limbic_Region" at 24.35.57.240 pasted "recursive fibonacci with memoization (even more succinct but still too perl 5ish)" (10 lines, 187B) at http://sial.org/pbot/20892

[23:08] <Limbic_Region> audreyt - will do

[23:08] <Limbic_Region> would you mind suggesting how to make it more Perl 6ish?

[23:09] <audreyt> Int $n

[23:09] <audreyt> not Integer

[23:09] <audreyt> don't need $fib1 $fib2

[23:09] <Limbic_Region> yeah

[23:09] <audreyt> %seen{$n - $_} //=

[23:09] <Limbic_Region> look at 20892

[23:10] * gnuvince is back from food

[23:10] <audreyt> that's it

[23:10] <Limbic_Region> ok

[23:10] <gnuvince> Limbic_Region: and no memoization; I took the Perl 5 code from shootout.alioth.debian.org and I am converting some of those programs to Perl 6, and the recursive fibonacci took a long, long, long time

[23:12] <audreyt> yes, becasue subroutine call is extremely expensive in our evaluator.

[23:12] <gnuvince> audreyt: gotcha

[23:13] <gnuvince> If I get enough examples ported, I might commit them in examples/

[23:15] <Limbic_Region> gnuvince - the memoization returns fib(42) almost instantaneously as well

[23:15] <Limbic_Region> ;-)

[23:15] <Limbic_Region> waiting for the commit to show up now

[23:16] <Limbic_Region> felt good to write some Perl 6 again but can't get sucked in

[23:16] <gnuvince> Limbic_Region: I'm sure it does, however the "rules" of the alioth shootout is that all examples must be implemented the same way

[23:16] <svnbot6> r14619 | Limbic_Region++ | Recursive implementation of fibonacci using state %seen for memoization.  Inspired by gnuvince++

[23:17] <Limbic_Region> gnuvince - sure

[23:18] <Limbic_Region> gnuvince - as long as a shootout has a comprehensive set of benchmarks to fully test the strengths and weaknesses of the language it is fine

[23:18] <Limbic_Region> the trouble begins when all the examples favor the strengths of 1 language and everyone else has to follow suit

[23:19] <gnuvince> Limbic_Region: the shootout has about 15 "problems" to solve

[23:28] <svnbot6> r14620 | audreyt++ | * MiniPerl6::Emitter::Token - Change __END__ to =begin END.

[23:28] <svnbot6> r14620 | audreyt++ | * MiniPerl6::Grammar::Regex - Change assignment (=) to binding (:=).

[23:36] <pasteling> "anatolyv" at 89.0.235.26 pasted "even more succint and less perl5-ish" (9 lines, 145B) at http://sial.org/pbot/20894

[23:36] <anatolyv> Limbic_Region: see paste

[23:36] <anatolyv> anatolyv: not sure it's clearer though!

[23:42] <Limbic_Region> yeah, I am looking now

[23:44] <Limbic_Region> anatolyv - feel free to update the example in examples but I find my version easier to understand

[23:44] <anatolyv> Limbic_Region: it probably is.

[23:45] <Limbic_Region> it is odd watching what happens when you type fib(1000) since ghc offers arbitrary precision

[23:47] <anatolyv> it's nice, indeed.

[23:58] *** GeJ joined
