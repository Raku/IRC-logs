[00:05] *** jferrero joined
[00:05] *** radians joined
[00:17] *** DaGo joined
[00:22] *** weinig is now known as weinig|bbl

[00:29] *** nekokak joined
[00:33] <markstos> I copied the first post over to pugs.blogs.com: http://pugs.blogs.com/  I'll continue to copy my Perl6 blogging stuff over there from my use.perl.org journal, and then send stuff directly to the pugs blog after that.

[00:43] <TreyHarris> markstos: so i should take your use perl journal off my newsreader lest i get duplicates? :-)

[00:43] <TreyHarris> audreyt: are you around?

[00:44] *** discordja_ joined
[00:47] *** ludan joined
[00:47] *** soisoisoi joined
[00:48] <markstos> TreyHarris: it's a compliment to know I'm in someone's newsreader. Once I catch up with a few current things, I'll post Perl6 stuff just to the Pugs blog,and other perl stuff back at use.perl, so you won't have to suffer through duplicates for long.

[01:06] *** mako132_ joined
[01:10] <markstos> How do I define an array of hashes in Perl6? I didn't see an example in S09

[01:16] *** JarJarBinks joined
[01:17] <TreyHarris> markstos: define?  my Array @array of Hash, I'd assume

[01:18] <markstos> The "of" is not recognized yet there.

[01:18] <markstos> I'm looking for something like my @a = ({ a => b}, { c => 'd' } );

[01:18] <TreyHarris> yeah, the typing tests mostly fail

[01:18] <TreyHarris> that should work

[01:19] <TreyHarris> that's why i was trying to raise audrey actually

[01:19] <TreyHarris> because:

[01:19] <TreyHarris> ?eval my @l = ({d => 'a'}, {d => ''}, {d => 'cd'});  @l.perl

[01:19] *** evalbot_12913 is now known as evalbot_12915

[01:19] <evalbot_12915> "[\{(\"d\" => \"a\"),}, \{(\"d\" => \"\"),}, \{(\"d\" => \"cd\"),}]"

[01:19] <TreyHarris> that works on evalbot

[01:20] <TreyHarris> but it doesn't work on my pugs build at the same rev

[01:20] <TreyHarris> it hangs for about four minutes, eating up cpu and mem, and then segfaults

[01:21] <markstos> ?eval my @a = ({ a => 'b', a2 => 'b3' }, { c => 'd' } ); for @a -> %h { say %h.perl; };

[01:21] <evalbot_12915> OUTPUT[{("a\tb" => ("a2" => "b3")),} {("c\td" => undef),} ] undef

[01:21] <markstos> Not quite right.

[01:23] <TreyHarris> ?eval my @a = ({ a => 'b', a2 => 'b3' }, { c => 'd' } ); @a.perl

[01:23] <evalbot_12915> "[\{(\"a\" => \"b\"), (\"a2\" => \"b3\")}, \{(\"c\" => \"d\"),}]"

[01:24] <markstos> I also tried %() instead of {}, which didn't work either.

[01:24] <TreyHarris> ?eval my @a = [{ a => 'b', a2 => 'b3' }, { c => 'd' } ]; @a.perl

[01:24] *** DaGo joined
[01:24] <evalbot_12915> "[[\{(\"a\" => \"b\"), (\"a2\" => \"b3\")}, \{(\"c\" => \"d\"),}],]"

[01:24] <TreyHarris> huh, that's bizarre

[01:25] <markstos> ?eval my @a; push @a, %( a => 'b', a2 => 'b3' ); push @a, %( c => 'd', c2 => 'd2' ); for @a -> %h { say %h.perl; };

[01:25] <evalbot_12915> OUTPUT[{("a" => "b"),} {("a2" => "b3"),} {("c" => "d"),} {("c2" => "d2"),} ] undef

[01:26] <markstos> So, the hashes are always getting broken up into subhashes.

[01:27] <markstos> I'm not sure how to be more explicit about what I mean.

[01:28] <markstos> ?eval my @a; my $b = %( a => 'b', a2 => 'b3' ); push @a, $b; my $c = %( c => 'd', c2 => 'd2' ); push @a, $c; for @a -> %h { say %h.perl; };

[01:28] <evalbot_12915> OUTPUT[{("a\tb" => ("a2" => "b3")),} {("c\td" => ("c2" => "d2")),} ] undef

[01:31] <markstos> Does Perl6 have a builtin way to read YAML, or just to produce it?

[01:55] *** weinig|bbl is now known as weinig

[02:04] <audreyt> markstos: read yaml?

[02:05] <audreyt> ?eval eval("1: 2", :lang<yaml>)

[02:05] <evalbot_12915> {("1" => "2"),}

[02:05] <audreyt> like that?

[02:05] <markstos> Whoa. Call.

[02:05] <markstos> Cool. :)

[02:05] <audreyt> =)

[02:05] <audreyt> yaml is pretty much the B:: of Pugs

[02:05] <audreyt> I'd like to make SQLite the DBM of Pugs as well...

[02:06] <markstos> I was thinking of using yaml as a back door to solve my array of hashes creation problem.

[02:06] * audreyt just wrote a GC in p5+SQLite for $job... going to run now

[02:07] *** kanru2 joined
[02:07] <audreyt> bbiab :)

[02:08] <audreyt> markstos: give your blogpost a title?

[02:10] <markstos> Sorry I missed that. Doing now.

[02:10] *** mako132_ joined
[02:11] <markstos> done. published now.

[02:19] *** mjk joined
[02:25] *** peacock joined
[02:40] *** ajs_ joined
[02:43] <peacock> any pugs people around who can  help me with a build error?

[02:43] <markstos> I figured out the issue with declaring an array of hashes. The declaration was correct, but it is necessary to iterate over it with 'for each' instead of just 'for', which I don't fully understand yet.

[02:43] <markstos> ?eval my $quiz = ( { a => 1, b => 2 }, { a => 1, b => 3 },); for each($quiz) -> %h { say %h.perl; }

[02:43] <evalbot_12915> OUTPUT[{("a" => 1), ("b" => 2)} {("a" => 1), ("b" => 3)} ] undef

[02:44] <markstos> peacock: I'm here but I doubt I'll be much help with a build error.

[02:44] <peacock> well i'll throw it out anyway

[02:45] <peacock> i get an error when trying to build libHSPugs.a

[02:45] <peacock> it says illegal option, then  no archive members specified

[02:45] <peacock> any ideas?

[02:46] <audreyt> nopaste the whole buildlog?

[02:46] <peacock> by it  i mean the 'ar' command

[02:46] <audreyt> and trace util/build_pugs

[02:46] <peacock> ok one sec

[02:46] <markstos> Here comes the professional-level support. ;)

[02:46] <audreyt> illegal option is most likely due to embperl5

[02:47] <audreyt> if you build again with env PUGS_EMBED set to "-perl5"

[02:47] <audreyt> (need realclean perhaps)

[02:47] <audreyt> then it's likely to work

[02:47] <audreyt> though I'd ofcourse like to make embperl work

[02:48] <pasteling> "peacock" at 72.225.222.225 pasted "build error" (464 lines, 31.4K) at http://sial.org/pbot/19393

[02:48] <peacock> i pasted what i had - but no trace from build_pugs

[02:48] <audreyt> this is osx?

[02:48] <peacock> yeah

[02:49] <peacock> its a fresh source tree from  yesterday

[02:49] <audreyt> ok. at util/build_pugs.pl

[02:49] <audreyt> line 288

[02:49] <audreyt> put a "die @a_file" there

[02:50] <audreyt> and run "make pugs"

[02:50] <audreyt> and see what it prints

[02:50] <audreyt> actually

[02:50] <audreyt> die "$ar - @a_file";

[02:51] <audreyt> and see what your perl thinks the full_ar is

[02:51] <audreyt> most likely your $Config{full_ar} contains spaces

[02:51] <audreyt> do you use the OSX builtin perl?

[02:51] <audreyt> ppc?

[02:51] <peacock> yeah

[02:52] <peacock> ok i'm retrying with that modification

[02:53] <peacock> having some trouble with my irc client :( did  you see the result?

[02:53] <audreyt> no

[02:53] <peacock> "/usr/bin/ar - /Users/rob/proj/pugs/dist/build/libHSPugs-6.2.12.a at util/build_pugs.pl line 288."

[02:53] <peacock> there it is

[02:54] <audreyt> ok. if you run

[02:54] <audreyt> /usr/bin/ar s /Users/rob/proj/pugs/dist/build/libHSPugs-6.2.12.a

[02:54] <audreyt> does it succeed with no messages?

[02:57] <peacock> "ranlib: can't open file: /Users/rob/proj/pugs/dist/build/libHSPugs-6.2.12.a (No such file or directory)"

[02:57] <audreyt> weird.

[02:57] <audreyt> do a

[02:57] <audreyt> find dist/build | grep libHSPugs

[02:57] <audreyt> and see where the .a files is there

[02:58] * audreyt blames Cabal -- this is apparently a safe bet

[02:58] <peacock> hmm...just don't have it it seems

[02:58] <audreyt> find . third-party | grep libHSPugs

[02:58] <audreyt> then

[02:58] <peacock> wait

[02:59] <peacock> ./third-party/installed/lib/Pugs-6.2.12/libHSPugs-6.2.12.a

[02:59] <peacock> i have that

[02:59] <audreyt> that's the only libHSPugs? there's none under dist/build/?

[02:59] <audreyt> find . |grep libHSPugs

[02:59] <peacock> nope :\

[02:59] <audreyt> and see if it's anywhere else

[02:59] <audreyt> it has to come to install/ from somewhere...

[03:01] <peacock> thats the only one on the system

[03:01] <audreyt> ok

[03:01] <peacock> searched in spotlight

[03:01] <peacock> could this be the result of earlier builds?

[03:01] <peacock> i had some  earlier problems that I managed to muddle through

[03:02] <audreyt> how large is it?

[03:02] <audreyt> ah. that might be the reason too

[03:02] <audreyt> look at your Pugs.cabal

[03:02] <audreyt> the last line should begin with ghc-options:

[03:02] <audreyt> nopaste that line?

[03:02] <peacock> its 44.1mb

[03:04] <peacock> http://sial.org/pbot/19394

[03:04] <lambdabot> Title: Paste #19394 from "peacock" at 72.225.222.225

[03:05] <audreyt> hmm

[03:06] *** soisoisoi joined
[03:06] <audreyt> perl is build with debug on (-g)? weird

[03:07] <peacock> the darwin stuff is always just different enough to cause me problems

[03:07] <audreyt> what does

[03:08] <audreyt> perl -V:ranlib

[03:08] <audreyt> say on your system?

[03:08] <peacock> ranlib='/usr/bin/ar ts';

[03:08] <audreyt> aha.

[03:09] <peacock> i'm afraid i'm  still  completely in the dark

[03:10] <svnbot6> r12916 | markstos++ | A first draft of the Perl6 dispatch quiz!

[03:10] <svnbot6> r12916 | markstos++ | Interactively use Test.pm to enter your own answers about how

[03:10] <svnbot6> r12916 | markstos++ | you expect dispatching to work.

[03:10] <svnbot6> r12916 | markstos++ | More quiz questions are coming, but they are also easy to add

[03:10] <svnbot6> r12916 | markstos++ | in the YAML in the source. (Which could be broken out into a separate game file...)

[03:10] <markstos> The quiz is at examples/games/dispatch_quiz.pl

[03:11] *** weinig is now known as weinig|zZz

[03:11] *** lollan joined
[03:12] *** kanru joined
[03:12] <audreyt> peacock: up to r12917

[03:12] <audreyt> and nopaste the build log again

[03:12] <audreyt> this time it'll become instrumented with "ar" calls

[03:13] <audreyt> which should help to diagnose the rune to use

[03:14] <peacock> ok i'm on it

[03:14] <svnbot6> r12917 | audreyt++ | * add instrumentation to build_pugs.pl

[03:17] *** SubStack joined
[03:22] <peacock> http://sial.org/pbot/19395

[03:22] <lambdabot> Title: Paste #19395 from "peacock" at 72.225.222.225

[03:24] <audreyt> ok, I got it.

[03:24] <audreyt> it's embperl5 problem

[03:24] <audreyt> please change util/build_pugs.pl line 303

[03:24] <audreyt> from

[03:24] <audreyt>     $run_setup->('build');

[03:24] <audreyt> to

[03:24] <audreyt>         $run_setup->('build', '--verbose');

[03:25] <audreyt> and nopaste buildlog again

[03:25] <audreyt> my taxi is here; I need to run in a bit; will be back in a couple hours

[03:25] <audreyt> if you need a pugs built now, set

[03:25] <audreyt> export PUGS_EMBED=-perl5

[03:25] <audreyt> and realclean makefile.pl make

[03:25] <audreyt> will get you a nonembed working pugs

[03:25] <audreyt> but I'll look at the --verbose log and adjust cabal flags accordingly as soon as I'm back on the net

[03:25] <audreyt> see you :)

[03:25] <audreyt> *wave* &

[03:26] <peacock> ok - thanks a lot for all your help

[03:26] <peacock> !

[03:26] <peacock> *wave*

[03:28] <markstos> peacock: Yesterday audreyt turned on Perl5 embedding by default. It's a cool feature allowing you do things like use perl5:HTML::Template, and have that module work in Perl6.

[03:28] <markstos> But apparently there are still some kinks to work out with getting it to build everywhere. :)

[03:29] <peacock> markstos: looks like i picked the wrong day to try building pugs!

[03:29] <markstos> I suspect it will work if you that out that build option.

[03:29] <markstos> There is still a lot to explore and play with without Perl5 embedding.

[03:30] <peacock> the build system alone has been keeping me entertained for quiet a while ;)

[03:30] <markstos> Ah.

[03:30] <markstos> Well, you always play with the evalbot here in the channel:

[03:30] <markstos> ?eval say "Hello, Rob"

[03:30] *** evalbot_12915 is now known as evalbot_12917

[03:30] <evalbot_12917> OUTPUT[Hello, Rob ] Bool::True

[03:31] <peacock> yeah thats fun, but i actually do enjoy digging around in the pugs build

[03:31] <peacock> the haskell stuff scares and fascinates me

[03:32] <markstos> likewise.

[03:34] <peacock> and i have to say, its pretty cool that people take the time to help a newbie to get set up

[03:35] <markstos> As it turned out, I think you were providing valuable feedback about how Perl5 embedding builds, so it's a two way street.

[03:36] <pasteling> "peacock" at 72.225.222.225 pasted "verbose log of os x build error" (252 lines, 24.6K) at http://sial.org/pbot/19396

[03:40] *** markstos left
[03:40] <svnbot6> r12918 | markstos++ | Update the dispatch quiz game a little, including comments

[03:40] <svnbot6> r12918 | markstos++ | about more scenerios I'd like to model.

[03:40] <peacock> *thinks thats a good idea*

[03:59] *** mako132_ joined
[04:16] *** frederico joined
[04:29] *** mako132_ joined
[04:34] *** lambdabot joined
[04:35] <TreyHarris> ?eval ({d => 'a'}, {d => ''}, {d => 'cd'})

[04:35] *** evalbot_12917 is now known as evalbot_12918

[04:35] <evalbot_12918> ({("d" => "a"),}, {("d" => ""),}, {("d" => "cd"),})

[04:36] <TreyHarris> ?eval ({d => 'a'}, {d => ''}, {d => 'cd'} :lang<yaml>)

[04:36] <evalbot_12918> Error:  unexpected ":" expecting comment, operator, "," or ")"

[04:37] <TreyHarris> ?eval ({d => 'a'}, {d => ''}, {d => 'cd'}).yaml

[04:37] <evalbot_12918> "--- \n- \n  ? d\n  : a\n\n- \n  ? d\n  : \n\n- \n  ? d\n  : cd\n\n"

[04:38] *** lambdabot joined
[05:11] *** kanru joined
[05:18] *** lambdabot joined
[05:18] *** DaGo joined
[05:38] *** chrisdolan joined
[05:41] <svnbot6> r12919 | malon++ | examples/games/dispatch_quiz.pl - print questions in a friendlier format

[05:42] *** chrisdolan left
[05:44] *** justatheory joined
[05:56] *** lambdabot joined
[05:57] *** nonSmoker joined
[05:57] *** nonSmoker left
[06:11] <gaal> is there a suggested technique for parsing things that can come out of order and accummulating them somehow classified?

[06:12] <gaal> e.g. :($x? = 42 is rw is moose where { $x % 2 })

[06:12] <gaal> afaik 'is rw', 'is moose' and 'where...' can come in any order

[06:14] <gaal> the way i was thinking of was to wrap them all in the same type, and do [modifiers] <- many choice [...]

[06:14] <gaal> but that's kinda artificial since 'is rw' is by no means an Exp, for example

[07:05] *** Lorn joined
[07:23] *** azr|elious is now known as azr|el

[07:26] <svnbot6> r12920 | trey++ | Adding a smartlink

[07:39] <svnbot6> r12921 | trey++ | [docs/Perl6/Perl5/Differences.pod]

[07:39] <svnbot6> r12921 | trey++ | Made the section on twigils actually contain a twigil or two ;-)

[07:40] <gaal> ugh. what's the best way to deal with clashing names oldval<->newval? In Pugs.AST so far we were lucky and didn't need to import Pugs.Val qualified; but now I want Param(..)...

[07:41] <gaal> ...and Pugs.AST reexports 'module Pugs.Val'

[07:42] <gaal> I think for now I'll do type NewParam = Param and export that, if that allows constructors

[07:44] <gaal> doesn't seem to work :(

[07:44] <gaal> this is ugly, but the fix is maybe to have the data type called NewParam and Param be an (unexported) alias to that?

[07:45] <gaal> of just call it SigParam and be done with it :/

[07:47] <gaal> going with that, as it does make some sort of sense.

[07:48] *** ezraburgh joined
[07:48] <araujo> what are you trying to do gaal ?

[07:48] <gaal> take over the world! :)

[07:48] <araujo> ok, well, we all are at it ....

[07:48] <gaal> araujo: introduce a parser that deals with :()

[07:49] <gaal> and constructs a Signature object with Params in it

[07:49] <gaal> the problem was that the Param symbol was already used in old-val land.

[07:49] <gaal> but it's fixed now.

[07:54] <svnbot6> r12922 | trey++ | [Differences.pod]

[07:54] <svnbot6> r12922 | trey++ | Fixed section on quotes to refer to the

[07:54] <svnbot6> r12922 | trey++ | quotes they were referring to....

[08:00] *** iblechbot joined
[08:11] *** drrho joined
[08:18] <svnbot6> r12923 | trey++ | [Differences.pod]

[08:18] <svnbot6> r12923 | trey++ | Infinite C<loop>.  :P5 regexes.

[08:21] *** soisoisoi joined
[08:24] *** nekokak_ joined
[08:28] <gaal> audreyt: in Sig, does s_namedSet include names of positional params too, or only "pure nameds"?

[08:28] <gaal> likewise s_requiredNames

[08:50] *** xerox joined
[08:51] *** elmex joined
[09:06] *** lollan joined
[09:11] *** bernhard joined
[09:29] *** plisk joined
[09:37] *** xerox joined
[09:57] <gaal> I'll commit rudimentary Signature parsing later today. Something that can be really helpful to continue with this is tests, but as far as I know an introspection API isn't specced yet for Signatures, so that might be hard to do :)

[09:58] <gaal> can we get at least a conjectural API please?

[10:00] <gaal> if anyone wants to invent one and just commit tests, please go ahead

[10:01] <gaal> e.g.:  my $sig = :($x);    is $sig.requiredPositionals, 1

[10:02] *** onsen joined
[10:31] *** DaGo joined
[10:48] <gaal> yay! ghc 6.6 release candidate, only a week late!   http://www.haskell.org/ghc/dist/current/dist/

[10:48] <lambdabot> Title: Index of /ghc/dist/current/dist

[10:57] <nothingmuch> can a type class have an instance of another type class?

[10:59] <audreyt> subclassing is allowed, sure

[11:00] * nothingmuch is going to solve the layout/slot issue by overengineering once and for all

[11:00] <nothingmuch> and then i think i am going to write me a blondie 2 in haskell

[11:00] <nothingmuch> but just OO

[11:01] *** ruoso joined
[11:01] <gaal> going out for lunch for a few hours

[11:01] <gaal> audreyt: will you be here in say 2h?

[11:01] <nothingmuch> sounds like a fun lunch

[11:01] <nothingmuch> enjoy =)

[11:01] <gaal> yeah, buchari's the best :)

[11:01] * nothingmuch dunnos

[11:02] <nothingmuch> http://www.post-literate.com/gerpunx/archives/hasselhoffian-recursion.gif

[11:02] <audreyt> sure

[11:02] *** ludan joined
[11:02] <gaal> darn, forgot my new feather pw

[11:03] <gaal> ok so i won't mail you my latest patch, we'll talk then

[11:03] <ludan> hi

[11:03] <gaal> gotta moose, later! &

[11:03] <nothingmuch> we need to implement hasselhoffian recursion in perl 6

[12:04] *** mako132_ joined
[12:22] *** Limbic_Region joined
[12:26] *** weinig|zZz is now known as weinig

[12:29] *** nekokak joined
[12:32] *** araujo joined
[12:35] *** dolmans joined
[12:50] <gaal> remoose

[12:54] <araujo> morning

[12:57] *** lumi joined
[13:05] *** buetow joined
[13:10] *** polettix joined
[13:13] *** frederico joined
[13:13] <svnbot6> r12924 | gaal++ | * Basic support for parsing Signatures with :().

[13:13] <svnbot6> r12924 | gaal++ |   Only named parameters are parsed, and optionals (incorrectly)

[13:13] <svnbot6> r12924 | gaal++ |   require a '?' even if they have a default value. No parameter

[13:13] <svnbot6> r12924 | gaal++ |   decoration (type constraints, access traits, etc.) is supported

[13:13] <svnbot6> r12924 | gaal++ |   yet. The following forms do work:

[13:13] <svnbot6> r12924 | gaal++ |   :($x:)

[13:13] <svnbot6> r12924 | gaal++ |   :($x)

[13:13] <svnbot6> r12924 | gaal++ |   :($x: $y, $z)

[13:13] <svnbot6> r12924 | gaal++ |   :($x: $y, $z? = 42)

[13:13] <svnbot6> r12924 | gaal++ |   :($x: $y?, $z)   # correctly raises a parse error

[13:14] <gaal> tests and golf welcome...

[13:15] *** takanori joined
[13:16] <gaal> s/named/positional/....

[13:17] *** [particle] joined
[13:20] <gaal> bbiab...

[13:25] *** cjeris joined
[13:27] <audreyt> ooooh.

[13:28] *** vel joined
[13:33] *** takanori joined
[13:34] *** weinig is now known as weinig|bbl

[13:34] <svnbot6> r12925 | audreyt++ | * Proper support for PCRE submatch counts.

[13:34] <svnbot6> r12925 | audreyt++ | * Disable explicit imports from RRegex.PCRE, in preparation

[13:34] <svnbot6> r12925 | audreyt++ |   for a #ifdef PUGS_HAVE_PERL5 hook in RRegex.hs so that we

[13:34] <svnbot6> r12925 | audreyt++ |   can switch into RRegex.Perl5 some day.

[13:49] *** chris2 joined
[13:50] *** gaal_ joined
[13:50] <Limbic_Region> audreyt - "some day"?  Is the plan to move in that direction now on hold in lieu of something else?

[13:51] <audreyt> as in "not today"

[13:51] <audreyt> as my brain is fried

[13:51] <audreyt> as in "perhaps tomorrow."

[13:51] <Limbic_Region> ah

[13:51] <Limbic_Region> ok

[13:52] *** marmic joined
[14:02] <audreyt> peacock: In case you are backlogging, I've got identical setup on powerpc g4

[14:02] <audreyt> looking into the build problem now

[14:03] <audreyt> though not sure if I'll stay awake long enough...

[14:04] <obra> 'morning

[14:05] <audreyt> yo

[14:06] <clkao> audreyt: hey

[14:06] <clkao> audreyt: what happened to the plain that using rule as a rendering template language

[14:06] <clkao> s/plain/plan

[14:07] <audreyt> well, we didn't have a reasonable PCR ack then...

[14:07] <audreyt> *back

[14:07] <audreyt> now I guess it'd be nice and fun.

[14:07] <clkao> ya

[14:07] <clkao> so... mmm very interesting.

[14:08] <clkao> i will talk to tina later

[14:08] <audreyt> tina?

[14:08] <audreyt> the notes are still in misc/pX/audreyt/rules-are-templates

[14:09] <clkao> audreyt: html::template::compiled

[14:09] <audreyt> nice!

[14:09] <audreyt> excellent stuff.

[14:10] <clkao> ya. it's even faster then tt

[14:11] <clkao> there are more complaints about jifty being mason than i expcected

[14:11] <audreyt> View::HTC then?

[14:11] <audreyt> mason is more polarizing than tt2.

[14:11] <audreyt> as it's not a humble framework.

[14:11] <obra> HTC?

[14:11] <obra> ah. parsed.

[14:11] <audreyt> HTML::Template::Compiled

[14:12] <audreyt> definitely not MSIE5 HTML Components :)

[14:12] <obra> but yes, TT people Hate mason, while mason people usually prefer mason to TT. ;)

[14:12] <audreyt> I prefer mason to TT, and I hate mason.

[14:13] <obra> mm. need hackathon to make jifty::view::declarative go

[14:13] <audreyt> I guess that makes me in both camps comfortably

[14:13] <clkao> norman ported 50% to tt

[14:13] <clkao> he said the other 50% is hard

[14:13] <audreyt> yeah. you not going to oopsla...

[14:13] <audreyt> not sure what other conferences are there between oct and feb

[14:14] <clkao> i am proably going to yapc::sa

[14:14] <audreyt> but it's brazil, we are more likely to hack p5p6 or p6p6 or p5p5

[14:15] <obra> when is oopsla?

[14:15] <obra> "p5p5" for real?

[14:15] <audreyt> B::Visitor

[14:15] <obra> clkao: norman never committed anything

[14:15] <audreyt> or some other lathos-isomorphic plans

[14:15] <obra> :)

[14:16] <audreyt> metaprogramming p5 in p5, that is

[14:16] <clkao> audreyt: oh, seee if we can switch to PCR based templates. then it's relevent

[14:16] *** weinig|bbl is now known as weinig

[14:16] <audreyt> that's even more crazy that declarative UI...

[14:16] *** nothingmuch joined
[14:16] <audreyt> autoscraping reversible templating

[14:16] <obra> heh

[14:16] <clkao> X

[14:16] <audreyt> obra: oopsla is oct22

[14:16] <clkao> D

[14:16] <audreyt> ~26

[14:16] <clkao> where's oopsla?

[14:16] <obra> portland

[14:17] <obra> actually.

[14:17] <audreyt> portland convention centre

[14:17] <obra> cl: when is google summit?

[14:17] <clkao> 16-18

[14:17] <obra> so. we could do 19-21 in portland

[14:17] <clkao> i guess sfo pdx isn't too far away

[14:17] <obra> or after oopsla

[14:17] * clkao . o O (perl travel agent service)

[14:17] <obra> also, we have a staff programmer in portland.

[14:17] <obra> who knows where one can find onsen

[14:17] <clkao> this is crazy talk

[14:17] <audreyt> in portland? wow. 19~21 would be good for me

[14:18] <obra> schwern claims there are hotsprings in portland.

[14:18] <clkao> Intternals::SvREADONLY(${\undef}, 0) undef = 42

[14:18] <audreyt> orig. planning pair with fglock right after oopsla

[14:18] <audreyt> clkao: yes, I saw that hack (and SvTRUE = 0 and SvFALSE = 1) in perlmonks a while ago...

[14:18] <obra> audreyt: fglock is comming to oopsla?

[14:18] <audreyt> no, flying to brazil for preconf hackathon

[14:18] <obra> ahh.

[14:18] <obra> 19-12 is a little short

[14:19] <audreyt> 19~26 is not

[14:19] <obra> and knowing you, you'll be slideshacking

[14:19] <obra> that's true.

[14:19] <clkao> mmm

[14:19] <clkao> then machupichu before yapcsa...

[14:19] <audreyt> well, my keynote is 22

[14:19] <obra> keynote?! wow.

[14:19] <audreyt> opening day of dynamic language symposium

[14:20] <audreyt> not oopsla main. side conf. but yeah, invited speaker :)

[14:20] <audreyt> which means I don't have to submit a paper.

[14:20] <audreyt> (yay)

[14:20] <obra> ah :)

[14:21] <audreyt> so that means 24~26 is perfectly good hacktime for me, as is probably 19 and 20

[14:22] <obra> *nod*

[14:23] <obra> sounds like we have a potential plan.

[14:24] <obra> sadly, it doesn't mean I have to go to .tw

[14:24] <clkao> i will be back home tomorrow noonish

[14:24] <clkao> obra: winter is not there yet

[14:25] *** fglock joined
[14:26] <gaal_> remoose

[14:26] *** gaal_ is now known as gaal

[14:30] <audreyt> hey gaal. I've looked at your patch

[14:30] <audreyt> and :(Int $x) seems doable

[14:30] <audreyt> and I wonder if we should bump CompUnit version for this

[14:30] <audreyt> but I need to fade now...

[14:31] *** lollan joined
[14:32] *** weinig is now known as weinig|bbl

[14:32] <audreyt> *wave* &

[14:34] <gaal> why need compunit be bumped? we don't use this parser for blocks/subs/methods yet

[14:36] <gaal> anymoose named args and fixing 'is X' look more urgent than Int $x...

[14:36] *** Eimi joined
[14:37] <gaal> was there any additional thought given to the relationship of multis and guards?

[14:41] *** pasteling joined
[14:42] *** hexmode joined
[14:43] *** [particle] joined
[14:47] *** elmex joined
[14:47] *** onsen joined
[14:58] *** lisppaste3 joined
[15:02] *** maard joined
[15:07] *** kanru joined
[15:14] *** prefiks joined
[15:17] *** penk joined
[15:19] *** nothingmuch joined
[15:21] *** weinig|bbl is now known as weinig

[15:26] *** xerox joined
[15:32] <Limbic_Region> hrmmm - my make smoke output looks awfully strange

[15:33] <Limbic_Region> um - pugs on Win32 is b0rk

[15:34] <pasteling> "Limbic_Region" at 129.33.119.12 pasted "Win32 is currently b0rked" (17 lines, 1.8K) at http://sial.org/pbot/19411

[15:35] <Limbic_Region> This smoke report isn't going to look too good

[15:35] * Limbic_Region does a rebuild just in case

[15:37] <Limbic_Region> anyone else having this problem (Win32 or otherwise)?

[15:38] * [particle] makes unoptimized pugs

[15:42] <Limbic_Region> particle - you are Win32 exclusively or is it one of multiple environments you build pugs in?

[15:42] <[particle]> i'm win32-msvc only for now

[15:43] <Limbic_Region> ok

[15:43] <Limbic_Region> what version of ghc?

[15:43] <[particle]> 6.4.1

[15:43] <Limbic_Region> interesting to know if you get the same problem or not then

[15:43] <Limbic_Region> AS Perl or from source or other?

[15:44] <[particle]> as 5.8.7

[15:44] * Limbic_Region begins the process of building from scratch and wanders off to get some lunch

[15:44] <Limbic_Region> bbiab - let me know what your results are

[15:45] <[particle]> still compiling, will do

[15:47] *** xinming joined
[15:51] <[particle]> D:\usr\local\pugs>pugs -e"say 'hello'"

[15:51] <[particle]> hello

[15:55] *** iblechbot joined
[16:01] <Limbic_Region> hopefully rebuilding from scratch will yield the same results

[16:02] <Limbic_Region> we do have a number of differences though

[16:04] <[particle]> which perl?

[16:04] <[particle]> ooh, actually i'm 5.8.6

[16:04] <Limbic_Region> AS 5.8.8 (which I have patched to make Module::Build work with MinGW)

[16:05] <Limbic_Region> so I am on GHC 6.5, AS 5.8.8 (patched), and MinGW

[16:05] <[particle]> you're all new, i'm pretty old

[16:05] <Limbic_Region> heh

[16:05] <Limbic_Region> particle - the performance difference alone is worth going to GHC 6.5

[16:06] <[particle]> sure, if pugs works with it :)

[16:06] <[particle]> is compile time slower?

[16:06] <Limbic_Region> it does, audreyt is the one who convinced me to upgrade

[16:06] <Limbic_Region> no - faster

[16:06] <[particle]> compile+runtime faster? wow.

[16:07] <Limbic_Region> and there really isn't any upgrade - you basically just untar it

[16:07] <Limbic_Region> well, the compile time speed difference might not necessarily be related to ghc

[16:07] <Limbic_Region> changes to pugs internals and the build process might explain that

[16:08] * [particle] wonders if he needs to upgrade to 6.4.2 before patching to 6.5

[16:08] <Limbic_Region> no

[16:09] <Limbic_Region> the binary build is this simple - pull down the snapshot, untar it, rename your current ghc directory to ghc_6.4.1 or some such and rename the untared dir your old ghc

[16:09] <Limbic_Region> at least that's all I had to do

[16:10] <Limbic_Region> that way if you want to back out - all you have to do is rename some directories

[16:10] <[particle]> hrmm. i suppose i want one ending in -mingw32

[16:10] <Limbic_Region> actually - you want the one from the 19th since the Win32 builds are all b0rk after that date

[16:10] <Limbic_Region> let me get you an exact URL

[16:11] *** elmex joined
[16:12] <Limbic_Region> http://www.haskell.org/ghc/dist/current/dist/ghc-6.5.20060819-i386-unknown-mingw32.tar.gz

[16:13] <[particle]> thanks! i'll let you know how the install goes

[16:13] <gaal> try the latest one though, it's a 6.6 release candidate

[16:13] <Limbic_Region> ok - since you are using MSVC you shouldn't need to patch AS when/if you upgrade to 5.8.8

[16:14] <Limbic_Region> gaal - have they fixed the Win32 problem - I don't think so

[16:14] <gaal> fwiw my experience shows pugs compilation to be a little slower on 6.5, but the resulting pugs is *way* faster.

[16:14] <gaal> Limbic_Region: if not please submit a report to the ghc team, this is a release candidate!

[16:14] *** Psyche^ joined
[16:14] <[particle]> the difference in compile time between msvc 6 and 7.1 for parrot is ~50%

[16:15] <gaal> in favor of?

[16:15] <[particle]> 7.1 is slower, but the parrot exe is definitely faster

[16:15] <Limbic_Region> gaal - I only use binary builds and I think that is specifically where the problem is

[16:15] <Limbic_Region> I am sure the source builds work fine

[16:15] <[particle]> is there a link for a binary build of the 6.6 rc?

[16:15] <gaal> Limbic_Region: I understand, but seeing as this is a release candidate...

[16:15] <Limbic_Region> they just aren't including ghc.exe for instance in the binary build

[16:16] <[particle]> if so, i'll stop my current d/l

[16:16] <Limbic_Region> gaal - it is easy enough to tell, just check to see if ghc.exe exists in the tarball

[16:16] <gaal> [particle]: try the same dir Limbic_Region linked you to, just not that file.

[16:16] <[particle]> k

[16:16] <Limbic_Region> gaal - fwiw, I did tell the folks in #haskell - no one seemed too interested

[16:17] <gaal> Limbic_Region: oops, the build moose is my bad. please rm blib6/lib/*yml

[16:17] * [particle] notices there's a ghc hackathon in portland in two weeks

[16:17] *** Eimi joined
[16:17] <Limbic_Region> gaal - well, the rebuild from scratch is almost complete

[16:17] <gaal> [particle]: yes, and there's a ICFP soon too

[16:18] <Limbic_Region> if realclean didn't do that for me - will be sure to do that next

[16:18] <gaal> realclean kills blib6/, I think (it should!)

[16:18] <Limbic_Region> gaal - WRT 6.5 being a little slower - then the overall build process has improved because before 6.5 it used to take me a minimum of 45 mins to rebuild from scratch

[16:19] <Limbic_Region> it is down to 30 minutes now

[16:19] * Limbic_Region tests pugs -e "say 'hello'"

[16:19] <gaal> the difference being? just the compiler?

[16:19] <[particle]> and the revision of pugs, i presume

[16:19] <Limbic_Region> no way to isolate the difference

[16:19] <Limbic_Region> right particle

[16:20] <gaal> because there have been improvements in pugs build time.

[16:20] <gaal> Limbic_Region: of course there's a way to isolate the improvement, try same r with different ghcs

[16:20] <Limbic_Region> as I said before, the improvements may be completely unrelated to ghc - but I noticed the difference at around the same time

[16:20] <[particle]> so i should see the speedups even with 'unoptimized'?

[16:20] <Limbic_Region> gaal - no way to tell that I am *that* interested in pursuing

[16:20] *** Eimi joined
[16:21] <Limbic_Region> gaal - fixed

[16:21] * Limbic_Region starts a new make smoke

[16:21] <gaal> [particle]: my small benchmark didn't include an unoptimized comparison, sorry :)

[16:21] <[particle]> :P

[16:23] * Limbic_Region still can't figure out why t/examples/all_parse.t won't work under the test harness other than the fact that it has to do with $debug being turned on for File::Find

[16:23] <[particle]> +o+

[16:23] <Limbic_Region> I can't see where the debug information is coming out on STDERR and I would assume printing to STDOUT would be ok

[16:25] * Limbic_Region wanders off to a cow orker's going away party

[16:25] <[particle]> gaal: are you moosing \u2559\u263b\u255c ? you should

[16:25] <Limbic_Region> bbiab

[16:25] <svnbot6> r12926 | gaal++ | * Limbic_Region's breakage report makes me understand audreyt's

[16:25] <svnbot6> r12926 | gaal++ |   comment about the CompUnit version needing a bump.

[16:26] <gaal> ╙☻╜!

[16:26] <[particle]> my irc client can't display that :(

[16:27] <gaal> ╙☺╜

[16:27] <gaal> or the ASCII fallback:  }:)

[16:28] * gaal envisions a Perl 6 parsing combinator library called Moosec

[16:30] *** Psyche^ is now known as Patterner

[16:30] <xerox> loool

[16:30] <xerox> Moose :D

[16:30] <gaal> hello xerox!

[16:30] <xerox> Hi!

[16:31] <[particle]> moose is a palindrome, if you turn your head and squint

[16:31] *** turrepurre joined
[16:32] <[particle]> hrmm, the ghc-6.5.20060901 has a gcc.exe, is that expected?

[16:32] <gaal> yes

[16:32] <gaal> all win32 ghcs bundle gcc

[16:32] <[particle]> well, i don't see ghc.exe

[16:33] <[particle]> oh, there it is

[16:33] <gaal> see README

[16:37] *** lollan joined
[16:44] <[particle]> hrmm, makefile.pl seems to be failing

[16:45] <[particle]> Updated to revision 12926.

[16:45] <[particle]> D:\usr\local\pugs>makefile.pl

[16:45] <[particle]> Global symbol "$pcre" requires explicit package name at D:\usr\local\pugs\Makefile.PL line 522.

[16:46] <[particle]> oh, i'm conflicted

[16:51] *** xerox joined
[16:52] <Limbic_Region> gaal - today

[16:52] <Limbic_Region> err

[16:52] <Limbic_Region> gaal - today's snapshot having the ghc.exe means they fixed the build problem

[16:52] <Limbic_Region> good stuff

[16:52] <gaal> yes indeed.

[16:53] * Limbic_Region might upgrade himself next week at work and this weekend at home

[16:53] * [particle] rebuilds pugs with latest ghc

[16:55] *** justatheory joined
[16:55] <Limbic_Region> gaal - should I expect a major difference between the snapshot from the 19th and today?  IOW, was the 6.6 branch merged recently or had it been integrated for a while?

[16:56] <gaal> difference in what sense?

[16:56] <gaal> I'm using one from the 18th myself (linux)

[16:57] <Limbic_Region> gaal - just what I said WRT 6.6

[16:57] <Limbic_Region> IOW - did the 6.5 and 6.6 branch and then get merged

[16:57] <Limbic_Region> or has the 6.6 rc always been part of the 6.5 branc

[16:57] <Limbic_Region> branch

[16:59] <gaal> I don't know, but since this is the first release for 6.6 presumably 6.5 is where all the stuff's at.

[16:59] <gaal> but I never even looked at ghc source control, so better ask someone more into it.

[16:59] <[particle]> wow, a parrot/perl6 question on p6l

[17:01] <[particle]> i find nothing in S04 to say whether nested statement modifiers are allowed on blocks

[17:02] <gaal> anyone here know ruleQualifiedIdentifier and ruleTrait etc.? I don't understand who ruleTrait supposedly services things like 'is export', because it ultimately calls

[17:02] <gaal> ruleVerbatimIdentifier `sepBy1` (string "::")

[17:02] <gaal> IOW, 'is export' won't parse, but say 'is MyProj::Moose' would

[17:03] <gaal> *understand how

[17:04] <Limbic_Region> gaal - it isn't that important to me WRT significant changes being merged in GHC.  I just wanted to know if there was something spectacular I should be on the lookout for.  Wait and see I guess

[17:05] * Limbic_Region checks the results of his most recent smoke to see how things are doing

[17:06] <Limbic_Region> 94.89% ok

[17:09] <gaal> oh, no: sepBy1 just means ruleVerbatimIdentifier must match once or more.. but a trace shows it never does. hmm

[17:09] *** weinig is now known as weinig|away

[17:12] <[particle]> D:\usr\local\pugs>setup configure

[17:12] <[particle]> Configuring Pugs-6.2.12...

[17:12] <[particle]> setup: cannot satisfy dependency HsJudy-any

[17:12] <[particle]> ??

[17:12] <gaal> [particle]: you may have to 'make' once w/o 'fast'

[17:12] *** miyagawa_ joined
[17:13] <gaal> you can interrupt once deps have been built.

[17:13] <Limbic_Region> setup configure?

[17:13] <Limbic_Region> svn up; perl Makefile.PL; nmake;

[17:15] *** nothingmuch joined
[17:16] <Limbic_Region> how the moose are you nothingmuch?

[17:16] <[particle]> my command was C<nmake clean && Makefile.PL && nmake>

[17:18] <Limbic_Region> ah

[17:18] <Limbic_Region> the setup.exe invoked by Makefile.PL

[17:19] <gaal> [particle]: perl Makefile.PL I hope

[17:19] <Limbic_Region> gaal - why?

[17:19] <Limbic_Region> windows file association

[17:19] <gaal> ahhhhh win32

[17:19] <gaal> right

[17:20] <gaal> wow, w32 golf

[17:20] <[particle]> win32: 1; linux: 0 ;)

[17:20] <gaal> [particle]: by all means keep using windows if you prefer it

[17:21] <Limbic_Region> particle - did you get the build working?  I don't know about you but I don't trust "clean" and always opt for "realclean"

[17:21] <[particle]> i'm doing realclean now

[17:23] <TreyHarris> how do you use a perl5 module in pugs?  I successfully used perl5:IO::Prompt, but I can't figure out how to call prompt().  it isn't directly imported, and IO::Prompt::prompt gives me an undefined subroutine err

[17:24] <gaal> TreyHarris: the hack is IO::Prompt.can('prompt'), IIRC

[17:24] <svnbot6> r12927 | gaal++ | * Signatures: fix access traits, e.g. :($x is rw)

[17:24] <svnbot6> r12927 | gaal++ | * cleanup a little, golf a little

[17:26] <TreyHarris> gaal: ah, ok, thanks.  unsurprisingly perhaps, prompt screams about not recognizing its context ("Are you trying to call me from inside a tie handler?")

[17:27] <gaal> hm, a hack may be required, wrap it in a p5 closure?

[17:27] <TreyHarris> yes, i think so

[17:28] <TreyHarris> but before perl5: worked, I was toying with porting IO::Prompt anyway.  maybe i'll just do that

[17:28] <gaal> we had loads of ports once in the pugs repo, then they moved, and I don't know if anyone is still maintaining his any more

[17:29] <TreyHarris> oh, i was actually just going to ask you about that, where they went and if there was a place in the pugs repo for such

[17:29] <TreyHarris> as i wanted to write a util/ that would use it

[17:29] <gaal> i think.. freepan?

[17:29] <gaal> google for memcached and perl6

[17:31] <TreyHarris> i found it, i think: http://tpe.freepan.org/

[17:31] <gaal> yes that's it

[17:31] <TreyHarris> but a util that uses something outside of the pugs repo would probably be bad form

[17:32] <gaal> it's actually a good excuse to put your code in ext/ :)

[17:34] <TreyHarris> gaal: good point.  somebody ported one of my cpan modules, i see; since it's out of date and also a very literal translation, i think i'd like to do it myself again

[17:34] *** [particle] left
[17:34] <svnbot6> r12928 | gaal++ | * golf, golf, golf is good, golf is great yeah

[17:34] *** [particle] joined
[17:35] <Teratogen> are perl 6 functions in builtin pseudo-package-classes?

[17:35] <Teratogen> builtin functions that is

[17:35] <gaal> Teratogen: see Prelude.pm

[17:35] <Teratogen> ok

[17:35] <Teratogen> thanks

[17:36] <Teratogen> where can I find that, gaal?

[17:36] *** Daveman joined
[17:36] <gaal> Teratogen: http://svn.openfoundry.org/pugs/src/perl6/Prelude.pm

[17:36] <Teratogen> thanks again

[17:36] <gaal> np

[17:37] <gaal> if you're asking about things that aren't there, say.... &say, then I think the answer is that "they should be!" but not always are

[17:37] <gaal> see also S29

[17:37] <gaal> http://perlcabal.org/syn/S29.html

[17:37] <lambdabot> Title: S29

[17:37] <Limbic_Region> which is still mighty confusing

[17:38] * Limbic_Region thinks the dev.perl.org/perl6 link for S29 should not point to what it does now

[17:38] <Limbic_Region> oh, nevermind me

[17:39] <Limbic_Region> it has been updated at least to refer to the one in the pugs repo

[17:39] <TreyHarris> gaal: do you have any insight as to why literal lists of hashes segfault pugs unless used in an eval?

[17:39] <gaal> ahem

[17:39] <gaal> example?

[17:39] <TreyHarris> ?eval ({a => 'a'}, {b => 'b'})

[17:40] <Limbic_Region> TreyHarris - example using ?eval would be even better

[17:40] <Limbic_Region> nevermind

[17:40] *** evalbot_12918 is now known as evalbot_12927

[17:40] <evalbot_12927> user error (Incompatible version number for compilation unit Consider removing blib6/lib/Prelude.pm.yml and make it again ) ({("a" => "a"),}, {("b" => "b"),})

[17:40] <TreyHarris> oh... that was working last night on evalbot

[17:40] <gaal> works here

[17:40] <gaal> evalbot needs cleaning its .yml, sec

[17:41] <TreyHarris> ah, maybe audreyt fixed it since last night

[17:41] * Limbic_Region is a day late and dollar short on everything today

[17:41] <TreyHarris> i'll update and make

[17:41] <Limbic_Region> she's like that

[17:41] <Limbic_Region> always going and fixing things

[17:41] <TreyHarris> Limbic_Region: yeah, but usually she mentions it on the channel :-)

[17:41] <[particle]> the S29 link should actually be a hyperlink

[17:42] <gaal> aaaaagh

[17:42] <gaal> Juerd: ping, please add me to sudoers

[17:43] <pasteling> "[particle]" at 144.81.84.207 pasted "ghc-6.5 pugs on win32 is all moosed up" (523 lines, 27.1K) at http://sial.org/pbot/19412

[17:43] <TreyHarris> hmm... only changes are yours, gaal.  i'll re-make, but unless your changes fixed it as a side effect, it may be a OS X-specific issue

[17:44] * Limbic_Region disagrees with particle

[17:44] <Limbic_Region> or rather - suggests particle indicate which snapshot the 6.5 was taken from

[17:45] <TreyHarris> or a ghc6.4.2 issue....

[17:45] <gaal> Limbic_Region: he's using 6.5.20060901, as mentioned in the paste.

[17:45] <[particle]> latest

[17:45] <[particle]> right.

[17:46] <Limbic_Region> gaal - I knew that, I just took issue with the headline

[17:46] <[particle]> }:P

[17:47] <gaal> [particle]: hmm, dunno what to suggest except nuke dist/ and try again?

[17:47] <gaal> what's FPS_Dummy anyway?

[17:47] <Limbic_Region> hrm - yeah

[17:47] <Limbic_Region> I seem to recall unregistering fps something or other a while back as it was the only way to get pugs to build

[17:47] *** xerox joined
[17:48] <Limbic_Region> after some change - but don't recall which

[17:48] <gaal> I'm not using that snapshot yet. could it be that that ghc comes with a good enough fps, so our fps builds a dummy instead? shooting in the dark here

[17:48] <gaal> Limbic_Region: this is compilation, not linkage

[17:49] <gaal> brb

[17:49] <Limbic_Region> well, as soon as the current make finishes

[17:49] <Limbic_Region> I will try it with the latest GHC to see if I get the same problem

[17:49] <Limbic_Region> that could possibly eliminate the snapshot as being the problem

[17:50] <[particle]> that would be quite helpful

[17:52] <Limbic_Region> it could be up to 40 minutes or so before I know for sure it works - will know if it is b0rk faster

[17:52] <Limbic_Region> my work download speed is abysmal

[17:53] <[particle]> actually, it took me a long time to d/l that file, too

[17:53] <[particle]> it may be the haskell.org site that's slow

[17:53] <Limbic_Region> well, my top speed is 30kb/sec

[17:54] <Limbic_Region> and norm is like 28

[18:00] <cmarcelo> gaal: re fps dummy: you're right. Pugs.cabal prefer always depending on pugs-fps and let u/build_pugs.pl choose between the empty (for GHC 6.5, which have fps in the core) and non-empty for GHC 6.4 people..

[18:03] <Limbic_Region> particle - downloaded and untarred - svn upping now

[18:05] *** pbuetow joined
[18:07] <Limbic_Region> particle - if I am reading your nopaste correctly - you don't even make it past Makefile?

[18:08] <Limbic_Region> oh, nevermind

[18:08] <Limbic_Region> you must have not nopasted that

[18:08] <[particle]> k

[18:08] <[particle]> right, just the end

[18:08] <Limbic_Region> build starting now

[18:10] <Limbic_Region> getting very close to the point yours blew up

[18:11] <Limbic_Region> interesting

[18:11] <Limbic_Region> mine failed too

[18:11] <Limbic_Region> but for different error

[18:12] <Limbic_Region> Setup.exe: cannot satisfy dependency HsJudy-any

[18:12] <[particle]> did you realclean?

[18:12] <Limbic_Region> yes

[18:12] * Limbic_Region tries something 

[18:13] <Limbic_Region> will be another 15 minutes or so

[18:20] <Limbic_Region> ok, starting build again

[18:20] *** soisoisoi joined
[18:23] *** nainef joined
[18:24] <Limbic_Region> approaching previous break point

[18:25] *** xinming_ joined
[18:25] <Limbic_Region> particle - confirmed, error is related to latest ghc snapshot

[18:26] <[particle]> but you have a different error, right?

[18:26] <Limbic_Region> not now

[18:27] <[particle]> oh, great!

[18:27] <Limbic_Region> you had gone from 6.4.1 to 6.5 which meant audreyt had already done something special for third-party

[18:27] <Limbic_Region> I went from 6.5 to 6.5 and had to convince third-party to play nice

[18:27] <Limbic_Region> once I did - I am getting exact same results

[18:28] <[particle]> i assume audrey has started her weekend by sleeping

[18:28] * Limbic_Region assumes so too

[18:28] *** iblechbot joined
[18:28] <Limbic_Region> no matter though, just download the link I gave you before and use that directory

[18:28] <Limbic_Region> once the fix has been made for the most recent release

[18:28] <Limbic_Region> just rename directories again

[18:29] * Limbic_Region likes being able to switch between versions of ghc just by changing dir names

[18:29] <Limbic_Region> even easier would be setting the env variable but that is not as easy on *this* box

[18:29] <[particle]> yep, i just modified my path statement

[18:32] <Limbic_Region> well, that was fun - NOT

[18:32] <gaal> cmarcelo: could you loook at Limbic_Region and [particle] build failure? I think you may have an idea how to approach it

[18:33] <cmarcelo> I already did but didn't had a clue :(... by the build log from particle looks like ghc.exe doesn't compile anything, maybe testing if it can compile a helloworld, just to check if the binary is sane..

[18:34] <Limbic_Region> cmarcelo - got a command line 1 liner for me to try?

[18:36] <[particle]> ...or a small nopasted sample

[18:36] <cmarcelo> Limbic_Region: create a file hello.hs with

[18:36] *** Lorn joined
[18:36] <cmarcelo> main = putStrLn "haha"

[18:37] <cmarcelo> and then ghc hello.hs -o hello

[18:37] *** onsen joined
[18:37] <Limbic_Region> works fine

[18:38] <[particle]> here too

[18:38] <[particle]> D:\usr\local\pugs>ghc hello.hs -o hello.exe

[18:38] <[particle]> D:\usr\local\pugs>hello

[18:38] <[particle]> hello, world!

[18:38] <gaal> [particle]: that's a bug, it should have printed "haha". I do not know what could have caused it.

[18:38] <[particle]> the bug is, my hello.hs is different :)

[18:39] * Limbic_Region reminds particle that it is Friday and not to kick gaal

[18:39] <cmarcelo> ok.. (are you testing with the bad-latest-ghc rifht?)

[18:39] * [particle] licks gaal

[18:39] * Limbic_Region has no idea WTF that means cmarcelo

[18:39] <gaal> cmarcelo: they both have today's 6.6 release candidate

[18:39] <Limbic_Region> we are both using the latest binary build (from today at around 9AM)

[18:40] <cmarcelo> i meant the release candidate :)

[18:40] <gaal> Limbic_Region: good to know there's a day in the week you're not violent in

[18:40] <cmarcelo> rifht => right..

[18:40] <Limbic_Region> I currently have 6.4.2, 6.5-2006_08_19, and 6.5-2006_00_01 to play with cmarcelo

[18:40] <Limbic_Region> cmarcelo - interestingly enough, the binary snapshots for Win32 had been b0rk since the 19th

[18:41] <[particle]> and i have 6.4.1 and current

[18:41] <Limbic_Region> (missing ghc.exe for instance)

[18:41] <Limbic_Region> it looks like this was fixed around the 29th

[18:42] <Limbic_Region> that is based of the tar ball file size change

[18:42] <cmarcelo> Limbic_Region: looks like the binary is sane.. i'm looking for the error msg on the web..

[18:42] <Limbic_Region> the difference though is that on the 19th with a working ghc/pugs the file was 61mb - today it is only 41

[18:42] <svnbot6> r12929 | gaal++ | * Parse type constraints in Signatures:

[18:42] <svnbot6> r12929 | gaal++ |   :(Moose $x)

[18:42] <svnbot6> r12929 | gaal++ | * Commented out is support for:

[18:42] <svnbot6> r12929 | gaal++ |   :($x where { $x % 2 })

[18:42] <svnbot6> r12929 | gaal++ |   ...which requires an Exp -> Pugs.Val.Code convertor.

[18:43] <Limbic_Region> cmarcelo - so with 20 mb difference, I am still not convinced the build is 100%

[18:43] <Limbic_Region> though I could just be throwing stones at the unknown

[18:43] <cmarcelo> Limbic_Region: check if the files the pugs build complain missing (Stg.h HsBase.h) are in the RC tree..

[18:43] <cmarcelo> s/check/would you mind checking/

[18:44] <Limbic_Region> no worries - will then confirm the same (present or missing) from the 19th's build

[18:44] *** maard left
[18:45] <cmarcelo> Limbic_Region: recently they dropped some libs out of the core.. I think they should be distributing a *-extralibs-* together with every snapshot..

[18:45] <Limbic_Region> cmarcelo - good news, both files are present in both snapshots

[18:45] <Limbic_Region> cmarcelo - bad news, they aren't in the same paths between snapshots

[18:46] <[particle]> erk

[18:46] <Limbic_Region> I think this might be an easy short-term fix

[18:46] * Limbic_Region tries something

[18:47] <cmarcelo> Limbic_Region: well, I suppose you're trying linking or copying them around..

[18:48] <Limbic_Region> for now just copying

[18:48] <Limbic_Region> Win32 doesn't support linking

[18:48] <Limbic_Region> but if this does work

[18:48] <Limbic_Region> then it will just be a matter of adding an -I

[18:48] <Limbic_Region> or whatever Pugs/GHC needs to look for header files in additional directories

[18:49] <gaal> Limbic_Region: can you paste the two paths here? looks like it might be a reportworthy bug in the distro

[18:49] <Limbic_Region> sure

[18:49] <Limbic_Region> ghc_root/include

[18:49] *** onsen_ joined
[18:49] <Limbic_Region> is the working path where ghc_root should be obvious

[18:50] <Limbic_Region> ghc_root/lib/i386-mingw-unknown/include

[18:50] <gaal> did you follow the steps in INSTALL? on linux at least you need 'make in-place'

[18:50] <Limbic_Region> is the current broken path

[18:50] <Limbic_Region> gaal - no need on Win32

[18:50] <gaal> ok

[18:51] <Limbic_Region> though that may be interesting - it might ultimately be that it is necessary and that the build on the 19th was b0rk

[18:51] <gaal> fwiw: on my system (with the older snapshot), it's in lib/$platform/include too, and it works.

[18:51] <Limbic_Region> appears to be working

[18:51] <Limbic_Region> though still very early in build process

[18:52] <gaal> Limbic_Region: could you write your findings up and post them to [email@hidden.address] please?

[18:52] <Limbic_Region> gaal - I have 8 minutes before work gets out

[18:52] <gaal> they too are nearing release and will appreciate it

[18:53] <gaal> okay, I'll do it then

[18:53] <Limbic_Region> but particle should be able to

[18:53] <Limbic_Region> gaal - new build error Setup.exe: cannot satisfy dependency mtl-any

[18:53] <Limbic_Region> going to try one more thing

[18:53] <Limbic_Region> then going home

[18:55] <Limbic_Region> ok, gaal - positive the make or make in place not necessary on Win32 as no configure present in the snapshot

[18:55] <Limbic_Region> so it basically boils down to root/include vs root/lib/$platform/include

[18:55] <Limbic_Region> but since we still aren't building (though further along)

[18:55] <Limbic_Region> posting to bugs is a bit premature

[18:56] <Limbic_Region> what exactly is mtl-any anyway?

[18:58] <cmarcelo> monad transformer library

[18:58] <TreyHarris> what's the incantation for regenerating the yaml prelude, and is it documented anywhere?

[18:58] <Limbic_Region> is that one of the libraries that got dropped?

[18:59] <Limbic_Region> and if so, where can I get it from to install manually

[18:59] <cmarcelo> Limbic_Region: not sure, they were discussing whether include or not..

[18:59] <cmarcelo> get the extralibs for RC then

[18:59] <cmarcelo> the error now is for missing mtl ?

[18:59] <cmarcelo> (only)

[19:00] *** Yappo joined
[19:00] <Limbic_Region> cmarcelo - that's the only *current* error - doesn't mean fixing that won't point to a new one

[19:00] <TreyHarris> i tried this: ./util/gen_prelude.pl --inline src/perl6/Prelude.pm

[19:00] <TreyHarris> got errors

[19:00] <Limbic_Region> cmarcelo - same download location for the extralibs?

[19:01] <cmarcelo> Limbic_Region: same d/l location

[19:01] <gaal> TreyHarris: util/gen_prelude.pl -v -i src/perl6/Prelude.pm -p ./pugs --output blib6/lib/Prelude.pm.yml

[19:02] <Limbic_Region> cmarcelo - all that is provided is src (no binary) so I hope all that is needed is ghc.exe to compile them

[19:02] <cmarcelo> yes

[19:02] <Limbic_Region> great

[19:02] <Limbic_Region> gaal - going to build these extra libraries and try again

[19:02] <gaal> TreyHarris: this is what build_pugs does. if can spare some tuits, a flag to build_pugs to do just that would be great, as well as a Makefile.PL rule to invoke that

[19:03] <Limbic_Region> if it works then it will be two things - neither of which is necessarily a haskell issue

[19:03] <cmarcelo> Limbic_Region: build instructions => http://www.haskell.org/pipermail/glasgow-haskell-users/2006-September/010968.html

[19:03] <lambdabot> Title: ANNOUNCE: GHC 6.6 Release Candidate, http://tinyurl.com/nh2rm

[19:03] <Limbic_Region> thanks cmarcelo

[19:03] * Limbic_Region should be on his way home now

[19:04] <cmarcelo> did lambdabot create tinyurl? cool! =)

[19:04] <Limbic_Region> cmarcelo - there are no instructions there - perhaps next in the thread?

[19:04] <cmarcelo> "unpack the extralibs tarball on top of the source tree to add them, they will be

[19:04] <cmarcelo> included in the build automatically."

[19:05] <Limbic_Region> but I am not building

[19:05] <Limbic_Region> Win32 is binary distro

[19:05] <[particle]> perhaps extralibs should be included with binary distros automatically

[19:06] <cmarcelo> hmm;.. maybe.. but I think the binary dist maybe ready to compile this extralibs.. ii'm d/ling it to check..

[19:07] <Limbic_Region> cmarclo - there is a makefile so perhaps I can still do it

[19:07] * Limbic_Region tries stuff all willy nilly

[19:07] <TreyHarris> gaal: will try to find the tuit.  in the meantime, documented it in TASKS.

[19:07] <TreyHarris> gaal: thanks

[19:08] <gaal> TreyHarris++

[19:08] <svnbot6> r12930 | trey++ | [TASKS]

[19:08] <svnbot6> r12930 | trey++ | Documented need to add gen_prelude flag to build_pugs and Makefile.PL

[19:08] <TreyHarris> ?eval ({a => 'a'}, {b => 'b'})

[19:08] *** evalbot_12927 is now known as evalbot_12929

[19:08] <evalbot_12929> user error (Incompatible version number for compilation unit Consider removing blib6/lib/Prelude.pm.yml and make it again ) ({("a" => "a"),}, {("b" => "b"),})

[19:08] <Limbic_Region> cmarcelo - fwiw, they did decide to remove it as it is in the extralibs

[19:09] <gaal> TreyHarris: still works :)

[19:09] <TreyHarris> still segfaulting me.  dunno how to write a test for it though

[19:09] <cmarcelo> Limbic_Region: i just saw it.. well, i gotta go, but people in #haskell can help you building the extralibs...

[19:10] <Limbic_Region> k

[19:10] <Limbic_Region> will wander over there

[19:11] <gaal> bbiab

[19:12] <svnbot6> r12931 | gaal++ | * Pugs.Parser: parse out sigils for labels correctly, and some cleanups.

[19:14] <cmarcelo> bbl &

[19:17] *** onsen joined
[19:17] <TreyHarris> is there a pugs variable to tell me the GHC version?

[19:22] <gaal> no, but it's worth adding one :)

[19:23] <gaal> it could be done in PugsConfig.pm

[19:30] *** cm joined
[19:32] <gaal> :($x where {...} is elk)  -- legal? is the trait on $x or on the where constraint?

[19:33] <gaal> :($x is ro, is rw)   -- legal? is $x ro or rw?

[19:33] <gaal> (do commas separate traits?

[19:33] <gaal> )

[19:38] *** crem joined
[19:50] *** elmex joined
[19:51] <Limbic_Region> gaal - it appears no response in #haskell so I must go for the weekend

[19:51] <Limbic_Region> will likely pop back on from home

[19:51] <Limbic_Region> TTFN

[19:54] *** mdiep joined
[19:58] *** cm_ joined
[20:08] <gaal> Limbic_Region: a proper bug report (to the tracking system or via email) is pefered.

[20:08] <gaal> audreyt: Pugs.Val.Code.Param does not, I think, have a way to express the ::T in Dog ::T $fido.

[20:09] <gaal> zzZ&

[20:19] *** meppl joined
[20:22] *** ruz_ joined
[20:23] *** Limbic_Region joined
[20:25] *** arguile joined
[20:33] *** mauke_ joined
[20:39] <Limbic_Region> gaal ping

[20:39] <Limbic_Region> audreyt ping

[20:42] <svnbot6> r12932 | trey++ | Made a util/test_loh_segfault.pl to try to

[20:42] <svnbot6> r12932 | trey++ | nail down this list-of-hashes weirdness.

[20:42] <svnbot6> r12932 | trey++ | Please try it.

[20:43] <TreyHarris> please try the above and let me know if it's broken... if not, i'm going to post it to p6-u to try to collect some data

[20:43] * TreyHarris &'s for an hour or so

[20:48] *** mauke_ is now known as mauke

[20:52] *** ezraburgh joined
[21:01] *** justatheory joined
[21:02] *** scw joined
[21:06] * Limbic_Region gives up and decides to build GHC from source

[21:06] * Limbic_Region shakes his fist in the air first

[21:06] <cm_> on win32?

[21:07] <Limbic_Region> yes

[21:07] <Limbic_Region> the current binary build is b0rk

[21:07] <Limbic_Region> and I know why

[21:07] <cm_> awesome, are you gonna share the binaries once you're done? :D

[21:08] <Limbic_Region> cm_ - you can download the binaries from the net

[21:08] <Limbic_Region> unless you want today's binary build which is broke

[21:08] <Limbic_Region> I can't get any help on #haskell

[21:08] <cm_> GHC 6.6 / win32? where?

[21:08] <Limbic_Region> cm_ - no, that's the release candidate that's broke

[21:08] <PerlJam> Limbic_Region: starting work on Strawberry and Vanilla pugs?  ;)

[21:08] <Limbic_Region> you can get 6.5 though

[21:08] <Limbic_Region> PerlJam - not exactly

[21:09] *** crem_ joined
[21:10] <cm_> ah, hmm..

[21:12] <Limbic_Region> problem is that 6.6rc requires happy 1.15 to build

[21:12] <Limbic_Region> and there are only Win32 binaries for 1.13

[21:12] <Limbic_Region> which means I need to build happy from source

[21:12] <Limbic_Region> and that is proving to be a bit difficult

[21:13] <cm_> is happy using c?

[21:13] <Limbic_Region> no - ghc

[21:13] <Limbic_Region> circular dependency

[21:13] <cm_> can't you just build happy using an old ghc?

[21:13] <Limbic_Region> fortunately that's not a problem

[21:13] <cm_> 6.4

[21:13] <Limbic_Region> actually - 6.5

[21:13] <Limbic_Region> but yeah

[21:14] *** sili-babypuncher joined
[21:14] <Limbic_Region> but I am getting a "LALR.lhs:626:34: Not in scope: `bounds'"

[21:14] <Limbic_Region> so perhaps I am not going to build from source

[21:16] <sili-babypuncher> audreyt: present? i've got a problem trying to install Language::MzScheme: http://sial.org/pbot/19413

[21:16] <lambdabot> Title: Paste #19413 from "sili" at 65.119.25.146

[21:17] *** dolmen joined
[21:18] <sili-babypuncher> maybe it has something to do with me not being able to find a scheme.h

[21:18] *** lichtkind joined
[21:21] *** fglock_ joined
[21:24] *** DaGo joined
[21:36] *** integral_ joined
[21:40] *** fglock_ left
[21:41] *** integral_ is now known as integral

[21:55] *** markstos joined
[21:59] *** cjeris left
[22:08] *** takanori_ joined
[22:10] *** crem joined
[22:12] <svnbot6> r12933 | markstos++ | refine Regexes and Rules section in Differences.pod

[22:15] *** weinig|away is now known as weinig

[22:15] <svnbot6> r12934 | markstos++ | minor syntax fixes in Differences.pod

[22:40] <Limbic_Region> gaal ping

[22:40] <Limbic_Region> audreyt ping

[22:40] <Limbic_Region> cm_ ping

[22:55] *** xerox joined
[23:13] *** jferrero joined
[23:18] *** thomason joined
[23:19] *** thomason joined
[23:22] *** diakopter joined
[23:25] *** Lorn joined
[23:25] *** thomason is now known as athomason

[23:25] *** sili-babypuncher joined
[23:26] *** plisk_ joined
[23:27] *** Alias_ joined
[23:27] <Alias_> seen TimToady?

[23:28] <Alias_> (dammit when will you people get something that supports seen)

[23:28] <wolverian> ?seen timtoady

[23:28] <lambdabot> timtoady is in #perl6. I don't know when timtoady last spoke.

[23:28] <wolverian> well, that was useful

[23:28] <Alias_> ... and works

[23:28] <wolverian> he hasn't spoken here in a few days, or so.. not in my backlog anyway. sec

[23:28] <Alias_> Must be caught up at YAPC::EU

[23:29] <Alias_> ok, thanks

[23:29] <wolverian> 2006-08-31 13:35:38   TimToady : which is how you do a sublanguage...

[23:29] <wolverian> that's the latest entry in my log

[23:30] *** penk joined
[23:30] * Alias_ is trying to work out how to tell the different between C<   { a => 1 }  > and C< { print 'Hello World!' } > in Perl 5

[23:30] <Alias_> i.e. Telling an anon hash-ref from a block

[23:34] <diakopter> my guess is that it's assumed to be a block unless it could be parsed as either an empty hashref or a hashref with at least one pair.

[23:35] <Limbic_Region> audreyt - if you backlog - see http://paste.lisp.org/display/25124

[23:36] <Alias_> diakopter: The tricky bit is how does perl tell, and can I simulate it closely enough

[23:36] <Limbic_Region> I worked with #haskell to get Pugs to almost compile with the current binary distro (6.6 rc)

[23:36] <diakopter> a hashref will always be part of, or fully define a single expression, right?

[23:38] <diakopter> whereas a block can't appear inside of an expression, right?  unless its marked by sub or something?

[23:38] <diakopter> please excuse my naivete

[23:39] <Alias_> Well, more subtle

[23:39] <Alias_> Blocks can appear inside statements

[23:39] <Alias_> However a block on it's own is one variation of a "compound statement"

[23:39] <Alias_> Specifically, it is the smallest form of LABEL BLOCK continue BLOCK

[23:39] <Alias_> Where "compound statement" includes if and while and so on

[23:40] <Alias_> So C<  { print 1 }   > is quite different to C<    do { print 1 }    >

[23:40] <Alias_> The former, the block is the statement, the latter the block is within the statement

[23:40] <diakopter> okay, so control structure markers in addition to subs

[23:40] <Alias_> Because in the latter you can do { block } or do { block } etc

[23:41] <Alias_> It's more like do( sub { ... } )

[23:42] <Alias_> There's a lot of places something is a block, but not lexically significant

[23:42] <Alias_> grep { }

[23:43] <Alias_> et al

[23:47] *** plisk__ joined
[23:48] <diakopter> Alias_: are all the working perl golf submissions part of the PPI test suite ... heh.

[23:48] <Alias_> patches welcome

[23:50] <diakopter> Alias_: do the cpan's modules have metrics that indicate how much ram they use when loaded into various perls (mod_perl, etc)?

[23:51] <Alias_> No, and it will vary enormously

[23:51] <Alias_> And even with your version of Perl, as various structures change size

[23:52] <diakopter> well sure, but I mean with a mere "use"

[23:52] <Alias_> That requires compilation

[23:52] <diakopter> surely there's some kind of rough relative scale

[23:52] <Alias_> And has other issues, like do you count deps etc

[23:52] <Alias_> I do it by hand for a few of the ::Tiny modules

[23:52] <diakopter> i was imagining not counting deps.  exclusive usage.

[23:56] *** spoop joined
[23:57] *** azr|elious joined
