[00:12] *** iank joined
[00:12] *** rgs joined
[00:12] *** iank left
[00:26] *** macli left
[00:48] *** robkinyon joined
[01:05] *** f0rth_ joined
[01:08] *** khisanth_ joined
[01:09] *** khisanth_ is now known as Khisanth

[01:09] *** lao_ joined
[01:16] *** Bit-Man joined
[01:33] *** joepurl joined
[02:13] *** hexmode joined
[02:14] *** lumi joined
[02:32] *** xern joined
[02:49] *** justatheory joined
[02:59] <svnbot6> r9220 | fglock++ | * misc/pX/Common/iterator_engine_p6grammar.pl

[02:59] <svnbot6> r9220 | fglock++ | - working Perl 6 compiler - about 100 lines of code are now written in perl6

[02:59] <svnbot6> r9220 | fglock++ | - started a Prelude

[02:59] <svnbot6> r9220 | fglock++ |     say 'compiling Prelude';

[02:59] <svnbot6> r9220 | fglock++ |     sub infix:<+> { eval(' $_[0] + $_[1] ', :lang<perl5>); }

[02:59] <svnbot6> r9220 | fglock++ | - optimized rules - use Text::Balanced for implementing <literal> and <code>

[02:59] <svnbot6> r9220 | fglock++ | - 124 tests for p6rule.pl

[03:00] <svnbot6> r9220 | fglock++ | - note: spec change '$<>' to '$()' not applied yet

[03:17] *** mako132_ joined
[03:35] *** Shachaf joined
[04:00] *** aufrank joined
[04:00] <aufrank> hello all!

[04:00] <azuroth> hi frank

[04:02] <aufrank> if anyone has some reading time and is feeling docs-ish, I'd appreciate it if you'd commit fixes to the 'Variable scoping' section of Perl6/Overview.pod that I wrote today

[04:10] *** vborja joined
[04:11] * aufrank has to go to bed

[04:11] <aufrank> gnight!

[04:18] <azuroth> actually, what's with perl6/overview line 159... "say @mixed.elems; #last element, prints 1.23" ?

[04:22] *** ajs_home joined
[04:37] *** typonaise joined
[04:43] *** beppu joined
[05:00] *** kanru joined
[05:25] <ayrnieu> ?eval my @a = <a b c>; @a.elems

[05:25] <evalbot_9220> 3 

[05:25] <ayrnieu> ?eval my @a = <a b c>; say @a.elems

[05:25] <evalbot_9220> OUTPUT[3 ] bool::true 

[05:27] *** K joined
[06:09] *** Arathorn joined
[06:17] *** integral joined
[06:20] *** joepurl joined
[06:31] <GeJ> Morning all

[06:31] <ayrnieu> 'morning.

[06:34] <PerlJam> doesn't this channel ever sleep?  ;-)

[06:40] <azuroth> only when I'm not here

[06:40] <Kattana> Its always morning somewhere.

[06:41] <Kattana> ..Its everytime anytime.

[06:46] <szabgab> On the wiki of OSDC::Israel someone started to transcribe the opening Talk of Larry Wall

[06:46] <szabgab> with some help it could be finished in a few hours http://wiki.osdc.org.il/index.php/Main_Page

[06:47] <szabgab> exact link: http://wiki.osdc.org.il/index.php/Larry_Wall_-_Present_Continous%2C_Future_Perfect

[06:49] *** pdcawley joined
[06:59] *** fandango joined
[07:02] <ayrnieu> ?eval [<1 2>]

[07:02] <evalbot_9220> ["1", "2"] 

[07:02] <ayrnieu> ?eval my @a = <'a b' c>; my @b = <<'a b' c>>; [[@a], [@b]]

[07:02] <evalbot_9220> [["\'a", "b\'", "c"], ["\'a", "b\'", "c"]] 

[07:04] <ayrnieu> as neither Juerd nor SDF are likely to get back to me soon, I think I'll go drink a bit.  *wave*

[07:08] <ingy> audreyt++

[07:08] <ingy> ^^ wiki style development pioneer

[07:11] <obra> ingy: I like to call her the first "anarchitect"

[07:11] <miyagawa> anarchitect++

[07:11] <ingy> :)

[07:12] * ingy heads to $cafe on %scooter

[07:14] <obra> ingy: are you back in .tw?

[07:15] <ingy> obra: yeah

[07:15] <ingy> obra: do you give free commit bits on jifty?

[07:18] <obra> ingy: not yet.

[07:18] <obra> we'd like to see a patch or two first.

[07:18] <obra> "I'm not as cool as audrey"

[07:19] <ingy> or me

[07:19] <ingy> :p

[07:19] <obra> Fair enough

[07:19] * obra is uncool

[07:19] <obra> Just a boring business guy

[07:19] <ingy> just let go

[07:19] <obra> Need to hire more people. Then I can let go more

[07:20] <obra> <- hiring perl hackers and UI designers.

[07:20] <ingy> :)

[07:20] <ingy> &

[07:26] *** Aankhen`` joined
[07:27] *** jp-autar1 is now known as jp-autark

[07:27] *** TimToady joined
[07:27] *** r0nny_ is now known as r0nny

[07:28] <bd_> hm, does svn.openfoundry no longer run https?

[07:36] *** pdcawley joined
[07:49] *** fglock joined
[07:51] *** ghenry joined
[07:52] *** iblechbot joined
[07:54] <fglock> Hi! anyone around to discuss bootstrapping p6 grammar?

[07:56] <fglock> I've got this line: rule sub_decl { sub <ws> $fix := (infix|prefix|postfix) \: \< $id := (.*?) \> <ws>? <block> }

[07:56] <TimToady> fglock: I think we're most of us rather trashed from late dinner last night.  The auction went on a long time.

[07:57] <fglock> np - just in case someone reads the backlog...

[07:58] <fglock> and then I want to declare a sub - but the grammar was not compiled yet, it was only parsed

[07:58] <TimToady> In the long run foofix:<?> has to be something recognizable as a separate term, but I understand you're bootstrapping.

[07:58] *** marmic joined
[07:59] <fglock> so it needs to parse, compile, and continue parsing, right?

[07:59] <TimToady> Perl 5 arranges that any sub is callable as soon as it's defined.

[07:59] <fglock> ok

[08:00] <TimToady> Indeed, a BEGIN is just a special sub to Perl 5.

[08:01] <fglock> so as soon as a 'rule' is parsed it should be compiled. I'm simulating this by splitting the program in chunks and parsing/compiling each one separately

[08:03] <fglock> http://svn.openfoundry.org/pugs/misc/pX/Common/iterator_engine_p6grammar.pl - just in case. I'm aware there are errors in p6 syntax, but it mostly works

[08:03] *** shmar joined
[08:03] <shmar> lo all

[08:06] <webmind> good morning

[08:08] <fglock> TimToady: how about: rule sub_decl { sub ... { $().compile; return ... } }

[08:11] *** cookoo joined
[08:12] <TimToady> fglock: sorry, bit distracted getting ready to go out and sightsee in Jerusalem, so may have to bug out at any moment, but go on...

[08:12] *** drrho joined
[08:13] <TimToady> Hmm.

[08:13] <TimToady> That's telling a string to compile itself.  Seems a bit odd.

[08:14] <TimToady> It's also a bit strange to refer to the complete match via $() when you haven't finished matching...

[08:14] <fglock> not sure about the syntax, sorry - I mean, once there is a match, compile the ast

[08:15] <TimToady> One could do a temporary compile to stupid implementation, then recompile smarter at CHECK time.

[08:16] <fglock> like if it were just a sub prototype

[08:17] <TimToady> Yeah, ... kinda works that way already.

[08:17] <TimToady> Hopefully, one just re-uses the same compiler, but with more information.

[08:17] <TimToady> you don't really need two separate compilers, which would be bad policy anyway.

[08:18] <TimToady> The fuzz that can precompile needed bodies can presumably also be fuzzed into the

[08:19] <TimToady> runtime direction to do on-the-fly optimization.

[08:19] <TimToady> All a matter of knowing what's needed right now, and what you can get away with based on the current status.

[08:20] <fglock> mm - lazy compilation

[08:20] *** cookoo left
[08:20] <TimToady> CHECK time is just the most usual place to think about that.

[08:21] <TimToady> Obviously anything that changes the current grammar has to at least have its interface installed immediately.

[08:22] *** cookoo joined
[08:22] <fglock> TimToady: thanks!

[08:23] <TimToady> welcome

[08:29] *** Ara4n joined
[08:29] *** fglock left
[08:31] *** putter joined
[08:31] <TimToady> off to do the tourist thing.  tata

[08:32] <putter> bah. missed fglock.

[08:33] <putter> have fun.

[08:39] *** putter left
[08:40] <r0nny> yo

[08:52] *** Migo joined
[08:54] *** shmar joined
[09:11] *** Wassercrats joined
[09:12] <Wassercrats> I just know one of you.

[09:14] *** Wassercrats left
[09:18] *** rantanplan_ joined
[09:22] *** kane_ joined
[09:45] *** shmar joined
[09:50] *** lypanov joined
[09:58] *** lypanov joined
[10:07] *** chris2 joined
[10:07] <lypanov> morning chris2

[10:07] <lypanov> chris2: today my world power adaptor kit will arrive!

[10:07] <lypanov> shame about the errm.. lack of computer to use it for :P

[10:08] <chris2> hi lypanov ;)

[10:32] *** Aragone is now known as Arathorn

[10:33] *** nnunley joined
[10:38] *** pdcawley joined
[10:42] *** nnunley joined
[10:53] *** kanru joined
[10:56] *** feng joined
[11:36] *** KingDiamond joined
[11:48] *** KingDiamond joined
[12:01] *** kanru2 joined
[12:10] *** kanru2 is now known as kanru

[12:15] *** iblechbot joined
[12:31] *** pdcawley_ joined
[12:32] *** juerd joined
[12:32] *** juerd is now known as Juerd

[12:35] <rafl> Hello Juerd 

[12:36] <GeJ> greetings Juerd.

[12:36] <GeJ> hum, dunno if someone told you, but I think lilo was looking for an admin on feather yesterday.

[12:38] <Juerd> Hi

[12:38] <Juerd> GeJ: I see. Could be. I have lilo on ignore...

[12:42] <lypanov> lol

[12:42] <Juerd> What's so funny? :)

[12:42] <Juerd> Who doesn't ignore lilo... :)

[12:43] <lypanov> Juerd: the fact that the idea is sane ;)

[12:46] <mauke> oh, should I remove my "lol" filter?

[12:47] <mauke> I seem to be missing a line

[12:55] <Juerd>                        

[12:56] *** KingDiamond joined
[12:57] <Juerd> mauke: Any else missing?

[12:58] <mauke> no, thanks

[12:59] <lypanov> mauke: lol

[13:09] *** fglock joined
[13:10] <fglock> putter: pong

[13:13] <fglock> Juerd: cgi-irc in feather has stopped

[13:16] <fglock> Juerd: it may be a problem with https - wget gives 'SSL23_GET_SERVER_HELLO:unknown protocol'

[13:16] <svnbot6> r9221 | audreyt++ | * scratchpad with nothingmuch on designing piln desugaring for Code

[13:16] <svnbot6> r9221 | audreyt++ |   objects in order to run on p5 ObjectSpace

[13:18] <Juerd> Can't fix it now anyway, so you'll have to cope without

[13:20] <fglock> Juerd: np - I've just learned irssi :)

[13:22] *** kolibrie joined
[13:23] <audreyt> rehi from tel aviv airport

[13:24] <audreyt> going to fly to vienna, then duesseldorf, arriving at midnight, _then_ deliverying two talks starting from tomorrow morning

[13:24] <rgs> german perl workshop ?

[13:24] <audreyt> yeah

[13:24] <audreyt> fglock++ # woot, compiler!

[13:25] <rgs> please hug Nicholas for his pumpkinging then

[13:25] <audreyt> will do!

[13:25] <audreyt> boarding in 6mins... bbiab. :)

[13:25] <fglock> audreyt: hi! I'd appreciate a code review, specially in the part written in p6

[13:26] <audreyt> will definitely do it during flight

[13:26] <fglock> thanks! p6grammar.pl is the main file

[13:27] <audreyt> I look forward to turn the much normalized p6 parsing as committed by recent Synopses to this

[13:27] <audreyt> but I need to run now. will sync back tonight

[13:27] * audreyt waves &

[13:27] <fglock> that's S05? link?

[13:28] <audreyt> it's all in Perl6::Bible

[13:28] <audreyt> see p6l for my commit logs

[13:28] <audreyt> and larry's

[13:28] <fglock> ok! have a nice trip!

[13:28] <audreyt> mostly, "my $f = sub x {...}" (without trailning newline) is valid

[13:28] <audreyt> also much clearer macro rules

[13:28] <audreyt> and import rules

[13:28] <audreyt> so "use" and "BEGIN" can be written as macros relatively easily

[13:28] <audreyt> will journal about htem

[13:28] *** alexe joined
[13:34] *** KingDiamond joined
[13:46] *** gaal joined
[13:46] <gaal> audreyt: will have had a nice flight!

[13:47] <lypanov> hehe

[13:48] <Juerd> rafl: Try again

[13:48] <rafl> Juerd: Same IP address?

[13:49] <Juerd> I think so.

[14:05] <Juerd>               

[14:06] <Juerd> That happens every time I come out of suspend...

[14:06] <Juerd> I don't know why.

[14:06] <rafl> Stop suspending then.

[14:06] <Juerd> Give me your charger, then.

[14:06] <rafl> Erm, no.

[14:06] <rafl> Get an 8-cell battery.

[14:06] <Juerd> Yeah, yeah

[14:06] <Juerd> I know

[14:13] * lypanov refrains from using his normal response "buy a mac"

[14:16] *** Qiang joined
[14:17] *** mauke_ joined
[14:31] *** fglock left
[14:37] *** juerd joined
[14:37] *** juerd is now known as Juerd

[14:38] *** GeJ joined
[14:45] *** GeJ joined
[14:47] *** hexmode joined
[14:49] *** nothingmuch joined
[15:05] <nothingmuch> morning

[15:06] *** alexe left
[15:08] <anatoly> morning

[15:09] <anatoly> actually, why morning? :)

[15:09] <webmind> it's afternoon here

[15:09] <anatoly> yep, here too

[15:09] <webmind> well, good afternoon then :)

[15:09] <anatoly> right, good afternoon :)

[15:10] <anatoly> turning evenegish though, and then it'll be a good evening, I guess?

[15:12] *** justatheory joined
[15:14] <nothingmuch> yeah, you could say it's evening

[15:14] <nothingmuch> gaal: ping

[15:14] <ingy> hi nothingmuch 

[15:15] <nothingmuch> ingy: please release Spork::Formatter::Kwid

[15:15] <nothingmuch> Spork tests fail on account of it not being a dep

[15:15] <nothingmuch> and adding it as a dep won't work, since it doesn't exist

[15:16] <ingy> mmmm Spork

[15:17] <ingy> hmm that's near the top of my inifinite todo list

[15:17] * lypanov came back from his first trip to the states with a spork

[15:17] * lypanov was most happy

[15:18] <nothingmuch> at the OSDC dinner we ate with sporks

[15:20] * lypanov grins

[15:22] *** Sandrina joined
[15:23] <gaal> nothingmuch: pong

[15:23] <gaal> I got your stuff

[15:23] <nothingmuch> goodness

[15:23] <nothingmuch> i also dropped my phone somewhere on the way to the train station

[15:23] <gaal> eep

[15:23] <nothingmuch> so i'll be dropping by for a visit say saturday

[15:24] <gaal> cool, i think i'll make pizza and also invite bsb and lumi over

[15:24] <gaal> we can have an afterparty :)

[15:24] <gaal> what's svk for "svn st", from my local wc to the upstream?

[15:25] <nothingmuch> huraah

[15:25] *** fglock joined
[15:27] <lypanov> gaal: i just use svn di /trunk .

[15:27] <nothingmuch> hola fglock 

[15:29] <gaal> lypanov: "path /trunk is not a checkout path."

[15:29] <lypanov> gaal: sorry thats your umm.. forgot the name. your um... thingy

[15:31] <fglock> nothingmuch: hi!

[15:31] *** mauke_ is now known as mauke

[15:32] *** vel joined
[15:34] * fglock looks for what to do next

[15:38] <svnbot6> r9222 | gaal++ |  r9243@sike:  roo | 2006-03-01 16:46:12 +0200

[15:38] <svnbot6> r9222 | gaal++ |  * Some last cleanups to Peek talk. Online at

[15:38] <svnbot6> r9222 | gaal++ |    http://perlcabal.org/~gaal/peek/start.hml

[15:46] <anatoly> moose, gaal

[15:50] <GeJ> gaal: I get a 404 on the URL

[15:51] *** robkinyon joined
[15:54] *** kanru joined
[15:57] <nothingmuch> seen luqui?

[15:57] <jabbot> nothingmuch: luqui was seen 31 days 8 hours 10 minutes 27 seconds ago

[15:57] <nothingmuch> ugh

[15:57] <nothingmuch> his mail bounces, too

[15:57] <nothingmuch> gaal: btw, i am renaming OSDC to ØSDC

[15:58] <nothingmuch> please help me hack gabor's server

[16:01] <Arathorn> zero source? :D

[16:07] <nothingmuch> 2haha

[16:07] <nothingmuch> • [syeeda:~] nothingmuch % cd /tmp/

[16:07] <nothingmuch> • [syeeda:/tmp] nothingmuch % mkdir foo

[16:07] <nothingmuch> mkdir: foo: File exists

[16:07] <nothingmuch> • [syeeda:/tmp] nothingmuch % mkdir moose

[16:07] <nothingmuch> mkdir: moose: File exists

[16:12] <svnbot6> r9223 | fglock++ | iterator_engine - implemented '??' quantifier

[16:21] <gaal> rehi

[16:21] <gaal> s/hml/html/ in that URL

[16:22] <gaal> hey toly!

[16:27] *** r0nny joined
[16:32] <anatoly> hey gaal

[16:39] <svnbot6> r9224 | fglock++ | iterator_engine - implemented <?non_capturing_subrule>

[16:43] * nothingmuch is avoiding his sister

[16:43] <nothingmuch> she doesn't know we bought her an ipod for her birthday

[16:43] <nothingmuch> and now she wants me to burn her CDs

[16:43] <nothingmuch> ;-)

[16:45] <Juerd> In a talk here ("What's wrong with Parrot and Perl 6"), one major argument is that there are 0 lines of code yet for Perl 6.

[16:46] <Juerd> This ignores pugs, this ignores the 35000+ lines in unit tests...

[16:46] <Juerd> I don't even know how to begin to react to that...

[16:46] <Juerd> And then, it discusses pugs...

[16:46] <Juerd> Ah well, Audrey will convince the audience tomorrow :)

[16:47] <fglock> about rules: <!abc> is a negation of '<abc>' or 'abc' ?

[16:47] <kolibrie> nothingmuch: burn one or two, just so she doesn't get suspicious

[16:48] <lypanov> Juerd: lol

[16:48] <nothingmuch> kolibrie: the surprise party is saturday

[16:48] <nothingmuch> i told her my itunes is broken and that we'll do it saturday or something instead

[16:48] <lypanov> hehehe

[16:48] <kolibrie> nothingmuch: :)

[16:48] <Juerd> fglock: Probably :)

[16:48] <nothingmuch> Juerd: hehe

[16:49] <nothingmuch> Juerd: whose giving the talk?

[16:49] <Juerd> nothingmuch: Marc Lehmann

[16:49] <Juerd> Assuming "Who's"

[16:49] <nothingmuch> i was speaking inglesit

[16:49] <Juerd> Argument: "Weak typing != Strong typing", "Developers are biased to strong typing, as you can see in the many examples."

[16:50] <nothingmuch> who giving the talk belongs to?

[16:50] <Juerd> Ignoring that weak typing, and anything in between strong and weak typing, is still possible.

[16:50] <nothingmuch> uh

[16:50] <nothingmuch> is he against weak typing?

[16:50] <nothingmuch> or for it?

[16:50] <Juerd> For it.

[16:50] <Juerd> Or so is my interpretation

[16:51] <Juerd> Current bashing: "-> becomes ., like the rest of the world uses".

[16:51] <nothingmuch> okay

[16:51] <Juerd> Memo to all: no pun in documents...

[16:51] <nothingmuch> err

[16:51] <nothingmuch> perl 6 *has* strict typing

[16:51] <nothingmuch> is he giving a perl 6 sucks talk without having read the synopses etc?

[16:52] * fglock types on a weak keyboard

[16:53] <Juerd> Argument wrt the dot: java versus prel

[16:53] <Juerd> perl

[16:53] <nothingmuch> hahahaha

[16:53] <Juerd> "Why does it have to look like java?"

[16:53] * nothingmuch finds it borderline-pathetic that people are so hung up on syntax

[16:53] <Juerd> "Look at this lwall quote: C uses i++, while java uses system().foo().bar().i().value().please().increment();"

[16:53] <Juerd> This is FUD.

[16:53] <Juerd> There is no ground in this whatsoever.

[16:53] <Juerd> Moving from -> to . will *not* make $i++ go away.

[16:54] <nothingmuch> in fact

[16:54] <nothingmuch> did he notice that . is 50% of the length of ->?

[16:54] *** rantanplan_ joined
[16:54] *** TimToady joined
[16:54] <nothingmuch> that's like haviing i+ autoincrement ;-)

[16:54] <nothingmuch> TimToady: is there any draft on AG stuff i can read?

[16:54] <Juerd> nothingmuch: Yes, but that was not important.

[16:55] <nothingmuch> if not, i started writing a draft based on roles

[16:55] <nothingmuch> but i'd like a lexical form of 'but' first

[16:55] <nothingmuch> since that'll make it much nicer

[16:55] <Juerd> Argument: "The bless fundamentally incompatible thread didn't end in concensus, decision or implementation"

[16:55] <nothingmuch> maybe 'temp', actually

[16:55] <nothingmuch> err

[16:55] <Juerd> As if only measurable progress is progress...

[16:55] <nothingmuch> we still have bless

[16:56] <nothingmuch> it's just going to remain ugly and slow, is all

[16:56] <nothingmuch> are you arguing back?

[16:56] <Juerd> No.

[16:56] <TimToady> nothingmuch: not that I know of.

[16:56] <Juerd> What does "lueckenhaft" mean?

[16:56] * Juerd wants a dictionary that is text browser compatible

[16:56] <mauke> http://dict.leo.org/?search=lueckenhaft

[16:56] <mauke> oh

[16:56] <mauke> fragmentary, incomplete

[16:57] <nothingmuch> TimToady: is there a genral direction in which the tree processing stuff was going to grow? or is it already clear that it's going to be attribute grammarish

[16:57] <mauke> Juerd: works in w3m

[16:58] <Juerd> Ah

[16:58] <TimToady> I think AG is actually somewhat limited, but I'm not sure where to go from there.

[16:58] <Juerd> Title of slide "Who wants or needs Perl 6"?

[16:58] <Juerd> I immediately reacted "I do"

[16:58] <Juerd> "Why?"

[16:58] <Juerd> "Neat new features"

[16:58] <Juerd> "Like?"

[16:58] <Juerd> "@several"

[16:58] <Juerd> The reply to which was, more or less, but you don't *need* that.

[16:59] <Juerd> And: but with Parrot it won't be possible (one of the features I named was threading in a nice way)

[16:59] <nothingmuch> TimToady: i'll read the SYB article first

[16:59] <nothingmuch> it's supposed to be interesting

[16:59] <nothingmuch> IMHO ags are not very flexible

[16:59] <nothingmuch> but capture a specific form of processing very very well

[16:59] <Juerd> I'm considering giving my Perl 6 myths lightening talk tomorrow or the day after 

[17:00] <nothingmuch> Juerd: *sigh*

[17:00] <nothingmuch> i hope it helps (audrey, your lightning talk)

[17:00] <nothingmuch> i had a pretty lame talk at OSDC about compiling Perl 6

[17:00] <nothingmuch> and why I think it will work out in the end

[17:01] <Juerd> Most of this talk, though, is technical and against Parrot. I can't judge or argue that, but I think that in that he's right.

[17:01] <nothingmuch> things that Perl 6 will be able to do but that Perl 5 can't (too hard to hack guts, too few strong/static semantics)

[17:01] <nothingmuch> are his slides online?

[17:01] <fglock> TimToady: is <!abc> a negation of '<abc>' (or 'abc') ? is <!'abc'> right?

[17:01] <Juerd> I don't know

[17:02] <Juerd> "Perl 6 is blocking [Perl 5]"

[17:02] <nothingmuch> isn't the CPAN still growing polynomially?

[17:02] <Juerd> Most of his slides are citations, though

[17:02] <Juerd> The real remarks are in speech

[17:03] <nothingmuch> hmm

[17:03] <TimToady> <!'abc'> is short for <!before 'abc'>, though in this case the quotes don't do anything.

[17:03] *** Aankhen`` joined
[17:03] <TimToady> <!abc> just means treat fail if <abc> would succeed at this point.

[17:04] <TimToady> s/treat//

[17:05] <Juerd> "autoboxing, another neat word we took from Java"

[17:05] <nothingmuch> err

[17:05] <nothingmuch> java didn't have that for a long while

[17:05] <nothingmuch> and it reads "performance"

[17:05] <fglock> TimToady: ok

[17:05] <nothingmuch> it's completely non user visisble

[17:05] <nothingmuch> (except in java)

[17:05] <Juerd> These arguments are so irrelevant to the actual language that I can't argue with them.

[17:05] <Juerd> I'd need to research stuff.

[17:05] <Juerd> I hate this.

[17:06] <nothingmuch> ask him to put an IRC screen up

[17:06] <nothingmuch> i'll be happy to argue with him

[17:06] <nothingmuch> =)

[17:06] <Juerd> Nah, would take too long, I think.

[17:06] <Juerd> And the audience is German

[17:06] <nothingmuch> we had an IRC screen at OSDC

[17:06] <nothingmuch> during the auction

[17:06] <nothingmuch> loads of fun

[17:06] <Juerd> (All the English citations are (correctly) translated -- English in the slide, translated in speech)

[17:07] <Juerd> "?? !!" is questioned WITHOUT ANY DISCUSSION of why it is there.

[17:08] <Juerd> And without any discussion; next slide.

[17:09] <Juerd> Unicode characters would make the code unreadable.

[17:09] <Juerd> The point in the slide being "Code (un)readable?"

[17:10] <Juerd> "Who proves that the new operator works? Hm, well, pugs, maybe, but..."

[17:10] <Juerd> s/new operator/operator move around/

[17:10] <Juerd> Or however you'd translate that

[17:11] <nothingmuch> *sigh*

[17:11] <nothingmuch> Migo: what do you think of Perl 6's fudgery after a few days with it?

[17:11] <Juerd> Hm, finally a real argument

[17:11] <Juerd> Twigils are hard, and there's "twigilitis". This one I agree with.

[17:12] <nothingmuch> all twigils have a long form

[17:12] <Migo> nothingmuch: mixed filling. My first reaction was against "?? !!", against unicode, against haskel, whatever :-)

[17:12] <Juerd> "Buzzword compliant Microsoft vocabulary?"

[17:12] <nothingmuch> $*IN --> $GLOBAL::IN

[17:12] <nothingmuch> if he prefers that

[17:12] <Juerd> nothingmuch: See perlvar versus English.

[17:12] <Juerd> For reading code, you need to know them.

[17:12] <nothingmuch> i guess i can see that, but twigils have a sort of consistent feel to them

[17:13] <nothingmuch> and the variable *names* are typically good enough

[17:13] <Juerd> Agreed, but they do make things harder.

[17:13] <nothingmuch> Migo: what do you feel about this now that you have gotten to know more? http://svn.openfoundry.org/pugs/ext/Getopt-Process/lib/Getopt/Process.pm

[17:13] <Juerd> I think for good, he thinks for bad.

[17:13] <Juerd> That's just gut feeling.

[17:13] <Juerd> Now being bashed: STM and non-locking

[17:14] <nothingmuch> anyway, it sounds like he hasn't tried writing any

[17:14] <Juerd> But I don't understand it all.

[17:14] <nothingmuch> HHAAAAAAAAAAAAAAAAAAAAAAA

[17:14] <nothingmuch> he is arguing *for* threads?

[17:14] <nothingmuch> err

[17:14] <nothingmuch> locks

[17:14] <Juerd> I don't know

[17:14] <nothingmuch> okay

[17:14] <Juerd> "This is a neat feature. Do I need it? No."

[17:14] <nothingmuch> let him use forks

[17:14] <Juerd> I can only translate some of what he says.

[17:14] <Juerd> He doubts Parrot'll handle it, I think.

[17:15] <nothingmuch> frankly, i doubt parrot will handle it too, in it's current state

[17:15] <nothingmuch> it's seems prematurely optimized

[17:15] <Migo> nothingmuch: I am not really against "?? !!", unicode should be completely optional, haskel is ok in small amounts. :)

[17:15] <Juerd> Right, I agree with most of the parrot bashing.

[17:15] <nothingmuch> but that's not to say that it can't be fixed

[17:16] <nothingmuch> parrot is not a production target for anything

[17:16] <nothingmuch> they have lots of freedom

[17:16] <Juerd> "Why sponsor/grant only key developers?"

[17:16] <nothingmuch> and it *is* fast and featureful, so far

[17:16] <nothingmuch> yeah, i would love to get $2 a week for hacking perl 6 ;-)

[17:16] <Juerd> Well, parrot is not fast.

[17:16] <Juerd> He rightly argued against some much cited benchmarks

[17:17] <Juerd> That they are unfair. He then proposed a fair benchmark, and perl5 or gcc4 would win from parrot.

[17:17] <nothingmuch> well, i won't argue with that, i really haven't looked into it

[17:17] <nothingmuch> but i dunno

[17:17] <nothingmuch> Perl 6 could still run on Mono, CLR, JVM, Perl 5 optrees

[17:17] <Juerd> Right

[17:18] <nothingmuch> in fact, we are looking into compiling from pugs to Perl 5's optree right now

[17:18] <nothingmuch> that will not be any slower ;-)

[17:18] <nothingmuch> rgs said it'll be hard

[17:18] <nothingmuch> but probably not as hard as getting a production parrot

[17:18] <TimToady> depends on how much emulation you have to do, nothingmuch

[17:18] <nothingmuch> anyway

[17:18] <nothingmuch> TimToady: you mean for fast or for working?

[17:18] <nothingmuch> fast will not be easy, i buet

[17:18] <nothingmuch> bet

[17:18] <Juerd> "Every idea is welcome, like this [stupid] thing: if ... { } uncond { } cond { }"

[17:18] <TimToady> for fast.

[17:19] <rgs> hmm PIL to p5 opcodes ?

[17:19] <nothingmuch> TimToady: ofcourse

[17:19] <Juerd> As if that was even close to concensus.

[17:19] <nothingmuch> i'm mostly interested in stable and interoperable

[17:19] <nothingmuch> that's what i'm optimistic about

[17:19] <nothingmuch> and I am guessing that it'll be much faster than the current haskell runtime

[17:19] <nothingmuch> rgs: aye

[17:19] <nothingmuch> anyway, dinnertime

[17:19] <nothingmuch> then syb time

[17:19] <nothingmuch> then bsg time

[17:19] <rgs> nothingmuch: which perl 5 are you targetting by the way ?

[17:19] <rgs> syb ? bsg ?

[17:20] <rgs> you guys speak in english 6 ? :p

[17:20] <nothingmuch> rgs: i have no idea, i've just started poking around the perlguts in the hopes of finding optree stuff

[17:20] <nothingmuch> ;-)

[17:20] <nothingmuch> scrap-your-boilerplate - an article that's supposed to be a nice contrast to AGs

[17:20] <nothingmuch> (attribute grammars)

[17:20] <Juerd> I speak English 0.1

[17:20] <Juerd> Beta.

[17:20] <Juerd> (c) Google

[17:20] <nothingmuch> bsg: battlestar galactica

[17:20] <nothingmuch> we need a purl here

[17:20] <nothingmuch> syb?

[17:20] <nothingmuch> bsg?

[17:20] <nothingmuch> that would have worked more easily =)

[17:21] <nothingmuch> anyway, ttyl

[17:21] <rgs> see you

[17:21] <nothingmuch> Juerd: please mock him publicly saying he looks like a fake møøse, and send my warmest regards to balas and audrey

[17:21] <Juerd> Ah, nice. Discussion. Leo versus Marc

[17:21] <rgs> TimToady: do you have an opinion on that PIL to P5 ops thing ?

[17:21] <Juerd> afk

[17:22] <rgs> need really to "make peephole optimizer optional" I think, for that to be easier to hack

[17:22] <TimToady> It would be easy to make it bug compatible with P5.  :-)

[17:22] <Juerd> Unfortunately I don't understand much of the kind of German that Leo speaks :(

[17:22] <rgs> bug compatibility, you're speaking like a maint pumpking ! :)

[17:23] <Juerd> To me, it sounds like a combination of Scandinavian and German :)

[17:23] <mauke> where is he from?

[17:23] <rgs> with some parrot assembly thrown inside for good measure

[17:23] <Juerd> .at

[17:23] <mauke> haha, good luck

[17:23] <svnbot6> r9225 | fglock++ | iterator_engine - implemented <!negated_subrule>

[17:24] <rafl> Juerd: Shall I translate for you?

[17:24] <Juerd> I just hear "aonhu sehuantoheu snthaoeunthaeous nthaosnetu haoeu benchmarks aoeunsthaenuth aonethsnthoe just in time compiler aoesunthntehonethusnth compiler oaenuhnshnh compile time snthnthoeunt"

[17:24] <Juerd> rafl: Feel free

[17:25] <rgs> Juerd: at least you got the idea :)

[17:27] <Juerd> Why does he say "und so weiter, und so (vort?)"

[17:27] <Juerd> (both)

[17:27] <mauke> fort

[17:27] <mauke> usw. usf.

[17:27] <Juerd> Is that an idiom, to have both?

[17:27] <mauke> yes

[17:28] <Juerd>  Isee

[17:29] <mauke> "und so fort" doesn't even exist by itself

[17:29] <Juerd> I see

[17:29] <Juerd> I knew usw

[17:29] <mauke> leo translates it as yada-yada-yada :-)

[17:29] <Juerd> We have enz ("En zo voort") in Dutch

[17:30] <mauke> nice

[17:30] <fglock> TimToady: does '<word> & <short>' means the match must be a short word?

[17:34] <Juerd> Nicholas enters the stage.

[17:34] <Juerd> Ahhh, english. Good.

[17:34] * rgs applauses

[17:35] <TimToady> fglock: it means the two subrules must match with the same length.

[17:35] <spinclad> in english we sometimes have 'and so forth, and so on', which is likewise redundant

[17:35] <TimToady> (over the same string)

[17:36] *** mj41_ joined
[17:37] <spinclad> Juerd: I spoke with lilo about feather, referring him/her to you (ha, what did I know?) for the real story.  He/she was seeing a lot of access from feather, asked about CGI, I didn't know of any (wrong again).  He/she may have blocked cgi-irc from feather now?  (Otoh that doesn't seem to match fglock's symptom earlier.)

[17:37] <Juerd> spinclad: Could be.

[17:37] <Juerd> spinclad: I'll talk to him as soon as I can.

[17:38] <Juerd> spinclad: It'll probably be easily resolved if he knows that only authenticated users can access.

[17:38] <spinclad> Juerd: I did mention that.

[17:38] <Juerd> I see

[17:39] <spinclad> (but not about CGI, of course)

[17:39] <Juerd> What was his stance?

[17:40] <spinclad> he didn't answer back after I braindumped what I knew of #irc access on feather (typically ssh -> screen -> irssi)

[17:40] <Juerd> Okay.

[17:40] <Juerd> Thank you for letting me know in detail. I appreciate it.

[17:40] <spinclad> np, glad to help, glad to not make things worse i hope

[17:41] <Juerd> We'll see.

[17:41] <Juerd> I think that aside from his global message spamming inclination, lilo's a reasonable guy.

[17:42] <Arathorn> nothing wrong with global message spamming :D

[17:42] <spinclad> too much is wrong but his level doesn't happen to bother me

[17:42] <Juerd> spinclad: It used to be tenfold as much.

[17:43] <spinclad> that would be much then.

[17:51] <nothingmuch> http://lambda-the-ultimate.org/node/1332

[17:55] <rgs> http://lambda-the-ultimate.org/node/1313 was interesting too

[17:55] *** salty-horse joined
[17:56] * nothingmuch pushes to todo list

[17:56] <nothingmuch> ;-)

[17:56] <nothingmuch> back to syb

[17:56] *** dduncan joined
[18:15] *** putter joined
[18:16] *** Shachaf joined
[18:17] *** salty-horse left
[18:23] * putter surfaces from perlguts, attempting to use the regexp hooks bsb++ turned up to swap in an alternate engine.  that part (sort of) works.  but setting up the regexp struct so $1,etc get set, even if you ignore leaking, blech.   But ingy++ for Inline::C.

[18:25] <Steve_p> That's just crazy

[18:29] <gaal> rehi

[18:30] <fglock> putter: hi!

[18:30] <putter> hi fglock

[18:33] <putter> re crazy, it should actually be straightforward.   two hooks, regcomp and regexec.  comp creates a regexp struct which wont get optimized away (// works for my old 5.8), and overwrite a non-essential field in it with the pointer you wish to pass from comp to exec.  in exec, do whatever, and set up the the capture offsets.  only the captures arent showing up. :(

[18:33] *** chihchun left
[18:33] <putter> and xs is having some funky issues calling a sub defined in one module but accessed via CORE.

[18:35] <fglock> (I'm intermittent - meeting)

[18:35] <putter> :)

[18:36] <fglock> putter: regex is compiled to bytecode, right? does generating bytecode let you access more basic/useful routines, perhaps?

[18:43] <fglock> putter: did you see the latest i_e_p6grammar.pl?

[18:43] *** Arathorn is now known as Aragone

[18:43] *** KingDiamond joined
[18:48] *** shmar joined
[18:48] <shmar> lo all

[18:52] <gaal> hey shmar 

[18:54] <fglock> putter: http://perl.plover.com/Rx/paper/

[19:15] *** levengli joined
[19:16] *** levengli left
[19:24] *** gaal joined
[19:33] *** draconit joined
[19:42] *** cookoo left
[19:45] *** DavidCraft joined
[19:46] *** DavidCraft left
[19:50] *** samuel joined
[20:01] *** putter joined
[20:04] *** samhain1138 joined
[20:08] <putter> re bytecode, it's basically replacing the C function which does the regexp search, and (with the unclear but possible assistance of other parts of perl:( ), sets up the match values.  So it should simply be a matter of copying out that functionality.  But this is perlguts, which makes the simple incomprehensible. ;)

[20:09] <putter> re Rx, neat! thank you.  added to the (mostly doc about what isnt working) file I'm about to commit (and then perhaps abandon).

[20:10] <putter> re latest grammar, probably not the latest.  looking...

[20:17] <putter> fglock: neat :)

[20:33] <putter> oh, fribble.

[20:33] <svnbot6> r9226 | putter++ | misc/pX/Common/Regexp-ReplaceEngine.pm created.  Perl5 has hooks to permit interception of regexp compilation and execution.  This is an attempt to use them.  No-one really has yet.  The objective is  perl -we 'qr/a normal regexp/; {use Regexp::Perl6; qr/<ws>?<word>/}'.  Extensive comments included.  Callbacks to &regexp_hook_exec,etc subs work.  Next big step is getting $1,etc to work.  Volunteers encouraged.  It is written in Inline:

[20:34] <putter> And a big  bsb++  for turning up the hooks.

[20:34] *** amnesiac joined
[20:35] <putter> Hmm.  There is a line length limit in svnbot.  Have to remember that.  The rest of the log reads: It is written in Inline::C, and would deploy as a cpan XS module.

[20:36] <putter> ingy++ # Inline::C

[20:43] *** SamB joined
[20:48] <svnbot6> r9227 | putter++ | Regexp-ReplaceEngine.pm: Added link to bsb's pure-perl $1,etc setter, and a "Risk" that a source filter using it might be an easier way to go.

[20:50] *** cdpruden joined
[20:50] *** larsen joined
[20:55] *** vborja joined
[21:17] *** Arathorn joined
[21:35] *** DesreveR joined
[21:43] *** frederico_ joined
[22:45] *** DesreveR is now known as r0n|mess

[23:17] *** pdcawley joined
[23:30] <mauke> < Yaakov> I think perl6 should be spec'd in French, the Lingua Franca of programming language specification.

[23:37] <svnbot6> r9228 | rootmj++ | * probably fixed

[23:38] <mauke> wow, that was fast

[23:39] <mj41_> examples/tutorial_gen/ probably fixed :-) ... good night

[23:42] *** elmex joined
[23:43] <svnbot6> r9229 | putter++ | Move Regexp-ReplaceEngine.pm from Common to Aside as insuffiently interesting.

[23:43] <svnbot6> r9229 | putter++ | Variable interpolation happens before the regexp compiler hook gets the pattern.So while this hook approach is fine for creating say a reentrant p5 engine, even one with rules, it can't handle p6 regexps with variables correctly.

[23:45] *** jalex joined
[23:49] *** xinming joined
