[01:05] *** cmarcelo joined
[01:08] *** Limbic_Region joined
[01:18] <wolverian> heh, a friend is none too happy that perl still isn't ditching the old dual type system in favour of return type mmd :)

[01:24] <wolverian> he hates implicit flattening, because he thinks it makes people too lazy to really think about their data structures

[01:25] *** frederico joined
[01:36] *** enantiodrome joined
[02:11] *** PolettiX joined
[02:13] *** PolettiX joined
[02:16] <wolverian> > 2/5

[02:16] <wolverian> er

[02:16] <wolverian> ?eval 2/5

[02:16] <evalbot_9946> 2/5

[02:16] <wolverian> ?eval 2/4 + 2/3

[02:16] <evalbot_9946> 7/6

[02:24] *** PolettiX joined
[02:26] *** PolettiX is now known as froh-doh

[02:49] *** frodo72 joined
[02:49] *** r0nny joined
[02:49] *** frodo72 is now known as PolettiX

[02:52] *** PolettiX is now known as frodo72

[02:53] *** mako132_ joined
[03:08] <svnbot6> r9962 | geoffb++ | Added a new question directly to Capture.pod as per Audrey's request

[03:09] <geoffb> That was surreal.  I committed, turned around to do something else, and my computer was beeping at me with a new message addressed to me.  Of course, it was just the svn bot ....

[04:31] *** coumbes joined
[04:38] <PerlJam> geoffb: I think the example is flawed.

[04:38] <geoffb> PerlJam, fair enough.

[04:41] <PerlJam> What's the thing called that Captures map to in a subroutine call?  Is there a "Signature" object?

[04:42] <PerlJam> Captures are about arguments, what deals with parameters?

[04:50] *** cmarcelo left
[04:53] <gaal> PerlJam: yes, it's called precisely that.

[04:54] <pmichaud> hello, pj

[04:55] <PerlJam> hey pm.  I see you've been busy :)

[04:57] <pmichaud> yes,  unfortunately I took a detour today and refactored the operator precedence parser a bit

[04:57] <pmichaud> (perhaps a bit much)

[04:57] <pmichaud> otoh, the opp spec is much easier to read than the PIR code I used to have

[05:00] <PerlJam> OPTable.pir looks *nothing* like I remember it  :)

[05:03] <PerlJam> Then again, most things look nothing like I remember them. (in parrot and in pugs)

[05:03] <PerlJam> Things change quickly

[05:07] <gaal> geoffb: I think you're on to something :)

[05:07] <gaal> (r9962)

[05:09] <PerlJam> gaal: Just that the example is wrong.

[05:11] <gaal> there may be something missing in the API, since you can't introspect optional bindings from without the function that declares them.

[05:13] <gaal> iow: if you write very introspective code that takes functions and Captures, you have to query both if you want to know which variables will be in scope inside the function.

[05:14] <gaal> which probably even makes sense, but could be a gotcha.

[05:14] <gaal> I don't know if the association between Captures and Signatures is fully fleshed out yet.

[05:14] <pmichaud> perljam: the biggest place to see the change is in languages/perl6/lib/grammar_optok.pge (which defines the tokens for the operator precedence parser)

[05:15] <pmichaud> perljam: (svn up to get r12269)

[05:16] <PerlJam> gaal: It seems to me that Signatures are templates, and Captures fill them and that's about all there is to it.

[05:17] <PerlJam> gaal: though I'm not sure if there shouldn't be an object that represents a "filled in" Signature (i.e. the combination of Signature and Capture)

[05:17] <PerlJam> (and boy Capture sure seems like a weird name!)

[05:17] <pmichaud> perljam:  so far nobody has come up with a better one, I fear

[05:20] <gaal> PerlJam: @_ from within a function :)

[05:20] <gaal> I don't think it necessarily deserves a class of its own.

[05:20] <gaal> because it behaves like a Capture

[05:22] <gaal> $work &

[05:22] <svnbot6> r9963 | gaal++ |  r10007@sike:  roo | 2006-04-16 08:21:25 +0300

[05:22] <svnbot6> r9963 | gaal++ |  * FAQ::Capture - trivial cosmetic reflow to keep long lines

[05:22] <svnbot6> r9963 | gaal++ |    from being eaten on the web rendition.

[06:11] *** ardder joined
[06:17] <svnbot6> r9964 | gaal++ |  r10009@sike:  roo | 2006-04-16 09:13:42 +0300

[06:17] <svnbot6> r9964 | gaal++ |  * FAQ::Capture - method delegation. hw !! 3

[06:57] *** nnunley joined
[07:02] *** Quell joined
[07:06] <gaal> audreyt: ping

[07:12] *** q[uri] joined
[07:13] *** Aankhen`` joined
[07:21] *** elmex joined
[07:31] *** _mjk_ joined
[07:38] *** drrho joined
[07:42] *** ghenry joined
[07:53] *** cognominal joined
[08:04] <cognominal> audreyt++ # your blog is invaluable

[08:23] *** manbou joined
[08:35] *** larsen joined
[08:39] <xinming> So $x = @y does not mean $x = \@y anymore. What does it mean then?

[08:40] <xinming> anyone would explain this for me? I don't understand what It said in audreyt's blog... :-/

[08:47] <gaal> xinming: reading it together with the question preceding it may help

[09:03] *** iblechbot joined
[09:21] *** _bernhard joined
[09:50] <meppl> guten morgen

[09:57] *** chris2 joined
[10:34] *** larsen joined
[10:51] *** siosiosios joined
[10:54] * ruz coudln't build pugs :( http://paste.husk.org/5518

[11:00] <arcady> that's an odd message

[11:00] <arcady> have you tried a clean build and the like?

[11:24] <TreyHarris> ?eval ~localtime

[11:24] <evalbot_9946> "<obj:Time::Local>"

[11:25] <TreyHarris> that's odd.  shouldn't localtime stringify into a human-readable date?

[11:25] <TreyHarris> ?eval +localtime

[11:25] <evalbot_9946> Error: cannot cast from VObject (MkObject {objType = (mkType "Time::Local"), objAttrs = <ref>, objOpaque = Nothing, objId = 52}) to Double (VNum)

[11:28] <ayrnieu> ?eval "" ~ localtime

[11:28] <evalbot_9946> "<obj:Time::Local>"

[11:31] <gaal> TreyHarris: it probably should, but the coercion hasn't been written yet.

[11:32] <gaal> in the mean time you can do

[11:32] <gaal> ?eval localtime().perl

[11:32] <evalbot_9946> "\\Time::Local.new((\"day\" => 16), (\"hour\" => 13), (\"is_dst\" => bool::true), (\"min\" => 33), (\"month\" => 4), (\"picosec\" => 138780000000), (\"sec\" => 3), (\"tz\" => 7200), (\"tzname\" => \"CEST\"), (\"wday\" => 1), (\"yday\" => 105), (\"year\" => 2006))"

[11:42] *** siosiosios is now known as DaGo

[12:18] *** nnunley joined
[12:23] *** chris2 joined
[12:24] *** iblechbot_ joined
[12:27] *** dakkar joined
[12:34] *** larsen joined
[13:09] *** cdpruden joined
[13:13] *** KingDiamond joined
[13:41] *** boobs joined
[13:41] <boobs> Yo !

[13:47] *** larsen joined
[13:52] *** enantiodrome left
[13:57] *** cmarcelo joined
[13:58] *** ruz joined
[14:01] *** pmurias joined
[14:01] <pmurias> hi

[14:18] <boobs> I just want fuck bad bitches

[14:43] *** larsen joined
[14:48] *** Odin- joined
[14:48] *** justatheory joined
[14:50] *** Khisanth joined
[15:04] *** weinig joined
[15:09] <ruz> arcady: make clean didn't help, I found this http://www.nntp.perl.org/group/perl.perl6.compiler/1327, such a change hides (fixes?) error, but later I get another similar

[15:15] <gaal> ruz: with the Syck stub, or another one? the patch described in that post is applied in the makefile.

[15:16] *** xinming joined
[15:25] <ruz> gaal: Syck

[15:26] <ruz> ok, now I tried to compile without embedding parrot or perl5

[15:26] <ruz> and it compiles with Beau's patch

[15:27] <ruz> but when I turno embedding I get errors, I could share them if you want

[15:31] *** autark joined
[15:35] *** xinming1983 joined
[15:40] <gaal> ruz: please rm -rf dist/src/Data/Yaml and 'make' again

[15:40] <gaal> no need for clean yet

[15:40] <gaal> eh, though switching from embed to non-embed does generally need clean

[15:41] <gaal> (you can probably get away without it by very selective cleaning of dist/, if you know exactly what you're doing.)

[15:41] *** stclare joined
[15:48] *** xinming joined
[16:03] *** lichtkind joined
[16:04] <lichtkind> hello

[16:04] <lichtkind> i found some little bugs in various docs like http://dev.perl.org/perl6/list-summaries/2006/p6summary.2006-02-07.html

[16:05] <dakkar> lichtkind: that's not a doc... that's a mailing list summary...

[16:06] <gaal> and it's from ancient history :-)

[16:06] *** cdpruden joined
[16:07] <lichtkind> :)

[16:08] <lichtkind> but nevertheless in http://svn.openfoundry.org/pugs/docs/getting_started i read that there is actually no real perl6 tutorial

[16:10] <dakkar> lichtkind: never seen one... want to write one?

[16:11] <lichtkind> im actually write one

[16:11] <lichtkind> am on chapter 5

[16:11] <lichtkind> thats why oim here all days :)

[16:12] <lichtkind> the downside for you is maybe that this tut is for the german perl-community.de aka de.perl.org

[16:12] <lichtkind> but i would translate it

[16:12] <lichtkind> when im done :)

[16:13] <lichtkind> if you know german its on http://wiki.perl-community.de/bin/view/Wissensbasis/Perl6Tutorial

[16:13] *** mako132_ joined
[16:15] <lichtkind> but i need to lern a lot more currently its too unacurate to be semiofficial

[16:19] <lichtkind> (1,2)¥(3,5)¥(9,8) == (1,3,9,2,5,8) ?

[16:20] <dakkar> ?eval zip(zip([1,2],[3,5]),[9,8])

[16:20] *** evalbot_9946 is now known as evalbot_9964

[16:20] <evalbot_9964> (1, 9, 3, 8, 2, undef, 5, undef)

[16:20] <dakkar> ?eval zip(zip([1,2],[3,5]),[9,8,7,6])

[16:21] <lichtkind> dont can evalbot Y?

[16:21] <evalbot_9964> (1, 9, 3, 8, 2, 7, 5, 6)

[16:21] <dakkar> ?eval (1,2)¥(3,4)

[16:21] <evalbot_9964> Error:  unexpected "\\" expecting term postfix, "#", operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input

[16:21] <dakkar> IRC quoting problems, I suppose...

[16:22] <lichtkind> ?eval (1,2)Y(3,5)Y(9,8)

[16:22] <evalbot_9964> (1, 3, 9, 2, 5, 8)

[16:22] <lichtkind> yeah

[16:22] <dakkar> ?eval zip([1,2],[3,5],[9,8])

[16:23] <evalbot_9964> (1, 3, 9, 2, 5, 8)

[16:24] <lichtkind> now i understand i always thought you can place zip between like Y

[16:25] <gaal> lichtkind: infix:<Y> ::= &zip

[16:25] <lichtkind> thanks :)

[16:31] *** SamB joined
[16:31] <svnbot6> r9965 | audreyt++ | * Capture.pod: expands the examples; revamped the section on single/multi dispatch versus method/sub calls

[16:34] *** jserv-- joined
[16:38] *** weinig is now known as weinig|out

[16:42] *** FurnaceBoy joined
[16:55] <audreyt> TimToady: pmichaud and I came up with an observation on a chunk in S02

[16:55] <audreyt>     macro quote:<qX> (*%adverbs) {...}

[16:55] <audreyt> Note: macro adverbs are automatically evaluated at macro call

[16:55] <audreyt> time if the adverbs are included in the parse.  If the adverbs are

[16:55] <audreyt> to affect the parsing of the quoted text of the macro, then the text must

[16:55] <audreyt> be parsed by the body of the macro rather than by an C<is parsed> rule.

[16:56] <audreyt> TimToady: it seems that having the macro body do the parsing is very klugy (and unspecced)

[16:56] *** mako132_ joined
[16:56] <audreyt> as it must receive out of band info about parse state and return updated position as an out-of-band info in addition to the AST.

[16:56] <audreyt> TimToady: an arguably far cleaner way is to make lexicals in the subroutine parameter svisible to the rules in the "is parsed" trait

[16:56] *** saorge joined
[16:57] <audreyt> macro quote:<qX> (:$adv1, :$adv2) is parsed /...some rule that makes use of $adv1 and $adv2.../ { ... }

[16:57] <audreyt> TimToady: sounds sane to you? if yes, S02 can get updated :)

[16:58] <gaal> audreyt: did you see the method delegation question in FAQ::Capture?

[16:58] <gaal> it's bound to be an actual faq

[17:03] <dakkar> how can a macro take parameters? by what rule would they be parsed?

[17:03] * dakkar starts looking at synopses

[17:05] *** _bernhard joined
[17:10] *** stclare left
[17:10] <audreyt> gaal: yes, see the commit

[17:14] <svnbot6> r9966 | audreyt++ | * Capture.pod: postulate that

[17:14] <svnbot6> r9966 | audreyt++ |     $arg = \($inv: $pos);

[17:14] <svnbot6> r9966 | audreyt++ |     $obj.meth(*$arg)

[17:14] <svnbot6> r9966 | audreyt++ |   means

[17:14] <svnbot6> r9966 | audreyt++ |     $obj.meth($pos)

[17:14] <svnbot6> r9966 | audreyt++ |   instead of an error.

[17:15] <audreyt> TimToady: hopefully you are okay with that (which agrees with how scalars behave, if we treat the inv as the scalar slot in the fat typoglobby capture) :)

[17:15] * audreyt waves goodnight &

[17:16] <gaal> audreyt: great, I like that semantic. night and thanks!

[17:18] <audreyt> :D

[17:28] <dakkar> argh... the 'quote' default parsing rule parses adverbial arguments right after the starting token? so that an eventual 'is parsed' trait on a 'quote'-type macro starts seeing characters only after the adverbs?

[17:33] <audreyt> dakkar: well, it's just speculative at this point... one may also do

[17:34] <audreyt> macro quote:<qX> ($adv1, $adv2, $body is parsed /.../) {...}

[17:34] <audreyt> provided that per-parameter "is parsed" is allowed.

[17:35] <dakkar> I'm having difficulty figuring out how the parser will manage...

[17:35] <audreyt> but I'd like things to stay simple, and defaulting quote: to parse adverbs uniformly seems like a win

[17:35] <dakkar> yes, definitely

[17:35] <audreyt> as indeed per-parameter is-parsed is quite difficult.

[17:36] *** bsb joined
[17:36] <audreyt> TimToady: last thing... would you mind if all the "invocant parameters" in multi dispatch is renamed to "tiebreaking parameters" or some other name?

[17:36] <audreyt> especially because we allow multilevel

[17:36] <audreyt> "multi-level tiebreaking" makes sense

[17:36] *** enantiodrome joined
[17:36] <audreyt> but "multi-level invocation" really doesn't, at least to me

[17:37] <audreyt> with this change, "invocant" can go back to mean what it means in p5, namely "self-tobe"

[17:37] <audreyt> (more details on my journal entry... bbl :)) &

[17:45] <Daveman> :)

[17:47] *** larsen joined
[18:17] *** cm joined
[18:26] <pasteling> "ruz" at 213.251.192.51 pasted "error with PUGS_EMBED="perl5" make" (19 lines, 1.6K) at http://sial.org/pbot/16763

[18:28] <gaal> ruz: did you run 'perl Makefile.PL' with that env set?

[18:30] <ruz> gaal

[18:30] <ruz> yep

[18:31] <ruz> full command is: 'make clean; PUGS_EMBED="perl5" perl Makefile.PL && make unoptimized'

[18:32] <pasteling> "ruz" at 213.251.192.51 pasted "error with 'PUGS_EMBED="parrot" perl Makefile.PL && make'" (4 lines, 220B) at http://sial.org/pbot/16764

[18:33] <ruz> I just paste it for those who knowns what is he doing :) cuz I don't yet

[18:34] <gaal> does that env propagate to the second command?

[18:35] <gaal> better export the setting and be safe.

[18:35] <gaal> what shell are you using?

[18:35] <ruz> no doesn't propagate I think

[18:35] <ruz> bash

[18:36] <gaal> I'm not sure, but it could be you need it set at make time and not just make generation time.

[18:37] * ruz 's trying

[18:43] *** nnunley joined
[18:44] <ruz> don't help

[19:11] <cognominal> audreyt: why editng a FAQ, editing the synopsis would not be saner?

[19:18] <cognominal> I have not read the backlog. but the Capture entity sonds like the siva pmc, I have proposed month ago. Is this intended to modelise tree nodes like ASTs or XML nodes as well?

[19:21] <cognominal> sorry I did not notice that the synopsus has been edited as well.

[19:21] <cognominal> audreyt++; TimToady++

[19:24] *** boobs left
[19:30] *** marmic joined
[19:35] *** mako132_ joined
[19:40] *** Odin- joined
[19:47] *** elmex joined
[19:53] *** KingDiamond joined
[19:55] *** elmex joined
[20:02] *** elmex joined
[20:04] *** elmex joined
[20:07] *** elmex joined
[20:09] *** elmex joined
[20:25] <pasteling> "ruz" at 213.251.192.51 pasted "[PATCH] for compiling with embedded perl5" (19 lines, 742B) at http://sial.org/pbot/16766

[20:27] <gaal> hey ruz, sorry for not responing eariler, was away. got a commit bit?

[20:27] <gaal> if not, /msg me your email please

[20:28] <gaal> or just say it here if you aren't registered on freenode and can't /msg

[20:30] <obra> gaal: msging you his address

[20:31] <gaal> ruz, thanks for the patch, an invitation letter is en route to your mailbox.

[20:31] <gaal> please commit :)

[20:31] <gaal> also, don't forget to add yourself to AUTHORS

[20:31] <gaal> and welcome aboard :)

[20:33] <gaal> and now if I can get up without distubing the cat asleep on my lap, I will go to sleep myself. see y'all :)

[20:33] <bsb> 'night gaal & foo

[20:35] <FurnaceBoy> n8

[20:40] *** elmex joined
[20:53] *** elmex_ joined
[21:08] *** mako132_ joined
[21:14] *** KingDiamond joined
[21:16] <buu> Hello happy people. Anyone happen to know off hand how I can increment a perl global from the perl source?

[21:23] <avar> use the eval routines in perlapi;)

[21:23] <avar> arg, #perl6

[21:25] <buu> =[

[21:28] *** dduncan joined
[21:33] *** justatheory joined
[21:55] <buu> Arfg. Fucking perl.

[21:58] <pmurias> sleep&

[22:07] *** vel joined
[22:13] *** mako132_ joined
[22:16] *** b_jonas joined
[22:23] *** avar joined
[22:27] <buu> Someone come debug my fucking perl.

[22:28] <arcady> perl's not for fucking!

[22:28] <arcady> maybe that's why it doesn't like you

[22:31] <buu> arcady: =[

[22:31] <buu> SvIV_set(foo,0); is segfaulting

[22:31] <buu> I'm trying to understand why.

[22:45] *** mako132_ joined
[22:47] *** b_jonas left
[23:01] *** FurnaceBoy_ joined
[23:18] *** elmex joined
[23:20] *** weinig|out is now known as weinig

[23:29] *** amnesiac joined
[23:31] *** frodo72 is now known as froh-doh

[23:33] *** khisanth_ joined
[23:35] <ruz> gaal: I havn't got any message from you.

[23:37] *** fglock joined
[23:41] <ruz> ? 0 or say "woot";

[23:41] <ruz> evalbot_9964: ? 0 or say "woot";

[23:42] <ruz> ?eval 0 or say "woot";

[23:42] *** evalbot_9964 is now known as evalbot_9966

[23:42] <evalbot_9966> OUTPUT[woot ] bool::true

[23:46] *** Khisanth joined
[23:55] <svnbot6> r9967 | fglock++ | PCR/PCP - minor fixes

[23:55] <svnbot6> r9968 | fglock++ | PG-P6 - parses the first 10 files in t/01-sanity

