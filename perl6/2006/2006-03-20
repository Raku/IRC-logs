[00:17] *** jisom joined
[00:21] *** fglock joined
[00:22] *** jisom_ joined
[00:36] *** premshree_ joined
[00:39] *** KingDiamond joined
[00:50] *** jisom_ is now known as jisom

[01:01] *** Nouk joined
[01:05] *** mako132_ joined
[01:10] *** dduncan joined
[01:17] <svnbot6> r9660 | fglock++ | pX/.../PCR - lexical subrules implemented, but PadWalker returns 'undef' (Windows bug?)

[01:24] *** b_jonas joined
[01:25] <fglock> PCR lexical subrules work fine in feather, but fail in Windows

[01:38] <svnbot6> r9661 | fglock++ | pX/.../PCR - cleanup debugging info

[01:38] *** justatheory joined
[01:47] *** justatheory joined
[01:48] *** GabrielVieira joined
[01:50] <svnbot6> r9662 | fglock++ | pX/.../PCR - shorter TODO

[01:50] <GabrielVieira> hello there

[01:51] <fglock> oi Gabriel

[01:51] <GabrielVieira> td bem flavio?

[01:51] <GabrielVieira> ops

[01:51] * GabrielVieira turned on english input :P

[01:52] <fglock> trabalhando a luz de lanterna aqui, lapto na bateria...

[01:52] <fglock> laptop

[01:52] <GabrielVieira> haha

[01:52] <GabrielVieira> serio?

[01:52] <GabrielVieira> faltou energia ou foi a conta? :P

[01:52] <fglock> yes (blackout)

[01:52] <GabrielVieira> humm

[01:52] <GabrielVieira> foda em

[01:52] <GabrielVieira> cascavel?

[01:53] <fglock> it was raining - no, Porto Alegre

[01:53] <GabrielVieira> hum

[01:54] <GabrielVieira> all the city?

[01:54] <GabrielVieira> or just your neighborhood?

[01:55] <fglock> I see no lights in 1km around

[01:55] <GabrielVieira> i was watching "Falcon, Sons of the trafic" on globo :D

[01:55] <GabrielVieira> humm

[01:55] <fglock> i was watching lord of the rings ...

[01:56] <GabrielVieira> i dont like the translated version ;~

[01:56] <GabrielVieira> just with legends or nothing else

[01:59] <GabrielVieira> fglock look at this http://noticias.uol.com.br/ultnot/efe/2006/03/19/ult1807u26877.jhtm

[02:01] <fglock> very OT, isn't it?

[02:02] <GabrielVieira> yep

[02:02] <GabrielVieira> i didnt know about that

[02:02] <GabrielVieira> :~

[02:03] <fglock> are you going to YAPC::Brasil?

[02:04] <GabrielVieira> not this year :/

[02:04] <GabrielVieira> maybe next one :D

[02:06] *** Lemgar joined
[02:13] *** mako132_ joined
[02:13] *** revdiablo joined
[02:13] *** jiing_ joined
[02:13] *** jiing joined
[02:13] *** mugwump joined
[02:13] *** SamB joined
[02:13] *** spo0nman joined
[02:13] *** knewt joined
[02:13] *** nnunley joined
[02:13] *** Khisanth joined
[02:13] *** PerlJam joined
[02:13] *** avar joined
[02:13] *** samhain1138 joined
[02:13] *** p5evalbot joined
[02:13] *** buu joined
[02:13] *** Aragone joined
[02:13] *** lisppaste3 joined
[02:13] *** hlen joined
[02:13] *** Lorn__ joined
[02:13] *** arcady joined
[02:13] *** LeTo joined
[02:13] *** Juerd joined
[02:13] *** audreyt joined
[02:13] *** azuroth joined
[02:13] *** theorbtwo joined
[02:13] *** rafl joined
[02:13] *** Southen joined
[02:13] *** Eimi joined
[02:13] *** kane__ joined
[02:13] *** hcchien joined
[02:13] *** tewk joined
[02:13] *** jdv79 joined
[02:13] *** scw joined
[02:13] *** qwacky joined
[02:13] *** pasteling joined
[02:13] *** rep joined
[02:13] *** s7n joined
[02:13] *** Odin- joined
[02:13] *** Steve_p joined
[02:14] *** fglock left
[02:38] *** xinming joined
[02:39] *** xinming joined
[02:43] <xinming> hi all, I'm in Kunming now. :-)

[03:13] <merlyn> where is kunming?

[03:21] <ayrnieu> http://worldfacts.us/China-Kunming.htm

[03:21] <ayrnieu> http://homepage.mac.com/johngoodman/

[03:23] <ayrnieu> http://www.maps-of-china.com/kunming-ow.shtml

[03:23] <merlyn> Oh.  somewhere in china

[03:23] <merlyn> someplace I'm not likely to go in the next ten years

[03:23] <merlyn> unless they decide they want the US. :)

[03:23] <ayrnieu> (better: http://www.maps-of-china.com/china-country.shtml)

[03:24] <merlyn> ... http://en.wikipedia.org/wiki/Kunming

[03:24] <merlyn> wikipedia++

[03:24] <ayrnieu> it needs a better map, though.

[03:25] <ayrnieu> well, you can squint at one of the maps on /China

[03:29] <merlyn> still - not likely I'll end up there.

[03:30] <merlyn> as bad as the US is getting for human rights, at least we aren't China. :)

[03:30] <ayrnieu> it's probably safer to be !chinese in China.

[03:30] <merlyn> Even a felon?

[03:31] <ayrnieu> what?  You're not a sex offender.

[03:31] <merlyn> True.

[03:31] <merlyn> I'm offensive during sex, sometimes. :)

[03:31] <merlyn> but that's not the same thing at all.

[03:47] <xinming> Hmm, the best introduction for kunming is there is no other seasons except spring. :-)

[03:49] <merlyn> too bad it's still "the land of the opposite of free"

[03:50] <merlyn> I am sad for 2 billion people

[03:50] <merlyn> but thankfully, this next rum and coke will help me forget that

[04:04] *** KingDiamond joined
[04:05] *** arusa joined
[04:06] <arusa> human rights? # http://www.thenation.com/doc/20051226/klein

[04:06] <arusa> oooops.....wrong channel ;)

[04:07] *** arusa left
[04:15] <ayrnieu> actually, right channel.

[04:15] <ayrnieu> making assumptions of that URL.

[04:34] *** masak joined
[04:54] *** amnesiac joined
[04:56] *** kisu joined
[05:08] *** elmex_ joined
[05:13] *** eric256 joined
[05:15] <eric256> hey....a bit OT but....lol...does anyone here know of a good photo tagging package?

[05:15] <eric256> it seems like there would be hundreds out there since digital photography is soo huge, and yet, i don't realy see much out there.

[05:16] <mugwump> eric256: f-spot

[05:16] <mugwump> has a nice gui, and it's in ubuntu

[05:16] <eric256> yea i saw f-spot but it is gnome only...should have mentioned i'm on windows ;)

[05:17] <mugwump> um.. flickr.com ?  :)

[05:17] <eric256> hehe yea if i want to upload my 20k pictures lol.  realy i should probably delete 19k but they are soo cheap to store...now if i could only find them agian

[05:19] <eric256> i was thinking though...if windows had a way to make links...a software could store all the pictures in one spot, then build fake directories where each directory was a key word and put links to all the pictures in each directory that matched there tags.  then just have it scan for real files being added, so i just put files into the right directories, and it pulls them into the archive and puts links in all the right spots.  hmm

[05:23] <ayrnieu> If you have 20k pictures, you'll need a mechanical turk just to tag them.

[05:23] <eric256> aint that the truth

[05:24] * eric256 starts windows counting his pictures out of curiosity

[05:24] <eric256> ahh a disappointing 6.7k  oh well. still quite a few.

[05:26] <diotalevi> Ah, eric256 reinvents the DB as a file system. :-)

[05:26] <ayrnieu> I recommend that you get to work on the turk, then, and process it in off moments -- or think of a way to distribute the processing (mainly, you want to protect yourself from chaotic tagging).

[05:26] <eric256> diotalevi if windows would come out with there filesystem that is suppose to handle this then life would be good. ;

[05:31] <diotalevi> eh. that's supposed to be vista. I've wanted this for linux for years.

[05:31] <eric256> should be easy on linux

[05:32] <eric256> as far as i can tell the scheme i just cooked up wouldn't even require a gui . for instance you save in \vacation\2005\ and in also shows up in \2005\vacation ;) and even in just \2005 or \vacation.   save in any directory and it automagicaly tags with all the directories as keywords.  hardest part is probably watching all the directories to see new additions and modify links/directories as needed

[05:36] <diotalevi> say, you know windows does symlinks, right?

[05:36] <ayrnieu> ... if you're already encoding the tags as directories, why watch directories and automatically tag things?

[05:37] <eric256> i've been reading on it yes. and it sort of does. ;) shortcuts arn't symlinks, but there are some utilities that do, but only for directories

[05:37] <eric256> ayrnieu because sometimes i'll be looking in 2005 and sometimes in vacations, and sometimes i want all pictures with both keywords

[05:37] <ayrnieu> eric - do you already have the images in the directories in this manner?

[05:38] <eric256> so the picture would need to show up in all those directories ;)  unless i figure out how you make your own folders like My network places and then I could code my own system

[05:38] <eric256> ayrnieu....maybe 50% ;) but not as detailed as i would like, becuase then it becomes hard to find a picture unless you know *all* of its tags

[05:39] <diotalevi> I think the Windows-ish way to do what you want is with one of those "this diretory works like a web page" things and you do some DHTML.

[05:39] <ayrnieu> eric - then you've already a significant headstart on a real solution.  A real solution might also make use of a local webserver.

[05:39] * FurnaceBoy_ (hearts) Flickr

[05:40] <ayrnieu> FurnaceBoy - eric256 doubts that it can handle his 6.5K images.

[05:40] <eric256> i've thought about both of those, but i want any program looking at the pictures DWIM and not see the underlying structure.

[05:41] <eric256> so my base picture folder would have one subfolder for every tag and all photos, then you narrow it down by choosing sub categories (and maybe pictures arn't visible till you choose at least one tag)

[05:47] <eric256> hehe windows has fsutil for creating hardlinks and hlscan to scan them...now to start work ;

[05:47] <eric256> )

[05:50] <spo0nman> eric256: you can write a script in 10 minutes.

[05:50] <spo0nman> eric256: for tagging and uploading to flickr.

[05:51] <eric256> spo0nman and how does that help me access them on my own computer?

[05:51] <eric256> flickr is nice and all, but i'm not real comfortable giving them all of my pictures to store and tag ;)

[05:51] <spo0nman> eric256: hmm ...

[05:52] <spo0nman> eric256:I work for them ... we are not evl.

[05:52] <spo0nman> :)

[05:52] <eric256> okay...still doesn't solve my problem lol

[05:53] <eric256> now if you have a local version coming out that convinces the normal windows FS that it is realy a tagged media album i'll be happy to use it

[05:53] <spo0nman> eric256:yeah! well you'd have to write a db thing in sqllite then.

[05:53] <spo0nman> eric256:you're on windows?

[05:53] <eric256> for this project ;)

[05:56] <eric256> i wonder if its easier to watch the directories for changes....or just scan periodicaly

[05:57] <ayrnieu> depends on the platform.

[05:57] <eric256> win xp ;)

[05:58] *** arcady joined
[05:59] <spo0nman> i would do a database with a simple schema photo->location photosids->tag-ids  tag->ids->tagname.

[06:00] <eric256> spo0nman that is not a hard part ;) the only think i'm working on is makeing a regular windows folder system pretend that it is actualy a media tagging system

[06:00] *** azuroth joined
[06:00] *** Southen joined
[06:01] <eric256> Win32::ChangeNotify will let me do the job. ;) now to figure out how to get it installed. lol. oddly ppm doesn't find it. probably screwed up my repos agian somehow

[06:01] <spo0nman> eric256: ah!

[06:13] *** mj41_ joined
[06:14] <eric256> now i've got all the peices and its time to sleep...bahh. liked it better when i could pull all nighters ;) wife would probably smack me if she woke up at 5am an i was still up. ;) later all

[06:20] *** eric256 left
[06:22] *** Southen_ joined
[06:23] *** particle_ joined
[06:29] <spo0nman> KingDiamond: Pfffff.

[06:31] <KingDiamond> audreyt: there?

[06:35] <audreyt> KingDiamond: I'm still massively jetlagged

[06:36] <audreyt> expect me to back to normal mental capacity in... I don't know, 24 hours or so :)

[06:48] <KingDiamond> audreyt: okay, np :-)

[06:53] *** GeJ joined
[07:00] <ayrnieu> how can I perform zero-width negative lookahead/lookbehinds in rules?  I guessed <-after ...> <-behind ...> , but this doen't parse...

[07:01] <ayrnieu> ah, !

[07:02] <ayrnieu> also, that should've been <!before ...>

[07:04] <svnbot6> r9663 | Darren_Duncan++ |  r3235@darren-duncans-power-mac-g4:  darrenduncan | 2006-03-19 23:02:28 -0800

[07:04] <svnbot6> r9663 | Darren_Duncan++ |  ext/Rosetta/ : continued rewrite of Language.pod

[07:12] *** Toaster joined
[07:14] *** Soga joined
[07:16] *** iblechbot joined
[07:16] * ayrnieu makes pretty LJ-url-matching rules from his perl5, only to discover in the process that the negative lookahead was perfectly useless (but harmless) all along.

[07:38] *** drrho joined
[07:39] *** Quell joined
[07:51] *** marmic joined
[07:57] *** pdcawley joined
[08:00] *** xern joined
[08:01] *** nothingmuch joined
[08:43] *** ghenry joined
[08:51] *** xinming joined
[08:55] <GeJ> morning folks

[08:56] *** rgs joined
[09:05] *** Toaster joined
[09:05] <ingy> hola

[09:05] <dduncan> yello

[09:06] <Supaplex> nite

[09:07] <svnbot6> r9664 | Darren_Duncan++ |  r3239@darren-duncans-power-mac-g4:  darrenduncan | 2006-03-20 01:06:22 -0800

[09:07] <svnbot6> r9664 | Darren_Duncan++ |  ext/Rosetta/ : continued rewrite of Language.pod

[09:08] <ingy> good night Supaplex

[09:08] <ingy> hola dduncan

[09:08] <dduncan> ditto

[09:08] <nothingmuch> møøsage

[09:10] <dduncan> feel free to wade into Language.pod, though what I've written so far is the 80% of the 10,000 mile view so everything may be too abstract to be useful ... still, lots of revolutions in there

[09:13] <ingy> nothingmuch: want to help me figure something out with Module::Compile

[09:13] <ingy> using SEE

[09:23] *** Aragone is now known as Arathorn

[09:27] <Arathorn> morning everyone & everything

[09:28] <nothingmuch> ingy: not now...

[09:28] <nothingmuch> i'm at work

[09:28] <nothingmuch> and stressed ou

[09:28] <nothingmuch> t

[09:36] <KingDiamond> nothingmuch: looks like I'm gonna be out of luck for sometime at least then

[09:38] <nothingmuch> home come?

[09:38] <nothingmuch> it's only till wednesday

[09:38] <nothingmuch> and it doesn't include the afternoon

[09:39] <nothingmuch> and you didn't seem to need any help for the past few days =)

[09:39] <KingDiamond> nothingmuch: I was not in town, and had spotty internet access :-(

[09:39] <nothingmuch> oh

[09:39] <nothingmuch> err

[09:39] <nothingmuch> well, others can also help

[09:39] <nothingmuch> and I can be pinged for 5 minute increments

[09:39] <KingDiamond> yeah, I guess :)

[09:40] <KingDiamond> heh

[09:40] <nothingmuch> just not for deep magic hacking sessions like ingy wants =)

[09:40] <KingDiamond> heh

[09:40] <nothingmuch> to help with M::C i need to do a full context switch and *really* think about something else

[09:41] <ingy> back

[09:42] <ingy> nothingmuch: so... ready?

[09:44] *** dduncan left
[09:44] <nothingmuch> ingy: no... big deadline

[09:44] <nothingmuch> i'll make it

[09:44] <nothingmuch> but I want to be 100% sure

[09:44] <nothingmuch> maybe later today

[09:45] <ingy> someday when /me and nothingmuch are flatmates, pairing will be easier

[09:46] <nothingmuch> =)

[09:46] <nothingmuch> do you plan on coming back from .tw to .us?

[09:46] <nothingmuch> heh. to .com

[09:46] <nothingmuch> =)

[09:47] <ingy> nothingmuch: at times, yes

[09:47] <nothingmuch> where do you intend on living?

[09:47] <ingy> .cai

[09:48] <nothingmuch> cai?

[09:48] <ingy> The Sovereign Republic of Coffee And Internet

[09:49] *** Samhain joined
[09:49] <nothingmuch> hehe

[09:50] <nothingmuch> in that case if you let me know in advance and we can arrange i don't see why we can't be flatmates

[09:50] <nothingmuch> i mean, it's not like you're a weird rapist or something

[09:50] <nothingmuch> you're just weird

[09:50] <ingy> Samhain!

[09:50] <nothingmuch> .... has quit

[09:50] <ingy> we are 138

[09:50] <nothingmuch> 138?

[09:51] <ingy> google: Samhain 138

[09:51] <nothingmuch> oh

[09:51] *** Samhain joined
[09:51] <ingy> http://www.onethirtyeight.com/main.html

[09:52] <ingy> I think Samhain predates nothingmuch

[09:52] <nothingmuch> yes, by a lot

[09:52] <ingy> I bet Samhain probably predates Samhain

[09:52] <nothingmuch> but most the music I hear predates me

[09:53] <rgs> isn't samhain the french name for halloween, btw

[09:53] <ingy> aye

[09:53] <ingy> sah-wane

[09:53] <nothingmuch> rgs: i thought you were supposed to know ;-)

[09:53] <ingy> or somesuch

[09:54] <ingy> s/somesuch/somesuchshit/g

[09:55] *** Toaster joined
[10:00] *** KingDiamond left
[10:00] *** KingDiamond joined
[10:33] *** kane_ joined
[10:35] *** Toaster joined
[10:49] *** mj41_ joined
[10:58] <svnbot6> r9665 | fglock++ | pX/.../PCR - fast grammar

[11:07] *** mauke joined
[11:10] *** nothingmuch joined
[11:14] *** kanru joined
[11:20] <spo0nman> Im trying to install pugs on Freebsd

[11:21] <spo0nman> and I've got parrot-0.4.2 ghc 6.4 and perl 5.6.1

[11:21] <spo0nman> I am facing problems while compiling pugs.

[11:22] <spo0nman> this is the output of my steps after I downloaded hs-plugins.

[11:22] <spo0nman> http://pastebin.com/612147

[11:22] <spo0nman> it'll be nice if someone explains what is it that im doing wrong.

[11:22] <nothingmuch> you don't need hs-plugins unless you want 'eval_haskell'

[11:22] <nothingmuch> just FYI

[11:22] <spo0nman> nothingmuch: hmm where do i get that?

[11:22] <spo0nman> nothingmuch: can you look at the errors please?

[11:23] <nothingmuch> looking

[11:23] <nothingmuch> i think you ran setup and friends wrong

[11:23] <nothingmuch> but I don't know how to do that right

[11:23] <spo0nman> pugs errors are right down at the end.

[11:23] <nothingmuch> ask on #haskell

[11:23] <nothingmuch> unless someone here steps up

[11:23] <mauke> hmm, missing symbols from gmp

[11:23] <nothingmuch> but in general if you're just poking around, start without hs-plugins for now

[11:25] <spo0nman> how to start without them? i already installed it.

[11:42] *** renato joined
[11:55] *** foosroo joined
[12:14] *** siosiosios joined
[12:16] *** chris2 joined
[12:31] *** Lorn_ joined
[12:34] *** iblechbot joined
[12:53] *** Khisanth joined
[13:05] *** fglock joined
[13:08] <svnbot6> r9666 | fglock++ | pX/.../PCR - built-in rules: alpha, alnum, ...

[13:17] <Juerd> seen audreyt

[13:17] <Juerd> No seenbot? :|

[13:18] *** jisom joined
[13:21] <nothingmuch> Juerd: no =(

[13:21] <svnbot6> r9667 | fglock++ | pX/.../PCR - cleared warnings in t/04-rule.t

[13:21] *** jp-autark joined
[13:27] <fglock> does anyone have experience with PadWalker?

[13:28] <broquaint> A little.

[13:29] <fglock> broquaint: I can find a variable, but the value comes 'undef' - I'm using peek_my()

[13:30] <broquaint> A code snippet would be handy, fglock :)

[13:31] <fglock> do you have a pugs tree? /misc/pX/Common/Pugs-Compiler-Rule/lib/Pugs/Runtime/Rule.pm - last subroutine in this file. I'll paste it here, one sec.

[13:32] <broquaint> I've got it, I'll take a look now.

[13:32] <pasteling> "fglock" at 200.17.89.80 pasted "non-working peek_my()" (33 lines, 498B) at http://sial.org/pbot/16412

[13:33] <broquaint> And what are you trying to achieve?

[13:34] <fglock> you can test it by running t/04-rule.t - I'm trying to get the value of a lexical variable in the user's program

[13:34] <broquaint> Right-o.

[13:35] <fglock> uncomment the warn() in line 343, and it'll show the variable contents (I get undef)

[13:40] <broquaint> Hrm ...

[13:43] <broquaint> My subconscious recognises the problem but it's not quite making it to the conscious level yet ...

[13:44] <broquaint> Declaring $match twice can't be helping, fglock ;)

[13:46] <broquaint> Can't call method "match" on unblessed reference at (eval 36) line 7.

[13:46] <broquaint> Which is why $match is empty because an error is occurring on a previous line.

[13:47] *** pmichaud joined
[13:49] <pasteling> "broquaint" at 217.206.131.214 pasted "Broken perl5 code in generated rule (the match called fails as the method can't be found)" (2 lines, 273B) at http://sial.org/pbot/16413

[13:50] *** bsb joined
[13:50] <broquaint> So the perl5 line in that pasted code is a kv in the rule that is generated. The error occurs there. I'm guessing the peek_my bit is working though.

[13:51] <fglock> broquaint: $match fixed, thanks - but I still get undef - $r is what peek_my should be looking for - and it returns undef :(

[13:52] <broquaint> Are you sure it's undef?

[13:52] <broquaint> Check $@.

[13:54] <pasteling> "fglock" at 200.17.89.80 pasted "debugging get_variable()" (38 lines, 648B) at http://sial.org/pbot/16414

[13:55] <fglock> $@ is clear in get_variable()

[13:56] <broquaint> Yeah, I'm having problems debugging :/

[13:59] *** Qiang joined
[14:05] <broquaint> It looks like it's returning something.

[14:06] <broquaint> Got it working now.

[14:07] * fglock can't wait :)

[14:09] <pasteling> "broquaint" at 217.206.131.214 pasted "The working get_variable()" (12 lines, 239B) at http://sial.org/pbot/16415

[14:12] <fglock> broquaint: it doesn't work here

[14:14] <broquaint> Ok, I'll commit my working stuff shortly.

[14:15] <fglock> broquaint: which version of PadWalker are you using?

[14:18] <broquaint> 1.0

[14:18] <broquaint> I needed it for Params::Named.

[14:20] <fglock> 0.10 here - I'll try upgrading

[14:20] <broquaint> Good call :) I've commited the fixes now too.

[14:22] <svnbot6> r9668 | broquaint++ | * Fixed lexical variable lookups.

[14:23] <fglock> broquaint: thanks - it looks like this module will require 1.0

[14:24] <broquaint> Ah well, at least the variable lookup should be more robust now.

[14:24] <svnbot6> r9669 | broquaint++ | * Fixed bug where a lexical scope might be empty and the lookup would end.

[14:25] *** vel joined
[14:29] <spo0nman> merlyn: foo.

[14:33] *** diotalevi joined
[14:43] *** elmex joined
[14:46] <svnbot6> r9670 | fglock++ | pX/.../PCR/TODO - make it depend on PadWalker 1.0

[14:46] *** taeli joined
[15:19] *** FurnaceBoy_ joined
[15:19] *** hexmode joined
[15:36] *** hexmode` joined
[15:47] *** hexmode joined
[15:49] <stevan> Juerd: ping

[15:49] <Juerd> pong

[15:50] <stevan> Juerd: I need a recomendation for a good ergonomic keyboard for my wife

[15:51] <stevan> I know you are familiar with such stuff :)

[15:56] *** amnesiac joined
[16:02] <obra> heh.

[16:06] *** justatheory joined
[16:10] *** taeli- joined
[16:12] *** Qiang joined
[16:12] *** fglock joined
[16:12] *** Lorn_ joined
[16:12] *** renato joined
[16:12] *** KingDiamond joined
[16:12] *** masak joined
[16:12] *** stennie joined
[16:12] *** ycheng joined
[16:12] *** cognominal joined
[16:12] *** merlyn joined
[16:12] *** TimToady joined
[16:12] *** dvtoo joined
[16:12] *** szbalint joined
[16:12] *** weinig joined
[16:12] *** f0rth joined
[16:12] *** beppu joined
[16:12] *** gaal joined
[16:12] *** ajs_home joined
[16:12] *** pjcj joined
[16:12] *** lumi joined
[16:12] *** cookys joined
[16:30] *** FurnaceBoy_ is now known as FurnaceBoy

[16:39] *** vborja joined
[16:48] <Juerd> stevan: Depends on what the problem is, but in general, I'm very fond of my Kinesis keyboard

[16:48] <stevan> Juerd: she is mostly have wrist discomfort, and numbness in the fingers

[16:49] <Juerd> stevan: And sorry for my abrupt and unannounced leaving; had to assist someone who cut off part of his index finger, and bring the guy to hospital

[16:49] <obra> stevan: what's she using right now?

[16:49] <stevan> Juerd: no problem :)

[16:49] <obra> (Has she seen a doctor?)

[16:49] <stevan> obra: the default keyboard which came with the iMac

[16:49] <stevan> obra: no, but she is going to soon

[16:49] <obra> good. that's step one

[16:49] <xerox> What iMac, if I may ask?

[16:49] <Juerd> stevan: Then a Kinesis will probably help. Have her see a chiropractor or kinesiologist (speling guessed)

[16:50] <stevan> she used to use a laptop,.. which is when the problem began

[16:50] <Juerd> stevan: ... especially if she also suffers from cold hands (bad blood circulation)

[16:50] <stevan> xerox: the lastest G5 model

[16:50] <stevan> Juerd: cool,.. thanks :)

[16:50] <obra> even a $30 MS Natural is better than the default thing. Kinesis keyboards are also good for lots of folks. If she's really far gone, a DataHand may be interesting

[16:50] <Juerd> stevan: Also, make sure she learns dvorak... :)

[16:51] <stevan> Juerd: yes, I was going to suggest that to her

[16:51] <obra> and if it looks like she needs a datahand, you're welcome to borrow mine to try out before you consider a $800 keyboard

[16:51] <stevan> obra: yeah, she was thinking about the natural one

[16:51] <Juerd> One thing about Kinesis... You *must* clip your nails more often than with other keyboards, and it's not usable by people who like to have long fingernails :)

[16:51] <stevan> datahand == funky :)

[16:52] * obra finds that a ms natural works better for him than a kinesis

[16:52] <Juerd> obra: I've often looked at the datahand online; it's indeed extremely expensive. Would you say it's worth it?

[16:52] <obra> also, how's her typing posture? how close is the keyboard to her lap?

[16:52] <obra> Juerd: for a couple folks I know, the choice was "datahand or find a new career"

[16:52] <obra> and it saved their careers.

[16:53] <obra> For me, it was worth it, only because my employer paid for it

[16:53] <obra> the ms natural elite is still my all-time favorite keyboard.

[16:53] <obra> moreso, even than an IBM clicky ;)

[16:53] <Juerd> MS Natural and Kinesis differ in one important aspect: A "natural" keyboard forces slim people to widen their elbows, and that eventually starts hurting your shoulders.

[16:53] <Juerd> And Kinesis keyboards are too narrow for fatter people

[16:54] <Juerd> obra: I see...

[16:54] <stevan> obra: her posture was horrible (when she was using the laptop), but is better now that she is on the desktop

[16:54] * obra carries a ms natural with his laptop

[16:54] <Juerd> Laptops are great only for weak hands. Everything else starts to hurt then :)

[16:55] <Juerd> And, obviously, most laptop keyboards suck incredibly (all the cheap brands, at least)

[16:55] * stevan is a light typer, so has never had an issue

[16:55] <obra> for me, it's about wrist position

[16:55] <stevan> but when i paint/draw, i tend to hold the brush/pencil very tight and get numbness easy

[16:55] <Juerd> obra: The natural position for wrists depends on how far apart your shoulders are..

[16:56] <Juerd> For me, the Kinesis gives me a more natural wrist position; I've used several "natural" keyboards before I figured that out.

[16:56] <Juerd> Including MS Natural Elite

[16:57] <Juerd> Three different Logitech ones, two MS ones, one white label one.

[16:57] * obra has wide shoulders

[16:57] <Juerd> I liked the original MS Natural keyboard best.

[16:57] <obra> Also, its biggest problem: the kinesis sucks to carry around and/or use in my lap

[16:57] <Juerd> stevan: Look for ergonomical brush holders. They're silicone grips.

[16:58] <stevan> Juerd: interesting,.. I will

[16:58] <Juerd> stevan: The painter who painted our house used those

[16:58] <Juerd> That's of course very different from painting art, but my guess is that such a solution probably works for both kinds.

[16:59] <Juerd> obra: Agreed. It absolutely sucks for non-stationary.

[16:59] <Juerd> I mostly work in one place, though, and the little time I use my laptop, I'm able to use my (splendid) IBM laptop keyboard.

[16:59] <obra> I also have an IBM keyboard that's "the top bit of a thinkpad"

[16:59] <Juerd> In fact, I like it very much because it has 96% keys compared to desktops and other laptops. That's great for my small hands.

[17:00] <obra> but again with the "wrong angles"

[17:00] <Juerd> I wish there was an IBM UltraNav *split* keyboard.

[17:00] <obra> but it has a trackpoint, touchpad and thinkpad keys. and a USB port

[17:00] <obra> to my knowledge, IBM has only done one split keyboard

[17:00] <Juerd> obra: That's the UltraNav.

[17:00] <obra> and 20 years later, they go used for > $300

[17:00] <Juerd> The Kinesis would be perfect (except for carrying) if it came in two parts.

[17:01] <obra> and had a trackpoint

[17:01] <Juerd> The fixed distances and angles are SO stupid.

[17:01] <obra> Developing for the web without a mouse is a bit of a pain

[17:01] <obra> But I need to run off and do this annoying "work"

[17:05] <Juerd> Have "fun"

[17:06] *** stennie_ joined
[17:07] <obra> "Thanks"

[17:08] *** taeli- is now known as taeli

[17:10] *** Samhain is now known as samhain1138

[17:11] <samhain1138> rgs: samhain is the pagan holiday from which halloween is derived

[17:11] <rgs> pagan ? you mean celtic

[17:13] *** taeli- joined
[17:17] *** taeli- joined
[17:18] <samhain1138> ingy: Samhain were still playing after nothingmuch was born ;)

[17:18] <ingy> yep

[17:18] <samhain1138> ingy: what's really sad is that i never got to see the misfits, and i'm a huge fiend (tattoos and all ;))

[17:20] *** DesreveR joined
[17:20] <ingy> samhain1138: I'm sure there are plenty in that boat

[17:32] *** ruoso joined
[17:32] <ruoso> hi all

[17:32] <ruoso> fglock, news?

[17:32] <fglock> ruoso: hi!

[17:33] <fglock> ruoso: PCR is much faster! I fixed the unneeded backtrackings

[17:33] <ruoso> fglock, nice...

[17:33] <fglock> ruoso: and it passes all OO, subrule tests

[17:33] <ruoso> fglock, I'm not at my computer now... is it ready to lrep-compiler?

[17:34] <ruoso> fglock, nice

[17:34] <ruoso> if it's all ok, we can just change the emitter to use the new engine

[17:34] *** DesreveR is now known as r0nny

[17:34] <ruoso> and bootstrap it again

[17:34] <ruoso> then we can throw away the old code

[17:34] <ruoso> right?

[17:35] *** SamB joined
[17:35] <fglock> ruoso: you may need to rewrite the return blocks, using match objects - see the PCR own grammar

[17:36] <fglock> ruoso: PCR is running 100 tests/second here

[17:36] <ruoso> there are only two or three return blocks that manipulates the match object

[17:36] <ruoso> fglock, most of them just return { lalala => $() }

[17:36] <fglock> ok - easier then :)

[17:36] <gaal> wow, Test::Pod::Coverage. what an excellent example of a good idea gone silly.

[17:37] <ruoso> fglock, so... do you think PCR is able to compile Grammar/Perl6.p6 in lrep-compiler?

[17:38] <osfameron> gaal: I think the annoying thing is the test failure on less than 100%... that should be configurable

[17:38] <ruoso> fglock, or should I move most of the rules to some class inside PCR

[17:38] <ruoso> like Pugs::Grammar::Statements

[17:38] <fglock> ruoso: PCR can't compile Grammar - it compiles only Rule

[17:38] <ruoso> fglock, hmmm

[17:39] <ruoso> fglock, so I won't be able to use PCR as an in-place substitute for the current lrep engine?

[17:39] <fglock> ruoso: it replaces p6rule / p6rule_lib

[17:39] <fglock> ruoso: it replaces iterator_engine too

[17:40] <ruoso> fglock, that's the ruleop:: methods

[17:40] <ruoso> fglock, and the emit_rule code

[17:40] <ruoso> right?

[17:40] <gaal> osfameron: indeed. I just added this, so I can still use it when I do get around to documentation.

[17:40] <gaal> # plan skip_all => "Test::Pod::Coverage is a little too draconic for my taste" unless $ENV{BITE_THE_BULLET};

[17:40] <gaal> of course, I'm likely not to remember to do that!

[17:40] <gaal> which is why this is silly.

[17:40] <fglock> ruoso: yes, plus half of the grammar file

[17:40] <ruoso> fglock, isn't it just a matter of including one rule and one emit node to PCR?

[17:41] <ruoso> fglock, AFAICS this is what's missing to compile the grammar

[17:41] <osfameron> our old smoke started off insisting 25%, then gradually raised the bar

[17:41] <ruoso> if it can emit the methods, emitting the class is easy

[17:42] <ruoso> fglock, should I sublass PCR?

[17:42] <fglock> ruoso: no, you are supposed to use or inherit from PCR - 'grammar' is not part of the 'rule' language

[17:42] <ruoso> fglock, hmmm... maybe PCR and lrep should inherit from the same thing...

[17:42] <fglock> ruoso: you'd better create a new Grammar, and call PCR to parse the '...' in 'rule {...}'

[17:43] <ruoso> fglock, ok

[17:43] <ruoso> fglock, now it makes more sense to me

[17:43] <ruoso> fglock, so PCR can parse and emit the code for the <rule>

[17:43] <gaal> osfameron: yeah. but the module provides no way to set a threshold. draconic.

[17:43] <fglock> ruoso: yes

[17:44] <ruoso> fglock, can I call it in two phases? parse first, emit later?

[17:44] <fglock> ruoso: yes - see the implementation of compile()

[17:46] <ruoso> fglock, nice...

[17:48] * ruoso just waiting to get to his computer to refactor lrep-compiler and use PCR

[17:49] *** pmurias joined
[17:49] <ruoso> pmurias, hi..

[17:50] <pmurias> hi

[17:51] <ruoso> pmurias, any new idea on the grammar?

[17:51] <fglock> pmurias: pX/PCR is already working - it's much faster now

[17:52] <ruoso> pmurias, ready to lrep-compiler :)

[17:54] <fglock> about grammar optimization - the new PCR grammar uses a kind of 'if-then-else' instead of backtracking (see the last 2 rules in the file)

[17:54] <pmurias> fglock hinted that we should use %dispatch_table instead of @rules, now i'm trying to add %hash to PCR

[17:55] <fglock> pmurias: eliminating backtracking makes it much faster, even without a dispatch table

[17:59] <fglock> see lib/Pugs/Grammar/Rule/Rule.pm

[18:00] <pmurias> any one wants to start porting lrep-compiler to the PCR? or should i begin doing it?

[18:01] <ruoso> pmurias, feel free

[18:01] <ruoso> pmurias, see the recent backlog (just before you join)

[18:01] <ruoso> pmurias, me and fglock were discussing exactly how to do it

[18:02] <ruoso> pmurias, but I'm away from my computer and can't do it now

[18:02] *** arcady joined
[18:04] <PerlJam> It's too bad you don't have access to real continuations.

[18:05] <pmichaud> yes, continuations make it *much* simpler

[18:05] <pmichaud> I wouldn't have wanted to do PGE w/o continuations

[18:05] <pmichaud> continuations allowed me to make PGE more of a compiler than an interpreter

[18:05] <fglock> pmichaud: how do continuations help?

[18:05] <PerlJam> You could fake it with some gotos and clever use of global data though I bet.  It just requires a lot more work :)

[18:05] <pmichaud> backtracking is easier across calls

[18:05] *** Limbic_Region joined
[18:05] <pmichaud> it's easier to backtrack subrules

[18:06] <fglock> pmichaud: ok - I've used a state-machine to fake it

[18:06] <pmichaud> fglock: right, it can be done with a state machine as well, but continuations and coroutines mean the execution trace can keep the state for you :-)

[18:16] *** ghenry joined
[18:27] <TimToady> pmichaud: just answered your 6p query.

[18:27] <pmichaud> TimToady: oh, thank you thank you thank you

[18:27] <pmichaud> TimToady: yes, it's in my box

[18:27] <pmichaud> I can switch context back to parsing now instead of adding documentation and comments :-)

[18:28] <TimToady> except that I floated a new proposal at the same time to change .() special form to _() instead...

[18:28] <pmichaud> eek, I see that

[18:29] <TimToady> anyway, we'll have to see what Damian says about it.

[18:29] <TimToady> It looks more complicated, but it's actually unifying all the magic under _.

[18:30] <TimToady> you wouldn't have to lookahead for .X things and then do different things based on what X is anymore.

[18:31] <pmichaud> well, I was already not looking ahead for .X things -- I was switching the operator table based on the presence/absence of whitespace

[18:31] <TimToady> gee, who told you to do it that way.  :-)

[18:31] <pmichaud> hey, it works (worked?) nicely

[18:32] <TimToady> until you hit list operators. :)

[18:32] <pmichaud> well, I was doing listops as a sort of prefix op, but that fell apart when the thing coming after the listop wasn't a term

[18:33] <TimToady> You can have "foo" on one line, and the next line start with ".", and

[18:33] <TimToady> you're still not sure whether to "eat" the space.

[18:33] <TimToady> the current situation requires two-token lookahead, basically.

[18:33] <TimToady> and I now think that's bad.

[18:34] <pmichaud> oh, I was treating .(, .[, .{, etc. as tokens

[18:34] <TimToady> Yes, but it's the same sort of token inconsistency that Perl 5 has in its sigils + whatever.

[18:34] <pmichaud> yes

[18:34] <TimToady> I should have recognized the design smell...

[18:35] <ingy> TimToady: yeah, what were you tokin'?

[18:35] <TimToady> I don't need to toke anything to be natively stupid about tokens...

[18:36] <ingy> Maybe you had too much Tolkien

[18:36] * particle_ recognizes a bad pun smell

[18:37] <TimToady> -Opungent

[18:37] * ingy senses a new module

[18:37] <ingy> -MPugent

[18:37] * TimToady wants to make a pun on "podule".

[18:37] *** siosiosios joined
[18:38] <gaal> -Mars::Poetica

[18:38] <particle_> podule? a plague of doc errors?

[18:38] <TimToady> -Venus::Poetica for equal time?

[18:39] <gaal> -Doc

[18:39] * ingy smells -Uranus::Poetic coming

[18:40] <ingy> ewwww

[18:40] * ingy needs to sleeep

[18:40] * gaal needs to finish up this module

[18:40] * TimToady sentences ingy to watch that segment of E.T. 100 times in a row.,

[18:41] <ingy> E.T. skype home

[18:41] <pmichaud> TimToady: so, if I'm understanding things correctly, essentially we handle the "terms" and "method postfix" levels of precedence using top-down notions, and the rest can be bottom-up.  And we need a parameter to the bottom up parser that says "only use tokens at XYZ precedence level or higher".  Sound close?

[18:41] <pmichaud> (where XYZ precedence is really "higher than list op precedence")

[18:42] <TimToady> Yeah, that sounds about right.  Only need a crude two-way partition of precedence levels, but maybe it's worth generalizing.

[18:43] <pmichaud> at the moment it's easy for me to generalize the bottom-up parser to say "stop on a token that is lower than XYZ level"

[18:43] <pmichaud> oh, wait, it's not as easy as I thought.  But I can still do it.  :-)

[18:44] <TimToady> np, just have to decide where the actual boundary is, in case people add new prec levels.  I guess if they say "is looser(LIST)" then they're obviously talking about the righthand prec of list operators, not the lefthand.

[18:44] <TimToady> (which would be infinite like a left paren.)

[18:45] <pmichaud> right

[18:45] <pmichaud> essentially one could use   is looser(infix:<< <== >>)

[18:45] <pmichaud> sorry, is looser(infix:<,>)  (had it backwards)

[18:46] <pmichaud> or is equiv(infix:<< <== >>)   (you get the idea)

[18:46] <TimToady> The question is whether that makes a new list operator or something on the other side of the fence.

[18:46] <TimToady> we could put the boundary in the interstices between list operators and the next loosest thing, I suppose.

[18:47] <TimToady> not sure if that makes sense though.

[18:47] <pmichaud> I think it'll all work out well enough.  Okay, that tells me where to point the flashlights

[18:47] <TimToady> should probably just shoot anyone who tries it.

[18:48] <TimToady> flashlights are scary to E.T.s...

[18:48] <pmichaud> the nice, elegant operator precedence parser is becoming less elegant :-|

[18:48] <ingy> make the precedence cutoff value a global variable

[18:48] <TimToady> icky globalses

[18:48] <pmichaud> I was going to make it a parameter

[18:49] <pmichaud> <op_parse: infix:,>   (using PGE's syntax, not p6's)

[18:49] <TimToady> terminators to subparses should generally be parameters.

[18:50] <pmichaud> on the other hand, if we say that method postfix and above is handled by top-down parsing, I should be able to get rid of the whitespace switch in the bottom-up parser, yes?

[18:50] <TimToady> you could almost generalize the parameter to a smart match, which would let us match against either a set of tokens or a range of precedences (but maybe not both with the same param)

[18:51] * ingy wanders off to watch random Big Lebowski segments until sleep overtakes him

[18:51] * Arathorn would rather Hucksucker Proxy than Big Lebowski...

[18:51] <pmichaud> TimToady: that's a very interesting approach

[18:51] <pmichaud> hmmmmm

[18:52] <ingy> Arathorn: that's like just your opinion man...

[18:52] <Arathorn> hehehe

[18:52] <TimToady> yes, top-down could probably deal with whitespace issues, but maybe only if each token looks for its trailing whitespace automatically.

[18:52] *** eric256 joined
[18:53] <pmichaud> well, the rule that would have to deal with trailing whitespace is the term rule, so that's not difficult

[18:53] <TimToady> or at least "knows" somehow whether there's a _ embedded in the next whitespace.

[18:53] <gaal> we need a ))<>(( operator

[18:53] <TimToady> don't go there...

[18:53] <gaal> (whoever knows the reference, honk :)

[18:54] <pmichaud> one could almost generalize the parser into a smart match, where we have a set of states and each token knows what "states" it's active in

[18:55] <TimToady> $string ~~ grammar is already a smart match...

[18:55] <pmichaud> yes, I was thinking at the bottom-up level

[18:56] <TimToady> ah.

[18:56] <pmichaud> i.e., $token ~~ state

[18:56] <pmichaud> i.e., instead having separate term and operator states, generalize to more states

[18:56] <pmichaud> I'll toy with it another time. :-)

[18:56] <PerlJam> pmichaud: from the outside looking in, that seems to jibe well with the language you guys have been using when talking about perl6

[18:57] <TimToady> When I was originally trying to think about how you'd emulate bottom up with a top down parser, I was thinking along those lines.  But you have to construct new precedence levels as new states on the fly, and it exceeded my mental capacity...

[18:57] <pmichaud> I think precedence level is just a parameter to the state

[18:58] <pmichaud> each token already knows its precedence level; we just need to know what level we're currently at (similar to the shift-reduce logic we have now)

[18:58] <TimToady> yes, I realized that at the time, and shortly thereafter my eyes glazed over...

[18:59] <TimToady> but it's definitely worth thinking about if you can, I suspect.

[18:59] <pmichaud> I can, I'm limited only by time.  :-)

[18:59] <TimToady> stay away from margins, then...

[19:00] <pmichaud> well, the other limitation is wanting to get something for others to look at :-)

[19:00] * fglock does 'rm -rf *; svn up' - wrong way here ...

[19:00] <pmichaud> I'll spend an hour or so brainstorming it a bit; if that doesn't lead to anything I'll go to the traditional approach for now and backburner it

[19:00] <TimToady> that's just inside-out time, pm.

[19:01] <pmichaud> but shift-reduce parsing becomes much simpler if we can rely on top-down to handle parens

[19:01] <TimToady> Yes, the infinities of surreal precedence are better handled top down.

[19:02] * eric256 shakes his head after reading the last 30min~ of log....hmmmm lol

[19:03] <TimToady> you're supposed to nod your head, eric256...

[19:04] <pmurias> fglock:"Can't locate v6.pm in @INC" what do I have to put in PERL5LIB?

[19:04] <TimToady> but you've gotta realize @Larry has been talking this over for several years, and so we tend to talk in riddles.

[19:04] *** GeJ joined
[19:04] * particle_ wonders idly why @Larry isn't %Larry

[19:04] <TimToady> because we're all shifty characters.

[19:04] <pmichaud> in fact....... (stream of consciousness).... if we say that terms and circumfixes are handled by top-down, then the only thing left for bottom-up is operators

[19:04] <fglock> pmurias: just run Makefile.PL and it will fix

[19:05] <particle_> unlike much of perl, that makes sense ;)

[19:05] <TimToady> that's how I originally thunk it would work.

[19:05] <pmichaud> we have prefix operators that have to be recognized in expect_term, but little else

[19:05] <eric256> lol

[19:05] <eric256> well you certainly are shifty

[19:06] <TimToady> and everyone else goes popping off in various directions...

[19:06] * particle_ pushes TimToady

[19:07] * TimToady expands his memory

[19:07] * particle_ fills a bucket

[19:07] * pmichaud wanders off to think a bit more

[19:07] * TimToady challenges particle_ to a wave dual.

[19:08] * particle_ accelerates

[19:08] <TimToady> just so you're not an Acceloraptor.

[19:09] * TimToady has to wander off too.

[19:09] <eric256> pugs -Obad_pun

[19:09] * TimToady waves

[19:09] <particle_> nope, i'm a boson

[19:09] <pmurias> fglock: thanks the Makefile.PL vodoo fixed it

[19:09] <particle_> or is that bozon?

[19:09] <particle_> no, wait. i'm a moron.

[19:10] <PerlJam> a muon would be more better.

[19:10] <TimToady> well I'm particularly wavering, but still must depart &

[19:10] *** mauke joined
[19:11] <PerlJam> oh, but you said you were a boson, so I guess you can't be a muon

[19:13] *** Muable joined
[19:13] <gaal> a mooson?

[19:13] <wolverian> moonsoon

[19:13] <gaal> (that was very Ob)

[19:13] <PerlJam> What are the particles of perl6?

[19:13] <particle_> no, wait, i'm a string!

[19:14] <PerlJam> not a super string?

[19:14] *** taeli- is now known as taeli

[19:14] <particle_> it's the only kind i know

[19:15] <PerlJam> Are you a 10 dimensional object with a 4 dimensional projection?

[19:16] <particle_> indeed

[19:16] <particle_> aren't you?

[19:17] <PerlJam> I don't know, I can only observe the 3 dimensional me.

[19:20] *** bernhard joined
[19:21] <PerlJam> svn merge -r HEAD:{"1990-03-20"} PerlJam

[19:21] <PerlJam> Apparently I can't revert back to an earlier state.

[19:21] <Muable> Mind if I intrude on this highly technical discussion?

[19:22] <PerlJam> Muable: go ahead

[19:22] <Muable> OSDC.il piqued my interest in pugs. I've downloaded and built on Windows XP (unfortunately).

[19:22] <Muable> Where do I start? There's an awful lot of code there.

[19:22] * ruoso gets back to work...

[19:23] <PerlJam> What is it you want to do?

[19:23] <Muable> And I don't know much Haskell (yet?)

[19:23] <Muable> Not sure. Something easy to begin with.

[19:23] <PerlJam> How much perl6 do you know?

[19:23] <Muable> Enough perl6, I think. Plenty of perl5, certainly.

[19:24] <FurnaceBoy> spo0nman, I heard you say you work for flickr -- kudos man, it's a beautiful thing.

[19:24] <PerlJam> something very easy would be to write tests for things that should work in perl6 but don't in pugs

[19:24] <Muable> Speaking of tests... a lot of mine fail. Is this normal?

[19:24] <PerlJam> Another thing you could do, would be to try contributing to lrep

[19:25] <Muable> What's lrep?

[19:25] <PerlJam> Muable: look in misc/pX/Common/lrep-compiler

[19:25] <PerlJam> or even misc/pX/Common/lrep

[19:26] <PerlJam> I don't think that there's an up-to-date todo list for all of the various sub-projects that pugs has spawned.

[19:27] <PerlJam> (though I wish that all of the people working on pugs related things would put todos into rt)

[19:27] <Muable> So lrep is supposed to be the Perl6-based Perl6 parser?

[19:27] *** elmex joined
[19:28] *** weinig joined
[19:29] <PerlJam> um  .... s/the/a/  and really it's sort of perl5 based.

[19:29] <Arathorn> lrep (as i understand it) is more of an experiment to see if a perl6 parser can be written really quickly in perl5, and then bootstrapped to perl6 asap.

[19:29] <Arathorn> s/perl6/itself/

[19:30] <Muable> Interesting...

[19:30] <Muable> Also: Any parts of the Haskell codebase which are reasonably painless to start exploring?

[19:30] <PerlJam> Arathorn: s/then/concurrently/

[19:31] * Arathorn nods

[19:31] <PerlJam> Muable: I don't know.  The haskell code has been rewritten several times since I last looked at it.

[19:31] <Arathorn> the only problem in contributing (from my point of view, at any rate), is that it (lrep)'s currently undergoing huge refactoring to try to unify together all the different perl5 codebases involved - Pugs::Compiler::Rules (in its various repository locations), and various versions of its own implementations, all of which are all interrelated

[19:32] * Arathorn couldn't get his head 'round where the current state of play was, and who was refactoring what where

[19:32] <Arathorn> you almost certainly have more tuits than I, tho' :)

[19:32] *** weinig is now known as weinig|away

[19:32] <PerlJam> Arathorn: pugs is a perfect example of "refactor mercilessly" applied.

[19:33] <Arathorn> sure - but it's then hard for a newbie wanting to contribute to know what to familiarise themselves with, and try to extend

[19:33] <Arathorn> if the landscape's undergoing fullblown tectonic shift the second they touch anything

[19:33] <PerlJam> yep.  The only recourse is to jump in and start swimming.

[19:33] <Arathorn> especially if it's fragmented across multiple locations, as lrep was when i look last week

[19:33] * Arathorn points sadly at his waterwings

[19:33] <Muable> Well, that's why I'm asking where's best to jump in!

[19:33] <eric256> Arathorn certainly is. ;) i know that feeling.

[19:34] <Muable> Meanwhile: I get loads of the following from "make test":

[19:34] <Muable> *** Undeclared variable: "$count"

[19:34] <Muable>     at D:\Perl6\site\lib\auto\pugs\perl6\lib\Test.pm line 15, column 5-13

[19:34] *** larsen joined
[19:34] <Muable>        t/builtins/arrays/elems.t line 11, column 3-57

[19:34] <Muable> Test after test fails that way. Has anyone seen this before?

[19:36] <Arathorn> not that I remember

[19:36] *** mj41_ joined
[19:43] *** jisom joined
[19:53] *** Arathorn joined
[19:53] <fglock> Arathorn: the CPAN version of Pugs::Compiler::Rules is in /perl5; the devel-version is in misc/pX; the original lrep is pX/Common/lrep; the devel version is pX/Common/lrep-compiler

[19:54] * Arathorn nods - i worked it out in the end

[19:54] <Arathorn> although I wasn't sure whether to steer clear until ruoso and yourself had refactored lrep-compiler to use PCR,

[19:54] <fglock> it would be nice to have a standard place for 'devel' x 'working' versions

[19:55] <PerlJam> everytime I see PCR I think "polymerase chain reaction"

[19:56] <fglock> PerlJam: it kind of have the same effect on code

[19:56] <particle_> :)

[19:56] <PerlJam> It chops the code up into little pieces and then swishes it around in a DNA soup of proto-code?

[19:56] <PerlJam> ;)

[19:57] <fglock> PerlJam: that's what an AST is about, isn't it?

[19:58] <PerlJam> modulo the inherent randomness of the process, I guess.

[19:59] <integral> with some languages you can apply the small-step reduction semantics in any order...

[19:59] *** dduncan joined
[20:21] <gaal> cpan-upload --user GAAL --mailto [email@hidden.address] Template-Patch-0.01.tar.gz

[20:21] *** larsen joined
[20:21] <fglock> keeping $/ up-to-date during a match looks expensive - I wonder how it was supposed to be implemented

[20:23] <TimToady> As long as it looks up-to-date when you ask for it, it can be as lazy as it likes in between.

[20:23] <pmichaud> the tricky part is backtracking over captures :-)

[20:23] *** larsen joined
[20:24] <TimToady> but even Perl 5 manages that.  (though confusing "temp" with "let", calling both "local")

[20:24] <fglock> mmm, return blocks are lazy already...

[20:25] <fglock> pmichaud: backtracking just throws data away - my problem is to build a match tree just to throw it away

[20:27] <fglock> but using a lazy tree might fix it

[20:29] <TimToady> if it's any comfort, we're trying to design the Perl 6 grammar to require almost no backtracking.

[20:29] <TimToady> so you may be doing a premature optimization.

[20:30] <pmichaud> I basically came to the conclusion that it was better to go ahead and build and maintain the match tree for now

[20:30] <TimToady> Perl regexen have always been somewhat "success-oriented".  Rules aren't really any different...

[20:31] <pmichaud> A basic match object in PGE just has a reference to a string, a from index, and a to index.  The rest is constructed lazily as the match proceeds

[20:31] <pmichaud> (i.e., don't build hash or array components until we actually capture something there)

[20:32] <pmichaud> away again -- brainstorming operator precedences

[20:33] <fglock> thanks!

[20:35] *** datenreisender joined
[20:41] *** ruoso joined
[20:42] <ruoso> fglock, pmurias, hi...

[20:43] <fglock> ruoso: hi!

[20:47] <pmurias> ruoso: hi

[20:47] <fglock> pmurias, ruoso: hi

[20:48] <ruoso> any news?

[20:48] * ruoso finally got to his machine again

[20:49] * ruoso wonders why svn update is taking a loooooooooot of time

[20:49] <fglock> ruoso: I'm finding out how to implement $0, $1 backreferences

[20:49] <fglock> ruoso: same problem with svn here

[20:51] <ruoso> fglock, hmm... ok...

[20:52] <pmurias> commits take eveeen longer...

[20:52] <ruoso> fglock, rule closures are still perl5 filtered code? or they're perl 6 already?

[20:52] <fglock> I think there is a way to make a temporary change to the match object, without saving a deep copy

[20:53] <fglock> ruoso: I've got an idea now - rule closures can be implemented by inheriting the rule grammar, and reimplementing the closure parser!

[20:54] <ruoso> fglock, but closure code can be any perl 6 code

[20:54] <fglock> ruoso: so you can define the language inside the closure

[20:54] <jisom> make it truly multilingual?

[20:54] <jisom> in every way

[20:54] <ruoso> fglock, don't you thing it's weird to have the language grammar to inherit the rules grammar?

[20:54] <TimToady> fglock: regarding something you said earlier, %hash and <%hash> both look up literal keys by longest-token rule.  The difference is only in how it treats the value.  With <%hash> the hash values are assumed to be rules.

[20:56] <ruoso> pmurias, where does Grammar/Rules.pm comes from? it looks like lrep compiled code...

[20:56] <TimToady> so basically any macro stuffs its keyword into the key of %hash and the "is parsed" into the value, conceptually.

[20:56] <ruoso> pmurias, but I couldn't find the p6 source

[20:56] <fglock> ruoso: the perl6-rule-grammar inherits from rule-grammar; the p6-r-g calls the p6 compiler to compile closures

[20:56] <ruoso> fglock, looks better :)

[20:56] <pmichaud> fglock:  there's already a :lang modifier that has been discussed to identify the language used for closures :-)

[20:56] <pmichaud> (inside of rules)

[20:57] <pmichaud> I don't think it's in S05 yet

[20:57] <fglock> TimToady: sure

[20:57] <pmurias> ruoso: the code to Grammar/Rules.pm is lost now..

[20:57] <pmichaud> this is part of the reason that PGE had trouble parsing perl 6 closures -- you'd need a Perl 6 parser to handle it properly.  Thus we added the {{ ... }} closure syntax

[20:57] *** weinig|away is now known as weinig

[20:57] <ruoso> pmurias, lost?

[20:57] <fglock> pmichaud: ok

[20:58] <pmurias> it consited of the rully parts of Perl6.p6, accidently overwritten it while move lrep to PCR

[20:59] <ruoso> pmurias, before a commit

[20:59] <fglock> pmichaud: anyway, we could desugar :lang into a Rule subclass that knows how to handle "lang" - this may make the implementation easier

[21:00] <pmichaud> yes, this can work

[21:00] <fglock> pmichaud: it helps break circularity, I think

[21:00] <ruoso> pmurias, much of the rules were in Perl6.p6, right?

[21:00] <ruoso> pmurias, they can be reverted from svn

[21:01] <fglock> have you lost the compiler state?

[21:01] <dduncan> is anyone finding openfoundry reeeeeeeeeeel slow?

[21:02] <pmurias> i can recopy them if you want, but Rules.p6 is replaced in the lrep-pcr version

[21:02] <fglock> dduncan: it's so that you think better before committing :)

[21:02] <dduncan> I'm finding that update/pull takes several minutes to even start

[21:02] <ruoso> pmurias, oh... lrep-pcr is new to me :)

[21:03] *** penk joined
[21:03] *** penk left
[21:03] <dduncan> today, whereas yesterday it was fine ... and even now, no pings are lost, but the website is likewise slow

[21:03] *** sandrina_m joined
[21:03] *** penk joined
[21:04] <ruoso> dduncan, it looks like high load

[21:04] <ruoso> dduncan, not a network issue

[21:04] <pmurias> ruso: it's being commited right now...

[21:04] <ruoso> pmurias, is it a subtree (as lrep-compiler?)

[21:04] <dduncan> I"m committing to it right now, following the eventual update end, but its a small commit

[21:05] <ruoso> dduncan, svn uses a database, which requires much more memory and cpu than rcs files

[21:06] <pmurias> yes, it's dosn't fully work yet so I branched it untill rule are fully working in it

[21:06] <pmurias> s/rule/&s/ s/untill/until/

[21:06] <dduncan> ruoso, I understand that there has been some slowness in the past, but right now it is quite different than any past experiences ...

[21:07] <dduncan> of course, if the server has a high load, with lots of ram being used by other things, that could perhaps cause this, if svn is being starved

[21:07] <ruoso> dduncan, that's my bet

[21:08] *** penk joined
[21:10] <ruoso> does someone can help svn machine?

[21:10] <ruoso> it is really in a bad mood..

[21:13] * fglock writes down the $/ strategy - hoping it makes sense...

[21:15] <ruoso> pmurias, did you commit? I couldn't find it...

[21:16] *** siosiosios joined
[21:18] *** hcarty joined
[21:18] *** hcarty left
[21:19] <pmurias> ruoso: waiting for the authentication prompt :(

[21:20] <ruoso> welll... lrep still can bootstrap itself... I think Rules.p6 can be recovered from svn...

[21:21] * fglock adds one line of code to the rule engine - after many unsuccessful attempts :)

[21:21] <ruoso> we can just change the emitter to use the new engine and bootstrap again...

[21:22] <fglock> ruoso: there is a "bridge" emitter in PCR/lrep - I use it to compile the PCR grammar

[21:23] <fglock> (please don't change PCR/lrep)

[21:23] <ruoso> fglock, lrep in lrep-compiler can just be changed to use PCR as its rule runtime

[21:23] <ruoso> fglock, I do think this simple change + make bootstrap will make it just works...

[21:24] <fglock> ok

[21:24] <ruoso> but I have to go now... maybe I'll be back later...

[21:24] <ruoso> too much work :(

[21:24] <chris2> aoki writes a haskell book? w00t!

[21:25] <ruoso> bye

[21:25] <pmurias> i'll try to commit lrep-pcr again

[21:25] <fglock> ruoso: tchau!

[21:25] <ruoso> pmurias, I'll take a look later

[21:25] <ruoso> fglock, falow

[21:26] <chris2> ewrongchan :P

[21:31] *** larsen_ joined
[21:36] <fglock> if I change '$match = &func($str)' to '&sub($str,$match,$leaf_ptr)', then the matching nodes get the current $/ for free, and backtracking still works

[21:37] *** ruz joined
[21:43] *** hcchien joined
[21:43] * Arathorn gets very confused whilst trying to use his windows desktop until he realises that he killall'd explorer in order to free some ram :\

[21:46] *** wilx joined
[21:47] <pmurias> good night

[21:51] <fglock> when you start writing things like [@{$$leaf->{state}}] there must be something wrong ...

[21:56] <amnesiac> yes, your brain most of the time :/

[21:58] <fglock> amnesiac: yep

[21:59] *** penk left
[22:00] <TimToady> dduncan: it may be that 1000 copies of Fedora Core 5 crossing the Pacific simultaneously is what you're seeing on the network.

[22:01] <dduncan> hello

[22:01] <dduncan> but the problem doesn't seem to be network, as ping worked fine

[22:01] <TimToady> Especially if a bunch of USian people are downloading it from Asia on the theory that it's the middle of the night there...

[22:01] <integral> pings can have different performance to other data unfortunately

[22:01] <TimToady> just a guess, anyway...

[22:02] <TimToady> does the server serve up Fedora distributions?

[22:02] <dduncan> I will mention that performance to many other internet servers, including one in New Zealand, is normal

[22:02] <TimToady> It could certainly be something else.

[22:03] <TimToady> but an ftp server allowing too many connections could bog things down.

[22:08] <dduncan> well, a bright side of using svk is that I can commit locally and merge later, though the merging sometimes has unplesant side effects

[22:08] <dduncan> so server outages are less of an issue

[22:09] <fglock> do subrules backtrack when the caller rule backtracks? (I expect they do)

[22:09] *** jisom joined
[22:12] *** larsen joined
[22:13] *** m joined
[22:16] <fglock> is this an error? / $1 (.) (.) /

[22:17] <jisom> would / $10000 (.) (.) / be realistic to check against?

[22:18] <fglock> jisom: maybe (lazily)

[22:18] <jisom> although to support /$1 (.)/, it'd have to do some weird backtracking and be really slow

[22:22] <pmichaud> well, in / $1 (.) (.) /   the value of $1 isn't set when it's matched, yes?

[22:22] <ayrnieu> it's normal for equivalent expressions to have different performance characteristics, I think.

[22:22] <jisom> pmichaud: so it'd be matching against an undefined value?

[22:22] <pmichaud> jisom: that's what I would expect

[22:22] <jisom> s/against/with/

[22:23] <jisom> that's the easy and logical way out

[22:23] <fglock> pmichaud: do rules backtrack into subrules?

[22:23] <pmichaud> fglock: yes, they do

[22:23] <pmichaud> to avoid the backtracking, one cuts the subrule:     / <subrule>: /

[22:24] <ayrnieu> matching-against-an-undefined-value is what perl5 seems to do.

[22:24] <ayrnieu> Juerd - http://www.pckeyboard.com/Kustomizing.html

[22:24] <fglock> pmichaud: ok! just checking...

[22:24] <mauke> hmm? perl5 simply interpolates variables

[22:24] <ayrnieu> which simplistically has this effect :-)

[22:25] <pmichaud> the perl5 equivalent of / $1 (.) (.) /  would probably be / \2 (.) (.) /  ... and I dunno what that does

[22:25] <mauke> I think it unconditionally fails

[22:25] <mauke> at least that's what ploki does :-)

[22:25] <TimToady> it might turn the \2 into \x02.

[22:25] *** b_jonas joined
[22:25] <jisom> I thought it was \02

[22:25] <TimToady> same thing

[22:26] <jisom> not for \10

[22:26] <ayrnieu> it doesn't appear to, TimToady.

[22:26] <TimToady> might have an exception for single digit \n things

[22:26] <TimToady> don't remember offhand.

[22:26] <ayrnieu> ( perl -le '$_ = "\x02kllo"; print "yay" if /\2(k)(l)/' )

[22:26] <pmichaud> I think single digits were always treated as backrefs

[22:26] <Arathorn> didn't the behaviour of that change in one of the minor revisions of perl5?

[22:27] <jisom> I suppose there's a good reason the perl5 regex are being somewhat dropped

[22:27] <Arathorn> (just when the entirety of the rest of the world adopts them as standard ;D)

[22:27] <TimToady> in any event, you still have to handle the undef case for /(a(.)|b(.))\2/ and such.

[22:27] <ayrnieu> Arathorn - better than what they were used to.

[22:28] <TimToady> ironical, ain't it.  :)

[22:28] <jisom> yeah, using pcre for perl6....weird

[22:28] <mauke> (see also http://perlmonks.org/?node_id=424865 )

[22:28] <ayrnieu> but if /$1 (.) (.)/ is just slow, that's alright: that's an opportunity for some{one,machine} to come along and say "hey!  Your regex is pointlessly slow.  You should say /(.) (.) $0/"

[22:30] <b_jonas> mauke: that reminds me to http://www.perlmonks.com/?node_id=510925 and http://www.perlmonks.com/?node_id=510912

[22:31] *** ycheng joined
[22:31] <fglock> I'm not asking for it to work - $1==undef is much easier to implement :)

[22:32] *** r0nny joined
[22:33] <fglock> does /$1/ never match, or matches anything?

[22:33] <jisom> maybe equal to /<null>/?

[22:33] <pmichaud> I'm going to guess it matches anything

[22:33] <TimToady> probably gives you a warning on turning the undef into a "".

[22:34] <pmichaud> or warning, yeah, that's it.  :-)

[22:34] <fglock> ok

[22:34] <jisom> warning's don't fail ;)

[22:34] <ayrnieu> use fatal <warnings>;

[22:34] <TimToady> actually, it's possible that warnings in Perl 6 are, in fact, exceptions that are resumed by default.

[22:35] <b_jonas> oh wow

[22:35] <fglock> home &

[22:35] <fglock> thanks for the answers!

[22:35] <TimToady> my pleasure.

[22:36] <TimToady> or I guess I should say "ja nada".

[22:36] <fglock> TimToady: de nada

[22:36] <TimToady> gotcha.

[22:37] <TimToady> getting my Japanese mixed in there...

[22:37] <ayrnieu> 'je nada', and it is French.

[22:37] <Arathorn> bunch of pedants :D

[22:38] *** fglock left
[22:38] <pmichaud> What does 'je nada' mean in french?!?

[22:38] * pmichaud looks up his french dictionary

[22:38] <TimToady> so someone who assists a pedant is a codepedant...

[22:39] <pmichaud> My french dictionary doesn't have 'nada' defined in it

[22:39] <TimToady> of course not, since it means nothing.

[22:39] <pmichaud> but not in french :-)

[22:39] <Arathorn> presumably it's some weird hybrid pidgin phrase

[22:39] <Arathorn> the kind of thing that Young People nowadays call 'slang'

[22:42] <b_jonas> lol. pairs with nil as the value are left out from the dictionary, just like in lua

[22:45] <cognominal> in French, you would answer "merci" par  "de rien"

[22:45] <pmichaud> oui, que je pense

[22:46] <pmichaud> "de rien" == "It's nothing" en Anglais

[22:46] <cognominal> yes, we are very negative people :)

[22:46] <pmichaud> but I'm not a fluent francophone, so I wasn't sure if there was some other meaning being bantered about :-)

[22:48] <cognominal> with such a name, Michaud, you could speak French

[22:48] <pmichaud> yes, my great grandfather was from the french speaking part of Switzerland, and my ex-wife was from Geneva

[22:49] <pmichaud> so, I ought to know more french than I do

[22:49] <PerlJam> pmichaud: why?  you're an american! :-)

[22:49] <cognominal> his surname sounds very French to me :)

[22:50] <ayrnieu> He must've taken the 'no-americanization-of-surname' road to America

[22:50] <PerlJam> cognominal: Yes, but that's a bit of history that he had nothing to do with.  He's still an american.

[22:50] <pmichaud> PerlJam: it'd be okay with me to improve the world-awareness of americans :-)

[22:51] <particle_> the world is flat!

[22:51] <ayrnieu> stop lying, particle.

[22:51] <PerlJam> particle_: It's a great big pizza!

[22:51] <particle_> i'm looking at a map, ayrnieu :P

[22:51] <PerlJam> particle_++ lol

[22:51] <ayrnieu> particle - then you should say that the map you have appears flat.

[22:52] <cognominal> ho, only 249 Michaud for the yellow pages in Paris

[22:52] <ayrnieu> particle - I'd note that, even as you look at that map, you should note by your perception of map that you exist in a !flat world.

[22:52] <cognominal> I would have bet a higher number

[22:52] <PerlJam> cognominal: how many tassin?  (my mother's maiden name)

[22:52] <particle_> i come from flatland

[22:52] <pmichaud> my ancestors were more rural than Paris, I suspect -- try Neuchatel

[22:53] <pmichaud> (Switzerland)

[22:53] <cognominal> PerlJam: 10

[22:53] <particle_> mmm, cheese

[22:53] <ayrnieu> particle - then you should not have said "i'm looking at a map", which suggests !flatness.  You lie again!

[22:53] <cognominal> But BooK has a bot that can get the answer for the whole France/

[22:53] <particle_> the map is a line :)

[22:54] <ayrnieu> it would appear curved to you, then.

[22:54] <cognominal> oops, perljam that was 58, he just want to spoon them to me.

[22:54] <ayrnieu> I mean, if you've a *good* map.

[22:54] <cognominal> pmichaud: yes, some name betray some region. there is a site to explore that. I don't remember the url

[22:55] <cognominal> probably they know better than us in Utah :)

[22:55] <PerlJam> pmichaud: Hey, did I tell you that one of my ancestors was from Bern?  When Cyndi and I were searching for names for the twins, I got my mom's geneology chart (which goes *way* back) and noticed a Heinrich Hertzschle (or something like that) back in 1629.

[22:55] * jisom wonders how many Isom's in England

[22:55] <pmichaud> PerlJam: wow, cooool

[22:55] <PerlJam> pmichaud: I doubt I have enough swiss to gain citizenship ;-)

[22:56] <pmichaud> perljam: oh, I probably could've done it if Isabelle and I had stayed married another two years.  But yeah, you're a bit far removed

[22:57] <cognominal> http://geneanet.org/partner/guide-genealogique/result.php3?name=michaud

[22:58] <PerlJam> cognominal: according to my mom's genealogy, the name Tassin originated from a small "village" or "suburb" of Paris back in 980a.d. or so.  Supposedly Paris has absorbed it by now.  No telling if there's any trace left.

[22:59] <spinclad> ayrnieu: you should say that the thing I seem to have that I seem to incline to call a 'map' appears to be what I seem to incline to call 'flat'

[23:03] <TimToady> what is this "incline" thing?  One more than the previous line?

[23:04] <spinclad> it's a lie. sorry. I was being careless.

[23:04] <TimToady> an "inclie"?

[23:04] *** eric256 left
[23:04] <pmichaud> one more than the previous lie

[23:04] <spinclad> an 'ink line'

[23:04] <PerlJam> and inclie is where you put your inc bottle.

[23:04] <pmichaud> aka lie++

[23:05] * particle_ rolls down the ink line

[23:05] <spinclad> that is, particle's map

[23:05] <TimToady> "down"?  Is that related to the inclie?

[23:06] <pmichaud> time to zone out... be back tomorrow noonish

[23:06] <particle_> hey, that inclie is my mother!

[23:06] <spinclad> 'down' is defined as where time runs slower

[23:06] <TimToady> incday...

[23:07] <TimToady> so if pm goes up it'll be tomorrow noonish soonish.

[23:07] <spinclad> or nooner sooner

[23:07] <TimToady> that leaves am to be a downer.  Seems accurate...

[23:08] *** larsen_ joined
[23:17] *** penk joined
[23:22] * Arathorn hasn't an inkling of what folks are talking about :(

[23:27] <jisom> anyone happen to know of a simple algorithm to convert a number, in this case one byte, being the H value in HSV, into RGB?

[23:28] <Arathorn> yeah, there's a really simple one in java's awt

[23:28] <Arathorn> also one on mathworld, iirc

[23:28] *** larsen__ joined
[23:28] <jisom> and I'm writting in pir, so odds are I'll need to write it into pir

[23:29] <Arathorn> well, it's just a series of averages, iirc

[23:29] <Arathorn> the magic is in the weightings

[23:29] <jisom> no, it'd be rainbow

[23:29] <b_jonas> one byte? just make a table of 256 colors

[23:29] <Arathorn> i think you can get away without using any trig

[23:29] <jisom> I'm ok with trig

[23:30] <Arathorn> given HSV is defined as three overlapping triangular windowing functions

[23:30] <Arathorn> s/is defined/can be considered/

[23:30] <Arathorn> http://www.acm.org/jgt/papers/SmithLyons96/hsv_rgb.html

[23:31] <Arathorn> you have to do a few conditionals to check it doesn't go out of gamut, other than that it's just weighting.

[23:32] <jisom> I figured I'd upgrade from 3d on a console to 3d in an image with color being the z axis

[23:33] <jisom> black and white's bad for eye candy

[23:35] *** frederico_ joined
[23:35] <Arathorn> on a console?

[23:35] <jisom> ansi colors

[23:35] <jisom> :)

[23:35] *** Southen joined
[23:35] * Arathorn doesn't follow how 3D and ansi colours combine

[23:36] <Arathorn> you doing 3d ascii art in parrot?

[23:36] <jisom> colors represent the z axis

[23:36] <b_jonas> uh.

[23:36] <b_jonas> I've once drawn magic cubes with ansi colors

[23:36] <jisom> sort of, mapping the results of certain complex equations across a cartesian plane

[23:36] <Arathorn> right, that makes more sense

[23:36] <b_jonas> I had to change the palette magenta to orange for that

[23:36] <jisom> and I'm not doing ascii anymore

[23:37] <jisom> too low a resolution

[23:37] * Arathorn had this weird mental image of programming 3D befunge or something on a text console

[23:37] <Arathorn> with a false-colour z-axis :/

[23:38] <jisom> I think there's a doom in 3d ascii art

[23:39] * Arathorn uses libcaca to test vidcap devices all the time, actually

[23:39] <Arathorn> very randomly useful gimmick

[23:39] <jisom> and they say perl has too much white noise

[23:40] <jisom> hack aatv or whatever to have each screen be a valid perl program

[23:40] <Juerd> line noise.

[23:40] <jisom> oh yeah, white noise is sound, I think

[23:41] <Juerd> ayrnieu: Looks nice, but is that ergonomical? By the way, the example keyboard on that page looks much like an HP netserver keyboard.

[23:43] <ayrnieu> Juerd - a trackmouse is automatically ergonomic for me :-)  But I mean that you might ask them if they can make a split keyboard.

[23:47] <Juerd> ayrnieu: Trackpoints can be ergonomical or horrible. It depends much on what you do with it.

[23:47] <Juerd> It sucks for drawings and long web browsing sessions.

[23:48] <Juerd> It's better than anything that's external for focussing windows, though.

[23:48] <Juerd> (in between typing)

[23:48] <Juerd> Same for touchpads

[23:50] <ayrnieu> I never used it for drawing; I don't mind it for long web browsing.

[23:50] <Juerd> Just remember this conversation should it ever begin to hurt.

[23:50] <Juerd> In fact, don't remember this conversation, but do remember this single word: STOP :)

[23:56] *** iblechbot joined
[23:57] *** nirgle joined
