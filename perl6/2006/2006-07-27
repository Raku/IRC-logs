[00:08] *** frederico joined
[00:08] *** cjeris left
[00:27] *** nekokak joined
[00:29] <clkao> fglock: around?

[00:35] <clkao> fglock: i change the signature_term_type to use bare_ident. now junctive type is having infinite loop. is this a bug in PCR?

[00:35] *** rodi joined
[00:36] <TimToady> clkao: did you ever get an answer on proto?

[00:36] <clkao> TimToady: uhm, not really

[00:36] <TimToady> defined in S6

[00:37] *** nelt left
[00:40] <TreyHarris> TimToady: I'll ask audreyt the same question later, but I'm giving an internal talk at $job next week to update on Perl 6 progress in the past 6-ish months. other than what I've seen in the Synopsis deltas, is there anything else that's happened since YAPC important enough for such a talk, in your opinion?

[00:41] <TimToady> loop {...} while has changed to repeat {...} while

[00:41] <TreyHarris> yep, got that one down :-)

[00:42] <TimToady> thinking...

[00:42] <TreyHarris> thanks!

[00:43] <TimToady> pipe ops now called feed ops

[00:43] *** justatheory joined
[00:43] <TimToady> can now use \ on any whitespace

[00:45] <TimToady> there's now a ! metaoperator

[00:45] <TimToady> env vars now "is context" vars

[00:46] <clkao> is this an effort to stop christmas happening or to have a better christmas?

[00:46] <TimToady> << ... >> now matches word boundaries in regex

[00:47] <TimToady> I'm just listing changes that happened in the last month for TreyHarris++

[00:49] *** macroron joined
[00:53] <TimToady> but mostly this is for a better christmas.  Most of these things are not changing something that exists.  the main exception, repeat, I already hacked into the .hs and pcp parsers

[00:54] <clkao> yay

[00:55] <TreyHarris> TimToady: thanks, that was helpful, I missed ! and hadn't thought about some of the others

[00:55] <TreyHarris> TimToady++

[00:56] <TimToady> It was easy, I just did "svn log SXX.pod | less"  :)

[00:57] <audreyt> dduncan: sorry, I'm totally fried

[00:57] <audreyt> my brain stopped working

[00:57] <audreyt> so I'm back to hotel and ready to crash

[00:58] <audreyt> dduncan: I did intend to come to OSCamp to find you

[00:58] *** hikozaemon joined
[00:58] <audreyt> but the unexpected lightning-talk-call razed my schedule

[00:58] <audreyt> sorry about that...

[00:58] <audreyt> *thunk* &

[00:58] <TreyHarris> TimToady: oh duh, I don't have the synopses checked out, they're not in the pugs repository--where are they?  But in any case, I was more interested if there was anything outside the Synopsis space that I might have missed

[00:59] <TreyHarris> I watch the deltas sent to p6-l, of course, but that's not as flexible as having it checked out

[01:00] <dduncan> audreyt, well at least we met in the hall ... that was the least I wanted

[01:11] <TimToady> TreyHarris: https://svn.perl.org/perl6/doc/trunk/design

[01:11] <TimToady> afk &

[01:11] <TreyHarris> TimToady: thanks!

[01:29] *** dolmans joined
[01:36] *** tup joined
[01:41] *** shachaf joined
[01:45] *** xdg joined
[01:49] *** frederico joined
[02:11] *** anthraxs joined
[02:13] *** cmarcelo joined
[02:30] *** coumbes joined
[03:10] *** cmarcelo left
[03:33] *** justatheory joined
[03:46] *** tup joined
[03:52] *** tup joined
[03:54] *** MacVince joined
[03:59] *** amnesiac joined
[04:10] *** MacVince left
[04:19] *** KingDiamond joined
[04:19] *** premshree_ joined
[04:23] *** penk joined
[04:23] *** premshree__ joined
[04:23] *** tup joined
[04:44] *** traecer joined
[04:45] <spinclad> TreyHarris: if you haven't followed them, audrey's blogs at http://pugs.blogs.com/pugs should tell you a lot.  We've had hage things happening with p6-in-p5, p6-in-p6, moose ...  Xmas is coming, the goose is getting fat.

[04:53] <spinclad> TimToady: i just noticed that ?? !! has both names C<trinary> and C<ternary> in S03.  (MHO favors C<ternary>, naturally.)

[04:58] <PerlJam> spinclad: as long as no one makes the mistake of replacing them both with "tertiary"  :)

[05:00] *** kanru joined
[05:14] *** mako132_ joined
[05:31] <gaal> mooooooose

[05:36] <lumi> gaal: Morning! I'm leaving your way presently

[05:37] <lumi> Do you have unwired network or a wire? Or should I BMOE?

[05:37] *** nothingmuch joined
[05:37] <nothingmuch> moose morning

[05:38] <gaal> lumi: no wifi, alas

[05:38] <gaal> lumi: did you have breakfast?

[05:38] <lumi> Nay

[05:39] <lumi> I ran errands all morning instead

[05:39] <gaal> "all morning"!? 8:41

[05:39] <nothingmuch> my thoughts exactly

[05:39] <gaal> ok come here and we'll grab a bite somewhere

[05:40] <nothingmuch> e.t.a?

[05:40] <lumi> t-1h or so

[05:41] <gaal> lumi: there are cables. BYOAnythingYouThinkIsGood

[05:58] *** spinclad joined
[05:58] *** cookys joined
[05:58] *** nnunley joined
[05:58] *** xern joined
[05:58] *** nothingmuch joined
[05:58] *** mako132_ joined
[05:58] *** kanru joined
[05:58] *** traecer joined
[05:58] *** penk joined
[05:58] *** amnesiac joined
[05:58] *** shachaf joined
[05:58] *** dolmans joined
[05:58] *** hikozaemon joined
[05:58] *** nekokak joined
[05:58] *** miyagawa joined
[05:58] *** Kattana joined
[05:58] *** Eimi joined
[05:58] *** cognominal joined
[05:58] *** lisppaste3 joined
[05:58] *** beppu joined
[05:58] *** Steve_p joined
[05:58] *** bradleym joined
[05:58] *** stevan joined
[05:58] *** hexmode joined
[05:58] *** arguile joined
[05:58] *** glasser joined
[05:58] *** svnbot6 joined
[05:58] *** evalbot_11798 joined
[05:58] *** f0rth joined
[05:58] *** fglock joined
[05:58] *** mauke joined
[05:58] *** revision17_ joined
[05:58] *** audreyt joined
[05:58] *** obra joined
[05:58] *** kcwu joined
[05:58] *** tessier__ joined
[05:58] *** Diederich joined
[05:58] *** Juerd joined
[05:58] *** webmind joined
[05:58] *** pmichaud joined
[05:58] *** pmurias joined
[05:58] *** leo joined
[05:58] *** PerlJam joined
[05:58] *** chip joined
[05:58] *** wolverian joined
[05:58] *** Southen_ joined
[05:58] *** xinming joined
[05:58] *** rafl joined
[05:58] *** integral joined
[05:58] *** theorbtwo joined
[05:58] *** baest joined
[05:58] *** GeJ joined
[05:58] *** ruz joined
[05:58] *** SubStack joined
[05:58] *** buubot joined
[05:58] *** knewt joined
[05:58] *** vsoni_ joined
[05:58] *** [particle] joined
[05:58] *** Eidolos joined
[05:58] *** tokuhirom joined
[05:58] *** monkey_ joined
[05:58] *** pdcawley_ joined
[05:58] *** jabbot joined
[05:58] *** robkinyon joined
[05:58] *** SamB joined
[05:58] *** silug joined
[05:58] *** marcus_ joined
[05:58] *** TreyHarris joined
[05:58] *** f00li5h joined
[05:58] *** rashakil joined
[05:58] *** weinig|away joined
[05:58] *** perlbot joined
[05:58] *** merlyn joined
[05:58] *** bcorn joined
[05:58] *** clkao joined
[05:58] *** dvorak joined
[05:58] *** broquaint joined
[05:58] *** gugod joined
[05:58] *** jiing joined
[05:58] *** amv joined
[05:58] *** Shabble joined
[05:58] *** Yappo joined
[05:58] *** LCamel joined
[05:58] *** pasteling joined
[05:58] *** xerox joined
[05:58] *** qmole joined
[05:58] *** mugwump joined
[05:58] *** tcliou joined
[05:58] *** tewk joined
[05:58] *** ingy joined
[05:58] *** pjcj joined
[05:58] *** orafu joined
[05:58] *** scw joined
[05:58] *** revdiablo joined
[05:58] *** _calvin_ joined
[05:58] *** Grrrr joined
[05:58] *** niner joined
[05:58] *** wilx joined
[05:58] *** ajs joined
[05:58] *** mtve joined
[05:58] *** takesako joined
[05:58] *** trym joined
[05:58] *** rw-rw-r-- joined
[05:58] *** locksy joined
[05:58] *** bennymack joined
[05:58] *** Qiang joined
[05:58] *** nperez joined
[05:58] *** buu joined
[05:58] *** Khisanth joined
[05:58] *** Odin- joined
[05:58] *** typester joined
[05:58] *** meppl joined
[05:58] *** notsri joined
[05:58] *** kane_ joined
[05:58] *** hcchien joined
[05:58] *** Bleadof joined
[05:58] *** gaal joined
[05:58] *** lambdabot joined
[05:58] *** kolibrie joined
[05:58] *** TimToady joined
[05:59] *** justatheory joined
[06:33] *** drbean joined
[06:49] *** elmex joined
[06:49] *** _Machado_ joined
[06:52] *** agentzh joined
[06:53] <agentzh> TimToady: what's wrong with "proto"?

[06:58] *** _Machado_ left
[07:02] *** iblechbot joined
[07:02] *** jbt joined
[07:08] *** lumi joined
[07:14] *** Yappobot joined
[07:16] *** mjk joined
[07:27] *** drrho joined
[07:32] <pasteling> "agentzh" at 210.22.200.67 pasted "Another patch for S04 (r10488). Review welcomed. :=)" (80 lines, 3.7K) at http://sial.org/pbot/18645

[07:32] *** f0rth_ joined
[07:34] *** f0rth_ is now known as f0rth

[07:34] *** f0rth is now known as Forth

[07:34] <agentzh> bbiab &

[07:41] *** cognominal joined
[07:44] *** Aankhen`` joined
[08:00] *** hugues23 joined
[08:09] *** kanru joined
[08:10] *** tup joined
[08:19] *** nothingmuch_ joined
[08:35] *** buetow joined
[08:43] *** cognominal joined
[08:59] <tessier__> Why implement perl6 in haskell? Why bother with perl at all? Why not just code in haskell?

[09:00] <Bleadof> Brilliant!

[09:00] *** traecer left
[09:01] <tessier__> I'm looking for enlightenment, not gratuitous flattery. :P

[09:01] <Bleadof> There was a hint of sarcasm in that comment ;)

[09:02] *** nothingmuch_ is now known as nothingmuch

[09:04] *** Revision17 joined
[09:05] <tessier__> Either way you leave me unsatisfied.

[09:07] <Bleadof> That was the point ;)

[09:08] <tessier__> WTF is the deal with Audrey Tang?

[09:08] <tessier__> Someone is confused.

[09:16] <Juerd> tessier__: Haskell is a very different language than Perl 6

[09:16] <Juerd> In short, Haskell doesn't allow you to shoot yourself in the foot so easily.

[09:22] <tessier__> Juerd: Right. That would seem to be an advantage. So why use haskell to build the ability to shoot yourself in the foot? Why care about perl6?

[09:28] *** pochi joined
[09:34] <Juerd> tessier__: Because Perl 6 is a great language that lacks an implementation, and Haskell makes the first implementation possible.

[09:34] <Juerd> tessier__: And because Audrey cares about both languages. I'm very happy about that :)

[09:44] <cognominal> tessier_: with perl6 you can program in a functional way, you don't have to.  This means one does not to immediately rewire his whole brain to start working

[09:45] <cognominal> s/not to/not have to/

[09:57] *** marmic joined
[09:58] <tessier__> cognominal: Could you not program in a functional way before perl6?

[09:58] <lambdabot> i am just a fun girl!

[09:59] <tessier__> FWIW I just bought Higher Order Perl last night. Should arrive in a few days.

[09:59] <lambdabot> why me? :)

[09:59] <tessier__> lambdabot: Girls are fun but my advice is that if it fucks, floats, or flies, you are better off renting it by the hour.

[10:12] <nothingmuch> tessier__: marry me

[10:13] <tessier__> nothingmuch: What do you have to offer me as a life partner?

[10:16] <nothingmuch> love

[10:17] <nothingmuch> by the hour, of course

[10:17] <nothingmuch> oh, and I could also teach you how to  appreciate the beauty of PHP

[10:17] <nothingmuch> i say screw all this perl 6 haskell mumbo jumbo

[10:17] <nothingmuch> i mean, who the hell even *needs* lexicals?

[10:19] <Juerd> PHP 7 *may* get first class functions!

[10:19] <nothingmuch> OMIGAAWD

[10:19] <nothingmuch> i better learn csh then

[10:19] <cognominal> tessier__,   that's perl, you could, you did not have to

[10:20] * Juerd clipped his fingernails

[10:20] <Juerd> Let's see if this reduces the number of typos :)

[10:32] <gaal> audreyt: "by sending a feed into C<*>." -> "feeding into C<*>" ?

[10:33] *** Dr_Pi joined
[10:36] *** elmex joined
[10:37] * nothingmuch decides to stop working on the vim stuff

[10:37] <nothingmuch> it's too hateful

[10:37] <nothingmuch> plus, if those guys on that wiki did so much research

[10:37] <nothingmuch> but got nothing so far

[10:37] <nothingmuch> it must be hard

[10:37] <gaal> m ++ oose

[10:42] <gaal> @hoogle Map a b => [(a, b)]

[10:42] <lambdabot> Data.FiniteMap.fmToList :: FiniteMap key elt -> [(key, elt)]

[10:42] <lambdabot> Data.Map.assocs :: Map k a -> [(k, a)]

[10:42] <lambdabot> Data.Map.toAscList :: Map k a -> [(k, a)]

[10:43] <gaal> (sorry, my local goa is borked because system fps clashes with pugs fps...)

[10:43] <xerox> FiniteMap ?!?!

[10:43] <xerox> Data.Map.toList

[10:43] <xerox> You want ->, not =>, gaal :-)

[10:44] <xerox> (->) is the function type constructor, => divides the constraints from the actual type.

[10:44] <gaal> er.

[10:44] <gaal> yes yes

[10:44] <gaal> blame the sun.

[10:44] * xerox nods

[10:45] <gaal> lumi++ # meatspaceprvmsg informing me \bot does privmsg

[10:45] <gaal> hoogle++ # liberal enough to give me the right answer even when under the influence of tlv weather

[10:46] *** Odin- joined
[10:47] <gaal> :79

[10:48] *** nuffin_vim joined
[10:48] <nothingmuch> fioo

[10:48] <nothingmuch> test

[10:49] <gaal> nothingmuch: probably a few feet behind you

[10:49] <nothingmuch> vimirc officially sucks

[10:49] <nothingmuch> it's almost 100% blocking

[10:49] <nothingmuch> you can't get messages while typing

[10:50] <nothingmuch> (insert mode)

[10:50] <nothingmuch> and it's event loop is timer based

[10:50] <gaal> for a minute there I didn't see the 'i' and couldn't understand what was wrong with vim's rc file.

[10:51] <nothingmuch> "i" ?

[10:51] <gaal> vim_I_rc

[10:57] *** agentzh joined
[10:58] <nothingmuch> oh

[11:00] <agentzh> is there any plan to release pugs test suit separately to CPAN?

[11:01] <agentzh> and is there any good idea to sync the test suit with synopses more closely by some clever synatx or tools?

[11:01] <gaal> agentzh: there was a thread on p6l. dduncan++ wants it as do others...

[11:01] <gaal> i think mostly it's looking for someone to do it.

[11:02] <gaal> agentzh: well, yes! look at util/catalog_tests.pl

[11:02] <agentzh> gaal: looking

[11:02] <gaal> usage: run your smoke test, then that

[11:02] <gaal> it takes a minute or two to run, and then e.g.

[11:03] <gaal> (sec...)

[11:03] <agentzh> okay

[11:03] <gaal> http://perlcabal.org/~gaal/pugstest/t_index/t/builtins/want.html#line_69

[11:03] <lambdabot> Title: want

[11:03] <gaal> that is a file linked to from smoke.html

[11:03] <gaal> see the hyperlink? follow it

[11:04] <agentzh> hmm, seems good

[11:04] *** TimToady joined
[11:04] <agentzh> gaal: it's very nice

[11:05] <gaal> I just got spam with the title "no more new classes". after this morning's haskell chase, that's almost tempting

[11:05] <gaal> agentzh: also the synopses are automatically xreffed back to arbitrary tests

[11:06] <gaal> this aspect of the process isn't very prettily implemented, but it does work.

[11:06] <agentzh> url?

[11:06] <agentzh> oh, i see.

[11:06] <gaal> agentzh: just look for "T" superscripts

[11:06] <gaal> yes

[11:06] <gaal> so any test that is decorated with a comment saying L<...> does that

[11:07] <gaal> credit to theorbtwo, nothingmuch, ted nelson and some others

[11:07] <agentzh> are the synopses' HTML files generated after very smoke?

[11:07] <gaal> agentzh: this isn't automatic, but yes, you'd need to do that.

[11:07] <agentzh> hey, that's exactly what i've been pondering

[11:08] <agentzh> L<...> with some magic text matcher

[11:08] <gaal> the reason is that html isn't really bidirectional, so we need to create target documents that have anchors for us.

[11:08] <agentzh> and two-way cross references

[11:08] <gaal> agentzh: yes, like I said, ted nelson :)

[11:08] <gaal> @google xanadu

[11:08] <lambdabot> http://www.imdb.com/title/tt0081777/

[11:08] <lambdabot> Title: Xanadu (1980)

[11:08] <gaal> er, no

[11:08] <gaal> @google project xanadu

[11:08] <lambdabot> http://en.wikipedia.org/wiki/Project_Xanadu

[11:09] <gaal> that's more like it :)

[11:09] <agentzh> lambdabot is cute

[11:09] <gaal> yes!

[11:09] <agentzh> en.widipedia.org is not accessible here

[11:09] <agentzh> saddly i'm behind the Great Firewall

[11:09] <gaal> I'll pate for you, sec.

[11:10] <agentzh> okay!

[11:10] <pasteling> "gaal" at 192.115.25.249 pasted "Project Xanadu" (73 lines, 6.3K) at http://sial.org/pbot/18650

[11:12] <agentzh> gaal: thanks for the paste

[11:12] <gaal> np

[11:12] <agentzh> will look closer later. supper &

[11:18] *** tokuhirom is now known as toku_away

[11:22] *** xinming_ joined
[11:29] *** Provito joined
[11:47] *** tup joined
[11:53] *** xinming joined
[12:21] *** xinming joined
[12:24] *** jiing_ joined
[12:28] *** chris2 joined
[12:30] *** bpphillips joined
[12:36] <gaal> moooose

[12:37] * bpphillips is just a lurking mooose

[12:37] *** frederico joined
[12:45] *** macroron joined
[12:48] *** mauke_ joined
[13:03] *** mauke_ is now known as mauke

[13:05] *** jawd joined
[13:05] <jawd> is there any perl mailer out?

[13:05] *** FurnaceBoy joined
[13:06] <agentzh> jawd: p6-l and p6-c

[13:06] <jawd> where can i get them?

[13:06] <agentzh> jawd: a sec...

[13:07] <wolverian> perl mailer?

[13:07] <agentzh> http://dev.perl.org/perl6/lists/

[13:07] <agentzh> in case that you mean "mailing lists"

[13:07] <lambdabot> Title: Mailing Lists - perl6

[13:07] <jawd> oh..

[13:08] <jawd> i was talkin about a perl mailer..

[13:08] <wolverian> did you mean "a module to send e-mails"?

[13:08] <jawd> e.q; for spammin

[13:08] <jawd> yea

[13:08] <agentzh> oh, that kind of stuff...

[13:08] <wolverian> see CPAN. I recommend the Email::* modules. also, this channel is for the development of the next perl version, not generic perl discussion. try #perl

[13:08] <wolverian> also, don't spam. :-)

[13:09] <agentzh> everyone here hates spam

[13:09] <jawd> i hate spam

[13:09] <jawd> i do spam

[13:09] <jawd> paradoxal, it is

[13:09] * agentzh dodges

[13:10] <wolverian> please give me your personal contact information.

[13:11] *** BeernuT joined
[13:12] *** BeernuT left
[13:13] * [particle] thinks #perl6 needs a spam filter

[13:14] <glasser> hmm, does moose have available svn yet?

[13:17] *** Jedai joined
[13:27] <agentzh> gaal: the history of the Xanadu project is rather educational. i've just finished reading your paste. thanks a lot!

[13:27] <agentzh> glasser: ask stevan

[13:28] <glasser> stevan: hmm, does moose have available svn yet? :)

[13:29] <glasser> also, i'm curious about the level of support for cloning objects in moose

[13:31] *** rodi joined
[13:32] * agentzh agentzh tries to play with util/catalog_tests.pl a bit

[13:32] *** justatheory joined
[13:33] <glasser> like, i see that Class::MOP gives a shallow cloning operation, and says there are good reasons not to do more

[13:35] <glasser> but i'm wondering, if i'd like to use moose in a project, and i'd like my objects to have a deep clone operation (with specifying "clone this attr value, share this one") a la SVK::Accessor

[13:35] <glasser> at what level one should extend moose.

[13:35] <glasser> (ie, is this a reasonable patch for Moose itself? or for a mixin?)

[13:41] * agentzh thinks #perl6 is sleeping

[13:42] <agentzh> gaal: in case you backlog, is there a way to generate cross-referenced HTML pages without smoking?

[13:43] <agentzh> gaal: smoking pugs' test suit is an unpleasant process on this machine

[13:43] <agentzh> gaal: not to mention i even can't build pugs here :(

[13:47] <agentzh> jumping between synopses and tests are not very natural. i think a better way is to embed tests directly into synopses, but by default these tests are "folded" and can be "expanded" by the user, just like what Google usually does

[13:47] <agentzh> *embedding

[13:48] <agentzh> furthermore, synopses with embeded tests may be easier to print onto papers

[13:52] <agentzh> glasser:  <stevan_> we set up #moose over at irc.perl.org too, for Class::MOP and Moose related questions/stuff

[13:52] <agentzh> glasser: maybe try out #moose instead?

[13:53] <gaal> agentzh: elk

[13:53] <gaal> agentzh: do you have an account on feather?

[13:53] <agentzh> nope

[13:53] <gaal> it's a fastish machine and you can run your smokes there :)

[13:53] <agentzh> can you ask Juerd to give me one?

[13:54] <gaal> no: you should email him with your name and prefered username

[13:54] <gaal> are you able to ssh to machines outside .cn?

[13:54] <agentzh> okay!

[13:54] <agentzh> with some odd proxy, yes.

[14:13] *** vel joined
[14:18] *** hexmode joined
[14:26] *** kanru joined
[14:30] *** aufrank joined
[14:33] <gaal> agentzh: re folding tests into spec, the problem is that they don't necessarily correspond to each other in order

[14:33] <gaal> so a .t file can have tests pertinent to more than on syn doc, and vv.

[14:33] <gaal> what would you embed?

[14:43] *** agentzh joined
[14:44] <[particle]> tests in spec is like php in html *yuck*

[14:44] <aufrank> there's something to be said for including any examples from the spec in the tests, though

[14:44] <aufrank> want to make sure any code that's supposed to run does

[14:47] * FurnaceBoy thinks of literate programming, mathematica notebooks, etc, etc

[14:48] <agentzh> [particle]: by default the tests are folded in a small button-like label in the spec

[14:49] <agentzh> we can always click the label, say, "t/subroutines/multi_sub.t (2)", to expand the correponding test code

[14:49] *** lisppaste3 joined
[14:50] <agentzh> most of the time, we can only see labels like "t/test/name" listed in the spec

[14:50] <[particle]> but editing the spec happens in text editors, where the tests can't be hidden

[14:50] <agentzh> i don't think that will be very annoying

[14:55] *** amnesiac joined
[14:59] *** agentzh joined
[14:59] <agentzh> <agentzh> [particle]: you have misunderstood me. i am talking about the generated HTML files, not the pod

[15:00] <agentzh> <agentzh> the idea is: the program scans through the test files, collecting references to the synopses, and then generate the HTML outputs with all the information embedded

[15:00] <agentzh> we just need some JavaScript to "hide" the test code by "magic labels" temporarily

[15:01] <agentzh> the synopses and pugs' tests are still living separately. it is the program which mixes them up

[15:02] <agentzh> aufrank: testing the sample code in the synopses is something mandatory, i think :)

[15:02] <agentzh> gaal: Re not one-to-one correspondence

[15:04] <agentzh> that's easy. if one test references multiple synopses, we can have it appear as a "label" in all the referenced synopses

[15:11] *** agentzh joined
[15:12] * agentzh hates the firewall which makes his IRC connection extremely fragile.

[15:14] <agentzh> embedding a whole test file into the spec is not interesting at all. it should be a single test case or a small portion of a test file

[15:15] <agentzh> one "label" corresponds to one group or a single test case

[15:15] <agentzh> we need some way to split the .t files in any event

[15:19] <agentzh> i'll try to roll out an implementation after walking through all the Synopses. :)

[15:22] *** cjeris joined
[15:24] *** Eimi joined
[15:29] *** weinig|away is now known as weinig

[15:30] *** agentzh joined
[15:32] *** mako132_ joined
[15:35] *** dakkar joined
[15:49] *** agentzh joined
[15:49] *** justatheory joined
[15:51] *** mako132_ joined
[15:52] *** thepler joined
[15:54] *** thepler joined
[16:02] <gaal> nothingmuch:

[16:02] <gaal> > let hw = "~":["~Y"++x|x<-hw] in hw !! 4

[16:02] <lambdabot>  "~Y~Y~Y~Y~"

[16:03] <xerox> > intersperse 'Y' (replicate 5 '~')

[16:03] <lambdabot>  "~Y~Y~Y~Y~"

[16:04] <lumi> I like the ~:[ emoticon

[16:04] <cjeris> gaal: in practice is that linear or quadratic in the index 4?

[16:05] <xerox> > take 9 $ fix ("~Y"++)

[16:05] <lambdabot>  "~Y~Y~Y~Y~"

[16:06] * xerox <3 fixed points

[16:07] <wolverian>  I see what you did there..

[16:09] *** agentzh joined
[16:20] <xerox> ?pl fix f = f (fix f)

[16:20] <lambdabot> fix = fix (ap id)

[16:23] <xerox> ?fptools Control.Monad.Fix

[16:23] <lambdabot> http://darcs.haskell.org/packages/base/Control/Monad/Fix.hs

[16:24] <TimToady> agentzh: you were asking about "proto"?  Did you mean implementation or spec?

[16:25] *** mako132_ joined
[16:25] *** ruoso joined
[16:28] *** fglock joined
[16:28] *** mako132_ is now known as maco132

[16:29] *** frederico joined
[16:35] <gaal> cjeris: it's memoized.

[16:41] *** xdg joined
[16:44] <xdg> audreyt: Class-InsideOut 1.01 is headed for CPAN.  register( $classname ) automatically gives you a blessed scalar now.

[16:44] *** dduncan joined
[16:56] *** mako132_ joined
[17:02] *** aufrank` joined
[17:03] *** aufrank` left
[17:04] *** aufrank joined
[17:05] *** Aankhen`` joined
[17:09] *** agentzh joined
[17:09] *** thepler joined
[17:09] <agentzh> i'm rewriting util/prove6 using perl 5

[17:10] <agentzh> i hope it can harness both pugs and v6.pm

[17:10] <[particle]> ...and be windows friendly :)

[17:10] <agentzh> so newbies (like me) won't constantly be asking stupid questions like "how can i run just a portion of the huge test suit?"

[17:12] <agentzh> [particle]: which implementation should prove6 choose to run by default?

[17:12] <agentzh> is it okay to say "util/prove6 --pugs t/some/*.t" and "util/prove6 --perl5 t/some/*.t"?

[17:13] <[particle]> as in, pugs or v6? if i understand correctly, prove6 does v6 by default now.

[17:13] <agentzh> given the maturity of these two implementations, i think prove6 should default to the Haskell pugs

[17:13] *** salty-horse joined
[17:14] <[particle]> the above syntax looks good, and could include --js and --parrot

[17:14] <agentzh> [particle]: yes, the current prove6 defaults to v6.pm

[17:15] <agentzh> do you think it's okay to change to pugs?

[17:16] <agentzh> the implementations of --js and --parrot are somewhat out of my knowledge, so that's an excercise for someone else. :=)

[17:17] <[particle]> i'd rather it say as v6, as that seems to be the strategic direction, but i don't care so much, 'cause i'll just run C<prove6 --perl ...>

[17:18] <agentzh> okay

[17:18] <agentzh> maybe i should also alias --perl to --perl5 :)

[17:18] <agentzh> and also --v6-alpha

[17:19] *** szbalint joined
[17:19] *** buetow joined
[17:19] <agentzh> following your advice, i'll make prove6 default to v6.pm then

[17:19] <[particle]> okay. i'm sure it can easily be changed if others disagree.

[17:21] <agentzh> :)

[17:24] *** weinig is now known as weinig|bbl

[17:35] <svnbot6> r11802 | agentz++ | * reimplemented prove6 script using Perl 5, which can harness the pugs test suit with specified implementations.

[17:35] <svnbot6> r11802 | agentz++ |   util/prove6 --pugs t/some-dir/*.t

[17:35] <svnbot6> r11802 | agentz++ |   util/prove6 --perl5 t/some-dir/*.t

[17:35] <svnbot6> r11802 | agentz++ | option aliases --haskell, --perl, --v6-alpha are also supported

[17:35] <svnbot6> r11802 | agentz++ | XXX add support for other pugs' backends (--js and --parrot)

[17:36] <agentzh> [particle]: it is windows friendly, because i'm using windows. :=)

[17:37] <agentzh> [particle]: i've tested it under cygwin to make sure it's unix-friendly as well.

[17:37] <[particle]> yay. did you remove prove6.bat? (upping)

[17:37] <agentzh> yes, i did

[17:37] <agentzh> win32 users can always say "perl util/prove6 ..."

[17:40] *** Termy joined
[17:40] <svnbot6> r11803 | agentz++ | fixed a typo in prove6

[17:43] <agentzh> [particle]: it faults to pugs anyway in case that someone else will change the code as you said. :P

[17:43] <agentzh> *defaults

[17:43] *** thepler joined
[17:44] *** mIRCTRUser-343 joined
[17:46] *** justatheory joined
[17:48] * agentzh looks into t/examples/

[17:52] * [particle] rebuilds pugs

[17:52] *** khisanth_ joined
[17:53] *** khisanth_ is now known as Khisanth

[17:53] *** thepler joined
[17:55] <svnbot6> r11804 | agentz++ | multi_sub.t: adjusted the planned number of tests

[17:55] *** daxim joined
[17:59] *** lollan joined
[18:02] *** hexmode joined
[18:07] *** agentzh joined
[18:07] <agentzh> ?eval (1,2,3).say

[18:07] *** evalbot_11798 is now known as evalbot_11804

[18:07] <evalbot_11804> OUTPUT[123 ] Bool::True

[18:08] <agentzh> ?eval [1,2,3].say

[18:08] <evalbot_11804> OUTPUT[1 2 3 ] Bool::True

[18:08] <agentzh> is this difference expected?

[18:08] <agentzh> or is it a bug?

[18:09] <agentzh> examples/slurpy-list-params/flatten-arg-lists.pl fails its tests due to this difference

[18:10] *** larsen joined
[18:10] <aufrank> ?eval my @a = [1, 2, 3]; say @a;

[18:10] <evalbot_11804> OUTPUT[1 2 3 ] Bool::True

[18:10] <aufrank> ?eval my $a = [1, 2, 3]; say $a;

[18:10] <evalbot_11804> OUTPUT[1 2 3 ] Bool::True

[18:11] <agentzh> Array objects may be different from Seq

[18:11] <aufrank> ?eval my @a = (1, 2, 3); say @a;

[18:11] <evalbot_11804> OUTPUT[123 ] Bool::True

[18:11] <aufrank> ?eval my $a = (1, 2, 3); say $a;

[18:11] <evalbot_11804> OUTPUT[1 2 3 ] Bool::True

[18:11] <aufrank> huh

[18:11] <aufrank> that last one seems to me like the @seq behavior is wrong

[18:11] <agentzh> :)

[18:11] <agentzh> aufrank: will you fix it?

[18:12] <aufrank> not within the next 6-8 hours

[18:12] <aufrank> not on a machine where I have a checkout until later tonight

[18:12] <agentzh> okay

[18:12] <agentzh> never mind

[18:12] <agentzh> i'll just "fix" the tests

[18:12] <aufrank> sorry, I'd do it if I could :)

[18:13] <agentzh> so (1,2,3).say should prints "1 2 3", yes?

[18:13] <agentzh> *print

[18:13] <xerox> ?eval (1,2,3).say

[18:13] <evalbot_11804> OUTPUT[123 ] Bool::True

[18:13] <xerox> :-)

[18:14] <agentzh> okay, i'll leave that to audreyt

[18:14] *** mako132_ joined
[18:14] <agentzh> bedtime &

[18:18] *** weinig|bbl is now known as weinig

[18:32] *** ludan joined
[18:35] *** justatheory joined
[18:35] *** thepler joined
[18:41] <aufrank> ?eval[,](1, 2, 3).say

[18:41] <lambdabot> Unknown command, try @list

[18:41] <evalbot_11804> OUTPUT[123 ] Bool::True

[18:41] <aufrank> ?eval [,]<1 2 3>.say

[18:41] <evalbot_11804> Error:  unexpected "[" expecting program

[18:42] *** mako132_ joined
[18:45] *** ruz joined
[18:59] *** mollmerx joined
[19:07] *** Termy joined
[19:20] *** cognominal joined
[19:25] *** cognominal joined
[19:26] *** thepler joined
[19:30] *** justatheory joined
[19:32] *** kattana_ joined
[19:36] *** dduncan joined
[19:38] *** tup joined
[19:55] *** frederico joined
[20:03] *** thepler joined
[20:05] *** b_jonas joined
[20:05] *** dduncan joined
[20:07] *** mako132_ joined
[20:10] *** bpphillips left
[20:17] *** cjeris left
[20:17] *** mIRCTRUser-343 is now known as CyberProg-food

[20:25] *** thepler joined
[20:28] *** aufrank joined
[20:34] *** mago joined
[20:39] *** CyberProg-food is now known as CyberProg

[20:40] *** SageLT joined
[20:43] *** froh-doh joined
[20:49] *** justatheory joined
[20:58] <nothingmuch> gaal: moose

[20:59] *** frederico joined
[21:05] <gaal> moose.

[21:05] <gaal> home-p?

[21:15] *** mako132_ joined
[21:25] *** hexmode joined
[21:25] *** Khisanth joined
[21:30] *** Forth_ joined
[21:31] <nothingmuch> gaal: yes

[21:31] <nothingmuch> i had an "interesting" journey

[21:31] <nothingmuch> turns out kaplan is closed after 22:00

[21:31] <nothingmuch> or actually around 21:50

[21:32] <nothingmuch> but at least I got some excercise =)

[21:47] *** fglock left
[21:50] *** tup joined
[21:51] <svnbot6> r11805 | Sage++ | The AST description for the parser now contains many, many more nodetypes. I believe this is now an exhaustive list, but I'm not optimistic enough to claim anything for sure.

[21:54] <svnbot6> r11806 | Sage++ | The parser for the translator now works with the extended AST definition to name all nodes.

[21:54] <svnbot6> r11806 | Sage++ | At this point, all files should (hopefully) parse with no unknown nodes. This can be checked by running the parser with the -U (Unknown Debug) option.

[21:54] <svnbot6> r11806 | Sage++ | The parser is, more or less, complete: it parses everything and has a proper name for everything it parses.

[21:57] <svnbot6> r11807 | Sage++ | Adding the tool I used to get node names. It's very simple and should be pretty self explanatory (useage instructions are in the file), but in the interest of documenting my SoC work I'm including it.

[21:57] <svnbot6> r11807 | Sage++ | It can find all node names in files in the folder it's run in, or search for instances of a given nodetype in all files in the current folder. Useful for me as a dev tool.

[22:04] *** xinming joined
[22:08] *** xinming left
[22:13] *** justathe1ry joined
[22:14] *** mako132__ joined
[22:18] *** frederico joined
[22:21] *** qmole_ joined
[22:38] *** KingDiamond joined
[22:40] *** justatheory joined
[22:47] *** mako132_ joined
[22:55] *** weinig is now known as weinig|bbl

[22:55] *** thepler joined
[22:58] *** thepler joined
[23:08] *** dduncan joined
[23:23] *** justatheory joined
[23:26] *** mako132_ joined
[23:26] *** justatheory joined
[23:26] *** thepler joined
[23:42] *** unobe joined
[23:48] *** miyagawa joined
[23:52] *** mako132_ is now known as mako132|mysqlrep

[23:59] *** mako132|mysqlrep is now known as mako132|bailing

