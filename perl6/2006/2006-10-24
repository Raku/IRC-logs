[00:02] *** dduncan joined
[00:02] *** Odin- joined
[00:02] *** beppu joined
[00:02] *** penk joined
[00:02] *** nothingmuch joined
[00:02] *** jiing joined
[00:02] *** Patterner joined
[00:02] *** nelhage joined
[00:02] *** stevan_ joined
[00:02] *** araujo joined
[00:02] *** Narcisse joined
[00:02] *** meppl joined
[00:02] *** takesako joined
[00:02] *** autark joined
[00:02] *** osfameron joined
[00:02] *** masak joined
[00:02] *** Shabble joined
[00:02] *** spinclad joined
[00:10] *** justatheory joined
[00:20] <TimToady> @tell aufrank 'my $foo is context;'

[00:20] <lambdabot> Consider it noted.

[00:29] *** mako132_ joined
[00:42] *** justatheory joined
[00:54] *** vel joined
[00:58] *** mauke_ joined
[00:59] *** frankg joined
[00:59] *** markstos joined
[01:03] *** mauke_ is now known as mauke

[01:04] <markstos> I just made the mistake of using 'given' when I meant 'when'. It would be nice if there was a warning emitted if given {}is used, without doing anything useful with it.

[01:04] <markstos> ?eval for <a b c> -> $rm { given Str { say "$rm is a Str" } default {   say "$rm was not a Str, it was: "~$rm.WHAT } }

[01:04] <evalbot_r14504> OUTPUT[a is a Str␤a was not a Str, it was: Str␤b is a Str␤b was not a Str, it was: Str␤c is a Str␤c was not a Str, it was: Str␤] undef

[01:08] *** bluejay joined
[01:09] *** bluejay left
[01:14] *** weinig|food is now known as weinig

[01:32] <revdiablo> ?eval given Str { say $_ } # How can the usefulness be determined by a compiler?

[01:32] <evalbot_r14504> OUTPUT[Str␤] Bool::True

[01:33] <markstos> I'm not sure if it's even possible or practical. I'm just reporting a "wish" from a user's perspective.

[01:33] *** nipotaway is now known as nipotan

[01:34] <eviltwin_b> it might be possible to warn if the block has neither whenclauses nor uses of $_, I suppose

[01:34] <eviltwin_b> (more precisely, references $_ neither explicitly nor implicitly)

[01:35] <markstos> eviltwin_b: That's the kind of thing I had in mind.

[01:50] *** Aankh|Clone joined
[02:05] *** lambdabot joined
[02:07] *** MacVince joined
[02:20] <markstos> I found a Perl 5 embedding case we might want to address. If I have a Perl 5 string and pass it to a Perl 6 routine that checks to see if the arg is a string, it won't work.

[02:21] <markstos> the type appears to be "{obj-perl5}" instead.

[02:29] *** mac93 joined
[02:30] <markstos> Nevermind. There isn't a bug there like I thought.

[02:58] <bcorn> best book for getting started with haskell?

[03:01] <araujo> Introduction to Functional Programming - Bird

[03:07] <bcorn> araujo: thanks

[03:13] *** nicodaemos joined
[03:20] *** weinig is now known as weinig|zZz

[03:22] *** zMott joined
[03:54] *** Yappo is now known as a

[03:55] *** a is now known as Yappo

[03:55] *** zMott left
[04:03] *** nicodaemos joined
[04:27] *** scw joined
[04:30] *** SubStack joined
[04:51] *** elmex joined
[05:00] *** root4o joined
[05:00] *** mjk joined
[05:09] *** root4o left
[05:15] *** BooK joined
[05:29] *** DHGE joined
[05:36] *** mdiep joined
[05:43] *** chaoslawful joined
[05:47] *** marmic joined
[05:50] *** mdiep joined
[05:55] *** araujo joined
[06:09] *** seano joined
[06:13] *** nipotan is now known as nipotaway

[06:14] *** iblechbot joined
[06:24] *** ozan joined
[06:25] *** ozan is now known as ozayam

[06:27] *** nipotaway is now known as nipotan

[06:32] *** kanru joined
[06:37] *** Pomin joined
[07:26] *** ditto joined
[07:58] *** nipotan is now known as nipotaway

[08:02] *** qmole joined
[08:15] *** nipotaway is now known as nipotan

[08:49] *** kensanata joined
[08:58] *** ruoso joined
[09:07] *** bcorn joined
[09:22] *** andara joined
[09:44] *** Avochelm joined
[09:46] *** iblechbot joined
[09:55] *** dduncan left
[09:57] *** chris2 joined
[10:04] *** buetow joined
[10:18] *** Pominx joined
[10:38] *** kanru joined
[10:53] *** andara left
[10:53] *** andara joined
[11:10] *** fglock joined
[11:14] *** xinming joined
[11:21] *** norageek joined
[11:31] *** Psyche^ joined
[11:37] *** vytautas joined
[11:47] *** weinig joined
[11:47] *** Psyche^ is now known as Patterner

[12:12] *** iblechbot joined
[12:12] <svnbot6> r14505 | fglock++ | v6/emitter(2) - updated HACKING

[12:17] *** Limbic_Region joined
[12:24] *** nipotan is now known as nipotaway

[12:36] <svnbot6> r14506 | fglock++ | v6/emitter(2) - updated HACKING

[12:40] <fglock> implementing a fully optimized v6/emitter(2) is probably not the way to go - this will take too long

[12:44] <Limbic_Region> yes fglock, and the rest of the p6 project is moving so fast - you don't want to be left behind

[12:44] <Limbic_Region> </tounge_in_cheek>

[12:45] <fglock> Limbic_Region: :)

[12:45] <fglock> Limbic_Region: I have to use my human resources sparingly

[12:48] <Limbic_Region> that I understand - there isn't enough hours in the day to learn all that I want, spend time with my family, earn a living at $work, and be productive too

[12:49] <Limbic_Region> I have come to the conclusion however that my hacking put in perspective of the mathematical world is definately "pure" and not "applied"

[12:49] *** nicodaemos_ joined
[12:50] <fglock> Limbic_Region: an API layer can fix that

[12:55] <Limbic_Region> fglock - sure, but that's someone else's problem

[12:56] <fglock> Limbic_Region: right :)

[12:57] <Limbic_Region> fglock - are technical books expensive where you are?

[12:58] <fglock> Limbic_Region: reasonably expensive, yes

[12:59] <Limbic_Region> and what are the custom tax on gifts from US?

[12:59] <fglock> Limbic_Region: there is no taxes for books, afaik

[13:00] <Limbic_Region> and you are in .br right?

[13:00] <fglock> Limbic_Region: yes

[13:00] <Limbic_Region> hrmm - I was completely unaware of this problem but you are not alone

[13:01] <fglock> brb - meeting &

[13:01] <Limbic_Region> just the other day I was chatting with a fellow from argentina who indicated the cost prohibitive nature of books their

[13:13] *** weinig is now known as weinig|away

[13:21] *** [particle] joined
[13:24] *** thepler joined
[13:42] *** c6rbon_ joined
[13:49] *** vel joined
[13:51] *** chris2 joined
[13:51] <nothingmuch> @seen cmarcelo

[13:51] <lambdabot> Last time I saw cmarcelo was when I left #darcs, #gentoo-haskell, #ghc, #haskell, #haskell-blah, #haskell-overflow, #haskell.es, #haskell.it, #haskell.se, #haskell_ru, #oasis, #perl6 and #scannedinavi

[13:51] <lambdabot> an 5d 11h 56m 38s ago, and .

[13:55] *** rlb3 joined
[14:00] *** c6rbon_ is now known as c6rbon

[14:12] *** hexmode joined
[14:22] *** aufrank joined
[14:23] *** cjeris joined
[14:30] *** iblechbot joined
[14:49] *** nusgnaf joined
[14:52] *** rlb3 joined
[14:55] *** nusgnaf left
[15:04] <svnbot6> r14507 | audreyt++ | * Pugs.Parser: Parse for (but do nothing with) "of" types in return type:

[15:04] <svnbot6> r14507 | audreyt++ |     sub f (Int $x --> Hash of Int) {...}

[15:04] <masak> I get "user error (Incompatible version number for compilation unit" all the time

[15:04] <masak> even after following the advice in "Consider removing /usr/lib/perl6/site_perl/Prelude.pm.yml and make it again"

[15:05] <audreyt> rm blib6/lib/*.yml?

[15:05] <lambdabot> audreyt: You have 1 new message. '/msg lambdabot @messages' to read it.

[15:05] <audreyt> @messages

[15:05] <lambdabot> TimToady said 5d 21h 54m 7s ago: MOH is just a rotated HOW. :)

[15:05] <audreyt> weird, lambdabot has a confused memory

[15:05] <[particle]> sure does

[15:06] <nothingmuch> heh

[15:07] <svnbot6> r14508 | audreyt++ | * ext/MessageBus: New extension for a Pub/Sub message bus with

[15:07] <svnbot6> r14508 | audreyt++ |   multiple channels and pluggable cache backends.

[15:09] <gaal> audreyt: in your autopugs, please add the following after make

[15:09] <gaal> rm /tmp/refresh-prelude

[15:10] <gaal> chmod a+w blib6/lib/Prelude.yml

[15:10] <gaal> and add some moose to rebuild if /tmp/refresh-prelude exists :)

[15:11] <audreyt> gaal: the autobox is in evalbot-loop

[15:11] <gaal> that way no need to impersonate you

[15:11] <audreyt> please add it yourself :)

[15:11] <audreyt> autopugs even

[15:11] <audreyt> (not being lazy; the hotspring net here is not exactly fast)

[15:11] <gaal> okies :)

[15:11] <gaal> sure

[15:12] <gaal> be more lazy, it's good for you :)

[15:12] <masak> hotspring net? :)

[15:13] <gaal> uh, someone remind me, how do you set up a unix dir so that every file created in it is a+w?

[15:13] <gaal> or belongs to a certain g, also good

[15:13] <nothingmuch> @tell cmarcelo i'd like to discuss the purity of the meta object in the haskell versions, please ping

[15:13] <lambdabot> Consider it noted.

[15:13] <wilx> Change umask?

[15:13] <nothingmuch> gaal: my flight control friend has access to very up to date weather data

[15:13] <nothingmuch> he'll give us an update tomorrow

[15:14] <nothingmuch> though i'm skeptical =(

[15:14] <gaal> nothingmuch: I saw those metaobjects debauching last night, I think it's high time cmarcelo and you take care of their purity

[15:14] <eviltwin_b> certain group: give dir that group, flag as setgid

[15:14] <gaal> if not a little late

[15:15] <eviltwin_b> (doesn't work on some network filesystems)

[15:15] <gaal> wilx: I want everybody who writes there to moose those perms, even if their umask is unfun

[15:16] <gaal> eviltwin_b: yeah, that's good. what's the incantation? chmod gs+w ?

[15:17] <eviltwin_b> chmod g+s

[15:17] <gaal> and then g+w?

[15:17] <eviltwin_b> change the group first as some kernels will clear the setgid

[15:17] <eviltwin_b> yes

[15:17] <gaal> great, thanks

[15:18] <eviltwin_b> keep in mind that the group write will still depend on the umask

[15:18] <masak> so, I want a something equivalent to an inheritable private method in a perl6 class... is there a way to do this?

[15:18] <eviltwin_b> if you need finer control you need a kernel+fs that speaks posix acls

[15:18] <eviltwin_b> ...or a network filesystem with its own permissions foo, but that has its own issues :)

[15:19] <gaal> eviltwin_b: the only purpose here is to allow all ferather users to ask autopugs to regen its prelude when it's broken (happens occasionally)

[15:19] <gaal> even if they don't have sudo privs

[15:19] <gaal> but also allowing autopugs' user to remove the flag file

[15:21] <masak> er, or even an inheritable method at all... is this implemented? I can't get pugs to find my base class method

[15:22] * masak studies the tests

[15:27] <masak> ah, needed to prefix the method call with "self.". now works satisfactorily

[15:28] <audreyt> or $.

[15:28] <audreyt> $.meth(1,2,3)

[15:30] *** bonsai joined
[15:31] <masak> audreyt: yes. just found that out myself and changed the syntax to that :)

[15:34] <svnbot6> r14509 | audreyt++ | * MessageBus: Method name cleanup from obra++

[15:40] <fglock> re MO: is there a paper or reference about it? I need to find out how this interacts with v6 emitter

[15:40] <svnbot6> r14510 | gaal++ | * allow users to request an evalbot refresh by touching

[15:40] <svnbot6> r14510 | gaal++ |   /tmp/autopugs/refresh

[15:40] <svnbot6> r14510 | gaal++ |   (not enabled on feather until we set up everyone to

[15:40] <svnbot6> r14510 | gaal++ |   be members of a common group, to prevent the file from

[15:40] <svnbot6> r14510 | gaal++ |   accidentally not being removable by the evalbot-loop;

[15:40] <svnbot6> r14510 | gaal++ |   that would trigger endless refreshes.)

[15:41] <gaal> Juerd: could you please add a new group on feather, and make everyone (including new users) members of it? see 14510

[15:41] <masak> ?eval class A { has @.x = <a b c>; method y( $i ) { return @.x[ $i ]; } } class B is A { method z( $i ) { return $.y( $i ); } } B.new.z( 1 )

[15:41] <evalbot_r14509> \undef

[15:41] <masak> evalbot_r14509: I would have liked a 'b' from you

[15:42] <masak> seems that when I try to access a base class' member variables through a method called from a derived class, I get nothing back

[15:42] <Juerd> gaal: I don't understand what the purpose would be of a group that everyone is in. Unix has owner, group, and world. Doesn't world suffice?

[15:43] <masak> now, I'm open for the possibility that I've misunderstood something, but barring that, I'd say this is an error or a missing feature

[15:44] <gaal> Juerd: is there a way to ensure a file created in some dir is o+w?

[15:44] <Juerd> gaal: A directory can be g+s, which automatically sets the group. This group can then be that of the evalbot's user.

[15:45] <Juerd> gaal: I don't think /tmp is a good place for this, by the way. It's cleaned on bootup.

[15:45] <Juerd> gaal: Also, aren't we better off with a command that sends a signal to the process?

[15:45] <audreyt> masak: initializaer did not inherit properly; please writ a test or locate one

[15:46] <masak> audreyt: oki

[15:46] <Juerd> In any case, I find adding everyone to the same group a lot of maintenance for such a small feature.

[15:46] <Juerd> There are so many ways to do this. You could even build a web interface, or let people request this from IRC.

[15:47] <gaal> Juerd: not via evalbot, fwiw. this is for use when evalbot breaks :)

[15:47] <gaal> the signal approach makes the most sense

[15:47] <Juerd> Why not refresh automatically on breakage?

[15:47] <Juerd> Breakage tends to be detectable

[15:47] <lumi> gaal: Why not via evalbot? The breakage is just pugs not working

[15:48] <fglock>  <lazy> how is MO different from Moose? </lazy>

[15:48] <gaal> hmm.

[15:49] *** BooK joined
[15:50] <gaal> okay, I'm going away for ~3hr, will do that if somebody doesn't beat me to it

[15:51] *** justatheory joined
[15:51] <svnbot6> r14511 | masak++ | [t/oo/inheritance.t]

[15:51] <svnbot6> r14511 | masak++ | * added test for inherited initializer

[15:53] <audreyt> fglock: MO is compiled.

[15:56] <fglock> audreyt: in the sense that it does not depend on an intermediate language?

[15:57] <fglock> like Moose is implemented in perl5 (the VM language)

[16:00] <fglock> does compiled mean it belongs to the VM level?

[16:01] <fglock> like Parrot should do

[16:01] <svnbot6> r14512 | andara++ | [runpugs]

[16:01] <svnbot6> r14512 | andara++ | -now runs latest release by default, latest devel as option

[16:01] <svnbot6> r14512 | andara++ | -runpugs2: devel version, now with non-interactive sessions (not live yet)

[16:01] <svnbot6> r14511 | masak++ | [t/oo/inheritance.t]

[16:01] <svnbot6> r14511 | masak++ | * added test for inherited initializer

[16:01] *** GeJ joined
[16:05] <masak> seems svnbot6 is confused today, too

[16:05] <masak> I'm getting undeserved karma here :)

[16:08] <audreyt> fglock: compiled means that it can take a set of declarations and emit native code in (say) perl5 or haskell code for them

[16:13] <leo> » Joined channel "#parrot".

[16:13] <leo> » Checking for new commits (ignore error messages)... *** Cannot cast from VHandle {handle: temp-svnbot-20777-532} to Object at /home/audreyt/pugs/examples/network/svnbot.pl line 152, column 13-22

[16:13] <leo> svnbot troubles

[16:14] <leo> hi btw

[16:20] <fglock> leo: hi

[16:21] <fglock> audreyt: so it could even be written in Perl6

[16:22] <fglock> no, I don't think this is what you mean

[16:23] <fglock> you mean it can choose to either inline code or to make calls (?)

[16:26] *** buetow joined
[16:27] *** quix joined
[16:28] *** quix left
[16:35] *** cj joined
[16:36] <cj> audreyt: whee!  You're coming to talk to us on Friday!

[16:38] *** DHGE joined
[16:40] *** cmarcelo joined
[16:40] <cmarcelo> nothingmuch: ping

[16:42] *** the_dormant joined
[16:43] <svnbot6> r14513 | fglock++ | v6/emitter(2) - added multisub-example.pl

[16:44] <fglock> cmarcelo: would you help me with MO?

[16:45] <the_dormant> Hi all, I'm learning perl6 (w/ very little background on perl) and I'm looking for the equivalent of -C, -A on files

[16:45] <the_dormant> anyone help please

[16:46] <xinming> the_dormant: perl 6 uses utf-8 by default

[16:46] <cmarcelo> fglock: sure. but I know very little bit about it :o)

[16:47] <fglock> cmarcelo: np - let's learn together

[16:47] <PerlJam> the_dormant: perl6 still has those operators I believe.

[16:48] <fglock> cmarcelo: the input data for MO comes from an AST transformation, right?

[16:49] <cmarcelo> I think so. At least the tests I read suggest that..

[16:49] <fglock> cmarcelo: the output data is native source code?

[16:50] <xinming> PerlJam: I think It is depend on the compiler. ;-)

[16:51] <xinming> PerlJam: If we use perl 5 as vm, then, We don't need to worry about this issue.

[16:54] <cmarcelo> i don't know exactly. it builds a bunch of objects in perl5 (or hs in case of moh), that could be serializable. but there are method definitions which are in MO right now just refs to p5 code, but it could be ref to a more abstract representation of code (part of a p6 ast, for example), which can be serializable too..

[16:54] <cmarcelo> makes sense?

[16:56] <fglock> cmarcelo: the output code makes no use of OO, since MO desugars it into basic operations?

[16:57] <cmarcelo> basic operations == using MO vocabulary to call a method instead of doing $obj.meth() ?

[16:58] <fglock> yes

[16:58] <cmarcelo> in the code inside method definitions I'm not sure if this actually happens (looks like it should)...

[17:00] <cmarcelo> fglock: what do you have in mind?

[17:01] <fglock> cmarcelo: I'm writing a code generator for v6.pm

[17:02] <fglock> cmarcelo: gaal said you should take care of metaobjects purity - what is he referring to?

[17:04] <fglock> cmarcelo: re have in mind - I'm looking for alternate architectures

[17:06] <cmarcelo> i'm (trying to) translate MO code into Haskell. i guess he said that regarding the debate: whether the objects in moh should be datatypes full of IORefs/TVars (mutable things) or should be just pure data types. this has consequences on how I should deal with attributes inside objects (how do the accessors) and how do inherithance too..

[17:09] <cmarcelo> fglock: I thought that much of this MO-thing would be (in a sense) part of pugs AST... this make sense?

[17:10] <fglock> cmarcelo: it depends how much preprocessing you are doing during parsing

[17:11] <cmarcelo> fglock: (i used tried to install v6 from CPAN and my machine freezed [froze?] doing lots and lots of IO during 01-tap.t test in v6-alpha)

[17:11] <cmarcelo> s/used//

[17:11] <fglock> in order to execute BEGIN blocks you have to go very far

[17:12] <fglock> cmarcelo: there are some problems regarding Cache::Cache module and access rights - if you make tests as non-root

[17:13] <fglock> but this should only make it 50% slower

[17:14] <cmarcelo> i'll try again today. with non-root it should be slower but work fine?

[17:14] <fglock> yes

[17:15] <fglock> and it takes about 80MB of free ram, otherwise it will page fault a lot

[17:17] <fglock> cmarcelo: how is code that uses MO faster than current code?

[17:20] *** weinig|away is now known as weinig

[17:26] <cmarcelo> fglock: don't know about performance, but the idea is that MO provides more "meta-candy" than what we have now..

[17:26] *** mdiep joined
[17:36] <cmarcelo> fglock: nothingmuch and audreyt can enlighten you more about this...

[17:36] <fglock> cmarcelo: thanks - this is starting to make sense

[17:42] *** andara left
[17:49] *** nicodaemos joined
[17:51] <leo> any one here to fix the mentioned pugs and/or svnbot err?

[18:01] *** weinig is now known as weinig|bbl

[18:02] *** fglock left
[18:12] *** [particle] joined
[18:12] *** buubot joined
[18:19] *** ozayam joined
[18:40] *** dmq joined
[18:41] *** stevan__ joined
[18:59] *** the_dormant_ joined
[19:03] *** the_dormant_ left
[19:03] *** the_dormant_ joined
[19:04] *** DHGE joined
[19:05] <the_dormant_> Hi all, anyone knows how to get the attributes of a file in pugs (eqv of -C, -A in perl 5)

[19:08] <kolibrie> 12:47 < PerlJam> the_dormant: perl6 still has those operators I believe.

[19:09] <audreyt> we don't currently implement -A -M etc

[19:09] <audreyt> please add the ones you want to t/operators/filetest.t

[19:09] <audreyt> and they'll get hacked in

[19:09] <audreyt> you do have a commit bit?

[19:10] <audreyt> if not, what's your email? :)

[19:10] *** svnbot6 joined
[19:11] <audreyt> leo: hm, that means you are running an outof date pugs

[19:11] <audreyt> trunk pugs does not exhibit that error

[19:11] <audreyt> (I just restarted svnbot6 to make sure)

[19:11] <the_dormant_> [email@hidden.address]
[19:11] <leo> audreyt: I'm running it on feather, whatever that is :)

[19:12] <leo> it dies after 6 mins, when querying again the rev

[19:13] <PerlJam> feather is still running an old ghc isn't it?

[19:13] <integral> PerlJam: it reports 6.6

[19:14] <leo> Version: 6.2.13 (r14513)

[19:14] <PerlJam> ah.  For some reason I thought feather wasn't updated.

[19:20] <svnbot6> r14514 | audreyt++ | * svnbot.pl: Trying to fix bug without knowing what's going on...

[19:21] <audreyt> leo: try again?

[19:21] *** HiTech69 joined
[19:21] <leo> started ... waiting 5 mins ...

[19:23] <TimToady> the_dormant_: commitbit sent, please add yourself to AUTHORS as 1st commit

[19:24] <leo> audreyt: seems to have survived a ?check request - lookin good

[19:28] <the_dormant_> TimToady: ok, thx

[19:28] *** ruoso joined
[19:31] <leo> audreyt: that seems to have fixed it - thanks a lot

[19:33] <audreyt> np :)

[19:35] <leo> svnbotl successfully did report r15014 - thanks

[19:36] <audreyt> woot

[19:49] <cj> audreyt: !

[19:49] <cj> audreyt: got lunch plans on friday?

[19:53] <audreyt> cj: I think I'll do lunch in amazon no?

[19:54] *** justatheory joined
[19:56] <cj> audreyt: sure.  The cafeteria doesn't serve the best food, but it's convenient for those in PacMed.  You can get there from US1 (where you'll be speaking) on a shuttle.  There is a lot of "international" food in the very near vicinity to US1, if you want to eat asian food.

[19:56] * [particle] thinks it's worth a trip to salumi if you can get there for lunch (and you eat meat)

[19:56] <[particle]> ooh, better, audrey's at us1

[19:58] *** the_dormant_ joined
[20:02] *** nicodaemos joined
[20:06] <audreyt> cj: I'll let you decide :)

[20:06] <audreyt> lunch &

[20:13] *** justatheory joined
[20:16] *** larsen_ joined
[20:16] <cj> audreyt: ha!  You must think I'll be paying, then.  I'd have to run that by the wife.

[20:17] <cj> audreyt: how many folks do you want to see at lunch?

[20:22] *** weinig joined
[20:36] <audreyt> cj: I wouldn't mind...

[20:38] <audreyt> any number of folks, that is

[20:39] *** the_dormant_ joined
[20:40] <cj> alrighty.  I'll see if I can gather some people.  We'll make a decision about where to eat based on how many people show up.  Do you want to do lunch before, between or after your talks?

[20:41] *** fglock joined
[20:41] <svnbot6> r14515 | kudra++ | Placeholder

[20:45] *** the_dormant_ left
[20:54] *** jferrero joined
[20:55] *** doepiedoe joined
[20:55] <doepiedoe> Hey ;)

[20:56] <doepiedoe> i'm trying to translate a perl script to php, but can someone tell me what this piece of code does?

[20:56] <buubot> correct syntax is: translate to/from language string

[20:57] <wilx> Huh...

[20:57] <wilx> You are doing it in the wrong direction :)

[20:58] <wilx> The translation.

[21:01] <integral> Pugs doesn't have a PHP backend yet?

[21:05] *** SubStack joined
[21:07] <fglock> integral: misc/Parser-Mini/pil1_json_emit_php.pl - but this was almost a joke

[21:08] <fglock> home &

[21:08] *** ruoso joined
[21:08] *** fglock left
[21:09] *** the_dormant_ joined
[21:19] *** Limbic_Region joined
[21:46] *** mauke joined
[21:47] <qmole> 2

[22:01] *** justatheory_ joined
[22:14] *** GeJ joined
[22:16] *** Aankhen`` joined
[22:20] *** BooK joined
[22:41] *** thepler joined
[22:44] *** bcorn joined
[22:55] *** mako132_ joined
[22:56] *** weinig is now known as weinig|bbl

[22:58] *** justatheory joined
[23:03] <svnbot6> r14516 | the_dormant++ | added -M,-C,-A operators check

[23:29] *** weinig|bbl is now known as weinig

[23:41] *** dmq joined
[23:47] *** thepler joined
[23:55] <cmarcelo> @tell nothingmuch just commited more bits on moh, take a look to see where I'm having trouble understanding MO. I'll be back in about 2hr.

[23:55] <lambdabot> Consider it noted.

