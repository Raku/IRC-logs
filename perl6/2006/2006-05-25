[00:21] *** ajs_home joined
[00:22] *** neoesque joined
[00:24] *** hikozaemon joined
[00:34] *** coumbes joined
[00:48] *** unobe_ joined
[00:53] *** SubStack joined
[01:18] *** unobe__ joined
[01:18] *** unobe__ is now known as unobe

[01:19] *** jserv-- joined
[01:28] *** rdice joined
[01:34] *** weinig is now known as weinig|away

[01:40] *** sri_ joined
[02:03] *** justatheory joined
[02:43] *** SamB joined
[02:58] *** viirya joined
[03:13] *** avar joined
[03:18] <svnbot6> r10423 | scw++ | Pugs::Grammar::MiniPerl6 test updated for cooperation with ratchet later

[03:23] *** avar joined
[03:57] *** macroron joined
[04:05] *** Kattana joined
[04:40] *** takesako is now known as audreytak

[04:43] *** audreytak is now known as takesako

[04:45] *** penk joined
[05:31] *** jshriver joined
[05:31] <jshriver> hello

[05:31] <jshriver> What's new in perl 6, or what's diff in it an the 5 series

[05:33] *** xern joined
[05:53] *** iblechbot joined
[05:54] *** FurnaceBoy left
[05:55] *** Quell joined
[06:41] *** xern joined
[06:42] *** iblechbot joined
[07:10] *** avarab joined
[07:11] *** SM_ax joined
[07:13] *** neoesque joined
[07:17] *** Aankhen`` joined
[07:30] *** drrho joined
[07:41] *** ko1_away is now known as ko1

[07:48] *** baest_ joined
[07:58] *** baest_ joined
[07:59] *** baest_ is now known as baest

[08:04] *** marmic joined
[08:05] *** ko1 is now known as ko1_away

[08:08] *** baest joined
[08:20] *** SubStack joined
[08:24] *** SM_ax joined
[08:31] *** elmex joined
[08:47] *** baest joined
[09:38] * theorbtwo pingsabout.

[09:39] <theorbtwo> Bah, I hate it when I'm not sure if something should be here or on the ML.

[09:39] <theorbtwo> Conrad says:

[09:39] <theorbtwo> The basic idea is this: since the pugs svn tree is mirrored at perl.org, we

[09:39] <theorbtwo> could have a subdirectory (for example "Perl_6_ Wiki") in the docs branch of

[09:39] <theorbtwo> the source tree that would have a wiki-like hierarchy of html pages (or pod

[09:39] <theorbtwo> pages for generating html) below it. The downside is that it would take

[09:39] <theorbtwo> somewhat more effort to make changes and additions.

[09:39] <theorbtwo> </blockquote>

[09:41] <theorbtwo> I tend to think that a wiki Done Right could be a web front-end to a SVN repository -- that is, each page is a file in the svn repo, and modifying the page via the web form is just another way to make an svn checkin.

[09:41] <integral> imho what I'd really like is a auto-updating job running on feather that produces an index of .../doc, and renders the pod to HTML so people can read it on the web confortably.

[09:41] <theorbtwo> (And we allow people to access the svn repo directly, without going through the web fe if they want.)

[09:41] <theorbtwo> I wonder if openfoundry could handle the load of checking if a page is up to date very-very-often.

[09:42] <integral> umm, the svnbot already does checking :)

[09:42] <integral> and the auto-reload-the-evalbot-thing too

[09:42] <theorbtwo> Hm, true enough.

[09:42] <theorbtwo> ...so apparently it can.

[09:43] <integral> we just need to capture someone with tuits

[09:43] <theorbtwo> Conrad has a major point that if modifying the docs isn't easy, it won't get done all that much.  That's rather the point of a wiki.

[09:44] <theorbtwo> Anybody know if openfoundry allows giving wider rights on a subdir then is normal for a repository?

[09:44] <integral> viewing needs to be easy too.  the current: view raw source in webbrowser direct from svn,  or check out and use perldoc isn't easy enough

[09:44] <theorbtwo> I quite agree.

[09:45] * integral always itches for the red pen when reading stuff

[09:45] <theorbtwo> Speaking of, I'd love the editing interface to (optionally?) put every paragraph in a different textarea.

[09:45] <theorbtwo> When editing longish wikis, it's generally horribly difficult to find the bit of text you wanted to change.

[09:46] <integral> I believe that's a mediawiki feature

[09:46] <theorbtwo> Oh!

[09:46] <theorbtwo> Wikipedia didn't do it the last time I looked.

[09:46] <integral> it puts wee '[edit]' tags next to each heading on the page, so you just click that to edit a specific section

[09:47] <theorbtwo> The sections can still be quite large, though.

[09:47] <integral> by 'section', I also mean subsections, subsubsections, subsubsubsections, etc :)

[09:48] * integral & off to do some mathing

[09:49] <theorbtwo> Have fun.

[09:50] <theorbtwo> Hm, there's an openfoundry wiki available to us.

[09:51] <integral> we have a pugs kwiki: pugs.kwiki.org (see the topic!) too

[09:51] <theorbtwo> Oh, I forgot about that one.

[09:52] <theorbtwo> I tend to think the problem is more too many wikis and not enough documentation of any of them then it is not the right wiki.

[09:52] <theorbtwo> (Not that having the one true wiki run a good wikisystem wouldn't be good, but it's a minor point compared to there being a one true wiki system.)

[09:56] <theorbtwo> Hm, the openfoundry frontend doesn't seem to allow access control on a subdirectory level.

[09:57] <theorbtwo> Hmmm... given audrey's "be loose with commit bits" policy, perhaps we should just make a page on the web fe that allows you to "invite yourself", and then fills out the form on openfoundry.

[09:58] <theorbtwo> That'd give anybody who asks on that page full commit rights, though.

[10:01] <theorbtwo> Or, in the alternative, make creating a user on the wiki site create a user on the openfoundry side with the same userid, but manage the password ourself (by setting the user's email to one a script handles), and change their email address and send a "forgot password" request when they should graduate to a real user.

[10:01] <theorbtwo> That sounds like a lot of work, though.

[10:01] <theorbtwo> In the next alternative, mess with the svn repo in ways that can't be done via openfoundry's frontend.

[10:17] *** szbalint joined
[10:38] *** elmex joined
[10:39] *** elmex_ joined
[11:01] *** neoesque joined
[11:46] *** weinig|away is now known as weinig

[11:51] *** Limbic_Region joined
[11:56] *** bjoern_ joined
[12:21] *** jsiracusa joined
[12:24] *** lisppaste3 joined
[12:40] *** Gothmog_ joined
[12:47] *** turrepurre joined
[13:05] *** hexmode joined
[13:25] *** cnhackTNT joined
[13:26] *** cnhackTNT left
[13:38] *** Limbic_Region joined
[13:40] *** macroron joined
[13:42] *** jserv-- joined
[13:45] *** neoesque joined
[13:55] *** Alias_ joined
[13:55] <Alias_> seen audreyt?

[13:55] <jabbot> Alias_: audreyt was seen 9 hours 15 minutes 49 seconds ago

[13:55] <Alias_> seen TimToady?

[13:55] <jabbot> Alias_: TimToady was seen 7 days 7 hours 25 minutes 58 seconds ago

[14:10] *** bjoern_ joined
[14:21] *** justatheory joined
[14:39] *** cdpruden joined
[15:03] *** FurnaceBoy joined
[15:07] *** OldeFortran joined
[15:33] *** weinig is now known as weinig|

[15:33] *** weinig| is now known as weinig|away

[15:34] <particle_> ?eval say { 'a' => 'b', 'c' => 2 };

[15:34] <evalbot_10383> OUTPUT[a	b c	2  ] Bool::True

[15:51] *** rdice joined
[15:53] *** mj41_ joined
[16:32] <Limbic_Region> Juerd ping

[16:32] <Limbic_Region> anyone a mingw user?

[16:32] <Alias_> yes

[16:33] <Limbic_Region> Alias_ do you use it to build Parrot, and if yes, do you mind me /msg'ing you some questions

[16:33] <Alias_> nope

[16:33] <Limbic_Region> oh, so no Parrot for you or you use Cygwin or something else?

[16:33] <particle_> l_r: build failing?

[16:34] <Limbic_Region> particle_ - not even getting started

[16:34] <particle_> ah.

[16:34] <Limbic_Region> basically the backslashes in the path are not getting intepreted as path delimiters

[16:34] <Limbic_Region> so it is looking for Perl at C:perlbinperl.exe

[16:35] <Alias_> No parrot for me

[16:35] <particle_> can you wander over to #parrot on irc.perl.org?

[16:35] <Limbic_Region> no - that's what the Juerd ping was for

[16:35] <particle_> i can answer questions here, too

[16:35] <Alias_> We use mingw in the Vanilla Perl builds

[16:35] <Limbic_Region> I can only IRC from work via CGI::IRC

[16:35] <Limbic_Region> he only has it currently set up for #perl6

[16:35] <particle_> oic

[16:36] * Limbic_Region is guessing it is something obvious

[16:36] <Limbic_Region> for instance, I am unable to create C:\Windows\System\<conf>.ini because of security lockdown on the box

[16:37] <Limbic_Region> but now that I got Pugs building again I wanted to link with parrot :-(

[16:37] <particle_> during configure, parrot takes platform hints.

[16:37] <particle_> on your platform, that's /config/init/hints/mswin32.pm

[16:38] <particle_> check the elsif ($is_mingw) section, especially the slash => '\\'

[16:38] <particle_> perhaps changing that will help?

[16:38] <Limbic_Region> checking

[16:38] <particle_> after configure is complete, there's lib/Parrot/Config.pm where you can check the settings, too (but you can't change them there.)

[16:39] <Limbic_Region> but since it executes under a shell - I am thinking it wants \ to become / not \\

[16:39] <particle_> so change the hint to '/'

[16:39] <particle_> re-config

[16:39] <particle_> re-build

[16:39] <Limbic_Region> trying now

[16:41] <Juerd> Limbic_Region: pong

[16:41] <particle_> anyone else see matt sergeant in the new york times today?

[16:41] <particle_> http://www.nytimes.com/2006/05/21/business/yourmoney/21spam.html?_r=1&oref=slogin

[16:42] <Limbic_Region> Juerd - do you think it would be possible to set up feather's CGI::IRC to allow #perl6 on freenode AND #parrot on irc.perl.org?

[16:42] <Limbic_Region> particle_ no go, but I am still playing

[16:43] <Juerd> I'll have a look if this system can handle that easily

[16:43] <Juerd> If not, I can just copy the tree over

[16:43] <Limbic_Region> having set up CGI::IRC in the past - it means that you will be able to go to #perl6 or #parrot on freenode or irc.perl.org

[16:44] <Limbic_Region> they don't (or at least not last time I used it) have a way to lock in a channel with a network

[16:45] <Limbic_Region> particle_ - I am not sure mswin32.pm is getting used - the STDERR debugging statements I put in aren't coming out

[16:46] <Limbic_Region> msys.pm makes more sense - looking there

[16:47] <particle_> you can use perl Configure.pl --verbose-step=hints to tell you your platform

[16:47] <Limbic_Region> was just doing that now

[16:48] <Limbic_Region> parrot has changed a lot in the 1.5 years since I used it last

[16:48] <particle_> change is good :)

[16:52] <Juerd> Limbic_Region: Done

[16:53] <Limbic_Region> thanks Juerd

[16:53] <Limbic_Region> particle_ headed over there now as chaning the delimiter in the hints didn't change the path of Perl in the Makefile

[16:58] *** chris2 joined
[17:05] *** Alias_ left
[17:23] *** ruoso joined
[17:29] *** weinig|away is now known as weinig

[17:35] *** Juerd2 joined
[17:41] *** juerd2 joined
[17:42] <Juerd> Wow, CGI:IRC is incredibly stupidly written.

[17:43] *** juerd2 joined
[17:44] <Limbic_Region> Juerd - that was my impression too from several years ago

[17:44] <Limbic_Region> I would have hoped that it would have been improved since then

[17:44] <Juerd> Well, it's a non-modular mess.

[17:44] <Juerd> Logic is spread all over the place

[17:44] <Juerd> So adding a feature like this isn't as simple as it should be.

[17:46] *** larsen joined
[17:47] *** juerd2 joined
[17:47] <Juerd> Okay, done now.

[17:48] <Juerd> Hard coded it :)

[17:50] <Limbic_Region> I see - thanks

[17:53] *** justatheory joined
[17:53] *** weinig is now known as weinig|coffee

[18:38] *** ruoso joined
[18:46] *** FurnaceBoy_ joined
[19:15] *** avar joined
[19:17] *** ramzi joined
[19:17] *** rdice joined
[19:29] *** trym joined
[19:41] *** mj41_ joined
[19:48] *** sri__ joined
[19:53] *** weinig|coffee is now known as weinig

[20:12] *** fglock joined
[20:16] <fglock> Juerd: if you don􏿽xB4t mind hacking cgi-irc, would you add "charset=utf-8" to the headers? "Content-type: text/html; charset=utf-8" I think

[20:21] <Juerd> No, that's a promise that it can't keep.

[20:23] <Juerd> Solve the IRC problem (change the protocol to support communicating character encodings), wait till the major servers and clients use the improvements, and then come back to me :)

[20:23] <fglock> Juerd: maybe add "AddDefaultCharset UTF-8" to apache?

[20:23] <Juerd> fglock: No. That's nonsense.

[20:23] <fglock> Juerd: ok

[20:23] <szbalint> irssi + recode support is great

[20:23] <Juerd> Encodings aren't something you just add and hope things work out well.

[20:23] <Juerd> They require conscious decisions.

[20:24] <Juerd> Like: incoming IRC messages have to be decoded, and later, encoded to utf-8, if you want utf-8 output

[20:24] <Juerd> Otherwise you get invalid characters.

[20:24] <Juerd> But you cannot decode things properly.

[20:24] <Juerd> IRC hasn't standardized on UTF-8, either.

[20:25] <Juerd> Many people use latin-1, latin-15, or even non-latin encodings.

[20:25] <Juerd> Promising to the browser that the data will be utf-8 is bad, if you already know you can't keep the promise.

[20:25] <Juerd> I'm all for utf-8-ification. But not blindly. It has to be done with care.

[20:25] <Juerd> And IRC prohibits any sane upgrade path.

[20:25] <Juerd> Sorry.

[20:26] <szbalint> Personally I've been using ISO-8859-2 for years. But I'm on four networks. 2 uses UTF-8, one is mixed and one is old ISO-8859-2.

[20:26] <szbalint> What Juerd says is very true, unfortunately.

[20:26] <Juerd> By the way, I wrote a Perl unicode tutorial yesterday, and merged reviewer's comments today.

[20:26] <Juerd> http://juerd.nl/perlunitut.html

[20:27] <Juerd> If you prefer pod, then use .pod

[20:42] *** qu1j0t3 joined
[20:43] <fglock> I wonder if there could be a "use utf8" checkbox during login, so it could be optional - does this make sense?

[20:43] *** FurnaceBoy joined
[20:48] <ruoso> Juerd++ great doc

[20:48] <Juerd> Thank you

[20:49] <Juerd> fglock: If you want to do this as the end user, just configure your browser?

[20:49] <bjoern_> it would be good to have something similar for module authors

[20:49] <Juerd> fglock: Look for View > Character set > UTF-8

[20:49] <Juerd> bjoern_: Most module authors don't have to do anything special.

[20:49] <bjoern_> like, what should module authors put into the docs relative to unicode

[20:49] <bjoern_> I'm not sure I agree :)

[20:49] <Juerd> Only if your module communicates with non-perl, it has to handle this stuff.

[20:49] <Juerd> With non-same-process I mean

[20:50] <Juerd> And then, exactly the same rules apply as described in this tutorial

[20:50] <ruoso> Juerd, is there a way to disable auto-upgrade?

[20:50] <Juerd> Decode all incoming data

[20:50] <Juerd> Encode all outgoing data

[20:50] *** b_jonas joined
[20:51] <Juerd> ruoso: No, and some things depend on this, so you shouldn't. But audreyt wrote a module to help debug, encoding::warnings.

[20:51] <ruoso> Juerd, nice...

[20:51] <Juerd> bjoern_: The trouble is that modules are supposed to be written for generic application.

[20:51] <ruoso> auto-upgrade causes hard-to-track bugs in some cases...

[20:52] <Juerd> bjoern_: Thus, a string should be just a string. However, if you start encoding strings automatically, you loose compatibility with binary strings, and can no longer handle stuff like images, music, movies, etcetera, properly.

[20:52] <ruoso> audreyt++

[20:53] <Juerd> ruoso: If you are disciplined at decoding incoming information, upgrading is no longer a problem.

[20:53] <Juerd> A consistent coding style helps recognizing such problems.

[20:54] <Juerd> Well written modular code, where input, processing, and output are properly separated, usually doesn't suffer from implicit upgrading problems, if it decodes and encodes explicitly.

[20:54] *** fglock joined
[20:54] <ruoso> Juerd, the problem is when someone with bad style uses a module that expect a good-style practice

[20:55] <Juerd> ruoso: Yes, but the module can't fix it.

[20:55] <ruoso> Juerd, use encoding::warnings 'FATAL' is nice...

[20:55] <fglock> Juerd: when I change to utf8 it logs me out - but in the end it works

[20:56] <Juerd> fglock: That's because the browser reloads the page :)

[20:56] <Juerd> Or, well, tries to.

[20:56] <ruoso> it must, because the request was in one enconding... and will start to be in another...

[20:57] <ruoso> the connection must be reset...

[20:57] <ruoso> so the new encoding is used in the transfer

[20:57] <Juerd> It could try to be intelligent, and check if any bytes have changed in between encoding differences :)

[20:57] <ruoso> heh

[20:57] <Juerd> If the request contained pure ASCII, and it it did in this case, the browser could be made smart enough to realise it doesn't have to re-request if both the old and the new encoding are ASCII compatible.

[20:57] <Juerd> s.it it.it is.

[20:58] <ruoso> the problem is that it doesn't know what's coming...

[20:58] <ruoso> but, thinking better..

[20:58] <ruoso> it should be able to split that

[20:58] <ruoso> no matter the connection encoding...

[20:58] <ruoso> the browser could encode/decode....

[20:59] <ruoso> hmm... actually not for utf8

[20:59] <ruoso> forget what I said

[20:59] <fglock> back to class &

[20:59] *** fglock left
[21:01] *** kanru joined
[21:28] *** DaGo joined
[21:33] *** justatheory joined
[21:58] *** Limbic_Region joined
[22:04] *** bpalmer joined
[22:13] *** jsiracusa joined
[22:22] *** rdice joined
[22:26] *** apple-gunkies joined
[22:30] *** ruoso_ joined
[22:31] *** ruoso_ is now known as ruoso

[22:39] *** SubStack joined
[22:41] *** apple-gunkies joined
[22:54] *** froh-doh joined
[22:57] *** gunya joined
[23:47] <clkao> in perl6 rules, when you have inline code { return "foo" }, doesi t became whatever is being captured?

