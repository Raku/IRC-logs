[00:01] *** turrepurre joined
[00:03] *** hikozaemon joined
[00:25] *** coumbes joined
[00:28] <audreyt> rehi

[00:49] <nothingmuch> 3rehi audreyt

[00:50] <Juerd> Hello

[00:50] <audreyt> moose

[00:53] <TreyHarris> audreyt: do you use Terminal.app?  I can't figure out how to type any non-ascii chars in it, i just hear beeps when i'm at the pugs prompt and try

[00:54] <audreyt> ...I can't either.

[00:54] <TreyHarris> ok. :-)

[00:54] <audreyt> try iterm?

[00:56] <TreyHarris> no beeps, but no chars either :-)

[01:03] <audreyt> mmmm.

[01:04] <TreyHarris> (alt-\ is left double bracket, and alt-| is right)

[01:07] <TreyHarris> ah well.  back in a few hours...

[01:07] <TreyHarris> &

[01:15] *** cognominal joined
[01:25] *** Entonian joined
[01:28] *** amnesiac joined
[01:31] *** rashakil joined
[01:34] *** coumbes joined
[01:42] <nothingmuch> Juerd: pinfg

[01:42] <Juerd> nothingmuch: ponfg...

[01:43] * Juerd wonders if it was a trick question.

[01:43] <Juerd> A rhetorical trick question at that.

[01:43] <nothingmuch> dfo yfou knfow whfere tfo makef fa blackf caffepressf tffshirt?

[01:43] <nothingmuch> disclaimer: one handed typing is bad for your temper

[01:44] <Juerd> Itf fwas a befta.

[01:45] <Juerd> Dunfno iff ift'sf stfill thfere

[01:46] <nothingmuch> http://www.befta.com/ doesn't seem to sell tshirts

[01:46] <lambdabot> Title: "www.befta.com"

[01:47] <Juerd> fhefhe

[01:49] <Juerd> Founfd ift: http://www.cafyepressf.com/cp/serfvifces/newbflacfk

[02:07] *** buubot is now known as test

[02:07] *** test is now known as buubot

[02:39] *** QtPlatypus joined
[02:48] <svnbot6> r11047 | sanug++ | chromatic's PHEME diagram. Hyoer-Linked compilation overview diagram

[02:51] <svnbot6> r11048 | sanug++ | Allison's Punie diagram, Audrey's Perl 5 diagram

[02:54] *** niner_ joined
[03:17] *** scook0 joined
[03:19] *** beppu joined
[03:28] <TimToady> we're back online...

[03:30] <svnbot6> r11049 | clkao++ |  r14906@ab:  clkao | 2006-06-30 21:52:48 -0500

[03:30] <svnbot6> r11049 | clkao++ |  Data::Bind::_forget_unlocal, installing temporary symbol.

[03:30] <svnbot6> r11049 | clkao++ |  This allows binding &code into subs.

[03:30] <svnbot6> r11050 | clkao++ |  r14907@ab:  clkao | 2006-06-30 21:53:22 -0500

[03:30] <svnbot6> r11050 | clkao++ |  Merge from perl5/PC-P6, with parameter-binding fixes.

[03:31] *** lollan joined
[03:36] *** weinig joined
[03:41] *** scook0_ joined
[04:08] *** supcik joined
[04:09] *** supcik left
[04:17] <audreyt> ingy: http://www.nntp.perl.org/group/perl.perl5.porters/114522

[04:17] <lambdabot> Title: "nntp.perl.org - perl.perl5.porters (114522)"

[04:27] *** ludan joined
[04:29] *** weinig is now known as weinig|zzz

[04:30] *** scook0 joined
[04:30] <gaal> remoose

[04:30] * gaal returns from a fun long bike ride

[04:32] *** cognominal joined
[04:34] <audreyt> yo!

[04:34] <gaal> heya audreyt! sorry for disappearing midnode, I was abducted by fixed point comb^W^Wgear bikes

[04:35] <audreyt> that's fine :)

[04:35] <audreyt> we still gotta finish it somehow

[04:35] <audreyt> but I think I need to crash soonish

[04:36] <gaal> okay so tomorrow on trans-1hr-tz hackathoning then the day after in boston

[04:40] <gaal> nothingmuch: ping

[05:04] <svnbot6> r11051 | clkao++ | Correct packages for the v6 compiled scripts.

[05:04] <svnbot6> r11052 | clkao++ | Support some calling capture emittion with Data::Bind.

[05:08] *** jkanter joined
[05:25] <svnbot6> r11053 | lwall++ | Different take on atomic syntax.

[05:43] *** como joined
[05:46] <audreyt> fglock:

[05:46] <audreyt> the point example changed in my slide

[05:46] <audreyt> TimToady said that even in the method body

[05:46] <audreyt> you can't say $.x=0

[05:46] <audreyt> and expect it to work with $.x is readonly

[05:46] <audreyt> have to say $!x=0

[05:47] <audreyt> so how about just translating $!x=0 to $self->{x}=0

[05:47] <clkao> data::bind is on CPAN

[05:47] <audreyt> and $.x=0 always to $self->x(0) ?

[05:47] <audreyt> clkao: !!

[05:47] <obra> clkao++

[05:47] <audreyt> but not svk? :)

[05:47] <clkao> svk was released a few hours ago

[05:47] <audreyt> sugoi

[05:56] <clkao> also app::cli with real sign

[05:56] <clkao> ature

[06:00] <obra> sugoi

[06:01] <gaal> audreyt: nothingmuch thinks ast nodes for control statements􏿽xB1􏿽xC5tements should be like foreign vals

[06:02] <audreyt> gaal: Prims, you mean?

[06:02] <gaal> so that DSLs that have their own user defined structures produce asts that retain some sort of semantic information

[06:02] <audreyt> but th questino is, do we call them with the full calling convention

[06:03] <audreyt> or are then "special forms" and bypass that

[06:03] <audreyt> s/then/they/

[06:03] <audreyt> or am I missing some other solution?

[06:04] <gaal> if i understood his argument, representing them as desugared calls/applications prevents manipulators that do know aboutt he DSL in question from easily working on them

[06:04] <audreyt> but if you have DSL you already override the statement_control:<if>

[06:04] <audreyt> macros

[06:04] <audreyt> lexically

[06:04] <audreyt> at parse time

[06:04] <audreyt> to gen another tree

[06:05] <gaal> so he wants something like data Expression = ExpVariable | ExpValue | ...blah | ExpControl

[06:05] <svnbot6> r11054 | sanug++ | Added Hyper-link for Tree Grammar Compiler

[06:05] <svnbot6> r11054 | sanug++ | Will transmit PDF each time this is updated.

[06:05] <gaal> and data Control = ExpCond | ExpWhile | ExpForeign

[06:06] <audreyt> that is fine with mean except each constructor will take more stuff

[06:06] <audreyt> but sure

[06:06] <gaal> for him doing it the way you just said is a little like constant folding happening too early

[06:06] <gaal> yes of course

[06:07] <gaal> his point about foreign here being that the new control structures must knowhow to apply themselves

[06:07] <audreyt> and ExpForeign as trapdoor is fine

[06:07] <audreyt> I agree. his point is floating, fixed, and power

[06:08] * audreyt goes preparing for sleep

[06:08] <audreyt> bbiab

[06:08] <gaal> okay, great. So I don't mind to have ContCond | ContWhile | ContGoto etc. for all the things we can think of now

[06:08] <gaal> plus the foreign trapdoor

[06:08] <audreyt> k

[06:09] <gaal> and this being lifted means that transformers that don't care about control in detail can eaisly patmatch over them

[06:10] <audreyt> all excellent points. please simply commit

[06:10] <gaal> anymoose good night, I'm off to bed too soon

[06:10] <gaal> play

[06:10] <gaal> okay

[06:10] <audreyt> plsu

[06:10] <audreyt> okay

[06:15] <TreyHarris> anybody know, if i want to use moose, should i use 0.05 or 0.09_03?  it's marked devel, but it hasn't changed in two months...

[06:16] *** cmarcelo joined
[06:20] <audreyt> 009 definitely

[06:20] <audreyt> and push stevan to releas 0.10

[06:20] <audreyt> maybe assign him a hiveminder ticket :)

[06:21] <TreyHarris> :-D

[06:22] <obra> :P

[06:24] <TreyHarris> i haven't been invited to hiveminder though

[06:25] <audreyt> you have a commit bit?

[06:25] <TreyHarris> yes

[06:26] <audreyt> a hiveminder invitation is on its way to you

[06:26] <TreyHarris> ok :-)

[06:27] <gaal> are application/call Expression or Control? I lean to the latter

[06:28] <gaal> basically anything that changes flow i guess

[06:29] <audreyt> sure, but assign/bind are still exp

[06:29] <gaal> yeah. deref too

[06:30] <audreyt> k.

[06:30] * audreyt waves and sleeps &

[06:30] <gaal> nighty night

[06:30] <gaal> have a safe trip tomorrow

[06:33] * gaal wonders if Ctx CtxSlurpy (x::Expression)@(ExpDeref (v :: Value) is correct

[06:33] <gaal> but has droopy eyelids. tomorrow...

[06:38] <svnbot6> r11055 | gaal++ |  r11148@sike:  roo | 2006-07-01 01:35:07 -0500

[06:38] <svnbot6> r11055 | gaal++ |  * p6ast: data Control for expressions having effect on flow.

[06:38] <svnbot6> r11055 | gaal++ |    These include a trapdoor for new DSL control statements

[06:38] <svnbot6> r11055 | gaal++ |    (nothingmuch++)

[06:38] <gaal> invite ininשe accepted, to create an account? I don't have a beta password

[06:39] <gaal> anymoose, sleep. &

[07:01] *** iblechbot joined
[07:21] *** Aankhen`` joined
[07:33] *** lisppaste3 joined
[07:45] <xerox> gaal mismatched parens (:

[08:00] *** Aankh|Clone joined
[08:12] <svnbot6> r11056 | sanug++ | Added directory to hold image-mapped HTML files with jpg's for Perl 6 Compilation diagrams - allows HyperText traversal of diagrams

[08:22] *** Aankh|Clone is now known as Aankhen``

[08:26] *** shachaf joined
[08:28] *** scook0 is now known as scook0_

[08:28] *** scook0_ is now known as scook0

[08:31] *** iblechbot joined
[08:33] *** hikozaem_ joined
[08:39] *** larsen joined
[09:02] *** cmarcelo joined
[09:09] *** shachaf joined
[09:14] *** elmex joined
[09:20] *** krychu joined
[09:34] *** kane_ joined
[09:48] *** nothingmuch joined
[09:55] *** chris2 joined
[09:58] *** froh-doh joined
[09:58] *** larsen joined
[10:01] <QtPlatypus> ~

[11:18] *** lumi joined
[11:22] *** buetow joined
[11:25] *** dduncan left
[11:26] *** tacocat joined
[11:26] <tacocat> Morning?  Whats the "best" list to subscribe to for Perl6 Documentation.  I was sucked into synapsis review during the hack-a-thon and would like to get my work posted.

[11:27] <theorbtwo> tacocat: perl6-language, I'd say.

[11:28] <tacocat> Good enough...  Now to find out if it's any good...

[11:29] <tacocat> I found reviewing the synapsis a great way to learn about some of the language but perhaps a little convoluted because the text is "raw".

[11:30] <theorbtwo> Oh!  You want to write documentation aimed at users?

[11:30] <theorbtwo> You might want perl6-language.

[11:31] <xerox> audreyt: what editor are you using in osx?

[11:31] <tacocat> Yes, that's the idea...  Considering I know little/nothing about C, C++, Perl6 and am reasonable at Perl5 it seemed about the best place.

[11:32] <tacocat> Uri, with all his charm, convinced me this was the way to perl salvation for me.

[11:34] <theorbtwo> Er, you might want perl6-user(s?)

[11:37] *** nothingmuch joined
[11:39] *** iblechbot joined
[11:43] <tacocat> I suppose I could try them both, thanks.

[11:59] *** mauke_ joined
[11:59] *** ruoso joined
[12:14] *** mauke_ is now known as mauke

[12:40] <ZuluOne> I'm not a great fan of p6u.

[12:40] <ZuluOne> But then, I never like user lists.

[12:41] <ZuluOne> I'm apparently about as autistic as you can get without actually being autistic, so while I can comprehend that people know different sets of knowledge than me, it still freaks me out somewhat when they show it.

[12:55] *** elmex joined
[12:59] *** dolmen joined
[13:11] *** cmarcelo left
[13:18] *** DaGo joined
[13:52] *** nnunley joined
[13:57] *** weinig|zzz is now known as weinig

[13:57] *** broquaint joined
[14:12] *** weinig joined
[14:14] *** cognominal joined
[14:29] <nothingmuch> kolibrie: ping

[14:39] *** xdg joined
[14:44] <svnbot6> r11057 | sanug++ | Testing html markup to allow browser to open image maps

[15:16] <pasteling> "chromatic" at 198.37.25.238 pasted "No IRC; where is the hacking this morning?" (1 line, 1B) at http://sial.org/pbot/18137

[15:16] <obra> hah

[15:23] *** scook0 joined
[15:24] <gaal> xerox: where?

[15:25] <xerox> Duh, nevermind, it was just a mismatched paren in your last comment or something.

[15:25] <svnbot6> r11058 | sanug++ | did an svn propedit to add svn:mime-type with text/html; charset=UTF-8 - audreyt had this on her file in pugs/docs/01*.html

[15:28] <gaal> ahhh, heh

[15:30] <spinclad> xerox too.  I fix:  :)  )

[15:34] <svnbot6> r11059 | sanug++ | modified svn types on Tree diagrams with Steve Little

[15:37] <marcus_> kolibrie: nothingmuch wants to know what you wanted him to photograph.

[15:45] *** tacocat joined
[15:49] *** justatheory joined
[15:58] *** amnesiac joined
[16:00] *** shachaf joined
[16:05] *** shachaf joined
[16:39] *** lollan joined
[16:43] *** larsen joined
[17:08] *** putter joined
[17:08] <putter> audreyt: ping?

[17:16] *** fglock joined
[17:19] <marcus_> log bot?

[17:21] <putter> marcus_: http://colabti.de/irclogger/irclogger_logs/perl6

[17:21] <lambdabot> Title: "#perl6 irc log"

[17:22] <marcus_> putter: right, we found them :)

[17:22] <svnbot6> r11060 | fglock++ | v6.pm - lexer fix; parse & emit '...' and ':a<b>';

[17:22] <svnbot6> r11060 | fglock++ | - t\11-capture.t compiles, but don't run yet;

[17:22] <svnbot6> r11060 | fglock++ | - runtime autoboxing

[17:24] <fglock> clkao: ":a<b>" was a problem with selecting the longest token - fixed

[17:34] <svnbot6> r11061 | fglock++ | v6.pm - checks if there is a package name

[17:36] <putter> &

[17:40] <fglock> audreyt: in deploy.xul "Constraints" - do you mean 'or fail' ?  'err' checks if defined(), right?

[17:47] *** lisppaste3 joined
[17:49] <TreyHarris> for reference, one cannot trust the value of $_ at the pugs command line :-)

[17:50] <TreyHarris> try "my $y = 3\n say $_\n say $_" and you'll see what I mean

[17:50] *** kane_ joined
[17:53] <TimToady> obviously something setting $_ to the previous result

[17:54] <TimToady> maybe it's a feechure.

[17:55] *** nothingmuch joined
[17:57] <fglock> ?eval "abc".ref

[17:57] *** evalbot_10997 is now known as evalbot_11061

[17:57] <evalbot_11061> ::Str

[17:59] <fglock> ?eval "aaaa".ref eq Str

[17:59] <evalbot_11061> Bool::True

[18:00] *** shachaf joined
[18:02] *** dolmen joined
[18:08] <kolibrie> nothingmuch: pong

[18:10] *** jkanter joined
[18:31] <nothingmuch> kolibrie: what picture did you want me to take?

[18:38] <kolibrie> nothingmuch: coming from my room on the third floor, in the stairwell, I thought the view of the tunnel for the elevated train was kind of cool

[18:39] <nothingmuch> ah

[18:39] <kolibrie> but I forgot to take a picture on my way out

[18:39] <nothingmuch> so this is the top of the student center

[18:39] <nothingmuch> out of your window?

[18:39] <kolibrie> no, just in the stairwell, on level three

[18:40] <nothingmuch> so where is the tunnel?

[18:40] <nothingmuch> your window == stairwell window you are referring to

[18:40] <kolibrie> yes, the one on top of the student union

[18:40] <nothingmuch> ah

[18:40] <nothingmuch> okay

[18:41] <kolibrie> of course, if you can't get it, it's okay.

[18:42] <kolibrie> nothingmuch: how was your birthday party?

[18:44] <nothingmuch> kolibrie: pretty fun

[18:44] <nothingmuch> marcus got me very drunk

[18:44] <nothingmuch> and quite sick (which is bad, but memorably funny)

[18:44] <nothingmuch> yesterday i was zoned out

[18:44] <nothingmuch> and I still feel kinda crummy today

[18:44] <nothingmuch> lesson learned - do not consult vikings for drinking advice, and do not listen to them if they offer it voluntarily

[18:46] *** nothingmuch joined
[18:47] <kolibrie> I'm always wary of advice given voluntarily

[18:47] *** fglock joined
[18:48] <TreyHarris> nothingmuch: happy birthday!

[18:48] <TreyHarris> belatedly

[18:48] <nothingmuch> TreyHarris: thank you =)

[18:49] <TreyHarris> nothingmuch: what year was it?

[18:49] <nothingmuch> 21

[18:49] <TreyHarris> ah, a big one, at least here in the US

[18:49] <TreyHarris> congrats

[18:53] <spinclad> felicitous annuadversions, nuffin!

[18:54] <spinclad> HAPY BRFDY!

[18:55] <nothingmuch> TreyHarris: yeah, i was abused on account of that

[18:55] <nothingmuch> they took me out

[18:55] <nothingmuch> and wouldn't let me pay

[18:55] <nothingmuch> and made me drink far more than I should have =)

[18:56] <TreyHarris> well, at least you're not in college here as you turn 21... there's a rather dangerous tradition of going to a bar immediately after midnight the morning one turns 21 and forcing the drinking of 21 drinks before last call (usually 2-3 hours later)

[18:57] <spinclad> yow

[18:57] <spinclad> that could kill

[18:57] <TreyHarris> yes.

[18:59] <nothingmuch> yeah

[18:59] <nothingmuch> we didn't go that far

[18:59] <TreyHarris> there are actually states that have changed the laws so that the drinking age is 6am after you turn 21 for that reason.  it shows that human beings are more comfortable with absolute values than relative ones... or something.

[19:01] <nothingmuch> heh

[19:01] <nothingmuch> the whole US drinking law stuff is pretty stupid

[19:01] <nothingmuch> i mean, few people actually refrain from drinking before

[19:01] <nothingmuch> so they're not really effective

[19:01] <nothingmuch> and those that wait for it are at a risk

[19:02] <nothingmuch> because 21 shots is much more dangerous when you're not even used to drinking

[19:04] * kolibrie has never had a drink

[19:04] <TreyHarris> kolibrie: how old are you?

[19:04] <kolibrie> 32

[19:04] <theorbtwo> I don't think people who actually don't drink before they are 21 are likely to do that 21 shots thing.

[19:05] <TreyHarris> theorbtwo: and i don't think people who have drunk regularly and moderately since they were very young would, either :-)

[19:05] <fglock> hi!

[19:06] <spinclad> hey fglock

[19:06] <theorbtwo> True enough.

[19:08] * kolibrie returns to scraping old paint on his house &

[19:13] *** weinig is now known as weinig|bbl

[19:14] *** merlyn joined
[19:15] <fglock> merlyn: hi!

[19:15] <merlyn> hey

[19:16] <merlyn> got pugs -e 'say "Hello"' working again

[19:16] <merlyn> I'd broken it with a reset of my darwinports trashing

[19:18] *** marmic_ joined
[19:23] <TreyHarris> hmm.  can i get pugs to read stdin as it comes in?  =<> doesn't appear to read anything until I close stdin.

[19:24] * gaal makes obvious smelly joke at "happy barfday" pun

[19:24] <gaal> (rehi)

[19:30] <nothingmuch> erhoo

[19:32] <merlyn> TreyHarris - are you doing this in a scalar context?

[19:33] <TreyHarris> merlyn: "for =<> -> $x { say $x }"

[19:34] <merlyn> that's a foreach loop

[19:34] <merlyn> list context

[19:34] <merlyn> reads all at once

[19:34] <merlyn> I think

[19:34] <merlyn> while =<> { say $_ }

[19:35] <merlyn> oops... that doesn't put the var anywhere

[19:36] <gaal> there's a chance that that's lazy, so the file isn't read all into memory

[19:36] <TreyHarris> huh.  well, "while my $x = =<>" works just fine.  but audrey changed my example of that in the perl 6 wikipedia entry to "for =<>"

[19:36] <TreyHarris> so i thought that was equivalent :-)

[19:37] <gaal> on the other hand slurp was recently made eager, because otherwise $data = slurp $file; close $file may perform the close before wverything was read

[19:37] <merlyn> Well, it's the difference betrween while (<>) and foreach (<>) in perl5

[19:37] <merlyn> in p5, the latter is in list context

[19:37] <merlyn> has to read the entire pile first

[19:37] *** MenTaLguY joined
[19:37] <MenTaLguY> hello

[19:37] <merlyn> the former is in scalar context

[19:37] <TreyHarris> right, but isn't it lazy list context?

[19:37] <merlyn> maybe not implemented yet though

[19:37] <merlyn> design != implementation

[19:37] <MenTaLguY> I was wondering if there was a description of the semantics of maybe {} available?

[19:38] <gaal> true, but there are lazy lists in perl 6 so even if it is a list it's not necesarily computed all in advance.

[19:38] *** pmurias joined
[19:38] <pmurias> hi all

[19:38] <MenTaLguY> (c.f. pugs/examples/concurrency/stm-retry-with.pl)

[19:38] <pmurias> nothinmuch: did you think of integrating Perl::Generate with quasiquoting?

[19:39] <gaal> MenTaLguY: try docs/Perl6/Spec/Concurrency.pod

[19:39] <gaal> hmm, no, it isn't in there yet.

[19:39] <pmurias> s/nothinmuch/nothingmuch/

[19:40] <TreyHarris> yes, looks like lazy lists aren't there yet.  i just sent pugs into an infinite loop by doing for 1...

[19:40] <gaal> MenTaLguY: then again I have no idea what sync{} and maybe{} are supposed to mean

[19:40] <MenTaLguY> gall: excellent, thanks

[19:40] <MenTaLguY> er, hrm

[19:41] <MenTaLguY> darn

[19:41] <TreyHarris> whoops, and i really should've quit pugs *before* reporting that here... i'm lucky i got my computer back it was thrashing so badly :-)

[19:41] <MenTaLguY> sync basically wraps the enclosed code in a transaction

[19:41] <MenTaLguY> behaves like calling an 'is atomic' Code

[19:42] <merlyn> is nuclear

[19:42] <MenTaLguY> maybe {} blocks are tried until one doesn't call resync

[19:43] <MenTaLguY> but what I'm curious about is how that interacts with scoping and so forth

[19:43] <MenTaLguY> and how it works with composition

[19:44] <MenTaLguY> if someone could direct me where the best place to look in the pugs source would be, that would be nice

[19:45] <gaal> MenTaLguY: that would probably be Pugs.Prim:289 etc.

[19:46] <MenTaLguY> ah, what directory?

[19:46] <gaal> hey, interesting technique there, generating a symbol just for that block

[19:46] <gaal> src/Pugs/Prim.hs

[19:46] <gaal> see also line 575 (op1 "Code::retry_with")

[19:47] <gaal> I don't see sync{} at all implemented

[19:47] <gaal> nor maybe {}

[19:48] <MenTaLguY> nor I

[19:48] <TimToady> it's just new syntax for old.

[19:48] <TimToady> sync was atomically

[19:48] <TimToady> resync was retry

[19:49] <MenTaLguY> hmm, I don't think maybe {} corresponds exactly to anything in the old syntax, though...

[19:49] <MenTaLguY> I certainly recognized sync and resync

[19:49] <TimToady> maybe { ... } maybe {...} was {...}.retry_with{...}

[19:49] <TimToady> that is, Haskell's orElse

[19:49] <MenTaLguY> right

[19:49] <TimToady> so it should compose fine

[19:49] <MenTaLguY> well, here's the thing

[19:50] <MenTaLguY> how are the two maybe blocks alternated?

[19:50] <TimToady> round robin, I'm given to understand

[19:50] <MenTaLguY> aha

[19:50] <MenTaLguY> so if a maybe block retries it retries the whole transaction?

[19:50] <TimToady> correct

[19:51] <MenTaLguY> (and sets a flag not to try that maybe the next time around)

[19:51] <MenTaLguY> (?)

[19:51] <TimToady> that's why I was trying to find a correspondence between sync and resync

[19:51] <MenTaLguY> hrm

[19:51] <TreyHarris> TimToady: can you settle the earlier question?  =<> will be lazily evaluated eventually, right?  so while (<>) becomes for =<>, right?

[19:51] <MenTaLguY> I'm still not clear on maybe {}'s semantics

[19:52] <MenTaLguY> it's certainly different than orElse if it retries the whole transaction

[19:52] <MenTaLguY> Haskell's orElse establishes a nested transaction for the lhs

[19:52] <MenTaLguY> eh well

[19:52] <MenTaLguY> what time is audrey usually on (and awake)?

[19:52] <TimToady> hard to say now--she's presumably on an airplane to Boston.

[19:53] <MenTaLguY> ah, k

[19:53] <TimToady> TreyHarris: that's the intent.

[19:54] <MenTaLguY> bbl

[19:54] *** MenTaLguY left
[19:54] <TimToady> though it's possible that =<> is going to change to =* or some such, now that we have the Whatever type.

[19:54] <TreyHarris> TimToady: ok, thanks.  for some reason i thought lazy lists were already in pugs, so i was surprised when it didn't work

[19:54] <TimToady> =<> was really a kludgey special case.

[19:54] <TimToady> yeah, that's a major suckage at the moment

[19:58] *** elmex joined
[20:08] *** marmic joined
[20:40] *** weinig|bbl is now known as weinig

[20:46] *** MenTaLguY joined
[20:46] <MenTaLguY> back

[20:51] <MenTaLguY> I guess to condense my earlier question, if I understand correctly:

[20:52] <MenTaLguY> { maybe {...} maybe {...} } ; { maybe {...} maybe {...} }

[20:52] <MenTaLguY> is equivalent to:

[20:52] <MenTaLguY> {...}.orElse {...} ; {...}.orElse {...}

[20:52] <MenTaLguY> I'm curious how that would work

[20:59] <TimToady> I would imagine that two independent roundrobins in the same transaction would need to try (eventually) the cross product of all the possibilities.

[20:59] <TimToady> not sure how that would be implemented, or how it composes though.

[21:04] <TimToady> but maybe doesn't autowrap itself in a transaction in the current syntax.  That's explicit with sync.  If we violate composability of maybe inside that, then it can be an error.

[21:04] <TimToady> but I'd rather have the atomic scope explicit.

[21:09] <MenTaLguY> fair enough

[21:10] <MenTaLguY> if sync { maybe { ... } ; maybe { ... } } ; sync { ...e tc ... } is required that makes sense

[21:10] <TimToady> my earlier remark was a misread of your example.

[21:11] <TimToady> that's more like

[21:11] <TimToady> sync { maybe { ... } ; maybe { ... }; OTHERSTUFF; maybe { ... } ; maybe { ... } }

[21:12] <MenTaLguY> hmm

[21:12] <TimToady> that is, what if the maybes aren't contiguous within a particular sync

[21:12] <MenTaLguY> right.

[21:12] <TimToady> are they separate roundrobins that do a search for a solution

[21:12] <TimToady> like /(a|b)(c|d)/

[21:13] <TimToady> only they just keep cycling instead of failing at the end

[21:15] <TimToady> actually, I think the contiguous maybes aren't allowed to have ; between.

[21:15] <TimToady> it would be like saying if 1 { 123 }; else { 456 }

[21:16] <MenTaLguY> aha

[21:16] <MenTaLguY> then that answers my question I guess

[21:16] <MenTaLguY> contiguous maybes are grammatically a single statement

[21:16] <TimToady> yes

[21:17] <MenTaLguY> okay, no problem then

[21:17] <TimToady> good.  this is something I'm not a complete expert on...

[21:18] <TimToady> I'm just the user interface guy... :)

[21:21] <gaal> is there a linux program that can display .graffle files?

[21:25] <MenTaLguY> I've never been able to find one, no.

[21:25] <nothingmuch> gaal: i can reexport as $foo for you

[21:28] <gaal> nothingmuch: thanks, just want to look at `find docs -name \*ffle`...

[21:32] *** mj41_ joined
[21:42] *** ramzi joined
[21:44] *** lisppaste3 joined
[21:50] <svnbot6> r11062 | fglock++ | v6.pm - unmatched '}' now finishes the expression parser, allowing the migration of Yapp statements to plain Rule

[21:50] <svnbot6> r11062 | fglock++ | - t\10-moose1.t is now broken - awaits for new statements parser

[21:50] *** Debolaz joined
[21:54] <fglock> recursive calls between Perl6 and Rule compilers should now be possible (p5 backend)

[21:55] <fglock> also, terms can have Perl6 inside

[21:57] *** jdv79 left
[22:07] *** dduncan joined
[22:52] *** larsen joined
[22:57] <svnbot6> r11063 | clkao++ | pull from perl5/PC-P6.

[23:21] <svnbot6> r11064 | clkao++ | * Re-enable the : prefix for named signatures.

[23:21] <svnbot6> r11064 | clkao++ | * Hard code some builtins that we don't use data::bind callconv.

[23:38] *** MenTaLguY left
[23:39] *** justatheory joined
[23:54] <svnbot6> r11065 | clkao++ | :$infix<~~> and update TODO.

