[00:05] *** jsiracusa joined
[00:10] <dduncan> er, actually, the resmoke ended an hour ago ...

[00:11] <dduncan> and this resmoke of the exact same build (no 'make' was repeated) showed zero errors, ...

[00:11] <dduncan> this pretty much proves the 1 error before was transient

[00:13] <fishb0t> what's the current state of the PIR output by pugs?

[00:14] <fishb0t> If I try to use the head parrot as a backend, I get IMCC errors...

[00:55] *** hikozaemon joined
[01:06] *** dudleyf joined
[01:13] *** dudleyf left
[01:28] *** shachaf joined
[01:29] *** ajs_home joined
[02:23] <nothingmuch> is anyone here from the new york area (or willing to travel a bit) interested in a 2-3 day hike around July 8th-11th (after YAPC)?

[02:45] *** putter joined
[02:47] *** shachaf joined
[02:50] <pasteling> "putter" at 66.30.119.55 pasted "r10685 make test. smoke also uploaded. 51 regressions in 10 files." (18 lines, 1.1K) at http://sial.org/pbot/17723

[02:54] <putter> PerlJam, etal: earlier, I shouldn't have suggested a jump straight to "what to do" about it (p6 expectation management), as further brainstorming what the problem is could be a useful prelude.  ah well.

[03:02] <putter> steven: moose came up in a yapc prep talk on inside-out objects.  but in a rather fuzzy.  if you have an inside-out story you would like broadcast, you might talk with Golden before his talk.

[03:02] <putter> night &

[03:06] *** drbean_ joined
[03:35] <stevan> putter: I have talked with golden before about this stuff

[03:35] *** mako132_ joined
[03:36] <stevan> we are planning to talk at YAPC about how to improve Moose/Class::MOP's inside-out capabilities

[03:51] *** unobe joined
[03:52] <unobe> i

[03:53] <unobe> 've figured out that to use PGE with pugs, I need to have one of two directories:

[03:54] <unobe> 1) either the subdirectory src/pge with run_pge.pir in it (under the build directory), or

[03:54] <unobe> 2) /System/Library/Perl6/darwin-thread-multi-2level/CORE/pugs/pge/ with run_pge.pir in it

[03:55] *** lambdabot joined
[03:56] <unobe> I think this is because of src/Pugs/Prim/Match.hs (lines 20-21). BTW, I'm running os x

[03:57] <unobe> so if you delete the build directory after you build pugs, then PGE rules won't work in pugs :-(

[04:03] <unobe> so just make sure to copy run_pge.pir into CORE/pugs/pge under whatever directory pugs -V gives as the installarchlib

[04:04] *** unobe left
[04:11] *** sahadev2 joined
[04:14] *** rawr joined
[04:39] *** dduncan joined
[05:14] *** buetow joined
[06:27] *** mtve joined
[06:41] *** Aankhen`` joined
[07:19] *** bjoern_ joined
[07:25] *** _cnhackT_ joined
[07:26] *** _cnhackT_ left
[07:27] *** xerox joined
[07:28] *** xerox joined
[07:44] *** iblechbot joined
[07:55] *** kanru joined
[08:05] *** dduncan left
[08:08] *** xern joined
[08:15] *** marmic joined
[08:28] *** kane__ joined
[08:37] *** lisppaste3 joined
[08:42] *** elmex joined
[09:15] <svnbot6> r10686 | audreyt++ | * LICENSE/: Add MIT and LGPL-2.1 license text.

[09:24] <svnbot6> r10687 | audreyt++ | * MANIFEST.SKIP: We are not shipping TextRegexLazy for this release.

[09:27] <svnbot6> r10688 | audreyt++ | * "make ghci" now builds its own deps without requiring

[09:27] <svnbot6> r10688 | audreyt++ |   "make pugs" to be executed first.

[09:27] <svnbot6> r10689 | audreyt++ | * Properly finalize parrot on embparrot because calling parrot_exit.

[09:27] <svnbot6> r10690 | audreyt++ | * minor explicit-import style fix

[09:31] <szbalint> audreyt: (If you've got time for a discussion) I've been wondering about roles and classes: Is there a way to intercept method calls to a class (for example for logging purposes), while the mechanism for that being in a Role?

[09:33] *** ludan joined
[09:33] <ludan> ciao

[09:36] <audreyt> szbalint: look at Moose.pm :)

[09:36] <audreyt> (and irc.perl.org #moose)

[09:36] <audreyt> moose allows for prehandlers

[09:36] <audreyt> I don't think it's part of canonical perl6

[09:36] <audreyt> but it looks sensible

[09:37] <szbalint> oh :)

[09:37] <szbalint> ta!

[09:38] <audreyt> np :)

[09:48] <svnbot6> r10691 | audreyt++ | * System.FilePath - Synchronize from Distribution.Compat.FilePath.

[09:58] <svnbot6> r10692 | audreyt++ | * Ditto for Pugs.hs.

[10:04] <svnbot6> r10693 | audreyt++ | * t/oo/proxy.t: disable test due to incoherent test results.

[10:07] <svnbot6> r10694 | audreyt++ | * README: Update third-party module notice; add Rosetta,

[10:07] <svnbot6> r10694 | audreyt++ |   WTemplate and Locale-KeyedText to non-perl-license

[10:07] <svnbot6> r10694 | audreyt++ |   ext/ listing; incoporate wording fixes from Allison Randal

[10:07] <svnbot6> r10694 | audreyt++ |   and The Perl Foundation; Pugs is now properly copyrighted

[10:07] <svnbot6> r10694 | audreyt++ |   by the "Pugs Contributors" so that I can disclaim my personal

[10:07] <svnbot6> r10694 | audreyt++ |   compilation right over it.

[10:11] *** wilx joined
[10:26] <gaal> hey all. still loaded with $work but just popping in to report a minor problem - running make triggers a relink, even when a pugs and libpugs already exist. so 'make ; make smoke' for example takes a few seconds longer than it should.

[10:43] <audreyt> nod. it's in build_pugs.pl

[10:43] <audreyt> prevent build_exe with some timestampy thing?

[11:09] *** chris2 joined
[11:11] *** neoesque joined
[11:11] <szbalint> Is there a possibility though that prehandlers will be part of Perl6?

[11:15] <audreyt> you mean "before" and "after"?

[11:15] <audreyt> well, you can do that with .wrap

[11:15] <audreyt> but I'm pretty sure I'd like it to be part of perl6-as-implemented

[11:15] <audreyt> not sure about perl6-as-specced

[11:15] <audreyt> stevan will meet timtoady in YAPC::NA hackathon

[11:15] <audreyt> they'll hash it out :)

[11:24] <audreyt> method foo is PRE { ... }

[11:24] <audreyt> maybe

[11:24] <audreyt> not sure

[11:25] <audreyt> I wonder why subtype is renamed subset...

[11:31] <szbalint> oh okay

[11:31] <szbalint> :)

[11:33] <szbalint> Something unrelated, there is a most likely outdated (but passing) test in t/oo/roles about instantiating roles, while S12 says roles cannot be directly instantiated. I take S12 is correct?

[11:37] <Juerd> It may or may not be correct, but it is the leading spec, so the test is in error.

[11:40] *** szbalint_ joined
[11:43] <audreyt> right.

[11:44] <szbalint_> audreyt: btw, is there any estimate on when pugs will have runtime role mixin ability?

[11:44] *** szbalint_ is now known as szbalint

[11:45] <audreyt> after NPW :)

[11:45] <audreyt> and before YAPC::NA hackathon is over

[11:46] <szbalint> okay, nice :)

[11:53] *** jsiracusa joined
[11:56] *** weinig joined
[12:12] <obra> audreyt: are you in .no?

[12:12] *** frederico joined
[12:18] <audreyt> obra: yup

[12:18] <audreyt> in hotel now

[12:18] <audreyt> writing slides

[12:18] <obra> heh. I need to finish that tonight

[12:18] <audreyt> me too

[12:18] <obra> we're in room 420

[12:18] <audreyt> oh. maybe I'll go visit

[12:18] <audreyt> but I'm afraid that'll kill my slidemaking

[12:18] <obra> I'm not there now

[12:18] <obra> kaia may be

[12:18] <audreyt> ah.

[12:19] <obra> I'm getting dragged to a dinner at 19:00

[12:19] <audreyt> when you going to head back?

[12:19] <audreyt> metoo, but if ENOSLIDE then not going

[12:19] <obra> will be in the hotel after that

[12:19] <audreyt> 'k

[12:19] <obra> I'm a little worried about it.

[12:19] <obra> is this the dinner with the uio people?

[12:19] <audreyt> I'm doubly worried

[12:19] <audreyt> since I'm codegen'ing to Keynote

[12:19] <obra> ?! why?

[12:19] <lambdabot> Maybe you meant: . v

[12:19] <audreyt> er, fun

[12:19] <obra> :)

[12:19] <obra> ok. cool

[12:19] <obra> I'll want your takahashi.key ;)

[12:20] <audreyt> but probably going to get contents written first

[12:20] <audreyt> (what a concept)

[12:20] <obra> :)

[12:20] <obra> what's the dinner you might go to? (Trying to figure out if it's the same as mine)

[12:20] <audreyt> same

[12:21] <audreyt> 7pm at subway station

[12:21] <obra> if so, come and bring your laptop. it'll give me ammo to do mine too

[12:21] <audreyt> mmmoose

[12:21] <audreyt> my talk is all about moose now

[12:21] <audreyt> scary

[12:21] <audreyt> s/all/half/

[12:22] <obra> neat!

[12:25] *** iblechbot joined
[12:32] *** hugues23 joined
[13:03] *** lisppaste3 joined
[13:11] *** kanru joined
[13:13] <wolverian> Juerd, why doesn't feather have vim7?

[13:35] <svnbot6> r10695 | fglock++ | Pugs-Compiler-Rule/temp - partial rewrite of the backtracking engine

[13:41] *** QtPlatypus joined
[13:46] *** rzoz joined
[14:08] *** vel joined
[14:20] <Juerd> wolverian: Because it hasn't been dist-upgraded in a while

[14:20] <Juerd> wolverian: I'm installing vim 7 for you now

[14:20] *** MicSch joined
[14:21] <Juerd> wolverian: Done

[14:31] *** MicSch left
[14:35] <gaal> half moose, half elk, half caribou

[14:35] <gaal> and half wapiti (I could go on and on)

[14:36] <audreyt> :)

[14:36] * audreyt is in JIT slide making rush

[14:36] <audreyt> release is looking good modulo chglogging

[14:37] <gaal> sorry i couldn't be more helpful there :(

[15:01] *** bjoern_ joined
[15:04] <stevan> audreyt: please post your slides when you have a chance,.. I would love to see them :)

[15:07] *** rashakil_ joined
[15:13] <gaal> that Calvin and Hobbes strip has forever been appropriate...

[15:13] <gaal> ("last minute panic")

[15:13] * gaal hasn't finished his slides either

[15:15] <gaal> does the ratchet stuff change relevant slides in the peek talk? I have to look at S05 again

[15:22] *** christopher joined
[15:24] *** bpederse joined
[15:27] <wolverian> Juerd, thanks. is it ok if I upgrade it too if I see it hasn't been upgraded in a while?

[15:36] *** buetow joined
[15:36] <Juerd> wolverian: No.

[15:37] <wolverian> Juerd, okay.

[15:37] <Juerd> wolverian: If you upgrade individual packages, that's fine, because then you know exactly what to test.

[15:37] <Juerd> But after a system upgrade, often stuff like mail gets broken

[15:37] <Juerd> And it's routine for me to check that

[15:37] <wolverian> makes sense.

[15:37] <wolverian> thanks. :)

[15:41] *** sahadev joined
[15:50] *** prozessor13 joined
[16:03] *** buubot joined
[16:17] *** iblechbot joined
[16:27] *** shachaf joined
[16:43] *** chris2 joined
[16:49] *** Robe joined
[16:56] *** justatheory joined
[16:57] <sahadev> hello, isn't the shift builtin fuction supposed to shift from the @*ARGS array?

[16:57] <sahadev> $ pugs -e 'say shift || 10'

[16:57] <sahadev> ***

[16:57] <sahadev>     unexpected "|"

[16:57] <sahadev>     expecting term

[16:57] <sahadev>     at -e line 1, column 11

[16:57] <sahadev> @*ARGS.shift works, though

[16:57] <lambdabot> Unknown command, try @list

[16:58] *** bjoern_ is now known as DEpwnsPL

[17:04] <nothingmuch> ?eval 'shift'

[17:04] *** evalbot_10662 is now known as evalbot_10699

[17:04] <evalbot_10699> "shift"

[17:04] <nothingmuch> ?eval shift

[17:04] <evalbot_10699> Error:  unexpected end of input expecting term

[17:04] <nothingmuch> eh, used to perl -e

[17:04] <nothingmuch> uhm, it looks like you'll have to specify it explicitlty

[17:04] <nothingmuch> the parser is treating it as a unary operator (i think)

[17:05] *** ludan joined
[17:05] <ludan> ciao

[17:05] <sahadev> so, is it supposed to be fixed eventually?

[17:05] <nothingmuch> probably

[17:05] <sahadev> ok. thanks.

[17:06] <nothingmuch> ciao ludan

[17:35] *** frederico joined
[17:55] *** lisppaste3 joined
[18:02] <svnbot6> r10700 | fglock++ | Pugs-Compiler-Rule/temp - new backtracking engine

[18:39] *** prozessor13 left
[18:39] *** pbelau joined
[18:40] <pbelau> hey, can someone tell me what an unstacked call is in the perl world ?

[18:47] *** YetAnotherEric joined
[18:55] *** macroron joined
[18:58] <spinclad> could you say what it is elsewhere?

[18:59] <spinclad> what's called an inlined call in C/C++ ?

[19:00] <spinclad> *is it what is called ...

[19:14] *** dduncan joined
[19:24] <pbelau> spinclad, i'm not quite sure what an "unstacked" call would in C/C++

[19:25] <pbelau> i figured it out though

[19:30] *** SamB joined
[19:42] <svnbot6> r10701 | Darren_Duncan++ | LICENSE/ : Updated the LGPL to the current version, which includes the FSF's current Franklin Street address rather than Temple Place ... anyone else using a FSF license should likewise indicate their current address in references

[19:44] *** wilx joined
[20:22] <dduncan> I am now starting a smoke of r10701

[20:50] *** DEpwnsPL is now known as bjoern_

[20:57] <svnbot6> r10702 | audreyt++ | * add tomorrow's talk before sleep.  about 30% finished... oh well.

[20:57] <gaal> pbelau: in Perl 5, goto-&sub reuses the current stack frame. if you mean inlining a function there's no such general purpose thing, though the optimizer happens to fold some constants, e.g. "sub pi () {3.14999}".

[20:58] <gaal> pbelau: in Perl 6, I suppose you could use macros for some of these things.

[20:58] <audreyt> szbalint: to answer your earlier question. the standard translation from Moose:

[20:58] <gaal> good night and good luck, audrey

[20:58] <audreyt> before 'foo' => sub { $self->bar };

[20:58] <audreyt> is this perl 6:

[20:58] <gaal> (talking in movie titles? oops)

[20:58] <audreyt> method foo { $.bar; call }

[20:59] <audreyt> so I think we don't actually need another trait for PRE/POST

[20:59] <audreyt> the "call" makes explicit the fact

[20:59] <audreyt> and you can even change the args by saying

[20:59] <gaal> didn't there use to be one in s06?

[20:59] <audreyt> call(...alternate args...)

[20:59] <gaal> ISTR BEFORE and AFTER...?

[21:01] <gaal> ah, there's ENTER and LEAVE in s04

[21:01] <gaal> PRE and POST there are design-by-contractish things.

[21:01] <gaal> <L04/"Closure traits">

[21:03] <stevan> audreyt: actually with Moose, you can attach a before/around/after method to a locally defined method as well

[21:04] <stevan> it tends to be more useful in augmenting supermethods, but when added by Roles, there comes situations where it might apply the modifier to the local method too

[21:04] <stevan> audreyt: I wanna see your slides :)

[21:05] <stevan> pleeeeeeeaaaasseeeee :)

[21:05] <stevan> I'll give you kharma if you do

[21:05] * stevan dangles the kharma karrot

[21:06] * stevan ponders the kharmic impact of abusing kharma in this way ... hmm

[21:07] <gaal> stevan: r10702

[21:08] <stevan> doh!

[21:08] <stevan> stevan-- # for not backlogging

[21:08] <stevan> see,.. thats the kharmic impact... i am doomed :P

[21:08] <gaal> "I want to see your slides" is not nearly as wicked-sounding as "You wanna see my modules?"

[21:09] <stevan> or even worse.. "do you wanna pet my monkey?"

[21:09] <stevan> that one always scared me

[21:11] <gaal> audreyt: the <title> is weird

[21:13] <gaal> not that that matters in fullscreen mode

[21:14] * stevan can't get the xul to work

[21:15] <ingy> i stevan

[21:15] <ingy> h

[21:15] <stevan> heya ingy

[21:15] <stevan> where in the world are you now ingy?

[21:15] <gaal> in the slide with "has overdraft_account" is the "o"-ish character at the end of the line intentional?

[21:16] <ingy> Seattle

[21:16] <stevan> ah,.. they let you back in ... good :)

[21:16] <ingy> heh

[21:16] * stevan had to save the file to his desktop to get the xul to work,.. how odd...

[21:16] <ingy> I'll have a motorcycle in Chicago

[21:16] <ingy> w00t

[21:16] <stevan> nice

[21:17] <gaal> will you be zentaining it?

[21:17] <stevan> ingy: nothingmuch can be your biker bitch then

[21:17] <ingy> yeah...

[21:17] <ingy> he can get in line :p

[21:17] *** weinig joined
[21:17] <gaal> hahaha, ingy, you should look at audrey's slides

[21:17] <ingy> url?

[21:18] * ingy fears

[21:18] * stevan doesn't hate Ingy,.. even though he wrote Spiffy

[21:18] <gaal> ingy: svk pull ; firefox docs/talks/deploy.xul

[21:18] <wolverian> audreyt, s/reconcilling/reconciling/ on slide 20

[21:18] <ingy> wolverian: you have commit :P

[21:19] <wolverian> yeah, but I have a checkout in progress :)

[21:19] <wolverian> only 9000 revisions to go

[21:19] <ingy> yowch

[21:19] <ingy> I hate the way svk won't let you do two things at once

[21:20] <PerlJam> ingy: complain to bestpractical.com and maybe they'll pay clkao to "fix" it.

[21:20] <PerlJam> :-)

[21:20] <ingy> PerlJam: did cl move to Boston?

[21:21] <PerlJam> no idea if there was any physical movement.

[21:21] <PerlJam> given the nature of the people involved, I wouldn't be surprised if there was none.

[21:24] <stevan> especially considering that clkao write svk specifically so he could hack from the .tw mountains

[21:24] <stevan> (or at least that is one of his oft quoted reasons)

[21:25] <gaal> good niht &

[21:25] <gaal> but with a g

[21:26] <stevan> goog niht gaal :P

[21:26] <gaal> stevang :)

[21:36] <dduncan> wolverian, unless you need all the revisions, you could just have svk checkout the later ones ... eg, just those from The 6.2.11 release and later

[21:36] <dduncan> much faster

[21:37] <dduncan> having all is useful mainly if you want to have an archive

[21:37] <wolverian> I like doing it the hard way

[21:37] <dduncan> getting just specific revs is something like a -n switch

[21:38] <wolverian> yeah.

[21:38] <dduncan> or a -<some letter>

[21:38] <wolverian> it's -n, where n is a number, in the interactive checkout

[21:38] <wolverian> I'm doing that now, too, on another computer, so I can compare :)

[21:38] <dduncan> interactive checkout not necessary for what I'm thinking of

[21:39] <szbalint> audreyt: cool.

[21:40] <szbalint> at 'before' :)

[21:41] <dduncan> wolverian, now that I look at it, I think it is -r

[21:41] <dduncan> during svk update

[21:42] *** Qiang joined
[21:42] <PerlJam> I often have trouble getting svk to just get the head revision for some reason.

[21:43] <dduncan> no, its -s

[21:43] <PerlJam> (or anything other than getting all revisions)

[21:43] <wolverian> mm. well, it's getting the 10 most recent revisions now, but it's still taking ages. :)

[21:44] <wolverian> (I don't know how svn stores things. going through 10k patches would take some time, I guess)

[21:44] <svnbot6> r10703 | fglock++ | Pugs-Compiler-Rule/temp - updated TODO list; code cleanup

[21:44] <dduncan> the first revision always pulls the whole thing at that point, then the rest are quick

[21:44] <dduncan> svn stores diffs

[21:44] <dduncan> but the first revision is the whole thing

[21:44] <wolverian> mmkay

[21:44] <wolverian> ah, done.

[21:45] <dduncan> wolverian, specifically what I've been trying to reference all this time is ...

[21:45] <dduncan> under http://svk.elixus.org/?SVKUsage

[21:45] <lambdabot> The title of that page is "SVKUsage - Kwiki"

[21:45] <dduncan> heading "Mirroring"

[21:45] <dduncan> If you don't want to sync every revision from the remote, you can add a -s REV option as the first revision to sync without previous changes.

[21:45] <dduncan> that specifically is what I was using

[21:46] <dduncan> and controls what is copied from the server

[21:46] <dduncan> so its not -n or -r or such

[21:46] <dduncan> and this is not interactive, not any more than the plain 'sync'

[21:46] <svnbot6> r10704 | wolverian++ | typo in deploy.xul

[21:47] <dduncan> did you get all that?

[21:48] * dduncan back in an hour

[21:55] <wolverian> dduncan, I was using co directly.

[21:55] <wolverian> but thanks, that's useful.

[21:57] *** froh-doh joined
[22:02] <stevan> audreyt: you have probably seen this, but... http://www.hlvm.org/

[22:02] <lambdabot> The title of that page is "High Level Virtual Machine"

[22:02] <stevan> thanks lambdabot

[22:08] *** ludan joined
[22:18] *** jsiracusa joined
[22:22] <svnbot6> r10705 | fglock++ | Pugs-Compiler-Rule/temp - positional and named captures are ok

[22:28] <wolverian> by the way, I was accepted to my CS dept's student research programme, which is basically an extra curriculum of research-oriented lectures and meetings. we talked about pugs in the interview, it was fun, and I think it helped :)

[22:37] *** bpederse left
[22:43] *** bpederse joined
[22:53] <QtPlatypus> wolverian: Congrats

[22:53] <wolverian> QtPlatypus, thanks :)

[23:41] *** penk left
[23:47] *** bpederse left
[23:55] <dduncan> smoke of 10701 completed some time ago ... uploaded

[23:55] <dduncan> it has 65 errors, more than the pre0

[23:56] <dduncan> but t/pugsrun/07-dash-uppercase-v.t is not one of the failures

