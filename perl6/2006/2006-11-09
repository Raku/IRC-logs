[00:00] <nothingmuch> bah

[00:00] <nothingmuch> nevermind

[00:02] <nothingmuch> sleep &

[00:05] *** chromatic joined
[00:06] <chromatic> Assuming I have an hour and want to experiment with writing a Parrot emitter for MiniPerl6, where should I look?

[00:06] <Limbic_Region> salutations chromatic

[00:06] <Limbic_Region> ?seen audreyt

[00:06] <lambdabot> audreyt is in #perl6, #ghc and #haskell. I last heard audreyt speak 3h 34m 18s ago.

[00:06] <Limbic_Region> ?seen cmarcelo

[00:06] <lambdabot> I saw cmarcelo leaving #perl6 6h 38m 35s ago, and .

[00:07] <nothingmuch> *moose noises*

[00:07] <Limbic_Region> chromatic - MP6 is relatively new so I don't know much about it and the two who know it best aren't around

[00:07] <Limbic_Region> nothingmuch - thought you were sleeping

[00:07] <chromatic> I made a Parrot.pm with an empty emit {} in perl5/Pugs-Compiler-Perl6/, then invoked it with perl -Ilib -Mblib lib/v6.pm --compile-only -BParrot say42, but no luck.

[00:07] <nothingmuch> moose noises in mysleep ;-)

[00:07] <chromatic> say42 is a file with "say 42" in it.

[00:07] <nothingmuch> i'm just post-hygene obsessing

[00:08] <nothingmuch> closing windows etc takes long

[00:08] <nothingmuch> plus that last commit is always a bit longer than expected ;-)

[00:08] *** mako132_ joined
[00:09] <Limbic_Region> though I might even be confusing MP6 with OM

[00:09] <nothingmuch> last link: http://home.pipeline.com/~hbaker1/CheneyMTA.html

[00:09] <lambdabot> Title: Cheney on the M.T.A., http://tinyurl.com/purol

[00:10] <nothingmuch> very interesting for those who appreciate the low level side of high level languages

[00:12] <Limbic_Region> chromatic I assume you have read the README in pugs/v6 ?

[00:12] <[particle]> c: look in v6/v6-MiniPerl6/Emitter/

[00:13] <chromatic> Yes.

[00:13] * Limbic_Region goes back to sleep then

[00:13] <chromatic> lib/MiniPerl6/Emitter, you mean?

[00:14] <[particle]> er, yes

[00:15] <chromatic> In theory, then, I could copy this and override all of the emit* methods to emit Parrot code then?

[00:15] <[particle]> yes

[00:15] <chromatic> How would I test it?

[00:16] <[particle]> i'm not quite sure

[00:17] <chromatic> How can I tell it to use a different emitter?

[00:17] <[particle]> i'd guess you'd want to spit out the pir at first, and sanity check it

[00:18] <chromatic> Does the code even work?

[00:19] <[particle]> yes, it works with perl5 back end

[00:20] <chromatic> Okay.  How do I make this code work with the P5 backend?

[00:20] <[particle]> oh, i think maybe the emitter refactor isn't quite done yet

[00:20] <[particle]> fglock got a new system, or has some system restore hassles preventing that commit

[00:21] <[particle]> if you have v6 installed, just switch to v6-MiniPerl6 and run 'prove t'

[00:22] <chromatic> t/01-sanity....FAILED before any test output arrived

[00:22] <chromatic> t/02-emit......FAILED before any test output arrived

[00:22] <chromatic> t/03-token.....FAILED before any test output arrived

[00:22] <chromatic> t/04-regex.....FAILED before any test output arrived

[00:22] <chromatic> FAILED--4 test scripts could be run, alas--no output ever seen

[00:22] <TimToady> I don't think those tests are doing TAP format yet.

[00:22] <[particle]> oh. well then....

[00:23] <chromatic> $ perl -Ilib t/01-sanity.t

[00:23] <chromatic> Error in perl 6 parser: invalid rule syntax at (eval 79) line 349.

[00:24] <chromatic> $ rm t/*tc && perl -Ilib t/01-sanity.t

[00:24] <chromatic> Error in perl 6 parser: invalid rule syntax at (eval 79) line 349.

[00:25] <chromatic> $ rm t/*tc && perl -Ilib -I../../perl5/Pugs-Compiler-Perl6/blib/lib t/01-sanity.t

[00:25] <chromatic> Error in perl 6 parser: invalid rule syntax at (eval 79) line 349.

[00:26] <[particle]> ../../misc/pX/Common/Pugs-Compiler-Perl6/lib?

[00:26] <[particle]> that's the bleeding-edge stuff

[00:27] <chromatic> v6 from CPAN wouldn't install either.

[00:27] <chromatic> I figured the new stuff might have a chance of working.

[00:27] <chromatic> ~/dev/pugs/perl5/Pugs-Compiler-Perl6 $ make test

[00:27] <chromatic> 1 test and 2 subtests skipped.

[00:27] <chromatic> Failed 2/35 test scripts. 314/721 subtests failed.

[00:29] <chromatic> Right then.  Yet another half-assed, overpromised Pugs code-tease.

[00:29] <TimToady> be nice

[00:30] <chromatic> Larry, every time I try to do something on Pugs, it fails to work.

[00:31] <[particle]> heh, and i thought it was just me

[00:31] <chromatic> Every six months, someone says "Oh, try it now!  It's so much better, and we could use your help!" and it fails to work.

[00:31] <[particle]> i keep thinking there's a magic document on using this stuff, and i'm not reading it. but, it doesn't exist, and i can't use it.

[00:32] <chromatic> After three or four or five times, I start to believe that it just doesn't work.

[00:33] <Limbic_Region> chromatic - you aren't interested in the Haskell backend then?  Just parrot and perhaps perl 5?

[00:33] <chromatic> The code is impenetrable.

[00:33] <chromatic> I gave up on the Haskell backend in February.

[00:33] <cj> hey there chromatic

[00:33] <chromatic> The Perl 5 backend has no documentation that I can find (or comprehend) and fails to pass the tests in tree or from the CPAN.

[00:34] <chromatic> I decided to spend an hour experimenting today to see if I could make any progress with the Parrot backend.

[00:34] <chromatic> Hi cj.

[00:34] <chromatic> Ahh, that CJ.

[00:34] <cj> ha!

[00:35] <Limbic_Region> well, I don't hack internals - I just write perl 6 code.  And when I tell pugs to run it - it does.  A lot of it too, not just variable assignment.

[00:35] *** nwc10_ joined
[00:35] <zgh> yeah I've had good luck with actual perl6 code in pugs

[00:36] <zgh> HTTP::Server::Simple and CGI work together now ^_^

[00:36] <zgh> yay web hacking in perl6!

[00:36] <TimToady> I'm doing production Perl 6 code at work...

[00:36] <chromatic> Yes, I'm sure the implemented stuff is great.

[00:36] <Limbic_Region> there is a LOT of implemented stuff

[00:37] <Limbic_Region> most of t/ passes with the haskell backend

[00:37] <chromatic> Right, it's slightly more capable than it was when I stopped working on it in August 2005.

[00:38] <chromatic> When was the last time you ran make test?

[00:38] <chromatic> Did it run in under two hours for you?

[00:38] <TimToady> 40 minutes

[00:38] <Limbic_Region> I run make test twice a day

[00:38] <chromatic> That's positive.

[00:38] <Limbic_Region> s/twice a day/at least twice a day/

[00:39] <Limbic_Region> on this box - < 40 minutes

[00:39] <Limbic_Region> on my slow machine at work circa 65 minutes

[00:39] <chromatic> Is GHC 6.6 available for your platform?

[00:39] <Limbic_Region> in neither place have I taken advantage of multi-processors

[00:39] <Limbic_Region> winbugs - yep

[00:40] <Limbic_Region> nor have I taking advantage of the ghc 6.6 performance flags

[00:40] <TimToady> and that's with a lot more tests than it had a year ago.

[00:43] <chromatic> I am leaving Flavio a note.  I will only try once more.

[00:43] *** bsb joined
[00:43] <Limbic_Region> ?seen fglock

[00:43] <lambdabot> I saw fglock leaving #perl6 4h 45m 56s ago, and .

[00:46] *** chromatic left
[00:57] *** weinig is now known as weinig|fooding

[01:10] *** lyokato joined
[01:11] <follil> ?seen audreyt

[01:11] <lambdabot> audreyt is in #perl6, #ghc and #haskell. I last heard audreyt speak 4h 39m 23s ago.

[01:21] *** dmq joined
[01:22] *** pjcj joined
[01:32] *** bonesss joined
[01:37] *** Steve_p joined
[01:37] *** avarab joined
[01:46] *** fayland joined
[02:04] *** fayland_ joined
[02:09] *** nipotaway is now known as nipotan

[02:10] *** bonsai joined
[02:22] *** duend joined
[02:45] *** qmole joined
[02:51] *** mako132_ joined
[02:57] *** Whoosh joined
[03:05] *** weinig|fooding is now known as weinig

[03:11] *** Coleoid joined
[03:19] * audreyt goes back from Rio.pm social meeting

[03:20] <audreyt> oy. I missed chromatic. another chance of getting him to join development missed

[03:20] <audreyt> c'est la vie.

[03:25] <pasteling> "Coleoid" at 70.239.92.24 pasted "Changes to Makefile.PL to get it closer to working with Win32 $ENV{SVN_ASP_DOT_NET_HACK}" (16 lines, 664B) at http://sial.org/pbot/21001

[03:26] <Coleoid> audreyt: This is the half-solution I mentioned earlier...

[03:27] <Coleoid> With that change, the generated Makefile needs only one more manual deletion to succeed (with groaning)...

[03:27] <Coleoid> Though more fixes are worthwhile.

[03:28] <GeJ> adreyt: hi

[03:28] <Coleoid> I don't know where the offending portion is being generated.

[03:29] <GeJ> audreyt: having chromatic join the pugs ship would be great as he is undoubtedly a most valuable asset for perl 6

[03:31] <GeJ> Reading the comments though makes me feel sad, though. I think I can understand his frustration, but his reaction is not helping.

[03:31] <Coleoid> GeJ, I agree.  I also empathize with his experience:  I've tried to get up and working in Pugs several times.

[03:32] <GeJ> Well, this is just the humble opinion of someone who has never provided anything to either pugs or parrot and as such can be discarded.

[03:32] <stevan> GeJ: this is also just how chromatic

[03:33] <stevan> is

[03:33] <Coleoid> This is the best I've done yet!  With manual makefile hammering, I get a working build.

[03:34] <audreyt> ooh!

[03:34] <audreyt> "with" manual hammering?

[03:34] <audreyt> Coleoid: also, please commit the Makefile.PL patch

[03:35] <Coleoid> Yeah, after Makefile.PL is run, I've got to delete one more chunk.

[03:35] <Coleoid> (from the generated Makefile)

[03:36] <GeJ> stevan: I never had the opportunity to meet him (and probably never will). All I know from him is what one can read on various blogs, MLs, and such. All I can say is that I have a high respect for him and his works. But the animosity shown in the comments he made makes me feel mostly uncomfortable.

[03:37] <Coleoid> So the job isn't done yet, but I've never been inside MakeMaker.

[03:37] <Coleoid> (or any of the related techs.)

[03:37] <audreyt> Coleoid: which chunk?

[03:37] <Coleoid> Er...

[03:39] <pasteling> "Coleoid" at 70.239.92.24 pasted "Manual hack to generated Makefile to get build success when working with Win32 $ENV{SVN_ASP_DOT_NET_HACK}" (10 lines, 418B) at http://sial.org/pbot/21002

[03:40] <Coleoid> That chunk.

[03:40] <audreyt> so it's trying to install _svn as a script

[03:41] <audreyt> Coleoid: you got a commit bit, btw?

[03:41] <stevan> GeJ: I wouldn't take the comments too heart too much, he means what he says, but I never found him to be mean spirited, just very spirited :)

[03:41] <Coleoid> Mm-hm.  There are other places this comes up in the Makefile, but that's the only fatal one.

[03:41] <audreyt> it's now fixed.

[03:41] <GeJ> stevan: good to know :)

[03:41] <Coleoid> I don't have a commit bit.

[03:41] <svnbot6> r14684 | audreyt++ | * Makefile.PL: Coleoid observed that script/_svn/ was erroneously

[03:41] <svnbot6> r14684 | audreyt++ |   being included in install_script; this fixed that.

[03:42] <audreyt> oh. we can fix that. wha'ts your email address?

[03:42] <Coleoid> [email@hidden.address]
[03:42] <clkao> audreyt: now all you need is a restian api so you can give out commitbits without leaving your terminal..

[03:42] <clkao> luckily this web framework seemed to provide one..

[03:43] <audreyt> Coleoid: welcome aboard; please add yourself to AUTHORS :)

[03:44] <Coleoid> :D  Thanks!

[03:49] <audreyt> Coleoid: so please commit the Makefile.PL

[03:49] <audreyt> and then it should build without fatal errors :)

[03:50] <Coleoid> Merged in my changes, and I'm re-making to be sure...

[03:57] <audreyt> Coleoid: sorry I can't stay around anymore

[03:58] <audreyt> I'll see you ~9hr from now

[03:58] <audreyt> good night and thanks for chasing this down :)

[03:59] <svnbot6> r14685 | Coleoid++ | Fixes to navigate around _svn dirs when svn is configured to use those instead of the usual .svn folders.

[04:00] <Coleoid> Just enough help--thanks!

[04:01] *** weinig is now known as weinig|zZz

[04:04] *** mbradley is now known as mbradley|phone

[04:15] <svnbot6> r14686 | Coleoid++ | Slight delay as I found an editor that would not mangle the Unicode in AUTHORS

[04:22] *** mbradley|phone is now known as mbradley

[04:30] *** dduncan joined
[04:34] *** fayland__ joined
[04:34] *** fayland__ is now known as fayland

[04:39] <GeJ> win 2

[05:01] *** folli joined
[05:16] *** SubStack joined
[05:47] *** BooK joined
[05:48] *** scook0 joined
[05:48] *** ivas joined
[06:00] *** BooK_ joined
[06:10] *** mbradley is now known as mbradley|zzz

[06:13] *** DHGE joined
[06:15] *** BooK joined
[06:17] *** johnSt joined
[06:19] <johnSt> audreyt: please do not be rude to chromatic -- why won't you work on what he suggests you should be working on? let's cooperate to make perl 6 the greatest language!

[06:21] *** zgh joined
[06:38] *** DHGE joined
[06:48] <johnSt> can anyone explain why the concerns of chromatic (perl.com editor) have not been addressed? he is perfectly positioned to survey the perl landscape, yet it seems like no one is following his command. we harm only ourselves by ignoring the natural leaders in our community imho.

[06:49] *** scook0 joined
[06:57] <zptao> natural leaders <--- lol

[06:58] *** johnSt left
[07:02] <wolverian> heh.

[07:09] <dduncan> yeah really

[07:35] *** bsb left
[07:44] *** iblechbot joined
[07:45] *** chromatic joined
[07:45] <chromatic> I'm not trying to be a natural leader or anythiing.

[07:45] <chromatic> I have some experience, yeah.

[07:45] <chromatic> I'm just some guy though, and I can be a real jerk sometimes.

[07:46] <chromatic> If I'm wrong, that's fine.  I'm wrong sometimes.

[07:47] <chromatic> If I'm not helpful, then somebody with some gusto just grab me in private and set me straight.  Please.

[07:47] <chromatic> But yeah, I get frustrated sometimes and I really hate when there's something wrong and a lot of people think it and none of them want to say it.  That makes me want to say it.

[07:47] <chromatic> Again, though, I'm wrong sometimes.

[07:47] <chromatic> I'm a jerk sometimes.  Sometimes I can even tell before I say something.

[07:48] <chromatic> If I'm right, it's not because I edit Perl.com or write books sometimes or have written some software that some people use.

[07:49] <chromatic> I'd like to think that anyone could say something that's true and have people consider it seriously.

[07:49] <chromatic> Likewise, if I'm wrong, I hope that people are willing to call me on it.

[07:53] <chromatic> I've sent fglock and audreyt an email outlining what I think needs to be in place before I can seriously look at making a PIR emitter for MiniPerl6.

[07:53] <dduncan> personally, I don't know what the fuss is about ... all I saw you say is you were disappointed in the progress of Perl 6 and/or how easy it is to use the implementations

[07:53] <dduncan> nothing to worry about I think

[07:53] <dduncan> that is, I don't think there are any problems

[07:53] <chromatic> I saw the backlog where someone said something like "He's the editor of Perl.com, so you guys should take him more seriously!"

[07:54] <dduncan> I saw that too, and don't know what he's referring to

[07:54] <dduncan> I looked further backlog, and on several web sites,

[07:54] <dduncan> I saw no disrespect between you and audrey

[07:54] <chromatic> Thanks for the perspective.

[07:55] <dduncan> and fyi, I know that other people I encounter are also somewhat pessimistic about the progress of Perl 6, though I am personally optimistic about it

[07:55] <dduncan> I think its moving along well, even if lots of others don't see that

[07:56] <dduncan> but I also haven't really tried to use it yet ...

[07:56] <dduncan> or I have, and decided it will probably be ready later

[07:56] <dduncan> and am continuing in Perl 5 for the moment

[07:56] <dduncan> now that the Metamodel has just been attached to the Haskell, or is in progress, thats a big step forward

[07:57] <chromatic> Yeah, Larry pointed that out to me too.

[07:57] <dduncan> and was one of the main things I was waiting for

[07:57] <dduncan> fyi, I'm trying to implement an integrated RDBMS in Perl 6, and the Perl 6 introspection abilities were a prerequisite

[07:58] <chromatic> I wanted to use Test::Class in Perl 6, but OO support was a prerequisite.

[07:58] <dduncan> at the moment, I'm making a Perl 5 prototype first, then doing it in Perl 6 after

[07:58] <dduncan> we've had fake OO of sorts for awhile, but the new metamodel should make it more real

[07:59] <chromatic> FWIW, having a decent OO language for TGE would help Parrot and its hosted languages move much faster too.

[07:59] <dduncan> now, afaik, we're still waiting for GHC 6.6 to be ported to some platforms, then 6.4 cruft can be removed from Pugs

[08:00] <dduncan> I decided awhile back that, while Parrot is to be the long term best platform for Perl 6, I would be using the Perl 5 backend in production first

[08:00] <chromatic> There's where we start to disagree.

[08:01] *** buubot joined
[08:01] <dduncan> well, if Parrot + Perl 6 work in production in the next few months, let me know

[08:01] <dduncan> but I guess TGE is part of making that so

[08:02] <chromatic> That's honestly my big block right now, technically.

[08:02] <chromatic> As well as that of Perl 6 on Parrot.

[08:03] <dduncan> fyi, my thought of Perl 5 working first was based on the idea of Perl 5 being stable while Parrot is pre-alpha ... while I'm not too close to the Parrot side of things, I was under the impression that other Perl 6 backends were moving along a lot faster than it was

[08:03] <chromatic> As VMs, yes, that's likely true (unless you count YARV).

[08:03] <dduncan> I saw the Parrot people having a more difficult task, hence it taking longer

[08:04] <chromatic> As in supporting the features that Perl 6 needs?  I don't have that impression.

[08:05] <chromatic> I get this sense of a looming Turing Tar-Pit for some of them, especially Perl 5.

[08:06] <dduncan> fyi, another part of the backlog shows Audrey is disappointed in having missed you in this channel, like she wants to get you involved some more ... but I guess your statement of prerequisites is your lead-in to that

[08:07] <chromatic> Yeah.  I would like to make the best possible use of my time.

[08:08] <dduncan> now, her last post was that she'll be back online in about 9 hours ... that was made about 4 hours ago

[08:08] <dduncan> what TZ are you in?

[08:08] <chromatic> -0700 I believe

[08:08] <dduncan> and I'm -0800 ... you probably won't be up then

[08:09] <chromatic> Not if I can help it!

[08:10] <chromatic> nopaste?

[08:12] <dduncan> fyi, if it explains anything, most of the short term value I want to get out of Perl 6 is the syntax, the fact everything is an object, stronger types, sets, etc ... essentially, a cleaner Perl 5 with less verbose syntax for common operations ... a lot of the big ticket features I still have to learn to find a situation where I would use them

[08:12] <dduncan> oh yes, and the built-in powerful grammar

[08:13] <chromatic> Once you go multi, everything else seems so unflavored.

[08:13] <pasteling> "chromatic" at 63.105.17.30 pasted "Make and Test Times on Fresh Checkout (#14685)" (34 lines, 1.5K) at http://sial.org/pbot/21006

[08:13] <dduncan> there it is

[08:13] <dduncan> but normally its instantaneous

[08:16] <chromatic> The build or the test?

[08:17] <dduncan> I was referring to your nopaste question

[08:17] <dduncan> a submitted nopaste tends to appear instantaneously in the channel

[08:17] <chromatic> Oh.  No, I was trying to get a bot to tell me the URL.

[08:17] <dduncan> I just bookmarked the nopaste in my browser long ago

[08:18] <dduncan> ?nopaste

[08:18] <lambdabot> http://paste.lisp.org/new/haskell

[08:18] <dduncan> I thought, ?eval had the questionmark in front, so maybe that too

[08:18] <chromatic> Good thinking.

[08:19] <dduncan> but that url doesn't work

[08:19] <dduncan> I bookmarked http://sial.org/pbot/perl6

[08:19] <lambdabot> Title: sial.org Pastebot - pasteling

[08:20] <chromatic> I just tickled pasteling until it gave up user info.

[08:20] *** fayland__ joined
[08:21] <dduncan> now, since Perl 5 is more stable than Perl 6, I have been experimenting in making the RDBMS there first ... while Perl 5 is more verbose, it is still good for demonstating what semantics I actually want, so it is easier to get appropriate help in making that work in Perl 6

[08:22] <dduncan> my code in progress is at http://darrenduncan.net/QDRDBMS/

[08:22] <lambdabot> Title: Index of /QDRDBMS

[08:22] <Cugel> Just a quick Perl5 question for my personal education. I'm using "  use lib ".";    "  to force Perl to look in my current dir for my .pm file (all other methods seem to fail for some reason). Is this a hack or is it Good Coding?

[08:22] <dduncan> you shouldn't need to

[08:22] <chromatic> Depends on why your .pm file is in your current directory.

[08:23] <dduncan> Perl 5 always looks in the current directory, AFAIK

[08:23] <chromatic> Not with taint mode, I believe.

[08:23] <dduncan> but keep in mind that, if you are invoking your script from a soft reference, the CWD may not be where your script is

[08:23] <dduncan> as is often the case with web apps

[08:24] <Cugel> Yeah for some reason even updating @INC doesn't seem to work.

[08:24] <dduncan> for security and other reasons, I always locate my web code in some other dir, and just put a softlink to that in the httpdocs

[08:24] <Cugel> I see.

[08:24] <dduncan> but that also means the script needs to have an explicit use lib in it so Perl finds the other parts

[08:25] <Cugel> I'm finally getting the hang of variable scoping and using strict and warnings etc. I'm still the BASIC guy I was 20 years ago apparently.

[08:25] *** SCalimlim joined
[08:25] <dduncan> so try adding a "use lib '/path/to/dir/holding/your/modles';" to your main script and see if that helps

[08:25] <dduncan> my paths are usually absolute in that situation

[08:25] <Cugel> good idea.

[08:26] <dduncan> I habitually put this at the top of all my Perl 5 code: use 5.008001; use utf8; use strict; use warnings FATAL => 'all';

[08:27] <dduncan> making warnings FATAL is particularly useful for web scripts

[08:27] <Cugel> So each warning is not just a warning but a real error then?

[08:27] <dduncan> since normal warnings won't turn into exceptions that I can catch and print to the browser for debugging

[08:28] <dduncan> a normal warning isn't an exception; I make them into such

[08:28] <Cugel> I'm copying that, looks good.

[08:28] *** elmex joined
[08:28] <dduncan> my main script is a big eval block which contains everything else ... that eval block would only catch an exception if something in my code dies

[08:28] <jrockway> why the use utf8?  do you use a lot of unicode literals in your scripts?

[08:29] <dduncan> that is, the main script contains almost nothing but the eval block ... all my real code is in modules

[08:29] <dduncan> I use utf8 by default, so just in case I have non-ascii chars, they are unicode and not some other encoding

[08:29] <dduncan> I make my whole pipeline unicode

[08:30] <Cugel> What does the use 5.008001  do really?

[08:30] <dduncan> it specifies minimum perl version to run under

[08:30] <dduncan> you can set it different if you want, but the above is the first useable 5.8, and I don't want older than 5.8

[08:30] <Cugel> I'm not using OOP yet, so my minimum version might as well be Perl 5.0 :-)  but still.

[08:30] <dduncan> if you have specific needs, you can set it differently

[08:31] <dduncan> you could leave the line out entirely, as well

[08:31] <jrockway> use utf8 means "my source file is encoded in utf8"

[08:31] <dduncan> but fyi, the utf8 pragma only works with 5.8

[08:31] <chromatic> You need at least 5.6 if you want the warnings pragma too.

[08:31] <dduncan> as well as some other things I want to use

[08:31] <jrockway> if you want data read from files to have the utf8 flag on, you need to use other means

[08:31] <dduncan> yes, the pragma just says the Perl code is utf8, not file contents etc

[08:32] <dduncan> but 5.8 also has PerlIO and stuff, so its easy to tell it what encoding to treat files as

[08:32] <dduncan> as well as standard out and stuff

[08:32] <Cugel> Ah I didn't know 'use warnings' was relatively new.

[08:32] <jrockway> yeah, i don't see any reason to support perls that are 5+ years old

[08:33] <jrockway> if your OS doesn't ship with perl 5.8.x, it's time to get a real OS

[08:33] <dduncan> or install it yourself

[08:33] <jrockway> yeah; wanted to avoid the "perl is too hard to compile" discussion :)

[08:33] <dduncan> I run Mac OS X, and 10.3+ include 5.8

[08:34] <dduncan> but I still compile it myself

[08:34] <jrockway> IIRC apple picks weird options from time to time

[08:34] <dduncan> how so?

[08:35] <dduncan> I know their bundled perl is multithreaded, while the default Perl config is not

[08:35] <jrockway> i think in the 10.3 days they didn't include ithreads, the included 5.0005 threads, or something

[08:35] <dduncan> I don't know

[08:35] <dduncan> I've never used any multithread features

[08:35] <jrockway> after 10.4 the included perl was fine

[08:35] *** gene9 joined
[08:35] <dduncan> I'm on 10.4.8 now

[08:36] <jrockway> hmm, my last memory of OS X was 10.4.5, which hosed all my production servers

[08:36] <jrockway> i don't remember why, though...

[08:37] <jrockway> apple's take on apache was pretty weird

[08:37] <jrockway> ld wanted to build all libraries as "universal binaries", but apache didn't appreciate that

[08:37] <jrockway> but apple changed the source of ld to to ignore -arch flags, or something

[08:37] <jrockway> so i had to build my own universal apache

[08:37] <jrockway> that was a nightmare

[08:38] <pasteling> "duncand" at 24.69.53.198 pasted "example (perl 5) web script wrapper" (26 lines, 724B) at http://sial.org/pbot/21008

[08:39] <dduncan> Cugel, that may help you

[08:39] <dduncan> its a generified version of my "main program" for a web app

[08:40] <jrockway> at that point, why not use CGI::Application or Catalyst?

[08:40] <dduncan> it just invokes the real main, and traps and reports any problem with either compiling or executing such that the real main doesn't handle itself

[08:40] <jrockway> the catalyst error screen is prettier ;)

[08:40] <Cugel> Looks good -- very educational too.

[08:41] <dduncan> at the moment, I just wanted something with as few dependencies as possible ... once I actually have experience using those frameworks and trust them, I'll switch over, though

[08:41] <jrockway> btw, what happens if $err contains HTML?

[08:41] <jrockway> i don't see the content-type set to text anywhere

[08:42] <Cugel> I love the 1; at the end -- is something like that still in Perl 6?

[08:42] <jrockway> there's a good reason for that

[08:43] <dduncan> an omission ... but it matters little since that trap should never show up but when I'm actually editing the site and made a typo

[08:43] <jrockway> you could do "return _init" or something, and if _init fails the module won't load

[08:43] <dduncan> actually, the trap I showed you is mainly to catch COMPILE errors of the program

[08:43] <jrockway> ah, i see

[08:43] <jrockway> if haven't done plain (perl) CGI for a while

[08:43] <dduncan> the 1; at the end isn't needed for Perl 6

[08:44] <dduncan> it isn't always needed in Perl 5 either, but it doesn't hurt to have it, to be safe

[08:45] <dduncan> fyi, I consider CGI cludgey, but only used it for a quick solution ... my program has its own "IOUtils" module which completely wraps it anyway, so the program doesn't suffer its API

[08:46] <dduncan> fyi, part of the reason for not having used Catalyst et al, besides inexperience, is because the script in question started out as a PHP one that I inherited, then translated

[08:47] <dduncan> the $job said first to just get it working like the old one did sortof, then we can later do a better rewrite

[08:48] <jrockway> yeah, understandable

[08:48] <jrockway> i am in the reverse situation now -- moving old perl to "new" PHP

[08:48] <jrockway> Now With Less Maintainability (tm)

[08:48] <jrockway> don't get me started on PHP, though

[08:48] <dduncan> I agree ... PHP is teh suck

[08:48] <jrockway> it really impresses me how bad of a job the PHP devs did

[08:48] <dduncan> that said, I'd sooner use it than some MS tool

[08:49] <jrockway> they just don't understand programming, but they somehow managed to write their own programming language

[08:49] <jrockway> i'm not sure what to think about that

[08:49] <jrockway> i also love their helpful default-bison parser... "parse error: syntax error: expecting T_FOOBAR but got T_STRING"

[08:49] <jrockway> that's helpful.

[08:50] <jrockway> but yeah, not going to go off on a PHP rant ;)

[08:50] <jrockway> must... resist...

[08:57] <pasteling> "folli" at 200.161.234.112 pasted "teste" (1 line, 5B) at http://sial.org/pbot/21010

[08:57] <dduncan> jrockway, I should also point out, in my code example, that $err is unlikely to ever contain HTML ... usually it is either an error generated by Perl (terminal output intended), or it is a SQL statement

[08:58] <dduncan> so the HTML mode will word wrap so it displays on the screen at once

[08:58] <jrockway> for production it's a good idea to entity-encode everything your print to the browser, just to be safe

[08:58] <jrockway> unless it's literal HTML, of course

[08:58] <jrockway> then you just have to be careful

[08:59] <dduncan> I do entity-encode all normal output, as well as any errors reported by the main program itself, which has another eval block over everything ... the one I showed you is mainly just for when that main doesn't compile

[09:00] <dduncan> fyi, when I translated from PHP, I replaced all ?>...<?php with print q{...};

[09:00] <dduncan> which is what that literally means in PHP

[09:02] <dduncan> my text editor supports regexps, so it was fairly painless

[09:02] <dduncan> eg, a lot of the conversion was search'n'replace

[09:16] *** drrho joined
[09:18] *** buu joined
[09:23] *** buubot joined
[09:27] *** buubot joined
[09:40] *** andara joined
[09:45] *** buubot joined
[09:52] *** kensanata joined
[09:52] *** buetow joined
[09:52] *** nwc10_ left
[10:02] *** buubot joined
[10:11] *** spo0nman joined
[10:14] *** fglock joined
[10:17] *** eggzeck joined
[10:22] *** ruz joined
[11:05] *** ruoso joined
[11:09] *** dduncan left
[11:14] *** xinming joined
[11:18] *** Odin-LAP joined
[11:54] *** pancake joined
[11:54] *** pancake left
[11:55] *** ofer1 joined
[12:06] <dmq> TimToady are you about?

[12:07] <Steve_p> dmq, it'd be pretty early for California time

[12:08] <kane-xs_> 4 am ;)

[12:09] <dmq> aha

[12:09] <dmq> silly me. :-)

[12:10] <dmq> these crazy californians sleeping in so late. geeze. :-)

[12:11] *** chris2 joined
[12:12] *** Psyche^ joined
[12:16] *** BooK_ joined
[12:28] *** Psyche^ is now known as Patterner

[12:30] *** electrogeek_off is now known as electrogeek

[12:38] *** elmex joined
[12:41] <audreyt> @tell johnSt I try, sometimes very hard, to not be rude to anyone, chromatic included. You may take comfort in knowing that the concerns he previous raised, namely "make test" taking 5hr on his machine, was the main reason of the refos on performance in 6.2.x...

[12:41] <lambdabot> Consider it noted.

[12:41] <svnbot6> r14687 | fglock++ | MP6 - fixed 'method', add tests

[12:42] <fglock> audreyt: ping

[12:42] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[12:45] <audreyt> fglock: pong

[12:47] <fglock> audreyt: I'll start working on the operations parser

[12:47] <fglock> after that, it should be able to compile Token->P5

[12:48] <fglock> which means MP6->P5 :)

[12:48] <audreyt> ok. sorry I was disabled thoroughly yesterday :)

[12:48] <fglock> are you enjoying Rio?

[12:49] <audreyt> yes

[12:49] <audreyt> sugarloaf and the copacablanca beach is nice indeed

[12:50] <audreyt> did quite some design work on paper on MO integration during Rio.pm meeting

[12:52] <audreyt> is your new laptop relatively stable now after reinstall?

[12:52] <fglock> yes, it is fine now - which font do you use for terminal?

[12:53] <dmq> wingdings

[12:53] <fglock> :)

[12:53] <dmq> keeps the management on their toes

[12:55] <audreyt> fglock: Consolas

[12:55] <audreyt> dmq: but it's not monospace...

[12:55] <fglock> audreyt: try out t/04-regex.t - although it still breaks in the end of compilation

[12:56] <dmq> sorry i meant wingding-mono

[12:56] *** Limbic_Region joined
[12:57] <dmq> of course wingding-mono has the disadvantage of only having one char in it.

[12:57] <dmq> :-)

[12:58] <audreyt> rofl :)

[12:58] <audreyt> and it's a space

[12:58] <audreyt> hence the name "monospace"!

[12:58] <audreyt> it's a very bleachy clean font, it appears

[12:58] <audreyt> fglock: k, trying

[12:59] <dmq> Indeed

[12:59] <audreyt> fglock: the most complex part of emitter is probably the Bind node

[12:59] <audreyt> fglock: since it needs to handle array and object unpacking

[12:59] <audreyt> but even that is ~20 lines I think

[13:00] <audreyt> just need a different emit metod for the relevant notes in lvalue position

[13:00] <audreyt> fglock: Undefined subroutine &Pugs::Runtime::Perl6::Scalar::join called at lib/MiniPerl6/Emitter.pm line 379.

[13:00] <audreyt> normal?

[13:00] <fglock> audreyt: how about emit Bind->MP6

[13:01] <fglock> audreyt: may need to reinstall v6

[13:01] <audreyt> you mean simplifier?

[13:01] <audreyt> i.e. desigar

[13:01] <audreyt> desugar

[13:01] <fglock> audreyt: yes

[13:01] <audreyt> [$x,$y] := ...

[13:01] <audreyt> into...

[13:01] <audreyt> $tmp := ...

[13:01] <audreyt> $x := $tmp[0]

[13:01] <audreyt> $y := $tmp[1]

[13:01] <audreyt> ?

[13:02] <audreyt> sure, that is good thinking

[13:02] <fglock> yes - this would simplify backend implementation

[13:02] <audreyt> otoh, some backend may gen more efficient code having acces to full bind node

[13:02] <audreyt> so how about providing a .simplify method

[13:02] <audreyt> to Bind, and backends can choose to run it or not?

[13:05] <fglock> I'm thinking of a generalization

[13:05] <fglock> we have a few DSLs - regex, string interpolation

[13:06] <fglock> these could be "optional" too

[13:06] *** DgBR joined
[13:06] <fglock> so rich backends can be more efficient

[13:12] <audreyt> you mean regex becomes simplified similarily

[13:12] <audreyt> so you call .simplify when you want a recompiled inline

[13:12] <audreyt> and handle it yourself if you want

[13:12] <audreyt> that sounds like sane

[13:13] <fglock> yes - but we need to find out how to implement this without inheritance

[13:13] <fglock> also, how to handle multiple backends

[13:13] <audreyt> each backend is one class of Emitter

[13:14] <audreyt> you don't need inheritance; when you're being blessed there's an attribute of the generalized emitter-helper object

[13:14] <audreyt> i.e. use hasa to emulate isa

[13:14] <audreyt> unfortunately my blood sugar level is very low at this point

[13:15] <audreyt> let me hunt for some glucose and then come back

[13:15] <audreyt> in say 1hr?

[13:15] <fglock> np - better finish the base grammar first, also

[13:15] <fglock> ok - I'll have lunch in 30min, so after lunch

[13:15] <audreyt> ok

[13:16] <fglock> did you get t/04-regex working?

[13:17] <audreyt>   }, 'Var' )

[13:17] <audreyt> ]

[13:17] <audreyt> *** error in Block

[13:17] <audreyt> is the output. it parses "my" as function call

[13:17] <audreyt> not as decl

[13:17] <audreyt> but otherwise seems to be fine

[13:17] <fglock> yes, but it goes very far already :)

[13:18] <audreyt> it does! esp. considering the timeframe :)

[13:19] <fglock> unfortunately we didn't finish in 1 week - let's try in 10 days

[13:20] *** iblechbot joined
[13:20] <fglock> bbiab

[13:27] *** bpphillips joined
[13:29] *** eggzeck joined
[13:30] *** martynoff joined
[13:32] * smash_ good afternoon

[13:37] *** boo_ joined
[13:43] *** GnuVince joined
[13:57] *** bonesss joined
[14:06] *** BooK joined
[14:10] <audreyt> fglock: sorry - the restaurant wasn't open until now

[14:10] <audreyt> fglock: so I'll be back later than that -- also my brain chemistry is not in a properly hacking confirmation at this moment -- I'll try to do something to make myself feeling better about working on Pugs

[14:11] <audreyt> s/confirmation/configuration/

[14:11] <audreyt> so, bbiab

[14:17] <Gothmog_> audreyt: On pugscode.org the link to the svn repository is still the old one...

[14:20] <fglock> audreyt: food++

[14:31] <stevan> fglock: is there any docs about what MP6 looks like?

[14:31] <stevan> and would it make sense to try and write the metamodel in it (similar to what I did in PIL a while ago)

[14:34] <fglock> stevan: that would be great

[14:34] <fglock> stevan: we probably still need native metamodels

[14:34] <fglock> but having an easily deployed one is nice

[14:34] <stevan> fglock: by native metamodels, you mean like MOH and Moose?

[14:35] <stevan> native on the backend

[14:35] <fglock> see /docs/notes/miniperl6-bootstrap.pod

[14:35] <fglock> yes, native in the backend - because it can be faster

[14:36] <stevan> ah

[14:36] <stevan> ok

[14:36] <fglock> the plan for MP6 version 2 is to include a metamodel in the base language

[14:37] <stevan> what does v1 do?

[14:37] <fglock> if we have a metamodel written in MP6, we can use MP6 to write MP6-2

[14:38] <stevan> circularity++ :)

[14:38] <fglock> v1 does closure, tree transformations

[14:39] <fglock> it also has a parser

[14:39] *** beu is now known as beuster

[14:41] <fglock> miniperl6-bootstrap.pod is an overview; http://pugs.blogs.com/photos/visiolization/mp6bootstrap.html is about the inner workings

[14:41] <lambdabot> Title: Visiolization: Mp6bootstrap, http://tinyurl.com/yxb6ux

[14:41] <fglock> v6/v6-MiniPerl6/AST.pod and BOOTSTRAPPING are more detailed internals

[14:42] <stevan> nice

[14:42] <fglock> It already works; I'm currently adding additional nodes in order to complete bootstrapping

[14:43] <kolibrie> stevan: did you notice there might be an early May hackathon in Boston? (discussed yesterday)

[14:43] <stevan> kolibrie: no, I didnt

[14:44] <stevan> fglock: where is v6/

[14:44] <kolibrie> clkao will be in the area, so audreyt thought of coming too, and cj was sort of arranging things

[14:44] <stevan> oh I see it

[14:45] <stevan> kolibrie: cool, I will swing on up then

[14:45] <fglock> it's in pugs/v6/v6-MiniPerl6 - you need a fresh install ov perl5/Pugs-Compiler-Rule and -Perl6

[14:45] <kolibrie> I talked with my wife about it, so I may be able to come

[14:45] <fglock> of

[14:46] <stevan> kolibrie: cool

[14:46] <fglock> it needs Pugs::Compiler::Perl6 because the bootstrap is not finished

[14:47] <fglock> it may compile with pugs too - I haven't tried

[14:49] *** vel joined
[14:52] <fglock> stevan: there is a lot of sample code already written - MP6 is implemented in MP6

[14:58] <stevan> fglock: it looks like you already have objects

[14:58] *** rlb3 joined
[15:00] <fglock> stevan: yes, but it's a very simple system - it does not support inheritance

[15:01] <fglock> it's mostly just sugar

[15:01] <stevan> fglock: structs basically?

[15:02] <fglock> it's blessed structs

[15:02] <stevan> thats perfect,.. that was all PIL has really

[15:02] <fglock> some evil soul may evan want to emit it to C...

[15:02] <svnbot6> r14688 | audreyt++ | * Add pugscode.org into version control.

[15:03] <fglock> even

[15:03] <fglock> MiniPerl6 is PIL-3

[15:03] <stevan> fglock: cool :)

[15:05] <svnbot6> r14689 | fglock++ | MP6 - added infix expressions

[15:08] *** weinig|zZz is now known as weinig|bbl

[15:08] *** cjeris joined
[15:12] * weinig|bbl  

[15:12] <weinig|bbl> sorry

[15:16] <audreyt> Gothmog_: thanks, fixed; please feel free to update the pugscode.org homepage as you see fit

[15:16] <audreyt> by simply committing to docs/feather/pugscode.org

[15:17] <audreyt> bbiab again...

[15:21] <svnbot6> r14690 | fglock++ | MP6 - implemented ternary; substr() works too

[15:23] *** fglock joined
[15:24] <fglock> the main language impl is done - now bugfixing...

[15:27] <fglock> if I copy the .svk/ and pugs/ directories from another computer, would it work?

[15:28] <[particle]> .svn dirs?

[15:28] *** hexmode joined
[15:29] <[particle]> i have moved an svn working copy between dirs on the same machine and it works. dunno about svk, and haven't moved between machines.

[15:30] <PerlJam> fglock: probably.  (I've never done it either, but my gut says it should work)

[15:30] <[particle]> fglock: can you write up detailed steps to get MP6 running? stick them in a README or something? i'd really like to play, but i can't get it to work (same problem as chromatic, in fact)

[15:31] <fglock> [particle]: it will be easier after bootstrap

[15:31] <[particle]> eta?

[15:31] <fglock> right now, you need an up-to date v6.pm

[15:31] <fglock> 2 hours :)

[15:32] <[particle]> -I path/to/v6.pm doesn't seem to work

[15:32] <[particle]> ok, i guess i can wait

[15:32] <fglock> just kidding - but I hope to finish today, with audreyt++ help

[15:32] <[particle]> ok

[15:32] <[particle]> i'll be on a plane in 4 hours

[15:32] <[particle]> er, 5

[15:32] <fglock> can you get v6.pm to run?

[15:33] <[particle]> how?

[15:33] <fglock> cpan v6 - then update from perl5/Pugs-Compiler-Rule and Pugs-Compiler-Perl6 - this would give you an up-to-date installation

[15:33] *** justatheory joined
[15:34] <fglock> which can run MiniPerl6

[15:34] <[particle]> ok, v6 is fine from cpan

[15:34] <[particle]> should i expect failing tests?

[15:35] <fglock> yes

[15:35] <fglock> many, indeed, as we've been changing the implementation in order to just get MP6 working

[15:36] <[particle]> ok, make seems to be taking a while... done.

[15:36] <fglock> just perl Makefile.PL, make, make install

[15:37] <[particle]> PCR done

[15:37] <[particle]> PCP6 done

[15:37] <fglock> then go to v6/v6-MiniPerl6 and try perl -Ilib t/02-exp.t  - this should show you an AST and some emitted perl5 snippets - that's the compiled code

[15:38] <fglock> no TAP tests yet

[15:38] <[particle]> 02-emit.t

[15:39] <[particle]> D:\usr\local\pugs\v6\v6-MiniPerl6>perl -Ilib t\02-emit.t

[15:39] <[particle]> D:\usr\local\pugs\v6\v6-MiniPerl6>

[15:39] <fglock> one sec, adding t/02-exp.t

[15:39] <[particle]> at least now i'm not getting errors

[15:39] <[particle]> oh, i may not be at HEAD

[15:39] <[particle]> upping

[15:41] *** pmichaud_ is now known as pmichaud

[15:41] <svnbot6> r14691 | fglock++ | MP6 - added t/02-exp.t

[15:42] <fglock> t/02-emit.t works here

[15:42] <[particle]> no output

[15:42] <fglock> try: perl -Ilib t/02-emit.tc

[15:43] <[particle]> D:\usr\local\pugs\v6\v6-MiniPerl6>perl -Ilib t\02-emit.tc

[15:43] <[particle]> syntax error at lib/MiniPerl6/Grammar/Regex.pm line 4249, near "};"

[15:43] <[particle]> syntax error at lib/MiniPerl6/Grammar/Regex.pm line 4251, near ","

[15:43] <[particle]> Compilation failed in require at lib/MiniPerl6/Grammar.pm line 20.

[15:43] <[particle]> BEGIN failed--compilation aborted at lib/MiniPerl6/Grammar.pm line 20.

[15:43] <[particle]> Compilation failed in require at t\02-emit.tc line 19.

[15:43] <[particle]> BEGIN failed--compilation aborted at t\02-emit.tc line 19.

[15:43] <fglock> looks like a PCP6 error

[15:46] <fglock> if you upgrade PCP6, you then need to remove the bad .pmc files in lib/ before trying again

[15:47] <[particle]> ok, which lib?

[15:47] <[particle]> mp6?

[15:47] <fglock> yes

[15:48] <fglock> sorry about the teething problems

[15:49] <[particle]> i thought that happened automatically (recreating .pmcs)

[15:49] <fglock> it only recreates when you touch the source file; but in this case it's a compiler error, which it can't detect

[15:49] <[particle]> ok, same error, different line

[15:50] <[particle]> syntax error at lib/MiniPerl6/Grammar/Regex.pm line 4413, near ";"

[15:50] <[particle]> etc

[15:50] <fglock> one sec - let me clean up and try

[15:53] *** Limbic_Region joined
[15:54] <fglock> it still works for me - though now I get an error in "Class/MOP/Instance.pm during global destruction"

[15:54] <fglock> better wait for MP6 bootstrap :(

[15:55] <[particle]> will do, thanks for holding my hand

[15:56] <fglock> np - PCP6 has some pretty complex module interactions stuff

[16:12] *** nothingmuch joined
[16:18] <nothingmuch> sup homies

[16:20] <[particle]> moose, yo

[16:22] <fglock> nothingmuch: hi

[16:23] <svnbot6> r14692 | fglock++ | MP6 - parenthesis, &&, ||

[16:24] *** DHGE joined
[16:30] <fglock> meeting &

[16:36] *** nothingmuch_ joined
[16:39] *** weinig|bbl is now known as weinig

[16:41] *** bpphillips joined
[16:49] *** buetow joined
[16:56] *** araujo joined
[17:09] <GabrielVieira> fglock hey

[17:16] *** weinig is now known as weinig|bbl

[17:47] *** kanru joined
[17:50] <fglock> GabrielVieira: pong

[17:56] <GabrielVieira> :)

[17:56] <fglock> ola

[17:56] *** andara left
[17:57] *** thepler joined
[18:05] <svnbot6> r14693 | fglock++ | MP6 - fixed $obj.meth

[18:07] *** avar joined
[18:12] *** zgh joined
[18:20] *** CUTandRUN joined
[18:39] *** Grrrr joined
[18:50] *** bernhard joined
[18:54] *** justatheory joined
[18:59] *** nothingmuch joined
[19:06] *** thepler joined
[19:06] *** kanru joined
[19:06] *** boo_ joined
[19:06] *** buubot joined
[19:06] *** badalex joined
[19:06] *** lisppaste3 joined
[19:06] *** autark_ joined
[19:06] *** scw joined
[19:06] *** baest joined
[19:06] *** Eidolos joined
[19:06] *** bcorn_ joined
[19:06] *** jrockway joined
[19:06] *** silug joined
[19:06] *** pasteling joined
[19:06] *** Gothmog_ joined
[19:06] *** smash_ joined
[19:09] *** buubot joined
[19:12] *** justatheory joined
[19:13] *** ludan joined
[19:38] *** weinig|bbl is now known as weinig

[19:52] *** larsen_ joined
[20:07] *** vel joined
[20:09] *** vel joined
[20:23] *** justatheory_ joined
[20:30] <svnbot6> r14694 | fglock++ | MP6 - a bit improved expression parser

[20:30] *** fglock left
[21:03] *** cmarcelo joined
[21:15] *** cmarcelo_ joined
[21:15] *** cmarcelo joined
[21:29] <cmarcelo> is here a good place to report typos in Syn? (or learn that they aren't typos after all) or p6-lang is the proper place?

[21:29] *** weinig is now known as weinig|bbl

[21:38] *** iblechbot joined
[21:42] <cmarcelo> i'll put them here in case someone wakes up: S12.pod line 608 missing a "," in arguments for constructor? S12 line 470 begins "C<has $.foo>", shouldn't it be "C<has &.foo>"?

[21:48] *** justatheory joined
[21:52] *** justatheory joined
[21:59] *** DHGE joined
[22:00] *** bpphillips left
[22:30] *** Limbic_Region joined
[22:38] *** cmeyer joined
[22:51] *** dduncan joined
[22:59] *** weinig|bbl is now known as weinig

[23:09] *** justatheory_ joined
[23:11] <nothingmuch> woot bork

[23:17] <jrockway> anyone in there that's going to be at the hackathon tomorrow?

[23:17] <jrockway> s/there/here/

[23:17] <jrockway> :)

[23:20] <thepler> yes

[23:20] *** cmarcelo joined
[23:21] <thepler> looking forward to it

[23:24] <TreyHarris> is something wrong with the password-changing server?  i just got back from my trip, saw the notification from audrey, and went to change my password with the URL i got in her mail, but can't connect

[23:24] <TreyHarris> svn.pugscode.org doesn't seem to be responding on port 9999 at all

[23:24] <dduncan> I could get in to the new server yesterday

[23:25] <dduncan> looking ...

[23:25] <dduncan> I can still connect to 9999 now

[23:25] <TreyHarris> how odd

[23:26] <TreyHarris> it's not a browser issue, neither safari nor firefox nor opera work

[23:26] <dduncan> so are you saying http://svn.pugscode.org:9999/ doesn't show anything for you?

[23:26] <lambdabot> Title: Welcome to CommitBit for PugsCode

[23:26] <dduncan> the bot can get in

[23:27] <dduncan> Trey, perhaps you are behind a firewall blocking access to external ports outside a preapproved list?

[23:27] <TreyHarris> dduncan: ahhh.  yes, that's exactly right.  thanks.

[23:27] <TreyHarris> guess i'll wait till i can connect from somewhere else

[23:27] <dduncan> unless you can contact whom admins the firewall to give you an exception

[23:28] <dduncan> er, give that server an exception

[23:28] <TreyHarris> dduncan: getting a port access request approved here is usually a multi-week deal :)

[23:28] <TreyHarris> might as well just wait till i get home

[23:28] *** cjeris left
[23:30] <TreyHarris> ahh, works fine on links, so i just ssh'd elsewhere :)

[23:33] <GeJ> win 2

[23:33] <GeJ> damn thos morning fingers

[23:33] <GeJ> morning all

[23:34] <Patterner> Moin moin

[23:36] <GeJ> Servus Servus

[23:39] *** mako132 joined
[23:42] <ingy> hola

[23:42] * jrockway hugs Alt-2 :)

[23:46] <nothingmuch> hola ingy-san

[23:49] <ingy> nothingmuch!

[23:49] <ingy> where are you?

[23:51] *** eggzeck joined
[23:55] *** anatolyv joined
