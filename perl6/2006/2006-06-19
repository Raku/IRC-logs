[00:14] *** tup joined
[00:16] <TimToady> putter: nested atomically's maybe?

[00:16] <TimToady> putter: re method vs submethod

[00:16] <TimToady> you may not declare a method and submethod of the same name in a scope.

[00:19] <TimToady> leaving aside the subcall visibility, a submethod behaves just like a method with a first statement that says:

[00:20] <TimToady> next METHOD unless self.type === $?CLASS;  or some such...

[00:31] *** weinig|dinner is now known as weinig

[00:53] *** cmarcelo left
[00:55] *** hikozaemon joined
[01:05] <meppl> gute nacht

[01:17] *** glasser joined
[01:18] *** glasser left
[01:33] *** mako132_ joined
[01:36] *** b00t joined
[01:41] *** frederico joined
[01:42] *** dduncan joined
[01:44] <putter> TimToady: thanks.

[01:46] <putter> re "may not... in a scope", it might be worth clarifying S12's "You may mix methods and submethods of the same name within the class hierarchy, but only the methods are visible to derived classes via inheritance."

[01:47] <putter> Hmm.  Does a submethod affect inheritance in any way?  Ie, does it prevent a parent's method from being inherited by a child (parent's grandchild)?

[01:49] <putter> leaving aside signature problems, the next METHOD analogy above suggests not.

[01:51] <putter> Can some clauses of a multi method be multi submethods?

[01:56] <putter> I assume the bodies of a class decl and any class "is extended" decls are the same "scope" re submethods.  or not?  lexical scope or..., hmm, "class" scope?

[01:59] <putter> If a role is included which defines a method, what is the effect of the class defining a submethod?

[02:04] *** justatheory joined
[02:07] <stevan> putter!!!!!!!!!!

[02:07] <stevan> putter: are you coming to the post YAPC::NA Boston hackathon?

[02:08] *** justatheory joined
[02:08] *** cmarcelo joined
[02:13] <putter> hi stevan! :)

[02:14] * putter goes to look for YAPC::NA Bos hackathon details...

[02:14] <stevan> I dont know them officially

[02:14] <stevan> ping obra about it

[02:14] <stevan> July 2-6 I think

[02:16] <putter> grumble grumble kwiki grumble.  google links to http://www.yapcchicago.org/wiki/index.cgi?action=revisions&page_name=HackAThon&revision_id=38

[02:16] <lambdabot> Title: "HackAThon - Kwiki Revisions - Kwiki"

[02:17] <putter> So... is that the most recent version?  url doesnt work without revision_id field.  doesnt work with =HEAD.  doesnt work with =<blank>.  =39 works. =139 doesnt.  Blech.

[02:17] *** weinig is now known as weinig|zzz

[02:18] <putter> Ah, http://www.yapcchicago.org/wiki/index.cgi?HackAThon

[02:18] <lambdabot> Title: "HackAThon - Kwiki"

[02:18] <stevan> July 1 (and then continue in Boston until July 6)

[02:18] <stevan> :)

[02:18] <stevan> ping obra or audreyt ,.. he will give you details

[02:19] <stevan> s/he/they/

[02:24] <putter> ah.  removed some front page pugs.kwiki.org spam.  but some subpages are taking forever to obtain, suggesting they've been spamified.

[02:25] <putter> PugsCommunity, ...

[02:27] <putter> ok, just PugsCommunity of the links from the front page.

[02:27] <putter> ah, got it.  solid spam.  trying to fix...

[02:28] <putter> re ping, ok.  thanks.  modulo the jobsearch I should start rsn, I should be around, and that would be neat.

[02:29] <putter> Any interest in talking to Boston.pm?  Had 20ish(?) people for this months inside-out object talk.

[02:31] <putter> PugsCommunity fixed.

[02:32] <putter> How goes moose?

[02:37] <putter> audreyt, obra, stevean, etal: any interest in giving a talk to the boston perl mongers group?  http://boston.pm.org/kwiki/  July meeting isnt scheduled yet.  Normally second tuesday.  But have switched in the past when needed.

[02:37] <lambdabot> Title: "- Boston.pm"

[02:38] <putter> s/stevean/stevan/  sorry.

[02:42] *** justatheory joined
[02:44] <nothingmuch> putter: i can regive any previous talk, or a new lightning talk

[02:44] <nothingmuch> but too busy to do something "real"

[02:45] <putter> real enough :)

[02:45] <putter> could load spread and have a couple of people do lightning talks

[02:45] <nothingmuch> okies

[02:45] <nothingmuch> lightning talk topics of possible interest:

[02:45] <nothingmuch> Test::TAP::Harness

[02:46] <nothingmuch> Roles in the real world

[02:46] <nothingmuch> Class::Workflow

[02:46] <nothingmuch> Monju

[02:46] <nothingmuch> (two interesting projects of the past while)

[02:46] <nothingmuch> s/Harness/HTMLMatrix/;

[02:48] <putter> neat

[02:48] <nothingmuch> s/::/-/ and you can find darcs repos for both under nothingmuch.woobling.org

[02:49] <putter> maybe I'll send the Boston.pm scheduler a note that folks will be around the first week of July for a hackathon, and there's the potential for someone to give a PM talk.  plausible?

[02:49] <nothingmuch> okies

[02:49] <nothingmuch> if you like off topic stuff too, my most well received talk was the darcs one

[02:49] <nothingmuch> i'd like to spread that love

[02:49] <putter> :)

[03:07] *** Khisanth joined
[03:08] *** mako132_ joined
[03:14] <putter> audreyt, etal: is there a description of the argument-parameter distance metric for multiple dispatch somewhere?

[03:15] <putter> subtyped parameters are said to be epsilon shorter than unconstrained parameters.  is there any gradation among subtypes, or just one epsilon?

[03:17] <putter> how do inheritance, role inclusion, subseting, etc, affect distance?

[03:18] <putter> junctions?

[03:21] <putter> container types with a specified element type, in the face of large or infinite containers?

[03:21] <putter> (that last one isn't distance, so much as... how?)

[03:25] <putter> tnx.  night &

[03:26] *** lambdabot joined
[03:30] *** topot joined
[03:44] *** wrath joined
[03:52] *** _SamB_ joined
[03:55] *** b00t joined
[03:57] *** tup joined
[04:13] *** _SamB_ is now known as SamB

[04:16] *** mako132_ joined
[04:28] *** justatheory joined
[04:39] *** mtve joined
[04:39] *** Southen joined
[04:39] *** shachaf joined
[04:47] *** wrath left
[04:52] <cmarcelo> audreyt: hi. have some time to hsjudy stuff?

[04:52] <audreyt> just woke up but sure

[04:55] <cmarcelo> do you mind running a test (actually two) in your computer? it's (make testmap; ./testmap), twice, but in the second time, uncomment "show-last-take" line in tests/TestMap.hs

[04:55] <audreyt> k

[04:56] <cmarcelo> (if you don't have || want to install spinclds Judy, just ./configure;make in Judy-1.0.3 and change HsJudy/Makefile to static link)

[04:58] <audreyt> all ok on testmap

[04:58] <cmarcelo> on both ?

[04:59] <audreyt> segfault on last

[04:59] <audreyt> works if 100000 is chg to 10000

[04:59] <cmarcelo> yep.. here too

[05:00] <audreyt> tried gdb yet?

[05:00] <cmarcelo> oh, and try removing "Dummy" stuff from Judy/Map.hs (was a hack to make Refeable work here), see if you get "illegal instruction"..

[05:03] <audreyt>     No instance for (Judy.Map.Dummy [Char])

[05:03] <audreyt>       arising from use of `lookup' at tests/TestMap.hs:107:9-19

[05:03] <audreyt>     Possible fix:

[05:03] <audreyt>       add an instance declaration for (Judy.Map.Dummy [Char])

[05:03] <cmarcelo> i'm recompiling GHC 6.5 now.. gdb doesnt helped much (too much ???, probably i'm missing some compiler flag).

[05:03] <cmarcelo> audreyt: remove Dummy from Refeable context

[05:04] <audreyt> I got it too.

[05:04] <audreyt> how curious. ask the ghc list?

[05:05] <cmarcelo> audreyt: I tried to create a simpler version of the problem to send (not depending on all judy stuff) but couldn't =P..

[05:06] <audreyt> nah, it's okay to send it as a whole :)

[05:06] <cmarcelo> i'll see first if it works with latest GHC 6.5 from darcs..

[05:11] <cmarcelo> besides that illegal instruction, type classing (for Collection stuff) worked fine. (sorry droping so much data on you =o) ) And, you told me about freeing StablePtrs in finalizer, but, this isn't safe as StablePtrs sometimes are the same for "different" objects.. picture two Maps, both with 1 pointing to a Big Fat Datatype called x. It is possible that GHC give same StablePtr for two insert calls (for the two maps), if we free one of

[05:11] <cmarcelo>  them and try to use the other => bad bad.. =P any ideas on this?

[05:12] *** dduncan joined
[05:14] <nothingmuch> audreyt: hola

[05:14] <nothingmuch> how was the flight?

[05:17] <dduncan> fyi, I have uploaded a smoke of r10738 ... showing 17 errors

[05:17] <dduncan> darwin / normal runcore

[05:17] <audreyt> k

[05:17] <audreyt> nothingmuch: exhausting

[05:19] <audreyt> cmarcelo: uh, we can certainly use the maps themselves as keys

[05:19] <audreyt> and only free the ptr when all uses of it is gone

[05:19] <audreyt> I think

[05:19] <audreyt> dduncan: will check. thanks!

[05:19] <audreyt> but it's sleepy-brain talking

[05:20] <dduncan> specifically, the errors seem to be with 2 files:

[05:20] <dduncan> 1. t/operators/assign.t has a few failed tests in the middle

[05:20] <audreyt> that's intentional 8

[05:20] <dduncan> 2. t/pugsrun/05-unknown-option.t seems to have died after test 3

[05:21] <dduncan> that's all I saw in a scan

[05:22] <dduncan> if that is unexpected, I will now try to run the second by itself

[05:23] <TimToady> ext/Perl6-Grammar/t/basic.t also seems to be failing for me.  Haven't looked at it though...

[05:23] <dduncan> that one doesn't fail for me

[05:24] <audreyt> dduncan: please run 05 by itself

[05:24] <audreyt> TimToady: you'd need a new parrot for that to pass

[05:24] <audreyt> new as in something in the last 24 hours

[05:24] <dduncan> in progress ...

[05:26] <TimToady> it's pretty darn new...

[05:26] <TimToady> getting pugs: src/string.c:932: string_substr: Assertion `src->encoding && src->charset && !(((src)->obj.flags) & b_PObj_on_free_list_FLAG)' failed.

[05:26] <dduncan> I am seeing not-okays ... will nopaste output

[05:27] <TimToady> in fact, it's the most recent, 12969.

[05:27] <audreyt> oh. embparrot.

[05:27] <audreyt> I'll retest with embparrot.

[05:27] <audreyt> TimToady: only basic.t triggers that?

[05:28] <audreyt> none of t/rules/*?

[05:28] <TimToady> yes, the only other is the 8 assign.t tests

[05:28] *** cmarcelo_ joined
[05:28] <pasteling> "dduncan" at 24.69.53.198 pasted "detailed output of t/pugsrun/05-unknown-option.t on r10738" (89 lines, 3.8K) at http://sial.org/pbot/17843

[05:29] <TimToady> http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.12-r10738-linux-normal--1150683199-2738--11550-11517-33-1591-1161-0--82fde14b343f46790ec837e0ed1586a0.html is my smoke

[05:30] <audreyt> k

[05:30] <cmarcelo_> audreyt: i wasn't clear enough. imagine m1 and m2, and object x.. when insert 1 x m1 and insert 1 x m2 happens, it's possible that GHC give the same StablePtr for insert function in both cases. then, after that, if it GC m1 but we are still using m2, the StablePtr for x isnt valid anymore...

[05:30] *** cmarcelo_ is now known as cmarcelo

[05:30] <dduncan> seems to be no-such-file stuff ... one might think there be an inter-test dependency, though I recall that some previous commit was meant to address that by running them in order, though ...

[05:31] <audreyt> cmarcelo: yes I'm saying do a refcount-like scheme

[05:31] <audreyt> to register that m1 and m2 both uses the SP

[05:31] <audreyt> and only when both are gone should we remove the SP

[05:31] <audreyt> Mem.Weak may have something that doe this

[05:31] <audreyt> not sure

[05:33] <audreyt> dduncan: it seems your manual run worked actually

[05:33] <dduncan> looking at the log when the smoke was running, I don't see any order dependency problems ... all the other pugsrun were run in order first that needed to be

[05:33] <audreyt> it ran 12 with all todos

[05:33] <dduncan> I thought todos registered as 'ok'

[05:34] <dduncan> or maybe its just skips that do

[05:34] <audreyt> yeah

[05:34] <TimToady> oddly, I don't get the assertion failure when I run basic.t from the top-level pugs directory.  I just get that when I make test in the Perl6-

[05:34] <dduncan> maybe this is reminiscent of my last reported problem, where if I rerun it the problem may go away

[05:35] <TimToady> Grammar dir

[05:35] <dduncan> but like the last time, such a rerun will have to wait until tomorrow

[05:35] <TimToady> it does fail all the tests after 6 though when run at the top.

[05:36] <cmarcelo> audreyt:  i see.. will check that. also, in Pugs code [re including Judy.Map in IHash], some places that use IHash have in its context only MonadSTM m, but Judy.Map operations are IO dependent. are these functions used outside IO context indeed?

[05:36] <TimToady> mine actually is a rerun--I noticed the basic.t problem earlier today.

[05:37] <TimToady> so what I've got is after a complete rebuild of both parrot and pugs

[05:37] <TimToady> I can fire off just a resmoke though and see if anything changes.

[05:38] <TimToady> need to head off to bed anyway--still fighting off some kind of something from last week.

[05:39] <TimToady> apparently a lot of it going around here--you feel like you're coming down with mono for about a week, and then you get a sore throat and mild cough for a week, then you get better.

[05:39] <TimToady> still working on the last part of that...

[05:46] <TimToady> actually, I can see I'm gonna get the same smoke result, since the same assertion has already come out on my screen log.

[05:48] <TimToady> whole thing seems to be running about 30% slower too.

[05:49] <audreyt> cmarcelo: we need to talk about that too, sometime later :)

[05:49] <audreyt> cmarcelo: for now, use unsafeIOtoSTM.

[05:50] <audreyt> TimToady: sleep tight

[05:50] <TimToady> well, my computer just turned off the lights in my living room, so maybe it's trying to tell me something...

[05:50] <TimToady> night all &

[05:50] <audreyt> cmarcelo: in STM, operations need to know how to undo themselves

[05:50] <audreyt> which Judy actually is probably capable of doing

[05:50] <audreyt> but for now just use unsafeIOtoSTM

[05:50] <cmarcelo> fine.

[05:50] <audreyt> which means it may fail within atomically{} block

[05:51] <audreyt> but we can manually collect just them later

[05:53] <cmarcelo> ok =), i'll try to solve the too much memory segfault... actually, changing the values in TestMap.hs here gave me something like "Internal Error: GC'ed main thread".

[06:05] <audreyt> can someone help me on unTODOing?

[06:07] <audreyt> http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.12-r10738-darwin-normal--1150697008-798--11550-11540-10-1589-1193-18--9f158e3531a7af1a305cc2cc176d7797.html

[06:07] <svnbot6> r10739 | audreyt++ | * Pugs.Eval: the infereed SIMPLE context does not affect runtime

[06:07] <svnbot6> r10739 | audreyt++ |   anymore; it's now exclusively a parsetime thing.  So this:

[06:07] <svnbot6> r10739 | audreyt++ |     sub f { 1 }

[06:07] <svnbot6> r10739 | audreyt++ |     my @a = ({1=>2}, {3=>4})

[06:07] <audreyt> thanks in advance :)

[06:07] <svnbot6> r10739 | audreyt++ |     @a[f()]{1}

[06:07] <svnbot6> r10739 | audreyt++ |   now works as you'd expect instead of failing with hash-derefing

[06:07] <svnbot6> r10739 | audreyt++ |   a slice.

[06:07] <cmarcelo> unTODO = remove todo mark from todo tests that work OR make them work and then remove? =P

[06:07] <audreyt> unTODO = look at the url above

[06:07] <audreyt> look for yellow boxes

[06:08] <audreyt> remove the :todo from tests in the corresponding places

[06:08] <audreyt> and commit

[06:08] <audreyt> that's all :)

[06:08] <audreyt> lunch, bbiab

[06:08] * spinclad can testify that it's easy

[06:09] <spinclad> i'll help in a bit if someone else hasn't grabbed it

[06:09] <cmarcelo> well. i'll do it..

[06:11] <spinclad> my system's too sluggish for its browser atm

[06:13] <audreyt> cmarcelo++

[06:15] <spinclad> cmarcelo: when i get a chance here i'll look at your testmap case.  some of the HSIter code could step outside its memory footprints if i still have bugs in there.

[06:15] *** christopher joined
[06:16] <cmarcelo> spinclad: ok. tks. which GHC are you running? right now HsJudy depends on GHC 6.5... =|

[06:16] <spinclad> ah.  6.4.1 ( = debian latest)

[06:17] <spinclad> i could try building 6.5 and get back to you tomorrow or so...

[06:17] *** mjk joined
[06:18] <cmarcelo> spinclad++ # =)

[06:25] <svnbot6> r10740 | cmarcelo++ | * just unTodo'ing

[06:25] <spinclad> oh, don't ++ me yet, building it could take me days here

[06:26] <cmarcelo> spinclad: there are prebuilt snapshots i think..

[06:26] <spinclad> will look...

[06:26] <cmarcelo> http://www.haskell.org/ghc/dist/current/dist/

[06:26] <lambdabot> Title: "Index of /ghc/dist/current/dist"

[06:45] *** visq joined
[06:51] *** kane_ joined
[06:54] *** Ymmv joined
[06:54] <svnbot6> r10741 | audreyt++ | * array_ref.t: reword obsolete test

[07:14] *** iblechbot joined
[07:15] *** Noodle joined
[07:17] <Noodle> anyone here good with natural language parsing?

[07:18] <spinclad> algorithmic or particular?

[07:19] <Noodle> hmm.. not sure exactly you know more than I about them at this point, remember the old dos game ZORK? something like that

[07:20] *** dduncan left
[07:20] <spinclad> fondly i do

[07:20] <spinclad> never looked at its method tho

[07:21] <kane_> hmm, there's a module on cpan that does something like that

[07:21] <kane_> i read about it on use.perl

[07:21] <Noodle> im accually doing my thing in C++ however I was told that you guys like to talk parsers :)

[07:21] <kane_> i think a blog post by ovid

[07:22] <Noodle> so I figured I would hop on over and pick your brains about how the simplest way todo it would be. im not talking long commands at most maybe 4 -5 words

[07:23] <visq> Noodle: maybe look at http://lambda-the-ultimate.org/node/1554

[07:23] <lambdabot> Title: "Inform 7: A relational DSL for interactive fiction with natural language syntax  ..."

[07:23] <Noodle> I know about inform

[07:23] <spinclad> i imagine you could go a long way parsing zork-style english with perl6 regexes

[07:24] <spinclad> doesn't really help you directly in c++ of course

[07:24] <Noodle> true,

[07:25] <Noodle> and yes regexes would help im sure, right now I figure I have the strings tokenized delimited by spaces. so that should make things a bit easier

[07:27] <Noodle> but as it stands now i figure I have to check the first token for either the word go,move,put,get,take, and any variation of a direction. then if its go, or move, I have to check the second token for a direction, if its get I have to check the 2nd token for an item name, if its put I have to check the 2nd token for item and the 3rd will be probably an ignored word (on, with, in, etc) the 4th token will be the location to put the item.

[07:27] <Noodle> as you can clearly see I have my work cut out for me.

[07:28] <Noodle> and thats not counting all the others, read, open, etc

[07:32] <spinclad> you could put some of the machinery in the lexicon: a token (word) has a bunch of syntactic/semantic features, like <verb>, <direction>, <takable>; a <verb> has a parser that says what objects it takes, like <direction> or <takable>

[07:33] <Noodle> good idea..

[07:34] <spinclad> a fancier english parser would build up phrase structure for syntactic/semantic categories, but you may be able to get by with verbs and single-word phrases: if you never have two bottles, you don't have to make sense of <the green bottle>

[07:35] <spinclad> but it would be nice to be able to make sense of <pick up the green bottle and drink it>

[07:35] <Noodle> so I would need verbs, adjectives, and nouns...

[07:35] <spinclad> <pick up the bottle> <which one?> <the green one>

[07:36] <spinclad> keeping track of what <it> could refer to...

[07:36] <Noodle> this "little" exercise project of mine has turned into much much more....

[07:36] <spinclad> this could get you a fair way

[07:36] <spinclad> yes, parsing english is as big as you want it

[07:38] <Noodle> normally I would say that if I made something like this in C++ that parsed the english language in a natural way I would be a hero to all the text adventure programmers, however Interactive fiction in C++ is well non existant. so its almost not worth it.

[07:39] *** Aankhen`` joined
[07:47] *** Noodle left
[08:10] *** bjoern_ joined
[08:18] <audreyt> weird, embparrot worksforme without the assertion error larry encountered

[08:19] <audreyt> resmoking just to be sure

[08:21] *** `` joined
[08:31] *** lisppaste3 joined
[08:39] <audreyt> still can't duplicate it. oh well...

[08:40] *** szbalint joined
[08:40] <audreyt> TimToady: I'll check in a revert-fix to the finalizing sequence; see if it works after you wake up

[08:42] <svnbot6> r10742 | audreyt++ | * Pugs.Embed.Parrot: Revert the finalization sequence to simply

[08:42] <svnbot6> r10742 | audreyt++ |   call parrot_exit, which may or may not fix the segfault

[08:42] <svnbot6> r10742 | audreyt++ |   TimToady reported...

[08:45] *** marmic joined
[09:03] *** xerox joined
[09:04] *** xerox joined
[10:07] <svnbot6> r10743 | audreyt++ | * assign.t: Correct TimToady++'s tests:

[10:07] <svnbot6> r10743 | audreyt++ |   In this:

[10:07] <svnbot6> r10743 | audreyt++ |     @a[0==1] = 1,2,3

[10:07] <svnbot6> r10743 | audreyt++ |   @a[0] ends up as holding a single (1,2,3) object, instead of

[10:07] <svnbot6> r10743 | audreyt++ |   just getting 1, according to the current S03 wording.

[10:07] <svnbot6> r10743 | audreyt++ |   We're down to two fail case now, both involving ($a)=L.

[10:10] *** froh-doh joined
[10:41] *** kane-xs joined
[10:45] <Aankhen``> What are haddock, happy and alex used for?

[10:45] <svnbot6> r10744 | benedikth++ | * util/catalog_tests.pl: use YAML::Syck if available, make apo/exe/syn optional, fix GetOptions

[10:52] <Aankhen``> Blargh... Test::TAP::Model seems to use Method::Alias, but doesn't list it as a prerequisite.

[11:15] *** chris2 joined
[11:38] <pasteling> "Aankhen``" at 203.101.7.186 pasted "Error building Pugs on Win32" (12 lines, 517B) at http://sial.org/pbot/17848

[11:38] <Aankhen``> I'm not sure whether this an error with my config or something to do with Pugs...

[11:38] <Aankhen``> (In short, it's unable to find inc::Module::Install::Admin.)

[11:44] <Aankhen``> Gah.  All the distros using Module::Install are using an outdated version of it.

[11:44] <Aankhen``> (Which means it's nigh unusable on Windows.)

[11:47] *** weinig|zzz is now known as weinig|work

[11:51] *** lollan joined
[11:51] *** frederico joined
[11:56] *** jsiracusa joined
[12:08] *** christopher joined
[12:09] *** shachaf joined
[12:11] <audreyt> oh uhm. hm.

[12:11] <audreyt> upgrading M::I fixes it?

[12:11] <audreyt> weird, it should've used the version bundled with pugs.

[12:11] *** iblechbot joined
[12:11] <audreyt> what's your M::I version?

[12:12] *** tifo joined
[12:36] *** iblechbot_ joined
[12:41] <gaal> rhetorical gripe: all-caps suggests SIMPLE isn't.

[12:43] <gaal> Aankhen``: (hi!!) haddock produces nice docs for .hs

[12:43] <gaal> make haddock

[12:44] <gaal> do we recommend happy and alex? I don't know why if we do. (they're a parser and "a lex"er)

[12:59] <lumi> By rhetorical gripe, do you mean you gripe rhetorically, or that it is a gripe of rhetorics?

[13:00] <christopher> Can I use Perl 6 rules today?  My pugs segfaults on them, and the smokes I've scanned skip the rule tests.  Even the CPAN module Perl6::Rules has its tests die on me.

[13:01] <wolverian> christopher, you can use them in perl5 with http://search.cpan.org/author/FGLOCK/Pugs-Compiler-Rule-0.05/lib/Pugs/Compiler/Rule.pm

[13:01] <lambdabot> Title: "Pugs::Compiler::Rule - Compiler for Perl 6 Rules - search.cpan.org"

[13:01] <gaal> lumi: 1. it's a gripe on the rhetorical aspect of the name

[13:01] <gaal> 2. :-P

[13:01] <christopher> wolverian: Thanks!

[13:16] <svnbot6> r10745 | audreyt++ | * Update PIL Compiler to deal with this:

[13:16] <svnbot6> r10745 | audreyt++ |     ($x) = 1,2,3

[13:16] <svnbot6> r10745 | audreyt++ |   to parse as list.  Currently use a horrible (Sym SMy "") form

[13:16] <svnbot6> r10745 | audreyt++ |   for the lack of a better Noop annotation node.

[13:18] <audreyt> going to catch plane now. more unTODO is prolly needed

[13:18] <audreyt> will continue from airport

[13:21] *** sahadev joined
[13:21] <audreyt> please unTODO the 4 yellow boxes in

[13:21] <audreyt> http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.12-r10738-darwin-normal--1150723262-747--11550-11534-16-1571-1193-4--ab16a191337bee06398d1022b3a2f832.html

[13:21] <audreyt> and maybe triage the other red ones

[13:21] <audreyt> I'll be back in ~1hr

[13:21] <audreyt> &

[13:24] *** Lorn joined
[13:25] *** shachaf joined
[13:29] <wolverian> (untodoed, unfortunately I don't understand the red tests well enough to triage)

[13:29] <svnbot6> r10746 | wolverian++ | untodo some tests

[13:33] *** Limbic_Region joined
[13:38] *** Lorn left
[13:48] *** alch` joined
[13:54] *** shachaf_ joined
[13:58] *** rzoz joined
[14:02] *** shachaf_ is now known as Shachaf

[14:02] *** shachaf_ joined
[14:02] *** Shachaf is now known as shachaf

[14:05] *** hexmode joined
[14:16] *** vel joined
[14:35] *** buetow joined
[14:54] <audreyt> TimToady: this is a super special case:

[14:54] <svnbot6> r10747 | audreyt++ | * Don't use the klugy Sym"" form; instead use the new Annotation

[14:54] <svnbot6> r10747 | audreyt++ |   type "Parens".

[14:54] <audreyt> ($x) = 1,2,3

[14:54] <audreyt> according to naive S03, it will parse as list

[14:54] <audreyt> then put (1,2,3) into $x

[14:54] <audreyt> but your test has it take 1 only

[14:54] <audreyt> asif the user has written

[14:54] <audreyt> ($x,) = 1,2,3

[14:54] <audreyt> I assume it's correct

[14:55] *** rlb3 joined
[14:58] <TimToady> Yes, it's super special.

[14:59] <audreyt> what about

[14:59] <audreyt> (lv()) = 1,2,3

[14:59] <audreyt> wwieh sub lv is rw { $x }

[14:59] <audreyt> s/wwieh/with/

[14:59] <audreyt> same thing?

[14:59] <audreyt> (easier if same thing)

[14:59] <TimToady> still get the assertion error with the reversion, by the way.

[14:59] <audreyt> i.e. () on lhs without , has an implicit ,

[14:59] <audreyt> ok.

[15:00] <TimToady> yes, same thing.  "Useless use of parens" around lvalue is always list.

[15:00] <audreyt> ok, implemented. need to go boarding now

[15:00] <svnbot6> r10748 | audreyt++ | * assign.t: update according to latest discussion on #perl6

[15:00] <TimToady> peddle hard.

[15:01] <audreyt> :D

[15:01] <audreyt> &

[15:03] <svnbot6> r10749 | audreyt++ | * according to TimToady++'s

[15:03] <svnbot6> r10749 | audreyt++ |   super-special rule,

[15:03] <svnbot6> r10749 | audreyt++ |   (...) = 1,2,3

[15:03] <svnbot6> r10749 | audreyt++ |   where ... has no , in it

[15:03] <svnbot6> r10749 | audreyt++ |   will have an implicit (...,) trailing comma

[15:03] <svnbot6> r10749 | audreyt++ |   added to it.

[15:06] <nnunley> Ugh. yadayada (...) makes such commit messages ambugous (sic)

[15:09] <Aankhen``> gaal: Hi back at you. ^_^

[15:09] <svnbot6> r10750 | audreyt++ | * Finalize parrot again, now we're sure it's not the change

[15:09] <svnbot6> r10750 | audreyt++ |   that broken TimToady++'s build.  Now I wonder what is...

[15:09] <Aankhen``> audreyt: My M::I version is 0.63.

[15:09] <Aankhen``> audreyt: It fixes a known bug on case-insensitive filesystems, apparently.

[15:09] <Aankhen``> gaal: I'm not sure Pugs recommends happy or alex; they're mentioned in Makefile.PL and made use of if present, apparently.

[15:10] <Aankhen``> I like to say "apparently" a lot, apparently.

[15:10] <audreyt> they are not used and not used

[15:10] <audreyt> it's just standard Cabal probing

[15:10] <Aankhen``> audreyt: Ah, I see.

[15:10] <audreyt> Aankhen``: can you trace a bit to see why the system M::I gets use

[15:10] <audreyt> instead of our bundled inc/Module/Install.pm

[15:10] <audreyt> ?

[15:10] <Aankhen``> audreyt: The system M::I isn't used, the one bundled with the distros is used.

[15:10] <Aankhen``> That's the problem.

[15:10] <audreyt> oh.

[15:10] <Aankhen``> The one bundled is an older version.

[15:11] <Aankhen``> The one in the pugs/inc seems to be 0.34 or something like that.

[15:11] <audreyt> 0.36

[15:11] <Aankhen``> Yeh.

[15:11] <audreyt> but but, the case-insensitive @INC fix has been merged in

[15:11] <Aankhen``> Was this recent?

[15:12] <audreyt> ...and not committed

[15:12] <Aankhen``> Ah.

[15:12] <audreyt> sorry about this local branch stuff.

[15:12] <Aankhen``> How dare you? :-P

[15:12] <audreyt> fixed. thanks!

[15:12] <Aankhen``> No, thank *you*. ;-)

[15:13] <audreyt> I... blame Gisle for uncovering my bug

[15:13] <audreyt> (ActiveState::Config was new and triggering this)

[15:13] <svnbot6> r10751 | audreyt++ | * Don't break ActivePerl 5.8.8 on case-insensitive filesystems.

[15:13] <svnbot6> r10751 | audreyt++ |   Aankhen++ for catching this age-old bug in inc/Module/Install.pm.

[15:13] <Aankhen``> Let's burn Gisele at the stake!

[15:13] <audreyt> otoh, it is my bug ,and Gisle provided the said patch, so maybe not.

[15:13] <Aankhen``> Hrm.

[15:13] <Aankhen``> We can't burn you at the stake, we need you for Pugs.

[15:13] <audreyt> (plus he's been kind to me in Oslo.)

[15:14] <Aankhen``> How about we burn evalbot_10709 instead?

[15:15] <Aankhen``> BTW, just for reference, I wasn't the one who caught the bug; it's in the ActivePerl bug tracker.

[15:15] <Aankhen``> The suggested workaround is to delete the inc/ directory, but that doesn't work too well in this case.

[15:16] <audreyt> ?eval 1+1

[15:17] *** evalbot_10709 is now known as evalbot_10746

[15:17] <evalbot_10746> (no output)

[15:17] <audreyt> I didn't know that 1+1 can diverge

[15:18] * audreyt investigates

[15:18] * Limbic_Region thought audreyt was supposed to be boarding?

[15:19] <audreyt> yes the queue is long

[15:19] <audreyt> so I'm slowly moving forward

[15:19] * theorbtwo hopes audreyt's laptop is durable.

[15:22] <svnbot6> r10752 | audreyt++ | * remove a case of diverge in Pugs.AST.

[15:23] <audreyt> yay, assign.t all passes.

[15:25] <audreyt> it's my turn now. see ya!

[15:25] <audreyt> *wave* &

[15:26] <spinclad> safe flight

[15:26] <theorbtwo> Have fun, whereever it is you're going.

[15:27] *** justatheory joined
[15:28] *** shachaf joined
[15:31] * spinclad ponders the fashion prospects for the style known as The Wearable Borg

[15:33] *** lisppaste3 joined
[15:35] * spinclad ponders the consequences for a borg of having to switch off all external devices during takeoff and landing

[15:37] <lumi> Maybe they have a low emissions mode

[15:37] <spinclad> separation from the hive mind and the greater sensorium -- could lead to serious cravings

[15:37] <lumi> They switch to tightbeam

[15:38] <spinclad> aha.  i know i feel some of that when my isp is flaking out for a day.  56k is just too narrow a beam for me these days.

[15:39] <spinclad> but somehow i think what i feel really can't compare

[15:39] <spinclad> to the real experience

[15:42] <lumi> 56k.. *shudder*

[15:42] <lumi> Better nothing than that

[15:42] <lumi> Less exasperating

[15:43] <spinclad> overnight downloads of the latest updates

[15:43] <spinclad> night after night

[15:44] <spinclad>  /me is *very* glad to be quit of that

[15:45] <spinclad> now /me can spend /my overnights on more important things

[15:46] <spinclad>  like the funnies

[15:46] <spinclad>   and pugs

[15:47] *** Qiang joined
[16:08] *** shachaf joined
[16:30] *** ludan joined
[16:32] *** shachaf joined
[16:34] *** amnesiac joined
[16:35] *** neoesque joined
[16:45] <TimToady> audreyt: for your BLing pleasure, one hint may be that I get the following two warnings:

[16:45] <TimToady> Compiling Pugs.Embed.Parrot ( src/Pugs/Embed/Parrot.hs, dist/build/src/Pugs/Embed/Parrot.o )

[16:45] <TimToady> Warning: retaining unknown function `Pugs_callSubSSS' in output from C compiler

[16:45] <TimToady> Warning: retaining unknown function `Pugs_trap_exit' in output from C compiler

[16:47] <ludan> someone knows the name of the first browser developed in the Pisa University?

[16:52] *** fglock joined
[16:54] *** dudleyf joined
[16:57] <fglock> drbean: re http://colabti.de/irclogger/irclogger_log/perl6?date=2006-06-18,Sun&sel=11#l20 - I've noticed overloading doesn't work if you don't 'use' the match module - I don't know why

[16:57] <lambdabot> Title: "#perl6 2006-06-18,Sun"

[16:59] *** ruz joined
[16:59] <fglock> cmarcelo: ping

[17:02] <cmarcelo> fglock: hey

[17:02] *** pdcawley joined
[17:03] <fglock> cmarcelo: would you give a talk in YAPC::SouthAmerica::2006 - the site to register is http://www.conisli.org/

[17:03] <lambdabot> Title: ":: CONISLI ::"

[17:10] <cmarcelo> fglock: well, i'm not sure about what... (got my pvts?)

[17:11] <cmarcelo> since i'm new to both haskell and perl6 worlds.

[17:13] *** shachaf joined
[17:17] <fglock> cmarcelo: (got)

[17:34] *** bernhard joined
[17:35] *** ruoso joined
[17:40] *** trym joined
[17:47] <fglock> cmarcelo: please send me a mail - fglock at gmail com

[17:59] <cmarcelo> fglock: sent

[18:17] *** bpederse joined
[18:20] *** Steve_p joined
[18:31] <Steve_p> Hmmm...re0

[18:31] <Steve_p> err...pre0

[18:32] *** FurnaceBoy joined
[18:33] *** wilx joined
[18:57] *** Ymmv joined
[19:25] *** bene joined
[19:27] *** visq joined
[19:41] *** xerox joined
[20:14] *** masak joined
[20:15] *** vel joined
[20:32] *** dduncan joined
[20:41] *** larsen joined
[21:05] *** dudleyf left
[21:08] *** buetow joined
[21:16] *** frederico joined
[21:35] *** weinig|work is now known as weinig

[21:39] *** dolmen joined
[21:41] <pasteling> "TimToady" at 64.0.7.8 pasted "stack trace of ext/Perl6-Grammar/t/basic.t failure" (55 lines, 2.4K) at http://sial.org/pbot/17857

[21:42] <TimToady> audreyt: see above.  looks like a GC failure of some sort.

[21:42] <TimToady> the saneify_string macro is failing the PObj_on_free_list_TEST

[21:44] <TimToady> I can trim the test case down to about 1000 bytes, but changing almost anything in that makes it not fail.

[21:45] *** fglock joined
[21:45] <TimToady> this is with parrot r12975

[21:49] <pasteling> "TimToady" at 64.0.7.8 pasted "minimal-ish test case of basic.t failure" (23 lines, 886B) at http://sial.org/pbot/17858

[21:50] <TimToady> audreyt: actually, looks like I got it down to 886 bytes...

[21:53] *** jsiracusa joined
[22:12] *** fglock left
[22:17] *** Limbic_Region joined
[22:32] *** ruoso joined
[22:48] *** dduncan joined
[23:24] *** khisanth_ joined
[23:25] *** khisanth_ is now known as Khisanth

[23:25] *** weinig is now known as weinig|dinner

[23:47] <TimToady> audreyt: may or may not be related, but I ran a test case reducer that spat out this:

[23:47] <TimToady> regex ck{<x }/a/

[23:47] <TimToady> spits out:

[23:48] <TimToady> error:imcc:syntax error, unexpected ']'

[23:48] <TimToady> in file 'EVAL_1' line 67

[23:48] <TimToady> pugs: compilers/imcc/pbc.c:1086: verify_signature: Assertion `(((sig_arr)->obj.flags) & PObj_is_PMC_FLAG)' failed.

[23:48] <TimToady> Aborted

