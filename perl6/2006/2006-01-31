[00:00] <Juerd> Fuck, fuck, fuck. START SSHD.

[00:00] <Juerd> What's it doing? Thinking about the meaning of life?

[00:01] <Juerd> It's up

[00:01] <Juerd> But still slow

[00:02] <azuroth> hi Juerd

[00:02] <Juerd> Hello

[00:02] <azuroth> how are you doing?

[00:02] <Juerd> Guess.

[00:03] <azuroth> is this feather you're fighting with?

[00:04] <Juerd> Yes

[00:04] <Juerd> And SATA connectors

[00:05] <Juerd> disk io is slow on feather

[00:05] <Juerd> And I don't know why

[00:06] <azuroth> ick. I've never used SATA, but everyone I know seems to have problems with it

[00:07] <Juerd> I also have many systems running without any problems.

[00:10] <azuroth> main problem I've heard about is booting to windows

[00:11] <putter> Ok, the 3 clusters of ext/ failures now all appear to be a small set of pugsbugs.  this is now a haskell exercise. ;)

[00:11] <putter> dduncan: see previous line. :)

[00:12] <Juerd> azuroth: Haven't had problems with that either

[00:12] * Odin- doesn't have any problems with booting Windows: I just don't do it. :)

[00:13] <putter> oh, it's fun.  just don't do it in your bare feet.

[00:16] <putter> Anyone looking for something to do: the ChangeLog still has quite a ways to go before it is up to date (it's at r8750), and needs a cleanup pass.

[00:17] <putter> just svn log -r8750:8775 to get your feet wet

[00:20] <Juerd> GODDAMNIT

[00:20] <Juerd> Fucking goddamned box won't install lilo with a degraded array

[00:20] <Juerd> Then how the hell am I going to get it to use a new kernel, so it can use the other box, so it can rebuild its array

[00:21] <Juerd> Die, lilo

[00:21] * Juerd tries grub.

[00:22] <Juerd> "Probing devices to guess BIOS drives. This may take a long time."

[00:22] <Juerd> How long is a long time, genius programmer?

[00:22] <Juerd> A week? A month? A year?

[00:22] <Juerd> A decade?

[00:22] <Juerd> How long until I can safely assume it's broken and reset the box?

[00:22] <Juerd> Oh yay. I/O errors on the disk.

[00:22] <Juerd> I give up

[00:22] <rafl> Juerd: Is feather already working again? If not, you should probably disable cron.

[00:24] *** vel joined
[00:26] <Juerd> rafl: It works, but not well.

[00:26] <Juerd> I don't know wtf is wrong.

[00:26] <Juerd> I can write to the disk at 10 MB/s, which is full line speed

[00:27] <Juerd> Let's degrade the raid array to see what the resynch speed will be

[00:28] <Juerd>       [>....................]  recovery =  3.0% (742976/24418688) finish=8.4min speed=46436K/sec

[00:28] <Juerd> That's normal speed

[00:28] <Juerd> Then why does it perform so badly :(

[00:30] *** grayson joined
[00:31] <rafl> Juerd: Maybe because some pugs builds are running in parallel?

[00:31] *** stennie joined
[00:32] <Juerd> rafl: Both niced

[00:32] *** xern joined
[00:35] *** gilby joined
[00:40] <dduncan> I be back

[00:41] <dduncan> now checking ext/

[00:42] <putter> hey dduncan

[00:42] <dduncan> hi

[00:42] <putter> I fixed the one ext/ file that looked plausibly like a non-pugs-core problem.  the rest are core exercises.

[00:42] <dduncan> so last I checked, the only red zones were in 4 ext/ items

[00:42] <putter> actually, your last smoke had 3 failed tests in magical/env.t 

[00:42] <dduncan> so you think the remaining failures are best fixed in the core and not the ext code itself?

[00:43] <putter> yes.  one is mentioned by iblech as that being audreyt's call, the others seem similar

[00:44] <putter> I have no idea what's going on with env.t.  your last smoke is the only place i've seen it fail.  ???

[00:44] <dduncan> that does make sense to an extent

[00:44] <dduncan> since a lot of the ext/ stuff was written before 6.2.10 and not changed since

[00:45] <putter> on the other hand, I didn't look _behind_ the various ext/ failues, ie, what happens if failing test x is removed, do things then pass.

[00:45] <dduncan> so if they fail now its because either the core's broken, or the ext/ was depending on broken functionality that was fixed

[00:45] <dduncan> whereas, I try to isolate the problems ... but some of them just seem to say the core is at fault

[00:46] <dduncan> even if futile, I'll give them a quick look now ... after all, the ext/ could be wrong

[00:46] *** Limbic_Region joined
[00:46] <dduncan> but I'll ask you a question

[00:46] <dduncan> regarding File-Spec

[00:46] <putter> any idea what happened in env.t?

[00:47] <dduncan> I have to step out for a few minutes, but will look closer at env.t

[00:47] <putter> ok

[00:49] <rafl> Juerd: What did you change on feather? I can't imagine that changing memory makes the box that slow..

[00:49] <Juerd> rafl: Motherboard, CPU, memory.

[00:50] <Juerd>  6677 eric256   35  10 43580  40m 1520 R 15.0  2.0   0:56.66 catalog_tests.p

[00:50] <Juerd>  5537 eric256   35  10 43588  40m 1532 R 14.1  2.0   5:40.94 catalog_tests.p

[00:50] <Juerd>  2371 eric256   35  10 44712  41m 1648 R 13.5  2.1  14:15.35 catalog_tests.p

[00:51] <Juerd> That's a bit overdone.

[00:51] <Juerd> Okay, slayed users

[00:51] <Juerd> Now let's see what a kernel build does

[00:52] <putter> Compiling Pugs.AST         ( src/Pugs/AST.hs, dist/build/src/Pugs/AST.o )   /tmp/ghc24699.hc: In function `PugsziAST_zdwcharInc_entry': /tmp/ghc24699.hc:39: warning: cast to pointer from integer of different size

[00:52] <rafl> Maybe it's that slow that erics task isn't finished when the next one starts..

[00:52] <Juerd> make clean is already slow

[00:52] <Juerd> rafl: Could be.

[00:52] <putter> And in Pugs.Lexer

[00:52] <Juerd> But the disk was fast

[00:52] <Juerd> 45 MB/s is normal.

[00:52] <Juerd> The CPU that's installed now is faster than the previous

[00:53] <rafl> I'd blame the mainboard then.

[00:53] *** weinig joined
[00:54] <putter> *** Compiling PIL to JavaScript...

[00:54] <putter> substr outside of string at /mnt/disk150_30G_5/pugs_kennel/r8869/perl5/PIL2JS/lib/PIL.pm line 349.

[00:54] <putter> Use of uninitialized value in concatenation (.) or string at /mnt/disk150_30G_5/pugs_kennel/r8869/perl5/PIL2JS/lib/PIL.pm line 349.

[00:54] <Juerd> But what part?

[00:54] <Juerd> Something has to be *broken* to perform so badly

[00:54] <Juerd> But brokenness leads to error messages

[00:56] <rafl> I once had a rally bad disk performance with a SATA disk when I didn't compile the driver in properly, but I guess you did that..

[00:57] <Juerd> But the disk does perform well.

[00:57] <Juerd> 45 MB/s is good, for these disks.

[00:57] <Limbic_Region> nothing in dmesg ?

[00:58] <Juerd> Limbic_Region: Nothing I interpret as bad.

[00:58] <rafl> Juerd: How did you benchmark that?

[00:59] <putter> dduncan: re F:S question, I'll be heading out to dinner in a few minutes.  gone for perhaps an hour.

[01:00] <Juerd> rafl: for i in f r a; do mdadm -$i /dev/md2 /dev/sda5; done; watch --interval=1 cat /proc/mdstat

[01:01] <Limbic_Region> rafl - do you suspect an IO problem or you can't quantify the slowness?

[01:01] <Limbic_Region> iostat should show if the disks are getting slammed for some reason

[01:01] <Juerd> Do you mean vmstat?

[01:02] <Limbic_Region> no

[01:02] <Juerd> If so, do you know how to interpret its output?

[01:02] <Limbic_Region> I meant iostat

[01:02] <Juerd> Does Debian have that?

[01:02] <Limbic_Region> but vmstat is good too

[01:02] * Limbic_Region doesn't know as he isn't really a linux guy

[01:02] <Juerd>  0  0      0 1625020  48344 304488    0    0     0     0  259    13  0  0 100  0

[01:02] <Juerd>  0  0      0 1625020  48344 304488    0    0     0     0  260    12  0  0 100  0

[01:02] <Juerd>  0  0      0 1625020  48344 304488    0    0     0     0  266    11  0  0 100  0

[01:02] <Juerd>  0  0      0 1625020  48344 304488    0    0     0    52  275    24  0  0 100  0

[01:02] <Juerd> during idle

[01:02] <Limbic_Region> iostat?

[01:02] <Limbic_Region> or vmstat?

[01:03] <Limbic_Region> both should be done for a collection interval of at least 5 seconds IMO

[01:03] <Juerd> 2  0      0 1620416  48392 304792    0    0     0   244  304   195 90 10  0  0

[01:03] <Juerd>  1  0      0 1620416  48392 304792    0    0     0     0  267   174 86 14  0  0

[01:03] <Juerd>  1  0      0 1602164  48392 303180    0    0     0    20  315   248 94  6  0  0

[01:03] <Juerd>  1  0      0 1565584  48392 303180    0    0     0     0  258    11 95  5  0  0

[01:03] <Limbic_Region> iostat 5 5

[01:03] <Juerd> During perl Makefile.PL in pugs' tree

[01:03] <Limbic_Region> or vmstat 5 5

[01:03] <Juerd> Limbic_Region: vmstat 1

[01:03] <Juerd> ok, vmstat 5 5 then... wait a sec

[01:03] <rafl> Juerd: iostat is in sysstat.

[01:04] <Juerd> 2;130 root@feather:~/pugs# vmstat 5 5

[01:04] <Juerd> procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----

[01:04] <Juerd>  r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa

[01:04] <Juerd>  1  0      0 1622272  48560 304900    0    0   109   140  351   202 74  2 23  2

[01:04] <Juerd>  1  0      0 1612956  48572 303288    0    0     0    68  276   125 93  7  0  0

[01:04] <Juerd>  1  0      0 1522560  48592 303288    0    0     0    66  278    19 98  2  0  0

[01:04] <Juerd>  1  0      0 1613824  48592 304904    0    0     0     2  262    14 97  3  0  0

[01:04] <Juerd>  1  0      0 1548600  48604 304912    0    0     0   383  288    33 98  2  0  0

[01:04] <Juerd> During perl Makefile.PL

[01:05] <Limbic_Region> Juerd - this is for Solaris, but it should help deciphering http://www.adminschoice.com/docs/iostat_vmstat_netstat.htm#Example:vmstat

[01:05] <Juerd> If you don't mind, my mind is terribly overloaded. I can't learn now

[01:06] <Juerd> I appreciate the pointer

[01:07] <Juerd> iostat shows close to 100% user cpu load

[01:07] <Juerd> Almost none system

[01:07] <Juerd> That should indicate a non-io problem, right?

[01:07] <Juerd> Also almost none iowait

[01:07] <Limbic_Region> well, it is hard lining up your columns but it looks like you aren't cpu idle

[01:07] <Limbic_Region> does debian have top?

[01:08] <Juerd> It does

[01:08] <Juerd> If you want, you can log in on feather

[01:08] <Limbic_Region> if I read that column correctly - you were 0 percent idle 4 out of the 5 samplings

[01:08] <Limbic_Region> that's not good

[01:08] <Juerd> I can provide you with root access if you want to help fight the problem

[01:08] <Limbic_Region> ok - 

[01:09] <Juerd> You have root access through sudo

[01:09] <Limbic_Region> that's scary

[01:09] <Juerd> And indeed, the CPU wasn't idle.

[01:09] <Limbic_Region> sudo bash

[01:09] <Juerd> What is scary?

[01:09] <Limbic_Region> root access through sudo

[01:09] <Juerd> Why?

[01:10] <Juerd> I find it quite useful, because I can revoke the rights without changing the root password.

[01:10] <Limbic_Region> well - I don't like having root access to any box I am not personally responsible for

[01:10] <Juerd> Ah

[01:10] <Juerd> Don't worry, there are no backups

[01:10] <Limbic_Region> what's the hostname?

[01:10] <Juerd> feather.perl6.nl

[01:11] <Juerd> It's really weird to have a very slow box with 2 GB ram :)

[01:11] <Limbic_Region> it doesn't have a very high load ATM

[01:11] <Juerd> Limbic_Region: No, it's been idle because I was chatting with you :)

[01:12] <Juerd> I have started a simple make clean

[01:12] <Limbic_Region> no - it is still crazy cpu

[01:12] <Limbic_Region> oh

[01:12] <Limbic_Region> nevermind

[01:12] <Juerd> And already the cpu load is almost through the roof.

[01:12] <Limbic_Region> yeah - I am just watching top

[01:12] <Juerd> Cpu(s): 98.8% us,  1.2% sy,  0.0% ni,  0.0% id,  0.0% wa,  0.0% hi,  0.0% si

[01:12] <Juerd> Insane

[01:12] <Limbic_Region> perhaps unnice your make?

[01:13] <Juerd> Though weird: sum up the values in the CPU column manually

[01:13] <Juerd> Just estimate

[01:13] <Juerd> I get nowhere near 100

[01:13] <Juerd> Oh, now I do, now that find is busy

[01:13] <Juerd> I started make

[01:14] <Limbic_Region> well, everything points to being cpu bound

[01:15] <Juerd> Yeah, but how does that make sense?

[01:15] <Juerd> It's a 2.8 GHz CPU

[01:15] <Juerd> And how to solve it :|

[01:16] <Limbic_Region> that part I don't know - and I don't have time to help, got to go call my Dad

[01:16] <Juerd> Okay; thanks much for your help so far

[01:17] <Limbic_Region> Juerd - if it is still a problem tomorrow I will try to actually try to isolate the problem

[01:17] <Limbic_Region> good luck

[01:18] *** Cryptic_K joined
[01:27] <dduncan> putter, about env.t ...

[01:27] <dduncan> when I'm in Pugs' root directory (with a copy of Test.pm sitting in my cwd), and run ./pugs t/magicals/env.t ... all 11 tests pass

[01:28] <dduncan> if I'm in t/magicals (with a copy of Test.pm in my cwd), and run ../../pugs env.t, then all but the first 6 tests fail ...

[01:29] <dduncan> in the latter case, it seems that the temp file is being written in pugs' own dir, while it is attempting to be read from the magicals dir (the cwd)

[01:29] <dduncan> when I'm in Pugs' root directory, pugs own dir and the cwd are the same, so all the tests pass

[01:29] <dduncan> neither of these scenarios matches my smoke, so I'm not sure what happened there

[01:30] <putter> lol.  I was so hopeful until that last line. ;)

[01:30] <Juerd> I'm very tired

[01:30] <dduncan> I'm normally in pugs' root dir when running make smoke

[01:30] <Juerd> I don't know if I should drive home :|

[01:30] <Juerd> Can't think clearly

[01:31] <dduncan> sleep where you are?

[01:31] <putter> food, drink ;)

[01:31] <rhesa> sugar

[01:32] <putter> lol

[01:32] <dduncan> putter, I don't know what's causing it as yet, but running the current pugs shell leads to incessant beeping, like an unprintable character keeps getting output

[01:32] <dduncan> this happened a few days ago, then went away when I fixed the non-delete problem, and now it's back.

[01:33] *** wolverian joined
[01:33] <dduncan> its return would coincide with the last 16-20 hours of commits

[01:33] <putter> sigh.  perhaps, as you mentioned earlier,  r8840

[01:33] <dduncan> yes, but I'm not sure its that one at fault

[01:34] <dduncan> is anyone else here not using readline and/or can reproduce that symptom?

[01:34] <dduncan> okay, I'm out for c 15 min

[01:35] <dduncan> er, first I'll undo just that shell change and see if it has an effect ...

[01:36] <putter> sounds good

[01:36] <putter> I'll run a full smoke/js/pir spread over dinner.

[01:37] <putter> oh, what was your F::S question?

[01:38] <dduncan> a minute ...

[01:39] <dduncan> before I rewrote Spec.pm, it was assuming that someone who used File::Spec would automatically see the exported functions of other modules that File::Spec uses, like File::Spec::*

[01:39] <putter> yes

[01:39] <dduncan> as if "is export" put things in the global namespace by default

[01:40] <dduncan> is that supposed to happen?

[01:40] <dduncan> I would have thought it only exported into the context where it was required/used

[01:40] <dduncan> which would be Spec.pm, and not the user of Spec.pm

[01:40] <putter> re  is that supposed to happen?, my understanding is not.

[01:41] <dduncan> my rewrite explicitly re-exported all the functions, which made it work

[01:41] <dduncan> but I'm wondering if there was something in the perl 6 spec that said this was actually supposed to export into global, and my change just covered up a core bug

[01:42] <putter> no, I think you did the right thing.

[01:43] <putter> p6 will need more flexible re/export, but I think that's on the todo list.

[01:44] <Juerd> Feather's problem is a memory problem

[01:44] <Juerd> With other (less) memory, it runs fast.

[01:44] <Juerd> But how to solve it :|

[01:45] <rafl> Don't use any memory at all if it's getting faster with less memory?

[01:45] <putter> I'm double checking, but I'm pretty sure your "export to global" is not intended.

[01:45] <putter> s/your//

[01:45] <wolverian> Juerd: ran a ram check yet?

[01:46] <Juerd> wolverian: Have none

[01:46] <dduncan> okay, I

[01:46] <dduncan> will be away for 15

[01:46] <Juerd> And without bootable CD's, I'm not going to run one either

[01:46] <rafl> Juerd: There are several packaged for Debian.

[01:46] <wolverian> Juerd: memtest86 is designed to run from a bootable floppy/cd

[01:47] <Juerd> wolverian: No floppy, no cd.

[01:47] <Juerd> rafl: I don't dare running one if I have no alternative means of booting.

[01:47] <rafl> Juerd: You can boot if with $your_favourite_bootloader

[01:47] <wolverian> Juerd: heh, install it on the HD then. debian has a package that should do the right thing (tm)

[01:47] <putter> the http://dev.perl.org/perl6/doc/design/syn/S11.html "Importation" example suggests not.

[01:48] <rafl> Juerd: There are also programs that run in userspace like memtester.

[01:48] <putter> google: "is export" site:dev.perl.org  :)

[01:48] <Juerd> rafl: Are those any good?

[01:48] <putter> dinner. bbl.  hopefully with some smokes.

[01:48] <Juerd> The boot loader thing is what I'm scared about. Userspace is fine

[01:49] <rafl> Juerd: memtest works well.

[01:49] <Juerd> Dear ASUS, "Latest beta bios" is NOT a good changelog entry.

[01:50] <Juerd> Especially not if it's the ONLY changelog entry, for the last 5 releases

[01:53] <Juerd> "The CMX1024-3200C2 is a 1024 MByte DDR SDRAM DIMM designed for extreme speed and is one of the

[01:53] <Juerd> fastest 1 GByte modules available."

[01:53] <Juerd> Yeah, that's why it was so expensive, and that's why I bought it for that other box that never happened

[01:53] <Juerd> But the speed isn't quite showing :|

[02:01] *** Amnesiac joined
[02:02] <Juerd> Manually setting memory timings appears to help

[02:02] <Juerd> Last time I ever did that was on my 386/387 machine.

[02:02] <Juerd> Insert lots of profanity here.

[02:04] <Juerd> Hm, no

[02:04] <Juerd> Had the wrong module installed

[02:05] *** autrijus joined
[02:05] *** autrijus is now known as audreyt

[02:05] <audreyt> dduncan: try r8870 for your libreadline (really emulated by libedit on Tiger)?

[02:05] *** vel joined
[02:06] <audreyt> (C language)-- # no module system

[02:06] <audreyt> D++ # sane module system

[02:08] <wolverian> graphviz++ # eternal fun 

[02:08] <wolverian> http://chronoa.dy.fi/~wolverian/reboot-languages.svg # here is a graph from another channel that maps users to languages. should I run it here? :)

[02:12] <audreyt> go ahead :)

[02:12] * rafl votes yes

[02:13] <dduncan> I'm currently running makefile.pl; will run make shortly

[02:14] <dduncan> make

[02:15] <dduncan> make error; rl_catch_signals undeclared

[02:15] <dduncan> I think we were going to disable use of readline for systems like mine

[02:17] <audreyt> mm

[02:17] <audreyt> but Makefile.PL did compile for you?

[02:17] <dduncan> yes

[02:18] <dduncan> and the readline link was not disabled this time

[02:19] <audreyt> okie

[02:19] <Juerd> I'm getting insane

[02:19] <rafl> Juerd: What's up this time?

[02:20] <Juerd> I have one RAM module with which it boots fast and normal

[02:20] <Juerd> Three with which it does not.

[02:20] <Juerd> And I don't know what to do about it

[02:20] * Juerd starts to cry

[02:21] <dduncan> audreyt, it may be simplest to simply disable readline on any system whose version doesn't implement those signal things, as was done 24 hours ago

[02:21] <rafl> Juerd: Maybe a RAM slot is broken?

[02:21] <dduncan> and/or if the version fails to have something we know is a new feature

[02:21] <Juerd> Hm, two that run fast, but not together.

[02:21] <Juerd> rafl: Tried different slots :)

[02:22] <dduncan> then readline is used if it exists and is newish; it is not used otherwise

[02:23] <audreyt> dduncan: yeah, I've committed a Makefile.PL

[02:23] <audreyt> please rerun Makefile.PL

[02:23] <audreyt> and see if Makefile still contains -DPUGS_HAVE_READLINE

[02:23] <audreyt> r8871

[02:23] <dduncan> pulling

[02:24] <dduncan> makefilepling

[02:25] <dduncan> the messages did not say that readline was disabled

[02:25] <dduncan> but looking at makefile anyway ...

[02:26] <dduncan> the makefile also does contain -DPUGS_HAVE_READLINE

[02:26] <dduncan> so it wasn't shut off

[02:27] <audreyt> weird.

[02:28] <dduncan> I can try cleaning, if that makes any difference

[02:28] <audreyt> can you trace Makefile.PL a bit?

[02:28] <audreyt> that probably doesn't

[02:28] <audreyt> the line that does this is line 178

[02:28] <audreyt> and 631

[02:28] <dduncan> I'm already looking at 178

[02:28] <audreyt> the code snippet on line 178 should not compile+run on your system

[02:29] <audreyt> but in any case you can save it under test.hs

[02:29] <audreyt> and see if "ghc --make test.hs" works

[02:30] <audreyt> alternatively, remove the -v0 in r644 (change it to -v3 perhaps)

[02:30] <audreyt> s/r644/line 644/

[02:30] <audreyt> and see if some useful debug info can be obtained

[02:30] <audreyt> (I'll brb)

[02:31] <dduncan> I removed the  "-v0",

[02:31] <putter> audreyt: why not go back to the full test snippet which is known to work?

[02:31] <dduncan> I would concur

[02:33] <dduncan> removing the  "-v0", caused a few extra output lines to appear near the top: 

[02:33] <dduncan> Chasing modules from: Setup.lhs Compiling Main             ( Setup.lhs, Setup.o ) Linking ... ghc-pkg: cannot find package plugins Chasing modules from: /tmp/pugs-tmp-26787.hs Compiling Main             ( /tmp/pugs-tmp-26787.hs, /tmp/pugs-tmp-26787.o ) Linking ... Chasing modules from: /tmp/pugs-tmp-26787.hs Compiling Main             ( /tmp/pugs-tmp-26787.hs, /tmp/pugs-tmp-26787.o ) Linking ...

[02:33] <dduncan> I will also mention that a haskelish error message did used to appear there when the test was working, yesterday

[02:34] <dduncan> instead of the a-ok we see here

[02:34] <dduncan> I will try making the 178 test longer, like the one from the other day ...

[02:35] <putter> the version in -r8839 should work

[02:36] <audreyt> ok, reverting to it.

[02:39] <audreyt> committed as r8872.

[02:39] <dduncan> I made my own revert and am running it

[02:40] <dduncan> fyi, it seems to be just _rl_catch_sigwinch that it's complaining about here

[02:40] <audreyt> indeed, though that might be a good thing

[02:40] <dduncan> and that seems to have worked, mine that is

[02:41] <audreyt> good. the reason I left it out from the probe was that I found out in systems with new (gnu) readline, sigwinch shouldn't be disabled

[02:41] <putter> smoke of r8869 is up

[02:41] <audreyt> but in Makefile.PL probing it's a good way to separate gnu and nongnu readlines

[02:42] <dduncan> yes indeed

[02:42] <dduncan> my own change, deltad with r8871 fixed the problem

[02:42] <audreyt> dduncan: try trunk r8873?

[02:43] <dduncan> I will now replace it with yours, for synchronizing

[02:44] <dduncan> in my case I just changed the makefile

[02:44] <dduncan> now I have pulled yours

[02:44] <audreyt> putter: ok, one-line summary of the core bug(s) that needs to be addressed for the ext/ failures?

[02:45] <audreyt> I know of the @array_of_spans[$index].stringify problem iblech mentioned in the commit log

[02:45] <putter> the shortened test also didnt have a call to readline, yes?  so control may never have actually hit the library.  perhaps ghc just optimized it all away? 

[02:46] <putter> at least one of the two flags was just an extern integer.  if the other one was too...

[02:46] <audreyt> putter: indeed that might be the case.

[02:46] <audreyt> yup

[02:46] <dduncan> with your version, readline is disabled , ... now making

[02:47] <dduncan> the shell also works with your version

[02:47] <dduncan> so that problem's seemingly resolved

[02:47] <audreyt> yay

[02:47] <Juerd> Great

[02:48] <Juerd> In the process, one dimm got fucked up when I dropped it on the floor

[02:48] <Juerd> There goes EUR 80

[02:48] <Juerd> BUT

[02:48] <Juerd> With a lot of manual hacking in the bios, I have now one of the new dimms and both two old dimms together

[02:48] <Juerd> With usable speed

[02:49] <Juerd> (It boots within a minute, instead of in 8 minutes)

[02:49] <dduncan> fyi, the only significant difference between my version and yours is that I just left the 'compile only' function, while you changed it to 'compile and run'; the actual haskell code (from r8839) was identical

[02:49] <dduncan> and I didn't change shell.hs

[02:49] <Juerd> And the total is 2048 now, I just lost the opportunity to upgrade two other boxes with 512 each :|

[02:49] <Juerd> Ah well

[02:49] <dduncan> so the compile alone with sigwinch will fail and result in no readline linking

[02:49] <audreyt> dduncan: yup, and that's what we want

[02:50] <dduncan> right ... I read the diff backwards ... your version was the one not running it

[02:50] <putter> *** Cannot cast into Hash: VRef <Array::Const> as in ext/Set-Infinite/t/set-infinite-functional.t

[02:52] <putter> also ext/Perl6-Container-Array/t/array-lazy.t

[02:55] <putter> and *** Cannot 'shift' scalar  as in ext/Perl6-Container-Array/t/array-operations.t

[02:55] <putter> I think that's the full set.

[02:56] <audreyt> k

[02:56] <rafl> Juerd: Great, thanks!

[02:59] <Juerd> Putting it in the rack now

[03:01] <putter> I'm wrong - there's a fourth failure mode.  curious.  ext/Set-Infinite/t/set-infinite-recurrence.t and ext/Set-Infinite/t/set-infinite.t are all  not ok Infinite Loop.  So that could well be a Set::Infinite bug, not a core bug.

[03:03] <putter> curious.  don't know how I missed that.  just not in my log.  ah well.  sorry.

[03:05] <audreyt> it's fine, as I just addressed it.

[03:05] <audreyt> all Span tests now pass.

[03:05] <Juerd> feather is up

[03:06] <Juerd> I'm going home now

[03:06] <putter> Juerd++

[03:06] *** Bit-Man joined
[03:06] <Juerd> Or, if it turns out I'm unable to drive safely, to the first hotel I encounter.

[03:07] <audreyt> Juerd++

[03:07] <audreyt> 04:01 AM (CET) - Upgrade finished. It took 6 hours and cost a lot; don't ask.

[03:07] <audreyt> Juerd++ Juerd++

[03:08] *** Cryptic_K joined
[03:09] *** audreyt joined
[03:09] <putter> Juerd: caffeine?  cold water on face?

[03:09] *** svnbot6 joined
[03:10] <putter> svnbot6++

[03:10] <putter> welcome back, you were missed.

[03:10] <putter> ?eval 3

[03:17] <dduncan> now pulled 8875

[03:17] *** vell joined
[03:21] <dduncan> make complete

[03:26] <dduncan> now smoking r8875

[03:26] * putter puzzles over what the Var.hs change means...

[03:27] <dduncan> speed seems normal

[03:27] <dduncan> I should know in about 30 min whether all the ext/ pass or not

[03:27] <dduncan> er, don't die that is

[03:28] <audreyt> putter: the Eval.Var findSub dispatch system was written before S12's dispatch order was specced clearly

[03:28] <audreyt> back then there were no clear distinction between single and multiple dispatch

[03:29] <audreyt> and so both were lumped in a single findSub loop

[03:29] <audreyt> so "$x.foo.bar" is no different from bar(foo($x))

[03:29] <audreyt> (rather, bar(foo($x:):))

[03:30] <audreyt> but MMD dictates that you have to find which of the candidate &bar to be dispatched to

[03:30] <audreyt> before you fully evaluate its argument foo($x:) under its specified context

[03:30] <obra> audreyt: what's your favorite win32 perl these days?

[03:30] <obra> (perl5)

[03:30] <audreyt> obra: I'm not on win32 anymore, but I hear camelpack is quite nice

[03:31] <obra> I'll have a look

[03:31] <audreyt> putter: but you can't find out which candidates of &bar to dispatch to, unless you know the type of foo($x)

[03:31] * obra is poking at a new tabletpc

[03:31] <audreyt> putter: that's a chicken-egg problem

[03:31] <audreyt> putter: so I wrote a tiny type inferencer to guess a type of an Exp without actually evaluating its side effects

[03:32] <audreyt> putter: the idea is that foo($x) is first inferred, then uses that inferred type to decide which bar() to call, and finally evaluate foo($x) in full 

[03:32] <putter> (call bbiab

[03:32] <audreyt> using the argument type expected by bar()

[03:32] <audreyt> but the infer engine didn't handle indexed expressions well

[03:32] <audreyt> $x[0] etc

[03:33] <audreyt> in any case, that tiny inferencer is obsolete under the new (November 2005) S12 and docs/notes/multimethods.pod

[03:33] <audreyt> which would be implemented at PIL layer

[03:34] <audreyt> the inferencer fix I just committed for indexed expressions

[03:35] <audreyt> just checks if both the indice and indexee are simple expressions (i.e. things that can be evaluated without side effects)

[03:35] <putter> back

[03:35] <audreyt> and if so, it just evaluates them to find out their actual type

[03:35] <audreyt> end of explanation

[03:35] <audreyt> (feel free to haddockify this)

[03:35] <putter> got it.

[03:35] <putter> ::)

[03:36] <putter> ok, will do

[03:37] <audreyt> mixing return type polymorphism ("want") and MMD naturally leads to bizzare ambiguities

[03:37] <audreyt> and I'm happy that S12-Nov05 addressedthis

[03:41] *** grayson` joined
[03:41] *** grayson` left
[03:46] <dduncan> okay, so both ext/Perl6-[Container-Array|Value-List] died during the smokes

[03:47] <dduncan> of 8875

[03:47] *** evalbot_8875 joined
[03:47] <dduncan> as did Set-Infinite

[03:49] <dduncan> same reasons putter mentioned

[03:51] <putter> in, r8876

[03:51] <svnbot6> r8876 | putter++ | Eval/Var.hs: added audreyt's description of the old findSub dispatch system.

[03:52] <dduncan> what did that fix for you?

[03:52] <putter> We do that a couple of times and pugs will be wizzily documented.

[03:52] <dduncan> that was just documentation?

[03:52] <putter> re what did that fix for you?, my brow is no longer furrowed in puzzlement

[03:52] <putter> :) yes

[03:53] <dduncan> when I first saw you did an update, I thought it was for the ext/ failures

[03:53] *** SamB joined
[03:53] * putter takes a moment to look at S12...

[03:54] <audreyt> lunch, bbiab

[03:54] <putter> audreyt: current state?

[03:54] <putter> summary of?

[03:56] <putter> dduncan: nope.  I think I'm done with serious work for the evening.

[03:56] <dduncan> well ext/Span did not die

[03:56] <putter> you mean span.t ?

[03:56] <audreyt> putter: still can't quite narrow down the failure modes of the const VArray bug

[03:57] <dduncan> both span.t and unicode.t did not die, as they did in 8864

[03:57] <audreyt> will continue after lunch; once it's there I'll review/resume chglogging

[03:57] <dduncan> I think they died before

[03:57] <audreyt> and then push out preflight

[03:57] <audreyt> also a worrisome heisenbug

[03:57] <audreyt> t/rules/from_perl6_rules/capture.t

[03:57] <dduncan> at least, a sudden switch from green to red often means a death

[03:58] <putter> audreyt: ok, thanks.

[03:58] <audreyt> fails tests 1..17 20..22 24..29 ~half of the time here

[03:58] <audreyt> PGE sefaulting it seems

[03:58] <dduncan> and hovering over one of the red squares in my browser shows 'stub' rather than a fail message, which suggests death

[03:58] <audreyt> but half of thetime it's just fine

[03:58] <putter> hmm.

[03:58] <audreyt> suspecting external parrot's CGP switch

[03:58] <audreyt> trying to disable it now

[04:00] <audreyt> (i.e. change parrot -C to just parrot)

[04:01] *** wolv joined
[04:01] <audreyt> doesn't seem to help.

[04:02] <audreyt> anyway, lunch first :) bbiab

[04:03] <putter> &

[04:04] *** wolv is now known as wolverian

[04:04] <putter> dduncan: yeah, all died except for the infinite sets, which, well, infinitely looped.  those tests are now commented out.  so if spam, err, span isn't dying (remember when spam was simply an obscure canned meat product?), progress.

[04:05] <dduncan> okay, besides the 3 ext/ I mentioned, all others did not die

[04:06] <dduncan> the 3 being P-C-A, P-V-L, and S-I

[04:09] *** feng joined
[04:10] *** beppu_ joined
[04:11] <putter> ok.  i svn up'ed to 8876 and am poking at capture.t.  one thing to do might be to walk the tests which were failing, with ./pugs -Iblib6/lib t/... , and make sure the "fixed" ones are entirely passing.  random thought.

[04:13] *** vel joined
[04:13] *** wolv joined
[04:14] <wolverian> oops.

[04:14] <buu> evalbot_8875: ?join #buubot

[04:18] <putter> dduncan: so, setCatchSigwinch isn't used in Shell.hs any more, but still is in the Makefile.hs test snippet.  want to see if we can get rid of it there?

[04:18] <dduncan> no

[04:18] <putter> lol

[04:18] <putter> ok

[04:19] <dduncan> we left the sigwinch in the makefile on purpose, as a test to whether any existing readline is Tiger's broken version or not

[04:19] * putter suspects it was not setCatchSigwinch which was the missing ingredient of the shorter test, but rather the readline call.

[04:19] *** justatheory joined
[04:20] <dduncan> apparently, when the broken readline is linked into pugs, there were issues with the shell, such as incessant beeping

[04:20] <dduncan> changing just the makefile so readline isn't linked in fixed this

[04:21] <putter> re we left the sigwinch in the makefile on purpose, err, no.  the test snippet was intended to mirror the Shell.hs usage.  the shorter test ceased to do that in several respects, and ceased to work (ie, fail).  the makefile should, eventually if not tonight, again reflect the current Shell.hs usage.  which means setCatchSignals, _and readline_ but no setCatchSigwinch.

[04:22] *** vel joined
[04:22] <dduncan> whatever is done, the shell has to actually work on Tiger with its default pseudo-readline

[04:23] <dduncan> that is, pugs should just work by default on a user's Tiger install even when they didn't upgrade readline

[04:23] <dduncan> it works right now

[04:24] <putter> right.  I hypothesize the current snippet's behavior will be unchanged by the removal of the setCatchSigwinch.  and that this is the right thing because Shell.hs no longer uses setCatchSigwinch, and the test snippet should mirror Shell.hs needs.

[04:25] <dduncan> well, don't commit any such changes until after I've tested them

[04:25] <audreyt> dduncan: you can take out line 182 in Makefile.PL

[04:25] <audreyt> ."  setCatchSigwinch False\n"

[04:25] <audreyt> and run Makefile.PL again

[04:25] <putter> ;) thus the: dduncan: so, setCatchSigwinch isn't used in Shell.hs any more, but still is in the Makefile.hs test snippet.  want to see if we can get rid of it there?

[04:25] <dduncan> yes I can

[04:25] <audreyt> and inspect Makefile to see whether PUGS_HAVE_READLINE is still no there

[04:26] <dduncan> however, I"m going to let my current smoke complete first

[04:26] <audreyt> if it's not, then commit Makefile.PL sans that line :)

[04:26] <audreyt> sure

[04:26] <audreyt> (though running Makefile.PL does not affect smoke)

[04:26] <audreyt> so you can do both in parallel

[04:26] <audreyt> brb

[04:26] <dduncan> I should get to this in about 1 hour

[04:27] * putter has found updating Makefile.PL not only mangles smoke, but an require a complete rebuild. :(

[04:27] <dduncan> I prefer to play it safe myself

[04:27] <putter> s/mangles/can mangle/

[04:28] <putter> but not a running smoke I guess.

[04:29] <dduncan> mine is currently on t/oo

[04:29] <putter> could always make a second copy of pugs....

[04:30] <dduncan> I"m not that impatient

[04:30] <putter> but there's nothing really pressing about this.  prerelease is likely still an hour or few away.

[04:30] <dduncan> then we're okay

[04:30] <putter> oh, and there's still lots-o changelog'ing to be done.

[04:31] <dduncan> I've done what I can on that front

[04:31] <dduncan> while the smoke is happening, I'm changelogging one of my own projects that will be released simultaneously with pugs

[04:33] <putter> audreyt: is that with external or embedded parrot?

[04:33] <putter> k

[04:41] <putter> audreyt: with external parrot, I am unable to generate a capture.t failure.  15+ runs.  half on pure 8868, half with the new Var.hs and Shell.hs.  embedded parrot stopped working entirely for me a month or few back.  but local system changes occurred (new libc, etc) during the same time, so that may just be me.

[04:42] *** justatheory joined
[04:45] *** justatheory joined
[04:47] <putter> smoking pil2js is not a quick thing...

[04:48] <clkao> zzzzz

[04:54] <audreyt> okay, another ext/ failures down (P::V::L), two more (P::C::A and S::I) to go

[04:54] <svnbot6> r8877 | audreyt++ | * Perl6::Value::List - add "is export" to multis is sufficient to make all its tests pass.

[04:59] * audreyt meanwhile releases M::Sig 0.53

[05:04] * putter notes two failures aren't _quite_ identical:

[05:04] <putter> *** Cannot cast into Hash: VRef <Array>  in current ext/Perl6-Value-List/t/array-lazy.t

[05:04] <Daveman> Hey everyone :)

[05:04] <putter> *** Cannot cast into Hash: VRef <Array::Const>  in current ext/Set-Infinite/t/set-infinite-functional.t

[05:05] <putter> hello Daveman

[05:14] *** Cryptic_K joined
[05:14] <putter> past end of day for me.  how useful would people find a r8869 smoke-js?  I've one running, sort of almost done.  Wondering whether to stay up for it.

[05:16] *** joepurl joined
[05:34] *** BeoTW joined
[05:39] <meppl> guten morgen

[05:40] <putter> r8869 smoke-js up.

[05:40] <putter> guten nacht &

[05:45] <BeoTW> finger meppl

[06:00] <dduncan> my r8875 smoke for haskell/darwin is now up

[06:01] <dduncan> showing only 172 failures of 10,936

[06:03] <dduncan> also, there was no magicals/env.t failure reported this time ... which I couldn't reproduce before anyway

[06:04] <dduncan> the only failures seen now are those 3 ext/ distros

[06:04] <dduncan> now that that's done, I will look into that Makefile.PL simplification thing ...

[06:07] <dduncan> I tried removing line 182 of Makefile.PL ...

[06:07] <dduncan> the one containing:                         ."  setCatchSigwinch False\n"

[06:07] <dduncan> it is making now

[06:07] <dduncan> the Makefile.PL output does *not* say that readline is disabled

[06:09] <dduncan> when I put that line back, it *does* say that readline is disabled

[06:10] <dduncan> so, audreyt and putter, removing the sigwinch line does break things

[06:23] <dduncan> now checking r8877

[06:25] <dduncan> it appears that, under ext/Perl6-Value-List/,  t/array-lazy-overloaded has gone infinite-loopy, rather than just dying

[06:25] <dduncan> (it died 2 revs back)

[06:28] *** kanru joined
[06:35] *** evalbot_8875 is now known as evalbot_8877

[06:39] <gaal> $morning!

[06:40] <tewk> gaal: morning, looks like audrey, dducan, and putter just about have a preview ready

[06:41] <gaal> cool! i just svn upped, am making a clean build and popping into the shower.

[06:45] *** nothingmuch joined
[07:10] <gaal> embedded parrot is still broken on colinux.

[07:14] *** azuroth joined
[07:16] <dduncan> morning

[07:16] <gaal> hey dduncan 

[07:17] <dduncan> so, afaik, all tests pass on normal haskell but 3 ext/ distros

[07:17] <dduncan> of those, 2 die and one hangs

[07:17] <dduncan> as of r 8877

[07:17] <dduncan> as of r8875, the hang was a die

[07:18] <gaal> on colinux, extrernal parrot doesn't seem to work at all!

[07:18] <dduncan> I've personally never been testing with anything but the pure normal haskell ... no options linked in at all

[07:18] *** BakedB joined
[07:19] <dduncan> is 'colinux' short for something?

[07:20] <gaal> dduncan: cooperative linux. it's a win32 process with a special driver that lets it run linux at very close to native speeds.

[07:20] <dduncan> I C

[07:20] <dduncan> that's fairly new, isn't it?

[07:20] <gaal> a year maybe?

[07:21] <gaal> from 2004 actually

[07:21] *** marmic joined
[07:21] <gaal> twice as old as pugs :)

[07:22] <hachi> and no longer maintained sadly, last I saw

[07:24] <gaal> hachi: I just got a note from the original author saying that it is, but slowly because he has other projects.

[07:25] <gaal> 2.6.10 isn't *that* bad.

[07:26] <hachi> no, it's not... I use it at my day job

[07:28] <gaal> oh! external parrot isn't even looked up in PARROT_PATH, no wonder it doesn't work

[07:28] <gaal> (I don't have parrot installed, just built in a homedir tree)

[07:28] <gaal> shouldn't it also look there, though?

[07:29] <gaal> in fact it should probably look there first...

[07:31] <audreyt> .rehi

[07:31] <gaal> yo!

[07:31] * audreyt resumes releng after lunch

[07:37] *** kcwu joined
[07:38] <gaal> oh, darn, I had an old parrot in my PATH :-(

[07:38] <gaal> audreyt: should PARROT_PATH take precedence?

[07:39] <gaal> removing the old parrot made it work :)

[07:39] <audreyt> gaal: I think so, yeah

[07:40] <gaal> ok, trying parrot emb first

[07:41] <gaal> whee, they both work now.

[07:41] <gaal> fixing the search order.

[07:41] <audreyt> whee

[07:44] *** iblechbot joined
[07:50] <kattana_> weeeeeeeeeee

[08:01] *** nothingmuch joined
[08:04] <svnbot6> r8878 | gaal++ | * change search order of external parrot, giving PARROT_PATH

[08:04] <svnbot6> r8878 | gaal++ |   precedence over PATH so that an old executable installed in the

[08:04] <svnbot6> r8878 | gaal++ |   system doesn't get in the way of a new one.

[08:04] <gaal> now, to do the same for embedded parrot. would that be in the makefile?

[08:05] <audreyt> Makefile.PL you mean?

[08:05] <gaal> audreyt: my imperative style in haskell is clunky, do you have a suggestion for how to improve it?

[08:05] <gaal> audreyt: yeah :)

[08:06] <audreyt> let me look... (just done with P::C::A triaging, only S::Infinite to go)

[08:06] <gaal> oh, style can wait for after the release :-)

[08:07] <gaal> hmm. Makefile.PL *looks* like it's doing the right thing for embedded parrot, but experiment showed it did not.

[08:07] <svnbot6> r8879 | audreyt++ | * triaging of Perl6::Container::Array finishes.

[08:11] *** webmind joined
[08:20] <svnbot6> r8880 | audreyt++ | * ditto for Perl6::Value::List - I gave up fixing from_single and force_todo'ed

[08:20] <svnbot6> r8880 | audreyt++ |   related tests.

[08:24] *** r0nny joined
[08:26] <dduncan> pulled r8880, and now making

[08:30] <dduncan> with P-C-A, nothing dies now, but one test fails

[08:30] <dduncan> t/array-operations.....FAILED test 26

[08:32] <dduncan> with P-V-L, all tests pass/todo

[08:33] <audreyt> ok

[08:33] <gaal> I'll have a smoke of 8880 up sometime... at t/builtins/control_flow now.

[08:33] <audreyt> retestnig array-operations

[08:33] <gaal> (that's pretty much in the beginning)

[08:34] <dduncan> it sure is

[08:34] <gaal> how long does an ext/-less smoke take nowadays?

[08:34] <dduncan> I think about 2/3 of the time of an ext-with smoke

[08:34] <dduncan> for me, both together take 2 hours

[08:34] <audreyt> ~30min here

[08:35] <dduncan> normal haskell runcore

[08:35] <audreyt> ditto

[08:35] <dduncan> audreyt, what kind of hardware do you have?

[08:35] <dduncan> mind you, mine's 3.5 years old

[08:35] <audreyt> mine's pentium-M laptop 

[08:35] <audreyt> strangely, test 26 worksforme

[08:35] <dduncan> its merely dual-1.0 ghz G4

[08:36] <dduncan> I'll try running that test by itself

[08:36] <gaal> dduncan: you do know about test concurrency, yes? if you have a dual cpu box, that can speed things up.

[08:36] <audreyt> gaal: dduncan reported the other day that concurrency doesn't quite work for him

[08:36] <gaal> oh :(

[08:36] <dduncan> well, I set my process count to 2 in config.yml long ago, but it doesn't seem to do anything

[08:36] <audreyt> oh, it requires SMP?

[08:37] <dduncan> according to top, only 1 pugs process ran at a time

[08:37] <gaal> it doesn't require it, but the gains are very low w/o it

[08:37] <gaal> must have bitrotted: it's been a while since I had an smp machine to play with

[08:38] <audreyt> we don't have a MacBook-powered committer yet

[08:39] <audreyt> ok, I've finished this round of triaging here

[08:39] <lypanov> ummmmacbooks

[08:39] <audreyt> I'm making smoke now

[08:39] <svnbot6> r8881 | audreyt++ | * Finish triaging for Set::Infinite.

[08:41] <gaal> we should add a progress bar to the harness. :-)

[08:41] <audreyt> good idea :)

[08:41] <audreyt> gaal: have some cycles to catch up the remaining chglogging?

[08:41] <gaal> sure

[08:41] <audreyt> woot

[08:41] <audreyt> I'll move back to Taipei from Tamsui

[08:41] <audreyt> the MRT takes ~2hr

[08:42] <audreyt> so maybe a preflight tarball once I hit taipei

[08:42] <dduncan> not ok 26 - kv #   Failed test (../t/array-operations.t line 98, column 3-27)#   Expected: '1'#     Actual: 'undef'

[08:42] <audreyt> will work on other polishing / sanity check on MRT

[08:42] <dduncan> that is the one that failed for me ... it did not say todo

[08:42] <gaal> audreyt: if nobody had edited the chlog after me, you and stevan have to add your piln/mm stuff

[08:42] <audreyt> gaal: sure, will do

[08:42] <gaal> cool

[08:44] <audreyt> dduncan: r8882

[08:44] <svnbot6> r8882 | audreyt++ | * force_todo an erratic feailure in P::C::A as reported by dduncan.

[08:44] <dduncan> I have pulled r8881, currently retesting Set-

[08:46] <dduncan> now pulled r8882

[08:46] <dduncan> Set-Infinite passes all its tests

[08:47] <dduncan> now retrying container

[08:48] <dduncan> that all passe

[08:48] <dduncan> so I'm not aware of any more pugs test failures

[08:49] <audreyt> excellent

[08:49] <audreyt> that means we probably have a green tree now

[08:49] <dduncan> since its almost 1am, I don't plan to stay up to smoke/test any release candidate now

[08:50] <audreyt> nod

[08:50] <dduncan> if, for whatever reason, that happens in around 10 hours, I can do it then

[08:50] <audreyt> I'll see you tomorrow :)

[08:50] <dduncan> otherwise I'll just smoke the actual cpan release

[08:51] <audreyt> k

[08:51] <audreyt> sleep well

[08:51] <svnbot6> r8883 | audreyt++ | * capture.t: disable the erratically-failing tests.

[09:17] <svnbot6> r8884 | gaal++ | ChangeLog to 8884

[09:20] <gaal> smoke up, has errors. looking

[09:20] <gaal> # http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.10-r8880-linux-normal--1138699085-2604--9075-8486-589-1255-900-0--7434cbdf7ecb18134078ed503cd8b922.html

[09:22] <gaal> they're (almost) all parrot related crashes it seems

[09:29] <gaal> it may be difficult to make the first test in t/unspecced/times.t fit all sizes

[09:30] <gaal> it tends to fail on my machine

[09:32] <gaal> gotta go for ~2hr

[09:32] *** kane_ joined
[09:44] <svnbot6> r8885 | audreyt++ | * stdrules.t: skip_rest the erratically-failing tests.

[09:44] <svnbot6> r8885 | audreyt++ |   (/me praises city-wide (albeither intermittent) wireless network)

[09:45] <audreyt> hm, my brain-autocompletion sees "eit" in "albeit" and completetd "either"

[09:47] <wolverian> heh.

[10:07] *** nnunley joined
[10:46] <gaal> albethernet?

[10:55] *** nothingmuch joined
[11:10] *** G2 joined
[11:24] *** leo_ joined
[11:29] *** comet^ joined
[11:38] *** EdLin joined
[11:51] *** Alias_ joined
[11:56] *** Alias_ left
[11:58] *** kcwu joined
[12:16] <nothingmuch> FYI: http://www.osdc.org.il/schedule.html

[12:24] *** drbean joined
[12:25] *** pjmm joined
[12:55] *** RNoise joined
[12:58] *** iblechbot joined
[13:14] *** kolibrie joined
[13:16] *** Baked joined
[13:32] *** G2 joined
[13:54] <gaal> so, how's the takeoff taking off? I'm off to grab some lunch but will be back soon for preflight help

[14:06] *** Qiang joined
[14:13] *** rantanplan_ joined
[14:25] *** sysfault joined
[14:25] *** sysfault left
[14:26] *** Baked left
[14:26] *** hugues23 joined
[14:27] *** cdpruden joined
[14:27] *** Baked joined
[14:28] *** Baked left
[14:41] <Juerd> audreyt: Could you make darcs start niced please?

[14:41] <Juerd> I'll renice the running process

[14:42] *** chris2 joined
[14:43] <rafl> Juerd: Do we still have performance problems?

[14:43] <Juerd> rafl: No

[14:43] <Juerd> rafl: But darcs runs continuously, and the CPU still is a simple pentium 4

[14:44] <Juerd> darcs uses close to 100% cpu

[14:44] <Juerd> (darcs tag, that is)

[14:45] <rafl> Ah..

[14:45] <stevan_> audreyt: ping

[14:50] * Juerd wonders if darcs is used for anything

[14:52] <webmind> what is it ?

[14:52] <Juerd> A revision system

[14:53] <webmind> k

[14:54] *** stennie joined
[14:54] <lypanov> i think its just a backup system no?

[14:55] <Juerd> I suspect it's nostalgia

[14:55] <stevan_> lypanov: no, its a VCS written in Haskell

[14:56] <stevan_> Juerd: I think you are correct, I dont think we have many Darcs users left 

[14:56] <lypanov> stevan_: yeah... i know

[14:56] <lypanov> stevan_: i mean. its a back vcs only. not the main one

[14:56] * lypanov uses darcs principally :P

[14:56] <stevan_> lypanov: oh,.,. I see

[14:56] <stevan_> :)

[14:56] * lypanov grins

[14:56] <stevan_> lypanov: yeah I am not sure anyone but you uses it then :)

[14:56] * lypanov giggles

[14:56] <lypanov> i know plenty :)

[14:57] <lypanov> i don't use the pugs darcs tho

[14:57] <lypanov> i learnt svk recently anyways

[14:57] <stevan_> lypanov: no, I mean for pugs

[14:57] <lypanov> not even i use it for pugs ;)

[14:57] * stevan_ knows a few non-pugs-hacking darcs users :)

[14:57] <lypanov> ;)

[14:57] * stevan_ adds lypanov to the list ;)

[14:58] <lypanov> ;)

[14:58] * lypanov is using svk for his new projects tho

[14:59] <stevan_> svk is very nice :)

[14:59] <stevan_> clkao++

[14:59] * lypanov agrees

[14:59] <lypanov> i chatted to him 6 months back and was more than impressed, but couldn't get the darn thing installed :P

[15:00] <lypanov> now i turn around to find .dmg's that Just Work

[15:00] <stevan_> yeah, I had the same issues,.. the .dmg made my post-Tiger-upgrade-svn-install job much easier too :)

[15:01] * lypanov grins

[15:03] <rafl> pugs tells me: Could not find module `plugins'. But ghc-pkg list shows plugins. Any pointers?

[15:05] * robkinyon wishes he could use a .dmg

[15:06] *** vel joined
[15:15] *** cdpruden joined
[15:22] <SamB> rafl: pugs says that, or the configure/build stuff says that?

[15:25] <rafl> SamB: ghc called by Makefile.PL.

[15:25] <rafl> SamB: It looks to me like try_compile is used wrong.

[15:26] <audreyt> rafl: that might be the case, yes

[15:26] <rafl> SamB: You normally call it try_compile($code, $ghc, $run) where $run is optional. But for the plugins package it's called like try_compile($code, $ghc, '-package', 'plugins')

[15:26] <audreyt> I'll prod dons again

[15:26] <svnbot6> r8886 | audreyt++ | * some light editing of ChangeLog

[15:27] <SamB> what is $run?

[15:27] *** rodi joined
[15:27] <audreyt> $run is a misfeature.

[15:27] <audreyt> removed.

[15:28] <audreyt> rafl++

[15:28] <Juerd> audreyt: Have you read my lines?

[15:29] <audreyt> Juerd: yes, will do

[15:29] <svnbot6> r8887 | audreyt++ | * remove the $run misfeature in Makefile.PL's try_compile;

[15:29] <svnbot6> r8887 | audreyt++ |   it was added to probe libreadline, but is not used anymore,

[15:29] <svnbot6> r8887 | audreyt++ |   and furthermore interferes with hsplugins probing.

[15:29] <Juerd> Thanks

[15:29] *** Eimi joined
[15:29] <audreyt> done

[15:30] <Juerd> audreyt++

[15:32] <rafl> Can I build pugs against parrot without having a parrot executable installed?

[15:32] <rafl> (I have headers and libs, though)

[15:32] <rafl> audreyt: Thanks!

[15:33] *** putter joined
[15:34] <audreyt> rafl: maybe. not sure. probably yes

[15:35] * rafl tries

[15:35] <svnbot6> r8888 | audreyt++ | * bump version to 6.2.11.

[15:35] <rafl> It should result in linking ./pugs to libparrot.so.$(SOVERSION) if it worked, right?

[15:35] <audreyt> yup

[15:36] * rafl wonders how it knows which libparrot to use.

[15:36] <audreyt> it asks parrot-config iirc

[15:36] <rafl> I made parrot install both shared and static libraries.

[15:36] <audreyt> nod

[15:37] <rafl> Ah, parrot-config libparrot gives $(LIBPARROT_SHARED).

[15:37] <audreyt> I'm dozing off already... will check back in 9hrs

[15:37] <audreyt> I think I'll call for a round of general test for pre0

[15:37] <rafl> The Makefile needs interpolate that somehow.

[15:37] *** nothingmuch joined
[15:39] <wolverian> hm, reading the "Haskell is not not ML" paper at lectures is a great way to speed up your learning. you really see how much more interesting the paper is than the lecture. :)

[15:39] <audreyt> rofl

[15:39] <audreyt> okay, pre0 up.

[15:39] <putter> anyone going to osdc, please nag Beni Cherniavsky to get his "S-expression syntax for Python with 1st-class macros" stuff online.  tnx ;)

[15:40] *** audreyt changes topic to: 6.2.11-pre0 calls for test: http://xrl.us/jsza | pugs.blogs.com | pugscode.org | pugs.kwiki.org | paste: http://paste.lisp.org/new/perl6 or http://sial.org/pbot/perl6

[15:40] <putter> yay

[15:40] <audreyt> and with that... goodnight :)

[15:40] * audreyt waves &

[15:40] <putter> g'night audreyt

[15:41] *** eric256 joined
[15:41] *** eric256 left
[15:43] *** nothingmuch joined
[15:44] *** vel joined
[15:45] *** _bernhard joined
[15:45] *** nothingmuch_ joined
[15:47] *** hexmode joined
[15:50] *** stevan_ is now known as stevan

[15:52] <putter> I've never been clear on whether these represent a problem or not (nor on whether they are fixable):

[15:52] <putter> Compiling Pugs.AST         ( src/Pugs/AST.hs, dist/build/src/Pugs/AST.o )

[15:52] <putter> /tmp/ghc21601.hc: In function `PugsziAST_zdwcharInc_entry':

[15:52] <putter> /tmp/ghc21601.hc:39: warning: cast to pointer from integer of different size

[15:53] <putter> Two more in Pugs.Lexer

[15:54] *** justatheory joined
[15:57] <putter> boom.  build failure with r8888 (HEAD).

[15:57] <putter> Building Pugs-6.2.10...

[15:57] <putter> Build failed: 0 at util/build_pugs.pl line 86.

[15:57] <putter> make: *** [pugs] Error 2

[15:57] <putter> Command exited with non-zero status 2

[15:58] *** elmex joined
[15:58] <putter> anyone successfully make'ed pre0?

[15:58] <gaal> putter: just starting a build now.

[15:59] <gaal> could be the default heap size needs to be increased

[15:59] *** vel joined
[16:00] <putter> sometimes the preN's also get out of sync (local changes) vis svn HEAD

[16:00] *** sub_chick joined
[16:00] <gaal> svn was not very busy when audrey created the image, so probably not this time

[16:00] <gaal> but when you build a pre, you get a fresh config.yml

[16:01] <putter> ok, pre0 has a slightly different makefile than 8888

[16:02] *** vel joined
[16:02] *** eric256_ joined
[16:02] *** eric256_ left
[16:02] <putter> hmm, as a separate issue, pre0 has a somewhat pruned file tree.  was the exclusion of ./debian and examples/cookbook, and the other stuff, intentional?

[16:03] <putter> of simply MANIFEST oversights?

[16:05] <putter> gaal: btw, I hope I didnt leave ChangeLog too messy.  I was separating the "grovel over the log and snag stuff for log" task from the "make log readable" task.  and never did the latter.

[16:06] <putter> rafl: ./debian should be in the release, yes?

[16:06] <rafl> putter: No

[16:06] <gaal> putter: me either :) audreyt++ seems to've done that :-)

[16:07] <putter> rafl: ok. isn't.

[16:09] <putter> gaal: do I have to do anything to have changed config.yml take effect?  uncommented the heap line.  simply make fails with the same error.  hmm, 8885 worked.  svn log'ing...

[16:09] <gaal> putter: yes, perl Makefile.PL again.

[16:09] <gaal> putter: fwiw, I'm now in Pugs.Parser and no errors yet :)

[16:10] <putter> it did the first compile pass, created the .a, and then boom.

[16:10] <putter> ok, will try Makefile.PL

[16:10] <gaal> that does sound like a heap exhaustion problem

[16:11] <gaal> though those usually give evacuate or other errors

[16:12] <putter> I also note r8888 is still saying its 6.2.10, despite r8888 ("change to 6.2.11")

[16:13] <gaal> whoops, I got the same error as you.

[16:14] <gaal> stracing.

[16:14] <putter> 500m heap has no effect

[16:16] *** eric256_ joined
[16:16] *** eric256_ left
[16:18] <gaal> I think I fixed it, testing.

[16:19] <putter> ?

[16:19] <gaal> it created the .a with 6.2.10, but make looked for 6.2.11.a and exited after not finding it.

[16:21] <putter> ah, Pugs.cabal.in ?

[16:21] <gaal> fixed.

[16:21] <svnbot6> r8889 | gaal++ | bump version number to 6.2.11 in Pugs.cabal.in; this was what was

[16:21] <svnbot6> r8889 | gaal++ | causing preflight 0 to fail.

[16:23] <gaal> strace++ :)

[16:23] <putter> gaal++ :)

[16:24] <gaal> that's kind of you to say, after I sent you on a wild moose chase :)

[16:24] <putter> Though it's kind of sad that our system is so opaque that the easiest thing to do is to go all the way around it and look at it's interaction with the os.

[16:24] *** Bit-Man joined
[16:26] <gaal> we rely on a lot of existing stuff... to achieve cleanliness with our level of variety would mean implementing a lot of that ourselves

[16:28] <putter> chasing wild goose/moose - caveat - safe distance from a mad goose is order 10 m.   and they will generally flee.  but low order 100 m may not keep you safe from a pissed moose.  and a moose chased is likely to be pissed.

[16:29] <gaal> Attention Preflight team: if you want to test out pre0, please s/6\.2\.10/6.2.11/ in your Pugs.cabal.il *before* running make. If you forgot and get a build error, please rm src/Pugs/PreludePC.hs and pugs && perl Makefile.PL && make

[16:29] * gaal never meta moose he didn't like

[16:29] <putter> "it is now safe to move around the Cabal"

[16:29] <putter> ;)

[16:30] <putter> oh, *groan*  # meta moose

[16:30] <putter> that's reaaally bad

[16:31] <gaal> There was once a Metamoose Gaalery

[16:31] <putter> ?

[16:32] <gaal> a gaalery of metamoose. what? :)

[16:32] <gaal> if we meet in YAPC::NA this year, I'll show you :)

[16:32] <putter> oh, oh, oh, ouch

[16:34] <gaal> ouch is what I just said. hitting the power button with my knee wasn't so smart. :(

[16:34] <putter> :/

[16:35] *** awwaiid joined
[16:36] <putter> stevan: is the exclusion of misc/Perl-MetaModel/lib/Perl from the release intentional?

[16:37] <putter> oh, its an empty directory.

[16:38] *** elmex joined
[16:38] <putter> which leaves the disappearance of examples/cookbook as the big oddity

[16:39] <gaal> smoke entered.

[16:42] <putter> 'Edit your settings in config.yml." still seems excessively imperative.  there is really no need to edit config.yml.

[16:45] <gaal> go ahead and soften the phrasing

[16:46] <putter> ok

[16:46] <Juerd> Someone just changed all /does something/ to "do something" in POD I wrote.

[16:47] <putter> pil2js has a lot of regression.  but I guess not something to worry about for this release.

[16:47] <Juerd> No longer "Creates a new object and returns it.", but "Create a new object and return it."

[16:47] <Juerd> Now *that* is excessively imperative.

[16:49] *** Yoti joined
[16:50] <lypanov> it doesn't read well at all for documentation...

[16:51] <Juerd> It's just plain wrong.

[16:51] <lypanov> yeah

[16:52] <Juerd> Documentation isn't comments that translates what the code does. 

[16:52] <Juerd> [this method] Creates a new object and returns it.

[16:52] <Juerd> The guy who changed that apparently wasn't aware of that linguistic implication.

[16:52] <putter> so config.yml only contains _some_ settings.  ie, no parrot or embedded info.  ok...

[16:52] <Juerd> What I don't get is that he *changed* my documentation.

[16:53] <putter> welcome to anarchy ;)

[16:53] <Juerd> I can imagine that one writes new documentation in that way, but not that one would actively go and screw existing documentation that is written according to widely used standards

[16:54] <SamB> clearly, this guy is not lazy enough

[16:54] <Juerd> I would change his documentation if he wrote it imperatively :)

[16:54] <Juerd> I'm also not lazy in that respect.

[16:54] <SamB> well, people with bad taste should be lazy

[16:54] <Juerd> SamB++

[16:55] <putter> gaal: how about something like

[16:55] <putter> *** Default build config file created.

[16:55] <putter>     You can edit some settings in $filename (and then rerun Makefile.PL).

[16:55] <putter> thoughts?

[16:56] <gaal> putter: sounds good to me!

[16:56] <stevan> putter: misc/Perl-MetaModel is a very old attempt at a p6 mm.. it is pretty much disposable

[16:58] <putter> now, now.  there are some schools of documentation writing in which the change is clearly the Right Thing(tm).  I don't agree with them, but that isn't to say they don't have principled reasons for believing it, or that the editor didn't think they were correcting obvious problems.

[16:59] <putter> stevan: ok.  so that leaves only examples/cookbook as a possibly odd omission from pre0.

[16:59] <stevan> putter: I guess so,.. I am without enough tuits to participate in releng right now :(

[16:59] <putter> after this release is out, before the next, perhaps we should do some "spring cleaning".

[17:00] <stevan> no doubt, a very very good idea

[17:00] <putter> stevan: 's ok.  $job++

[17:01] <putter> (anyone needs a p5. py, rb, lisp, prolog, etc, hacker in the Boston area, email putter...;)

[17:01] <putter> (dduncan also sounds like he could use some remote p5 work:)

[17:02] <putter> s/use/also use/

[17:07] <svnbot6> r8890 | putter++ | inc/PugsBuild/Config.pm: Changed

[17:07] <svnbot6> r8890 | putter++ |   *** Default build config file created. Edit your settings in $filename.

[17:07] <svnbot6> r8890 | putter++ | to

[17:07] <svnbot6> r8890 | putter++ |   *** Default build config file created.

[17:07] <svnbot6> r8890 | putter++ |       You can edit some settings in $filename (then rerun Makefile.PL).

[17:07] <svnbot6> r8890 | putter++ | to make clear that editing is not required.

[17:07] <putter> 30/30 skipped: BACKEND_PUGS does not support lazy lists yet depends     lazy lists

[17:07] <putter> err, what?

[17:08] <gaal> that's the output of :depends, isn't it?

[17:08] <putter> ahhhh

[17:11] *** stennie joined
[17:13] <svnbot6> r8891 | putter++ | lazy_lists.t: added a period to the skip message so the test log reads clearer.

[17:14] <putter> is anyone currently actually using embedded parrot?

[17:15] *** stennie joined
[17:15] <putter> if not, it could be worth adding a note to INSTALL "using external parrot is recommended for this release"

[17:16] <putter> anyone at all using embedded parrot?  or recently?

[17:17] <gaal> putter: this build I'm smoking is embparrot

[17:17] <gaal> (...I hope :-)

[17:17] <gaal> ah, and there are crashes, I just noticed :(

[17:17] <gaal> t/rules/from_perl6_rules/prior.t 

[17:18] <gaal> t/rules/from_perl6_rules/litvar.t

[17:18] <gaal> pugs: internal error: stg_ap_p_ret

[17:19] <putter> gaal: you have a, err, "normal" platform?

[17:19] <gaal> is colinux normal? :)

[17:20] <gaal> most of the time emparrot does work, these tests must be ram-hungry.

[17:22] <putter> ah.  my x86_64 has been segfaulting for a while, but a good default on such things is "it's just me".

[17:22] <putter> anyone running vanilla linux/bsd (or even windows:)  with embedded parrot?

[17:23] <putter> re "is colinux normal?", err, no.

[17:24] * cdpruden builds with parrot embedded, but doesn't really run anything with that backend

[17:25] <gaal> cdpruden: if you do "a"~~/a/, you're using PGE on parroy

[17:25] <gaal> *parrot

[17:25] *** Amnesiac joined
[17:25] <putter> cdpruden: could you do a  ./pugs -Iblib6/lib t/rules/from_perl6_rules/prior.t  and see if it works?

[17:25] <gaal> putter: nope, parrot emb doesn't work on win (tried it)

[17:25] <cdpruden> sure

[17:25] <putter> tnx

[17:26] <putter> if cdpruden's also goes boom, and perhaps even if it doesnt, it would seem an INSTALL commented is warranted.

[17:26] <cdpruden> segfault on 8864; sorry, not on release yet (so maybe that doesn't help) debian

[17:27] <putter> cdpruden++  thanks

[17:27] <cdpruden> updating to see if release is any different

[17:30] <cdpruden> putter, still segfaults with the latest svn

[17:30] <gaal> cdpruden: can you try all of t/rules to see if some pass?

[17:31] <cdpruden> sure

[17:31] <gaal> prove t/rules

[17:31] <gaal> (assuming you have HARNESS_PERL=./pugs and PERL6LIB=blib6/lib )

[17:34] <svnbot6> r8892 | putter++ | INSTALL: "Using embedded parrot is NOT recommended with this release (6.2.11)."

[17:35] <gaal> http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.11-r0-linux-normal--1138728858-3210--11109-10519-590-1457-1109-0--855915cdd2fdf2c558a609c214440c83.html

[17:35] <gaal>  613 files  11109 test cases: 10519 ok, 590 failed, 1457 todo, 1109 skipped

[17:35] <clkao> hm,, changelog doesn't have new backend jsperl5 ?

[17:35] <gaal> the failed are mostly parrot related.

[17:35] <gaal> clkao: please add anything you thing should be there

[17:35] <clkao> ok.. but i am going to sleep

[17:36] <putter> gaal: audreyt was seeing parrot instability even with external parrot.  so I think parrot is just flakey with this release, and minimizing the flakiness by recommending against embedded is the right thing, regardless of additional cdpruden results.

[17:36] <gaal> that request also goes out to putter, stevan, iblech, kane, rafl, fdglock, etc :-)

[17:37] <gaal> okay. the only other problem on my machine is times, for which it is apparently too fast.

[17:38] <gaal> other than that, I'm good for release.

[17:38] <svnbot6> r8893 | putter++ | Makefile.PL: "Linking against Parrot is NOT recommended with this release 6.2.11."

[17:39] <putter> INSTALL should probably say test-pir instead of pirtest, but let's punt, as "why expose an api if it may change in the next release".

[17:40] <putter> gaal: your undef.t failures were rules related?

[17:41] <gaal> putter: yes.

[17:41] <putter> is the times.t problem easily fixable?

[17:41] <gaal> it's a rule that doesn't match. I think it's one of my first commits to pugs :-)

[17:42] <putter> :)

[17:42] <gaal> putter: the times.t problem is that there's a busy loop used as a subsecond sleep. of course it's system dependent.

[17:42] <gaal> I don't know of a good way to fix it

[17:43] <theorbtwo> use Time::HiRes.

[17:44] <putter> gaal: if you bump the loop up an order of magnitude, to 10_000, does it pass for you then?

[17:45] <putter> theorbtwo: it's a  <look at time> for 1..1000 { 1+1 } <see if time changed>

[17:45] <putter> err, see if times() changed.

[17:47] <pasteling> "cdpruden" at 69.212.29.10 pasted "putter, from_perl6_rules -- all failed w/ embedded parrot" (111 lines, 5.2K) at http://sial.org/pbot/15682

[17:47] <putter> thanks cdpruden.

[17:47] <gaal> putter: it passes, yes, but that would be gratituously slow on slow machines.

[17:47] <cdpruden> np

[17:48] <gaal> hey wait! eairlier today embparrot didn't always segfault for me. why is it doing that now?

[17:51] <putter> ok, a 5-10 sec difference at 1GHz.  could you try 5000?   that seems perfectly reasonable.  even at 233 MHz :)

[17:51] * putter looks at gaal, bemused ;)

[17:53] <gaal> 5k worked too.

[17:54] <gaal> shall I commit?

[17:54] <gaal> seems silly.

[17:54] <gaal> I mean, what is it testing? what cosmic significance does 5k have? :-)

[17:55] <gaal> but ok, ok :-)

[17:55] <putter> lol

[17:57] <putter> actually, maybe that's not such a good idea

[17:57] <svnbot6> r8894 | gaal++ | times.t: update fudge value so test passes on fast machines

[17:59] <putter> oops.  ah well.  fine.  putter turns out to be running at 3GHz.   so that's perhaps a 15-30 hit on a 1GHz, twice that on 500MHz.  eh, still fine.

[17:59] <putter> but embedded was working for you earlier today?

[17:59] <putter> There was a change to Parrot.hsc at one point.

[18:00] <putter> s/15-30/$1 sec/

[18:00] <gaal> remember when?

[18:00] <putter> checking...

[18:01] <putter> r8848

[18:01] <gaal> no, it worked after that

[18:01] <putter> ah.  curious.

[18:02] <putter> the only other change to Parrot.hsc was the search path change of r8878

[18:02] <gaal> that was my own fix :)

[18:02] <putter> yeah :)

[18:03] <gaal> well, rebuilding HEAD now to see what happens there.

[18:03] <putter> so it worked then... hmm...

[18:04] <putter> and it doesnt look like anything significant has changed since.  Makefile.PL tweaking which shouldnt have an impact.  ???

[18:05] <gaal> no :(

[18:05] <gaal> well, this build will be ready in a while and if it works there, i'll just diff the trees.

[18:05] <gaal> bbiab &

[18:06] *** vel joined
[18:07] <putter> r8889  make test  passes.

[18:09] <putter> so the only issues I have are - what happened to examples/cookbook?; - pil2js is buggy (but I'm fine for release); - embedded parrot seems to have issues (but I'm fine for release); - ChangeLog is still marked as "needs editing".

[18:11] *** feng123 joined
[18:11] *** f0rth joined
[18:14] <putter> bbiab

[18:15] *** Limbic_Region joined
[18:26] <gaal> eep. r8894 embparrot segfaults for me. I'll try with external parrott...

[18:28] <putter> given that this is the "anniversary release", and the first in a while, and thus likely to draw attention, let's be careful with expectation management.

[18:28] <gaal> the first anniversary release in a while :)

[18:29] <putter> ie, there are regressions, but we're releasing anyway because it's been a while, and we're intentionally not fixing some things because as soon as this release is out the door, we're doing a major core change / overhaul.

[18:29] <putter> :)

[18:35] *** feng joined
[18:36] <putter> audreyt: btw, re "triage", my understanding is that's "focused on assessment, quick look at everything".  tag the dead, tell the mobile to move, briefly touch the critical, and the key "and move on".  so when it comes down do debugging individual files with known issues, I don't think that's "triage" any more.  random thought. :)

[18:38] *** Yoti left
[18:38] <gaal> external parrot does work for me.

[18:39] *** Debolaz joined
[18:42] *** sub_chick left
[18:45] <putter> med: http://en.wikipedia.org/wiki/Triage  http://nielsenhayden.com/makinglight/archives/006708.html soft: http://software.ericsink.com/articles/Four_Questions.html   http://mail.python.org/pipermail/python-dev/2000-September/009414.html

[18:46] <putter> http://geekswithblogs.net/srkprasad/archive/2004/08/20/9961.aspx http://www.stickyminds.com/sitewide.asp?ObjectId=6323&Function=DETAILBROWSE&ObjectType=COL

[18:48] <putter> http://channel9.msdn.com/ShowPost.aspx?PostID=26641

[18:48] <putter> ok, that's it ;)

[18:51] <putter> one more  http://wiki.kdenews.org/tiki-index.php?page=Bug+Triage

[18:51] *** xinming joined
[18:58] *** vel joined
[19:04] <Juerd> Will Perl 6 have goto?

[19:04] <gaal> טקד

[19:04] <gaal> םםפד

[19:04] <gaal> oops

[19:04] <gaal> yes.

[19:05] <Juerd> Even goto LABEL?

[19:05] <gaal> Juerd: Test.pm even uses goto &sub

[19:05] <gaal> I think it probably will have goto LABEL, yes.

[19:06] <gaal> but then again, I'm basing this on recollection of a pretty old post of Larry's.

[19:07] <Juerd> goto &sub is different, and not what I meant. I was not clear enough.

[19:07] <Amnesiac> longjmp!

[19:10] <Limbic_Region> Juerd I asked this question myself on the list

[19:11] <Limbic_Region> I am searching for the reply so that I don't tell you something incorrectly

[19:12] <Amnesiac> L~R

[19:13] <Limbic_Region> salutations Amnesiac

[19:14] <putter> audreyt: ok, so maybe the ongoing use of "triage" is fine.  never mind. ;)

[19:14] <Limbic_Region> Juerd - If you want to search for "Formal Parameters To While Blook", the first response from luqui implies the answer is yes but not explicitly

[19:15] <Limbic_Region> and did the cpu issue on feather get resolved?

[19:16] <Juerd> Limbic_Region: Thanks.

[19:16] <Juerd> Limbic_Region: It was a memory issue. The memory was somehow very slow.

[19:17] <Juerd> Limbic_Region: It was resolved by using a combination of three entirely different memory modules AND hard coding the timings in the BIOS. Typically, a very bad setup. But at least it works.

[19:17] <Limbic_Region> odd - I have never heard of memory being slow.  I have heard of having the wrong kind of memory and fast memory but not slow memory

[19:17] *** beppu joined
[19:17] <xinming> audreyt: in 8840 revision, Pugs will segfault, But Now, the segfault appear again. :-/

[19:17] <putter> goto with in a block is straightforward.  so even if the language doesnt provide it, an ast macro can.  goto's across blocks are much more problematic, and thus much more difficult to do a macro for, and perhaps less likely to be in the language.

[19:17] <Juerd> This was very fast memory, but not in this board.

[19:17] <Juerd> It's the most expensive non-ECC memory available to me.

[19:17] <Juerd> non-ECC non-registered

[19:17] <Juerd> It's a mobo/ram incompatibility

[19:18] <Juerd> That even only occurs with dual sided memory. The 512 MB dimm I had from exactly the same brand and series, did work well.

[19:20] <putter> what happens if the memory's actual latency > what the mobo thinks it is?

[19:23] <putter> http://dev.perl.org/perl6/doc/design/syn/S04.html says "To jump into the next when block you must use a goto."

[19:28] <xinming>          for @{$<pairs>} => $key, $val {

[19:28] <xinming>              say "Key: $key";

[19:28] <xinming>              say "Val: $val";

[19:28] <xinming>          }

[19:28] <xinming> by the way, Is this example above valid?

[19:29] <putter> Apr '05 larry has goto LABLE: http://groups.google.com/group/perl.perl6.language/browse_thread/thread/c06c8f07c23cab9/4c6c4e39f58b2088?lnk=st&q=goto+perl6.language&rnum=2&hl=en#4c6c4e39f58b2088

[19:29] <putter> LABEL even

[19:33] <xinming> anyone here would confirm my question?  for @{$aRef} => $odd, $even { ... } would work?

[19:33] <Juerd> I remember that post, and my reply :)

[19:33] <Juerd> Thanks, putter

[19:34] <xinming> It's from S05.

[19:34] <putter> np.  there have been other mentions since, but perhaps not in a thread which included @larry[0].

[19:35] <putter> xinming: shouldnt that be "->" rather than "=>"?  but I could be wrong.

[19:36] <xinming> putter: That's what I would ask, as => in S05 appeared many times.

[19:36] <xinming> which doesn't use '->'

[19:41] <putter> xinming: yeah, that looks like a bug.  note that S03 is using ->.  good catch.  I'm not sure how one reports Sxx bugs.  anyone?

[19:41] <xinming> putter: hmm, I might post it to p6l

[19:42] <xinming> bbl

[19:42] <putter> anyone?  how does one get Sxx bugs fixed?

[19:43] <gaal> putter: p6-l, I guess.

[19:43] <putter> ie, typos, rather than referals for reflection

[19:43] <gaal> bbl &

[19:44] * putter has very fuzzy recollection of someone saying "email me patches"...

[19:44] <putter> ok, tnx gaal.

[19:48] <putter> http://aspn.activestate.com/ASPN/Mail/Message/perl6-language/2620898   the design documents are all available from http://svn.perl.org/perl6/doc/trunk .  And I've already volunteered to review/apply patches to the design documents or forward them to the appropriate people for review -- there just haven't been a lot of patches submitted.  (p6l and/or p6c are probably appropriate forums for this.)

[19:48] <putter>  - Patrick R. Michaud

[19:49] <putter> I'm not sure whether that means emailing Pm directly, or p6l.  :/

[19:57] <putter>  

[20:01] <putter> audreyt: Since it's already Feb 1 where you are...  My congratulations and thanks for a year of Pugs.  It's a beautiful beast.  Thanks for letting us come along for the ride.

[20:01] <lypanov> :D

[20:05] <putter> xinming: so yes, emailing p6l sounds like a plan. xinming++

[20:11] *** vel joined
[20:13] <Juerd> Hm, I even already explicitly asked if goto will be in Perl 6

[20:14] <Juerd> And Larry's answer was: Hmm, well we do still have bare labels for loop control, so I'd

[20:14] <Juerd> probably still put goto LABEL into the same category.

[20:14] <Juerd> Which I interpret as "yes"

[20:14] <Juerd> This will need a hell of a lot of tests.

[20:15] <Juerd> And definitions. What does LABEL: my $foo; do, the second time it sees "my $foo", after being sent back to LABEL with goto LABEL?

[20:15] <Juerd> In Perl 5 it does nothing.

[20:15] <Juerd> (The value of $foo is not reset to undef)

[20:15] <Juerd> This is intuitive or counterintuitive depending on how much you know about Perl's guts.

[20:17] <Juerd> Message-ID: [email@hidden.address]
[20:28] <Limbic_Region> seen robkinyon

[20:28] <jabbot> Limbic_Region: robkinyon was seen 1 days 1 hours 36 minutes 49 seconds ago

[20:29] *** dduncan joined
[20:31] *** hexmode joined
[20:34] *** rodi left
[20:41] <robkinyon> limbic_region: pong

[20:43] <putter> Juerd: "L: my $foo;" seems clearish, given that declarations are currently described as relocated to the top of the enclosing block.  but what about  L: my $foo = bar();  ?  Does the initializer run again?  So yes, goto will need some limits.  Perhaps a heuristic might be "goto can only be used in cases which don't drive us nuts". ;)

[20:44] <Juerd> putter: That means: goto cannot be used.

[20:45] * putter is actually comfortable with the initializer being rerun in that case.  it's just a variant of  my $foo; loopy { $foo = bar(); }.

[20:46] <Limbic_Region> robkinyon - just wanted to let you know that I finished my quest to get arbitrarily nested loops that were dynamically constructed finished (in C)

[20:47] <putter> and actually, on reflection, working out a semantics for general goto might force the creation of a clean semantics for everything else :)

[20:47] <SamB> general goto?

[20:47] <SamB> that sounds... quite evil

[20:49] <robkinyon> limbic_region: How many lines?

[20:49] <Limbic_Region> 158 

[20:49] <putter> oh no no, evil would be being able to goto into the middle of a sub in a continuation in another thread.  hmm...! ;)

[20:49] <Limbic_Region> but really the meat is only about 100

[20:50] <robkinyon> huh ... that's pretty impressive

[20:50] <robkinyon> i'd like to see it, if you don't mind

[20:50] <Limbic_Region> I am looking to make it general purpose now which will stretch my C knowledge even further

[20:50] <putter> Limbic_Region: strictly nested?  or allowed to overlap?  (eg, Duff-ish games)

[20:51] <Limbic_Region> robkinyon - well, I will share it with you most definately but I would prefer to wait until I have a generic solution as the project I wrote it for is uber top secret

[20:52] <putter> reminder that #perl6 is logged...

[20:52] <Limbic_Region> putter - not sure, can you explain the difference

[20:52] *** DaGo joined
[20:54] <putter> http://en.wikipedia.org/wiki/Duff's_device  http://www.lysator.liu.se/c/duffs-device.html ,  re strictly nested, whether

[20:55] <putter> the loops are like { { {} } {} } or can be like {a {b {c a} b} c}  ;)

[20:56] <putter> where abc are subscripts identifying the the urm, size, of the particular loop.

[20:56] *** frederico joined
[20:56] <Limbic_Region> putter - strictly nested though I can see how to support overlap

[20:56] <dduncan> I am now smoking pre0

[20:56] <putter> neat :)

[20:56] <putter> dduncan: dont forget to edit Cabal

[20:57] <putter> first

[20:57] <Limbic_Region> the problem with supporting overlap is one of bookkeeping since each iteration the values (or even the number of loops) below the current point are subject to change

[20:57] <dduncan> I edited config.yml ... why would I edit something else?

[20:57] <putter> because pre0 has a bug which prevents successful compilation? ;)

[20:59] <putter> In Pugs.cabal.in, change 6.2.10 to 6.2.11

[20:59] <dduncan> something like that would prevent compilation?

[21:00] <dduncan> nevermind

[21:00] <dduncan> we want correct smokes

[21:00] <putter> it makes a 6.2.11.a and looks for .10, or the reverse, or some such.

[21:01] <dduncan> I also notice that that file says copyright 2005 only, not 2006

[21:01] <putter> oo, where

[21:01] <dduncan> line 5

[21:01] <dduncan> Pugs.cabal.in

[21:02] <dduncan> in the pre0 version

[21:02] * putter greps for all 2005...

[21:03] *** xinming joined
[21:03] <dduncan> I always do my copyrights as a range; in this case, 2005-2006 ...

[21:04] <dduncan> some people do comma lists, but I find the range works better

[21:06] <putter> ok, that looks like the only one.  good catch dduncan

[21:07] <putter> dduncan: would you like to fix it, or shall I?

[21:07] <dduncan> I'll do it

[21:07] <putter> k

[21:08] <putter> dduncan++

[21:10] <dduncan> I just did a search myself of my pugs checkout dir, and there are a lot more statements just saying copyright 2005

[21:11] <dduncan> eg, in debian/copyright

[21:11] <dduncan> what was your search pattern that you only found one occurance?

[21:13] <putter> debian isn't in the release ;)

[21:13] <dduncan> so the release excluded some of the repository?

[21:13] <putter> re cabal, it looks like the example format is Copyright: Copyright (c) 2004, Angela Author   http://www.haskell.org/libraryInfrastructure/proposal/index.html#EXAMPLE

[21:13] <putter> yes

[21:15] <putter> the exclusion I remain unclear on is examples/cookbook.  maybe they are out of date?

[21:15] <putter> rafl says the debian exclusion is the RightThing.

[21:16] <dduncan> reason?

[21:16] <putter> hmm, but the cabal example format from the proposal soo doesnt match the file.  so ignore me.

[21:17] <putter> debian?  no idea.  that's rafl's bailiwick

[21:17] *** BakedB left
[21:18] <dduncan> even if it's excluded, is there any disadvantage to adding 2006 to it?

[21:20] <putter> that's the thing.  I have no idea what constraints apply to ralf's stuff.  I could certainly imagine it mattering.  We're in picky debian legal land there.

[21:20] <dduncan> fine, I'll leave debian alone

[21:20] <dduncan> now, I was also going to change a few core "2005, 2006" to "2005-2006"; do you see any problem with that?

[21:21] <putter> I have no opinion.

[21:21] <putter> though I note that it's second guessing whoever edited the files in the first place.

[21:22] <putter> not to be negative or anything ;)

[21:22] <dduncan> I suppose, for minimal impact, I can then just format my change with the comma, to be consistant

[21:23] <putter> the ChangeLog still says "needs editing"... ;)

[21:25] *** vytautas joined
[21:25] *** justatheory joined
[21:25] *** xinming joined
[21:31] <dduncan> okay, I did just the one file

[21:35] <svnbot6> r8895 | Darren_Duncan++ |  r2279@darren-duncans-power-mac-g4:  darrenduncan | 2006-01-31 13:27:41 -0800

[21:35] <svnbot6> r8895 | Darren_Duncan++ |  Pugs.cabal.in : added 2006 to the copyright

[21:38] *** eedthf joined
[21:39] <dduncan> I also notice that whether or not the prelude is generated seems somewhat random

[21:40] <dduncan> like it tends not to happen on the first make, but does later, for example

[21:41] <dduncan> rather than smoke the pre0, I'll smoke the repository instead

[21:42] <dduncan> and Larry already posted that pre0 has some problems anyway

[21:42] <dduncan> on p6c

[21:44] <putter> the INSTALL file and Makefile.PL messages both now say embedded is not recommended with this release

[21:44] <putter> dduncan: re prelude, the regular pugs prelude, or the pil2js prelude?

[21:45] <dduncan> regular pugs

[21:45] <putter> oh.  that would be a new one.  what happened?

[21:45] <dduncan> this has happened for weeks, if not months ... where the pugs prelude is sometimes not generated

[21:46] <dduncan> besides the config.yml being set to do it, I'm not sure how to kick this

[21:46] <dduncan> the first run of pre0 did not build it, but my repository with r8895 does build it

[21:46] <dduncan> s/repository/checkout/

[21:47] <dduncan> anyway, I'm currently smoking r8895

[21:49] <putter> curious.

[21:49] <putter> platform?  ghc rev?  gcc rev?

[21:50] <dduncan> platform is darwin

[21:50] <dduncan> the behaviour occurred on both X 10.3.9 and 10.4.4

[21:50] <dduncan> gcc 3.3 and 4.0 respectively

[21:50] <dduncan> ghc 6.4.1 on both

[21:51] <putter> hmm.  I wonder who else is using darwin.  whether they are seeing something similar?

[21:52] <dduncan> sometimes it seems that a clean and a rebuild kicks it into being made

[21:52] <dduncan> as if some other generated file's presence was used as a clude that the prelude should be done

[21:52] <dduncan> s/d//

[21:54] *** xinming1983 joined
[21:59] *** Eimi joined
[22:01] <putter> Ok, that's just depressing.  Google search hit an Apr 2002 ruby-talk post I did looking forward to computational algebra support in p6.  Almost 4 years ago.  Sigh.

[22:05] <comet^> Don't worry Marvin^Wputter, things will get better. :P

[22:06] <Odin-> Ohhh. Here I am, brain the size of a planet...

[22:07] <Juerd> I've got this terrible pain in all the diodes down my left side.

[22:07] <Odin-> Guess which part they never replaced?

[22:07] <Juerd> His personality :)

[22:07] <Odin-> That, too.

[22:08] <Odin-> How old did he get to be, again? Twenty-seven times the universe?

[22:08] <putter> comet^: Oh my.  Until I saw Odin-'s comment, I thought you meant Marvin Minsky.  And got _very_ depressed.  Hey parking cars is fun!  >:)

[22:09] * Odin- shrugs. Maybe he did.

[22:10] <putter> (Minsky, ai researcher since forever, got to grow old while watching people _not_ explore his ideas.)

[22:10] <comet^> Nah, Odin- was correct.

[22:11] <comet^> That is depressing indeed.

[22:13] *** xinming joined
[22:19] * putter listens to Marvin's 1980's singles... ;)

[22:22] <Juerd> In 2002, people wondered if learning Perl 5 was worth the trouble, with Perl 6 in development.

[22:22] <Juerd> In 2006, people google for Perl 6, wonder why their distribution hasn't packaged it yet, and start learning Perl 5 anyway.

[22:23] <Odin-> Heeh.

[22:23] <Odin-> They can't be using Debian (unstable, at least), then.

[22:23] <comet^> Stephen Fry was a fitting choice for the voice of Marvin in the HHGTTG movie.

[22:24] <Odin-> He was?

[22:24] <comet^> Imo.

[22:24] <rhesa> Odin-: testing has a prehistoric version of pugs as well ;)

[22:24] * comet^ runs sid as always. :P

[22:24] <Odin-> rhesa: Neat.

[22:26] <rhesa> how risky would it be to switch my workstation to unstable (from stable)? note that i'm running amd64 (with a i386 chroot for testing stuff)

[22:26] <putter> Ooo, maybe we can do an April 1st pugs release! :)

[22:28] <comet^> Depends what you have running really and what do you mean on stable, rhesa.

[22:31] <rhesa> i don't think i'm running anything out of the ordinary. gnome, firefox, svn clients, perl, xmms, that's about it. oh, and OO in the chroot. I mostly work remotely through ssh, so local stuff is just email and browsing, and toying around with perl[56] :)

[22:31] <comet^> I think it would be relatively painless then.

[22:31] <comet^> You might have to edit a few configs here and there but that is all.

[22:32] <comet^> (Afaik)

[22:33] <comet^> I don't know if there is any official way to switch between versions, but I've always edited /etc/apt/sources.conf and just dist-upgraded.

[22:33] <rhesa> i wanted to see which pugs version is in unstable, but packages.debian.orgg is down

[22:33] <rhesa> yes, that's what i would do too.

[22:33] <comet^> again?

[22:33] <comet^> :\

[22:34] <rhesa> since jan 6th apparently

[22:34] <comet^> Version: 6.2.10-4

[22:34] <comet^> If that means anything thats what apt-cache show pugs gives.

[22:34] <rhesa> testing has 6.2.9

[22:34] <Juerd> audreyt: Please have a look at darcs; it still runs with nice 0

[22:35] <Juerd> audreyt: Darcs is resource hungry, and this affects build speed for people who are waiting for it.

[22:35] <rhesa> i suppose the upcoming release will be in unstable pretty soon, right? 

[22:35] <comet^> Yeah.

[22:35] <comet^> (I guess so, unstable is usually pretty quick)

[22:36] <Juerd> rhesa: Ask rafl 

[22:36] <putter> You would think there would be a webpage devoted to Marvin quotes.  But no.  Or if there is, I can't find it.  Unless it's the link where the host was down.  And even if I did find one, the link would be broken soon anyway.  And the web only gets worse from here on.

[22:36] <comet^> oh he's the maintainer of that deb. package

[22:36] <comet^> wikiquote?

[22:37] <comet^> http://en.wikiquote.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy#Marvin_.28The_Paranoid_Android.29

[22:38] <rhesa> thanks guys. i'll look at upgrading my box this weekend.

[22:41] <putter> Second billing to a dilettante.  And a human.  With human selected by committee.  That sounds like fun.

[22:41] <putter> drat.  s/human/humor/

[22:42] <putter> thanks comet^ :)

[22:42] <comet^> yw.

[22:43] <comet^> doh.

[22:44] <comet^> I'm really slow getting humor today.

[22:45] <putter> lol :)

[22:47] <comet^> Sorry.

[22:47] <comet^> :)

[22:49] <putter> Oh, so np.  I love delayed reaction "gotchas". ;)

[22:53] <putter> If the timing works out, one could have sooo much fun with a Apr 1 release.  "This weeks release of pugs adds support for ruby, python, R5RS scheme, Common Lisp and APL, all passing their respective language test suites.  No, we're not kidding.  Really.  This is not an April Fools joke!".  And maybe, perhaps, it just might not be...

[22:53] <integral> if not, we could stretch out development to next year...

[22:54] <putter> laughing.. too... hard... to... type...

[22:55] *** drbean joined
[22:55] <Juerd> It'd be fun if the first real release of perl 6 would be accompanied by no more than a mere notice saying "Okay, here it is. Have fun with it."

[22:55] <Juerd> That would be the ultimate anticlimax after years and years of development.

[22:58] <putter> :)

[22:59] <putter> does Haskell have parallel (ie, declarative) array/matrix ops?

[22:59] <putter> s/Haskell/ghc/

[23:03] <stevan> comet^: Marvin's voice in the movie was Alan Rickman, not Stephen Fry actually

[23:03] <integral> putter: there's some maps in Data.Array.IArray, but nothing like matrix multiplication

[23:03] <stevan> Alan Rickman was also Professor Snape in Harry Potter movies too :) 

[23:03] <comet^> hm, really?

[23:04] <comet^> I distintly remember Steven Fry's name.

[23:04] <stevan> comet^: just double checked on the website

[23:04] <stevan> Stephen Fry was the narrator

[23:05] <stevan> http://www.imdb.com/title/tt0371724/

[23:05] <comet^> ah

[23:05] <comet^> you're right.

[23:05] <comet^> Guess I was wrong.

[23:05] <putter> http://haskell.org/hawiki/HaskellOhSix has some fun numeric prelude discussion

[23:05] * stevan just watched it the other night, otherwise I would not have remembered or cared :)

[23:06] <putter> There's also http://haskell.org/hawiki/LinearAlgebra and http://haskell.org/hawiki/FunDeps

[23:07] <putter> integral: tnx

[23:08] * integral did some matrices coursework over finite fields (one version used type-level numbers!) with it; it's usable just

[23:09] <putter> oops, late.  bb(much)l. good night &  (still wondering about examples/cookbook)

[23:09] <putter> hmm, type level numbers... :)

[23:14] *** cdpruden joined
[23:16] <Juerd> Does Larry read this channel, did anyone contact him directly, or can he read minds? :)

[23:16] <comet^> His perl script reads minds.

[23:18] <Juerd> comet^++

[23:18] *** Debolaz2 joined
[23:20] *** Khisanth joined
[23:44] *** xinming1983 joined
[23:45] <xinming1983> ?eval my $a = "ABC"; $a ~~ s/A//;

[23:46] <xinming1983> ?eval "hello"

[23:46] *** evalbot_8877 is now known as evalbot_8895

[23:46] <evalbot_8895> bool::true 

[23:46] <xinming1983> died... :-P

[23:46] <evalbot_8895> "hello" 

[23:46] <xinming1983> how to compare 2 strings in perl 6?  is "ABC" == "abc"  correct?

[23:51] <Juerd> xinming1983: Are you serious?

[23:51] <Juerd> No, you're not.

[23:59] <xinming1983> ok, I think I know, using ===. :-/

[23:59] *** bluefeet joined
