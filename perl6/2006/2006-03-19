[00:01] *** Quell joined
[00:02] *** jisom joined
[00:07] *** Quell joined
[00:17] <svnbot6> r9650 | fglock++ | pX/../PCR - compiler works again; AST is much cleaner; several emitter nodes need to be rewritten

[00:41] <TimToady> theorbtwo: /<%hash1,%hash2>/ is not currently legal, but we do need *some* way of specifying that several grammatical categories should be treated in parallel, so that's a possible syntax, I suppose.  Though it doesn't come out to an <expr> inside.

[00:42] <TimToady> <%hash1|%hash2> seems more likely if we want it to track two hashes at once.

[01:33] <avar> TimToady: I've always wanted to say this to you: "Thanks for Perl, I owe you a beer";)

[01:34] <TimToady> yer welcome!

[01:38] <avar> ;)

[01:47] <theorbtwo> If it doesn't take general expressions, then using a syntax that doesn't make it look like a normal expression is probably a good idea.

[01:47] <avar> Hell, screw promises of beers on IRC, I'll just donate some money;) Donating to the Perl Foundation is the preferred way to do that right? (not a question to TimT-d in particular)

[01:48] * avar not familar with the whole donation system

[01:53] *** GabrielVieira joined
[01:53] <GabrielVieira> hi

[01:54] <TimToady> TPC works well for USians who want a tax credit.  Other countries might or might not have other ways to optimize.

[01:54] <TimToady> TPF, even.

[01:55] <avar> fleh, a last name is a required field;/

[01:58] <avar> Can I donate by fixing the donation form?;)

[01:58] <avar> It wants my last name and state/province, neither of which are applicable;)

[02:02] <GabrielVieira> haha

[02:08] *** Quell joined
[02:17] <svnbot6> r9651 | fglock++ | pX/../PCR - some tests pass

[02:21] <spinclad> sure, donate to The Phone Company.  you know you want to.  (why, that's true, you do want to.  listen to your inner voice.  it will just feel so... right.)

[02:22] <jisom> just hope they're not the next enron, of course if they are, they need the real money

[02:23] *** taeli joined
[02:51] <svnbot6> r9652 | fglock++ | pX/../PCR - implemented backtracking control ':'

[03:17] *** ayrnieu joined
[04:15] *** avar joined
[05:02] *** FurnaceBoy joined
[05:25] <Alias_> avar: You don't have a last name?

[05:25] <Alias_> avar: Who are you, Madonna?

[05:26] *** FurnaceBoy_ joined
[05:45] *** PerlJam joined
[05:45] *** qu1j0t3 joined
[06:01] *** iblechbot joined
[06:18] *** qu1j0t3 left
[06:39] *** vborja joined
[06:43] <Khisanth> Alias_: Prince!

[07:09] *** nothingmuch joined
[07:13] *** ayrnieu joined
[07:26] *** pdcawley joined
[07:26] * nothingmuch feels proud: http://perlmonks.org/?node_id=537727

[07:26] <nothingmuch> so much thought so early in the morning

[07:30] <szbalint> If only Intrepid wouldn't litter the CB. :P

[07:32] * nothingmuch didn't notice

[07:32] <nothingmuch> the reason I'm proud:

[07:32] <nothingmuch> today I opened the door to the office with my left hand, instead of my right

[07:32] <nothingmuch> i *locked* it and pulled on the key

[07:33] <nothingmuch> and needed someone to tell me to turn it the other way

[07:36] *** dduncan joined
[07:36] *** Aankhen`` joined
[07:36] <Alias_> what's the word

[07:37] <Alias_> Sounds like a great name for a piece of blog software

[07:37] <Alias_> "We have a word for these kinds of musings in hebrew - it's the combination of the roots for philosophy and flatulence.

[07:37] <Alias_> -nuffin"

[07:43] <nothingmuch> hitpalzefut

[07:43] <nothingmuch> he is mitpalzef

[07:43] <nothingmuch> as opposed to philosophise:

[07:43] <nothingmuch> mitp(h)alsef

[07:43] <nothingmuch> and he is farting:

[07:43] <nothingmuch> he is maflitz

[07:46] <svnbot6> r9653 | Darren_Duncan++ |  r3220@darren-duncans-power-mac-g4:  darrenduncan | 2006-03-18 23:40:30 -0800

[07:46] <svnbot6> r9653 | Darren_Duncan++ |  ext/Rosetta/ : continued rewrite of Language.pod

[07:57] *** dduncan left
[08:14] <Quell> This is an /amsg. I am now going to sleep, although I suppose most of you won't care.. bye :(

[08:15] <nirgle> heh

[08:17] <nothingmuch> http://nothingmuch.woobling.org/cute_moose.jpg

[08:33] *** pmurias joined
[08:33] <pmurias> morning all,

[08:40] *** Khisanth joined
[08:57] *** nnunley joined
[09:24] *** ghenry joined
[09:30] *** kane_ joined
[09:38] <ingy> rgs: ping

[09:42] <nothingmuch> morning ingy

[09:54] *** larsen joined
[10:14] *** chris2 joined
[10:26] *** bernhard joined
[11:10] *** nothingmuch joined
[11:16] *** KingDiamond joined
[11:53] <nothingmuch> does Set.pm want a diet? http://web.engr.oregonstate.edu/~erwig/diet/

[12:03] *** ghenry joined
[12:07] *** elmex joined
[12:09] *** pmurias joined
[12:31] <pmurias> does any one use VMS here? using AutoSplit for as a base for a per subroutine seperate compilation thingy and not sure if to remove the VMS handling bits?

[12:32] <ingy> hi nothingmuch

[12:33] * ingy just wrote a subroutine to find and replace any heredoc content in a source with its sha1 digest

[12:34] <ingy> it was harder than I thought

[12:40] <nothingmuch> hi ingy

[12:40] <nothingmuch> didn't PPI help?

[12:41] <ingy> I didn't look

[12:41] * nothingmuch wonders wtf happenned to his terminal font

[12:42] * ingy just realizes that he needs to fold pod blocks and heredocs at the same time

[12:43] * ingy writes a failing test

[12:45] *** nothingmuch_ joined
[12:46] <ingy> hi nothingmuches

[12:46] <nothingmuch> err, sorry

[12:46] * ingy considers using PPI

[12:49] * nothingmuch abuses substances

[12:49] <nothingmuch> it's the third time in years that I had more than one coffee a day

[12:49] <nothingmuch> bah

[12:49] <nothingmuch> evidently it's not enough

[12:49] <nothingmuch> it's the *first* time in years...

[13:00] *** nnunley_ joined
[13:03] *** iblechbot joined
[13:08] *** KingDiamond joined
[13:11] *** knewt joined
[13:19] *** chris2 joined
[13:29] *** premshree_ joined
[13:45] *** Limbic_Region joined
[13:51] *** jisom joined
[14:06] <nothingmuch> larsen: ping

[14:06] <larsen> pong

[14:07] <nothingmuch> larsen: got freenode /msg power?

[14:08] <larsen> uh ?

[14:08] <nothingmuch> as in registered with NickServ

[14:08] <nothingmuch> appearantly you are =

[14:08] <nothingmuch> =)

[14:09] <larsen> tel

[14:12] *** spo0nman joined
[14:19] <Arathorn> right.

[14:24] * nothingmuch bangs head on table

[14:32] *** mh_pia joined
[14:33] * spo0nman looks around.

[14:36] * jisom wonders what the map at the bottom of http://www.openbsd.org/goals.html would look like for parrot/pugs/perl

[14:36] <avar> jisom: it's easy to make one

[14:36] * spo0nman is from India.

[14:37] <jisom> yes

[14:37] <Arathorn> mainly us, europe, .il & .tw i'd have thought

[14:37] <Arathorn> and .au

[14:37] <jisom> have everyone record their longitude and latitude.....

[14:37] <avar> jisom: no, easier than that

[14:38] <jisom> maintainability?

[14:38] <avar> http://www.frappr.com/mediawikidevelopers

[14:38] <Arathorn> geolocate everyone's irc proxy's IP's? ;)

[14:38] <avar> there's a web service made just for that

[14:38] <Arathorn> ah, the magick of google maps

[14:38] <jisom> but it's fun to reinvent the wheel!

[14:39] *** mh_pia left
[14:40] <Limbic_Region> Have you guys seen http://desert-island.dynodns.net:8000/perl/pmplanet.html ?

[14:40] <spo0nman> Arathorn: many would have cloaks.

[14:40] <Limbic_Region> It is a project of theorbtwo that places monks that are "online" on the glob

[14:40] <Limbic_Region> globe even

[14:40] *** clydee joined
[14:41] <jisom> when was it regenerated?

[14:41] <jisom> cause I'm not on it

[14:42] * jisom scratches his head thinking about what exactly he registered as

[14:42] <Arathorn> that's cool :)

[14:44] <Arathorn> totally and unashamedly offtopic, but given not much else is happening and #perl6 is a fairly random sampling of techies: if you saw http://arasphere.net/device.gif in real life, would you think that it was a cellphone or a PDA (or both)?

[14:45] <jisom> that ms's thing?

[14:45] <Arathorn> no, something i did

[14:45] <jisom> oh

[14:45] <jisom> newton?

[14:45] <Limbic_Region> jisom - oh, I don't know how often it is refresshed

[14:45] <avar> pda

[14:45] <Arathorn> it's not based on anything - meant to be a random concept device

[14:46] <lumi> PDA

[14:46] <Limbic_Region> I think you need to show up in "Other Users" when it scans

[14:46] <avar> A cell would have buttons for dialing stuff

[14:46] <spo0nman> pda

[14:46] <Arathorn> right, that sounds fairly conclusive - thanks for looking :)

[14:46] <avar> and if those are made digitally with the screen + touch screen functionality it's a given that it does other stuff than dial people

[14:47] * Arathorn nods

[14:47] * Arathorn sets about adding more buttons

[14:47] * spo0nman wants a pda which has a twidler like keypad ... big display and a bluetooth headset to talk on.

[14:48] <spo0nman> basically T9 is good enough for me ... i can type fairly well with it ... i just want a bigger diplay on my mobile device.

[14:49] <Arathorn> well, at least this thing'd have a decent sized display :)

[14:49] <spo0nman>  i like the 02 (seeo2.com) ... i havent bought it cuz it lacks the keypad and it runs windows X-(

[14:51] <jisom> how do you ctrl-alt-del on a cell phone?

[14:51] <Arathorn> you just powercycle it :|

[14:51] * Arathorn has a bunch of XDAs on his desk, and has learned to love it

[14:51] <spo0nman> jisom: there's a powerbutton. the new nokia i have hangs fairly frequently.

[14:51] <jisom> I guess they're pumping out cell phones faster than they can test them properly

[14:52] <Arathorn> both symbian series 60 and windows mobile are fairly flakey

[14:54] <spo0nman> in my opinion ... no one has got the mobile/pda combo right till now. everything iv seen just sucks. I was never a fan of PDA's anyway.

[14:55] <gaal> 2

[14:56] <jisom> if I remember right, apple's ancient newton got a lot of things better than current pda's, but just remember that pen and paper's older than the pda

[14:56] <Arathorn> shame this thing's just a random concept design

[14:57] * Arathorn fantasises about creating his own handset/pda, running some nice hackable OS

[15:02] <jisom> are there and pure bare posix systems?

[15:02] <spo0nman> http://www.insearchofstupidity.com/Stupid_Marketing/Museum_Exhibits/Stupid_Products/stupid_products.html

[15:02] <spo0nman> jisom: the newton is featured.

[15:02] <jisom> newton was just too expensive, too powerful for it's time

[15:07] <gaal> that URL is quite... wordy

[15:08] <spo0nman> :) he's funny.

[15:26] *** GeJ joined
[16:40] <ingy> hola

[16:41] <merlyn> hey ingy

[16:41] *** FurnaceBoy joined
[16:41] <merlyn> started looking at Jemplate yesterday

[16:44] <ingy> Jemplate kicks much ass

[16:51] *** pdcawley joined
[16:55] *** nnunley_ is now known as nnunley

[16:56] <nnunley> ingy: Have you looked at trimpath?

[16:56] <ingy> for js templating

[16:56] <ingy> ?

[16:57] * nnunley nods.

[16:57] <ingy> yeah, I like the Jemplate approach a lot better (*shock*)

[16:57] * nnunley grins.

[16:57] <ingy> actually I really do, which is coincidental

[16:58] <ingy> Jemplate is a less complicated at the end of the day

[16:58] <ingy> once you compile your templates, they are just regular js files

[16:58] <ingy> browser cached, debuggable, fast

[16:58] <nnunley> Ahh.

[16:59] <ingy> it's all terribly simple from a JS standpoint.

[17:00] <ingy> and very complex from a TT standpoint

[17:00] <ingy> which is to say the TT is very rich, and Jemplate gets to support all of it

[17:01] <ingy> I would not want to port the TT compiler to pure JS, and as it turns out it wouldn't gain me anything to do so

[17:01] *** elmex joined
[17:02] * nnunley nods.  "Not much."

[17:03] <ingy> I should PAR the whole thing, then no perl dependency

[17:04] <ingy> just a jemplate compiler

[17:04] <ingy> if I cared...

[17:05] * Supaplex googles a bit for this Jemplate phenomena

[17:06] <ingy> simply (almost all of) TT2 for Javascript

[17:07] <merlyn> it's in the cpan

[17:07] <merlyn> I installed from there

[17:07] <merlyn> the ajax stuff is cross-browser tested too?

[17:09] <Supaplex> humm neat.

[17:09] <ingy> is cpan.org b0rked?

[17:10] <merlyn> what part of cpan.org?

[17:10] <merlyn> DNS?

[17:10] <ingy> nm

[17:10] <ingy> merlyn: load this in various browsers: http://search.cpan.org/src/INGY/Jemplate-0.18/tests/run/index.html

[17:11] <ingy> the ajax stuff works whereever those tests pass

[17:11] <merlyn> wow.  it's running tests!

[17:11] <merlyn> is that hitting your site?

[17:12] <merlyn> ... Files=10, Tests=44, 38.309 seconds

[17:12] <ingy> merlyn: no, it's hitting your browser

[17:12] <ingy> ;)

[17:13] <merlyn> Uh.  How are you testing ajax then?

[17:13] <merlyn> that needs to hit a server

[17:13] <ingy> what do you mean?

[17:13] *** nothingmuch joined
[17:13] <ingy> cpan.org is a server

[17:13] <merlyn> but you don't have any CGI running there, do you?

[17:13] <ingy> ajax don't need cgi

[17:13] <nnunley> XMLHttpRequest can use a GET

[17:13] <merlyn> ajax = xhtmlhttprequest()

[17:13] <Supaplex> it's all static ;)

[17:14] <merlyn> Oh... getting a static value

[17:14] <merlyn> then you aren't necessarily testing params and stuff

[17:14] <nothingmuch> møøse!

[17:14] <ingy> sure I am

[17:14] <xerox> nothingmuch: wow what does it mean?

[17:14] <merlyn> mXXse.  not sure what that's supposed to be.

[17:14] <merlyn> actually I see \303\270\303\270

[17:14] <lumi> &oslash;

[17:15] <merlyn> ahh.  moose. :)

[17:15] <nothingmuch> xerox: it's monty python mooseness =)

[17:15] <xerox> moo!

[17:16] * nothingmuch prepared a moose for cuteoverload.com

[17:16] <nothingmuch> i hope they accept it

[17:16] <nothingmuch> http://nothingmuch.woobling.org/cute_moose.jpg

[17:17] <xerox> Oooh.

[17:17] <nothingmuch> i also tried to register a domain today

[17:17] <nothingmuch> møø.se

[17:17] <nothingmuch> (/me is sleep deprived)

[17:17] *** vel joined
[17:17] <xerox> No unicode allowed in domain names, I fear.

[17:17] <nothingmuch> BZZZZZZZZZZZZT

[17:17] <nothingmuch> http://en.wikipedia.org/wiki/Internationalized_domain_name

[17:17] <nothingmuch> otoh you are partly right

[17:18] <nothingmuch> sweden's ICANN equivalent only allows swedish characters

[17:18] <nothingmuch> i'm hoping their verification is teh b0rked

[17:18] <Arathorn> i thought all the browsers have it turned off

[17:18] <nothingmuch> b0rk b0rk b0rk

[17:18] <nothingmuch> not all

[17:18] <nothingmuch> safari has it on by default

[17:18] <Arathorn> so that people don't register comedy non-printing-character unicode domains

[17:18] <Arathorn> which you then go phishing with

[17:18] <nothingmuch> anywho

[17:18] <nothingmuch> dinner time

[17:19] <nothingmuch> we'll have mandatory unicode jokes later, if you like =)

[17:19] <Arathorn> okay ;)

[17:19] <Arathorn> bon appetit..

[17:19] <nothingmuch> the word is obligatory, right?

[17:20] <Arathorn> either works

[17:20] *** DesreveR joined
[17:21] <xerox> Call now!  Click SMILE FORALL . com!

[17:29] * ingy parses Perl code using pure Perl!

[17:30] <ingy> and they said it couldn't be done...

[17:30] <FurnaceBoy> they said it would drive a man mad...

[17:30] <jisom> no, they said only perl can parse perl, that doesn't mean you can't write a perl parser in perl :-p

[17:31] <merlyn> but only if it's willing to execute some code to get it right

[17:31] <merlyn> if you try to do a non-execute perl parser, you will get it wrong.

[17:31] <FurnaceBoy> the cpu is willing but the ram is weak

[17:32] *** ruz_ joined
[17:32] <merlyn> ... http://www.perlmonks.org/?node=44722

[17:32] <avar> a non-execute perl parser?

[17:32] <merlyn> the "regex or divide" game is interesting there.

[17:33] <merlyn> a perl parser that doesn't run BEGIN blocks (and by extension, "use")

[17:33] <merlyn> you *must* run some perl code to properly *lex* later Perl code.

[17:33] <ingy> I didn't say I parsed *all* of Perl ;)

[17:33] <merlyn> and without a good lex, you don't get a solid parse.

[17:33] <ingy> but I got 4 test cases passing

[17:33] <merlyn> perl6 suffers the same way.

[17:33] <ingy> and I feel good about it

[17:34] <ingy> and I also feel good for successfully trolling merlyn :p

[17:34] <merlyn> because Larry was not willing to eliminate the regex/divide... er.. divide. :)

[17:35] <ingy> merlyn: have you read the ecmascript spec

[17:35] <merlyn> I've tried. :)

[17:35] <merlyn> it's very ... boring.

[17:35] <ingy> it basically has two grammers

[17:35] <merlyn> great way to fall asleep.

[17:35] <ingy> grammars

[17:35] <merlyn> "my mommy has two grammas"

[17:36] <ingy> one for inside a regexp and one for outside

[17:37] <merlyn> that makes sense

[17:37] <nnunley> ingy: Grammars with partial specialization.

[17:38] <jisom> well regex and perl are two langauges.....rules and perl6 are two languages

[17:40] <merlyn> Well, you could view the regex language as merely a submode of Perl

[17:40] <merlyn> and there are even overlaps

[17:41] <merlyn> for example, within a regex, you can have a perl var with its own syntax

[17:41] <jisom> and perl in a regex

[17:41] <merlyn> yeah, actually, thanks to (?{ .. })

[17:41] <merlyn> and perl sorta "cheats" to parse that

[17:42] <merlyn> but specifying it formally would be Very Hard.

[17:42] *** SamB joined
[17:42] <jisom> and then there's fun stuff like using a s/// inside the right hand side of a s/// :-D

[17:43] <ingy> jisom: I just used that

[17:44] <ingy> in my Perl parser

[17:44] <jisom> sometimes the only way to go, a little unreadable

[17:44] <jisom> only problem is you can only nest so far before you run out of available characters

[17:44] <ingy> heh

[17:44] <FurnaceBoy> damnIjustRanOutOfSpaces

[17:45] <nnunley> You can go pretty far with Unicode.

[17:45] <ingy> nnunley: which unicode chars can you use for regexp quoting?

[17:46] <ingy> m//s

[17:46] <ingy> m!!s

[17:46] <nnunley> Hrm.  I guess a real test is required.

[17:46] <jisom> m{}s

[17:46] <jisom> m}}s

[17:46] <ingy> møøs

[17:47] <ingy> XD

[17:47] <jisom> m\07\07s

[17:47] <nnunley> I was responding more to the concept of running out of characters, then actual practical application.

[17:47] <ingy> nnunley: and I was puffing on your strawman

[17:47] <nnunley> S'not made of straw.  S'made of people.

[17:48] <jisom> peopleman?

[17:48] <jisom> sounds like DID

[17:50] <avar> I use ~ a lot

[17:50] <avar> m~~, s~foo~bar~

[17:50] <avar> It's pretty easy to type for me and I find that I need it a lot less than /

[17:58] *** gilimanjaro joined
[18:10] <ingy> nnunley: sorry I msged you on freenode and for some reason I can't identify

[18:10] <ingy> I didn't ignore you

[18:15] <nnunley> No problem.

[18:16] <nnunley> Are you not registered with nickserv?

[18:20] <ingy> no

[18:20] <ingy> or I don't know

[18:20] <ingy> I hate freenode

[18:21] <nnunley> Right.  It forbids non-registered nicks from /msging

[18:21] <Supaplex> it's a "feature"

[18:21] <Supaplex> *cough*

[18:21] <ingy> now it worked

[18:32] <svnbot6> r9654 | fglock++ | pX/.../PCR - all tests pass

[18:34] * nnunley wonders what that commit fully translates to.

[18:36] *** nirgle joined
[18:38] *** ruz_ joined
[18:39] *** fglock joined
[18:55] *** szabgab joined
[18:56] *** gilimanjaro joined
[18:56] <Arathorn> pX/Common/Pugs-Compiler-Rules, i'd imagine

[18:56] <Arathorn> misc/pX/... even

[18:58] <fglock> Arathorn: hi

[18:58] <Arathorn> hia

[18:59] *** szabgab left
[18:59] *** szabgab joined
[18:59] * Arathorn hasn't had a chance to play with P-C-R since his EOL-munging escapes of the other night :(

[19:01] <fglock> Arathorn: the new version has inheritable grammars, and some bugfixes - but it is a lot slower

[19:03] <fglock> I'm not sure if grammars should be inheritable at all - S05 says rules are subroutines (not methods?)

[19:04] <merlyn> grammars are classes

[19:04] <merlyn> therefore rules are methods

[19:04] <Supaplex> depends on the flavor of cheese at the time.

[19:04] <fglock> merlyn: hi!

[19:04] <merlyn> all along, it's been the intention that to modify Perl, you merely "subclass" the Perl "grammar"

[19:05] <merlyn> if that changed recently, I'd be surprised

[19:05] <merlyn> hey fglock

[19:06] <fglock> how about unnamed rules - which grammar they belong to? In perl5, would you have to create an unnamed grammar first?

[19:08] *** larsen joined
[19:12] <fglock> for example, what /\d+/ translates to, in p5?  do{package _grammar; use base Grammar; _rule = ....; _grammar->_rule( @_ ) }

[19:13] <merlyn> I think it matters only when you're looking at subrules

[19:13] <merlyn> so if the rule never invoked subrules, no biggy

[19:13] <merlyn> if the rule *did* invoke subrules, it'd use the current __PACKAGE__

[19:13] <merlyn> but I'm not so sure about that last point

[19:13] <merlyn> (or whatever __PACKAGE__ is called in perl6)

[19:15] * merlyn pops in his PT_BR training CDROM

[19:15] <fglock> merlyn: :)

[19:15] <fglock> merlyn: there is a #perl-br channel, I think

[19:17] <szabgab> ?eval   (2|3) == (2|3)

[19:17] <szabgab> should that return (true|true) ?

[19:19] *** justatheory joined
[19:20] <fglock> if the current package 'use base Grammar', then __PACKAGE__->rule(...) would just work (that's the unsugared version)

[19:22] *** gilimanjaro joined
[19:22] <fglock> szagab: that's (true|false), because 2 != 3 and 2==2

[19:27] *** _meppl joined
[19:27] <jisom> so what does 'if(true|false) {say "foo"} else {say "bar"}' do?

[19:27] *** nirgle left
[19:27] <szabgab> fglock: I am not sure I get why is this an explanation :)

[19:28] <avar> | being a binary OR?

[19:28] <jisom> | being any

[19:28] <szabgab> on which side do you keep comparing with the 2 value and not with both ?

[19:28] <szabgab> any of 2,3 == any of 2,3  should not be true true ?

[19:29] <merlyn> in one universe where you run it, it returns true.  in another, it returns false. :)

[19:29] <merlyn> that's the $universe->fork function. :)

[19:29] <jisom> quantum physics!!!!

[19:29] <jisom> any possibility that can happen does happen

[19:30] <merlyn> except in no universe, do I end up with Jennifer Aniston. :(

[19:30] <fglock> '|' starts threads - it executes (2==2), (2==3), (3==2) and collects the results into a new '|'

[19:30] <jisom> but in infinitely many universes, all men look like Jennifer Aniston and all women look like Brad Pitt :-p

[19:31] <jisom> infinitely many != all

[19:32] <szabgab> fglock: 3 comparisons ?

[19:33] <jisom> four, he forgot 3==3

[19:33] <szabgab> ok so he will get 2 trues and 2 falses so it gives me the avreage ?

[19:33] <fglock> jisom: 'if' collapses the 'any' first, so 1|0 ends up being true, and 1&0 is false

[19:34] <jisom> but that's no fun!

[19:34] <fglock> szagab: the result is a 'set' - it works like hash keys (no repetitions)

[19:36] <merlyn> why would all the women look like Brad Pitt?  Ugh

[19:36] <merlyn> I'm glad I don't live in any of those universes!

[19:37] <fglock> merlyn: they will only collapse if you look at them

[19:47] <pasteling> "fglock" at 200.102.181.35 pasted "named/unnamed rule perl5 API" (30 lines, 732B) at http://sial.org/pbot/16396

[19:48] <fglock> does this look sane?

[19:52] *** Muable joined
[19:53] <jisom> yeah

[19:54] <pmurias> rather nice

[19:56] <svnbot6> r9655 | szabgab++ | some simple strings related tests

[19:57] <pmurias> does allowing a file to consist many compilation units sound like good workaround for the low lrep compile speed?

[19:57] <fglock> ok - I'm finding out how to implement it :)

[19:57] <szabgab> night

[19:58] <pmurias> s/consist/& of/

[19:58] *** DesreveR is now known as r0nny

[19:59] <fglock> pmurias: only if you are cacheing - but I think the grammar can be optimized

[19:59] *** szabgab left
[20:00] <fglock> pmurias: the new PCR is even slower, because of OO

[20:01] <pmurias> how much can the PCR be sped up?

[20:01] <fglock> pmurias: the grammar needs to use a dispatch table, instead of array-of-rules

[20:01] *** rindolf joined
[20:02] *** _meppl is now known as meppl

[20:02] <rindolf> Møøse!

[20:02] <ingy> Elk!

[20:02] <rindolf> Ingy!

[20:03] <ingy> Rindolf!

[20:03] <pmurias> fglock: you mean <%control_statements>?

[20:04] <fglock> pmurias: yes

[20:05] <pmurias> how difficult/fun is <%hash> to implement?

[20:05] <FurnaceBoy> 	<merlyn>	why would all the women look like Brad Pitt?  Ugh

[20:06] <FurnaceBoy> women looking like Aniston are bad enough...

[20:07] <ingy> FurnaceBoy: you're being a little harsh on Jen

[20:07] <fglock> pmurias: see the <@xx> implementation - you need to implement the extra longest-match logic (not too difficult)

[20:09] <pmurias> i could do it, but implemented that way it would be even slower

[20:09] <fglock> pmurias: if you add it to lrep-compiler I'd migrate it to PCR

[20:09] <fglock> pmurias: you can cache the sorted keys

[20:10] <fglock> pmurias: you can cheat - use p5 regexes to match the keys

[20:10] <pmurias> explain more please

[20:11] *** ayrnieu joined
[20:13] <pmurias> the <%hash> tries all keys and uses the one which matches the longest string or the one which is the longest regex?

[20:13] <fglock> pmurias: anything you do in low-level perl5 would be faster than OO rules - even a foreach will do

[20:14] <fglock> pmurias: the keys are pre-ordered - it returns the first which matches (key eq substr) - keys are plain strings

[20:15] <fglock> pmurias: then it executes the hash value

[20:15] *** gilimanjaro joined
[20:15] <fglock> pmurias: <@array> needs to execute all matches, until one returns true

[20:17] <pmurias> fglock: checked the S05 again, a bare %hash does it not <%hash>

[20:19] <pmurias> in <%hash> the keys are rules not strings (sound complex to do fast )

[20:19] <pmurias> s/sound/&s/

[20:20] <fglock> pmurias: right. we need %hash !

[20:20] <jisom> so you can finally use something other than a string as a key to a hash?

[20:21] <fglock> jisom: yes - the actual internal 'key' is an id assigned to the object

[20:21] <jisom> that can create some really interesting deeply nested structures

[20:30] <svnbot6> r9656 | fglock++ | pX/../PCR - unnamed rules are functions; named rules are methods

[20:45] *** kanru2 joined
[20:49] *** ruz joined
[20:51] *** gilimanj1ro joined
[21:12] *** DaGo joined
[21:13] *** siosiosios joined
[21:13] *** ycheng joined
[21:14] *** FurnaceBoy_ joined
[21:30] <svnbot6> r9657 | fglock++ | pX/../PCR - added failing tests (subrule calls)

[21:49] <pmurias> got to go to bed now,good night

[21:52] *** Arathorn is now known as Aragone

[22:04] *** samv_home joined
[22:11] *** mugwump joined
[22:14] *** Muable joined
[22:14] *** mtk00 joined
[22:16] *** stennie joined
[22:21] *** vborja joined
[22:23] *** penk joined
[22:28] <avar> wth

[22:28] <avar> a pseudoperl6 compiler in perl 6?;)

[22:29] <mugwump> avar: yep.  gcc is written in C, GHC is written in Haskell, ...

[22:30] <avar> I mean the misc/pX/Common/lrep stuff

[22:31] *** jiing joined
[22:31] *** jiing_ joined
[22:59] *** Limbic_Region joined
[23:01] *** Quell joined
[23:19] <svnbot6> r9658 | fglock++ | pX/../PCR - low-level implementation of <...>

[23:19] *** fglock joined
[23:31] *** revdiablo joined
[23:32] *** kisu joined
[23:34] *** revdiablo joined
[23:43] <svnbot6> r9659 | fglock++ | pX/../PCR - named subrules work; lexical subrules don't

[23:45] *** kanru2 is now known as kanru

