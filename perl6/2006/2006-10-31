[00:06] *** mako132 joined
[00:09] *** nicodaemos joined
[00:11] *** Limbic_Region joined
[00:16] *** mr_ank joined
[00:16] <Limbic_Region> audreyt - I am at home with a fairly beefy box (1GB of ram, dual processor) if you would like to do any testing with various doodads and their affect on smoke times

[00:20] *** mr_ank joined
[00:23] <audreyt> Limbic_Region: my running hypothesis is the if -> $x {}

[00:23] <audreyt> chance

[00:23] <audreyt> er change

[00:23] <audreyt> but we'll see... a sec

[00:23] <Limbic_Region> I can always time different rev levels too

[00:24] * Limbic_Region is happy to do whatever now that the pumpkins have been carved

[00:24] <Limbic_Region> though I did forget to eat

[00:24] <audreyt> ok. reverting r14489 alone

[00:24] <audreyt> and rm blib6/lib/*yml, will test the hypothesis

[00:26] <audreyt> my brain is influenced with ascoma of tuber fungi, so it's not full functioning yet

[00:26] <audreyt> a sec :)

[00:28] <Limbic_Region> how does one revert using svn ?

[00:28] * Limbic_Region has only done that once

[00:28] <audreyt> svn merge -c -14489 .

[00:28] <audreyt> something like that

[00:29] <mr_ank> i've been having major issues trying to svk sync the whole repository

[00:30] <clkao> what kind of issue?

[00:30] <mr_ank> my newest error: "Incomplete data: Delta source ended unexpectedly"

[00:30] <clkao> btw, replay support landing trunk soon

[00:30] <audreyt> are you using latest SVN::Mirror?

[00:30] <audreyt> it's resolved a bit ago

[00:30] <clkao> this is ra_log session timeout. just resync ;)

[00:30] <audreyt> clkao: ooh good. will you have some cycles this week to setup commitbit on feather and/or newhost?

[00:30] <mr_ank> clkao: every time i resync i get that :( i'll try updating some of svk components

[00:30] <audreyt> I'm inclining toward feather for now

[00:31] <clkao> audreyt: sure

[00:31] <clkao> audreyt: you want to install commitbit ? you got root right?

[00:31] <audreyt> cool. say tomorrow? (12~20hr from now)

[00:31] <audreyt> I got root

[00:31] <audreyt> I need to hack in nick support

[00:31] <audreyt> I can do that myself, but pointers will be appreciated

[00:32] <Limbic_Region> audreyt - give me circa 30 minutes - want to let the current smoke finish

[00:32] *** nperez joined
[00:32] <audreyt> sure, no rush

[00:32] * audreyt is catching up on mail etc

[00:33] <audreyt> and on this hyperhash thing

[00:33] <ashleyb> <newbe-question> I'm trying to use P::C::R with "complemented character classes" (as S05 puts it) like '<-alpha>', does the comment in the P::C::R TODO stating "-add 'negate' node to Regex", mean that this is not yet implemented?</newbe-question>

[00:33] <audreyt> ?eval 1 ~~ /<-alpha>/

[00:33] *** evalbot_r14538 is now known as evalbot_r14556

[00:33] <evalbot_r14556> *** Cannot parse regex: <-alpha>␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[00:33] <audreyt> ?eval 1 ~~ /<alpha>/

[00:33] <evalbot_r14556> Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[00:33] <audreyt> not yet implemented it looks like. you want to hack it in? :)

[00:34] <ashleyb> yes and no -- It'd take me a few days as I don't know svk/svn or the code yet.

[00:34] <ashleyb> and I'm not sure I have a few days.

[00:35] <audreyt> you got a commit bit? :)

[00:35] <ashleyb> no

[00:35] <audreyt> your email addr?

[00:35] <ashleyb> ashleyb.moniker aatt gmail.com

[00:36] <audreyt> welcome aboard

[00:36] <audreyt> svn crash course at http://search.cpan.org/dist/Perl6-Pugs/docs/Pugs/Doc/Hack.pod

[00:36] <lambdabot> Title: Pugs::Doc::Hack - How to hack on Pugs - search.cpan.org, http://tinyurl.com/yjq4uw

[00:37] <audreyt> add yourself to AUTHORS and "svn ci AUTHORS" to test commit; to hack P::C::R cd into perl5/Pugs-Compiler/

[00:37] <audreyt> er perl5/Pugs-Compiler-Rule

[00:37] <audreyt> ?eval 1 ~~ /<-[aeiou]>/

[00:37] <evalbot_r14556> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 1, ␤  str => "1", ␤  sub_pos => (), ␤  sub_named => {}␤)

[00:38] <audreyt> it looks like negated charclass is already in

[00:38] <audreyt> the desugaring for /<-foo>/ is just /<foo>./

[00:38] <audreyt> er I mean

[00:38] <audreyt> /<!foo>./

[00:39] <audreyt> ?eval 1 ~~ /<!alpha>/

[00:39] <evalbot_r14556> *** Cannot parse regex: <!alpha>␤*** Error: Error: unknown node: $VAR1 = undef;␤␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[00:40] * eviltwin_b wonders if that document overs the evil he's currently comtemplating

[00:40] <eviltwin_b> hm, nope, that's the one I already looked at

[00:41] <audreyt> so hacking in <!foo> seems to be sufficient. you can also ask fglock for more directions beyond the ones in README

[00:41] <ashleyb> thank you.

[00:42] <audreyt> np :) have fun

[00:51] <Limbic_Region> audreyt - do you know if allison was aware of the threads, parrot, and fear for the future thread at PerlMonks?

[00:53] <audreyt> Limbic_Region: I have no idea, though I'm reasonably sure chromatic will keep her informed

[00:53] <Limbic_Region> well, since she solicited comments I replied with the thread

[00:53] <audreyt> that's cool

[00:53] <Limbic_Region> not sure it was such a great idea though

[00:54] <Limbic_Region> I would say more than one contributor to that thread hasn't maintained objectivity

[00:54] <Limbic_Region> and drawing more attention to it might bring more of that

[00:54] <mr_ank> (clkao: btw, congrats on SVK... /me loves it)

[00:55] <mr_ank> audreyt++ # SVN::Mirror upgrade fixed the issue :)

[00:55] <audreyt> mr_ank: well, yeah, basically for that two days the entire #perl6 yelled at clkao :)

[00:55] <audreyt> clkao++ # responsive maintainer

[00:57] <eviltwin_b> so, what is the right way to define a global ($*BASETIME) such that it won't be overridden by the Prelude?

[00:58] <eviltwin_b> (I was a little surprised that marking it as a constant --- which we want anyway --- didn't prevent it from being overwritten)

[00:58] *** thepler joined
[00:58] <eviltwin_b> but I was unable to make sense of how the Prelude gets incorporated into the environment.

[00:59] <eviltwin_b> I know how to hack the environment directly, but somehow I don't think that's how it's supposed to be done

[00:59] <audreyt> where does Prelude override BASETIME?

[00:59] <audreyt> you want it for -M ?

[01:00] <audreyt> (sorry I lost context)

[01:00] <eviltwin_b> if I add $*BASETIME to the initial environment it gets dumped to the Prelude next time it's generated, then that value is loaded on top of it in later runs

[01:00] <eviltwin_b> yes, for -M/-C/-A

[01:01] <audreyt> ok. the answer is adding it to Pugs.AST._reserved

[01:01] <eviltwin_b> I was getting inconsistent behavior from the command line vs. the test script until I realized that because I was working from an uninstalled pugs the command line didn't load the prelude, but the test scripts do -Iblib6/lib so they do get it

[01:01] <eviltwin_b> ah.

[01:01] <eviltwin_b> thanks.  audreyt++

[01:01] <audreyt> np :) add a haddock comment to filterUserDefinedPad and _reserved while you are at it?

[01:02] <eviltwin_b> ok

[01:02] <audreyt> eviltwin_b++

[01:03] <Limbic_Region> audreyt - I think I messed up

[01:04] <Limbic_Region> I was about to revert everything back

[01:04] <Limbic_Region> but apparently you just want that one change reverted?

[01:04] <Limbic_Region> if so - should I svn up back to current and then do that svn merge thingy?

[01:05] *** OppaiSan joined
[01:05] <audreyt> just want that one change

[01:05] <audreyt> yes.

[01:05] *** OppaiSan left
[01:06] * eviltwin_b notes that he'd thought the inevitably-fatal "how hard can it be?" when he noticed the -M/-C-/A tests were aded but not planned so t/operators/filetest.t was failing after all tests completed :)

[01:07] <gnuvince> What's a blib?

[01:08] *** integral joined
[01:09] <eviltwin_b> perl modules have "always" staged into blib/lib (blib6/lib for pugs) during builds, so they can be easily included for testing and eventually installed from the blib tree

[01:09] <eviltwin_b> not sure what it stands for, my WAG is "build library"

[01:10] <Limbic_Region> ok - svn merge requires to rev levels so I don't think that is what I need

[01:10] <audreyt> -c only want one

[01:10] <gnuvince> eviltwin_b: thank you.

[01:10] <audreyt> but maybe that's 1.4ism

[01:10] <mr_ank> Limbic_Region: svk revert ?

[01:11] <mr_ank> or have you already checked in?

[01:11] <audreyt> I'll need to bbl

[01:11] <Limbic_Region> mr_ank - I am trying to be current but then apply a single change from a past revision

[01:11] <audreyt> instead of staying up and negating jetlag adjustment I've done so far :)

[01:11] <audreyt> *wave* &

[01:11] <Limbic_Region> audreyt - I will figure it out and /msg you

[01:11] <audreyt> 'k

[01:11] *** nipotaway is now known as nipotan

[01:11] <audreyt> Limbic_Region++

[01:12] <gnuvince> Is there a method/function to have a quick description of a function/method?  Like docstrings in some languages

[01:12] <mr_ank> Limbic_Region: what i do when that happens is just svk checkout -r <old revision> <file> ... i think

[01:13] <mr_ank> i haven't done it in a while

[01:13] <mr_ank> i just copy the file somewhere else and grab an older version

[01:13] <Limbic_Region> mr_ank - that won't work

[01:13] <Limbic_Region> I need everything current except that one rev

[01:13] <mr_ank> you mean except for one file?

[01:13] <Limbic_Region> no

[01:13] <Limbic_Region> for one rev

[01:14] <Limbic_Region> or to say it a different way

[01:14] <Limbic_Region> I need to be current and then revert just one change

[01:14] <mr_ank> ah

[01:15] <mr_ank> like "go to current -1"?

[01:15] <Limbic_Region> except it isn't -1

[01:15] <mr_ank> i don't quite follow :/

[01:15] <Limbic_Region> current is 14556

[01:16] <Limbic_Region> the change I need to revert is 14489

[01:16] <eviltwin_b> he wants an old revision to be removed from the current tree, keeping everything after it

[01:16] <Limbic_Region> I only want to revert change 14489 - not everything in between

[01:16] <eviltwin_b> I don't think any of rcs/cvs/svn handle that very well, and in fact it seems to me like a Hard Problem in the case where later revs modify the same code affected by the obsoleted rev

[01:16] <Limbic_Region> I would do it by hand but 4 files are involved

[01:17] <Limbic_Region> audreyt seems to think it won't be an issue with this specific problem

[01:17] <mr_ank> but why work in change 14489?

[01:17] <mr_ank> does people checkout old revisions like that?

[01:17] <Limbic_Region> mr_ank - there is a performance problem we are tracking down

[01:17] <Limbic_Region> and that's where she suspect it lies

[01:18] <mr_ank> Ah. I get it

[01:19] * eviltwin_b would think the easy way is to svn diff that one revision (-r14489:14490) and then apply it to HEAD with "patch -R"

[01:19] <eviltwin_b> er.

[01:19] <eviltwin_b> -r14488:144809

[01:19] <eviltwin_b> gah

[01:19] <eviltwin_b> -r14488:14489

[01:20] <Limbic_Region> eviltwin_b - do what exactly?

[01:20] <Limbic_Region> step 1?

[01:20] <Limbic_Region> step 2?

[01:20] <Limbic_Region> etc

[01:20] * Limbic_Region is about to give up

[01:21] <eviltwin_b> svn diff -r14488:14489 | patch -R

[01:21] <eviltwin_b> use svn diff to extract that one revision, then patch -R applies the diff in reverse to effectively remove those changes from the current tree

[01:22] <eviltwin_b> if the "patch -R" fails then you have a conflict caused by a later rev modifying the same code

[01:22] *** dmq joined
[01:23] <eviltwin_b> depending on how svn was built you might also want -c or -u in the svn diff arguments (look to see if the default output of svn diff includes context --- I hope that'd only be an isue if it was built on e.g. a Solaris machine without GNU diff installed)

[01:24] <Limbic_Region> I think it worked

[01:24] <Limbic_Region> patch -R couldn't find the files

[01:24] <Limbic_Region> but I think that was a delimiter issue

[01:24] <eviltwin_b> hrm.

[01:24] <Limbic_Region> it prompted me

[01:24] <Limbic_Region> and it said success after entering it using winblows \

[01:24] <eviltwin_b> ah

[01:26] <eviltwin_b> hm, might want to take that up with the svn developers --- arguably it should use the host pathnames

[01:27] <eviltwin_b> (unless you specify a repossitory path)

[01:27] <Limbic_Region> patch is a mingw thing

[01:27] <Limbic_Region> not svn's fault

[01:27] <Limbic_Region> at least I think

[01:27] <eviltwin_b> sure, but svn should output diffs against a local tree using the local filename conventions

[01:28] <SamB> ah, no!

[01:28] <SamB> portable patches are best

[01:28] <eviltwin_b> hm, ok, that also is arguable

[01:28] <SamB> after all, one of the most common things to do with them is email them

[01:28] <eviltwin_b> so either patch needs t deal with unix pathname separators or svn diff might want an argument to output with ocal conventions

[01:29] <Limbic_Region> grr - I don't know

[01:29] <eviltwin_b> I guess the former could be argued as preferable for portability reasons

[01:29] <Limbic_Region> I am going to give up for tonight

[01:29] <SamB> or maybe svn should have an "apply" command

[01:29] * Limbic_Region is having other issues and doesn't want to screw things up

[01:29] <eviltwin_b> you might spot-check one of the files to make sure it actually did the right thing

[01:29] * eviltwin_b knows that one, was thinking much the same thing before he realized why $*BASETIME was messed up

[01:30] <eviltwin_b> svn apply would seem redundant given patch

[01:31] <SamB> but, we have svn diff and diff...

[01:31] <Juerd> gnuvince: Well, Perl 6 will have POD too.

[01:31] <SamB> also, svn apply would be the simplest way to deal with a number of issues

[01:31] <eviltwin_b> sure, but unlike patch, svn diff needs access to the repo

[01:31] <SamB> such as metadata changes

[01:32] <SamB> actually no

[01:32] <SamB> svn diff runs totally out of the working dir ;-)

[01:32] <eviltwin_b> metadata's a good point, but I don't think svn diff even tries to deal with that

[01:32] <SamB> new and improved over CVS ;-)

[01:32] <eviltwin_b> the working dir + the cached stuff that diff doesn't know about

[01:32] <eviltwin_b> (and shouldn't)

[01:33] <SamB> yes, true

[01:33] <SamB> svn apply could just use patch(1) on the relevent files, in theory

[01:33] <SamB> but the SVN people would never do it that way

[01:34] <Limbic_Region> @tell audreyt couldn't figure out how to revert just that change - svn diff 14488:14489 | patch -R suggested by eviltwin_b didn't seem to work correctly

[01:34] <lambdabot> Consider it noted.

[01:35] * eviltwin_b thinks he won't be trying to make any changes tonight either; badly timeshifted

[01:35] <eviltwin_b> might play with another checkout to see what happened with the patch thing, in theory it should work

[01:36] *** AzureStone joined
[01:36] <eviltwin_b> hrm, I bet -p0

[01:36] *** AzureStone left
[01:38] *** swo joined
[01:38] <eviltwin_b> yep, patch -p0 -R works here

[01:39] <eviltwin_b> forgot patch deletes all leading path components unless you use -pN to limit it

[01:40] *** mjk joined
[01:41] <eviltwin_b> @tell audreyt the correct invocation is "svn diff -r14488:14489 | patch -p0 -R"; I'd forgotten the -p0

[01:41] <lambdabot> Consider it noted.

[01:42] *** swo joined
[01:49] *** lambdabot joined
[01:51] *** Limbic_Region joined
[01:52] <Limbic_Region> eviltwin_b - the -p0 with patch seemed to do the trick

[01:52] <Limbic_Region> so I am running the smoke now

[01:57] *** gunya joined
[01:58] <eviltwin_b> yay

[01:59] <Limbic_Region> spot checking indicates everything worked

[02:00] <Limbic_Region> @tell audreyt eviltwin_b++ ammended the suggestion to | patch -p0 -R which did appear to work, smoking now

[02:00] <lambdabot> Consider it noted.

[02:12] <cmarcelo> nothingmuch: thanks. are you still there?

[02:13] <nothingmuch> cmarcelo: surprisingly yes

[02:13] <nothingmuch> but i am half in bed

[02:13] * nothingmuch is obsessing over email post shower

[02:15] <cmarcelo> hmm.. know when will you be online tomorrow?

[02:15] <nothingmuch> IDT 11-17 or so

[02:16] <nothingmuch> then gaal et al and I are going hiking

[02:16] <nothingmuch> overnight + 1 day

[02:16] <cmarcelo> hmm.. how many hours from now?

[02:16] <nothingmuch> it's 4:!6

[02:16] <nothingmuch> you should email me questions if there's anything you'd like to ask

[02:16] <cmarcelo> ok

[02:17] <nothingmuch> that way you don't have to hunt me down

[02:17] <nothingmuch> (sometimes i ignore IRC if i'm concentrating)

[02:18] <nothingmuch> also, if I answer in a cleaner way we can wikify this into some doc

[02:18] <cmarcelo> sure :)

[02:25] <nothingmuch> good night

[02:25] <cmarcelo> night

[02:36] *** Limbic_Region joined
[02:58] *** swo joined
[03:08] <Limbic_Region> @tell audreyt typo detected far too late svn diff 14488:14480 instead of 14488:14489 - oops, will try again tomorrow night if you haven't tracked it down yourself by then - & sleep

[03:08] <lambdabot> Consider it noted.

[03:25] *** esstone joined
[03:59] *** stevan joined
[04:00] *** justatheory joined
[04:27] *** penk joined
[04:30] *** hexmode joined
[04:36] *** weinig_ joined
[04:55] *** gunya joined
[04:56] *** mjk joined
[05:11] <TimToady> will try it here.

[05:29] *** awwaiid_ is now known as awwaiid

[05:38] *** SubStack joined
[06:02] <TimToady> removing if x -> $y {...} seems to have made no difference at all.

[06:14] *** ruz_ joined
[06:38] <TimToady> @tell audreyt removing if x -> $y {...} seems to have made no difference at all.

[06:38] <lambdabot> Consider it noted.

[06:50] *** marmic joined
[07:17] <meppl> guten morgen

[07:19] *** gunya joined
[07:32] *** Daveman joined
[07:44] *** eggzeck joined
[07:44] *** kanru joined
[07:48] *** nusgnaf joined
[08:15] *** mr_ank joined
[08:22] *** bernhard joined
[08:23] *** kensanata joined
[09:06] *** penk joined
[09:12] *** ruz joined
[09:12] *** drrho joined
[09:12] *** elmex joined
[09:27] *** kane-xs joined
[09:37] *** buetow joined
[09:42] *** pjmm joined
[09:48] *** pjmm left
[09:50] *** ruz_ joined
[10:08] *** Yappo joined
[10:13] *** andara joined
[10:18] *** dduncan left
[10:33] *** ruoso joined
[10:45] *** nipotan is now known as nipotaway

[11:15] *** xinming_ joined
[11:20] *** fglock joined
[11:21] <cmarcelo> fglock: ola

[11:24] <fglock> cmarcelo: oies

[11:25] <fglock> cmarcelo: will we meet tomorrow?

[11:27] <cmarcelo> fglock: probably Thursday morning I'll show up at holiday inn. and please IM your cell phone (if any) to make contact easier. btw, there's a good chance that a friend will lend me a notebook :)

[11:30] <fglock> cmarcelo: cool - just ask for us at the hotel desk

[11:31] <cmarcelo> fglock: ok. what time will be a reasonable one to show up? [nota bene: I won't be staying at the hotel]

[11:32] <fglock> cmarcelo: I get up early :)

[11:33] <fglock> you could have breakfast at the hotel with us

[11:33] <cmarcelo> cool :) around 8h30, then?

[11:34] <fglock> ok :)

[11:46] *** nusgnaf joined
[11:48] *** thepler joined
[11:51] *** andara left
[12:09] *** Psyche^ joined
[12:12] *** chris2 joined
[12:12] <svnbot6> r14557 | fglock++ | Pugs-Compiler-Rule - fixed <!...> syntax tree; added test for token{<!alpha>}

[12:13] *** norageek joined
[12:14] *** lisppaste3 joined
[12:14] *** FOAD_ joined
[12:14] *** nothingmuch joined
[12:14] *** statico joined
[12:14] *** rafl joined
[12:14] *** prism joined
[12:14] *** GeJ joined
[12:14] *** qmole joined
[12:14] *** wilx joined
[12:14] *** nothingmuch joined
[12:14] *** wilx joined
[12:14] *** qmole joined
[12:15] *** prism joined
[12:25] *** Psyche^ is now known as Patterner

[12:27] <svnbot6> r14558 | fglock++ | Pugs-Compiler-Rule - implemented regex{<!...>} - added tests

[12:32] <cmarcelo> @tell nothingmuch re MO: shouldn't MO::Run::Abstract::ResponderInterface role require a 'dispatch' method?

[12:32] <lambdabot> Consider it noted.

[12:32] <nothingmuch> yes, it should

[12:32] <lambdabot> nothingmuch: You have 1 new message. '/msg lambdabot @messages' to read it.

[12:32] <nothingmuch> @moosages

[12:32] <lambdabot> cmarcelo said 26s ago: re MO: shouldn't MO::Run::Abstract::ResponderInterface role require a 'dispatch' method?

[12:35] <cmarcelo> tks

[12:36] *** andara joined
[12:39] <fglock> inside rules, does char classes operations have a precedence? like <+foo+bar-alpha> - is '-alpha' removing alphas from (foo+bar) or from the input string?

[12:42] <fglock> ok, it's removing alphas from (foo+bar)

[12:42] *** mako132 joined
[12:47] *** anatoly_ joined
[12:47] *** anatoly_ is now known as anatolyv

[12:47] <nothingmuch> hola anatolyv

[12:48] <anatolyv> hola

[12:48] <nothingmuch> i mean

[12:48] <nothingmuch> yo

[12:48] <anatolyv> right!

[12:50] <anatolyv> ok, possibly a stupid question

[12:50] <anatolyv> is if (as a control statement) properly an operator?

[12:51] <anatolyv> in p6, that is.

[12:51] <audreyt> it's properly a function

[12:51] <lambdabot> audreyt: You have 5 new messages. '/msg lambdabot @messages' to read them.

[12:51] <audreyt> &statement_control:<if>

[12:52] <audreyt> but it's actually a macro function

[12:52] <audreyt> though if you apply it at runtime you still get what you expect.

[12:52] <audreyt> not yet implemented in Pugs.

[12:53] <anatolyv> audreyt: so eventually i should be able to $a = if <whatever>, but currently unimplemented in pugs, right?

[12:53] <anatolyv> audreyt: hi, btw!

[12:54] <fglock> it's not an operator at the syntax level - in the sense that you can't apply a function on it, like 1+if...

[12:54] <audreyt> anatolyv: you can't. you need to say

[12:54] <audreyt> $a = &statement_control:<if>(...)

[12:54] <audreyt> or, better (and implemented in pugs)

[12:54] <audreyt> $a = do if ...

[12:54] <audreyt> as "do" transforms a statement into an expression

[12:55] <audreyt> ?eval my $a = do if $a { 100 } else { 1000 }

[12:55] <anatolyv> audreyt: that's my real question. what are statements that are not expressions? if etc. for control? anything else?

[12:55] *** evalbot_r14556 is now known as evalbot_r14558

[12:55] <evalbot_r14558> \1000

[12:55] <audreyt> anatolyv: things put into statement_control are statements

[12:56] <audreyt> currently: for/loop/repeat/if/while/when/maybe/default

[12:56] <audreyt> also package/has/is/does/use/no/trusts

[12:57] <audreyt> all of them can be expressionified with do

[12:58] <audreyt> ?eval do use v6;

[12:58] <anatolyv> audreyt: ah, that makes sense, thanks.

[12:58] <evalbot_r14558> undef

[12:58] <audreyt> np :)

[12:58] <fglock> please check: is <+foo+bar-alpha> the same as [ [ <before <foo>> | <before <bar>> ] & <!alpha> ] .

[12:59] <audreyt> looks correct to me.

[13:00] <cmarcelo> nothingmuch: there is a reason to separate MO::C::Class and MO::C::Abstract::Class roles?

[13:00] <cmarcelo> s/there is/is there/

[13:00] <nothingmuch> Abstract::* provides no functionality

[13:00] <audreyt> fglock: I'm room 816 btw. feel free to knock tomorrow morning

[13:00] <nothingmuch> in theory

[13:00] <fglock> ok!

[13:00] <nothingmuch> i kinda screwed that up a bit

[13:00] <nothingmuch> MO::C::Class is getting slowly refactored

[13:01] <nothingmuch> it's *WAY* too big right now

[13:01] <anatolyv> audreyt: what's 'do'? a prefix macro op?

[13:02] <cmarcelo> I saw it :) I'm working just w/ a subset of it, the enough to make si.t and mi.t (handwaving attribute / roles / etc)..

[13:02] <audreyt> anatolyv: a prefix with a "is parsed" equiv to <stmt>

[13:05] *** HiTech69 joined
[13:05] *** orafu joined
[13:05] <cmarcelo> audreyt: ola. I "reverted" your patch since I could get moh compiling and keeping the functionality..

[13:06] <cmarcelo> s/could get/got/

[13:06] <audreyt> cool

[13:11] <audreyt> cmarcelo: so you check in the day after tomorrow?

[13:11] <audreyt> where are you staying here?

[13:12] *** orafu joined
[13:15] *** Limbic_Region joined
[13:18] <audreyt> Limbic_Region: it's not the if-> change; I benched and Timtoady also did

[13:19] <cmarcelo> audreyt: yes, thursday. at my parents' house (a little bit far from Anhembi). but I'm going to bug you and fglock at the hotel :o)

[13:19] <audreyt> good good :)

[13:19] <Limbic_Region> audreyt - ok, well what I can do tonight is a binary search to isolate the rev that is the culprit

[13:19] <Limbic_Region> oooh, not tonight - tonight is halloween

[13:19] <audreyt> I check out at 6th so we have plenty of hackathon time

[13:20] <audreyt> even more if you'd like to come to Rio with me for the next 4 days after that... :D

[13:20] <audreyt> fglock: oh that reminds me. should I book a air ticket online for Rio? is there a website you recommend?

[13:20] *** orafu joined
[13:20] <audreyt> or is there fast train (or something else)?

[13:20] <ingy> hi audreyt

[13:21] <audreyt> ingy: greetings! unfortunately not making it to Seattle Hackathon

[13:21] <ingy> audreyt: it is canceled

[13:21] <audreyt> oh, k.

[13:21] <Limbic_Region> audreyt - ok, will definately play when I get a chance.  I would do it here at work but this is such an awful machine it would take forever

[13:21] * ingy is in Dublin

[13:21] <svnbot6> r14559 | fglock++ | Pugs-Compiler-Rule - parses '... & ...'

[13:21] <fglock> audreyt: http://voegol.com.br/

[13:21] <lambdabot> Title: .....:GOL:..:LINHAS A&Eacute;REAS INTELIGENTES:......

[13:21] <audreyt> Limbic_Region: k

[13:22] <fglock> audreyt: they usually have fair prices

[13:22] <audreyt> ingy: your quite hospitable room mdate invited me to stay at your residence sometime in the future, though, so definitely some day :)

[13:23] <ingy> audreyt: you are always wanted and welcome. I hpe you know that by now

[13:23] *** orafu joined
[13:23] <ingy> wtf: > sudo port -vvv install ghc

[13:23] <ingy> --->  Building ghc with target all

[13:23] <ingy> make: *** No rule to make target `all'.  Stop.

[13:23] <ingy> Error: Target com.apple.build returned: shell command "DYLD_FALLBACK_LIBRARY_PATH=/opt/local/lib make all" returned error 2

[13:23] <ingy> Command output: make: *** No rule to make target `all'.  Stop.

[13:24] <ingy> Warning: the following items did not execute (for ghc): com.apple.activate com.apple.build com.apple.destroot com.apple.install

[13:24] <ingy> Error: Status 1 encountered during processing.

[13:24] <cmarcelo> audreyt: let's see what happen :) will there be a perl event on Rio or sth like?

[13:25] <audreyt> fglock: will there? :)

[13:25] <audreyt> ingy: you want the bindist I made...

[13:25] <audreyt> http://haskell.org/ghc/download_ghc_66.html

[13:25] <lambdabot> Title: GHC: Download version 6.6

[13:26] <ingy> audreyt: you are correct

[13:26] <fglock> audreyt: you will meet them at CONISLI (mk and MDA)

[13:26] <fglock> so you can make arrangements

[13:27] <audreyt> mainly need to sort out accomodation

[13:27] <audreyt> cool

[13:28] <audreyt> what's the diff between Ida / Volta tickets?

[13:29] <fglock> departure/return

[13:30] <audreyt> aha

[13:30] <fglock> there is a flag in the upper right corner, it should have an english option (it doesn't work here)

[13:30] *** stevan joined
[13:31] <fglock> audreyt: I'll be in Sao Paulo until nov.6 at night

[13:31] <audreyt> english doesn't work here either

[13:32] <cmarcelo> audreyt:  http://voegol.com.br/INT/

[13:32] <lambdabot> Title: .....:GOL:..:LINHAS A&Eacute;REAS INTELIGENTES:......

[13:32] <audreyt> cool but I'm well into ordering now

[13:32] <audreyt> babelfish++

[13:39] <audreyt> k done

[13:40] *** thepler joined
[13:47] <fglock> I wonder how captures+conjunctions interact

[13:48] <svnbot6> r14560 | fglock++ | Pugs-Compiler-Rule - token{ ... & ... } works

[13:50] <fglock> it doesn't need '&' for implementing char classes, actually - since <before> and <!...> don't increment .pos

[13:51] <audreyt> so you can just stack them

[13:52] <fglock> yes

[13:53] <dmq> ive got a working implementation of a COMMIT verb for perl5 regexes now.

[13:53] <dmq> Assuming somebody here is interested.

[13:53] <audreyt> YES!

[13:54] <fglock> :)

[13:54] <dmq> oh, and regex recursion are now optimised properly so you can do embedded rules and still be efficient.

[13:54] <audreyt> oh wow.

[13:54] <audreyt> that's like music to my ears :)

[13:54] <dmq> im working on a CUT operator too.

[13:54] <fglock> dmq: cool!

[13:55] <dmq> which is a lot harder unfortunately. im still trying to get it all sussed out.

[13:56] <fglock> dmq: I added a negate() sub to Pugs::Runtime::Regex a while ago, please merge

[13:56] <dmq> huh?

[13:56] <fglock> dmq: are you working with Pugs::Compiler::Rule ?

[13:57] <fglock> oh, you mean actual perl5 :)

[13:57] <fglock> not perl6->perl5

[13:57] <dmq> yes indeed.

[13:57] <dmq> I mean real perl5.

[13:57] <audreyt> but perl6->perl5 can benefit from a much better embedding

[13:58] <audreyt> since the backtrack logic can be done in C now for subrules

[13:58] <dmq> PAT_A (?COMMIT) PAT_B

[13:59] <dmq> make the entire pattern fail for the current startpoint if the commit has been entered and PAT_B fails.

[14:00] <dmq> will that help?

[14:01] <audreyt> yes.

[14:01] <audreyt> does it interact with subrules well?

[14:01] <audreyt> I mean can I have a boundary so COMMIT only works within it?

[14:01] <dmq> ah, no, not currently.

[14:02] <dmq> but ive been thinking of ways to do so.

[14:02] <dmq> for instance i was think / PAT_A (?MARK) PAT_B (?ROLLBACK) /

[14:04] <dmq> but maybe if you gave me a better example of what you want and I can see.

[14:04] <svnbot6> r14561 | fglock++ | Pugs-Compiler-Rule - updated TODO, ChangeLog

[14:05] <ingy> audreyt: how do you install that osx ghc binary thing?

[14:05] <miyagawa_> ingy: hi

[14:05] <ingy> there's no pkg or dmg...

[14:05] <ingy> miyagawa_: hi

[14:06] *** fglock left
[14:06] <ingy> I keep trying you on aim

[14:06] <nothingmuch> ingy: that .tar?

[14:06] <nothingmuch> it has a make install, i think

[14:06] <miyagawa_> ingy: yes

[14:07] <audreyt> ingy: sh configure make install etc

[14:08] *** hexmode joined
[14:08] <ingy> ok

[14:09] <audreyt> lunch, bbl

[14:11] <ingy> audreyt: now I'm stuck at > sudo port install darcs

[14:11] <ingy> --->  Building ghc with target all

[14:11] <ingy> Error: Target com.apple.build returned: shell command "DYLD_FALLBACK_LIBRARY_PATH=/opt/local/lib make all" returned error 2

[14:12] <ingy> Command output: make: *** No rule to make target `all'.  Stop.

[14:12] <ingy> Error: The following dependencies failed to build: ghc

[14:12] <ingy> Error: Status 1 encountered during processing.

[14:12] <ingy> :(

[14:15] *** cjeris joined
[14:19] <cmarcelo> ingy: looks like ports wants to build ghc itself. is there a way to tell him that you already have a non-ports version?

[14:19] <cmarcelo> or a --nodeps thing

[14:22] *** frederico joined
[14:37] *** lanny joined
[14:38] <lanny> Limbic_Region and/or audreyt: if you give me a rev range I can smoke em all in background at work today.

[14:38] <Limbic_Region> lanny - that could be a hundred or so revs

[14:39] <lanny> Takes me about 20 minutes to build and smoke.  Maybe 25.

[14:39] <Limbic_Region> and how many can you do concurrently?

[14:39] <lanny> So can squeeze in close to 3 an hour.  And I'd use a binary search as well

[14:40] <Limbic_Region> ahh - ok, that makes sense

[14:40] <lanny> Never tried concurrently.  My new game box (which sadly is far better  than any un*x box I can lay my hands on)

[14:41] <lanny> I can't seem to get GHC to use multiprocessors btw.  mingw but -GHCRTS carps at me

[14:41] <Limbic_Region> oh, I was thinking that you had multiple machines

[14:41] <lanny> Nope.  But it would be easy to script.

[14:41] <lanny> To do the search and compare times

[14:42] <lanny> So any suggestion on an earliest rev to look at?

[14:42] <lanny> I can search the logs and find the junction stuff if it's in that timeframe

[14:42] <Limbic_Region> I was just looking at that

[14:43] <Limbic_Region> or rather, I was doing the math to see how large a range you could cover in a reasonable amount of time with the bin search

[14:43] <lanny> Hmm.  Not enough coffee to do the exp() vals in my head to tell you.  :)

[14:44] <Limbic_Region> anything less than 256 should be ok right - 2 ^ 8 = 256 so 8 builds/smokes

[14:45] <lanny> I'm sure I could crank out 20  or so in the next 10 hours.

[14:45] <Limbic_Region> min = 14414, max = 14556

[14:45] <lanny> So should easily bracket wherever the problem is

[14:45] <lanny> Got it.  Gotta get girls in costumes for  school.  Cheers.

[14:45] <Limbic_Region> cheers

[14:46] <Limbic_Region> @tell lanny if your smoke hangs on any tests then make sure your script removes thoses tests as part of the smoke process

[14:46] <lambdabot> Consider it noted.

[14:48] *** lichtkind joined
[14:54] *** elmex joined
[15:00] *** rlb3 joined
[15:04] *** bonsai joined
[15:15] *** c6rbon joined
[15:38] *** jferrero joined
[15:38] *** ruoso joined
[15:39] *** vel joined
[15:40] *** kanru joined
[15:46] <cmarcelo> @tell audreyt new moh patches in repo.. i'm going this direction for classes, avoiding IORef et al. sounds sane?

[15:46] <lambdabot> Consider it noted.

[15:50] *** elmex joined
[15:53] *** Pomin joined
[15:56] *** justatheory joined
[16:11] *** penk joined
[16:43] <rgs> ?eval "a" ~~ /(.)/

[16:43] *** evalbot_r14558 is now known as evalbot_r14561

[16:43] <evalbot_r14561> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 1, ␤  str => "a", ␤  sub_pos =>␤    (Match.new(␤       ok => Bool::True, ␤       from => 0, ␤       to => 1, ␤       str => "a", ␤       sub_pos => (), ␤       sub_named => {}␤     ),), ␤  sub_named => {}␤)

[16:51] *** nothingmuch joined
[17:00] *** araujo joined
[17:06] *** fglock joined
[17:15] *** mako132 joined
[17:25] *** iblechbot joined
[17:37] *** GnuVince joined
[17:47] *** explorer__ joined
[17:48] *** ruoso joined
[18:01] *** b_jonas joined
[18:06] *** penk joined
[18:12] *** DHGE joined
[18:32] *** ofer1 joined
[18:46] *** eggzeck joined
[18:49] *** TSa joined
[18:53] *** rindolf joined
[19:01] *** weinig_ is now known as weinig

[19:23] *** hexmode joined
[19:48] <audreyt> fglock: when will the opening talk be?

[19:48] <lambdabot> audreyt: You have 6 new messages. '/msg lambdabot @messages' to read them.

[19:48] <audreyt> is it Nov3 morning?

[19:49] <fglock> audreyt: yes

[19:49] <audreyt> is it for YAPC::SA only or for CONISLI?

[19:49] * audreyt is 0-slides-must-JIT-now mode

[19:49] <audreyt> TimToady: do you have existing material for "A filosofia da linguagem Perl"?

[19:50] <fglock> both - CONISLI hosts YAPC::SA, the opening talk is for the general audience

[19:50] * audreyt notes fglock's face, esp. hair, resembles a certain Schwern

[19:50] <audreyt> got it

[19:50] <fglock> audreyt: we just figured out some name for TimToady's talk :)

[19:51] <audreyt> and how well should I expect the audience's English tokenizing ability?

[19:51] <fglock> s/figured out/made up/

[19:51] <audreyt> and how many minutes must I remain on stage? :)

[19:51] *** mr_ank joined
[19:51] <fglock> there will be translation, just speak reasonably slowly

[19:51] <audreyt> oh!

[19:51] <audreyt> I'll have an interpreter

[19:51] <audreyt> nice

[19:51] <fglock> http://www.conisli.org/grade/grade.html

[19:51] <audreyt> interpreters are good, if slow

[19:51] <lambdabot> Title: ...:Grade PALESTRANTES:...

[19:52] <audreyt> so 1hr

[19:52] <audreyt> will you be my interpreter?

[19:52] <fglock> about that, some time for questions

[19:52] <fglock> they usually hire a professional interpreter

[19:52] <audreyt> also maybe I can ask you or cmarcelo to translate all my slides to Portuguese...

[19:52] <buubot> correct syntax is: translate to/from language string

[19:52] <audreyt> (in Tokyo my talk was all in Japanese slides)

[19:53] <fglock> sure, no problem translating it, I think

[19:53] <audreyt> cool. also is it too late to sign up for lightning talk?

[19:53] <fglock> btw, I'll take a tablet pc

[19:54] <fglock> no that would be nice - we have a few open slots

[19:54] <fglock> please talk to Lorn about that

[19:54] <audreyt> I'd like to present ppencode on another continent (to make takesako-san happy)

[19:54] <TimToady> audreyt: no, but feel free to steal from anything I've said before, or from anything you think I might say in the future.  :)

[19:54] <fglock> TimToady: :)

[19:55] <audreyt> so they'll be continuously perfect...

[19:55] <audreyt> or perfectly continuous...

[19:55] <fglock> audreyt: I don't have my slides yet, either

[19:57] <audreyt> I went to this interesting molecular-gastronomic restraunt for lunch today. their slogan is "Dominus, Optimus, Maximus" which translates in my mind to "power to the -Ofun"

[19:57] <audreyt> and indeed the lunch was a lot of fun and filled my mind with strange talk ideas...

[19:58] *** buetow joined
[19:58] <TimToady> "Optimizing for Maximal-Order Perl"  --Dominus

[19:58] <audreyt> TimToady++

[19:58] <fglock> cool - it would also be nice to include food photos, since you'll be talking just before lunch :)

[19:58] <audreyt> fglock: so, about the professional interpreter. can I assume some CompSci training/vocab?

[19:59] <TimToady> generally most such terms are transliterated anyway

[19:59] <audreyt> gastronomy is one theme TimToady's talk havn't yet explored, I believe...

[19:59] <fglock> audreyt: let me ask the organizers, I think so

[19:59] <audreyt> k, that's good then

[20:00] <audreyt> TimToady: yeah, I had horror experience in .tw conferences where they didn't transliterate them, though...

[20:01] <audreyt> though pretranslating the slides to Portuguese can likely prevent that

[20:01] <TimToady> really depends on the culture and on the field of endeavor.  in Japanese, you'd be in trouble in chemistry but not in comp sci, for the most part.

[20:01] <fglock> yes, it would help the interpreter - or distract her :)

[20:02] <TimToady> simultaneous translation, I presume

[20:03] <fglock> yes - that's pretty difficult

[20:06] <TimToady> easy things easy and hard things possible is very much like a food pyramid...

[20:07] <TimToady> 'course, the problem in Brazil is that they think that the base of the pyramid should be meat...

[20:07] <audreyt> fglock: are people in love with McDonalds here such that if I compare fast food chains to proprietary software they get upset?

[20:07] *** buubot joined
[20:07] <fglock> audreyt: no, no problem :)

[20:10] * Limbic_Region wonders how lanny made out

[20:10] <Limbic_Region> audreyt - have you heard?

[20:10] <audreyt> no?

[20:11] <audreyt> with an simultaneous-translation slow-speaking setting, TimToady's usual SotO style seems far more suited than my usual structure-the-talk-as-many-lighting-talks style

[20:11] <Limbic_Region> I noticed you had @messages and I have been AFK most of the day is all

[20:12] <fglock> SotO ?

[20:12] <audreyt> State of the Onion

[20:12] <audreyt> basically, live performance on free association.

[20:13] <fglock> try just optimizing for fun

[20:13] <fglock> just-in-time

[20:13] <audreyt> which is a style I've never practiced

[20:13] <audreyt> which means it's fun :)

[20:14] <fglock> once I was called to replace a speaker who would give a talk on Bioinformatics - I had a few hours to read a book on it :)

[20:14] <audreyt> nice :)

[20:15] <audreyt> once I had to finish the second half of my talk in the 10min break after the first half...

[20:15] <Limbic_Region> this one time...at band camp.....er ah $conference

[20:16] <fglock> a person in the audience told me that the talk was too difficult - I blame I didn't have time to simplify it :)

[20:16] <TimToady> lunch &

[20:16] <audreyt> indeed the shorter the talk is the harder it is to prepare

[20:16] <audreyt> lightning talk is the most difficult form of all

[20:20] <TSa> HaloO

[20:21] <audreyt> TSa: greetings! long time no see

[20:21] <TSa> have we seen us before?

[20:21] <fglock> otoh, I've made some quite nice one-slide presentations

[20:21] *** rafl joined
[20:21] <audreyt> TSa: you were in #perl6 about a year ago, iirc.

[20:21] <TSa> that's right

[20:22] <svnbot6> r14562 | kudra++ | Placeholder

[20:22] <TSa> I'm actually unsure how I get this TSa account

[20:22] <TSa> at login it says that this is not my nick

[20:23] <audreyt> you can either ignore that or change to another unregistereized nick

[20:23] <audreyt> by ignoring that you can't privately /msg people

[20:23] *** buubot joined
[20:23] <audreyt> but that's about the only effect

[20:23] <TSa> but what if the real owner shows up?

[20:24] <TSa> which might be me with a lost password

[20:24] <[particle]> TSa: try "/msg nickserv identify TSa"

[20:24] <[particle]> i think it defaults to your username as password

[20:25] <TSa> it doesn't get that password

[20:27] <TSa> what are your local times? audreyt should be early morning, TimToady afternoon

[20:27] <TSa> are these the usual times here?

[20:28] <audreyt> TSa: I'm in Brazil

[20:28] <audreyt> it's 5:28pm

[20:29] <TSa> nothing particularly Perl 6 on the agenda

[20:29] <TSa> I mean here on the channel

[20:30] <kolibrie> as I was thinking about it yesterday, north and south America shift time in opposite directions at daylight savings

[20:31] <kolibrie> just makes a person like time shifting even less

[20:31] <audreyt> TSa: no, but once tomorrow fglock arrives and the day after that cmarcelo arrives there'd be more coding

[20:31] <fglock> I'm working on <+alpha+digits> - but I only see bugs so far

[20:31] <audreyt> now I'm just wondering how to do a State-of-the-Onion style talk based on Gastronomy

[20:31] <fglock> digit

[20:31] <audreyt> surprisingly hard

[20:32] <TSa> I don't get that. A talk about gastronomy from you, audreyt?

[20:32] <fglock> just make a simple skeleton presentation - the hardest part is that you will not have a clue if the audience is getting it, because it depends on the interpreter

[20:33] <fglock> you should use a compiler instead of interpreter

[20:35] <audreyt> fglock: which is why you'll be my first-pass preprocessor

[20:35] <fglock> ok :)

[20:35] <audreyt> TSa: you familiar with TimToady's style of free association Perl and an utterly unrelated discipline?

[20:36] <cmarcelo> fglock: will the interpreter sound be over her sound?

[20:36] <audreyt> in the previous years he did music, linguistics, chemistry, screensavers, postmodernism, and scientific american

[20:36] <fglock> cmarcelo: they provide headsets

[20:36] <Debolaz>  http://galleri.andersberle.com/kryp/aaa <- Newest family member.

[20:36] <lambdabot> Title: Galleriet :: Sm􏿽xE5kryp :: aaa

[20:36] <TSa> audreyt: I know his onion speaches from transcripts on the web

[20:36] <audreyt> this year it's Family

[20:36] <audreyt> so I'm trying to pick a subject TimToady haven't exercised

[20:36] <audreyt> and Gastronomy sounds good

[20:38] <TSa> so, something like 'Pugs is like spagetti, ... entangled but good' :)

[20:39] *** vel joined
[20:39] <audreyt> heh :)

[20:39] <audreyt> quantums also entangles...

[20:39] <meppl> _ pugs -e 'my $input;  while ($input = =<>) {}'

[20:40] <meppl> if i just put "return" the loop ends :/

[20:40] <eviltwin_b> haskell coding as making Hollandaise?

[20:40] <audreyt> meppl: for =<> -> $input { ... }

[20:40] <audreyt> new idiom

[20:40] <meppl> audreyt, thank you

[20:40] <audreyt> =<> autochomps so can't use "while"

[20:40] <audreyt> np :)

[20:40] <meppl> ah, okay

[20:41] <meppl> then i can delete my line with the chomp

[20:41] <audreyt> yup

[20:47] <cmarcelo> audreyt: don't know what you saw but in brazil rice+beans ("arroz+feijão") are fundamental in lunch (and dinner) for many people, don't know if this happens in other cultures..

[20:47] <audreyt> cmarcelo: no, that's nice to know...

[20:48] <audreyt> cmarcelo: do you know of atala/flavia's GNT culinary show?

[20:48] <audreyt> something called Mesa para Dois

[20:49] <cmarcelo> audreyt: i heard of but never saw it..

[20:49] <audreyt> ok...

[20:51] * fglock <-- amateur cook

[20:51] <svnbot6> r14563 | fglock++ | Pugs-Compiler-Rule - proof-of-concept implementation of <+alpha+digit>

[20:52] <audreyt> fglock: oh! have you seen that show then? do they share recipe there, or do they do something else entirely?

[20:52] <fglock> these shows usually have web sites - looking

[20:53] <fglock> http://globosat.globo.com/gnt/programas/programa.asp?gid=349 - click on "receitas"

[20:53] <lambdabot> http://tinyurl.com/yxbgh3

[20:53] <audreyt> excellent. thanks

[20:54] <fglock> oh, you have to subscribe - but just look "receitas" on google

[20:54] * audreyt brings out the very old software-as-service sharing-recipe-as-sharing-source analogy

[20:54] <audreyt> k

[20:55] <fglock> audreyt: I'll bring my recipe archives with me - I've got about 100k recipes :)

[20:55] <audreyt> :D

[20:55] <fglock> too bad we can't cook at the hotel

[20:56] <audreyt> indeed

[20:57] <PerlJam> why can't you cook at the hotel?

[20:57] <PerlJam> you don't bring a portable kitchen everywhere you go?

[20:57] <PerlJam> ;-)

[20:57] <audreyt> "laptop"

[20:57] *** eggzeck joined
[20:57] <[particle]> cooking with sony!

[20:57] <fglock> if they don't have sprinklers

[20:58] *** buubot joined
[20:58] *** weinig is now known as ghostWeinig

[20:59] <fglock> audreyt: there is a partial strike on airports, maybe I'll arrive later than expected

[20:59] <audreyt> ok

[21:00] <audreyt> 11am?

[21:00] <fglock> yes, about that

[21:00] <audreyt> roger

[21:03] <fglock> home &

[21:04] *** eggzeck joined
[21:04] *** ghostWeinig is now known as weinig|bbl

[21:05] *** buubot joined
[21:16] *** buubot joined
[21:21] *** buubot joined
[21:25] <cmeyer> Is this supposed to be valid:

[21:25] <cmeyer> my $sq = -> $val { $val**2 }; for ^3 $sq;

[21:27] <audreyt> no; you probably want

[21:27] <audreyt> map $sq, ^3

[21:27] <cmeyer> I don't need to capture the result ... just wondering if I can use 'for' to loop over an anonymous sub.

[21:30] <audreyt> ah. then no, as for is syntactically only recognizing the block

[21:30] <audreyt> eventually you can write

[21:31] <audreyt> &statement_control:<for>(^3, $sq)

[21:31] <audreyt> actually can you check if there's a test for that and if not, write one?

[21:33] <meppl> gute nacht

[21:33] <TSa> Is it fashionable to say good-bye? netiquette and such I mean

[21:34] <cmeyer> Which synopsis describes statement_control, 6?

[21:34] <cmeyer> or 4?

[21:35] <cmeyer> seems like four ... reading.

[21:36] <TSa> bye

[21:36] <[particle]> cya tsa

[21:36] <TSa> I'll be back

[21:37] <TSa> what is actually a good time to be around?

[21:37] *** trym joined
[21:38] *** TSa left
[21:38] <audreyt> cmarcelo: S04 it is

[21:38] <[particle]> hehe, wrong cm<Tab>

[21:41] <audreyt> cmeyer: S04 it is :)

[21:43] <cmeyer> :)

[21:44] <cmeyer> should I make a new .t file (in t/blocks ?)

[21:46] <audreyt> sure

[21:47] <audreyt> also while you are at it, make a new t/subs/ directory and move all t/blocks/sub_*.t into t/subs/*.t? :)

[21:48] <[particle]> i thought all the t/subs files were copied to t/blocks some time ago

[21:49] <audreyt> yeah but subs were really not blocks... :)

[21:49] <audreyt> maybe t/routines/ will also do

[21:49] <cognominal> in S06,     %pairs = {:when<now> :what<any>};  # comma missing?

[21:50] <audreyt> it's unintentional I think

[21:50] <audreyt> fixed

[21:51] <cognominal> ok, thx

[21:52] <audreyt> thank you :)

[21:56] <cmeyer> audreyt: I tried copying your syntax, but got a pugs error: *** No compatible subroutine found: "&statement_control:for"

[21:57] <audreyt> cmeyer: yes, that's why we need a test

[21:57] <audreyt> as it's not yet implemente

[21:58] <cmeyer> what's the appropriate way to write tests that barf (it now says "# Looks like you planned 1 tests, but ran 0")?

[21:58] <eviltwin_b> :todo<something>

[21:58] <audreyt> also eval ''

[21:59] <cmeyer> thanks

[22:00] <audreyt> :) see t/README for more info

[22:05] *** anatoly joined
[22:05] *** anatoly is now known as anatolyv

[22:07] <anatolyv> ok, another silly spec question :) the builtin operators, macros etc. - are they lexicals visible in all scopes, or dynamic in the global package?

[22:10] <audreyt> see S02:1030

[22:10] <audreyt> or S11:176

[22:10] <audreyt> short answer: they are defined in ::GLOBAL but imported lexically

[22:10] <audreyt> and you can say

[22:12] <audreyt> no GLOBAL '&statement_control:<if>';

[22:12] <audreyt> lexically, presumably.

[22:12] <audreyt> (or via some other use-but-exclude syntax)

[22:12] <anatolyv> awesome.

[22:13] <TimToady> lexical scopes are very important for any language that aspires to be multiple languages.

[22:14] <anatolyv> so when i say our $x, that imports the package '$x' into the lexical scope. But when is '$x' actually entered into the package? At runtime during the 'our'?

[22:15] <TimToady> it's entered into the package as soon as the compiler knows about it.

[22:15] *** justatheory joined
[22:16] <anatolyv> TimToady: so it's OK, for instance, to refer to $x in a qualified way, via the package, lexically before "our $x" is encountered, correct?

[22:16] <TimToady> yes

[22:16] <anatolyv> TimToady, audreyt: OK, thanks a lot, again :)

[22:17] <audreyt> TimToady: there's no exclusion-import syntax in the spec yet?

[22:18] <TimToady> not explicitly, but presumably 'no' could be made to work.

[22:19] <audreyt> like it better than use foo <!bar>

[22:19] <TimToady> :my<foo>, :no<bar>

[22:19] <audreyt> that's a thought too...

[22:19] <TimToady> import to nowhere...

[22:19] <audreyt> too bad can't quite say :!my

[22:19] <audreyt> or :!my<foo>

[22:21] <TimToady> does Mammal[:no<placenta>]

[22:23] * audreyt tries to put "cuisine livre" and "joy of cooking" into a coherent thought train

[22:23] <audreyt> this style is harder than it looks like from the audience's seat...

[22:23] <TimToady> :O

[22:23] <audreyt> :O<fun>

[22:24] *** trym_ joined
[22:26] *** Caelum joined
[22:28] *** lanny joined
[22:31] <lanny> Howdy.  Limbic_Region (et al) I chased a red herring for a bit and still working but problem is between 14485 (duration 1076) and either 11490 (dur 3578 but had a hang and was over at my folks) or 14494 (dur 1142)

[22:31] <lambdabot> lanny: You have 1 new message. '/msg lambdabot @messages' to read it.

[22:31] <lanny> @mess

[22:31] <lambdabot> Maybe you meant: messages messages? msg

[22:31] <lanny> heh

[22:31] <lanny> @messages

[22:31] <lambdabot> Limbic_Region said 7h 45m 4s ago: if your smoke hangs on any tests then make sure your script removes thoses tests as part of the smoke process

[22:32] <lanny> At a guess looking at the logs I'd say it's -> if's even though those have been ruled out.  :)

[22:32] <lanny> rev 14489

[22:34] *** mugwump joined
[22:37] <audreyt> lanny: hm. write a small loop and microbenchmark it with and without r14489?

[22:39] <ashleyb> ?eval "attr='value'" ~~ /<-['"]>+ = (<["']>)<any-$0><$0> /

[22:39] *** evalbot_r14561 is now known as evalbot_r14563

[22:39] <evalbot_r14563> *** Cannot parse regex: <-['"]>+ = (<["']>)<any-$0><$0> ␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:40] <ashleyb> ?eval "attr='value'" ~~ /<-[=]>+ = (<["']>)<any-$0><$0> /

[22:40] <evalbot_r14563> *** Cannot parse regex: <-[=]>+ = (<["']>)<any-$0><$0> ␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:42] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<any-$0><$0>/

[22:42] <evalbot_r14563> *** Cannot parse regex: (<["]>)<any-$0><$0>␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:42] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<any><$0>/

[22:42] <evalbot_r14563> *** Cannot parse regex: (<["]>)<any><$0>␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:42] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<any>/

[22:42] <evalbot_r14563> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 2, ␤  str => "\"x", ␤  sub_pos =>␤    (Match.new(␤       ok => Bool::True, ␤       from => 0, ␤       to => 1, ␤       str => "\"", ␤       sub_pos => (), ␤       sub_named => {}␤     ),), ␤  sub_named =>␤    { "any" =>␤        Match.new(␤          ok => Bool::True, ␤          from => 1, ␤          to => 2, ␤          str => "x", ␤          sub_pos => (

[22:43] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<any>+<$0>/

[22:43] <evalbot_r14563> *** Cannot parse regex: (<["]>)<any>+<$0>␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:43] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<any>+$0/

[22:43] <evalbot_r14563> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 7, ␤  str => "\"xxxxx\"", ␤  sub_pos =>␤    (Match.new(␤       ok => Bool::True, ␤       from => 0, ␤       to => 1, ␤       str => "\"", ␤       sub_pos => (), ␤       sub_named => {}␤     ),), ␤  sub_named => {"any" => ()}␤)

[22:45] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<any-$0>+$0/

[22:45] <evalbot_r14563> *** Cannot parse regex: (<["]>)<any-$0>+$0␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:46] <ashleyb> ?eval '"xxxxx"' ~~ /(<["]>)<-$0>+$0/

[22:47] <evalbot_r14563> *** Cannot parse regex: (<["]>)<-$0>+$0␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[22:49] *** cjeris left
[22:49] <[particle]> ashleyb: perhaps run.pugscode.org would be a better place?

[22:50] <ashleyb> forgot about that -- thanks.

[23:08] *** eggzeck joined
[23:09] <audreyt> cmarcelo, fglock: is "alegria" a better translation than "divertimento" for Fun?

[23:14] *** jrockway joined
[23:15] <jrockway> anyone have success building pugs on openbsd?

[23:15] <lanny> audreyt: just gonna smoke em both.

[23:16] <audreyt> jrockway: havn't heard of a built lately. you ran into any problems?

[23:17] <jrockway> yeah, linking pugs.new fails because p5embed.o has an __init symbol (which is also in crtbegin.o)

[23:18] <audreyt> is this trunk or releaes?

[23:18] <jrockway> release, 6.2.13... want me to try trunk instead?

[23:19] <audreyt> ghc 6.4 or 6.6?

[23:19] <jrockway> 6.6

[23:19] <audreyt> ok. try trunk, but 90% chance not going to help

[23:20] <jrockway> ok, i'll let you know how it goes

[23:20] *** nicodaemos joined
[23:21] <jrockway> probably just need to change some flags around when building p5embed

[23:21] <jrockway> i'll look in to it

[23:21] <audreyt> jrockway++

[23:21] <lanny> So 14887 was duration 1075 which is in line with the smokes before it.  After I see roughly 6.5% increase in smoke times which I think are located at 14488 which is smoking now.  I'll post full data when done with taking my girls out for Halloween trick-or-treeting.

[23:22] <audreyt> jrockway: also potentially reverting r14370 alone may be relevant. but changing flags in Pugs.cabal is more hopeful

[23:22] <audreyt> lanny: so much thanks

[23:22] <clkao> audreyt: did you say you want commitbit today

[23:22] <audreyt> clkao: I did say but obra said they had some problems in setting up the host

[23:22] <audreyt> and it's preferred to feather etc

[23:23] <audreyt> how's that being sorted?

[23:27] <obra> audreyt: ENOROBRT

[23:27] <obra> audreyt: I am adding nickname support right htis moment, thought

[23:27] <obra> though

[23:27] <audreyt> nod. I took a look

[23:27] <audreyt> not sure if it's just as simple as

[23:28] <audreyt> htpasswd -nmb @{[$user->nick]} @{[$user->__value('password')]

[23:28] <audreyt> in addition (or as alternative to? a config?) to ->email

[23:28] <audreyt> (and in two other places in M::Repo too)

[23:28] <audreyt> I guess for Pugs we always want nicks

[23:28] <audreyt> never emails

[23:28] <audreyt> and people can change their nicks. I think.

[23:29] <audreyt> (the renick part is already part of commitbit I gather)

[23:30] *** mako132_ joined
[23:32] <obra> it's not

[23:32] <obra> users can cahnge their nicks

[23:32] <obra> er. sorry

[23:32] <obra> I thought that renicking should be a metacommitter operation

[23:32] <obra> too easy for a user to renick and lose history

[23:33] <audreyt> fair enough. so metacommitter can renick herself or renick a normal committer?

[23:34] <obra> yes

[23:35] <audreyt> cool

[23:35] <obra> it means that one person can have different nicks on different projects as well

[23:35] <audreyt> that sounds about right

[23:35] <audreyt> nick becomes a handle by which email links to project

[23:36] <audreyt> clkao: what's the magic svk command to run to give a rundown of active committers?

[23:37] <eviltwin_b> hm, might be useful

[23:37] <eviltwin_b> only reason I'm eviltwin_b here is that I'm mainly on this IRC network for #openafs

[23:37] <eviltwin_b> getting mistaken for Russ gets old

[23:37] <audreyt> indeed

[23:38] <obra> turns out we need it for bps now, audreyt. svn 1.4 changed auth subtly

[23:38] <audreyt> "it"?

[23:39] <audreyt> = nick instead of email as tokens?

[23:43] <obra> yeah

[23:44] <obra> it's now the case that svnserve when run in "requires auth" mode requires auth + valid_user.

[23:44] <audreyt> aha.

[23:47] * audreyt writes some more slides extolling the virtue of dopamine

[23:48] <obra> heh

[23:55] *** weinig|bbl is now known as weinig

[23:59] *** weinig is now known as weinig|bbl

