[00:18] <dduncan> success!

[00:18] <dduncan> thank you cmarcelo, Pugs builds now

[00:19] <dduncan> for me

[00:20] <cmarcelo> dduncan: nice =)

[00:20] <diakopter> trying on macintel...

[00:21] <Patterner> the compile time for pugs on an old powerbook is three days (with interruptions) by now...

[00:22] <diakopter> optimized or un

[00:22] *** nekokak joined
[00:22] <Patterner> guess :)

[00:22] <diakopter> optimized

[00:23] <Patterner> 10 points for diakopter. 0 points for the UK.

[00:23] <diakopter> lots of warning while making Judy

[00:24] <Patterner> no wait. wrong directory. it's ghc.

[00:25] <diakopter> 6 min. to compile on macintel, unoptimized.

[00:26] *** rindolf joined
[00:27] <diakopter> anyone around who feels like handing out a task (for me to do)?

[00:29] <Patterner> macintel != old pb

[00:29] <Patterner> (i'll upgrade when they stop exploding)

[00:29] * diakopter 's has stopped exploding

[00:30] <Patterner> good for you :)

[00:33] <diakopter> ok, no assigners around... any suggesters, even?  any ideas on what I could work on?  I can do perl5 and I've read the Apocalypses, Synopses, Exegeses, Apocrypha, and some Haskell tutorials.

[00:34] <diakopter> I'm somewhat familiar with the source tree

[00:35] <Patterner> translate the docs to klingon

[00:35] <diakopter>  - isn't there a p5 module that does that?

[00:55] <audreyt> diakopter: there's a TASKS file :)

[00:55] <diakopter> sort of

[00:56] <diakopter> audreyt - good morning

[00:56] <audreyt> hi

[00:58] *** audreyt changes topic to: SVK users: http://search.cpan.org/dist/SVN-Mirror/ | paste: http://sial.org/pbot/perl6 | pugs.blogs.com | pugscode.org | pugs.kwiki.org | http://www.treehugger.com/files/th_images/paradigm.jpg

[01:01] <audreyt> diakopter: are you interested in coding up runpugs? :)

[01:01] <audreyt> I mean trypugs

[01:01] <diakopter> yes but I have a Module::Build question for you before I get started on something

[01:01] <audreyt> er, ok, but I know very little about M::B

[01:02] <diakopter> this isn't you?  http://www.perlfoundation.org/gc/grants/2003_autrijus.html

[01:02] <lambdabot> Title: 2003 Grants - Autrijus Tang - The Perl Foundation

[01:03] <diakopter> oh, I see, mostly not done by you on that part; nm

[01:06] <audreyt> yeah. I reanimated MakeMaker with Module::Install instead of joining the shiny Module::Build crowd...

[01:08] <diakopter> yes.  how far did cwest get with the Jifty implementation... is it in pugs svn?

[01:08] <audreyt> no. I think it fizzled somehow

[01:08] <diakopter> you're about done with Jifty, right?

[01:09] <diakopter> or are there lots of ambitions still to be realized

[01:09] <diakopter> I read the ppt about it

[01:09] <audreyt> I think a generic line-based process harness to the web may be the right answer

[01:10] <audreyt> but I can't quite find something like that on CPAN

[01:10] <diakopter> are you planning on running this on feather?

[01:10] <audreyt> diakopter: Jifty is my day $job :) and I need to run in ~1hr to $client side and hack more jidty

[01:10] <audreyt> diakopter: yes, perhaps in a chrooted quota'ed place. or I can run it in a freebsd jail somewhere, like pugscode.org

[01:12] <diakopter> my Module::Build problems appeared when I was installing SVK in order to host a SVN::Web view of pugscode diffs

[01:12] <diakopter> mostly for my own benefit.  I learn well from reading diffs

[01:14] <diakopter> the client side is trivial, obviously.  I could do a super-quick implementation in WebGUI, since that's the web app framework with which I'm familiar

[01:15] <diakopter> super-quick meaning compared to jifty (for me)

[01:15] <audreyt> oh cool

[01:15] <audreyt> # http://rt.openfoundry.org/Foundry/Project/Source/index.html/pugs/log/

[01:15] <lambdabot> Title: OpenFoundry&#40;自由軟體鑄􏿽xE9􏿽x80 􏿽xE5 􏿽xB4-專案開發平台&#41; -- OSSF

[01:15] <audreyt> sure, whatever works :)

[01:19] *** rlb3 joined
[01:23] <svnbot6> r12235 | markstos++ | ChangeLog updates

[01:26] <audreyt> (bbiab)

[01:44] <svnbot6> r12236 | lwall++ | s:g/FIRST/START/ (Note, didn't change firstBlock storage, since we still

[01:44] <svnbot6> r12236 | lwall++ | have a FIRST.  START doesn't need blocktrait storage since it's inline code.)

[01:54] <TreyHarris> "may occur only at the top level of such a loop block".  so that means you can put it immediately within the outermost braces of the loop you want it to refer to, but it doesn't mean you can't have a nested loop and control that with another NEXT, right?

[01:54] *** diakopter joined
[01:55] <TreyHarris> So... for @a { if $x { NEXT { ... } } } is invalid, but for @a { for @b { NEXT { ... } } } is valid, with the NEXT block referring to the for @b?

[01:56] *** JarJarBinks joined
[02:00] <TreyHarris> &'s to uncommute

[02:04] <dduncan> fyi, I've just started my first smoke since 6.2.12 was released ...

[02:05] <dduncan> or at least, thought I did...

[02:06] <dduncan> cmarcelo et al, it seems the build process is still borked

[02:06] <cmarcelo> dduncan: what's happening?

[02:07] <dduncan> while Pugs built fine, subsequently trying to say 'make smoke' caused some sort of make to recheck itself, and that deleted some files

[02:07] <dduncan> eg, it now says: /usr/bin/ld: table of contents for archive: third-party/installed/libJudy.a is out of date; rerun ranlib(1) (can't load from it)

[02:07] <dduncan> also, the pugs executable disappeared

[02:08] <cmarcelo> err.. =P still have the entire output to paste?

[02:08] <dduncan> and the previously built Pugs did execute too

[02:08] <dduncan> I only have the output due to make smoke, since the make worked before

[02:08] <dduncan> but will supply that

[02:08] <cmarcelo> fine

[02:10] <pasteling> "dduncan" at 24.69.53.198 pasted "'make smoke' causing pugs to be deleted, after successful 'make' with no interim pulls" (263 lines, 18.2K) at http://sial.org/pbot/18999

[02:12] <dduncan> still, that's rather telling by itself

[02:12] <dduncan> good luck figuring it out

[02:14] <cmarcelo> i'll try to reproduce it here.. also, I don't know why it always should re-compile (or try to) pugs when making smoke =P

[02:20] <cmarcelo> dduncan: here it goes fine.

[02:20] <cmarcelo> =(

[02:22] <dduncan> I have just pulled the last 2 revs and will try again

[02:22] <dduncan> but without a prior cleaning

[02:23] <cmarcelo> ok.

[02:26] *** diakopter joined
[02:29] *** SamB is now known as boo

[02:29] *** boo is now known as SamB

[02:30] <dduncan> okay, so after running 'svk pull' and 'make', the latter ends with this as before: /usr/bin/ld: table of contents for archive: third-party/installed/libJudy.a is out of date; rerun ranlib(1) (can't load from it)

[02:33] <cmarcelo> dduncan, go third-party/judy/Judy-1.0.3 and do a make clean there, then back to pugs root, try make...

[02:34] <dduncan> will do

[02:44] <cmarcelo> dduncan: something?

[02:44] <dduncan> yes, that worked

[02:45] <dduncan> however, simply running make again will bork it

[02:45] <dduncan> by contrast, if there are no source changes since a prior make, then make should have no lasting effect, and that's what it used to do

[02:46] <dduncan> the way this is behaving is ...

[02:46] <cmarcelo> yep.. we could prepend make-call in util/build_pugs.pl with a make-clean.. but that will recompile judy everytime.. =P

[02:46] <dduncan> its like the old copy is always deleted, and then another one remade only conditionally

[02:47] <dduncan> perhaps the removal and remake should be together in the same conditional?

[02:47] <cmarcelo> dduncan: smoke always started a recompilation of Pugs, which resulted in no file being recompiled (all skipped) but the linking step always happened...

[02:47] <dduncan> this is acting like the make process is deleting some interim file at the end that it shouldn't be deleting

[02:48] <dduncan> and the only way that comes back is a Judy make-clean

[02:48] <dduncan> plus make

[02:49] <dduncan> are you saying this behaviour doesn't happen to you?

[02:49] <cmarcelo> dduncan: lets try something else.. do a make clean in judy then make pugs... this should work... THEN, comment in util/build_pugs.pl the judy stanza and make..

[02:49] <cmarcelo> doesn't happen here.. make, then make smoke, goes fine.

[02:49] *** Bit-Man joined
[02:55] <dduncan> I will try editing that file a few times to see what changes do or don't make the problem go away

[02:58] <cmarcelo> dduncan: ok. looks like when make(in judy) have nothing to do here, it really doesn't break things and the same files get copied in the right places... this is not the case for you. maybe avoiding doing anything at all when libJudy.a is already in place can solve the problem..

[02:58] <cmarcelo> [makes sense?]

[02:58] <dduncan> I think so

[03:00] *** neoesque joined
[03:01] <cmarcelo> wanna try it there and see if works?

[03:01] <dduncan> I still have to figure out exactly what to do

[03:02] <cmarcelo> dduncan: do you program in perl? test for installed/lbiJudy.a existence, if its the case, do nothing, else, do our steps including a make clean...

[03:03] <dduncan> yes, give me time here ...

[03:03] <cmarcelo> ok, np

[03:13] <dduncan> seems to be working ... I will commit a patch that does this existence test

[03:14] <cmarcelo> dduncan: great! now we must remember this when updating C judy code =o) [need to purge libJudy.a to update it]

[03:15] <dduncan> but I was testing for third-party/judy/Judy-1.0.3/src/obj/.libs/libJudy.a existence

[03:15] *** mako132_ joined
[03:15] <dduncan> because that was the original copy

[03:15] <cmarcelo> dduncan: ok. but even so, if we change a .c in judy tree, it'll be recompiled?

[03:16] <dduncan> probably not

[03:16] <cmarcelo> ok. but by now judy C tree won't change much, so commit your patch...

[03:16] <dduncan> I just add an if-block around the 5 lines starting at build_pugs.pl line 98

[03:21] <svnbot6> r12237 | Darren_Duncan++ | updated util/build_pugs.pl to only go through the Judy make process if third-party/judy/Judy-1.0.3/src/obj/.libs/libJudy.a doesn't exist ... otherwise, any 'make' following the one that builds Judy will cause a Judy object file to disappear and not be remade, leading to Pugs build failure ... on some systems like mine (OS X) anyway

[03:28] *** buubot joined
[03:32] <cmarcelo> audreyt: i'll let blog activities for tomorrow, after the build process stabilize.. besides doing what i can to unbreak build proc, i'm investigating the Judy.Hash "related" segfaults (is gaal looking onto this too?)..

[03:33] <cmarcelo> (finally..) sleep &

[03:44] <dduncan> turns out I had to install 'Task-Smoke' and 'Best' since last month, but ...

[03:44] <dduncan> now that that's done, my smoke is underway

[04:38] *** SSelva joined
[04:46] *** traecer joined
[04:46] *** penk joined
[05:13] *** kanru joined
[05:18] *** iblechbot joined
[05:27] *** agentzh joined
[05:28] <agentzh> wow, it's very strange that perl 5's "glob 'Judy*/*.o'" doesn't work properly on particle's machine. :/

[05:30] <agentzh> okay, i'll try to tidy up the output while compiling judy on win32 in order to make it less "spectacular". ;-)

[05:31] <agentzh> last night's work is mostly a hack.

[05:31] <agentzh> *was

[05:59] <gaal> re synopsis patch r10944 - what about nested loop blocks?

[05:59] *** xinming joined
[06:00] <agentzh> yes, TimToady's wording is ambiguous there.

[06:00] <gaal> and, what is the definition of "loop" for this purpose? what about user-defined control structures?

[06:00] <svnbot6> r12238 | agentz++ | tidied up the outputs while building Judy on Win32.

[06:00] <svnbot6> r12238 | agentz++ | adjusted build_pugs.pl a bit.

[06:01] <gaal> also, having both START and BEGIN will cause, uh, no end to confusion...

[06:01] <agentzh> i'm not sure if r12238 would break unix build. please test.

[06:01] <agentzh> gaal: *nod*

[06:01] <gaal> agentzh: testing.

[06:02] <agentzh> gaal++

[06:02] <gaal> should I clean anything before testing?

[06:03] <agentzh> gaal: no.

[06:03] *** marmic joined
[06:03] <gaal> works.

[06:03] <agentzh> incremental make is sufficient.

[06:03] <agentzh> great

[06:04] <agentzh> gaal: is it necessary to compile Judy everytime?

[06:04] *** weinig joined
[06:04] <gaal> I don't think so! chase dependencies like 'make' does.

[06:04] <agentzh> the unix part doesn't compile Judy if libJudy.a is already there.

[06:05] <gaal> Well, good, if the timestamps are reasonable

[06:05] <gaal> that is if the .a is newer than the .hs etc.

[06:05] <agentzh> gaal: currently there's no 'make' logic for win32. :/

[06:05] <agentzh> writing a Makefile for Win32 Judy will be a lot of work i'm afraid.

[06:06] <gaal> TimToady: I know you don't like longish names, but how about CLOSURE_INIT for START?

[06:06] <gaal> agentzh: the .c or the .hs part?

[06:06] <agentzh> gaal: i think TimToady dislikes underscores.

[06:07] <gaal> I know he does

[06:07] <agentzh> the .c part.

[06:08] <gaal> agentzh: there's a Makefile.am there: a windows makefile should be generated by autotools, *if* you're using the gnu toolchain to build...

[06:08] <gaal> another alternative is SETUP {...}

[06:08] <agentzh> looking

[06:08] <gaal> agentzh: what builds it on w32 now?

[06:09] <agentzh> gaal: .bat

[06:09] <gaal> ah.

[06:09] <gaal> where?

[06:09] <agentzh> a quite long .bat translated by hand from sh scripts last night.

[06:09] <agentzh> gaal: a sec...

[06:10] <agentzh> gaal: third-party/judy/Judy-1.0.3/src/hs_build.bat

[06:11] <agentzh> transcoding hs_build.bat to nmake's Makefile is not an easy task. :)

[06:11] <gaal> wow, yes, I see

[06:11] <agentzh> given the C part of Judy compilation is pretty fast on my machine, i'd say it's okay to rebuild Judy everytime the Win32 user types "nmake" or its families.

[06:12] <agentzh> it's just a few seconds.

[06:12] <agentzh> the bottleneck is other parts of the pugs build system.

[06:13] <scw> Could any one help me on the problem stated in the last section of http://0rz.net/691Gv ?

[06:13] <lambdabot> Title: Yet Another Pugs Hacker's Blog: August 15th, 2006 -- Last Day of SoC

[06:15] <gaal> scw: why not emit the annotation?

[06:16] <gaal> what's the "string" function?

[06:17] *** weinig joined
[06:18] <gaal> oh, it's a parsec builtin.

[06:18] <gaal> scw: what does your parser construct? from the type annotation it looks like it builds a string?

[06:20] <scw> gaal: I couldn't emit the annotation since I don't know the type

[06:20] <svnbot6> r12239 | agentz++ | [third-party/judy/Judy-1.0.3/src/hs_build.bat]

[06:20] <svnbot6> r12239 | agentz++ | removed a huge amount of annoying comments from the source.

[06:21] <scw> gaal: It will, as the type tells, return a "parser state" with a string

[06:22] *** Aankhen`` joined
[06:27] <gaal> scw: what's the minimal stuff I need to do to get a sample output from this?

[06:32] <pasteling> "gaal" at 192.115.25.249 pasted "rule2parsec.pl failure" (8 lines, 763B) at http://sial.org/pbot/19005

[06:34] *** crem_ joined
[06:35] <gaal> scw: ping?

[06:39] <svnbot6> r12240 | agentz++ | [t/syntax/comments.t]

[06:39] <svnbot6> r12240 | agentz++ | fixed the "unspace in comment" test to reflect recent changes to S02. TimToady++

[06:40] *** kane-xs joined
[06:40] <dduncan> first smoke this month seems to be a success ...

[06:41] <agentzh> dduncan: have you put the smoke report somewhere?

[06:42] <agentzh> later &

[06:42] *** agentzh left
[06:42] <dduncan> yes ... its on the smokeserv as usual

[06:43] <dduncan> spefically its the: Haskell runcore, repository snapshot / darwin of r12237 that took 136 minutes

[06:44] <gaal> scw: it's not clear to me what LiteralPatch is against. My version of Pugs.Parser.Literal doesn't match that patch

[06:45] <dduncan> so the execution speed seems unchanged from a couple months ago ... not sure if it was supposed to with recent updates or not

[06:45] <gaal> could you give a command line that emits a sample parser please?

[07:05] <scw> gaal: I use perl -I../../../perl5/Pugs-Compiler-Rule/lib -I../../../perl5/Pugs-Grammar-MiniPerl6/lib rule2parsec.pl Literal.grammar

[07:06] <scw> gaal: the patch should be applied to the generated .hs file

[07:06] <scw> gaal: but according to the error message you got, the Pugs::Grammar::MiniPerl6 part seams not the main reason

[07:07] <scw> gaal: You may need to run 'make' under perl5/Pugs

[07:07] <scw> gaal: You may need to run 'make' under perl5/Pugs-Compiler-Rule

[07:15] *** SSelva left
[07:23] <gaal> scw: ACK. installing prerequisites...

[07:29] *** baest joined
[07:34] <gaal> scw: looks like you need the following declaration in scope:

[07:34] <gaal> instance MonadState RuleState RuleParser where

[07:34] <gaal>     get = getState

[07:34] <gaal>     put = setState

[07:34] <gaal> (lifted from src/Pugs/Parser/Types.hs)

[07:40] <scw> gaal: so why does type annotation work?

[07:40] *** cmarcelo joined
[07:42] <scw> gaal: and, how can an instanciation declaration be exported?

[07:46] <gaal> scw: my bad, you're importing Pugs.Parser.Types already. hmm.

[07:46] <gaal> how do you compile the generated .hs code?

[07:52] <gaal> scw: the problem requiring your annotation is that haskell can only infer type up to a paramaterized parser:

[07:52] <gaal> @type option

[07:52] <lambdabot> Not in scope: `option'

[07:52] <gaal> @type Text.ParserCombinators.ReadP.option

[07:52] <lambdabot> forall a. -> Text.ParserCombinators.ReadP.ReadP a -> Text.ParserCombinators.ReadP.ReadP a

[07:53] <gaal> you need to supply the "a", otherwise the type of your function is ReadParser a

[07:54] <gaal> as for how *you* infer it's a String... good question :) you either do type inference on the (Perl) rule, or require an annotation there.

[08:01] *** cm joined
[08:08] *** nekokak_ joined
[08:11] <scw> gaal: But doesn't 'option "" ' part make a be [Char] = String ?

[08:12] <scw> Hmm... however, currently I assume ALL rules without their own production rule have type ReadParser String

[08:20] *** SageLT joined
[08:24] *** bernhard joined
[08:56] *** drrho joined
[08:58] *** Southen joined
[08:59] *** xinming joined
[09:15] *** dduncan left
[09:19] *** traecer left
[09:24] *** chris2 joined
[09:30] *** Southen joined
[09:33] *** HXanadu joined
[09:36] *** buetow joined
[09:53] *** cyberplaque joined
[10:05] *** cyberplaque left
[10:05] *** mauke_ joined
[10:10] *** mauke_ is now known as mauke

[10:13] *** mtve joined
[10:13] <svnbot6> r12241 | audreyt++ | * t/oo/roles/basic.t: Now that roles work in compile time,

[10:13] <svnbot6> r12241 | audreyt++ |   let them take place in compile time.

[10:16] <svnbot6> r12242 | audreyt++ | * Fix build system for GHC 6.5 trunk 2006-07-25 and later,

[10:16] <svnbot6> r12242 | audreyt++ |   which incoporated Simon Marlow's implementation of

[10:16] <svnbot6> r12242 | audreyt++ |   "Generalise Package Support", a.k.a. multiversioning.

[10:16] <svnbot6> r12242 | audreyt++ |   We now always install Pugs into third-party/installed/,

[10:16] <svnbot6> r12242 | audreyt++ |   and link Main.hs against it.

[10:22] *** cmarcelo left
[10:34] *** plisk joined
[10:40] *** baest joined
[10:51] *** evalbot_12389 joined
[10:55] <svnbot6> r12243 | audreyt++ | * agentzh++ noted that "\13\10" should mean simply "1310",

[10:55] <svnbot6> r12243 | audreyt++ |   but that broke Net::IRC, and therefore broke evalbot.

[10:55] <svnbot6> r12243 | audreyt++ |   Fixed to say "\d[13,10]" instead.

[10:58] *** evalbot_23394 joined
[10:58] <audreyt> I wonder if "\0123" is a warnable offense

[10:58] <svnbot6> r12244 | audreyt++ | * evalbot-loop: make it svn/svk agnostic

[10:58] <svnbot6> r12245 | audreyt++ | * it's chat.freenode.net not irc.freenode.net

[10:58] <audreyt> ?eval "moose"

[10:58] <evalbot_23394> "moose"

[11:02] *** foo\ joined
[11:06] *** agentzh joined
[11:07] <agentzh> audreyt: should S02 explicitly outlaw the "\ddd" notation?

[11:07] *** TimToady joined
[11:07] <audreyt> I think so as it departs from perl5

[11:08] <agentzh> what if fire off a mail to p6l?

[11:08] <audreyt> similar to Initial C<0> no longer indicates octal numbers by itself.  You must use

[11:08] <agentzh> oh, TimToady is here.

[11:08] *** iblechbot joined
[11:08] <agentzh> audreyt: *nod*

[11:09] <agentzh> i must use the 0o prefix.

[11:16] * agentzh has sent the mail to p6l.

[11:17] *** cmarcelo joined
[11:22] *** diakopter joined
[11:22] <agentzh> ?eval $x = do 3+2;

[11:22] *** evalbot_23394 is now known as evalbot_23396

[11:22] <evalbot_23396> Error: Undeclared variable: "$x"

[11:23] <agentzh> ?eval my $x = do 3+2;

[11:23] <evalbot_23396> \5

[11:23] <agentzh> audreyt: is "do EXPR" a valid expression?

[11:23] <agentzh> my gut feeling is "yes", given that EXPR can also be a statement.

[11:24] <agentzh> err... from the grammatical point of view.

[11:24] <audreyt> yes it is.

[11:24] <agentzh> thx!

[11:26] * agentzh now feels the need to start another thread on p6l.

[11:28] *** diakopter joined
[11:34] <svnbot6> r12246 | agentz++ | [t/syntax]

[11:34] <svnbot6> r12246 | agentz++ | recovered hyper_latin1.t which is *not* "meaningless".

[11:38] <agentzh> audreyt: "do { $a } while $b" currently hangs on pugs. i was expecting a parse error or a warning or something like that.

[11:39] <agentzh> sorry, i mean "do { $a } while $b;"

[11:39] <cmarcelo> audreyt: make needs a prefix or something now, it's trying to installl things in /lib and /bin

[11:40] <audreyt> oy

[11:41] *** pbuetow joined
[11:41] <cmarcelo> (it was a question...)

[11:41] * agentzh dodges.

[11:43] <audreyt> agentzh: the "repeat" thing is new, we havn't implemented it

[11:43] <svnbot6> r12247 | audreyt++ | * fix --prefix.

[11:43] <agentzh> audreyt: okay.

[11:43] *** int-e joined
[11:56] *** bpphillips joined
[12:03] *** dmsantam joined
[12:21] <pasteling> "agentzh" at 210.22.200.67 pasted "Pugs doesn't run any of these two tests. could anyone fix the pugs src/ for me?" (26 lines, 357B) at http://sial.org/pbot/19009

[12:25] <audreyt> agentzh: looking into it

[12:25] <agentzh> audreyt++

[12:28] <audreyt> agentzh: fixed

[12:29] <svnbot6> r12248 | audreyt++ | * infix:<is> is now gone.  Runtime infix is doesn't make any sense anyway.

[12:29] <agentzh> yay!!!

[12:29] <agentzh> up'ing

[12:32] *** Bit-Man joined
[12:32] <audreyt> mm, GHC-trunk indeed solved the exponential compilation problem as they promised

[12:32] <audreyt> s/compilation/compilation time/

[12:38] <svnbot6> r12249 | cmarcelo++ | * "make clean" before "make" in Judy to force regeneration

[12:38] <svnbot6> r12249 | cmarcelo++ | of libJudy.a. Also re-copy file to third-party/installed

[12:38] <svnbot6> r12249 | cmarcelo++ | everytime, because it may be lost in cases that

[12:38] <svnbot6> r12249 | cmarcelo++ | third-party/judy/Judy-1.0.3/src/obj/.libs/libJudy.a is

[12:38] <svnbot6> r12249 | cmarcelo++ | preserved.

[12:38] <agentzh> oh, pugs build fails again... :(

[12:38] *** Bit-Man_ joined
[12:38] <audreyt> oh no :/

[12:38] <audreyt> nopaste the error after r12249?

[12:39] <pasteling> "agentzh" at 210.22.200.67 pasted "Win32 build failure" (152 lines, 6.8K) at http://sial.org/pbot/19010

[12:40] <agentzh> even "nmake realclean" didn't help. :/

[12:40] <audreyt> hm

[12:41] <agentzh> i'll update to r12249 and try again.

[12:41] <audreyt> fixed

[12:41] <audreyt> r12250

[12:41] <agentzh> audreyt++

[12:43] <agentzh> trying out r12250...

[12:43] <svnbot6> r12250 | audreyt++ | * fix legacy build dirs

[12:43] *** elmex joined
[12:43] *** cm left
[12:46] * agentzh wonders why his machine suddenly slows down while building pugs.

[12:48] <agentzh> still failed. i'll check out build_pugs.pl myself to make sure it's not my fault.

[12:48] <audreyt> failed with the same thing?

[12:48] <audreyt> I changed Makefile.PL so it will rm

[12:48] <audreyt> third-party/fps/fps.cabal

[12:48] <audreyt> is that file still there?

[12:48] <cmarcelo> agentzh: ghc eats lots of mem, maybe the system is using swap to help, and it slows down a bit..

[12:49] <audreyt> if you didn't run Makefile.PL

[12:49] <audreyt> maybe unlink it by hand and make again?

[12:49] <agentzh> cmarcelo: it was not swapping at all.

[12:50] <agentzh> audreyt: no third-party/fps/fps.cabal.

[12:50] <audreyt> agentzh: but your error log says

[12:50] <audreyt> Setup.exe: Multiple description files found.  Please use only one of : ["fps.cab

[12:50] <audreyt> al","pugs-fps.cabal"]

[12:50] <agentzh> this time it complaints "Setup.exe: cannot satisfy dependency HsJudy-any".

[12:50] <audreyt> oh. better.

[12:50] *** Limbic_Region joined
[12:50] <audreyt> nopaste the entire log again?

[12:50] <agentzh> okay

[12:51] <pasteling> "agentzh" at 210.22.200.67 pasted "New outputs" (42 lines, 2K) at http://sial.org/pbot/19011

[12:51] *** rindolf joined
[12:53] <audreyt> agentzh: weird... rm -rf third-party/installed/

[12:53] <audreyt> and make again?

[12:53] <rindolf> Hi audreyt

[12:54] <agentzh> audreyt: k

[12:55] *** Bit-Man__ joined
[12:55] <agentzh> audreyt: that doesn't help. :/

[12:56] <audreyt> I need the earlier error messages about fps

[12:56] <agentzh> audreyt: a sec

[12:57] <agentzh> auderyt: during "perl Makefile.PL"?

[12:57] *** lisppaste3 joined
[12:57] <agentzh> *audreyt

[12:58] *** Bit-Man___ joined
[12:58] <Limbic_Region> hrm - it sounds like someone is having build problems and amazingly enough - I think my Win32 is working just fine this morning with a current rev

[12:58] *** Bit-Man___ is now known as Bit-Man

[12:58] <Limbic_Region> or at least it is past building pugs and is on to the post modules

[12:58] * Limbic_Region does his happy dance

[12:58] <pasteling> "agentzh" at 210.22.200.67 pasted "outputs of "nmake unoptimized"" (161 lines, 7K) at http://sial.org/pbot/19012

[12:59] <agentzh> Limbic_Region: :)

[12:59] <agentzh> Limbic_Region: does the latest revision work for you?

[12:59] *** Bit-Man___ joined
[13:00] <agentzh> i want to make sure if it's specific to my machine.

[13:00] *** larsen joined
[13:00] <agentzh> wow...a lot of people are joining #perl6...

[13:01] <dmsantam> yeah, interest is growing :)

[13:01] <agentzh> nice!

[13:02] <agentzh> i wonder if the build errors are caused by my judy-on-win32 patch. but it worked for both Limbic_Region and me.

[13:02] <agentzh> sorry, bedtime already...

[13:02] <agentzh> my machine will be shut down with force within 30 sec...

[13:02] <agentzh> see you tomorrow &

[13:03] *** agentzh left
[13:03] *** kolibrie_ is now known as kolibrie

[13:03] <audreyt> oy :/

[13:03] <audreyt> and I thought I just fixed it

[13:04] <rindolf> audreyt: ping.

[13:04] <audreyt> pong

[13:04] <rindolf> audreyt: hi.

[13:04] <rindolf> audreyt: I've encountered a strange warning with Jifty and Jifty-DBI from trunk.

[13:04] <rindolf> audreyt: also the tutorial used to be out-of-date. Maybe still is.

[13:05] <rindolf> I'm in #jifty.

[13:05] <svnbot6> r12251 | audreyt++ | * another try...

[13:07] <audreyt> rindolf: answered in #jifty

[13:07] *** Qiang joined
[13:08] <gaal> yay! SPJ writes that he fixed HEAD "so that both class and instance declarations are allowed in hs-boot files. But not 'deriving'!

[13:09] <pasteling> "cmarcelo" at 200.245.119.10 pasted "strange error parsing Prelude with pugs and GHC 6.5 -- compilation is fine, pugs is generated." (12 lines, 1.4K) at http://sial.org/pbot/19013

[13:09] <audreyt> gaal: cool!

[13:10] <audreyt> cmarcelo: fixed

[13:10] *** fglock joined
[13:11] <svnbot6> r12252 | audreyt++ | * remove bogus use of runtime "is" in Prelude.

[13:11] <svnbot6> r12252 | audreyt++ |   Reported by: cmarcelo++

[13:12] *** vel joined
[13:12] <cmarcelo> checking

[13:26] *** Bit-Man joined
[13:26] <cmarcelo> audreyt++

[13:26] <cmarcelo> ghc 6.5 compiled pugs here..

[13:27] <cmarcelo> audreyt: JudyHS was segfaulting prelude generation on you? or was another test?

[13:30] <audreyt> prelud e gen

[13:30] *** lichtkind joined
[13:30] <audreyt> for gaal and me and luqui and on feather too

[13:33] <cmarcelo> ok

[13:34] <svnbot6> r12253 | fglock++ | Pugs-Compiler-Rule - fixed some tests for 'return object handles stringification'

[13:36] *** theorbtwo joined
[13:40] <svnbot6> r12254 | fglock++ | Pugs-Compiler-Rule - fixed a 'bool' test in Match.pm

[13:44] <svnbot6> r12255 | fglock++ | Pugs-Compiler-Rule - ChangeLog update

[13:47] <svnbot6> r12256 | polettix++ | [src/Pugs/Prim.hs]

[13:47] <svnbot6> r12256 | polettix++ |    Made quotemeta work like Perl 5: escape only happens for Unicode

[13:47] <svnbot6> r12256 | polettix++ |    characters up to 256.

[13:47] <svnbot6> r12256 | polettix++ | [t/builtins/strings/quotemeta.t]

[13:47] <svnbot6> r12256 | polettix++ |    Extended test-suite to cover all 256 Unicode characters (but only

[13:47] <svnbot6> r12256 | polettix++ |    in the ASCII part, the test for EBCDIC is still the old one in

[13:47] <svnbot6> r12256 | polettix++ |    Perl 5.9.3 quotemeta.t).

[13:47] <froh-doh> .oO( my logs are possibly too verbose? )

[13:48] <wolverian> you're polettix? not at all.

[13:49] <froh-doh> wolverian: yep, I am :)

[13:49] <wolverian> descriptive commit messages are _good_

[13:50] <froh-doh> ok then, I hope svnbot6 won't be kicked off for flooding :)

[13:54] <audreyt> iblech has implemented throttling :)

[13:58] <fglock> mm - is '{}' a sub or a hash?

[13:59] <audreyt> hash

[13:59] <fglock> thanks

[13:59] <audreyt> np :)

[14:02] *** xdg joined
[14:07] <rgs> perl 5.9.4 is on its way to CPAN

[14:07] <svnbot6> r12257 | fglock++ | v6 - '{}' is a hash again

[14:08] <audreyt> !

[14:08] <audreyt> rgs++ rgs++ rgs++

[14:13] <fglock> how is '$?SELF' different from 'self' ?

[14:15] <audreyt> $?SELF is gone

[14:15] <audreyt> :)

[14:16] <fglock> ok!

[14:18] <gaal> 1

[14:26] <rindolf> Hi rgs

[14:27] <rgs> hi rindolf

[14:27] <fglock> markstos: re CGI-Application, a few problems were fixed; it currently fails in line 174 '\$body' is not implemented yet in v6.pm

[14:27] <rindolf> rgs++ # perl 5.9.4

[14:29] *** justatheory joined
[14:30] *** cjeris joined
[14:33] *** Daveman joined
[14:37] *** mdiep_ joined
[14:37] *** Limbic_Region joined
[14:40] <svnbot6> r12258 | fglock++ | v6 - ChangeLog update

[14:41] <clkao> fglock: is it passing tests?

[14:42] <rindolf> Hi clkao

[14:47] <fglock> clkao: it seems to run the same tests - I didn't run the whole suite

[14:47] <clkao> mmm, it fails quite a bit for me

[14:58] <svnbot6> r12259 | fglock++ | v6 - t/00-grammar/01-pcr.t - as(Str) changed; removed a test

[15:00] *** larsen joined
[15:17] <TimToady> audreyt: you said repeat {...} doesn't work yet, but I believe it does.

[15:18] <TimToady> and I think \123 should be illegal now rather than 123.

[15:30] *** kanru joined
[15:31] <[particle]> \1 is already illegal as per S05

[15:46] <ingy> hola

[15:47] <cmarcelo> audreyt gaal : I changed src/Pugs/AST/Internals.hs to use Judy.Hash instead of StrMap and can't find the segfault in prelude nor the t/builtins/bool/defined.t (which was segfaulting here before). tested 6.5 and 6.4.2 here and in feather too. am I missing something?

[16:01] *** fglock joined
[16:03] *** Kattana joined
[16:04] *** jferrero joined
[16:05] <audreyt> [particle]: that's inside patterns

[16:05] <audreyt> not qq

[16:05] <audreyt> TimToady: oh right, you made it work :)

[16:05] <audreyt> TimToady: 0123 is warning but \123" is error?

[16:05] <audreyt> cmarcelo: src/Pugs/Internals.hs surely?

[16:05] <audreyt> (it's the interning that fails not hashes)

[16:07] <cmarcelo> well, i was getting segfaults with hashes too.. for IHash changing Pugs/AST/Internals.hs is enough..

[16:07] <[particle]> audreyt: true. but currently pge interprets \1 in a pattern as 1. so that'll have to be changed, too.

[16:07] <cmarcelo> where's interning stuff?

[16:07] <audreyt> [particle]: indeed

[16:07] <audreyt> cmarcelo: src/Pugs/Internals.hs grep for "table"

[16:07] <[particle]> anyway, it's been cleared up in the spec, so i'll change pge/perl6

[16:08] <audreyt> particle++

[16:08] <audreyt> cmarcelo: or rather, grep for NOINLINE

[16:09] <cmarcelo> ok

[16:20] <svnbot6> r12260 | fglock++ | v6 - fixed ' @array.exists(20) '

[16:25] *** prefiks joined
[16:28] *** larsen joined
[16:33] *** pdcawley joined
[16:35] <svnbot6> r12261 | audreyt++ | * Pugs.Lexer: "\123" is now a warning.

[16:35] *** Psyche^ joined
[16:38] <[particle]> audrey: warning, not error?

[16:38] <svnbot6> r12262 | fglock++ | v6 - fixed autoquoting in '=>'

[16:42] <audreyt> [particle]: yeah.

[16:42] *** xdg joined
[16:43] <audreyt> $ perl -we '"\9"'

[16:43] <audreyt> Unrecognized escape \9 passed through at -e line 1.

[16:43] <audreyt> $ perl -we '"\19"'

[16:43] <audreyt> Illegal octal digit '9' ignored at -e line 1.

[16:44] <audreyt> in perl5 these are warnings; not sure about making them parsefails

[16:44] <svnbot6> r12263 | fglock++ | v6 - fixed hash emitter

[16:44] <[particle]> i see, thx

[16:47] *** Psyche^ is now known as Patterner

[16:48] <lichtkind> [particle] are you in any way related to the ParTiCLe TCL interpreter?

[16:48] <TimToady> I think the \digits syntax has to be reserved for future metacharacter use, and not be treated as non-meta, or quotemeta breaks.

[16:49] <TimToady> 0123 is an exception because we're hoping to make that mean decimal someday 20 years from now or so.

[16:49] <[particle]> lichtkind: i am distantly related. i've committed a few patches there :)

[16:49] <TimToady> but generally if you write something that can't mean anything meaningful it should fail.

[16:50] <audreyt> mmm.

[16:50] <audreyt> I was rather hoping that "\123" can mean "\d123" in some distant future too...

[16:51] <TimToady> decimal characters are rather useless under Unicode

[16:51] <svnbot6> r12264 | audreyt++ | * Pugs.Lexer: improve the \123 warning a bit by mentioning

[16:51] <svnbot6> r12264 | audreyt++ |   \d123 and \o123 as disambiguators

[16:52] <audreyt> you mean people usually use hex notation for unicode?

[16:52] <audreyt> &#xABCD instead of &#12790

[16:53] <TimToady> all the docs use U+ABCD rather consistently.

[16:53] <TimToady> there are also cultures (seen it at work) where \12 is equivalent to \x12.

[16:53] <audreyt> oy.

[16:54] <TimToady> hardware people, mostly

[16:54] *** trym joined
[16:54] <TimToady> so I think we really have to suppress \123 for now completely.

[16:54] <[particle]> what about \\0\d+ ?

[16:55] <TimToady> dead by the same criterion.

[16:55] <[particle]> great. consistency++

[16:55] <[particle]> however, i'll miss \015

[16:55] <TimToady> \o15

[16:55] <[particle]> yep, it'll work. i'll just have to adjust my fingertips

[16:56] <audreyt> it's in.

[16:56] <svnbot6> r12265 | audreyt++ | * Pugs.Lexer: "\0123" is now as dead as "\123" -- both fatal parsefails.

[16:56] <[particle]> train the left ring finger to do the right's work

[16:56] <TimToady> audreyt++

[16:56] <audreyt> :)

[16:56] <TimToady> audreyt.sleep--

[16:57] <TimToady> make sure \0 still works though...

[16:57] <[particle]> wonder what the lines of code to hours of missed sleep ratio is...

[16:58] <[particle]> eeh? why not \d0 or \o0 ?

[16:58] <TimToady> those work too.

[16:58] <[particle]> why not *force ...

[16:58] <TimToady> why?

[16:58] <TimToady> 0 is the same in any radix.

[16:58] <audreyt> so "\015" does but "\0fff" works?

[16:58] <audreyt> s/does/dies/

[16:58] <TimToady> yes

[17:01] <[particle]> \0123 is octal in perl5 so how would \0fff "work"? <null> followed by 'fff'?

[17:01] <TimToady> ohh, looks like latest smokes are 10% faster.

[17:01] <audreyt> [particle]: exactly

[17:01] <[particle]> ok

[17:01] <audreyt> what about "\000" ?

[17:01] <TimToady> illegal

[17:01] <[particle]> why, it's the same in any radix?

[17:02] <TimToady> \0 is just too ubiquitous to kill

[17:02] <[particle]> my fingers need adjustment

[17:02] <TimToady> and is very important in C culture.

[17:02] <[particle]> DEATH TO C!

[17:03] <TimToady> sure, but by subverting, not by brute force.

[17:03] <[particle]> subversion++ ;)

[17:03] <audreyt> *** Exception: Error: \00 is ambiguous: write as decimal \d00 or octal \o00 instead

[17:03] <ingy> svn rm C

[17:03] <audreyt> that error message itself is kinda bogus

[17:03] <[particle]> ingy++

[17:04] <[particle]> audreyt: agreed

[17:04] <ingy> are there any good midi modules for Perl 6?

[17:04] <TimToady> what if they meant \d[0]0 ?

[17:04] * ingy is in a band now

[17:05] <TimToady> citizen's?  rubber?

[17:05] <ingy> The Strange Attractors

[17:06] <TimToady> Band in Boston?

[17:06] * [particle] whirs chaoticly

[17:07] *** SageLT joined
[17:07] <svnbot6> r12266 | audreyt++ | * "\0" is made legal again, though "\00" "\01" etc are all still failures.

[17:08] <[particle]> looks (from S02) that \08 is legal

[17:08] <TimToady> that one's a close call

[17:08] <[particle]> it's clear to me in the spec

[17:09] <[particle]> Only C<\0> remains, and then only if the next character is not in the range C<'0'..'7'>.

[17:09] <TimToady> that's because that's how I called the close call

[17:09] <TimToady> yes, I wrote that this morning.

[17:09] <[particle]> right, just making sure you mean what you wrote

[17:09] <TimToady> I always mean what I right.  :)

[17:09] <[particle]> and making sure audrey's implementing the right thing

[17:09] <[particle]> write on!

[17:10] <TimToady> she needs to be whacked upside the head occasionally, but she's a good kid.

[17:10] <audreyt> \08 very seldomly means \d[0]8 though...

[17:10] <audreyt>  perl -we '"\08"'

[17:10] <audreyt> Illegal octal digit '8' ignored at -e line 1.

[17:10] <TimToady> \0 seldomly occurs in a string at all except at the end.

[17:10] <TimToady> unless it's binary data

[17:11] <TimToady> well, \0 doesn't introduce octal anymore, so that wouldn't work

[17:11] <audreyt> having "\08" and "\09 be treated specially whilst 08 and 09 are not, sounds strange

[17:12] <TimToady> sure, but the usual error will be with a normal octal number, not a "transcendental"

[17:12] *** hexmode joined
[17:12] <audreyt> k. so you think "\08" is just fine?

[17:13] <TimToady> I think in the future it's likeliest to mean \0 + 8

[17:13] <audreyt> and in that future, why wouldn't "\01" means \0 + 1?

[17:13] <TimToady> only if we make it illegal for 20 years or so

[17:14] <TimToady> a generation of C programmers has to die off first

[17:14] *** Corion joined
[17:14] <TimToady> and maybe several other languages

[17:14] <audreyt> so for now "\08" is a warning, but "\07" is a error?

[17:14] <audreyt> and "\0f" is silent passthru?

[17:14] <[particle]> we can help with that. perl6, the one true language :)

[17:15] <TimToady> I'd just treat \08 like \0f

[17:15] <audreyt> 'k.

[17:15] <[particle]> \0 followed by oct => error, hex => passthrough

[17:16] <TimToady> s/hex/other/

[17:16] <[particle]> roger.

[17:16] <svnbot6> r12267 | fglock++ | v6 - fixed some hash slice cases; t/data_types/hash.t passes 5 tests more

[17:16] <TimToady> well, passthrough means you send the backslash through too to me

[17:17] <TimToady> so it's more like terminate-sequence-after-9

[17:17] <TimToady> *0

[17:18] <audreyt> k, all done. I'll go sleep :)

[17:19] <obra>   night

[17:19] <TimToady> nite, thanks!

[17:19] <audreyt> thanks too :)

[17:19] <[particle]> sure, just like \n

[17:19] <svnbot6> r12268 | audreyt++ | * Pugs.Lexer: "\08..." and "\09..." are treated as "\0" and then "8..." or "9...".

[17:26] <nothingmuch> audreyt: when using PAR Weak references are not implemented in the version of perl starts happenning... is -B the wrong option or just not working?

[17:30] *** kanru2 joined
[17:31] *** kanru2 is now known as kanru

[17:32] <audreyt> nothingmuch: it worksforme. does the resulting .par or .exe file have lib/auto/List/Util/Util.so ?

[17:32] <audreyt> (or .bundle on darwin;) you can use unzip-l to check

[17:33] <audreyt> nothingmuch: also, you want tsee on irc.perl.org for PAR questions, or [email@hidden.address] :)

[17:33] <nothingmuch> yep, it does

[17:33] <nothingmuch> i googled first

[17:33] <nothingmuch> no go

[17:33] <audreyt> try PAR trunk?

[17:33] <audreyt> which platform?

[17:33] <nothingmuch> osx

[17:33] <audreyt> are you using .exe mode or .par mode?

[17:33] <nothingmuch> i'll try it later, methinks

[17:33] <nothingmuch> exe i think

[17:34] <audreyt> -B is noop on .exe

[17:34] <nothingmuch> ah

[17:34] <nothingmuch> well, it's not urgent, i'll punt for now

[17:34] <audreyt> PAR trunk implements .bundle pre-extraction

[17:34] <audreyt> which may help. but I can't duplicate this error

[17:34] <nothingmuch> i'll give it a whirl

[17:34] <audreyt> 'k. good night :)

[17:34] *** plisk joined
[17:38] *** mdiep joined
[17:41] *** hcarty joined
[17:46] *** hcarty left
[17:56] <svnbot6> r12269 | fglock++ | v6 - fixed '$hash.isa' - t/data_types/hash.t passes 30/55

[17:56] *** justatheory joined
[18:16] *** buetow joined
[18:20] <svnbot6> r12270 | fglock++ | perl5/ - 'cp Perl6-Value Pugs-Runtime-Value' to be Moosified for v6.pm

[18:26] <svnbot6> r12271 | fglock++ | Pugs-Runtime-Value - renaming files

[18:29] <svnbot6> r12272 | fglock++ | Pugs-Runtime-Value - renaming files

[18:34] *** shachaf joined
[18:41] <svnbot6> r12273 | fglock++ | Pugs-Runtime-Value - renaming classes

[18:43] *** justatheory joined
[18:46] *** bernhard joined
[18:49] *** cjeris joined
[18:49] *** silug joined
[18:54] <svnbot6> r12274 | fglock++ | Pugs-Runtime-Value - start merging with Perl6-Container

[18:57] <svnbot6> r12275 | fglock++ | Pugs-Runtime-Value - merged Container modules, MANIFEST

[18:57] <svnbot6> r12274 | fglock++ | Pugs-Runtime-Value - start merging with Perl6-Container

[18:57] *** shachaf_ joined
[18:58] *** wazzuteke left
[19:04] *** justatheory joined
[19:06] <svnbot6> r12276 | fglock++ | Pugs-Runtime-Value - some container moosification

[19:08] <svnbot6> r12277 | fglock++ | Pugs-Runtime-Value - fixed Makefile.PL

[19:21] *** luqui joined
[19:32] <svnbot6> r12278 | fglock++ | perl5/ set svn properties

[19:50] *** zgh joined
[19:51] *** SageLT joined
[19:55] *** frederico joined
[20:13] *** fglock left
[20:19] *** [particle] joined
[20:22] *** bpphillips left
[20:31] *** fglock joined
[20:38] *** autark joined
[20:50] *** crem joined
[20:50] <svnbot6> r12279 | fglock++ | Pugs-Runtime-Value - started s/use Moose/use v6-alpha/

[21:01] *** shachaf_ joined
[21:05] <TreyHarris> ?eval for (a => 1, b => 2, c => 3) -> $x,$y { say "$x: $y" }

[21:05] *** evalbot_23396 is now known as evalbot_23466

[21:05] <evalbot_23466> OUTPUT[a 1: b 2 ] Error: Undeclared variable: "$y"

[21:05] <TreyHarris> ?eval for (a => 1, b => 2, c => 3) -> $x;$y { say "$x: $y" }

[21:05] <evalbot_23466> OUTPUT[a 1: b 2 ] Error: Undeclared variable: "$y"

[21:10] <TreyHarris> ?eval for (a => 1, b => 2, c => 3) -> $x { say "$x.key: $x.value" }

[21:10] <evalbot_23466> OUTPUT[a 1.key: a 1.value b 2.key: b 2.value c 3.key: c 3.value ] undef

[21:10] <TreyHarris> ?eval for (a => 1, b => 2, c => 3) -> $x { say "$($x.key): $($x.value)" }

[21:10] <evalbot_23466> OUTPUT[$(a 1.key): $(a 1.value) $(b 2.key): $(b 2.value) $(c 3.key): $(c 3.value) ] undef

[21:12] <TreyHarris> ?eval for (a => 1, b => 2, c => 3) -> $x { say "$x.key(): $x.value()" }

[21:12] <evalbot_23466> OUTPUT[a: 1 b: 2 c: 3 ] undef

[21:13] *** [particle] joined
[21:23] <svnbot6> r12280 | fglock++ | Pugs-Runtime-Value - new module Pugs::Runtime::Unboxed - defines semantics for unboxed values

[21:24] *** weinig_ joined
[21:25] *** justatheory joined
[21:27] *** weinig joined
[21:41] *** frederico joined
[21:41] <svnbot6> r12281 | fglock++ | Pugs-Runtime-Value - Pugs::Runtime::Value is pure-p6; TODO: Capture, List

[21:42] *** SageLT joined
[21:45] *** Bit-Man joined
[21:45] *** bcorn joined
[21:46] *** saorge_ joined
[21:54] *** weinig is now known as weinig_

[21:55] *** weinig_ is now known as weinig

[21:59] *** lisppaste3 joined
[22:05] *** evalbot_23466 is now known as evalbot_23471

[22:07] <fglock> Pugs::Runtime::Value is under way - http://use.perl.org/~fglock/journal/30643

[22:07] <lambdabot> Title: Journal of fglock (5723)

[22:07] *** fglock left
[22:43] *** justatheory joined
[22:44] <broquaint> Anyone know if there's any been any effort to get perl5 implemented for parrot yet?

[22:49] <leo> broquaint: Wow.  I had no idea.  I'm glad I've read that.  What kind of audience were

[22:49] <leo> oops sorry again: http://www.poniecode.org/

[22:49] <lambdabot> Title: Project Ponie -

[22:50] <leo> but that's pretty dead, as the interest seems to have declined

[22:51] <broquaint> Dang.

[22:51] <broquaint> Thanks anyhow.

[22:51] <broquaint> I'm looking to write some code to convert PPI -> PIR.

[22:52] <leo> there are a lot more ways to get perl5 running with P6 than just the one specced with the ponie plan

[22:52] <leo> PPI would be one of that :)

[22:52] <broquaint> But I vaguely recalled that there was a beginning of a perl5 implementation with the types and what not.

[22:53] <broquaint> If there's nothing knocking about I guess I'll just have too bootstrap myself :)

[22:53] <leo> yes, there's even a repo of P5 PMCs somewhere

[22:53] <broquaint> Intriguing ...

[22:55] *** zgh joined
[22:55] <leo> please mailto nicholas clark for details

[22:57] <broquaint> Right oh, thanks again :)

[22:59] *** justatheory joined
[23:02] <lichtkind> hejho leo

[23:03] <leo> hi lichtkind

[23:04] <lichtkind> leo im the editor guy , its first time i see you there so i had to start some handwaves

[23:05] <leo> hi - nice to meet you here :)

[23:06] *** rashakil joined
[23:07] <lichtkind> yeah how does parrot evolves, i read the ml but thats not the same as listen from horses mouth :) maybe im part of the team i just began to write perl tutorial, now in english too

[23:07] <lichtkind> i mean perl6 tutorial

[23:08] <leo> parrot is evolving steadily

[23:10] *** rashakil joined
[23:12] <lichtkind> leo some catche phrases for my perl6 talk  in frankfurt in september ?

[23:12] <lichtkind> catchy

[23:14] <leo> lichtkind: I've no clue - you know what the talk will include

[23:15] <mugwump> hey leo any plans on adding hypervisor support to the parrot virtual machine?

[23:15] <mugwump> :->

[23:16] *** zgh left
[23:16] <leo> mugwump: after specs have settled, why not ;:-)

[23:17] <mugwump> it might make it easier implementing kernels etc with it that way

[23:17] <leo> but first is STM implementaion, which is more reasoable

[23:17] *** diakopter joined
[23:18] <mugwump> yes STM sounds very important

[23:18] <leo> it's on the way - stay tuned on #parrot

[23:18] *** zgh joined
[23:23] <TreyHarris> is there a doc on STM syntax as planned in perl 6?  all i've seen is audrey's ruminations on her blog

[23:25] <lichtkind> leo comon you know what i mean, i really read the announcements and some more stuff, and dont whant to bother you more than needed but tell me at least where can i read more about recent progress

[23:28] <leo> more is e.g. at http://www.parrotcode.org/misc/parrotsketch.html

[23:28] <lambdabot> Title: Parrot Sketch - parrotcode

[23:30] <svnbot6> r12282 | Sage++ | Adding some missed nodetypes (apparently I missed most of op_g* for some reason).

[23:30] <svnbot6> r12282 | Sage++ | Unknown nodes much less prevalent in tests now.

[23:30] <svnbot6> r12283 | Sage++ | Adding some missed nodetypes (apparently I missed most of op_g* for some reason).

[23:30] <svnbot6> r12283 | Sage++ | Unknown nodes much less prevalent in tests now.

[23:32] *** Revision17 joined
[23:39] *** lollan joined
[23:45] <svnbot6> r12284 | Sage++ | Documentation on the new -N option, which stops translation, just for testing. Makes it easier to find Unknown nodes from missing nodetyps as opposed to problems in the code.

[23:45] *** shachaf_ joined
[23:46] *** lollan joined
[23:53] <TreyHarris> STM from the language perspective is more than just C<let>, right?

[23:56] *** justatheory joined
[23:58] <pasteling> "TreyHarris" at 207.171.180.101 pasted "port install problems with ghc 6.5" (37 lines, 1.6K) at http://sial.org/pbot/19030

[23:58] <TreyHarris> if anyone can help me with my ghc problem i just pasted, i'd be grateful

