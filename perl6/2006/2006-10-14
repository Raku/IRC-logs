[00:00] <stevan> but like I said,.. I am not a Java programmer so I very well may have no idea what I am talking about ;)

[00:00] <stevan> but right now it's time to go play Lego StarWars with my daughter :)

[00:02] <Limbic_Region> stevan - I am optimizing for runtime speed and calling constructors/destructors fewer times is the win I am looking for

[00:02] <Limbic_Region> I had considered String btw

[00:10] *** mako132_ joined
[01:11] <TreyHarris> so someone enlighten me--what's "duck typing" if not dispatch purely by method name?

[01:12] * TreyHarris has returned from a couple days battling a nasty flu

[01:24] *** mako132_ joined
[01:27] *** buubot joined
[01:35] *** Limbic_Region joined
[01:35] *** pomi1 joined
[01:49] *** Aankh|Clone joined
[01:59] *** mako132_ joined
[02:08] *** nothingmuch joined
[02:13] *** pomi1 left
[02:57] *** [particle] joined
[03:24] *** SubStack joined
[03:41] *** root4o joined
[03:41] <root4o> hi

[03:41] <root4o> if I follow installation procedure

[03:41] <root4o> in Pugs::Doc::Hack

[03:42] <root4o> it will install pugs on its own dir... not in my distro dirs.. i.e. /usr...

[03:42] *** mdiep joined
[04:04] <root4o> what's the difference between  : use v6 AND use v6-alpha

[04:11] <root4o> anybody here?

[04:21] *** root4o left
[05:12] *** rick_ joined
[05:15] *** BooK_ joined
[05:23] *** rick_ joined
[05:32] *** penk joined
[05:34] *** Pomin8654 joined
[05:51] *** scsibug joined
[05:59] *** Pomin1929 joined
[06:02] *** Pomin1929 joined
[06:20] *** justatheory joined
[06:41] *** root4o joined
[06:41] <root4o> anyone here ?

[06:41] *** Pomin1929 joined
[06:43] *** Pomin1929 joined
[06:48] *** kcwu joined
[06:56] *** Pominx joined
[07:00] *** kcwu joined
[07:01] *** Psyche^ joined
[07:07] *** Pominx joined
[07:12] *** Psyche^ is now known as Patterner

[07:12] *** root4o left
[07:22] *** diotalevi_ joined
[08:15] *** Pominx joined
[08:17] *** iblechbot joined
[08:33] *** Pominx joined
[08:46] *** buetow joined
[09:05] *** buetow joined
[09:06] *** xinming joined
[09:50] *** buetow joined
[10:18] *** chris2 joined
[10:19] *** buetow joined
[10:49] *** explorer joined
[10:49] *** elmex joined
[11:01] *** pmurias joined
[11:01] <pmurias> hi root4o,

[11:01] <pmurias> use v6 requires perl 6.0.0, use v6-alpha is trickery to use the v6.pm module

[11:02] <pmurias> he left 7 hours before :(

[11:02] <pmurias> time--

[11:03] <pmurias> well maybe he backlogs

[11:06] <pmurias> :)

[11:27] *** foo\ joined
[11:51] *** stennie joined
[11:53] *** spoop joined
[12:25] *** shillo joined
[12:27] <shillo> Hullo all!

[12:29] <shillo> Just wanted to say (when anyone is awake) that I was testing lazy lists, and it seems that (1..Inf).map:{ $_/2 }[0] runs itself into infinite loop in the current SVN pugs.

[12:29] <shillo> (and I'd assume that the lazy list test times out or something)

[12:41] *** stennie joined
[12:56] *** Psyche^ joined
[13:00] *** weinig is now known as weinigbbl

[13:11] *** Psyche^ is now known as Patterner

[13:22] *** Limbic_Region joined
[13:32] *** swaroop joined
[13:34] *** snowstalker joined
[13:34] *** snowstalker left
[13:36] *** snowstalker joined
[13:40] <Limbic_Region> salutaitons all

[14:07] <pmurias> Limbic_Region: hi

[14:08] <pmurias> i looked at the perl5 script you were porting to java and it seems rather bloated

[14:10] <Limbic_Region> pmurias - the Perl or the java?

[14:10] <pmurias> the perl5 one

[14:10] <Limbic_Region> the perl was something I whipped up in a jiffy to explain the functional equivalence of what I was trying to accomplish

[14:11] <Limbic_Region> it was not optimized

[14:11] <Limbic_Region> but since I don't know what you mean by bloat, I will need more context to comment further

[14:12] <pmurias> i mean code size

[14:13] <Limbic_Region> *shrug* - enough to get the point across

[14:13] <Limbic_Region> in any case - my Java version works great except I run out of heap

[14:13] <Limbic_Region> so now I have to make the code even more complex to help manage that

[14:14] <pmurias> i didn't realise it was a java backport

[14:14] <pmurias> it was quite fun striping it down though

[14:16] <pmurias> i reduced it to 26,20,13 lines changeing the algorithm and removeing strictness in the latter case

[14:16] <pmurias> how do you like java?

[14:17] <pmurias> s/changeing/changing/

[14:21] <pmurias> the java version seems rather advanced, you must be a very fast lerner

[14:24] <svnbot6> r14335 | audreyt++ | * prior.t: unTODO.

[14:28] *** plural_ joined
[14:31] <Limbic_Region> pmurias - not really a fast learner

[14:31] <Limbic_Region> I took a 4 day professional course

[14:31] <Limbic_Region> I think Java isn't nearly as evil as some would have us believe

[14:32] <Limbic_Region> I think I found as many things to like about the language as I did to not like

[14:32] <Limbic_Region> so I came out really neutral

[14:36] *** foo\bar joined
[14:37] <pmurias> catching typos at compile time is propably the only thing i like about the language

[14:39] <pmurias> i would propably use Scala if i wanted to target the JVM

[14:42] <Limbic_Region> *shrug* - different strokes for different folks

[14:43] <Limbic_Region> in any case, it was a 3 language project that should have just been one - Perl 6

[14:43] * Limbic_Region can't wait for Xmas

[14:47] <pmurias> what where the two other languages?

[14:47] <Limbic_Region> Perl, C (via Inline::C) and Java

[14:48] <Limbic_Region> the bulk in Perl of course

[14:48] <pmurias> that's good :)

[14:48] <Limbic_Region> I was hoping to have a working online demo of my results by Monday but I forgot to bring home my data files

[14:49] <SamB> oops!

[14:49] <pmurias> are you using your power-set script at work?

[14:50] <Limbic_Region> no, I was playing at work

[14:50] * Limbic_Region is allowed to work on personal projects that expand his knowledge that is applicable for real work related tasks

[14:50] <SamB> cool

[14:51] <Limbic_Region> yep

[14:51] <Limbic_Region> and since I am an "Information Technology Specialist", just about anything falls into that category

[14:52] * Limbic_Region checked the IRC logs and is amazed how quiet it has been

[14:52] <Limbic_Region> is there a conference or something going on?

[14:52] <SamB> heh

[14:52] <pmurias> Limbic_Region: what is the upper string-size limit the java script can handle?

[14:54] <Limbic_Region> pmurias - don't know as my longest string is 26 chars long

[14:54] <Limbic_Region> the issue is that the hashset works across all strings

[14:55] <Limbic_Region> and there are millions of those

[14:55] <Limbic_Region> so I run out of heap

[14:55] * Limbic_Region knows how to get around this but has yet to make the necessary modifications

[14:55] <Limbic_Region> came to me as I woke up this morning

[14:56] *** norageek joined
[14:56] <Limbic_Region> basically I am going to make the hashset a HoH in Perl terms - where level 1 is the length of the string

[14:57] <Limbic_Region> once all possible strings for that level have been seen - gc it

[14:57] <Limbic_Region> I just then need to remember not to recurse below that depth

[14:57] <Limbic_Region> and provided I process my millions of strings based of increasing length I should be fine

[14:58] <pmurias> pmurias is planing a none recursing version

[14:59] <Limbic_Region> pmurias - good luck, I tried very unsuccessfully to make the optimizations with an iterative version

[14:59] <Limbic_Region> myself and many of the monks at the Monastery came to the conclusion it was impossible

[15:00] <Limbic_Region> pmurias - see http://perlmonks.org/?node_id=576101 for details

[15:00] <lambdabot> Title: Powerset short-circuit optimization

[15:01] <Limbic_Region> fwiw, I have written extremely fast and memory efficient powerset iterators in the past

[15:01] <Limbic_Region> I have even written such iterators that were possible to "skip" portions of the powerset in certain situations

[15:01] <Limbic_Region> I was unsuccessful in finding one here

[15:05] <pmurias> Limbic_Region: you were unable to make the hash garbage collection optimazation with the iterative version

[15:05] <pmurias> ?

[15:05] <Limbic_Region> oh, no that's not the problem

[15:06] <Limbic_Region> the problem with the iterative version is this

[15:06] <Limbic_Region> say string one was ABCD, string two is ABCE, and string three is ABCFG

[15:06] <Limbic_Region> they all share ABC, AB, AC, BC, A, B, C

[15:06] <Limbic_Region> so why generate them at all in strings 2 and 3

[15:07] <pmurias> in the recursive one you use a hash too

[15:07] <Limbic_Region> yes, but the hash prevents recursion all together

[15:07] <Limbic_Region> in an iterative version you would still touch every node and just not include it

[15:07] <Limbic_Region> IOW - ABC would be seen in strings 2 and 3 but not AB, AC, BC, A, B, C

[15:08] <Limbic_Region> once it sees it had seen this it would stop recursing

[15:08] <pmurias> i see

[15:08] <Limbic_Region> in fact, the recursive version is suboptimal for a single powerset

[15:08] <Limbic_Region> it only has its advantages over many strings that have subsets in common

[15:08] <Limbic_Region> which I designed specifically for my dataset

[15:09] <pmurias> (by the way i was planing to use,was already used by Data::PowerSet)

[15:09] <Limbic_Region> oh, well I have written things even better than the bitmap binary counting

[15:10] <Limbic_Region> not to take anything away from Data::PowerSet

[15:10] <Limbic_Region> but it does not know how to "skip" at all

[15:10] <Limbic_Region> I have written iterators that can skip - under the right circumstances

[15:11] <Limbic_Region> basically I had to generate the powerset in progressive order such that

[15:11] <Limbic_Region> if your first 3 items exceeded a certain amount

[15:11] <Limbic_Region> continuing to follow this powerset getting progressively larger was pointless

[15:11] <Limbic_Region> yadda yadda

[15:12] <Limbic_Region> so do you see how the gc optimization I am going to make is going to work now?

[15:13] <pmurias> yes

[15:14] <Limbic_Region> fwiw, the project is already finished - I am just trying to optimize the runtime a bit now

[16:04] *** foo\ joined
[16:04] *** weinigbbl is now known as weinig

[16:04] *** larsen joined
[16:07] <svnbot6> r14336 | audreyt++ | * util/yaml_harness.pl: Remove the smoke-concurrent

[16:07] <svnbot6> r14336 | audreyt++ |   reduce-number-of-first-process bias again as the recent re-enabling

[16:07] <svnbot6> r14336 | audreyt++ |   of t/regex/ made ext/ not as heavy by comparison.

[16:09] <svnbot6> r14337 | audreyt++ | * Remove Judy from the Pugs build process.

[16:09] <svnbot6> r14337 | audreyt++ |   This is a pervasive change to avoid GC issues completely

[16:09] <svnbot6> r14337 | audreyt++ |   before the release, as the nature of addForeignPtrFinalizer's

[16:09] <svnbot6> r14337 | audreyt++ |   weird interaction with GHC is not fully diagnosed.

[16:09] <svnbot6> r14337 | audreyt++ |   Also, TVar/IORef based storage, which was exceedingly slow

[16:09] <svnbot6> r14337 | audreyt++ |   in GHC 6.4, now actually compares competitively with Judy maps.

[16:09] <svnbot6> r14337 | audreyt++ |   Judy is still more memory efficient and may be faster on some

[16:09] <svnbot6> r14337 | audreyt++ |   architectures, but its re-incoporation will have to wait until

[16:09] <svnbot6> r14337 | audreyt++ |   after release and a fuller understanding of its use of FFI/GC.

[16:18] *** pmurias left
[16:18] <audreyt> hm, today was rather swamped with nonpugs tasks, mostly sleeping :/

[16:19] * audreyt goes to rest some more and hopefully tomorrow will be more productive...

[16:48] <svnbot6> r14338 | audreyt++ | * Set/t/overload.t: Mark as :todo<bug>, instead of showstopping.

[16:58] <masak> good night audrey

[17:05] *** mako132_ joined
[17:19] *** Aankhen`` joined
[17:25] *** penk joined
[17:25] *** frankg joined
[17:30] *** weinig joined
[17:40] *** Ikarus joined
[17:51] *** Southen joined
[18:16] <svnbot6> r14339 | fglock++ | v6/emitter(2) - passes isa.t, for.t

[18:44] *** lisppaste3 joined
[18:53] *** weinig is now known as AwayWeinig

[19:27] <TimToady> smoking r14339, after much hassle getting recompiled.

[19:28] <TimToady> there's something out there in some subdirectory that still wants HsJudy that isn't cleared out by realclean.

[19:28] <TimToady> don't know offhand which subdirectory, but src is a likely suspect.

[19:29] <TimToady> anyway, blowing it away and re svning up seems to have fixed it.

[19:30] <TimToady> also commented out some Judy stuff in Makefile.PL, not sure whether that was necessary or not.

[19:32] <TimToady> lunch &

[19:45] <avar> wrt the sub prototypes in p6, is there a mechanism for naming arguments in side lists in the argument list

[19:45] <avar> like def sub((a, b), c); and x = (1, 2); y = 3; sub(x, y)

[19:45] <avar> a = 1, b = 2, c = 3;

[19:45] <avar> (python example)

[20:07] <TimToady> avar: sure, see S06:1128 "Unpacking array parameters"

[20:08] <svnbot6> r14340 | lwall++ | Makefile.PL: more Judy commentage

[20:12] <TimToady> yay, my 1st 100%

[20:15] *** penk joined
[20:20] *** AwayWeinig is now known as weinig

[20:20] *** penk joined
[20:29] *** andara joined
[20:33] *** andara left
[21:00] <avar> TimToady: neato

[21:09] *** Sarta2 joined
[21:09] *** Sarta2 is now known as Eidolos

[21:15] *** nperez joined
[21:22] <masak> I get this when running make:

[21:22] <masak> ghc-6.4.1: ghc-6.4.1: panic! (the `impossible' happened, GHC version 6.4.1): unknown exception

[21:22] <masak> not too reassuring...

[21:22] *** avarab joined
[21:22] <masak> maybe it really is time to make that GHC upgrade

[21:23] *** Limbic_Region joined
[21:24] <SamB> now that 6.6 has been released, it might be easier

[21:28] <Limbic_Region> salutations all

[21:31] <avarab> eval: $^O

[21:32] <buubot> avarab:  OS/2 Warp

[21:32] *** avarab is now known as avar

[21:32] <Limbic_Region> ?eval $*OS

[21:32] *** evalbot_r14334 is now known as evalbot_r14340

[21:32] <evalbot_r14340> user error (Incompatible version number for compilation unit␤Consider removing blib6/lib/Prelude.pm.yml and make it again␤)␤pugs: user error (*** *** Can't modify constant item: VUndef␤        at <prelude> line 784, column 9-46␤           <prelude> line 784, column 9-46␤    at)␤

[21:33] <Limbic_Region> well, that doesn't look so good

[21:33] <Limbic_Region> anyone with sudo privs on feather about?

[21:34] *** weinig is now known as weinig|food

[21:56] <avar> !eval: sub foo (Int $x) { $x } foo(5);

[21:56] <avar> ?eval sub foo (Int $x) { $x } foo(5);

[21:56] <evalbot_r14340> user error (Incompatible version number for compilation unit␤Consider removing blib6/lib/Prelude.pm.yml and make it again␤)␤pugs: user error (*** *** Can't modify constant item: VUndef␤        at <prelude> line 784, column 9-46␤           <prelude> line 784, column 9-46␤    at)␤

[21:57] <SamB> eek

[21:57] <SamB> fake newlines

[21:59] *** ajs joined
[22:00] <avar> Anyway I was wondering about something, S06 shows: sub prefix:<moo> and sub prefix:{"moo"} as being equivalent and sub circumfix:<a b> equivalent to sub circumfix:{"a", "b"}

[22:00] <avar> then later macro circumfix:«<!-- -->» ($text) is parsed / .*? / { "" } is shown as an example

[22:00] <avar> "Whitespace may never be part of the name (except as separator within a <...> or «...» slice, as in the example above)."

[22:01] *** Southen_ joined
[22:01] <avar> Isn't the <> there just a quote operator, then saying that there is some whitespace excemption is a bit misleading since it would just be equivalent to macro circumfix:{"<!--", "-->"}

[22:02] <avar> Or am I completely wrong here?

[22:03] <avar> I.e. it's not at all part of the operator name any more than " " is part of one of the array items in @a if my @a = <a b c d>;

[22:29] *** mauke joined
[22:33] *** larsen joined
[22:55] *** ilogger2 joined
[23:00] <nothingmuch> @seen cmarcelo

[23:00] <lambdabot> Last time I saw cmarcelo was when I left #darcs, #gentoo-haskell, #ghc, #haskell, #haskell-blah, #haskell-overflow, #haskell.es, #haskell.it, #haskell.se, #haskell_ru, #oasis, #perl6 and #scannedinavi

[23:00] <lambdabot> an 4d 20h 37m 13s ago, and .

[23:00] <nothingmuch> very specific =)

[23:01] <Limbic_Region> yeah

[23:01] <Limbic_Region> so is anyone else unable to build pugs

[23:01] <Limbic_Region> or is it just once again Win32/MinGW?

[23:10] <jdv79> strawberry?

[23:14] <Limbic_Region> no, MinGW

[23:14] <TimToady> I had a lot of trouble rebuilding.

[23:14] <Limbic_Region> or rather

[23:14] <TimToady> on Linux

[23:14] <Limbic_Region> I have no idea why I said MinGW

[23:15] <Limbic_Region> that should have nothing to do with the Pugs build

[23:15] <TimToady> my error was that it was still trying to link in HsJudy

[23:15] * Limbic_Region tries again

[23:15] <TimToady> eventually I blew away src/ and several other subdirs and re svnup'd

[23:15] <Limbic_Region> ah

[23:16] <Limbic_Region> I was wondering about that

[23:16] <Limbic_Region> is there a way to tell svn update every file anyway

[23:16] <TimToady> something isn't getting realcleaned I think

[23:16] <TimToady> but I didn't have the patience to chase it down.

[23:17] <Limbic_Region> ok, will just get liberal with rmdir /s

[23:17] <TimToady> well, I don't keep anything of my own in the subdirectories as a matter of policy so that I can do that.

[23:17] <TimToady> it was *probabl& src

[23:17] <TimToady> *probably* even

[23:18] <Limbic_Region> neither do I

[23:18] <TimToady> but I also blew away several other dirs so I can't say for sure, and it kinda sucks to get all the way through and have it fail again

[23:19] <TimToady> I think "realclean" fails the DRY principle.

[23:19] <TimToady> just as I think keeping a list of force_todos in a separate file is a recipe for disaster.

[23:21] <TimToady> I know there have been systems that actually tracked what files were produced by the various subprocesses in a build so they automatically know what to clean up.  Unfortunately make has always been a bit too simpleminded that way.

[23:22] <Limbic_Region> well, I got really liberal with what got removed

[23:22] <TimToady> we'll I've done that, and regretted it.  :)

[23:22] <TimToady> *well

[23:23] <Limbic_Region> I left t examples and a few others I didn't think could possibly have anything to do with building alone

[23:24] <TimToady> I did discover that if you blow away blib6 but not ext, you end up having to go through and remove all the pm_to_blib "touch" files.  :/

[23:24] <TimToady> another example of braindead makery...

[23:28] <Limbic_Region> heh, it thinks I don't have ghc 6.6

[23:30] <TimToady> did you install ghc 6.6 in one of your subdirectories?  :)

[23:30] <Limbic_Region> no, I have been building ghc 6.6 from source prior to it being released as 6.6

[23:31] <Limbic_Region> so it reports 6.5

[23:31] <TimToady> I see.

[23:31] <Limbic_Region> building from source (not bootstrapping) isn't as painful as some might lead you to believe

[23:32] *** gnuvince joined
[23:35] <Limbic_Region> will your work project (or parts thereof) ever see the light of day?

[23:36] <TimToady> not likely--it's in support of some proprietary hardware.

[23:36] <Limbic_Region> oh

[23:37] <Limbic_Region> was hoping to see a sample representation of your code applied to a real problem

[23:38] <TimToady> unfortunately the people paying me to work on a real problem would have a real problem with that...

[23:38] <Limbic_Region> right

[23:39] <gnuvince> TimToady: where do you work?

[23:39] <Limbic_Region> 92 of 92 compiled....

[23:39] <TimToady> across the street from Google.

[23:39] <TimToady> links okay?

[23:39] * Limbic_Region hugs TimToady

[23:40] <TimToady> ...cant...breathe...

[23:40] * Limbic_Region releases the bear hug

[23:40] <Limbic_Region> how well does it smoke?

[23:40] <TimToady> huh huh huh huh

[23:40] <TimToady> well, mine went 100%

[23:40] <Limbic_Region> nice - speed?

[23:41] <TimToady> couple minutes slower than my previous run, prolly statistically insignif

[23:41] <TimToady> given there were other things running on my computer

[23:42] <Limbic_Region> audreyt still hoping to release before Monday her time?

[23:43] <TimToady> well, she's got one day if so.

[23:43] <TimToady> it seems pretty solid from the Linux perspective at least.

[23:44] <Limbic_Region> I didn't think there was a lot left on her list

[23:44] <TimToady> probably most of the remaining work is changelogging...

[23:44] <Limbic_Region> well most of the Win32 issues aren't real issues

[23:44] <Limbic_Region> yeah, she always asks for help on that and I always feel bad for not helping more

[23:44] <TimToady> the eqv thing

[23:46] <TimToady> or maybe it's just not reading the Perl 6 code in text mode...

[23:46] <Limbic_Region> hard to say how many are due to the eqv thing but more than 1

[23:46] <TimToady> isn't Windows supposed to translate crlf to \n for you?

[23:46] <buubot> correct syntax is: translate to/from language string

[23:47] <Limbic_Region> running smoke now

[23:47] <Limbic_Region> TimToady - I don't think so

[23:47] *** Southen joined
[23:48] <Limbic_Region> certain files opened up in notepad look like everything is jammed on one line

[23:48] <Limbic_Region> opened in wordpad look normal

[23:48] <TimToady> then why did we add binmode to Perl?

[23:48] <TimToady> well, but that's the opposite problem.

[23:49] <Limbic_Region> well, perl does the right thing

[23:49] <Limbic_Region> meaning a file with \r\n or \n both work as expected with <$fh>

[23:50] <Limbic_Region> I don't try and understand windows - I just try and make it get out of my way and stay there

[23:50] <TimToady> but if you look at the string in Perl 5, it just as a newline.

[23:50] <TimToady> s/as/has/

[23:51] <Limbic_Region> well, I know $/ is "\n" by default and "\n" takes on the meaning of the platform

[23:51] <Limbic_Region> but

[23:51] <TimToady> but it seems like Haskell isn't maintaining a \r free zone.

[23:51] <Limbic_Region> perlbot nopaste

[23:51] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[23:52] <pasteling> "Limbic_Region" at 24.35.57.240 pasted "example of the eqv problem" (21 lines, 448B) at http://sial.org/pbot/20438

[23:55] <TimToady> looks like slurp is defaulting to binary rather than text.

[23:56] <TimToady> whatever it's defaulting to, it's not the same as the parser...

[23:57] <Limbic_Region> right

[23:57] <TimToady> is the \r on the expected or on the actual?

[23:58] <Limbic_Region> let me think about this

[23:58] <Limbic_Region> the \r is in the .t file

[23:58] <Limbic_Region> so expected

[23:58] <TimToady> you can't deduce this from whether it's in the .t file

[23:58] <Limbic_Region> I mean if I open the .t file in notepad it is fubar

[23:59] <TimToady> oh, so the newline policy is wrong on the file maybe?

[23:59] <Limbic_Region> that's a possibility

[23:59] <TimToady> hmm.

