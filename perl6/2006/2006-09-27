[00:00] *** markstos_ joined
[00:09] *** frederico joined
[00:20] *** beppu_ joined
[00:25] *** Aankh|Clone joined
[00:30] *** nekokak joined
[00:43] *** justatheory joined
[00:45] <mugwump> ajs_work: yeah, that article needs a little work.

[00:45] <mugwump> PGE doesn't make bytecode

[00:46] *** dduncan joined
[00:46] <mugwump> it makes a parse tree.  TGE converts that into an expression tree, then another round to a opcode tree, then it can become bytecode

[00:46] <mugwump> (actually it makes PIR, which is converted by imcc to bytecode, but that's another thing)

[01:05] *** dduncan left
[01:05] <TreyHarris> svn log -v -rBASE:HEAD

[01:05] <TreyHarris> oops

[01:17] *** mako132_ joined
[01:29] *** kanru joined
[01:53] <mugwump> ?eval "foo bar".split(/<ws>/)

[01:53] *** evalbot_r13688 is now known as evalbot_r13694

[01:53] <evalbot_r13694> ("f", "o", "o", "", "b", "a", "r")

[01:53] * mugwump slaps evalbot_r13694 

[01:53] <mugwump> ?eval "foo bar".split(/<ws>+/)

[01:54] <evalbot_r13694> ("f", "o", "o", "", "b", "a", "r")

[01:54] <mugwump> ?eval "foo bar".split(/<[ ]>/)

[01:54] <evalbot_r13694> ("foo", "bar")

[01:56] <obra> seen audreyt

[01:56] <jabbot> obra: audreyt was seen 7 hours 19 minutes 43 seconds ago

[01:58] <TreyHarris> uh-oh.  I get: *** Cannot parse regex: <ws> *** Error: Error: Can't locate object method "__RUN__" via package "Pugs::Runtime::Match::HsBridge".

[01:59] <TreyHarris> that's when typing that into "./pugs", with my PERL6LIB set to ./blib6/lib

[01:59] <TreyHarris> am I missing something?

[02:02] <TreyHarris> my PUGS_EMBED wasn't set... but I thought pugs embedded perl 5 by default now

[02:02] <TreyHarris> ah, well, i'll rectify that, clean and make...

[02:03] *** Aankhen`` joined
[02:11] *** kyrbe joined
[02:27] *** vel joined
[02:34] <svnbot6> r13695 | markstos++ | [t/perl5]

[02:34] <svnbot6> r13695 | markstos++ | Add simple README.

[02:37] *** Qiang joined
[02:41] *** mauke joined
[03:05] *** spoop joined
[03:11] <mugwump> ajs_work: I updated http://en.wikipedia.org/wiki/Parrot_Grammar_Engine

[03:11] <lambdabot> http://tinyurl.com/zvuxw

[03:12] <TreyHarris> nothingmuch: ping?

[03:13] <TreyHarris> oh, i guess it's still 6am there

[03:23] *** kanru joined
[03:43] <rindolf> ingy: here?

[03:45] *** Aankhen`` joined
[04:03] *** Eidolos joined
[04:08] *** Aankh|Clone joined
[04:13] <TreyHarris> anyone on now with Module::Signature clue?

[04:18] <audreyt> I've heard of it...

[04:19] <TreyHarris> lol :)

[04:19] <TreyHarris> i don't know how to fix this.  when i use sudo to install CPAN modules, it always fails.  i just discovered the reason is that when it tries to check the module signature, it runs gnupg, which erroneously says that the module's signature is invalid because my ~/.gnupg belongs to me and not root.  if i chown my .gnupg to root, i can install modules, but then i can't use gnupg as myself...

[04:20] <audreyt> a recent version of CPAN.pm supports sudo only on install

[04:20] <audreyt> so you can invoke cpan as yourself

[04:20] <audreyt> and have it run sudo on your behalf

[04:20] <audreyt> iirc. CPANPLUS also supports that

[04:21] <audreyt> you can also set make_install_make_command to "sudo make install"

[04:21] <audreyt> as well as

[04:21] <audreyt> mbuild_install_build_command

[04:21] <TreyHarris> hmm. i have root's cpan configs set to install into the system, and my person cpan config set to install into my home directory.  so if I do that, Makefile.PL will install into my home directory, but as root, which is the wrong thing in two ways :)

[04:22] <TreyHarris> i guess just "not a supported configuration for Module::Signature" :-)

[04:22] <audreyt> in that case set $GNUPGHOME

[04:22] <audreyt> when invoking cpan as root

[04:22] <audreyt> to point to another set of ~/.gnupg

[04:22] <audreyt> will fix it.

[04:22] <TreyHarris> ahh, that's a good idea.  thanks!

[04:22] <audreyt> np :)

[04:29] *** kyrbe left
[04:43] *** penk joined
[05:02] *** ofer0 joined
[05:14] *** weinig joined
[05:29] <mjk> audreyt: i intend to call "expo" function in power.pl from visual c++,is ok,

[05:29] *** mdiep joined
[05:30] <mjk> but when use "perl -MO=Bytecode,-H,-opower.plc power.pl" compile power.pl to power.plc , vc call "expo" is failed, why?

[05:30] <mjk> can you help me

[05:36] *** ofer0 joined
[05:44] <svnbot6> r13696 | mugwump++ | Hobble Pugs-Compiler-Perl6 t/regex.t into at least running

[06:09] *** marmic joined
[06:21] *** agentzh joined
[06:21] <agentzh> TimToady: thanks!

[06:21] <lambdabot> agentzh: You have 1 new message. '/msg lambdabot @messages' to read it.

[06:23] *** traecer joined
[06:31] *** iblechbot joined
[06:41] *** frankg joined
[06:50] <svnbot6> r13697 | audreyt++ | * Fix some incorrect plan lines.

[06:50] <svnbot6> r13698 | audreyt++ | * "1.5 ~~ 1^..^2" is not for this release; TODO it.

[06:59] *** Southen_ joined
[07:02] *** kastol joined
[07:07] *** rgs joined
[07:10] <agentzh> ?eval say "Hi" when 1;

[07:10] *** evalbot_r13694 is now known as evalbot_r13698

[07:10] <evalbot_r13698> Error:  Unexpected "when" expecting comment, operator, ":", ",", statement modifier, ";" or end of input

[07:11] *** rgs joined
[07:13] *** kane-xs joined
[07:17] *** zakharyas joined
[07:23] *** xinming joined
[07:23] *** traecer joined
[07:28] *** b00t joined
[07:31] *** drrho joined
[07:43] *** ludan joined
[07:45] <TreyHarris> audreyt: should the prereqs for Pugs::Compiler::Rule be added to pugs' prereqs given in INSTALL?

[07:48] <TreyHarris> oh, wait... Pugs::Compiler::Rule itself is given as a prereq.  but isn't it part of pugs?

[07:57] *** obladoc joined
[07:58] <agentzh> can ``when'' be used as a statement modifier? it seems quite natural.

[08:01] <Juerd> Yes

[08:03] <TreyHarris> Juerd: you can?  that is unspecced.

[08:03] <TreyHarris> I brought this up on p6-l a couple weeks ago

[08:03] <Juerd> Oh

[08:04] <Juerd> I thought it was specced.

[08:04] <Juerd> ?eval given 5 { 3 when 5; 4 }

[08:04] <evalbot_r13698> Error:  Unexpected "when" expecting comment, operator, statement modifier, ";" or "}"

[08:04] <Juerd> Oh.

[08:04] <TreyHarris> as currently specced, it's not a statement modifier; and even if it were, outside of a given it would cause the enclosing block to be terminated, which i think would not be desired behavior...

[08:06] *** baest joined
[08:06] <TreyHarris> my proposal was that when basically become an alias for "if $_ ~~ " outside of blocks that want given/when breaking behavior (right now, given and CATCH)

[08:07] <TreyHarris> then it could naturally be a statement modifier.

[08:33] <agentzh> *nod*

[08:33] *** elmex joined
[08:33] * agentzh is still busy making slides.

[08:34] *** bsb left
[08:37] *** ofer0 joined
[08:42] *** rodi joined
[08:46] <kane-xs_> audreyt: yeah, CPANPLUS supports that.. we coded that together :) i think CPAN.pm recently ported that feature to support sudo

[08:53] *** TreyHarris joined
[09:05] <TreyHarris> ?eval /msg nickserv identify spitatme

[09:05] <evalbot_r13698> Error:  Unexpected end of input expecting "\\", variable name or "/"

[09:05] <TreyHarris> oops :-)

[09:05] <TreyHarris> time to change that password :-)

[09:06] <Juerd> spit...at...you...?

[09:06] *** ruoso joined
[09:06] <Juerd> If you wish.

[09:06] * Juerd spits :)

[09:06] <TreyHarris> it's memorable ;-)

[09:06] * rodi ducks

[09:06] *** buetow joined
[09:07] *** axarob joined
[09:10] <TreyHarris> now that's changed, i can type again. :-) my throw-away passwords are all derivable from an aspect of the service/servername via an algorithm that if i say anything more about would be guessable.  but it results in smashed-together english words of various sorts, sometimes humorously :-)

[09:11] <TreyHarris> keeps me from having to write stuff down but lets me have a different password for each thing i use that wants a password.

[09:11] *** jferrero joined
[09:14] <TreyHarris> ?eval say "\x00ABhi\x00BB"

[09:14] <evalbot_r13698> OUTPUT[«hi» ] Bool::True

[09:16] *** chris2 joined
[09:17] <TreyHarris> ?eval say "\x7FBD\x91CC\x9808"

[09:17] <evalbot_r13698> OUTPUT[羽里須 ] Bool::True

[09:18] <TreyHarris> bleh, and i thought i had finally figured out this utf8 irc thing.  the *first* of those three characters displayed...

[09:18] * TreyHarris shrugs

[09:19] <Juerd> Awwh

[09:20] * Juerd hâş ütf⑧  wørkíñ qùit€ wēłl.

[09:21] <Juerd> s/ñ/ñģ/

[09:21] <Juerd> Perl should complain when you output a text string, by the way

[09:21] <TreyHarris> hâ

[09:21] <TreyHarris> hâ�_ ütf�Q�  wørkíñ qùit�B� w�S�Bl.

[09:21] <Juerd> It seems you have latin1 working :)

[09:22] <TreyHarris> and 羽

[09:22] <TreyHarris> isn't that odd.

[09:22] <Juerd> TreyHarris: Depends.

[09:22] <Juerd> TreyHarris: Do you run screen?

[09:23] <TreyHarris> yes.  but my LOCALE is set to en_US.utf8, and I started it with -U

[09:23] <TreyHarris> which i was told was the magic incantation

[09:23] <Juerd> Does that locale *exist*?

[09:23] <TreyHarris> locale -a says it does...

[09:23] <Juerd> Spelled like that?

[09:23] <Juerd> For example, in locales, UTF-8 and utf8 *are* different.

[09:24] <TreyHarris> no, i did that from memory

[09:24] <TreyHarris> ahh... but I have en_US.utf-8.  not UTF-8

[09:25] <Juerd> Next... does irssi know you're utf8'ing now?

[09:25] <TreyHarris> well, i better fix my incorrect casing first...

[09:29] *** TreyHarris joined
[09:29] <TreyHarris> ok... try that message again, Juerd :)

[09:30] <TreyHarris> why shouldn't pugs let me output that, by the way?  or did i misunderstand you?

[09:32] * Juerd hâş ütf⑧  wørkíñģ qùit€ wēłl.

[09:33] <Juerd> Because that would assume knowledge of the outside environment, that it doesn't have yet.

[09:33] *** b00t joined
[09:33] <Juerd> Though until we can tell it that we're utf8 ready, this is probably the best way to handle it ;)

[09:33] <Juerd> TreyHarris: How's this?

[09:34] <TreyHarris> i only got the same characters

[09:36] <Juerd> Okay. Does your irssi know about your utf8?

[09:36] <TreyHarris> term_type = utf8

[09:36] <Juerd>  /set term_charset utf8

[09:36] <Juerd> Err, UTF-8

[09:37] <TreyHarris> ah... my irssi doesn't have term_charset.  only term_type

[09:37] <TreyHarris> is that my problem?

[09:37] <Juerd> Mine the other way around

[09:40] <TreyHarris> my irssi docs say term_type, but they are inconsistent as to whether they want 'utf-8' or 'utf8' or 'UTF-8', they use all three

[09:49] <TreyHarris> i figured it out, maybe

[09:50] <TreyHarris> looks like I have to give *both* screen -U *and* :utf8 on to each window

[09:50] <TreyHarris> just one or the other isn't sufficient

[09:50] <mugwump> I had to get a trunk irssi for good unicode support

[09:50] <wolverian> that's an old irssi

[09:50] <mugwump> but that was a while ago

[09:51] <wolverian> you should get 0.8.10 for the recode support

[09:52] *** kane-xs_ joined
[09:53] <TreyHarris> wolverian: doesn't matter... maybe irssi isn't playing nice, but just cat'ing a utf8 file was giving me question marks until i did both -U and :utf8

[09:53] <TreyHarris> so it wasn't irssi's fault

[09:53] <wolverian> my locale is UTF-8, so screen follows that automatically

[09:53] <TreyHarris> ah.  just plain "UTF-8"?  my locale -a doesn't have that.

[09:54] <TreyHarris> so I'm using en_US.UTF-8

[09:54] <wolverian> I'm using fi_FI.utf8

[09:55] <mugwump> I'm on en_NZ.UTF-8

[09:55] <wolverian> is that a new hallucinogen?

[09:55] * TreyHarris smacks his head

[09:56] * mugwump checks PIHKaL

[09:56] <TreyHarris> ahh.  i see now that since i have and ssh involved too, my source machine's locale has "en_US.UTF-8", but my destination machine has "en_US.utf8".

[09:56] <rodi> out of curiousity, what are people using for input methods for characters not present on their respective keyboards?

[09:57] <wolverian> rodi, altgr+various combinations, or scim+anthy for japanese

[09:57] *** Alias_ joined
[09:58] <TreyHarris> it looks like of a) terminal font, b) terminal charset, c) local host LOCALE, d) remote host LOCALE, e) screen run with -U, f) screen window in which irssi is running has :utf8 set, g) irssi has term_type set to UTF-8...

[09:58] <TreyHarris> every one of those has to be explicitly set.  accepting defaults, even if the docs claim it should work, is not sufficient.

[09:58] <wolverian> weird.

[09:59] <mugwump> I wish xkb would let you assign arbitrary unicode chars to key combos

[09:59] <wolverian> I suppose some people might have set screen to not follow locale

[09:59] * wolverian shrugs 

[09:59] <TreyHarris> ah well.  enough madness for now.  sleep.  thanks for all the help!

[09:59] <mugwump> So I could bind the hotsprings character to something

[10:02] <TreyHarris> ?eval say "\x7FBD\x91CC\x9808"

[10:02] <evalbot_r13698> OUTPUT[羽里須 ] Bool::True

[10:02] <TreyHarris> ok, mugwump, you're right, irssi isn't helping either.  (only the first character displays.)  but that displays on my other screens, so I'm set I think :-)

[10:03] * TreyHarris Zzzzzz

[10:04] <Alias_> I met the oddest person today

[10:04] <Alias_> Statistically at least

[10:04] <Alias_> A Good Female Australian Muslim Programmer with a Functional language fetish

[10:05] <Juerd> mugwump: It does that

[10:05] <Alias_> The odds of all those combining must be exceptionally rare

[10:05] <Juerd> mugwump: find Compose stuff on your computer

[10:05] <mugwump> Juerd: but any arbitrary codepoint?

[10:05] <Juerd> mugwump: AFAIK, yes

[10:06] <mugwump> hmm

[10:06] <mugwump> it uses words like "EuroSign", "dead_ogonek", etc

[10:07] <Juerd> And literals

[10:08] <Juerd> dead_ogonek are keyboard symbols

[10:08] <Juerd> Not result character

[10:08] <Juerd> The resulting character is after the colon, in quotes

[10:10] <mugwump> do you have an example?

[10:10] <Juerd> Plenty in my Compose files.

[10:10] <Juerd> But I can't copy/paste

[10:11] <Juerd> And since you need to locate the right file anyway, I'm not going to type a line :)

[10:11] <mugwump> is there a file I should be looking in in the X.org dist (or as typically installed at...) ?

[10:14] <Juerd>  /usr/share/X11/locale

[10:14] <Juerd> find Compose there

[10:14] <mugwump> ah yes... cool

[10:15] <mugwump> oh wow, lots already there in the en_US.UTF-8

[10:15] <Juerd> Yea :)

[10:16] <mugwump> Darn, not enough free keys on this laptop

[10:16] * mugwump re-binds his menu key to Multi_key

[10:16] <Juerd> I use the menu key too

[10:17] <Juerd> On my laptop, which has no winkeys, the right alt.

[10:19] <mugwump> c¤øl

[10:19] *** rodi left
[10:20] *** rodi joined
[10:21] <Juerd> V€ry ¢ôôł

[10:22] <mugwump> At last – relief for typographers — Said the unicode-endowed page

[10:22] *** frankg joined
[10:23] <mugwump> hmm, actually I think my en dashes and em dashes are getting recoded

[10:24] <Juerd> I saw en dashes.

[10:25] <Juerd> Though on a text terminal, they're the same perhaps

[10:25] <Juerd> After all, m is as wide as n

[10:25] <Juerd> I have unicode working in Mutt since yesterday

[10:25] <Juerd> And already I've received two cyrillic spams.

[10:25] <Juerd> How did they knowL

[10:26] <Juerd> s/L/?/

[10:30] <mugwump> wǒde hànyǔ shì awful, but at least I can type it in pinyin easily armed with these key combinations

[10:36] <Juerd> H₂O

[10:36] <Juerd> Hehe² :)

[10:40] *** iblechbot joined
[10:57] *** markstos_ joined
[11:09] *** ofer0 joined
[11:09] *** axarob left
[11:22] *** Alias_ left
[11:23] *** foo\ joined
[11:28] *** KingDiamond joined
[11:34] *** xinming joined
[12:01] *** shizu joined
[12:06] *** rindolf joined
[12:06] <rindolf> Hi all.

[12:06] <rindolf> ingy: ping.

[12:07] * [particle] notes it's 5am ingy time

[12:07] <[particle]> ...but it's 5am particle time, too

[12:07] <rindolf> [particle]: I see.

[12:09] <rindolf> [particle]: are you up early or up late?

[12:16] <[particle]> i'm up early.

[12:16] <[particle]> got up at 4:30, 1.5hrs early :(

[12:38] *** nothingmuch_ joined
[12:58] *** fglock joined
[13:00] *** ofer1 joined
[13:03] *** elmex joined
[13:27] *** rodi joined
[13:27] *** crem joined
[13:29] <svnbot6> r13699 | fglock++ | Pugs-Compiler-Rule-0.19 in CPAN

[13:34] *** dakkar joined
[13:36] *** c6rbon_ joined
[13:43] *** vel joined
[13:43] *** chris2 joined
[13:48] *** cjeris joined
[14:02] *** c6rbon joined
[14:12] *** wolverian joined
[14:14] *** plural joined
[14:15] *** audreyt joined
[14:15] *** chip joined
[14:15] *** pmurias joined
[14:15] *** PerlJam joined
[14:15] *** xinming_ joined
[14:15] *** leo_ joined
[14:15] *** pmichaud_ joined
[14:15] *** webmind joined
[14:15] *** Juerd joined
[14:30] *** lanny joined
[14:34] <lanny> Hmm.  Why are the Synopses generated from the same revision different on different websites?  Re: http://feather.perl6.nl/syn/S29.html and http://m19s28.vlinux.de/iblech/stuff/pugs-smokes/pugs-smoke-6.2.12-r13695-linux-normal--1159330463-2215--12745-12088-657-1510-833-10--b22f10acb37fc685a83f7261a3be11dc-synopses/S29.html

[14:34] <lambdabot> Title: S29

[14:37] *** Gothmog__ joined
[14:38] *** kanru joined
[14:43] <rodi> lanny: AFAIK, S29 lives in the pugs repo, and those two are different pugs revs.  I think the other synopses mostly live in the syn repository.

[14:44] <rodi> It's weird.  I think if you check out the synopses directly, S29 is just a few-line placeholder.

[14:44] <lanny> Even granted that TimToady changed S29 a few days ago.  The pages should be in sync

[14:45] <lanny> And it's only a lead-up to me asking why the smartlinks I put in place for t/builtins/math/*.t aren't showing up.  :)

[14:46] <rodi> haha, gotcha.  you make a good point, though- last touch on that was r13589.  Well, I'm out of ideas.  That didn't take me long ;)

[14:49] <lanny> Even scarier when I look at svn.openfoundry.org/pugs/docs/Perl6/Spec/ I don't find the files at 13699 I do in my co of 13699

[14:51] <lanny> Ah.  Well that explains that.  They aren't under svk control in my co.  :/

[14:57] <lanny> Ok.  smartlinks.pl hits svn.perl6.org and populates the missing ones.  But svn.openfoundry.org/pugs/docs/Perl6/Spec/Functions.pod is *the* S29 so the original observation is still correct; different S29s on different websites

[14:58] <lanny> and broken smartlinks

[15:06] *** Odin-LAP joined
[15:17] *** weinig joined
[15:29] *** putter joined
[15:31] <lanny> @tell agentzh Not sure if this should be directed to you but Synopsis seem to be different between latest smokes on m19s28.vlinux.de and feather.

[15:31] <lambdabot> Consider it noted.

[15:33] <putter> @tell audreyt r13604 "* splatty_in_caller_position.t: It's f(|@args), not f(*@args)." looks like it deleted 15 t/regex test files.  was that intentional?

[15:33] <lambdabot> Consider it noted.

[15:34] *** justatheory joined
[15:41] *** Aankhen`` joined
[15:46] *** buubot joined
[15:48] <lanny> quit

[15:49] *** Gothmog__ is now known as Gothmog_

[15:49] *** elmex joined
[15:50] *** buubot joined
[16:03] <putter> fglock: ping?

[16:25] *** Psyche^ joined
[16:26] *** hexmode joined
[16:32] *** vel joined
[16:39] *** Psyche^ is now known as Patterner

[17:13] <TreyHarris> @tell lanny the reason S29 is not in sync is that S29 is still considered "non-stable" and under community control so anyone with pugs commit can edit it, and there's no maintainer or gatekeeper.  the other synopses have maintainers (with TimToady as uber-maintainer).  so they're in two different svn repos.  the text link is to deal with not being able to symlink from one svn repo to another portably

[17:13] <lambdabot> Consider it noted.

[17:15] *** Ser_ joined
[17:26] *** hexmode joined
[17:27] *** fglock joined
[17:29] <fglock> putter: pong

[17:29] *** mdiep joined
[17:31] <ajs_work> @tell lanny more generally, S29 in the pugs repo is the "working copy" and will eventually be/replace the authoritative version once it reaches stability.

[17:31] <lambdabot> Consider it noted.

[17:33] *** buetow joined
[17:33] <putter> hi fglock

[17:33] <putter> repeat patch inbound...

[17:33] <putter> err, range patch...

[17:34] <putter> not the whole thing.

[17:34] <putter> just the logic plumbing

[17:35] <putter> 13701.

[17:36] <fglock> putter: cool - if you implement the basics in PCR, then v6.pm can plug "real code" into it

[17:36] <fglock> (real code = iterators)

[17:37] <putter> it was kind of neat that with goto passing @_ along, much of the range logic doesn't need to understand the runtime's calling conventions.

[17:37] <putter> the parts that do, I left for you, as I really don't. ;)

[17:39] <TimToady> I just made :ratchet autoanchor on both ends unless overridden by :p or :c (on the assumption that subrule calls supply :p)

[17:40] <TreyHarris> how is <ws> defined?  I'm still trying to understand

[17:40] <TimToady> so token { \d+ } is equiv to m/ ^ \d+: $ /

[17:40] <TreyHarris> ?eval "foo bar".split(/<ws>/)

[17:41] <TimToady> that's not what <ws> i sfor.

[17:41] <TreyHarris> oh, evalbot's down

[17:41] <TimToady> <ws> is the optional whitespace matcher used by :sigspace.

[17:41] <TreyHarris> TimToady: yes, I know, but somebody else typed it and i'm trying to understand it :)

[17:41] <TimToady> so it can be the null string between non-word chars.

[17:41] <TreyHarris> it's apparently the null string between word characters, too

[17:41] <TimToady> well, in that case it should work.

[17:42] <TimToady> that's a bug

[17:42] <fglock> TimToady: do you have a test case for <ws> ?

[17:42] <TreyHarris> ah, ok

[17:42] <pasteling> "putter" at 66.30.119.55 pasted "svnbot is apparently on vacation... r13701 commit message." (12 lines, 818B) at http://sial.org/pbot/20008

[17:43] <TimToady> you mean like the one TreyHarris just typed?  I think that's already in the test suite somewhere.

[17:43] <putter> fglock: just let me know if you have any questions or issues.  cheers.

[17:43] <TimToady> well, I guess not...

[17:44] <fglock> putter: looking - thanks!

[17:44] <putter> :)

[17:44] <putter> lunch.  bbl &

[17:44] <TreyHarris> i couldn't find <ws> tested directly in the test suite

[17:45] <TreyHarris> it's used a couple places... but not tested

[17:45] <TreyHarris> unless m:p5 /<ws>/ is not a valid way to look for it

[17:47] <TimToady> I did a recursive grep for "split.*ws" but didn't find it.

[17:49] <TimToady> a lot of them are <?ws>

[17:49] <rodi> I asked a question about this yesterday- doc/Perl6/Overview/Rule.pod has a number of built-in assertions listed that are not in S05.  Some have tests, some don't.  I'd happily do the bookeeping of adding some tests and links if I had a clearer idea of which list is "official-er"

[17:51] <TimToady> S05 is officialer.  I haven't even looked at Overview/Rule.  But if Overview points out holes in S05 we should plug 'em.

[17:51] <PerlJam> rodi: which does docs/Perl6/Overview/Rule.pod have that aren't in S05?

[17:53] <rodi> PerlJam: the ones I've noticed: <dot>, <lt>, <gt>, <fail>, <null>, <ident>, <self>, and <'...'>.  <ident> is used in S05, if I recall correctly, but not defined.

[17:53] <TreyHarris> ajs_work: reading your most recent mail.  under your proposal, how would one specify the proto of a multi that takes several (but not all) types for its args?  conjunct them?

[17:54] <PerlJam> <null> is in S05

[17:54] <rodi> sorry, <null> is defined, just not in the list with <before pattern>, <after pattern>, etc.

[17:54] <rodi> sic.

[17:55] <PerlJam> some of those others are the same.

[17:55] <TreyHarris> er... for example

[17:55] <TreyHarris> ajs_work: por ejemplo, delete

[17:56] <fglock> does <null> captures? do I have to use <?null> instead?

[17:57] <PerlJam> fglock: yes and yes.

[17:57] <PerlJam> though capturing <null> may not hurt :)

[17:57] <fglock> how about <before pattern> and <?before ...>

[17:57] <TreyHarris> "our List proto delete(Array|Hash $container: *@indices)"?

[17:58] *** rindolf joined
[17:58] <rindolf> Hi all.

[17:58] <rindolf> ingy: here?

[17:58] <rodi> fglock: I don't think <before pattern> and <after pattern> currently capture in pugs.

[17:58] <PerlJam> fglock: as I understand things <assertion> always "captures" what is matched into the Match object and <?assertion> does not.

[17:59] <TreyHarris> perhaps Array and Hash do "Indexed" or some such, then you can use "our List proto delete(Indexed $container: *@indices)"...

[17:59] <PerlJam> fglock: though I believe that it is captured lazily if such a thing makes sense

[17:59] <PerlJam> (i.e., it keeps track of .from and .to but doesn't actually copy the part of the string that matched until you ask for it

[18:00] <PerlJam> )

[18:00] <TreyHarris> though that means that Indexed forces the requirement of implementing .delete on its... erm.  "implementors"?  what's the word for a user of a role?

[18:00] <fglock> PerlJam: lazy captures are a problem - if it captures once, it returns a match, but if it captures many, it returns an array - it is difficult to deal with the return value

[18:00] <[particle]> why would a *zero-width* assertion capture?

[18:01] <fglock> PerlJam - oh, the string is never copied until you ask for it

[18:01] <[particle]> ...and capturing <null> will likely be slower than non-capturing <?null> due to implementation

[18:01] <fglock> [particle]: yes, I'm asking if non-<?...> always captures or not

[18:02] <TreyHarris> is there a reason that @array<0> souldn't work?

[18:02] <PerlJam> It's a good rule that <X> always captures and <?X> always does not.

[18:03] <PerlJam> (though from an implementation perspective, I kind of wish it were the other way)

[18:03] <PerlJam> but that's just me

[18:05] <[particle]> <before foo> returns a zero-width Match object in PGE

[18:05] <[particle]> $.from and $.to are null

[18:05] <[particle]> ...but $.pos is set

[18:14] *** weinig is now known as weinig|away

[18:15] <fglock> putter: not enough coffee - I can't even understand my own code right now

[18:16] *** bernhard joined
[18:27] <putter> back

[18:27] <putter> fglock: :)

[18:44] <fglock> back in few mins &

[19:08] *** amnesiac joined
[19:16] *** rashakil joined
[19:23] *** TimToady_ joined
[19:29] <fglock> putter: in the current logic, you need to initialize the state, with something like: my @state = $_[1] ? @{$_[1]} : [ 0 ];  # current count

[19:33] <fglock> hmm - it's starting to make sense to me - adding a match counter non_greedy_plus() may be enough

[19:42] *** nothingmuch joined
[19:43] <nothingmuch> yo yo yo homies

[19:43] <fglock> nothingmuch: yo-yo

[19:44] <nothingmuch> yo man you need to show some rezpect or imma get upset

[19:44] <nothingmuch> you know what i'm sayin?

[19:45] <fglock> nah

[19:47] <pasteling> "fglock" at 200.17.89.34 pasted "putter: ranges implementation under way" (16 lines, 478B) at http://sial.org/pbot/20011

[19:47] <fglock> high level functions are scary

[20:25] *** Daveman joined
[20:26] *** kastol joined
[20:32] *** timbunce joined
[20:40] *** arguile joined
[20:43] *** timbunce joined
[20:49] <fglock> putter: r13702 - non_greedy_plus() now accepts (min, max) - added some tests; no emitter side yet

[20:51] <fglock> changing this to accept an iterator is straightforward (given enough coffee)

[20:52] *** justatheory joined
[21:00] *** nothingmuch joined
[21:00] <pasteling> "fglock" at 200.17.89.34 pasted "backtracking non-greedy range quantifier - working" (16 lines, 549B) at http://sial.org/pbot/20012

[21:27] *** Limbic_Region joined
[21:29] *** fglock left
[21:32] <nothingmuch> audreyt: do you have a recursive ddrescue script?

[21:32] <nothingmuch> my HD is occasionally blocking the USB/scsi bridge and i need to powercycle and remount it

[21:32] <nothingmuch> so ddrescue would be *very* useful

[21:37] *** hexmode joined
[21:40] *** araujo joined
[21:47] *** avar joined
[21:48] *** lanny joined
[21:51] <lanny> Admit that I have messages!

[21:51] <lambdabot> lanny: You have 2 new messages. '/msg lambdabot @messages' to read them.

[21:51] <lanny> lambdabot: @messages

[21:51] <lambdabot> TreyHarris said 4h 38m 23s ago: the reason S29 is not in sync is that S29 is still considered "non-stable" and under community control so anyone with pugs commit can edit it, and there's no maintainer

[21:51] <lambdabot>  or gatekeeper. the other synopses have maintainers (with TimToady as uber-maintainer). so they're in two different svn repos. the text link is to deal with not being able to symlink from one svn

[21:51] <lambdabot> repo to another portably

[21:51] <lambdabot> ajs_work said 4h 20m 44s ago: more generally, S29 in the pugs repo is the "working copy" and will eventually be/replace the authoritative version once it reaches stability.

[21:52] <Limbic_Region> lanny amdit that you knew you had messages because you read the irc logs prior to logging in!

[22:13] *** jferrero joined
[22:29] *** LimbicRegion joined
[22:35] *** LimbicRegion is now known as Limbic_Region

[22:40] *** nothingmuch joined
[23:01] *** kastol joined
[23:24] *** justatheory joined
[23:24] *** markstos_ joined
[23:51] *** putter joined
