[00:06] <webmind> clkao, good luck

[00:11] *** weinig joined
[00:12] <azuroth> oh, space before postfixes has been scrapped... cool

[00:12] *** Khisanth joined
[00:14] *** weinig is now known as weinig|out

[00:18] <TimToady> azuroth: see "Another dotty idea" in p6l for yet another simplification of postfix syntax that also gives us start/stop comments

[00:19] <TimToady> In short $x.#( your ad here ).foo treats .#() as comment and reduces to $x.foo

[00:19] <TimToady> unlike # line ending comments, would not count as whitespace.

[00:20] <TimToady> And we can stop people from asking about nestable comments by providing them.

[00:22] *** stevan_ joined
[00:23] <azuroth> interesting...

[00:25] <TimToady> any delimiter allowed after the .#, by the way, for those readers without access to p6l...

[00:26] *** marmic_ joined
[00:28] <TreyHarris> I'm right about the expected behavior of INIT return, right? http://sial.org/pbot/16660 returns nothing, but http://sial.org/pbot/16661 returns 72... they should both return 72, yes?

[00:31] <azuroth> it looks like it

[00:31] <TimToady> don't think so

[00:31] <TimToady> the pseudo-assignment of a declarator happens at a time determined by the declarator

[00:32] <TreyHarris> TimToady: I was following your example of localtime() and mktempfile() in S04... I thought...

[00:32] <TimToady> just happens that "my $x = " happens at execution time, and the first example reduces at INIT time to my $foo = 72;

[00:34] <TimToady> those just calculate the value at BEGIN or FIRST time, but the assignment is still at execution time.  If you want it to happen earlier,

[00:34] <TimToady> you have to use "state $foo = " or "constant $foo ="

[00:34] <azuroth> S04: s/would require travel back in time/would require traveling back in time/  ?

[00:34] <TimToady> which imply FIRST and BEGIN time.

[00:35] <TreyHarris> ahh.  and in this example, with a lexically hidden counter, I would want 'state'?  or would I want "my $counter; BEGIN { $counter =..."?  either would work

[00:35] <TimToady> traveling and travel are both nouns, technically

[00:36] <TreyHarris> TimToady: you tagmemic.  traveling is an N-bar :-)

[00:36] <TimToady> you can also use "my $counter is begin(...)"

[00:37] <TimToady> I outtagmemificated...

[00:37] <azuroth> "I'm traveling".. hmm, ok. "would require to travel back in time"?

[00:37] <azuroth> I guess it makes sense as it is. it sounded weird to me at first though

[00:38] <TimToady> that one is just a progressive verb.  but "require travelling" is a gerund according to the high-school English teacher.

[00:39] <azuroth> yarrg, ok I won't argue!

[00:39] <TimToady> you can't argue with high-school English teachers...

[00:39] <TreyHarris> you can tell that travelling is a "gerund" because it takes the genitive for a subject: "require my travelling back in time".

[00:40] <TimToady> the travelling is what gets to me...

[00:40] <TimToady> the doubling of 'l' in travelling also gets to me...

[00:40] <TimToady> but then, so does the non-doubling...

[00:41] <TimToady> neither way looks right to me anymore.

[00:41] <TimToady> the perils of being intercultural.

[00:41] <TimToady> another one    ^^^^^

[00:41] <TimToady> s/  / /

[00:42] <azuroth> maybe we should rename traveling to travelere or something

[00:42] <TreyHarris> TimToady: me too.  I see too much commonwealth English, and "whilst" and "fulfil" and such creep into my writing

[00:42] <TimToady> or we could just pronounce it with the emphasis on the last syllable, which would justify doubling the 'l'.

[00:43] <TimToady> unless we also lengthen the 'e', in which case it would be one 'l'.

[00:43] <azuroth> yeah, but when was the last time anyone renamed a word? we've gotta have _some_ fun

[00:43] <TreyHarris> ok, so "state $x = localtime", $x gets localtime at BEGIN time?  but "constant $y = localtime", $y gets localtime at start of first block entry?

[00:43] <TimToady> no state happens at FIRST time.

[00:44] <TimToady> constant happens at BEGIN time.

[00:44] <TimToady> we don't really have an INIT time declarator.

[00:44] <TreyHarris> ah, got them reversed.

[00:45] <TimToady> arguably our could do that, but people are used to assignment semantics there from P5.

[00:47] <TreyHarris> TimToady: I discovered last week that if I teach my Perl class labeled blocks on the same day I mention the named special code blocks (that's what they were called in P5, right?), they are liable to get confused and write "BEGIN: { $lib_args = ... }; use Foo $lib_args" and wonder why it doesn't work

[00:47] <TimToady> some speculation in p6l that we should write labels as Lines: instead of LINES: to prevent that confusion.

[00:48] * audreyt @ osdc... currently projecting #perl6 on the big screen

[00:48] <TimToady> hi everyone!

[00:48] <audreyt> (the talk is due to start in 12mins)

[00:48] <azuroth> hi perlers!

[00:48] <audreyt> :D

[00:49] <TreyHarris> TimToady: yeah, I started that, I think...

[00:49] * audreyt wonders how many in the room knows that TimToady = Larry Wall

[00:49] <TimToady> I just proposed .#() as embedded comment and as replacement for "long dot", which seems like a simplification.

[00:49] <TimToady> I'm not sure even TimToady realizes that all the time...

[00:50] <TreyHarris> he's TimToady, he's the real TimToady, all the other... nevermind.

[00:50] <TimToady> audreyt: which talk are you giving now?

[00:50] <TimToady> and have you finished writing it?

[00:51] <TimToady> (obviously not...)

[00:53] <TimToady> Hmm, actually, wouldn't that be TimToady =:= Larry Wall?

[00:54] <TreyHarris> TimToady: depends.  maybe "TimToady" is an IRC handle object that is getting assigned certain aspects of Larry Wall through a coercion?

[00:55] <arcady> probably TimToady ~~ Larry Wall

[00:55] <arcady> can't go wrong with that one, I hope

[00:55] <TimToady> I certainly don't feel like a readonly alias...

[00:55] <TimToady> maybe I just delegate to myself.

[00:55] <TimToady> Nah, I'm so bad at delegation that I even delegate my delegating to other people.

[00:55] <audreyt> rehi

[00:56] <audreyt> TimToady: this is supposedly 3hr talk on pugs

[00:56] <audreyt> but I only have 50min of it

[00:56] <TimToady> never stopped you before.

[00:56] <audreyt> the next half Ihave no idea

[00:56] <audreyt> maybe I'll simply plagiar^Wadapt your talk

[00:56] <TimToady> just give 'em a little break in the middle...

[00:56] <audreyt> may I do that?

[00:56] <TimToady> sure

[00:56] <audreyt> :D

[00:56] <audreyt> TimToady++

[00:56] <audreyt> TimToady: actually... your israel talk may work better

[00:56] <audreyt> you have the .ppt somewhere?

[00:57] <TimToady> er, good question.  they have it up somewhere in .il

[00:57] <TimToady> hang on...

[00:57] <audreyt> thanks :)

[00:58] <TimToady> http://wall.org/~larry/StumpIL.ppt

[00:58] * audreyt prays that OOo can handle it

[00:58] <TimToady> that's what I used in .il

[00:58] <TimToady> so should work, if you're recent enough

[00:59] <audreyt> 2.0-rel here

[00:59] <stevan_> audreyt: if you need me to, I can convert it to PDF for you :)

[00:59] <audreyt> works

[00:59] <TimToady> OOo++

[00:59] <audreyt> stevan_: what format is yours in?

[01:00] <stevan_> audreyt: I have M$ office and can "print to PDF"

[01:00] <audreyt> stevan_: cool, url please -- I'll probably have the audience pick the slide to use in the second half of the talk

[01:00] <audreyt> stevan_: nah, .ppt is just dine

[01:00] <audreyt> s/dine/fine/

[01:00] <stevan_> ok

[01:00] <audreyt> ok, the talk is starting... I'm switching you off the big screen :)

[01:00] <audreyt> bbiab &

[01:00] <TimToady> bye

[01:00] <TreyHarris> bye bye

[01:00] <stevan_> bye bye

[01:01] <TimToady> we've been de-takahashied...

[01:01] * stevan_ goes to read TimToady 's ppt

[01:01] <TreyHarris> where were we being ogled from?  Taipei?

[01:01] <stevan_> poor substitute for actually having gone to .il

[01:01] <TimToady> yup

[01:02] <TimToady> but the takahashified version of my stump speech is even more cryptic.

[01:03] * Juerd wonders if takahashification fits on a Scrabble board

[01:03] <obra> google:  Results 1 - 1 of 1 for takahashification. (0.48 seconds)

[01:04] <Juerd> 10:49:06 <autrijus>

[01:04] <TimToady> please tell me it's not a reference back to #perl6...

[01:04] <Juerd> TimToady: Almost :)

[01:04] <obra> nope #haskell

[01:04] <obra> and hahhahahahaha. audrey.

[01:04] <obra> Wow. so meta

[01:04] <TimToady> figgers

[01:04] <TreyHarris> ah, this slide show begins the same as the talk you gave at LISA in... 2002?

[01:04] <obra> 10:49:06 <autrijus> it's the takahashification process that's hard... it's just 45min, can't go into anything detail

[01:04] <Juerd> obra: /me is rotflol :)

[01:05] <TimToady> yep.  One of these centuries I'll have to come up with a new talk.

[01:05] <TimToady> Actually it keeps mutating over time.

[01:05] <obra> TimToady: Right around Perl 7.

[01:05] <Juerd> Good night, folks

[01:05] <obra> "Perl 7000"

[01:05] <TimToady> Actually, I come up with a new talk every OSCON.  It's everyone else gets the same talk.

[01:05] <TimToady> 'nite Juerd.

[01:06] <TimToady> Though arguably all my OSCON talks are the same talk too...

[01:06] * stevan_ is pondering a talk this year for YAPC::NA, but is getting brain block on the abstract

[01:07] <TimToady> Basically I never sign up for talks I have to write the abstract of in advance.

[01:07] <TreyHarris> http://en.wikipedia.org/wiki/The_Takahashi_method

[01:07] <stevan_> yeah but your TimToady :P

[01:07] *** stevan_ is now known as stevan

[01:08] <TimToady> there's got to be some advantaget to it somewhere...

[01:08] * stevan suspects its the throngs of female groupies, but can't say for sure

[01:09] <TimToady> my throng of female groupies I can count on the fingers of one hand, and that's about all I'm allowed to do with 'em. :)

[01:09] <stevan> :)

[01:10] <merlyn> at least you *have* female groupies

[01:10] <merlyn> mine are all psychotic

[01:10] <obra> One would think you'd be allowed to take Gloria out to a movie or for an ice cream sundae occasionally.

[01:10] <TimToady> who says mine aren't?

[01:10] <merlyn> sending me samples of their cut hair, etc.

[01:10] * stevan decides to not send that "package" to merlyn now 

[01:10] <TimToady> Gloria tends to transcend groupiehood in various ways.

[01:11] <obra> Fair enough. *grin*

[01:11] <TreyHarris> merlyn: where'd you come from?  you *are* merlyn--you can just pop in from nowhere

[01:11] <merlyn> it's true

[01:11] * TreyHarris waves

[01:12] <merlyn> particulates

[01:12] * TimToady fields tagmemically

[01:15] <TreyHarris> i've seen Lessig speak.  it's impressive, but I imagine he has interns or grad students to help him with his slides

[01:17] *** amnesiac joined
[01:17] *** xern joined
[01:20] <azuroth> by the way... what's the deal with the bugs manifesto?

[01:22] *** xern joined
[01:30] <TimToady> have you seen the Pugs Manifest from Audrey?

[01:30] <stevan> azuroth: check the date on its release ;)

[01:30] <TimToady> we shoulda put a link to it...

[01:31] <azuroth> ahh, ok. I haven't seen it

[01:32] <xinming> TimToady: You've mentioned that .#() will become multi-line comments, hmm, I wonder, will it be implemented as a macro or postfix operator?

[01:33] <stevan> wouldnt it be a circumfix instead of a postfix actually?

[01:34] <xinming> oops. circumfix... :-/

[01:36] <arcady> well, it'd have to be a macro

[01:36] <arcady> since you don't want it looking at what's inside the ()

[01:36] <arcady> (other than to figure out where the right ) is

[01:37] <arcady> or actually. it's a quotelike operator

[01:38] <arcady> quotelike noop

[01:38] <xinming> hmm, how about using .#(bla bla bla)  to comment a line instead of #? (I mean begin of a line)

[01:39] <xinming> will it be parsed as a . operator, and then, comment begin?

[01:40] <arcady> why would it do that?

[01:40] <arcady> it would be a .# operator

[01:41] <xinming> ok, IMHO, perl 6 will confuse more people than perl 5. :-P

[01:41] <arcady> more and less

[01:42] <azuroth> $x.#(blah blah).foo will be a . operator though, of course

[01:50] <arcady> .#() is grammatically a little weird, because it is like nothing at all

[01:50] <arcady> as opposed to regular comments, which are like whitespace

[01:50] *** Quell joined
[02:04] <TimToady> I'm busy revising S02 again, and it looks like it's working out very nicely.

[02:05] <TimToady> Particularly since we still get a shorthand . . that is taken to be equivalent to .#. .

[02:08] <TimToady> The other comments are naturally defined to make the "extra" newline into the whitespace.

[02:08] <TimToady> So #... only extends *to* the newline at the end.

[02:08] <TimToady> and =begin doesn't hide the newline before it.

[02:15] <TimToady> or actually, ". ." is equivalent to ".#. .." so it still does the "long dot" trick visually.

[02:16] <TimToady> have just checked in new S02.

[02:17] *** azuroth joined
[02:28] *** pmichaud joined
[02:30] <TimToady> pmichaud: see newest S02?

[02:31] <pmichaud> TimToady: as of ...?

[02:31] <pmichaud> the one you just committed, with C< .# > ?

[02:31] <TimToady> 'bout 15 minutes ago

[02:31] <TimToady> yes.

[02:31] <pmichaud> I looked briefly through it.  You didn't like (or didn't see) the alternative  C< #. > proposal?

[02:31] <TimToady> also have a response to the #. proposal queued, but my mailer is not sending right now.

[02:31] <pmichaud> ah

[02:31] <pmichaud> okay :-)

[02:32] <pmichaud> I just sent a second response about 5 minutes ago

[02:32] <TimToady> I prefer the "shape" of .#() as a pseudo-method call.

[02:32] <pmichaud> I buy that

[02:32] <TimToady> looks more distinctive too in isolation

[02:32] <pmichaud> I was thinking that  #.(  )  itself looked like a comment method call :-)

[02:32] <TimToady> #. is too square on the front, and easily confused with plain #

[02:33] <pmichaud> I agree with squareness on the front.  I don't think it's too confusing -- I don't think people will commonly use #. except as a whitespace eater

[02:33] <pmichaud> or as a delimited comment

[02:34] <TimToady> also, I think $x# looks too much like the # is part of the $x.  it really need the dot in between.

[02:34] <pmichaud> I agree there as well

[02:34] <TimToady> And I just like the it looks like # is the name of the method in .#()

[02:35] <TimToady> *that

[02:35] <pmichaud> yup, I have to agree

[02:35] <pmichaud> could we use the "whitespace after #" trick here as well, so that we get                $x.#           .foo()     ?

[02:35] <pmichaud> or does S02 already say that

[02:35] <pmichaud> ?

[02:36] <TimToady> you just write that $x.    .foo() now.  ". ." is short for ".#.  .."

[02:36] <azuroth> maybe . isn't obtrusive enough

[02:37] <TimToady> is there.  when it's not, use .#[]

[02:37] <TimToady> you almost always use "long dot" for lining things up, so there's redundant dots all up and down.

[02:38] <azuroth> $x##(foo is great).foo();

[02:38] <pmichaud> TimToady: okay, I like it -- especially when you put it that way

[02:39] <pmichaud> the redundant dots is a very good point

[02:39] <TimToady> azuroth: no, that would destroy ###################### blocks.

[02:39] <pmichaud> I'm much happier with this than with the gappy dot that we had previously

[02:39] <TimToady> me too.

[02:39] <pmichaud> and I like this much better than the lengthy dots ('......')

[02:39] <TimToady> cost me a nap worrying it though...

[02:40] <audreyt> stevan: url to your talk?

[02:40] <pmichaud> perhaps a small price to pay?  Or are you still recovering from .jp?

[02:40] <azuroth> TimToady: are you polyphasic? or just like naps?

[02:40] <TimToady> mostly residual jetlag, probably.  have to get up at 5am tomorrow to go down to San Diego and give a talk...

[02:40] <azuroth> ahh

[02:41] <TimToady> I do have many phases though. :)

[02:42] <azuroth> when are you coming to Australia to give a talk? ;-)

[02:43] *** r0nny joined
[02:46] <TimToady> dunno.  haven't scheduled an Australia phase yet.  I think I was supposed to come during my mid-life crisis, but my mid-life crisis turned out to be a rather pitifully small thing, as mid-life crises go...

[02:47] <TimToady> all I did was scrap my life's work and start over...

[02:48] *** mako132_ joined
[02:49] <kattana_> Refactored hmm?

[02:53] <TimToady> Maybe with a quantum computer refactoring can be sped up...

[02:55] <TimToady> Just call any(=io("*.rfc")) and see what pops out.

[03:04] <Limbic_Region> was our channel just attacked?

[03:05] <pmichaud> Limbic_Region: I didn't notice anything

[03:06] <pmichaud> Limbic_Region: (other than the message from lilo asking if we were attacked)

[03:06] <Limbic_Region> ok - it appeared to be a targeted message though as #perl didn't receive it

[03:10] <TreyHarris> Limbic_Region: no channel received it... it was a global mesg, so each user should have received it once

[03:15] <FurnaceBoy_> "Australia phase" ?

[03:16] <FurnaceBoy_> lots of Perl fans there :)

[03:16] <FurnaceBoy_> rabid ones

[03:20] <azuroth> hmm. use cases and scenarios just don't do it for me

[03:49] *** xinming joined
[04:29] *** xern joined
[04:35] *** loumz joined
[04:36] *** coumbes joined
[04:39] *** xinming joined
[05:06] <azuroth> hmm

[05:08] <arcady> hmm?

[05:08] <azuroth> I just realised, when you're buying something with cash it's the change that's rounded, not the amount to pay. don't know why I never realised that before

[05:42] <TreyHarris> i.e., if it's $1.01, you have to pay at least $1.05, and you get nothing back?

[05:42] <azuroth> s/.01/.04/

[05:43] <azuroth> yes, which carries over to paying by EFTPOS nicely

[05:43] <TreyHarris> ah, but if it's $1.01, you get it for a dollar?

[05:44] <azuroth> humm, good point. unless you paid $1.00 and the change was -0.01, which would round down to 0 :-p

[05:44] <azuroth> err, up

[05:45] <azuroth> so both cash in and cash out need to be rounded-ish

[05:45] <arcady> well, that's nice and clever

[05:45] <arcady> in the US nothing is rounded

[05:45] <arcady> well, the sales tax is rounded to the nearest cent

[05:46] <arcady> (and sometimes it's something like 8.625%)

[05:47] <azuroth> so you buy something for $0.99 and you get one cent change? gee

[05:47] <arcady> better yet

[05:47] <arcady> the 99 cent store sells everything for 99 cents

[05:47] <arcady> so you need $1.07 to actually buy anything

[05:48] <azuroth> argh

[05:48] <arcady> so you get 93 cents change

[05:48] <arcady> there's actually a clever fast food chain that includes sales tax and pre-rounds everything to 5 cents

[05:51] <azuroth> hmm. I guess 10% GST _is_ a good thing, compared to alternatives

[05:51] <arcady> oh, and then there's the fact that the 1 cent coin is bigger than the 10 cent coin

[05:51] <arcady> yeah

[05:51] <arcady> here sales tax is pretty arbitrary, varying by state, county, city, and often special tax districts on top of that

[05:54] <arcady> and then there's alaska... no sales tax, no state tax, and they actually pay you to live there

[05:54] <azuroth> ...what?

[05:55] <arcady> they put all the money they collected off the oil industry in the Alaska Permanent Fund

[05:55] <ayrnieu> azuroth - yes.

[05:55] <arcady> and everyone gets an annual share of the interest

[05:55] <arcady> presumably this somehow makes up for not seeing the sun for half the year

[05:55] <ayrnieu> Two thousand dollars or so, last I heard.

[05:56] <ayrnieu> arcady - makes up for?  Added bonus!

[05:56] <azuroth> what a crazy place...

[05:56] <ayrnieu> Alaskans refer to summer as 'road-building season'.  All construction starts then, and is fast, because it absolutely stops in winter.

[05:56] <ayrnieu> azuroth - extreme environments can be fun.

[05:59] <arcady> yep. pepole there fly to work. on their own airplanes

[05:59] <azuroth> ... you americans are all crazy

[06:00] *** TimToady is now known as aTimToady

[06:01] <aTimToady> I see only people whose nics start with "a" are allowed now...

[06:01] *** azuroth is now known as TimToady

[06:01] <TimToady> not any more

[06:01] *** TimToady is now known as azuroth

[06:01] *** aTimToady is now known as TimToady

[06:02] <ayrnieu> always the there being more than one way to do it!

[06:02] <azuroth> only places starting with 'a' can be talked about, also

[06:02] <TimToady> all places start with 'a'

[06:03] <azuroth> exactly

[06:06] <azuroth> hmm. credit vouchers.

[06:35] *** GeJ joined
[06:37] *** xern joined
[06:55] <gaal> "quotelike nooperator"

[07:00] <azuroth> goatlike goat goat

[07:08] *** Barry joined
[07:15] <arcady> clearly, perl needs more goatlike operators

[07:17] <gaal> beeeh.

[07:18] <audreyt> did pugs_intro + stumpjp + parrot(why,where,when) today

[07:18] <audreyt> tomorrow will do haskell + peek

[07:18] <audreyt> (stumpjp = larry's closing keynote to yapc::asia; parrot(www) is jonathan's)

[07:21] *** hcarty joined
[07:25] *** hcarty left
[07:28] <azuroth> three hours of talking? well done

[07:28] <audreyt> thanks... I very much miss resuming hacking+journaling though :/

[07:28] <audreyt> wireless is crappy here

[07:28] <audreyt> (as with most conferences)

[07:29] <audreyt> at least food is good

[07:29] * audreyt is watching a demo of XCode class browser/model builder and is reminded again of how good OO could be

[07:30] <audreyt> (though to be fair, Eclipse seems to be getting there)

[07:31] <azuroth> is there a video stream? ;-p

[07:32] * gaal randomly took a look at the new stuff in Eclipse 3.2 - pretty amazing work they're doing there

[07:32] <gaal> of course half of it is only needed because, uh, the bureaucracy

[07:33] <audreyt> . o O (vogons with their interplanatary bulldozers)

[07:33] <arcady> eclipse makes java almost bearable

[07:34] <arcady> a feature of eclipse? or a bug of java?

[07:34] <audreyt> both...

[07:34] <audreyt> "the culture can fix the language"

[07:35] <gaal> I feel like giving more than one talk in yapc, but I'm out of ideas. (audrey, not sure about the ghc thing)

[07:36] <gaal> hmmm, maybe "the pugs test system and how you can use it for your perl5 projects"?

[07:37] <azuroth> "creating FORTRAN macro-laden perl6"

[07:38] <gaal> "The ASM backend"

[07:38] <gaal> not.

[07:38] <audreyt> gaal: HTMLMatrix is at most a lightning talk

[07:38] <audreyt> +smokeserv, maybe 20mins

[07:38] <gaal> i wasn thinking, yeah.

[07:38] <gaal> +cataloger

[07:39] <audreyt> mmm hmm

[07:39] <gaal> catalogger

[07:39] <gaal> analoger, hylologer...

[07:41] <gaal> zygologer, paraloger...

[07:41] <audreyt> metalogger, monologger

[07:41] <gaal> antiquasilogger

[07:42] <gaal> see? enough for a 20 minute talk. :-)

[07:42] <audreyt> it's all greek to me

[07:42] <gaal> don't worry, it's all equivalent to monads

[07:43] <audreyt> you mean symmetric premonoidal categories with algebraic structures

[07:44] <gaal> \x -> take (1+(2*x)) $ concat $ repeat "~Y"

[07:45] <gaal> what I mean of course is analytic and algebraic topology of locally Euclidean metrization

[07:45] <gaal> of infinitely differentiable Riemannian manifold

[07:45] <gaal> (Bozhe moi!)

[07:45] <audreyt> bozhe moi

[07:45] <gaal> heh heh

[07:47] <gaal> I know! I know! I'll give a talk on "Type Inference in Brainfuck"

[07:48] <arcady> hm. I wonder if there can exist such a thing as Objective Brainfuck

[07:48] <gaal> Subjective Brainfuck

[07:48] <gaal> or is that Surjective?

[07:49] <azuroth> hmm. I think it already is subjective

[07:50] <ayrnieu> a language capable of N-dimensional time-travel with backtracking and a versatile array of feral and tame extensions is surely not a language powerful enough for OO and type inference.

[07:50] <audreyt> hm, objc distinguishes between

[07:50] <audreyt> "buffer"

[07:50] <audreyt> and

[07:50] <audreyt> @"string"

[07:50] <audreyt> I wonder if we need somehow a buffer object constructor literal

[07:51] <audreyt> probably not something to worry about right now

[07:51] <azuroth> interesting... better yet would be compile-time constructors, if I'm not going crazy?

[07:54] <azuroth> macro MakeBuf(String $a){ turn literal $a into a linked-list or whatever }; $a = MakeBuf("foo"); ?

[07:55] <gaal> audreyt: url on what the distinction entails?

[07:57] <audreyt> gaal: http://www.carbondev.com/site/?page=Cocoa

[07:57] <audreyt> azuroth: that would do, yeah

[08:00] <gaal> scary sentences:

[08:00] <gaal> "You can print almost any object out using NSLog"

[08:00] <gaal> "Almost everything in Cocoa is an object"

[08:02] <gaal> Is there a word in English analogous to "contrarian", where the force of the difference is in saying "but" in the sense of a qualification and not opposition?

[08:02] *** khisanth_ joined
[08:02] <ayrnieu> gaal - pedant.

[08:02] <gaal> lol

[08:02] <azuroth> scary syntax...

[08:02] <ayrnieu> qualitarian.

[08:03] <gaal> cocoalitarian

[08:03] <ayrnieu> contraqualitarian.

[08:03] <gaal> ha! turns out that _e_qualitarian is a word: it's a synonym for egalitarian

[08:04] <gaal> in the noun sense.

[08:04] <ayrnieu> yes.

[08:05] <ayrnieu> Where by 'real' you mean 'used'.  If you start using 'contraqualitarian' now, you'll either have a real and decent word for your subject or someone will send you an angry email telling you to use some other, superior term.

[08:05] <gaal> a rabbi, a priest, and equalitarian step into a bar...

[08:06] <gaal> except I didn't say "real" :)

[08:07] *** jiing_ joined
[08:08] <ayrnieu> sorry, I translated something you said with structure into an idiomatic noun: 'real word'.

[08:08] <gaal> I am teh tricksy

[08:27] *** siosiosios joined
[08:35] <azuroth> I'm speed racer and I drive real fast

[08:35] <ayrnieu> I'm a big pirate and I like to steal

[08:36] <azuroth> I'm your doctor and here's the bill!

[08:37] <Barry> I'm Perl 6 and I take my time.

[08:38] <audreyt> Barry++

[08:39] *** penk joined
[08:41] <azuroth> party time

[08:45] <gaal> audreyt, ISTR you had an alias to open the .hs source of GHC modules (eg IORef) from the shell. can I have it?

[08:45] <audreyt> I really don't

[08:45] <gaal> you grep -r 'module Foo' ?

[08:45] <audreyt> locate IORef.hs | grep ghc/libraries | xargs vim

[08:46] <gaal> ah, better

[08:46] <gaal> thanks :)

[08:46] *** nothing_pasta joined
[08:48] <gaal> the docs for (++) mention here

[08:48] <gaal> # http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v%3A%2B%2B

[08:48] <gaal> that a ++ b  is a if a is infinite

[08:48] <gaal> now, of course that's effectively true

[08:49] <gaal> but the compiler has no way of knowing it in the general case. so why mention it?

[08:49] <ayrnieu> (documentation?)

[08:50] <gaal> well, I'm sorta applying the pragmatics take on grice's maxims here

[08:51] *** masak joined
[08:51] <audreyt> gaal:

[08:51] <gaal> if something's obvious but somebody bothered to mention it in otherwise terse documentation, there's presumably something subtle going on

[08:51] <audreyt> (++) []     ys = ys

[08:51] <audreyt> (++) (x:xs) ys = x : xs ++ ys

[08:51] <audreyt> gaal: the compiler doesn't have to know

[08:51] <audreyt> lazy eval takes care of that

[08:51] <azuroth> !

[08:52] <gaal> well, sure, okay

[08:52] <pasteling> "masak" at 130.238.83.176 pasted "Why don't the subroutines &a and &b return the same results?" (32 lines, 1K) at http://sial.org/pbot/16665

[08:52] <masak> this confused me greatly last night

[08:52] <masak> help appreciated

[08:54] <audreyt> masak: try s/&&/and/

[08:55] <masak> i will

[08:55] <audreyt> otherwise (4,5) associates to &&

[08:56] <masak> ah

[08:56] <audreyt> && is tighter than listop

[08:56] <masak> yes, "and" works

[08:56] <ayrnieu> why use grep on (4,5) instead of 4|5 ?

[08:56] <masak> ayrnieu: (4,5) is a special case of an array I have

[08:56] <masak> I was trying to understand the phenomenon

[08:57] *** GeJ joined
[08:57] <masak> audreyt: thx, the thing about priority explains everything

[08:57] *** nothing_pasta is now known as nothingmuch

[09:02] <nothingmuch> audreyt++

[09:05] <audreyt> JSR 292 makes targetting JVM finally possible (err, sane):

[09:05] <audreyt> http://www.jcp.org/en/jsr/detail?id=292

[09:05] <audreyt> finally approved, coming to Java 7

[09:06] <audreyt> "invokedynamic" opcode

[09:06] <nothingmuch> i need a volunteer that can do Getopt and Perl 5

[09:06] <nothingmuch> i can't write proper CLIs

[09:06] <nothingmuch> or rather, i've never tried/learned

[09:06] <nothingmuch> and I haven't the time

[09:06] <nothingmuch> this is for the smokeserver upload script

[09:06] <nothingmuch> it should be able to upload a serialized report

[09:06] <nothingmuch> or upload a t/ dir

[09:06] <nothingmuch> or serialize a t/ dir

[09:07] <nothingmuch> by t/ dir

[09:07] <nothingmuch> i mean: run the tests

[09:07] <nothingmuch> it should be able to say '-t "this is a single tag" -t foo -t bar'

[09:07] <audreyt> nothingmuch: App::CLI ?

[09:08] <audreyt> Getopt::Long and use "t=s@"

[09:08] <audreyt> that's all

[09:08] *** p5evalbot joined
[09:10] <nothingmuch> i'll keep that in mind

[09:10] <nothingmuch> anyway, i'm working on the server

[09:10] <nothingmuch> if anyone wants to volunteer before I get around to the client

[09:10] <nothingmuch> feel free

[09:15] *** ghenry joined
[09:38] *** KingDiamond joined
[10:08] *** b_jonas joined
[10:21] *** autark joined
[10:21] *** gaal joined
[10:35] *** bsb joined
[10:37] *** kanru2 joined
[10:39] *** elmex joined
[10:48] *** Barry left
[10:56] *** chris2 joined
[10:56] *** Odin- joined
[11:00] *** _meppl joined
[11:02] <_meppl> guten morgen

[11:03] *** _meppl is now known as _meppl_

[11:03] *** _meppl_ is now known as meppl

[11:04] <nothingmuch> hi ho

[11:05] <meppl> good morning nothingmuch

[11:09] *** TimToady joined
[11:16] *** premshree_ joined
[12:27] *** larsen joined
[13:30] *** elmex joined
[13:35] *** jiing joined
[13:37] *** mj41_ joined
[13:54] *** ror joined
[13:54] *** ror left
[13:56] *** DaGo joined
[14:56] *** justatheory joined
[15:17] *** kanru joined
[15:17] *** weinig|out is now known as weinig

[15:19] *** FurnaceBoy joined
[15:23] *** Khisanth joined
[15:25] *** nnunley joined
[15:58] *** vel joined
[16:09] *** lichtkind joined
[16:09] *** elmex joined
[16:10] <lichtkind> hello, is it possible to wirte in perl6 $arrayref = (1,); ?

[16:13] <wolverian> yeah.

[16:14] <lichtkind> thanks

[16:17] <lichtkind> im witing some perl6 tut in german

[16:19] <lichtkind> and in this sample the array will have only one item?

[16:27] <wolverian> yeah. although you could as well say [1]

[16:31] *** penk left
[16:36] <lichtkind> yes that also stand in synopsis

[16:36] <lichtkind> thx :9

[17:03] *** rindolf joined
[17:03] <rindolf> gaal: here?

[17:03] <rindolf> nothingmuch: here?

[17:03] <lichtkind> seem so:) but people here are frienly

[17:05] <nothingmuch> rindolf: yes

[17:15] <rindolf> nothingmuch: hi! Happy Passover.

[17:15] <nothingmuch> it's passover?

[17:17] <rindolf> nothingmuch: on Wednesday.

[17:19] <rindolf> nothingmuch: I unleashed 6 modules on CPAN this weekend. Three of them were different versions of Error.pm, though.

[17:46] *** pmichaud joined
[17:50] *** KingDiamond joined
[17:54] *** weinig is now known as weinig|out

[18:37] *** KingDiamond joined
[19:49] *** FurnaceBoy is now known as FB|afk

[20:01] *** KingDiamond joined
[20:01] *** cognominal joined
[20:10] *** rindolf joined
[20:10] <rindolf> Hi all!

[20:10] <rindolf> TimToady: here?

[20:15] * nothingmuch yawns

[20:30] *** bsb joined
[20:33] *** SamB joined
[20:33] *** Khisanth joined
[20:33] *** feng joined
[20:39] *** diotalevi joined
[20:45] *** KingDiamond joined
[21:02] *** enantiodromos left
[21:20] *** hcarty joined
[21:27] *** Khisanth joined
[21:43] *** stclare joined
[21:49] *** Khisanth joined
[22:02] *** nothing_pasta joined
[22:15] *** Khisanth joined
[22:59] *** q[uri]_ joined
[23:08] *** KingDiamond joined
[23:17] *** hcarty left
