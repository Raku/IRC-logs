[00:01] *** mlh left
[00:03] <theorbtwo> Whoops.

[00:03] <theorbtwo> Somehow, I missed the bless there...

[00:03] <TimToady> np

[00:04] <TimToady> communication lag sucks even for people who think and type perfectly...

[00:05] <TimToady> so those of us who think and type imperfectly are doubly in trouble...

[00:10] * ruoso will read the logs later... too much work...

[00:12] <Ara5n> so, does anyone know if: perl -MPugs::Compiler::Rule -e '$rule = Pugs::Compiler::Rule->compile("<word> <ws> <word>"); $rule->match("foo bar")'

[00:13] <Ara5n> should work? or am I doing something mindbuggeringly stupid? :/

[00:13] <Ara5n> (also, where did the <word> rule come from? it doesn't seem to be in S05...)

[00:14] <GabrielVieira> whew uv found <word> ?

[00:15] <Ara5n> first line on Pugs/Grammar/Rule/Rule.pm?

[00:15] *** Quell joined
[00:16] <GabrielVieira> ill look

[00:16] <GabrielVieira> :)

[00:17] <Ara5n> either way, it blows up with a 'Error in evaluation: Undefined subroutine &Pugs::Emitter::Rule::Perl5::concat called at /usr/local/share/perl/5.8.7/Pugs/Runtime/Rule2.pm line 89.'

[00:17] * Ara5n goes digging

[00:17] <GabrielVieira> humm

[00:24] *** huhlig left
[00:26] *** wolverian joined
[00:26] <nothingmuch> do we want uniqueness type inference to analyze when data will not need to be garbage collected?

[00:33] *** hcarty joined
[00:35] <Ara5n> what's the relationship between perl5/Pugs-Compiler-Rule and misc/pX/Common/Pugs-Compiler-Rule?

[00:35] <Ara5n> (and whatever's sitting on cpan? :/)

[00:36] * Ara5n thinks he's got stuck slap in the middle of some crazy refactoring

[00:38] *** hcarty left
[00:38] *** dvtoo joined
[00:44] *** dvtoo joined
[00:45] * Ara5n totally fails to pick apart which version of the libraries's in what state of development & by whom, and gives up when running his oneliner causes perl to hang, seemingly blocked on a pugs waiting on stdin :(

[00:46] <ayrnieu> oneliner?

[00:46] <Ara5n> [00:12] <Ara5n> so, does anyone know if: perl -MPugs::Compiler::Rule -e '$rule = Pugs::Compiler::Rule->compile("<word> <ws> <word>"); $rule->match("foo bar")'

[00:46] <Ara5n> as it doesn't with the P::C::R on CPAN - or the one in perl5/P-C-R

[00:47] <ayrnieu> ah.  You might leave a report at rt.cpan.org ;

[00:49] <Ara5n> hmok

[00:50] <Ara5n> seems that the Pugs::Runtime::Rule2 on CPAN expects to be able to find Pugs::Emitter::Rule::Perl5::concat, whereas in pX/Common it's now in Pugs::Runtime::Rule::concat

[00:52] * Ara5n fixes the cpan version up manually

[00:52] <ayrnieu> that also works.

[00:53] <ayrnieu> um, seems possible again that the latest version CPAN sees is out of date, if it depends on pugs.

[00:53] <Ara5n> well, i don't understand to what extent it does depend on pugs

[00:54] <Ara5n> i thought half the idea was that the modules uploaded to CPAN ran natively on p5 using the pmc magic

[00:54] <ayrnieu> I suppose it depends on Pugs::

[00:54] <Ara5n> well, i guess i might have a collision between Pugs:: installed by make install'ing pugs

[00:54] <Ara5n> and cpan installing P-C-R...

[00:56] <Ara5n> either way, fixing the bogus classpath in Pugs::Runtime::Rule2 solves things

[00:56] <Ara5n> s/classpath/location of the concat() sub/

[00:57] *** chouse joined
[01:02] *** stevan_ joined
[01:03] <Ara5n> looks like fglock fixed it in r9605, anyway

[01:08] * Ara5n wonders why svn is checking half of these files out with dos line endings :/

[01:11] *** Juerd joined
[01:19] <Ara5n> do pugs hackers tend to set up auto-props for svn:eol-style=native, or fix files which have been committed with the wrong eol terminator by setting the property in the repo?

[01:20] <Ara5n> hm, judging by the number of svn:eol-style's set in the repo...

[01:28] <svnbot6> r9627 | arathorn++ | setting svn:eol-style as native to fix line-endings on P-C-R and chums

[01:29] <Ara5n> hm

[01:29] * Ara5n hopes he didn't !"$% that up

[01:30] *** Frances_ joined
[01:31] <Juerd> Good night, everyone

[01:33] <Ara5n> um, http://rt.openfoundry.org/Foundry/Project/Source/index.html/pugs/Common/Pugs-Compiler-Rule/TODO doesn't look good

[01:33] * Ara5n looks vaguely guilty

[01:33] <Ara5n> night

[01:33] <Ara5n> oh, bogus url

[01:35] *** amnesiac joined
[01:37] * Ara5n has a horrible feeling that svn shouldn't recommit the whole file when you set svn:eol-style :/

[01:39] <FurnaceBoy> urk, line ending changes always suck

[01:39] <Ara5n> yeah, that went totally awry :(

[01:39] <Ara5n> fglock: sorry, wherever you are :/

[01:39] <FurnaceBoy> I'm always having to fix and commit, and then cross-revision diffs just won't ever work :~|

[01:40] <FurnaceBoy> so I standardise on UNIX breaks in my own repos

[01:40] * Ara5n assumed that svn was smart enough to let you change it for a file which has already been commited incorrectly

[01:40] <FurnaceBoy> heh, I never tried that, actually

[01:41] <Ara5n> and perhaps it is, if you re-checkout after setting svn:eol-style before committing

[01:41] <Ara5n> meh, anyway

[01:41] <Ara5n> what a particularly inglorious commit.

[01:41] <FurnaceBoy> I feel yr pain.

[01:41] <FurnaceBoy> well put. An inglorious commit. at least you can express your agony poetically.

[01:42] <Ara5n> hrm ;)

[01:45] <Ara5n> gah, i blatantly should have just set the property remotely rather than committing at all

[01:45] <Ara5n> what a mess

[01:54] <FurnaceBoy> ah.

[01:54] <FurnaceBoy> you've besmirched an otherwise flawless repo. You animal.

[01:55] *** vel joined
[01:57] * Ara5n mails fglock to apologise and crashes for the night

[01:57] <FurnaceBoy> nite

[01:57] <Ara5n> night

[02:02] *** omniuni joined
[02:02] *** omniuni left
[02:09] *** Nouk joined
[02:26] <justatheory> stevan: (Delayed reaction) No, your interpretation sounds right.

[02:57] <stevan_> justatheory: (also delayed reaction) cool :)

[02:57] <justatheory> Heh, not as delayed as mine!

[02:57] <stevan_> justatheory: :)

[02:58] <justatheory> 'Course, had there been a Class::MOP when I wanted my introspection API, I might not have bothered with writing Class::Meta.

[02:58] <stevan_> we set up #moose over at irc.perl.org too, for Class::MOP and Moose related questions/stuff

[02:58] <justatheory> But now, of course, I'm quite fond of it.

[02:58] <justatheory> Cool.

[02:58] <stevan_> yeah I looked over Class::Meta a few times while I was working on the Perl 6 metamodel

[02:58] <justatheory> Cool!

[02:58] <justatheory> Do I get any credit? :->

[02:59] <stevan_> you got a shout-out in the SEE ALSO section :)

[02:59] *** hcarty joined
[02:59] <justatheory> W00t!

[03:00] <justatheory> Seems like, what with both of our involvement in meta classes in Perl and JSAN that we have similar interests.

[03:01] *** hcarty left
[03:02] <stevan_> justatheory: very true, although my JSAN work is fairly limited compared to yours

[03:02] <stevan_> I gave up doing a lot of Javascript a few years back

[03:02] <justatheory> stevan_: Not so. You sicced Rob onto it.

[03:02] <stevan_> LOL

[03:02] <stevan_> actually it was the other way around, he got into it first :)

[03:03] <justatheory> heh

[03:03] <justatheory> But then you supported that, yes?

[03:03] <stevan_> yup

[03:03] <justatheory> Good man. Hopefully he can resurrect it before OSCON.

[03:03] <rafl> Hello guys

[03:03] <justatheory> whaddup?

[03:04] <rafl> Nothing much. Parrot 0.4.2 is in Debian sid by tomorrow.

[03:22] *** KingDiamond joined
[03:48] *** weinig|away is now known as weinig

[04:58] *** Aankhen`` joined
[05:43] *** szabgab left
[06:03] *** LumberCartel joined
[06:04] *** LumberCartel left
[06:20] *** KingDiamond joined
[06:23] *** justatheory joined
[06:47] *** Quell joined
[06:47] *** GeJ joined
[06:48] <GeJ> Good morning folks

[07:07] *** kanru joined
[07:11] *** iblechbot joined
[07:15] *** KingDiamond joined
[07:16] *** marmic joined
[07:18] *** fandango joined
[07:34] *** Nouk joined
[07:46] *** Quell joined
[08:14] *** sl01 joined
[08:35] *** kane_ joined
[08:46] *** Draconit_ joined
[08:49] *** Frances__ joined
[09:02] *** ghenry joined
[09:04] *** Draconit_ left
[09:14] *** Draconit_ joined
[09:14] *** Draconit_ left
[09:54] *** drbean joined
[10:13] *** jisom joined
[10:20] *** iblechbot joined
[10:24] *** KingDiamond joined
[10:25] *** jisom_ joined
[10:34] *** Draconit_ joined
[10:36] *** Draconit_ left
[10:40] *** jisom_ is now known as jisom

[10:45] *** marmic_ joined
[10:48] *** _cnhackT_ joined
[10:49] * Ara4n investigates how to revert his bogus line-ending commit in pX from last night :(

[10:50] *** Khisanth joined
[10:52] <Juerd> rafl: Please reenable automatic pugs building on feather

[10:55] *** leo_ joined
[10:56] *** leo_ is now known as LeTo

[11:18] *** rindolf joined
[11:18] <rindolf> Hi all!

[11:18] <Arathorn> morning

[11:20] <pasteling> "rindolf" at 88.153.140.201 pasted "graham.p6 - latest version" (250 lines, 7.4K) at http://sial.org/pbot/16365

[11:20] <rindolf> Arathorn: hi! What's up?

[11:20] <rindolf> audreyt: here?

[11:20] <Arathorn> rindolf: trying to revert a bogus line-ending 'fix' in the pX branch of the repo

[11:21] <rindolf> Arathorn: OK.

[11:21] * Arathorn didn't realise that svn ps svn:eol-style native pX/whatever; svn ci; # would go and totally mangle the line endings in the repo and screw up the files' history :(

[11:22] <Arathorn> and it doesn't work if you s/\r//g; on the files before committing them (after setting the property)

[11:22] <Arathorn> any suggestions from anyone would be

[11:22] <Arathorn> muchly appreciated :)

[11:22] <jisom> edit the property, then change the line endings, then reset the property?

[11:23] * Arathorn tries that

[11:23] <Arathorn> (not on the live repo ;)

[11:27] *** ghenry joined
[11:27] <Arathorn> jisom: whilst deleting the property doesn't alter the line endings in the repo (go figure)

[11:27] *** elmex joined
[11:27] <Arathorn> the fact of committing it (with the working version using either \n or \r\n) totally mangles the history by rewriting all the lineendings serverside

[11:27] <Arathorn> which seems ridiculous :(

[11:28] <jisom> weird....

[11:28] <Arathorn> and you can't set properties on a remote repo, apparently

[11:28] * Arathorn sighs

[11:36] *** renato joined
[11:39] <Arathorn> turns out this is a mis(sing)-feature of svn

[11:39] <Arathorn> hoorah

[11:47] <Arathorn> oh bollocks

[11:47] <Arathorn> i wonder if this is going to totally mess up Module::Install's checksumming magic

[11:48] <Arathorn> as .pmc's will get checked out on different platforms with different line-endings (with svn:eol-style native)

[11:48] <Arathorn> causing their 32-bit checksums to obviously differ

[11:48] <Arathorn> meh

[11:51] *** kanru joined
[12:04] *** chris2 joined
[12:04] *** TimToady joined
[12:06] *** nnunley joined
[12:31] *** ruoso joined
[12:35] * ruoso finally read all the backlogs and understand that Perl 6 will have even more voodoo than Perl 5

[12:35] <lypanov> ruoso: but less of the real crap :)

[12:37] <arcady> but at least it will be new voodoo, there for reasons we mostly still understand

[12:39] <ruoso> :)

[12:41] <theorbtwo> ...at least you understand it if you've read all of #perl6's backlogs and all of perl6-language, and have TimToady handy to ask about the reasons that never left his head.

[12:42] <ruoso> theorbtwo+++ heh

[12:43] <lypanov> ;)

[12:49] * ruoso wonders if it makes sense that lrep someday emit parrot assembler...

[12:49] <arcady> so long as it doesn't emit actual parrots...

[12:50] * ruoso thinks lrep could be "ported" to parrot as soon as it is completely self-hosted and parrot has the needed features...

[12:51] <arcady> what exactly is lrep?

[12:52] <ruoso> arcady, lrep is lrep.p6 compiled to perl 5. that compiles lrep.p6 to lrep

[12:52] <ruoso> arcady, http://svn.openfoundry.org/pugs/misc/pX/Common/lrep-compiler/

[12:53] <ruoso> audreyt, do you think it makes sense?

[12:57] * Arathorn still doesn't understand why lrep-compiler doesn't use P::C::R for its engine

[12:57] <Arathorn> s/engine/runtime/

[12:57] <Arathorn> or is it just waiting to be updated?

[12:57] <ruoso> Arathorn, it will... fglock is preparing the migration

[12:57] <Arathorn> ah, right

[12:57] <ruoso> Arathorn, but if you want to step ahead, feel free :)

[12:58] <ruoso> I'm still working to self-host lrep

[12:58] <ruoso> as there's still much perl 5 code

[12:58] <arcady> the first job of any good compiler...

[12:59] <ruoso> arcady, yes...

[12:59] <ruoso> arcady, any help is welcome ;)

[12:59] <ruoso> arcady, it's just a matter of creating rules, emitter entries and porting code

[12:59] <arcady> I actually have a week or so of mostly free time

[13:00] <arcady> and I've been waiting years to be able to write perl 6 code...

[13:00] <ruoso> arcady, just take a look at lrep...

[13:00] <ruoso> arcady, and see if you understands...

[13:00] <ruoso> arcady, then just help

[13:00] <ruoso> :)

[13:04] * ruoso wonders why svn doesn't print the '?' lines when updating, so I can easily know which files are not in the repository

[13:05] <arcady> probably they consider it to be a feature

[13:05] <arcady> if you have a lot of .o files and such lying around

[13:05] <arcady> then the ? lines are just confusing

[13:06] <ruoso> arcady, that's what .cvsignore is for

[13:06] <arcady> this is true

[13:08] <jisom> perhaps it first queries the server for which files need to be updated between revisions, so it doesn't need to scan your local svn repo until it checks for conflicts

[13:10] <jisom> anyone know how to get sin(pi) to work?

[13:10] <svnbot6> r9628 | ingy++ |  r5733@bytes:  ingy | 2006-03-17 05:08:51 -0800

[13:10] <svnbot6> r9628 | ingy++ |  Change all '=over 4' to '=over'. Damian, I think we should remove the indent

[13:10] <svnbot6> r9628 | ingy++ |  number from the Perldoc model.

[13:10] <wolverian> ingy++ # agreed

[13:10] <ruoso> ingy++

[13:13] <svnbot6> r9629 | ruoso++ | Better explained TODO list

[13:13] <ruoso> arcady, take a look at the new TODO I made... it's a good starting point

[13:15] <arcady> I have a flight to catch in a few hours, I'll do this on the plane

[13:23] *** fglock joined
[13:23] <ruoso> fglock, hi

[13:24] <ruoso> fglock, I was waiting for you :)

[13:27] <fglock> ruoso: hi!

[13:28] <ruoso> fglock, how is everything... should we start the migration?

[13:29] <fglock> ruoso: you mean make lrep use PCR?

[13:30] <ruoso> fglock, yes

[13:33] <fglock> ruoso: PCR still have a few problems - a few syntax changes, untested features, unstable API...  - can you live with that? :)

[13:33] <ruoso> fglock, I'm in the point to need rules as methods and grammars as classes

[13:33] <ruoso> fglock, almost in the point

[13:34] <ruoso> actually

[13:34] <Arathorn> fglock: 'pologies again for screwing around with lineendings in misc/pX...

[13:34] *** bsb joined
[13:35] <fglock> Arathorn: np!

[13:35] <ruoso> fglock, I still need to make rule closures to be real perl 6 code and not filtered perl 5 code

[13:36] <fglock> ruoso: can you read PCR TODO and see what features you would need first?

[13:36] <fglock> ruoso: per5/PCR

[13:36] <ruoso> in px/Common?

[13:36] <fglock> perl5/PCR

[13:36] <ruoso> ok

[13:37] <fglock> px/Common/PCR is for testing new features - it is broken most of the time

[13:45] <ruoso> fglock, well... it seems there's no missing features...

[13:45] <ruoso> fglock, the things missing in PCR are missing in lrep too

[13:46] <ruoso> fglock, no big deal

[13:46] * theorbtwo is getting to be somewhat confused about lrep -- is it supposed to be usable?  The only thing I can get out of it is "Undefined subroutine &grammar1::immediate_statement_exec called at iterator_engine.pl line 184, <GEN0> chunk 1.

[13:46] <fglock> ruoso: px/Common/PCR fixes some architecture problems (OO, namespaces), but introduces new bugs which are hard to fix - so they will need to be re-implemented in perl5/PCR

[13:46] *** Limbic_Region joined
[13:47] <ruoso> theorbtwo, look at lrep-compiler subtree

[13:48] <ruoso> fglock, were are this bugs listed?

[13:50] <fglock> ruoso: just run the tests - right now, there is an error in the emitter (some commas are missing in the emitted code)

[13:50] <ruoso> fglock, ok

[13:51] <ruoso>  inc/Module/Install.pm... is there a reason to use some specific version:

[13:51] <ruoso> ?

[13:51] <fglock> ruoso: can you help with PCR? it has most of the OO infrastructure in place, a single engine (perl5/PCR needs two)

[13:51] <ruoso> fglock, I'll try...

[13:52] <fglock> ruoso: M::I is audreyt's new version, which creates .pmc files

[13:52] <ruoso> fglock, ah ok

[13:52] * ruoso has only Common/ checked out

[13:53] <fglock> ruoso: you will need a version of lrep specific for the OO engine - I'll commit it in a while

[13:54] <ruoso> fglock, ok...

[13:57] <ruoso> Failed 4/4 test scripts... ouch

[13:57] <ruoso> Checksum failed for outdated .pmc file

[13:57] <ruoso> oops

[13:57] * ruoso inside pX PCR

[13:59] <fglock> ruoso: it needs the updated lrep, in order to compile the grammar - I'm trying to commit it (the version I have was copied from the old directory, and contains invalid .svn info - I'm trying to fix it)

[13:59] <ruoso> Failed 3/4 test scripts... looks better now :)

[14:00] *** Qiang joined
[14:01] * ruoso doesn't know what do do...

[14:02] <fglock> ruoso: help with tar - how do I exclude .svn files? I tried --exclude=.svn

[14:03] <ruoso> --excluide=PATTERN

[14:04] <ruoso> it should work

[14:04] * fglock wonders what a PATTERN is like

[14:05] <ruoso> fglock, is it not excluding anything? or excluding something more?

[14:05] <fglock> ruoso: it is including the .svn dirs

[14:05] <ruoso> fglock, only them?

[14:06] <fglock> svn will not add the files until I clear up the old .svn info

[14:06] <ruoso> find . -type d -name '.svn' -exec rm -rf {} \;

[14:09] <fglock> ruoso: one sec - I'm moving the files to linux - it will be much easier :)

[14:09] <ruoso> tar czvf teste.tar.gz `find . | grep -v \.svn`

[14:11] *** robkinyon joined
[14:18] <fglock> ruoso: I'm testing my local version and then I'll commit

[14:18] * ruoso ansioso

[14:21] *** robkinyon left
[14:24] <fglock> ruoso: sorry - I'm doing a few merges

[14:24] <svnbot6> r9630 | fglock++ | pX/Common/Pugs-Compiler-Rule - updated grammar file

[14:26] <ruoso> looks worse now :)

[14:26] <svnbot6> r9631 | fglock++ | pX/../PCR - updated Grammar/Rule.pm

[14:27] <ruoso> looks better again :)

[14:28] *** justatheory joined
[14:29] <ruoso> fglock, is it everything? is there more coming?

[14:30] <fglock> ruoso: I'm trying to commit the new lrep, which compiles grammars to the new engine

[14:30] <ruoso> ok

[14:33] <fglock> ruoso: still trying...

[14:34] * ruoso zzzz

[14:34] <ruoso> :)

[14:34] <fglock> "svn: At least one property change failed; repository is unchanged" - it looks like another line-endings problem

[14:34] <ruoso> fglock, gah

[14:35] <ruoso> find . -type f -exec perl -pi -e 's/\r\l/\n/gs' {} \;

[14:36] <fglock> ruoso: thanks - now I'm waiting for svn to timeout :(

[14:36] <jisom> svn's atomic

[14:36] <jisom> can just ^C

[14:36] <jisom> it won't really commit until the full commit's made

[14:36] <jisom> at least that's part of the point of svn

[14:37] * ruoso still prefers CVS

[14:37] * jisom still prefers svn

[14:37] <fglock> jisom: I was waiting for it to accept ^C

[14:38] <jisom> oh, *that* timeout

[14:38] <ruoso> ^\ should solve

[14:38] <jisom> ^Z kill %1

[14:38] <jisom> sometimes that works better

[14:38] <jisom> for some reason

[14:39] <ruoso> jisom, ^C is kill INT, kill by default is kill TERM

[14:39] <jisom> eh, if it works, it works :)

[14:39] <fglock> done!

[14:39] <svnbot6> r9632 | fglock++ | lrep again

[14:40] <ruoso> hmmm... looks worse :)

[14:40] <fglock> ruoso: now you can see where I stopped :)

[14:41] <fglock> ruoso: it is missing commas after each "ruleop::concat(...)" - I'm trying to find out why

[14:41] * ruoso wonders why fglock took the old lrep instead of the new...

[14:42] <fglock> ruoso: I'm working on this for a week already - the new lrep wasn't around

[14:42] <ruoso> fglock, ah ok

[14:43] <fglock> ruoso: it may be best to just restart implementing OO with a fresh copy of PCR + lrep-compiler

[14:43] <ruoso> Can't locate Pugs/Runtime/Rule.pm

[14:43] <ruoso> weird

[14:44] <ruoso> fglock, could you summarize the changes?

[14:46] <fglock> ruoso: the main change is that rules are methods. but I did some other things at the same time, and this was a mistake

[14:47] * ruoso browsing the log

[14:48] <fglock> ruoso: like: there is a single engine, and a lot of redundant code was removed

[14:48] <ruoso> engine == ruleop::*, right?

[14:48] <fglock> ruoso: yes - it is now called Pugs::Runtime::Rule

[14:49] *** chris2 joined
[14:51] <ruoso> fglock, ok... comparing P::R::R with lrep-compiler R::P5::RuleOps there are small differences

[14:52] <ruoso> the diff has 65 lines

[14:53] *** rindolf joined
[14:53] <pasteling> "ruoso" at 201.29.209.125 pasted "ruleops diffs" (99 lines, 3.6K) at http://sial.org/pbot/16368

[14:54] <fglock> ruoso: the Makefile.PL error has "ruleop::concat(" - but I can't find where 'ruleop' is in the source code

[14:55] <ruoso> fglock, a lot of places

[14:55] <ruoso> lib/Pugs/Runtime/Rule.p6

[14:55] <ruoso> lib/Pugs/Grammar/Rule/Rule.pmc

[14:56] <ruoso> t/01-iterator_engine.t

[14:56] <ruoso> t6/iterator_engine.p6

[14:56] <rindolf> audreyt: here?

[14:57] <ingy> rindolf: she's there.

[14:57] <fglock> ruoso: I think the problem lies in PCR/lrep - there shouldn't be a 'ruleop' in PGR::Rule.pmc

[14:57] <ruoso> fglock, I think so

[14:58] <ruoso> fglock, what about looking for the differences between the new code and the code in lrep-compiler

[14:58] <ruoso> fglock, I didn't change the engine

[14:58] <fglock> ruoso: because it should generate code for the new engine, which is in the 'PRR' namespace

[14:59] <ruoso> we could incorporate the changes to lrep-compiler

[14:59] <ruoso> and then get it back to P::C::R

[14:59] <ruoso> and make lrep-compiler use P::C::R

[14:59] <fglock> ruoso: ok - give me a few minutes...

[15:01] <ruoso> fglock, where is the code that used to be in p6rule_lib?

[15:02] <fglock> ruoso: lib/Pugs/Grammar/Rule.pm - it is much smaller, as things were moved into the grammar

[15:02] *** diotalevi joined
[15:04] <ruoso> fglock, no... that was p6rule.pm

[15:04] <ruoso> fglock, i mean p6rule_lib.pm

[15:05] * ruoso is lost

[15:06] <fglock> ruoso: p6rule_lib.pm is now merged into lib/Pugs/Grammar/Rule/Rule.pm, which is the Grammar file

[15:06] <ruoso> fglock, ok

[15:09] * ruoso needs to think better... maybe the grammar refactoring is needed now

[15:09] <svnbot6> r9633 | ingy++ |  r5735@bytes:  ingy | 2006-03-17 07:06:39 -0800

[15:09] <svnbot6> r9633 | ingy++ |  lowercase the `=doc <dialect>` dialects

[15:10] * ruoso almost understanding...

[15:10] <ruoso> ok....

[15:11] <ruoso> first: Some grammars that are in lrep/Grammar::Perl6Init.pm were moved to the standard Grammar::Perl6

[15:11] <ruoso> s/grammars/rules/

[15:14] <fglock> ruoso: re emitter changes: all rules need a '$grammar=shift;' and calls to subrules are now 'sub{$grammar->subrule(@_)}'

[15:14] <fglock> ruoso: the return-block processing is done by 'rule_wrapper()'

[15:18] <fglock> ruoso: I'll commit my local Rule.pmc, as the Grammar compiler is not working...

[15:19] * ruoso importing the implemented rules to Grammar::Perl6.p6

[15:19] <svnbot6> r9634 | fglock++ | pX/.../PCR/.../Rule.pmc - precompiled version

[15:19] <fglock> ruoso: this is what the new lrep would compile the Grammar into

[15:20] *** GabrielVieira joined
[15:20] <svnbot6> r9635 | ingy++ |  r5742@bytes:  ingy | 2006-03-17 07:19:38 -0800

[15:20] <svnbot6> r9635 | ingy++ |  Question for TheDamian regarding `=pod` and `=kwid`. Yagni.

[15:21] <ruoso> fglock, I got a syntax error after importing the rules you implemented...

[15:21] <ruoso> fglock, I will investigate

[15:23] <ruoso> fglock, some ',' missing

[15:23] <ruoso> fglock, in alternate ruleop

[15:23] <fglock> ruoso: I'll have lunch

[15:23] * ruoso in lrep-compiler

[15:23] * ruoso too

[15:24] <fglock> ruoso: back in ~40min

[15:24] <ruoso> fglock, BTW... I'll try to incorporate the changes to lrep-compiler... and then we get it back to P::C::R and makes lrep-compiler uses it

[15:24] <fglock> ruoso: ok!

[15:24] <fglock> &

[15:26] <ruoso> fglock, I think I got an infinite loop

[15:29] *** nothingmuch joined
[15:29] *** _cnhackT_ joined
[15:32] *** _cnhackT_ is now known as cnhackTNT

[15:32] *** Alias_ joined
[15:32] <Alias_> Any .il people awake?

[15:33] <ruoso> fglock, the new rules dispatch an infinite loop

[15:33] <ruoso> fglock, I'll leave them commented in Grammar::Perl6.p6

[15:33] <ruoso> if someone want something to do, please take a look at the commented rules in Grammar::Perl6.p6 in lrep-compiler

[15:34] *** merlyn joined
[15:34] <ruoso> hi merlyn

[15:34] *** pmichaud joined
[15:34] <merlyn> hey ruoso

[15:34] <ruoso> merlyn, want some fun?

[15:35] <merlyn> in what sense? :)

[15:35] <nothingmuch> Alias_: i'm awake

[15:35] <ruoso> merlyn, debugging :)

[15:35] <merlyn> Oh.  I generally don't consider that "fun".

[15:36] <Alias_> nothingmuch: I need an English translation for some hebrew words I got for which there is no German translation

[15:36] <merlyn> I'm here because I need to get smarter about eprl6.

[15:36] <merlyn> and even perl6. :)

[15:36] <Alias_> nothingmuch: (which I got from a german)

[15:36] <Alias_> :

[15:36] <nothingmuch> ruoso is appearantly a masochist =)

[15:36] <nothingmuch> Alias_: okies =)

[15:36] <Alias_> chokmah, binah

[15:36] <ruoso> nothingmuch, :)

[15:36] <Alias_> something kaballa related perhaps?

[15:36] <Alias_> maybe chockmah

[15:36] <nothingmuch> chokmah == חוכמה == smartness (distinct from wisdom)

[15:36] <merlyn> But at the moment, I need to drive from the hotel to $worksite... be back later

[15:37] <nothingmuch> more like chochmah

[15:37] *** fglock joined
[15:37] <nothingmuch> or hohma

[15:37] <Alias_> ok

[15:37] *** kanru is now known as chchihun

[15:37] <Alias_> nothingmuch: So intelligence then?

[15:37] *** chchihun is now known as kanru

[15:37] <nothingmuch> binah = knowlege, but more elemtary... maybe intelligence

[15:37] <nothingmuch> בינה

[15:37] <theorbtwo> Intersting, I could have sworn chokmah was one of the names of the sepheroph (nodes on the tree of life), generally translated as "wisdom".

[15:37] <nothingmuch> שן בינה is

[15:37] <nothingmuch> the name for wisdom tooth

[15:38] <nothingmuch> so i'm not 100% sure on binah

[15:38] <nothingmuch> but it's closer to intelligence than chochmah is

[15:38] <nothingmuch> chacham is "smart"

[15:38] <Alias_> So basically they are very subtle specific forms of "smartness" in general

[15:38] <nothingmuch> chochma is the adjective

[15:39] *** cdpruden joined
[15:41] <svnbot6> r9636 | ruoso++ | There is an infinite loop dispatched by the rules commented in Grammar::Perl6.p6 in lrep-compiler... The current p5 implementation of the rules does not dispatch this loop

[15:42] * ruoso needs help with that problem

[15:43] * ruoso needs to lunch... and have a meeting this afternoon... so... no more lrep work for today... :(...

[15:44] <Alias_> nothingmuch: So would one of those two be close to what IQ measures?

[15:44] <Alias_> nothingmuch: I gather it's basically IQ versus experience/wisdom, but more subtle than both those terms

[15:44] <nothingmuch> Alias_: no

[15:44] <nothingmuch> they are more intagiable, i think

[15:44] <Alias_> darn

[15:45] <nothingmuch> do you need such a word?

[15:45] <nothingmuch> well, actually

[15:45] <nothingmuch> hmm

[15:45] <Alias_> Well, the author of the editor I'm basing my refactoring Perl thing on needs a new name

[15:45] <nothingmuch> Gaon is "genius" but it's either IQish or a theological genius

[15:45] <Alias_> Because the original name is taken

[15:45] <Alias_> And he's very religious, although the specific one has changed a few times

[15:45] <Alias_> And he's stuck(ish) for a name

[15:46] <Alias_> ooo, I like Gaon though

[15:46] <nothingmuch> it's Ga'on, as in too distinct syllables

[15:46] <Alias_> ok

[15:46] <nothingmuch> i can dish out a few more

[15:46] <nothingmuch> even without a thesuarus

[15:46] <nothingmuch> let me think

[15:46] <Alias_> :)

[15:47] <nothingmuch> hmm

[15:47] <nothingmuch> i'm stuck

[15:47] <Alias_> ok :)

[15:47] <nothingmuch> =)

[15:47] <Alias_> never mind

[15:47] <nothingmuch> wait wait

[15:47] *** eric256_ joined
[15:47] <Alias_> heh

[15:48] * Alias_ waits as nothingmuch runs for the hebrew thesaurus

[15:48] <nothingmuch> i don't have one

[15:48] <nothingmuch> not even an english one

[15:48] <nothingmuch> except for a crappy pocket version of MW

[15:48] <Juerd> There are too many vowels in thesaurus to be hebrew :)

[15:48] <nothingmuch> that's about as thick as my pinky

[15:49] <Juerd> Exactly how thick is your pinky?

[15:49] * eric256_ wonders how much of a new POD parser exists and where he might find it. hmmmm

[15:49] <nothingmuch> pretty thin

[15:49] * nothingmuch has small hands

[15:50] <Juerd> Do you have a small keyboard and a small mouse too?

[15:55] * particle_ hurls http://www2.multithread.co.uk/images/tiny_usb_keyboard_large.jpg at nothingmuch

[15:57] *** nothingmuch joined
[15:57] <Alias_> nothingmuch: can't prv message. Yes, I do a little

[15:58] <nothingmuch> Alias_: i'll spam you then

[15:58] <Alias_> ok

[15:58] <nothingmuch> Alias_: cpan.org addy?

[15:59] <Alias_> adamk

[16:00] <Juerd> particle_: It's incomplete. Sholud be tiny_usb_keyboard_large_cable ;)

[16:00] <particle_> :)

[16:00] <Juerd> But whoa, that's really tiny.

[16:01] <Juerd> Is it water proof? If so, I want it for my shower radio project ;)

[16:02] <particle_> Love your CrackBerry(tm) keyboard? Rejoice! Now you can get one for your laptop, too!

[16:09] <pasteling> "rindolf" at 88.153.140.201 pasted "graham.p6 - latest version - can anyone advise how to make it more perl6ixy?" (246 lines, 7.3K) at http://sial.org/pbot/16372

[16:10] <rindolf> nothingmuch: can you read http://sial.org/pbot/16372 and give some advice?

[16:10] <Juerd> rindolf: Can you send private messages on freenode/

[16:10] <Juerd> ?

[16:11] <rindolf> Juerd: I can, yes.

[16:11] <nnunley> Juerd: Only if you've registered your nick.

[16:11] <Juerd> nnunley: That was the implied question :)

[16:12] * nnunley grins.

[16:12] <nnunley> Brains.  I'm going home. ;)

[16:18] <svnbot6> r9637 | ingy++ |  r5747@bytes:  ingy | 2006-03-17 08:16:36 -0800

[16:18] <svnbot6> r9637 | ingy++ |  Note to Damian about =for

[16:20] <Juerd> Hmmm

[16:20] <Juerd> svn as a messaging system :)

[16:20] <ingy> Juerd++

[16:21] <ingy> to bad Damian doesn't do irc

[16:21] <Juerd> Yea

[16:21] <ingy> s/to/two/

[16:21] <Juerd> Though perhaps PBP is a bit too recent for it to be safe ;)

[16:21] <particle_> s/two/too/

[16:21] <ingy> s/too/2/

[16:21] <obra> I hear ingy and damian are planning on a high-bandwidth hacking session soon

[16:21] <ingy> s/2/II/

[16:22] <ingy> obra: correct

[16:22] <obra> woot

[16:22] <Juerd> Don't hack my high bandwidth

[16:22] <obra> <- unsure if he gets to go to japan

[16:22] <ingy> obra: really? what up?

[16:22] <obra> family stuff

[16:22] <Juerd> ingy: In ASCII, do you prefer "doet Net" or "dot Net"?

[16:23] <ingy> heh

[16:23] <ingy> dot Net

[16:23] <Juerd> ok :)

[16:23] <ingy> I don't just prefer it I use it

[16:23] <Juerd> The latter is less important :)

[16:24] <Juerd> I constantly use a name I don't like.

[16:28] <ingy> obra: freenode is not letting me identify (thus msg you)

[16:29] <obra>   urgh

[16:29] <ingy> obra: msged for magnet

[16:29] <ingy> I think

[16:32] <fglock> ruoso: the new PCR is very small - there should be only a few bugs left, if any - I guess I'll just finish the grammar by hand, and fix the grammar compiler later (the grammar compiler can then be rewritten using the working PCR)

[16:33] <fglock> &

[16:44] <merlyn> Chuck Norris Perl6 joke:  Chuck Norris can *have* the colon.

[16:52] *** arcady joined
[16:54] <svnbot6> r9638 | ingy++ |  r5749@bytes:  ingy | 2006-03-17 08:54:03 -0800

[16:54] <svnbot6> r9638 | ingy++ |  Beg Damian to make utf8 the one true encoding in Perldoc.

[16:54] <rindolf> merlyn: I don't get it.

[16:55] <merlyn> first, are you familiar with www.chucknorrisfacts.com ?

[16:55] <merlyn> it's an internet meme

[16:55] <rindolf> merlyn: no, I'm afraid not.

[16:55] <merlyn> then you wouldn't get it.

[16:55] <eric256_> hey ingy....will items be heirerchial (god i can't spell that word) in Perldoc?

[16:55] *** eric256_ is now known as eric256

[16:57] *** estel joined
[17:02] *** nnunley joined
[17:05] <ingy> eric256: you mean can you nest?

[17:05] <ingy> the answer is yes

[17:05] <ingy> or maybe you meant something else

[17:05] <eric256> yea. i guess.  i want to be able to store data inside it. like for the builtin functino documentation we would want to be able to store information about the caller type, and first argument type for SMD and MMD index pages.

[17:06] <ingy> ok, well let's not overload the fuck out of perldoc

[17:07] <eric256> the point is i don't think that is

[17:07] <eric256> =first_arg: String

[17:07] <eric256> thats already syntax you support, i just wanted to see if when its parsed if it well nest properly

[17:08] <eric256> then it would be easy to make a script that parses the builtin function page and produces two index pages sorted by what they want on each page.

[17:12] *** ruoso joined
[17:14] *** vel joined
[17:14] *** DesreveR joined
[17:17] *** bernhard joined
[17:17] * eric256 looks around.... lol

[17:17] <eric256> anyway ingy  making sure the features it already has can be used for things you havn't forseen isn't overloading the crap out of it...its just being creative

[17:18] <eric256> besides the ability to add attributes to an item would certain be usefull for documentation. because it would be nice to store information like ownership, date added, api supported, whatever to Perldoc in a way that can be accessed and usefull to scripts/editors/etc. ;)

[17:18] <eric256> time to go play outside. later

[17:19] *** eric256 left
[17:19] <sahadev> ?eval_bot my %h = (a => 1, b => 2, c => 3); say "%h.keys.reverse()"

[17:20] <sahadev> ?eval my %h = (a => 1, b => 2, c => 3); say "%h.keys.reverse()"

[17:20] <svnbot6> r9639 | ruoso++ | bootstrap target now really reacompiles everything it can

[17:24] <nothingmuch> møøsage

[17:24] <rindolf> nothingmuch: yø!

[17:25] <nothingmuch> yo mc parsec yo

[17:25] <nothingmuch> wrappin to you mama like a

[17:25] <nothingmuch> one sc

[17:25] <nothingmuch> sec

[17:25] * nothingmuch opens pugs/misc/rap.txt

[17:30] *** SamB joined
[17:53] <svnbot6> r9640 | ruoso++ | bootstrap target now checks is lrep can compile itself and result in the same thing

[17:54] <rindolf> nothingmuch: here?

[17:54] <nothingmuch> rindolf: slightly

[17:55] <rindolf> nothingmuch: can you look at http://sial.org/pbot/16372 and find ways to improve it?

[17:55] <nothingmuch> rindolf: use type annotations for clarification

[17:56] <nothingmuch> don't use references when you don't need to

[17:56] <nothingmuch> @4

[17:56] <nothingmuch> @$n etc:

[17:56] <nothingmuch> sub multiply_squaring_factors( @n, @m )

[17:57] <nothingmuch> instead of using my %gsf_cache use 'state %gsf_cache' inside get_squaring_factors

[17:57] <nothingmuch> it's like 'static' in C

[17:57] <nothingmuch> use type annotations for documentations

[17:57] <nothingmuch> e.g. sub Graham( Int $n ) if it's an int, or Num $n if it's any number

[17:57] <nothingmuch> that usually helps to understand the algorithm

[17:58] <nothingmuch> you can use 'where { }' subtyping for more constraints

[17:58] *** pdcawley_ joined
[17:59] <nothingmuch> rindolf: again, wrt array references: $n_sq_factors = ...;

[17:59] <nothingmuch> it's a collection of items

[17:59] <nothingmuch> so my @n_sq_factors makes more sense

[17:59] *** stennie joined
[18:00] <nothingmuch> while(1) is spelled loop { } now

[18:00] <nothingmuch>      if ($low_square_val != $high_square_val)

[18:00] <nothingmuch>         {

[18:00] <nothingmuch>             return ($lower_bound, [$n, ($low_square_val+1)*($low_square_val+1)*$rest_of_factors_product,$lower_bound]);

[18:00] <nothingmuch>         }

[18:00] <nothingmuch> that's just scary =)

[18:00] <nothingmuch> use more temporary variables

[18:00] <nothingmuch> to help readability

[18:01] <nothingmuch> if ....

[18:01] <nothingmuch> {

[18:01] *** DesreveR is now known as r0nny

[18:01] <nothingmuch>     last;

[18:01] <nothingmuch> }

[18:01] <nothingmuch> use 'last if  .. ;'

[18:01] <nothingmuch> it looks like your code might want to use hyper operators

[18:01] <nothingmuch> e.g. reduce

[18:01] <nothingmuch> for @$n_times_lb -> $i

[18:01] <nothingmuch>         {

[18:01] <nothingmuch>             $rest_of_factors_product *= $i;

[18:01] <nothingmuch>         }

[18:01] <nothingmuch> $rest_of_factors_product = [*] @n_times_lb;

[18:02] <nothingmuch> loop($i=$n+1;;$i++)

[18:02] <nothingmuch> screaming for whitespace

[18:02] <nothingmuch> use 'say

[18:02] <nothingmuch> '

[18:02] <nothingmuch> instead of print

[18:03] <nothingmuch> hard coded "\n"s are not fun =)

[18:03] <nothingmuch> and say is shorter

[18:03] <nothingmuch> print "G($n) = " ~ $g_val ~ " [" ~ join(",", @$composition) ~ "]\n"

[18:04] <nothingmuch> say "G($n) =  $g_val  [ {join(",", @$composition)} "]"

[18:04] <nothingmuch> while ( $n_vec.elems() ) {

[18:04] * ruoso wonders if there is a rule modifier that turns "trace" on

[18:04] <nothingmuch> if it were an array not an array ref then '+@n_vec'

[18:04] <nothingmuch> i'm not sure if that works well for arrays

[18:05] <nothingmuch> or just 'while ( @n_vec ) {'

[18:05] <nothingmuch> rindolf: done

[18:06] <rindolf> nothingmuch: OK.

[18:15] *** nothingmuch joined
[18:18] <svnbot6> r9641 | ruoso++ | nailing down the new rules bug... the bug is in "quantifier" or "alt" rule

[18:18] <nothingmuch> rindolf: ping

[18:19] <rindolf> nothingmuch: pong

[18:19] <nothingmuch> rindolf: did you see my comments?

[18:19] <rindolf> nothingmuch: yes, I did.

[18:19] <nothingmuch> okies

[18:19] <nothingmuch> have fun

[18:19] *** utku joined
[18:19] <rindolf> nothingmuch: OK.

[18:20] * ruoso have to work... bye

[18:21] <nothingmuch> also

[18:21] <nothingmuch> style comment

[18:21] <nothingmuch> for $start..$end -> $n

[18:21] <nothingmuch> {

[18:21] <nothingmuch> that reads very clumsily to me

[18:22] <nothingmuch> if you put the brace on the same line as the for it looks better IMHO

[18:22] *** hexmode joined
[18:22] <nothingmuch> for start to end as in in here

[18:22] <nothingmuch> that's how i read the brace on the same line

[18:22] <nothingmuch> for start to end as n

[18:22] <nothingmuch> now this

[18:22] <nothingmuch> that's how I read the brace on the same line

[18:22] <nothingmuch> i think larry's style preference kind of optimized Perl 6 into something that looks better using his style =)

[19:13] *** Arathorn is now known as Aragone

[19:14] *** FurnaceBoy joined
[19:30] *** Quell joined
[19:48] *** DHGE joined
[19:55] <gaal> Alias_: I wouldn't insist on a direct gloss, since these concepts don't necessarily have one, unless this is indeed in the context of kabbala specifically, in which case there are probably several standard glosses to choose from. :)

[20:31] *** nothingmuch joined
[20:32] *** fglock joined
[20:33] *** elmex joined
[20:34] *** nothingmuch joined
[20:34] *** ruz joined
[20:52] <fglock> ruoso: I found the 'missing comma' bug - it was in file 'p5hacks.pl' (fixed)

[20:55] *** penk joined
[21:19] *** meppl joined
[21:23] <GabrielVieira> hello ther

[21:23] <GabrielVieira> hello there

[21:25] <GabrielVieira> fglock which is your OS?

[21:27] <merlyn> hey fglock

[21:29] <GabrielVieira> merlyn hey.. can i talk private?

[21:29] <merlyn> to yourself?  Sure. :)

[21:29] <merlyn> you mean with me? :)

[21:30] <GabrielVieira> u know what i mean

[21:30] <GabrielVieira> :P

[21:30] <GabrielVieira> that about yapc brasil

[21:30] <GabrielVieira> :)

[21:30] <GabrielVieira> *thats

[21:33] *** penk left
[21:34] *** Quell joined
[21:36] *** Quell joined
[21:38] <fglock> GabrielVieira: sorry, I was in a meeting - need to go back (I use Ubuntu, debian, windows XP)

[21:39] <GabrielVieira> hum

[21:39] <GabrielVieira> ill ask u somethings later

[21:39] <GabrielVieira> :)

[21:39] <GabrielVieira> i need to go now

[21:39] *** whiteg joined
[21:39] <GabrielVieira> meet the wife.. u know

[21:39] <GabrielVieira> hehe

[21:39] <GabrielVieira> night all

[21:39] <GabrielVieira> ;)

[21:41] *** larsen joined
[21:47] <merlyn> hey fglock

[21:49] *** ilogger2 joined
[21:55] *** sysfault joined
[21:55] *** sysfault left
[22:06] *** Lorn__ joined
[22:20] *** samv_home joined
[22:21] *** samv_home left
[22:37] <fglock> merlyn: ping

[22:40] <svnbot6> r9642 | fglock++ | pX/.../PCR - grammar compiler is fixed

[22:44] *** jisom joined
[22:53] *** FurnaceBoy_ joined
[22:57] *** |mjk| joined
[22:59] *** Kattana joined
[22:59] *** hlen joined
[23:04] *** qu1j0t3 joined
[23:04] <svnbot6> r9643 | fglock++ | pX/.../PCR - fixed OO; AST/emitter still broken

[23:04] <fglock> audreyt: re pX/.../PCR - currying all rule method calls with the grammar works, but it "smells" wrong

[23:05] <fglock> &

[23:08] *** hlen_ joined
[23:35] *** pdcawley joined
