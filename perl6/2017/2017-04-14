[00:00] <timotimo> the code was trying to be careful here, but didn't have in mind one important thing

[00:00] <timotimo> vsnprintf will only write up to n bytes, and it returns how many bytes it has written ... except!

[00:01] <timotimo> except when it *would have* written more than n bytes

[00:01] <timotimo> in which case it returns *that* number, i.e. a number bigger than n

[00:03] *** bjz left
[00:05] *** Cabanossi left
[00:08] *** Cabanossi joined
[00:24] <timotimo> bedtime! o/

[00:25] *** isBEKaml joined
[00:32] <sammers> m: Str.^add_method('こんにちは', method () {"{self}ちゃん、こんにちは。"}); "Camelia".こんにちは.say;

[00:32] <camelia> rakudo-moar fbc669: OUTPUT: «Cameliaちゃん、こんにちは。␤»

[00:33] <sammers> so this will work: "Camelia"\n.こんにちは\n.say 

[00:34] <sammers> even with non alpha method names

[00:35] <AlexDaniel> sammers: https://docs.perl6.org/language/unicode_texas#Alphabetic_Characters

[00:35] <AlexDaniel> say ‘こんにちは’.uniprops

[00:35] <evalable6> AlexDaniel, rakudo-moar fbc6697da: OUTPUT: «(Lo Lo Lo Lo Lo)»

[00:36] <sammers> ah

[00:36] <sammers> ok, that is cool

[00:53] *** gdonald left
[00:53] *** bjz joined
[00:53] *** gdonald joined
[01:03] *** bjz left
[01:05] *** tomboy64 joined
[01:05] *** Cabanossi left
[01:06] *** azawawi joined
[01:07] <azawawi> hi #perl6 :)

[01:07] <sammers> ola

[01:08] *** Cabanossi joined
[01:08] *** isBEKaml left
[01:09] <azawawi> :)

[01:10] * azawawi begins removing the dust off his old perl 6 modules

[01:26] *** bjz joined
[01:33] *** cyphase left
[01:37] *** Cabanossi left
[01:38] *** Cabanossi joined
[01:39] *** AlexDaniel left
[01:39] *** cyphase joined
[01:46] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[02:05] *** Cabanossi left
[02:08] *** Cabanossi joined
[02:21] *** noganex joined
[02:22] <labster> m: say Ⅹ×ⅩxⅩ

[02:22] <camelia> rakudo-moar fbc669: OUTPUT: «100100100100100100100100100100␤»

[02:24] *** noganex_ left
[02:28] *** TimToady left
[02:30] *** TimToady joined
[02:34] *** cpage___ joined
[02:34] *** cpage_ left
[02:34] *** cpage___ is now known as cpage_

[02:37] *** bjz left
[02:45] *** ChoHag left
[02:47] *** BenGoldberg joined
[02:50] <TEttinger> labster: wat

[02:50] <TEttinger> m: say Ⅹ

[02:50] <camelia> rakudo-moar fbc669: OUTPUT: «10␤»

[02:51] <TEttinger> m: say x

[02:51] <camelia> rakudo-moar fbc669: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    x used at line 1␤␤»

[02:51] <TEttinger> so confused

[02:57] <geraud> TEttinger: just guessing, but X (roman numeral) is changed to 10. And depending on the font you use, there are 2 kinds of 'x', the first one looks weird so I would assume it's some unicode character for multiplication, and the second one is for string duplication.

[02:58] <TEttinger> oh, it's duplicating "100" ten times

[02:59] <geekosaur> 3 roman-numeral-Ⅹ-s, one multiplication symbol ×, one string replication ordinary x)

[03:00] <geekosaur> where'd that ) come from...

[03:06] *** BenGoldberg left
[03:10] *** tyil left
[03:11] *** tyil joined
[03:15] *** bjz joined
[03:18] *** BenGoldberg joined
[03:19] *** Ben_Goldberg joined
[03:19] *** BenGoldberg left
[03:19] *** Ben_Goldberg is now known as BenGoldberg

[03:33] *** nimajneb joined
[03:33] <nimajneb> How would I play sounds through its frequency in hz

[03:34] <nimajneb> w/ perl6 or anything that I can program

[03:34] *** Cabanossi left
[03:35] <sammers> nimajneb, have to taken a look at any of these? http://modules.perl6.org/t/AUDIO

[03:36] <nimajneb> Yeah, but do any of those allow for outputting via frequency

[03:36] <nimajneb> Not sure about how I would accomplish that

[03:37] *** Cabanossi joined
[03:37] <nimajneb> I'd be fine with using the portaudio module

[03:37] <nimajneb> still not sure about how I would accomplish this though

[03:43] <BenGoldberg> Any sound player is going to require, not a frequency, but some data in a valid sound format.  So, your first step is to say, "How do I create a sound file whose content is nothing more than a tone at X frequency and Y volume for Z duration."

[03:43] <BenGoldberg> Then, only after you've created the data, do you worry about playing it.

[03:49] <nimajneb> Is somehow generating .wmv files fairly simple?

[03:49] <nimajneb> would .au be simpler?

[03:54] <BenGoldberg> Honestly, I'm not sure.

[04:16] <azawawi> http://pasteboard.co/4359L3M3R.png # Hello world using ncurses color https://github.com/azawawi/perl6-ncurses/blob/master/examples/03-colors.pl6 :)

[04:21] *** zapwai left
[04:35] *** skids left
[04:37] *** nimajneb left
[04:39] *** dj_goku left
[04:40] <azawawi> http://pasteboard.co/43xgAJ0hR.png # Move windows using NCurses https://github.com/azawawi/perl6-ncurses/blob/master/examples/04-move-windows.pl6 :)

[04:46] *** dj_goku joined
[04:50] *** Cabanossi left
[04:52] *** Cabanossi joined
[04:52] <sammers> azawawi, I have a sudden urge to play solitaire

[04:53] <TimToady> I'm afraid you'll have to play it by yourself...

[04:54] <sammers> ha

[04:54] <azawawi> :)

[04:54] <samcv> ah. i think i have a pdf not in unicode maybe. cause i copy the letters. and. it copies something different

[04:54] <samcv> or maybe something else weird idk

[04:54] <samcv> oh. unless... they're using a non unicode font

[04:59] <samcv> latin letters are normal but the special characters here all copy as different other characters

[05:00] <sammers> is there any way to utilize hyper operators / similar when using ==> ?

[05:02] <samcv> i think they must be using some non-unicode font because some things copy as multiple characters, so it's like they used ligature hacks with this font

[05:11] *** Sgeo_ joined
[05:13] <samcv> not sure sammers 

[05:13] *** Sgeo left
[05:16] *** wamba joined
[05:17] *** BenGoldberg left
[05:22] *** stmuk_ joined
[05:22] *** azawawi left
[05:22] *** stmuk left
[05:32] *** domidumont joined
[05:33] <moritz> feed operators are meant to provide some level of parallelity, they just don't yet

[05:34] <moritz> the idea is that they are like pipes, running separate threads for each block that's connected by feeds/pipes

[05:36] <sammers> moritz, is the idea that the parallelity will auto-apply when applicable or will there be a way to influence the behavior?

[05:37] <sammers> like, ==> should imply >>. whenever it is possible?

[05:37] <moritz> sammers: I don't know yet

[05:37] <sammers> ok, just curious

[05:38] *** domidumont left
[05:41] *** domidumont joined
[05:43] *** domidumont left
[05:50] *** Cabanossi left
[05:52] *** Cabanossi joined
[05:55] *** RabidGravy joined
[05:58] *** domidumont joined
[06:20] *** Cabanossi left
[06:22] *** Cabanossi joined
[06:32] *** darutoko joined
[06:56] *** labster left
[07:02] *** [particle]1 left
[07:03] *** [particle] joined
[07:03] *** ChoHag joined
[07:05] *** labster joined
[07:06] <samcv> perl 6 is a very ____ project. i'm trying to think of the word i'm looking for. which means optimistic, and an effort which has high breadth and larger than normal scope

[07:07] <samcv> but my mind is not thinking of the word. can anybody help

[07:07] <labster> ambitious?  grippy?

[07:07] <samcv> ambitous

[07:08] * labster is just pulling words from the opening of the Colbert Report.

[07:09] <samcv> thank you

[07:10] <samcv> i hate when i know exactly the word i mean but i can't think of it

[07:11] *** rindolf joined
[07:12] *** mr-foobar left
[07:12] *** mr-foobar joined
[07:13] <labster> As a creative writer, I feel this pain.

[07:14] <samcv> feels like your brain is broken

[07:14] *** TreyHarris left
[07:14] <samcv> *why* won't it thinkkkk of the word i already know i know!

[07:14] *** tomboy64 left
[07:19] <RabidGravy> I have that problem with whole concepts and categories of ideas

[07:20] <samcv> please tell me how to fix this

[07:21] *** Cabanossi left
[07:22] <RabidGravy> I usually trick my brain by thinking about something completely different

[07:22] *** Cabanossi joined
[07:22] <samcv> need an industrial strength therarus of words

[07:22] <samcv> a word web or something

[07:23] <samcv> with deep learning we can find words that are created when you add two words together. it's very interesting

[07:25] <samcv> also

[07:25] <samcv> m: "ā".NFD.say

[07:25] <camelia> rakudo-moar fbc669: OUTPUT: «NFD:0x<0061 0304>␤»

[07:25] <samcv> when is this gonna be a thing

[07:25] <samcv> 0x<0061 0304> to make an array of hex digits or something

[07:26] <samcv> that would be neat

[07:29] *** abraxxa joined
[07:34] *** abraxxa left
[07:35] *** astj_ joined
[07:36] *** astj left
[07:46] <moritz> m: say Blob[uint16].new: <0061 0304>

[07:46] <camelia> rakudo-moar fbc669: OUTPUT: «Blob[uint16]:0x<3d 130>␤»

[07:47] <TEttinger> samcv: perl 6 is a ____ project <-- quixotic, grandiose, over-achieving, moon shot of a, mind-blowing, unicodatious

[07:47] <TEttinger> napoleonic

[07:47] <samcv> well. they did go to the moon ;) so we have a chance

[07:48] <TEttinger> and napoleon did conquer most of europe

[07:48] <TEttinger> and don quixote did joust windmills

[07:48] <samcv> yes

[07:49] <TEttinger> and I liek vocabularistery

[07:49] <samcv> that's not a work but ok :-)

[07:49] <TEttinger> neither is :-) and neither is the american flag emoji

[07:50] <TEttinger> but you can't deny that they have meanings!

[07:50] <samcv> they do have meanings

[07:50] <TEttinger> I wonder when you can start assigning unicode gender identifiers to flags

[07:50] <samcv> what...

[07:50] <samcv> i mean

[07:50] <TEttinger> female north korea

[07:50] <samcv> unlikely

[07:51] <geekosaur> expansive, audacious

[07:51] <TEttinger> the audacity of wat

[07:52] <TEttinger> (the main practical use of gendered flags would be representations of officials from that country, using the gendered modifier and the flag modifier on a person emoji)

[07:52] <TEttinger> such as female + germany + leader for merkl

[07:52] <TEttinger> or however it's spelled

[07:52] <samcv> that's very specific

[07:52] <TEttinger> unicode is very specific

[07:53] <samcv> i don't think that is used in practice though.

[07:53] <samcv> there is not a huge desire for this to be implemented

[07:53] <TEttinger> that could be said for many parts of unicode!

[07:53] <samcv> like which

[07:54] *** abraxxa joined
[07:54] <TEttinger> the counterexample is actual stuff that needs special PUA stuff to work and is non-standard because of Unicode consortium decisions, like klingon having books written in it that cannot be transcribed to unicode

[07:55] <TEttinger> similarly with tengwar, an elven script from LotR

[07:55] <samcv> oh i thought you were going to argue the oppostie that there's things in unicode that have no purpose

[07:55] <TEttinger> oh there totally are

[07:55] <samcv> well.

[07:55] <samcv> maybe when they have put in all the languages they can add klingon

[07:56] <TEttinger> the phaistos disk they don't know if it's a language or not, same with linear a and b

[07:56] <samcv> there are argubly more books written in ancient languages than klingon

[07:56] <TEttinger> there are no books written in linear b

[07:56] <samcv> idk what that is

[07:57] <TEttinger> it's a unicode block

[07:57] <samcv> i don't think it's an ancient language though

[07:57] <TEttinger> it's an ancient <unclear if language or symbolic system>

[07:57] <samcv> not true

[07:57] <samcv> idk.

[07:57] <samcv> https://en.wikipedia.org/wiki/Linear_B_Syllabary

[07:57] <TEttinger> hm?

[07:57] <samcv> there are things in it

[07:57] <samcv> there are more books in ancient languages than klingon though. probably i don't have any statistisc though

[07:58] <TEttinger> then fine https://en.wikipedia.org/wiki/Phaistos_Disc_(Unicode_block)

[07:58] <TEttinger> this is one that is and may forever be undeciphered

[07:58] <samcv> lol wat

[07:58] <TEttinger> they have no idea what it means, it's in unicode

[07:58] * samcv reads the proposal to add it

[07:58] <huf> that's just those animal shaped crackers

[07:59] <TEttinger> yes, we need animal crackers in unicode

[07:59] <samcv> The fundamental issue, of course, is should this be encoded at all? There is exactly one extant

[07:59] <samcv> document in this script, and a short one at that. That could change at any minute, but given the

[07:59] <samcv> failure of any other document written with this script to surface in nearly a century, it doesn't seem

[07:59] <samcv> likely.

[07:59] *** astj_ left
[07:59] <huf> i still think we need quake3 in unicode

[07:59] <samcv> :|

[08:00] <TEttinger> yep

[08:00] *** astj joined
[08:00] <samcv> m: "𐇐".uniname.say

[08:00] <camelia> rakudo-moar fbc669: OUTPUT: «PHAISTOS DISC SIGN PEDESTRIAN␤»

[08:00] <samcv> glad i have a font with these characters in it

[08:00] <samcv> otherwise how could i live with my life

[08:01] *** baest left
[08:01] <huf> but seriously why not add whatever to unicode? we're not going to run out of numbers...

[08:01] <samcv> well they should add klingon probably if it's used

[08:01] <TEttinger> there is more text in the voynich manuscript than in phaistos disc objects

[08:01] <TEttinger> (one copy of each)

[08:01] <samcv> but. isn't that not an actual language

[08:02] <samcv> or. is that the one we still don't know

[08:02] <TEttinger> also, undeciphered

[08:02] <TEttinger> just as actual as phaistos

[08:02] <samcv> i forget there was one that we deciphered there are several ones undeciphered though

[08:02] <samcv> several manuscripts i mean that are mysterious

[08:02] <TEttinger> there's an xkcd comic about it https://www.xkcd.com/593/

[08:03] *** gdonald left
[08:03] <samcv> hah

[08:03] *** gdonald joined
[08:04] *** baest joined
[08:11] <samcv> TEttinger, we might know 10 words from the book http://www.livescience.com/43542-voynich-manuscript-10-words-cracked.html

[08:11] <TEttinger> nice

[08:12] <samcv> which seems likely since like there are drawings

[08:12] <samcv> and it's a long enough book

[08:12] <TEttinger> "the", "a", "foxglove", "warhammer"

[08:13] <TEttinger> "+1 Vorpal"

[08:13] <samcv> what?

[08:14] <TEttinger> it has to be a gaming text!

[08:14] <TEttinger> and dungeons and dragons has +1 Vorpal Longswords and such

[08:14] <samcv> nope

[08:14] <samcv> vorpal is a made up word though

[08:14] <samcv> created in modern times

[08:15] <TEttinger> the confusing thing is that there are what appear to be alchemical diagrams using the metaphor of a bath house

[08:15] <TEttinger> lots of nude fairies or women or something in a system of pipes, kinda suggesting an apparatus to move stuff through

[08:17] <TEttinger> that would sync up with the plant diagrams from earlier in the text

[08:17] <TEttinger> but it could also signify star movement or internal medicine symbolism

[08:19] * geekosaur contemplates someone in the future trying to decipher "Jabberwocky"

[08:20] *** Cabanossi left
[08:22] *** Cabanossi joined
[08:23] <samcv> we have a written record though. so

[08:23] <samcv> seems pretty likely

[08:26] <samcv> TEttinger, i'm watching the video https://www.youtube.com/watch?time_continue=676&v=fpZD_3D8_WQ

[08:28] *** astj_ joined
[08:28] *** astj left
[08:28] *** baest left
[08:51] *** cyphase left
[08:53] *** cyphase joined
[09:06] *** synopsebot6 joined
[09:06] *** ChanServ sets mode: +v synopsebot6

[09:21] *** baest joined
[09:25] *** astj joined
[09:25] *** astj_ left
[09:29] *** baest left
[09:48] <RabidGravy> Hmm, that was simpler to fix than I thought

[09:51] *** Cabanossi left
[09:52] *** Cabanossi joined
[09:56] <RabidGravy> timotimo, if you're around be a love and merge https://github.com/arnsholt/Net-ZMQ/pull/11 - it fixes the last problem with Net::ZMQ and makes properly usable again

[09:58] *** baest joined
[09:59] *** wamba left
[10:00] *** wamba joined
[10:21] *** Cabanossi left
[10:22] *** Cabanossi joined
[10:34] *** mr-foobar left
[10:36] *** mr-foobar joined
[10:43] *** baest left
[10:45] <Geth> ¦ ecosystem: e6e0583979 | (Julien Simonet)++ | META.list

[10:45] <Geth> ¦ ecosystem: [Log::Any] Fix META6 URL.

[10:45] <Geth> ¦ ecosystem: 

[10:45] <Geth> ¦ ecosystem: s/META6.info/META6.json/

[10:45] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/e6e0583979

[10:58] *** labster left
[11:06] *** baest joined
[11:16] *** bjz_ joined
[11:18] *** bjz left
[11:24] *** baest left
[11:29] *** baest joined
[11:31] *** Possum left
[11:34] *** mxco86 joined
[11:49] *** noganex left
[11:50] *** mr-foobar left
[11:51] *** baest left
[12:01] *** baest joined
[12:09] <dalek> Net-ZMQ: f499171 | RabidGravy++ | lib/Net/ZMQ/Message.pm:

[12:09] <dalek> Net-ZMQ: Fix the wrong sized Message struct.

[12:09] <dalek> Net-ZMQ: 

[12:09] <dalek> Net-ZMQ: This fixes the memory access faults and runs clean with valgrind

[12:09] <dalek> Net-ZMQ: review: https://github.com/arnsholt/Net-ZMQ/commit/f4991716a3

[12:09] <dalek> Net-ZMQ: 15da7f5 | azawawi++ | lib/Net/ZMQ/Message.pm:

[12:09] <dalek> Net-ZMQ: Merge pull request #11 from jonathanstowe/opaque-message

[12:09] <dalek> Net-ZMQ: 

[12:09] <dalek> Net-ZMQ: Fix the wrong sized Message struct.

[12:09] <dalek> Net-ZMQ: review: https://github.com/arnsholt/Net-ZMQ/commit/15da7f5c99

[12:10] <RabidGravy> BOOM!

[12:10] *** azawawi joined
[12:10] <azawawi> hi

[12:10] <RabidGravy> my plans for world domination are coming along nicely

[12:11] <RabidGravy> yo azawawi 

[12:11] <azawawi> our $plans; # you mean :)

[12:13] <moritz> that's what he wants you to think!

[12:14] <moritz> speaking of world domination

[12:14] <moritz> I've signed a contract with a major tech publisher, who will publish "Perl 6 by Example"

[12:14] <moritz> though with a different title, likely

[12:14] <jnthn> moritz++ # cool! :)

[12:14] <azawawi> grats

[12:14] <moritz> thanks

[12:15] <RabidGravy> fabulous!

[12:21] *** noganex joined
[12:21] *** nadim joined
[12:21] <nadim> Yo! I get the feeling that there is a nicer way to write this: 

[12:21] <nadim> if %options<display_info>.defined && %options<display_info> == False

[12:21] * azawawi uses the NCurses card to begin his world domination :)

[12:22] <tbrowder> ugexe: when a META6.json has a line pointing to a github release zip archive, is that the exact source for an ecosystem install?

[12:23] <tbrowder> with zef, anyway?

[12:23] <moritz> nadim: if %options<display_info> === False { } =

[12:23] <moritz> s/\= $//

[12:24] <nadim> can I also haz an explication?

[12:24] <moritz> === is the identity comparison operator

[12:24] *** lucas-1 left
[12:24] <moritz> so it's only true if the other side is also False

[12:25] <nadim> ah, I get the {} now, it's the block

[12:25] <moritz> if you want a 0 be true too, you could write  unless %options<display_info> // True { ... }

[12:27] <nadim> would it be possible to do it with a junction (in case one has more tests) something like $options<xxx> ~~ .defined && True && > 3 

[12:27] *** mr-foobar joined
[12:28] <jnthn> if (.defined && .so given %options<display_info>) { } 

[12:28] <moritz> junctions use single &

[12:29] <moritz> m: say so 2 ~~ (.defined & * > 3)

[12:29] <camelia> rakudo-moar fbc669: OUTPUT: «False␤»

[12:29] <moritz> m: say so 2 ~~ (.defined & (* > 3))

[12:29] <camelia> rakudo-moar fbc669: OUTPUT: «False␤»

[12:29] <moritz> m: say so 2 ~~ (*.defined & (* > 3))

[12:29] <camelia> rakudo-moar fbc669: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[12:29] <moritz> oh, I guess & participates in whatever-currying

[12:29] <moritz> m: say so 2 ~~ (.defined & { $_ > 3})

[12:29] <camelia> rakudo-moar fbc669: OUTPUT: «False␤»

[12:30] * moritz confused

[12:30] <moritz> m: say 2 ~~ (.defined & { $_ > 3})

[12:30] <camelia> rakudo-moar fbc669: OUTPUT: «False␤»

[12:30] <nadim> 2 > 3 false?

[12:30] <moritz> erm, yes

[12:30] <nadim> hehe

[12:30] <moritz> m: say 2 ~~ (.defined & { $_  3})

[12:30] <camelia> rakudo-moar fbc669: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say 2 ~~ (.defined & { $_7⏏5  3})␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤   …»

[12:30] <moritz> m: say 2 ~~ (.defined & { $_ < 3})

[12:30] <camelia> rakudo-moar fbc669: OUTPUT: «True␤»

[12:30] * moritz too tired

[12:30] * lizmat wonders if "say "foo" if $_ === False with ⏏%h<a>" should be legal syntax

[12:31] <lizmat> (minus the eject symbol"

[12:31] <moritz> lizmat: s/with/given/ ?

[12:32] <lizmat> no, with, so you get your defined check and localization

[12:32] <moritz> m: say "foo" if $_ === False with False;

[12:32] <camelia> rakudo-moar fbc669: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3say "foo" if $_ === False with 7⏏5False;␤»

[12:32] <nadim> given a Bool, is the comparison to True(False better written $b == True or $b === True?

[12:32] <lizmat> m: dd $_ with False

[12:32] <camelia> rakudo-moar fbc669: OUTPUT: «Bool::False␤»

[12:33] <moritz> nadim: I'd simply write it as "$b" and "!$b"

[12:33] <moritz> if you already know it's a Bool

[12:33] <lizmat> nadim: are you really checking for existence of the key, rather than definedness of the value ?

[12:34] *** Util_ is now known as Util

[12:35] <nadim> for $b === True, you are right, better use it as "$b only", don't know why I compared it altogether! 

[12:37] <nadim> as for the first %h<xxx>.defined && $h<xxx> == False; I wanted to know if it was set to false by the user, it is set to True by default 

[12:38] <moritz> %h<xxx> //= True;

[12:38] <nadim> I don't want to set it if it is undefined

[12:38] <nadim> just know it it is True

[12:38] <lizmat> %h<xxx> // True

[12:39] <lizmat> if it's not defined, it is supposed to be True, no?

[12:39] <nadim> is something undefined always False?

[12:39] <lizmat> yep

[12:39] <lizmat> well....

[12:39] <nadim> but False is defined, no?

[12:39] <lizmat> m: class A { method Bool { True } }; say ?A

[12:39] <camelia> rakudo-moar fbc669: OUTPUT: «True␤»

[12:40] <lizmat> nadim: yes

[12:40] <moritz> m: say False.defined

[12:40] <camelia> rakudo-moar fbc669: OUTPUT: «True␤»

[12:40] <lizmat> m: dd $_ with False

[12:40] <camelia> rakudo-moar fbc669: OUTPUT: «Bool::False␤»

[12:42] <nadim> m: my $x ; say so $x ~~ .defined

[12:42] <camelia> rakudo-moar fbc669: OUTPUT: «False␤»

[12:43] <lizmat> nadim: without given, you're comparing $_, which is probably not defined 

[12:43] <lizmat> m: say 42 ~~ False

[12:43] <camelia> rakudo-moar fbc669: OUTPUT: «Potential difficulties:␤    Smartmatch against False always fails; if you mean to test the topic for truthiness, use :!so or *.not or !* instead␤    at <tmp>:1␤    ------> 3say 42 ~~ 7⏏5False␤False␤»

[12:46] <tbrowder> hi, #perl6

[12:47] <tbrowder> ref bailador: does anyone have a systemd or sysv init script to manage baile?

[12:56] *** eroux joined
[12:57] *** lucas-1 joined
[13:01] *** mcmillhj joined
[13:11] *** mcmillhj left
[13:12] <moritz> tbrowder: systemd service files are pretty easy to write; here is one for a mojolicious application: https://github.com/moritz/package-info/blob/master/debian/package-info.service

[13:13] <moritz> should be pretty easy to adapt to a bailador app

[13:13] <moritz> and if you leave out ExecStop command, systemd just sends it a KILL

[13:20] *** mcmillhj joined
[13:21] *** skids joined
[13:23] <azawawi> Can NativeCall handle slurpy (varargs) C functions (e.g. printf) ?

[13:28] *** ugjka left
[13:28] <jnthn> azawawi: No

[13:28] <azawawi> Noooo :)

[13:29] *** ugjka joined
[13:30] <azawawi> jnthn: any workarounds?

[13:32] <jnthn> Implement support for them? :)

[13:32] <jnthn> But seriously, I think the calling conv is different so you can't just write the signatures you need

[13:33] *** MilkmanDan left
[13:33] <jnthn> oh, maybe you can 

[13:33] <jnthn> perl6-m -e 'use NativeCall; sub printf(Str, int32) is native {*}; printf("answer is %d\n", 42)'

[13:33] <azawawi> I see. Thanks. Anyway for NCurses it is basically formatting functions so i can pass to sprintf and then pass the final string to the native function

[13:33] <jnthn> answer is 42

[13:34] <azawawi> :)

[13:35] *** MilkmanDan joined
[13:39] <jnthn> You can use is symbol('printf') to get different overloads too

[13:39] <jnthn> Only thing that worries me is if this cheat will actually be...reliable... :)

[13:40] *** MilkmanDan left
[13:42] *** MilkmanDan joined
[13:43] <azawawi> the actual problem is with scanw* window functions

[13:49] *** Cabanossi left
[13:52] *** Cabanossi joined
[13:56] *** st_elmo joined
[13:59] *** baest left
[14:00] <azawawi> RabidGravy: ping

[14:00] <RabidGravy> erp

[14:00] <azawawi> RabidGravy: you wrote the starfields demo right in ncurses?

[14:00] <RabidGravy> yeah

[14:01] <RabidGravy> worked quite nicely

[14:01] <azawawi> RabidGravy: well now you can resize it :)

[14:01] <RabidGravy> kewl

[14:01] <azawawi> RabidGravy: epic with the transparency

[14:03] *** baest joined
[14:04] *** bjz_ left
[14:04] *** bjz joined
[14:08] <RabidGravy> Hmm programming is tiring, I need beer

[14:11] <azawawi> Take your time.... muhaahaahhaa :)

[14:15] * azawawi enables Atom Perl 6 linter and begins conjuring more n curses examples :)

[14:18] *** Possum joined
[14:21] *** abraxxa left
[14:24] *** baest left
[14:25] *** rindolf left
[14:26] *** khw joined
[14:28] *** robertle joined
[14:32] *** ponpon is now known as ponbiki

[14:35] *** baest joined
[14:42] *** rindolf joined
[14:50] *** baest left
[15:01] *** baest joined
[15:05] *** AlexDaniel joined
[15:12] *** baest left
[15:16] *** MilkmanDan left
[15:16] *** baest joined
[15:18] *** domidumont left
[15:19] *** cdg joined
[15:20] *** Cabanossi left
[15:21] *** MilkmanDan joined
[15:22] *** Cabanossi joined
[15:33] *** kurahaupo_ joined
[15:38] *** w4and0er96 left
[15:38] *** w4and0er96 joined
[15:41] *** eady left
[15:41] *** eady joined
[15:43] *** baest left
[15:44] *** abraxxa joined
[15:45] *** abraxxa left
[15:53] *** bjz left
[15:53] *** baest joined
[15:59] *** zapwai joined
[15:59] * azawawi mouse events with ncurses... done :)

[15:59] <azawawi> https://github.com/azawawi/perl6-ncurses/blob/master/examples/06-menu-mouse.pl6

[16:33] <Geth> ¦ ecosystem: 397598895b | (Jonathan Stowe)++ | META.list

[16:33] <Geth> ¦ ecosystem: Add MessagePack::Class

[16:33] <Geth> ¦ ecosystem: 

[16:33] <Geth> ¦ ecosystem: See https://github.com/jonathanstowe/MessagePack-Class

[16:33] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/397598895b

[16:34] <RabidGravy> azawawi, nice one

[16:35] <azawawi> Thanks

[16:37] * azawawi throws some salt around him and begins preparing the next curse-d example :)

[16:41] <tbrowder>  ugexe: i'm trying to automate creating a module release on github, and then checking it before adding it to the ecosystem.  which of the paths in the META6 is used by zef? i think you told me the zip file, but i can't find my notes about

[16:43] <tbrowder>   moritz: thanks, that's helpful. BTW, can you say who will publish the paper copy of yr book, and maybe what its ne name will be?

[16:47] <moritz> tbrowder: not yet, but I'll keep everybody informed when the facts are settled and public

[16:48] *** baest left
[16:48] <timotimo> tbrowder: isn't that what Meta6::bin does?

[16:49] <tbrowder>  i'll check, thanks!

[16:54] *** baest joined
[16:55] *** domidumont joined
[16:56] *** cdg left
[16:56] <tbrowder> timotimo: that may have the answer, but i'm have to look a bit deeper...

[16:57] <timotimo> META6 is a module that you can use in your own tool, too

[16:57] <rindolf> azawawi: hi, long time

[16:57] <rindolf> azawawi: what's new?

[16:57] <timotimo> it ought to give you a bit of a head-start

[16:58] <azawawi> rindolf: hi. Currently dusting old modules. How are you?

[17:00] *** cdg joined
[17:02] <rindolf> azawawi: i'm fine - working on freecell solver

[17:02] <rindolf> azawawi: I attended an interesting conversation at the dog owners' gathering

[17:03] <rindolf> azawawi: about europe and stuff

[17:05] <tbrowder>  timotimo: it's definitely a good head start, thanks for pointing to it!

[17:05] <RabidGravy> timotimo, tbrowder I have a little script that uses META6 to generate the meta file

[17:06] <RabidGravy> I never bothered putting it in with META6 because well, it's tiny

[17:08] <azawawi> META6::Teensy32 ? :)

[17:10] <RabidGravy> I have a tab open in my browser that is to remind me to do an experiment with an ATTiny85

[17:16] <RabidGravy> I'm pretty sure Perl 6 will never run on one of those

[17:18] *** domidumont left
[17:19] <azawawi> RabidGravy: power consumption is like 5 mA at 8 MHz @ 5V. Awesome.

[17:19] <azawawi> Enough distractions :)

[17:21] *** kent\n left
[17:34] <[Coke]> tadzik: readme on rakudobrew has some bad md - look for "run something like" on the front page of the project on github

[17:37] *** wamba left
[17:42] *** bjz joined
[17:49] *** bjz left
[17:53] *** espadrine joined
[17:57] *** ChoHag left
[18:00] *** cdg left
[18:00] *** sftp left
[18:00] *** sftp joined
[18:03] *** ChoHag joined
[18:06] *** Cabanossi left
[18:07] *** Cabanossi joined
[18:15] *** domidumont joined
[18:17] *** baest left
[18:22] *** baest joined
[18:23] *** eroux left
[18:31] *** benji__ joined
[18:31] *** benji__ left
[18:36] *** baest left
[18:40] *** baest joined
[18:49] <Geth> ¦ ecosystem: blippy++ created pull request #317: Remove NCurses6 from ecosystem

[18:49] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/317

[18:51] *** darutoko left
[18:51] *** rodarmor left
[18:51] <Geth> ¦ ecosystem: 233002ea56 | blippy++ (committed by Zoffix Znet) | META.list

[18:51] <Geth> ¦ ecosystem: Remove NCurses6 from ecosystem (#317)

[18:51] <Geth> ¦ ecosystem: 

[18:51] <Geth> ¦ ecosystem: My NCurses6 module is obviated by recent changes to upstream:

[18:51] <Geth> ¦ ecosystem: https://github.com/azawawi/perl6-ncurses

[18:51] <Geth> ¦ ecosystem: 

[18:51] <Geth> ¦ ecosystem: Therefore NCurses6 should be removed as a redundant package

[18:51] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/233002ea56

[18:52] *** rodarmor joined
[18:56] *** TreyHarris joined
[18:57] *** kurahaupo_ left
[18:57] *** kurahaupo_ joined
[18:59] *** stmuk joined
[19:01] *** baest left
[19:01] *** stmuk_ left
[19:02] <azawawi> https://github.com/azawawi/perl6-ncurses/blob/master/examples/07-acs.pl6

[19:04] *** Xliff joined
[19:04] *** Xliff left
[19:10] *** Xliff joined
[19:11] <Xliff> Hello!

[19:11] <Xliff> rakudobrew is not working ATM: Configuration FAIL. You can try to salvage the generated Makefile.

[19:11] <Xliff> Command failed (status 256): /usr/bin/perl Configure.pl --optimize --prefix=/home/cbwood/.rakudobrew/moar-nom/install --make-install

[19:11] *** baest joined
[19:15] <Geth> ¦ doc: fff866f52b | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[19:15] <Geth> ¦ doc: [io grant] Fix docs for symlink/link routines

[19:15] <Geth> ¦ doc: 

[19:15] <Geth> ¦ doc: - Fix issues with argument naming

[19:15] <Geth> ¦ doc: - List new type constraints for args

[19:15] <Geth> ¦ doc: - Mention symlink caveat on Windows

[19:15] <Geth> ¦ doc: 

[19:15] <Geth> ¦ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/8c09c84d64

[19:15] <Geth> ¦ doc:              https://github.com/rakudo/rakudo/commit/da1dea2ea0

[19:15] <Geth> ¦ doc: Tests:       https://github.com/perl6/roast/commit/d4353b6d00

[19:15] <Geth> ¦ doc:              https://github.com/perl6/roast/commit/8fa49e10a4

[19:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fff866f52b

[19:16] *** ttkp6 joined
[19:17] <Xliff> rakudobrew is currently broken. Does anyone know if this is known and if there is a fix avail?

[19:18] <Xliff> Actually, I think it might not be rakudobrew specific but a Configuration error.

[19:20] <timotimo> is that the only output you get?

[19:20] <timotimo> because that output doesn't give any information at all

[19:21] <Xliff> You want everything?

[19:21] <timotimo> well, a bit more would be nice at least

[19:23] <geekosaur> rakudobrew is prone to oddnesses in my experience. every so often I have to nuke and reinstall the whole thing

[19:24] <geekosaur> and there's one build path that hasn't worked for me for months

[19:24] <timotimo> yeah like when i did that thing with libtommath >_<

[19:25] <geekosaur> I'm thinking of the "can't find a working make" bit

[19:25] <timotimo> i haven't heard of that

[19:31] <Xliff> Not a rakudobrew thing. Configure.pl

[19:31] <Xliff> Generating build/mk-moar-pc.pl ......................... OK

[19:31] <Xliff> Configuration FAIL. You can try to salvage the generated Makefile.

[19:31] <Xliff> Command failed (status 256): /usr/bin/perl Configure.pl --optimize --prefix=/home/cbwood/.rakudobrew/moar-nom/install --make-install

[19:31] <Xliff> Command failed (status 7424): /usr/bin/perl Configure.pl --prefix=/home/cbwood/.rakudobrew/moar-nom/install --backends=moar --make-install --git-protocol=https --git-reference=/home/cbwood/.rakudobrew/bin/../git_reference --gen-moar

[19:31] *** domidumont left
[19:32] *** pochi_ left
[19:32] <moritz> try deleting the whole moarvm repo, and try again

[19:32] *** labster joined
[19:33] <moritz> a subdir changed to a git submodule or so, and a regular 'git pull' can't handle that

[19:33] <timotimo> "rakudobrew nuke"

[19:33] <timotimo> yeah, it was basically the dumbest idea and worst mistake i've done in my whole development life

[19:33] <moritz> wow, then I guess you never dropped a column from a big table in a production database

[19:34] <moritz> (or similar fun things)

[19:34] <Xliff> Same error after nukage

[19:34] <Xliff> moritz: Been (somewhere near) there. Glad for backups. Egg on face.

[19:34] *** pochi joined
[19:34] <Xliff> But then... company didn't really have a place to do alternative.

[19:35] <Xliff> Customer didn't have another environment.

[19:35] *** st_elmo left
[19:36] <moritz> who was it recently who dropped their prod database by accidentally running test scripts against it?

[19:36] <moritz> that was like, last week or so

[19:37] *** st_elmo joined
[19:37] <geekosaur> was that the aws outage?

[19:38] <moritz> no, much more recently

[19:38] <geekosaur> only other one I can think of recently was gitlab

[19:38] <moritz> even more recently :-)

[19:39] <geekosaur> uh, the aws outage I mean was a month ago

[19:39] *** baest left
[19:39] <gfldex> El_Che: i'm trying to teach travis to use your ubutu packages and am getting odd errors. Did you have success with travis in that regard?

[19:40] <geekosaur> bit it wasn't a test script against a production db, it was a typo

[19:40] <gfldex> El_Che: see line 215 in https://travis-ci.org/gfldex/gfldex-meta-zef-test/builds/222185215

[19:41] <timotimo> moritz: yup, never destroyed a production database like that

[19:41] <timotimo> in fact, nobody has yet let me near a production database :)

[19:41] <moritz> oh, it was Digital Ocean: https://www.digitalocean.com/company/blog/update-on-the-april-5th-2017-outage/

[19:41] *** st_elmo left
[19:42] <timotimo> they just wanted to be hip and cool and in the news just like amazon

[19:42] <moritz> " A process performing automated testing was misconfigured using production credentials."

[19:46] * geekosaur missed that one

[19:47] <moritz> it was much smaller than AWS

[19:47] <moritz> fewer users, and only the control thingy down

[19:48] <timotimo> Xliff: how about you go into the folders and manually go through the steps?

[19:48] <geekosaur> "do'h"

[19:49] <Xliff> timotimo: That was manually using Confiugre from top level rakudo dir.

[19:51] <timotimo> yeah, but it's clearly trying to build moarvm

[19:51] <timotimo> so go into the moarvm folder and run Configure in there

[19:51] <timotimo> and hopefully it'll give you some more output

[19:52] <Xliff> Updating submodules .................................... FAIL

[19:52] <Xliff>     git error: fatal: destination path '/home/cbwood/.rakudobrew/moar-nom/nqp/MoarVM/3rdparty/libtommath' already exists and is not an empty directory.

[19:52] <timotimo> yup

[19:52] <timotimo> that's exactly the problem

[19:52] <Xliff> Wasn't libtommath already mentioned>?

[19:52] <timotimo> yeah

[19:52] <Xliff> Well piss!

[19:52] <geekosaur> yes, that's your issue

[19:52] <timotimo> you need to rm -rf that folder

[19:52] <geekosaur> or git submodule update?

[19:52] <timotimo> alternatively, write some code for us that does that automatically

[19:52] <timotimo> geekosaur: no, it won't let you go into a state where the submodule even exists

[19:52] <timotimo> because there's already stuff in the way

[19:53] <Xliff> \0/

[19:54] <Xliff> timotimo: I would first need to know how things SHOULD be done.

[19:54] <Xliff> So that's less me and more .... someone.

[19:54] *** lostinfog joined
[19:55] <Xliff> So what has life been in rakudoworld since... Feb?

[19:55] <Xliff> I'd read bland changenotes, but why do that when I can give timotimo high blood pressure!? ^_^

[19:56] <timotimo> oh

[19:57] <timotimo> hm, can we even put code in that'll rm -rf that folder?

[19:57] <timotimo> can we checkout a checkout where the submodule is configured?

[19:57] <timotimo> potentially we can

[19:57] *** baest joined
[19:59] <timotimo> we need to somehow figure out the problem is "already exists and is not an empty directory", but we should also make sure any user changes don't erroneously get rm -rf'd there

[19:59] <timotimo> i suppose it'd be enough to just mv it out of the way

[20:02] <Xliff> When running "./Configure" can you check the output? If you see that git error then mv it out of the way and retry.

[20:03] <Xliff> Say in big red letters "CHECK LIBTOMMATH DIR FOR LOCAL CHANGES. IF NONE EXIST YOU CAN SAFELY REMOVE"

[20:05] <timotimo> *shrug*, it's a perl5 script

[20:05] <timotimo> i don't do perl5

[20:08] <Xliff> timotimo: I sense an upturned nose. ^_^

[20:10] <Xliff> And system command output redirection in perl5 is a bit of a chore.

[20:10] <Xliff> I know there are modules for it, but...

[20:11] <timotimo> no, i just don't want to write some perl5 code that goes against every single best practice out there

[20:11] <timotimo> because i am truly 100% ignorant of how to write good perl5 code

[20:20] *** Cabanossi left
[20:21] *** baest left
[20:22] *** Cabanossi joined
[20:23] *** st_elmo joined
[20:25] *** lostinfog left
[20:29] <samcv> a thought i had today. if most ENV vars are all in caps. then wouldn't that make lowercase env vars the least likely to have collisions?

[20:29] <samcv> for personal scripts and such

[20:32] *** baest joined
[20:33] <geekosaur> that's the general idea, yes

[20:34] <geekosaur> except that there's an edge case: Bourne-derived shells conflate env vars with local shell vars, so you generally use lowercase for the latter and uppercase for the former

[20:37] <ugexe> tbrowder: it uses whatever is listed for `source-url`

[20:42] *** ChoHag left
[20:43] <tbrowder> ugexe: great! thanks.

[20:44] *** ChoHag joined
[20:51] <samcv> geekosaur, what about posix shells like dash?

[20:51] <geekosaur> that is Bourne-derived

[20:51] <samcv> ok

[20:51] <geekosaur> fish, rc, and csh/tcsh are shells that are not Bourne-derived

[20:52] *** mcmillhj left
[20:52] *** Sound joined
[20:53] *** Sound is now known as Guest85297

[20:54] *** Guest85297 left
[20:54] *** Sound_ joined
[20:55] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2017/04/14/speeding-up-travis/

[20:55] <SmokeMachine> m: say {try 5 == 5}()

[20:55] <camelia> rakudo-moar 7f73f9: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "==" in expression "5 == 5" in sink context (line 1)␤True␤»

[21:01] *** skids left
[21:03] *** bjz joined
[21:04] *** Cabanossi left
[21:05] *** Sound_ left
[21:06] *** baest left
[21:07] *** Cabanossi joined
[21:09] *** RabidGravy left
[21:10] *** baest joined
[21:10] <TreyHarris> samcv: another wrinkle to know about before you intentionally pick the lowercase form of an env variable you know is i use somewhere: zsh at least has the concept of autobound scalar/array pairs, so that you can do "typeset -TU PERL6LIB perl6lib ,", then $perl6lib can be manipulated with array ops while PERL6LIB will remain in its comma-delimited scalar form. (The -T does that; the -U just forces uniqueness as

[21:10] <TreyHarris> you usually want with search path variables.) PATH/path, FPATH/fpath--in general, zsh uses the caps/lowercase convention for this.

[21:11] <TreyHarris> I set up a -TU binding for pretty much every list variable because it's so useful. (With the uniqueness in particular, so you can just do "perl6lib+=mylib" and know it'll be added to the end iff it isn't already there.)

[21:12] <TreyHarris> I don't know if other shells have the same as a general concept; most have it as a special case for PATH/path and other core library env vars.

[21:13] <geekosaur> it's a csh-ism

[21:14] <geekosaur> $path vs. $PATH is the canonical one, hardwired into csh/tcsh; zsh generalized the mechanism

[21:14] <geekosaur> and I think otherwise only fish does it

[21:14] <Geth> ¦ doc: aeeec94478 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[21:14] <Geth> ¦ doc: [io grant] Straighten up copy, move, rename

[21:14] <Geth> ¦ doc: 

[21:14] <Geth> ¦ doc: - Shorten and unify prose

[21:14] <Geth> ¦ doc: - List new type constraints as implemented in

[21:14] <Geth> ¦ doc:     https://github.com/rakudo/rakudo/commit/ff97083419

[21:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/aeeec94478

[21:16] <TreyHarris> geekosaur: that was my guess but I wasn't going to delve into the arcane world of unfamiliar shells' manpages to try to figure it out :-)

[21:17] <Geth> ¦ doc: 6992c483e3 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[21:17] <Geth> ¦ doc: For the love of copy-paste is the root of all evil

[21:17] <Geth> ¦ doc: 

[21:17] <Geth> ¦ doc: 1 Timothy 6:10

[21:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6992c483e3

[21:17] <TreyHarris> when people complain about Perl's un-googleability, Perl (5 or 6) have nothing on shells 

[21:26] <timotimo> agreed

[21:27] *** st_elmo left
[21:39] *** nadim left
[21:41] *** baest left
[21:44] *** baest joined
[21:49] *** cpage joined
[22:04] *** espadrine left
[22:06] *** Cabanossi left
[22:06] *** wamba joined
[22:07] *** Cabanossi joined
[22:11] *** kerframil joined
[22:12] <Geth> ¦ doc: 923ea058b6 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[22:12] <Geth> ¦ doc: [io grant] Straighten up mkdir docs

[22:12] <Geth> ¦ doc: 

[22:12] <Geth> ¦ doc: - Remove removed multi-dir multi[^1]

[22:12] <Geth> ¦ doc: - Direct to `mode` docs for mode info

[22:12] <Geth> ¦ doc: 

[22:12] <Geth> ¦ doc: [1] https://github.com/rakudo/rakudo/commit/0d9ecae6fe

[22:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/923ea058b6

[22:15] <TreyHarris> I love everything about jnthn's "auto-new" trait suggestion except the name. "method table() is auto-new" just reads wrong. But I can't come up with a better one. "autovivified"? It's not quite the same as subscript autovivification directly translated into attribute autovivication, but it's not that far off....

[22:24] *** lucas-1 left
[22:24] *** robertle left
[22:27] <gfldex> TreyHarris: autoinstance

[22:28] <AlexDaniel> TreyHarris: wait, auto-new? Where can I read about it?

[22:29] <jnthn> Names are hard, not to mention bikesheddable :)

[22:30] <jnthn> (And no, I don't consider auto-new a particularly nice name either :))

[22:30] <jnthn> It's hard to think of something relatively short but descriptive

[22:31] <jnthn> Maybe `is creative` (as in, creates an instance, which plays OK with the Perl 6 .CREATE primitive)

[22:31] <timotimo> we have .CREATE?

[22:31] <timotimo> oh, that's the really low-level one?

[22:31] <jnthn> Yeah

[22:31] <jnthn> It's why the low-level object creation op got named nqp::create

[22:31] <timotimo> i completely missed the suggestion for this auto-new thing

[22:32] *** raiph joined
[22:32] <raiph> m: sub foo-Int (Int $a) { my Int $b; $b++ for ^$a }; sub foo-int (int $a) { my int $b; $b++ for ^$a }; my $time; $time = now; foo-Int my Int $ = 1e6.Int; say now - $time; $time = now; foo-int my int $ = 1e6.Int; say now - $time; # 0.7627174

[22:32] <camelia> rakudo-moar f9968b: OUTPUT: «0.73760479␤0.479592␤»

[22:33] <timotimo> gfldex: it'd be cool if you could figure out short instructions for using samcv's appimages; the star ones come with zef if i understand correctly

[22:33] <samcv> they do come with zef but you can't really get to it any way

[22:33] <samcv> even though they are inside the image

[22:33] <timotimo> hm, maybe through perl6 -MZef::Something?

[22:34] <samcv> could even add a --zef flag to start zef instead lol

[22:34] <ugexe> perl6 -MZef::CLI 

[22:34] <samcv> that might be broken though

[22:34] <timotimo> fantastic! ugexe to the rescue

[22:34] <samcv> i think module preloading is broken on relative paths

[22:34] <ugexe> ah

[22:34] <samcv> i can try it though

[22:35] <timotimo> samcv: wow, all those html files are just one single long line?

[22:35] <samcv> which?

[22:35] <timotimo> https://github.com/MoarVM/MoarVM/blob/106a558f23d6ecf83da91d86ce4f2ec895e80e85/libmoar/coverage/home/travis/build/MoarVM/MoarVM/src/6model/reprs/CPPStruct.c.html

[22:35] <samcv> oh hey... that worked

[22:35] <samcv> magic!

[22:35] <ugexe> $ perl6 -MZef::CLI -e '' install CSV::Parser

[22:35] *** skids joined
[22:36] <samcv> i guess installed modules are fine to preload. i think non installed modules from $ANY_PATH_HERE don't work

[22:36] <samcv> since rakudo distro is relative path, somehow it confuses the precompiler

[22:36] <timotimo> you're not running a lot of testy stuff there yet?

[22:36] <samcv> for appimages?

[22:36] <samcv> it does run tests before pushing the updated appimages

[22:36] <timotimo> no the coverage report

[22:36] <samcv> oh

[22:37] <timotimo> i was switching topics :P

[22:37] <samcv> it does the nqp test

[22:37] <timotimo> oh facepalm

[22:37] <samcv> though you can't do commands after -MZef::CLI because it tries to resolve the paths in the perl6 script

[22:37] <timotimo> i was looking at moar, not libmoar

[22:37] <samcv> oh

[22:38] <samcv> oh hey

[22:38] <samcv> it worked! \o/ \o/

[22:38] <samcv> nice

[22:38] *** rindolf left
[22:38] <samcv> https://moarvm.github.io/MoarVM/libmoar/ fancy

[22:39] <timotimo> very fancy indeed

[22:51] *** Cabanossi left
[22:52] *** Cabanossi joined
[22:54] *** wamba left
[22:55] *** nowan left
[22:57] * azawawi off to sleep q { https://github.com/azawawi/perl6-ncurses/tree/master/examples :) }

[22:58] *** nowan joined
[23:01] *** azawawi left
[23:07] <Xliff> Er....

[23:08] <Xliff> NativeHelpers::Blob fails, which blows DBIish install.

[23:08] <Xliff> ==> Testing NativeHelpers::Blob

[23:08] <Xliff> t/00-trivial.t .. ok

[23:08] <Xliff> t/01-basic.t .... ok

[23:08] <Xliff> # Failed test 'Indeed'

[23:08] <Xliff> # at t/02-cstruct.t line 112

[23:08] <Xliff> # expected: '-2080500184'

[23:08] <Xliff> #      got: '2214467112'

[23:08] <Xliff> # Looks like you failed 1 test of 35

[23:08] <Xliff> t/02-cstruct.t ..

[23:08] <Xliff> Dubious, test returned 1 (wstat 256, 0x100)

[23:08] <Xliff> Failed 1/35 subtests

[23:08] <Xliff> t/03-pointer.t .. ok

[23:08] <Xliff> t/99-my-meta.t .. ok

[23:10] <gfldex> timotimo: quite frankly I'm not happy with that appimage stuff. We would do much better in providing proper Rakudo Star distro packages on a regular basis, including a repo that could be added to sources.list.

[23:11] <mst> gfldex: ...

[23:11] <Geth> ¦ doc: 47b05262e8 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[23:11] <Geth> ¦ doc: [io grant] Explicitly spell out caveats of IO::Path.Str

[23:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/47b05262e8

[23:11] <mst> gfldex: yes. it would be nice to have those *as well*

[23:11] <Xliff> Nevermind. I filed a ticket with the proper repo.

[23:12] *** labster left
[23:12] <mst> gfldex: but that's no reason to be mad at somebody for spending their free time building something else

[23:12] <timotimo> gfldex: well, we got the appimages now.

[23:12] <timotimo> it serves as a package for about one gazillion different distros

[23:12] <gfldex> mst: what makes you think I'm mad at anyone?

[23:12] <mst> and is relocatebale and on some systems user-installable and self-contained

[23:12] <timotimo> it only took like 4 days to build

[23:13] <timotimo> that's about 0.001 seconds per distro

[23:13] <timotimo> i'd say that's hard to beat

[23:13] <mst> gfldex: "I'm not happy with X, we would do much better doing Y" is an implicit criticism of X and the work that went into it.

[23:13] *** ChoHag left
[23:13] <mst> gfldex: that might not have been your intention but is how such comments are likely to be read

[23:13] <gfldex> mst: please stop

[23:13] *** kent\n joined
[23:14] <mst> gfldex: you asked a question. I was answering it.

[23:14] *** riatre_ is now known as riatre

[23:14] <mst> normally open source contributors care when they accidentally looked like they were shitting on somebody else's work

[23:16] <gfldex> so let me rephrase then, I personally don't like nor have I ever used appimages. As a consequence of my personal preference I have to decline timotimos kind request to write about stuff I never had plans to write about.

[23:16] <gfldex> mst: happy now?

[23:19] <timotimo> that's fine, it just came across a bit more general than that

[23:20] *** Cabanossi left
[23:21] *** geekosaur left
[23:22] *** Cabanossi joined
[23:23] *** geekosaur joined
[23:24] <Xliff> Huh!

[23:25] <gfldex> zef got failing tests with bleeding rakudo. No time to hunt it down, I got $dayjob tomorrow.

[23:30] <TimToady> something to do with link or symlink maybe

[23:31] <Xliff> Wow! "sprintf("%p", pointer)" is returning a negative value. WTF?

[23:33] <TimToady> that often means pointer is on the stack

[23:34] <TimToady> many machines put the stack in "negative" memory

[23:35] <TimToady> I suppose this is a pointer from C code calling into some kind of callback?

[23:36] <TimToady> if not, you may have nested runloop problems...

[23:36] <mst> gfldex: yep, that's completely reasonable, and since I agree that vendor packages would also be useful, I'd be perfectly happy to test a set if you ever come up with them

[23:36] <Xliff> It's a NativeCall generated pointer array passed back into C code.

[23:36] <Xliff> LinerArray[]

[23:37] <Xliff> So the pointer is created by rakudo and passed back to a C function.

[23:37] <Xliff> Which means I can't test the C side.

[23:38] <TimToady> I don't see how rakudo can allocate a (valid) pointer on the C stack unless it was called into by some C code that is still live

[23:38] <Xliff> This one test is the only thing that fails in NativeHelper::Blob

[23:38] <Xliff> TimToady: That's what I was thinking.

[23:38] <gfldex> mst: I strongly doubt I will do so as Perl 6 is becoming less and less enjoyable to me.

[23:39] <TimToady> I suppose some OSes *could* be putting heap values that high, but it's not normal in my experience

[23:39] <Xliff> Everything else works, though. Passing that same pointer to C to change values and print them out works fine.

[23:40] <Xliff> It's just checking the "%p" value to the perl6 one that failes.

[23:40] <TimToady> gfldex: is that because we intentionally torment the implementors a bit more than the users?

[23:40] <Xliff> I almost think that test is no longer "valid"

[23:41] <TimToady> gfldex: or is there something else (that is fixable)?

[23:42] <Xliff> TimToady: See lines 33, 41 and 112, here: https://github.com/salortiz/NativeHelpers-Blob/blob/master/t/02-cstruct.t

[23:43] <Xliff> myaddr() is a C routine that simply does sprintf("%p"...) to the passed parameter.

[23:43] <Xliff> And returns the output

[23:44] <ugexe> m: say mkdir("foo") # this is why zef is broke

[23:44] <camelia> rakudo-moar fa201b: OUTPUT: «mkdir is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in sub mkdir at src/RESTRICTED.setting line 8␤  in block <unit> at <tmp> line 1␤␤»

[23:44] <ugexe> well that returns True now instead of the directory it created

[23:45] *** BenGoldberg joined
[23:46] <TimToady> there was something about that over in -dev

[23:51] *** Cabanossi left
[23:52] *** Cabanossi joined
[23:53] *** baest left
[23:56] *** labster joined
[23:57] *** baest joined
