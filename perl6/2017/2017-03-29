[00:00] *** mcmillhj joined
[00:02] *** ParsonsNose joined
[00:07] <Voldenet> u-ou: you could also do async code, more sane

[00:08] <Voldenet> and actually I think sync code in networking should die, really

[00:08] <Voldenet> telling the kernel 'where to go with the data' instead of 'write data here and continue the program' is more descriptive

[00:08] <Voldenet> because then the program can wait for multiple pieces of data

[00:12] <u-ou> ok. where can I read about that?

[00:13] <Voldenet> https://docs.perl6.org/type/IO::Socket::Async

[00:13] <Voldenet> if I understood correctly, you wanted socket programming, so basically it has examples of how it should work

[00:14] <u-ou> thanks

[00:15] <Voldenet> There are some things I don't know for sure yet though, like if using the pattern 'start react whenever $socket.Supply { .say }' is a good practice

[00:16] <Voldenet> (I use it to start multiple listeners and it mostly works)

[00:16] <Voldenet> (but there are pitfalls of error handling within start... so maybe there's better way to do this)

[00:30] <u-ou> gtg

[00:30] <u-ou> thanks

[00:38] *** Cabanossi left
[00:41] *** Cabanossi joined
[00:45] *** Sound left
[00:46] <BenGoldberg> m: enum Foo { bar }; sub baz( --> Foo ) { ... };

[00:46] <camelia> rakudo-moar 41ac4b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Type 'Foo' is not declared␤at <tmp>:1␤------> 3enum Foo { bar }; sub baz( --> Foo7⏏5 ) { ... };␤»

[00:46] *** Unavowed left
[00:46] *** Unavowed joined
[00:48] *** dj_goku joined
[00:49] <BenGoldberg> Derp, nevermind.

[00:49] <BenGoldberg> m: enum Foo ( bar => 0 ); sub baz( --> Foo ) { ... };

[00:49] <camelia> rakudo-moar 41ac4b: ( no output )

[00:49] * BenGoldberg has C in his brain, and thus keeps expecting enum Name { ... } to work.

[00:52] *** gdonald left
[00:52] *** gdonald joined
[00:53] <timotimo> Voldenet: i'd really $socket.Supply.act({ .say }) instead of that

[00:54] <Voldenet> timotimo: but then it works differently, right?

[00:54] <Voldenet> i mean the receiving thread will perform the operation

[00:54] <timotimo> a little bit

[00:54] <timotimo> that's the event thread, yeah

[00:54] <Voldenet> and in my case a new thread will

[00:54] <timotimo> you can also $socket.Supply.start({ .say })

[00:54] <Voldenet> It's more expensive, but is able to scale multiple listeners

[00:54] <timotimo> that's also a bit different

[00:55] <Voldenet> since they'd be invoked concurrently

[00:55] <Voldenet> oh, what does .Supply.start(...) do, spawn a thread?

[00:55] <timotimo> same as other "start"

[00:55] <timotimo> it goes to the $*SCHEDULER and tells it to add a new work item

[00:55] <Voldenet> hm, might be a better solution than start react

[00:56] <timotimo> also, if you're doing stuff with async and such, you'll want "use 6.d.PREVIEW" on the top of your program

[00:56] <timotimo> so you get non-blocking await

[00:56] <Voldenet> oh, it'll start working like in js/C# now?

[00:57] <Voldenet> (generate the continuation and state machine per async/await method?)

[00:57] <timotimo> not sure how it works in js

[00:57] <timotimo> it uses continuations, but i don't know what you mean by state machine there

[00:59] <Voldenet> well, C# and JS use the object to store the actual execution state along with the method invoked

[00:59] <timotimo> well, that's just what a continuation is, isn't it?

[00:59] <Voldenet> the object also stores all variables related to the execution scope

[00:59] <Voldenet> Yeah, pretty much.

[00:59] <timotimo> yeah

[00:59] <timotimo> it takes a continuation and passes control back to the scheduler

[01:00] <timotimo> before 6.d it won't do that, so you'll be blocking a thread from the thread pool when you await something

[01:00] *** mcmillhj left
[01:00] <Voldenet> but the async function is converted into { switch(state){ case 1: ..., case 2: ..., etc. } }

[01:01] <timotimo> yeah we have the benefit of actually being able to take proper continuations

[01:02] *** mcmillhj joined
[01:02] <timotimo> except of course on the javascript backend

[01:03] <Voldenet> hm, underneath it's probably still some kind of state machine though :)

[01:03] <timotimo> um, yeah, duh :)

[01:03] <timotimo> we have a long array of opcodes and we store the instruction pointer

[01:03] <timotimo> except we don't have an up-front list of positions that are valid

[01:03] <timotimo> so not quite like putting a switch/case around it

[01:04] <Voldenet> ah, it makes sense, so IP is the /state/ in this case

[01:04] <Voldenet> but it's not very explicit state machine

[01:04] <timotimo> unless of course you put in a switch/case for every byte offset and make more than 3/4 of them just behave absolutely chaotically

[01:06] <Voldenet> yeah, switch/case looks a lot like a workaround against runtime

[01:06] *** asdfgh left
[01:06] *** asdfgh joined
[01:07] *** mcmillhj left
[01:07] <timotimo> *shrug*, if the runtime can optimize it well, it's probably just fine

[01:09] <Voldenet> also, can I somehow create a continuable method?

[01:10] <timotimo> what, like with "take"?

[01:10] <committable6> timotimo, ¦like: «Cannot find this revision (did you mean “all”?)»

[01:10] <timotimo> oh, thank you, committable6, but that's not helping

[01:10] <gfldex> Voldenet: if you are fine that the method always returns a list, you can use gather/take

[01:10] <AlexDaniel> wtf

[01:10] <AlexDaniel> I thought I fixed this

[01:10] <AlexDaniel> there's even a test for this

[01:10] <Voldenet> hm, gather/take would work, but thught a bit of something like

[01:10] <gfldex> did the bots get an AI upgrade?

[01:11] <AlexDaniel> gfldex: not yet, but are you referring to “did you mean …” part?

[01:11] <Voldenet> sub reentrable { do-something(); yield; do-something-second(); }; reentrable(); reentrable();

[01:12] <AlexDaniel> c: ca924df2 say 42

[01:12] <committable6> AlexDaniel, ¦ca924df: «Cannot find this revision (did you mean “5ca924d”?)»

[01:12] <gfldex> you can drop the returned item

[01:12] <timotimo> you can make a trait that wraps a sub or method so that it handles return values, but you'll still need some way to kick it off so it continues work where it stopped

[01:12] *** lichtkind_ joined
[01:13] *** lichtkind__ left
[01:14] *** mcmillhj joined
[01:15] <gfldex> m: my method foo(){ gather { say "foo"; take Nil; say "bar" } }; my $a = 42; my $b = $a.&foo; $b = $a.&foo; dd $b

[01:15] <camelia> rakudo-moar 41ac4b: OUTPUT: «foo␤bar␤Seq $b = (Nil,).Seq␤»

[01:15] <gfldex> m: my method foo(){ gather { say "foo"; take Nil; say "bar" } }; my $a = 42; my $b = $a.&foo; $b = $a.&foo;

[01:15] <camelia> rakudo-moar 41ac4b: ( no output )

[01:15] <gfldex> clever Rakduo is to clever for this task

[01:15] <Voldenet> Hm, gather and take surely would work like a solution, but I dislike "take without parameters doesn't make sense"

[01:15] <Voldenet> :P

[01:16] <gfldex> gather returns a Seq

[01:16] <gfldex> so the fault is not really with take

[01:16] <timotimo> just build a "sub yield { take Nil }" and you're done

[01:16] <Voldenet> Now that's clever! :)

[01:17] <timotimo> the trait i speculated above could take the Seq it gets from gather { } and wrap it in a class that pretends it's not about lists, but about coroutines

[01:18] <Voldenet> Uhm, and it'd make sense in the context

[01:19] *** aborazmeh joined
[01:19] *** aborazmeh left
[01:19] *** aborazmeh joined
[01:19] *** mcmillhj left
[01:20] <timotimo> anyway, it's bedtime for me

[01:20] <timotimo> have a good one!

[01:21] <Voldenet> well, time for me to go too, then, see ya

[01:21] <Voldenet> i'm tempted to fiddle around further and sacrifice sleep though ;)

[01:23] *** Cabanossi left
[01:23] *** bpmedley left
[01:26] *** Cabanossi joined
[01:27] *** mcmillhj joined
[01:27] *** asdfgh left
[01:28] *** asdfgh joined
[01:30] *** jeffythedragonsl joined
[01:30] *** jeffythedragonsl left
[01:32] *** mcmillhj left
[01:37] <AlexDaniel> m: sub foo($a where /$<aa>=<[abc]>/, $b where /$<bb>=<[xyz]>/) { say $<aa>; say $<bb> }; foo ‘b’, ‘z’

[01:37] <camelia> rakudo-moar 41ac4b: OUTPUT: «Nil␤｢z｣␤»

[01:37] <AlexDaniel> how can I make something like this work?

[01:38] *** mcmillhj joined
[01:43] *** mcmillhj left
[01:45] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:59] <MasterDuke> why does the second capture work but not the first?

[02:00] <AlexDaniel> MasterDuke: because the first one is overwritten

[02:01] <geekosaur> ^

[02:02] *** mcmillhj joined
[02:02] <geekosaur> you get one $/ that gets implicitly referenced by $<foo>

[02:02] <MasterDuke> ah, right, of course

[02:02] <llfourn> AlexDaniel: I wasn't aware that worked at all even for one.

[02:04] <AlexDaniel> well, I know one way to do it

[02:04] <AlexDaniel> but I don't really like it

[02:04] <AlexDaniel> m: sub foo($a where /(<[abc]>) {} :my $aa = ~$0;/, $b where /(<[xyz]>) {} :my $bb = ~$0;/) { say $aa; say $bb }; foo ‘b’, ‘z’

[02:04] <camelia> rakudo-moar 41ac4b: OUTPUT: «b␤z␤»

[02:05] <AlexDaniel> llfourn: I can imagine your “wtf???” face right now xD

[02:06] <MasterDuke> m: sub foo($a where my $aa = $a ~~ /$<aa>=<[abc]>/, $b where my $bb = $b ~~ /$<bb>=<[xyz]>/) { say $aa; say $bb }; foo ‘b’, ‘z’

[02:06] <camelia> rakudo-moar 41ac4b: OUTPUT: «｢b｣␤ aa => ｢b｣␤｢z｣␤ bb => ｢z｣␤»

[02:06] <AlexDaniel> oh!

[02:06] <AlexDaniel> now that's much better!

[02:06] *** aborazmeh left
[02:06] <AlexDaniel> hm… or maybe not

[02:07] *** mcmillhj left
[02:07] <AlexDaniel> then $aa gets the whole match, not something I actually want

[02:07] <MasterDuke> m: sub foo($a where my $aa = $a ~~ /<[abc]>/, $b where my $bb = $b ~~ /<[xyz]>/) { say $aa; say $bb }; foo ‘b’, ‘z’

[02:07] <camelia> rakudo-moar 41ac4b: OUTPUT: «｢b｣␤｢z｣␤»

[02:07] <AlexDaniel> oh, but then I can do $aa<foo>. Okay. That works

[02:08] <MasterDuke> m: sub foo($a where my $aa = $a ~~ /<[abc]>/, $b where my $bb = $b ~~ /<[xyz]>/) { say $aa; say $bb }; foo ‘z’, ‘b’

[02:08] <camelia> rakudo-moar 41ac4b: OUTPUT: «(Any)␤(Any)␤»

[02:08] <AlexDaniel> oops…

[02:09] <MasterDuke> m: sub foo($a where so my $aa = $a ~~ /<[abc]>/, $b where so my $bb = $b ~~ /<[xyz]>/) { say $aa; say $bb }; foo ‘z’, ‘b’

[02:09] <camelia> rakudo-moar 41ac4b: OUTPUT: «Constraint type check failed for parameter '$a'␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:09] <MasterDuke> m: sub foo($a where so my $aa = $a ~~ /<[abc]>/, $b where so my $bb = $b ~~ /<[xyz]>/) { say $aa; say $bb }; foo ‘b’, ‘z’

[02:09] *** rblackwe joined
[02:09] <camelia> rakudo-moar 41ac4b: OUTPUT: «｢b｣␤｢z｣␤»

[02:10] <MasterDuke> m: sub foo($a where so my $aa = m/<[abc]>/, $b where so my $bb = m/<[xyz]>/) { say $aa; say $bb }; foo ‘b’, ‘z’

[02:10] <camelia> rakudo-moar 41ac4b: OUTPUT: «｢b｣␤｢z｣␤»

[02:10] <MasterDuke> nope

[02:10] <MasterDuke> m: sub foo($a where so my $aa = m/<[abc]>/, $b where so my $bb = m/<[xyz]>/) { say $aa; say $bb }; foo ‘z’, ‘b’

[02:10] <camelia> rakudo-moar 41ac4b: OUTPUT: «Constraint type check failed for parameter '$a'␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:11] <MasterDuke> m: sub foo($a where so my $aa = m/<[abc]>/, $b where so my $bb = m/<[xyz]>/) { say $aa; say $bb }; foo ‘b’, ‘a’

[02:11] <camelia> rakudo-moar 41ac4b: OUTPUT: «Constraint type check failed for parameter '$b'␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:12] <MasterDuke> oh, typo locally, it does work fine

[02:13] *** grondilu joined
[02:13] *** mcmillhj joined
[02:13] <MasterDuke> m: sub foo($ where so my $aa = m/<[abc]>/, $ where so my $bb = m/<[xyz]>/) { say $aa; say $bb }; foo ‘b’, ‘z’

[02:13] <camelia> rakudo-moar 41ac4b: OUTPUT: «｢b｣␤｢z｣␤»

[02:14] <MasterDuke> m: sub foo($a where so $a = m/<[abc]>/, $b where so $b = m/<[xyz]>/) { say $a; say $b }; foo ‘b’, ‘z’

[02:14] <camelia> rakudo-moar 41ac4b: OUTPUT: «b␤z␤»

[02:14] <MasterDuke> nope

[02:14] <MasterDuke> m: sub foo($a where so $a = m/<[abc]>/, $b where so $b = m/<[xyz]>/) { say $a; say $b }; foo ‘b’, ‘a’

[02:14] <camelia> rakudo-moar 41ac4b: OUTPUT: «b␤a␤»

[02:16] <llfourn> it would be cool if we could have some general way to extract the match from regexes in signatures.

[02:16] *** sQuEE` is now known as sQuEE

[02:18] <llfourn> it would be nice even for signatures in when statements

[02:20] <llfourn> m: given ("foo","bar") { when :($ where /(.)o+/, $ where /(.)r/) { say $/ } }

[02:20] <camelia> rakudo-moar 41ac4b: OUTPUT: «Nil␤»

[02:20] *** mcmillhj left
[02:24] *** Cabanossi left
[02:26] *** Cabanossi joined
[02:27] *** mcmillhj joined
[02:29] * grondilu tries http://rosettacode.org/wiki/Evolutionary_algorithm#Perl_6 and is glad to see it got much faster than it used to.

[02:30] <AlexDaniel> grondilu: how long does it take?

[02:31] *** mcmillhj left
[02:31] <AlexDaniel> just thinking that maybe we can feed it into benchable to see how much it improved

[02:32] <grondilu> it takes a few seconds.  I had never ran it all the way to the end.  It used to take too long.

[02:34] <AlexDaniel> e: https://gist.githubusercontent.com/AlexDaniel/61f658766ba0f656ad7a2b7ae9ff83c6/raw/0d6b19f3b14ad6789ecc9912b6e1d64342ffbe0a/test.p6

[02:34] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[02:34] <evalable6> AlexDaniel, rakudo-moar 41ac4b4a3: OUTPUT: «(signal SIGHUP)      0: 'SNHKTNAVFMCLECABDVPZFICTVRMV'␤     1: 'SNHKTNAVFRCLECABIVPZF CTVR…»

[02:34] <evalable6> AlexDaniel, Full output: https://gist.github.com/f2493ca09af0582f86c5c0042259c3a9

[02:35] <AlexDaniel> bench: releases https://gist.githubusercontent.com/AlexDaniel/61f658766ba0f656ad7a2b7ae9ff83c6/raw/0d6b19f3b14ad6789ecc9912b6e1d64342ffbe0a/test.p6

[02:35] <benchable6> AlexDaniel, Successfully fetched the code from the provided URL.

[02:35] <benchable6> AlexDaniel, starting to benchmark the 17 given commits

[02:35] <AlexDaniel> well, probably won't work

[02:35] <AlexDaniel> yea, will time out

[02:35] <AlexDaniel> nevermind then

[02:36] *** pm5 joined
[02:38] *** mcmillhj joined
[02:39] *** benchable6 left
[02:39] *** benchable6 joined
[02:39] *** ChanServ sets mode: +v benchable6

[02:39] *** noganex joined
[02:42] *** noganex_ left
[02:43] *** mcmillhj left
[02:43] *** astj joined
[02:50] *** mcmillhj joined
[02:55] *** mcmillhj left
[02:56] *** xtreak joined
[02:56] *** wamba joined
[02:59] *** ParsonsNose left
[03:00] <SmokeMachine> does multi dispatch have performance problem?

[03:02] <mst> this sounds like a question that is based on you observing something and guessing at what caused the something

[03:02] *** mcmillhj joined
[03:02] <mst> have you considered asking the original question instead?

[03:02] <SmokeMachine> mst: no...

[03:03] <SmokeMachine> I am trying to fix the hash multidimensional slice, and im abusing of it...

[03:03] <mst> I mean, "does X have a performance problem" is basically a meaningless question anyway

[03:03] <SmokeMachine> and i'd like to know if I should be using that so much...

[03:03] <mst> lots of the internals seem to be based on multimethods

[03:04] <mst> and I *think* it tries to resolve stuff at compile time where possible

[03:04] <mst> but really the question is "is this sufficiently performant for this case"

[03:04] <mst> which would require you benchmarking it against an uglier version

[03:04] <mst> and also of course it might be the answer is "it's a bit slow right now, but the multimethod implementation is still better because it'll be fast enough shortly"

[03:05] <mst> sorry. I don't really have any answers here, I just wanted to debug the question

[03:06] *** bpmedley joined
[03:06] *** mr-foobar left
[03:07] *** mcmillhj left
[03:08] *** Cabanossi left
[03:09] *** BenGoldberg left
[03:09] <samcv> yay that is good to know

[03:09] *** grondilu left
[03:09] <samcv> m: "1F3F4 E0067 E0062 E0065 E006E E0067 E007F".split(' ')».parse-base(16).chrs.chars.say

[03:09] <camelia> rakudo-moar 41ac4b: OUTPUT: «1␤»

[03:10] <samcv> new emoji 5.0 Emoji_Tag_Sequence's for englad at least register correct number of characters

[03:10] *** Cabanossi joined
[03:10] *** mr-foobar joined
[03:10] <samcv> will need to re-asses next month once the documentation itself is finalized

[03:11] *** nbrown joined
[03:14] *** pytuger joined
[03:15] *** mcmillhj joined
[03:15] *** skids left
[03:19] *** mcmillhj left
[03:21] *** dj_goku left
[03:24] *** nbrown left
[03:28] <Geth> ¦ whateverable: 2f44142079 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 5 files

[03:28] <Geth> ¦ whateverable: Github no longer has .org domain

[03:28] <Geth> ¦ whateverable: 

[03:28] <Geth> ¦ whateverable: At least, it is no longer usable.

[03:28] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/2f44142079

[03:28] <Geth> ¦ whateverable: e85320c533 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/committable.t

[03:28] <Geth> ¦ whateverable: Slightly longer timeout for the test

[03:28] <Geth> ¦ whateverable: 

[03:28] <Geth> ¦ whateverable: Otherwise it flaps a bit

[03:28] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/e85320c533

[03:28] <Geth> ¦ whateverable: f1f8840807 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[03:28] <Geth> ¦ whateverable: Make sure committable does not answer on “what,”

[03:28] <Geth> ¦ whateverable: 

[03:28] <Geth> ¦ whateverable: I've fixed this in the past, but no test was added. The result is predictable.

[03:28] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/f1f8840807

[03:28] *** committable6 left
[03:29] *** committable6 joined
[03:29] *** ChanServ sets mode: +v committable6

[03:29] <mst> AlexDaniel++ # that commit message made me laugh

[03:32] <AlexDaniel> :)

[03:37] *** mcmillhj joined
[03:40] *** mcmillhj left
[03:40] *** AlexDaniel left
[03:42] *** mcmillhj joined
[03:47] *** gdonald left
[03:47] *** gdonald joined
[03:52] *** Cabanossi left
[03:55] *** Cabanossi joined
[04:05] *** wamba left
[04:06] *** rmusial joined
[04:14] *** dj_goku joined
[04:17] *** mcmillhj left
[04:21] *** adu joined
[04:25] <samcv> you know what would be fun. having a poll on p6weekly and see what OS people use

[04:31] *** mcmillhj joined
[04:39] *** Cabanossi left
[04:40] *** Cabanossi joined
[04:53] *** curan joined
[05:00] *** xtreak left
[05:00] *** xtreak_ joined
[05:00] *** adu left
[05:01] <TEttinger> what:

[05:01] <committable6> TEttinger, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Committable

[05:01] <evalable6> TEttinger, rakudo-moar 41ac4b4a3: OUTPUT: «»

[05:01] <bisectable6> TEttinger, On both starting points (old=2015.12 new=41ac4b4) the exit code is 0 and the output is identical as well

[05:01] <bisectable6> TEttinger, Output on both points: «»

[05:01] <TEttinger> oh.

[05:03] <what> what:

[05:03] <committable6> what, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Committable

[05:03] <evalable6> what, rakudo-moar 41ac4b4a3: OUTPUT: «»

[05:03] <bisectable6> what, On both starting points (old=2015.12 new=41ac4b4) the exit code is 0 and the output is identical as well

[05:03] <bisectable6> what, Output on both points: «»

[05:03] <what> m: say 'hi'

[05:03] <camelia> rakudo-moar 41ac4b: OUTPUT: «hi␤»

[05:06] <samcv> what what what

[05:06] <samcv> what: what:

[05:06] <evalable6> samcv, rakudo-moar 41ac4b4a3: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/5pC0n1Ep4w␤Confused␤at /tmp/5pC0n1Ep4w:1␤------> 03what:08⏏04<EOL>␤    expecting any of:␤        colon pair»

[05:06] <bisectable6> samcv, On both starting points (old=2015.12 new=41ac4b4) the exit code is 1 and the output is identical as well

[05:06] <bisectable6> samcv, Output on both points: «04===SORRY!04=== Error while compiling /tmp/ny9OpEr_G1␤Confused␤at /tmp/ny9OpEr_G1:1␤------> 03what:08⏏04<EOL>␤    expecting any of:␤        colon pair»

[05:06] <committable6> samcv, ¦6c (17 commits): «04===SORRY!04=== Error while compiling /tmp/gnEDX6VXgG␤Confused␤at /tmp/gnEDX6VXgG:1␤------> 03what:08⏏04<EOL>␤    expecting any of:␤        colon pair «exit code = 1»»

[05:06] <samcv> haha

[05:06] <samcv> what: sleep 10000000

[05:07] <evalable6> samcv, rakudo-moar 41ac4b4a3: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[05:07] <bisectable6> samcv, On both starting points (old=2015.12 new=41ac4b4) the exit code is 0, exit signal is 1 (SIGHUP) and the output is identical as well

[05:07] <bisectable6> samcv, Output on both points: ««timed out after 10 seconds»»

[05:07] *** eater left
[05:09] *** eater joined
[05:10] <committable6> samcv, «hit the total time limit of 180 seconds»

[05:10] <samcv> thanks guys. you tried you best

[05:11] *** wamba joined
[05:42] *** mcmillhj left
[05:44] *** wamba left
[05:46] *** mcmillhj joined
[05:51] *** mcmillhj left
[05:51] *** RabidGravy joined
[05:52] *** Cabanossi left
[05:52] *** asdfgh left
[05:55] *** Cabanossi joined
[05:55] *** mcmillhj joined
[05:56] *** luis left
[05:57] *** luis joined
[06:00] *** mcmillhj left
[06:05] *** domidumont joined
[06:05] *** lichtkind_ left
[06:06] *** mcmillhj joined
[06:10] *** mcmillhj left
[06:10] *** domidumont left
[06:11] *** domidumont joined
[06:17] *** mcmillhj joined
[06:20] *** xtreak_ left
[06:20] *** xtreak joined
[06:22] *** mcmillhj left
[06:25] *** xtreak left
[06:26] *** xtreak joined
[06:26] *** wamba joined
[06:28] *** mcmillhj joined
[06:28] *** Tonik joined
[06:32] *** xtreak left
[06:33] *** mcmillhj left
[06:34] *** xtreak joined
[06:49] *** mcmillhj joined
[06:54] *** mcmillhj left
[06:59] *** mcmillhj joined
[07:00] *** tojo joined
[07:04] *** mcmillhj left
[07:07] *** ParsonsNose joined
[07:10] *** mcmillhj joined
[07:11] *** tharkun joined
[07:12] *** ufobat joined
[07:13] <ufobat> aloah

[07:14] *** darutoko joined
[07:15] *** mcmillhj left
[07:15] <pytuger> my $greeting = "Hello ufobat"; $greeting.say

[07:15] <pytuger> a lot of people are afk. please do not feel ignored

[07:17] <ufobat> :D

[07:22] <samcv> aloha ufobat 

[07:24] *** andrzejku left
[07:31] *** rindolf joined
[07:32] *** salva0 joined
[07:32] *** mcmillhj joined
[07:37] *** bjz joined
[07:37] *** mcmillhj left
[07:42] *** gdonald left
[07:43] *** gdonald joined
[07:44] *** mcmillhj joined
[07:48] *** mcmillhj left
[07:50] *** wamba left
[07:53] *** wamba joined
[07:55] *** mcmillhj joined
[07:57] *** salva0 left
[07:59] *** mcmillhj left
[08:01] *** zakharyas joined
[08:06] *** mcmillhj joined
[08:06] *** dakkar joined
[08:10] *** mcmillhj left
[08:11] *** salva0 joined
[08:16] *** mcmillhj joined
[08:16] *** tokomer joined
[08:21] *** mcmillhj left
[08:23] *** wamba left
[08:26] *** mcmillhj joined
[08:31] *** mcmillhj left
[08:31] *** ParsonsNose left
[08:36] *** mcmillhj joined
[08:42] *** mcmillhj left
[08:47] *** mcmillhj joined
[08:52] *** mcmillhj left
[08:59] *** mcmillhj joined
[09:00] *** ChoHag joined
[09:02] *** xtreak left
[09:03] *** mcmillhj left
[09:08] *** domidumont left
[09:08] *** Cabanossi left
[09:10] *** Cabanossi joined
[09:10] *** mcmillhj joined
[09:15] *** mcmillhj left
[09:23] *** TEttinger left
[09:26] *** kyan left
[09:29] *** eater left
[09:31] *** mcmillhj joined
[09:36] *** mcmillhj left
[09:38] *** xtreak joined
[09:41] *** mcmillhj joined
[09:42] *** domidumont joined
[09:45] *** tojo left
[09:46] *** domidumont1 joined
[09:46] *** mcmillhj left
[09:49] *** domidumont left
[09:49] *** tokomer left
[09:53] *** mcmillhj joined
[09:53] *** lukaramu joined
[09:54] *** Cabanossi left
[09:55] *** Cabanossi joined
[09:57] *** mcmillhj left
[09:59] *** skids joined
[10:04] *** mcmillhj joined
[10:10] *** mcmillhj left
[10:15] *** mcmillhj joined
[10:21] *** mcmillhj left
[10:25] *** mcmillhj joined
[10:28] *** eater joined
[10:30] *** mcmillhj left
[10:32] *** labster left
[10:36] *** mcmillhj joined
[10:41] *** mcmillhj left
[10:43] *** wamba joined
[10:47] *** mcmillhj joined
[10:51] *** mcmillhj left
[10:52] *** nhywyll joined
[10:54] *** wamba left
[10:58] *** wamba joined
[10:58] *** mcmillhj joined
[11:03] *** mcmillhj left
[11:10] *** mcmillhj joined
[11:12] *** vendethiel left
[11:12] *** lichtkind joined
[11:13] *** vendethiel joined
[11:15] *** mcmillhj left
[11:20] *** nhywyll_ joined
[11:20] *** nhywyll left
[11:22] *** mcmillhj joined
[11:23] *** bjz_ joined
[11:25] *** bjz left
[11:27] *** mcmillhj left
[11:30] *** lukaramu left
[11:30] *** xtreak left
[11:32] *** domidumont1 left
[11:32] *** xtreak joined
[11:34] *** mcmillhj joined
[11:35] *** domidumont joined
[11:35] *** xtreak left
[11:39] *** DrEeevil is now known as AmazingPudding

[11:39] *** mcmillhj left
[11:44] *** nhywyll_ left
[11:46] *** domidumont1 joined
[11:47] *** mcmillhj joined
[11:49] *** domidumont left
[11:51] *** brrt joined
[11:51] *** brrt left
[11:52] *** mcmillhj left
[11:59] *** mcmillhj joined
[12:00] *** raschipi joined
[12:01] <moritz> \o

[12:01] <raschipi> hey

[12:01] * moritz back in Germany, but not back at home yet

[12:02] <DrForr> \n

[12:04] *** mcmillhj left
[12:05] *** AlexDaniel joined
[12:12] *** mcmillhj joined
[12:13] *** wamba left
[12:17] *** mcmillhj left
[12:18] *** lowbro joined
[12:18] <lowbro> what is this, a 1998 revival community?

[12:18] <DrForr> \m/_

[12:19] <jast> \r\n

[12:21] <lowbro> i see :)

[12:24] *** mcmillhj joined
[12:29] *** wamba joined
[12:31] *** mcmillhj left
[12:36] *** Aethor joined
[12:41] *** raschipi left
[12:44] *** mcmillhj joined
[12:53] *** Cabanossi left
[12:55] *** Cabanossi joined
[12:57] *** curan left
[12:57] *** AlexDaniel left
[12:58] * [Coke] now sees rn as http://cdn.collider.com/wp-content/uploads/beavis_and_butthead.jpg (but reversed)

[12:59] *** wamba left
[13:13] *** jonas1 joined
[13:13] *** bjz_ left
[13:20] *** Aethor left
[13:20] *** aborazmeh joined
[13:20] *** aborazmeh left
[13:20] *** aborazmeh joined
[13:21] *** xtreak joined
[13:22] *** raschipi joined
[13:24] *** bjz joined
[13:25] *** aborazmeh left
[13:31] *** Sound joined
[13:39] *** bjz left
[13:41] *** gdonald left
[13:42] *** gdonald joined
[13:53] *** Cabanossi left
[13:55] *** Cabanossi joined
[14:03] *** cdg joined
[14:06] *** cdg left
[14:07] *** cdg joined
[14:08] *** AlexDaniel joined
[14:09] *** skids left
[14:11] *** ChoHag left
[14:20] *** wamba joined
[14:21] <Geth> ¦ doc: cd136e7584 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/faq.pod6

[14:21] <Geth> ¦ doc: Small tweaks to FAQ about “good documentation”

[14:21] <Geth> ¦ doc: 

[14:21] <Geth> ¦ doc: Resolves #771.

[14:21] <Geth> ¦ doc: 

[14:21] <Geth> ¦ doc: Somebody beat me to it, but there were still some minor tweaks to

[14:21] <Geth> ¦ doc: make.

[14:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cd136e7584

[14:24] *** Chinese_soup left
[14:24] <timotimo> .seen leont

[14:24] <yoleaux> I saw leont 14 Dec 2016 10:19Z in #perl6: <leont> Also, I'm clearly not awake since I should have converted the while in a for

[14:25] *** unko joined
[14:25] *** unko is now known as Chinese_soup

[14:30] *** raschipi left
[14:36] *** AlexDaniel left
[14:36] *** AlexDaniel joined
[14:36] *** pmurias joined
[14:37] <pmurias> what does the + in -> +lol {} do?

[14:37] *** kent\n left
[14:38] *** araraloren joined
[14:38] <pmurias> ahh it seems to be is raw for ones without sigils

[14:41] *** kent\n joined
[14:44] <geekosaur> https://docs.perl6.org/type/Signature#Slurpy_(A.K.A._Variadic)_Parameters

[14:45] <geekosaur> or more specifically https://docs.perl6.org/type/Signature#Types_of_Slurpy_Array_Parameters

[14:46] *** AlexDaniel left
[14:51] *** iH2O joined
[14:53] *** iH2O left
[14:55] *** lowbro left
[15:03] *** st_elmo joined
[15:04] *** kurahaupo joined
[15:05] *** cdg_ joined
[15:07] *** Cabanossi left
[15:08] *** cdg left
[15:10] *** Cabanossi joined
[15:17] *** mcmillhj left
[15:18] *** mcmillhj_ joined
[15:19] *** kurahaupo_ joined
[15:21] *** kurahaupo left
[15:22] *** kurahaupo joined
[15:23] *** khw joined
[15:24] *** kurahaupo_ left
[15:24] *** alphah left
[15:35] *** MilkmanDan left
[15:37] *** MilkmanDan joined
[15:38] *** Cabanossi left
[15:40] *** Cabanossi joined
[15:42] *** alphah joined
[15:46] *** eroux joined
[15:46] *** domidumont joined
[15:48] *** domidumont1 left
[16:02] *** captain-adequate left
[16:03] *** lukaramu joined
[16:06] *** araraloren left
[16:06] *** culb left
[16:08] *** nightfrog joined
[16:09] *** wamba left
[16:10] *** xtreak left
[16:11] *** xtreak joined
[16:11] *** mcmillhj_ left
[16:14] *** haythem joined
[16:15] <ugexe> http://curt.tilmes.org/2017-GraphQL-PHLPM # was this ever posted to P6W? someone @work posted it in slack and I've never seen it

[16:16] *** haythem left
[16:23] *** xinming left
[16:23] *** xinming joined
[16:24] *** mcmillhj joined
[16:25] *** xtreak left
[16:25] *** xtreak joined
[16:28] *** dakkar left
[16:29] *** mcmillhj left
[16:30] <Voldenet> "Perl 6 implementation still restricted access"

[16:30] <Voldenet> such tease

[16:31] <Voldenet> oh look, a nice framework, but not for you obviously :-)

[16:42] *** mcmillhj joined
[16:45] <daxim> rakudo: use v6; grammar demo { rule TOP { <B> }; rule B { <A> 'x' 'y' | <C> }; rule A { '' | 'x' 'z' }; rule C { <C> 'w' | 'v' }; }; demo.parse('x z x y').say; demo.parse('v w w w w w w').say;

[16:46] <camelia> rakudo-moar dc8124: OUTPUT: «(timeout)｢x z x y｣␤ B => ｢x z x y｣␤  A => ｢x z ｣␤»

[16:46] <daxim> second string hangs the program

[16:46] <daxim> please explain why

[16:47] *** mcmillhj left
[16:48] *** st_elmo left
[16:51] *** st_elmo joined
[16:52] <geekosaur> daxim, because C is left recursive

[16:52] <geekosaur> the first thing it tries to do is parse a C

[16:55] *** gdonald left
[16:57] *** gdonald joined
[16:57] *** xzhao left
[16:59] *** xzhao joined
[17:00] *** xzhao left
[17:01] *** mcmillhj joined
[17:02] *** xzhao joined
[17:02] *** khw left
[17:04] *** sftp left
[17:05] * [Coke] hurls https://github.com/perl6/doc/issues/1084 for samcv if she wants it.

[17:08] *** zakharyas left
[17:18] *** raschipi joined
[17:25] *** nadim_ joined
[17:29] *** setty1 joined
[17:36] *** espadrine_ joined
[17:39] <DrForr> Say, does the semicolon in [1;2] have any formal name?

[17:40] <[Coke]> m: say "\c[GREEK QUESTION MARK]"

[17:40] <camelia> rakudo-moar b108c8: OUTPUT: «;␤»

[17:40] <DrForr> Doesn't look it, I'll stick with 'Dimension Separator'.

[17:40] <DrForr> Heh. Don't give me ideas :)

[17:40] * [ptc] was going to propose: "Dr Semicolon"

[17:41] <DrForr> No relation to Dr. Feelgood. I *deeply* hope.

[17:43] *** skids joined
[17:44] <[ptc]> No.  However, in less formal situations she prefers to be called "Ms Semicolon"

[17:45] <DrForr> Duly noted.

[17:45] <gfldex> DrForr: the semicolon is the constructor of a semilist. The semicolon itself doesn't have a special name in this case, the list does.

[17:46] <DrForr> Mmhmm, I found the description, nothing isnpiring there.

[17:46] <gfldex> DrForr: see http://design.perl6.org/S09.html#The_semicolon_operator

[17:46] <DrForr> *inspiring

[17:47] <DrForr> I was just working on indentation and remembered that ';' can occur in multidimensional lists and loop(...) constructs.

[17:48] * DrForr rocks to /My {Sharona,Bologna}/.

[17:50] *** khw joined
[17:51] *** raschipi left
[17:52] *** xtreak left
[17:52] *** xtreak joined
[17:58] *** xtreak left
[18:03] *** st_elmo left
[18:06] *** xtreak joined
[18:07] *** xtreak left
[18:08] *** Cabanossi left
[18:08] *** itaipu joined
[18:09] *** kurahaupo left
[18:10] *** Cabanossi joined
[18:12] *** cdg_ left
[18:12] *** domidumont left
[18:18] <Geth> ¦ doc: 0ac09ee68e | (Zoffix Znet)++ | doc/Type/Method.pod6

[18:18] <Geth> ¦ doc: Remove confused sentence

[18:18] <Geth> ¦ doc: 

[18:18] <Geth> ¦ doc: No idea what it even meant to say. lastcall *is* a sub; it does things when called.

[18:18] <Geth> ¦ doc: appears to? control statement? :shrug:

[18:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0ac09ee68e

[18:35] *** nhywyll joined
[18:35] <samcv> [Coke], i think the color of the comments has already been changed since then? or maybe it hasn't. will have to check the git logs. may have been a while since it's been altered.

[18:35] <samcv> i forget

[18:37] <samcv> yeah looks like the contrast could be bumped up

[18:39] *** setty1 left
[18:46] *** setty1 joined
[18:48] *** drrho_ left
[18:53] *** setty1 left
[18:54] *** Cabanossi left
[18:55] *** Cabanossi joined
[18:57] <DrForr> Okay, design question. I"ve got Perl6::Tidy as a class, which currently has both an indent-style *and* current indent-depth. So along comes the .tidy() method that uses indent-style, and messes with indent-depth. When someone calls .tidy() again, I want a bulletproof way of cleaning out indent-depth, without having to remember to clear the other state variables.

[18:57] *** AndyDee left
[18:57] <DrForr> *I've

[18:58] <El_Che> zef install Terminal::ANSIColor -> Failed to find dependencies: nqp

[18:58] <El_Che> mmm?

[18:59] <DrForr> I could put the state in a dependent class, but then unless I copy in the stuff that comes in from the creator (and potentially forget) the dependent class has to reference stuff outside it. Thoughts?

[19:00] <DrForr> Oh, make the child state stuff a dependent and rebless somehow.

[19:00] <El_Che> (it's trivial to print in color, but it's handy when there)

[19:00] <El_Che> Hi DrForr 

[19:01] *** AndyDee joined
[19:02] <DrForr> %greeting<TZ>;

[19:02] *** st_elmo joined
[19:04] *** setty1 joined
[19:05] <DrForr> Feh, I'll just make it a separate class and make sure that the preinitialized stuff is required and has no defaults. Feels like useless copying though.

[19:05] <[Coke]> El_Che: https://github.com/tadzik/Terminal-ANSIColor/blob/master/META.info doesn't contain the string 'nqp', so it shouldn't depend on it

[19:05] <[Coke]> can you gist the whole output?

[19:06] <[Coke]> (/me fixes my network so I can try the install locally)

[19:06] <[Coke]> worked fine here, no errors.

[19:07] *** khw left
[19:11] *** labster joined
[19:12] *** setty1 left
[19:13] *** setty1 joined
[19:17] <El_Che> [Coke]: https://gist.github.com/anonymous/5c0df6d23c3a592d608299acf5f50e57

[19:18] <El_Che> [Coke]: I'll install the latest rakudo in the machine in question for in case it's a resolved bug

[19:18] <[Coke]> I would update zef and your modules list.

[19:20] *** darutoko left
[19:20] <El_Che> yeah, I haven't run perl6 on this machine for a while

[19:20] <El_Che> updating zef

[19:20] <[Coke]> oh.

[19:21] <[Coke]> https://github.com/tadzik/perl6-Term-ANSIColor/blob/master/META.info#L8

[19:21] <[Coke]> Missed that.

[19:21] <[Coke]> that's a bug, and should be removed (there's no reference to 'nqp' in the t/ folder...)

[19:21] <[Coke]> (and even if, nqp is a builtin)

[19:22] <El_Che> yes, that what I thought

[19:22] <DrForr> https://www.youtube.com/watch?v=8xKn9bk9JAk # Egads.

[19:23] <El_Che> [Coke]: I'll change that in a fork to see how it goes

[19:23] <[Coke]> .seen tadzik

[19:23] <yoleaux> I saw tadzik 17 Mar 2017 17:58Z in #perl6: <tadzik> this channel wouldn't be the same without terrible puns

[19:25] <El_Che> [Coke]: you linked to the old module (TERM)

[19:25] *** haxmeister joined
[19:26] <El_Che> [Coke]: no nqp in the new one https://github.com/tadzik/Terminal-ANSIColor/blob/master/META.info

[19:26] <El_Che> let's try with the zef update

[19:27] <El_Che> failing tests there

[19:27] <El_Che> that's better :)

[19:28] <El_Che> I'll just print "\e" myself :)

[19:31] *** TEttinger joined
[19:32] *** haxmeister left
[19:32] *** haxmeister joined
[19:37] *** sufrostico left
[19:39] *** robertle joined
[19:39] <[Coke]> whoops, good catch

[19:40] *** sufrostico joined
[19:48] *** bdmatatu joined
[19:49] *** bjz joined
[19:52] *** cdg joined
[19:53] *** Peter_R left
[19:55] *** Peter_R joined
[19:57] *** bdmatatu left
[19:59] *** bjz left
[20:12] *** raschipi joined
[20:17] *** st_elmo left
[20:20] *** jonas1 left
[20:25] *** nhywyll left
[20:26] *** sufrostico left
[20:30] *** beginner joined
[20:30] *** sufrostico joined
[20:32] *** ufobat left
[20:39] *** lichtkind left
[20:42] *** labster left
[20:44] *** raschipi left
[20:47] *** bjz joined
[20:52] <timotimo> so ... do people on windows usually get a 64bit rakudo?

[20:53] *** Cabanossi left
[20:55] *** Cabanossi joined
[20:55] <timotimo> i guess they do

[20:56] <timotimo> wine: Bad EXE format for Z:\home\timo\Downloads\gtk3-runtime-3.22.9-2017-03-09-ts-win64.exe.

[20:56] <timotimo> >:(

[20:56] <El_Che> m: grammar Word { token TOP { <word> }; token word { <<\w+>> } }; my $w = Word.new; $w.parse("one two")

[20:56] <camelia> rakudo-moar b108c8: ( no output )

[20:57] <El_Che> what the silly part of what I am doing?

[20:57] <El_Che> I would have expected to match

[20:57] <timotimo> you need subparse for you rcode to work

[20:58] <timotimo> grammar matches are anchored to beginning and end

[20:58] <El_Che> first time I hear of subparse

[20:58] <El_Che> thx

[21:04] *** AlexDaniel joined
[21:05] *** sufrostico left
[21:06] *** dct joined
[21:07] *** RabidGravy left
[21:09] *** haxmeister left
[21:09] *** mst left
[21:10] *** mcmillhj left
[21:11] *** lostinfog joined
[21:11] *** lostinfog left
[21:14] *** evalable6 left
[21:14] *** evalable6 joined
[21:14] *** ChanServ sets mode: +v evalable6

[21:14] *** mst joined
[21:15] <DrForr> .tell lizmat before I forget, Perl6::Tidy does primitive indentation.

[21:15] <yoleaux> DrForr: I'll pass your message to lizmat.

[21:16] *** kurahaupo__ joined
[21:16] *** sufrostico joined
[21:18] *** bjz left
[21:20] <lizmat> .

[21:20] <yoleaux> 21:15Z <DrForr> lizmat: before I forget, Perl6::Tidy does primitive indentation.

[21:20] *** dct left
[21:20] <lizmat> Cool!  :-)

[21:22] <DrForr> I'm not all that happy with the outer loop, but it lets me do stuff like 'when Perl6::Balanced::Exit and .content eq "}"{}'

[21:25] *** mcmillhj joined
[21:25] *** buggable left
[21:25] *** ZofBot left
[21:25] *** buggable joined
[21:25] *** buggable_ joined
[21:26] *** ChanServ sets mode: +v buggable

[21:26] *** ChanServ sets mode: +v buggable_

[21:27] *** buggable_ left
[21:27] *** buggable left
[21:27] *** buggable joined
[21:27] *** ChanServ sets mode: +v buggable

[21:27] *** ZofBot joined
[21:27] *** ChanServ sets mode: +v ZofBot

[21:29] *** alphah left
[21:30] *** mst left
[21:30] *** mst joined
[21:30] *** mcmillhj left
[21:30] *** mcmillhj joined
[21:34] *** bjz joined
[21:35] *** mcmillhj left
[21:40] *** rpburkholder joined
[21:41] *** bjz left
[21:45] *** setty1 left
[21:45] *** Tonik left
[21:46] *** darthdeus joined
[21:47] *** mcmillhj joined
[21:48] *** itaipu left
[21:49] *** alphah joined
[21:50] <tadzik> I'm here now

[21:52] *** mst left
[21:52] *** mst joined
[21:52] *** mst left
[21:52] *** mst joined
[21:53] *** mcmillhj left
[21:56] <lizmat> tadzik o/

[21:56] <tadzik> o/

[21:56] <tadzik> I see that ANSIColor has metabugs

[21:58] *** cog_ left
[21:59] *** kurahaupo__ is now known as kurahaupo

[21:59] *** sufrostico left
[22:00] *** m44st4 is now known as maasta

[22:00] *** Sound left
[22:02] *** sufrostico joined
[22:04] *** mcmillhj joined
[22:05] *** lukaramu_ joined
[22:08] *** lukaramu left
[22:08] *** nadim_ left
[22:09] *** mcmillhj left
[22:10] *** mcmillhj joined
[22:12] *** Voldenet left
[22:12] *** alphah left
[22:13] *** lukaramu_ left
[22:14] *** sufrostico left
[22:14] *** mcmillhj left
[22:16] *** alphah joined
[22:17] *** Voldenet joined
[22:17] *** Voldenet left
[22:17] *** Voldenet joined
[22:24] *** sftp joined
[22:26] *** mcmillhj joined
[22:27] *** cog_ joined
[22:27] *** alphah left
[22:28] *** rindolf left
[22:31] *** mcmillhj left
[22:32] *** Blimeo joined
[22:33] <Blimeo> p6: say 4;

[22:33] <camelia> rakudo-moar 5aebaf: OUTPUT: «4␤»

[22:33] *** Blimeo left
[22:33] <AlexDaniel> m: say ‘hello!’

[22:33] <camelia> rakudo-moar 5aebaf: OUTPUT: «hello!␤»

[22:34] *** espadrine_ left
[22:34] *** labster joined
[22:35] *** mst left
[22:35] *** mst joined
[22:35] *** mst left
[22:35] *** mst joined
[22:35] * TimToady wonders what mode 4 is for the botnet...

[22:43] *** Possum joined
[22:43] *** eroux left
[22:44] *** mst left
[22:44] *** mst joined
[22:44] *** mst left
[22:44] *** mst joined
[22:44] <AlexDaniel> argh… this gumbo issue is really annoying

[22:45] *** beginner left
[22:46] *** alphah joined
[22:51] *** cdg left
[22:56] *** mst left
[22:56] *** mst joined
[22:57] *** alphah left
[23:08] *** eyck left
[23:08] *** eyck joined
[23:09] *** mst left
[23:09] *** mst joined
[23:13] *** mcmillhj joined
[23:17] *** mst left
[23:17] *** mst joined
[23:18] *** mcmillhj left
[23:18] *** mst left
[23:18] *** mst joined
[23:18] *** cyphase left
[23:20] *** Voldenet left
[23:22] *** mst left
[23:22] *** mst joined
[23:22] *** Cabanossi left
[23:23] *** cyphase joined
[23:23] *** mst left
[23:23] *** mst joined
[23:24] *** BenGoldberg joined
[23:25] *** Cabanossi joined
[23:25] *** pmurias left
[23:25] *** Voldenet joined
[23:25] *** mcmillhj joined
[23:26] *** Voldenet left
[23:26] *** Voldenet joined
[23:30] *** obarb is now known as brabo

[23:30] *** mcmillhj left
[23:37] *** cyphase left
[23:42] *** cyphase joined
[23:43] *** mst left
[23:43] *** mst joined
[23:44] *** mcmillhj joined
[23:49] *** mcmillhj left
[23:50] *** geekosaur left
[23:50] *** kurahaupo left
[23:50] *** cyphase left
[23:51] *** geekosaur joined
[23:52] *** geekosaur left
[23:55] *** geekosaur joined
[23:55] *** cyphase joined
[23:55] <samcv> AlexDaniel, how2customkeyboardmap

[23:56] <AlexDaniel> samcv: I simply create my own file in /usr/share/X11/xkb/symbols/

[23:57] <samcv> can i see yours?

[23:59] <AlexDaniel> samcv: https://gist.github.com/AlexDaniel/6e33353eef43f239ff0a26859c25d539

