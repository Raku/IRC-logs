[00:05] *** cpage_ joined
[00:06] *** mcmillhj_ joined
[00:07] *** mcmillhj left
[00:10] *** AlexDaniel left
[00:10] *** labster joined
[00:10] *** labster left
[00:10] *** labster joined
[00:14] *** devmikey left
[00:21] <labster> m: rx/<$y=$x>/

[00:21] <camelia> rakudo-moar a9a161: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' ␤at <tmp>:1␤------> 3rx/<$y7⏏5=$x>/␤»

[00:22] *** mcmillhj joined
[00:23] *** lookatme joined
[00:24] <lookatme> morning. o/

[00:24] <BenGoldberg> Evening :)

[00:25] <lookatme> :)

[00:28] *** pierre_ joined
[00:32] *** cyphase left
[00:34] *** ribasushi left
[00:38] *** ribasushi joined
[00:38] *** cdg left
[00:43] *** kyan left
[00:55] *** kyan joined
[00:57] *** pb122 joined
[00:58] *** pb122 left
[00:58] *** pb122 joined
[00:58] *** pb122-two left
[01:00] *** pb122 left
[01:00] *** pb122 joined
[01:05] *** jbolden1517 left
[01:08] *** tyil left
[01:11] *** aborazmeh joined
[01:11] *** aborazmeh left
[01:11] *** aborazmeh joined
[01:12] *** labster left
[01:13] *** tyil joined
[01:14] *** mcmillhj_ left
[01:16] *** Actualeyes joined
[01:21] *** japhdotcom joined
[01:24] <haxmeister> I need a simple module for parsing HTML.. any suggestions?

[01:30] *** astj_ joined
[01:30] *** astj left
[01:35] <MasterDuke_> inline::python and beautifulsoup?

[01:36] <haxmeister> gross

[01:36] <haxmeister> how could you say that word here..lol.. j/k

[01:36] <haxmeister> I want pure perl6

[01:36] <haxmeister> looking at WWW

[01:39] *** pierre_ left
[01:39] *** pierre_ joined
[01:40] *** aborazmeh left
[01:41] <lookatme> haxmeister, Have you see HTTP::Paser already ?

[01:42] <lookatme> sorry..

[01:42] <lookatme> HTML::Parser

[01:42] <haxmeister> that yours?

[01:43] *** pierre_ left
[01:43] <lookatme> No

[01:43] <haxmeister> https://github.com/tokuhirom/p6-HTTP-Parser

[01:44] *** pierre_ joined
[01:45] <haxmeister> have you used it?

[01:45] *** ilbot3 left
[01:47] <lookatme> No, I mean HTML::Parser. But it's just a role, not implementation :(

[01:48] <haxmeister> ah man

[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:48] <haxmeister> I wonder if an XML parser would pick up html

[01:49] <lookatme> Why they named a role HTTP::Parser...

[01:49] <BenGoldberg> Only if that html happens to be xhtml

[01:49] <haxmeister> would be nice to get html into a list type structure like json-tiny does so nicely

[01:50] *** geekosaur left
[01:51] *** aborazmeh joined
[01:51] *** aborazmeh left
[01:51] *** aborazmeh joined
[01:51] <haxmeister> guess I could just do it the long way.. regex is ridiculously fun anyway..lol

[01:51] <BenGoldberg> Why does it have to be pure perl6?

[01:51] <BenGoldberg> What's wrong with a library binding, like Gumbo?

[01:52] <lookatme> Unfortunately, it's not have a HTML parser module yet.

[01:52] <haxmeister> nothing wrong with it.. just preference really.. easier to read/understand documentation and code

[01:53] *** geekosaur joined
[01:53] <BenGoldberg> For that matter, what's wrong with writing: use Inline::Perl5; use Mojo::DOM :from<Perl5>;

[01:54] <haxmeister> I know... but I don't study perl5 or python

[01:54] *** colomon_ joined
[01:54] <lookatme> Yeah, just like me

[01:54] <lookatme> I don't know many about perl5

[01:55] <lookatme> as well as python.

[01:55] *** aborazmeh left
[01:55] *** colomon left
[01:55] *** colomon_ is now known as colomon

[01:56] <lookatme> haxmeister, have you thought write a that module yourself

[01:56] <haxmeister> I went through some tuts on python and bought a book.. but I need my brackets.. plus I like functional style and nesting functions.. none of which is great in python

[01:57] <haxmeister> python is the opposite of me.. I like perl because I can address the problem the way I understand it in my head

[01:57] <lookatme> New parser with Perl 6 grammar, wonderful

[01:57] <haxmeister> even if it's les elegant than the next guy

[01:58] <haxmeister> I need to learn grammars.. 

[01:58] <haxmeister> still learning

[01:58] <haxmeister> wonder about this: https://github.com/zoffixznet/perl6-WWW

[01:59] <samcv> why didn't we bump the subversion for nqp and moarvm again...

[02:00] <lookatme> It's just a HTTPs client.

[02:00] <samcv> cause 2017.04.3 requires a newer version of moarvm and nqp, and moarvm and nqp only have tags up to 2017.04.3

[02:00] <BenGoldberg> It parses json too.  Just not html ;)

[02:01] *** kurahaupo_ left
[02:01] *** kurahaupo_ joined
[02:03] *** aborazmeh joined
[02:03] *** aborazmeh left
[02:03] *** aborazmeh joined
[02:07] <haxmeister> reading about grammars.. maybe I'll make one for HTML, or try.. it could be my first attempt

[02:13] *** pb122 left
[02:13] <BenGoldberg> Reading the w3 spec for how to properly parse html5 makes my brain hurt.

[02:16] *** noganex_ joined
[02:19] *** noganex left
[02:20] <haxmeister> there could be some value in just pulling certain elements from an HTML document too

[02:20] <haxmeister> like making HTML::tables... just pulls the tables out of any html document makes a nice data structure out of them

[02:21] *** Cabanossi left
[02:22] *** aborazmeh left
[02:22] <haxmeister> I know of many many websites that have large amounts of valuable data in tables

[02:23] *** Cabanossi joined
[02:23] <lookatme> Em.

[02:23] <haxmeister> could even make it only pull tables with a given id="whatever" or any attribute specifically

[02:23] <haxmeister> that actually sounds fun

[02:25] <lookatme> yeah, you can 

[02:27] <haxmeister> or divs.. or divs with a specific attribute.. 

[02:28] <haxmeister> that all might be simpler for a noob like me.. but this grammar tut is hard to get my head around

[02:28] *** cyphase joined
[02:30] <haxmeister> https://docs.perl6.org/language/grammar_tutorial doesn't give an example data file to show what the text we are parsing looks like.. makes it tough to follow

[02:32] <lookatme> You can ref some module source code

[02:32] <haxmeister> it's gotta be really dumb... like entry level grammar stuffs

[02:32] <haxmeister> new concepts are hard

[02:36] <haxmeister> hashed filenames?... Larry Wall your fired...lol j/k

[02:38] *** Dee22 joined
[02:40] *** AndyDee left
[02:43] <lookatme> Write some sample, help to understand grammar concept

[02:50] *** labster joined
[02:52] *** cyphase left
[02:57] *** cyphase joined
[02:58] *** avalokite joined
[03:00] *** avalokite left
[03:12] *** pierre_ left
[03:13] *** lookatme left
[03:13] *** mcmillhj left
[03:14] *** mcmillhj joined
[03:15] *** pierre_ joined
[03:17] *** BenGoldberg left
[03:30] *** lookatme joined
[03:33] *** Cabanossi left
[03:36] *** Cabanossi joined
[03:38] *** kurahaupo joined
[03:39] *** kurahaupo_ left
[03:56] *** cyphase left
[04:01] *** cyphase joined
[04:11] *** colomon left
[04:11] *** khw left
[04:16] *** pierre_ left
[04:22] *** skids left
[04:27] *** pierre_ joined
[04:33] *** Cabanossi left
[04:35] *** lookatme left
[04:36] *** Cabanossi joined
[04:39] *** colomon joined
[04:46] *** cpage_ left
[04:48] *** cpage_ joined
[04:49] *** curan joined
[04:50] *** cpage__ joined
[04:50] *** wamba joined
[04:50] *** cpage_ left
[04:50] *** cpage__ is now known as cpage_

[04:56] *** kyan left
[05:00] *** rurban joined
[05:04] *** pierre_ left
[05:04] *** rurban left
[05:08] *** lowbro joined
[05:08] *** lowbro left
[05:08] *** lowbro joined
[05:12] <perlawhirl> is there a way to declare that all arguments to a sub should be the same type.

[05:12] <perlawhirl> so I don't have to do things like: sub foo( Long::Class::Name $x, Long::Class::Name $y, Long::Class::Name $z ) { ... }

[05:12] <perlawhirl> Slightly less typing could be: sub foo( $x, $y, $z where all($x, $y, $z) ~~ Long::Class::Name ) { ... }

[05:13] <perlawhirl> but was hoping for something along the lines of: sub foo( Long::Class::Name( $x, $y, $z ) ) { ... }

[05:19] *** rurban joined
[05:21] *** sammers joined
[05:26] *** xtreak joined
[05:32] *** xtreak left
[05:33] *** itaipu left
[05:35] *** Cabanossi left
[05:36] *** Cabanossi joined
[05:37] *** wigner joined
[05:45] *** domidumont joined
[05:47] *** anton_p joined
[05:47] *** nadim joined
[05:50] *** domidumont left
[05:50] *** domidumont joined
[05:53] *** domidumont left
[05:54] *** domidumont joined
[05:57] *** lizmat_ is now known as lizmat

[06:01] *** rurban1 joined
[06:05] *** rurban left
[06:09] *** kent\n left
[06:13] *** pierre_ joined
[06:18] *** vimal2012 joined
[06:18] *** mcmillhj_ joined
[06:21] *** vimal2012 left
[06:21] *** vimal2012 joined
[06:22] *** astj_ left
[06:22] *** astj joined
[06:23] *** lizmat left
[06:23] *** mcmillhj_ left
[06:24] *** wamba left
[06:24] *** vimal2012 left
[06:25] *** vimal2012 joined
[06:28] *** geekosaur left
[06:28] *** vimal2012 left
[06:29] *** vimal2012 joined
[06:30] *** geekosaur joined
[06:32] *** vimal2012 left
[06:32] *** vimal2012 joined
[06:35] *** xtreak joined
[06:36] *** vimal2012 left
[06:36] *** vimal2012 joined
[06:36] *** espadrine joined
[06:38] *** ufobat joined
[06:40] *** vimal2012 left
[06:40] *** vimal2012 joined
[06:44] *** vimal2012 left
[06:44] *** vimal2012 joined
[06:48] *** vimal2012 left
[06:48] *** vimal2012 joined
[06:51] *** astj left
[06:51] *** vimal2012 left
[06:52] *** vimal2012 joined
[06:53] *** parv joined
[06:55] *** vimal2012 left
[06:56] *** vimal2012 joined
[06:59] *** vimal2012 left
[06:59] *** labster left
[07:00] *** vimal2012 joined
[07:03] *** vimal2012 left
[07:04] *** vimal2012 joined
[07:04] *** lizmat joined
[07:04] *** xtreak left
[07:06] *** astj joined
[07:07] *** vimal2012 left
[07:07] *** vimal2012 joined
[07:09] *** rindolf joined
[07:11] *** vimal2012 left
[07:11] *** vimal2012 joined
[07:12] <japhdotcom> anyone have a little document/tutorial on debugging nqp? 

[07:13] *** wamba joined
[07:15] *** vimal2012 left
[07:15] *** xtreak joined
[07:15] *** vimal2012 joined
[07:15] *** labster joined
[07:16] *** ChoHag joined
[07:17] *** J0001 joined
[07:17] <J0001> hi

[07:17] <J0001> :)

[07:18] *** J0001 left
[07:19] *** vimal2012 left
[07:19] *** vimal2012 joined
[07:22] *** vimal2012 left
[07:23] *** vimal2012 joined
[07:24] <japhdotcom> for example, in Perl6/Grammar token statement_control:sym<use> there is <version>... Can I access <version> from Perl6::Actions method statement_control:sym<use>($/)?

[07:25] *** xtreak left
[07:25] *** xtreak joined
[07:26] *** vimal2012 left
[07:27] *** vimal2012 joined
[07:27] <moritz> japhdotcom: that's in $<version>

[07:27] *** chee left
[07:27] <moritz> in the action method

[07:29] *** lookatme joined
[07:30] *** xtreak left
[07:30] *** vimal2012 left
[07:30] *** kurahaupo left
[07:31] *** espadrine left
[07:31] *** vimal2012 joined
[07:31] *** kurahaupo joined
[07:34] *** kurahaupo_ joined
[07:34] *** vimal2012 left
[07:35] *** vimal2012 joined
[07:35] *** kurahaupo__ joined
[07:37] *** kurahaupo left
[07:38] *** vimal2012 left
[07:38] <japhdotcom> moritz, in the code i'm testing... i have use Terminal::ANSIColor:ver('0.2')... yet in the     method statement_control:sym<use>($/) {

[07:38] <japhdotcom>         nqp::say( $<version> );

[07:38] <japhdotcom>  is returning blank...?

[07:38] *** vimal2012 joined
[07:38] *** kurahaupo_ left
[07:39] *** kurahaupo joined
[07:41] *** kurahaupo__ left
[07:42] *** vimal2012 left
[07:42] *** vimal2012 joined
[07:43] *** vimal2012 left
[07:46] <moritz> japhdotcom: check with --target=parse if it actually parses the :ver('0.2') as <version>

[07:46] *** xtreak joined
[07:47] <moritz> because to me, it looks like the grammar path you're looking at is the one that parses "use v6;"

[07:48] <moritz> and the :ver('0.2') might be part of the module name

[07:49] *** kurahaupo left
[07:49] <daxim> <https://github.com/ugexe/zef/issues/161>  what's the programming language (runtime) got to do with it? to me, this is clearly an application level issue. what do yall think?

[07:50] *** Cabanossi left
[07:51] *** xtreak left
[07:51] *** Cabanossi joined
[07:52] *** kurahaupo joined
[07:53] *** kurahaupo left
[07:53] *** kurahaupo_ joined
[07:53] <moritz> zef presumably uses MAIN() subs for option parsing, so it's a rakudo/design issue indeed

[07:53] <moritz> (and we don't have a glob() yet either)

[07:56] *** kurahaupo__ joined
[07:57] *** kurahaupo__ left
[07:58] *** japhdotcom left
[08:00] *** kurahaupo_ left
[08:03] *** matt_ joined
[08:03] *** matt_ is now known as Guest15094

[08:08] *** zakharyas joined
[08:08] *** Guest15094 is now known as matt_

[08:12] <lookatme> haxmeister, I made a simple grammar for html format https://gist.github.com/araraloren/379f1c8708325f0544697b2ccf602c70

[08:13] <lookatme> You can modify the html file, see how it works.

[08:26] *** robertle_ left
[08:34] *** Ven joined
[08:34] *** Ven is now known as Guest33797

[08:37] *** AlexDaniel joined
[08:38] <AlexDaniel> huggable: parse HTML

[08:38] <huggable> AlexDaniel, nothing found

[08:38] <AlexDaniel> huggable: parse HTML :is: Use Gumbo. https://github.com/Skarsnik/perl6-gumbo

[08:38] <huggable> AlexDaniel, Added parse HTML as Use Gumbo. https://github.com/Skarsnik/perl6-gumbo

[08:44] *** rurban joined
[08:45] *** rurban left
[08:47] *** rurban1 left
[08:47] *** japhdotcom joined
[08:49] *** Cabanossi left
[08:51] *** Cabanossi joined
[08:52] *** pytuger joined
[08:52] *** pytuger left
[08:52] *** kaare__ left
[09:01] *** labster left
[09:02] *** wamba left
[09:03] *** japhdotcom left
[09:04] *** japhdc joined
[09:07] <japhdc> moritz, you are correct... when checking --target=parse, I was comparing it to the wrong grammar path... looks like it gets parsed as something like... identifier "ver" EXPR value 0.2 is 

[09:08] *** rindolf left
[09:09] *** xtreak joined
[09:09] *** xtreak left
[09:10] <japhdc> moritz, from inside method statement_control:sym<use>($/) the farthest down available parse item is $<module_name> which gets further parsed... from inside the :sym<use>($/) method is there a way to access those further down components?

[09:12] *** japhdc left
[09:13] *** japhdc joined
[09:13] *** xtreak joined
[09:14] *** rindolf joined
[09:15] *** japhdc left
[09:15] *** japhdc joined
[09:18] *** xtreak left
[09:25] *** robertle joined
[09:27] *** parv left
[09:32] *** pecastro left
[09:33] *** japhdc left
[09:34] *** japhdc joined
[09:38] *** lookatme left
[09:42] <moritz> japhdc: I'd hope that $<module_name>.ast has the module name dissected into a usable object somehow

[09:43] <moritz> japhdc: you should avoid digging deep down in nested parse trees in action methods, because that causes tight coupling of the action methods to the grammar structure

[09:45] <japhdc> moritz: i'm trying to implement a very friendly autocompletion function... using the action methods as starting points for building a list of what is available seems like the most direct path... unless you have other ideas?

[09:46] <moritz> japhdc: no, seems fine

[09:47] <moritz> japhdc: I'm just warning against digging too deep down into the parse tree from action methods

[09:47] <moritz> avoid more than one level where possible/practical

[09:47] *** TEttinger left
[09:48] *** robertle left
[09:49] <japhdc> moritz: could you give an example or two of what I can get out of $<module_name>.ast ? 

[09:51] <japhdc> unfortunately it doesn't seem that "dd" will work inside of nqp... so once you have an object that you aren't familiar with, any shortcuts to inspecting it?

[09:52] <moritz> you can find out what type it is with $obj.HOW.name($obj)

[09:53] <moritz> but I'm not aware of a general dumper in p6 land

[09:53] <moritz> though others (possibly in #perl6-dev) might have better tricks

[09:53] *** cpage_ left
[09:54] *** cpage_ joined
[09:54] *** cyphase left
[09:55] *** robertle joined
[10:02] *** wigner left
[10:05] *** Guest33797 left
[10:05] *** Cabanossi left
[10:06] *** Cabanossi joined
[10:07] *** Ven joined
[10:07] *** Ven is now known as Guest5904

[10:11] *** astj left
[10:14] *** japhdc left
[10:14] *** cyphase joined
[10:17] <Geth> ¦ doc: 2af18ad4d3 | (Zoffix Znet)++ | CONTRIBUTING.md

[10:17] <Geth> ¦ doc: Remove Inline::Python stuff

[10:17] <Geth> ¦ doc: 

[10:17] <Geth> ¦ doc: Fixes #1301

[10:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2af18ad4d3

[10:18] *** japhdc joined
[10:22] *** kaare__ joined
[10:28] <tadzik> m: say "foo" ~~ s/foo/bar/r; # how do I do this in P6 again?

[10:28] <camelia> rakudo-moar a9a161: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say "foo" ~~ s/foo/bar/7⏏5r; # how do I do this in P6 again?␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        sta…»

[10:29] *** lowbro left
[10:29] <tadzik> oh, subst.

[10:31] *** astj joined
[10:33] <lizmat> yup

[10:36] *** astj left
[10:37] <tadzik> oh dear. Segmentation fault, in MVM_profile_instrumented_mark_data

[10:37] *** pierre_ left
[10:38] *** wamba joined
[10:38] *** Guest5904 left
[10:38] *** astj joined
[10:39] *** nowan left
[10:41] <nine> .tell skids with https://github.com/skids/perl6sum/commit/c2a8ac662b0c10dfc85ae05eec674e7be2702906 you removed the META.info, but the META6.json does not have a source-url, so the module is no longer installable

[10:41] <yoleaux> nine: I'll pass your message to skids.

[10:42] *** curan left
[10:42] *** nowan joined
[10:45] *** Ven_ joined
[10:49] *** nowan left
[10:50] *** Cabanossi left
[10:50] <tadzik> samcv++ Zoffix++ # tons of good PRs for my METAfiles :)

[10:51] *** Cabanossi joined
[10:52] *** nowan joined
[10:54] *** Zoffix joined
[10:54] <Zoffix> nine: yeah, it's there in support -> source

[10:56] <Zoffix> And it fetches just fine

[10:57] <Zoffix> .tell skids the META is fine, but there are test failures due to "P6M Merging GLOBAL symbols failed: duplicate definition of symbol $synopsis"

[10:57] <yoleaux> Zoffix: I'll pass your message to skids.

[10:58] <nine> Zoffix: so is support/url the official fallback for source-url?

[10:58] <nine> Zoffix: why do we have 2 fields for essentially the same?

[11:00] *** japhdc left
[11:00] <Zoffix> nine: support -> source is the "official" field and "source-url" is the ecosystem extension. Why have two? I guess same reason we had META.info vs META6.json; someone used the pre-Christmas format and someone else just copied it over

[11:11] *** pmurias joined
[11:11] <Geth> ¦ ecosystem: ae420f0163 | (Tadeusz Sośnierz)++ (committed using GitHub Web editor) | META.list

[11:11] <Geth> ¦ ecosystem: Remove Task::Star

[11:11] <Geth> ¦ ecosystem: 

[11:11] <Geth> ¦ ecosystem: It was constantly outdated, and more confusing than helpful apparently.

[11:11] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/ae420f0163

[11:14] *** cygx joined
[11:15] <cygx> I (incorrectly?) assumed source-url is for programs and support/source is for humans...

[11:16] <cygx> first time I've heard or support/url

[11:17] <tadzik> source-url evolved from repo-url, which was the name I made up back in neutro days, I think

[11:17] <tadzik> then support/source I think was adopted from the module synopsis?

[11:20] <pmurias> where is our META6.json spec?

[11:21] <tadzik> https://design.perl6.org/S22.html#META6.json it's here

[11:21] <tadzik> it says that it may be out of date and to read doc.perl6.org instead, but doc.perl6.org links to this :P

[11:21] <pmurias> it has an outdated warning

[11:22] <Zoffix> pmurias: all pages have that warning

[11:22] <tadzik> "Warning: This warning may be out of date"

[11:22] <Zoffix> The only thing outdated about S22 is the resources format IIRC

[11:22] <ugexe> s22 still references CompUnitRepository

[11:23] <ugexe> not CompUnit::Repository

[11:23] <Zoffix> None of the META stuff is in roast to the best of my knowledge

[11:24] <Zoffix> Nad there's an open doc Issue about META; about poor information on what is "spec" and proper

[11:24] * Zoffix nominates ugexe to fix all that :)

[11:24] <pmurias> the modules guide mentions source-url and the S22 doesn't

[11:24] <ugexe> because source-url is an ecosystem spec field

[11:25] <Zoffix> That Issue: https://github.com/perl6/doc/issues/764

[11:25] *** cibs left
[11:25] *** Zoffix left
[11:26] *** cibs joined
[11:27] <pmurias> what's an ecosystem spec field?

[11:27] *** pecastro joined
[11:28] *** wamba left
[11:28] *** lowbro joined
[11:28] *** lowbro left
[11:28] *** lowbro joined
[11:29] <tadzik> hm, https://github.com/perl6/ecosystem/blob/master/server/updatelist.pl is still Perl 5

[11:29] <tadzik> what an opportunity :)

[11:34] *** Cabanossi left
[11:34] *** japhdc joined
[11:35] *** Ven_ left
[11:36] *** Cabanossi joined
[11:37] *** grondilu left
[11:37] <ugexe> pmurias: consider putting a module on cpan. you probably want source-url to be whatever you said it was, and let pause/cpan fill in the source-url with wherever it provides it

[11:38] *** cpage_ left
[11:38] <ugexe> er, you probably want "support" : { "source" : " ..." } to be whatever you declared rather

[11:39] <tadzik> I'm thinking about building something for modules.perl6.org that looks at http://modules.perl6.org/update.log and has a place for the module authors to easily look up deficiencies in their modules. Does something like that exist already?

[11:42] <Geth> Swapped META.info → META6.json in 13 dists in https://github.com/perl6/ecosystem/commit/a709bf360f

[11:44] <tadzik> nine: this should fix Acme::Meow :)

[11:54] <tadzik> so ecosystem has update.pl, updatelist.pl and server/updatelist.pl

[11:54] <tadzik> and modules.perl6.org has its own update-modules.perl6.org, with a separate codebase for that

[11:54] <tadzik> so are the ecosystem scripts even used anywhere at this point?

[11:54] <tadzik> (any of the three? :))

[11:56] *** japhdc left
[12:00] *** cpage_ joined
[12:01] <moritz> yes

[12:02] <moritz> server/updatelist.pl is used for updating http://ecosystem-api.p6c.org/

[12:03] <moritz> otoh I have no idea if anybody still uses http://ecosystem-api.p6c.org/

[12:03] <moritz> because panda seems to be mostly dormant, and iirc zef has its own thing

[12:03] <tadzik> aha

[12:03] <tadzik> nodnod

[12:05] <moritz> winkwink

[12:07] <pmurias> so source-url would point not to the repo but to the place you can fetch the module?

[12:08] *** japhdc joined
[12:08] <tadzik> that's the idea, I think

[12:10] <cygx> perhaps also of interest: https://github.com/jonathanstowe/META6/blob/master/lib/META6.pm#L225..L246

[12:10] *** salios left
[12:11] <pmurias> it would be great to have everything specced down, you can't expect anybody to conform to stuff that's not written down

[12:12] *** salios joined
[12:19] <nine> If only there were a sort of conference where the relevant people could sit down and get this nailed...

[12:19] <timotimo> :D

[12:22] <El_Che> nine: you're famous

[12:22] <El_Che> I saw your pic on twitter

[12:22] <El_Che> It looked like you were presiding over a religious service

[12:22] <El_Che> did you?

[12:23] <El_Che> https://pbs.twimg.com/media/C_namDvXcAAyyWV.jpg:large

[12:28] <nine> El_Che: haha :)

[12:29] *** japhdc left
[12:29] *** japhdc joined
[12:33] <pmurias> nine: any Perl 6ers coming to The Perl Conference in Amsterdam? ;)

[12:33] *** wamba joined
[12:34] *** Ven joined
[12:34] *** Ven is now known as Guest28231

[12:34] *** ChoHag left
[12:35] *** Cabanossi left
[12:35] <eythian> oh, I need to see about going to that

[12:36] *** Cabanossi joined
[12:37] <El_Che> it would be great to have some pricing info, so I can start to convince work to send me :)

[12:38] <nine> pmurias: I definitly am going to

[12:38] <tadzik> I think I'm going too

[12:38] <nine> \o/

[12:38] <eythian> I live in Amsterdam, so definitely should.

[12:39] <El_Che> eythian: you have zero excuse now :)

[12:39] <eythian> https://sha2017.org/ this finishes the day prior, it'll be quite a week all up :)

[12:43] *** ChoHag joined
[12:44] <El_Che> eythian: The last few years I seem to combine FOSDEM and cfgmgmtcamp. Pretty tired after those 4 days

[12:44] *** sena_kun joined
[12:44] <eythian> I also have a beer festival to go to the day after the perl conf, so that'll be my relaxation...

[12:47] <nine> Found another one! Text::Tabs uses source-uri instead of source-url in it's META6.json

[12:48] <sena_kun> nine, I'll fix it now, thanks.

[12:51] *** Guest28231 left
[12:51] *** mcmillhj_ joined
[12:53] *** Ven_ joined
[12:53] *** wamba left
[12:53] * nine fired of PRs for all remaining unfetchable dists

[12:55] *** mcmillhj left
[12:56] <tadzik> ugexe: https://gist.github.com/tadzik/50c0ee877f9335f296f4111aba168b86 that's the same thing that happened to me yesterday. Fresh rakudo, fresh zef

[12:56] *** mcmillhj_ is now known as mcmillhj

[12:56] <tadzik> it doesn't seem like it realized MIME::Base64 is LWP's dependency

[12:57] <tadzik> and then 'zef install LWP::Simple' says 'All candidates are currently installed'

[12:57] * pmurias has hotel/flight to TPC booked, I'll very likely submit a rakudo.js talk

[12:58] <tadzik> yay!

[12:58] * stmuk pours one out for Task::Star

[12:59] * tadzik plays the sad trumpet

[13:00] <timotimo> m: use Test; sub fails { fail "oh no" }; isa-ok fails, Failure, "fails fails"; use nqp; nqp::force_gc(); nqp::force_gc();

[13:00] <camelia> rakudo-moar 0f400e: OUTPUT: «ok 1 - fails fails␤»

[13:00] <timotimo> oh

[13:00] <timotimo> m: use Test; sub fails { fail "oh no" }; isa-ok fails, Failure, "fails fails"; use nqp; nqp::force_gc(); nqp::force_gc(); nqp::force_gc();

[13:00] <camelia> rakudo-moar 0f400e: OUTPUT: «ok 1 - fails fails␤»

[13:00] <tadzik> I'm thinking about making Task::Aster that'll just contain a subjective list of cool stuff

[13:00] <timotimo> ...

[13:00] <timotimo> m: use Test; sub fails { fail "oh no" }; { isa-ok fails, Failure, "fails fails"; }; use nqp; nqp::force_gc(); nqp::force_gc(); nqp::force_gc();

[13:00] <camelia> rakudo-moar 0f400e: OUTPUT: «ok 1 - fails fails␤»

[13:00] <timotimo> :\

[13:01] <Geth> ¦ ecosystem: 2c20a921f3 | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[13:01] <Geth> ¦ ecosystem: Remove Ecosystem-Test

[13:01] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/2c20a921f3

[13:02] <stmuk> Zoffix's camelion has a cool logo :)

[13:02] <stmuk> "logoware" :)

[13:02] <timotimo> anyway, what i was trying to demonstrate was that isa-ok won't disarm failures

[13:03] <stmuk> if he doesn't get sued by suse

[13:03] <timotimo> should we a) make isa-ok check .defined on objects that get passed in, b) make method isa on a failure disarm it if checked against Failure explicitly, c) something else?

[13:06] *** Ven_ left
[13:06] *** nowan left
[13:07] <pmurias> what's camelion?

[13:08] <timotimo> something regarding tagging of modules

[13:08] <timotimo> see perl6.party for a post about it

[13:08] *** Ven_ joined
[13:09] *** nowan joined
[13:13] *** grondilu joined
[13:13] *** kaare__ left
[13:15] * [Coke] struggles through his 2nd coffee.

[13:16] *** smls joined
[13:17] *** kaare__ joined
[13:17] *** cdg joined
[13:18] <smls> m:  my %hash = "a" => 1;  my (:$a!, :$non-existent-key!) := %hash;

[13:18] <camelia> rakudo-moar c24019: OUTPUT: «MVMArray: atpos expected string register␤  in block <unit> at <tmp> line 1␤␤»

[13:18] <smls> bisectable6:  my %hash;  try my (:$non-existent-key!) := %hash;  say "$!";

[13:18] <bisectable6> smls, Bisecting by output (old=2015.12 new=c240195) because on both starting points the exit code is 0

[13:18] <bisectable6> smls, bisect log: https://gist.github.com/e294eb15a944ceaab519415cf69e6598

[13:18] <bisectable6> smls, (2017-02-12) https://github.com/rakudo/rakudo/commit/b2e0ac09ed5fce12aaeeeb5d42e7138dad8c0632

[13:19] *** skids joined
[13:19] *** cygx left
[13:22] <smls> ^^ regression in error handling for required named parameters

[13:22] <lizmat> smls: testing a fix now

[13:23] *** haxmeister left
[13:24] *** Ven_ left
[13:25] *** raschipi joined
[13:26] *** Ven_ joined
[13:26] <lizmat> smls: please pull - https://github.com/rakudo/rakudo/commit/95c5e1ffa8

[13:28] *** haxmeister joined
[13:31] *** Zoffix joined
[13:32] <raschipi> Zoffix: Give us a link to Camelion

[13:32] <tadzik> Zoffix: ping

[13:32] <Zoffix> Backlogging a bit, and seems people aren't aware we *do* have a nice and shiny, pure-perl HTML parse: DOM::Tiny https://modules.perl6.org/dist/DOM::Tiny

[13:32] *** lichtkind joined
[13:33] <tadzik> I need help with JSON::Meth and what it does in mpo code

[13:33] <Zoffix> Author says it's alpha-quality, but it's a port of a polished Perl 5 module, so I'd say API is safe to use and it worked fine when I last used it

[13:33] <Zoffix> tadzik: exports $j variable

[13:34] <Zoffix> .tell haxmeister I found this HTML parsing module work just fine: https://modules.perl6.org/dist/DOM::Tiny    And WWW is just a user agent, not a parser

[13:34] <yoleaux> Zoffix: I'll pass your message to haxmeister.

[13:34] <tadzik> Zoffix: in lib/ModulesPerl6/DbBuilder/Dist/Source.pm it does $data->$json, that, I guess, parses $data as json and makes this $json var globally visible?

[13:34] <Zoffix> 1 sec

[13:35] <Zoffix> raschipi: https://github.com/zoffixznet/camelion/blob/master/assets/logo.png

[13:35] <smls> lizmat: Your commit seems to do the trick, thanks!

[13:36] <Zoffix> tadzik: ok, in that code, it exports $json because $j is too non-obvious. It decodes $data to JSON if it's JSON and encodes it into JSON if it's not JSON

[13:36] <Zoffix> tadzik: is this the code you're asking? https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/Source.pm#L74

[13:36] <tadzik> yes

[13:36] <tadzik> so now the global $json variable contains decoded $data?

[13:37] <Zoffix> tadzik: it's equivalent to Perl 6's; `use JSON::Fast; try from-json $data; if $! { log error => "Failed to parse: JSON error: $!"; return; }

[13:37] <Zoffix> tadzik: no, it's just a method name

[13:37] <Zoffix> tadzik: https://metacpan.org/pod/JSON::Meth

[13:37] <tadzik> but in #80 you write to it

[13:37] <tadzik> yeah, I read the pod, it didn't help :P

[13:37] <Zoffix> tadzik: oh wait, yeah it does

[13:38] <Zoffix> tadzik: OK, now I remember. Yeah, $json will then contain decoded json

[13:38] *** setty1 joined
[13:38] <Zoffix> tadzik: it's equivalent to Perl 6's; `use JSON::Fast; try my $json = from-json $data; if $! { log error => "Failed to parse: JSON error: $!"; return; }; $json{do things}

[13:39] <Zoffix> tadzik: why? Is there a problem you're trying to fix?

[13:39] <tadzik> Zoffix: I try to make it so that the warnings/errors in http://modules.perl6.org/update.log are available as something more structured as a logfile

[13:40] <tadzik> so that I can go to mpo or somewhere and it'll tell me: these modules of yours don't have tags, or so

[13:40] <Zoffix> tadzik: oh, that's very easy to do

[13:40] <Zoffix> tadzik: all the messages in update.log are emitted using https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Log.pm

[13:40] *** pierre_ joined
[13:41] <Zoffix> tadzik: so you could make it also gen a JSON file or something

[13:41] <tadzik> yeah, but this log doesn't know for what module this is reported

[13:41] <Zoffix> Ah, right

[13:41] <tadzik> I made it so that the dists contain problems just like they now contain travis_status

[13:41] <tadzik> so we can store that and look it up later

[13:43] <Zoffix> tadzik: I see there's already a "META checker post-processor": https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/METAChecker.pm

[13:43] <tadzik> yep

[13:43] <Zoffix> Sounds like a prime place to add the tag checking or whatever

[13:43] <tadzik> but most of the warnings come from Source.pm

[13:44] <tadzik> perhaps METAChecker would be a better place to put them instead

[13:44] <Zoffix> Maybe

[13:45] <Zoffix> .tell lookatme we do actually have an HTML parser; DOM::Tiny: https://modules.perl6.org/dist/DOM::Tiny

[13:45] <yoleaux> Zoffix: I'll pass your message to lookatme.

[13:45] <Zoffix> tadzik: if you need more help, just ping me in #perl6-dev

[13:45] <Zoffix> \o

[13:45] *** Zoffix left
[13:45] <tadzik> will do

[13:46] *** AndyDee joined
[13:48] *** Dee22 left
[13:52] *** Ven_ left
[13:53] *** smls left
[13:54] <nine> So many ecosystem modules are missing license information in their META6.json :/

[13:54] *** Ven joined
[13:55] *** Ven is now known as Guest30672

[13:58] <[Coke]> nine: samcv was working on that, no?

[13:59] *** ChoHag left
[14:00] <tadzik> yep, I got 15 PRs for it I think

[14:03] <raschipi> It was way worse before samcv had a go at it.

[14:03] <raschipi> She took it from ~5% to more than 50%.

[14:04] *** ChoHag joined
[14:05] *** pierre_ left
[14:06] *** Guest30672 left
[14:07] *** pierre_ joined
[14:09] *** Ven_ joined
[14:18] *** itaipu joined
[14:18] *** astj left
[14:19] *** astj joined
[14:19] *** Ven__ joined
[14:19] *** Ven_ left
[14:22] *** japhdc left
[14:22] *** haxmeister left
[14:23] *** khw joined
[14:23] *** lowbro left
[14:25] *** pierre_ left
[14:26] *** pierre_ joined
[14:35] *** Cabanossi left
[14:36] *** Cabanossi joined
[14:37] *** pierre_ left
[14:42] *** sena_kun left
[14:44] *** pierre_ joined
[14:44] *** wamba joined
[14:48] *** grondilu left
[14:49] *** st_elmo joined
[15:03] *** xfix_ left
[15:07] *** pierre_ left
[15:10] *** Zoffix joined
[15:11] *** Zoffix left
[15:11] *** lizmat_ joined
[15:11] *** lizmat left
[15:27] *** domidumont left
[15:34] *** Cabanossi left
[15:36] *** Cabanossi joined
[15:37] *** salios left
[15:38] *** raiph left
[15:38] <ugexe> tadzik: i commented on your gist... I can't reproduce. In my case it finds everything fine, but freezes up testing GTK::Simple

[15:38] *** raiph joined
[15:39] <ugexe> and if an install fails due to precomp it remains installed

[15:39] *** salios joined
[15:40] *** ufobat left
[15:41] *** raiph left
[15:42] *** salios left
[15:43] *** salios joined
[15:46] *** salios left
[15:47] *** salios joined
[15:48] *** raiph joined
[15:56] *** raiph left
[15:58] *** Ven__ left
[16:00] *** zakharyas left
[16:00] *** MasterDuke_ left
[16:05] *** Ven joined
[16:06] *** Ven is now known as Guest41391

[16:11] *** Guest41391 left
[16:11] <Geth> ¦ ecosystem: 76c34d269a | (Tony O'Dell)++ (committed using GitHub Web editor) | META.list

[16:11] <Geth> ¦ ecosystem: Adding System::Query to META

[16:11] <Geth> ¦ ecosystem: 

[16:11] <Geth> ¦ ecosystem: A utility for collapsing JSON dependent upon certain environmental information (useful for BUILDing/dependency requirements/probably other things).

[16:11] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/76c34d269a

[16:12] *** Bucciarati left
[16:13] *** lizmat_ is now known as lizmat

[16:13] *** literal left
[16:13] *** avar left
[16:26] *** imcsk8 left
[16:33] *** Sound joined
[16:34] *** Sound is now known as Guest39080

[16:35] *** Cabanossi left
[16:35] *** imcsk8 joined
[16:36] *** Cabanossi joined
[16:40] *** ChoHag left
[16:42] *** domidumont joined
[16:43] *** Zoffix joined
[16:44] *** MasterDuke_ joined
[16:46] *** Zoffix left
[16:55] *** cpage_ left
[17:00] *** cpage_ joined
[17:10] *** cpage_ left
[17:11] *** Ven joined
[17:12] *** Ven is now known as Guest70548

[17:17] *** AlexDaniel left
[17:18] <Geth> ¦ doc: 12b2675a03 | (Jan-Olof Hendig)++ | doc/Type/Blob.pod6

[17:18] <Geth> ¦ doc: Added docs for Blob.reverse

[17:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/12b2675a03

[17:20] *** kaare_ joined
[17:21] *** Guest70548 left
[17:21] *** kaare__ left
[17:23] *** Ven_ joined
[17:24] *** cpage_ joined
[17:25] *** setty1 left
[17:26] *** Guest39080 left
[17:29] *** cpage_ left
[17:30] *** cpage_ joined
[17:30] *** literal joined
[17:30] *** avar joined
[17:30] *** avar left
[17:30] *** avar joined
[17:32] *** lizmat left
[17:32] *** Bucciarati joined
[17:33] *** labster joined
[17:33] *** labster left
[17:34] *** labster joined
[17:36] *** avalenn left
[17:36] *** Ven_ left
[17:39] *** Ven_ joined
[17:43] *** wamba left
[17:50] *** zapwai joined
[17:52] *** Ven_ left
[17:53] *** Ven_ joined
[17:55] *** st_elmo left
[17:56] *** zakharyas joined
[18:01] <TreyHarris> m: 3 ± 1

[18:01] <camelia> rakudo-moar 0c46af: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 0337⏏5 ± 1␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤        statement modifier loop␤»

[18:01] <TreyHarris> weird, I thought arbitrary precision was implemented

[18:01] *** chee joined
[18:05] <[Coke]> That operator doesn't appear in rakudo/src or shown as impl. in docs.

[18:05] <TreyHarris> It's not even in specs.... or in the design archive. Did I totally imagine it? Was it in Pugs?

[18:05] <TreyHarris> [Coke]: yeah, that's what I meant

[18:05] *** cpage_ left
[18:05] <TreyHarris> I have old code from 2007 that has ±, so I think it must've been in Pugs

[18:06] <perlpilot> .oO( Why isn't ± there yet though?  ;-) ) 

[18:08] *** Ven_ left
[18:10] *** nadim left
[18:10] <TreyHarris> is there a good ack-like searcher than can squash paragraphs together? I hate it when I discover I missed something I searched for in docs because the pattern spanned a line break

[18:10] *** nadim_ joined
[18:10] *** cdg left
[18:11] *** Ven joined
[18:11] *** Ven is now known as Guest27981

[18:11] *** rindolf left
[18:11] *** sufrostico left
[18:12] *** espadrine joined
[18:13] <perlpilot> one would think that ack could do paragraph or slurp mode since it's relatively easy to do in perl.

[18:15] <Geth> ¦ doc: 2131bc2cc5 | (Jan-Olof Hendig)++ | doc/Type/CallFrame.pod6

[18:15] <Geth> ¦ doc: Fixed broken example. Zoffix++, PerlPilot++

[18:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2131bc2cc5

[18:16] *** pecastro left
[18:16] *** rindolf joined
[18:16] *** pecastro joined
[18:17] *** ChoHag joined
[18:18] <TreyHarris> perlpilot: closed issues say ack is too-deeply line-oriented to implement

[18:20] <hobbs> TreyHarris: ag docs say "--[no]multiline: match regexes across newlines. Enabled by default."

[18:20] <hobbs> so that seems promising

[18:20] <perlpilot> TreyHarris: maybe try the silversearch or ripgrep to see if they do it

[18:20] <perlpilot> hobbs++

[18:20] *** Guest27981 left
[18:21] * perlpilot has taken to use ripgrep lately

[18:21] *** Ven_ joined
[18:21] <hobbs> I don't know that one

[18:22] <TreyHarris> hobbs++

[18:22] <perlpilot> hobbs: https://github.com/BurntSushi/ripgrep

[18:23] <hobbs> yeah, looking at it.

[18:23] <TreyHarris> I just tried agrep (which allows arbitrary-delimeters but is single-file/stream-oriented like *grep, but if you give it a delimiter (in this case '$$'), you can't use regexes, only literal strings

[18:23] <TreyHarris> But ag works, thanks.

[18:24] <hobbs> rg specifically lists not having multiline searches in its caveats

[18:24] *** sufrostico joined
[18:24] <hobbs> otherwise looks nice though :)

[18:24] *** AlexDaniel joined
[18:25] <perlpilot> yeah ... I'm not even sure anymore why I use ripgrep over ag  (but both are blazingly fast on my large and deeply nested directories, which is why they get favored over ack for many things)

[18:25] *** Ven_ left
[18:26] * perigrin pets ag

[18:28] *** Ven_ joined
[18:30] <TreyHarris> ah, before I saw it doesn't support multiline I tried to install it (both via repo and from local source, using the CLI's given in the README). Didn't work, but I've never used Rust before so there may be something blindingly obvious wrong here: https://gist.github.com/treyharris/511117b7d6d20f9e80d6c34d00a103f7

[18:31] <TreyHarris> TODO[@Learning|@Coding]: Rust exercism

[18:31] <TreyHarris> gah

[18:33] *** Ven_ left
[18:34] *** Cabanossi left
[18:36] *** Ven_ joined
[18:36] *** Cabanossi joined
[18:48] *** ajr_ joined
[18:50] <ajr_> Is there a problem with the mail server at perl6.org? I tried to file a rakudobug this morning: [email@hidden.address] bounced.

[18:52] <raschipi> ajr_: If you get a gist or pastie of the bounce  with your personal data removed, I will have a look at it.

[18:54] <ajr_>  The response from the remote server was:  554 5.7.1 [email@hidden.address] Recipient address rejected: Access denied 

[18:56] *** cygx joined
[18:57] <cygx> ajr_: isn't it [email@hidden.address]
[18:57] <TreyHarris> cygx: yes

[18:57] <TreyHarris> ajr_: ^^

[18:57] *** zakharyas left
[18:59] <curt_> m: say 1 ∈ (Set) ?? 'present' !! 'not present';

[18:59] <yoleaux> 15:15Z <Zoffix> curt_: Our modules.perl6.org currently rejects logotypes that aren't 32x32px. Sent you a PR to fix yours: https://github.com/CurtTilmes/perl6-eredis/pull/1

[18:59] <camelia> rakudo-moar dc5eec: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 83968 bytes␤»

[18:59] *** lichtkind left
[19:00] *** labster left
[19:02] <ajr_> cygx: Oops, yes. Thank you.

[19:03] *** BashBits joined
[19:05] *** labster joined
[19:06] <ajr_> Does anyone know how many people are experimenting with Perl 6 on the Pi?

[19:07] *** labster left
[19:07] *** cpage_ joined
[19:08] *** Ven_ left
[19:08] <MasterDuke_> ajr_: i know several have, but i couldn't tell you all the names. maybe try searching the irc logs? https://irclog.perlgeek.de/perl6/search

[19:09] *** avalenn joined
[19:09] *** Ven joined
[19:09] *** Ven is now known as Guest69228

[19:11] *** labster joined
[19:12] *** lichtkind joined
[19:13] *** itaipu left
[19:13] *** Zoffix joined
[19:16] <Zoffix> curt_: it infini-loops in dispatch because Set.Set returns Set. And so far I see (elem), (cont), ∉, ∋, ∌ similarly affected. There might be more. Would you mind filing a bug for it?

[19:16] <Zoffix> huggable: rakudobug

[19:16] <huggable> Zoffix, Report bugs by emailing to [email@hidden.address]
[19:18] *** domidumont left
[19:20] <Zoffix> And some ops like ⊇ and ⊉ crash with "can't look up attributes... " error. There's probably a meaning for type objects we could implement; like Set eqv set()

[19:20] <ajr_> Huggable: Zoffix doesn't report bugs, he fixes them. :-)*

[19:21] <curt_> https://rt.perl.org/Public/Bug/Display.html?id=131300

[19:21] *** cpage_ left
[19:21] <Zoffix> TreyHarris: what does 3 ± 1 mean?

[19:21] <Zoffix> curt_: thanks

[19:23] <ingy> does p6 have global vars, or something like them?

[19:23] <ingy> google is not my friend on this so far

[19:23] <ajr_> exit

[19:23] <Zoffix> ingy: yeah, PROCESS:<$SOME-VAR>

[19:24] <Zoffix> m: sub make-one { PROCESS:<$SOME-VAR> := 42 }; say $*SOME-VAR // 'not there'; make-one; say $*SOME-VAR

[19:24] <camelia> rakudo-moar dc5eec: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix := instead␤at <tmp>:1␤------> 3sub make-one { PROCESS:<$SOME-VAR> :=7⏏5 42 }; say $*SOME-VAR // 'not there'; ma␤»

[19:24] <Zoffix> uhh 

[19:24] * Zoffix quickly glances at sauce

[19:24] *** ajr_ left
[19:24] <perlpilot> ingy: I went to doc.perl6.org and typed 'GLOBAL' into the search box and got https://docs.perl6.org/language/packages#index-entry-GLOBAL_%28package%29

[19:24] <cygx> PORCESS::

[19:24] <Zoffix> ah

[19:24] <Zoffix> m: sub make-one { PROCESS::<$SOME-VAR> := 42 }; say $*SOME-VAR // 'not there'; make-one; say $*SOME-VAR

[19:24] <camelia> rakudo-moar dc5eec: OUTPUT: «not there␤42␤»

[19:24] <Zoffix> sweet

[19:24] <perlpilot> ingy: depending on what you mean by "global", one of those is sure to be useful to you

[19:25] <Zoffix> ingy: basically PROCESS:: is the last place lookup of dynamic vars is done. So if you stick the value there, in any other place that dynamic will now have a value, unless it's overriden somewhere up the call stack (e.g. with `my $*SOME-VAR`)

[19:29] <Zoffix> m: sub infix:<±> { .min .. .max with minmax $^a-$^b, $a+$b }; say 3 ± 1

[19:29] <camelia> rakudo-moar dc5eec: OUTPUT: «2..4␤»

[19:29] <Zoffix> m: sub infix:<±> { .min .. .max with minmax $^a-$^b, $a+$b }; say -3 ± 1

[19:29] <camelia> rakudo-moar dc5eec: OUTPUT: «-4..-2␤»

[19:29] <Zoffix> m: sub infix:<±> { .min .. .max with minmax $^a-$^b, $a+$b }; say (3 ± 1) ~~ 3.5

[19:29] <camelia> rakudo-moar dc5eec: OUTPUT: «False␤»

[19:29] <Zoffix> m: sub infix:<±> { .min .. .max with minmax $^a-$^b, $a+$b }; say 3.5 ~~ (3 ± 1)

[19:29] <camelia> rakudo-moar dc5eec: OUTPUT: «True␤»

[19:29] <Zoffix> hehe

[19:29] *** Zoffix left
[19:32] <ingy> thanks all

[19:34] *** Guest69228 left
[19:35] *** Ven_ joined
[19:41] <TreyHarris> Zoffix: good question, turns out when I just went down the rabbit hole and  tried to see what other languages do, that it depends on context. Some languages would take it to mean 2..4; some would take it to mean a standard deviation of mean 3 and sigma 1, a.k.a. an "error form"; and some take it to mean a arbitrary-fixed precision number such that 3±1 is 3 with an epsilon of 1/3 (intuitively I think that

[19:41] <TreyHarris> means what I think of as an epsilon of 1, but apparently in fixed-precision arithmetic you define epsilon as a coefficient of the value, not a variance of the value)

[19:44] <TreyHarris> (the latter means that x±y when y ≥ x is NaN)

[19:45] *** Rawriful joined
[19:46] <perlpilot> TreyHarris: mayhap you were thinking of the ≅ operator with a tolerance (before, when you were expecting ± to work) ?

[19:47] *** TEttinger joined
[19:47] <TreyHarris> perlpilot: pretty sure i was.

[19:49] *** BashBits left
[19:53] *** Ven_ left
[19:53] *** sufrostico left
[19:53] *** Ven_ joined
[19:59] *** sufrostico joined
[20:03] *** Cabanossi left
[20:06] *** Cabanossi joined
[20:07] *** cygx left
[20:15] *** cdg joined
[20:19] *** cpage_ joined
[20:24] *** sufrostico left
[20:31] *** sufrostico joined
[20:35] *** Cabanossi left
[20:35] *** raschipi left
[20:35] *** sufrostico left
[20:36] *** Cabanossi joined
[20:37] *** rindolf left
[20:37] *** janezdegomera joined
[20:38] *** Ven_ left
[20:39] *** Ven joined
[20:39] *** Ven is now known as Guest17904

[20:40] *** janezdegomera left
[20:41] *** Guest17904 left
[20:50] *** mcmillhj left
[20:52] *** mcmillhj joined
[20:54] *** alimon left
[20:58] *** mcmillhj left
[21:08] *** mcmillhj joined
[21:13] *** mcmillhj left
[21:19] *** Ven joined
[21:20] *** Ven is now known as Guest63789

[21:20] *** grondilu joined
[21:26] *** mcmillhj joined
[21:28] *** atweiden joined
[21:29] <atweiden> i'm trying to group an array of DateTimes with overlapping Dates, by Date

[21:29] <atweiden> any inspiration?

[21:30] *** mcmillhj left
[21:32] <timotimo> so, like, using categorize?

[21:34] *** Guest63789 left
[21:35] <atweiden> interesting

[21:35] <atweiden> i may try that

[21:40] <Geth> ¦ doc: e1281f2816 | (Jan-Olof Hendig)++ | doc/Type/Iterable.pod6

[21:40] <Geth> ¦ doc: Fix typo

[21:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e1281f2816

[21:40] <timotimo> there's another one just like categorize

[21:40] <timotimo> classify

[21:41] <perlpilot> yeah, but categorize is the right one in this case I think.

[21:41] <timotimo> Note that, unlike classify, which assumes that the return value of the mapper is a single value, categorize always assumes that the return value of the mapper is a list of categories that are appropriate to the current value.

[21:41] <timotimo> i think you want classify

[21:41] <perlpilot> huh, you and I got different things from what he wanted

[21:42] <perlpilot> The "overlapping dates" business makes me think categorize is right.

[21:43] <timotimo> every DateTime only has one Date, though?

[21:43] <atweiden> it's like [2016-01-01T12:35Z, 2016-01-01T15:55Z, 2017-12-31T01:01Z]

[21:43] <atweiden> combine 2016-01-01's

[21:44] <atweiden> it's not that simple, as the datetimes are part of a class, and i will need to combine the classes

[21:45] <perlpilot> ah, I guess I was  thinking of date ranges rather than just dates

[21:45] <perlpilot> timotimo++

[21:55] *** mcmillhj joined
[21:59] *** lizmat joined
[22:00] *** mcmillhj left
[22:02] *** wamba joined
[22:11] *** espadrine left
[22:30] *** anton_p left
[22:35] *** Cabanossi left
[22:36] *** Cabanossi joined
[22:53] *** AlexDaniel left
[22:56] *** lizmat left
[22:56] *** skids left
[23:04] *** Cabanossi left
[23:06] *** Cabanossi joined
[23:09] *** cdg left
[23:16] *** pmurias left
[23:20] *** mcmillhj joined
[23:23] *** atweiden left
[23:25] *** mcmillhj left
[23:26] *** AndyDee left
[23:26] *** Rawriful left
[23:35] *** iH2O joined
[23:39] *** kyan joined
[23:40] *** mcmillhj joined
[23:45] *** mcmillhj left
[23:46] *** ChoHag left
[23:47] *** pierre_ joined
[23:56] *** pierre_ left
