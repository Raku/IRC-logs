[00:14] *** Actualeyes left
[00:16] *** cpage_ joined
[00:27] *** _4d47 left
[00:29] *** cibs left
[00:30] *** cibs joined
[00:32] *** BenGoldberg joined
[00:34] *** Actualeyes joined
[00:35] *** shayan_ left
[00:36] *** pyrimidine joined
[00:38] *** cdg left
[00:42] *** pyrimidine left
[00:51] *** wamba left
[00:53] *** Ben_Goldberg joined
[00:53] *** BenGoldberg left
[00:53] *** Ben_Goldberg is now known as BenGoldberg

[00:54] *** llfourn joined
[00:55] *** aindilis left
[00:56] *** aindilis joined
[00:59] *** llfourn left
[01:02] *** skids joined
[01:03] *** azertus left
[01:04] *** Ben_Goldberg joined
[01:04] *** BenGoldberg left
[01:04] *** Ben_Goldberg is now known as BenGoldberg

[01:04] *** azertus joined
[01:05] *** shayan_ joined
[01:24] *** shayan_ left
[01:27] *** pyrimidine joined
[01:29] *** shayan_ joined
[01:31] *** shayan_ left
[01:31] *** pyrimidine left
[01:39] *** labster left
[01:56] *** llfourn joined
[02:01] *** llfourn left
[02:04] *** g__k__ joined
[02:16] *** shayan_ joined
[02:46] *** ilbot3 left
[02:47] *** ilbot3 joined
[02:52] *** pyrimidine joined
[02:57] *** pyrimidine left
[02:57] *** llfourn joined
[02:57] *** astj_ left
[02:58] *** astj joined
[03:00] *** geekosaur left
[03:02] *** llfourn left
[03:03] *** geekosaur joined
[03:21] *** shayan_ left
[03:21] *** llfourn joined
[03:21] *** shayan_ joined
[03:23] *** John[Lisbeth] joined
[03:27] *** John[Lisbeth] left
[03:29] *** xtreak joined
[03:39] *** shayan_ left
[03:40] *** llfourn left
[03:40] *** shayan_ joined
[03:47] *** mr_ron left
[04:07] *** Unavowed_ joined
[04:09] *** g__k__ left
[04:09] *** g__k__ joined
[04:10] *** Unavowed left
[04:11] *** shayan_ left
[04:12] *** pyrimidine joined
[04:14] *** shayan_ joined
[04:17] *** pyrimidine left
[04:21] *** faraco joined
[04:36] *** llfourn joined
[04:41] *** llfourn left
[04:43] *** cpage_ left
[04:44] *** cpage_ joined
[04:48] *** cpage_ left
[04:49] *** cpage_ joined
[04:49] *** Ben_Goldberg joined
[04:49] *** BenGoldberg left
[04:49] *** Ben_Goldberg is now known as BenGoldberg

[04:51] *** cpage_ left
[04:51] *** shayan_ left
[04:52] *** xtreak left
[04:52] *** llfourn joined
[04:53] *** shayan_ joined
[04:54] *** xtreak joined
[05:08] <samcv> I am thinking of applying for a Perl 6 grant. Here is a rough draft I wrote of the proposal https://gist.github.com/samcv/ca70c21c73061f605bd5e7220c986b47

[05:10] <BenGoldberg> s/determinalistic/deterministically/

[05:11] <samcv> aside from spelling :P

[05:12] <samcv> it's a very rough draft. so mostly concerned with content. and i wasn't totally sure what to put for "tell us about why you should work on this project"

[05:12] <samcv> so that needs to be expanded

[05:12] <perlpilot> samcv++

[05:12] *** raiph joined
[05:13] <TEttinger> $30 an hour? for that price someone could hire... two burger flippers in NYC. you're a bargain

[05:13] <samcv> i wasn't sure what price to put. i just put that for now

[05:13] <samcv> i would like to hire 2 burger flippers though. in a month you could have a lot of burgers

[05:13] <perlpilot> samcv: from what I remember, people usually figure the cost at $50/hour but ... everyone is different

[05:14] <samcv> ## Benefits to Perl 6 Development: hundreds of burgers

[05:14] <samcv> is it usually always 50/hr?

[05:14] <perlpilot> I don't know about always, but that's the number I've often seen

[05:14] <samcv> i will take 50/hr. i wasn't sure how to do it

[05:14] <samcv> ok. also yeah i wanted input on that part too

[05:15] <BenGoldberg> Write the $50 in the proposal, and hope for the best ;)

[05:15] <samcv> heh

[05:15] *** BenGoldberg left
[05:15] <perlpilot> 100 hours over 1 month?  Do you work or go to school or anything that could interfere with your time working on the proposal?

[05:15] <samcv> no work or school

[05:15] <TEttinger> it's not like a whole lot of people have a ton of unicode expertise and are available to work on perl6

[05:15] <samcv> that is very true

[05:16] <samcv> the 100 hours a month may change. but the 1 month = 100 hours

[05:16] <samcv> was more like 100 hours to complete said task (maybe) but that was the main one i was going on

[05:17] <TEttinger> you seem to know quite a bit about this stuff. QUICK WHAT'S THE FIRST CHARACTER IN THE Nd CATEGORY, LEXICOGRAPHICAL ORDER BY CODEPOINT

[05:17] <samcv> how long for them to approve the grant?

[05:17] <samcv> haha

[05:17] <TEttinger> well, by typo I actually know this one

[05:17] <TEttinger> 0

[05:17] <samcv> yeah

[05:17] <perlpilot> samcv: depends on how contentious it is I would imagine :)

[05:17] <TEttinger> I think I meant Nl

[05:18] *** shayan_ left
[05:18] <samcv> because in like 7 days i will be out for like 1 week to 2 weeksish

[05:19] <samcv> well prolly out ~1week and then the week after that probably would be part time then after that should be full time

[05:19] <samcv> also need to go through my commit history and get a better listing of what i've done. i just wrote some stuff off the top of my head

[05:19] *** shayan_ joined
[05:19] *** labster joined
[05:20] <samcv> can i list as a deliverables to determine what Unicode 9.0 we do not support and make a very specific list to be complete at the end of the project. basically everything not specified as what i'm going to complete + figure out anything out not covered we don't know of yet

[05:21] <samcv> also what we sort of know but it's not properly written down and looked into

[05:21] <perlpilot> samcv: After the submission deadline, the grants are posted for public commentary for some amount of time (1-2 weeks I think), then they committee votes.  I'd figure they'd award by sometime in early Feb  (but I'm just guessing;  Coke would know truer things since he's on the committee)

[05:21] <samcv> k

[05:22] <samcv> ok that should work fine with my schedule

[05:22] <samcv> also what about extending the grant? that can be done yes?

[05:23] <perlpilot> you can always make another proposal to do more of the same :)

[05:24] *** cpage_ joined
[05:24] *** bwisti left
[05:25] *** cpage_ left
[05:25] *** cpage_ joined
[05:26] <perlpilot> samcv: oh, and lizmat would make an excellent grant manager for you if she's willing

[05:26] <samcv> great

[05:27] <perlpilot> samcv: be sure to ask though.  She may have other suggestions too

[05:27] <samcv> yeah

[05:29] <samcv> i was going to say The goal of this project is to make Perl 6's Unicode support production ready.

[05:29] <samcv> but that's kind of a loaded phrase. but i guess it's in benefits not deliverables

[05:29] <samcv> so that may be fine

[05:30] <samcv> though I suppose you could argue that the definition of production ready will be adding all the unicode tests and making the ones we do have + ones added also check robustness of concatenation and other things

[05:30] <samcv> probably may take more than a month. will need to think about it and estimate for each subtask to get a better handle on it

[05:31] <perlpilot> A minor thing about the wording of your deliverables ... don't say "needs to be"; say "will be"  :)

[05:31] <perlpilot> or maybe "shall be" ;)

[05:31] <samcv> also need to rework Full support for Unicode 9.0 will to be added section

[05:32] <samcv> and say shall be added or in otherwise any section we do not implement should be thoroughly documented

[05:32] <samcv> because it's almost as much work figuring out what we don't do than adding things in

[05:33] <samcv> since it's a very big standard

[05:33] <perlpilot> make that research one of your deliverables

[05:33] *** skids left
[05:37] *** bwisti joined
[05:42] *** Cabanossi left
[05:43] *** pyrimidine joined
[05:43] *** khw left
[05:45] *** Cabanossi joined
[05:46] *** shayan_ left
[05:47] *** pyrimidine left
[05:52] *** CIAvash joined
[05:56] *** llfourn left
[05:56] *** llfourn joined
[05:57] *** shayan_ joined
[06:14] *** shayan_ left
[06:25] <AlexDaniel> oooh

[06:25] <AlexDaniel> samcv++

[06:26] <AlexDaniel> samcv: can I ask for RT #127047 and RT #127048 ? :)

[06:26] <samcv> oh i mostly fixed that one (the 1st)

[06:26] <samcv> but that is included

[06:27] <samcv> yeah both are mostly fixed already but plan is to fix them all the rest of the way

[06:27] *** pyrimidine joined
[06:27] <samcv> allow the normalizer

[06:27] <samcv>   to save state across multiple characters to properly support Grapheme Breaking

[06:27] <samcv>   for all of Unicode 9.0.

[06:28] <samcv> AlexDaniel, have you seen my newest MVM pr? https://github.com/MoarVM/MoarVM/pull/497

[06:28] <samcv> may be interested in it

[06:29] <samcv> will also let you do like \c[ZWJ] for ZWJ and many other alias names (some of the aliases are for corrections)

[06:29] <samcv> u: U+FE18

[06:29] <unicodable6> samcv, U+FE18 PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRAKCET [Pe] (︘)

[06:29] <samcv> like that one.

[06:29] <samcv> but idk why anybody would use that full name, but others are shorter and not spelling mistakes but like actual names being wrong

[06:29] *** shayan_ joined
[06:30] <AlexDaniel> great

[06:30] <samcv> :)

[06:32] <AlexDaniel> samcv: anyway, your grant proposal makes me very happy

[06:32] <samcv> yay!

[06:32] *** pyrimidine left
[06:32] <AlexDaniel> everything about it is so right :)

[06:32] *** kyan left
[06:34] <samcv> AlexDaniel, is the deliverables section good:?

[06:35] <samcv> though the only thing that scares me is Rewrite the Perl 5 script used to generate the Unicode database in Perl 6. This is also part of the previous item, since a rewrite is needed, it should be done in Perl 6 to help make it more maintainable.

[06:35] <samcv> but i am going to make sure that is a good goal in the time before I officially submit the grant application

[06:36] <AlexDaniel> I have no problem with it. Perhaps it can mention some big tickets if there are any?

[06:36] <samcv> i mean problem for me!

[06:36] <samcv> the rewriting it in perl 6. it's a huge script and all spaghetti-ish

[06:37] <samcv> so basically will have to throw the whole thing out the window but replicate the functionality

[06:40] <AlexDaniel> well, you'll manage I'm sure :)

[06:41] <AlexDaniel> anyway, don't forget to mention it here when it's published :)

[06:41] <samcv> kk :)

[06:41] *** Tonik joined
[06:41] <samcv> ah that script is 1900 lines long hahaha. well if i am getting paid to do it. I will muster the courage

[06:42] <samcv> I basically know how everything in it works except for the bitfield compression

[06:44] <faraco> A question, what makes Perl 6 more maintainable than Perl 5 + use strict in general ?

[06:44] <samcv> i find what i write is about 1/2 the length. uhm it's more extendable, better introspection of objects

[06:45] <samcv> uhm sub declarations are super nice too

[06:45] <samcv> and not having to deal with references

[06:45] <faraco> okay, not having to deal with reference is a game changer for me.

[06:45] <faraco> thanks.

[06:45] <samcv> at least for me it basically lets me program the program and less so trying to program squares to fit into rectangular holes

[06:46] <samcv> all this filler code, that i guess sets up things for the next operation or function, processing the text, putting in a data structure etc, all things you have to think about

[06:46] <samcv> but with perl 6 there's a lot less of that so it's much less work to add new things and refactor

[06:46] <faraco> so, you got much more compact code in Perl 6 without trying.

[06:46] <faraco> ?

[06:46] <samcv> yeah

[06:47] <samcv> i mean you get the most out of it if it's a straigth rewrite duplicating functionality than trying to like copy and paste it

[06:47] *** pyrimidine joined
[06:49] *** RabidGravy joined
[06:49] <faraco> :)

[06:49] *** Tonik left
[06:52] *** pyrimidine left
[07:01] *** bwisti left
[07:05] *** darutoko joined
[07:06] *** domidumont joined
[07:11] *** wamba joined
[07:12] *** domidumont left
[07:13] *** domidumont joined
[07:20] *** nowan_ joined
[07:22] *** nowan left
[07:27] *** cibs left
[07:28] *** bjz joined
[07:29] *** cibs joined
[07:39] *** shayan_ left
[07:41] *** faraco left
[07:41] *** xtreak left
[07:44] *** xtreak joined
[07:46] *** bjz left
[07:59] *** pyrimidine joined
[08:03] *** bjz joined
[08:03] *** pyrimidine left
[08:04] *** pyrimidine joined
[08:08] *** Actualeyes left
[08:09] *** pyrimidine left
[08:22] *** Actualeyes joined
[08:24] *** MilkmanDan left
[08:26] *** zakharyas joined
[08:28] *** MilkmanDan joined
[08:30] *** labster left
[08:31] *** CIAvash left
[08:31] *** labster joined
[08:31] *** ufobat joined
[08:35] *** Question joined
[08:40] *** wamba left
[08:45] *** AlexDaniel left
[08:45] *** pyrimidine joined
[08:51] *** g4 joined
[08:51] *** g4 left
[08:51] *** g4 joined
[08:52] *** pyrimidine left
[08:55] *** zakharyas left
[08:58] *** zakharyas joined
[09:02] *** jonas1 joined
[09:04] *** Question left
[09:09] *** profan_ is now known as profan

[09:13] *** bjz left
[09:13] *** user9 joined
[09:23] *** xtreak left
[09:24] *** xtreak joined
[09:28] *** wamba joined
[09:31] *** wamba left
[09:35] *** dakkar joined
[09:36] *** wamba joined
[09:39] *** cschwenz joined
[09:39] <cschwenz> p6: multi sub foo() is tighter(&infix:«+>») { say "In foo()!"; }; foo();

[09:39] <camelia> rakudo-moar 8f3476: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤No such method 'subst' for invocant of type 'Any'␤at <tmp>:1␤»

[09:40] *** sftp left
[09:40] <cschwenz> hmm…  on perl6 2016.11 that gives the error "Routine given to tighter does not appear to be an operator"

[09:41] <cschwenz> but here it is a different error

[09:41] <cschwenz> :-(

[09:41] <cschwenz> anyone here have suggestions on how to get this working?

[09:43] *** sftp joined
[09:44] <samcv> bisectable6,  multi sub foo() is tighter(&infix:«+>») { say "In foo()!"; }; foo();

[09:44] <bisectable6> samcv, Bisecting by output (old=2015.12 new=8f3476d) because on both starting points the exit code is 1

[09:44] <bisectable6> samcv, bisect log: https://gist.github.com/c1c73607db089f203bcd3ff101a85082

[09:44] <bisectable6> samcv, (2017-01-09) https://github.com/rakudo/rakudo/commit/caba0d346a1f3fd92084db93f226ee83f94f145e

[09:45] <samcv> cschwenz, was it working before?

[09:45] <samcv> and if so do you know around what time. or is it just asking to make something work right now

[09:45] <samcv> and you have not used this before

[09:47] *** pyrimidine joined
[09:48] <cschwenz> dunno, this came up because i was trying to get a custom infix operator to work the way i wanted it to and i finally got past a previous blocking issue (i wanted to use "+>>" as my op but perl6 kept complaining, so i changed it to something else)

[09:49] <samcv> cschwenz, maybe this will help? https://cry.nu/perl6/creating-your-own-operators-in-perl-6/

[09:49] <samcv> ok does it work if you change it from +>?

[09:49] <cschwenz> checking...

[09:51] *** bjz joined
[09:51] <cschwenz> okay, so i changed from "multi sub infix:« +>@ »(Real $num, Iterable $rotate) is tighter(&infix:«+>») is export(:MANDATORY) returns Int {" to "multi sub infix:« +>@ »(Real $num, Iterable $rotate) is tighter(&infix:«+») is export(:MANDATORY) returns Int {" and that works

[09:51] *** pyrimidine left
[09:52] <samcv> ok then it's probably colliding with some other operator

[09:52] <samcv> uhm show me it working with camelia cschwenz please

[09:52] <cschwenz> but +> is a valid perl 6 core operator

[09:52] <cschwenz> okay

[09:53] <moritz> m: say 3 +> 4

[09:53] <camelia> rakudo-moar 8f3476: OUTPUT«0␤»

[09:53] <moritz> m: say 3 +< 4

[09:53] <camelia> rakudo-moar 8f3476: OUTPUT«48␤»

[09:54] <cschwenz> p6: multi sub infix:« +>@ »(Real $num, Iterable $rotate) is tighter(&infix:«+») is export(:MANDATORY) returns Int { say "foobar"; }; 123 +>@ (123, 456);

[09:54] <camelia> rakudo-moar 8f3476: OUTPUT«foobar␤»

[09:54] <cschwenz> p6: multi sub infix:« +>@ »(Real $num, Iterable $rotate) is tighter(&infix:«+>») is export(:MANDATORY) returns Int { say "foobar"; }; 123 +>@ (123, 456);

[09:54] <camelia> rakudo-moar 8f3476: OUTPUT«foobar␤»

[09:54] <cschwenz> wat

[09:55] <cschwenz> okay who does the homebrew keg for perl6?

[09:55] <cschwenz> because it looks like that needs updating

[09:56] <samcv> cschwenz, camelia uses the latest rakudo in git

[09:56] <samcv> not the rakudo release

[09:56] <cschwenz> :-(

[09:56] <samcv> bisectable6, ulti sub infix:« +>@ »(Real $num, Iterable $rotate) is tighter(&infix:«+>») is export(:MANDATORY) returns Int { say "foobar"; }; 123 +>@ (123, 456);

[09:56] <bisectable6> samcv, Bisecting by output (old=2015.12 new=8f3476d) because on both starting points the exit code is 1

[09:56] <samcv> bisectable6, multi sub infix:« +>@ »(Real $num, Iterable $rotate) is tighter(&infix:«+>») is export(:MANDATORY) returns Int { say "foobar"; }; 123 +>@ (123, 456);

[09:56] <samcv> oopsie

[09:57] <bisectable6> samcv, bisect log: https://gist.github.com/132685b5657b29711632ec09fed01277

[09:57] <bisectable6> samcv, (2017-01-09) https://github.com/rakudo/rakudo/commit/caba0d346a1f3fd92084db93f226ee83f94f145e

[09:57] <bisectable6> samcv, Bisecting by exit code (old=2015.12 new=8f3476d). Old exit code: 1

[09:57] <bisectable6> samcv, bisect log: https://gist.github.com/138529cc0e85ca3db9dbd2b3efb6f14d

[09:57] <bisectable6> samcv, (2017-01-09) https://github.com/rakudo/rakudo/commit/caba0d346a1f3fd92084db93f226ee83f94f145e

[09:57] <samcv> yeah ok so it was fixed 3 days ago!

[09:57] <samcv> buggable, release

[09:57] <samcv> buggable, help

[09:57] <buggable> samcv, tags | tag SOMETAG | eco | eco Some search term | speed

[09:58] <samcv> buggable, 

[09:58] <samcv> huggable, release

[09:58] <huggable> samcv, nothing found

[09:58] <samcv> huggable, help

[09:58] <huggable> samcv, nothing found

[09:58] <samcv> NeuralAnomaly, release

[09:58] <samcv> if i just keep trying bots… heh

[09:58] <cschwenz> :-P

[09:59] <samcv> NeuralAnomaly, help

[09:59] <NeuralAnomaly> samcv, stats | blockers

[09:59] <samcv> NeuralAnomaly, stats

[09:59] <NeuralAnomaly> samcv, [✘] Next release will be in 1 week and 2 days. Since last release, there are 81 new still-open tickets (1 unreviewed and 0 blockers) and 258 unreviewed commits. See http://perl6.fail/release/stats for details

[09:59] <samcv> there we go!

[10:00] *** xtreak left
[10:00] <samcv> I <3 bisectable6 

[10:00] <cschwenz> cool :-)

[10:02] *** xtreak joined
[10:12] *** TEttinger left
[10:17] *** Vynce joined
[10:20] *** pyrimidine joined
[10:25] *** pyrimidine left
[10:30] *** bwisti joined
[10:33] <jnthn> moritz: Please can I have an account on http://p6c.org/ (the www server)?

[10:35] <moritz> jnthn: sure; please remind me in an hour or, I have an incident right now

[10:35] <moritz> *or so

[10:37] <jnthn> moritz: OK, will do; thanks :)

[10:40] *** rindolf joined
[11:01] *** Vynce left
[11:03] *** bwisti left
[11:09] *** astj left
[11:10] *** abraxxa left
[11:11] *** kio joined
[11:12] *** kio left
[11:12] *** pochi_ joined
[11:12] *** pochi left
[11:13] *** mxco86 joined
[11:14] <moritz> jnthn: passwort sent

[11:18] *** astj joined
[11:18] *** luna_ joined
[11:19] <luna_> hi

[11:20] *** luna_ left
[11:24] *** bjz_ joined
[11:25] *** pyrimidine joined
[11:26] *** bjz left
[11:26] *** xtreak left
[11:28] *** xtreak joined
[11:29] <SmokeMachine> Hi

[11:30] *** pyrimidine left
[11:31] *** astj left
[11:33] *** gregf_ left
[11:33] *** astj joined
[11:35] *** cibs left
[11:36] *** astj left
[11:36] *** cibs joined
[11:37] *** gregf_ joined
[11:40] *** astj joined
[11:40] *** astj left
[11:40] *** astj joined
[11:40] *** labster left
[11:41] *** pyrimidine joined
[11:45] *** pyrimidine left
[11:47] *** pyrimidine joined
[11:56] *** wamba left
[11:56] *** lukaramu joined
[12:03] *** pyrimidine left
[12:03] *** raschip joined
[12:06] *** xtreak left
[12:08] *** bjz joined
[12:09] *** bjz_ left
[12:25] *** llfourn left
[12:32] *** wamba joined
[12:44] <Ulti> neat 10% speedup on my tests, now reliably 0.9s

[12:44] <Ulti> possibly the metaop speedup as I use those quite a bit

[12:45] <Ulti> whichever optimisation it was or the combo I'm guessing lizmat++  >:3

[12:48] <lizmat> jnthn did quite some work on MoarVM that was merged yesterday

[12:48] <lizmat> longer running programs should benefit from that mostly

[12:48] *** AlexDaniel joined
[12:48] <Ulti> I have a lot of Z uses :) 

[12:49] <Ulti> in fact it does a couple of Z in a tight loop for most of that second

[12:50] <Ulti> given 0.1s is startup which is fairly heavy thats how much compute you saved me :3

[12:57] <lizmat> glad to hear that!  :-)

[12:57] <lizmat> perhaps @perl6org twitter worthy ?  :-)

[12:58] <moritz> Ulti: 10% speedup since when?

[12:58] <moritz> last release? last few days?

[12:59] <lizmat> Ulti: are those Z's or Zop's ?

[13:00] <Ulti> moritz couple of days ago 

[13:00] <DrForr> I'll check here in a few minutes...

[13:00] <Ulti> lizmat: Z=> most likely

[13:00] *** mawkish__ joined
[13:01] <lizmat> ah, yes, I special cased that as well  :-)

[13:01] <Ulti> \o/

[13:01] <Ulti> Z=> is one of my favourite perl6 doodads

[13:01] <moritz> samcv: +1 to your grant proposal. I'd be willing to be your grant manager if you don't find anybody better suited :-)

[13:02] <Ulti> just because its sort of like a visual icon of what its doing :)

[13:07] *** gregf_ left
[13:08] *** abraxxa joined
[13:08] *** wamba left
[13:09] *** pyrimidine joined
[13:09] *** wamba joined
[13:13] *** pyrimidine left
[13:14] *** andrzeju_ joined
[13:14] *** lukiramu joined
[13:16] *** mawkish__ left
[13:17] *** andrzejku left
[13:17] *** lukaramu left
[13:17] *** Unavowed_ left
[13:17] *** rightfold left
[13:17] *** rightfold joined
[13:17] *** Praise left
[13:17] *** rightfold left
[13:17] *** rightfold joined
[13:17] *** abraxxa left
[13:17] *** Praise joined
[13:17] *** Praise left
[13:17] *** Praise joined
[13:19] *** bjz left
[13:20] *** huf joined
[13:20] *** Unavowed joined
[13:29] *** jgrabber joined
[13:33] *** faraco joined
[13:34] <faraco> hi, other than tldp[beginner-bash|advance-bash] books, which *free* resources helped you learn linux ecosystem and maybe even suit it with Perl 5/6 language. 

[13:35] <faraco> I like *man bash and info coreutils*, but I need more for me to go further.

[13:35] *** mawkish__ joined
[13:36] <raschip> "man bash" is in fact very bad documentation for anyone trying to learn shell. It's good documentation for anyone trying to implement a new shell, though.

[13:36] <DrForr> faraco: There are a bunch of links for tutorials and introductions on perl6.org.

[13:37] <brokenchicken> faraco: I kinda learned by brute force rather than studing copious resources.

[13:37] <brokenchicken> (it's worth noting I have several destroyed systems under my belt as a result :P)

[13:41] <jnthn> Yay, submitted PRs so now Archive::Libarchive is an easy install and passes tests on Windows. :)

[13:41] *** pyrimidine joined
[13:42] <brokenchicken> \o/

[13:42] *** abraxxa joined
[13:42] <faraco> brokenchicken: man, I need to fire up chroot.

[13:44] <brokenchicken> Ah, c'mon! It's very exciting to type rm -fr ~ and then accidentally hit ENTER instead of / and the rest of the path ;)

[13:44] *** mawkish__ left
[13:45] *** mawkish__ joined
[13:45] *** raschip left
[13:46] *** raschip joined
[13:47] *** abraxxa left
[13:48] <faraco> DrForr: hey thanks. Don't even know those links were exist.

[13:49] <DrForr> No worries.

[13:49] *** baest left
[13:50] *** MilkmanDan left
[13:53] *** MilkmanDan joined
[13:54] *** pyrimidine left
[13:56] *** mawkish__ left
[14:03] *** abraxxa joined
[14:07] *** pyrimidine joined
[14:09] *** baest joined
[14:13] *** mawkish__ joined
[14:14] *** pyrimidine left
[14:14] *** FROGGS joined
[14:15] *** mawkish__ left
[14:19] *** sammers left
[14:22] *** pmurias joined
[14:28] *** skids joined
[14:29] *** jgrabber left
[14:32] *** faraco left
[14:34] <AlexDaniel> brokenchicken: it is way more interesting when you have done something similar to ｢rm -rf ./｣ at some point, and then weeks later you ctrl+r this command out of the history on accident

[14:34] <AlexDaniel> and this could be anything! Like batch rename or whatever

[14:34] <brokenchicken> :)

[14:35] <AlexDaniel> nowadays I always ask myself before running anything “if I run this command in a random directory, will it screw things up?”. If yes, then I make it more specific so that it will error out

[14:37] <brokenchicken> Well, I hope TPF won't think less of me if I use links to perl6.WTF in my proposal :}

[14:37] <AlexDaniel> another grant proposal? \o/

[14:37] * brokenchicken wishes it contained a more recent coverage report

[14:38] <mspo> how many domains does perl6 have?

[14:38] <perlpilot_> It's funny but sad that some variant of this conversation on "rm -rf" has happened probably since rm was first invented.

[14:38] *** cdg joined
[14:38] <perlpilot_> brokenchicken: what's your proposal?

[14:38] * brokenchicken is too self conscious to say :}

[14:40] <raschip> People, at least alias rm to 'rm -I'. This should be the default, IMHO.

[14:41] <jdv79> wjat is perl6.wtf?

[14:41] <jdv79> looks like a useless report

[14:41] <moritz> jdv79: it's zoffix's front end to RT and some other stuff

[14:41] *** abraxxa left
[14:41] <brokenchicken> nah

[14:42] <moritz> ah no, the coverage report

[14:42] <brokenchicken> jdv79: it.s Perl 6's Wonderful Test Files. It's a coverage report, tho the report tool is currently busted so it's empty

[14:42] <jdv79> figures Str.pm has the most lines

[14:42] <brokenchicken> You can still access last report via the bot tho

[14:43] <brokenchicken> cover: &say, \("x")

[14:43] <Undercover> brokenchicken, The code is hit during stresstest See http://perl6.WTF/src_core_io_operators.pm.coverage.html#L22 for details

[14:43] <jdv79> is there a user facong coverage tool yet?

[14:43] <brokenchicken> no

[14:44] <jdv79> like devel::cover

[14:44] <mspo> the first thing I put in .profile is unalias -a

[14:44] <mspo> to remove all that linux junk

[14:44] <brokenchicken> So far it's only a hard-to-use tool in a moarvm branch

[14:44] <jdv79> i never found it that practical though

[14:44] <raschip> That's a very nice coverage report, never seen one like it. Which tool generates it?

[14:44] <brokenchicken> There's an article on it: http://perl6.party/post/Perl-6-Core-Hacking-Can-Has-Moar-Cover

[14:45] <brokenchicken> mspo: RE: domains. Dunno about perl6, but I own perl6.party, perl6.fail, and perl6.wtf :)

[14:46] <mspo> brokenchicken: when you get burned out TNF can spend a bunch of money to reclaim them

[14:46] <brokenchicken> TNF?

[14:46] * moritz owns p6c.org

[14:46] <moritz> and then there's perl6.org

[14:46] <moritz> oh, and I own perl-6.de

[14:47] <mspo> TPF

[14:47] <brokenchicken> heh

[14:47] <moritz> which is, like, totally outdated

[14:47] <mspo> brokenchicken: I used to be on the board of directors for The NetBSD Foundation so "TNF" is in my muscle memory

[14:47] <brokenchicken> mspo: oh and getperl6.com too

[14:48] <brokenchicken> OTOH, it's supposed to renew tomorrow and I rather not renew it

[14:48] <mspo> I found a lot of those .newtld's had stupid pricing

[14:48] <mspo> $5 year 1, $40 year 2  (.io was like that anyway)

[14:48] <moritz> some of them are quite expensive

[14:48] <brokenchicken> a lot of them are pricey yeah

[14:49] <mspo> I'm also letting a few domains go this year

[14:49] * moritz preordered perl6.book, but doesn't know if he'll pay it if he gets them

[14:51] <raschip> moritz: I think TimToady might want that one, don't let it go or a squatter might get it.

[14:51] <brokenchicken> heh, well, looks like I'll remain the owner of getperl6.com for another year, it renewed today according to the cancelation form

[14:52] <brokenchicken> yet not according to whois :( 

[14:52] * brokenchicken is being ripped off

[14:52] <mspo> .com's are consistent, anyway

[14:53] <brokenchicken> Is TimToady even writing a book?

[14:53] <perlpilot_> yes

[14:53] <mspo> brokenchicken: it looks like you're getting private whois

[14:53] <brokenchicken> :o

[14:54] <mspo> Tech Name: Oneandone Private Registration

[14:54] <brokenchicken> yup

[14:54] <mspo> you normally pay extra for that

[14:54] <brokenchicken> yup

[14:54] *** hoelzro joined
[14:55] <raschip> ICANN has plans to end it, though. Private whois won't be anymore.

[14:55] <brokenchicken> :(

[14:55] <DrForr> There's Learning and Programming already being written.

[14:55] *** hoelzro left
[14:55] *** pyrimidine joined
[14:55] <mspo> raschip: really?

[14:56] * mspo prepares more shell companies

[14:56] <brokenchicken> :)

[14:57] *** hoelzro joined
[15:00] *** pyrimidine left
[15:06] <raschip> Shell companies don't cover the requirements because the requirement is a for contacts of persons, not companies.

[15:07] <brokenchicken> .oO( shell person of a shell company... )

[15:07] <raschip> They see domains the same way qsls, which require one to publish even their address to have.

[15:07] <brokenchicken> raschip: you have a robo message under raschi user, if you are the same person

[15:07] *** raschip is now known as raschi

[15:08] <raschi> what, waht?

[15:08] <yoleaux> 11 Jan 2017 20:03Z <brokenchicken> raschi: it was in #perl6-dev https://irclog.perlgeek.de/perl6-dev/2017-01-10#i_13894263 RE: "do you have a link to the log where what motivated that commit happened?"

[15:08] <mspo> how do they validate that I am who I say I am?

[15:09] *** cdg_ joined
[15:09] *** pyrimidine joined
[15:09] <mspo> in the US a Doing-Business-As or a C-Corp are as good as people

[15:09] <raschi> It's only validated if there's a dispute and ICANN needs a contact. If the contacts aren't valid, it's a violation of policy and the holding of the domain will be invalidated.

[15:10] *** faraco joined
[15:10] <timotimo> yeah, they hardly have time to vigorously check stuff up front

[15:10] *** newbie1 joined
[15:10] <raschi> You can't really buy a domain, you can only lease it's use from ICANN, and it requires one to follow the UDRP, which is a contract that says it has to be a real person.

[15:10] <mspo> raschi: I've done UDRP disputes before and "real person" wasn't really a thing

[15:11] <mspo> so that would be a lot of new rules

[15:11] <raschi> Like I said, they are starting to make policies about enforcement.

[15:11] <mspo> especially since it's mostly lawyers doing them

[15:11] *** cdg left
[15:12] <tbrowder> hi, any experts on use of Inline::Perl5 here that can help me with a type problem?

[15:13] <raschi> ICANN wants to stop SPAM, and that requires someone to be criminally responsible for it.

[15:14] *** pyrimidine left
[15:14] <raschi> "crimminally" in the sense of internet crimes, not real crimes

[15:14] <tbrowder> i'm trying to use p5's YAML module (only because p6 YAMLish is feature-limited at the moment)

[15:14] <mspo> yeah we'll see

[15:15] <brokenchicken> tbrowder: what if an non-expert knows the answer?

[15:15] *** abraxxa joined
[15:16] <tbrowder> well, if you know the answer then you are an expert from my view!

[15:16] *** njmurphy joined
[15:16] <brokenchicken> Well, there wasn't any question yet, and so no answer is possible.

[15:16] <tbrowder> i'm loading a yaml file into a p6 scalar

[15:17] <tbrowder> my $y = Load 'file'

[15:18] <tbrowder> say $y.WHAT

[15:18] <pmurias> raschi: internet crimes?

[15:18] <raschi> like spam

[15:18] <tbrowder> (Perl5Array)

[15:18] *** kurahaupo joined
[15:19] *** pyrimidine joined
[15:19] <tbrowder> i can deal with that after the fact, but i need to determine the type programmatically.

[15:19] <tbrowder> this doesn't work:

[15:20] <tbrowder> if $y ~~ Perl5Array

[15:20] <timotimo> won't Perl5Array do Positional for you?

[15:21] <perlpilot_> tbrowder: if $y.^name eq 'Perl5Array' { ... }   # ?

[15:22] <tbrowder> hm, not sure about Positional...need to read about tha

[15:24] <tbrowder> perlpilot_: thanks!  (remind me why the ^ is needed, please)

[15:24] <timotimo> i mean, would $y ~~ Positional work?

[15:25] <tbrowder> timotmo: i'll try that, too, thanks

[15:25] <perlpilot_> tbrowder: $x.^foo is asking for the foo method on $x's meta-object.

[15:25] <tbrowder> ah! thanks, ppilot!

[15:25] *** _4d47 joined
[15:26] <timotimo> it will also be so kind and pass the object itself as the first argument to the meta-method

[15:28] *** Gasher joined
[15:29] <perlpilot_> yeah,  $y.^name is like $y.HOW.name($y)

[15:30] *** kurahaupo left
[15:32] *** perlpilot_ is now known as perlpilot

[15:33] <_4d47> Bag has 'hash' method but also respond to 'Hash', Hash is not documented, not in ^methods and can't find where it's implemented

[15:33] *** bwisti joined
[15:35] <tbrowder>  perlpilot_: that works perfectly--thanks a heap!

[15:35] <perlpilot> _4d47: probably in Any

[15:37] <_4d47> perlpilot: ok your right found it in Any, it just calls 'hash'

[15:38] <raschi> Here is the report from the ICANN WG about what they are going to do about WHOIS: https://gnso.icann.org/en/issues/whois/thick-final-21oct13-en.pdf

[15:38] <brokenchicken> from 4 years ago?

[15:38] <brokenchicken> They don't seem to be in a rush :")

[15:38] <perlpilot> _4d47: when you're trying to find where a method is implemented, you should probably walk up the inheritance hierarchy

[15:38] <perlpilot> m: say Hash.^mro

[15:38] <camelia> rakudo-moar 94acf2: OUTPUT«((Hash) (Map) (Cool) (Any) (Mu))␤»

[15:39] <brokenchicken> m: Bag.new.^lookup("Hash").file.say

[15:39] <camelia> rakudo-moar 94acf2: OUTPUT«SETTING::src/core/Any.pm␤»

[15:39] <brokenchicken> oh heck, we even have a bot that can point to code

[15:39] <perlpilot> _4d47: or use brokenchicken's tool  :-)

[15:39] <perlpilot> brokenchicken++

[15:39] <brokenchicken> s: Bag.new, 'Hash', \()

[15:39] <SourceBaby> brokenchicken, Sauce is at https://github.com/rakudo/rakudo/blob/94acf2f/src/core/Any.pm#L75

[15:39] <raschi> "GNSO Adoption of the Final Report:  Adopted on: 21 January 2016  Resolved: The GNSO Council adopts, and recommends that the ICANN Board of Directors adopt, all the PPSAI PDP Working Group's final recommendations in the Final Report."

[15:40] <brokenchicken> lulz, it's self.hash.Hash :P

[15:40] <brokenchicken> s: Bag.new.hash, 'Hash', \()

[15:40] <SourceBaby> brokenchicken, Sauce is at https://github.com/rakudo/rakudo/blob/94acf2f/src/core/Hash.pm#L8

[15:40] <brokenchicken> s: Bag.new, 'hash', \()

[15:40] <SourceBaby> brokenchicken, Sauce is at https://github.com/rakudo/rakudo/blob/94acf2f/src/core/Baggy.pm#L334

[15:41] <brokenchicken> so basically in Bag .hash and .Hash are the same thing

[15:41] *** pyrimidine left
[15:41] <raschi> brokenchicken: And people continually complain ICANN moves too fast with these things.

[15:41] <_4d47> :s Bag.new, 'Hash'

[15:42] *** pyrimidine joined
[15:42] <brokenchicken> _4d47: I'd say it's Any.Hash that's not documented and once it is, it'd show up in Bag docs as well

[15:42] <brokenchicken> you got the trigger backwards; it's s: not :s

[15:43] <_4d47> ok thx :)

[15:43] <_4d47> s: Bag.new, 'Hash', \()

[15:43] <SourceBaby> _4d47, Sauce is at https://github.com/rakudo/rakudo/blob/94acf2f/src/core/Any.pm#L75

[15:43] <_4d47> s: Bag.new, 'Hash'

[15:43] <SourceBaby> _4d47, Something's wrong: ␤ERR: Type check failed in binding to &code; expected Callable but got Method+{<anon|68023856>} (Method+{<anon|6802385...)␤  in sub do-sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 42␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 33␤  in block <unit> at -e line 6

[15:44] <brokenchicken> yeah, there's this bug in Rakudo where not all Callables do Callable role -_-

[15:45] <brokenchicken> but see a few lines above, my invocations of the bot give all relevant URLs

[15:45] <_4d47> just curious why both hash and Hash? and I was under the assumption that methods that 'cast' where tc

[15:46] *** pyrimidine left
[15:47] *** faraco left
[15:55] <timotimo> hm. i thought of a good pun last night, but i forgot the framing :(

[15:56] *** pyrimidine joined
[15:57] <brokenchicken> Well, you MAST::Frame it right for it to be funny...

[16:00] *** cibs left
[16:00] <timotimo> oh yes

[16:00] <timotimo> here we go

[16:01] <timotimo> i find it silly that you call it "toast". it sounds kind of like "could i have some bake with my cook?"

[16:01] *** cibs joined
[16:02] * brokenchicken doesn't get it...

[16:02] <timotimo> "is this sit still free? a live of mine is going to come by later"

[16:03] * brokenchicken doesn't get it...

[16:03] <timotimo> OK

[16:03] <timotimo> i'll head out to have dinner with friends

[16:03] <timotimo> take care :)

[16:04] *** newbie1 left
[16:04] <timotimo> i hope you'll get fixed soon

[16:04] <brokenchicken> :)

[16:06] *** thayne left
[16:06] *** holyghost left
[16:07] *** kurahaupo joined
[16:07] *** pyrimidine left
[16:08] *** _4d47 left
[16:08] *** pyrimidine joined
[16:08] *** domidumont left
[16:12] *** pyrimidine left
[16:29] *** alimon left
[16:32] *** alimon joined
[16:35] <brokenchicken> huggable: total commits :is: cd $(mktemp -d); perl6 -MJSON::Fast -MLWP::Simple -e 'run |<git clone --bare>, $_ for from-json(LWP::Simple.get("https://api.github.com/orgs/perl6/repos")).map(*.<git_url>); my $total; for dir(".") { my $n = run(:out, |<git --git-dir>, $_, |<rev-list HEAD --count --author=zoffix>).out.slurp-rest.trim.Int; say "$n commits in $_"; $total += $n;}; say "Total: $total"

[16:36] <huggable> brokenchicken, Added total commits as cd $(mktemp -d); perl6 -MJSON::Fast -MLWP::Simple -e 'run |<git clone --bare>, $_ for from-json(LWP::Simple.get("https://api.github.com/orgs/perl6/repos")).map(*.<git_url>); my $total; for dir(".") { my $n = run(:out, |<git --git-dir>, $_, |<rev-list HEAD --count --author=zoffix>).out.slurp-rest.trim.Int; say "$n commits in $_"; $total += $n;}; say "Total: $total"

[16:36] <brokenchicken> ^ how to find out how many commits you made to perl6 org

[16:37] *** pyrimidine joined
[16:37] <perlpilot> no, that's how to find out how many commits zoffix made  :)

[16:37] <brokenchicken> well, yeah, you'd swap zoffix for your author

[16:38] * brokenchicken is at 1,823 commits to perl6 org and 461 commits to rakudo

[16:39] <brokenchicken> still a baby, compared to some other commiters :)

[16:39] * brokenchicken is now known as babychicken

[16:43] <moritz> brokenbabychicken?

[16:43] *** dataf3l joined
[16:45] *** dataf3l left
[16:46] *** dataf3l joined
[16:47] *** abraxxa left
[16:48] *** dataf3l left
[16:50] *** dataf3l joined
[16:51] *** cschwenz left
[16:55] *** dataf3l left
[16:56] <AlexDaniel> brokenchicken: I think a final single quote is missing

[16:56] *** dataf3l joined
[16:56] *** khw joined
[16:56] <brokenchicken> huggable: total commits :is: cd $(mktemp -d); perl6 -MJSON::Fast -MLWP::Simple -e 'run |<git clone --bare>, $_ for from-json(LWP::Simple.get("https://api.github.com/orgs/perl6/repos")).map(*.<git_url>); my $total; for dir(".") { my $n = run(:out, |<git --git-dir>, $_, |<rev-list HEAD --count --author=zoffix>).out.slurp-rest.trim.Int; say "$n commits in $_"; $total += $n;}; say "Total: $total"'

[16:56] <huggable> brokenchicken, Added total commits as cd $(mktemp -d); perl6 -MJSON::Fast -MLWP::Simple -e 'run |<git clone --bare>, $_ for from-json(LWP::Simple.get("https://api.github.com/orgs/perl6/repos")).map(*.<git_url>); my $total; for dir(".") { my $n = run(:out, |<git --git-dir>, $_, |<rev-list HEAD --count --author=zoffix>).out.slurp-rest.trim.Int; say "$n commits in $_"; $total += $n;}; say "Total: $total"'

[16:56] <brokenchicken> Thanks

[16:58] *** dataf3l left
[16:59] * [Coke] puts "update his resume" on the short term list.

[16:59] <brokenchicken> Why?

[17:00] <TimToady> hoping to get a job with the Trump administration?

[17:00] <brokenchicken> heh

[17:01] *** dataf3l joined
[17:03] <[Coke]> TimToady: I mean, we don't know each other well, but... no. :P

[17:03] *** dataf3l left
[17:04] *** dataf3l joined
[17:04] *** pyrimidine left
[17:04] <[Coke]> it's complicated, but in the general realm of mergers/acquisitions/outsourcing.

[17:05] *** pyrimidine joined
[17:05] <AlexDaniel> brokenchicken: it takes quite some time to get the stuff cloned… perhaps statisfiable should learn it

[17:06] <dataf3l> Hey Guys

[17:06] <TimToady> [Coke]: I understand, having been acquired more times than is strictly necessary in one lifetime...

[17:06] *** pmurias left
[17:06] <dataf3l> is there a callback graphviz thingie for Perl6 like this one?

[17:06] <dataf3l> https://github.com/TrueFurby/go-callvis

[17:07] <dataf3l> if not, is it easy to create one?

[17:07] <[Coke]> TimToady: It's kind of nifty that it's an article in the WSJ. :)

[17:07] *** cpage__ joined
[17:07] *** cpage left
[17:07] *** cpage__ is now known as cpage

[17:08] *** aindilis` joined
[17:10] *** Khisanth left
[17:10] *** Khisanth joined
[17:12] *** aindilis left
[17:12] *** pyrimidine left
[17:15] *** dataf3l left
[17:16] *** dataf3l joined
[17:19] *** dataf3l left
[17:19] *** pyrimidine joined
[17:20] *** dataf3l joined
[17:22] *** dataf3l left
[17:23] *** dataf3l joined
[17:24] *** pyrimidine left
[17:25] *** pyrimidine joined
[17:25] *** dataf3l left
[17:27] *** dataf3l joined
[17:27] *** cdg_ left
[17:28] *** cdg joined
[17:29] *** pyrimidine left
[17:31] *** wamba left
[17:31] *** dataf3l left
[17:32] *** raschi left
[17:32] *** Vynce joined
[17:33] *** dataf3l joined
[17:35] *** dataf3l left
[17:36] *** dataf3l joined
[17:38] *** dataf3l left
[17:40] *** dataf3l joined
[17:41] *** dakkar left
[17:41] *** dataf3l left
[17:43] *** dataf3l joined
[17:46] *** dataf3l left
[17:46] *** melezhik_ joined
[17:46] *** dataf3l joined
[17:47] *** Vynce left
[17:47] *** jonas1 left
[17:51] *** dataf3l left
[18:04] *** dataf3l joined
[18:07] *** dataf3l left
[18:09] *** dataf3l joined
[18:10] <brokenchicken> What is CORE:: called? namespace?

[18:10] <brokenchicken> "All routines and objects in CORE:: $what" 

[18:10] <brokenchicken> $what = ?

[18:11] <TimToady> it's a lexical scope in p6

[18:11] <brokenchicken> Thanks.

[18:13] *** dataf3l left
[18:14] *** dataf3l joined
[18:15] <TimToady> m: say SETTING::OUTER === CORE

[18:15] <camelia> rakudo-moar 94acf2: OUTPUT«False␤»

[18:15] <TimToady> that really oughta be True for the restricted setting...

[18:18] *** kyan joined
[18:18] *** dataf3l left
[18:19] <TimToady> m: say SETTING::OUTER::<pi> === CORE::<pi>

[18:19] <camelia> rakudo-moar 94acf2: OUTPUT«False␤»

[18:19] <TimToady> m: say SETTING::OUTER::OUTER::<pi> === CORE::<pi>

[18:19] <camelia> rakudo-moar 94acf2: OUTPUT«True␤»

[18:19] *** dataf3l joined
[18:19] <TimToady> huh, I wonder why there's a double OUTER there...

[18:24] *** dataf3l left
[18:32] *** zakharyas left
[18:32] *** pyrimidine joined
[18:33] *** andrzejku joined
[18:36] *** espadrine joined
[18:37] *** domidumont joined
[18:43] <brokenchicken> hah, now I finally get why some docs in Rakudo deliniate URLs with angled brackets.... It's how `perldoc` renders URLs!

[18:45] <geekosaur> there's actually an rfc for that, it's recommended as a delimiter (e.g. "is the dot at the end an end of sentence, or part of the URL?")

[18:47] *** wamba joined
[18:47] <brokenchicken> Ah :D

[18:47] *** labster joined
[18:49] *** pyrimidine left
[18:59] *** melezhik_ left
[19:02] *** pyrimidine joined
[19:07] *** pyrimidine left
[19:10] *** melezhik_ joined
[19:12] *** shayan_ joined
[19:13] *** shayan_ left
[19:13] *** darutoko left
[19:17] *** pyrimidine joined
[19:19] *** melezhik_ left
[19:20] *** cdg left
[19:21] <[Coke]> (docs) any feedback on my low-priority PR?

[19:25] *** shayan_ joined
[19:32] <brokenchicken> What's the PR?

[19:40] *** nicq20 joined
[19:42] <nicq20> Where does rakudo look for modules when you say `use Foo:Bar`?

[19:43] *** ufobat left
[19:43] *** pecastro left
[19:44] <brokenchicken> In one of Comp::Unit::Repository'ies... don't know more than that...

[19:44] *** zakharyas joined
[19:45] <brokenchicken> if you do use Blah::Blah it'll tell you where it tried to find it in

[19:47] <nicq20> brokenchicken: Thank you! Also found this: https://docs.perl6.org/language/5to6-perlvar (find @INC).

[19:50] *** girafe joined
[19:51] *** TEttinger joined
[19:53] <RabidGravy> m: say $*REPO.repo-chain.grep({ $_.can("prefix")})>>.prefix

[19:53] <camelia> rakudo-moar 94acf2: OUTPUT«("/home/camelia/.perl6".IO "/home/camelia/rakudo-m-inst-1/share/perl6/site".IO "/home/camelia/rakudo-m-inst-1/share/perl6/vendor".IO "/home/camelia/rakudo-m-inst-1/share/perl6".IO)␤»

[19:54] <nicq20>  I can't seem to get Git::Wrapper to install properly. If someone can, try to install it through zef/panda. I want to check if it's just me.

[19:55] <brokenchicken> ===SORRY!===

[19:55] <brokenchicken> Could not find Git::Log::Parser at line 2 in:

[19:56] <nicq20> Ok, same here. Not just me then.

[19:56] <brokenchicken> I see the issue. PR Incoming

[19:56] <nicq20> What is it?

[19:56] <moritz> something missing from META6.json?

[19:58] *** Gasher left
[19:59] <brokenchicken> nicq20: you can git clone the fork and `zef install .` or `panda install .` from that clone: https://github.com/perlpilot/p6-Git-Wrapper/pull/2

[19:59] <brokenchicken> nicq20: or ping perlpilot to merge it :)

[19:59] <brokenchicken> Untested, but I'm 99.99% sure that fixes the issue.

[20:00] *** labster left
[20:00] *** pyrimidine left
[20:00] <moritz> wow, just one expected failure in 10k attempts is a crazy level of certainty!

[20:01] <brokenchicken> Yup :) I'm failiry suire

[20:04] <nicq20> Hmm... Zef seems to die when doing that.

[20:04] <brokenchicken> there goes that one failure! :D

[20:04] <nicq20> uninitialized value $_ of type Any in string context.

[20:04] <brokenchicken> k, lemme clone this thing and do it right

[20:04] <nicq20> Zef::Distribution::Local) line 14

[20:05] <nicq20> brokenchicken: I think it's my end. :/

[20:05] *** pyrimidine joined
[20:06] <brokenchicken> hm... git clone https://github.com/perlpilot/p6-Git-Wrapper; edit META.info to stick this into it https://raw.githubusercontent.com/zoffixznet/p6-Git-Wrapper/936fbfec6b25bdef29abdf2d50f13277c459d6d4/META.info; zef install .; gives me "===> Install [OK] for Git::Wrapper:ver('0.0.1')"

[20:06] <brokenchicken> This is Rakudo version 2016.12-250-g9052427 built on MoarVM version 2016.12-71-g331a6b4

[20:07] *** ssotka joined
[20:07] <nicq20> Going to try and update zef then.

[20:09] *** pyrimidine left
[20:10] *** njmurphy left
[20:15] *** labster joined
[20:16] <perlpilot> brokenchicken++

[20:16] <perlpilot> nicq20: that PR is merged btw

[20:17] <nicq20> Ok, thank you! :D

[20:17] <brokenchicken> (prolly'll take a bit for the change to propagate to All Things that keep track of modules)

[20:18] <brokenchicken> and once that happens zef update (or panda update) is needed

[20:19] <RabidGravy> "X11 connection rejected because of wrong authentication"

[20:21] <mspo> RabidGravy: xauth merge

[20:24] *** ufobat joined
[20:30] *** zakharyas left
[20:31] *** zakharyas joined
[20:35] *** domidumont left
[20:35] *** Ven joined
[20:38] *** shayan_ left
[20:58] *** shayan_ joined
[21:04] *** Ven left
[21:04] *** Ven joined
[21:05] <ufobat> i am happy - my xpath implementation slowly grows and works :-) https://github.com/ufobat/p6-XML-XPath

[21:11] <brokenchicken> ufobat++ \o/

[21:14] *** shayan_ left
[21:17] *** shayan_ joined
[21:17] *** andrzejku left
[21:23] <RabidGravy> cool

[21:24] *** cdg joined
[21:24] <tadzik> yay!

[21:25] <AlexDaniel> ok, 18 MB left

[21:25] <AlexDaniel> time to do something

[21:29] <AlexDaniel> 37G	.xsession-errors

[21:29] <AlexDaniel> ahhaaaa

[21:29] <El_Che> whuut

[21:29] <geekosaur> remember you need to restart the session to get rid of that

[21:29] <AlexDaniel> yes, a 37GB error file!

[21:30] <lizmat> go for it!   :-)

[21:31] <tadzik> oh wtf

[21:31] <AlexDaniel> geekosaur: but what if I don't want to…

[21:31] <tadzik> what's in there!?

[21:31] <El_Che> AlexDaniel: compress it

[21:32] <El_Che> AlexDaniel: bzip2 or something efficient

[21:32] <AlexDaniel> why not just delete it, uh?

[21:32] <El_Che> AlexDaniel: who else has a 37gb error file?

[21:32] *** shayan_ left
[21:32] *** pyrimidine joined
[21:32] <geekosaur> because it's open in every X11 application, deleting it removes the name and leaves the data until all programs that have it open exit

[21:32] <El_Che> looks lik a accomplishment :)

[21:33] <El_Che> ">.xsession-errors" would empty it

[21:33] <geekosaur> no

[21:33] <AlexDaniel> some kind of an error related to a firefox addon I'm using

[21:33] <AlexDaniel> repeated thousands of times

[21:33] <geekosaur> or rather, only temporarily

[21:34] <El_Che> while :; do > .xsession-errors; sleep 1; done

[21:34] <El_Che> :)

[21:34] *** Ven left
[21:34] *** bjz joined
[21:35] <El_Che> > .xsession-errors; chattr +i .xsession-errors

[21:35] *** nicq20 left
[21:35] <geekosaur> sigh,

[21:35] <geekosaur> ok, please cargo cult to your hearts' content

[21:35] <tadzik> quickly remove it and symlink to /dev/null? :)

[21:36] <El_Che> rm .xsession-errors; ln -s /dev/null .xsession-errors

[21:36] <El_Che> I can go cargo culting all night :)

[21:36] <El_Che> tadzik: gmta :)

[21:37] *** pyrimidine left
[21:37] <tadzik> :)

[21:37] *** Ven joined
[21:39] <AlexDaniel> ok then…

[21:40] *** AlexDaniel left
[21:40] <El_Che> sudo mount -t tmpfs -o size=1m tmpfs /mnt; rm .xsession-errors; touch /mnt/.xsession-errors; ln -s /mnt/.xsession-errors 

[21:40] <El_Che> more farfetched :)

[21:40] *** shayan_ joined
[21:42] *** pmurias joined
[21:43] <pmurias> ggoebel: hmm, when is bigint being installed?

[21:45] *** AlexDaniel joined
[21:45] <geekosaur> the most fun part of that mess is that the simplistic :> solution will look like it worked, but the next error message output will result in a 37GB sparse file

[21:45] <El_Che> magic is fun

[21:46] <AlexDaniel> that's ok, occasional reboots are fine

[21:46] <AlexDaniel> 28 days of uptime… it's good that things like that make me reboot sometimes

[21:47] <AlexDaniel> imagine rebooting once a year… who knows what's going to happen, right? :)

[21:47] * geekosaur is due for a reboot as well, random memory leaks have the system pushing 50% swap usage

[21:47] <Technaton> El_Che: You don't want to actually use that temporary mountpoint: If its full, there will be alot of error messages littering your X seesion.

[21:48] <geekosaur> (which is better than when I got this machine, prebuilt with linux but someone botched creation of the swap partition so when it went over 5% used it overwrote the next filesystem on the disk. luckily that was being used as scratch space...)

[21:48] <Technaton> geekosaur: AFAIR, you can either employ logrotate or disable .xsession-errors completely by changing /etc/X11/Xsession to contain "exec >> /dev/null 2>&1".

[21:48] <geekosaur> depends on the distribution

[21:49] <Technaton> Uh-oh.

[21:49] <geekosaur> some of them use systemd/journalctl. not sure what the mint install I have is using but they actually clamp .xsession-errors size somehow

[21:49] <Technaton> Argh yes, the finer details of systemd...

[21:49] *** Ven left
[21:50] *** shayan_ left
[21:50] <geekosaur> also the >> there is useless, write and append are the same thing on /dev/null :)

[21:53] <El_Che> Technaton: I was under the impression the messages would be lost

[21:53] <AlexDaniel> geekosaur: ah, just realized. “why not just delete it” was a response to “compress it”

[21:54] <geekosaur> and logrotate doesn't work for this becauseyou can't force every running X app to reopen its stderr

[21:54] <geekosaur> so they keep logging to the old one

[21:54] <Technaton> El_Che: 'No sufficient space' is an error return code, that probably bubbels up. :/

[21:54] <Technaton> s/,//

[21:54] *** bjz left
[22:00] *** skids left
[22:04] *** Ven joined
[22:07] *** zacts left
[22:09] *** pyrimidine joined
[22:13] *** pyrimidine left
[22:15] *** Tonik joined
[22:16] *** sammers joined
[22:16] *** RabidGravy left
[22:20] *** Ven left
[22:21] *** bjz joined
[22:24] *** Ven joined
[22:24] <samcv> what is the way to do grapheme based regex?

[22:24] <samcv> i know ignoremark, but that ignores marks, what if you want to substitute marks in some text, what option do you use?

[22:25] *** cibs left
[22:26] *** cibs joined
[22:29] <AlexDaniel> samcv: wow, what a lovely question

[22:29] <AlexDaniel> indeed, how?

[22:29] <AlexDaniel> like, you can always work on NFDs, but…

[22:29] <samcv> i think i remember reading in a Synopsis that there was a way to do it

[22:29] <AlexDaniel> m: say ‘hëllo’.NFD.list ~~ (**, ‘e’.ord, **)

[22:29] <camelia> rakudo-moar c301b0: OUTPUT«True␤»

[22:29] <AlexDaniel> this doesn't really help

[22:30] <samcv> uh. hahaha

[22:30] <samcv> well. what if you don't want to work on NFD. like uh

[22:30] <AlexDaniel> well, if you don't want to work on NFD then it probably doesn't really make sense

[22:31] <AlexDaniel> the problem is more that we don't have .tr or .subst or something like that for Uni

[22:31] <samcv> m: my $var = "\c[family: man, boy]"; $var ~~ s/\c[BOY]//

[22:31] <camelia> rakudo-moar 077a75: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name family: man␤at <tmp>:1␤------> 3my $var = "\c[family: man7⏏5, boy]"; $var ~~ s/\c[BOY]//␤»

[22:31] <samcv> ah i know why that dosen't work

[22:32] *** cpage_ left
[22:32] <samcv> because of the comma. and that denotes multiple characters hmm

[22:32] <AlexDaniel> for example, let's say you have e􏿽xCC􏿽x88 and @̈, what would “substitute marks” mean in this case?

[22:32] <samcv> will have to remove those commas! since they shouldn't be significant

[22:32] <samcv> well. they are significant and denote multiple things in the official notation we use (not just perl 6's)

[22:33] <samcv> so ignoremark uses NFD?

[22:33] <samcv> i guess that makes sense

[22:34] *** bjz left
[22:34] <samcv> also who is this guy named Mark and why do we want to ignore him

[22:34] <samcv> not nice

[22:34] <perigrin> he's my brother, feel free to ignore him.

[22:35] <perigrin> He's a scrum master, he's used to it.

[22:35] <AlexDaniel> we still have no way to say “replace E with Z no matter what mark it has” I think

[22:35] <AlexDaniel> unless you want to process lists…

[22:35] <samcv> yeah we need that

[22:36] <AlexDaniel> in fact, can we even match ‘e’ in a regex with this kind of logic?

[22:36] *** Tonik left
[22:36] *** newbie1 joined
[22:36] *** Ven left
[22:36] <samcv> well if the e has marks on it

[22:37] <AlexDaniel> without doing something like <?{ $0[*-1].Str.samemark(‘a’).fc eq ‘e’.fc  }>

[22:37] <samcv> so i tried it and I think the emoji base characters can be replaced with ignoremark but not others

[22:37] <samcv> mostly sure

[22:37] <samcv> though it may result in some oddness

[22:37] <samcv> also it may not work with Extend characters

[22:37] <samcv> since they go [extend] + [base]

[22:37] <samcv> new in unicode 9.0

[22:37] <samcv> i added support for that but haven't tested with ignoremark or other things.

[22:38] *** zakharyas left
[22:39] <samcv> it says in the synopsis it ignores Mark. and Mark is a unicode property i'm almost certain is equivilant to Grapheme_Cluster_Break=Extend

[22:40] <samcv> u: { .uniprop('Mark') }

[22:40] <unicodable6> samcv, U+0300 COMBINING GRAVE ACCENT [Mn] (◌̀)

[22:40] <unicodable6> samcv, U+0301 COMBINING ACUTE ACCENT [Mn] (◌́)

[22:40] <unicodable6> samcv, https://gist.github.com/c8356cdfbaf54b4d23e4db244b908dda

[22:40] <samcv> u: { .uniprop('Mark') and .uniprop('GCB') ne 'Extend' }

[22:41] <unicodable6> samcv, U+0903 DEVANAGARI SIGN VISARGA [Mc] (◌ः)

[22:41] <unicodable6> samcv, U+093B DEVANAGARI VOWEL SIGN OOE [Mc] (◌ऻ)

[22:41] <unicodable6> samcv, https://gist.github.com/dcf2f7c182df3b8a6900c78deb0fb53d

[22:41] <samcv> m: 0xA8C1.uniprop('GCB').say

[22:41] <camelia> rakudo-moar 077a75: OUTPUT«SpacingMark␤»

[22:41] <samcv> ah kk. yep they have special GCB properties

[22:42] <samcv> and it doesn't include the Extend characters

[22:42] <samcv> u: { .uniprop('GCB') eq 'Extend' }

[22:43] <unicodable6> samcv, U+0300 COMBINING GRAVE ACCENT [Mn] (◌̀)

[22:43] <unicodable6> samcv, U+0301 COMBINING ACUTE ACCENT [Mn] (◌́)

[22:43] <unicodable6> samcv, https://gist.github.com/2bc840c2788bbbccb452aed693529de0

[22:43] <brokenchicken> m: s:ignoremark/e/z/ and .say given $ = "e\x[308]"

[22:43] <camelia> rakudo-moar 077a75: OUTPUT«z␤»

[22:43] <samcv> i've been working on improving the speed somewhat of the grapheme breaking code to use the GCB property instead of checking multiple other properties. Except when needed, ideally we can make checking that property the fastest and optimize it

[22:43] <brokenchicken> m: s:samemark/e/z/ and .say given $ = "e\x[308]"

[22:43] <camelia> rakudo-moar 077a75: OUTPUT«z̈␤»

[22:44] <samcv> since it is used more than any other

[22:44] <AlexDaniel> brokenchicken: right!!

[22:44] *** Ven joined
[22:44] <samcv> err i meant Prepend up there

[22:45] <samcv> <samcv> and it doesn't include the Extend characters # should have been Prepend

[22:45] *** _Vasyl left
[22:45] <samcv> u: { .uniprop('GCB') eq 'Prepend' }

[22:45] <AlexDaniel> so we in fact can do that kind of stuff! Cool!

[22:45] *** _Vasyl joined
[22:45] <unicodable6> samcv, U+0600 ARABIC NUMBER SIGN [Cf] (؀)

[22:45] <unicodable6> samcv, U+0601 ARABIC SIGN SANAH [Cf] (؁)

[22:45] <unicodable6> samcv, https://gist.github.com/4ce08721682af2940bce415d52e7af3c

[22:46] <samcv> m: "\c[ARABIC NUMBER SIGN]9".chars.say

[22:46] <camelia> rakudo-moar 077a75: OUTPUT«1␤»

[22:46] <samcv> yeah i knew i fixed that. was broken for a while

[22:46] <samcv> until fairly recently

[22:46] <brokenchicken> m: "\c[ARABIC NUMBER SIGN]9".say

[22:46] <camelia> rakudo-moar 077a75: OUTPUT«؀9␤»

[22:46] <brokenchicken> m: "\c[ARABIC NUMBER SIGN]9".Int.say

[22:46] <camelia> rakudo-moar 077a75: OUTPUT«Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5؀9' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[22:46] <AlexDaniel> hmhm somebody keeps adding doc labels :o

[22:47] <samcv> m: my $var = "\c[ARABIC NUMBER SIGN]9"; say $var ~~ s:ignoremark/9/3/

[22:47] <camelia> rakudo-moar 077a75: OUTPUT«False␤»

[22:47] <samcv> yeah it be broke

[22:47] <brokenchicken> AlexDaniel: heh, there's a GitHub hook Geth could sub to to tell you who :)

[22:47] <samcv> AlexDaniel, like labels for bugs?

[22:47] <AlexDaniel> yea

[22:48] <samcv> heh

[22:48] <samcv> will add that to my list of unicode thinks to investigate

[22:49] <AlexDaniel> duplicate, experimental, external, POD, meta…

[22:49] <samcv> the extend one. i already knew it was untested except grapheme break. heh hence my grant proposal. have been thinking about maybe making one, but now i feel comfortable knowing the scope of the project

[22:49] <AlexDaniel> all these don't have many tickets attached to them and were added for no good reason I believe

[22:49] <AlexDaniel> there was a time when we had a ton of doc labels

[22:49] <AlexDaniel> and all of them were thrown away because they were so useless

[22:50] *** Ven left
[22:50] <AlexDaniel> in the end it was decided to keep it very simple and so we got ｢site｣ ｢docs｣ ｢build｣ and ｢search｣

[22:50] <samcv> ah kk

[22:51] <AlexDaniel> 4 labels enough to sort stuff into main categories, but not enough to be more specific (but who said that we want to be very specific?)

[22:52] <AlexDaniel> I think this was even documented somewhere…

[22:53] <AlexDaniel> and now we have a ton of labels and again it's not clear what they are for

[22:53] <AlexDaniel> what's a ｢wishlist｣? Isn't this whole bug tracker a wishlist?

[22:54] <samcv> yeah i guess so

[22:57] *** espadrine left
[22:58] <AlexDaniel> m: { m/<:M>/ }

[22:58] <camelia> rakudo-moar 077a75: OUTPUT«Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block  at <tmp> line 1␤»

[22:58] <AlexDaniel> oops

[22:58] <AlexDaniel> u: { m/<:M>/ }

[22:58] <unicodable6> AlexDaniel, «timed out after 30 seconds, output»:  «exit signal = SIGHUP (1)»

[22:59] <AlexDaniel> well, thank you very much, slowpoke

[22:59] <AlexDaniel> u: { .chr ~~ /<:M>/ }

[22:59] <unicodable6> AlexDaniel, U+0300 COMBINING GRAVE ACCENT [Mn] (◌̀)

[22:59] <unicodable6> AlexDaniel, U+0301 COMBINING ACUTE ACCENT [Mn] (◌́)

[23:00] <unicodable6> AlexDaniel, https://gist.github.com/8d3f0ae42910a43d043f887e65fcc33d

[23:01] *** lukiramu left
[23:02] <AlexDaniel> anyway, brokenchicken++ ( https://github.com/perl6/doc/issues/1133 )

[23:02] <samcv> AlexDaniel++ your doc ticket

[23:02] <brokenchicken> That sounds like it can be subsumed under https://github.com/perl6/doc/issues/919

[23:03] <brokenchicken> like there should be just one place that documents all of these adverbs as they're (mostly) shared between rx//, m//, s///, S///, .match, .subst, and .subst-mutate

[23:03] <AlexDaniel> could be

[23:04] *** Ven joined
[23:04] *** girafe left
[23:04] *** shayan_ joined
[23:05] <samcv> brokenchicken, any atom-language-perl6 bugs not fixed yet you've noticed

[23:05] *** cpage_ joined
[23:05] <samcv> fixing proto method/sub now

[23:06] <brokenchicken> samcv: nope. I've been taking a break from P6

[23:06] <samcv> kk

[23:06] <brokenchicken> Playing Dying Light :)

[23:11] *** pyrimidine joined
[23:11] *** pmurias left
[23:16] *** cale2 joined
[23:16] <cale2> hey all

[23:16] *** pyrimidine left
[23:18] <samcv> hi

[23:21] <cale2> why do people say that perl6 is "the future"? Is it mainly because of the grammars?

[23:21] *** Ven left
[23:22] <cale2> I'm just thinking, if you like dynamic languages, why wouldn't something like Elixir be "the future"? With pattern matching and stuff

[23:22] <samcv> I have never used Elixer, what type of pattern matching?

[23:24] *** Ven joined
[23:24] <cale2> def matcher(""), do: :nothing

[23:24] <cale2> def matcher(str), do: :something

[23:24] <samcv> so it does something if it matches?

[23:24] <cale2> match on variables as parameters

[23:24] <cale2> match in case statements like 

[23:24] <samcv> match the variable name?

[23:24] <brokenchicken> cale2: yeah, we have that too

[23:25] <samcv> i'm not sure what you mean match on variables, we can match on variables

[23:25] <cale2> brokenchicken: I know perl6 has gradual typing and you can do multiple dispatch, but I think it's a bit different, right?

[23:25] <brokenchicken> cale2: why not ask people who say perl6 is the future about why they say that? :) I suspect there are many personal reasons involved as well.

[23:26] <cale2> brokenchicken: that's exactly what I'm doing :)

[23:26] <cale2> I want to know

[23:26] <brokenchicken> haha :)

[23:27] <brokenchicken> Well, sane concurrency (and as I recall Exlixir rocks there too); superb unicode support (which will soon become even awesome); to my limited knowledge only Swift is on similar level.

[23:27] *** pyrimidine joined
[23:27] <brokenchicken> My personal reason is the language fits my brain and I like the community. I heard good things about Elixir, but never had a chance to give it a spin.

[23:27] <cale2> I think Elixir, swift, and perl6 all have similar unicode support

[23:27] <brokenchicken> cool

[23:28] <cale2> What are some things that are on the roadmap for perl6? I was just reading about MoarVM for example, and it looks like there is still a lot of work to be done there

[23:28] <brokenchicken> Oh yeah, there's still tons of work to do. First stable release was just a year ago.

[23:29] <brokenchicken> I think the current roadmap is largely focused on improving stability and performance.

[23:29] <brokenchicken> My personal goal is to improve the test coverage.

[23:30] <cale2> brokenchicken: Is there a guide to the perl6 architecture? I'm confused about why it's a good idea to make NQP, Rakudo, and Perl6 all different things

[23:30] <brokenchicken> cale2: we have a marketing brochure that's handed out at events. Perhaps it'll be helpful to you: https://github.com/perl6/doc/issues/919

[23:30] <samcv> wait is that the right link...

[23:30] <brokenchicken> oops nope.

[23:30] <brokenchicken> My copy-paste is broken again

[23:30] <samcv> cale2, also see speed test over time http://tux.nl/Talks/CSV6/speed4.html

[23:31] <samcv> so improvement is occuring pretty fast

[23:31] <brokenchicken> I'm glad previous buffer didn't have anything embarasing :P

[23:31] <brokenchicken> cale2: this is the brochure I meant: https://github.com/perl6/marketing/blob/master/Brochures/Perl6-PR-Brochure/Perl6-PR-Brochure.pdf

[23:31] <samcv> heh

[23:31] <samcv> that is a great brochure. 

[23:31] *** pyrimidine left
[23:32] *** chaceface joined
[23:32] <cale2> In regards to the whole P6 world though, why make NQP, Rakudo, and Perl6 all different things?

[23:32] <chaceface> hi all. is there an easy way to see all declared lexicals?

[23:34] <brokenchicken> cale2: Perl 6 is the language. It's just the specification that defines what that language is (by comparison, think C language). Rakudo is a compiler for it (think, gcc); althought it's the most developed it doesn't have to be the only one. Perl 6 is a pretty big language. It'd be hard to optimize it, so there's a Perl 6 subset, the NQP (which is also a compiler-writing toolchain). So we write Rakudo using NQP

[23:34] <brokenchicken> and Perl 6. And the last bits of the puzzle are the backends. Currently, most developed is MoarVM, behind it is JVM, and further behind is JavaScript backened. That basically lets you run code compiled by Rakudo on any of the backends you like the most.

[23:34] <brokenchicken> m: my $foo; say MY::.keys

[23:34] <camelia> rakudo-moar f10b09: OUTPUT«($=pod $foo !UNIT_MARKER EXPORT $_ $! ::?PACKAGE GLOBALish $¢ $=finish $/ $?PACKAGE)␤»

[23:34] <brokenchicken> chaceface: ^ prolly that. keys are names and values are things themselves IIRC

[23:34] *** Ven left
[23:35] <chaceface> > MY::.keys ($=pod !UNIT_MARKER $_ EXPORT ::?PACKAGE GLOBALish $?PACKAGE)

[23:35] <chaceface> i'm certainly getting that, but i have @data and a couple others declared in the shell

[23:36] <brokenchicken> m: my $foo; my @data; say MY::.keys

[23:36] <camelia> rakudo-moar f10b09: OUTPUT«($=pod $foo !UNIT_MARKER EXPORT $_ $! @data ::?PACKAGE GLOBALish $¢ $=finish $/ $?PACKAGE)␤»

[23:36] <brokenchicken> shows up here. What you mean by the shell? The REPL?

[23:36] <chaceface> yeah the REPL

[23:36] *** cpage_ left
[23:36] <brokenchicken> hm, yeah, I see those are missin' from it

[23:36] <chaceface> thanks, broken

[23:36] <cale2> "Perl 6 is a pretty big language. It'd be hard to optimize it, so there's a Perl 6 subset, the NQP" My thought on that is, why design a language that is so incredibly difficult to write a compiler for? The chances of another compiler getting up and going are slim to none, right?

[23:38] <brokenchicken> chaceface: not sure how to get it to output in the REPL to. Maybe try some of the other MY::-like things? They're documented here: https://docs.perl6.org/language/packages#index-entry-MY_%28package%29

[23:38] *** rindolf left
[23:38] <chaceface> awesome. that's a good start. thank broken!

[23:40] <brokenchicken> cale2: on the website, I see there have been 5 other compilers in the past. At a time, some of them were being developed simultaneously. As to why design... well, why not? :)

[23:40] <brokenchicken> cale2: I'm not the best person to give a more detailed answer, as I've not participated in that process :)

[23:41] <cale2> So, PUGS for example, did not need NQP to work?

[23:42] *** BenGoldberg joined
[23:42] <brokenchicken> No idea. But I see nqp repo was created in 2009, so I guess some compilers didn't need it.

[23:42] <brokenchicken> (design first started in 2001 or something along those lines).

[23:43] <brokenchicken> I'd guess this wasn't made hard just for the sake of being hard, but because there was some benefit from it.

[23:43] *** Ven joined
[23:44] * brokenchicken leaves to murder zombies

[23:44] *** chaceface left
[23:45] *** pyrimidine joined
[23:46] *** Ben_Goldberg joined
[23:47] *** BenGoldberg left
[23:47] *** Ben_Goldberg is now known as BenGoldberg

[23:48] *** ufobat left
[23:50] *** Ven left
[23:52] *** pyrimidine left
[23:52] <TEttinger> cale2: lots of other languages use a subset at some point for bootstrapping

[23:53] <TEttinger> Haskell, in some versions of some compilers, would compile to a subset of C called C--

[23:54] *** pecastro joined
[23:54] <TEttinger> pretty much any bootstrapped language needs an initial smaller version of the language before it can run itself

[23:56] *** kurahaupo left
[23:56] <b2gills> The Perl 6 project started as a way to move forward in new directions without having to maintain backwards compatibility.

[23:56] <b2gills> In the mean time ideas from other programming languages "crept" in, and now we have Perl 6.

[23:57] *** dugword joined
