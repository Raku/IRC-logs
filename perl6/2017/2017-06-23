[00:01] *** awwaiid left
[00:04] *** cpage_ joined
[00:04] *** nhywyll left
[00:07] *** awwaiid joined
[00:09] *** mcmillhj joined
[00:10] *** Cabanossi left
[00:12] *** awwaiid left
[00:12] *** Cabanossi joined
[00:13] *** awwaiid joined
[00:18] *** awwaiid left
[00:21] *** BenGoldberg joined
[00:24] <BenGoldberg> Does anyone know if there is, somewhere in moar, an identity function which takes a void* and returns the same?

[00:25] *** awwaiid joined
[00:30] *** awwaiid left
[00:31] *** awwaiid joined
[00:31] <BenGoldberg> I want to turn a Routine into a Pointer, which can be stored in a CStruct, which would then get passed to a library routine... I'm 99% sure that I can make an identity function dwiw.

[00:33] *** lookatme joined
[00:33] <lookatme> morning 

[00:36] *** awwaiid left
[00:43] *** nadim left
[00:47] *** awwaiid joined
[00:51] *** awwaiid left
[00:55] *** Cabanossi left
[00:58] *** Cabanossi joined
[01:03] *** klapperl_ joined
[01:04] *** klapperl left
[01:07] *** aborazmeh joined
[01:07] *** aborazmeh left
[01:07] *** aborazmeh joined
[01:08] *** awwaiid joined
[01:10] *** imcsk8 left
[01:17] *** TimToady left
[01:17] *** imcsk8 joined
[01:19] *** awwaiid left
[01:21] *** awwaiid joined
[01:23] *** TimToady joined
[01:26] *** awwaiid left
[01:27] *** awwaiid joined
[01:27] *** TimToady left
[01:27] *** skids joined
[01:29] *** raschipi joined
[01:29] *** CodeSnow is now known as pilne

[01:32] *** awwaiid left
[01:45] *** TimToady joined
[02:06] *** awwaiid joined
[02:10] *** Cabanossi left
[02:10] *** awwaiid left
[02:13] *** Cabanossi joined
[02:13] *** mcmillhj left
[02:23] *** noganex joined
[02:26] *** noganex_ left
[02:27] *** awwaiid joined
[02:32] *** awwaiid left
[02:32] *** pilne left
[02:38] *** awwaiid joined
[02:41] *** mcmillhj joined
[02:41] *** MasterDuke joined
[02:42] *** aborazmeh left
[02:43] *** awwaiid left
[02:44] *** awwaiid joined
[02:44] *** mcmillhj left
[02:48] *** awwaiid left
[02:54] *** awwaiid joined
[02:56] *** mcmillhj joined
[02:56] <rouking_> what's the difference between having a whenever block inside a react block or not?

[02:59] *** awwaiid left
[03:01] *** mcmillhj left
[03:05] *** awwaiid joined
[03:08] *** Ben_Goldberg joined
[03:08] *** BenGoldberg left
[03:08] *** Ben_Goldberg is now known as BenGoldberg

[03:10] *** awwaiid left
[03:11] *** awwaiid joined
[03:12] *** mcmillhj joined
[03:15] *** skids left
[03:16] *** mcmillhj left
[03:22] *** awwaiid left
[03:22] *** AlexDaniel left
[03:23] *** grondilu left
[03:23] *** awwaiid joined
[03:24] *** skids joined
[03:27] *** awwaiid left
[03:29] *** awwaiid joined
[03:30] *** raschipi left
[03:35] *** colomon left
[03:35] *** ChoHag joined
[03:39] *** Cabanossi left
[03:40] *** awwaiid left
[03:41] *** awwaiid joined
[03:42] *** Cabanossi joined
[03:43] *** mcmillhj joined
[03:44] *** skids left
[03:45] *** BenGoldberg left
[03:45] *** TimToady left
[03:46] *** awwaiid left
[03:46] *** khw left
[03:48] *** mcmillhj left
[03:48] *** ChoHag left
[03:57] *** awwaiid joined
[04:02] *** awwaiid left
[04:02] *** awwaiid joined
[04:03] *** kaare_ joined
[04:09] *** awwaiid left
[04:10] *** Cabanossi left
[04:12] *** Cabanossi joined
[04:14] *** TimToady joined
[04:14] *** astj left
[04:15] *** awwaiid joined
[04:20] *** awwaiid left
[04:20] *** awwaiid joined
[04:29] *** awwaiid left
[04:31] *** mcmillhj joined
[04:33] *** astj joined
[04:36] *** mcmillhj left
[04:41] *** awwaiid joined
[04:45] *** awwaiid left
[04:47] *** mcmillhj joined
[04:47] *** awwaiid joined
[04:49] *** curan joined
[04:51] *** |oLa| joined
[04:51] *** mcmillhj left
[04:56] *** Cabanossi left
[04:57] *** awwaiid left
[04:57] *** Cabanossi joined
[05:00] *** astj left
[05:01] *** astj joined
[05:02] *** cpage_ left
[05:03] *** awwaiid joined
[05:11] *** wamba joined
[05:12] *** awwaiid left
[05:13] *** awwaiid joined
[05:20] *** xtreak joined
[05:23] *** awwaiid left
[05:29] *** TimToady left
[05:29] *** cpage_ joined
[05:30] *** rindolf joined
[05:33] *** domidumont joined
[05:38] *** domidumont left
[05:39] *** domidumont joined
[05:40] *** prodotiscus joined
[05:40] *** awwaiid joined
[05:40] *** xtreak left
[05:44] *** TimToady joined
[05:48] <moritz> lichtkind: pong

[05:48] <yoleaux> 22 Jun 2017 21:07Z <eveo> moritz: do you remember what "not raising with Junctions" means in this commit? We now have a situation that Junction == Numeric results in a Junction, but Junction != Numeric collapses the Junction and returns a Bool. That difference wasn't intended, was it? https://github.com/rakudo/rakudo/commit/4a247b1a34af698ba201070d915ea0d8d88c7774

[05:50] *** domidumont left
[05:50] <moritz> .tell eveo the idea was that any(2, 3) != $x is interpreted as !(any(2,3) == $x), because the former is basically never what you want. That's why the != variant returns a Bool and the == a Junction

[05:50] <yoleaux> moritz: I'll pass your message to eveo.

[05:50] *** awwaiid left
[05:51] *** TimToady_ joined
[05:51] *** TimToady left
[05:51] *** awwaiid joined
[05:56] *** awwaiid left
[05:57] *** awwaiid joined
[06:05] *** domidumont joined
[06:08] *** awwaiid left
[06:14] *** awwaiid joined
[06:18] *** xtreak joined
[06:19] *** wamba left
[06:19] *** prodotiscus left
[06:19] *** prodotiscus joined
[06:22] *** zapwai left
[06:23] *** TimToady_ left
[06:23] *** awwaiid left
[06:23] *** TimToady joined
[06:25] *** Cabanossi left
[06:26] *** xtreak left
[06:26] *** Cabanossi joined
[06:30] *** prodotiscus left
[06:30] *** prodotiscus joined
[06:30] *** awwaiid joined
[06:33] *** mcmillhj joined
[06:35] *** awwaiid left
[06:35] *** abraxxa joined
[06:37] *** mcmillhj left
[06:46] *** awwaiid joined
[06:51] *** scimon joined
[06:51] *** awwaiid left
[06:51] *** |oLa| left
[06:52] *** awwaiid joined
[06:57] *** awwaiid left
[06:58] *** awwaiid joined
[07:04] *** wamba joined
[07:05] *** awwaiid left
[07:11] *** awwaiid joined
[07:18] *** awwaiid left
[07:19] *** ufobat joined
[07:24] *** Cabanossi left
[07:25] *** salv0 joined
[07:26] *** Cabanossi joined
[07:31] *** prodotiscus left
[07:34] *** TimToady left
[07:34] *** TimToady joined
[07:35] *** prodotiscus joined
[07:39] *** Sense8 joined
[07:46] *** awwaiid joined
[07:47] *** salv0 left
[07:49] *** ChoHag joined
[07:50] *** TimToady left
[07:51] *** awwaiid left
[07:51] *** awwaiid joined
[07:53] *** zakharyas joined
[07:55] *** awwaiid left
[08:00] *** salv0 joined
[08:00] *** Sgeo_ joined
[08:01] *** Sgeo left
[08:03] *** TimToady joined
[08:05] *** keylet left
[08:08] *** TimToady left
[08:13] *** awwaiid joined
[08:17] *** |oLa| joined
[08:17] *** awwaiid left
[08:19] *** awwaiid joined
[08:19] *** ChoHag left
[08:20] *** TimToady joined
[08:21] *** |oLa| left
[08:24] *** awwaiid left
[08:24] *** awwaiid joined
[08:31] *** Sense8 left
[08:31] *** Sense8 joined
[08:35] *** awwaiid left
[08:35] *** awwaiid joined
[08:39] *** awwaiid left
[08:41] *** awwaiid joined
[08:45] *** awwaiid left
[08:45] *** [ptc] joined
[08:46] *** awwaiid joined
[08:48] *** TimToady left
[08:51] *** TimToady joined
[08:54] *** rindolf left
[08:54] *** awwaiid left
[08:55] *** Sense8 left
[08:58] *** rindolf joined
[08:59] *** TimToady left
[09:00] *** awwaiid joined
[09:06] *** TimToady joined
[09:06] *** awwaiid left
[09:10] *** Cabanossi left
[09:11] *** TimToady left
[09:12] *** Cabanossi joined
[09:13] *** awwaiid joined
[09:16] *** TEttinger left
[09:17] *** TimToady joined
[09:17] *** awwaiid left
[09:24] *** awwaiid joined
[09:28] *** awwaiid left
[09:29] *** TimToady left
[09:29] *** TimToady joined
[09:29] *** awwaiid joined
[09:30] *** parv joined
[09:34] *** awwaiid left
[09:40] *** awwaiid joined
[09:46] *** awwaiid left
[09:47] *** awwaiid joined
[09:48] *** eveo joined
[09:49] *** TimToady left
[09:49] <eveo> moritz: the problem with it is that it's a special case that tries to guess "what I really want". .Bool collapses junctions, but now it's .Bool, or !=, 'cause there it's not really what you want

[09:49] <eveo> moritz: I'd still evaluate 5|6 != 42 in a Bool context, so I'm not really following what I'd not really want :/

[09:50] <eveo> m: say one(5, 6) != 6

[09:50] <camelia> rakudo-moar 4079f7: OUTPUT: «False␤»

[09:50] <eveo> m: say one(5, 6) == 6

[09:50] <camelia> rakudo-moar 4079f7: OUTPUT: «one(False, True)␤»

[09:50] <eveo> m: say so one(5, 6) == 6

[09:50] <camelia> rakudo-moar 4079f7: OUTPUT: «True␤»

[09:50] <eveo> Yeah, and it's wrong too

[09:52] *** bhm left
[09:55] *** lookatme left
[09:56] *** TimToady joined
[09:56] *** Cabanossi left
[09:57] *** Cabanossi joined
[09:57] *** awwaiid left
[10:03] *** awwaiid joined
[10:04] <Xliff> BenGoldbert: Let me know if you ever find an answer to that question.

[10:04] <Xliff> ^^ BenGoldberg

[10:05] *** colomon joined
[10:06] <Xliff> BenGoldberg: Wouldn't nativecast work, though?

[10:08] *** domidumont left
[10:09] *** TimToady left
[10:11] *** nhywyll joined
[10:12] *** awwaiid left
[10:12] *** prodotiscus left
[10:14] *** prodotiscus joined
[10:18] *** awwaiid joined
[10:21] *** TimToady joined
[10:22] *** awwaiid left
[10:24] *** awwaiid joined
[10:26] <tbrowder> hi. #perl6!  is the person responsible for perl6.party present?

[10:27] <moritz> tbrowder: that would be eveo 

[10:28] <moritz> eveo: the problem with != and junctions was that people were quite often surprised by the results

[10:28] <eveo> moritz: currently result is wrong

[10:28] <eveo> I'd say that's quite surprising

[10:28] <moritz> eveo: no, it's as designed and tested

[10:28] <moritz> it's not consistent with the rest, which you can count as surprising

[10:29] *** awwaiid left
[10:29] *** awwaiid joined
[10:30] <tbrowder> thanks, moritz. i was going to ask about the site details, but i just found the github link WAY at the bottom.  (anyone else not fond of the single-page site format?)

[10:30] <eveo> Make your own site then

[10:30] <tbrowder> but the blog entries look nice.  

[10:31] <moritz> eveo: search for "Use of negative operators with junctions" in S03

[10:32] <eveo> m: say one(5, 6, 6) !== 6

[10:32] <camelia> rakudo-moar 4079f7: OUTPUT: «True␤»

[10:32] <eveo> m: say one(5, 6, 6) !=== 6

[10:32] <camelia> rakudo-moar 4079f7: OUTPUT: «True␤»

[10:32] <eveo> S03:00

[10:32] <synopsebot6> Link: http://design.perl6.org/S03.html#line_00

[10:32] <tbrowder> eveo: maybe i will, that's why i was looking for site construction details.

[10:32] *** itaylor57 left
[10:32] <moritz> S03:3327

[10:32] <synopsebot6> Link: http://design.perl6.org/S03.html#line_3327

[10:33] <eveo> tbrowder: out of your own articles. The ones on perl6.party are copyrighted.

[10:33] <tbrowder> sure, i understand

[10:34] <eveo> moritz: that section entirely ignores that there's more than one type of junction

[10:34] *** awwaiid left
[10:34] <eveo> "as designed and tested" for a poorly thought special case 

[10:35] *** awwaiid joined
[10:36] *** itaylor57 joined
[10:37] *** bhm joined
[10:37] <eveo> m: say all(5, 6) != 6

[10:37] <camelia> rakudo-moar 4079f7: OUTPUT: «True␤»

[10:37] <eveo> m: say none(5, 6) != 6

[10:37] <camelia> rakudo-moar 4079f7: OUTPUT: «True␤»

[10:38] <eveo> It only works for an `any` junction which coincidentally is the only junction shown in the spec

[10:38] <tbrowder> i've been looking for a good blogging platform and attended Henry Van Styn's Rapi::Blog session at TPC NA 2017.  looks like a good possibility.

[10:40] *** awwaiid left
[10:41] *** AlexDaniel joined
[10:43] <eveo> huggable: 6.d

[10:43] <huggable> eveo, Proposals for 6.d language: https://github.com/perl6/specs/blob/master/v6d.pod

[10:46] *** awwaiid joined
[10:50] <eveo> m: say 2 ne 1 & 2 & 3

[10:50] <camelia> rakudo-moar 4079f7: OUTPUT: «True␤»

[10:50] *** awwaiid left
[10:51] <eveo> m: say 2 !~~ 1 | 2 | 3

[10:51] <camelia> rakudo-moar 4079f7: OUTPUT: «False␤»

[10:51] <eveo> m: say 2 !== 1 | 2 | 3

[10:51] <camelia> rakudo-moar 4079f7: OUTPUT: «False␤»

[10:52] *** awwaiid joined
[10:54] *** curan left
[10:55] <eveo> At least this shit is documented.

[10:55] <eveo> Perl 6 just lost one more piece of my heart due to this.

[10:55] <eveo> Consistently inconsistent.

[10:55] *** eveo left
[10:57] *** ggoebel left
[10:59] *** awwaiid left
[11:05] *** awwaiid joined
[11:08] *** wamba left
[11:09] *** Cabanossi left
[11:10] *** awwaiid left
[11:11] *** ggoebel joined
[11:12] *** Cabanossi joined
[11:16] *** awwaiid joined
[11:18] *** TimToady left
[11:18] *** TimToady joined
[11:21] *** awwaiid left
[11:22] *** awwaiid joined
[11:27] *** awwaiid left
[11:29] *** awwaiid joined
[11:36] *** awwaiid left
[11:43] *** awwaiid joined
[11:44] *** [ptc] left
[11:44] *** [ptc] joined
[11:48] *** awwaiid left
[11:49] *** awwaiid joined
[11:53] *** awwaiid left
[11:54] *** awwaiid joined
[12:05] *** awwaiid left
[12:06] *** awwaiid joined
[12:06] *** parv left
[12:07] *** TimToady left
[12:10] *** Cabanossi left
[12:11] *** domidumont joined
[12:11] *** awwaiid left
[12:11] *** Cabanossi joined
[12:12] *** awwaiid joined
[12:17] *** awwaiid left
[12:18] *** awwaiid joined
[12:20] *** TimToady joined
[12:23] *** awwaiid left
[12:24] *** awwaiid joined
[12:35] *** awwaiid left
[12:36] *** awwaiid joined
[12:37] *** wamba joined
[12:38] *** salv0 left
[12:41] *** awwaiid left
[12:42] *** awwaiid joined
[12:44] *** domidumont left
[12:46] *** domidumont joined
[12:46] *** awwaiid left
[12:47] *** pmurias joined
[12:47] *** awwaiid joined
[12:49] *** TimToady left
[12:49] *** ZofBot left
[12:49] *** TimToady joined
[12:49] *** ZofBot joined
[12:49] *** ChanServ sets mode: +v ZofBot

[12:52] *** mcmillhj joined
[12:52] *** awwaiid left
[12:52] *** wamba left
[12:53] *** awwaiid joined
[12:53] *** TimToady left
[12:53] *** setty1 joined
[12:54] *** setty1 left
[12:54] *** setty1 joined
[12:54] *** Cabanossi left
[12:57] *** Cabanossi joined
[13:01] <perlpilot> With $obj.can('method'), is there a way to find out where candidates came from without inspecting their signatures?

[13:03] *** jdv79_ is now known as jdv79

[13:03] *** awwaiid left
[13:03] *** lollercopter joined
[13:03] <lollercopter> perlpilot: yes, .package

[13:04] <lollercopter> m: say "".can("contains")».package

[13:04] <camelia> rakudo-moar b31b15: OUTPUT: «((Str) (Cool))␤»

[13:04] <perlpilot> ah, thanks.  I knew there must've been something.

[13:05] <perlpilot> I even looked at the list of methods and didn't see that one.

[13:09] *** awwaiid joined
[13:12] *** prodotiscus left
[13:12] *** prodotiscus joined
[13:12] <perlpilot> Hmm. That doesn't work too well with multi methods.  (or it's making some sort of indictment of my intelligence ...

[13:12] <perlpilot> m: class C  { multi method m() { }; multi method m($a,$b) { } }; C.can('m').[0].package

[13:12] <camelia> rakudo-moar f72c97: ( no output )

[13:13] *** TimToady joined
[13:13] <perlpilot> m: class C  { multi method m() { }; multi method m($a,$b) { } }; C.can('m').[0].package.say

[13:13] <camelia> rakudo-moar f72c97: OUTPUT: «(Dummy)␤»

[13:13] <lollercopter> You get a proto. You need to get to the actual .candidate you want

[13:15] <perlpilot> sure, but that just means I need to adjust my idea of what .can does.

[13:15] <perlpilot> (I've been thinking of it as returning candidates)

[13:15] <lollercopter> perlpilot: what are you trying to accomplish?

[13:15] <lollercopter> There's .cando method you can use to pick a candidate

[13:16] <lollercopter> (OTOH, it'd need the invocant)

[13:17] <perlpilot> "accomplish" is a strong word.  I'm just playing.  I was hoping for something like  $obj.can('method').classify(*.package.perl) to give me candidates per class

[13:20] <perlpilot> actually, I was imagining that there should be a modifier to .can that does that, but I don't know how useful it would be to the masses.

[13:20] <lollercopter> perlpilot: you just need to classify the candidates themselves

[13:20] <lollercopter> m: class C  { multi method m() { }; multi method m($a,$b) { } }; C.can('m')».candidates.flat.classify(*.package.perl).say

[13:20] <camelia> rakudo-moar f72c97: OUTPUT: «{C => [m m]}␤»

[13:21] <lollercopter> m: class C  { multi method m() { }; multi method m($a,$b) { } }; C.can('m')».candidates.flat.classify(*.package.perl)<C>.head.signature.say

[13:21] <camelia> rakudo-moar f72c97: OUTPUT: «(C $: *%_)␤»

[13:21] <lollercopter> m: class C  { multi method m() { }; multi method m($a,$b) { } }; C.can('m')».candidates.flat.classify(*.package.perl)<C>.tail.signature.say

[13:21] <camelia> rakudo-moar f72c97: OUTPUT: «(C $: $a, $b, *%_)␤»

[13:21] <lollercopter> m: "".can('contains')».candidates.flat.classify(*.package.perl).say

[13:21] <camelia> rakudo-moar f72c97: OUTPUT: «{Cool => [contains], Str => [contains contains contains contains]}␤»

[13:22] <lollercopter> No need for shoving "modifiers" all over the codebase. 

[13:23] <perlpilot> yeah, I suppose so.  I just didn't want to type so much ;)

[13:24] *** awwaiid left
[13:27] *** ChoHag joined
[13:28] *** xtreak joined
[13:29] *** lollercopter left
[13:30] *** TimToady left
[13:33] *** aborazmeh joined
[13:33] *** aborazmeh left
[13:33] *** aborazmeh joined
[13:40] *** awwaiid joined
[13:44] *** skids joined
[13:45] *** ctilmes joined
[13:48] *** xtreak left
[13:51] *** abraxxa left
[13:51] *** mr-foobar joined
[13:54] *** mr-fooba_ left
[13:54] *** Cabanossi left
[13:56] *** Cabanossi joined
[14:00] *** ChoHag left
[14:02] *** prodotiscus left
[14:02] *** prodotiscus joined
[14:03] *** keylet joined
[14:03] *** araraloren joined
[14:03] <araraloren> evening

[14:04] *** TimToady joined
[14:10] *** nhywyll left
[14:12] *** prodotiscus left
[14:13] <[Coke]> morning.

[14:14] *** keylet left
[14:14] *** setty1 left
[14:15] *** prodotiscus joined
[14:16] <Geth> ¦ ecosystem: 827738a5ef | (Curt Tilmes)++ | META.list

[14:16] <Geth> ¦ ecosystem: Add TCC, Tiny C Compiler, to ecosystem

[14:16] <Geth> ¦ ecosystem: 

[14:16] <Geth> ¦ ecosystem: See https://github.com/CurtTilmes/perl6-tcc

[14:16] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/827738a5ef

[14:16] <[Coke]> http://coconut-lang.org/

[14:18] *** prodotiscus_ joined
[14:19] <prodotiscus_> how to read a variable from STDIN?

[14:19] <rightfold> prodotiscus_: That's a rather vague question.

[14:20] <rightfold> Stdin provides a stream of bytes.

[14:20] <ctilmes> prodotiscus_: Check out https://docs.perl6.org/routine/prompt

[14:20] <rightfold> You can decode the bytes into some data structure.

[14:20] *** nightfrog left
[14:24] *** raschipi joined
[14:33] <prodotiscus_> `Enter your action (,) > Cannot flush handle: Failed to flush filehandle: Invalid argument`

[14:34] <prodotiscus_> I get this when i try `$action = prompt "Enter your action..";`

[14:35] <jnthn> prodotiscus_: What Rakudo version do you have?

[14:36] <prodotiscus_> 2017.05-389-g326faed built on MoarVM version 2017.05-71-gad6ab26

[14:36] <jnthn> Ah, not a release version

[14:36] <prodotiscus_> I use that on my laptop I'm now working now

[14:36] <prodotiscus_> what version can I use to avoid this?

[14:37] <jnthn> There was a bug that caused that; it never appeared in a release, but there were several days where a HEAD built could get you it

[14:37] <jnthn> The 2017.06 release version was fine in this regard

[14:37] <prodotiscus_> ok, thank you

[14:38] <jnthn> Or latest if you like to live on the edge :)

[14:40] <raschipi> Living on the edge means one will get things like that from time  to time.

[14:47] *** setty1 joined
[14:49] *** TimToady left
[14:49] *** xzhao joined
[14:50] *** TimToady joined
[14:54] *** alimon joined
[14:57] <prodotiscus_> m: class A { has Str $!foo is required; method TOP { say "string, $!foo and something else" }; };

[14:57] <camelia> rakudo-moar 10f840: ( no output )

[14:57] <prodotiscus_> m: class A { has Str $!foo is required; method TOP { say "string, $!foo and something else" }; }; A(foo => "bar");

[14:57] <camelia> rakudo-moar 10f840: OUTPUT: «Cannot coerce to A with named arguments␤  in block <unit> at <tmp> line 1␤␤»

[14:57] <prodotiscus_> m: class A { has Str $!foo is required; method TOP { say "string, $!foo and something else" }; }; A.new(foo => "bar");

[14:57] <camelia> rakudo-moar 10f840: OUTPUT: «The attribute '$!foo' is required, but you did not provide a value for it.␤  in block <unit> at <tmp> line 1␤␤»

[14:59] <ctilmes> prodotiscus_: Set private attributes with a submethod BUILD()

[14:59] <ctilmes> prodotiscus_: https://docs.perl6.org/language/classtut#Constructors

[15:00] <prodotiscus_> thank you ctilmes

[15:00] <prodotiscus_> m: class A { has Str $.foo is required; method TOP { say "string, $.foo and something else" }; }; A.new(foo => "bar");

[15:00] <camelia> rakudo-moar 10f840: ( no output )

[15:01] <prodotiscus_> that's if I use public variable

[15:01] *** alimon left
[15:03] *** alimon joined
[15:04] *** prodotiscus_ left
[15:04] *** TimToady left
[15:05] *** |oLa| joined
[15:05] <ctilmes> prodotiscus_: Right, it works win the public variable

[15:06] <ctilmes> *with

[15:08] *** troys joined
[15:09] *** Cabanossi left
[15:09] *** cdg joined
[15:10] *** nightfrog joined
[15:11] *** Cabanossi joined
[15:15] *** domidumont left
[15:16] *** nightfrog is now known as culb

[15:18] *** zapwai joined
[15:18] *** araujo joined
[15:22] *** Ven joined
[15:22] *** Ven is now known as Guest2886

[15:23] *** aborazmeh left
[15:26] *** cdg left
[15:26] *** cdg joined
[15:27] *** TimToady joined
[15:30] *** keylet joined
[15:32] *** TimToady left
[15:34] *** ufobat left
[15:40] *** TimToady joined
[15:40] *** khw joined
[15:44] *** rindolf left
[15:44] *** troys is now known as troys_

[15:44] *** TimToady left
[15:47] *** [ptc] left
[15:48] *** araujo left
[15:51] *** [ptc] joined
[15:53] *** scimon left
[15:56] *** TimToady joined
[15:56] *** lichtkind left
[16:02] *** cdg_ joined
[16:03] *** cdg__ joined
[16:05] *** cdg left
[16:07] *** cdg_ left
[16:08] *** keylet left
[16:09] *** lichtkind joined
[16:11] *** Guest2886 left
[16:13] *** Ven_ joined
[16:14] *** zakharyas left
[16:17] *** troys_ is now known as troys

[16:17] *** Ven_ left
[16:17] *** hoelzro left
[16:17] *** Sgeo__ joined
[16:20] *** Sgeo_ left
[16:21] *** hoelzro joined
[16:22] *** Cabanossi left
[16:25] *** Cabanossi joined
[16:30] *** Cabanossi left
[16:33] *** Cabanossi joined
[16:34] *** TimToady left
[16:34] *** Cabanossi left
[16:35] *** prodotiscus left
[16:35] *** Cabanossi joined
[16:36] *** prodotiscus joined
[16:36] *** cdg__ left
[16:40] *** TimToady joined
[16:52] *** rindolf joined
[16:52] *** salv0 joined
[17:04] *** cdg joined
[17:06] *** TimToady left
[17:08] *** troys is now known as troys_

[17:09] *** cdg left
[17:13] *** troys_ is now known as troys

[17:16] *** araraloren left
[17:17] *** Cabanossi left
[17:19] *** Cabanossi joined
[17:23] *** mr-fooba_ joined
[17:23] *** domidumont joined
[17:25] *** mr-foobar left
[17:25] *** AlexDaniel left
[17:26] *** salv0 left
[17:34] *** raschipi left
[17:38] *** TimToady joined
[17:41] *** prodotiscus left
[17:42] *** Ven joined
[17:42] *** Ven is now known as Guest80443

[17:45] *** pilne joined
[17:48] *** Guest80443 left
[18:00] *** TimToady left
[18:01] *** TimToady joined
[18:02] *** Cabanossi left
[18:04] *** Cabanossi joined
[18:05] *** mr-foobar joined
[18:05] *** TimToady left
[18:07] *** TimToady joined
[18:09] *** mr-fooba_ left
[18:12] *** mr-fooba_ joined
[18:13] *** hoelzro left
[18:14] *** mr-foobar left
[18:16] <timotimo> we should probably put TWEAK in there instead of BUILD

[18:18] <timotimo> because if you have a BUILD, no default values or anything like that will be done for you

[18:18] <timotimo> but TWEAK doesn't have that property

[18:19] <mst> hence why I whined until somebody added TWEAK :)

[18:20] *** cdg_ joined
[18:21] *** cdg joined
[18:23] <moritz> mst++

[18:24] *** cdg_ left
[18:31] *** espadrine joined
[18:46] *** wamba joined
[18:51] *** nullcone joined
[19:18] *** domidumont left
[19:24] *** colomon_ joined
[19:25] *** colomon left
[19:25] *** colomon_ is now known as colomon

[19:27] *** grondilu joined
[19:29] *** cpage_ left
[19:31] *** hoelzro joined
[19:36] *** andrzejku joined
[19:40] *** mr-fooba_ left
[19:44] *** mr-foobar joined
[19:46] *** gfldex-mobil joined
[19:49] *** cog_ left
[19:54] *** DesertJellyfish left
[20:02] *** Cabanossi left
[20:03] *** AlexDaniel joined
[20:04] *** Cabanossi joined
[20:06] *** cpage_ joined
[20:07] *** TEttinger joined
[20:10] *** mr-foobar left
[20:12] *** mr-foobar joined
[20:15] *** gfldex-mobil left
[20:20] *** sufrostico left
[20:28] <samcv> my git branch output is so nice now https://comfy.moe/llcmld.png

[20:28] <samcv> :-)

[20:28] <samcv> will provide code if anybody wants their git branch output to look like that :)

[20:31] *** troys is now known as troys_

[20:32] *** domidumont joined
[20:34] *** domidumont left
[20:46] *** lizmat_ joined
[20:46] *** lizmat left
[20:47] *** sufrostico joined
[20:49] *** sufrosti1o joined
[20:50] *** skids left
[20:52] *** lizmat_ is now known as lizmat

[20:53] <rindolf> TimToady: hi

[20:53] <rindolf> lizmat: hi

[20:53] <lizmat> rindolf o/

[20:54] <rindolf> lizmat: sup?

[20:54] <lizmat> not much, with you?

[20:55] <rindolf> lizmat: i closed an old KDE bug today as it was fixeed

[20:55] <rindolf> lizmat: and I fixed a PySol bug that I reported

[20:55] <lizmat> rindolf++

[20:56] <rindolf> lizmat: thanks :-)

[20:56] <rindolf> lizmat: none of these are particularly p6-related

[20:57] *** |oLa| left
[20:57] <lizmat> it's still early :-)

[20:57] <ctilmes> Some thoughts on eqv() I shared with TimToady et. al. at YAPC: http://curt.tilmes.org/2017-TPC-eqv

[21:02] *** Cabanossi left
[21:04] *** lollercopter joined
[21:04] *** [ptc] left
[21:04] *** Cabanossi joined
[21:05] *** [ptc]_ joined
[21:06] *** [ptc]_ left
[21:07] *** troys_ is now known as troys

[21:07] <lollercopter> ctilmes: +1 on that. The only worry is performance. And if perhaps we should leave the .perl's as is and only do the more expensive per-attribute eqv if the class wants to (e.g. if .eqv method is present but returns Nil)

[21:08] *** [ptc] joined
[21:09] <lollercopter> ctilmes: and sidenote: is-deeply uses "eqv semantics" not eqv op (it does Seqs differently for example). The propper way to run that test would've been cmp-ok $o1, &[eqv], $o2

[21:09] <ctilmes> Note that .perl iterates over the attributes anyway...

[21:10] <lollercopter> ctilmes: only by default.

[21:10] <lollercopter> ctilmes: and simply making a string out of them is probabpy cheaper than eqv'ing each

[21:11] <ctilmes> I think you could construct scenarios where each was cheaper/more expensive

[21:12] *** mr-foobar left
[21:13] *** andrzejku left
[21:14] <lollercopter> m: my @a = ^1000; my @b = ^1000; for ^1000 { $ = @a eqv @b }; say now - INIT now

[21:14] <camelia> rakudo-moar 10f840: OUTPUT: «1.32335701␤»

[21:14] <lollercopter> m: my @a = ^1000; my @b = ^1000; for ^1000 { $ = @a eq @b }; say now - INIT now

[21:14] <camelia> rakudo-moar 10f840: OUTPUT: «1.13419479␤»

[21:14] *** mr-foobar joined
[21:15] <ctilmes> This is how Test runs is-deeply: https://github.com/rakudo/rakudo/blob/nom/lib/Test.pm6#L638

[21:15] <ctilmes> $got eqv $expected

[21:16] <lollercopter> ctilmes: look before that

[21:16] <ctilmes> Yes, I see, but I still maintain most people would expect what I tried to work

[21:17] <lollercopter> ctilmes: also, your example with sets is wrong. The only reason the perls differed is due to a bug in Setty.perl. It's meant to be ordered

[21:17] <ctilmes> There are other scenarios where you pass classes (or subclasses) around, and would expect it to work

[21:17] *** cpage_ left
[21:19] <lollercopter> ctilmes: I think I'm retracting that +1 now that I think of it. .perl is meant to roundtrip to give the original object back. Doing eqv on attributes is kinda pointless because you don't test any extra information .perl doesn't give you and you still don't solve the problen entirely since the private attributes aren't tested, you can still end up with uneqv eqv objects

[21:20] <ctilmes> What do you think about .eqv as a method, and have the fallback check for that?

[21:20] <ctilmes> (also iterating the attributes and eqv-ing them can short cut on failure, whereas .perl-ing always iterates every attribute)

[21:21] <lollercopter> True

[21:21] *** cpage_ joined
[21:23] <lollercopter> ctilmes: perhaps .EQV method? something less-likely to exist aacidentally for other reasons

[21:23] <lollercopter> \o

[21:23] *** lollercopter left
[21:23] <ctilmes> yes, good point

[21:25] *** dha joined
[21:25] *** dha left
[21:25] *** mcmillhj left
[21:32] *** espadrine left
[21:36] *** setty1 left
[21:37] *** rindolf left
[21:41] *** mr-foobar left
[21:41] *** mcmillhj joined
[21:42] *** mr-foobar joined
[21:45] *** mcmillhj left
[21:47] *** Cabanossi left
[21:47] *** mcmillhj joined
[21:49] *** Cabanossi joined
[21:52] *** mcmillhj left
[21:54] *** jeek left
[22:00] *** lizmat left
[22:01] *** lizmat joined
[22:01] *** lizmat left
[22:02] *** lizmat joined
[22:05] *** rouking_ left
[22:11] *** mr-foobar left
[22:12] <tbrowder> ctilmes: what about the fact that you  can overload "==" and it works?

[22:13] *** jeek joined
[22:14] *** mr-foobar joined
[22:19] <tbrowder> it works on your class and least it's a workaround until eqv is fixed (if ever)

[22:26] *** salv0 joined
[22:27] *** salv0 left
[22:29] *** skids joined
[22:32] <nebuchadnezzar> new official Debian packages will be published soon

[22:33] * nebuchadnezzar really need a personal ZofBot ;-)

[22:40] *** sufrosti1o left
[22:40] *** sufrostico left
[22:42] *** mr-foobar left
[22:45] *** mr-foobar joined
[22:45] *** cog_ joined
[22:48] *** Cabanossi left
[22:49] *** robertle left
[22:49] *** Cabanossi joined
[22:57] <timotimo> it's probably open source?

[23:16] *** wamba left
[23:22] <Voldenet> m: { my $x=$0; $x ~~ s:g/<[\ \-]>/_/; $x.say } if "Hostname=This is a-test" ~~ /^Hostname\=(.*)$/

[23:22] <camelia> rakudo-moar 10f840: OUTPUT: «This_is_a_test␤»

[23:23] <Voldenet> is there any faster way to write this?

[23:29] *** BenGoldberg joined
[23:36] *** pmurias left
[23:38] *** mcmillhj joined
[23:43] *** mcmillhj left
[23:44] *** mr-foobar left
[23:48] *** mr-foobar joined
[23:50] *** mcmillhj joined
[23:55] *** mcmillhj left
[23:57] *** lollercopter joined
[23:57] <lollercopter> Voldenet: yup

[23:57] <lollercopter> m: for ^10000 {  { my $x=$0; $x ~~ s:g/<[\ \-]>/_/;  } if "Hostname=This is a-test" ~~ /^Hostname\=(.*)$/ }; say now - INIT now

[23:57] <camelia> rakudo-moar 10f840: OUTPUT: «2.1162005␤»

[23:57] <lollercopter> m: for ^10000 {  my $v = "Hostname=This is a-test"; if $v.starts-with: 'Hostname=' { my $x = $v.substr(9).subst(' ', '_', :g).subst('-', '_', :g);  }  }; say now - INIT now

[23:57] <camelia> rakudo-moar 10f840: OUTPUT: «0.1612127␤»

[23:58] <lollercopter> m: my $v = "Hostname=This is a-test"; $v.substr(9).subst(' ', '_', :g).subst('-', '_', :g).say if $v.starts-with: 'Hostname='

[23:58] <camelia> rakudo-moar 10f840: OUTPUT: «This_is_a_test␤»

[23:58] <lollercopter> Looks right

