[00:02] <tbrowder> Zoffix: good change!

[00:04] <Geth> ¦ modules.perl6.org: c795817a3b | (Zoffix Znet)++ | 2 files

[00:04] <Geth> ¦ modules.perl6.org: Reword/Restructure/Restyle lead para

[00:04] <Geth> ¦ modules.perl6.org: 

[00:04] <Geth> ¦ modules.perl6.org: - Use less text

[00:04] <Geth> ¦ modules.perl6.org: - Make it smaller

[00:04] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/c795817a3b

[00:07] *** BenGoldberg joined
[00:11] <Geth> ¦ modules.perl6.org/new-site: 9bbdce3b9c | (Zoffix Znet)++ | 9 files

[00:11] <Geth> ¦ modules.perl6.org/new-site: Nuke all the things

[00:11] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/9bbdce3b9c

[00:14] <Geth> ¦ modules.perl6.org/new-site: d6429c1f17 | (Zoffix Znet)++ | lib/ModulesPerl6.pm

[00:14] <Geth> ¦ modules.perl6.org/new-site: Refuse to start without secrets in production

[00:14] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/d6429c1f17

[00:17] <zengargoyle> tbrowder: i would probably do file, but would want to do named pipe but i think there's a bit of "try to not be POSIX-y".

[00:19] <timotimo> some libraries let you give them a struct of callbacks so you can have them write to or read from whatever you like; SDL2 with its rwops is one example

[00:21] *** kst joined
[00:33] *** ijneb joined
[00:33] <ijneb> Is there a way to declare multiple constants (or other types) at the same time like this:

[00:33] <ijneb> const (a = 1, b = 2, c = 3);

[00:34] <BenGoldberg> m: my constant a = 1, b = 2;

[00:34] <camelia> rakudo-moar abf1cf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix = instead␤at <tmp>:1␤------> 3my constant a = 1, b =7⏏5 2;␤»

[00:34] <BenGoldberg> m: my constant (a = 1, b = 2);

[00:34] <camelia> rakudo-moar abf1cf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing initializer on constant declaration␤at <tmp>:1␤------> 3my constant7⏏5 (a = 1, b = 2);␤»

[00:35] <jnthn> Not for constants. Variables can be declared as my ($a, $b, $c).

[00:35] <timotimo> oh hey jnthn 

[00:35] <timotimo> did it get nice and cool yet?

[00:35] <ijneb> I see, thanks

[00:35] <jnthn> But in that case we have list assignment semantics to work out what goes into where

[00:35] <jnthn> Whereas constants are bound to at compile time, not assigned

[00:36] <jnthn> And there's no list binding

[00:36] <ijneb> I see

[00:36] <ijneb> That makes sense

[00:36] <jnthn> timotimo: Not so much as hoped; the rain/storm didn't happen. But it's cooling :)

[00:37] <jnthn> Tolerable enough that I even managed to finish writing a blog post :)

[00:37] *** Cabanossi left
[00:37] <timotimo> oooooh

[00:38] <timotimo> there it is!

[00:38] <jnthn> https://6guts.wordpress.com/2017/08/06/moarvm-specializer-improvements-part-1-gathering-data/ fwiw :)

[00:40] *** Cabanossi joined
[00:45] * zengargoyle lols at the-eater 'shinit' because reasons.

[00:46] *** dogbert11 left
[00:46] <ijneb> Are `constant`s in perl6 the same as preprocessor `#define`s in C

[00:47] <Zoffix> No

[00:48] <ijneb> How do they work differently?

[00:48] <ijneb> both compile time

[00:49] <Zoffix> ijneb: In Rakudo, they're "variables" that are created at compile time and don't have a container and arrays/hashes's elements get their containers stripped out (you can still stick a container in them and mutate the variable or mutate the object in it). While with `#define` you can stick any chunk of code in it and it'll get replaced

[00:49] <ijneb> ahh

[00:49] <geekosaur> #define creates a textual replacement, so it can do things at compile time that code can't easily do

[00:50] <ijneb> is there something like that in perl6?

[00:50] <geekosaur> like paste symbols together

[00:50] <geekosaur> there's an experimental macro infrastructure, it's fairly limited and expected to change

[00:50] <geekosaur> but most of the work on it has been taking place outside of perl 6, see for example masak's 007

[00:50] <Zoffix> ijneb: macros are planned for eventual implementation. There's an experimental implementation of them in 007

[00:50] <Zoffix> buggable: eco 007

[00:50] <buggable> Zoffix, 007 'Small experimental language with a license to macro': https://github.com/masak/007

[00:51] <ijneb> I see, thanks guys

[00:54] <Zoffix> man &nbsp; in Perl&nbsp;6 on my linux VM gets rendered like twice wider than normal space... Such a small thing but is driving me nuts

[00:54] <Zoffix> http://i.imgur.com/CVn01D1.jpg

[00:54] <timotimo> good post, jnthn++

[00:54] <Zoffix> Just another reason to use a name without any space in it :P

[00:55] <timotimo> Zoffix: that is really strange!

[00:55] <Zoffix> yeah. Looks fine on Windows

[00:57] <zengargoyle> Zoffix: is that modules.perl6.org?

[00:58] <zengargoyle> does not look strange for me.  your VM default font doesn't have &nbsp; glyph and is falling back to some double-wide font.

[01:01] <zengargoyle> you just need a better font for matching whatever default-ish serif/sans/monospace or whatever that the browser will use.

[01:04] <zengargoyle> guess it's a different page... 

[01:08] *** R0b0t1 left
[01:10] *** R0b0t1 joined
[01:11] <Zoffix> yeah mp6o

[01:11] * Zoffix doesn't know how to get fonts

[01:13] <zengargoyle> no package manager?  i'm sorta assuming VM and some extra-minimal like distro install....  for size or speed or whatever.

[01:14] <Zoffix> Yeah, I got package manager. It's just a standard Bodhi Linux install (minimalistic fork of Ubuntu)

[01:18] <ijneb> Zoffix: Truetype or bitmap fonts

[01:18] * Zoffix shrugs

[01:18] <ijneb> *.tff -> /usr/share/fonts/truetype

[01:19] <zengargoyle> i'd check like: apt list '*font*' and apt list '*ttf*' and see what's installed and maybe install somthing else like dejavu or bitstream or such.. unless that's what's alread there.

[01:19] <ijneb> fc-list to display installed fonts

[01:20] <ijneb> Once you move the font files to '/usr/share/fonts', you can use fc-cache to load them

[01:22] <zengargoyle> usually debian (and i'd expect ubuntu) manage fontconfig stuff decently.  and installing some other font just werks.

[01:22] <ijneb> There is probably some gui font manager if you'd like to see all of your fonts in a manageable way

[01:22] <ijneb> https://fontmanager.github.io seems nice

[01:22] <zengargoyle> unless you want to be like me and have ~/.fonts with a plethora of custom fonts.

[01:23] <ijneb> zengargoyle: Do you like bitmap fonts? lol

[01:23] <ijneb> The smallness of them isn't great for readability but something attracts me to them

[01:23] <zengargoyle> ijneb: no, can't use them.  HiDPI monitor.  bitmapped fonts are like ant poop on my screen.

[01:23] <zengargoyle> :)

[01:24] <ijneb> lol

[01:24] <ijneb> I like being able to display 50 billion characters on my screen though

[01:24] <zengargoyle> i do miss them ... like fixed 6x13 or whatnot was great for most things.

[01:25] <ijneb> http://font.gohu.org/

[01:26] <zengargoyle> ijneb: that's why i have like symbola for heiroglyps. and half a dozen japanese fonts for calligraphy.

[01:26] <ijneb> zengargoyle: Do you have a japanese keyboard?

[01:27] <ijneb> How does it feel to type japanese

[01:27] <ijneb> I've never done that

[01:27] <zengargoyle> it's a mess.  but browser for the most part use fontconfig to find or fallback to 'serif' or 'sans' or 'monospace' and fontconfig/packages installed *usually* picks the best combination.

[01:28] <zengargoyle> unless you go into your browser and select default fonts for languages yourself.

[01:29] * zengargoyle thinking VM and purposefuly small/limited install vs desktop.

[01:31] <zengargoyle> ijneb: mostly easy.  you use an Input Method Editor (IME) like 'anthy' and there are various ways.... i'm not native speaker so i do like: naruhodo and it shows up in ime as なるほを

[01:31] <ijneb> I think Japanese looks cool

[01:32] <ijneb> I'd much prefer learning Japanese over any sort of Chinese too lol

[01:32] <ijneb> seems a lot more concise

[01:32] <zengargoyle> and you hit space bar to turn it into kanji (sorta semi-smart)...　元気ですか

[01:32] <zengargoyle> that's 'genkidesuka' + <SPC> + <RET>

[01:33] <ijneb> Do you ever put Japanese characters into your code lol

[01:34] <zengargoyle> ijneb: not really.  i've totally thought about it, but dont. :)

[01:35] <zengargoyle> i do want to make someday a monitoring application of some sort that is like a grid of kanji (sorta matrix-y) because there are a few thousand single character things to put in an (x,y) box vs ascii.  and they mean something.

[01:36] <zengargoyle> that's very high density information transmission.

[01:36] <Zoffix> Well, 500MB of fonts later, still space difference, so screw it. don't care

[01:37] <zengargoyle> ijneb: japanese is as not-concise in usage that it's crazy.

[01:37] <ijneb> zengargoyle: Yeah seems like a mess to "digitize"

[01:37] <ijneb> Zoffix: What do you mean?

[01:37] <zengargoyle> Zoffix: :(

[01:38] *** Cabanossi left
[01:38] <zengargoyle> fontconfig is a beast that haunts me all the time not doing the thing i want.  but i'm also to lazy to try and configure it the hard way. :)

[01:40] <zengargoyle> ijneb: no, the 'digitizing' bit is pretty easy, it's the greater context that is hard to keep track of.

[01:40] *** Cabanossi joined
[01:40] <zengargoyle> japanese will just not say 'words' that you're supposed to understand are there because you've been paying attention.

[01:41] <zengargoyle> and will huffman encode phrases down to 'oosu' => 'ohahou goazaimasu'

[01:44] <zengargoyle> ijneb: you should give it a shot if you're interested.  i was a moderator on a japanese language learning website for a while so i can definately point you in the right directions.  zengargoyle at gmail.com

[01:45] *** ilbot3 left
[01:47] * zengargoyle and i can go on forever about encodings and fonts and phonological mutations. :P

[01:48] <ijneb> My girlfriend knows a good amount of Japanese, so maybe it would be cool to know .. hm.

[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:55] <zengargoyle> ijneb: give it a shot.  the sounds aren't that hard, the speaking has a few quirks, but it is syllabic, so nowhere as strange as english.

[01:55] <zengargoyle> the grammr is postfix.

[01:56] <zengargoyle> and there's a lot of leaving out things you don't absolutely need to say that's the hard part

[01:57] <zengargoyle> and a complex politeness scale where there are differnt words for something sepending on your 'rank' whith whom you're talking about.

[01:59] <zengargoyle> and a social expectation that you can pick up on the ebb and flow and pick the appropriate words for the appropriate time.

[01:59] *** hythm_ left
[02:02] *** khw joined
[02:09] *** Cabanossi left
[02:10] *** Cabanossi joined
[02:16] <Geth> ¦ modules.perl6.org/new-site: 2f92f6a9c7 | (Zoffix Znet)++ | lib/ModulesPerl6.pm

[02:16] <Geth> ¦ modules.perl6.org/new-site: Use faked out secret in dev mode

[02:16] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/2f92f6a9c7

[02:16] <Geth> ¦ modules.perl6.org/new-site: 20a10cbe9c | (Zoffix Znet)++ | 5 files

[02:16] <Geth> ¦ modules.perl6.org/new-site: New index page

[02:16] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/20a10cbe9c

[02:16] *** noganex joined
[02:19] *** noganex_ left
[02:22] *** semigloss left
[02:31] <Zoffix> Is testers.perl6.org still an active website?

[02:32] <ijneb> Seems like it, never seen it before though

[02:33] *** skids joined
[02:34] <Zoffix> and http://smoke.perl6.org/report

[02:35] <Zoffix> if they ain't; may as well kill all the cronjobs and servers...

[02:35] <geekosaur> sounds like infrastructure intended for cpan(6)?

[02:38] <ijneb> Zoffix: There's also cpandatesters.perl6.org

[02:38] <Zoffix> yeah

[02:39] <ugexe> zef works with testers.perl6.org heh

[02:44] <zengargoyle> <expletive deleted> Amazon says my moritz book was delivered and it's not here. GRAAAAR

[02:51] <zengargoyle> GRAAAR rescinded, GRAAAAR reinstated (the folded it up and stuffed it into my tiny mailbox.  that's no way to treat a bit bubble wrapped envelope with a book in it. :/

[02:53] *** Cabanossi left
[02:53] <geekosaur> ow

[02:54] <zengargoyle> oooooo, pretty colors and graphs. me likey.

[02:55] *** Cabanossi joined
[02:55] <zengargoyle> flipping through... it looks awesome to the eye.

[02:57] <ijneb> what are you looking at zengargoyle

[02:59] <Zoffix> ijneb: moritz++'s freshly-released book: https://www.amazon.com/dp/1484228987

[03:00] <zengargoyle> moritz's book 'Perl 6 Fundamentals' -- A Primer with Examples, Projects, and Case Studies

[03:01] <Geth_> ¦ perl6.org: 5b26af2750 | (Zoffix Znet)++ (committed using GitHub Web editor) | source/resources/index.html

[03:01] <Geth_> ¦ perl6.org: P6F is now published

[03:01] <Geth_> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/5b26af2750

[03:02] <Geth> ¦ perl6.org: 5b26af2750 | (Zoffix Znet)++ (committed using GitHub Web editor) | source/resources/index.html

[03:02] <Geth> ¦ perl6.org: P6F is now published

[03:02] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/5b26af2750

[03:03] <zengargoyle> it's pretty nice looking for a dead-tree (it's been a while since i've actually seen a dead-tree technical thing)

[03:07] <zengargoyle> nice flow between text and code (with basic keyword bold highlighting) that just looks really nice.

[03:13] * zengargoyle still has to actually read it later.. :)

[03:19] *** skids left
[03:22] *** Cabanossi left
[03:24] *** Cabanossi joined
[03:33] <ijneb> in GD::Raw, R, G, and B of colors are Int32's

[03:34] <ijneb> How can I allocate a color with using the 1-255 format for each color

[03:34] *** channing1 left
[03:34] <ijneb> with gdImageColorAllocate()

[03:34] <ijneb> are they already formatted as 1-255?

[03:35] <ijneb> oh, they are, nevermind lol

[03:37] *** araraloren joined
[03:45] <Geth> ¦ modules.perl6.org/new-site: 0d46495323 | (Zoffix Znet)++ | 6 files

[03:45] <Geth> ¦ modules.perl6.org/new-site: Start sketching out new search page

[03:45] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/0d46495323

[03:46] <Zoffix> purty \o/ http://i.imgur.com/XerZBEa.jpg

[03:47] *** khw left
[03:50] <araraloren> good noon!

[03:52] <Zoffix> \o

[04:12] *** pilne left
[04:29] *** Ben_Goldberg joined
[04:29] *** BenGoldberg left
[04:29] *** Ben_Goldberg is now known as BenGoldberg

[04:33] *** channing1 joined
[04:35] <Geth> ¦ modules.perl6.org/new-site: 1a85a79a67 | (Zoffix Znet)++ | 2 files

[04:35] <Geth> ¦ modules.perl6.org/new-site: Direct to github repo for github dists

[04:35] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/1a85a79a67

[04:35] <Geth> ¦ modules.perl6.org/new-site: 9be33b216a | (Zoffix Znet)++ | 2 files

[04:35] <Geth> ¦ modules.perl6.org/new-site: Add search box to search page

[04:35] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/9be33b216a

[04:35] <Geth> ¦ modules.perl6.org/new-site: 34272fa942 | (Zoffix Znet)++ | 4 files

[04:35] <Geth> ¦ modules.perl6.org/new-site: Add top nav

[04:35] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/34272fa942

[04:37] *** Cabanossi left
[04:38] *** ChoHag left
[04:39] *** Cabanossi joined
[04:40] <Geth> ¦ modules.perl6.org/new-site: 3b69ed0859 | (Zoffix Znet)++ | lib/ModulesPerl6.pm

[04:40] <Geth> ¦ modules.perl6.org/new-site: Update BS/jQuery CSS/JS

[04:40] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/3b69ed0859

[04:41] *** channing1 left
[04:45] *** Teaa joined
[04:51] *** espadrine joined
[04:52] <Geth> ¦ modules.perl6.org/new-site: 53ceea1878 | (Zoffix Znet)++ | 4 files

[04:52] <Geth> ¦ modules.perl6.org/new-site: Implement "I'm feeling Lucky" feature

[04:52] <Geth> ¦ modules.perl6.org/new-site: 

[04:52] <Geth> ¦ modules.perl6.org/new-site: Fixes #52

[04:52] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/53ceea1878

[04:54] <Geth> ¦ modules.perl6.org/new-site: 307c13f3e9 | (Zoffix Znet)++ | site-tips.txt

[04:54] <Geth> ¦ modules.perl6.org/new-site: List Feelin' luck endpoint in site tips

[04:54] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/307c13f3e9

[04:57] <Geth> ¦ modules.perl6.org/new-site: 134a5fb5cc | (Zoffix Znet)++ | 3 files

[04:57] <Geth> ¦ modules.perl6.org/new-site: Display site tips on home

[04:57] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/134a5fb5cc

[04:57] <Zoffix> huggable: swear jar

[04:57] <huggable> Zoffix, Help Perl 6. Donate: https://donate.perlfoundation.org/

[04:59] <Geth> ¦ ecosystem: 81e6da3454 | (brian d foy)++ (committed using GitHub Web editor) | META.list

[04:59] <Geth> ¦ ecosystem: Added Chemistry::Elements

[04:59] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/81e6da3454

[05:01] <Geth> ¦ modules.perl6.org/new-site: e60f825f78 | (Zoffix Znet)++ | 2 files

[05:01] <Geth> ¦ modules.perl6.org/new-site: Add "Donate to TPF" message

[05:01] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/e60f825f78

[05:02] *** mr-foobar joined
[05:07] <Geth> ¦ ecosystem: 6b3224b975 | (brian d foy)++ (committed using GitHub Web editor) | META.list

[05:07] <Geth> ¦ ecosystem: Update meta filename for PrettyDump

[05:07] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/6b3224b975

[05:16] *** andrzejku joined
[05:30] *** hythm_ joined
[05:34] *** hythm_ left
[05:35] *** hythm_ joined
[05:40] *** Actualeyes joined
[05:51] *** xinming joined
[05:51] *** Cabanossi left
[05:52] *** andrzejku left
[05:54] *** Cabanossi joined
[05:54] <Geth> ¦ modules.perl6.org/new-site: 6a75605206 | (Zoffix Znet)++ | 8 files

[05:54] <Geth> ¦ modules.perl6.org/new-site: Implement tags panel/route

[05:54] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/6a75605206

[06:02] *** ChoHag joined
[06:04] <Geth> ¦ modules.perl6.org/new-site: 55dc1fefbf | (Zoffix Znet)++ | 4 files

[06:04] <Geth> ¦ modules.perl6.org/new-site: List dists' tags on search page

[06:04] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/55dc1fefbf

[06:05] <Zoffix> damn. That took no time at all. Perl++

[06:05] <Zoffix> Just gonna streighten up JSON API and then merge already

[06:09] *** andrzejku joined
[06:11] *** zzz joined
[06:12] *** zzz is now known as Guest57518

[06:16] *** Guest57518 left
[06:17] *** sftp left
[06:17] *** bwisti joined
[06:18] <Geth> ¦ modules.perl6.org/new-site: 35a9915b42 | (Zoffix Znet)++ | 3 files

[06:18] <Geth> ¦ modules.perl6.org/new-site: Polish to be more like old site

[06:18] <Geth> ¦ modules.perl6.org/new-site: review: https://github.com/perl6/modules.perl6.org/commit/35a9915b42

[06:21] <Geth> ¦ modules.perl6.org: zoffixznet++ created pull request #80: New site

[06:21] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/pull/80

[06:22] <Geth> ¦ modules.perl6.org/master: 17 commits pushed by (Zoffix Znet)++

[06:22] <Geth> ¦ modules.perl6.org/master: review: https://github.com/perl6/modules.perl6.org/compare/c795817a3b...2f35e8d756

[06:23] <Zoffix> buggable: eco test

[06:23] <buggable> Zoffix, Found 20 results: Testing, Test::Mock, Test::Builder, TestML, Test::Junkie. See https://modules.perl6.org/#q=test

[06:23] *** buggable left
[06:24] *** buggable joined
[06:24] *** ChanServ sets mode: +v buggable

[06:24] <Zoffix> buggable: eco test

[06:24] <buggable> Zoffix, Found 20 results: Testing, Test::Mock, Test::Builder, TestML, Test::Junkie. See https://modules.perl6.org/s/test

[06:24] <Zoffix> seems to work

[06:27] *** ChoHag left
[06:29] *** ChoHag joined
[06:32] <Geth> ¦ modules.perl6.org: f9edddfc42 | (Zoffix Znet)++ | lib/ModulesPerl6/Model/Dists/Schema/Result/AppveyorStatus.pm

[06:32] <Geth> ¦ modules.perl6.org: Toss largely wrong doc

[06:32] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/f9edddfc42

[06:37] *** haha joined
[06:37] *** haha is now known as Guest81170

[06:40] <Geth> ¦ modules.perl6.org: a07aa3c190 | (Zoffix Znet)++ | 2 files

[06:40] <Geth> ¦ modules.perl6.org: Allow empty term for search

[06:40] <Geth> ¦ modules.perl6.org: 

[06:40] <Geth> ¦ modules.perl6.org: As a means to show all dists (handy during dev)

[06:40] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/a07aa3c190

[06:42] *** Guest81170 left
[06:49] *** wamba joined
[06:53] *** Cabanossi left
[06:54] *** Cabanossi joined
[06:55] *** BenGoldberg left
[06:56] *** sftp joined
[06:58] <Geth> ¦ modules.perl6.org/dist-source: c242b1b2ee | (Zoffix Znet)++ | 7 files

[06:58] <Geth> ¦ modules.perl6.org/dist-source: Intermediary; debug dist source DBIC issue

[06:58] <Geth> ¦ modules.perl6.org/dist-source: review: https://github.com/perl6/modules.perl6.org/commit/c242b1b2ee

[07:01] *** darutoko joined
[07:09] *** ChoHag left
[07:11] *** ChoHag joined
[07:16] *** parv joined
[07:18] <Geth> ¦ modules.perl6.org: 4358632ae0 | (Zoffix Znet)++ | 7 files

[07:18] <Geth> ¦ modules.perl6.org: Store dist source in db

[07:18] <Geth> ¦ modules.perl6.org: 

[07:18] <Geth> ¦ modules.perl6.org: Already have `github` and `gitlab` dist sources. CPAN will be 3rd.

[07:18] <Geth> ¦ modules.perl6.org: Storing this datapoint in DB will let us cater search results

[07:18] <Geth> ¦ modules.perl6.org: differently based on source.

[07:18] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/4358632ae0

[07:19] * Zoffix starts db rebuild for ^ that

[07:20] <Zoffix> can probably automagicated: a commit flag that tells it to build from scratch into a different db file and then move it to the normal place

[07:20] <Zoffix> ya. I'll just do that instead

[07:22] *** haha_ joined
[07:24] *** andrzejku left
[07:27] *** andrzejku joined
[07:30] *** hythm_ left
[07:39] *** mr-foobar left
[07:42] *** mr-foobar joined
[07:47] *** tzekid joined
[07:47] *** rindolf joined
[07:50] *** Geth left
[07:50] *** Geth joined
[07:51] <Geth> ¦ modules.perl6.org: e2c705a7b3 | (Zoffix Znet)++ | 2 files

[07:51] <Geth> ¦ modules.perl6.org: Implement NEWDB commit trigger to re-deploy DB from scratch

[07:51] <Geth> ¦ modules.perl6.org: 

[07:51] <Geth> ¦ modules.perl6.org: Allows easy changes to structure of the database, without having to

[07:51] <Geth> ¦ modules.perl6.org: manually rebuild the DB and copy it over.

[07:51] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/e2c705a7b3

[07:51] <Zoffix> W00t! 1000th commit to that repo :D

[07:52] <ryu0> slackers. come back when it's 10,000 =p

[07:52] <Zoffix> :)

[07:53] *** kaare_ left
[07:54] <Geth> ¦ modules.perl6.org: 6a1b04ca74 | (Zoffix Znet)++ | README.md

[07:54] <Geth> ¦ modules.perl6.org: [NEWDB] Fix typo

[07:54] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6a1b04ca74

[07:55] <Zoffix> oh shit

[07:55] <Zoffix> Zoffix--

[08:00] *** parv left
[08:00] <Zoffix> nuked the db by accident. Rebuilding

[08:04] *** ijneb left
[08:07] <Geth> ¦ modules.perl6.org: dded43b884 | (Zoffix Znet)++ | update-modules.perl6.org

[08:07] <Geth> ¦ modules.perl6.org: In new db build, if building db fails, exit early

[08:07] <Geth> ¦ modules.perl6.org: 

[08:07] <Geth> ¦ modules.perl6.org: Otherwise, we end up copying a failed, empty db file over our shiny

[08:07] <Geth> ¦ modules.perl6.org: working database.

[08:07] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/dded43b884

[08:08] *** Ven joined
[08:08] *** Ven is now known as Guest71332

[08:12] <Geth> ¦ modules.perl6.org: 6831e0f66b | (Zoffix Znet)++ | templates/root/search.html.ep

[08:12] <Geth> ¦ modules.perl6.org: Display count of found results

[08:12] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6831e0f66b

[08:14] *** shun joined
[08:18] <Geth> ¦ modules.perl6.org: ee44a2780f | (Zoffix Znet)++ | templates/layouts/default.html.ep

[08:18] <Geth> ¦ modules.perl6.org: Behave more sanely when last build time not available

[08:18] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/ee44a2780f

[08:31] <Zoffix> :|

[08:31] <Zoffix> db rebuilt but now it's giving me a 500 -_-

[08:32] *** shun is now known as shuntam

[08:34] *** shuntam left
[08:34] <Zoffix> k; it's back in business...

[08:35] <Zoffix> Time for attempt #2, this time with a backup in place :P

[08:36] <Geth> ¦ modules.perl6.org: 30d95e5736 | (Zoffix Znet)++ | 2 files

[08:36] <Geth> ¦ modules.perl6.org: [NEWDB] Make search box wider on search page

[08:36] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/30d95e5736

[08:37] <Zoffix> k; db remains un-nuked, but rebuild failed for some reason

[08:37] *** mr-foobar left
[08:39] *** mr-foobar joined
[08:40] <Geth> ¦ modules.perl6.org: 82248d41fd | (Zoffix Znet)++ | update-modules.perl6.org

[08:40] <Geth> ¦ modules.perl6.org: Do not let mktemp create temp db file

[08:40] <Geth> ¦ modules.perl6.org: 

[08:40] <Geth> ¦ modules.perl6.org: Otherwise db builder thinks it's an already-deployed db

[08:40] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/82248d41fd

[08:40] <Zoffix> (sloppy... prolly should instead try to query db to figure out whether to deploy)

[08:42] <Geth> ¦ modules.perl6.org: 2e5aae2180 | (Zoffix Znet)++ | templates/layouts/default.html.ep

[08:42] <Geth> ¦ modules.perl6.org: [NEWDB] Simplify IRC contact link

[08:42] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/2e5aae2180

[08:42] <Zoffix> third time's the charm...

[08:45] *** andrzejku left
[08:46] *** Guest71332 is now known as Ven``

[08:47] <Geth> ¦ modules.perl6.org: 4e42840278 | (Zoffix Znet)++ | 2 files

[08:47] <Geth> ¦ modules.perl6.org: [NEWDB] Remove uwanted padding when dist has no tags

[08:47] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/4e42840278

[08:52] *** Cabanossi left
[08:54] *** Cabanossi joined
[08:54] <Geth> ¦ modules.perl6.org: 0988751590 | (Zoffix Znet)++ | lib/ModulesPerl6/Controller/Root.pm

[08:54] <Geth> ¦ modules.perl6.org: Sort results by stars

[08:54] <Geth> ¦ modules.perl6.org: 

[08:54] <Geth> ¦ modules.perl6.org: Probably makes sense for now, at least until we add a search indexer.

[08:54] <Geth> ¦ modules.perl6.org: 

[08:54] <Geth> ¦ modules.perl6.org: Also fix lucky results giving lowest-starred result instead of highest.

[08:54] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/0988751590

[09:11] <Geth> ¦ modules.perl6.org: 9ce6808dee | (Zoffix Znet)++ | templates/layouts/default.html.ep

[09:11] <Geth> ¦ modules.perl6.org: Add language docs to nav / hide non-essentials...

[09:11] <Geth> ¦ modules.perl6.org: 

[09:11] <Geth> ¦ modules.perl6.org: ...on smaller screens to maintain purtiness (though fully-visible

[09:11] <Geth> ¦ modules.perl6.org: on -xs devices who get the toggle nav).

[09:11] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/9ce6808dee

[09:17] *** nadim joined
[09:18] <Geth> ¦ modules.perl6.org: ccbffd8dea | (Zoffix Znet)++ | 2 files

[09:18] <Geth> ¦ modules.perl6.org: Add gitlab icon to GitLab source dists

[09:18] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/ccbffd8dea

[09:28] <Geth> ¦ modules.perl6.org: 396dcfa715 | (Zoffix Znet)++ | templates/root/search.html.ep

[09:28] <Geth> ¦ modules.perl6.org: Show N/A for GitLab issues/stargazers

[09:28] <Geth> ¦ modules.perl6.org: 

[09:28] <Geth> ¦ modules.perl6.org: Instead of 404 urls.

[09:28] <Geth> ¦ modules.perl6.org: 

[09:28] <Geth> ¦ modules.perl6.org: Probably can hide them and the update date altogether; will see

[09:28] <Geth> ¦ modules.perl6.org: what the stuff looks like once CPAN source is added.

[09:28] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/396dcfa715

[09:30] *** dogbert11 joined
[09:31] *** TEttinger left
[09:31] <Zoffix> .ask ugexe how is this file generated? I see source URLs are still pointing to GitHub; how come all of them aren't pointing to CPAN? https://github.com/ugexe/Perl6-ecosystems/blob/master/cpan.json

[09:31] <yoleaux> Zoffix: I'll pass your message to ugexe.

[09:38] *** mr-foobar left
[09:40] *** eater[sha2017] joined
[09:41] *** mr-foobar joined
[09:44] <Geth> ¦ modules.perl6.org: 6931493d64 | (Zoffix Znet)++ | lib/ModulesPerl6/Controller/Root.pm

[09:44] <Geth> ¦ modules.perl6.org: Prefer exact name match in feelin-lucky search

[09:44] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6931493d64

[09:52] *** Ven`` left
[09:55] <Geth> ¦ modules.perl6.org: 88066562b1 | (Zoffix Znet)++ | 2 files

[09:55] <Geth> ¦ modules.perl6.org: Fix "ALL" tag

[09:55] <Geth> ¦ modules.perl6.org: 

[09:55] <Geth> ¦ modules.perl6.org: - Make it actually show all dists

[09:55] <Geth> ¦ modules.perl6.org: - Make both search box and tag well show up on search page when

[09:55] <Geth> ¦ modules.perl6.org:     neither search term nor a tag was specified

[09:55] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/88066562b1

[09:58] *** Ven joined
[09:59] *** Ven is now known as Guest27753

[10:01] *** ijneb joined
[10:06] *** Cabanossi left
[10:08] *** haha_ left
[10:08] *** AlexDaniel joined
[10:09] *** mr-foobar left
[10:09] *** Cabanossi joined
[10:11] <Geth> ¦ modules.perl6.org: ef52f58cb7 | (Zoffix Znet)++ | update-modules.perl6.org

[10:11] <Geth> ¦ modules.perl6.org: Restart the app after copying over new DB

[10:11] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/ef52f58cb7

[10:12] *** mr-foobar joined
[10:13] *** lichtkind left
[10:18] <Zoffix> d'oh the modules site had a bug where non-JS search (e.g. API) was searching only by name and not also description

[10:18] <Zoffix> my @a = 1, 2; in Perl saves only 1 in the array -_-

[10:18] <eater[sha2017]> can I turn off precompilation in perl6?

[10:18] <eater[sha2017]> kind of breaks on a read-only filesystem :')

[10:18] *** Guest27753 left
[10:19] <Zoffix> You can use `no precompilation` in a module... dunno if there's a global switch

[10:19] <AlexDaniel> eater[sha2017]: no precompilation;

[10:24] <timotimo> eco: test

[10:24] <araraloren> buggable: eco test

[10:24] <buggable> araraloren, Found 20 results: Test::Mock, Test::Fuzz, Testing, Test::Base, Test::META. See https://modules.perl6.org/s/test

[10:25] <timotimo> oh, doh

[10:25] <timotimo> that works now, cool

[10:25] <timotimo> i only saw the link up above with #q=test followed by a "seems to work" and i thought "no it doesn't" :P

[10:25] *** lichtkind joined
[10:30] *** setty1 joined
[10:33] <zengargoyle> eater[sha2017]: still here?

[10:34] <araraloren> buggable: perl

[10:34] <araraloren> buggable: eco perl

[10:34] <buggable> araraloren, Found 15 results: Inline::Perl5, BioPerl6, Perl6::Parser, Perl6::Maven, Perl6::Literate. See https://modules.perl6.org/s/perl

[10:35] <eater[sha2017]> zengargoyle: yep

[10:35] <zengargoyle> eater[sha2017]: i just wanted to share my appreciation.... Shinji, "I'm Sorry", i loled hard.

[10:36] <Geth> ¦ modules.perl6.org: 54a715cea0 | (Zoffix Znet)++ | 2 files

[10:36] <Geth> ¦ modules.perl6.org: Add `author:foo` feature to search

[10:36] <Geth> ¦ modules.perl6.org: 

[10:36] <Geth> ¦ modules.perl6.org: Filters search results to only by that author

[10:36] <Geth> ¦ modules.perl6.org: (author is what `author_id` is in db, which is 1st author from

[10:36] <Geth> ¦ modules.perl6.org: meta file or repo user)

[10:36] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/54a715cea0

[10:37] <Zoffix> buggable: eco WWW author:zoffix

[10:37] <buggable> Zoffix, WWW 'No-nonsense, simple HTTPS client with JSON decoder': https://github.com/zoffixznet/perl6-WWW

[10:37] <Zoffix> hell ye

[10:37] <Zoffix> buggable: eco author:zoffix

[10:37] <buggable> Zoffix, Found 35 results: Acme::Anguish, IRC::Client, WWW, GlotIO, CoreHackers::Sourcery. See https://modules.perl6.org/s/author%3Azoffix

[10:38] <Zoffix> Alright... I've done enough damage for the night

[10:38] * Zoffix goes to relax

[10:38] <araraloren> OH, http://modules.perl6.org/ looks pretty now

[10:38] <timotimo> really pretty

[10:39] *** setty1 left
[10:39] *** mr-foobar left
[10:42] *** Ven_ joined
[10:42] <eater[sha2017]> zengargoyle: haha thanks :') feel free to help :p

[10:47] *** mr-foobar joined
[10:49] <nadim> who's behind the new look?

[10:50] <Zoffix> Some random guy off the Internet.

[10:50] <timotimo> zoffix is

[10:50] <timotimo> i mean zoffix is some random guy off the Internet.

[10:51] <nadim> Zoffix: nice job!

[10:52] <nadim> I think it is important to have nice looking things to draw in more people. The hard core crew never has problems compiling stuff but the rest needs bling.

[10:55] <zengargoyle> i'm still wondering how CPAN integration is going.... and if like MetaCPAN is eventually going to be a pretty Perl 6 module search/browse, or if it's just going to stay a repository for .tar.gz blobs.

[10:55] *** ChoHag left
[10:56] *** ChoHag joined
[10:57] *** xinming left
[10:59] <Zoffix> CPAN integration is done, pretty much (the only question I have is why the METAs have a non-CPAN URLs in them)

[10:59] *** Aaronepower left
[10:59] <Zoffix> Nothing's gonna happen with MetaCPAN.org; it's a Perl tool

[10:59] <zengargoyle> it would be pretty awesome if MetaCPAN did perl6 modules with interface like perl5 modules *and* understood github like stuff like current ecosystem in addition to.

[10:59] *** haha_ joined
[11:00] <Zoffix> And whatever forkage of it was being worked on looks to be ded to me, so I'm just gonna add the listing to modules.perl6.org

[11:00] <zengargoyle> oh, that's sorta sad.

[11:00] <zengargoyle> i've considered them the same for so long i didn't think that way.

[11:00] <Zoffix> MetaCPAN doesn't support Perl 6's model of "many authors can have a dist with same name"

[11:01] <zengargoyle> *nods*

[11:01] <zengargoyle> i was totally thinging MetaCPAN pretty. :)

[11:03] <zengargoyle> i had CPAN question about the MANIFEST file.  which i've thought is mandatory for CPAN for indexing things.

[11:03] <zengargoyle> maybe more historical as META spec changed.  do perl 6 .tar.gz need MANIFEST of contents? 

[11:05] * zengargoyle a bit hazy on MANIFEST vs META and the indexing on CPAN.

[11:06] <Zoffix> don't see any MANIFESTs in a few dists I opened on http://www.cpan.org/authors/id/P/PS/PSIXDISTS/Perl6/?C=M;O=A

[11:07] <Zoffix> seems to generate a META.info if it's not present and META6.json if it's not present, so there are two META files :/ Yet both have source pointing to github instead of CPAN

[11:09] <zengargoyle> yes, it works whith no MANIFEST for perl 6, every perl 5 authoring tool i've ever used creates MANIFEST and i *thought* it was related to what is displayed and searchable vs what is actually  in the .tar.gz.  like CPAN doesn't extract the .tar.gz fully to get contents but relies on MANIFES or META to tell it what to put in search results.

[11:09] <zengargoyle> so a module with 1000 tests doesn't have 1000 hits for the test names.... like that.

[11:10] <zengargoyle> i'm not sure if MANIFEST is purely from CPAN time befor META or not...

[11:11] <zengargoyle> guess we'll find out soon enough. :}

[11:12] * zengargoyle mostly does simple things and lets authoring tools decide.

[11:13] <Zoffix> but all files go into MANIFEST. It's the list of all files that are supposed to be in the archive

[11:13] <eater[sha2017]> Zoffix: zengargoyle: no precompilation worked :)) now can finally reboot w/ my init system :')))

[11:15] <zengargoyle> but App::Mi6 doesn't create manifest and current CPAN-ized perl6 modules work without manifest... i'm wondering if it is needed.... and App::Mi6 and other tools need to make manifest as part of .tar.gz

[11:15] *** Aaronepower joined
[11:16] *** Ven_ left
[11:16] <zengargoyle> and i *think* mst mentioned that perl6 META spec was more like old perl5 META spec and is missing some of the things that have been added/changed since p6 META spec was spec'd.

[11:17] <Zoffix> p6 META spec isn't specced tho

[11:17] * Zoffix adds that as a TODO to 6.d prep

[11:17] <zengargoyle> so CPAN is a shot in the dark of hosting .tar.gz, but not searching or displaying.?

[11:19] <zengargoyle> MANIFEST and then META (to my memory anyway) evolved to avoid things like trying to display a random binary blob on search.cpan.ort.

[11:19] <Zoffix> "shot in the dark"?

[11:19] <zengargoyle> or to avoid indexing the names of lots of files that aren't really searchable in the first place.

[11:20] <zengargoyle> CPAN, even the old search.cpan.org is much more than hosting .tar.gz

[11:21] <zengargoyle> is it indexing and searching and displaying contents of dist.

[11:21] <ryu0> \o/. Packaging of the core components of perl6 is done. Next I'll need to work on some module packages.

[11:21] <ryu0> https://launchpad.net/~ryu0/+archive/ubuntu/perl6

[11:21] <zengargoyle> i don't see how without syncing perl 6 MANIFEST/META with perl 5 MANIFEST/META that the site will work well....

[11:22] <El_Che> ryu0++

[11:22] <ryu0> if this works out i may extend it to other ubuntu releases.

[11:23] <zengargoyle> unless perl 6 CPAN is just a search for module and get .tar.gz and it doesn't do all the other stuff...

[11:24] * zengargoyle thinks probably a question to wait for or to go to toolchain or something.

[11:24] <ryu0> Wow. make spectest takes a long time.

[11:25] <Zoffix> zengargoyle: modules.perl6.org will show all the things and CPAN will just host the tars

[11:25] <Zoffix> ryu0: try make stresstest :)

[11:25] <Zoffix> ryu0: did you set TEST_JOBS?

[11:25] <ryu0> Zoffix: heh. No. It defaults to single core.

[11:26] <ryu0> I was watching it take its time in the build log.

[11:26] <ryu0> mostly just to ensure i run the testsuite of these packages.

[11:26] <ryu0> seemed like a good idea. :o

[11:27] <ryu0> Hm. What shall I package first? zef seems to be a wise choice.

[11:28] <Zoffix> Is http://www.cpan.org/authors/id/P/PS/PSIXDISTS/Perl6/ still the place where all the P6 modules go into? They ain't got an author name so it still has the issue of "can't have same-dist-multiple-authors"

[11:29] *** Aaronepower left
[11:35] <Zoffix> Ahh... That's just for the PSIXDISTS project. Each PAUSE user has a Perl6 dir. e.g. http://www.cpan.org/authors/id/A/AS/ASTJ/Perl6/

[11:38] *** AlexDaniel left
[11:39] <Zoffix> Oh.. yeeey.. these have proper META source URL. 

[11:39] *** Aaronepower joined
[11:41] *** xinming joined
[11:43] *** eater[sha2017] left
[11:43] <zengargoyle> Zoffix: i never heard back from requests about http://modules.perl6.org/todo/zengargoyle i went to great pains to try and 'pass' the checks (an they all do have a MANIFEST) but it might be a bug or something and a new commit might fix it... that's part of why i'm trying to figure out the MANIFEST thing.

[11:43] *** eater[sha2017] joined
[11:45] <Zoffix> zengargoyle: dunno, I wasn't the one who coded that features

[11:45] <Zoffix> I saw some glitches with it too

[11:46] <zengargoyle> yeah, i notified somebody but didn't try make another commit just to see if that worked in case somebody wanted to look at it.

[11:48] <Zoffix> k, lemme look at it right now

[11:49] <zengargoyle> i sorta want to patch Mi6 to make MANIFEST or something but i'm totally in a quandry about CPAN+MANIFEST+META and what's wanted and what's needed and what is just my old cargo-culting.

[11:50] <Zoffix> Let's not add anything until there's clear reason to add it :)

[11:50] * zengargoyle doesn't really want to bother if if's not Metacpan and nice interface...

[11:54] *** Aaronepower left
[11:54] <ryu0> Zoffix: do perl6 modules have to be recompiled each time the moarvm/nqp/rakudo packages are?

[11:55] <Zoffix> ryu0: I think so. nine++ or ugexe++ would know more.

[11:55] <Zoffix> zengargoyle: you can make whatever commits you wanted to make. I repro-ed the issue with one of my modules.

[11:56] <zengargoyle> ryu0: in theory no.  the source for modules is in the repo and it *should* just notice and recompile the source if needed.

[11:56] <zengargoyle> i asked this once and that's what i was told.... if it is fully bullet-proof and always works... maybe.

[11:56] *** ALLO_ joined
[11:57] <nadim> ryu0: you have to do nothing, that was your question, you may notice a short delay the first time they are used after a change

[11:57] <ryu0> ok.

[11:57] <Teaa> You're correct, Zen. I've been told the same answer before.

[11:58] <zengargoyle> yeah, if it doesn't *work* it's probably a bug that somebody would be interested in.  (in practice.... sometimes you nuke from orbit)

[11:59] *** Ven joined
[11:59] *** Aaronepower joined
[11:59] *** Ven is now known as Guest22119

[11:59] <zengargoyle> but i noticed i didn't have to re-install things anymore and asked and yeah, it's suppesed to work that way.

[12:01] <zengargoyle> i think some package maintainer type people are pondering the "force recompilation now" thing so that users don't get the random pause when they use something that needs recompilation.

[12:02] *** http_GK1wmSU joined
[12:02] <Zoffix> k, 99% sure the /todo issue is 'cause the writer of the code did not know that there's a short-circuiting code path

[12:02] <Zoffix> And same happened with appveyor code. Wonder how to make that we have that mode more obvious :/

[12:03] *** http_GK1wmSU left
[12:04] <zengargoyle> i have a cut-n-paste from nine about forcing recomp of installed modules, but haven't tested, but sorta trust nine :)

[12:07] *** Aaronepower left
[12:08] *** Aaronepower joined
[12:12] *** Aaronepower left
[12:20] <perlawhirl> Can I specify something to happen at a programs INIT... *from* a module. ie. not at the modules INIT time but at the INIT time of the script that `use`d that module

[12:22] *** Cabanossi left
[12:24] *** Cabanossi joined
[12:24] *** Aaronepower joined
[12:30] *** ALLO_ left
[12:30] <araraloren> m: module A { INIT { say "123"; }; }; INIT { say "456"; };

[12:30] <camelia> rakudo-moar aca4b9: OUTPUT: «123␤456␤»

[12:31] <araraloren> perlawhirl, have you do some test ?

[12:35] *** RockyBalboa joined
[12:38] *** mr-fooba_ joined
[12:39] *** mr-foobar left
[12:40] *** Guest22119 left
[12:44] *** ChoHag left
[12:45] *** ChoHag joined
[12:53] *** Cabanossi left
[12:54] *** Cabanossi joined
[12:55] *** Skarsnik joined
[12:58] <Skarsnik> Hello

[12:58] <timotimo> greetings

[13:03] <Skarsnik> no 2017.08 yet? ^^

[13:05] *** S007 left
[13:09] *** Aaronepower left
[13:09] <timotimo> releases are usually after the middle of the month

[13:10] *** lizmat joined
[13:17] *** GhostK joined
[13:18] *** haha_ left
[13:26] *** pilne joined
[13:26] *** Skarsnik_ joined
[13:27] *** AlexDaniel joined
[13:28] *** BenGoldberg joined
[13:29] *** Skarsnik left
[13:31] *** Skarsnik_ is now known as Skarsnik

[13:34] <Skarsnik> AlexDaniel, I am working on L:p:statm, what do you think of use Linux::Proc::Statm; say get-statm-human.perl  => {:data("232.404 kB"), :dirty("0 kB"), :lib("0 kB"), :resident("112.580 kB"), :share("24.104 kB"), :size("259.832 kB"), :text("8 kB")}

[13:39] <AlexDaniel> Skarsnik: I don't think I'll ever need this, but it could be useful

[13:39] *** RockyBalboa left
[13:39] <Skarsnik> I also changed it so you can do get-statm(:unit("b")) if you want in byte and not kbytes

[13:39] <AlexDaniel> usually I'd want numbers with the same range, so I'll just sprintf it and slap a kB suffix if needed

[13:39] *** Aaronepower joined
[13:40] <Skarsnik> I found it hard to read without some small formating like that ^^

[13:47] *** S007 joined
[13:48] <moritz> m: my $*a = 42; { my $*a = CALLER::<$*a>; say $*a 

[13:48] <camelia> rakudo-moar aca4b9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3 = 42; { my $*a = CALLER::<$*a>; say $*a7⏏5<EOL>␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        stateme…»

[13:48] <moritz> m: my $*a = 42; { my $*a = CALLER::<$*a>; say $*a }

[13:48] <camelia> rakudo-moar aca4b9: OUTPUT: «42␤»

[13:48] <moritz> is there a way to achieve the same thing without resorting to reference-by-name?

[13:49] <moritz> $*CALLER::a doesn't work

[13:50] *** colomon left
[13:51] *** lizmat left
[13:58] <moritz> m: my %*a = :a, :b; say %*a; { my %*a = CALLER:<%*a>; say %*a };

[13:58] <camelia> rakudo-moar aca4b9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    CALLER:<%*a> used at line 1␤␤»

[13:59] <moritz> m: my %*a = :a, :b; say %*a; { my %*a = CALLER::<%*a>; say %*a };

[13:59] <camelia> rakudo-moar aca4b9: OUTPUT: «{a => True, b => True}␤{a => True, b => True}␤»

[13:59] <moritz> huh

[13:59] <moritz> I'm having a problem where something similar doesn't seem to work in a grammar

[13:59] *** weabot left
[14:00] *** darutoko- joined
[14:01] <moritz> m: https://gist.github.com/moritz/944e304f0d64e54b1a09e198e5b969a2

[14:01] <camelia> rakudo-moar aca4b9: OUTPUT: «Odd number of elements found where hash initializer expected:␤Only saw 1 element␤  in regex block at <tmp> line 33␤  in regex statement at <tmp> line 23␤  in regex TOP at <tmp> line 18␤  in block <unit> at <tmp> line 51␤␤»

[14:01] <AlexDaniel> what's NYFI?

[14:01] <AlexDaniel> ( https://github.com/rakudo/rakudo/blob/acaeb367f32d30022464d79fe728093dbf975a92/src/vm/jvm/runtime/org/perl6/rakudo/Binder.java#L698 )

[14:01] <moritz> AlexDaniel: "not yet fully implemented"?

[14:01] <AlexDaniel> oh… ok!

[14:01] <moritz> anybody see the problem in my gist above?

[14:01] <moritz> it seems to work in regular code

[14:03] *** patience joined
[14:03] *** darutoko left
[14:03] <moritz> m: grammar A { token TOP { :my %*VAR; <add> <recurse> }; token add { a { %*VAR<a> = True } }; token recurse { :my %*VAR = CALLER::<%*VAR>; b }}; say A.parse('ab');

[14:03] <camelia> rakudo-moar aca4b9: OUTPUT: «｢ab｣␤ add => ｢a｣␤ recurse => ｢b｣␤»

[14:03] <moritz> huh, works there

[14:03] <moritz> m: grammar A { token TOP { :my %*VAR; <add> <recurse> }; token add { a { %*VAR<a> = True } }; token recurse { :my %*VAR = CALLER::<%*VAR>; b <add> { say %*VAR.perl } }}; say A.parse('aba');

[14:03] <camelia> rakudo-moar aca4b9: OUTPUT: «{:a}␤｢aba｣␤ add => ｢a｣␤ recurse => ｢ba｣␤  add => ｢a｣␤»

[14:04] <moritz> m: grammar A { token TOP { :my %*VAR; <add> <recurse> }; token add { (.) { %*VAR{$0} = True } }; token recurse { :my %*VAR = CALLER::<%*VAR>; b <add> { say %*VAR.perl } }}; say A.parse('abc');

[14:04] <camelia> rakudo-moar aca4b9: OUTPUT: «{:a, :c}␤｢abc｣␤ add => ｢a｣␤  0 => ｢a｣␤ recurse => ｢bc｣␤  add => ｢c｣␤   0 => ｢c｣␤»

[14:05] <patience> I am still learning perl6 idioms - can someone refactor the compound stmt beginning on line 3 of the following?

[14:05] <patience> my $proc = run '/bin/ls', '-l', '/tmp', :out;

[14:05] <patience> say "/bin/ls -l /tmp";

[14:05] <evalable6> patience, rakudo-moar aca4b941c: OUTPUT: «/bin/ls -l /tmp»

[14:06] <patience> with $proc.out {

[14:06] <moritz> patience: please use a pastebin

[14:06] <patience>   no strict;

[14:06] <patience>   repeat {

[14:07] <patience>     $return = .get;

[14:07] <moritz> patience: stop pasting multi-line code directly in IRC

[14:07] <moritz> patience: use a pastebin/nopaste site

[14:07] <patience> how to do that?

[14:08] <patience> }

[14:08] <patience>   while $return.Bool;

[14:08] <patience> }

[14:08] <patience> ENDS

[14:09] <patience> can I paste <pre> .. </pre> bloc directly and have it be formatted (< 10 lines) automatically ?

[14:09] <timotimo> there's thousands if not millions of nopaste sites on the 'net

[14:09] <timotimo> no, irc doesn't have anything like that

[14:10] <patience> will check logs of this channel - back later

[14:10] *** http_GK1wmSU joined
[14:10] <moritz> patience: you something like https://pastebin.com/ or https://gist.github.com/

[14:12] *** http_GK1wmSU left
[14:12] <nadim> nopaste.linux-dev.org

[14:14] <nadim> timotimo: You were right, displaying type for Int is just noisy, Ints, as long as they do nothing else, will be displayed with a type that is blank. in columnar as in vertical mode. http://imgur.com/qfhepwy

[14:14] <nadim> should be in the next version, with less noise for IntStr too. Maybe I get myself to do the same for Str too.

[14:17] <timotimo> hm, it'd perhaps be good to be able to tell the difference between Int and IntStr

[14:17] <timotimo> maybe just output them with < > aronud 'em

[14:17] <Skarsnik> how does it show stuff like int32?

[14:18] <nadim> IntStr still get a type but when the int part and the str part are identical then only the int part is shown, there's an example in the image above

[14:19] <timotimo> an int32 can't really be inside a container like an array or hash

[14:19] <nadim> Skarsnik: good question, I guess .int32

[14:19] <nadim> let me try

[14:19] <timotimo> so it'll have a Buf[int32] or similar on the next level outside

[14:19] <Skarsnik> :m my int32 @foo; say @foo.WHAT;

[14:19] <Skarsnik> m: my int32 @foo; say @foo.WHAT;

[14:20] <camelia> rakudo-moar aca4b9: OUTPUT: «(array[int32])␤»

[14:20] <nadim> I must admit that I have dumped no Buf not int32

[14:20] <nadim> yet

[14:20] <moritz> m: grammar A { token TOP { :my %*VAR; <add> <recurse> }; token add { (.) { %*VAR{$0} = True } }; token recurse { 'b' :my %*VAR = CALLER::<%*VAR>; <add> { say %*VAR.perl } }}; say A.parse('abc');

[14:20] <camelia> rakudo-moar aca4b9: OUTPUT: «{:a, :c}␤｢abc｣␤ add => ｢a｣␤  0 => ｢a｣␤ recurse => ｢bc｣␤  add => ｢c｣␤   0 => ｢c｣␤»

[14:21] * moritz can't figure out why it works in this simple example, but not in https://gist.github.com/moritz/944e304f0d64e54b1a09e198e5b969a2

[14:24] <nadim> It's show like this but nothing of what's in the array, bleah!,└ 4 = .array[int32] @18

[14:25] <Skarsnik> what is the @18

[14:26] *** haha_ joined
[14:27] <nadim> it's a reference, any array and other containre gets them, if they are fered to somewhere elese, the data is not shown again but the reference is

[14:27] <Skarsnik> m: my uint32 $foo; $foo = -42; say $foo;

[14:27] <camelia> rakudo-moar aca4b9: OUTPUT: «4294967254␤»

[14:28] <nadim> Skarsnik: it would make much more sense if the example I gave had elements in the array

[14:28] <Skarsnik> m: my uint64 $foo; $foo = -42; say $foo;

[14:28] <camelia> rakudo-moar aca4b9: OUTPUT: «-42␤»

[14:28] <Skarsnik> hm, these unsigned int stuff is still not fixed it seems

[14:29] <patience> How do I insert a clickable link in my message, e.g. as nadim did above at 10:14 ?

[14:29] <Skarsnik> just copy paste the link

[14:29] <Skarsnik> your irc client will make it clickable

[14:29] <ilmari> irc itself is just plain text

[14:29] <ilmari> any fancy display is up to the client

[14:30] <moritz> right

[14:32] <patience> I am still learning perl6 idioms - how can I tighten up the following short program:  https://pastebin.com/F4sRYY0y

[14:33] <AlexDaniel> patience: maybe you need $proc.out.slurp-rest ?

[14:34] *** zacts joined
[14:34] <patience> What I am trying to do is test .get so I can terminate the script when it returns Nil

[14:35] <patience> IE I need line by line input 

[14:36] <patience> Any way it works ..

[14:36] <moritz> patience: you're never assigning to $return

[14:36] <AlexDaniel> patience: what about $proc.out.lines then?

[14:36] <nadim> m: my int32 $x ; $x.^name.say

[14:36] <camelia> rakudo-moar aca4b9: OUTPUT: «Int␤»

[14:37] <nadim> so int 32 is not a type? is it a hint? or what?

[14:37] <moritz> patience: also don't use "no strict;". Strict mode caught an error for you, and you ignored it

[14:37] *** bstamour joined
[14:38] <moritz> patience: you can replace your whole loop with  for $proc.out.lines -> $line { say $line }

[14:38] <AlexDaniel> patience: also, there is a non-perl6 problem with your code: http://mywiki.wooledge.org/ParsingLs

[14:38] <AlexDaniel> patience: but maybe it's just an example, I don't know

[14:40] <patience> OK thanks, will try - back later 

[14:40] <AlexDaniel> patience: if you want to go through files/directories in a directory, then use ‘dir’. For example: for dir ‘/tmp’ -> $smth { … }

[14:45] *** patience left
[14:48] *** bstamour left
[14:51] <nadim> So, what's a int32, obviously not a type and what is int32 @array, since it is not an array either, hand how can one dig out it's values (this suddenly made my sunday exciting)

[14:52] <timotimo> int32 is a native type, those are special

[14:52] <timotimo> when you call a method or something on an object like that you'll get it boxed into an Int

[14:52] <nadim> ok

[14:52] <timotimo> they are slippery like that

[14:53] <nadim> is it possible to know if an Int is an int32?

[14:53] <ryu0> say 3/5;

[14:53] <evalable6> ryu0, rakudo-moar aca4b941c: OUTPUT: «0.6»

[14:53] <ryu0> say 3/5.WHAT;

[14:53] <evalable6> ryu0, rakudo-moar aca4b941c: OUTPUT: «(exit code 1) Parameter 'de' of routine 'DIVIDE_NUMBERS' must be an object instance of type 'Int', not a type object of type 'Int'.  Did you forget a '.new'?␤  in block <unit> at /tmp/VGZ6tIQ7cL line 1␤»

[14:53] <ryu0> say (3/5).WHAT;

[14:53] <evalable6> ryu0, rakudo-moar aca4b941c: OUTPUT: «(Rat)»

[14:53] <timotimo> that's more a property of a variable, really

[14:53] <timotimo> m: my int32 $foo = 99; say $foo.WHAT; say $foo.VAR.WHAT;

[14:53] <camelia> rakudo-moar aca4b9: OUTPUT: «(Int)␤(IntLexRef)␤»

[14:54] <timotimo> IntLexRef is a kind of object that forwards all accesses to a lexical slot in some frame

[14:54] <timotimo> this way the int32 can stay an int32 but you can still pass it around with read-write access

[14:54] <nadim> ok, is it possible to know what it is forwarded to?

[14:54] <perlawhirl> bisectable6: say (1,2,3).combinations(2..*)

[14:54] <bisectable6> perlawhirl, Bisecting by exit code (old=2015.12 new=aca4b94). Old exit code: 0

[14:54] <timotimo> i don't think so

[14:54] <bisectable6> perlawhirl, bisect log: https://gist.github.com/b3a3d6a44a4bb7081c5c362b7d695e4a

[14:54] <bisectable6> perlawhirl, (2017-01-14) https://github.com/rakudo/rakudo/commit/502fc77a68924a68115e739ffae64fdd10f3fbe9

[14:55] <nadim> timotimo: ok, what about int32 @array?

[14:55] <timotimo> there you'll get a IntPosRef

[14:55] <timotimo> which is like an IntLexRef but instead of a lexical pad it refers to a native array

[14:55] <timotimo> m: my int32 @foo = 1, 2, 3; say @foo[1].WHAT; say @foo[1].VAR.WHAT

[14:55] <camelia> rakudo-moar aca4b9: OUTPUT: «(Int)␤(IntPosRef)␤»

[14:56] <nadim> but it is not an Array, how do I get it's elements?

[14:56] <timotimo> how do you mean?

[14:56] <timotimo> m: my int32 @foo; say @foo.WHAT

[14:56] <camelia> rakudo-moar aca4b9: OUTPUT: «(array[int32])␤»

[14:56] <nadim> hmm, maybe have to handle IntPosRef

[14:57] <timotimo> in what circumstance would you have to?

[14:57] <araraloren> m: my int32 @foo = 1, 2, 3; say @foo[1];

[14:57] <nadim> m: my int32 @foo = 3, 4 ; dd @foo

[14:57] <camelia> rakudo-moar aca4b9: OUTPUT: «2␤»

[14:57] <camelia> rakudo-moar aca4b9: OUTPUT: «array[int32].new(3, 4)␤»

[14:57] <AlexDaniel> commit: 502fc77a6^,502fc77a6 say (1,2,3).combinations(2..*)

[14:57] <committable6> AlexDaniel, ¦502fc77a6^: «((1 2) (1 3) (2 3) (1 2 3))» ¦502fc77: «This type cannot unbox to a native integer: P6opaque, Num␤  in block <unit> at /tmp/_5iwIZuPqX line 1␤ «exit code = 1»»

[14:57] <AlexDaniel> commit: HEAD say (1,2,3).combinations(2..*)

[14:57] <committable6> AlexDaniel, ¦HEAD(aca4b94): «Cannot determine integer bounds␤  in block <unit> at /tmp/P75ThMhAwg line 1␤ «exit code = 1»»

[14:58] <timotimo> oh is that because it treats * as Inf?

[14:59] <AlexDaniel> sure, and so?

[14:59] <AlexDaniel> both * and ∞ should work I think

[15:00] <AlexDaniel> perlawhirl: you are going to submit a ticket, right?

[15:00] <perlawhirl> yes, they did. at least, there should be a way to ask for combinations of n or greater, without having to specify a concrete upper bound

[15:01] <perlawhirl> yeap... will log it to rt

[15:02] <perlawhirl> quick question... is rt still only accepting emailed submissions

[15:03] *** Skarsnik_ joined
[15:04] <AlexDaniel> perlawhirl: there is a hidden door for some of the club members. https://rt.perl.org/m/

[15:05] <perlawhirl> ta

[15:05] <Skarsnik_> was a mail for bug?

[15:05] <Skarsnik_> like [email@hidden.address]
[15:05] <timotimo> right, it should definitely work, the code just has to be changed to make it work (again)

[15:05] <AlexDaniel> my face was slapped several times now for advertising this as an option, but the whole situation is a joke to be honest

[15:05] <moritz> Skarsnik_: [email@hidden.address]
[15:07] *** Skarsnik left
[15:07] *** |oLa| left
[15:07] *** Skarsnik_ is now known as Skarsnik

[15:08] <AlexDaniel> commit: all say (1,2,3).combinations(2..*)

[15:08] <committable6> AlexDaniel, https://gist.github.com/74f64a1ef4bf80453f8426a570964d89

[15:09] <nadim> Skarsnik: something like this in vertical mode, some time this week when I have understood better how the int32 style types are used http://imgur.com/0REbrsM

[15:10] <moritz> ok, I figured out my grammar conundrum; turns out I need to use CALLERS:: instead of CALLER:: if there is a chance of there being an intermediate rule

[15:10] <AlexDaniel> Skarsnik: hey. I want Gumbo to be fixed ASAP, how can I help with the bug?

[15:10] *** |oLa| joined
[15:10] <Skarsnik> Well, look like a MoarVM bug ~~

[15:11] <perlawhirl> AlexDaniel: I'm not a master with these bots... So it looks like it broke between 2017.02 and .03... am i interpreting the commitable output correctly?

[15:11] <AlexDaniel> Skarsnik: yeah, but maybe I can golf it down to something managable?

[15:11] <AlexDaniel> perlawhirl: bisectable gave you the right answer, which is 502fc77a68924a68115e739ffae64fdd10f3fbe9

[15:11] <perlawhirl> k, thanks

[15:11] <AlexDaniel> perlawhirl: we can double check like this

[15:12] <Skarsnik> hm, I wanted to try writing a small C program that does lot of allocation/free to try to replicate this thing

[15:12] <AlexDaniel> commit: 502fc77a6^ say (1,2,3).combinations(2..*)

[15:12] <committable6> AlexDaniel, ¦502fc77a6^: «((1 2) (1 3) (2 3) (1 2 3))»

[15:12] <AlexDaniel> so it works before 502fc77a6

[15:12] <AlexDaniel> commit: 502fc77a6 say (1,2,3).combinations(2..*)

[15:12] <committable6> AlexDaniel, ¦502fc77: «This type cannot unbox to a native integer: P6opaque, Num␤  in block <unit> at /tmp/cK9C5OFdUt line 1␤ «exit code = 1»»

[15:12] <AlexDaniel> but not on 502fc77a6

[15:12] <ryu0> Is it normal for perl6 to be slow to start up?

[15:12] <Skarsnik> The issue, it does not crash with the minigumbo thingy if I remember correctly

[15:12] *** zakharyas joined
[15:12] <Skarsnik> ryu0, yeah first start can be slow with lot of modules

[15:12] <moritz> ryu0: depends on what you do

[15:12] <AlexDaniel> ryu0: how slow?

[15:13] <moritz> a perl6 -e '' should be around 0.1s

[15:13] <ryu0> i'm getting ~ 0.25s of startup time each time I run it.

[15:13] <AlexDaniel> ryu0: what rakudo version?

[15:13] <ryu0> 2017.07

[15:13] *** nadim left
[15:13] <moritz> is your hardware really old?

[15:13] <ryu0> then again this PC has a slower processor. N3150.

[15:13] <ryu0> No, but it's a low power model.

[15:14] <ryu0> oddly perl5 starts very fast.

[15:14] <moritz> yes, perl 5 is highly optimized for low startup times

[15:14] <Skarsnik> perl6 is still quite slow

[15:14] <timotimo> yeah, perl6 is mildly optimized for low startup times

[15:14] <moritz> on my machine, I get around 5ms startup for perl5, 100ms startup for perl6, 40ms for python2.7

[15:15] <timotimo> was perl6 already faster than perl5 if you only add moose or do you have to add more modules?

[15:15] <moritz> ruby around 60ms

[15:15] <moritz> timotimo: on my machine, perl -MMoose -e '' is slower than perl6 -e ''

[15:16] <timotimo> ok, cool

[15:16] <timotimo> Moo is likely a lot faster, right?

[15:17] <Skarsnik> AlexDaniel, the issue, if the minigumbo code I wrote does not make it crash, etheir you need to tweak the minixml code to make Moar do more stuff with memory and figure what trigger the heap corruption, and dig into Moar with the actual crash ~~

[15:18] *** eater[sha2017] left
[15:21] <Skarsnik> s/and/or

[15:24] *** eater[sha2017] joined
[15:29] <Skarsnik> AlexDaniel, I wonder how we can create leak test/crash

[15:30] <AlexDaniel> ryu0: there's one more thing. I don't have a startup time graph yet, but due to latest changes the startup time dropped by tens of milliseconds I think

[15:30] <timotimo> dropped? don't you mean increased?

[15:31] <AlexDaniel> timotimo: huh?

[15:31] <timotimo> wait, what i remember were only like 6 miliseconds

[15:32] *** Skarsnik_ joined
[15:32] <AlexDaniel> hm, maybes so, but it felt like more than 10 at least

[15:32] <timotimo> ooh

[15:32] <timotimo> that was spesh enabled vs disabled

[15:33] <AlexDaniel> ryu0: in any case, the startup time is constantly improving, but there's still room for improvement… like, a lot of it

[15:33] <AlexDaniel> I was surprised to know that python3 has significantly slower startup than python2

[15:34] <AlexDaniel> it's not that surprising now that I think about it, but it was a bit unexpected for sure

[15:34] *** eater[sha2017] left
[15:35] <timotimo> oh? what makes it unsurprising?

[15:35] <timotimo> they've had a few years of making semantics right and since then have been working on performance, too, no?

[15:35] *** eater[sha2017] joined
[15:35] *** Skarsnik left
[15:37] *** Cabanossi left
[15:39] <AlexDaniel> timotimo: imo it's easy to make a language that has very low startup time but very few useful features. And once you're below 50ms, who cares? So I'm totally fine with things getting a bit slower, if they're fast anyway

[15:39] <AlexDaniel> does not apply to rakudo though :P

[15:39] *** Cabanossi joined
[15:41] *** Skarsnik_ is now known as Skarsnik

[15:45] *** pharv joined
[15:53] <timotimo> yeah, 10ms startup would be nice

[15:54] <timotimo> but i'd settle for 40ms

[15:57] *** araraloren left
[15:57] *** zakharyas left
[16:00] *** itaylor57 left
[16:00] <jdv79> nope, not using XML via replacing it with a run call out to p5 doesn't seem to impact the new moarvm mem hogging

[16:00] *** eater[sha2017] left
[16:00] <jdv79> a little but seems more systemic than i hoped

[16:02] *** nadim joined
[16:03] *** Khisanth left
[16:03] *** eater[sha2017] joined
[16:06] *** pharv left
[16:08] *** Ven joined
[16:09] *** Ven is now known as Guest4921

[16:16] *** Khisanth joined
[16:16] <AlexDaniel> jdv79: do you have a runnable example to reproduce the issue?

[16:19] <AlexDaniel> perlawhirl: hmmm I think “Anon state var doesn't work in regex” is not a bug actually

[16:19] <AlexDaniel> perlawhirl: lemme find it…

[16:20] <AlexDaniel> or at least is a duplicate

[16:20] <AlexDaniel> perlawhirl: RT #131102

[16:20] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131102

[16:21] *** bwisti left
[16:22] <jdv79> looks like its run that causes thread starvation or something like that

[16:22] <jdv79> working on it

[16:23] <AlexDaniel> perlawhirl: yea, ok, I merged these tickets

[16:23] *** eater[sha2017] left
[16:23] <jdv79> moving from HTTP::Tinyish in sync to async mode cleared that portion up

[16:24] *** eater[sha2017] joined
[16:25] <AlexDaniel> jdv79: https://irclog.perlgeek.de/moarvm/2017-08-05#i_14973437 ?

[16:25] *** rindolf left
[16:26] <jdv79> maybe

[16:27] *** nadim left
[16:29] *** itaylor57 joined
[16:32] *** rindolf joined
[16:32] *** PPC3 joined
[16:38] *** Cabanossi left
[16:38] <jdv79> hmm.  removing all Proc seems to help.

[16:38] <jdv79> rakudo really doesn't like proc not-async i guess

[16:39] *** Cabanossi joined
[16:40] *** Ben_Goldberg joined
[16:40] *** BenGoldberg left
[16:40] *** Ben_Goldberg is now known as BenGoldberg

[16:41] <mst> guessing the more recent rakudos' ability to not tie up threads during an await makes that less likely to cause starvation?

[16:42] *** Guest4921 left
[16:44] <timotimo> proc async was already not using up a thread, though

[16:49] *** Aaronepower left
[16:49] *** astj joined
[16:50] <timotimo> at least i think so

[16:50] *** nadim joined
[16:54] *** Aaronepower joined
[16:54] *** Ven_ joined
[16:55] <moritz> do we have LEAVE phasers for regexes?

[16:57] <jdv79> yes, the new await works as advertized

[16:58] <jdv79> but for some reason if you use Proc somewhere it'll seemingly deadlock the scheduler if your task count is > the max thread count 

[16:58] <jdv79> so just converting it all to async and its fine again

[16:59] *** setty1 joined
[17:00] *** Ven_ left
[17:01] *** aeruder joined
[17:04] *** mr-fooba_ left
[17:05] *** eater[sha2017] left
[17:07] *** mr-foobar joined
[17:09] *** PPC3 left
[17:10] *** RockyBalboa joined
[17:12] *** eater[sha2017] joined
[17:14] *** Ben_Goldberg joined
[17:14] *** BenGoldberg left
[17:14] *** Ben_Goldberg is now known as BenGoldberg

[17:17] *** astj left
[17:18] *** haha_ left
[17:19] *** astj joined
[17:21] *** astj left
[17:23] *** Voldenet left
[17:25] *** haha_ joined
[17:29] *** Voldenet joined
[17:29] *** Voldenet left
[17:29] *** Voldenet joined
[17:44] <gfldex> jnthn: are you testing moar with long running programs? I'm asking because I got a segfault with a really simple program.

[17:44] <gfldex> after about 3 days

[17:48] *** szabgab joined
[17:49] *** szabgab left
[17:49] <jnthn> gfldex: I don't have anything set up for that, no. Though have been thinking about it a bit.

[17:50] <gfldex> jnthn: i got coredumps active now. I will yell when I get another hit.

[17:51] <jnthn> gfldex: Alright, thanks.

[17:52] <El_Che> I don't mind setting a VM with this type of a smoker, but I have no clue what a representative program could be

[17:56] *** eater[sha2017] left
[17:58] *** eater[sha2017] joined
[17:59] *** setty1 left
[18:01] *** lichtkind left
[18:03] <gfldex> El_Che: that's what crashed for me: https://github.com/gfldex/perl6-bt-auto-connect/blob/master/bin/gt-auto-connect.p6

[18:04] <Geth> ¦ modules.perl6.org: badc389ecd | (Zoffix Znet)++ | 2 files

[18:04] <Geth> ¦ modules.perl6.org: Don't pre-set appveyor status

[18:04] <Geth> ¦ modules.perl6.org: 

[18:04] <Geth> ¦ modules.perl6.org: The Dist model already handles the not-set-up case and the

[18:04] <Geth> ¦ modules.perl6.org: appveyor postprocessor handles the 'unknown'

[18:04] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/badc389ecd

[18:08] *** lizmat joined
[18:21] *** haha_ left
[18:22] *** haha_ joined
[18:31] *** Petit_Dejeuner joined
[18:35] <Zoffix> m: my @foo = qw/foo bar ber foo/; sub what { $_ //= shift @_; /meows/ }; if (my ($foo) = grep &what, @foo) { say "I am a Rakudo program" } else { say "I am a Perl program" }

[18:35] <camelia> rakudo-moar aca4b9: OUTPUT: «I am a Rakudo program␤»

[18:35] <Zoffix> :)

[18:37] *** darutoko- left
[18:38] <Petit_Dejeuner> Neat!

[18:39] *** eater[sha2017] left
[18:39] *** Ven joined
[18:40] *** Ven is now known as Guest2480

[18:40] *** GK1wmSU-deepbook joined
[18:40] *** GK1wmSU-deepbook left
[18:41] *** eater[sha2017] joined
[18:41] <Zoffix> m: say "0" && "I am a Rakudo program" || "I am a Perl program"

[18:41] <camelia> rakudo-moar aca4b9: OUTPUT: «I am a Rakudo program␤»

[18:41] <Zoffix> Shorter version :)

[18:43] *** zengargoyle left
[18:44] *** zengargoyle joined
[18:45] <Zoffix> See also: https://github.com/mauke/poly.poly

[18:52] <jdv79> oh wow.  XML and HTML::Parser::XML timed out after a minute on a reddit parse whereas p5 and libxml does it is < 2s

[18:52] <Skarsnik> use Gumbo

[18:52] <Zoffix> use DOM::Tiny

[18:52] <Zoffix> buggable: eco dom

[18:52] <buggable> Zoffix, Found 9 results: DOM::Tiny, Digest::PSHA1, Haikunator, Math::Random, Crypt::Random. See https://modules.perl6.org/s/dom

[18:52] <Skarsnik> :modules Gumbo

[18:52] <jdv79> i'd prefer if the grammars were better

[18:52] <jdv79> but its fine

[18:53] <jdv79> does gumbo do both xml and html5?

[18:53] <Zoffix> jdv79: well, you know where the source is :) help yourself

[18:53] <jdv79> or any of those

[18:53] <Skarsnik> It's not a good idea to waste time trying to write a html5 parser IMO

[18:53] <Skarsnik> too much work

[18:54] <Skarsnik> buggable: eco Gumbo

[18:54] <buggable> Skarsnik, Gumbo 'Binding of the gumbo C library, a html parser lib': https://github.com/Skarsnik/perl6-gumbo

[18:54] <Skarsnik> Too bad I did not manage to make the XML parsing work with gumbo

[18:55] <Skarsnik> could have be nice in GPTrixie to not wait to XML module to take 30sec+ on sizeable header

[18:56] <Zoffix> jdv79: Perl's version of DOM::Tiny does, and it's meant to be a clone, so if it was a faithful one, then it should do too in Rakudo

[18:56] <Zoffix> s/clone/port/;

[18:58] <jdv79> ok

[18:58] <nadim> guys, is .array only used with native types?

[19:00] *** eater[sha2017] left
[19:00] *** KotH_ joined
[19:01] *** ruoso_ joined
[19:01] *** [ptc]_ joined
[19:01] *** Juerd_ joined
[19:01] *** ilbelkyr_ joined
[19:02] *** eater[sha2017] joined
[19:04] *** tyilanmenyn joined
[19:05] *** cono_ joined
[19:06] *** breinbaa1 joined
[19:06] *** FK04 joined
[19:06] *** incredible_ joined
[19:06] *** Voldenet_ joined
[19:07] *** Voldenet left
[19:07] *** FiendKing04 left
[19:07] *** ggoebel left
[19:07] *** leedo left
[19:07] *** tyil left
[19:07] *** breinbaas left
[19:07] *** Grauwolf left
[19:07] *** [ptc] left
[19:07] *** timotimo left
[19:07] *** cono left
[19:07] *** Juerd left
[19:07] *** escherlat left
[19:07] *** tbrowder left
[19:07] *** Juerd_ is now known as Juerd

[19:08] *** imcsk8_ joined
[19:11] *** leego joined
[19:12] *** imcsk8 left
[19:16] *** xui_nya[m] left
[19:16] *** CIAvash[m] left
[19:16] *** wictory[m] left
[19:16] *** unclechu left
[19:16] *** mack[m] left
[19:16] *** Matthew[m] left
[19:16] *** tadzik left
[19:16] *** ilmari[m] left
[19:16] *** M-Illandan left
[19:16] *** mienaikage left
[19:17] *** tyil[m] left
[19:18] *** ggoebel joined
[19:18] *** Grauwolf joined
[19:18] *** timotimo joined
[19:18] *** escherlat joined
[19:18] *** tbrowder joined
[19:18] *** chansen_ joined
[19:18] *** skaji joined
[19:18] *** jnap_ joined
[19:22] *** GhostK left
[19:23] *** TEttinger joined
[19:23] *** Guest2480 is now known as Ven``

[19:26] <nadim> Skarsnik: Native type support is certainly possible, had to change 2 lines in the core code and a few handlers have to be added. I' am prety sure it can be made better. I'd like to show that things are used for native calls but once instantiated it becomes difficult

[19:26] <nadim> first shot is not too bad http://imgur.com/43p37nf

[19:27] <nadim> I'd need to read the docs more and write tests for all the supported types

[19:28] <nadim> this is what is being dumped  https://nopaste.linux-dev.org/?1160473

[19:29] *** BenGoldberg left
[19:31] *** BenGoldberg joined
[19:42] *** haha_ left
[19:42] <moritz> do we have a list supported character classes anywhere? samcv, halp! :-)

[19:43] *** kerframil joined
[19:43] *** haha_ joined
[19:46] *** KotH_ is now known as KotH

[19:47] *** brrt joined
[19:50] *** cdg joined
[19:55] *** brrt left
[19:58] *** eater[sha2017] left
[20:02] <Skarsnik> nadim, not, maybe you could add the CStruct info to the Point class

[20:04] <Skarsnik> nadim, this can maybe help figure stuff about native type https://github.com/rakudo/rakudo/blob/nom/lib/NativeCall.pm6#L233

[20:08] <nadim> It would certainly be helpful to display what the classes are in native land, I'll have a look at it

[20:14] *** haha_ left
[20:17] <Skarsnik> and be careful, int32 are "Perl 6" native, a class with is repr('CStruct') is "C" native

[20:29] *** espadrine left
[20:32] *** zakharyas joined
[20:32] *** lizmat left
[20:34] <nadim> want to give it a try ? ;)  I'll provide a template, examples and support

[20:35] *** Ven`` left
[20:36] *** mack[m] joined
[20:37] *** M-Illandan joined
[20:37] *** tzekid left
[20:39] *** tzekid joined
[20:44] *** BenGoldberg left
[20:46] *** xui_nya[m] joined
[20:47] *** dwarring joined
[20:48] <Geth> ¦ modules.perl6.org: 5db8ada712 | (Zoffix Znet)++ | 5 files

[20:48] <Geth> ¦ modules.perl6.org: De-spaghettify DistSource <-> PostProcessor / Fix TODO issue finder

[20:48] <Geth> ¦ modules.perl6.org: 

[20:48] <Geth> ¦ modules.perl6.org: - Move all TODO issue checks to METAChecker postprocessor

[20:48] <Geth> ¦ modules.perl6.org:     - Lets us avoid duplicating the checks in each dist source

[20:48] <Geth> ¦ modules.perl6.org:     - Fixes false positives MANIFEST issue

[20:48] <Geth> ¦ modules.perl6.org: - Make MANIFEST TODO check only applicable to `cpan` dist source as it's a bit

[20:48] <Geth> ¦ modules.perl6.org:     silly to tell users they need to create useless files in their repos

[20:48] <Geth> ¦ modules.perl6.org: - Add TODO check for version being set to `*` which we now deem invalid

[20:48] <Geth> ¦ modules.perl6.org: - Do not use author from GitHub URL if missing from META; hosting != authorship

[20:48] <Geth> ¦ modules.perl6.org: - Move all Travis and AppVeyor logic entirely into corresponding postprocessors

[20:48] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/5db8ada712

[20:48] *** tadzik joined
[20:49] <Geth> ¦ modules.perl6.org: ddea979132 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/Source.pm

[20:49] <Geth> ¦ modules.perl6.org: Pass a `time` query arg when fetching META file

[20:49] <Geth> ¦ modules.perl6.org: 

[20:49] <Geth> ¦ modules.perl6.org: GitHub overly eagerly servers cached version of the META file, so that

[20:49] <Geth> ¦ modules.perl6.org: even after a commit is done, it serves the old META for some time.

[20:49] <Geth> ¦ modules.perl6.org: 

[20:49] <Geth> ¦ modules.perl6.org: This interferes with testing during dev, and might also cause inconguency

[20:49] <Geth> ¦ modules.perl6.org: between the META data we have and latest commit data, since we fetch

[20:49] <Geth> ¦ modules.perl6.org: META off the Web, not the API call.

[20:49] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/ddea979132

[20:50] <Zoffix> .tell zengargoyle this fixes the MANIFEST in TODO issues you were having (fixes it as well as moves it to be only for `cpan` dist source): https://github.com/perl6/modules.perl6.org/commit/5db8ada712

[20:50] <yoleaux> Zoffix: I'll pass your message to zengargoyle.

[20:51] <Zoffix> I hope I didn't mess anything up in that commit. Ain't no unbittrotted tests for any of that code :'(

[20:51] *** hythm_ joined
[20:52] *** zakharyas left
[20:54] <Geth> ¦ modules.perl6.org: 88874dedfc | (Zoffix Znet)++ | use-me-for-commit-triggers

[20:54] <Geth> ¦ modules.perl6.org: [REBUILD] Add special file to use for commit triggers

[20:54] <Geth> ¦ modules.perl6.org: 

[20:54] <Geth> ¦ modules.perl6.org: So we don't edit random files just for triggers

[20:54] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/88874dedfc

[20:56] *** hythm_ left
[20:56] *** hythm_ joined
[20:59] <Geth> ¦ modules.perl6.org: 6244527199 | (Zoffix Znet)++ | 3 files

[20:59] <Geth> ¦ modules.perl6.org: Add commit trigger for faster app restart

[20:59] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6244527199

[21:00] <Zoffix> .oO( [MAKEMEASAMMICH] ... )

[21:06] <Geth> ¦ modules.perl6.org: 881fbe6740 | (Zoffix Znet)++ | 6 files

[21:06] <Geth> ¦ modules.perl6.org: Rename PostProcessors to order them

[21:06] <Geth> ¦ modules.perl6.org: 

[21:06] <Geth> ¦ modules.perl6.org: In preparation to add interacting postprocessors, e.g. README

[21:06] <Geth> ¦ modules.perl6.org: fetcher to fetch the README just once and re-use that data in

[21:06] <Geth> ¦ modules.perl6.org: both METAChecker and AppVeyor postprocessor.

[21:06] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/881fbe6740

[21:15] *** nowan left
[21:16] *** cdg left
[21:17] *** ilmari[m] joined
[21:17] *** CIAvash[m] joined
[21:18] *** unclechu joined
[21:18] *** setty1 joined
[21:19] *** Matthew[m] joined
[21:20] *** tyil[m] joined
[21:20] *** nowan joined
[21:20] *** zakharyas joined
[21:20] *** mienaikage joined
[21:21] *** wictory[m] joined
[21:24] *** Skarsnik left
[21:30] <jdv79> if i call exit(), shouldn't all threads be halted?

[21:31] <jdv79> once they can - not in a syscall, etc...

[21:32] <Geth> ¦ modules.perl6.org: 8998676fd6 | (Zoffix Znet)++ | 2 files

[21:32] <Geth> ¦ modules.perl6.org: Implement DataFetcher postprocessor

[21:32] <Geth> ¦ modules.perl6.org: 

[21:32] <Geth> ¦ modules.perl6.org: And fetch README content in it

[21:32] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/8998676fd6

[21:35] <Geth> ¦ modules.perl6.org: 259adf66f5 | (Zoffix Znet)++ | templates/layouts/default.html.ep

[21:35] <Geth> ¦ modules.perl6.org: [REAPP] Fix broken last-update date in footer

[21:35] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/259adf66f5

[21:44] *** zakharyas left
[21:45] *** rindolf left
[21:49] *** RockyBalboa_ joined
[21:49] *** cpage_ joined
[21:50] *** RockyBalboa_ left
[21:50] *** RockyBalboa_ joined
[21:53] *** RockyBalboa left
[21:54] *** rindolf joined
[21:54] *** robertle left
[21:56] *** RockyBalboa_ left
[21:56] *** andreoss joined
[21:58] *** dogbert11 left
[21:59] *** pharv joined
[22:09] *** samb1 left
[22:13] *** Voldenet_ is now known as Voldenet

[22:13] *** Voldenet left
[22:13] *** Voldenet joined
[22:17] *** g0d355__ left
[22:21] *** samb1 joined
[22:22] *** tzekid left
[22:27] <Geth> ¦ modules.perl6.org: 444c586e58 | (Zoffix Znet)++ | 5 files

[22:27] <Geth> ¦ modules.perl6.org: Implement heuristic for AppVeyor project URL

[22:27] <Geth> ¦ modules.perl6.org: 

[22:27] <Geth> ¦ modules.perl6.org: - Try to fetch status from API using GitHub's user/repo

[22:27] <Geth> ¦ modules.perl6.org:     for AppVeyor user/slug; if success, that's the AppVeyor url

[22:27] <Geth> ¦ modules.perl6.org: - If that fails, fetch status from badge and rake repo's README

[22:27] <Geth> ¦ modules.perl6.org:     for the URL to AppVeyor project and use that

[22:27] <Geth> ¦ modules.perl6.org: - If that fails, just direct AppVeyor URL to dist repo

[22:27] <Geth> ¦ modules.perl6.org: 

[22:27] <Geth> ¦ modules.perl6.org: Fixes https://github.com/perl6/modules.perl6.org/issues/76

[22:27] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/444c586e58

[22:29] <Geth> ¦ modules.perl6.org: 19b4da489d | (Zoffix Znet)++ | use-me-for-commit-triggers

[22:29] <Geth> ¦ modules.perl6.org: [NEWDB] Rebuild db for AppVeyour URL db entry

[22:29] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/19b4da489d

[22:29] *** markmont left
[22:31] *** hythm_ left
[22:35] *** wamba left
[22:35] <Geth> ¦ modules.perl6.org: 1b7771a686 | (Zoffix Znet)++ | update-modules.perl6.org

[22:35] <Geth> ¦ modules.perl6.org: Do not bail out if re-app commit trigger fails to start app

[22:35] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/1b7771a686

[22:48] <Geth> ¦ modules.perl6.org: de43f672ad | (Zoffix Znet)++ | templates/root/search.html.ep

[22:48] <Geth> ¦ modules.perl6.org: In tag view, suggest keyword search for current tag

[22:48] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/de43f672ad

[22:48] *** dwarring left
[22:48] *** sherwool left
[22:48] *** MasterDuke left
[22:48] *** gregf_ left
[22:49] * Zoffix chicks Geth

[22:49] <Zoffix> Oh it did report it... never mind :)

[22:49] <Zoffix> I think that tells me I should call it a day :D

[22:51] <nadim> if we lived in house without windpws we would't know if it was day or night anymore

[22:52] <nadim> Zoffix: just before you leave, giveen that I have an object, I want to get an undefined object out of it. the meta class. how do I do that?

[22:53] *** dwarring joined
[22:53] *** sherwool joined
[22:53] *** MasterDuke joined
[22:54] <Zoffix> nadim: I've no idea what you mean... Do you mean the type object or the meta class?

[22:54] <Zoffix> m: say WHAT 42

[22:54] <camelia> rakudo-moar da4a0f: OUTPUT: «(Int)␤»

[22:54] <Zoffix> m: say 42.HOW

[22:54] <camelia> rakudo-moar da4a0f: OUTPUT: «Perl6::Metamodel::ClassHOW.new␤»

[22:55] <nadim> does WHAT return a string or the meta object?

[22:56] <Zoffix> Neither. It returns the type object

[22:56] <andreoss> m: 1.WHAT.new

[22:56] <camelia> rakudo-moar da4a0f: ( no output )

[22:56] <andreoss> m: say 1.WHAT.new

[22:56] <camelia> rakudo-moar da4a0f: OUTPUT: «0␤»

[22:57] <nadim> thanks, let's see what I can do with tht :)

[22:57] *** skids joined
[22:59] <Zoffix> s/chicks/kicks/; # heh

[23:02] <Geth> ¦ modules.perl6.org: 6d00aeef99 | (Zoffix Znet)++ | assets/sass/main.scss

[23:02] <Geth> ¦ modules.perl6.org: Get rid of page shift "bug"

[23:02] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6d00aeef99

[23:03] *** Ven joined
[23:03] *** Ven is now known as Guest47023

[23:08] *** Guest47023 left
[23:09] *** Celelibi left
[23:10] <andreoss> modules.perl6.org is 500

[23:11] *** Celelibi joined
[23:17] *** pharv left
[23:18] *** rackstrawe joined
[23:19] *** pharv joined
[23:19] *** DethronedAngel__ joined
[23:19] *** astj joined
[23:20] <rackstrawe> In the statement "while $++ > 5 { .say }", what does the construction "$++" do, and how is it parsed?

[23:20] *** rindolf left
[23:20] *** eater[sha2017] joined
[23:21] *** Teaa left
[23:21] <jnthn> Parsed ($)++ which is short for (state $)++

[23:22] <jnthn> That is, declaring an anonymous state variable

[23:22] <rackstrawe> thanks!

[23:23] *** rackstrawe left
[23:24] *** astj left
[23:25] *** andreoss left
[23:26] *** DethronedAngel__ left
[23:26] <sjn> Hey, it seems modules.perl6.org is down (500 server error)

[23:28] <MasterDuke> Zoffix: ^^^

[23:28] <sjn> build log says Received fatal error while building https://raw.githubusercontent.com/perl6/form/master/META6.json: Use of uninitialized value in string eq at lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p05DataFetcher.pm line 56.

[23:29] *** pochi left
[23:29] *** pharv left
[23:30] <sjn> starting from dist number 110 of 870

[23:36] *** andreoss joined
[23:36] <MasterDuke> i guess the content has no encoding set

[23:37] *** pochi joined
[23:38] *** cpage_ left
[23:42] *** cpage_ joined
[23:44] <zengargoyle> darn.

[23:44] <yoleaux> 20:50Z <Zoffix> zengargoyle: this fixes the MANIFEST in TODO issues you were having (fixes it as well as moves it to be only for `cpan` dist source): https://github.com/perl6/modules.perl6.org/commit/5db8ada712

[23:46] <zengargoyle> .tell rackstrawe and in 'say $++ while $++ < 5;' those are two different $ state varibles.  to me, they are *very* local and a bit tricky to undersand.

[23:46] <yoleaux> zengargoyle: I'll pass your message to rackstrawe.

[23:48] * zengargoyle doesn't get `cpan` dist source but it can wait.

[23:51] <zengargoyle> .tell Zoffix thanks for looking and i don't quite get what you mean.  but i think i'll just wait a while before i worry about CPAN integration stuff.

[23:51] <yoleaux> zengargoyle: I'll pass your message to Zoffix.

[23:52] <zengargoyle> it's not like i ever put p5 modules on CPAN either. :)  (yay DarkPAN)

[23:52] * Zoffix is back

[23:52] <yoleaux> 23:51Z <zengargoyle> Zoffix: thanks for looking and i don't quite get what you mean.  but i think i'll just wait a while before i worry about CPAN integration stuff.

[23:52] <Zoffix> sjn: looking into it

[23:54] * zengargoyle remembers my CPAN account/name is totally not ZENGARGOYLE.

[23:56] <Zoffix> sjn: it's back up

[23:57] <Zoffix> zengargoyle: I meant that the MANIFEST check no longer gets run for dists on github/gitlab; only for those from CPAN

[23:57] <Zoffix> And the glitch where it said there were no manifest when there was a manifest is gone too

[23:57] <Zoffix> But... looks like the NEWDB rebuild ain't working yet :\ wonder wtf

[23:59] <zengargoyle> oh, so it's like going to check CPAN for .tar.gz dists separate from git-ish links in the p6 ecosystem list-o-urls....?

[23:59] <Zoffix> CPAN urls won't be in list-o-urls

[23:59] <Zoffix> You just upload to CPAN

