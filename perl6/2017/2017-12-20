[00:12] <tyil> KotlinFan: on my machines

[00:12] *** Zoffix joined
[00:13] <Zoffix> KotlinFan: I use it for onelines all the time. Our dev bots are all in Perl 6. Also contemplating rewriting our large internal web app at work in Perl 6, though not sure when I'll get a chance to do so. Gonna use Cro. I hear it's popular: http://mi.cro.services

[00:13] <Hotkeys> I use it in codegolf and my advent of code solutions :)

[00:15] <Zoffix> Oh, cool. Edument has a course "Perl 6 for Programmers": https://edument.se/en/coursedetail/Perl-6-for-Programmers

[00:16] <KotlinFan> but Perl 5 still exists 

[00:16] <Zoffix> KotlinFan: yeah, it's a different language. Sorta like C and C++

[00:18] <KotlinFan> you know Kotlin language  : http://kotlinlang.org/ ?

[00:18] <Zoffix> First time hearing of it

[00:19] <Slayerk> KotlinFan is an obvious troll

[00:20] <Slayerk> wow didn't realise it's been more than 1 hour since his last post

[00:20] <Zoffix> What makes trolls obvious?

[00:21] <KotlinFan> just  comparing the hyped Kotlin language with Pearl 6

[00:21] <Slayerk> It's like that former US Supreme Court Judge once said

[00:21] <Slayerk> "I can't describe it, but when I see it I know it"

[00:21] <Zoffix> KotlinFan: looks nice. Too bad parens on function calls appear to be mandatory. I hate parens :D

[00:22] <Hotkeys> Zoffix++

[00:23] *** zacts joined
[00:23] <Zoffix> This is neat: https://try.kotlinlang.org/#/Examples/Delegated%20properties/Observable%20property/Observable%20property.kt

[00:23] <Zoffix> We sorta have it in the form of a Proxy.

[00:23] <Zoffix> oorrrr..

[00:24] <Zoffix> eco: Proxee

[00:24] <buggable> Zoffix, Proxee 'A more usable Proxy with bells': https://github.com/zoffixznet/perl6-Proxee

[00:24] <Zoffix> ^_^

[00:24] <KotlinFan> thanks Zoffix...I will have a look 

[00:25] <Zoffix> KotlinFan: yeah, flipping through those examples I see a bunch of similarities with what Perl 6 offers. So if you're a Kotlin Fan, you might enjoy Perl 6 too :)

[00:26] <KotlinFan> ok nice...I will really have a look on Pearl 6

[00:26] <Zoffix> \o/

[00:28] *** sena_kun left
[00:43] <Zoffix> [Coke]: this ever happen to you? Ran spelling test twice without making any changes, first time pass, second time fail: https://gist.github.com/zoffixznet/0883e2850ef93389456d4035e15203c1  And another run didn't show one misspelled word on first run; only did on others

[00:47] *** KotlinFan left
[00:51] <Zoffix> m: sub z($i) { await |$i }([(start {sleep 2;}, start { sleep 4; }), (start {sleep 2;}, start { sleep 3; })]); say now - INIT now

[00:51] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´0.004645‚ê§¬ª

[00:52] <Zoffix> ah, nm

[00:52] <Zoffix> Thought maybe there's a race somewhere in the Procs that I see missing spell words

[00:54] *** aborazmeh joined
[00:54] *** aborazmeh left
[00:54] *** aborazmeh joined
[00:55] <Slayerk> Night all

[00:55] *** Slayerk left
[00:56] <Zoffix> Or maybe that is it. Why doesn't this wait 4 seconds?

[00:56] <Zoffix> m: sub z($i) { await |$i }; [(start {sleep 2;}, start { sleep 4; }), (start {sleep 2;}, start { sleep 3; })].map: { z $_ }; say now - INIT now

[00:56] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´0.0046257‚ê§¬ª

[00:56] <Zoffix> Night

[00:56] <Zoffix> Slayer

[00:57] <Zoffix> m: sub z($i) { await |$i }; [(start {sleep 2;}, start { sleep 4; }), (start {sleep 2;}, start { sleep 3; })]¬ª.<>.flat.map: { z $_ }; say now - INIT now

[00:57] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´4.0170170‚ê§¬ª

[00:57] <Zoffix> This waits. Somethings offcolour with the await sub

[00:58] *** troys is now known as troys_

[01:01] <mspo> off color remarks you say

[01:01] *** astj joined
[01:02] <mspo> to pieces you say

[01:02] <mspo> to shreds you say

[01:04] *** Actualeyes left
[01:04] <Geth> ¬¶ doc: b71dffa07b | (Zoffix Znet)++ | xt/aspell.t

[01:04] <Geth> ¬¶ doc: Fix incorrect awaition of results

[01:04] <Geth> ¬¶ doc: 

[01:04] <Geth> ¬¶ doc: Fixes flops on spelling tests

[01:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b71dffa07b

[01:04] <Zoffix> [Coke]: nm, it was just a bug in the test: https://github.com/perl6/doc/commit/b71dffa07b

[01:05] *** astj left
[01:05] *** astj joined
[01:09] *** cdg joined
[01:11] <Zoffix> Ah, it's actually an eagerness bug(?) in one of await() candidates

[01:11] <Zoffix> m: multi sub z(Iterable:D $i) { $i.eager.map: { z $_ } }; multi sub z(*@z) { say "there" }; z ([<a b c>], [<a b c>]),

[01:11] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´¬ª

[01:11] <Zoffix> oh wait, nm

[01:11] <Zoffix> ZofBot: never you mind!

[01:11] <ZofBot> Zoffix, I recently also found that not HLLizing yourself, makes code faster

[01:12] <Zoffix> Oh wait, yeaj

[01:12] <Zoffix> m: multi sub z(Iterable:D $i) { say "here"; $i.map: { z $_ } }; multi sub z(*@z) { say "there" }; z ([<a b c>], [<a b c>]),

[01:12] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´here‚ê§here‚ê§here‚ê§¬ª

[01:12] <Zoffix> m: multi sub z(Iterable:D $i) { say "here"; eager $i.map: { z $_ } }; multi sub z(*@z) { say "there" }; z ([<a b c>], [<a b c>]),

[01:12] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´here‚ê§here‚ê§there‚ê§there‚ê§there‚ê§here‚ê§there‚ê§there‚ê§there‚ê§¬ª

[01:12] <Zoffix> a bug with .map sinkage prolly actually

[01:13] *** cdg left
[01:14] *** pilne joined
[01:19] *** ecocode left
[01:19] <Zoffix> nm, no bug (well, one in &await(Iterable:D)`

[01:19] <Zoffix> A trap really:

[01:19] <Zoffix> m: <foo bar ber>.map: *.say

[01:19] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´foo‚ê§bar‚ê§ber‚ê§¬ª

[01:19] <Zoffix> m: <foo bar ber>.map: *.comb.map: *.say

[01:19] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´¬ª

[01:22] <Zoffix> Filed D##1718

[01:22] <Zoffix> Filed D#1718

[01:22] <synopsebot> D#1718 [open]: https://github.com/perl6/doc/issues/1718 [LHF] Traps candidate? Sinkage of maps

[01:22] *** Zoffix left
[01:26] *** ecocode joined
[01:26] *** comborico1611 left
[01:38] *** lookatme joined
[01:39] <lookatme> o/

[01:45] *** someuser left
[01:45] *** Sgeo_ joined
[01:45] *** someuser joined
[01:47] *** Sgeo left
[02:08] *** manchicken left
[02:10] *** Cabanossi left
[02:12] *** Cabanossi joined
[02:15] *** Actualeyes joined
[02:17] *** adu joined
[02:23] *** pilne left
[02:34] <tbrowder> hi, lookatme!

[02:35] <lookatme> hi

[02:35] <adu> hi

[02:36] <Hotkeys> hi

[02:37] <adu> is anyone going to say anything else?

[02:37] *** itaipu left
[02:38] <tyil> hi

[02:38] <adu> lol

[02:38] <tyil> the advent post is late today :(

[02:41] *** vichib joined
[02:41] *** Cabanossi left
[02:42] *** Cabanossi joined
[02:46] *** ilbot3 left
[02:49] <lookatme> lol

[02:50] *** Zoffix joined
[02:52] <Zoffix> tyil: https://perl6advent.wordpress.com/2017/12/19/day-20-advancements-in-macrotechnologies/

[02:53] <Zoffix> .tell Ven your post was still listed as a draft, 3hr past midnight. Based on https://irclog.perlgeek.de/perl6/2017-12-19#i_15600534 I assumed that was a mistake and published the post. I hope it was ready üòì

[02:53] <yoleaux> Zoffix: I'll pass your message to Ven.

[02:54] *** aborazmeh left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[03:00] *** wamba left
[03:02] *** adu left
[03:06] <[Coke]> Zoffix: nope, haven't that particular spelling failure mode. :(

[03:06] <[Coke]> Zoffix++

[03:07] <[Coke]> I am working on the code for my post now.

[03:08] <lookatme> why day-20-advancements-in-macrotechnologies is under 2017/12/19

[03:10] <[Coke]> Style comments welcome: https://gist.github.com/coke/2ceeca4f480800512fb14b565bbae6fd (incomplete)

[03:10] <Zoffix> FWIW all the warnings from compilation makes it hard to find where proper errors are at: https://temp.perl6.party/snapshot2.png

[03:11] *** Cabanossi left
[03:11] <Zoffix> lookatme: fixed https://perl6advent.wordpress.com/2017/12/20/day-20-advancements-in-macrotechnologies/

[03:12] <Zoffix> It might be a glitch with WP 'cause I'm still in timezone that's in 19th. Published date showed 23:00 of 19th

[03:12] *** Cabanossi joined
[03:13] <[Coke]> Cube::Three.new().R.U2.R º.U º.R.U º.R º.L º.U2.L.U.L º.U.L leaves the cube in the correct config, yay.

[03:13] <Geth> ¬¶ doc: f49cadb3d5 | (Zoffix Znet)++ | 3 files

[03:13] <Geth> ¬¶ doc: Fix typos

[03:13] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f49cadb3d5

[03:13] <lookatme> oh

[03:13] <mspo> WP has gmtime and the blog's local time

[03:14] <mspo> I don't think it talks about *your* tz at all?

[03:14] <Zoffix> IME it's UI uses GMT in some places and local TZ in other places.

[03:14] <Zoffix> *its

[03:17] <Zoffix> releasable6: release

[03:17] <releasable6> Zoffix, Next release will happen when it's ready. No blockers. 0 out of 133 commits logged

[03:17] <releasable6> Zoffix, Details: https://gist.github.com/53f53659173238574a8b13bac11ad6ce

[03:17] <Zoffix> m: "/tmp/foo".IO.spurt: "abc"; with "/tmp/foo".IO.open { .seek: 3, SeekFromBeginning; .read(3).say; .read(3).say; .eof.say }

[03:17] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´Buf[uint8]:0x<>‚ê§Buf[uint8]:0x<>‚ê§True‚ê§¬ª

[03:17] <Zoffix> m: "/tmp/foo".IO.spurt: "abc"; with "/tmp/foo".IO.open { .seek: 4, SeekFromBeginning; .read(3).say; .read(3).say; .eof.say }

[03:17] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´Buf[uint8]:0x<>‚ê§Buf[uint8]:0x<>‚ê§False‚ê§¬ª

[03:17] <Zoffix> fun :)

[03:19] <Zoffix> See the fix, but gonna keep it in my head. In syncfile.c -> mvm_eof the check is statbuf.st_size == seek_pos but should be statbuf.st_size <= seek_pos, for cases where we seeked past end

[03:19] <Zoffix> *keep until past release I meant

[03:20] <Zoffix> Ad after that's fixed the check for zero-size chunks can go away here: https://github.com/rakudo/rakudo/commit/dc800d893349540b8d9a79e5c48e49ce8a11f6ae#diff-3c4e4507ba92d2e8db72990d1d4aa83dR240

[03:20] <Zoffix> wc

[03:20] *** Zoffix left
[03:27] <Morfent> so rakudo 2016.10 installs fine on openbsd ignoring the difficulty with getting java installed

[03:28] <Morfent> but it has the same problem with dns resolution as freebsd has

[03:30] <Morfent> nqp itself installs fine, it's just the jdk that's awkward to install

[03:36] *** astronavt joined
[03:44] <Morfent> i'm thinking there might be a difference between gnu and bsd's implementations of getdomainname that might be screwing things up

[03:45] *** Rawriful left
[03:45] <Morfent> that's more a moarvm thing though

[03:57] *** SCHAPiE left
[04:04] *** SCHAPiE joined
[04:09] *** piojo left
[04:15] *** Actualeyes left
[04:28] *** Herby_ joined
[04:28] <Herby_> o/

[04:31] *** agwind joined
[04:33] <Herby_> \o

[04:39] <Geth> ¬¶ doc: da5a52a6ba | (Zoffix Znet)++ | 2 files

[04:39] <Geth> ¬¶ doc: Fix nbsp xtest issues

[04:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/da5a52a6ba

[04:41] *** Cabanossi left
[04:42] *** Cabanossi joined
[04:50] *** troys_ is now known as troys

[04:55] *** Cabanossi left
[04:55] *** astronavt left
[04:56] *** Cabanossi joined
[05:02] *** agwind left
[05:03] *** agwind joined
[05:25] *** agwind left
[05:27] *** aindilis left
[05:28] *** aindilis joined
[05:30] *** troys is now known as troys_

[05:37] *** khw left
[05:41] *** Herby_ left
[05:46] *** AlexDaniel left
[05:52] *** troys_ is now known as troys

[06:08] *** Cabanossi left
[06:09] *** cdg joined
[06:11] *** Cabanossi joined
[06:14] *** cdg left
[06:27] *** geospeck joined
[06:30] *** geospeck left
[07:05] *** darutoko joined
[07:09] *** Cabanossi left
[07:11] *** Cabanossi joined
[07:12] <nine> m: say <what>

[07:12] <evalable6> nine, rakudo-moar 334b87226: OUTPUT: ¬´what‚ê§¬ª

[07:13] <nine> moritz: was probably some network issue?

[07:15] <moritz> nine: possibly. I'm restarting camelia now, and hope she re-joins

[07:18] *** piojo joined
[07:19] *** lowbro joined
[07:19] *** lowbro left
[07:19] *** lowbro joined
[07:19] <piojo> I found something wrong with the way perl6 executes subprocesses on windows.

[07:19] <piojo> Almost every command I've tried is failing. For example, this gives no output: perl6 -e "shell 'python -c \"print(4)\"'"

[07:21] <piojo> And simple stuff like shell('perl -e "use v5.18;"') gives a bad exit code.

[07:22] <piojo> (Actually, that one fails with a different error--"Can't find string terminator '"' anywhere before EOF at -e line 1."

[07:22] *** astj left
[07:22] *** wamba joined
[07:22] <piojo> ). I think rakudo must be trying to do Bash shell quoting in CMD

[07:23] <nine> piojo: do those examples work when you put them into scripts or execute them from the REPL?

[07:23] *** astj joined
[07:23] <piojo> nine: I believe they also fail in scripts, because I noticed this due to Perl5::Inline having a related build failure

[07:24] <piojo> And these commands work when typed on the command line without being invoked by rakudo.

[07:24] *** astj left
[07:24] *** astj joined
[07:25] <piojo> But the "Can't find string terminator" error is exactly what happens if I try to run a command with 'an argument' instead of "an argument"

[07:27] <piojo> so I'm pretty sure illegal quoting is the problem, or at least part of it. I think this worked a few months ago

[07:27] <piojo> any idea what logic handles shell quoting?

[07:27] <nine> I know Inline::Perl5's installation worked on Windows at one time at least.

[07:30] <piojo> qx fails the same way

[07:30] *** troys left
[07:33] *** domidumont joined
[07:35] *** cdg joined
[07:40] *** domidumont left
[07:40] *** cdg left
[07:40] *** domidumont joined
[07:40] *** espadrine left
[07:49] *** Hotkeys left
[07:55] *** ZzZombo left
[07:57] *** ZzZombo joined
[08:11] *** cdg joined
[08:12] *** brakmic joined
[08:16] *** cdg left
[08:18] *** nightfrog left
[08:19] *** sena_kun joined
[08:22] *** wamba left
[08:24] *** rindolf joined
[08:24] *** Cabanossi left
[08:26] *** Cabanossi joined
[08:40] *** itaipu joined
[08:44] <lookatme> piojo, the string terminator is CMD's problem, I think

[08:44] <piojo> lookatme: that's taking "not my problem" to a whole new level :P

[08:45] <piojo> "not a bug, just use bash"

[08:46] <lookatme> Is Perl6 has a shortcut start Perl6 REPL like Python ??

[08:46] <jast> just run 'perl6'

[08:46] <lookatme> :) No, user don't want open a cmd, just want click it

[08:47] <jast> then make a shortcut that runs perl6

[08:47] <lookatme> This is Windows logical :)

[08:54] *** pdcawley joined
[09:04] *** domidumont1 joined
[09:07] *** domidumont left
[09:11] *** riceandbeans joined
[09:11] <riceandbeans> what's the difference between rakudo and perl6?

[09:12] <riceandbeans> I thought rakudo was just a jvm implementation of it and now I'm reading you can have a backend that is C based and that one was written specifically for rakudo perl6 so I'm wondering what differs

[09:12] <lookatme> Perl6 is a language, like Python

[09:13] <lookatme> rakudo like CPython

[09:13] <lookatme> or other Python

[09:13] <riceandbeans> OK, but then where do you fit in MoarVM

[09:13] *** lookatme left
[09:13] <riceandbeans> :(

[09:15] *** pdcawley left
[09:23] *** Cabanossi left
[09:26] *** Cabanossi joined
[09:28] *** dakkar joined
[09:40] * masak just found the concept https://en.wikipedia.org/wiki/Muntzing which is similar in spirit to bug golfing

[09:42] *** domidumont joined
[09:44] *** domidumont2 joined
[09:44] *** pmurias joined
[09:45] *** domidumont1 left
[09:45] <pmurias> riceandbeans: rakudo can target both JVM and MoarVM

[09:46] *** eliasr joined
[09:46] <El_Che> pmurias: add js to the moarvm mix :)

[09:46] <riceandbeans> When was non jvm support added, but still how does rakudo differ from whatever perl6 guideline

[09:46] <riceandbeans> I don't remember the term used, but I remember reading a perl6 has to do this and that and anything that does this and that is a perl6

[09:47] <El_Che> spec tests?

[09:47] <El_Che> test suite?

[09:47] *** domidumont left
[09:47] <riceandbeans> maybe I'm not making sense

[09:48] <pmurias> riceandbeans: Perl 6 is the language, Rakudo is the implementation

[09:48] <riceandbeans> how does the rakudo implementation of perl6 differ from any others

[09:48] *** Ven` joined
[09:48] <pmurias> riceandbeans: other implemantations are as far as I know mostly not actively developed

[09:49] <pmurias> riceandbeans: Perl6 is Python, Rakudo is  CPython and Jython

[09:49] <Ven`> o/

[09:49] <riceandbeans> right right it's just weird because of the varied backends and it being the only one

[09:49] <Ven`> Zoffix: very sorry about that. Since I had set a "release at", I thought "publish" would instead publish it immediately... Oops.

[09:50] <pmurias> riceandbeans: it makes sense to reuse the frontend

[09:50] <riceandbeans> why not just call it perl6?

[09:51] <riceandbeans> Maybe I'm just dumb, I think it's confusing

[09:52] <riceandbeans> Like with Ruby when I had to figure out what happened when they had MRI and merged YARV with it

[09:53] <Ven`> riceandbeans: because when you say "I'm using Ruby" you can't really know if it's MRI, MRB, JRuby, Rubinius, ...

[09:54] <El_Che> riceandbeans: the idea is to leave to door open for alternative implementations

[09:55] <riceandbeans> what was the last attempt at one?

[09:56] <masak> Ven++ # https://perl6advent.wordpress.com/2017/12/20/day-20-advancements-in-macrotechnologies/

[09:57] <masak> current status about infix:<ff> -- it sits in a branch, and it's "one failing test from being merged"

[09:57] <masak> but behind that test is an unexpected host of conceptual challenges that I'm currently grappling with

[09:58] <El_Che> riceandbeans: https://en.wikipedia.org/wiki/Perl_6#Historical_implementations

[09:58] <masak> I have a solution, but I feel a bit like the pirate chief who enters a deal with higher powers without fully understanding the consequences

[09:59] <masak> Ven`: in order to address lizmat++'s (and possibly others') confusion in the backlog, maybe add `# 007 code` at the top of the top code snippet?

[10:00] *** parv joined
[10:03] <Ven`> Fair enough :-).

[10:09] *** scimon joined
[10:09] <masak> oh, I meant as a *comment* *in* the code snippet

[10:09] <masak> sorry, backseat editing is Hard‚Ñ¢

[10:10] <Ven`> I know you did, but I think it's fine that way, isn't it?

[10:10] <El_Che> masak: you're doing fine :)

[10:10] <masak> on the hypothesis that people skim sometimes, and the eye seeks out the first non-para thing

[10:10] <masak> at least mine do

[10:11] <masak> by the way, I realized far too late in 007's trajectory that the examples/ directory shouldn't be filled with fluff like fizzbuzz.007 :P

[10:11] <moritz> masak: git rm or git mv can help :-)

[10:12] <masak> it's one of those growth effects. the fizzbuzz example was impressive in 2016, when we were still fleshing out the basic language. less so in late 2017, when we're racing towards full macro capability.

[10:12] <masak> moritz: aye; the plan is to phase out the old examples gradually as we land real macro examples

[10:12] <riceandbeans> well, let's see if rakudo compiles for me

[10:12] <El_Che> git mv examples fluff; mkdir example

[10:13] <masak> hah

[10:13] <masak> we're pretty good at testing the examples -- and those tests are very usefull because they exercise the language

[10:13] <masak> I've decided that the old examples get to survive as such tests

[10:13] <masak> but yes, maybe renamed as "fluff" or similar

[10:33] *** domidumont joined
[10:36] *** domidumont2 left
[10:36] *** Cabanossi left
[10:54] *** Actualeyes joined
[11:01] <piojo> masak: IMO we don't test examples in modules nearly enough

[11:02] <piojo> I mean external files. Not necessarily modules.

[11:05] *** Cabanoss- joined
[11:09] *** Cabanoss- is now known as Cabanossi

[11:10] *** cdg joined
[11:14] *** cdg left
[11:15] *** Zoffix joined
[11:15] *** Hotkeys joined
[11:15] *** araraloren joined
[11:15] <Zoffix> nine: camelia is still not back. Note that when you ran `m: say <what>` it was the backup evalable6 bot that responded, not camelia

[11:19] <sjn> .u ÓÉø 

[11:19] <yoleaux> No characters found

[11:19] <sjn> huh

[11:19] <Zoffix> piojo: "that's taking "not my problem" to a whole new level :P"   it's more of taking a hard problem that doesn't seem to have a single solution: https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/

[11:20] <Zoffix> piojo: it even affects run() with $*EXECUTABLE on windows, because it's a .bat file that uses cmd.exe and so needs cmd.exe's special quoting: RT#132258

[11:20] <synopsebot> RT#132258 [new]: https://rt.perl.org/Ticket/Display.html?id=132258 [SECURITY][WINDOWS] `run "perl6" ...` can be made to execute shell commands

[11:21] *** domidumont left
[11:21] <piojo> Zoffix: thanks, that will be an interesting read. BTW, I just bisected it and reported it: https://github.com/rakudo/rakudo/issues/1325

[11:22] *** Cabanossi left
[11:22] <piojo> Zoffix: I use cygwin, and I completely bypass perl6.bat, because frankly it's rubbish

[11:22] <piojo> (It might not be its fault--I shouldn't judge)

[11:23] *** Cabanossi joined
[11:23] <Zoffix> There was also this R#1306

[11:23] <synopsebot> R#1306 [closed]: https://github.com/rakudo/rakudo/issues/1306 [RFC] [RFC] add Proc/Proc::Async arg quoting modifiers

[11:23] <piojo> but a cygwin rakudo wrapper can handle any type of arguments, whereas the included perl6.bat can't

[11:24] *** Cabanoss- joined
[11:27] <nine> Zoffix: looks like packages from the outside don't make it back to virbr0, so the VM never gets them

[11:27] <Zoffix> piojo: so you're using Cygwin with the R#1325? May be worth mentioning. Also, mention the Rakudo version you're using

[11:27] <synopsebot> R#1325 [open]: https://github.com/rakudo/rakudo/issues/1325 Shell quoting is wrong on Windows

[11:28] <riceandbeans> my rakudo-test failed :\

[11:28] <piojo> Zoffix: I reproduced using CMD, for cleanest results

[11:28] *** Cabanossi left
[11:28] *** Cabanoss- is now known as Cabanossi

[11:28] *** wamba joined
[11:31] <Zoffix> riceandbeans: what OS are you using? Also, what are you building?

[11:31] <Zoffix> piojo: but you'd need proper quoting for CMD.exe, wouldn't you?

[11:33] <Zoffix> piojo: I get the same sort of issues when I put qx/perl -e "say 42"/ in a script and run it with perl 5

[11:33] <piojo> Zoffix: I meant my comment about the "perl6.bat" argument handling in relation to one of the other links you mentioned. that seems like a windows batch programming bug, not a perl issue at all

[11:35] <piojo> Zoffix: It works for me. It should be: print qx/perl -E "say 42"/

[11:36] <Zoffix> Ah

[11:37] <Zoffix> Yeah, works for me too

[11:43] <riceandbeans> Zoffix: DragonFly BSD

[11:44] <riceandbeans> Zoffix: just followed the steps on building

[11:47] <piojo> Zoffix: the least wrong solution is to let the user decide how to quote, and pass the string verbatim to CMD

[11:47] <piojo> i.e., apply no additional substitution or logic.

[11:48] <piojo> I think we can do better, but that's the easy correct solution. Unless I'm missing a detail of how CMD is invoked.

[11:49] *** cpage_ joined
[11:49] *** nightfrog joined
[11:50] <Zoffix> riceandbeans: I don't think we have any volunteers currently actively ensuring builds work on BSDs, but you could report your issue, along with full output of failures, so someone could take a look: https://github.com/rakudo/rakudo/issues/new

[11:56] <El_Che> it builds on osx, so other bsd flavours should work, no?

[11:56] <riceandbeans> it's not quite like linux where the 'flavours' are related

[11:57] <riceandbeans> with linux it's the same kernel, just different versions and different userland tools on top

[11:57] <El_Che> darwin was based on freebsd, I thought

[11:57] <riceandbeans> with the BSDs the kernels are different in each one, the userlands are different in each, and nothing is inherently compatible from one to the other, they share common ancestry

[11:58] <Zoffix> AlexDaniel`: "<AlexDaniel> fwiw branches are cheap so this shouldn't be stopping anyone from committing (not to master tho)". On personal experience, it ain't that cheap. It's branches on 4 different repos + you either can't ver bump or have to suffer through merge conflicts. Currently, I can't be arsed to go through this. My 2 cents.

[11:58] *** philomath_ joined
[11:58] <lizmat> Ven`: looks like some <ff> are missing from your blogpost ?

[11:59] <riceandbeans> darwin took parts from various BSDs at various versions over time, a fair amount from freebsd, but it is its own kernel

[11:59] <lizmat> Ven` : shouldn't "macro infix:(lhs, rhs)" be "macro infix:<ff>(lhs, rhs)" ???

[11:59] <AlexDaniel`> Zoffix: ok point taken. Sorry for the delay :)

[11:59] <riceandbeans> osx binaries aren't abi compatible with freebsd

[12:00] <Ven`> lizmat: fixed

[12:00] <parv> riceandbeans, 1 test has been failing consistently on FreeBSD 11. I had filed a bug report on Github.

[12:00] <riceandbeans> anyway, I'm kind of passing out it's like 4am here I'll file an issue later

[12:00] <Ven`> seems like the MD converter kept that as <ff>, and wp removed it...

[12:00] <riceandbeans> parv: I'll look intoi t more when I'm more awake

[12:00] <parv> ok. for ref: https://rt.perl.org/Public/Bug/Display.html?id=131237

[12:01] <parv> ok filed not on Github but on RT

[12:01] <riceandbeans> well, before I lay down parv , t/05-messages/02-errors.t ................... Failed 1/1 subtests

[12:01] *** cpage_ left
[12:02] <parv> riceandbeans, that's different than mine (t/04-nativecall/02-simple-args.t line 62)

[12:02] <Zoffix> AlexDaniel`: it might be fairly easy if the dev just keeps master HEAD of all rakudo/nqp/MoarVM like timotimo does and builds stuff separately but I don't know how to do this :o

[12:02] <piojo> Zoffix: I'm now thinking we shouldn't quote/escape/modify shell() args at all, because it's convoluted. First we would need to parse it into individual arguments, then re-package them as a properly formatted string. But that goes against the whole point of what shell() claims to do.

[12:03] <piojo> shell() is supposed to let the shell do all the parsing.

[12:03] <Zoffix> piojo: would be good to have comments on the ticket so others could read them too :)

[12:03] <piojo> good point, thanks

[12:04] <parv> rest, riceandbeans. I am going to too

[12:06] * Zoffix &

[12:06] *** Zoffix left
[12:06] *** parv left
[12:11] *** mahafyi joined
[12:11] <AlexDaniel`> sjn: use u: instead of .u :)

[12:11] <AlexDaniel`> u: ÓÉø

[12:11] <unicodable6> AlexDaniel`, U+E0FF <Private Use-E0FF> [Co] (ÓÉø)

[12:20] *** philomath_ left
[12:31] <stmuk> parv: I thought I'd seen a full PASS on FreeBSD since Apr but will check

[12:33] *** ZzZombo left
[12:34] *** ZzZombo joined
[12:44] *** squashable6 left
[12:44] *** reportable6 left
[12:44] *** unicodable6 left
[12:44] *** greppable6 left
[12:44] *** benchable6 left
[12:44] *** squashable6 joined
[12:44] *** reportable6 joined
[12:44] *** ChanServ sets mode: +v reportable6

[12:44] *** greppable6 joined
[12:44] *** unicodable6 joined
[12:44] *** ChanServ sets mode: +v unicodable6

[12:44] *** benchable6 joined
[12:45] <perlawhi1l> hrm

[12:45] <perlawhi1l> hi perlers

[12:45] <perlawhi1l> can I do sets of lists?

[12:45] <perlawhi1l> m: say Set((0, 1), (1, 1), (1, 2)) (|) Set((1, 1), (2, 1), (2, 2))

[12:45] <evalable6> perlawhi1l, rakudo-moar 334b87226: OUTPUT: ¬´set(0 1 2)‚ê§¬ª

[12:46] <perlawhi1l> setops (eg. ‚à™ ) seem to work fine with typed Hashes (ie. %set{List})... can I Type my sets?

[12:50] <perlawhi1l> scratch that... typed Hashes ain't working. So... how can i do List Sets?

[12:51] <perlawhi1l> I guess... I can... stringify my Lists for the keys :/

[12:53] <moritz> lists are not value types (they are lazy), so they make terrible hash or set keys

[12:54] *** cpage_ joined
[12:56] *** philomath_ joined
[12:56] *** domidumont joined
[12:57] <perlawhi1l> hmm, yeah... i just found some relevant discussion

[12:57] <perlawhi1l> https://irclog.perlgeek.de/perl6/2016-09-23#i_13260617

[12:57] <perlawhi1l> seems theres also the issue of how List's are compared

[12:58] <perlawhi1l> so... looks like stringifying my keys is the best option so far. perhaps we need a new 'FrozenList' type, lol

[12:59] <perlawhi1l> or is that ImmutableArray (an oxymoron in Perl 6 :D)

[13:00] <moritz> we might need a tupel type

[13:00] <moritz> we used to have Parcel that kinda, somewhat fit that niche

[13:00] <moritz> but it's been removed during the Great List Refactoring

[13:01] <perlawhi1l> as long as we as a community agree to saying it "tupple" and not "toople", i'm down

[13:01] <perlawhi1l> actually yeah! resurrecting Parcel would be a cool thing

[13:03] <moritz> it's tupper ware for memory!

[13:06] <lizmat> moritz: I have a patch for making Lists that consist of decontainerized values be a value type

[13:06] <perlawhi1l> oooooh

[13:06] <lizmat> but it has a few issues and it will be definitely post 2017.12

[13:06] <perlawhi1l> lizmat++

[13:06] <Ven`> lizmat++

[13:06] <perlawhi1l> that's cool... nice to know it's in the works

[13:06] <Ven`> having tooples sounds cool :D.

[13:07] <perlawhi1l> damnit Ven!

[13:07] <perlawhi1l> I bet you say "jif", too

[13:07] <lizmat> fwiw, I do think Lists and Arrays are a bit too conflated atm

[13:07] <stmuk> parv: roast has PASS but you are right t/04-nativecall/02-simple-args.t from moar tests has been failing on FreeBSD obviousily for some time

[13:08] <Ven`> perlawhi1l: I actually alternate between both pronunciations :P

[13:08] *** pmurias left
[13:08] <Ven`> just to confuse people

[13:08] *** pmurias joined
[13:08] <lizmat> .oO( you say tomato )

[13:09] <Ven`> it's a-boot time.

[13:10] <perlawhi1l> Parcel has such a perlish vibe to it... though, adding another Positional container isn't going to help the conflation issues lizmat mentioned

[13:12] *** Zoffix joined
[13:12] <Zoffix> "adding another Positional container isn't going to help the conflation issues".... So put it out into ecosystem as a module.

[13:13] <Zoffix> m: say Set($(0, 1), $(1, 1), $(1, 2)) (|) Set($(1, 1), $(2, 1), $(2, 2))

[13:13] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´set((0 1) (1 1) (1 1) (1 2) (2 1) (2 2))‚ê§¬ª

[13:13] <Zoffix> perlawhi1l: ^ they were just being all flattened in a slurpy

[13:14] <perlawhi1l> Zoffix++

[13:15] <Zoffix> m: my $l = (1, 1); say Bag($(0, 1), $l, $l, $(1, 1), $(2, 1), $(2, 2)){$l}

[13:15] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´2‚ê§¬ª

[13:16] <Zoffix> There's this problem, but it should be resolved by the patch lizmat++ mentioned

[13:16] <Zoffix> (would then give `3` as result there)

[13:17] *** cpage_ left
[13:27] <lizmat> hmmm... seems I misplaced the patch... 

[13:27] <lizmat> Ah, I realise what the problem was:  from the .WHICH of an object itself you cannot see whether something is a value type or not

[13:28] <lizmat> m: my $a = 42; say $a.WHICH   # disregards container here

[13:28] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: ¬´Int|42‚ê§¬ª

[13:28] <Zoffix> Ah

[13:29] <lizmat> m: my $a = (1,2,3); say $a[0].WHICH   # no container

[13:29] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: ¬´Int|1‚ê§¬ª

[13:29] <Zoffix> m: use nqp; -> \obj { my \z = nqp::istype(obj, Iterable) ?? obj !! obj.list; dd z }( :foo({:ber(80)}).Pair )

[13:29] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´(:foo({:ber(80)}),)‚ê§¬ª

[13:29] <lizmat> m: my $a = [1,2,3]; say $a[0].WHICH  # has container, but still disregarded

[13:29] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: ¬´Int|1‚ê§¬ª

[13:29] *** Hotkeys left
[13:29] <Zoffix> m: use nqp; -> \obj { my \z = nqp::istype(obj, Iterable) ?? obj !! obj.list; dd z }( (:foo({:ber(80)}),) )

[13:29] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´(:foo({:ber(80)}),)‚ê§¬ª

[13:29] <Zoffix> Same result, right?

[13:30] <Zoffix> m: dd gather { deepmap {.take}, (:foo{:80ber},) }

[13:30] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´(:foo({:ber(80)}),).Seq‚ê§¬ª

[13:30] <Zoffix> m: dd gather { deepmap {.take}, (:foo{:80ber}.Pair) }

[13:30] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´(:ber(80),).Seq‚ê§¬ª

[13:31] <Zoffix> Yet, different result here. It goes through here, so I'd thought based on first code above the result for the second code would be the same :S https://github.com/rakudo/rakudo/blob/4fca94743/src/core/Rakudo/Internals.pm#L1447-L1449

[13:32] *** ruschlem_ joined
[13:32] <Zoffix> Ooh, wait. No it doesn't go through there :P

[13:32] <Zoffix> The .Pair version goes through here: https://github.com/rakudo/rakudo/blob/4fca94743/src/core/metaops.pm#L652

[13:32] <lizmat> well, the coremap / deepmap / whatever map is still a bit of a hacky area of Rakudo, imo

[13:33] <Zoffix> Gonna try to add a `Pair` candidate, 'cause currently `gather { @meows¬ª.take }` breaks up Pairs into values, which is kinda sucky

[13:34] <Zoffix> m: dd gather { %(:42foo, :bar{:_{:_{:40meows}}})¬ª.take }

[13:34] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´(40, 42).Seq‚ê§¬ª

[13:34] <Zoffix> m: dd gather { (:42foo, :bar{:_{:_{:40meows}}})¬ª.take }

[13:34] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´(:foo(42), :bar({:_(${:_(${:meows(40)})})})).Seq‚ê§¬ª

[13:35] <lizmat> yeah, that difference feels wrong

[13:35] <lizmat> a hash should be an iterable of Pairs

[13:35] <Zoffix> mhm

[13:35] *** itaipu left
[13:35] *** philomath_ left
[13:35] <lizmat> not of values

[13:36] <lizmat> m: my %h = a => 42, b => 666; dd $_ for %h

[13:36] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: ¬´:a(42)‚ê§:b(666)‚ê§¬ª

[13:36] <lizmat> m: dd $_ for a => 42, b => 66

[13:36] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: ¬´:a(42)‚ê§:b(66)‚ê§¬ª

[13:37] <Zoffix> AlexDaniel`: actually, it's 6 repos, not 5 :) nqp + rakudo + MoarVM + roast + docs :)

[13:38] <AlexDaniel`> :)

[13:39] <Zoffix> I mean 5 repos not 4.

[13:39] <Zoffix> ZofBot: counting is hard. Let's go shopping.

[13:39] <ZofBot> Zoffix, But a strong man does need an occasional holiday, and I made up my mind that I would get it

[13:39] *** wamba left
[13:39] <Zoffix> You're having way too many holidays, robot.

[13:41] <pmurias> What do robots celebrate? Judgment Day?

[13:42] <Zoffix> Holy Robanukah

[13:42] <Zoffix> http://theinfosphere.org/Robanukah

[13:43] <moritz> Independence Day! :-9

[13:47] *** poohman joined
[13:48] <Zoffix> Man, &nodemap is document, but it has precisely 1 test for it in the spec: https://github.com/perl6/roast/blob/master/S03-metaops/hyper.t#L425

[13:48] <Zoffix> *documented

[13:48] *** itaipu joined
[13:50] <Zoffix> R#370

[13:50] <synopsebot> R#370 [closed]: https://github.com/rakudo/rakudo/pull/370 Main single positional

[13:50] <Zoffix> S#370

[13:50] <synopsebot> S#370 [open]: https://github.com/perl6/roast/issues/370 `nodemap` is virtually untested

[13:54] <Geth> ¬¶ doc: c625923d77 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Any.pod6

[13:54] <Geth> ¬¶ doc: Make `does` more palatable on a plural

[13:54] <Geth> ¬¶ doc: 

[13:54] <Geth> ¬¶ doc: Also make other linkable things in paragraph

[13:54] <Geth> ¬¶ doc: actual links readers could follow

[13:54] <synopsebot> Link: https://doc.perl6.org/type/Any

[13:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c625923d77

[13:54] *** |oLa| joined
[13:57] *** |oLa| left
[13:59] *** itaipu left
[14:04] *** itaipu joined
[14:06] *** pdcawley joined
[14:06] *** MasterDuke left
[14:06] *** wamba joined
[14:09] *** Rawriful joined
[14:12] *** Rawriful left
[14:13] *** ruschle75 joined
[14:13] *** ruschle75 left
[14:13] *** ruschle57 joined
[14:13] *** ruschle57 left
[14:14] *** ruschlem_ left
[14:14] *** ruschle20 joined
[14:14] *** ruschle20 left
[14:15] *** ruschlem_ joined
[14:15] *** ruschlem_ left
[14:15] *** ruschlem_ joined
[14:15] *** ruschlem_ left
[14:16] *** rindolf left
[14:16] *** ruschlem_ joined
[14:16] *** ruschlem_ left
[14:21] *** pdcawley left
[14:32] *** poohman left
[14:34] *** domidumont1 joined
[14:36] *** cdc joined
[14:37] *** Thrush joined
[14:37] *** domidumont left
[14:42] <Thrush> You know how:  $string = $string.flip;  can be shortened to:  $string .= flip; ?  Well, what would be the equivalent of a chain, like this:  $string = $string.lc.flip.tc.flip; ?

[14:43] <Zoffix> m: my $string = 'meows'; $string .= lc .= flip .= tc .= flip; say $string

[14:43] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´meowS‚ê§¬ª

[14:44] *** wamba left
[14:45] <Thrush> Thanks, Zoffix.  Is there a way for me to look at that so it seems more logical?  I just can't see how replacing all the '.' with '.=' would work.

[14:45] <Thrush> Zoffix:  Or rather, "should" work.

[14:46] <Zoffix> m: my $string = "meows"; $_ = .lc.flip.tc.flip with $string; say $string  # I'd write it like that tho

[14:46] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´meowS‚ê§¬ª

[14:47] <Zoffix> Thrush: picture the "." and ".=" as operators between a thing on the left and a method name on the right. If you write it as $string .= lc.flip.tc.flip you're saying "call .lc on $string and put it into $string, then on the result call the rest of the methods and discard that result"

[14:47] *** khw joined
[14:47] <Zoffix> $string .= lc.flip.tc.flip; is like ($string .= lc).flip.tc.flip

[14:48] *** geospeck joined
[14:49] *** samcv joined
[14:51] <geekosaur> this belongs in traps. or we should reconsider precedence somehow

[14:52] <Zoffix> Or alternatively: "." means "call method and return result"; ".=" means "call method and assign result back into original thing"; Then, $string .= lc.flip.tc.flip => "call lc and save result into original, then call flip and return result, call lc and return result and call flip and return result"

[14:53] *** grumble left
[14:55] <Thrush> Zoffix:  So what if I were to use:  $string .= lc.flip.=tc.flip ?  How would the mix of '.' and '.=' play out?

[14:56] *** jast left
[14:57] <Thrush> m: my $string = "meows"; $string .= lc.flip.=tc.flip; say $string;

[14:57] <evalable6> Thrush, rakudo-moar 334b87226: OUTPUT: ¬´(exit code 1) Cannot modify an immutable Str (swoem)‚ê§  in block <unit> at /tmp/HWWj9VqldU line 1‚ê§‚ê§¬ª

[14:57] <Zoffix> m: say '$string .= lc.flip.=tc.flip'.trans: [<. .=>] => ['call method and return result', 'call method and assign the value to LHS']

[14:57] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´$string call method and assign the value to LHS lccall method and return resultflipcall method and assign the value to LHStccall method and return resultflip‚ê§¬ª

[14:57] <Zoffix> m: say '$string .= lc.flip.=tc.flip'.trans: [<. .=>] => [' (call method and return result) ', ' (call method and assign the value to LHS) ']

[14:57] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´$string  (call method and assign the value to LHS)  lc (call method and return result) flip (call method and assign the value to LHS) tc (call method and return result) flip‚ê§¬ª

[14:57] <Zoffix> m: say '$string .= lc.flip.=tc.flip'.trans: [<. .=>] => [' (call method and return result) ', ' (call method and assign the value to LHS and return result) ']

[14:58] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: ¬´$string  (call method and assign the value to LHS and return result)  lc (call method and return result) flip (call method and assign the value to LHS and return result) tc (call method and return result) flip‚ê§¬ª

[14:58] <Zoffix> Thrush: ^ that'd happen :) And the error you saw above is because one of the assignments tries to assign the value into an immutable value returned by one of the methods

[14:58] *** jast joined
[14:58] * Zoffix &

[15:00] *** rindolf joined
[15:01] <Thrush> Zoffix:  Okay, thank you.  You've been a great help.

[15:02] *** piojo_ joined
[15:06] *** grumble joined
[15:11] *** Thrush left
[15:11] *** wamba joined
[15:22] *** brakmic left
[15:22] <Zoffix> \o/

[15:26] *** grumble left
[15:28] *** pmurias left
[15:29] *** pmurias joined
[15:31] <Geth> ¬¶ doc: 72e179f57a | (Elizabeth Mattijsen)++ | 2 files

[15:31] <Geth> ¬¶ doc: Document .skip(WhateverCode)

[15:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/72e179f57a

[15:33] * [Coke] realizes that there's no way he's going to finish this entire module by friday and instead concentrates on getting the blog post to a satisfying conclusion with what's available.

[15:34] * Zoffix perks up upon hearing that Friday is that close...

[15:34] *** comborico1611 joined
[15:34] <lizmat> [Coke]: would it help if we would switch slots ?

[15:34] <lizmat> aka 22 <-> 24

[15:35] *** grumble joined
[15:35] <[Coke]> lizmat: ... crap, that might give me enough time. :|\

[15:35] <lizmat> so is that a yes or a no ?

[15:35] *** brakmic joined
[15:35] <lizmat> :-)

[15:36] <[Coke]> Eh. I think it'll still be fine as is. if you give me more time, I will expand to fill it, and that's not necessarily good; I think we'll end up with a decent post.

[15:36] <[Coke]> I appreciate your kind offer, however.

[15:36] <lizmat> ok, well, let me know if you can't make the deadline anyway... I intend to finish mine tonight or early tomorrow

[15:37] <[Coke]> Roger.

[15:38] *** Zoffix left
[15:46] *** wamba left
[15:47] *** Ven` left
[15:47] *** gregf_ left
[15:47] *** dmaestro left
[15:49] *** geospeck left
[15:49] *** grumble left
[15:52] *** grumble joined
[15:54] *** Houl joined
[15:57] *** wamba joined
[15:58] *** troys joined
[16:01] *** domidumont1 left
[16:02] *** Ven` joined
[16:02] *** gregf_ joined
[16:02] *** dmaestro joined
[16:02] *** brakmic left
[16:05] *** piojo_ left
[16:06] *** araraloren left
[16:06] *** david_xd joined
[16:15] *** piojo_ joined
[16:19] <scimon> Mines all ready to go :) Looking forward to it.

[16:21] <moritz> \o/

[16:25] *** itaipu left
[16:30] <El_Che> boom

[16:30] *** pmurias left
[16:32] *** xinming joined
[16:35] *** piojo_ left
[16:45] *** khisanth_ left
[16:45] *** lowbro left
[16:46] *** itaipu joined
[16:48] *** pmurias joined
[16:51] *** poohman joined
[16:58] *** khisanth_ joined
[17:02] *** david_xd left
[17:03] * lizmat notes that Lock::Async is undocumented  :-(

[17:03] *** itaipu left
[17:11] *** philomath_ joined
[17:17] *** philomath_ left
[17:24] *** zakharyas joined
[17:32] *** scimon left
[17:34] *** dakkar left
[17:39] *** david_xd joined
[17:47] *** wamba left
[17:55] *** poohman left
[17:59] *** itaipu joined
[18:05] *** ExtraCrispy joined
[18:08] *** coverable6 left
[18:08] *** nativecallable6 left
[18:09] *** coverable6 joined
[18:09] *** nativecallable6 joined
[18:09] *** ChanServ sets mode: +v nativecallable6

[18:11] *** Morfent left
[18:20] *** darutoko left
[18:23] <Geth> ¬¶ doc: 3afac8fcc2 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[18:23] <Geth> ¬¶ doc: mark formats that are NYI

[18:23] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3afac8fcc2

[18:23] <synopsebot> Link: https://doc.perl6.org/language/pod

[18:23] *** daxim left
[18:23] <lizmat> https://tyil.nl/articles/funding-yourself-as-free-software-developer.html   # tyil++

[18:24] <lizmat> *and* at #2 at https://news.ycombinator.com

[18:25] *** mahafyi left
[18:36] *** itaipu left
[18:36] * [Coke] wonders if we have any developers using patreon or some other system.

[18:36] <[Coke]> perl in general, not just sixers.

[18:37] <lizmat> gabor maybe?  

[18:38] *** jast left
[18:38] *** ExtraCrispy left
[18:39] <[Coke]> lizmat: ah, https://www.patreon.com/szabgab

[18:43] *** itaipu joined
[18:44] *** domidumont joined
[18:44] *** jast joined
[18:51] <Geth> ¬¶ doc: 24fe425d27 | (Elizabeth Mattijsen)++ | doc/Type/Lock/Async.pod6

[18:51] <Geth> ¬¶ doc: First stab at documenting Lock::Async

[18:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/24fe425d27

[18:51] <synopsebot> Link: https://doc.perl6.org/type/Lock/Async

[18:53] <[Coke]> lizmat: why is Kept capitalized?

[18:54] <lizmat> m: my $p = Promise.new; $p.keep; say $p.status   # that's why, although it may be a poor reason

[18:54] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: ¬´Kept‚ê§¬ª

[18:57] *** troys is now known as troys_

[18:58] *** Actualeyes left
[18:58] <[Coke]> m: my $p = Promise.new; $p.keep; say $p.status.^name;

[18:58] <evalable6> [Coke], rakudo-moar 334b87226: OUTPUT: ¬´PromiseStatus‚ê§¬ª

[19:09] *** wamba joined
[19:13] *** itaipu left
[19:13] *** cdg joined
[19:18] *** domidumont left
[19:22] <timotimo> [Coke]: szabgab just recently posted on his blog about perl and patreon

[19:25] <tyil> [Coke]: yes, me :p

[19:26] <tyil> on the wondering if anyone uses patreon

[19:29] <[Coke]> tyil: URL?

[19:30] <tyil> https://www.tyil.nl/donate.html for the general page (exists since today), https://www.patreon.com/bePatron?c=1401236 for my patreon page

[19:31] <tyil> all feedback would be appreciated tbh

[19:34] <Geth> ¬¶ doc: b5a8a43e4b | (Elizabeth Mattijsen)++ | doc/Type/Telemetry/Sampler.pod6

[19:34] <Geth> ¬¶ doc: First stab at documenting Telemetry::Sampler

[19:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b5a8a43e4b

[19:34] <synopsebot> Link: https://doc.perl6.org/type/Telemetry/Sampler

[19:54] *** traxex joined
[19:56] <masak> +1 on lower-casing "kept" when it's used normally in a sentence ;)

[20:00] <Geth> ¬¶ doc: bce40f1b28 | (Elizabeth Mattijsen)++ | doc/Type/Lock/Async.pod6

[20:00] <Geth> ¬¶ doc: s/Kept/kept/ by popular demand

[20:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bce40f1b28

[20:00] <synopsebot> Link: https://doc.perl6.org/type/Lock/Async

[20:22] *** geospeck joined
[20:23] <Geth> ¬¶ doc: abbd0c9f73 | (Elizabeth Mattijsen)++ | doc/Type/atomicint.pod6

[20:23] <Geth> ¬¶ doc: Document atomic-(inc|dec)-fetch, aka ++‚öõ  and --‚öõ

[20:23] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/abbd0c9f73

[20:23] <synopsebot> Link: https://doc.perl6.org/type/atomicint

[20:26] *** bart_ joined
[20:29] *** AndChat|688961 joined
[20:29] *** comborico1611 left
[20:33] *** bart_ is now known as brrt

[20:36] *** troys_ is now known as troys

[20:40] *** AlexDaniel joined
[20:46] *** Houl left
[20:48] *** brrt left
[20:51] *** daxim joined
[20:52] *** david_xd left
[20:55] *** quotable6 left
[20:55] *** quotable6 joined
[20:55] *** brrt joined
[20:57] *** committable6 left
[20:57] *** committable6 joined
[20:57] *** ChanServ sets mode: +v committable6

[20:57] <AlexDaniel> should ‚Äúperl5‚Äù be written with nbsp? I thought it's a thing in perl¬†6 only

[20:58] *** bisectable6 left
[20:58] *** evalable6 left
[20:58] *** bloatable6 left
[20:58] *** statisfiable6 left
[20:58] *** releasable6 left
[20:58] *** bloatable6 joined
[20:58] *** ChanServ sets mode: +v bloatable6

[20:58] *** evalable6 joined
[20:58] *** ChanServ sets mode: +v evalable6

[20:58] *** bisectable6 joined
[20:58] *** releasable6 joined
[20:58] *** statisfiable6 joined
[21:00] <[Coke]> both, so that you never have a dangling Perl.

[21:01] *** armin left
[21:02] *** armin joined
[21:06] <lizmat> yup, that's the idea

[21:07] *** noganex_ left
[21:09] *** lancew joined
[21:11] <AlexDaniel> well, I usually write it as ‚ÄúPerl5‚Äù‚Ä¶ :)

[21:11] <AlexDaniel> don't want to offend anyone with unicode nbsp :)

[21:18] *** troys is now known as troys_

[21:21] *** [particle] left
[21:22] *** david_xd joined
[21:23] *** geospeck left
[21:27] *** lancew left
[21:31] *** zacts left
[21:38] *** [particle] joined
[21:45] *** noganex joined
[22:06] *** koto joined
[22:07] *** koto left
[22:07] *** sena_kun left
[22:09] *** troys_ is now known as troys

[22:11] *** zakharyas left
[22:25] *** jast left
[22:30] *** silug left
[22:31] *** jast joined
[22:33] *** zacts joined
[22:44] <Geth> ¬¶ doc: 8efd70fc03 | (Elizabeth Mattijsen)++ | doc/Type/Blob.pod6

[22:44] <Geth> ¬¶ doc: Document Blob.allocate

[22:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8efd70fc03

[22:44] <synopsebot> Link: https://doc.perl6.org/type/Blob

[22:55] <Geth> ¬¶ doc: a066bb9549 | (Elizabeth Mattijsen)++ | doc/Type/Buf.pod6

[22:55] <Geth> ¬¶ doc: Document Buf.reallocate

[22:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a066bb9549

[22:55] <synopsebot> Link: https://doc.perl6.org/type/Buf

[22:56] *** cdg left
[23:04] *** SHODAN left
[23:10] *** cdg joined
[23:14] <[Coke]> lizmat++ lotsadocsa.

[23:14] *** cdg left
[23:14] <lizmat> ADD   # Advent Driven Documentation  :-)

[23:22] *** lancew joined
[23:23] *** cdg joined
[23:25] *** konsolebox left
[23:27] *** cdg left
[23:29] *** brrt left
[23:32] *** konsolebox joined
[23:34] *** cdg joined
[23:41] *** Hotkeys joined
[23:42] *** lancew_ joined
[23:42] *** lancew__ joined
[23:42] *** lancew__ left
[23:43] *** pmurias left
[23:44] *** cdg_ joined
[23:45] *** cdg left
[23:50] *** Guest19 joined
[23:51] *** Guest19 left
[23:52] *** Guest19 joined
[23:52] *** Guest19 left
[23:53] *** lancew_ left
[23:53] <Geth> ¬¶ doc: 19ecebc1ec | (Zoffix Znet)++ | doc/Type/Array.pod6

[23:53] <Geth> ¬¶ doc: Revert "Revert "Document Array.gist""

[23:53] <Geth> ¬¶ doc: 

[23:53] <Geth> ¬¶ doc: This reverts commit 08c0b3656f24961a3df50e41c46fa254a29a87c9.

[23:53] <Geth> ¬¶ doc: 

[23:53] <synopsebot> Link: https://doc.perl6.org/type/Array

[23:53] <Geth> ¬¶ doc: Method got brought back:

[23:53] <Geth> ¬¶ doc: https://github.com/rakudo/rakudo/commit/08539c43d2

[23:53] <Geth> ¬¶ doc: https://github.com/perl6/roast/commit/5a0beb5afb

[23:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/19ecebc1ec

[23:53] *** mikowitz joined
[23:56] *** rindolf left
[23:59] *** cdg_ left
