[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 12 ballots submitted by 8 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 14! Congratulations to nine! You win a can of WD40!

[00:00] *** Rawriful left
[00:01] *** mcmillhj left
[00:01] *** snarkyboojum joined
[00:01] *** snarkyboojum left
[00:02] *** cpage_ joined
[00:07] *** cdg joined
[00:12] *** cdg left
[00:14] *** Cabanossi left
[00:17] *** Cabanossi joined
[00:23] *** MasterDuke joined
[00:25] *** mcmillhj joined
[00:32] *** snarkyboojum joined
[00:32] *** snarkyboojum left
[00:42] *** Sgeo joined
[00:44] *** mcmillhj_ joined
[00:44] <tony-o> Aaronepower: perl6 has enums

[00:44] *** Cabanossi left
[00:45] <tony-o> Aaronepower: https://docs.perl6.org/language/typesystem#enum

[00:46] <Aaronepower> m: enum Day( Monday => "Monday");

[00:46] <camelia> rakudo-moar d13572: ( no output )

[00:47] *** Cabanossi joined
[00:48] *** itaipu left
[00:49] <Aaronepower> tony-o: The solution you gave me earlier for classify doesn't work. I can't get the two arrays.

[00:49] *** mcmillhj_ left
[00:50] *** raschipi joined
[00:52] <raschipi> m: say "\c[ELF]"

[00:52] <yoleaux> 31 Aug 2017 20:20Z <jnthn> raschipi: Yes, but you must then configure it as HTTP/2 only (pass :http<2> to Cro::HTTP::Server). Having an endpoint doing HTTP/1.1 or HTTP/2.0 is the thing that requires TLS (because it uses ALPN to do the decision making).

[00:52] <camelia> rakudo-moar d13572: OUTPUT: «🧝␤»

[00:53] <tony-o> Aaronepower: my @j = [{ duration => 1 }, { x => 0 }]; my (@trues, @falses) := @j.classify({ $_<duration>:exists ?? True !! False }).values; @trues.say; @falses.say

[00:53] <tony-o> m: my @j = [{ duration => 1 }, { x => 0 }]; my (@trues, @falses) := @j.classify({ $_<duration>:exists ?? True !! False }).values; @trues.say; @falses.say

[00:53] <camelia> rakudo-moar d13572: OUTPUT: «[{duration => 1}]␤[{x => 0}]␤»

[00:53] <raschipi> m: say "\c[England]"

[00:53] <camelia> rakudo-moar d13572: OUTPUT: «🏴󠁧󠁢󠁥󠁮󠁧󠁿␤»

[00:53] *** Kyo91 joined
[00:54] <Aaronepower> tony-o: Ah I was missing .values. Thanks!

[00:54] <tony-o> np

[00:55] <Aaronepower> tony-o: Though my new question is how could I have ever known that I needed .values?

[00:55] <raschipi> m: 0xD4DB.chr

[00:55] <camelia> rakudo-moar d13572: ( no output )

[00:55] <raschipi> m: 0xD4DB.chr.say

[00:55] <camelia> rakudo-moar d13572: OUTPUT: «퓛␤»

[00:55] <raschipi> m: my @j = [{ duration => 1 }, { x => 0 }]; @j.classify({ $_<duration>:exists ?? True !! False }).^name

[00:55] <camelia> rakudo-moar d13572: ( no output )

[00:55] <raschipi> m: my @j = [{ duration => 1 }, { x => 0 }]; @j.classify({ $_<duration>:exists ?? True !! False }).^name.say

[00:55] <camelia> rakudo-moar d13572: OUTPUT: «Hash[Any,Any]␤»

[00:55] *** mcmillhj_ joined
[00:56] <raschipi> Because you can inspect the fact that you have a hash

[00:56] <Aaronepower> Actually this doesn't work.

[00:57] *** snarkyboojum joined
[00:57] <Aaronepower> If one of the sides doesn't have any it crashes the program with `Too few positionals passed to '<unit>'; expected 2 arguments but got 1`.

[00:57] <TimToady> um, note that .values can return the values in any order

[00:58] <tony-o> TimToady good point

[00:59] <raschipi> Better done with a hash slice, then?

[00:59] <ugexe> m: my @j = [{ duration => 1 }, { x => 0 }]; my (@trues, @falses) := @j.classify({ $_<duration>:exists ?? <trues> !! <falses> }); @trues.say; @falses.say;

[00:59] <camelia> rakudo-moar d13572: OUTPUT: «Too few positionals passed to '<unit>'; expected 2 arguments but got 0␤  in block <unit> at <tmp> line 1␤␤»

[01:00] <ugexe> m: my @j = [{ duration => 1 }, { x => 0 }]; my (:@trues, :@falses) := @j.classify({ $_<duration>:exists ?? <trues> !! <falses> }); @trues.say; @falses.say;

[01:00] <camelia> rakudo-moar d13572: OUTPUT: «[{duration => 1}]␤[{x => 0}]␤»

[01:00] *** mcmillhj_ left
[01:01] <TimToady> ugexe: and notably, those are optional, so fixes Aaronepower++'s missingness problem

[01:01] <Aaronepower> What is <trues>?

[01:02] <ugexe> the same as 'trues'

[01:02] <Aaronepower> ugexe: What is trues

[01:02] <TimToady> Aaronepower: notice the colons in that example particularly

[01:02] <TimToady> he's binding to named args

[01:02] <TimToady> so it solves your problem

[01:02] <Aaronepower> Interesting

[01:06] <TimToady> basically, it's taking a hash and pretending it's an argument list and seeing how it would bind to the parameters declared by the 'my'

[01:08] *** mcmillhj_ joined
[01:09] <TimToady> so it's not really arguments, and not really parameters, but it works anyway, because tagmemics :)

[01:11] *** mcmillhj left
[01:13] *** mcmillhj_ left
[01:13] *** u-ou- joined
[01:13] <u-ou-> back

[01:13] <yoleaux> 31 Aug 2017 23:56Z <skids> u-ou-: According to S04: "There is a C<when> statement modifier, but it does not have any breakout semantics; it is merely a smartmatch against the current topic."

[01:14] <u-ou-> ahhh

[01:15] <ugexe> m: (1..*).classify({1});

[01:15] <camelia> rakudo-moar d13572: OUTPUT: «Cannot classify a lazy list␤  in block <unit> at <tmp> line 1␤␤»

[01:16] <ugexe> m: my (:@a, :@b) := (1..*).classify({1});

[01:16] <camelia> rakudo-moar d13572: OUTPUT: «2 unexpected named arguments passed (backtrace,exception)␤  in block <unit> at <tmp> line 1␤␤»

[01:16] <ugexe> heh

[01:20] <TimToady> yah, objects call also pretend to be object lists...

[01:21] *** mcmillhj joined
[01:21] <TimToady> *can

[01:23] *** mcmillhj left
[01:23] *** mcmillhj joined
[01:23] <MasterDuke> TimToady: do you know anything about INTERPOLATE? i've been playing around with it, but have a question or two (some of which can be seen here https://irclog.perlgeek.de/moarvm/2017-08-29#i_15085184 if you're interested)

[01:25] <u-ou-> do you need to put all the fields in a class Foo repr('CStruct') or just some?

[01:26] <u-ou-> all the fields = all the fields in the original struct

[01:26] *** piojo joined
[01:28] *** eliasr left
[01:28] *** dogbert2 left
[01:28] <u-ou-> some meaning the ones you want to access too

[01:29] *** cdg joined
[01:33] *** cdg left
[01:34] *** Ven`` joined
[01:46] *** ilbot3 left
[01:47] *** imcsk8 left
[01:47] *** imcsk8 joined
[01:48] *** piojo left
[01:48] <TimToady> MasterDuke: the basic problem there is, I suspect, that we can't know that a variable hasn't changed what it holds, so the default is pessimal

[01:50] <TimToady> in the case of /(.*)$0/, the variable does change every time, for instance

[01:50] *** devmikey left
[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:52] <MasterDuke> ooooh, right. i hadn't thought about $0, $1, etc

[01:53] *** wamba left
[01:54] <MasterDuke> TimToady: hm, would that also mean what i'm trying to do here isn't possible? https://irclog.perlgeek.de/perl6-dev/2017-08-31#i_15098626

[01:55] <TimToady> it's possible if you can prove the variable doesn't change inside the regex

[01:55] <TimToady> unfortunately that's hard the moment you have a random block of code inside

[01:56] <MasterDuke> or return if index matches, but check again at the next position if it doesn't?

[01:56] *** Kyo91 left
[01:56] *** imcsk8 left
[01:56] *** imcsk8 joined
[02:00] <TimToady> well, anything resembling /.*$foo { $foo = mumble } <!bar> / is still gonna be a problem

[02:01] <TimToady> that is, partial success can still modify $foo and then fail

[02:03] <TimToady> even /.*$foo { mumble() } <!bar> / could modify $foo inside mumble if it has closed over $foo

[02:04] *** mcmillhj left
[02:04] <TimToady> I seem to recall that INTERPOLATE tries to do some simple caching, but I don't remember how effective it is

[02:07] <MasterDuke> hm, and that might not end up being any faster if you have to keep doing an index instead of an eqat

[02:08] <MasterDuke> TimToady: any way to know if the variable came from "outside" the regex? i.e., not a named capture or backreference or anything like that

[02:09] <TimToady> we might at least be able to do something with readonly scalars

[02:10] <TimToady> and we should already be handling constant strings

[02:11] <TimToady> but something like a parameter will at least stay the same till the next call, unless it's rw or copy

[02:17] *** Kyo91 joined
[02:22] *** kyan joined
[02:26] *** noganex joined
[02:29] *** noganex_ left
[02:34] *** purcell joined
[02:36] <skids> bisect: sub prefix:["∓"] ($thing) { return "AROUND$thing"; }; exit(∓43 ne "AROUND43")

[02:36] <bisectable6> skids, On both starting points (old=2015.12 new=d135728) the exit code is 0 and the output is identical as well

[02:36] <bisectable6> skids, Output on both points: «»

[02:38] <skids> bisect: old=2014.1 sub prefix:["∓"] ($thing) { return "AROUND$thing"; }; exit(∓43 ne "AROUND43")

[02:38] <bisectable6> skids, Cannot find revision “2014.1” (did you mean “2014.12”?)

[02:38] <skids> bisect: old=2014.12 sub prefix:["∓"] ($thing) { return "AROUND$thing"; }; exit(∓43 ne "AROUND43")

[02:38] <bisectable6> skids, Bisecting by exit code (old=2014.12 new=d135728). Old exit code: 1

[02:38] <bisectable6> skids, bisect log: https://gist.github.com/39a5a926eaea37a04145b46de728a87f

[02:38] <bisectable6> skids, (2015-10-04) https://github.com/rakudo/rakudo/commit/d0885e56e8fe1c2cd280e419ab3edfb9afe3443c

[02:41] *** cdg joined
[02:43] <MasterDuke> TimToady: constants and things that are statically typed as Strs are turned into a literal in Actions

[02:44] *** pilne joined
[02:46] *** cdg left
[02:50] *** Ven`` left
[03:28] *** xtreak joined
[03:33] *** u-ou- left
[03:33] *** Kyo91 left
[03:45] *** raschipi_ joined
[03:47] *** ChoHag left
[03:47] *** raschipi left
[03:47] *** raschipi_ left
[03:48] *** pilne left
[03:50] *** Kyo91 joined
[03:51] *** xtreak left
[03:55] *** Kyo91 left
[03:56] *** yht joined
[04:03] *** Cabanossi left
[04:03] *** purcell left
[04:04] *** Cabanossi joined
[04:15] *** skids left
[04:15] *** yht left
[04:32] *** Cabanossi left
[04:35] *** Cabanossi joined
[04:44] *** xtreak joined
[04:47] *** cpage_ left
[04:56] *** cdg joined
[05:01] *** cdg left
[05:04] *** Cabanossi left
[05:05] *** Cabanossi joined
[05:22] *** zakame left
[05:25] *** cpage_ joined
[05:28] *** andrzejku joined
[05:29] *** zakame joined
[05:34] <andrzejku> hi

[05:34] <teatime> Hello.

[05:35] <andrzejku> looking for beginners for project

[05:36] <teatime> What kinda project?

[05:36] <andrzejku> prepare Math challenges

[05:42] <samcv> woo looks like i got another pretty big speedup. got `eq` 2x faster when both strings are flat but one is 8bit and one is 32bit storage types

[05:42] <samcv> underlying thing is used in other functions as well

[05:43] <samcv> and actually will speed up anything using MVM_string_get_grapheme_at_nocheck by 2x which is used a ton of places

[05:43] * teatime notes that samcv is either a night owl like himself, or from somewhere far away

[05:44] <samcv> i'm in california

[05:44] <samcv> it's 10:44pm

[05:44] <teatime> ah yeah not quite so late there

[05:44] <samcv> s/himself/herself

[05:44] <samcv> how are you this night

[05:44] <teatime> no I'm def. a himself

[05:44] <samcv> what time is it there?

[05:44] <teatime> pretty good, no complaints

[05:44] <teatime> I'm in WV, so it's 3 hours later.

[05:44] <samcv> oh sorry thought you were talking about me. i just glanced

[05:44] <samcv> ah ok

[05:44] <teatime> :)

[05:44] <samcv> inlining makes all the difference for very hot paths

[05:45] <samcv> i was wondering why that function didn't perform as well as it should have

[05:50] <samcv> 2x speedup as well with index

[05:50] <samcv> awesome!

[05:51] <teatime> aw yiss, 2x speedup

[05:52] <samcv> pretty much

[05:52] <samcv> my thoughts exactly :)

[05:58] <samcv> now i have to write more for my grant update hah

[05:58] <samcv> i thought i was done

[06:00] *** nadim joined
[06:00] *** khw left
[06:02] *** Cabanossi left
[06:05] *** Cabanossi joined
[06:05] *** abraxxa joined
[06:08] *** xtreak left
[06:10] *** abraxxa left
[06:19] *** ufobat joined
[06:23] <andrzejku> huh the thing which I love in Python and it is not Perl6 or Ruby is good autocomplete

[06:24] *** nuk9 joined
[06:30] *** darutoko joined
[06:31] *** abraxxa joined
[06:31] *** xtreak joined
[06:40] *** wamba joined
[06:47] *** snarkyboojum left
[06:50] *** xtreak left
[07:02] *** Cabanossi left
[07:05] *** Cabanossi joined
[07:14] *** ufobat left
[07:23] *** pecastro left
[07:29] *** Skarsnik joined
[07:33] <Skarsnik> Hllo

[07:34] <Zoffix> \o

[07:39] *** xtreak joined
[07:39] *** pecastro joined
[07:41] *** buggable left
[07:41] *** MasterDuke left
[07:41] *** buggable joined
[07:41] *** ChanServ sets mode: +v buggable

[07:44] *** xtreak left
[07:55] *** robertle left
[08:13] *** ufobat joined
[08:14] *** lizmat left
[08:14] *** yht joined
[08:17] *** cdg joined
[08:18] <Geth> ¦ whateverable: efa71e2be7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[08:18] <Geth> ¦ whateverable: Update config file format

[08:18] <Geth> ¦ whateverable: 

[08:18] <Geth> ¦ whateverable: This way it is a bit more structured and easier to manage.

[08:18] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/efa71e2be7

[08:18] <Geth> ¦ whateverable: f62ccfb43a | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[08:18] <Geth> ¦ whateverable: New bot: Squashable

[08:18] <Geth> ¦ whateverable: 

[08:18] <Geth> ¦ whateverable: Tells when the next event is going to happen, announces changes to the

[08:18] <Geth> ¦ whateverable: repo, logs interesting events, gives free pizza.

[08:18] <Geth> ¦ whateverable: 

[08:18] <Geth> ¦ whateverable: It started very clean, how I ended up with 300 lines of code is

[08:18] <Geth> ¦ whateverable: completely beyond me. Hopefully I'll get my hands on refactoring it

[08:18] <Geth> ¦ whateverable: at some point.

[08:18] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/f62ccfb43a

[08:18] *** cdg left
[08:19] *** cdg joined
[08:20] *** squashable6 joined
[08:20] <AlexDaniel> squashable6: status

[08:20] <squashable6> AlexDaniel, Next SQUASHathon in ≈1 hour (2017-09-02 UTC-12⌁UTC+14)

[08:22] <teatime> oh man

[08:22] <teatime> is that something I should get excited for

[08:23] * teatime finds the blog post.

[08:23] *** cdg left
[08:24] <Zoffix> \o/

[08:24] <Zoffix> squashable6: help

[08:24] <squashable6> Zoffix, Available commands: status, log, quiet, loud # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Squashable

[08:24] *** rindolf joined
[08:25] * Zoffix wonders how to get pizza :)

[08:25] *** leont joined
[08:26] *** [particle] left
[08:26] *** [particle] joined
[08:28] <AlexDaniel> http://blogs.perl.org/users/zoffix_znet/2017/08/youre-invited-community-bug-squashathon.html in case somebody missed it :)

[08:32] * Zoffix tries sleeping again...

[08:32] *** zakharyas joined
[08:33] <AlexDaniel> that's what I'm going to do too )

[08:33] <AlexDaniel> :)*

[08:33] <AlexDaniel> I'll just make sure the bot does not crap out in the first second

[08:34] <samcv> squashable6, squash me

[08:34] <squashable6> samcv, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Squashable

[08:43] *** aborazmeh joined
[08:43] *** aborazmeh left
[08:43] *** aborazmeh joined
[08:45] <samcv> Hot off the presses! Unicode grant status update 4! https://cry.nu/perl6/grant-status-update-4/ tons of exciting things

[08:48] *** Cabanossi left
[08:50] <zakame> nice!

[08:50] *** Cabanossi joined
[08:52] *** eiro left
[08:56] <AlexDaniel> samcv++ \o/

[08:57] *** xtreak joined
[08:58] *** Sgeo left
[08:58] *** xtreak left
[09:03] <AlexDaniel> squashable6: status

[09:03] <squashable6> AlexDaniel, Next SQUASHathon is just a few moments away (2017-09-02 UTC-12⌁UTC+14)

[09:10] *** eiro joined
[09:11] *** eiro left
[09:11] *** cdg joined
[09:16] *** cdg left
[09:24] *** Sgeo joined
[09:32] <Skarsnik> samcv, do you have any example of a common perl 6 operation that get speed up?

[09:38] *** niceperl joined
[09:42] *** TEttinger left
[09:47] *** cdg joined
[09:50] *** xtreak joined
[09:52] *** cdg left
[09:55] *** xtreak left
[09:56] *** cdg joined
[09:59] <AlexDaniel> squashable6: status

[09:59] <squashable6> AlexDaniel, Next SQUASHathon is just a few moments away (2017-09-02 UTC-12⌁UTC+14)

[10:00] <AlexDaniel> squashable6: status

[10:00] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in 2 days and ≈1 hour

[10:00] <AlexDaniel> \o/

[10:01] *** cdg left
[10:01] <AlexDaniel> forgot to change the channel though

[10:01] *** squashable6 left
[10:01] *** squashable6 joined
[10:02] <squashable6> 🍕 AlexDaniel++ self-assigned issue “Add ｢@a.push: |@b｣ as a trap to avoid”: https://github.com/perl6/doc/issues/602

[10:02] <squashable6> 🍕🍕🍕  First contribution by AlexDaniel++! ♥

[10:04] *** SHODAN left
[10:06] *** wamba left
[10:07] <zakame> so what can we do for this squashathon?

[10:08] <AlexDaniel> zakame: anything on perl6/doc repo counts

[10:09] <AlexDaniel> zakame: the main goal is to resolve as many issues as possible: https://github.com/perl6/doc/issues

[10:09] <zakame> gotcha

[10:10] *** wamba joined
[10:17] <teatime> AlexDaniel: I want to comment on https://github.com/perl6/doc/issues/1467 but can't login to github at the moment.  might be noise, anyway.  I am an avid user of compose key on linux, have used wincompose on windows and it works great.

[10:18] <AlexDaniel> teatime: that's what I thought too. It looks exactly like something that could solve the problem

[10:18] <teatime> I've used some others too; afaik wincompose is the one maintained one that works well.

[10:18] <teatime> *the only

[10:18] *** Cabanossi left
[10:19] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add examples how to type unicode on Windows”: https://github.com/perl6/doc/issues/1467#issuecomment-326545499

[10:19] <teatime> thank you :)

[10:20] *** cdg joined
[10:20] *** Cabanossi joined
[10:20] *** zakame left
[10:24] *** cdg left
[10:26] *** ShalokShalom_ joined
[10:27] <Aaronepower> Is there any way to stop perl6 interpreter from printing out variables? Sometimes the variable is large amount of information and I don't want it printed out.

[10:28] <moritz> Aaronepower: add a ; 1 at the end

[10:29] <Aaronepower> moritz: Huh, that's a nice trick.

[10:29] *** ShalokShalom left
[10:30] <Geth> ¦ doc: f2040d0b43 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[10:30] <Geth> ¦ doc: Attempt to document ｢$foo.bar: |@a｣ trap

[10:30] <Geth> ¦ doc: 

[10:30] <Geth> ¦ doc: See issue #602.

[10:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f2040d0b43

[10:30] *** Kyo91 joined
[10:33] *** zakame joined
[10:34] <Zoffix> samcv++ # grant update

[10:34] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Numeric values of signals mean nothing (traps)”: https://github.com/perl6/doc/issues/1474#issuecomment-326548502

[10:35] *** Kyo91 left
[10:35] <Zoffix> Aaronepower: it also won't output variables if you produce any output; so adding, say(), for example will also avoid variable dumpage

[10:35] <Zoffix> squashable6: help

[10:35] <squashable6> Zoffix, Available commands: status, log, quiet, loud # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Squashable

[10:35] <AlexDaniel> squashable6: status

[10:35] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in 2 days and ≈1 hour

[10:35] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/dfb6df7b310fd9e5f935254598222959

[10:36] <Zoffix> AlexDaniel: how to get free pizza? Or you get one after contribution?

[10:36] <AlexDaniel> Zoffix: are you sure there has to be one? :)

[10:36] <Skarsnik> when it's closed maybe?

[10:36] <Zoffix> AlexDaniel: well, the poster promised free pizza…

[10:37] <AlexDaniel> Zoffix: well, squashable6 prints one slice for every contribution

[10:37] <AlexDaniel> (and three slices for the first contribution :) )

[10:38] <AlexDaniel> err stats are printed a bit incorrectly

[10:38] *** niceperl left
[10:39] *** squashable6 left
[10:39] *** aborazmeh left
[10:39] *** squashable6 joined
[10:39] *** ChanServ sets mode: +v squashable6

[10:39] <AlexDaniel> squashable6: log

[10:39] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/64dd6d0790d607d02bd00986f463da33

[10:39] <AlexDaniel> that's a bit better

[10:39] <stmuk_> a 🍕

[10:40] <AlexDaniel> Zoffix: I think the poster should say “free 🍕”

[10:42] *** buggable left
[10:42] *** buggable joined
[10:42] *** ChanServ sets mode: +v buggable

[10:42] <Zoffix> AlexDaniel: that doesn't display on my terminal and logs say "????"

[10:42] <Zoffix> buggable: pizza me

[10:42] <buggable> Zoffix, Enjoy this slice of Pepperoni and Mushrooms pizza, my friend! Yummy 🍕

[10:42] <Zoffix> Why, thank you, kind robot!

[10:43] <AlexDaniel> buggable: pizza me

[10:43] <buggable> AlexDaniel, Enjoy this slice of Margherita pizza, my friend! Yummy 🍕

[10:43] <AlexDaniel> this bot is unfair

[10:43] <AlexDaniel> anyway, back to doc hacking before I fall asleep

[10:43] *** ShalokShalom_ is now known as ShalokShalom

[10:45] *** notbenh left
[10:45] *** mniip left
[10:45] *** zakharyas left
[10:45] *** notbenh joined
[10:47] *** zakharyas joined
[10:51] <Geth> ¦ doc: d39d6e8cfb | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[10:51] <Geth> ¦ doc: No whitespace around infix ops trap

[10:51] <Geth> ¦ doc: 

[10:51] <Geth> ¦ doc: See issue #1481.

[10:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d39d6e8cfb

[10:53] <squashable6> 🍕 AlexDaniel++ wrote a comment on “No whitespace around infix ops: 1<2 (trap)”: https://github.com/perl6/doc/issues/1481#issuecomment-326551567

[10:54] <AlexDaniel> Zoffix: I can change it to <) if it does not render right for most people

[10:54] <AlexDaniel> or whatever the closes texas equivalent is

[10:54] <AlexDaniel> t

[10:56] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Mixed | and || in regexes (trap?)”: https://github.com/perl6/doc/issues/1141#issuecomment-326552237

[10:59] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add ｢@a.push: |@b｣ as a trap to avoid”: https://github.com/perl6/doc/issues/602#issuecomment-326552585

[10:59] <squashable6> 🍕🍕🍕  First contribution by zoffixznet++! ♥

[10:59] <Geth> ¦ doc: 57ec082fee | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Num.pod6

[10:59] <Geth> ¦ doc: Clarify NaN

[10:59] <Geth> ¦ doc: 

[10:59] <Geth> ¦ doc: - We follow IEEE and result doesn't vary by impl (at least on platforms we support)

[10:59] <Geth> ¦ doc: - Show ways of testing for NaN

[10:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/57ec082fee

[10:59] <Zoffix> .oO( Go for the Inf, stay for the NaN )

[11:00] <Zoffix> And now I have to run to work...

[11:00] * Zoffix &

[11:00] <AlexDaniel> o/

[11:00] <ilmari> Zoffix: s/float point/floating point/ ?

[11:01] <AlexDaniel> and I have to get some sleep

[11:06] <tyil> Zoffix: nice article on the 7 hugs :>

[11:08] *** purcell joined
[11:09] *** margeas joined
[11:10] *** zakharyas left
[11:11] <BooK> Zoffix++ # great post on hugging

[11:12] <teatime> More hugs, less bugs!@

[11:12] <BooK> although I think the last section would benefit from an example (from irc logs)

[11:14] *** xtreak joined
[11:18] <teatime> heh is there an actual chimps-sprayed-with-water experiment.  I thought that was an urban myth.

[11:18] *** xtreak left
[11:18] <teatime> although, please don't take that as unconstructive criticism.

[11:18] * teatime hugs Zoffix 

[11:21] *** piojo joined
[11:23] <teatime> I suppose I should have used the bot.

[11:23] *** gregf_ left
[11:32] *** sena_kun joined
[11:35] *** gregf_ joined
[11:39] *** gfldex_work joined
[11:41] <Zoffix> BooK: thanks

[11:41] <Zoffix> teatime: I recall reading of that experiment in some popular science book, so I'd assume it's am actual experiment

[11:41] *** okl joined
[11:43] *** MasterDuke joined
[11:45] *** gfldex_work left
[11:45] <Zoffix> teatime: yeah looks like it was never done: https://skeptics.stackexchange.com/questions/6828/was-the-experiment-with-five-monkeys-a-ladder-a-banana-and-a-water-spray-condu

[11:46] <Zoffix> New life goal: get a bunch of people in a room, bannanas, and a fire hose :p

[11:46] <teatime> Zoffix: really nice article.  very introspective.  perl/perl6 community is pretty inspiring.  both in what they accomplish along these lines, and also in that they try / think about it.

[11:46] *** okl left
[11:49] *** leont left
[11:53] <Zoffix> Though there are other similar experiments on humans that I know did happen and seen videos of: when a bunch of people in a waiting room are in cahoots and randomly all stand up for a few minutes, and the unaware strangers stand up with then even though they've no idea why everyone's standing up :)

[11:53] *** abraxxa left
[11:54] * Zoffix slaps the "it was just a metaphor all along" excuse on the incorrect data in the article and moves on

[11:54] <Zoffix> :)

[11:56] <sena_kun> o/

[11:56] <teatime> :P

[11:56] <sena_kun> are you talking about Asch experiments or what?

[12:00] *** eliasr joined
[12:00] <Zoffix> Sounds like the same idea yeah, but there was actually a video of it. Kinda funny, people with this sheepish, confused look stand up for no reason :P

[12:01] <teatime> you know it's not necessarily so irrational or maladaptive

[12:01] <sena_kun> un, okay.

[12:02] <teatime> I mean like, *usually* when everyone is doing something there's a good reason for it

[12:02] <teatime> and especially if there's no cost, seems pretty reasonable to go along until you figure out wtf is going on :)

[12:03] <Zoffix> Sure, if everyone starts running away and you're standing there trying to figure out why, you might get eaten by a bear :)

[12:03] <teatime> exactly.

[12:06] *** raschipi joined
[12:08] *** leont joined
[12:08] *** xtreak joined
[12:09] *** xtreak left
[12:11] <Geth> ¦ doc: 696b3f470c | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Num.pod6

[12:11] <Geth> ¦ doc: Fix typo; ilmari++

[12:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/696b3f470c

[12:13] <Geth> ¦ doc: 02e05e6a6c | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Num.pod6

[12:13] <Geth> ¦ doc: Add examples of statements producing NaN

[12:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/02e05e6a6c

[12:18] *** kyan left
[12:23] <[Coke]> moritz++ all this doc activity!

[12:28] <raschipi> buggable: pizza me

[12:28] <buggable> raschipi, Enjoy this slice of Deluxe pizza, my friend! Yummy 🍕

[12:30] <raschipi> buggable: taco me

[12:31] *** llfourn joined
[12:32] <Geth> ¦ doc: eb2ed3593c | (Moritz Lenz)++ | README.md

[12:32] <squashable6> 🍕🍕🍕  First contribution by moritz++! ♥

[12:32] <Geth> ¦ doc: Rework README

[12:32] <Geth> ¦ doc: 

[12:32] <Geth> ¦ doc: * mention that the HTML version is the go-to version

[12:32] <Geth> ¦ doc: * throw out panda

[12:32] <Geth> ¦ doc: * CamelCase GitHub

[12:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/eb2ed3593c

[12:33] * moritz detects an unbalanced parenthesis in squashable6's output

[12:33] <moritz> [Coke]: the squashaton is not my doing at all

[12:38] *** sena_kun left
[12:42] <Geth> ¦ doc: bfa03eece3 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Num.pod6

[12:42] <Geth> ¦ doc: Document Inf

[12:42] <Geth> ¦ doc: 

[12:42] <Geth> ¦ doc: Closes #1310

[12:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bfa03eece3

[12:42] <squashable6> 🍕 zoffixznet++ closed issue “`Inf` is not documented”: https://github.com/perl6/doc/issues/1310

[12:43] <Zoffix> sqash sqash sqash.

[12:43] <Zoffix> Though I notice unspace doesn't seem to be documented..

[12:44] <Skarsnik> the native trait took a lot of stuff lol

[12:44] <Zoffix> Ah, it's just not in search

[12:44] <Skarsnik> hm I searched for trait and it pointed me as first result to state

[12:44] <Skarsnik> kinda weird

[12:45] <Geth> ¦ doc: 81160f6152 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[12:45] <Geth> ¦ doc: Add word "unspace" to search

[12:45] <Geth> ¦ doc: 

[12:45] <Geth> ¦ doc: .oO( I think this is how to do it... )

[12:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/81160f6152

[12:46] * [Coke] is not sure how he feels about being one of the hug-zamples.

[12:46] <[Coke]> (mostly positive)

[12:46] <perlpilot> .hug [Coke] 

[12:46] * huggable hugs [Coke] 

[12:46] <Skarsnik> I wonder how much doc will be broken at the endx)

[12:46] <[Coke]> moritz: I don't mean the SA, I mean your commits specifically.

[12:47] <Geth> ¦ doc: 7e7c946ced | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[12:47] <Geth> ¦ doc: Add Inf+Inf\i to usecases for unspace

[12:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7e7c946ced

[12:48] *** Cabanossi left
[12:49] <Geth> ¦ doc: ca458052ef | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Num.pod6

[12:49] <Geth> ¦ doc: Link reference to "unspace" to its definition

[12:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ca458052ef

[12:49] *** Cabanossi joined
[12:49] <squashable6> 🍕 moritz++ closed issue “FAQ entry “what is precompilation?””: https://github.com/perl6/doc/issues/446

[12:49] <Geth> ¦ doc: d11fdf715a | (Moritz Lenz)++ | doc/Language/faq.pod6

[12:49] <Geth> ¦ doc: FAQ entry: What is precompilation?

[12:49] <Geth> ¦ doc: 

[12:49] <Geth> ¦ doc: Closes #446

[12:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d11fdf715a

[12:50] <Geth> ¦ doc: e00050f466 | (Philippe Bruhat (BooK))++ (committed by Zoffix Znet) | doc/Type/Metamodel/ClassHOW.pod6

[12:50] <Geth> ¦ doc: Add a missing invocant to the method definition (#1483)

[12:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e00050f466

[12:50] <squashable6> 🍕 zoffixznet++ merged pull request “Add a missing invocant to the method definition”: https://github.com/perl6/doc/pull/1483

[12:50] <squashable6> 🍕 zoffixznet++ wrote a comment on “Add a missing invocant to the method definition”: https://github.com/perl6/doc/pull/1483#issuecomment-326571840

[12:51] <moritz> $_ = "puell request"; s/puell/pull/

[12:51] <moritz> afk&

[12:52] <Zoffix> ?

[12:52] * Zoffix now wonders where a "puell" request is at :)

[12:53] <Zoffix> buggable: pizza me

[12:53] <buggable> Zoffix, Enjoy this slice of Margherita pizza, my friend! Yummy 🍕

[12:53] <Zoffix> yum

[12:53] * Zoffix will resume SQUASHathonning later in the day :)

[12:56] *** grondilu joined
[13:05] <perlpilot> er ... aren't the invocants mis-declared in that document?   Shouldn't it be `method add_fallback(Metamodel::ClassHOW:D $obj: $condition, $calculator)` ?   And why add the invocant at all?  The entry on `can` talks about C<self>, but none of the others mention it by name.

[13:06] <Zoffix> perlpilot: $foo.^add_fallback is $foo.add_fallback($foo)

[13:08] <perlpilot> mayhap I need some caffeine  :)

[13:09] <Zoffix> err. I mean $foo.HOW.add_fallback($foo)

[13:09] * Zoffix thinks caffeine isn't a bad idea :P

[13:11] *** purcell left
[13:13] *** ChoHag joined
[13:17] *** Cabanossi left
[13:20] *** Cabanossi joined
[13:23] * [Coke] drinks a Coke Zero Sugar to up the caff. level.

[13:24] <Zoffix> .oO( cannibalism... )

[13:26] *** rindolf left
[13:26] *** zakame left
[13:26] <Geth> ¦ doc: dfb46665b5 | (Steve Mynott)++ | bin/p6doc-index

[13:26] <Geth> ¦ doc: speed up index lookup by indexing all we need to index

[13:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dfb46665b5

[13:26] <Geth> ¦ doc: ce49e90487 | (Steve Mynott)++ | bin/p6doc

[13:26] <Geth> ¦ doc: lookup sub type definitions (under Type/) as well

[13:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ce49e90487

[13:26] <squashable6> 🍕🍕🍕  First contribution by stmuk++! ♥

[13:27] *** kyan joined
[13:32] *** Exodist joined
[13:36] *** gregf_ left
[13:45] *** raschipi left
[13:47] *** zakharyas joined
[13:47] <tyil> https://news.ycombinator.com/item?id=15136313  

[13:49] *** skids joined
[13:49] *** niceperl_ joined
[13:50] *** niceperl_ left
[13:52] *** niceperl joined
[13:52] *** zakame joined
[13:53] * Zoffix hopes the author of that comment won't get spammed with "but actually Perl is still in use!!!!" comments

[13:54] <Zoffix> Maybe it's just me, but IMO that just sounds desperate :)

[13:54] *** raschipi joined
[13:56] <stmuk_> its a particularly nonsensical comment "headless browsers are perl" and "awk and sed aren't interpreters"

[13:57] *** kyan left
[13:59] *** andrzejku left
[14:00] *** niceperl left
[14:01] *** cdg joined
[14:03] *** rindolf joined
[14:10] <raschipi> I liked the "Web browser as a service" comment.

[14:10] <stmuk_> "standatalize"

[14:11] <stmuk_> I parsed that as "scandalize" 

[14:12] *** Kyo91 joined
[14:12] <Geth> ¦ doc: a03443113b | (Steve Mynott)++ | 3 files

[14:12] <Geth> ¦ doc: merge p6doc and p6doc-index, add dep

[14:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a03443113b

[14:12] <Geth> ¦ doc: 5c6fcd0594 | (Steve Mynott)++ | bin/p6doc

[14:12] <Geth> ¦ doc: build index automatically on first run

[14:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c6fcd0594

[14:12] <Geth> ¦ doc: e9392079b4 | (Steve Mynott)++ | README.md

[14:12] <Geth> ¦ doc: remove p6doc-index and explicitly mention existance of p6doc

[14:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e9392079b4

[14:35] <timotimo> i'm sorry i couldn't do anything much for the squashathon, i've been afk almost constantly for the last couple of hours

[14:35] <timotimo> and in the next couple of hours i'll be afk even more

[14:36] <Skarsnik> squashable6, status

[14:36] <squashable6> Skarsnik, 🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈21 hours

[14:36] <squashable6> Skarsnik, Log and stats: https://gist.github.com/e1c37f6c51451400da0c1e2b86b52efc

[14:36] <Skarsnik> plenty of time left ^^

[14:36] *** nuk9 left
[14:52] <jdv79> moritz: sup with the unicode bug in the logs?

[14:52] *** jdoege left
[14:52] *** wamba left
[14:57] <Zoffix> It's a secret ploy to get someone to rewrite the logs in Rakudo :P

[14:58] *** wamba joined
[15:00] <Zoffix> (their Perl sauce: https://github.com/moritz/ilbot )

[15:04] *** Sgeo_ joined
[15:05] *** cdg left
[15:06] *** Sgeo left
[15:12] *** ab6tract joined
[15:12] <ab6tract> hey all!

[15:12] <ab6tract> quick question: how can i assert that my look behind begins at the start of the string?

[15:12] <ab6tract> m: 'say "What::Root::Thing" ~~ /<?after ^ "What::Root::"> .*/; say "What::Root::Thing" ~~ /<?after "What::Root::"> .*/'

[15:12] <camelia> rakudo-moar 909688: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant string "say \"What::Root::Thing\" ~~ /<?after ^ \"What::Root::\"> .*/; say \"What::Root::Thing\" ~~ /<?after \"What::Root::\"> .*/" in sink context (line 1)␤»

[15:13] <ab6tract> m: say "What::Root::Thing" ~~ /<?after ^ "What::Root::"> .*/; say "What::Root::Thing" ~~ /<?after "What::Root::"> .*/

[15:13] <camelia> rakudo-moar 909688: OUTPUT: «Nil␤｢Thing｣␤»

[15:13] <Zoffix> m: say "What::Root::Thing" ~~ /^ <?after "What::Root::"> .*/

[15:13] <camelia> rakudo-moar 909688: OUTPUT: «Nil␤»

[15:13] *** khw joined
[15:14] <Zoffix> Dunno

[15:14] *** MasterDuke left
[15:14] <Zoffix> kinda expected <after ^ ... to work :)

[15:14] <ab6tract> Zoffix: me too :D

[15:14] <ab6tract> i tried a few different variations

[15:14] *** MasterDuke joined
[15:15] <ab6tract> Zoffix: in fact, that was the first form i tried

[15:17] <Zoffix> ab6tract: I'd say it's a bug that it doesn't work. `$` for example works

[15:17] <Zoffix> m: say "XXXzYYYz" ~~ /... <before z> /

[15:17] <camelia> rakudo-moar 909688: OUTPUT: «｢XXX｣␤ before => ｢｣␤»

[15:17] <Zoffix> m: say "XXXzYYYz" ~~ /... <before z$> /

[15:17] <camelia> rakudo-moar 909688: OUTPUT: «｢YYY｣␤ before => ｢｣␤»

[15:18] <ab6tract> m: say "XXXzYYYz" ~~ /... <?before z$> /

[15:18] <camelia> rakudo-moar 909688: OUTPUT: «｢YYY｣␤»

[15:18] <ab6tract> indeed

[15:19] <ab6tract> Zoffix: did you ever make a bot that can file bug reports to RT for me? :)

[15:19] <Zoffix> Nope

[15:19] <ab6tract> m: say "XXXzYYYz" ~~ /... <?before "z"$> /

[15:19] <camelia> rakudo-moar 909688: OUTPUT: «｢YYY｣␤»

[15:22] *** rindolf left
[15:22] *** setty1 joined
[15:23] <Zoffix> Seems word boundary is also busted in `after`

[15:23] <Zoffix> m: say ".zXXXYzYYY" ~~ /<?after <|w> z> .../

[15:23] <camelia> rakudo-moar 909688: OUTPUT: «｢XXX｣␤»

[15:23] <Zoffix> m: say ".zXXXYzYYY" ~~ /<?after <!|w> z> .../

[15:23] <camelia> rakudo-moar 909688: OUTPUT: «｢YYY｣␤»

[15:23] <Zoffix> Both work, but this form:

[15:23] <Zoffix> m: say ".zXXXYzYYY" ~~ /<?after « z> .../

[15:23] <camelia> rakudo-moar 909688: OUTPUT: «Nil␤»

[15:23] <Zoffix> Doesn't

[15:25] <ab6tract> very curious

[15:31] <Geth> ¦ doc: c6fb691615 | (Steve Mynott)++ | bin/p6doc

[15:31] <Geth> ¦ doc: use Terminal::ANSIColor if available to render pod

[15:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c6fb691615

[15:31] <Geth> ¦ doc: 06ce2e73e2 | (Steve Mynott)++ | bin/p6doc

[15:31] <Geth> ¦ doc: Display package where function was found in a hacky way :-(

[15:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/06ce2e73e2

[15:32] <ab6tract> Zoffix: my bug reporting foo is quite rusty. would you mind filing it? if not i will try to do it later

[15:37] *** ufobat left
[15:38] <Geth> ¦ doc: c35ab2b5e4 | (Steve Mynott)++ | 2 files

[15:38] <Geth> ¦ doc: remove Type:: prefix

[15:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c35ab2b5e4

[15:41] <Zoffix> ab6tract: just email to [email@hidden.address] or log in to RT and use the secret bug filing web form I /msg'ed you

[15:48] *** b2gills left
[15:55] *** b2gills joined
[15:55] <stmuk_> I wondered why a new gnome install was spamming my desktop with help windows which I couldn't close

[15:56] <stmuk_> of course my headphones were resting on F1

[15:56] <timotimo> my thinkpad has a "printscrn" button placed ridiculously impractically next to right alt. guess where the cat likes standing on the most

[15:57] <timotimo> xfce4's built-in screenshot tool doesn't have any sort of protection against just holding down that key

[15:57] <Geth> ¦ doc: f75c4997a1 | (Steve Mynott)++ | bin/p6doc

[15:57] <Geth> ¦ doc: issue #1224 part 2 fix

[15:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f75c4997a1

[15:58] *** andreoss joined
[15:58] <squashable6> 🍕 stmuk++ wrote a comment on “p6doc mentions `Type::*`…”: https://github.com/perl6/doc/issues/1224#issuecomment-326618274

[15:58] <squashable6> 🍕 stmuk++ closed issue “p6doc mentions `Type::*`…”: https://github.com/perl6/doc/issues/1224

[16:05] *** wamba left
[16:05] *** piojo left
[16:06] *** Sgeo_ left
[16:07] *** Sgeo joined
[16:08] <Geth> ¦ doc: 2854b7dd13 | (Christopher Bottoms)++ (committed by Zoffix Znet) | doc/Language/syntax.pod6

[16:08] <Geth> ¦ doc: Cleaning up "Separating statements by semicolons" (#1479)

[16:08] <Geth> ¦ doc: 

[16:08] <Geth> ¦ doc: * Cleaning up "Separating statements by semicolons"

[16:08] <Geth> ¦ doc: 

[16:08] <Geth> ¦ doc: Trying to address #1477

[16:08] <Geth> ¦ doc: 

[16:08] <squashable6> 🍕 zoffixznet++ merged pull request “Cleaning up "Separating statements by semicolons"”: https://github.com/perl6/doc/pull/1479

[16:08] <squashable6> 🍕 zoffixznet++ wrote a comment on “Cleaning up "Separating statements by semicolons"”: https://github.com/perl6/doc/pull/1479#issuecomment-326620543

[16:08] <squashable6> 🍕 zoffixznet++ wrote a comment on “Unnecessary style recomm…”: https://github.com/perl6/doc/issues/1477#issuecomment-326620614

[16:08] <squashable6> 🍕 zoffixznet++ closed issue “Unnecessary style recomm…”: https://github.com/perl6/doc/issues/1477

[16:09] <Geth> ¦ doc: * More explanation, postcircumfix exception

[16:09] <Geth> ¦ doc: <…commit message has 6 more lines…>

[16:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2854b7dd13

[16:10] *** Sgeo left
[16:11] <squashable6> 🍕 zoffixznet++ wrote a comment on “Using .lines on generated data is wrong (traps)”: https://github.com/perl6/doc/issues/1472#issuecomment-326621184

[16:12] <squashable6> 🍕 zoffixznet++ labeled issue “doc $*INITTIME”: https://github.com/perl6/doc/issues/1462

[16:13] *** Geth left
[16:18] *** andrzejku joined
[16:22] <Zoffix> "11 branches" looks like perl6/doc branches are also in want of a squashing

[16:23] <andreoss> is the jvm backend functional? nqp-j appears working but it crashes with NullPointerException while builing perl6.jar

[16:23] <yoleaux> 31 Aug 2017 08:04Z <lizmat> andreoss: check Tux's Text::CSV's CHECK block for aliasing methods

[16:23] <yoleaux> 31 Aug 2017 08:36Z <lizmat> andreoss: condensed to an "also" trait: sub trait_mod:<is>(Method:D $m, :$also!) { my $c := $m.package; $c.^add_method($_,$m) for @$also }

[16:25] *** zakharyas left
[16:27] *** robertle joined
[16:27] <Zoffix> andreoss: last I heard was some devs having issues building it. Haven't seen anyone actively working on it lately.

[16:27] <Zoffix> .seen psch

[16:27] <yoleaux> I saw psch 3 Jan 2017 18:33Z in #perl6: <psch> .seen TimToady

[16:28] *** epony left
[16:29] *** ab6tract left
[16:30] <andreoss> is this multi-stage builing process documented somewhere?

[16:31] * Zoffix shrugs

[16:32] <Zoffix> Maybe in https://github.com/rakudo/rakudo/blob/nom/INSTALL.txt

[16:32] <stmuk_> andreoss: it may have been broken by the recent path security fix

[16:33] <Zoffix> Ohhh right. 

[16:35] *** Skarsnik_ joined
[16:37] *** kyan joined
[16:37] *** Skarsnik__ joined
[16:37] *** cdg joined
[16:37] *** Skarsnik left
[16:38] <andreoss> you mean empty PERL6LIB?

[16:39] <Zoffix> It was something about not loading the stuff it needs from '.' dir

[16:39] <Zoffix> it = perl6 executable

[16:40] *** Skarsnik_ left
[16:41] *** cdg left
[16:42] *** kyan left
[16:46] *** dogbert2 joined
[16:57] <stmuk_> is Geth broked?

[16:59] <Zoffix> ◀▬▬ │ Geth (~zofbot-ge@ns1.niner.name) has quit (Ping timeout: 240 seconds)

[16:59] <Zoffix> Looks like it

[16:59] <Zoffix> nine: ping are you around. Geth pinged out

[16:59] <Zoffix> (and I still haven't had a chance to fix IRC::Client for the thing you mentioned... )

[17:00] *** cdg_ joined
[17:00] <Zoffix> m: use NativeCall; sub system(Str) is native {}; system 'ps | grep -i geth';

[17:00] <camelia> rakudo-moar 909688: ( no output )

[17:00] <Zoffix> m: use NativeCall; sub system(Str) is native {}; system 'killall geth';

[17:00] <camelia> rakudo-moar 909688: OUTPUT: «sh: killall: command not found␤»

[17:00] <Zoffix> Oh well :)P

[17:00] <stmuk_> I assume https://github.com/perl6/doc/commit/7c3ba1ce6f417bfdf6f5d34218c916dcfe9679f5 is likely to be more truthy than the original?

[17:01] <jdv79> well, i didnt know the autodarken welding lenses went bad until i just blinded myself

[17:01] <jdv79> til, check before using a 15y old piece of equipment

[17:01] <jdv79> oops, wrong chan

[17:02] <Zoffix> stmuk_: don't know if the rest of the doc mention them, but if not, work including that many of the stat fields are obtainable via IO::Path methods like .s, .f, .d, etc.

[17:02] <Zoffix> s/work/worth/;

[17:03] <stmuk_> yeah good point

[17:04] <Zoffix> Geth_: 

[17:04] <Zoffix> Geth_: help

[17:04] <Geth_> Zoffix, Source at https://github.com/perl6/geth To add repo, add an 'application/json' webhook on GitHub pointing it to https://geth.perl6.party/?chan=#perl6 and choose 'Send me everything' for events to send | use `ver URL to commit` to fetch version bump changes

[17:05] *** Geth joined
[17:05] <nine> Zoffix: I restarted geth

[17:06] <Geth_> ¦ doc: 5ede23fec1 | (Moritz Lenz)++ | doc/Language/glossary.pod6

[17:06] <Geth_> ¦ doc: Glossary entry for "binder". Closes #1390

[17:06] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/5ede23fec1

[17:06] <squashable6> 🍕 moritz++ closed issue “`binder` could use a Glossary entry”: https://github.com/perl6/doc/issues/1390

[17:06] <Geth_> ¦ doc: 7c3ba1ce6f | (Steve Mynott)++ | doc/Language/5to6-perlfunc.pod6

[17:06] <Geth_> ¦ doc: We probably don't have stat despite its presence in

[17:06] <Geth_> ¦ doc: 

[17:06] <Geth_> ¦ doc: https://design.perl6.org/S32/IO.html

[17:06] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/7c3ba1ce6f

[17:06] <Zoffix> nine: oh, thanks :)

[17:09] *** kyan joined
[17:09] <squashable6> 🍕 zoffixznet++ closed issue “The shallowness of `.clo…”: https://github.com/perl6/doc/issues/1458

[17:09] <Geth> ¦ doc: 90220b443f | (Steve Mynott)++ | doc/Language/5to6-perlfunc.pod6

[17:09] <Geth> ¦ doc: goto is not yet implemented

[17:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/90220b443f

[17:10] <Zoffix> Geth hates me...

[17:12] <Geth> ¦ doc: 70344ae41b | (Moritz Lenz)++ | CONTRIBUTING.md

[17:12] <Geth> ¦ doc: CONTRIBUTING.md: small corrections

[17:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/70344ae41b

[17:12] <Zoffix> oh well. I pushed https://github.com/perl6/doc/commit/fb2d3fc024

[17:13] * Zoffix &

[17:14] <Geth> ¦ doc: e231aa6f58 | (Moritz Lenz)++ | doc/Type/Junction.pod6

[17:14] <Geth> ¦ doc: Junctions: clarify what is meant by boolean context

[17:14] <Geth> ¦ doc: 

[17:14] <Geth> ¦ doc: Closes #1269

[17:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e231aa6f58

[17:14] <squashable6> 🍕 moritz++ closed issue “Comparisons with a junct…”: https://github.com/perl6/doc/issues/1269

[17:14] *** mr-foobar joined
[17:15] <moritz> since I just closed an issue by brian d foy... does anybody know anything about the state of "Learning Perl 6"?

[17:15] <moritz> s/m/ /

[17:15] *** silug left
[17:16] <stmuk_> I think you have to pay to learn about the status of it :)

[17:16] *** mr-fooba_ left
[17:17] <squashable6> 🍕 moritz++ wrote a comment on “<same> is not documented”: https://github.com/perl6/doc/issues/1259#issuecomment-326636581

[17:18] <squashable6> 🍕 moritz++ labeled issue “<same> is not documented”: https://github.com/perl6/doc/issues/1259

[17:18] <squashable6> 🍕 moritz++ unlabeled issue “<same> is not documented”: https://github.com/perl6/doc/issues/1259

[17:18] <Zoffix> moritz: yeah, it's basically delayed a bit

[17:18] * Zoffix digs for latest update email

[17:21] <Geth> ¦ doc: 7f07a03520 | (Moritz Lenz)++ | doc/Language/regexes.pod6

[17:21] <Geth> ¦ doc: Document <?same> in regex. Closes #1259

[17:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7f07a03520

[17:21] <squashable6> 🍕 moritz++ closed issue “<same> is not documented”: https://github.com/perl6/doc/issues/1259

[17:21] <raschipi> moritz: And you regex book, how is it going?

[17:22] <moritz> raschipi: it's going to be published by Apress; manuscript submission deadline is Dec 1st

[17:22] <andreoss> stmuk_: this commit has added just a single line into some regex, how could it have broken JVM port?

[17:22] <moritz> raschipi: and I have the manuscript mostly done, with a chapter on some example projects still missing

[17:22] <moritz> a first draft of the manuscript, I should say :-)

[17:22] <raschipi> You know your book will put parsing on the hands of common programmers, right? It could be revolutionary.

[17:23] <raschipi> Or better, are you goiung to cover parsing?

[17:23] <moritz> raschipi: that's my hope. My sarcastic side says it's just going to be a niche book in the niche market of Perl 6

[17:23] <moritz> raschipi: yes

[17:23] <raschipi> Your book wil kill ZALGO!

[17:24] <skids> If someone could close RT#124848 that would be great... no reply option for that one for me in RT UI.

[17:24] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=124848

[17:24] <moritz> so far I plan three main examples at the end: parsing mathematical expressions using a mixture of grammar + operator precedence parser, S-Expressions, and an idention-based language (simplification from python)

[17:25] <Zoffix> moritz: assuming I got the latest email, I think it's a public kickstarter update: https://www.kickstarter.com/projects/1422827986/learning-perl-6/posts/1909345

[17:25] *** wamba joined
[17:25] *** itaipu joined
[17:25] <Zoffix> "My initial target was ambitious even if everything went well, but as you can see in my various Perl 6 activity on @LearningPerl6, there are still many rough edges to work out. And, as the Perl 6 devs work on these, there's talk of a v6.d that will supersede the current v6.c version with some changes to the standard library"

[17:26] <Zoffix> Latest update to the preview PDF is from 27 days ago. 

[17:26] *** setty1 left
[17:26] <moritz> so... he wants to wait until Perl 6 is dead, so it's not a moving target anymore? /s

[17:27] <moritz> Zoffix: thanks for digging that up

[17:27] <Skarsnik__> hm I think I donate for this. I have pdf acees?

[17:28] <Zoffix> moritz: Also mentions that he's working on Perl 6 version of perl5's faq

[17:28] <Zoffix> Skarsnik__: yeah, it was like $50 tier on Kickstarter

[17:28] <Skarsnik__> I don't think I donated that much

[17:28] <Zoffix> Skarsnik__: but I dunno, ping him on https://twitter.com/LearningPerl6 and ask if you could have a discount :)

[17:29] <Skarsnik__> btw was there some discusion to have a patreon like for Rakudo Perl 6

[17:30] <Zoffix> "patreon"? What's that?

[17:30] <raschipi> moritz: Do you think you'll publish it before or after the performance changes from TimToady land? It would be useful if the performance was there to avoid people being dissapointed.

[17:30] <Skarsnik__> I donated 20,00 $ so

[17:30] <Skarsnik__> I mean if it lead to a book it's fine ^^

[17:31] <moritz> raschipi: I have no idea when the performance changes will land

[17:31] <andreoss> Skarsnik__: what is the point of having 3rd parth if you can donate ditrectly to TPF?

[17:31] <Skarsnik__> performance change?

[17:32] <El_Che> Skarsnik__: you need 25€ for the ebook. Ping hem and raise the plegde with 5.

[17:32] <andreoss> *party

[17:32] <El_Che> Skarsnik__: that will do it

[17:32] <moritz> Zoffix: it's a croud-funding platform where people can pledge periodic/continuous support instead of just one-time support

[17:32] <Zoffix> Ah

[17:32] <Skarsnik__> I prefer it to simple donation

[17:32] <Zoffix> I prerer a simple donation.

[17:32] <moritz> Zoffix: podcasts use it occasionally, on an per-episode or a monthly basis

[17:32] <Skarsnik__> the issue you pay VAT

[17:33] <El_Che> I wanted the t-shirt pledge but I didn't pick that one because a huge part was just postage

[17:33] <El_Che> (as in huge)

[17:33] <Skarsnik__> I like to think "Yeah I give 5€/month to this guy because I like his content"

[17:33] *** Skarsnik__ is now known as Skarsnik

[17:34] <rightfold> Can you customize how many list elements gist will show?

[17:34] <Zoffix> rightfold: no

[17:34] <Zoffix> Other than overriding its .gist

[17:34] <Zoffix> s: (), 'gist', \()

[17:34] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/909688953/src/core/List.pm#L795

[17:35] <Skarsnik> Zoffix, I mean each people his liking to give money, but having a monthly thingy as another choice is good

[17:35] <andreoss> rightfold: no

[17:35] <rightfold> Zoffix: thanks

[17:36] <andreoss> s: "", 'gist', 

[17:36] <SourceBaby> andreoss, Sauce is at https://github.com/rakudo/rakudo/blob/909688953/src/core/Mu.pm#L581

[17:36] <andreoss> what is the first one?

[17:37] <andreoss> a type?

[17:37] <stmuk_> andreoss: I mean nqp/dd25a9246 and following related commits

[17:37] <Zoffix> andreoss: it's args to sourcery routine of CoreHackers::Sourcery

[17:38] <Zoffix> buggable: eco Sourcery

[17:38] <buggable> Zoffix, CoreHackers::Sourcery 'Helper for showing actual source code locations of core subs and methods': https://github.com/zoffixznet/perl6-CoreHackers-Sourcery

[17:39] <Zoffix> andreoss: ($object, Str $method, Capture $args?) or (&Callable, Capture $args?)

[17:44] *** lizmat joined
[17:45] <AlexDaniel> moritz: “detects an unbalanced parenthesis in squashable6's output” where?

[17:45] <AlexDaniel> squashable6: status

[17:45] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈18 hours

[17:46] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/a4e73e3b486fa324eab9c5bb9a18c2e7

[17:47] <Zoffix> nice :)

[17:48] <AlexDaniel> it works better than I thought it would :)

[17:49] <Skarsnik> squashable6, foo

[17:49] <squashable6> Skarsnik, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Squashable

[17:49] <Skarsnik> :)

[17:49] <Zoffix> buggable: pizza

[17:49] <buggable> Zoffix, Enjoy this slice of Meatzaa pizza, my friend! Yummy 🍕

[17:49] <lizmat> afk again&

[17:50] *** lizmat left
[17:51] <AlexDaniel> buggable: pizza Zoffix

[17:51] <buggable> AlexDaniel, Enjoy this slice of Chicken Mexican Red Wave pizza, my friend! Yummy 🍕

[17:51] <Skarsnik> lol

[17:51] <tinita> buggable: can i have a vegan pizza please?

[17:52] <tinita> huh

[17:53] <Zoffix> \o/

[17:54] * Zoffix gives tinita a slice of vegan pizza

[17:54] <Zoffix> It matches /:i \s* pizza /

[17:54] <tinita> thanks *nom nom*

[17:55] *** Kyo91 left
[17:57] <squashable6> 🍕 AlexDaniel++ assigned issue “Add ｢@a.push: |@b｣ as a trap to avoid” to zoffixznet: https://github.com/perl6/doc/issues/602

[17:57] <squashable6> 🍕 AlexDaniel++ self-unassigned issue “Add ｢@a.push: |@b｣ as a trap to avoid”: https://github.com/perl6/doc/issues/602

[17:57] <squashable6> 🍕 AlexDaniel++ unassigned issue “Add ｢@a.push: |@b｣ as a trap to avoid” from zoffixznet: https://github.com/perl6/doc/issues/602

[17:57] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add ｢@a.push: |@b｣ as a trap to avoid”: https://github.com/perl6/doc/issues/602#issuecomment-326645553

[17:57] <squashable6> 🍕 AlexDaniel++ closed issue “Add ｢@a.push: |@b｣ as a trap to avoid”: https://github.com/perl6/doc/issues/602

[18:02] *** Kyo91 joined
[18:06] *** andreoss left
[18:12] *** epony joined
[18:13] *** epony left
[18:19] *** brrt joined
[18:21] *** raschipi_ joined
[18:23] *** raschipi left
[18:26] *** raschipi_ is now known as raschipi

[18:28] <Geth> ¦ doc: 4bd6502d15 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[18:28] <Geth> ¦ doc: List not using chdir as an option

[18:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4bd6502d15

[18:28] <Geth> ¦ doc: df4c43498e | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[18:28] <Geth> ¦ doc: Document lines vs slurp.lines trap

[18:28] <Geth> ¦ doc: 

[18:28] <Geth> ¦ doc: Resolves issue #1472.

[18:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/df4c43498e

[18:29] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Create language/unicode page”: https://github.com/perl6/doc/issues/1142#issuecomment-326652744

[18:29] <squashable6> 🍕🍕🍕  First contribution by rafaelschipiura++! ♥

[18:31] *** yht left
[18:32] *** Cabanossi left
[18:33] <Zoffix> Dunno if it's avoiding chdir is "viable" option. The point of that entry is .Str of IO::Path isn't suitable to reference paths, as it doesn't consider the $!CWD attribute. `chdir` was listed as merely just as one of the means to demonstrate potential issue. 

[18:34] <Zoffix> (also: the code you use might alter $*CWD without you being actively aware of it, and intro the issue)

[18:34] <AlexDaniel> Zoffix: how is that possible?

[18:34] <Zoffix> Or code that uses your code. Temp::File has (had?) this problem, where it deletes the wrong files.

[18:35] <Zoffix> AlexDaniel: that being what?

[18:35] *** Cabanossi joined
[18:35] <AlexDaniel> ah, you mean some module may chdir without me knowing?

[18:35] <Zoffix> yeah

[18:36] <AlexDaniel> well, my point is that nothing in a world should chdir without a very good reason

[18:36] <AlexDaniel> in fact, maybe nothing should ever use chdir… :-/

[18:37] <Zoffix> And my point is that entry has little to do with chdir.

[18:37] <AlexDaniel> Zoffix: sure, but someone who faces the issue may come to read this

[18:37] <AlexDaniel> and “hey, but you don't have to use chdir” is a good suggestion, no?

[18:38] <Zoffix> And read "another viable option is to not use chdir"

[18:38] <Zoffix> This code deletes the wrong file. No chdir involved: unlink IO::Path.new("foo", :CWD<bar>).Str

[18:38] * Zoffix shrugs and goes back to lurking

[18:39] <AlexDaniel> :O

[18:39] *** mniip joined
[18:40] <AlexDaniel> right

[18:41] <squashable6> 🍕 moritz++ wrote a comment on “most pre-defined tokens …”: https://github.com/perl6/doc/issues/864#issuecomment-326655431

[18:41] <squashable6> 🍕 moritz++ closed issue “most pre-defined tokens …”: https://github.com/perl6/doc/issues/864

[18:43] <Geth> ¦ doc: d9a69dfda4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[18:43] <Geth> ¦ doc: Not an option, but a solution to another problem

[18:43] <Geth> ¦ doc: 

[18:43] <Geth> ¦ doc: Still worth a mention I think.

[18:43] <Geth> ¦ doc: 

[18:43] <Geth> ¦ doc: Zoffix++ https://irclog.perlgeek.de/perl6/2017-09-01#i_15102655

[18:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d9a69dfda4

[18:43] <AlexDaniel> Zoffix: that's probably even better ↑

[18:43] <Zoffix> AlexDaniel++

[18:43] <Zoffix> Thanks.

[18:45] <Geth> ¦ doc: f54583e09c | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[18:45] <Geth> ¦ doc: Mention other ways stringified IO::Path fails

[18:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f54583e09c

[18:48] *** espadrine joined
[18:51] <Geth> ¦ doc: 309904c1ab | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[18:51] <Geth> ¦ doc: Mark code as skip-test

[18:51] <Geth> ¦ doc: 

[18:51] <Geth> ¦ doc: - Since unlink touches the filesystem

[18:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/309904c1ab

[18:55] *** cdg_ left
[18:59] <Zoffix> ab6tract: I guess you left before you got my message about secret RT form... I now filed the regex <after> thing as https://rt.perl.org/Ticket/Display.html?id=132014

[19:01] <Geth> ¦ doc: nxadm++ created pull request #1484: Specify the version that introduced slurp

[19:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1484

[19:01] <squashable6> 🍕 nxadm++ opened pull request “Specify the version that introduced slurp”: https://github.com/perl6/doc/pull/1484

[19:01] <squashable6> 🍕🍕🍕  First contribution by nxadm++! ♥

[19:01] <Geth> ¦ doc: 52845fc02e | (Claudio Ramirez)++ | doc/Type/Proc.pod6

[19:01] <Geth> ¦ doc: Specify the version that introduced slurp

[19:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/52845fc02e

[19:01] <Geth> ¦ doc: 22b7bb22a0 | nxadm++ (committed using GitHub Web editor) | doc/Type/Proc.pod6

[19:01] <Geth> ¦ doc: Merge pull request #1484 from nxadm/master

[19:01] <squashable6> 🍕 nxadm++ merged pull request “Specify the version that introduced slurp”: https://github.com/perl6/doc/pull/1484

[19:01] <Geth> ¦ doc: 

[19:01] <Geth> ¦ doc: Specify the version that introduced slurp

[19:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/22b7bb22a0

[19:02] <Geth> ¦ doc: f9eb8ef426 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[19:02] <Geth> ¦ doc: More stuff for issue #1472

[19:02] <Geth> ¦ doc: 

[19:02] <Geth> ¦ doc: This should make it closable.

[19:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f9eb8ef426

[19:02] <squashable6> 🍕 AlexDaniel++ closed issue “Using .lines on generated data is wrong (traps)”: https://github.com/perl6/doc/issues/1472

[19:02] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Using .lines on generated data is wrong (traps)”: https://github.com/perl6/doc/issues/1472#issuecomment-326660088

[19:04] *** brrt left
[19:05] <Geth> ¦ doc: 1a6b4274e5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[19:05] <Geth> ¦ doc: Make it sound better after the previous paragraph

[19:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1a6b4274e5

[19:06] *** pilne joined
[19:08] <Geth> ¦ doc: nxadm++ created pull request #1485: Specify rakudo release slurp introduction

[19:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1485

[19:08] <squashable6> 🍕 nxadm++ opened pull request “Specify rakudo release slurp introduction”: https://github.com/perl6/doc/pull/1485

[19:08] <squashable6> 🍕 zoffixznet++ wrote a comment on “Using .lines on generated data is wrong (traps)”: https://github.com/perl6/doc/issues/1472#issuecomment-326661189

[19:08] <El_Che> Please review https://github.com/perl6/doc/pull/1485, to see if the added note is desired.

[19:09] <Geth> ¦ doc: 0c83985978 | nxadm++ (committed by Zoffix Znet) | doc/Type/IO/Handle.pod6

[19:09] <Geth> ¦ doc: Specify rakudo release slurp introduction (#1485)

[19:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0c83985978

[19:09] <squashable6> 🍕 zoffixznet++ merged pull request “Specify rakudo release slurp introduction”: https://github.com/perl6/doc/pull/1485

[19:09] <squashable6> 🍕 zoffixznet++ wrote a comment on “Specify rakudo release slurp introduction”: https://github.com/perl6/doc/pull/1485#issuecomment-326661364

[19:10] <Zoffix> El_Che: pre-6.d release we'll add some better system to indicate stuff like that, but in the meantime, the note is useful.

[19:13] <ugexe> or people might start expecting all methods that were added after 2016.12 to be mentioned

[19:14] <Zoffix> 2015.12 you mean :)

[19:15] *** darutoko left
[19:16] <Zoffix> Well, technically, *wink* *wink*, stuff like .parse-base and many other features added since Christmas aren't part of any official language release and shouldn't be documented as normal features.

[19:17] <raschipi> Rakudo should document it's own features, I think. Only meantion if they are in the spec if that's the question.

[19:17] <El_Che> Zoffix: I added it because I realize that even when I create my own linux packages, I don't always update all my machines to the latest release (I certainly update my laptop)

[19:18] <El_Che> raschipi: I think that will mostly apply in the future

[19:18] <ugexe> but why wouldnt you use older version of the docs?

[19:19] <El_Che> ugexe: people just go to doc.perl6.org

[19:19] <raschipi> It would also be very helpful if that feature was made avilable so that modules can provide this info through the same mechanism.

[19:19] <El_Che> ugexe: doesn't look versioned to me

[19:19] <Zoffix> raschipi: it is (or rather was) more of a question "what do we do with these new features people are asking about?". It's already basically solved, since we both have a way to specify language versions in Rakudo now as well as have plan to do quarterly language releases after 6.d

[19:19] <Zoffix> ugexe: 'cause there's just one website :)

[19:20] <Zoffix> I'm still on 2017.07 on my box and 2017.05 on my server.

[19:20] <El_Che> ugexe: I would agree that versioned doc like the perl5 equivalent is a great idea

[19:20] <AlexDaniel> hm, it seems that we don't have Signals enum documented at all

[19:20] <El_Che> ugexe: although maybe too much work for a small communtiy

[19:21] <Zoffix> It'd be relatively easy to find when particular methods were implemented

[19:21] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Numeric values of signals mean nothing (traps)”: https://github.com/perl6/doc/issues/1474#issuecomment-326663737

[19:21] <squashable6> 🍕 AlexDaniel++ edited issue “Numeric values of signals mean nothing (bug)”: https://github.com/perl6/doc/issues/1474

[19:21] <El_Che> Zoffix: you tagged your changes well

[19:22] <Zoffix> Like generating https://map.perl6.party/ on ~24 builds since Christmas and seeing the differences

[19:22] <Zoffix> s/builds/releases/;

[19:23] * Zoffix &

[19:25] <AlexDaniel> c: releases class Foo { method TWEAK { say ‘hello’ } }; Foo.new

[19:25] <committable6> AlexDaniel, ¦2015.12,2016.01.1,2016.02,2016.03,2016.04,2016.05,2016.06,2016.07.1,2016.08.1,2016.09,2016.10: «» ¦2016.11,2016.12,2017.01,2017.02,2017.03,2017.04.3,2017.05,2017.06,2017.07,2017.08,HEAD(9096889): «hello»

[19:27] *** cdg joined
[19:28] <raschipi> Zoffix: What's the 'Count' column in your routine list?

[19:28] *** cdg left
[19:28] <Zoffix> .count method's return value

[19:28] <Zoffix> m: dd [.arity, .count] with sub ($, $, $?) {}

[19:28] <camelia> rakudo-moar 909688: OUTPUT: «[2, 3]␤»

[19:29] <raschipi> thanks

[19:31] *** kyan left
[19:31] <Geth> ¦ doc: 83d60a4f5b | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[19:31] <Geth> ¦ doc: Mention TWEAK

[19:31] <Geth> ¦ doc: 

[19:31] <Geth> ¦ doc: Resolves #1305

[19:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/83d60a4f5b

[19:31] <squashable6> 🍕 AlexDaniel++ closed issue “BUILD trap should mention TWEAK”: https://github.com/perl6/doc/issues/1305

[19:35] <samcv> how's the squashathon going

[19:35] *** cdg joined
[19:35] <samcv> should i look for issues to close or open

[19:35] <Zoffix> samcv: going great

[19:36] <Zoffix> samcv: both :)

[19:36] <samcv> good * everyone

[19:36] <Zoffix> squashable6: log

[19:36] <squashable6> Zoffix, Log and stats: https://gist.github.com/12a48552c532eb8e87e9b28892784309

[19:36] *** Rawriful joined
[19:36] <samcv> j: say 'hi'

[19:36] <camelia> rakudo-jvm 8a2158: OUTPUT: «java.nio.file.NoSuchFileException: /nqp/lib/Perl6/BOOTSTRAP.jar␤  in <anon> (gen/jvm/ModuleLoader.nqp:90)␤  in load_module (gen/jvm/ModuleLoader.nqp:77)␤  in <anon> (gen/jvm/CORE.setting)␤  in <anon> (gen/jvm/ModuleLoader.nqp:255)␤  in load_sett…»

[19:36] <samcv> is the jvm compyling atm?

[19:36] <samcv> should i attempt to fix jvm issues

[19:36] <Zoffix> No, it's broken

[19:37] <samcv> damn

[19:37] <Zoffix> samcv: if you want :) Though this month's SQUASHathon is about our perl6/doc repo

[19:37] <samcv> oh so it's a doc based squashathon

[19:37] <AlexDaniel> samcv: I'll start bothering people about things like this after the SQUASHathon :)

[19:37] <AlexDaniel> samcv: this month, yes

[19:38] <Zoffix> Each month will be a different thing

[19:38] <samcv> ok i can do that too

[19:38] <AlexDaniel> \o/

[19:38] <Zoffix>  |

[19:38] <Zoffix> /\

[19:38] <AlexDaniel> buggable: pizza samcv

[19:38] <buggable> AlexDaniel, Enjoy this slice of Golden Chicken Delight pizza, my friend! Yummy 🍕

[19:38] <samcv> nice

[19:39] *** andreoss joined
[19:39] *** cpage left
[19:39] *** cpage joined
[19:40] *** eliasr left
[19:41] *** cpage_ left
[19:41] *** cpage_ joined
[19:42] <samcv> Zoffix, where should this page go https://github.com/perl6/doc/issues/891

[19:42] <samcv> i should add a link on our unicode page to my new documentation on MVM's implementation on strings too probably

[19:42] *** buggable left
[19:42] *** buggable joined
[19:42] *** ChanServ sets mode: +v buggable

[19:43] <Zoffix> samcv: maybe https://docs.perl6.org/language/regexes ?

[19:43] <AlexDaniel> what about https://docs.perl6.org/language/unicode ?

[19:43] <samcv> also i don't think you can do that

[19:43] *** buggable left
[19:43] <samcv> idk maybe we need a regex type that will pass back the base characters instead of the full characters

[19:44] *** buggable joined
[19:44] *** ChanServ sets mode: +v buggable

[19:44] <samcv> like :m except opposite. instead of searching with base characters you return base charaters

[19:44] <AlexDaniel> buggable: pizza samcv

[19:44] <buggable> AlexDaniel, enjoy this slice of Cheese and Pepperoni pizza, my friend! Yummy 🍕

[19:44] <AlexDaniel> .pizza samcv

[19:44] <AlexDaniel> :)

[19:44] *** buggable left
[19:45] <samcv> m: say "7\x[308]  " ~~ /^ \d+ $/

[19:45] <camelia> rakudo-moar 909688: OUTPUT: «Nil␤»

[19:45] <samcv> well Zoffix it looks like it looks for plain numbers

[19:45] <raschipi> samcv: Can you give this https://github.com/perl6/doc/issues/1142 one some love?

[19:45] <samcv> but it doesn't if it's like

[19:45] *** buggable joined
[19:45] *** ChanServ sets mode: +v buggable

[19:45] *** SCHAPiE left
[19:45] <samcv> m: say "7\x[308]" ~~ /^ \d+ $/

[19:45] <camelia> rakudo-moar 909688: OUTPUT: «｢7̈｣␤»

[19:46] <Zoffix> samcv: that's only because you added anchors and there's nothing to match the extra spaces

[19:46] <Zoffix> m: say "7\x[308]  " ~~ /^ \d+ /

[19:46] <camelia> rakudo-moar 909688: OUTPUT: «｢7̈｣␤»

[19:46] <squashable6> 🍕 samcv++ edited a comment on “Create language/unicode page”: https://github.com/perl6/doc/issues/1142#issuecomment-279243451

[19:46] <squashable6> 🍕🍕🍕  First contribution by samcv++! ♥

[19:46] <samcv> oh my

[19:46] <Zoffix> \o/

[19:46] *** Kyo91 left
[19:46] *** buggable left
[19:47] *** itaipu left
[19:47] *** lostinfog joined
[19:48] <raschipi> How can I alias a variable to a method, to introspect it?

[19:48] *** buggable joined
[19:48] *** ChanServ sets mode: +v buggable

[19:49] <Zoffix> m: my $meth = "".^find_method: "say"; say $meth.^name

[19:49] <camelia> rakudo-moar 909688: OUTPUT: «Method␤»

[19:49] *** cpage left
[19:49] <raschipi> At the moment I'm calling .^methods.kv and then indexing into the list. I tried with .grep but it complains that I'm stringfiying it.

[19:49] <Zoffix> (there's also .^can)

[19:49] *** cpage joined
[19:49] <Zoffix> raschipi: .^methods».name.grep

[19:49] <Zoffix> ^methods returns Method objects

[19:49] *** Khisanth left
[19:50] <Zoffix> (and they have .name method that returns a Str with their name)

[19:50] <Zoffix> buggable: pizza AlexDaniel 

[19:50] <buggable> AlexDaniel, enjoy this slice of Hawaiian pizza, my friend! Yummy 🍕

[19:50] <Zoffix> \o/

[19:50] * Zoffix relocates

[19:50] <AlexDaniel> \o/

[19:50] <raschipi> Thanks Zoffiz, find_method is exactly what I was looking for. 

[19:50] *** cpage__ joined
[19:51] *** cpage_ left
[19:51] *** cpage__ is now known as cpage_

[19:51] *** SCHAPiE joined
[19:51] <Skarsnik> .poke AlexDaniel 

[19:51] <AlexDaniel> ouch

[19:51] <jdv79> .tell moritz sup with the logs and unicode?

[19:51] <yoleaux> jdv79: I'll pass your message to moritz.

[19:51] <Skarsnik> .poke AlexDaniel with a pony plushie

[19:52] <perigrin> .pokémon

[19:52] <raschipi> m: say my &a = Str.^methods.grep(*.name eq 'encode')[0]

[19:52] <camelia> rakudo-moar 909688: OUTPUT: «encode␤»

[19:53] <Skarsnik> Good night people ^^

[19:53] *** devmikey joined
[19:54] <AlexDaniel> Skarsnik: good night!

[19:59] *** Skarsnik left
[20:01] *** Kyo91 joined
[20:02] *** Cabanossi left
[20:02] *** andrzejku left
[20:02] *** Khisanth joined
[20:04] *** setty1 joined
[20:05] *** Cabanossi joined
[20:13] *** AlexDani` joined
[20:15] *** mr-foobar left
[20:15] *** AlexDaniel left
[20:16] *** mr-foobar joined
[20:16] *** AlexDani` is now known as AlexDaniel

[20:17] <squashable6> 🍕 AlexDaniel++ closed issue “Using » in place of .map is a trap”: https://github.com/perl6/doc/issues/960

[20:17] <Geth> ¦ doc: 89751a5c28 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[20:17] <Geth> ¦ doc: Document » vs map trap

[20:17] <Geth> ¦ doc: 

[20:17] <Geth> ¦ doc: Resolves #960

[20:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/89751a5c28

[20:18] <AlexDaniel> trapathon :)

[20:21] <Geth> ¦ doc: 7c29082ecd | (Samantha McVey)++ | doc/Language/pod.pod6

[20:21] <Geth> ¦ doc: POD: explain how to create links to sections of current document

[20:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7c29082ecd

[20:21] <Geth> ¦ doc: 1a3e704183 | (Samantha McVey)++ | doc/Language/unicode.pod6

[20:21] <Geth> ¦ doc: Mention UTF8-C8 is used for filenames

[20:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1a3e704183

[20:23] <samcv> AlexDaniel, i'm guilty of that

[20:23] <samcv> m: "words".comb».trim.say

[20:23] <camelia> rakudo-moar 909688: OUTPUT: «(w o r d s)␤»

[20:23] <samcv> it appears to be the same on the surface

[20:25] *** telex left
[20:26] <AlexDaniel> samcv: I know!

[20:26] *** telex joined
[20:26] <raschipi> samcv: It won't have the same order if there are side effects.

[20:27] <raschipi> Execution is out of order, but the result isn't.

[20:27] <samcv> ah

[20:27] <samcv> ok that's what i thought raschipi 

[20:27] <samcv> AlexDaniel, maybe you should add that? output is same but execution can be out of order?

[20:27] <samcv> that wasn't totally clear

[20:28] <AlexDaniel> c: 2015.09 "words".comb».trim.say

[20:28] <committable6> AlexDaniel, ¦2015.09: «(w o r d s)»

[20:28] <AlexDaniel> c: 2015.09 "words".comb».trim».say

[20:28] <committable6> AlexDaniel, ¦2015.09: «w␤o␤r␤d␤s»

[20:28] <AlexDaniel> mhm

[20:28] <AlexDaniel> samcv: right, this example is totally fine as long as you don't ».say :)

[20:29] <samcv> yeah

[20:29] <raschipi> gather/take also has side effects

[20:29] <AlexDaniel> I don't know if it should be mentioned there. Those who know it are free to use »

[20:29] *** lizmat joined
[20:30] <AlexDaniel> I've seen execution/result order confusion on this channel a couple of times

[20:30] <raschipi> Is there any other issues besides the out-of-order execution and the deepmap semantics?

[20:30] <AlexDaniel> raschipi: I don't think so

[20:34] <raschipi> As it's already laid out in the hyperoperator docs, no need to repeat it in the traps section, just add a more explicit link telling people to look into those docs.

[20:36] <AlexDaniel> “Duplicate small pieces of information rather than rely on linking” https://github.com/perl6/doc/blob/master/CONTRIBUTING.md#general-principles

[20:36] <AlexDaniel> it stands by itself on the traps page

[20:36] <raschipi> Right, I stand corrected, then.

[20:39] *** bdmatatu joined
[20:41] <raschipi> Thinking about it now, it's good to list all issues in the traps page so that more experience users know if they need to study the thing more before using. Neither the .map or hyper pages have comparissons to each other, it's good to answer the question above (are these all the issues?) somewhere.

[20:42] <AlexDaniel> raschipi: what if there are more issues and we just don't know about them? :)

[20:43] <Geth> ¦ doc: 57e456de7a | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[20:43] <Geth> ¦ doc: Fix .lines/.split links

[20:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/57e456de7a

[20:43] <AlexDaniel> raschipi: but feel free to edit it the way you like

[20:43] <raschipi> I will once I get home.

[20:44] <AlexDaniel> raschipi++

[20:45] <MasterDuke> what's an example of something prohibited in regex interpolation unless `use MONKEY` is on?

[20:47] <samcv> nice i just got commit access to perl6-pod-to-markdown

[20:48] *** leont left
[20:48] *** Kyo91 left
[20:48] *** Cabanossi left
[20:49] *** lizmat left
[20:50] *** Cabanossi joined
[20:58] <AlexDaniel> MasterDuke: anything that breaks the “anon regex { … }” hack?

[20:58] <AlexDaniel> MasterDuke: we're talking about https://github.com/perl6/doc/issues/1429 right

[20:58] <AlexDaniel> MasterDuke: ?

[20:59] <MasterDuke> AlexDaniel: sortof

[21:00] *** lizmat joined
[21:00] <MasterDuke> i think there's a bug for the P5 regex flavor where you don't need `use MONKEY` when you are supposed to need it

[21:01] <MasterDuke> but i'm trying to figure out how to test

[21:01] <Geth> ¦ doc: e46f8374fe | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/operators.pod6

[21:02] <Geth> ¦ doc: Link to traps anyway

[21:02] <Geth> ¦ doc: 

[21:02] <Geth> ¦ doc: It's OK to have small pieces of information copied. However, traps

[21:02] <Geth> ¦ doc: section is a bit more elaborate on another issue (deepmap semantics),

[21:02] <Geth> ¦ doc: so a link is appropriate.

[21:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e46f8374fe

[21:06] *** skids left
[21:09] *** raschipi left
[21:20] *** TEttinger joined
[21:21] <jdv79> how many have joined the hackaton?

[21:21] <jdv79> oh, its tomorrow, right?  i can't cause holiday.

[21:23] <Zoffix> jdv79: it's on "Saturday" and in some parts it's already Saturday

[21:23] <Zoffix> squashable6: status

[21:23] <squashable6> Zoffix, 🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈14 hours

[21:23] <squashable6> Zoffix, Log and stats: https://gist.github.com/5ab4eaa09f6d7b95b0031ccb971a1796

[21:23] <Zoffix> jdv79: ^ that many people joined

[21:24] *** Sgeo joined
[21:25] <AlexDaniel> Zoffix: FWIW I like it this way. It's more flexible

[21:27] <AlexDaniel> by the way, we had 7000th commit to the doc repo today

[21:28] <jdv79> what is "unassigned"?

[21:28] <jdv79> there are way more tickets on that repo than all those cats added up

[21:30] <AlexDaniel> jdv79: that's when you unassign somebody who is assigned :)

[21:30] <jdv79> oh

[21:31] <AlexDaniel> jdv79: ah, I think I see what you're saying

[21:32] <AlexDaniel> jdv79: or maybe not, I'm not sure. These are the stats of the current squashathon, not what the current situation is in the repo. But I guess I misunderstood something?

[21:33] <jdv79> its ok i guess.  i read it as counts not actions.

[21:34] <jdv79> makes sense.  i had the wrong context.

[21:34] <jdv79> be cool if outsiders showed up

[21:35] *** niceperl joined
[21:35] <AlexDaniel> jdv79: anyway, created this issue so hopefully will make it less confusing later: https://github.com/perl6/whateverable/issues/222

[21:35] <jdv79> where is it sat and people could be awake?  japan and australia?

[21:36] <jdv79> cool

[21:36] <AlexDaniel> jdv79: well, UTC timesets range from -12 to +14 :)

[21:36] <AlexDaniel> time offsets*

[21:37] <Zoffix> AlexDaniel: \o/

[21:37] <AlexDaniel> by the way, maybe +14 is not used anymore

[21:37] <AlexDaniel> Zoffix: \o/ ? :)

[21:37] <Zoffix> AlexDaniel │ by the way, we had 7000th commit to the doc repo today

[21:37] <AlexDaniel> aw yeahhh \o/

[21:38] <jdv79> moarvm has moar

[21:38] <jdv79> doesn't seem to make sense

[21:38] <AlexDaniel> jdv79: we can fix that today :P

[21:39] <jdv79> 50K in parrot;)

[21:39] <jdv79> roughly double rakudo

[21:41] <jdv79> is the kernel the repo with the most commits at 693k?

[21:42] <Zoffix> And yeah, I too think it's working (the all-timezone-Saturday). Takes the pressure off. I can relax tonight and still SQUASH some more stuff tomorrow :)

[21:43] <AlexDaniel> yup

[21:44] <stmuk_> I'd say there are starting to be a lot more random twitter posts by people (zed shaw for example) and youtube videos for perl 6 now

[21:44] <stmuk_> eg. https://www.youtube.com/watch?v=W7wxTcUZ4eU

[21:44] <Zoffix> Great :)

[21:48] <jdv79> feels like a silent movie from the early 20th century

[21:49] <jdv79> different but fun presentation style

[21:49] *** bdmatatu left
[21:53] <stmuk_> yeah I was expecting to see a woman tied to a railway track by a man with a moustache

[21:56] *** Sgeo_ joined
[21:57] <Zoffix> "This method uses rakudobrew recommended by rakudo.org" ouch

[21:57] <AlexDaniel> m: my $x = ‘ailemac#’; say ‘I ♥ camelia’ ~~ /<{$x.flip}>/

[21:57] <camelia> rakudo-moar 909688: OUTPUT: «5===SORRY!5===␤Regex not terminated.␤at /home/camelia/EVAL_0:1␤------> 3anon regex { #camelia}7⏏5<EOL>␤Regex not terminated.␤at /home/camelia/EVAL_0:1␤------> 3anon regex { #camelia}7⏏5<EOL>␤Malformed regex␤at /home/cameli…»

[21:57] <AlexDaniel> why does it say “/home/bisectable/git/whateverable/EVAL_0” ?

[21:58] <AlexDaniel> does it actually create a temp file like this?

[21:58] <Zoffix> nah

[21:58] <Zoffix> m: 'foo'.EVAL

[21:58] <camelia> rakudo-moar 909688: OUTPUT: «5===SORRY!5=== Error while compiling /home/camelia/EVAL_0␤Undeclared routine:␤    foo used at line 1␤␤»

[21:58] <AlexDaniel> so that's a rakudobug?

[21:58] *** Sgeo left
[21:58] <Zoffix> I'd say sop

[21:59] *** Sgeo__ joined
[21:59] *** setty1 left
[22:00] <Zoffix> damn, the rakudo.org still recommends panda even

[22:00] <AlexDaniel> ok, RT #132015

[22:00] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132015

[22:00] <Zoffix> or maybe not... it was in the video, but don't see where on rakudo.org it is

[22:01] <Zoffix> ah, it's in rakudobrew repo

[22:02] <Zoffix> was :)

[22:02] *** Sgeo_ left
[22:02] <Zoffix> Gonna rewamp the rakudo.org download page to fix outdated stuff tomorrow, unless someone beats me

[22:07] <Zoffix> .in 18h fix rakudo.org download page, bruh

[22:07] <yoleaux> Zoffix: I'll remind you on 2 Sep 2017 16:07Z

[22:07] <Zoffix> botsnack

[22:07] <synopsebot6> om nom nom

[22:08] * Zoffix swats synopsebot6 with a newspaper

[22:08] <Zoffix> Bad robot!

[22:14] *** ChoHag left
[22:17] <Geth> ¦ doc: e4f84cb7f9 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[22:17] <Geth> ¦ doc: Document $() vs <{}> regex trap

[22:17] <Geth> ¦ doc: 

[22:17] <Geth> ¦ doc: Resolves #1429

[22:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e4f84cb7f9

[22:18] <squashable6> 🍕 AlexDaniel++ closed issue “Implicit EVAL in regexes (trap?)”: https://github.com/perl6/doc/issues/1429

[22:19] <AlexDaniel> hm, maybe I'm using curly quotes too frivolously

[22:27] *** lostinfog left
[22:27] <AlexDaniel> hm, we never link to RT tickets from docs?

[22:27] <AlexDaniel> why?

[22:29] <AlexDaniel> isn't it a bit unethical to say “here's a feature you can use” when we know it has a bug? I'm trying to resolve https://github.com/perl6/doc/issues/1474

[22:30] *** cdg_ joined
[22:34] *** cdg left
[22:34] <Geth> ¦ doc: 0affb676ac | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Supply.pod6

[22:34] <Geth> ¦ doc: Index Signal

[22:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0affb676ac

[22:34] <Geth> ¦ doc: 39e3efc08d | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Supply.pod6

[22:34] <Geth> ¦ doc: Mention and link a known bug with signals

[22:34] <Geth> ¦ doc: 

[22:34] <Geth> ¦ doc: Resolves #1474.

[22:34] <squashable6> 🍕 AlexDaniel++ closed issue “Numeric values of signals mean nothing (bug)”: https://github.com/perl6/doc/issues/1474

[22:34] <Geth> ¦ doc: 

[22:34] <Geth> ¦ doc: Feel free to revert if you think that we should not add links to

[22:35] <Geth> ¦ doc: rakudo tickets. If you do so, please reopen #1474.

[22:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/39e3efc08d

[22:36] <ugexe> if you're going to cross link docs to rt you might want to put the link in rt as well so that the doc gets fixed when the issue does

[22:36] *** cdg_ left
[22:37] <AlexDaniel> ugexe: ok makes sense

[22:37] <AlexDaniel> so when it's fixed, then what? We keep a “Note:” saying that versions of rakudo before 201*.** are known to have a bug?

[22:38] <Zoffix> Sounds like that best reserved for some separate resource

[22:39] <ugexe> well why list some bugs in the docs and not others?

[22:39] <AlexDaniel> correct… list all of them? :-|

[22:40] <ugexe> id say listing none of them in the docs makes the most sense personally

[22:40] <AlexDaniel> yeah, amazing solution. /o\

[22:41] <ugexe> i dont see the problem, so yeah

[22:42] <AlexDaniel> sorry, but, if we know that there's a fat bug somewhere, it's a bit irresponsible to push it to the user side saying “here, we have a list of 1500 bugs, go through the list to see if your code is going to work or not”

[22:43] <ugexe> if only it could somehow be organized without redundantly copying all the bugs into the docs...

[22:43] *** devmikey left
[22:43] <AlexDaniel> and if we document a feature saying “it does *this*”, then it is a blatant lie if we know that actually it doesn't work

[22:44] <AlexDaniel> we can always say that our docs are about perl 6 language and not rakudo, but this way we just get back to the “it's your problem” solution

[22:44] <AlexDaniel> which, let's admit, is less than awesome

[22:44] <ugexe> if you only have 2 choices, then i guess

[22:45] <ugexe> off the top of my head, i would say some type of index could be used and linked from each item in the docs. but thats just my 10 seconds of thought for a solution

[22:52] <Zoffix> AlexDaniel: I think the a flawed ingredient in that logic is assumption that all users read all the docs *each* time they use a feature. I think it's be fairly rare for a user to be reading about a feature they're about to use AND have a compiler that's old enough to still have that bug AND for the bug to be so innocuous that the user doesn't realize they might be using a buggy routine. That's quite a lot of

[22:52] <Zoffix> work to keep doing to add very little benefit IMO and some detriment (the extra information is competing with other things to be read). We already have a place with all the fixed bugs documented: the ChangeLog

[22:54] <Zoffix> buggable: tag TESTNEEDED

[22:54] <buggable> Zoffix, There are 41 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[22:54] *** silug joined
[22:54] <Zoffix> With 41 bugs still needed tests to cover it's perhaps extra unwanted load to also track all the bugs on docs

[22:55] * Zoffix calls it a day

[22:55] <Zoffix> \o

[22:55] <AlexDaniel> Zoffix: well, let's take Signal as an example. Possibly I didn't learn about it from our docs (I guess it wasn't documented back then), but let's assume somebody comes today to learn about it. It works fine for signals that have same numeric values on different operating systems, so most likely you won't notice it right away

[22:55] <AlexDaniel> in fact, I haven't noticed in… 2 years?

[22:56] <AlexDaniel> I do understand your “flawed ingredient” argument, but my solution works in practice today

[22:56] <Zoffix> OK :)

[22:56] <AlexDaniel> if today somebody comes to learn about Signal, they will also see that it doesn't work quite right. In this particular case the problem is solved

[22:57] <squashable6> 🍕 AlexDaniel++ opened issue “How to document rakudo bugs?”: https://github.com/perl6/doc/issues/1486

[22:57] <squashable6> 🍕 AlexDaniel++ labeled issue “How to document rakudo bugs?”: https://github.com/perl6/doc/issues/1486

[22:57] <AlexDaniel> anyway, here's a ticket if somebody wants to discuss it more ↑

[22:58] <Zoffix> Well, I'm changing my position. Let's try your way and see how it works out. If we find it not as useful as hoped, there's always an option of removing it.

[22:58] <Zoffix> night

[22:58] <Zoffix> \o

[22:58] <AlexDaniel> o/

[23:07] <AlexDaniel> buggable: bugs

[23:07] <buggable> AlexDaniel, Total: 1687; BUG: 1088; UNTAGGED: 401; LTA: 179; NYI: 95; REGEX: 68; RFC: 59; JVM: 58; CONC: 54; TESTNEEDED: 45; REGRESSION: 34; PERF: 28; UNI: 28; SEGV: 26; IO: 22; NATIVECALL: 22; @LARRY: 21; POD: 21; TODO: 18; PRECOMP: 14; OO: 12; BUILD: 11; TESTCOMMITTED: 11; OPTIMIZER: 10; STAR: 7; BOOTSTRAP: 5; PARSER: 5; REPL: 5; GLR: 4; MATH: 4; OSX: 4; WEIRD: 3; WINDOWS: 3; RT: 2; SPES

[23:07] *** niceperl left
[23:07] *** andreoss left
[23:11] <squashable6> 🍕 AlexDaniel++ wrote a comment on “How to document rakudo bugs?”: https://github.com/perl6/doc/issues/1486#issuecomment-326702191

[23:11] <squashable6> 🍕 AlexDaniel++ edited a comment on “How to document rakudo bugs?”: https://github.com/perl6/doc/issues/1486#issuecomment-326702191

[23:13] *** wamba left
[23:15] <samcv> oh nice! inlining MVM_string_get_grapheme_at_nocheck, so knuth_morris_pratt algo is 2x faster for flat strings and 40% faster for strands! woo

[23:15] <samcv> \o/

[23:15] <samcv> hadn't benchmarked strands, only had benched the flat strings

[23:17] <ugexe> if the solution is "read the docs" then yes, its a now solution

[23:23] *** grondilu_ joined
[23:25] *** grondilu left
[23:26] *** espadrine left
[23:28] *** cdg joined
[23:33] *** cdg left
[23:33] <samcv> going to make `eq` 2.5 as fast for comparing 32bit strings and an 8 bit strings

[23:33] <samcv> everything is getting faster :)

[23:33] <samcv> fasterrrrrrrrrrrrrrrrrrrrrrrrrrrr

[23:35] <samcv> now it uses an iterator but i'm going to have three different codepoints so it can either use two iterators if both are strands, use MVM_string_get_grapheme_at_nocheck, for both strings if both are flat, and if only one is flat, use an iterator for one and MVM_string_get_grapheme_at_nocheck, for the other

[23:42] *** skids joined
[23:42] *** cdg joined
[23:43] <squashable6> 🍕 AlexDaniel++ labeled issue “tell that subs and their…”: https://github.com/perl6/doc/issues/1478

[23:44] <squashable6> 🍕 AlexDaniel++ labeled issue “html build process tries…”: https://github.com/perl6/doc/issues/1480

[23:45] *** Rawriful left
[23:47] *** cdg left
[23:51] <samcv> and for eq for these other cases

[23:51] <samcv> 1.7 vs 3.0 (strand 32bit, flat 8bit); 1.5 to 2.6 (flat 32 bit, strand 8bit)

[23:51] <samcv> so 1.75x faster on average for one strand and one flat

[23:52] <samcv> 2.5x as fast for both being flat and different types. and as you (maybe) know, if they are both 8bit or both 32bit and both flat we use memcmp, but in 90% of cases that doesn't happen

[23:53] <squashable6> 🍕 AlexDaniel++ wrote a comment on “List method flatmap is inappropriately discouraged”: https://github.com/perl6/doc/issues/1428#issuecomment-326706326

[23:58] <squashable6> 🍕 AlexDaniel++ closed issue “List method flatmap is inappropriately discouraged”: https://github.com/perl6/doc/issues/1428

[23:58] <Geth> ¦ doc: 1b1d26a46a | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/List.pod6

[23:58] <Geth> ¦ doc: It's not bad practice, it's just discouraged

[23:58] <Geth> ¦ doc: 

[23:58] <Geth> ¦ doc: Resolves #1428.

[23:58] <Geth> ¦ doc: 

[23:58] <Geth> ¦ doc: Feel free to reopen if you have strong feelings about it.

[23:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b1d26a46a

