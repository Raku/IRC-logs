[00:00] *** BenGoldberg left
[00:04] *** troys_ is now known as troys

[00:05] *** Cabanossi left
[00:07] *** Cabanossi joined
[00:23] *** lookatme joined
[00:23] <lookatme> morning 

[00:23] <eveo> looking

[00:24] <lookatme> („ÄÇ„ÉªÀç„Éª„ÄÇ)

[00:24] <eveo> .tell zengargoyle your module issue is now fixed

[00:24] <yoleaux> eveo: I'll pass your message to zengargoyle.

[00:25] <eveo> huggable: donate

[00:25] <huggable> eveo, We invite you to make a donation to The Perl Foundation to sponsor Perl 6 development: https://donate.perlfoundation.org/ 

[00:25] <eveo> ;)

[00:25] *** eveo left
[00:26] *** kyan joined
[00:31] *** raschipi joined
[00:41] *** sammers left
[00:44] *** mcmillhj joined
[00:48] *** mcmillhj left
[00:49] *** sacomo joined
[00:51] *** raschipi left
[00:52] *** geekosaur left
[00:53] *** geekosaur joined
[00:57] *** araujo left
[01:02] *** Actualeyes joined
[01:04] *** Cabanossi left
[01:07] *** Cabanossi joined
[01:18] *** aborazmeh joined
[01:18] *** aborazmeh left
[01:18] *** aborazmeh joined
[01:29] *** mcmillhj joined
[01:33] *** mcmillhj left
[01:45] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:49] *** mcmillhj joined
[01:53] *** mcmillhj left
[01:55] *** colomon joined
[02:04] *** troys is now known as troys_

[02:05] *** Cabanossi left
[02:07] *** Cabanossi joined
[02:12] *** mcmillhj joined
[02:17] *** mcmillhj left
[02:30] *** troys_ is now known as troys

[02:33] *** noganex joined
[02:35] *** Cabanossi left
[02:35] *** AlexDaniel left
[02:36] *** pilne left
[02:36] *** noganex_ left
[02:37] *** Cabanossi joined
[02:39] *** colomon left
[02:43] <llfourn> I can't travel to the US and do my TPC talk on my Perl 6 project :'( üò¢

[02:44] <llfourn> The DHS has denied my ESTA application because I went backpacking in Iran for two weeks in 2013

[02:44] <llfourn> sad sad times.

[03:01] *** kurahaupo joined
[03:02] *** kurahaupo_ left
[03:02] <lookatme> :\

[03:08] *** kurahaupo left
[03:08] *** kurahaupo joined
[03:09] *** kurahaupo_ joined
[03:09] *** kurahaupo_ left
[03:09] *** kurahaupo_ joined
[03:10] *** kurahaupo left
[03:11] *** kurahaupo joined
[03:11] *** kurahaupo left
[03:11] *** kurahaupo_ left
[03:15] *** cyphase left
[03:35] *** cyphase joined
[03:38] *** cyphase left
[03:39] *** cyphase joined
[03:41] *** BenGoldberg joined
[03:49] *** Cabanossi left
[03:51] *** Cabanossi joined
[04:02] *** raiph left
[04:21] *** cyphase left
[04:26] *** keylet_ left
[04:26] *** cyphase joined
[04:27] *** keylet left
[04:29] *** cyphase left
[04:30] *** cyphase joined
[04:33] *** kurahaupo joined
[04:35] *** BenGoldberg left
[04:42] *** aborazmeh left
[04:44] *** curan joined
[04:49] *** Cabanossi left
[04:51] *** Cabanossi joined
[04:58] *** wamba joined
[05:00] *** troys left
[05:33] *** Cabanossi left
[05:36] *** Cabanossi joined
[05:41] *** xtreak joined
[05:43] *** ChoHag left
[05:44] *** ChoHag joined
[05:52] *** AndroUser2 joined
[05:59] *** domidumont joined
[06:03] <samcv> :(

[06:04] *** domidumont left
[06:05] *** domidumont joined
[06:10] * llfourn applies to talk to TPC-EU instead

[06:11] <samcv> not sure if i'm going to go to TPC-EU and give a talk. never given a talk before though :P

[06:11] <samcv> a little nervous

[06:15] <llfourn> samcv: I think today is the last day of proposals

[06:16] <samcv> is it?

[06:16] <samcv> who do i talk to

[06:16] <llfourn> http://act.perlconference.org/tpc-2017-amsterdam/

[06:17] <llfourn> description: http://act.perlconference.org/tpc-2017-amsterdam/call-for-papers.html

[06:17] <llfourn> do it! :)

[06:17] *** xtreak left
[06:18] *** xtreak joined
[06:18] <samcv> :) i should heh

[06:19] <samcv> thing is what to talk about. and make it interesting and useful for programmings. cause i could ramble for a long time about random unicode things that people may not care about :P

[06:19] *** xtreak left
[06:20] *** xtreak joined
[06:20] *** domidumont left
[06:21] <llfourn> samcv: I think I low level MoarVM strings thing would be cool

[06:22] <llfourn> how to match the fast while keeping the encoding-less representation

[06:22] <llfourn> or however it works (I don't even know that's why I'm interested :P)

[06:23] <llfourn> how to do matches fast*

[06:24] <samcv> like regex?

[06:25] <llfourn> yeah like how are strings represented in MoarVM and what are the challenges of doing matching/searching etc

[06:25] <samcv> yeah would be cool to talk about the improvements i did to regex with unicode. ignorecase and ignorecase+ignoremark as well :)

[06:25] <llfourn> yeah!

[06:26] <samcv> i keep thinking i'm not doing that much. then occasionally remember that i've done very important things :|

[06:26] <samcv> feels like i've done less until i actually write it all down and read it lol

[06:27] <llfourn> would be good to hear about them seeing as we don't see them as high level language constructs

[06:27] <samcv> yeah

[06:27] *** vendethiel left
[06:27] <samcv> cool. yeah i'm not sure exactly what is interesting to people :P i know it was interesting to me at least heh.

[06:31] <llfourn> samcv: as a user of perl6 I wonder about immutablility of strings as well

[06:32] <samcv> they are immutable on the MoarVM level

[06:32] <llfourn> so if I do "foo".substr(1) does that create a new string "oo" in memory or just give me a view of the original string

[06:32] <samcv> when you change a my Str $stringy = 'hi'; $stringy = 'foo'; you're just setting a different string to be stored in the scalar

[06:33] <samcv> it creates a new string

[06:33] <llfourn> ah ok

[06:33] <samcv> almost certain at least‚Ä¶ don't remember something super fancy like having strings inside other strings :P

[06:33] *** Cabanossi left
[06:34] <samcv> let me check :P

[06:34] <llfourn> I would have guessed that it creates a new one but since they're immutable I thought there could be some optimization that just gives you a high level view of a section of the same bit of memory

[06:35] <llfourn> are strings even stored in contiguous memory?

[06:35] <samcv> there are things called strands, basically strings get based up of multiple substrings, chained together

[06:36] <lookatme> Will there has something like Copy-on-Write ?

[06:36] *** Cabanossi joined
[06:36] <samcv> one thing for optimization that is planned idk when. but to be able to search throug hstrings without folding the strands but right now it folds them before it does regex on it

[06:37] <llfourn> mm these types of things would be really interesting to me in a talk

[06:37] <llfourn> (not that I speak for everything)

[06:37] <llfourn> everyone*

[06:37] <samcv> at actually

[06:37] <samcv> subst doesn't make a new string

[06:37] <samcv> it makes a strand

[06:38] <llfourn> do you mena substr?

[06:38] <samcv> yep

[06:38] <llfourn> ah k cool

[06:38] <samcv> so it's a view of the other string

[06:38] <llfourn> ahh awesome

[06:39] <samcv> also uh there's optimizations when you do repititions too

[06:39] <llfourn> because I use it in my grammar while parsing to make a .substr of the .orig often and if it were copying memory it would be terrible but it seems ok

[06:39] <samcv> if you try and substr a repitition it collapses the strands coping them

[06:39] <samcv> *copying

[06:39] <samcv> yeah i'm sure hah

[06:40] <samcv> idk did i do a blog about my change to case insensitive regex. i think i did

[06:40] <samcv> well. actually non-case insensitive too. i changed that to use memmem which has string search algorithms and sped it up a lot

[06:41] <samcv> case insensitive doesn't have that since it's can't just search for one section of memory (needle) inside another (haystack)

[06:41] <llfourn> I was wondering about that -- if we use musl libc instead of glibc could that be bad?

[06:41] <samcv> oh yeah i did one about case insensitive optimizations i did https://cry.nu/perl6/indexing-unicode-things/

[06:41] <llfourn> for performance in those cases

[06:42] <samcv> well. hm

[06:42] <samcv> windows and mac we use freebsd's memmem

[06:42] <llfourn> (I am right now building minimal rakudo on alpine linux)

[06:42] <samcv> theirs looks like freebsd's memmem

[06:43] <samcv> https://github.com/esmil/musl/blob/master/src/string/memmem.c

[06:43] <samcv> and looks like it's compatible with glibc's way of sourcing it

[06:43] <samcv> with _GNU_SOURCE

[06:43] <samcv> with glibc you have to define _GNU_SOURCE to be able to use memmem because it's not standard. though. i don't like that flag because freebsd libc also has memmem too..

[06:44] *** AndroUser2 left
[06:44] <samcv> glibc is kind of pretends they're the only libc that exists

[06:44] <samcv> at times

[06:45] <Xliff> samcv++

[06:45] <Xliff> Too true.

[06:45] <Xliff> And I find this interesting, as well.

[06:45] <samcv> gonna compare musl's memmem.c to the freebd one we include

[06:45] <samcv> gonna add this to my bulletpoints i'm making for talk :P

[06:45] <samcv> are you going to be at the EU conf?

[06:45] <llfourn> samcv++ nice. Thanks.

[06:55] *** domidumont joined
[07:20] <nebuchadnezzar> \o/ I found the blog posts about distribution I was looking for: http://ugexe.com/perl6-distribution-thoughts-and-proposals/ and http://ugexe.com/how-zef-perl6-package-manager-works/

[07:26] *** parv joined
[07:30] *** nadim_ joined
[07:30] *** ufobat joined
[07:33] *** BrassLantern joined
[07:34] *** Cabanossi left
[07:36] *** Cabanossi joined
[07:36] <samcv> llfourn, can you try installing this https://github.com/samcv/perl6-Font-QueryInfo before i publish it to ecosystem in a few minutes

[07:36] <samcv> want to make sure it passes all tests on another system

[07:37] <llfourn> samcv: rgr

[07:37] *** BrassLantern left
[07:38] <llfourn> I found out recently that there's no support for color emojis on Linux distros :(

[07:39] <samcv> it works for me in QupZilla

[07:39] *** sivoais left
[07:39] <llfourn> ah is that the mozilla thing?

[07:39] <samcv> nope

[07:39] *** dakkar joined
[07:40] <samcv> it's my preferred browser now. light weight but has all the features i need

[07:40] <llfourn> ah it's a browser -- yeah I mean like in my terminal

[07:40] <lookatme> `PERL6LIB=lib prove --exec=perl6 t/` : PASS on fedora 25

[07:40] <llfourn> like gnome terminal or whatever

[07:40] <samcv> even has greasemonkey. it uses qtwebengine for rendering

[07:40] *** sivoais joined
[07:40] <samcv> but is a ton less heavy than chromium since the codebase is way smaller

[07:40] <samcv> all videos play. even supports netflix

[07:40] <llfourn> samcv: all tests pass and installed fine

[07:40] <samcv> i just discovered it recently

[07:40] <samcv> cool :)

[07:40] <samcv> has adblock too

[07:40] <llfourn> samcv: that sounds pretty handy

[07:41] <samcv> yeah. install it and give it a whirl. in the settings there's extensions you can enable.

[07:41] <samcv> it's the only non-standard browser which has all the features i need and is light weight. looks great

[07:42] <samcv> adblock. greasemonkey scripts for a few sites i have. uhm. even has a tree tab manager you can enable.

[07:42] <llfourn> samcv: it has its own JS engine?

[07:43] <samcv> it uses chromium's backend. but only certain parts. like the js engine and such

[07:43] <llfourn> cool

[07:43] <samcv> i'm super impressed with it. was 5x better than i had hoped :)

[07:43] <samcv> you installing it?

[07:44] <samcv> what distro do you have

[07:44] <llfourn> I will install it on my linux-mint laptop :)

[07:44] <llfourn> right now on my imac

[07:51] *** fatguy joined
[07:54] *** AndroUser2 joined
[08:02] *** jonas2 joined
[08:04] *** wamba left
[08:04] *** Cabanossi left
[08:06] *** Cabanossi joined
[08:12] *** AndroUser2 left
[08:12] *** AndroUser2 joined
[08:21] *** nattefrost joined
[08:22] *** ufobat left
[08:24] *** rindolf joined
[08:25] *** nadim_ left
[08:25] *** cognominal left
[08:25] *** nadim_ joined
[08:29] <parv> llfourn, samcv: when you installed qupzilla, was it still built with dbus?

[08:30] <llfourn> parv: I've yet to install it :)

[08:30] <parv> freebsd package is compiled by default with dbus. I currently have no qt[45] which qz will pull in.

[08:30] <parv> llfourn: oh! sorry to bother you then.

[08:31] *** titsuki left
[08:34] *** robertle_ joined
[08:42] <samcv> parv, yeah it requires qt5 because it uses qtwebengine as a backend. you don't have qt5?

[08:43] <parv> samcv: i have no qt of any vintage yet. (FreeBSD has the packages & ports for bith qt4 & qt5)

[08:43] <parv> s/both/bith/

[08:44] <parv> nope, nope. that's not how that works! (BAKA!)

[08:45] *** geekosaur left
[08:46] *** geekosaur joined
[08:51] *** ChoHag left
[08:52] *** kurahaupo_ joined
[08:53] *** lowbro joined
[08:53] *** lowbro left
[08:53] *** lowbro joined
[08:54] *** zacts left
[08:55] *** kurahaupo left
[09:00] *** fatguy left
[09:02] *** wamba joined
[09:05] *** nadim_ left
[09:11] *** zacts joined
[09:11] *** ufobat joined
[09:12] *** Cabanossi left
[09:12] *** Cabanossi joined
[09:13] *** ufobat left
[09:15] *** xtreak left
[09:15] *** xtreak joined
[09:18] *** nadim_ joined
[09:19] *** xtreak left
[09:19] *** bugbug joined
[09:19] *** xtreak joined
[09:20] *** zakharyas joined
[09:33] *** AndroUser2 left
[09:33] *** lookatme left
[09:35] *** |oLa| joined
[09:39] *** parv left
[09:39] *** ChoHag joined
[09:42] <Geth> ¬¶ ecosystem: samcv++ created pull request #347: Add Font::QueryInfo

[09:42] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/347

[09:44] *** wamba left
[09:46] *** nadim_ left
[09:46] *** xtreak left
[09:47] *** nadim_ joined
[10:06] *** xtreak joined
[10:07] <zengargoyle> zomg! http://blog.plover.com/math/telugu.html

[10:07] <yoleaux> 00:24Z <eveo> zengargoyle: your module issue is now fixed

[10:08] <zengargoyle> Base-4 fractions in Telugu

[10:09] <zengargoyle> .tell eveo yay, thanks much.

[10:09] <yoleaux> zengargoyle: I'll pass your message to eveo.

[10:13] <Geth> ¬¶ ecosystem: a17052d375 | (Samantha McVey)++ | META.list

[10:13] <Geth> ¬¶ ecosystem: Add Font::QueryInfo

[10:13] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/a17052d375

[10:13] <Geth> ¬¶ ecosystem: 11f66d6d1a | Altai-man++ (committed using GitHub Web editor) | META.list

[10:13] <Geth> ¬¶ ecosystem: Merge pull request #347 from samcv/Font-QueryInfo

[10:13] <Geth> ¬¶ ecosystem: 

[10:13] <Geth> ¬¶ ecosystem: Add Font::QueryInfo

[10:13] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/11f66d6d1a

[10:15] <llfourn> samcv: is it possible to use that to tell if the font supports color emojis?

[10:15] <llfourn> or to tell which emojis it supports

[10:15] <llfourn> m: say "\c[SQUID]" # for example

[10:16] <camelia> rakudo-moar c6b03c: OUTPUT: ¬´ü¶ë‚ê§¬ª

[10:17] *** wamba joined
[10:25] <samcv> llfourn, idk

[10:26] <llfourn> samcv: kay :)

[10:27] <samcv> llfourn, do you have Noto Color Emoji instaled?

[10:27] *** wamba left
[10:27] <llfourn> samcv: I'm using OS X for now

[10:28] <samcv> ah

[10:28] <samcv> does OS X have fc-scan

[10:28] <llfourn> yup

[10:29] *** zakharyas left
[10:30] <llfourn> I suppose the best way is just to check the platform and guess

[10:30] <llfourn> given that linux doesn't support color emojis in any terminals yet

[10:32] *** TEttinger left
[10:36] <llfourn> ah no someone seems to have got Noto Color emoji working on arch: https://github.com/googlei18n/noto-emoji/issues/36

[10:36] <samcv> u: butterfly

[10:36] <unicodable6> samcv, U+1F98B BUTTERFLY [So] (ü¶ã)

[10:36] <samcv> works for me in qupzilla

[10:37] <samcv> i'm not on arch. but I have Noto Color Emoji installed

[10:37] <samcv> doesn't work in my irc program but works there

[10:37] <llfourn> yeah I'm interested in terminal emulators only pretty much

[10:40] <samcv> ah

[10:44] * zengargoyle wonders if there's an atom based terminal yet. :)

[10:45] *** notbenh left
[10:45] <llfourn> zengargoyle: does atom support emoji?

[10:45] <llfourn> (color emoji builtin is what I mean)

[10:46] <zengargoyle> i thought atom was basically a web browser that's been turned into a node application wrapper.  seems likely that it would support anything any other web browser does.

[10:47] *** notbenh joined
[10:47] <llfourn> I think it's based on electron which is node but I dunno if it has chrome components in it

[10:47] * zengargoyle hasn't tried anything atom based.  just idly pondering.

[10:49] <zengargoyle> yeah probably meant electron, atom is just the editor right?

[10:49] <llfourn> electron is some way of building graphical things in node I think

[10:51] <zengargoyle> i think the graphics part is that it's basically just a browser engine (chromium or webkit or something) doing the rendering.  and full blown node instead of just a js interpreter.

[10:52] *** cyphase left
[10:52] <rightfold> m: my $Í±∏ = 1

[10:52] <camelia> rakudo-moar 7e8bac: ( no output )

[10:52] <llfourn> zengargoyle: sounds probable

[10:52] <rightfold> m: my $Ÿäÿ™Ÿä = 1

[10:52] <camelia> rakudo-moar 7e8bac: ( no output )

[10:52] <zengargoyle> if they can make an editor, somebody might eventually write a terminal.  (my thinking)

[10:53] <rightfold> m: my $i-am-dutch = ‚ÄûHallo, wereld!‚Äù

[10:53] <camelia> rakudo-moar 7e8bac: ( no output )

[10:54] <llfourn> zengargoyle: https://hyper.is/ # this?

[10:54] <rightfold> m: my $i-am-french = ¬´Bonjour, le monde !¬ª

[10:54] <camelia> rakudo-moar 7e8bac: ( no output )

[10:55] <rightfold> m: my $i-am-french = ¬´Bonjour, le monde !¬ª; $i-am-french.perl.say

[10:55] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´$("Bonjour,", "le", "monde", "!")‚ê§¬ª

[10:55] <rightfold> >:(

[10:55] <llfourn> zengargoyle: I'll check if it does emojis on linux. Thanks for imagining it into existence.

[10:57] *** cyphase joined
[11:00] *** zakharyas joined
[11:00] <zengargoyle> bah, b/w emoji (at least from cut-n-paste from browser).

[11:01] <llfourn> :(

[11:01] <llfourn> maybe there's a way of changing it's font?

[11:01] <zengargoyle> maybe a plugin or something, yeah, or config.

[11:01] <llfourn> zengargoyle: https://hyper.is/

[11:02] <llfourn> check it out

[11:02] <llfourn> "fontFamily"

[11:03] *** wamba joined
[11:08] *** gregf_ joined
[11:18] *** aborazmeh joined
[11:18] *** aborazmeh left
[11:18] *** aborazmeh joined
[11:23] *** xtreak left
[11:25] *** aborazmeh left
[11:30] *** aborazmeh joined
[11:30] *** aborazmeh left
[11:30] *** aborazmeh joined
[11:31] *** pmurias joined
[11:32] <pmurias> zengargoyle: electron is the node.js+displaying-stuff-on-chrome that atom uses

[11:32] * pmurias needs to try using rakudo.js with electron

[11:34] *** Ven joined
[11:35] <Ven> o/

[11:35] <yoleaux> 18 Mar 2017 14:31Z <IOninja> Ven: the contributors tool uses "ven" for, I assume, you. Probably needs more fields for you in the CREDITS file, unless you wanted to go as ven?

[11:35] *** Ven is now known as Guest35387

[11:35] <Guest35387> well, the bigger issue is that I had 3s after login to get this message...

[11:35] *** Guest35387 is now known as Ven``

[11:35] <pmurias> \o

[11:36] <Ven``> .tell IOninja that's "weird", I assumed it'd use vendethiel, my github nickname?

[11:36] <yoleaux> Ven``: I'll pass your message to IOninja.

[11:36] <Ven``> pmurias: amazing work on the JS backend :D.

[11:36] *** dakkar left
[11:36] <Ven``> I recently realized you worked on some common lisp backend ~5 years ago?

[11:37] <Ven``> I think it was on niecza

[11:38] <pmurias> yes, it was a project for uni for our common lisp class ;)

[11:39] <Ven``> you had a common lisp class? sounds cool. seems like it didn't survive afterwards?

[11:39] <Ven``> .oO( clearly we should bring method combinations to Perl 6 )

[11:41] <pmurias> Ven``: the class sucked pretty badly from what I remember, students where presenting stuff about common lisp and there where presentations like "here are all the maths functions"

[11:41] *** Cabanossi left
[11:41] <Ven``> pmurias: Ah. That's too bad, I think it could really be interesting...

[11:42] <Ven``> trying to get my school to add a lisp class sounds like a challenge.

[11:44] *** Cabanossi joined
[11:48] <pmurias> Ven``: the common lisp backend as far as I remember was pretty fast for some things, but the whole common lisp ecosystem/libraries didn't seem that interesting for Perl 6 to integrate with

[11:49] *** dakkar joined
[11:49] <Ven``> oh, no, I understand what you mean. a lot of it is cffi... it's just a "woo lisp" stupid feeling :-)

[11:54] <pmurias> hopefully we will be able to mix closurescript with perl 6 soon

[11:55] *** zakharyas left
[11:55] <zengargoyle> i think http://modules.perl6.org/todo/zengargoyle  is going a bit wonky.  i made sure to put tags in META and add a MANIFEST file over the past few days.  my modules dissapear from the todo page, then re-appear with the "dist has no MANIFEST" warning.  they most certainly do have a MANIFEST.  the 'view build log' doesn't give any clue.  it's just like on one run they pass clean and the next they get a 

[11:55] <zengargoyle> warning.

[11:59] <Ven``> pmurias: I'm really interested in getting to use the nice cljs libs (react-like stuff and others) in p6

[11:59] <Xliff> m: '$_.map({ $_.meta<provides>.keys.say }) if $_ ~~ Seq for $*REPO.repo-chain.grep(CompUnit::Repository::Installable)>>.installed

[11:59] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in single quotes; couldn't find final "'" ‚ê§at <tmp>:1‚ê§------> 3it::Repository::Installable)>>.installed7‚èè5<EOL>‚ê§    expecting any of:‚ê§        single quotes‚ê§      ‚Ä¶¬ª

[12:00] <Xliff> m: $_.map({ $_.meta<provides>.keys.say }) if $_ ~~ Seq for $*REPO.repo-chain.grep(CompUnit::Repository::Installable)>>.installed

[12:00] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´(Inline::Perl5)‚ê§(Pod::To::Text NativeCall::Types experimental newline NativeCall::Compiler::GNU NativeCall::Compiler::MSVC NativeCall CompUnit::Repository::Staging Test)‚ê§¬ª

[12:00] <Xliff> YES!

[12:00] <Ven``> I mean, I guess you can somewhat interface P6 with clojure itself via the jvm (... and common lisp via ABCL), but I know a lot of people waiting for p6 in the browser

[12:05] <Xliff> Will Qupzilla install for Debian?

[12:07] <Xliff> Answer: YES!

[12:08] <Xliff> "OpenGL Warning: glXCreatePbuffer not implemented by Chromium" -- SOB!

[12:08] <Xliff> I will have to dual boot to the Debian side instead of using the VM

[12:18] <eater> m: $*OUT.encoding: Nil;

[12:18] <camelia> rakudo-moar 7e8bac: ( no output )

[12:18] <eater> bisect: $*OUT.encoding: Nil;

[12:18] *** lowbro left
[12:20] *** colomon joined
[12:20] *** bisectable6 left
[12:21] <eater> :(

[12:21] <eater> did I break it

[12:21] <lizmat> naughty naughty  :-)

[12:22] <samcv> is there a way to create non string value keys with the %( ) 

[12:22] <samcv> :%( ) and %:( ) don't work. i want :{ } except with %( ) syntax

[12:22] <jnthn> samcv: No

[12:22] <samcv> should there be?

[12:22] <jnthn> Why not use :{ ... }

[12:23] <jnthn> % is a conextalizer, not a hash literal

[12:23] <jnthn> It's primary purpose is for turning something else into a hash, not as a way of writing one

[12:23] <samcv> i know. well %( ) is better than { } since it won't accidently create a block. so i was wondering if there was something like %( ) but would allow non string keys

[12:24] <timotimo> Hash[Any,Any].new(...) maybe?

[12:24] <jnthn> Does :{...} ever fall back to creating a block?

[12:24] <timotimo> i don't think it can, though

[12:24] <timotimo> m: say :{ $_ }

[12:24] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´-> ;; $_? is raw { #`(Block|48337688) ... }‚ê§¬ª

[12:25] <timotimo> well, i'm wrong :)

[12:25] <samcv> yep

[12:25] * llfourn learns that :{ ... } is a thing

[12:26] <lizmat> m: dd :{}

[12:26] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´:{}‚ê§¬ª

[12:26] <lizmat> hmmm

[12:26] <samcv> %( ) is the safest way to make a hash imo

[12:27] <Ven``> pmurias: https://github.com/perl6/nqp/compare/cabe421f02...be2279d34b#diff-15c5b4c6f757ed54da181d4639921d11R225

[12:27] <lizmat> fwiw, I'm not sure :{} is such a good thing to have.  It overloads : with YAT

[12:28] <samcv> i would be inclined to agree

[12:28] <samcv> m: " { 'abc' => '123' } ".EVAL.say

[12:28] *** paule32 left
[12:28] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´Resource temporarily unavailable¬ª

[12:29] <samcv> evalable6, " { 'abc' => '123' } ".EVAL.say

[12:29] <[Coke]> 265 open doc issues

[12:29] <samcv> m: " { 'abc' => '123' } ".EVAL.say # OUTPUT Undeclared routine:

[12:29] <samcv> abc used 

[12:29] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´5===SORRY!5=== Error while compiling /home/camelia/EVAL_0‚ê§Undeclared routine:‚ê§    abc used at line 1. Did you mean 'abs'?‚ê§‚ê§¬ª

[12:29] <samcv> heh

[12:30] <samcv> m: " %( 'abc' => '123' ) ".EVAL.say

[12:30] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´{abc => 123}‚ê§¬ª

[12:30] <samcv> this works fine

[12:30] <samcv> %( ) is obviously superior :)

[12:30] *** lowbro joined
[12:31] *** lowbro left
[12:31] *** lowbro joined
[12:31] <samcv> oh. my bad. interpolation

[12:31] <samcv> but also it's still better :P

[12:31] <samcv> i need to go to bed...

[12:32] *** evalable6 left
[12:32] *** paule32 joined
[12:33] <samcv> also { } is slower than %( )

[12:33] <Geth> ¬¶ doc: e36f5aae61 | (Jan-Olof Hendig)++ | xt/code.pws

[12:33] <Geth> ¬¶ doc: Added missing words

[12:33] <Geth> ¬¶ doc: 

[12:33] <Geth> ¬¶ doc: Fixes #1375

[12:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e36f5aae61

[12:33] <samcv> by a tiny bit

[12:33] <samcv> 15% slower using EVAL

[12:33] <[Coke]> dogbert17++

[12:34] <samcv> night everyone! bed &

[12:35] <Xliff> Ah. Upgrading debian can be such fun.

[12:37] *** xtreak joined
[12:41] <timotimo> nuke it from orbit, build it fresh

[12:46] *** xtreak left
[12:47] <perlawhirl> m: my $a=DateTime.now;my $b=DateTime.new('2012-02-29T12:34:56Z');my $c=DateTime.new('2012-02-29T12:34:56.789Z');($a,$b,$c).map(*.second.^name).say

[12:47] <camelia> rakudo-moar 7e8bac: OUTPUT: ¬´(Num Int Rat)‚ê§¬ª

[12:47] *** xtreak joined
[12:47] <perlawhirl> I know there's *.whole-second.... but that seems wrong

[12:50] <tyil> Xliff: just switch to gentoo

[12:52] *** araraloren joined
[12:52] <araraloren> evening

[12:53] *** xtreak left
[12:54] <Xliff> timotimo: Why do you h8 me? ;p

[12:54] <Xliff> til: You too! :P

[12:54] <Xliff> s/til/tyil/

[12:54] <Xliff> And that... means bedtime for me

[12:54] <tyil> gentoo is less pain than debian :>

[12:54] <Xliff> Hrm.

[12:54] <Xliff> Mebbe.

[12:54] <Xliff> But I think my problems stems more from VirtualBox than debian.

[12:54] <tyil> oh

[12:54] <Xliff> yah

[12:54] <tyil> use qemu

[12:55] <tyil> ;)

[12:55] <Xliff> :P

[12:55] *** mcmillhj joined
[12:55] <Xliff> <whine>But I have mostly tamed this Debian....</whine>

[12:55] <timotimo> memories of revdep rebuild

[12:55] <Xliff> I don't know if VMs will port. I highly doubt it.

[12:55] *** xtreak joined
[12:55] <tyil> stay positive

[12:56] <Xliff> However, I may try it.

[12:56] <tyil> thats important when doing sysadmin

[12:56] <Xliff> I know. I know. 

[12:56] <Xliff> But this is my home box. I get to be frustrated.

[12:56] <tyil> use funtoo then, its less prone to breaking and will give you a debian kernel

[12:56] <tyil> precompiled

[12:56] <tyil> i.e.: a kernel that works for most things by default

[12:56] <Xliff> I'm finding it hard to take a distro called "funtoo" seriously.

[12:56] <tyil> :p

[12:56] <Xliff> *giggle*

[12:57] <timotimo> fork it and build "untoo"

[12:57] <Xliff> LOL

[12:57] <tyil> Funtoo is a spin-off from Gentoo by Gentoo's creator

[12:57] <Xliff> Does Funtoo speak apt?

[12:57] *** colomon left
[12:58] *** |oLa|1 joined
[12:58] <tyil> cant find apt in the repos

[12:58] <tyil> there's yum and pacman, but apparently apt was too shit :'3

[12:58] <Xliff> :P

[12:58] <Xliff> Oh ghod. Another source based package manager.

[12:58] <Xliff> I've had enough of that with FreeBSD

[12:58] <tyil> freebsd has a binary one too tho

[12:59] <tyil> sabayon is gentoo with binary packages

[12:59] <Xliff> Yeees. I know. ;p

[12:59] <tyil> but it also comes with systemd

[12:59] <mst> if you don't like source code, I recommend windows 10

[12:59] <Xliff> If I really wanted to squeak every last drop out of the bare metal. I'd do it.

[12:59] <tyil> mst: watch your language pls

[12:59] <tyil> this is a friendly channel

[12:59] <Xliff> mst: :P~~~~~~~~~

[12:59] <Xliff> tyil++

[12:59] <mst> tyil: please learn to spell please, this is a language channel

[13:00] *** AndroUser2 joined
[13:00] <tyil> should make a perl bot to keep track of nick++ scores :p

[13:00] <tyil> mst: a friendly language channel then?

[13:00] *** |oLa| left
[13:00] *** xtreak left
[13:00] <Xliff> A meaningless but fun exercise.

[13:00] <mst> generally, yes, right up until you failed to get the joke :D

[13:00] <mst> huh

[13:00] <tyil> :(

[13:00] <tyil> make easier jokes pls

[13:00] <Xliff> tyil: Pay no attention to mst. He's a grump.

[13:01] <tyil> so am I most of the time

[13:01] <tyil> :>

[13:01] <mst> apparently all the karma handling infrastructure is only on #perl

[13:01] <Xliff> heh

[13:01] <tyil> but perl 6 has made my life better

[13:01] <tyil> now I'm happy and got a gf, all thanks to perl 6

[13:01] <tyil> 11/10 would recommend to my friends

[13:01] <Xliff> And I am !sleep, so I'm probably no better.

[13:01] <tyil> Xliff: gn m8

[13:01] <Xliff> nn

[13:02] *** AndroUser2 left
[13:02] *** AndroUser2 joined
[13:02] <mst> I'm sure zoffix will write seven bots to do it one weekend

[13:03] <tyil> hot

[13:03] <tyil> is there a decent perl 6 syntax plugin for vim?

[13:04] <[Coke]> tyil - there IS a syntax plugin. I haven't used it lately.

[13:04] <tyil> sweet

[13:04] <tyil> can I get a link?

[13:05] <[Coke]> tyil: https://github.com/vim-perl/vim-perl

[13:05] <tyil> atom is fun and all but its terribly slow

[13:05] <tyil> and I only have 16gb ram

[13:05] <[Coke]> oops, it was split: https://github.com/vim-perl/vim-perl6

[13:05] <tyil> ah

[13:05] <tyil> that explains, i already had vim-perl

[13:06] <araraloren> have you tried vscode

[13:06] <eater> should 'hex' be an acceptable encoding? in Str.encode and Blob.decode? ü§î

[13:06] <tyil> isnt that just atom reskinned by microshit?

[13:07] <eater> vscode is pretty ok

[13:07] <tyil> pls no cursing

[13:07] *** zakharyas joined
[13:07] * [Coke] is confused by tyil telling himself not to curse.

[13:08] <tyil> Ive tried many editors, but vim always comes out on top

[13:08] <araraloren> :) yeah, that why I love emacs

[13:08] <araraloren> s/that/that's/

[13:09] <llfourn> eater: hex isn't a character encoding - you'd have to encode as utf8 and then print out the hex

[13:09] <llfourn> (as far as my understand of these things go)

[13:09] *** cdg joined
[13:10] <eater> yeah true

[13:10] <eater> so we need an Blob.encode and Str.decode

[13:10] <eater> for hex and base64

[13:10] <eater> this isn't gonna be confusing at all

[13:13] <tyil> araraloren: emacs isnt too bad tbh

[13:13] <Ven``> tyil: nah it's not reskinned, it's their own

[13:13] <tyil> especially with evil

[13:13] <Ven``> most people I know prefer vscode to atom because of typing speed. I enjoy spacemacs a lot

[13:14] <tyil> Ven``: due to microsofts history with products in general, I highly doubt it'll be able to compete with vim

[13:14] <tyil> I remember them making their own shell

[13:15] <llfourn> m: "foo".encode("utf8").map(*.fmt("%02x")).join.say

[13:15] <camelia> rakudo-moar b03d80: OUTPUT: ¬´666f6f‚ê§¬ª

[13:18] <Ven``> tyil: what you consider makes a good editor is different from what a lot of people do :-)

[13:21] *** cdg left
[13:23] <Geth> ¬¶ doc: 876afdcd50 | (Jan-Olof Hendig)++ | xt/code.pws

[13:23] <Geth> ¬¶ doc: Add another word

[13:23] <Geth> ¬¶ doc: 

[13:23] <Geth> ¬¶ doc: Closes #1381

[13:23] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/876afdcd50

[13:23] *** travis-ci joined
[13:23] <travis-ci> Doc build errored. Jan-Olof Hendig 'Added missing words

[13:23] <travis-ci> https://travis-ci.org/perl6/doc/builds/243244886 https://github.com/perl6/doc/compare/9dbb4259affd...e36f5aae615f

[13:23] *** travis-ci left
[13:27] <eater> llfourn: what about the other way around?

[13:28] <llfourn> eater: regex :P

[13:29] <llfourn> actually..

[13:29] <llfourn> m: "666f6f".comb.rotor(2).map(*.Int.chr).say

[13:29] <camelia> rakudo-moar b03d80: OUTPUT: ¬´(  )‚ê§¬ª

[13:29] <llfourn> m: "666f6f".comb.rotor(2).map(*.join.Int.chr).say

[13:29] <camelia> rakudo-moar b03d80: OUTPUT: ¬´Cannot convert string to number: trailing characters after number in '036‚èè5f' (indicated by ‚èè)‚ê§  in whatevercode  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:30] <llfourn> m: "666f6f".comb.rotor(2).map({ "0x" ~ .join.Int.chr}).say

[13:30] <camelia> rakudo-moar b03d80: OUTPUT: ¬´Cannot convert string to number: trailing characters after number in '036‚èè5f' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:30] <llfourn> m: "666f6f".comb.rotor(2).map({ "0x" ~ .join).Int.chr}).say

[13:30] <camelia> rakudo-moar b03d80: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 03666f6f".comb.rotor(2).map({ "0x" ~ .join7‚èè5).Int.chr}).say‚ê§    expecting any of:‚ê§        statement end‚ê§        statement modifier‚ê§        statement modi‚Ä¶¬ª

[13:30] <llfourn> m: "666f6f".comb.rotor(2).map({ ("0x" ~ .join).Int.chr}).say

[13:30] <camelia> rakudo-moar b03d80: OUTPUT: ¬´(f o o)‚ê§¬ª

[13:30] <llfourn> :)

[13:31] <eater> that string concat hurts

[13:31] <llfourn> maybe there's any easier way?

[13:31] *** AndroUser2 left
[13:31] *** AndroUser2 joined
[13:31] <moritz> what are you trying to do?

[13:31] *** |oLa|1 left
[13:32] <moritz> oh

[13:32] <llfourn> moritz: turn the string "66" into f

[13:32] <moritz> :16($_)

[13:32] <llfourn> m: say :16(66)

[13:32] <camelia> rakudo-moar b03d80: OUTPUT: ¬´This call only converts base-16 strings to numbers; value 66 is of type Int, so cannot be converted!‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:32] <moritz> m: say :16('66').chr

[13:32] <camelia> rakudo-moar b03d80: OUTPUT: ¬´f‚ê§¬ª

[13:32] <llfourn> moritz++

[13:32] <eater> m: say "666f6f".comb.rotor(2).map({ :16(.join) })>>.chr

[13:32] <camelia> rakudo-moar b03d80: OUTPUT: ¬´(f o o)‚ê§¬ª

[13:32] <eater> oh

[13:33] <eater> moritz: was faster

[13:33] *** curan left
[13:33] *** mcmillhj left
[13:33] *** mcmillhj joined
[13:33] *** colomon joined
[13:35] *** Cabanossi left
[13:36] *** Cabanossi joined
[13:36] <moritz> m: say "666f6f".comb(2).map({ :16($_).chr})

[13:36] <camelia> rakudo-moar b03d80: OUTPUT: ¬´(f o o)‚ê§¬ª

[13:37] <eater> well

[13:37] <eater> time to go home

[13:37] *** dibz` joined
[13:37] <eater> moritz++

[13:40] *** |oLa| joined
[13:40] *** araraloren left
[13:42] *** dibz` left
[13:46] *** espadrine joined
[13:46] *** |oLa| left
[13:48] *** |oLa| joined
[13:54] *** |oLa| left
[14:02] *** colomon left
[14:03] *** |oLa| joined
[14:09] *** zakharyas left
[14:09] *** |oLa| left
[14:13] *** pmurias left
[14:13] *** travis-ci joined
[14:13] <travis-ci> Doc build errored. Jan-Olof Hendig 'Add another word

[14:13] <travis-ci> https://travis-ci.org/perl6/doc/builds/243261326 https://github.com/perl6/doc/compare/e36f5aae615f...876afdcd50aa

[14:13] *** travis-ci left
[14:15] *** CharellKing joined
[14:21] *** |oLa| joined
[14:25] *** espadrine left
[14:28] *** espadrine joined
[14:33] *** sufrostico left
[14:35] *** sufrostico joined
[14:35] *** grondilu joined
[14:38] *** espadrine left
[14:40] *** sufrostico left
[14:43] *** maettu left
[14:45] *** Ven`` left
[14:49] *** jaush joined
[14:52] *** ctilmes joined
[14:52] *** bwisti left
[14:57] *** sufrostico joined
[14:57] *** bwisti joined
[14:58] *** aborazmeh left
[15:04] *** curan joined
[15:07] *** alimon joined
[15:09] *** |oLa|1 joined
[15:11] *** Sabotender joined
[15:11] *** |oLa| left
[15:11] *** zakharyas joined
[15:12] *** kurahaupo_ left
[15:12] *** kurahaupo joined
[15:13] *** AndroUser2 left
[15:13] *** AndroUser2 joined
[15:15] *** AlexDaniel joined
[15:16] *** evalable6 joined
[15:16] *** ChanServ sets mode: +v evalable6

[15:17] <atta> Hi. How can I interpolate a variable inside a regex, in character class brackets? if "b" ~~ m/ <[abc]> / { say "matches" } this works, but my $var = "abc"; if "b" ~~ m/ <[$var]> / { say "matches" } won't work.

[15:17] <atta> m: if "b" ~~ m/ <[abc]> / { say "matches" }

[15:17] <camelia> rakudo-moar 3363c7: OUTPUT: ¬´matches‚ê§¬ª

[15:17] *** greppable6 left
[15:17] <atta> m: my  $var = "abc"; if "b" ~~ m/ <[$var]> / { say "matches" }

[15:17] <camelia> rakudo-moar 3363c7: ( no output )

[15:17] *** bisectable6 joined
[15:17] *** ChanServ sets mode: +v bisectable6

[15:17] *** greppable6 joined
[15:17] *** ChanServ sets mode: +v greppable6

[15:19] <jnthn> atta: There's no way to do exactly that, though if $var was tweaked to be "<[abc]>" then you could <$var>

[15:21] *** khw joined
[15:22] *** lowbro left
[15:24] *** AndroUser2 left
[15:30] *** AlexDaniel left
[15:32] *** nadim_ left
[15:35] <atta> jnthn: Thanks! Maybe I'm complicating things. What I've got is: I have two strings, $var1 = 'abc' and $var2 = 'aqueyrfgc', and I should check if each char in $var2 matches what would be /[$var1]/. I did for $var2.comb(1) -> $char { if $char ~~ m/<[$var1]>/ { say 'matches' } but to no avail

[15:36] <atta> I just want to check if one string is "inside" another one

[15:40] *** dakkar left
[15:40] <atta> Solved. Just inverted the regex. Easy. $var1 ~~ m/ $char /.

[15:40] *** titsuki joined
[15:48] *** gdonald left
[15:48] *** Cabanossi left
[15:50] *** gdonald joined
[15:51] *** Cabanossi joined
[15:51] <rightfold> Can I use grammars on lists of tokens or only on strings?

[15:51] *** araujo joined
[15:51] *** araujo left
[15:51] *** araujo joined
[15:55] *** CharellKing left
[16:00] *** drrho left
[16:00] *** nadim_ joined
[16:06] *** |oLa|1 left
[16:07] *** robertle_ left
[16:09] *** domidumont left
[16:14] *** sufrostico left
[16:14] *** gdonald left
[16:29] *** zakharyas left
[16:29] *** alimon left
[16:30] *** alimon joined
[16:34] *** uberbaud joined
[16:35] *** tardisx left
[16:36] *** wamba left
[16:43] *** ChoHag left
[16:49] *** nadim_ left
[16:50] *** uberbaud left
[16:50] *** aindilis left
[16:51] *** setty1 joined
[16:51] *** aindilis joined
[16:53] *** domidumont joined
[17:01] *** cdg joined
[17:02] *** pilne joined
[17:03] *** cdg_ joined
[17:05] <[Coke]> I think just strings, but @list.join isn't horrible.

[17:05] <[Coke]> (on moarvm)

[17:06] <[Coke]> (er, it has the potential to not be horrible, I haven't actually looked at the string source because I value my sanity)

[17:07] *** cdg left
[17:14] <grondilu> Has anyone ever tried to compile MoarVM to webassembly?  I can't as I don't have enough RAM.

[17:16] *** |oLa| joined
[17:16] * grondilu bought some more, waiting for Amazon delivery

[17:22] <tadzik> how much was not enough? What are you using to build it?

[17:25] <grondilu> I'm using a linux guest on Virtual Box.  I could not allocate more than 5.5Go

[17:25] <grondilu> weirdly enough, the compilation crashed before the swap was consumed.

[17:26] <grondilu> Notice that I'm not even talking about compiling MoarVM yet, just the emscripten toolkit.

[17:29] *** espadrine joined
[17:34] *** |oLa| left
[17:35] *** |oLa| joined
[17:36] *** wamba joined
[17:41] *** |oLa| left
[17:42] *** |oLa| joined
[17:47] *** ChoHag joined
[17:50] *** nadim_ joined
[17:50] *** tipdbmp joined
[17:51] <tipdbmp> m: my Array[uint64] $a .= new; $a.push(1);

[17:51] <camelia> rakudo-moar 6f9326: OUTPUT: ¬´Type check failed in assignment to ; expected uint64 but got Int (1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:51] <tipdbmp> How do you use typed arrays?

[17:53] <jnthn> You need to use array[uint64] since uint64 is a native type

[17:53] <tipdbmp> I see.

[17:53] <jnthn> If you declare it `my uint64 @a` it'll automatically pick the correct one for you :)

[17:54] <tipdbmp> Thanks.

[17:55] *** |oLa| left
[17:57] *** |oLa| joined
[18:00] <tipdbmp> Is it possible to get to the type of an array, i.e: array-sub-type(array[uint64]) => uint64, array-sub-type(Array[Int]) => Int?

[18:05] *** |oLa| left
[18:06] <tipdbmp> I suppose I can stringify the array type and extract the sub type, but how can I turn the sub-type string into a type?

[18:06] <tipdbmp> m: my $ty_name = array[uint64].^name; my $a = index($ty_name, '[') + 1; say substr($ty_name, $a, rindex($ty_name, ']') - $a);

[18:06] <camelia> rakudo-moar 6f9326: OUTPUT: ¬´uint64‚ê§¬ª

[18:09] <tipdbmp> With EVAL, I suppose...

[18:11] <jnthn> .of

[18:11] <jnthn> dinner &

[18:11] <tipdbmp> Oh, good =).

[18:12] *** |oLa| joined
[18:12] *** Actualeyes left
[18:13] <Geth> ¬¶ doc: 5af4ebd377 | (Jan-Olof Hendig)++ | doc/Language/typesystem.pod6

[18:13] <Geth> ¬¶ doc: Updated 'is nodal' doc. [Coke]++, eveo++

[18:13] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5af4ebd377

[18:13] *** Actualeyes joined
[18:13] *** ChoHag left
[18:15] *** ChoHag joined
[18:18] *** bwisti left
[18:36] *** nadim_ left
[18:44] *** nadim_ joined
[18:44] *** mcmillhj left
[18:52] *** jonas2 left
[18:53] *** |oLa| left
[18:53] *** ChoHag left
[18:57] *** curan left
[19:03] *** travis-ci joined
[19:04] <travis-ci> Doc build errored. Jan-Olof Hendig 'Updated 'is nodal' doc. [Coke]++, eveo++'

[19:04] <travis-ci> https://travis-ci.org/perl6/doc/builds/243370555 https://github.com/perl6/doc/compare/876afdcd50aa...5af4ebd377f9

[19:04] *** travis-ci left
[19:04] *** stmuk joined
[19:06] *** stmuk_ left
[19:13] <moritz> m: say 'abcdef' ~~ m:x(3)/./

[19:13] <camelia> rakudo-moar e9b309: OUTPUT: ¬´(ÔΩ¢aÔΩ£ ÔΩ¢bÔΩ£ ÔΩ¢cÔΩ£)‚ê§¬ª

[19:13] <moritz> m: say 'af' ~~ m:x(3)/./

[19:13] <camelia> rakudo-moar e9b309: OUTPUT: ¬´()‚ê§¬ª

[19:13] <moritz> m: say 'abcdef' ~~ m:x(3):ex/..?/

[19:13] <camelia> rakudo-moar e9b309: OUTPUT: ¬´(ÔΩ¢abÔΩ£ ÔΩ¢aÔΩ£ ÔΩ¢bcÔΩ£)‚ê§¬ª

[19:16] <Geth> ¬¶ doc: b8cf104d57 | (Jan-Olof Hendig)++ | doc/Language/subscripts.pod6

[19:16] <Geth> ¬¶ doc: Mention the 'is default' trait

[19:16] <Geth> ¬¶ doc: 

[19:16] <Geth> ¬¶ doc: Closes #934

[19:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b8cf104d57

[19:23] *** |oLa| joined
[19:29] *** AlexDaniel joined
[19:30] *** domidumont left
[19:33] *** sufrostico joined
[19:38] *** tipdbmp left
[19:53] *** stmuk_ joined
[19:54] *** stmuk left
[19:55] <zengargoyle> .tell tadzik i think there's a bug in the modules todo handling. it seems to have 'lost' the fact that i added MANIFEST to my dists (maybe didn't update the cache?) and tells me i have no MANIFEST.

[19:55] <yoleaux> zengargoyle: I'll pass your message to tadzik.

[19:57] <zengargoyle> .tell tadzik the 'not having any tags' and one 'no version' warning went away...

[19:57] <yoleaux> zengargoyle: I'll pass your message to tadzik.

[19:59] *** uberbaud joined
[20:03] *** eyck left
[20:03] *** colomon joined
[20:09] *** travis-ci joined
[20:09] <travis-ci> Doc build errored. Jan-Olof Hendig 'Mention the 'is default' trait

[20:09] <travis-ci> https://travis-ci.org/perl6/doc/builds/243391652 https://github.com/perl6/doc/compare/5af4ebd377f9...b8cf104d57b7

[20:09] *** travis-ci left
[20:16] *** eyck joined
[20:18] *** [particle] left
[20:18] *** |oLa| left
[20:18] *** [particle] joined
[20:18] *** raiph joined
[20:21] *** mr-fooba_ left
[20:22] *** mr-foobar joined
[20:26] *** uberbaud left
[20:29] <[Coke]> Ugh, Bailador now requires a config file if you want to run on a different port.

[20:35] *** |oLa| joined
[20:44] *** TEttinger joined
[20:47] <tadzik> fak

[20:47] <yoleaux> 19:55Z <zengargoyle> tadzik: i think there's a bug in the modules todo handling. it seems to have 'lost' the fact that i added MANIFEST to my dists (maybe didn't update the cache?) and tells me i have no MANIFEST.

[20:47] <yoleaux> 19:57Z <zengargoyle> tadzik: the 'not having any tags' and one 'no version' warning went away...

[20:47] <tadzik> uh-oh

[20:47] <tadzik> will take a look tomorrw, thanks

[20:48] *** Cabanossi left
[20:51] *** Cabanossi joined
[20:53] *** mr-foobar left
[20:55] *** mcmillhj joined
[21:01] *** colomon left
[21:02] *** konsolebox joined
[21:02] *** mr-foobar joined
[21:05] *** mcmillhj left
[21:11] <samcv> odd there's a proposal on the Unicode mailing list to ban Google from designing emoji. what

[21:11] <samcv> and make them revert back to the old android designs. i don't think they understand how unicode works...

[21:16] <timotimo> i love the blob faces google built for android

[21:17] <Geth> Swapped META.info ‚Üí META6.json in 23 dists in https://github.com/perl6/ecosystem/commit/f36c9bf71e

[21:22] *** mr-foobar left
[21:23] *** mr-foobar joined
[21:24] *** zacts left
[21:29] <TEttinger> they should ban me from designing emoji. it would be about the same effect

[21:30] *** cognominal joined
[21:45] *** |oLa| left
[21:50] *** zacts joined
[21:52] *** mr-foobar left
[21:53] *** setty1 left
[21:55] *** colomon joined
[21:56] *** mr-foobar joined
[21:59] *** eveo joined
[22:01] <eveo> samcv: I think I saw @FakeUnicode tweet about that... about Google basically stealing old and ugly versions of OSX emoji

[22:02] <eveo> llfourn: eater: no regex needed to convert a string with numerals in some base to a numeric. You already saw the :16($_) notation and if the base is dynamic too, there's Str.parse-base method

[22:02] <eveo> m: say "Perl6".parse-base: 36

[22:02] <camelia> rakudo-moar e9b309: OUTPUT: ¬´42679338‚ê§¬ª

[22:03] *** Cabanossi left
[22:04] <eveo> Ven, well, maybe it was some other "ven"? I dunno, just saw it in the generated contributors list.

[22:04] * zengargoyle thinks eveo and samcv would enjoy http://blog.plover.com/math/telugu.html (Base-4 fractions in Telugu)  because... Unicode.

[22:05] <samcv> also i'm accepting suggestions on things on unicode to talk about for the EU perl conf. if anybody wants to speak up so i can add things to my talk

[22:05] <eveo> m: say ‡±∏ + ‡±π - ‡±∫ / ‡±ª - ‡±º * ‡±Ω + ‡±æ

[22:05] <camelia> rakudo-moar e9b309: OUTPUT: ¬´1.333333‚ê§¬ª

[22:05] <eveo> It works. That's where my care about it ends pretty much...

[22:06] <eveo> samcv: will it include the meme about Perl 6 core devs highfiving each other? :P

[22:06] *** Cabanossi joined
[22:06] <eveo> New blog post: "Perl 6 Release Quality Assurance: Full Ecosystem Toaster": https://perl6.party/post/Perl-6-Release-Quality-Assurance-Full-Ecosystem-Toaster

[22:09] <samcv> oh

[22:09] * samcv adds that to the list

[22:09] <eveo> hah

[22:13] <zengargoyle> m: say ‡±≠‡±π‡±æ‡±∫‡±æ‡±∏

[22:13] <camelia> rakudo-moar e9b309: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> 3say ‡±≠7‚èè5‡±π‡±æ‡±∫‡±æ‡±∏‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚Ä¶¬ª

[22:14] <eveo> m: '‡±≠‡±π‡±æ‡±∫‡±æ‡±∏ '.uniprops.say

[22:14] <camelia> rakudo-moar e9b309: OUTPUT: ¬´(Nd No No No No No Zs)‚ê§¬ª

[22:14] *** robertle left
[22:14] <eveo> Only the first one can be chained

[22:14] <zengargoyle> we chain ¬≤¬≤¬≤

[22:15] <zengargoyle> :P

[22:15] * zengargoyle just poking fun and enjoying MJD post.

[22:15] * zengargoyle because MJD posts are almost always interesting.

[22:16] <eveo> zengargoyle: no, we don't. You can't chain those when writing a numeric literal.

[22:16] <zengargoyle> plus it's Unicde 9 and i doubt we have many Telugu users.

[22:18] <eveo> \o

[22:18] *** eveo left
[22:19] <zengargoyle> ‡±¶‡±º‡±Ω‡±æ and ‡±∏‡±π‡±∫‡±ª are postfix operators. 

[22:21] <zengargoyle> digit + base-4 fraction

[22:21] * zengargoyle wonders what other weirdness is out there.

[22:21] *** mr-foobar left
[22:21] * zengargoyle should stop poking eveo ...

[22:23] *** mr-foobar joined
[22:25] <zengargoyle> it has come to my attention that eveo is probably Zoffix.... mea culpa.

[22:29] *** alimon left
[22:34] *** Cabanossi left
[22:36] *** Cabanossi joined
[22:37] *** wamba left
[22:38] *** ctilmes left
[22:49] <MasterDuke> is anybody going to YAPC::NA 2017? i didn't manage to get $work to pay for it, but they might let me count the time as work time. or if not maybe i'll just come down for a dinner if anything like that is going on

[22:53] *** mr-foobar left
[22:57] *** mr-foobar joined
[23:05] <japhb> zengargoyle: Relatively speaking, there are few nicks in the history of this channel that are *not* Zoffix.

[23:10] *** nadim_ left
[23:10] <ugexe> dont listen to him, thats zoffixs other username

[23:11] <sacomo> hi #perl6

[23:11] *** araujo left
[23:14] <Geth> Swapped META.info ‚Üí META6.json in 1 dists in https://github.com/perl6/ecosystem/commit/738765d9dd

[23:15] *** nattefrost left
[23:26] *** araujo joined
[23:36] *** cyphase left
[23:37] <tyil> is there an up to date apt repo for ubuntu (16.04) with perl 6 packages?

[23:37] *** rindolf left
[23:39] <MasterDuke> repo no, but packages are available

[23:39] <MasterDuke> huggable: debs

[23:39] <huggable> MasterDuke, nothing found

[23:39] <MasterDuke> huggable: deb

[23:39] <huggable> MasterDuke, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[23:39] * tyil clicks

[23:40] <tyil> MasterDuke: thanks

[23:41] *** cyphase joined
[23:41] <MasterDuke> np

[23:47] *** ChoHag joined
[23:48] *** Cabanossi left
[23:51] *** Cabanossi joined
[23:54] *** kurahaupo_ joined
[23:56] *** kurahaupo left
