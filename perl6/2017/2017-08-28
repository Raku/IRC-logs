[00:02] <andreoss> Zoffix: $*PROGRAM-NAME should be '-' in this case

[00:03] <andreoss> but it's interactive unless file is passed as an argument

[00:04] <andreoss> another work-around would be `echo 'say 1' | perl6 /dev/stdin`

[00:05] <Zoffix> andreoss: thanks. There was a conversation after you left and I have a fix in mind. Working on it ATM

[00:07] *** nadim left
[00:10] *** ckraniak joined
[00:11] *** cdg left
[00:20] <andreoss> m: $*SPEC.canonpath('-').say

[00:20] <camelia> rakudo-moar 815faa: OUTPUT: «-␤»

[00:22] <Zoffix> We don't treat '-' path specially (well, other than in open() but that's going away in 6.d)

[00:24] *** Kyo91_ joined
[00:24] *** Rawriful left
[00:27] <andreoss> perl5 checks if the file it's reading is /dev/fd/0 and if so sets $0 to '-'

[00:28] *** awwaiid joined
[00:28] <andreoss> https://perl5.git.perl.org/perl.git/blob/HEAD:/perl.c#l3820

[00:28] <andreoss> this chunk i believe

[00:31] *** Kyo91_ left
[00:33] <andreoss> it would be nice to have standard streams in $*SPEC alongside .devnull

[00:33] <awwaiid> What's with the weird --/ params in zef?

[00:33] <Zoffix> awwaiid: that convention is used by rakudo all over. e.g. in sub MAIN

[00:33] <awwaiid> oh, I guess they mean "not"

[00:34] <Zoffix> Yeah

[00:34] <awwaiid> weird, I never noticed it until earlier this week

[00:34] <awwaiid> and never saw it outside of rakudoland

[00:34] <Zoffix> andreoss: they're available as IO::Special objects

[00:35] <Zoffix> m: IO::Special.new('<STDIN>').native-descriptor.say

[00:35] <camelia> rakudo-moar 815faa: OUTPUT: «No such method 'native-descriptor' for invocant of type 'IO::Special'␤  in block <unit> at <tmp> line 1␤␤»

[00:35] <Zoffix> m: IO::Special.new('<STDIN>').open.native-descriptor.say

[00:35] <camelia> rakudo-moar 815faa: OUTPUT: «No such method 'open' for invocant of type 'IO::Special'. Did you mean 'one'?␤  in block <unit> at <tmp> line 1␤␤»

[00:35] <Zoffix> boo

[00:35] <Zoffix> open(IO::Special.new("<STDIN>")).native-descriptor.say works

[00:37] <andreoss> it says 0

[00:37] <Zoffix> Isn't that correct?

[00:37] <andreoss> shouln't it be /dev/fd/0?

[00:37] <geekosaur> m: open(IO::Special.new("<STDOUT>")).native-descriptor.say

[00:37] <camelia> rakudo-moar 815faa: OUTPUT: «open is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in sub open at src/RESTRICTED.setting line 9␤  in block <unit> at <tmp> line 1␤␤»

[00:38] <Zoffix> andreoss: these were always ints.

[00:38] <geekosaur> andreoss, native-descriptor is a C file descriptor, not a path

[00:38] <andreoss> i see

[00:38] *** char_var[buffer] joined
[00:42] *** Kyo91_ joined
[00:42] <Zoffix> Did we have a wiki with env vars in rakudo or am I misremembering?

[00:42] *** Cabanossi left
[00:42] *** enheh joined
[00:42] <Zoffix> I know there's a page in docs, but I thought it was partial and wiki had all of 'em

[00:43] <census> can someone please help me with perl? i used to use activeperl on windows xp years ago, and i'm looking to code up in perl again

[00:43] *** cognominal left
[00:43] <Zoffix> census: you likely want the room next door: #perl 

[00:43] <Zoffix> census: this channel is about its sibling, Rakudo Perl 6

[00:43] <census> Zoffix haha yes i agree; however, they banned me 5 years ago and still won't let me back in

[00:43] *** Cabanossi joined
[00:44] <Zoffix> census: why did they ban you?

[00:44] *** enheh left
[00:44] <census> Zoffix this chanel had always been kind when i had questions

[00:44] <Zoffix> census: well, what's the question?

[00:44] <census> Zoffix it was 5 years ago; i wish i remember. i truly didn't do anyting that bad. 

[00:45] <census> i'm not sure why they won't drop the ban -- they probably don't even remember

[00:45] <Zoffix> census: when you say "still won't let me back in" do you mean you asked recently and they said no?

[00:45] <Zoffix> Or is the ban simply was never removed

[00:45] <census> Zoffix no i didn't ask. the ban was never removed

[00:46] <Zoffix> 1 sec

[00:46] <census> Zoffix my question is this. is there a free version of perl for windows XP? i'm struggling to find one. i used to use activeperl

[00:46] <Zoffix> census: yeah: this: http://strawberryperl.com/

[00:47] <census> Zoffix I believe I used to use activeperl

[00:47] <census> i don't know if there was a reason i didn't use strawberry but does it matter?

[00:48] <Zoffix> census: yeah there's also ActivePerl: https://www.activestate.com/activeperl (the "Free community edition"). I haven't used Active for ages, but never had problems with Strawberry, so I'd go out on a limb and say it's the superior one.

[00:48] <Zoffix> census: what's your host that's banned? The one you're using right now?

[00:48] *** Kyo91_ left
[00:49] <census> Zoffix yes i was on that website, but i was struggling to dowload it for XP. i tried one of the .exe and it gave me an error

[00:49] <census> Zoffix i had tried: https://www.activestate.com/activeperl/downloads/thank-you?dl=http://downloads.activestate.com/ActivePerl/releases/5.22.3.2204/ActivePerl-5.22.3.2204-MSWin32-x86-64int-401627.exe

[00:50] <Zoffix> census: ah. Not surprising, as XP has been EOLed long time ago. It's probably not safe to even use it, as it's missing a bunch of security updates

[00:51] <census> Zoffix on a flash drive somewhere i think i have an .exe file with perl . should i try to dig it out? would it work

[00:51] *** Kyo91_ joined
[00:52] *** evalable6 left
[00:52] <Zoffix> census: well, it'd be an ancient perl

[00:52] <Zoffix> census: have you tried installing strawberry?

[00:52] <census> Zoffix is that a problem?

[00:53] <Zoffix> census: if you like using outdated stuff, I guess not :) There've been lots new goodies added.

[00:54] <AlexDaniel> m: say +SIGUSR1

[00:54] <camelia> rakudo-moar 815faa: OUTPUT: «30␤»

[00:54] <AlexDaniel> what the f

[00:54] <census> no i didn't try strawberry. i had been using certain libraries. would there be a compatibility issue?

[00:54] <census> like my old code would still work?

[00:54] <Zoffix> census: as for the 5-year-old ban. Talk to mst and see if it's possible to remove it, given the "sentence" has been served.

[00:54] <AlexDaniel> I've just SIGPWR-ed something

[00:54] <census> Zoffix @mst is away

[00:55] <Zoffix> census: he'll likely read this conversation when he comes back :)

[00:55] <AlexDaniel> is it all wrong? https://github.com/rakudo/rakudo/blob/beec02a6fa69e3ac290b4dd24c07d87a9f248b13/src/core/signals.pm#L1-L7

[00:55] <census> i was barely in the #perl channel for more than 1 day

[00:55] <AlexDaniel> or am I reading it incorrectly?

[00:56] <Zoffix> census: small partion of code might not work, IIRC

[00:56] <census> Zoffix oh no that's bad

[00:56] <andreoss> census: you still can use cygwin on XP

[00:56] <census> andreross yes i'm trying to download cygwin in the meantime

[00:56] <andreoss> and compile a fresh version of perl5

[00:57] *** Kyo91_ left
[00:57] <Zoffix> AlexDaniel: what was the question?

[00:58] <Zoffix> Other than "what the f" :D

[00:58] <census> andreross are you saying i can run my code directly through cygwin and not need activeperl or strawberryperl ?

[00:59] <AlexDaniel> Zoffix: it may be emotional, but that's the question, yes. SIGUSR1 is 10 and SIGUSR2 is 12, why are these completely different in rakudo :/

[00:59] <AlexDaniel> Zoffix: and looking at other numbers, they're all wrong too?

[00:59] *** u-ou- joined
[01:00] <Zoffix> AlexDaniel: no idea. There *is* this bit of code that parses `kill -l`; I forget what it affects tho: https://github.com/rakudo/rakudo/blob/beec02a6fa69e3ac290b4dd24c07d87a9f248b13/src/core/Kernel.pm#L108-L124

[01:02] <andreoss> census: idk how fresh cygwin's version of perl is, you might have to recompile it

[01:02] <Zoffix> bah... brainfart. Thought I could amend roast's REPL tests to work fine in non-TTY mode, but that'd require setting a rakudo-specific var -_-

[01:03] <AlexDaniel> “SIGUSR1 value is platform dependent. SIGUSR1 can be 30, 10, or 16.”

[01:03] *** census left
[01:03] <Zoffix> AlexDaniel: oh, when you actually go to use the signal it'll use the one from parsed values. So the value of the enum isn't actually the number that's gonna be sent (I think)

[01:04] *** Kyo91_ joined
[01:05] *** census_ joined
[01:05] *** mcmillhj joined
[01:05] <census_> sorry i got disconnected if you had answered

[01:06] *** census_ is now known as census

[01:06] <Zoffix> census: we have logs: https://irclog.perlgeek.de/perl6/2017-08-28#i_15078238

[01:09] <AlexDaniel> Anyway: https://github.com/perl6/doc/issues/1474

[01:09] <AlexDaniel> I think it's a bug, but for now this will do

[01:09] *** piojo joined
[01:10] *** mcmillhj left
[01:10] <Zoffix> m: say $*KERNEL.signal: SIGUSR1

[01:10] <camelia> rakudo-moar 815faa: OUTPUT: «30␤»

[01:10] * Zoffix shrugs

[01:11] *** census left
[01:12] *** Kyo91_ left
[01:12] *** census joined
[01:14] <AlexDaniel> m: use NativeCall; sub kill(int32, int32) is native {*}; kill $*PID, +SIGUSR1

[01:14] <camelia> rakudo-moar 815faa: OUTPUT: «(signal PWR)»

[01:14] <AlexDaniel> c: HEAD use NativeCall; sub kill(int32, int32) is native {*}; kill $*PID, +SIGUSR1

[01:15] <committable6> AlexDaniel, ¦HEAD(815faa3): « «exit signal = SIGUSR1 (30)»»

[01:15] <AlexDaniel> ppfffffffffffffffffft

[01:15] *** mcmillhj joined
[01:16] <AlexDaniel> so if you .tap on SIGUSR1 you're actually tapping on SIGPWR? :/

[01:16] *** census left
[01:18] <AlexDaniel> actually, no!

[01:18] <AlexDaniel> m: signal(SIGUSR1).tap({say ‘hello’}); use NativeCall; sub kill(int32, int32) is native {*}; kill $*PID, 10; sleep 0.5

[01:18] <camelia> rakudo-moar 815faa: OUTPUT: «hello␤»

[01:18] <AlexDaniel> so it taps on it just fine

[01:18] <AlexDaniel> m: signal(SIGUSR1).tap({say ‘hello’}); use NativeCall; sub kill(int32, int32) is native {*}; kill +SIGUSR1, 10; sleep 0.5

[01:18] <camelia> rakudo-moar 815faa: ( no output )

[01:21] *** u-ou- left
[01:27] *** mcmillhj left
[01:28] *** u-ou- joined
[01:30] <Zoffix> andreoss: `echo -e 'say 42' | perl6` now prints just 42 without any other messages: https://github.com/rakudo/rakudo/commit/2c0cd0a3a9

[01:31] <Geth> ¦ doc: f0e515486e | (Peter Stuifzand)++ (committed by Zoffix Znet) | doc/Language/syntax.pod6

[01:31] <Geth> ¦ doc: Fix method name set-name -> set-name-age (#1473)

[01:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f0e515486e

[01:32] <Zoffix> I think the indirect method syntax finally clicked to me (thanks to that ^ explanation) :)

[01:33] <Zoffix> m: say later Date.today: :42hours

[01:33] <camelia> rakudo-moar ffd87f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    later used at line 1␤␤»

[01:33] <Zoffix> Or maybe not ^_^

[01:33] <Zoffix> m: say later (Date.today): :42hours

[01:33] <camelia> rakudo-moar ffd87f: OUTPUT: «Cannot use unit hours with Date.delta␤  in block <unit> at <tmp> line 1␤␤»

[01:33] *** u-ou- left
[01:33] <Zoffix> m: say later (Date.today): :42days

[01:33] <camelia> rakudo-moar ffd87f: OUTPUT: «2017-10-09␤»

[01:33] <Zoffix> Yup \o/

[01:34] <Zoffix> It follows the ($invocant:, $arg, $arg2) pattern. I could never figure out what the deal with semicolons was in the past :)

[01:34] *** Kyo91_ joined
[01:34] <AlexDaniel> m: say 42:

[01:34] <camelia> rakudo-moar ffd87f: OUTPUT: «42␤»

[01:35] <Zoffix> m: say abs 42: :

[01:35] <camelia> rakudo-moar ffd87f: OUTPUT: «42␤»

[01:35] <AlexDaniel> yea, get crazy with it :)

[01:41] <Geth> ¦ doc: ce504a2081 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Programs/00-running.pod6

[01:41] <Geth> ¦ doc: Document RAKUDO_LINE_EDITOR env var

[01:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ce504a2081

[01:45] *** ilbot3 left
[01:46] *** piojo left
[01:47] <Geth> ¦ doc: b791b87f27 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[01:47] <Geth> ¦ doc: Add geekosaur++ to rakudo release credits list

[01:47] <Geth> ¦ doc: 

[01:47] <Geth> ¦ doc: For telling solution for REPL tty stuff. Forgot to give ++ in commit

[01:47] <Geth> ¦ doc: https://github.com/rakudo/rakudo/commit/2c0cd0a3a9

[01:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b791b87f27

[01:49] *** lookatme joined
[01:49] <lookatme> morning

[01:50] *** Kyo91_ left
[01:50] <lookatme> Can I call flush on STDIN of Proc::Async

[01:50] <lookatme> ?

[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:51] <Zoffix> lookatme: I don't think buffering is in use by default yet. What problem are you facing?

[01:51] <lookatme> perl6 -e 'my $p = Proc::Async.new(<mysql -P3306 -u ovirt -pdefault>, :w); $p.stdout.tap(&say); my $pp = $p.start; await $p.print("show databases;\r\n"); say "WAITING OVER"; await $pp;'

[01:52] <lookatme> I start a mysql command use Proc::Async

[01:52] <lookatme> But it not print result only if I run $p.close-stdin

[01:53] <lookatme> Zoffix, ^^

[01:54] <Zoffix> Yeah. reading code

[01:54] <Zoffix> To figure out if there's a way.

[01:54] <lookatme> Hmm

[01:54] <gfldex> lookatme: try $p.put("your string here")

[01:55] <lookatme> gfldex, not working 

[01:56] <lookatme> :) and I'm not found put in document .

[01:57] <Zoffix> lookatme: looks like it's actually mysql that's causing this

[01:58] <Zoffix> lookatme: perl6 -e 'my $p = Proc::Async.new(«perl6 -e "get.say; get"», :w); $p.stdout.tap(&say); my $pp = $p.start; await $p.print("show databases;\r\n"); say "WAITING OVER"; await $pp;'

[01:58] <Zoffix> ^ that prints the first get() and then waits for the next one

[01:58] *** cdg joined
[01:59] *** raschipi joined
[01:59] <gfldex> lookatme: await $p.print may be called to early

[02:00] <gfldex> lookatme: try await Promise.in(2) { $p.put("your string here") }

[02:00] <gfldex> lookatme: see: https://gfldex.wordpress.com/2017/08/27/out-of-order-mystery/

[02:01] *** MasterDuke joined
[02:02] *** lookatme left
[02:03] *** cdg left
[02:05] *** lookatme joined
[02:05] <lookatme> Hmm, Zoffix I see

[02:06] *** Kyo91_ joined
[02:07] <AlexDaniel> don't you have to .close-stdin anyway?

[02:08] <lookatme> yeah, but I want make something like REPL

[02:08] <AlexDaniel> I see

[02:08] <lookatme> don't want close stdin

[02:09] <Zoffix> lookatme: got it

[02:09] <lookatme> maybe mysql have some optional about it

[02:09] <Zoffix> lookatme: pass -n param to mysqlk

[02:09] <lookatme> ok 

[02:10] <Zoffix> perl6 -e 'my $p = Proc::Async.new(<mysql -n -P3306 -u ovirt -pdefault>, :w); $p.stdout.tap(&say); my $pp = $p.start; await $p.print("show databases;\r\n"); say "WAITING OVER"; await $pp;'

[02:10] <lookatme> Zoffix, great! works

[02:10] <Zoffix> \o/

[02:10] <lookatme> ^_<

[02:10] *** Kyo91_ left
[02:10] *** Cabanossi left
[02:11] <lookatme> oh, mysql buffer the output

[02:11] *** u-ou- joined
[02:13] *** Cabanossi joined
[02:13] *** census joined
[02:14] <lookatme> Thanks :)

[02:14] *** Ven`` joined
[02:15] <census> andreross now i have to teach myself how to tailor my old code to a new problem 

[02:16] <census> thanks Zoffix i got strawbery perl downloaded

[02:17] *** u-ou- left
[02:20] <Zoffix> Sweet.

[02:21] *** census left
[02:24] *** u-ou- joined
[02:28] *** u-ou- left
[02:28] *** u-ou- joined
[02:31] *** noganex joined
[02:33] *** u-ou- left
[02:34] *** noganex_ left
[02:36] *** u-ou- joined
[02:38] *** Ven`` left
[02:41] *** Cabanossi left
[02:42] *** lookatme left
[02:43] *** go|dfish left
[02:44] *** Cabanossi joined
[02:44] *** u-ou- left
[02:46] *** u-ou- joined
[02:47] *** census joined
[02:48] *** lookatme joined
[02:54] <awwaiid> If I have a class that I define some operators for, like +, -, * -- where is a good spot to define those operators? Not sure doing them as subs with is export in the class file is quite what I want, as I want the operators to be available wherever the instances are

[02:57] *** go|dfish joined
[02:58] <awwaiid> eh. Looks like I will have to use/export these to wherever I need them. Oh well.

[02:59] <lookatme> I think better define in the class file 

[03:02] <awwaiid> yeah, that's where I'll define it. but anyone who wants to use those operators has to explicitly pull them in. In Ruby operators are methods, so if you have an instance you can use all of it's operators without explicit lexical dependency

[03:05] <lookatme> awwaiid, actually I also wonder why operator not method

[03:05] <lookatme> in c++, you can defined operator in class and global operator 

[03:07] <raschipi> awwaiid: it's that way by design. this way there's no surprises.

[03:13] <awwaiid> yeah, I know it's on purpose. I'm trying to figure out how to work with it well. I'm working on Inline::Ruby, and have Inline::Ruby::RbObject that wraps a ruby instance. To make it easy to work with, I have a few basic operators defined that get turned into ruby instance method calls

[03:14] <awwaiid> Now I'm trying to make it so these operators are re-exported when you `use Inline::Ruby` for convenience

[03:15] *** u-ou- left
[03:16] <lookatme> If you want provide it to user, maybe defined it in Inline::Ruby will be better. And I guess we need the mechanism which can import some symbol from others package.

[03:22] *** u-ou- joined
[03:22] *** u-ou- left
[03:26] *** Cabanossi left
[03:29] *** Cabanossi joined
[03:36] *** Aaronepower left
[03:37] <lookatme> m: role Foo { proto method operator { * }; }; role Bar does Foo { has $.i; method operator:sym<==>($r) { $!i == $r.i; }; }; multi sub infix:<==>(Foo $l, Foo $r) { $l."operator:sym<==>"($r); }; say Bar.new(i => 1) == Bar.new(i => 2); say Bar.new(i => 42) == Bar.new(i => 42)

[03:37] <camelia> rakudo-moar 2c0cd0: OUTPUT: «False␤True␤»

[03:41] <lookatme> Write a module make operator easy

[03:41] *** snarkyboojum left
[03:41] <lookatme> s/operator/operator define/

[03:41] *** snarkyboojum joined
[03:44] *** MasterDuke left
[03:47] *** raschipi left
[03:50] *** unneccesarymulti joined
[03:51] *** unneccesarymulti is now known as unnecessarymulti

[03:55] *** Cabanossi left
[03:57] *** Cabanossi joined
[04:01] *** skids left
[04:09] *** mcmillhj joined
[04:14] *** BenGoldberg left
[04:20] *** gdonald left
[04:22] *** mcmillhj left
[04:26] *** andreoss left
[04:31] *** |\n left
[04:38] *** cdg joined
[04:39] *** kannan joined
[04:43] *** cdg left
[04:59] <Geth> ¦ whateverable: 939948afd3 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[04:59] <Geth> ¦ whateverable: More aggressive parallelization of tests

[04:59] <Geth> ¦ whateverable: 

[04:59] <Geth> ¦ whateverable: Now if the bot is blocked by something else, it can send SIGUSR1 to

[04:59] <Geth> ¦ whateverable: the test bench to extend the timeout. This way bots can wait forever

[04:59] <Geth> ¦ whateverable: for the build to become unlocked.

[04:59] <Geth> ¦ whateverable: 

[04:59] <Geth> ¦ whateverable: Existing timeouts were a bit too tight, so with the load of 8 bots

[04:59] <Geth> ¦ whateverable: being tested, some of the tests just can't make it in time. Therefore,

[04:59] <Geth> ¦ whateverable: timeouts were extended (1.5x) under ｢prove｣.

[04:59] <Geth> ¦ whateverable: 

[04:59] <Geth> ¦ whateverable: See issue #205. Now we are down to 4m 32s from original 22m.

[04:59] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/939948afd3

[05:01] *** unnecessarymulti left
[05:01] *** evalable6 joined
[05:01] *** ChanServ sets mode: +v evalable6

[05:07] *** Kyo91_ joined
[05:09] *** khw left
[05:09] *** Cabanossi left
[05:10] *** Guest69863 joined
[05:10] *** khw joined
[05:11] *** Kyo91_ left
[05:12] *** Cabanossi joined
[05:14] *** Guest69863 left
[05:19] *** Actualeyes left
[05:22] *** AlexDaniel left
[05:37] *** kannan left
[05:42] *** tokage joined
[05:47] *** nadim joined
[05:47] *** u-ou- joined
[05:48] *** Guest69863 joined
[05:58] *** u-ou- left
[06:04] *** wamba joined
[06:05] *** lowbro joined
[06:05] *** lowbro left
[06:05] *** lowbro joined
[06:08] *** espadrine joined
[06:10] *** Cabanossi left
[06:12] *** Cabanossi joined
[06:13] *** darutoko joined
[06:16] *** nadim left
[06:17] *** ufobat joined
[06:19] *** ddeimeke joined
[06:20] *** ddeimeke left
[06:20] *** ddeimeke joined
[06:35] *** kannan joined
[06:35] *** kannan left
[06:40] *** Cabanossi left
[06:41] <lookatme> m: sub fac($c) { return 1 if $c == 1; return $c * fac($c - 1); }; &fac.wrap(sub (|c) { say "CALL ME with {|c}"; my $ret = nextsame; say "RETURN { $ret }"; }); say fac 5;

[06:41] <camelia> rakudo-moar 3cfc32: OUTPUT: «CALL ME with 5␤CALL ME with 4␤CALL ME with 3␤CALL ME with 2␤CALL ME with 1␤120␤»

[06:42] *** Cabanossi joined
[06:44] <lookatme> m: sub fac($c) { return 1 if $c == 1; return $c * fac($c - 1); }; &fac.wrap(sub (|c) { say "CALL ME with {|c}"; say "RETURN { callsame }"; }); say fac 5;

[06:44] <camelia> rakudo-moar 3cfc32: OUTPUT: «CALL ME with 5␤CALL ME with 4␤CALL ME with 3␤CALL ME with 2␤CALL ME with 1␤RETURN 1␤RETURN 2␤RETURN 3␤RETURN 4␤RETURN 5␤True␤»

[06:52] *** u-ou- joined
[06:53] *** lancew joined
[06:55] *** espadrine left
[06:59] *** Actualeyes joined
[07:06] <timotimo> lizmat, i'm sitting at the breakfast table :)

[07:07] <timotimo> (she arrived 10 eeconds after i said that)

[07:09] *** Guest69863 left
[07:11] *** araujo joined
[07:11] *** araujo left
[07:11] *** araujo joined
[07:11] *** Cabanossi left
[07:12] *** Cabanossi joined
[07:24] *** Skarsnik joined
[07:26] *** Skarsnik_ joined
[07:27] *** mr-foobar left
[07:28] *** mr-foobar joined
[07:29] <El_Che> timotimo: I like the way you describe breakfast :)

[07:29] *** Skarsnik left
[07:36] *** abraxxa joined
[07:39] *** lancew left
[07:41] *** lancew joined
[07:46] <timotimo> "eeconds" m)

[07:58] *** u-ou- left
[08:01] *** wamba left
[08:03] *** jonas1 joined
[08:15] *** Rawriful joined
[08:21] *** lizmat left
[08:25] *** cdg joined
[08:27] *** mr-foobar left
[08:27] *** nattefrost joined
[08:30] *** cdg left
[08:31] *** mr-foobar joined
[08:36] *** nattefrost left
[08:36] *** nattefrost joined
[08:41] *** Cabanossi left
[08:42] *** Cabanossi joined
[09:01] *** dwarring left
[09:17] *** andreoss joined
[09:19] *** ufobat left
[09:21] *** cdg joined
[09:22] *** cdg_ joined
[09:24] *** margeas joined
[09:25] *** Cabanossi left
[09:25] *** cdg left
[09:26] *** RabidGravy joined
[09:26] <RabidGravy> BOOM!

[09:26] <yoleaux> 26 Apr 2017 20:18Z <Zoffix> RabidGravy: reading the log about license thing. Could we get to the issues instead of threatening to remove all the modules? From logs, I see license/license issue; we can handle both. What other concerns do you have?

[09:26] *** cdg_ left
[09:26] *** cdg joined
[09:27] <RabidGravy> I got nagged three times about not getting on the channel

[09:27] <RabidGravy> ONCE IN REAL LIFE

[09:27] *** Cabanossi joined
[09:30] <RabidGravy> Anyhow can someone fill me in what the story with System::Passwd was?  I noticed that a PR I had against the original went away and that the current source is a fork of, er, my fork

[09:30] *** cdg left
[09:32] *** lancew left
[09:32] *** lookatme left
[09:33] <RabidGravy> unless anyone can think of a reason why not I'm going to delete my fork so the one on community-modules becomes the base version and no-one gets confused

[09:37] *** cdg joined
[09:37] *** nowan left
[09:37] <RabidGravy> also does anyone have a clue about https://github.com/perl6/DBIish/issues/97  DBIish is totally shagged right now and I don't have a clue what caused it

[09:38] *** cdg_ joined
[09:39] *** snarkyboojum left
[09:40] *** nowan joined
[09:41] *** cdg left
[09:42] <nine> RabidGravy: could be one of my NativeCall optimizations

[09:42] *** cdg_ left
[09:44] <RabidGravy> that makes sense

[09:45] <nine> RabidGravy: in lib/DBDish/Pg/Native.pm6:58 the $statement_name is defined as str. Does it work when you change that to Str?

[09:45] <nine> If yes, then I know what's going on

[09:45] <RabidGravy> let's have a look

[09:49] *** sena_kun joined
[09:59] <nine> I think it improves things. But I can't run the tests in full as it's expecting an undocumented database to exist.

[10:01] <RabidGravy> I'm struggling with postgres too :)

[10:04] <RabidGravy> right, hope I didn't have anything precious in the existing databases ;-)

[10:11] <RabidGravy> Ah it wasn't that one specifically but it does appear to be the str/Str thing

[10:17] <RabidGravy> 👍 nine++ # liberal sprinkly of s/str/Str/g in lib/DBDish/Pg/Native appears to have fixed it

[10:18] <nine> Ok, the reason is that I'm relying on the information in the signature to decide whether we need to decont an argument. We shouldn't need to decont native types. But as I've found out in the last couple of days, one can still pass a boxed argument and the callee is supposed to decont.

[10:18] <nine> So the fix in rakudo will be somewhat simple. But it's sad (and costly) that we have to.

[10:20] <Zoffix> RabidGravy: welcome back :)

[10:21] <RabidGravy> I'm minded to push this anyway as IIUC the fix in rakudo will blow away the advantage of using str in those places :)

[10:22] <RabidGravy> Zoffix, boo!

[10:22] <nine> RabidGravy: I'm not so sure. Having str there means that in the (probably rare) case you actually pass a str argument, we won't have to unbox.

[10:23] *** eliasr joined
[10:23] <nine> Though the only way to actually do that is having a natively typed variable that is passed as argument. Literals won't do

[10:24] *** zakharyas joined
[10:27] <RabidGravy> yeah and it seems that all the native methods that do so return a Str rather than a str

[10:28] <nine> At least the fix for this will also remove the last remaining blocker for my efforts to JIT NativeCall

[10:29] <RabidGravy> 🍻

[10:30] *** andreoss left
[10:31] *** TEttinger left
[10:31] <RabidGravy> right I'm going to cut the grass before it gets too hot and then push this unless anyone has a profound objection

[10:31] *** andreoss joined
[10:31] <nine> win 14

[10:31] <buggable> nine, Thank you for entering Accidental /win Lottery! The next draw will happen in 3 days, 13 hours, 28 minutes, and 35 seconds

[10:40] *** TEttinger joined
[10:41] *** TEttinger left
[10:48] *** nattefrost left
[11:11] *** Cabanossi left
[11:12] *** rindolf joined
[11:12] *** Cabanossi joined
[11:14] <RabidGravy> surprisingly warm outside

[11:16] <Skarsnik_> str with NC is generally a bad idea

[11:16] <Skarsnik_> I don't remember what trouble I get with it

[11:17] *** Skarsnik_ is now known as Skarsnik

[11:18] *** zakharyas left
[11:23] *** ddeimeke left
[11:23] <Skarsnik> nine, if you figure the diff between Str and str and found str is bad you could remove it to https://github.com/rakudo/rakudo/blob/nom/lib/NativeCall.pm6#L238 so it help notice it x)

[11:28] *** wamba joined
[11:31] * RabidGravy wonders which machine it was that he had installed Oracle on

[11:33] <Skarsnik> sqlite test fail for me with dbiish

[11:34] *** emeric joined
[11:35] *** cdg joined
[11:40] *** cdg left
[11:40] <RabidGravy> Hmm working for me here

[11:40] <[Coke]> .

[11:41] <El_Che> RabidGravy: wb

[11:54] <andreoss> Zoffix: shouldn't Perl6::Compiler handle this instead? i.e the compiler should know which file (e.g stdin) is being compiled

[11:54] <nine> Skarsnik: str is quite ok in a signature. The issue is that even if the signature says "str", rakudo accepts a Str. So the function may not actually rely on the contraints in the signature

[11:55] <Skarsnik> what the fiff between str and Str for NC?

[11:57] *** raschipi joined
[11:58] <RabidGravy> anyhow I'm going to merge that, as the red thing on travis is upsetting me ;-)

[11:58] *** mr-fooba_ joined
[11:59] *** mr-foobar left
[11:59] <nine> Skarsnik: there is no difference. In theory using str may improve performance a little in some cases as we may be able to avoid boxing/unboxing.

[12:04] *** huggable left
[12:04] *** huggable joined
[12:04] *** ChanServ sets mode: +v huggable

[12:04] <Skarsnik> hm, no weird encoding issue?

[12:05] <Skarsnik> m: say "0xfffff".Int

[12:05] <camelia> rakudo-moar 7d1ece: OUTPUT: «1048575␤»

[12:05] <Skarsnik> fun

[12:08] <RabidGravy> right, so everyone cool with me deleting my fork of System::Passwd?

[12:09] <Skarsnik> what the issue?

[12:09] <RabidGravy> to recap, it was left as the "original" after the original original get deleted and now the one which is in the ecosystem is a fork of mine

[12:10] <RabidGravy> if I delete mine then the one in comunnity modules will become the "original"

[12:10] <Zoffix> andreoss: unsure. It is possible to move the detection code into Perl6::Compiler, but I'm invisioning it as simply rewriting my patch in nqp ops and moving it to `method interative`; is that what you mean? Since running `perl6` by itself starts REPL, I'm viewing my patch as simply a non-interactive, "bare" line editor for REPL that gets used when explicitly requested or when we detect we're not on TTY and a

[12:10] <Zoffix> different line editor weren't requested. Is there a benefit to keeping them entirely different features, possibly controlled by two different env vars?

[12:11] <census> Zoffix : mst never chimed in! or any other #perl person

[12:11] <Zoffix> census: which hostname is banned? Your current one?

[12:12] <census> Zoffix yea but i think it's IP not the name but maybe i'm mistaken

[12:16] <Zoffix> andreoss: basically, I think it might come in handy to override automatic behaviour for when we do REPL vs. just-eval-STDIN. And currently that gets taken care of by the already existing RAKUDO_LINE_EDITOR env var

[12:17] <Zoffix> census: OK, you're unbanned. Don't get banned again :) Happy programming!

[12:17] <census> thanks Zoffix ! :)

[12:17] <RabidGravy> gah, anyone object if I remove 2017.01 from the DBIish travis, maybe add a more recent one?  It's failing to install NativeHelpers::Blob

[12:18] <Skarsnik> yeag

[12:18] <Skarsnik> you can

[12:21] <Geth> ¦ doc: dfed8116cf | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Programs/00-running.pod6

[12:21] <Geth> ¦ doc: Polish RAKUDO_LINE_EDITOR docs

[12:21] <Geth> ¦ doc: 

[12:21] <Geth> ¦ doc: - Add `none` editor to list

[12:21] <Geth> ¦ doc: - use "non-interactive" instead of "fake" to describe `bare` editor

[12:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dfed8116cf

[12:22] <RabidGravy> 👍

[12:24] *** piojo joined
[12:25] * Zoffix &

[12:35] <RabidGravy> okay deleting my version of System-Passwd didn't have quite the effect I anticipated

[12:35] *** piojo left
[12:35] <RabidGravy> the https://github.com/perl6-community-modules/System-Passwd/ is now a fork of one from FROGGS

[12:36] <RabidGravy> ho hum

[12:37] *** MasterDuke joined
[12:38] *** Aaronepower joined
[12:41] <RabidGravy> there all green again https://travis-ci.org/perl6/DBIish 👍

[12:41] <Skarsnik> :)

[12:42] *** piojo joined
[12:43] *** perlpilot joined
[12:43] <[Coke]> doc/Programs/00-running.pod6 is complaining about a missing > for a C< (though I don't see it.)

[12:43] <[Coke]> ah, found it: line 137

[12:44] <[Coke]> Should that trip t/pod-valid.t ?

[12:44] <[Coke]> (It doesn't now because it was only a warning)

[12:45] *** Ven`` joined
[12:46] *** SHODAN joined
[12:46] <Skarsnik> nine, can you write somewhere what is involvled for all the NC stuff? or it's already quite clear?

[12:47] <Geth> ¦ doc: 9a083c425f | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Programs/00-running.pod6

[12:47] <Geth> ¦ doc: Fix typo; [Coke]++

[12:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9a083c425f

[12:47] <Zoffix> [Coke]: yeah, I think it should trip it

[12:48] <Zoffix> The automatic doc site rebuild is still broken. 

[12:49] <Zoffix> [Coke]: I noticed the cronjob got PATH added to it. What was that fixing?

[12:50] <Zoffix> Wonder if the flock isn't flocking, so it pulls commits too soon and doesn't notice updates happened or something

[12:55] *** ParsonsNose left
[12:57] <Geth> ¦ doc: ad498b2794 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[12:57] <Geth> ¦ doc: Commit to debug build (1)

[12:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ad498b2794

[12:59] <[Coke]> Zoffix: it was fixing the fact that there are two versions of node/npm/node-gyp available, and that the cron env was finding the old, system one.

[12:59] *** gdonald joined
[13:00] <Zoffix> Ah

[13:00] <Geth> ¦ doc: 359d1a9230 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[13:00] <Geth> ¦ doc: build-debug-2

[13:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/359d1a9230

[13:00] <nine> Skarsnik: I've got the fix pretty much done in my head already :) Helps that I've spent the past few days working on JITing NC

[13:01] <[Coke]> It's possible that my rewrite of the .sh that respects 'force-update' has the wrong logic for "if a real update happened"

[13:01] <Zoffix> Ohhh haha

[13:01] <Zoffix> Found it!

[13:01] <[Coke]> but force-update does seem to DTRT.

[13:01] <Zoffix> [Coke]: "rm: cannot remove '/home/doc.perl6.org/force-update': No such file or directory" :) and the script is set to exit on failure

[13:01] * Zoffix hackety-hacks

[13:01] <Skarsnik> nine, I kinda want to add mising stuff in NC like sized array

[13:01] <[Coke]> Zoffix: DAMMIT.

[13:02] <Zoffix> :D

[13:02] <Skarsnik> or a c-str type maybe

[13:02] <[Coke]> good find, thank you

[13:03] *** cdg joined
[13:03] *** mcmillhj joined
[13:03] <Ven``> https://rt.perl.org/Public/Bug/Display.html?id=131979#ticket-history what's the usual course of action for that?

[13:04] <Geth> ¦ doc: 88cf85749c | (Zoffix Znet)++ (committed using GitHub Web editor) | util/update-and-sync

[13:04] <Geth> ¦ doc: Do not exit if there's no `force-update` to remove

[13:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/88cf85749c

[13:04] <Zoffix> Ven``: clicking the "S" button in top right to mark it as spam and get it deleted

[13:05] <RabidGravy> Skarsnik, nine, I'd love shaped str in a CStruct if you;re looking for something to do :)  

[13:05] *** konsolebox left
[13:05] * Zoffix clicks the "S"

[13:05] <[Coke]> Zoffix++ Zoffix++ Zoffix++

[13:05] <Zoffix> [Coke]++ # fixing original issues :)

[13:06] <Ven``> Zoffix: seems like the deleted tickets are shown in fail.rakudo.party (i.e. https://rt.perl.org/Public/Bug/Display.html?id=131944#ticket-history )

[13:07] <Ven``> ah, but I'd need a rt.perl.org account. Scratch that.

[13:07] <raschipi> m: head [xx] 16, *: 10  #Perl6 is Lisp without parens after all.

[13:07] <camelia> rakudo-moar 7d1ece: ( no output )

[13:07] <[Coke]> might need a few minutes to sync out to the party

[13:07] <Ven``> raschipi: what's lispy there? :)

[13:07] <raschipi> m: say head [xx] 16, *: 10

[13:07] <camelia> rakudo-moar 7d1ece: OUTPUT: «(16 16 16 16 16 16 16 16 16 16)␤»

[13:07] <raschipi> the lists

[13:08] <Ven``> [Coke]: the ticket was deleted on the 22th, if you're talking to me

[13:08] <Zoffix> Ven``: yeah, RT's API doesn't tell that a ticket was "deleted", so currently fail.rakudo.party doesn't know a ticket got deleted (unless you do a full db rebuild). So currently, I just manually delete them from the database once in a while

[13:08] <raschipi> m: (say (head ([xx] 16, *): 10))

[13:08] <camelia> rakudo-moar 7d1ece: OUTPUT: «(16 16 16 16 16 16 16 16 16 16)␤»

[13:09] <Ven``> Zoffix: ah, I see. Thanks for the precision!

[13:11] *** konsolebox joined
[13:12] *** dmaestro left
[13:12] <raschipi> u: •

[13:12] <unicodable6> raschipi, U+2022 BULLET [Po] (•)

[13:13] *** stmuk_ joined
[13:13] *** cdg_ joined
[13:15] *** stmuk left
[13:16] *** cdg left
[13:17] *** jonas1 left
[13:31] *** skids joined
[13:56] <census> Zoffix they are getting mad at me again! :(

[13:56] *** benchable6 left
[13:56] <Zoffix> census: why?

[13:56] *** benchable6 joined
[13:56] *** ChanServ sets mode: +v benchable6

[13:57] <census> i think they don't like the way i'm writing my code. i don't know. they were a little insulting too. they told me to call a variable $shit

[13:57] <Zoffix> .hug census 

[13:57] * huggable hugs census 

[13:57] *** bdmatatu joined
[13:57] <census> haha thanks Zoffix i'm okay. i don't want to get banned again. i just don't know how to communicate in a way to get the help i need

[13:57] <Zoffix> census: sadly, don't know an easy solution to the problem.

[13:57] <census> i wrote the code myself

[13:58] *** ryu0 left
[13:58] <Zoffix> census: you could try out Rakudo and write your code in it :) https://perl6.org/

[13:59] <census> Zoffix thanks. at this point, i know perl5 too well and for the work i'm doing i don't think perl6 is well developed. at least it hadn't been at the time

[13:59] <Zoffix> Fair enough :)

[13:59] <Zoffix> What type of work is that, out of curiosity?

[14:00] <census> Zoffix i am going to a website to collect some information off of it

[14:00] <Zoffix> census: is JavaScript involved?

[14:00] <census> Zoffix i don't know. i forgot how to check for JSON and all that

[14:01] <Zoffix> census: which website is it?

[14:01] <census> Zoffix i used to code in perl very regularly but i'm rusty now

[14:01] <census> i want to do it for pubmed and for google

[14:01] *** stmuk_ is now known as stmuk

[14:01] <Zoffix> Ah, google will probably get you banned. It's against their TOS. They banned my Happy New Year party bot :)

[14:02] <census> Zoffix for example https://www.ncbi.nlm.nih.gov/pubmed/?term=Babesiosis+AND+((%221990%2F01%2F01%22%5BPDat%5D+%3A+%221990%2F12%2F31%22%5BPDat%5D))

[14:03] <Zoffix> Yeah, that uses javascript.

[14:04] <census> Zoffix does that mean i can be okay if i use a JSON type package?

[14:04] *** ParsonsNose joined
[14:04] <Skarsnik> dunno result look normal html5

[14:04] <Zoffix> Skarsnik: but you need JS to load it :)

[14:04] <Zoffix> census: not sure what you mean. I'd use one of the modules listed here: https://metacpan.org/pod/distribution/WWW-Mechanize/lib/WWW/Mechanize/FAQ.pod#Which-modules-work-like-Mechanize-and-have-JavaScript-support?

[14:05] *** trone joined
[14:06] <Zoffix> census: or poke at the site more and see where it's fetching data from and try fetching from there in your script. Or see if they got an API handy

[14:06] <Zoffix> Like they got some data on their FTP: ftp://ftp.ncbi.nlm.nih.gov/

[14:07] <census> Zoffix I do not expect there is such if google doesn't

[14:08] <perlpilot> census: but, if you're scraping the page (i.e. there is no API), don't parse "HTML with a regex" is still good advice.

[14:08] <census> perlpilot #perl still scares me to death

[14:08] <perlpilot> census: they sense your fear  ;)

[14:08] <census> "census: if that's the way you're going to listen to people I start to understand why you were banned 5 years ago."

[14:09] <census> i wrote my own code. i'm trying

[14:09] <perlpilot> census: aye.   

[14:09] <raschipi> H͕͚̼̤̝͚e͞'̖̗͘s ͔̯̹͕̱̖́c̟̩̳o̟͘ͅm̛̤̩̲̬̫m̧͇͍i͍̠̩̣͢n͇g͓̪͕ͅ.̞̻͈̠͕̪

[14:09] <b2gills> census: you could try stackoverflow.com or codereview.stackexchange.com

[14:09] <census> i used to use www-mechanize

[14:10] <perlpilot> #perl is particular, but they do try to help  (even if sometimes that help is in ways that you don't want or aren't expecting)

[14:10] <census> perlpilot i'm okay, i just don't want them to ban me, and i don't know how to do the code differently

[14:12] <perlpilot> census: try using one of the modules suggested to pull out the parts of the text that you're interested in.  Mojo::DOM is really good if you understand CSS selectors

[14:14] <perlpilot> census: but ... if javascript is involved, you'll still want to do what Zoffix said

[14:14] <perlpilot> anywho ... I've got a meeting to go to.

[14:14] <perlpilot> census: good luck!

[14:14] <census> perlpilot i used to use these modules, but i remember they're complicated. isn't there a way to figure out how the website it?

[14:15] <Zoffix> census: how abusive is what you're trying to do? Is it just one search term or are you gonna be doing lots of them?

[14:16] <census> a few searches, but i didn't realize it's conisdered abusive ?

[14:16] <Skarsnik> use the 'debug' tool of your browser?

[14:16] <census> i'll add something like sleep(20) to slow down the hits

[14:17] <census> they let you download the data as .csv files, but i'd much prefer to organize the searches this way 

[14:17] <Zoffix> census: there's "Create RSS" link under the search field. Pop open browser dev tools, click it, it'll tell you where and what fields to POST and reponds in JSON with a URL to RSS that you can parse with an RSS module

[14:17] <Zoffix> census: wouldn't CSV files be like a billion time easier to use?

[14:18] <census> Zoffix i have a few search terms. and if i do it wrong and change my mind on what i want, it'll be easier to use perl

[14:20] *** Xliff_ joined
[14:21] <Zoffix> census: they have API: https://www.ncbi.nlm.nih.gov/home/develop/api/

[14:21] <Zoffix> use thagt

[14:23] *** Xliff left
[14:23] <Zoffix> Like https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pmc&term=Babesiosis&tool=my_tool&email=my_email@example.com

[14:24] <census> thanks Zoffix! i've never written code with API before. what does that all mean conceptually. all of the work i did was with websites that did not have an API

[14:24] <Zoffix> census: Which gives you IDs for the search. And you can then get metadata by IDs via https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&id=5547184&retmode=json&tool=my_tool&email=my_email@example.com

[14:25] *** Cabanossi left
[14:25] <Zoffix> And you can get full text by ID via: https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pmc&id=5547184&tool=my_tool&email=my_email@example.com

[14:25] <census> Zoffix my goal is to do a search like https://www.ncbi.nlm.nih.gov/pubmed/?term=Babesiosis+AND+((%221990%2F01%2F01%22%5BPDat%5D+%3A+%221990%2F12%2F31%22%5BPDat%5D))   and take down the `53'

[14:26] *** Kyo91_ joined
[14:26] <census> Zoffix are you saying i can simply just download all the bibliographies?

[14:26] <Zoffix> census: that's all you need? Just the total number?

[14:26] <census> yea totals for several searches

[14:27] <census> i suppose with all the bibliographies i can be more flexible, but i was just thinking totals would suffice

[14:27] *** Cabanossi joined
[14:28] <census> Zoffix they have an option to download the .csv if you don't search by year https://www.ncbi.nlm.nih.gov/pubmed/?term=Babesiosis   and the .csv breaks it down by year as i'm looking to do

[14:28] *** cdg_ left
[14:29] <census> Zoffix However I didn't want the .csv option. I wanted to just make a .txt if i can that has the search term for a year and the number of hits, one result at a time

[14:32] <Zoffix> census: you can load the CSV with perl and manipulate the data.

[14:32] <Zoffix> .oO( Mojo::CSV module )

[14:33] *** cdg joined
[14:33] <census> Zoffix 1. I didn't want to have to manually enter each search term, then find each .csv. Especially if what I do changes.   Is there a way I can write a perl script to do anything

[14:33] <census> for example, I want a .txt file that's like this. row 1: 'Babesiosis',1990,53   row 2: 'Babesiosis',1991,59

[14:35] *** AlexDaniel joined
[14:36] *** cognominal joined
[14:36] <census> Zoffix i want to load in a few search terms into 1 .txt file. Then the output be as I described. If that's possible

[14:44] *** araraloren joined
[14:51] <Zoffix> census: if all you want is a result count, just see if it's reported anywhere on the page. Grab a UA module, make a request, look whether it's reported anywhere

[14:52] *** lowbro left
[14:53] *** ufobat joined
[14:53] <census> Zoffix i wrote a script already

[14:54] <Zoffix> heh

[14:54] <Zoffix> OK then

[14:54] <census> Zoffix yes the total count is reported on the website. i'm not fully sure why my script isn't working. my guess is partly with the regex i had tried that #perl opposed. or maybe it's the API aspect

[14:55] <Zoffix> census: this works: perl6 -MDOM::Tiny -MWWW -e 'DOM::Tiny.parse(post(q|https://www.ncbi.nlm.nih.gov/pubmed|, term => q|(Babesiosis AND (("1990/01/01"[PDat] : "1990/12/31"[PDat])))|)).at(q|meta[name="ncbi_resultcount"]|).attr("content").say'

[14:55] <Zoffix> gives 53

[14:56] <census> Zoffix you mean i can write it in perl6 ? :)

[14:58] <Zoffix> census: of course! :)

[14:58] *** rindolf left
[14:58] <Zoffix> census: Rakudo has been more or less production ready since 2015.12

[14:59] <census> i had last used perl circa 2014

[14:59] <Zoffix> Ah, that was before first stable release :)

[15:00] <Zoffix> Perl version, for the record: perl -MMojo::UserAgent -wlE 'say Mojo::UserAgent->new->get(q|https://www.ncbi.nlm.nih.gov/pubmed|, form => { term => q|(Babesiosis AND (("1990/01/01"[PDat] : "1990/12/31"[PDat])))| })->result->dom->at(q|meta[name="ncbi_resultcount"]|)->attr("content")'

[15:00] <Zoffix> Good luck \o

[15:00] * Zoffix &

[15:01] <Ven``> it's very nice we can do this that easily. Zoffix++

[15:01] <census> i may need some help if that's okay because i never coded before in perl 6. 

[15:01] <census> i use windows XP. does anybody have a suggestion for what version of perl6 i should download?

[15:01] <raschipi> census: That's what this chgannel is all about

[15:02] <raschipi> census: you really should solve your xp problem.

[15:02] <Zoffix> census: you could try the latest one here: https://rakudo.perl6.org/downloads/star/

[15:02] <census> raschipi haha i like XP :)

[15:02] <Zoffix> This one: https://rakudo.perl6.org/downloads/star/rakudo-star-2017.07-x86_64%20(JIT).msi

[15:03] <Zoffix> I'm assuming you're on 64-bit version

[15:08] <census> Zoffix I suppose we'll find out as I'm downloading it now -- we'll learn if it's compatible :)

[15:08] <census> Zoffix thank you so much for your kindness

[15:08] <raschipi> some people are just generous like that, contributting to botnets.

[15:08] <Zoffix> Any time \o

[15:11] <census> raschipi thank you for understanding :)  #perl6 has always been very kind

[15:11] <census> it was always such a shame i had to use #perl

[15:12] <Zoffix> It's a work in progress. I've seen some pics from recent Perl Conference with Ruth showin a presentation about empathy.

[15:12] <census> Zoffix if i do something like sleep(20) for google, will that help

[15:12] <andreoss> Zoffix: my point is `cat ... | perl6` should not start the repl at all, rather read /dev/stdin as it was pass as an argument

[15:13] <andreoss> https://github.com/perl6/nqp/blob/master/src/HLL/Compiler.nqp#L372

[15:13] <census> i don't need speed on the google searches in want to do

[15:13] <andreoss> i believe this should go here

[15:13] <Zoffix> andreoss: why is starting the REPL a problem?

[15:14] <andreoss> it's not nessesary

[15:14] <raschipi> It doesn't start for me with "perl6 -".

[15:17] <Zoffix> census: it's pretty advanced. Basically, if it suspects you're parsing with a robot, it'll throw a captcha and if your bot doesn't solve it you get blacklisted :)

[15:18] <census> i know i coded around a website that had that problem before. i used TOR and ran perl through that

[15:19] <Zoffix> andreoss: well, right now I can control when REPL gets started. With your proposal, we don't

[15:19] *** cdg left
[15:19] <Zoffix> andreoss: also, it doesn't get started. The bare line editor evals in REPL.new and exits

[15:21] <Zoffix> andreoss: I'm familiar with that code path, but wouldn't starting the REPL still read from stdin? 

[15:21] <Zoffix> *I'm NOT familiar

[15:22] <andreoss> at what stage REPL.new is called?

[15:23] <census> Zoffix it says that version isn't compatible with 32

[15:23] <census> Win32

[15:23] <Zoffix> andreoss: right here: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Compiler.nqp#L75

[15:23] <Zoffix> census: right, well you're a bit out of luck. We don't have recent-enough builds for 32bit windows.

[15:24] <Zoffix> census: how much RAM you got?

[15:24] <census> i don't know how much RAM i have. does that mean i won't be able to use perl6 on my XP?

[15:24] <Zoffix> Oh wait, I guess if host os is 32-bit, you can't run 64-bit VM. So never mind

[15:24] *** bisectable6 left
[15:24] *** unicodable6 left
[15:24] *** benchable6 left
[15:24] *** committable6 left
[15:24] *** bloatable6 left
[15:24] *** coverable6 left
[15:24] *** evalable6 left
[15:24] *** releasable6 left
[15:24] *** quotable6 left
[15:24] *** statisfiable6 left
[15:24] *** greppable6 left
[15:24] <Zoffix> census: you could try building from source. The only build we have is like from a year and a half ago, which is ancient

[15:26] <Zoffix> census: though my recent attempt building on 32bit box failed. Dunno if the problem was fixed. The Windows build is a bit thorny ATM, and 32-bit even more so.

[15:26] <Zoffix> census: you should upgrade your OS. It's not safe.

[15:27] <Zoffix> census: get yourself a nice linux: http://www.bodhilinux.com/

[15:28] <Zoffix> census: if you want to attempt to build from source; though I'm betting 50/50 it'll fail: https://github.com/zoffixznet/r#windows

[15:29] *** census left
[15:30] <Zoffix> andreoss: anyway, I don't have any strong feelings on where this feature is handled. If you're able to make a PR moving it out of REPL, I'll be +1 on merging it.

[15:30] *** wamba left
[15:30] <Zoffix> Docs for nqp ops are here: https://github.com/perl6/nqp/blob/master/docs/ops.markdown

[15:30] <Zoffix> s: $*IN, 't', \()

[15:30] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/7d1ece805/src/core/IO/Handle.pm#L549

[15:31] <Zoffix> ^ that gives the example for how to check for whether STDIN is a tty

[15:32] *** cdg joined
[15:35] *** census joined
[15:35] <census> Zoffix i have some access to a neighbor's computer i think it's windows 7

[15:35] <census> i barely know how to use windows 7 though

[15:36] <census> what would be the download for it?

[15:37] <Zoffix> census: this: https://rakudo.perl6.org/downloads/star/rakudo-star-2017.07-x86_64%20(JIT).msi

[15:38] <Zoffix> census: well, is it 64-bit Win7?

[15:39] <Zoffix> (Start -> right click "Computer" -> Properties -> the System section has "System type" info that says 64-bit Operating System)

[15:40] *** ParsonsNose left
[15:40] <census> Zoffix yes i see 64

[15:40] <Zoffix> Cool. Then download that link and install

[15:41] *** ParsonsNose joined
[15:42] *** pmurias joined
[15:43] <Ven``> That SPW deopt talk is nice but really complex ;o).

[15:43] <Ven``> .oO( When you gaze into the deeper parts of MoarVM, a one-liner gazes back into you )

[15:44] <census> Zoffix okay i'm in a perl6 window i believe

[15:44] <census> To exit type 'exit' or '^D'

[15:44] <Zoffix> yey \o/

[15:45] <Ven``> \o/

[15:45] <Zoffix> census: now run    zef --/test install WWW DOM::Tiny

[15:45] <Zoffix> That'll get you two modules my one liner uses

[15:45] <Zoffix> the one-liner to parse your website stuff and get results count

[15:46] <census> > zef --/text install WWW DOM::Tiny ===SORRY!=== :: not yet implemented

[15:46] <census> Did i type it incorrectly?

[15:47] <Zoffix> census: nah, you typed it into rakudo's REPL. You need to type it into Windows's command prompt

[15:47] <Zoffix> census: press Win+R, type "cmd" and press Enter

[15:47] <Zoffix> and then type the zef command

[15:50] <census> okay thanks Zoffix. This is all coming back to me, how'd I do that sort of thing for perl5

[15:50] *** kyan joined
[15:50] <Zoffix> Yeah, it's similar :)

[15:51] <Zoffix> ( download http://strawberryperl.com/ ; Win+R -> "cmd" -> cpanm -vn Mojolicious ; run the one liner)

[15:51] *** MasterDuke left
[15:52] <census> Zoffix i should download strawberry perl on this one too? i have it on my other one with xp

[15:52] <census> okay cmd finished doing that part

[15:52] <Zoffix> census: if you want to programm Perl, yeah. But it's not needed for Rakudo 

[15:52] <Zoffix> census: ohh, actually yeah install it. It comes with a C compiler that I think you need for some modules (not 100% sure tho)

[15:53] <timotimo> someone put the thing that crashes mate terminal into the irc again?

[15:53] <Zoffix> huggable: nuclear option

[15:53] <huggable> Zoffix, say "\c[LATIN SMALL LETTER O, COMBINING TRIPLE UNDERDOT]"

[15:53] <Zoffix> m: say "\c[LATIN SMALL LETTER O, COMBINING TRIPLE UNDERDOT]"

[15:53] <camelia> rakudo-moar 7d1ece: OUTPUT: «o⃨␤»

[15:53] <timotimo> i can't scroll up very far

[15:53] <timotimo> wat

[15:53] <timotimo> well, thanks

[15:54] <Zoffix> timotimo: oh, sorry. I thought you were asking for someone to put it in again. Ooops

[15:54] <raschipi> sorry timotimo 

[15:54] <timotimo> an easy mistake to make i guess?

[15:55] <raschipi> mate terminal isn't optimized for fun

[15:55] <census> Zoffix okay i'm installing strawbery here too. that other command finished in the cmd

[15:55] <Zoffix> .hug timotimo 

[15:55] * huggable hugs timotimo 

[15:55] * raschipi hugs timotimo 

[15:56] *** Aggressively_Alp joined
[15:56] <Zoffix> census: did it finish successfully? It failed on my box actually :(

[15:56] * geekosaur thought that wasn't mate-terminal... esp. since he tried pasting it into a mate-terminal here and didn't crash

[15:57] <Zoffix> "No such method 'IO' for invocant of type 'Any' in whatevercode  at C:\rakudo\share\perl6\site\sources\A20270EDF7F9A81C64950C05D5A79B5B310E17BB (Zef::Extract) line 19"

[15:57] <census> Zoffix i don't know. it looks like there were some issues. should i copy and paste the result?

[15:57] <Zoffix> census: yeah, pastebin it to gist.github.com or some other pastebin

[15:57] <raschipi> census: not in the chgannel, use a pastie

[15:58] *** ParsonsNose left
[15:58] <census> Zoffix raschipi https://pastebin.com/BPjFEd60

[15:58] <geekosaur> right, no crash here

[15:59] <Zoffix> census: I have a different error. To fix yours just download and install git: https://git-scm.com/download/win

[16:01] * Zoffix is reminded of yet another thing promised: making ecosystem generator add URLs to zip archives for modules on github, since it can figure them out

[16:02] <census> Zoffix i downloaded it and ran the .exe. do i need to do anything else? or should i just go straight to the cmd and run that again?

[16:03] <Zoffix> census: close the cmd and open it again (in case git added any env vars, to refresh them) and then... 1 sec

[16:03] <Zoffix> census: I'm trying something to fix the error I'm having 1 sec.

[16:05] *** AlexDaniel left
[16:05] <Zoffix> (1 min, I guess :) slow network)

[16:06] <census> Zoffix it's all good. i'm running it again, unless you think i should have waited longer

[16:07] *** AlexDaniel joined
[16:08] <Zoffix> census: my fix didn't work, so yeah, run again and see if you get similar error to mine

[16:09] <Zoffix> (for record, the fix attempt was installing newer zef with  zef --force install https://github.com/ugexe/zef/archive/master.zip )

[16:10] <census> Zoffix it looks ok on mine. i'll copy and paste the outcome

[16:11] <census> Zoffix here it is: https://pastebin.com/T0XT9jBE

[16:11] <Ven``> Didn't expect I'd read about lattices from a Perl 6 talk. That's amazing.

[16:11] <Zoffix> census: yeah, it installed fine

[16:11] <Ven``> my brain hurts

[16:12] <Zoffix> census: the only thing with the oneliner is you need to flip the quotes on Windows and I can't test if it still works:     perl6 -MDOM::Tiny -MWWW -e "DOM::Tiny.parse(post(q|https://www.ncbi.nlm.nih.gov/pubmed|, term => q|(Babesiosis AND (('1990/01/01'[PDat] : '1990/12/31'[PDat])))|)).at(q|meta[name='ncbi_resultcount']|).attr('content').say"

[16:13] <Zoffix> census: but if it doesn't. Just shove it into some file and run the file with `perl6 some-file.p6`    this is the code: use DOM::Tiny; use WWW; DOM::Tiny.parse(post(q|https://www.ncbi.nlm.nih.gov/pubmed|, term => q|(Babesiosis AND (("1990/01/01"[PDat] : "1990/12/31"[PDat])))|)).at(q|meta[name="ncbi_resultcount"]|).attr("content").say

[16:13] <census> what do you mean by flip quotes Zoffix ?  and that i run in perl 6 or the cmd

[16:13] *** trone left
[16:14] <Zoffix> census: the cmd. On linux perl6 -e 'say "hi"' becomes perl6 -e "say 'hi'" on Windows (like Windows uses double quotes to quote arguments, while Linux single quotes (more or less) and you need to change single quotes to double quote4s and doubles to singles, usually)

[16:18] <census> Zoffix can i write perl6 in a .txt file? just save it as .pl6 instead of .pl ?

[16:18] <AlexDaniel> Zoffix: thanks, that was quick

[16:19] <Zoffix> AlexDaniel: I didn't test it, but I think that should fix it

[16:19] *** Skarsnik_ joined
[16:20] <Zoffix> census: you can write it in a .txt file if you want. Extension doesn't matter much

[16:20] <Zoffix> huggable: atom ide

[16:20] <huggable> Zoffix, https://github.com/perl6/Atom-as-a-Perl6-IDE

[16:20] <Zoffix> census: ^ some details on how to get a nice editor with Rakudo syntax highlighting

[16:21] <census> Zoffix i have to take a coding break for about 30 mins. can we speak in a little?

[16:21] <AlexDaniel> Zoffix: it doesn't

[16:21] <AlexDaniel> Zoffix: Type check failed in assignment to $!ca-file; expected Str but got Any (Any)

[16:22] <AlexDaniel> Zoffix: well, that's some progress anyway :)

[16:22] <Zoffix> census: sure, though I'm about to leave to work and will likely be busy for some time

[16:23] *** Skarsnik left
[16:23] <Zoffix> AlexDaniel: k, pushed another commit that I think fixes it

[16:24] <AlexDaniel> Zoffix: yup! Thank you very much!

[16:24] <Zoffix> \o/

[16:24] <Zoffix> Any time.

[16:24] *** Skarsnik_ is now known as Skarsnik

[16:24] * Zoffix &

[16:26] *** coverable6 joined
[16:26] *** committable6 joined
[16:26] *** bloatable6 joined
[16:26] *** bisectable6 joined
[16:26] *** ChanServ sets mode: +v bisectable6

[16:26] *** quotable6 joined
[16:26] *** ChanServ sets mode: +v quotable6

[16:26] *** releasable6 joined
[16:26] *** greppable6 joined
[16:26] *** evalable6 joined
[16:26] *** benchable6 joined
[16:26] *** unicodable6 joined
[16:26] *** ChanServ sets mode: +v unicodable6

[16:26] *** statisfiable6 joined
[16:26] <census> Zoffix which quotes are the problem ones?

[16:27] <raschipi> census: If you put double quotes on the outside, cmd will complain.

[16:27] <census> raschipi the code worked

[16:28] <census> so here's what i want to do:

[16:28] <Zoffix> census: the quotes surrounding the code need to be double quotes. This means the double quotes in the code itself become special and need to be either escaped (by adding a backslash before them \") or replaced to single quotes.

[16:28] <Zoffix> census: well, if the code worked, then no quotes are problematic :)

[16:28] <census> i want to loop that over a set of years. loop that over a set of search terms that i'll feed into a .txt. and then output as a .txt

[16:28] <census> for example: Babesiosis,1990,53

[16:28] <census> where i upload a .txt with some words like Babesiosis

[16:29] <census> i understand the idea of looping from perl5 Zoofix raschipi and making variables and printing and uploading and saving as .txt

[16:29] <Zoffix> m: my @terms = <Babesiosis  Dudesiosis>; for 1990..1993 -> $year { for @terms -> $term { "$term:$year".say } }

[16:29] <camelia> rakudo-moar 7d1ece: OUTPUT: «Babesiosis:1990␤Dudesiosis:1990␤Babesiosis:1991␤Dudesiosis:1991␤Babesiosis:1992␤Dudesiosis:1992␤Babesiosis:1993␤Dudesiosis:1993␤»

[16:29] <census> in fact i had tried writing a code already in perl5 to do all that Zoffix . i just didn't know how to translate that all into perl6

[16:30] <census> Zoffix instead of @terms i'd rather input it from a .txt file ?

[16:30] <census> is # also the command for commenting out and documentation?

[16:30] <Zoffix> census: how is the .txt file formatted? One search term per line?

[16:30] <Zoffix> census: # comments yeah.

[16:30] <census> Zoffix yes 1 search item per line

[16:31] <Zoffix> census: ok:  my @terms = "the-file.txt".IO.lines

[16:31] <Zoffix> There are some language 5to6- tuts here (top 5 or so). Dunno how good they are: https://docs.perl6.org/language.html

[16:31] <census> i didn't know how to adjust the Babesiosis AND (("1990/01/01"[PDat]  part of the website to reflect variables. that's how I did the perl5 program

[16:31] *** smls joined
[16:32] <census> Zoffix do i need a semi-colon on a line like my @terms = "the-file.txt".IO.lines ?

[16:32] <census> obviously change the file name

[16:33] <Zoffix> census: my &term = { q|(| ~ $:term ~ q| AND (("| ~ $:year ~ |/01/01"[PDat] : "| ~ $:year ~ q|/12/31"[PDat])))| };  for 1990..1993 -> $year { for @terms -> $term { say term :$term, :$year; } }

[16:33] <Zoffix> census: that'll make the search query string that you give as :term param to get() routine

[16:34] <Zoffix> m: my &term = { q|(| ~ $:term ~ q| AND (("| ~ $:year ~ |/01/01"[PDat] : "| ~ $:year ~ q|/12/31"[PDat])))| }; say term :term<Dudosis>, :2017year

[16:34] <camelia> rakudo-moar 7d1ece: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3 ~ $:term ~ q| AND (("| ~ $:year ~ |/01/7⏏0501"[PDat] : "| ~ $:year ~ q|/12/31"[PDat␤    expecting any of:␤        infix␤        infix stopper␤     …»

[16:34] <Zoffix> Well, if you spell it right :)

[16:34] <Zoffix> m: my &term = { q|(| ~ $:term ~ q| AND (("| ~ $:year ~ q|/01/01"[PDat] : "| ~ $:year ~ q|/12/31"[PDat])))| }; say term :term<Dudosis>, :2017year

[16:34] <camelia> rakudo-moar 7d1ece: OUTPUT: «(Dudosis AND (("2017/01/01"[PDat] : "2017/12/31"[PDat])))␤»

[16:34] <Zoffix> that one

[16:34] <Zoffix> census: yeah, you need semicolon after lines

[16:35] <census> Zoffix you kinda lost me on what to do with the DOM::Tiny.parse(post(q|https://www.ncbi.nlm.nih.gov/pubmed| part ?

[16:35] <Zoffix> census: check out the resources in "For newcomers" section listed on this page: https://perl6.org/resources/

[16:35] <Zoffix> census: the post() thing makes a web request. The DOM::Tiny.parse part parses it

[16:37] <census> Zoffix here's the pastebin i have of the code so far: https://pastebin.com/RRJS2uma

[16:38] <census> sorry i'm not following how to do the search part when it's in terms of variables in perl6

[16:43] <census> i need to do 2 more things it seems like. 1) fix up the variables-loop aspect. i feel like i didn't fully understand how you spelled that out.   2) instead of `say'  `print' and `print' to a .txt file but i'm guess that part will be very similar to how I did it in perl5

[16:44] *** leont joined
[16:45] *** bwisti joined
[16:45] <Zoffix> census: here, try this out: https://gist.github.com/zoffixznet/0f54957ea784dc52e43cee0e0766c0ff

[16:45] <Zoffix> census: put terms in terms.txt and results will be written to results.txt

[16:46] <Zoffix> `post` makes Web request, passing search term as term. DOM::Tiny.parse parses it and extracts the number of search results from <meta> HTML element 

[16:46] <Zoffix> `make-term` sub makes the term to give to web service, based on given term and year

[16:47] <Zoffix> And .spurt: :append writes it to the file, appending it to the end

[16:47] <Zoffix> https://docs.perl6.org/routine/spurt

[16:48] <Zoffix> The rest are just loops and prints()/says() to screen about progress

[16:48] <census> Zoffix this is perfect !!  thank you so much

[16:48] <Zoffix> Any time \o

[16:48] * Zoffix leaves to work

[16:48] <census> yea i'm familiar with the say and print from perl5

[16:52] *** zakharyas joined
[16:55] *** Cabanossi left
[16:56] *** wamba joined
[16:57] *** Cabanossi joined
[17:00] *** wamba left
[17:03] *** rindolf joined
[17:08] *** piojo left
[17:13] *** wamba joined
[17:17] *** MasterDuke joined
[17:20] *** nadim joined
[17:21] *** itaipu joined
[17:24] <census> hi rindolf

[17:25] <rindolf> census: meow

[17:26] <rindolf> census: how are you?

[17:26] <census> rindolf not sure you remember me. it's been some time. i've been good. i wrote my first perl6 program today with lots of help. i used to do #perl but perl6 people are nicer and now perl6 has the library i need in it finally

[17:27] <rindolf> census: i  see - nice

[17:27] <census> Zoffix what will be the problem with google?

[17:28] <rindolf> census: i wrote some https://projecteuler.net/ solutions in p6

[17:29] <census> is there a sleep(5); type option in perl6?

[17:31] <Zoffix> census: yeah, sleep(5) works

[17:31] <Zoffix> census: the problem with goodle is they might ban you.

[17:31] <census> even with sleep(5) ? what if i do it thorugh something like TOR 

[17:32] <Zoffix> census: well, not entirely, it's just trying to use google will show the captcha thing

[17:32] <Zoffix> It's pretty annoying :)

[17:32] <APic> :)

[17:32] <APic> 😎

[17:32] <census> yea i know about the captcha. i had that for another site and i used TOR to get around it

[17:32] <Zoffix> census: dunno, try and see. I think it's safe to try and just see if you get banned.

[17:32] <census> do you think pubmed will have that problem?

[17:32] <census> also it's for google patents? google patents has a similar search engine where i could do .csv files so maybe they're okay with that feature of it?

[17:33] <Zoffix> census: dunno, depends on their resources. You could always contact them and ask what's the best approach is to gather the data you want.

[17:35] <Zoffix> What are you building anyway? Searching for patentable medical inventions?

[17:35] <Zoffix> :)

[17:36] <census> yes Zoffix :)  seriously

[17:37] *** Kyo91_ left
[17:37] <census> if i get banned with the google one, will i be okay if i just type in the captcha manually in google? like it's not a permanent IP ban

[17:38] <Zoffix> census: right, it's not permament.

[17:38] <census> do you know what TOR is?

[17:39] <Zoffix> Yup.

[17:39] <El_Che> With the hammer, right?

[17:39] <census> could I use TOR with perl6 ?

[17:39] <census> i used to use TOR with perl5

[17:39] <Zoffix> Not something I have experience with.

[17:40] <Zoffix> How did you use it with Perl? You could load the relevant module via Inline::Perl5

[17:40] <Zoffix> buggable: eco Inline::Perl5

[17:40] <buggable> Zoffix, Inline::Perl5 'Use Perl 5 code in a Perl 6 program': https://github.com/niner/Inline-Perl5

[17:40] *** Kyo91_ joined
[17:40] <census> to be honest,i don't quite remember. i have my old code still and can show you but it was a little complicated

[17:40] <census> i think i did it through cygwin in fact oddly

[17:40] <Zoffix> I see this module: https://metacpan.org/pod/LWP::UserAgent::Tor

[17:40] <Zoffix> Pretty sure you'd be able to load it via Inline::Perl5 and just do your request via it.

[17:41] <Zoffix> the post() stuff

[17:43] <Zoffix> At least on Linux :) Never tried Inline::Perl5 on Windows

[17:43] <census> yes i used post()

[17:44] <census> i had another site that i used that would give me a captcha, and that's how i got around it

[17:46] *** |oLa| joined
[17:47] *** bstamour left
[17:48] <census> Zoffix if i dig out the perl5 code i have with TOR, do you think you'd know how it can be tailored to perl6?

[17:49] *** vendethiel- joined
[17:51] <Zoffix> census: maybe, though I might not have the time to do that.

[17:51] <census> i think it was a perl5 package though

[17:52] <census> i'll have to dig it out on my other computer

[17:52] *** mcmillhj left
[17:54] <sena_kun> ugh.

[17:55] <Zoffix> .hug sena_kun 

[17:55] * huggable hugs sena_kun 

[17:55] *** ck joined
[17:56] <sena_kun> no, I just accidentally did perl6/p6-io-socket-async-ssl. :c

[17:56] *** Cabanossi left
[17:56] *** ck is now known as Guest13911

[17:56] *** mcmillhj joined
[17:57] *** Cabanossi joined
[17:58] *** ckraniak left
[17:59] *** kyan left
[18:00] *** Guest13911 left
[18:00] *** ckraniak joined
[18:00] <census> Zoffix could socks be it?

[18:01] <Zoffix> As long as they come with a scarf and a hat :P

[18:01] *** mcmillhj left
[18:01] <census> i have a variable with my $proxyaddress = "socks://localhost:9150";

[18:01] <Zoffix> census: yeah, that looks to be it.

[18:02] <Zoffix> census: then just tell the UserAgent module you're using to use that proxy

[18:02] <Zoffix> There's no control to make WWW.pm6 handle it (at least I don't know of one), so try a different module

[18:02] <census> i had done it with mech but i guess same idea

[18:02] <Zoffix> huggable: eco UserAgent

[18:02] <huggable> Zoffix, nothing found

[18:03] <Zoffix> orly

[18:03] <census> Zoffix are you saying i can't use TOR with perl6?

[18:03] <Zoffix> wrong bot

[18:03] <Zoffix> buggable: eco UserAgent

[18:03] <buggable> Zoffix, HTTP::UserAgent 'Web user agent': https://github.com/sergot/http-useragent

[18:03] <Zoffix> census: you can, probably

[18:03] <Zoffix> census: well, you can always use LWP::UserAgent via Inline::Perl5, but check if ^ that one has proxy support

[18:04] <Zoffix> census: I'm saying the WWW module we used originally is just for basic requests and you need a different module

[18:07] <census> Zoffix you mean the DOM one won't be good?

[18:07] *** Ven joined
[18:07] *** Ven is now known as Guest73037

[18:08] <census> Zoffix I don't think LWP does. that was my memory of it. i had to do www::Mechanize and WWW::Mechanize::Link i'm fairly certain

[18:08] <census> i loaded all 3 of those, but i think it was one of the Mechanize ones that ddi the trick, but i may be mistaken

[18:08] <census> i remember WWW::Mechanize::Link as someting special i had to download

[18:09] *** mcmillhj joined
[18:15] <Zoffix> What's SSA? "SSA in linear code: easy

[18:15] <Zoffix> from deopt slides

[18:16] <census> Zoffix the google ones are simlar website: https://patents.google.com/?q=Babesiosis&before=20011231&after=20010101

[18:16] <census> here the output is "About 488 results" to get the 488

[18:17] *** smls left
[18:17] *** smls_ joined
[18:17] <Zoffix> census: cool. Try building a parser for it, using what you learnt from the med site parser.

[18:18] <census> Zoffix yea i'll work on it. my concern is more about the captcha and incorporating TOR in the long-term

[18:19] <census> i don't even know if the 1st websit will present such a problem

[18:19] *** leah2 left
[18:19] <Zoffix> census: I don't really see it as a concern. Build the parser without captcha hanlding. if you get captcha, just swap the useragent module to one that does tor business

[18:21] <census> i'll add a sleep but i know that doesn't help with ip-ban too much

[18:24] *** leah2 joined
[18:26] <MasterDuke> Zoffix: i think SSA is "single static assignment"

[18:27] <Zoffix> Thanks.

[18:30] *** mcmillhj left
[18:33] *** cdg_ joined
[18:34] *** cdg_ left
[18:34] <Zoffix> jnthn++ just finished reading the deopt slides. Fancy pants stuff :) I challenge myself to learn how to work on that in a year :)

[18:34] <Zoffix> (slides in question: http://jnthn.net/papers/2017-spw-deopt.pdf )

[18:35] *** census left
[18:36] *** cdg left
[18:37] *** mcmillhj joined
[18:39] *** leah2 left
[18:40] *** devmikey joined
[18:45] *** lizmat joined
[18:47] *** andrzejku_ joined
[18:56] *** darutoko left
[19:01] *** Kyo91_ left
[19:04] *** Guest73037 left
[19:10] *** raschipi left
[19:12] *** leah2 joined
[19:14] <gfldex> m: supply { .emit for ^10 }.grep(* %% 2).list.say

[19:14] <camelia> rakudo-moar ab69dc: OUTPUT: «(0 2 4 6 8)␤»

[19:14] <gfldex> are there any operators that work with Supply or Promise?

[19:15] <timotimo> map as well

[19:15] <timotimo> i believe head and tail, too

[19:16] <AlexDaniel> basically, everything that is listed in “Methods that return another Supply” here: https://docs.perl6.org/type/Supply

[19:16] <timotimo> unique, squish, ...

[19:16] <timotimo> yeah

[19:16] <gfldex> methods aint no operators

[19:16] <AlexDaniel> these are not operators but methods, yeah

[19:16] <Zoffix> :)

[19:16] <AlexDaniel> but what operator do you need? :)

[19:16] <timotimo> grep is also not an operator

[19:17] <Zoffix> gfldex: nothing comes to mind. Not sure how easy to grep the data for what you want is, but we have a (mildly outdated) list of all subroutines and methods: https://map.perl6.party/

[19:17] <gfldex> i don't know what operators I need. But quite often you don't know that you need stuff until you tried.

[19:18] <AlexDaniel> zip comes to mind, and it is available as a method currently

[19:18] <AlexDaniel> I don't think that Z will do the right thing

[19:18] <Zoffix> Maybe download JSON ( https://map.perl6.party/map.json ) and grep for `fix:` in name and `Promise/Supply` in args

[19:19] <Zoffix> m: say ^10 .Supply Z 10..20

[19:19] <camelia> rakudo-moar ab69dc: OUTPUT: «((0 10) (1 11) (2 12) (3 13) (4 14) (5 15) (6 16) (7 17) (8 18) (9 19))␤»

[19:19] <Zoffix> haw

[19:19] <gfldex> I used ⇒ in https://github.com/gfldex/perl6-concurrent-channelify and found it quite usefull.

[19:20] <timotimo> huh, does that do more than just start + .Channel on a lazy list?

[19:20] <gfldex> no but it makes chaining Channels a lot less verbose

[19:21] <timotimo> you can .Supply.tap.Channel :D

[19:21] <gfldex> a concurrent Z might be useful

[19:21] <timotimo> bbiab

[19:22] *** zakharyas left
[19:23] <gfldex> having `whenever $s1 | $s2 { .&yourcode() }` is something I wanted. I can create the combined Supply by hand but would prefere to reuse nice syntax I already know.

[19:24] *** lizmat left
[19:25] *** rindolf left
[19:25] *** espadrine joined
[19:29] *** mr-foobar joined
[19:29] *** itaipu left
[19:30] *** mr-fooba_ left
[19:32] *** Skarsnik left
[19:33] *** cdg joined
[19:34] *** zakharyas joined
[19:34] * [Coke] /win 3

[19:36] *** Aggressively_Alp left
[19:38] *** cdg left
[19:56] *** cdg joined
[19:57] *** Kyo91_ joined
[19:57] *** konsolebox left
[19:58] *** andrzejku_ left
[19:59] *** rindolf joined
[20:00] *** rindolf left
[20:00] *** rindolf joined
[20:02] *** Kyo91_ left
[20:03] *** konsolebox joined
[20:04] *** pmurias left
[20:08] *** Kyo91_ joined
[20:10] *** bdmatatu left
[20:11] *** raschipi joined
[20:16] *** rindolf left
[20:23] *** bdmatatu joined
[20:27] *** bdmatatu left
[20:33] *** nativecallable6 joined
[20:37] *** smls_ left
[20:39] *** zakharyas left
[20:50] *** TEttinger joined
[20:54] *** cdg_ joined
[20:55] *** bdmatatu joined
[20:56] *** bdmatatu left
[20:57] *** cdg left
[20:59] <AlexDaniel> buggable: status

[20:59] <AlexDaniel> buggable: bugs

[20:59] <buggable> AlexDaniel, Total: 1689; BUG: 1091; UNTAGGED: 405; LTA: 177; NYI: 95; REGEX: 65; JVM: 60; RFC: 59; CONC: 53; TESTNEEDED: 43; REGRESSION: 32; PERF: 28; UNI: 28; SEGV: 26; IO: 22; NATIVECALL: 22; @LARRY: 21; POD: 21; TODO: 18; PRECOMP: 14; OO: 12; BUILD: 11; TESTCOMMITTED: 11; OPTIMIZER: 10; STAR: 7; BOOTSTRAP: 5; PARSER: 5; REPL: 5; GLR: 4; MATH: 4; OSX: 4; WEIRD: 3; WINDOWS: 3; RT: 2; SPES

[21:03] <raschipi> How can I get a list of bugs tagged WEIRD

[21:03] *** RabidGravy left
[21:04] *** skids left
[21:04] <perlpilot> buggable: bugs WEIRD

[21:04] <buggable> perlpilot, There are 3 tickets tagged with WEIRD; See http://fail.rakudo.party/t/WEIRD for details

[21:05] <Zoffix> The tags are also listed at the top on the site and you can click any of them

[21:05] <Zoffix> AlexDaniel: closing in on that 2,000, eh? :)

[21:06] * AlexDaniel is going through some old tickets

[21:06] <Zoffix> buggable: tag TESTNEEDED

[21:06] <buggable> Zoffix, There are 40 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[21:06] <Zoffix> weird, on the site it says 44 tickets :/

[21:07] <Zoffix> ^ those are already-fixed bugs that just need a test to cover the bug to be added to test suite ( https://github.com/perl6/roast ). Lots of easy pickings for anyone looking to contribute.

[21:07] <AlexDaniel> Zoffix: actually, I think ≈2000 is too few for a project like rakudo

[21:08] <Zoffix> It should be 0

[21:09] <AlexDaniel> any project that has a noticeable amount of users will never get close to 0

[21:09] <Zoffix> AlexDaniel: how come?

[21:09] <Zoffix> This is a good read, BTW: https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/

[21:10] <AlexDaniel> Zoffix: I don't know, that's just how it is. There's always something to improve, so unless you declare the project dead and reject all tickets you just won't get there

[21:10] <perlpilot> it's the whole time vs priorities vs life thing.

[21:11] <AlexDaniel> especially when you have RFCs and feature requests in the same queue

[21:12] <Zoffix> AlexDaniel: well, we get like 35 new tickets a month. That's 7 new developers closing one ticket a week. Doesn't sound like something ridiculously impossible.

[21:12] <Zoffix> I think the problem lies in those 7 new developers prioritizing hacking on some new features, which is why the ticket number creeps up.

[21:12] <Zoffix> Like I say, this is a good read. Especially #5: https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/

[21:12] <AlexDaniel> that's my original point – 35 tickets a month is too few

[21:13] <AlexDaniel> either everyone who has a problem does not want to deal with RT or we simply don't have enough users

[21:13] <perlpilot> at $work we've started doing a monthly bug squish day where everyone works on bugs that day instead of features.  Each time we've cleared 20-30 bugs.   If we keep it up, we'll get to 0 in several months.

[21:13] <Zoffix> \o/

[21:14] <AlexDaniel> perlpilot: that's a cool idea actually. Maybe we should try something like this once a month. Just a day when everyone who can hangs around and does stuff, should be a fun event.

[21:14] <Zoffix> AlexDaniel: I wonder how easy it is to report bugs to total strangers. I recently came across dlang and spotted a bug on their website. The link to report the problem was a few pixels away from where the problem was, but it told me to create an account and I just left...

[21:15] <Zoffix> +1 on a Bug Squash Day :)

[21:15] <AlexDaniel> in fact, I was thinking about organizing something like this for a few weeks now…

[21:15] <Zoffix> Sweet. Let's do it.

[21:15] <AlexDaniel> my original idea was that each time a new repo is chosen

[21:15] <AlexDaniel> so, sometimes it may be perl6/docs, sometimes rakudo, sometimes roast

[21:15] <Zoffix> Oh, yeah, that sounds like a good idea.

[21:16] <Zoffix> Can't remember last time I even looked at roast issues

[21:16] <AlexDaniel> yeah

[21:16] <AlexDaniel> releasable6: status

[21:16] <releasable6> AlexDaniel, Next release in 18 days and ≈21 hours. No blockers. Changelog for this release was not started yet

[21:16] <releasable6> AlexDaniel, Details: https://gist.github.com/d5e65f1ed0080c842d9391fb43fcdcf4

[21:16] <AlexDaniel> let's do it next week?

[21:16] <Zoffix> OK. Which day?

[21:17] <AlexDaniel> Saturday sounds like a good choice?

[21:17] <Zoffix> AlexDaniel: and lets decide which repo we'll work on, to prepare materials for someone unfamiliar with our setup to explain how to get into it

[21:17] <Zoffix> Yeah, Saturday sounds good

[21:17] <Zoffix> Sept 2, 2017

[21:18] <AlexDaniel> maybe perl6/doc is a good place to start?

[21:18] <AlexDaniel> it should be easy enough for everybody, and we'll see how it goes

[21:19] <Zoffix> Yeah, perl6/doc is good

[21:20] * Zoffix preps a poster :D

[21:22] <perlpilot> Zoffix++ AlexDaniel++

[21:22] <Zoffix> perlpilot++

[21:22] * AlexDaniel works on a wiki page

[21:24] *** ParsonsNose joined
[21:24] *** raschipi left
[21:25] *** ckraniak left
[21:26] <gfldex> I don't have to work next weekend.

[21:27] <gfldex> and pretty much the whole first page of doc issues are pretty low hanging.

[21:28] <Zoffix> Great \o/

[21:29] <MasterDuke> would love to participate, but i've got a 7-8h drive that day. might be around in the evening though

[21:30] <AlexDaniel> sure! Sounds great

[21:32] *** kyan joined
[21:32] * Zoffix names it "Community Bug SQUASHathon"

[21:35] *** mcmillhj left
[21:36] *** devmikey left
[21:40] *** MilkmanDan left
[21:41] *** Cabanossi left
[21:42] *** MilkmanDan joined
[21:42] *** Cabanossi joined
[21:43] *** ruoso__ joined
[21:43] *** sena_kun left
[21:43] <AlexDaniel> alright, here's a quick draft

[21:43] <ruoso__> Hi... I've been jumping into an interesting rabbit hole recently in grammar writing...

[21:43] <AlexDaniel> huggable: bug squash day :is: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:43] <huggable> AlexDaniel, Added bug squash day as https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:43] <AlexDaniel> huggable: bug squashathon :is: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:43] <huggable> AlexDaniel, Added bug squashathon as https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:44] *** leont left
[21:44] *** Kyo91_ left
[21:44] <ruoso__> I'm writing a FORTRAN grammar, and I came around an interesting feature of the language, where you can say nHhhhh where "n" is the expected number of "h" characters and "h" is any character

[21:44] <stmuk> excellent idea!

[21:45] <ruoso__> I can't quite figure out a way to make it match a runtime-defined number of characters

[21:46] <MasterDuke> ruoso__: someone else wanted to do almost exactly the same thing recently (month or two ago)

[21:46] <ruoso__> I imagine I need to write a custom grammar method that returns a match

[21:46] <MasterDuke> there were a couple suggestions

[21:46] <ruoso__> MasterDuke: any idea what I should search for?

[21:46] <MasterDuke> trying to remember...

[21:47] <geekosaur> hollerith strings!

[21:47] <MasterDuke> Zoffix, AlexDaniel: ^^^ ring any bells?

[21:48] *** emeric left
[21:49] <AlexDaniel> nope

[21:50] <ruoso__> I have a feeling I'm on the right track, just need to find out how to implement a rule in pure code (since a rule is Code, I presume I can replace it with a hand-written function)

[21:50] <timotimo> m: say "10Nnnnnnnnnnn" ~~ / (\d+) H h ** { $0 } /

[21:50] <camelia> rakudo-moar ab69dc: OUTPUT: «Potential difficulties:␤    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)␤    at <tmp>:1␤    ------> 3say "10Nnnnnnnnnnn" ~~ / (\d+) H7…»

[21:50] <timotimo> m: say "10Nnnnnnnnnnn" ~~ / (\d+) "H" "h" ** { $0 } /

[21:50] <camelia> rakudo-moar ab69dc: OUTPUT: «Nil␤»

[21:50] <timotimo> m: say "10Nnnnnnnnnnn" ~~ / (\d+) "H" "h" ** { +$0 } /

[21:50] <camelia> rakudo-moar ab69dc: OUTPUT: «Nil␤»

[21:50] <MasterDuke> m: say "aa3bbbb" ~~ /(\d+)\w**{$0}/

[21:50] <camelia> rakudo-moar ab69dc: OUTPUT: «｢3bbb｣␤ 0 => ｢3｣␤»

[21:51] <ruoso__> oh, using the braces defers the evaluation to run-time

[21:51] <timotimo> i wrote n instead of h

[21:51] <timotimo> m(

[21:51] <timotimo> m: say "10Nnnnnnnnnnn" ~~ / (\d+) "N" "n" ** { +$0 } /

[21:51] <camelia> rakudo-moar ab69dc: OUTPUT: «｢10Nnnnnnnnnnn｣␤ 0 => ｢10｣␤»

[21:51] <timotimo> m: say "4Nnnnnnnnnnn" ~~ / (\d+) "N" "n" ** { +$0 } /

[21:51] <camelia> rakudo-moar ab69dc: OUTPUT: «｢4Nnnnn｣␤ 0 => ｢4｣␤»

[21:51] <timotimo> m: say "4Nnnnnnnnnnn" ~~ / (\d+) "N" "n" ** { +$0 } $ /

[21:51] <camelia> rakudo-moar ab69dc: OUTPUT: «Nil␤»

[21:51] <timotimo> ^- require the end-of-string in order to make it fail if there's too many

[21:52] <ruoso__> Thanks timotimo... that was exactly it

[21:52] <ruoso__> I was trying to do without the { }

[21:52] <ruoso__> which caused it to be evaluated too early

[21:53] *** nadim left
[21:53] <Zoffix> \o/

[21:56] <timotimo> i'm glad :)

[21:56] <timotimo> i fondly remember when froggs implemented this

[21:56] *** mcmillhj joined
[21:56] <Zoffix> ruoso__: nah, it'd still be run time without $0, it's just with the `**` construct we require the {} for anything but basic stuff (so it doesn't clash with other stuff). 

[21:56] <Zoffix> m: say "42745" ~~ / (\d+) {} .+ $0 /

[21:56] <camelia> rakudo-moar ab69dc: OUTPUT: «｢4274｣␤ 0 => ｢4｣␤»

[21:56] <Zoffix> ruoso__: ^ and the {} above is needed to update the $/

[21:56] <Zoffix> 'cause it's expensive and we only do it in special places

[21:57] <Zoffix> s/without $0/without {}/;

[21:57] <ruoso__> Maybe it's because I was using named capture instead of numeric

[21:57] *** lizmat joined
[21:57] <timotimo> should still work

[21:57] <Zoffix> m: say "42745" ~~ / $<meows>(\d+) {} .+ $<meows> /

[21:57] <camelia> rakudo-moar ab69dc: OUTPUT: «Nil␤»

[21:57] <Zoffix> m: say "42745" ~~ / $<meows>=(\d+) {} .+ $<meows> /

[21:57] <timotimo> you need a = there

[21:57] <camelia> rakudo-moar ab69dc: OUTPUT: «｢4274｣␤ meows => ｢4｣␤»

[21:57] <timotimo> yeah :)

[21:58] <Zoffix> ruoso__: it works, but you have to reference it as named capture instead of $0

[21:58] <ruoso__> regex foo { $<digits>=[<[0..9]>+] 'H' $<character_constant_datum>=[ . ** $<digits> ] }

[21:58] <ruoso__> I tried that, and it gave me "Quantifier quantifies nothing"

[21:58] <Zoffix> ruoso__: yeah, with `**` thing you have to use {} for anything except plain numbers

[21:59] <Zoffix> ruoso__: I was talking about more general case :)

[21:59] <ruoso__> Right, I was expecting it to be specific to the quantifier

[21:59] <Zoffix> IIRC there's a ticket to improve that error message.

[22:01] *** mcmillhj left
[22:02] <Zoffix> or maybe not

[22:04] <ruoso__> I mean, the error message is clear enough

[22:04] <ruoso__> what's missing is the quantifier doc giving an example on how to defer the evaluation of the number

[22:05] <ruoso__> I understood very well what the problem was :)

[22:05] <Zoffix> ruoso__: would be cool if the error answered your original question, say with "perhaps you used a variable as a quantifier? Enclose it in { }"

[22:07] <Zoffix> And what would be even cooler is Exceptions::Detailed class that you set RAKUDO_EXCEPTIONS_HANDLER env var too and it goes into detail in exceptions

[22:07] *** mcmillhj joined
[22:08] <Zoffix> Speaking of which. Is RAKUDO_EXCEPTIONS_HANDLER a security risk? If `.` in PERL6LIB is, kinda makes me think code you can shove into an env var would be too

[22:08] <Zoffix> m: BEGIN $*ENV<RAKUDO_EXCEPTIONS_HANDLER> = "Pwned"; class Exceptions::Pwned { method process { die "PWNED" } }; 42 + foo

[22:08] <camelia> rakudo-moar ab69dc: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤An exception occurred while evaluating a BEGIN␤at <tmp>:1␤Exception details:␤  Dynamic variable $*ENV not found␤    in code  at <tmp> line 1␤␤»

[22:09] <Zoffix> m: BEGIN %*ENV<RAKUDO_EXCEPTIONS_HANDLER> = "Pwned"; class Exceptions::Pwned { method process { die "PWNED" } }; 42 + foo

[22:09] <camelia> rakudo-moar ab69dc: OUTPUT: «Unhandled exception: Too many positionals passed; expected 1 argument but got 2␤   at <unknown file>:1  (<ephemeral file>:process)␤ from src/Perl6/World.nqp:2239  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/Perl6/World.moarvm:)␤ from SETTING::src/…»

[22:09] <Zoffix> m: BEGIN %*ENV<RAKUDO_EXCEPTIONS_HANDLER> = "Pwned"; class Exceptions::Pwned { method process ($) { die "PWNED" } }; 42 + foo

[22:09] <camelia> rakudo-moar ab69dc: OUTPUT: «No exception handler located for catch␤   at SETTING::src/core/Exception.pm:57  (/home/camelia/rakudo-m-inst-1/share/perl6/runtime/CORE.setting.moarvm:throw)␤ from SETTING::src/core/control.pm:178  (/home/camelia/rakudo-m-inst-1/share/perl6/runtime/C…»

[22:09] <Zoffix> feh

[22:09] <Zoffix> m: BEGIN %*ENV<RAKUDO_EXCEPTIONS_HANDLER> = "Pwned"; class Exceptions::Pwned { method process ($) { say "PWNED"; exit } }; 42 + foo

[22:09] <camelia> rakudo-moar ab69dc: OUTPUT: «PWNED␤»

[22:10] <Zoffix> I guess not, since you can set PERL6LIB and load your own versions of used modules

[22:10] * Zoffix forgets why `.` in PERL6LIB is a risk

[22:11] <AlexDaniel> because you can pull someones git repo, run perl6 -e 'say ‘hello world’' and your system is hacked

[22:11] <AlexDaniel> well, kinda

[22:11] <AlexDaniel> (run perl6 … in that folder of course)

[22:11] <Zoffix> Ah, I see

[22:12] *** mcmillhj left
[22:12] <AlexDaniel> if someone has control over ENV variables then I guess he can do any damage he wants to

[22:15] <ugexe> because if a privileged tool like apt-get changed directories to a directory with shared privileges then a low privilege user could make a /tmp/Log.pm that gets run when someone does `sudo apt-get ...`

[22:16] <ugexe> except in this case it would have to be a specially crafted /tmp/Log.moarvm file

[22:16] <Zoffix> Got it. Thanks.

[22:17] *** espadrine left
[22:17] *** mcmillhj joined
[22:22] *** mcmillhj left
[22:23] <timotimo> AlexDaniel: oftentimes you could set env vars just by setting an HTTP header

[22:23] <timotimo> not sure under what conditions

[22:23] <AlexDaniel> but not arbitrary env vars? :/

[22:25] <timotimo> ah, yes, shellshock

[22:25] *** Cabanossi left
[22:27] *** Cabanossi joined
[22:32] *** cpage_ joined
[22:33] <Zoffix> Boom poster: https://temp.perl6.party/squashathon.pdf

[22:33] <Zoffix> Looked better on my laptop :} maybe I should wipe down the dust off the sceen

[22:34] *** ufobat left
[22:34] *** mcmillhj joined
[22:36] <timotimo> mhh squish squash

[22:36] <AlexDaniel> awwwwwwesome

[22:36] <AlexDaniel> Zoffix++

[22:37] <lizmat> Zoffix: something for the P6W I assume ?

[22:37] <AlexDaniel> lizmat: yes!

[22:37] <Zoffix> lizmat: yeah, we're gonna work on perl6/doc issues this Saturday and anyone is welcome to join :)

[22:38] <lizmat> okidoki

[22:38] <Zoffix> lizmat++

[22:39] *** mcmillhj left
[22:40] <AlexDaniel> lizmat: there's also this page, but it's more for the history of the thing and some technical aspects: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[22:40] *** Rawriful left
[22:41] <AlexDaniel> Zoffix: by the way, I like camelia logo on that poster

[22:41] <AlexDaniel> it's so neutral :)

[22:53] <Zoffix> :)

[22:53] *** mcmillhj joined
[22:55] *** vendethiel- left
[22:58] <AlexDaniel> Zoffix: hey. What's the easiest way to get “Ticket ID, Title” list of all RT tickets?

[22:58] <AlexDaniel> I need it just once

[22:58] <AlexDaniel> all perl6 tickets*

[22:58] *** mcmillhj left
[22:59] <AlexDaniel> or a json, or something

[23:01] <Zoffix> All open ones?

[23:01] <AlexDaniel> yea

[23:02] <Zoffix> AlexDaniel: here's an SQLite file you can download http://temp.perl6.party/r6.db

[23:04] *** bwisti left
[23:08] *** bwisti joined
[23:09] *** mcmillhj joined
[23:13] <AlexDaniel> Zoffix: yep, that works. Thanks

[23:14] <Zoffix> AlexDaniel: also (now implemented): https://fail.rakudo.party/.json?full=1

[23:14] *** mcmillhj left
[23:14] <AlexDaniel> Zoffix: yah, I was expecting something like this to work. Awesome. Thanks

[23:16] <Zoffix> lizmat: made a blog post you could link to, if you like: http://blogs.perl.org/users/zoffix_znet/2017/08/youre-invited-community-bug-squashathon.html

[23:16] <lizmat> Zoffix++

[23:17] <AlexDaniel> Zoffix++

[23:28] *** mcmillhj joined
[23:31] *** TimToady left
[23:31] *** dogbert17 left
[23:33] *** mcmillhj left
[23:34] *** margeas left
[23:36] *** ParsonsNose left
[23:37] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/08/28/2017-35-serving-cro/

[23:39] *** cdg joined
[23:39] *** mcmillhj joined
[23:42] *** cdg_ left
[23:43] *** cdg left
[23:43] *** mcmillhj left
[23:47] *** TimToady joined
[23:50] *** cxreg joined
[23:52] *** BenGoldberg joined
[23:53] *** mcmillhj joined
[23:55] *** snarkyboojum joined
[23:57] *** skids joined
[23:57] <zoll> how busy is perl6-users mailing list? also, are there discussions about internals, things under the hood (or, bonet if you prefer) which I would rather avoid? 

[23:58] *** mcmillhj left
[23:58] <zoll> s/bonet/bonnet/

