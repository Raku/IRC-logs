[00:01] <AlexDaniel> if I have a Buf with bytes of a double, how can I convert it to num64?

[00:01] <AlexDaniel> I'm reading these from a binary file

[00:02] <ipatrol> m: my $name = 'exclaim'; sub exclaim ($phrase) { say "$phrase !!!";} &::<$name>('hello');

[00:02] <camelia> rakudo-moar 9b43c8: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "&" in expression "sub exclaim ($phrase) { say \"$phrase !!!\";} &::<$name>('hello')" in sink context (line 1)␤No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[00:02] <AlexDaniel> (so technically I just want to get a bunch of floating points from a binary file)

[00:03] <ipatrol> m: my $name = 'exclaim'; sub exclaim ($phrase) { say "$phrase !!!";} &$::<$name>('hello');

[00:03] <camelia> rakudo-moar 9b43c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$' is not declared␤at <tmp>:1␤------> 3xclaim ($phrase) { say "$phrase !!!";} &7⏏5$::<$name>('hello');␤»

[00:03] <AlexDaniel> OK, I need Numeric::Pack, thanks

[00:03] <ipatrol> m: my $name = 'exclaim'; sub exclaim ($phrase) { say "$phrase !!!";} $::<$name>('hello');

[00:03] <camelia> rakudo-moar 9b43c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3 exclaim ($phrase) { say "$phrase !!!";}7⏏5 $::<$name>('hello');␤    expecting any of:␤        infix␤        infix…»

[00:04] <ipatrol> m: my $name = 'exclaim'; sub exclaim ($phrase) { say "$phrase !!!";} ::{"&$name"}('hello');

[00:04] <camelia> rakudo-moar 9b43c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3xclaim ($phrase) { say "$phrase !!!";} :7⏏5:{"&$name"}('hello');␤    expecting any of:␤        colon pair␤»

[00:05] <ipatrol> m: my $name = 'exclaim'; sub exclaim ($phrase) { say "$phrase !!!";} ::{'&exclaim'}('hello');

[00:05] <camelia> rakudo-moar 9b43c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3xclaim ($phrase) { say "$phrase !!!";} :7⏏5:{'&exclaim'}('hello');␤    expecting any of:␤        colon pair␤»

[00:05] *** aindilis left
[00:06] <ipatrol> I'm trying to programatically create a bunch of rules in a grammar from the entries of a list. Any ideas?

[00:06] *** mcmillhj joined
[00:13] <awwaiid> hmm

[00:14] *** mcmillhj left
[00:16] <ipatrol> https://perl6advent.wordpress.com/2015/12/08/day-8-grammars-generating-grammars/

[00:16] <ipatrol> m: say Metamodel::GrammarHOW;

[00:16] <camelia> rakudo-moar 9b43c8: OUTPUT: «(GrammarHOW)␤»

[00:16] *** piojo joined
[00:17] <awwaiid> I wonder if you are going meta unnecessarily

[00:17] <awwaiid> maybe you can show me what code you wish you could do, like with an example list

[00:18] <awwaiid> it's a dynamic list, and so references to it are dynamic somehow too?

[00:19] <ipatrol> awwaiid: Unlike the author of that above link, I am aware of how to build regex rules programatically, so I think I can avoid the EVAL

[00:19] *** cdg joined
[00:20] <awwaiid> yeah but I think the EVAL is not just for the rule, but for the named-rule

[00:20] <awwaiid> er, not just the content but for the name too

[00:21] <awwaiid> I tried assigning to ::('&exclaim') and that didn't work out

[00:21] <ipatrol> awwaiid: it looks like he left them anonymous

[00:21] <awwaiid>        $grmr.^add_method('TOP',

[00:21] <awwaiid>             EVAL 'token { <' ~ $<rule>[0].ast.key ~ '> }');

[00:22] <awwaiid> named it TOP

[00:22] *** Actualeyes left
[00:22] <ipatrol> yeah, but that's not part of the EVAL

[00:22] *** raschipi joined
[00:22] <awwaiid> ah true that. that .^add_method might be what you are looking for then

[00:22] <ipatrol> the code definition itself is anonymous

[00:23] <awwaiid> hook that sucker onto a Grammar

[00:23] <ipatrol> awwaiid: no, it says it should only be used before a type is composed

[00:24] *** cdg left
[00:24] *** mcmillhj joined
[00:26] <awwaiid> m: grammar Pets { }; Pets.^add_method('TOP', rule { "fish" }); say Pets.parse("fish"); say Pets.parse("fishies")

[00:26] <camelia> rakudo-moar 9b43c8: OUTPUT: «｢fish｣␤Nil␤»

[00:27] *** cdg joined
[00:27] <ipatrol> awwaiid: I'm not saying it doesn't work, but if the docs are to be believed, we're getting into some real black magic here, even by Perl* standards.

[00:28] <awwaiid> mmm. not tooooo black magic I think. what's your bigger project?

[00:28] <ipatrol> awwaiid: parsing fansub titles

[00:29] *** mcmillhj left
[00:29] <ipatrol> which are laid out according to like two dozen different, conflicting formats, and can't even agree on what to use as whitespace

[00:29] <awwaiid> ah cool. So you have like a list of certain legal keywords that you're trying to bake in? ahh intersting

[00:30] <ipatrol> awwaiid: well, a list of keywords/key regexes, at least

[00:31] <awwaiid> maybe you can make the grammar more permissive and then do a second level of validation

[00:31] *** cdg left
[00:32] <ipatrol> awwaiid: whatever I do is going to have to take multiple passes. I'm not even sure if a P6 grammar is even the right tool for the job.

[00:32] <awwaiid> or another dimension of evil is you could take in your lists of things and output raw p6 source code itself

[00:33] <ipatrol> ew

[00:33] <awwaiid> :)

[00:34] <skids> .u interval

[00:34] <yoleaux> No characters found

[00:34] <skids> .u range

[00:34] <yoleaux> U+2A65 Z NOTATION RANGE ANTIRESTRICTION [Sm] (⩥)

[00:36] <ipatrol> awwaiid: I was hoping to use protoregexes for most of the task

[00:40] <awwaiid> ah cool. I've not used those

[00:41] <awwaiid> you make like specialized grammars for the major formats?

[00:42] <Zoffix> [Coke]: oh, that's likely because I designed the SQASHathon flyer on A4 paper. A4 has √2 dimensions, which humans like second most (after golden ratio), but living in North America, I never get to design on that paper, so I used it for the flyer :) I'm gonna export a US Letter size tomorrow, so people with US paper could print them too :)

[00:43] <Zoffix> [Coke]: yeah, I can make bug admins, but skids was already listed as bug admin, yet lacking bug admin features and I've no clue why.

[00:46] <ipatrol> awwaiid: I tried that at first. The problem is there are no "major formats"

[00:48] <ipatrol> I've come to the point where I would love to strangle every fansubber who ever made a release for not settling on some common format, but sadly that is not going to happen, nor would it help

[00:53] *** mcmillhj joined
[00:56] *** devmikey left
[00:57] *** mcmillhj left
[01:06] *** mcmillhj joined
[01:10] *** mcmillhj left
[01:15] *** ufobat left
[01:19] *** mcmillhj joined
[01:20] *** Actualeyes joined
[01:21] <raschipi> Zoffix: It's good to design on A-format paper because one can print in half or double size without having to stretch. That way you design a big flyer, a small flyer and a poster all in one go.

[01:24] *** andreoss left
[01:24] <Zoffix> Yeah

[01:24] *** mcmillhj left
[01:25] *** Actualeyes left
[01:28] <raschipi> Another thing √2 gives is the ability of printing 4 small flyers in an A4 sheet.

[01:30] *** llfourn joined
[01:32] <Zoffix> And if you add a lot of them together, you can make a pie \o/

[01:33] *** mcmillhj joined
[01:38] *** mcmillhj left
[01:38] *** Kyo91_ left
[01:39] *** dogbert2 left
[01:40] <Zoffix> m: my &prefix:<√> = &sqrt; my $*TOLERANCE = 0.0002; say π ≅

[01:40] <Zoffix> 2*(2/√2)*(2/√(2+√2))*(2/√(2+√(2+√2)))*(2/√(2+√(2+√(2+√2))))*(2/√(2+√(2+√(2+√(2+√2)))))*(2/√(2+√(2+√(2+√(2+√(2+√2))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√2)))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√(2+√2))))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√(2+√(2+√2)))))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√(2+√(2+√(2+√2))))))))))

[01:40] <camelia> rakudo-moar 9b43c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> 3 &sqrt; my $*TOLERANCE = 0.0002; say π ≅7⏏5<EOL>␤    expecting any of:␤        prefix␤        term␤»

[01:41] <raschipi> m: my &prefix:<√> = &sqrt; my $*TOLERANCE = 0.0002; say π ≅ 2*(2/√2)*(2/√(2+√2))*(2/√(2+√(2+√2)))*(2/√(2+√(2+√(2+√2))))*(2/√(2+√(2+√(2+√(2+√2)))))*(2/√(2+√(2+√(2+√(2+√(2+√2))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√2)))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√(2+√2))))))))*(2/√(2+√(2+√(2+√(2+√(2+√(2+√(2+√(2+√2)))))))))*(2/√(2+√(2+√(2+√(2+√(2+√(

[01:41] <camelia> rakudo-moar 9b43c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Prefix √ requires an argument, but no valid term found␤at <tmp>:1␤------> 3√(2+√2)))))))))*(2/√(2+√(2+√(2+√(2+√(2+√7⏏5<EOL>␤    expecting any of:␤        prefix␤»

[01:42] <ipatrol> good God man

[01:43] <AlexDaniel> “Two terms in a row (runaway multi-line <> quote starting at line 15 maybe?)”

[01:43] <AlexDaniel> yesss, thank you very much

[01:45] *** ilbot3 left
[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:54] *** Kyo91_ joined
[01:55] *** araraloren left
[01:55] *** piojo left
[01:59] *** Kyo91_ left
[01:59] *** Actualeyes joined
[02:06] *** mcmillhj joined
[02:11] *** mcmillhj left
[02:21] *** mcmillhj joined
[02:23] *** MasterDuke left
[02:24] *** Ven`` joined
[02:26] *** mcmillhj left
[02:28] *** noganex joined
[02:30] *** BenGoldberg left
[02:31] *** noganex_ left
[02:34] *** Ven`` left
[02:34] *** Xliff joined
[02:43] *** ipatrol left
[02:48] *** pilne left
[02:56] *** majensen joined
[02:58] *** mcmillhj joined
[03:01] *** majensen left
[03:18] *** raschipi left
[03:29] *** Actualeyes left
[03:48] *** unnecessarymulti joined
[03:54] *** Cabanossi left
[03:54] *** skids left
[03:54] *** Cabanossi joined
[04:06] *** cpage_ left
[04:22] *** Actualeyes joined
[04:23] *** Cabanossi left
[04:24] *** Cabanossi joined
[04:39] *** mcmillhj left
[04:43] *** cpage_ joined
[04:44] *** wamba joined
[04:52] *** kannan joined
[04:57] *** firefish5000 left
[05:06] *** kannan left
[05:13] *** Sgeo_ joined
[05:13] *** mr_ron left
[05:15] *** andrzejku joined
[05:15] *** Sgeo left
[05:15] *** AlexDaniel left
[05:26] *** nadim joined
[05:35] *** sena_kun joined
[05:36] *** mcmillhj joined
[05:37] *** khw left
[05:45] *** mcmillhj left
[05:55] *** unnecessarymulti left
[05:59] *** cdg joined
[06:00] *** ufobat joined
[06:03] *** cdg left
[06:11] *** xtreak joined
[06:14] *** kannan joined
[06:15] *** xtreak left
[06:17] *** nadim left
[06:19] *** xtreak joined
[06:23] *** Cabanossi left
[06:25] *** Cabanossi joined
[06:35] *** wamba left
[06:39] *** mcmillhj joined
[06:40] *** sena_kun left
[06:42] *** sena_kun joined
[06:42] *** sena_kun left
[06:44] *** |oLa| left
[06:45] *** mcmillhj left
[06:45] *** |oLa| joined
[06:46] *** mcmillhj joined
[06:50] *** |oLa| left
[06:51] *** mr_ron joined
[06:58] *** kannan left
[07:05] *** mr_ron left
[07:12] *** mcmillhj left
[07:13] *** xtreak left
[07:14] *** darutoko joined
[07:14] *** lowbro joined
[07:14] *** lowbro left
[07:14] *** lowbro joined
[07:16] *** geekosaur left
[07:20] *** geekosaur joined
[07:24] *** wamba joined
[07:28] *** mcmillhj joined
[07:33] *** mcmillhj left
[07:37] *** setty1 left
[07:38] *** konsolebox left
[07:43] *** |oLa| joined
[07:44] *** konsolebox joined
[07:52] *** mcmillhj joined
[07:55] *** mr-foobar joined
[07:56] *** mr-fooba_ left
[07:56] *** mcmillhj left
[07:57] *** llfourn left
[07:58] <BooK> which package should I install to get Test::Util?

[08:00] *** jonas2 joined
[08:11] <BooK> ah, it's in roast/packages, but that isn't in the list of searched paths when running fudgeandrun

[08:12] *** mr_ron joined
[08:13] *** Skarsnik joined
[08:15] *** xtreak joined
[08:16] *** xtreak left
[08:17] *** xtreak joined
[08:20] *** mr_ron left
[08:20] *** cschwenz joined
[08:21] <cschwenz> is http://irclog.perlgeek.de down?

[08:22] <BooK> http://downforeveryoneorjustme.com/irclog.perlgeek.de

[08:22] *** sena_kun joined
[08:22] <cschwenz> :-(

[08:24] *** dakkar joined
[08:24] *** xtreak left
[08:29] *** robertle_ joined
[08:37] *** Cabanossi left
[08:40] *** Cabanossi joined
[08:40] *** zakharyas joined
[08:42] <timotimo> BooK: there's a very big problem with argument handling if you allow --foo bar instead of --foo=bar

[08:42] <timotimo> consider:

[08:42] * timotimo tries to unknot his brain

[08:43] <timotimo> one multi candidate asks for a Str :$foo, the other for a Bool :$foo

[08:44] <timotimo> one of the two (and i'm not sure which one it has to be for the problem to appear) wants a Str after that, the other takes no positional parameters

[08:45] * Ulti notices that #perl6 has a surprising number of people lurking 

[08:45] <jast> ... and sometimes some of them surface to make an irrelevant comment, only to disappear immediately afterwards

[08:46] <timotimo> okay, someone has to figure out if there's a way to get a contradictory set of MAIN signatures and command line argument sets

[08:46] <Ulti> jast but not you, since that was spot on :P

[08:46] <Skarsnik> Well it's the user fault in this case?

[08:47] <Ulti> timotimo: do people oerload flags like that?

[08:48] <Skarsnik> timotimo, probably need to look at this issue from the other side. What is the need for a Bool $:foo and Str $:foo at the same time

[08:48] <Ulti> I've never seen something thats a boolean flag and sometimes takes an argument... is that in the POSIX description of command line flags?

[08:48] <timotimo> there's flags like that

[08:48] <Ulti> ;_;

[08:48] <Skarsnik> --verbose

[08:48] <timotimo> sed's in-place flag takes a file extension optionally

[08:48] <Ulti> --verbose on its own usually assumes a default Int though in my experience

[08:49] <Ulti> as in you can have default parameterised numbers

[08:49] <Skarsnik> true

[08:49] <Ulti> hmm actually thats an even worse case for you something that expects a parameter with a default AND there is a boolean

[08:50] <Ulti> but yeah I hadnt considered verbose

[08:50] <Skarsnik> timotimo, how does that look? the 2 usage

[08:51] <timotimo> probably always with a =

[08:52] <Ulti> hah so in the case of verbose being a default int or a boolean it just calls the first to appear in the source file...

[08:52] <Ulti> no warning is perhaps not the best

[08:52] <Ulti> I take it this was the original convo

[08:53] <Ulti> actually this in general is perhaps more of a problem away from MAIN I have some rinky dink multi subs where some of them its possible are never reachable and I've not noticed

[08:57] <Skarsnik> m: multi sub foo(Str $plop) {say "first"}; multi sub foo(Str:D $plop) {say "second"}; foo("j"); foo(Str:U);

[08:57] <camelia> rakudo-moar f1b086: OUTPUT: «Ambiguous call to 'foo'; these signatures all match:␤:(Str $plop)␤:(Str:D $plop)␤  in block <unit> at <tmp> line 1␤␤»

[08:57] <Skarsnik> m: multi sub foo(Str:U $plop) {say "first"}; multi sub foo(Str:D $plop) {say "second"}; foo("j"); foo(Str:U);

[08:57] <camelia> rakudo-moar f1b086: OUTPUT: «second␤first␤»

[08:59] *** Sgeo_ left
[09:01] *** sumdoc joined
[09:01] <Ulti> so its specifically just the dispatch of MAIN from the parsing of the parameters?

[09:04] *** dakkar left
[09:04] <Skarsnik> what is the equivalent of pel5 'x'? xx .join ?

[09:04] <Ulti> oo that is good, just tried tricking it with having a default but its genuinely smart enough to dispatch to the method with a default when the variable isnt defined

[09:05] <Ulti> nice

[09:05] <Ulti> Skarsnik just x

[09:05] <Ulti> 'hi' x 2 eq 'hihi'

[09:07] <Ulti> or to be super crazy why not [~] 'hi' xx 2 

[09:08] <Ulti> I feel like Perl 6 actually follows the Python methodology of there is one obvious way to do it really... but in a pinch you can do whatever you like if you work yourself into a corner

[09:09] <Ulti> one obvious way and its probably a four character infix operator

[09:10] *** dakkar joined
[09:20] *** Actualeyes left
[09:21] *** Actualeyes joined
[09:21] *** Actualeyes left
[09:22] *** Ven`` joined
[09:23] <Ven``> Mh, reading the Cro talk again. I'm wondering why:

[09:23] <Ven``> class Echo does Cro::Transform { method consumes { A } method produces { B } }

[09:23] <Ven``> instead of, say:

[09:23] *** Actualeyes joined
[09:23] <Ven``> class Echo does Cro::Transform[A, B] {}

[09:23] *** Actualeyes left
[09:23] <timotimo> i wonder if there's a reason to do caculations inside consumes and produces

[09:24] <Ven``> .oO( role TypedTransform[::From, ::To] { method consumes { From } method produces { To } } }

[09:25] <Ven``> timotimo: don't think so. I can think of a stateful transformer that'd change its `produces` type, but probably not its consumes..

[09:25] *** Sgeo joined
[09:25] <Ven``> mh, maybe I'd like to have a typed Supply as well

[09:26] <timotimo> it's probably because every piece of the pipeline has consumes and transforms and multiple chained things get from their contents what they consume and produce

[09:26] <timotimo> and putting that in the type is probably a bit of a hassle, or a DRY-violation

[09:26] <timotimo> i.e. why have Cro::ManyThingsInARow[A, E].new(AB, BC, CD, DE)?

[09:27] <Ven``> sorry?

[09:27] <Ven``> if you have a A -> B and a B -> C, you have a A -> C

[09:27] <timotimo> if XY is a thing that consumes X and produces Y

[09:28] *** mtsd joined
[09:29] <Ven``> timotimo: yes?

[09:29] <Ven``> you don't compose it that way usually, do you?

[09:30] *** jeek joined
[09:30] <Ven``> I have yet to see a "composeN" that was correctly typed in most languages, to be honest – even worse in the case of a slurpy/array

[09:31] *** araujo left
[09:31] *** araujo joined
[09:33] <sena_kun> you can file an issue with the design question if you want.

[09:34] <Ven``> sena_kun: but where?

[09:34] <sena_kun> https://github.com/croservices/cro-core

[09:34] <sena_kun> :)

[09:35] <Ven``> sena_kun: would you happen to be Altai-man by any chance?

[09:35] <sena_kun> yeah.

[09:36] <Ven``> then I must say – great job :D.

[09:38] <sena_kun> thanks a lot. \o/

[09:39] <Ven``> I was reading the cro-websocket code. It manages to be very readable even though it's fairly low-level, really nice

[09:41] <sena_kun> the API(and, well, all APIs of cro) was designed by jnthn++, so yes, it's very neat, especially Router pieces and overall pipeline-thingy concept.

[09:44] <Skarsnik> can like part of cro be used alone? Like the cro websocket part to write async websocket client

[09:46] <sena_kun> there is a dependency graph between modules, see http://cro.services/docs/module-structure - basically, yes, but it will be core + http + ssl + websockets, since websockets rely on http+ssl anyway.

[09:47] <Ven``> posted here – https://github.com/croservices/cro-core/issues/1

[09:48] <sena_kun> Ven``++

[09:53] *** Cabanossi left
[09:53] <Skarsnik> m: say "a" ~~ /b/

[09:53] <camelia> rakudo-moar f1b086: OUTPUT: «Nil␤»

[09:53] <Skarsnik> m: say "a" ~~ /a/

[09:53] <camelia> rakudo-moar f1b086: OUTPUT: «｢a｣␤»

[09:54] *** Cabanossi joined
[09:55] *** margeas joined
[09:58] <Skarsnik> damn the fancy [ cut me some character in my terù

[10:11] *** mtsd left
[10:26] *** ShalokShalom_ joined
[10:27] *** mr-fooba_ joined
[10:27] *** mr-foobar left
[10:28] *** ShalokShalom left
[10:33] *** gregf_ joined
[10:34] *** pugnux joined
[10:37] *** Cabanossi left
[10:39] *** Cabanossi joined
[10:50] *** xinming left
[10:52] *** pugnux left
[10:53] *** xinming joined
[10:55] *** Ven`` left
[10:57] *** maettu joined
[10:58] *** xtreak joined
[11:02] *** xtreak left
[11:07] *** Exodist left
[11:09] *** Exodist joined
[11:11] *** zakharyas left
[11:12] *** kyan left
[11:16] *** grumble left
[11:17] *** grumble joined
[11:18] *** Aaronepower left
[11:23] *** Cabanossi left
[11:24] *** Cabanossi joined
[11:27] *** Exodist left
[11:30] *** wamba left
[11:30] *** Exodist joined
[11:57] *** census joined
[12:01] *** zakharyas joined
[12:05] <Geth> ¦ marketing: 708427c9a7 | (Zoffix Znet)++ | 3 files

[12:05] <Geth> ¦ marketing: Add US-Letter-sized SQASHAthon poster

[12:05] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/708427c9a7

[12:06] <census> Zoffix sos emergency

[12:06] <Zoffix> [Coke]: I added US-Letter sized SQUASHathon poster, if you need it: https://github.com/perl6/marketing/raw/master/TablePosters/SQUASHathon/v1--CommunityBugSquashathon--US-Letter.pdf

[12:06] <[Coke]> Zoffix++

[12:07] *** grumble left
[12:07] *** konsolebox left
[12:07] *** go|dfish left
[12:07] *** Technaton left
[12:07] *** tokage left
[12:07] *** avalenn left
[12:07] *** roguelazer left
[12:07] *** kybr left
[12:07] *** mniip left
[12:07] *** APic left
[12:07] *** Xal left
[12:07] *** olinkl left
[12:07] *** rodarmor left
[12:07] *** broquaint left
[12:07] *** skaji left
[12:07] *** BuildTheRobots left
[12:07] *** shmibs left
[12:07] *** cpage left
[12:07] *** APic joined
[12:07] *** grumble joined
[12:07] *** go|dfish joined
[12:07] *** mniip joined
[12:08] <Zoffix> census: what is it?

[12:08] <census> i just deleted one of the programs i wrote. i can't recover it

[12:08] <census> i think i can rewrite it using the log and my knowledge

[12:08] <Zoffix> heh

[12:09] *** committable6 left
[12:09] <census> also the program you wrote about socks i still didn't get it to work

[12:09] <Zoffix> census: you should sign up to GitHub and use version control. That way even if you delete your local copy, you still have online version

[12:10] <census> Zoffix i know i should have. do you think my pastebins still work or they got deleted within 24 hours

[12:10] *** nativecallable6 left
[12:10] *** ccntrq left
[12:10] *** charsbar left
[12:10] *** statisfiable6 left
[12:10] *** releasable6 left
[12:10] *** greppable6 left
[12:10] *** benchable6 left
[12:10] *** coverable6 left
[12:10] *** bloatable6 left
[12:11] *** piojo joined
[12:11] *** evalable6 left
[12:11] *** Xal joined
[12:11] *** evalable6 joined
[12:11] <Zoffix> census: they're still there: https://pastebin.com/VPTE8T8e

[12:11] <census> Zoffix no it's not that one i lost

[12:11] <census> it's the very first one i wrote that you helped with for the pubmed website

[12:12] *** charsbar joined
[12:12] <census> i just ran the one by the way you just recovered and i got an error at the line: my $url = [https://www.expressvpn.com/what-is-my-ip]; 

[12:12] *** ccntrq joined
[12:12] <census> it says " expecting any of: colon pair"

[12:12] *** rindolf joined
[12:13] <Zoffix> Yeah, because it still has the same error you asked about yesterday.

[12:14] <Zoffix> It's about Unicode brackets coming out as question marks.

[12:15] *** konsolebox joined
[12:15] *** raschipi joined
[12:18] <census> Zoffix https://pastebin.com/fWCb83Wq didn't i fix that problem?

[12:19] *** maettu left
[12:20] *** kannan joined
[12:20] <Zoffix> census: no, you used square brackets instead of ｢ and ｣

[12:21] <census> Zoffix by the way i recovered my first code :)

[12:21] <Zoffix> \o/.

[12:22] *** Technaton joined
[12:22] *** tokage joined
[12:22] *** avalenn joined
[12:22] *** roguelazer joined
[12:22] *** kybr joined
[12:22] *** olinkl joined
[12:22] *** rodarmor joined
[12:22] *** broquaint joined
[12:22] *** skaji joined
[12:22] *** BuildTheRobots joined
[12:22] *** shmibs joined
[12:22] *** cpage joined
[12:22] <census> Zoffix which key is square bracket? i did [ in the code

[12:22] *** BuildTheRobots left
[12:22] *** rodarmor left
[12:23] <raschipi> census: you need square quotes, not square brackets. And your keyboard probably doesn't have a key for it, depending on which country you are.

[12:23] <Zoffix> On my keyboard, it's G18 that types both brakets :)

[12:23] *** rodarmor joined
[12:23] *** BuildTheRobots joined
[12:23] <raschipi> sena_kun: does you keyboard have keys for them?

[12:23] <Zoffix> census: I also mentioned yesterday the ASCII only alternative to these quoters. See the reference page: https://docs.perl6.org/language/unicode_texas

[12:24] <census> raschipi do you mean either " OR ' ?

[12:24] <sena_kun> robertle, for who?

[12:24] <sena_kun> argh.

[12:24] <raschipi> for ｢ and ｣

[12:24] <sena_kun> what an irony.

[12:24] <sena_kun> nope.

[12:24] <sena_kun> I use hhkb.

[12:25] <census> raschipi yes i'm not following what to be typing exactly

[12:25] <sena_kun> with us/ru layouts. I could type ｢ and ｣ with Japanese input(by mozc) before, but void linux doesn't support it yet. :/

[12:26] <raschipi> census, ude Q// instead, then.

[12:27] <Zoffix> That won't work. The quoted text uses // in it

[12:27] <census> raschipi Q//

[12:27] <raschipi> use*

[12:27] <census>  my $url = Q//https://www.expressvpn.com/what-is-my-ip//Q;  ?

[12:28] *** sergot joined
[12:29] <Zoffix> census: just use single quotes

[12:30] <census>  my $url = 'https://www.expressvpn.com/what-is-my-ip';

[12:33] <census> thanks Zoffix   now i got the following error: error while setting up ssl connection (No connection could be made because the target machine actively refused it.) at C:/Strawberry/perl/site/lib/LWP/Protocol/socks.pm line 91.

[12:34] <census> https://pastebin.com/VgWWgjtw

[12:34] <Zoffix> census: you gonna have to learn to debug problems on your own instead of asking other humans to solve each of your issues.

[12:35] <Zoffix> Try googling for that error message.

[12:35] *** maettu joined
[12:36] <census> Zoffix thank you i completely understand your point. i'm just a little out of my element on this one. i did successfully debug a lot of the 2nd website i had been working on independently without mentioning it hree

[12:38] <sena_kun> https://rt.perl.org/Public/Bug/Display.html?id=130857 - if I have this one(unhandled Failure detected in DESTROY) while doing `require`, how bad it is?

[12:38] <census> i did google about the line 91 and i didn't come up with anything

[12:38] <perlpilot> census: Are you mixing Perl 5 and Perl 6?  Perl 6 doesn't use -> like you're using it in that last paste.

[12:38] <perlpilot> oh, never mind ... I see that you're calling out to Perl 5 now.

[12:39] <perlpilot> formatting is weird

[12:41] <Zoffix> sena_kun: it means you never handle a Failure

[12:41] <Zoffix> m: sub stuff { fail }; my $x = stuff; say 'Eh, $x is fine. Let us ignore the failure'

[12:41] <camelia> rakudo-moar f1b086: OUTPUT: «Eh, $x is fine. Let us ignore the failure␤»

[12:42] <Zoffix> ^ if that 

[12:42] <sena_kun> well, I understood that, but I have a `catch { default {} }` block and it doesn't help much.

[12:42] <Zoffix> ^ if that $x is GCed that warning will come out

[12:42] <sena_kun> hmmm.

[12:43] <Zoffix> sena_kun: there's no real relevance between an unhandled Failure and a CATCH block.

[12:43] <sena_kun> yes, I see now.

[12:43] <Zoffix> CATCH doesn't catch failures, only exceptionsd.

[12:43] <Zoffix> .Bool or .defined on Failure handles it

[12:43] <sena_kun> so I need to fire the failure or.

[12:43] <Zoffix> sena_kun: what's the actual code?

[12:43] <sena_kun> give me a second...

[12:45] <sena_kun> https://github.com/croservices/cro/blob/master/lib/Cro/Tools/TemplateLocator.pm6#L31 - this one. https://gist.github.com/Altai-man/ba6320ad6fc94a6bf46720543dbc107a - the warning points to the line I selected, which is odd.

[12:45] <census> perlpilot do you know how to fix the error i received?

[12:46] <Skarsnik> the message is pretty clear

[12:46] <Geth_> ¦ perl6-most-wanted: 44c0e68d14 | (Tom Browder)++ (committed using GitHub Web editor) | most-wanted/modules.md

[12:46] <Geth_> ¦ perl6-most-wanted: a Perl 6 wrapper for libmilter.a

[12:46] <Geth_> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/44c0e68d14

[12:47] <census> Skarsnik i've been googling about the error

[12:48] *** MasterDuke joined
[12:49] *** ShalokShalom_ is now known as ShalokShalom

[12:51] <raschipi> census: look at the httpd log of the computer you're trying to access and see if it registered why the connection was refused.

[12:51] <raschipi> right, you aren't trying to access your own computers

[12:51] <Zoffix> sena_kun: what rakudo version are you on?

[12:51] <sena_kun> Zoffix, 2017.08-28

[12:51] *** mcmillhj joined
[12:52] <census> raschipi how may i do that? i googled about it but am not seeing clear directions on how to do so

[12:52] <moritz> connection refused means there's nothing listening on the port, or a firewall is blocking the request (though they typically just drop the packets, causing a timeout)

[12:52] <sena_kun> built on MoarVM version 2017.08.1-19-g151a2563 if it matters too.

[12:53] <Zoffix> sena_kun: weird. There shouldn't be any failures in that code. The Failure from that `require` should get sunk and explode and the explosion caught by the CATCH block. 

[12:53] *** bisectable6 left
[12:53] *** unicodable6 left
[12:53] *** evalable6 left
[12:53] *** quotable6 left
[12:54] <Zoffix> I can't repro the issue with a golfed loop tho

[12:54] *** Cabanossi left
[12:54] <sena_kun> :/

[12:54] *** coverable6 joined
[12:54] *** committable6 joined
[12:54] *** bloatable6 joined
[12:54] *** unicodable6 joined
[12:54] *** ChanServ sets mode: +v committable6

[12:54] *** ChanServ sets mode: +v bloatable6

[12:54] *** ChanServ sets mode: +v unicodable6

[12:54] *** nativecallable6 joined
[12:54] *** releasable6 joined
[12:54] *** greppable6 joined
[12:54] *** quotable6 joined
[12:54] *** bisectable6 joined
[12:54] *** benchable6 joined
[12:54] *** evalable6 joined
[12:54] *** statisfiable6 joined
[12:54] <Zoffix> sena_kun: I would bet there's a rakudo bug lurking somewhere 

[12:54] *** mcmillhj left
[12:54] <Zoffix> And maybe that Failure doesn't get sunk, hence the warning

[12:55] *** Cabanossi joined
[12:55] <sena_kun> that is what I've been afraid of - rakudo bug. :/ Thanks for opinion, thuogh.

[12:55] <sena_kun> *though

[12:55] <census> moritz are you saying i need to disable a firewall?

[12:56] <moritz> census: do you have one running?

[12:57] <census> moritz i'm not sure. i don't really use the computer i'm on often. it's not a version of windows i'm comfortable with but i'm using it solely for perl6 access

[12:58] <sena_kun> Zoffix, btw, did you try a golfed loop once or multiply times? Because it is a race-like issue(sometimes there is no warning).

[12:58] <moritz> census: can you access the URL with a browser?

[12:58] <Zoffix> sena_kun: I was trying perl6 -e 'loop { for <a> { require ::($_); given ::($_) { "in".say }; CATCH { default {  } } } }'

[12:58] <sena_kun> ah, okay.

[12:59] *** mcmillhj joined
[12:59] *** pat_js joined
[13:00] *** Ven`` joined
[13:00] <Ven``> is there a way to pick a path for rakudo star? even a somewhat contrived way

[13:00] <Zoffix> sena_kun: report it as a bug. And you can probably work around it by using require differently. Something like try require ::($_); if $! { $warnings.emit(~$!) if $warnings; next; } 

[13:00] <Zoffix> (and remove CATCH block)

[13:00] <census> moritz Yes, very much so

[13:00] <moritz> Ven``: you mean an installation path?

[13:01] <moritz> Ven``: perl Configure.pl --prefix=yourpath

[13:01] <Ven``> moritz: can I do that in the rakudo star directory?

[13:01] <Ven``> on wndows, sorry.

[13:01] <Ven``> I forgot to mention that...

[13:02] <Skarsnik> hm should zef check for update when the version is * in the META file?

[13:02] <Zoffix> Ven``: IIRC you can't pick it on Windows in its installer.

[13:02] <moritz> Ven``: in the tarball that you dowloaded

[13:02] <Ven``> ah :(

[13:02] <raschipi> Skarsnik: Why would it? * means any version is fine...

[13:02] <moritz> Ven``: you have to build from source

[13:02] <Zoffix> Ven``: you could build rakudo from sauce: https://github.com/zoffixznet/r#windows

[13:02] <sena_kun> Zoffix, wow, perfect. workaround works fine. \0/ thanks a lot. about rakudobug - even without a golfed version is fine, I guess, so I'll file it now...

[13:03] <Ven``> There's a 2012 issue that mentions a problem with parrot, so I wasn't sure if it wsa still a problem

[13:03] <Ven``> Zoffix: thanks for that

[13:03] <Zoffix> sena_kun: yeah, a repro case would be nice to have, but even without it at least we know there might be a problem somewhere in that construct.

[13:03] <Skarsnik> raschipi, dunno * in the metafile for a module is "whatever I did not put a version" for me

[13:04] <Zoffix> Skarsnik: * version in META file is invalid

[13:04] *** cdg joined
[13:04] <Skarsnik> pass Test::Meta x)

[13:04] <Zoffix> Just hasn't been updated to handle that.

[13:05] <Zoffix> huggable: version

[13:05] <huggable> Zoffix, * as version in meta file should not be allowed: https://irclog.perlgeek.de/perl6-dev/2017-06-16#i_14743468

[13:06] <Zoffix> Skarsnik: opened an Issue: https://github.com/jonathanstowe/Test-META/issues/28

[13:07] *** mr_ron joined
[13:11] <Skarsnik> :)

[13:12] *** Ven`` left
[13:12] *** cdg_ joined
[13:15] <jdv79> is there a way to do what p5's delete does?

[13:15] <Zoffix> :delete adverb

[13:15] <jdv79> that is, remove and return

[13:15] <Zoffix> m: my @a = <a b c>; dd @a[1]:delete; dd @a

[13:15] <camelia> rakudo-moar f1b086: OUTPUT: «Str @a = "b"␤Array @a = ["a", Any, "c"]␤»

[13:16] <Zoffix> (same for hashes)

[13:16] <census> mofitz my goal ultimately is to run my code but through TOR

[13:16] <jdv79> trying to avoid a race between the distinct :delete and read

[13:16] <Zoffix> census: did you change the port in the code?

[13:16] <jdv79> or other way round

[13:16] *** cdg left
[13:16] <Zoffix> census: for the sock proxy

[13:17] <jdv79> do i really need to explicitly use Lock for this?

[13:18] <jdv79> not a huge deal.  just seems weird to have to do that

[13:18] <Zoffix> Yeah, I don't think any Array operations are atomic

[13:18] <jdv79> ok

[13:23] *** Cabanossi left
[13:23] <census> Zoffix i have to add the correct one about TOR i presume?

[13:23] <Zoffix> Yeah :)

[13:24] <Zoffix> Run   netstat    it'll probably tell you what port the proxy's on

[13:24] <census> in my old code i did a line like my $proxy = socks://10.0.2.2:9150

[13:24] <Zoffix> census: right, so socks:// part is the proxy address. Use that in your new code

[13:25] *** Cabanossi joined
[13:25] *** eiro joined
[13:25] <eiro> hello

[13:25] <Zoffix> eiro: hi \o

[13:25] <Zoffix> Bonjour, sava :)

[13:26] <eiro> Zoffix, ça va et toi ?

[13:26] <census> salut eiro ! j'aime parler en francais aussi

[13:26] <Zoffix> je vais bien également

[13:26] <Zoffix> :)

[13:27] <eiro> which is not friendly for most of the channel members :)

[13:27] <eiro> so let's try in english

[13:27] <Zoffix> Good plan :)

[13:27] <census> d'accord = okay 

[13:27] <perlpilot> eiro: we could always google translate what you say  :)

[13:27] <eiro> Zoffix, i didn't mention you spoke french

[13:28] <eiro> perlpilot, isn't it a little boring ?

[13:28] *** skids joined
[13:28] <perlpilot> french?  yes, yes it is sometimes.  ;-)

[13:28] <Zoffix> eiro: sadly, I don't. Though living in a country where French is one of the official languages, I hope to learn it one day :)

[13:28] <eiro> wow .. how about a perl6 bot that detects the used language and translate if needed ? ;)

[13:29] <eiro> what ? where are you living ? 

[13:29] <Zoffix> eiro: Canada. English and French are official languages

[13:29] <Zoffix> buggable: eco IRC::Client

[13:29] <buggable> Zoffix, IRC::Client 'Extendable Internet Relay Chat client': https://github.com/zoffixznet/perl6-IRC-Client 2 other matching results: https://modules.perl6.org/s/IRC%3A%3AClient

[13:29] <Zoffix> ^ good start for that bot :D

[13:30] <perlpilot> my ancestors on my mother's side from my grandparents back 1000 year or so are french, but my mom and siblings never learned it (presumably so her parents could converse without the kids knowing what was said) and I never learned it.  Kinda sad.

[13:30] <eiro> Zoffix, Quebec ... because i don't think the rest of the canada has french as official language ? 

[13:31] <Zoffix> eiro: it'

[13:31] <eiro> you have to know the Canadian french is different from the french french ... a lot of shortcuts that sounds very nicely

[13:31] <eiro> i love it

[13:32] <Zoffix> eiro: it's country-wide. French is the "default" language in Quebec, while English is the default one in, say, Ontario, but you can deal with gov totally in French and it's required by law that you'd be able to .

[13:32] <census> Zoffix i don't think it matters what i want to do. at least not for the google site. it seems google may have banned tor?

[13:32] <Zoffix> census: maybe

[13:32] <eiro> well .. knowing english is good enough

[13:33] <eiro> hoo ... i didn't know that ...

[13:33] <eiro> arghh.. need to work .. cya

[13:33] <Zoffix> \o

[13:34] <census> Zoffix okay i was mistaken. i figured it out

[13:34] <eiro> (now i remember why i left this chan previously: it's so interesting i spent too much time backlogging)

[13:34] <census> i'm not sure how to run netstat. i want the TOR info don't i?

[13:34] *** rindolf left
[13:34] <census> i ran netstat in the cmd but wont' that only give me info about my own info ? now the TOR

[13:35] <Zoffix> No idea. I don't use TOR

[13:36] <census> TOR is a separate browser. i don't know how to explain it well

[13:36] <census> i'm not sure what you wanted me to find with netstat but i ran it

[13:38] <census> Zoffix: Step one should be to try to use a SOCKS proxy rather than an HTTP proxy. Typically Tor listens for SOCKS connections on port 9050. Tor Browser listens on port 9150. If your application doesn't support SOCKS proxies, feel free to install privoxy.

[13:38] *** rindolf joined
[13:38] *** gdonald left
[13:38] <Zoffix> Right, so use 9050 port to connect from your code to

[13:38] * Zoffix &

[13:43] <BooK> hey eiro

[13:43] <census> i did this in perl5 with WWW::Mechanize --- i don't know how to modify it for here

[13:43] *** llfourn joined
[13:45] <census> i did a line like my $proxy = "socks://localhost:9150"; and then i think i did $mech->proxy(['http', 'https'], $proxy);

[13:49] <Zoffix> census: the code you were having square bracket issues with this morning solves that very problem

[13:49] <census> so in place of socks://127.0.0.1:2225 i shoudl try socks://localhost:9150 ?

[13:53] *** MasterDuke_ joined
[13:53] <census> I'm able to connect to the website, but in perl i'm still getting error while setting up ssl connection (Bad address) at C:/Strawberry/perl/site/lib/LWP/Protocol/socks.pm line 91.

[13:54] *** nowan left
[13:56] *** MasterDuke left
[13:57] *** nowan joined
[13:58] *** raschipi left
[13:59] <census> Zoffix does that mean i'm putting in the incorrect statement for $ua->proxy([qw/http https/] => "socks://localhost:9150"); ?

[14:01] *** setty1 joined
[14:01] *** benchable6 left
[14:02] <Zoffix> No idea

[14:04] <sjn> good *, #perl6

[14:09] <El_Che> is that an atom or an asterisk operator? Not clear on my shell

[14:09] <El_Che> </troll mode off>

[14:09] <sjn> it's a "whatever" :)

[14:10] <Zoffix> \o

[14:10] * sjn is having a look at Cro

[14:10] <Zoffix> \

[14:10] <Zoffix> \o/

[14:11] <Skarsnik> the fancy bracket of Match hide _ that goes after x)

[14:11] <Skarsnik> in my term

[14:11] *** khw joined
[14:12] * sjn is exploring Cro while eating a Poké bowl and drinking some Club Mate at his local hackerspace o/

[14:12] <sjn> wow, I've become a hipster

[14:12] *** mcmillhj left
[14:12] <sjn> Hurry! I need to do something uncool! o_O

[14:13] * sjn reads some Perl

[14:13] <sjn> *phew*

[14:13] <sjn> hipsterization avoided \o/

[14:13] *** mr_ron left
[14:14] *** mcmillhj joined
[14:15] *** wamba joined
[14:15] *** raschipi joined
[14:16] *** rindolf left
[14:19] *** mcmillhj left
[14:22] <stmuk> I missed https://www.youtube.com/watch?v=I7O6Raj922U

[14:22] <census> Zoffix is there a non-TOR one i can test out?

[14:23] <sjn> Zoffix: hey, weird thing; attempting to install IO::Path::ChildSecure with zef the regular way fails, but when doing the same with "zef install ." in the git repo succeeds. They report the same version

[14:23] <Zoffix> sjn: which is what?

[14:23] <Zoffix> (the version)

[14:23] <sjn> ===> Testing [FAIL]: IO::Path::ChildSecure:ver('1.001005')

[14:24] *** Aaronepower joined
[14:25] <sjn> Zoffix: Failed test 'when we die, error message tells us which Rakudo version needed'

[14:25] <sjn> t/01-operation.t line 116

[14:25] <sjn> This is Rakudo version 2017.08-42-gf1b086308 built on MoarVM version 2017.08.1-19-g151a25634

[14:26] <Zoffix> sjn: I fixed that this morning. Though the version was bumped and 1.001005 has the fix. Are you sure both of them report installing the same version?

[14:26] <Zoffix> Installs for me fine on 2017.07-22-g02667bd

[14:26] *** mcmillhj joined
[14:27] <Zoffix> sjn: you could try     zef uninstall RakudoPrereq

[14:27] <Zoffix> That module turned out to be crap :)

[14:27] <Zoffix> Doesn't play well with precompiled modules

[14:27] <sjn> don't have it

[14:28] <sjn> yes, I'm sure the version numbers are the same

[14:28] <Skarsnik> hm zef probably does not like switchint to * has version to a proper version

[14:30] <Zoffix> sjn: no idea :/ I bumped the versionone more time now, just in case.

[14:31] <sjn> Zoffix: here's the full output: https://gist.github.com/sjn/080f9e6d7fbf199051dac97130292379

[14:31] <Zoffix> sjn: what about zef --/cached install IO::Path::ChildSecure

[14:32] * sjn tries that

[14:32] <Skarsnik> hm zef info does not show the version?

[14:32] <sjn> that worked

[14:32] *** Kyo91_ joined
[14:33] <Zoffix> sjn: weird. I guess there was a cached older version with the bug that somehow got reported as 1.001005 version? :/

[14:33] <sjn> could be

[14:34] <Zoffix> I now tweaked failing test's description so if any more failures like that show up I could see whether the test matches the reported version

[14:34] <Zoffix> Skarsnik: it does, on Identity line

[14:34] <Zoffix> $ zef info IO::Path::ChildSecure

[14:34] <Zoffix> - Info for: IO::Path::ChildSecure

[14:34] <Zoffix> - Identity: IO::Path::ChildSecure:ver('1.001005')

[14:34] <Skarsnik> - Identity: App::GPTrixie

[14:34] <Zoffix> buggable: eco App::GPTrixie

[14:34] <buggable> Zoffix, App::GPTrixie 'Generate NativeCall code from C headers file': https://github.com/Skarsnik/gptrixie

[14:35] * sjn still thinks the --/something convention is weird <_<

[14:35] <Skarsnik> I just added a correct version

[14:35] <Zoffix> Skarsnik: no idea :(

[14:35] <sjn> anyhoo, thanks

[14:35] <sjn> I'll bug you more as I try to install Cro :)

[14:35] <Zoffix> :)

[14:36] <sjn> (at least when it comes to the zofmodules :)

[14:36] <Zoffix> buggable: eco author:zoffix

[14:36] <buggable> Zoffix, Found 36 results: Acme::Anguish, IRC::Client, WWW, GlotIO, CoreHackers::Sourcery. See https://modules.perl6.org/s/author%3Azoffix

[14:37] <Zoffix> Prolly no other are used by Cro

[14:37] <Skarsnik> can I force him to check for a new version on github?

[14:38] <Zoffix> It checks on http://ecosystem-api.p6c.org/projects.json IIRC

[14:39] <Zoffix> star: use LWP::Simple; LWP::Simple.get("http://ecosystem-api.p6c.org/projects.json").&from-json.first(*<name> eq "App::GPTrixie").<version>.say

[14:39] <camelia> star-m 2017.07: OUTPUT: «===SORRY!===␤P6M Merging GLOBAL symbols failed: duplicate definition of symbol INET␤»

[14:39] <Zoffix> :(

[14:39] <Skarsnik> duh

[14:40] * sjn gets a weird test error with Cro::HTTP:ver('0.7') but the tests succeed anyway

[14:40] <Zoffix> Listed as 0.21

[14:40] <sjn> "Sudden error" o_O

[14:40] <Zoffix> Skarsnik: try running zef update

[14:42] <Skarsnik> hm it probably don't think * -> 0.21 is an update

[14:42] <Zoffix> nah, it does

[14:43] <Zoffix> Skarsnik: you got an older installed version of App::GPTrixie and info is reporting that. Run   zef install App::GPTrixie and it'll update. (run zef update first tho)

[14:44] <Skarsnik> bisectable@superserver:~/git/whateverable$ zef  install App::GPTrixie

[14:44] <Skarsnik> All candidates are currently installed

[14:44] <Skarsnik> No reason to proceed. Use --force-install to continue anyway

[14:44] <Skarsnik> after an update

[14:45] <Skarsnik> nativecallable6, typedef foo unsigned int foo; struct s {foo a;};

[14:45] <nativecallable6> Skarsnik, https://gist.github.com/d17678be54178e394bdddce3bfc023f5

[14:46] <Skarsnik> nativecallable6, typedef foo unsigned int; struct s {foo a;};

[14:46] <nativecallable6> Skarsnik, https://gist.github.com/d47793ad77150bba9595244221bffd77

[14:46] *** Guest69863 joined
[14:46] <Zoffix> Skarsnik: doesn't pick up newer version of my module either, so it's not due to "*" version: https://gist.github.com/zoffixznet/f032a31d1730b28b8357e797d478b605

[14:47] <Skarsnik> nativecallable6, typedef unsigned int foo; struct s {foo a;};

[14:47] <nativecallable6> Skarsnik, class s is repr('CStruct') is export {␤ has foo $.a; # Typedef<foo>->|unsigned int| a␤}

[14:47] <Zoffix> Even zef --/cached --force-install install IO::Path::ChildSecure doesn't pick it up

[14:47] * Zoffix has no idea why

[14:48] *** Actualeyes joined
[14:48] <Zoffix> nativecallable6, int foo[42]

[14:49] <nativecallable6> Zoffix, https://gist.github.com/ae562213beec2d3d6e55e1e2291d3426

[14:50] <Skarsnik> nativecallable6, int foo[42];

[14:50] <nativecallable6> Skarsnik, 

[14:50] <Skarsnik> nativecallable6, extern int foo[42];

[14:50] <nativecallable6> Skarsnik, our $foo is export = cglobal(LIB, "foo", CArray[int32]);

[14:53] <Skarsnik> I should put a special message when it fail x)

[14:53] *** mattr joined
[14:53] <Zoffix> That's pretty cool

[14:54] *** gdonald joined
[14:54] <Zoffix> nativecallable6: extern int z = 42; extern bool y[z];

[14:54] <nativecallable6> Zoffix, https://gist.github.com/17e822fd35bbdbbfcabefaeff7fad6b0

[14:54] *** MilkmanDan left
[14:55] <Skarsnik> C does not support that

[14:55] <Zoffix> Mine does...

[14:55] <Zoffix> C99 does

[14:56] <Skarsnik> not with extern probably?

[14:57] <Zoffix> Oh, extern isn't

[14:57] *** mr-fooba_ left
[14:57] <Zoffix> Thanks :)

[14:57] <Zoffix> "f.c:6:17: error: object with variably modified type must have no linkage"

[14:57] *** raschipi left
[14:58] <Skarsnik> t.c:1:12: warning: ‘a’ initialized and declared ‘extern’

[14:58] <Skarsnik>  extern int a = 4;

[14:58] *** mr-foobar joined
[14:58] <Zoffix> Ah

[14:59] <Skarsnik> nativecallable6: int z = 42; extern bool y[z];

[14:59] <nativecallable6> Skarsnik, https://gist.github.com/2c9b3b8376c65bc0dad048a8fc933c9f

[14:59] <Skarsnik> make sens to refuse

[15:00] <Skarsnik> extern mean the symbol is not here, but defined elsewhere. I don't really make sens to have "dynamique" type defintion for it

[15:07] *** MilkmanDan joined
[15:12] *** wamba left
[15:18] <mattr> Hello, I noticed quoting with two adverbs like q:s:a// can be shortened to qs:a// but qsa// will fail (Two terms in a row). Is this a bug? cf. http://examples.perl6.org/categories/cookbook/01strings/01-00introduction.html

[15:21] <Zoffix> mattr: Don't think so. The shortened version is 'q' (or 'Q') + 1 adverb. With 'qsa' it's ambiguous whether the 'sa' is one adverb ('sa') or two ('s' and 'a')

[15:22] *** census left
[15:23] <mattr> Zoffix: Thank you very much. Yes I was wondering about ambiguity since there is :to. Thanks for all the great work! So long from Tokyo.

[15:23] <Zoffix> \o

[15:24] *** mattr left
[15:27] *** eliasr joined
[15:31] <Zoffix> .hug

[15:31] * huggable hugs everyone

[15:31] <Zoffix> :)

[15:34] *** piojo left
[15:34] *** piojo joined
[15:36] *** AlexDaniel joined
[15:37] *** andrzejku_ joined
[15:37] *** pat_js left
[15:39] *** andrzejku_ left
[15:39] *** benchable6 joined
[15:41] *** P6steve joined
[15:41] <P6steve> hi - what is the best place to report a bug in raked*, please?

[15:42] <P6steve> rakudo*

[15:42] *** andrzejku_ joined
[15:42] <Skarsnik> hm, you probably need to identify whee the bug came from

[15:42] <P6steve> I think I have it isolated in the source - it's related to multi dispactch

[15:45] <Skarsnik> so in rakudo. not a module

[15:46] <perlpilot> P6steve: What's the bug?

[15:47] <P6steve> this works: multi sub infix:<+>  (Measure:D $left, Measure:D $right) is equiv( &infix:<+> ) is export {

[15:47] <P6steve> this doesn't: multi sub infix:<+>  (Measure:D $left, Any:D $right where Measure|Real|Str) is equiv( &infix:<+> ) is export {

[15:48] <P6steve> where the params are Distance and Distance 

[15:48] <P6steve> class Distance is Measure is export {}

[15:48] *** lowbro left
[15:49] <P6steve> (works fine with Str on RHS)

[15:49] *** dzove855 joined
[15:49] <Zoffix> P6steve: when you say doesn't work, what behaviour are you oserving?

[15:50] <Zoffix> m: class Measure {}; multi sub infix:<+>  (Measure:D $left, Any:D $right where Measure|Real|Str) { say "got it" }; Measure.new + Measure.new

[15:50] <camelia> rakudo-moar 3e1382: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "+" in expression ".new + Measure.new" in sink context (line 1)␤got it␤»

[15:50] <P6steve> rakudo hangs

[15:50] <Zoffix> m: class Measure {}; multi sub infix:<+>  (Measure:D $left, Any:D $right where Measure|Real|Str) { "got it" }; say Measure.new + 42

[15:50] <camelia> rakudo-moar 3e1382: OUTPUT: «got it␤»

[15:50] <perlpilot> P6steve: what version of rakudo are you using?

[15:50] <Zoffix> That sounds familiar

[15:51] <Skarsnik> R* I think

[15:51] <P6steve> This is Rakudo version 2017.04.3 built on MoarVM version 2017.04-53-g66c6dda implementing Perl 6.c.

[15:52] <Zoffix> P6steve: does it still hang if you use something other than + as symbol?

[15:53] *** mr_ron joined
[15:53] <Zoffix> P6steve: also, are you sure you're not using the very same + inside the body, causing infinite recursion?

[15:54] <P6steve> I tried with <--> ... works fine

[15:54] <Zoffix> Yey, found the ticket

[15:54] <Zoffix> Oh wait, no :(

[15:54] <Zoffix> Was looking at this one: https://rt.perl.org/Ticket/Display.html?id=131574#ticket-history

[15:55] <Zoffix> huggable: rakudobugs

[15:55] <huggable> Zoffix, Report bugs by emailing to [email@hidden.address]
[15:55] <Zoffix> P6steve: you can report by just emailing ^ there

[15:55] <P6steve> I have a += in the method handler, no doubt something uses + lower in the stack

[15:55] *** MilkmanDan left
[15:57] <Skarsnik> Wow my weird branch on gptrixie still segfault rakudo

[15:59] <Skarsnik> was already the case with 2016 build x)

[15:59] <P6steve> but not feeding the += with Measure as either param

[16:00] <Zoffix> Something using + lower in the stack doesn't matter much, as your custom op is lexically scoped, so it only will be used by things that see it

[16:00] <Zoffix> Does --optimize=off avoid the hang?

[16:00] <Zoffix> But in any case, you can report it as a bug. If it turns out not to be, no harm done. Would be handy to have actual code that reproduces the issue to look at.

[16:01] <Zoffix> --optimize=off being the command line switch to perl6 executable

[16:01] <Skarsnik> hm, how to trace where it sigsev in the perl6 code?

[16:02] <sena_kun> perl6-debug-m instead of perl6?

[16:02] <sena_kun> and you need to configure moar for debugging

[16:02] <sena_kun> ugh, stop

[16:02] <sena_kun> *perl6-gdb-m

[16:02] <sena_kun> ^ the right one.

[16:03] <sena_kun> or perl6-valgrind-m.

[16:03] <Skarsnik> gdb tell me where it fail on Moar

[16:03] <Skarsnik> not really where in the p6 code

[16:04] <Skarsnik> #0  0x00007ffff780a264 in MVM_gc_mark_collectable () from //opt/lib/libmoar.so

[16:04] <Skarsnik> #1  0x00007ffff780ab2c in process_worklist () from //opt/lib/libmoar.so

[16:04] <Skarsnik> hm x)

[16:05] *** robertle_ left
[16:06] *** MilkmanDan joined
[16:07] <P6steve> --optimize=off still hangs

[16:08] <P6steve> I'll post the code to rakudobug mail

[16:09] <Skarsnik> If I comment https://github.com/Skarsnik/gptrixie/blob/reftype/lib/GPT/Class.pm6#L73 it does not segfault

[16:12] *** MilkmanDan left
[16:12] *** pmurias joined
[16:19] <MasterDuke_> Skarsnik: you can `call MVM_dump_backtrace(tc)` in gdb to get a perl 6 backtrace

[16:19] <yoleaux> 15:48Z <Zoffix> MasterDuke_: you were curious about purpose of atomics: https://texlution.com/post/golang-lock-free-values-with-atomic-value/

[16:19] <Skarsnik> MasterDuke_, need a debug build or that I guessN

[16:21] <MasterDuke_> not for the p6 backtrace

[16:21] <Skarsnik> I don't have the variable

[16:22] *** cschwenz left
[16:22] <Skarsnik> I mean the symbols

[16:22] <Skarsnik> since it's not a build with the debug symbols

[16:22] <Skarsnik> hm

[16:23] <Skarsnik> could have them generated on a side? like debian does with lib

[16:23] <MasterDuke_> what does `call MVM_dump_backtrace(tc)` in gdb output?

[16:24] <Skarsnik> No symbol table is loaded.  Use the "file" command.

[16:24] <Skarsnik> since I don't have a debug build of moar

[16:24] <MasterDuke_> you shouldn't need it for MVM_dump_backtrace

[16:24] <ruoso__> Is there a way to tell a grammar that I want the whitespaces to be captured without me having to rewrite everything as tokens?

[16:25] <MasterDuke_> but i do always build moar with --debug=3 for better C backtraces

[16:26] <ruoso__> Or, alternatively, is there a way for the ws token to inject a capture to the outside rule? Basically, I have things that are syntactically whitespace, but I still want to preserve them...

[16:26] <MasterDuke_> Skarsnik: you probably aren't inside the moarvm/perl6 process anymore

[16:27] <MasterDuke_> i get the same error if i do that inside a plain gdb session

[16:27] *** mr-foobar left
[16:27] <Skarsnik> without debug symbol I don't think you have somethinh else that the name of functions

[16:28] <Zoffix> ruoso__: that's the default behaviour, isn't it?

[16:28] <Zoffix> m: say "foo bar" ~~ /\S+ <ws> \S+/

[16:28] <camelia> rakudo-moar 3e1382: OUTPUT: «｢foo bar｣␤ ws => ｢ ｣␤»

[16:28] <Zoffix> m: say "foo    bar" ~~ /\S+ <ws> \S+/; say $<ws>.chars

[16:28] <camelia> rakudo-moar 3e1382: OUTPUT: «｢foo    bar｣␤ ws => ｢    ｣␤4␤»

[16:28] <ruoso__> Zoffix: not when using rules 

[16:28] <ruoso__> https://docs.perl6.org/language/grammars#ws

[16:29] <MasterDuke_> Skarsnik: try running your code with perl6-gdb-m again

[16:29] *** dakkar left
[16:29] <MasterDuke_> and then try call MVM_dump_backtrace(tc) immediatelly after the segv

[16:29] *** dogbert2 joined
[16:29] <Skarsnik> that what I did

[16:30] <Zoffix> m: grammar { rule TOP { \S+<ws> \S+ } }.parse: "foo   bar"; $<ws>.chars.say

[16:30] <camelia> rakudo-moar 3e1382: OUTPUT: «3␤»

[16:30] <MasterDuke_> can you post a one-liner? or put the script on the whateverable server?

[16:31] <Zoffix> ruoso__: just stick the <ws> token where you want it (without separating it with whitespace)

[16:31] *** mr-foobar joined
[16:31] <ruoso__> Right, yeah... I could replace all my rules by tokens with explicit whitespace

[16:31] <ruoso__> but that will make the code terribly illegible

[16:31] <Skarsnik> I don't manage to make it smaller x)

[16:32] <Zoffix> I don't understand what you're trying to do then.

[16:32] <ruoso__> I'm writing a fortran parser, where whitespace can be literally anywhere

[16:32] <ruoso__> inline comments (which are not part of the standard, but is supported by some compilers) count as whitespace (due to continuation lines)

[16:32] <Zoffix> m: grammar { rule TOP { \S+ [:!s \S+ <ws> \S+] \S+ } }.parse: "bar foo   bar ber"; $<ws>.chars.say

[16:32] <camelia> rakudo-moar 3e1382: OUTPUT: «3␤»

[16:32] <MasterDuke_> Skarsnik: gotta afk for a bit, but i think it should work without requiring a moarvm built with --debug

[16:33] <MasterDuke_> maybe ask timotimo or ugexe or nine, etc

[16:33] <ruoso__> so I have things like "rule keyword_integer { 'I' 'N' 'T' 'E' 'G' 'E' 'R' }"

[16:34] <ruoso__> because yes, you can have space and even break the line in the middle of the f-ing keyword

[16:34] <ruoso__> and I want to ignore most whitespace, except, if someone does "INT ! some comment\n     +EGER a"

[16:35] <ruoso__> I want to be able to catch the "! some comment" part

[16:35] <Skarsnik> that's newx)

[16:35] <Skarsnik> ===SORRY!===

[16:35] <Skarsnik> Missing or wrong version of dependency '/tmp/gptrixie/../exemel/lib/XML/Grammar.pm6 (XML::Grammar)' (from '/tmp/gptrixie/../exemel/lib/XML/Element.pm6 (XML::Element)')

[16:35] <Zoffix> ruoso__: you could redefine ws token

[16:35] <ruoso__> I did...

[16:35] <ruoso__> and that works

[16:36] <ruoso__> but then when I have a "rule", it eats the whitespace

[16:36] *** raschipi joined
[16:36] <ruoso__> without capturing

[16:36] <ugexe> Skarsnik: try deleting and .precomp dirs in your project folder (and maybe ~/.perl6 too)

[16:36] <Zoffix> ruoso__: and you want to capture the comments, but not ws without comments?

[16:37] <ruoso__> well, I could deal with every ws being captured

[16:38] <ruoso__> what I can't deal with is having to rewrite the 'keyword_integer' as "token keyword_integer { 'I' <ws> 'N' <WS> ..."

[16:38] <Skarsnik> ugexe, hm did not solve the issue

[16:38] <ruoso__> because that will make the code unbearable

[16:38] *** Xliff left
[16:39] <Skarsnik> it's weird because I use lot of version of rakudo along one installed and the first time I get that

[16:39] <raschipi> NeuralAnomaly: status

[16:39] <NeuralAnomaly> raschipi, Use releasable6 bot instead. e.g. try: releasable6: status

[16:39] <raschipi> releasable6: status

[16:39] <releasable6> raschipi, Next release in 17 days and ≈2 hours. No blockers. Changelog for this release was not started yet

[16:39] <releasable6> raschipi, Details: https://gist.github.com/04c5a5847c53984f20fcad773b7c7fed

[16:42] <ugexe> Skarsnik: if you switch to another version it goes away then I guess?

[16:43] *** chsanch joined
[16:44] *** mr_ron left
[16:44] <raschipi> Shouldn't bots have voice?

[16:45] *** piojo left
[16:46] <Skarsnik> not all?

[16:46] <Skarsnik> meh it stopped segfaulting now

[16:49] <Skarsnik> ok this is weird

[16:49] <raschipi> I though voice was used in this channel to indicate which nicks are bots...

[16:49] <Zoffix> m: grammar { token ws { \s* | " ! " (\N+) \s* { $*COMMENT = ~$0 } }; rule integer { I N T E G E R }; rule TOP { :my $*COMMENT; <integer> }; }.parse: "INTEGER", actions => class { method integer ($/) { say "parsed an integer" ~ (" with $*COMMENT" with $*COMMENT)}};

[16:49] <camelia> rakudo-moar 3e1382: OUTPUT: «parsed an integer␤»

[16:49] <Zoffix> m: grammar { token ws { \s* | " ! " (\N+) \s* { $*COMMENT = ~$0 } }; rule integer { I N T E G E R }; rule TOP { :my $*COMMENT; <integer> }; }.parse: "INT ! meows\nEGER", actions => class { method integer ($/) { say "parsed an integer" ~ (" with $*COMMENT" with $*COMMENT)}};

[16:49] <camelia> rakudo-moar 3e1382: OUTPUT: «parsed an integer with meows␤»

[16:49] <ugexe> Skarsnik: you might try and get a diff of RAKUDO_MODULE_DEBUG=1 when it segfaults and when it does not segfault

[16:49] <Zoffix> ruoso__: ^ utilizing a dynamic variable is the only thing I can think of

[16:50] <geekosaur> tt's convention, but the folks who make bots are not the ones who have chanserv access to voice them

[16:50] <geekosaur> *it's

[16:50] <Zoffix> releasable6 just runs on the non-auto-voiced host

[16:51] *** chsanch left
[16:51] <Skarsnik> https://gist.github.com/Skarsnik/b90dbc7ea81001c53822241b95b87a91

[16:52] <raschipi> Thanks, I was just confused wondering if the convention had changed.

[16:52] <geekosaur> bleh. is that host's name / address consistent?

[16:52] <Skarsnik> ugexe, this make little sense (I cleared ~/perl6/.precomp  a bit before) the perl6 is instaalled systemwide in root

[16:53] <Skarsnik> I think it's chanserv/nickserv refusing the auth of the bots after 5 for whateverable

[16:54] <ruoso__> Zoffix: interesting... I need to think about the life-cycle of that variable a bit... but this may work...

[16:54] <ugexe> you deleted ../exemel/lib/.precomp ?

[16:54] <Skarsnik>  :NickServ!NickServ@services. NOTICE nativecallable6t There are already 5 sessions logged in to whateverable (maximum allowed: 5).

[16:54] <Zoffix> geekosaur: usually is

[16:54] <Zoffix> ah hehe :)

[16:54] <Skarsnik> so that probably why they don't get voiced

[16:55] <Zoffix> Well, serves you guys right. Making all these bots. Instead of having one bot doing many features :

[16:55] <Zoffix> :)

[16:55] <Zoffix> Wonder how long it'll take for there to be more bots here than humans :)

[16:56] <Skarsnik> ugexe, hm I install perl6 and modules as root, so I could not affect the precomp normaly?

[16:57] *** mr-fooba_ joined
[16:58] *** Sgeo left
[16:58] *** Sgeo_ joined
[16:58] *** mr-foobar left
[16:59] *** xtreak joined
[17:00] <ugexe> i dunno what it will try to do in that situation (read the stale precomps, or write updated precomp somewhere else)

[17:01] <Skarsnik> normaly when I switch rakudos it just reprecomp module (passed as -I ...) each switch

[17:03] *** zakharyas left
[17:03] *** zakharyas joined
[17:04] *** Sgeo_ left
[17:05] <ugexe> maybe you can golf it down into  bisect: `use lib ‘data/all-modules/Skarsnik/p6-Foo-Bar’; use Foo::Bar; say Foo::Bar::whatever;` ?

[17:08] *** ChristopherBotto joined
[17:08] <ChristopherBotto> Hello everyone. o/

[17:08] <Skarsnik> the issue I trie to golf it a bit but no chance

[17:09] <Skarsnik> like skarsnik@vps300582:/tmp/gptrixie$ perl6 -I lib -e 'use GPT::Class; use XML; my FundamentalType $fp .= new(:name("foo")); say $fp type-eq <const foo> '

[17:09] <Skarsnik>  just work

[17:09] <Zoffix> \o

[17:09] <ChristopherBotto> m: [0, 1, 2, Any].grep(&so)

[17:09] <camelia> rakudo-moar 3e1382: ( no output )

[17:09] <ChristopherBotto> m: say [0, 1, 2, Any].grep(&so)

[17:09] <camelia> rakudo-moar 3e1382: OUTPUT: «(1 2)␤»

[17:09] <ChristopherBotto> m: say [0, 1, 2, Any].grep(*.defined)

[17:09] <camelia> rakudo-moar 3e1382: OUTPUT: «(0 1 2)␤»

[17:10] <ChristopherBotto> m: say [0,1,2,Any].grep(&defined)

[17:10] <camelia> rakudo-moar 3e1382: OUTPUT: «Cannot resolve caller ACCEPTS(Sub+{<anon|56691824>}: Int); none of these signatures match:␤    (Mu:U $: \topic, *%_)␤    (Mu:U $: Mu:U \topic, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[17:10] <ChristopherBotto> Hi Zoffix. o/

[17:10] <ChristopherBotto> I was wondering why I can use &so in grep but not &defined.

[17:10] <Zoffix> s: say &defined ~~ Callable

[17:10] <SourceBaby> Zoffix, Something's wrong: False␤␤ERR: Cannot resolve caller sourcery(Bool); none of these signatures match:␤    ($thing, Str:D $method, Capture $c)␤    ($thing, Str:D $method)␤    (&code)␤    (&code, Capture $c)␤  in block <unit> at -e line 6␤␤

[17:10] <Zoffix> oops

[17:11] <Zoffix> m: say &defined ~~ Callable

[17:11] <camelia> rakudo-moar 3e1382: OUTPUT: «False␤»

[17:11] <Zoffix> ChristopherBotto: looks like this bug: https://rt.perl.org/Ticket/Display.html?id=128905#ticket-history

[17:11] <ChristopherBotto> m: say &so ~~ Callable

[17:11] <camelia> rakudo-moar 3e1382: OUTPUT: «True␤»

[17:12] <ChristopherBotto> Zoffix: Thanks! 

[17:12] <ugexe> Skarsnik: that is different, you were using -I ../exemel/lib before

[17:13] <Skarsnik> yeah but without that. The whole code still segfault

[17:14] <Skarsnik> m: class A {;}; my A $a .= new(:name:<foo>); # lta error ?

[17:14] <camelia> rakudo-moar 3e1382: OUTPUT: «===SORRY!===␤This type (QAST::WVal) does not support positional operations␤»

[17:15] <Zoffix> Skarsnik: yup, please report it

[17:15] <Zoffix> huggable: rakudobugs

[17:15] <huggable> Zoffix, Report bugs by emailing to [email@hidden.address]
[17:17] *** leont joined
[17:17] <leont> It seems a recent rakudo broke my module (YAMLish)

[17:18] <leont> Values that used to be Any are not Nil

[17:18] <leont> There may be arguments why Nil is better, but it is breaking tests now

[17:19] <Zoffix> Do you have some golfed code reproducing the issue? We could use the bot to bisect to which commit caused it

[17:20] *** gdonald left
[17:20] <leont> Still figuring out what's going on

[17:20] <ugexe> which test file/number?

[17:21] <leont> The change is on any YAML input that contains "- ~", that I have figured out

[17:22] <leont> First suspect is the line containing «make @<list-entry>».ast.list»

[17:24] <ugexe> bisect: https://gist.githubusercontent.com/ugexe/2228d7f6290c272cc33b58b7c15b3cec/raw/9383fa41b24202710838500259c2ecde5efbd146/1.t

[17:24] <bisectable6> ugexe, Successfully fetched the code from the provided URL.

[17:24] <bisectable6> ugexe, Bisecting by output (old=2015.12 new=3e13825) because on both starting points the exit code is 1

[17:24] <bisectable6> ugexe, bisect log: https://gist.github.com/e711cb109bb7e118d8548a45077b96ad

[17:24] <bisectable6> ugexe, (2016-12-05) https://github.com/rakudo/rakudo/commit/0ba7733c589c4570c66a47261b342f000bacfb51

[17:24] *** sumdoc left
[17:24] <Zoffix> bisect: old=2017.03,new=HEAD https://gist.githubusercontent.com/ugexe/2228d7f6290c272cc33b58b7c15b3cec/raw/9383fa41b24202710838500259c2ecde5efbd146/1.t

[17:24] <bisectable6> Zoffix, Successfully fetched the code from the provided URL.

[17:24] <bisectable6> Zoffix, On both starting points (old=2017.03 new=3e13825) the exit code is 1 and the output is identical as well

[17:24] <bisectable6> Zoffix, https://gist.github.com/14a189ef54d5f76d6c8b3aca6aa915ed

[17:26] <ugexe> bisect: old=2017.03,new=HEAD https://gist.githubusercontent.com/ugexe/2228d7f6290c272cc33b58b7c15b3cec/raw/9383fa41b24202710838500259c2ecde5efbd146/1.t

[17:26] <bisectable6> ugexe, Successfully fetched the code from the provided URL.

[17:26] <bisectable6> ugexe, On both starting points (old=2017.03 new=3e13825) the exit code is 1 and the output is identical as well

[17:26] <bisectable6> ugexe, https://gist.github.com/a4d54a8488eaad633b829227d94d3b09

[17:26] <ugexe> bisect: old=2017.03,new=HEAD https://gist.githubusercontent.com/ugexe/2228d7f6290c272cc33b58b7c15b3cec/raw/b1db99225a5d9b4d3a57a7001d318d96e1000ed5/1.t

[17:26] <bisectable6> ugexe, Successfully fetched the code from the provided URL.

[17:26] <bisectable6> ugexe, Bisecting by output (old=2017.03 new=3e13825) because on both starting points the exit code is 1

[17:27] *** zakharyas left
[17:27] <bisectable6> ugexe, bisect log: https://gist.github.com/4efef7081f490eef241621f95b445f70

[17:27] <bisectable6> ugexe, (2017-03-18) https://github.com/rakudo/rakudo/commit/bfc5cb524fce875d401bd5dde02e1b1cf4d1c43d

[17:27] <ugexe> gah

[17:27] <Zoffix> :)

[17:29] <Zoffix> I think the `use lib` is missing `/lib/` in the end, but if I look at data/all-modules/Leont/yamlish/ there's nothing in it

[17:29] <ugexe> c: use lib 'data/all-modules/leont/yamlish'; use YAMLish;

[17:29] <committable6> ugexe, ¦use: «Cannot find this revision (did you mean “all”?)»

[17:29] <ugexe> c: HEAD use lib 'data/all-modules/leont/yamlish'; use YAMLish;

[17:29] <committable6> ugexe, ¦HEAD(3e13825): «»

[17:30] <Zoffix> :o

[17:30] <Zoffix> weird

[17:30] <ugexe> lowercased the L

[17:30] <Zoffix> ooooh

[17:30] <ugexe> bisect: old=2017.03,new=HEAD https://gist.githubusercontent.com/ugexe/2228d7f6290c272cc33b58b7c15b3cec/raw/4786f7681ea79c490a85a889bf1ff68d0aaab593/1.t

[17:30] <bisectable6> ugexe, Successfully fetched the code from the provided URL.

[17:30] <bisectable6> ugexe, On both starting points (old=2017.03 new=3e13825) the exit code is 0 and the output is identical as well

[17:30] <bisectable6> ugexe, Output on both points: «1..20␤ok 1 - ␤ok 2 - ␤ok 3 - ␤ok 4 - ␤ok 5 - ␤ok 6 - ␤ok 7 - ␤ok 8 - ␤ok 9 - ␤ok 10 - ␤ok 11 - ␤ok 12 - ␤ok 13 - ␤ok 14 - ␤ok 15 - ␤ok 16 - ␤ok 17 - ␤ok 18 - ␤ok 19 - ␤ok 20 - »

[17:31] <ugexe> well, that test works still

[17:32] <ugexe> bisect: old=2017.03,new=HEAD https://gist.githubusercontent.com/ugexe/b0f6608256f9ba4f2fe63fa4ff8f6f2a/raw/4f1560cc262fbc0ce526de12acda6bc22c1d9c5f/2.t

[17:32] <bisectable6> ugexe, Successfully fetched the code from the provided URL.

[17:33] <bisectable6> ugexe, Bisecting by exit code (old=2017.03 new=3e13825). Old exit code: 0

[17:33] <bisectable6> ugexe, bisect log: https://gist.github.com/bdae0c3541fa2df72eb201f744f21ca8

[17:33] <bisectable6> ugexe, (2017-08-21) https://github.com/rakudo/rakudo/commit/5db5b1dbfa0b625130573574e2409972387e9f75

[17:33] <Zoffix> \o/

[17:35] <Zoffix> c: 2017.07,HEAD '' ~~ /^/; $/.ast.^name.say

[17:35] <committable6> Zoffix, ¦2017.07: «NQPMu» ¦HEAD(3e13825): «Nil»

[17:36] <Zoffix> c: 2017.01,2017.07,HEAD '' ~~ /^/; $/.ast.^name.say

[17:36] <committable6> Zoffix, ¦2017.01: «Any» ¦2017.07: «NQPMu» ¦HEAD(3e13825): «Nil»

[17:36] <Zoffix> The Any -> NQPMu change was due to merging of Match and Cursor

[17:38] <Zoffix> The nqp::isconcerete is probably too big a hammer for that test tho. What if code makes a type object, or even a Failure ends up being made?

[17:38] <Zoffix> m: "" ~~ /^/; make Int; $/.ast.say 

[17:38] <camelia> rakudo-moar 3e1382: OUTPUT: «Nil␤»

[17:38] <Zoffix> m: "" ~~ /^/; make Failure.new; $/.ast.say 

[17:38] <camelia> rakudo-moar 3e1382: OUTPUT: «Failed␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[17:38] <Zoffix> Ok, failure blows up

[17:38] <Zoffix> Oh right, 'cause it's concrete duh :)

[17:39] <Zoffix> c: 2017.01,2017.07,HEAD "" ~~ /^/; make class Meows {}; $/.ast.say 

[17:39] <committable6> Zoffix, ¦2017.01,2017.07: «(Meows)» ¦HEAD(3e13825): «Nil»

[17:43] <TimToady> m: "foo   bar".match(/:s (foo) (bar)/).chunks.say

[17:43] <camelia> rakudo-moar 3e1382: OUTPUT: «(0 => ｢foo｣ ~ =>     1 => ｢bar｣)␤»

[17:43] <TimToady> ruoso__: ^^^

[17:44] <TimToady> that might be useful to you

[17:44] <Zoffix> Oh cool. TimToady++

[17:47] <TimToady> otoh this is a spot where the typical fortran compiler violates one-pass parsing, so it depends on how bug-compatible you wanna be

[17:49] <stmuk> https://stmuk.wordpress.com/2017/08/30/swiss-perl-workshop-2017/

[17:51] *** jonas2 left
[17:52] *** xtreak left
[17:53] *** mr_ron joined
[17:55] *** konsolebox left
[17:58] *** mr-foobar joined
[17:58] *** ChristopherBotto left
[17:58] *** mr-fooba_ left
[17:59] <moritz> stmuk++

[18:01] *** konsolebox joined
[18:04] <ruoso__> TimToady: I have actually finished writing the grammar, which indeed parses a sizeable bunch of legacy fortran I have around...

[18:04] <ruoso__> (without require two-passes)

[18:05] *** kubrat left
[18:05] <leont> ugexe, Zoffix: so what do I need to do? Will this be fixed in rakudo? Should I work around it in my code?

[18:08] *** xtreak joined
[18:10] <Zoffix> leont: perhaps talk to lizmat++ about it? IMO Nil is a more correct return value than an Any in that case. The one potential improvement I see is using something more precice than nqp::isconcrete, so that one could make() type objects and get them back on the other end instead of Nil

[18:10] *** Guest69863 left
[18:10] *** rindolf joined
[18:10] <Zoffix> Nil is absence of a value, while Any is just the default default of uninitialized variables and parameters that don't got an explicit type contraint on them

[18:11] *** xtreak left
[18:14] *** hythm joined
[18:16] <hythm> m: my @a = <a b c>; say ~@a; # how to make output a, b ,c

[18:16] <camelia> rakudo-moar 1f39d6: OUTPUT: «a b c␤»

[18:16] <Zoffix> m: my @a = <a b c>; say @a.join: ", "

[18:16] <camelia> rakudo-moar 1f39d6: OUTPUT: «a, b, c␤»

[18:17] <hythm> Thanks Zoffix

[18:17] <Zoffix> Any time

[18:20] *** mr_ron left
[18:21] <leont> Meh, can't get my test to work :-/

[18:22] <Zoffix> :(

[18:23] *** cdg joined
[18:23] <leont> Due to [Nil] turning into [Any], yet my code does get Nil into something that deeply equals [] but not ()

[18:24] *** cdg left
[18:25] <AlexDaniel> Interesting code style thingy here: https://github.com/perl6/doc/issues/1477#issuecomment-326077311 . I don't think I ever shared this idea before, but there it is now :)

[18:26] <ruoso__> TimToady: I'm not quite sure how your example helps me, tho... 

[18:26] <ruoso__> m: grammar Foo { rule TOP {:s <a> <b> }; rule a {:s a }; rule b {:s b } }; say Foo.parse("a b").gist

[18:26] <camelia> rakudo-moar 1f39d6: OUTPUT: «｢a b｣␤ a => ｢a ｣␤ b => ｢b｣␤»

[18:26] <ruoso__> the space is not captured

[18:27] *** cdg_ left
[18:27] <Zoffix> AlexDaniel: haha, I actually saw that "good form" comment a couple days ago and wanted to remove it. I don't follow that advise. I use lack of the colon to indicate the value is used as a return value and we loosely use that style in rakudo's core code too :)

[18:28] <AlexDaniel> Zoffix: yeah, that's exactly my point

[18:28] <Zoffix> ruoso__: it's not the :s that makes the example work (rule already has :s enabled), it's the .chunks method

[18:29] <AlexDaniel> Zoffix: well, except that I go one step further and use “well, there's always something returned (maybe), so there's always no semicolon” :)

[18:30] <Zoffix> But if I'm not using the return value, I'd put the semicolon

[18:30] <leont> Is there a method that returns the object itself without modification? (may sounds silly, but it's for a test)

[18:30] <ruoso__> m: grammar Foo { rule TOP { <r_a> <r_b> }; rule r_a { a }; rule r_b { b } }; say Foo.parse("a b")<r_a>.chunks

[18:30] <camelia> rakudo-moar 1f39d6: OUTPUT: «(~ => a )␤»

[18:31] <Zoffix> it's more tangible in large if {} else {} constructs and the like where you have a screenful of code that determines the return value and the lack of semicolon is a subtle reminder

[18:31] <Zoffix> leont: .self

[18:31] <Zoffix> leont: it's only special in Failure, where it explodes unhandled failures, but still functions as "return self" for already handled Failures

[18:32] <Zoffix> m: say $_ === .self with class {}.new

[18:32] <camelia> rakudo-moar 8a2158: OUTPUT: «True␤»

[18:33] *** cdg joined
[18:35] <ruoso__> Zoffix: but .chunks also doesn't seem to split the whitespace out (see my latest `m:` eval)

[18:36] <Zoffix> ruoso__: yeah, it only separates the chunks on capture boundaries

[18:36] <ruoso__> Compared to explicit token+ws

[18:36] <ruoso__> m: grammar Foo { token TOP { <r_a> <ws> <r_b> }; token r_a { a <ws> }; token r_b { b <ws> } }; say Foo.parse("a b").chunks

[18:36] <camelia> rakudo-moar 8a2158: OUTPUT: «(r_a => ｢a ｣␤ ws => ｢ ｣ ws => ｢｣ r_b => ｢b｣␤ ws => ｢｣)␤»

[18:37] <Zoffix> m: grammar Foo { rule TOP { <r_a> <r_b> }; rule r_a { (a) }; rule r_b { (b) } }; say Foo.parse("a b")<r_a>.chunks

[18:37] <camelia> rakudo-moar 8a2158: OUTPUT: «(0 => ｢a｣ ~ =>  )␤»

[18:37] *** nadim joined
[18:37] *** cdg left
[18:38] <ruoso__> i.e.: accumulate inline comments in the matching

[18:38] <ruoso__> then consume them from the action methods

[18:38] <ruoso__> But I think the dynamic variable may be a good-enough solution

[18:42] <ruoso__> Zoffix: I see.. but that will make for some very fragile action method code

[18:42] *** pecastro left
[18:42] *** raschipi left
[18:42] *** pilne joined
[18:43] *** pecastro joined
[18:43] *** raschipi joined
[18:43] *** modula joined
[18:44] <hythm> m: say Array[Str].new("a", "b", "c").join: ", "; # This works

[18:44] <camelia> rakudo-moar 8a2158: OUTPUT: «a, b, c␤»

[18:44] <hythm> Not sure why I'm getting this error: 

[18:45] <hythm> (error) Invocant of method 'join' must be an object instance of type 'List', not a type object of type 'Array[Str]'.

[18:46] <Zoffix> m: say Array[Str].join: ", ";

[18:46] <camelia> rakudo-moar 8a2158: OUTPUT: «Invocant of method 'join' must be an object instance of type 'List', not a type object of type 'Array[Str]'.  Did you forget a '.new'?␤  in block <unit> at <tmp> line 1␤␤»

[18:46] <Zoffix> hythm: you're trying to call .join on a type object instead of an actual Array with stuff in it

[18:48] <leont> How does my code get a Nil in a []? I don't quite get this

[18:48] <hythm> Zoffix, makes sense, checking the code

[18:48] *** pecastro left
[18:50] *** wamba joined
[18:51] <AlexDaniel> leont: sorry I may have missed it, but where's your code?

[18:53] *** P6steve left
[18:55] <leont> YAMLish

[18:55] <leont> I haven't been able to golf it down yet though :-/

[18:56] <leont> In my understanding, an Array shouldn't ever contain Nil, right?

[18:58] <Zoffix> It could

[18:58] <Zoffix> my @a; @a[1] := Nil; dd @a

[18:58] <Zoffix> m: my @a; @a[1] := Nil; dd @a

[18:58] <camelia> rakudo-moar 8a2158: OUTPUT: «Array @a = [Any, Nil]␤»

[19:02] <kannan> how do we find out what are the modules installed?

[19:02] <Skarsnik> hm

[19:02] *** steven_ joined
[19:02] *** steven_ left
[19:03] <Skarsnik> something to do will calling stuff on CompUnit class

[19:03] <Zoffix> kannan: zef list --installed

[19:03] <kannan> oh ok. i did try a man zef , i should look in the docs.perl6.org i suppose. Thanks Zoffix

[19:03] <Zoffix> kannan: zef --help :)

[19:04] <kannan> oh ok, lol

[19:04] <kannan> its for times like these i made ful disclaimer that i am noob :)

[19:04] <Zoffix> Yeah, me too.

[19:04] <AlexDaniel> ⚠ Community Bug SQUASHathon http://blogs.perl.org/users/zoffix_znet/2017/08/youre-invited-community-bug-squashathon.html

[19:05] *** pecastro joined
[19:05] <Zoffix> AlexDaniel: BTW, using Geth's guts, it's possible to have SQUASHathon's bot notify for extra GitHub's events, such as when some user "takes" an issue, etc

[19:06] <AlexDaniel> Zoffix: yup, this is what I'm doing

[19:06] <andrzejku_> hey

[19:07] <Zoffix> AlexDaniel++ sweet

[19:07] *** espadrine joined
[19:07] <Zoffix> andrzejku_: hey

[19:07] <andrzejku_> I know that there is Perl6 gnuplot

[19:07] <andrzejku_> but I would try to create a new one

[19:08] <andrzejku_> or it is not good?

[19:08] <Skarsnik> try to fix what bother you in the original one first

[19:09] *** konsolebox left
[19:09] <AlexDaniel> Zoffix: I wonder how loud it is going to be. I have a feeling that we should only be mentioning first things by a user here. Like “🍕 user X made his first commit” etc.

[19:09] *** pecastro left
[19:09] <AlexDaniel> Zoffix: but maybe I'm over-estimating the amount of people :)

[19:10] <Zoffix> AlexDaniel: I was thinking of a more practicle side: "user x self-assigned 'Improve Proc::Async docs' issue" tells other users to stay away from Proc::Async file so we avoid merge conflicts

[19:10] <Zoffix> And too-loud can be fixed when it happens.

[19:11] *** darutoko left
[19:11] <AlexDaniel> Zoffix: okay. Well, https://github.com/rakudo/rakudo/wiki/Monthly%20Bug%20Squash%20Day recommends to self-assign yourself before working on something, but I don't know if many will do it (and if it's going to help)

[19:12] *** kannan left
[19:13] *** Cabanossi left
[19:15] *** Cabanossi joined
[19:16] *** konsolebox joined
[19:21] *** konsolebox left
[19:25] *** MilkmanDan joined
[19:28] *** konsolebox joined
[19:29] <andrzejku_> Skarsnik it is hard to fix

[19:30] <andrzejku_> the API is not good

[19:30] <Skarsnik> huggable, eco gnuplot

[19:30] <huggable> Skarsnik, nothing found

[19:32] <andrzejku_> eco Gnuplot

[19:32] <andrzejku_> huggable, eco Gnuplot

[19:32] <huggable> andrzejku_, nothing found

[19:32] <andrzejku_> huggable, eco Chart

[19:32] <huggable> andrzejku_, nothing found

[19:32] <andrzejku_> huggable, you dumb

[19:32] <huggable> andrzejku_, nothing found

[19:33] <Skarsnik> huggable, eco plot

[19:33] <huggable> Skarsnik, nothing found

[19:34] <Zoffix> wrong bot, bud

[19:34] <Zoffix> buggable: eco gnuplot

[19:34] <buggable> Zoffix, Chart::Gnuplot 'A Perl 6 bindings for gnuplot': https://github.com/titsuki/p6-Chart-Gnuplot

[19:36] <Skarsnik> lol

[19:38] *** cdg joined
[19:39] <mspo> muggleable: are you a wizard?

[19:42] <raschipi> mspo: http://i2.kym-cdn.com/photos/images/newsfeed/000/117/814/are-you-wizard.jpg

[19:43] *** cdg left
[19:43] <mspo> pluggable: try this adapter next time

[19:44] <Zoffix> AlexDaniel: I think if a lot of people turn up, we should be prepared for "Git 101" questions, like `git pull --rebase` to avoid a merge commit, etc. Also, I don't expect people to read the entire CONTRIBUTING.md doc. It's too huge and most users don't need to do lengthy builds of the docs system locally. They can just edit the POD; if they really want, check it for syntax errors with perl6 --doc=HTML

[19:44] <Zoffix> doc/Type/Whatever.pm; and move on

[19:46] <raschipi> Iwill wake up early Saturday.

[19:46] <Zoffix> m: say 185/280

[19:46] <camelia> rakudo-moar 8a2158: OUTPUT: «0.660714␤»

[19:46] <Zoffix> ⅔ of issues are "doc"-labeled Issues

[19:48] <Zoffix> Wonder what the "new" Issue label means...

[19:50] <AlexDaniel> Zoffix: yep, same question. What “new” is I can understand, what I don't understand is who is going to maintain these labels

[19:50] *** Skarsnik left
[19:50] <Zoffix> AlexDaniel: what is "new"?

[19:51] <Zoffix> (given issues are dated and sorted chronologically already)

[19:51] <AlexDaniel> Zoffix: ok, just looked at what is marked “new”, I take my words back

[19:51] <Zoffix> :D

[19:51] * Zoffix &

[19:51] *** sena_kun left
[19:51] <AlexDaniel> maybe it's stuff that requires new text?

[19:51] *** pecastro joined
[19:52] <AlexDaniel> not explained here also: https://github.com/perl6/doc/blob/master/CONTRIBUTING.md#reporting-bugs

[20:01] *** cdg joined
[20:02] *** cdg left
[20:02] *** cdg_ joined
[20:02] *** Kyo91_ left
[20:02] *** kubrat joined
[20:03] *** rindolf left
[20:03] *** cdg joined
[20:08] *** cdg_ left
[20:12] *** Kyo91_ joined
[20:17] <Geth_> ¦ perl6-most-wanted: 8d7457963f | (Tom Browder)++ (committed using GitHub Web editor) | most-wanted/bindings.md

[20:17] <Geth_> ¦ perl6-most-wanted: perl 6 wrapper for libmilter

[20:17] <Geth_> ¦ perl6-most-wanted: 

[20:17] <Geth_> ¦ perl6-most-wanted: See libmilter source at https://github.com/opnsense/src/tree/master/contrib/sendmail/libmilter

[20:17] <Geth_> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/8d7457963f

[20:18] <Geth_> ¦ perl6-most-wanted: 7b621af1b1 | (Tom Browder)++ (committed using GitHub Web editor) | most-wanted/bindings.md

[20:18] <Geth_> ¦ perl6-most-wanted: create a link to the library source

[20:18] <Geth_> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/7b621af1b1

[20:19] *** andrzejku_ left
[20:20] <Geth_> ¦ perl6-most-wanted: 5648dd8021 | (Tom Browder)++ (committed using GitHub Web editor) | most-wanted/modules.md

[20:20] <Geth_> ¦ perl6-most-wanted: remove, belongs in native bindings section

[20:20] <Geth_> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/5648dd8021

[20:24] <[Coke]> I just started adding 'new' - it was "this doesn't exist, write it" vs. "this exists, you're going to have to edit someone's work and there's probably a lot of opinions in the ticket to sort through"

[20:24] <[Coke]> mainly so I could then easily avoid the latter type when I was looking for stuff to work on.

[20:24] <[Coke]> I'll add that somewhere.

[20:26] *** MilkmanDan left
[20:27] <Geth> ¦ doc: 9b26febb1f | (Will Coleda)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[20:27] <Geth> ¦ doc: Note doc sub tags, new & update

[20:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9b26febb1f

[20:27] <[Coke]> so I'd tell newbs to look for +doc +new first because they're probably easier.

[20:28] *** pecastro left
[20:29] <[Coke]> (or just ignore them for now, that's also fine. I'm more concerned about tickets getting closed with well written prose than categorizing them; that's just a means to the end.)

[20:29] *** pecastro joined
[20:37] *** cdg left
[20:39] *** cdg joined
[20:40] *** raschipi left
[20:43] *** cdg left
[20:43] *** cdg joined
[20:44] *** Khisanth left
[20:47] *** modula left
[20:48] *** Khisanth joined
[20:52] <gfldex> m: constant aname = <foo>; sub aname { say 'oi‽' }; aname();

[20:52] <camelia> rakudo-moar 8a2158: OUTPUT: «oi‽␤»

[20:53] <gfldex> m: constant aname = <foo>; sub ::(aname) { say 'oi‽' }; foo;

[20:53] <camelia> rakudo-moar 8a2158: OUTPUT: «oi‽␤»

[20:55] <Zoffix> .oO( sorcery! )

[20:55] <gfldex> .tell ipatrol not quite what you where looking for: https://irclog.perlgeek.de/perl6/2017-08-30#i_15093185

[20:55] <yoleaux> gfldex: I'll pass your message to ipatrol.

[20:57] <gfldex> is that doced?

[20:59] * gfldex .oO( If I have to ask that question … )

[21:00] *** Guest69863 joined
[21:08] *** Kyo91_ left
[21:13] *** mcmillhj left
[21:14] *** Cabanossi left
[21:15] *** skids left
[21:15] *** Cabanossi joined
[21:22] *** setty1 left
[21:28] *** pecastro left
[21:29] *** ufobat left
[21:29] *** pecastro joined
[21:34] *** mcmillhj joined
[21:35] *** pecastro left
[21:36] *** pecastro joined
[21:38] *** mcmillhj left
[21:39] *** Kyo91_ joined
[21:43] *** Kyo91_ left
[21:43] *** mr-fooba_ joined
[21:44] *** pecastro left
[21:45] *** mr-foobar left
[21:50] *** mcmillhj joined
[21:50] *** pecastro joined
[21:58] *** MasterDuke_ left
[21:58] *** mcmillhj left
[21:59] *** Kyo91_ joined
[22:04] *** pecastro left
[22:04] *** Kyo91_ left
[22:05] *** pmurias left
[22:06] *** espadrine left
[22:08] *** geekosaur left
[22:11] *** geekosaur joined
[22:15] *** pecastro joined
[22:21] *** pecastro left
[22:21] *** mcmillhj joined
[22:26] *** mcmillhj left
[22:26] *** pecastro joined
[22:26] *** Sgeo joined
[22:31] *** pecastro left
[22:33] *** Sgeo_ joined
[22:34] *** nadim left
[22:34] *** Sgeo left
[22:35] *** devmikey joined
[22:36] *** ChoHag left
[22:37] *** mcmillhj joined
[22:39] *** pecastro joined
[22:41] *** ChoHag joined
[22:43] *** Guest69863 left
[22:43] *** mcmillhj left
[22:44] *** pecastro left
[22:50] *** pecastro joined
[22:53] *** imcsk8 left
[22:55] *** raschipi joined
[22:55] *** leont left
[23:01] *** skids joined
[23:08] *** cdg_ joined
[23:08] *** cdg_ left
[23:11] *** cdg left
[23:13] *** pecastro left
[23:14] <Geth> ¦ doc/molecules-patch-3: 4d069f99ef | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[23:14] <Geth> ¦ doc/molecules-patch-3: Cleaning up "Separating statements by semicolons"

[23:14] <Geth> ¦ doc/molecules-patch-3: 

[23:14] <Geth> ¦ doc/molecules-patch-3: Trying to address #1477

[23:14] <Geth> ¦ doc/molecules-patch-3: review: https://github.com/perl6/doc/commit/4d069f99ef

[23:14] <Geth> ¦ doc: molecules++ created pull request #1479: Cleaning up "Separating statements by semicolons"

[23:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1479

[23:16] *** Sgeo__ joined
[23:19] *** Sgeo_ left
[23:23] *** margeas left
[23:33] *** travis-ci joined
[23:33] <travis-ci> Doc build failed. Christopher Bottoms 'Cleaning up "Separating statements by semicolons"

[23:33] <travis-ci> https://travis-ci.org/perl6/doc/builds/270215801 https://github.com/perl6/doc/commit/4d069f99ef96

[23:33] *** travis-ci left
[23:34] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[23:36] *** geekosaur left
[23:38] *** geekosaur joined
[23:43] *** geekosaur left
[23:46] *** geekosaur joined
[23:47] *** andreoss joined
