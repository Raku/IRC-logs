[00:00] <geekosaur> (granted that this is a perl 6 specific issue, but there are equivalents with every other language's string handling.)

[00:00] *** Cabanossi left
[00:02] *** Cabanossi joined
[00:03] *** eliasr left
[00:06] <tyil> opened an issue

[00:06] <tyil> for now I'll just run << curl >>

[00:06] <tyil> thanks for the assistance geekosaur 

[00:07] *** cdg joined
[00:09] *** margeas left
[00:10] <AlexDaniel-> ‚ÄúUse of uninitialized value of type Any in string context.‚Äù

[00:10] <AlexDaniel-> that's not a good sign when it comes from zef :(

[00:11] <AlexDaniel-> can somebody try ÔΩ¢zef install Image::PNG::PortableÔΩ£ ?

[00:11] *** cdg left
[00:13] <tyil> AlexDaniel-: works on my desktop

[00:13] <tyil> This is Rakudo version 2017.09 built on MoarVM version 2017.09.1

[00:14] <tyil> - Identity: zef:ver('0.1.29'):auth('github:ugexe')

[00:22] *** mson left
[00:23] <AlexDaniel-> yep, nuking my install helped

[00:23] <AlexDaniel-> tyil: thanks

[00:23] *** itaylor57 left
[00:24] *** AlexDaniel- is now known as AlexDaniel`

[00:27] *** itaylor57 joined
[00:29] *** wamba left
[00:30] <AlexDaniel`> meh, if I'm using two nicknames, what should I do?

[00:30] <AlexDaniel`> ` looks fine I guess

[00:31] *** ilbelkyr left
[00:33] *** ilbelkyr joined
[00:35] *** ChoHag left
[00:39] <[Coke]> .

[00:42] *** |oLa| left
[00:42] *** cpage_ joined
[00:43] <tyil> AlexDaniel`: setup a bouncer and go back to using one nickname :p

[00:44] <AlexDaniel`> tyil: ‚Ä¶ tells me somebody who is using two nicknames at the same time

[00:44] <AlexDaniel> tyil: o/

[00:45] <AlexDaniel`> tyil[m]: o/ I mean

[00:45] <tyil> oh, thats a whole 'nother chat service

[00:45] <tyil> which just happens to be bridged to irc

[00:45] <AlexDaniel`> well‚Ä¶ practically it's a bouncer :)

[00:45] <tyil> (I dont use it anymore either)

[00:45] <tyil> it just, idles there

[00:45] <tyil> forever

[00:45] <tyil> and ever

[00:46] <tyil> wasting precious cpu cycles

[00:46] <AlexDaniel`> well, I love Matrix and Riot, if only it was not built on top of chromium

[00:46] <tyil> if it had a good client I might reconsider

[00:47] <AlexDaniel`> tyil: what do you use for IRC?

[00:47] <tyil> weechat

[00:48] <AlexDaniel`> tyil: https://matrix.org/docs/projects/client/weechat.html ?

[00:48] <tyil> I'd rather not touch that again

[00:48] <AlexDaniel`> never tried it

[00:48] <tyil> unstable client, and the encrypted chat doesnt work at all

[00:50] <Geth> ¬¶ doc: d02509493c | (Will "Coke" Coleda)++ | doc/Type/Hash.pod6

[00:50] <Geth> ¬¶ doc: trailing whitespace

[00:50] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d02509493c

[00:50] <Geth> ¬¶ doc: cb5a24c8b7 | (Will "Coke" Coleda)++ | xt/code.pws

[00:50] <Geth> ¬¶ doc: learn new code snippet

[00:50] <synopsebot> Link: https://doc.perl6.org/type/Hash

[00:50] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cb5a24c8b7

[00:50] <Geth> ¬¶ doc: 06f0875a46 | (Will "Coke" Coleda)++ | xt/words.pws

[00:50] <Geth> ¬¶ doc: learn new word

[00:50] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/06f0875a46

[00:51] <AlexDaniel`> tyil: I see

[00:51] <AlexDaniel`> tyil: fwiw, if you're not using tyil[m], you might as well want to bring it down

[00:52] <AlexDaniel`> so that I wouldn't need to cycle thru two nicknames for autocompletion‚Ä¶ :)

[00:52] <AlexDaniel`> ye-ye, I know, 4 characters. But I'd much rather type two and press Tab

[00:52] <AlexDaniel`> which also types ‚Äú: ‚Äù

[00:53] <tyil> I get highlighted on either

[00:53] <AlexDaniel`> ‚Ä¶ but I have to disambiguate anyway‚Ä¶ :S

[00:53] *** nadim left
[00:55] <geekosaur> I thought matrix was discouraging unpaid idlers these days

[00:55] *** wander left
[00:58] <AlexDaniel`> geekosaur: ‚Äúunpaid‚Äù?

[00:59] <geekosaur> I was under the impression they provided limited unpaid service and a full paid/subscription service

[00:59] <geekosaur> maybe that was one of the other gateways instead

[00:59] <tyil> afaik its all gratis

[00:59] *** EtomicBomb joined
[00:59] <EtomicBomb> hey

[00:59] <geekosaur> (the eternal question being, if it's free, who's paying the bills? or are you, the user, also the product?)

[01:00] <EtomicBomb> yes

[01:00] <tyil> geekosaur: if it worked well I was going to put up my own server

[01:00] *** EtomicBomb left
[01:00] <tyil> just like IRC, matrix runs on people donating their server power

[01:05] *** perigrin joined
[01:14] *** Cabanossi left
[01:15] *** itaylor57 left
[01:16] *** travis-ci joined
[01:16] <travis-ci> Doc build passed. Will "Coke" Coleda 'learn new word'

[01:16] <travis-ci> https://travis-ci.org/perl6/doc/builds/288365566 https://github.com/perl6/doc/compare/abefd37aba18...06f0875a46a6

[01:16] *** travis-ci left
[01:17] <AlexDaniel`> [Coke]++

[01:17] *** Cabanossi joined
[01:21] *** kyan left
[01:24] *** mr-foobar left
[01:25] *** mr-foobar joined
[01:33] <japhb> .seen salortiz

[01:33] <yoleaux> I haven't seen salortiz around.

[01:33] <japhb> Anyone know who github:salortiz is here?

[01:33] <perigrin> wm 19

[01:37] *** bitrauser_ joined
[01:41] *** bitrauser left
[01:46] <AlexDaniel`> .seen sortiz

[01:46] <yoleaux> I saw sortiz 17 Jan 2017 23:36Z in #perl6: <sortiz> 'gnight lizmat, and thanks again

[01:47] <AlexDaniel`> japhb: ‚Üë

[01:48] *** ilbot3 left
[01:50] <geekosaur> 10 months ago...

[01:52] *** ch3ck3r joined
[01:55] *** napo1eon left
[01:55] *** ilbot3 joined
[01:55] *** ChanServ sets mode: +v ilbot3

[02:02] *** cpage joined
[02:04] *** wander joined
[02:14] *** mson joined
[02:15] *** Cabanossi left
[02:17] *** Cabanossi joined
[02:18] *** cdg joined
[02:22] *** itaylor57 joined
[02:23] *** cdg left
[02:25] *** itaylor57 left
[02:27] *** kjk joined
[02:30] *** weabot left
[02:31] *** noganex_ joined
[02:32] *** xi- joined
[02:32] <kjk> hello, trying to use the 'rename' sub, but notinced that it returns a failure instead of throwing an exception... Currently I'm calling it like: sink rename ...; is this how it's expected to be used? 

[02:33] *** noganex left
[02:34] <kjk> basically I'd it to throw an exception instead of failing silently on me, which seems to be the case if I just call it without "sinking" it.

[02:35] *** ufobat_ joined
[02:36] <perigrin> a) that's possibly a question better suited for #perl-help than #p5p, b) if you want it to throw an exception you probably want to use autodie

[02:36] <Juerd> Sink context is what happens implicitly if you don't use the value

[02:36] <perigrin> c)I'm in the wrong damn channel

[02:36] <perigrin> stupid irssi

[02:36] * perigrin sigh

[02:36] <geekosaur> er, this is neither #p5p nor #perl5 :)

[02:36] <geekosaur> whoops

[02:36] <Juerd> perigrin: "sink" is Perl 6's void context.

[02:37] <perigrin> geekosaur: yeah irssi just renumbered everything on me and I'm an idiot :)

[02:37] * perigrin moves some things around

[02:38] <geekosaur> this is why I don't like irssi and stick to hexchat. channel pane behaves :)

[02:38] <Juerd> kjk: For example, if you assign the return value of rename to a variable, the failure will be assigned. No exception is thrown until you use the value later on. But if you just have a bare function call, it should fail immediately.

[02:38] *** ufobat left
[02:38] <kjk> @Juerd right, I wonder why it was decided to return a Failure instead of throwing an Exception

[02:39] <Juerd> kjk: That's the easiest way to enable ignoring the problem if your program doesn't mind

[02:39] <perigrin> geekosaur: it usually isn't a problem unless my host restarts over night without my being aware of it

[02:39] <Juerd> kjk: And it's the easiest way to allow simple boolean error handling: rename ... or die "didn't work :("

[02:39] <AlexDaniel`> perigrin: this reminds me how one time I was explaining to somebody the difference between "" and '', only to realize that I'm on #python

[02:40] <kjk> since I think most people just call it like this: rename from-name to-name;  but then that would silently fail :(

[02:40] <AlexDaniel`> perigrin: I ran away once I realized

[02:40] <Juerd> kjk: If it would throw an exception, then you would need to actually CATCH the error to get your own error message, or to ignore it.

[02:40] <perigrin> I'll own being an idiot. I do it often enough.

[02:40] <Juerd> kjk: Actually, that shouldn't fail silently. Can you share the code that does?

[02:40] <geekosaur> kjk, if they call it like that, the Failure should be sunk and get thrown

[02:41] <kjk> really? hold on I'm sure it didn't get sunk, let me check

[02:41] <geekosaur> if they assign the result, that is a Failure object; testing it as a Boolena lets you see if it succeeded or not as normal flow control instead of as an exception

[02:41] <geekosaur> but using it in any other way should throw the deferred exception

[02:42] <geekosaur> also, for when you really want stuff to just explode immediately, there is 'use fatal'

[02:42] <AlexDaniel`> this reminds me of https://github.com/perlpilot/p6-sake/issues/12

[02:42] <AlexDaniel`> (lol, everything reminds me)

[02:43] * Juerd wonders if there's implicit returning going on, obscuring the non-sink context through propagation, as in  sub mv { rename $^a, $^b }; my $x = mv $foo, $bar;

[02:43] <AlexDaniel`> that's exactly what I'm thinking

[02:43] *** wander left
[02:45] *** itaipu joined
[02:46] <kjk> yeah, just read about 'use fatal'. nice. anyway, coming up with a short example to reproduce it

[02:49] <kjk> ok can't reproduce it with new code, I'm just going to share my existing code that has the problem in a gist

[02:49] <japhb> Are there any references on writing (and/or using) a grammar to make it produce decent error messages on failure?

[02:53] *** mr-foobar left
[02:53] <kjk> @Juerd, sorry to dump this on you, but here's the script I'm writing that's having the issue with rename. https://gist.github.com/kjkuan/1f575bb323b42e498a7bfb06193548c2

[02:54] <Juerd> kjk: I don't mind but I do feel free to ignore it because I'm almost going to bed :)

[02:54] <Juerd> I'll have a quick look though

[02:54] *** atroxaper joined
[02:54] <kjk> oh no worries then, thanks for helping

[02:55] <Juerd> It seems that for doesn't propagate sink context?

[02:55] <Juerd> I wonder if that's a bug or an obscure feature.

[02:55] <geekosaur> I was just thinking that. probably returns the last thing in the block or somethin

[02:55] <geekosaur> then MAIN's magic becomes an edge case

[02:55] <Juerd> geekosaur: But the loop is the last thing in MAIN and I'd expect *that* to be sunk...

[02:56] <Juerd> The same thing without the loop would have thrown the failure

[02:56] <geekosaur> Im not sure I'd expect that. depends on whether MAIN was supposed to inspect the final value to decide perl 6's exit code

[02:56] <geekosaur> in which case that might be an NYI or something with an unfortunate side effect

[02:56] <Juerd> I don't think it has to do with MAIN

[02:56] <Juerd> The same thing happens with a regular named sub

[02:56] <geekosaur> ...

[02:57] *** mr-foobar joined
[02:57] <Juerd> perl6 -e'sub mv ($a, $b) { for 1 { rename $a, $b } }; my $x = mv "does-not-exist", "meh";'

[02:58] <Juerd> Err

[02:58] <Juerd> Shouldn't have that assignment obviously :)

[02:58] <Juerd> Same result without the "my $x ="

[02:58] <geekosaur> m: sink [1,2,Failure.new('boo!')]

[02:58] <camelia> rakudo-moar e52c8affa: ( no output )

[02:58] <geekosaur> thinkI just golfed it

[02:59] <geekosaur> for returns a list of the final block values. one of those values is a Failure. sinking the list doesn't fire the Failure

[02:59] <Juerd> kjk: A work-around is to add a statement after the rename, like simply "True;" as in the git issue AlexDaniel` linked.

[02:59] <Juerd> Good night #perl6

[02:59] <kjk> k, thanks

[02:59] <geekosaur> m: sink [Failure.new('boo!')]

[02:59] <camelia> rakudo-moar e52c8affa: ( no output )

[02:59] <AlexDaniel`> ‚Äúuse fatal;‚Äù is probably better

[02:59] <AlexDaniel`> m: use fatal; say sink [1,2,Failure.new(‚Äòboo‚Äô)]

[02:59] *** Cabanossi left
[02:59] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´boo‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[02:59] <kjk> so is this a bug or just a trap?

[03:00] <AlexDaniel`> it's a trap, but maybe we don't have it documented yet

[03:00] <geekosaur> mm. I think for now I say trap, because having sink context force evaluation of a possibly infinite list to trip embedded Failures seems kinda bad

[03:00] *** Sgeo joined
[03:00] <AlexDaniel`> kjk: maybe you can open an issue on https://github.com/perl6/doc/issues ?

[03:02] <kjk> ok @AlexDaniel, I'll just say document this trap in the issue

[03:02] <AlexDaniel`> kjk: yes

[03:02] *** Cabanossi joined
[03:03] *** Sgeo_ left
[03:05] *** TimToady left
[03:07] *** TimToady joined
[03:10] *** wander joined
[03:11] <wander> how to use X<> in pod6 file

[03:11] <wander> see X¬´Blocks and Lambdas|syntax,->¬ª but don't know what it means

[03:12] <wander> it said the form is X<if|control>, while I can't figure it out

[03:14] *** lustlife joined
[03:15] <geekosaur> before | is the text rendered at th epoint of use, after is the index entry to link to

[03:15] <geekosaur> http://design.perl6.org/S26.html#Indexing_terms (I think for pod6 currently that's the best doc we have :/ )

[03:16] <wander> ty

[03:22] <AlexDaniel`> kjk: thanks!

[03:24] *** mr-foobar left
[03:24] <kjk> cool, good night

[03:24] *** kjk left
[03:24] *** mr-foobar joined
[03:26] *** itaipu left
[03:31] *** Cabanossi left
[03:32] *** Cabanossi joined
[03:34] *** lustlife left
[03:44] *** Cabanossi left
[03:46] *** Cabanossi joined
[03:47] *** ryn1x left
[03:54] *** mr-foobar left
[03:57] *** mr-foobar joined
[04:05] *** wander left
[04:14] *** releasable6 left
[04:14] *** releasable6 joined
[04:14] *** ChanServ sets mode: +v releasable6

[04:23] *** mson left
[04:24] *** mr-foobar left
[04:28] *** mr-foobar joined
[04:31] *** lustlife joined
[04:32] *** aborazmeh joined
[04:32] *** aborazmeh left
[04:32] *** aborazmeh joined
[04:36] *** jeromelanteri left
[04:38] *** mr-foobar left
[04:46] *** mr-foobar joined
[04:47] *** BenGoldberg left
[04:50] *** ryn1x joined
[04:52] *** ch3ck3r left
[04:52] *** llfourn joined
[04:59] *** xtreak joined
[04:59] *** Sgeo left
[05:00] *** lustlife left
[05:04] *** Sgeo joined
[05:09] *** mr-foobar left
[05:12] *** HoboWithAShotgun left
[05:14] *** mr-foobar joined
[05:14] *** rba_ left
[05:24] *** ryn1x left
[05:25] *** ryn1x joined
[05:30] *** ryn1x left
[05:31] *** skids left
[05:40] *** mr-foobar left
[05:43] *** mr-foobar joined
[05:43] *** xtreak left
[05:43] *** xtreak joined
[05:46] *** pilne left
[05:47] *** xtreak left
[05:49] *** lowbro joined
[05:49] *** lowbro left
[05:49] *** lowbro joined
[05:58] *** domidumont joined
[05:58] *** vstemen joined
[06:01] *** xtreak joined
[06:02] *** domidumont left
[06:02] *** domidumont joined
[06:10] *** mr-foobar left
[06:10] *** mingdao left
[06:12] *** mingdao joined
[06:12] *** llfourn left
[06:14] *** mr-foobar joined
[06:15] *** wamba joined
[06:24] *** Spot__ left
[06:24] *** lumimies left
[06:24] *** scott left
[06:24] *** ggherdov left
[06:26] *** jhill joined
[06:26] *** scott joined
[06:26] *** Spot__ joined
[06:26] *** ilbot3 left
[06:26] *** evalable6 left
[06:26] *** lumimies joined
[06:27] *** notbenh_ joined
[06:27] *** mrsolo joined
[06:27] *** kipd joined
[06:27] *** bloatable6 left
[06:27] *** greppable6 left
[06:27] *** notbenh left
[06:27] *** greppable6 joined
[06:27] *** bloatable6 joined
[06:28] *** vivus-ignis joined
[06:29] *** notbenh joined
[06:30] *** |oLa| joined
[06:31] *** ilbot3 joined
[06:31] *** ChanServ sets mode: +v ilbot3

[06:33] *** ryn1x joined
[06:33] *** aborazmeh left
[06:34] *** cdg joined
[06:38] *** cdg left
[06:38] *** rba joined
[06:41] *** vivus-ignis left
[06:43] *** wander joined
[06:44] <wander> m: multi sub f() { say "Hi" }; multi sub f(:$g) { say $g; }; f();

[06:44] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´(Any)‚ê§¬ª

[06:45] <wander> why it calls `multi sub f(:$g)`

[06:47] <wander> m: multi sub f() { say "Hi" }; multi sub f(:$g) { say "Hello"; }; f();

[06:47] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´Hello‚ê§¬ª

[06:47] *** evalable6 joined
[06:48] *** margeas joined
[06:50] *** darutoko joined
[06:56] *** vivus-ignis joined
[06:56] *** wander left
[07:03] *** wander joined
[07:07] *** rindolf joined
[07:08] *** ryn1x left
[07:08] *** AlexDaniel` left
[07:09] *** mr-foobar left
[07:13] *** mr-foobar joined
[07:13] <wander> ok, I find the sentence `Named parameters participate in the dispatch even if they are not provided in the call. Therefore a multi candidate with named parameters will be given precedence.'

[07:13] *** cdg joined
[07:13] *** thunktone joined
[07:17] *** cdg left
[07:17] *** vivus-ignis left
[07:19] *** vivus-ignis joined
[07:23] <wander> m: class A { multi method f(:$g) { say $g }; multi method f(:$g, :$h) { say $g ~ $h } }; A.new.f(:g('g'), :h('h'));

[07:23] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´g‚ê§¬ª

[07:24] <wander> so this one? I provide both $g and $f, but it calls the method that only use $g

[07:26] <wander> whlie

[07:26] <wander> m: multi sub f(:$g) { say $g }; multi sub f(:$g, :$h) { say $g ~ $h }; f(:g('g'), :h('h'));

[07:26] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´gh‚ê§¬ª

[07:29] *** xtreak left
[07:29] *** xtreak joined
[07:30] *** Cabanossi left
[07:30] *** ChoHag joined
[07:31] *** xtreak left
[07:31] *** Cabanossi joined
[07:31] *** xtreak joined
[07:32] *** thunktone left
[07:33] *** thunktone joined
[07:34] *** itaipu joined
[07:34] *** abraxxa joined
[07:40] *** mr-foobar left
[07:42] *** mr-foobar joined
[07:45] *** dakkar joined
[07:50] *** rba_ joined
[07:54] *** rba left
[07:58] *** patrickz joined
[07:59] *** Cabanossi left
[07:59] <atroxaper> wander: https://docs.perl6.org/language/functions#Multi-dispatch says that you have to use required named parameters. But in doesn't work too. I can't find any tests in roast for that. Probably it is a bug.

[08:01] *** Cabanossi joined
[08:03] <wander> m: class A { multi method f(:$g is required) { say $g }; multi method f(:$g is required, :$h is required) { say $g ~ $h } }; A.new.f(:g('g'), :h('h'));

[08:03] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´g‚ê§¬ª

[08:03] <wander> maybe

[08:04] <geekosaur> I think there are some known issues with that? seem to remember a few instances of things depending on order in ways they're not really supposed to, possibly as a hack to get things working initially

[08:06] <geekosaur> m: class A { multi method f(:$g!, :$h!) { say $g ~ $h }; multi method f(:$g!) { say $g }; }; A.new.f(:g('g'), :h('h')); # order dependent :(

[08:06] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´gh‚ê§¬ª

[08:08] *** rgrau joined
[08:09] <wander> well, like protoregexes use first match alternation, not longest match alternation

[08:10] <timotimo> no, they use longest token matching

[08:11] <wander> timotimo, https://gist.github.com/W4anD0eR96/db0d6d5d7b56c07c0375877237130385

[08:11] *** mr-foobar left
[08:11] *** scovit joined
[08:12] *** xtreak left
[08:12] <timotimo> interesting! let me look closer at that

[08:13] <timotimo> oh, the sigspace is not declarative, right?

[08:13] <timotimo> the default ws you get, i mean

[08:13] *** ryn1x joined
[08:13] <timotimo> so the declarative prefixes of sub and num are the same length, and so a tiebreaker has to decide which gets precedence

[08:15] *** mr-foobar joined
[08:15] *** xtreak joined
[08:16] <timotimo> hah, now i get it to fail every time, regardless of which i put first

[08:16] *** HoboWithAShotgun joined
[08:17] *** cdg joined
[08:18] <wander> don't understand declarative prefixes well, but by convert `rule' into `token', it uses longest match

[08:18] *** cdg_ joined
[08:20] <timotimo> doesn't work properly for me

[08:20] <timotimo> if i put \s+ in between things and use token, it does work

[08:21] <wander> right, i use "2-1" instead

[08:21] <jnthn> rule means to insert <.ws> in place of (non-leading) whitespace. <.ws> is not declarative, unless you override the definition

[08:21] *** cdg left
[08:21] <timotimo> yeah, i declared ws to be \s* or \s+ and that didn't help with "rule"

[08:22] *** rba joined
[08:22] *** pecastro left
[08:22] <jnthn> As for mutli-dispatch, named parameters work as constraints, not declaratively

[08:22] <timotimo> good morning jnthn :)

[08:23] <jnthn> o/ timotimo :)

[08:23] *** cdg_ left
[08:23] *** ggherdov joined
[08:24] *** rba_ left
[08:26] *** zakharyas joined
[08:27] <Geth> ¬¶ ecosystem: scovit++ created pull request #376: Add Scheduler::DRMAA

[08:27] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/376

[08:27] *** xtreak left
[08:28] <Geth> ¬¶ ecosystem: d133303171 | (Vittore F. Scolari)++ | META.list

[08:28] <Geth> ¬¶ ecosystem: Add Scheduler::DRMAA

[08:28] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/d133303171

[08:28] <Geth> ¬¶ ecosystem: 8a81ce1f3d | timo++ (committed using GitHub Web editor) | META.list

[08:28] <Geth> ¬¶ ecosystem: Merge pull request #376 from scovit/master

[08:28] <Geth> ¬¶ ecosystem: 

[08:28] <Geth> ¬¶ ecosystem: Add Scheduler::DRMAA

[08:28] <Geth> ¬¶ ecosystem: 

[08:28] <Geth> ¬¶ ecosystem: see https://github.com/scovit/Scheduler-DRMAA

[08:28] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/8a81ce1f3d

[08:29] *** rba_ joined
[08:29] *** vivus-ignis is now known as ignis__away

[08:31] *** KDr2 joined
[08:31] *** thunktone left
[08:32] <moritz> we should really update the modules guide to recommend uploading to CPAN

[08:32] *** rba left
[08:33] *** thunktone joined
[08:33] <wander> jnthn: multi-method seems odd, https://irclog.perlgeek.de/perl6/2017-10-16#i_15308827

[08:34] *** ignis__away is now known as vivus-ignis

[08:34] <tadzik> scheduler drama :o

[08:35] <wander> can't i distinguish multi-method by different numbers of named para?

[08:35] *** u-ou left
[08:36] <moritz> to first approximation, multi dispatch ignores named params

[08:36] <timotimo> it'd also be nice if something told people to put a link to the github repo page in their commit messages

[08:36] <timotimo> i find that a gigantic help

[08:37] <TEttinger> eh?

[08:37] <TEttinger> that would be a mess browsing on github

[08:37] <TEttinger> DRY etc.

[08:37] <timotimo> you think so?

[08:37] <timotimo> i find it messy to have to either type the whole url myself or copy-paste and edit parts to get to it

[08:38] <DrForr> Could you edit the boilerplate commit message to add a big ol' blinking notice?

[08:39] <timotimo> no, that's the pr message, which is "just" a comment that github has

[08:39] <timotimo> i was hoping for the message on the actual commit to have it, which github won't let us suggest anything for i don't think

[08:39] <timotimo> so if they see it in the pr template, they'll have to go back and amend the commit to include the text

[08:40] *** itaipu left
[08:40] <wander> moritz, while multi-sub can distinguish named para?

[08:40] <DrForr> Oh, I thought you meant the 'git commit' editing boilerplate, not.. right, ignore me :)

[08:40] <TEttinger> "Fixed typo. https://github.com/MyXOF/Deep-Learning-Papers-Reading-Roadmap "

[08:41] <timotimo> what?

[08:41] *** u-ou joined
[08:41] <TEttinger> putting a link in with the message

[08:41] <timotimo> https://github.com/perl6/ecosystem/commits/master - i'm talking about these commits

[08:42] <DrForr> Ah, gotcha.

[08:42] <timotimo> it's already nicer to have "Add Foo::Bar to ecosystem" compared to "Update META.list"

[08:42] <TEttinger> I don't know anything about the perl6 ecosystem. if people need to do this by hand, they won't

[08:43] <timotimo> we can do it for them, but that'd mean rebasing and force-pushing, or doing the equivalent of github pull-requests some other way

[08:43] <timotimo> anyway, the ecosystem is on the way out already

[08:44] <timotimo> but yeah, like moritz said, we should update the module guide to discuss cpan prominently. also the ecosystem repo readme should mention it

[08:47] *** nadim joined
[08:47] *** ryn1x left
[08:50] <DrForr> I assume existing modules haven't already been pushed to CPAN? I.E. I need to do this for Readline &c?

[08:51] <timotimo> yeah

[08:51] <timotimo> it's something every distro author has to do themselves

[08:52] <timotimo> https://rakudo.party/post/CPAN6-Is-Here

[08:52] *** xtreak joined
[08:55] *** robertle joined
[08:59] *** Cabanossi left
[09:01] *** Cabanossi joined
[09:10] *** mr-foobar left
[09:12] *** wander left
[09:14] *** mr-foobar joined
[09:16] *** cdg joined
[09:17] *** cdg_ joined
[09:18] *** rgrau left
[09:21] *** cdg left
[09:22] *** cdg_ left
[09:23] *** itaylor57 joined
[09:26] *** itaylor57 left
[09:31] *** pecastro joined
[09:38] *** itaylor57 joined
[09:39] <HoboWithAShotgun> .tell DrForr On the site for Perl6Tidy (https://github.com/drforr/perl6-Perl6-Tidy) you claim it could be installed by zef, but it isn't in the eco system (https://modules.perl6.org/search/?q=tidy). 

[09:39] <yoleaux> HoboWithAShotgun: I'll pass your message to DrForr.

[09:40] *** mr-foobar left
[09:41] *** mr-foobar joined
[09:53] *** ryn1x joined
[09:59] *** Cabanossi left
[10:01] *** Cabanossi joined
[10:02] <timotimo> HoboWithAShotgun: you can git clone and zef install .

[10:02] *** wamba left
[10:07] *** wander joined
[10:09] *** mr-foobar left
[10:09] <wander> .tell wander test how yoleaux works

[10:09] <yoleaux> wander: Talking to yourself is the first sign of madness.

[10:10] <wander> lol

[10:10] *** itaylor57 left
[10:11] *** vivus-ignis left
[10:14] *** mr-foobar joined
[10:14] *** itaylor57 joined
[10:19] *** vivus-ignis joined
[10:27] *** ryn1x left
[10:31] *** jonas1 joined
[10:35] *** ryn1x joined
[10:39] *** ryn1x left
[10:40] *** KDr2 left
[10:40] *** itaipu joined
[10:40] *** mr-foobar left
[10:44] *** mr-foobar joined
[10:59] *** Cabanossi left
[11:01] *** wamba joined
[11:01] *** Cabanossi joined
[11:07] *** thunktone left
[11:08] *** thunktone joined
[11:09] *** vivus-ignis is now known as ignis__away

[11:09] *** ignis__away is now known as vivus-ignis

[11:10] *** ryn1x joined
[11:10] *** mr-foobar left
[11:12] *** mr-foobar joined
[11:13] *** atroxaper left
[11:16] <HoboWithAShotgun> m: sub in { my $p = Supplier::Preserving.new; start for 1 .. 10 { .say; $p.emit($_); }; }; react whenever in() { ">$_".say; }

[11:16] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´1‚ê§Use of Nil in string context‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§>         ‚ê§  in block  at <tmp> line 1‚ê§Use of Nil in string context‚ê§  in block  at <tmp> line 1‚ê§Use of Nil in string context‚ê§  in block  at <tmp> line 1‚ê§Use of Nil in ‚Ä¶¬ª

[11:17] <HoboWithAShotgun> what the heck am i missing here?

[11:23] <lizmat> HoboWithAShotgun: add $p at the end of sub in()  .  You're not returning the supply  :-)

[11:23] <lizmat> m: sub in { my $p = Supplier::Preserving.new; start for 1 .. 10 { .say; $p.emit($_); }; $p }; react whenever in() { ">$_".say; };

[11:23] <moritz> whenever in() ?

[11:23] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´(timeout)1‚ê§¬ª

[11:24] <moritz> shouldn't that be whenever in($seconds) ?

[11:25] <gfldex> m: my $p = Supplier::Preserving.new; start for ^10 { $p.emit($_); }; react { whenever $p { $_.say; }; whenever Promise.in(2) { done } };

[11:25] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§¬ª

[11:30] *** xtreak left
[11:30] <timotimo> it'd be a good idea to "done" the supplier when all values have been emitted

[11:30] <timotimo> also, best to return $p.Supply rather than $p itself

[11:31] <timotimo> moritz: no connection between sub in and Promise.in

[11:32] *** ryn1x left
[11:32] <timotimo> m: sub in { my $p = Supplier::Preserving.new; start { for 1 .. 10 { .say; $p.emit($_); }; $p.done }; $p.Supply }; react whenever in() { ">$_".say; }

[11:32] <camelia> rakudo-moar e52c8affa: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§>1‚ê§>2‚ê§>3‚ê§>4‚ê§>5‚ê§>6‚ê§>7‚ê§>8‚ê§>9‚ê§>10‚ê§¬ª

[11:32] <timotimo> HoboWithAShotgun: ^

[11:32] <timotimo> this simple case is best done using a supply block, though, IMO.

[11:33] *** xtreak joined
[11:34] *** zakharyas left
[11:36] *** xtreak left
[11:39] *** xtreak joined
[11:39] *** okl joined
[11:40] *** vivus-ignis is now known as ignis__away

[11:41] *** mr-foobar left
[11:42] *** mr-foobar joined
[11:43] *** thunktone left
[11:43] *** wamba left
[11:43] *** scovit left
[11:44] *** thunktone joined
[11:45] *** wamba joined
[11:47] *** ignis__away is now known as vivus-ignis

[11:48] *** okl left
[11:49] *** raschipi joined
[11:50] *** ryn1x joined
[11:52] *** domidumont left
[11:54] *** domidumont joined
[11:55] *** ryn1x left
[12:00] *** Cabanossi left
[12:01] *** Cabanossi joined
[12:08] <raschipi> \/win 26

[12:09] *** void1 joined
[12:09] *** void1 left
[12:09] *** void1 joined
[12:10] *** wamba left
[12:18] *** pmurias joined
[12:19] *** Ven joined
[12:19] *** Ven is now known as Guest23284

[12:21] *** xtreak left
[12:22] *** ryn1x joined
[12:22] *** ZofBot left
[12:22] *** ZofBot joined
[12:22] *** ChanServ sets mode: +v ZofBot

[12:23] *** ShalokShalom_ joined
[12:23] *** ZofBot left
[12:25] *** ShalokShalom left
[12:26] *** ryn1x left
[12:28] *** mson joined
[12:30] *** HoboWithAShotgun left
[12:32] *** domidumont left
[12:33] *** domidumont joined
[12:34] *** ZofBot joined
[12:34] *** ChanServ sets mode: +v ZofBot

[12:34] *** ZofBot left
[12:39] *** ZofBot joined
[12:39] *** ChanServ sets mode: +v ZofBot

[12:39] *** ZofBot left
[12:40] *** ZofBot joined
[12:40] *** ChanServ sets mode: +v ZofBot

[12:40] *** perlpilot joined
[12:41] *** Guest23284 left
[12:41] *** mr-foobar left
[12:41] *** lustlife joined
[12:42] *** ZofBot left
[12:43] *** mr-foobar joined
[12:44] *** ZofBot joined
[12:44] *** ChanServ sets mode: +v ZofBot

[12:44] *** ZofBot left
[12:47] *** ZofBot joined
[12:47] *** ChanServ sets mode: +v ZofBot

[12:47] *** ZofBot left
[12:48] *** cdg joined
[12:48] *** ZofBot joined
[12:48] *** ChanServ sets mode: +v ZofBot

[12:48] *** ZofBot left
[12:49] *** ZofBot joined
[12:49] *** ChanServ sets mode: +v ZofBot

[12:49] *** ZofBot left
[12:51] *** ZofBot joined
[12:51] *** ChanServ sets mode: +v ZofBot

[12:51] *** ZofBot left
[12:52] *** thunktone left
[12:52] *** wamba joined
[12:55] *** ZofBot joined
[12:55] *** ChanServ sets mode: +v ZofBot

[12:56] *** thunktone joined
[12:56] *** Ven joined
[12:56] *** void1 left
[12:56] *** Ven is now known as Guest98574

[12:59] *** ryn1x joined
[12:59] *** Cabanossi left
[13:00] *** lustlife` joined
[13:00] *** ZofBot_ joined
[13:00] *** ChanServ sets mode: +v ZofBot_

[13:01] *** lustlife left
[13:01] *** ZofBot_ left
[13:01] *** ZofBot left
[13:01] *** Cabanossi joined
[13:02] *** ZofBot joined
[13:02] *** ChanServ sets mode: +v ZofBot

[13:03] *** zakharyas joined
[13:05] *** mcmillhj joined
[13:06] *** Guest98574 left
[13:12] *** mmcclimon left
[13:12] *** Sgeo left
[13:12] *** pecastro left
[13:16] *** lustlife` left
[13:22] *** thunktone left
[13:24] *** pecastro joined
[13:24] *** vivus-ignis is now known as ignis__away

[13:24] *** thunktone joined
[13:26] *** darkmorph joined
[13:30] *** Aaronepower left
[13:30] *** mempko joined
[13:31] *** ryn1x left
[13:34] *** lustlife joined
[13:37] *** thunktone left
[13:38] <Geth> ¬¶ doc: gfldex++ created pull request #1609: doc Supplier::Preserving

[13:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1609

[13:38] *** thunktone joined
[13:41] *** mr-foobar left
[13:44] *** mr-foobar joined
[13:45] *** ignis__away is now known as vivus-ignis

[13:47] <Geth> ¬¶ doc: 524851f5a0 | (Wenzel P. P. Peppmeyer)++ (committed by Zoffix Znet) | doc/Type/Supplier/Preserving.pod6

[13:47] <Geth> ¬¶ doc: doc Supplier::Preserving (#1609)

[13:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/524851f5a0

[13:47] <synopsebot> Link: https://doc.perl6.org/type/Supplier/Preserving

[13:52] <timotimo> if there's ever a cro-redux integration module it'll surely be called Crodux

[13:53] *** wamba left
[13:56] <raschipi> timotimo: better squat the namespace now, haha

[13:56] *** vivus-ignis is now known as ignis__away

[13:56] <timotimo> http://crod.ux/

[13:58] *** rba_ left
[14:00] *** rba joined
[14:02] *** ignis__away is now known as vivus-ignis

[14:08] *** skids joined
[14:12] *** mr-foobar left
[14:13] *** mr-foobar joined
[14:15] *** lustlife left
[14:17] *** atroxaper joined
[14:18] *** ZofBot left
[14:19] *** ZofBot joined
[14:19] *** ryn1x joined
[14:19] *** ChanServ sets mode: +v ZofBot

[14:20] *** ZofBot left
[14:21] *** ZofBot joined
[14:21] *** ChanServ sets mode: +v ZofBot

[14:23] *** ryn1x left
[14:30] *** Cabanossi left
[14:31] *** kerframil joined
[14:31] *** Cabanossi joined
[14:31] <buggable> New CPAN upload: Grammar-ErrorReporting-0.2.tar.gz by MORITZ https://cpan.metacpan.org/authors/id/M/MO/MORITZ/Perl6/Grammar-ErrorReporting-0.2.tar.gz

[14:32] <[Coke]> .tell zoffix Thanks for Proc::Q, it's basically exactly what I needed to build.

[14:32] <yoleaux> [Coke]: I'll pass your message to zoffix.

[14:32] *** lowbro left
[14:32] *** mcmillhj left
[14:35] <[Coke]> also jnthn++ for all the plumbing and for reminding me to check the ecosystem. :)

[14:35] *** mcmillhj joined
[14:39] *** vivus-ignis is now known as ignis__away

[14:42] *** mr-foobar left
[14:42] *** ignis__away is now known as vivus-ignis

[14:45] *** Ven joined
[14:45] *** Ven is now known as Guest84089

[14:46] *** mr-foobar joined
[14:46] *** mempko left
[14:50] *** ryn1x joined
[14:56] *** xi- is now known as xi\

[14:56] *** xi\ is now known as \xi

[14:56] *** wander left
[15:01] *** pmurias left
[15:22] *** HoboWithAShotgun joined
[15:24] *** ryn1x left
[15:26] *** mempko joined
[15:29] *** Cabanossi left
[15:30] *** domidumont left
[15:30] *** rba left
[15:31] *** Cabanossi joined
[15:35] *** rba joined
[15:42] *** mr-foobar left
[15:43] *** eliasr joined
[15:43] *** mr-foobar joined
[15:46] *** wamba joined
[15:54] *** zakharyas left
[15:54] *** bitrauser_ left
[15:55] *** abraxxa left
[15:59] *** robertle left
[16:00] *** HoboWithAShotgun left
[16:00] *** [particle] left
[16:00] *** Cabanossi left
[16:00] *** Zoffix joined
[16:00] <Zoffix> m: class Foo {‚Ä¶}; class Bar { method y($o) { $o!Foo::z } }; class Foo { trusts Bar; method !z {}}; Bar.new.y: Foo.new

[16:00] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot call private method 'z' on package Foo because it does not trust Bar‚ê§at <tmp>:1‚ê§------> 3‚Ä¶}; class Bar { method y($o) { $o!Foo::z7‚èè5 } }; class Foo { trusts Bar; method !z ‚ê§    expe‚Ä¶¬ª

[16:00] <Zoffix> Do we have a way of making this work? 

[16:01] <Zoffix> Seems `trusts` ain't working when you got a stub first

[16:01] *** Cabanossi joined
[16:02] <jnthn> m: class Bar { ... }; class Foo { trusts Bar; method !z {}}; class Bar { method y($o) { $o!Foo::z } }; Bar.new.y: Foo.new

[16:02] <camelia> rakudo-moar d6a9edacf: ( no output )

[16:03] <jnthn> I think it's 'cus of one-pass parsing

[16:03] <jnthn> Well, and it doing the checking at the point it sees the call

[16:03] <Zoffix> Ah

[16:05] *** ryn1x joined
[16:08] <Zoffix> m: class Foo {‚Ä¶}; class Bar {‚Ä¶}; BEGIN Foo.^add_trustee: Bar; class Bar { method y($o) { $o!Foo::z } }; class Foo { method !z { say "in it" }}; Bar.new.y: Foo.new

[16:08] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´in it‚ê§¬ª

[16:08] <Zoffix> :P

[16:09] <Zoffix> ZofBot: ‚ô´ these chains ain't gonna hold me ‚ô´

[16:09] *** ryn1x left
[16:10] *** cdg_ joined
[16:10] <Zoffix> So looks like `trusts` trait is just missing from grammar: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Grammar.nqp#L3304-L3322

[16:11] <Zoffix> And if that's fixed, then `class Bar {‚Ä¶}; class Foo trusts Bar {‚Ä¶}; ....` will prolly work

[16:11] <Zoffix> |5d4h check out trusts stuff https://github.com/rakudo/rakudo/blob/d6a9edacf/src/Perl6/Grammar.nqp#L3304-L3322

[16:11] <ZofBot> Zoffix, Will remind you on 2017-10-21T16:11:52.499374-04:00 about check out trusts stuff https://github.com/rakudo/rakudo/blob/d6a9edacf/src/Perl6/Grammar.nqp#L3304-L3322

[16:12] *** cdg left
[16:14] *** ShalokShalom_ is now known as ShalokShalom

[16:14] *** wamba left
[16:16] *** Guest84089 left
[16:18] *** Ven joined
[16:19] *** Ven is now known as Guest49263

[16:19] *** nadim left
[16:20] *** domidumont joined
[16:22] <Geth> ¬¶ doc: ab366f63b3 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/concurrency.pod6

[16:22] <Geth> ¬¶ doc: Remove confusing sentence part

[16:22] <Geth> ¬¶ doc: 

[16:22] <Geth> ¬¶ doc: "Or alternatively..." alternatively to what? Previous para talks

[16:22] <Geth> ¬¶ doc: about creating live supplies and para before that already

[16:22] <Geth> ¬¶ doc: differentiates between two kinds of supplies.

[16:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ab366f63b3

[16:22] <synopsebot> Link: https://doc.perl6.org/language/concurrency

[16:24] <Geth> ¬¶ doc: 8810a1a942 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/concurrency.pod6

[16:24] <Geth> ¬¶ doc: Add missing verb

[16:24] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8810a1a942

[16:30] *** gregf_ joined
[16:32] *** Guest49263 left
[16:35] *** dakkar left
[16:36] *** Halldor joined
[16:37] *** vivus-ignis is now known as ignis__away

[16:37] *** Ven joined
[16:38] *** Ven is now known as Guest48109

[16:38] *** ignis__away is now known as vivus-ignis

[16:40] <Halldor> Hi. The code examples on the perl6 website (eg http://examples.perl6.org/categories/best-of-rosettacode/24-game.html) are buggy. All instances where a bare word is in angle bracket (<exp> in a regexp) does not  show up in the webpage, since the html in browser eats it up.

[16:41] <Zoffix> oops :)

[16:42] <Halldor> Looking at the html source we see the <exp> words are there. Thanks for all your work.

[16:42] <Halldor> Over and out.

[16:43] *** rba_ joined
[16:43] *** Halldor left
[16:44] <timotimo> ouchies! :)

[16:44] *** HoboWithAShotgun joined
[16:46] *** atroxaper left
[16:46] *** rba left
[16:47] *** ryn1x joined
[16:47] *** jonas1 left
[16:49] *** robertle joined
[16:54] *** rba_ left
[16:55] *** rba joined
[16:55] <Geth> ¬¶ perl6-examples: 00cac09228 | (Zoffix Znet)++ | 2 files

[16:55] <Geth> ¬¶ perl6-examples: Escape HTML when we're not highlighting code

[16:55] <Geth> ¬¶ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/00cac09228

[16:56] *** kyan joined
[16:58] * Zoffix sacrifices a goat to coding gods

[16:58] <Zoffix> K. That should do it.

[16:58] <Zoffix> If it doesn't... use more goats.

[16:59] *** rba left
[17:00] <[Coke]> mmm, goat.

[17:00] *** raschipi left
[17:01] <Zoffix> that thing builds a whole 'nuther rakudo on each change to repo? :o

[17:01] *** Guest48109 left
[17:06] *** raschipi joined
[17:09] *** [particle] joined
[17:10] <Geth> ¬¶ perl6-examples: 534ff9a24b | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[17:10] <Geth> ¬¶ perl6-examples: Remove mention of panda

[17:10] <Geth> ¬¶ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/534ff9a24b

[17:12] *** zakharyas joined
[17:13] <Geth> ¬¶ perl6-examples: 8c0d0e1a6f | (Zoffix Znet)++ (committed using GitHub Web editor) | util/update-and-sync

[17:13] <Geth> ¬¶ perl6-examples: Don't build a new rakudo each time

[17:13] <Geth> ¬¶ perl6-examples: 

[17:13] <Geth> ¬¶ perl6-examples: Use the one we use for everything instead

[17:13] <Geth> ¬¶ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/8c0d0e1a6f

[17:19] <Geth> ¬¶ perl6-examples: e5f39bbde5 | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[17:19] <Geth> ¬¶ perl6-examples: Link to chat

[17:19] <Geth> ¬¶ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/e5f39bbde5

[17:20] *** Rawriful joined
[17:21] *** ryn1x left
[17:24] *** HoboWithAShotgun left
[17:25] <Geth> ¬¶ perl6-examples: d570b0f2b1 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[17:25] <Geth> ¬¶ perl6-examples: Fix broken JSON

[17:25] <Geth> ¬¶ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/d570b0f2b1

[17:29] *** raschipi left
[17:38] <Zoffix> k, I think it worked...

[17:38] * Zoffix is only 97% sure auto-build is working, tho

[17:39] <Zoffix> Site wasn't updating and build log said it was done, then I went inside and tried to find html files manually but there was nothing and then I ran `make html` manually and *while it was running* site got updated

[17:39] <Zoffix> So I'm not following wth happened there, but I think it should be working OK

[17:40] <Zoffix> And markup is working now \\o/

[17:40] * Zoffix flies away into the horizon

[17:40] *** Zoffix left
[17:44] *** mr-foobar left
[17:45] *** domidumont left
[17:45] *** mr-foobar joined
[17:46] *** kyan left
[17:47] *** domidumont joined
[17:47] *** HoboWithAShotgun joined
[17:51] *** kyan joined
[17:53] *** kyan left
[17:57] *** ryn1x joined
[17:58] *** wamba joined
[18:01] *** ryn1x left
[18:12] *** mr-foobar left
[18:12] *** espadrine joined
[18:14] *** napo1eon joined
[18:14] *** Cabanossi left
[18:15] *** cdg joined
[18:15] *** mr-foobar joined
[18:16] *** patrickz left
[18:16] *** Cabanossi joined
[18:18] *** darutoko left
[18:19] *** cdg_ left
[18:19] *** cdg left
[18:25] *** zakharyas left
[18:27] *** bitrauser joined
[18:29] *** ryn1x joined
[18:30] *** vivus-ignis is now known as ignis__away

[18:33] *** AlexDaniel` joined
[18:42] *** ignis__away is now known as vivus-ignis

[18:44] *** mr-foobar left
[18:46] *** vivus-ignis left
[18:47] *** mr-foobar joined
[18:53] *** domidumont left
[18:55] *** vivus-ignis joined
[18:58] *** Ven joined
[18:58] *** Ven is now known as Guest97114

[18:59] <[Coke]> I am tempted to rewrite all of xt/ with Proc::Q. :)

[18:59] <[Coke]> (for perl6-docs)

[19:00] * lizmat starts on the P6W

[19:00] <lizmat> let me know if you think I'm about to miss something

[19:02] *** ryn1x left
[19:03] *** vivus-ignis left
[19:06] <AlexDaniel`> .

[19:06] <AlexDaniel> .

[19:06] <AlexDaniel`> lizmat: there were some notes in .tell, not sure if you noticed

[19:06] <lizmat> yeah, I noticed  :-)

[19:08] *** AlexDaniel` is now known as fwiw

[19:08] <fwiw> .

[19:08] <yoleaux> 14 Oct 2017 03:44Z <AlexDaniel-> fwiw: RT #132292. IMO it's blocker-worthy, but not marking it as such just yet. What do you think?

[19:08] <synopsebot> RT#132292 [open]: https://rt.perl.org/Ticket/Display.html?id=132292 Recursively .emit-ing from the tap of the same supply bails out

[19:08] *** fwiw is now known as AlexDaniel`

[19:08] *** Guest97114 left
[19:10] <El_Che> lizmat: I almost had news for the P6W: I almost had alpine pkgs for a small rakudo footprint. Got around the FPM Ruby prob when building the packages, but I hit an an other bug (I reported upstream)

[19:11] <El_Che> you can't win :)

[19:11] *** hoffentlichja joined
[19:12] <AlexDaniel`> you can, just not this week :)

[19:12] *** mr-foobar left
[19:13] <AlexDaniel`> (and a half-win is a worthy mention anyway I think)

[19:13] <El_Che> nah, half of nothing is still nothing

[19:13] <El_Che> we'll get there

[19:14] *** raschipi joined
[19:14] *** Zoffix joined
[19:15] *** mr-foobar joined
[19:17] *** mson left
[19:21] <Zoffix> Is there a way to somehow signal to the channel or supply that when a value is received it should just close it? Basically, I got a setup like this currently: https://github.com/zoffixznet/perl6-Reminders#synopsis A react block just recieves values and my object has a marker that signals when all the values were *sent*. But that has a race and the marker triggers end of react if all the stuff is sent before

[19:21] <Zoffix> previous stuff got received: https://github.com/zoffixznet/perl6-Reminders/blob/master/lib/Reminders.pm6#L45-L48

[19:22] <Zoffix> One thing I can think of is having a `.close` method on my object that will send some dummy value down the Supply or Channel and the receiver of it can be done based on that, but that's kinda iffy, since in some usecases the user may not want to look for dummy value

[19:23] <Zoffix> Basically, I need a way to Channel.close or Supply.done but for that to trigger only when all the current values chave been consumed.

[19:23] <Zoffix> hmm

[19:23] * Zoffix hackety hacks a bit

[19:24] <lizmat> El_Che: looking forward to being able to report success

[19:25] <lizmat> Zoffix: this feels similar to the issue with iterators signalling that they're done

[19:25] <lizmat> create a Mu.new, send that raw and then do an =!= to check if it's done?

[19:26] <Zoffix> The user would need to check that tho, no?

[19:26] <Zoffix> I don't want the user to do that

[19:27] <Zoffix> It'd normally work this way, but I got Promises future-sending values. I think I got it though: add marker to future-done in those cases

[19:27] * Zoffix compiles and runs

[19:28] <El_Che> "Zoffix complies and runs" sounds cooler

[19:28] <El_Che> :)

[19:29] <raschipi> Run, Zoffix, run!

[19:30] <Zoffix> Yeah, this seems to do that I want it to: https://github.com/zoffixznet/perl6-Reminders/commit/13cf8cdb1b0c8431cf262927e3d06a3e4ff7c0d2

[19:30] *** kurahaupo joined
[19:31] *** vivus-ignis joined
[19:31] <Zoffix> ... after the race is fixed :)

[19:31] * El_Che puts "Small Town Boy" by Bronski Beat on the turn table

[19:31] *** itaipu left
[19:32] <lizmat> Zoffix: how can I check new CPAN uploads of the past week ?

[19:33] <Zoffix> ummm.. there's no easy way yet

[19:33] *** kurahaupo left
[19:35] <Zoffix> c: use lib <data/all-modules/zoffixznet/perl6-WWW>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN upload")¬ª.say }

[19:35] <committable6> Zoffix, ¬¶use: ¬´Cannot find this revision (did you mean ‚Äúall‚Äù?)¬ª

[19:35] *** Util left
[19:35] <Zoffix> c: HEAD use lib <data/all-modules/zoffixznet/perl6-WWW>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN upload")¬ª.say }

[19:35] <committable6> Zoffix, https://gist.github.com/93ea03eff4d0334e98136faaae3c9ebe

[19:35] <AlexDaniel`> ehhh it changed

[19:35] *** dalek left
[19:35] <AlexDaniel`> data/github/all-modules I think

[19:36] <AlexDaniel`> c: HEAD use lib <data/all-modules/github/zoffixznet/perl6-WWW>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN upload")¬ª.say }

[19:36] <committable6> AlexDaniel`, https://gist.github.com/61b9682ed15319c4e3948780c268ccba

[19:36] <AlexDaniel`> or that

[19:37] <AlexDaniel`> c: HEAD use lib <data/all-modules/github/zoffixznet/perl6-WWW>; use lib <data/all-modules/cpan/TIMOTIMO/JSON-Fast/lib>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN upload")¬ª.say }

[19:37] <committable6> AlexDaniel`, https://gist.github.com/1d077332721b10878e532746696d3f05

[19:37] <AlexDaniel`> oh goddamit

[19:37] <AlexDaniel`> c: HEAD use lib <data/all-modules/github/zoffixznet/perl6-WWW>; use lib <data/all-modules/cpan/TIMOTIMO/JSON-Fast/lib>; use lib <data/all-modules/github/sergot/http-useragent/lib>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN upload")¬ª.say }

[19:37] <committable6> AlexDaniel`, https://gist.github.com/5d67ed586ec32bba44c0fddf74c5c320

[19:38] <AlexDaniel`> c: HEAD use lib <data/all-modules/github/zoffixznet/perl6-WWW>; use lib <data/all-modules/cpan/TIMOTIMO/JSON-Fast/lib>; use lib <data/all-modules/github/sergot/http-useragent/lib>; use lib <data/all-modules/github/sergot/perl6-encode/lib>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN upload")¬ª.say }

[19:38] <committable6> AlexDaniel`, https://gist.github.com/d0581c276c7bcdb788d2b1183e8c5392

[19:38] <AlexDaniel`> ‚Ä¶ are you kidding me?

[19:39] <Zoffix> lizmat: here's the list for past 7 days, if it's helpful: https://gist.github.com/zoffixznet/3d64648f97b3e470d45012f009a4740f

[19:39] <Zoffix> Eventually, modules.perl6.org/recent would show this stuff

[19:39] <AlexDaniel`> c: HEAD use lib <data/all-modules/github/zoffixznet/perl6-WWW>; use lib <data/all-modules/cpan/TIMOTIMO/JSON-Fast/lib>; use lib <data/all-modules/github/sergot/http-useragent/lib>; use lib <data/all-modules/github/sergot/perl6-encode/lib>; use lib <data/all-modules/github/supernovus/perl6-http-status/lib>; use WWW; for (^7+9)¬ª.fmt: "%02d" -> { "https://irclog.perlgeek.de/perl6/2017-10-$_/text".&get.lines.grep(.contains: "New CPAN

[19:39] <AlexDaniel`> upload")¬ª.say }

[19:39] <committable6> AlexDaniel`, https://gist.github.com/e4512a26d854c1f9ec785695aeeb347c

[19:39] <AlexDaniel`> and now it no longer fits in one message :D

[19:39] <Zoffix> lizmat: I guess you need links to ecosystem. 1 sec

[19:41] <AlexDaniel`> Zoffix: fwiw, it's probably much easier to just run ‚Äòcurl‚Äô

[19:41] *** releasable6 left
[19:41] *** releasable6 joined
[19:41] *** ChanServ sets mode: +v releasable6

[19:43] *** mempko left
[19:44] *** ryn1x joined
[19:49] *** ryn1x left
[19:50] <Zoffix> uuhh

[19:50] <Zoffix> Gotta relocate 

[19:51] <Zoffix> This is what I had. Just need to make it compile and make urls poiting to https://modules.perl6.org/dist/$name:cpan     https://gist.github.com/zoffixznet/9b097d49deba0a115a80e5277e730d12

[19:51] <Zoffix> where $name is the name of the dist without `-$version` part (and possibly with replacing dashes by colons)

[19:51] * Zoffix &

[19:52] <Zoffix> It's probably faster to implement /recent route on modules.perl6.org :P

[19:52] *** patrickz joined
[19:56] *** hoffentlichja left
[20:03] <HoboWithAShotgun> m: sub x { return my $foo if $foo = 1; }; say x

[20:03] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´1‚ê§¬ª

[20:04] *** raschipi left
[20:06] <HoboWithAShotgun> interesting, that doesn't work at all in perl 5

[20:06] <HoboWithAShotgun> but why do i have to put the my on the return? i mean, logically the if comes first

[20:07] <perigrin> my $foo if ... is I believe officially undefined in perl5

[20:08] <perigrin> since like 5.10 or something

[20:08] *** pierrot left
[20:08] *** pierrot joined
[20:09] <HoboWithAShotgun> i have 5.22 and i "get requires explicit package name" errors either way

[20:09] <Zoffix> HoboWithAShotgun: only once executed, while compiling, the first one is first. The if is a statement modifier

[20:10] *** kybr left
[20:10] <Zoffix> constant x = say 42 if 0

[20:11] <Zoffix> m: constant x = say 42 if 0

[20:11] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´42‚ê§¬ª

[20:11] *** kybr joined
[20:12] *** mson joined
[20:12] *** vivus-ignis left
[20:12] <perigrin> HoboWithAShotgun: see the note in http://perldoc.perl.org/perlsyn.html#Statement-Modifiers

[20:12] <perigrin> "The behaviour of a my, state, or our modified with a statement modifier conditional or loop construct (for example, my $x if ... ) is undefined."

[20:13] <Zoffix> Actually, instead of parsing logs, we can just use JSON from modules site

[20:14] <Zoffix> it doesn't tell which dists are new tho, I don't think; onpy last updated

[20:17] *** cdg joined
[20:18] *** lancew joined
[20:18] *** ryn1x joined
[20:20] *** skrshn joined
[20:21] * Zoffix gives up on this

[20:21] *** Zoffix left
[20:22] *** skrshn left
[20:25] <lizmat> Zoffif++  # looking into it

[20:26] <lizmat> I'll figure out something :-)

[20:26] *** Tim_ joined
[20:27] <patrickz> Hi everyone!

[20:28] <HoboWithAShotgun> perigrin: better to avoid such a construct then ;)#

[20:28] <perigrin>  quite :)

[20:29] <patrickz> Is it possible with NativeCall to pass a perl6 function as a callback to a C function? (So the C code can call back into my perl6 code.)

[20:30] <HoboWithAShotgun> yes, i remember that having been explicitly said in a talk i watched online

[20:30] *** cdg_ joined
[20:31] <HoboWithAShotgun> but don't ask ME how ^^

[20:31] *** Geth left
[20:32] *** thunktone left
[20:32] *** ryn1x_ joined
[20:33] *** Ven joined
[20:34] *** cdg left
[20:34] *** Ven is now known as Guest35881

[20:34] <ryn1x_> Is there a limit to how large of an array can be dynamically allocated, besided system limits? I am getting: > my @img = slurp "img2.tif", :bin    Unable to allocate an array of 16781312 elements

[20:36] <lizmat> ryn1x_: could you gist a stacktrace with --ll-exception ?

[20:36] <AlexDaniel`> and how much memory do you have?

[20:37] <ryn1x_> AlexDaniel: 128GB on this box. File is only 16MB

[20:37] <AlexDaniel`> very nice box you have there :)

[20:37] <lizmat> 128G RAM ?

[20:37] *** TimToady left
[20:37] *** robertle left
[20:38] <ryn1x_> lizmat: yes, 128GB. Let my try to get a stacktrace. I haven't done that with perl6 before.

[20:38] <lizmat> add "--ll-exception' as a parameter  :-)

[20:39] * AlexDaniel` https://xkcd.com/859/ ' "

[20:39] *** TimToady joined
[20:40] <lizmat> "

[20:40] <lizmat> hope that helps  :-)

[20:41] <HoboWithAShotgun> maybe that's the problem. too much ram, something overflows and perl thinks wrongly about how much memory it has

[20:42] <HoboWithAShotgun> but then, they wouldn't repeat microsofts mistakes, would they√ü

[20:44] *** rindolf left
[20:44] <ryn1x_> Yeah this is a work computer and unfortunately it is a windows box. Our typical setup is 128-256GB of RAM.

[20:44] *** wamba left
[20:45] <ryn1x_> :lizmat waiting for a stacktrace now... the repl freezes for a while trying to read in the file...

[20:45] <lizmat> ryn1x_: weird, slurping a 16MB should be less than a second

[20:47] <ryn1x_> :lizmat just un-froze. I am running the repl with the --ll-exception flag and did not get a stacktrace. Just this message again: Unable to allocate an array of 16781312 elements

[20:49] *** ryn1x left
[20:50] <ryn1x_> Guess my home laptop went to sleep ha.

[20:51] *** natedev joined
[20:53] <lizmat> ryn1x_: can you try running it outside of the REPL ?

[20:54] <ryn1x_> :lizmat ok 1 sec. I am also installing Rakudo Star on another box to try that out too.

[20:55] *** Guest35881 left
[20:57] <ryn1x_> :lizmat looks like it might be doing the same thing... terminal is waiting...

[20:58] <lizmat> feels to me something weird is going on there.  Is the code you run just the slurp()  or is there more?

[20:59] *** nadim joined
[20:59] <ryn1x_> just slurp. I put it in a sub MAIN but I can pull it out to the top level... nothing else in the file

[21:04] <lizmat> to get some metrics: slutping a 16MB file into a scalar takes 1.7 seconds for me, memory usage goes up to about 350 MB

[21:04] *** natedev left
[21:04] <lizmat> *slurping

[21:04] * jnthn just did slurp with :bin of a 450 MB file

[21:05] <jnthn> (And it worked out)

[21:05] <jnthn> So not sure hwat's going on...16MB is pretty tiny

[21:05] * AlexDaniel` used to slurp and spurt half-G files a lot

[21:05] <ryn1x_> lizmat: it is working now. I put it in a file all alone and it ran instantly. Then added a say $img and it froze forezer. Then changed to say[0] and it printed the first value. Maybe the repl errors because it tries to print the large array after it is slurped?

[21:05] <jnthn> Ah, it's probably that

[21:05] <jnthn> Trying to nicely format it

[21:05] <jnthn> m: say Buf.new(1,2,3)

[21:05] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´Buf:0x<01 02 03>‚ê§¬ª

[21:05] <jnthn> Like that

[21:06] <jnthn> :)

[21:06] * jnthn afk for a bit

[21:06] <AlexDaniel`> if it's the .gist that does that, then it should be smarter

[21:07] <lizmat> hmnmm... but a gist should limit to 100 elements

[21:08] <lizmat> ryn1x_: are you slurping with :bin ?

[21:08] <ryn1x_> lizmat: yes. 

[21:09] <lizmat> hmmm

[21:09] <lizmat> nothing comes to mind atm  :-(

[21:09] <lizmat> but then I'm also writing the P6W atm

[21:11] *** rindolf joined
[21:11] <AlexDaniel`> ryn1x_: maybe submit a ticket so that it doesn't fall through the cracks?

[21:14] *** skids left
[21:16] *** rba joined
[21:18] <gfldex> Geth: are you alright mate?

[21:20] *** rindolf left
[21:20] *** mcmillhj left
[21:22] <ryn1x_> :AlexDaniel' will do

[21:24] *** zakharyas joined
[21:27] *** mempko joined
[21:29] *** Cabanossi left
[21:31] *** Cabanossi joined
[21:33] *** Tim_ left
[21:36] *** itaylor57 left
[21:38] *** patrickz left
[21:42] *** Zoffix joined
[21:42] <Zoffix> ryn1x_: what version of rakudo are you using?

[21:42] <Zoffix> Buf.gist was already fixed like a week ago

[21:42] <Zoffix> gfldex: what repo was it meant to report?

[21:42] *** itaylor57 joined
[21:43] <Zoffix> something's wrong with it

[21:43] <gfldex> https://github.com/perl6/doc/pull/1611

[21:43] <Zoffix> oh, s/it/hack/;

[21:43] <Zoffix> can't ssh

[21:43] * Zoffix looks for other keys

[21:46] *** lancew left
[21:46] <Zoffix> uhh, it's asking me for password

[21:47] <TEttinger> "password"

[21:54] <Zoffix> (connected, just trying to see why it's unhappy)

[21:56] *** darkmorph left
[21:57] <Zoffix> no idea

[21:57] *** sergot left
[21:57] *** dalek joined
[21:57] *** ChanServ sets mode: +v dalek

[21:57] *** synopsebot_ joined
[21:57] *** ChanServ sets mode: +v synopsebot_

[21:57] *** synopsebot left
[21:58] *** SourceBaby left
[21:58] *** synopsebot_ left
[21:58] *** synopsebot joined
[21:58] *** ChanServ sets mode: +v synopsebot

[21:59] *** Geth joined
[21:59] *** ChanServ sets mode: +v Geth

[21:59] *** ryn1x joined
[21:59] <Geth> ¬¶ doc: gfldex++ created pull request #1611: link to Supplier::Preserving, fixes #1610

[21:59] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1611

[21:59] *** MasterDuke joined
[22:00] *** SourceBaby joined
[22:00] *** ChanServ sets mode: +v SourceBaby

[22:01] <Geth> ¬¶ doc: 91cd70de96 | (Wenzel P. P. Peppmeyer)++ (committed by Zoffix Znet) | 3 files

[22:01] <Geth> ¬¶ doc: link to Supplier::Preserving, fixes #1610 (#1611)

[22:01] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/91cd70de96

[22:02] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/10/16/2017-42-taking-ticketing-seriously/

[22:02] <Zoffix> wooo

[22:07] <Zoffix> lizmat++ # good weekly

[22:08] <Zoffix> "Thanks to Zoffix Znet and Aleks-Daniel Jakimenko-Aleksejev we will soon have a page".... I guess I just walked right into that :P

[22:08] <Zoffix> |5d make recent modules pages on modules.perl6.org, bruh

[22:08] <ZofBot> Zoffix, Will remind you on 2017-10-21T18:08:21.578495-04:00 about make recent modules pages on modules.perl6.org, bruh

[22:09] <ryn1x_> Zoffix: I am using 2017.07

[22:10] <Zoffix> ryn1x_: yeah, that doesn't yet have Buf.gist fix.

[22:11] <Zoffix> (if that's what the problem was about_

[22:11] <Zoffix> )

[22:11] <ryn1x_> I tried to reproduce the result on a unix laptop I have here with the same file and it has been paused at the repl for ~45mins now. Even small files, under 1MB take quite a long time to slurp when in the repl. 

[22:12] <Zoffix> Yeah, it was dog slow

[22:12] <Zoffix> c 2017.07,HEAD Buf.new(1..1000).gist; say now - INIT now

[22:13] <Zoffix> slurp itself is likely fast, just the gist is slow

[22:13] <Zoffix> c: 2017.07,HEAD Buf.new(1..1000).gist; say now - INIT now

[22:13] <committable6> Zoffix, ¬¶2017.07: ¬´0.1359061¬ª ¬¶HEAD(d6a9eda): ¬´0.0196757¬ª

[22:13] <ryn1x_> I am going home now, but I will check the laptop in the morning and see it actually printed the array after slurping or if it gives me the same "unable to allocate array of x elements" error as the windows box.

[22:14] <ryn1x_> Zoffix: I think you are right.. because it slurps instantly in a source file.

[22:14] <Zoffix> ryn1x_: there was a ticket for that; it's possible that got fixed after 2017.07 release

[22:14] <Zoffix> for allocate array on windows

[22:14] * lizmat goes to get some shuteye

[22:14] <ryn1x_> oh interesting.

[22:15] *** ryn1x_ left
[22:16] *** mempko left
[22:18] *** darkmorph joined
[22:18] <Zoffix> Can't find it.

[22:23] *** Sgeo joined
[22:25] *** Zoffix left
[22:26] <Geth> ¬¶ modules.perl6.org: 034202620c | (Zoffix Znet)++ (committed using GitHub Web editor) | use-me-for-commit-triggers

[22:26] <Geth> ¬¶ modules.perl6.org: [REBUILD] due to cpan caching bug

[22:26] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/034202620c

[22:33] *** ryn1x left
[22:36] *** hoffentlichja joined
[22:39] *** raschipi joined
[22:44] *** Cabanossi left
[22:46] *** Cabanossi joined
[22:48] *** perllearner89 joined
[22:48] *** ryn1x joined
[22:49] <perllearner89> m: say ""; sub postfix:<!>(Int $n) { [*] 2..$n; }; say "6! is { 6! }.";

[22:49] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Negation metaoperator not followed by valid infix‚ê§at <tmp>:1‚ê§------> 3(Int $n) { [*] 2..$n; }; say "6! is { 6!7‚èè5 }.";‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§¬ª

[22:49] <perllearner89> m: sub postfix:<!>(Int $n) { [*] 2..$n; }; say ""; say "6! is { 6! }.";

[22:49] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´‚ê§6! is 720.‚ê§¬ª

[22:49] *** mcmillhj joined
[22:51] <raschipi> .seen zoffix

[22:51] <yoleaux> I saw Zoffix 22:21Z in #perl6-dev: <Zoffix> ZofBot: must be a human thing...

[22:52] <raschipi> .tell zoffix when will we get another toasting round?

[22:52] <yoleaux> raschipi: I'll pass your message to zoffix.

[22:53] *** ryn1x left
[22:54] *** Zoffix joined
[22:54] <Zoffix> raschipi: I don't do it no more. Someone else can do it

[22:54] <yoleaux> 22:52Z <raschipi> Zoffix: when will we get another toasting round?

[22:54] <Zoffix> raschipi: https://github.com/zoffixznet/perl6-Toaster

[22:54] *** MasterDuke left
[22:55] <Zoffix> perllearner89: that's not fixed yet. Was gonna do it next weekend

[22:55] <Zoffix> perllearner89: ticket: https://rt.perl.org/Ticket/Display.html?id=132262#ticket-history

[22:55] * Zoffix realizes the weekend quickly is getting packed... and it's just Monday :}

[22:56] <AlexDaniel`> raschipi: last time it was done by Skarsnik

[22:56] <perllearner89> Zoffix: Cool. I just figured I would do a little test. Thanks for your help.

[22:56] <AlexDaniel`> raschipi: if you're willing to toast yourself, let me know and I'll give you the DB file (so that we can compare previous results with your run)

[22:57] <AlexDaniel`> raschipi: one way or another I want toaster results this week, so if you're willing to help that'd be great

[22:57] *** MasterDuke joined
[23:01] *** ryn1x joined
[23:01] <raschipi> I'm willing to help, but I don't have any resources. I wonder if some company interested in Perl6 can donate them.

[23:02] <Zoffix> (related: Google Compute Engine gives out $300 free credit to try out)

[23:03] *** zakharyas left
[23:03] <AlexDaniel`> ‚Üë this is exactly how Skarsnik did it the last time

[23:04] *** mempko joined
[23:04] <raschipi> Well, then each week someone different will have to run it... I don't want to put effort into a temporary solution.

[23:05] <AlexDaniel`> Zoffix: how much does it take to use these $300 ?

[23:06] *** ryn1x left
[23:06] <AlexDaniel`> Zoffix: do you know if we have a ticket for ÔΩ¢say 1.111111111111111111111ÔΩ£ ?

[23:08] <MasterDuke> i've profiled the build of rakudo ~20 times in a vm with 4 cores and 26gb ram and used ~$2.47

[23:08] *** callyalater joined
[23:09] <callyalater> m: .say for 1..10;

[23:09] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[23:10] *** callyalater left
[23:10] *** perllearner89 left
[23:12] <AlexDaniel`> yet another drive-by-eval :)

[23:17] *** Rawriful left
[23:18] *** ryn1x joined
[23:18] <Zoffix> AlexDaniel`: depends on VM you run. The one I use is 70c/h or 1.5/h or something along those lines

[23:19] <Zoffix> They got a calculator somewhere. "pre_emptive" VMs are a lot cheaper

[23:19] <Zoffix> m: say 1.111111111111111111111

[23:19] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´1.11111111111111111604544‚ê§¬ª

[23:19] <Zoffix> m: say 111111111111111111111.log: 2

[23:19] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´66.5905649911923‚ê§¬ª

[23:19] <Zoffix> AlexDaniel`: it's in my private bug stash

[23:21] <Zoffix> And in a "definitely gonna fix it" section :)

[23:23] <AlexDaniel`> well, you can now add a link to RT #132313 :)

[23:23] <synopsebot> RT#132313 [new]: https://rt.perl.org/Ticket/Display.html?id=132313 .gist of some Rats does unnecessary Numification (say 1.111111111111111111111)

[23:23] <timotimo> MasterDuke: all of them with the html profiler? or maybe with sql?

[23:24] <timotimo> oh, bedtime for me

[23:24] <Zoffix> AlexDaniel`: that's not a problem at all though. 1.111111111111111111111 is not a Rat

[23:24] <AlexDaniel`> m: say WHAT 1.111111111111111111111

[23:24] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´(Rat)‚ê§¬ª

[23:24] <AlexDaniel`> isn't it?

[23:24] <Zoffix> It's not supposed to be one. Your denominator is over 64 bits

[23:24] <AlexDaniel`> ahhh‚Ä¶ that's what happens

[23:25] <Zoffix> m: say <1.111111111111111111111>

[23:25] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´1.111111111111111111111‚ê§¬ª

[23:25] <Zoffix> AlexDaniel`: actually there's already is a ticket, sorta. One about smartmatches with ranges. Should be still open

[23:26] *** mcmillhj left
[23:26] <AlexDaniel`> m: say 1.111111111111111111111.FatRat

[23:26] <camelia> rakudo-moar d6a9edacf: OUTPUT: ¬´1.111111111111111111111‚ê§¬ª

[23:27] <AlexDaniel`> now I'm not even sure if it's a bug or not

[23:27] *** ryn1x left
[23:27] <AlexDaniel`> what's the right behavior?

[23:28] <Zoffix> AlexDaniel`: deciding that is part of the fix :) TimToady suggested generating a RatStr in those cases (it knows how to behave like a FatRat) and I said I'll try that first. Which is how the bug landed into my private stash :)

[23:29] <Zoffix> s/suggested/said "maybe it should..."/

[23:29] <AlexDaniel`> ok, I see. Thanks!

[23:32] *** ryn1x joined
[23:36] <HoboWithAShotgun> oh hey zoff. i am going to release this tomorrow. can you check for red flags? i am subclassing your Color.pm

[23:36] <HoboWithAShotgun> https://hastebin.com/uwokivufux.go

[23:37] *** cdg joined
[23:37] *** char_var[buffer] joined
[23:37] *** mson left
[23:38] *** nadim left
[23:40] *** cdg_ left
[23:40] *** ryn1x left
[23:41] *** cdg left
[23:42] <raschipi> HoboWithAShotgun: Are those HTML color names?

[23:44] <HoboWithAShotgun> yeah

[23:46] *** ryn1x joined
[23:47] <Zoffix> HoboWithAShotgun: no idea. I don't remember writing Color

[23:47] <raschipi> Should indicate that in the name, I think. Color naming is a huge topic and the HTML version is the least useful of them.

[23:48] <Zoffix> HoboWithAShotgun: you can bind to attributes: `submethod BUILD(:$!name, :$!pretty-name) {}` 

[23:50] *** ryn1x left
[23:57] <MasterDuke> timotimo: sql. but maybe it wasn't as many as i thought. i did it at each release tag from 2017.03 to 2017.09

[23:59] <HoboWithAShotgun> raschipi: which palette do you consider more "useful"?

[23:59] <raschipi> Well, other usually try to at least represent actual colors. HTML color names ensure they will look different everywhere, instead of looking the same.

