[00:01] <notviki> Are there docs for core TAP.pm?

[00:01] <notviki> trying to silence it and not print anything to STDOUT

[00:03] *** shayan_ joined
[00:04] <notviki> the programmer had time to make dozens of roles and classes for no good reason, but didn't bother with the docs -_-

[00:06] *** shayan_ left
[00:10] <notviki> Fuck this

[00:10] <notviki> (╯°□°）╯︵ ┻━┻

[00:10] * notviki leaves to play video games instead

[00:10] *** dj_goku joined
[00:10] *** dj_goku left
[00:10] *** dj_goku joined
[00:12] *** girafe left
[00:16] *** dj_goku left
[00:17] *** pmurias left
[00:22] *** BenGoldberg joined
[00:23] *** lukaramu left
[00:26] <AlexDaniel> ┬─┬ノ(º_ºノ)

[00:26] <AlexDaniel> keep calm :)

[00:28] <notviki> How to make core TAP::Harness stfu? I don't want it producing any output

[00:28] <notviki> I see .output param that takes a handle, but giving it a fake handle still doesn't prevent output

[00:28] <notviki> and it's goddam spaghetty farm with all these roles and classes for a simple job.

[00:29] <ugexe> you probably have to pass something like `class output { method print(|) { } }`

[00:30] <notviki> still prints

[00:30] <notviki> This is what I got to run it: https://gist.github.com/zoffixznet/3470b494c347b276a23e2f4b638d9262

[00:35] *** cdg left
[00:36] <notviki> 41 roles and classes... God I hope that's not what normal code is supposed to look like :S

[00:40] *** mcmillhj joined
[00:40] <AlexDaniel> m: ["a".."z"].classify(* eq <a e i o u>.any).say

[00:40] <camelia> rakudo-moar 4038c6: OUTPUT«{False => [a b b b b b c c c c c d d d d d e e e e f f f f f g g g g g h h h h h i i i i j j j j j k k k k k l l l l l m m m m m n n n n n o o o o p p p p p q q q q q r r r r r s s s s s t t t t t u u u u v v v v v w w w w w x x x x x y y y y y z z z z z],…»

[00:41] <AlexDaniel> :|

[00:41] <jeek> |:

[00:43] <AlexDaniel> m: ["a".."z"].classify(so * eq <a e i o u>.any).say

[00:43] <camelia> rakudo-moar 4038c6: OUTPUT«{False => [b c d f g h j k l m n p q r s t v w x y z], True => [a e i o u]}␤»

[00:45] *** mcmillhj left
[00:45] <notviki> Well, I succeeded... by wrapping $*OUT.print and then unwrapping it after harness is done...

[00:46] *** newbie1 left
[00:49] *** cibs left
[00:51] *** cibs joined
[00:51] *** mcmillhj joined
[00:52] <notviki> ....and that doesn't work when you `use Test`

[00:55] *** BenGoldberg left
[00:55] *** mcmillhj left
[00:56] *** TheDir joined
[00:57] <dalek> perl6-most-wanted: 8c6fba8 | (Tom Browder)++ | most-wanted/modules.md:

[00:57] <dalek> perl6-most-wanted: add Postscript

[00:57] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/8c6fba8fcb

[01:04] *** skids joined
[01:07] *** mcmillhj joined
[01:12] *** mcmillhj left
[01:13] *** SmokeMachine left
[01:13] *** clkao left
[01:13] *** peteretep left
[01:13] *** xfix left
[01:13] *** chee left
[01:13] *** SCHAAP137 left
[01:13] *** ssm left
[01:13] *** sergot left
[01:13] *** huf left
[01:13] *** DrForr left
[01:13] *** PerlJam left
[01:13] *** garu left
[01:13] *** risou___ left
[01:13] *** zacts left
[01:14] *** ilogger2_ joined
[01:15] *** plicease joined
[01:15] *** mephinet joined
[01:16] *** john51 joined
[01:16] *** Guest1165 joined
[01:16] *** chee joined
[01:16] *** nightfrog joined
[01:16] *** ssm joined
[01:16] *** Guest1165 left
[01:16] *** BuildTheRobots left
[01:17] *** xfix joined
[01:18] *** aborazmeh joined
[01:18] *** aborazmeh left
[01:18] *** aborazmeh joined
[01:19] *** tony-o joined
[01:20] *** peteretep joined
[01:24] *** pnu_ joined
[01:24] *** parisba joined
[01:24] *** isacloud joined
[01:25] *** jnap_ joined
[01:25] *** chansen_ joined
[01:25] *** ggherdov joined
[01:25] *** ggherdov left
[01:25] *** zostay joined
[01:26] *** mrsolo joined
[01:26] *** ggherdov joined
[01:27] *** PotatoGim joined
[01:32] *** aborazmeh left
[01:32] *** kipd joined
[01:33] *** timeless joined
[01:37] *** clkao joined
[01:38] <notviki> my final workaround: https://gist.github.com/zoffixznet/d6644947123b0b473f4eb9795a36b1b0

[01:38] <notviki> Hopefully Leont replies to my tweek with surprise docs.

[01:38] <notviki> *tweet

[01:43] *** aborazmeh joined
[01:43] *** aborazmeh left
[01:43] *** aborazmeh joined
[01:43] *** BuildTheRobots joined
[01:44] *** aborazmeh left
[01:44] *** SmokeMachine joined
[01:45] <dalek> ecosystem: a74d748 | (brad clawsie)++ | META.list:

[01:45] <dalek> ecosystem: add Net::IP::Parse to ecosystem. See https://github.com/bradclawsie/Net-IP-Parse

[01:45] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/a74d748401

[01:45] <dalek> ecosystem: 251cc4b | (Zoffix Znet)++ | META.list:

[01:45] <dalek> ecosystem: Merge pull request #280 from bradclawsie/master

[01:45] <dalek> ecosystem: 

[01:45] <dalek> ecosystem: add Net::IP::Parse to ecosystem. See https://github.com/bradclawsie/Net::IP::Parse

[01:45] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/251cc4b7e0

[01:51] <notviki> .tell ugexe TAP::Harness fixed in https://github.com/rakudo/rakudo/commit/b120ac401a0795f Unless it's already done, can you tak on :auth<perl> on use TAP to ensure if someone installs TAP::Harness from ecosystem, it doesn't get loaded instead (or whatever method there is to assure that)

[01:51] <notviki> ROBOT!

[01:51] <yoleaux> notviki: I'll pass your message to ugexe.

[01:54] *** aborazmeh joined
[01:54] *** aborazmeh left
[01:54] *** aborazmeh joined
[01:58] *** dj_goku joined
[01:58] *** aborazmeh left
[02:03] *** dj_goku left
[02:03] *** perigrin joined
[02:04] *** Bucciarati joined
[02:08] *** bpmedley joined
[02:09] *** felher joined
[02:13] <AlexDaniel> mch: my @array[2;2;2]; for @array.pairs { say .perl }

[02:13] <committable6> AlexDaniel, ¦«2015.12,HEAD»: ((0, 0, 0)) => Any␤((0, 0, 1)) => Any␤((0, 1, 0)) => Any␤((0, 1, 1)) => Any␤((1, 0, 0)) => Any␤((1, 0, 1)) => Any␤((1, 1, 0)) => Any␤((1, 1, 1)) => Any

[02:13] <AlexDaniel> :O

[02:13] <AlexDaniel> bisect: old=HEAD~300 my @array[2;2;2]; for @array.pairs { say .perl }

[02:13] <bisectable6> AlexDaniel, Bisecting by output (old=HEAD~300 new=b120ac4) because on both starting points the exit code is 0

[02:13] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/c0892ad4083a2a78c7b570779af56b6a

[02:13] <bisectable6> AlexDaniel, (2016-12-29) https://github.com/rakudo/rakudo/commit/dc7b68881065a39aeabdde2eed2bc4691b2a876c

[02:14] <AlexDaniel> notviki: so… yea… Mu or Any? I have no idea.

[02:14] <AlexDaniel> m: say (Mu, Any).pick

[02:14] <camelia> rakudo-moar b120ac: OUTPUT«(Mu)␤»

[02:14] <AlexDaniel> m: say (Mu, Any).pick

[02:14] <camelia> rakudo-moar b120ac: OUTPUT«(Mu)␤»

[02:14] <AlexDaniel> m: say (Mu, Any).pick

[02:14] <camelia> rakudo-moar b120ac: OUTPUT«(Any)␤»

[02:15] <AlexDaniel> mch: my @array[2;2;2]; for @array.kv { say .perl }

[02:15] <committable6> AlexDaniel, ¦«2015.12»: (0, 0, 0)␤Any␤(0, 0, 1)␤Any␤(0, 1, 0)␤Any␤(0, 1, 1)␤Any␤(1, 0, 0)␤Any␤(1, 0, 1)␤Any␤(1, 1, 0)␤Any␤(1, 1, 1)␤Any␤¦«HEAD»: (0, 0, 0)␤Mu␤(0, 0, 1)␤Mu␤(0, 1, 0)␤Mu␤(0, 1, 1)␤Mu␤(1, 0, 0)␤Mu␤(1, 0, 1)␤Mu␤(1, 1, 0)␤Mu␤(1, 1, 1)␤Mu

[02:15] <AlexDaniel> but here it's Mu!!

[02:15] <AlexDaniel> /o\ NOoooooooooooooooooooo

[02:19] <AlexDaniel> m: class Str {}; say "hi"

[02:19] <camelia> rakudo-moar b120ac: OUTPUT«===SORRY!===␤This type cannot box a native string: P6opaque, Str␤»

[02:25] *** mcmillhj joined
[02:29] *** mcmillhj left
[02:36] *** Actualeyes joined
[02:45] <timotimo> bool array_key_exists ( mixed $key , array $array )

[02:46] <timotimo> it's quite logical that it'd be ordered array ... key ... key ... array

[02:47] *** ilbot3 joined
[02:57] *** mcmillhj joined
[03:00] *** aborazmeh joined
[03:00] *** aborazmeh left
[03:00] *** aborazmeh joined
[03:04] *** BenGoldberg joined
[03:13] *** aborazmeh left
[03:17] <dalek> whateverable: 95a0567 | (Aleks-Daniel Jakimenko-Aleksejev)++ | / (3 files):

[03:17] <dalek> whateverable: Add a bunch of shortcuts for bots

[03:17] <dalek> whateverable: 

[03:17] <dalek> whateverable: Most people probably won't need these. This is for those who

[03:17] <dalek> whateverable: constantly work with these bots.

[03:17] <AlexDaniel> dalek :P

[03:18] *** dalek joined
[03:18] *** ChanServ sets mode: +v dalek

[03:19] <AlexDaniel> oops

[03:19] *** xtreak joined
[03:20] * AlexDaniel just said in the commit message that the user is “he”… I'll go prepare a guillotine for myself

[03:21] *** aborazmeh joined
[03:21] *** aborazmeh left
[03:21] *** aborazmeh joined
[03:22] *** mcmillhj left
[03:23] *** bwisti joined
[03:32] *** dj_goku joined
[03:32] *** aborazmeh left
[03:35] *** aborazmeh joined
[03:35] *** aborazmeh left
[03:35] *** aborazmeh joined
[03:48] *** aborazmeh left
[03:51] *** aborazmeh joined
[03:51] *** aborazmeh left
[03:51] *** aborazmeh joined
[03:59] *** mawkish_ joined
[04:01] <samcv> AlexDaniel, zero'd graphs?

[04:03] <samcv> AlexDaniel, do you really want to go all the way to 0x10FFFF

[04:03] <samcv> the last real one is E01EF

[04:04] <samcv> then there's a bunch of private use planes

[04:04] <samcv> m: Uni.new(0x100000).uniname.say

[04:04] <camelia> rakudo-moar b120ac: OUTPUT«No such method 'uniname' for invocant of type 'Uni'␤  in block <unit> at <tmp> line 1␤␤»

[04:04] <AlexDaniel> m: say 0x10FFFF - 0xE01EF

[04:04] <camelia> rakudo-moar b120ac: OUTPUT«196112␤»

[04:04] <samcv> m: Uni.new(0x100000).Str.uniname.say

[04:04] <camelia> rakudo-moar b120ac: OUTPUT«<Plane 16 Private Use>␤»

[04:04] <AlexDaniel> m: say 0x10FFFF

[04:04] <camelia> rakudo-moar b120ac: OUTPUT«1114111␤»

[04:04] <AlexDaniel> m: say (0x10FFFF - 0xE01EF)/0x10FFFF

[04:04] <camelia> rakudo-moar b120ac: OUTPUT«0.17602555␤»

[04:05] <AlexDaniel> “speed up unicodable by 17.6%”? :)

[04:05] <samcv> what by only going to E01EF :P

[04:05] <samcv> also you could skip some extra ranges as well

[04:05] <AlexDaniel> samcv: I think the right way to do it is to go through the whole range once and only save stuff that makes sense

[04:06] <AlexDaniel> e.g. no private ranges, no deprecated stuff

[04:06] <samcv> oh like generate one range object thingy. so you check all the codepoints and just when doing search and lookup only go throuhg ones that are normally

[04:06] <AlexDaniel> samcv: perhaps if /somebody/ gave me a list of unicode properties I should look for to filter out stuff… :)

[04:07] <samcv> i know nothing of such things!

[04:07] <AlexDaniel> statisfiable6: help

[04:07] <statisfiable6> AlexDaniel, Available stats: core (CORE.setting size), install (size of the whole installation), …

[04:07] <samcv> give me a few mins to think of some things

[04:07] <AlexDaniel> statisfiable6: core0

[04:07] <statisfiable6> AlexDaniel, OK! Working on it…

[04:07] <AlexDaniel> ↑ “zeroed” graphs

[04:07] <AlexDaniel> where Y starts at 0

[04:08] *** shayan_ joined
[04:08] <AlexDaniel> statisfiable6: install0

[04:08] <statisfiable6> AlexDaniel, OK! Working on it…

[04:08] <AlexDaniel> :O

[04:09] <samcv> AlexDaniel, ok you want to filter out 'Co' general category (this is private use) and 'Cn' which is not assigned

[04:09] <AlexDaniel> what about deprecated stuff?

[04:09] <samcv> Cs which is surrogates for utf-16

[04:09] <samcv> like?

[04:09] <samcv> i don't think there's a depreciated unicode property idk

[04:10] <AlexDaniel> stuff that turns into other stuff after normalization

[04:10] <samcv> i can check though

[04:10] <samcv> oh.

[04:10] <samcv> ok things that are NFC_QC = No

[04:11] <samcv> but. uhm

[04:11] <samcv> some things after normalization become multiple glyphs... so pleoase don't do that

[04:11] <samcv> would miss some things

[04:11] <samcv> ok looks like there is a depreciated property will check on if we support this so far

[04:12] <AlexDaniel> oh dear…

[04:13] <samcv> u: angstrom

[04:13] <unicodable6> samcv, U+212B ANGSTROM SIGN [Lu] (Å)

[04:13] *** statisfiable6 joined
[04:13] <AlexDaniel> statisfiable6: core

[04:13] <statisfiable6> AlexDaniel, OK! Working on it…

[04:13] <samcv> m: "Å".ords.say

[04:13] <camelia> rakudo-moar b120ac: OUTPUT«(197)␤»

[04:13] <samcv> ok that one doesn't decompose into multiple but

[04:14] <samcv> there is 197 which is A with ring

[04:14] <samcv> but i'm sure there are some

[04:15] <AlexDaniel> aaaaaaaaaahhh right, statisfiable generates stuff on the fly

[04:15] *** mawkish_ left
[04:15] <samcv> m: Uni.new(0x0149).Str.say

[04:15] <camelia> rakudo-moar b120ac: OUTPUT«ŉ␤»

[04:15] <AlexDaniel> so if you don't call it often enough then it will take some time…

[04:15] <samcv> heh

[04:15] *** mawkish_ joined
[04:15] <samcv> m: Uni.new(0x0149).Str.ords.».base(16)

[04:15] <camelia> rakudo-moar b120ac: ( no output )

[04:15] <samcv> m: Uni.new(0x0149).Str.ords.».base(16).say

[04:15] <AlexDaniel> you guys commit too much stuff!

[04:15] <camelia> rakudo-moar b120ac: OUTPUT«(149)␤»

[04:16] <samcv> hmm ok that's depreciated but doesn't decompose to anything it looks like

[04:16] <samcv> it's LATIN SMALL LETTER N PRECEDED BY APOSTROPHE

[04:16] <AlexDaniel> u: U+0149

[04:16] <unicodable6> AlexDaniel, U+0149 LATIN SMALL LETTER N PRECEDED BY APOSTROPHE [Ll] (ŉ)

[04:16] <samcv> m: "ŉ".uniprop('Depreciated').say

[04:16] <camelia> rakudo-moar b120ac: OUTPUT«0␤»

[04:16] <samcv> hmm

[04:17] <AlexDaniel> m: "ŉ".uniprop('Deprecated').say

[04:17] <camelia> rakudo-moar b120ac: OUTPUT«True␤»

[04:17] <samcv> did i mispell

[04:17] <samcv> yeah haha

[04:17] <AlexDaniel> so should unicodable ignore these characters?

[04:17] <samcv> but there's only like not very many depreciated

[04:17] <samcv> like 20

[04:17] <AlexDaniel> u: { .uniprop('Deprecated') }

[04:17] <samcv> err actually exactly 15

[04:17] <AlexDaniel> well let's see

[04:18] <unicodable6> AlexDaniel, U+0F77 TIBETAN VOWEL SIGN VOCALIC RR [Mn] (◌ཷ)

[04:18] <unicodable6> AlexDaniel, U+0149 LATIN SMALL LETTER N PRECEDED BY APOSTROPHE [Ll] (ŉ)

[04:18] <unicodable6> AlexDaniel, U+0673 ARABIC LETTER ALEF WITH WAVY HAMZA BELOW [Lo] (ٳ)

[04:18] <unicodable6> AlexDaniel, https://gist.github.com/663230e538735c72c3f31eca73bcc61f

[04:18] <samcv> AlexDaniel, can you make unicodable6 say the number found on the gist line please?

[04:18] <samcv> "Found 15 http://gist etc "

[04:18] *** Resol joined
[04:19] <samcv> m: '〈'.uniprop('Bidi_Mirroring_Glyph').say

[04:19] <camelia> rakudo-moar b120ac: OUTPUT«〉␤»

[04:19] <samcv> that is a depreciated angle bracket. dunno what replaced it

[04:19] <AlexDaniel> I'll do it right now but here is the ticket: https://github.com/perl6/whateverable/issues/88

[04:19] <samcv> u: angle bracket

[04:19] <unicodable6> samcv, U+2329 LEFT-POINTING ANGLE BRACKET [Ps] (〈)

[04:19] <unicodable6> samcv, U+232A RIGHT-POINTING ANGLE BRACKET [Pe] (〉)

[04:19] <unicodable6> samcv, U+276C MEDIUM LEFT-POINTING ANGLE BRACKET ORNAMENT [Ps] (❬)

[04:19] <unicodable6> samcv, https://gist.github.com/7977b4f2b47ae4a7c5f397879677c20b

[04:19] <TEttinger> hehe you keep saying depreciated

[04:20] <TEttinger> it's funny because it makes more sense

[04:20] <samcv> does it.

[04:20] <samcv> that's how i say it at least

[04:21] <samcv> depree-see-ated, not dep-rik-ated

[04:21] <TEttinger> I've never heard deprecated outside of the context of code or "self-deprecating humor", despite it being the term used here, but you hear about financial depreciation all the time, where depreciation is loss of value

[04:21] <samcv> ah

[04:21] *** aborazmeh left
[04:21] <samcv> depreciate means diminish in value over a period of time.

[04:21] <TEttinger> yep

[04:22] <samcv> depricate: .

[04:22] <samcv> express disapproval of.

[04:22] <samcv> so i guess they are sorta interchangeable for this use

[04:22] <samcv> well they are similar at least

[04:22] <samcv> things can be depricated and or depreciated

[04:22] <TEttinger> "hyperinflation caused the rapid depreciation of the Weimar Repblic's currency"

[04:22] <TEttinger> *Republic's

[04:22] <AlexDaniel> samcv: ah, that requires more than a 1-minute hack. Gisted stuff is created automatically and it won't be extremely easy to add a number there

[04:22] <AlexDaniel> but I'll get to it

[04:23] <samcv> i guess deprecated is 'they still work but you are asked not to use it' and depreciated 'its functionality is not as good as it used to'

[04:23] <samcv> or something

[04:23] <samcv> but i guess deprication is more commonly used

[04:24] <samcv> An example in hardware design is omission of pull-up resistors on unused inputs to a logic gate. This practice may have been acceptable in the past, but becomes deprecated because faster clock speeds are likely to induce more transient noise on input lines, causing hardware glitches or malfunctions.

[04:24] <samcv> ^ sounds like depreciation and deprecation at the same time

[04:25] <TEttinger> samcv: a similar case is the word "mischievous"; most people pronounce it with an extra syllable, i.e. "miss chee vee us", despite there being no viable "vee" syllable in spelling. the word is properly like "mischief", plus "ous", with the f changed to v

[04:25] <samcv> yeah

[04:26] <TEttinger> especially since there's a legitimate word that means almost the exact same thing, it's hard to distinguish

[04:26] <samcv> i'm sure deprecation and depreciate come from the same root work

[04:26] <TEttinger> (spell check is not going to suggest one over the other)

[04:26] <samcv> yeah

[04:27] <TEttinger> I mean, it could be worse. it could be French, with something like 5+ words all pronounced identically but spelled differently

[04:27] <samcv> heh

[04:29] <AlexDaniel> statisfiable6: core

[04:29] <statisfiable6> AlexDaniel, OK! Working on it…

[04:29] <samcv> ok time to PR moar changes to fixlike 700 emoji tests :)

[04:29] <samcv> still need to nail down how we will implement uniname with that. i think atm 1 name = 1 codepoint

[04:30] <samcv> though i guess that codepoint could decompose or something. idk maybe we can make synthetics that decompose to that

[04:30] <samcv> or that might make things confusing idk jnthn should know more on how best to do that part

[04:31] <samcv> fixes another 2 grapheme break tests from unicode 9. so we're down to only 7 failing out of the thousand or so

[04:31] <samcv> those last 7 will need to save state across characters to implement

[04:31] <samcv> and should at least be done before unicode 10

[04:31] <samcv> ideally but i should probably have that done by then

[04:32] <samcv> statisfiable6, why so slow?

[04:32] <statisfiable6> samcv, Huh? Available stats: core (CORE.setting size), install (size of the whole installation), …

[04:32] *** mawkish_ left
[04:33] *** mawkish_ joined
[04:34] <TEttinger> a ha, french word for green, vert, has homophones: ver, verre, verres, vers, verts, vair, vaire

[04:34] *** wamba joined
[04:35] <TEttinger> nice work on unicode support, samcv!

[04:35] <samcv> thanks :)

[04:36] <samcv> There is no system but Unicode, and UTF-8 is one of its encodings.

[04:36] <samcv> all hail the church of unicode

[04:37] <samcv> also http://www.unicode.org/notes/tn39/

[04:37] <TEttinger> The sun is not doing Unicode is doing

[04:37] <samcv> — So is the Arabic U+FDE3 ﷣ ORNATE LEFT PARENTHESIS a bracket, too?

[04:37] <samcv> No.

[04:37] <samcv> — Why not?

[04:37] <samcv> Because I said so.

[04:37] <samcv> — How about quotation marks? They come in pairs and enclose stuff inside, separating it from all the stuff outside. Some of them, like that French thingie ‹ even look like brackets.

[04:37] <samcv> No, they aren't "brackets", either.

[04:37] <samcv> heh

[04:38] <samcv> i'm sure there's a good reason they are not brackets. or something

[04:38] <samcv> there usually is

[04:38] <[Coke]> .u { .uniname ~~ /SUPER/ }

[04:38] <yoleaux> U+0020 SPACE [Zs] ( )

[04:38] <yoleaux> U+002E FULL STOP [Po] (.)

[04:38] <yoleaux> U+002F SOLIDUS [Po] (/)

[04:38] <samcv> what

[04:39] <samcv> super?

[04:39] *** mawkish_ left
[04:39] <samcv> also wait why did yoleaux say that

[04:39] *** mawkish_ joined
[04:39] <[Coke]> u: { .uniname ~~ /SUPER/ }

[04:39] <unicodable6> [Coke], U+00B9 SUPERSCRIPT ONE [No] (¹)

[04:39] <unicodable6> [Coke], U+00B2 SUPERSCRIPT TWO [No] (²)

[04:39] <unicodable6> [Coke], U+00B3 SUPERSCRIPT THREE [No] (³)

[04:39] <unicodable6> [Coke], https://gist.github.com/f5962398b2a0cfef0e132fd42fbf7fc4

[04:43] *** mawkish_ left
[04:43] <AlexDaniel> hehe, undocumented feature

[04:43] <AlexDaniel> committable6: balls say 42

[04:43] *** mawkish_ joined
[04:44] <committable6> AlexDaniel, https://gist.github.com/243d202865e9819e0b2a8e40b694b9e1

[04:45] <timotimo> just saw a short overview video about Telemetry, and moar should get something like that. we'd call it ...

[04:45] <timotimo> Telemehtry

[04:45] <timotimo> or maybe Telemehtrie

[04:45] <timotimo> on that note

[04:45] * timotimo disappears to bed

[04:45] <[Coke]> samcv: yoleaux was just doing it char by char.

[04:46] <samcv> ah

[04:46] <AlexDaniel> .u SUPER

[04:46] <samcv> still creepy

[04:46] <yoleaux> U+00B2 SUPERSCRIPT TWO [No] (²)

[04:46] <yoleaux> U+00B3 SUPERSCRIPT THREE [No] (³)

[04:46] <yoleaux> U+00B9 SUPERSCRIPT ONE [No] (¹)

[04:46] <samcv> having yoleaux do it and not unicodable6 

[04:47] <AlexDaniel> unicodable6 will only answer .u if yoleaux is not on the channel :P

[04:47] <samcv> ah

[04:47] <samcv> ok

[04:47] <samcv> it still is weird even though I know they're bot's

[04:48] <samcv> let me at least suspend my disbelief that they are infact different bots :D

[04:48] *** mawkish_ left
[04:49] *** mawkish_ joined
[04:49] <samcv> u: { .uniprop('Emoji_Presentation')}

[04:49] <samcv> i think we have this one

[04:50] <unicodable6> samcv, U+231A WATCH [So] (⌚)

[04:50] <unicodable6> samcv, U+231B HOURGLASS [So] (⌛)

[04:50] <unicodable6> samcv, U+23E9 BLACK RIGHT-POINTING DOUBLE TRIANGLE [So] (⏩)

[04:50] <unicodable6> samcv, https://gist.github.com/210863e9281ba7197790c749938f088e

[04:50] <samcv> ok good

[04:50] <samcv> IIRC these are things that can be viewed as "Emoji" vs text based. for example there's emoji presentation variation selectiors and a text one if you want it to display as text and not as a fancy emoji

[04:51] <samcv> something like that

[04:53] *** mawkish_ left
[04:53] <[Coke]> u: { .uniname ~~ /CIRCLED/ }

[04:53] <unicodable6> [Coke], U+2295 CIRCLED PLUS [Sm] (⊕)

[04:53] <unicodable6> [Coke], U+2296 CIRCLED MINUS [Sm] (⊖)

[04:53] <unicodable6> [Coke], U+2297 CIRCLED TIMES [Sm] (⊗)

[04:53] <unicodable6> [Coke], https://gist.github.com/9252f08ba640f0d9fb5744c1c6d38bce

[04:53] *** mawkish_ joined
[04:56] *** committable6 joined
[04:56] *** ChanServ sets mode: +v committable6

[04:56] <perlpilo1> u: brakcet

[04:56] <unicodable6> perlpilo1, U+FE18 PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRAKCET [Pe] (︘)

[04:57] <AlexDaniel> :O

[04:57] <AlexDaniel> WHAT

[04:57] *** mawkish_ left
[04:57] <AlexDaniel> is it a word?

[04:57] *** mawkish_ joined
[04:58] <perlpilot_> A typo that is still part of the unicode standard

[04:58] <AlexDaniel> :o

[04:58] *** aindilis joined
[04:58] <perlpilot_> It makes me smile for some reason

[04:58] <AlexDaniel> anyway, I wanted to show something

[04:59] <AlexDaniel> committable6: balls say 42

[04:59] <committable6> AlexDaniel, ¦«balls»: Cannot find this revision (did you mean “all”?)

[04:59] <AlexDaniel> committable6: 2015.12: say 42

[04:59] <committable6> AlexDaniel, ¦«2015.12:»: Cannot find this revision (did you mean “2015.12”?)

[04:59] <AlexDaniel> committable6: 2018.05: say 42

[04:59] <committable6> AlexDaniel, ¦«2018.05:»: Cannot find this revision (did you mean “2016.05”?)

[04:59] <AlexDaniel> committable6: колед say 42

[04:59] <committable6> AlexDaniel, ¦«колед»: Cannot find this revision (did you mean “0.475”?)

[04:59] <AlexDaniel> what?

[04:59] <AlexDaniel> ignore that bit…

[05:00] <AlexDaniel> committable6: 120ac40 say 42

[05:00] <committable6> AlexDaniel, ¦«120ac40»: Cannot find this revision (did you mean “b120ac4”?)

[05:00] <AlexDaniel> committable6: say 42

[05:00] <committable6> AlexDaniel, Seems like you forgot to specify a revision (will use “v6.c” unstead of “say”)

[05:00] <committable6> AlexDaniel, ¦«2015.12,2016.02,2016.03,2016.04,2016.05,2016.06,2016.07.1,2016.08.1,2016.09,2016.10,2016.11,2016.12,HEAD»: 42

[05:00] <AlexDaniel> :)

[05:00] <samcv> u: ¦

[05:00] <unicodable6> samcv, U+00A6 BROKEN BAR [So] (¦)

[05:00] <samcv> what is the point of the broken bar

[05:01] <samcv> also where is the code for this

[05:01] <samcv> m: my $var = '1'; say $va

[05:01] <camelia> rakudo-moar b120ac: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '$va' is not declared␤at <tmp>:1␤------> 3my $var = '1'; say 7⏏5$va␤»

[05:01] <samcv> err. it probably said it lower down if i meant $var

[05:01] <samcv> would like to use unicmp_s with that

[05:02] <samcv> if we even do any non literal checking?

[05:02] <samcv> either way i want to look :P

[05:03] <MasterDuke> samcv: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/World.nqp#L58

[05:03] <AlexDaniel> MasterDuke: cool, right? If only I knew where this 0.475 is coming from :D

[05:04] <MasterDuke> AlexDaniel: yeah, and that's certainly weird

[05:05] <MasterDuke> samcv: there are a bunch of suggest_* methods in World that use that levenshtein implementation

[05:07] <samcv> ok so it doesn't seem unicmp would really help since it doesn't compare them really just removes one letter or adds

[05:07] *** statisfiable6 left
[05:07] <[Coke]> ooh. can we get something like "\c[BORKEN BAR]

[05:07] <[Coke]> " -> did you mean "\c[BROKEN BAR]" ?

[05:08] <samcv> would be neat

[05:08] *** statisfiable6 joined
[05:08] <AlexDaniel> statisfiable6: core

[05:08] <statisfiable6> AlexDaniel, OK! Working on it…

[05:10] <statisfiable6> AlexDaniel, https://gist.github.com/8ff4e5335e6fb02416ff7fa00f7c5ad2

[05:10] <AlexDaniel> statisfiable6: install

[05:10] <statisfiable6> AlexDaniel, OK! Working on it…

[05:10] <AlexDaniel> \o/

[05:10] *** BenGoldberg left
[05:11] <statisfiable6> AlexDaniel, https://gist.github.com/e415da895ded0d6c28543f167f28a7ef

[05:13] <AlexDaniel> commit: 0.475 say 42

[05:13] <committable6> AlexDaniel, ¦«0.475»: Cannot find this revision (did you mean “0.334”?)

[05:13] <AlexDaniel> commit: 0.334 say 42

[05:13] <committable6> AlexDaniel, ¦«0.334»: Cannot find this revision (did you mean “0.479”?)

[05:13] <AlexDaniel> xD

[05:13] *** BenGoldberg joined
[05:13] <AlexDaniel> committable, stop playing games with me!

[05:13] <committable6> AlexDaniel, ¦«stop»: Cannot find this revision (did you mean “Oslo”?)

[05:13] <AlexDaniel> committable, Oslo say 42

[05:13] <committable6> AlexDaniel, ¦«Oslo»: No build for this commit

[05:14] <AlexDaniel> that's how robot uprising will look like

[05:16] *** aries_liuxueyang joined
[05:18] *** Ben_Goldberg joined
[05:18] *** BenGoldberg left
[05:18] *** Ben_Goldberg is now known as BenGoldberg

[05:21] <samcv> haha AlexDaniel 

[05:21] <samcv> wtf

[05:21] <samcv> what is it using ty try and guess?

[05:22] <AlexDaniel> list of all tags, list of all commits since 2015.12 and some extra options like “all”, “v6.c” and “HEAD”

[05:23] <AlexDaniel> should I limit it to useful tags only?

[05:24] <samcv> ah like only the ones it has commits for?

[05:24] <AlexDaniel> yea

[05:24] <samcv> well at least for suggesting things sure

[05:24] <samcv> commit: foobar say 'hi'

[05:24] <committable6> samcv, ¦«foobar»: Cannot find this revision (did you mean “Sonoma”?)

[05:24] <AlexDaniel> I'm not so sure, I find it hilarious

[05:24] <samcv> sure why not sonoma

[05:24] <samcv> it is great :)

[05:24] <samcv> commit: Sonoma say 'hi'

[05:24] <committable6> samcv, ¦«Sonoma»: No build for this commit

[05:25] <samcv> did you change something?

[05:25] <AlexDaniel> no

[05:25] <samcv> idk i have part messages hiden

[05:25] <AlexDaniel> hmmm?

[05:25] <samcv> commit: 6.Ⓒ say 'hi'

[05:25] <committable6> samcv, ¦«6.Ⓒ»: Cannot find this revision (did you mean “0.4”?)

[05:25] <samcv> sure why not 0.4

[05:26] <AlexDaniel> xDDD

[05:26] <AlexDaniel> but that's a bug I'm trying to fix right now

[05:26] <samcv> ah

[05:26] <AlexDaniel> commit: 6.Ⓒ say 'hi'

[05:26] <committable6> AlexDaniel, ¦«6.Ⓒ»: Cannot find this revision (did you mean “0.6”?)

[05:26] <AlexDaniel> commit: 6.Ⓒ say 'hi'

[05:26] <committable6> AlexDaniel, ¦«6.Ⓒ»: Cannot find this revision (did you mean “0.4”?)

[05:26] <AlexDaniel> commit: 6.Ⓒ say 'hi'

[05:26] <committable6> AlexDaniel, ¦«6.Ⓒ»: Cannot find this revision (did you mean “0.5”?)

[05:26] <samcv> hahaha

[05:26] <samcv> commit: commit say 'hi'

[05:26] <committable6> samcv, ¦«commit»: Cannot find this revision (did you mean “Sonoma”?)

[05:26] *** wamba left
[05:27] *** Resol left
[05:27] <samcv> got my compose file into linguist for github which is kinda cool. not sure they would accept it because it's not really a language

[05:27] <samcv> it's a config file

[05:35] *** nightfrog left
[05:37] *** xtreak left
[05:38] *** xtreak joined
[05:42] *** shayan_ left
[05:44] *** shayan_ joined
[05:51] *** Tonik joined
[05:52] *** Cabanossi joined
[05:52] *** cibs joined
[05:54] *** committable6 left
[05:54] *** committable6 joined
[05:54] *** ChanServ sets mode: +v committable6

[05:54] <AlexDaniel> commit: 6.Ⓒ say 'hi'

[05:54] <committable6> AlexDaniel, ¦«6.Ⓒ»: Cannot find this revision (did you mean “v6.c”?)

[05:54] <AlexDaniel> commit: foobar say 'hi'

[05:55] <committable6> AlexDaniel, ¦«foobar»: Cannot find this revision (did you mean “Sonoma”?)

[05:55] <AlexDaniel> samcv: still Sonoma, but at least no more bugs :)

[05:55] <samcv> yay

[05:55] <samcv> commit: c.6 say 'hi'

[05:55] <committable6> samcv, ¦«c.6»: Cannot find this revision (did you mean “0c6”?)

[05:55] <samcv> why yes i meant 0c6

[05:55] <samcv> is that even a thing

[05:55] <AlexDaniel> hmmmmm, kind of…

[05:56] <AlexDaniel> commit: oc6 say 'hi'

[05:56] <committable6> AlexDaniel, ¦«oc6»: Cannot find this revision (did you mean “0c6”?)

[05:56] <AlexDaniel> commit: 0c6 say 'hi'

[05:56] <committable6> AlexDaniel, ¦«0c6»: Cannot find this revision (did you mean “0c6”?)

[05:56] <AlexDaniel> *facepalm*

[05:56] *** committable6 left
[05:58] *** committable6 joined
[05:58] *** ChanServ sets mode: +v committable6

[05:58] <AlexDaniel> commit: c.6 say 'hi'

[05:58] <committable6> AlexDaniel, ¦«c.6»: Cannot find this revision (did you mean “v6.c”?)

[05:58] <AlexDaniel> :)

[05:59] <AlexDaniel> commit: c6 say 'hi'

[05:59] <committable6> AlexDaniel, ¦«c6»: Cannot find this revision (did you mean “ZA”?)

[05:59] <AlexDaniel> … what is ZA

[05:59] <AlexDaniel> oh, alright, that's one of the tags!

[06:00] <samcv> hm

[06:01] <samcv> commit: 5 say 'hi'

[06:01] <committable6> samcv, ¦«5»: Cannot find this revision (did you mean “ZA”?)

[06:01] <samcv> wut

[06:01] <samcv> totally

[06:01] <samcv> not even a number

[06:10] *** revere joined
[06:12] <AlexDaniel> samcv: it's just the shortest thing it could find, so arguably that's a good suggestion :)

[06:15] *** bwisti left
[06:18] <samcv> heh

[06:18] <samcv> commit: 6 say 'hi'

[06:18] <committable6> samcv, ¦«6»: Cannot find this revision (did you mean “ZA”?)

[06:18] <AlexDaniel> commit: 666 say 'hi'

[06:18] <committable6> AlexDaniel, ¦«666»: Cannot find this revision (did you mean “v6.c”?)

[06:18] <AlexDaniel> ;)

[06:19] <AlexDaniel> “Show of hands: Who is reasonably sure, without testing it or looking it up, which of the following four expressions it corresponds”

[06:20] <AlexDaniel> oh, I love these games!

[06:20] <samcv> where did that text come from

[06:21] <AlexDaniel> https://rt.perl.org/Ticket/Display.html?id=130520

[06:21] *** cibs left
[06:23] *** cibs joined
[06:23] <samcv> so it does flat.map?

[06:24] <AlexDaniel> no

[06:25] <samcv> it is nodal

[06:25] <AlexDaniel> .map(…).flat I guess

[06:25] <samcv> SourceBaby, .flatmap

[06:25] <AlexDaniel> s: \(), 'flatmap'

[06:26] <SourceBaby> AlexDaniel, Something's wrong: ␤ERR: Type check failed in binding to &code; expected Callable but got Method+{<anon|73774800>} (Method+{<anon|7377480...)␤  in sub do-sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 42␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 33␤  in block <unit> at -e l

[06:26] <samcv> what

[06:26] <AlexDaniel> s: \(), 'flatmap', \({;})

[06:26] <SourceBaby> AlexDaniel, Ehhh... I'm too scared to run that code.

[06:26] <samcv> ok it does map….flat

[06:27] <samcv> scared? or too lazy?

[06:27] <MasterDuke> https://github.com/rakudo/rakudo/blob/nom/src/core/Any-iterable-methods.pm#L799

[06:27] <samcv> yeah looking at it now

[06:27] <AlexDaniel> MasterDuke: didn't you go to bed?

[06:28] <AlexDaniel> c: all say ((1, 2), <a b>).flatmap(&uc).join(‘|’);

[06:28] <committable6> AlexDaniel, https://gist.github.com/bd32d9ec07890eabdba1ea715bdacd2a

[06:29] <AlexDaniel> c: all say ((1, 2), <a b>).flatmap(&uc).join('|');

[06:29] <MasterDuke> i meant to, but perl 6 is fun. and, likewise?

[06:29] <committable6> AlexDaniel, https://gist.github.com/20a53e8dc1a961c1a0e646caaa74f978

[06:29] <AlexDaniel> I thought that I'll just check my email before leaving…

[06:29] <AlexDaniel> and there was this ticket…

[06:31] <MasterDuke> well i'm definitely slowing down now, later all...

[06:32] <AlexDaniel> ah shit. I'll have to receive a parcel in 5 minutes

[06:32] <AlexDaniel> by the way

[06:33] <AlexDaniel> commit: pre-glr,HEAD say ((1, 2), <a b>).flatmap(&uc).join('|');

[06:33] <committable6> AlexDaniel, ¦«pre-glr»: 1|2|A|B␤¦«HEAD»: 1 2|A B

[06:33] <AlexDaniel> :|

[06:33] <AlexDaniel> commit: pre-glr,HEAD say ((1, 2), <a b>).map(&uc).join('|');

[06:33] <committable6> AlexDaniel, ¦«pre-glr,HEAD»: 1 2|A B

[06:33] <AlexDaniel> WHAT'S THE POINT THEN

[06:33] <samcv> also why do our docs have to have terrible page names

[06:33] <AlexDaniel> it looks like a pre-glr wart

[06:33] <samcv> …/$COLON$COLON$THINGY

[06:33] <samcv> that's totally un-needed

[06:33] * AlexDaniel giggles

[06:36] <samcv> https://docs.perl6.org/type/IO$COLON$COLONPath

[06:36] <samcv> heh

[06:36] <samcv> https://docs.perl6.org/type/IO::Path#index-entry-%3Arw going here works tho

[06:37] <samcv> $c->req->url->path( $c->req->url->path =~ s/::/\$COLON\$COLON/gr )

[06:37] * samcv :(

[06:40] <AlexDaniel> samcv: first of all, the whole thing right now is statically generated

[06:40] <samcv> yeah

[06:40] <samcv> but what part of it does that

[06:41] <samcv> at least htmlify.p6 doesn't seem to

[06:41] <samcv> but i see it in the .pl file that i think acts as a server or some-such

[06:44] <AlexDaniel> samcv: so the idea is that we have to escape some of them anyway…

[06:44] <AlexDaniel> for example, what should we do with leading dots?

[06:45] <AlexDaniel> as in https://docs.perl6.org/routine/$FULL_STOP$FULL_STOP%5E

[06:46] *** bjz joined
[06:47] <samcv> heh urban dictionary is blocked here "This site was categorized in: Humor, Research/Reference, Adult Themes"

[06:47] <samcv> funny

[06:47] *** shayan_ left
[06:49] *** Wanderer68 joined
[06:51] *** RabidGravy joined
[06:55] *** brrt joined
[07:02] *** labster joined
[07:02] *** cpage_ joined
[07:03] *** nightfrog joined
[07:04] *** bjz left
[07:10] <samcv> https://github.com/showcases/programming-languages?s=stars github's has languages which have less stars than rakudo :(

[07:10] <samcv> Sad!

[07:10] <samcv> we have like 800 stars and gosu-lang has only 169

[07:10] *** shayan_ joined
[07:11] <brrt> and swift has a billion stars, and it sucks, so whats your point :-P

[07:11] <samcv> also can somebody with admin powers https://github.com/rakudo/rakudo Rakudo Perl — Perl 6 on MoarVM and the JVM http://rakudo.org/

[07:11] <samcv> use an M-dash here instead of two hyphen-minus's

[07:12] <brrt> (i know, i know, swift probably doesn't suck, it did make me frown a bit when it was first introduced, but it's a very reasonable, dare i say corporate compromise between design constraints)

[07:13] <brrt> TIL: Cisco maintains ChezScheme

[07:14] <samcv> u: horizontal bar

[07:14] <unicodable6> samcv, U+2015 HORIZONTAL BAR [Pd] (―)

[07:14] <unicodable6> samcv, U+21EC UPWARDS WHITE ARROW ON PEDESTAL WITH HORIZONTAL BAR [So] (⇬)

[07:14] <unicodable6> samcv, U+22F3 ELEMENT OF WITH VERTICAL BAR AT END OF HORIZONTAL STROKE [Sm] (⋳)

[07:14] <unicodable6> samcv, https://gist.github.com/a9cb56e1deafb15772ad91831ecf56ab

[07:14] <samcv> that or horizontal bar, which is used for like quotations and things

[07:14] <samcv> Perl 6 is the best! ― samcv

[07:14] *** xtreak left
[07:16] *** bjz joined
[07:17] *** xtreak joined
[07:18] <RabidGravy> there's a ready supply of Apple fanatics who will readily "like" something made by Apple however shit it might seem to the rest of humanity

[07:19] <samcv> it has a cool name tho

[07:21] <chee> TEttinger: what did you call me

[07:21] <BenGoldberg> rakudo has one more star now than it did a minute ago ;)

[07:22] <BenGoldberg> Say, is there anyone here who hasn't *-ed rakudo?

[07:23] <RabidGravy> probably

[07:23] <TEttinger> oh, heh. chee, i was spelling out the mispronounciation of mischievous

[07:23] <RabidGravy> apparently I hadn't :)

[07:23] <samcv> heh

[07:24] <moritz> \o

[07:24] * samcv waves

[07:28] *** BenGoldberg left
[07:34] *** darutoko joined
[07:35] *** aries_liuxueyang left
[07:37] *** cpage_ left
[07:39] *** cpage_ joined
[07:39] * moritz particles

[07:40] *** xtreak left
[07:42] *** xtreak joined
[07:48] *** cpage_ left
[07:49] *** Actualeyes left
[07:49] *** cpage_ joined
[07:51] *** nightfrog left
[07:52] *** Actualeyes joined
[07:55] *** brrt left
[08:05] *** cpage_ left
[08:08] *** astj joined
[08:12] *** darutoko left
[08:14] *** committable6 left
[08:14] *** statisfiable6 left
[08:16] *** bjz left
[08:16] *** bhm joined
[08:20] *** Actualeyes left
[08:21] *** Wanderer68 left
[08:21] *** TEttinger joined
[08:22] *** brrt joined
[08:22] *** Actualeyes joined
[08:24] *** shayan_ left
[08:24] *** Cabanossi left
[08:27] *** kybr joined
[08:27] *** zb joined
[08:28] *** bpmedley left
[08:28] *** dustinm` joined
[08:29] *** cpage_ joined
[08:29] *** stux|RC-only joined
[08:31] *** revere left
[08:31] *** [particle] left
[08:31] *** cibs left
[08:33] *** atta joined
[08:34] *** BuildTheRobots left
[08:34] *** ggherdov left
[08:34] *** timeless left
[08:35] *** mrsolo left
[08:35] *** PotatoGim left
[08:35] *** bjz joined
[08:37] *** mawkish__ joined
[08:37] *** mawkish_ left
[08:37] *** cibs joined
[08:37] *** matt_ joined
[08:37] *** MasterDuke joined
[08:37] *** [particle] joined
[08:37] *** tbrowder joined
[08:37] *** ilmari joined
[08:37] *** Gothmog_ joined
[08:37] *** ccakes joined
[08:37] *** setty1 joined
[08:37] *** olinkl joined
[08:37] *** xiaomiao joined
[08:37] *** avalenn joined
[08:37] *** mst joined
[08:37] *** romrador joined
[08:37] *** camelia joined
[08:37] *** nine joined
[08:37] *** nebuchadnezzar joined
[08:37] *** MilkmanDan joined
[08:37] *** Alikzus joined
[08:37] *** drrho joined
[08:37] *** erdic joined
[08:37] *** obra joined
[08:37] *** forkbomb joined
[08:37] *** webstrand joined
[08:37] *** jantore joined
[08:37] *** rightfold joined
[08:37] *** vike joined
[08:37] *** kmwallio joined
[08:37] *** b2gills joined
[08:37] *** bitmap joined
[08:37] *** captain-adequate joined
[08:37] *** stmuk joined
[08:37] *** Woodi joined
[08:37] *** ShoaibJahejo joined
[08:37] *** adhoc joined
[08:37] *** UgJkA joined
[08:37] *** Charlie joined
[08:37] *** saki_ joined
[08:37] *** kshannon_ joined
[08:37] *** Praise joined
[08:37] *** ambs joined
[08:37] *** profan joined
[08:37] *** pochi joined
[08:37] *** mspo joined
[08:37] *** eyck joined
[08:37] *** japhb joined
[08:37] *** spider-mario joined
[08:37] *** moon.freenode.net sets mode: +v camelia

[08:37] *** ponbiki joined
[08:37] *** jkva joined
[08:37] *** go|dfish joined
[08:37] *** kent\n joined
[08:37] *** zoosha_ joined
[08:37] *** eater joined
[08:37] *** freeze joined
[08:37] *** Unavowed joined
[08:37] *** El_Che joined
[08:37] *** diego_k joined
[08:37] *** SHODAN joined
[08:37] *** Possum joined
[08:37] *** sunnavy joined
[08:37] *** Hotkeys joined
[08:37] *** ilbelkyr joined
[08:37] *** Spot__ joined
[08:37] *** yeltzooo joined
[08:37] *** mniip joined
[08:37] *** gfldex joined
[08:37] *** salparadise joined
[08:37] *** charsbar______ joined
[08:37] *** alnewkirk joined
[08:37] *** raydiak joined
[08:37] *** mtj_ joined
[08:37] *** dontbe^2 joined
[08:37] *** cosimo_ joined
[08:37] *** dudz joined
[08:37] *** adrusi joined
[08:37] *** dylanwh joined
[08:37] *** mithaldu_ joined
[08:37] *** TeamBlast joined
[08:37] *** BinGOs joined
[08:37] *** mindos joined
[08:37] *** amalia__ joined
[08:37] *** inokenty joined
[08:37] *** cxreg joined
[08:37] *** notbenh_ joined
[08:37] *** eythian joined
[08:37] *** musca joined
[08:37] *** jonadab joined
[08:37] *** Kaffe joined
[08:37] *** broquaint joined
[08:37] *** roguelazer joined
[08:37] *** moritz joined
[08:37] *** rjbs joined
[08:37] *** jnthn joined
[08:37] *** Util joined
[08:37] *** luis joined
[08:37] *** kst joined
[08:37] *** JimmyZ joined
[08:37] *** jervo joined
[08:38] *** ingy joined
[08:38] <gfldex> .tell samcv the URL rewriting happens at the top of lib/Pod/Htmlify.pm6 and is done that way because of NTFS.

[08:38] <yoleaux> gfldex: I'll pass your message to samcv.

[08:38] <samcv> hm

[08:38] <yoleaux> 08:37Z <gfldex> samcv: the URL rewriting happens at the top of lib/Pod/Htmlify.pm6 and is done that way because of NTFS.

[08:38] *** avuserow joined
[08:39] <samcv> then can't you just use html entities

[08:39] *** revere joined
[08:39] *** vytas joined
[08:39] *** Cabanossi joined
[08:40] <samcv> or at least have the links, link for : instead of $COLON?

[08:40] <samcv> like on the docs' pages

[08:40] <samcv> since obviously you can use the verbatim ones in the address bar

[08:40] *** Spot__ left
[08:40] <samcv> or maybe only do that for building on windows or something

[08:41] *** nowan joined
[08:42] *** peteretep left
[08:42] *** timeless joined
[08:43] *** tomaw joined
[08:44] *** sivoais joined
[08:45] *** mrsolo joined
[08:47] *** w4and0er96 joined
[08:47] *** PotatoGim joined
[08:49] *** ggherdov joined
[08:51] *** peteretep joined
[08:56] <gfldex> samcv: check on OS is an option. Not sure what happens when you try to save a file with a colon locally or if there are problems with printing.

[08:56] <gfldex> i will give it a try

[08:56] *** zakharyas joined
[08:56] <samcv> printing?

[08:56] *** ggherdov left
[08:56] <samcv> like to the console?

[08:57] <gfldex> printing like on dead trees (and yes, there may be bugs)

[08:58] *** ggherdov joined
[08:58] <gfldex> what does $*KERNEL say on windows?

[08:59] *** Spot__ joined
[08:59] <samcv> you can just check $*DISTRO.is-win or something i think

[09:00] <samcv> yeah that's it

[09:00] <samcv> not sure what it says on windows though

[09:00] <samcv> m: warn

[09:00] <camelia> rakudo-moar b120ac: OUTPUT«Warning: something's wrong␤  in block <unit> at <tmp> line 1␤»

[09:00] <samcv> can that be changed to: Warning: something’s wrong

[09:01] <samcv> with a proper apostrophe

[09:02] <samcv> u: apostrophe

[09:02] <samcv> lame unicodable

[09:05] *** xtreak left
[09:06] <dalek> perl6.org: 3f9216e | (Naoum Hankache)++ | includes/menu-nav:

[09:06] <dalek> perl6.org: doc.perl6.org -> docs.perl6.org

[09:06] <dalek> perl6.org: 

[09:06] <dalek> perl6.org: https://doc.perl6.org/language/faq redirects to https://docs.perl6.org/language/faq  

[09:06] <dalek> perl6.org: Update the link.

[09:06] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/3f9216ef0c

[09:06] <dalek> perl6.org: f7bf002 | (Juan Julián Merelo Guervós)++ | includes/menu-nav:

[09:06] <dalek> perl6.org: Merge pull request #69 from hankache/patch-1

[09:06] <dalek> perl6.org: 

[09:06] <dalek> perl6.org: doc.perl6.org -> docs.perl6.org

[09:06] <dalek> perl6.org: Thanks for the correction.

[09:06] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/f7bf002aa0

[09:12] *** xtreak joined
[09:14] <moritz> uhm, since when is docs.perl6.org the official URL?

[09:14] <moritz> didn't it used to be doc.perl6.org?

[09:15] *** BuildTheRobots joined
[09:18] *** leego left
[09:18] *** leego joined
[09:20] <moritz> now we have a weird mixture of doc. and docs. links

[09:20] <moritz> I'd like to change the canonical URL back to doc.perl6.org, as it was before 2016-06

[09:20] <moritz> and unify the links back to doc.perl6.org

[09:20] <moritz> any objections?

[09:23] <dalek> doc: 1ba5cc3 | gfldex++ | / (2 files):

[09:23] <dalek> doc: make filename/link rewrite depending on OS

[09:23] <dalek> doc: review: https://github.com/perl6/doc/commit/1ba5cc3a2b

[09:23] *** bhm left
[09:23] <gfldex> moritz: we refere to them as The Docs. So the url makes sense.

[09:23] *** bhm joined
[09:24] *** aindilis left
[09:24] <moritz> gfldex: the problem is that before 2016.06, the canoncial URL was doc. and not docs., and links change very slowly on the Internets

[09:24] <moritz> and I hate useless plurals

[09:25] <gfldex> both links work

[09:25] <moritz> then there's no problem if I change it back?

[09:26] <gfldex> There is more on that site then the documentation for Perl 6, so the plural is correct.

[09:27] <gfldex> and it's likely to get more

[09:27] <moritz> uhm, what else is there?

[09:27] <gfldex> https://docs.perl6.org/programs.html

[09:27] <moritz> so that's not Perl 6 documentation?

[09:28] <gfldex> do we have to start that discussion again?

[09:28] <moritz> I've never had that discussion before

[09:28] <gfldex> there is no need to change it beside your feelings. Please don't change it.

[09:28] <moritz> but when I started doc.perl6.org, I did discuss the naming, and doc. was the result

[09:29] <moritz> ah well, I give up

[09:29] *** moritz left
[09:29] <gfldex> The discussion I refere to is that Perl 6 the language is not the same as the Perl 6 Compiler.

[09:30] <gfldex> my last commit may break links to operators. We have to revert it if it does.

[09:34] *** travis-ci joined
[09:34] <travis-ci> Doc build errored. Wenzel P. P. Peppmeyer 'make filename/link rewrite depending on OS'

[09:34] <travis-ci> https://travis-ci.org/perl6/doc/builds/189451697 https://github.com/perl6/doc/compare/e1cb0fae03ad...1ba5cc3a2b1e

[09:34] *** travis-ci left
[09:53] <dalek> doc: 930e578 | gfldex++ | / (2 files):

[09:53] <dalek> doc: Revert "make filename/link rewrite depending on OS"

[09:53] <dalek> doc: 

[09:53] <dalek> doc: This reverts commit 1ba5cc3a2b1e5665c289860986a46004dacba727.

[09:53] <dalek> doc: review: https://github.com/perl6/doc/commit/930e57841e

[09:54] <gfldex> samcv: I'm sorry, Dave. I'm afraid I can't do that.

[10:00] <samcv> i don't like doc.perl6.org, docs sounds better to me

[10:00] <lizmat> samcv: they both work ?

[10:01] <samcv> yeah they do

[10:01] <lizmat> ah, that was the point

[10:01] * lizmat should backlog more before saying anything

[10:02] <samcv> gfldex, did youe check the build log?

[10:02] <samcv>  Install [FAIL] for Pod::To::BigPage:ver('0.2.1'):auth('Wenzel P. P. Peppmeyer'): hm

[10:02] <gfldex> there is a heisenbug in IO::Socket::SSL

[10:05] <lizmat> .oO( find it! :-)

[10:06] *** cpage_ left
[10:06] <El_Che> hellos

[10:07] <El_Che> so, are people booking their train tickets for fosdem yet? :)

[10:08] <dalek> doc: 088b404 | samcv++ | .travis.yml:

[10:08] <dalek> doc: Use travis_retry for installing the modules

[10:08] <dalek> doc: 

[10:08] <dalek> doc: https://irclog.perlgeek.de/perl6/2017-01-06#i_13868005

[10:08] <dalek> doc: review: https://github.com/perl6/doc/commit/088b404ae6

[10:09] <samcv> also gfldex this heisenbug isn't related to not being able to have systems that support it not have to use $COLON and such?

[10:09] <samcv> also idc what the format on disk is

[10:09] <gfldex> samcv: it's not related

[10:09] <samcv> the default links should just be the actual characters

[10:11] <gfldex> there are rules in .htaccess already. If you think it's important, feel free to add more.

[10:13] *** rindolf joined
[10:13] *** xtreak left
[10:21] *** AlexDaniel joined
[10:22] *** hobbs joined
[10:31] *** tokomer joined
[10:34] *** labster left
[10:35] *** travis-ci joined
[10:35] <travis-ci> Doc build passed. Wenzel P. P. Peppmeyer 'Revert "make filename/link rewrite depending on OS"

[10:35] <travis-ci> https://travis-ci.org/perl6/doc/builds/189457921 https://github.com/perl6/doc/compare/1ba5cc3a2b1e...930e57841e4d

[10:35] *** travis-ci left
[10:41] *** cpage_ joined
[10:45] *** xtreak joined
[10:45] *** xtreak left
[10:48] *** xtreak joined
[10:49] *** xtreak left
[10:49] *** travis-ci joined
[10:49] <travis-ci> Doc build passed. Samantha McVey 'Use travis_retry for installing the modules

[10:49] <travis-ci> https://travis-ci.org/perl6/doc/builds/189461676 https://github.com/perl6/doc/compare/930e57841e4d...088b404ae642

[10:49] *** travis-ci left
[10:50] *** Ven joined
[10:56] *** astj left
[10:56] *** astj joined
[10:58] *** wamba joined
[11:01] *** astj left
[11:09] <dalek> ecosystem: f67f736 | gfldex++ | META.list:

[11:09] <dalek> ecosystem: Pod::To::BigPage was transfered to Team Perl 6

[11:09] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/f67f73677f

[11:10] *** rafasch joined
[11:11] *** tokomer left
[11:14] *** TEttinger left
[11:23] *** pmurias joined
[11:35] *** rafasch left
[11:38] *** rafaelsch joined
[11:46] *** inokenty left
[11:50] *** inokenty joined
[11:52] *** jrernst joined
[11:59] *** gregf_ joined
[11:59] *** jrernst left
[12:02] <rafaelsch> I was thinking about what to include in *

[12:02] <SmokeMachine> Is the ast method on Mach changed to the made method?

[12:03] <rafaelsch> We should provide what GlibC provides, at least.

[12:04] <jnthn> SmokeMachine: No, they are equivalent

[12:04] *** jraglin joined
[12:05] <jnthn> SmokeMachine: `.ast` has been there from the start; `.made` was added to go better with the `make` sub

[12:05] *** curt_ joined
[12:05] <SmokeMachine> jnthn: any difference?

[12:05] <SmokeMachine> jnthn: thanks!

[12:05] <jnthn> They're both accessor methods to the very same attribute :)

[12:07] <jnthn> There was some discussion of whether to toss .ast, but it reads so very nicely when writing compiler-y things.

[12:17] <SmokeMachine> jnthn: thanks!

[12:21] *** mscha joined
[12:21] <mscha> m: class Foo { has $.foo; has $bar; }; my $f = Foo.new(:foo(1), :bar(2)); say $f;  # Why no error?

[12:21] <camelia> rakudo-moar 3c52aa: OUTPUT«Foo.new(foo => 1)␤»

[12:22] <curt_> $bar is a perfectly fine class (not instance) variable

[12:23] <curt_> probably should still warn in some way

[12:25] <ilmari> m: class Foo { has $.foo; has $bar; method bar { $bar} }; my $f = Foo.new(:foo(1), :bar(2)); say $f; say $f.bar

[12:25] <camelia> rakudo-moar 3c52aa: OUTPUT«Foo.new(foo => 1)␤(Any)␤»

[12:26] <ilmari> m: class Foo { has $.foo; }; my $f = Foo.new(:foo(1), :wibble(2));

[12:26] <camelia> rakudo-moar 3c52aa: ( no output )

[12:27] <curt_> extra named variables that aren't used are ignored by the default new() (in case a subclass/superclass wants them)

[12:27] <ilmari> that's what I thought

[12:31] *** kalkin- joined
[12:31] <kalkin-> Is there some way to call a method on object destruction?

[12:32] <kalkin-> or at least something like python with Foo: bar, which executes some close function after I'm done working with an object

[12:34] *** lukaramu joined
[12:38] <arnsholt> You can use the LEAVE phaser to execute code on scope exit

[12:40] <kalkin-> I don't think it's what I need (or may be I'm misunderstanding the docs). I just want to call a function when the GC removes the object

[12:41] <rafaelsch> kalkin-: a Methoc called DESTROY is called when the object is garbage collected, but it's not guaranteed.

[12:42] <kalkin-> m: class F { method DESTROY { "asd".say } }; my $f = F.new; my $f = Nil;

[12:42] <camelia> rakudo-moar 3c52aa: OUTPUT«Potential difficulties:␤    Redeclaration of symbol '$f'␤    at <tmp>:1␤    ------> 3OY { "asd".say } }; my $f = F.new; my $f7⏏5 = Nil;␤»

[12:42] <kalkin-> m: class F { method DESTROY { "asd".say } }; my $f = F.new; $f = Nil;

[12:42] <camelia> rakudo-moar 3c52aa: ( no output )

[12:43] <kalkin-> hmm how do I test it? or I dont?

[12:43] <kalkin-> (just pray and hope?)

[12:43] <jnthn> m: m: class F { method DESTROY { "asd".say } }; for ^10000 { my $f = F.new; }

[12:43] <camelia> rakudo-moar 3c52aa: OUTPUT«asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd␤asd…»

[12:43] <jnthn> Well, if you want to test what it does you can call it :)

[12:44] <SmokeMachine> Any idea to how could I serialize a block?

[12:44] <kalkin-> jnthn: thanks!

[12:44] <jnthn> It's called after the object is GC'd, which isn't too easy to reason about

[12:44] <jnthn> Because of the GC being generational

[12:45] <rafaelsch> kalkin: like I said, it's not guaranteed. When exiting, P6 usually doesn't bother, for example.

[12:45] <rafaelsch> kalkin-: like I said, it's not guaranteed. When exiting, P6 usually doesn't bother, for example.

[12:45] <jnthn> Also if it's never collected by program exit then we just leave cleanup to the OS.

[12:45] <kalkin-> rafaelsch: ohh I want to execute it on exit

[12:45] <jnthn> Because it's far faster.

[12:45] <jnthn> If you need timeliness of to be sure, better to do an explicit call

[12:45] <jnthn> I'd like something like the Python with or C# using at some point also, fwiw.

[12:46] <jnthn> lunch &

[12:46] <rafaelsch> kalkin-: If you want to execute something on exit, use an END block

[12:47] <kalkin-> rafaelsch: this is what i needed. I'm not maried to calling the function on object destruction, END works perfectly for my current usecase

[12:47] <kalkin-> thanks guys!

[12:47] <rafaelsch> np

[12:48] <kalkin-> but TIL that perl6 doesn't have something like Closeable role. Given that Perl6 "stole" a lot from other "modern" programming languages, I kind of expected it

[12:49] <kalkin-> s/Closable/Autocloseable/

[12:50] *** astj joined
[12:54] *** astj left
[12:55] <rafaelsch> kalkin-: It was tought about and rejected.

[12:55] <kalkin-> rafaelsch: do you remember why?

[12:56] <rafaelsch> http://irclog.perlgeek.de/perl6/2015-07-22#i_10938226

[12:56] <kalkin-> I mean yes, you can probably do it with phasers, but it's perl there is more than …

[12:57] <rafaelsch> kalkin-: It's faster this way. It's all about trade offs.

[12:58] <rafaelsch> Like jnthn said, if you want to make sure, be explicit.

[13:00] <rafaelsch> You can't assume the GC will even run, at all. So a method called on method destruction isn't guaranteed to be run. Like above, when you asigned Nil to a variable holding an object, it didn't bother the GC.

[13:00] <kalkin-> rafaelsch: my use case is solved. I just tried to understand the reasoning, behind it. your link was a nice source for info

[13:01] <rafaelsch> The GC has a mind of it's own.

[13:02] <kalkin-> rafaelsch: I think the python way can be implemented currently in perl6

[13:03] <kalkin-> you have a role Closable which provides a proto close. you have a method with which receives a Closable object and a block. It executes the block and calls close after that

[13:04] <kalkin-> of course you would have to take care of some minor details like exception handling & co, but this should work out

[13:04] <rafaelsch> Why not just call close directly?

[13:04] <kalkin-> aehm, dunno? may be i coded to much python?

[13:04] <kalkin-> :)

[13:04] <kalkin-> the pattern kind of stuck in my head

[13:05] <rafaelsch> Just say what you mean, keep a list of objects somewhere and tell them to go away when you don't need them anymore.

[13:11] <arnsholt> The problem is deeper than just that you can't be guaranteed that the finalizer will be run

[13:11] <arnsholt> Nor can you have any guarantees about the *order* in which the finalizers are run

[13:12] <arnsholt> So child objects of your objects may have their finalizers run *before* you

[13:12] <jnthn> That's not to mention the question of resurrection semantics :)

[13:12] <jnthn> (We have the usual "you only live twice" semantics)

[13:13] <jnthn> fwiw I think it'd be reasonable to have a construct that calls .close for you on scope exit.

[13:13] <arnsholt> (Incidentally, this is one of the reasons Python can't really change out their GC algorithm: they guarantee things about finalizers that more or less force some kind of refcounting to be done)

[13:13] <jnthn> It's still explicit, but saves you the boilerplate.

[13:13] <jnthn> Granted, LEAVE $foo.close; isn't a lot of boilerplate

[13:13] <jnthn> (LEAVE means it's called even if you leave the block through an exception)

[13:15] <kalkin-> @LEAVE ahh, nice

[13:15] <kalkin-> thanks

[13:17] <kalkin-> Hmm, how does php solve this? AFAIK in php5 there was a __destruct method called

[13:18] <kalkin-> hmm from the docs it looks like it's just called on exit

[13:18] *** FROGGS joined
[13:18] <kalkin-> not when an object ist destructed

[13:19] <rafaelsch> Exactly the opposite of what would be useful, ahahahaha.

[13:23] <kalkin-> the only upside of php 5 is that it's still faster than python/ruby and the syntax feels like a generic c like language

[13:24] <rafaelsch> I'm glad the vomit emoji is comming, very useful to talk about PHP

[13:24] <kalkin-> ^^

[13:25] <kalkin-> Hmm then we could call Inline::PHP → Inline::VOMIT_EMOJI :)

[13:27] <rafaelsch> Inline::🤮

[13:28] *** mawkish__ left
[13:29] *** wamba left
[13:29] <notviki> What's up with the PHP hate in #perl6 all of a sudden?

[13:29] <notviki> I thought we had #elistists for that.

[13:30] <rafaelsch> It's not hate. It works. It's just ugly, that's all.

[13:30] *** holli joined
[13:31] <kalkin-> If you know how to get round the rough edges, PHP is a working horse and a joy to develop. There is no stupid restarting of the whole framework just because you changed few lines, yes RoR I'm looking at you

[13:32] <kalkin-> also it's FAST!

[13:33] <rafaelsch> Well, it is Turing complete.

[13:33] *** lucasb joined
[13:34] *** bjz_ joined
[13:35] *** Gasher joined
[13:35] *** bjz left
[13:39] <kalkin-> excel macros and c++ templating system too.

[13:43] *** rurban joined
[13:44] *** rurban left
[13:45] <rafaelsch> kalkin-: Have a look at this: https://docs.perl6.org/type/Signature#Type_Captures

[13:45] <rafaelsch> And what do you mena by "Excel Macros"?

[13:45] <rafaelsch> mean*

[13:47] <lucasb> .oO( what do you mean by "what do you mena"? )

[13:47] <kalkin-> rafaelsch: http://www.felienne.com/archives/2974 <= Excel Turing Machine

[13:48] <kalkin-> beeing Turing complete isn't a good or bad criteria for anything. It's just a fact

[13:52] <rafaelsch> I know being Turing complete isn't a criteria, that's the joke.

[13:53] <rafaelsch> "what do you mena" -> "do what you mean": If you want to keep track of objects and finalize them, just say that in the program.

[13:53] <kalkin-> rafaelsch: I got it. Throwing in excel macros and c++ templating system wasn't serious either.

[13:54] <kalkin-> :)

[13:54] *** effbiai joined
[13:54] *** effbiai left
[13:54] *** effbiai joined
[13:55] <rafaelsch> Well, P6 has something better than C++ templating. C++ templates are a big, fat mess. I gave you the link above.

[13:55] <kalkin-> rafaelsch: I've seen it, it's nice

[13:56] <rafaelsch> Read the whole page, it's essential reading.

[13:57] *** lucasb left
[14:06] <kalkin-> rafaelsch: k, thanks

[14:07] <rafaelsch> You're welcome.

[14:11] <dalek> perl6-most-wanted: 8725857 | (Tom Browder)++ | most-wanted/modules.md:

[14:11] <dalek> perl6-most-wanted: add notes

[14:11] <dalek> perl6-most-wanted: 

[14:11] <dalek> perl6-most-wanted: add notes about desired scope

[14:11] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/87258578cb

[14:12] *** mawkish__ joined
[14:19] *** mcmillhj joined
[14:19] *** moritz joined
[14:22] *** mscha left
[14:22] *** imcsk8 joined
[14:24] *** mcmillhj left
[14:24] *** nightfrog joined
[14:31] *** bwisti joined
[14:37] *** skids joined
[14:38] *** bjz_ left
[14:39] *** bjz joined
[14:50] *** buggable joined
[14:50] *** ChanServ sets mode: +v buggable

[14:50] *** huggable joined
[14:50] *** ChanServ sets mode: +v huggable

[15:00] *** CIAvash joined
[15:04] *** wamba joined
[15:06] *** bjz_ joined
[15:06] <kalkin-> :w

[15:06] <kalkin-> ups

[15:07] *** bjz left
[15:10] *** holli left
[15:13] *** famrani joined
[15:16] *** john51 left
[15:16] *** john51_ joined
[15:20] *** dalek left
[15:20] *** dalek joined
[15:20] *** ChanServ sets mode: +v dalek

[15:23] *** famrani left
[15:37] <[Coke]> m: say "\c[LATIN SMALL LETTER TURNED N]"

[15:37] <camelia> rakudo-moar dd5759: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name LATIN SMALL LETTER TURNED N␤at <tmp>:1␤------> 3say "\c[LATIN SMALL LETTER TURNED N7⏏5]"␤»

[15:40] <dalek> doc: ad95f91 | (Naoum Hankache)++ | doc/Language/variables.pod6:

[15:40] <dalek> doc: fix typo

[15:40] <dalek> doc: 

[15:40] <dalek> doc: switched of -> switched off

[15:40] <dalek> doc: review: https://github.com/perl6/doc/commit/ad95f917af

[15:40] <synopsebot6> Link: http://doc.perl6.org/language/variables

[15:40] <dalek> doc: dfbca44 | RabidGravy++ | doc/Language/variables.pod6:

[15:40] <dalek> doc: Merge pull request #1123 from hankache/patch-2

[15:40] <synopsebot6> Link: http://doc.perl6.org/language/variables

[15:40] <dalek> doc: 

[15:40] <dalek> doc: fix typo

[15:40] <dalek> doc: review: https://github.com/perl6/doc/commit/dfbca44bc8

[15:41] *** brrt left
[15:43] *** mawkish__ left
[15:43] *** mawkish__ joined
[15:51] <[Coke]> m: my %hash = ('a'=>{'a','b','c','d'}); say %hash<a>.WHAT # can someone hash me here?

[15:51] <camelia> rakudo-moar dd5759: OUTPUT«(Block)␤»

[15:52] *** raschip joined
[15:52] <notviki> m: my %hash = ('a'=>%('a','b','c','d')); say %hash<a>.WHAT

[15:52] <camelia> rakudo-moar dd5759: OUTPUT«(Hash)␤»

[15:52] <[Coke]> ... I swear I tried that. *sigh*. Danke. :)

[15:53] <jnthn> m: my %hash = ('a'=> hash 'a','b','c','d'); say %hash<a>.WHAT # also :)

[15:53] <camelia> rakudo-moar dd5759: OUTPUT«(Hash)␤»

[15:53] *** gregf_ left
[15:53] *** mawkish__ left
[15:53] *** mawkish__ joined
[15:54] *** MasterDuke_ joined
[15:54] *** rafaelsch left
[15:55] *** MasterDuke left
[15:55] *** MasterDuke_ is now known as MasterDuke

[15:55] <raschip> m: my %hash = ('a'=>@('a','b','c','d')); say %hash<a>.WHAT

[15:55] <camelia> rakudo-moar dd5759: OUTPUT«(List)␤»

[15:56] <raschip> What if I want array instead of list in this context.

[15:56] <raschip> ?

[15:56] <perlpilot> m:  my %hash = ('a'=>{'a','b','c','d'}); say %hash<a>.WHAT

[15:56] <camelia> rakudo-moar dd5759: OUTPUT«(Block)␤»

[15:56] *** infrabyte joined
[15:57] <perlpilot> oops

[15:57] <perlpilot> m: my %hash = 'a'=> ['a','b','c','d']; say %hash<a>.WHAT

[15:57] <camelia> rakudo-moar dd5759: OUTPUT«(Array)␤»

[15:57] <perlpilot> raschip: ^^

[15:57] <raschip> Right, the Array constructor is the same as P5.

[15:58] <raschip> m: my %hash = ('a'=>\('a','b','c','d')); say %hash<a>.WHAT

[15:58] <camelia> rakudo-moar dd5759: OUTPUT«(Capture)␤»

[15:58] <perlpilot> though it is a little weird that @() looks like an Array, but is Listy

[15:59] *** bjz_ left
[15:59] <raschip> It's better to keep the default, IMHO. But you're right, I can see that one could make an argument to make [] the list cronstructor and @() the array constructor.

[15:59] <[Coke]> m: m: my %hash = ('a'=>{'a','b','c',"{"}); say %hash<a>.WHAT;

[15:59] <camelia> rakudo-moar dd5759: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' ␤at <tmp>:1␤------> 3=>{'a','b','c',"{"}); say %hash<a>.WHAT;7⏏5<EOL>␤    expecting any of:␤        method arguments␤»

[15:59] *** infrabyte left
[15:59] <perlpilot> Is the only way to make Coke's first version work (with {}) by using => inside?

[16:00] <[Coke]> (I had a "{" in there somewhere, things got confused.)

[16:00] <perlpilot> m: my %hash = 'a'=> {'a' => 'b', 'c' => 'd' }; say %hash<a>.WHAT;

[16:00] <camelia> rakudo-moar dd5759: OUTPUT«(Hash)␤»

[16:01] <notviki> That's cause '{' in double qutoes are for blocks

[16:01] <notviki> m: "{"

[16:01] <camelia> rakudo-moar dd5759: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' ␤at <tmp>:1␤------> 3"{"7⏏5<EOL>␤    expecting any of:␤        double quotes␤        term␤»

[16:01] *** mawkish__ left
[16:01] <notviki> m: say q♥{♥

[16:01] <camelia> rakudo-moar dd5759: OUTPUT«{␤»

[16:01] *** mawkish__ joined
[16:02] <perlpilot> m: my @x = <a b c d>;  my %hash = 'a'=> { @x } ; say %hash<a>.WHAT;  

[16:02] <camelia> rakudo-moar dd5759: OUTPUT«(Block)␤»

[16:02] <raschip> m: my %hash = (q♥a♥=>{q♥a♥,q♥b♥,q♥c♥,q♥{♥}); say %hash<a>.WHAT;

[16:02] <camelia> rakudo-moar dd5759: OUTPUT«(Block)␤»

[16:02] <perlpilot> I can see how that one would be surprising

[16:02] <notviki> $_ has the same effect. Using { } for hash construction is a Bad Idea™

[16:03] *** lukaramu left
[16:03] <raschip> m: my %hash = (q♥a♥=><q♥a♥,q♥b♥,q♥c♥,q♥{♥>); say %hash<a>.WHAT;

[16:03] <camelia> rakudo-moar dd5759: OUTPUT«(Str)␤»

[16:03] *** lukaramu joined
[16:04] <perlpilot> notviki: it's only a bad idea if you also don't have => inside.  {} with => works as expected AFAIK

[16:05] <raschip> m: my %hash = (q♥a♥=>{q♥a♥,q♥b♥,q♥c♥,q♥{♥=>$_}); say %hash<a>.WHAT;

[16:05] <camelia> rakudo-moar dd5759: OUTPUT«(Block)␤»

[16:05] <raschip> m: my %hash = (q♥a♥=>{q♥a♥=>q♥b♥,q♥{♥=>$_}); say %hash<a>.WHAT;

[16:05] <camelia> rakudo-moar dd5759: OUTPUT«(Block)␤»

[16:05] <perlpilot> ok. maybe not

[16:06] <perlpilot> anyway, I think there are some surprises there for a P5 person.

[16:06] <raschip> m: my %hash = (q/a/=>{q[a]=>q[b],q♥{♥=>$_}); say %hash<a>;

[16:06] <camelia> rakudo-moar dd5759: OUTPUT«-> ;; $_? is raw { #`(Block|72491736) ... }␤»

[16:08] <notviki> m: dd { a => 42 }.WHAT

[16:08] <camelia> rakudo-moar dd5759: OUTPUT«Hash␤»

[16:08] <notviki> m: my $z; dd { a => $z }.WHAT

[16:08] <camelia> rakudo-moar dd5759: OUTPUT«Hash␤»

[16:08] <notviki> m: dd { a => $_ }.WHAT

[16:08] <camelia> rakudo-moar dd5759: OUTPUT«Block␤»

[16:09] <raschip> m: dd < a => $_ >.WHAT

[16:09] <camelia> rakudo-moar dd5759: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3dd < a =>7⏏5 $_ >.WHAT␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement modifier…»

[16:09] *** mawkish__ left
[16:09] <raschip> m: dd %( a => $_ ).WHAT

[16:09] <camelia> rakudo-moar dd5759: OUTPUT«Hash␤»

[16:09] *** mawkish__ joined
[16:10] <[Coke]> crap, I forgot my utf-8 ain't working in tmux.

[16:15] <pmurias> masak: Type Systems as Macros , http://www.ccs.neu.edu/home/stchang/pubs/ckg-popl2017.pdf - I haven't full read it yet but seems interesting

[16:16] <[Coke]> https://github.com/coke/p6-unicode-mangler

[16:17] *** newbie1 joined
[16:19] *** kyan joined
[16:24] <notviki> don't you mean.... ɹǝʃƃuɐɯ-ǝpoɔıuu-9p/ǝʞoɔ/ɯoɔ˙quɥʇıƃ//:spʇʇɥ

[16:25] <notviki> 𝐡𝐭𝐭𝐩𝐬://𝐠𝐢𝐭𝐡𝐮𝐛.𝐜𝐨𝐦/𝐜𝐨𝐤𝐞/𝐩𝟔-𝐮𝐧𝐢𝐜𝐨𝐝𝐞-𝐦𝐚𝐧𝐠𝐥𝐞𝐫

[16:26] *** melezhik joined
[16:26] <notviki> ⒣⒯⒯⒫⒮://⒢⒤⒯⒣⒰⒝.⒞⒪⒨/⒞⒪⒦⒠/⒫⑹-⒰⒩⒤⒞⒪⒟⒠-⒨⒜⒩⒢⒧⒠⒭ 

[16:26] <notviki> 𝕙𝕥𝕥𝕡𝕤://𝕘𝕚𝕥𝕙𝕦𝕓.𝕔𝕠𝕞/𝕔𝕠𝕜𝕖/𝕡𝟞-𝕦𝕟𝕚𝕔𝕠𝕕𝕖-𝕞𝕒𝕟𝕘𝕝𝕖𝕣 

[16:26] <notviki> cool

[16:28] *** hankache joined
[16:28] <raschip> Does it generate Zalgo?

[16:28] <geekosaur> my current font butchered the second one, it looks vaguely like a ransom note >.>

[16:29] <raschip> The one in bold?

[16:29] <geekosaur> yeh

[16:29] <geekosaur> the letters all have different x-heights

[16:30] <notviki> raschip:  h̹t̘t̮p߱s̈́:᷄/͆/߳gͯįt͝h̳u̽b͝.̭c̈́o̲m߰/̙cͪo҇k͔e᷅/ͥp̲6̜-͐u͎n̰i͑c̲o̤d߭e߰-̡m߭a͍nͪg߯l͛e̶r̋

[16:30] <notviki> Why is it called zalgo?

[16:30] <notviki> m: "l͛".uninames.say

[16:30] <camelia> rakudo-moar dd5759: OUTPUT«(LATIN SMALL LETTER L COMBINING ZIGZAG ABOVE)␤»

[16:31] <raschip> http://knowyourmeme.com/memes/zalgo

[16:31] <notviki> uuuuh "Warning: This page contains material that may be considered not safe for work."

[16:31] * notviki quickly closes it

[16:32] <raschip> It has "pussy" written on it, as far as I can tell.

[16:32] <raschip> "David Higgins[21] revealed that the text is an abuse of a Unicode feature" ABUSE?

[16:33] <raschip> The corporate filter I'm behind doesn't block it.

[16:34] <raschip> The origin is from here: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags#1732454

[16:34] <raschip> This one is SFW.

[16:34] <notviki> that's the origin? Why is that zalgo?

[16:35] <raschip> "a mere glimpse of the world of reg​ex parsers for HTML will ins​tantly transport a programmer's consciousness into a world of ceaseless screaming, he comes, the pestilent slithy regex-infection wil​l devour your HT​ML parser, application and existence for all time like Visual Basic only worse he comes he comes do not fi​ght he com̡e̶s, ̕h̵i​s un̨ho͞ly radiańcé destro҉ying all enli̍̈́̂̈́ghtenment, HTML tags 

[16:35] <raschip> -->ZA̡͊͠͝LGΌ<-- ISͮ̂҉̯͈͕̹̘̱ TO͇̹̺ͅƝ̴ȳ̳ TH̘Ë͖́̉ ͠P̯͍̭O̚​N̐Y̡ H̸̡̪̯ͨ͊̽̅̾̎Ȩ̬̩̾͛ͪ̈́̀́͘ ̶̧̨̱̹̭̯ͧ̾ͬC̷̙̲̝͖ͭ̏ͥͮ͟Oͮ͏̮̪̝͍M̲̖͊̒ͪͩͬ̚̚͜Ȇ̴̟̟͙̞ͩ͌͝S̨̥̫͎̭ͯ̿̔̀ͅ

[16:35] <melezhik> hi notviki: my yesterday question about alias to module function ... how can i make alias exportable as well?

[16:35] * notviki assumes it's some sort of weeabu thing

[16:36] <notviki> melezhik: is export

[16:36] <melezhik> constant &foo = %baz  is export ?

[16:36] <notviki> yeah

[16:37] <melezhik> s/%/&/

[16:37] <melezhik> ok will try

[16:37] <melezhik> thx

[16:37] <notviki> melezhik: it might be constant &foo is export = &baz

[16:37] <melezhik> ok, good

[16:37] <melezhik> will try then

[16:37] <melezhik> brb

[16:41] *** mawkish__ left
[16:41] <geekosaur> refernce to That Stackoverflow

[16:41] *** mawkish__ joined
[16:42] <geekosaur> (http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags )

[16:45] *** cdg joined
[16:47] *** nicq20 joined
[16:47] <nicq20> Hello o/

[16:47] <yoleaux> 5 Jan 2017 19:50Z <CIAvash> nicq20: 1+2 ==> (* / 5)()

[16:48] <raschip> notviki: only if you consider web development a "weaboo thing"

[16:50] <notviki> raschip: web development doesn't have zalgos, even if a random person decided to pretend of being zelgoified while ranting about HTML and regexes

[16:50] <raschip> It's a web develpers meme

[16:51] <raschip> You may think it's a niche meme, but that doesn't matter.

[16:52] <notviki> raschip: I didn't realize we had web in 1920s

[16:53] *** nightfrog is now known as culb

[16:53] <kalkin-> is it possible to reload a specific module on runtime?

[16:53] <notviki> kalkin-: the short answer is no.

[16:53] <raschip> Whe the 20's?

[16:53] <raschip> Why*

[16:54] *** Ven left
[16:54] <kalkin-> notviki: thanks

[16:55] <notviki> kalkin-: and long answer is with the new loading branch it may be possible to do some sort of hotloading hack. I recall mst was pondering it....

[16:59] <notviki> Hm, well I tried this right now, but it didn't load a new version: sub reload { "use Foo; &foo".EVAL }; my &foo = reload; foo; sleep 10; &foo = reload; foo

[16:59] <notviki> And then I tried this too sub reload ($v) { "use Foo:ver<$v>; &foo".EVAL }; my &foo = reload 1; foo; sleep 10; &foo = reload 2; foo

[16:59] <notviki> but it also didn't load a new version :/ 

[16:59] <notviki> Unsure how the lexical module loading is meant to work then...

[17:04] <[Coke]> m: say "0x1d54f".uniname

[17:04] <camelia> rakudo-moar dd5759: OUTPUT«DIGIT ZERO␤»

[17:04] <[Coke]> urk. dammit, cut and paste...

[17:05] <notviki> hm, even with this setup and different versions in the META files, it doesn't seem to do the trick: https://gist.github.com/zoffixznet/b380cf13348e280e789e2b4a18fae7ac

[17:06] <[Coke]> notviki: added a few of the ones you sampled above.

[17:06] <notviki> $ perl6 -Iv1 -Iv2 -e '{ use Foo:ver<1>; foo }; { use Foo:ver<2>; foo }'

[17:06] <notviki> one

[17:06] <notviki> I don't get how lexical module loading is meant to work then

[17:06] *** iH2O joined
[17:07] <raschip> kalkin-: did you have any idea of what you did?

[17:07] <kalkin-> raschip: sorry?

[17:07] *** iH2O left
[17:07] <notviki> $ perl6 -Iv1 -Iv2 -e '{ use Foo:ver<1>; Foo::foo }; { use Foo:ver<2>; Foo::foo }'

[17:07] <raschip> Do you see how notviki is right now?

[17:07] <notviki> one

[17:08] <notviki> What?

[17:08] <raschip> You're rambling.

[17:08] <notviki> Oh, sorry to interrumpt your silence

[17:09] <raschip> No, it's not a problem at all.

[17:09] <notviki> Good.

[17:10] <raschip> Me myself do the same thing in this same channel. Only when I do it, it's usealess.

[17:10] *** shayan_ joined
[17:11] <kalkin-> Well as long as notviki is having fun ☺

[17:12] *** shayan_ left
[17:13] <notviki> Heh, seems like it's precomp that's messing it up. If after I run it I reverse the loading order in the source, it keeps the old order until I toss the precomp files.

[17:13] <notviki> Guess nine will shine the light on this after vacation

[17:17] *** mawkish__ left
[17:17] *** geekosaur joined
[17:17] *** mawkish__ joined
[17:18] *** jebes joined
[17:19] *** zacts joined
[17:20] <jebes> So i'm trying to right a simple REST API with perl6, any recommendations? I'm having some problem's getting SCGI (https://github.com/supernovus/SCGI) to work...

[17:21] <notviki> I had some luck running a rudimentary app with HTTP::Server::Tiny

[17:21] <notviki> buggable: eco HTTP::Server::Tiny

[17:21] <buggable> notviki, HTTP::Server::Tiny 'a simple HTTP server for Perl6': https://github.com/tokuhirom/p6-HTTP-Server-Tiny

[17:21] <jebes> notviki: thanks!

[17:22] <notviki> I see folks recommending Bailador too, but IIRC it still can't do multiple requests at the same time, so a single request blocks everyone else.

[17:22] <jebes> Bailador looked like too much for this. I'm just writing a super simple Disqus clone

[17:24] *** hankache left
[17:31] <tadzik> Bailafor, too much? :o

[17:31] <jebes> Perl6 is too much ;)

[17:31] <notviki> hehe

[17:32] <jebes> So, is => literally just a pair?

[17:33] <notviki> more or less, some forms of it will be passed to routines as a named arg, while others will pass as a positional pair

[17:34] <notviki> m: sub wat (*@pos, *%named) { dd [ @pos, %named ] }; wat foo => 42; wat "foo" => 42"; wat 42 => 42; 

[17:34] <camelia> rakudo-moar dd5759: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3amed ] }; wat foo => 42; wat "foo" => 427⏏5"; wat 42 => 42;␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statem…»

[17:34] <notviki> m: sub wat (*@pos, *%named) { dd [ @pos, %named ] }; wat foo => 42; wat "foo" => 42; wat 42 => 42; 

[17:34] <camelia> rakudo-moar dd5759: OUTPUT«[[], {:foo(42)}]␤[[:foo(42)], {}]␤[[42 => 42], {}]␤»

[17:34] <notviki> m: dd WHAT 42 => 42

[17:34] <camelia> rakudo-moar dd5759: OUTPUT«Pair␤»

[17:35] <jebes> I do not have a font with u+2424 apparantly

[17:35] <notviki> m: "\x[2424]".uniname.say

[17:35] <camelia> rakudo-moar dd5759: OUTPUT«SYMBOL FOR NEWLINE␤»

[17:35] <notviki> heh

[17:38] <notviki> m: dd WHAT [ :42foo, :foo{;}, :foo{:42a}, :foo<bar ber>, :foo(42) ]; # Also this syntax; all of these get passed as named params

[17:38] <camelia> rakudo-moar dd5759: OUTPUT«Array␤»

[17:38] <notviki> -_-

[17:38] <notviki> m: dd [ :42foo, :foo{;}, :foo{:42a}, :foo<bar ber>, :foo(42) ]; # Also this syntax; all of these get passed as named params

[17:38] <camelia> rakudo-moar dd5759: OUTPUT«[:foo(42), :foo(-> ;; $_? is raw { #`(Block|50946320) ... }), :foo({:a(42)}), :foo(("bar", "ber")), :foo(42)]␤»

[17:39] <notviki> m: .WHAT.say for :42foo, :foo{;}, :foo{:42a}, :foo<bar ber>, :foo(42); # Also this syntax; all of these get passed as named params

[17:39] <camelia> rakudo-moar dd5759: OUTPUT«(Pair)␤(Pair)␤(Pair)␤(Pair)␤(Pair)␤»

[17:39] <notviki> \o/

[17:39] *** zakharyas left
[17:40] *** Tonik left
[17:40] <notviki> m: [ .WHAT, .value.WHAT ].say for :42foo, :foo{;}, :foo{:42a}, :foo<bar ber>, :foo(42); 

[17:40] <camelia> rakudo-moar dd5759: OUTPUT«[(Pair) (Int)]␤[(Pair) (Block)]␤[(Pair) (Hash)]␤[(Pair) (List)]␤[(Pair) (Int)]␤»

[17:41] *** mawkish__ left
[17:41] *** mawkish__ joined
[17:42] <notviki> m: [ .key.WHAT, .value.WHAT ].say given class Foo {}.new => class Bar {}.new

[17:42] <camelia> rakudo-moar dd5759: OUTPUT«[(Foo) (Bar)]␤»

[17:42] <notviki> neat

[17:42] <jebes> That just blew my mind

[17:42] <jebes> The only other languages I know that are that flexible are FORTH's and Lisps.

[17:43] <notviki> That's what we do ;)

[17:44] <jebes> Now the real question is: Can I write code terser than J or APL?

[17:44] <notviki> Well, you could write your own slang and change the syntax entirely, so I guess the answer is yes

[17:45] *** domidumont joined
[17:46] <jebes> Might be a fun project

[17:47] *** domidumont left
[17:48] *** shayan_ joined
[17:48] *** domidumont joined
[17:51] *** mawkish__ left
[17:51] *** mawkish__ joined
[17:52] <notviki> You can also use our patented compactifier technology to write zero-3space code

[17:52] <notviki> m: sub prefix:<⁣⁣⁣> is looser(&[,]) { say |@_ }; sub infix:<⁣⁣> {$^a*$^b}; sub infix:<⁣>{$^a+$^b}; ⁣⁣⁣ 3⁣⁣3; ⁣⁣⁣ 3⁣3

[17:52] <camelia> rakudo-moar dd5759: OUTPUT«9␤6␤»

[17:52] <notviki> tada

[17:54] *** wamba left
[17:54] *** melezhik left
[17:54] <notviki> m: sub prefix:<⁣⁣⁣> is looser(&[,]) { say |@_ }; sub infix:<⁣⁣> {$^a*$^b}; sub infix:<⁣>{$^a+$^b};⁣⁣⁣ 3⁣⁣3;⁣⁣⁣ 3⁣3;⁣⁣⁣ 3⁣3⁣42;⁣⁣⁣ 'woot, loving these operators, bruh!'

[17:54] <camelia> rakudo-moar dd5759: OUTPUT«9␤6␤48␤woot, loving these operators, bruh!␤»

[17:54] <notviki> ehehe

[17:55] <jebes> I don't know if this is a good or bad thing

[17:55] <notviki> :)

[17:55] <nicq20> notviki: Wait what is happening? Some Unicode stuff?

[17:56] *** mawkish__ left
[17:56] <gfldex> shortest token matcher

[17:56] <notviki> nicq20: it's patented compactifier technology!

[17:56] <nicq20> ._.

[17:57] <jebes> this language makes me afraid

[17:57] <notviki> m: sub prefix:<⁣⁣⁣> is looser(&[,]) { say |@_ }; sub infix:<⁣⁣> {$^a*$^b}; sub infix:<⁣>{$^a+$^b};⁣⁣⁣ 3⁣⁣3⁣3⁣3⁣⁣3⁣3⁣3⁣⁣3⁣3⁣3⁣3

[17:57] <camelia> rakudo-moar dd5759: OUTPUT«162␤»

[17:57] <notviki> hehe

[17:57] <nicq20> nope still lost.

[17:57] *** astj joined
[17:58] <AlexDaniel> so where are the bots…

[17:58] <notviki> nicq20: http://perl6.party/post/Anguish--Invisible-Programming-Language-and-Invisible-Data-Theft

[17:58] <jebes> i know what's happening here, I just don't want to beleive its happening

[17:58] *** shayan_ left
[17:58] <notviki> AlexDaniel: no idea. I went and tried to restart them but they didn't come on

[17:58] <gfldex> notviki created a longest token (that stands in for an infix) that fits inbetween "".

[17:58] <AlexDaniel> notviki: yea, they just cannot connect

[17:58] <nicq20> notviki: Oh! The zero space unicode stuff.

[17:59] <notviki> nicq20: patented compactifier trechnology!!!

[17:59] <notviki> :)

[17:59] <[Coke]> u: { .uniname ~~ / 'DOUBLE-STRUCK'/ }

[17:59] <AlexDaniel> notviki: do you know why they were disconnected?

[17:59] <notviki> nope

[17:59] <AlexDaniel> notviki: I bet one of your accounts was here, no?

[17:59] *** nicq20 left
[17:59] <notviki> AlexDaniel: my accounts?

[18:00] <notviki> Oh, you mean look in backlog

[18:00] <AlexDaniel> I mean, one of your clients… there's ZoffixW, Zoffix…

[18:00] <AlexDaniel> yea

[18:01] <notviki> AlexDaniel: they pinged out at pi o'clock and I don't see anyone talking at that time

[18:01] <notviki> at 3:14AM

[18:01] <AlexDaniel> weird

[18:01] <notviki> Note that Freenode is doing maintenance stuff

[18:01] <notviki> and reconnecting stuff

[18:02] *** astj left
[18:02] <AlexDaniel> “◀▬▬ _ Attempting to connect to server” and that's it :|

[18:02] <notviki> In the morning I logged in to the box with the bots and only bisectable was showing up in ps ax | grep moar; so I ran the ./start but they didn't come online 

[18:02] <notviki> What server are they attempting to connect to?

[18:02] *** thayne joined
[18:02] <AlexDaniel> notviki: yea, I killed them because they were pointlessly trying to reconnect

[18:02] <AlexDaniel> notviki: how would I know?

[18:03] <notviki> Right now?

[18:03] <notviki> I meant I logged in like 5 hours ago

[18:03] <AlexDaniel> no, somewhere in the morning

[18:03] <notviki> Ah

[18:04] <AlexDaniel> I'm always thinking like at what point will freenode decide that having so many clients connect at the same time is a bad idea… :)

[18:04] <AlexDaniel> I'm already past the amount of allowed simultaneous logins (which is 5)

[18:04] <[Coke]> IRC--

[18:05] <notviki> Well, I had similar symptom on hack once, and like in a day the bots just reconnected.

[18:05] <AlexDaniel> notviki: yea! I had this too

[18:05] <AlexDaniel> but it resolved in like an hour or two

[18:05] <notviki> I see they're connecting to irc.freenode.net ... No idea if it'll help but the maintenance thing said to connect to chat.freenode.net maybe try that?

[18:05] <AlexDaniel> ok

[18:06] <AlexDaniel> nope

[18:06] <notviki> :(

[18:06] <[Coke]> notviki: added I think all the sample unicode transforms you showed.

[18:06] <geekosaur> fwiw I lost connection to irc.freenode.net about an hour ago and only got reconnected via irc.eu.freenode.net

[18:06] <AlexDaniel> let's try that

[18:07] <notviki> [Coke]: FWIW, I was using this website: http://qaz.wtf/u/convert.cgi?text=This+is+pretty+fun+too.+Do+something+for+your+group+tag

[18:07] <AlexDaniel> nope…

[18:07] <geekosaur> (irc.freenode.net being a CNAME for chat.freenode.net)

[18:08] <notviki> well, I was gonna say try telnetting... but I see you ain't got a telnet installed

[18:08] <geekosaur> ...aaaand I am seeing reports from elsewhere of ipv6 connection issues to various places. ipv6 routing issue?

[18:09] <notviki> Ask on 

[18:09] *** committable6 joined
[18:09] *** bisectable6 joined
[18:09] *** unicodable6 joined
[18:09] *** evalable6 joined
[18:09] *** benchable6 joined
[18:09] *** statisfiable6 joined
[18:09] <notviki> Ask on #freenode why your bot horde is blocked? :D

[18:09] <notviki> yey \o/

[18:09] <AlexDaniel> connected directly to kornbluth.freenode.net

[18:09] <notviki> \o/

[18:10] <AlexDaniel> can be taken from this list I guess: http://irc.netsplit.de/servers/?net=freenode

[18:10] <AlexDaniel> e: say ‘ping’

[18:10] <evalable6> AlexDaniel, rakudo-moar dd5759b: OUTPUT«ping»

[18:12] *** mawkish__ joined
[18:15] *** shayan_ joined
[18:18] <AlexDaniel> u: { .uniname ~~ / 'DOUBLE-STRUCK'/ }

[18:18] <unicodable6> AlexDaniel, U+2102 DOUBLE-STRUCK CAPITAL C [Lu] (ℂ)

[18:18] <unicodable6> AlexDaniel, U+210D DOUBLE-STRUCK CAPITAL H [Lu] (ℍ)

[18:18] <unicodable6> AlexDaniel, https://gist.github.com/96b800e4e0fd69103d42361b25d26d9b

[18:19] <AlexDaniel> u: DOUBLE-STRUCK

[18:19] <unicodable6> AlexDaniel, U+210D DOUBLE-STRUCK CAPITAL H [Lu] (ℍ)

[18:19] <unicodable6> AlexDaniel, U+2102 DOUBLE-STRUCK CAPITAL C [Lu] (ℂ)

[18:19] <unicodable6> AlexDaniel, https://gist.github.com/d2234d4fa37851d5aee6232f837c3fcf

[18:23] *** cdg left
[18:24] *** cdg joined
[18:24] <raschip> m: say 'ping'

[18:24] <camelia> rakudo-moar dd5759: OUTPUT«ping␤»

[18:25] <raschip> u: <⁣⁣⁣>

[18:25] <unicodable6> raschip, U+003C LESS-THAN SIGN [Sm] (<)

[18:25] <unicodable6> raschip, U+2063 INVISIBLE SEPARATOR [Cf] (⁣)

[18:25] <unicodable6> raschip, https://gist.github.com/4b01022e65aea52ac5c5f236687ff4a3

[18:25] *** labster joined
[18:26] <[Coke]> notviki: that is a huge list. :) I added a random, also, for grins.

[18:26] <raschip> nicq20, look ⬆

[18:26] *** TimToady joined
[18:27] <raschip> substitute every token in Perl6 with a different amount of those and get yourself even shorter programs!

[18:32] *** rindolf left
[18:32] *** cdg_ joined
[18:34] *** cdg left
[18:35] *** CIAvash left
[18:39] *** mawkish__ left
[18:43] <AlexDaniel> notviki: this website is LTA. For example, for përl it gives 𝕡ë𝕣𝕝 when it could have done 𝕡𝕖̈𝕣𝕝

[18:43] <notviki> submit a bug report :P~

[18:43] <AlexDaniel> I don't see any repo

[18:44] <notviki> heh

[18:44] *** bstamour` joined
[18:44] <[Coke]> AlexDaniel: then report it https://github.com/coke/p6-unicode-mangler/blob/master/mangle.p6 if that doesn't DTRT.

[18:44] <[Coke]> or submit a patch, that is even awesomer. :)

[18:46] <AlexDaniel> [Coke]: if your “try” fails, try doing the same thing with .NFD[0].uniname

[18:46] <AlexDaniel> [Coke]: and then slap the rest of NFD on top

[18:47] <[Coke]> ?

[18:48] <AlexDaniel> m: say ‘ë’.NFD[0].uniname

[18:48] <camelia> rakudo-moar dd5759: OUTPUT«LATIN SMALL LETTER E␤»

[18:48] <AlexDaniel> m: say ‘ë’.NFD[1].uniname

[18:48] <camelia> rakudo-moar dd5759: OUTPUT«COMBINING DIAERESIS␤»

[18:49] <[Coke]> and then, ideally, put the combinators back on it, yes?

[18:50] <AlexDaniel> yes

[18:51] <AlexDaniel> I have created a ticket because you asked: https://github.com/coke/p6-unicode-mangler/issues/1

[18:51] <[Coke]> you're quick. Danke!

[18:52] <notviki> m: my $in = "përl"; say $in.samemark("z"); say $in.samemark("z").samemark($in)

[18:52] <camelia> rakudo-moar dd5759: OUTPUT«perl␤përl␤»

[18:52] <AlexDaniel> oooh, samemark!

[18:53] <notviki> m: "𝕡𝕖̈𝕣𝕝".samemark("z").say

[18:53] <camelia> rakudo-moar dd5759: OUTPUT«𝕡𝕖𝕣𝕝␤»

[18:53] <notviki> weird

[18:53] <AlexDaniel> m: say ‘𝕖’.samemark(‘ë’)

[18:53] <camelia> rakudo-moar dd5759: OUTPUT«𝕖̈␤»

[18:53] <AlexDaniel> yes!

[18:53] <notviki> In my local terminal it looks completely botched up

[18:53] <notviki> like "􏿽􏿽􏿽􏿽􏿽􏿽􏿽􏿽̈􏿽􏿽􏿽􏿽􏿽􏿽􏿽􏿽"

[18:54] <notviki> m: my $in = "përl"; say "𝕡𝕖𝕣𝕝".samemark: $in

[18:54] <camelia> rakudo-moar dd5759: OUTPUT«𝕡𝕖̈𝕣𝕝␤»

[18:54] <notviki> \o/

[18:55] <AlexDaniel> completely forgot about samemark. That's even easier

[18:59] <[Coke]> https://github.com/coke/p6-unicode-mangler/issues/1 - done

[18:59] *** Tonik joined
[19:00] *** vike left
[19:00] <notviki> hehe

[19:00] <timotimo> none of those display for me %)

[19:01] *** jraglin left
[19:01] *** jraglin joined
[19:01] *** vike joined
[19:02] *** shayan_ left
[19:06] <[Coke]> timotimo: need a new font?

[19:06] <[Coke]> Can you see them on the README on github?

[19:06] <raschip> I think it has to do with not being able to show if there's no precomposed grapheme.

[19:08] <timotimo> i want a new font - one that won't make me sick

[19:08] <timotimo> one that won't make me break my eyes

[19:08] <timotimo> or make my glasses feel feet, feet thick

[19:09] <RabidGravy> boom shakalak!!

[19:09] <mspo> I'm using inconsolata 18pt

[19:10] <mspo> gets smaller every year

[19:10] *** Zoffix_ joined
[19:11] <RabidGravy> I'm thinking of going back to using a vt220 so I don't have to worry about these issues

[19:11] *** Zoffix_ is now known as Geth

[19:12] *** Geth is now known as notviki

[19:12] <raschip> What happens when you feed it UTF-8?

[19:13] <RabidGravy> I would imagine it would get very confused and become unreadable requiring a hard reset (or a tputs sgr0 if one could still enter data)

[19:14] <raschip> Is it hardwaired 7 bits?

[19:14] <raschip> hard-wired*

[19:15] <[Coke]> I have a chat system I and a few hundred other people use that is stuck in ASCII. Maybe it's worth rewriting in Perl 6. :|

[19:15] <RabidGravy> yes

[19:15] <raschip> Is it possible to use the same software that chomps the most significant bit to send to a VT-220 to do it for your TTY or PTY?

[19:16] <RabidGravy> the whole dumb terminal thing was over by the time unicode was even thought of

[19:16] <raschip> This way you'll get ASCII just the same.

[19:18] <b2gills> timotimo: Do you want a new duck too? One that doesn't stick his bill in your mail? One that won't smell too fowl?  ( "I want a new duck" from Weird Al )

[19:18] <timotimo> b2gills: you don't have to tell me about that

[19:19] <timotimo> i've had a weird al cd in my car for a few weeks now that has that track on it

[19:19] <b2gills> timotimo:  I added the source so that people other than you would know where it came from ( I assumed you would know )

[19:19] <timotimo> OK

[19:20] *** cdg_ left
[19:20] <raschip> timotimo: Is this one good http://www.dafont.com/pt/dec-terminal-modern.font ?

[19:21] *** matt_ left
[19:22] *** ccakes left
[19:22] *** nebuchadnezzar left
[19:22] *** ccakes joined
[19:23] <timotimo> 2217 glyphs? hah

[19:24] <RabidGravy> I threw my last green screen terminal in a skip about ten years ago, it had been gathering dust in my mother's house for about ten years prior to that

[19:24] <raschip> There are refurbishers that still sell them.

[19:25] <RabidGravy> there are companies that still use them, it's really good for high volume data entry

[19:25] <mspo> I replaced hundreds of them at a VA hospital in the mid 90's

[19:26] <mspo> with crap windows boxes running hyperterm or something

[19:26] <mspo> we also rewired the entire hospital with fiber which was really impressive for the time

[19:26] <mspo> replacing thick copper + vampire plugs

[19:27] <AlexDaniel> timotimo: the only font that works for me is Terminus

[19:27] <[Coke]> I really like "Source Code Pro"

[19:27] <timotimo> i apparently have monaco here

[19:27] <stmuk> inconsolata or fixed

[19:28] <AlexDaniel> it's not a vector font, but at least you can get it really small without making it turn into some smudgy shit

[19:28] *** gcole joined
[19:28] <RabidGravy> haha, the vampire taps

[19:28] <mspo> small fonts are bad news

[19:29] *** rindolf joined
[19:29] <AlexDaniel> that being said, you'll have to use something else as a fallback for all the unicode stuff

[19:29] <mspo> computers are bad for your eyes

[19:29] <RabidGravy> I've seen a whole mainframe cluster taken down by one of those

[19:30] <AlexDaniel> mspo: and keyboards are bad for my hands

[19:30] <timotimo> it's true

[19:30] <timotimo> i'm literally destroying my body just to hang out with you

[19:31] <AlexDaniel> .oO( and chairs are bad for your ass )

[19:32] <notviki> And breathing is bad too

[19:33] <notviki> Life kills.

[19:33] <raschip> Breathing makes peolpe rust.

[19:34] * notviki rocks out to https://www.youtube.com/watch?v=SpAoJ1ifeEA

[19:37] *** andrzejku joined
[19:45] <mspo> AlexDaniel: true

[19:45] *** nowan left
[19:45] <mspo> AlexDaniel: emacs is worse than vi

[19:45] <mspo> my chair is good for me (aeron)

[19:46] <mspo> I sit in it when my back hurts from other activities

[19:46] <AlexDaniel> mspo: depends on your keyboard and keyboard layout

[19:46] <mspo> AlexDaniel: there is no way chording/meta is less stress on your wrists than single letter input

[19:47] <AlexDaniel> as I said, depends on your keyboard and keyboard layout

[19:47] <mspo> unless you are chording with opposite hands

[19:47] <mspo> :)

[19:47] <AlexDaniel> proper layout makes both vim and emacs default keybindings obsolete, mostly

[19:47] <mspo> "proper"?

[19:48] <mspo> I don't do any custom keys in vi

[19:48] <mspo> I suppose hitting escape is hurting m

[19:48] <AlexDaniel> so you reach for Esc all the time?

[19:48] *** nowan joined
[19:48] <AlexDaniel> ok

[19:48] <mspo> AlexDaniel: I don't know if the caps-lock-for-esc is healthier

[19:48] <AlexDaniel> it is

[19:49] <skids> Just don;t work so much :-)

[19:49] <mspo> I can hit esc with very little wrist movement

[19:49] <mspo> I'm hardly healthy though since I work on my laptop

[19:49] <raschip> You use only steanographers?

[19:49] <mspo> I've been considering one of those stands and a bigger keyboard

[19:49] <AlexDaniel> mspo: as an example, I have arrows/home/end/pgup/pgdown/backspace/delete and a couple of other keys right under my fingers on 3rd/4th levels (you have to hold altgr) to use them

[19:50] <AlexDaniel> mspo: that being said, my altgr is on the spacebar

[19:50] <mspo> AlexDaniel: that sounds confusing

[19:50] <AlexDaniel> so you can press it with a thumb of the other hand

[19:52] <AlexDaniel> and I'm using a Japanese keyboard because I wanted some extra thumb keys on my laptop

[19:54] <AlexDaniel> so if you think about it, vim looks very funny to me because of the hjkl thingy. Not only I already have arrows on the home row that work in all apps, but I'm also using Dvorak… which… yea… you get it I think

[19:54] <Possum> Japanese keyboards also have extra keys on the right

[19:54] <AlexDaniel> Possum: yes. I'm thinking about shifting my right half of the layout one key to the right so that I'll get an extra row in the middle

[19:54] <AlexDaniel> extra column*** sorry

[19:55] <Possum> interesting idea

[19:55] * skids decides not to rage about laptop arrow keys.  deep breaths.

[19:55] <AlexDaniel> and emacs chording does not look so bad because Ctrl and Alt are thumb keys for me

[19:55] <mspo> AlexDaniel: I see

[19:55] <mspo> that's very different!

[19:56] <AlexDaniel> however, I tend not to use ctrl/alt in emacs, and instead set most common actions on keychords

[19:56] <AlexDaniel> (like when you press “gc” at the same time)

[19:56] <mspo> vim accepts quick keypresses as chords too, which is a little odd

[19:56] <mspo> ZZ and friends

[19:57] <notviki> You called?

[19:57] <AlexDaniel> skids: I was really pissed off by this too at the time, but now I don't use them at all so I don't really care :)

[19:58] <skids> On the bright side, I can probably do more things with my pinky than I used to from all the excercise.

[19:59] * AlexDaniel 🍲

[20:00] <notviki> u: 🍲

[20:00] <unicodable6> notviki, U+1F372 POT OF FOOD [So] (🍲)

[20:00] <notviki> Pot for food? I thought you were meant to smoke it!

[20:01] *** shayan_ joined
[20:02] *** raschip left
[20:04] <RabidGravy> they're weird in Unicode land

[20:04] *** girafe joined
[20:05] <pmurias> AlexDaniel: re caps lock vs escape isn't it a tradeoff between having to move the hand more and using a worse finger?

[20:06] <mspo> both are pinkey for me

[20:10] *** Gasher left
[20:10] *** DarthGandalf joined
[20:12] <notviki> [Coke]++ # https://perl6advent.wordpress.com/2016/12/01/

[20:12] <notviki> I'll actually make use of that for Geth this weekend :)

[20:13] <notviki> m: say $*THREAD.id; start { $*THREAD.id.say }; sleep .5

[20:13] <camelia> rakudo-moar dd5759: OUTPUT«1␤3␤»

[20:14] <AlexDaniel> pmurias: it depends on how you press it. For example, I've been kind of stretching my hand to reach it, so for me moving ESC to any other place was a win anyway

[20:14] <notviki> FWIW in my tests for my Future of Programming talk, start was parallel, not just asynchronous

[20:14] <AlexDaniel> pmurias: that being said, I have Hyper on my caps lock

[20:14] <AlexDaniel> … and compose on my Tab…

[20:15] <notviki> How do you type a tab? :)

[20:15] <perlpilot> pshaw!  Who needs tabs?

[20:15] <AlexDaniel> AltGr+y (or AltGr+t on qwerty)

[20:15] <perlpilot> It's not like he's writing Makefiles or anything

[20:16] <notviki> How do you indent code?

[20:16] <perlpilot> "one space at a time"  ;)

[20:16] <AlexDaniel> I don't, it is done automatically when I press Enter

[20:16] <notviki> :o

[20:17] <RabidGravy> You see I only have one usable little finger, I had to relearn how to use vi in 1998 as a result

[20:17] <notviki> What happened to the other finger?

[20:18] <AlexDaniel> but if you think that AltGr+t is hard to press then perhaps you're not considering that AltGr is pressed with a *thumb* of the other hand… ;)

[20:18] <RabidGravy> I severed the tendon on a broken glass and it hasn't been right since

[20:18] <notviki> cool

[20:18] <AlexDaniel> ouch

[20:19] <RabidGravy> so I have two little fingers but one of them is mostly cosmetic

[20:19] *** shayan_ left
[20:19] <notviki> Oh, I thought AlexDaniel had one usable little finger

[20:19] *** domidumont left
[20:19] *** shayan_ joined
[20:19] <notviki> RabidGravy: I use mostly the thumb and index finger of my right hand too :)

[20:20] <perlpilot> RabidGravy: I've got a knife and have butchered animals before ... I'm sure I can fix your finger.   (How programmers sound sometimes ;-)

[20:20] <AlexDaniel> nope, my layout implies at least functioning thumbs… but the thing is, I believe that keyboard layouts are mostly personal

[20:20] <notviki> .oO( have you tried rebooting it? 0

[20:20] <jeek> There comes a time in every young person's life when they have to choose their keyboard layout.

[20:20] <notviki> Yeah, the G keys are personal :P

[20:20] <jeek> https://ultimatehackingkeyboard.com/

[20:21] <RabidGravy> perlpilot, at the time they offered me to remove it or fix in place, I figured it was handing for holding a pint of beer ;-)

[20:21] <AlexDaniel> jeek: this is garbage, throw it away :)

[20:21] *** nebuchadnezzar joined
[20:21] * notviki wouldn't be able to type on that thing

[20:21] <jeek> I threw it on the GROUND!!

[20:21] <jeek> It splits into two halves.

[20:21] <notviki> THIS is the ultimate hacking keyboard: https://i.ytimg.com/vi/BjSobq-7xxU/maxresdefault.jpg

[20:22] <RabidGravy> oh I hate them

[20:22] <AlexDaniel> jeek: the concept is nice, but the fact that the keys are staggered makes the whole project shit

[20:22] <notviki> Assign all the ops into G keys and you're good to roll :P

[20:22] <jeek> I think a unicorn threw up on your keyboard, notviki.

[20:23] <jeek> I had a G19 for a while, it was nice.

[20:23] <RabidGravy> notviki, now what I'd like is one with all those lightey up bits but the robustitude of an IBM 5251 keyboard so I can type really fast and hard

[20:24] <notviki> RabidGravy: *shrug* it feels pretty robusted... aircraft grade aluminum

[20:24] *** shayan_ left
[20:24] <notviki> mechanical

[20:24] <RabidGravy> yeah, mechnical keys are the best, none of this chiclet rubbish

[20:24] * notviki looks at pictures of  IBM 5251 keyboard

[20:25] <notviki> Man, it looks like you can use it to chop wood

[20:25] <RabidGravy> yeah, it's the same keyboard as they used in the typewriters

[20:25] *** DarthGandalf left
[20:25] *** Some-body_ joined
[20:25] *** shayan_ joined
[20:26] <AlexDaniel> I've only seen one keyboard that is mostly done right (ergonomically), but it is still not perfect. Here: https://www.ergodox.io/img/ErgoDox-original-min.png

[20:26] *** Some-body_ is now known as DarthGandalf

[20:26] <RabidGravy> and I loved the "tactile feedback" which was basically a solenoid that whacked the key bed on a key depression

[20:26] <AlexDaniel> no staggered keys, columns in the middle, thumb keys

[20:28] *** lostinfog joined
[20:28] <perlpilot> What we need is to get away from keyboards as an input device

[20:28] <jeek> UHK has mechanical keys, available with six different cherryMX

[20:29] <AlexDaniel> perlpilot: yeah except that we don't really have any better alternative

[20:30] *** zakharyas joined
[20:31] *** thayne left
[20:31] <RabidGravy> I tried one of those things which were like six button chord things ages ago and I just couldn't get the hang of it

[20:31] <RabidGravy> but maybe now I could

[20:32] *** jebes left
[20:32] <RabidGravy> the problem is I learned to type over thirty years ago so it's difficult to deprogram myself

[20:32] <notviki> ehehe https://www.xkcd.com/1782/

[20:33] <notviki> Does anyone still use Perl 6 Slack thing?

[20:33] <RabidGravy> I only use slack at work

[20:33] <notviki> Perl 6 slack?

[20:34] <RabidGravy> no, commercial private slack

[20:34] <notviki> ah

[20:35] <RabidGravy> I don't get slack really, it's just IRC with a web interface and cutesy rendering of UTF-8 'emoticons'

[20:35] <RabidGravy> but commercial

[20:36] <notviki> The couple of times that I used it it was sluggish as hell and kept spamming my email about me being mentioned.

[20:37] <perlpilot> RabidGravy: and built-in logging and easy way to share/view images, videos, code, etc.

[20:38] <AlexDaniel> by the way, the other reason to create your own keyboard layout is so that you can type commonly used unicode chars freely

[20:38] <AlexDaniel> huggable: unicode

[20:38] <huggable> AlexDaniel, nothing found

[20:38] <AlexDaniel> huggable: uni

[20:38] <huggable> AlexDaniel, «»×÷−∘≅πτ𝑒∞…‘’‚“”„｢｣⁺⁻¯⁰¹²³⁴⁵⁶⁷⁸⁹∘∅∈∉∋∌⊆⊈⊂⊄⊇⊉⊃⊅≼≽∪∩∖⊖⊍⊎

[20:38] <AlexDaniel> ↑ this

[20:39] <perlpilot> notviki: I have the Perl 6 slack open at work right now, but there's been virtually no activity in a while.

[20:39] <AlexDaniel> and this → “↑” :D

[20:39] <RabidGravy> "commonly used"

[20:39] <tadzik> maybe we should bridge this channel to slack channel via matrix

[20:39] *** ChoHag joined
[20:39] <tadzik> I know they bridge some IRC channels with gitter this way

[20:39] <RabidGravy> or sacrifice some goats

[20:40] <AlexDaniel> we can make it a tradition here.

[20:40] * geekosaur uninterested in slack, or anything web based, for chat

[20:40] <AlexDaniel> I mean, discussing Slack every year

[20:40] <profan> tadzik: #racket uses a bridge to slack as well, so people use both, could be of interest

[20:40] <RabidGravy> I've got nothing against goats personally, apart from their weird eyes, but it seems like the thing to do on this kind of occassion

[20:41] <perlpilot> looks like #classroom has some bot activity

[20:43] <AlexDaniel> RabidGravy: what about this http://photoworkshopadventures.com/blog/wp-content/uploads/2015/09/MJCX2470-Edit-Michael-Chinnici-150501.jpg ?

[20:44] <RabidGravy> tree goats. I don't blame them to be honest, that ground looks hot, and they only have weird partially cloven hooves

[20:46] <RabidGravy> but that's actually how goats started upsetting me in the first place, I was on a pass in the Picos de Europa and a whole bunch of them jumped up on the rocks above me and stared at me

[20:52] <pmurias> AlexDaniel: are the missing keys on that two part keyboard intentional?

[20:53] <AlexDaniel> pmurias: given the amount of thumb keys, I think yes

[20:54] <AlexDaniel> pmurias: but another reason could be that they wanted to reduce the cost a little bit

[20:56] <AlexDaniel> pmurias: but I'm not sure which ones are “missing” :P

[20:56] <AlexDaniel> pmurias: for example, some people use the bottom row as arrows

[20:58] *** Gasher joined
[21:05] *** shayan_ left
[21:06] *** Gasher left
[21:06] *** Tonik left
[21:07] *** lukaramu left
[21:09] *** lukaramu joined
[21:15] <dalek> doc/revert-1123-patch-2: 87610a8 | (Tom Browder)++ | doc/Language/variables.pod6:

[21:15] <dalek> doc/revert-1123-patch-2: Revert "fix typo"

[21:15] <dalek> doc/revert-1123-patch-2: review: https://github.com/perl6/doc/commit/87610a8a4a

[21:20] *** Gasher joined
[21:22] *** TEttinger joined
[21:25] <AlexDaniel> errr, our docs on ff operator are wrong

[21:27] <AlexDaniel> what exactly should it “return”?

[21:27] <AlexDaniel> m: $_ = 42; say 42 ff 50

[21:27] <camelia> rakudo-moar dd5759: OUTPUT«1␤»

[21:27] <AlexDaniel> what's one?

[21:27] <AlexDaniel> m: $_ = 42; say 43 ff 50

[21:27] <camelia> rakudo-moar dd5759: OUTPUT«Nil␤»

[21:27] <AlexDaniel> and what's Nil?

[21:27] <AlexDaniel> :)

[21:27] <AlexDaniel> c: all $_ = 42; say 43 ff 50

[21:28] <committable6> AlexDaniel, https://gist.github.com/8569b8fdcbe754f3d50a2b093f01aa8b

[21:28] <AlexDaniel> c: all $_ = 42; say 42 ff 50

[21:28] <committable6> AlexDaniel, https://gist.github.com/4bb7762effbd64d1b7dd86f7ab3873ec

[21:31] *** mniip left
[21:32] *** bstamour` left
[21:34] <AlexDaniel> by the way, what's the reason for substr.eq existance?

[21:34] <AlexDaniel> substr-eq*

[21:36] *** unicodable6 left
[21:37] *** unicodable6 joined
[21:37] *** shayan_ joined
[21:41] *** unicodable6 left
[21:42] *** unicodable6 joined
[21:44] *** shayan_ left
[21:46] *** mniip joined
[21:52] *** shayan_ joined
[21:59] *** astj joined
[21:59] *** travis-ci joined
[21:59] <travis-ci> Doc build passed. Tom Browder 'Revert "fix typo"'

[21:59] <travis-ci> https://travis-ci.org/perl6/doc/builds/189637775 https://github.com/perl6/doc/commit/87610a8a4a59

[21:59] *** travis-ci left
[22:01] <skids> AlexDaniel: Likely efficiency... it maps pretty directly to an nqp op (and probably to a VM op)

[22:02] <AlexDaniel> MasterDuke: ↑

[22:02] *** trnh joined
[22:03] * skids mumbles something about "given a sufficiently smart compiler"

[22:03] <AlexDaniel> skids: then perhaps it should take an extra $from param?

[22:03] *** astj left
[22:03] <AlexDaniel> ‘aaZZbb’.substr-eq(‘xxZZyy’, 2, 2) # True

[22:04] <MasterDuke> yeah, it pretty much just calls nqp::eqat directly

[22:04] <AlexDaniel> ah… or maybe not then…

[22:05] *** shayan_ left
[22:05] *** andrzejku left
[22:05] *** evalable6 left
[22:05] *** evalable6 joined
[22:06] *** skids left
[22:08] *** bjz joined
[22:09] *** matt_ joined
[22:09] *** matt_ is now known as Guest81811

[22:09] <AlexDaniel> m: say 𑛂𖭒

[22:09] <camelia> rakudo-moar 964b28: OUTPUT«22␤»

[22:09] <AlexDaniel> xD

[22:10] *** Guest81811 is now known as matt_

[22:10] *** evalable6 left
[22:10] *** evalable6 joined
[22:10] <notviki> .u: 𑛂𖭒

[22:10] <notviki> u: 𑛂𖭒

[22:10] <unicodable6> notviki, U+116C2 TAKRI DIGIT TWO [Nd] (𑛂)

[22:10] <unicodable6> notviki, U+16B52 PAHAWH HMONG DIGIT TWO [Nd] (𖭒)

[22:10] <notviki> heh

[22:12] <AlexDaniel> notviki: it looks like “33”

[22:14] *** trnh left
[22:19] <notviki> AlexDaniel: ah... to me it looks like blank space :)

[22:20] <masak> to me, the number 2 used in Arabic countries (٢) looks almost like a 1

[22:20] <masak> but I could read those numerals well enough to parse out whole numbers while I was in Saudi Arabia a few years back

[22:26] <notviki> Did GitHub remove Artistic License 2 from their list of automatic-license-file-in-the-repo list :/

[22:27] <gfldex> yes

[22:27] <notviki> Why?

[22:27] <gfldex> madness

[22:28] <SmokeMachine> its good to be in home again! (we got tired of going to the beach...)

[22:31] <notviki> SmokeMachine: DEFINITE

[22:31] <notviki> Well, this is kinda annoying.

[22:31] <SmokeMachine> notviki: thanks! I did forget!!!

[22:31] <notviki> "more redundant choices adds cognitive overhead for someone learning about and choosing an open source license.

[22:32] <notviki> Umm... and you couldn't add "more choices" button or load more options when user types the license name?

[22:33] *** jebes joined
[22:34] <gfldex> is there a githup api for creating repos?

[22:34] <notviki> Yes

[22:34] <notviki> huggable: license :is: wget https://raw.githubusercontent.com/rakudo/rakudo/nom/LICENSE

[22:34] <huggable> notviki, Added license as wget https://raw.githubusercontent.com/rakudo/rakudo/nom/LICENSE

[22:35] <kalkin-> How can i create a trait_mod which combines two other trait_mods?

[22:35] <notviki> Or at least was a year ago... Maybe they removed it for cognitive overhead reasons :}

[22:35] <notviki> kalkin-: call them from within it, I guess? They're just subs

[22:36] <notviki> gfldex: https://developer.github.com/v3/repos/#create

[22:36] <gfldex> kalkin-: there is a way to call traits, let me find the blog post

[22:38] <SmokeMachine> m: multi trait_mod:<is>(Routine:D $r, :$bla!) {trait_mod:<is>($r, :export)}; sub ble is bla {} # ?

[22:38] <camelia> rakudo-moar 964b28: ( no output )

[22:38] <kalkin-> I've got it

[22:39] <kalkin-> i figured that i can call traits with trait_mod<is>($suib, :trait-one('asd'))

[22:39] <kalkin-> SmokeMachine: yes

[22:40] <gfldex> kalkin-: no blog post, it's actually in the docs: https://docs.perl6.org/type/Sub#index-entry-trait__mod_%28declarator%29

[22:46] <SmokeMachine> notviki: I think it worked! thanks!

[22:46] <notviki> sweet

[22:47] <SmokeMachine> notviki: someday ago I think you where trying to get all builtin type... was something like that?

[22:47] <SmokeMachine> some days

[22:47] <notviki> I got them

[22:49] <SmokeMachine> could you show me how? in my Test::Fuzz I have a file with the name of every builtin type to use... i think it would be better to have some code to do that...

[22:49] *** bjz left
[22:50] * [Coke] yawns

[22:51] <[Coke]> notviki: (github webhooks) WOOT

[22:52] <kalkin-> gfldex; thanks i missed it there

[22:52] <[Coke]> (keyboards) our own jesse has http://keyboard.io/ which is kind of awesome and almost ready.

[22:53] <jebes> I have an ergodox infinity and a planck

[22:53] <jebes> prefer the planck tbh

[22:53] *** mr_ron joined
[22:53] <SmokeMachine> notviki: ^^

[22:56] *** jebes left
[22:57] <notviki> SmokeMachine: this is pretty much it: https://github.com/zoffixznet/perl6-map/blob/master/mapper.p6#L18-L20

[22:57] <obra> I believe we now have all the infrastructure to do a Perl 6 mode for direct unicode input, evne, [Coke] 

[22:57] <notviki> SmokeMachine: remove the .grep and you'll have them all (IIRC it'll also include NQPRoutine or something... which doesn't have perlish methoids on it)

[22:58] <SmokeMachine> notviki: thanks!

[22:58] <mr_ron> m: module M {our token five { <[5]> }}; say so "5" ~~ /<M::five>/ # anyone know how to make this work?

[22:58] <camelia> rakudo-moar 5592db: OUTPUT«No such method '!cursor_init' for invocant of type 'M'␤  in block <unit> at <tmp> line 1␤␤»

[22:58] <notviki> SmokeMachine: oh wait, you need the !.DEFINITE thing to get just the classes :)

[22:59] <notviki> mr_ron: make it a proper grammar :)

[22:59] <SmokeMachine> notviki: thanks!

[23:01] *** raschip joined
[23:03] *** trnh joined
[23:03] *** trnh left
[23:03] *** trnh joined
[23:07] *** bjz joined
[23:08] <[Coke]> obra: if you need a perl6 tester, let me know. :)

[23:08] <obra> noted :)

[23:08] <obra> win 20

[23:10] <SmokeMachine> m: set CORE::.keys.grep(* ne "IterationEnd").map({CORE::{$_}}).grep({!.DEFINITE}) # :(

[23:10] <camelia> rakudo-moar 5592db: OUTPUT«Invocant requires an instance of type Iterable, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[23:10] *** cdg joined
[23:12] <SmokeMachine> m: set CORE::.keys.grep(none("IterationEnd", "Iterable")).map({CORE::{$_}}).grep({!.DEFINITE}) # :(

[23:12] <camelia> rakudo-moar 5592db: OUTPUT«Invocant requires an instance of type Iterable, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[23:13] *** trnh left
[23:14] <notviki> heh

[23:14] <notviki> s: &set

[23:14] <SourceBaby> notviki, Sauce is at https://github.com/rakudo/rakudo/blob/964b28b/src/core/set_operators.pm#L374

[23:14] <notviki> m: set Iterable

[23:14] <camelia> rakudo-moar 5592db: ( no output )

[23:15] <notviki> m: say set Iterable

[23:15] <camelia> rakudo-moar 5592db: OUTPUT«set((Iterable))␤»

[23:15] <notviki> weird

[23:15] <SmokeMachine> m: CORE::.keys.grep({!.DEFINITE})>>.say

[23:15] <camelia> rakudo-moar 5592db: ( no output )

[23:15] <SmokeMachine> m: say CORE::.keys.grep({!.DEFINITE})

[23:15] <camelia> rakudo-moar 5592db: OUTPUT«()␤»

[23:15] <notviki> m: say set Iterable, List, Array

[23:15] <camelia> rakudo-moar 5592db: OUTPUT«set((Iterable), (Array), (List))␤»

[23:16] <notviki> m: say set Iterable, List, Array, Pair, Set

[23:16] <camelia> rakudo-moar 5592db: OUTPUT«set((List), (Iterable), (Array), (Set), (Pair))␤»

[23:16] * notviki shrugs

[23:17] <SmokeMachine> m: say CORE::.keys.map({CORE::{$_}}).grep({!.DEFINITE})

[23:17] <camelia> rakudo-moar 5592db: OUTPUT«((WhateverCode) (Slip) (Pair) (utf8) (CurrentThreadScheduler) (PromiseStatus) (StringyEnumeration) (Distribution) (Backtrace) (NFKC) (Duration) Nil (Any) (WrapDispatcher) (IO) (FileChangeEvent) (UInt64) (Order) (RatStr) (uint64) (Numeric) (Cursor) (Proxy) …»

[23:18] *** newbie1 left
[23:18] <notviki> m: my $s = SetHash.new; $s{Slip}++;

[23:18] <camelia> rakudo-moar 5592db: OUTPUT«Invocant requires an instance of type List, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[23:18] <SmokeMachine> hum...

[23:18] <notviki> m: set CORE::.keys.grep(none("IterationEnd", "Slip")).map({CORE::{$_}}).grep({!.DEFINITE})

[23:18] <camelia> rakudo-moar 5592db: OUTPUT«Invocant requires an instance of type Iterable, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[23:18] <notviki> heh

[23:19] *** cinap_lenrek joined
[23:19] <notviki> oh and the next one it's choking on is HyperSeq

[23:19] * notviki is testing with perl6 -e 'm: my $s = SetHash.new; for CORE::.keys.grep(none("IterationEnd", "Iterable", "Slip")).map({CORE::{$_}}) {say "Doing {.^name}"; $s{$_}++}'

[23:20] <cinap_lenrek> i dont know what perl6 is, but i really like your butterfly logo alot :)

[23:20] <SmokeMachine> notviki: now Im doing the same...

[23:20] <moritz> cinap_lenrek: then it served its purpose! :-)

[23:20] <notviki> Seems a whole lot of them actually. Perhaps a set isn't the best choice as a container :)

[23:20] <notviki> cinap_lenrek: thanks!

[23:20] <notviki> cinap_lenrek: Perl 6 is a programming language

[23:21] <cinap_lenrek> i know its a pl, but i havnt written any programs in it

[23:21] <raschip> notviki: did you find a way to convince P6 to list every sub and method?

[23:21] <SmokeMachine> m: my $s = SetHash.new; for CORE::.keys.grep(none("IterationEnd", "Iterable", "Slip")).map({CORE::{$_}}) {say "Doing {.^name}"; $s{$_}++; CATCH {default { .say }}}

[23:21] <camelia> rakudo-moar 5592db: OUTPUT«Doing Signal␤Doing WhateverCode␤Doing Sub␤Doing Pair␤Doing Signal␤Doing Sub␤Doing Sub␤Doing utf8␤Doing Sub+{<anon|71898608>}+{Precedence}␤Doing CurrentThreadScheduler␤Doing PromiseStatus␤Doing StringyEnumeration␤Doing Distribution…»

[23:21] <notviki> raschip: yes

[23:21] <notviki> raschip: something like this: https://github.com/zoffixznet/perl6-map/blob/master/mapper.p6

[23:21] *** RabidGravy left
[23:22] <notviki> What's the name of the encoding that'll let me use ASCII?

[23:22] <raschip> Is everything there P6? Or do you need to deal with Rakudo internals?

[23:22] <SmokeMachine> notviki: :(

[23:23] <notviki> oh, apparently we do have ASCII sweet

[23:23] <notviki> raschip: this regex filters out most of iternals subs https://github.com/zoffixznet/perl6-map/blob/master/mapper.p6#L5

[23:24] <raschip> I know, I mean it the other way around. Is everything you used in the program in roast or did you need something different?

[23:25] <SmokeMachine> notviki: I think Ill stay with the file with the types names for a while...

[23:27] <notviki> :)

[23:31] *** trnh joined
[23:34] *** zakharyas left
[23:40] *** cyphase joined
[23:42] <b2gills> cinap_lenrek: for a quick overview see https://learnxinyminutes.com/docs/perl6/ for more goto https://perl6.org and look around

[23:45] <cinap_lenrek> don't think perl6 is for me :)

[23:45] <notviki> :)

[23:46] <cinap_lenrek> it appears to be very sophisticated and ritch in features

[23:46] <cinap_lenrek> and there will probably be tons of libraries for it

[23:46] <notviki> It is. But you don't need to know all of them to write useful programs.

[23:47] <raschip> cinap_lenrek: It was developed with thirteen year old girls as the target audience.

[23:47] <cinap_lenrek> i write mostly programs in c

[23:47] <cinap_lenrek> and i hate libraries

[23:47] <notviki> hehe

[23:47] <cinap_lenrek> i still think the operating system is the library

[23:48] <MasterDuke> cinap_lenrek: then you could work on the virtual machine that runs perl6, https://github.com/MoarVM/MoarVM

[23:48] <cinap_lenrek> what i found interesting was the lexer stuff

[23:51] *** rpburkholder joined
[23:52] <cinap_lenrek> i'm not looking for work tho :)

[23:53] *** girafe left
[23:53] <cinap_lenrek> just wanted to say your logo is nice

[23:53] <raschip> We call lexers "ratcheting regular expressions"

[23:54] *** bisectable6 left
[23:54] *** benchable6 left
[23:54] *** evalable6 left
[23:54] *** committable6 left
[23:54] *** unicodable6 left
[23:54] *** statisfiable6 left
[23:54] <notviki> weeeeee

[23:54] <raschip> Bye bots.

[23:54] <notviki> robocide

[23:54] <AlexDaniel> cinap_lenrek: interestingly, there are some people who really like the logo and some who hate it with passion

[23:54] <cinap_lenrek> i think its great

[23:54] <AlexDaniel> yea-yea. Wait until I add two more bots… :)

[23:54] <notviki> :o

[23:55] <cinap_lenrek> i really hate these sophisticated "designed" logos with gradients and shit

[23:55] <cinap_lenrek> the perl6 logo looks like some programmer has drawn in mspaint

[23:56] <cinap_lenrek> this logo says FUCK YOU to marketing

[23:56] *** wamba joined
[23:57] <notviki> This logo is proving to be a cultural hack. The smug elitist type of folk seems to stay away :)

[23:57] <raschip> hugme: hug cinap_lenrek

[23:58] <notviki> huggable: hug raschip 

[23:58] * huggable hugs raschip 

[23:58] *** bisectable6 joined
[23:58] *** unicodable6 joined
[23:58] *** evalable6 joined
[23:58] *** committable6 joined
[23:58] *** benchable6 joined
[23:58] *** statisfiable6 joined
[23:58] <AlexDaniel> \o/

[23:58] <AlexDaniel> bisectable6: …

[23:58] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=5592db8) because on both starting points the exit code is 1

[23:58] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/b50b431f5da92bc64f8ddb4713cf1827

[23:58] <bisectable6> AlexDaniel, There are 10 candidates for the first “new” revision. See log for more details

[23:58] <AlexDaniel> notviki: I fixed this ↑

[23:58] <AlexDaniel> among other things

[23:58] * notviki doesn't get what the fix is

[23:59] <notviki> I commented on that ticket about a potential fix BTW, if anyone wants the LHF

[23:59] <AlexDaniel> notviki: previously it just said “bisect run failure”

[23:59] <raschip> huggable: hug cinap_lenrek

[23:59] * huggable hugs cinap_lenrek

[23:59] <notviki> Oh it did

[23:59] <notviki> committable6: +"a"

[23:59] <AlexDaniel> bha…

[23:59] <notviki> mc: +"a"

[23:59] <committable6> notviki, https://gist.github.com/a9830dd24af247104129633fe0f114fa

