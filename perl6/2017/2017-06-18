[00:10] *** kurahaupo_ joined
[00:12] <zengargoyle> tyil++ syscall is fun

[00:13] *** kurahaupo joined
[00:16] *** kurahaupo_ left
[00:16] *** pilne left
[00:16] <zengargoyle> m: use NativeCall; sub syscall(int32) is native {}; syscall(57); say "Hi from $*PID"

[00:17] <camelia> rakudo-moar 932b10: OUTPUT: ¬´Hi from 6949‚ê§Hi from 6949‚ê§¬ª

[00:17] *** cdg joined
[00:18] * zengargoyle resists the urge. :P

[00:19] *** pilne joined
[00:19] <BenGoldberg> samcv, "If you want have problems with C<xim> then you should try C<ibus>."  I'm not sure if you should remove "want" or change it to "want to" :P

[00:19] <samcv> heh thanks

[00:20] <BenGoldberg> welcome :)

[00:20] <samcv> heh "want to" haha

[00:21] <Geth> ¬¶ doc: 4b3297906e | (Samantha McVey)++ | doc/Language/unicode_entry.pod6

[00:21] <Geth> ¬¶ doc: [unicode_entry] fix a typo

[00:21] <Geth> ¬¶ doc: 

[00:21] <Geth> ¬¶ doc: BenGoldberg++

[00:21] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4b3297906e

[00:21] *** cdg left
[00:25] * zengargoyle now has to walk over to the desktop and power it back on. :)  

[00:26] <geekosaur> BenGoldberg, "yes"

[00:28] * BenGoldberg grins.

[00:31] * zengargoyle strangely enough, that caused desktop to power-on into the BIOS setup screen.

[00:32] *** stmuk_ joined
[00:33] *** stmuk left
[00:34] *** MasterDuke joined
[00:37] *** kurahaupo left
[00:37] *** kurahaupo joined
[00:38] *** kurahaupo left
[00:39] *** kurahaupo joined
[00:41] *** kurahaupo_ joined
[00:43] *** kurahaupo left
[00:47] *** kurahaupo_ left
[00:47] *** kurahaupo joined
[00:49] *** kurahaupo left
[00:49] *** kurahaupo_ joined
[00:49] *** kurahaupo_ left
[00:50] *** kurahaupo joined
[00:51] *** kurahaupo_ joined
[00:53] *** araraloren_ joined
[00:54] *** kurahaupo left
[00:56] *** araraloren left
[00:56] *** kurahaupo_ left
[00:57] *** kurahaupo joined
[01:01] *** cdg joined
[01:03] *** cdg left
[01:03] *** cdg_ joined
[01:07] *** kurahaupo left
[01:07] *** kurahaupo_ joined
[01:08] *** kurahaupo joined
[01:09] *** kurahaupo__ joined
[01:11] *** travis-ci joined
[01:11] <travis-ci> Doc build errored. Samantha McVey '[unicode_entry] fix a typo

[01:11] <travis-ci> https://travis-ci.org/perl6/doc/builds/244104452 https://github.com/perl6/doc/compare/0d4110870173...4b3297906eac

[01:11] *** travis-ci left
[01:12] *** kurahaupo_ left
[01:12] *** kurahaupo left
[01:14] *** MasterDuke left
[01:24] *** sufrostico joined
[01:31] *** kurahaupo__ is now known as kurahaupo

[01:32] *** Cabanossi left
[01:34] *** Cabanossi joined
[01:46] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:52] *** aborazmeh joined
[01:52] *** aborazmeh left
[01:52] *** aborazmeh joined
[01:52] *** cdg joined
[01:54] *** cdg_ left
[01:59] *** cdg left
[02:05] *** aborazmeh left
[02:06] *** cdg joined
[02:18] *** Cabanossi left
[02:18] *** Cabanossi joined
[02:29] *** noganex_ joined
[02:29] *** committable6 left
[02:29] *** committable6 joined
[02:29] *** ChanServ sets mode: +v committable6

[02:31] *** noganex left
[02:34] *** mr-foobar left
[02:36] *** mr-foobar joined
[03:03] *** anon_ left
[03:04] *** mr-foobar left
[03:10] *** mr-foobar joined
[03:16] *** Cabanossi left
[03:18] *** Cabanossi joined
[03:25] *** NeuralAnomaly left
[03:28] *** NeuralAnomaly joined
[03:28] *** ChanServ sets mode: +v NeuralAnomaly

[03:28] *** NeuralAnomaly left
[03:28] *** ugjka left
[03:28] *** NeuralAnomaly joined
[03:28] *** ChanServ sets mode: +v NeuralAnomaly

[03:29] *** NeuralAnomaly left
[03:30] *** NeuralAnomaly joined
[03:30] *** ChanServ sets mode: +v NeuralAnomaly

[03:33] *** AlexDaniel left
[03:34] *** aborazmeh joined
[03:34] *** aborazmeh left
[03:34] *** aborazmeh joined
[03:44] *** Cabanossi left
[03:48] *** Cabanossi joined
[03:52] *** raiph left
[03:57] *** cdg left
[04:05] *** mr-foobar left
[04:08] *** mr-foobar joined
[04:13] *** NeuralAnomaly left
[04:15] *** NeuralAnomaly joined
[04:15] *** ChanServ sets mode: +v NeuralAnomaly

[04:15] *** NeuralAnomaly left
[04:15] *** NeuralAnomaly joined
[04:15] *** ChanServ sets mode: +v NeuralAnomaly

[04:34] *** mr-foobar left
[04:38] *** mr-foobar joined
[04:40] *** javan joined
[04:45] *** Cabanossi left
[04:47] *** Cabanossi joined
[04:50] *** khw left
[04:50] *** NeuralAnomaly left
[04:51] *** zakame joined
[04:53] *** kurahaupo left
[04:55] *** NeuralAnomaly joined
[04:55] *** ChanServ sets mode: +v NeuralAnomaly

[04:59] <javan> looking for a hand trying to parse this: {error => [], result => {rfc1123 => Sun, 18 Jun 17 05:00:26 +0000, unixtime => 1497762026}} 

[05:00] <javan> to pull out individual values

[05:01] <eveo> javan: you mean parse that text with a grammar or do you have a hash and trying to get at a value?

[05:02] <javan> hash

[05:02] <eveo> m: my $stuff =  {error => [], result => {rfc1123 => "Sun, 18 Jun 17 05:00:26 +0000", unixtime => 1497762026}};   say $stuff<result><rfc1123>

[05:02] <camelia> rakudo-moar c252b3: OUTPUT: ¬´Sun, 18 Jun 17 05:00:26 +0000‚ê§¬ª

[05:02] <eveo> m: my $stuff =  {error => [], result => {rfc1123 => "Sun, 18 Jun 17 05:00:26 +0000", unixtime => 1497762026}};   say $stuff<result><unixtime>

[05:02] <camelia> rakudo-moar c252b3: OUTPUT: ¬´1497762026‚ê§¬ª

[05:02] *** aborazmeh left
[05:04] <javan> thanks, lol im making it harder than it has to be

[05:05] *** mr-foobar left
[05:06] *** mr-foobar joined
[05:07] <eveo> any time

[05:20] <BenGoldberg> .u üì¶

[05:20] <yoleaux> U+1F4E6 PACKAGE [So] (üì¶)

[05:23] *** NeuralAnomaly left
[05:24] *** NeuralAnomaly joined
[05:24] *** ChanServ sets mode: +v NeuralAnomaly

[05:35] *** mr-foobar left
[05:37] <eveo> .tell El_Che 2017.06 got shipped out

[05:37] <yoleaux> eveo: I'll pass your message to El_Che.

[05:37] *** eveo left
[05:42] *** mr-foobar joined
[05:46] *** Cabanossi left
[05:47] *** Cabanossi joined
[06:01] *** pilne left
[06:01] *** Actualeyes left
[06:05] *** mr-foobar left
[06:09] *** mr-foobar joined
[06:16] *** Actualeyes joined
[06:18] *** Guest12857 joined
[06:25] *** geekosaur left
[06:26] *** geekosaur joined
[06:30] *** robertle joined
[06:33] *** zakame left
[06:35] *** mr-foobar left
[06:36] *** espadrine joined
[06:39] *** mr-foobar joined
[06:56] *** domidumont joined
[06:56] *** wamba joined
[07:00] *** domidumont left
[07:06] *** aindilis left
[07:07] *** mr-foobar left
[07:10] *** mr-foobar joined
[07:16] *** setty1 joined
[07:19] *** parv joined
[07:22] *** javan left
[07:23] *** rindolf joined
[07:35] *** mr-foobar left
[07:40] *** mr-foobar joined
[07:50] *** ggoebel left
[07:56] *** BenGoldberg left
[07:59] *** cpage_ joined
[08:02] *** ggoebel joined
[08:06] *** mr-foobar left
[08:07] *** shlomif joined
[08:09] *** Guest12857 left
[08:10] *** shlomif left
[08:11] *** stmuk joined
[08:12] *** stmuk_ left
[08:18] *** mr-foobar joined
[08:36] *** mr-foobar left
[08:40] *** mr-foobar joined
[08:42] *** parv left
[09:02] <El_Che> NeuralAnomaly: status

[09:02] <yoleaux> 05:37Z <eveo> El_Che: 2017.06 got shipped out

[09:02] <NeuralAnomaly> El_Che, [‚úò] Next release will be in 3 weeks and 6 days. Since last release, there are 1 new still-open tickets (0 unreviewed and 0 blockers) and 7 unreviewed commits. See http://perl6.fail/release/stats for details

[09:04] <timotimo> damn, the next release is so soon

[09:07] *** eliasr joined
[09:12] <El_Che> timotimo: and it's gonna be huge

[09:12] <El_Che> :)

[09:21] *** ufobat_ joined
[09:31] *** Cabanossi left
[09:33] *** Cabanossi joined
[09:36] *** mr-foobar left
[09:36] *** alexk joined
[09:37] <alexk> m: my $s = 'a,b,c'; for ^100_000 { @ = $s.split(',') }; say now - INIT now;

[09:37] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´1.122507‚ê§¬ª

[09:38] <alexk> m: my $s = 'a,b,c'; for ^100_000 { @ = split(',', $s) }; say now - INIT now;

[09:38] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´3.29549189‚ê§¬ª

[09:40] *** mr-foobar joined
[09:44] *** setty1 left
[09:55] *** setty1 joined
[09:56] <araraloren_> m: my $s = 'a,b,c'; for ^100_000 { @ = $s.&split(',') }; say now - INIT now;

[09:57] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´3.4321289‚ê§¬ª

[09:59] *** TEttinger left
[10:07] *** ChoHag left
[10:08] *** setty1 left
[10:20] *** pmurias_ joined
[10:20] *** pmurias_ left
[10:20] *** pmurias joined
[10:22] <El_Che> https://github.com/nxadm/rakudo-pkg/releases/tag/2017.06 <- new rakudo pkgs

[10:34] *** alexk left
[10:37] *** mr-foobar left
[10:39] *** ugjka joined
[10:40] *** mr-foobar joined
[10:43] *** konsolebox left
[10:47] <stmuk> El_Che++

[10:50] *** kernasi joined
[10:50] <kernasi> hi

[10:50] *** konsolebox joined
[10:58] *** AlexDaniel joined
[11:08] *** mr-foobar left
[11:10] <pmurias> what's an idiomatic way of running a command with a timeout?

[11:12] <jnthn> pmurias: I'd assemble it out of Proc::Async and Promise.in(...)

[11:12] <yoleaux> 05:35Z <eveo> jnthn: got two new tickets you may be interested in: "for loop no longer sinks stuff": https://rt.perl.org/Ticket/Display.html?id=131593  and "some data race in Proc::Async write" probably worth waiting until the piping is reworked as you planned to do next week. Ticket: https://rt.perl.org/Ticket/Display.html?id=131592

[11:20] *** mr-foobar joined
[11:20] *** AlexDaniel left
[11:31] *** Cabanossi left
[11:33] *** Cabanossi joined
[11:35] *** mr-fooba_ joined
[11:37] *** mr-foobar left
[11:38] *** Arimaafan joined
[11:47] *** Arimaafan left
[11:48] *** Arimaafan joined
[11:49] *** Arimaafan left
[12:06] *** gensym left
[12:23] *** domidumont joined
[12:24] *** AlexDaniel joined
[12:27] *** AlexDaniel left
[12:29] *** BenGoldberg joined
[12:30] *** Cabanossi left
[12:32] *** Cabanossi joined
[12:33] *** ufobat_ left
[12:37] *** stmuk left
[13:04] *** stmuk joined
[13:07] *** kyan joined
[13:11] *** pilne joined
[13:12] *** grumble left
[13:13] *** grumble joined
[13:23] *** ugjka left
[13:27] *** welton joined
[13:29] *** welton left
[13:30] *** Cabanossi left
[13:30] *** ugjka joined
[13:32] *** Cabanossi joined
[13:51] *** domidumont left
[13:59] *** ufobat_ joined
[14:13] <lucs> m: print 'ok' if index('abc', 'b') == 1  # Fine.

[14:13] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´ok¬ª

[14:13] <lucs> m: print 'ok' if index('abc', 'b') == 2  # Still fine.

[14:13] <camelia> rakudo-moar ee4c3d: ( no output )

[14:13] <lucs> m: print 'ok' if index('abc', 'Z') == 2  # Can I avoid the warning without needing to add a test for definedness?

[14:13] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´Use of Nil in numeric context‚ê§  in block <unit> at <tmp> line 1‚ê§¬ª

[14:14] <lucs> Or if I must test, what would be idiomatic?

[14:15] <lucs> (perl5's return of -1 in case of no match was more practical, eh)

[14:17] <araraloren_> m: print 'ok' if index('abc', 'Z')

[14:17] <camelia> rakudo-moar ee4c3d: ( no output )

[14:17] *** lucasb joined
[14:18] <araraloren_> lucs, index return an undefined value when it was not found 

[14:18] <lucs> Hmm... I'm actually trying to see in a given char appears at a given position in a string.

[14:19] <araraloren_> Here is the document: https://docs.perl6.org/routine/index 

[14:19] <lucs> araraloren_: Yep, I get that.

[14:20] <araraloren_> m: say index('abc', 'Z').perl

[14:20] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´Nil‚ê§¬ª

[14:20] <lucs> I'd rather not do  if index($s, 'Z') && index($s, 'Z) == 2  # for example

[14:20] <lucasb> would this be work?  (index('abc', 'Z') // -1) == 2 

[14:20] <lucs> Hmm...

[14:20] <lucasb> s/be//

[14:21] <araraloren_> It's work obviously

[14:21] <lucasb> :)

[14:21] <lucs> lucasb: Yep, I should have thought of that :)

[14:21] <lucs> Thanks lucasb and araraloren_ 

[14:22] <araraloren_> but not elegant  ~~ 

[14:22] <lucs> Could be worse...

[14:22] <BenGoldberg> m: print 'ok' if quietly index('abc', 'Z') == 2;

[14:22] <camelia> rakudo-moar ee4c3d: ( no output )

[14:22] <lucs> Hmm...

[14:23] <lucasb> m: print 'ok' if quietly index('abc', 'Z') == 0;

[14:23] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´ok¬ª

[14:23] <lucs> Whoops

[14:23] <araraloren_> That's a little better 

[14:23] <BenGoldberg> m: print 'ok' if quietly index('abc', 'Z') == "Make sure you know what you're doing";

[14:23] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3‚èè5Make sure you know what you're doing' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:39] <lucasb> m: say 'ok' if index('abc', 'a') andthen $_ == 0

[14:39] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´ok‚ê§¬ª

[14:41] <lucasb> better: ... andthen * == 0

[14:42] <lucs> lucasb++ Neato

[14:44] <lucs> (all these operators...)

[14:45] *** Cabanossi left
[14:47] *** Cabanossi joined
[14:49] <timotimo> say ok if $_ == 0 with index('abc', 'a')

[14:49] <evalable6> timotimo, rakudo-moar ee4c3d322: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/6Sh63zYPfA‚ê§Confused‚ê§at /tmp/6Sh63zYPfA:1‚ê§------> 03say ok if $_ == 0 with 08‚èè04index('abc', 'a')¬ª

[14:49] <timotimo> aaw

[14:51] <lucs> m: (say 'ok' if $_ == 0) with index('abc', 'a')

[14:51] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´ok‚ê§¬ª

[14:51] <lucs> m: (say 'ok' if $_ == 0) with index('abc', 'z')

[14:51] <camelia> rakudo-moar ee4c3d: ( no output )

[14:54] *** kernasi left
[14:55] *** sufrostico left
[14:56] *** khw joined
[15:04] *** zakharyas joined
[15:05] *** stmuk_ joined
[15:05] *** Guest12857 joined
[15:07] *** stmuk left
[15:07] *** setty1 joined
[15:09] *** setty1 left
[15:09] *** aborazmeh joined
[15:09] *** aborazmeh left
[15:09] *** aborazmeh joined
[15:11] *** sufrostico joined
[15:19] <moritz> https://leanpub.com/perl6regex

[15:20] <timotimo> did you just put this up?

[15:20] <moritz> the search for a publisher has me suffiently annoyed that I decided to go with leanpub again

[15:20] <moritz> timotimo: yes

[15:20] <moritz> though if I do find a publisher, I might close that again

[15:20] <moritz> and I have about 35 pages written so far

[15:22] *** zakharyas left
[15:23] * moritz hits the publish button

[15:25] *** zakharyas joined
[15:26] *** aborazmeh left
[15:29] *** Guest12857 left
[15:35] *** BenGoldberg left
[15:44] <araraloren_> Can I access base class attribute in child class method ?

[15:44] <moritz> no

[15:45] <moritz> just methods

[15:45] <moritz> (and private methods, if you established an explicit trust in the parent class)

[15:46] <timotimo> though of course if it's a public attribute you can use the getter/setter it made for you

[15:46] * Juerd likes the word 'accessor'

[15:47] <araraloren_> :) I found a class can access an attribute of role, it is suitable use a role contain some attribute ?

[15:48] <moritz> araraloren_: what problem are you trying to solve?

[15:48] <moritz> if a child class needs access to an attribute, why not make it public?

[15:48] <moritz> I mean, either it's part of a stable API, then everybody should be able to acces sit

[15:49] <araraloren_> actually I want write it in TWEAK

[15:49] <moritz> or it's not, then child classes shouldn't use it either

[15:49] <moritz> TWEAK should be a submethod, so it's called once for the child class, once for the parent class

[15:49] <araraloren_> But if I do it in base class, I need to know what the child class is 

[15:49] <moritz> why?

[15:49] *** espadrine left
[15:49] <araraloren_> Yeah, I know it is a submethod

[15:50] <timotimo> no problem

[15:50] <timotimo> self will be the type of the subclass

[15:50] *** zakharyas left
[15:51] <timotimo> and ::?CLASS or what it's called is the class you defined the submethod in

[15:51] <moritz> m: class P { submethod TWEAK { say self.^name } }; class C is P { }; C.name

[15:51] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´No such method 'name' for invocant of type 'C'. Did you mean any of these?‚ê§    none‚ê§    note‚ê§    take‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:51] <araraloren_> The set value logical of child classes is different from each other. 

[15:51] *** Guest12857 joined
[15:52] <moritz> m: class P { submethod TWEAK { say self.^name } }; class C is P { }; C.new

[15:52] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´C‚ê§¬ª

[15:52] <moritz> araraloren_: what are the classes you are modeling? what does your code do?

[15:53] <araraloren_> moritz, wait a moment, I update it to my repo

[15:54] * moritz afk for a few minutes

[15:55] <araraloren_> https://github.com/araraloren/perl6-getopt-advance/blob/master/lib/Getopt/Advance/Option.pm6#L180

[15:56] <araraloren_> moritz, ‚Üë

[15:56] <araraloren_> The Option::Base is that parent class

[15:58] <araraloren_> The TWEAK of Option::Boolean and Option::Integer is different, but I can write $!value 

[15:58] *** Guest12857 left
[15:59] <araraloren_> And actually I want let user can define their own Option, so I do not want do this in base class (Option::Base)

[15:59] *** zakharyas joined
[16:00] <araraloren_> Hope you can understand me. :)

[16:06] *** lucasb left
[16:08] *** zakharyas left
[16:10] <timotimo> i find it a missed opportunity to call all perl 6 script files ".pls"

[16:22] <araraloren_> moritz, I gotta to sleep now. .o/ Night every one

[16:22] *** araraloren_ left
[16:25] *** Guest12857 joined
[16:27] <rightfold> timotimo: I'm more worried about the lack of .t6

[16:30] *** Guest12857 left
[16:32] *** nadim joined
[16:33] *** andrzejk_ joined
[16:43] *** jmerelo joined
[16:44] <jmerelo> Hi all!

[16:44] <El_Che> jota-jota

[16:44] <El_Che> congrats on the new book

[16:44] <jmerelo> Thanks!

[16:44] <El_Che> brb (cooking)

[16:45] <jmerelo> (but not here to talk about that, unless you _really_ want)

[16:45] <jmerelo> I was trying to add the book to @moritz web

[16:46] <jmerelo> And I realized he was using a Python static server to serve the test pages. I didn't like that. And started to look for a Perl 6 static web server. Didn't find one, so I started to write my own

[16:46] <jmerelo> Not a big deal, since there's this excellent HTTP::Server::Tiny by @tokuhirom

[16:47] <jmerelo> However, what I want is to be able to do something like this:  perl6 -I lib -M HTTP::Server::Static (minus the -I lib) and start a static server by default

[16:47] <jmerelo> It works pretty well if I just put the code in Server.pm6, defining variables, and running code in the main scope.

[16:49] <jmerelo> But I want to have some default values in the command line. And when I put my code in "sub MAIN( $port = 8080, $host = '0.0.0.0', $dir = "." ) {" it gets into the command line, instead of running MAIN by default.

[16:52] <jmerelo> Any idea on how to do that better? Or at all?

[16:55] *** Ven joined
[16:56] *** Ven is now known as Guest85118

[17:00] *** Cabanossi left
[17:02] <timotimo> you still have to -e '', don't you?

[17:02] *** ChoHag joined
[17:03] *** Cabanossi joined
[17:05] <jmerelo> Yep, I have tried to call MAIN explicitly, but to no avail either

[17:05] <jmerelo> perl6 -I lib -M HTTP::Server::Static -e "HTTP::Server::Static::MAIN();" yields an error. That would be plan B, but it does not work. 

[17:10] *** Skarsnik joined
[17:13] *** Guest12857 joined
[17:20] *** broquain1 is now known as broquaint

[17:21] *** ChoHag left
[17:22] *** domidumont joined
[17:31] *** Cabanossi left
[17:32] *** espadrine joined
[17:32] *** Cabanossi joined
[17:34] *** ChoHag joined
[17:37] *** Guest85118 left
[17:38] *** thundergnat left
[17:40] *** Ven joined
[17:41] *** Ven is now known as Guest66547

[17:43] *** kurahaupo joined
[17:51] <ugexe> m: class Foo { our sub MAIN($bar) { say $bar } }; Foo::MAIN(42)

[17:51] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´42‚ê§¬ª

[17:52] <ugexe> jmerelo: ^

[17:54] <jmerelo> jmerelo at penny in ~/Code/perl6/p6-http-static (master‚óè‚óè) 

[17:54] <jmerelo> $ perl6 -I lib -M HTTP::Server::Static -e "HTTP::Server::Static::MAIN();"

[17:55] <jmerelo> http server is ready: http://0.0.0.0:8080/ (pid:27214, keepalive: 1)

[17:55] <jmerelo> @ugexe :+1:

[17:55] *** pelev joined
[17:55] <jmerelo> Thanks!

[17:56] *** Guest66547 left
[17:56] <jmerelo> Let me check if args work correctly

[17:57] <jmerelo> Um, no, they don't. It's simply a sub called MAIN, it's not taking the default arguments 

[17:58] <jmerelo> Or any argument, for that matter. I can actually call it explicitly, but baseline is it's not behaving as the MAIN routine in a program

[17:58] <ugexe> well no

[17:58] <ugexe> you're not going to have a lot of luck trying to do that

[17:58] <jmerelo> It's actually not needed, since you have to call it anyway. Would have been nice... 

[17:59] <jmerelo> @ugexe probably not. But thanks anyway!

[17:59] <zengargoyle> is there no eqv of main() unless caller();

[18:00] *** uberbaud joined
[18:00] <ugexe> `perl6 -MZef::CLI -e0` you can do something like this

[18:01] <ugexe> perl6 -MZef::CLI -e '' install Foo

[18:03] <ugexe> but I could never get things to work right when i put the MAIN logic in the main module - Zef::Client

[18:04] <zengargoyle> is it never getting to the -e part in Zef::CLI?  my naive -e'' usually fails, -e'1' gives warning about useless use of constant.

[18:04] *** uberbaud left
[18:05] <ugexe> m: 1

[18:05] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of constant integer 1 in sink context (line 1)‚ê§¬ª

[18:05] <ugexe> m:

[18:05] <evalable6> ugexe, rakudo-moar ee4c3d322: OUTPUT: ¬´¬ª

[18:11] *** sufrostico left
[18:11] <zengargoyle> perl6 -I. -MStatic -e'' -- tells me "Option -e needs a value"

[18:12] <timotimo> probably has to -e ''

[18:12] <timotimo> because -e'' is indistinguishable from -e alone

[18:12] <zengargoyle> ah, *nod*

[18:13] <timotimo> '' as a sole parameter works, but at the end of a parameter it just concatenates the empty string to whatever's in front

[18:13] *** andrzejk_ left
[18:15] <tbrowder> jmerelo: can you list your book on per6.org/resources/books?

[18:16] <tbrowder> *perl6.org

[18:16] <jmerelo> @tbrowder just did, waiting for the pull request to be accepted. That triggered this whole thing, actually :-)

[18:17] *** sufrostico joined
[18:17] *** Ven_ joined
[18:17] *** domidumont left
[18:18] <tbrowder> great! came in late to dance today

[18:21] <timotimo> baile?

[18:22] *** Guest12857 left
[18:23] *** andrzejk_ joined
[18:23] <tbrowder> speaking of books, can someone add Andrew Shitov's new book in work? i'm in limited contact now or i would do it; is it too early to add Gabor's book (not yet funded)?

[18:25] *** BenGoldberg joined
[18:25] *** lizmat left
[18:26] *** jmerelo left
[18:32] *** lizmat joined
[18:34] *** keylet joined
[18:34] <keylet> m: say 'foo';

[18:34] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´foo‚ê§¬ª

[18:36] <keylet> m: 'a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ /<-[A..Z]>/;

[18:36] <camelia> rakudo-moar ee4c3d: ( no output )

[18:36] <keylet> m: 'a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ /<-[A..z]>/;

[18:36] <camelia> rakudo-moar ee4c3d: ( no output )

[18:36] <keylet> m: 'a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ /\w/;

[18:36] <camelia> rakudo-moar ee4c3d: ( no output )

[18:36] <keylet> m: 'a5b^%##*c&9c856697967d765#~~!89g*^*&%tlL^^' ~~ /\w/;

[18:36] <camelia> rakudo-moar ee4c3d: ( no output )

[18:36] <keylet> no sense why it does not work

[18:37] *** mr-foobar joined
[18:38] <geekosaur> it does not print the answer automatically

[18:38] <geekosaur> m: say 'a5b^%##*c&9c856697967d765#~~!89g*^*&%tlL^^' ~~ /\w/;

[18:38] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§¬ª

[18:38] <keylet> m: say 'a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ /<-[A..z]>/;

[18:38] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´ÔΩ¢5ÔΩ£‚ê§¬ª

[18:38] <geekosaur> (it's hard to test behavior of sinking when the bot doesn't let you sink stuff)

[18:39] <keylet> m: say 'a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ g:/<-[A..z]>/;

[18:39] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 039c856697967d765$#~~!89g*^*&%tlL^^' ~~ g:7‚èè5/<-[A..z]>/;‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[18:39] *** BenGoldberg left
[18:39] <keylet> m: say 'a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ m:g/<-[A..z]>/;

[18:39] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´(ÔΩ¢5ÔΩ£ ÔΩ¢%ÔΩ£ ÔΩ¢#ÔΩ£ ÔΩ¢#ÔΩ£ ÔΩ¢*ÔΩ£ ÔΩ¢&ÔΩ£ ÔΩ¢9ÔΩ£ ÔΩ¢8ÔΩ£ ÔΩ¢5ÔΩ£ ÔΩ¢6ÔΩ£ ÔΩ¢6ÔΩ£ ÔΩ¢9ÔΩ£ ÔΩ¢7ÔΩ£ ÔΩ¢9ÔΩ£ ÔΩ¢6ÔΩ£ ÔΩ¢7ÔΩ£ ÔΩ¢7ÔΩ£ ÔΩ¢6ÔΩ£ ÔΩ¢5ÔΩ£ ÔΩ¢$ÔΩ£ ÔΩ¢#ÔΩ£ ÔΩ¢~ÔΩ£ ÔΩ¢~ÔΩ£ ÔΩ¢!ÔΩ£ ÔΩ¢8ÔΩ£ ÔΩ¢9ÔΩ£ ÔΩ¢*ÔΩ£ ÔΩ¢*ÔΩ£ ÔΩ¢&ÔΩ£ ÔΩ¢%ÔΩ£)‚ê§¬ª

[18:40] <keylet> m: say ('a5b^%##*c&9c856697967d765$#~~!89g*^*&%tlL^^' ~~ m:g/<-[A..z]>/).WHAT;

[18:40] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´(List)‚ê§¬ª

[18:40] *** mr-fooba_ left
[18:40] <keylet> what's the difference between (List) and (Array)?

[18:44] *** stmuk joined
[18:44] <geekosaur> List is read-only and can therefore be optimized in ways Array can't

[18:45] <rightfold> keylet: Please consult this document, which highlights the differences: https://docs.perl6.org/language/list#Arrays

[18:46] *** stmuk_ left
[18:46] *** AlexDaniel joined
[18:57] *** Ven_ left
[19:00] *** domidumont joined
[19:03] *** AlexDani` joined
[19:07] *** AlexDaniel left
[19:13] *** mscha joined
[19:13] <mscha> m: my %sum{Int} is default([]); %sum{4}.push("1+3"); %sum{4}.push("2+2"); say (1..10).grep(-> $i { %sum{$i} == 2 }); # huh? 1/3

[19:13] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´(1 2 3 4 5 6 7 8 9 10)‚ê§¬ª

[19:13] <mscha> m:  my %sum{Int} is default([]); %sum{4}.push("1+3"); %sum{4}.push("2+2"); say %sum # huh? 2/3

[19:13] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´{}‚ê§¬ª

[19:13] <mscha> m: my %sum{Int} is default([]); %sum{4}.push("1+3"); %sum{4}.push("2+2"); say %sum{4} # huh? 3/3

[19:13] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´[1+3 2+2]‚ê§¬ª

[19:14] *** keylet_ joined
[19:15] <mscha> m:  my %sum{Int}; %sum{4}.push("1+3"); %sum{4}.push("2+2"); say (1..10).grep(-> $i { %sum{$i} && %sum{$i} == 2 }); # This works, but is less elegant

[19:15] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´(4)‚ê§¬ª

[19:18] <keylet_> how to convert "\u<number>

[19:18] <keylet_> how to convert \u<number> to the symbol?

[19:18] <keylet_> i. e. \u0442 etc. is JSON

[19:18] <keylet_> * in JSON

[19:19] <moritz> keylet_: there's code for that in JSON::Tiny, for example

[19:19] <moritz> basically chr(:16(<number>))

[19:20] *** andrzejk_ left
[19:20] *** keylet left
[19:20] <moritz> m: say chr(:16('2713'))

[19:20] <camelia> rakudo-moar ee4c3d: OUTPUT: ¬´‚úì‚ê§¬ª

[19:21] <moritz> (json encodes surrogate pairs as separate characters, so you have to be a bit mroe careful than that)

[19:23] *** keylet_ left
[19:40] *** ufobat_ left
[19:40] <moritz> https://github.com/moritz/json/blob/master/lib/JSON/Tiny/Actions.pm#L63

[19:44] *** nowan_ left
[19:48] *** TEttinger joined
[19:49] *** nowan joined
[19:50] *** Skarsnik left
[19:54] *** brrt joined
[20:00] *** Cabanossi left
[20:02] *** Cabanossi joined
[20:04] *** Cabanossi left
[20:05] *** Cabanossi joined
[20:08] <timotimo> yeah, ugh, those

[20:08] *** andrzejk_ joined
[20:12] *** ChoHag left
[20:17] *** espadrine left
[20:18] *** dha joined
[20:18] *** dha left
[20:19] *** dha joined
[20:19] *** dha left
[20:19] *** dha joined
[20:19] *** dha left
[20:20] *** dha joined
[20:20] *** dha left
[20:20] *** dha joined
[20:28] *** ChoHag joined
[20:32] *** domidumont left
[20:33] *** domidumont joined
[20:33] *** domidumont left
[20:37] <El_Che> moritz: happy to see the grammar book appearing somewhere in the future

[20:39] <moritz> El_Che: the first 40 pages have already appeared (no grammars yet though, just regexes so far)

[20:40] <El_Che> the good parts are at the end :)

[20:41] <moritz> but there's an cheap early bird coupon (valid for one day): https://leanpub.com/perl6regex/c/earlybird :-)

[20:41] *** andrzejk_ left
[20:42] *** frobisher joined
[20:42] *** frobisher left
[20:42] *** frobisher joined
[20:42] *** frobisher left
[20:43] *** frobisher joined
[20:43] *** dha left
[20:44] *** Cabanossi left
[20:47] *** Cabanossi joined
[21:02] *** AlexDani` is now known as AlexDaniel

[21:07] *** BenGoldberg joined
[21:07] <brrt> i recently came to the somewhat ugly conclusion that no, events are in fact not very good for highly concurrent large-scale batch workloads

[21:07] <brrt> channels (or work queues) are a much better primitive

[21:09] <BenGoldberg> It's a good thing that perl6 has channels built in, isn't it! :)

[21:09] <brrt> aye

[21:09] <brrt> but this conclusion surprised me quite a bit

[21:10] <brrt> channesl, or bounded queues, have automatic rate-limiting and lockstepping

[21:11] <brrt> with events, you inevitably bind the first step in your chain to the last, or you run the risk of 'overflowing' at some point in the middle

[21:13] <brrt> or you have to reimplement a queue badly anyway

[21:14] <jnthn> Yeah, for batch processing, "push back at the point of input" will suffice

[21:15] <jnthn> (And behave nicely)

[21:15] <brrt> it is in fact probably the only thing, other than pull-from-point-of-output

[21:15] <jnthn> Events better model situations where you can't push back.

[21:15] <brrt> true.

[21:15] <jnthn> Stuff just happens and you have to react.

[21:15] <brrt> such situations are unhappy ones

[21:16] <jnthn> In general, I'd say events are a slightly odd thing to use in batch processing. :)

[21:18] <jnthn> In that they're all about "this thing just happend right now!" and batch processing is more like "OK, we've got all these things to chug through".

[21:19] <jnthn> I'd also argue that concurrency in batch processing is typically a choice to get it done faster (so, it's really a case of parallelism).

[21:20] <jnthn> Whereas event processing under a model like Perl 6 supplies offer is primarily aimed at dealing with true concurrent situations, where concurrency is an inherent part of the problem.

[21:21] * TimToady was a bit surprised that Erlang has no mechanism for back pressure on its work queues

[21:22] <jnthn> To be fair, we only have that in module space so far also, though I'm decidedly open to Channel growing an option to bound it. :)

[21:22] <jnthn> (One of those "didn't get to it yet" things)

[21:23] <TimToady> .oO(just ignore the backpressure?)

[21:26] * TimToady --> arrival dinner &

[21:28] <jnthn> :)

[21:30] <timotimo> backpressure, that's when you get a massage, right?

[21:30] *** salyavin joined
[21:30] *** salyavin left
[21:31] *** salyavin joined
[21:31] *** Cabanossi left
[21:32] *** frobisher left
[21:32] *** salyavin left
[21:32] *** Cabanossi joined
[21:32] *** cpage_ left
[21:33] *** salyavin joined
[21:33] *** salyavin left
[21:33] *** salyavin joined
[21:33] *** salyavin left
[21:33] *** salyavin joined
[21:33] *** salyavin left
[21:41] <lizmat> .oO( from the Swedish prime minister )

[21:42] <brrt> yeah, the problem is that the system i'm working in, 'events' are pretty much the only logical way to do concurrency

[21:42] <brrt> actually, eents + queues would work out fine...

[21:54] *** mniip left
[21:58] *** brrt left
[22:00] *** brrt joined
[22:00] *** brrt left
[22:04] <samcv> it's so hot today :(

[22:06] <BenGoldberg> Not where I am, it's just disgustingly humid.

[22:09] * BenGoldberg wants some sort of wearable air conditioner/dehumidifier.

[22:10] *** |oLa| left
[22:15] *** stmuk_ joined
[22:16] *** stmuk left
[22:17] <timotimo> wear a silica gel package

[22:20] *** robertle left
[22:21] <El_Che> moritz: thx. I'll get it once you get to the grammars

[22:21] <BenGoldberg> A silica gel jacket would be a bit silly, methinks.

[22:23] *** eliasr left
[22:23] <BenGoldberg> Not to mention, it would need some way of getting the silica gel beads to release their moisture after they'd reached capacity.

[22:27] *** Guest12857 joined
[22:28] <Geth> ¬¶ doc: e556ea3743 | (Samantha McVey)++ | doc/Language/unicode.pod6

[22:28] <Geth> ¬¶ doc: [unicode-grant] Add documentation on UTF8-C8

[22:28] <Geth> ¬¶ doc: 

[22:28] <Geth> ¬¶ doc: We previously had no documentation on UTF8-C8. Here is a pretty

[22:28] <Geth> ¬¶ doc: good start for people looking to better understand what it means

[22:28] <Geth> ¬¶ doc: and at least *some* of the reasons why it exists.

[22:28] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e556ea3743

[22:30] <samcv> this section can probably be improved a bit. but it's fairly good basis

[22:33] *** rindolf left
[22:34] *** SHODAN left
[22:36] <samcv> any comments on ^ are appreciated

[22:37] *** SHODAN joined
[22:40] *** [Coke] left
[22:40] *** grondilu joined
[22:41] *** [Coke] joined
[22:43] *** xerx joined
[22:45] <BenGoldberg> samcv, my comment on that is: samcv++ ;)

[23:00] *** TEttinger left
[23:02] *** dolmen_ joined
[23:02] *** Guest12857 left
[23:10] *** kurahaupo left
[23:14] <samcv> BenGoldberg, let me know if you find a wearable air conditioner though

[23:16] <timotimo> adam savage walked a comic con (or similar) floor dressed as an astronaut including a backpack with cooling water and a shirt with pipes through it for the water to flow through

[23:18] *** travis-ci joined
[23:18] <travis-ci> Doc build errored. Samantha McVey '[unicode-grant] Add documentation on UTF8-C8

[23:18] *** kurahaupo joined
[23:18] <travis-ci> https://travis-ci.org/perl6/doc/builds/244329918 https://github.com/perl6/doc/compare/4b3297906eac...e556ea37438d

[23:18] *** travis-ci left
[23:19] <samcv> i need to get a table from html into a libreoffice presentation

[23:19] <samcv> anybody know the best way to do this?

[23:23] <timotimo> select the table, copy it from the browser, paste it into libreoffice :P

[23:25] <AlexDaniel> yea, that's how it should work‚Ä¶

[23:25] <AlexDaniel> sometimes you may want to paste into libreoffice writer first

[23:26] <AlexDaniel> I don't remember the details now‚Ä¶ but either that or paste into libreoffice anything, copy it from there again and paste it into a proper table‚Ä¶

[23:30] <samcv> going to try and work this into my talk somewhere https://i.imgflip.com/1nw9qp.jpg

[23:30] <samcv> maybe alter it a bit

[23:33] <samcv> cool. was even able to find a high res version of the source image i made that from. reverse image search is great

[23:37] *** dolmen_ left
[23:38] *** dolmen_ joined
[23:42] *** dolmen_ left
[23:43] <timotimo> "nature habitat" or should it be "natural habitat,?

[23:46] *** Cabanossi left
[23:46] <samcv> natural habitat

[23:46] <samcv> maybe should reverse the top and bottom text

[23:47] *** Cabanossi joined
[23:48] *** eveo joined
[23:48] <timotimo> could work, too

[23:49] <timotimo> but this way seems more common?

[23:49] <samcv> maybe yeah

[23:49] <samcv> or maybe change it to. "What people imagine perl 6 devs doing"

[23:49] <samcv> or something like that

[23:49] <samcv> words to that effect

[23:49] <eveo> BTW, since I see people ask about it. perl6-debug-m got fixed (I believe) now. The fix didn't make it into 2017.06 release, but will be in 2017.07, out of which next R* will be based as well. Fix in https://github.com/rakudo/rakudo/commit/6d4691fbd91d7f54

[23:50] <eveo> ** buys a copy off https://leanpub.com/perl6regex/c/earlybird **

[23:50] <eveo> moritz++

[23:50] <eveo> \o

[23:50] *** eveo left
