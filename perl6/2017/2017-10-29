[00:03] *** Aksamyt left
[00:09] *** cdg joined
[00:09] *** Brumbazz left
[00:14] *** cdg left
[00:22] *** ryn1x joined
[00:31] *** Cabanossi left
[00:33] *** Cabanossi joined
[00:41] *** aborazmeh joined
[00:41] *** aborazmeh left
[00:41] *** aborazmeh joined
[00:47] <tyil> https://github.com/perl6/doc/pull/1635#discussion_r147553947 would anyone have any input on this? being "reached" sounds a little off to me, but I cant really think of a better way to describe it either :/

[01:01] *** evalable6 left
[01:02] *** evalable6 joined
[01:04] <geekosaur> 'once their rules are matched'

[01:05] <geekosaur> could quibble 'rule' as 'pattern'

[01:05] <geekosaur> and 'corresponding rule/pattern' if you want to be precise or formal

[01:06] *** Morfent joined
[01:07] *** ryn1x left
[01:09] *** Mrofnet left
[01:10] *** cdg joined
[01:14] *** ryn1x joined
[01:14] <tyil> that reads nicer, thanks!

[01:14] *** cdg left
[01:17] *** colomon left
[01:17] *** colomon joined
[01:19] *** ryn1x_ joined
[01:20] *** ryn1x left
[01:26] *** ryn1x_ left
[01:26] *** ryn1x joined
[01:31] *** ryn1x left
[01:36] *** margeas left
[01:43] *** ryn1x joined
[01:51] *** ryn1x left
[01:52] *** darkmorph left
[01:54] *** HoboWithAShotgun left
[01:58] *** Rawriful left
[02:00] *** ryn1x joined
[02:04] *** aborazmeh left
[02:10] *** cdg joined
[02:13] *** Actualeyes left
[02:15] *** cdg left
[02:17] *** blakebooyah joined
[02:17] <blakebooyah> p6: say 3

[02:17] <camelia> rakudo-moar 4fca94743: OUTPUT: «3␤»

[02:17] <blakebooyah> p6: say 3+4

[02:17] <camelia> rakudo-moar 4fca94743: OUTPUT: «7␤»

[02:18] <blakebooyah> p6: say 3**4

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «81␤»

[02:18] <blakebooyah> p6: say 3..4

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «3..4␤»

[02:18] <blakebooyah> p6: say (3..4)

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «3..4␤»

[02:18] <blakebooyah> p6: say (1..4)

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «1..4␤»

[02:18] <blakebooyah> p6: say 1..4

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «1..4␤»

[02:18] <blakebooyah> p6: print 1..4

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «1 2 3 4»

[02:18] <blakebooyah> p6: print 2..41

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41»

[02:18] <blakebooyah> p6: print (2..41)**2

[02:18] <camelia> rakudo-moar 4fca94743: OUTPUT: «1600»

[02:19] <blakebooyah> p6: reverse 1..4

[02:19] <camelia> rakudo-moar 4fca94743: ( no output )

[02:19] <ugexe> you can pm the bot too

[02:19] <blakebooyah> p6: say reverse 1..4

[02:19] <camelia> rakudo-moar 4fca94743: OUTPUT: «(4 3 2 1)␤»

[02:19] <blakebooyah> okay sorry

[02:20] <blakebooyah> not a lot of action in here tonight...does everyone have girlfriends and families now or what

[02:21] <ugexe> many live in Europe 

[02:31] *** Cabanossi left
[02:33] *** Cabanossi joined
[02:33] *** bitrauser joined
[02:37] *** bitrauser_ left
[02:49] *** ryn1x left
[02:50] *** ilbot3 left
[02:50] *** nadim_ joined
[02:55] <Geth> ¦ doc/W4anD0eR96-patch-1: aac1952a7d | (Alex Chen)++ (committed using GitHub Web editor) | doc/Language/grammar_tutorial.pod6

[02:55] <Geth> ¦ doc/W4anD0eR96-patch-1: Update grammar_tutorial.pod6

[02:55] <Geth> ¦ doc/W4anD0eR96-patch-1: review: https://github.com/perl6/doc/commit/aac1952a7d

[02:56] *** ilbot3 joined
[02:56] *** ChanServ sets mode: +v ilbot3

[03:07] *** Herby_ joined
[03:07] <Herby_> \o

[03:08] <Geth> ¦ doc: jstuder-gh++ created pull request #1636: Modify Label Doc and Examples

[03:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1636

[03:10] *** Mrofnet joined
[03:11] *** cdg joined
[03:13] *** Morfent left
[03:14] *** nadim_ left
[03:16] *** Cabanossi left
[03:16] *** cdg left
[03:18] *** Cabanossi joined
[03:32] *** cdg joined
[03:33] *** noganex_ joined
[03:35] *** araraloren joined
[03:36] *** noganex left
[03:37] *** cdg left
[03:50] *** piojo joined
[03:53] <Geth> ¦ doc/master: 6 commits pushed by (Alex Chen)++

[03:53] <Geth> ¦ doc/master: f09aa72e42 | Add example "Add actions directly", review needed

[03:53] <Geth> ¦ doc/master: 8fa97ee522 | Update grammar_tutorial.pod6

[03:53] <Geth> ¦ doc/master: a7a3bcea42 | Update grammar_tutorial.pod6

[03:53] <Geth> ¦ doc/master: 11bff0a953 | Update grammar_tutorial.pod6

[03:53] <Geth> ¦ doc/master: aac1952a7d | Update grammar_tutorial.pod6

[03:53] <Geth> ¦ doc/master: 02b3c730ff | Merge pull request #1635 from perl6/W4anD0eR96-patch-1

[03:53] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/c091ada9c5...02b3c730ff

[03:55] <Geth> ¦ doc: a2e3df3c7f | (Jeremy Studer)++ (committed by Zoffix Znet) | doc/Type/Label.pod6

[03:55] <synopsebot> Link: https://doc.perl6.org/type/Label

[03:55] <Geth> ¦ doc: Modify Label Doc and Examples (#1636)

[03:55] <Geth> ¦ doc: 

[03:55] <Geth> ¦ doc: * Make Label method examples clearer

[03:55] <Geth> ¦ doc: 

[03:55] <Geth> ¦ doc: Changed the example for the next method so that it's output differs from

[03:55] <Geth> ¦ doc: that of the last example. With the change, the numbers 5 through 10 are

[03:55] <Geth> ¦ doc: printed, which makes it more clear that the loop has iterated a total of

[03:55] <Geth> ¦ doc: <…commit message has 6 more lines…>

[03:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a2e3df3c7f

[04:10] *** evalable6 left
[04:10] *** evalable6 joined
[04:10] *** mson left
[04:12] *** khw left
[04:13] *** lowin joined
[04:16] *** Cabanossi left
[04:18] *** Cabanossi joined
[04:29] *** ryn1x joined
[04:33] *** cdg joined
[04:38] *** cdg left
[04:40] *** Herby_ left
[04:45] *** Cabanossi left
[04:47] *** Cabanossi joined
[05:07] *** evalable6 left
[05:07] *** evalable6 joined
[05:07] *** ChanServ sets mode: +v evalable6

[05:15] *** fudje joined
[05:18] *** fudje left
[05:20] *** fudje joined
[05:21] <fudje> oh wow that was confusing

[05:25] *** fudje left
[05:26] *** fudje joined
[05:28] <fudje> Can anyone comment on thread safety with NativeCall?

[05:33] <fudje> I've got a partial gettext binding that's using supposedly thread-safe calls to set locale (so I can have different languages in different threads); but given that Perl6 does threading differently - I wonder if the interface is going to be able to consistently remember per workload which locale to use.

[05:34] *** cdg joined
[05:36] <fudje> Or whether to just assume that I need to switch locale as part of the wrapper for each gettext call....

[05:37] <fudje> (Of course anyone saying "Why are you messing with this at all, we have equivalent functionality already, here read this" is also welcome to comment :D)

[05:38] *** cdg left
[05:39] <geekosaur> that would count as thread-local data and it will probably be a problem because perl 6 threads likely do not map 1-on-1 to pthreads threads. and I would be cautious about using a wrapper unless you also use some kind of synchronization (or: what happens if two threads call gettext at the same time?)

[05:41] <fudje> I think the most correct behaviour would be to lock the entire wrapper there

[05:41] <geekosaur> yes, that's what I meant

[05:54] <piojo> ‎geekosaur‎: do you know if two OS-level reads will ever get the same $*THREAD.id?

[05:55] <piojo> I mean, is it possible for one perl thread to be two OS threads?

[05:56] <piojo> I want to use $*THREAD.id to ensure each thread has its own data, like: my $dbh = $database-handles<$*THREAD.id>. It works in testing, but am I sitting on a time bomb

[05:58] *** evalable6 left
[05:59] *** evalable6 joined
[05:59] *** ChanServ sets mode: +v evalable6

[06:00] *** Zoffix joined
[06:01] <Zoffix> piojo: Text::CSV uses that technique IIRC, so it's probably safe, BUT, you're not keying it on THREAD id; you're just using string '$*THREAD.id'. You need $database-handles{$*THREAD.id}

[06:06] <fudje> hmm... If I'm using Promises I pretty consistently get $*THREAD.id repeats...

[06:06] *** mempko joined
[06:08] <geekosaur> do pay attention to what Zoffix just said. <> is a single quote

[06:08] <geekosaur> {} is an expression

[06:08] <fudje> p6: put bag(await ^10 .map: { start { $*THREAD.id } })

[06:08] <camelia> rakudo-moar 4fca94743: OUTPUT: «4(10)␤»

[06:09] <geekosaur> the other thing is I'm not sure whether $*THREAD tells you about the pthreads thread or the perl 6 thread

[06:09] <fudje> p6: put bag(await ^1024 .map: { start { $*THREAD.id } })

[06:09] <camelia> rakudo-moar 4fca94743: OUTPUT: «4(1024)␤»

[06:09] <fudje> huh

[06:09] <geekosaur> the perl 6 thread ID should generally be the same. whether it's the same pthreads thread that gettext is using is another question

[06:11] *** Zoffix left
[06:11] <fudje> Pretty sure $*THREAD is the perl6 thread based on that :)

[06:14] *** mempko left
[06:15] *** piojo left
[06:15] <fudje> piojo: are you using the Thread class directly or a promise (e.g. via start {}) ?

[06:28] *** kyan left
[06:31] *** wjw joined
[06:31] *** espadrine left
[06:32] *** pilne left
[06:34] *** wjw left
[06:35] *** cdg joined
[06:36] *** wjw joined
[06:37] *** wjw left
[06:38] *** Brumbazz joined
[06:39] *** rindolf joined
[06:39] *** cdg left
[06:41] *** ChoHag joined
[06:45] *** wamba joined
[06:48] *** setty1 joined
[07:06] <Geth> ¦ doc: ecbe32439c | (Moritz Lenz)++ | doc/Language/regexes.pod6

[07:06] <synopsebot> Link: https://doc.perl6.org/language/regexes

[07:06] <Geth> ¦ doc: Document :ignoremark (Issue #1133)

[07:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ecbe32439c

[07:07] *** Brumbazz left
[07:12] *** ryn1x left
[07:32] *** evalable6 left
[07:32] *** evalable6 joined
[07:32] <Geth> ¦ doc: b5a674d66e | (Moritz Lenz)++ | doc/Language/regexes.pod6

[07:32] <Geth> ¦ doc: Document regex substitution adverbs

[07:32] <Geth> ¦ doc: 

[07:32] <Geth> ¦ doc: Closes #1133

[07:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b5a674d66e

[07:32] <synopsebot> Link: https://doc.perl6.org/language/regexes

[07:35] *** cdg joined
[07:40] *** cdg left
[07:44] *** darutoko joined
[07:54] *** Piotr__ joined
[07:57] <p6steve> hi folks - I wonder if someone could help me out

[07:58] <p6steve> I am trying to interpolate into a token in a grammar thus:  token unam    { <$unames> }

[07:59] <p6steve> works fine in an isolated test setup - but when I copy over to my main project (2x pm several hundred lines each), I get an error - At Frame 1, Instruction 33, op 'findmeth', operand 1, expected MAST::Local, but didn't get one

[07:59] <p6steve> I am doing something dumb??

[07:59] <p6steve> This is Rakudo version 2017.07 built on MoarVM version 2017.07

[08:00] <moritz> sounds like a bug in rakudo

[08:00] <p6steve> I am loading a big HEREDOC - maybe pushing some size limit

[08:01] <moritz> might be worth checking in a newer rakudo

[08:01] <p6steve> ok - I'll try

[08:01] <moritz> s/in/with/

[08:02] <p6steve> thanks!

[08:04] *** sena_kun joined
[08:07] *** domidumont joined
[08:11] *** domidumont left
[08:12] *** domidumont joined
[08:16] *** nadim_ joined
[08:18] *** mson joined
[08:21] *** espadrine joined
[08:21] *** HoboWithAShotgun joined
[08:24] *** whimsical joined
[08:28] *** piojo joined
[08:28] *** whimsical left
[08:32] *** mr-fooba_ joined
[08:34] *** mr-foobar left
[08:36] *** cdg joined
[08:41] *** cdg left
[08:43] * HoboWithAShotgun wanders the halls looking for an iron to iron out the wrinkles

[08:57] *** TEttinger left
[09:01] *** ChoHag left
[09:14] *** Cabanossi left
[09:17] *** Cabanossi joined
[09:19] *** mr-fooba_ left
[09:22] *** mr-foobar joined
[09:23] *** ChoHag joined
[09:28] *** p6steve left
[09:34] *** AlexDaniel joined
[09:37] *** setty1 left
[09:37] *** cdg joined
[09:41] *** cdg left
[09:48] *** parv joined
[09:50] *** fudje left
[09:51] *** domidumont left
[09:52] *** domidumont joined
[10:00] *** domidumont left
[10:20] *** evalable6 left
[10:20] *** evalable6 joined
[10:28] *** mson left
[10:28] *** aborazmeh joined
[10:28] *** aborazmeh left
[10:28] *** aborazmeh joined
[10:31] *** Cabanossi left
[10:32] *** Cabanossi joined
[10:38] *** cdg joined
[10:42] *** cdg left
[11:02] *** bisectable6 left
[11:02] *** greppable6 left
[11:02] *** unicodable6 left
[11:02] *** squashable6 left
[11:02] *** committable6 left
[11:02] *** evalable6 left
[11:02] *** bloatable6 left
[11:02] *** benchable6 left
[11:03] *** nativecallable6 joined
[11:03] *** ChanServ sets mode: +v nativecallable6

[11:03] *** quotable6 joined
[11:03] *** ChanServ sets mode: +v quotable6

[11:03] *** releasable6 joined
[11:03] *** ChanServ sets mode: +v releasable6

[11:03] *** committable6 joined
[11:03] *** bloatable6 joined
[11:03] *** evalable6 joined
[11:03] *** ChanServ sets mode: +v evalable6

[11:03] *** benchable6 joined
[11:03] *** unicodable6 joined
[11:03] *** ChanServ sets mode: +v benchable6

[11:03] *** ChanServ sets mode: +v unicodable6

[11:03] *** bisectable6 joined
[11:03] *** coverable6 joined
[11:03] *** greppable6 joined
[11:03] *** squashable6 joined
[11:03] *** statisfiable6 joined
[11:03] *** dj_goku left
[11:05] *** dj_goku joined
[11:05] *** dj_goku left
[11:05] *** dj_goku joined
[11:08] <HoboWithAShotgun> oh come on, really?

[11:09] <HoboWithAShotgun> i just debugged this for 2 hours until i found the cause.

[11:09] <lizmat> and?

[11:09] <HoboWithAShotgun> what could be a potential problem with this method: https://hastebin.com/ivasoroyiv.pl

[11:10] <lizmat> first draft of Telemer

[11:10] <lizmat> first draft of Telemetry documentation: https://gist.github.com/lizmat/9dfe921efe7762c55fba534dfdbcd68c

[11:11] <lizmat> the $++ ?

[11:11] <HoboWithAShotgun> aye

[11:12] <lizmat> you intended what ?

[11:12] <HoboWithAShotgun> no! i assumed $++ to be zero at each invokation of the method

[11:12] <lizmat> alas, no, $++ is shorthand for a nameless state variable

[11:12] <HoboWithAShotgun> or better, each time the loop gets entered

[11:13] <HoboWithAShotgun> oh, ok. i thought it's a built in loop counter

[11:13] <MasterDuke> lizmat: line 92-93: "to take calculate"

[11:15] <lizmat> MasterDuke++  # fixed

[11:15] *** Cabanossi left
[11:17] *** Cabanossi joined
[11:18] *** parv left
[11:23] <AlexDaniel> lizmat: working on RT+GH report :)

[11:23] <lizmat> AlexDaniel++

[11:23] <moritz> lizmat: looks like something that could well go into a module

[11:24] <lizmat> you mean Telemetry, or just snap ?

[11:24] <moritz> both :-)

[11:25] <lizmat> so no core supported way to expose nqp::getrusage ?

[11:25] <moritz> hmmm

[11:26] <moritz> that's something that could have a very thin wrapper in Rakudo::Internals, and then we can experiment in module space with more feature-full implementations

[11:27] <moritz> or didn't we have another namespaces that was mostly meant as a public but thin API for things that otherwise only work with nqp ops?

[11:27] <lizmat> well, Rakudo::Internals is eh, internal ?

[11:28] *** pmurias joined
[11:28] <lizmat> subject to change without notice ?

[11:28] <pmurias> lizmat: re Telemetry docs, one thing that wasn't clear to be is what $t1 - $t2 results in

[11:30] <lizmat> moritz: perhaps put it in lib, just like Test.pm ?

[11:30] *** margeas joined
[11:31] <moritz> lizmat: maybe

[11:31] <moritz> I'm unconvinced either way :-)

[11:33] <pmurias> lizmat: if it's a Telemetry::Period maybe putting $t1-$2 in a temporary variable with a Telemetry::Period  would be more informative

[11:34] *** lizmat left
[11:37] *** lizmat joined
[11:38] <lizmat> stupid flay wifi :-(

[11:38] <lizmat> *flaky 

[11:38] <jast> maybe you do need to flay it, or at least threaten to

[11:39] *** cdg joined
[11:43] *** cdg left
[11:44] <lizmat> jast: tried that a few times already  :-)

[11:45] <jast> I'm all out of ideas, then :(

[11:45] *** piojo left
[11:51] *** Piotr__ left
[11:51] <lizmat> Draft of Telemetry::Period documentation: https://gist.github.com/lizmat/e601e91c90e93858a8a1836b965ec770

[11:53] <lizmat> moritz: making a Telemetry a module now seems useless, as it won't work before 80b49320

[11:54] <lizmat> and afaik we don't have a way to check for existence of nqp ops at runtime ?

[11:55] <lizmat> apart from EVAL I guess

[11:56] *** leah2 left
[12:00] *** leah2 joined
[12:04] *** mxco86 joined
[12:05] *** mxco86 left
[12:05] *** mxco86 joined
[12:07] *** Piotr__ joined
[12:12] *** espadrine left
[12:12] *** HoboWithAShotgun left
[12:13] *** Actualeyes joined
[12:14] *** HoboWithAShotgun joined
[12:19] *** cdg joined
[12:19] *** Aaronepower left
[12:20] *** blakebooyah left
[12:22] *** finanalyst joined
[12:24] *** cdg left
[12:26] *** finanalyst left
[12:36] *** Actualeyes left
[12:36] <buggable> New CPAN upload: IO-Socket-Async-SSL-0.5.tar.gz by JNTHN https://cpan.metacpan.org/authors/id/J/JN/JNTHN/Perl6/IO-Socket-Async-SSL-0.5.tar.gz

[12:36] *** Actualeyes joined
[12:38] *** Actualeyes left
[12:38] *** wamba left
[12:46] *** Cabanossi left
[12:47] *** Cabanossi joined
[12:48] *** cdg joined
[12:52] *** cdg left
[12:56] *** MasterDuke left
[12:56] <buggable> New CPAN upload: IO-Socket-Async-SSL-0.5.0.tar.gz by JNTHN https://cpan.metacpan.org/authors/id/J/JN/JNTHN/Perl6/IO-Socket-Async-SSL-0.5.0.tar.gz

[12:57] *** espadrine joined
[13:12] <colomon> just tried installing Inline::Python, and it failed because of a dependency on Panda::Common

[13:14] <colomon> in particular the Build.pm file uses Panda::Common and Panda::Builder

[13:15] <colomon> ah, I guess I can install those by hand?

[13:16] <colomon> (by “by hand” I mean explicitly with zel install Panda::Common)

[13:17] <colomon> (this sort of thing is why I was running a 6 month old version of Rakudo)

[13:17] *** evalable6 left
[13:17] <colomon> yes, now Inline::Python claims to install okay.

[13:17] *** evalable6 joined
[13:17] *** ChanServ sets mode: +v evalable6

[13:21] *** domidumont joined
[13:31] <Geth> ¦ ecosystem: 6615ee2f60 | (Jonathan Worthington)++ (committed using GitHub Web editor) | META.list

[13:31] <Geth> ¦ ecosystem: IO::Socket::Async::SSL now on CPAN

[13:31] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/6615ee2f60

[13:32] <jdv79> m: "ab" ~~ /(.)*/; my %h = :k($0>>.Str); say %h<k>.WHAT, %h<k>[0].VAR.WHAT; %h<k>[0] = ""

[13:32] <camelia> rakudo-moar 524404861: OUTPUT: «(Array)(Str)␤Cannot modify an immutable Str (a)␤  in block <unit> at <tmp> line 1␤␤»

[13:32] <jdv79> m: "ab" ~~ /(.)*/; my %h = :k(@=$0>>.Str); say %h<k>.WHAT, %h<k>[0].VAR.WHAT; %h<k>[0] = ""

[13:32] <camelia> rakudo-moar 524404861: OUTPUT: «(Array)(Scalar)␤»

[13:32] <jdv79> why is that diff there?

[13:38] <moritz> m: my @a; @a[0] := 'abc'; @a[0] = 'def';

[13:38] <camelia> rakudo-moar 524404861: OUTPUT: «Cannot modify an immutable Str (abc)␤  in block <unit> at <tmp> line 1␤␤»

[13:38] <moritz> in the first example, the string is bound to an array item, not assigned to it

[13:40] *** TimToady joined
[13:42] *** domidumont left
[13:45] *** dogbert17 joined
[13:47] *** COMBORICO joined
[13:49] *** cdg joined
[13:49] <jdv79> the docs infer that arrays typically have containers

[13:49] <jdv79> i realize what the diff is.  i asked why the diff is.

[13:49] <jdv79> i would get it more if one was a list and one was an array

[13:50] <jdv79> and the default for list was uncontainered and array the opposite

[13:50] <moritz> right

[13:52] <jdv79> so why did the first example up there create an array of non-containerized elements?

[13:52] <jdv79> is there something there that implies binding?

[13:53] *** cdg left
[13:54] <mst> I thnk that $0's elements are not containerised because it's not writeable, so the >>.Str returns un-containerised stuff too?

[13:57] <jdv79> that'd be my guess but seems confusing is part of my point.  why isn't that a list in $0 then?

[13:57] *** pilne joined
[13:58] <jdv79> well, i guess that's just a p6 design issue

[13:59] *** Rawriful joined
[14:00] <mst> m: "ab" ~~ /(.)*/; say $0.WHAT;

[14:00] <camelia> rakudo-moar 524404861: OUTPUT: «(Array)␤»

[14:00] <jdv79> its odd that we only have certain topicalizing control flow options

[14:00] <jdv79> be cool if there was a if that topicalized

[14:12] *** Sgeo left
[14:17] *** khw joined
[14:18] *** aborazmeh left
[14:21] *** esh joined
[14:25] <moritz> m: sub f() { say 42 }; if f() -> $x { say $x }

[14:25] <camelia> rakudo-moar b30916f35: OUTPUT: «42␤True␤»

[14:25] <moritz> like that? :-)

[14:27] *** TimToady left
[14:28] *** TimToady joined
[14:31] *** Cabanossi left
[14:32] *** Cabanossi joined
[14:37] *** okl joined
[14:39] <Geth> ¦ modules.perl6.org: dca2795682 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p20TravisCI.pm

[14:39] <Geth> ¦ modules.perl6.org: Fix breakage in travis postprocessor

[14:39] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/dca2795682

[14:40] <Geth> ¦ modules.perl6.org: 61bb5c6570 | (Zoffix Znet)++ (committed using GitHub Web editor) | use-me-for-commit-triggers

[14:40] <Geth> ¦ modules.perl6.org: [REBUILD] it

[14:40] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/61bb5c6570

[14:41] *** okl left
[14:47] *** Sgeo joined
[14:49] *** cdg joined
[14:53] *** apallatto joined
[14:54] *** cdg left
[14:56] *** ChoHag left
[14:59] *** darkmorph joined
[15:18] *** raiph joined
[15:20] <wander> m: say so 1|3|5 != 2

[15:20] <camelia> rakudo-moar f7d21b5d6: OUTPUT: «True␤»

[15:20] <wander> m: say so any(1,3,5) != 2

[15:20] <camelia> rakudo-moar f7d21b5d6: OUTPUT: «True␤»

[15:21] *** piojo joined
[15:21] *** Piotr__ left
[15:22] <sena_kun> eater, ping?

[15:30] <wander> https://github.com/perl6/doc/blob/c091ada9c5fd9866e6d37eabbd0df68b92c1e96b/doc/Language/concurrency.pod6#L83-L87

[15:31] *** araraloren left
[15:31] <wander> ^^ this example throw an exception, and seems don't do what it explains below

[15:33] <wander> oops, $promise2 is really broken, but when "say $promise2.cause;", it complain "Tried to get the result of a broken Promise"

[15:33] *** apallatto left
[15:34] *** apallatto joined
[15:34] <wander> but "say $promise1.cause;" runs well

[15:34] *** Brumbazz joined
[15:34] *** ggoebel left
[15:39] *** apallatto left
[15:42] *** cdg joined
[15:45] *** apallatto joined
[15:57] *** domidumont joined
[15:59] <HoboWithAShotgun> can i have a nested operator? you may know i have unit operators, so i can say my $current = 12A; i have multiple of them and i want to be able to write

[15:59] *** Morfent joined
[15:59] *** zakharyas joined
[15:59] <HoboWithAShotgun> my $current = 12kA; my $current2 = 3mmA; and so on

[16:00] <HoboWithAShotgun> but i don't want to have x alternations of the ampere postfix

[16:00] <HoboWithAShotgun> so can i create a k and mm operator that combines with the A operator?

[16:01] <timotimo> HoboWithAShotgun: you might have to force people to write k\V

[16:01] <moritz> you can combine multiple postfix operators as long as you separate them somehow

[16:01] <timotimo> m: sub postfix:<a>($a){ "$a a" }; sub postfix:<b>($a) { "$a b" }; say 100a\b; say 100b\a

[16:01] <camelia> rakudo-moar f7d21b5d6: OUTPUT: «100 a b␤100 b a␤»

[16:02] <timotimo> m: sub postfix:<a>($a){ "$a a" }; sub postfix:<b>($a) { "$a b" }; say 100ab

[16:02] <camelia> rakudo-moar f7d21b5d6: OUTPUT: «100 a b␤»

[16:02] <timotimo> oh?

[16:02] <moritz> m: sub postfix:<k>($x) { 1000 * $x }; sub postfix:<A>($x) { "$x Ampere" }; say 42k\A

[16:02] <camelia> rakudo-moar f7d21b5d6: OUTPUT: «42000 Ampere␤»

[16:02] <timotimo> well, isn't that neat

[16:02] *** Mrofnet left
[16:02] <moritz> m: sub postfix:<k>($x) { 1000 * $x }; sub postfix:<A>($x) { "$x Ampere" }; say 42kA

[16:02] <camelia> rakudo-moar f7d21b5d6: OUTPUT: «42000 Ampere␤»

[16:02] <moritz> I wonder if this is a bug

[16:02] *** Khisanth left
[16:03] <timotimo> it'll break if someone introduces a kA operator in some unrelated module

[16:03] <timotimo> suddenly the parse changes

[16:03] <timotimo> that's not very nice

[16:03] *** zakharyas left
[16:04] *** zakharyas joined
[16:04] *** wamba joined
[16:08] <mst> well, but, equally, you could totally have a j operator and a k operator and then also define a jk operator that's an optimisation over composing the two individual implementations

[16:08] <mst> so it could turn out to be both a footgun and a feature

[16:09] <timotimo> right

[16:09] <timotimo> a featgun

[16:09] <mst> timotimo++

[16:10] <mst> https://twitter.com/shadowcat_mst/status/924669635215134722 # *snarf*

[16:14] <sena_kun> my friend is getting `Unexplained error` on linux machine while installing a module. Googling shows it's a libuv error. Is there any possible workaround?

[16:15] <mst> http://trout.me.uk/data.jpg

[16:15] <timotimo> sena_kun: strace might give a hint for what exactly errored?

[16:16] *** Khisanth joined
[16:16] <sena_kun> timotimo, perhaps. Is just installing strace and running it like `strace zef install ...` enough?

[16:17] <timotimo> you'll likely need to pass -f so that it doesn'"t stop tracing when child programs are launched 

[16:17] <timotimo> but yeah, that'd be enough

[16:17] <sena_kun> ok.

[16:17] <timotimo> it'll likely give you a firehose of information

[16:18] *** zakharyas left
[16:18] <timotimo> i recommend grep -v for at least brk and mprotect

[16:20] <sena_kun> so it means no quick workaround, just an issue filling?

[16:21] <mst> we can't help you find a workaround when you haven't given us any diagnostic information whatsoever

[16:22] <mst> right now your question is equivalent to my grandmother saying "the internet is broken" in terms of amount of detail

[16:22] *** ChoHag joined
[16:23] *** HoboWithAShotgun left
[16:24] <sena_kun> well, I just assumed that, for example, previous rakudo/moarvm commit or usage of release or dances around the fire could help in case someone bumped into it already. I am not familiar with libav so I don't know is it obvious error or something with black magic. Logs are on the way, don't worry. :)

[16:27] <sena_kun> as for diagnostic information, btw, you are right, sorry. rakudobrew 5 minutes fresh, the exact module is `Cro::HTTP`. It happens on void linux.

[16:30] *** Cabanossi left
[16:31] <timotimo> does it happen in the test suite? cro itself suggests to install it without running the tests ;)

[16:31] <timotimo> or at least it used to

[16:32] <sena_kun> give me one more minute, please. yeah, during tests.

[16:32] *** Cabanossi joined
[16:33] <sena_kun> https://pastebin.com/LpgxPQMt - it looks like that. strace log is still on the way.

[16:36] <sena_kun> during cro development it's not too rare to bump into some regressions, so yeah, without testing. :) But while you can --force broken tests, you cannot do anything with a hang during installation.

[16:36] <sena_kun> s/testing/running tests/

[16:37] *** cdg left
[16:38] <sena_kun> the log weight is 39mb, so asked him for last 2-3 thousand of lines.

[16:38] *** cdg joined
[16:39] *** ggoebel joined
[16:41] *** cdg left
[16:45] *** troys joined
[16:46] *** setty1 joined
[16:47] <sena_kun> https://pastebin.com/d0UrbNai - the log before first `Unexplained error`, and then it becomes like https://pastebin.com/9dABpbjT

[16:48] <sena_kun> tell me if full(39mb) log or any other info is needed.

[16:48] <ugexe> i thought IO::Socket::Async::SSL was broken?

[16:49] *** cdg joined
[16:51] *** cdg left
[16:51] <sena_kun> it is indeed.

[16:52] <sena_kun> but it is possible to just --force it. However, I might have a clue on how to fix it...

[16:54] *** nadim_ left
[16:57] *** xinming_ joined
[16:57] *** cdg joined
[16:57] *** MasterDuke joined
[16:59] *** cdg left
[16:59] *** cdg joined
[17:00] *** xinming left
[17:07] *** MasterDuke left
[17:19] *** raiph left
[17:20] *** HoboWithAShotgun joined
[17:25] *** raiph joined
[17:33] <sena_kun> in the end just removed test file that triggered the problem. not enough info and remote investigation is not the best thing for night of Sunday, so never mind me.

[17:40] *** HoboWithAShotgun left
[17:41] *** BenGoldberg joined
[17:45] *** Rawriful left
[17:47] *** Zoffix joined
[17:48] <Zoffix> sena_kun: well, tell your friend to use releases instead of arbitrary, minimally-tested development commits that may have bugs

[17:48] <Zoffix> sena_kun: teh bug's in rakudo due to native call JIT changes

[17:48] <sena_kun> Zoffix, oh, sure. Thanks!

[17:49] <Zoffix> sena_kun: this is the ticket (I think Async::SSL is used by that module): https://github.com/rakudo/rakudo/issues/1220

[17:49] <Zoffix> looking at it now, thought I know nothing about JIT, so unless it's just some typo somewhere, I won't fix it

[17:51] *** drissel joined
[17:54] *** eroux joined
[17:55] *** HoboWithAShotgun joined
[17:57] *** Rawriful joined
[18:00] *** HoboWithAShotgun left
[18:00] *** piojo left
[18:04] *** troys is now known as troys_

[18:07] *** TEttinger joined
[18:09] *** Brumbazz left
[18:09] *** Piotr__ joined
[18:21] *** poohman joined
[18:27] *** HoboWithAShotgun joined
[18:30] *** redhands joined
[18:30] *** darutoko left
[18:31] <HoboWithAShotgun> Can i envelope a sub in a foreign module? Specifically i want to manipulate the "proclaim" sub in Test, so it prints in color

[18:32] <HoboWithAShotgun> currently using this to do that: https://hastebin.com/yahijosale.pl

[18:32] <HoboWithAShotgun> but yeah know, it's not pretty

[18:33] *** cdg left
[18:36] * HoboWithAShotgun yawns wholeheartedly

[18:36] * Zoffix would just manipulate the TAP

[18:36] <Zoffix> TAP::Harness probably has a parser

[18:38] <Zoffix> You can wrap routines with `.wrap` method, but proclaim is not exported

[18:38] <Zoffix> nor is `our`ed.

[18:39] <Zoffix> That code has an error, how are you "using" it?

[18:39] <Zoffix> 4 errors

[18:39] *** redhands left
[18:40] <HoboWithAShotgun> what, my script?

[18:40] <HoboWithAShotgun> that's Perl 5

[18:40] <Zoffix> Oh, didn't realize they had a `when`

[18:41] <Zoffix> Is that from `switch` feature that turned out to be a bad idea and was removed or something?

[18:42] <HoboWithAShotgun> no, Perl 5 bundles such stuff in "features" that have to be explicitly enabled

[18:42] *** mson joined
[18:43] <lizmat> HoboWithAShotgun: the problem is really that proclaim() is not part of the official API of Test

[18:43] <moritz> Zoffix: yes, given, when and smartmatch are "experimental" in newer Perl 5 versions

[18:44] *** redhands joined
[18:44] * HoboWithAShotgun puts TAP::Parser and Test::Color on the todo list

[18:44] <HoboWithAShotgun> unless we have a TAP Parser already

[18:44] <Zoffix> "Feature "smartmatch" is not supported by Perl 5.26.0 at -e line 1."

[18:44] * lizmat thinks there is

[18:45] *** Cabanossi left
[18:45] <lizmat> well, http://modules.perl6.org/search/?q=TAP%3A%3AHarness actually

[18:46] <HoboWithAShotgun> noted. but i gonna hit the sack now

[18:46] *** redhands left
[18:46] * pmurias is not sure what route should the js backend go with string handling

[18:47] *** HoboWithAShotgun left
[18:47] *** Cabanossi joined
[18:47] <pmurias> a whole bunch of roast tests want NFG but it seems this would slow stuff down a lot and add an extra barrier to interop with js code

[18:48] *** Zoffix left
[18:50] <lizmat> pmurias: so you just want to use NFC as an alternative to NFG ?

[18:55] <lizmat> afk for some organised crashing in curb #1

[19:00] *** BenGoldberg left
[19:01] *** poohman left
[19:03] *** poohman joined
[19:06] <buggable> New CPAN upload: URI-Encode-0.000.003_20171029.tar.gz by PSIXDISTS https://cpan.metacpan.org/authors/id/P/PS/PSIXDISTS/Perl6/URI-Encode-0.000.003_20171029.tar.gz

[19:23] *** evalable6 left
[19:23] *** evalable6 joined
[19:43] *** bisectable6 left
[19:43] *** releasable6 left
[19:43] *** quotable6 left
[19:43] *** evalable6 left
[19:43] *** committable6 left
[19:43] *** coverable6 left
[19:43] *** statisfiable6 left
[19:43] *** greppable6 left
[19:43] *** bloatable6 left
[19:43] *** squashable6 left
[19:43] *** benchable6 left
[19:43] *** unicodable6 left
[19:43] *** nativecallable6 left
[19:43] *** unicodable6 joined
[19:43] *** benchable6 joined
[19:43] *** bloatable6 joined
[19:43] *** nativecallable6 joined
[19:43] *** greppable6 joined
[19:43] *** quotable6 joined
[19:43] *** evalable6 joined
[19:43] *** ChanServ sets mode: +v benchable6

[19:43] *** ChanServ sets mode: +v bloatable6

[19:43] *** ChanServ sets mode: +v nativecallable6

[19:43] *** ChanServ sets mode: +v greppable6

[19:43] *** ChanServ sets mode: +v quotable6

[19:43] *** ChanServ sets mode: +v evalable6

[19:43] *** committable6 joined
[19:43] *** coverable6 joined
[19:43] *** bisectable6 joined
[19:43] *** releasable6 joined
[19:43] *** squashable6 joined
[19:43] *** ChanServ sets mode: +v squashable6

[19:43] *** statisfiable6 joined
[19:46] *** domidumont left
[19:50] *** mr-foobar left
[19:52] *** mr-foobar joined
[19:54] *** Mrofnet joined
[19:54] *** napo1eon joined
[19:55] *** ryn1x joined
[19:56] *** eliasr joined
[19:56] *** Morfent left
[20:10] <nine> Sooo.... how can I actually download the dist? http://modules.perl6.org/dist/IO::Socket::Async::SSL:cpan:JNTHN

[20:10] <Geth> ¦ perl6-examples: c539e3d67c | (Shlomi Fish)++ | categories/euler/prob284-shlomif.p6

[20:10] <Geth> ¦ perl6-examples: Add the solution to Euler#284.

[20:10] <Geth> ¦ perl6-examples: review: https://github.com/perl6/perl6-examples/commit/c539e3d67c

[20:12] *** Zoffix joined
[20:12] *** Praise joined
[20:12] *** Praise left
[20:12] *** Praise joined
[20:12] <Zoffix> nine: there's a link on search page (the CPAN icon: http://www.cpan.org/authors/id/J/JN/JNTHN/Perl6/IO-Socket-Async-SSL-0.5.0.tar.gz ) Just needds to be added to individual pages

[20:13] <Zoffix> nine: do you know if anything special needs to be done to this case in this commit? https://github.com/MoarVM/MoarVM/commit/82273161ce11981f0c942bcf468670beec285b31#diff-096dfff63a9f0fb34f4f93b732e14e43L461

[20:13] <Zoffix> Adding `goto fail` up there fixes R#1220 ... trying to figure out what it doesn't like with it

[20:14] <synopsebot> R#1220 [open]: https://github.com/rakudo/rakudo/issues/1220 [regression] Regression since 2017.10 breaks IO::Socket::Async::SSL tests

[20:15] <nine> ===> Install [FAIL] for OpenSSL:ver('0.1.15'):auth('github:sergot'): Failed to open file /home/nine/.zef/store/openssl.git/08b4516ff5f6a2cb58cabd8bb42d603e0e61254b/resources/ssleay32.dll libeay32.dll: No such file or directory

[20:15] *** MasterDuke joined
[20:15] <nine> Diagnosing this seems like a challenge of its on

[20:15] <nine> own

[20:19] *** troys_ is now known as troys

[20:21] <nine> Zoffix: can't find any download links on http://modules.perl6.org/search/?q=openssl either

[20:23] <Zoffix> nine: there aren't any CPAN modules in those results

[20:24] <nine> I'm not looking for CPAN modules? I'm just trying to install the dependencies of the module with which I ought to reproduce a bug.

[20:24] <nine> Finally succeeded by manually hunting down the repos on github and editing the META6.json to make it installable

[20:25] <Zoffix> Then I don't know what you wanted to do download

[20:25] <nine> How did anyone even find the bug when this stuff is so hard to install? :)

[20:25] *** Zoffix left
[20:25] <nine> Zoffix: there used to be links to github repos on modules.perl6.org? They were quite handy for what I'm doing.

[20:25] *** camelia joined
[20:27] *** ChanServ sets mode: +v camelia

[20:29] <nine> Zoffix: the CPointer case is a red herring. It's just that the broken ASN1_STRING_to_UTF8 function also has a Pointer argument. But the VMArray argument is the broken one.

[20:30] <nine> Odd though that the p5_sv_to_buf(Pointer, CArray[CArray[int8]]) method in Inline::Perl5 seems to work just fine. The signature is almost identical.

[20:31] <rindolf> time perl6 prob284-shlomif.p6 gives me 5minutes

[20:37] *** skirmisha joined
[20:38] <skirmisha> mst, hi, just wanted to thank you for your effort today

[20:41] <rindolf> it takes 45s in g++ -O3+gmp

[20:42] *** skirmisha left
[20:42] <rindolf> so not too bad

[20:43] <rindolf> my algo is likely inefficient

[20:43] *** poohman left
[20:43] *** poohman joined
[20:43] *** poohman left
[20:47] *** AndChat|370944 joined
[20:47] *** COMBORICO left
[20:48] *** MasterDuke left
[20:49] *** eroux left
[20:50] <nine> Even more curious, one of NativeCall's tests looks like this: sub TakeANullPointerArray(Pointer, CArray[CArray[int8]]) returns int32

[20:50] <nine> Which really is the same just with switched arguments

[20:52] *** setty1 left
[20:52] *** khw left
[20:57] <Geth> ¦ doc: jstuder-gh++ created pull request #1637: Modify Dockerfile and Add Docker-related Make targets

[20:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1637

[21:01] *** Aaronepower joined
[21:03] *** redhands joined
[21:05] <nine> Could be that we'd need a MVM_nativecall_refresh there

[21:07] *** troys left
[21:08] *** Piotr_ joined
[21:09] <lizmat> well, that was an interesting race

[21:12] *** Piotr__ left
[21:13] *** khw joined
[21:15] *** darkmorph left
[21:16] <rindolf> lizmat: which?

[21:16] <lizmat> F1 Mexico

[21:17] <moritz> and here I thought there was a race condition that lizmat++ found :-)

[21:17] <lizmat> hehe  :-)

[21:17] *** AndChat|370944 left
[21:18] <lizmat> and the winner was Max, who is actually a guy who grew up about 6km from where we live

[21:19] <lizmat> we pass by his grandfather's icecream parlour regularly

[21:19] <lizmat> or the place where he did his first cart racing...  :-)

[21:19] *** Piotr_ left
[21:19] <lizmat> he's a local hero :-)

[21:20] <moritz> nice :-)

[21:21] <moritz> I've had school swimming in a pool where Hannah Stockbauer trained regularly

[21:22] <moritz> who became world champion

[21:22] <moritz> https://en.wikipedia.org/wiki/Hannah_Stockbauer

[21:26] *** stmuk joined
[21:27] *** stmuk_ left
[21:35] *** cdg joined
[21:35] *** pmurias left
[21:35] <lizmat> Max is still a long way from world champion...  but maybe next year  :-)

[21:37] <moritz> to be fair, the swimmers have more distances and thus more races where they can become champion :-)

[21:37] <moritz> and: go Max! :-)

[21:38] *** zakharyas joined
[21:38] <moritz> anyway, time for sleep here, TTFN

[21:39] *** cdg left
[21:42] <timotimo> lizmat: oh btw i drove to my parent's house today :)

[21:43] <lizmat> timotimo: so why don't you drop by tomorrow ?

[21:43] <timotimo> got plans for tomorrow. not sure if there are plans for tuesday though

[21:44] <lizmat> ah, ok, well, let us know

[21:44] <timotimo> sure

[21:44] *** Cabanossi left
[21:44] <lizmat> we only have fitness in the morning :-)

[21:45] <timotimo> fascinating. my touchpad really does switch between "two fingers to scroll" and "three fingers to scroll" on each reboot since i spilled some water on it

[21:45] <lizmat> should be ok after 1pm

[21:45] <rindolf> wow! Java consumes over 30% of my RAM when building rakudo

[21:47] *** Cabanossi joined
[22:06] *** cdg joined
[22:11] *** cdg left
[22:12] *** mson left
[22:15] *** cdg joined
[22:18] *** BenGoldberg joined
[22:19] *** cdg left
[22:23] *** sena_kun left
[22:34] *** Morfent joined
[22:37] *** Merfont joined
[22:37] *** Mrofnet left
[22:40] *** Morfent left
[22:43] *** zakharyas left
[22:48] <timotimo> is there any terminal emulator that'd let me click (aka xdg-open) hyperlinks in the terminal using only keyboard commands?

[22:54] *** rindolf left
[22:56] <leah2> ttps://wiki.archlinux.org/index.php/rxvt-unicode#Yankable_URLs_.28no_mouse.29

[22:56] <leah2> https://wiki.archlinux.org/index.php/rxvt-unicode#Yankable_URLs_.28no_mouse.29

[22:57] <timotimo> oh, i remember having that a long time ago

[22:57] <timotimo> 1) sleep, 2) set that up ... maybe

[22:58] <geekosaur> glah. there was one announced a couple months ago (either an emulator or a plugin) that extracted all URLs into a menu you could navigate by keyboard

[22:58] <geekosaur> I can't find it now :(

[22:58] <timotimo> ooh :(

[22:59] <leah2> there's also such a thing for tmux iirc

[22:59] *** Cabanossi left
[23:01] *** mson joined
[23:01] <timotimo> the problem with that is that my tmux runs on a remote server

[23:01] <timotimo> so i'd have to somehow get it tunneled back to my machine

[23:02] <leah2> there used to be times when firefox communicated with the local X11 display %)

[23:02] <timotimo> hm. actually. if it's only about irc anyway i should use glowing bear instead of my terminal to chat

[23:02] *** Cabanossi joined
[23:02] *** ggoebel left
[23:02] <timotimo> yeah, but the remote system is openbsd (or freebsd?) and pretty sure not to get a firefox installed :D

[23:04] <timotimo> tadaa, every link is noc adorned with a number that i can use to "click" it without my mouse

[23:05] <timotimo> annoyingly, that includes every nickname on every line :D

[23:08] *** Rawriful left
[23:09] *** aindilis joined
[23:11] <BenGoldberg> For most irc clients, that's so you can send a file, do a whois, ignore, add to friends list, etc.

[23:12] * BenGoldberg ponders customizing the right-click menu there so it contains an actual "etc." item.

[23:16] *** ggoebel joined
[23:21] *** thowe left
[23:22] *** raschipi joined
[23:23] <timotimo> i believe glowing-bear only has it hooked up to put the name and a colon in the input bar

[23:36] <BenGoldberg> Does it not have this new fangled thing known as tab completion?

[23:39] *** espadrine left
[23:45] * BenGoldberg is suddenly contemplating writing a bash based irc client, which does a chroot to a directory which has programs named /join, /part, etc. and uses the shell's own command parser.

[23:48] <geekosaur> that sounds like a recipe for confusion to me

[23:48] <geekosaur> also, caching issues. (the history of mh comes to mind)

[23:57] *** knight__ joined
[23:59] <knight__> Guys, I must say Perl6  is exceptionally, especially his parallelism/concur./async  :-)

[23:59] <knight__> Great work.

