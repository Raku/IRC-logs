[00:01] *** troys is now known as troys_

[00:03] *** cdg joined
[00:03] *** cdg left
[00:07] *** cdg_ left
[00:11] *** BenGoldberg joined
[00:11] *** Rawriful left
[00:21] *** margeas left
[00:26] *** Cabanossi left
[00:28] *** Cabanossi joined
[00:38] *** Actualeyes joined
[00:43] *** cdg joined
[00:48] *** cdg left
[00:57] *** lizmat left
[01:17] *** releasable6 left
[01:17] *** benchable6 left
[01:17] *** greppable6 left
[01:17] *** statisfiable6 left
[01:17] *** bisectable6 left
[01:17] *** nativecallable6 left
[01:17] *** unicodable6 left
[01:17] *** quotable6 left
[01:17] *** bloatable6 left
[01:17] *** committable6 left
[01:17] *** evalable6 left
[01:17] *** coverable6 left
[01:17] *** squashable6 left
[01:18] *** nativecallable6 joined
[01:18] *** quotable6 joined
[01:18] *** committable6 joined
[01:18] *** ChanServ sets mode: +v committable6

[01:18] *** bloatable6 joined
[01:18] *** ChanServ sets mode: +v bloatable6

[01:18] *** bisectable6 joined
[01:18] *** greppable6 joined
[01:18] *** evalable6 joined
[01:18] *** coverable6 joined
[01:18] *** releasable6 joined
[01:18] *** ChanServ sets mode: +v releasable6

[01:18] *** benchable6 joined
[01:18] *** ChanServ sets mode: +v benchable6

[01:18] *** unicodable6 joined
[01:18] *** ChanServ sets mode: +v evalable6

[01:18] *** ChanServ sets mode: +v coverable6

[01:18] *** statisfiable6 joined
[01:18] *** squashable6 joined
[01:19] *** cdg joined
[01:20] *** lizmat joined
[01:23] *** cdg left
[01:28] *** raschipi joined
[01:29] *** raschipi left
[01:33] *** bitrauser_ joined
[01:37] *** bitrauser left
[01:42] *** Cabanossi left
[01:43] *** Cabanossi joined
[01:44] *** eliasr left
[01:45] *** ilbot3 left
[01:47] *** HoboWithAShotgun left
[01:55] *** ilbot3 joined
[01:55] *** ChanServ sets mode: +v ilbot3

[02:16] *** evalable6 left
[02:16] *** evalable6 joined
[02:16] *** ChanServ sets mode: +v evalable6

[02:25] *** noganex_ joined
[02:28] *** noganex left
[02:43] *** ChoHag left
[02:52] *** BenGoldberg left
[02:57] *** kyan joined
[03:03] *** mcmillhj joined
[03:04] <Geth> ¦ doc: 3e4a5d3f26 | (Alex Chen)++ (committed using GitHub Web editor) | doc/Type/Cursor.pod6

[03:04] <Geth> ¦ doc: fix typo

[03:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3e4a5d3f26

[03:04] <synopsebot> Link: https://doc.perl6.org/type/Cursor

[03:07] *** mcmillhj left
[03:12] *** Cabanossi left
[03:13] *** Cabanossi joined
[03:32] *** khw left
[03:41] *** Cabanossi left
[03:42] *** Cabanossi joined
[04:02] *** evalable6 left
[04:02] *** evalable6 joined
[04:05] *** bwisti joined
[04:11] *** sena_kun joined
[04:11] *** Cabanossi left
[04:12] *** Cabanossi joined
[04:16] *** bdmatatu joined
[04:16] *** TreyHarris left
[04:22] *** bdmatatu left
[04:23] *** llfourn joined
[04:30] *** sena_kun left
[04:37] *** xtreak joined
[04:53] *** TreyHarris joined
[05:04] *** cdg joined
[05:05] *** pilne left
[05:08] *** cdg left
[05:16] *** xtreak left
[05:18] *** xtreak joined
[05:25] *** Cabanossi left
[05:27] *** Cabanossi joined
[05:32] *** mcmillhj joined
[05:37] *** mcmillhj left
[05:46] *** wamba joined
[05:49] *** espadrine left
[05:57] *** ufobat joined
[06:02] *** domidumont joined
[06:06] *** lowbro joined
[06:06] *** lowbro left
[06:06] *** lowbro joined
[06:11] *** Cabanossi left
[06:13] *** Cabanossi joined
[06:17] *** vike left
[06:18] *** itaipu joined
[06:38] *** coverable6 left
[06:38] *** greppable6 left
[06:38] *** benchable6 left
[06:38] *** quotable6 left
[06:38] *** unicodable6 left
[06:38] *** committable6 left
[06:38] *** bloatable6 left
[06:38] *** bisectable6 left
[06:38] *** releasable6 left
[06:38] *** squashable6 left
[06:38] *** evalable6 left
[06:38] *** nativecallable6 left
[06:38] *** statisfiable6 left
[06:38] *** nativecallable6 joined
[06:38] *** ChanServ sets mode: +v nativecallable6

[06:38] *** greppable6 joined
[06:38] *** ChanServ sets mode: +v greppable6

[06:38] *** evalable6 joined
[06:38] *** ChanServ sets mode: +v evalable6

[06:38] *** committable6 joined
[06:38] *** quotable6 joined
[06:38] *** coverable6 joined
[06:38] *** unicodable6 joined
[06:38] *** bisectable6 joined
[06:38] *** bloatable6 joined
[06:38] *** ChanServ sets mode: +v unicodable6

[06:38] *** ChanServ sets mode: +v bisectable6

[06:38] *** ChanServ sets mode: +v bloatable6

[06:38] *** releasable6 joined
[06:38] *** benchable6 joined
[06:38] *** squashable6 joined
[06:38] *** ChanServ sets mode: +v squashable6

[06:38] *** statisfiable6 joined
[06:38] *** ChanServ sets mode: +v statisfiable6

[06:38] *** wamba left
[06:42] *** vike joined
[06:46] *** chakli joined
[06:49] *** chakli left
[06:52] *** vivus-ignis joined
[06:52] *** Ven joined
[06:53] *** Ven is now known as Guest65906

[07:08] *** itaipu left
[07:09] *** domidumont left
[07:10] *** domidumont joined
[07:11] *** robertle left
[07:12] *** mr-foobar left
[07:21] *** wamba joined
[07:26] *** Guest65906 left
[07:27] *** Ven_ joined
[07:28] *** kyan left
[07:31] *** nadim joined
[07:49] *** rindolf joined
[07:54] *** xtreak left
[07:56] *** ChoHag joined
[07:56] *** domidumont left
[07:57] *** xtreak joined
[07:57] *** domidumont joined
[08:02] *** sproctor joined
[08:02] *** Ven_ left
[08:03] *** Ven joined
[08:03] *** Ven is now known as Guest16823

[08:03] *** rba joined
[08:11] *** xtreak left
[08:13] *** zakharyas joined
[08:13] *** mcmillhj joined
[08:14] *** okl joined
[08:15] *** robertle joined
[08:17] *** mcmillhj left
[08:23] *** okl left
[08:29] *** mcmillhj joined
[08:34] *** rba_ joined
[08:34] *** mcmillhj left
[08:36] *** cpage left
[08:37] *** rba left
[08:38] *** cpage_ left
[08:39] *** mcmillhj joined
[08:40] *** xtreak joined
[08:41] *** HoboWithAShotgun joined
[08:42] *** salva left
[08:44] *** mcmillhj left
[08:48] *** thunktone joined
[08:52] *** cpage joined
[08:55] *** cpage_ joined
[08:57] *** tardisx left
[08:57] *** thunktone left
[08:57] *** rgrau joined
[08:57] *** rba_ left
[08:58] *** tardisx joined
[08:59] *** thunktone joined
[09:00] *** rba joined
[09:04] *** itaipu joined
[09:04] *** cdg joined
[09:09] *** cdg left
[09:09] *** itaipu left
[09:09] *** pmurias joined
[09:19] *** Guest16823 left
[09:26] *** sena_kun joined
[09:28] *** abraxxa joined
[09:29] *** araujo joined
[09:29] *** araujo left
[09:29] *** araujo joined
[09:30] *** HoboWithAShotgun left
[09:30] *** thunktone left
[09:32] *** aborazmeh joined
[09:32] *** aborazmeh left
[09:32] *** aborazmeh joined
[09:33] *** thunktone joined
[09:41] *** Cabanossi left
[09:42] *** Cabanossi joined
[09:53] *** Gavthegod joined
[09:56] *** cdg joined
[09:58] *** margeas joined
[09:59] *** itaipu joined
[10:01] *** Ven joined
[10:01] *** cdg left
[10:01] *** Ven is now known as Guest83993

[10:01] *** Guest83993 left
[10:05] *** thunktone left
[10:07] *** vivus-ignis is now known as ignis__away

[10:07] *** thunktone joined
[10:11] *** Cabanossi left
[10:12] *** Cabanossi joined
[10:13] *** parv joined
[10:13] *** parv left
[10:16] *** darutoko joined
[10:17] *** Zoffix left
[10:23] <El_Che> Just added Rakudo Ubuntu 17.10 packages: https://github.com/nxadm/rakudo-pkg/releases/tag/2017.09.1%2B2

[10:23] *** Ven_ joined
[10:25] <DrForr> +1

[10:25] *** HoboWithAShotgun joined
[10:28] *** wamba left
[10:30] *** zakame joined
[10:32] *** rba left
[10:33] *** itaipu left
[10:38] *** eliasr joined
[10:39] *** Cabanossi left
[10:41] *** Gavthegod left
[10:42] *** Cabanossi joined
[10:44] <moritz> is that an LTS release?

[10:44] <El_Che> no

[10:44] <moritz> 18.4?

[10:44] <El_Che> the last before the LTS

[10:45] <moritz> ok, thanks

[10:45] <El_Che> but an important one: no unity

[10:45] <El_Che> I EOL 16.10, but the Dockerfile is still there if someone needs to build it

[10:45] <El_Che> so for ubuntu I build 16.04, 17.04, 17.10

[10:45] <moritz> .oO( as if the linux community ever had unity )

[10:45] <El_Che> 17.04 will be EOL in january

[10:46] <El_Che> moritz: lol

[10:46] <El_Che> I build the 32-bit version only for ubuntu

[10:46] <El_Che> but I don't know if it's useful

[10:46] <El_Che> without JIT

[10:47] <El_Che> I didn't bother looking at the other distros to support 32-bit and noone as ever asked :)

[10:49] *** itaipu joined
[10:49] *** thunktone left
[10:59] <Ven_> .u ￼

[10:59] <yoleaux> U+FFFC OBJECT REPLACEMENT CHARACTER [So] (￼)

[11:01] *** Ven joined
[11:01] *** Ven is now known as Guest21513

[11:02] *** Ven_ left
[11:07] *** xtreak left
[11:07] *** xtreak joined
[11:11] *** ignis__away is now known as vivus-ignis

[11:16] *** rba joined
[11:20] *** xtreak left
[11:21] *** raschipi joined
[11:22] *** xtreak joined
[11:25] *** vivus-ignis is now known as ignis__away

[11:32] *** ignis__away is now known as vivus-ignis

[11:33] <raschipi> huggable: hug vivus-ignis 

[11:33] * huggable hugs vivus-ignis 

[11:33] *** zakharyas left
[11:35] *** virtualsue left
[11:37] *** xtreak left
[11:38] <HoboWithAShotgun> good localtime yo beautiful bunch

[11:39] <sena_kun> o/

[11:40] *** Cabanossi left
[11:42] *** patrickz joined
[11:42] <Geth> ¦ ecosystem: c97e87be13 | (Steve Mynott)++ | META.list

[11:42] <Geth> ¦ ecosystem: A placeholder for panda which displays how to install panda. Intended for temporary use in Rakudo Star tarball builds only

[11:42] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/c97e87be13

[11:42] *** Cabanossi joined
[11:46] *** xtreak joined
[11:48] *** virtualsue joined
[11:57] *** Guest21513 left
[11:58] *** vivus-ignis is now known as ignis__away

[11:59] *** abraxxa left
[12:04] *** aborazmeh left
[12:05] *** ignis__away is now known as vivus-ignis

[12:08] *** xtreak left
[12:09] *** bdmatatu joined
[12:11] *** xtreak joined
[12:12] *** rindolf left
[12:14] *** Ven joined
[12:14] *** Ven is now known as Guest72916

[12:17] *** rindolf joined
[12:23] *** xtreak left
[12:41] *** khw joined
[12:43] *** perlpilot joined
[12:47] *** zakharyas joined
[12:48] <Geth> ¦ doc: f984462684 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO/Handle.pod6

[12:48] <Geth> ¦ doc: Remove `:in-buffer`

[12:48] <Geth> ¦ doc: 

[12:48] <Geth> ¦ doc: Reverted in: https://github.com/rakudo/rakudo/commit/7a2561c24b

[12:48] <Geth> ¦ doc:                     https://github.com/perl6/roast/commit/a61110535d

[12:48] <synopsebot> Link: https://doc.perl6.org/type/IO/Handle

[12:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f984462684

[12:50] *** SlipperySlope joined
[12:50] *** araraloren joined
[12:51] *** SlipperySlope left
[12:51] *** W4RL0RD joined
[12:52] <Geth> ¦ doc: 396015f053 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO/Handle.pod6

[12:52] <Geth> ¦ doc: Document behaviour on .out-buffer changes

[12:52] <Geth> ¦ doc: 

[12:52] <Geth> ¦ doc: and add a code example

[12:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/396015f053

[12:57] *** stmuk_ is now known as stmuk

[12:58] *** cdg joined
[13:03] <HoboWithAShotgun> bummer. when i try to dynamically require a module that has a multi sub main, it won't show up in the usage like it dies when i "use" it

[13:03] <HoboWithAShotgun> *does

[13:04] *** abraxxa joined
[13:04] *** abraxxa left
[13:06] *** cdg_ joined
[13:07] <perlpilot> did you export the MAIN ?

[13:08] *** pilne joined
[13:08] <HoboWithAShotgun> well i said require ::($module) <&MAIN>, but i just looked at the source of "pluggable" which i am using to get the list of names and that module already does a require, without exporting

[13:09] *** Cabanossi left
[13:09] *** cdg left
[13:10] <HoboWithAShotgun> but that's a different scope and shouldn't matter, right?

[13:11] *** setty1 joined
[13:11] *** mson joined
[13:12] *** Cabanossi joined
[13:15] <Geth> ¦ DBIish: a7cbf03e73 | (Zoffix Znet)++ (committed using GitHub Web editor) | .travis.yml

[13:15] <Geth> ¦ DBIish: Make zef more verbose

[13:15] <Geth> ¦ DBIish: review: https://github.com/perl6/DBIish/commit/a7cbf03e73

[13:17] *** nhywyll joined
[13:20] *** rba left
[13:25] *** koto joined
[13:25] *** sena_kun left
[13:28] *** john51 left
[13:28] *** Guest72916 left
[13:28] *** john51 joined
[13:33] *** rba joined
[13:40] *** domidumont left
[13:42] *** Ven joined
[13:43] *** Ven is now known as Guest33067

[13:44] *** ufobat left
[13:49] *** ufobat joined
[13:50] *** arnsholt joined
[13:55] *** rba left
[14:06] *** araujo left
[14:07] *** Guest33067 left
[14:09] *** rba joined
[14:10] *** virtualsue left
[14:11] *** Kyo91_ joined
[14:11] <buggable> New CPAN upload: Color-Names-1.001001.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Color-Names-1.001001.tar.gz

[14:14] *** bwisti left
[14:17] *** lichtkind joined
[14:21] *** Khisanth left
[14:21] *** domidumont joined
[14:23] *** Ven_ joined
[14:25] *** domidumont left
[14:31] <buggable> New CPAN upload: Color-Names-1.001002.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Color-Names-1.001002.tar.gz

[14:32] *** domidumont joined
[14:34] *** Khisanth joined
[14:37] *** virtualsue joined
[14:37] <Geth> ¦ doc: 1f89233b33 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO/Handle.pod6

[14:37] <Geth> ¦ doc: Remove needless :skip-test

[14:37] <Geth> ¦ doc: 

[14:37] <Geth> ¦ doc: The example is only compiled during the test, not run.

[14:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1f89233b33

[14:37] <synopsebot> Link: https://doc.perl6.org/type/IO/Handle

[14:44] *** cog_ joined
[14:47] *** cognominal left
[14:51] *** tejas joined
[14:51] *** tejas is now known as chakli

[14:53] *** troys_ is now known as troys

[14:53] *** vivus-ignis left
[14:55] *** cdg_ left
[14:58] *** cdg joined
[14:59] *** cdg left
[14:59] *** cdg joined
[15:01] *** HoboWithAShotgun left
[15:03] *** Grimy joined
[15:07] *** pilne left
[15:08] *** HoboWithAShotgun joined
[15:11] *** Ven_ left
[15:14] *** setty1 left
[15:16] <rba> How do I run all the (roast) spectests with the perl6 from the PATH?

[15:17] *** setty1 joined
[15:18] <timotimo> the fudgeandrun tool probably lets you pass what binary to run

[15:21] <rba> trying "perl fudgeandrun */*.t */*/*.t" and it does something...

[15:21] *** mson left
[15:22] <timotimo> should probably use spectest.data

[15:25] *** Grimy left
[15:26] <rba> ahh, "make spectest" in rakudo...

[15:26] *** robertle left
[15:27] <timotimo> yup

[15:27] *** HoboWithAShotgun left
[15:33] *** nhywyll left
[15:33] *** nhywyll joined
[15:37] *** troys is now known as troys_

[15:38] *** cognominal joined
[15:40] *** troys_ is now known as troys

[15:41] *** cog_ left
[15:42] *** wander joined
[15:47] *** araujo joined
[15:47] *** araujo left
[15:47] *** araujo joined
[15:52] *** rba left
[15:55] *** mempko joined
[15:58] *** ufobat left
[16:04] *** cdg left
[16:05] *** quotable6 left
[16:05] *** quotable6 joined
[16:08] *** sproctor left
[16:08] *** xi- left
[16:09] *** xi- joined
[16:10] *** robertle joined
[16:11] *** troys is now known as troys_

[16:11] *** domidumont1 joined
[16:13] *** wamba joined
[16:14] *** domidumont left
[16:14] *** cdg joined
[16:15] *** mson joined
[16:17] *** cdg left
[16:18] *** cdg joined
[16:19] *** cdg left
[16:28] *** virtualsue left
[16:31] *** virtualsue joined
[16:34] *** HoboWithAShotgun joined
[16:41] *** domidumont joined
[16:42] *** patrickz left
[16:43] *** domidumont1 left
[16:44] *** ZofBot left
[16:45] *** ZofBot joined
[16:45] *** ChanServ sets mode: +v ZofBot

[16:45] *** cdg joined
[16:50] *** virtualsue left
[16:50] *** bisectable6 left
[16:50] *** bisectable6 joined
[16:54] *** HoboWithAShotgun left
[17:00] *** HoboWithAShotgun joined
[17:03] *** zakharyas left
[17:06] *** Kyo91 joined
[17:07] <Geth> ¦ doc: f2d5dddcd1 | (Will "Coke" Coleda)++ | doc/Type/Any.pod6

[17:07] <synopsebot> Link: https://doc.perl6.org/type/Any

[17:07] <Geth> ¦ doc: Remove now-defunct HyperIterable reference

[17:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f2d5dddcd1

[17:07] <Geth> ¦ doc: 31a31cec1f | (Will "Coke" Coleda)++ | doc/Language/5to6-perlvar.pod6

[17:07] <Geth> ¦ doc: fix typo

[17:07] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlvar

[17:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/31a31cec1f

[17:09] *** Kyo91_ left
[17:11] *** virtualsue joined
[17:11] *** zakharyas joined
[17:12] *** kerframil joined
[17:15] *** ChoHag left
[17:15] *** chakli left
[17:21] *** Rawriful joined
[17:21] <buggable> New CPAN upload: Color-Named-1.001001.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Color-Named-1.001001.tar.gz

[17:24] *** andrzejku joined
[17:30] *** wander left
[17:33] *** wamba left
[17:34] *** virtualsue left
[17:39] *** Aaronepower joined
[17:42] *** wander joined
[17:43] <wander> what is not to backtrack means?

[17:43] <wander> m: my $rx = rule { ab | aa }; say "aa" ~~ $rx;

[17:43] <camelia> rakudo-moar da977785c: OUTPUT: «｢aa｣␤»

[17:44] <wander> I will say it fails to match for the first try at "ab" 's "b", now it backtracks to "a" and try to match "aa"

[17:45] <wander> well that is what I want, but it puzzles me for the meaning of `not to backtrack', since rule means `not to backtrack'

[17:46] <timotimo> wander, in order for backtracking to happen something must first have matched successfully

[17:47] <timotimo> the example up on twitter was "abc" matched against /:r a [b+ || bc] $ /

[17:47] *** xtreak joined
[17:47] <timotimo> first the a matches, then b+ matches a single b, then it reaches the $, but since there's still a c in the source string the $ doesn't match

[17:48] <timotimo> with backtracking enabled, it would have gone back into the [b+ || bc], then it would have matched bc there, and then the $ matches afterwards

[17:48] <timotimo> but with backtracking disabled it just fails the whole match immediately

[17:48] <timotimo> hope that helps, bbl

[17:48] <raschipi> Dropping something already matched is bactracking. Dropping something that didn't match isn't. That's why it's also called "ratcheting".

[17:50] *** virtualsue joined
[17:51] <buggable> New CPAN upload: Color-Named-1.001002.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Color-Named-1.001002.tar.gz

[17:51] <buggable> New CPAN upload: Color-Names-1.001003.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Color-Names-1.001003.tar.gz

[17:51] <buggable> New CPAN upload: Operator-grandpa-1.001001.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Operator-grandpa-1.001001.tar.gz

[17:52] *** ChoHag joined
[17:52] <wander> m: my $rx = rule { a [b | a] }; 'aa' ~~ $rx;

[17:52] <camelia> rakudo-moar da977785c: ( no output )

[17:52] <wander> m: my $rx = rule { a [b | a] }; say 'aa' ~~ $rx;

[17:52] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[17:54] *** Zoffix joined
[17:54] <wander> got some understanding of it. thanks for you

[17:54] <Zoffix> wander: whitespace is significant in `rule`s

[17:54] <Zoffix> m: my $rx = token { a [b | a] }; say 'aa' ~~ $rx;

[17:54] <camelia> rakudo-moar da977785c: OUTPUT: «｢aa｣␤»

[17:54] <wander> oh, right

[17:56] <wander> so here the first "a" isn't  matched?

[17:57] <Zoffix> wander: yeah, it is. The output shows 2 "a"s

[17:59] <wander> try to explain it: first it matched "a", then it tries to match "b", but fails, so the "b" is unmatched, now we drop "b"(not backtrack) and try "a", finally get all matched

[18:00] <raschipi> correct, can you do the same with the example from twitter?

[18:00] <Zoffix> Yeah, though I don't know if "b" is tried first. With `|` longest token matches and I don't know what's the protocol when both tokens are same length

[18:02] <wander> 1. matched 'a'; 2. match 'b+'; 3. fails '$'; now we cannot back and retry to match the term [b+ || bc], so it fails

[18:03] <raschipi> yep

[18:03] <Zoffix> m: my $rx = token { a [b. | a.] c }; say 'aacc' ~~ $rx;

[18:03] <camelia> rakudo-moar da977785c: OUTPUT: «｢aacc｣␤»

[18:03] <Zoffix> m: my $rx = token { a [a. | b.] c }; say 'aacc' ~~ $rx;

[18:03] <camelia> rakudo-moar da977785c: OUTPUT: «｢aacc｣␤»

[18:03] <wander> zoffix: 

[18:04] <wander> m: my $if-st = rule { | 'if' | 'if' 'else' };  "if else" ~~ $if-st

[18:04] <camelia> rakudo-moar da977785c: ( no output )

[18:04] *** Rawriful left
[18:04] <wander> m: my $if-st = rule { | 'if' | 'if' 'else' };  say "if else" ~~ $if-st;

[18:04] <camelia> rakudo-moar da977785c: OUTPUT: «｢if ｣␤»

[18:04] <raschipi> m: my $rx = token { a [a. {say 'a'}| b. {say 'b'}] c }; say 'aacc' ~~ $rx;

[18:04] <camelia> rakudo-moar da977785c: OUTPUT: «a␤｢aacc｣␤»

[18:05] <Zoffix> Code blocks turn off LTM tho, don't they?

[18:05] <wander> that is an example I put on IRC more than one time, seems `|' not always do longest match

[18:06] <Zoffix> There are some rules that turn off LTM, perhaps they apply for something in your example too

[18:08] <Zoffix> m: grammar { token ws { \s+ }; rule TOP {'if'|'if' 'else'} }.parse("if else").say 

[18:08] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[18:08] <Zoffix> Looks like the `if else` isn't matched at all

[18:09] <Zoffix> m: grammar { token TOP {'if' | 'if' <ws> 'else'} }.parse("if else").say

[18:09] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[18:09] <Zoffix> m: grammar { regex TOP {'if' | 'if' <ws> 'else'} }.parse("if else").say

[18:09] <camelia> rakudo-moar da977785c: OUTPUT: «｢if else｣␤ ws => ｢ ｣␤»

[18:09] <Zoffix> So looks like it's backtracking it killing it or something.

[18:10] <Zoffix> Someone should write a book about this stuff...

[18:10] <Zoffix> ZofBot: oh, wait!

[18:10] <ZofBot> Zoffix, And though, of course, it grew worse as one's body aged, was it not a sign that this was NOT the natural order of things, if one's heart sickened at the discomfort and dirt and scarcity, the interminable winters, the stickiness of one's socks, the lifts that never worked, the cold water, the gritty

[18:10] <Zoffix> especially the gritty

[18:11] *** Cabanossi left
[18:11] *** mr-foobar joined
[18:11] *** nhywyll left
[18:12] <Zoffix> .ask moritz why doesn't this pick the longest match of "if else"? m: my $if-st = rule { 'if' | 'if' 'else' };  say "if else" ~~ $if-st;

[18:12] <yoleaux> Zoffix: I'll pass your message to moritz.

[18:12] <wander> m: grammar { rule TOP { | 'if' | 'if' 'else' } }.parse('if').say

[18:12] <camelia> rakudo-moar da977785c: OUTPUT: «｢if｣␤»

[18:12] *** Cabanossi joined
[18:12] <wander> m: > grammar { rule TOP { | 'if' 'else' | 'if' } }.parse('if else').say

[18:12] <camelia> rakudo-moar da977785c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix > instead␤at <tmp>:1␤------> 3>7⏏5 grammar { rule TOP { | 'if' 'else' | 'i␤»

[18:12] <wander> m: grammar { rule TOP { | 'if' 'else' | 'if' } }.parse('if else').say

[18:12] <camelia> rakudo-moar da977785c: OUTPUT: «｢if else｣␤»

[18:13] <wander> m: grammar { rule TOP { | 'if' 'else' | 'if' } }.parse('if').say

[18:13] <camelia> rakudo-moar da977785c: OUTPUT: «｢if｣␤»

[18:14] *** rgrau left
[18:16] <Zoffix> The plot moistens:

[18:16] <Zoffix> m: grammar { token ws { \s+ }; token TOP {['if' | 'if' <.ws> 'else'] $} }.parse("if else").say

[18:16] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[18:17] <Zoffix> m: grammar { token zs { \s+ }; token TOP {['if' | 'if' <.zs> 'else'] $} }.parse("if else").say

[18:17] <camelia> rakudo-moar da977785c: OUTPUT: «｢if else｣␤»

[18:17] <Zoffix> dahell?

[18:19] *** Kyo91_ joined
[18:19] <wander> recently I'm writing a intermediate-code generator in my compiler design lesson using Perl 6

[18:19] <wander> although I can rearrange the rules or refactor the grammar, some traits/traps/bugs(?) also arouse my interest( and pain >_< )

[18:19] <Zoffix> :o neat

[18:20] *** virtualsue left
[18:20] <wander> * (to fix bugs), *

[18:21] *** Kyo91 left
[18:23] <ugexe> shadows the cursor method ws()?

[18:25] <Zoffix> Is it even needed here?

[18:25] *** mson left
[18:25] <Zoffix> I'm using a token

[18:26] *** cdg_ joined
[18:27] <Zoffix> m: grammar { token ws { \s+ }; token zs { \s+ }; token TOP {['if' | 'if' <.zs> 'else'] $} }.parse("if else").say

[18:27] <camelia> rakudo-moar da977785c: OUTPUT: «｢if else｣␤»

[18:27] <Zoffix> Does not appear to cause issue here.

[18:27] <ugexe> \s+ probably doesn't invoke the ws() cursor method

[18:28] <Zoffix> No, it doesn't. Why does it need to?

[18:28] <ugexe> m: grammar { token to { \s+ }; token TOP {"if" <.to> "else"$} }.parse("if else").say

[18:28] <camelia> rakudo-moar da977785c: OUTPUT: «｢｣␤»

[18:28] <Zoffix> Oh

[18:28] <Zoffix> The Actions method

[18:29] <Zoffix> Oh never mind

[18:29] <Zoffix> No, I still don't get it

[18:30] *** cdg left
[18:30] *** andrzejku left
[18:31] *** xtreak_ joined
[18:31] <Zoffix> m: grammar { token perl { \s+ }; token TOP {"if" <.perl> "else"} }.parse("if else").say

[18:31] <camelia> rakudo-moar da977785c: OUTPUT: «Cannot resolve caller perl(Mu: <anon|68895152>); none of these signatures match:␤    (Mu:U $: *%_)␤    (Mu:D $: *%_)␤  in regex perl at <tmp> line 1␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:31] *** cdg_ left
[18:31] <ugexe> https://github.com/perl6/nqp/blob/a5b2f39709d32c99c25cbd36d95926fa7173d22f/src/QRegex/Cursor.nqp#L966

[18:32] *** ChoHag_ joined
[18:32] <Zoffix> m: grammar { token perl { \s+ }; token TOP {"if" <.perl> "else"} }.^mro.say

[18:32] <camelia> rakudo-moar da977785c: OUTPUT: «((<anon|65888592>) (Grammar) (Match) (Capture) (Cool) (Any) (Mu))␤»

[18:32] <Zoffix> So basically any new methods we add to Cool, Any, or Mu have a chance to mess up someone's grammar? That's kinda crappy

[18:33] *** ChoHag left
[18:33] <Zoffix> ugexe: that's just the default <ws> innit? Why is overriding it problematic. We even have code examples in docs that override it

[18:33] <ugexe> yes, that happend to Grammar::HTTP

[18:33] <Zoffix> That sucks

[18:34] <ugexe> https://github.com/perl6/nqp/pull/367

[18:34] *** xtreak left
[18:34] <ugexe> it was easy to fix once i knew the problem was the token name causing the problem, but it is not obvious

[18:36] <Zoffix> m: grammar { method perl { self."!cursor_start_cur"() }; token TOP {"if" <.perl> "else"} }.parse("if else").say

[18:36] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[18:36] <Zoffix> Looks like defining a `method` overrides the core stuff, but defining a `token` doesn't do the same.

[18:36] <wander> zoffix, https://irclog.perlgeek.de/perl6/2017-09-26#i_15218173

[18:37] <Zoffix> wander: ah, right

[18:37] <Zoffix> m: grammar { token perl { \s+ }; token TOP {"if" <.perl> "else"} }.parse("if else", :actions(class { method perl ($) {}})).say

[18:37] <camelia> rakudo-moar da977785c: OUTPUT: «｢if else｣␤»

[18:38] <Zoffix> m: grammar { token ws { \s+ }; token TOP {"if" <.ws> "else"} }.parse("if else", :actions(class { method perl ($) {}})).say

[18:38] <camelia> rakudo-moar da977785c: OUTPUT: «｢if else｣␤»

[18:38] <Zoffix> m: grammar { token ws { \s+ }; token TOP {[if | if <.ws> else] } }.parse("if else", :actions(class { method ws ($) {} })).say

[18:38] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[18:38] <Zoffix> \o/

[18:39] * Zoffix gives up

[18:39] *** Zoffix left
[18:40] *** ChoHag joined
[18:42] *** COMBORICO joined
[18:43] <COMBORICO> It's Friday! Ñ

[18:43] *** ChoHag_ left
[18:44] *** zakharyas left
[18:46] *** andrzejku joined
[18:47] *** xtreak_ left
[18:51] *** domidumont left
[18:51] *** darutoko left
[18:53] *** eroux joined
[18:55] <ugexe> we should probably warn if a grammar defines any possibly problematic token names at the very least

[18:55] <ugexe> but it certainly feels like the ws redeclaration should just work

[18:55] *** andrzejku left
[18:58] <ugexe> m: say Match.new.ws; # but this is probably why it cant

[18:58] <camelia> rakudo-moar da977785c: OUTPUT: «｢｣␤»

[19:00] *** Kyo91_ left
[19:00] *** eroux left
[19:00] *** andrzejku joined
[19:04] *** COMBORICO left
[19:04] *** COMBORICO joined
[19:16] *** Kyo91_ joined
[19:17] *** mempko left
[19:17] *** zakharyas joined
[19:19] *** yqt joined
[19:25] *** buggable left
[19:26] *** buggable joined
[19:26] *** ChanServ sets mode: +v buggable

[19:31] *** cpage_ left
[19:44] *** xi- left
[19:45] *** troys_ is now known as troys

[19:46] <buggable> New CPAN upload: Color-Scheme-1.001001.tar.gz by HOLLI https://cpan.metacpan.org/authors/id/H/HO/HOLLI/Perl6/Color-Scheme-1.001001.tar.gz

[19:46] *** xi- joined
[19:49] *** freeze_ is now known as freeze

[19:54] * HoboWithAShotgun was quite dilligent today

[19:55] <raschipi> full of round tuits

[19:56] <COMBORICO> I'm going to go feed the chickens.

[19:56] <HoboWithAShotgun> ohh, can i have some?

[19:57] *** cpage_ joined
[19:57] <raschipi> some feed?

[19:57] <COMBORICO> Sounded creepy to me.

[19:59] *** cpage_ left
[19:59] *** bdmatatu left
[19:59] <raschipi> Thanks for giving him feed...back.

[20:00] *** koto left
[20:00] *** cdg joined
[20:04] *** cpage_ joined
[20:04] *** ChoHag left
[20:05] * perlpilot hopes that HoboWithAShotgun meant "tuits" instead of "feed" or "chickens"  

[20:05] <perlpilot> But it's hard to tell on IRC sometimes   ;)

[20:06] *** gdonald left
[20:07] <HoboWithAShotgun> no, some chicken

[20:08] <HoboWithAShotgun> i used to have a bunch, until the neighbours sued me because of the cock

[20:08] *** yqt left
[20:08] <HoboWithAShotgun> and herding a flock of chicken without one is kinda pointless

[20:09] *** andrzejku left
[20:10] <COMBORICO> Herding chicken?  Clever, rasch.

[20:10] <perlpilot> So ... why chickens?  Is the bang/buck ratio good?  (i.e. eggs for a little bit of feed and after a while, some chicken supper?)

[20:11] <raschipi> When I had chickens we never got feed for them, just fed them scraps.

[20:14] <COMBORICO> Why chickens? Because of better quality eggs.  Plus they are fun to watch.  No roosters is key.

[20:16] <perlpilot> I guy I used to work with had gotten some chickens.   He didn't realize that not all eggs are white and when *really* fresh they are warm and a little slimy.

[20:17] <perlpilot> s/I/A/

[20:19] <geekosaur> heh

[20:20] <COMBORICO> I should say hens are loud also when laying eggs.  But roosters are worse.

[20:20] <raschipi> Chickens are really fun to watch. They are very weird.

[20:21] <perlpilot> COMBORICO: you've got a rooster that can lay eggs?!?  ;-)

[20:21] *** gdonald joined
[20:21] <HoboWithAShotgun> i didnt have them for eggs. i bread them. silkies. these guys: https://www.youtube.com/watch?v=Zedc-cg45bU

[20:22] <timotimo> you bread them? so you made schnitzel? :)

[20:22] <perlpilot> heh

[20:22] <COMBORICO> Yeah.  I haven't butchered a chicken yet.  I don't really want to.  Normal chickens taste weird -- very oily too. I'm use to the GMO chicken.

[20:22] <timotimo> or maybe fried chicken

[20:22] <raschipi> How did you breed chickens without them laying eggs?

[20:22] <timotimo> chlorine chicken?

[20:22] <timotimo> buy eggs from the supermarket, have the rooster fertilize them? %)

[20:22] <timotimo> that's how that works, right?

[20:22] <raschipi> That only works for toads, silly.

[20:23] <HoboWithAShotgun> seriously?

[20:23] <perlpilot> COMBORICO: I never found "normal chickens" to be oily, but the meat is a little bit more "firm" than store-bought

[20:23] <raschipi> Anphibians have external fertilization.

[20:23] <raschipi> depends on what they're fed

[20:24] <perlpilot> talking about chickens and food makes me think of rabbits for some reason.  Some BBQ rabbit would be real nice.

[20:25] <perlpilot> (When I was a kid my dad raised rabbits while my cousins had chickens)

[20:26] <timotimo> .o( when i was a kid my dead raised rabbits were scary )

[20:26] <raschipi> When breeding fish, the mother doesn't lay the eggs, they female is slaughtered and the eggs taken from inside and the male is slaughtered too to collect sperm and they they're mixed togueter and it works out.

[20:26] <perlpilot> timotimo: where do you think monty python got the idea to use a rabbit?

[20:26] *** ChoHag joined
[20:27] <raschipi> Any eggs that aren't fertilized under control are lost because the other fish will eat them.

[20:27] <timotimo> good question

[20:27] <timotimo> fish are barbaric, just in general, aren't they?

[20:27] <raschipi> depends on the fish

[20:28] <timotimo> guppies are bad in this respect, i think

[20:30] <COMBORICO> Pilot, why did your fa'sha raise rabbits?

[20:30] <perlpilot> because raising pigs was too much work.

[20:31] *** mson joined
[20:31] <raschipi> some fish can be quite endearing: https://en.wikipedia.org/wiki/Cleaner_fish

[20:31] *** zakharyas left
[20:31] <perlpilot> plus pigs are more odiferous in general

[20:32] *** itaipu left
[20:33] *** ryn1x_ joined
[20:33] *** cpage_ left
[20:34] *** itaipu joined
[20:36] <COMBORICO> He said the secret word! What's the secret word? Odiferous!!

[20:37] <raschipi> You get used to it

[20:37] <COMBORICO> You from a family of ranchers, pilot?

[20:38] <perlpilot> no, just general "country folk"

[20:38] *** espadrine joined
[20:39] *** mempko joined
[20:40] <raschipi> my family has an interesting historical occupation: colonizers

[20:41] <COMBORICO> I'm a southern boy myself.

[20:42] <COMBORICO> Colonization of where?

[20:42] <perlpilot> raschipi: is that your way of saying "I'm british"?  ;-)

[20:42] <raschipi> Paraná, Brazil and Paraguay.

[20:43] <perlpilot> oops, I guess not.

[20:49] <COMBORICO> Hmm.  Interesting.  

[20:49] *** troys is now known as troys_

[20:50] <raschipi> They got empty land from the government and made it into farms and sold to colonists.

[20:50] <COMBORICO> Got as in "free"?

[20:50] <raschipi> as in 'very cheap'

[20:51] <perlpilot> as in "I have guns, this is mine now"?  ;)

[20:51] <raschipi> No, no one lived there. Where natives were they were left on their own.

[20:52] <COMBORICO> Hmm.  I hope they bless others with that fortunate prospect.

[20:52] <COMBORICO> I hear many US elites are buying up Patagonia.

[20:53] <raschipi> They are still there, living the exact the same way as before: being highwayman.

[20:53] <gfldex> this planet used to be pretty empty even 100 years ago in most spots

[20:53] <raschipi> still is in many places

[20:53] <COMBORICO> Highwaymen!?  Your parents are robbers?

[20:54] <COMBORICO> Dex, truth.

[20:55] <geekosaur> probably true of a lot of us if we dare to look

[20:55] <raschipi> no, the natives are robbers

[20:56] *** niceperl joined
[20:57] *** okl joined
[20:58] <raschipi> In fact, colonization around here started as a way to provide security for travelers.

[20:58] <COMBORICO> Interesting. "Highwaymen" is a term for robbers.

[20:59] <raschipi> I know, that's what I meant.

[21:00] <COMBORICO> So your parents are robbers and the natives also are robbers?

[21:00] *** itaipu left
[21:00] <raschipi> No, my family developed areas so that were safer

[21:01] <gfldex> for most of history robbing your neigbours was the only way to preserve your own tribe when times got tough

[21:01] <gfldex> we never had as much peace as we did in the last 60 years

[21:02] <COMBORICO> I think history has shown more deaths occurred since industrial revolution than before. 

[21:02] <raschipi> "most of history" as in "they still do it"

[21:03] *** troys_ is now known as troys

[21:03] <gfldex> see: http://www.slate.com/content/dam/slate/articles/news_and_politics/foreigners/2014/12/141209_Charts-armedconflicts.jpg.CROP.promovar-mediumlarge.jpg

[21:03] <gfldex> if you go futher back to around 1600 it was far worse

[21:04] *** cdg left
[21:04] <gfldex> same is true for violent crimes

[21:05] *** cdg joined
[21:05] <raschipi> Before Psychology was developed soldiers really avoided killing the enemy. 

[21:06] <gfldex> i'm note quite sure the romans had psychology

[21:07] <raschipi> yes, it was almost impossible to convince soldiers to kill. That's why the science of psychology was developed.

[21:07] <COMBORICO> Sure they did. The Greeks had the Four Humors.

[21:07] <gfldex> until about 1900 is was common practice to ask the enemy if you want to surrender before the battle. After the battle anybody who could be killed was killed.

[21:08] *** virtualsue joined
[21:08] <raschipi> battles were very rare anyway. war was fought with sieges.

[21:09] <raschipi> I'm not saying anything controversial here either, this is actual history of Psychology.

[21:14] <raschipi> People, nice talking to y'all, but now I have to go to the airport pick up my wife. hugs and kisses for everyone

[21:14] *** raschipi left
[21:15] <COMBORICO> May Jesus Christ bless you.

[21:17] *** ryn1x_ left
[21:21] *** robertle left
[21:23] *** okl left
[21:31] *** setty1 left
[21:38] *** wamba joined
[21:42] *** rba joined
[21:53] *** cdg_ joined
[21:56] *** cdg left
[21:57] *** Cabanossi left
[21:57] *** Cabanossi joined
[22:03] <bitrauser_> Got a quick question about n-dimensional arrays: So as I understand from the resulting error "Partially dimensioned views of shaped arrays not yet implemented", I can not (yet) simply call `@a[0]` to access one of the arrays inside array @a[50;50], as an example. Is there another easy/quick way to do this currently?

[22:07] <timotimo> n-dimensional arrays don't have "arrays inside of arrays"

[22:07] <timotimo> if you want to, you can have an array with 1-dimensional sized arrays in them

[22:07] <timotimo> that'll get you the ability to slice that until proper views are built

[22:09] *** mempko left
[22:09] *** Kyo91_ left
[22:15] *** cpage_ joined
[22:16] <Geth> ¦ doc: c47cd19605 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO/CatHandle.pod6

[22:16] <synopsebot> Link: https://doc.perl6.org/type/IO/CatHandle

[22:16] <Geth> ¦ doc: Document IO::CatHandle.out-buffer

[22:16] <Geth> ¦ doc: 

[22:16] <Geth> ¦ doc: Throws NYI; no spec. Documenting since otherwise the docs will show

[22:16] <Geth> ¦ doc: IO::Handle.out-buffer as being the one used.

[22:16] <Geth> ¦ doc: 

[22:16] <Geth> ¦ doc: Impl: https://github.com/rakudo/rakudo/commit/765dd6944f

[22:16] <bitrauser_> Hmm can you elaborate? As in how it's not an Array of Arrays

[22:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c47cd19605

[22:16] <timotimo> when you declare @a[50;50] it's really a single array with 50 * 50 entries, and it knows its "shape" and does index computations for you based on that knowledge

[22:17] <timotimo> i.e. there is only a single object for the array, and if it's something like an "my int @a[50;50]" it's a contiguous storage of 2500 64 bit integers in a row

[22:17] <bitrauser_> Aaah I see, thats why for can just run through them

[22:18] <timotimo> well, that's really the .list method's fault :)

[22:18] <timotimo> m: my int @a[4;3] = (1, 2, 3, 4), (9, 8, 7, 6), (5, 5, 5, 5); say @a.list.perl

[22:18] <camelia> rakudo-moar da977785c: OUTPUT: «Index 3 for dimension 2 out of range (must be 0..2)␤  in block <unit> at <tmp> line 1␤␤»

[22:18] <timotimo> m: my int @a[3;4] = (1, 2, 3, 4), (9, 8, 7, 6), (5, 5, 5, 5); say @a.list.perl

[22:18] <camelia> rakudo-moar da977785c: OUTPUT: «(1, 2, 3, 4, 9, 8, 7, 6, 5, 5, 5, 5)␤»

[22:19] * bitrauser_ takes some notes of things to take a further look at

[22:21] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { Slip.new($_) for self } }; .say for @a;

[22:21] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:21] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { Slip.new(|$_) for self } }; .say for @a;

[22:21] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:22] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { Slip.new(|$_) for @(self) } }; .say for @a;

[22:22] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:22] <timotimo> hm

[22:22] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { Slip.new(|@$_) for @(self) } }; .say for @a;

[22:22] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:22] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { .perl.say for @(self) } }; .say for @a;

[22:22] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:22] <timotimo> ah, it's not calling it

[22:22] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { Slip.new(|@$_) for @(self) } }; .say for @a.list;

[22:22] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:22] <timotimo> m: my @a = ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { .perl.say for @(self) } }; .say for @a.list;

[22:22] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:23] <timotimo> ah, list assignment

[22:23] <timotimo> but other than that it'd recurse infinitely because i'm using @(self) insied method list

[22:23] <timotimo> m: my @a := ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { Slip.new(self[$_]) for ^self.elems } }; .say for @a.list;

[22:23] <camelia> rakudo-moar da977785c: OUTPUT: «Nil␤»

[22:24] <timotimo> hm.

[22:24] <timotimo> m: my @a := ((1, 2, 3), (9, 9, 9), (5, 6, 7)) but role :: { method list { (^self.elems).map: {Slip.new(self[$_])} } }; .say for @a.list;

[22:24] <camelia> rakudo-moar da977785c: OUTPUT: «(1 2 3)␤(9 9 9)␤(5 6 7)␤»

[22:25] <timotimo> well, you get the idea

[22:25] * timotimo back to resting his wrists

[22:26] <bitrauser_> Yeah that clears things up some, thank you.

[22:35] *** evalable6 left
[22:35] *** evalable6 joined
[22:36] *** ryn1x joined
[22:40] *** Cabanossi left
[22:40] *** mson left
[22:42] *** troys is now known as troys_

[22:42] *** W4RL0RD left
[22:42] *** Cabanossi joined
[22:53] *** COMBORICO left
[22:53] *** COMBORICO joined
[22:56] *** W4RL0RD joined
[22:57] *** niceperl left
[22:58] *** cdg_ left
[22:59] *** troys_ is now known as troys

[23:11] *** cdg joined
[23:15] *** cdg left
[23:18] *** wamba left
[23:18] *** Exodist left
[23:20] *** Exodist joined
[23:20] <COMBORICO> What's everyone doing this Friday evening!?

[23:38] <ryn1x> Can does anyone have experience with zef on windows? I installed a windows vm on my laptop so that I could test code for work, but can't get zef to install Inline::Perl5. I got it to work at work on windows so I know it is possible.. I might be missing some dependancy that the work computer already had? Here is my error message: https://gist.github.com/ryn1x/14e198f0e21c85c2adc0ae5fe60afc26

[23:40] *** evalable6 left
[23:40] <timotimo> ryn1x: it's annoying that it wouldn't output what's going wrong, but you'll need a C compiler to install Inline::Perl5

[23:40] *** evalable6 joined
[23:40] *** ChanServ sets mode: +v evalable6

[23:40] <timotimo> that's probably what's missing; it probably looks for the compiler in the same path that was used on the system to build moarvm

[23:40] <timotimo> so maybe building your own rakudo/moar might help

[23:43] <ryn1x> timotimo: I did think of that and installed visual studio community. I think I have mingw on the other computer. I will install that with gcc and see if it likes that. Thanks.

[23:43] <timotimo> zef has a bunch of flags, like --verbose or maybe even --debug, one of those might get you some output from the build stage

[23:46] <ryn1x> I'll try that out too I did follow the error message to the line in the file it mentioned and it was not helpful.

[23:46] <timotimo> yeah, it's most probably just the line that catches whatever exception the build method throws

[23:46] *** lichtkind left
[23:51] <timotimo> COMBORICO: i'm listening to neil cicierega's album "Mouth Silence"

[23:51] <timotimo> it's ... quite a thing

[23:55] *** margeas left
