[00:00] <squashable6> 🍕 AlexDaniel++ wrote a comment on “List method flatmap is inappropriately discouraged”: https://github.com/perl6/doc/issues/1428#issuecomment-326706949

[00:07] <AlexDaniel> m: say ^9999999 .pick

[00:07] <camelia> rakudo-moar 909688: OUTPUT: «9123610␤»

[00:11] <Geth> ¦ doc/polymod-digits: 1fd4b0f3bf | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Int.pod6

[00:11] <Geth> ¦ doc/polymod-digits: Document the use of polymod for base conversion

[00:11] <Geth> ¦ doc/polymod-digits: 

[00:11] <Geth> ¦ doc/polymod-digits: Attempt to resolve issue #1436.

[00:11] <Geth> ¦ doc/polymod-digits: review: https://github.com/perl6/doc/commit/1fd4b0f3bf

[00:12] <Geth> ¦ doc: AlexDaniel++ created pull request #1487: Document the use of polymod for base conversion

[00:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1487

[00:12] <squashable6> 🍕 AlexDaniel++ opened pull request “Document the use of polymod for base conversion”: https://github.com/perl6/doc/pull/1487

[00:12] <squashable6> 🍕 AlexDaniel++ requested a review on pull request “Document the use of polymod for base conversion”: https://github.com/perl6/doc/pull/1487

[00:12] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Document the use of `.po…”: https://github.com/perl6/doc/issues/1436#issuecomment-326708241

[00:19] <samcv> AlexDaniel, more traps!

[00:19] <Geth> ¦ doc: a0e4e79627 | (Samantha McVey)++ | doc/Language/traps.pod6

[00:19] <Geth> ¦ doc: Add to traps, information about Normalization and .chars

[00:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a0e4e79627

[00:19] <samcv> added stuff about how to get codepoits, graphemes and bytes, and that strings are normalized and refer them to the correct sections

[00:19] *** konsolebox left
[00:21] <AlexDaniel> samcv: nice!

[00:23] <AlexDaniel> samcv: what if we change the example to this?

[00:23] <AlexDaniel> m: my $s = “\c[LATIN SMALL LETTER J WITH CARON]” ~ “\c[COMBINING DOT BELOW]” x 200; say $s.chars; say $s.codes; say $s.encode.bytes

[00:23] <camelia> rakudo-moar 909688: OUTPUT: «1␤201␤402␤»

[00:24] <samcv> why?

[00:24] <samcv> that's a silly example

[00:24] <AlexDaniel> I think it makes it more obvious what this trap may cause

[00:24] <samcv> i mean 2 1 and 4 are all different numbers

[00:25] *** konsolebox joined
[00:25] <AlexDaniel> i.e. you're checking for length and it's only one character, so you think it's fine. In reality it's a kilobyte when you store it somewhere in encoded form :-/

[00:26] <AlexDaniel> samcv: k fair enough, it's fine then :)

[00:29] <AlexDaniel> samcv: personally I think it says enough, but I've created so many trap tickets that I already hear people saying “well that's exactly what I expected, can't see the trap at all”

[00:30] <AlexDaniel> squashable6: status

[00:30] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈11 hours

[00:30] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/0c3110762ba1de63aa1d333ce35502cc

[00:34] *** Cabanossi left
[00:35] *** Cabanossi joined
[00:38] <Geth> ¦ doc: 95a783edee | (Samantha McVey)++ | doc/Language/unicode.pod6

[00:38] <Geth> ¦ doc: Move Information on normalization higher up on Unicode page

[00:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/95a783edee

[00:38] <Geth> ¦ doc: 25d41281b8 | (Samantha McVey)++ | doc/Language/unicode.pod6

[00:38] <Geth> ¦ doc: Add link to MoarVM string documentation on Unicode page

[00:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/25d41281b8

[00:39] <Geth> ¦ doc: 30f6e1a967 | MasterDuke17++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[00:39] <Geth> ¦ doc: Fix typo

[00:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/30f6e1a967

[00:39] <squashable6> 🍕🍕🍕  First contribution by MasterDuke17++! ♥

[00:41] *** firefish5000 joined
[00:46] <squashable6> 🍕 AlexDaniel++ opened issue “Linking to pragmas”: https://github.com/perl6/doc/issues/1488

[00:46] <squashable6> 🍕 AlexDaniel++ labeled issue “Linking to pragmas”: https://github.com/perl6/doc/issues/1488

[00:47] <squashable6> 🍕 AlexDaniel++ self-assigned issue “Tips for negation on grep, first, etc.”: https://github.com/perl6/doc/issues/1425

[00:49] *** cdg joined
[00:53] *** Actualeyes left
[00:54] *** cdg left
[00:55] * zoll thought OP had overly long signature in RT#130520

[00:56] *** margeas left
[00:57] *** cdg joined
[00:58] <samcv> i think i'm going to bump MoarVM so everybody can get faster string ops!

[00:58] <AlexDaniel> \o/

[01:02] *** cdg left
[01:03] *** Cabanossi left
[01:05] *** Cabanossi joined
[01:05] *** raschipi joined
[01:06] *** Sgeo_ joined
[01:08] *** Sgeo__ left
[01:09] *** cdg joined
[01:11] <zoll> re flatmap: keeping a function due to similarity to any other language or low usage (while it's young) are  a weak point afas Perl 6 is concerned.

[01:12] <zoll> s/afas/AFA/ 

[01:12] <zoll> ... also AFAIAC.

[01:14] *** cdg left
[01:15] <AlexDaniel> yeah

[01:15] <AlexDaniel> but IMO for the doc ticket this is irrelevant.

[01:16] *** piojo joined
[01:22] <samcv> power went out for like 20 mins

[01:25] <samcv> you get a faster string and you get a fsater string, everyone gets faster strings!

[01:25] <Geth> ¦ doc/polymod-digits: 704b601ce8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/List.pod6

[01:25] <Geth> ¦ doc/polymod-digits: Suggest none-junction, explain why !/…/ works

[01:25] <Geth> ¦ doc/polymod-digits: 

[01:25] <Geth> ¦ doc/polymod-digits: Hopefully resolves #1425.

[01:25] <Geth> ¦ doc/polymod-digits: review: https://github.com/perl6/doc/commit/704b601ce8

[01:25] <squashable6> 🍕 AlexDaniel++ synchronize pull request “Document the use of polymod for base conversion”: https://github.com/perl6/doc/pull/1487

[01:26] <AlexDaniel> ah Fffffffffffffff… I pushed to a wrong branch

[01:27] <Geth> ¦ doc: 32faa8e862 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/List.pod6

[01:27] <Geth> ¦ doc: Suggest none-junction, explain why !/…/ works

[01:27] <Geth> ¦ doc: 

[01:27] <Geth> ¦ doc: Hopefully resolves #1425.

[01:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/32faa8e862

[01:27] <squashable6> 🍕 AlexDaniel++ closed issue “Tips for negation on grep, first, etc.”: https://github.com/perl6/doc/issues/1425

[01:28] <squashable6> 🍕 AlexDaniel++ synchronize pull request “Document the use of polymod for base conversion”: https://github.com/perl6/doc/pull/1487

[01:28] *** geekosaur left
[01:31] *** lizmat left
[01:33] *** mr-foobar left
[01:35] *** mr-foobar joined
[01:35] <squashable6> 🍕 AlexDaniel++ wrote a comment on “grapheme is not searchable”: https://github.com/perl6/doc/issues/1403#issuecomment-326713744

[01:39] *** labster left
[01:39] * [Coke] wonders if tinita someone tpf just emailed.

[01:42] *** aborazmeh joined
[01:42] *** aborazmeh left
[01:42] *** aborazmeh joined
[01:42] *** geekosaur joined
[01:45] *** ilbot3 left
[01:48] <squashable6> 🍕 zoffixznet++ wrote a comment on “Document the use of polymod for base conversion”: https://github.com/perl6/doc/pull/1487#issuecomment-326714434

[01:52] *** ilbot3 joined
[01:52] *** ChanServ sets mode: +v ilbot3

[01:52] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Document the use of polymod for base conversion”: https://github.com/perl6/doc/pull/1487#issuecomment-326714645

[01:53] *** cdg joined
[01:55] <Geth> ¦ doc/master: 5 commits pushed by (Will "Coke" Coleda)++

[01:55] <Geth> ¦ doc/master: 8ba29bf139 | remove trailing whitespace

[01:55] <Geth> ¦ doc/master: 18b9e12eba | learn new words

[01:55] <Geth> ¦ doc/master: a2b0ea0e0d | fix typo

[01:55] <Geth> ¦ doc/master: d5e818f25d | use nbsp

[01:55] <squashable6> 🍕🍕🍕  First contribution by coke++! ♥

[01:55] <Geth> ¦ doc/master: f81b34acff | use word

[01:55] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/32faa8e862...f81b34acff

[01:56] <Zoffix> [Coke]: what did you have to install on hack to get doc highlights working? I'm trying to run make init highlights, but it tells me I ain't got node. The CONTRIBUTING.md says I need "nodejs" installed which apt-get tells me is already installed

[01:57] <Zoffix> I mean I'm trying to run it locally and I have system similar to hack.

[01:58] *** cdg left
[01:58] <[Coke]> apt-get installed an insanely old version.

[01:58] <[Coke]> so I installed the latest off the node side (which included an npm, then I had to install node-gyp)

[01:58] <[Coke]> *site

[01:59] <[Coke]> (if you don't install node-gyp, it runs the old one that got installed with apt-get, which then uses the wrong node anyway)

[01:59] <Zoffix> "node-gyp is already the newest version."

[01:59] <[Coke]> I find it's rarely worth doing the highlights locally unless you're specifically testing that.

[01:59] <Zoffix> I'm specifically testing styles

[01:59] <[Coke]> ... apt-get is lying to you. :)

[02:00] <Zoffix> What do I do?

[02:00] <[Coke]> don't use apt-get to install node.

[02:00] *** lizmat joined
[02:00] <samcv> Zoffix, are you sure that's why it's failing?

[02:00] <[Coke]> what version is your node?

[02:00] <AlexDaniel> [Coke]++ # fixing things after “uncareful” contributors :)

[02:00] <Zoffix> [Coke]: I don't know.

[02:01] <samcv> node --version

[02:01] <[Coke]> node --version

[02:01] <Zoffix> $ node --version

[02:01] <Zoffix> The program 'node' can be found in the following packages:

[02:01] <Zoffix>  * node

[02:01] <[Coke]> I have 6.11 locally on my mac.

[02:01] <Zoffix>  * nodejs-legacy

[02:01] <[Coke]> try nodejs --version # apt-get renamed node

[02:01] <Zoffix> v0.10.25

[02:02] <samcv> WOW

[02:02] <[Coke]> O_o

[02:02] <samcv> yeah that's too old

[02:02] <Zoffix> How do I fix it?

[02:02] <[Coke]> I think it was 4.x on the doc server when I upgraded it.

[02:02] <[Coke]> https://nodejs.org/en/download/

[02:02] <samcv> i'd recommend at least 6

[02:02] <samcv> though 4 max work?

[02:03] <[Coke]> 4 didn't work on docs.

[02:03] <[Coke]> (which is why I tried the upgrade)

[02:04] <Zoffix> [Coke]: so after you downloaded what did you do next? I see no installer on anything

[02:05] *** riatre is now known as MistyMonumentMai

[02:06] *** mr-fooba_ joined
[02:07] * Zoffix was hoping copy-pastable instructions would appear in CONTRIBUTING.md after hack needed an arduous process of figuring out the same thing :/

[02:07] <Zoffix> I think I got a deb installed now

[02:08] <Zoffix> samcv: do those highlights work on the front-end or do they have to be pre-generated?

[02:08] *** mr-foobar left
[02:08] <raschipi> In newer packages, node is taking over /usr/bin/node

[02:08] *** raiph joined
[02:08] <Zoffix> k, I think it worked this time

[02:09] <samcv> Zoffix, well you should just be able to run `make init-highlights` and it should get everything ready fr you. the only prerequisite is node

[02:10] <samcv> everything else it sets up for you

[02:10] <samcv> and you need a c++ compiler

[02:11] <[Coke]> Zoffix: I did update https://github.com/perl6/infrastructure-doc/blob/master/hosts/hack.p6c.org.pod, but that was it, and with not much more than I said here, though, sorry.

[02:11] <samcv> Zoffix, what version of gcc/g++ do you have?

[02:11] <samcv> hopefully it's not like ancient as hell

[02:12] <Zoffix> samcv: I'm asking for the future where the doc site's pod is stuffed into SQLite database and whether we need to pre-render the markup to get highlights or there's a way to render them on the front end in the browser.

[02:12] <[Coke]> samcv: I also needed to explicitly install node-gyp

[02:12] <[Coke]> because there was an old version in the path.

[02:12] <samcv> Zoffix, oh. well we only have prerendering. but we could have on demand

[02:13] <samcv> oh front end

[02:13] <samcv> yeah that wouldn'1t work

[02:13] <Geth> ¦ doc: de4da5658f | (Zoffix Znet)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[02:13] <Geth> ¦ doc: List highlights prereq instructions for Debian

[02:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/de4da5658f

[02:13] <samcv> having the browser do it. i mean could be a local server we start up that renders the pod and highlights it then serves it, but

[02:13] <[Coke]> Zoffix++

[02:14] <samcv> it doesn't use node's regex engine to work, it uses onigumura

[02:14] <Geth> ¦ doc: e5893a7f12 | (Zoffix Znet)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[02:14] <Geth> ¦ doc: Fix broken markdown list rendering

[02:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e5893a7f12

[02:14] <Zoffix> Ok. Thanks.

[02:17] *** mr-foobar joined
[02:17] *** mr-fooba_ left
[02:19] <raiph> http://bobsutton.typepad.com/my_weblog/2009/11/the-baboon-troop-that-mellowed-out-after-the-alpha-males-died-the-sapolsky-and-share-study.html is about a multi decade scientific study that includes a real deal version of the waterspray story

[02:19] <raiph> .hug Zoffix

[02:19] * huggable hugs Zoffix

[02:20] *** aborazmeh left
[02:21] <AlexDaniel> buggable: pizza raiph

[02:21] <buggable> raiph, enjoy this slice of Deluxe pizza, my friend! Yummy 🍕

[02:22] <Zoffix> \o/

[02:25] *** noganex_ joined
[02:27] <Geth> ¦ Pod-To-HTML: 3baf65bca9 | (Zoffix Znet)++ | 4 files

[02:27] <Geth> ¦ Pod-To-HTML: Implement ability to disable CSS <link> inclusion

[02:27] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/3baf65bca9

[02:28] *** noganex left
[02:29] *** dogbert2 left
[02:33] <squashable6> 🍕 zakame++ wrote a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326716712

[02:33] <squashable6> 🍕🍕🍕  First contribution by zakame++! ♥

[02:33] <zakame> heya, good morning :)

[02:34] <squashable6> 🍕 zoffixznet++ wrote a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326716793

[02:34] <Zoffix> buggable: pizza zakame 

[02:34] <buggable> zakame, enjoy this slice of Hawaiian pizza, my friend! Yummy 🍕

[02:34] <Zoffix> :)

[02:35] <zakame> .hug Zoffix 

[02:35] * huggable hugs Zoffix 

[02:37] <Zoffix> \o/

[02:37] <raschipi> <o>

[02:38] <Zoffix>  |

[02:38] <Zoffix> /|\

[02:38] <Zoffix> War of The Worlds :)

[02:42] <squashable6> 🍕 zakame++ wrote a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326717110

[02:42] <raschipi> took some time, but now I see. :)

[02:56] *** Kyo91 joined
[03:03] *** Cabanossi left
[03:05] *** Cabanossi joined
[03:08] <AlexDaniel> m: react whenever signal(SIGINT).merge(signal(SIGHUP)) { say ‘hey!’; exit 0 }

[03:09] <camelia> rakudo-moar 0bc1c8: OUTPUT: «(timeout)»

[03:09] <AlexDaniel> m: react whenever signal(SIGINT).merge(signal(SIGTERM)) { say ‘hey!’; exit 0 }

[03:09] <camelia> rakudo-moar 0bc1c8: OUTPUT: «(timeout)Unhandled exception in code scheduled on thread 4␤Cannot resolve caller postcircumfix:<[ ]>(Mu, Int); none of these signatures match:␤    (\SELF, Any:U $type, |c is raw)␤    (\SELF, int $pos)␤    (\SELF, int $pos, Mu \assignee)␤    (\S…»

[03:09] <AlexDaniel> why?

[03:09] <AlexDaniel> m: react whenever signal(SIGTERM).merge(signal(SIGINT)) { say ‘hey!’; exit 0 }

[03:10] <camelia> rakudo-moar 0bc1c8: OUTPUT: «(timeout)hey!␤»

[03:10] *** snarkyboojum joined
[03:10] <AlexDaniel> is it a bug in .merge or something?

[03:12] <samcv> hmm i kind of want to make a pod to asciidoc extension. since i write all my things in asciidoc now because of all the things it has markdown lacks. don't really need it. but could be fun to make

[03:14] *** snarkyboojum left
[03:15] <AlexDaniel> meh. RT #132016

[03:15] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132016

[03:17] *** snarkyboojum joined
[03:17] *** snarkyboojum left
[03:18] *** snarkyboojum joined
[03:18] *** snarkyboojum left
[03:19] *** snarkyboojum joined
[03:20] *** snarkyboojum left
[03:21] *** snarkyboojum joined
[03:21] *** snarkyboojum left
[03:24] *** snarkyboojum joined
[03:25] *** snarkyboojum left
[03:26] *** snarkyboojum joined
[03:26] *** snarkyboojum left
[03:26] *** Kyo91 left
[03:27] *** audiatorix joined
[03:29] <audiatorix> Does anyone know of a good Perl 6 webserver, or a webserver than can interface easily with Perl 6? I found perl6-web by supernovus on GitHub, but it seems abandoned and has errors

[03:29] *** snarkyboojum joined
[03:29] *** snarkyboojum left
[03:32] *** snarkyboojum joined
[03:32] *** snarkyboojum left
[03:32] <perigrin> audiatorix: https://github.com/ufobat/HTTP-Server-Ogre maybe?

[03:33] *** snarkyboojum joined
[03:33] *** snarkyboojum left
[03:34] <audiatorix> Hmm. Looking for something with a good backend API, because my project involves a good amount of interaction

[03:35] *** snarkyboojum joined
[03:35] *** snarkyboojum left
[03:35] <audiatorix> Something more like the project I mentioned above--or perhaps I could go about fixing it myself

[03:36] *** snarkyboojum joined
[03:36] *** snarkyboojum left
[03:36] <audiatorix> Ugh, I really wanted to avoid digging through code but I suppose it's my best option at this point

[03:36] *** audiatorix left
[03:36] <perigrin> Something more like Bailador

[03:36] <perigrin> a framework not a server

[03:36] <perigrin> ?

[03:37] <perigrin> hmm no this is more in between

[03:37] *** snarkyboojum joined
[03:37] *** snarkyboojum left
[03:37] <perigrin> https://github.com/tokuhirom/p6-Crust

[03:37] <perigrin> I think is more what you want

[03:39] *** snarkyboojum joined
[03:39] <perigrin> https://github.com/supernovus/perl6-http-easy also relevant I think

[03:40] *** snarkyboojum left
[03:41] *** snarkyboojum joined
[03:41] *** snarkyboojum left
[03:43] *** snarkyboojum joined
[03:43] *** snarkyboojum left
[03:44] <zakame> m: class C { method f(::?CLASS:U: $c, $p) { say "Class $c, $p" }}; C.f("hello")

[03:44] <camelia> rakudo-moar 0bc1c8: OUTPUT: «Too few positionals passed; expected 3 arguments but got 2␤  in method f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:44] *** snarkyboojum joined
[03:44] *** snarkyboojum left
[03:45] *** snarkyboojum joined
[03:46] <zakame> m: class C { method f(::?CLASS:U:, $p) { say "$?CLASS, $p" }}; C.f("hello")

[03:46] <camelia> rakudo-moar 0bc1c8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed parameter␤at <tmp>:1␤------> 3class C { method f(::?CLASS:U:7⏏5, $p) { say "$?CLASS, $p" }}; C.f("hello␤»

[03:47] *** Ven`` joined
[03:48] *** snarkyboojum left
[03:49] <AlexDaniel> .hug snarkyboojum

[03:49] * huggable hugs snarkyboojum

[03:49] *** snarkyboojum joined
[03:50] *** snarkyboojum left
[03:50] *** xinming left
[03:50] *** skids left
[03:51] <zoll> weekend+holiday in US; have fun (or, not).  ta.

[03:51] *** snarkyboojum joined
[03:53] *** snarkyboojum left
[03:54] <raiph> AlexDaniel: thx for pizza, plan to eat it cold over weekend doing some doc stuff :)

[03:54] <AlexDaniel> \o/

[03:54] *** snarkyboojum joined
[03:54] *** snarkyboojum left
[03:55] <raiph> audiatorix : have you seen http://mi.cro.services ?

[03:55] <raiph> (oh, looks like they left)

[03:55] <Geth> ¦ doc/procreact: 83733ce120 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Proc/Async.pod6

[03:55] <Geth> ¦ doc/procreact: Proc::Async example with ｢react｣

[03:55] <Geth> ¦ doc/procreact: 

[03:55] <Geth> ¦ doc/procreact: Tackle issue #1468.

[03:55] <Geth> ¦ doc/procreact: 

[03:55] <Geth> ¦ doc/procreact: IMO in this case it is reasonable to expect that people will be

[03:55] <Geth> ¦ doc/procreact: copying the example and reducing it to their needs, so I tried to

[03:55] <Geth> ¦ doc/procreact: include everything that may be needed.

[03:55] *** snarkyboojum joined
[03:55] <Geth> ¦ doc/procreact: <…commit message has 6 more lines…>

[03:56] <Geth> ¦ doc/procreact: review: https://github.com/perl6/doc/commit/83733ce120

[03:56] <Geth> ¦ doc: AlexDaniel++ created pull request #1489: Proc::Async example with ｢react｣

[03:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1489

[03:56] <squashable6> 🍕 AlexDaniel++ opened pull request “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489

[03:56] <squashable6> 🍕 AlexDaniel++ edited pull request “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489

[03:57] <squashable6> 🍕 AlexDaniel++ edited pull request “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489

[03:57] *** snarkyboojum left
[03:58] *** pompomcrab joined
[03:59] <pompomcrab> question: is there an equivalent to $|++ to flush STDOUT in p6? i have several scripts that do shell() thingies and i'd like to see the output in realitime

[03:59] <pompomcrab> i greped through the perl6-all-modules git repo but didn't find anything that appears to do it

[04:01] *** snarkyboojum joined
[04:01] *** snarkyboojum left
[04:02] *** snarkyboojum joined
[04:02] *** snarkyboojum left
[04:02] *** Cabanossi left
[04:03] <AlexDaniel> pompomcrab: are you sure that there is any caching involved?

[04:03] <AlexDaniel> oops, buffering*

[04:04] *** snarkyboojum joined
[04:04] *** snarkyboojum left
[04:04] *** Cabanossi joined
[04:04] <AlexDaniel> pompomcrab: I think there's some other issue with your code. Do you any example?

[04:04] <AlexDaniel> have*

[04:04] * AlexDaniel is about to fall asleep :)

[04:04] <pompomcrab> AlexDaniel: i'm just running wrapper scripts around "./configure && make && make install" and STDOUT only flushes at the end after all 3 commands are finished executing

[04:05] *** snarkyboojum joined
[04:05] <AlexDaniel> pompomcrab: how do you read stdout?

[04:05] <pompomcrab> i.e. say shell("./configure && make && make install") is really all i'm doing

[04:06] <raschipi> you need Proc::Async

[04:06] *** snarkyboojum left
[04:08] *** snarkyboojum joined
[04:08] <AlexDaniel> pompomcrab: well, but shell(‘echo 42; sleep 3; echo 50’) produces the output continuously, right?

[04:08] * AlexDaniel is confused

[04:09] *** cdg joined
[04:09] <AlexDaniel> I really can't see what could be buffering the output in this case :-/

[04:09] <pompomcrab> AlexDaniel: yah i'm not sure what could be caching plain-old configure/make/make-install

[04:10] <pompomcrab> i just assumed it has to be $|++ because that's what it was in p5

[04:10] *** snarkyboojum left
[04:11] <Geth> ¦ doc/procreact: 96521e67ce | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Proc/Async.pod6

[04:11] <Geth> ¦ doc/procreact: Show example output

[04:11] <Geth> ¦ doc/procreact: review: https://github.com/perl6/doc/commit/96521e67ce

[04:11] <squashable6> 🍕 AlexDaniel++ synchronize pull request “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489

[04:12] *** snarkyboojum joined
[04:12] <AlexDaniel> squashable6: status

[04:12] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈7 hours

[04:12] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/e9bc70397785b6d0893f366eddb0b684

[04:13] *** snarkyboojum left
[04:13] *** piojo left
[04:14] *** cdg left
[04:14] *** snarkyboojum joined
[04:15] *** piojo joined
[04:16] *** snarkyboojum left
[04:17] <Geth> ¦ doc/procreact: b8587c8774 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Proc/Async.pod6

[04:17] <Geth> ¦ doc/procreact: Show how to get exit code from Proc::Async

[04:17] <Geth> ¦ doc/procreact: 

[04:17] <Geth> ¦ doc/procreact: Possibly resolves issue #1465.

[04:17] <Geth> ¦ doc/procreact: review: https://github.com/perl6/doc/commit/b8587c8774

[04:17] <squashable6> 🍕 AlexDaniel++ synchronize pull request “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489

[04:18] *** snarkyboojum joined
[04:19] *** snarkyboojum left
[04:19] <squashable6> 🍕 AlexDaniel++ self-assigned issue “Unreadable type graphs”: https://github.com/perl6/doc/issues/246

[04:20] *** cdg joined
[04:21] *** snarkyboojum joined
[04:22] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add note to footer about missing docs”: https://github.com/perl6/doc/issues/541#issuecomment-326720925

[04:23] *** snarkyboojum left
[04:24] <squashable6> 🍕 AlexDaniel++ wrote a comment on “lazy, eager, hyper, race…”: https://github.com/perl6/doc/issues/534#issuecomment-326721044

[04:25] <squashable6> 🍕 AlexDaniel++ edited a comment on “lazy, eager, hyper, race…”: https://github.com/perl6/doc/issues/534#issuecomment-326721044

[04:25] *** cdg left
[04:25] *** travis-ci joined
[04:25] <travis-ci> Doc build passed. Aleks-Daniel Jakimenko-Aleksejev 'Proc::Async example with ｢react｣

[04:25] <travis-ci> https://travis-ci.org/perl6/doc/builds/271074415 https://github.com/perl6/doc/commit/83733ce1201c

[04:25] *** travis-ci left
[04:25] <squashable6> 🍕 AlexDaniel++ labeled issue “lazy, eager, hyper, race…”: https://github.com/perl6/doc/issues/534

[04:27] *** snarkyboojum joined
[04:27] *** snarkyboojum left
[04:28] *** ChoHag joined
[04:29] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Regex )> and <( are not documented”: https://github.com/perl6/doc/issues/462#issuecomment-326721168

[04:29] <squashable6> 🍕 AlexDaniel++ assigned issue “Regex )> and <( are not documented” to zoffixznet: https://github.com/perl6/doc/issues/462

[04:29] *** snarkyboojum joined
[04:30] *** snarkyboojum left
[04:31] <squashable6> 🍕 AlexDaniel++ wrote a comment on “add more detail about implicit return”: https://github.com/perl6/doc/issues/388#issuecomment-326721258

[04:32] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Native Types Not Documented”: https://github.com/perl6/doc/issues/372#issuecomment-326721295

[04:32] <squashable6> 🍕 AlexDaniel++ labeled issue “Native Types Not Documented”: https://github.com/perl6/doc/issues/372

[04:33] *** snarkyboojum joined
[04:34] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Need a way to mark which…”: https://github.com/perl6/doc/issues/302#issuecomment-326721329

[04:34] *** snarkyboojum left
[04:34] *** khw left
[04:35] *** travis-ci joined
[04:35] <travis-ci> Doc build passed. Aleks-Daniel Jakimenko-Aleksejev 'Show example output'

[04:35] <travis-ci> https://travis-ci.org/perl6/doc/builds/271076710 https://github.com/perl6/doc/compare/83733ce1201c...96521e67cef4

[04:35] *** travis-ci left
[04:35] *** snarkyboojum joined
[04:36] *** snarkyboojum left
[04:37] *** snarkyboojum joined
[04:37] *** snarkyboojum left
[04:38] *** pilne left
[04:38] *** astj left
[04:38] *** astj joined
[04:39] *** pilne joined
[04:39] *** snarkyboojum joined
[04:41] *** snarkyboojum left
[04:42] *** astj left
[04:42] *** snarkyboojum joined
[04:42] *** astj joined
[04:43] *** snarkyboojum left
[04:43] *** travis-ci joined
[04:43] <travis-ci> Doc build passed. Aleks-Daniel Jakimenko-Aleksejev 'Show how to get exit code from Proc::Async

[04:43] <travis-ci> https://travis-ci.org/perl6/doc/builds/271077346 https://github.com/perl6/doc/compare/96521e67cef4...b8587c8774b1

[04:43] *** travis-ci left
[04:44] *** snarkyboojum joined
[04:45] *** snarkyboojum left
[04:47] *** Cabanossi left
[04:47] *** snarkyboojum joined
[04:49] *** snarkyboojum left
[04:49] *** unnecessarymulti joined
[04:49] *** Cabanossi joined
[04:50] *** snarkyboojum joined
[04:50] *** snarkyboojum left
[04:52] <AlexDaniel> aaaaaaaaaaaand where's pod2onepage ?

[04:52] * unnecessarymulti just spent a solid minute looking for the rakudo repo on the perl6 github and wondered why it disappeared

[04:52] <unnecessarymulti> oops

[04:53] <AlexDaniel> I have Pod::To::BigPage installed but no pod2onepage, weird…

[04:53] <AlexDaniel> unnecessarymulti: yeah, it's https://github.com/rakudo/rakudo/

[04:54] <unnecessarymulti> yeah, +1 AlexDaniel :)

[04:55] <raschipi> unnecessarymulti: instead of using the sum operator like that, you can shorten it to the ++ operator which does the same.

[04:56] <unnecessarymulti> ++raschipi

[04:56] <unnecessarymulti> :p

[04:57] *** Ven`` left
[04:59] <raschipi> One day someone will write a bot for this channel that goes through the history and counts peoples karma.

[05:03] <AlexDaniel> raschipi: you can kinda do that with quotable, but it's broken do to RT #131961

[05:03] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131961

[05:03] <AlexDaniel> quotable6: AlexDaniel++

[05:03] <quotable6> AlexDaniel, 04===SORRY!04=== Error while compiling /tmp/xIdj9y8Ffv␤Quantifier quantifies nothing␤at /tmp/xIdj9y8Ffv:2␤------> 03m⦑ AlexDaniel++08⏏04 ⦒; «exit code = 1»

[05:03] <AlexDaniel> quotable6: ‘AlexDaniel++’

[05:03] <quotable6> AlexDaniel, MasterDuke: I'm acting stupid on #perl6. Help me.

[05:03] <quotable6> AlexDaniel, Sorry kid, that's not my department.

[05:03] *** Actualeyes joined
[05:03] <AlexDaniel> well…

[05:05] *** Celelibi left
[05:16] *** Celelibi joined
[05:24] *** piojo left
[05:25] *** pompomcrab left
[05:32] *** yht joined
[05:37] *** sena_kun joined
[05:39] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489#issuecomment-326723743

[05:39] <squashable6> 🍕🍕🍕  First contribution by jonathanstowe++! ♥

[05:42] *** zakame left
[05:50] *** cdg joined
[05:52] *** zakame joined
[05:53] *** wamba joined
[05:53] *** HoboWithAShotgun joined
[05:55] *** cdg left
[05:56] *** raschipi left
[05:59] <squashable6> 🍕 AlexDaniel++ opened issue “List.squish supports “wi…”: https://github.com/perl6/doc/issues/1490

[05:59] <squashable6> 🍕 AlexDaniel++ labeled issue “List.squish supports “wi…”: https://github.com/perl6/doc/issues/1490

[06:00] <Geth> ¦ doc/traps-indent-fix: 9fd6354e6e | Altai-man++ | doc/Language/traps.pod6

[06:00] <Geth> ¦ doc/traps-indent-fix: Fix examples indentation

[06:00] <Geth> ¦ doc/traps-indent-fix: review: https://github.com/perl6/doc/commit/9fd6354e6e

[06:00] <squashable6> 🍕🍕🍕  First contribution by Altai-man++! ♥

[06:01] *** u-ou- joined
[06:02] *** Cabanossi left
[06:03] <Geth> ¦ doc: Altai-man++ created pull request #1491: Fix examples indentation

[06:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1491

[06:03] <squashable6> 🍕 Altai-man++ opened pull request “Fix examples indentation”: https://github.com/perl6/doc/pull/1491

[06:04] *** Cabanossi joined
[06:04] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Fix examples indentation”: https://github.com/perl6/doc/pull/1491#issuecomment-326724797

[06:06] *** u-ou- left
[06:06] *** u-ou- joined
[06:08] <squashable6> 🍕 Altai-man++ self-assigned issue “List.squish supports “wi…”: https://github.com/perl6/doc/issues/1490

[06:09] <Geth> ¦ doc: 9fd6354e6e | Altai-man++ | doc/Language/traps.pod6

[06:09] <Geth> ¦ doc: Fix examples indentation

[06:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9fd6354e6e

[06:09] <Geth> ¦ doc: 1b66b662b6 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[06:09] <Geth> ¦ doc: Merge pull request #1491 from perl6/traps-indent-fix

[06:09] <Geth> ¦ doc: 

[06:09] <Geth> ¦ doc: Fix examples indentation

[06:09] <squashable6> 🍕 AlexDaniel++ merged pull request “Fix examples indentation”: https://github.com/perl6/doc/pull/1491

[06:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b66b662b6

[06:10] *** u-ou- left
[06:10] *** u-ou- joined
[06:10] *** mr-fooba_ joined
[06:11] <squashable6> 🍕 AlexDaniel++ self-assigned issue “｢.nl-in｣ and ｢.nl-out｣ s…”: https://github.com/perl6/doc/issues/484

[06:11] <squashable6> 🍕 gfldex++ opened pull request “add t/meta.t”: https://github.com/perl6/doc/pull/1492

[06:11] <Geth> ¦ doc: gfldex++ created pull request #1492: add t/meta.t

[06:11] <squashable6> 🍕🍕🍕  First contribution by gfldex++! ♥

[06:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1492

[06:14] *** mr-foobar left
[06:14] *** u-ou- left
[06:17] <Geth> ¦ doc/1490-fix: f3b58a1434 | Altai-man++ | doc/Type/List.pod6

[06:17] <Geth> ¦ doc/1490-fix: Document `with` of `squish`

[06:17] <Geth> ¦ doc/1490-fix: review: https://github.com/perl6/doc/commit/f3b58a1434

[06:18] *** travis-ci joined
[06:18] <travis-ci> Doc build passed. Altai-man 'Fix examples indentation'

[06:18] <travis-ci> https://travis-ci.org/perl6/doc/builds/271089786 https://github.com/perl6/doc/commit/9fd6354e6eb6

[06:18] *** travis-ci left
[06:19] *** Kyo91 joined
[06:19] <Geth> ¦ doc: Altai-man++ created pull request #1493: Document `with` of `squish`

[06:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1493

[06:19] <squashable6> 🍕 Altai-man++ opened pull request “Document `with` of `squish`”: https://github.com/perl6/doc/pull/1493

[06:19] <squashable6> 🍕 Altai-man++ requested a review on pull request “Document `with` of `squish`”: https://github.com/perl6/doc/pull/1493

[06:20] <Geth> ¦ doc: a837f18b94 | (Aleks-Daniel Jakimenko-Aleksejev)++ | htmlify.p6

[06:20] <Geth> ¦ doc: Fix methods being mistakenly called routines

[06:20] <Geth> ¦ doc: 

[06:20] <Geth> ¦ doc: Resolves #484.

[06:20] <Geth> ¦ doc: 

[06:20] <Geth> ¦ doc: @subkinds is an array like:

[06:20] <Geth> ¦ doc: 

[06:20] <squashable6> 🍕 AlexDaniel++ closed issue “｢.nl-in｣ and ｢.nl-out｣ s…”: https://github.com/perl6/doc/issues/484

[06:20] <Geth> ¦ doc:     [Array[Str].new("method"), Array[Str].new("method")]

[06:20] <Geth> ¦ doc: <…commit message has 8 more lines…>

[06:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a837f18b94

[06:22] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Document `with` of `squish`”: https://github.com/perl6/doc/pull/1493#issuecomment-326725532

[06:22] <Geth> ¦ doc: f3b58a1434 | Altai-man++ | doc/Type/List.pod6

[06:22] <Geth> ¦ doc: Document `with` of `squish`

[06:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f3b58a1434

[06:22] <Geth> ¦ doc: c060da8a49 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | doc/Type/List.pod6

[06:22] <Geth> ¦ doc: Merge pull request #1493 from perl6/1490-fix

[06:22] <Geth> ¦ doc: 

[06:22] <squashable6> 🍕 AlexDaniel++ closed issue “List.squish supports “wi…”: https://github.com/perl6/doc/issues/1490

[06:22] <Geth> ¦ doc: Document `with` of `squish`

[06:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c060da8a49

[06:22] <squashable6> 🍕 AlexDaniel++ merged pull request “Document `with` of `squish`”: https://github.com/perl6/doc/pull/1493

[06:23] *** Kyo91 left
[06:24] *** Kyo91 joined
[06:24] <Geth> ¦ doc: 53b822af26 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/List.pod6

[06:24] <Geth> ¦ doc: Use curly/ascii quotes consistently

[06:24] <Geth> ¦ doc: 

[06:24] <Geth> ¦ doc: Both examples are supposed to show the same thing, so there should be

[06:24] <Geth> ¦ doc: no difference in quote styles. For now, let's default to ascii quotes

[06:24] <Geth> ¦ doc: in such cases.

[06:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/53b822af26

[06:25] <squashable6> 🍕 AlexDaniel++ requested a review on pull request “add t/meta.t”: https://github.com/perl6/doc/pull/1492

[06:26] *** rindolf joined
[06:26] <gfldex> AlexDaniel: travis is still working on that one

[06:27] *** xinming joined
[06:27] <AlexDaniel> gfldex: sure

[06:28] <sena_kun> https://docs.perl6.org/type/Any#method_kv - there is a whole lot of TODOs. I can try to document it, can someone who is familliar with Any semantics review it afterwards?

[06:28] <AlexDaniel> sena_kun: we will figure it out

[06:29] *** Kyo91 left
[06:29] <sena_kun> roger~

[06:29] <squashable6> 🍕 AlexDaniel++ opened issue “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494

[06:29] <squashable6> 🍕 AlexDaniel++ assigned issue “A lot of TODOs in Any” to Altai-man: https://github.com/perl6/doc/issues/1494

[06:29] <AlexDaniel> sena_kun: here's a ticket for convenience

[06:30] <sena_kun> thanks.

[06:32] <gfldex> AlexDaniel: please merge /pull/1492, it's a requirement for a blogpost. Travis is happy with it.

[06:33] *** P6steve joined
[06:33] <P6steve> good morning

[06:34] <AlexDaniel> o/

[06:35] <Geth> ¦ doc: 34956a9d40 | (Wenzel P. P. Peppmeyer)++ | 2 files

[06:35] <Geth> ¦ doc: add t/meta.t

[06:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/34956a9d40

[06:35] <Geth> ¦ doc: 4f3bfb3b1d | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | 2 files

[06:35] <Geth> ¦ doc: Merge pull request #1492 from gfldex/master

[06:35] <Geth> ¦ doc: 

[06:35] <Geth> ¦ doc: add t/meta.t

[06:35] <squashable6> 🍕 AlexDaniel++ merged pull request “add t/meta.t”: https://github.com/perl6/doc/pull/1492

[06:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4f3bfb3b1d

[06:35] <sena_kun> https://github.com/rakudo/rakudo/blob/nom/src/core/Any.pm#L469 - it's here, but

[06:35] <AlexDaniel> buggable: pizza gfldex

[06:35] <buggable> gfldex, enjoy this slice of Meatzaa pizza, my friend! Yummy 🍕

[06:35] <sena_kun> m: my $a; $a.sum;

[06:35] <camelia> rakudo-moar 0bc1c8: OUTPUT: «Use of uninitialized value of type Any in numeric context␤  in block <unit> at <tmp> line 1␤»

[06:36] <sena_kun> m: Any.sum; # the result is obvious, though

[06:36] <camelia> rakudo-moar 0bc1c8: OUTPUT: «Use of uninitialized value of type Any in numeric context␤  in block <unit> at <tmp> line 1␤»

[06:36] <P6steve> seeing everyone go ⚛, I am thinking of using a unicode in my project when overloading to avoid conflict and to make it pd obvious when common operators have been tinkered with

[06:38] <P6steve> I use pain old vi - but it seems to struggle with these double width unicode chars - the next char gets eclipsed by the right half of the unicode - should I dump vi? what works? (macOS)

[06:38] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2017/09/02/hunting-documented-bugs/

[06:38] <unnecessarymulti> who's ready to SQUASH. SOME. BUGS

[06:38] <Geth> ¦ doc: 2e76a290bd | (Aleks-Daniel Jakimenko-Aleksejev)++ | META6.json

[06:39] <Geth> ¦ doc: Trailing whitespace and EOF newline

[06:39] <Geth> ¦ doc: 

[06:39] <Geth> ¦ doc: Because OCD

[06:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2e76a290bd

[06:39] <AlexDaniel> .pizza unnecessarymulti

[06:39] <AlexDaniel> buggable: pizza unnecessarymulti

[06:39] <buggable> unnecessarymulti, enjoy this slice of Margherita pizza, my friend! Yummy 🍕

[06:39] <gfldex> P6steve: i'm using vim in screen in putty and it works fine. So might just be your terminal.

[06:40] <unnecessarymulti> .eternalbliss AlexDaniel

[06:40] <unnecessarymulti> buggable pls

[06:40] <P6steve> ok - thanks gilded - I'll try to improve my vi/vim settings

[06:41] <AlexDaniel> P6steve: yeah, it may very well be your terminal

[06:42] <unnecessarymulti> are there apocalypse/exegesis docs for those not listed in https://design.perl6.org?

[06:43] <AlexDaniel> unnecessarymulti: no. Also, all materials there are noticeably outdated

[06:43] <unnecessarymulti> i'm moreso reading them for context, not correctness

[06:44] *** travis-ci joined
[06:44] <travis-ci> Doc build passed. Altai-man 'Document `with` of `squish`'

[06:44] <travis-ci> https://travis-ci.org/perl6/doc/builds/271092167 https://github.com/perl6/doc/commit/f3b58a14340a

[06:44] *** travis-ci left
[06:44] <unnecessarymulti> but thanks AlexDaniel :)

[06:48] *** leah2 left
[06:52] *** unnecessarymulti left
[06:52] *** yht left
[06:54] *** Actualeyes left
[06:55] <Geth> ¦ doc: zakame++ created pull request #1495: Document invocant in method signature

[06:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1495

[06:55] <squashable6> 🍕 zakame++ opened pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495

[06:57] <Geth> ¦ doc: gfldex++ created pull request #1496: use react in Proc::Async, closes #1468

[06:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1496

[06:57] <squashable6> 🍕 gfldex++ opened pull request “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496

[07:00] *** zakame left
[07:00] *** firefish5000 left
[07:01] *** imcsk8 left
[07:01] *** imcsk8 joined
[07:02] <squashable6> 🍕 Altai-man++ wrote a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[07:03] *** zakame joined
[07:03] <squashable6> 🍕 zakame++ wrote a comment on “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#issuecomment-326727138

[07:04] <squashable6> 🍕 AlexDaniel++ wrote a comment on “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496#issuecomment-326727177

[07:04] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[07:05] <squashable6> 🍕 gfldex++ synchronize pull request “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496

[07:08] <squashable6> 🍕 AlexDaniel++ submitted a review on pull request “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496#pullrequestreview-60270412

[07:08] <squashable6> 🍕 AlexDaniel++ wrote a comment on a review for “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496#discussion_r136690920

[07:08] <gfldex> AlexDaniel: `once` and threads may not mix well. Not sure but I would be careful. One would have to ask jnthn I guess.

[07:09] <AlexDaniel> gfldex: shouldn't be a problem in react block

[07:10] *** andrzejku joined
[07:16] <squashable6> 🍕 Altai-man++ wrote a comment on “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189#issuecomment-326727695

[07:17] *** cdg joined
[07:19] *** darutoko joined
[07:19] *** MasterDuke left
[07:20] <squashable6> 🍕 AlexDaniel++ submitted a review on pull request “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496#pullrequestreview-60270602

[07:20] <squashable6> 🍕 AlexDaniel++ wrote a comment on a review for “use react in Proc::Async, closes #1468”: https://github.com/perl6/doc/pull/1496#discussion_r136691110

[07:21] <P6steve> for those on macOS Terminal, iTerm-2 (nightly build) https://gitlab.com/gnachman/iterm2/wikis/unicodeversionswitching fixes emoji overlap such as >print 💩👻🎅⭕❗🎁

[07:21] *** cdg left
[07:22] <AlexDaniel> gfldex: I know that my PR may be a bit too complex, but it is kinda correct. The whole Proc::Async thing is a mothertrap unfortunately :-/

[07:22] <Geth> ¦ doc: gfldex++ created pull request #1497: be more precise about return types of sub await

[07:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1497

[07:22] <squashable6> 🍕 gfldex++ opened pull request “be more precise about return types of sub await”: https://github.com/perl6/doc/pull/1497

[07:24] *** Skarsnik joined
[07:24] <gfldex> AlexDaniel: did you test your example in RL code?

[07:24] <AlexDaniel> Alright I have to get some sleep. Have a nice squashathon everyone o/

[07:24] <sena_kun> o/

[07:24] <AlexDaniel> gfldex: RL code?

[07:24] <AlexDaniel> gfldex: ah real-life code.

[07:25] <Skarsnik> hello

[07:25] <AlexDaniel> gfldex: well, I tested the handling of signals, I don't think I use exactly that anywhere else

[07:26] <AlexDaniel> gfldex: I did test your example too, it truly leaves the process behind :)

[07:26] <gfldex> AlexDaniel: I think anything you provide should be shown in an example, just not in one go.

[07:27] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[07:27] <AlexDaniel> gfldex: I guess you are right. Because of RT #132016 handling of more than one signal at the same time should be omitted too

[07:27] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132016

[07:28] <gfldex> AlexDaniel: it depends on the process. If you close STDIN most processes will terminate. One does have to explicit with terminating processes indeed. What should be handled in another example, maybe at method kill.

[07:28] <AlexDaniel> gfldex: and the delay for SIGKILL on repeated SIGTERM/SIGINT too

[07:29] <AlexDaniel> gfldex: that's questionable. I hope we can do better than having an example in the lead of a page that works half of the times…

[07:30] <AlexDaniel> IIRC rakudo does not terminate on closed stdin or stdout

[07:31] <AlexDaniel> so you can close everything and it will be left doing its thing

[07:31] <gfldex> AlexDaniel: any time one forces to stop a process it will work half of the time. Some processes don't do cleanup when you send them a SIGQUIT.

[07:31] <AlexDaniel> as long as it does not attempt to read or write

[07:31] *** parv joined
[07:31] *** lancew joined
[07:31] <gfldex> does $proc.kill really sends SIGHUP? I would have guessed SIGQUIT.

[07:32] <gfldex> SIGTERM even

[07:32] <AlexDaniel> yeah

[07:32] <AlexDaniel> yeah, SIGTERM would be better

[07:32] <gfldex> I will comment on your PR.

[07:32] <AlexDaniel> gfldex: there's another problem with it, and this is why it sends sighup…

[07:33] <AlexDaniel> gfldex: if you start a process with proc::async, the process itself may start other processes

[07:33] <AlexDaniel> so if you want to bring the whole thing down, you have to be a bit smarter than what rakudo can currently do

[07:33] <AlexDaniel> i.e. bring the whole tree down

[07:34] <AlexDaniel> SIGHUP just happens to do that, occasionally

[07:34] <AlexDaniel> in perl5 you can send -SIGTERM (negated) and it will do the right thing

[07:34] <gfldex> if you send HUP to fetchmail it wont :)

[07:35] <AlexDaniel> right, but you're screwed either way

[07:36] <AlexDaniel> from perl5 docs: “A negative signal name is the same as a negative signal number, killing process groups instead of processes. For example, kill '-KILL', $pgrp and kill -9, $pgrp will send SIGKILL to the entire process group specified. That means you usually want to use positive not negative signals.”

[07:37] <AlexDaniel> I don't know what they're trying to say by “you usually want”

[07:37] <AlexDaniel> but you definitely don't want to leave a bunch of processes behind if you had to terminate something

[07:38] <AlexDaniel> IIRC if you Ctrl+C in the terminal, SIGINT is sent to a process group, not just the top process

[07:38] <Skarsnik> probably mean like if you have 10 perl process running and one stuck you just want to kill the right one?

[07:38] <squashable6> 🍕 zakame++ wrote a comment on “Description of all IRC bots”: https://github.com/perl6/doc/issues/711#issuecomment-326728541

[07:42] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Description of all IRC bots”: https://github.com/perl6/doc/issues/711#issuecomment-326728666

[07:44] <Skarsnik> AlexDaniel, did you try my fix? (just to know if I have to retest)

[07:44] <AlexDaniel> Skarsnik: no

[07:44] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Description of all IRC bots”: https://github.com/perl6/doc/issues/711#issuecomment-326728793

[07:45] <AlexDaniel> Skarsnik: well, not yet :)

[07:46] <AlexDaniel> Skarsnik: but please don't hold your breath, I have to sleep and then there's the remaining part of the squashathon… :)

[07:48] <lancew> Good morning everyone! I'm hoping to participate in the bug squashathon. :-) Now... to find the easy ones.

[07:49] *** cdg joined
[07:49] <AlexDaniel> buggable: pizza lancew

[07:49] <buggable> lancew, enjoy this slice of Hawaiian pizza, my friend! Yummy 🍕

[07:51] <AlexDaniel> lancew: you can try going through https://github.com/perl6/doc/labels/LHF and https://github.com/perl6/doc/labels/Hacktoberfest

[07:52] <Skarsnik> ok. I will look at it after breafast

[07:52] <AlexDaniel> lancew: but looking at it now, it seems like there are some other issues (not marked as LHF) that may be relatively easy

[07:53] <squashable6> 🍕 lancew++ wrote a comment on “Add note to footer about missing docs”: https://github.com/perl6/doc/issues/541#issuecomment-326729099

[07:53] <squashable6> 🍕🍕🍕  First contribution by lancew++! ♥

[07:53] <squashable6> 🍕 toolforger++ wrote a comment on “Description of all IRC bots”: https://github.com/perl6/doc/issues/711#issuecomment-326729113

[07:53] <squashable6> 🍕🍕🍕  First contribution by toolforger++! ♥

[07:54] *** cdg left
[07:54] <AlexDaniel> “search” tickets may be relatively easy if you learn how to add things to the index https://github.com/perl6/doc/issues?q=is%3Aissue+is%3Aopen+label%3Asearch

[07:54] <squashable6> 🍕 AlexDaniel++ assigned issue “Add note to footer about missing docs” to coke: https://github.com/perl6/doc/issues/541

[07:54] <lancew> Thanks AlexDaniel Having a scan through. I am working today but have "some" time

[07:55] *** pilne left
[07:55] <AlexDaniel> squashable6: status

[07:55] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈4 hours

[07:55] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/bd92413955ae4241bb6aa4a5de77ffd1

[07:55] <AlexDaniel> lancew: in your timezone you'll probably have some time tomorrow also :)

[07:56] <lancew> :-)

[07:58] *** espadrine joined
[07:58] <Skarsnik> AlexDaniel, go to sleep and squash !

[07:59] <squashable6> 🍕 zakame++ wrote a comment on “Description of all IRC bots”: https://github.com/perl6/doc/issues/711#issuecomment-326729300

[07:59] <AlexDaniel> Skarsnik: have to admit the squashathon is addictive :)

[08:00] <Skarsnik> .squash

[08:01] <squashable6> 🍕 zakame++ wrote a comment on “Int/Real.rand is ambiguous”: https://github.com/perl6/doc/issues/787#issuecomment-326729429

[08:01] <teatime> Skarsnik: No such method 'squash' for invocant of type 'Any'. Did you mean 'squish'?

[08:05] <AlexDaniel> o/

[08:10] *** SHODAN joined
[08:11] <Skarsnik> hulkable6, squash

[08:14] *** cdg joined
[08:20] *** cdg left
[08:24] *** Kyo91 joined
[08:27] *** Kyo91_ joined
[08:28] *** setty1 joined
[08:29] *** Kyo91 left
[08:31] *** Kyo91_ left
[08:36] *** parv left
[08:37] <squashable6> 🍕 zakame++ wrote a comment on “Int/Real.rand is ambiguous”: https://github.com/perl6/doc/issues/787#issuecomment-326731148

[08:37] *** yht joined
[08:39] *** nadim_ joined
[08:40] *** ssm left
[08:41] <stmuk_> Word of the Day: purl, n.3 Hot beer mixed with gin, sometimes also with ginger & sugar, often drunk early in the day

[08:42] *** nadim left
[08:42] *** ssm joined
[08:48] *** Cabanossi left
[08:49] *** Cabanossi joined
[08:49] <rightfold> classic morning Ballmer peak

[08:50] <squashable6> 🍕 zakame++ opened pull request “Clear ambiguity regarding Int/Real rand()”: https://github.com/perl6/doc/pull/1498

[08:50] <Geth> ¦ doc: zakame++ created pull request #1498: Clear ambiguity regarding Int/Real rand()

[08:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1498

[08:51] *** parv joined
[08:52] *** astj left
[08:52] *** yht left
[08:53] *** parv left
[08:54] *** leont joined
[08:58] <squashable6> 🍕 zakame++ wrote a comment on “Type constraint smileys …”: https://github.com/perl6/doc/issues/1469#issuecomment-326732109

[08:59] *** Sgeo_ left
[08:59] *** astj joined
[09:04] *** yht joined
[09:04] *** HoboWithAShotgun left
[09:06] *** yqt joined
[09:08] *** P6steve left
[09:08] *** lancew left
[09:15] *** nadim_ left
[09:17] *** Cabanossi left
[09:19] *** Cabanossi joined
[09:19] *** mr-fooba_ left
[09:22] *** konsolebox left
[09:22] *** mr-foobar joined
[09:25] *** Sgeo joined
[09:25] *** Ven joined
[09:25] *** Guest69863 joined
[09:25] *** Ven is now known as Guest66504

[09:27] *** konsolebox joined
[09:36] <squashable6> 🍕 Altai-man++ wrote a comment on “Clear ambiguity regarding Int/Real rand()”: https://github.com/perl6/doc/pull/1498#issuecomment-326733765

[09:37] <Geth> ¦ doc: 032f754dc2 | (Zak B. Elep)++ | doc/Type/Real.pod6

[09:37] <Geth> ¦ doc: Clear ambiguity regarding Int/Real rand()

[09:37] <Geth> ¦ doc: 

[09:37] <Geth> ¦ doc: Specify whether the endpoints are included or not when selecting the

[09:37] <Geth> ¦ doc: pseudo-random number.

[09:37] <Geth> ¦ doc: 

[09:37] <Geth> ¦ doc: References:

[09:37] <squashable6> 🍕 Altai-man++ closed issue “Int/Real.rand is ambiguous”: https://github.com/perl6/doc/issues/787

[09:37] <squashable6> 🍕 Altai-man++ merged pull request “Clear ambiguity regarding Int/Real rand()”: https://github.com/perl6/doc/pull/1498

[09:37] <Geth> ¦ doc: 

[09:37] <Geth> ¦ doc: - https://github.com/perl6/roast/blob/master/S32-num/rand.t#L13-L30

[09:37] <Geth> ¦ doc: - https://github.com/MoarVM/MoarVM/blob/master/3rdparty/tinymt/tinymt64.c#L97-L116

[09:37] <Geth> ¦ doc: 

[09:37] <Geth> ¦ doc: Fixes #787.

[09:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/032f754dc2

[09:37] <Geth> ¦ doc: be9a3c6dae | Altai-man++ (committed using GitHub Web editor) | doc/Type/Real.pod6

[09:37] <Geth> ¦ doc: Merge pull request #1498 from zakame/clear-rand-ambiguity

[09:37] <Geth> ¦ doc: 

[09:37] <Geth> ¦ doc: Clear ambiguity regarding Int/Real rand()

[09:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/be9a3c6dae

[09:37] <zakame> buggable: pizza sena_kun 

[09:37] <buggable> sena_kun, enjoy this slice of Mexican Green Wave pizza, my friend! Yummy 🍕

[09:38] <squashable6> 🍕 zakame++ wrote a comment on “Clear ambiguity regarding Int/Real rand()”: https://github.com/perl6/doc/pull/1498#issuecomment-326733825

[09:41] <Geth> ¦ doc: gfldex++ created pull request #1499: tell what use is looking for, hint to where. closes #1454

[09:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1499

[09:41] <squashable6> 🍕 gfldex++ opened pull request “tell what use is looking…”: https://github.com/perl6/doc/pull/1499

[09:43] <squashable6> 🍕 Altai-man++ wrote a comment on “tell what use is looking…”: https://github.com/perl6/doc/pull/1499#issuecomment-326733996

[09:43] <Geth> ¦ doc: c094277e22 | (Wenzel P. P. Peppmeyer)++ | doc/Language/modules.pod6

[09:43] <Geth> ¦ doc: tell what use is looking for, hint to where. closes #1454

[09:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c094277e22

[09:43] <Geth> ¦ doc: de4818124b | Altai-man++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[09:43] <Geth> ¦ doc: Merge pull request #1499 from gfldex/#1454

[09:43] <Geth> ¦ doc: 

[09:43] <Geth> ¦ doc: tell what use is looking for, hint to where. closes #1454

[09:43] <squashable6> 🍕 Altai-man++ merged pull request “tell what use is looking…”: https://github.com/perl6/doc/pull/1499

[09:43] <squashable6> 🍕 Altai-man++ closed issue “be explicit that `use` looks for *.pm and *.pm6”: https://github.com/perl6/doc/issues/1454

[09:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/de4818124b

[09:44] <squashable6> 🍕 zakame++ wrote a comment on “Type constraint smileys …”: https://github.com/perl6/doc/issues/1469#issuecomment-326734035

[09:44] <squashable6> 🍕 gfldex++ opened issue “we don't tell where modu…”: https://github.com/perl6/doc/issues/1500

[09:46] *** llfourn left
[09:46] <squashable6> 🍕 zakame++ edited a comment on “Type constraint smileys …”: https://github.com/perl6/doc/issues/1469#issuecomment-326734035

[09:46] *** dogbert2 joined
[09:46] *** nadim_ joined
[09:48] *** Skarsnik_ joined
[09:49] <Geth> ¦ doc: 851cbb9920 | Altai-man++ | doc/Language/modules.pod6

[09:49] <Geth> ¦ doc: Fix up indentation

[09:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/851cbb9920

[09:49] *** mr-foobar left
[09:51] *** Skarsnik left
[09:52] *** eater left
[09:53] *** mr-foobar joined
[09:54] *** eater joined
[09:55] <Geth> ¦ doc: gfldex++ created pull request #1501: Show how to put modules into default locations. closes #1500

[09:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1501

[09:55] <squashable6> 🍕 gfldex++ opened pull request “Show how to put modules …”: https://github.com/perl6/doc/pull/1501

[09:56] *** nadim_ left
[09:58] <squashable6> 🍕 Altai-man++ wrote a comment on “Show how to put modules …”: https://github.com/perl6/doc/pull/1501#issuecomment-326734636

[09:58] <squashable6> 🍕 Altai-man++ edited a comment on “Show how to put modules …”: https://github.com/perl6/doc/pull/1501#issuecomment-326734636

[09:59] *** nadim joined
[09:59] *** parv joined
[10:00] *** espadrine left
[10:00] *** astj left
[10:00] *** konsolebox left
[10:01] *** piojo joined
[10:03] *** Guest66504 left
[10:05] *** Ven joined
[10:05] *** Ven is now known as Guest63547

[10:09] *** konsolebox joined
[10:11] <squashable6> 🍕 Altai-man++ wrote a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326735156

[10:11] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[10:11] *** eythian left
[10:11] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[10:13] *** eythian joined
[10:19] *** mr-foobar left
[10:19] *** mr-fooba_ joined
[10:21] <Guest63547> o/

[10:21] *** yht left
[10:21] <Guest63547> uh

[10:21] *** Guest63547 is now known as Ven``

[10:21] <sena_kun> o/

[10:22] *** astj joined
[10:24] *** leah2 joined
[10:24] *** parv left
[10:25] *** astj left
[10:27] *** ShalokShalom_ joined
[10:29] *** ShalokShalom left
[10:36] *** imcsk8 left
[10:36] *** imcsk8 joined
[10:36] *** margeas joined
[10:37] *** purcell joined
[10:37] <samcv> night all o/

[10:38] *** Skarsnik joined
[10:38] <sena_kun> o/

[10:40] *** Kyo91_ joined
[10:41] *** Skarsnik_ left
[10:45] *** Kyo91_ left
[10:50] *** pmurias joined
[10:51] <pmurias> re signals bug, I guess we need to figure out how we want that to work and fix it

[10:51] *** Guest69863 left
[10:51] <pmurias> rather then document that it's buggged

[11:02] *** purcell left
[11:04] <pmurias> I'm not sure if we want to expose signal numbers as an enum as it seems to be specific to a given os+architecture 

[11:05] <leont> Also they're sometimes not unique

[11:17] <pmurias> leont: you mean two different signal share a number?

[11:18] <leont> A signal may have more than one name

[11:18] <leont> E.G. SIGIO/SIGPOLL

[11:18] <leont> (on Linux)

[11:19] <leont> And real-time signals don't really have a name, they're commonly used as SIGRTMIN + 6 and such

[11:25] *** vendethiel- joined
[11:29] <lizmat> I guess we need to get the info of $*KERNEL.signals into the enums somehow at install time

[11:30] *** piojo left
[11:30] <jnthn> fwiw, I never intended the enum values to mean anything other than a value that would be mapped by the underlying VM

[11:30] *** piojo joined
[11:32] <jnthn> Since otherwise trying to do things like building the bytecode files on one (powerful) platform and shipping them to some other tiny one, which just needed a MoarVM built, would go very badly.

[11:32] <jnthn> (As the numbers may be different.)

[11:33] <jnthn> I figure that's why the introspection interface is on $*KERNEL rather than $?KERNEL

[11:33] <sena_kun> m: say Any.produce(&[**]);

[11:33] <camelia> rakudo-moar 85a97a: OUTPUT: «Nil␤»

[11:34] <sena_kun> I can safely assume that `produce` returns `Nil` with any args?

[11:34] *** vendethiel- left
[11:34] <jnthn> So anyways, y'all are looking at a concious design call rather than a bug. :) You can of course disagree with the design call, so long as you understand the consequences. :)

[11:38] *** vendethiel- joined
[11:40] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[11:46] <lizmat> jnthn: do you agree that they *could* be enums, but created at install time ?

[11:47] *** vendethiel- left
[11:48] <jnthn> It's an enum now, no?

[11:48] <jnthn> m: say SIGINT.HOW.^name

[11:48] <camelia> rakudo-moar 85a97a: OUTPUT: «Perl6::Metamodel::EnumHOW␤»

[11:48] *** Cabanossi left
[11:49] *** Cabanossi joined
[11:49] <lizmat> afk&

[11:56] *** wamba left
[11:58] *** ChoHag left
[12:00] *** ChoHag joined
[12:00] *** koto joined
[12:00] *** koto left
[12:01] *** koto joined
[12:02] *** koto left
[12:02] *** wamba joined
[12:03] *** sena_kun left
[12:10] *** ChoHag left
[12:11] *** ChoHag joined
[12:11] *** sena_kun joined
[12:15] *** rindolf left
[12:20] *** Voldenet left
[12:21] *** Voldenet joined
[12:21] *** Voldenet left
[12:21] *** Voldenet joined
[12:23] *** Voldenet left
[12:23] <squashable6> 🍕 moritz++ self-assigned issue “https://docs.perl6.org/l…”: https://github.com/perl6/doc/issues/1461

[12:23] <Geth> ¦ doc: 442a922e06 | (Moritz Lenz)++ | html/.htaccess

[12:23] <Geth> ¦ doc: /language now redirects to language.html

[12:23] <Geth> ¦ doc: 

[12:23] <Geth> ¦ doc: This is for issue #1461

[12:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/442a922e06

[12:24] *** Voldenet joined
[12:24] *** Voldenet left
[12:24] *** Voldenet joined
[12:25] <Geth> ¦ doc: 96dc0505b1 | (Wenzel P. P. Peppmeyer)++ (committed by Moritz Lenz) | doc/Type/Promise.pod6

[12:25] <Geth> ¦ doc: be more precise about return types of sub await

[12:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/96dc0505b1

[12:25] *** rindolf joined
[12:25] <squashable6> 🍕 moritz++ merged pull request “be more precise about return types of sub await”: https://github.com/perl6/doc/pull/1497

[12:26] <squashable6> 🍕 zoffixznet++ closed issue “Regex )> and <( are not documented”: https://github.com/perl6/doc/issues/462

[12:26] <squashable6> 🍕 zoffixznet++ wrote a comment on “Regex )> and <( are not documented”: https://github.com/perl6/doc/issues/462#issuecomment-326741237

[12:28] <squashable6> 🍕 moritz++ edited a review on pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#pullrequestreview-60274847

[12:28] <squashable6> 🍕 moritz++ submitted a review on pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#pullrequestreview-60274847

[12:28] <squashable6> 🍕 moritz++ wrote a comment on a review for “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#discussion_r136694973

[12:29] <squashable6> 🍕 zakame++ wrote a comment on a review for “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#discussion_r136695012

[12:29] <squashable6> 🍕 zakame++ submitted a review on pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#pullrequestreview-60274883

[12:30] <Geth> ¦ doc: 60860aecc9 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed by Moritz Lenz) | doc/Type/Proc/Async.pod6

[12:30] <Geth> ¦ doc: Proc::Async example with ｢react｣

[12:30] <Geth> ¦ doc: 

[12:30] <Geth> ¦ doc: Tackle issue #1468.

[12:30] <Geth> ¦ doc: 

[12:30] <Geth> ¦ doc: IMO in this case it is reasonable to expect that people will be

[12:30] <Geth> ¦ doc: copying the example and reducing it to their needs, so I tried to

[12:30] <squashable6> 🍕 moritz++ merged pull request “Proc::Async example with ｢react｣”: https://github.com/perl6/doc/pull/1489

[12:30] <Geth> ¦ doc: include everything that may be needed.

[12:30] <Geth> ¦ doc: <…commit message has 6 more lines…>

[12:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/60860aecc9

[12:30] <Geth> ¦ doc: 839ce8b930 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed by Moritz Lenz) | doc/Type/Proc/Async.pod6

[12:30] <Geth> ¦ doc: Show example output

[12:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/839ce8b930

[12:30] <Geth> ¦ doc: fb916ea6d7 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed by Moritz Lenz) | doc/Type/Proc/Async.pod6

[12:30] <Geth> ¦ doc: Show how to get exit code from Proc::Async

[12:30] <Geth> ¦ doc: 

[12:30] <Geth> ¦ doc: Possibly resolves issue #1465.

[12:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fb916ea6d7

[12:30] *** Aaronepower left
[12:33] <squashable6> 🍕 zakame++ synchronize pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495

[12:35] *** sena_kun left
[12:35] <pmurias> jnthn: re design decision choosing misleading numbers as enum values seems really unfortunate

[12:36] *** wamba left
[12:36] *** Caelum joined
[12:37] <timotimo> oh wow, this failure mode for grammar::tracer is amazing

[12:37] <timotimo> it only shows TOP, but for every test in the file it starts at a deeper nesting level

[12:38] <squashable6> 🍕 zoffixznet++ wrote a comment on “Type constraint smileys …”: https://github.com/perl6/doc/issues/1469#issuecomment-326741736

[12:38] <piojo>  that's what you get when you write a super amazing debugging tool in 44 lines ;)

[12:38] <piojo> at least, I read a blog that said it was 44 lines. Haven't checked.

[12:38] <timotimo> you mean grammar tracer?

[12:38] <piojo> timotimo: yeah

[12:38] <timotimo> that one's a little bigger than that

[12:39] <piojo> The article said the debugger is longer, but tracer is short

[12:39] <lizmat> jnthn: how about this idea: having the make file run a tools/build/MAKE_SIGNALS.nqp that would modify src/core/signals.pm before concatenating for the core setting build ?

[12:39] <timotimo> it has a "use Grammar::Debugger::WrapCache" in there that could very well be added to the line count

[12:39] <pmurias> lizmat: in the setting the enum values are mapped to constants from nqp

[12:39] <piojo> `zef look`ing now...

[12:40] <lizmat> pmurias: so you're saying the nqp values are wrong ?

[12:40] <pmurias> lizmat: for example there is a mapping between SIGKILL and nqp::const::SIG_KILL

[12:40] <pmurias> lizmat: I'm looking into it but it seems that MoarVM sends the wrong signal

[12:41] *** lancew joined
[12:42] <squashable6> 🍕 moritz++ submitted a review on pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#pullrequestreview-60275062

[12:43] <squashable6> 🍕 zakame++ wrote a comment on “Type constraint smileys …”: https://github.com/perl6/doc/issues/1469#issuecomment-326741942

[12:45] <pmurias> lizmat: the precise value of SIGKILL and nqp::const::SIG_KILL should matter at all (even if they where for example 777 and 888) but MoarVM should use the correct signal for the OS

[12:46] *** Cabanossi left
[12:47] *** rindolf left
[12:47] <Zoffix> "should we solidify calling these particular constraints as "type smileys"?"  If anyone wants to chime in: https://github.com/perl6/doc/issues/1469#issuecomment-326741942

[12:48] <Zoffix> I thought that's what we called it, but maybe that's just a colloquial

[12:49] *** Cabanossi joined
[12:49] *** niceperl joined
[12:51] <zakame> haha yeah "definiteness/definedness type constraints" can get a mouthful rather quick :D

[12:52] *** Ven`` left
[12:52] *** Skarsnik_ joined
[12:54] <pmurias> do we have something like an enum but that blocks the user to get the actual value?

[12:54] <Geth> ¦ doc: 540f62d3a8 | (Zoffix Znet)++ | Makefile

[12:54] <Geth> ¦ doc: Make `make run` run morbo

[12:54] <Geth> ¦ doc: 

[12:54] <Geth> ¦ doc: - Morbo auto-restarts the app after changes to watched files

[12:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/540f62d3a8

[12:54] <Geth> ¦ doc: 75a1b67111 | (Zoffix Znet)++ | 2 files

[12:54] <Geth> ¦ doc: Remove insertion of default Pod::To::HTML CSS

[12:54] <squashable6> 🍕 zoffixznet++ closed issue “using CSS from another perl6.org site”: https://github.com/perl6/doc/issues/1407

[12:54] <Geth> ¦ doc: 

[12:54] <Geth> ¦ doc: - Fixes #1407

[12:54] <Geth> ¦ doc: - The look after this commit appears to be the same as pre-commit

[12:54] <Geth> ¦ doc:     so it doesn't look like the removed CSS was doing much of a job

[12:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/75a1b67111

[12:54] *** Skarsnik__ joined
[12:55] *** rindolf joined
[12:55] <jnthn> lizmat: Sure, if you agree that "you can build Rakudo on one system and ship the bytecode files to another" is something we no longer care to support.

[12:55] <squashable6> 🍕 moritz++ closed pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495

[12:55] <squashable6> 🍕 moritz++ reopened pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495

[12:55] <Geth> ¦ doc: 7b7c09841b | (Zak B. Elep)++ (committed by Moritz Lenz) | doc/Language/objects.pod6

[12:55] <Geth> ¦ doc: Document invocant in method signature

[12:55] <Geth> ¦ doc: 

[12:55] <Geth> ¦ doc: Add documentation on setting invocant in method signatures, using type

[12:55] <Geth> ¦ doc: constraints to define class and object methods, and using multi

[12:55] <squashable6> 🍕 moritz++ closed issue “Document use of method i…”: https://github.com/perl6/doc/issues/1121

[12:56] <lizmat> jnthn: ok, point taken :-)

[12:56] <Geth> ¦ doc: declarator for defining same-name class and object methods.

[12:56] <Geth> ¦ doc: 

[12:56] <squashable6> 🍕 moritz++ merged pull request “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495

[12:56] <Geth> ¦ doc: Fixes #1121.

[12:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7b7c09841b

[12:56] *** Skarsnik left
[12:56] <Geth> ¦ doc: 1e20a10a7a | (Zak B. Elep)++ (committed by Moritz Lenz) | doc/Language/objects.pod6

[12:56] <Geth> ¦ doc: :lipstick: s/comma/colon/ on method signature invocant description

[12:56] <Geth> ¦ doc: 

[12:56] <Geth> ¦ doc: Thanks @moritz!

[12:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1e20a10a7a

[12:56] <jnthn> lizmat: I'm sure that we have *other* cases that don't work out so well in this case, though.

[12:57] <jnthn> lizmat: So it's not like this would be the first thing that gets in the way of doing that. But if we do it, it'll probably be the first one where we've intentionally done so.

[12:58] *** Skarsnik_ left
[12:59] <squashable6> 🍕 zakame++ wrote a comment on “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#issuecomment-326742647

[12:59] <pmurias> jnthn: the low level design bug is that nqp::killprocasync takes as a first argument either a nqp::const or a raw signal number

[12:59] <pmurias> jnthn: and they overlap

[12:59] <jnthn> pmurias: Hm, it was meant to be the nqp::const:: I thought.

[12:59] <jnthn> At least, that's how I'd initially intended it.

[13:00] <jnthn> I don't know that I intended that op to ever take an actual signal number.

[13:01] <pmurias> the other bug is that MoarVM sends wrong signals for some nqp::const:: because it doesn't do a mapping

[13:01] *** skids joined
[13:01] <Geth> ¦ doc: 8fc1c69513 | (Moritz Lenz)++ | html/.htaccess

[13:01] <Geth> ¦ doc: Try to fix /language/ redirect

[13:01] <Geth> ¦ doc: 

[13:01] <Geth> ¦ doc: the previous attempt redirect /language/ to /language.html/.

[13:01] <Geth> ¦ doc: This if for issue #1461

[13:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8fc1c69513

[13:02] <squashable6> 🍕 moritz++ wrote a comment on “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#issuecomment-326742810

[13:02] *** yht joined
[13:02] <jnthn> huh, indeed, it's not doing the same mapping

[13:03] <jnthn> https://github.com/MoarVM/MoarVM/blob/master/src/io/signals.c#L61 is how it should be done

[13:03] <squashable6> 🍕 zakame++ wrote a comment on “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#issuecomment-326742855

[13:03] *** astj joined
[13:03] <squashable6> 🍕 gfldex++ synchronize pull request “Show how to put modules …”: https://github.com/perl6/doc/pull/1501

[13:04] <squashable6> 🍕 gfldex++ wrote a comment on “Show how to put modules …”: https://github.com/perl6/doc/pull/1501#issuecomment-326742921

[13:04] <leont> Fun fact: if you add a role called Scalar to your module, you get really confusing error messages…

[13:05] <timotimo> haha

[13:05] <timotimo> yeah, you can lexically override most things

[13:05] <lizmat> perhaps some of these should warn (at least) ?

[13:06] <jnthn> Or always be resolved in the setting

[13:06] <jnthn> We updated a few things to do that

[13:06] <timotimo> m: class Int { }; 1 + 2

[13:06] <camelia> rakudo-moar 85a97a: OUTPUT: «===SORRY!===␤This type cannot box a native integer: P6opaque, Int␤»

[13:06] <timotimo> well, that's not interesting at all

[13:07] <lizmat> m: class Int {}

[13:07] <camelia> rakudo-moar 85a97a: OUTPUT: «===SORRY!===␤This type cannot box a native integer: P6opaque, Int␤»

[13:07] <lizmat> you don't even need the 1+2  :-)

[13:07] *** ntinos left
[13:07] <lizmat> m: role Int { }   # whee!

[13:07] <camelia> rakudo-moar 85a97a: OUTPUT: «===SORRY!===␤You cannot create an instance of this type (Int)␤»

[13:08] *** astj left
[13:08] <timotimo> ah, it won't even try to pun the role

[13:08] <timotimo> because it really does expect the class Int to be there

[13:08] <timotimo> m: class Int { has int $.blah is box_target };

[13:08] <camelia> rakudo-moar 85a97a: OUTPUT: «===SORRY!===␤P6opaque: must compose Int before allocating␤»

[13:08] <leont> This should either always be resolved in the setting, or give a much better error message

[13:08] <timotimo> heh.

[13:09] <jnthn> Probably "always resolve in setting" is a better bet

[13:09] <timotimo> imo it's cool that things aren't resolved in the setting

[13:09] <timotimo> aaw

[13:09] <jnthn> For things like Int, Num, Str, etc.

[13:09] <jnthn> I mean, Int.new(...) clearly should not

[13:09] <jnthn> But for literals

[13:09] <timotimo> mhm

[13:10] <jnthn> It's not like people who actually want to do this can't write their own setting :)

[13:10] *** ntinos joined
[13:10] <timotimo> or slang

[13:10] <jnthn> Yeah

[13:10] <jnthn> But for most people this is just something to trip over

[13:10] <leont> The fact that Scalar is rather hidden made my case rather annoying

[13:10] <leont> It wasn't until I realized "oh right, the scalar container" that I had a clue of what was going on

[13:11] <timotimo> we already have a slang like that

[13:14] *** lancew left
[13:14] <timotimo> overload::constant

[13:15] <timotimo> though that is more about getting a call for every literal that passes the string

[13:15] <timotimo> so you can return whatever you want

[13:16] <squashable6> 🍕 zakame++ wrote a comment on “"it would be more useful…”: https://github.com/perl6/doc/issues/1212#issuecomment-326743467

[13:17] *** Cabanossi left
[13:19] *** Cabanossi joined
[13:19] <pmurias> jnthn: in terms of the high level interface the value of some enum members "accidentally" being the same as the os signal number is confusing

[13:20] <pmurias> m: say +SIGINT

[13:20] <camelia> rakudo-moar 85a97a: OUTPUT: «2␤»

[13:21] *** espadrine joined
[13:21] *** niceperl left
[13:22] <pmurias> jnthn: ^^ this looks like it's the number of SIGINT

[13:22] <pmurias> m: say +SIGUSR1 # the value of the os level SIGUSR1 is different across platforms

[13:22] <camelia> rakudo-moar 85a97a: OUTPUT: «30␤»

[13:27] *** espadrine left
[13:30] <squashable6> 🍕 zoffixznet++ closed issue “｢Examples｣ link is weird”: https://github.com/perl6/doc/issues/710

[13:30] <Geth> ¦ doc: b8a2ded9e1 | (Zoffix Znet)++ | assets/sass/style.scss

[13:30] <Geth> ¦ doc: Mark "Examples" and "Chat" menu items as external links

[13:30] <Geth> ¦ doc: 

[13:30] <Geth> ¦ doc: Fixes #710

[13:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b8a2ded9e1

[13:32] *** ShalokShalom_ is now known as ShalokShalom

[13:35] *** Workinggenius joined
[13:36] *** Workinggenius left
[13:38] <Geth> ¦ doc: d7ed308f3c | (Zoffix Znet)++ | assets/sass/style.scss

[13:38] <Geth> ¦ doc: Reduce width when vertical TOC shows up

[13:38] <Geth> ¦ doc: 

[13:38] <Geth> ¦ doc: - Fixes #690

[13:38] <Geth> ¦ doc: - Isn't much relevant due to plans to convert the site to BS

[13:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d7ed308f3c

[13:38] <squashable6> 🍕 zoffixznet++ closed issue “Use smaller width for tr…”: https://github.com/perl6/doc/issues/690

[13:41] *** PerlMonger joined
[13:41] <PerlMonger> Hi guys.

[13:41] <Zoffix> \o

[13:41] <Zoffix> buggable: pizza PerlMonger 

[13:41] <buggable> PerlMonger, enjoy this slice of Cheese and Pepperoni pizza, my friend! Yummy 🍕

[13:41] <PerlMonger> nomnomnom

[13:42] <PerlMonger> Very tasty!

[13:42] <Zoffix> \o/

[13:42] <PerlMonger> Needs some ketchup, though.

[13:43] <Zoffix> :)

[13:45] *** sena_kun joined
[13:45] <Geth> ¦ doc: 45f50b1b1c | (Wenzel P. P. Peppmeyer)++ (committed by Moritz Lenz) | doc/Language/modules.pod6

[13:45] <Geth> ¦ doc: Show how to put modules into default locations. closes #1500 (#1501)

[13:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/45f50b1b1c

[13:45] <squashable6> 🍕 moritz++ merged pull request “Show how to put modules …”: https://github.com/perl6/doc/pull/1501

[13:45] <squashable6> 🍕 moritz++ closed issue “we don't tell where modu…”: https://github.com/perl6/doc/issues/1500

[13:47] <PerlMonger> Guys, this might sound very noobish but plz no kil

[13:47] <Zoffix> We won't :)

[13:48] <timotimo> aaw, i don't want to boundscheck, but if i don't i segfault :D

[13:50] <Zoffix> PerlMonger: so, what's up?

[13:50] <PerlMonger> If I'm trying to create a window in Perl6, can I use openGL or do I have to call directly from the libDRM?

[13:51] <Zoffix> Oh, no idea :)

[13:51] <Zoffix> (so much for noobish question :P)

[13:52] <PerlMonger> lol

[13:53] <PerlMonger> How do people usually make windows in Perl6?

[13:53] <sena_kun> PerlMonger, I am a tea pot, but, you want a "low-level" window with the ability to draw primitives, right? If you want a window with buttons, labels and stuff, maybe you want some more high-level things like gtk?

[13:53] <teatime> very carefully?  :)

[13:54] <timotimo> m: say now / 10

[13:54] <camelia> rakudo-moar 85a97a: OUTPUT: «150436048.699602␤»

[13:54] <timotimo> m: say now div 10

[13:54] <camelia> rakudo-moar 85a97a: OUTPUT: «Cannot resolve caller infix:<div>(Instant, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[13:54] <timotimo> ^- is there a good reason for this? is it because "but how are we supposed to round the LHS? truncate, round, ...?)

[13:54] <timotimo> "

[13:55] <Zoffix> PerlMonger: personally, I never made any windows. Mostly do processing scripts or web. I think other folks use GTK or something

[13:55] <Zoffix> buggable: eco gtk

[13:55] <buggable> Zoffix, Found 4 results: GTK::Simple, GTK::Simpler, GTK::Scintilla, Inform. See https://modules.perl6.org/s/gtk

[13:55] <Zoffix> PerlMonger: ^ maybe check out one of those modules?

[13:55] <teatime> oh, weird why did I read that as "how do people usually build Perl6 on Windows"

[13:55] *** Deep_Thought joined
[13:55] <PerlMonger> Ahh, thanks guys!

[13:56] <sena_kun> Or he can try https://github.com/timo/SDL2_raw-p6 if he needs a low-level stuff.

[13:57] <PerlMonger> No, I was looking for something like gtk, I just didn't know whether there was anything Perl6 compatible

[13:57] <Zoffix> timotimo: it's one of the rough edges. In some places we just .Int non-Int numerals, in others (like above) we just die. It needs some standard way to polish it all everywhere, possibly.

[13:57] *** piojo left
[13:57] <Zoffix> m: "abc".comb(1.5).say

[13:57] <camelia> rakudo-moar 85a97a: OUTPUT: «Cannot resolve caller comb(Str: Rat); none of these signatures match:␤    (Str:D $: *%_)␤    (Str:D $: Int:D $size is copy, $limit = *, *%_)␤    (Str:D $: Str $pat, *%_)␤    (Str:D $: Str $pat, $limit, *%_)␤    (Str:D $: Regex:D $pattern, :$mat…»

[13:57] <Zoffix> m: "abc".comb[1.5].say

[13:57] <camelia> rakudo-moar 85a97a: OUTPUT: «b␤»

[13:58] <Zoffix> m: "abc".comb.pick(1.5).say

[13:58] <camelia> rakudo-moar 85a97a: OUTPUT: «(a)␤»

[13:59] <lizmat> unfortunately, I'm not really able to participate in the Squashathon

[13:59] <lizmat> but I'm looking forward to reporting the results in the next P6W  :-)

[13:59] <lizmat> afk again&

[14:00] <Zoffix> lizmat: that's still participation, I'd say :)

[14:02] *** Guest69863 joined
[14:03] *** piojo joined
[14:03] *** Cabanossi left
[14:03] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326735156

[14:03] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[14:03] <sena_kun> Ugh.

[14:04] <sena_kun> Okay, let's not edit things for now...

[14:04] *** Cabanossi joined
[14:05] <Zoffix> Opened a ticket for that: https://github.com/perl6/whateverable/issues/225

[14:05] <squashable6> 🍕 moritz++ wrote a comment on “https://docs.perl6.org/l…”: https://github.com/perl6/doc/issues/1461#issuecomment-326745968

[14:05] <squashable6> 🍕 moritz++ closed issue “https://docs.perl6.org/l…”: https://github.com/perl6/doc/issues/1461

[14:05] <sena_kun> Zoffix++

[14:05] *** audiatorix joined
[14:07] <audiatorix> Any idea why the following would not work: my $app = Web::App::Dispatch.new($scgi); when the signature for the method is: method new ($engine)

[14:07] <Zoffix> audiatorix: what's the error?

[14:07] <audiatorix> It says I'm passing 2 parameters when 1 is expected but clearly not

[14:08] <audiatorix> Too many positionals passed; expected 1 argument but got 2

[14:08] <Zoffix> audiatorix: the 2 parameters == invocant + $scgi variable

[14:08] *** piojo2 joined
[14:08] <Zoffix> audiatorix: looks like method new ($engine) isn't what you're actually calling

[14:08] <audiatorix> Ahh

[14:09] <audiatorix> I'm doing exactly what the creator's example code does

[14:09] <Zoffix> What modules is it from?

[14:09] <audiatorix> Web

[14:10] <audiatorix> Supernovus' perl6-web

[14:10] <audiatorix> https://github.com/supernovus/perl6-web

[14:10] *** piojo left
[14:10] <audiatorix> Web::App::Dispatch is a more specific Web::App it seems

[14:11] <squashable6> 🍕 raiph++ wrote a comment on “"it would be more useful…”: https://github.com/perl6/doc/issues/1212#issuecomment-326746308

[14:11] <squashable6> 🍕🍕🍕  First contribution by raiph++! ♥

[14:12] <audiatorix> I think the problem is that new shouldn't be a method, right?

[14:12] <audiatorix> because new exists before any instance is created

[14:13] *** piojo2 left
[14:14] <Zoffix> audiatorix: nah, I found the problem. 1 sec

[14:14] <raiph> audiatorix: did you checkout http://mi.cro.services per my earlier comment to you? curious to hear what you thought for your use case.

[14:15] <raiph> (gotta run for now but will read log later, prolly this pm)

[14:15] *** piojo2 joined
[14:16] <Zoffix> audiatorix: the module's is using .bless call that's no longer supported. I sent a PR to fix that ( https://github.com/supernovus/perl6-web/pull/18 ) and you can install that version with zef --force-install install https://github.com/zoffixznet/perl6-web/archive/patch-2.zip  BUT, while the server from Example 2 now starts, it dies with "Invalid netstring stream data." when I try to load the page in the

[14:16] <Zoffix> browser; maybe that's just not supposed to be used from the brower or maybe it's another bug, I dunno :)

[14:17] <audiatorix> Hm

[14:17] <audiatorix> okay, I may try Cro instead, since this seems to be a bit out of date

[14:17] <audiatorix> Not sure if I like the API on Cro though

[14:17] <Zoffix> Sounds like a plan.

[14:20] <audiatorix> Much more well-documented though

[14:20] <audiatorix> thanks

[14:20] <audiatorix> I didn't see that last night

[14:21] *** mr_ron joined
[14:24] *** pilne joined
[14:27] *** Skarsnik_ joined
[14:28] <squashable6> 🍕 ronaldxs++ wrote a comment on “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#issuecomment-326747280

[14:28] <squashable6> 🍕🍕🍕  First contribution by ronaldxs++! ♥

[14:29] <squashable6> 🍕 zakame++ wrote a comment on “Document invocant in method signature”: https://github.com/perl6/doc/pull/1495#issuecomment-326747314

[14:30] *** Skarsnik__ left
[14:35] *** audiatorix left
[14:40] *** |oLa| left
[14:40] *** |oLa|1 joined
[14:41] <timotimo> damn, %= is a nice operator

[14:41] <timotimo> damn, %= is a nice operator

[14:41] <timotimo> wow.

[14:44] <Zoffix> lulz

[14:44] * timotimo is making trippy animations with SDL2_raw

[14:44] *** |oLa|1 left
[14:45] *** konsolebox left
[14:48] *** chsanch joined
[14:51] <sena_kun> m: Any.print-nl();

[14:51] <camelia> rakudo-moar 85a97a: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[14:51] <sena_kun> eeeeeeeh?

[14:51] <sena_kun> o.O

[14:52] *** konsolebox joined
[14:52] <Zoffix> s: Any, 'print-nl', \()

[14:52] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/85a97ab3d/src/core/Any.pm#L465

[14:52] <sena_kun> I know where it is.

[14:52] <sena_kun> But.

[14:53] <Zoffix> Don't know why it was needed: https://github.com/rakudo/rakudo/commit/2cb72b2141f2e37c0df4fb04fc2f5b68e34cdf01

[14:54] <sena_kun> maybe there were reasons.

[14:54] <Zoffix> (is it in roast? If not, perhaps it should be removed)

[14:54] <sena_kun> the thing that concerns me right now is why there are two args passed, not one. :/

[14:55] <sena_kun> m: Any.print-nl;

[14:55] <camelia> rakudo-moar 85a97a: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[14:55] <sena_kun> This definetely looks like only the instance is passed. For me, at least.

[14:55] <Zoffix> sena_kun: see the link from the bot. It delegates it to self.print: "\n"

[14:55] <Zoffix> That's where the error is from

[14:55] <sena_kun> ah.

[14:56] *** Deep_Thought left
[14:56] <sena_kun> hmmm.

[14:56] <sena_kun> I won't "document" it then.

[14:56] *** audiatorix joined
[14:57] *** Deep_Thought joined
[14:58] <Geth> ¦ doc: 83ca0dcbca | (Zoffix Znet)++ | template/header.html

[14:58] <Geth> ¦ doc: Improve alt="" of logo

[14:58] <Geth> ¦ doc: 

[14:58] <Geth> ¦ doc: - Use text version of Camelia

[14:58] <Geth> ¦ doc: - Fixes overlapping text when images are off

[14:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/83ca0dcbca

[14:58] <Geth> ¦ doc: cc66622de1 | (Zoffix Znet)++ | 2 files

[14:58] <squashable6> 🍕 zoffixznet++ closed issue “Need higher contrast for highlighted code”: https://github.com/perl6/doc/issues/1084

[14:58] <Geth> ¦ doc: Make site pass Chrome's Accessibility Audit

[14:58] <Geth> ¦ doc: 

[14:58] <Geth> ¦ doc: Fixes #1084

[14:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cc66622de1

[14:58] <squashable6> 🍕 Altai-man++ wrote a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326749193

[14:58] *** pmurias left
[14:58] <audiatorix> Does anyone know of a module for a simple console that stops output from writing in the middle of input

[14:59] <sena_kun> audiatorix, e.g. with ^C or something?

[14:59] <sena_kun> and define "console", please. Do you want a REPL?

[14:59] <audiatorix> Well

[15:00] <audiatorix> I want a way to get input and give output in the terminal, so that when a line is written out, it won't just write in the middle of what's being typed

[15:01] <audiatorix> I have seen it in other languages but

[15:01] <squashable6> 🍕 zoffixznet++ wrote a comment on “using CSS from another perl6.org site”: https://github.com/perl6/doc/issues/1407#issuecomment-326749444

[15:02] <audiatorix> I'd rather not implement all that myself if possible

[15:04] *** Guest69863 left
[15:05] *** Deep_Thought left
[15:05] *** konsolebox left
[15:07] <squashable6> 🍕 ronaldxs++ wrote a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326749741

[15:07] <squashable6> 🍕 ronaldxs++ reopened issue “Document use of method i…”: https://github.com/perl6/doc/issues/1121

[15:07] *** Skarsnik_ left
[15:09] *** ChoHag left
[15:10] *** audiatorix left
[15:11] *** konsolebox joined
[15:11] <Zoffix> "Rakudo Star is available from Homebrew, and Rakudo from MacPorts."  is that stuff maintained by anyone? Anyone got a mac handy? What version it got in it? brew info rakudo-star

[15:11] <squashable6> 🍕 zakame++ wrote a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326749997

[15:12] <chsanch> $ brew info rakudo-star

[15:12] <chsanch> rakudo-star: stable 2017.07 (bottled)

[15:13] <Zoffix> Looks up to date. Thanks :)

[15:15] <stmuk_> https://www.youtube.com/watch?v=wGrEzlHqKQg

[15:15] <chsanch> Yah, they keep it updated, but I prefer to use rakudobrew.

[15:16] <Zoffix> heh

[15:16] <Zoffix> I'm actually updating the download page to toss rakudobrew :)

[15:19] *** raiph left
[15:19] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326749193

[15:22] <sena_kun> samcv, ping?

[15:22] <samcv> pong?

[15:22] <sena_kun> o/

[15:22] <samcv> pingpong?

[15:22] <samcv> ping?pong?

[15:22] <samcv> how are you

[15:24] <lizmat> stmuk_: thanks for the link of this lightning talk by ven

[15:24] <mr_ron> zakame, ping - preferably in private chat or here is ok

[15:24] <sena_kun> Feeling delightful, thanks. I am now trying to do something with a wall of TODOs for Any type. Since https://github.com/rakudo/rakudo/commit/56114251e155b11251f55e90880b6ee75ad3a986 is yours, can you, please, in a line or two provide an explanation for that method on Any? Because it doesn't seem like some other method call, so I am not sure what should I fill it there.

[15:24] <lizmat> afk again&

[15:25] <sena_kun> m: Any.collate;

[15:25] <camelia> rakudo-moar 85a97a: ( no output )

[15:25] <sena_kun> m: say Any.collate;

[15:25] <camelia> rakudo-moar 85a97a: OUTPUT: «((Any))␤»

[15:25] <samcv> m: say Any.sort

[15:25] <camelia> rakudo-moar 85a97a: OUTPUT: «((Any))␤»

[15:25] <sena_kun> This method returns you an Any wrapped in a List. No charge! :D

[15:26] <samcv> yep

[15:26] <sena_kun> So I can write something like, lets see...

[15:26] <timotimo> in other places you pay a few cents extra to get you stuff put into a bag

[15:27] <sena_kun> Calls a `sort` method, but, hmm, it is not an explanation, just some sources observation. Hmmmm.

[15:27] <samcv> m: dd "sena_kun".sort

[15:27] <camelia> rakudo-moar 85a97a: OUTPUT: «("sena_kun",).Seq␤»

[15:28] <timotimo> "sorts using the unicode collation algorithm"

[15:28] <squashable6> 🍕 zakame++ edited a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326749997

[15:29] <samcv> well you get it throwing when doing

[15:29] <samcv> m: use experimental :collation; dd (Any, "sena_kun").collate

[15:29] <camelia> rakudo-moar 85a97a: OUTPUT: «Cannot resolve caller infix:<coll>(Any, Str); none of these signatures match:␤    (Str:D \a, Str:D \b --> Order:D)␤    (Cool:D \a, Cool:D \b --> Order:D)␤    (Pair:D \a, Pair:D \b)␤  in block <unit> at <tmp> line 1␤␤»

[15:29] <samcv> probably needs an RT

[15:29] <sena_kun> m: say "天ノ弱".comb.collate;

[15:29] <camelia> rakudo-moar 85a97a: OUTPUT: «Use of the 'coll' operator is experimental; please 'use experimental :collation'␤  in block <unit> at <tmp> line 1␤␤»

[15:30] <sena_kun> m: use experimental :collation; say "天ノ弱".comb.collate;

[15:30] <camelia> rakudo-moar 85a97a: OUTPUT: «(天 弱 ノ)␤»

[15:30] <sena_kun> wow.

[15:30] <Geth> ¦ ecosystem: 5232489754 | (Jonathan Stowe)++ | META.list

[15:30] <Geth> ¦ ecosystem: Add FastCGI::NativeCall::Async

[15:30] <Geth> ¦ ecosystem: 

[15:30] <Geth> ¦ ecosystem: See https://github.com/jonathanstowe/FastCGI-NativeCall-Async

[15:30] <Geth> ¦ ecosystem: All good clean fun.

[15:30] <samcv> that order isn't correct right now. but if you used my collation-arrays branch of moarvm it would be

[15:30] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/5232489754

[15:30] <sena_kun> okay, thanks, I get the situation much or less. samcv++

[15:30] <samcv> but hopefully in the next week i will merge it and you can sort 'ﬁ' with fi and æ with ae and such

[15:31] *** yht left
[15:31] <samcv> right now it is better than .sort but uses a naive sort of method to sort not my Fancy Branch New™ collation algorithm code

[15:31] *** Guest35819 joined
[15:33] *** Guest35819 left
[15:33] <samcv> and sort ㌀ with アパート

[15:34] <zakame> m: class C { has $.x; method f(::?CLASS:U:) { self.x } }; C.f

[15:34] <camelia> rakudo-moar 85a97a: OUTPUT: «Cannot look up attributes in a C type object␤  in method f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:34] <zakame> m: class C { has $.x; method f(::?CLASS:D:) { self.x } }; C.f

[15:34] <camelia> rakudo-moar 85a97a: OUTPUT: «Invocant of method 'f' must be an object instance of type 'C', not a type object of type 'C'.  Did you forget a '.new'?␤  in method f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:34] <samcv> anyway i'm gonna go back to sleep for a bit. see you all in a few hours

[15:34] <zakame> m: class C { has $.x; method f(::?CLASS:D:) { self.x } }; C.new.f

[15:34] <camelia> rakudo-moar 85a97a: ( no output )

[15:34] <sena_kun> samcv, o/

[15:37] <squashable6> 🍕 coke++ closed issue “Add note to footer about missing docs”: https://github.com/perl6/doc/issues/541

[15:37] <squashable6> 🍕 coke++ wrote a comment on “Add note to footer about missing docs”: https://github.com/perl6/doc/issues/541#issuecomment-326751465

[15:38] <squashable6> 🍕 coke++ wrote a comment on “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189#issuecomment-326751527

[15:38] <squashable6> 🍕 coke++ closed issue “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189

[15:38] <squashable6> 🍕 coke++ reopened issue “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189

[15:39] <squashable6> 🍕 coke++ wrote a comment on “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189#issuecomment-326751584

[15:39] *** eroux joined
[15:42] *** PerlMonger left
[15:43] <squashable6> 🍕 Altai-man++ edited a comment on “A lot of TODOs in Any”: https://github.com/perl6/doc/issues/1494#issuecomment-326727105

[15:44] <zakame> class C { method d() { say 42 }; method f(::?CLASS:U:) { self.d } }; C.f

[15:44] <zakame> m: class C { method d() { say 42 }; method f(::?CLASS:U:) { self.d } }; C.f

[15:44] <camelia> rakudo-moar 85a97a: OUTPUT: «42␤»

[15:55] *** lichtkind joined
[15:56] <lichtkind> moritz: ping

[15:57] <squashable6> 🍕 Altai-man++ wrote a comment on “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189#issuecomment-326752702

[15:59] <Geth> ¦ doc: zakame++ created pull request #1502: (Try to) clarify type smileys for .DEFINITE-ness

[15:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1502

[15:59] <squashable6> 🍕 zakame++ opened pull request “(Try to) clarify type smileys for .DEFINITE-ness”: https://github.com/perl6/doc/pull/1502

[16:02] <Geth> ¦ doc/any-clarification: 12ce8cf704 | Altai-man++ | doc/Type/Any.pod6

[16:02] <Geth> ¦ doc/any-clarification: Attempt to document most of `Any` methods

[16:02] <Geth> ¦ doc/any-clarification: review: https://github.com/perl6/doc/commit/12ce8cf704

[16:03] *** skids left
[16:04] <Geth> ¦ doc: f81802d7c1 | (Zak B. Elep)++ (committed by Zoffix Znet) | doc/Type/Signature.pod6

[16:04] <Geth> ¦ doc: (Try to) clarify type smileys for .DEFINITE-ness (#1502)

[16:04] <Geth> ¦ doc: 

[16:04] <Geth> ¦ doc: Based on conversation with @zoffixznet, try to add more context (and

[16:04] <Geth> ¦ doc: definiteness) to the current elaboration for the `:D`, `:U`, and `:_`

[16:04] <squashable6> 🍕 zoffixznet++ closed issue “Type constraint smileys …”: https://github.com/perl6/doc/issues/1469

[16:04] <Geth> ¦ doc: type constraints.  I realize this is also a good place here to show type

[16:04] <Geth> ¦ doc: objects and instances, to support the concept of definiteness.

[16:04] <squashable6> 🍕 zoffixznet++ merged pull request “(Try to) clarify type smileys for .DEFINITE-ness”: https://github.com/perl6/doc/pull/1502

[16:04] <Geth> ¦ doc: 

[16:04] <Geth> ¦ doc: Fixes #1469.

[16:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f81802d7c1

[16:04] <squashable6> 🍕 zoffixznet++ wrote a comment on “(Try to) clarify type smileys for .DEFINITE-ness”: https://github.com/perl6/doc/pull/1502#issuecomment-326753173

[16:05] <squashable6> 🍕 zakame++ wrote a comment on “(Try to) clarify type smileys for .DEFINITE-ness”: https://github.com/perl6/doc/pull/1502#issuecomment-326753199

[16:05] <Geth> ¦ doc: Altai-man++ created pull request #1503: Attempt to document most of `Any` methods

[16:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1503

[16:06] <squashable6> 🍕 Altai-man++ opened pull request “Attempt to document most of `Any` methods”: https://github.com/perl6/doc/pull/1503

[16:07] <yoleaux> Zoffix: fix rakudo.org download page, bruh

[16:08] <Zoffix> yoleaux: I'm on it, bruh.

[16:12] <Zoffix> "Because of a not yet implemented POSIX interface in cygwin (specifically pthread_barrier needed by libuv, see https://cygwin.com/cygwin-api/std-notimpl.html), Rakudo can not yet be compiled on that environment."

[16:12] <Zoffix> Is that still accurate? I thought someone did compile in cygwin

[16:14] * Zoffix 'll just it still is

[16:15] *** ChoHag joined
[16:15] *** espadrine joined
[16:23] <dogbert2> Zoffix: I believe libuv 1.12+ has fixed this

[16:26] <Zoffix> neat

[16:27] *** telex left
[16:28] *** telex joined
[16:32] *** travis-ci joined
[16:32] <travis-ci> Doc build passed. Altai-man 'Attempt to document most of `Any` methods'

[16:32] <travis-ci> https://travis-ci.org/perl6/doc/builds/271190912 https://github.com/perl6/doc/commit/12ce8cf7044b

[16:32] *** travis-ci left
[16:37] <AlexDaniel> squashable6: status

[16:37] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in ≈19 hours

[16:37] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/38027235d60536fe6827752b33e9b068

[16:37] <squashable6> 🍕 zoffixznet++ self-assigned issue “Bad examples for .push methods in Iterator docs”: https://github.com/perl6/doc/issues/1395

[16:39] <AlexDaniel> awesome

[16:39] *** khw joined
[16:42] *** freeze joined
[16:45] <AlexDaniel> hmm interesting

[16:45] <AlexDaniel> my PR was merged even though it said not to merge it? Hmm…

[16:47] *** Cabanossi left
[16:48] *** Sgeo left
[16:49] *** Cabanossi joined
[16:50] *** Sgeo joined
[16:52] <squashable6> 🍕 AlexDaniel++ edited a comment on “"it would be more useful…”: https://github.com/perl6/doc/issues/1212#issuecomment-326746308

[16:54] *** squashable6 left
[16:54] *** squashable6 joined
[16:55] <squashable6> 🍕 AlexDaniel++ wrote a comment on “"it would be more useful…”: https://github.com/perl6/doc/issues/1212#issuecomment-326756218

[16:55] <squashable6> 🍕 AlexDaniel++ deleted a comment on “"it would be more useful…”: https://github.com/perl6/doc/issues/1212#issuecomment-326756218

[16:55] <AlexDaniel> squashable6: log

[16:55] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/2c930ae717d09e7e291afdf637749640

[16:55] <AlexDaniel> Zoffix: thanks

[16:55] <AlexDaniel> Zoffix: (↑ edits are no longer mentioned on the channel)

[16:56] *** piojo2 left
[16:56] <Zoffix> sweet

[16:56] <Zoffix> AlexDaniel++

[16:56] <AlexDaniel> sena_kun: “Okay, let's not edit things for now...” feel free to now :)

[16:57] <sena_kun> \o/

[17:00] <Geth> ¦ whateverable: bfd8aae1cd | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[17:00] <Geth> ¦ whateverable: Use #perl6 channel for announcements

[17:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/bfd8aae1cd

[17:00] <Geth> ¦ whateverable: abe1bedc23 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[17:00] <Geth> ¦ whateverable: More newlines in the log

[17:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/abe1bedc23

[17:00] <Geth> ¦ whateverable: ba04dcb79f | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[17:00] <Geth> ¦ whateverable: Don't mention edit events on IRC

[17:00] <Geth> ¦ whateverable: 

[17:00] <Geth> ¦ whateverable: But still write them into the log.

[17:00] <Geth> ¦ whateverable: 

[17:00] <Geth> ¦ whateverable: Addresses #225.

[17:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/ba04dcb79f

[17:04] *** itaipu joined
[17:08] *** astj joined
[17:11] <AlexDaniel> Zoffix: it still counts as a first contribution though, which is exactly right :)

[17:12] *** astj left
[17:12] <squashable6> 🍕 AlexDaniel++ labeled issue “Unreadable type graphs”: https://github.com/perl6/doc/issues/246

[17:12] <squashable6> 🍕 AlexDaniel++ unlabeled issue “Unreadable type graphs”: https://github.com/perl6/doc/issues/246

[17:13] *** Garland joined
[17:13] *** wamba joined
[17:19] <Geth> ¦ doc: 70084290cf | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Proc/Async.pod6

[17:19] <Geth> ¦ doc: Don't recommend code that does not work

[17:19] <Geth> ¦ doc: 

[17:19] <Geth> ¦ doc: Please revert once RT #132016 is resolved.

[17:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/70084290cf

[17:19] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132016

[17:19] *** nadim left
[17:21] *** mr-fooba_ left
[17:22] *** mr-foobar joined
[17:23] *** pilne left
[17:24] *** eroux left
[17:26] *** pmurias joined
[17:27] <pmurias> https://eventil.com/presentations/v1spZG # new presentation on graal/truffle - which is something Perl 6 should be running on too

[17:30] *** AlexDaniel left
[17:30] *** AlexDaniel joined
[17:31] *** pilne joined
[17:39] *** nadim joined
[17:40] *** lancew joined
[17:48] <timotimo> https://twitter.com/loltimo/status/904038390131286025

[17:50] *** emeric joined
[17:51] *** ChristopherBotto joined
[17:52] *** mr-foobar left
[17:53] *** mr-foobar joined
[17:55] <lichtkind> liz: sorry from sms spamming in amsterdam to you

[17:55] <lichtkind> liz but after some research i want to make different proposal for perl6::Doc

[17:56] <AlexDaniel> ? :)

[17:59] *** ChristopherBotto left
[18:01] *** Cabanossi left
[18:03] *** nadim left
[18:03] *** Cabanossi joined
[18:04] <AlexDaniel> hmmm Table of Contents is now on the side for me

[18:05] <lichtkind> are the synopses out of date?

[18:05] <lichtkind> i masn are any of  the synopses out of date?

[18:05] <lichtkind> mean

[18:05] <AlexDaniel> lichtkind: mostly, yes

[18:06] <lichtkind> why?

[18:06] <AlexDaniel> lichtkind: well, there's still some good info there. But nobody is putting their time into maintaining them

[18:07] <lichtkind> and maybe becasue docs.perl6.org is more maintained now?

[18:07] <AlexDaniel> although, now that I looked at it, there are some good commits recently

[18:08] <AlexDaniel> or maybe not. Judge yourself: https://github.com/perl6/specs

[18:08] <AlexDaniel> lichtkind: that too, yes

[18:08] *** chsanch left
[18:09] <lichtkind> i ask becasue i have to decide if i comletely  mark th perl5 module Perl6::Doc defunc or just update the syn pod and thro the otehr parts away

[18:09] <lichtkind> because

[18:13] <AlexDaniel> lichtkind: yes, perl6/doc is “Perl 6 documentation”, not Synopses

[18:14] <AlexDaniel> lichtkind: it should be Perl6::HistoricalDesignDocs or something :)

[18:15] <lichtkind> are doc.perl6.org written in POD6 ? would make sens

[18:15] <lichtkind> so i jsut need converter

[18:15] <lichtkind> no we have grok

[18:16] <Zoffix> .oO( Pod::To::Pod :P )

[18:16] <lichtkind> pod 6 to pod 5

[18:16] <lichtkind> but we dont need that since grok uses perl6::Pod

[18:20] <AlexDaniel> Zoffix: hey. What's the intention for ToC and 1280px wide screens?

[18:21] *** mr-foobar left
[18:21] <Zoffix> render toc on the side if there's pace

[18:21] <Zoffix> render toc on the side if there's space

[18:23] <squashable6> 🍕 moritz++ closed issue “Modified quantifier trap…”: https://github.com/perl6/doc/issues/1163

[18:23] <Geth> ¦ doc: a206c6080e | (Moritz Lenz)++ | doc/Language/regexes.pod6

[18:23] <Geth> ¦ doc: Expand a bit on modified quantifiers. Closes #1163

[18:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a206c6080e

[18:23] *** mr-foobar joined
[18:24] <AlexDaniel> I'm not entirely sure that I like that: https://files.progarm.org/2017-09-02-212325_1280x800_scrot.png

[18:25] <AlexDaniel> but we'll see how it goes

[18:26] <AlexDaniel> (the reason being that it looks a bit too much to the side on a small screen)

[18:27] <Geth> ¦ doc: e8482f808c | (Zak B. Elep)++ | 2 files

[18:27] <Geth> ¦ doc: :lipstick: fix typos in method invocant and type smiley examples

[18:27] <Geth> ¦ doc: 

[18:27] <Geth> ¦ doc: Thanks @ronaldxs for spotting!

[18:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e8482f808c

[18:29] <Zoffix> Yes, but you don't have to scroll through miles of TOC links to get to content and the commit didn't change the width of the content section.

[18:29] <squashable6> 🍕 zoffixznet++ self-unassigned issue “Bad examples for .push methods in Iterator docs”: https://github.com/perl6/doc/issues/1395

[18:30] <AlexDaniel> Zoffix: OK I see. Well, I never do that (search function usually gets me to the middle of a page, so I never see the top).

[18:30] *** Zoffix left
[18:32] <AlexDaniel> … did I say something wrong?

[18:33] *** Zoffix joined
[18:33] <Zoffix> No, I'm just gonna take a break. 

[18:33] <Zoffix> \o

[18:33] *** Zoffix left
[18:33] <AlexDaniel> sure. Take care

[18:41] <Geth> ¦ doc: c052c47b8b | (Moritz Lenz)++ | 2 files

[18:41] <Geth> ¦ doc: Remove last references to zavolaj

[18:41] <Geth> ¦ doc: 

[18:41] <Geth> ¦ doc: Closes #828

[18:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c052c47b8b

[18:41] <squashable6> 🍕 moritz++ closed issue “zavolaj seems outdated f…”: https://github.com/perl6/doc/issues/828

[18:43] *** mr_ron left
[18:43] <squashable6> 🍕 moritz++ wrote a comment on “zavolaj seems outdated f…”: https://github.com/perl6/doc/issues/828#issuecomment-326762623

[18:44] *** mr_ron joined
[18:45] <Geth> ¦ doc: zakame++ created pull request #1504: Further improve docs for methods + self

[18:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1504

[18:45] <squashable6> 🍕 zakame++ opened pull request “Further improve docs for methods + self”: https://github.com/perl6/doc/pull/1504

[18:47] <squashable6> 🍕 zakame++ wrote a comment on “Further improve docs for methods + self”: https://github.com/perl6/doc/pull/1504#issuecomment-326762780

[18:50] *** emeric1 joined
[18:52] *** mr-foobar left
[18:53] *** emeric left
[18:53] *** emeric1 is now known as emeric

[18:53] <squashable6> 🍕 AlexDaniel++ opened issue “Keep .dot files”: https://github.com/perl6/doc/issues/1505

[18:53] <squashable6> 🍕 AlexDaniel++ labeled issue “Keep .dot files”: https://github.com/perl6/doc/issues/1505

[18:53] *** mr-foobar joined
[18:54] <AlexDaniel> squashable6: status

[18:54] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in ≈17 hours

[18:54] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/361891499422d78cae90730e3f0524c3

[18:55] *** nadim joined
[18:56] <Geth> ¦ doc/master: 6 commits pushed by (Will "Coke" Coleda)++

[18:56] <Geth> ¦ doc/master: 30e644cdd4 | Change phrasing

[18:56] <Geth> ¦ doc/master: 03e1148779 | learn new words

[18:56] <Geth> ¦ doc/master: 4fabc9b874 | fix typo

[18:56] <Geth> ¦ doc/master: d6eca29fb0 | remove duplicate use

[18:56] <Geth> ¦ doc/master: 74349a36d8 | remove trailing whitespace

[18:56] <Geth> ¦ doc/master: 5bf3e17747 | use a word we already spellcheck

[18:56] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/c052c47b8b...5bf3e17747

[18:57] <Geth> ¦ doc: 9bd3489db0 | (Will "Coke" Coleda)++ | xt/code.pws

[18:57] <Geth> ¦ doc: learn new word

[18:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9bd3489db0

[18:59] *** nadim left
[18:59] *** nadim joined
[19:00] *** darutoko left
[19:04] *** lancew left
[19:11] <Geth> ¦ doc: c98a4e22c1 | (Zak B. Elep)++ (committed by Moritz Lenz) | doc/Language/objects.pod6

[19:11] <Geth> ¦ doc: Further improve docs for methods + self

[19:11] <Geth> ¦ doc: 

[19:11] <Geth> ¦ doc: - Make discussion on class/instance methods into its own Section

[19:11] <Geth> ¦ doc: - Add example code for `self` especially to illustrate its behavior with

[19:11] <Geth> ¦ doc:   different invocants

[19:11] <Geth> ¦ doc: 

[19:11] <squashable6> 🍕 moritz++ merged pull request “Further improve docs for methods + self”: https://github.com/perl6/doc/pull/1504

[19:11] <Geth> ¦ doc: Thanks to @ronaldxs for further comments :+1:

[19:11] <Geth> ¦ doc: 

[19:12] <Geth> ¦ doc: References #1121 (hopefully fixes too :joy_cat:)

[19:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c98a4e22c1

[19:13] *** okl joined
[19:17] <squashable6> 🍕 zakame++ wrote a comment on “Further improve docs for methods + self”: https://github.com/perl6/doc/pull/1504#issuecomment-326764239

[19:17] *** okl left
[19:22] *** mr-foobar left
[19:23] <[Coke]> ff

[19:23] <moritz> fast forward?

[19:23] <yoleaux> 1 Sep 2017 19:51Z <jdv79> moritz: sup with the logs and unicode?

[19:24] <moritz> .tell jdv79 not much :/

[19:24] <yoleaux> moritz: I'll pass your message to jdv79.

[19:27] <[Coke]> . 

[19:30] *** mr-foobar joined
[19:35] *** emeric left
[19:38] *** Herby__ joined
[19:38] <Herby__> o/

[19:39] *** DickBastard joined
[19:39] <moritz> \o Herby__ 

[19:40] <AlexDaniel> buggable: pizza Herby__

[19:40] <buggable> Herby__, enjoy this slice of Golden Chicken Delight pizza, my friend! Yummy 🍕

[19:40] <Herby__> \o/

[19:40] <Herby__> As a novice, how can I help with this SQUASHathon?

[19:40] <Geth> ¦ doc: d07e6c7bdd | (Will "Coke" Coleda)++ | doc/Language/nativecall.pod6

[19:40] <Geth> ¦ doc: avoid overeager "this is a method" example test

[19:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d07e6c7bdd

[19:41] <[Coke]> Herby__: welcome aboard.

[19:42] <moritz> Herby__: go to https://github.com/perl6/doc/issues and look for an issue that doesn't sound scary

[19:42] <moritz> Herby__: and then ask questions here if stuff is unclear

[19:42] <Herby__> kk

[19:42] <moritz> and try to work on it

[19:43] <AlexDaniel> Herby__: feel free to leave a comment on any issue you don't understand. Very often things look scary, but when you actually ask what is required it turns out that it is very simple

[19:43] <[Coke]> there are some tags that might help: <LHF>, <new>

[19:43] <Herby__> lhf?

[19:43] <moritz> low-hanging fruit

[19:43] <Herby__> ah ok

[19:43] <AlexDaniel> also [Hacktoberfest] and [search], maybe

[19:44] *** zakharyas joined
[19:44] <AlexDaniel> (some [search] issues simply ask to add “X<foo>” somewhere )

[19:45] <[Coke]> you could also try to check out the doc source locally and see if you could do a build or run 'make test' (which will help the next time you want to doc/test something)

[19:45] *** Skarsnik joined
[19:47] *** gdonald joined
[19:47] *** Cabanossi left
[19:49] *** Cabanossi joined
[19:49] <timotimo> https://twitter.com/loltimo/status/904038390131286025 - i made a perl6 thing with SDL2::Raw again

[19:49] <timotimo> https://twitter.com/loltimo/status/904058942078246915 - and another

[19:49] <DickBastard> Hello, sorry if I ask a naive questions, I'm just a C++ devel newbie in Perl6, can you assign a subroutine to a method?

[19:50] <DickBastard> like assigning a std::function to a virtual method in C

[19:50] <Skarsnik> not sure to understand your question

[19:50] <Skarsnik> timotimo, fun :)

[19:50] <DickBastard> my &code = { say "ciao" }

[19:50] <timotimo> <3

[19:51] <DickBastard> my $ciao = class ba { method go = &code } # or something similar

[19:52] <Skarsnik> since you can add method to class on the fly I don't see the point

[19:52] <DickBastard> my $ciao = class ba { method go { code } } # you mean?

[19:53] *** gdonald left
[19:53] <DickBastard> code is executed when you call go, right?

[19:54] *** Guest41359 joined
[19:54] <DickBastard> it works!

[19:55] <Guest41359> rindolf, hi i was searching for you :)

[19:55] <Skarsnik> you can probably assign to an attribute the method will call 

[19:55] <moritz> DickBastard: there's also a way to install code directly as a method

[19:55] *** Guest41359 is now known as rrh

[19:55] *** rrh is now known as rrrh

[19:56] <AlexDaniel> ah goddamn graphviz

[19:56] <moritz> m: sub f($x) { say 42 }; class A { }; BEGIN { A.^add_method('g', &f); A.^compose }; A.new.g()

[19:56] <camelia> rakudo-moar 85a97a: OUTPUT: «42␤»

[19:56] <rindolf> rrrh: hi

[19:56] <moritz> m: sub f($x) { say 42 }; class A { A.^add_method('g', &f }; A.new.g()

[19:56] <camelia> rakudo-moar 85a97a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')'␤at <tmp>:1␤------> 3y 42 }; class A { A.^add_method('g', &f 7⏏5}; A.new.g()␤»

[19:56] <moritz> m: sub f($x) { say 42 }; class A { A.^add_method('g', &f) }; A.new.g()

[19:56] <camelia> rakudo-moar 85a97a: OUTPUT: «42␤»

[19:56] <moritz> yes, helps to close those parenthesis :-)

[19:56] <DickBastard> thanks moritz

[19:57] <moritz> you're welcome, DickBastard 

[19:58] <moritz> speaking of the MOP... do we have an accessible way to create aliases for methods?

[19:58] <rindolf> rrrh: how may I help?

[19:59] <rrrh> rindolf, i privated messaged you dont know if you appreciate that but i used to talk to you in the past a lot

[20:00] <moritz> freenode changed rules for private messages; by default you need to be registered with their services to initiate privmsg

[20:00] *** gdonald joined
[20:01] <BooK> so I have this weird question about enums:

[20:01] <AlexDaniel> “Warning: the aspect attribute has been disabled due to implementation flaws - attribute ignored.” oh graphviz…

[20:01] <BooK> m: say Bool.enums; say Order.enums

[20:01] <camelia> rakudo-moar 85a97a: OUTPUT: «{False => 0, True => 1}␤Map.new((:Less(-1),:More(1),:Same(0)))␤»

[20:02] <BooK> which led me to look at the code for Bool, which defines its own enums method, which works differently from the enums method in the Enumeration role

[20:02] <BooK> and so my question is: why?

[20:03] <BooK> or more specifically, why is Bool special?

[20:03] <AlexDaniel> c: all say Bool.enums; say Order.enums

[20:03] *** mr_ron left
[20:03] <committable6> AlexDaniel, MasterDuke: I'm acting stupid on #perl6. Help me.

[20:03] <committable6> AlexDaniel, Sorry kid, that's not my department.

[20:04] <AlexDaniel> /o\

[20:04] <AlexDaniel> c: releases say Bool.enums; say Order.enums

[20:04] <Skarsnik> lol

[20:04] <committable6> AlexDaniel, MasterDuke: I'm acting stupid on #perl6. Help me.

[20:04] <committable6> AlexDaniel, Sorry kid, that's not my department.

[20:04] <BooK> AlexDaniel: are talking to the right bot?

[20:04] <Skarsnik> m: say bool.enum

[20:04] <camelia> rakudo-moar 85a97a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    bool used at line 1␤␤»

[20:04] <AlexDaniel> BooK: yes, but it's broken… investigating now…

[20:05] <Skarsnik> m: use NativeCall;say bool.enum

[20:05] <camelia> rakudo-moar 85a97a: OUTPUT: «No such method 'enum' for invocant of type 'NativeCall::Types::bool'␤  in block <unit> at <tmp> line 1␤␤»

[20:05] *** nowan left
[20:06] <AlexDaniel> BooK: ok, the answer is here: https://gist.github.com/Whateverable/5c60f8862584bf903097d52300ca98b4

[20:07] <AlexDaniel> BooK: so it's not that Bool is extremely special, it's just that the change to Map is a fairly new addition

[20:07] <BooK> oh I see

[20:07] <AlexDaniel> we can take a look at why it was changed

[20:07] <AlexDaniel> bisect: say Order.enums

[20:07] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=85a97ab) because on both starting points the exit code is 0

[20:08] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/e76c7d733b91958459010beb00648dbe

[20:08] <bisectable6> AlexDaniel, (2016-04-05) https://github.com/rakudo/rakudo/commit/6a2ff75a61fdd49b55eec8dcb647a6822dac090b

[20:08] *** nowan joined
[20:08] * moritz loves our bot overlords

[20:08] <BooK> src/core/Bool.pm: Bool.^add_method('enums', my method enums() { self.^enum_values });

[20:08] <BooK> src/core/Enumeration.pm: method enums() { self.^enum_values.Map }

[20:08] <AlexDaniel> this is the wrong commit

[20:08] <BooK> I was wondering why Bool did not simply do the Enumeration role

[20:09] <AlexDaniel> bisect: old=6a2ff75a61 say Order.enums

[20:09] <bisectable6> AlexDaniel, Bisecting by output (old=6a2ff75 new=85a97ab) because on both starting points the exit code is 0

[20:09] <moritz> BooK: probably bootstrapping issues

[20:09] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/612d31d67faf80a269fc26a9644673f1

[20:09] <bisectable6> AlexDaniel, (2016-05-13) https://github.com/rakudo/rakudo/commit/d31495ff87ef94fdcb84328bd8ef808f10839d54

[20:09] <AlexDaniel> so this points to RT #128138

[20:09] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=128138

[20:09] <BooK> moritz: so the fix is to update Bool's version of enum?

[20:09] <BooK> enums

[20:09] <Skarsnik> m: use NativeCall;say bool.enums

[20:09] <camelia> rakudo-moar 85a97a: OUTPUT: «No such method 'enums' for invocant of type 'NativeCall::Types::bool'␤  in block <unit> at <tmp> line 1␤␤»

[20:09] <moritz> frankly I was surprised that somebody managed to turn Bool into an enum at all :-)

[20:10] <Geth> ¦ doc: jstuder-gh++ created pull request #1506: Modify Proxy Example To More Closely Match Text

[20:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1506

[20:10] <squashable6> 🍕 jstuder-gh++ opened pull request “Modify Proxy Example To More Closely Match Text”: https://github.com/perl6/doc/pull/1506

[20:10] <squashable6> 🍕🍕🍕  First contribution by jstuder-gh++! ♥

[20:10] <BooK> moritz: when I saw it was, it kinda made sense

[20:10] <BooK> it

[20:10] <AlexDaniel> BooK: IMO you should create a ticket with this information

[20:10] <BooK> or a patch!

[20:10] <AlexDaniel> or that, yes.

[20:10] <moritz> BooK: yes. Or try to make Bool do the enumeration role; maybe it's easy after all

[20:10] <DickBastard> Another dumb question: you can do this

[20:10] <DickBastard> sub f($x) { say 42 }; module hello { class A { A.^add_method('g', &f) }; }; hello::A.new.g

[20:11] <BooK> moritz: to do that I first need to properly set up my environment to be actually able to run roast and check that nothing breaks

[20:11] <DickBastard> but this fail in weird ways:

[20:11] <DickBastard> sub f($x) { say 42 }; my $obj = module { class A { A.^add_method('g', &f) }; }; $obj::A.new.g

[20:11] <DickBastard> m: sub f($x) { say 42 }; my $obj = module { class A { A.^add_method('g', &f) }; }; $obj::A.new.g

[20:11] <camelia> rakudo-moar 85a97a: OUTPUT: «No such method 'g' for invocant of type 'Any'␤  in block <unit> at <tmp> line 1␤␤»

[20:12] *** committable6 left
[20:12] *** committable6 joined
[20:12] *** ChanServ sets mode: +v committable6

[20:12] * AlexDaniel fixed committable6

[20:12] <DickBastard> how do you declare a module in the local scope?

[20:12] *** mr_ron joined
[20:13] <BooK> moritz: I also had this issue with enums, when I was trying to write a man page for EnumHOW:

[20:13] <BooK> m: enum Foo < a b c >; Foo.^add_enum_value( d => 3);  Foo.^enum_values.say

[20:13] <camelia> rakudo-moar 85a97a: OUTPUT: «Too few positionals passed; expected 3 arguments but got 2␤  in block <unit> at <tmp> line 1␤␤»

[20:13] <moritz> DickBastard: my module A { ... }

[20:13] <Geth> ¦ doc: c5776c1b11 | (Jeremy Studer)++ | doc/Type/Proxy.pod6

[20:13] <Geth> ¦ doc: Modify Proxy Example To More Closely Match Text

[20:13] <Geth> ¦ doc: 

[20:13] <Geth> ¦ doc: The accompanying text seems to indicate that the modification of the

[20:13] <Geth> ¦ doc: stored value would occur at retrieval.

[20:13] <Geth> ¦ doc: 

[20:13] <Geth> ¦ doc: Text-'To create a container that returns twice of what was stored in it'

[20:13] <squashable6> 🍕 AlexDaniel++ merged pull request “Modify Proxy Example To More Closely Match Text”: https://github.com/perl6/doc/pull/1506

[20:13] <Geth> ¦ doc: 

[20:13] <Geth> ¦ doc: The example showcases the capabilities of Proxy in the same way, but

[20:13] <Geth> ¦ doc: hopefully is a bit more clear.

[20:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c5776c1b11

[20:13] <Geth> ¦ doc: 5495e1479f | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | doc/Type/Proxy.pod6

[20:13] <Geth> ¦ doc: Merge pull request #1506 from jstuder-gh/master

[20:13] <Geth> ¦ doc: 

[20:13] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Modify Proxy Example To More Closely Match Text”: https://github.com/perl6/doc/pull/1506#issuecomment-326767030

[20:13] <Geth> ¦ doc: Modify Proxy Example To More Closely Match Text

[20:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5495e1479f

[20:13] <moritz> DickBastard: and your example doesn't work because $obj::A looks a variable A in namespace "obj"

[20:14] <moritz> m: my $m = module { class A { } }; $m.WHO<A>

[20:14] <camelia> rakudo-moar 85a97a: ( no output )

[20:14] <DickBastard> moritz, great

[20:14] <moritz> m: my $m = module { class A { } }; say $m.WHO<A>

[20:14] <DickBastard> m: sub f($x) { say 42 }; my module hello { class A { A.^add_method('g', &f) }; }; hello::A.new.g

[20:14] <camelia> rakudo-moar 85a97a: OUTPUT: «(A)␤»

[20:14] <camelia> rakudo-moar 85a97a: OUTPUT: «42␤»

[20:14] <moritz> m: my $m = module { class A { } }; say $m::<A>

[20:14] <camelia> rakudo-moar 85a97a: OUTPUT: «(Any)␤»

[20:14] <squashable6> 🍕 AlexDaniel++ edited pull request “Attempt to document most of `Any` methods”: https://github.com/perl6/doc/pull/1503

[20:15] <moritz> DickBastard: the example above with .WHO<A> shows how you can acccess an element of an anonymous namespace

[20:17] <DickBastard> m: sub f($x) { say 42 }; my $hello = module { class A { A.^add_method('g', &f) }; }; $hello.WHO<A>.new.g # yea it works

[20:17] <camelia> rakudo-moar 85a97a: OUTPUT: «42␤»

[20:17] *** andrzejku left
[20:18] <squashable6> 🍕 AlexDaniel++ opened issue “Definition for Any.collate and Any.cache”: https://github.com/perl6/doc/issues/1507

[20:18] <squashable6> 🍕 AlexDaniel++ labeled issue “Definition for Any.collate and Any.cache”: https://github.com/perl6/doc/issues/1507

[20:18] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Attempt to document most of `Any` methods”: https://github.com/perl6/doc/pull/1503#issuecomment-326767242

[20:18] <squashable6> 🍕 ronaldxs++ wrote a comment on “Document use of method i…”: https://github.com/perl6/doc/issues/1121#issuecomment-326767244

[20:18] <squashable6> 🍕 AlexDaniel++ edited pull request “Attempt to document most of `Any` methods”: https://github.com/perl6/doc/pull/1503

[20:18] *** grondilu_ left
[20:19] <DickBastard> it would be supercool if there was a way to save the module '$hello' in a file, for loading it in another run. Is there a way? it would save me some evals in my hacking

[20:21] *** mr-fooba_ joined
[20:22] *** mr-foobar left
[20:23] <BooK> DickBastard: I guess we just need someone who can write Perl6 from an AST :-)

[20:23] <BooK> sorry, who can write code that can...

[20:23] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Unreadable type graphs”: https://github.com/perl6/doc/issues/246#issuecomment-326767433

[20:23] <moritz> DickBastard: you can write the source code for the module to a file, and EVAL (or EVALFILE) it

[20:24] <moritz> DickBastard: but dumping the whole module from a reference doesn't work the way you likely want it to work :-)

[20:24] <DickBastard> moritz yes that works, I was wondering if there was some magic already implemented for precompilation

[20:24] <moritz> DickBastard: require, maybe

[20:25] <moritz> time for sleep here, see ya

[20:26] <AlexDaniel> buggable: pizza moritz

[20:26] <buggable> moritz, enjoy this slice of Peppy Paneer pizza, my friend! Yummy 🍕

[20:27] <DickBastard> night! thanks

[20:28] *** Aaronepower joined
[20:36] *** den joined
[20:43] *** Garland left
[20:44] *** astj joined
[20:47] *** Cabanossi left
[20:49] <DickBastard> BooK while that would be a nice feature to have, my intuition is that it is not needed, and that inside the compiler there is already this functionality

[20:49] *** astj left
[20:49] *** yqt left
[20:49] *** Cabanossi joined
[20:49] <DickBastard> since it needs to save bytecode at some point

[20:49] *** Klofkac joined
[20:50] <DickBastard> only few programming languages, on the other end, offer this functionality

[20:50] <Klofkac> Hello, I have a question. When I try to make an operator in interactive mode, it doesn't seem to register when I later try to use the operator. Is this a bug?

[20:51] <[Coke]> REPL cheats. if you try to use it later in the same line, it'll be there.

[20:52] <[Coke]> so a known issue, but the general workaround is not to use interactive mode.

[20:53] <Klofkac> Oh, okay. Thanks for answer.

[20:53] * BooK feels that there's a better way to write this:

[20:53] <BooK> m: say Bool.^methods.grep( { .name eq "pick"},:v)».candidates».signature

[20:53] <camelia> rakudo-moar 85a97a: OUTPUT: «(((Bool:U $: *%_) (Bool:U $: $n, *%_)))␤»

[20:54] *** wamba left
[20:55] <squashable6> 🍕 coke++ deleted a comment on “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189#issuecomment-326751527

[20:55] <squashable6> 🍕 coke++ deleted a comment on “Unify differences between `multi` and `multi sub`”: https://github.com/perl6/doc/issues/1189#issuecomment-326751584

[20:56] <den> m: my $meth = Bool.^find_method: "pick"; say $meth.^name #BooK

[20:56] <camelia> rakudo-moar 85a97a: OUTPUT: «Method␤»

[20:57] <Juerd> m: say Bool.^find_method('pick').candidates».signature

[20:57] <camelia> rakudo-moar 85a97a: OUTPUT: «((Bool:U $: *%_) (Bool:U $: $n, *%_))␤»

[20:59] <BooK> den, Juerd: thanks

[20:59] *** nadim left
[20:59] <[Coke]> Klofkac: ideally we'll make that work some day.

[20:59] <BooK> and now compare with:

[20:59] <BooK> m: say Order.^find_method('pick').candidates».signature

[20:59] <camelia> rakudo-moar 85a97a: OUTPUT: «(($: *%_) ($: $n, *%_) (Order:U $: *%_) (Order:U $: \n, *%_) (Order:D $: *@pos, *%_))␤»

[21:00] <Juerd> Compare?

[21:00] <BooK> Bool and Order both behave like enums

[21:00] <BooK> except Bool does not do the Enumeration role, and seems to miss some stuff

[21:01] *** nadim joined
[21:01] *** Skarsnik left
[21:01] <BooK> at this stage, the best explanation to everything I say that doesn't make sense is that I don't know anything

[21:02] <den> m: my Enumeration $enum = Order; $enum.^mro.say; $enum = Bool; $enum.^mro.say

[21:02] <camelia> rakudo-moar 85a97a: OUTPUT: «((Order) (Int) (Cool) (Any) (Mu))␤Type check failed in assignment to $enum; expected Enumeration but got Bool (Bool)␤  in block <unit> at <tmp> line 1␤␤»

[21:03] <Juerd> Bool is declared in bootstrap, Order is pure Perl 6

[21:03] <Juerd> See src/core/Bool.pm and src/core/Order.pm

[21:04] <den> Right, but it's possible to add more things later, I think it's just NIY for Bool.

[21:04] <BooK> yes, I know that. I was wondering if Bool shouldn't be made more like a normal Perl 6 enum

[21:04] <BooK> NIY? Not In Yet?

[21:04] <Juerd> NYI :)

[21:05] <den> Not Implemented Yet.

[21:05] <BooK> In-plemented :-)

[21:05] <Juerd> BooK: Sounds like a good idea, but I have no idea.

[21:06] <BooK> moritz said something like that not too long ago: https://irclog.perlgeek.de/perl6/2017-09-02#i_15107070

[21:07] <BooK> I guess now is the time when I should just try it and see :-)

[21:07] <nine> That could actually be a quite simple patch

[21:08] <nine> I just didn't know about that role when I turned Bool into an enum

[21:08] <den> https://github.com/rakudo/rakudo/blob/nom/src/core/Code.pm -> Code is also declared in Bootstrap, yet this file adds to it later, so you can use it as an example of how to do it

[21:09] *** grondilu joined
[21:09] * grondilu marks http://rosettacode.org/wiki/Fast_Fourier_transform#Perl_6 as broken :(

[21:09] <grondilu> "P6opaque: invalid native access attribute '$!re' in type Complex for kind num64"

[21:11] <grondilu> m: say cis(tau)

[21:11] <camelia> rakudo-moar 85a97a: OUTPUT: «1-2.44929359829471e-16i␤»

[21:11] <grondilu> ^this fails on my machine

[21:11] *** Garland_g[m] joined
[21:11] <grondilu> $ perl6 --version

[21:11] <nine> No need to look at Code: https://github.com/rakudo/rakudo/blob/nom/src/core/Bool.pm

[21:11] *** zakame left
[21:11] <grondilu> This is Rakudo version 2017.08-62-g85a97ab3d built on MoarVM version 2017.08.1-52-gf59ac65d9

[21:12] <grondilu> implementing Perl 6.c.

[21:12] <BooK> nine: I'm kind of looking for a knowledgeable person in Perl6 to pair with me on small stuff, so that I can learn faster, and in small, focused chunks (two hours max)

[21:13] <BooK> recently, I've been doing a lot of pairing over vnc + some voice transmission system (phone, mumble, other)

[21:13] *** den is now known as raschipi

[21:13] <nine> BooK: it's a little late today for a two hour session, but I plan on doing some more coding tomorrow and would be quite happy to help you get into our code base :)

[21:14] <BooK> I wasn't meaning tonight either :-)

[21:14] <nine> I guessed so :)

[21:14] <grondilu> m: say Complex.new(tau.cos, tau.sin);

[21:14] <camelia> rakudo-moar 85a97a: OUTPUT: «1-2.44929359829471e-16i␤»

[21:14] <grondilu> ^this also fails on my machine

[21:15] <BooK> nine: I'll in an Amsterdam hotel room Thursday evening, maybe that's a better time?

[21:15] *** labster joined
[21:15] <nine> BooK: nothing on my schedule for Thursday evening so far :)

[21:16] <grondilu> m: say 1i # even this fails :/

[21:16] <camelia> rakudo-moar 85a97a: OUTPUT: «0+1i␤»

[21:16] <grondilu> m: 1i**2 and this

[21:16] <camelia> rakudo-moar 85a97a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    this used at line 1␤␤»

[21:17] <BooK> nine: discussing the details in private

[21:18] <DickBastard> could anybody point me to the documentation of CTXSAVE please?

[21:19] <nine> DickBastard: that would need someone to write it :/ You could be the one :)

[21:19] <nine> DickBastard: what do you need to know?

[21:19] <DickBastard> hi nine

[21:20] <DickBastard> I am trying to understand your code in CompUnit/Loader.pm

[21:20] *** lichtkind left
[21:20] <DickBastard> the mechanism by which you compile a source file and store it in the appropriate place

[21:20] <DickBastard> is CTXSAVE connected somehow to compilation?

[21:21] <nine> DickBastard: yes, it's supposed to be an object with a ctxsave() method (you'll find that in CompUnit::Handle).

[21:22] <nine> DickBastard: it's called by the main line code of the compilation unit and stores the mainline's context

[21:22] <grondilu> oh sorry guys, that was due to a local modif I made on Complex.pm

[21:22] <nine> DickBastard: it's they way we can get at the symbols defined in the compilation unit, like it's GLOBAL

[21:23] *** Klofkac left
[21:23] <nine> DickBastard: took me weeks to piece this together from the code. So if you could add that to some documenation, you may save someone a lot of time. It's really pure chance that I read your question. I rarely read #perl6 these days...

[21:26] <DickBastard> nine, I will try to understand it. If I will get something out of it I will document :)

[21:31] <AlexDaniel> grondilu: ok, so let's do something about it

[21:31] <AlexDaniel> you say 2017.08-62-g85a97ab3d

[21:31] <AlexDaniel> c: 2017.08-62-g85a97ab3d say cis(tau)

[21:31] <committable6> AlexDaniel, ¦2017.08-62-g85a97ab3d: «1-2.44929359829471e-16i»

[21:32] <AlexDaniel> c: 2017.08-62-g85a97ab3d say 1i

[21:32] <committable6> AlexDaniel, ¦2017.08-62-g85a97ab3d: «0+1i»

[21:32] <AlexDaniel> c: 2017.08-62-g85a97ab3d 1i**2

[21:32] <committable6> AlexDaniel, ¦2017.08-62-g85a97ab3d: «WARNINGS for /tmp/oDR7dPlEXz:␤Useless use of "**" in expression "i**2" in sink context (line 1)»

[21:32] <AlexDaniel> c: 2017.08-62-g85a97ab3d say 1i**2

[21:32] <committable6> AlexDaniel, ¦2017.08-62-g85a97ab3d: «-1+1.22464679914735e-16i»

[21:32] <AlexDaniel> grondilu: sooo… what's your setup? 32bit or 64bit?

[21:33] <nine> DickBastard: in other words: the compiler adds a $*CTXSAVE.ctxsave; to a source file's code. CompUnit::Handle::ctxsave then uses nqp::caller to get into the calling code and nqp::ctx() to grab the lexical context and stores that in $!module_ctx so we can access EXPORT and GLOBALish.

[21:34] *** travis-ci joined
[21:34] <travis-ci> Doc build failed. Will "Coke" Coleda 'Merge branch 'master' into coke/multi'

[21:34] <travis-ci> https://travis-ci.org/perl6/doc/builds/271252344 https://github.com/perl6/doc/compare/028f2bbcc929...0d7897a0cd63

[21:34] *** travis-ci left
[21:34] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[21:34] <DickBastard> nine, things are getting more clear

[21:35] <nine> DickBastard: :)

[21:35] <AlexDaniel> I guess https://files.progarm.org/graph.svg is better than https://docs.perl6.org/images/type-graph-Metamodel%3A%3AMethodContainer.svg ?

[21:36] <AlexDaniel> I'm still not satisfied though

[21:37] <grondilu> AlexDaniel: as I wrote, nevermind : my Complex.pm file was out-of-sync

[21:37] <AlexDaniel> grondilu: oh, didn't backlog as far, sorry

[21:37] <AlexDaniel> buggable: pizza grondilu

[21:37] <buggable> grondilu, enjoy this slice of Four Cheese pizza, my friend! Yummy 🍕

[21:37] <grondilu> (kinf of whished --version had warned me about that, though)

[21:38] * grondilu undoes the "broken" mark on RC

[21:39] <grondilu> do you guys by any chance know an efficient algorithm to compress "sparse vectors"?

[21:41] *** ramortegui joined
[21:42] <squashable6> 🍕 jnthn++ wrote a comment on “zavolaj seems outdated f…”: https://github.com/perl6/doc/issues/828#issuecomment-326770827

[21:42] <squashable6> 🍕🍕🍕  First contribution by jnthn++! ♥

[21:42] <grondilu> like turning [0, 1, 2, 0, 0, 0, 0] into [1 => 1, 2 => 2] but Vector(7)

[21:45] <AlexDaniel> .pizza jnthn

[21:45] <AlexDaniel> buggable: pizza jnthn

[21:45] <buggable> jnthn, enjoy this slice of Margherita pizza, my friend! Yummy 🍕

[21:45] <jnthn> m: say [0, 1, 2, 0, 0, 0, 0].pairs.grep(*.value)

[21:45] <camelia> rakudo-moar 85a97a: OUTPUT: «(1 => 1 2 => 2)␤»

[21:45] <jnthn> That's O(n) I guess... :)

[21:45] <jnthn> Mmm...margherita :)

[21:46] *** Cabanossi left
[21:49] *** Cabanossi joined
[21:49] *** rindolf left
[21:51] <grondilu> yeah now that I wrote it, I realize it's not possible to do better

[21:53] <AlexDaniel> ooooooooh I know what I can try

[21:53] * AlexDaniel is having fun with graphviz

[21:56] *** sena_kun left
[21:57] <BooK> AlexDaniel: maybe with twopi? your latest attempt looked circular-ish

[21:57] *** rindolf joined
[21:58] <AlexDaniel> BooK: yep, that's what twopi did

[21:58] <BooK> ah ok

[21:58] <AlexDaniel> oh wait, sorry, that was neato

[21:58] <AlexDaniel> twopi looked horrible with default settings, let's see if I can make it better…

[22:00] <AlexDaniel> BooK: the problem countless number of people are having is that if there are too many nodes at the same rank, the graph looks unreadably wide

[22:00] <AlexDaniel> BooK: instead of implementing some sort of solution to this they created a post-processor called “unflatten”

[22:01] <BooK> the problem with making stuff look nice with graphviz is that you have to manually add exceptions

[22:01] <AlexDaniel> which is, like, a separate binary

[22:01] <BooK> like, force stuff to be shown on the same rank, or stuff like that

[22:01] <AlexDaniel> yeah

[22:02] <BooK> and subgraphs, and stuff

[22:04] *** DickBastard left
[22:09] <BooK> I see you can pick the center with twopi

[22:09] <BooK> I'd go for Any :-)

[22:10] *** Herby__ left
[22:10] <BooK> I see a circo command for layouts, I won't what that produces

[22:12] *** ab5tract joined
[22:12] <AlexDaniel> BooK: well, that's twopi: https://files.progarm.org/grapho.svg

[22:12] <AlexDaniel> BooK: and that's circo: https://files.progarm.org/graphH.svg

[22:13] <AlexDaniel> BooK: wanna play with it? I can give you the dot file

[22:14] *** astj joined
[22:16] *** setty1 left
[22:17] <BooK> AlexDaniel: sure

[22:17] *** rindolf left
[22:18] <BooK> what's the meaning of blue vs black ? role vs class ?

[22:18] * BooK checks if graphviz is installed here

[22:18] *** astj left
[22:21] *** rrrh left
[22:21] * AlexDaniel recovers from a little disaster when his image viewer decided to crap out on some svg file

[22:22] <AlexDaniel> BooK: https://files.progarm.org/images.tar.gz

[22:24] <AlexDaniel> BooK: the .dot input is auto-generated during the doc build. I'm currently playing with dot files directly, but it's ok to change the generation itself too

[22:24] <BooK> which one was the one you played with?

[22:24] <AlexDaniel> BooK: type-graph-Metamodel::MethodContainer.svg.dot

[22:25] <AlexDaniel> BooK: fwiw it's this doc issue: https://github.com/perl6/doc/issues/246

[22:28] <timotimo> did you know that the graphviz commands can also output .dot again but with positions of nodes and stuff for edges in the attributes?

[22:28] *** zakharyas left
[22:30] <AlexDaniel> timotimo: yeah, but how would that help exactly? I tried piping dot into neato in a hope that it will improve the graph a bit, but no success so far

[22:33] <timotimo> not sure if it could help at all, tbh

[22:33] <BooK> AlexDaniel: adding root="Any"; ranksep=4; to the .svg.dot file made something not too horrible

[22:33] <timotimo> i think I'll head toward the hotel

[22:34] <AlexDaniel> BooK: but it's still very wide, no?

[22:34] <BooK> actully, putting Mu at the center looks better

[22:35] <AlexDaniel> maybe all we need is rankdir=LR; ranksep=4;

[22:36] <AlexDaniel> if it's too tall, so what. You can scroll a little bit, right?

[22:39] <BooK> not that wide, there's like 3 layers

[22:40] <AlexDaniel> BooK: oh? Can you show it?

[22:42] <BooK> http://klonk.bruhat.net/graphviz.png

[22:43] *** mr_ron left
[22:43] <AlexDaniel> right, with twopi

[22:43] <BooK> yes

[22:43] <BooK> forcing the center to Mu

[22:43] <BooK> and ranksep=2.5 I think

[22:44] <raschipi> I think Book's version is t

[22:44] <AlexDaniel> splines help also https://files.progarm.org/graphI.svg

[22:44] <raschipi> nice

[22:45] <raschipi> AlexDaniel: Your is hard to follow, the lines get confused when they are near each other

[22:45] <AlexDaniel> one second :)

[22:45] <BooK> AlexDaniel's one has Any in the center

[22:46] <raschipi> I don't perceive much difference between them in the center.

[22:47] <AlexDaniel> https://files.progarm.org/graphG.svg ?

[22:47] *** Cabanossi left
[22:48] <BooK> AlexDaniel: nice, but I think the same effect could be achieved with making them bold when hovering

[22:49] *** Cabanossi joined
[22:49] <raschipi> The colors are nice because they eliminate the need to follow the lines completely, bold wouldn't.

[22:49] <BooK> https://widgets.stratopan.com/wheel?q=XML-Compile-1.58&runtime=1&fs=1 # like this does (not sure if it's pure svg)

[22:50] <BooK> colors are not always user-friendly

[22:50] <BooK> interactive bold helps focus on one thing at a time

[22:51] <BooK> but that's if it's possible to have some interaction (I know png can't, not sure about svg)

[22:51] <BooK> nevermind, the wheel I linked to is made in js

[22:52] <AlexDaniel> you can do that with css and svgs I believe

[22:52] <raschipi> And can it be generated with dot

[22:55] *** Zoffix joined
[22:55] *** pmurias left
[22:56] <BooK> or postprocessed into the resulting svg

[22:57] <AlexDaniel> you just add a css class to whatever you want, then you style it using onhover

[23:02] <raschipi> Can graphviz generate svg with css classes? Is this how it would work?

[23:03] <AlexDaniel> yeah

[23:03] *** mr_ron joined
[23:04] *** nadim left
[23:05] <AlexDaniel> although now I'm no longer sure… I remember doing that somehow, but googling doesn't give anything helpful. Well, maybe this: http://bl.ocks.org/timelyportfolio/7a87f60839cb9c2a1b3d

[23:09] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Unreadable type graphs”: https://github.com/perl6/doc/issues/246#issuecomment-326774155

[23:11] <squashable6> 🍕 gfldex++ opened issue “better example in Iterator useful”: https://github.com/perl6/doc/issues/1508

[23:12] *** Zoffix left
[23:14] <squashable6> 🍕 gfldex++ edited issue “better example in Iterator useful”: https://github.com/perl6/doc/issues/1508

[23:22] <Geth> ¦ doc: gfldex++ created pull request #1509: better example in Iterator, closes #1508

[23:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1509

[23:22] <squashable6> 🍕 gfldex++ opened pull request “better example in Iterator, closes #1508”: https://github.com/perl6/doc/pull/1509

[23:24] <gfldex> #1508 is a reply to https://stackoverflow.com/questions/45844816/how-can-i-idiomatically-ignore-undefined-array-elements-or-avoid-assigning-them

[23:27] <squashable6> 🍕 jnthn++ wrote a comment on “better example in Iterator useful”: https://github.com/perl6/doc/issues/1508#issuecomment-326774764

[23:30] <squashable6> 🍕 gfldex++ edited issue “better example in Iterator useful”: https://github.com/perl6/doc/issues/1508

[23:31] <squashable6> 🍕 gfldex++ wrote a comment on “better example in Iterator useful”: https://github.com/perl6/doc/issues/1508#issuecomment-326774893

[23:31] <squashable6> 🍕 gfldex++ synchronize pull request “better example in Iterator, closes #1508”: https://github.com/perl6/doc/pull/1509

[23:32] <squashable6> 🍕 gfldex++ wrote a comment on “better example in Iterator, closes #1508”: https://github.com/perl6/doc/pull/1509#issuecomment-326774953

[23:35] <squashable6> 🍕 gfldex++ edited issue “better example in Iterator useful”: https://github.com/perl6/doc/issues/1508

[23:35] <squashable6> 🍕 gfldex++ synchronize pull request “better example in Iterator, closes #1508”: https://github.com/perl6/doc/pull/1509

[23:36] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Unreadable type graphs”: https://github.com/perl6/doc/issues/246#issuecomment-326775077

[23:37] <squashable6> 🍕 AlexDaniel++ self-unassigned issue “Unreadable type graphs”: https://github.com/perl6/doc/issues/246

[23:37] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Unreadable type graphs”: https://github.com/perl6/doc/issues/246#issuecomment-326775100

[23:38] *** gdonald left
[23:40] *** Guest69863 joined
[23:41] <AlexDaniel> squashable6: status

[23:41] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in ≈12 hours

[23:41] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/bb5dbc74e8ff1a9fdd07eb912b1cd25f

[23:41] *** espadrine left
[23:44] *** Guest69863 left
[23:44] * grondilu discovers the :Tabularize on Vim.  Is happy.

[23:44] <grondilu> *command

[23:48] <raschipi> grondilu: do you have any extensions? My Vim doesn't have a tabularize ex command.

[23:48] <Geth> ¦ doc: b8723fb8b2 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Proc/Async.pod6

[23:48] <Geth> ¦ doc: Add a note for $proc.kill

[23:48] <Geth> ¦ doc: 

[23:48] <Geth> ¦ doc: SIGHUP is likely not what most people want. Or maybe it is…

[23:48] <Geth> ¦ doc: See this discussion: https://irclog.perlgeek.de/perl6/2017-09-02#i_15104886

[23:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b8723fb8b2

[23:49] <squashable6> 🍕 AlexDaniel++ closed issue “show how to get the exit code out of Proc::Async”: https://github.com/perl6/doc/issues/1465

[23:49] <squashable6> 🍕 AlexDaniel++ wrote a comment on “show how to get the exit code out of Proc::Async”: https://github.com/perl6/doc/issues/1465#issuecomment-326775450

[23:53] <squashable6> 🍕 AlexDaniel++ wrote a comment on “nativecast is not documented”: https://github.com/perl6/doc/issues/537#issuecomment-326775556

[23:53] <grondilu> raschipi: yes it's an extension indeed.  I just forgot I had installed it :P

[23:54] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Native Types Not Documented”: https://github.com/perl6/doc/issues/372#issuecomment-326775597

[23:58] <squashable6> 🍕 AlexDaniel++ opened issue “Table in Pod::Block is broken”: https://github.com/perl6/doc/issues/1510

[23:58] <squashable6> 🍕 AlexDaniel++ labeled issue “Table in Pod::Block is broken”: https://github.com/perl6/doc/issues/1510

