[00:02] <Aggressively_Alp> Like, if you're defining some logic about some data you have, it's nice to be able to bring that up into the top level... I've got to be honest, I don't know what macros will look like for p6. Are the6 compiled in the host machine? Mine? What are the rules?!? That's kinda what I'm curious about. Also yes. Ace language. Too marks. Very fond.

[00:04] <pilne> i've been peeking at perl6 for a while, decided to give this a look, really until somewhat recently i only knew enough perl to mostly grok shell scripts, dipped my toes in 5 for a while, liked it, a bit archaic in a few places, but not without reasons. read some of mr. wall's writings, about perl and perl6, and decided to give perl6 a really solid look

[00:05] <pilne> the last thing to even remotely impress me this much was dart, but it just irks me a bit in a few of the same ways python does

[00:05] <pilne> (i'm a hobbyist dabbler of languages)

[00:05] <pilne> i have exactly 0loc of anything truly productive on this planet lol (:

[00:06] <pilne> but i'm going to give at least some fun things a whirl in perl6 that i've been tossing around in my head.

[00:08] *** Actualeyes joined
[00:10] <pilne> and, is MRO related to the order listed by "is" when using multiple inheritence?

[00:11] <timotimo> perl6 has something called the C3 MRO

[00:12] *** kurahaupo left
[00:12] <timotimo> if that helps you any

[00:13] <pilne> it tells me "no" to the positional thing of the is statements (: which fully answers all the tangents my mind had sprung onto as well (: thank you.

[00:13] *** margeas left
[00:13] *** kurahaupo joined
[00:16] <pilne> waitasecond... i can just use role everywhere instead of class and lose nothing in terms of... getting shit done?

[00:16] <pilne> without having to fret about footshotgunning myself?

[00:19] <pilne> or is there some advantage to is instead of does, that would make refactoring later into proper classes where it makes sense, a better idea?

[00:24] <timotimo> roles are the best tool for code re-use

[00:25] <ugexe> flatten your inheritance tree instead of deepening it

[00:25] <timotimo> yup

[00:25] <timotimo> that also makes adhering to the liskov substitution principle easier

[00:25] <MasterDuke> but right now are there some limitations with using natives and roles?

[00:26] <Aggressively_Alp> As a Scala fanboy myself... Traits/roles 4 lyfe. There are always going to be restrictions when your abstractions don't map neatly, do you have any issues in mind?

[00:26] <MasterDuke> *aren't

[00:28] *** Cabanossi left
[00:28] <pilne> i love a lot about scala, i just always have issues doing things on the jvm scale, everything feels too big for a small fry like myself lol.

[00:30] *** Cabanossi joined
[00:30] *** lookatme joined
[00:30] <lookatme> morning .o/

[00:37] *** mcmillhj_ joined
[00:37] *** mcmillhj joined
[00:42] *** mcmillhj_ left
[00:42] *** mcmillhj left
[00:51] *** nowan_ left
[00:54] *** mcmillhj joined
[00:58] *** mcmillhj left
[01:05] <bioduds> Hello friends. Would someone be interested in see what I wrote?

[01:05] <bioduds> It is the beginning of a Merkle Tree Module 

[01:05] <bioduds> here is the article

[01:05] <bioduds> https://steemit.com/bitcoin/@bitworkers/deep-study-of-bitcoin-code-series-let-s-learn-merkle-trees-why-they-are-intelligent-and-useful-for-bitcoin

[01:05] <bioduds> I would very much appreciate all suggestions to improve the code as I am a newbie in Perl6

[01:06] <bioduds> and want to contribute with a quality module to the repository

[01:08] *** atta joined
[01:13] *** aborazmeh joined
[01:13] *** aborazmeh left
[01:13] *** aborazmeh joined
[01:14] <samcv> bioduds, that sounds pretty neat. i'd be curious to see how it looks, though i'm a bit busy so not sure how much feedback i may or may not be able to give

[01:14] *** Cabanossi left
[01:15] *** Cabanossi joined
[01:22] <bioduds> Thank you samcv! Any help is appreciated and I don't keep bothering. Any suggestions I will go find out how to implement without bothering you.

[01:22] <samcv> no problem :) always good to see enthusiastic new perl 6 people :)

[01:23] <bioduds> perl6 is a killer language, my goal is to build my blockchain project in it

[01:23] <bioduds> long way to go though

[01:23] <bioduds> :D

[01:24] *** AlexDaniel left
[01:25] *** mcmillhj joined
[01:25] *** mcmillhj_ joined
[01:26] <pilne> timotimo=> is this your libtcod bindings attempt i found on github? (roguelikes are something that tickle my fancy frequently)

[01:26] <pilne> (i say attempt because it says not working).

[01:30] *** mcmillhj_ left
[01:30] *** mcmillhj left
[01:36] <pilne> hmmmmm, maybe i'll just abuse the docs of libtcod and try and write it native perl6...

[01:40] *** cdg joined
[01:44] <lookatme> bioduds, I have read your post, learn a lot.

[01:45] *** ilbot3 left
[01:45] *** titsuki joined
[01:47] *** titsuki_ left
[01:47] *** ilbot3 joined
[01:47] *** ChanServ sets mode: +v ilbot3

[01:48] *** aborazmeh left
[01:57] *** Cabanossi left
[02:00] *** Cabanossi joined
[02:03] *** noganex_ joined
[02:04] *** nowan joined
[02:05] <Aggressively_Alp> Biodiesel m

[02:05] *** Aggressively_Alp left
[02:06] *** noganex left
[02:06] *** ParsonsNose joined
[02:08] <BenGoldberg> m: subset my_callback_t of &cb (int32 --> int32);

[02:08] <camelia> rakudo-moar 379ef6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed trait␤at <tmp>:1␤------> 3subset my_callback_t of7⏏5 &cb (int32 --> int32);␤»

[02:09] <BenGoldberg> m: subset my_callback_t of &cb (int32 --> int32) where *;

[02:09] <camelia> rakudo-moar 379ef6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed trait␤at <tmp>:1␤------> 3subset my_callback_t of7⏏5 &cb (int32 --> int32) where *;␤»

[02:09] <BenGoldberg> m: subset my_callback_t of Callable &cb (int32 --> int32) where *;

[02:09] <camelia> rakudo-moar 379ef6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3set my_callback_t of Callable &cb (int327⏏5 --> int32) where *;␤    expecting any of:␤        statement end␤        statement modifier␤        statement modif…»

[02:09] <BenGoldberg> m: subset my_callback_t of Callable &cb (int32);

[02:09] <camelia> rakudo-moar 379ef6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    cb used at line 1␤␤»

[02:12] <ParsonsNose> m: class A { has $!a ; method BUILD(:$!a) { say $!a } ; method shoot { say $!a } }a

[02:12] <camelia> rakudo-moar 379ef6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3{ say $!a } ; method shoot { say $!a } }7⏏5a␤    expecting any of:␤        infix␤        infix stopper␤        s…»

[02:13] <ParsonsNose> Sorry. Keeping hitting enter too early by mistake. Phones suck for writing code.

[02:15] <BenGoldberg> Even laptops suck for writing code -- I often hit enter when I mean to hit shift.

[02:29] *** aborazmeh joined
[02:29] *** aborazmeh left
[02:29] *** aborazmeh joined
[02:39] <BenGoldberg> m: my $x = (1..3).pick; say $x ~~ 1|3;

[02:39] <camelia> rakudo-moar 379ef6: OUTPUT: «True␤»

[02:39] <zengargoyle> curse the laptop where PgUP/PgDn/Home/End take a Fn key on the opposite side of the keyboard.

[02:39] *** cdg left
[02:40] <zengargoyle> my tiny hands just can't stretch that far.

[02:40] <lookatme> m: subset IntS where .signature ~~ :(Int); my IntS $a = sub (Int){};

[02:40] <camelia> rakudo-moar 379ef6: ( no output )

[02:40] <lookatme> m: subset IntS where .signature ~~ :(Int); my IntS $a = sub (Int $x){ say $x;}; $a.(5)

[02:40] <camelia> rakudo-moar 379ef6: OUTPUT: «5␤»

[02:41] *** aborazmeh left
[02:42] <lookatme> m: subset IntS where .signature ~~ :(Int); my IntS $a = sub (Int $x, Int $y){ say $x;};

[02:42] <camelia> rakudo-moar 379ef6: OUTPUT: «Type check failed in assignment to $a; expected IntS but got Sub (sub (Int $x, Int $y) ...)␤  in block <unit> at <tmp> line 1␤␤»

[02:42] <lookatme> m: subset IntS where .signature ~~ :(Int); my IntS &a = sub (Int $x){ say $x;};

[02:42] <camelia> rakudo-moar 379ef6: OUTPUT: «Type check failed in assignment to &a; expected Callable[IntS] but got Sub (sub (Int $x) { #`(Sub...)␤  in block <unit> at <tmp> line 1␤␤»

[02:50] *** skids joined
[02:58] *** pilne left
[03:08] *** tarski joined
[03:14] *** Cabanossi left
[03:15] *** Cabanossi joined
[03:20] *** Cabanossi left
[03:23] *** Cabanossi joined
[03:53] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); my IntS &a := sub (Int $x){ say $x;};

[03:53] <camelia> rakudo-moar 379ef6: OUTPUT: «Type check failed in binding; expected Callable[IntS] but got Sub (sub (Int $x) { #`(Sub...)␤  in block <unit> at <tmp> line 1␤␤»

[03:53] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); dd IntS;

[03:53] <camelia> rakudo-moar 379ef6: OUTPUT: «IntS␤»

[03:54] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); IntS.WHAT.say;

[03:54] <camelia> rakudo-moar 379ef6: OUTPUT: «(IntS)␤»

[03:54] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); say sub (Int) {*} ~~ IntS;

[03:54] <camelia> rakudo-moar 379ef6: OUTPUT: «True␤»

[03:55] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); say sub (Int $x) {*} ~~ IntS;

[03:55] <camelia> rakudo-moar 379ef6: OUTPUT: «True␤»

[03:55] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); sub foo(IntS) {}; foo(sub (Int $x) {*})

[03:55] <camelia> rakudo-moar 379ef6: ( no output )

[03:55] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); sub foo(IntS) {42}; say foo(sub (Int $x) {*})

[03:55] <camelia> rakudo-moar 379ef6: OUTPUT: «42␤»

[03:55] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); sub foo(IntS) {42}; dd &foo;

[03:55] <camelia> rakudo-moar 379ef6: OUTPUT: «Sub foo = sub foo ($ where { ... }) { #`(Sub|72089696) ... }␤»

[03:59] <BenGoldberg> m: subset IntS where .signature ~~ :(Int); sub foo(IntS) {42}; dd &foo.signature.params[0].sub_signature;

[03:59] <camelia> rakudo-moar 379ef6: OUTPUT: «Any␤»

[04:00] *** mcmillhj joined
[04:00] *** mcmillhj_ joined
[04:03] <BenGoldberg> lookatme, The problem with a subset is that it's not sufficient/suitable for use with a NativeCall sub's callback parameter, because NativeCall is presently designed to introspect using .sub_signature.

[04:04] *** mcmillhj_ left
[04:04] *** mcmillhj left
[04:06] *** Cabanossi left
[04:08] *** Cabanossi joined
[04:10] *** kaare_ left
[04:10] *** kaare_ joined
[04:11] <BenGoldberg> m: constant S = sub foo(Int $i) {*}; sub bar(S $x) {42}; bar(S);

[04:11] <camelia> rakudo-moar 379ef6: OUTPUT: «Type check failed in binding to parameter '$i'; expected Int but got Sub (sub foo (Int $i) { #`...)␤  in sub foo at <tmp> line 1␤  in sub bar at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[04:14] *** literal left
[04:14] *** literal joined
[04:16] <BenGoldberg> m: subset S of Callable;

[04:16] <camelia> rakudo-moar 379ef6: ( no output )

[04:22] *** Actualeyes left
[04:23] *** atta left
[04:23] *** kaare_ left
[04:24] *** kaare_ joined
[04:25] *** atta joined
[04:39] *** daxim left
[04:40] *** curan joined
[04:42] *** ParsonsNose left
[04:42] *** AndyDee left
[04:47] *** Actualeyes joined
[04:50] *** ufobat joined
[04:50] *** zapwai left
[04:53] *** Cabanossi left
[04:53] *** Cabanossi joined
[05:22] *** BenGoldberg left
[05:53] *** domidumont joined
[05:58] *** domidumont left
[05:59] *** domidumont joined
[05:59] *** Sound joined
[06:00] *** kyan left
[06:02] *** CIAvash joined
[06:06] *** xtreak joined
[06:07] *** Rawriful joined
[06:14] *** xtreak_ joined
[06:15] *** xtreak left
[06:16] *** xtreak_ left
[06:16] *** xtreak joined
[06:18] *** wamba joined
[06:19] *** Sound left
[06:35] *** Rawriful left
[06:36] *** darutoko joined
[06:36] *** daxim joined
[06:37] *** espadrine joined
[06:37] *** Cabanossi left
[06:38] *** Cabanossi joined
[06:39] *** finanalyst joined
[06:39] *** nadim_ joined
[06:40] <finanalyst> where has Task::Star gone. It's not in the modules directory and I am just upgrading.

[06:42] *** CIAvash left
[06:45] <ufobat> good morning

[06:48] *** darutoko left
[07:04] *** parv joined
[07:06] <Geth> ¦ Inline-Python: a02d3569c7 | (Stefan Seifert)++ | 3 files

[07:06] <Geth> ¦ Inline-Python: Add missing meta data

[07:06] <Geth> ¦ Inline-Python: review: https://github.com/niner/Inline-Python/commit/a02d3569c7

[07:08] *** khw left
[07:09] <lookatme> afternoon \o.

[07:09] *** khw joined
[07:09] <parv> nighty0.

[07:10] *** khw left
[07:17] <Geth> ¦ Inline-Python: 19e8cceb5e | (Stefan Seifert)++ | 2 files

[07:17] <Geth> ¦ Inline-Python: Remove leading ./ from names in MANIFEST

[07:17] <Geth> ¦ Inline-Python: review: https://github.com/niner/Inline-Python/commit/19e8cceb5e

[07:21] *** Cabanossi left
[07:23] *** Cabanossi joined
[07:25] <Geth> ¦ Inline-Perl5: a4f4275d9c | (Stefan Seifert)++ | 2 files

[07:25] <Geth> ¦ Inline-Perl5: Add a MANIFEST file

[07:25] <Geth> ¦ Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/a4f4275d9c

[07:25] *** finanalyst left
[07:27] * lizmat clickbaits https://p6weekly.wordpress.com/2017/05/22/2017-21-yap6b/

[07:28] * moritz takes the bait, clicks

[07:28] <moritz> actually I read it earlier in the subway :-)

[07:28] <moritz> lizmat++

[07:29] *** TreyHarris left
[07:35] *** skids left
[07:37] *** xtreak left
[07:40] *** dakkar joined
[07:40] *** AlexDaniel joined
[07:41] *** zakharyas joined
[07:46] *** wamba left
[07:51] *** zakharyas left
[07:52] *** Cabanossi left
[07:53] *** Cabanossi joined
[07:54] *** zakharyas joined
[07:56] *** TreyHarris joined
[08:01] *** mcmillhj joined
[08:01] *** mcmillhj_ joined
[08:03] <parv> using RatStr instead of just plain Rat is smelly (near the bottom of https://www.learningperl6.com/2017/05/21/dont-use-in-programming/ )

[08:04] <parv> ... to check a number of arbitrary precision between a range.

[08:06] *** mcmillhj_ left
[08:06] *** mcmillhj left
[08:10] *** lowbro joined
[08:10] *** lowbro left
[08:10] *** lowbro joined
[08:13] *** aborazmeh joined
[08:13] *** aborazmeh left
[08:13] *** aborazmeh joined
[08:14] *** AlexDaniel left
[08:17] <parv> don't know why "Does this have any meaning? (https://www.reddit.com/r/perl/comments/6c99va/does_this_have_any_meaning/)" wa even merit a mention on the blog post.

[08:18] <parv> s/wa even merit/even merited/

[08:18] <lookatme> parv++ good post

[08:20] *** zakharyas left
[08:21] <parv> well i did not write/contribute to anything. i am just opining here about other URLs in lizmat's clickbait

[08:24] <lookatme> I haven't read that post yet. :) 

[08:26] <lookatme> I make a ping-pong sample in Perl 6

[08:26] <lookatme> s/make/made/

[08:26] <Geth> ¦ doc: 1774c09413 | (Jan-Olof Hendig)++ | doc/Type/Map.pod6

[08:26] <Geth> ¦ doc: Fix incorrect signatures for .keys, .values, .kv and pairs. Brian.d.Foy++

[08:26] <Geth> ¦ doc: 

[08:26] <Geth> ¦ doc: Closes #1323

[08:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1774c09413

[08:31] <lookatme> The code: https://gist.github.com/araraloren/929e60bf34989fa8a707943287a02174  and the test: http://ideone.com/i7yUQQ

[08:32] <lookatme> ping-pong is a erlang sample in its document : http://erlang.org/doc/getting_started/conc_prog.html

[08:37] <lizmat> parv: I mentioned it because of Zoffix's reply

[08:38] <parv> ah. thanks for the clarification, lizmat

[08:46] *** M-Illandan left
[08:46] *** Matthew[m] left
[08:46] *** xui_nya[m] left
[08:46] *** ilmari[m] left
[08:46] *** CIAvash[m] left
[08:46] *** mienaikage left
[08:46] *** tadzik left
[08:46] *** dp[m] left
[08:46] *** unclechu left
[08:46] *** imcsk8 left
[08:46] *** imcsk8_ joined
[08:48] *** tadzik joined
[08:48] *** espadrine left
[08:49] *** charsbar joined
[08:49] *** notbenh left
[08:49] *** rindolf joined
[08:49] <Geth> ¦ Pod-To-HTML: c5847eab0a | (Moritz Lenz)++ | .travis.yml

[08:49] <Geth> ¦ Pod-To-HTML: Use zef in travis

[08:49] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/c5847eab0a

[08:51] *** notbenh joined
[08:51] *** mcmillhj joined
[08:51] *** mcmillhj_ joined
[08:55] *** mcmillhj left
[08:56] *** mcmillhj_ left
[09:00] <Geth> ¦ doc: 0b32e6764b | (Jan-Olof Hendig)++ | doc/Type/Map.pod6

[09:00] <Geth> ¦ doc: Forgot to change Pairs

[09:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0b32e6764b

[09:06] *** mcmillhj joined
[09:06] *** TEttinger left
[09:10] *** mcmillhj left
[09:12] *** rurban joined
[09:15] *** xtreak joined
[09:20] *** xtreak left
[09:21] *** bjz joined
[09:21] *** dp[m] joined
[09:21] *** M-Illandan joined
[09:21] *** Matthew[m] joined
[09:21] *** CIAvash[m] joined
[09:21] *** ilmari[m] joined
[09:21] *** unclechu joined
[09:22] *** xui_nya[m] joined
[09:22] *** mienaikage joined
[09:26] *** aborazmeh left
[09:32] *** parv left
[09:34] *** Zoffix joined
[09:35] <lookatme> bye .

[09:35] *** lookatme left
[09:36] <Zoffix> "<parv> using RatStr instead of just plain Rat is smelly" well, 9.99999999999999999999999 isn't a Rat. It's denominator is too big for it

[09:39] <Zoffix> finanalyst, just install modules you need instead of random stuff. Task::Star is gone

[09:47] <timotimo> .tell pilne i already completely forgot that i even did anything with tcod ...

[09:47] <yoleaux> timotimo: I'll pass your message to pilne.

[09:51] *** Cabanossi left
[09:53] *** Cabanossi joined
[10:01] *** wamba joined
[10:14] *** titsuki_ joined
[10:15] *** margeas joined
[10:16] *** titsuki left
[10:17] *** Actualeyes left
[10:19] *** zakharyas joined
[10:32] *** rurban left
[10:32] <zengargoyle> lizmat: Damian Conway will be given a freely-accessible -- s/given/giving/

[10:34] *** mr-foobar left
[10:36] *** Cabanossi left
[10:38] *** Cabanossi joined
[10:46] *** Zoffix left
[10:49] *** bjz_ joined
[10:51] *** bjz left
[11:03] *** araraloren joined
[11:03] *** Actualeyes joined
[11:16] *** KDr2 left
[11:18] *** rurban joined
[11:37] *** rurban left
[11:41] *** pecastro left
[11:44] *** curt_ joined
[11:52] *** Cabanossi left
[11:53] *** Cabanossi joined
[11:56] *** pmurias joined
[11:58] *** mr-foobar joined
[12:02] *** skids joined
[12:08] *** skids left
[12:09] *** M-Illandan left
[12:09] *** tadzik left
[12:09] *** ilmari[m] left
[12:09] *** xui_nya[m] left
[12:09] *** unclechu left
[12:09] *** Matthew[m] left
[12:09] *** dp[m] left
[12:09] *** CIAvash[m] left
[12:09] *** mienaikage left
[12:11] *** notbenh left
[12:12] *** notbenh joined
[12:13] *** tadzik joined
[12:16] *** Amar_ joined
[12:17] *** Amar_ left
[12:20] *** cono left
[12:24] <bioduds> good morning

[12:24] <bioduds> How do I write a Buf to a file in binary mode?

[12:25] <bioduds> I'm trying this with no success 

[12:25] <bioduds>     my $fh = open "blocks/bl000001.dat", :bin;

[12:25] <bioduds>     my $data = "test data";

[12:25] <bioduds>     my Blob $sha256 = sha256 $data.encode: 'ascii';

[12:25] <bioduds>     $fh.print( $sha256 );

[12:25] <bioduds>     $fh.close;

[12:27] <jnthn> Use .write

[12:28] <bioduds> I tried .write, let me try again I must have used it wrong

[12:29] <bioduds> Failed to write bytes to filehandle: bad file descriptor

[12:29] <bioduds>     my $fh = open "blocks/bl000001.dat", :bin;

[12:29] <bioduds>     my $data = "test data";

[12:29] <bioduds>     my Blob $sha256 = sha256 $data;

[12:29] <bioduds>     $fh.write( $sha256 );

[12:29] <bioduds>     $fh.close;

[12:29] <bioduds> do I need to encode?

[12:30] <jnthn> Ah, I think :w is missing from the open statemnet too, to open it in write mode

[12:30] <jnthn> s/statement/function call/

[12:31] <bioduds> it should be :wbin ?

[12:31] <jnthn> no

[12:31] <bioduds> only :w

[12:31] <jnthn> :w, :bin

[12:31] <jnthn> Or just :w

[12:31] <bioduds> ok

[12:31] <jnthn> If you're using .write it already means writing binary data

[12:31] <jnthn> So you don't really need :bin

[12:31] <bioduds> voila

[12:31] <bioduds> worked

[12:32] <bioduds> thanks jnthn!!

[12:32] <bioduds> excellent

[12:32] <jnthn> Welcome :)

[12:32] <bioduds> precisely what I needed

[12:32] <bioduds> this community is awesome

[12:32] <bioduds> bye

[12:33] <jnthn> o/

[12:35] *** dp[m] joined
[12:35] *** M-Illandan joined
[12:35] *** Matthew[m] joined
[12:35] *** ilmari[m] joined
[12:35] *** CIAvash[m] joined
[12:35] *** unclechu joined
[12:35] *** mienaikage joined
[12:35] *** xui_nya[m] joined
[12:43] <[Coke]> jnthn++ bioduds++

[12:51] *** Cabanossi left
[12:53] *** Cabanossi joined
[12:54] <tbrowder> hi #perl6, i'm fiddling with a rudimentary pod2man using pod2text as a model.  my idea is to have a man src file in pod6 to generate the man page and have zef install it on *nix systems. a default page could be generated from any README, although it might not be pretty. thoughts? (nipping out for a while)

[12:58] *** mcmillhj joined
[13:01] *** mcmillhj_ joined
[13:01] <Geth> ¦ doc: 2746a1bb89 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/unicode_entry.pod6

[13:01] <Geth> ¦ doc: Remove out-of-place reference

[13:01] <Geth> ¦ doc: 

[13:01] <Geth> ¦ doc: Renders `"say routine"` below the code block... "say routine" what?

[13:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2746a1bb89

[13:02] *** mcmillhj_ left
[13:02] *** mcmillhj left
[13:02] *** curan left
[13:03] <Geth> ¦ doc: 4fabb6c763 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/unicode_entry.pod6

[13:03] <Geth> ¦ doc: Make it more obvious «$baa» splits on whitespace in var

[13:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4fabb6c763

[13:05] *** Zoffix joined
[13:05] *** mcmillhj joined
[13:06] <Zoffix> bioduds: it looks like you have waaaay more code than you need for that operation. It can be written much shorter as:   'blocks/bl000001.dat'.IO.spurt: sha256 $data

[13:07] <Zoffix> it will do the opening and the binning for you.

[13:07] <Zoffix> and the closing :)

[13:11] *** Sound joined
[13:22] *** Cabanossi left
[13:23] *** Cabanossi joined
[13:26] *** cdg joined
[13:32] <lizmat> zengargoyle++  # fixed

[13:34] *** colomon left
[13:38] <Geth> ¦ doc: jecki++ created pull request #1324: Invalid Python code in class-inheritance-example

[13:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1324

[13:39] <Geth> ¦ doc: 58124f9f7c | (Eckhart Arnold)++ (committed by Zoffix Znet) | doc/Language/py-nutshell.pod6

[13:39] <Geth> ¦ doc: Invalid Python code in class-inheritance-example (#1324)

[13:39] <Geth> ¦ doc: 

[13:39] <Geth> ¦ doc: The lines

[13:39] <Geth> ¦ doc: class Animal:

[13:39] <Geth> ¦ doc: 	def jump:

[13:39] <Geth> ¦ doc: 		print "I am jumping"

[13:39] <Geth> ¦ doc: 

[13:39] <Geth> ¦ doc: <…commit message has 7 more lines…>

[13:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/58124f9f7c

[13:42] *** skids joined
[13:42] *** Zoffix left
[13:42] <tbrowder> ref pod2man: the META6.json could be used to provide the canonical man src file names and output man names. among other things, if a man src were not provided by the author, a default man page could have as a minimum the module source link.

[13:45] *** pecastro joined
[13:45] *** japhb left
[13:49] *** aborazmeh joined
[13:49] *** aborazmeh left
[13:49] *** aborazmeh joined
[13:51] *** Cabanossi left
[13:53] *** Cabanossi joined
[13:55] *** raschipi joined
[13:59] *** zakharyas left
[13:59] *** Actualeyes left
[14:02] *** aborazmeh left
[14:11] <araraloren> tbrowder, pod2man ? Is the pod mean Perl5 Pod ?

[14:11] <tbrowder> no, perl6 pod

[14:12] <tbrowder> it doesn't exist yet

[14:12] <araraloren> Oh

[14:13] <araraloren> Sounds great, the idea.

[14:15] *** wamba left
[14:30] <Mithaldu> i think github just recognized a file as perl 6 because it starts with "use 5.006;"

[14:31] *** wamba joined
[14:33] <lizmat> yuck  :-)

[14:33] *** mingdao joined
[14:33] *** mingdao left
[14:34] <eater> :')))

[14:35] *** mingdao joined
[14:36] *** mingdao left
[14:41] <moritz> use.*6 ?

[14:43] <Mithaldu> that's my suspicion

[14:44] *** khw joined
[14:45] <araraloren> lazy github :)

[14:49] <Mithaldu> hmmm, i know it's this breaking: https://github.com/github/linguist#troubleshooting

[14:49] <Mithaldu> but i can't easily find where in the code the detection is being done

[14:50] *** bjz_ left
[14:50] <Mithaldu> mmmmaybe this https://github.com/github/linguist/blob/master/lib/linguist/heuristics.rb#L347-L353

[14:50] <Mithaldu> might have to narrow down why it's messing up with my file

[14:51] <tbrowder> araraloren: thanks!

[14:51] <araraloren> tbrowder, Em, will you make a module for that idea ?

[14:51] <tbrowder> yes

[14:52] <araraloren> tbrowder++

[14:52] <tbrowder> on my TODO, fiddling with working code now...

[15:05] *** kyan joined
[15:11] *** zakharyas joined
[15:16] *** alimon joined
[15:25] *** zakharyas left
[15:32] *** Nex6 joined
[15:38] *** domidumont left
[15:40] *** lowbro left
[15:40] *** wamba left
[15:44] *** araraloren left
[15:44] <Mithaldu> in case anyone wants to bug into this a little: https://github.com/github/linguist/issues/3637

[15:50] *** nadim_ left
[15:51] *** nadim_ joined
[15:53] *** nadim_ left
[15:54] *** sufrostico left
[16:07] *** yqt joined
[16:21] *** Cabanossi left
[16:21] *** raiph joined
[16:23] *** Cabanossi joined
[16:28] <raiph> m: say %( 'a' => 42 ){ 'a' ; }

[16:28] <camelia> rakudo-moar f6f54d: OUTPUT: «42␤»

[16:29] <raiph> m: say %( 'a' => 42 ){ 'a' ; ; }

[16:29] <camelia> rakudo-moar f6f54d: OUTPUT: «Type Int does not support associative indexing.␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[16:30] <raiph> o/ Does anyone know of a matching RT? ^^^

[16:35] <raschipi> Because of the LTA message or the unexpected behavior?

[16:37] *** pmurias left
[16:39] *** pmurias joined
[16:40] *** wamba joined
[16:44] *** dakkar left
[16:53] *** domidumont joined
[17:03] *** raschipi left
[17:06] *** AlexDaniel joined
[17:06] *** grondilu left
[17:06] <jnthn> Is it even a bug?

[17:08] <jnthn> I'd expect { 'a' ; ; } to compile as if it were { 'a' ; Nil } or so

[17:08] <jnthn> It's a semilist, so it's things separated by ; with a trailing one allowed

[17:09] <jnthn> I guess we could choose to refuse an empty thing

[17:19] <TimToady> "Empty subscript not allowed (did you mean * for a wildcard?)" or some such...

[17:20] *** cygx joined
[17:20] <cygx> o/

[17:20] <yoleaux> 22 May 2017 14:19Z <Zoffix> cygx: would you recommend .seek/.tell to throw if called on a handle that isn't in binary mode? I recall you saying they are technically binary operations when I had that case where .tell was giving wrong result after some text read operation

[17:20] <TimToady> mind, the carpage should only be about syntactic emptiness, not semantic, since we want to allow null lists as a degenerate case

[17:22] <cygx> m: say do { my $i = 42; LEAVE $i = 0; $i }; say do { my $i = 42; LEAVE $i = 0; +$i }

[17:22] <camelia> rakudo-moar d3783d: OUTPUT: «0␤42␤»

[17:22] <cygx> ^ bug?

[17:23] <timotimo> don't think so

[17:23] <timotimo> m: say (do { my $i = 42; LEAVE $i = 0; $i }) = 10

[17:23] <camelia> rakudo-moar d3783d: OUTPUT: «10␤»

[17:23] <timotimo> you're getting passed back the container

[17:24] <cygx> so blocks are implicitly rw?

[17:26] <timotimo> that's how i'd interpret that

[17:30] <jnthn> Yes, blocks don't decontainerize, like subs

[17:32] *** hythm left
[17:34] *** mr-foobar left
[17:34] *** astj_ left
[17:35] *** astj joined
[17:35] *** pilne joined
[17:36] *** ufobat left
[17:36] <cygx> jnthn: or rather, unlike subs (I assume)

[17:36] <cygx> confusing sentence is confusing ;)

[17:37] *** zakharyas joined
[17:38] *** erdic left
[17:38] *** erdic joined
[17:42] *** setty1 joined
[17:44] *** enheh left
[17:47] <jnthn> haha

[17:48] <jnthn> Subs do decontainerize unless marked "is rw"

[17:48] <jnthn> Blocks do not

[17:51] *** andrzejk_ joined
[17:52] *** hythm joined
[17:52] <Geth> ¦ doc: jecki++ created pull request #1327: tabs converted to spaces in lines 550-552

[17:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1327

[17:52] <Geth> ¦ doc: 3faba8f7cb | (Eckhart Arnold)++ (committed using GitHub Web editor) | doc/Language/py-nutshell.pod6

[17:52] <Geth> ¦ doc: tabs converted to spaces in lines 550-552

[17:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3faba8f7cb

[17:52] <Geth> ¦ doc: 2cff5dd033 | lizmat++ (committed using GitHub Web editor) | doc/Language/py-nutshell.pod6

[17:52] <Geth> ¦ doc: Merge pull request #1327 from jecki/patch-1

[17:52] <Geth> ¦ doc: 

[17:52] <Geth> ¦ doc: tabs converted to spaces in lines 550-552

[17:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2cff5dd033

[17:55] *** committable6 left
[17:57] *** TeamBlast left
[17:59] *** committable6 joined
[17:59] *** ChanServ sets mode: +v committable6

[18:00] *** TeamBlast joined
[18:02] *** hythm left
[18:04] <andrzejk_> hi people

[18:05] <lizmat> andrzejk_ o/

[18:06] <andrzejk_> what o?

[18:07] <lizmat> it's waving  :-)

[18:08] <lizmat> saying hi  :-)

[18:08] <andrzejk_> oh ok

[18:08] <andrzejk_> I need C++ expert

[18:09] *** raiph left
[18:09] <lizmat> the #perl6 channel doesn't appear to be the place to find those 

[18:10] *** raiph joined
[18:10] <andrzejk_> I know but I will try

[18:12] <perlpilot> I guess #perl6 has inherited the same thing from #perl where people think the channel is full of really smart people who know lots of things ....   ;-)

[18:12] *** hythm joined
[18:12] *** zakharyas left
[18:14] <pilne> i do my best to stay far far away from c++

[18:14] <yoleaux> 09:47Z <timotimo> pilne: i already completely forgot that i even did anything with tcod ...

[18:14] <pilne> timotimo=> fair enough, i used the python version ages ago.

[18:15] *** geekosaur left
[18:16] <timotimo> i'm sitting on many unfinished things :|

[18:16] *** cbk_ joined
[18:16] *** geekosaur joined
[18:16] <pilne> i have those too, happens when you have more languages installed on your computer than... well anything else added after a clean ubuntu mate install

[18:19] <cbk_> Is there a bug with ZEF, not installing modules to the right place?  I keep getting an error saying it cant find a module which was just installed....?

[18:23] *** mcmillhj_ joined
[18:23] <lizmat> did you update to the latest zef ?

[18:23] *** mcmillhj left
[18:24] <cbk_> I do believe so.  Had to install it

[18:24] <cbk_> Using rakudobrew

[18:25] <lizmat> hmmm... I seem to recall seeing problem reports with that, so maybe backlogging the past 4 days or so will give an answer

[18:28] <cbk_> Backlogging...? Well I'm more then happy to help with that if I can, but really don't know/understand what your asking.

[18:29] *** cdg left
[18:31] *** setty1 left
[18:31] <ugexe> sounds like rakudobrew is mixed up and invoking zef with a different version of perl6 than what you are trying to use

[18:32] <cbk_> I'll go back and nuke my install of perl6 and try again from scratch.

[18:33] <ugexe> might try `rakudobrew rehash` as well

[18:33] <cbk_> I may have a few different installs of Perl6 on the same system.

[18:33] <timotimo> i thought rehash only does stuff for binaries

[18:33] <cbk_> Ok I can that now...

[18:34] <ugexe> timotimo: it does, but i think there is a way for the perl6 shim to get mixed up for a command

[18:34] <cbk_> Updating shims......

[18:35] <timotimo> ah

[18:35] <ugexe> do `zef install zef --force` and note where it says it installs the bin/ script. does this match where you think it should?

[18:35] <cbk_> Ok...

[18:36] *** azawawi joined
[18:36] <azawawi> .

[18:36] <azawawi> ..

[18:36] <azawawi> hi :)

[18:36] <cbk_> The reshash thing does not appear to have worked.

[18:37] <cbk_> ZEF installed to ~/.rakudobrew/moar-nom/install/share/perl6/site/bin

[18:37] * azawawi is thinking whether to write a gnuplot or plplot library... so many choices... so little time :)

[18:37] <cbk_> Looks good to me

[18:38] <ugexe> `which perl6`?

[18:38] <cbk_> 2017.40.3.293-ga7c23aa

[18:39] <ugexe> no, run that actual command

[18:39] <cbk_> Perl6

[18:39] *** setty1 joined
[18:39] <timotimo> it should give you a path

[18:40] <cbk_> My perl6 lives at ~/.rakudobrew/bin/perl6

[18:41] <timotimo> right, that's the forwarder

[18:42] <cbk_> That is the output from which perl6

[18:42] * azawawi ponders with the obscure "it should give you a path"... gnuplot vs plplot :)

[18:44] <raiph> m: say %( 'a' => 42 ){ 'a' ; 42 }

[18:44] <camelia> rakudo-moar dd6d6c: OUTPUT: «Type Int does not support associative indexing.␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[18:44] <raiph> ^^^  It doesn't look to me like the issue is emptiness

[18:45] <timotimo> is this in reference to something?

[18:45] <raiph> timotimo: https://irclog.perlgeek.de/perl6/2017-05-23#i_14625002

[18:46] <timotimo> m: sub postcircumfix:<{ }>($subj, |c) { say c.perl }; %( a => 42 ){ 'a'; 42 }

[18:47] <jnthn> m: say (%( a => 42)).WHAT

[18:48] <jnthn> Lazy bots...

[18:48] <timotimo> i'm not sure how i broke it

[18:48] <jnthn> But yeah, I'm not sure why it's surprising that trying to do 42<42> wouldn't work :)

[18:48] <timotimo> locally i immediately get "int does not support associative indexing"

[18:48] <timotimo> yeah

[18:48] <jnthn> Which is what that code boils down to before it fails

[18:49] <jnthn> {x ; y} means the same as {x}{y}

[18:49] <timotimo> i wonder why it doesn't use my own postcircumfix:<{ }> in that code, though

[18:49] *** azawawi left
[18:49] <jnthn> Because that form dispatches to postcircumfix:<{; }> iirc 

[18:49] *** andrzejk_ left
[18:50] <jnthn> Otherwise the dispatch got very confusing :)

[18:51] <timotimo> ah

[18:51] <jnthn> raiph: What were you expecting it to do, btw?

[18:51] <timotimo> you are right

[18:52] *** Cabanossi left
[18:52] <timotimo> but yeah, when you have { 'a'; } it goes through the { } candidate, but if you have { 'a' ; ; } it goes through the {; } candidate

[18:53] <jnthn> I think that's probably right

[18:53] *** Cabanossi joined
[18:54] <raiph> jnthn: Whatever it was, I was confused. Your explanation was perfect. The error message makes sense. My apologies for the noise. :)

[18:54] <timotimo> and it gives you a Nil in the second slot, just like you said earlier

[19:00] <raiph> jnthn: A little knowledge is a dangerous thing. I knew enough, and pay enough attention to detail, to check a `{...;...}` subscript while researching the footnote in my https://stackoverflow.com/a/44102980/1077672 answer then erroneously jumped to the island of conclusions about the error message... /o\

[19:15] *** domidumont left
[19:19] *** raiph left
[19:32] *** grondilu joined
[19:32] *** Praise left
[19:32] *** Praise joined
[19:32] *** Praise left
[19:32] *** Praise joined
[19:34] <timotimo> hmm, Buf doesn't do any nums

[19:36] *** Ven joined
[19:36] *** Ven is now known as Guest41355

[19:44] *** Guest41355 left
[19:46] *** Ven_ joined
[19:47] *** andrzejk_ joined
[19:57] *** zakharyas joined
[19:57] *** cdg joined
[20:02] *** Ven_ left
[20:05] *** andrzejk_ left
[20:08] *** sufrostico joined
[20:19] *** rindolf left
[20:22] *** Cabanossi left
[20:23] *** vytautas joined
[20:24] *** Cabanossi joined
[20:24] *** bjz joined
[20:25] <vytautas> No candidates found matching identity: Task::Star

[20:25] <timotimo> yeah, Task::Star was deprecated

[20:25] <timotimo> but not yet taken off of the how-to-get-rakudo page

[20:26] <vytautas> and what is aprecated?

[20:26] * vytautas made a new word

[20:26] <timotimo> also not sure if rakudobrew should still be recommended on rakudo.org at all

[20:27] <timotimo> it's recommended to grab whatever modules you're interested in from modules.perl6.org

[20:27] *** trnh joined
[20:27] *** trnh left
[20:27] *** trnh joined
[20:27] <vytautas> ok

[20:27] <timotimo> alternatively http://modules.zef.pm/

[20:27] <timotimo> just "zef install NameFromThatList"

[20:28] *** nadim_ joined
[20:32] *** cdg left
[20:35] <El_Che> zef install LibraryMake -> Aborting due to test failure: LibraryMake:ver('1.0.0'):auth('github:retupmoca') (use --force to override)

[20:35] <El_Che> cloing the repo from github and running the test manuall is OK though

[20:36] * [Coke] continues the tradition of asking p5 questions here, and wonders if there's a useful way to report a test failure in a perlbrew of the 5.26 RC

[20:38] *** cdg joined
[20:38] <El_Che> ok, nuking the SHA resources dirs fixed it (Oh, I the dislike of dirs like C3893DD6E92E8A64304F0D65AF5173B7BC3531CA)

[20:39] <timotimo> i changed the rakudo download page to no longer mention Task::Star

[20:39] <El_Che> why?

[20:39] <timotimo> because Task::Star is no longer in the ecosystem

[20:39] <timotimo> so you can't install it any more

[20:40] *** vytautas left
[20:40] <El_Che> ah crap, I need to update the doc of my pkgs

[20:40] <El_Che> thx for the pointer

[20:40] <timotimo> :)

[20:42] <timotimo> so many modules still refer to panda in their readme

[20:42] <timotimo> and even more in their .travis.yml

[20:42] <El_Che> I just met one referring to ufo

[20:43] <timotimo> fantastic :)

[20:43] <El_Che> I revived some old perl6 code that probably doesn't run anymore, but still has a use case :)

[20:43] *** trnh left
[20:44] *** dct joined
[20:47] *** nadim_ left
[20:48] <timotimo> how was the experience? how long before christmas was that code?

[20:49] *** stux|RC-only joined
[20:49] <El_Che> actually, I am not there yet

[20:49] *** espadrine joined
[20:49] <El_Che> stuck in failed zef installs

[20:50] <El_Che> zef --verbose install Config::Parser::yaml Digest::SHA1::Native SSH::LibSSH

[20:50] <El_Che> fails: JSON::Unmarshal

[20:51] *** setty1 left
[20:51] *** zacts left
[20:52] *** Sound left
[20:53] <timotimo> installs fine for me

[20:54] <El_Che> 0.08?

[20:54] <timotimo> yeah

[20:55] <El_Che> zef --verbose install Config::Parser::yaml Digest::SHA1::Native SSH::LibSSH

[20:55] <El_Che> oops

[20:55] <El_Che> No such method 'bla' for invocant of type 'Any' in block <unit> at t/parameterised.t line 16

[20:57] <timotimo> t/parameterised.t .. ok 

[20:57] <timotimo> *shrug* :(

[20:58] <El_Che> it even fails when $ perl6 -Ilib t/parameterised.t

[21:01] <El_Che> timotimo: what rakudo ver are you running?

[21:01] <timotimo> This is Rakudo version 2017.05-55-gdd6d6cc built on MoarVM version 2017.05-24-gd86a35b

[21:01] *** xinming_ left
[21:01] *** hythm left
[21:03] *** pmurias left
[21:03] *** sufrostico left
[21:03] *** hythm joined
[21:03] *** Ven joined
[21:04] *** Ven is now known as Guest25118

[21:05] *** skids left
[21:08] *** TEttinger joined
[21:08] *** hythm left
[21:16] *** jast left
[21:16] *** thundergnat joined
[21:18] *** kst` left
[21:18] *** zacts joined
[21:18] *** kst`` joined
[21:20] *** cpage_ left
[21:22] *** jast joined
[21:22] *** zakharyas left
[21:22] *** Cabanossi left
[21:22] *** cpage left
[21:23] *** Cabanossi joined
[21:25] *** cygx left
[21:26] *** cpage_ joined
[21:27] *** hythm joined
[21:28] *** mcmillhj_ left
[21:31] *** Guest25118 left
[21:32] *** cpage_ left
[21:33] *** cpage_ joined
[21:34] <thundergnat> .tell azawawi Thanks for the Terminal::Libcaca bindings. It's been fun to play with. Some code in the wild: http://rosettacode.org/wiki/Draw_a_rotating_cube#Perl_6

[21:34] <yoleaux> thundergnat: I'll pass your message to azawawi.

[21:36] *** kaare__ joined
[21:37] *** cpage joined
[21:37] *** kaare_ left
[21:38] *** robertle joined
[21:42] *** chee left
[21:42] *** nebuchadnezzar left
[21:43] *** chee joined
[21:43] *** nebuchadnezzar joined
[21:47] *** robertle left
[21:47] *** robertle joined
[21:47] *** robertle left
[21:49] *** mcmillhj joined
[21:52] *** robertle joined
[21:52] *** robertle left
[21:54] *** mcmillhj left
[22:16] *** yqt left
[22:17] *** bjz left
[22:24] *** ribasushi left
[22:25] *** olinkl left
[22:28] *** olinkl joined
[22:32] *** ribasushi joined
[22:35] *** avalenn left
[22:35] *** sufrostico joined
[22:36] *** avalenn joined
[22:36] *** sufrosti1o joined
[22:37] *** Sound joined
[22:37] *** Actualeyes joined
[22:40] *** wamba left
[22:43] *** skids joined
[22:51] *** Sound left
[22:58] *** cpage_ left
[22:58] *** cpage_ joined
[23:06] *** brabo joined
[23:12] *** Possum left
[23:13] *** dct left
[23:20] <pilne> i might regret running the "prime conspiracy" perl6 code from rosetta code >.<

[23:20] *** khw left
[23:20] *** cdg left
[23:25] *** Possum joined
[23:34] *** gfldex left
[23:38] *** margeas left
[23:39] *** mcmillhj joined
[23:43] *** mcmillhj left
[23:45] <Geth> ¦ doc: edd7431734 | (Zoffix Znet)++ | doc/Type/Pair.pod6

[23:45] <Geth> ¦ doc: Fix up Pair.invert docs

[23:45] <Geth> ¦ doc: 

[23:45] <Geth> ¦ doc: - It (since a few months ago) always returns a Seq; old behaviour

[23:45] <Geth> ¦ doc:     was not specced.

[23:45] <Geth> ¦ doc: - Simply examples

[23:45] <Geth> ¦ doc: 

[23:45] <Geth> ¦ doc: Spec: https://github.com/perl6/roast/commit/f4828aaf64

[23:45] <Geth> ¦ doc: Fixes RT#131349: https://rt.perl.org/Ticket/Display.html?id=131349

[23:45] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131349

[23:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/edd7431734

[23:46] *** gfldex joined
[23:50] *** Possum left
[23:53] *** vermat joined
[23:55] *** TEttinger left
[23:56] *** Possum joined
[23:57] *** Actualeyes left
