[00:00] *** raiph left
[00:01] *** raiph joined
[00:04] *** BenGoldberg joined
[00:11] *** thowe_work left
[00:15] *** var_somebody joined
[00:15] *** var_somebody is now known as v1_

[00:15] *** Cabanossi left
[00:17] *** Cabanossi joined
[00:17] *** b2gills joined
[00:26] *** pyrimidine joined
[00:29] *** AlexDaniel joined
[00:30] *** pyrimidine left
[00:36] *** lukaramu left
[00:40] *** mcmillhj joined
[00:43] *** aborazmeh joined
[00:43] *** aborazmeh left
[00:43] *** aborazmeh joined
[00:44] *** mcmillhj left
[00:47] *** cibs left
[00:48] *** Unavowed joined
[00:49] *** cibs joined
[01:01] <AlexDaniel> m: say 25.5 div 5

[01:01] <camelia> rakudo-moar 28acf0: OUTPUT: «Cannot resolve caller infix:<div>(Rat, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[01:01] <AlexDaniel> m: say 25.5.Num div 5

[01:01] <camelia> rakudo-moar 28acf0: OUTPUT: «Cannot resolve caller infix:<div>(Num, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[01:01] *** Actualeyes joined
[01:03] <AlexDaniel> m: say 25.5.Num mod 5

[01:03] <camelia> rakudo-moar 28acf0: OUTPUT: «Cannot resolve caller infix:<div>(Num, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[01:05] * AlexDaniel shrugs

[01:09] *** ggoebel left
[01:10] *** pyrimidine joined
[01:13] *** b2gills left
[01:15] *** Cabanossi left
[01:15] *** pyrimidine left
[01:17] *** Cabanossi joined
[01:21] <SmokeMachine> can I use zef as a module? I mean, does zef has an API?

[01:23] *** ggoebel joined
[01:28] *** sufrostico left
[01:30] *** sufrosti1o left
[01:30] *** mcmillhj joined
[01:30] *** sufrosti2o left
[01:33] <skids> SmokeMachine: the source does appear to be reasonably broken out.

[01:34] *** mcmillhj left
[01:36] *** sufrostico joined
[01:36] *** sufrosti1o joined
[01:36] *** sufrosti2o joined
[01:36] <skids> ...and the code for the binary is in Zef/CLI.pm so can serve as ample example code.

[01:37] *** pyrimidine joined
[01:37] *** pyrimidine left
[01:42] <SmokeMachine> skids: I'd love if Zef::CLI mult MAINs just do 1 call... like: Zef::Something.install(@wants, :$to, :$depends, ...)

[01:44] <skids> Just cut and paste them into a sub. 

[01:46] *** Cabanossi left
[01:47] *** Cabanossi joined
[01:48] *** kurahaupo__ left
[02:00] *** grondilu_ left
[02:00] *** cibs left
[02:02] *** cibs joined
[02:07] <TEttinger> heh. https://www.change.org/p/unicode-consortium-we-demand-a-bean-emoji-please

[02:10] <AlexDaniel> u: bean

[02:10] <unicodable6> AlexDaniel, U+2F96 KANGXI RADICAL BEAN [So] (⾖)

[02:10] <AlexDaniel> radical bean!

[02:25] *** rindolf left
[02:29] *** rindolf joined
[02:29] *** g0d355__ joined
[02:38] *** adu joined
[02:39] *** obfusk left
[02:39] *** obfusk joined
[02:45] *** ilbot3 left
[02:48] *** ilbot3 joined
[03:11] *** miatomi joined
[03:12] *** xtreak joined
[03:15] *** Cabanossi left
[03:17] *** Cabanossi joined
[03:22] *** adu left
[03:29] *** noganex_ joined
[03:31] *** labster joined
[03:32] *** rindolf left
[03:32] *** noganex left
[03:36] *** skids left
[03:38] *** adu joined
[03:40] *** aborazmeh left
[03:45] *** g0d355__ left
[03:45] *** Cabanossi left
[03:47] *** Cabanossi joined
[03:50] *** adu left
[04:00] *** wamba joined
[04:01] *** khw left
[04:11] *** kyan joined
[04:13] <BenGoldberg> u: nut

[04:13] <unicodable6> BenGoldberg, U+A17C YI SYLLABLE HNUT [Lo] (ꅼ)

[04:13] <unicodable6> BenGoldberg, U+A191 YI SYLLABLE NUT [Lo] (ꆑ)

[04:13] <unicodable6> BenGoldberg, 13 characters in total: https://gist.github.com/a6bb6fbb27b3d71c61dfd6f6e2fddb23

[04:14] *** Cabanossi left
[04:17] *** Cabanossi joined
[04:20] *** miatomi left
[04:22] *** mcmillhj joined
[04:27] *** AlexDaniel left
[04:37] <TEttinger> there's lots of yi syllables

[04:37] <TEttinger> u: fap

[04:37] <unicodable6> TEttinger, U+A0D4 YI SYLLABLE FAP [Lo] (ꃔ)

[04:40] *** BenGoldberg left
[04:43] *** Cabanossi left
[04:46] *** Cabanossi joined
[04:55] *** llfourn joined
[05:04] *** labster left
[05:06] *** wamba left
[05:14] *** astj left
[05:16] *** astj joined
[05:16] *** kyan left
[05:22] *** perlawhirl joined
[05:26] *** raiph left
[05:32] *** Peter_R left
[05:34] *** Peter_R joined
[05:43] *** mcmillhj left
[05:43] *** Tonik joined
[05:44] *** Cabanossi left
[05:46] *** Cabanossi joined
[05:48] *** xtreak left
[05:51] *** u-ou joined
[05:51] <u-ou> hi

[05:51] <u-ou> what is a good book to learn perl6 from?

[05:51] *** xtreak joined
[05:52] *** b2gills joined
[05:54] <ilbelkyr> oh, hi u-ou :)

[05:54] <u-ou> hi ilbelkyr!

[05:54] <u-ou> I want to learn perl6 ;)

[05:55] <ilbelkyr> I think there are some books being written, I don't recall the specifics though (I'm not the sort of person who learns programming mostly from books hence I haven't been keeping my eyes on that)

[05:56] *** mcmillhj joined
[05:56] *** curan joined
[05:57] <u-ou> where do you mostly learn from? :o

[05:58] <ilbelkyr> online sources; books are nice too but I try to avoid relying too much on single sources where possible

[05:59] <ilbelkyr> also, the official documentation in cases where that's a thing (but i'll admit the C standard is not exactly a light read)

[06:00] <u-ou> ah, *nods*

[06:00] *** mcmillhj left
[06:02] <ilbelkyr> there are plenty of really badly written tutorials for perl 5 out there, and if you're only beginning to learn, you can't really tell bad $language tutorials from good ones yet, so i tend to recommend looking at multiple sources

[06:02] <ilbelkyr> goes for any language, really. plus if you spot the differences and ask about them, you'll learn about pitfalls from the olden days, too :)

[06:03] <u-ou> yep

[06:25] *** perlawhirl left
[06:28] *** xtreak left
[06:28] *** xtreak joined
[06:29] *** wamba joined
[06:31] *** mcsnolte left
[06:37] *** wamba left
[06:37] *** darutoko joined
[06:46] * u-ou is reading

[06:48] *** Wanderer68 left
[06:50] <u-ou> unless cannot have an else clause :<

[06:50] *** RabidGravy joined
[06:51] <u-ou> I guess that makes sense tbh

[06:51] <geekosaur> iirc that was found to be horribly confusing in older perl

[06:52] <geekosaur> (I think perl 3 did allow unless/else?)

[06:52] <u-ou> it makes a lot more sense to just say if p

[06:56] *** xtreak_ joined
[06:57] *** xtreak left
[07:05] *** xiaomiao is now known as DrEeevil

[07:06] *** domidumont joined
[07:11] *** domidumont left
[07:12] *** domidumont joined
[07:12] *** labster joined
[07:19] <u-ou> people say not to use given in perl5. should i follow this advice for perl6?

[07:19] <u-ou> (because it is buggy)

[07:21] *** xtreak_ left
[07:23] *** xtreak joined
[07:24] *** wamba joined
[07:25] *** domidumont left
[07:28] *** movl left
[07:30] *** Cabanossi left
[07:31] *** Cabanossi joined
[07:32] *** movl joined
[07:35] <moritz> u-ou: no

[07:35] <moritz> u-ou: Perl 5 tried to adopt Perl 6's given/when and smartmatching, but ignored some fundamental differences between p5 and p6

[07:36] <u-ou> ahhhh

[07:36] <moritz> so it's buggy/weird in p5, but works as designed in p6

[07:36] <u-ou> cool

[07:37] *** xtreak left
[07:38] *** xtreak joined
[07:42] *** xtreak left
[07:42] *** xtreak joined
[07:43] *** domidumont joined
[07:45] *** hchienjo joined
[07:49] *** Tonik left
[07:51] *** xtreak left
[07:53] *** xtreak joined
[07:55] <samcv> u-ou, https://learnxinyminutes.com/docs/perl6/ is a good place to start. then i would supplement with docs.perl6.org

[07:55] *** cibs left
[07:55] <u-ou> ty

[07:57] *** cibs joined
[08:14] *** movl left
[08:17] *** n1ce left
[08:19] *** movl joined
[08:22] *** xtreak_ joined
[08:22] *** xtreak left
[08:28] *** Cabanossi left
[08:31] *** mcmillhj joined
[08:31] *** Cabanossi joined
[08:32] *** wdna joined
[08:33] *** abraxxa joined
[08:35] *** araujo left
[08:36] *** araujo joined
[08:39] *** wamba left
[08:40] *** mcmillhj left
[08:40] *** abraxxa left
[08:41] *** abraxxa joined
[08:43] *** wamba joined
[08:44] *** mcmillhj joined
[08:48] *** robertle joined
[08:48] *** mcmillhj left
[08:50] *** andrzejku joined
[08:53] <andrzejku> hey people

[08:54] <samcv> hello andrzejku 

[08:54] *** xtreak_ left
[08:54] <andrzejku> got nonperl question

[08:56] <andrzejku> samcv can I ask?

[08:56] <gfldex> andrzejku: you as free to ask a non-perl-question as we are free not to know the answer :->

[08:56] <yoleaux> 21 Mar 2017 10:06Z <IOninja> gfldex: why does Podtobig page generate perl6.xhtml? We use HTML, not XML. The bogus extension is causing parse errors: https://irclog.perlgeek.de/perl6/2017-03-21#i_14298152

[08:56] <yoleaux> 21 Mar 2017 10:23Z <IOninja> gfldex: here's what it looks like in Firefox: http://i.imgur.com/0v67PIa.png The idiocy of using XHTML instead of HTML was common because people were too stupid to know how to kick IE6 out of quirksmode with a proper HTML doctype and it was never a right thing to use.

[08:56] <yoleaux> 21 Mar 2017 10:36Z <IOninja> gfldex: does Pod::To::Big page do any processing? Pod::To::HTML outputs E<171> as &#171; but on perl6.xhtml it ended up as &171; (not the missing #).

[08:56] <yoleaux> 21 Mar 2017 12:56Z <IOninja> gfldex: Never mind. Found and fixed the issue in https://github.com/perl6/perl6-pod-to-bigpage/commit/ed9c1a489640ce600b7901f1e1a878ca5ffcfee9 (P.S.: I didn't mean you were an idiot for using XHTML in my previous msg; but I'd still recommend using HTML5 doctype in Pod2BigPage)

[08:56] <samcv> omg

[08:56] <samcv> so many messages

[08:56] <andrzejku> I read that Perl6 is quite functional

[08:56] <andrzejku> and you can also change its own syntax

[08:56] <andrzejku> something like that

[08:58] <andrzejku> so it looks like Lisp and Perl6 has something common

[08:58] <andrzejku> but Lisp is dead?

[08:58] <andrzejku> what do you think?

[08:59] <samcv> yes perl 6 you can change its syntax. and you can make your own operators. and you can augment classes like the Str class so you can make your custom method "string".mycustommethod

[08:59] <gfldex> IOninja: Pod2BigPage is using xhtml to catch errors as early as possible and I know very well that you are unpolite.

[08:59] <samcv> also i do not know lisp

[09:00] <andrzejku> perl6 is fully functional then?

[09:00] *** jonas1 joined
[09:01] <gfldex> andrzejku: in lisp you cant really change the syntax. But the got a really good macro sytem and the language is so simple that those two facts combined create the illusion that you change the syntax.

[09:01] <andrzejku> ohh

[09:01] <andrzejku> I just started use emacs

[09:01] <samcv> andrzejku, well it supports functional programming in ways. seems wiki has a perl 6 section https://en.wikipedia.org/wiki/Functional_programming#Perl_6

[09:02] <andrzejku> and I just think why there no Perl6 editors like emacs or vim

[09:02] <andrzejku> perl ideally align these problems

[09:02] <samcv> well I personally use Atom to do my perl 6ing. there's a tutorial on making atom perl 6 ideish https://github.com/samcv/Atom-as-a-Perl6-IDE

[09:03] *** mcmillhj joined
[09:03] <andrzejku> yeah I know

[09:03] <samcv> k

[09:03] <samcv> and vim works fine. idk what features are you missing

[09:03] <samcv> oh you mean a perl 6 based editor

[09:03] <andrzejku> yep

[09:03] <samcv> written in perl 6

[09:03] <andrzejku> yep exactly

[09:04] <gfldex> it's still a little slow for that

[09:04] <andrzejku> the one perl6 editor to rule all languages

[09:04] <samcv> ah. well graphical toolkits for perl 6 are still only basic functionality

[09:04] <gfldex> syntaxhighlight for large files would take quite some time

[09:04] <gfldex> but we are getting the infrastructure for that in place already

[09:04] <andrzejku> hmm

[09:05] <samcv> someday maybe!

[09:05] <gfldex> see https://github.com/drforr/perl6-Perl6-Parser

[09:05] <andrzejku> but do you think

[09:05] <andrzejku> when people talk you should learn lisp it is a language from god

[09:05] <andrzejku> etc.

[09:05] <andrzejku> it change your mind

[09:05] <samcv> perl 6 is language from god!

[09:05] <andrzejku> maybe you never use it blablabla

[09:05] <gfldex> so they say :->

[09:05] <andrzejku> but you should know it

[09:05] <andrzejku> blablabla

[09:05] <andrzejku> and emacs is in lisp

[09:06] <gfldex> lisp may be a manguage from god, but our god is bigger :)

[09:06] <andrzejku> I don't think so

[09:06] <samcv> emacs is weird

[09:06] *** perlawhirl joined
[09:06] <andrzejku> emacs is fine I think

[09:06] <gfldex> samcv: so is vim and I like it for it's kind of weirdness

[09:06] <samcv> i use atom or vim. emacs is kinda weird

[09:06] <andrzejku> but these all acient texts looks strange

[09:07] <andrzejku> I learn emacs last time

[09:07] *** zakharyas joined
[09:07] <andrzejku> more more

[09:07] <andrzejku> and I like that emacs plugins

[09:07] <andrzejku> you can write in lisp

[09:07] <andrzejku> that gives him power

[09:07] *** mcmillhj left
[09:08] <u-ou> are roles like typeclasses in haskell

[09:09] *** TheAthlete joined
[09:10] *** TheAthlete left
[09:11] <andrzejku> I think Emacs is more powerfull than vim

[09:11] <andrzejku> except for C++ programming

[09:11] <gfldex> you know very little about vim then

[09:11] <andrzejku> it is made for programming

[09:11] *** hchienjo left
[09:12] <andrzejku> really?

[09:13] <u-ou> vim is perfect

[09:13] <u-ou> for everything

[09:14] <gfldex> u-ou: comparing Haskell and Perl 6 is always tricky and I would say roles are quite different from typeclasses

[09:14] <u-ou> I have my doubts it was invented by a human being

[09:14] <u-ou> alright, cool

[09:15] <gfldex> u-ou: types in general are different then in Haskell

[09:17] <gfldex> u-ou: there is no clear distinction between runtime and compile time. As a result comparing things between it and a static language will miss quite a lot.

[09:17] <gfldex> u-ou: see https://docs.perl6.org/language/typesystem

[09:17] <u-ou> ahh

[09:18] *** hchienjo joined
[09:20] *** dakkar joined
[09:20] *** perlawhirl left
[09:22] *** perlawhirl joined
[09:24] *** Sound joined
[09:24] *** Sound_ joined
[09:25] *** pochi left
[09:26] <u-ou> gn

[09:28] *** pochi joined
[09:29] *** perlawhirl left
[09:29] *** Cabanossi left
[09:31] *** rindolf joined
[09:31] *** g0d355__ joined
[09:31] *** Sound_ left
[09:31] *** Cabanossi joined
[09:36] *** g4 joined
[09:37] *** xtreak joined
[09:41] *** bjz joined
[09:41] *** Sound left
[09:42] *** jfuller joined
[09:42] *** jfuller left
[09:42] *** [ptc] joined
[09:45] <Geth> ¦ doc: 05576b7baf | (Wenzel P. P. Peppmeyer)++ | doc/Language/typesystem.pod6

[09:45] <Geth> ¦ doc: doc augment

[09:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/05576b7baf

[09:48] *** bpmedley joined
[09:48] *** Sound joined
[09:49] *** kent\n joined
[09:51] <El_Che> hello

[09:57] <abraxxa> zostay++ # DOM::Tiny release 0.3.3

[10:00] <IOninja> gfldex: in the real world, people use validators for catching messages instead of blocking users' browser.

[10:00] <IOninja> catching errors

[10:10] <IOninja> AlexDaniel, there's a ticket for div/mod's current behaviour. I knew you were gonna try them after my response :)

[10:17] *** astj_ joined
[10:17] *** astj left
[10:19] <gfldex> IOninja: I am not willing to work together with you anymore.

[10:20] *** astj_ left
[10:21] <IOninja> .tell AlexDaniel, the speculated behaviour for div/mod is both more involved than gcd/lcm and isn't implemented right: https://rt.perl.org/Ticket/Display.html?id=128428

[10:21] <yoleaux> IOninja: What kind of a name is "AlexDaniel,"?!

[10:21] *** astj joined
[10:21] *** astj left
[10:21] *** astj joined
[10:23] *** labster left
[10:24] <IOninja> gfldex, you never did. You work on your own and throw a shit fit anytime someones points out a flaw in your work. You're doing it now when I pointed out your assumptions block content for users when there's a simpler solution for your goal (a validator) just as you did when I pointed out a much simpler solution to your tables-for-layout in the TOC on the docs site (two lines of CSS code).

[10:30] *** xtreak left
[10:32] <IOninja> As for not being polite. I try hard to be polite, but I realize the apparent unpoliteness is one of the most obvious charecteristics of the mental illness I have.

[10:33] <IOninja> But if that's not up to par to the standards of this channel, I can leave.

[10:33] *** IOninja left
[10:33] *** xtreak joined
[10:33] <lizmat> and I was just about to say: IOninja, don't be such a drama queen  :-(

[10:34] *** lukaramu joined
[10:34] *** buggable left
[10:34] *** NeuralAnomaly left
[10:36] <Geth> ¦ ecosystem: melezhik++ created pull request #311: META.info --> META6.json

[10:36] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/311

[10:39] <Geth> ¦ ecosystem: 6a57b63750 | (Alexey Melezhik)++ | META.list

[10:39] <Geth> ¦ ecosystem: META.info --> META6.json

[10:39] <Geth> ¦ ecosystem: 

[10:39] <Geth> ¦ ecosystem: Sparrowdo::Chef::Client - canonical name  for META file

[10:39] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/6a57b63750

[10:39] <Geth> ¦ ecosystem: a61bb63f79 | astj++ | META.list

[10:39] <Geth> ¦ ecosystem: Merge pull request #311 from melezhik/master

[10:39] <Geth> ¦ ecosystem: 

[10:39] <Geth> ¦ ecosystem: META.info --> META6.json

[10:39] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a61bb63f79

[10:43] *** wamba left
[10:45] *** bjz_ joined
[10:45] *** Geth left
[10:45] *** gfldex joined
[10:46] *** Geth joined
[10:46] *** ChanServ sets mode: +v Geth

[10:47] *** bjz left
[10:48] *** TEttinger left
[10:48] *** perlawhirl joined
[11:03] *** domidumont left
[11:03] *** andrzejku left
[11:05] *** tojo joined
[11:08] *** andrzejku joined
[11:10] *** ChoHag left
[11:19] *** xtreak left
[11:34] *** bjz joined
[11:35] *** bjz_ left
[11:41] *** n1ce joined
[11:43] *** perlawhirl left
[11:44] *** perlawhirl joined
[11:55] *** nhywyll joined
[12:11] *** mcmillhj joined
[12:16] *** mcmillhj left
[12:17] *** TheovdH joined
[12:19] <TheovdH> IOninja: solved the problem with my code. Debugger problem remains. I wait for next Rak version

[12:20] *** araujo left
[12:21] *** araujo joined
[12:21] *** araujo left
[12:21] *** araujo joined
[12:36] *** andrzejku left
[12:37] *** domidumont joined
[12:40] *** mcmillhj joined
[12:42] *** wamba joined
[12:43] *** Sound left
[12:44] *** Cabanossi left
[12:46] *** domidumont1 joined
[12:46] *** Cabanossi joined
[12:49] <Geth> ¦ doc: 5cd3a24c4e | (Will "Coke" Coleda)++ | doc/Language/modules.pod6

[12:49] <Geth> ¦ doc: remove trailing whitespace

[12:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5cd3a24c4e

[12:49] *** domidumont left
[12:49] *** cdg joined
[12:52] <[Coke]> so, we can return a class of a type that doesn't exist in the calling scope; so we cannot declare the routine as returning that type (because it doesn't exist where the signature is compiled. (this is showing up in an example compilation error in make xtest). Is this a problem?

[12:53] <Geth> ¦ doc: 689fc71164 | (Will "Coke" Coleda)++ | doc/Language/typesystem.pod6

[12:53] <Geth> ¦ doc: fix typos

[12:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/689fc71164

[12:54] *** cdg left
[12:55] *** cdg joined
[12:55] *** AlexDaniel joined
[13:00] *** llfourn left
[13:04] *** cdg left
[13:07] *** ChoHag joined
[13:07] <AlexDaniel> .tell IOninja oh, didn't know about this ticket. Interesting. In any case, it seems that some software supports non-ints in lcm/gcd, so coercing the arguments to ints doesn't sound like a good idea

[13:07] <yoleaux> AlexDaniel: I'll pass your message to IOninja.

[13:10] <AlexDaniel> re perl 6 editor: I'd be happy to see something like this

[13:10] <AlexDaniel> I've been thinking about it for a while too

[13:12] <perlpilot> AlexDaniel: Just port Padre to Perl 6  ;-)

[13:15] *** skids joined
[13:18] *** nhywyll left
[13:25] *** bdmatatu joined
[13:27] *** bjz left
[13:35] *** lukaramu_ joined
[13:35] *** aborazmeh joined
[13:35] *** aborazmeh left
[13:35] *** aborazmeh joined
[13:39] *** lukaramu left
[13:40] <bdmatatu> Is it possible to return a list of two arrays from a sub, and assign them to two array vars? https://git.io/vyjei

[13:44] *** travis-ci joined
[13:44] <travis-ci> Doc build errored. Will "Coke" Coleda 'fix typos'

[13:44] <travis-ci> https://travis-ci.org/perl6/doc/builds/213816716 https://github.com/perl6/doc/compare/5cd3a24c4ea7...689fc71164a0

[13:44] *** travis-ci left
[13:44] <m44st4> personne veut parler d'aslr ? :D

[13:46] <jnthn> m: sub foo() { return [1,2,3], [4,5,6] }; my (@a, @b) := foo(); say @a; say @b;

[13:46] <camelia> rakudo-moar 027aa5: OUTPUT: «[1 2 3]␤[4 5 6]␤»

[13:46] <jnthn> bdmatatu: ^^

[13:47] <bdmatatu> Thanks!

[13:49] *** cdg joined
[13:51] *** g4 left
[14:00] *** Cabanossi left
[14:01] *** Cabanossi joined
[14:09] *** Sound joined
[14:11] *** aborazmeh left
[14:15] *** hchienjo left
[14:16] *** tojo left
[14:16] *** mcmillhj left
[14:18] *** mcmillhj joined
[14:23] *** wamba left
[14:23] <ilmari> m: say 23!

[14:23] <camelia> rakudo-moar 027aa5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus postfix␤at <tmp>:1␤------> 3say 237⏏5!␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement modifier␤        state…»

[14:23] <ilmari> huh, no built-in factorial?

[14:24] <timotimo> nope

[14:26] *** eroux joined
[14:27] <ilmari> m: sub postfix:<!>($x where * > 0) { [*] 1..$x ] } say 23!

[14:27] <camelia> rakudo-moar 027aa5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3postfix:<!>($x where * > 0) { [*] 1..$x 7⏏5] } say 23!␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        s…»

[14:27] <ilmari> m: sub postfix:<!>($x where * > 0) { [*] 1..$x } say 23!

[14:27] <camelia> rakudo-moar 027aa5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3ostfix:<!>($x where * > 0) { [*] 1..$x }7⏏5 say 23!␤    expecting any of:␤        infix␤        infix stopper␤  …»

[14:28] <ilmari> m: sub postfix:<!>($x where * > 0) { [*] 1..$x }; say 23!

[14:28] <camelia> rakudo-moar 027aa5: OUTPUT: «25852016738884976640000␤»

[14:28] *** v1_ left
[14:29] *** mattr joined
[14:31] *** hchienjo joined
[14:35] * [Coke] uses perl6 to automate some data extraction at work, coworkers are very thankful (though they have no idea what Perl 6 is)

[14:35] *** robertle left
[14:36] *** mcsnolte joined
[14:38] *** perlawhirl left
[14:40] *** cdg_ joined
[14:42] *** cdg left
[14:43] *** sukrishn joined
[14:43] *** robertle joined
[14:43] <sukrishn> What is the best way to maintain perl6 on Centos7? 

[14:43] *** Cabanossi left
[14:44] <sukrishn> It does not seem to be present in any standard repos (incl epel)

[14:45] <[Coke]> sukrishn: if it's not a port you can install, you can use Rakudo Star, or install the compiler yourself from source.

[14:45] * [Coke] hurls https://perl6.org/downloads/

[14:46] <[Coke]> Probably need "installing from source" there.

[14:46] *** Cabanossi joined
[14:47] *** domidumont joined
[14:49] <timotimo> we do have el_che's packages

[14:49] <timotimo> i believe they also include rpm packages

[14:50] *** domidumont1 left
[14:50] *** sukrishn left
[14:50] *** araraloren joined
[14:57] *** curan left
[15:02] *** sena_kun joined
[15:15] *** tokomer joined
[15:15] <hord> guten tag, sixxers.  i'm thinking about doing an ANSI string class today.

[15:16] <timotimo> ansi string class?

[15:16] <timotimo> what's that?

[15:16] <hord> strings that will auto-escape into ANSI color sequences

[15:22] *** wamba joined
[15:23] <timotimo> i don't understand what that means

[15:25] <hord> i was thinking something like this:  my $s = Str::ANSI.new('foo').fg(BLUE).bright.bg(BLACK).blink; say $s;  # prints foo in bright blue on gray

[15:26] <timotimo> oh

[15:26] <timotimo> yeah, that sounds easy

[15:27] <hord> i was thinking it should be and then i was thinking about adding an ANSI Pod formatter

[15:27] <DrForr> It'd be easy to export colors and fg(), bg(), bright() &c.

[15:27] <masak> was gonna say

[15:27] <hord> perl5 has one (Pod::Text::Color::Delight)

[15:27] <masak> nothing that requires putting the string in an object, really

[15:27] <hord> the string is already an object?

[15:28] <DrForr> Well, chaining method calls is a little different.

[15:28] <masak> DrForr: well, if you like the syntax, then you can "foo".&fg().&bright etc

[15:29] <hord> the attributes for the ANSI escape surround the string.  there'd be an auto \x27 maybe

[15:29] <masak> hord: yes, but that's not the point I'm making ;)

[15:29] <hord> i don't like leaving codes open

[15:29] <timotimo> Pod::To::Text formats stuff with ANSI escape sequences

[15:29] <masak> (that it's an object)

[15:30] <masak> using ordinary subroutines you could easily have it always surround the string and never nest things wrong, I'm pretty sure

[15:30] <hord> i don't think so.  some codes are stacked.

[15:30] <hord> like there are 3 different color modes

[15:30] <masak> maybe you're right and your way would be simpler

[15:30] <hord> and some require using the blink and bright attributes to determine which color

[15:31] <masak> code it up and see ;)

[15:31] <hord> it depends on how accurate and conformal you want to be

[15:31] <masak> you'll want to have a .Str method to have your object stringify when printed

[15:31] <hord> technically every color can be specified using RGB if the term supports it

[15:31] <masak> or is that .gist -- or both? don't remember

[15:33] <hord> i think that's what i'm going to lear today :)

[15:33] <hord> learn*

[15:33] <geekosaur> technically rgb can't reach all displayable colors :) cie can reach more

[15:33] <geekosaur> (no colorspace can reach all of them)

[15:34] <hord> i actually know very little about colors.  anything other than RGB is kinda out of my depth.

[15:35] <hord> monitors can't technically produce real colors anyway.  it's always an artificial mix of mono bands.

[15:37] <timotimo> i haven't heard of cie yet

[15:39] <hord> maybe colors should just be indexed from the planck scale.  it'd require a large space but would be quite accurate.

[15:40] *** wtw_ joined
[15:40] <hord> you would even be able to draw in x-ray and radio

[15:40] <geekosaur> https://en.wikipedia.org/wiki/CIE_1931_color_space

[15:41] *** wtw left
[15:43] *** mcmillhj left
[15:46] *** mcmillhj joined
[15:50] *** mattr left
[15:50] *** mcmillhj left
[15:53] *** broquaint joined
[15:57] *** mcmillhj joined
[16:08] *** araraloren left
[16:10] *** adu joined
[16:11] *** huggable joined
[16:11] *** ChanServ sets mode: +v huggable

[16:12] *** buggable joined
[16:12] *** ChanServ sets mode: +v buggable

[16:14] *** NeuralAnomaly joined
[16:14] *** ChanServ sets mode: +v NeuralAnomaly

[16:20] *** profan_ is now known as profan

[16:23] *** eroux left
[16:23] <ugexe> SmokeMachine: most of the stuff in each command of Zef::CLI is reporting. You can Zef::Client.new(a few options).install(...) if you want to use a single command

[16:24] <ugexe> or even `&Zef::CLI::MAIN('install', ...)`

[16:25] <ugexe> see: https://github.com/ugexe/zef/blob/master/xt/install.t

[16:26] *** khw joined
[16:27] *** labster joined
[16:29] *** eroux joined
[16:30] <SmokeMachine> ugexe: the mains aren't "our", are they?

[16:31] <ugexe> SmokeMachine: yeah thats true... Zef::CLI is a little weird because of the MAINs in a module so i'm not really sure if &MAIN will work

[16:31] <ugexe> they are exported though

[16:31] *** mako7823 joined
[16:32] *** mako7823 left
[16:32] *** domidumont left
[16:37] <SmokeMachine> ugexe: this may cause some problem when I use that... may conflict with my own main... probably?

[16:38] <ugexe> SmokeMachine: maybe, maybe not. it would depend on which MAINs get seen first! heh

[16:38] <ugexe> e.g. if you `use Zef::CLI; use Zef::CLI::CopyCat` only one set of MAINs will used in the USAGE

[16:38] <ugexe> but it sounds like you just want to use Zef::Client

[16:39] <ugexe> &MAIN()s really just use Zef::Client, but report on various things

[16:39] <SmokeMachine> star: use Zef::CLI; multi MAIN("my-own") {}

[16:39] <camelia> star-m 2016.10: OUTPUT: «===SORRY!===␤Could not find Zef::CLI at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/star-2016.10/share/perl6/site␤    /home/camelia/star-2016.10/share/perl6/vendor␤    /home/camelia/star-2016.10/share/perl6␤    CompUnit::Repository::Abs…»

[16:40] <ugexe> right, Zef::CLI is loaded before your MAIN there

[16:40] <ugexe> it would have to be `use Module::With::My::Main; use Zef::CLI;` or maybe `use Zef::CLI; BEGIN MAIN(...) { };

[16:40] <ugexe> but again, just use Zef::Client

[16:43] <SmokeMachine> ugexe: I know Im asking too much.... but would it be possible to create something like Zef::Commands and make Zef::CLI only run the respective command from Zef::Commands?

[16:43] <SmokeMachine> ugexe: if so, some one could Zef::Commands.install("some::module")

[16:44] *** wdna left
[16:45] *** Cabanossi left
[16:46] *** Cabanossi joined
[16:46] *** huf_ is now known as huf

[16:48] *** bdmatatu left
[16:52] <ugexe> it required duplicating all the identifiers

[16:52] <ugexe> requires^

[16:52] <ugexe> otherwise you have one or the other that is mostly undocuments params from a slurpy %_

[16:54] <ugexe> you should be able to scope in those MAINs lexically anyways i'd think. my $install = "Foo" but :: role { require Zef::CLI; Zef::CLI::MAIN("install" ...) } or something

[16:55] *** bdmatatu joined
[16:59] *** domidumont joined
[17:00] <ugexe> SmokeMachine: maybe a multi for Zef::Client.install could be the right place for such logic though...

[17:03] *** raschipi joined
[17:03] <SmokeMachine> ugexe: that would be great too... have 1 method that makes everything needed to install a module...

[17:03] <ugexe> .install already has that

[17:04] <ugexe> https://github.com/ugexe/zef/blob/master/xt/install.t#L38-L44

[17:06] *** hchienjo left
[17:09] *** domidumont left
[17:16] *** labster left
[17:41] *** domidumont joined
[17:49] *** labster joined
[17:49] <moritz> m: sub foo(\x) { say x.VAR.name }; foo my &a;

[17:49] <camelia> rakudo-moar 027aa5: OUTPUT: «&a␤»

[17:49] <moritz> can I get that to work with multiple args as well?

[17:49] <moritz> m: sub foo(*@a) { for @a -> \x { say x.VAR.name } }; foo my (&a, &b);

[17:49] <camelia> rakudo-moar 027aa5: OUTPUT: «<element>␤<element>␤»

[17:50] <moritz> ah, with capture args

[17:50] *** lizmat left
[17:50] <moritz> m: sub foo(|c) { for c -> \x { say x.VAR.name } }; foo my (&a, &b);

[17:50] <camelia> rakudo-moar 027aa5: OUTPUT: «&a␤&b␤»

[17:50] <El_Che> lo

[17:52] <hord> not exactly the coolest or most challenging... but i'd welcome comments: http://fpaste.scsys.co.uk/557616

[17:53] <raschipi> hord: needs more POD

[17:53] *** synopsebot6 joined
[17:53] *** ChanServ sets mode: +v synopsebot6

[17:53] <hord> and constants

[17:55] <El_Che> timotimo: the repo has Centos7 and Fedora25 rpms (next to Debian 8, Ubuntu 16.04 and 16.10 debs)

[17:55] *** abraxxa left
[17:55] *** lizmat joined
[17:55] <El_Che> timotimo: adding new OSes when tuits available and enough time

[17:55] <[Coke]> buggable: eco ANSI

[17:55] <buggable> [Coke], Found 4 results: Term::ANSIColor, Terminal::ANSIColor, RPi::Device::PiFace, IRC::TextColor. See https://modules.perl6.org/#q=ANSI

[17:57] <El_Che> buggable: deb

[17:57] <El_Che> buggable: eco

[17:57] <buggable> El_Che, Out of 802 Ecosystem dists, 0 have warnings, 0 have errors, and 683 have no tags in META file. See https://modules.perl6.org/update.log for details

[17:57] *** dakkar left
[17:57] <El_Che> nice

[18:00] <timotimo> huggable: deb

[18:00] <huggable> timotimo, CentOS and Debian Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[18:01] <El_Che> can it be edited? Added Fedora and Debian yesterday

[18:01] <sena_kun> there are 800+ modules already, wow.

[18:02] <timotimo> but it already says "Debian" in there

[18:02] <timotimo> i think you can literally just "huggable: deb :is: new text goes here"

[18:04] <El_Che> let's try

[18:04] *** bjz joined
[18:04] <El_Che> huggable: deb :is: CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[18:04] <huggable> El_Che, Added deb as CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[18:04] <El_Che> deb

[18:04] <El_Che> huggable: deb

[18:04] <huggable> El_Che, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[18:04] <El_Che> timotimo++

[18:05] <El_Che> huggable: rpm :is: CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[18:05] <huggable> El_Che, Added rpm as CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[18:07] <raschipi> There's a bug in the Debian package: it's missing a link to perl6.org. Otherwise, nice package.

[18:11] *** zakharyas left
[18:12] *** hord left
[18:12] <El_Che> raschipi: you see http://example.com/no-uri-given ?

[18:12] <raschipi> Yes, that should be changed.

[18:13] <El_Che> raschipi: yes, that can be done. Although the packages are not "official", I guess no one would mine pointing to perl6.org?

[18:14] <raschipi> Debian policy just says you put the pŕoject URl there.

[18:15] <AlexDaniel> fwiw, rakudo 2016.12 will be in the next debian release

[18:15] <AlexDaniel> which is going to happen… soonish!

[18:17] <raschipi> 2017.02 is in experimental, can't be uploaded to sid until the release.

[18:19] *** cdg_ left
[18:19] <El_Che> I wonder if I should point the url to perl6 or to rakudo. I think that at this stage, perl6 makes more sense (and it links to rakudo)

[18:21] <raschipi> What is it that's shipped with MoarVM that debian has to strip for licensing concerns before shipping?

[18:22] <ilmari> raschipi: is there? I'd thought they'd just stripped the bundled libraries and link against the system ones

[18:22] <ilmari> per debian policy

[18:22] *** gregf_ left
[18:22] *** bjz left
[18:22] <[ptc]> raschipi: there already exists a libtommath library in Debian and they rearrange things to link to that

[18:22] *** ChoHag left
[18:23] <El_Che> what completely makes sense of course

[18:23] <ilmari> https://anonscm.debian.org/cgit/pkg-rakudo/pkg-moarvm.git/tree/debian/README.source

[18:23] <raschipi> They had a bad time because of that in the past.

[18:24] <ilmari> it's not actuallly about license, despite the 'dfsg' in the version number

[18:24] <mst> raschipi: yeah, but they consider those to be bugs and prefer maintaining a single version of any given library

[18:24] <ilmari> that's just the traditional term when removing things from the upstream tarball

[18:26] <raschipi> Yeah, I thouth they used other string when repackaging for non-dfsg concerns.

[18:27] <raschipi> It's useful when upstream ships a version Debian can use without repackaging because any signatures the developers put on it would still be valid. 

[18:29] <El_Che> (raschipi: rebuilding the packages)

[18:29] <raschipi> It's also useful because when debian does a reproducible build with it, it would be valid for everyone. When Debian has to repackage, their Reproducible build isn't useful outside of debian.

[18:30] <El_Che> for non-distro building are the included deps nice. No hunting around those is a win

[18:30] <raschipi> Yes, but it would be nice to ship both...

[18:33] <raschipi> Put the deps in secondary git trees, so it could be checked out without them.

[18:46] *** espadrine joined
[18:48] *** pecastro_ left
[18:56] <raschipi> u: 👁

[18:56] <unicodable6> raschipi, U+1F441 EYE [So] (👁)

[18:57] <AlexDaniel> u: nose

[18:57] <unicodable6> AlexDaniel, U+2FD0 KANGXI RADICAL NOSE [So] (⿐)

[18:57] <unicodable6> AlexDaniel, U+1DA07 SIGNWRITING FACE DIRECTION POSITION NOSE FORWARD TILTING [Mn] (◌𝨇)

[18:57] <unicodable6> AlexDaniel, 11 characters in total: https://gist.github.com/323983e04121b588c4067a5458f63e5d

[18:57] <AlexDaniel> 🐽? :o

[18:59] *** andrzejku joined
[18:59] <raschipi>  👁🐽👁

[19:00] <Geth> ¦ doc: c52bbd6a9a | (Zoffix Znet)++ | doc/Programs/01-debugging.pod6

[19:00] <Geth> ¦ doc: List trace pragma in Debugging

[19:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c52bbd6a9a

[19:11] *** setty1 joined
[19:12] <Geth> ¦ doc: 6af76b90f8 | (Zoffix Znet)++ | doc/Type/Any.pod6

[19:12] <Geth> ¦ doc: Remove trailing blank lines

[19:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6af76b90f8

[19:12] <geekosaur> first radical beans, now radical noses?

[19:17] *** labster left
[19:17] <Geth> ¦ doc: d199f5ee38 | (Zoffix Znet)++ | doc/Type/Any.pod6

[19:17] <Geth> ¦ doc: Document Any.minpairs/.maxpairs

[19:17] <Geth> ¦ doc: 

[19:17] <Geth> ¦ doc: Impl: https://github.com/rakudo/rakudo/commit/5927186d31

[19:17] <Geth> ¦ doc: Tests: https://github.com/rakudo/rakudo/commit/8d06b8a13c

[19:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d199f5ee38

[19:17] *** Actualeyes left
[19:18] *** bjz joined
[19:18] *** cibs left
[19:20] *** Sound left
[19:20] *** cibs joined
[19:22] <RabidGravy> :-|

[19:24] *** darutoko left
[19:25] *** shdb joined
[19:26] *** TEttinger joined
[19:35] <Geth> ¦ doc: 26fb9ca14d | (Zoffix Znet)++ | doc/Type/Setty.pod6

[19:35] <Geth> ¦ doc: Document Setty.maxpairs/.minpairs

[19:35] <Geth> ¦ doc: 

[19:35] <Geth> ¦ doc: Tests https://github.com/perl6/roast/commit/11626cb3e2

[19:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/26fb9ca14d

[19:40] *** cibs left
[19:42] *** Sound joined
[19:42] *** cibs joined
[19:43] *** tokomer left
[19:43] *** travis-ci joined
[19:44] <travis-ci> Doc build passed. Zoffix Znet 'List trace pragma in Debugging'

[19:44] <travis-ci> https://travis-ci.org/perl6/doc/builds/213964765 https://github.com/perl6/doc/compare/689fc71164a0...c52bbd6a9a88

[19:44] *** travis-ci left
[19:45] *** perlawhirl joined
[19:46] *** bjz left
[19:55] *** travis-ci joined
[19:55] <travis-ci> Doc build passed. Zoffix Znet 'Remove trailing blank lines'

[19:55] <travis-ci> https://travis-ci.org/perl6/doc/builds/213968774 https://github.com/perl6/doc/compare/c52bbd6a9a88...6af76b90f8c8

[19:55] *** travis-ci left
[20:04] *** eroux left
[20:04] *** zacts left
[20:06] *** eroux joined
[20:08] *** bdmatatu left
[20:09] *** travis-ci joined
[20:09] <travis-ci> Doc build errored. Zoffix Znet 'Document Any.minpairs/.maxpairs

[20:09] <travis-ci> https://travis-ci.org/perl6/doc/builds/213970643 https://github.com/perl6/doc/compare/6af76b90f8c8...d199f5ee3893

[20:09] *** travis-ci left
[20:15] *** perlawhirl left
[20:19] *** Sound left
[20:20] *** Sound joined
[20:21] *** rindolf left
[20:24] *** labster joined
[20:27] *** domidumont left
[20:28] <DrForr> Hrm. How would I go about defining an equality operator on sets? multi infix:<==>( Math::Peano $a, Math::Peano $b){} seems to try to coerce $a to Numeric even though the class is defined.

[20:28] <El_Che> is Perl 6 JIT 64-bit only or it it a rakudo star thing?

[20:29] *** adu left
[20:29] <AlexDaniel> El_Che: 64-bit only

[20:30] <skids> Last I looked JIT was only on 64bit.  But it's not a language-level restirction of course.

[20:30] <El_Che> thx

[20:31] *** travis-ci joined
[20:31] <travis-ci> Doc build passed. Zoffix Znet 'Document Setty.maxpairs/.minpairs

[20:31] <travis-ci> https://travis-ci.org/perl6/doc/builds/213976247 https://github.com/perl6/doc/compare/d199f5ee3893...26fb9ca14d4a

[20:31] *** travis-ci left
[20:34] <timotimo> DrForr: probably because the operator isn't available where things happen?

[20:35] <AlexDaniel> m: class Peano { has $.x }; multi infix:<==>( Peano $a, Peano $b) { $a.x + $b.x }; say Peano.new(:5x) == Peano.new(:8x)

[20:35] <camelia> rakudo-moar 6a77cd: OUTPUT: «13␤»

[20:35] <DrForr> Oh, I probably need to export.

[20:35] <AlexDaniel> generally it should work

[20:36] <DrForr> Yep, export issue.

[20:36] <AlexDaniel> \o/

[20:36] <DrForr> ^5

[20:37] <timotimo> ^5

[20:38] *** wamba left
[20:41] <AlexDaniel> ^6

[20:41] <AlexDaniel> my range is bigger :P

[20:42] <DrForr> Quit bragging. :)

[20:43] <AlexDaniel> ok-ok

[20:43] <timotimo> are we singers now?

[20:43] * AlexDaniel goes back to his bigger cave

[20:45] *** spebern joined
[20:46] *** Tonik joined
[20:59] *** andrzejku left
[21:02] *** skids left
[21:03] *** raschipi left
[21:04] *** mitchum left
[21:05] <SmokeMachine> ugexe: is there a way to run zen --to=inst#./bla --depsonly install .  and it install the deps on that dir even if the modules are already installed?

[21:06] *** mitchum joined
[21:07] <El_Che> raschipi: https://github.com/nxadm/rakudo-pkg/releases/tag/2017.03_02 <-- added perl6 url to the pkg info

[21:13] *** TEttinger left
[21:15] *** Cabanossi left
[21:17] *** Cabanossi joined
[21:17] *** mcmillhj left
[21:31] *** Sound left
[21:35] *** mcmillhj joined
[21:43] *** sena_kun left
[21:48] *** mcmillhj left
[21:50] *** mcmillhj joined
[21:55] *** mcmillhj left
[21:55] *** john51 joined
[21:57] *** john51 left
[21:58] *** alimon left
[21:58] *** Tonik left
[22:00] *** john51 joined
[22:01] *** plicease joined
[22:05] *** NeuralAnomaly left
[22:05] *** buggable left
[22:05] *** huggable left
[22:05] *** Geth left
[22:06] *** plicease left
[22:06] *** leego left
[22:07] *** hoelzro left
[22:10] *** adrusi left
[22:10] *** mcmillhj joined
[22:10] *** n1ce left
[22:13] *** plicease joined
[22:16] *** RabidGravy left
[22:22] *** adrusi joined
[22:23] *** hoelzro joined
[22:23] *** leego joined
[22:24] *** hobbs joined
[22:24] *** mcmillhj left
[22:31] <ugexe> SmokeMachine: Other than using `--force` not yet, but i've thought about it

[22:35] *** mcmillhj joined
[22:37] *** llfourn joined
[22:39] *** leedo joined
[22:39] *** leedo left
[22:40] *** mcmillhj left
[22:41] *** mcmillhj joined
[22:46] *** mcmillhj left
[22:49] *** grumble is now known as grumble2

[22:49] *** grumble2 is now known as grumble

[22:51] *** mcsnolte left
[22:57] *** bjz joined
[22:57] *** mcmillhj joined
[22:57] <SmokeMachine> Is there any idea of using zef to do something like node's npm?

[22:58] *** perlawhirl joined
[22:59] *** Geth joined
[22:59] *** ChanServ sets mode: +v Geth

[23:00] *** spebern left
[23:01] <ugexe> i dont know what you mean

[23:02] *** mcmillhj left
[23:03] *** sufrostico left
[23:03] *** huggable joined
[23:03] *** ChanServ sets mode: +v huggable

[23:03] *** buggable joined
[23:03] *** ChanServ sets mode: +v buggable

[23:03] *** sufrosti1o left
[23:04] *** NeuralAnomaly joined
[23:04] *** ChanServ sets mode: +v NeuralAnomaly

[23:04] *** sufrosti2o left
[23:04] *** Kaffe_ joined
[23:07] *** ChoHag joined
[23:08] *** Actualeyes joined
[23:15] *** Cabanossi left
[23:15] <SmokeMachine> ugexe: I mean something like Carton

[23:15] *** sufrostico joined
[23:17] *** Cabanossi joined
[23:17] <ugexe> that doesnt tell me what you're looking for

[23:18] *** sufrosti1o joined
[23:19] *** sufrosti2o joined
[23:23] *** mcmillhj joined
[23:28] *** mcmillhj left
[23:32] *** BenGoldberg joined
[23:32] <SmokeMachine> ugexe: id like to run: something install Heap --save; and that installs Heap into someplace inside my current dir and add Heap on META6.json's depends... run: something exec perl6 -MHeap -e 'say Heap.new: <q w e>'; and it run the code using the Heap installed inside the current dir...

[23:33] *** miatomi joined
[23:34] *** espadrine left
[23:36] <SmokeMachine> ugexe: something like this first prototype: https://github.com/FCO/6pm/blob/master/6pm

[23:36] <SmokeMachine> (I know, it's terrible, but I was just trying the idea...)

[23:38] <ugexe> yeah thats the idea. there is just no -L flag to ignore repositories when doing a dependency lookup

[23:38] <ugexe> yet anyway

[23:39] <SmokeMachine> ?

[23:40] <ugexe> for --install-to to install all depdencies

[23:44] *** mcmillhj joined
[23:47] <SmokeMachine> ugexe: are there any idea to write something like that? Or to include something like that on zef?

[23:49] *** mcmillhj left
[23:51] *** sufrostico left
[23:52] *** sufrostico joined
[23:57] <ugexe> sure. maybe you can beat me to it... it would only take 2 or 3 lines of code additions/edits I think. just have to find them

[23:58] *** mcmillhj joined
