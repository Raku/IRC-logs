[00:02] <geekosaur> you haven't tried to use a C dependency on Windows, have you? (it's not just language; start with just finding the @#$% DLL...)

[00:03] *** wamba joined
[00:04] *** mcmillhj left
[00:04] *** notbenh joined
[00:05] <zengargoyle> can you not put C in a DLL and have it in your $?RESOURCES or whatnot?

[00:07] <geekosaur> it necessarily gets renamed, then something like gtk that relies on runtime loading of stuff breaks because the dll has the wrong name

[00:08] <geekosaur> but, you still have to get the stuff built. (a) windows does not come with a c compiler (b) neither does rakudo (c) if you try to make a user build gtk or readline, they will kill you (d) if you try to build it as part of a module install, you will want to kill yourself

[00:10] <zengargoyle> ah, gotcha.

[00:11] *** notbenh left
[00:11] <geekosaur> and if you download it, you get to hope it didn't change incompatibility (especially fun with gtk3, which doesn't have a stable api or abi unless the gnome devs finally got a clue)

[00:12] <zengargoyle> i haven't tried, but i've thought about just copying some .so i need and pretending i built it like with LibraryMake just making sure the're all loaded.

[00:14] *** notbenh joined
[00:14] <zengargoyle> things like LD_LIBRARY_PATH and LD_PRELOAD usually work for me when some extreme trickery is needed.  (but you do sometimes have to set ENV and re-exec yourself.

[00:15] <geekosaur> glwt on windows

[00:21] *** notbenh left
[00:22] <Zoffix> Doc site isn't updating for some reason

[00:24] <Zoffix> oh, some reason = hack is ded

[00:24] <Zoffix> can't ssh

[00:26] *** Actualeyes left
[00:27] <Zoffix> Anyone got the keys to the thing that fixes things on it? :)

[00:27] *** notbenh joined
[00:31] <Zoffix> .tell timotimo no one's around ATM and I dunno when you'll get this message, but hack is ded and docs ain't building. Would you restart it, please?

[00:31] <yoleaux> Zoffix: I'll pass your message to timotimo.

[00:35] *** lookatme joined
[00:36] *** setty1 left
[00:37] <lookatme> morning

[00:43] *** ijneb joined
[00:43] <ijneb> If I have two loops to go through every pixel in a picture

[00:43] <ijneb> What's the best way to modify that so that I can go through 10 pixels at a time in parallel

[00:46] <AlexDaniel> ijneb: have you tried .hyper or .race?

[00:46] <MasterDuke> ijneb: instead of something like: `for @a { for @b { } }`, you could try `for @a.race(:10batch) { for @b.race(:10batch) { } }`

[00:49] <ijneb> I've never used this, I'll play around with it -- thanks guys

[00:49] <lookatme> looks cool :)

[00:50] *** notbenh left
[00:52] *** char_var[buffer] left
[00:59] *** wamba left
[00:59] *** notbenh joined
[00:59] *** aborazmeh left
[00:59] *** wtw_ joined
[00:59] *** shadowpaste left
[00:59] *** mcmillhj joined
[00:59] *** alnewkirk left
[01:00] *** wtw left
[01:00] *** shadowpaste joined
[01:00] *** aborazmeh joined
[01:00] *** aborazmeh left
[01:00] *** aborazmeh joined
[01:01] <lookatme> m: for [1..10].hyper(:5batch) -> $x { say $*THREAD, " GOT $x"; }

[01:01] <camelia> rakudo-moar 674551: ( no output )

[01:02] <lookatme> m: for [1..10].hyper(:5batch) -> $x { say $*THREAD, " GOT $x"; }; sleep 5;

[01:02] <camelia> rakudo-moar 674551: ( no output )

[01:02] <ijneb> I'm confused

[01:02] <ijneb> Why isn't https://gist.github.com/anonymous/efb38a09d136ac5699003832b0f14cd3 giving any output

[01:02] <lookatme> But why it not working if I remove the around parentheses

[01:02] <lookatme> m: (for [1..10].hyper(:5batch) -> $x { say $*THREAD, " GOT $x"; }); sleep 5;

[01:03] <camelia> rakudo-moar 674551: OUTPUT: «Thread #4 GOT 1␤Thread #5 GOT 6␤Thread #4 GOT 2␤Thread #5 GOT 7␤Thread #4 GOT 3␤Thread #4 GOT 4␤Thread #5 GOT 8␤Thread #4 GOT 5␤Thread #5 GOT 9␤Thread #5 GOT 10␤»

[01:05] *** mcmillhj left
[01:07] *** astj joined
[01:07] *** mcsnolte left
[01:10] <lookatme> ijneb, https://glot.io/snippets/eshzzzsc2k

[01:10] <AlexDaniel> interesting, it seems to throw it away in sink context

[01:11] <ijneb> weird

[01:11] <lookatme> I added the parentheses and it works fine. :)

[01:12] <AlexDaniel> it may be a bug, I'm not sure

[01:12] <ijneb> if it's on multiple lines, it doesn't seem to work

[01:12] *** colomon left
[01:14] *** mcmillhj joined
[01:15] <ijneb> weird, still doesn't work for me

[01:15] <lookatme> m: say for [1..10].hyper(:5batch) -> $x { say $*THREAD, " GOT $x"; }; sleep 5;

[01:15] <camelia> rakudo-moar 674551: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or use an explicit invocant or argument, or use &say to refer to the function as a noun␤at <tmp>:1␤--…»

[01:15] <lookatme> m: say do for [1..10].hyper(:5batch) -> $x { say $*THREAD, " GOT $x"; }; sleep 5;

[01:15] <camelia> rakudo-moar 674551: OUTPUT: «Thread #5 GOT 6␤Thread #4 GOT 1␤Thread #5 GOT 7␤Thread #4 GOT 2␤Thread #5 GOT 8␤Thread #5 GOT 9␤Thread #4 GOT 3␤Thread #5 GOT 10␤Thread #4 GOT 4␤Thread #4 GOT 5␤()␤»

[01:15] <lookatme> yeah, it doesn't work in sink context

[01:16] <lookatme> m: for [1..10].hyper(:5batch) -> $x { say $*THREAD-DDDD; }; sleep 5;

[01:16] <camelia> rakudo-moar 674551: ( no output )

[01:18] <lookatme> AlexDaniel, and it not found that syntax error  ^^^

[01:19] <lookatme> it's like a over optimization

[01:19] *** mcmillhj left
[01:20] <AlexDaniel> lookatme: it's just how dynamic variables work

[01:20] <AlexDaniel> so there's no compile-time check

[01:20] <AlexDaniel> ( relevant docs: https://docs.perl6.org/language/variables#The_*_Twigil )

[01:20] <lookatme> oh, I forgot it

[01:20] <lookatme> sorry

[01:21] <lookatme> :S

[01:21] <ijneb> so

[01:22] <AlexDaniel> would be nice to have a ticket for hyper/race thingy, then we will probably see if it's actually a bug or not :)

[01:22] <ijneb> any other way to do this? lol

[01:23] <AlexDaniel> ijneb: you can use .map instead of for and then you don't have to worry about it being in sink context

[01:23] <AlexDaniel> m: <5 8 9>.race.map({ .say })

[01:23] <camelia> rakudo-moar 674551: OUTPUT: «5␤8␤9␤»

[01:24] <lookatme> m: do for [1..10].hyper(:5batch) -> $x { say $*THREAD; }; sleep 5;

[01:24] <camelia> rakudo-moar 674551: OUTPUT: «Thread #4␤Thread #4␤Thread #5␤Thread #4␤Thread #5␤Thread #4␤Thread #5␤Thread #4␤Thread #5␤Thread #5␤»

[01:25] <lookatme> It can be done add `do` before `for` loop

[01:25] <lookatme> :)

[01:26] <ijneb> oh, thanks lookatme

[01:27] <lookatme> you welcome. I don't know that .hyper or .race before :)

[01:27] *** aborazmeh left
[01:32] <AlexDaniel> actually

[01:32] <AlexDaniel> c: HEAD for <a b c>.hyper { say 2 }

[01:32] <committable6> AlexDaniel, ¦HEAD(6745517): «»

[01:32] <AlexDaniel> c: 2016.06 for <a b c>.hyper { say 2 }

[01:32] <committable6> AlexDaniel, ¦2016.06: «2␤2␤2»

[01:32] <AlexDaniel> may be a regression

[01:33] <AlexDaniel> bisect: for <a b c>.hyper { say 2 }

[01:33] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=6745517) because on both starting points the exit code is 0

[01:34] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/deb67cc94b8841ba39b42a040aaf02ce

[01:34] <bisectable6> AlexDaniel, (2017-06-15) https://github.com/rakudo/rakudo/commit/9b0b9effe5fee1f35497cf97a5e7bda9bb083507

[01:34] <AlexDaniel> yep, I guess so

[01:34] <AlexDaniel> c: 9b0b9effe5^,9b0b9effe5 for <a b c>.hyper { say 2 }

[01:34] <committable6> AlexDaniel, ¦9b0b9effe5^: «2␤2␤2» ¦9b0b9ef: «»

[01:34] <AlexDaniel> I'll submit a ticket

[01:35] <lookatme> AlexDaniel++

[01:37] *** notbenh left
[01:38] *** mcmillhj joined
[01:38] *** notbenh joined
[01:41] <AlexDaniel> okay, RT #131865

[01:41] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131865

[01:41] <AlexDaniel> ijneb: thanks :)

[01:44] <ijneb> AlexDaniel: Thanks for taking notice c;

[01:46] *** rurban joined
[01:47] *** ilbot3 left
[01:47] *** raschipi joined
[01:48] *** Actualeyes joined
[01:51] *** rurban left
[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:51] *** raschipi left
[01:52] *** notbenh left
[01:53] *** cdg joined
[01:55] *** Actualeyes left
[01:57] *** notbenh joined
[02:02] *** mcmillhj left
[02:03] *** aborazmeh joined
[02:04] *** aborazmeh left
[02:04] *** aborazmeh joined
[02:12] *** noganex_ joined
[02:13] *** Actualeyes joined
[02:15] *** noganex left
[02:33] *** andreoss left
[02:35] *** aborazmeh left
[02:38] *** aborazmeh joined
[02:38] *** aborazmeh left
[02:38] *** aborazmeh joined
[02:53] *** k-man left
[02:55] *** k-man joined
[03:05] *** astronav_ joined
[03:06] <astronav_> perl6 people: what are you guys using it for?

[03:08] *** pilne left
[03:18] *** Cabanossi left
[03:21] *** Cabanossi joined
[03:24] *** skids left
[03:24] *** cdg left
[03:33] *** pharv_ joined
[03:38] <lookatme> astronav_, for fun

[03:41] *** pharv_ left
[03:47] *** pharv_ joined
[03:50] *** Arlenik joined
[03:52] <Arlenik> hi, i'm trying to rewrite this Haskell code in Perl6:  https://repl.it/KCbm

[03:52] <Arlenik> this is what i've got so far:  https://glot.io/snippets/esi4g6p6ay

[03:53] <Arlenik> which isn't correct

[04:03] <BenGoldberg> m: my $fizzes := ("", "", "fizz") ... *; say $fizzes[^5]

[04:03] <camelia> rakudo-moar 674551: OUTPUT: «(  fizz fjaa fjab)␤»

[04:03] <BenGoldberg> m: my $fizzes := ("", "", "fizz") xx *; say $fizzes[^5]

[04:03] <camelia> rakudo-moar 674551: OUTPUT: «((  fizz) (  fizz) (  fizz) (  fizz) (  fizz))␤»

[04:05] <Arlenik> but using 'xx *' gives a list of list, which I can't seem to flatten

[04:06] <BenGoldberg> m: my $fizzes := |("", "", "fizz") xx *; say $fizzes[^5]

[04:06] <camelia> rakudo-moar 674551: OUTPUT: «(  fizz  )␤»

[04:06] <BenGoldberg> m: my $fizzes := flat(("", "", "fizz") xx *); say $fizzes[^5]

[04:06] <camelia> rakudo-moar 674551: OUTPUT: «(  fizz  )␤»

[04:07] <BenGoldberg> m: my @f0 := ("", "", "fizz"); my @fizzes = @f[^Inf]; say @fizzes[^5]

[04:07] <camelia> rakudo-moar 674551: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@f' is not declared␤at <tmp>:1␤------> 3y @f0 := ("", "", "fizz"); my @fizzes = 7⏏5@f[^Inf]; say @fizzes[^5]␤»

[04:07] <BenGoldberg> m: my @f0 := ("", "", "fizz"); my @fizzes = @f0[^Inf]; say @fizzes[^5]

[04:07] <camelia> rakudo-moar 674551: OUTPUT: «(  fizz (Any) (Any))␤»

[04:08] <BenGoldberg> m: my @f0 := ("", "", "fizz"); my @fizzes := map @f0[* % 3], ^Inf; say @fizzes[^5]

[04:08] <camelia> rakudo-moar 674551: OUTPUT: «Cannot resolve caller map(Str, Range); none of these signatures match:␤    (&code, + is raw)␤  in block <unit> at <tmp> line 1␤␤»

[04:08] <BenGoldberg> m: my @f0 := ("", "", "fizz"); my @fizzes := map { @f0[$_ % 3] }, ^Inf; say @fizzes[^5]

[04:08] <camelia> rakudo-moar 674551: OUTPUT: «Type check failed in binding; expected Positional but got Seq (?)␤  in block <unit> at <tmp> line 1␤␤»

[04:08] <BenGoldberg> m: my @f0 := ("", "", "fizz"); my @fizzes = map { @f0[$_ % 3] }, ^Inf; say @fizzes[^5]

[04:08] <camelia> rakudo-moar 674551: OUTPUT: «(  fizz  )␤»

[04:11] *** anaeem1 joined
[04:13] *** anaeem1__ joined
[04:14] *** Ben_Goldberg joined
[04:15] *** BenGoldberg left
[04:15] *** Ben_Goldberg is now known as BenGoldberg

[04:15] <BenGoldberg> m: my @fizzes = roundrobin("", "", "fizz"); say @fizzes[^5]

[04:15] <camelia> rakudo-moar 674551: OUTPUT: «((  fizz) (Any) (Any) (Any) (Any))␤»

[04:17] *** anaeem1 left
[04:17] <BenGoldberg> m: my @fizzes = gather { take |("", "", "fizz") for ^5 }; say @fizzes[^5]

[04:17] <camelia> rakudo-moar 674551: OUTPUT: «((  fizz) (  fizz) (  fizz) (  fizz) (  fizz))␤»

[04:18] <Geth> ¦ doc: dd83864e7f | (Will "Coke" Coleda)++ | 2 files

[04:18] <Geth> ¦ doc: Fix xt/ tests.

[04:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dd83864e7f

[04:18] <Geth> ¦ doc: 9214d8935e | (Will "Coke" Coleda)++ | STYLEGUIDE.md

[04:18] <Geth> ¦ doc: Add note about say vs. put in docs.

[04:18] <Geth> ¦ doc: 

[04:18] <Geth> ¦ doc: Closes #1441

[04:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9214d8935e

[04:18] <BenGoldberg> m: my @fizzes = gather { while True { .take for "", "", "fizz" } }; say @fizzes[^5]

[04:18] *** Cabanossi left
[04:19] <camelia> rakudo-moar 674551: OUTPUT: «(timeout)»

[04:19] <BenGoldberg> m: my @fizzes = gather { for ^5 { take $_ for "", "", "fizz" } }; say @fizzes[^5]

[04:19] <camelia> rakudo-moar 674551: OUTPUT: «(  fizz  )␤»

[04:19] <Arlenik> https://glot.io/snippets/esi5739s6ugot it working: 

[04:19] <Arlenik> got it working, https://glot.io/snippets/esi5739s6u

[04:20] <BenGoldberg> m: say 42 max 'fiz'

[04:20] <camelia> rakudo-moar 674551: OUTPUT: «fiz␤»

[04:20] <BenGoldberg> m: say 42 max ''

[04:20] <camelia> rakudo-moar 674551: OUTPUT: «42␤»

[04:21] *** Cabanossi joined
[04:21] * BenGoldberg wouldn't have thought of using max, but *shrug* ok :)

[04:22] <Arlenik> :)

[04:26] *** xinming joined
[04:33] *** xtreak joined
[04:42] *** Arlenik left
[04:49] *** xtreak left
[04:52] *** aborazmeh left
[04:54] *** lizmat left
[04:54] *** xtreak joined
[04:55] *** davido_ joined
[04:59] *** xtreak left
[04:59] *** pharv_ left
[05:04] *** Cabanossi left
[05:06] *** Cabanossi joined
[05:13] *** BenGoldberg left
[05:15] *** davido_ left
[05:16] *** davido_ joined
[05:22] *** lowbro joined
[05:22] *** lowbro left
[05:22] *** lowbro joined
[05:25] *** Actualeyes left
[05:30] *** khw left
[05:32] *** andrzejku joined
[05:34] *** xtreak joined
[05:38] *** xtreak left
[05:43] *** davido_ left
[05:47] *** davido_ joined
[05:50] *** lizmat joined
[05:58] *** davido_ left
[06:02] *** wamba joined
[06:03] *** Cabanossi left
[06:05] *** Cabanossi joined
[06:15] *** Actualeyes joined
[06:22] *** ChoHag left
[06:35] *** lizmat left
[06:36] *** lizmat joined
[06:41] *** astj left
[06:42] *** astj_ joined
[06:42] <moritz> lol I blogged: https://perlgeek.de/blog-en/perl-6/2017-020-ten-years.html

[06:42] *** pmurias joined
[06:48] *** nadim joined
[06:48] *** kyan left
[07:01] *** astronav_ left
[07:02] *** pmurias left
[07:02] <lookatme> moritz++

[07:03] *** ijneb left
[07:09] *** abraxxa joined
[07:18] *** Cabanossi left
[07:20] *** darutoko joined
[07:21] *** Cabanossi joined
[07:25] *** xtreak joined
[07:30] *** xtreak left
[07:30] *** [ptc]_ left
[07:30] *** dalek joined
[07:30] *** ChanServ sets mode: +v dalek

[07:30] *** synopsebot6 left
[07:30] *** SourceBaby left
[07:30] *** synopsebot6 joined
[07:30] *** ChanServ sets mode: +v synopsebot6

[07:31] <timotimo> i restarted hack

[07:31] <yoleaux> 00:31Z <Zoffix> timotimo: no one's around ATM and I dunno when you'll get this message, but hack is ded and docs ain't building. Would you restart it, please?

[07:38] *** Praise left
[07:39] <lookatme> How can I get client information when I got a connection from IO::Socket::Async ?

[07:39] <moritz> .tell Zoffix I can give you access to restarting hack, if you're willing to use virt-manager (or comparable tools). Please /msg me an SSH pubkey to use

[07:39] <yoleaux> moritz: I'll pass your message to Zoffix.

[07:40] <lookatme> Such as ip

[07:47] *** anaeem1 joined
[07:47] *** anaeem1__ left
[07:52] <timotimo> lookatme: looks like we don't implement that yet

[07:53] <lookatme> Oh, that's shock me. :O

[07:58] *** Kyo91 left
[08:00] *** zengargoyle left
[08:02] *** zengargoyle joined
[08:03] *** jonas1 joined
[08:11] <timotimo> .o( we probably also need to implement the happy eyeballs rfc soon-ish )

[08:12] *** lizmat left
[08:14] *** lizmat joined
[08:15] *** lizmat left
[08:20] *** dwarring left
[08:26] *** wamba left
[08:29] *** wamba joined
[08:39] *** titsuki_ left
[08:45] *** araujo_ left
[08:45] *** lizmat joined
[08:46] *** ksham joined
[08:47] *** astj_ left
[08:47] *** TEttinger left
[08:47] *** mr-fooba_ left
[08:47] *** broquaint left
[08:47] *** brimonk left
[08:47] *** incredible_ left
[08:47] *** garu left
[08:47] *** atta left
[08:47] *** gugod left
[08:47] *** mls left
[08:47] *** ttkp6 left
[08:47] *** harrisi left
[08:47] *** lizmat left
[08:49] *** dh7320 joined
[08:50] *** snarkyboojum joined
[08:50] *** shmibs left
[08:52] *** shmibs joined
[08:54] *** ksham left
[08:58] *** grumble left
[08:58] *** rumble joined
[09:05] *** Cabanossi left
[09:06] *** Cabanossi joined
[09:07] *** skids joined
[09:09] *** RockyBalboa joined
[09:10] <stmuk> having the p6doc docs as sqlite would be an excellent idea

[09:12] <RockyBalboa> Hello! Quick question. Let's say I have two string variables : a class name and a method name. Can I dispatch the class and the method dynamically (without using eval) ?

[09:14] <jnthn> ::($class-name)."$method-name"()

[09:15] <RockyBalboa> Ohhh, I love how simple it is! A big thank you jnthn :)

[09:15] *** edehont joined
[09:15] *** zakharyas joined
[09:16] *** pierre__ joined
[09:19] <stmuk> next YAPC/TPC in Glasgow

[09:19] *** nattefrost joined
[09:20] <pierre__> Hi all

[09:20] <pierre__> i was playing with concurreny, to see the benefit of 6.d and premption on await compared to 6.c

[09:21] <pierre__> something i do not understand on 6.c

[09:21] <pierre__> let's take a simple example

[09:21] <pierre__> m: my @p; for ^5 -> $i { @p.push( start { await( Promise.in(1) ); } ) }; await @p; say "elapsed {now - BEGIN { now } }"

[09:21] <camelia> rakudo-moar 674551: OUTPUT: «elapsed 1.0145656␤»

[09:21] *** ChoHag joined
[09:21] <pierre__> that code is running in 1 second more or less

[09:22] <pierre__> if i increment the number of promises on 6.d.PREVIEW , everything works perfectly

[09:22] <pierre__> however, on 6.c, it seems that when i hit the threadpool size, instead of take them in "slices", it enter in a dead lock

[09:22] <pierre__> am i missing something?

[09:24] *** lizmat joined
[09:25] <timotimo> stmuk: i'd need a passport to get in there by the time tpc happens?

[09:25] *** skids left
[09:25] *** dolmen joined
[09:26] *** rurban joined
[09:26] *** [ptc] joined
[09:27] <timotimo> pierre__: that also happens on my end. interesting, i'd expect it ought to be able to make progress

[09:28] *** lizmat left
[09:28] <pierre__> Are Promises started with start lazy?

[09:28] *** wamba left
[09:28] <pierre__> what i'm thinking is that 

[09:28] <timotimo> lazy in what way?

[09:28] <pierre__> if i exceed the thread pool in the construction of the array

[09:28] *** Actualeyes left
[09:29] *** lizmat joined
[09:29] <jnthn> start just pushes onto the shceduler's queue

[09:29] <pierre__> the last await will never get called

[09:29] <pierre__> and hence, the Promises would not be started

[09:29] *** rurban1 joined
[09:29] <jnthn> Anyway, the deadlock is because you fill up all of the pool with threads awaiting Promise.in

[09:29] <jnthn> And then when the timer fires there's no thread to run the callback on because the pool is full

[09:29] <jnthn> Thus the hang

[09:29] <timotimo> oh, hah

[09:29] *** rurban1 left
[09:30] <pierre__> oh, ok, and with the premptive execution of 6.d

[09:30] <pierre__> one of the await will give hand to the callback

[09:30] *** rurban left
[09:30] <jnthn> Well, it's more cooperative than preemptive (in that the await is an explicit hand-off point), but yes

[09:30] <stmuk> timotimo: what? I think you always need a national id card (if your country has one) or a passport?

[09:31] *** garu joined
[09:31] *** brimonk joined
[09:31] *** atta joined
[09:31] *** broquaint joined
[09:31] *** incredible joined
[09:31] *** mls joined
[09:31] *** harrisi joined
[09:31] *** astj joined
[09:31] *** bhm joined
[09:31] *** notostraca joined
[09:31] *** harrisi is now known as Guest90341

[09:31] *** gugod joined
[09:31] *** wamba joined
[09:32] *** mr-foobar joined
[09:32] *** wamba left
[09:32] <lookatme> HI, I'm play with IO::Socket::Async. I wrote a example, https://gist.github.com/araraloren/acbc0cf79b6f67375b53c0c5930bf231

[09:32] <pierre__> anyway, my use case was "a bit dumb", i wanted to understand the difference in 6.d, so i wanted to created more await than the thread loop size :)

[09:32] <jnthn> pierre__: You were successful ;)

[09:33] *** dg joined
[09:33] <lookatme> my question is how to know the client is quit ?

[09:33] *** ccntrq joined
[09:35] <lookatme> anyone have suggestion :)

[09:35] *** Cabanossi left
[09:35] <pierre__> what to you mean by quit?

[09:36] <pierre__> if by quitting, you mean the client not sending anymore traffic, you will not know if it's "pausing" or quitting

[09:36] <lookatme> close connection 

[09:36] <jnthn> The Supply you get from the connection will be done

[09:36] *** Cabanossi joined
[09:36] *** rurban joined
[09:36] <lookatme> I mean the client side call .close on their connection

[09:36] <jnthn> but uh

[09:37] <jnthn> This code doesn't make sense

[09:37] <lookatme> Hmm? something wrong ?

[09:37] <jnthn> Calling .tap inside of a react block is wrong 99% of the time

[09:38] <lookatme> oh

[09:38] <jnthn> Unless you really, really know what you're doing and want a totally unrelated pipeline :)

[09:38] *** rumble is now known as grumble

[09:38] <jnthn> So the whenever should just go directly in there

[09:38] *** lizmat left
[09:39] <lookatme> jnthn, yeah, that's ok when I remove the react

[09:39] <lookatme> There not too much document about that react.

[09:41] *** sena_kun joined
[09:42] *** pierre__ left
[09:43] *** skids joined
[09:44] *** rurban left
[09:44] *** edehont left
[09:44] <stmuk> TPC is being streamed on Facebook

[09:47] <timotimo> stmuk: it seems like GB has already been an exception to destinations you can get to with just a german id card

[09:48] <timotimo> can you watch streams on facebook without a facebook account?

[09:49] <stmuk> "You can enter the UK with either a valid passport or a national identity card issued by a EEA country.

[09:49] <lookatme> jnthn, I added a LAST Phrase, it works now. 

[09:50] <stmuk> whether that changes in 2017 noone knows. I'd hope and expect not

[09:50] <stmuk> 2019 I mean

[09:51] <stmuk> timotimo: https://www.facebook.com/theperlconference/videos/341191259637175/ works for me when I'm *not* logged into FB

[09:52] *** andreoss joined
[09:52] *** xtreak joined
[09:55] *** lizmat joined
[09:55] <timotimo> oh cool

[09:55] <timotimo> i'll be afk for at least 2 hours first

[09:56] <timotimo> looks like i can scroll to any place in the stream at any time 

[09:56] <timotimo> so that's nice

[09:58] <stmuk> that link is Damian's talk (which may go away)

[09:58] *** lizmat left
[10:00] *** pierre__ joined
[10:01] <timotimo> may go away? :o

[10:01] <timotimo> oh is that because he'd like people to pay for his talks or something?

[10:02] *** lizmat joined
[10:03] <stmuk> yes

[10:04] *** Cabanossi left
[10:04] *** ijneb joined
[10:06] *** Cabanossi joined
[10:08] *** feng joined
[10:09] <andreoss> m: role Foo { submethod CALL-ME()}

[10:09] <camelia> rakudo-moar 674551: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3role Foo { submethod CALL-ME()7⏏5}␤»

[10:10] <andreoss> m: role Foo { submethod CALL-ME(\a) {a} }; say Foo(a);

[10:10] <camelia> rakudo-moar 674551: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    a used at line 1␤␤»

[10:10] <andreoss> m: role Foo { submethod CALL-ME(\a) {a} }; say Foo(1);

[10:10] <camelia> rakudo-moar 674551: OUTPUT: «Cannot invoke this object (REPR: Uninstantiable; Foo)␤  in block <unit> at <tmp> line 1␤␤»

[10:10] <andreoss> m: class Foo { submethod CALL-ME(\a) {a} }; say Foo(1);

[10:10] <camelia> rakudo-moar 674551: OUTPUT: «1␤»

[10:10] *** mr-foobar left
[10:10] <andreoss> is there a way to get CALL-ME on roles?

[10:11] <andreoss> without instantiating 

[10:11] *** haha_ joined
[10:11] *** dolmen left
[10:12] <jnthn> No

[10:14] *** anaeem1 left
[10:14] *** mr-foobar joined
[10:16] *** labster joined
[10:17] <andreoss> m: role Foo { has $.v }; sub Foo($v) { Foo.new: v => $v }; say &Foo.(10);

[10:17] <camelia> rakudo-moar 674551: OUTPUT: «Foo.new(v => 10)␤»

[10:17] *** snarkyboojum left
[10:17] *** mcmillhj joined
[10:19] *** sena_kun left
[10:20] *** haha_ left
[10:21] <Zoffix> .

[10:21] <yoleaux> 07:39Z <moritz> Zoffix: I can give you access to restarting hack, if you're willing to use virt-manager (or comparable tools). Please /msg me an SSH pubkey to use

[10:21] *** haha_ joined
[10:22] <Zoffix> .tell moritz they key's is this one: https://github.com/zoffixznet.keys

[10:22] <yoleaux> Zoffix: I'll pass your message to moritz.

[10:22] *** mcmillhj left
[10:24] <andreoss> can i have postcircumfix methods?

[10:25] <andreoss> m: role Foo {  method postcircumfix:«[]»($a) { $a }}; say Foo.[10]

[10:25] <camelia> rakudo-moar 674551: OUTPUT: «(Any)␤»

[10:25] <jnthn> No, postcircumfixes are considered a kind of operator, and thus part of the current language, so are located lexically

[10:26] <jnthn> You'd implement AT-POS or similar in the class

[10:26] <jnthn> Or export overloads of the postcircumfix sub if having some reason to

[10:28] *** rurban joined
[10:30] *** dolmen joined
[10:30] *** dolmen is now known as Guest69863

[10:31] *** rurban left
[10:33] <Zoffix> cool samcv++ is giving a Unicode talk at TPC https://www.facebook.com/pg/theperlconference/videos/?ref=page_internal

[10:34] <Zoffix> m: role Foo {  method AT-POS($a) { "heh" x $a }}; say Foo.[10]

[10:34] <camelia> rakudo-moar 674551: OUTPUT: «hehhehhehhehhehhehhehhehhehheh␤»

[10:35] *** Cabanossi left
[10:36] *** Cabanossi joined
[10:42] *** raiph left
[10:46] *** sena_kun joined
[10:48] *** ChoHag left
[10:53] *** lizmat left
[10:53] *** labster left
[10:56] *** notostraca left
[11:02] *** Guest69863 left
[11:03] *** lizmat joined
[11:04] *** wamba joined
[11:06] *** rindolf joined
[11:10] *** mr-fooba_ joined
[11:10] *** mr-foobar left
[11:14] *** brrt joined
[11:16] *** araraloren joined
[11:16] <Zoffix> AlexDaniel: aren't race

[11:17] <Zoffix> AlexDaniel: aren't race/hyper still a prototype and aren't meant to be working?

[11:17] <AlexDaniel> Zoffix: I don't think so. I remember jnthn++ doing some fixes recently which were meant to make hyper/race useful

[11:18] <Zoffix> I don't recall any work after the semantics were being figured out

[11:18] <AlexDaniel> I don't know if this happened though :)

[11:18] <AlexDaniel> I mean, I don't know if all of the most important bugs were fixed, but *shrug*

[11:19] *** RockyBalboa left
[11:19] <Zoffix> huh?

[11:19] *** markmont left
[11:19] <jnthn> No, they weren't

[11:20] <Zoffix> Ok, good. I didn't miss anything good :)

[11:21] <AlexDaniel> ok, bad, I just recommended hyper/race to somebody on this channel :(

[11:21] <AlexDaniel> my mistake

[11:22] <Zoffix> AlexDaniel: there aren't so much "bugs" in them as they were a prototype that snuck in and people were trying to use it. There's new semantics on the drawing board for how these are meant to work and implementing them is still something to be done.

[11:22] <Zoffix> here: https://6guts.wordpress.com/2017/03/16/considering-hyperrace-semantics/

[11:23] <Zoffix> hm so they need to be in 6.d

[11:24] <Zoffix> that moves the timeline further down

[11:24] * Zoffix rather get 6.d out earlier and ship them in 6.e instead

[11:25] *** lizmat left
[11:28] *** feng left
[11:29] <Zoffix> the docs probably should be amended to that effect :)

[11:29] * Zoffix &

[11:29] <AlexDaniel> yea :S

[11:34] *** Cabanossi left
[11:34] *** AlexDani` joined
[11:36] *** AlexDaniel left
[11:36] *** Cabanossi joined
[11:40] *** labster joined
[11:40] *** _4d47 joined
[11:42] *** xtreak left
[11:43] *** xtreak joined
[11:43] *** markmont joined
[11:45] *** xtreak left
[11:45] *** xtreak joined
[11:46] *** _4d47 left
[11:48] *** xtreak left
[11:49] *** AlexDani` left
[11:50] *** lizmat joined
[11:52] *** pierre__ left
[11:55] *** lizmat left
[11:56] *** _4d47 joined
[11:59] *** Ven joined
[11:59] *** lizmat joined
[11:59] *** Ven is now known as Guest88211

[12:02] *** pierre__ joined
[12:07] *** brrt left
[12:08] *** brrt joined
[12:08] <nadim> sena_kun: can you please zef install Data::Dump::Tree and tell me if it is finally installing as it should?

[12:10] <sena_kun> nadim, haiyo.

[12:11] <Geth> ¦ doc: 4f4c0579bb | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Iterable.pod6

[12:11] <Geth> ¦ doc: Mark hyper/race as experimental

[12:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4f4c0579bb

[12:12] *** brrt left
[12:13] <sena_kun> nadim, Looks like you failed 10 tests of 21

[12:13] <sena_kun> nadim, do you need a full log?

[12:13] <araraloren> Hi

[12:14] <araraloren> https://gist.github.com/araraloren/acbc0cf79b6f67375b53c0c5930bf231?ts=4

[12:14] *** RockyBalboa joined
[12:15] <araraloren> I update the Supply example, but seems like it can not working on `base on win10`

[12:15] <araraloren> It works fine under my fedora 

[12:17] <RockyBalboa> Hello! I'm just starting to learn Perl. A quick question about modules. If I have a class "World" defined in file "./Hello/World.pm", I can use this class doing "use Hello::World; World.new;" but is it possible to use directly "Hello::World.new" in my code?

[12:17] *** labster left
[12:18] <araraloren> RockyBalboa, I think you must declare your with `class Hello::World`

[12:19] *** Cabanossi left
[12:21] *** Cabanossi joined
[12:21] <araraloren> The example do something like ssh, free for the suggestion :)

[12:23] *** lizmat left
[12:23] <Zoffix> RockyBalboa: no. You need to load the module to bring in the stuff in it.

[12:24] <Zoffix> RockyBalboa: or do you mean using 'Hello::World' instead of just 'World'?

[12:24] <RockyBalboa> Thx! Yes I was meaning just using 'Hello::World' instead of just 'Word' :)

[12:25] <Zoffix> RockyBalboa: what's inside your World.pm?

[12:25] <RockyBalboa> Do I have to use the "need" keyword or something like that?

[12:25] <RockyBalboa> I just have: class World { method run() { say "Hello, World!"; } }

[12:27] <RockyBalboa> I was wondering if I kind do somehow Hello::World.new.run instead of World.new.run (I am trying to convert a Ruby web framework to Perl 6 who dispatches request to Controller.action).

[12:27] <Zoffix> RockyBalboa: you could name it "Hello::World" or put `unit package Hello;` at the top of the file

[12:28] <Zoffix> Some docs (unsure how good they are): https://docs.perl6.org/language/modules

[12:28] <RockyBalboa> Ok thanks much Zoffix, I will experiment with that. I'm sure it's easy to do that, I'm just not getting used to work with Perl 6 yet

[12:28] *** raschipi joined
[12:28] *** g0d355__ left
[12:29] <nadim> sena_kun: yes please, the 211 tests pass her :(

[12:29] <araraloren> I have seen that `package`. what's that ?

[12:30] <sena_kun> nadim, https://gist.github.com/Altai-man/f5da19fdd10879af98a8061b13af6b2c - here it goes. I've compiled rakudo yesterday iirc.

[12:31] <Zoffix> araraloren: like a namespace placeholder that can be replaced with a class or module

[12:33] <araraloren> Hmm, I remember it's exist in Perl 5. I thought they were disappear in Perl6.

[12:33] <nadim> sena_kun: thanks, guess if I hate this ... All tests successful. Files=1, Tests=21, Result: PASS

[12:33] <nadim> I'll recompile rakudo immediately 

[12:33] <sena_kun> nadim, how old is your rakudo?

[12:34] <nadim> days

[12:34] <sena_kun> hmmm...

[12:39] <nadim> sena_kun: Rakudo version 6745517 , latest patch 25 hours ago, all tests pass. what's your version?

[12:39] <sena_kun> nadim, This is Rakudo version 2017.07-138-ga91ad2da8 built on MoarVM version 2017.07-318-g604da4d0

[12:40] *** ChoHag joined
[12:42] <nadim> I am just a patch ahead

[12:43] <sena_kun> :/

[12:43] <nadim> if you clone this and run the test manually? https://github.com/nkh/P6-Data-Dump-Tree

[12:43] *** lizmat joined
[12:44] <sena_kun> nadim, should I update rakudo?

[12:44] *** labster joined
[12:44] <nadim> I doubt it's a problem with that update but if you want the latest and shinniest ;)

[12:44] *** labster left
[12:44] *** mcmillhj joined
[12:45] <sena_kun> writing code just now, give me a minute...

[12:46] *** lizmat left
[12:47] <sena_kun> updated rakudo, trying to install.

[12:48] *** labster joined
[12:48] <Zoffix> This is your regular reminder that you are building random dev commits that could have catastrophic bugs in them. Use releases; they're tested.

[12:49] <sena_kun> Zoffix, they have latest bugfixes I need, so... :)

[12:50] <sena_kun> nadim, the same result with clonned repo. I hope you run testing without --force?

[12:51] <Zoffix> sena_kun: just saying... Don't come to us crying when a bug wipes your box.

[12:51] *** Guest69863 joined
[12:51] <nadim> I use: alias t6='PERL6LIB=lib,t prove -v -e perl6', then t6 t

[12:52] <nadim> Zoffix: can't use releases, two of the bugs I reported in the last weeks were fixes when I reported them. We'll need to learn to suffer :)

[12:52] <Zoffix> That's just stupid.

[12:53] <raschipi> Keep backups offsite.

[12:53] <Zoffix> And I assume you're talking about your DDT module? So no one can use it because it's relying on unreleased release of rakudo.

[12:53] <nadim> I think what you should ask is how many people build rakudo because they know things are fixed there rather than a release that can be ages old

[12:54] <RockyBalboa> And is it possible to import everything from a module? Something like 'use Hello::*;'?

[12:54] <sena_kun> Zoffix, sure, don't worry.

[12:54] <Zoffix> nadim: why should I ask that?

[12:54] <moritz> m: use Test :ALL; # no idea if this works

[12:54] <yoleaux> 10:22Z <Zoffix> moritz: they key's is this one: https://github.com/zoffixznet.keys

[12:54] <camelia> rakudo-moar 674551: ( no output )

[12:55] <moritz> (that was for RockyBalboa)

[12:55] <nadim> Zoffix: that would tell you something about the users and their willingness to get something with bugs fixed

[12:55] <raschipi> Most users will only get Rakudo from their distro.

[12:55] <nadim> there are a few hundreds of users world wide, not a million

[12:56] <Zoffix> nadim: you're using a complicated piece of software that's not been thoroughly tested and when pointed out that it could destroy your installation you shrug it off and tell me I should be asking how many users are equally reckless.

[12:56] <RockyBalboa> moritz: thx, it doesn't seem to work :(

[12:57] *** Guest88211 left
[12:57] * Zoffix puts DDT into the "never use" mental pile

[12:58] <jnthn> Zoffix: We need to strike some balance though. If nobody at all uses bleeding edge releases then we may not know about the issues they introduce, if those aren't covered by whatever testing we do ourselves.

[12:58] <jnthn> uh, bleeding edge non-releases I ment :)

[12:58] <jnthn> *meant

[12:58] *** buggable left
[12:58] *** buggable joined
[12:58] *** ChanServ sets mode: +v buggable

[12:58] <nadim> Zoffix: see it like this, it was not able to install because of a zef/Meta problem, it did not work because of a bug that was fixed in dev by the time I reported it, .... When I get it to install and test, finally, on the one version _I_ feel confident with, then I will test with stable. I am not sitting on my ass in the meantime

[12:59] *** Guest69863 left
[12:59] <nadim> Zoffix: you have been unpleasant twice in 10 mn. please stop.

[13:01] <Zoffix> jnthn: they aren't bleeding edge releases, though. They're random commits.

[13:01] <jnthn> Zoffix: Yes, I shouldn't have used the word release, sorry for the confusion.

[13:02] <jnthn> Zoffix: People testing them and taking the risk are in part doing us a favor, however.

[13:02] <jnthn> I agree we shouldn't encourage it as a general practice.

[13:03] <jnthn> But a handful of people doing it who are willing to help triage/report bugs is useful.

[13:03] *** Zoffix left
[13:04] <raschipi> nadim: Just please redirect users to a DDT version that doesn't depend on using bleading edge software like that. It's a recipe for a world of hurt.

[13:05] <ryu0> nadim: At least until the fixes you need so badly are available in a regular release.

[13:06] *** lizmat joined
[13:07] *** lizmat left
[13:08] <nadim> I will but the Rakudo version it works with in the documentation, in clear view. Once it works (it does) and installes on multiple machines , I will run a regression test to find which rakudo release it works on

[13:09] <nadim> So that's a welcome input, better than "stupid", which I may be, and whatever "avoid/garbage" pile

[13:14] <jast> FWIW I thought Zoffix's point was quite clear, and neither did he call you names, nor did he label anything garbage. I see your point, but IMO there was no need to make it personal.

[13:17] *** lizmat joined
[13:17] *** lizmat left
[13:17] <nadim> well the thinkis that Zoffix is actually using it already. Software is nothing personal, it is just software, I just think a helpful tone is more helpful.

[13:18] *** lizmat joined
[13:18] *** lizmat left
[13:20] <nadim> sena_kun: when you run the test, is 04_flat.t the only one failing tests?

[13:20] *** lizmat joined
[13:21] *** lizmat left
[13:21] *** llfourn joined
[13:22] <sena_kun> nadim, yes. META.t too. And I'd recommend you to move it to xt/.

[13:23] *** skids left
[13:26] <nadim> was the Test::META problem something like can't find version META::0.5 something?

[13:27] <sena_kun> nadim, Test::META is not installed on this box.

[13:27] <sena_kun> but just plain: Could not find Test::META at line 7 in:

[13:28] *** brrt joined
[13:29] *** lizmat joined
[13:29] <araraloren> jnthn, hi, the code I post here https://gist.github.com/araraloren/acbc0cf79b6f67375b53c0c5930bf231?ts=4 not working under `bash on win10`

[13:30] *** andrzejku left
[13:30] <sena_kun> nadim, passes everything except for 04 after installation.

[13:30] <nadim> my understanding is that it should get installed when running the install via Zef. Jnth also had the problem. I don't think we can avoid people having Test::META, even if I am going to move to xt.  

[13:30] *** lizmat left
[13:30] <nadim> sena_kun: the problem is that one line is not there, probably a blank line. I a going to diff my output with your log again. Thanks for the help

[13:31] <nadim> sena_kun: but it's a weird error, same rakudo, almost, same code, and a line difference

[13:31] <araraloren> When the server side receive message from client, it raised an exception 

[13:32] <sena_kun> nadim, I'm running tests with zef --verbose test ., can you run it like that?

[13:32] <araraloren> I comment the exception below that gist

[13:34] <nadim> sena_kun: I will use the same command

[13:35] *** konsolebox joined
[13:35] *** lizmat joined
[13:36] <nadim> It passes fine. ===> Testing [OK] for Data::Dump::Tree:ver('1.5.3'):auth('github:nkh')

[13:36] *** pierre__ left
[13:37] <sena_kun> :?

[13:38] <sena_kun> nadim, my box may be broken then, for more clearer results you need an another tester, I guess.

[13:40] *** aborazmeh joined
[13:40] *** aborazmeh left
[13:40] *** aborazmeh joined
[13:40] <nadim> There's another one that had problems with Test::Meta, he will test the latest too but it is via issues in github, so a longer round trip. I'll let you know if I find where that line comes from.

[13:41] <nadim> at least we are testing the same way, a good start

[13:42] *** andreoss left
[13:46] *** aborazmeh left
[13:46] *** RockyBalboa left
[13:49] *** brrt left
[13:51] <El_Che> I am browsing the sources, but is there a doc with RAKUDO internal vars with info what classes are loaded (and hopefully fron where they were loaded)?

[13:53] *** Actualeyes joined
[13:54] *** lowbro left
[13:56] *** dh7320 left
[13:58] <nadim> sena_kun: It's not your box, it's my test. You probably don't have Term::ANSIColor installed. I do and that's why my tests pass. I forget to out the output in BW to handle that case. So this was very helpful 

[13:59] <nadim> sena_kun: as for Test::META, it get's installed as a dependency by Zef, I can see that happening in the log you send

[14:00] <sena_kun> nadim, well, then no idea about Test::META. Glad that my help was useful.

[14:00] <nadim> very,

[14:01] *** Zoffix joined
[14:02] <Zoffix> El_Che: https://docs.perl6.org/programs/00-running#Environment_Variables

[14:02] <Zoffix> and https://github.com/rakudo/rakudo/wiki/dev-env-vars

[14:12] *** Kyo91 joined
[14:13] *** AlexDani` joined
[14:15] *** AlexDani` is now known as AlexDaniel

[14:19] *** Cabanossi left
[14:20] *** llfourn left
[14:21] *** Cabanossi joined
[14:23] *** lizmat left
[14:35] *** lizmat joined
[14:36] *** lizmat left
[14:41] *** nattefrost left
[14:44] *** _4d47 left
[14:45] * [Coke] gets charged by "gittip" (now gratipay) for the first time in years. 10c a week adds up to something after 2+ years...

[14:46] <Zoffix> m: say .1*104

[14:46] <camelia> rakudo-moar 674551: OUTPUT: «10.4␤»

[14:47] *** Guest69863 joined
[14:50] *** lizmat joined
[14:51] *** pierre__ joined
[14:53] *** lizmat left
[14:57] *** dh7320 joined
[14:58] *** lizmat joined
[15:00] <nadim> is there a pattern to the tags that are *releases*? the geography sounding tags or the year.month ones?

[15:03] *** lizmat left
[15:10] *** Guest69863 left
[15:10] *** pierre__ left
[15:11] <Zoffix> hehe. I noticed the 255 exit code when I wrote Die.pm6 but figured I'd rather replicate rakudo's code. Looks like it was the right decision :P http://perltricks.com/article/git-bisect-and-perl/

[15:11] <Zoffix> buggable: eco die

[15:11] <buggable> Zoffix, Die 'Perl 5 like die routine for note + exit': https://github.com/zoffixznet/perl6-Die

[15:13] <Zoffix> Tho we still have that same problem with Rakudo and Test.pm6. You'd have >=125 exit code if you have >=125 failing tests

[15:14] <stmuk> perl 6 super glue live!

[15:15] <Zoffix> where

[15:15] <Zoffix> give l;inks

[15:15] <stmuk> https://web.facebook.com/theperlconference/?hc_ref=ART33nu5keWvdiexBNh-TlaEJsI1Ye_AkXEVj5FFrLPzp3-PLA8YtEJInvqkF9eBA6M

[15:15] <stmuk> maybe remove session part

[15:22] *** wamba left
[15:24] <Geth> ¦ ecosystem: dboys++ created pull request #360: Added WWW::SilverGoldBull package

[15:24] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/360

[15:26] *** lizmat joined
[15:28] *** zengargoyle left
[15:33] *** Cabanossi left
[15:36] *** Cabanossi joined
[15:36] *** labster left
[15:36] <Geth> ¦ ecosystem: 62bb3cc16f | (Denis Boyun)++ (committed by Zoffix Znet) | META.list

[15:36] <Geth> ¦ ecosystem: Added WWW::SilverGoldBull package (#360)

[15:36] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/62bb3cc16f

[15:37] <Zoffix> buggable: eco author:github

[15:37] <ugexe> windows can exit above 255 I think

[15:37] <buggable> Zoffix, Found 108 results: 007, Inline::Perl5, November, HTTP::UserAgent, Inline::Python. See https://modules.perl6.org/s/author%3Agithub

[15:37] <Zoffix> Why do people prefix their author name with `github`?

[15:38] <ugexe> because $!auth = $auth // $authority // $author currently, so it shows up in their module auth just the same

[15:38] *** lancew joined
[15:38] <ugexe> that needs to go in 6.d

[15:38] <ugexe> go away

[15:39] *** lizmat left
[15:39] * Zoffix wouldn't mind `auth` key in META

[15:39] <ugexe> lots of us use that

[15:41] <Zoffix> star: use LWP::Simple: use JSON::Fast; my $d = from-json LWP::Simple.get: "http://ecosystem-api.p6c.org/projects.json"; say $d.grep(*<auth>.so)/$d.elems

[15:41] <camelia> star-m 2017.07: OUTPUT: «===SORRY!===␤P6M Merging GLOBAL symbols failed: duplicate definition of symbol INET␤»

[15:41] <Zoffix> -_-

[15:41] *** Ven joined
[15:42] <ugexe> `Simple:`?

[15:42] *** Ven is now known as Guest36538

[15:42] <Zoffix> oh. wow, taht's one crappy error

[15:42] <Zoffix> star: use LWP::Simple; use JSON::Fast; my $d = from-json LWP::Simple.get: "http://ecosystem-api.p6c.org/projects.json"; say $d.grep(*<auth>.so)/$d.elems

[15:42] <camelia> star-m 2017.07: OUTPUT: «===SORRY!===␤P6M Merging GLOBAL symbols failed: duplicate definition of symbol INET␤»

[15:42] <Zoffix> or not

[15:42] <ugexe> lol

[15:43] <ugexe> https://github.com/sergot/http-useragent/issues/178 similar issue here

[15:43] <ugexe> that one makes a bit more sense though

[15:44] <Zoffix> Anyway, the answer is 22% or 196 dists

[15:44] <Zoffix> That's pretty good

[15:44] <ugexe> they both have a *::Response (which should be totally fine, its just something to correlate to). how this could happen with INET though? thats not good

[15:46] *** lancew left
[15:46] *** haha_ left
[15:47] *** sufrosti1o left
[15:48] *** sufrostico left
[15:50] *** araraloren left
[15:51] *** smls joined
[15:51] *** lizmat joined
[15:52] <smls> m:  sub f (Str() $a) { dd $a };  f Str;

[15:52] <camelia> rakudo-moar 674551: OUTPUT: «Str $a = Str␤»

[15:52] <smls> m:  sub f (Str() $a) { dd $a };  f Any;

[15:52] <camelia> rakudo-moar 674551: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in sub f at <tmp> line 1␤Str $a = ""␤»

[15:52] <smls> ^^ What is going on there?

[15:53] <ugexe> Zoffix: hmm https://github.com/perl6/perl6-lwp-simple/blob/master/META6.json https://github.com/perl6/perl6-lwp-simple/blob/master/lib/LWP/Simple.pm

[15:53] <ugexe> one has `auth`, the other only `author` and `authority` - and neither are the same. maybe related

[15:53] <jnthn> smls: The Str type object already meets the type required, so no coercion is done. The Any one doesn't, so Any.Str is called, which warns.

[15:54] <lizmat> m: dd Str.Str

[15:54] <camelia> rakudo-moar 674551: OUTPUT: «Use of uninitialized value of type Str in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤""␤»

[15:54] <smls> Ah, right.

[15:55] <smls> It just confused me that the (Any) turned into a definite Str, but apparently that's what .Str does.

[15:55] <smls> *defined

[15:56] *** alnewkirk joined
[15:56] *** labster joined
[15:57] <Zoffix> ugexe: would be nice to keep auth in meta though. So just by looking at the meta file you can know all you need about the dist. I'm not really use what :auth and :ver tagged on to a class do currently

[15:57] *** labster left
[15:58] *** khw joined
[15:58] <Zoffix> s/really use/really sure/;

[15:58] <ugexe> right. also it works for me on 2017.07, so makes me think its precomp related somehow

[15:59] *** cdg joined
[16:01] *** cdg_ joined
[16:04] *** Cabanossi left
[16:05] *** cdg left
[16:06] *** Cabanossi joined
[16:18] <Zoffix> RE update to htmlify.p6 I was rambling on about yesterday. I'm gonna go with Learn C -> write SQLite.pm6 -> write Pod::To::SQLite and then rewrite htmlify.p6 or then-to-be sqlify.p6, I guess

[16:19] <Zoffix> So it's gonna take awhile. don't wait up :)

[16:21] *** Guest69863 joined
[16:21] *** setty1 joined
[16:23] <jdv79> sounds complicated

[16:24] *** lizmat left
[16:24] *** rindolf left
[16:25] <ryu0> Zoffix: you've never used C before?

[16:25] <jnthn> Talking of complicated... MoarVM just learned how to do speculative invocation optimizations. It *will* need tuning yet, but the upshot is (don't generalize from this, please :P) that `for ^10000000 { }` now runs in half the time it used to.

[16:25] <Zoffix> \o/

[16:25] <Zoffix> jdv79: well, I need SQLite.pm6 for many other tasks, so it's worth it :)

[16:26] <Zoffix> ryu0: not really. Never had anything good to make with it.

[16:26] <ryu0> Zoffix: i happened to specialize in C for a number of years. maybe i can assist if you have questions or so.

[16:27] <Zoffix> I'm currently reading "C Programming: A Modern Approach" seems a stellar book. 30% through it so far :)

[16:27] <jdv79> jnthn: cool

[16:27] <ryu0> which standard is it built on?

[16:27] <smls> jnthn: Is "invocation optimizations" the same as inlining?

[16:28] <jdv79> Zoffix: don't we have DBIish?

[16:28] <ryu0> Only ANSI C is more or less fully implemented by all C compilers.

[16:28] <ryu0> I have yet to see a cross-platform compiler that is fully C99 or C11 compliant.

[16:28] <jnthn> smls: It allows further inlining.

[16:28] <Zoffix> jdv79: I hate it tho

[16:29] <ryu0> Zoffix: what function(s) does the book recommend for string building?

[16:29] <jnthn> smls: Effectively, when it can't prove what the callee is, but it can see from the stats it's pretty stable, it sticks a guard caluse in.

[16:29] <jnthn> *clause

[16:29] <jnthn> And then optimizes as if it knew

[16:29] <Zoffix> ryu0: didn't get that far yet. And it covers C88 and C99

[16:29] <Zoffix> *c89

[16:29] <ryu0> Ah. C11 doesn't add much of interest.

[16:31] *** rindolf joined
[16:31] <ryu0> Zoffix: so how did you get into Perl6? i mean, what was your starting resource?

[16:31] <jdv79> i've only read the c book.  didn't find it terribly interesting.

[16:32] <ryu0> ANSI C book?

[16:32] <smls> jnthn: Isn't "can't prove what the callee is" mostly an issue with method calls?

[16:33] <smls> (Wondering why it affects `for ^10000000 { }`...)

[16:33] <jdv79> i guess.  the one by k&r.

[16:34] <jnthn> Because the {...} is a closure

[16:34] <jnthn> Since for is effectively map

[16:34] <jnthn> We in theory *could* prove what it is in this case

[16:35] <jnthn> But closure cloning is relatively high level

[16:35] <jnthn> In that we clone the Perl 6 code object and clone the underlying code ref

[16:35] *** Cabanossi left
[16:35] <Zoffix> ryu0: annoying people in this channel and working on the compiler :)

[16:36] <jnthn> So we'd need to be able to do fairly sophisticated inter-procedural alias analysis to track that, noting that .clone is a method so we'd already be some speculation deep :)

[16:36] *** Cabanossi joined
[16:37] *** Guest36538 left
[16:37] <smls> jnthn: Or cheat and optimize `for` loops specially... :P

[16:37] <jnthn> smls: NQP does that. For Perl 6 it's more fraught

[16:37] <jnthn> But cheating would still leave us with a bunch of other places we'd want this kind of opt :)

[16:37] <smls> true

[16:38] <jnthn> Also, every bit of clever we do in Perl6::Optimizer slows down compilation

[16:38] <jnthn> For code that might not even be run much

[16:39] <jnthn> So when we can avoid games there and get the win out of a more general optimization, it's preferable. :)

[16:39] <jnthn> Dinner time; bbl

[16:42] *** zakharyas left
[16:42] *** zakharyas joined
[16:47] *** zakharyas left
[16:48] *** RockyBalboa joined
[16:48] *** nhywyll joined
[16:51] *** dh7320 left
[16:52] *** lizmat joined
[16:57] *** Ven joined
[16:57] *** Ven is now known as Guest39777

[16:57] *** haha_ joined
[17:04] *** colomon joined
[17:10] *** colomon left
[17:14] *** Guest69863 left
[17:14] *** Guest69863 joined
[17:14] *** itaipu joined
[17:16] *** nhywyll left
[17:17] *** colomon joined
[17:17] *** lizmat left
[17:18] *** Cabanossi left
[17:21] *** lizmat joined
[17:21] *** Cabanossi joined
[17:24] *** Guest69863 left
[17:25] *** colomon left
[17:26] *** lizmat left
[17:29] *** abraxxa left
[17:42] *** ChoHag left
[17:50] *** st_elmo joined
[17:51] <smls> m:  for ^100 -> $i { start {  'A'.match: /('A') { say "$i: ", $0 if not $0 }/  } }

[17:51] <camelia> rakudo-moar 1761f9: OUTPUT: «93: Nil␤»

[17:51] <smls> m:  for ^100 -> $i { start {  'A'.match: /('A') { say "$i: ", $0 if not $0 }/  } }

[17:51] <camelia> rakudo-moar 1761f9: OUTPUT: «2: Nil␤5: Nil␤2: Nil␤9: Nil␤22: Nil␤23: Nil␤21: Nil␤26: Nil␤29: Nil␤30: Nil␤33: Nil␤38: Nil␤35: ｢A｣␤41: Nil␤41: Nil␤41: Nil␤45: Nil␤48: Nil␤54: Nil␤56: ｢A｣␤63: Nil␤65: Nil␤67: ｢A｣␤70: Nil␤72: Ni…»

[17:51] <smls> ^^ I think I found a concurrency bug with regexes.

[17:52] *** haha_ left
[17:55] <AlexDaniel> smls: maybe we should try bisecting it

[17:55] <AlexDaniel> bisect: for ^100 -> $i { start { 'A'.match: /('A') { say "$i: ", $0 if not $0 }/ } }

[17:55] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=1761f95) because on both starting points the exit code is 0

[17:55] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/c04a40f14712ce5a67dc171f87d3bcdb

[17:55] <bisectable6> AlexDaniel, (2016-08-03) https://github.com/rakudo/rakudo/commit/08e39ee2653b1ae5144d4158a4f8ad03193e7024

[17:55] <AlexDaniel> smls: seems to be a regression after 2016.07

[17:56] <AlexDaniel> hm, ow yeah, this look relevant

[17:56] <AlexDaniel> s

[17:56] *** itaipu left
[17:56] <AlexDaniel> to me it feels like this commit should've fixed the bug :)

[17:57] <smls> heh :)

[17:57] *** itaipu joined
[17:57] <AlexDaniel> mch: for ^100 -> $i { my $z = ~$i; start { $z.match: /(“$z”) { say "$i: ", $0 if not $0 }/ } }

[17:57] <committable6> AlexDaniel, https://gist.github.com/7be0df7df542e3413420bae45b06e5ab

[17:59] <AlexDaniel> smls: I think you should submit a ticket. Maybe slap a [REGRESSION] tag, maybe not… this is way too old :)

[17:59] *** colomon joined
[17:59] *** cdg_ left
[18:00] <smls> Ok. gtg now, will submit later.

[18:00] <AlexDaniel> thanks

[18:01] *** sufrostico joined
[18:02] *** cdg joined
[18:03] <Zoffix> It's not a regression tho

[18:04] <Zoffix> Or maybe it is.

[18:05] <Zoffix> It's just before that commit, it looks like the $/ was shared around, so it wasn't necesarily "not $0"

[18:05] *** colomon left
[18:07] <Zoffix> c: 08e39ee2653b1ae^ await ^100 .map: -> $i { $/ = 42; start { "$i".match: /(\d+)/; if $i != +$0 { say "Boom: $i $0" } } }

[18:07] <committable6> Zoffix, https://gist.github.com/557c6716c35afeee06cd90a3daf22c47

[18:07] <Zoffix> Yup.

[18:17] *** nhywyll joined
[18:18] *** Cabanossi left
[18:19] *** Guest39777 left
[18:21] *** Cabanossi joined
[18:23] *** SourceBaby joined
[18:23] *** ChanServ sets mode: +v SourceBaby

[18:24] *** jonas1 left
[18:29] *** Ven joined
[18:30] *** Ven is now known as Guest3761

[18:32] <wictory[m]> Hi! I'm getting "Could not find symbol &SOMETHING" when I try to access a symbol in an enum

[18:33] <nadim> is the enum defined in the same scope?

[18:33] <raschipi> wictory[m]: Can you golf the error down and then put it in a pastie for us?

[18:33] <wictory[m]> The enum is defined inside a class, and I get the tests to run, but when I try to access it from a script outside of the tree it doesn't work

[18:33] <Zoffix> wictory[m]: did you export the enum?

[18:33] <nadim> then you must export them

[18:33] <Zoffix> (if the class is inside the module)

[18:33] <wictory[m]> no I haven't

[18:33] <timotimo> m: sub ding { enum FooBar <Yoink Bongo> }; say Yoink;

[18:33] <camelia> rakudo-moar 1761f9: OUTPUT: «Yoink␤»

[18:33] <nadim> or have them at a higher scope

[18:34] <Zoffix> wictory[m]: pastebin some code :)

[18:34] <timotimo> m: class ding { enum FooBar <Yoink Bongo> }; say ding::Yoink;

[18:34] <camelia> rakudo-moar 1761f9: OUTPUT: «Yoink␤»

[18:34] <timotimo> m: class ding { enum FooBar <Yoink Bongo> }; say Yoink;

[18:34] <camelia> rakudo-moar 1761f9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Yoink used at line 1␤␤»

[18:34] <timotimo> m: class ding { enum FooBar <Yoink Bongo> is export; }; say Yoink;

[18:34] <camelia> rakudo-moar 1761f9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3class ding { enum FooBar <Yoink Bongo>7⏏5 is export; }; say Yoink;␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤     …»

[18:34] <timotimo> oops, that's not how you do that

[18:35] <Zoffix> export before values

[18:36] *** andrzejku joined
[18:37] <timotimo> m: class ding { enum FooBar is export <Yoink Bongo>; }; say Yoink;

[18:37] <camelia> rakudo-moar 1761f9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Yoink used at line 1␤␤»

[18:37] <timotimo> ah but i'll still have to write FooBar in front then?

[18:37] <timotimo> m: class ding { enum FooBar is export <Yoink Bongo>; }; say FooBar::Yoink;

[18:37] <camelia> rakudo-moar 1761f9: OUTPUT: «Could not find symbol '&Yoink'␤  in block <unit> at <tmp> line 1␤␤»

[18:37] <timotimo> or not?

[18:37] <timotimo> oh

[18:37] <timotimo> m: class ding { enum FooBar is export <Yoink Bongo>; }; import ding; say Yoink;

[18:37] <camelia> rakudo-moar 1761f9: OUTPUT: «Yoink␤»

[18:37] <timotimo> there it is

[18:38] <timotimo> export alone doesn't mean the outer scope imports it

[18:38] <timotimo> just says what gets imported when you do import it

[18:38] <gfldex> there are packages all the way down :)

[18:38] *** Actualeyes left
[18:38] *** andrzejku left
[18:38] *** Zoffix left
[18:39] <timotimo> this is the pack age

[18:39] <timotimo> anyway, wictory[m], does that help at all?

[18:39] *** andrzejku joined
[18:41] <nadim> lol! if that doesn't help ....

[18:42] <nadim> m: 'X'.lines.elems.say ; "X\n".lines.elems.say ; "X\n\n".lines.elems.say ;

[18:42] <camelia> rakudo-moar 1761f9: OUTPUT: «1␤1␤2␤»

[18:42] *** Actualeyes joined
[18:42] <wictory[m]> timotimo: sry I will try this now

[18:45] <wictory[m]> This is the enum in question https://github.com/wictory/openssl/blob/10315ddc1db17e02e8083189a5649f477946fe06/lib/OpenSSL/RSATools.pm6#L14

[18:45] *** wamba joined
[18:46] <wictory[m]> I didn't use any < or >, is this wrong?

[18:46] <raschipi> wictory[m]: No, it's fine, they are two ways to write the same thing.

[18:47] <wictory[m]> so, should it be "is export"?

[18:48] <wictory[m]> I'm running my out-of-tree script with "perl6 -I~/dir/perl6-openssl test.p6", to override the zef installed OpenSSL module

[18:49] *** espadrine joined
[18:51] <nadim> wictory[m]: either #1 use 'is export' where you define your class and enums + import in your script or # do not use "is export" and use class::Enum to access your enum. 

[18:57] <wictory[m]> hmm so if I use "use OpenSSL::RSATools;", it will not work?

[19:00] *** zengargoyle joined
[19:05] *** haha_ joined
[19:06] *** Kyo91 left
[19:08] *** brrt joined
[19:15] *** stmuk_ joined
[19:18] *** stmuk left
[19:21] <nadim> wictory[m]: timotimo showed you the code for both ways, I re-explained them. Try, following timotimo sysntex, it's just 2 tries, if it still fails, nopaste your code as you have been asked above. 

[19:21] *** rindolf left
[19:23] <nadim> s/sysntex/syntax/

[19:23] *** Kyo91 joined
[19:25] *** pilne joined
[19:28] *** andrzejku left
[19:28] *** Kyo91 left
[19:29] *** andrzejku joined
[19:32] *** rindolf joined
[19:33] <wictory[m]> ok everyone :) so the "is export" works (obviously), the problem was that I used "perl6 -I~/dir/perl6-openssl test.p6" instead of "perl6 -I ~/dir/perl6-openssl test.p6" (notice the space)

[19:33] <wictory[m]> thanks everyone for your time!

[19:34] <geekosaur> yeh, ~ is actually shell magic and the shell won't translate it unless it's preceded by space (or colon)

[19:35] *** Kyo91 joined
[19:35] <wictory[m]> yez

[19:36] *** darutoko left
[19:36] <wictory[m]> yes, turns out "perl6 -I$HOME/dir/perl6-openssl test.p6" works, I better remember this ..

[19:37] *** brrt left
[19:38] *** pierre_ joined
[19:38] <smls> m:  my $c = Channel.new;   (await ^10 .map: -> $i { start "".match(/ { $c.send: $i } /) });  $c.close; say $c.sort;

[19:38] <camelia> rakudo-moar 1761f9: OUTPUT: «(2 2 4 5 7)␤»

[19:38] <smls> bisectable6:  my $c = Channel.new;   (await ^10 .map: -> $i { start "".match(/ { $c.send: $i } /) });  $c.close; say $c.sort;

[19:38] <bisectable6> smls, Bisecting by output (old=2015.12 new=1761f95) because on both starting points the exit code is 0

[19:38] <bisectable6> smls, bisect log: https://gist.github.com/f11462b8c44ebb752410b6d056a4a47e

[19:38] <bisectable6> smls, (2015-12-29) https://github.com/rakudo/rakudo/commit/461e635f0d243f3c676f1b8eeaf5ea69387023ba

[19:39] <smls> wat.

[19:40] <smls> heh, I need a more reliable test to bisect

[19:42] *** pierre_ left
[19:43] <AlexDaniel> usually bisectable6 will tell you that you're doing something like “say rand”, but in this case the output was identical at least once :)

[19:43] <smls> bisectable6:  my $c = Channel.new;   (await ^100 .map: -> $i { start "".match(/ { $c.send: $i } /) });   $c.close; say $c.sort.list eqv (^100).list;

[19:43] <bisectable6> smls, On both starting points (old=2015.12 new=1761f95) the exit code is 0 and the output is identical as well

[19:43] <bisectable6> smls, Output on both points: «False»

[19:43] *** Sgeo_ left
[19:43] <smls> So not a regression it seems.

[19:45] <smls> committable6:  releases  my $c = Channel.new;   (await ^100 .map: -> $i { start "".match(/ { $c.send: $i } /) });   $c.close; say $c.sort.list eqv (^100).list;

[19:45] <committable6> smls, ¦releases (21 commits): «False»

[19:46] *** Guest3761 left
[19:50] *** Sgeo joined
[19:50] *** brrt joined
[19:56] *** evanm joined
[19:57] *** Sgeo left
[20:01] *** notostraca joined
[20:01] *** Geth left
[20:01] *** Geth joined
[20:03] *** Sgeo joined
[20:10] *** andrzejku left
[20:11] *** haha_ left
[20:33] *** markmont left
[20:34] *** lizmat joined
[20:36] *** Praise joined
[20:36] *** Praise left
[20:36] *** Praise joined
[20:45] *** brrt left
[20:47] <[Coke]> didn't see an answer to the tag question: tags prior to the Christmas release had named releases. This practice stopped with the that release.

[20:47] <[Coke]> Now they are just date baesd.

[20:47] <[Coke]> *based.

[20:49] *** colomon joined
[20:51] *** notostraca is now known as TEttinger

[20:53] <AlexDaniel> what would be the nicest way to create a block that does nothing? {;} ?

[20:54] <raschipi> (+ *)

[20:55] <timotimo> tbut + does something

[20:57] *** sufrostico left
[20:59] *** espadrine left
[21:03] *** mcmillhj left
[21:03] *** mcmillhj_ joined
[21:04] *** smls left
[21:05] *** smls joined
[21:06] *** Kyo91 left
[21:07] <smls> AlexDaniel: Define "does nothing". `{;}` is a block that accepts zero or one arguments, and always returns `Nil`.

[21:07] *** evanm left
[21:08] *** emeric joined
[21:08] *** mcmillhj_ left
[21:08] <AlexDaniel> smls: I think I'm having a little bit of XY issue here…

[21:09] *** sufrostico joined
[21:09] *** skids joined
[21:09] <timotimo> probably

[21:09] <AlexDaniel> where the solution for X is to fix the damn module

[21:16] *** emeric left
[21:17] *** raschipi left
[21:20] *** emeric joined
[21:22] *** itaipu left
[21:24] *** emeric left
[21:25] <AlexDaniel> which is now here: https://github.com/perlpilot/p6-sake/pull/11

[21:26] *** colomon left
[21:27] *** sena_kun left
[21:30] *** setty1 left
[21:37] *** markmont joined
[21:39] *** st_elmo left
[21:41] *** Kyo91 joined
[21:41] *** evanm joined
[21:46] *** Kyo91 left
[21:51] *** cdg left
[21:54] *** cdg joined
[21:55] *** rindolf left
[22:10] *** nhywyll left
[22:11] *** evanm left
[22:11] *** dh7320 joined
[22:12] *** skids left
[22:19] *** dh7320 left
[22:23] *** snarkyboojum joined
[22:25] *** Kyo91 joined
[22:26] *** Kyo91 left
[22:31] *** smls left
[22:40] *** sufrostico left
[22:43] *** dh7320 joined
[22:45] *** RockyBalboa left
[22:45] *** mcmillhj joined
[22:46] *** colomon joined
[22:48] *** Guest69863 joined
[22:50] *** mcmillhj left
[23:00] *** mcmillhj joined
[23:05] *** Cabanossi left
[23:06] *** Cabanossi joined
[23:11] *** Guest69863 left
[23:12] *** nadim left
[23:14] *** sufrostico joined
[23:15] *** colomon left
[23:23] *** Guest90341 is now known as harrisi

[23:24] *** colomon joined
[23:34] *** colomon left
[23:38] *** colomon joined
[23:42] *** cdg_ joined
[23:45] *** cdg left
[23:46] *** cdg_ left
[23:50] *** mcmillhj left
