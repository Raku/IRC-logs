[00:06] <Geth> ¬¶ doc: bc0c585d8f | (Samantha McVey)++ | 2 files

[00:06] <Geth> ¬¶ doc: Make sure to replace forwardslash on unix systems filenames

[00:06] <Geth> ¬¶ doc: 

[00:06] <Geth> ¬¶ doc: Also make sure to check for the proper characters in htmlify.p6

[00:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bc0c585d8f

[00:11] *** jferrero left
[00:18] *** greenspaceman joined
[00:23] <Geth> ¬¶ doc: 6ca67e44a0 | (Zoffix Znet)++ | doc/Language/io-guide.pod6

[00:23] <Geth> ¬¶ doc: [io grant] Start sketching out Definitive IO Guide‚Ñ¢

[00:23] <Geth> ¬¶ doc: 

[00:23] <Geth> ¬¶ doc: Likely will replace the current io.pod6 eventually. Start it off

[00:23] <Geth> ¬¶ doc: in a separate file for now.

[00:23] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6ca67e44a0

[00:35] *** Cabanossi left
[00:37] <Geth> ¬¶ doc: e15bbf88f8 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/io-guide.pod6

[00:37] <Geth> ¬¶ doc: Fix typo; BenGoldberg++

[00:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e15bbf88f8

[00:37] *** Cabanossi joined
[00:44] * BenGoldberg wonders why indir() is only available as a subroutine, not as a method.

[00:45] * BenGoldberg also wonders why indir() doesn't provide an optional :chdir argument, which would change directory into the argument, then later, back to whatever the cwd had been.

[00:45] <u-ou> m: sub f { .say }; f 'hi'

[00:45] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Calling f(Str) will never work with declared signature ()‚ê§at <tmp>:1‚ê§------> 3sub f { .say }; 7‚èè5f 'hi'‚ê§¬ª

[00:47] <u-ou> why don't sub decl's get the default sig?

[00:56] <samcv> good day #perl6

[00:57] <samcv> hope you are all well

[00:57] <skids> m:  sub f { @_.shift.say }; f "HI"

[00:57] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´HI‚ê§¬ª

[00:57] <skids> u-ou: see https://design.perl6.org/S06.html#Perl5ish_subroutine_declarations

[00:57] <skids> (You have to mention @_)

[00:58] <samcv> nice i fixed the docs build

[00:58] <samcv> before it failed i guess or something idk. oh yeah travisci is gone

[00:58] <samcv> and dosen't spam the channel when things fail anymore

[00:58] <samcv> on vacation for the last weeks. unknown.

[01:00] <u-ou> thanks

[01:00] <TimToady> m: my &f = { .say }; f 'hi'

[01:00] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´hi‚ê§¬ª

[01:00] <TimToady> and that's just as short

[01:00] <u-ou> :)

[01:00] <u-ou> nice

[01:00] <u-ou> I'm going to add that to my code now

[01:01] <TimToady> since there are signatures now, we tend to encourage people to be more explicit when they're officially writing subs

[01:02] <BenGoldberg> m: my &f = &say; f 'hi';

[01:02] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´hi‚ê§¬ª

[01:02] <BenGoldberg> . o O (And who said that perl6 isn't a golfing language ;))

[01:03] <samcv>  argh my puppy

[01:03] <samcv> middle name is probably trouble

[01:04] <u-ou> yeah, I want to use sigs most of the time, I just thought that style would be nice for writing short predicate functions

[01:06] *** greenspaceman_ joined
[01:08] *** greenspaceman left
[01:10] *** greenspaceman_ left
[01:11] *** greenspaceman joined
[01:23] *** AndyDee left
[01:36] *** Cabanossi left
[01:37] *** Cabanossi joined
[01:43] *** bjz_ left
[01:46] *** bjz joined
[01:46] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:53] *** gdonald left
[01:53] *** gdonald joined
[01:56] *** ponbiki joined
[01:58] *** greenspaceman left
[02:02] *** bjz left
[02:08] *** [particle] left
[02:08] *** [particle]1 joined
[02:10] *** [particle] joined
[02:14] *** [particle]1 left
[02:15] *** [particle] left
[02:16] *** [particle] joined
[02:18] *** noganex_ joined
[02:21] *** noganex left
[02:30] *** rindolf left
[02:36] <w4and0er96> excuse me , how can I distinguish  `run 'echo', 'hello'; ` from `shell 'echo hello'; ` why their form differ?

[02:40] <geekosaur> shell is the quick and dirty one like perl 5's system

[02:41] <geekosaur> run is the flexible one that lets you set up pipes and such

[02:41] <ugexe> shell cant pipe?

[02:41] <geekosaur> not to your perl script

[02:42] <geekosaur> that is, you cannot run a command via the shell verb and read its output or pipe stuff to it

[02:42] <geekosaur> it just runs it

[02:43] <ugexe> maybe I misunderstand... what is :out/:err/:in for with shell if not those things?

[02:44] *** bjz joined
[02:46] <w4and0er96> so whether `run` or `shell`, i can run only one command per statement?

[02:46] <ugexe> you can run multiple with shell

[02:46] <ugexe> depending on your os/shell anyway

[02:46] <ugexe> shell 'foo && bar'

[02:46] <w4and0er96> oh of course! XD

[02:46] <w4and0er96> thx

[02:48] <geekosaur> or shell 'foo; bar'

[02:48] <geekosaur> windows may be shell 'foo & bar', I don't recall if it uses cmd

[02:48] *** kyan left
[02:49] *** bjz left
[03:01] *** kyan joined
[03:19] *** bjz joined
[03:23] *** bjz left
[03:24] *** bjz joined
[03:25] *** Sgeo__ left
[03:27] *** BenGoldberg left
[03:31] *** Sgeo joined
[03:50] *** Cabanossi left
[03:51] *** Cabanossi joined
[03:52] *** bjz left
[03:59] *** bjz joined
[04:01] *** [particle] left
[04:19] *** Cabanossi left
[04:21] *** CIAvash joined
[04:21] *** Cabanossi joined
[04:24] *** [particle] joined
[04:28] *** labster left
[04:33] *** labster joined
[04:41] *** kurahaupo left
[04:41] *** bjz left
[05:02] *** bjz joined
[05:07] *** pytuger joined
[05:07] *** pytuger left
[05:07] *** pytuger joined
[05:09] *** astj left
[05:09] *** astj joined
[05:14] *** astj left
[05:14] *** skids left
[05:21] *** geekosaur left
[05:23] *** geekosaur joined
[05:34] *** Cabanossi left
[05:35] *** Guest49548 joined
[05:36] *** Cabanossi joined
[05:43] *** Guest49548 left
[05:55] *** wamba joined
[06:21] *** silug left
[06:31] *** silug joined
[06:35] *** Cabanossi left
[06:36] *** ChoHag joined
[06:36] *** Cabanossi joined
[06:41] *** darutoko joined
[06:44] <u-ou> hi

[06:44] <moritz> ho

[07:03] *** labster left
[07:03] *** labster joined
[07:03] *** TEttinger left
[07:11] *** parv joined
[07:15] *** TEttinger joined
[07:19] *** Cabanossi left
[07:21] *** Cabanossi joined
[07:24] *** GDV joined
[07:24] <GDV> hi

[07:25] <GDV> i need help: you can give me `rm -rf` in perl (obfuscated)? 

[07:27] <moritz> GDV: what do you need that for?

[07:28] <GDV> i learn 

[07:29] <GDV> i know only this: perl -e '$??s:;s:s;;$?::s;;=]=>%-{<-|}<&|`{;;y; -/:-@[-`{-};`-{/" -;;s;;$_;see' 

[07:30] <GDV> Is there still, or is it all

[07:30] <GDV> ?

[07:30] <moritz> GDV: somehow I'm not convinced you are doing this for ethical reasons

[07:31] <GDV> why?

[07:31] *** mr-foobar left
[07:32] <moritz> because obfuscating an rm -rf is typically done with mischief in mind

[07:32] <moritz> something you give your "friends" as a prank, or worse

[07:33] <GDV> nope.

[07:33] <GDV> i just learn 

[07:34] <moritz> so, what's your curriculum?

[07:34] <GDV> i read book

[07:35] <GDV> Learning PERL (5-th)

[07:36] <moritz> which doesn't contain obfuscation excercises

[07:36] <moritz> anyway, have fun learning

[07:38] <samcv> GDV, tell your friends to close their eyes

[07:38] <GDV> but I need obfuscation 

[07:38] <samcv> and no peeking

[07:39] <eater> samcv :'))

[07:39] <eater> GDV: try double rot13, very strong obfuscation

[07:39] *** leah2 left
[07:39] <GDV> rot13 - no

[07:39] <GDV> i know rot13

[07:40] <GDV> pseudo crypt alg

[07:41] <samcv> GDV, have fun http://search.cpan.org/~dconway/Acme-Bleach-1.150/lib/Acme/Bleach.pm

[07:41] <samcv> it will still be suspicious. but you can't easily read it

[07:41] <samcv> without effort

[07:42] <samcv> "run this suspiciously blank except for module use file. totally will be good. close your eyes it will all be ok" - said nobody ever convincingly

[07:44] <eater> samcv: doesn't matter if you already have full root access

[07:44] <samcv> well. that's why i said have his friend close his eyes

[07:45] <samcv> tell your friend you're only going to type 'a few characters' and it will be great

[07:45] <samcv> no peeking

[07:48] <GDV> this? http://cpansearch.perl.org/src/DCONWAY/Acme-Bleach-1.150/demo/demo_empty.pl

[07:48] <GDV> run? 

[07:48] <samcv> yes

[07:49] <samcv> why not

[07:49] <GDV> or this? http://cpansearch.perl.org/src/DCONWAY/Acme-Bleach-1.150/demo/Empty.pm

[07:49] <samcv> please bleach all your dirty code

[07:49] <samcv> uh

[07:49] <samcv> neither. it's a module

[07:50] <samcv> that cleans out all the text in your code

[07:50] <samcv> cause it probably is horrible and nobody wants to see it

[07:50] <GDV> stop, stop, please 

[07:51] <GDV> what needs run for rm -rf? 

[07:51] <samcv> you use the module in an existing script. and then. it makes all the text invisible by replacing with hidden characters

[07:52] <GDV> ah, ok

[07:52] <GDV> onelines avaolable for this? )

[07:52] *** zapwai left
[07:52] <samcv> no only text files

[07:52] <GDV> bad((

[07:52] <samcv> err .pl files

[07:53] *** leah2 joined
[07:56] <GDV> K/ ty for info

[07:58] *** GDV left
[08:00] <eater> samcv: http://edge.shop.com/ccimg.shop.com/250000/250000/250020/products/lg_1186730213.jpg

[08:05] <Geth> ¬¶ testml-pm6: 3b26eefee2 | (David Warring)++ | lib/TestML/Runner.pm

[08:05] <Geth> ¬¶ testml-pm6: work with Rakudo 6c lexical loading

[08:05] <Geth> ¬¶ testml-pm6: 

[08:05] <Geth> ¬¶ testml-pm6: Tests are still a bit nosiy

[08:05] <Geth> ¬¶ testml-pm6: review: https://github.com/perl6-community-modules/testml-pm6/commit/3b26eefee2

[08:07] *** raiph left
[08:07] *** leah2 left
[08:08] *** raiph joined
[08:09] *** mr-foobar joined
[08:11] <Geth> ¬¶ testml-pm6: 8467ca86c4 | (David Warring)++ | 2 files

[08:11] <Geth> ¬¶ testml-pm6: remove failure warnings

[08:11] <Geth> ¬¶ testml-pm6: review: https://github.com/perl6-community-modules/testml-pm6/commit/8467ca86c4

[08:12] *** raiph left
[08:13] *** raiph joined
[08:15] *** raiph left
[08:19] *** raiph joined
[08:22] *** leah2 joined
[08:27] *** AlexDaniel left
[08:38] *** RabidGravy joined
[08:41] *** kyan left
[08:47] *** rindolf joined
[08:49] <RabidGravy> Boom

[08:49] <u-ou> o/

[08:51] <samcv> hey eater 

[08:52] <samcv> hehe

[08:56] <eater> hey samcv 

[08:56] <samcv> i hpoed ACME::Bleach would be sufficiently useless for his malicious purposes but myabe get him to go away

[08:56] <u-ou> I'm going to stay up past my bedtime so I can write perl 6 more

[08:56] <samcv> yay

[08:57] <u-ou> lol @ obfuscated rm -rf

[09:03] *** rogbro joined
[09:06] *** rogbro left
[09:10] *** azawawi joined
[09:10] <azawawi> hi #perl6

[09:12] * azawawi drops a needle

[09:12] * moritz catches the needle before it hits the floor

[09:12] <tadzik> /r/dadreflexes

[09:12] *** jraglin left
[09:14] <azawawi> :)

[09:15] <moritz> \o tadzik 

[09:15] * azawawi time to work on NCurses::Exorcism :)

[09:15] * moritz struggles with JS and the DOM

[09:16] <tadzik> moritz: o/

[09:17] <moritz> some js-based styling that works in the chrome dev tool console, but not in the code I'm writing

[09:19] *** Cabanossi left
[09:20] <azawawi> moritz: share it please. Maybe i can help :)

[09:21] *** araraloren joined
[09:21] *** Cabanossi joined
[09:22] <araraloren> m: say " " ~~ /<![2]>/; say " " ~~ /<-[2]>/;

[09:22] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´ÔΩ¢ÔΩ£‚ê§ÔΩ¢ ÔΩ£‚ê§¬ª

[09:22] <yoleaux> 11 Apr 2017 17:25Z <Zoffix> araraloren: Unless you merged it already, PR to fix your module for latest Rakudo: https://github.com/araraloren/Net-FTP/pull/24

[09:22] *** Cabanossi left
[09:22] <moritz> azawawi: alright, this is about https://irclog.perlgeek.de/

[09:22] <moritz> azawawi: the inline javascript has the line                     $('.ct-chart path').css('stroke', 'black');

[09:23] *** Cabanossi joined
[09:23] <araraloren> m: say " " ~~ /<![2]>/; # what is matched ?

[09:23] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´ÔΩ¢ÔΩ£‚ê§¬ª

[09:23] <moritz> which, when run in the chrome dev tools, actually changes the line of activity graphs

[09:24] <moritz> m: say (' ' ~~ /<![2]>/).perl

[09:24] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´Match.new(list => (), made => Any, pos => 0, hash => Map.new(()), orig => " ", from => 0)‚ê§¬ª

[09:24] <moritz> araraloren: an empty string

[09:24] <araraloren> How to make a negative set ? or prevent match empty string ?

[09:24] <moritz> araraloren: <-[2]>

[09:25] *** Cabanossi left
[09:25] <araraloren> But rakudo warning me if I do this ` / <-[ <set> <set2> ]> /`

[09:25] *** Cabanossi joined
[09:25] <moritz> araraloren: what is set and set2?

[09:25] <samcv> guys what do we have about line based break points or functions or whatever

[09:25] <araraloren> or this `my regex { <-[ <set> <set2> ]> }`

[09:25] <samcv> and the state of perl6-debug

[09:26] <samcv> someone in #moarvm is asking

[09:26] <araraloren> Something like <:L>

[09:26] <azawawi> moritz: over here it is showing http://pasteboard.co/5k0CMLyn1.png

[09:26] <azawawi> moritz: chrome/firefox

[09:26] <moritz> araraloren: maybe <-:L> or so?

[09:27] <moritz> azawawi: right, that's red fill, no stroke

[09:27] <moritz> azawawi: open the dev tools in chrome, paste $('.ct-chart path').css('stroke', 'black'); into the console

[09:28] <moritz> azawawi: and it'll change the color

[09:28] <moritz> azawawi: but the same code already is in page, and doesn't seem to do anything there

[09:29] *** Rawriful joined
[09:29] <araraloren> m: my regex english { <:L> } ; my regex chinese { <:Block("CJK Unified Ideographs")> } ; my regex chanden { <:Block("CJK Unified Ideographs")+:L> }; say " " ~~ /<!chanden>/;

[09:29] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´ÔΩ¢ÔΩ£‚ê§¬ª

[09:29] <azawawi> moritz: try the following: setTimeout( function() { $('.ct-chart path').css('stroke', 'black'); }, 0); 

[09:29] <araraloren> m: my regex english { <:L> } ; my regex chinese { <:Block("CJK Unified Ideographs")> } ; my regex chanden { <-[ <english> | < chinese> ]> }; say " " ~~ /<chanden>/;

[09:29] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´Potential difficulties:‚ê§    Repeated character (h) unexpectedly found in character class‚ê§    at <tmp>:1‚ê§    ------> 3 Ideographs")> } ; my regex chanden { <-7‚èè5[ <english> | < chinese> ]> }; say " " ~‚ê§    Repeated character (s) unexpectedly‚Ä¶¬ª

[09:29] *** ChoHag left
[09:30] <azawawi> moritz: sometimes you're updating but the browser has not rendered it. Common JS/DOM problem maybe

[09:30] <moritz> araraloren: you can formulate that as my regex chanden { [<!english> <!chinese> . ] }

[09:31] <moritz> araraloren: the . forces the regex to consume a character, even though the assertions are zero-width

[09:31] <araraloren> Oh, let me try it ..

[09:33] <moritz> azawawi: thanks, will try. (I just managed to bust my development environment, no idea what's up...)

[09:33] <azawawi> https://github.com/azawawi/perl6-ncurses/issues/10 # Implement simpler holy-based fun API :)

[09:34] <araraloren> moritz: It worked, but I have confused .. . Is there some document about this  ?

[09:34] *** parv left
[09:35] <araraloren> I mean about negative set 

[09:35] <moritz> araraloren: https://docs.perl6.org/language/regexes.html has something about character classes

[09:36] <moritz> araraloren: but the use of <!foo> is not a character class, it's a negated zero-width assertion

[09:36] <araraloren> moritz: OH ... I make a mistake about it

[09:36] <araraloren> s/make/made/

[09:37] <araraloren> moritz: thanks for your help .

[09:38] <araraloren> \quit

[09:38] *** araraloren left
[09:40] *** azawawi left
[09:41] <w4and0er96> how can i distinguish `sub f ($x --> Int:D)` from `sub f($x --> Int)` , i think i need an example

[09:41] <moritz> m: sub f( --> Int:D ) { Int }; f()

[09:41] <camelia> rakudo-moar 0b5a41: OUTPUT: ¬´Type check failed for return value; expected return type Int cannot be itself (perhaps returning a :D type object?)‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:41] <moritz> m: sub f( --> Int ) { Int }; f()

[09:41] <camelia> rakudo-moar 0b5a41: ( no output )

[09:42] <moritz> w4and0er96: ^^ that's the difference

[09:44] <w4and0er96> @moritz  oh! thx

[09:44] <moritz> timotimo: now https://irclog.perlgeek.de/ should make you happier

[09:46] <samcv> why is the search on the docs broken!

[09:46] <samcv> sky is falling!

[09:47] <samcv> argh. somebody messed up the javascript

[09:54] *** labster left
[09:56] <samcv> i found it

[09:56] <samcv> { category: "Syntax", value: "\\", url: "/syntax/\" },

[09:56] <samcv> not sure what that's supposed to be for

[09:57] <samcv> backslash i guess?

[10:00] <moritz> presumably

[10:02] <samcv> ok i thin i found the problem

[10:02] <samcv> it wasn't escaping reverse solidus in every part of the javascript

[10:04] <Geth> ¬¶ doc: 6fba76212a | (Samantha McVey)++ | htmlify.p6

[10:04] <Geth> ¬¶ doc: Make sure to escape backslash's in .js search files

[10:04] <Geth> ¬¶ doc: 

[10:04] <Geth> ¬¶ doc: It was not escaping backslashes, so when a backslash appeared right

[10:04] <Geth> ¬¶ doc: before the ending " double quote mark, it ruined the syntax for the rest

[10:04] <Geth> ¬¶ doc: of the javascript file. This should hopefully get the search working

[10:04] <Geth> ¬¶ doc: again on docs.perl6.org

[10:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6fba76212a

[10:06] *** TEttinger left
[10:10] <lizmat> PSA: Perl 6 Weekly will be a bit later today, probably tomorrow, due to some unforeseen circumstances that will make me offline for the next 12 hours

[10:10] *** lizmat left
[10:10] <timotimo> moritz: cool :)

[10:18] <Geth> ¬¶ doc: briandfoy++ created pull request #1282: Capitalize the Exception method

[10:18] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1282

[10:18] <u-ou> i have a headache

[10:18] *** mr-foobar left
[10:20] *** aindilis left
[10:24] <samcv> \o/ yay i fixed the docs

[10:24] <samcv> search works once more

[10:24] <u-ou> yay

[10:24] <samcv> though i can't get to the page whose title is '\' but at least the whole thing isn't broken

[10:24] <moritz> samcv++

[10:25] <samcv> looks like the file exists https://docs.perl6.org/syntax//%5c.html

[10:27] *** mr-foobar joined
[10:29] <samcv> looks like there's only one url with an actual backslash in it

[10:30] *** nhywyll joined
[10:31] <moritz> might change when we get [\...]

[10:31] *** nhywyll left
[10:35] <Geth> ¬¶ doc: 46e9c3aac0 | (Samantha McVey)++ | htmlify.p6

[10:35] <Geth> ¬¶ doc: Replace URL's with backslashes in them with their html entities

[10:35] <Geth> ¬¶ doc: 

[10:35] <Geth> ¬¶ doc: Chrome at least refuses to access a non html entity encoded URL that

[10:35] <Geth> ¬¶ doc: contains a properly escaped backslash.

[10:35] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/46e9c3aac0

[10:35] <samcv> that should fix things

[10:35] <samcv> for the last page that doesn't work

[10:36] *** Ven joined
[10:36] *** Ven is now known as Guest88951

[10:44] *** bjz_ joined
[10:46] *** bjz left
[10:58] *** espadrine joined
[11:05] <melezhik> Hi!

[11:05] <melezhik> given I have a function named f1 in MAIN

[11:06] <melezhik> how can I call it from other unit?

[11:06] <melezhik> by full name ( like main::f1() in Perl5)

[11:06] <gfldex> melezhik: unit as in compunit?

[11:07] <melezhik> unit module SomeModule ;

[11:07] <gfldex> melezhik: this might help https://gfldex.wordpress.com/2017/04/06/module-all-the-things/

[11:07] <timotimo> needs to be "our" for that to work

[11:11] <tadzik> yay moritzbook!

[11:11] <tadzik> moritz++

[11:11] <moritz> thanks tadzik 

[11:12] <moritz> I guess I'll investigate createspace to bring it into print form

[11:12] <moritz> (I had a publisher, but that didn't work out well)

[11:13] <tadzik> is there something like Game Crafter for books? :)

[11:15] <moritz> that's createspace or lulu.com

[11:16] *** cpage__ joined
[11:16] *** cpage_ left
[11:16] *** cpage__ is now known as cpage_

[11:18] *** kaare_ joined
[11:20] <melezhik> our f1 ; and then MAIN:f1() inside unit works for me

[11:23] <moritz> wow, I can't believe how cheap print-on-demand can be

[11:23] <moritz> https://www.createspace.com/Products/Book/#content7:BookOrderCalculator

[11:24] <moritz> black and white 6" x 9", 10 copies, 120 pages: $2.29 per book

[11:24] <moritz> shipping them to Germany is nearly as expensive as printing

[11:24] <tadzik> interesting how 2.29 doesn't seem to change, regardless of quantity

[11:25] <moritz> it seems they always do print-on-demand, and don't create a printing master for > 10k books or so

[11:33] *** Guest88951 left
[11:34] *** Cabanossi left
[11:36] *** Cabanossi joined
[11:56] *** gdonald left
[11:56] *** gdonald joined
[11:59] *** raiph left
[12:00] *** raiph joined
[12:05] *** robertle left
[12:07] <Geth> ¬¶ doc: cf0154f3b8 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Failure.pod6

[12:07] <Geth> ¬¶ doc: Fix incorrect example; briandfoy++

[12:07] <Geth> ¬¶ doc: 

[12:07] <Geth> ¬¶ doc: Closes #1282

[12:07] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cf0154f3b8

[12:11] <timotimo> i find it sort of strange that it uses .exception.throw -> CATCH just to show that you can get the inner exception from a failure object

[12:12] *** robertle joined
[12:14] <Geth> ¬¶ doc: 97292f8e4f | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Failure.pod6

[12:14] <Geth> ¬¶ doc: Simplify example

[12:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/97292f8e4f

[12:15] <timotimo> yeah, that's a bit better

[12:15] <timotimo> ... i hope

[12:16] <Geth> ¬¶ doc: 56392848b2 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Failure.pod6

[12:16] <Geth> ¬¶ doc: Reword example

[12:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/56392848b2

[12:25] *** astj joined
[12:31] *** sufrostico joined
[12:36] *** perlpilot joined
[12:38] *** zakharyas joined
[12:39] *** araraloren joined
[12:44] *** astj left
[12:50] *** raschipi joined
[12:51] *** SCHAPiE left
[12:53] *** ChoHag joined
[12:55] <Geth> ¬¶ specs: 84f5da58d6 | (Zoffix Znet)++ (committed using GitHub Web editor) | v6d.pod

[12:55] <Geth> ¬¶ specs: Swap IO::Path.child to use .child-secure's code

[12:55] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/commit/84f5da58d6

[12:56] *** SCHAPiE joined
[12:58] *** mcmillhj joined
[13:01] *** wamba left
[13:03] *** skids joined
[13:06] *** wamba joined
[13:09] <Geth> ¬¶ doc: b9c9117fde | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[13:09] <Geth> ¬¶ doc: [io grant] Toss IO::Path.child-secure

[13:09] <Geth> ¬¶ doc: 

[13:09] <Geth> ¬¶ doc: We'll make .child be .child-secure around 6.d time instead.

[13:09] <Geth> ¬¶ doc: 

[13:09] <Geth> ¬¶ doc: Discussion: https://irclog.perlgeek.de/perl6-dev/2017-04-17#i_14439386

[13:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b9c9117fde

[13:09] <Geth> ¬¶ specs: bc769f1c99 | (Zoffix Znet)++ (committed using GitHub Web editor) | v6d.pod

[13:10] <Geth> ¬¶ specs: Add removed docs commit

[13:10] <Geth> ¬¶ specs: 

[13:10] <Geth> ¬¶ specs: for salvagin later

[13:10] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/commit/bc769f1c99

[13:19] *** MasterDuke_ joined
[13:35] *** Cabanossi left
[13:36] *** Cabanossi joined
[13:51] <raschipi> gfldex: You got travis to use ubuntu packages, right? What do you think about enabling the tests that run on travis on debian's and ubuntu's own continuous integration?

[13:56] *** astj joined
[13:58] *** raiph left
[14:01] <gfldex> raschipi: that happens already every time we do a release see https://packages.qa.debian.org/r/rakudo.html

[14:03] <gfldex> raschipi: we don't really need continous test anyways in advance. In retrospective it would be very helpful to do so to answer questions like raised here https://github.com/jnthn/grammar-debugger/issues/34

[14:03] <gfldex> raschipi: i'm building the last 100 rakudo commits in a chain of btrfs snapshots right now to see how much diskspace that takes up and how long it takes

[14:06] <MasterDuke_> gfldex: we build and then compress them with zstd on the *able server, they're ~6m each

[14:08] <raschipi> gfldex: So why can't I see the results here: https://ci.debian.net/packages/r/

[14:09] <gfldex> raschipi: "The package has a debian/watch file, but the last attempt to use it for checking for newer upstream versions failed with an error:" may be the reason

[14:12] <gfldex> raschipi: however, just setting up a daily travis cronjob on Task::Star might solve the problem to find out about such blockers the day the release is planned.

[14:13] *** cdg joined
[14:14] <gfldex> tadzik would have to do that as he is the owner of that package

[14:21] <Geth> ¬¶ doc: 61cb776335 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[14:21] <Geth> ¬¶ doc: [io grant] Document IO::Path.sibling

[14:21] <Geth> ¬¶ doc: 

[14:21] <Geth> ¬¶ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/8bacad8f84

[14:21] <Geth> ¬¶ doc: Tests: https://github.com/perl6/roast/commit/3b36d4db0d

[14:21] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/61cb776335

[14:21] <tadzik> gfldex: ah, travis, yes. I think I can do that, hold on

[14:22] <tadzik> I used to get tons of PRs to enable travis in places

[14:22] *** raschipi left
[14:22] *** khw joined
[14:25] <tadzik> it's enabled now

[14:26] <gfldex> tadzik: you need to do one build run before you can enable travis cronjobs (unless they changed that already)

[14:28] <tadzik> build run?

[14:28] <gfldex> tadzik: also, you will get all those angry travis e-mails. May be better to have an ircbot that is doing the testing for "modules we don't want to be be broken, ever" and raises alarms here.

[14:28] <tadzik> gfldex: I seem to not get them, I just noticed Text::T9 is broken and I was never emailed about that

[14:28] *** raschipi joined
[14:29] <gfldex> tadzik: travis wont act without another commit after activating a repo

[14:29] <tadzik> ah

[14:29] <gfldex> tadzik: it's using the e-mail given to github

[14:30] <tadzik> I may have disabled their emails in the settings %)

[14:30] <tadzik> or I may have missed that t9 email

[14:30] *** perlpilot left
[14:33] *** bjz_ left
[14:35] <gfldex> tadzik: I send a PR your way.

[14:40] <tadzik> the ran has already completed, it seems :)

[14:41] <tadzik> and I did get an email after all

[14:42] <tadzik> https://travis-ci.org/tadzik/Task-Star/builds/222807397

[14:42] <timotimo> damn

[14:43] <timotimo> it only runs until it sees one failure

[14:43] *** MilkmanDan left
[14:44] <gfldex> tadzik: panda seams not to test the deps (the PR I send changed that)

[14:45] *** MilkmanDan joined
[14:46] <timotimo> gfldex: META6::bin fails to install unless you have a github-token.txt in your ~/.meta6

[14:47] <tadzik> oh, neat, thanks

[14:47] <timotimo> because of the 010-load.t

[14:47] <gfldex> timotimo: will change that to a warning

[14:49] <timotimo> uh oh

[14:49] <timotimo> t/010-load.t ..1/?# Cannot resolve caller absolute(IO::Path: ); none of these signatures match:

[14:49] <timotimo> hm, is my rakudo up to date?

[14:50] *** zakharyas left
[14:51] *** astj left
[14:54] <raschipi> Which architecture is that running on? x86-64?

[14:56] <gfldex> timotimo: your rakudo may be old but the missing github-token.txt is fallout from [IO]

[15:05] *** Cabanossi left
[15:06] *** Cabanossi joined
[15:12] *** dogbert2 joined
[15:14] *** dogbert17 left
[15:23] *** adrusi left
[15:29] * [Coke] writes up a multi line send to talk about tribalism from the backscroll and just deletes it. :|

[15:31] *** adrusi joined
[15:32] * geekosaur resembles that...

[15:32] *** gdonald left
[15:33] *** gdonald joined
[15:34] *** alimon joined
[15:36] <gfldex> shouldn't .? on a Failure be a boolean test and disarm it?

[15:37] <gfldex> m: sub f(){ fail "foo" }; say f.?slurp;

[15:37] <camelia> rakudo-moar 0dbe45: OUTPUT: ¬´foo‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:37] <gfldex> m: sub f(){ fail "foo" }; f.?slurp;

[15:37] <camelia> rakudo-moar 0dbe45: OUTPUT: ¬´foo‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:38] <gfldex> m: sub f(){ fail "foo" }; say f.Bool;

[15:38] <camelia> rakudo-moar 0dbe45: OUTPUT: ¬´False‚ê§¬ª

[15:39] <gfldex> m: sub f(){ fail "foo" }; say f // '';

[15:39] <camelia> rakudo-moar 0dbe45: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Null regex not allowed‚ê§at <tmp>:1‚ê§------> 3sub f(){ fail "foo" }; say f //7‚èè5 '';‚ê§¬ª

[15:40] <gfldex> m: sub f(){ fail "foo" }; my $a = f() // ''; dd $a

[15:40] <camelia> rakudo-moar 0dbe45: OUTPUT: ¬´Str $a = ""‚ê§¬ª

[15:43] <gfldex> lolwhilewaitingfortravisibloggedalittle: https://gfldex.wordpress.com/2017/04/17/slipping-in-a-config-file/

[15:43] <avuserow> ~

[15:47] *** lizmat joined
[15:51] <timotimo> gfldex: no, .? just checks if a method exists on a thing and call it if it does

[15:51] <timotimo> doesn't check the value of the thing at all, except while trying to dispatch

[15:52] *** dogbert17 joined
[15:56] *** dogbert2 left
[15:56] *** n0xff left
[16:06] <gfldex> timotimo: the failing test is fallout from [IO]. The line it fails in says: `return unless $path.IO.e;`.

[16:08] *** mcmillhj left
[16:09] <gfldex> m: say Str.IO.e

[16:09] <camelia> rakudo-moar 31cf7d: OUTPUT: ¬´Cannot resolve caller absolute(IO::Path: ); none of these signatures match:‚ê§    (IO::Path:D $: *%_)‚ê§    (IO::Path:D $: $CWD, *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:09] <gfldex> that's the culprit

[16:10] <timotimo> oh

[16:10] <timotimo> huh, how do we do that now?

[16:14] *** mcmillhj joined
[16:14] *** zapwai joined
[16:14] <RabidGravy> It should just throw earlier, i.e. it should be IO(Str:D:)

[16:14] *** kurahaupo joined
[16:15] <RabidGravy> but

[16:15] <RabidGravy> m:  Str.?IO.e

[16:15] <camelia> rakudo-moar 31cf7d: OUTPUT: ¬´Cannot resolve caller absolute(IO::Path: ); none of these signatures match:‚ê§    (IO::Path:D $: *%_)‚ê§    (IO::Path:D $: $CWD, *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:17] <RabidGravy> doesn't ? do like 'cando' on the invocant?

[16:17] <timotimo> m: Str.?IO

[16:17] <camelia> rakudo-moar 31cf7d: ( no output )

[16:17] <timotimo> m: Str.?IO.perl.say

[16:17] <camelia> rakudo-moar 31cf7d: OUTPUT: ¬´IO::Path‚ê§¬ª

[16:17] <timotimo> m: Str.IO

[16:17] <camelia> rakudo-moar 31cf7d: ( no output )

[16:17] <RabidGravy> eugh

[16:17] <timotimo> the IO method on Str works, but it returns an undefined IO

[16:18] <timotimo> that's why it asplode in "absolute"

[16:18] <RabidGravy> so 

[16:18] <timotimo> because .e on IO:U works

[16:18] <timotimo> "works"

[16:18] <RabidGravy> it should fail earlier

[16:19] *** mcmillhj left
[16:21] <timotimo> that's what we were saying, wasn't it?

[16:21] <gfldex> RabidGravy: I don't think it can. The problem is that a non-existing IO::Path is always defined. As a consequence undefined IO::Path don't make sense.

[16:22] <gfldex> And the mistake was on my side. I never handled the case that we file I wanted to work with doesn't exist.

[16:22] <RabidGravy> yeah but Str.IO should fail ;-)

[16:25] <gfldex> m: sub handle-missing-file(Mu:U $f){ say 'I can haz file plox?' }; handle-missing-file(fail 'missing');

[16:25] <camelia> rakudo-moar 31cf7d: OUTPUT: ¬´missing‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:25] *** mcmillhj joined
[16:31] *** mcmillhj left
[16:33] *** Zoffix joined
[16:34] <Zoffix> The failing test isn't the fallout from IO. It was failing just the same but with differnt error

[16:34] <Zoffix> c: 2017.03 say Nil.IO.e

[16:34] <committable6> Zoffix, ¬¶2017.03: ¬´Cannot look up attributes in a IO::Path type object‚ê§  in block <unit> at /tmp/zI0J44hCfn line 1‚ê§ ¬´exit code = 1¬ª¬ª

[16:34] <gfldex> m: sub handle-missing-file(Mu:U $f){ say 'I can haz file plox?' }; handle-missing-file(try fail 'missing');

[16:34] <camelia> rakudo-moar 2a0a2d: OUTPUT: ¬´I can haz file plox?‚ê§¬ª

[16:35] <Zoffix> There are numerous issues in META6::bin for the path where the github-token.txt file doesn't exist. All fixed in https://github.com/gfldex/perl6-meta6-bin/pull/6

[16:35] <Zoffix> And I'm adding IO::Path:D: for sig for filetests, so they fail with saner error

[16:36] *** Zoffix left
[16:38] *** araraloren left
[16:39] <timotimo> now i don't remember any more what i was going to use meta6::bin for >_>

[16:40] <gfldex> timotimo: maybe you wanted to fork a module?

[16:42] <gfldex> m: my %h; %h{1;2;3} = 42; dd %h.antipairs

[16:42] <camelia> rakudo-moar 2a0a2d: OUTPUT: ¬´(({"2" => ${"3" => 42}}) => "1",).Seq‚ê§¬ª

[16:42] *** mcmillhj joined
[16:42] <gfldex> that doesn't feel correct

[16:43] <timotimo> ah, indeed. grammar::debugger

[16:44] <timotimo> but then i noticed that's not the one that actually failed

[16:45] <gfldex> META6::bin makes travis happy again

[16:46] *** mcmillhj left
[16:50] *** Actualeyes left
[16:54] <tadzik> looks like Grammar::Debugger fails on Task::Star: https://travis-ci.org/tadzik/Task-Star/builds/222811961

[16:55] <gfldex> tadzik: see https://github.com/jnthn/grammar-debugger/issues/34

[16:55] <tadzik> ok, awesome :)

[16:57] *** lizmat left
[16:59] *** mcmillhj joined
[17:02] *** domidumont joined
[17:27] *** zakharyas joined
[17:30] *** jraglin joined
[17:36] <Geth> ¬¶ yaml-pm6: 2402a2f30c | (David Warring)++ | lib/YAML.pm

[17:36] <Geth> ¬¶ yaml-pm6: fix CATCH block

[17:36] <Geth> ¬¶ yaml-pm6: review: https://github.com/perl6-community-modules/yaml-pm6/commit/2402a2f30c

[17:39] *** daxim joined
[17:40] <timotimo> At this point in Perl 6, using YAML is the only way to dump an object

[17:40] <timotimo> graph to text. The `.perl` method will stop at object nodes, rather than

[17:40] <timotimo> dumping them further. The `.perl` method also cannot dump cyclic data

[17:40] <timotimo> graphs. YAML.pm handles these things fine.

[17:40] <timotimo> ^- this paragraph wants fixed :)

[17:41] <timotimo> also, references to ufo %)

[17:44] <ingy> timotimo: what's the current good YAML dumper?

[17:47] <timotimo> ingy: that's not what i mea

[17:47] <timotimo> ingy: the point is that .perl can dump cyclic data graphs

[17:48] <timotimo> but YAMLish can also dump yaml, and also parse yaml ... but it doesn't have a whole lot of tests

[17:48] <ingy> timotimo: I found a bunch of bugs in yamlish

[17:48] *** Rawriful left
[17:49] <timotimo> cool, did you file 'em?

[17:49] <ingy> http://astra.perl-community.de/tinita/yts-matrix/index.html

[17:49] <timotimo> why did nobody ever show this to anybody?!? :o

[17:49] <ingy> it's pretty new

[17:49] <ingy> will talk about it in Lyon

[17:50] <timotimo> yamlish hardly parses anything

[17:50] <timotimo> yaml parses nothing at all

[17:50] <ingy> tinita++

[17:50] <timotimo> are all of these tests there parsing? or some dumping, too?

[17:51] <ingy> these are all parse tests at the moment

[17:51] <timotimo> OK, so yamlish will definitely fail pretty hard

[17:51] <ingy> https://github.com/yaml/yaml-test-suite

[17:52] <ingy> anyway, just wanted to know if there was anything newer than YAMLish

[17:54] <timotimo> nothing i know of

[18:04] *** cdg left
[18:04] *** Cabanossi left
[18:06] *** Cabanossi joined
[18:06] <alphah> hi, if grammar B is inherited from grammar A, is there a way to undefine a token inherited so it can't be available in B?

[18:08] <jnthn> Maybe override it in B with token that-thing { <!> } so that it always fails? Or you want to solve it somehow in A?

[18:08] <alphah> say grammar A has 7 tokens, and I need only 6 of these tokens in grammar B

[18:09] <alphah> yeah I want to override in B, so { <!> } this means wont match anything

[18:09] <alphah> ?

[18:09] *** dugword joined
[18:12] <alphah> jnthn: tested it, works as expected, Thanks!

[18:19] *** nightfrog joined
[18:26] *** avalenn joined
[18:32] * skids pesters jnthn about the rolevolution thing again, in case he's especially bored

[18:34] *** dugword left
[18:35] *** dha joined
[18:42] *** labster joined
[18:44] *** mr-foobar left
[18:47] *** setty1 joined
[18:48] *** dha left
[18:57] *** darutoko left
[19:05] *** Cabanossi left
[19:05] <tinita> timotimo: just FYI, the official site for that is http://matrix.yaml.io/

[19:05] <tinita> and the development site: http://flens.perlpunks.de/tinita/ytm/

[19:05] <tinita> the url ingy gave you will vanish soon

[19:05] <timotimo> thanks, i'll keep those urls in mind ... i think?

[19:06] *** Cabanossi joined
[19:07] <moritz> wohoo, tinita in #perl6! For a moment I thought I had my irssi tabs wrong :-)

[19:08] <tinita> hah

[19:09] <tinita> i'd love to port my yaml parser to perl6. as soon as it's finished

[19:09] <ingy> me too! ;)

[19:09] <tinita> =)

[19:09] <moritz> as soon as your yaml parser is finished or as soon as Perl 6 is finished? :-)

[19:09] <ingy> yes

[19:09] <tinita> moritz: *g* my parser

[19:09] <moritz> one never knows :-)

[19:10] <tinita> the only big thing todo for me is flow style

[19:10] <TimToady> the whole *point* of Perl 6 is to never be finished :)

[19:10] <moritz> :-)

[19:11] <ingy> halting problem :)

[19:11] <moritz> #perl6 would be a boring place, and we could all go home, if Perl 6 ever finished :)

[19:11] <TimToady> ingy: stop that!

[19:12] <ingy> TimToady: I can't! (for certain)

[19:12] * TimToady was always fascinated by devices that solve the halting problem with explosives

[19:13] <ingy> Kinda like when Martin Bishop kicks the door in Sneakers.

[19:13] <raschipi> The biggest problem is with devices that should solve the halting problem with explosives but don't.

[19:13] * ingy has a pet fish named Martin Bishop.

[19:14] <tinita> timotimo: oh, and FYI too, i took out yamlish from the matrix, because we have a timeout of 3 seconds for each tests, and it exceeded it :-/

[19:16] <timotimo> uh oh :(

[19:16] <timotimo> are you running it with a very recent perl6?

[19:17] <tinita> i'd have to look into the docker builder. ingy wrote the most of it, including the perl6 setup

[19:18] <tinita> timotimo: https://github.com/yaml/yaml-editor/blob/master/docker/builder-perl6.dockerfile

[19:18] <ingy> https://github.com/yaml/yaml-editor/blob/master/docker/builder-perl6.dockerfile

[19:18] <ingy> :)

[19:18] <tinita> <-- faster

[19:18] <ingy> <-- slower

[19:20] *** MilkmanDan left
[19:21] *** MilkmanDan joined
[19:22] *** CIAvash left
[19:23] *** guest12345 joined
[19:25] <MasterDuke_> tinita, ingy: there's a 2017.01 rakudo star available now, and a 2017.04 should be available in a week or two

[19:26] <timotimo> yeah, we've had good performance improvements over the last months

[19:26] <timotimo> hopefully we can get YAMLish to perform in time

[19:26] <timotimo> isn't "&& true" a no-op? 

[19:27] <ingy> cool, thanks!

[19:27] <ingy> timotimo: it is

[19:27] <RabidGravy> not having a happy time with making the √∏mq poll thing

[19:27] <ingy> then all your op lines can end in \

[19:27] <ingy> :)

[19:28] <timotimo> where do i have to look to find the files that it runs yamlish against? and since it also installs Data::Dumper, it must be outputting that somehow, too

[19:28] <ingy> docker can't end a bunch of continue lines with a blank line

[19:28] <ingy> because docker is stupid

[19:28] <tinita> timotimo: the files are in https://github.com/yaml/yaml-test-suite

[19:29] <timotimo> and the timeout is per test file, or for the whole thing?

[19:29] <tinita> timotimo: or in the 'data' branch respectively

[19:29] <tinita> timotimo: per test file

[19:29] <ingy> https://github.com/yaml/yaml-test-suite/tree/master/test is canonical files

[19:29] <timotimo> oh crap, testml

[19:29] <ingy> :P

[19:29] <timotimo> the last time i tried to do anything with testml it was severely broken

[19:29] <ingy> in p6

[19:30] <timotimo> its test were testml files with a different version than the grammar was trying to parse or something like that

[19:30] <tinita> timotimo: the script itself is in https://github.com/yaml/yaml-editor/blob/master/sbin/perl6-p6

[19:30] <ingy> but we don't use testml in p6

[19:30] <tinita> and https://github.com/yaml/yaml-editor/blob/master/sbin/perl6-json

[19:30] <ingy> https://github.com/yaml/yaml-test-suite/tree/data/

[19:31] <timotimo> oh, a different branch

[19:31] <timotimo> hadn't thought of that

[19:31] <ingy> we split the tml into files for frameworks that can't deal with testml well, (or don't want to)

[19:31] <ingy> yes

[19:31] <timotimo> right

[19:31] <gfldex> can zef handle circular deps on modules?

[19:31] <timotimo> gfldex: can rakudo handle circular deps?

[19:32] <gfldex> don't thinks so as forward declarations don't work across compunits

[19:32] <Geth> ¬¶ doc: 6fce96548b | (Samantha McVey)++ | html/.htaccess

[19:32] <Geth> ¬¶ doc: Rewrite $REVERSE_SOLIDUS to %2F

[19:32] <Geth> ¬¶ doc: 

[19:32] <Geth> ¬¶ doc: Since on Unix we used to have $REVERSE_SOLIDUS but no longer do.

[19:32] <Geth> ¬¶ doc: Also get URL's with only one $COLON rewriting properly.

[19:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6fce96548b

[19:36] *** cpage_ left
[19:41] <timotimo> well, you can use run-time "require"

[19:43] *** wamba left
[19:45] *** as_ joined
[19:45] <as_> Hi guys, can you point me to the src file where \h is defined?

[19:47] <moritz> as_: in NQP, src/QRegex/P6Regex/Actions.nqp

[19:47] <moritz> method backslash:sym<h>($/)

[19:51] <as_> moritz: thanks a lot! it is there indeed!

[19:54] *** setty1 left
[19:58] *** as_ left
[20:00] <skids> Hrm.  There's got to be a better idiom for /(<-[\:]>+)\:/

[20:00] *** eftjo joined
[20:01] *** eftjo left
[20:01] <samcv> / ( < -[\:] >+ ) ':' /

[20:01] <samcv> idk

[20:01] <raschipi> it looks so nice though

[20:01] <moritz> adding some spaces typically helps

[20:01] <samcv> it looks better with syntax highlighting

[20:02] <moritz> and btw you don't need \ inside a char class

[20:02] <moritz> ( <-[:]>+ ) ':'

[20:02] <skids> Well that helps, a bit.

[20:02] <skids> Just it's such a common thing to need.

[20:02] <samcv> doesn't look that bad https://a.uguu.se/t2EVPGYCFYW1_Screenshot_20170417_130240.png

[20:03] <samcv> skids, you can used named regex

[20:04] <skids> Well there's ([<!before \:>.]+) \: but...

[20:04] *** cpage_ joined
[20:06] <samcv> my token notcolon { <-[:] > }; 'blah:' ~~ / ( <notcolon>+ ) ':' /; say $0

[20:06] <samcv> m: my token notcolon { <-[:] > }; 'blah:' ~~ / ( <notcolon>+ ) ':' /; say $0

[20:06] <camelia> rakudo-moar c1804b: OUTPUT: ¬´ÔΩ¢blahÔΩ£‚ê§ notcolon => ÔΩ¢bÔΩ£‚ê§ notcolon => ÔΩ¢lÔΩ£‚ê§ notcolon => ÔΩ¢aÔΩ£‚ê§ notcolon => ÔΩ¢hÔΩ£‚ê§¬ª

[20:09] <samcv> there is more than one way to do it https://gist.github.com/samcv/50ce3e7975c09678b26fae12fb740e65

[20:10] <skids> Yeah so 3 lines... granted you could parameterize it to make it more generically useful.

[20:14] *** labster left
[20:15] *** domidumont left
[20:22] <El_Che> !release

[20:22] <El_Che> damn

[20:22] <El_Che> I forgot the command again

[20:22] <MasterDuke_> NeuralAnomaly: status

[20:22] <NeuralAnomaly> MasterDuke_, [‚úò] Next release is in the past. Since last release, there are 32 new still-open tickets (0 unreviewed and 0 blockers) and 1 unreviewed commits. See http://perl6.fail/release/stats for details

[20:23] *** yqt joined
[20:25] *** labster joined
[20:26] <El_Che> I only see 2017.03

[20:27] <timotimo> yeah, release is going to happen soon

[20:27] <El_Che> ah ok. I wondered if I needed to create new packages

[20:28] <ambs> who manages [email@hidden.address] need some help.

[20:28] *** Zoffix joined
[20:29] <Zoffix> "PART 3: Information on Changes Due to IO Grant Work": http://rakudo.org/2017/04/17/final-notes-on-changes-due-to-io-grant-work/

[20:29] <Zoffix> El_Che: release will be in the next hour or so

[20:29] <El_Che> Zoffix: thx

[20:29] <El_Che> depending on the local time here, I'll start the build today of tomorrow

[20:30] <El_Che> Zoffix: this is the ZoffixIO release :)

[20:33] *** zakharyas left
[20:34] <Zoffix> El_Che: pretty much

[20:34] *** Cabanossi left
[20:35] *** MilkmanDan left
[20:36] <El_Che> "Is he a here? Is he a villain? Stick around and install Rakudo 2017.04 to find out..."

[20:36] <El_Che> s/here/hero/

[20:36] *** Cabanossi joined
[20:36] <Zoffix> Other highlights: a crap ton of Set/Bag/Mix optimizations, faster multi threading, faster case-insensitive regex (and internal string ops)

[20:37] <Zoffix> Actually the "Efficiency" changelog section is the largest this release: https://github.com/rakudo/rakudo/blob/nom/docs/ChangeLog#L118-L183

[20:37] <Zoffix> So very nice release.

[20:39] *** TEttinger joined
[20:39] <timotimo> i even contributed to it this time <3

[20:39] <El_Che> huge list

[20:39] * moritz probably didn't

[20:40] * [Coke] probably didn't even get a doc commit in this month. :|

[20:40] <timotimo> don't beat yourselves up about it :)

[20:41] <[Coke]> in my defense, I've been very busy at dayjob. :)

[20:41] <timotimo> oh

[20:43] *** cpage_ left
[20:44] <Zoffix> moritz: something wrong with logs on mobile; when zooming in, it now cuts off nicklist after reflowing the page; worked fine like 4days ago

[20:45] <moritz> Zoffix: the only change in the last few days that affects the logs page is the word wrapping change

[20:45] <moritz> for the issue you reported :-)

[20:46] <moritz> so might be related

[20:46] <Zoffix> ok, I'll see what's up with it

[20:47] <alphah> m: my %h1 = <a 1 b 2>; my %h2 = <b 3 c 4>; %h1 ,= %h2

[20:47] <camelia> rakudo-moar fd89b7: ( no output )

[20:48] <alphah> m: my %h1 = <a 1 b 2>; my %h2 = <b 3 c 4>; %h1 ,= %h2; say %h1

[20:48] <camelia> rakudo-moar fd89b7: OUTPUT: ¬´{a => 1, b => 3, c => 4}‚ê§¬ª

[20:49] *** cpage_ joined
[20:49] <alphah> slackwork$ repl

[20:49] <alphah> To exit type 'exit' or '^D'

[20:49] <alphah> >  my %h1 = <a 1 b 2>; my %h2 = <b 3 c 4>; %h1 ,= %h2; say %h1

[20:49] <alphah> {b => 3, c => 4}

[20:49] <alphah> > 

[20:50] *** MilkmanDan joined
[20:51] <alphah> I'm running this version of Rakudo, and merging hashes is not working:    2017.01-40-g4ef37cf9a built on MoarVM version 2017.01

[20:51] <Zoffix> alphah: you're using an old version.

[20:51] <alphah> aaaah, time to upgrade

[20:52] <Zoffix> Also: you're using a random dev commit.

[20:52] <Zoffix> Better now power a nuclear plant with that program.

[20:52] *** Zoffix left
[20:53] <alphah> lol

[20:53] *** SwoleGymBro- joined
[20:57] *** greenspaceman joined
[20:57] <greenspaceman> Hi!

[20:58] <greenspaceman> I'm getting a weird error using perl6-debug-m (https://pastebin.com/J4sn9dEM). Is this the right place to ask for help and/or find out whether it is a debugger bug or an error of mine?

[20:59] <timotimo> oh yeah, perl6-debug-m is unfortunately busted :(

[21:00] *** cdg joined
[21:01] <greenspaceman> Oh, well. I guess I'm half-glad it wasn't me!

[21:01] <greenspaceman> Thanks timotimo!

[21:01] *** cpage_ left
[21:01] <El_Che> greenspaceman: it could still be you, but less likely :)

[21:02] <greenspaceman> Yeah, but it's Bayesian-rational to assume it wasn't me.

[21:03] *** MilkmanDan left
[21:05] <timotimo> i don't understand how add_slang is supposed to work

[21:05] *** cpage_ joined
[21:06] *** cpage_ left
[21:07] *** cpage_ joined
[21:07] <timotimo> i can't find a declaration for that method in either rakudo or nqp

[21:08] <timotimo> oh

[21:08] <timotimo> define_slang, eh?

[21:09] <timotimo> maybe the fix is trivial ...

[21:11] *** skids left
[21:11] <timotimo> hah, as if it would be.

[21:16] *** bjz joined
[21:17] *** mcmillhj left
[21:19] *** Cabanossi left
[21:20] *** NeuralAnomaly left
[21:20] *** NeuralAnomaly joined
[21:20] *** ChanServ sets mode: +v NeuralAnomaly

[21:21] *** Cabanossi joined
[21:24] *** NeuralAnomaly left
[21:25] *** NeuralAnomaly joined
[21:25] *** ChanServ sets mode: +v NeuralAnomaly

[21:25] *** raschipi left
[21:27] *** greenspaceman left
[21:30] *** RabidGravy left
[21:32] *** cpage_ left
[21:37] *** cdg left
[21:38] *** cdg joined
[21:48] *** labster left
[22:04] *** labster joined
[22:08] *** espadrine left
[22:10] *** guest12345 left
[22:11] *** lizmat joined
[22:12] *** sufrostico left
[22:18] *** NeuralAnomaly left
[22:19] *** gdonald left
[22:19] *** gdonald joined
[22:19] *** bjz left
[22:19] *** NeuralAnomaly joined
[22:19] *** ChanServ sets mode: +v NeuralAnomaly

[22:23] *** sufrostico joined
[22:34] *** Cabanossi left
[22:36] *** Cabanossi joined
[22:37] *** sufrostico left
[22:40] *** sufrostico joined
[22:41] *** cdg_ joined
[22:43] *** cpage_ joined
[22:45] *** cdg left
[22:45] *** cdg_ left
[22:46] *** cpage_ left
[22:46] *** mcmillhj joined
[22:46] *** vendethiel left
[22:47] *** cpage_ joined
[22:51] *** mcmillhj left
[22:51] *** cpage_ left
[23:02] *** MilkmanDan joined
[23:09] *** r3m left
[23:12] *** r3m joined
[23:14] *** r3m left
[23:26] *** r3m joined
[23:29] *** skids joined
[23:33] *** ChoHag left
[23:35] *** ChoHag joined
[23:37] *** yqt left
[23:40] *** BenGoldberg joined
[23:50] *** mcmillhj joined
[23:51] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/04/17/2017-16-io-hits-the-road/

[23:51] *** AlexDaniel joined
[23:54] *** mcmillhj left
[23:58] *** gdonald left
[23:58] *** gdonald joined
