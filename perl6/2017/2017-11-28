[00:03] *** markong left
[00:03] *** Cabanossi left
[00:05] *** _28_ria left
[00:06] *** Cabanossi joined
[00:07] *** _28_ria joined
[00:08] *** raschipi left
[00:12] *** lookatme joined
[00:23] <Herby_> o/

[00:27] <kyan> Hi! Anyone know why this code https://github.com/ethus3h/personal/blob/master/work/COS301%20%E2%80%94%20Programming%20Languages/9.%20Project%20part%204%20edited/HtmlHighlighter.p6 can't find its delimiter? https://gist.github.com/ethus3h/55fc3217a28f16f302f2bf1d86ddcecf

[00:27] <yoleaux> 11 Oct 2017 23:43Z <b2gills> kyan: `.split("", :skip-empty)` is better written as `.comb()`

[00:29] <b2gills> kyan: the ending delimiter needs to be alone on it's own line

[00:30] <b2gills> ok runParserTest(q:to/♥/, 'blue');␤<span style="background-color: blue; color: white">keyword</span>␤♥␤

[00:30] <kyan> Aha, I have it wrong in the code I was basing it on, will fix that while I'm at it too. Thanks! :D

[00:31] <kyan> Oh, wait, that's interesting — it's not inside the function call?

[00:32] <kyan> (wouldn't that make the string start with ", 'blue')" rather than with "<span"?

[00:35] <kyan> Well, no, it doesn't — it works, although I don't understand why. I can even put the spaces before the ending delimiter to keep the indentation nice!

[00:36] * kyan needs to read the docs again on quoting constructs, I guess. Thanks!

[00:37] *** BenGoldberg joined
[00:44] <simcop2387> Ok, so quick question for the ops/regulars here.  I've recently added rakudo star to https://perlbot.pl/ for it's language running abilities and to perlbot's eval capabilities.  Would it be fine to bring perlbot in here for that?  perlbot.pl is a pastebin that can also run the code given to it.

[00:45] <simcop2387> Along with that I can also probably install any modules you would want it to support too.

[00:46] <simcop2387> I need to make two adjustments to it all before I'll bring it in, (make default language for pastes here be rakudo/perl6, and same for the standard eval: command that perlbot does)

[00:47] <simcop2387> url for pastebin would be https://f.perlbot.pl/#perl6

[00:48] <AlexDaniel> simcop2387: another evalbot! Cool! But what can the bot do exactly?

[00:48] <AlexDaniel> like, what are the commands? Or does it simply announce the pastes here?

[00:49] <AlexDaniel> evalable6: https://perlbot.pl/raw/d73nzq

[00:49] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[00:49] <evalable6> AlexDaniel, rakudo-moar 1668b4f0b: OUTPUT: «42»

[00:50] <simcop2387> AlexDaniel: it's also got a ton of other commands and factoids already in it, but i can also make it use a set specifically for here too.  it started life as a factoid bot and has a lot of other commands/plugins to it.  you can make factoids that fetch data from websites, etc.

[00:50] <Herby_> AlexDaniel: thats pretty slick

[00:50] <simcop2387> that is neat

[00:50] <simcop2387> at the very least you'd get a nice-ish pastebin for the /topic :)

[00:51] <AlexDaniel> simcop2387: any docs? I'm wondering because we use a lot of prefixes (for other bots) that may trigger it also

[00:51] *** cdg joined
[00:51] <simcop2387> by default it requires being addressed to do commands, so perlbot: blah

[00:52] <AlexDaniel> simcop2387: bring it in and we'll see how it goes. 

[00:52] <simcop2387> alright

[00:52] *** perlbot joined
[00:52] <AlexDaniel> simcop2387: are you in perl6 org on github?

[00:52] <simcop2387> AlexDaniel: I am not, I've not done much with 6 before

[00:52] <AlexDaniel> simcop2387: oh well, I can't send an invite. But I'll add it to the list here: https://github.com/perl6/doc/issues/711#issuecomment-235414744

[00:53] <perlbot> Herby pasted a new file at https://perlbot.pl/p/g7mpmg - Testing it out

[00:53] <Herby_> \o/

[00:53] <lookatme> o/

[00:53] <AlexDaniel> perlbot: help

[00:53] <perlbot> AlexDaniel: Provides help text for a specific command. Try 'help echo'. See also the command 'plugins' to list all of the currently loaded plugins.

[00:54] <AlexDaniel> perlbot: plugins

[00:54] <perlbot> AlexDaniel: 8ball allowpaste arg cache_check compose conf conf_dump core default define echo eval factoids geoip get google head help host host_lookup join karma karma_modify karmatop more nick_lookup null oeis package part pastebinadmin perldoc plugins quote reload_plugins restart rss rss_title save_config seen shorten title translate twitter unicode utf8 zippit

[00:54] <AlexDaniel> oh geez

[00:54] <AlexDaniel> perlbot: eval say 42

[00:54] <perlbot> AlexDaniel: 42 

[00:54] <simcop2387> right now that's perl5.  6 is under, rkeval:

[00:54] <AlexDaniel> simcop2387: can we have eval6 or something like that?

[00:54] <simcop2387> perlbot: rkeval: say "Hello"

[00:54] <perlbot> simcop2387: Hello 

[00:55] *** cdg_ left
[00:55] <Herby_> ekeval: say "Hello" ~ " world";

[00:55] <Herby_> perlbot: ekeval: say "Hello" ~ " world";

[00:55] <Herby_> perlbot: rkeval: say "Hello" ~ " world";

[00:55] <perlbot> Herby_: Hello world 

[00:55] <lookatme> m: say "Hello"

[00:55] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «Hello␤»

[00:55] <Herby_> I need coffee

[00:55] <lookatme> camelia: say "Hello"

[00:55] <simcop2387> AlexDaniel: yea i'll get that configured shortly here, there's also https://github.com/perlbot/perlbuut-pastebin/wiki/Op-Tools that documents commands for turning off the pastebin without kicking the bot (and other similar things)

[00:56] <Herby_> simcop2387: that is all very cool

[00:56] *** cdg left
[00:56] <simcop2387> hobbs showed me the code to one of the eval bots in here (not sure which) and security wise it was atrocious, mine's better :)

[00:57] <AlexDaniel> perlbot: rkeval: spurt ‘foo’, ‘hello’; say slurp ‘foo’

[00:57] <perlbot> AlexDaniel: hello 

[00:58] <lookatme> camelia: help

[00:58] <camelia> lookatme: Usage: <(nqp-js|nqp-moarvm|star-m|p5-to-p6|rakudo-moar|nqp-jvm|prof-m|debug-cat|rakudo-jvm|p6|rj|nqp|rm|rakudo|perl6|star|j|nqp-q|nqp-mvm|nqp-m|sm|m|master|p56|r-j|r-jvm|r-m|r)(?^::\s(?!OUTPUT)) $perl6_program>

[00:58] <sacomo> hi all, good morning from Japan

[00:58] <AlexDaniel> hello!

[00:58] <Herby_> sacomo: o/

[00:58] <lookatme> Hi

[00:58] <sacomo> \o

[00:59] <simcop2387> at the moment, it's only supporting moarvm since getting the jvm rakudo to work in the sandbox would probably be a nightmare :)

[00:59] <AlexDaniel> ah

[00:59] <lookatme> nqp-m: nqp::say("Hello")

[00:59] <camelia> nqp-moarvm: OUTPUT: «Hello␤»

[01:00] <AlexDaniel> perlbot: rkeval: say “hello”; say “world”;

[01:00] <perlbot> AlexDaniel: hello world 

[01:00] <lookatme> nqp-m: nqp::say("Where is camlia??")

[01:00] <camelia> nqp-moarvm: OUTPUT: «Where is camlia??␤»

[01:00] <lookatme> nqp-m: nqp::say("Where is camelia??")

[01:00] <camelia> nqp-moarvm: OUTPUT: «Where is camelia??␤»

[01:00] *** ZzZombo left
[01:00] *** ZzZombo joined
[01:00] <kyan> (simcop2387: BTW, I notice that https://perlbot.pl/robots.txt disallows all user-agents, which prevents people saving things from it using the Internet Archive — they're a really cool nonprofit library and Web archive (https://archive.org/) and it would be good to whitelist them! —just my 2¢ :) )

[01:02] <AlexDaniel> simcop2387: well, the security side of it is a tradeoff kinda. *ables for example are mostly targeted at the devs, and it's really useful when you can bisect with internet connection for example

[01:03] <sacomo> question about threading and roles / state. if I have a base role (call it Base) that has a state attribute ($.foo), and I use that when I instantiate other roles (does Base), I see that $.foo.WHERE returns the same value wherever I call it from. Is it thread-safe if I treat $.foo as immutable?

[01:03] <simcop2387> AlexDaniel: yea.  i'm working on making it secure to handle running long term things through the pastebin and interacting with them (e.g. interactively feed in to STDIN or another filehandle)

[01:03] <simcop2387> kyan: I thought about that, but I'm not sure if I want it to be possible to save automatically on there.  main reason being is that if someone used the pastebin for nefarious things (db dumps, etc.) and i didn't catch it, it'd be preserved forever.  that said the pastebin does let you select never for expiration

[01:04] *** lizmat joined
[01:04] <kyan> simcop2387: If something nefarious gets saved by IA, anyone who notices it can email [email@hidden.address] to let them know, and they can hide it

[01:04] <simcop2387> true

[01:05] <AlexDaniel> simcop2387: well, that's not exactly it. For example, at least once I had to bisect IRC::Client module :) But for regular snippets that'd be nice indeed, yeah.

[01:05] <AlexDaniel> simcop2387++

[01:05] <simcop2387> perlbot: rkeval: say $*PERL.version

[01:05] <perlbot> simcop2387: v6.c 

[01:05] <simcop2387> perlbot: eval: say $*PERL.version

[01:05] <perlbot> simcop2387: ERROR: Can't use an undefined value as a symbol reference at (IRC) line 1. 

[01:05] <simcop2387> bah it didn't work

[01:06] <lookatme> sacomo, it's threadsafe if the $.foo is readonly

[01:06] <simcop2387> perlbot: eval: say $*PERL.version

[01:06] <perlbot> simcop2387: ERROR: Can't use an undefined value as a symbol reference at (IRC) line 1. 

[01:07] <sacomo> ok, is it just copying $.foo? or acting as a reference? 

[01:07] <lookatme> I have no idea the child class would keep $.foo as reference or a copy

[01:10] *** aborazmeh joined
[01:10] *** aborazmeh left
[01:10] *** aborazmeh joined
[01:10] <lookatme> m: role A { state $.foo; }; class B does A { method new() { $.foo++; } }; class C does A { method new() { $.foo++; } }; B.new; say B.foo; say C.foo; say A.foo;

[01:10] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «1␤1␤1␤»

[01:10] <simcop2387> perlbot: eval: say $*PERL.version

[01:10] <perlbot> simcop2387: ERROR: Can't use an undefined value as a symbol reference at (IRC) line 1. 

[01:10] <lookatme> sacomo, you mean this ?

[01:10] <lookatme> ^^

[01:11] <simcop2387> perlbot: eval: say $*PERL.version

[01:11] <lookatme> I think it's a reference, not a copy

[01:11] <perlbot> simcop2387: v6.c 

[01:11] <sacomo> ok, thanks

[01:11] <simcop2387> ok there we go.  by default it's now perl6 in here.  let me set it up to not need address for that.

[01:11] <lizmat> El_Che: re Pumpking Perl 5: if some people continue to refer to Perl 5 as "Perl", implying it is the one and only, I will continue to refer to it as "Pumpking Perl 5"

[01:12] *** mcmillhj joined
[01:12] <lizmat> bed&

[01:12] <lookatme> good night

[01:12] <sacomo> yeah, something like that. for this app I am working on I am not planning on modifying $.foo once it is initialized. Also, I tested looping a bunch of new threads and it seems to function fine and keep the WHERE address. So... 

[01:12] <sacomo> lookatme, thanks

[01:14] *** sena_kun left
[01:14] <lookatme> sacomo, there some question about this, maybe help

[01:14] <lookatme> https://stackoverflow.com/questions/43782864/is-it-safe-to-share-an-array-between-threads/43792718#43792718

[01:15] <sacomo> ooh, thanks

[01:16] *** mcmillhj left
[01:16] *** autark` left
[01:18] <AlexDaniel> perlbot: rkeval: say ‘x’ x 999999

[01:18] <perlbot> AlexDaniel: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx... [Output truncated. Use `more` to read more]

[01:18] <AlexDaniel> perlbot: more

[01:18] <perlbot> AlexDaniel: Sorry, no more output

[01:18] <AlexDaniel> simcop2387: I was expecting it to just give a link to the pastebin service, but hm…

[01:19] <lookatme> A gist link :)

[01:19] <AlexDaniel> perlbot: rkeval sleep ∞

[01:19] <simcop2387> AlexDaniel: yea that's a planned thing I haven't implemented yet

[01:19] <perlbot> AlexDaniel: timeout at /home/ryan/perl5/perlbrew/perls/perlbot-blead-2017-11-27_27151/lib/site_perl/5.27.7/App/EvalServerAdvanced.pm line 118. 

[01:19] <SmokeMachine> is there a way to .classify() do not push the values, and not make arrays inside of the hash?

[01:19] <lizmat> SmokeMachine: .Set ?

[01:20] <lizmat> really bed&

[01:20] <simcop2387> AlexDaniel: ok, https://f.perlbot.pl/#perl6 now properly defaults to rakudo for the language.  though the syntax hilighting might not work well for perl6 (the editor doesn't have explicit perl6 support)

[01:20] *** comborico1611 joined
[01:20] <SmokeMachine> m: say ["a.b.c" => 1, "a.b.d" => 2].classify: *.split(","), :as{.value} # <- I mean no array here...

[01:20] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «Cannot resolve caller split(Pair, Str); Routine does not have any candidates. Is only the proto defined?␤  in block <unit> at <tmp> line 1␤␤»

[01:20] <SmokeMachine> m: say ["a.b.c" => 1, "a.b.d" => 2].classify: *.key.split(","), :as{.value} # <- I mean no array here...

[01:20] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «{a.b.c => [1], a.b.d => [2]}␤»

[01:21] <SmokeMachine> m: say ["a.b.c" => 1, "a.b.d" => 2].classify: *.key.split("."), :as{.value} # <- I mean no array here...

[01:21] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «{a => {b => {c => [1], d => [2]}}}␤»

[01:21] <timotimo> you have , in the split but . in the keys, is that right?

[01:21] <simcop2387> one thing I haven't done for perl6 yet, (i need to learn more) is something like the bot supports with older perls

[01:21] <timotimo> ah

[01:21] <SmokeMachine> now its right...

[01:21] <simcop2387> eval5.26: [ { foo => "

[01:21] <perlbot> simcop2387: Can't find string terminator '"' anywhere before EOF at (IRC) line 1. 

[01:21] <simcop2387> eval5.26: [ { foo => "bar"}, "I support dumping random structures for you"]

[01:21] <perlbot> simcop2387:  [{foo => "bar"},"I support dumping random structures for you"]

[01:22] <SmokeMachine> I'd like to have {a => {b => {c => 1, d => 2}}}

[01:22] <timotimo> m: 

[01:22] <timotimo> ...

[01:22] <timotimo> curse you, broken trackpad

[01:23] *** _28_ria left
[01:23] <AlexDaniel> 6c: say (42, 24).pick

[01:24] <committable6> AlexDaniel, ¦2015.12,2016.02,2016.07.1,2016.08.1,2016.09,2016.10,2017.01,2017.03,2017.05,2017.08,2017.10,2017.11: «24» ¦2016.01.1,2016.03,2016.04,2016.05,2016.06,2016.11,2016.12,2017.02,2017.04.3,2017.06,2017.07,2017.09,HEAD(1668b4f): «42»

[01:24] <SmokeMachine> is there a way to do that?

[01:24] *** _28_ria joined
[01:24] *** aindilis left
[01:25] <AlexDaniel> simcop2387: fwiw maybe you can steal some cool ideas from one of the bots: https://github.com/perl6/whateverable/wiki

[01:26] <simcop2387> I need to steal the ANSI color stuff that hobbs pointed me to for one of the eval bots here, to make the colors right in the pastebin and bot output.  but i'll look at that list too, probably some good things for the perl5 ecosystem too

[01:36] *** _28_ria left
[01:37] *** ctilmes left
[01:37] *** _28_ria joined
[01:39] *** jeromelanteri joined
[01:49] *** _28_ria left
[01:50] *** _28_ria joined
[01:55] *** ana_akk joined
[01:55] <ana_akk> hi 

[01:57] <comborico1611> Hi

[01:57] <lookatme> hi

[01:57] <ana_akk> I have a question about Perl 6

[01:58] <ana_akk> can I learn it without having any background knowledge in coding?

[01:58] <lookatme> yeah, I think you can 

[01:58] <ana_akk> I like the community aspect of this language

[01:58] <ana_akk> Ok, where should I start? 

[01:59] <AlexDaniel> maybe you can try http://perl6intro.com/

[02:00] <lookatme> And first you should have a rakudo installation

[02:00] <lookatme> https://perl6.org/downloads/

[02:00] <ana_akk> ok thanks because on the tutorial page was weird and I couldnt find an intro

[02:01] <lookatme> It's in ^^ page right side

[02:01] <lookatme> Introductory Material

[02:02] *** cpage_ joined
[02:02] <timotimo> ana_akk: there's a book specifically written for people who have no background in coding

[02:03] <ana_akk> Can I have a name please?

[02:03] <timotimo> https://perl6book.com/ - this has a nice flowchart at the top

[02:03] <ana_akk> Oh! Thanks!

[02:03] <timotimo> there's "Think Perl 6" which starts very low, and "Learning to program with Perl 6" sounds like it also does, but i don't have that yet

[02:03] <ana_akk> I'll look at that as well

[02:04] <ana_akk> mainly got roped in by the d&d references

[02:04] <timotimo> "Learning Perl 6" sounds like the right thing for you, but it's not finished yet, and perhaps only kickstarter backers from when it started can read it?

[02:04] *** _28_ria left
[02:04] <timotimo> oh, like

[02:04] <timotimo> m: say (^6 + 1).roll(10)

[02:04] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «(4 4 3 4 6 5 1 5 2 3)␤»

[02:05] <timotimo> i think moritz probably needs to put more books into the flowchart :)

[02:05] *** _28_ria joined
[02:06] *** zakharyas joined
[02:06] <ana_akk> can't really read that but I mean the Warrior, Mage, and Priest MMORPG game style it showed, seemed cool

[02:06] <timotimo> correction: i do have "learning to program with perl 6"

[02:06] <ana_akk> GTG thanks for your guys' help!

[02:06] *** ana_akk left
[02:06] <timotimo> oh

[02:06] <timotimo> i would have loved to know what that was from

[02:07] <timotimo> http://strangelyconsistent.org/blog/perl-6-is-my-mmorpg - perhaps this post?

[02:07] <timotimo> warrior, mage, priest, that's definitely in this one

[02:08] <comborico1611> Goodnight, guys.

[02:08] *** comborico1611 left
[02:10] *** BrianOn99 joined
[02:11] *** dj_goku left
[02:11] *** dj_goku joined
[02:11] *** dj_goku left
[02:11] *** dj_goku joined
[02:13] <timotimo> bisectable6: my ($a, $b) = (1, 0); for ^1 { METAOP_ZIP(METAOP_ASSIGN(&[+]), &METAOP_REDUCE_RIGHT)(($a, $b), <-1 1>) }; dd $a, $b;

[02:13] <bisectable6> timotimo, On both starting points (old=2015.12 new=1668b4f) the exit code is 0 and the output is identical as well

[02:13] <bisectable6> timotimo, Output on both points: «Int $a = 1␤Int $b = 0»

[02:14] *** evalable6 left
[02:14] *** evalable6 joined
[02:14] <timotimo> bisectable6: my ($a, $b) = (1, 0); for ^1 { sink METAOP_ZIP(METAOP_ASSIGN(&[+]), &METAOP_REDUCE_RIGHT)(($a, $b), <-1 1>) }; dd $a, $b;

[02:14] <bisectable6> timotimo, On both starting points (old=2015.12 new=1668b4f) the exit code is 0 and the output is identical as well

[02:14] <bisectable6> timotimo, Output on both points: «Int $a = 0␤Int $b = 1»

[02:16] *** mson left
[02:18] *** dj_goku left
[02:19] *** dj_goku joined
[02:19] *** dj_goku left
[02:19] *** dj_goku joined
[02:19] *** Cabanossi left
[02:20] *** troys is now known as troys_

[02:21] *** Cabanossi joined
[02:22] *** mson joined
[02:26] *** _28_ria left
[02:27] *** _28_ria joined
[02:28] *** dj_goku left
[02:29] *** dj_goku joined
[02:29] *** dj_goku left
[02:29] *** dj_goku joined
[02:37] *** dj_goku left
[02:38] *** dj_goku joined
[02:38] *** dj_goku left
[02:38] *** dj_goku joined
[02:46] *** ilbot3 left
[02:47] *** dj_goku left
[02:47] *** dj_goku joined
[02:48] *** _28_ria left
[02:49] *** _28_ria joined
[02:53] <kyan> Hello again! Is there something about S:g/a/b/ that makes it not work as a parameter? say S:g/a/b/ with "blah" #works .content( "blbh" ) #works .content( S:g/a/b/ with "blah" ) #Unable to parse expression in argument list; couldn't find final ')'

[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[03:02] *** troys_ is now known as troys

[03:02] *** dj_goku left
[03:02] <Geth> ¦ doc: 9e1ecad903 | (Will "Coke" Coleda)++ | doc/Language/modules.pod6

[03:02] <synopsebot> Link: https://doc.perl6.org/language/modules

[03:02] <Geth> ¦ doc: nbsp

[03:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9e1ecad903

[03:02] <Geth> ¦ doc: 3c9b5709d2 | (Will "Coke" Coleda)++ | xt/words.pws

[03:02] <Geth> ¦ doc: learn new word

[03:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3c9b5709d2

[03:02] *** dj_goku joined
[03:02] *** dj_goku left
[03:02] *** dj_goku joined
[03:03] *** Cabanossi left
[03:04] <lookatme> kyan, what is .content ?

[03:05] <kyan> lookatme: It's a method from DOM::Tiny. I'm passing it a string though either way (I think?), so would it matter?

[03:05] <lookatme> m: say(S:g/a/b/ with "blah")

[03:05] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3say(S:g/a/b/ with 7⏏5"blah")␤»

[03:05] <lookatme> Same error

[03:05] <lookatme> m: say (S:g/a/b/ with "blah")

[03:05] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «blbh␤»

[03:05] <lookatme> m: say: S:g/a/b/ with "blah"

[03:05] <camelia> rakudo-moar 1668b4f0b: ( no output )

[03:06] <kyan> wha... I'm slightly confused — there's a difference between a method call with a space and without?

[03:06] *** Cabanossi joined
[03:06] <lookatme> kyan, yeah, it's a "trap"

[03:06] <Geth> ¦ doc: c5b48f3d15 | (Will "Coke" Coleda)++ | doc/Type/Dateish.pod6

[03:06] <Geth> ¦ doc: squash compilation warning

[03:06] <synopsebot> Link: https://doc.perl6.org/type/Dateish

[03:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c5b48f3d15

[03:07] <kyan> Okay then, interesting :P Thanks!

[03:07] <lookatme> lunch time & 

[03:07] * kyan pokes at https://docs.perl6.org/language/traps again

[03:09] <kyan> Oh, I see, I need a separate set of parens inside the method call. I guess they're necessary to make it evaluate the contents

[03:11] * lookatme would check out the trap later

[03:12] *** mcmillhj joined
[03:15] *** dj_goku left
[03:16] *** Herby__ joined
[03:16] *** mcmillhj left
[03:16] *** dj_goku joined
[03:16] *** dj_goku left
[03:16] *** dj_goku joined
[03:21] *** travis-ci joined
[03:21] <travis-ci> Doc build failed. Will "Coke" Coleda 'learn new word'

[03:21] <travis-ci> https://travis-ci.org/perl6/doc/builds/308228453 https://github.com/perl6/doc/compare/b27634082ffd...3c9b5709d271

[03:21] *** travis-ci left
[03:21] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[03:24] *** travis-ci joined
[03:24] <travis-ci> Doc build failed. Will "Coke" Coleda 'squash compilation warning'

[03:24] <travis-ci> https://travis-ci.org/perl6/doc/builds/308229489 https://github.com/perl6/doc/compare/3c9b5709d271...c5b48f3d157c

[03:24] *** travis-ci left
[03:24] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[03:25] *** dj_goku left
[03:26] *** dj_goku joined
[03:26] *** dj_goku left
[03:26] *** dj_goku joined
[03:26] <kyan> Btw: is this the right place to ask about the DOM::Tiny module? Apparently #mojo on irc.perl.org is Perl 5-only (figured it would be the same, but I guess not)... Thanks!

[03:26] <kyan> (To avoid asking-to-ask, here's my question: how can I convert a string into DOM elements in the flavor that the .content method wants? .content((DOM::Tiny.parse("<br>").root)) indicates a type mismatch.)

[03:31] * [Coke] checks out DOM::Tiny...

[03:31] *** pilne left
[03:34] *** kitsunenokenja left
[03:35] *** dj_goku left
[03:35] *** dj_goku joined
[03:35] *** dj_goku left
[03:35] *** dj_goku joined
[03:40] <[Coke]> try: DOM::Tiny.parse("<br>").content;

[03:41] <kyan> That runs, but treats it as literal text rather than HTML (it seems like it parses it then turns it back into a string...)

[03:42] <kyan> (resulting HTML is &lt;br&gt;)

[03:43] <kyan> (here's how I'm calling it: https://github.com/ethus3h/personal/blob/master/work/COS301%20%E2%80%94%20Programming%20Languages/9.%20Project%20part%204%20edited/HtmlHighlighter.p6#L11)

[03:45] *** dj_goku left
[03:45] *** dj_goku joined
[03:45] *** dj_goku left
[03:45] *** dj_goku joined
[03:50] *** Herby__ left
[03:54] *** dj_goku left
[03:55] *** dj_goku joined
[03:55] *** dj_goku left
[03:55] *** dj_goku joined
[04:01] <simcop2387> AlexDaniel: Oh, I also forgot to mention that perlbot's eval can read and write files in the container everything runs in.  So demoing something with say, SQLite is perfectly doable and a bunch of other stuff like that.  It's got a 16MB limit on space per eval, and files don't persist.

[04:02] <TimToady> perlbot: say "foo"; say "bar"

[04:02] <simcop2387> eval: say "foo"; say "bar";

[04:02] <evalable6> simcop2387, rakudo-moar 1668b4f0b: OUTPUT: «foo␤bar»

[04:03] <perlbot> simcop2387: foo bar 

[04:03] <simcop2387> hmm, might need to adjust that so it doesn't spam you guys.

[04:04] <TimToady> m: say "foo"; say "bar"

[04:04] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «foo␤bar␤»

[04:04] <simcop2387> perlbot: eval5.26: open(my $fh, ">temp"); print $fh "Hello World"; close($fh); open(my $fh2, "<temp"); [<$fh2>]

[04:04] <perlbot> simcop2387:  ["Hello World"]

[04:04] <TimToady> note that camelia gets both of te newlines in there

[04:04] <AlexDaniel> yeah that's probably more correct

[04:05] <TimToady> m: say "␤".ord

[04:05] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «10␤»

[04:05] <simcop2387> yea mine (due to historical behavior) just turns all whitespace into spaces.  (10 years ago it didn't handle unicode properly)

[04:05] <TimToady> also translates on input

[04:05] <simcop2387> it does translate that on input though too

[04:05] <AlexDaniel> that evalable knows :)

[04:06] *** cdg joined
[04:06] <simcop2387> any nice to have modules I should install? I know basically nothing about perl6/rakudo

[04:07] <TimToady> other than everything in Rakudo Star?

[04:07] <simcop2387> es

[04:07] <simcop2387> yes*

[04:09] <TimToady> perlbot: eval: use Inline::Perl5

[04:09] <perlbot> TimToady: ===SORRY!=== Could not find Inline::Perl5 at line 1 in:     /langs/perl6/share/perl6/site     /langs/perl6/share/perl6/vendor     /langs/perl6/share/perl6     CompUnit::Repository::AbsolutePath<94853847626128>     CompUnit::Repository::NQP<94853826739616>     CompUnit::Repository::Perl5<94853826739656> [Exited 1]

[04:09] <TimToady> perlbot: rkeval: use Inline::Perl5

[04:09] <perlbot> TimToady: ===SORRY!=== Could not find Inline::Perl5 at line 1 in:     /langs/perl6/share/perl6/site     /langs/perl6/share/perl6/vendor     /langs/perl6/share/perl6     CompUnit::Repository::AbsolutePath<94391790592416>     CompUnit::Repository::NQP<94391769705888>     CompUnit::Repository::Perl5<94391769705928> [Exited 1]

[04:10] <simcop2387> if that forks then it won't work, the sandbox prevents execve()

[04:10] * TimToady doesn't use a lot of modules yet

[04:11] <TimToady> I think it's just not in Star

[04:11] <piojo> kyan: I tried it and couldn't reproduce. Running this: my $xml = False; DOM::Tiny::HTML::_parse("<br><", :$xml).content

[04:11] <piojo> gives "<br>&lt;", as you'd expect from a parse which treats the "<br>" as HTML and the "<" as a less-than.

[04:11] <AlexDaniel> simcop2387: was going to suggest WWW but then again, I guess that won't be possible?

[04:12] <AlexDaniel> eh, won't be useful rather :)

[04:12] <kyan> piojo: Yeah, the issue is when trying to assign that to the contents of another node

[04:12] <simcop2387> AlexDaniel: not currently yea.  Once I finish figuring out a secure way to handle it (keep it from being a DoS or redirect issue, etc.) then I'll make it able to point at some kind of default server I'll have setup.

[04:12] <kyan> parsing works as expected

[04:14] <AlexDaniel> perlbot: rkeval: run ‘ls’

[04:14] <perlbot> AlexDaniel: Could not create a new Thread: too many open files   in block <unit> at /tmp/hT7KymlVbD line 1  [Exited 1]

[04:15] <AlexDaniel> simcop2387: any chance to get that to work? ↑ Or is it seccomp-ed away anyway?

[04:15] <TimToady> that involves an exec

[04:15] <AlexDaniel> right

[04:16] <simcop2387> AlexDaniel: probably not, though you can use stuff built in to the language to get at files

[04:16] <simcop2387> perlbot: eval5.26: [glob "*"]

[04:16] <perlbot> simcop2387:  ["Cczq5oqBOf","cert.pem","elib","example.html","hello.txt","key.pem","lib","married.fwp","README.md","single.fwp","template.angular"]

[04:16] <simcop2387> perlbot: jail

[04:16] <perlbot> simcop2387: No factoid found. Did you mean one of these: [fail] [joel] [jql] [_tail] [japh] [java] [tall] [.al] [.il] [aol]

[04:16] <simcop2387> perlbot: source

[04:16] <perlbot> simcop2387: check out my insides http://github.com/perlbot/perlbuut/ | Perl's source code can be found at https://github.com/Perl/perl5 | If you're after an eval server look at App::EvalServer and App::EvalServerAdvanced on CPAN | Also check out the rest of the perlbot projects at https://github.com/perlbot/

[04:16] <simcop2387> hrm where the hell was that link

[04:16] <TimToady> perlbot: eval: .say for dir

[04:17] <perlbot> TimToady: "key.pem".IO "README.md".IO "hello.txt".IO "elib".IO "lib".IO "married.fwp".IO "cert.pem".IO "single.fwp".IO "template.angular".IO "example.html".IO "2uwyphJt1R".IO 

[04:17] <simcop2387> http://github.com/perlbot/perlbuut-jail/ is the repo for the files in there, see eval/ in there.  I need to clean it up since the complete rewrite I did so that it's no longer necessary to have those other dirs

[04:17] <piojo> kyan: sorry, I don't know what your code is trying to do. I don't see _link() defined anywhere, but that could be where the problem is.

[04:17] <simcop2387> the password for key.pem is password if you want to play with x509 certs

[04:18] <kyan> piojo: No worries, sorry, I've changed it since I linked it first T_T

[04:18] <simcop2387> the random filename is the current eval that's happening

[04:18] * kyan should have linked to the specific commit

[04:18] *** Cabanossi left
[04:19] <kyan> Here's what I was *trying* to link to: https://github.com/ethus3h/personal/blob/427bf0db3819b7e706f9d2a593edb02387d94813/work/COS301%20%E2%80%94%20Programming%20Languages/9.%20Project%20part%204%20edited/HtmlHighlighter.p6#L11

[04:20] *** zakharyas left
[04:20] *** Cabanossi joined
[04:21] <AlexDaniel> m: (^90).race.map(* x 2).say

[04:21] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «(00 11 22 33 44 55 66 77 88 99 1010 1111 1212 1313 1414 1515 1616 1717 1818 1919 2020 2121 2222 2323 2424 2525 2626 2727 2828 2929 3030 3131 3232 3333 3434 3535 3636 3737 3838 3939 4040 4141 4242 4343 4444 4545 4646 4747 4848 4949 5050 5151 5252 5353 …»

[04:22] <AlexDaniel> perlbot: rkeval: (^90).race.map(* x 2).say

[04:22] <AlexDaniel> simcop2387: any idea what's going on there? ↑

[04:22] <perlbot> AlexDaniel: timeout at /home/ryan/perl5/perlbrew/perls/perlbot-blead-2017-11-27_27151/lib/site_perl/5.27.7/App/EvalServerAdvanced.pm line 118. 

[04:22] <AlexDaniel> like what limit is it hitting?

[04:39] *** dj_goku left
[04:39] *** jeromelanteri left
[04:40] *** dj_goku joined
[04:48] *** cdg left
[04:48] *** bloatable6 left
[04:48] *** bloatable6 joined
[04:48] *** cdg joined
[04:53] *** cdg left
[04:54] *** wander left
[05:08] <jferrero> m: ("01","02" ... "12")».join(",").say

[05:08] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «(01 02 03 04 05 06 07 08 09 10 11 12)␤»

[05:09] <kyan> I think the issue is that Text nodes are in some way different from "normal" DOM nodes, and aren't able to be replaced by DOM nodes that contain other nodes...

[05:10] *** BrianOn99 left
[05:12] *** aborazmeh left
[05:12] *** mcmillhj joined
[05:16] <jferrero> m: ("01" .. "12")».join(",").say

[05:16] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «(01 02 11 12)␤»

[05:16] <jferrero> m: ("01" ... "12")».join(",").say

[05:16] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «(01 02 11 12)␤»

[05:17] *** mcmillhj left
[05:18] <jferrero> m: ("01" .. "12").join("-").say

[05:18] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «01-02-11-12␤»

[05:19] *** piojo left
[05:20] *** aborazmeh joined
[05:20] *** aborazmeh left
[05:20] *** aborazmeh joined
[05:27] *** cpage_ left
[05:38] *** khw left
[05:43] <simcop2387> AlexDaniel: not sure.  that looks like it should be pretty fast to do.

[05:44] <simcop2387> rkeval: (^90).race.map(* x 2).say

[05:44] <perlbot> simcop2387: timeout at /home/ryan/perl5/perlbrew/perls/perlbot-blead-2017-11-27_27151/lib/site_perl/5.27.7/App/EvalServerAdvanced.pm line 118. 

[05:45] <simcop2387> AlexDaniel: ah looks like one of the threads that gets created is getting killed by the sandbox.  looks like a safe syscall too I'll add it to the whitelist

[05:46] *** aborazmeh left
[05:46] <simcop2387> the sandbox doesn't always catch child threads/processes being killed like that.  One of the things I need to work on for it.

[05:47] *** someuser joined
[05:47] <jferrero> m: ("01" .. "12").join("-").say

[05:47] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «01-02-11-12␤»

[05:47] <simcop2387> rkeval: (^90).race.map(* x 2).say

[05:47] <perlbot> simcop2387: (00 11 22 33 44 55 66 77 88 99 1010 1111 1212 1313 1414 1515 1616 1717 1818 1919 2020 2121 2222 2323 2424 2525 2626 2727 2828 2929 3030 3131 3232 3333 3434 3535 3636 3737 3838 3939 4040 4141 4242 4343 4444 4545 4646 4747 4848 4949 5050 5151 5252 5353 5454 5555 5656 5757 5858 5959 6060 6161 6262 6363 6464 6565 6666 6767 6868 6969 7070 7171 7272 7373... [Output truncated. Use `more` to read more]

[05:48] <simcop2387> AlexDaniel: there we go.  If you find more like that let me know and I'll update the whitelist.  It should be pretty comprehensive but I know I've missed some still (this time it was the syscall for getrusage)

[05:49] <simcop2387> usually it should say it was killed by SIGSYS.  I've got to make my own strace library to properly record which syscall in the server itself (one of the many many many planned features)

[05:50] <ZzZombo> any chance we get an equivalent of enum classes from C++?

[05:51] <lookatme> m: enum A ( A => 0, B => 2); say A::A;

[05:51] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «A␤»

[05:51] <lookatme> ^^

[05:51] <simcop2387> also I am SOOO glad i mostly finished that seccomp rewrite for this.  Now adding a new thing to the whitelist is significantly easier, it's just a few lines of YAML instead of changing the software.

[05:51] <ZzZombo> what in "enum classes" wasn't clear?

[05:54] <simcop2387> https://stackoverflow.com/a/18335862 # this explains the difference a bit

[05:55] <lookatme> Oh, you mean the enum class in c++11, I think no

[05:56] <simcop2387> does seem like something that should be doable as a library though I'd think

[05:57] *** khw joined
[05:57] <lookatme> m: enum A ( A => 0, B => 1); enum C ( B => 2); # you can not declare same name in different enum # I hate this design

[05:57] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'B'␤    at <tmp>:1␤    ------> 3um A ( A => 0, B => 1); enum C ( B => 2)7⏏5; # you can not declare same name in dif␤»

[05:57] <simcop2387> lookatme: that almost makes them annoyingly useless

[05:58] <ZzZombo> yea

[05:58] <ZzZombo> I'd rather work with string constants than them.

[05:58] <TimToady> most collisions happen on import, and those we handle differently

[06:01] <lookatme> ~_~

[06:01] <lookatme> And actually, I wonder why they use `()` for enum constructor, not `{}`

[06:02] <lookatme> I would prefer `enum { }`

[06:03] <b2gills> m: constant A = do { my enum A ( A => 0, B => 1 )}; constant C = do { my enum C ( B => 2 )}; say +A<B>; say +C<B>

[06:03] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «1␤2␤»

[06:05] <lookatme> m: constant A = %{ A => 0, B => 1}; constant C = %{ B => 2 }; say +A<B>; say +C<B>

[06:05] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «1␤2␤»

[06:09] *** eliasr left
[06:10] <TimToady> m: module A { enum <A B> }; module B { enum ( B => 2) }; say +A::B; say +B::B

[06:10] <camelia> rakudo-moar 1668b4f0b: OUTPUT: «1␤2␤»

[06:12] <TimToady> and we don't generally use braces for things that are not closures, so enum just takes a list of some sort

[06:12] <lookatme> oh

[06:12] *** khw left
[06:12] <TimToady> you only have to use the paired form to set a different starting point than 0

[06:13] <TimToady> (or 1 more than the last one)

[06:20] *** wamba joined
[06:20] <lookatme> Perl6 's enum is ancient design, I would prefer rustlang's enum

[06:27] <simcop2387> I'd imagine you could make a DSL that generates a type and classes for doing it like that

[06:31] <teatime> if you did want to make a DSL with Perl6, how exactly might that look

[06:31] <teatime> would it just be a module that imports some functions/operators ?

[06:32] <lookatme> no, it would be a slang module

[06:32] <lookatme> add some new syntax

[06:32] <teatime> o right

[06:33] <lookatme> https://modules.perl6.org/search/?q=slang

[06:34] <lookatme> There some module about slang

[06:35] *** parv joined
[06:43] *** BrianOn99 joined
[06:56] *** mson left
[06:58] *** darutoko joined
[07:00] *** llfourn left
[07:03] *** BenGoldberg left
[07:04] *** BrianOn99 left
[07:09] *** domidumont joined
[07:12] *** geospeck joined
[07:12] *** mcmillhj joined
[07:13] <buggable> New CPAN upload: Font-FreeType-0.0.4.tar.gz by WARRINGD https://cpan.metacpan.org/authors/id/W/WA/WARRINGD/Perl6/Font-FreeType-0.0.4.tar.gz

[07:15] *** domidumont left
[07:16] *** domidumont joined
[07:17] *** mcmillhj left
[07:25] *** lowbro joined
[07:25] *** lowbro left
[07:25] *** lowbro joined
[07:32] *** cpage_ joined
[07:32] *** wamba left
[07:33] *** Cabanossi left
[07:34] *** cpage_ left
[07:34] *** abraxxa joined
[07:34] *** cpage_ joined
[07:35] *** cpage_ left
[07:35] *** Cabanossi joined
[07:39] *** ufobat joined
[07:41] <ufobat> hi :-)

[07:49] *** cdg joined
[07:49] *** nativecallable6 left
[07:50] *** nativecallable6 joined
[07:50] *** ChanServ sets mode: +v nativecallable6

[07:52] *** espadrine left
[07:52] <lookatme> hi

[07:53] *** cdg left
[07:56] <TimToady> m: enum Pows (<A B C> Z=> 1,2,4); say +B

[07:56] <camelia> rakudo-moar d9021cf16: OUTPUT: «2␤»

[07:56] <TimToady> m: enum Pows ('A' .. 'Z' Z=> (1,2,4 ... *)); say +Z

[07:56] <camelia> rakudo-moar d9021cf16: OUTPUT: «33554432␤»

[07:57] *** BrianOn99 joined
[07:58] *** pecastro joined
[08:00] *** rindolf joined
[08:19] *** rindolf left
[08:22] *** troys left
[08:23] *** wamba joined
[08:26] *** dakkar joined
[08:29] *** rindolf joined
[08:32] *** Cabanossi left
[08:35] *** Cabanossi joined
[08:46] *** _28_ria left
[08:54] *** araujo left
[09:02] *** Cabanossi left
[09:03] *** scimon joined
[09:05] *** Cabanossi joined
[09:06] *** wamba left
[09:12] *** mcmillhj joined
[09:17] *** mcmillhj left
[09:20] * lizmat clickbaits https://p6weekly.wordpress.com/2017/11/27/2017-48-community-first/

[09:21] <DrForr> Indeed.

[09:21] <yoleaux> 01:10Z <lizmat> DrForr: the link is in the Meanwhile on FaceBook section ?

[09:21] <lizmat> .

[09:21] <DrForr> Yes, it was.

[09:22] <DrForr> Sort of hidden, my apologies.

[09:24] *** Zoffix joined
[09:25] <DrForr> I didn't quite make myself clear. The blog entry is http://theperlfisher.blogspot.cz/2017/11/test-all-things.html (permalink) - I didnt see that in the 'blog post' section.

[09:25] <Zoffix> kyan: it's possible it's just a bug in DOM::Tiny. It's alpha-quality, as the docs say. I found another problem in .content() yesterday. May wanna add your issue there too: https://github.com/zostay/p6-DOM-Tiny/issues/6

[09:26] <DrForr> *didn't

[09:27] <Zoffix> FWIW, enums would be more useful if there were a way to add only the full-name names, so, say, `enum Foo <A B> :full;` would install only Foo::A, and Foo::B, without installing A and B as well

[09:28] <ufobat> Zoffix, hi :-), btw, is there still something to do in my PR?

[09:28] <Zoffix> m: module Foo { enum <A B> }; say +Foo::A

[09:28] <camelia> rakudo-moar d9021cf16: OUTPUT: «0␤»

[09:29] <Zoffix> This does the trick I guess...

[09:30] <Zoffix> ufobat: the .resolve one? I don't see any commits after this comment: https://github.com/rakudo/rakudo/pull/1249#issuecomment-345766115

[09:30] <ufobat> Zoffix, issnt https://github.com/rakudo/rakudo/pull/1249/commits/eed733e277528a46781ae4c82367d7691cb914c8 after your comment?

[09:32] <Zoffix> No idea. I thought GitHub usually showed when modifications were made.

[09:33] <Zoffix> ufobat: I can't test it properly right now, maybe someone else can. My internet is down (again -_-) and I rather not pull in quarter of a gig over my tethered mobile connection. They're charging me an arm and a leg for data :(

[09:33] <Zoffix> Won't be fixed until Thursday or later.

[09:33] <Zoffix> Speaking of which... 

[09:33] * Zoffix &

[09:34] *** Zoffix left
[09:34] <ufobat> .tell Zoffix, i dont make a hurry. i just wanted to ensure that i didn't miss something and you're waiting on me

[09:34] <yoleaux> ufobat: What kind of a name is "Zoffix,"?!

[09:34] <ufobat> .tell Zoffix  i dont make a hurry. i just wanted to ensure that i didn't miss something and you're waiting on me

[09:34] <yoleaux> ufobat: I'll pass your message to Zoffix.

[09:34] *** Cabanossi left
[09:35] *** Cabanossi joined
[09:45] *** noganex__ left
[09:46] *** noganex joined
[09:49] *** Addictedbliss joined
[09:50] <Addictedbliss> R

[09:50] *** Addictedbliss left
[09:52] <DrForr> lizmat++ # Thanks for the addition :)

[09:53] <lizmat> yw  :-)

[09:55] *** wamba joined
[09:58] *** parv left
[10:02] *** ShalokShalom left
[10:14] *** lizmat left
[10:16] *** llfourn joined
[10:17] *** lizmat joined
[10:38] *** cdg joined
[10:39] *** cdg_ joined
[10:42] *** cdg left
[10:43] *** TEttinger left
[10:43] *** cdg_ left
[11:00] *** cdg joined
[11:03] *** Cabanossi left
[11:04] *** cdg left
[11:05] *** Cabanossi joined
[11:21] <SmokeMachine> Hi there! What do you guys think of adding a new named parameter to classify and classify-list called :&reduce that will be used to “aggregate” the values on each “class”? The default value of its parameter would be a code that create an array maintaining the current behavior...

[11:23] *** mson joined
[11:24] <SmokeMachine> [:1ok, :2nok, :3ok].classify: *.key, :as{.value}, :reduce{$^a + $^b}

[11:24] <SmokeMachine> Would return:

[11:25] <SmokeMachine> {ok => 4, nok => 2}

[11:27] *** eliasr joined
[11:32] *** jeromelanteri joined
[11:36] <SmokeMachine> For example

[11:38] *** geospeck left
[11:43] <lizmat> m: dd (:1ok, :2nok, :3ok).Bag   # SmokeMachine 

[11:43] <camelia> rakudo-moar d9021cf16: OUTPUT: «("nok"=>2,"ok"=>4).Bag␤»

[11:45] <SmokeMachine> lizmat: but that doesn’t work, for example here:

[11:48] <SmokeMachine> [“a.b.c” => 1, “a.b.c” => 2, “a.c.d”=> 3].classify: *.key.split(“.”), :as{.value}, :reduce(-> $agg, $a {$a})

[11:48] <SmokeMachine> That would return:

[11:49] <SmokeMachine> {a=> {b => {c => 2, d => 3}}}

[11:49] <Geth> ¦ mu: virtualsue++ created pull request #30: Put myself down for the 15th

[11:49] <Geth> ¦ mu: review: https://github.com/perl6/mu/pull/30

[11:49] <SmokeMachine> lizmat: ^^

[11:52] <Geth> ¦ mu: 3a8bbf8205 | (sue spence)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[11:52] <Geth> ¦ mu: Put myself down for the 15th

[11:52] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/3a8bbf8205

[11:52] <Geth> ¦ mu: 4741c312d8 | lizmat++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[11:52] <Geth> ¦ mu: Merge pull request #30 from virtualsue/master

[11:52] <Geth> ¦ mu: 

[11:52] <Geth> ¦ mu: Put myself down for the 15th

[11:52] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/4741c312d8

[11:52] <lizmat> SmokeMachine: need to go afk right now, will look at it in an hour or so

[11:53] <SmokeMachine> :)

[11:53] *** lizmat left
[11:54] *** Celelibi left
[12:03] *** Cabanossi left
[12:05] *** Cabanossi joined
[12:16] *** Aaronepower left
[12:18] *** geospeck joined
[12:19] *** dogbert2 joined
[12:23] *** araraloren joined
[12:23] <araraloren> hi

[12:27] <DrForr> o/

[12:27] <araraloren> I have a question about grammar

[12:27] <araraloren> https://gist.github.com/araraloren/c644ef7d763b8db399b788df1e7e8ae6

[12:27] <araraloren> here is the code

[12:28] <araraloren> Can someone help me ?

[12:31] <DrForr> Do you get that with Grammar::Tracer commented out?

[12:31] <DrForr> (that may be an internal error...

[12:31] <DrForr> )

[12:31] <araraloren> It's not the module problem 

[12:34] *** Cabanossi left
[12:34] <DrForr> The grammar looks valid to me, although I think you're relying on tokens when rules would be easier to work with.

[12:34] *** Celelibi joined
[12:35] <araraloren> https://gist.github.com/araraloren/c644ef7d763b8db399b788df1e7e8ae6

[12:35] *** Cabanossi joined
[12:36] <araraloren> yeah, but that's not the key point

[12:37] <araraloren> It failed call `token item`, I think

[12:38] *** Aaronepower joined
[12:42] <DrForr> It's a recursive token, that strikes me as odd..

[12:42] <DrForr> Replacing the token with a rule makes the error go away but also fails the match...

[12:47] *** sena_kun joined
[12:49] <DrForr> Pasting a simpler ersion of your grammar, one mo.

[12:50] *** cdg joined
[12:50] <DrForr> Er, has a bug...

[12:52] <DrForr> https://gist.github.com/drforr/9540219b69fbfe235c280acaf514e36d

[12:53] *** Aaronepower left
[12:54] *** cdg left
[12:55] <DrForr> araraloren: Does that make sense?

[12:56] <araraloren> I will check later

[12:56] <araraloren> DrForr, thanks

[12:58] *** Aaronepower joined
[13:07] *** jeromelanteri left
[13:08] *** domidumont left
[13:09] *** domidumont joined
[13:12] *** BrianOn99 left
[13:15] *** lizmat joined
[13:16] *** markong joined
[13:17] *** Cabanossi left
[13:19] <lizmat> SmokeMachine: aah, you're using a multi-level classify  :-)

[13:20] *** Cabanossi joined
[13:39] <SmokeMachine> lizmat: yes

[13:40] <lizmat> you're the first person that I know who wants to use that  :-)

[13:41] <lizmat> there's no way to do the reduce before calling classify ?

[13:44] *** kyan left
[13:44] <timotimo> hm. you could "unique" the input list

[13:45] <timotimo> that does it for this case at least

[13:46] *** mcmillhj joined
[13:56] *** statisfiable6 left
[13:56] *** statisfiable6 joined
[13:56] * [Coke] waves.

[13:57] <timotimo> o/ [Coke] 

[13:59] <Geth> ¦ mu: 76f40e1fd5 | (Will Coleda)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[13:59] <Geth> ¦ mu: Update schedule

[13:59] <Geth> ¦ mu: 

[13:59] <Geth> ¦ mu: Claim a spot.

[13:59] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/76f40e1fd5

[14:02] *** lizmat left
[14:03] *** cdg joined
[14:07] *** ryn1x_ joined
[14:10] *** cdg_ joined
[14:11] *** jeromelanteri joined
[14:14] *** cdg left
[14:17] *** Aaronepower left
[14:28] <araraloren> m: grammar S { token TOP { ^ <bar> $ }; rule bar { \w+ '{' '}' }; }; say S.parse: Q { CTRL { } }

[14:28] <camelia> rakudo-moar e7c0a6447: OUTPUT: «Nil␤»

[14:30] <SmokeMachine> lizmat: no... :(

[14:31] <SmokeMachine> timotimo: but that would continue to return arrays inside of the hash...

[14:32] <DrForr> araraloren: rule 'bar' isn't invoked recursively there.

[14:32] <araraloren> m: grammar S { token TOP { ^ <bar> $ }; rule bar { \w+ '{' '}' }; }; say S.parse: "CTRL { }"

[14:32] <camelia> rakudo-moar e7c0a6447: OUTPUT: «Use of Nil in string context␤Nil␤  in block <unit> at <tmp> line 1␤»

[14:33] <araraloren> m: grammar S { token TOP { ^ <bar> $ }; rule bar { \w+ '{' '}' }; }; say S.parse: 'CTRL { }'

[14:33] <camelia> rakudo-moar e7c0a6447: OUTPUT: «｢CTRL { }｣␤ bar => ｢CTRL { }｣␤»

[14:33] <araraloren> m: grammar S { token TOP { ^ <bar> $ }; rule bar { \w+ '{' '}' }; }; say S.parse: ' CTRL { } '

[14:33] <camelia> rakudo-moar e7c0a6447: OUTPUT: «Nil␤»

[14:33] <DrForr> araraloren: You can test that in your own terminal... We generally use that when we want to show someone else a problem.

[14:34] <araraloren> cmd on windows is suck :(

[14:39] *** kybr left
[14:41] *** kybr joined
[14:46] *** khw joined
[14:53] <araraloren> m: grammar S { token TOP { ^ <bar> $ }; rule bar { <item> '{' '}' }; }; say S.parse: "CTRL { }"

[14:53] <camelia> rakudo-moar e7c0a6447: OUTPUT: «Use of Nil in string context␤Nil␤  in block <unit> at <tmp> line 1␤»

[14:54] <araraloren> So <item> is an something internal ?

[14:54] <araraloren> I remember I faced same problem a few week ago :(

[14:59] *** lookatme left
[15:00] *** lookatme joined
[15:00] *** donaldh joined
[15:00] *** cdg_ left
[15:02] *** cdg joined
[15:02] *** cdg left
[15:02] <araraloren> This is a trap, never using "item" as the token or rule name :)

[15:02] <araraloren> good night

[15:02] *** cdg joined
[15:02] *** araraloren left
[15:04] <donaldh> This thinko gave me trouble for a while:

[15:04] <donaldh> m: enum <North, East, South, West>; given North { when North { .say } }

[15:04] <camelia> rakudo-moar e7c0a6447: OUTPUT: «5===SORRY!5===␤Function 'North' needs parens to avoid gobbling block (or perhaps it's a class that's not declared or available in this scope?)␤at <tmp>:1␤------> 3West>; given North { when North { .say }7⏏5 }␤Missing block (apparentl…»

[15:10] *** comborico1611 joined
[15:19] *** rindolf left
[15:22] *** cdg left
[15:24] <AlexDaniel> m: enum <North East South West>; given North { when North { .say } }

[15:24] <camelia> rakudo-moar e7c0a6447: OUTPUT: «North␤»

[15:24] *** rindolf joined
[15:24] *** cdg joined
[15:25] *** cdg left
[15:26] *** cdg joined
[15:27] <donaldh> Yep. Same LTA message for typos too of course:

[15:27] <donaldh> enum <Nrth South East West>; given North { when North { .say } }

[15:27] <donaldh> m: enum <Nrth South East West>; given North { when North { .say } }

[15:27] <camelia> rakudo-moar e7c0a6447: OUTPUT: «5===SORRY!5===␤Function 'North' needs parens to avoid gobbling block (or perhaps it's a class that's not declared or available in this scope?)␤at <tmp>:1␤------> 3West>; given North { when North { .say }7⏏5 }␤Missing block (apparentl…»

[15:27] *** wamba left
[15:41] * donaldh thinks this is a good opportunity to learn what is involved in improving error messages.

[15:50] *** lowbro left
[15:51] *** autark` joined
[15:56] *** autark` left
[16:00] *** mcmillhj left
[16:04] *** Cabanossi left
[16:05] <perlpilot> donaldh: you might want to see if the edit distance checker is including enumerations

[16:05] *** Cabanossi joined
[16:06] <AlexDaniel> m: enum <Nrth South East West>; say North

[16:06] <camelia> rakudo-moar e7c0a6447: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    North used at line 1. Did you mean 'Nrth'?␤␤»

[16:06] *** mcmillhj joined
[16:06] <AlexDaniel> MasterDuke++

[16:07] <perlpilot> I guess that answers that :-)

[16:09] *** BrianOn99 joined
[16:13] *** BrianOn99 left
[16:14] *** Aaronepower joined
[16:22] *** Aaronepower left
[16:29] *** geospeck left
[16:32] *** Aaronepower joined
[16:35] *** domidumont left
[16:42] <tyil> would anyone have any objections to a "commendable" bot that keeps track of how often a name has been ++d?

[16:43] *** Aaronepower left
[16:46] <AlexDaniel> tyil: maybe perlbot can do that

[16:46] <AlexDaniel> perlbot: help karma

[16:46] <perlbot> AlexDaniel: karma <nickname>; returns the "karma" value for a user or arbitrary subject. Karma works by appending either ++ or -- to a word to modify its karma. 

[16:46] <AlexDaniel> tyil++

[16:46] <tyil> oh

[16:46] <AlexDaniel> perlbot: karma tyil

[16:46] <perlbot> AlexDaniel: tyil has karma of 1

[16:46] <tyil> nice

[16:46] * tyil considers it solved

[16:46] <AlexDaniel> that's not entirely nice because it does not take into account all the history before yesterday (when that bot joined the channel)

[16:47] <tyil> my intention wouldn't have solved that either

[16:47] <tyil> you'd have to parse all past logs to get that

[16:47] <AlexDaniel> why not? Just feed irc history through the bot

[16:47] <AlexDaniel> quotable6: ‘AlexDaniel++’

[16:47] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4412528 messages to process)

[16:47] <tyil> I could add that if there's interest, but that wasn't my original goal :p

[16:48] <AlexDaniel> (quotable is a bit broken because of some bug, but let's see if it works)

[16:48] <quotable6> AlexDaniel, Found nothing!

[16:48] *** dalek left
[16:49] *** Util left
[16:49] <AlexDaniel> yeah, doesn't really work. I should really investigate what's wrong with it

[16:49] <AlexDaniel> IIRC some utf-8 issue, but I don't remember the details

[16:50] <AlexDaniel> huggable: irc

[16:50] <huggable> AlexDaniel, nothing found

[16:52] <AlexDaniel> tyil: if you go for it, let me know and I'll find a script that can pull the whole history from moritz++'s logger

[16:52] <AlexDaniel> then you can easily grep through it, generate a csv file or something, and I guess simcop2387 will be able to import it into the bot

[16:52] <AlexDaniel> though personally I don't like this karma competition :)

[16:53] <simcop2387> quotable6: 'committable6\+\+'

[16:53] <quotable6> simcop2387, OK, working on it! This may take up to three minutes (4412528 messages to process)

[16:53] <AlexDaniel> (that is, using foo++ as “thank you” is great, but counting the amount of times someone was thanked is kinda weird)

[16:53] <quotable6> simcop2387, Found nothing!

[16:54] <AlexDaniel> simcop2387: this answer is actually right, it takes a perl 6 regex

[16:54] <simcop2387> ah i see

[16:54] <tyil> I only wanted to keep track of ++s as commends, and the messages added with it (if applicable), as a small side project to get a little break from App::Cpan6

[16:54] <AlexDaniel> although it has probably short-circuited due to a bug…

[16:55] *** Aaronepower joined
[16:55] <tyil> App::Cpan6 comes with two issues to create other modules for rn anyway, so I can just work on those for now

[16:55] <tyil> once i get home and have some spare time, that is :.

[16:55] <tyil> :p*

[16:57] *** ChoHag left
[16:57] *** abraxxa left
[17:03] *** Cabanossi left
[17:05] *** Cabanossi joined
[17:12] *** mcmillhj left
[17:15] *** wamba joined
[17:20] *** troys joined
[17:26] *** raiph joined
[17:31] *** Aaronepower left
[17:34] *** reportable6 joined
[17:34] *** reportable6 left
[17:37] *** dakkar left
[17:41] <AlexDaniel> squashable6: next

[17:41] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈16 hours (2017-12-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:41] *** Geth left
[17:41] * AlexDaniel wonders if we will have any participants this time, given that it wasn't advertised as much

[17:42] <AlexDaniel> ( and also given that there's no topic yet! :) )

[17:42] <El_Che> that was my question :)

[17:42] *** benchable6 left
[17:43] *** benchable6 joined
[17:43] *** ChanServ sets mode: +v benchable6

[17:43] *** coverable6 left
[17:43] <El_Che> "make rakudo portable"  <--- that would be so cool :)

[17:43] *** coverable6 joined
[17:43] *** unicodable6 left
[17:43] *** kyan joined
[17:43] *** unicodable6 joined
[17:43] *** Zoffix joined
[17:44] <El_Che> I have the pavlovian urge to end with "again" every sentence that I start with "make"

[17:44] <Zoffix> perl6advent.wordpress.com don't tell me what timezone it uses. I recall we published on Midnight UTC. Do I just put in midnight in the schedule or is it using some other timezone?

[17:44] <yoleaux> 09:34Z <ufobat> Zoffix: i dont make a hurry. i just wanted to ensure that i didn't miss something and you're waiting on me

[17:44] <yoleaux> 12:16Z <tbrowder> Zoffix: the pod spec tests now require roast with PR #353 merge.

[17:45] <moritz> Zoffix: I set it to midnight, and it worked for me

[17:45] <Zoffix> Cool. Thanks

[17:49] <Zoffix> moritz: ... do you live in UTC? If I hover over "Scheduled" it shows me "2017-12-01T05:00:31+00:00" and I'm in -5 timezone

[17:49] <AlexDaniel> El_Che: well, hard topics are not that cool because it's an opportunity to attract new contributors. I think both doc squashathons worked great, and the rakudo one was ok but not as great

[17:49] <moritz> Zoffix: no, I live in UTC+1

[17:50] <moritz> Zoffix: it shows me https://perl6advent.wordpress.com/wp-admin/post.php?post=6756&action=edit to be scheduled for Dec 1 @ 05:00

[17:51] *** scimon left
[17:51] <Zoffix> Hm. That's not the interface I used to set the time. Thanks. I updated it to be 0

[17:51] <moritz> there seem to be an old-style and a new-style interface for editing articles

[17:52] <moritz> being a grumpy old man, I use the old-style interface

[17:52] <Zoffix> And seems all codeblocks are now messed up :)

[17:53] <Zoffix> I guess if you "save" in Visual mode it takes a lot of liberties

[17:54] <AlexDaniel> buggable: tag MOLD

[17:54] <buggable> AlexDaniel, There are 225 tickets tagged with MOLD; See http://fail.rakudo.party/t/MOLD for details

[17:54] <Zoffix> K, now it shows proper time. 

[17:54] <AlexDaniel> what about MOLD-related squashathon? With a goal to reduce the number of tickets that are tagged ｢MOLD｣

[17:55] <Zoffix> moritz: how did you get to the old interface?

[17:55] <Zoffix> Ah, just https://perl6advent.wordpress.com/wp-admin/edit.php

[17:55] <Zoffix> Thanks for help \o

[17:55] <AlexDaniel> that's a relatively easy thing to do given that in most cases you can just leave a comment that the bug is still there

[17:55] *** Zoffix left
[17:58] <AlexDaniel> … except that squashable6 will not be able to report any comments on RT

[17:58] <AlexDaniel> but maybe that's OK

[18:04] *** lostinfog joined
[18:06] *** lostinfog left
[18:07] *** travis-ci joined
[18:07] <travis-ci> Doc build failed. Jan-Olof Hendig 'Added a few missing method headers'

[18:07] <travis-ci> https://travis-ci.org/perl6/doc/builds/308552929 https://github.com/perl6/doc/compare/c5b48f3d157c...2c33f20100d3

[18:07] *** travis-ci left
[18:07] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[18:08] *** mcmillhj joined
[18:10] *** BrianOn99 joined
[18:13] *** S007 joined
[18:14] *** BrianOn99 left
[18:16] *** ryn1x_ left
[18:18] *** Aaronepower joined
[18:18] *** Xliff joined
[18:18] <Xliff> Hi!

[18:18] <timotimo> o/

[18:19] <Xliff> What's the minimum amount of RAM necessary to compile Rakudo?

[18:19] <timotimo> let me have a look

[18:21] *** BuildError joined
[18:22] <timotimo> so, with SPESH_DISABLE=1 i get 1284024maxresident

[18:22] <timotimo> so about 1.3 gigs

[18:23] <BuildError> Hi, has the perl6 bugtracker been moved to github? I see quite a few open tickets there but the documentation / various blogposts still talk about 'rt' 

[18:23] <timotimo> we are "softly" moving over to github

[18:23] <timotimo> no old bugs will be copied over, but new bugs can be made on github

[18:23] <timotimo> you can also still make bugs on rt, of course

[18:24] <BuildError> Will bugs that are on both be marked duplicate on either of them?

[18:25] <BuildError> And, is one of the two systems being seen as 'leading', or are they truly equal 

[18:26] <timotimo> i'm not sure, i've been a little hands-off in the last 1.5h months (for RSI reasons)

[18:26] <timotimo> Xliff: with spesh (and thus, jit) turned on it takes 1371068maxresident

[18:27] <Xliff> timotimo++

[18:27] <Xliff> I just resized my EC2. It only had 1G

[18:28] *** BuildError left
[18:28] <Xliff> That instance was so old it was running kernel 3.13 /o\

[18:30] <timotimo> i wonder how well you can build rakudo with a whole chunk of zram

[18:35] *** troys is now known as troys_

[18:35] <Xliff> 75 second stage parse on t2.medium EC2!!!

[18:35] <timotimo> cool

[18:35] <Xliff> That's 15 seconds faster than my 4-cpu VM

[18:35] <Xliff> :(

[18:35] <Xliff> Of course, the VM is 32 bit.

[18:36] <timotimo> locally i get 66 seconds :)

[18:36] <timotimo> and yeah, without the jit it's a bit slower

[18:36] <Xliff> This is Rakudo version 2017.11-40-ge7c0a6447 built on MoarVM version 2017.11

[18:36] <Xliff> implementing Perl 6.c.

[18:36] <timotimo> 80s with spesh and jit disabled. spesh itself also gives a nice little boost already

[18:36] <Xliff> I take it the JIT is not built on 32bit?

[18:36] <Xliff> I get 90s when I rakudobrew on the VM

[18:37] <timotimo> yep, no jit for 32bit x86

[18:37] <Xliff> kk

[18:37] <Xliff> So when I dual boot back intu Kubuntu, I should expect sub 80s.

[18:37] <Xliff> I don't do that very often.

[18:37] <timotimo> well, more like "there's jit only on x86_64"

[18:37] <timotimo> no jit on arm or similar, either

[18:37] <Xliff> ah

[18:38] <Xliff> How long until Rakudo is on Android do ya think?

[18:38] <timotimo> i seem to recall tadzik built rakudo on a smart phone a long time ago; that wasn't android, though

[18:38] <Xliff> tadzik++

[18:39] <Xliff> I guess easiest way to make P6 "apps" would be as webapps you use the browser to get to.

[18:40] *** darutoko left
[18:46] <AlexDaniel> BuildTheRobots: github is leading if you look at the number of new tickets created

[18:47] <AlexDaniel> BuildTheRobots: yes, duplicates are counted across bug trackers, so if both trackers have the same ticket then one should be closed in favor of the other

[18:48] <AlexDaniel> that's…

[18:48] <AlexDaniel> a wrong nickname

[18:48] <timotimo> yeah, they already left :(

[18:48] <AlexDaniel> BuildTheRobots: sorry, these messages were meant for BuildError

[18:50] *** travis-ci joined
[18:50] <travis-ci> Doc build failed. Alex Chen 'sub MAIN and sub USAGE are collected to generate /routine/'

[18:50] <travis-ci> https://travis-ci.org/perl6/doc/builds/308574087 https://github.com/perl6/doc/compare/2c33f20100d3...81de65ac82b0

[18:50] *** travis-ci left
[18:50] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[18:50] <[Coke]> You said BuildError and summoned a wild build error!

[18:53] *** geospeck joined
[18:56] *** xcm joined
[18:56] <xcm> names

[18:56] <xcm> woops.

[18:58] *** troys_ is now known as troys

[18:59] *** Aaronepower left
[19:04] *** AndChat|688961 joined
[19:04] *** comborico1611 left
[19:10] *** AndChat|688961 left
[19:10] *** comborico1611 joined
[19:24] *** eliasr left
[19:25] *** sena_kun left
[19:27] *** mcmillhj left
[19:32] *** domidumont joined
[19:32] *** Cabanossi left
[19:35] *** Cabanossi joined
[19:35] *** cdg_ joined
[19:38] *** cdg left
[19:40] <AlexDaniel> squashable6: next

[19:40] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈14 hours (2017-12-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[19:40] <AlexDaniel> https://github.com/rakudo/rakudo/wiki/MOLD-Removal-SQUASHathon

[19:40] *** cdg_ left
[19:41] <El_Che> AlexDaniel: I know, I was just wishful thinking :)

[19:45] *** domidumont left
[19:51] *** cdg joined
[19:52] *** mcmillhj joined
[19:56] *** cdg left
[19:58] *** mcmillhj left
[20:01] *** setty1 joined
[20:03] <moritz> can somebody please try to create the category 2017 on https://perl6advent.wordpress.com/wp-admin/ ?

[20:03] <moritz> it returns with any message for me

[20:03] <moritz> worked with 2018 :(

[20:05] *** mcmillhj joined
[20:09] *** comborico1611 left
[20:10] *** comborico1611 joined
[20:12] *** ChoHag joined
[20:16] *** pilne joined
[20:17] *** comborico1611 left
[20:20] *** comborico1611 joined
[20:22] *** squain joined
[20:25] *** squain left
[20:26] <tbrowder> .tell AlexDaniel ref tabs in my code: I found my emacs setting for tabs was misspelled ("setq-default indent-tab-mode nil" instead of the correct "setq-default indent-tabs-mode nil"), so i hope to have no format probs with tabs instead of spaces in the future...

[20:26] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[20:26] *** lostinfog joined
[20:29] *** GhostValk joined
[20:29] <GhostValk> Hi!

[20:31] *** squain joined
[20:31] *** s0me0ne-unkn0wn left
[20:32] *** s0me0ne-unkn0wn joined
[20:33] *** Cabanossi left
[20:35] *** Cabanossi joined
[20:37] *** lostinfog left
[20:39] *** GhostValk left
[20:40] *** philomath joined
[20:41] <moritz> ho!

[20:42] <El_Che> who are you calling a ho'

[20:43] <AlexDaniel> .

[20:43] <yoleaux> 20:26Z <tbrowder> AlexDaniel: ref tabs in my code: I found my emacs setting for tabs was misspelled ("setq-default indent-tab-mode nil" instead of the correct "setq-default indent-tabs-mode nil"), so i hope to have no format probs with tabs instead of spaces in the future...

[20:43] <AlexDaniel> tbrowder: great

[20:45] *** reportable6 joined
[20:45] *** ChanServ sets mode: +v reportable6

[20:47] * [Coke] finally gets into wordpress and sees that 2017 is there. :)

[20:47] <[Coke]> moritz: you all set?

[20:53] <moritz> we still need somebody for day 2

[20:57] *** cdg joined
[20:59] <mantovani> this question is not related to Perl 6, but what would be faster, parse an XML with XSD or without a XSD ?

[21:00] <moritz> I'm done with my post for day 8, but I only want to publish it earlier when the ebook version of the book is published

[21:00] *** cdg left
[21:01] *** cdg joined
[21:03] <tony-o> mantovani: probably without the XSD, no basis for saying that aside that from XSD requires a parse of the XML and the XSD rather than just the XML to make no mention of validating XML elements against the XSD

[21:05] *** synopsebot left
[21:06] <mantovani> I was thinking if when the XSD is used, it would compile a "optimized" grammar or something like it to optimize the parse. 

[21:06] <AlexDaniel> dalek is dead again!

[21:07] <moritz> mantovani: more likely it needs to do more validation, and thus becomes slower

[21:08] <tony-o> mantovani: then it probably depends on the efficiency of creating the DSL and how much faster the DSL is at parsing then the implementation of the straight XML parsing

[21:08] <tony-o> but i'd still imagine that unless the grammar is significantly faster and the XML is huge, parsing the XML would be faster

[21:09] <mantovani> thank you very much

[21:10] <tony-o> if you're asking us if you should create something that validates XML files based on a generated grammar from an XSD, then yes, absolutely you should

[21:14] *** cdg_ joined
[21:17] *** cdg left
[21:21] *** travis-ci joined
[21:21] <travis-ci> Doc build failed. TimToady 'point to authoritative cheatsheet, not a copy'

[21:21] <travis-ci> https://travis-ci.org/perl6/doc/builds/308630207 https://github.com/perl6/doc/compare/81de65ac82b0...2ed89dfb80d8

[21:21] *** travis-ci left
[21:21] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[21:29] *** troys is now known as troys_

[21:32] *** Zoffix joined
[21:32] *** Cabanossi left
[21:33] *** philomath left
[21:34] <Zoffix> moritz: I got my Containers article for the 2nd, I just left the spot blank for someone else to claim so I could keep my articles as spares for other holes. Gonna claim it in 24hr and the rest of the holes too... will claim if they're still empty three days before publishing

[21:35] *** Cabanossi joined
[21:37] *** Cabanossi left
[21:37] *** Cabanossi joined
[21:38] *** Zoffix left
[21:38] *** kyan left
[21:39] *** dakkar joined
[21:45] *** dakkar left
[21:45] *** rindolf left
[21:57] *** geospeck left
[22:06] *** mcmillhj left
[22:07] *** mcmillhj joined
[22:11] *** BrianOn99 joined
[22:14] *** kitsunenokenja joined
[22:16] <Xliff> Is there a blog post or something that explains Containers?

[22:16] *** BrianOn99 left
[22:16] <Xliff> I know I need that more for nqp. But it would still be a big help

[22:21] <tyil> maybe interesting for someone to write up an advent post for that? there's still some empty slots

[22:22] <tyil> I still have an unpublished tutorial for perl 6 that requires some testing, but I'm afraid it'd be too long to turn it in for the perl 6 advent calendar :<

[22:29] *** espadrine joined
[22:30] *** gambatte64 joined
[22:30] <gambatte64> who

[22:30] *** Sgeo left
[22:30] <perlpilot> what

[22:30] <tyil> where

[22:30] <tony-o> when

[22:32] *** gambatte64 left
[22:33] *** setty1 left
[22:33] *** mcmillhj left
[22:33] *** troys_ is now known as troys

[22:38] *** mniip left
[22:38] *** TEttinger joined
[22:41] <tyil> anybody here using mastodon and interested to spread the word of perl 6 there with me?

[22:42] *** Zoffix joined
[22:43] <Zoffix> Xliff: tyil you guys said that literally right after I said I got a containers article for the 2nd -_-

[22:43] <Zoffix> ZofBot: no one listens to me!

[22:43] <ZofBot> Zoffix, Glad my guess was helpful :)

[22:43] <tyil> Zoffix: s-sorry!

[22:43] <tyil> I hadnt read backlog yet

[22:44] <tyil> but indeed you seem to have said that :.

[22:44] <tyil> :p

[22:44] <tyil> if interested, you can read through https://github.com/Tyil/website/blob/tutorial/perl6-introduction-to-application-programming/_tutorials/perl6-introduction-to-application-programming.adoc, if its not too long I can publish it in the advent calendar if you want

[22:45] <tyil> (general feedback is also welcome)

[22:46] <Zoffix> Xliff: there's this section, if you need it urgently https://docs.perl6.org/language/containers  or you can wait until the 2nd to see my alternate approach

[22:46] <Zoffix> And more correct... 

[22:51] <Zoffix> No geth?

[22:51] <Zoffix> Hack is murdered again. Something's killin' it (geth? synopsebot?)

[22:53] * AlexDaniel hopes that it's killed because bots ate all memory :)

[22:53] *** greppable6 left
[22:54] <Zoffix> Why?

[22:54] *** greppable6 joined
[22:54] *** ChanServ sets mode: +v greppable6

[22:54] *** tangible6 left
[22:54] *** tangible6 joined
[22:54] <AlexDaniel> Zoffix: because right now I have to cycle some of the bots because they're too memory-hungry

[22:55] <Zoffix> It's not. 10GB free RAM still

[22:55] <AlexDaniel> just noticed it today, but I think this was happening for quite some time

[22:55] <Zoffix> 12 even

[22:56] <AlexDaniel> that's probably the reason why the bots keep reconnecting sometimes (one by one), as there's a systemd limit for them…

[22:56] *** sergot left
[22:56] *** SourceBaby left
[22:56] *** dalek joined
[22:56] *** ChanServ sets mode: +v dalek

[22:56] *** synopsebot joined
[22:56] *** ChanServ sets mode: +v synopsebot

[22:57] <AlexDaniel> Zoffix: oh, what rakudo version is installed there?

[22:57] *** SourceBaby joined
[22:57] *** ChanServ sets mode: +v SourceBaby

[22:57] <Zoffix> 2017.10

[22:57] *** AndChat|688961 joined
[22:58] *** Geth joined
[22:58] *** ChanServ sets mode: +v Geth

[22:58] <Geth> ¦ doc: 2c33f20100 | (Jan-Olof Hendig)++ | doc/Type/IO/Socket/Async.pod6

[22:58] <Geth> ¦ doc: Added a few missing method headers

[22:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2c33f20100

[22:58] <synopsebot> Link: https://doc.perl6.org/type/IO/Socket/Async

[22:58] <AlexDaniel> hm, ok. That's probably before this issue appeared

[22:58] <Geth> ¦ doc: 81de65ac82 | (Alex Chen)++ | doc/Language/functions.pod6

[22:58] <synopsebot> Link: https://doc.perl6.org/language/functions

[22:58] <Geth> ¦ doc: sub MAIN and sub USAGE are collected to generate /routine/

[22:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/81de65ac82

[22:58] *** comborico1611 left
[22:58] <AlexDaniel> or maybe not, it's really hard to tell right now. I'll keep my eyes open on it

[22:58] <Geth> ¦ doc: 2ed89dfb80 | TimToady++ | doc/Language/faq.pod6

[22:58] <Geth> ¦ doc: point to authoritative cheatsheet, not a copy

[22:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2ed89dfb80

[22:58] <synopsebot> Link: https://doc.perl6.org/language/faq

[22:59] <AlexDaniel> bloatable6: uptime

[22:59] <bloatable6> AlexDaniel, 18 hours, 10 minutes, and 31 seconds, 866.736MB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[22:59] <AlexDaniel> greppable6: uptime

[22:59] <reportable6> AlexDaniel, 2 hours, 13 minutes, and 51 seconds, 497.9MB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[22:59] <greppable6> AlexDaniel, 5 minutes and 25 seconds, 212.523438MiB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[22:59] <Geth> ¦ doc: c047f875cc | (Zoffix Znet)++ | doc/Language/containers.pod6

[22:59] <synopsebot> Link: https://doc.perl6.org/language/containers

[22:59] <Geth> ¦ doc: Correction for `@` coercer

[22:59] <Geth> ¦ doc: 

[22:59] <Geth> ¦ doc: - It does more than just remove the Scalar

[22:59] <Geth> ¦ doc: - Show <> decont methodop

[22:59] <Geth> ¦ doc: - Show a bug where using `@` instead of `<>` leaks memory

[22:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c047f875cc

[22:59] *** Aaronepower joined
[22:59] <jnthn> greppable6: uptime

[22:59] <greppable6> jnthn, 5 minutes and 56 seconds, 212.902344MiB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[22:59] <reportable6> jnthn, 2 hours, 14 minutes, and 23 seconds, 499.152MB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[23:00] <jnthn> reportable6 doesn't know its name? :)

[23:00] *** greppable6 left
[23:00] *** reportable6 left
[23:00] *** greppable6 joined
[23:00] *** reportable6 joined
[23:00] <AlexDaniel> greppable6: uptime

[23:00] <greppable6> AlexDaniel, 7 seconds, 197.425781MiB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[23:00] <AlexDaniel> jnthn: too optimistic fuzzy checking :)

[23:00] <jnthn> :)

[23:01] <AlexDaniel> rprtable6: uptime

[23:01] <reportable6> AlexDaniel, 43 seconds, 208.898438MiB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[23:01] <jnthn> 500 MB is a lot. Hm

[23:01] <AlexDaniel> jnthn: it's not just a lot, it keeps increasing. bloatable6 did zero useful work and was just hanging there for 18 hours, 866MB

[23:02] <jnthn> And that's sorta-recent-ish?

[23:02] * jnthn wonders if we can see up some kind of resource usage tests

[23:02] <AlexDaniel> something during the last 30 days I think

[23:02] <Zoffix> releasable6: status

[23:02] <releasable6> Zoffix, Next release in 17 days and ≈19 hours. No blockers. 0 out of 40 commits logged

[23:02] <releasable6> Zoffix, Details: https://gist.github.com/ef452025f3c69a2b7473e786b5ac4833

[23:04] <AlexDaniel> tangible6: I'll have to kill you. There's not enough memory for all of us. Bye.

[23:04] <tangible6> AlexDaniel, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Tangible

[23:05] *** tangible6 left
[23:10] <Geth> ¦ doc: dcb567d7e5 | (Zoffix Znet)++ | 4 files

[23:10] <Geth> ¦ doc: Make xtest pass

[23:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dcb567d7e5

[23:10] *** Aaronepower left
[23:11] <Zoffix> I think that passes; can't run full xtest 'cause my rakudo is too old and can't upgrade now. Will run in full during next release.

[23:11] *** Zoffix left
[23:12] <Xliff> Zoffix: Thanks for the heads up. I will def want to see your article on the 2nd.

[23:17] *** Cabanossi left
[23:20] *** Cabanossi joined
[23:26] *** Sgeo joined
[23:28] *** travis-ci joined
[23:29] <travis-ci> Doc build failed. Zoffix Znet 'Make xtest pass'

[23:29] <travis-ci> https://travis-ci.org/perl6/doc/builds/308703298 https://github.com/perl6/doc/compare/c047f875cc9e...dcb567d7e598

[23:29] *** travis-ci left
[23:29] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[23:48] <Herby_> o/

[23:51] <SmokeMachine> .tell lizmat this (WiP) (https://github.com/FCO/rakudo/commit/94617ea607892bf7e29490820bac397015c3b137) is what I mean when I was talking about add a :&reduce parameter to classify-list/classify

[23:51] <yoleaux> SmokeMachine: I'll pass your message to lizmat.

[23:52] *** donaldh left
[23:52] <SmokeMachine> does anyone think that something like this (https://github.com/FCO/rakudo/commit/94617ea607892bf7e29490820bac397015c3b137) could be useful?

[23:54] *** donaldh joined
