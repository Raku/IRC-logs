[00:00] <zengargoyle> right, but how does it know about things on CPAN?

[00:02] <Zoffix> Same way METACpan knows of things on CPAN

[00:02] * zengargoyle just guesses you've got this sorted and i won't worry :)

[00:02] <Zoffix> From index files

[00:03] <zengargoyle> until i try.

[00:03] <zengargoyle> :)

[00:03] <eater[sha2017]> is there a way to open unix pipes?

[00:03] <eater[sha2017]> or is it not there yet?

[00:04] <Zoffix> which I guess aren't there (yet?). ugexe's ecogen just rsyncs stuff: https://github.com/ugexe/Perl6-App--ecogen/blob/master/lib/App/ecogen/cpan.pm6#L6-L19

[00:04] <zengargoyle> eater[sha2017]: how do you mean?

[00:11] <eater[sha2017]> zengargoyle: create an unix named pipe, like `mknod(2)` does with S_FIFO or S_IFSOCK does

[00:11] <eater[sha2017]> -does

[00:11] <zengargoyle> i'd expect you can shell and pass a pipeline or run something and get stdin/stdout/stderr and you could open a named pipe, but don't know if there's a mknod.

[00:12] <zengargoyle> yeah..... i'm not sure there's a builtin mknod.  but expect that one created otherwise would work.

[00:12] <eater[sha2017]> hmm

[00:12] <nadim> I am surprised that 10e10 put in a num32 gives 99999997952!

[00:12] <zengargoyle> p6 tries to avoid being *too* POSIXy

[00:12] <eater[sha2017]> let's see how hard it is to add into Perl6

[00:12] <nadim> jnthn: I am surprised that 10e10 put in a num32 gives 99999997952!

[00:13] <zengargoyle> so you could do a NativeCall wrapper and make a mknod() if you desired....

[00:13] <zengargoyle> or run a `mknod` to do it.

[00:13] <eater[sha2017]> to which lib tho, I'm pretty sure it's syscall

[00:14] <zengargoyle> is it not in clib ?

[00:14] <eater[sha2017]> hmm

[00:14] <eater[sha2017]> let's see

[00:15] <Zoffix> nadim: looks like a bug to me

[00:15] <timotimo> nadim: 16777216 is the highest number that a 32bit num can exactly represent

[00:15] <Zoffix> Is it?

[00:15] <Zoffix> huh

[00:15] <timotimo> wikipedia claims that

[00:16] <timotimo> let's see

[00:16] <Zoffix> Ah, ok

[00:16] <timotimo> 33554432 is the upper bound for represented to the next multiple of 2

[00:16] <zengargoyle> my fuu is weak, but someing along: sub mknod(somethinghere) is native {*} .... calling clib things is pretty simple and the docs probably have at least a simple example of that.

[00:16] <timotimo> you have to "is native(Str)" i think

[00:16] <nadim> let me paste the code

[00:17] <eater[sha2017]> zengargoyle: yeah

[00:17] <timotimo> m: say 2 ** 25, 10 ** 10

[00:17] <camelia> rakudo-moar da4a0f: OUTPUT: «3355443210000000000␤»

[00:17] <timotimo> m: say 2 ** 25; say 10 ** 10

[00:17] <camelia> rakudo-moar da4a0f: OUTPUT: «33554432␤10000000000␤»

[00:17] <timotimo> that's still only 8 decimal points

[00:17] <eater[sha2017]> zengargoyle: already have one for reboot :') https://github.com/the-eater/shinit/blob/master/lib/Shinit/Kernel.pm6

[00:17] <timotimo> if you're below that you'll get rounded to a multiple of 4

[00:18] <timotimo> sorry, wrong

[00:18] <zengargoyle> timotimo: yeah, i'd just have to actually look at docs and try to get it right.

[00:18] <timotimo> twice that

[00:18] <nadim> https://nopaste.linux-dev.org/?1160478

[00:18] <nadim> meh, I can write it here

[00:18] <zengargoyle> eater[sha2017]: ah, you were the syscall question many moons ago?

[00:19] <nadim> m: class Point is repr('CStruct') {has num32 $.x} my $p= Point.new: :x(10e10) ; dd $p

[00:19] <camelia> rakudo-moar da4a0f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3Point is repr('CStruct') {has num32 $.x}7⏏5 my $p= Point.new: :x(10e10) ; dd $p␤    expecting any of:␤        infix…»

[00:19] <zengargoyle> that question made me shutdown my desktop server because the example was for shutdown and not reboot! :P

[00:19] <nadim> m: class Point is repr('CStruct') {has num32 $.x} ;my $p= Point.new: :x(10e10) ; dd $p

[00:19] <camelia> rakudo-moar da4a0f: OUTPUT: «Point $p = Point.new(x => 99999997952e0)␤»

[00:19] <timotimo> nadim: i just compiled short c program

[00:20] <timotimo> 99999997952.000000

[00:20] <timotimo> that's the output i get for 'printf("%f", 10e10f);'

[00:20] <nadim> interesting!

[00:20] <eater[sha2017]> zengargoyle: don't think so, I wrote this 2 days ago

[00:21] <timotimo> single precision floats have 8 bits exponent and 23 bits fraction

[00:21] <zengargoyle> oh, nm, there was a syscall and reboot question a while back....  i proved it worked and made myself have to go and press a button to get my server back up. :)   good times.

[00:22] <timotimo> hah :D

[00:22] <eater[sha2017]> zengargoyle: :')))

[00:22] <nadim> timotimo: http://imgur.com/X6tcR04  some support for Native call in the dumper

[00:23] <nadim> timotimo: I don't know who is the doc master but in https://docs.perl6.org/language/faq#How_can_I_dump_Perl_6_data_structures_(like_Perl_5_Data::Dumper_and_similar)? there is a reference to Data::Dumper

[00:24] <nadim> It's better to write nothing than that, it's useless and broken.

[00:24] <timotimo> feel free to file an issue or pull request, i've gotta go sleep, my brain isn't working any more :)

[00:24] <nadim> I work in a few hours, will do in the morning

[00:24] *** parv joined
[00:24] <nadim> good night

[00:26] *** yoleaux left
[00:29] <eater[sha2017]> o/

[00:31] <Zoffix> dam, no idea why live modules.perl6.org NEWDB build failed. On cron logs, I see it failed at running `perl bin/build-project-list.pl` (no idea why tho) but when I recreate that locally everything work

[00:31] <Zoffix> s

[00:32] <Zoffix> oohhh

[00:33] <zengargoyle> cron has really different environment....

[00:33] <Zoffix> Damn, it's the whole "it's already running" thing biting me twice in a week ---

[00:33] <zengargoyle> oh, nm.

[00:33] <[Coke]> is there a standard in p5 for allowing multiple threads inside a single .t file? (TEST_JOBS lets you control # of simultaneous files, wondering if there's a related env var for concurrency) 

[00:34] <eater[sha2017]> zengargoyle: cannot locate symbol 'mknod' :(

[00:34] <Zoffix> Basically, I need the same thing but for "new db" too: https://github.com/perl6/modules.perl6.org/commit/2863c4b6974bb60632a42514090956c868f98316

[00:35] <timotimo> [Coke]: ln the same file multiple times and decide based upon the script name which part to execute? :P

[00:35] <Geth> ¦ doc: ebfdfebf63 | (Will "Coke" Coleda)++ | t/pod-valid.t

[00:35] <Geth> ¦ doc: Add test to verify pod.

[00:35] <Geth> ¦ doc: 

[00:35] <Geth> ¦ doc: Closes #1398

[00:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ebfdfebf63

[00:35] <Geth> ¦ doc: 1180e7223a | (Will "Coke" Coleda)++ | Makefile

[00:35] <Geth> ¦ doc: Make 'make test' respect TEST_JOBS

[00:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1180e7223a

[00:35] <Geth> ¦ doc: b2b56f61a7 | (Will "Coke" Coleda)++ | t/pod-valid.t

[00:35] <Geth> ¦ doc: allow some concurrency

[00:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b2b56f61a7

[00:36] <ugexe> [Coke]: Test2 has things for that I believe

[00:36] <Zoffix> (or just figure out a whole new system for marker files; considering it's spaghettified a bit ATM)

[00:37] <Zoffix> Prolly easiest is to have some sort of pid file for the current run and have bash script bail out if it's still running; so that it doesn't even pull anything new before a run finishes

[00:38] <Geth> ¦ modules.perl6.org: 9b87209021 | (Zoffix Znet)++ | update-modules.perl6.org

[00:38] <Geth> ¦ modules.perl6.org: Remove stray temp db file setting

[00:38] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/9b87209021

[00:38] <timotimo> hm. if we installed github web hooks in a big chunk of the module repos we have ...

[00:38] <timotimo> we'd have to engineer a bunch, but we could perhaps cut down on build time significantly

[00:38] <timotimo> we're bound by the github api rate limit, aren't we?

[00:38] <[Coke]> timotimo: see https://github.com/perl6/doc/commit/b2b56f61a7

[00:39] <Zoffix> no hooks, please

[00:39] <timotimo> sure

[00:39] <Zoffix> ZofBot: it's not WEB SCALE!

[00:40] <geekosaur> eater[sha2017], linux is "special"

[00:41] <Zoffix> timotimo: what you mean by webhooks? Having modules site subscribe to 1000+ web hooks?

[00:41] <Zoffix> And not bother updating those repos via current system?

[00:41] *** markmont joined
[00:41] <eater[sha2017]> geekosaur: no, I am!

[00:41] <Zoffix> See also https://github.com/perl6/modules.perl6.org/issues/79

[00:42] <Geth> ¦ doc: bd51763948 | (Sam Morrison)++ | doc/Type/IO/Path.pod6

[00:42] <Geth> ¦ doc: routine link creates hard links

[00:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bd51763948

[00:42] <Geth> ¦ doc: 12f1cc0bee | (Will Coleda)++ (committed using GitHub Web editor) | doc/Type/IO/Path.pod6

[00:42] <Geth> ¦ doc: Merge pull request #1434 from scmorrison/master

[00:42] <Geth> ¦ doc: 

[00:42] <Geth> ¦ doc: routine link creates hard links

[00:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/12f1cc0bee

[00:43] <geekosaur> "mknod" is a preprocessor macro. the real call is apparently __xmknod ad the first parameter specifies the ABI version used by the other parameters

[00:43] <timotimo> Zoffix: yeah, those that promise to keep us up to date with webhooks we wouldn't pull manually

[00:43] <timotimo> except for full rebuilds, or twice a day, or whatever

[00:44] <Zoffix> timotimo: looking at how much trouble we have keeping Geth subbed to half a dozen hooks, I'd imagine it'd be pretty tough to handle a thousand of them.

[00:45] <Zoffix> Wonder what the node.js folks are doing

[00:45] <timotimo> mhm

[00:46] <timotimo> maybe they have buy-in from github themselves

[00:46] <timotimo> like, the permission to be pulling loads of times more than usually acceptable

[00:46] <Zoffix> I guess by the time we reach GitHub's limits (and after we implement smarter rate limited) AND staying within the limits gives too-long builds, we'd be large enough to scrub up the $7 for premium GitHub with more API limits

[00:46] <zengargoyle> C include grepping.... the `stat' family of functions and `mknod' are in fact inline

[00:46] <Zoffix> (I'm just guessing at pricing there)

[00:46] <geekosaur> zengargoyle, I went beyond grep

[00:47] <geekosaur> mknod is an inline wrapper for __xmknod

[00:47] <timotimo> i didn't know we were not bound by request throttling

[00:47] <zengargoyle> oh, me was busy looking and not reading. :)

[00:47] <eater[sha2017]> geekosaur: pfff

[00:47] <eater[sha2017]> thanks

[00:48] <geekosaur> and you have to dig out _MKNOD_VER (which is _MKNOD_VER_LINUX and has *two* incompatible definitions in the same header; I didn't look to see which was which, but likely depends on which compatibility ABI you specify)

[00:49] <Zoffix> It's currently mostly a guestimate "If we run continuous runs while sleeping for 1s between dists; then we won't hit the limit" kind of thing and smarter rate limiter would just figure out the needed delay between dists (or even if it's needed at all) on each run, based on how many requests we have left

[00:50] <zengargoyle> geekosaur++

[00:51] <zengargoyle> at this point i'd just make a simple C wrapper and include it with the module and call that and let build figure out the details.

[00:51] <zengargoyle> i.e. a libmymknod.so with a single function.

[00:52] <eater[sha2017]> yeah

[00:52] <eater[sha2017]> tbh

[00:52] <eater[sha2017]> so much effort for a joke project 

[00:52] <eater[sha2017]> :'_

[00:53] <zengargoyle> i'm sure there are better examples, but that's how Algorithm::Trie::libdatrie works... builds a .so from source that is inclueded in the $?RESOURCES and mostly magically works.

[00:53] *** lookatme joined
[00:53] <lookatme> morningh

[00:53] <lookatme> morning

[00:54] *** nadim left
[00:54] <eater[sha2017]> zengargoyle: it's the best option tho

[00:54] <zengargoyle> there's decent tooling for building a library and bundling it up with the module so it's not a dependency or something.

[00:54] <zengargoyle> the .so is in the CUR with the rest of the code...

[00:56] *** andreoss left
[00:57] <zengargoyle> eater[sha2017]: and yeah, considering... i suspect you will *eventually* have some C stubs or something out of necessity.

[00:57] <zengargoyle> given the problem domain.

[00:58] <eater[sha2017]> haha

[00:58] <eater[sha2017]> will be fun

[00:58] <eater[sha2017]> never really written C

[01:00] <zengargoyle> hey, don't we have Inline::C ???

[01:00] <MasterDuke> eater[sha2017]: heh. i've written more C in the past 15 months working on Rakudo/NQP/MoarVM than i have in the past 15 years on anything else

[01:00] *** shmibs left
[01:00] <zengargoyle> buggable: eco Inline::C

[01:00] <buggable> zengargoyle, Nothing found

[01:00] <zengargoyle> buggable: eco Inline

[01:00] <buggable> zengargoyle, Inline 'use C-code from within Perl': https://github.com/FROGGS/p6-Inline-C 8 other matching results: https://modules.perl6.org/s/Inline

[01:00] <eater[sha2017]> :'))

[01:01] *** shmibs joined
[01:02] <Zoffix> bah "'message' => 'API rate limit exceeded for 209.*.*.*. (But here\'s the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)'"

[01:02] <Zoffix> The README fetcher uses up a request too

[01:02] <lookatme> Haven some one faced this problem: A Proc will be hang on except you call .exitcode on it

[01:03] *** astj joined
[01:03] <Zoffix> lookatme: are you closing yer pipes?

[01:04] <lookatme> yeah, I capture in out err

[01:04] <lookatme> and close in

[01:04] <lookatme> https://github.com/araraloren/perl6-app-snippet/blob/master/lib/App/snippet.pm6#L117

[01:04] <lookatme> The code

[01:05] <Geth> ¦ modules.perl6.org: 83235aaad0 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p05DataFetcher.pm

[01:05] <Geth> ¦ modules.perl6.org: Propagate API errors when fetching READMEs

[01:05] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/83235aaad0

[01:05] <eater[sha2017]> well

[01:05] <lookatme> If I add `say $proc.exitcode;` after 120, it works fine

[01:05] <eater[sha2017]> guess I'm tpying C tomorrow

[01:05] <ugexe> you would still need to close :$out and :$err if you open them

[01:05] <eater[sha2017]> thanks for the help zengargoyle++ o/

[01:06] <Zoffix> lookatme: you're not closing your pipes: https://github.com/araraloren/perl6-app-snippet/blob/master/lib/App/snippet.pm6#L333-L334

[01:06] *** eater[sha2017] left
[01:06] <lookatme> I close it in fetchMessage

[01:07] <Zoffix> lookatme: ah right

[01:08] <Zoffix> lookatme: ok, what do you mean by "Proc will be hang on"?

[01:08] <lookatme> Zoffix, right, If there raised an exception what would happen?

[01:09] <Zoffix> I don't understand the question.

[01:09] * Zoffix goes back to fixing modules.perl6.org before getting too tired to finish it today..

[01:09] <lookatme> Do you have time try some code ?

[01:09] <lookatme> :/

[01:11] <Geth> ¦ doc: 5e47aad3e4 | (Will "Coke" Coleda)++ | 3 files

[01:11] <Geth> ¦ doc: Provide :method to explicitly tag code as such

[01:11] <Geth> ¦ doc: 

[01:11] <Geth> ¦ doc: Allows us to have nicely formatted method signatures without

[01:11] <Geth> ¦ doc: having to make the examples detection smarter

[01:11] <Geth> ¦ doc: 

[01:11] <Geth> ¦ doc: Closes #1368

[01:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5e47aad3e4

[01:14] <lookatme> https://gist.github.com/araraloren/1b857a1b26da77deaa4c9e26d9a129a8

[01:18] <jdv79> .tell Skarsnik I used your Gumbo module but now its failing like in the one bug against the dist

[01:18] <lookatme> Somebody have interest on my question ? :)

[01:19] <AlexDaniel> where's the bot again?

[01:19] <jdv79> odd

[01:20] <MasterDuke> something happened with a bunch of the bots earlier

[01:22] <Geth> ¦ modules.perl6.org: e771371a9c | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p05DataFetcher.pm

[01:22] <Geth> ¦ modules.perl6.org: Fix failure to fetch README due to exhausted API limit

[01:22] <Geth> ¦ modules.perl6.org: 

[01:22] <Geth> ¦ modules.perl6.org: Pass authorization token so GitHub knows we're using an account

[01:22] <Geth> ¦ modules.perl6.org: with higher limit than the pub interface

[01:22] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/e771371a9c

[01:24] <AlexDaniel> I msg-ed dpk about yoleaux just in case

[01:24] <AlexDaniel> but somehow I feel like he knows already :)

[01:33] *** kybr left
[01:42] *** mr-foobar left
[01:43] *** mr-foobar joined
[01:44] *** kybr joined
[01:46] *** kerframil left
[01:48] *** ilbot3 left
[01:49] <lookatme> :) Oh, have no idea about this problem

[01:49] <lookatme> https://gist.github.com/araraloren/1b857a1b26da77deaa4c9e26d9a129a8

[01:49] <lookatme> can someone help me ?

[01:50] <Zoffix> lookatme: what problem are you trying to solve?

[01:50] <Zoffix> lookatme: .close returns the Proc which for procs without 0 exit code will throw when sunk

[01:50] <Zoffix> change to $ = $proc.in.close

[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:53] *** parv left
[01:54] <lookatme> Zoffix, Not working. The problem is the Proc hang on When I read **err** and **out** message in sub &fetchMessage

[01:55] <Zoffix> What does "hang on" mean?

[01:55] <jdv79> did you try using Proc::Async?

[01:55] <jdv79> just a random idea

[01:56] <lookatme> "hang on" mean nothing happen and rakudo not exit

[01:56] <lookatme> It should print error message and raise exception.

[01:56] <Zoffix> lookatme: ok, first remove this .resume crap: https://github.com/araraloren/perl6-app-snippet/blob/master/lib/App/snippet.pm6#L124

[01:57] <Zoffix> Most exceptions aren't resumable.

[01:58] <lookatme> I already try it replace `...` with `.resume`, not working 

[01:59] <Zoffix> Alright. modules.perl6.org rebuilt and repulled and is working.... Nobody use `NEWDB` trigger :)

[01:59] * Zoffix &

[01:59] <lookatme> And as I said before, if I add code `say $proc.exitcode` before &fetchMessage, it works fine

[02:00] <lookatme> jdv79, I haven't try it

[02:03] *** skids left
[02:07] <jdv79> idk.  solved my isssues.

[02:10] <lookatme> :/

[02:11] <Geth> ¦ doc: f7a524d6c2 | (Will "Coke" Coleda)++ | xt/space-after-comma.t

[02:11] <Geth> ¦ doc: also test .md files

[02:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f7a524d6c2

[02:11] <Geth> ¦ doc: bd0790571f | (Will "Coke" Coleda)++ | t/pod-valid.t

[02:11] <Geth> ¦ doc: Add TEST_THREADS env var support

[02:11] <Zoffix> Well, you have a `loop` in your code. Start sticking print statements in places.

[02:11] <Geth> ¦ doc: 

[02:11] <Geth> ¦ doc: Default to 2 threads.

[02:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bd0790571f

[02:11] <Geth> ¦ doc: 69a1ff0a87 | (Will "Coke" Coleda)++ | xt/space-after-comma.t

[02:11] <Geth> ¦ doc: Add TEST_THREADS env var support

[02:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/69a1ff0a87

[02:12] <Zoffix> Then start deleting stuff until the problem disappears.

[02:12] <Zoffix> Rinse and repeat until you golf to the part that fails and understand why :)

[02:13] *** mr-foobar left
[02:14] <Zoffix> and get rid of all the CATCHES

[02:15] <Zoffix> You're deliberatelly silencing errors and errors usually tell you why your stuff hangs

[02:15] *** noganex_ joined
[02:16] *** mr-foobar joined
[02:16] *** bstamour joined
[02:18] *** noganex left
[02:19] <Zoffix> and all the try's

[02:21] <lookatme> Zoffix, I know where the problem is .

[02:21] <lookatme> I remove all slurp-rest in fetchMessage

[02:22] <lookatme> it works fine

[02:25] *** kyan joined
[02:26] <Geth> ¦ doc: b9a60c9280 | (Will "Coke" Coleda)++ | doc/Language/about.pod6

[02:26] <Geth> ¦ doc: change from skip to show reason to skip

[02:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b9a60c9280

[02:26] *** R0b0t1 left
[02:31] <Zoffix> did you remove all the try's? .slurp-rest sounds like it might be dying due to encoding errors

[02:31] *** kybr left
[02:32] <ijneb> Can I do a multiple gather thingy

[02:32] <ijneb> like this:

[02:33] <ijneb> my ($a, $b) = gather { take 1; take 2; }

[02:33] <ijneb> so then $a would have 1, and $b would have 2

[02:33] <lookatme> yeah, I remove try around that code

[02:33] <lookatme> Zoffix, encoding error ?

[02:34] <Zoffix> m: buf8.new(200).decode

[02:34] <camelia> rakudo-moar da4a0f: OUTPUT: «Malformed termination of UTF-8 string␤  in block <unit> at <tmp> line 1␤␤»

[02:37] <lookatme> Zoffix, But there no encoding error. It is still not working even I get one line from the err or out IO::Pipe of Proc

[02:37] <Zoffix> no idea

[02:39] <lookatme> What the app doing is use clang compiler compile that c++ code. In same condition, I change compiler to gcc, it working again. :/

[02:40] <Zoffix> ijneb: yeah you can do it. 

[02:41] <lookatme> Thought I have idea get rid of this trouble. But I don't want let this problem be there. :/ 

[02:45] *** skids joined
[02:45] <Geth> ¦ doc: e978918428 | (Will "Coke" Coleda)++ | 4 files

[02:45] <Geth> ¦ doc: Don't skip tests; setup correct preambles/tags instead

[02:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e978918428

[02:51] <Geth> ¦ modules.perl6.org: aad538dbc6 | (Zoffix Znet)++ | 2 files

[02:51] <Geth> ¦ modules.perl6.org: Improve home search form display on mobile/tablet media

[02:51] <Geth> ¦ modules.perl6.org: 

[02:51] <Geth> ¦ modules.perl6.org: - Move logo to top

[02:51] <Geth> ¦ modules.perl6.org: - Fix up margins when search/lucky buttons are atop each other

[02:51] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/aad538dbc6

[02:56] *** raschipi joined
[02:57] *** bstamour left
[02:59] *** gilbert joined
[03:00] *** pilne left
[03:01] <gilbert> according to https://docs.perl6.org/language/traps#The_^_twigil 

[03:01] <gilbert> for 1..4 { say "$^one $^two $^three $^four"; } # produces OUTPUT:  << 2 4 3 1 >>

[03:01] <gilbert> I don't get it !

[03:05] <raschipi> The parameters are in alphabetical order.

[03:06] <raschipi> m: for 1..4 { say "$^one $^two $^three $^four"; }

[03:06] <camelia> rakudo-moar da4a0f: OUTPUT: «2 4 3 1␤»

[03:06] <geekosaur> " but assigns values based on the variable's Unicode ordering."

[03:07] <raschipi> m: <one two three four>.sort

[03:07] <camelia> rakudo-moar da4a0f: ( no output )

[03:07] <raschipi> m: <one two three four>.sort.say

[03:07] <camelia> rakudo-moar da4a0f: OUTPUT: «(four one three two)␤»

[03:07] *** hythm_ joined
[03:11] <raschipi> m: (%(<one two three four>.sort Z=> (1..4))){'one', 'two', 'three', 'four'}.say #gilbert

[03:11] <camelia> rakudo-moar da4a0f: OUTPUT: «(2 4 3 1)␤»

[03:12] *** mr-foobar left
[03:13] *** mr-foobar joined
[03:18] <Geth> ¦ doc: 5f5a4a67b7 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[03:18] <Geth> ¦ doc: Improve $^foo var naming example

[03:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5f5a4a67b7

[03:18] <gilbert> but perl6 -e 'no strict; @a = <one two three four>; say @a.sort'

[03:19] <raschipi> m: my @a = <one two three four>; say @a.sort

[03:19] <camelia> rakudo-moar da4a0f: OUTPUT: «(four one three two)␤»

[03:20] <raschipi> m: my @a = <one two three four>.sort Z=> 1..4; say @a

[03:20] <camelia> rakudo-moar da4a0f: OUTPUT: «[four => 1 one => 2 three => 3 two => 4]␤»

[03:20] <geekosaur> yes, so perl6 took you to mean for 1...4 -> $^four $^one $^three $^two { ... }

[03:21] <gilbert> yields 'four one three two' not "two four three one" !!

[03:22] *** Cabanossi left
[03:22] <Zoffix> gilbert: alphabetically `four` comes first and that variable gets value 1; `one` is second, alphabetically, so it gets value 2; `three` is third, so it gets 3; and `two` is fourth, so it gets value 4. 

[03:23] *** Cabanossi joined
[03:23] <Zoffix> gilbert: if sorted came out as "two four three one", you'd have to have them in the source as "$^two $^four $^three $^one" to get 1 2 3 4

[03:24] <gilbert> thanks - back in 30 minutes

[03:24] <Zoffix> gilbert: you're confusing meaning of the text encoded in variable name with the value that variable contains. Exactly what the trap is telling you you should avoid 

[03:27] <gilbert> That's why come hereto ask questions ;\)

[03:28] *** gilbert left
[03:28] *** ChoHag left
[03:29] <Zoffix> :)

[03:30] *** pharv joined
[03:34] *** BenGoldberg joined
[03:40] *** hythm_ left
[03:40] * zengargoyle feels sorry for $^x, $^y, $^z, $^w users. :)

[03:41] <geekosaur> "if you care about the names, use actual names not placeholders"

[03:41] <zengargoyle> m: say <x y z W>.sort

[03:41] <camelia> rakudo-moar da4a0f: OUTPUT: «(W x y z)␤»

[03:42] <geekosaur> m: say <X Y Z w>.sort

[03:42] <camelia> rakudo-moar da4a0f: OUTPUT: «(X Y Z w)␤»

[03:43] *** R0b0t1 joined
[03:43] *** markmont left
[03:43] <zengargoyle> my head maths and ijk and xyzw are sorta where not naming would sorta jus fit the common things.

[03:44] <lookatme> m: for 1..4 { say *, *, *, * }; 

[03:44] <camelia> rakudo-moar da4a0f: OUTPUT: «****␤****␤****␤****␤»

[03:44] <zengargoyle> but yeah, we have unicode so ....

[03:45] <zengargoyle> could put hats on them or such.

[03:45] <geekosaur> someone's probably going to write a slang which puts them in order used, and then discover even more lovely edge cases...

[03:46] <zengargoyle> lol

[03:47] * zengargoyle just found out that ibus compose doesn't do jhat or khat but has î

[03:49] <geekosaur> ĵ

[03:50] <geekosaur> ibus but with the magic to have it fall back to X11 compose. <compose> ^ j

[03:50] <zengargoyle> oh, *please* tell me how.

[03:50] <zengargoyle> i've tried to do that for ages and failed.

[03:51] <geekosaur> uh, I got it from the p6 docs page?

[03:52] <zengargoyle> hrm, maybe it's new info....

[03:52] <geekosaur> but you have to export some stuff into the environment before ibus starts, debian will read your dotfiles before starting stuff but other distros/OSes will need special configuration

[03:52] <geekosaur> debian/ubuntu/mint

[03:53] * zengargoyle goes woot and is off to look.

[03:53] <zengargoyle> :)

[03:53] <geekosaur> the real question might be whether you're getting ibus or gnome's pathetic simulation thereof

[03:54] <zengargoyle> i may have some gnome stuff floating about, but mostly use i3

[03:54] <geekosaur> I probably should have said gtk

[03:54] <zengargoyle> i think my only gnome is gdm login bit.

[03:54] <geekosaur> it's not the window manager, it's the toolkit used by the terminal or irc client

[03:55] <geekosaur> (in my case, hexchat uses gtk but allows overriding the XIM so I set it to use ibus directly)

[03:55] <zengargoyle> ah... :<  i use gnome-termnal + irssi for better unicode font things.

[03:56] <zengargoyle> so i'm like halfway between using xterm for stuff where i don't care as much and it's good enough, and gnome-terminal because it does the whole totally weird unicode font fallback thing better.

[04:00] * zengargoyle wants a terminal that does full font magic, uses XCompose, supports ibus for other input methods.  i have not succeded as of yet.

[04:01] <Geth> ¦ modules.perl6.org: a5714b21d9 | (Zoffix Znet)++ | templates/layouts/default.html.ep

[04:01] <Geth> ¦ modules.perl6.org: Fix rendering of "home" nav on mobile

[04:01] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/a5714b21d9

[04:02] <zengargoyle> maybe try going to xim or scim (if it still works at all)

[04:06] *** skids left
[04:07] *** jeek joined
[04:08] <zengargoyle> ah, yep, new info in docs and yep xim... will give it a shot.

[04:12] <Geth> ¦ modules.perl6.org: 9ce47a932c | (Zoffix Znet)++ | assets/sass/main.scss

[04:12] <Geth> ¦ modules.perl6.org: Add a bit of shadows

[04:12] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/9ce47a932c

[04:12] *** mr-foobar left
[04:14] *** aindilis left
[04:15] *** mr-foobar joined
[04:17] *** Actualeyes left
[04:18] *** aindilis joined
[04:22] *** yoleaux joined
[04:22] *** ChanServ sets mode: +v yoleaux

[04:24] *** Actualeyes joined
[04:33] <Geth> ¦ modules.perl6.org: 165d9ef1f4 | (Zoffix Znet)++ | lib/ModulesPerl6/Controller/Root.pm

[04:33] <Geth> ¦ modules.perl6.org: Add `from:` search feature

[04:33] <Geth> ¦ modules.perl6.org: 

[04:33] <Geth> ¦ modules.perl6.org: - Filter by dist source:

[04:33] <Geth> ¦ modules.perl6.org:     from:github or from:gitlab or (future) from:cpan

[04:33] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/165d9ef1f4

[04:43] *** mr-foobar left
[04:46] <jdv79> .tell Skarsnik I used your Gumbo module but now its failing like  in the one bug against the dist

[04:46] <yoleaux> jdv79: I'll pass your message to Skarsnik.

[04:46] *** mr-foobar joined
[04:47] <ryu0> m: say "I like to eat 3.14 PIs a day."

[04:47] <camelia> rakudo-moar da4a0f: OUTPUT: «I like to eat 3.14 PIs a day.␤»

[04:49] <Zoffix> m: say "I like to eat τ PIs a day"

[04:49] <camelia> rakudo-moar da4a0f: OUTPUT: «I like to eat τ PIs a day␤»

[04:49] <Zoffix> m: say "I like to eat {τ} PIs a day"

[04:49] <camelia> rakudo-moar da4a0f: OUTPUT: «I like to eat 6.28318530717959 PIs a day␤»

[04:51] <BenGoldberg> Wait, I thought perl was going to converge on 2pi, not in this tau thing ;)

[04:56] <raschipi> BenGoldberg: Everyone measures circles by their radius, stop being weird.

[04:58] *** wamba joined
[04:58] *** kybr joined
[05:02] *** feng joined
[05:03] <Geth> ¦ modules.perl6.org: 4266508225 | (Zoffix Znet)++ | 3 files

[05:03] <Geth> ¦ modules.perl6.org: Add help page

[05:03] <Geth> ¦ modules.perl6.org: 

[05:03] <Geth> ¦ modules.perl6.org: To document new search features, the TODO issues feature, as well

[05:03] <Geth> ¦ modules.perl6.org: as how users can include Travis/AppVeyor stuff to their modules.

[05:03] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/4266508225

[05:04] *** BenGoldberg left
[05:04] *** ilbelkyr_ is now known as ilbelkyr

[05:06] <Geth> ¦ modules.perl6.org: 152e838ad7 | (Zoffix Znet)++ | templates/todo/index.html.ep

[05:06] <Geth> ¦ modules.perl6.org: Improve Module TODO page header

[05:06] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/152e838ad7

[05:07] <Zoffix> \o/ yey help page http://modules.perl6.org/help

[05:10] *** raschipi left
[05:12] *** mr-fooba_ joined
[05:14] *** mr-foobar left
[05:17] <Geth> ¦ modules.perl6.org: ca215799ad | (Zoffix Znet)++ | site-tips.txt

[05:17] <Geth> ¦ modules.perl6.org: Add a couple more site tips

[05:17] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/ca215799ad

[05:17] *** feng left
[05:21] *** Cabanossi left
[05:23] *** Cabanossi joined
[05:30] *** lizmat joined
[05:33] *** xtreak joined
[05:43] *** lizmat left
[05:47] *** lowbro joined
[05:47] *** lowbro left
[05:47] *** lowbro joined
[06:00] *** pharv left
[06:12] *** aborazmeh joined
[06:12] *** aborazmeh left
[06:12] *** aborazmeh joined
[06:16] *** andreoss joined
[06:22] *** wamba left
[06:38] *** ChoHag joined
[06:46] *** lizmat joined
[06:47] *** Possum left
[06:49] *** dwarring left
[06:51] *** TEttinger left
[06:53] *** andrzejku joined
[06:54] *** tzekid joined
[07:01] *** abraxxa joined
[07:05] *** abraxxa left
[07:06] *** cgfbee left
[07:07] *** Cabanossi left
[07:08] *** Cabanossi joined
[07:12] *** cgfbee joined
[07:15] *** Ven joined
[07:16] *** Ven is now known as Guest15800

[07:18] *** wamba joined
[07:19] *** Guest15800 left
[07:20] *** abraxxa joined
[07:22] *** darutoko joined
[07:28] *** nadim joined
[07:34] *** aborazmeh left
[07:36] *** yoleaux left
[07:36] *** yoleaux joined
[07:36] *** ChanServ sets mode: +v yoleaux

[07:47] *** andreoss left
[07:50] *** xtreak left
[07:50] *** xtreak joined
[07:55] *** xtreak left
[07:57] *** zakharyas joined
[07:58] *** andreoss joined
[08:03] *** ijneb left
[08:06] *** Cabanossi left
[08:08] *** Cabanossi joined
[08:14] <Geth> ¦ doc: nkh++ created pull request #1435: Changed link in the data dump section of the FAQ

[08:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1435

[08:31] *** edehont joined
[08:32] *** nattefrost joined
[08:34] *** jonas1 joined
[08:36] *** robertle joined
[08:36] *** edehont left
[08:37] *** edehont joined
[08:47] *** rindolf joined
[08:47] *** g0d355__ joined
[08:50] *** edehont left
[08:57] <jnthn> nadim: Welcome to floating point. ;)

[08:57] *** Skarsnik joined
[08:57] <Skarsnik> Hello

[08:57] <yoleaux> 04:46Z <jdv79> Skarsnik: I used your Gumbo module but now its failing like  in the one bug against the dist

[08:58] *** cschwenz joined
[09:01] *** Ven joined
[09:01] *** Ven is now known as Guest81141

[09:02] *** xtreak joined
[09:04] <nadim> jnthn: I had my problems with them, on multiple architectures, 25 years ago. Silly me, I thought we were doing floating points internally. ala Big::Int.

[09:05] <jnthn> num32 is explicitly asking for floating point

[09:05] <jnthn> As is a literal wiht an e in it

[09:06] <zengargoyle> jnthn: is there any magic anywhere in the floating point Num chaing of things.

[09:07] <zengargoyle> or is using e guaranteed to actuallly get you an IEEE floating point thing like you would expect in other languages.

[09:08] *** Guest81141 left
[09:09] <nadim> jnthn: I added "some" Native support to DDT, but I'd like to do a bit more. timotimo showed me some of the ropes yesterday with explanations, Skarsnik also helped a bit. Now I am wondering if there is a way, via nqp if necessary, to look at an Int and say you are an int32. let me post  a link to an image.

[09:10] <jnthn> zengargoyle: We use the presence of the e in there to know to treat it as floating point and produce a Num literal

[09:10] <jnthn> And Num is just a boxed num

[09:10] <jnthn> Which you can assume to be the same as num64 in practice

[09:11] <nadim> jnthn: http://imgur.com/X6tcR04 here list[4], which displays as '7', is received as an Int, but I know it was declared as an int32, I'd like to dig that out. timotimo exaplined that it was a property of the variable but by the time I display it, the original variable is gone.

[09:11] <jnthn> Yup

[09:11] <jnthn> You'd have to track it from the container

[09:11] <jnthn> Yourself

[09:12] <zengargoyle> hrm, i thought i noticed somewhere when a trivial case (like .1e0 or such) didn't behave like i would expect from floaing point.  

[09:13] <nadim> jnthn: then it will stay like that, it is impossible to track it from the container as the user, not DDT, may have put it in another container before the dump

[09:13] <zengargoyle> like 1e0 is just 1 ....   but it was a while back and i forget the details.  i'll assume i was wrong in this case if 'e' makes floating....

[09:13] <jnthn> nadim: If they do that, it will be an Int by then :)

[09:13] <jnthn> Unless the container is typed

[09:13] <nadim> ok

[09:13] <jnthn> Natives aren't objects. They don't know what they are.

[09:13] <jnthn> That's the point :)

[09:14] <jnthn> m: say 1e0.WHAT

[09:14] <camelia> rakudo-moar da4a0f: OUTPUT: «(Num)␤»

[09:14] <nadim> I had to be imaginative to show the type of variable in CStructs already, I may be able to do that for typed containers, but it may be ugly

[09:16] <lookatme> jnthn, do you have time have a look at my module problem, it's about capture stdout or stderr of Proc 

[09:16] <lookatme> https://gist.github.com/araraloren/1b857a1b26da77deaa4c9e26d9a129a8

[09:18] <jnthn> lookatme: And you get a hang on the line you linked?

[09:18] <lookatme> No, it's in sub fetchMessage

[09:18] <jnthn> But general advice: if you're *ever* dealing with more than one handle when spawning a process, use Proc::Async, not Proc.

[09:19] <lookatme> line 333

[09:19] <lookatme> jnthn, yeah I replace with Proc::Async, it was working again

[09:19] <lookatme> but I want know if there are problem with my code

[09:19] <jnthn> Yes

[09:19] <jnthn> You can't just read from $out and then $err

[09:20] <jnthn> Because there's buffers involved

[09:20] <jnthn> And if the program you're running fills its error buffer then it will block

[09:20] <zengargoyle> yeah, i tried that myself.... there was some discussion a long while ago where some bit didn't make sense... 

[09:21] *** Ven_ joined
[09:21] <zengargoyle> maybe Z fixed it.... it sorta seemed like e0 or e-1 things were being turned into Rat.

[09:22] <zengargoyle> like DWIM overrided the 'e' in 'i want a float'

[09:23] <jnthn> This is kinda why I wanted to deprecate Proc. People say it's simpler than Proc::Async. But for use cases like this, it only *looks* simpler, but hides complexity that you have to deal with anyway. :S

[09:23] <zengargoyle> or optimized into 3e0 is really a 3.

[09:24] <lookatme> jnthn, sorry, I can't understand full of you. Do you mean I can not capture both out and err in same time ?

[09:24] <lookatme> jnthn, I think Proc::Async is better 

[09:24] <zengargoyle> and the expected floating point error (that p6 goes to great lengths to avoid) wasn't there.

[09:25] <jnthn> lookatme: You'd have to start two threads to do it, and then do blocking reads on them

[09:26] <nadim> jnthn: I have had error message like "cannot unbox to a native integer: P6opaque, Num" ie: when assigning a num with 10 or an int32 with a Num. That all makes sense but couldn't P6opaque carry some information, it still be opaque in its working. Obviously the compiler knows it's wrong so it could say why it is wrong, no?

[09:26] <jnthn> lookatme: Yes, Proc::Async is always better if you're trying to deal with stdout *and* stderr of a process.

[09:27] <nadim> jnthn: something like "cannot unbox to a native integer: P6opaque(int32), Num"

[09:28] <jnthn> nadim: What wsa the exact code that gave the error?

[09:28] <jnthn> *was

[09:28] <lookatme> jnthn, Hmm, thanks, I understand a little.

[09:29] <nadim> jnthn: my $point = Point.new: :x(2e56), :y(10) ;  where $.y is a num32

[09:31] <nadim> m: class Point is repr('CStruct') { has num32 $.y } ; my $point = Point.new: y(10) ; 

[09:31] <camelia> rakudo-moar da4a0f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    y used at line 1 (in Perl 6 please use tr instead)␤␤»

[09:32] <andreoss> could parametric types be possible with rakudo? what should i use instead?

[09:32] <nadim> m: class Point is repr('CStruct') { has num32 $.y } ; my $point = Point.new: :y(10) ; 

[09:32] <camelia> rakudo-moar da4a0f: OUTPUT: «This type cannot unbox to a native number: P6opaque, Int␤  in block <unit> at <tmp> line 1␤␤»

[09:32] <moritz> andreoss: you can parameterize roles

[09:32] <nadim> jnthn: ^^

[09:34] <andreoss> cool

[09:34] <andreoss> but why not classes?

[09:34] * zengargoyle marvels at the morning pounce.

[09:35] <jnthn> nadim: It'd probably be less confusing it if didn't mention P6opaque there

[09:35] <nadim> yes

[09:35] *** Ven_ left
[09:35] <jnthn> Should just say Int

[09:36] <nadim> and what native number type if possible

[09:36] *** konsolebox left
[09:36] <jnthn> I don't think we have that to hand

[09:36] <jnthn> We'll unbox it full width and then coerce it to 32 bit

[09:36] <nadim> andreoss: http://www.jnthn.net/papers/2009-yapc-eu-roles-slides.pdf  there is a section about parametrized roles in it, it's an old presentation, things may have changed

[09:37] <jnthn> And it's the first step that fails, and it doesn't (and can't easily, I don't think) know about the second

[09:39] <jnthn> Righty, I'm going to and hide away and try to concentrate and getting control flow graphs more precise around exception handlers so dominance calculations come out differrently and PHI nodes get placed better and maybe this arcane stuff will make something faster... :)

[09:39] <jnthn> *concentrate on

[09:39] <nadim> andreoss: https://docs.perl6.org/language/typesystem#Roles_as_Types

[09:42] *** konsolebox joined
[09:46] *** lookatme left
[09:49] * zengargoyle chuckles

[09:51] <nebuchadnezzar> hello

[09:51] <zengargoyle> hello back.

[10:07] *** ijneb joined
[10:10] <Geth> ¦ ecosystem: bfa016b75f | (Ramiro Encinas)++ (committed using GitHub Web editor) | META.list

[10:10] <Geth> ¦ ecosystem: Add System::DiskAndUpdatesAlerts

[10:10] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/bfa016b75f

[10:11] <nadim> Skarsnik: since it was you idea to ask about NativeCall support, maybe you can give me some feedback on the result so far? ;)

[10:12] <Skarsnik> where is your module? x)

[10:14] *** Peter_R left
[10:14] <nadim> hehe, you get a screenshot to start with, and if you hate it I fix it, otherwise I think I can stamp that as experimental and throw it in in the next release, I'd like to add more test case (your help  appreciated with that). let me give you the code that generates the screenshot and the screenshot.

[10:14] *** Peter_R joined
[10:16] <nadim> Skarsnik: https://nopaste.linux-dev.org/   http://imgur.com/X6tcR04  

[10:17] <nadim> meh! https://nopaste.linux-dev.org/?1160483

[10:20] <nadim> Skarsnik: I think the <VMArray> is overkill since the type already contains [int64], I think removing it or replacing it with something like <

[10:20] <nadim> <native>

[10:23] *** lizmat left
[10:24] <Skarsnik> I will look after lunch ^^

[10:28] *** lowbro left
[10:29] *** tyilanmenyn is now known as tyil

[10:29] *** marsmarsico joined
[10:30] *** marsmarsico left
[10:45] *** haha_ joined
[10:58] <domm> is there something like CPAN::Mini for Perl6? I'm spending the whole tomorrow on a train / offline but might still want to hack some Perl6?

[10:59] <Skarsnik> *Star?

[11:02] <nadim> domm: Hi, not that I know of but it feels like downloading the list of modules (ecosystem)  and using git to clone localy, zef may have the option to point somewhere else. if you run zef without any option it list a config file at the bottom 

[11:03] <Skarsnik> *need to buy more ram*

[11:03] <moritz> you might want to clone https://github.com/moritz/perl6-all-modules to have all the modules in one place

[11:05] *** zakharyas left
[11:05] *** Cabanossi left
[11:06] <Skarsnik> nadim, you can still commit stuff on your repo and add the module later in the ecosystem :)

[11:07] <nadim> I can even make you a branch to try if you want to

[11:08] <nadim> the module is in the ecosystem already

[11:08] <Skarsnik> Hoo

[11:08] *** breinbaa1 left
[11:08] *** Cabanossi joined
[11:08] <nadim> takes 5 minuted if you want an unstable branch

[11:08] <Skarsnik> make me wonder if we have something to pin a version for the ecosystem

[11:09] *** breinbaas joined
[11:09] <nadim> that, IMO would make little sense

[11:10] <Skarsnik> dunno, you could pin a release to have a stable version and still work on the master branch

[11:10] <nadim> I have a master and a release branch, the release branch is in the ecosystem

[11:11] <nadim> but even my development branch is not enough, sometimes multiple development branches makes sense

[11:11] <nadim> but the branches for, IE, NAtive support, are not on github. they can be added when necessary

[11:19] <nadim> Skarsnik: https://github.com/nkh/P6-Data-Dump-Tree/tree/native

[11:20] <nadim> Skarsnik: test you can play with would be in example/int32.pl

[11:23] <ryu0> how interesting. for my PPA, the precomp files are only good for one architecture's rakudo.

[11:25] *** Aaronepower left
[11:26] <Skarsnik> *rebuild rakudo*

[11:26] <ryu0> haha. yea.

[11:26] <ryu0> i'm figuring out how to make rakudo play nice with distro packaging.

[11:26] <ryu0> made a lot of progress.

[11:27] <Skarsnik> hm, I though the work on that was done?

[11:27] <ryu0> it has some sharp edges still.

[11:27] <ryu0> but it's doing fairly well.

[11:27] *** Aaronepower joined
[11:27] <ryu0> just noticed i need to make the perl modules architecture specific to work around this issue.

[11:28] <ryu0> otherwise the perl6 recompiles them in the user's .perl6 directory.

[11:28] <Skarsnik> did you ask stuff in #perl6-toolchain ?

[11:28] <ryu0> No? I was digging around in how ARCH's AUR handles it.

[11:28] <ilmari> ISTR a thread about this on debian-devel recently

[11:29] <ryu0> anyway i seem to have solved my problem.

[11:31] *** edehont joined
[11:31] <ryu0> and there we go. that should solve the issue.

[11:31] *** Aaronepower left
[11:31] <ryu0> i noticed that i couldn't take the precomp files from amd64 and get them to work easily with i386. X)

[11:33] *** Aaronepower joined
[11:33] *** lizmat joined
[11:33] <Skarsnik> well, yes lol

[11:33] <ryu0> hence why i'll just build them separately.

[11:34] <ryu0> hoping my ppa will make it easier to get rakudo running on ubuntu at least.

[11:35] *** nadim left
[11:35] <ryu0> i've been using zef as a test package until i figure out how i'm going to handle the rest of the modules.

[11:35] *** lowbro joined
[11:35] *** lowbro left
[11:35] *** lowbro joined
[11:36] <Skarsnik> hm, debian package does not work already?

[11:36] *** Aaronepower left
[11:36] <Skarsnik> rakudo dependacy are rather low

[11:38] *** Aaronepower joined
[11:38] *** Aaronepower left
[11:40] *** edehont left
[11:45] *** Aaronepower joined
[11:46] *** araraloren joined
[11:48] <domm> moritz: thanks

[11:49] <ryu0> Skarsnik: yes, but they're very old.

[11:50] *** Skarsnik_ joined
[11:51] *** Skarsnik left
[11:52] *** astj left
[11:52] *** astj joined
[11:55] *** gregf_ joined
[11:56] *** Skarsnik_ left
[11:57] <Geth> ¦ doc/molecules-patch-1: ae8d174803 | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[11:57] <Geth> ¦ doc/molecules-patch-1: Added mention of if/elsif/else special case 

[11:57] <Geth> ¦ doc/molecules-patch-1: 

[11:57] <Geth> ¦ doc/molecules-patch-1: Does this look okay? Inspired by brian d foy's question (https://stackoverflow.com/questions/45520479/is-perl-6s-uncuddled-else-a-special-case-for-statement-separation).

[11:57] <Geth> ¦ doc/molecules-patch-1: review: https://github.com/perl6/doc/commit/ae8d174803

[11:57] *** astj left
[11:58] *** sena_kun joined
[11:59] *** Skarsnik joined
[11:59] <Geth> ¦ doc/molecules-patch-1-1: 1608091e88 | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[11:59] <Geth> ¦ doc/molecules-patch-1-1: Added mention of if/elsif/else special case 

[11:59] <Geth> ¦ doc/molecules-patch-1-1: 

[11:59] <Geth> ¦ doc/molecules-patch-1-1: Does this look okay? Inspired by brian d foy's question (https://stackoverflow.com/questions/45520479/is-perl-6s-uncuddled-else-a-special-case-for-statement-separation).

[11:59] <Geth> ¦ doc/molecules-patch-1-1: review: https://github.com/perl6/doc/commit/1608091e88

[12:00] <Geth> ¦ doc: molecules++ created pull request #1437: if/elsif/else series of blocks as a special case for implied separator

[12:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1437

[12:03] *** _ramix_ joined
[12:03] *** nadim joined
[12:07] *** colomon joined
[12:08] <_ramix_> Hi guys. I just posted a new module in the ecosystem a couple of hours ago but it is still not available. The new module (System::DiskAndUpdatesAlerts) appears at http://ecosystem-api.p6c.org/projects.json but no error appears at http://ecosystem-api.p6c.org/errors.json. Any ideas?

[12:11] <Skarsnik> hm weord

[12:12] *** xtreak left
[12:12] *** xtreak joined
[12:17] *** xtreak left
[12:17] <araraloren> _ramix_, try to do test with Test::META https://github.com/jonathanstowe/Test-META/

[12:17] *** astj joined
[12:17] *** xtreak joined
[12:20] *** travis-ci joined
[12:20] <travis-ci> Doc build passed. Christopher Bottoms 'Added mention of if/elsif/else special case 

[12:20] <travis-ci> https://travis-ci.org/perl6/doc/builds/261797654 https://github.com/perl6/doc/commit/ae8d17480354

[12:20] *** travis-ci left
[12:21] *** astj left
[12:22] *** colomon left
[12:22] *** travis-ci joined
[12:22] <travis-ci> Doc build passed. Christopher Bottoms 'Added mention of if/elsif/else special case 

[12:22] <travis-ci> https://travis-ci.org/perl6/doc/builds/261798574 https://github.com/perl6/doc/commit/1608091e88a0

[12:22] *** travis-ci left
[12:25] <tbrowder> hi #perl6

[12:26] *** colomon joined
[12:27] <tbrowder> is there any way to use NativeCall on binary objects that are not library functions such as "app" created from one or more libraries?

[12:28] <_ramix_> araraloren, According with Test::Meta... all ok and Project META file is good

[12:28] *** colomon left
[12:30] *** zakharyas joined
[12:31] *** colomon joined
[12:34] <Skarsnik> Nooo my vm is dead

[12:34] <Skarsnik> tbrowder, just call your binary with shell or run

[12:35] <araraloren> _ramix_, maybe it not update

[12:35] <araraloren> see the last update log

[12:35] <araraloren> https://modules.perl6.org/update.log

[12:35] *** colomon left
[12:35] <El_Che> Skarsnik: restore a snapshot?

[12:37] <_ramix_> araraloren, thanks. What is the frequency of the update?

[12:37] <Skarsnik> I did not have a snapshot ^^

[12:37] <tbrowder> yes i know that works, but everyone always warns about security issues using them

[12:37] <Skarsnik> the disk file is dead I think

[12:40] <araraloren> _ramix_,  According here mentioned: https://docs.perl6.org/language/modules#Distributing_Modules, it is one hour

[12:40] *** Possum joined
[12:44] <_ramix_> araraloren, Then I suspect the update is not working well. The module insertion in META.list was 3 hours ago and the last activity of update.log was Sun Aug  6 23:04:07 2017

[12:46] <araraloren> _ramix_, maybe :)

[12:46] *** ryu0 left
[12:48] *** Aaronepower left
[12:48] <samcv> .

[12:50] *** Aaronepower joined
[12:53] <_ramix_> araraloren, I'm going to open a issue at https://github.com/perl6/ecosystem/issues with this situation. Thanks!

[12:54] <araraloren> :) _ramix_ you welcome

[12:54] <Skarsnik> tbrowder, I dunno what security issue, it's not more secure to call an external lib or a binary. you can already avoid lot of issue using run and not shell

[12:55] *** cdg joined
[12:56] <[Coke]> win 16

[12:56] <buggable> [Coke], Thank you for entering Accidental /win Lottery! The next draw will happen in 3 weeks, 3 days, 11 hours, 3 minutes, and 54 seconds

[12:57] *** ryu0 joined
[12:57] <ryu0> How fiendishly cool.

[12:57] <ryu0> [<] 1, 2, 3

[12:57] <ryu0> m: [<] 1, 2, 3

[12:57] <camelia> rakudo-moar 46ef1b: OUTPUT: «Potential difficulties:␤    Useless use of [<] in sink context␤    at <tmp>:1␤    ------> 3<BOL>7⏏5[<] 1, 2, 3␤»

[12:57] <ryu0> m: say [<] 1, 2, 3

[12:57] <camelia> rakudo-moar 46ef1b: OUTPUT: «True␤»

[12:57] <ryu0> test if a list is sorted :)

[12:58] <ryu0> m: say [<] "a", "b", "c"

[12:58] <camelia> rakudo-moar 46ef1b: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[12:58] <ryu0> Huh.

[12:58] <ryu0> m: say ("a" < "b")

[12:58] <camelia> rakudo-moar 46ef1b: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[12:58] <ryu0> O_o

[12:58] <Skarsnik> this error is not that good

[12:59] *** mcmillhj joined
[12:59] <araraloren> m: say 1 < 2 < 3;

[12:59] <camelia> rakudo-moar 46ef1b: OUTPUT: «True␤»

[12:59] <ryu0> I was expected it to perform a lexicographic comparison.

[13:00] <Skarsnik> probably another operator x)

[13:01] <ryu0> m: say ("a" lt "b")

[13:01] <camelia> rakudo-moar 46ef1b: OUTPUT: «True␤»

[13:01] <ryu0> m: say [lt] "a", "b", "c"

[13:01] <camelia> rakudo-moar 46ef1b: OUTPUT: «True␤»

[13:01] <ryu0> Huh. somewhat like using shell test utility.

[13:01] <ryu0> i guess it works. I was just expecting it to be overloaded for all comparable types.

[13:02] <ryu0> or rather, ones that can have an ordering.

[13:02] <Skarsnik> m: say (9..2).sort;

[13:02] <camelia> rakudo-moar 46ef1b: OUTPUT: «()␤»

[13:02] <ryu0> O_o

[13:03] <jnthn> ryu0: < consistently means numeric comparison, lt means string comparison. It's so even if you don't know the exact types you have, you'll get consistent semantics.

[13:03] <ryu0> m: say (2..9)

[13:03] <camelia> rakudo-moar 46ef1b: OUTPUT: «2..9␤»

[13:03] <ryu0> jnthn: i see.

[13:03] <jnthn> Same reason ~ is used for concat, rather than overloead +

[13:03] *** xtreak left
[13:03] <Skarsnik> m: say 9..2.sort;

[13:03] <camelia> rakudo-moar 46ef1b: OUTPUT: «Seq objects are not valid endpoints for Ranges␤  in block <unit> at <tmp> line 1␤␤»

[13:03] <ryu0> jnthn: so i have to choose operators based on types

[13:04] <ryu0> ok.

[13:04] <jnthn> There's also before which *is* overloaded by type

[13:04] <jnthn> When you know that's what you want

[13:04] *** lizmat_ joined
[13:04] <ryu0> overloading has its own perils i know.

[13:04] <jnthn> This saves the problems in many dynamic languages where you can't look at a piece of code and know whether < will do numeric comparison or not :)

[13:04] *** lizmat left
[13:04] <ryu0> it can create a lot of "humorous" problems in C++. :/

[13:04] <jnthn> In Perl it always will.

[13:05] <ryu0> lol

[13:05] <jnthn> And if one side (or either side) are strings, it'll coerce them to numbers first

[13:05] <ryu0> And if that fails?

[13:05] *** Aaronepower left
[13:05] <jnthn> m: say "a" < "b"

[13:05] <camelia> rakudo-moar 46ef1b: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[13:06] <ryu0> m: say "a" + "1"

[13:06] <camelia> rakudo-moar 46ef1b: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[13:06] <ryu0> Oh.

[13:06] <jnthn> It complains :)

[13:06] *** Aaronepower joined
[13:06] <ryu0> so it keeps the JS like behavior but actually throws an error instead of silently giving garbage.

[13:07] <jnthn> Well, except in JS, + might do a concat.

[13:07] <jnthn> Depending on what it gets.

[13:07] <ryu0> yea...

[13:07] <ryu0> i'm aware.

[13:07] <ryu0> i meant in general

[13:07] <ryu0> not to mention it has no integral types, only floating point.

[13:08] <araraloren> jnthn, :) A quick question. Why we should use CArray[uint8] not Str if C function requires the lifetime of a string to exceed the function call ?

[13:09] <jnthn> araraloren: Because with Str a buffer with the enoded data is made for you, but you never get access to it, so you can't store it somewhere to make sure it won't be deallocated

[13:09] <jnthn> fiwiw, you can pass a Blob or Buf instead of CArray[uint8]

[13:09] <jnthn> Which may be more convenient

[13:10] <araraloren> Blob or Buf suit for NativeCall ?

[13:10] <jnthn> Yeah

[13:10] *** Aaronepower left
[13:10] <jnthn> Just make sure that you keep a reference to it in your program so long as the C code also will

[13:10] <araraloren> Thanks, I will try it.

[13:10] <ryu0> https://launchpad.net/~ryu0/+archive/ubuntu/perl6 <-- my work so far.

[13:11] <jnthn> And don't mutate it :)

[13:11] <araraloren> jnthn, I will

[13:11] <ryu0> i'll probably do some more later.

[13:11] <araraloren> ok

[13:12] <ryu0> i plan to try to package everything that is shipped in rakudo star.

[13:12] <ryu0> but for now i need to go.

[13:13] <araraloren> jnthn, thanks. Cool!!! working perfectly!

[13:14] *** Aaronepower joined
[13:15] <jnthn> ryu0++ 

[13:18] *** sufrostico joined
[13:19] <nadim> araraloren: Test::META itself does not work for me because META.version xxxx is not found but Zef says it is up to date. May be a problem related to the one ramix has. let me dig out a ticket

[13:20] <nadim> araraloren: https://github.com/jonathanstowe/Test-META/issues/27#issuecomment-319090770

[13:21] <araraloren> oh

[13:21] <araraloren> :)

[13:23] *** rindolf left
[13:25] *** _ramix_ left
[13:26] *** cdg_ joined
[13:26] *** rindolf joined
[13:26] <samcv> grant status update 3 is up https://cry.nu/perl6/grant-status-update-3/

[13:28] *** cdg left
[13:29] *** wamba left
[13:34] *** skids joined
[13:34] *** wamba joined
[13:37] <[Coke]> samcv++ # also reminding me of many small grant things i need to do

[13:42] *** andrzejku left
[13:43] *** pmurias joined
[13:44] <pmurias> ryu0: small floating point numbers sort of act like integers in js

[13:45] <pmurias> ryu0: rakudo.js/nqp.js sort of gets them to work that way with adding |0 everywhere

[13:45] <nadim> samcv++

[13:48] <pmurias> jnthn: will you be at TPC::EU?

[13:54] *** eater[sha2017] joined
[13:59] *** lizmat_ left
[14:01] <jnthn> pmurias: No, 'fraid not

[14:02] *** Aaronepower left
[14:03] *** Aaronepower joined
[14:04] <pmurias> jnthn: :(

[14:08] <eater[sha2017]> what would be the best way to implement unix:// sockets? make a new class for it or put it in IO::Socket::Async ?

[14:08] *** Aaronepower left
[14:09] *** lizmat joined
[14:11] *** pmurias left
[14:14] <jnthn> eater[sha2017]: IO::Socket::Async; since we pass the port number as a 64-bit integer but it's only 16 bits, we can use some of the upper bits to indicate socket type, so it won't changes to the op interface

[14:14] *** mcsnolte joined
[14:14] <jnthn> *change

[14:15] <andreoss> how should i prevent .new from being called on an 'abstract' role?

[14:16] <eater[sha2017]> jnthn: and use the host bit for the full path?

[14:17] <jnthn> eater[sha2017]: Yeah

[14:17] <eater[sha2017]> haha

[14:17] <eater[sha2017]> let's go

[14:18] *** pmurias joined
[14:20] <ilmari> andreoss: perl6 will refuse to auto-pun a role with stub methods

[14:20] <ilmari> m: role Foo { method bar {…} } Foo.new

[14:20] <camelia> rakudo-moar 46ef1b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3role Foo { method bar {…} }7⏏5 Foo.new␤    expecting any of:␤        infix␤        infix stopper␤        state…»

[14:20] <Altreus> I've lost my perl6 book :(

[14:20] <ilmari> m: role Foo { method bar {…} }; Foo.new

[14:20] <camelia> rakudo-moar 46ef1b: OUTPUT: «Method 'bar' must be implemented by Foo because it is required by roles: Foo.␤  in block <unit> at <tmp> line 1␤␤»

[14:20] <merced> strange tet!

[14:20] <merced> xxxxxxt

[14:21] <Altreus> Is there a perl6 book I can just print? like MP for Perl5?

[14:21] <timotimo> m: role NoNotInTheFace { die "have to apply me to a role" unless ::?CLASS eq "NoNotInTheFace" }; class omg does NoNotInTheFace { }; say "built an { omg.new }"; NoNotInTheFace.new()

[14:21] <camelia> rakudo-moar 46ef1b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤concatenate requires a concrete string, but got null␤at <tmp>:1␤»

[14:21] <Altreus> use Modern::Perl 6;

[14:21] <timotimo> whoopsie

[14:22] <andreoss> ilmari: thanks, i've tried it with `proto` but it didn't work

[14:22] *** Aaronepower joined
[14:22] <ilmari> andreoss: proto is for multidispatch, not requiring methods

[14:22] <ilmari> https://docs.perl6.org/language/objects#Stubs

[14:22] <Zoffix> Altreus: there's Think Perl 6 digital edition of which is free: http://greenteapress.com/wp/think-perl-6/

[14:23] <timotimo> m: role Test { say ::?CLASS }; Test.new

[14:23] <camelia> rakudo-moar 46ef1b: OUTPUT: «concatenate requires a concrete string, but got null␤  in any protect at gen/moar/stage2/NQPCORE.setting line 1033␤  in block <unit> at <tmp> line 1␤␤»

[14:23] <Zoffix> All the rest of the books are listed on https://perl6book.com/

[14:23] <timotimo> :\

[14:23] <timotimo> is ::?CLASS even what i'm looking for?

[14:23] <timotimo> m: role Test { say ::?WHATEVER }; Test.new

[14:23] <camelia> rakudo-moar 46ef1b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such symbol '::?WHATEVER'␤at <tmp>:1␤------> 3role Test { say ::?WHATEVER7⏏5 }; Test.new␤»

[14:23] <timotimo> it at least exists

[14:23] <Zoffix> m: role Test { method x { say ::?CLASS } }; Test.new.x

[14:23] <camelia> rakudo-moar 46ef1b: OUTPUT: «(Test)␤»

[14:24] <Altreus> I think I'm ahead of my time

[14:24] <Zoffix> m: role Test { say ::?ROLE }; Test.new

[14:24] <camelia> rakudo-moar 46ef1b: OUTPUT: «(Test)␤»

[14:25] <timotimo> i was hoping to get the thing the role was being applied to

[14:25] <timotimo> m: role Test { method x { say ::?CLASS } }; Test.new.x; class OtherThing does Test { }; OtherThing.new.x

[14:25] <camelia> rakudo-moar 46ef1b: OUTPUT: «(Test)␤(OtherThing)␤»

[14:25] <andreoss> is there a way to make AbstractRole.new impossible on compile-time?

[14:26] <Zoffix> timotimo: it's ::?CLASS, but you're running it inside the body, so it ain't got value yet

[14:26] <timotimo> the body runs at composition time i thought so it ought to be okay i thought

[14:27] <Zoffix> Ah

[14:27] <Zoffix> I thought it ran at compilation time

[14:27] * [Coke] ponders a pod marker for sample code like :dies-with

[14:28] *** Zoffix left
[14:32] <andreoss> m: role Option[::A] { method get {...}}; role Some[::A] does Option[::A] { has A $!value; method get return A { $!value }}; my Option[Int] $x = Some[Int].new(value => 1); say $x.get;

[14:32] <camelia> rakudo-moar 46ef1b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Invalid trait modifier (did you mean 'returns'?)␤at <tmp>:1␤------> 3[::A] { has A $!value; method get return7⏏5 A { $!value }}; my Option[Int] $x = Som␤»

[14:32] *** sherwool left
[14:32] <andreoss> m: role Option[::A] { method get {...}}; role Some[::A] does Option[::A] { has A $!value; method get returns A { $!value }}; my Option[Int] $x = Some[Int].new(value => 1); say $x.get;

[14:32] <camelia> rakudo-moar 46ef1b: OUTPUT: «Died with X::TypeCheck::Return␤  in method get at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:34] <pmurias> should EVAL q:to/END/; be allowed with MONKEY-SEE-NO-EVAL turned off?

[14:34] <andreoss> m: role Option[::A] { method get {...}}; role Some[::A] does Option[::A] { has $.value; method get  { $.value }}; my Option[Int] $x = Some[Int].new(value => 1); say $x.get;

[14:34] <camelia> rakudo-moar 46ef1b: OUTPUT: «1␤»

[14:35] <andreoss> why the first one doesn't "type check"?

[14:36] <timotimo> you want "does Option[A]" instead

[14:36] <timotimo> i find it surprising it compiles at all :)

[14:36] <timotimo> hm. or maybe it's fine

[14:37] *** Cabanossi left
[14:38] *** Cabanossi joined
[14:38] *** cdg_ left
[14:39] *** cdg joined
[14:39] *** Zoffix joined
[14:40] <andreoss> m: role Option[::A] { method get {...}}; role Some[::A] does Option[A] { has A $!value; method get returns A { $!value }}; my Option[Int] $x = Some[Int].new(value => 1); say $x.get;

[14:40] <camelia> rakudo-moar 46ef1b: OUTPUT: «Died with X::TypeCheck::Return␤  in method get at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:41] <andreoss> it works without `returns A` in either case

[14:47] *** alimon joined
[14:47] *** nattefrost left
[14:48] *** lowbro left
[14:54] <Zoffix> damn, so yesterday I had 3 fuck ups on modules.perl6.org that affected users.

[14:55] <Zoffix> Maybe talking on IRC while working on the site at the same time ain't a good idea.

[14:56] <Zoffix> (1) Nuked a db with a broken updater script and I forgot to back it up before doing so; (2) Killed the site due to another bug in updater script that I thought was running fine and someone had to tell me there was a 500 error; (3) While debugging the previous issue, I disabled cron job and forgot to turn it back on, so a user opened an issue about missing module

[14:57] <Zoffix> What am I doing wrong? :}

[14:58] <[Coke]> m: say 3.skip-test

[14:58] <camelia> rakudo-moar 46ef1b: OUTPUT: «No such method 'skip-test' for invocant of type 'Int'␤  in block <unit> at <tmp> line 1␤␤»

[14:58] <[Coke]> m: say Any.skip-test

[14:58] <camelia> rakudo-moar 46ef1b: OUTPUT: «No such method 'skip-test' for invocant of type 'Any'␤  in block <unit> at <tmp> line 1␤␤»

[14:58] <[Coke]> ... oh, duh.

[14:59] <[Coke]> m: say 3.sum

[14:59] <camelia> rakudo-moar 46ef1b: OUTPUT: «3␤»

[15:02] *** lizmat left
[15:03] *** lizmat joined
[15:05] *** lizmat left
[15:10] *** zakharyas left
[15:11] * [Coke] hurls https://github.com/perl6/doc/issues/1438 - a skipped code sample hiding a bad example.

[15:14] *** Aaronepower left
[15:19] *** Aaronepower joined
[15:20] *** Kyo91 joined
[15:23] *** Kyo91 left
[15:23] *** Kyo91 joined
[15:23] <Geth> ¦ doc: 492896feb7 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/subscripts.pod6

[15:23] <Geth> ¦ doc: Fix bad example

[15:23] <Geth> ¦ doc: 

[15:23] <Geth> ¦ doc: Part of https://github.com/perl6/doc/issues/1438

[15:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/492896feb7

[15:24] <[Coke]> Zoffix: that fixes part of it. the handles bit is still broken.

[15:24] <[Coke]> ah, you said part of. Danke!

[15:24] <andreoss> m: role Foo[::A] { has A $.v; method get returns A { $.v }}; Foo[Int].new(v=>1).get 

[15:24] <camelia> rakudo-moar 46ef1b: OUTPUT: «Died with X::TypeCheck::Return␤  in method get at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:25] <andreoss> what is wrong here?

[15:26] <Zoffix> [Coke]: well, the handles is a rakudobug IMO

[15:26] <Zoffix> I commented on the Issue

[15:27] <Zoffix> andreoss: possible a Not Implemented Yet for this use of return value specifier.

[15:31] *** andreoss left
[15:31] <Geth> ¦ modules.perl6.org: 8cfdd25e3e | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder.pm

[15:31] <Geth> ¦ modules.perl6.org: Reverse list of p6c eco metas for faster new module loading

[15:31] <Geth> ¦ modules.perl6.org: 

[15:31] <Geth> ¦ modules.perl6.org: We reverse the list, since users tend to add their modules to the

[15:31] <Geth> ¦ modules.perl6.org: bottom of the list, by reversing it, we can load new modules to the site

[15:31] <Geth> ¦ modules.perl6.org: at the start of the run, instead of at the end.

[15:31] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/8cfdd25e3e

[15:33] *** lizmat joined
[15:35] *** Eddward joined
[15:36] <Eddward> p6: (1,2,3,4).print

[15:36] <camelia> rakudo-moar 46ef1b: OUTPUT: «1 2 3 4»

[15:37] <Eddward> p6: (1,2,3,4).map( * ~ "\n" ).print

[15:37] <camelia> rakudo-moar 46ef1b: OUTPUT: «1␤ 2␤ 3␤ 4␤»

[15:37] <Eddward> For some reason (1,2,3,4).print inserts newlines for me locally in the repl.

[15:37] <Eddward> oops\

[15:38] <Eddward> nope wrong problem.

[15:38] *** robertle left
[15:38] <Eddward> But is there a way to do it without the spaces.

[15:39] *** khw joined
[15:39] *** lizmat left
[15:39] <Eddward> so (1,2,3,4).?.print => «1234»

[15:39] <araraloren> m: say (1, 2, 3, 4).gist;

[15:39] <camelia> rakudo-moar 46ef1b: OUTPUT: «(1 2 3 4)␤»

[15:39] <Zoffix> Eddward: .join.print

[15:40] <araraloren> m: say (1, 2, 3, 4).Str;

[15:40] <camelia> rakudo-moar 46ef1b: OUTPUT: «1 2 3 4␤»

[15:40] <Eddward> How is that with 50kb output strings?

[15:41] <araraloren> There some default behavior when you use print or say.

[15:41] <Eddward> I'm ultimately trying to track down a behavior change in the latest star release.

[15:41] <Zoffix> Eddward: try and see? Another alternative is .print for (1,2,3,4)

[15:41] *** tzekid left
[15:41] <Zoffix> Eddward: what change?

[15:42] <araraloren> https://docs.perl6.org/routine/put

[15:42] <[Coke]> m: <1 2 3 4>.join('').print;

[15:42] <camelia> rakudo-moar 46ef1b: OUTPUT: «1234»

[15:42] <Eddward> I'm reading a sqlite db, processing and print rows into mpu files.

[15:42] <[Coke]> m: <1 2 3 4>.join('').say

[15:42] <camelia> rakudo-moar 46ef1b: OUTPUT: «1234␤»

[15:42] <Eddward> Now every line but the first is getting a space inserted in the front.

[15:43] <araraloren> How do you print the rows

[15:43] <Zoffix> Eddward: what's the exact code you're using? `.print` the method call?

[15:43] <Eddward> I was trying to find a recreate, but I can't find a toy example that doesn't insert space in 2017.01 or 2017.04

[15:44] <Eddward> $fh.print( $sth.allrows.flat.map(...).map(...).map(...).map(...).map( * ~ "\n" ) );

[15:44] <Eddward> with various values of ...

[15:44] <Zoffix> Eddward: and when was the "working" version working? 2017.04?

[15:45] <Eddward> 2017.04 does not insert the spaces.

[15:45] *** raschipi joined
[15:45] <Zoffix> Eddward: k, the old behaviour is a bug that was fixed.

[15:45] <Eddward> ok

[15:45] <araraloren> you can print them use a for loop 

[15:45] <Eddward> Think the flat is still needed.  I'm not sure why I have that.  I suspect it was a work around for something.

[15:46] <araraloren> $fh.print($_) for $sth.allrows.flat.map(...).map(...).map(...).map(...).map( * ~ "\n" )

[15:46] <Zoffix> It might be faster to .join, as originally suggested

[15:46] <Eddward> ok

[15:46] <Zoffix> Though we have that grapheme limit that has potential to hit. I forget if we increased it recently.

[15:47] <araraloren> you better use recent release, rakudo is still on developing

[15:47] <Zoffix> It's like in 1GB> strings or so, tho

[15:47] <Eddward> I'm guessing a playlist my song library won't get that big.

[15:47] <Zoffix> :)

[15:48] *** lizmat joined
[15:49] <timotimo> m: role Option[::A] { method get {...}}; role Some[::A] does Option[A] { has A $!value; method get(--> A) { $!value }}; my Option[Int] $x = Some[Int].new(value => 1); say $x.get;

[15:49] <camelia> rakudo-moar 46ef1b: OUTPUT: «Died with X::TypeCheck::Return␤  in method get at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:49] <timotimo> interesting

[15:49] *** konsolebox left
[15:49] <Eddward> I'm trying the join.  Thanks

[15:49] <timotimo> i wonder why it doesn't get any interesting info in the error message

[15:57] *** abraxxa left
[15:59] <Zoffix> buggable: eco author:zoffix

[15:59] <buggable> Zoffix, Found 35 results: Acme::Anguish, IRC::Client, WWW, GlotIO, CoreHackers::Sourcery. See https://modules.perl6.org/s/author%3Azoffix

[15:59] <Zoffix> buggable: eco from:github

[16:00] <buggable> Zoffix, Found 861 results: panda, p6doc, Bailador, 007, zef. See https://modules.perl6.org/s/from%3Agithub

[16:00] <Zoffix> :/

[16:00] <Zoffix> :D

[16:00] <Zoffix> buggable: eco from:gitlab

[16:00] <buggable> Zoffix, Found 3 results: Task::Galaxy, WebService::FootballData, App::Football. See https://modules.perl6.org/s/from%3Agitlab

[16:00] <Zoffix> \o/ really cool it Just Works™ in buggable :)

[16:01] *** zakharyas joined
[16:01] <Zoffix> Though looks like it couldn't hurt to do some optimizations :)

[16:01] *** ChristopherBotto joined
[16:01] *** konsolebox joined
[16:01] <ChristopherBotto> Hello everyone \o/

[16:02] <ChristopherBotto> p6:  sub MAIN { fail 'oops!'; CATCH { put "Caught: $_" } }; MAIN();

[16:02] <camelia> rakudo-moar 46ef1b: OUTPUT: «oops!␤  in sub MAIN at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:02] <Zoffix> Some of these author fields in META files have amusing values: https://modules.perl6.org/search?q=author%3A2015

[16:03] <Zoffix> ChristopherBotto: was there a question?

[16:03] <Zoffix> ChristopherBotto: `fail` returns a Failure. That CATCH is basically pointless.

[16:03] <Zoffix> you can use `use fatal` in that scope to make failures fatal

[16:04] <Zoffix> p6:  sub MAIN { use fatal; fail 'oops!'; CATCH { put "Caught: $_" } }; MAIN(); 

[16:04] <camelia> rakudo-moar 46ef1b: OUTPUT: «Caught: oops!␤oops!␤  in sub MAIN at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:05] *** mcmillhj left
[16:05] <ChristopherBotto> Zoffix: Thanks!

[16:06] *** Ven joined
[16:07] *** Ven is now known as Guest63750

[16:07] <Zoffix> (`use fatal` is also automatically enabled in `try` blocks)

[16:08] *** cdg left
[16:09] *** mcmillhj joined
[16:09] *** robertle joined
[16:10] <Geth> ¦ modules.perl6.org: 6a7573663b | (Zoffix Znet)++ | templates/root/search.html.ep

[16:10] <Geth> ¦ modules.perl6.org: Display actual travis/appveyor status in title=""s

[16:10] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6a7573663b

[16:11] *** cschwenz left
[16:11] *** Eddward left
[16:12] *** Guest63750 left
[16:14] *** mcmillhj left
[16:14] *** Ven_ joined
[16:15] <Geth> ¦ doc/molecules-patch-1-1: 05fde520e0 | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[16:15] <Geth> ¦ doc/molecules-patch-1-1: s/put/ say

[16:15] <Geth> ¦ doc/molecules-patch-1-1: review: https://github.com/perl6/doc/commit/05fde520e0

[16:17] <Zoffix> ugh

[16:18] <Zoffix> GitHub automatically shows commit comments on PR comments, so I now sound like a moron: http://i.imgur.com/eEY3VqD.png

[16:20] <raschipi> Zoffix: You can also edit your own comments.

[16:20] <Zoffix> You can also edit someone elses comments.

[16:22] <Zoffix> Actually, I like to think I was the moving force for GitHub addign the "edited by" marker. After an altercation with a hostile author who edited my comments, I pointed out to GitHub that they could've edited my comments to say racist/sexist content without my knowledge and everyone would think I actually said them :)

[16:28] *** mcsnolte left
[16:28] *** dogbert11 joined
[16:28] <ChristopherBotto> Zoffix: That's GitHub feature confused me too just now. 

[16:29] *** mcmillhj joined
[16:29] <[Coke]> awe have a ticketing system at a previous employer that was setup to allow certain users to edit anyone's comments, and they did not see the issue with editing other people's sends. grumble.

[16:29] <[Coke]> s/awe /we /

[16:29] <ChristopherBotto> s/That's/That/

[16:29] <pmurias> sends?

[16:31] <[Coke]> comments reads cleaner.

[16:34] *** mcmillhj left
[16:35] <tbrowder> Skarsnik: thank!

[16:36] <tbrowder> .tell Skarsnik thanks!

[16:36] <yoleaux> tbrowder: I'll pass your message to Skarsnik.

[16:37] <Skarsnik> for what, xD

[16:37] <yoleaux> 16:36Z <tbrowder> Skarsnik: thanks!

[16:37] *** Ven_ left
[16:38] <raschipi> I think this else exception has the same explanation why its 'for EXPR BLOCK' instead of 'for EXPR, BLOCK', the first being two terms in a row (normally not permitted in Perl6), TimToady thinks it's looks better.

[16:39] <raschipi> it looks better*

[16:40] <Geth> ¦ doc: 1608091e88 | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[16:40] <Geth> ¦ doc: Added mention of if/elsif/else special case 

[16:40] <Geth> ¦ doc: 

[16:40] <Geth> ¦ doc: Does this look okay? Inspired by brian d foy's question (https://stackoverflow.com/questions/45520479/is-perl-6s-uncuddled-else-a-special-case-for-statement-separation).

[16:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1608091e88

[16:40] <Geth> ¦ doc: 05fde520e0 | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[16:40] <Geth> ¦ doc: s/put/ say

[16:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/05fde520e0

[16:40] <Geth> ¦ doc: 80ae3f6662 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[16:40] <Geth> ¦ doc: Merge pull request #1437 from perl6/molecules-patch-1-1

[16:40] <Geth> ¦ doc: 

[16:40] <Geth> ¦ doc: if/elsif/else series of blocks as a special case for implied separator

[16:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/80ae3f6662

[16:41] *** araraloren left
[16:42] <Geth> ¦ doc: 6284299405 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/syntax.pod6

[16:42] <Geth> ¦ doc: Whitespace

[16:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6284299405

[16:43] *** lizmat left
[16:44] *** Skarsnik_ joined
[16:45] *** lizmat joined
[16:46] *** mcmillhj joined
[16:47] *** Skarsnik left
[16:49] <[Coke]>  Not sure how that's a special case compared to the normal implied statement separator.

[16:50] *** mingdao left
[16:51] *** mcmillhj left
[16:51] <ilmari> the special case is the lack of one between } and elsif/else?

[16:51] <AlexDaniel> ilmari: yea, that was the idea

[16:51] <AlexDaniel> by the way, what's the normal implied statement separator?

[16:52] *** mcmillhj joined
[16:54] *** Kyo91_ joined
[16:57] *** Kyo91 left
[17:03] <raschipi> Newline after } implies statement separator.

[17:03] <raschipi> But if it's an else, it's always implied, even without the new line.

[17:04] <[Coke]> m: if True { } else { } say "what?"

[17:04] <camelia> rakudo-moar 46ef1b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3if True { } else { }7⏏5 say "what?"␤»

[17:04] <AlexDaniel> raschipi: no-no, not that

[17:05] <raschipi> Between the if and the else

[17:05] <raschipi> M: if True {say "oi"} else { put "hey";}

[17:05] <raschipi> m: if True {say "oi"} else { put "hey";}

[17:05] <camelia> rakudo-moar 46ef1b: OUTPUT: «oi␤»

[17:05] <AlexDaniel> “never” implied then

[17:05] <[Coke]> that's not an implied statement separator since it's not a new statement.

[17:06] *** Skarsnik_ is now known as Skarsnik

[17:06] <raschipi> m: if True {say "oi"}␤ else { say "hey"}

[17:06] <camelia> rakudo-moar 46ef1b: OUTPUT: «oi␤»

[17:06] <[Coke]> I get what you're showing. it's not what you said, though.

[17:08] <raschipi> Oh, I get it now. If it's followed by an else, the implied separator ISN'T inserted.

[17:09] <raschipi> Perl6 inserts has implied statement separators if a new line follows a closing curlie, except if there's an else in the next line.

[17:10] <raschipi> Defenestrated the grammar on this last one.

[17:10] <[Coke]> not quite: if it's in the middle of parsing an if...

[17:12] <raschipi> Let me try again: Perl6 has implied statement separators if a new line follows a closing curlie, except if there's an else in the next line after parsing the block for an if.

[17:13] *** astj joined
[17:13] *** Peter_R left
[17:13] *** Peter_R joined
[17:13] * [Coke] squints.

[17:13] *** Ven joined
[17:13] <[Coke]> . o O (yah, that reads fine. :)

[17:14] *** Ven is now known as Guest88849

[17:15] <AlexDaniel> raschipi: well, maybe there's a way to clarify it in the docs :)

[17:16] <[Coke]> another doc-related pod question: adding a marker to say "include the next example with this one." (for large examples split up by descriptive text)

[17:17] *** edehont joined
[17:17] <[Coke]> s/question/pondering/

[17:21] *** anopperl6 joined
[17:22] <anopperl6>  Machine Learning in Perl 6 ?

[17:23] <anopperl6> help ?

[17:23] <Zoffix> heh

[17:24] <raschipi> anopperl6: Can you go to Amsterdam?

[17:24] <Zoffix> anopperl6: that question is too vague

[17:26] *** astj left
[17:26] <ChristopherBotto> raschipi: Very recently updated https://docs.perl6.org/language/syntax#Separating_Statements.

[17:27] *** astj joined
[17:27] <raschipi> ChristopherBotto: Yes, it's open here already, I'm thinking about how to explain it better...

[17:27] *** andreoss joined
[17:29] <andreoss> m: role Foo[::A] { has A $.v; method get returns A { $.v }} my $x = Foo[Int].new(v=>1); say $x.get;

[17:29] <camelia> rakudo-moar 46ef1b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3has A $.v; method get returns A { $.v }}7⏏5 my $x = Foo[Int].new(v=>1); say $x.get;␤    expecting any of:␤        in…»

[17:29] <andreoss> m: role Foo[::A] { has A $.v; method get returns A { $.v }}; my $x = Foo[Int].new(v=>1); say $x.get;

[17:29] <camelia> rakudo-moar 46ef1b: OUTPUT: «Died with X::TypeCheck::Return␤  in method get at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:29] <andreoss> is it a bug?

[17:31] <Zoffix> andreoss: 1127     Zoffix │ andreoss: possible a Not Implemented Yet for this use of return value specifier.

[17:32] *** astj left
[17:32] *** zengargoyle left
[17:32] *** zengargoyle joined
[17:33] *** edehont left
[17:34] <ChristopherBotto> raschipi: The if/elsif/else exception does muddy an otherwise straight forward explanation. A more clear explanation would be welcome.

[17:35] *** cdg joined
[17:36] *** cdg_ joined
[17:38] *** Guest88849 is now known as Ven``

[17:38] *** nhywyll joined
[17:38] <andreoss> thanks

[17:39] *** TEttinger joined
[17:40] *** zakharyas left
[17:40] *** cdg left
[17:42] *** Ven`` left
[17:43] *** lucasb joined
[17:44] *** Ven_ joined
[17:46] <jnthn> ChristopherBotto: Maybe another way of looking at it is that, from the parser's point of view, an if/elsif/else sequence actually *is* a single statement :)

[17:46] <Geth> ¦ doc: rafaelschipiura++ created pull request #1439: Regarding separators in if/elsif/else blocks.

[17:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1439

[17:48] <raschipi> Did I made it easier to understand?

[17:49] <raschipi> And is it correct?

[17:49] *** Ven_ left
[17:51] * geekosaur suddenly reminded of rc's else handling

[17:51] <Geth> ¦ modules.perl6.org: d167f3461f | (Zoffix Znet)++ | 6 files

[17:51] <Geth> ¦ modules.perl6.org: Improve TODO issues page

[17:51] <Geth> ¦ modules.perl6.org: 

[17:51] <Geth> ¦ modules.perl6.org: - Reword descriptions of problems

[17:51] <Geth> ¦ modules.perl6.org: - Use proper icons for non-GitHub dists

[17:51] <Geth> ¦ modules.perl6.org: - Use BS styling for problems

[17:51] <Geth> ¦ modules.perl6.org: - Include author field

[17:51] <Geth> ¦ modules.perl6.org: - Sort problems by name as well as by severity to avoid sort floppiness

[17:52] <Geth> ¦ modules.perl6.org: - Sort dists by sum total of severities of problems

[17:52] <Geth> ¦ modules.perl6.org: - Use same method to handle both with/without author field routes

[17:52] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/d167f3461f

[17:52] <Geth> ¦ modules.perl6.org: 44c6d8f524 | (Zoffix Znet)++ | use-me-for-commit-triggers

[17:52] <Geth> ¦ modules.perl6.org: [REBUILD] for TODO updates

[17:52] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/44c6d8f524

[17:53] <andreoss> is there a way to define a subset of a function type?

[17:53] <andreoss> i.e `subset Fun of (Int --> Int)?`

[17:54] <Zoffix> (Int --> Int) isn't a type...

[17:54] <timotimo> return value is part of the Callable role's parameters isn't it?

[17:55] <andreoss> Zoffix: what is it than?

[17:55] <Zoffix> m: subset Fun of Callable where .signature :(Int --> Int); say sub {} ~~ Fun

[17:55] <camelia> rakudo-moar 46ef1b: OUTPUT: «===SORRY!===␤This type (QAST::WVal) does not support positional operations␤»

[17:55] <Zoffix> booo

[17:55] <Zoffix> andreoss: signature

[17:55] <Zoffix> m: subset Fun of Callable where .signature ~~ :(Int --> Int); say sub (Int --> Int) {} ~~ Fun

[17:55] <camelia> rakudo-moar 46ef1b: OUTPUT: «True␤»

[17:55] <Zoffix> m: subset Fun of Callable where .signature ~~ :(Int --> Int); say sub () {} ~~ Fun

[17:55] <camelia> rakudo-moar 46ef1b: OUTPUT: «False␤»

[17:58] <Zoffix> While that error as https://rt.perl.org/Ticket/Display.html?id=131853

[17:58] <Zoffix> s/While/Filed/; # wat?

[17:59] * [Coke] is finding several sliiiiightly off examples when trying to get the code to compile. (mult vs. multi; compile time vs. runtime errors)

[17:59] <Geth> ¦ modules.perl6.org: 9ba3d72e05 | (Zoffix Znet)++ | templates/todo/index.html.ep

[17:59] <Geth> ¦ modules.perl6.org: Toss leftover unused code

[17:59] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/9ba3d72e05

[18:00] *** lizmat left
[18:02] <Zoffix> I also removed color coding of problems 'cause I couldn't manage to make them look good otherwise.

[18:03] <Zoffix> glyphicons now code for severity: fire, warning icon, and thumbs down

[18:07] <Geth> ¦ modules.perl6.org: 096d8d4b9a | (Zoffix Znet)++ | templates/todo/index.html.ep

[18:07] <Geth> ¦ modules.perl6.org: Context-colour TODO issues icons

[18:07] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/096d8d4b9a

[18:07] *** eater[sha2017] left
[18:15] *** Ven joined
[18:15] *** Ven is now known as Guest20233

[18:16] <Geth> ¦ modules.perl6.org: 3a48f9ff99 | (Zoffix Znet)++ | assets/sass/main.scss

[18:16] <Geth> ¦ modules.perl6.org: Improve contrast on nav bar

[18:16] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/3a48f9ff99

[18:24] <andreoss> m: my &f = *.Str; say &f.signature.returns;

[18:24] <camelia> rakudo-moar 46ef1b: OUTPUT: «(Mu)␤»

[18:25] <andreoss> why it's not Str?

[18:25] <timotimo> because you can't know what a Str method does

[18:25] <perigrin> one would assume it integrates teh cream with the tea

[18:25] <timotimo> it's just a convention

[18:26] <timotimo> you mean it stirs?

[18:26] <perigrin> exactly.

[18:26] <jnthn> *groan*

[18:26] * perigrin grins getting an actual _groan_ out of jnthn 

[18:27] *** geekosaur left
[18:28] *** geekosaur joined
[18:37] <andreoss> is it possible to specify varience of a role? like Java's `? extends Foo`, '? super Bar`?

[18:39] <ryu0> Zoffix: did you include a steaming pile for code quality problems? =p

[18:39] <Zoffix> heh

[18:42] *** andrzejku joined
[18:43] *** andrzejku left
[18:43] *** andrzejku joined
[18:45] *** jonas1 left
[18:48] *** dwarring joined
[18:50] *** andrzejku left
[18:53] <Geth> ¦ modules.perl6.org: ecabc9d364 | (Zoffix Znet)++ | 3 files

[18:53] <Geth> ¦ modules.perl6.org: [REBUILD] Allow lower-cased README files

[18:53] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/ecabc9d364

[18:53] *** andrzejku joined
[18:53] <Geth> ¦ doc/molecules-patch-2: c4fed83229 | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[18:53] <Geth> ¦ doc/molecules-patch-2: Is this better?

[18:53] <Geth> ¦ doc/molecules-patch-2: review: https://github.com/perl6/doc/commit/c4fed83229

[18:54] *** andreoss left
[18:55] <Geth> ¦ doc: molecules++ created pull request #1440: if/elsif/else construct being one statement simplifies explanation

[18:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1440

[18:56] *** sena_kun left
[18:56] *** Guest20233 left
[18:58] <Zoffix> Wonder if we can find 3 people to click the "Star" button on the doc repo to make it the luckiest repo: https://github.com/perl6/doc

[18:59] <Zoffix> luckiest = dist you get when you click "I'm feeling lucky" on modules.perl6.org without entering any search terms; i.e. http://modules.perl6.org/search?lucky=1

[19:00] * moritz stars

[19:00] <yoleaux> 14:36Z <Zoffix> moritz: FWIW, modules.perl6.org rejects any logotypes that aren't 32x32 px in size. I see a couple of your dists get reported with that problem

[19:01] <Zoffix> ^ that's already fixed. It was just the two dists I sent (now merged) PRs to

[19:01] *** ChristopherBotto left
[19:02] <moritz> Zoffix: yes, thanks for those

[19:06] *** Exodist left
[19:07] *** Cabanossi left
[19:07] *** andrzejku left
[19:07] *** Exodist joined
[19:08] *** Cabanossi joined
[19:09] *** darutoko left
[19:11] *** wamba left
[19:11] *** wamba joined
[19:11] *** cschwenz joined
[19:13] *** cschwenz left
[19:14] <Geth> ¦ modules.perl6.org: 2bb3d9ceb0 | (Zoffix Znet)++ | 2 files

[19:14] <Geth> ¦ modules.perl6.org: [REBUILD] Link author names in search results…

[19:14] <Geth> ¦ modules.perl6.org: 

[19:14] <Geth> ¦ modules.perl6.org: …to search results of all the author's modules

[19:14] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/2bb3d9ceb0

[19:22] <anopperl6> hii raschipi  i am not going to Amsterdam . i have money to go there .... i know there will be talk on Machine Learning in Perl 6

[19:23] <anopperl6> <raschipi> hii  i am not going to Amsterdam . i have money to go there .... i know there will be talk on Machine Learning in Perl 6

[19:25] <Zoffix> wow damian is doing a ton of presentations on TPC::EU

[19:26] <mspo> ways to use vim, how I use vim, vim rocks, and using vim with perl

[19:26] <Zoffix> DrForr_: if you're around; anopperl6 ^ above was looking for stuff to read re Machine Learning in Perl 6

[19:35] *** edehont joined
[19:37] *** Kyo91 joined
[19:38] *** Kyo91_ left
[19:40] *** edehont left
[19:40] *** espadrine joined
[19:46] *** lizmat joined
[19:51] *** Cabanossi left
[19:51] *** anopperl6 left
[19:52] *** Skarsnik left
[19:53] *** edehont joined
[19:53] *** Cabanossi joined
[19:53] *** lizmat_ joined
[19:55] *** lizmat left
[19:57] *** mcsnolte joined
[20:00] *** edehont left
[20:02] <Geth> ¦ modules.perl6.org: a261a0b612 | (Zoffix Znet)++ | assets/sass/main.scss

[20:02] <Geth> ¦ modules.perl6.org: Toss dead SASS

[20:02] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/a261a0b612

[20:07] *** dogbert11 left
[20:09] <Geth> ¦ modules.perl6.org: 0bc13c0bff | (Zoffix Znet)++ | assets/sass/main.scss

[20:09] <Geth> ¦ modules.perl6.org: Re-style author links back to normal text

[20:09] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/0bc13c0bff

[20:16] <nadim> Just when one want to go to Amsterdam but work is oozing from everywhere and it's not even worth asking the boss for a break

[20:17] <moritz> I just realized that I've been involved with Perl 6 for over 10 years

[20:17] <moritz> quite a scary thought :-)

[20:17] <nadim> scares mainly those of us that have only been on the train for a year or two

[20:17] <nadim> maybe someone could help me understand some of the Native call example. I am working on rendering CStruct in Cstructs like the example https://nopaste.linux-dev.org/?1160500

[20:18] <mspo> moritz: the mug was thrown at you?

[20:18] <[Coke]> no, that was 17 years ago

[20:18] <nadim> I don't understand how the struct of struct gets initialized, the code, lines commented out generate an "Cannot modify an immutable Point ((Point))" error

[20:21] <timotimo> that looks kind of like type object vs instance problem?

[20:21] <timotimo> or are you trying to assign a struct to a HASed struct?

[20:23] <nadim> I am just trying to make sense of the example here https://docs.perl6.org/language/nativecall#Embedding_CStructs_and_CUnions

[20:24] <nadim> it shows a struct embeded in another struct, and a struct referenced by another struct. I just want to know how to instianciate them

[20:24] <nadim> I am taken all the examples in that page and dumping them, thought it wuold be a good test

[20:25] <nadim> and yes, I'd like to know how to set a HASed struct too.

[20:29] <mspo> [Coke]: oh right

[20:36] *** haha_ left
[20:38] *** astj joined
[20:38] <nadim> timotimo: any code tht shows how to initialize the C data structures?

[20:42] *** astj left
[20:43] *** cpage_ left
[20:48] *** zengargoyle left
[20:53] *** Kyo91 left
[20:54] *** Kyo91 joined
[21:00] *** zengargoyle joined
[21:03] <nadim> Yo anyone that can show me how to instanciate the examples in https://docs.perl6.org/language/nativecall#Embedding_CStructs_and_CUnions. I can't dump what I can't instantiate.

[21:05] <timotimo> nadim: just use the accessors or .new

[21:05] <timotimo> hm, actually

[21:05] <timotimo> if it HAS a cstruct maybe you can't pass it via new

[21:05] <nadim> none of them worked that way

[21:06] <nadim> code is here https://nopaste.linux-dev.org/?1160500

[21:06] <[Coke]> someone want to fix the second mdash there to be an actual mdash?

[21:07] <[Coke]> (on nadim's link)

[21:07] *** skids left
[21:09] *** bisectable6 left
[21:09] *** unicodable6 left
[21:09] *** benchable6 left
[21:09] *** committable6 left
[21:09] *** bloatable6 left
[21:09] *** coverable6 left
[21:09] *** evalable6 left
[21:09] *** quotable6 left
[21:09] *** statisfiable6 left
[21:09] *** greppable6 left
[21:10] <raschipi> bye bots

[21:10] *** dogbert11 joined
[21:10] *** ChoHag left
[21:10] <mspo> ha

[21:14] *** mcmillhj left
[21:16] <Geth> ¦ doc: b7370de194 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[21:16] <Geth> ¦ doc: Use proper m-dash

[21:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b7370de194

[21:17] * Zoffix hopes the spell checkers knows that you don't put spaces around mdash and won't think those are unknown words...

[21:19] *** lucasb left
[21:20] *** Cabanossi left
[21:23] *** Cabanossi joined
[21:26] * [Coke] promises to fix it if so.

[21:27] *** Ven joined
[21:27] * [Coke] was pointing at https://github.com/perl6/doc/blob/master/doc/Language/nativecall.pod6#L356 earlier.

[21:28] *** Ven is now known as Guest44413

[21:28] * [Coke] will grab that when he gets home if no one beats him to it.

[21:28] *** Guest44413 is now known as Ven``

[21:29] <Geth> ¦ doc: 68057bd807 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[21:29] <Geth> ¦ doc: Use MOAR m-dashes

[21:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/68057bd807

[21:29] <nadim> I'll do it but give me the code to do the initialization god dam it! ;)

[21:29] * nadim goes to remove a dash

[21:38] *** nhywyll left
[21:41] *** cpage_ joined
[21:42] <nadim> meh! someone was on it already

[21:43] *** zengargoyle left
[21:45] <nadim> Zoffix: you're a robot! ;)

[21:50] *** travis-ci joined
[21:50] <travis-ci> Doc build errored. Zoffix Znet 'Use MOAR m-dashes'

[21:50] <travis-ci> https://travis-ci.org/perl6/doc/builds/262006738 https://github.com/perl6/doc/compare/b7370de19477...68057bd807ba

[21:50] *** travis-ci left
[21:50] *** stmuk left
[21:50] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[21:52] *** stmuk joined
[21:56] <lucs> Wow, that's a lot of bots.

[21:56] * lucs doesn't know what half of 'em do.

[21:57] <Zoffix> nadim: I thought that was well-known :)

[21:57] <lucs> Another one!

[21:58] <Zoffix> samcv: ^ that failure might be related to recent rakudo changes? IO::String is failing tests; \r\n things are showing up

[21:58] <Zoffix> # expected: $("hello,", "world!")

[21:58] <Zoffix> #      got: $("hello,\r\nworld!\r\n",)

[21:58] *** zengargoyle joined
[21:58] <Zoffix> m: "foo\r\nmeow".lines.perl.say

[21:58] <camelia> rakudo-moar a91ad2: OUTPUT: «("foo", "meow").Seq␤»

[21:58] *** mcmillhj joined
[21:58] <Zoffix> hmm

[21:59] <nadim> Zoffix: not by me but I am  now ;)

[21:59] <samcv> how recent are these test failures?

[21:59] <samcv> i haven't touched that for a week+

[22:00] <Zoffix> samcv: lastest commits to rakudo are yours and the tests build latest

[22:00] <Zoffix> samcv: and it wasn't failing on earlier commits

[22:00] <samcv> ah

[22:00] <samcv> sorry i would have expected stuff i did a while ago to do \r\n stuff but not the more recent things

[22:01] *** stmuk left
[22:02] <nadim> Zoffix: be a good sport and tell me how to initialized the damned structures. Dumping of NativeCall data start to look nice, very I think, I'd like to test with those before I update the docs and release

[22:02] <Zoffix> nadim: I don't know

[22:02] <nadim> hahaha!

[22:02] <nadim> thank you in any case :)

[22:02] <nadim> I laugh because I am not use to read I don't know from you ;)

[22:02] <samcv> i didn't bump MoarVM except for a week and a few days ago

[22:03] *** zengargoyle left
[22:03] *** mcmillhj left
[22:03] <nadim> who is behind most of NativeCall?

[22:03] <samcv> looks like bumped on Aug4th

[22:04] <Zoffix> bisect: m: dd "hello,\r\nworld!\r\n".index: "\n"

[22:04] <Zoffix> stupid bot 

[22:04] <Zoffix> m: dd "hello,\r\nworld!\r\n".index: "\n"

[22:04] <camelia> rakudo-moar a91ad2: OUTPUT: «Nil␤»

[22:04] <Zoffix> star: dd "hello,\r\nworld!\r\n".index: "\n"

[22:04] <camelia> star-m 2017.07: OUTPUT: «Nil␤»

[22:04] <Zoffix> hm

[22:04] *** zengargoyle joined
[22:04] <samcv> checking the pod tests locally though

[22:05] <samcv> err doc tests

[22:05] <Zoffix> samcv: the failure's in IO::String installion tho

[22:05] <nadim> What's the nick of  Tobias?

[22:06] <Zoffix> FROGGS

[22:06] *** mcmillhj joined
[22:06] <samcv> yeah. i'm going to try installing doc locally

[22:07] <Zoffix> samcv: well, I'm just guessing it was one of the latest Rakudo commits that's problematic. I've not been able to golf anything weird

[22:08] *** stmuk joined
[22:09] <lizmat_> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/08/07/2017-32-weekly-101/

[22:09] <nadim> lizmat_++

[22:10] *** lizmat_ is now known as lizmat

[22:11] *** mcmillhj left
[22:11] *** zengargoyle left
[22:12] *** sufrostico left
[22:13] *** astj joined
[22:17] *** astj left
[22:21] *** robertle left
[22:22] *** mcmillhj joined
[22:23] *** Exodist left
[22:24] *** Exodist joined
[22:24] <Zoffix> lizmat++ good weekly

[22:26] *** mcmillhj left
[22:27] <Zoffix> m: sub foo (*@a) { @a.join: '|' }; say foo <h H>.any, 'amadryas' 

[22:27] <camelia> rakudo-moar a91ad2: OUTPUT: «any("h", "H")|amadryas␤»

[22:27] <nadim> NativeCall support in ddt, I think there is an error in struct containing struct but I need to have an instancieted one to know :), I will write a little blog entry with explanations, http://imgur.com/YGDW0MX

[22:27] *** andreoss joined
[22:28] *** rindolf left
[22:29] <nadim> I also wonder if I should display the size of structs in the dump

[22:32] *** espadrine left
[22:37] *** mcmillhj joined
[22:38] *** zengargoyle joined
[22:38] *** Rawriful joined
[22:40] *** wamba left
[22:42] *** mcmillhj left
[22:43] *** Ven`` left
[22:45] *** Kyo91 left
[22:45] *** zengargoyle left
[22:45] *** zengargoyle joined
[22:47] <ijneb> Can you declare 32-bit floating point Nums?

[22:47] <ijneb> Or just 64-bit

[22:47] *** setty1 left
[22:47] *** zoll joined
[22:48] <ijneb> Is it just num32?

[22:50] *** zengargoyle left
[22:52] *** Cabanossi left
[22:53] *** Cabanossi joined
[22:53] *** mcmillhj joined
[22:55] *** Kyo91 joined
[22:57] *** zengargoyle joined
[22:57] *** mcmillhj left
[23:01] <nadim> there's a num32 and a num64

[23:01] <nadim> not all the types are in the screenshot

[23:02] <nadim> there's around 20 types

[23:04] *** sufrostico joined
[23:04] *** gilbert joined
[23:08] *** baest left
[23:09] *** mcmillhj joined
[23:11] *** sufrostico left
[23:12] *** baest joined
[23:12] *** Kyo91 left
[23:13] *** mcmillhj left
[23:14] <ijneb> nadim: Are floating-point calculations faster with float32s?

[23:15] <geekosaur> faster but less accurate

[23:15] <ijneb> Makes sense, thanks

[23:16] <geekosaur> they're *really* low resolution

[23:16] *** cdg joined
[23:16] <ijneb> Why are all types capitalized except for num32 and the variants like that

[23:16] <ijneb> why not make it Num32?

[23:16] <geekosaur> there is an uppercase version

[23:16] <geekosaur> lowercase is native machine types, uppercase is boxed perl 6 types

[23:17] <ijneb> ohh

[23:17] <ijneb> So Num32 works as well?

[23:17] <ijneb> m: my Num32 $n;

[23:17] <camelia> rakudo-moar a91ad2: OUTPUT: «5===SORRY!5===␤Type 'Num32' is not declared. Did you mean 'num32'?␤at <tmp>:1␤------> 3my Num327⏏5 $n;␤Malformed my␤at <tmp>:1␤------> 3my7⏏5 Num32 $n;␤␤»

[23:17] *** BenGoldberg joined
[23:17] <geekosaur> well, there's supposed to be. iirc Num32 went missing

[23:17] <geekosaur> but there is Int vs. int, etc.

[23:18] <ijneb> ah

[23:18] <geekosaur> hm. guess all the sized ones are only available as machine, I thought there was also e.g. Int64

[23:18] *** gilbert left
[23:18] <geekosaur> but I suppose that makes sense insofar as the native ones care more about size, the Perl 6 ones should resize themselves as necessary

[23:18] <ijneb> I see

[23:19] *** cdg_ left
[23:20] <ijneb> How would I make a class convert given ints/other types to nums

[23:20] <ijneb> class Point { has num32 ($.x, $.y) }

[23:21] <ijneb> How would I make that usable even when I give ints `Point.new(x => 1, y => 1)`

[23:21] <ijneb> I understand changing the .new method somehow

[23:21] *** cdg left
[23:22] <raschipi> ijneb: You probably want to use TWEAK instead of writing a new new

[23:22] *** zengargoyle left
[23:22] *** zengargoyle joined
[23:24] <raschipi> Well, there's method BUILD that's called before the object has been initialized and TWEAK that's called after

[23:25] <raschipi> BUILD will receive the same parameters as new

[23:25] <ijneb> ah, I see

[23:25] <ijneb> I'll use TWEAK to convert them

[23:27] <ijneb> oh

[23:27] <ijneb> nevermind, BUILD is better suited, thanks lol

[23:29] *** Kyo91 joined
[23:36] *** Rawriful left
[23:40] <BenGoldberg> m: class Foo { has Num $.x; has Num $.y; method new(Num(Cool) $x, Num(Cool) $y) { self.bless: :$x, :$y } }; dd Foo.new( 3, pi );

[23:40] <camelia> rakudo-moar a91ad2: OUTPUT: «Foo.new(x => 3e0, y => 3.14159265358979e0)␤»

[23:41] <BenGoldberg> ijneb, ^

[23:42] *** cpage_ left
[23:42] <BenGoldberg> Sadly, type coercions only work in subroutine or method signatures; you can't put them on variables or class fields.

[23:43] *** astj joined
[23:43] <Geth> ¦ doc: e0c760dd65 | (Will "Coke" Coleda)++ | 13 files

[23:43] <Geth> ¦ doc: Reduce number of skipped tests

[23:43] <Geth> ¦ doc: 

[23:43] <Geth> ¦ doc: Where needed, add a preamble

[23:43] <Geth> ¦ doc: Where we have to skip, minimize the scope or declare the reason.

[23:43] <Geth> ¦ doc: 

[23:43] <Geth> ¦ doc: Fix a few samples that were obv. broken.

[23:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e0c760dd65

[23:44] <Geth> ¦ doc: c8dd129d35 | (Will "Coke" Coleda)++ | doc/Language/traps.pod6

[23:44] <Geth> ¦ doc: no trailing whitespace

[23:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c8dd129d35

[23:47] *** zengargoyle left
[23:47] *** astj left
[23:49] *** cpage_ joined
[23:49] * BenGoldberg just thought of something cool!  This might be a silly idea, but what if, for the ones which remained (partly) :skip-test, you had something like :expect-exception

[23:50] <[Coke]> I had pondered that recently; bikeshedding on what it would look like welcome.

[23:50] <[Coke]> we'd need to specify what the failure mode was, at least.

[23:51] *** Cabanossi left
[23:51] <BenGoldberg> Maybe :throws-like<X::SyntaxError>

[23:51] *** nadim left
[23:51] *** zengargoyle joined
[23:53] *** Cabanossi joined
[23:54] <[Coke]> I want to split out part of doc's CONTRIBUTING.md - I'd normally create a 'docs/' folder and put stuff in there; but with 'doc/' being the main folder, I suspect that would be confusing. Any other suggested names?

[23:55] *** cdg joined
[23:55] <BenGoldberg> subdock?

[23:59] *** cdg left
