[00:02] *** Cabanossi left
[00:04] *** Cabanossi joined
[00:05] *** yht joined
[00:13] <squashable6> 🍕 AlexDaniel++ opened issue “Check if all native things are listed”: https://github.com/perl6/doc/issues/1511

[00:13] <squashable6> 🍕 AlexDaniel++ labeled issue “Check if all native things are listed”: https://github.com/perl6/doc/issues/1511

[00:15] <Geth> ¦ doc: 17a660d387 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/nativecall.pod6

[00:15] <Geth> ¦ doc: Index all listed native types

[00:15] <Geth> ¦ doc: 

[00:15] <Geth> ¦ doc: Currently tables don't support proper formatting, so we have to index

[00:15] <Geth> ¦ doc: things separately. It's LTA but it does the job.

[00:15] <Geth> ¦ doc: 

[00:15] <Geth> ¦ doc: It seems that the table is not full. There's a separate issue

[00:15] <Geth> ¦ doc: for it: #1511.

[00:15] <Geth> ¦ doc: 

[00:15] <Geth> ¦ doc: Hopefully resolves issue #372.

[00:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/17a660d387

[00:18] <squashable6> 🍕 AlexDaniel++ opened issue “nativeInt (int) is the o…”: https://github.com/perl6/doc/issues/1512

[00:18] <squashable6> 🍕 AlexDaniel++ labeled issue “nativeInt (int) is the o…”: https://github.com/perl6/doc/issues/1512

[00:19] <squashable6> 🍕 AlexDaniel++ opened issue “TBDs on nativecall page”: https://github.com/perl6/doc/issues/1513

[00:19] <squashable6> 🍕 AlexDaniel++ labeled issue “TBDs on nativecall page”: https://github.com/perl6/doc/issues/1513

[00:23] *** grondilu left
[00:23] <squashable6> 🍕 AlexDaniel++ wrote a comment on “｢is default｣ for subs is not searchable”: https://github.com/perl6/doc/issues/1040#issuecomment-326776572

[00:23] <squashable6> 🍕 AlexDaniel++ closed issue “｢is default｣ for subs is not searchable”: https://github.com/perl6/doc/issues/1040

[00:25] <squashable6> 🍕 AlexDaniel++ opened issue “｢is default｣ is indexed twice”: https://github.com/perl6/doc/issues/1514

[00:25] <squashable6> 🍕 AlexDaniel++ labeled issue “｢is default｣ is indexed twice”: https://github.com/perl6/doc/issues/1514

[00:28] <squashable6> 🍕 AlexDaniel++ edited issue “! meta operator not documented”: https://github.com/perl6/doc/issues/1227

[00:29] <squashable6> 🍕 AlexDaniel++ wrote a comment on “! meta operator not documented”: https://github.com/perl6/doc/issues/1227#issuecomment-326776742

[00:30] <squashable6> 🍕 AlexDaniel++ opened issue “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515

[00:30] <squashable6> 🍕 AlexDaniel++ labeled issue “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515

[00:32] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Searching for `.:` has two 404 pages”: https://github.com/perl6/doc/issues/1346#issuecomment-326776871

[00:33] *** mr_ron left
[00:35] <squashable6> 🍕 AlexDaniel++ wrote a comment on “env vars described on ht…”: https://github.com/perl6/doc/issues/949#issuecomment-326777004

[00:35] <squashable6> 🍕 AlexDaniel++ labeled issue “env vars described on ht…”: https://github.com/perl6/doc/issues/949

[00:35] <squashable6> 🍕 AlexDaniel++ edited issue “Move programs/00-running to rakudo wiki”: https://github.com/perl6/doc/issues/949

[00:37] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Search Index anchors point a line too low”: https://github.com/perl6/doc/issues/1303#issuecomment-326777121

[00:38] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Search for &$ROUTINE has bad link”: https://github.com/perl6/doc/issues/1358#issuecomment-326777174

[00:45] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Standardize search categories”: https://github.com/perl6/doc/issues/1410#issuecomment-326777360

[00:50] <squashable6> 🍕 zoffixznet++ wrote a comment on “Search Index anchors point a line too low”: https://github.com/perl6/doc/issues/1303#issuecomment-326777514

[00:52] <Geth> ¦ doc: 2054836198 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/nativecall.pod6

[00:52] <Geth> ¦ doc: Oops.

[00:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2054836198

[01:02] *** Cabanossi left
[01:04] *** Cabanossi joined
[01:07] <Geth> ¦ doc: 8becf58c04 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/unicode_texas.pod6

[01:07] <Geth> ¦ doc: Fix table on unicode_texas page

[01:07] <Geth> ¦ doc: 

[01:07] <Geth> ¦ doc: Possibly relevant issue: #1510

[01:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8becf58c04

[01:07] <Geth> ¦ doc: 276f42f720 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/unicode_texas.pod6

[01:07] <Geth> ¦ doc: List all possible variations of »=»

[01:07] <Geth> ¦ doc: 

[01:07] <Geth> ¦ doc: Because why not

[01:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/276f42f720

[01:07] <Geth> ¦ doc: da26660ff5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/unicode_texas.pod6

[01:07] <Geth> ¦ doc: Index everything on unicode_texas page

[01:07] <Geth> ¦ doc: 

[01:07] <Geth> ¦ doc: Resolves issue #1373.

[01:07] <Geth> ¦ doc: 

[01:07] <Geth> ¦ doc: This means that from now on some things may appear more than once in

[01:07] <Geth> ¦ doc: the search. We'll see how annoying it is. If it is, we can start

[01:07] <Geth> ¦ doc: removing symbols that are explained elsewhere (but note that a lot of

[01:07] <Geth> ¦ doc: things are only mentioned on unicode_texas page, so don't revert the

[01:07] <Geth> ¦ doc: whole commit).

[01:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/da26660ff5

[01:08] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Should be able to search for ¹ et al.”: https://github.com/perl6/doc/issues/1373#issuecomment-326778035

[01:08] <squashable6> 🍕 AlexDaniel++ closed issue “Should be able to search for ¹ et al.”: https://github.com/perl6/doc/issues/1373

[01:09] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Should be able to search for ¹ et al.”: https://github.com/perl6/doc/issues/1373#issuecomment-326778068

[01:12] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Rules for escaping chara…”: https://github.com/perl6/doc/issues/1146#issuecomment-326778135

[01:14] <AlexDaniel> m: say utf8

[01:14] <camelia> rakudo-moar 8019c1: OUTPUT: «(utf8)␤»

[01:14] <squashable6> 🍕 AlexDaniel++ opened issue “Document utf8 type”: https://github.com/perl6/doc/issues/1516

[01:14] <squashable6> 🍕 AlexDaniel++ labeled issue “Document utf8 type”: https://github.com/perl6/doc/issues/1516

[01:19] <squashable6> 🍕 AlexDaniel++ opened issue “Document unicode normalization”: https://github.com/perl6/doc/issues/1517

[01:19] <squashable6> 🍕 AlexDaniel++ labeled issue “Document unicode normalization”: https://github.com/perl6/doc/issues/1517

[01:20] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Create language/unicode page”: https://github.com/perl6/doc/issues/1142#issuecomment-326778368

[01:20] <squashable6> 🍕 AlexDaniel++ closed issue “Create language/unicode page”: https://github.com/perl6/doc/issues/1142

[01:21] <AlexDaniel> I hope doing stuff like this is going to help in a long run ↑

[01:21] <AlexDaniel> I'm closing the old ticket and creating smaller, more manageable tickets

[01:21] <AlexDaniel> Also, tickets without 10+ comments look less scary for potential contributors

[01:25] *** ruoso__ left
[01:29] *** margeas left
[01:33] <raschipi> m: Any.exit(0)

[01:33] <camelia> rakudo-moar 8019c1: OUTPUT: «No such method 'exit' for invocant of type 'Any'. Did you mean 'emit'?␤  in block <unit> at <tmp> line 1␤␤»

[01:34] <raschipi> Why does the doc says that exit is a method of Any?

[01:34] *** yht left
[01:34] <masak> raschipi: which doc?

[01:35] <masak> https://docs.perl6.org/type/Any#sub_exit ?

[01:35] <raschipi> I see now that it says it's a sub, but why is it in there?

[01:35] <masak> that was my reaction too -- why there? :)

[01:36] <masak> is it some automatic tool's conclusion that it belongs somehow to Any?

[01:36] <masak> because it doesn't, particularly

[01:37] <AlexDaniel> create a ticket for it

[01:37] <masak> I could sorta-kinda rationalize &item being defined there, but not &exit

[01:37] <AlexDaniel> it's LTA indeed

[01:39] <squashable6> 🍕 rafaelschipiura++ opened issue “Subs in type pages”: https://github.com/perl6/doc/issues/1518

[01:41] <squashable6> 🍕 rafaelschipiura++ edited issue “Subs in type pages”: https://github.com/perl6/doc/issues/1518

[01:42] *** mr_ron joined
[01:43] <squashable6> 🍕 ronaldxs++ closed issue “Document use of method i…”: https://github.com/perl6/doc/issues/1121

[01:44] <squashable6> 🍕 rafaelschipiura++ opened issue “Confusing search”: https://github.com/perl6/doc/issues/1519

[01:45] *** ilbot3 left
[01:45] <squashable6> 🍕 rafaelschipiura++ edited issue “Confusing search”: https://github.com/perl6/doc/issues/1519

[01:48] *** Cabanossi left
[01:49] *** Cabanossi joined
[01:50] *** yht joined
[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:53] <squashable6> 🍕 AlexDaniel++ opened issue “Prefer non-texas syntax”: https://github.com/perl6/doc/issues/1520

[01:53] <squashable6> 🍕 AlexDaniel++ labeled issue “Prefer non-texas syntax”: https://github.com/perl6/doc/issues/1520

[01:54] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Provide (automatic) Texa…”: https://github.com/perl6/doc/issues/526#issuecomment-326779392

[01:54] <squashable6> 🍕 AlexDaniel++ closed issue “Provide (automatic) Texa…”: https://github.com/perl6/doc/issues/526

[01:55] <AlexDaniel> woah, the issue was just created and there's a downvote already. Some people can read fast

[01:57] <raschipi> If you hover over the 👎, you can see that it was me that put that there.

[01:57] <raschipi> And I had a whole 2 minutes to read it since I was notified of it here.

[01:59] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Prefer non-texas syntax”: https://github.com/perl6/doc/issues/1520#issuecomment-326779531

[02:00] <raschipi> AlexDaniel: I agree we should unify, but I think it should go into the other direction.

[02:00] <AlexDaniel> raschipi: sorry, I'm grumpy because of all reddit comments :)

[02:01] <raschipi> Like you said, it's easier to go from texas to normal form, we just need to automate that.

[02:02] <AlexDaniel> not in a destructive way, no

[02:02] <raschipi> Sorry, you said to prefer "non-texas" and I read that as "texas"

[02:02] <raschipi> my bad

[02:02] <raschipi> I changed the reaction in github

[02:02] <AlexDaniel> raschipi: :O

[02:03] <AlexDaniel> raschipi: ok so let's make it clear, we both want ∞ instead of Inf ?

[02:03] <raschipi> yep, it's that I can't read apparently

[02:03] <AlexDaniel> o/

[02:04] <raschipi> I'll go get some coffee

[02:04] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Prefer non-texas syntax”: https://github.com/perl6/doc/issues/1520#issuecomment-326779698

[02:06] <AlexDaniel> raschipi: but there's some truth about reading too fast :)

[02:08] <squashable6> 🍕 AlexDaniel++ edited issue “Prefer non-texas (non-as…”: https://github.com/perl6/doc/issues/1520

[02:10] <squashable6> 🍕 AlexDaniel++ labeled issue “Prefer non-texas (non-as…”: https://github.com/perl6/doc/issues/1520

[02:11] <raschipi> AlexDaniel: It would be nice if the automatic style checkers could do the conversion automatically, because many will want to enforce one style or the other. Then we could easily ensure that the docs are uniform in style.

[02:12] *** skids joined
[02:12] <raschipi> People will want to change from one to the other routinely when dealing with a codebase that's not in their usual style too.

[02:12] <squashable6> 🍕 AlexDaniel++ edited issue “Prefer non-texas (non-as…”: https://github.com/perl6/doc/issues/1520

[02:13] <AlexDaniel> raschipi: https://github.com/vim-perl/vim-perl6/issues/8 https://github.com/perl6/atom-language-perl6/issues/72 https://github.com/perl6/perl6-mode/issues/14

[02:13] <AlexDaniel> raschipi: not exactly what you just said, but these are relevant :)

[02:15] <raschipi> I meant that this should be a feature in something like https://github.com/drforr/perl6-Perl6-Parser. This would make implementing it on editors and git hooks feasible.

[02:16] <squashable6> 🍕 AlexDaniel++ wrote a comment on “No whitespace around infix ops: 1<2 (trap)”: https://github.com/perl6/doc/issues/1481#issuecomment-326779987

[02:16] <squashable6> 🍕 AlexDaniel++ closed issue “No whitespace around infix ops: 1<2 (trap)”: https://github.com/perl6/doc/issues/1481

[02:17] *** Cabanossi left
[02:19] *** Cabanossi joined
[02:22] <AlexDaniel> raschipi: https://github.com/drforr/perl6-Perl6-Tidy/issues/3

[02:23] *** noganex joined
[02:26] *** noganex_ left
[02:27] *** mr_ron left
[02:27] <Geth> ¦ doc: f402b80dc4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/nativecall.pod6

[02:27] <Geth> ¦ doc: Don't index “sub” erroneously

[02:27] <Geth> ¦ doc: 

[02:27] <Geth> ¦ doc: Should resolve #1519

[02:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f402b80dc4

[02:27] <squashable6> 🍕 AlexDaniel++ closed issue “Confusing search”: https://github.com/perl6/doc/issues/1519

[02:28] <squashable6> 🍕 AlexDaniel++ reopened issue “Confusing search”: https://github.com/perl6/doc/issues/1519

[02:28] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Confusing search”: https://github.com/perl6/doc/issues/1519#issuecomment-326780345

[02:28] <squashable6> 🍕 AlexDaniel++ labeled issue “Confusing search”: https://github.com/perl6/doc/issues/1519

[02:30] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Subs in type pages”: https://github.com/perl6/doc/issues/1518#issuecomment-326780423

[02:31] *** TreyHarris left
[02:31] *** TreyHarris joined
[02:32] <AlexDaniel> oh wow, issues by briandfoy are always very heavy

[02:34] <[Coke]> yuuuup

[02:34] <raschipi> He tries to go very deep into the language to avoid Zoffix going after him for not knowing enough.

[02:43] *** Kyo91_ joined
[02:47] *** Cabanossi left
[02:49] *** Cabanossi joined
[02:50] *** llfourn joined
[02:53] *** TreyHarris left
[02:53] *** TreyHarris joined
[02:59] *** dogbert2 left
[03:09] *** mr_ron joined
[03:16] <AlexDaniel> raschipi: heh, well… but I just don't find these tickets helpful. Without TL;DR it's hard for me to decide if it's something I want to work on or not

[03:16] <AlexDaniel> raschipi: usually he has a good point, but how to resolve the issue is a mystery

[03:17] <AlexDaniel> and you have to read a lot of prose to understand some basic point :-/

[03:17] *** Kyo91_ left
[03:17] *** ChoHag left
[03:18] <AlexDaniel> And if you read it, it's usually 5 issues mixed into one ticket

[03:21] <squashable6> 🍕 AlexDaniel++ edited issue “Nil vs Any confusion (trap)”: https://github.com/perl6/doc/issues/1134

[03:23] *** pilne left
[03:24] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Nil vs Any confusion (trap)”: https://github.com/perl6/doc/issues/1134#issuecomment-326781972

[03:28] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Document how try works, and what resume is doing”: https://github.com/perl6/doc/issues/1274#issuecomment-326782100

[03:29] <raschipi> m: my $a := Nil; say $a

[03:29] <camelia> rakudo-moar 8019c1: OUTPUT: «Nil␤»

[03:30] <squashable6> 🍕 AlexDaniel++ wrote a comment on “The control exception na…”: https://github.com/perl6/doc/issues/1268#issuecomment-326782166

[03:32] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Do spawned processes get…”: https://github.com/perl6/doc/issues/1226#issuecomment-326782197

[03:33] <squashable6> 🍕 AlexDaniel++ labeled issue “doc sub sink/sink context”: https://github.com/perl6/doc/issues/732

[03:34] <squashable6> 🍕 AlexDaniel++ edited issue “Document contexts”: https://github.com/perl6/doc/issues/1225

[03:35] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Confusing search”: https://github.com/perl6/doc/issues/1519#issuecomment-326782326

[03:35] <squashable6> 🍕 rafaelschipiura++ closed issue “Confusing search”: https://github.com/perl6/doc/issues/1519

[03:36] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Document contexts”: https://github.com/perl6/doc/issues/1225#issuecomment-326782329

[03:39] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Document contexts”: https://github.com/perl6/doc/issues/1225#issuecomment-326782432

[03:43] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Document contexts”: https://github.com/perl6/doc/issues/1225#issuecomment-326782534

[03:47] *** Cabanossi left
[03:48] <squashable6> 🍕 AlexDaniel++ edited issue “Docs on “my” should mention dynamic variables”: https://github.com/perl6/doc/issues/1082

[03:48] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Docs on “my” should mention dynamic variables”: https://github.com/perl6/doc/issues/1082#issuecomment-326782710

[03:49] *** Cabanossi joined
[03:52] *** piojo2 joined
[03:53] <squashable6> 🍕 AlexDaniel++ opened issue “Examples for sprintf use OUTPUT instead of RESULT”: https://github.com/perl6/doc/issues/1521

[03:53] <squashable6> 🍕 AlexDaniel++ labeled issue “Examples for sprintf use OUTPUT instead of RESULT”: https://github.com/perl6/doc/issues/1521

[03:54] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Document contexts”: https://github.com/perl6/doc/issues/1225#issuecomment-326782890

[03:55] <raschipi> AlexDaniel: Can you asign #1082 to me?

[03:58] <AlexDaniel> raschipi: you should be able to do it yourself now

[03:59] <AlexDaniel> .tell moritz invite rafaelschipiura to perl6/teams/perl6

[03:59] <yoleaux> AlexDaniel: I'll pass your message to moritz.

[03:59] <AlexDaniel> .tell moritz plz

[03:59] <yoleaux> AlexDaniel: I'll pass your message to moritz.

[03:59] <AlexDaniel> raschipi: does it work?

[04:00] <AlexDaniel> (I added you to perl6/doc repo collaborators)

[04:00] <raschipi> If there is an option to asign myself, I'm not seeing it. Where is the option located?

[04:00] <AlexDaniel> raschipi: check your notifications, there's an invite

[04:01] <AlexDaniel> or maybe this link: https://github.com/perl6/doc/invitations

[04:02] *** Cabanossi left
[04:03] *** Cabanossi joined
[04:03] <AlexDaniel> raschipi: ok, what about now? Still no “assign yourself” button?

[04:03] <raschipi> I see now that I had just "e-mail" and not "web" activated in my github preferences, that's why I didn't saw it.

[04:04] <squashable6> 🍕 rafaelschipiura++ self-assigned issue “Docs on “my” should mention dynamic variables”: https://github.com/perl6/doc/issues/1082

[04:04] <AlexDaniel> \o/

[04:04] <raschipi> Now there is, thanks AlexDaniel.

[04:04] *** unnecessarymulti joined
[04:09] <raschipi> WHere should I wrap doc lines?

[04:12] <AlexDaniel> raschipi: good question. I don't think there's a hard limit anywhere. I use 72, some people seem to use 80

[04:12] <AlexDaniel> sometimes I see really long lines

[04:14] *** yht left
[04:17] *** yht joined
[04:26] *** u-ou- joined
[04:29] *** APic left
[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: 56008f7a46 | rafaelschipiura++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: “my” docs mentioning dynamic variables

[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: 

[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: Explains the relationship between lexical/package and normal/dynamic scope a bit more.

[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: 

[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: Asked in  #1082

[04:31] <Geth> ¦ doc/rafaelschipiura-patch-1: review: https://github.com/perl6/doc/commit/56008f7a46

[04:31] <Geth> ¦ doc: rafaelschipiura++ created pull request #1522: “my” docs mentioning dynamic variables

[04:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1522

[04:31] <squashable6> 🍕 rafaelschipiura++ opened pull request ““my” docs mentioning dynamic variables”: https://github.com/perl6/doc/pull/1522

[04:32] *** piojo2 left
[04:33] <Geth> ¦ doc: 13206c4195 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Routine.pod6

[04:33] <Geth> ¦ doc: Add another ｢is pure｣ example

[04:33] <Geth> ¦ doc: 

[04:33] <Geth> ¦ doc: Hopefully resolves #1231.

[04:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/13206c4195

[04:33] <squashable6> 🍕 AlexDaniel++ closed issue “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231

[04:33] <squashable6> 🍕 AlexDaniel++ reopened issue “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231

[04:33] <squashable6> 🍕 AlexDaniel++ assigned issue “Explain more on benefits…” to zoffixznet: https://github.com/perl6/doc/issues/1231

[04:33] <squashable6> 🍕 AlexDaniel++ assigned issue “Explain more on benefits…” to moritz: https://github.com/perl6/doc/issues/1231

[04:34] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326783976

[04:35] <Geth> ¦ doc/rafaelschipiura-patch-1: ca7949f763 | rafaelschipiura++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[04:35] <Geth> ¦ doc/rafaelschipiura-patch-1: Update variables.pod6

[04:35] <Geth> ¦ doc/rafaelschipiura-patch-1: review: https://github.com/perl6/doc/commit/ca7949f763

[04:35] <squashable6> 🍕 rafaelschipiura++ synchronize pull request ““my” docs mentioning dynamic variables”: https://github.com/perl6/doc/pull/1522

[04:38] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Native Types Not Documented”: https://github.com/perl6/doc/issues/372#issuecomment-326784082

[04:38] *** APic joined
[04:38] <squashable6> 🍕 AlexDaniel++ assigned issue “Native Types Not Documented” to zoffixznet: https://github.com/perl6/doc/issues/372

[04:38] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326784089

[04:39] *** mr-fooba_ left
[04:40] *** mr-foobar joined
[04:41] <AlexDaniel> hmm I think there's a better example

[04:48] <squashable6> 🍕 rafaelschipiura++ self-assigned issue “Examples for sprintf use OUTPUT instead of RESULT”: https://github.com/perl6/doc/issues/1521

[04:48] *** yht left
[04:48] <Geth> ¦ doc: a943c8628e | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Routine.pod6

[04:48] <Geth> ¦ doc: Use for loop to show the benefits of ｢is pure｣

[04:48] <Geth> ¦ doc: 

[04:48] <Geth> ¦ doc: Another addition for issue #1231.

[04:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a943c8628e

[04:48] *** u-ou- left
[04:48] *** mr_ron left
[04:49] *** BenGoldberg joined
[04:50] *** zakame joined
[04:50] <zakame> hello o/

[04:53] <AlexDaniel> buggable: pizza zakame

[04:53] <buggable> zakame, enjoy this slice of Hawaiian pizza, my friend! Yummy 🍕

[04:53] <AlexDaniel> squashable6: status

[04:53] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in ≈7 hours

[04:53] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/3dba45e5378a83681e93f20201104170

[04:53] <AlexDaniel> I think I won't wake up in less than 7 hours, so this concludes my squashathoning :) Take care everyone!

[04:55] <AlexDaniel> issue_comment: ├ created: 127

[04:55] <AlexDaniel> heh

[04:56] <zakame> thanks AlexDaniel 

[04:56] <zakame> buggable: pizza AlexDaniel 

[04:56] <buggable> AlexDaniel, enjoy this slice of Mexican Green Wave pizza, my friend! Yummy 🍕

[04:57] <Geth> ¦ doc: bba72e288a | rafaelschipiura++ (committed using GitHub Web editor) | doc/Type/Str.pod6

[04:57] <Geth> ¦ doc: Examples for sprintf use RESULT 

[04:57] <Geth> ¦ doc: 

[04:57] <Geth> ¦ doc: Closes #1521

[04:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bba72e288a

[04:57] <squashable6> 🍕 rafaelschipiura++ closed issue “Examples for sprintf use OUTPUT instead of RESULT”: https://github.com/perl6/doc/issues/1521

[04:58] <raschipi> Sleep tight, AlexDaniel.

[04:59] *** u-ou- joined
[05:00] *** unnecessarymulti left
[05:02] *** yht joined
[05:02] *** snarkyboojum joined
[05:02] *** snarkyboojum left
[05:03] *** snarkyboojum joined
[05:03] *** snarkyboojum left
[05:04] *** u-ou- left
[05:05] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Modified quantifier trap…”: https://github.com/perl6/doc/issues/1163#issuecomment-326784731

[05:06] *** snarkyboojum joined
[05:07] <squashable6> 🍕 AlexDaniel++ opened issue “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523

[05:07] <squashable6> 🍕 AlexDaniel++ labeled issue “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523

[05:07] <squashable6> 🍕 AlexDaniel++ unlabeled issue “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523

[05:07] <squashable6> 🍕 AlexDaniel++ labeled issue “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523

[05:08] *** travis-ci joined
[05:08] <travis-ci> Doc build passed. rafaelschipiura 'Update variables.pod6'

[05:08] <travis-ci> https://travis-ci.org/perl6/doc/builds/271313211 https://github.com/perl6/doc/compare/56008f7a4662...ca7949f763c3

[05:08] *** travis-ci left
[05:08] *** snarkyboojum left
[05:09] *** mr-foobar left
[05:10] *** lancew joined
[05:10] *** mr-foobar joined
[05:10] *** snarkyboojum joined
[05:10] *** snarkyboojum left
[05:11] <squashable6> 🍕 AlexDaniel++ wrote a comment on “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523#issuecomment-326784873

[05:12] *** u-ou- joined
[05:12] *** snarkyboojum joined
[05:12] *** snarkyboojum left
[05:12] <squashable6> 🍕 rafaelschipiura++ edited issue “Modified quantifier should be better explained.”: https://github.com/perl6/doc/issues/1163

[05:13] <squashable6> 🍕 rafaelschipiura++ reopened issue “Modified quantifier should be better explained.”: https://github.com/perl6/doc/issues/1163

[05:13] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Modified quantifier should be better explained.”: https://github.com/perl6/doc/issues/1163#issuecomment-326784913

[05:14] *** snarkyboojum joined
[05:14] *** snarkyboojum left
[05:14] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Modified quantifier should be better explained.”: https://github.com/perl6/doc/issues/1163#issuecomment-326784945

[05:14] *** travis-ci joined
[05:14] <travis-ci> Doc build passed. rafaelschipiura '“my” docs mentioning dynamic variables

[05:14] <travis-ci> https://travis-ci.org/perl6/doc/builds/271312837 https://github.com/perl6/doc/commit/56008f7a4662

[05:14] *** travis-ci left
[05:14] *** snarkyboojum joined
[05:14] *** snarkyboojum left
[05:16] *** u-ou- left
[05:17] *** snarkyboojum joined
[05:17] *** snarkyboojum left
[05:19] *** snarkyboojum joined
[05:22] *** snarkyboojum left
[05:23] *** snarkyboojum joined
[05:24] *** snarkyboojum left
[05:25] *** u-ou- joined
[05:25] *** u-ou- left
[05:25] *** snarkyboojum joined
[05:25] *** snarkyboojum left
[05:26] <squashable6> 🍕 rafaelschipiura++ self-assigned issue “Modified quantifier should be better explained.”: https://github.com/perl6/doc/issues/1163

[05:26] *** snarkyboojum joined
[05:27] *** snarkyboojum left
[05:28] *** khw left
[05:28] *** snarkyboojum joined
[05:28] *** snarkyboojum left
[05:29] *** snarkyboojum joined
[05:29] *** snarkyboojum left
[05:29] *** yht left
[05:29] <squashable6> 🍕 AlexDaniel++ wrote a comment on “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523#issuecomment-326785400

[05:29] <AlexDaniel> omg now heading to bed for realz

[05:30] <zakame> good night AlexDaniel 

[05:31] *** snarkyboojum joined
[05:31] *** snarkyboojum left
[05:32] *** BenGoldberg left
[05:32] *** snarkyboojum joined
[05:32] *** snarkyboojum left
[05:33] *** snarkyboojum joined
[05:33] *** snarkyboojum left
[05:33] *** lancew left
[05:34] *** snarkyboojum joined
[05:35] *** snarkyboojum left
[05:36] *** snarkyboojum joined
[05:36] *** BenGoldberg joined
[05:36] <raschipi> huggable: hug snarkyboojum 

[05:36] * huggable hugs snarkyboojum 

[05:37] *** snarkyboojum left
[05:38] *** lancew joined
[05:39] *** darutoko joined
[05:39] <lancew> So looking at the wiki and issue tracker looks like the Bug Squashathon took issue count from 280 -> 261. :-)

[05:39] *** mr-foobar left
[05:40] <lancew> I didn't really manage to contribute, but next month I hope to do more

[05:40] <raschipi> lancew: The Squashathon also included _opening_ issues.

[05:43] *** mr-foobar joined
[05:43] <Geth> ¦ doc: f26209ecd4 | rafaelschipiura++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[05:43] <Geth> ¦ doc: Modified quantifier better explained.

[05:43] <Geth> ¦ doc: 

[05:43] <Geth> ¦ doc: Closes #1163

[05:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f26209ecd4

[05:43] <squashable6> 🍕 rafaelschipiura++ closed issue “Modified quantifier should be better explained.”: https://github.com/perl6/doc/issues/1163

[05:44] *** snarkyboojum joined
[05:45] *** snarkyboojum left
[05:46] *** snarkyboojum joined
[05:46] *** snarkyboojum left
[05:46] *** Cabanossi left
[05:47] *** snarkyboojum joined
[05:47] *** snarkyboojum left
[05:48] *** Cabanossi joined
[05:48] *** snarkyboojum joined
[05:48] *** snarkyboojum left
[05:49] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “What is a trap and what isn't?”: https://github.com/perl6/doc/issues/1523#issuecomment-326785950

[05:50] *** snarkyboojum joined
[05:50] *** snarkyboojum left
[05:51] *** snarkyboojum joined
[05:52] *** snarkyboojum left
[05:53] *** snarkyboojum joined
[05:53] *** snarkyboojum left
[05:54] <AlexDaniel> squashable6: status

[05:54] <squashable6> AlexDaniel, 🍕 SQUASHathon is in progress! The end of the event in ≈6 hours

[05:54] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/2572c714bc8aa099a7f7cbeaffeae65b

[05:54] <AlexDaniel> lancew: ↑

[05:54] <AlexDaniel> lancew: 46 closed, 21 opened

[05:54] *** snarkyboojum joined
[05:54] <AlexDaniel> lancew: also, you still have 6 hours left :)

[05:55] *** snarkyboojum left
[05:55] <AlexDaniel> actually, 26 opened if you count reopened tickets

[05:58] <lancew> AlexDaniel, excellent

[06:04] *** piojo2 joined
[06:07] *** BenGoldberg left
[06:09] *** itaipu left
[06:10] *** skids left
[06:10] *** Kyo91_ joined
[06:11] *** mr-foobar left
[06:14] <squashable6> 🍕 lancew++ wrote a comment on “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515#issuecomment-326786670

[06:15] *** Kyo91_ left
[06:15] *** mr-foobar joined
[06:17] *** Cabanossi left
[06:18] *** Cabanossi joined
[06:18] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515#issuecomment-326786838

[06:20] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515#issuecomment-326786897

[06:25] *** unnecessarymulti joined
[06:26] *** zakame left
[06:27] *** snarkyboojum joined
[06:27] *** snarkyboojum left
[06:29] *** Actualeyes joined
[06:32] *** mr_ron joined
[06:32] *** zakame joined
[06:45] <Geth> ¦ doc: lancew++ created pull request #1524: Add explanation that != is alias for !==

[06:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1524

[06:45] <squashable6> 🍕 lancew++ opened pull request “Add explanation that != is alias for !==”: https://github.com/perl6/doc/pull/1524

[06:47] <lancew> Just spotted the additional comment on the "Docs for !=" issue. AlexDaniel I am not sure how I would add the metaop comment

[06:47] <Geth> ¦ doc: 96eb7ca314 | (Lance Wicks)++ | doc/Language/operators.pod6

[06:47] <Geth> ¦ doc: Add explanation that != is alias for !==

[06:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/96eb7ca314

[06:47] <Geth> ¦ doc: 8c0957a2ba | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[06:47] <Geth> ¦ doc: Merge pull request #1524 from lancew/master

[06:47] <Geth> ¦ doc: 

[06:47] <Geth> ¦ doc: Add explanation that != is alias for !==

[06:47] <squashable6> 🍕 AlexDaniel++ merged pull request “Add explanation that != is alias for !==”: https://github.com/perl6/doc/pull/1524

[06:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8c0957a2ba

[06:47] <lancew> As in how to phrase it

[06:48] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515#issuecomment-326787703

[06:48] <squashable6> 🍕 AlexDaniel++ closed issue “Docs for != operator sho…”: https://github.com/perl6/doc/issues/1515

[06:49] <squashable6> 🍕 AlexDaniel++ wrote a comment on “! meta operator not documented”: https://github.com/perl6/doc/issues/1227#issuecomment-326787747

[06:52] <AlexDaniel> lancew: on it

[06:53] <AlexDaniel> lancew: give me a minute :)

[06:57] *** wamba joined
[06:58] <Geth> ¦ doc: 33dcac7f2b | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/operators.pod6

[06:58] <Geth> ¦ doc: Make ! and !eq searchable

[06:58] <Geth> ¦ doc: 

[06:58] <Geth> ¦ doc: Also move !== reference. Resolves #1227 and makes a slight adjustment

[06:58] <Geth> ¦ doc: to the already closed #1515.

[06:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/33dcac7f2b

[06:58] <squashable6> 🍕 AlexDaniel++ closed issue “! meta operator not documented”: https://github.com/perl6/doc/issues/1227

[06:58] <AlexDaniel> lancew: what do you think about this? ↑

[06:59] <AlexDaniel> oops

[06:59] <Geth> ¦ doc: 0b838e9418 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/operators.pod6

[06:59] <Geth> ¦ doc: Oops.

[06:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0b838e9418

[07:07] <squashable6> 🍕 lancew++ wrote a comment on commit 0b838e94183f: https://github.com/perl6/doc/commit/0b838e94183f9c631791803415f4420d6db5dc5c#commitcomment-24052731

[07:09] <raschipi> People thinking they can deprecate != will be overruled by TimToady. "It's prettier" is a perfectly valid and strong motivation in Perl6.

[07:10] *** mr-foobar left
[07:10] *** andrzejku joined
[07:10] <AlexDaniel> raschipi: I wouldn't be so sure about this. ≠ is prettier, != not much

[07:11] <raschipi> He went out of his way to add not only !=, but ne too.

[07:11] <lancew> ≠ is prettier, harder to type tho. :-)

[07:12] *** mr_ron left
[07:12] <AlexDaniel> lancew: either one key press more or as hard as typing != if we resolve these issues: https://github.com/vim-perl/vim-perl6/issues/8 https://github.com/perl6/atom-language-perl6/issues/72 https://github.com/perl6/perl6-mode/issues/14

[07:12] *** unnecessarymulti left
[07:12] <raschipi> Roast has plenty of tests to make sure they exist.

[07:14] <AlexDaniel> hm, turns out I have ≠ on my layout

[07:14] <AlexDaniel> so ≠ is actually easier to type than != :S

[07:14] *** Kyo91_ joined
[07:15] *** mr-foobar joined
[07:15] <AlexDaniel> sure, it's my custom layout, but I haven't used ≠ directly since I created the layout… which was a few years ago

[07:16] *** piojo2 left
[07:18] <lancew> AlexDaniel, very nice! I have not seen vim-perl6 before. Nice!

[07:19] *** Kyo91_ left
[07:20] *** travis-ci joined
[07:20] <travis-ci> Doc build errored. Aleks-Daniel Jakimenko-Aleksejev 'Make ! and !eq searchable

[07:20] <travis-ci> https://travis-ci.org/perl6/doc/builds/271327086 https://github.com/perl6/doc/compare/8c0957a2ba03...33dcac7f2bc6

[07:20] *** travis-ci left
[07:20] <buggable> [travis build above] ✓ All failures are due to timeout (1), missing build log (0), GitHub connectivity (0), or failed make test (0).

[07:21] *** Kyo91_ joined
[07:22] *** zakame left
[07:25] *** Kyo91_ left
[07:27] <Geth> ¦ doc: fccff680e0 | (Moritz Lenz)++ | doc/Type/Routine.pod6

[07:27] <Geth> ¦ doc: is pure: Mention sink context warnings

[07:27] <Geth> ¦ doc: 

[07:27] <Geth> ¦ doc: Closes #1231.

[07:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fccff680e0

[07:27] <squashable6> 🍕 moritz++ closed issue “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231

[07:31] *** piojo2 joined
[07:33] <Geth> ¦ doc: 239f43cdab | (Moritz Lenz)++ | doc/Type/Routine.pod6

[07:33] <Geth> ¦ doc: is pure: more background

[07:33] <Geth> ¦ doc: 

[07:33] <Geth> ¦ doc: explain why the compiler cannot reliably infer purity on its own.

[07:33] <Geth> ¦ doc: For issue #1231.

[07:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/239f43cdab

[07:33] <AlexDaniel> moritz: “even if they through exceptions”? Something is not right

[07:36] <Geth> ¦ doc: 825feea762 | (Moritz Lenz)++ | doc/Type/Routine.pod6

[07:36] <Geth> ¦ doc: Fix a word, AlexDaniel++

[07:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/825feea762

[07:39] *** mr-foobar left
[07:43] *** piojo2 left
[07:43] *** mr-foobar joined
[07:47] *** nadim joined
[07:51] *** yht joined
[07:54] <moritz> squashable6: status

[07:54] <squashable6> moritz, 🍕 SQUASHathon is in progress! The end of the event in ≈4 hours

[07:54] <yoleaux> 03:59Z <AlexDaniel> moritz: invite rafaelschipiura to perl6/teams/perl6

[07:54] <yoleaux> 03:59Z <AlexDaniel> moritz: plz

[07:54] <squashable6> moritz, Log and stats: https://gist.github.com/2f8068d53f4ac03b4e6e51a1d0084f82

[07:55] *** setty1 joined
[07:57] <raschipi> moritz: I was already invited, thanks.

[07:57] <AlexDaniel> not really

[07:57] <raschipi> Zoffiz sent the invitation

[07:57] <AlexDaniel> I've added you to doc repo, but not perl6 team

[07:57] <AlexDaniel> ah

[07:57] <AlexDaniel> ok

[07:59] *** travis-ci joined
[07:59] <travis-ci> Doc build passed. Moritz Lenz 'is pure: Mention sink context warnings

[07:59] <travis-ci> https://travis-ci.org/perl6/doc/builds/271330434 https://github.com/perl6/doc/compare/0b838e94183f...fccff680e0d6

[07:59] *** travis-ci left
[08:04] *** kent\n left
[08:06] <squashable6> 🍕 JJ++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326790582

[08:06] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[08:10] *** mr-foobar left
[08:11] <Geth> ¦ doc: lancew++ created pull request #1525: Change $p to $promise in Async documentation

[08:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1525

[08:11] <squashable6> 🍕 lancew++ opened pull request “Change $p to $promise in Async documentation”: https://github.com/perl6/doc/pull/1525

[08:12] *** kent\n joined
[08:14] *** mr-foobar joined
[08:15] *** ramortegui left
[08:16] *** Cabanossi left
[08:18] *** Cabanossi joined
[08:23] <squashable6> 🍕 moritz++ assigned issue “Explain more on benefits…” to JJ: https://github.com/perl6/doc/issues/1231

[08:24] <squashable6> 🍕 moritz++ reopened issue “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231

[08:24] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326791419

[08:24] <squashable6> 🍕 moritz++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326791422

[08:24] <squashable6> 🍕 moritz++ self-unassigned issue “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231

[08:25] *** ChoHag joined
[08:26] <Geth> ¦ doc: a5be0cecfe | (Lance Wicks)++ (committed by Moritz Lenz) | doc/Type/IO/Socket/Async.pod6

[08:26] <Geth> ¦ doc: Change $p to $promise in Async documentation

[08:26] <Geth> ¦ doc: 

[08:26] <Geth> ¦ doc: As per Issue #1213, change the use of $p to $promise to make it

[08:26] <Geth> ¦ doc: more expressive.

[08:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a5be0cecfe

[08:26] <squashable6> 🍕 moritz++ merged pull request “Change $p to $promise in Async documentation”: https://github.com/perl6/doc/pull/1525

[08:26] *** avalenn left
[08:26] <squashable6> 🍕 rafaelschipiura++ edited issue “Make IO::Socket::Async first example more explicit”: https://github.com/perl6/doc/issues/1213

[08:26] * moritz just invited lancew to the perl6 team

[08:27] <squashable6> 🍕 JJ++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326791520

[08:28] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326791561

[08:29] *** ramortegui joined
[08:31] *** setty1 left
[08:33] *** avalenn joined
[08:34] <squashable6> 🍕 JJ++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326791823

[08:41] *** mr-foobar left
[08:43] *** mr-foobar joined
[08:43] <lancew> Perhaps this is a niave question, but what does being invited to perl6 team actually mean?

[08:46] *** ramortegui left
[08:46] *** Cabanossi left
[08:46] <Geth> ¦ doc: gfldex++ created pull request #1526: Explain names of subs. closes #1478

[08:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1526

[08:46] <squashable6> 🍕 gfldex++ opened pull request “Explain names of subs. closes #1478”: https://github.com/perl6/doc/pull/1526

[08:48] *** Cabanossi joined
[08:49] *** mr_ron joined
[08:49] <raschipi> It's the "commit bit".

[08:50] <squashable6> 🍕 rafaelschipiura++ wrote a comment on “Explain more on benefits…”: https://github.com/perl6/doc/issues/1231#issuecomment-326792481

[08:50] <gfldex> the whole sigil section sucks

[08:51] * gfldex goes to issue an issue

[08:51] *** espadrine joined
[08:53] *** dogbert2 joined
[08:56] *** yht left
[08:57] <lancew> thanks raschipi 

[08:59] *** Sgeo left
[09:02] *** TEttinger left
[09:06] <squashable6> 🍕 gfldex++ opened issue “revamp sigils section”: https://github.com/perl6/doc/issues/1527

[09:06] <raschipi> squashable6: status

[09:06] <squashable6> raschipi, 🍕 SQUASHathon is in progress! The end of the event in ≈2 hours

[09:06] <squashable6> raschipi, Log and stats: https://gist.github.com/5c961f1d97a75fe5424857534010ad26

[09:07] <raschipi> gfldex: Can you put a link to which section are you refering to in #1527?

[09:08] <squashable6> 🍕 rafaelschipiura++ labeled issue “revamp sigils section”: https://github.com/perl6/doc/issues/1527

[09:09] *** mr-fooba_ joined
[09:09] <gfldex> raschipi: I can't link to the &-container section because it's not witten yet. Also, I would prefer to work on solving the issue instead of working on the issue.

[09:09] <gfldex> It's not that big actually.

[09:09] <raschipi> Right, if you want to just solve it, awesome.

[09:10] <squashable6> 🍕 rafaelschipiura++ assigned issue “revamp sigils section” to gfldex: https://github.com/perl6/doc/issues/1527

[09:10] <squashable6> 🍕 rafaelschipiura++ unlabeled issue “revamp sigils section”: https://github.com/perl6/doc/issues/1527

[09:10] <gfldex> I better have a bath first. We don't want to make the docs all dirty, right?

[09:11] <raschipi> I'm gonna get some shut eye.

[09:11] <raschipi> Night people, have the appropriate amount of fun.

[09:11] *** raschipi left
[09:12] *** mr-foobar left
[09:12] *** dotness joined
[09:12] *** ramortegui joined
[09:17] *** Cabanossi left
[09:18] *** Cabanossi joined
[09:22] *** dotness left
[09:25] *** Sgeo joined
[09:31] <squashable6> 🍕 lancew++ wrote a comment on “Make IO::Socket::Async first example more explicit”: https://github.com/perl6/doc/issues/1213#issuecomment-326794188

[09:45] *** sena_kun joined
[09:47] <squashable6> 🍕 moritz++ wrote a comment on “Make IO::Socket::Async first example more explicit”: https://github.com/perl6/doc/issues/1213#issuecomment-326794896

[09:48] <squashable6> 🍕 lancew++ closed issue “Make IO::Socket::Async first example more explicit”: https://github.com/perl6/doc/issues/1213

[09:49] * lancew didn't realise I had to go to the perl6 page on GH to accept invitation and then have ability to close issues.

[09:49] <moritz> lancew: now you found out :-)

[09:49] <lancew> :-)

[09:52] *** ramortegui left
[09:52] *** ramortegui joined
[09:54] *** Skarsnik joined
[09:57] <squashable6> 🍕 Skarsnik++ wrote a comment on “Native Types Not Documented”: https://github.com/perl6/doc/issues/372#issuecomment-326795282

[09:57] <squashable6> 🍕🍕🍕  First contribution by Skarsnik++! ♥

[09:57] <Skarsnik> hello

[10:09] *** Actualeyes left
[10:12] *** ramortegui left
[10:15] *** emeric joined
[10:18] *** piojo2 joined
[10:25] *** espadrine left
[10:26] *** ShalokShalom_ joined
[10:29] *** ShalokShalom left
[10:29] <nadim> hi

[10:31] <piojo2> titsuki: you wrote that the heredoc adverb isn't documented-- https://github.com/perl6/doc/issues/1102

[10:31] <piojo2> But on the quoting constructs page, it's both in the adverbs list, and described in its own section. Should this be closed?

[10:44] *** Kyo91_ joined
[10:45] <Aaronepower> Hello, could someone explain why this grammar fails when I added '½' I thought `\d` would also catch those? https://paste.rs/Lms

[10:46] <lizmat> m: dd "2½".uniprops

[10:46] <camelia> rakudo-moar 8019c1: OUTPUT: «("Nd", "No").Seq␤»

[10:46] <lizmat> I think \d only matches the "Nd" property, not the No property

[10:47] <lizmat> as in 2 is a digit, ½ is a number

[10:48] <Aaronepower> lizmat: The documentation says Unicode N https://docs.perl6.org/language/regexes#Backslashed,_predefined_character_classes

[10:49] *** Kyo91_ left
[10:49] *** pmurias joined
[10:49] <lizmat> m: say "2½" ~~ /\d+/  # I'd say that was a bug in either the documentation or the core

[10:49] <camelia> rakudo-moar 8019c1: OUTPUT: «｢2｣␤»

[10:50] <piojo2> .tell titsuki Shouldn't this be closed? It's documented on the quoting constructs page -- https://github.com/perl6/doc/issues/1102

[10:50] <yoleaux> piojo2: I'll pass your message to titsuki.

[10:50] <pmurias> if I want to create a list of some LHF (low hanging fruit) tasks for rakudo.js/nqp.js what would be a good way of doing it (a .markdown file/LHF tagged github issues?)

[10:50] <Aaronepower> lizmat: Is there any way to match fractions without special casing?

[10:51] <lizmat> samcv might know

[10:53] <Aaronepower> lizmat: I have to dc to go to a meeting. If they have answer could they memo it to me? Thanks so much for your help!

[10:53] *** Aaronepower left
[10:54] <lizmat> .tell Aaronepower <:No> should match

[10:54] <yoleaux> lizmat: I'll pass your message to Aaronepower.

[10:54] <lizmat> m: say "½" ~~ / <:No> /

[10:54] <camelia> rakudo-moar 8019c1: OUTPUT: «｢½｣␤»

[10:56] <Geth> ¦ doc: gfldex++ created pull request #1528: #1527

[10:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1528

[10:56] <squashable6> 🍕 gfldex++ opened pull request “#1527”: https://github.com/perl6/doc/pull/1528

[10:57] <squashable6> 🍕 gfldex++ edited pull request “#1527”: https://github.com/perl6/doc/pull/1528

[10:57] *** tokage left
[10:58] <lizmat> m: say "2½" ~~ / [<:No> | <:Nd>]+ /  # Aaronepower

[10:58] <camelia> rakudo-moar 8019c1: OUTPUT: «｢2½｣␤»

[10:58] *** margeas joined
[10:59] *** margeas left
[10:59] *** margeas joined
[10:59] *** Aaronepower joined
[11:01] *** Aaronepower left
[11:03] <lizmat> m: say "2½" ~~ / <:No+:Nd>+ /   # better   Aaronepower   

[11:03] <camelia> rakudo-moar 8019c1: OUTPUT: «｢2½｣␤»

[11:11] *** chsanch joined
[11:13] *** dogbert2 left
[11:23] *** aborazmeh joined
[11:23] *** aborazmeh left
[11:23] *** aborazmeh joined
[11:28] *** Aaronepower joined
[11:33] *** chsanch left
[11:34] *** rindolf joined
[11:34] *** ks joined
[11:34] *** dogbert2 joined
[11:34] *** ks left
[11:37] *** andrzejku left
[11:37] <squashable6> 🍕 JJ++ submitted a review on pull request “#1527”: https://github.com/perl6/doc/pull/1528#pullrequestreview-60294041

[11:38] <squashable6> 🍕 JJ++ closed issue “revamp sigils section”: https://github.com/perl6/doc/issues/1527

[11:38] <Geth> ¦ doc: 4acf9cdb10 | (Wenzel P. P. Peppmeyer)++ | doc/Language/containers.pod6

[11:38] <Geth> ¦ doc: explain &-sigiled containers

[11:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4acf9cdb10

[11:38] <Geth> ¦ doc: b7f33a037d | (Wenzel P. P. Peppmeyer)++ | doc/Language/containers.pod6

[11:38] <Geth> ¦ doc: name default type constraints of containers

[11:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b7f33a037d

[11:38] <Geth> ¦ doc: b189c927a4 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/containers.pod6

[11:38] <squashable6> 🍕 JJ++ merged pull request “#1527”: https://github.com/perl6/doc/pull/1528

[11:38] <Geth> ¦ doc: Merge pull request #1528 from gfldex/#1527

[11:38] <Geth> ¦ doc: 

[11:38] <Geth> ¦ doc: thanks a lot for addressing #1527

[11:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b189c927a4

[11:38] *** firstdayonthejob joined
[11:38] *** andrzejku joined
[11:38] *** ShalokShalom_ is now known as ShalokShalom

[11:41] *** Aaronepower left
[11:41] *** espadrine joined
[11:42] *** yqt joined
[11:43] *** Aaronepower joined
[11:44] *** Aaronepower left
[11:45] *** Aaronepower joined
[11:50] *** firstdayonthejob left
[11:51] *** firstdayonthejob joined
[11:56] *** firstdayonthejob left
[11:56] *** itaipu joined
[11:58] *** Aaronepower left
[12:03] *** firstdayonthejob joined
[12:05] *** Aaronepower joined
[12:05] *** firstdayonthejob left
[12:05] *** MasterDuke joined
[12:06] *** Aaronepower left
[12:09] *** Aaronepower joined
[12:12] *** Actualeyes joined
[12:13] *** Aaronepower left
[12:17] *** aborazmeh left
[12:26] *** mr-fooba_ left
[12:27] *** mr-foobar joined
[12:39] <Geth> ¦ doc: 650d243562 | (Wenzel P. P. Peppmeyer)++ (committed by Moritz Lenz) | doc/Language/functions.pod6

[12:39] <Geth> ¦ doc: Explain names of subs. closes #1478

[12:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/650d243562

[12:41] *** Aaronepower joined
[12:42] <lancew> squashable6: status

[12:42] <squashable6> lancew, Next SQUASHathon in 32 days and ≈21 hours (2017-10-07 UTC-12⌁UTC+14)

[12:42] <Geth> ¦ doc: a6f839bf3b | (Wenzel P. P. Peppmeyer)++ (committed by Moritz Lenz) | doc/Type/Iterator.pod6

[12:42] <Geth> ¦ doc: better example in Iterator, closes #1508 (#1509)

[12:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a6f839bf3b

[12:43] *** Aaronepower left
[12:57] <moritz> AlexDaniel, ZofBot: what's the next topic for the squashaton? And is anybody writing a summary of the previous one?

[12:57] *** yht joined
[12:59] <El_Che> it looks that we don't have to put much effort in trying to get rakudo to build on Solaris. With the layoff of the tech people, it looks like it's dead

[13:00] <moritz> sad, it looked like a great piece of technology

[13:00] <moritz> with zones, dtrace and zfs

[13:01] <El_Che> yeah, good memories

[13:01] <lizmat> SunOS was my first unix-like system

[13:01] <El_Che> and automating it with perl before the config management soft became popular :)

[13:01] <El_Che> I wrote a shitload of perl code for solaris :)

[13:02] *** lancew left
[13:07] <lizmat> afk again&

[13:07] *** snarkyboojum joined
[13:07] *** snarkyboojum left
[13:10] *** espadrine left
[13:10] *** aindilis left
[13:13] *** snarkyboojum joined
[13:13] *** snarkyboojum left
[13:21] *** purcell joined
[13:26] *** mr-foobar left
[13:27] <piojo2> To edit a module that's installed with rakudobrew, what do I need to do?

[13:27] <piojo2> I found the file (printed in a stack trace), but editing it does nothing. There must be a cached copy or cached bytecode somewhere

[13:28] <sena_kun> You likely want to clone a repository of the module, make the edits and install it locally with zef.

[13:28] *** mr-foobar joined
[13:29] <piojo2> sena_kun: I'm more interested in quick and dirty editing. I don't need intend to install the result, just run it, learn a bit more, and undo all my dirty changes.

[13:29] <piojo2> And add what I learn to a bug report so it can be fixed properly.

[13:30] *** Skarsnik_ joined
[13:30] <sena_kun> maybe someone can point out better solution than mine.

[13:30] <piojo2> I saw in a stack trace: Actually thrown at: in code  at homedir/.rakudobrew/moar-blead-nom/install/share/perl6/site/sources/338438A16791DC5A3816B1052C78248FFDAFFEAB (File::Find) line 43

[13:31] <piojo2> but editing that file does nothing. Is rakudo caching bytecode, or is zef caching another copy of the file (which I could delete)?

[13:31] <sena_kun> You can use module without installing it. Like, clone the source, cd into the directory, then run `perl6 -Ilib` and try what you want. Changes you'll be doing in the clonned repository will be reflected this way.

[13:32] <piojo2> sena_kun: that will work, thanks

[13:32] <piojo2> I just wish this weren't so opaque

[13:32] <sena_kun> I am not an expert in precompiling stuff, though, so maybe there's a better way.

[13:33] *** Skarsnik left
[13:43] *** snarkyboojum joined
[13:43] *** snarkyboojum left
[13:50] *** emeric left
[13:51] <piojo2> m: use File::Find; mkdir 'test-root/a'; chmod 0, 'test-root/a'; say find(dir => 'test-root', keep-going => True);

[13:51] <camelia> rakudo-moar 51c3d8: OUTPUT: «===SORRY!===␤Could not find File::Find at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/perl6␤    CompUnit::…»

[13:51] <piojo2> eh, it was worth a try

[13:53] <sena_kun> >Failed to get the directory contents of '/home/koto/test-root/a': Failed to open dir: 13

[13:54] <sena_kun> what's the problem?

[13:55] <jdv79> https://gist.github.com/anonymous/7293055e2aa320a0d48227d902329dd1

[13:55] <yoleaux> 2 Sep 2017 19:24Z <moritz> jdv79: not much :/

[13:55] <jdv79> that's a bug, right?

[13:56] <jdv79> .tell moritz can anyone else help?  its kinda lame.

[13:56] <yoleaux> jdv79: I'll pass your message to moritz.

[13:56] *** mr-foobar left
[13:57] <jdv79> ugexe: weird how already installed modules are reported as failed to install if they are install slightly concurrently

[13:57] <jdv79> just ahead that is

[13:57] <jdv79> is that intended?

[14:00] *** mr-foobar joined
[14:01] <Skarsnik_> star: use File::Find; mkdir 'test-root/a'; chmod 0, 'test-root/a'; say find(dir => 'test-root', keep-going => True);

[14:01] <camelia> star-m 2017.07: OUTPUT: «mkdir is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in sub mkdir at src/RESTRICTED.setting line 8␤  in block <unit> at <tmp> line 1␤␤»

[14:01] <piojo2> sena_kun: I'm passing a parameter which says to ignore errors, so it shouldn't fail

[14:01] <jdv79> oh, it is already - https://rt.perl.org/Public/Bug/Display.html?id=127772

[14:01] <piojo2> Was something changed in the way try/CATCH is implemented that makes "try" mandatory?

[14:02] <piojo2> Everything I read says it's optional, but now I'm encountering code that fails without the explicit "try { }" block

[14:03] <piojo2> sena_kun: thanks for helping me run that, BTW

[14:03] <sena_kun> no problem. cannot explain why it runs that way though.

[14:03] *** ShalokShalom left
[14:03] *** ShalokShalom joined
[14:03] <piojo2> something is wrong with CATCH

[14:08] <piojo2> tadzik: in File::Find, line 45, CATCH isn't working. But I'm not sure it's a Find bug, since it works if it's surrounded with "try { }"

[14:20] *** Kyo91_ joined
[14:23] *** nowan left
[14:25] *** nowan joined
[14:27] *** mr-foobar left
[14:28] *** Aaronepower joined
[14:30] *** mr-foobar joined
[14:31] <Aaronepower> How do you match any number in regex? Including fractions like ½?

[14:31] <yoleaux> 10:54Z <lizmat> Aaronepower: <:No> should match

[14:31] <Aaronepower> Ah

[14:31] <APic> Ah.

[14:32] <TimToady> m: say '1' ~~ /<:No>/

[14:32] <camelia> rakudo-moar 51c3d8: OUTPUT: «Nil␤»

[14:32] <TimToady> m: say '1' ~~ /<:N>/

[14:32] <camelia> rakudo-moar 51c3d8: OUTPUT: «｢1｣␤»

[14:33] <Aaronepower> m: say '½' ~~ /<:N>/

[14:33] <camelia> rakudo-moar 51c3d8: OUTPUT: «｢½｣␤»

[14:34] *** dogbert2 left
[14:34] <MasterDuke> m: say "2½" ~~ / <:No+:Nd>+ /   # better   Aaronepower

[14:34] <camelia> rakudo-moar 51c3d8: OUTPUT: «｢2½｣␤»

[14:34] <Aaronepower> MasterDuke: What does :Nd cover?

[14:34] <MasterDuke> lizmat++ mentioned ^^^ after you left

[14:34] <Aaronepower> Why is that better than just N

[14:35] <MasterDuke> might be the same

[14:36] <MasterDuke> the are sometime slight differences between the unicode classes and some of the built in Perl 6 classes

[14:36] <Aaronepower> Is there any way to convert '1½' to 1.5 in perl6?

[14:38] <MasterDuke> m: say '1½'.comb>>.unival>>.sum

[14:38] <camelia> rakudo-moar 51c3d8: OUTPUT: «(1 0.5)␤»

[14:38] <MasterDuke> m: say ('1½'.comb>>.unival).sum

[14:38] <camelia> rakudo-moar 51c3d8: OUTPUT: «1.5␤»

[14:39] <TimToady> m: say ('42½'.comb>>.unival).sum

[14:39] <camelia> rakudo-moar 51c3d8: OUTPUT: «6.5␤»

[14:40] <TimToady> Aaronepower: are you asking for this as part of the language?

[14:41] <Aaronepower> TimToady: Well I was wondering since Perl6 has great unicode support I figured it would be smart enough to handle this too.

[14:41] <TimToady> we considered it :)

[14:41] <Aaronepower> TimToady: Why was it rejected?

[14:41] *** zakame joined
[14:41] <TimToady> just seems like kind of a low-leverage feature

[14:42] <TimToady> and modules will happen :)

[14:42] <Aaronepower> TimToady: What do you mean low-leverage?

[14:42] <TimToady> doesn't get you a large advantage anywhere else

[14:43] <Aaronepower> TimToady: True, but text processing is a huge part of Perl6 so it gives a huge boon to that area.

[14:43] <piojo2> 2² does work, though

[14:44] <TimToady> that's more useful generally

[14:44] <piojo2> I agree

[14:44] <piojo2> I'm just pointing out that it's the same category of functionality--copy/pasting math from the internet, mostly

[14:44] <TimToady> ya gotta draw the line somewhere, and this where seems about as good as any

[14:44] <piojo2> I don't think this falls under the umbrella of text processing.

[14:45] <piojo2> for this to be text processing, that would imply you're running EVAL on random input :)

[14:45] <Aaronepower> piojo2: No I'm using it for parsing out times and measurements from a document.

[14:45] <TimToady> most uses of vulgar fractions are as multpliers or constants, very few as int+frac

[14:45] <TimToady> but then that's not using it within the language

[14:46] <TimToady> that's using it on a different language

[14:46] <piojo2> Aaronepower: I stand corrected. Interpreting as int != EVAL. Don't know why I was thinking that.

[14:46] <piojo2> err, number. not int.

[14:50] <Aaronepower> Where is documentation on writing grammar failures?

[14:50] *** kybr left
[14:55] <zakame> hello I/

[14:55] <piojo2> Aaronepower: Like generating error messages in the grammar?

[14:55] <piojo2> grammar Foo { token TOP { <int> +% ',' || { die "need a number" } }; token int { \d+ } }

[14:55] <Aaronepower> piojo2: I heard there was a method to do it though?

[14:56] <piojo2> Aaronepower: Sorry, I don't know

[14:57] *** yht left
[14:57] <Aaronepower> piojo2: Ah found it. `method FAILGOAL($goal) { die "cannot find $goal near position {self.pos}" }`

[14:57] *** mr-foobar left
[14:59] *** skids joined
[15:01] *** mr-foobar joined
[15:04] <gfldex> Aaronepower: FAILGOAL is not specced, what may or may not be intentional.

[15:04] <Aaronepower> gfldex: So it doesn't work?

[15:05] <gfldex> Aaronepower: it may very well work but may be an implementation detail of Rakudo.

[15:05] <Aaronepower> gfldex: It didn't do anything

[15:06] <gfldex> right now there is no way to hide or mark internals

[15:06] *** espadrine joined
[15:06] *** Kyo91_ left
[15:08] *** zakharyas joined
[15:09] *** Kyo91_ joined
[15:11] <piojo2> grammar Foo { token TOP { <int> +% ',' || { FAILGOAL("number") } }; token int { \d+ } }; Foo.parse("hello");

[15:11] <piojo2> m: grammar Foo { token TOP { <int> +% ',' || { FAILGOAL("number") } }; token int { \d+ } }; Foo.parse("hello");

[15:11] <camelia> rakudo-moar 51c3d8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    FAILGOAL used at line 1␤␤»

[15:11] <piojo2> m: grammar Foo { token TOP { <int> +% ',' || { .FAILGOAL("number") } }; token int { \d+ } }; Foo.parse("hello");

[15:11] <camelia> rakudo-moar 51c3d8: OUTPUT: «No such method 'FAILGOAL' for invocant of type 'Any'␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:13] <piojo2> m: grammar Foo { token TOP { <int> +% ',' || { self.FAILGOAL("number") } }; token int { \d+ } }; Foo.parse("hello");

[15:13] <camelia> rakudo-moar 51c3d8: ( no output )

[15:14] *** Skarsnik__ joined
[15:17] *** Skarsnik_ left
[15:24] *** Skarsnik_ joined
[15:25] *** setty1 joined
[15:26] *** mr-foobar left
[15:27] *** mr-foobar joined
[15:28] *** Skarsnik__ left
[15:32] *** khw joined
[15:35] *** Kyo91_ left
[15:36] *** Kyo91_ joined
[15:40] *** Kyo91_ left
[15:44] *** cpage left
[15:48] *** dogbert2 joined
[15:50] <piojo2> Aaronepower: you might find this useful: https://perlgeek.de/blog-en/perl-6/2017-007-book-parse-errors.html

[15:52] *** zakharyas left
[15:52] <Geth> ¦ doc: 67826ddc56 | (Steve Mynott)++ | doc/Language/containers.pod6

[15:52] <Geth> ¦ doc: fix typo

[15:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/67826ddc56

[15:55] *** devmikey joined
[15:56] *** P6steve joined
[15:57] *** mr-foobar left
[16:00] *** P6steve left
[16:01] *** mr-foobar joined
[16:12] *** purcell left
[16:14] *** zakame left
[16:23] <AlexDaniel> squashable6: status

[16:23] <squashable6> AlexDaniel, Next SQUASHathon in 32 days and ≈17 hours (2017-10-07 UTC-12⌁UTC+14)

[16:24] <AlexDaniel> moritz: no repo was chosen yet

[16:24] <AlexDaniel> moritz: and I am not writing any blog post or anything, so everyone should feel free to do it

[16:26] *** mr-fooba_ joined
[16:27] *** mr-foobar left
[16:30] *** squashable6 left
[16:36] *** Skarsnik__ joined
[16:38] *** squashable6 joined
[16:38] <AlexDaniel> squashable6: status 2017-09-02

[16:38] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/fea65db631511cb1913352df5cd397d8

[16:39] <Geth> ¦ doc: gfldex++ created pull request #1530: Explain sigils and link to details. fix #1529

[16:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1530

[16:39] <AlexDaniel> moritz: ↑ here's the last log

[16:39] *** Skarsnik_ left
[16:41] *** mahmudov joined
[16:42] *** mahmudov left
[16:42] <Geth> ¦ whateverable: 3b1f3ca8ff | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[16:42] <Geth> ¦ whateverable: Add “status DATE” command

[16:42] <Geth> ¦ whateverable: 

[16:42] <Geth> ¦ whateverable: To see the log of an even that already ended.

[16:42] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/3b1f3ca8ff

[16:44] <AlexDaniel> what repos are in need of squashathon? doc, roast, rakudo, what else?

[16:45] <AlexDaniel> nqp

[16:45] <sena_kun> doc.

[16:45] <sena_kun> and doc has many issues too.

[16:45] <sena_kun> :)

[16:48] <AlexDaniel> sena_kun: this squashathon was a success, but I'd much rather have something else next month :)

[16:50] *** gdonald joined
[16:54] *** mr_ron left
[16:55] *** geekosaur left
[16:57] *** geekosaur joined
[16:57] <Skarsnik__> bug triage?

[16:57] *** Skarsnik__ is now known as Skarsnik

[16:58] <AlexDaniel> I think rakudo is a good choice, but I'd have to make it work with RT somehow

[16:58] *** ChoHag left
[16:58] <AlexDaniel> by “it” I mean squashable6

[17:02] *** sena_kun left
[17:04] <AlexDaniel> 🍕🍕🍕 Thanks to all SQUASHathon contributors: AlexDaniel Altai-man JJ MasterDuke17 Skarsnik coke gfldex jnthn jonathanstowe jstuder-gh lancew moritz nxadm rafaelschipiura raiph ronaldxs samcv stmuk toolforger zakame zoffixznet

[17:05] <AlexDaniel> 🍕 Repo for the next SQUASHathon: https://github.com/rakudo/rakudo/

[17:08] *** cognominal left
[17:09] *** cognominal joined
[17:13] <AlexDaniel> 🍕 squashable issue: https://github.com/perl6/whateverable/issues/226

[17:14] <AlexDaniel> 🍕 wiki page updated: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:17] *** Cabanossi left
[17:18] *** Cabanossi joined
[17:30] *** ramortegui joined
[17:32] <Geth> ¦ doc: d1ec75199b | (Wenzel P. P. Peppmeyer)++ | doc/Language/variables.pod6

[17:32] <Geth> ¦ doc: Explain sigils and link to details. fix #1529

[17:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d1ec75199b

[17:32] <Geth> ¦ doc: c2c213525a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[17:32] <Geth> ¦ doc: Merge pull request #1530 from gfldex/#1529

[17:32] <Geth> ¦ doc: 

[17:32] <Geth> ¦ doc: Explain sigils and link to details. fix #1529

[17:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c2c213525a

[17:42] *** ChoHag joined
[18:27] *** mr-foobar joined
[18:28] *** mr-fooba_ left
[18:28] <Aaronepower> piojo2: I read that, however I can't seem to get it working. It always goes to the failure path. https://paste.rs/kzh

[18:31] <MasterDuke> Aaronepower: have you seen https://github.com/moritz/Grammar-ErrorReporting ?

[18:32] <Aaronepower> MasterDuke: Nope, I'll try that.

[18:33] *** notbenh left
[18:34] *** notbenh joined
[18:38] <Aaronepower> MasterDuke: This is code I tried. doesn't seem to report the error. https://paste.rs/YAa

[18:38] <Aaronepower> MasterDuke: During install it did fail it's tests.

[18:39] <moritz> Aaronepower: can you please nopaste the test failures?

[18:39] <yoleaux> 13:56Z <jdv79> moritz: can anyone else help?  its kinda lame.

[18:40] <Aaronepower> moritz: https://paste.rs/AeY

[18:41] *** notbenh left
[18:42] <moritz> jdv79: so far Zoffix and AlexDaniel have tried

[18:43] *** Rawriful joined
[18:50] <moritz> Aaronepower: your problem is that neither 'hr' nor 'hrs' matches 'hour'

[18:51] <Aaronepower> moritz: No, the problem is that error isn't reported.

[18:51] <Aaronepower> I know they don't match, that's why I'm trying to build something that will report those errors.

[18:52] <moritz> Aaronepower: then you need something like [ <unit> || <.expect('unit') ]

[18:52] <Aaronepower> moritz: From your Grammar::ErrorReporting examples it seems to just work with nothing like that.

[18:54] <moritz> Aaronepower: the ~ parser combinator that the example uses introduces something like that implicitly

[18:54] <moritz> Aaronepower: but I guess I should make the docs more explicit

[18:54] <moritz> (the module is a by-product from my work-in-progress book on Perl 6 regexes, so I don't have much experience with giving it to people without them reading the book :D)

[18:56] *** darutoko left
[18:56] <moritz> Aaronepower: the main point of the module is to provide a more fancy "expect" method; you still have to call it yourself

[18:57] <Aaronepower> moritz: Why `.expect` a lot of examples do simply `expect`

[18:57] <Aaronepower> moritz: Also it says there is no expect method.

[18:58] <moritz> Aaronepower: it's called "error" in the module, sorry

[18:58] <moritz> and the . suppresses capturing

[18:58] <moritz> doesn't mattter much if you include it or not

[18:59] *** Kyo91_ joined
[19:00] <Aaronepower> moritz: Okay, thanks!

[19:02] *** Cabanossi left
[19:03] *** Cabanossi joined
[19:03] *** Kyo91_ left
[19:11] <rindolf> Oh God! I am having an argument with a stubborn old timer on Facebook chat why he should not spell Perl as "PERL" and he keeps making up smart rationalisations

[19:13] <BooK> rindolf: is it worth the effort?

[19:15] <BooK> maybe we need some PERL6 / Perl6 / perl6 (also, spacing!) discussion in the FAQ ;-)

[19:17] <rindolf> BooK: there is one in https://learn.perl.org/faq/perlfaq1.html#Whats-the-difference-between-perl-and-Perl

[19:18] <rindolf> BooK: he seems stubborn

[19:18] <geekosaur> it's not worth the effort

[19:18] <rindolf> geekosaur: i guess

[19:18] <Aaronepower> moritz: Hey, if you have another second I'm having a problem where the grammar doesn't seem to like just one time-op I thought `<time-op>+` would mean to stop parsing if it can't get any more?

[19:19] <rindolf> geekosaur: educated idiots are the worst

[19:19] <geekosaur> he probably learned it as "Practical Extraction and Report Language" even though that's a retcon

[19:20] <geekosaur> (he's probably too old to get "retcon" too :p )

[19:23] *** mr-fooba_ joined
[19:24] * rindolf comes up with backronyms for PYTHON, RUBY, GO, RUST...

[19:24] *** mr-foobar left
[19:25] <Geth> ¦ doc/master: 5 commits pushed by (Will "Coke" Coleda)++

[19:25] <Geth> ¦ doc/master: 0393eb436d | learn new words

[19:25] <Geth> ¦ doc/master: 35dcc4acc8 | fix typos

[19:25] <Geth> ¦ doc/master: 68c87edb07 | fix non-compiling example

[19:25] <Geth> ¦ doc/master: ced237e704 | don't try to compile the warning message

[19:25] <Geth> ¦ doc/master: f4f66704f7 | remove trailing whitespace

[19:25] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/c2c213525a...f4f66704f7

[19:25] <moritz> Aaronepower: is anything parsing the whitespace between the <time-op> matches?

[19:25] <geekosaur> ask him if he has one for FORTRAN :p (this is admittedly a pathological case)

[19:25] <Aaronepower> moritz: Nope

[19:27] <Aaronepower> geekosaur: Really Underrated Sane Types

[19:27] <moritz> Aaronepower: http://perlpunks.de/paste/show/59ac578f.26f2.e0 seems to work both with two and with one <time-op>

[19:27] <moritz> Aaronepower: so I don't think I understand your problem

[19:27] <geekosaur> I think you meant rindolf there

[19:28] *** raschipi joined
[19:28] <pmurias> rindolf: doesn't the "It's not an acronym" win the discussion?

[19:29] <Aaronepower> moritz: Here's my current grammar and Tracer output. https://paste.rs/FC8

[19:29] <geekosaur> if he's old enough, he remembers the original perl 3 manpage which proudly announced "perl - Practical Extraction and Report Language" and it stuck

[19:31] <teatime> I think I remember something in the camel book about that

[19:31] <teatime> and how it's not called 'pearl' so that can't be it

[19:31] <teatime> or something

[19:32] *** yqt left
[19:35] <rindolf> pmurias: no

[19:41] *** TEttinger joined
[19:42] <[Coke]> ff0

[19:46] <Aaronepower> Could anyone explain why this grammar fails with just one <time-op>? https://paste.rs/9Zl

[19:48] <geekosaur> Aaronepower, I think this is a gotcha. TOP has to match the end of input as well; if it doesn't, use subparse instead

[19:48] <Aaronepower> geekosaur: What's the character for EOF?

[19:49] <geekosaur> actually I think I am confused, sorry

[19:50] <geekosaur> hm, yeh, I am thinkin g of the opposite case. sorry

[19:52] <moritz> Aaronepower: your paste is useless without showing the input string as well

[19:52] <Aaronepower> moritz: It does show an input string?

[19:52] <moritz> Aaronepower: I see no call .parse or anything

[19:52] <Aaronepower> moritz: Sorry, the one I posted later does have it. https://paste.rs/9Zl

[19:54] <moritz> Aaronepower: ok, the problem is this: token digit { <:N>+ || <.error('Incorrect digit')>}

[19:54] <moritz> time-op calls digit

[19:54] <raschipi> rindolf: Is he talking about Pumpking Perl or Rakudo Perl?

[19:54] <moritz> and so after the end of the first match, time-op is called again

[19:55] <moritz> with the current position being the end of the string

[19:55] <rindolf> raschipi: who?

[19:55] <moritz> and so <:N>+ fails, and so the <.error(...)> branch is taken

[19:55] <Aaronepower> moritz: Okay sure I get that. 

[19:56] <rindolf> raschipi: my correspondent?

[19:56] <raschipi> yep

[19:56] <moritz> Aaronepower: so the insight is that <digit> failing can part of a successful regex match

[19:57] <rindolf> raschipi: it started by this tweet of mine - https://twitter.com/shlomif/status/904389198370807809

[19:57] <moritz> Aaronepower: you might want to prefex the error branch with <?before \S> or something like that

[19:57] *** Skarsnik_ joined
[19:57] <moritz> rindolf: this looks very much like Perl 5, and thus off-topic here

[19:57] <moritz> rindolf: please keep Perl 5 discussions to Perl 5 channels

[19:57] <Aaronepower> moritz: What does that do exactly?

[19:58] <rindolf> moritz: ok

[19:58] <moritz> Aaronepower: it only triggers if there is another non-whitespace character in the string

[19:58] <rindolf> moritz: the discussion was about both perls/Perls

[19:59] <moritz> rindolf: that was not clear from anything you wrote here, and you have a history of bringing perl 5 topics to #perl6

[19:59] <Aaronepower> moritz: So it would be `<?.error('Incorrect digit')\S>`?

[19:59] <rindolf> moritz: sorry!

[19:59] <moritz> Aaronepower: no, token digit { <:N>+ || <?before \S> <.error('Incorrect digit')>}

[19:59] <Aaronepower> moritz: Oh, what is `before`?

[20:00] <moritz> Aaronepower: a look-ahead

[20:00] <Geth> ¦ doc/rafaelschipiura-patch-1: d65d2db6dd | rafaelschipiura++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[20:00] <Geth> ¦ doc/rafaelschipiura-patch-1: Update variables.pod6

[20:00] <Geth> ¦ doc/rafaelschipiura-patch-1: review: https://github.com/perl6/doc/commit/d65d2db6dd

[20:00] <moritz> Aaronepower: the other option is to move the error reporting out of rule digit

[20:00] <moritz> Aaronepower: and write something like [ <digit> | $ || <.error('incorrect digit')> ] where you call it

[20:00] *** Skarsnik left
[20:01] <Geth> ¦ doc/rafaelschipiura-patch-1: cac120bac5 | rafaelschipiura++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[20:01] <Geth> ¦ doc/rafaelschipiura-patch-1: Update variables.pod6

[20:01] <Geth> ¦ doc/rafaelschipiura-patch-1: review: https://github.com/perl6/doc/commit/cac120bac5

[20:01] <moritz> which explicitly allows $ (end of string) to be an option 

[20:01] <moritz> hm, but then that you try to parse a unit next... not such a good idea

[20:04] <Aaronepower> moritz: Is there any way to say like `<time-op>+ | $ || <.error>`?

[20:05] <moritz> Aaronepower: it'd need to be [ <time-op> | $ || <.error> ]+

[20:07] <Aaronepower> moritz: Hmm, that didn't seem to solve it.

[20:08] *** Skarsnik_ left
[20:08] <geekosaur> mrf. tried to set up to run that but can't install that module, zef throws errors. I just updated 2 days ago so I'd think I was reasonably current...

[20:09] <geekosaur> (also got caught up elsewhere)

[20:09] <Aaronepower> geekosaur: You just have to --force-install

[20:09] <Aaronepower> geekosaur: `--force-test` sorry

[20:10] *** Kyo91_ joined
[20:13] <moritz> Aaronepower: then use the <?before> stuff. I'm too tired right now to come up with something else that actually works :/

[20:13] <Aaronepower> moritz: Alright, Thanks for your help!

[20:15] <Aaronepower> moritz: Though that doesn't seem to work either.

[20:18] *** snarkyboojum joined
[20:18] *** snarkyboojum left
[20:19] *** Kyo91_ left
[20:20] *** P6steve joined
[20:20] *** snarkyboojum joined
[20:21] *** Kyo91_ joined
[20:24] *** P6steve left
[20:25] *** snarkyboojum left
[20:26] *** Kyo91_ left
[20:26] <raschipi> I'm about to bring up a topic that led to a flame war in p5-porters but that is relevant to P6. I'm guessing it's better to bring it up now instead of waiting before people get strong opinions on it.

[20:27] <raschipi> After 6.d is released, modules will still be expected to be written in 6.c, right? There will be many users stuck in older Rakudos...

[20:34] <nine> raschipi: I'm not sure that kind of problem is as pronounced as in Perl 5.

[20:36] <mst> certainly I'd say it should be expected that a module would change its major version if changing which version of the spec it's coded to

[20:36] <nine> raschipi: that said, there's no reason to write code in 6.d if it doesn't help. So if you need one of 6.d's features (and there aren't _that_ many), you will not have much of a choice and if you don't, than you won't have much of a reason.

[20:36] <raschipi> What would happen if a module is rewritten in 6.d and I'm stuck in a rakudo that doesn't support it? How is it mitigated?

[20:36] <mst> raschipi: you'd specify a version from before the rewrite and everything would be fine

[20:37] <raschipi> Right, my code can be written in 6.d, but the compiler cant understand the module.

[20:37] <raschipi> 6.c rather

[20:42] *** devmikey left
[20:51] <timotimo> same problem if your module relies on a rakudo bug being fixed

[20:54] <raschipi> right, for Pumpking perl they decided to support older Perls going back 10 years. Will a similar expectation for Rakudo exist?

[20:54] <raschipi> Setting that also allowed module authors to NOT support Perls even older than that...

[20:55] *** BenGoldberg joined
[20:56] <perigrin> timotimo: slightly different because perl6 has a spec and an underlying version

[20:56] <perigrin> where in perl5 they're tightly bound (because no spec)

[20:58] <perigrin> so in theory a Rakudo that supports 6.z could see that the code-scope was written for 6.m and swtich it's behavior to be backwards compatible

[20:59] *** andrzejku left
[21:00] <raschipi> Right, I agree that being forward-compatible is a solved problem, unlike in P5. The problem is for people with a Rakudo that only supports 6.m.

[21:00] *** TEttinger left
[21:01] <perigrin> raschipi: well and "this is 6.c but you really want a rakudo 2018.03 or later because it fixed a bug in Unicode handling"

[21:01] *** dogbert2 left
[21:02] *** Cabanossi left
[21:03] *** Cabanossi joined
[21:03] <raschipi> Right, I would understand requiring people to upgrade if there's a strong enough reason for it. I'm just asking if the expectations are the same in P6 as in P5.

[21:03] <perigrin> raschipi: but short of a causality violating micro-processor I dont' think you can solve "I wrote this code for compatiblity with things you hadn't yet dreamt of"

[21:03] <perigrin> specifically to answer that question: I don't think so but only as a side-effect of Perl6 code not being more than 2-3 years old at best right now

[21:05] <perigrin> Where I suspect at least one fortune 500 company was still shipping perl4 binaries because they had a production script that didn't run on >= perl5.0

[21:05] <raschipi> Like I said, I'm just bringing this topic right now because it isn't that important right now. But ee should try to think ahead to avoid flame wars in the future.

[21:11] *** TEttinger joined
[21:14] <rindolf> perigrin: nasty

[21:15] <pmurias> raschipi: what expectations are you asking about? if module authors are expected to support old rakudo or if new rakudos are expected to support old modules?

[21:18] <BooK> also, isn't the assumption about not being able to upgrade an old version of the language compiler but still wanting to install a library/program written for the latest version?

[21:18] <BooK> at some point, people have to decide the era they live in, I guess

[21:19] <BooK> although, having tried and failed to run some stuff with a very old version of mod_perl on modern platform/compiler, I must say that stuff is hard sometimes 

[21:19] <BooK> but that's probably the opposite problem

[21:20] *** TEttinger left
[21:22] <perigrin> BooK: take that fortune 500 company, they litterally had the warranty run out on their new Data Center hardware by the time the new Data Center had been approved for them to move into

[21:22] <perigrin> they moved from 5.6.1 to 5.8.8 while I was there ... and that move was painful enough that I'm not sure they've moved off of 5.8.8 since.

[21:23] <perigrin> unless somethign catastrophic happened in the last 10 years to that new DC.

[21:23] <rindolf> perigrin: how large was that codebase?

[21:23] <perigrin> In the interim people need to solve bugs, and they need to write new applications that run along side the existing applications that are earning (in this case millions of dollars) revenue 

[21:24] <perigrin> rindolf: half a million lines? somethign like that

[21:24] <rindolf> perigrin: ah, i see

[21:24] <BooK> yeah, reality is much more complex that we would like it to be

[21:24] <rindolf> perigrin: quite large

[21:24] <[Coke]> I can verify that it is hard for companies to keep upgrading stuff that is otherwise working.

[21:24] <perigrin> rindolf: and old, by the time I was there it was at least a decade old ... and ran 24/7

[21:25] <rindolf> perigrin: so it was poorly written?

[21:25] <rindolf> perigrin: ah

[21:25] <perigrin> not especially no, just in constant use

[21:25] <perigrin> with very tight tolerances for downtime

[21:25] <rindolf> perigrin: ah

[21:26] *** ddd_ joined
[21:26] <perigrin> case in point split /\|/ slowed down sometime around 5.8.1 ... that fact combined with a single bad row of data cost them several hundred thousand dollars one week when a cycle ended up running a minute longer than the tolerance

[21:26] <ddd_> hello

[21:27] <ddd_> someone here?

[21:27] <rindolf> ddd_: hi

[21:27] <rindolf> ddd_: sup?

[21:27] <rindolf> perigrin: wow

[21:27] * perigrin shrugs

[21:27] <perigrin> I have a strong appreciation for no longer working in Corporate IT :)

[21:28] <raschipi> To get the good customers that pay very well, modules should support old rakudo versions.

[21:28] <rindolf> perigrin: what do you do now?

[21:28] <perigrin> freelance / contractor

[21:28] <rindolf> ddd_: how may we prove of help?

[21:29] <rindolf> perigrin: ah

[21:30] <ddd_> can i ask something?

[21:31] <rindolf> ddd_: sure

[21:32] <BooK> don't ask to ask :-)

[21:32] *** Rawriful left
[21:36] <ddd_> I got a small project on the job that needs to run with the perl .. so far I have never worked with it in my life :D .. my question is if it is possible to make a form with two buttons that would call sub function from the perl and that output must be printed under the buttons without reload 

[21:36] <ddd_> i know my qust is stupid :S 

[21:36] <rindolf> ddd_: use AJAX or websockets or whatever

[21:36] <raschipi> ddd_: Yes, it is possible.

[21:37] <rindolf> ddd_: using JS

[21:37] *** someuser joined
[21:37] <rindolf> ddd_: do you want to use perl 6 or perl 5?

[21:38] <ddd_> perl 6

[21:38] <rindolf> ddd_: ok

[21:38] <rindolf> ddd_: then maybe look at http://bailador.net/

[21:39] <[Coke]> also http://cro.services/

[21:42] <ddd_> Is it possible to do this with a gci script? #.# 

[21:42] <ddd_> or it must be mvc? 

[21:42] <pmurias> raschipi: isn't modules support old rakudo versions something that makes more sense once rakudo is adopted by users more?

[21:43] <perigrin> ddd_: gci?

[21:44] <ddd_> I mean cgi

[21:44] <perigrin> heh

[21:44] <raschipi> pmurias: right, I don't think anyone will adopt the rakudo versions in stable distros right now. Anyone starting will get a recent version.

[21:46] <pmurias> is that agreement or sarcasm?

[21:46] <pmurias> ;)

[21:47] <perigrin> ddd_: it's possible, but I don't think there is documentation for it. Also if you're doing a dyanmic page like that you'll be better off with something persistent on the backend IMO

[21:47] <ddd_> it should be to upload xml and check if file is okey and print the errors immediately on the same page #.#

[21:48] <ddd_> okey :) @perigrin

[21:51] *** setty1 left
[22:09] *** dogbert2 joined
[22:10] *** espadrine left
[22:12] <rindolf> Good night, everyone

[22:12] <rindolf> ddd_: good luck

[22:13] <AlexDaniel> hm, there's some after-effect from the squashathon :)

[22:14] <pmurias> AlexDaniel: what's that?

[22:14] *** snarkyboojum joined
[22:15] <AlexDaniel> pmurias: people are contributing more than they did before the squashathon, but the squashathon is over

[22:15] *** snarkyboojum left
[22:16] <Aaronepower> Could anyone explain why this grammar fails with just one <time-op>, how do I get it to recognise it is at the end of the input? https://paste.rs/9Zl

[22:17] *** rindolf left
[22:20] <ddd_> gn people

[22:20] *** TiglatePileser joined
[22:21] *** pmurias left
[22:22] *** snarkyboojum joined
[22:26] <AlexDaniel> Aaronepower: hello

[22:26] <Aaronepower> AlexDaniel: Hello.

[22:27] *** leont left
[22:27] <AlexDaniel> Aaronepower: okay, so it matches <time-op> once just fine

[22:27] <AlexDaniel> Aaronepower: and then, because of “+”, it attempts to match it again

[22:27] <AlexDaniel> Aaronepower: <time-op> goes into <digit>

[22:27] <Aaronepower> AlexDaniel: I get that, I just thought by `one or more` it'd give up gracefully after it failed.

[22:27] <AlexDaniel> Aaronepower: and it fails it <digit> because essentially it's at the end of the input

[22:28] <AlexDaniel> Aaronepower: correct, but you explicitly die in token digit { }

[22:29] <Aaronepower> AlexDaniel: Well how do you say " give me one or more time-ops and once you have one it's fine if there's no more".

[22:30] *** TiglatePileser left
[22:31] <AlexDaniel> Aaronepower: either remove calls to .error in token and unit or use something like [<!before $> <time-op>]+

[22:32] <Aaronepower> AlexDaniel: The latter works perfectly thank you. Can you explain the `<!before $>`?

[22:32] <timotimo> the "parse this || die invalid stuff" is usually only good if you have something in front that guarantees the stuff after it has to be there

[22:33] *** xinming left
[22:33] <timotimo> like having matched a "foo(" but never finding a ")" is a clear problem

[22:35] <AlexDaniel> Aaronepower: maybe this will explain it better than I can: https://docs.perl6.org/language/regexes#index-entry-regex_before-regex_after-Lookahead_assertions

[22:35] *** ddd_ left
[22:45] *** snarkyboojum left
[22:47] *** Cabanossi left
[22:48] *** Cabanossi joined
[22:55] *** nadim left
[23:07] *** ChoHag left
[23:12] *** ChoHag joined
[23:14] <jdv79> .tell moritz surely it can be fixed.  ill try.

[23:14] <yoleaux> jdv79: I'll pass your message to moritz.

[23:16] *** Cabanossi left
[23:16] *** itaipu left
[23:18] *** Cabanossi joined
[23:20] *** Kyo91_ joined
[23:22] *** ShalokShalom left
[23:24] *** Kyo91_ left
[23:27] *** Kyo91_ joined
[23:32] *** wamba left
[23:32] *** Kyo91_ left
[23:52] *** margeas left
[23:53] <Aaronepower> Is there a tool for generating module layouts like cargo for Rust?

[23:53] <raschipi> mi6?

[23:54] <Aaronepower> raschipi: mi6?

[23:54] <gfldex> https://github.com/gfldex/perl6-meta6-bin

[23:55] <raschipi> https://github.com/skaji/mi6

[23:58] <Aaronepower> raschipi: Thank you this is what I needed.

