[00:10] *** wamba left
[00:25] <Geth> ¦ ecosystem: 9e3848dc54 | (Timo Paulssen)++ | META.list

[00:25] <Geth> ¦ ecosystem: SDL2::Raw now has its home on CPAN.

[00:25] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/9e3848dc54

[00:29] <TimToady> Xliff_: do you have an enum that defines 'next' somewhere?

[00:30] *** evalable6 left
[00:30] *** statisfiable6 left
[00:30] *** bisectable6 left
[00:30] *** benchable6 left
[00:30] *** releasable6 left
[00:30] *** unicodable6 left
[00:30] *** greppable6 left
[00:30] *** coverable6 left
[00:30] *** bloatable6 left
[00:30] *** evalable6 joined
[00:40] *** Merfont joined
[00:40] <AlexDaniel_> .tell TimToady maybe you can take a look at RT #125596 ? It feels like it can be changed to .panic, but maybe you know a good reason why it has to be a sorry. The spectest seems to be clean with .panic but I don't trust it that too much.

[00:40] <yoleaux> AlexDaniel_: I'll pass your message to TimToady.

[00:40] <synopsebot> RT#125596 [new]: https://rt.perl.org/Ticket/Display.html?id=125596 [LTA] error message with if; and unless; without conditions

[00:43] *** Mrofnet left
[00:46] *** Rawriful left
[00:47] *** greppable6 joined
[00:47] *** ChanServ sets mode: +v greppable6

[00:47] *** bisectable6 joined
[00:47] *** coverable6 joined
[00:47] *** bloatable6 joined
[00:47] *** benchable6 joined
[00:47] *** releasable6 joined
[00:47] *** unicodable6 joined
[00:47] *** ChanServ sets mode: +v benchable6

[00:47] *** ChanServ sets mode: +v releasable6

[00:47] *** ChanServ sets mode: +v unicodable6

[00:47] *** statisfiable6 joined
[00:47] *** jameslen_ joined
[00:48] *** atroxaper joined
[00:49] *** jameslenz left
[00:52] *** atroxaper left
[00:54] *** zakame joined
[00:55] <zakame> good morning! o/

[00:56] *** troys is now known as troys_

[00:56] <AlexDaniel_> zakame: o/

[00:59] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1181: Suggest enum values as types

[00:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1181

[00:59] <squashable6> 🍕 MasterDuke17++ opened pull request “Suggest enum values as types”: https://github.com/rakudo/rakudo/pull/1181

[00:59] <squashable6> 🍕🍕🍕  First contribution by MasterDuke17++! ♥

[00:59] *** purcell joined
[01:13] <Xliff_> TimToady: Um. I don't think so. Not in my code, but it might be a module, somewhere.

[01:14] <Xliff_> use Mojo::DOM:from<Perl5>;

[01:14] <Xliff_> ^^ The only module I am using in the script, ATM

[01:19] *** evalable6 left
[01:19] *** evalable6 joined
[01:19] *** ChanServ sets mode: +v evalable6

[01:20] *** Zoffix joined
[01:20] <Zoffix> Xliff_: we have Perl 6 version of that module, tho.

[01:20] <Zoffix> eco: DOM::Tiny

[01:20] <buggable> Zoffix, DOM::Tiny 'Very small, self-sufficient DOM parser manipulator': https://github.com/zostay/p6-DOM-Tiny

[01:21] <cxreg> https://conf.researchr.org/event/dls-2017/dls-2017-invited-talk-challenges-and-progress-toward-efficient-gradual-typing

[01:21] <cxreg> "in Typed Racket, some partially typed programs are 1000X slower than the untyped or fully typed version of the same program"

[01:21] <squashable6> 🍕 zoffixznet++ merged pull request “Suggest enum values as types”: https://github.com/rakudo/rakudo/pull/1181

[01:22] <squashable6> 🍕 zoffixznet++ wrote a comment on “Suggest enum values as types”: https://github.com/rakudo/rakudo/pull/1181#issuecomment-334901223

[01:22] <Geth> ¦ rakudo/nom: 12774237a6 | (Daniel Green)++ | src/Perl6/World.nqp

[01:22] <Geth> ¦ rakudo/nom: Suggest enum values as types

[01:22] <Geth> ¦ rakudo/nom: 

[01:22] <Geth> ¦ rakudo/nom: Implements RT #123926, e.g., `enum E <Foo Bar>; sub x(Floo) {}` now says

[01:22] <Geth> ¦ rakudo/nom: `Invalid typename 'Floo' in parameter declaration. Did you mean 'Foo'?`

[01:22] <synopsebot> RT#123926 [new]: https://rt.perl.org/Ticket/Display.html?id=123926 [BUG] LTA error message without Levenshtein distance suggestion when mistyping enum value in signature in Rakudo

[01:22] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/12774237a6

[01:22] <Geth> ¦ rakudo/nom: f62ae60c48 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/Perl6/World.nqp

[01:22] <Geth> ¦ rakudo/nom: Merge pull request #1181 from MasterDuke17/RT123926

[01:22] <Geth> ¦ rakudo/nom: 

[01:22] <Geth> ¦ rakudo/nom: Suggest enum values as types

[01:22] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f62ae60c48

[01:24] *** Cabanossi left
[01:26] *** eliasr left
[01:26] *** Cabanossi joined
[01:34] *** purcell left
[01:37] *** Ven`` left
[01:40] *** Ven`` joined
[01:41] <SmokeMachine> about the language name discussion, didd anyone think about "Camelia Perl 6"?

[01:44] *** Ven`` left
[01:46] *** ilbot3 left
[01:47] *** zakame_ joined
[01:47] *** zakame_ left
[01:47] *** Ven`` joined
[01:49] *** zakame left
[01:53] <Zoffix> Yes, several people did.

[01:54] *** ilbot3 joined
[01:54] *** ChanServ sets mode: +v ilbot3

[01:54] *** Cabanossi left
[01:56] *** Cabanossi joined
[01:56] <Zoffix> Lots of people liking TimToady's "psix where p is silent if you want to" suggestion. "6lang" is ded, looks like (not many people supporting it and several pointed out the "slangs in Slang" sounds iffy... there's also S-lang already)

[02:00] <Zoffix> Also, it was pointed out to me the TimToady's "psix" thing referenced https://en.wikipedia.org/wiki/Psmith

[02:00] <AlexDaniel_> MasterDuke: maybe you should update https://rt.perl.org/Ticket/Display.html?id=123926

[02:02] <AlexDaniel_> well, it does not have to be pronounced as “slang”

[02:02] *** atroxaper joined
[02:02] *** ryn1x joined
[02:03] <AlexDaniel_> not sure how many people will see the Psmith reference

[02:03] <Zoffix> I like 6lang, but I'll take psix any day over nothing :) The one common suggestion I really dislike is "P6" as name

[02:03] <TEttinger> Peesix

[02:04] <Zoffix> Feels like an abbreviation that doesn't really solve the problem this whole thing is trying to solve.

[02:04] <AlexDaniel_> yea, and psix.org is registered so take psix.xxx instead…

[02:05] <TEttinger> sixuality, to compete with engines like unity

[02:05] <AlexDaniel_> SmokeMachine: however! Even though there's no final decision, people have started thinking into the right direction

[02:05] <Zoffix> and psix.party gives back the alliteration I had with perl6.party and was missing with rakudo.party and 6lang.party :)

[02:05] <Zoffix> .oO( clearly we should call the language "party" :P )

[02:06] <TEttinger> Hecate, a greek goddess of witchcraft and I think the origin of the word "hex" meaning a curse

[02:06] *** atroxaper left
[02:06] <TEttinger> any six-armed god or goddess

[02:06] <Zoffix> squashable6: status

[02:06] <squashable6> Zoffix, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈9 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[02:06] <squashable6> Zoffix, Log and stats: https://gist.github.com/c224c7f7fba16237500d299e52ed2b40

[02:08] <AlexDaniel_> m: "␤␤␤␤␤␤

[02:08] <camelia> rakudo-moar f62ae6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"'␤at <tmp>:7␤------> 3<BOL>7⏏5<EOL>␤    expecting any of:␤        double quotes␤        term␤»

[02:08] <Zoffix> We should name it "ytrap" :)

[02:08] <AlexDaniel_> locally “Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)”

[02:08] * Zoffix invisions a glorious "ytrap.party" logo

[02:09] <AlexDaniel_> and this resolves… half of the ticket… :S

[02:10] <ryn1x> What is the best way to make a GUI application with Perl6 right now? I see there is a GTK::Simple and GTK::Simpler... or maybe use a Perl5 modue?

[02:14] <HoboWithAShotgun> its a non issue, i deleted the crash comment and all is fine

[02:15] <MasterDuke> i love Wodehouse. Psmith, Jeeves & Wooster, the golf stories...all of them

[02:16] <MasterDuke> i made a silent "p" Tintin reference, but nobody seemed to catch it either

[02:16] <MasterDuke> AlexDaniel_: yeah, will update the RT, just trying to figure out if tests went in roast or rakudo

[02:19] *** mr-fooba_ joined
[02:21] *** mr-foobar left
[02:25] *** kerframil joined
[02:25] *** Cabanossi left
[02:26] *** Cabanossi joined
[02:26] *** Ven`` left
[02:27] <Geth> ¦ rakudo: skids++ created pull request #1182: Warn on typical precedence errors with infix:<..> (RT#127279)

[02:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1182

[02:27] <squashable6> 🍕 skids++ opened pull request “Warn on typical preceden…”: https://github.com/rakudo/rakudo/pull/1182

[02:27] <squashable6> 🍕🍕🍕  First contribution by skids++! ♥

[02:28] <synopsebot> RT#127279 [new]: https://rt.perl.org/Ticket/Display.html?id=127279 [BUG] Infinite loop with |"a".."z"

[02:30] *** zakame joined
[02:35] *** nadim_ left
[02:35] <Geth> ¦ rakudo/corresponding-starter: 279bae08a5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/Perl6/Grammar.nqp

[02:35] <Geth> ¦ rakudo/corresponding-starter: Mention corresponding starter in <, <<, « subscripts

[02:35] <Geth> ¦ rakudo/corresponding-starter: 

[02:35] <Geth> ¦ rakudo/corresponding-starter: Resolves part of RT #125641.

[02:35] <Geth> ¦ rakudo/corresponding-starter: 

[02:35] <synopsebot> RT#125641 [new]: https://rt.perl.org/Ticket/Display.html?id=125641 [LTA] error messages when right bracket is missing: $<> , <>, () and so on

[02:35] <Geth> ¦ rakudo/corresponding-starter: Wordy descriptions were substituted with actual symbols to make it

[02:35] <Geth> ¦ rakudo/corresponding-starter: more consistent with other error messages. Also, this way the error

[02:35] <Geth> ¦ rakudo/corresponding-starter: message is much shorter.

[02:35] <Geth> ¦ rakudo/corresponding-starter: review: https://github.com/rakudo/rakudo/commit/279bae08a5

[02:35] <Geth> ¦ rakudo/corresponding-starter: 6542bb8032 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[02:35] <Geth> ¦ rakudo/corresponding-starter: Mention corresponding starter for most of the things

[02:36] <Geth> ¦ rakudo/corresponding-starter: 

[02:36] <Geth> ¦ rakudo/corresponding-starter: This should handle quotes, parens, brackets, subscripts and many other

[02:36] <Geth> ¦ rakudo/corresponding-starter: things.

[02:36] <Geth> ¦ rakudo/corresponding-starter: 

[02:36] <Geth> ¦ rakudo/corresponding-starter: Resolves part of RT #125641.

[02:36] <Geth> ¦ rakudo/corresponding-starter: 

[02:36] <Geth> ¦ rakudo/corresponding-starter: Unfortunately I don't know how to print the actual starter, but as

[02:36] <Geth> ¦ rakudo/corresponding-starter: long as the line number is mentioned it's alright.

[02:36] <squashable6> 🍕 AlexDaniel++ opened pull request ““corresponding … was at” RT #125641”: https://github.com/rakudo/rakudo/pull/1183

[02:36] <Geth> ¦ rakudo/corresponding-starter: review: https://github.com/rakudo/rakudo/commit/6542bb8032

[02:36] <Geth> ¦ rakudo: AlexDaniel++ created pull request #1183: “corresponding … was at” RT #125641

[02:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1183

[02:40] *** noganex_ joined
[02:42] *** mr-fooba_ left
[02:42] *** atroxaper joined
[02:44] *** noganex left
[02:44] <squashable6> 🍕 AlexDaniel++ wrote a comment on ““corresponding … was at” RT #125641”: https://github.com/rakudo/rakudo/pull/1183#issuecomment-334905362

[02:45] <squashable6> 🍕 AlexDaniel++ edited pull request ““corresponding … was at” RT #125641”: https://github.com/rakudo/rakudo/pull/1183

[02:45] <synopsebot> RT#125641 [new]: https://rt.perl.org/Ticket/Display.html?id=125641 [LTA] error messages when right bracket is missing: $<> , <>, () and so on

[02:47] *** atroxaper left
[02:47] *** mr-foobar joined
[02:52] <Geth> ¦ roast: 3014999fcd | (Daniel Green)++ | S32-exceptions/misc.t

[02:52] <Geth> ¦ roast: Add test for suggesting enum values as types

[02:52] <Geth> ¦ roast: 

[02:52] <Geth> ¦ roast: For RT #123926.

[02:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3014999fcd

[02:52] <synopsebot> RT#123926 [new]: https://rt.perl.org/Ticket/Display.html?id=123926 [BUG] LTA error message without Levenshtein distance suggestion when mistyping enum value in signature in Rakudo

[02:59] <HoboWithAShotgun> class foo { }; sub EXPORT( $tag ) { require ::("bar"); return {}; }; 

[02:59] <HoboWithAShotgun> and then in a script: use foo <tag> croaks with

[02:59] <HoboWithAShotgun> Cannot find method 'EXISTS-KEY': no method cache and no .^find_method

[03:00] <squashable6> 🍕 AlexDaniel++ synchronize pull request ““corresponding … was at” RT #125641”: https://github.com/rakudo/rakudo/pull/1183

[03:00] <Geth> ¦ rakudo/corresponding-starter: a462d0a26e | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/Perl6/Grammar.nqp

[03:00] <Geth> ¦ rakudo/corresponding-starter: Cache some line numbers

[03:00] <synopsebot> RT#125641 [new]: https://rt.perl.org/Ticket/Display.html?id=125641 [LTA] error messages when right bracket is missing: $<> , <>, () and so on

[03:00] <HoboWithAShotgun> bar is just an empty class

[03:00] <Geth> ¦ rakudo/corresponding-starter: 

[03:00] <Geth> ¦ rakudo/corresponding-starter: MasterDuke++

[03:00] <Geth> ¦ rakudo/corresponding-starter: 

[03:00] <Geth> ¦ rakudo/corresponding-starter: https://irclog.perlgeek.de/perl6-dev/2017-10-07#i_15269029

[03:00] <Geth> ¦ rakudo/corresponding-starter: review: https://github.com/rakudo/rakudo/commit/a462d0a26e

[03:00] *** mr-foobar left
[03:07] *** mr-foobar joined
[03:10] *** skids left
[03:10] <HoboWithAShotgun> actually that should be : require($tag)

[03:12] *** atroxaper joined
[03:18] * HoboWithAShotgun just realized it's 5 am and he has been sitting here all night

[03:22] *** atroxaper left
[03:23] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1184: Use cached line numbers for token label

[03:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1184

[03:23] <squashable6> 🍕 MasterDuke17++ opened pull request “Use cached line numbers for token label”: https://github.com/rakudo/rakudo/pull/1184

[03:23] *** Aaronepower left
[03:39] *** HoboWithAShotgun left
[03:52] *** Cabanossi left
[03:55] *** Cabanossi joined
[04:02] <AlexDaniel_> .tell TimToady cursor issue, maybe you know something about it (see my comment). RT #125674

[04:02] <yoleaux> AlexDaniel_: I'll pass your message to TimToady.

[04:02] <synopsebot> RT#125674 [new]: https://rt.perl.org/Ticket/Display.html?id=125674 [LTA] error message prints wrong eject position (if True if { };)

[04:12] *** konsolebox left
[04:15] *** konsolebox joined
[04:23] *** Cabanossi left
[04:25] *** Cabanossi joined
[04:32] <AlexDaniel_> m: say ‘hello’ ~~ / <?before $<x>=h> {say $<x> } .*/

[04:32] <camelia> rakudo-moar f62ae6: OUTPUT: «Nil␤｢hello｣␤»

[04:32] <AlexDaniel_> is it possible to pull matched data from <before > somehow?

[04:33] *** BenGoldberg left
[04:34] *** troys_ is now known as troys

[04:35] <u-ou> hi

[04:40] * AlexDaniel_ looks at https://github.com/ShimmerFairy/grammar-parsefail

[04:54] *** evalable6 left
[04:54] *** evalable6 joined
[04:54] *** ChanServ sets mode: +v evalable6

[04:55] <ryn1x> Has anyone tried using perl6 on codechef.com?  I can't get it to not timeout on me. 

[05:06] <ryn1x> First problem on the site: https://www.codechef.com/problems/C00K0FF 

[05:14] *** evalable6 left
[05:14] *** evalable6 joined
[05:24] *** Cabanossi left
[05:25] *** Cabanossi joined
[05:27] *** committable6 left
[05:27] *** committable6 joined
[05:27] *** ChanServ sets mode: +v committable6

[05:47] *** evalable6 left
[05:47] *** evalable6 joined
[05:55] *** kaare_ joined
[06:05] *** troys left
[06:14] *** AlexDaniel_ left
[06:22] *** ryn1x left
[06:22] *** Cabanossi left
[06:25] *** ryn1x joined
[06:25] *** Cabanossi joined
[06:29] *** mudman joined
[06:31] <mudman> squashable: next

[06:31] <squashable6> mudman, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈5 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:31] <squashable6> mudman, Log and stats: https://gist.github.com/2e7ab37b410429b6004f6675c353b5cf

[06:33] *** hoffentlichja joined
[06:34] *** ryn1x left
[06:40] <squashable6> 🍕 mryan++ self-assigned issue “Investigate absence of tests for :dba adverb”: https://github.com/perl6/roast/issues/238

[06:40] <squashable6> 🍕🍕🍕  First contribution by mryan++! ♥

[06:40] *** Wiertek joined
[07:00] *** statisfiable6 left
[07:00] *** committable6 left
[07:00] *** bloatable6 left
[07:00] *** releasable6 left
[07:00] *** coverable6 left
[07:00] *** quotable6 left
[07:00] *** squashable6 left
[07:00] *** unicodable6 left
[07:00] *** greppable6 left
[07:00] *** bisectable6 left
[07:00] *** evalable6 left
[07:00] *** nativecallable6 left
[07:00] *** benchable6 left
[07:01] *** quotable6 joined
[07:01] *** ChanServ sets mode: +v quotable6

[07:01] *** benchable6 joined
[07:01] *** ChanServ sets mode: +v benchable6

[07:01] *** coverable6 joined
[07:01] *** committable6 joined
[07:01] *** greppable6 joined
[07:01] *** nativecallable6 joined
[07:01] *** releasable6 joined
[07:01] *** ChanServ sets mode: +v releasable6

[07:01] *** bisectable6 joined
[07:01] *** evalable6 joined
[07:01] *** bloatable6 joined
[07:01] *** ChanServ sets mode: +v bisectable6

[07:01] *** ChanServ sets mode: +v evalable6

[07:01] *** ChanServ sets mode: +v bloatable6

[07:01] *** unicodable6 joined
[07:01] *** ChanServ sets mode: +v unicodable6

[07:01] *** squashable6 joined
[07:01] *** statisfiable6 joined
[07:04] *** mcsnolte left
[07:06] *** margeas joined
[07:09] *** domidumont joined
[07:10] *** wamba joined
[07:14] *** domidumont left
[07:15] *** domidumont joined
[07:18] *** robertle joined
[07:21] *** bwisti left
[07:32] *** ryn1x joined
[07:40] *** domidumont left
[07:40] *** domidumont joined
[07:41] *** konsolebox left
[07:45] *** darutoko joined
[07:51] *** lancew joined
[07:54] *** Merfont left
[07:55] *** r3m left
[07:56] *** HoboWithAShotgun joined
[08:03] *** okl joined
[08:05] *** ryn1x left
[08:09] *** mudman left
[08:12] *** okl left
[08:19] *** mudman joined
[08:33] *** smls joined
[08:37] *** hankache joined
[08:38] *** parv joined
[08:39] *** hankache_ joined
[08:41] *** mudman left
[08:41] *** konsolebox joined
[08:41] *** hankache_ left
[08:42] *** hankache left
[08:43] *** domidumont left
[08:47] *** hankache joined
[08:52] <buggable> New CPAN upload: IRC-Client-Plugin-Github-0.1.2.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/IRC-Client-Plugin-Github-0.1.2.tar.gz

[08:53] <tyil> \o/

[08:53] *** nadim_ joined
[08:56] *** mudman joined
[09:02] <tyil> samcv: since youre co-author on Hash::Merge, which I'm gonna add to CPAN, you should request a PAUSE ID so I can give you maintainer rights

[09:02] <buggable> New CPAN upload: Config/Config-1.2.1.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Config/Config-1.2.1.tar.gz

[09:03] *** ryn1x joined
[09:06] *** lancew left
[09:10] *** hlafarge joined
[09:12] <buggable> New CPAN upload: Config-Parser-toml/Config-Parser-toml-1.0.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Config-Parser-toml/Config-Parser-toml-1.0.0.tar.gz

[09:12] <buggable> New CPAN upload: Config-Parser-yaml/Config-Parser-yaml-1.0.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Config-Parser-yaml/Config-Parser-yaml-1.0.0.tar.gz

[09:12] <buggable> New CPAN upload: Hash-Merge/Hash-Merge-0.1.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Hash-Merge/Hash-Merge-0.1.0.tar.gz

[09:12] <buggable> New CPAN upload: MPD-Client/MPD-Client-0.1.2.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/MPD-Client/MPD-Client-0.1.2.tar.gz

[09:19] <smls> m: say "abc" ~~ / :r || abc /;

[09:19] <camelia> rakudo-moar f62ae6: OUTPUT: «｢｣␤»

[09:20] <smls> ^^ Is it intended that a branch containing nothing but a modifier, is considered a non-forbidden null regex?

[09:21] <smls> i.e. neither throws a "null regex forbidden" exception, nor treats it like  / || abc /  ?

[09:23] *** Cabanossi left
[09:24] *** hlafarge left
[09:24] <tyil> anyone working on https://github.com/perl6/roast/issues/118 yet?

[09:25] *** Cabanossi joined
[09:28] *** profan left
[09:29] *** mudman left
[09:30] *** mephinet left
[09:30] *** reu left
[09:34] *** ryn1x left
[09:36] <squashable6> 🍕 Tyil++ opened pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[09:36] <squashable6> 🍕🍕🍕  First contribution by Tyil++! ♥

[09:36] <Geth> ¦ roast: Tyil++ created pull request #342: WIP: Expand file tests

[09:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/342

[09:38] *** lancew joined
[09:45] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[09:52] *** hlafarge joined
[09:53] *** Cabanossi left
[09:53] *** xinming joined
[09:55] *** Cabanossi joined
[10:09] *** domidumont joined
[10:10] *** flatwhite joined
[10:11] *** domidumont left
[10:11] *** domidumont joined
[10:13] *** andrzejku joined
[10:13] *** kerframil left
[10:14] *** flatwhite is now known as kerframil

[10:20] *** lancew left
[10:21] *** hoffentlichja left
[10:26] *** hoffentlichja joined
[10:26] *** leont joined
[10:31] *** ryn1x joined
[10:36] *** thou joined
[10:38] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[10:41] <squashable6> 🍕 lizmat++ merged pull request “Warn on typical preceden…”: https://github.com/rakudo/rakudo/pull/1182

[10:41] <Geth> ¦ rakudo/nom: 26bdc95c78 | skids++ | 2 files

[10:41] <Geth> ¦ rakudo/nom: Warn on typical precedence errors with infix:<..> (RT#127279)

[10:41] <Geth> ¦ rakudo/nom: 

[10:41] <synopsebot> RT#127279 [open]: https://rt.perl.org/Ticket/Display.html?id=127279 [BUG] Infinite loop with |"a".."z"

[10:41] <Geth> ¦ rakudo/nom: Alerts user to potential accidental use of prefix:<|> or

[10:41] <Geth> ¦ rakudo/nom:   prefix:<~> on a range start value, when they are usually intended

[10:41] <Geth> ¦ rakudo/nom:   to apply to the entire range, and encourages use of parens.

[10:41] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/26bdc95c78

[10:41] <Geth> ¦ rakudo/nom: cb9d2e040d | lizmat++ (committed using GitHub Web editor) | 2 files

[10:42] <Geth> ¦ rakudo/nom: Merge pull request #1182 from skids/rt127279

[10:42] <Geth> ¦ rakudo/nom: 

[10:42] <Geth> ¦ rakudo/nom: Warn on typical precedence errors with infix:<..> (RT#127279)

[10:42] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cb9d2e040d

[10:43] <thou> Is it possible to define new named character classes, to allow something like:  / <- forbidden - space > /  # Custom class `forbidden`

[10:44] *** zakame left
[10:45] <thou> I found method definitions for xdigit, punct, etc. in nqp/src/QRegex/Cursor.nqp , but that doesn't look to be an extensible mechanism, and I'm not sure it's what's used for character classes

[10:48] *** hlafarge left
[10:57] <Zoffix> You can define your own regexes. Don't know about character classes

[10:57] <Zoffix> m: my regex forbidden { <-[meow]> }; say "foomebarowzziimeow" ~~ m:g/<forbidden>/

[10:57] <camelia> rakudo-moar cb9d2e: OUTPUT: «(｢f｣␤ forbidden => ｢f｣ ｢b｣␤ forbidden => ｢b｣ ｢a｣␤ forbidden => ｢a｣ ｢r｣␤ forbidden => ｢r｣ ｢z｣␤ forbidden => ｢z｣ ｢z｣␤ forbidden => ｢z｣ ｢i｣␤ forbidden => ｢i｣ ｢i｣␤ forbidden => ｢i…»

[10:58] <Zoffix> m: my regex forbidden { <-[meow]> }; say "foomebarowzziimeow".subst: /<forbidden>/, '', :g

[10:58] <camelia> rakudo-moar cb9d2e: OUTPUT: «oomeowmeow␤»

[11:00] <Zoffix> AlexDaniel: I only know of a really hackish way: https://irclog.perlgeek.de/perl6/2017-09-25#i_15213470

[11:04] *** ryn1x left
[11:07] <Zoffix> :/ target parse is now in the 90s on this box :\

[11:07] *** thou left
[11:10] *** rindolf joined
[11:12] *** eliasr joined
[11:13] <Zoffix> Hm. One thing modules site really needs is CPAN parser to fish out repo URL and make a button for it...

[11:13] <Zoffix> (fish out from META)

[11:14] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[11:16] *** BenGoldberg joined
[11:17] *** thou joined
[11:23] *** Cabanossi left
[11:25] *** Cabanossi joined
[11:26] <squashable6> 🍕 zoffixznet++ submitted a review on pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342#pullrequestreview-67831081

[11:26] <squashable6> 🍕 zoffixznet++ wrote a comment on a review for “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342#discussion_r143328676

[11:26] <squashable6> 🍕 zoffixznet++ edited a review on pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342#pullrequestreview-67831081

[11:27] <Zoffix> sure, sure, betray that I clicked the wrong button, robot.

[11:27] <Zoffix> I know where your sources are!

[11:28] <timotimo> .o( betrayable )

[11:30] *** TEttinger left
[11:31] *** llfourn left
[11:34] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[11:36] <Zoffix> .tell AlexDaniel FWIW jnthn++ said we'll likely make ». autothread only is pure routines, so no shuffling is really needed: https://rt.perl.org/Ticket/Display.html?id=130485#ticket-history

[11:36] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[11:38] <thou> Zoffix, thanks. Maybe named character classes are a rare case of something that isn't easily added to! I don't see any mention of it in S05 either, so it wasn't a desired feature or it was rejected for good reason.

[11:39] *** grondilu left
[11:40] <Zoffix> m: my regex forbidden { <-[meow]> }; say "foobar" ~~ /<[\w] -digit -space>/

[11:40] <camelia> rakudo-moar cb9d2e: OUTPUT: «｢f｣␤»

[11:40] <Zoffix> m: my regex forbidden { <-[meow]> }; say "foobar" ~~ /<[\w] -forbidden -digit -space>/

[11:40] <camelia> rakudo-moar cb9d2e: OUTPUT: «No such method 'forbidden' for invocant of type 'Match'␤  in block <unit> at <tmp> line 1␤␤»

[11:41] <Zoffix> thou: I bet the code that goes out to look for lexical regexes just needs to be trained to look for them in ^ this case too. This will work in a grammar, for example

[11:42] <Zoffix> m: grammar { token TOP { <[\w] -forbidden -digit -space>+ }; regex forbidden { <-[meow]> } }.parse("kwak").say

[11:42] <camelia> rakudo-moar cb9d2e: OUTPUT: «Nil␤»

[11:42] *** leont left
[11:42] <Zoffix> m: grammar { token TOP { <[\w] -forbidden -digit -space>+ }; regex forbidden { <-[meow]> } }.parse("kak").say

[11:42] <camelia> rakudo-moar cb9d2e: OUTPUT: «Nil␤»

[11:42] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[11:42] <Zoffix> fine, be that way

[11:43] <tyil> Zoffix: I added the Test::Util and use lib <> as you suggested, but when trying to run the test locally it fails due to no Test::Util

[11:44] <Zoffix> tyil: how are you running it locally?

[11:44] <tyil> perl6 S32-io/file-tests.t

[11:44] <tyil> do I need a -I to the dir containing Test::Util?

[11:45] * HoboWithAShotgun drools in chocolate peach cake and will keep all for himself

[11:45] <MasterDuke> -I packages i think

[11:45] <timotimo> look at the other files that use Test::Util

[11:45] <timotimo> they all have a "use lib" i believe

[11:45] <Zoffix> tyil: the usual way is to run from from rakudo's checkout where it clones the roast into t/spec, so you'd run tests with `t/fudgeandrun t/spec/S32-io/file-tests.t` and it'd find the file.

[11:45] *** thundergnat joined
[11:45] <tyil> MasterDuke: with -I packages works

[11:46] <Zoffix> ZOFVM: Files=1277, Tests=152587, 179 wallclock secs (22.37 usr  3.36 sys + 3423.69 cusr 187.30 csys = 3636.72 CPU)

[11:46] <Zoffix> That's still with the stress.t slowdown, so looks like it got better (or maybe just varies)

[11:47] *** xtreak joined
[11:47] *** wamba left
[11:47] <tyil> hmm

[11:48] <tyil> with the new tempfiles, 3 tests are failing in .s

[11:48] <thundergnat> .tell Xliff_ re: "Useless use of constant value next..." Are you possibly using an old version of Inline::Perl5? See: https://github.com/niner/Inline-Perl5/issues/92

[11:48] <yoleaux> thundergnat: I'll pass your message to Xliff_.

[11:50] <Geth> ¦ rakudo/nom: 4868e9271a | (Zoffix Znet)++ | 2 files

[11:50] <Geth> ¦ rakudo/nom: Remove dead code for `use v5`

[11:50] <Geth> ¦ rakudo/nom: 

[11:50] <Geth> ¦ rakudo/nom: Dies while complaining about missing `Perl5` module. A thought occured

[11:50] <Geth> ¦ rakudo/nom: to make it load Inline::Perl5, but felt like useless magic, so I

[11:50] <Geth> ¦ rakudo/nom: removed the code entirely and just make it complain there's no

[11:50] <Geth> ¦ rakudo/nom: compiler for v5, like it'd do for `use v6.z`

[11:50] <Geth> ¦ rakudo/nom: 

[11:50] <Geth> ¦ rakudo/nom: Fixes RT#130834: https://rt.perl.org/Ticket/Display.html?id=130834

[11:50] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4868e9271a

[11:50] <synopsebot> RT#130834 [open]: https://rt.perl.org/Ticket/Display.html?id=130834 Is `use v5` still a thing?

[11:53] <Zoffix> tyil: which ones?

[11:53] *** Rawriful joined
[11:54] <Zoffix> tyil: `zero => make-temp-file,` <= this doesn't create the actual file. Only if you give it `:chmod` or `:content` 

[11:54] <tyil> ah

[11:54] <Zoffix> (empty content with  :content('') will work)

[11:55] <tyil> :content() also seems to work

[11:56] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[11:56] <tyil> these tests seem to all work

[11:59] <MasterDuke> Zoffix: i'm envious of your times: Files=1214, Tests=75453, 621 wallclock secs (20.32 usr  2.71 sys + 3844.24 cusr 163.04 csys = 4030.31 CPU)

[12:00] <Zoffix> $ lscpu | grep 'CPU(s):'

[12:00] <Zoffix> CPU(s):                24

[12:00] <MasterDuke> that would make a difference

[12:01] <thou> Zoffix, I think it's tricky because (naively, to me) it seems it shouldn't allow general regexes that could match other than exactly one grapheme.   my regex badclass { 'abc' };  / <- badclass >+ / # Doesn't make sense

[12:01] *** ryn1x joined
[12:01] <Zoffix> thou: ah, right

[12:01] <MasterDuke> but still, spectest is now about twice as slow as it used to be

[12:03] *** leont joined
[12:04] <lizmat> MasterDuke: if you run the spectest with MVM_SPESH_DISABLE=1, you'll see it is much faster again

[12:04] <Zoffix> 'cause there's a deficiency in the new nursery resizer

[12:04] *** xtreak left
[12:04] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[12:04] <Zoffix> Was part of the same bunch of issues that made lock.t hang

[12:05] <tyil> Zoffix: I want to add tests for .modified, .accessed, .changed and .mode

[12:05] <MasterDuke> lizmat: ah, i saw your comments with jnthn, but forgot. trying that now

[12:05] <tyil> .mode should be easy, but is there a way I can set the modified, accessed and changed time from within the tests?

[12:05] *** hankache_ joined
[12:06] <Zoffix> tyil: no idea; I think some systems won't update those values all the time. There should be _some_ tests for those methods, so `grep -FR '.modified`` and see how those tests do it.

[12:06] * Zoffix & # breakfsast

[12:06] *** hankache left
[12:06] <tyil> alright

[12:08] *** parv left
[12:09] *** hankache joined
[12:10] *** hankache_ left
[12:11] *** kaare_ left
[12:11] <tyil> filestat already tests if they update correctly, so I could get away just testing if they return the correct types and whether they die

[12:16] *** hankache left
[12:18] <Zoffix> tyil: IIRC they should be failing, not dieing. That Test::Util module has `fails-like` routine. It's the same as `throws-like` except it also checks the tested code returns a Failure instead of throwing

[12:18] <tyil> neat

[12:19] <tyil> I used throws-like because thats what the rest of the tests in here were using

[12:19] <tyil> I'll update them all to use fails-like

[12:19] <Zoffix> tyil++

[12:20] <Geth> ¦ rakudo/full-make-test: 50 commits pushed by (Zoffix Znet)++, skids++, (Elizabeth Mattijsen)++, (Jonathan Worthington)++, (Patrick Spek)++, (Samantha McVey)++, (Daniel Green)++

[12:20] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/compare/c6ff787a67...54d5096732

[12:21] <Zoffix> heh, looks like squashable counted those as new contributions :)

[12:22] <Geth> ¦ modules.perl6.org/complain_travis_build-panda: 78b69a5143 | (Timo Paulssen)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p30METAChecker.pm

[12:22] <Geth> ¦ modules.perl6.org/complain_travis_build-panda: complain if the travis config contains "rakudobrew build panda"

[12:22] <Geth> ¦ modules.perl6.org/complain_travis_build-panda: review: https://github.com/perl6/modules.perl6.org/commit/78b69a5143

[12:23] <Zoffix> .tell AlexDaniel squshable's log made need pruning. It counted 50 commits were added, when I just synced a branch: https://gist.github.com/Whateverable/ccfa0f6049c1b7e8c8651f332aeb2015#file-log-L73

[12:23] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[12:23] <Geth> ¦ modules.perl6.org: timo++ created pull request #86: complain if the travis config contains "rakudobrew build panda"

[12:23] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/pull/86

[12:23] <Zoffix> s/made/may/;

[12:23] *** Cabanossi left
[12:25] *** Cabanossi joined
[12:25] <MasterDuke> with MVM_SPESH_DISABLE=1: Files=1214, Tests=75453, 561 wallclock secs (18.99 usr  2.81 sys + 3467.57 cusr 108.76 csys = 3598.13 CPU)

[12:26] <Zoffix> timotimo: does that work? I'd expect travis files to be there

[12:26] <Zoffix> *not be there

[12:26] <timotimo> ?

[12:26] <timotimo> if there's no travis file it just returns

[12:26] <Zoffix> timotimo: only readme is fetched: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p05DataFetcher.pm

[12:26] <timotimo> aha!

[12:26] <timotimo> i was looking for a place that decided what to fetch

[12:27] <timotimo> so that'd be another http request?

[12:27] *** RabidGravy joined
[12:27] <RabidGravy> BOO!

[12:27] <yoleaux> 29 Aug 2017 15:24Z <Zoffix> RabidGravy: does HTTP::UserAgent support socks5 proxy? I see some mention of HTTP proxy in source and nothing in docs and nothing about socks proxies

[12:27] <Zoffix> timotimo: yeah. Or as japhb suggested, we could just keep local versions of dists and rake those

[12:27] <timotimo> hm, that doesn't go via pithub, that just straight up webrequests

[12:28] <timotimo> huh. that sends our github token to whatever url the file is from?

[12:28] <Zoffix> timotimo: oh and all the dirs you saw in /tmp. That sounds like a bug, probably in CPAN dist source that creates a temp dir to process each dist... but I thought it was meant to auto-remove them (via File::Temp)

[12:29] <Zoffix> timotimo: yeah, without token, github cuts it off; says too many requests

[12:29] <timotimo> well, yeah, but we might also be fetching readme files from cpan or something?

[12:29] <timotimo> nice to see you RabidGravy :)

[12:29] <lizmat> RabidGravy o/

[12:29] <RabidGravy> eh up!

[12:30] <RabidGravy> I have a very weird thing here, as recently as 6 August https://github.com/jonathanstowe/Sofa/blob/master/lib/Sofa/Item.pm worked fine 

[12:31] <Zoffix> timotimo: yeah, that's a bit LTA, but IIRC only GitHub dist source fills that out: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm#L113-L116

[12:31] <Zoffix> timotimo: FWIW, this ass-backwards business with DataFetcher postprocessor is to save on GitHub requests and another reason to switch to local checkouts of dists

[12:32] <RabidGravy> now if I do e.g. "perl6 -Ilib -e'use Sofa::Item; class Foo is sofa-path("_foo") { }'" it gives "===SORRY!===

[12:32] <RabidGravy> Cannot find method 'Sofa::Item::MetamodelX::ClassHOW' on object of type Sofa::Item::MetamodelX::ClassHOW"

[12:32] * Zoffix is getting distracted from squashathon again :)

[12:32] <timotimo> Zoffix: a local cache and proper use of "If-Modified-Since" or what should make things a bunch better already?

[12:32] <timotimo> sorry!

[12:32] <timotimo> it was a bad time for me to start doing stuff to modules.perl6.org :)

[12:32] <Zoffix> hehe

[12:32] * Zoffix &

[12:32] *** Zoffix left
[12:33] <RabidGravy> and if I remove the attribute from the class I get "Unhandled exception: Cannot find method 'submethod_table' on object of type NQPClassHOW"

[12:33] <lizmat> RabidGravy: could you gist a full stack trace ?

[12:34] <MasterDuke> so MVM_SPESH_DISABLE=1 is 80s faster, but i'm pretty sure a spectest used to take ~330s, so it's still about 3m slower now

[12:34] <RabidGravy> lizmat the former case doesn't give a stack trace at all

[12:34] <lizmat> :-(

[12:34] *** ryn1x left
[12:35] <MasterDuke> btw, anybody mind committing https://github.com/rakudo/rakudo/pull/1184 ?

[12:36] <RabidGravy> lizmat, the latter case is https://gist.github.com/jonathanstowe/9724d7fe280cfa8e2cf6e6bc536dd042

[12:37] <lizmat> :-(  that doesn't ring a bell with me  :-(

[12:39] <MasterDuke> we should be able to bisect that with bisectable

[12:39] <RabidGravy> Oh wait, it does give a stack trace with --ll-exceptiion

[12:39] <RabidGravy> just updated the gist

[12:41] *** rba_ joined
[12:41] <MasterDuke> oh hm, maybe not, i don't see Sofa in moritz's perl6-all-modules

[12:41] <RabidGravy> it's not released as yet, I've been too slack to write the POD ;=)

[12:42] <dogbert2> lizmat: could it be some BUILDALL regression?

[12:42] <lizmat> yeah, that's why I was looking at it

[12:42] <lizmat> but the stack trace doesn't point in that direction

[12:42] <lizmat> or does it?

[12:42] <lizmat> hmmm

[12:42] <dogbert2> did you check the second file

[12:42] *** rba left
[12:43] <lizmat> yeah

[12:43] <squashable6> 🍕 Tyil++ synchronize pull request “WIP: Expand file tests”: https://github.com/perl6/roast/pull/342

[12:43] <dogbert2>  from gen/moar/stage2/NQPCORE.setting:521 (/home/jonathan/.rakudobrew/moar-nom/install/share/nqp/lib/NQPCORE.setting.moarvm:BUILDALL)

[12:44] <lizmat> yeah, but that's an NQP BUILDALL 

[12:44] <squashable6> 🍕 Tyil++ edited pull request “Expand file tests”: https://github.com/perl6/roast/pull/342

[12:44] <lizmat> auto-generated BUILDALL only live in HLL

[12:44] <RabidGravy> I remember ages ago someone suggesting that putting attributes in Metaclass things wasn't a good idea, but I can't remember why

[12:44] <squashable6> 🍕 Tyil++ edited pull request “Expand file tests”: https://github.com/perl6/roast/pull/342

[12:44] *** lancew joined
[12:44] *** ShalokShalom_ joined
[12:44] <dogbert2> and that's not what you've been working on, my bad then

[12:44] *** itaipu joined
[12:45] <lizmat> dogbert2: well, maybe things leak into each other

[12:45] *** nadim_ left
[12:46] <lizmat> hmmm... I don't seem to have a gen/moar/stage2/NQPCORE.setting ??

[12:47] *** rba joined
[12:47] <dogbert2> MasterDuke: wrt spectest, there are a couple of tests that bring down the speed of the entire process quite a bit due to a bug

[12:47] <lizmat> dogbert2: which bug?

[12:47] *** ShalokShalom left
[12:48] <dogbert2> only mentioned on irc, not officially reported though

[12:48] <Geth> ¦ rakudo/full-make-test: 6757f93473 | (Zoffix Znet)++ | t/02-rakudo/01-is_approx.t

[12:48] <Geth> ¦ rakudo/full-make-test: Fix up t/02-rakudo/01-is_approx.t tests

[12:48] <Geth> ¦ rakudo/full-make-test: 

[12:48] <Geth> ¦ rakudo/full-make-test: The author of planck tests wrote them without any regard to `e-34`

[12:48] <Geth> ¦ rakudo/full-make-test: part of the number and adjusted the numbers in the decimal portion

[12:48] <Geth> ¦ rakudo/full-make-test: alone, expecting changes to be of 1e-5 magnitude when they were

[12:48] <Geth> ¦ rakudo/full-make-test: actually of 1e-39 magnitude.

[12:48] <Geth> ¦ rakudo/full-make-test: 

[12:48] <Geth> ¦ rakudo/full-make-test: Fix by shifting the original value by expected differences instead.

[12:48] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/commit/6757f93473

[12:48] <dogbert2> lizmat: but it involved the speed of this test: t/spec/S17-promise/lock-async.t

[12:49] *** rba_ left
[12:51] <dogbert2> it should only take a few seconds

[12:51] <MasterDuke> dogbert2: ah right, you noticed something about the number of locks or threads or something causing the change?

[12:51] <squashable6> 🍕 zoffixznet++ merged pull request “Expand file tests”: https://github.com/perl6/roast/pull/342

[12:52] <Geth> ¦ roast: 4f224ec562 | (Patrick Spek)++ (committed by Zoffix Znet) | S32-io/file-tests.t

[12:52] <Geth> ¦ roast: Expand file tests (#342)

[12:52] <Geth> ¦ roast: 

[12:52] <Geth> ¦ roast: * Use subtests

[12:52] <Geth> ¦ roast: 

[12:52] <Geth> ¦ roast: * Add tests for .d

[12:52] <Geth> ¦ roast: 

[12:52] <Geth> ¦ roast: * Add tests for IO.l

[12:52] <Geth> ¦ roast: <…commit message has 34 more lines…>

[12:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4f224ec562

[12:52] <dogbert2> yes, changinf the 'xx' lines to say 2 improves things considerably at least on my system

[12:53] <squashable6> 🍕 zoffixznet++ wrote a comment on “Expand file tests”: https://github.com/perl6/roast/pull/342#issuecomment-334933131

[12:53] <dogbert2> I think total spectest time went down ~20s

[12:54] *** Cabanossi left
[12:55] <tyil> .tell zoffix thanks for the tip :>

[12:55] <yoleaux> tyil: I'll pass your message to zoffix.

[12:55] *** Cabanossi joined
[12:58] *** domidumont left
[12:59] *** Skarsnik joined
[12:59] <Geth> ¦ rakudo/full-make-test: 0d5bb9097a | (Zoffix Znet)++ | t/02-rakudo/dump.t

[12:59] <Geth> ¦ rakudo/full-make-test: Fudge failing tests

[12:59] <Geth> ¦ rakudo/full-make-test: 

[12:59] <Geth> ¦ rakudo/full-make-test: Not sure there's any point in fixing this, since it's not part of the

[12:59] <Geth> ¦ rakudo/full-make-test: language and we already got `dd` and language-wise we got `.perl`

[12:59] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/commit/0d5bb9097a

[13:00] <Geth> ¦ rakudo/full-make-test: 93c4555db3 | (Zoffix Znet)++ | t/02-rakudo/dump.t

[13:00] <Geth> ¦ rakudo/full-make-test: Unfudge now-passing test

[13:00] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/commit/93c4555db3

[13:01] *** rba_ joined
[13:01] *** wamba joined
[13:02] <RabidGravy> Anyhow I've worked round the above weirdness by making it a role with an explicitly defined accessor for the attribute

[13:03] *** rba left
[13:03] <lizmat> RabidGravy: please rakudobug  :-)

[13:10] *** ChoHag left
[13:14] *** mephinet joined
[13:15] <Geth> ¦ roast: c4d7af0c4d | (Zoffix Znet)++ | 2 files

[13:15] <Geth> ¦ roast: Toss is_run_repl helper routine

[13:15] <Geth> ¦ roast: 

[13:15] <Geth> ¦ roast: It's not used anywhere and all but the basic sanity REPL tests have

[13:15] <Geth> ¦ roast: been moved to rakudo's test suite

[13:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c4d7af0c4d

[13:16] *** lancew left
[13:16] <dogbert2> Zoffix: RT #125170 seems to have been fixed, do you think it happened during your IO grant work?

[13:16] <synopsebot> RT#125170 [new]: https://rt.perl.org/Ticket/Display.html?id=125170 [BUG] Cannot read from a file opened with open(:rw) in Rakudo

[13:16] *** thou left
[13:16] *** reu joined
[13:17] *** rba joined
[13:17] *** pilne joined
[13:19] *** rba_ left
[13:24] *** Cabanossi left
[13:25] <Geth> ¦ rakudo/full-make-test: 78eca2141d | (Zoffix Znet)++ | 2 files

[13:25] <Geth> ¦ rakudo/full-make-test: Start making repl tests work

[13:25] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/commit/78eca2141d

[13:25] *** Cabanossi joined
[13:26] *** lancew joined
[13:27] *** skids joined
[13:28] *** piojo joined
[13:31] *** ryn1x joined
[13:31] *** rba_ joined
[13:34] *** rba left
[13:34] <RabidGravy> I can tell how vastly popular the GDBM module was as I released it without the required "resources" entry and no-one noticed ;-)

[13:35] <timotimo> RabidGravy: your module was the first time i heard about this database thing

[13:36] <RabidGravy> it was all the rage before memcached came along ;-)

[13:36] <RabidGravy> you yoofs have never lived

[13:36] <timotimo> hah, yeah

[13:37] *** zakame joined
[13:41] * lizmat remembers GDBM  :-)

[13:41] <lizmat> also that it wasn't threadsafe (at least then)

[13:45] <timotimo> tyil: will you throw the cpanified dists out of the ecosystem META.list?

[13:45] *** smls_ joined
[13:46] <tyil> timotimo: sure :>

[13:46] <robertle> does anyone understand the implications of GPL-licensed libraries on e.g. perl6 code that binds to them?

[13:46] <tyil> timotimo: is it a problem if I do that later today?

[13:46] <Skarsnik> LGPL or GPL?

[13:46] <robertle> GPL, just wondering because of GDBM...

[13:46] *** rba joined
[13:47] <timotimo> tyil: of course not :)

[13:47] *** piojo left
[13:47] <timotimo> i suddenly got obsessed with the modules.perl6.org update process taking too long

[13:47] <Skarsnik> I think the GPL faq has something for that. if I remember correclty using the API mean your code should be GPL or compatible

[13:47] *** piojo joined
[13:48] *** smls left
[13:49] <robertle> Skarsnik: that''s what I think too, also based on the fact that the libstdc++ has a special clause to allow dynamic linking against it without making the software using it GPL

[13:49] *** rba_ left
[13:49] <robertle> which could mean that a perl6 module that provides GDBM bindings would need to be GPL as well

[13:49] <robertle> not sure

[13:50] *** cdg joined
[13:51] <Skarsnik> GPLv3 FaQ is very complete

[13:53] *** Cabanossi left
[13:53] *** itaipu left
[13:53] <RabidGravy> lizmat, #132236

[13:53] <synopsebot> RT#132236 [new]: https://rt.perl.org/Ticket/Display.html?id=132236 Possible regression in Meta object construction

[13:53] <lizmat> RabidGravy: thanks

[13:55] *** Cabanossi joined
[13:56] <lancew> Hi all, what repo is the target for squashathon?

[13:58] <Skarsnik> rakudo

[13:58] *** Wiertek left
[13:59] *** kaare_ joined
[13:59] <Skarsnik> squashable6, info

[13:59] <squashable6> Skarsnik, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈21 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:00] <squashable6> Skarsnik, Log and stats: https://gist.github.com/b5d4f1466ca13b411d4d115f343c2da5

[14:00] <RabidGravy> I also suspect that gdbm isn't particularly threadsafe

[14:00] *** tushar_ joined
[14:00] <RabidGravy> I probably haven't help much with the wrapper I made

[14:01] <HoboWithAShotgun> how do i know the current line separator? what say appends to its argument

[14:01] *** rba_ joined
[14:01] <timotimo> m: say $*OUT.nl-out

[14:01] <camelia> rakudo-moar 4868e9: OUTPUT: «␤␤»

[14:02] <timotimo> that should be it

[14:02] <Geth> ¦ roast: skids++ created pull request #343: Add tests for new range precedence worries (RT#127279)

[14:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/343

[14:02] <squashable6> 🍕 skids++ opened pull request “Add tests for new range …”: https://github.com/perl6/roast/pull/343

[14:02] <synopsebot> RT#127279 [open]: https://rt.perl.org/Ticket/Display.html?id=127279 [BUG] Infinite loop with |"a".."z"

[14:02] <squashable6> 🍕 skids++ merged pull request “Add tests for new range …”: https://github.com/perl6/roast/pull/343

[14:02] <Geth> ¦ roast: 9d56ba1e58 | skids++ | S03-operators/range.t

[14:02] <Geth> ¦ roast: Add tests for new range precedence worries (RT#127279)

[14:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9d56ba1e58

[14:02] <Geth> ¦ roast: 6e9bab5de4 | skids++ (committed using GitHub Web editor) | S03-operators/range.t

[14:02] <Geth> ¦ roast: Merge pull request #343 from skids/rt127279

[14:02] <Geth> ¦ roast: 

[14:02] <Geth> ¦ roast: Add tests for new range precedence worries (RT#127279)

[14:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6e9bab5de4

[14:02] *** |oLa| joined
[14:03] *** Zoffix joined
[14:03] *** tushar_ left
[14:04] <Zoffix> lancew: rakudo/rakudo (tickets at https://fail.rakudo.party/ ), MoarVM/MoarVm, perl6/nqp, and perl6/roast. It's really just rakudo/rakudo, but since all the other repos are part of it more or less, they also count this month.

[14:04] <Zoffix> buggable: tag LHF

[14:04] <buggable> Zoffix, There are 7 tickets tagged with LHF; See http://fail.rakudo.party/t/LHF for details

[14:04] <Zoffix> buggable: tag TESTNEEDED

[14:04] <buggable> Zoffix, There are 53 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[14:04] *** rba left
[14:04] *** tushar_ joined
[14:04] <Zoffix> lancew: ^ some easy tickets as well as tickets that are already fixed and just need a test added to roast

[14:05] *** ryn1x left
[14:07] <lancew> Thanks Zoffix, looking now

[14:10] <Xliff_> .tell thundergnat Thanks for the suggestion. I will upgrade, but I thought I had done that, recently.

[14:10] <yoleaux> 11:48Z <thundergnat> Xliff_: re: "Useless use of constant value next..." Are you possibly using an old version of Inline::Perl5? See: https://github.com/niner/Inline-Perl5/issues/92

[14:10] <yoleaux> Xliff_: I'll pass your message to thundergnat.

[14:11] <squashable6> 🍕🍕🍕  First contribution by usev6++! ♥

[14:11] <Geth> ¦ roast: e3e1f75cc5 | usev6++ | 6 files

[14:11] <Geth> ¦ roast: [jvm] Remove fudges for RT #126524

[14:11] <Geth> ¦ roast: 

[14:11] <synopsebot> RT#126524 [open]: https://rt.perl.org/Ticket/Display.html?id=126524 [JVM] Proc::Async NYI

[14:11] <Geth> ¦ roast: Proc::Async has been implemented for the jvm backend; jnthn++.

[14:11] <Geth> ¦ roast: 

[14:11] <Geth> ¦ roast: Unfortunately, some of the fudged tests still fail. I updated

[14:11] <Geth> ¦ roast: the fudge reasons accordingly.

[14:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e3e1f75cc5

[14:12] <Xliff_> .tell thundergnat I am on Inline::Perl5 0.26 and am still getting the error.

[14:12] <yoleaux> Xliff_: I'll pass your message to thundergnat.

[14:12] <RabidGravy> there is a precedence problem with NativeCall.pm line 337, that manifests as not recognizing parameters on methods with named variables

[14:13] <RabidGravy> thus leading to https://github.com/perl6/DBIish/issues/104

[14:14] <Geth> ¦ rakudo/nom: f59b2887ad | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/NativeCall.pm6

[14:14] <Geth> ¦ rakudo/nom: Fix precedence error; RabidGravy++

[14:14] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f59b2887ad

[14:15] <squashable6> 🍕 jonathanstowe++ wrote a comment on commit f59b2887adfc: https://github.com/rakudo/rakudo/commit/f59b2887adfc09d6885eda6ba43d2670bcc21a71#commitcomment-24827366

[14:15] <squashable6> 🍕🍕🍕  First contribution by jonathanstowe++! ♥

[14:15] <timotimo> good catch, RabidGravy!

[14:16] *** rba joined
[14:17] <RabidGravy> that's been bugging me for days

[14:18] *** ChoHag joined
[14:19] *** rba_ left
[14:22] <RabidGravy> I've so got to get a new laptop, building rakudo is getting slower by the day

[14:24] *** Cabanossi left
[14:25] <timotimo> me, too ... ever since i broke 8 of my 12 gigs it's hard to use it for any meaningful rakudo dev

[14:25] *** Cabanossi joined
[14:27] *** tushar_ left
[14:28] *** SCHAPiE left
[14:28] *** ryn1x joined
[14:29] <HoboWithAShotgun> tyvm timi

[14:31] *** rba_ joined
[14:31] <HoboWithAShotgun> *timo

[14:33] *** SCHAPiE joined
[14:33] *** ryn1x left
[14:34] <Zoffix> RabidGravy: how can I trigger that error? I'd like to write a test covering that bug

[14:34] *** rba left
[14:35] *** markldevine joined
[14:37] *** pecastro left
[14:38] *** markldevine left
[14:38] <Geth> ¦ ecosystem: Tyil++ created pull request #372: Remove scriptkitties modules, now released through CPAN

[14:38] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/372

[14:39] <Geth> ¦ ecosystem: eae29ebbdd | (Patrick Spek)++ (committed by Zoffix Znet) | META.list

[14:39] <Geth> ¦ ecosystem: Remove scriptkitties modules, now released through CPAN (#372)

[14:39] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/eae29ebbdd

[14:40] <Zoffix> tyil: you should accept your perl6 org invite so you could commit stuff to most of the org's repos yourself: https://github.com/perl6/

[14:41] *** xinming left
[14:41] <tyil>  ah, I didnt see I got one :'D

[14:41] <tyil> I dont remember any notification on github telling me about it

[14:42] <RabidGravy> Zoffix, it's basically "method something(Str $foo) is native(...)" where the C func something takes two arguments the first being a CPointer or CStruct which the method is a member of

[14:42] <RabidGravy> but I am suspicious that hasn't fixed what I am seeing

[14:43] *** ChoHag left
[14:43] *** xinming joined
[14:43] <Zoffix> m: use NativeCall; class { method foo(Str $foo) is native {} }.new

[14:43] <camelia> rakudo-moar f59b28: ( no output )

[14:43] <Zoffix> c: HEAD~10 use NativeCall; class { method foo(Str $foo) is native {} }.new

[14:43] <committable6> Zoffix, ¦HEAD~10: «»

[14:43] <Zoffix> don't seem to be it

[14:45] <Zoffix> c: HEAD~10 use NativeCall; class { method foo(Str $foo) is native {} }.new.foo

[14:45] <committable6> Zoffix, https://gist.github.com/52a6c5f1a1b21df2f38e7c2889dc855b

[14:45] <Zoffix> k

[14:45] *** lancew left
[14:46] *** rba joined
[14:47] <Zoffix> ain't gonna write tests; dunno how

[14:48] <RabidGravy> I'll gist one in a bit

[14:49] *** rba_ left
[14:50] *** xinming left
[14:51] *** skids left
[14:51] <RabidGravy> Zoffix, ah it also has the same bug in line 400 of NativeCall.pm :-(

[14:52] <Geth> ¦ nqp: c20643c97c | (Samantha McVey)++ | docs/ops.markdown

[14:52] <Geth> ¦ nqp: [docs] Document `ordbaseat` op in docs/ops.markdown

[14:52] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c20643c97c

[14:52] <Geth> ¦ nqp: 0bed230bda | (Samantha McVey)++ | src/HLL/Grammar.nqp

[14:52] <Geth> ¦ nqp: Improve error message when space with combiners is encountered

[14:52] <Geth> ¦ nqp: 

[14:52] <Geth> ¦ nqp: New message:

[14:52] <Geth> ¦ nqp: q ̌̌(hi)

[14:52] <Geth> ¦ nqp: Whitespace character ‘SPACE’ (0x20) with 2 combining characters

[14:52] <Geth> ¦ nqp: is not allowed as a delimiter at line 2, near " ̌̌(hi)\n"

[14:52] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/0bed230bda

[14:52] <Geth> ¦ rakudo/nom: ba2d858fb2 | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/NativeCall.pm6

[14:52] <Geth> ¦ rakudo/nom: Fix precedence error; RabidGravy++

[14:52] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ba2d858fb2

[14:52] *** Geth left
[14:53] *** Geth joined
[14:53] *** wander4096 left
[14:53] <RabidGravy> right that seems to work now, DOUBLES ALL ROUND

[14:55] *** cog__ left
[14:55] *** cog__ joined
[14:58] <Geth> ¦ nqp: 108db21525 | (Zoffix Znet)++ | src/HLL/Compiler.nqp

[14:58] <Geth> ¦ nqp: Remove trailing whitespace

[14:58] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/108db21525

[14:59] *** HoboWithAShotgun left
[15:02] *** rba_ joined
[15:02] *** pecastro joined
[15:04] *** rba left
[15:08] *** yht joined
[15:14] <RabidGravy> Zoffix, actually the test at line 123 of t/04-nativecall/18-routine-sig-sanity.t would probably do it if the parameters were given named $variables and the method was actually called

[15:15] *** bitrauser joined
[15:15] *** haxmeister joined
[15:15] <Zoffix> ok, I'll give it a go

[15:15] <bitrauser> good evening everyone

[15:16] <haxmeister> I heard a rumor that cpan6 has been released and perl6 has now achieved lvl 5 badassery

[15:16] <haxmeister> is this correct?

[15:17] *** rba joined
[15:17] *** ryn1x joined
[15:17] <Zoffix> bitrauser: \o

[15:19] <Zoffix> haxmeister: uhh.. partially. Nothing's been "released". modules.perl6.org added support for Perl 6 dists on CPAN, completing the final piece of work to have usable workflow for having dists on CPAN. zef already looked for dists on CPAN months ago and that's the tool to install them, not "cpan6"

[15:19] *** rba_ left
[15:19] <Zoffix> haxmeister: https://6lang.party/post/CPAN6-Is-Here

[15:19] *** grumble2 joined
[15:19] *** grumble left
[15:21] <Geth> ¦ nqp: c38cfe87f5 | (Zoffix Znet)++ | src/HLL/Compiler.nqp

[15:21] <Geth> ¦ nqp: Implement --force-stdin-eval-mode command line arg

[15:21] <Geth> ¦ nqp: 

[15:21] <Geth> ¦ nqp: - Takes 'interactive' and 'non-interactive' as valid values

[15:21] <Geth> ¦ nqp: - Provides the means to switch between REPL and plain eval STDIN

[15:21] <Geth> ¦ nqp:     without depending on whether STDIN is a TTY or not. At the

[15:21] *** ryn1x left
[15:21] <Geth> ¦ nqp:     very least, this lets us easily write REPL tests.

[15:21] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c38cfe87f5

[15:22] *** ryn1x joined
[15:23] *** Cabanossi left
[15:23] <bitrauser> I wanted to join in to squash some bugs :) Hope I'm not too late

[15:23] <Zoffix> squashable6: status

[15:23] <squashable6> Zoffix, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈20 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:23] <squashable6> Zoffix, Log and stats: https://gist.github.com/94ceaf418b741c8d161664cb5f01382d

[15:23] <timotimo> not too late :)

[15:23] <Zoffix> bitrauser: still 20hours :)

[15:23] <Zoffix> buggable: tag LHF

[15:23] <buggable> Zoffix, There are 7 tickets tagged with LHF; See http://fail.rakudo.party/t/LHF for details

[15:23] <Zoffix> buggable: tag TESTNEEDED

[15:23] <buggable> Zoffix, There are 53 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[15:23] <RabidGravy> It's never too late to squash some bugs

[15:24] *** smls_ left
[15:24] <bitrauser> Any specific recommendation for a beginner?

[15:24] <Zoffix> bitrauser: ^ some of easy tickets to do as well as tickets that are already fixed and just need tests written. This month's SQUASHathon is about rakudo/rakudo repo ( open tickets: https://fail.rakudo.party/ ) and since it depends on other repos, perl6/nqp, MoarVM/MoarVM, and perl6/roast repos also part of it

[15:25] *** Cabanossi joined
[15:27] <ryn1x> I am trying to get perl6 working on codechef.com. Can anyone see why this submission: https://pastebin.com/vpMy9G2q would timeout for: https://www.codechef.com/problems/C00K0FF ? I assume it might not like my i/o...

[15:28] *** grumble joined
[15:31] *** yht left
[15:31] *** grumble2 left
[15:31] <bitrauser> Thanks, gonna take a look

[15:32] *** rba_ joined
[15:33] <Zoffix> ryn1x: says timelimit is 1 second. Is it possible it's running on really crappy box where our slower startup is running out the timeout?

[15:33] *** cdg left
[15:33] <Zoffix> ryn1x: also, are you sure the input comes from STDIN?

[15:34] *** rba left
[15:34] <Zoffix> (yeah, other entries read from STDIN)

[15:35] <timotimo> it supposedly gives you 100000 tests all in all?

[15:37] <timotimo> it could very well be we're not fast enough to make it?

[15:37] <Zoffix> right

[15:37] <Zoffix> Just the sample entry runs .34s on my box

[15:37] <ryn1x> If anyone can pass the test I would love to know how you did it! I have tried refactoring a few times with no luck. That would be interesting if they implemented perl6 without really testing it...

[15:37] <timotimo> right, how about concatenating the tests 10x and upping the first line to 30, how much slower does it get?

[15:38] <Zoffix> ryn1x: do you got full input sample?

[15:38] <ryn1x> Zoffix: No I don't.. 

[15:39] <timotimo> should be easy to generate some example input

[15:41] <timotimo> c: say 10_000; for ^10_000 { my $count = ^15 .pick; say $count; .say for <cakewalk simple easy easy-medium medium medium-hard hard>.roll($count) } }

[15:41] <committable6> timotimo, Seems like you forgot to specify a revision (will use “v6.c” instead of “say”)

[15:41] <committable6> timotimo, ¦v6.c (23 commits): «04===SORRY!04=== Error while compiling /tmp/uQ_nK603rK␤Unexpected closing bracket␤at /tmp/uQ_nK603rK:1␤------> 03medium medium-hard hard>.roll($count) } 08⏏04} «exit code = 1»»

[15:41] <timotimo> oops

[15:42] <timotimo> c: say 10_000; for ^10_000 { my $count = ^15 .pick; say $count; .say for <cakewalk simple easy easy-medium medium medium-hard hard>.roll($count) }

[15:42] <committable6> timotimo, Seems like you forgot to specify a revision (will use “v6.c” instead of “say”)

[15:42] <Zoffix> c: HEAD say 10_000; for ^10_000 { my $count = ^15 .pick; say $count; .say for <cakewalk simple easy easy-medium medium medium-hard hard>.roll($count) }

[15:42] <timotimo> ryn1x: it looks like it's also acceptable to have more than one of each required kind

[15:42] <timotimo> see the third example in the exercise description

[15:44] *** xinming joined
[15:45] <committable6> Zoffix, https://gist.github.com/735558c6470806c7e7a6ee646a2d62d2

[15:45] <committable6> timotimo, https://gist.github.com/11792b43af6747176716e9e5591629b4

[15:45] <timotimo> here's a file for your downloading pleasure

[15:45] <Skarsnik> that was slow

[15:45] <timotimo> just have to throw out the very first line

[15:46] <timotimo> if i output to /dev/null on my machine it finishes in under a second

[15:46] <timotimo> oh, same for a text file

[15:46] *** rba joined
[15:46] *** HoboWithAShotgun joined
[15:47] <timotimo> cool. i can run the program ryn1x wrote on that in just under a second for the 10k lines input

[15:47] <timotimo> so we're close

[15:48] <timotimo> heh. 18.8% of time spent looking up $*IN over and over

[15:48] * Zoffix tries a hand at this

[15:48] *** rba_ left
[15:48] *** wamba left
[15:48] <Zoffix> heh, atom chokes on that input file :)

[15:49] <timotimo> say @results.join("\n") is a lot faster than .say for @results

[15:49] <evalable6> timotimo, rakudo-moar ba2d858fb: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/wmqCfTCo3y␤Variable '@results' is not declared␤at /tmp/wmqCfTCo3y:1␤------> 03say 08⏏04@results.join("\n") is a lot faster than»

[15:50] <timotimo> haha thanks evalable6 

[15:51] <timotimo> using an if/elsif instead og given/when is another nice win

[15:51] <Zoffix> On my box it runs in 1.34s

[15:52] <timotimo> i need a bigger file :)

[15:52] <Zoffix> hm, my version with a bag runs 1.84s :(

[15:53] <Zoffix> git it looks pretty: https://gist.github.com/zoffixznet/0a67ad4a92c31bc03d8c523b9cd28e05

[15:53] <Zoffix> s/git/but/;

[15:53] <timotimo> with 100_000 input tests i get 27% time spent in write-internal to get the results out :D

[15:53] <timotimo> it takes 2.4s to do the whole thing

[15:54] <Zoffix> hm

[15:54] <timotimo> 78% cpu usage :D

[15:55] <Zoffix> 1.73user 0.06system 0:01.67elapsed 107%CPU (0avgtext+0avgdata 102556maxresident)k

[15:55] <timotimo> it spends about 6% in _int_free and 5% in _int_malloc

[15:57] *** ryn1x_m joined
[15:58] *** KotH left
[15:58] <ryn1x_m> I have to run my wife to the airport, but am on mobile and watching the logs. I’ll test all your guys’ suggestions when I get home. 

[16:01] *** rba_ joined
[16:01] <ryn1x_m> Looks like if the runtimes are borderline though then it may not be possible depending on what box codechef has perl6 running on though? ...

[16:01] <timotimo> neat, i have a little performance improvement

[16:03] <timotimo> in the core

[16:03] *** rba left
[16:05] <timotimo> Int went from 9.17% (238.2ms) to 7.76% (195.6ms)

[16:05] <timotimo> (and from only speshed to jitted)

[16:06] <timotimo> hah, one fewer GC run over the course of the program, too

[16:07] *** kaare_ left
[16:09] <Geth> ¦ rakudo/nom: 5f6896bde8 | (Timo Paulssen)++ | src/core/Str.pm

[16:09] <Geth> ¦ rakudo/nom: use nqp::codes op to speed up Int

[16:09] <Geth> ¦ rakudo/nom: 

[16:09] <Geth> ¦ rakudo/nom: not a vast improvement, but having one allocation less

[16:09] <Geth> ¦ rakudo/nom: is a nice bonus.

[16:09] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5f6896bde8

[16:12] <Zoffix> \o/

[16:13] <timotimo> letting the value fall out of the final statement instead of using return explicitly is also a little improvement, but barely noticable

[16:13] *** BenGoldberg left
[16:14] <Zoffix> Is there an nqp op to convert native str to native int?

[16:14] <timotimo> there is smart numify, perhaps there's also smart intify

[16:14] *** ChoHag joined
[16:15] <Zoffix> m: use nqp; my int $x = nqp::fromstr_I('42', Int); say $x

[16:15] <camelia> rakudo-moar ba2d85: OUTPUT: «42␤»

[16:15] <Zoffix> There's this but the box-unbox kinda meh

[16:16] *** rba joined
[16:16] <timotimo> the fast path here uses radix_I

[16:16] <timotimo> which i assume is faster because it doesn't support 0x and friends

[16:17] <Zoffix> ah, k

[16:17] <Zoffix> m: use nqp; my int $x = nqp::radix(10, '42', 0, 0); say $x

[16:17] <camelia> rakudo-moar ba2d85: OUTPUT: «This representation (VMArray) cannot unbox to a native int (for type BOOTArray)␤  in block <unit> at <tmp> line 1␤␤»

[16:17] <timotimo> needs _I, doesn't it?

[16:17] <Zoffix> m: use nqp; my int $x = nqp::atpos(nqp::radix(10, '42', 0, 0),0); say $x

[16:17] <camelia> rakudo-moar ba2d85: OUTPUT: «42␤»

[16:18] <timotimo> ah, it splits into pre- and post-dot?

[16:18] <Zoffix> timotimo: nah, there's just more info: https://github.com/perl6/nqp/blob/master/docs/ops.markdown#radix

[16:18] <timotimo> ah, i see

[16:18] *** rba_ left
[16:19] <timotimo> with a bunch of smarts in the jit, we could get around the array allocation ... at some point :)

[16:21] *** AlexDaniel_ joined
[16:22] *** piojo left
[16:22] <timotimo> m: <cakewalk simple easy easy-medium medium medium-hard hard>.map(*.chars).sort.say

[16:22] <camelia> rakudo-moar ba2d85: OUTPUT: «(4 4 6 6 8 11 11)␤»

[16:23] <timotimo> damn, that doesn't help in the slightest

[16:24] <Geth> ¦ rakudo: jonathanstowe++ created pull request #1185: Add tests to cover a common NC usage

[16:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1185

[16:24] <squashable6> 🍕 jonathanstowe++ opened pull request “Add tests to cover a common NC usage”: https://github.com/rakudo/rakudo/pull/1185

[16:24] <Zoffix> :S

[16:24] <Zoffix> Rewrote this crap in nqp ops.... and that made it .3s slower

[16:24] <timotimo> (i put a check for line length first

[16:24] <timotimo> oh wow

[16:24] *** BenGoldberg joined
[16:25] <RabidGravy> there ☝

[16:25] <Zoffix> Maybe I did something wrong: https://gist.github.com/zoffixznet/ef3a219daa63cd708524674d0c1c6770

[16:25] * Zoffix returns to working on code that actually matters :D

[16:25] *** kaare_ joined
[16:25] <RabidGravy> not exactly the most extensive test but it covers the actual failure

[16:25] <timotimo> very good!

[16:25] <squashable6> 🍕 zoffixznet++ merged pull request “Add tests to cover a common NC usage”: https://github.com/rakudo/rakudo/pull/1185

[16:26] <squashable6> 🍕 zoffixznet++ wrote a comment on “Add tests to cover a common NC usage”: https://github.com/rakudo/rakudo/pull/1185#issuecomment-334947318

[16:26] <Geth> ¦ rakudo/nom: d8a20d1134 | (Jonathan Stowe)++ | 2 files

[16:26] <Geth> ¦ rakudo/nom: Add tests to cover a common NC usage

[16:26] <Geth> ¦ rakudo/nom: 

[16:26] <Geth> ¦ rakudo/nom: C functions that consistently take some struct or pointer

[16:26] <Geth> ¦ rakudo/nom: as the first argument are declared as methods of that

[16:26] <Geth> ¦ rakudo/nom: CStruct or CPointer

[16:26] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d8a20d1134

[16:26] <Geth> ¦ rakudo/nom: 64d41ffa11 | (Zoffix Znet)++ (committed using GitHub Web editor) | 2 files

[16:26] <Geth> ¦ rakudo/nom: Merge pull request #1185 from jonathanstowe/nom

[16:26] <Geth> ¦ rakudo/nom: 

[16:26] <Geth> ¦ rakudo/nom: Add tests to cover a common NC usage

[16:26] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/64d41ffa11

[16:26] <TimToady> m: grammar { token TOP { <[\w] -forbidden -digit -space>+ }; regex forbidden { <+[meow]> } }.parse("kak").say

[16:26] <yoleaux> 00:40Z <AlexDaniel_> TimToady: maybe you can take a look at RT #125596 ? It feels like it can be changed to .panic, but maybe you know a good reason why it has to be a sorry. The spectest seems to be clean with .panic but I don't trust it that too much.

[16:26] <camelia> rakudo-moar ba2d85: OUTPUT: «｢kak｣␤»

[16:26] <yoleaux> 04:02Z <AlexDaniel_> TimToady: cursor issue, maybe you know something about it (see my comment). RT #125674

[16:26] <synopsebot> RT#125596 [new]: https://rt.perl.org/Ticket/Display.html?id=125596 [LTA] error message with if; and unless; without conditions

[16:27] <synopsebot> RT#125674 [new]: https://rt.perl.org/Ticket/Display.html?id=125674 [LTA] error message prints wrong eject position (if True if { };)

[16:27] <TimToady> Zoffix: you double negatived it ^^^

[16:27] <Zoffix> Ohhh

[16:27] <Zoffix> hehe :D

[16:27] *** ryn1x_m left
[16:27] <timotimo> Zoffix: your use of nqp::decode causes the jit to bail out, that could be a major factor

[16:28] <timotimo> (it's not anything special about how you use it, it's just NYI)

[16:28] <timotimo> (but doesn't have to be that way for long)

[16:28] <Zoffix> Ah

[16:28] <Zoffix> OK.

[16:30] <Zoffix> Changing it to my $lines := nqp::split("\n",$*IN.slurp); does shave off a bit of time, making it run in 1.8s

[16:30] *** KotH joined
[16:31] <AlexDaniel_> o/

[16:31] <Zoffix> \o

[16:31] <AlexDaniel_> squashable6: status

[16:31] <squashable6> AlexDaniel_, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈19 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:31] <squashable6> AlexDaniel_, Log and stats: https://gist.github.com/c30b184f86697c05d6552ac9c2e02fd0

[16:31] *** rba_ joined
[16:31] <Zoffix> AlexDaniel_: you have robo message under AlexDaniel

[16:31] <AlexDaniel> .

[16:31] <yoleaux> 11:36Z <Zoffix> AlexDaniel: FWIW jnthn++ said we'll likely make ». autothread only is pure routines, so no shuffling is really needed: https://rt.perl.org/Ticket/Display.html?id=130485#ticket-history

[16:31] <yoleaux> 12:23Z <Zoffix> AlexDaniel: squshable's log made need pruning. It counted 50 commits were added, when I just synced a branch: https://gist.github.com/Whateverable/ccfa0f6049c1b7e8c8651f332aeb2015#file-log-L73

[16:32] <timotimo> Zoffix: with an active profiler, it goes from 2343.4ms to 2246.5ms when decode is jitted

[16:33] <timotimo> that said, you're not treating the gc very well it seems

[16:33] <AlexDaniel_> Zoffix: so <a b c d>».say should not be discouraged? Interesting

[16:33] *** rba left
[16:33] <Zoffix> .ask samcv Do tests need to be adjusted to accomodate ornate stuff? I'm getting failures in t/spec/S02-lexical-conventions/comments.t

[16:33] <yoleaux> Zoffix: I'll pass your message to samcv.

[16:34] <Zoffix> AlexDaniel_: well, that's based on an off-hand comment in IRC chat. Not a final design descision :)

[16:34] <Zoffix> But I image there's a ton of code that uses » as if it were a simple, linera map

[16:34] <Zoffix> *linear

[16:35] <AlexDaniel_> this kinda makes sense

[16:36] *** Ptolemarch left
[16:36] <Geth> ¦ roast: 5f64bc0c6e | (Zoffix Znet)++ | S03-operators/range.t

[16:36] <Geth> ¦ roast: Fix missing `use lib`

[16:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5f64bc0c6e

[16:36] <AlexDaniel_> Zoffix: what do you think about https://github.com/rakudo/rakudo/pull/1183 ?

[16:37] <timotimo> Zoffix: constructing an nqp::list_s and push_s into it then joining it at the end is massively faster than concating over and over

[16:37] <timotimo> down to 1.57s

[16:37] <TimToady> » is supposed to be an explicit promise that you don't care about order, and there are lots of places that are not marked pure that are nevertheless effectively pure

[16:38] <Zoffix> AlexDaniel_: when I saw it this morning I thought "why doesn't he just commit directly". ... Dunno anything about that code path

[16:38] *** Ptolemarch joined
[16:39] <Geth> ¦ rakudo/nom: 4 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[16:39] <squashable6> 🍕 AlexDaniel++ merged pull request ““corresponding … was at” RT #125641”: https://github.com/rakudo/rakudo/pull/1183

[16:39] <Geth> ¦ rakudo/nom: 279bae08a5 | Mention corresponding starter in <, <<, « subscripts

[16:39] <Geth> ¦ rakudo/nom: 6542bb8032 | Mention corresponding starter for most of the things

[16:39] <synopsebot> RT#125641 [new]: https://rt.perl.org/Ticket/Display.html?id=125641 [LTA] error messages when right bracket is missing: $<> , <>, () and so on

[16:39] <Geth> ¦ rakudo/nom: a462d0a26e | Cache some line numbers

[16:39] <Geth> ¦ rakudo/nom: d22722e496 | Merge pull request #1183 from rakudo/corresponding-starter

[16:39] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/compare/64d41ffa11...d22722e496

[16:39] <AlexDaniel_> Zoffix: alright then we'll see how it goes

[16:43] *** domidumont joined
[16:43] <Geth> ¦ roast: 85b9380acd | (Zoffix Znet)++ | S02-lexical-conventions/comments.t

[16:43] <Geth> ¦ roast: Remove incorrect test

[16:43] <Geth> ¦ roast: 

[16:43] <Geth> ¦ roast: Per samcv++ from https://github.com/perl6/nqp/commit/02a426e0e6

[16:43] <Geth> ¦ roast: 

[16:43] <Geth> ¦ roast: Remove support for ornate parenthesis from quoting constructs

[16:43] <Geth> ¦ roast: Reasons:

[16:43] <Geth> ¦ roast: * These are not recognized by Unicode as being brackets

[16:43] <Geth> ¦ roast: <…commit message has 6 more lines…>

[16:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/85b9380acd

[16:44] <AlexDaniel_> ah, so the tests are being finally removed

[16:44] <AlexDaniel_> Zoffix: this needs to be cherry-picked to errata, right?

[16:44] <Geth> ¦ roast/6.c-errata: d78ab87a65 | (Zoffix Znet)++ | S02-lexical-conventions/comments.t

[16:44] <Geth> ¦ roast/6.c-errata: Remove incorrect test

[16:44] <Geth> ¦ roast/6.c-errata: 

[16:44] <Geth> ¦ roast/6.c-errata: Per samcv++ from https://github.com/perl6/nqp/commit/02a426e0e6

[16:44] <Geth> ¦ roast/6.c-errata: 

[16:44] <Geth> ¦ roast/6.c-errata: Remove support for ornate parenthesis from quoting constructs

[16:44] <Geth> ¦ roast/6.c-errata: Reasons:

[16:44] <Geth> ¦ roast/6.c-errata: * These are not recognized by Unicode as being brackets

[16:44] <AlexDaniel_> Zoffix++

[16:44] <Geth> ¦ roast/6.c-errata: <…commit message has 6 more lines…>

[16:44] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/d78ab87a65

[16:44] <Zoffix> .tell samcv nevermind. Found the commit with reasonings and tossed the incorrect tests from master and 6.c-errata in https://github.com/perl6/roast/commit/85b9380acd and https://github.com/perl6/roast/commit/d78ab87a65

[16:44] <yoleaux> Zoffix: I'll pass your message to samcv.

[16:45] *** zakame left
[16:45] <AlexDaniel_> I thought that this was removed weeks ago… :)

[16:46] <Geth> ¦ rakudo/nom: 9ce896d8bf | (Zoffix Znet)++ | tools/build/NQP_REVISION

[16:46] <Geth> ¦ rakudo/nom: Bump NQP

[16:46] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9ce896d8bf

[16:46] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.09-59-g60f79d3...2017.09-65-gc38cfe8

[16:46] *** ken joined
[16:46] <Zoffix> \o/ bot spam \o/

[16:46] *** ken is now known as Guest99662

[16:47] <RabidGravy> can anyone think of a good way of testing what happens when a program is exec'd by something that fdreopen its stdin to a socket?

[16:47] *** HoboWithAShotgun left
[16:48] <timotimo> Zoffix: i *think* the $lines array upsets the GC a little bit. i wonder how best to rewrite this so it grabs stuff line-by-line instead

[16:48] *** Guest99662 left
[16:48] <RabidGravy> I think this is key to understanding why FastCGI::Native doesn't work with apache mod_fcgid in the way I think it should do

[16:48] *** thunktone joined
[16:49] <timotimo> RabidGravy: were you able to get an strace or something?

[16:49] *** nadim_ joined
[16:49] <timotimo> that should show what moar's trying and in what way it fails

[16:49] <timotimo> i'm afk for a bit, but i'd look at a trace for you later

[16:50] <AlexDaniel_> .tell lizmat something was bisected to your commit. Maybe you want to take a look RT #132236

[16:50] <yoleaux> AlexDaniel_: I'll pass your message to lizmat.

[16:50] <RabidGravy> it's tricky but the mod_fcgid dicks around with all the STDIO file descriptors in such a way that debugging is awkward

[16:50] <synopsebot> RT#132236 [open]: https://rt.perl.org/Ticket/Display.html?id=132236 [REGRESSION] Meta object construction

[16:51] <AlexDaniel_> e: (

[16:51] <evalable6> AlexDaniel_, rakudo-moar 9ce896d8b: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/X4WAtjPGjt␤Unable …»

[16:51] <evalable6> AlexDaniel_, Full output: https://gist.github.com/48ba440330b1e21b2b69dcbe054daba7

[16:51] *** domidumont left
[16:54] *** stux|RC-only joined
[16:55] <Geth> ¦ rakudo/nom: 20518454ef | (Zoffix Znet)++ | src/Perl6/Compiler.nqp

[16:55] <Geth> ¦ rakudo/nom: Update compiler usage message for STDIN eval

[16:55] <Geth> ¦ rakudo/nom: 

[16:55] <Geth> ¦ rakudo/nom: Since recently-ish, if STDIN is not a TTY, we've treated STDIN

[16:55] <Geth> ¦ rakudo/nom: as simply a file with code to eval, without starting REPL.

[16:56] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/20518454ef

[16:56] <TimToady> m: say 42 if ;

[16:56] <camelia> rakudo-moar 9ce896: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing semicolon␤at <tmp>:1␤------> 3say 42 if 7⏏5;␤»

[16:56] <TimToady> that's obviously wrong

[16:56] *** thunktone left
[16:56] <TimToady> should probably say "Missing expression" or so

[16:56] <timotimo> :D

[16:56] <AlexDaniel_> TimToady: isn't it the eject position that is wrong?

[16:57] <TimToady> well, kinda

[16:57] <TimToady> m: say 42 if # comment

[16:57] <camelia> rakudo-moar 9ce896: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing semicolon␤at <tmp>:1␤------> 3say 42 if # comment7⏏5<EOL>␤»

[16:57] <TimToady> it's wrongish there, fer shure

[16:57] <TimToady> probably wants a .PRECURSOR or so

[16:58] *** thunktone joined
[16:58] <AlexDaniel_> I think that's exactly what RT #125674 is about

[16:58] <synopsebot> RT#125674 [new]: https://rt.perl.org/Ticket/Display.html?id=125674 [LTA] error message prints wrong eject position (if True if { };)

[16:58] <TimToady> it's okay to me that it only is sorry about the missing whitespace, since it's falling through to the (currently wrong) missing semicolon message

[16:58] <TimToady> which is more explanatory than missing whitespace

[16:59] <TimToady> but I thought we dedupped sorry messages...

[16:59] <TimToady> *deduped

[16:59] <TimToady> the multiple messages might also indicate unexpected backtracking somewhere

[17:01] <TimToady> in any case, the final message should certainly be more like "Statement modifier requires an expression"

[17:01] <AlexDaniel_> TimToady: there are backtraces on how it gets there four times. I didn't really understand what's going on there, but maybe it's something about EXPR

[17:03] <TimToady> I can maybe look at that in a bit, but gotta go to a wedding of a friend who neglected to take the squashathon into account, unaccountably...

[17:03] <AlexDaniel_> :)

[17:03] *** rba joined
[17:04] <Geth> ¦ rakudo/nom: 5c7bbea0a9 | (Zoffix Znet)++ | src/Perl6/Compiler.nqp

[17:04] <Geth> ¦ rakudo/nom: Add --force-stdin-eval-mode opt to usage msg

[17:04] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5c7bbea0a9

[17:05] *** rba_ left
[17:05] <Geth> ¦ doc: 532cfc2982 | (Zoffix Znet)++ | doc/Programs/00-running.pod6

[17:05] <Geth> ¦ doc: Document --force-stdin-eval-mode opt

[17:05] <Geth> ¦ doc: 

[17:05] <Geth> ¦ doc: Impl: https://github.com/rakudo/rakudo/commit/9ce896d8bf

[17:05] <Geth> ¦ doc:       https://github.com/perl6/nqp/commit/c38cfe87f5

[17:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/532cfc2982

[17:08] <bitrauser> I guess I'll take a shot at writing some tests, how do I determine whether they belong in `rakudo/t/` or `roast`, and in which subcategory? Taking RT#125466 as an example. I'd assume that one would go to `perl6/roast/S03-operators/bit.t`?

[17:08] <synopsebot> RT#125466 [open]: https://rt.perl.org/Ticket/Display.html?id=125466 [MATH] bitwise shift is inconsistent on int

[17:09] *** stux|RC-only left
[17:09] *** HoboWithAShotgun joined
[17:09] <AlexDaniel_> bitrauser: that one goes to roast

[17:11] <Zoffix> bitrauser: roast contains stuff that defines the language, rakudo/t contains all the other tests. To find file where to write the test to, I usually do something like `tree -f | grep -i some-term` where some term is the stuff I want to test ("bit" or "bitshift" in this case). If nothing comes up, I use `grep -FR 'some term'` to find a file that mentions stuff. What you picked is a good choice for that test.

[17:11] *** stux|RC-only joined
[17:12] *** domidumont joined
[17:13] <bitrauser> I see, thanks for the clarification

[17:13] *** rba left
[17:13] *** rba joined
[17:14] *** cdg joined
[17:18] *** bitrauser_ joined
[17:18] *** bitrauser left
[17:19] *** cdg left
[17:22] <AlexDaniel_> uhh, splitting tickets is painful

[17:22] <AlexDaniel_> I guess it's the fact that you cannot edit the text that makes it so hard

[17:24] *** Cabanossi left
[17:25] *** Cabanossi joined
[17:27] *** kerframil left
[17:32] *** Xliff_ left
[17:35] *** thunktone left
[17:35] *** Ptolemarch left
[17:37] *** thunktone joined
[17:40] *** wamba joined
[17:41] <timotimo> encoding "Yes\n" and "No\n" once into Buf objects, then appending it into a result Buf[uint8] and $*OUT.write'ing it is a bit faster still

[17:41] <timotimo> 1.38 for my version of p6.p6 and 2.25 for my version of parse-blah.p6

[17:43] <timotimo> i lied. it's slower

[17:43] <Geth> ¦ doc: 5c846222bd | (Zoffix Znet)++ | doc/Programs/00-running.pod6

[17:43] <Geth> ¦ doc: Revert "Document --force-stdin-eval-mode opt"

[17:43] <Geth> ¦ doc: 

[17:43] <Geth> ¦ doc: This reverts commit 532cfc2982eb3d9a408589b84fd88377ca5e0d19.

[17:43] <Geth> ¦ doc: 

[17:43] <Geth> ¦ doc: Pending better name for the option

[17:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c846222bd

[17:44] <AlexDaniel_> Zoffix: maybe you know how to answer this question? https://github.com/timo/json_fast/issues/14#issuecomment-334953062

[17:44] *** stux|RC-only left
[17:45] <Zoffix> AlexDaniel_: the dists are version tho. ugexe or tony-o would know where the versions-to-commit-sha map is at

[17:45] <Zoffix> *versioned

[17:46] <Zoffix> pretty sure zef uses it, so maybe it's listed in its sauce

[17:46] <Zoffix> It's some JSON file somewhere

[17:48] *** BenGoldberg left
[17:49] *** stux|RC-only joined
[17:49] <timotimo> maybe under the ecosystem-api.p6c.org or what it's called?

[17:50] <Zoffix> (also modules.perl6.org can be taught to use that file and link to specific versions of p6c dists)

[17:51] <Zoffix> squashable6: status

[17:51] <squashable6> Zoffix, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:51] <squashable6> Zoffix, Log and stats: https://gist.github.com/23b44a65055c72d95e7c6a8a4c3c1024

[17:51] <Zoffix> buggable: pizza me

[17:51] <buggable> Zoffix, enjoy this slice of Deluxe pizza, my friend! Yummy 🍕

[17:52] <Zoffix> 18 hours eh... 'nuf time to relax, take a nap, and then squash some more \o/.

[17:53] <AlexDaniel_> Zoffix++

[17:56] *** Wiertek joined
[18:05] *** xinming left
[18:09] *** xinming joined
[18:15] *** HoboWithAShotgun left
[18:16] *** pilne left
[18:22] *** HoboWithAShotgun joined
[18:23] *** Cabanossi left
[18:25] *** Cabanossi joined
[18:31] *** darutoko left
[18:31] *** andrzejku left
[18:34] <AlexDaniel_> https://github.com/torvalds/linux

[18:34] <AlexDaniel_> “∞ contributors”

[18:35] <AlexDaniel_> that's a very interesting interpretation of infinity

[18:44] <huf> "the number would be too wide and would mess up our css"

[18:51] *** evalable6 left
[18:51] *** evalable6 joined
[18:52] <AlexDaniel_> huf: source? There's so much empty space around that field…

[18:52] <geekosaur> more likely "the stat would be too expensive to compute so we spiked it" I suspect

[18:58] *** wamba left
[19:18] *** evalable6 left
[19:18] *** evalable6 joined
[19:22] *** Cabanossi left
[19:24] *** lizmat left
[19:25] *** Cabanossi joined
[19:26] *** lizmat joined
[19:28] <squashable6> 🍕🍕🍕  First contribution by TimToady++! ♥

[19:28] <Geth> ¦ roast: 34577134e0 | TimToady++ | S32-exceptions/misc.t

[19:28] <Geth> ¦ roast: overspecific test disallows eject in correct spot

[19:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/34577134e0

[19:32] *** domidumont left
[19:35] <Geth> ¦ rakudo/nom: 5747bc7121 | TimToady++ | src/Perl6/Grammar.nqp

[19:35] <Geth> ¦ rakudo/nom: deconfuse statement modifier errors

[19:35] <Geth> ¦ rakudo/nom: 

[19:35] <Geth> ¦ rakudo/nom: Catch missing expressions on statement modifiers earlier so that the

[19:35] <Geth> ¦ rakudo/nom: tests eat_terminator are only for statement controls.  Also, move the

[19:35] <Geth> ¦ rakudo/nom: cursor to the front of the cursor controls to indicate where the semicolon

[19:35] <Geth> ¦ rakudo/nom: is actually perceived to be missing if we report that.  Additionally,

[19:35] <Geth> ¦ rakudo/nom: we change the kok check to use .panic instead of .sorry to avoid multiple

[19:35] <Geth> ¦ rakudo/nom: errors resulting from repeated terminator checks that use statement

[19:35] <Geth> ¦ rakudo/nom: modifier keywords for terminators.

[19:35] <Geth> ¦ rakudo/nom: 

[19:35] <Geth> ¦ rakudo/nom: Fixes #125596 and #125674.

[19:35] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5747bc7121

[19:35] <synopsebot> RT#125596 [new]: https://rt.perl.org/Ticket/Display.html?id=125596 [LTA] error message with if; and unless; without conditions

[19:35] <synopsebot> RT#125674 [new]: https://rt.perl.org/Ticket/Display.html?id=125674 [LTA] error message prints wrong eject position (if True if { };)

[19:36] *** wamba joined
[19:37] *** someuser joined
[19:41] <Geth> ¦ roast: a0b678199c | (Moritz Lenz)++ | S32-num/rat.t

[19:41] <Geth> ¦ roast: RT #126101: Another test for 0.9999...

[19:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a0b678199c

[19:42] <synopsebot> RT#126101 [open]: https://rt.perl.org/Ticket/Display.html?id=126101 [BUG] 0.lotsof9s badly approximated

[19:42] *** eliasr left
[19:45] *** Merfont joined
[19:50] *** committable6 left
[19:50] *** committable6 joined
[19:50] *** ChanServ sets mode: +v committable6

[19:52] *** kaare_ left
[19:54] *** kaare_ joined
[19:54] *** hoffentlichja left
[19:58] *** thunktone left
[20:00] *** kaare_ left
[20:01] *** kaare_ joined
[20:02] *** nowan left
[20:03] *** committable6 left
[20:04] *** committable6 joined
[20:04] *** ChanServ sets mode: +v committable6

[20:07] <El_Che> samcv: cheers for the grant completion!

[20:08] <Geth> ¦ roast: afa1f74636 | (Moritz Lenz)++ | S03-operators/repeat.t

[20:08] <Geth> ¦ roast: RT #121327: tests for scoping bug in xx

[20:08] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/afa1f74636

[20:08] <synopsebot> RT#121327 [open]: https://rt.perl.org/Ticket/Display.html?id=121327 [TESTNEEDED] Scoping bug with `xx`

[20:08] *** kaare_ left
[20:08] *** kaare_ joined
[20:11] <Geth> ¦ roast: 005b4f76f7 | (Moritz Lenz)++ | S32-str/comb.t

[20:11] <Geth> ¦ roast: RT #130186: $/ inside comb

[20:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/005b4f76f7

[20:12] <synopsebot> RT#130186 [new]: https://rt.perl.org/Ticket/Display.html?id=130186 Match object inside .comb is weird (‘789’.comb(/ . {say $/} <!> /))

[20:14] <Geth> ¦ rakudo/nom: 5144216f6e | (Elizabeth Mattijsen)++ | 2 files

[20:14] <Geth> ¦ rakudo/nom: Cache types we always need in the CompilerServices

[20:14] <Geth> ¦ rakudo/nom: 

[20:14] <Geth> ¦ rakudo/nom: - this appears to make the setting compilation a bit faster

[20:14] <Geth> ¦ rakudo/nom: - but getting timings on that is always difficult :-(

[20:14] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5144216f6e

[20:16] *** Wiertek left
[20:22] *** Wiertek joined
[20:23] *** Cabanossi left
[20:25] *** Cabanossi joined
[20:28] <Geth> ¦ nqp/jvm_killprocasync: 11ef6ea37d | usev6++ | 10 files

[20:28] <Geth> ¦ nqp/jvm_killprocasync: [jvm] Update stage0 for modified op killprocasync

[20:28] <Geth> ¦ nqp/jvm_killprocasync: review: https://github.com/perl6/nqp/commit/11ef6ea37d

[20:28] <Geth> ¦ nqp/jvm_killprocasync: 7ca352fdf5 | usev6++ | 3 files

[20:28] <Geth> ¦ nqp/jvm_killprocasync: [jvm] Primitive implementation of killprocasync

[20:28] <Geth> ¦ nqp/jvm_killprocasync: review: https://github.com/perl6/nqp/commit/7ca352fdf5

[20:30] *** someuser left
[20:34] *** cdg joined
[20:34] *** notostraca joined
[20:34] <Geth> ¦ rakudo/nom: a09f5f2194 | (Elizabeth Mattijsen)++ | 4 files

[20:34] <Geth> ¦ rakudo/nom: Set up Builtin encodings at setting compile time

[20:34] <Geth> ¦ rakudo/nom: 

[20:34] <Geth> ¦ rakudo/nom: - so we don't need to do this each time on startup

[20:34] *** Aaronepower joined
[20:34] <Geth> ¦ rakudo/nom: - only saves maybe 1 msec of startup

[20:34] <Geth> ¦ rakudo/nom: - but it makes future optimizations opening STDIN/OUT/ERR easier

[20:34] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a09f5f2194

[20:36] *** Wiertek left
[20:38] *** kaare__ joined
[20:38] *** cdg left
[20:40] *** kaare_ left
[20:42] <Geth> ¦ doc: W4anD0eR96++ created pull request #1590: Can find implementation of Slang in rakudo

[20:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1590

[20:45] <Geth> ¦ roast: 31506095f1 | usev6++ | 2 files

[20:45] <Geth> ¦ roast: [jvm] Update fudge messages: killprocasync NYI

[20:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/31506095f1

[20:52] *** dogbert17 left
[20:53] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Try harder to diagnose p…”: https://github.com/rakudo/rakudo/pull/565#issuecomment-334965048

[20:53] <squashable6> 🍕 AlexDaniel++ merged pull request “Try harder to diagnose p…”: https://github.com/rakudo/rakudo/pull/565

[20:53] <Geth> ¦ rakudo/nom: c7a82d451d | usev6++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | src/Perl6/Grammar.nqp

[20:53] <Geth> ¦ rakudo/nom: Try harder to diagnose problem

[20:53] <Geth> ¦ rakudo/nom: 

[20:53] <Geth> ¦ rakudo/nom: instead of reporting 'Malformed my'

[20:53] <Geth> ¦ rakudo/nom: 

[20:53] <Geth> ¦ rakudo/nom: Fixes RT #125902

[20:53] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c7a82d451d

[20:53] <synopsebot> RT#125902 [open]: https://rt.perl.org/Ticket/Display.html?id=125902 [LTA] error message “Type 'Str' is not declared” (my Str where 'foo' $test;)

[20:57] <TreyHarris> Anyone heard of a design pattern where an input document is "put out for bids" to a number of possible instantiators (all of the same supertype), and the class that wins instantiates it? I feel like I've read about this but web searching is getting me nowhere.

[20:57] <AlexDaniel_> buggable: tag LHF

[20:57] <buggable> AlexDaniel_, There are 7 tickets tagged with LHF; See http://fail.rakudo.party/t/LHF for details

[20:58] <ugexe> strategy pattern?

[21:00] <TreyHarris> ugexe: yes! Thanks, I thought there was an auction-like process to select the algorithm, that's why I wasn't turning anything up

[21:00] *** Morfent joined
[21:02] <TreyHarris> strategy + abstract factory together is I think the example I was thinking of

[21:03] *** Merfont left
[21:11] *** Skarsnik left
[21:14] <ugexe> m: role Impl { method bid { ... }; method foo { ... }; }; class Impl1 does Impl { method bid($x) { $x < 10 ?? 100 !! 10 }; method foo($x) { 1 } }; class Impl2 does Impl { method bid($x) { $x >= 10 ?? 100 !! 10 }; method foo($x) { 2 } }; class StrategyClass { has Impl @.strats = Impl1.new, Impl2.new; method foo($x) { @!strats.sort({ .bid($x) }).tail.foo($x) }; }; StrategyClass.new.foo($_).say for 1, 100

[21:14] <camelia> rakudo-moar c7a82d: OUTPUT: «1␤2␤»

[21:19] *** dogbert17 joined
[21:19] <AlexDaniel_> m: /a/

[21:19] <camelia> rakudo-moar c7a82d: ( no output )

[21:22] <AlexDaniel_> c: all my Str where 'foo' $test;

[21:23] <committable6> AlexDaniel_, https://gist.github.com/d02d501b6cd640987a9b8595511dd6da

[21:23] <AlexDaniel_> bisect: old=2015.10 new=2015.11 my Str where 'foo' $test;

[21:23] <bisectable6> AlexDaniel_, Bisecting by output (old=2015.10 new=2015.11) because on both starting points the exit code is 1

[21:24] <bisectable6> AlexDaniel_, bisect log: https://gist.github.com/c5c278222e5fd1feade9d459fb4bf960

[21:24] <bisectable6> AlexDaniel_, (2015-11-06) https://github.com/rakudo/rakudo/commit/e1e03e6ed5e02e83a1e918811fb89c733b03b1c2

[21:24] <TreyHarris> ugexe: perfect, thanks.

[21:39] *** evalable6 left
[21:39] *** evalable6 joined
[21:40] *** wamba left
[21:45] <Geth> ¦ doc: 563e45b2ef | (Alex Wander)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[21:45] <Geth> ¦ doc: Can find implementation of Slang in rakudo

[21:45] <Geth> ¦ doc: 

[21:45] <Geth> ¦ doc: https://github.com/rakudo/rakudo/blob/8ff76b5962ed34caa7b66b3f95644410fdb9b17e/src/core/Slang.pm

[21:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/563e45b2ef

[21:45] <synopsebot> Link: https://doc.perl6.org/language/variables

[21:45] <Geth> ¦ doc: 50e3df0697 | (Patrick Spek)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[21:45] <Geth> ¦ doc: Merge pull request #1590 from W4anD0eR96/patch-1

[21:45] <Geth> ¦ doc: 

[21:45] <Geth> ¦ doc: Can find implementation of Slang in rakudo

[21:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/50e3df0697

[21:46] <TreyHarris> From the recent commits to ecosystem, it seems migration to CPAN is now underway? I missed the boat on that, is there a doc I can read about what I need to know as a module author?

[21:46] <lizmat> https://6lang.party/post/CPAN6-Is-Here perhaps ?

[21:46] <yoleaux> 16:50Z <AlexDaniel_> lizmat: something was bisected to your commit. Maybe you want to take a look RT #132236

[21:46] <synopsebot> RT#132236 [open]: https://rt.perl.org/Ticket/Display.html?id=132236 [REGRESSION] Meta object construction

[21:48] <TreyHarris> lizmat: indeed! guess I missed the boat by one day, that's not bad :-D

[21:48] <TreyHarris> thanks

[21:48] *** rindolf left
[21:49] <timotimo> http://news.perlfoundation.org/2017/10/september-2017-grant-votes.html  -  my grant made it into existence!

[21:49] <lizmat> timotimo++  # whee!

[21:50] *** Mrofnet joined
[21:51] <squashable6> 🍕 jonathanstowe++ wrote a comment on “Try harder to diagnose p…”: https://github.com/rakudo/rakudo/pull/565#issuecomment-334968141

[21:52] *** kaare__ left
[21:53] <AlexDaniel_> timotimo: yay \o/

[21:53] *** Merfont joined
[21:53] *** kaare__ joined
[21:54] *** Morfent left
[21:55] *** Morfent joined
[21:56] *** Mrofnet left
[21:56] *** thou joined
[21:58] *** Merfont left
[21:58] <Geth> ¦ rakudo/nom: ac97a40161 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/Perl6/Grammar.nqp

[21:58] <Geth> ¦ rakudo/nom: Fix complaints about existing types

[21:58] <Geth> ¦ rakudo/nom: 

[21:58] <Geth> ¦ rakudo/nom: Call typo_typename only if <typename> or <value> failed, not if

[21:58] <Geth> ¦ rakudo/nom: something else went wrong.

[21:58] <Geth> ¦ rakudo/nom: 

[21:58] <Geth> ¦ rakudo/nom: Resolves ½ of RT #127100.

[21:58] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ac97a40161

[21:58] <synopsebot> RT#127100 [new]: https://rt.perl.org/Ticket/Display.html?id=127100 [LTA] error message when specifying return type before parameters ( --> Bool, Int $x, Int $y )

[22:03] *** cdg joined
[22:07] *** cdg left
[22:09] <timotimo> now i only need to get all the stuff working

[22:11] <timotimo> [Coke]: somehow the formatting of the vote results are ... messed up?

[22:11] <timotimo> oh, there's multplication signs there that were interpreted as italic

[22:12] <Geth> ¦ rakudo/nom: bb5583aeb7 | (Elizabeth Mattijsen)++ | src/core/io_operators.pm

[22:12] <Geth> ¦ rakudo/nom: Streamline initialization of $*IN/$*OUT/$*ERR

[22:12] <Geth> ¦ rakudo/nom: 

[22:12] <Geth> ¦ rakudo/nom: - do as much as possible during setting compilation

[22:12] <Geth> ¦ rakudo/nom: - only plug in the handle/encoder/decoder at runtime

[22:12] <Geth> ¦ rakudo/nom: - shaves off about 1.5% from bare startup time

[22:12] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bb5583aeb7

[22:12] <timotimo> cool

[22:12] <timotimo> these add up!

[22:12] <AlexDaniel_> that's a lot actually

[22:12] * lizmat hopes so

[22:13] <AlexDaniel_> is it like 2 or 3 ms?

[22:13] <lizmat> almost 2 msecs for me

[22:13] <timotimo> damn. that's good

[22:13] <lizmat> it's all pretty much near noise though

[22:13] <AlexDaniel_> that's like 75% of the perl5 startup time

[22:13] <lizmat> I mean, the variance I have on bare startup is much larger than that

[22:14] <AlexDaniel_> well, the whole perl5 startup time is noise, so… :)

[22:14] <timotimo> AlexDaniel_: ideally we'd be as fast as perl5 completely without modules :P

[22:14] <lizmat> the measurement is really from putting an nqp::time_n and nqp::say combo in the mainline

[22:14] <AlexDaniel_> lizmat: how did you know that it was this thing that was taking so much time? How to get a detailed breakdown of the startup time?

[22:15] <lizmat> well, I know that IO::Handle.open is a *BIG* resource eater

[22:15] <lizmat> I remembered that from the newio branch  :-)

[22:16] <AlexDaniel_> :S

[22:16] <lizmat> BTW, for me, about 15 msecs  is needed for running the mainline of the setting at startup

[22:16] <lizmat> the rest (about 120 msecs) is apparently MoarVM starting up

[22:16] <timotimo> lizmat: what if we plug in utf8 encoding and decoding and replace it if we happen to have to use some other encoding/decoding on startup?

[22:17] <timotimo> i mean plug in utf8 during setting compilation

[22:17] <timotimo> and replace it if needed during startup

[22:18] <lizmat> I don't think we ever need to replace that at startup

[22:18] <lizmat> there's no way to set another encoding, afaics

[22:18] <lizmat> but e.g. the decoder depends on $is-win

[22:18] <lizmat> and that is runtime

[22:19] <lizmat> perhaps the encoder could be compiletime as well

[22:20] <lizmat> but that's maybe for tomorrow

[22:20] <RabidGravy> byeeeeee

[22:20] *** RabidGravy left
[22:20] <lizmat> AlexDaniel_: re RT #132236 , I found the issue

[22:20] <synopsebot> RT#132236 [open]: https://rt.perl.org/Ticket/Display.html?id=132236 [REGRESSION] Meta object construction

[22:20] <lizmat> AlexDaniel_: the buildplan format between NQP and Rakudo have diverged

[22:20] <AlexDaniel_> oops

[22:21] <lizmat> and somehow the NQP buildplan is being executed by Perl6, or vice-versa

[22:21] <lizmat> will look at that tomorrow

[22:21] <AlexDaniel_> sure

[22:21] <lizmat> good night, keep on squashing!

[22:21] <AlexDaniel_> .pizza lizmat

[22:21] <AlexDaniel_> buggable: pizza lizmat

[22:21] <buggable> lizmat, enjoy this slice of Hawaiian pizza, my friend! Yummy 🍕

[22:22] <timotimo> lizmat: wait, can our code be moved to is-win without issue?

[22:22] <timotimo> good night lizmat :)

[22:22] <timotimo> what i meant to say is:

[22:22] <timotimo> can we precomp under is-win being true and run that under is-win being false?

[22:23] <lizmat> I don't know, I think technically you could ?

[22:23] <lizmat> if not, then we could make an $?IS-WIN

[22:24] <lizmat> but for now, getting some shuteye  :-)

[22:24] <timotimo> sleep well!

[22:35] *** kaare__ left
[22:36] <Geth> ¦ rakudo: dwarring++ created pull request #1186: implement typed pointer increment and array dereference salortiz++

[22:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1186

[22:36] <squashable6> 🍕 dwarring++ opened pull request “implement typed pointer …”: https://github.com/rakudo/rakudo/pull/1186

[22:36] <squashable6> 🍕🍕🍕  First contribution by dwarring++! ♥

[22:36] *** kurahaupo_ joined
[22:36] *** kurahaupo_ left
[22:36] <squashable6> 🍕 dwarring++ edited pull request “implement typed pointer …”: https://github.com/rakudo/rakudo/pull/1186

[22:36] *** kurahaupo_ joined
[22:36] *** kurahaupo_ left
[22:37] *** kurahaupo_ joined
[22:37] *** kurahaupo_ left
[22:37] *** kaare__ joined
[22:38] *** Cabanossi left
[22:39] *** kurahaupo left
[22:40] *** thou left
[22:40] *** Cabanossi joined
[22:40] <AlexDaniel_> TIL

[22:40] <AlexDaniel_> m: sub foo ($x; $y;; --> 42) { }; say foo(50, 60)

[22:40] <camelia> rakudo-moar bb5583: OUTPUT: «42␤»

[22:40] *** thou joined
[22:49] <Geth> ¦ rakudo/nom: 64b001a146 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/Perl6/Grammar.nqp

[22:49] <Geth> ¦ rakudo/nom: Awesome error message for RT #127100

[22:49] <Geth> ¦ rakudo/nom: 

[22:49] <synopsebot> RT#127100 [new]: https://rt.perl.org/Ticket/Display.html?id=127100 [LTA] error message when specifying return type before parameters ( --> Bool, Int $x, Int $y )

[22:49] <Geth> ¦ rakudo/nom: If you can do this:

[22:49] <Geth> ¦ rakudo/nom: 

[22:49] <Geth> ¦ rakudo/nom:     sub foo($x, --> 42) {}

[22:49] <Geth> ¦ rakudo/nom: 

[22:49] <Geth> ¦ rakudo/nom: Then why not this?

[22:49] <Geth> ¦ rakudo/nom: <…commit message has 6 more lines…>

[22:49] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/64b001a146

[22:52] *** yht joined
[23:02] <buggable> New CPAN upload: Config/Perl6/Config-1.2.1.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Config/Perl6/Config-1.2.1.tar.gz

[23:02] <buggable> New CPAN upload: Config-Parser-toml/Perl6/Config-Parser-toml-1.0.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Config-Parser-toml/Perl6/Config-Parser-toml-1.0.0.tar.gz

[23:02] <buggable> New CPAN upload: Config-Parser-yaml/Perl6/Config-Parser-yaml-1.0.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Config-Parser-yaml/Perl6/Config-Parser-yaml-1.0.0.tar.gz

[23:02] <buggable> New CPAN upload: Hash-Merge/Perl6/Hash-Merge-0.1.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Hash-Merge/Perl6/Hash-Merge-0.1.0.tar.gz

[23:02] <buggable> New CPAN upload: MDP-Client/Perl6/MPD-Client-0.1.2.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/MDP-Client/Perl6/MPD-Client-0.1.2.tar.gz

[23:05] <AlexDaniel_> buggable: tags

[23:05] <buggable> AlexDaniel_, Total: 1639; 6.D: 2; 9999: 10; @LARRY: 26; ANNOYING: 9; BOOTSTRAP: 4; BUG: 596; BUILD: 12; CONC: 47; DOCS: 1; EXOTICTEST: 1; FLAP: 1; GLR: 3; IO: 22; JVM: 48; LHF: 7; LTA: 178; MATH: 4; META: 2; MOAR: 2; MOLD: 233; NATIVECALL: 22; NYI: 57; OO: 13; OPTIMIZER: 8; OSX: 2; PARSER: 5; PERF: 26; POD: 19; PRECOMP: 15; REGEX: 46; REGRESSION:

[23:05] <buggable> AlexDaniel_, 36; REPL: 6; RFC: 63; RT: 2; SECURITY: 1; SEGV: 26; SINK: 1; SITE: 1; SPESH: 1; STAR: 7; TESTCOMMITTED: 10; TESTNEEDED: 57; TODO: 13; UNI: 28; UNTAGGED: 276; WEIRD: 2; WINDOWS: 3; See http://fail.rakudo.party/ for details

[23:05] <timotimo> the last modules.perl6.org rebuild took only 40 minutes

[23:08] *** thou left
[23:10] <AlexDaniel_> aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhhhhhhh…

[23:11] *** zakharyas joined
[23:12] <AlexDaniel_> that sweet moment when you realize what's the problem is

[23:14] <timotimo> oh?

[23:14] <timotimo> what's this about?

[23:15] <AlexDaniel_> timotimo: nothing interesting, just yet another LTA ticket

[23:15] <timotimo> oh, ok

[23:15] <timotimo> it occurs to me:

[23:15] <timotimo> we don't really have anything like coverage for regexen

[23:16] <timotimo> i don't have any idea how to do this well

[23:16] <AlexDaniel_> timotimo: I use google for Grammar.nqp coverage…

[23:16] <timotimo> what :)

[23:16] <AlexDaniel_> if some error message was never observed then it's probably dead code

[23:16] <AlexDaniel_> if it did, you'll probably see what makes it happen

[23:17] <AlexDaniel_> timotimo: maybe we're talking about different coverage though

[23:17] *** notostraca is now known as TEttinger

[23:17] <timotimo> yeah, i was wondering more like "did this branch of that alteration ever match anything while running this particular piece of code?"

[23:18] *** yht left
[23:18] <timotimo> imagine a coverage tool that could tell you "you forgot to handle ; and ;; cases in signatures"

[23:19] <AlexDaniel_> oh

[23:19] <AlexDaniel_> timotimo: that sounds wonderful

[23:19] <timotimo> doesn't it? now make it for me! >:)

[23:22] <Zoffix> timotimo++ # congrats on the grant :)

[23:23] <timotimo> thanks :3

[23:23] *** Cabanossi left
[23:24] <AlexDaniel_> timotimo: well, if you think that this should be in core, then maybe submit a ticket first? :)

[23:24] <timotimo> doesn't need to be in core

[23:24] <AlexDaniel_> huggable: most wanted

[23:24] <huggable> AlexDaniel_, nothing found

[23:24] <AlexDaniel_> huggable: most wanted :is: https://github.com/perl6/perl6-most-wanted/blob/master/most-wanted/modules.md

[23:24] <huggable> AlexDaniel_, Added most wanted as https://github.com/perl6/perl6-most-wanted/blob/master/most-wanted/modules.md

[23:24] <AlexDaniel_> timotimo: then submit it here? ↑ :)

[23:25] <timotimo> maybe if i haven't forgotten about it tomorrow

[23:25] <timotimo> i'll go to bed soon

[23:25] *** Cabanossi joined
[23:25] *** nowan joined
[23:28] *** HoboWithAShotgun left
[23:29] *** nowan left
[23:31] *** nowan joined
[23:38] <AlexDaniel_> m: use nqp; say so nqp::istype(True, Int); nqp::rebless(True, Int)

[23:38] <camelia> rakudo-moar 64b001: OUTPUT: «True␤Incompatible MROs in P6opaque rebless for types Bool and Int␤  in block <unit> at <tmp> line 1␤␤»

[23:38] <AlexDaniel_> so istype is true but I can't rebless it

[23:38] <AlexDaniel_> why not?

[23:38] <Zoffix> stage parse went down 5s for me... 65s now on my VM, used to be in low 70s

[23:38] <timotimo> maybe it's just a wrong error message, and the problem is you can't rebless a type object? 

[23:39] <AlexDaniel_> Zoffix: but why?

[23:39] <timotimo> AlexDaniel_: i want to nominate "Not the bees!" for whateverable error messages

[23:39] * timotimo sleepytime

[23:40] <Zoffix> AlexDaniel_: who cares! It's faster!

[23:40] <Zoffix> squashable6: status

[23:40] <squashable6> Zoffix, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈12 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[23:40] <squashable6> Zoffix, Log and stats: https://gist.github.com/ee5e635547603fecc4162249f717e9d7

[23:42] *** ryn1x left
[23:43] <AlexDaniel_> Zoffix: well, if we knew what did it, maybe we could do a bit more of it… :)

[23:43] <Geth> ¦ nqp: 943f7f757c | (Zoffix Znet)++ | src/HLL/Compiler.nqp

[23:43] <Geth> ¦ nqp: Rename `--force-stdin-eval-mode` command line opt

[23:43] <Geth> ¦ nqp: 

[23:43] <Geth> ¦ nqp: To `--repl-mode`

[23:44] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/943f7f757c

[23:44] <Geth> ¦ rakudo/nom: 93e599dbf2 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[23:44] <Geth> ¦ rakudo/nom: Bump NQP

[23:44] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/93e599dbf2

[23:44] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.09-65-gc38cfe8...2017.09-66-g943f7f7

[23:44] <Geth> ¦ rakudo/nom: de0533c4d4 | (Zoffix Znet)++ | src/Perl6/Compiler.nqp

[23:44] <Geth> ¦ rakudo/nom: Update compiler usage message

[23:44] <Geth> ¦ rakudo/nom: 

[23:45] <Geth> ¦ rakudo/nom: To incorporate renaming of `--force-stdin-eval-mode` command line

[23:45] <Geth> ¦ rakudo/nom: opt to `--repl-mode`

[23:45] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/de0533c4d4

[23:45] <Geth> ¦ rakudo/full-make-test: 19 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++, (Zoffix Znet)++, (Timo Paulssen)++, (Jonathan Stowe)++, TimToady++, (Elizabeth Mattijsen)++, usev6++

[23:45] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/compare/78eca2141d...87dc51f514

[23:46] <AlexDaniel_> what's full-make-test?

[23:47] <Geth> ¦ doc: 16a20c0087 | (Zoffix Znet)++ | doc/Programs/00-running.pod6

[23:47] <Geth> ¦ doc: Document `--repl-mode` cmd opt

[23:47] <Geth> ¦ doc: 

[23:47] <Geth> ¦ doc: Impl: https://github.com/rakudo/rakudo/commit/93e599dbf2

[23:47] <Geth> ¦ doc:       https://github.com/perl6/nqp/commit/943f7f757c

[23:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/16a20c0087

[23:47] <Zoffix> `make test` that runs all the files in rakudo's test suite

[23:48] <AlexDaniel_> c: all use nqp; say so nqp::istype(True, Int); nqp::rebless(True, Int)

[23:48] <committable6> AlexDaniel_, https://gist.github.com/0bfb5a45f9ff924b867adad308692445

[23:49] <AlexDaniel_> m: say True.^mro

[23:49] <camelia> rakudo-moar 64b001: OUTPUT: «((Bool) (Int) (Cool) (Any) (Mu))␤»

[23:50] <AlexDaniel_> j: use nqp; say so nqp::istype(True, Int); nqp::rebless(True, Int)

[23:50] <camelia> rakudo-jvm f62ae6: OUTPUT: «Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.␤»

[23:50] <AlexDaniel_> sure

[23:52] <AlexDaniel_> m: class Foo is Int {}; use nqp; my $x = Foo.new(2); say so nqp::istype($x, Int); nqp::rebless($x, Int)

[23:52] <camelia> rakudo-moar de0533: OUTPUT: «True␤Incompatible MROs in P6opaque rebless for types Foo and Int␤  in block <unit> at <tmp> line 1␤␤»

[23:53] <AlexDaniel_> so MRO is incompatible for all subclasses?

[23:53] * AlexDaniel_ looks at https://github.com/MoarVM/MoarVM/blob/d274e827af0aea84944a215b1d087a369020b4d4/src/6model/reprs/P6opaque.c#L1194

[23:54] <Zoffix> Why are you reblessing it anyway?

[23:55] <AlexDaniel_> I can try without rebless

[23:55] <AlexDaniel_> but it's here: https://github.com/rakudo/rakudo/blob/5144216f6ea723747cb25fea51f99861c1ea213a/src/Perl6/World.nqp#L3629

[23:55] <AlexDaniel_> yea, that doesn't compile

[23:57] <AlexDaniel_> and the type is checked here: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Actions.nqp#L4621

[23:58] <AlexDaniel_> so I'm looking at RT #127775

[23:58] <synopsebot> RT#127775 [new]: https://rt.perl.org/Ticket/Display.html?id=127775 [LTA] error message when trying to declare enums incorrectly (enum Foo <<:Bar(1) :Baz>>)

[23:58] <AlexDaniel_> and basically it can be golfed to

[23:58] <AlexDaniel_> m: enum Foo (:Bar(1), :Baz(True))

[23:58] <camelia> rakudo-moar de0533: OUTPUT: «===SORRY!===␤Incompatible MROs in P6opaque rebless for types Bool and Foo␤»

[23:59] <AlexDaniel_> it should either “istype” it to False and bail out with an error message, or rebless should work…

[23:59] <AlexDaniel_> and without rebless I have no idea how to make it work

