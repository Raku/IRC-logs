[00:07] *** ryn1x joined
[00:11] *** robertle left
[00:12] *** lizmat joined
[00:12] *** ryn1x left
[00:12] *** BenGoldberg joined
[00:27] *** nadim left
[00:28] *** TEttinger left
[00:29] *** margeas left
[00:31] *** TEttinger joined
[00:34] <lookatme> o/

[00:39] *** ryn1x joined
[00:44] *** ryn1x left
[01:03] *** astj joined
[01:08] *** awwaiid joined
[01:13] *** kitsunenokenja joined
[01:14] *** sena_kun left
[01:15] *** mcmillhj joined
[01:20] *** mcmillhj left
[01:20] *** troys is now known as troys_

[01:27] *** aborazmeh joined
[01:27] *** aborazmeh left
[01:27] *** aborazmeh joined
[01:33] <comborico1611> Yup.

[01:34] *** kalkin-- joined
[01:38] *** kalkin--- left
[01:40] <comborico1611> Thanks for the food ranger recommendation, if you're still out there. My wife is going to love it!

[01:49] *** ryn1x joined
[01:53] *** ryn1x left
[02:03] <comborico1611> Is any graphics programming done on p6?

[02:03] <lookatme> comborico1611, you welcome :)

[02:03] <comborico1611> Weird timing. 

[02:04] <comborico1611> Haha.

[02:04] <lookatme> What graphics programming?

[02:05] <comborico1611> Anything. GUI, 2D, animation

[02:05] <comborico1611> I did a brief search, and didn't find anything.

[02:05] <lookatme> GTK binding ?

[02:05] <comborico1611> I don't know what that is.

[02:05] <lookatme> GTK is a  GUI framework

[02:06] <lookatme> greppable6: gtk

[02:06] <comborico1611> I see. 

[02:06] <greppable6> lookatme, https://gist.github.com/7819ea3f1ee132d02c09c0d17857d4f7

[02:07] <comborico1611> Are these Graphics modules?

[02:07] <MasterDuke> there are some SDL modules, i thought there was some chat yesterday or today about someone using them

[02:08] <comborico1611> I probably didn't know what they were talking about.

[02:08] <lookatme> :) haha

[02:09] <lookatme> https://modules.perl6.org/search/?q=graphics

[02:10] <lookatme> There are some module about graphics

[02:10] <comborico1611> Simple DirectMedia Layer?

[02:11] <lookatme> No

[02:11] <comborico1611> I see. I gotta finish the chapter on P6 OOP first. Heh.

[02:11] <lookatme> okay 

[02:11] <comborico1611> Gimp toolkit?

[02:11] *** konsolebox left
[02:12] *** konsolebox joined
[02:12] <lookatme> What's that ?

[02:12] <comborico1611> GTK

[02:12] *** mcmillhj joined
[02:12] <lookatme> NO

[02:13] <lookatme> It just a framework like MFC or QT

[02:13] <comborico1611> Looks like i have some things to learn. :)

[02:13] <geekosaur> so?

[02:13] <geekosaur> what else do you use for gui programming?

[02:14] <geekosaur> you two seem to be talking at cross purposes

[02:15] <lookatme> Hmm, he just don't know GTK

[02:15] <comborico1611> My initial question was answered. P6 has GUI stuff, GTK and SDL.

[02:15] <lookatme> There just binding module, you can make your own binding 

[02:15] <comborico1611> Now what they stand for, is another question. Ha.

[02:17] <lookatme> Such as if you want use DirectX in Perl6, you can make a binding for it. Through it is not easy to do it.

[02:17] <lookatme> s/through/though/

[02:20] <comborico1611> I better get to bed. Thanks for the info and chat, lookatme. Goodnight!

[02:20] *** comborico1611 left
[02:26] *** konsolebox left
[02:27] *** konsolebox joined
[02:35] *** mson left
[02:35] <ZzZombo> docs lie

[02:35] <ZzZombo> m: say¬†"\c[woman¬†gesturing¬†OK]";

[02:35] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized character name [woman¬†gesturing¬†OK]‚ê§at <tmp>:1‚ê§------> 3say¬†"\c[woman¬†gesturing¬†OK7‚èè5]";‚ê§¬ª

[02:36] <MasterDuke> m: say "woman gesturing OK".parse-name

[02:36] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´No such method 'parse-name' for invocant of type 'Str'. Did you mean any of these?‚ê§    parse-base‚ê§    parse-names‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[02:36] <MasterDuke> m: say "woman gesturing OK".parse-names

[02:36] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´üôÜ‚Äç‚ôÄÔ∏è‚ê§¬ª

[02:37] <geekosaur> er. that broke at some point then

[02:37] <ZzZombo> timotimo: sure it does. Gotta figure the actual encoding algorithm now.

[02:37] *** mcmillhj left
[02:37] <sacomo> hi all

[02:38] <geekosaur> bisectable: old=2017.01 say¬†"\c[woman¬†gesturing¬†OK]";

[02:38] <bisectable6> geekosaur, Bisecting by output (old=2017.01 new=6ec6f1e) because on both starting points the exit code is 1

[02:39] <bisectable6> geekosaur, bisect log: https://gist.github.com/72d2104c52732714d66fd38df7d5bb28

[02:39] <bisectable6> geekosaur, (2017-03-07) https://github.com/rakudo/rakudo/commit/deac603914bd19b60afea9bdac92525b63f0665c

[02:42] *** konsolebox left
[02:44] *** cdg left
[02:45] *** konsolebox joined
[02:46] *** AlexDaniel left
[02:46] *** ilbot3 left
[02:52] *** konsolebox left
[02:53] *** konsolebox joined
[02:55] *** ilbot3 joined
[02:55] *** ChanServ sets mode: +v ilbot3

[02:58] *** john_parr joined
[03:00] *** ryn1x joined
[03:05] *** cdg joined
[03:10] *** konsolebox left
[03:10] *** cdg left
[03:10] *** noganex_ joined
[03:11] *** konsolebox joined
[03:13] *** noganex left
[03:14] *** ryn1x_ joined
[03:16] *** ryn1x left
[03:18] *** ryn1x_ is now known as ryn1x

[03:18] *** konsolebox left
[03:18] *** ufobat___ joined
[03:20] *** espadrine left
[03:22] *** ufobat_ left
[03:24] *** konsolebox joined
[03:31] <ryn1x> Will rakudo-star 2017.10 be coming to homebrew?

[03:33] *** Cabanossi left
[03:34] *** Cabanossi joined
[03:36] *** konsolebox left
[03:39] *** eliasr left
[03:43] *** konsolebox joined
[03:49] *** konsolebox left
[03:50] *** konsolebox joined
[03:55] *** konsolebox left
[03:57] *** konsolebox joined
[04:03] *** mcmillhj joined
[04:03] *** Cabanossi left
[04:04] *** Cabanossi joined
[04:04] *** pilne left
[04:08] *** mcmillhj left
[04:08] *** kitsunenokenja left
[04:12] *** ryn1x left
[04:13] *** epony left
[04:20] *** mcmillhj joined
[04:22] *** kaare_ joined
[04:23] *** kaare__ left
[04:24] *** mcmillhj left
[04:26] *** epony joined
[04:26] <Geth> ¬¶ doc/ZzZombo-patch-1: 1fb883e01e | ZzZombo++ (committed using GitHub Web editor) | doc/Type/utf8.pod6

[04:26] <Geth> ¬¶ doc/ZzZombo-patch-1: Update utf8.pod6

[04:26] <Geth> ¬¶ doc/ZzZombo-patch-1: review: https://github.com/perl6/doc/commit/1fb883e01e

[04:27] <ZzZombo> what

[04:27] <ZzZombo> I only wanted to test creating pull requests...

[04:28] <ZzZombo> why the hell it committed it straight to the repo????

[04:28] *** ccakes joined
[04:29] *** Cabanossi left
[04:29] <piojo>  ZzZombo: apparently you pushed to the wrong remote

[04:30] <ZzZombo> me? it's the damn stupid web editor that did it.

[04:30] *** Cabanossi joined
[04:32] <piojo> ZzZombo: oh, I don't know nothin' about the web editor.

[04:33] <ZzZombo> also since when did Github stop supporting syntax highlighting for Pods? I recall it being there a year ago.

[04:34] <Geth> ¬¶ ecosystem: 12c1959ed5 | (Alex Chen)++ (committed using GitHub Web editor) | META.list

[04:34] <Geth> ¬¶ ecosystem: Add Algorithm::BitMap

[04:34] <Geth> ¬¶ ecosystem: 

[04:34] <Geth> ¬¶ ecosystem: Thank you for submitting a module to the Perl 6 Ecosystem!

[04:34] <Geth> ¬¶ ecosystem: 

[04:34] <Geth> ¬¶ ecosystem: If adding a new module please review the following check boxes and check the appropriate boxes by going to the preview tab and checking them interactively or alternatively replacing the space in the checkboxes with an X. Your work is appreciated and every module helps make the Perl 6 Ecosystem a bigger and better place ‚ô•

[04:34] <Geth> ¬¶ ecosystem: 

[04:34] <Geth> ¬¶ ecosystem: - [X] I **agree** to the usage of the META file as listed [here](https://github.com/perl6/ecosystem#legal).

[04:34] <Geth> ¬¶ ecosystem: <‚Ä¶commit message has 5 more lines‚Ä¶>

[04:34] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/12c1959ed5

[04:34] <Geth> ¬¶ ecosystem: 62c9abcb12 | (Alex Chen)++ (committed using GitHub Web editor) | META.list

[04:34] <Geth> ¬¶ ecosystem: Merge pull request #379 from perl6/W4anD0eR96-patch-1

[04:34] <Geth> ¬¶ ecosystem: 

[04:34] <Geth> ¬¶ ecosystem: Add Algorithm::BitMap

[04:34] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/62c9abcb12

[04:39] <piojo> It's easy for me to not make that mistake, since I don't have commit rights. :)

[04:40] <piojo> just "git push", then check my remote names and push more carefully if there's an error.

[04:40] *** kaare_ left
[04:41] *** konsolebox left
[04:42] *** konsolebox joined
[04:42] *** troys_ is now known as troys

[04:45] *** travis-ci joined
[04:45] <travis-ci> Doc build passed. ZzZombo 'Update utf8.pod6'

[04:45] <travis-ci> https://travis-ci.org/perl6/doc/builds/303363220 https://github.com/perl6/doc/commit/1fb883e01e68

[04:45] *** travis-ci left
[04:46] <ZzZombo> shhh, keep it quiet!

[04:46] <ZzZombo> bad bots always want to keep a playa down!

[04:47] *** kaare_ joined
[04:50] *** wander left
[04:52] *** mcmillhj joined
[04:55] *** BenGoldberg left
[04:57] *** mcmillhj left
[04:58] *** konsolebox left
[04:58] *** konsolebox joined
[05:06] *** konsolebox left
[05:06] *** xtreak joined
[05:07] *** konsolebox joined
[05:11] *** mcmillhj joined
[05:16] *** mcmillhj left
[05:18] *** konsolebox left
[05:19] *** ivans left
[05:20] *** konsolebox joined
[05:26] *** aborazmeh left
[05:27] *** ivans joined
[05:42] *** konsolebox left
[05:43] *** khw left
[05:44] *** konsolebox joined
[05:44] *** Cabanossi left
[05:46] *** Cabanossi joined
[05:51] *** mr-foobar left
[05:58] *** konsolebox left
[06:00] *** konsolebox joined
[06:05] *** konsolebox left
[06:06] *** konsolebox joined
[06:07] *** troys is now known as troys_

[06:11] *** troys_ is now known as troys

[06:13] *** Cabanossi left
[06:16] *** Cabanossi joined
[06:20] *** konsolebox left
[06:22] *** konsolebox joined
[06:23] *** rindolf joined
[06:27] *** AHoboWithAShotgu left
[06:29] *** TEttinger left
[06:31] *** ryn1x joined
[06:36] *** TEttinger joined
[06:38] *** konsolebox left
[06:38] *** ryn1x_ joined
[06:39] *** konsolebox joined
[06:40] *** ryn1x_ left
[06:47] *** ryn1x left
[06:57] *** konsolebox left
[06:59] *** konsolebox joined
[07:04] *** konsolebox left
[07:04] *** parv joined
[07:06] *** konsolebox joined
[07:12] *** mcmillhj joined
[07:13] *** domidumont joined
[07:13] *** xtreak left
[07:13] *** xtreak joined
[07:16] *** ccakes_ joined
[07:16] *** xtreak_ joined
[07:16] *** mcmillhj left
[07:17] *** xtreak left
[07:19] *** domidumont left
[07:20] *** konsolebox left
[07:20] *** domidumont joined
[07:22] *** konsolebox joined
[07:24] *** ccakes_ left
[07:27] *** konsolebox left
[07:28] *** troys left
[07:29] *** Cabanossi left
[07:29] *** konsolebox joined
[07:30] *** Cabanossi joined
[07:32] *** nadim joined
[07:40] *** ccakes_ joined
[07:44] *** mcmillhj joined
[07:45] *** cdg joined
[07:49] *** mcmillhj left
[07:49] *** konsolebox left
[07:49] *** cdg left
[07:51] *** konsolebox joined
[07:55] *** darutoko joined
[07:55] *** domidumont left
[08:00] *** mcmillhj joined
[08:00] *** konsolebox left
[08:04] *** mcmillhj left
[08:06] *** ccakes_ left
[08:06] *** ccakes left
[08:07] *** konsolebox joined
[08:10] *** ccakes joined
[08:12] *** konsolebox left
[08:14] *** konsolebox joined
[08:17] *** mcmillhj joined
[08:21] *** konsolebox left
[08:22] *** mcmillhj left
[08:23] *** konsolebox joined
[08:26] *** xtreak_ left
[08:27] *** xtreak joined
[08:28] *** Cabanossi left
[08:29] <tyil> does a constraint check throw a certain exception I can check in tests?

[08:29] <tyil> I have a signature sub foo ($n where $n > 0), and I want to add a test that verifies this works correctly

[08:30] *** Cabanossi joined
[08:31] *** xtreak left
[08:37] <moritz> m: sub foo ($n where $n > 0) { }; try foo(-1); say $!.^name

[08:37] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´X::TypeCheck::Binding::Parameter‚ê§¬ª

[08:37] <tyil> sweet

[08:37] <tyil> thanks moritz 

[08:37] <moritz> tyil: there's even a throws-like function in Test.pm6 that you can use

[08:38] <tyil> yes, I knew about that

[08:38] <tyil> but I didn't know the type or if it even was an exception

[08:49] <lookatme> m: say qx/top/.ssss

[08:49] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´qx, qqx is disallowed in restricted setting‚ê§  in sub restricted at src/RESTRICTED.setting line 1‚ê§  in sub QX at src/RESTRICTED.setting line 11‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:50] <lookatme> ^^^, no syntax error ?

[08:55] *** domidumont joined
[08:59] <moritz> why should it be?

[08:59] <moritz> qx/top/ is a just an expression, and .ssss is a method call on it

[09:00] *** scimon joined
[09:00] *** xtreak joined
[09:00] <lookatme> silly me :)

[09:00] *** scimon left
[09:02] *** scimon joined
[09:02] <sacomo> hi all

[09:02] *** abraxxa joined
[09:03] <sacomo> question about closures, if a sub is available in the scope that the closure was created in, is that sub also available in the closure's scope? or anyway to accomplish something similar?

[09:04] <tyil> m: sub foo (Int $n) { }; try foo(.5); say $!.^name

[09:04] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Calling foo(Rat) will never work with declared signature (Int $n)‚ê§at <tmp>:1‚ê§------> 3sub foo (Int $n) { }; try 7‚èè5foo(.5); say $!.^name‚ê§¬ª

[09:04] <scimon> How do you mean "available"? 

[09:05] <tyil> moritz: is there some clean way to test this one too? dies-ok seems to give the same compiler error

[09:05] <sacomo> subs exported from modules included in the scope

[09:05] <tyil> lb 23

[09:06] <scimon> Hmmm I'd expect it to be then. When the closure is accessed I'd expect it to have the scope it was created with. 

[09:07] <sacomo> hmm

[09:10] <masak> TimToady: not sure I've brought this up before -- would you agree that names introduced lexically in a quasi should not be visible in the quasi's unquotes?

[09:10] <masak> in other words: `quasi { my $x; {{{ #`[ $x not visible here ] }}} }`

[09:10] *** itaylor57 left
[09:12] <masak> (my argumentation is that quasi code is not "real"/"incorporated" enough for it to have real declarational side effects. this is in line with recent design decisions around quasis and BEGIN blocks.)

[09:12] *** itaylor57 joined
[09:14] <sacomo> is there a way to make the closure's scope available to modules it includes? "return -> { my $var = 123; use Foo; Foo::bar() }" where $var would be accessible inside bar() without passing it in? Not sure if that is even a good idea, just wondering if it is possible.

[09:15] *** zakharyas joined
[09:16] <geekosaur> uh, it wouldn;t be visible there anyway.

[09:16] <geekosaur> but it sounds like you might want dynamic variables

[09:17] <geekosaur> my $*var = 123; ... sub that uses $*var internally ...

[09:17] <sacomo> geekosaur, thanks, I will take a look

[09:18] <geekosaur> that 'my' creates a variable in its lexical scope (specifically within the braces), not module scope. the name does not exist elsewhere.

[09:19] <sacomo> ok

[09:19] <geekosaur> 'our' creates a package variable, but that still wouldn't be visible inside of Foo module unless it also used 'our' to bring it in scope

[09:20] <geekosaur> https://docs.perl6.org/language/variables#The_*_Twigil https://docs.perl6.org/language/variables#Variable_Declarators_and_Scope

[09:25] *** wamba joined
[09:28] *** Cabanossi left
[09:31] *** Cabanossi joined
[09:39] <scimon> I would veer towards the "Not a good idea" in most cases :)

[09:40] <moritz> dynamic variables are great in grammars

[09:41] <moritz> because the scope of a dynamic variable inside a grammar corresponds to a lexical scope in the text you parse

[09:42] *** robertle joined
[09:42] <ZzZombo> m: say 'a'.ords[0].WHAT

[09:42] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(Int)‚ê§¬ª

[09:43] <ZzZombo> What is the size of Int?

[09:44] <moritz> Int is bigint

[09:44] <moritz> m: say 2**100

[09:44] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´1267650600228229401496703205376‚ê§¬ª

[09:44] <moritz> m: say 2**1000

[09:44] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914‚Ä¶¬ª

[09:47] *** sena_kun joined
[09:49] *** koto joined
[09:49] *** koto left
[09:49] *** sena_kun left
[09:49] *** sena_kun joined
[09:51] *** sena_kun left
[09:59] *** sena_kun joined
[10:00] *** domidumont1 joined
[10:02] *** domidumont left
[10:02] *** konsolebox left
[10:08] *** sena_kun left
[10:08] *** sena_kun joined
[10:08] *** sena_kun left
[10:09] *** sena_kun joined
[10:09] *** konsolebox joined
[10:10] <ZzZombo> holy...

[10:10] <ZzZombo> that's one too many...

[10:14] *** Cabanossi left
[10:16] *** Cabanossi joined
[10:18] *** mcmillhj joined
[10:19] *** zakharyas1 joined
[10:22] *** mcmillhj left
[10:26] *** zakharyas1 left
[10:27] *** bisectable6 left
[10:27] *** bisectable6 joined
[10:28] *** zakharyas1 joined
[10:32] *** mcmillhj joined
[10:37] *** mcmillhj left
[10:41] *** AlexDaniel joined
[10:46] *** kerframil joined
[10:46] *** mcmillhj joined
[10:46] *** gregf_ joined
[10:49] *** zakharyas1 left
[10:51] *** mcmillhj left
[10:58] *** abraxxa left
[10:59] *** mcmillhj joined
[10:59] *** abraxxa joined
[11:01] *** piojo left
[11:03] *** mcmillhj left
[11:05] *** parv left
[11:09] <tyil> how to override the standard "Usage:" response in a perl 6 program if the arguments dont match the MAIN's signature?

[11:09] *** kerframil left
[11:10] *** kerframil joined
[11:11] <tadzik> write your own HELP() iirc

[11:11] <tadzik> or USAGE? hmm

[11:11] <scimon> USAGE I believe.

[11:11] <scimon> https://docs.perl6.org/language/functions#index-entry-USAGE

[11:12] <scimon> (The $*USAGE variable is nice as it give you the default message and then you can add to it)

[11:13] <tyil> cool, thanks

[11:15] *** mcmillhj joined
[11:17] *** eliasr joined
[11:20] *** ivans_ joined
[11:20] <scovit> Hello, how to disable strict from the command line "the fast way"? I am thinking about something like -M/strict or like this

[11:21] *** mcmillhj left
[11:21] <scovit> googling this I just get an inconclusive discussion on the mailing list

[11:21] <scovit> where people propose good arguments and get totally ignored

[11:23] *** ivans left
[11:25] <timotimo> "no strict" isn't a feature that got much love in the past

[11:25] <timotimo> it still has a rather severe performance impact

[11:26] <timotimo> hm, actually

[11:27] <timotimo> m: my $a; for ^10_000_000 { $a++ }; say $a; say now - INIT now

[11:27] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´10000000‚ê§1.1738138‚ê§¬ª

[11:27] <timotimo> m: no strict; for ^10_000_000 { $a++ }; say $a; say now - INIT now

[11:27] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´10000000‚ê§5.12958426‚ê§¬ª

[11:27] <scimon> Weeee

[11:27] <scimon> I see what you mean.

[11:27] *** itaipu joined
[11:27] <ilmari> m: no strict; my $a; for ^10_000_000 { $a++ }; say $a; say now - INIT now

[11:28] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´10000000‚ê§1.20387895‚ê§¬ª

[11:29] <lookatme> :)

[11:29] <ZzZombo> timotimo: uh, I forgot what do I have to do in order to create my custom encoder/decoder/whatever? Can I show me again?

[11:29] <timotimo> m: our $a; for ^10_000_000 { $a++ }; say $a; say now - INIT now

[11:29] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´10000000‚ê§1.184042‚ê§¬ª

[11:29] <lookatme> ZzZombo, you can check the irc log

[11:29] <ZzZombo> where?

[11:30] <lookatme> http://irc.perl6.org

[11:30] *** kaare__ joined
[11:30] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/Encoding.pm - implement this role with a class

[11:30] <scovit> timotimo it is a pity but most of the time I would pay that for having nostrict

[11:30] <scovit> perl6 -ne 'no strict; @F = .split(/\s/); $norm = @F[1] unless defined $norm; say @F[0], "\t", @F[1]/$norm;'

[11:30] <scovit> perl -nae '$norm = $F[1] unless defined $norm; print $F[0], "\t", $F[1]/$norm, "\n";'

[11:31] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/Encoding/Registry.pm#L34 - call this method on Encoding::Registry if you want your encoding to be available everywhere by just passing its name rather than the class

[11:31] *** kaare_ left
[11:31] <scovit> more people using perl6 for this kind of simple things might help improving performances

[11:31] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/Encoding/Encoder.pm - implement this role in the thing you return from your Encoding's "encoder" method

[11:31] <scimon> I don't see why adding my twice is harder than writing no strict.

[11:32] <scovit> scimon it is

[11:32] <scovit> since no strict might be just -E instead of -e

[11:32] *** nadim left
[11:33] <scimon> Thing is when I'm writing cmd line perl5 I use my because I just use my by default.

[11:33] <timotimo> i'm not sure why you write $norm //= @F[1] in long hand there :)

[11:33] <scovit> timotimo sure I'm not used to // too much but you are right

[11:34] <timotimo> m: my $norm = 123; given .split(/\s/) { my $norm //= .[1]; say .[0], "\t", .[1] / $norm }

[11:34] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´Cannot resolve caller split(Any, Regex); Routine does not have any candidates. Is only the proto defined?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:35] <timotimo> m: $_ = "1234 9876"; my $norm = 123; given .split(/\s/) { my $norm //= .[1]; say .[0], "\t", .[1] / $norm }

[11:35] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´1234    1‚ê§¬ª

[11:35] <timotimo> oh, one my too many, heh.

[11:35] <timotimo> m: $_ = "1234 9876"; my $norm = 123; given .split(/\s/) { $norm //= .[1]; say .[0], "\t", .[1] / $norm }

[11:35] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´1234    80.292683‚ê§¬ª

[11:35] <timotimo> yeah, not really short.

[11:35] <timotimo> m: $_ = "1234 9876"; my $norm = 123; $_ .= split(/\s/); $norm //= .[1]; say .[0], "\t", .[1] / $norm

[11:35] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´1234    80.292683‚ê§¬ª

[11:37] <Juerd> .words :)

[11:37] <timotimo> not the same thing!

[11:38] <timotimo> m: say "1234       999".split(/\s/).perl;

[11:38] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´("1234", "", "", "", "", "", "", "999").Seq‚ê§¬ª

[11:38] <timotimo> m: say "1234       999".words.perl;

[11:38] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´("1234", "999").Seq‚ê§¬ª

[11:38] <Juerd> True, but was the split correct in the first place? :)

[11:39] <mniip> ooh. Now that I have a higher DPI display I can actually make out the N and L in ‚ê§!

[11:39] <timotimo> :D

[11:39] <mniip> it used to look like some kind of wiggly line

[11:40] <timotimo> when will we make .=words; short hand for $_ .= words

[11:40] <timotimo> m: $_ = "hi there"; .=words; .say

[11:40] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(hi there)‚ê§¬ª

[11:40] <timotimo> it already is!

[11:40] <mniip> timotimo, be consistent and make '=x' shorthand for '$_=x'

[11:41] *** greppable6 joined
[11:41] *** ChanServ sets mode: +v greppable6

[11:41] <timotimo> m: sub prefix:<=>($value) { $CALLER::_ = $value }; .say; =99; .say

[11:41] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´===SORRY!===‚ê§Cannot find method 'ast' on object of type NQPMu‚ê§¬ª

[11:41] <Juerd> mniip: Unary = would easily be confused with pod

[11:41] <timotimo> m: sub prefix:<=>($value) { CALLER::('$_') = $value }; .say; =99; .say

[11:41] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´===SORRY!===‚ê§Cannot find method 'ast' on object of type NQPMu‚ê§¬ª

[11:41] <timotimo> is this about pod parsing?

[11:41] <timotimo> m: =99

[11:41] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix = instead‚ê§at <tmp>:1‚ê§------> 3=7‚èè0599‚ê§¬ª

[11:41] <timotimo> hm. wow?

[11:42] <Juerd> m: =lc

[11:42] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix = instead‚ê§at <tmp>:1‚ê§------> 3=lc7‚èè5<EOL>‚ê§¬ª

[11:42] <Juerd> m: =head1

[11:42] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix = instead‚ê§at <tmp>:1‚ê§------> 3=head17‚èè5<EOL>‚ê§¬ª

[11:42] <timotimo> ^- that's also what you get when you have some invalid pod after the thing

[11:42] <timotimo> yeah

[11:42] <Juerd> Note the location of the ‚èè though. It's before 99, but after lc and head1

[11:43] <timotimo> ah, interesting indeed

[11:43] <timotimo> that internal error is still bad

[11:43] <timotimo> m: sub prefix:<‚â†>($value) { CALLER::('$_') = $value }; .say; ‚â†99; .say

[11:43] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(Any)‚ê§99‚ê§¬ª

[11:43] <timotimo> .u ‚Çå

[11:43] <yoleaux> U+208C SUBSCRIPT EQUALS SIGN [Sm] (‚Çå)

[11:43] <timotimo> absolutely perfect.

[11:44] <timotimo> m: sub prefix:<‚Çå>($value) { CALLER::('$_') = $value }; .say; ‚Çå99; .say

[11:44] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(Any)‚ê§99‚ê§¬ª

[11:44] <lookatme> m: sub prefix:<=>($value) { $CALLER::("_") = $value }; .say; prefix:<=>(99); .say

[11:44] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(Any)‚ê§99‚ê§¬ª

[11:45] <lookatme> m: sub prefix:<*>($value) { $CALLER::("_") = $value }; .say; *99; .say

[11:45] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(Any)‚ê§99‚ê§¬ª

[11:45] *** margeas joined
[11:45] <lookatme> m: sub prefix:<_>($value) { $CALLER::("_") = $value }; .say; _99; .say

[11:45] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    _99 used at line 1‚ê§‚ê§¬ª

[11:45] *** cdg joined
[11:48] <timotimo> m: sub prefix:<_>($value) { $CALLER::("_") = $value }; .say; _\99; .say

[11:48] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3e) { $CALLER::("_") = $value }; .say; _\7‚èè0599; .say‚ê§¬ª

[11:48] <timotimo> m: sub prefix:<=>($value) { $CALLER::("_") = $value }; .say; =\99; .say

[11:48] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´===SORRY!===‚ê§Cannot find method 'ast' on object of type NQPMu‚ê§¬ª

[11:48] <timotimo> m: sub postfix:<=>($value) { $CALLER::("_") = $value }; .say; 99=; .say

[11:48] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´===SORRY!===‚ê§Cannot find method 'ast' on object of type NQPMu‚ê§¬ª

[11:50] *** cdg left
[11:53] <ilmari> hm, no Set.power-set method?

[11:55] <lookatme> what is power set ?

[11:56] <ilmari> the set of all subsets of a set

[11:56] <moritz> m: say (1, 2, 3).combinations

[11:56] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(() (1) (2) (3) (1 2) (1 3) (2 3) (1 2 3))‚ê§¬ª

[11:56] <moritz> the logic is already in List.combinations

[11:56] <moritz> m: set(1, 2, 3).combinations

[11:56] <camelia> rakudo-moar 6ec6f1eb2: ( no output )

[11:56] <moritz> m: say set(1, 2, 3).combinations

[11:56] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´(() (1 => True) (3 => True) (2 => True) (1 => True 3 => True) (1 => True 2 => True) (3 => True 2 => True) (1 => True 3 => True 2 => True))‚ê§¬ª

[11:58] *** HoboWithAShotgun joined
[12:02] <lookatme> m: for ^10_0000 { my $x = 1 (elem) set(1, 2, 3, 4); }; say now - INIT now;

[12:02] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´1.2249444‚ê§¬ª

[12:02] <lookatme> m: for ^10_0000 { my $x = 1 (elem) (1, 2, 3, 4); }; say now - INIT now;

[12:02] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´0.015957‚ê§¬ª

[12:03] <lookatme> m: my @f = 1, 2, 3, 4; for ^10_0000 { my $x = 1 (elem) @f; }; say now - INIT now;

[12:03] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´0.3875291‚ê§¬ª

[12:03] <lookatme> m: my %f := set(1, 2, 3, 4); for ^10_0000 { my $x = 1 (elem) %f; }; say now - INIT now;

[12:03] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´0.1006326‚ê§¬ª

[12:06] *** cdg joined
[12:08] *** kaare__ left
[12:09] *** lookatme left
[12:11] *** cdg left
[12:14] *** kaare_ joined
[12:14] *** markmont left
[12:15] *** konsolebox left
[12:16] *** rgrau joined
[12:16] *** konsolebox joined
[12:20] *** ryn1x joined
[12:21] *** xtreak left
[12:22] *** ryn1x left
[12:23] *** zakharyas left
[12:26] *** Ven joined
[12:26] *** Ven is now known as Guest25798

[12:31] *** konsolebox left
[12:33] *** konsolebox joined
[12:37] *** kaare_ left
[12:37] *** kaare_ joined
[12:44] *** araraloren joined
[12:54] <Geth> ¬¶ doc: feef77ea41 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[12:54] <Geth> ¬¶ doc: add description of a ‚Äútwine‚Äù

[12:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/feef77ea41

[12:54] <synopsebot> Link: https://doc.perl6.org/language/glossary

[12:55] *** markmont joined
[12:58] <Geth> ¬¶ doc: ae1da58aac | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[12:58] <Geth> ¬¶ doc: fix typo, add commas

[12:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ae1da58aac

[12:59] *** kalkin-- left
[13:00] *** konsolebox left
[13:00] *** Guest25798 left
[13:00] *** MasterDuke left
[13:00] *** abraxxa left
[13:01] *** kalkin- joined
[13:01] *** abraxxa joined
[13:01] *** konsolebox joined
[13:06] *** wamba left
[13:07] *** koto joined
[13:08] *** konsolebox left
[13:09] *** konsolebox joined
[13:10] *** koto left
[13:10] *** sena_kun left
[13:12] *** mcmillhj joined
[13:15] *** konsolebox left
[13:15] <Geth> ¬¶ doc: 4fd59ee4c4 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[13:15] <Geth> ¬¶ doc: correct the example

[13:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4fd59ee4c4

[13:15] <synopsebot> Link: https://doc.perl6.org/language/glossary

[13:15] *** konsolebox joined
[13:17] *** mcmillhj left
[13:19] *** piojo joined
[13:26] *** philomath_ joined
[13:27] *** konsolebox left
[13:28] *** konsolebox joined
[13:35] *** AlexDaniel left
[13:40] *** mcmillhj joined
[13:55] *** abraxxa left
[13:56] *** philomath_ is now known as pip

[13:56] *** pip is now known as this

[13:56] *** this is now known as new

[13:56] *** new is now known as oops

[13:57] *** zakharyas joined
[13:57] *** dj_goku_ left
[14:04] *** Morfent joined
[14:07] *** Merfont left
[14:08] *** cdg joined
[14:08] *** cdg left
[14:08] *** cdg joined
[14:15] *** Cabanossi left
[14:16] *** Cabanossi joined
[14:17] *** cdg_ joined
[14:20] *** perlpilot joined
[14:20] *** cdg left
[14:22] *** mniip left
[14:22] *** mniip joined
[14:23] *** oops left
[14:23] *** mson joined
[14:35] *** philomath_ joined
[14:40] *** domidumont1 left
[14:41] *** domidumont joined
[14:43] *** Cabanossi left
[14:45] *** Ven joined
[14:45] *** Ven is now known as Guest40983

[14:46] *** mattr joined
[14:46] *** Cabanossi joined
[14:48] <ZzZombo> Can I filter out/replace all surrogate pairs out of my UTF-16 string?

[14:49] <timotimo> what format do you have the utf16 in? an 8-bit buffer or a 16-bit buffer?

[14:49] <timotimo> or, like, did you already decode code units?

[14:49] <ZzZombo> it's utf16

[14:49] <ZzZombo> I have the original string, BTW.

[14:50] <ZzZombo> Can't I work it out there first?

[14:50] <timotimo> you mean the perl6 utf16 type, yes?

[14:50] <ZzZombo> Yes.

[14:50] <timotimo> oh, if you have the Str, you just have to filter anything with a codepoint above a certain number

[14:50] <ZzZombo> .ords is it?

[14:51] <timotimo> yeah

[14:51] <timotimo> though i'm not sure if there's any combiners in that region

[14:51] <timotimo> in that case you'd have to .NFC or .NFD to get actual code points

[14:52] *** troys joined
[14:52] <ZzZombo> m: say (.ords,.NFC) with 'asd{-+ }–Ø‚úâüîî'

[14:52] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´((97 115 100 123 45 43 32 125 1071 9993 128276) NFC:0x<0061 0073 0064 007b 002d 002b 0020 007d 042f 2709 1f514>)‚ê§¬ª

[14:53] <ZzZombo> m: say (.ords,.NFC.contents) with 'asd{-+ }–Ø‚úâüîî'

[14:53] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´No such method 'contents' for invocant of type 'NFC'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:53] <timotimo> you want .list

[14:53] <ZzZombo> m: say (.ords,.NFC.list) with 'asd{-+ }–Ø‚úâüîî'

[14:53] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´((97 115 100 123 45 43 32 125 1071 9993 128276) (97 115 100 123 45 43 32 125 1071 9993 128276))‚ê§¬ª

[14:54] <ZzZombo> Yea... why does Buf implement one, the Uni the other?

[14:54] <timotimo> the difference between ords and .NFC.list comes down to combining characters

[14:54] <timotimo> .u combining

[14:54] <yoleaux> U+0300 COMBINING GRAVE ACCENT [Mn] (‚óåÃÄ)

[14:54] <yoleaux> U+0301 COMBINING ACUTE ACCENT [Mn] (‚óåÃÅ)

[14:54] <yoleaux> U+0302 COMBINING CIRCUMFLEX ACCENT [Mn] (‚óåÃÇ)

[14:55] <ZzZombo> m: say (.ords,.NFC.list) with 'a‚óåÃÄsd{-+ }–Ø‚úâüîî'

[14:55] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´((97 9676 768 115 100 123 45 43 32 125 1071 9993 128276) (97 9676 768 115 100 123 45 43 32 125 1071 9993 128276))‚ê§¬ª

[14:55] <timotimo> m: say (.ords, .NFC.list) given "a\c[combining grave accent]\c[combining acute accent]"

[14:55] <camelia> rakudo-moar 6ec6f1eb2: OUTPUT: ¬´((224 769) (224 769))‚ê§¬ª

[14:55] *** comborico1611 joined
[14:55] <timotimo> oh, huh?

[14:55] <ZzZombo> I don't see any difference

[14:55] <timotimo> i must be remembering something old

[14:56] <timotimo> anyway, gotta go afk again, but from that you'd just replace any number above 0x10000 with, for example, the replacement character

[14:56] <timotimo> u: replacement

[14:56] <unicodable6> timotimo, U+FFFC OBJECT REPLACEMENT CHARACTER [So] (Ôøº)

[14:56] <unicodable6> timotimo, U+FFFD REPLACEMENT CHARACTER [So] (ÔøΩ)

[14:56] *** abraxxa joined
[15:02] *** zakharyas left
[15:03] <ZzZombo> Great, works as far as I can see.

[15:04] <ZzZombo> timotimo += Inf ;)

[15:07] *** abraxxa left
[15:08] <Geth> ¬¶ atom-language-perl6: vmg++ created pull request #73: grammar: Ensure all captures have a 'name' key

[15:08] <Geth> ¬¶ atom-language-perl6: review: https://github.com/perl6/atom-language-perl6/pull/73

[15:09] *** wamba joined
[15:12] *** mattr left
[15:15] *** bwisti joined
[15:19] *** mcmillhj left
[15:21] *** mcmillhj joined
[15:26] *** domidumont left
[15:26] *** mcmillhj left
[15:30] *** Cabanossi left
[15:31] *** Cabanossi joined
[15:32] *** Sgeo_ joined
[15:37] *** mcmillhj joined
[15:41] *** cdg_ left
[15:41] *** Guest40983 left
[15:41] *** cdg joined
[15:43] *** kerframil left
[15:44] *** kerframil joined
[15:45] *** cdg_ joined
[15:46] *** cdg left
[15:46] *** cdg__ joined
[15:47] *** troys is now known as troys_

[15:49] *** HoboWithAShotgun left
[15:50] *** cdg_ left
[15:50] *** robertle left
[15:57] *** markmont left
[15:58] *** markmont joined
[15:58] *** cdg__ left
[15:59] *** cdg joined
[16:03] *** zakharyas joined
[16:04] *** domidumont joined
[16:05] *** troys_ is now known as troys

[16:06] *** domidumont left
[16:07] *** domidumont joined
[16:07] <tony-o> .tell Tux bench now has cpu/sys/usr times in it

[16:07] <yoleaux> tony-o: I'll pass your message to Tux.

[16:15] *** Mrofnet joined
[16:18] *** Morfent left
[16:24] *** piojo left
[16:26] *** piojo joined
[16:28] *** Cabanossi left
[16:29] *** scimon left
[16:30] *** Cabanossi joined
[16:31] *** robertle joined
[16:35] *** Mrofnet is now known as Morfent

[16:39] *** ufobat___ left
[16:39] *** cdg left
[16:40] *** cdg joined
[16:41] *** cdg_ joined
[16:42] *** Ven joined
[16:42] *** Ven is now known as Guest48681

[16:43] *** Morfent left
[16:45] *** cdg left
[16:55] *** domidumont left
[16:56] *** domidumont joined
[17:00] *** wamba left
[17:00] *** piojo1 joined
[17:01] *** piojo left
[17:09] <Geth> ¬¶ atom-language-perl6: 81b97522ea | (Vicent Marti)++ | grammars/perl6fe.cson

[17:09] <Geth> ¬¶ atom-language-perl6: grammar: Ensure all captures have a 'name' key

[17:09] <Geth> ¬¶ atom-language-perl6: review: https://github.com/perl6/atom-language-perl6/commit/81b97522ea

[17:09] <Geth> ¬¶ atom-language-perl6: 382720261a | (Patrick Spek)++ (committed using GitHub Web editor) | grammars/perl6fe.cson

[17:09] <Geth> ¬¶ atom-language-perl6: Merge pull request #73 from vmg/vmg/fixes

[17:09] <Geth> ¬¶ atom-language-perl6: 

[17:09] <Geth> ¬¶ atom-language-perl6: grammar: Ensure all captures have a 'name' key

[17:09] <Geth> ¬¶ atom-language-perl6: review: https://github.com/perl6/atom-language-perl6/commit/382720261a

[17:11] *** bolts joined
[17:14] *** troys is now known as troys_

[17:21] *** Guest48681 is now known as Ven``

[17:32] *** itaipu left
[17:33] *** Morfent joined
[17:34] *** itaipu joined
[17:36] *** Mrofnet joined
[17:39] *** Morfent left
[17:43] *** Cabanossi left
[17:46] *** Cabanossi joined
[17:48] <moritz> .u MESSAGE

[17:48] <yoleaux> U+0095 MESSAGE WAITING [Cc] (<control>)

[17:48] <yoleaux> U+009E PRIVACY MESSAGE [Cc] (<control>)

[17:48] <moritz> never heard of those

[17:51] *** Ven`` left
[17:52] *** philomath_ left
[17:53] *** itaipu left
[17:55] *** ivans_ left
[18:01] *** ivans joined
[18:03] *** zakharyas left
[18:03] *** Mrofnet left
[18:05] *** HoboWithAShotgun joined
[18:12] *** troys_ is now known as troys

[18:21] *** zakharyas joined
[18:22] *** john_parr_ joined
[18:24] *** john_parr left
[18:24] *** john_parr_ is now known as john_parr

[18:35] *** cdg_ left
[18:36] *** comborico1611 left
[18:37] *** kaare_ left
[18:38] *** darutoko left
[18:39] *** cdg joined
[18:40] *** cdg left
[18:41] *** mcmillhj left
[18:41] *** kaare_ joined
[18:42] *** cdg joined
[18:44] *** Cabanossi left
[18:46] *** Cabanossi joined
[18:47] *** ChoHag left
[18:50] *** comborico1611 joined
[18:51] *** mcmillhj joined
[18:54] *** committable6 left
[18:54] *** committable6 joined
[18:55] *** committable6 left
[18:55] *** committable6 joined
[18:55] *** ChanServ sets mode: +v committable6

[18:55] *** committable6 left
[18:56] *** committable6 joined
[18:58] *** committable6 left
[18:58] *** committable6 joined
[18:58] *** ChanServ sets mode: +v committable6

[19:05] *** ChoHag joined
[19:13] *** AlexDaniel joined
[19:15] *** bdmatatu joined
[19:18] <Geth> ¬¶ ecosystem: f85867ce1a | (Brian Duggan)++ | META.list

[19:18] <Geth> ¬¶ ecosystem: Remove OAuth2::Client::Google (now on CPAN)

[19:18] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/f85867ce1a

[19:24] *** perigrin joined
[19:33] <buggable> New CPAN upload: OAuth2-Client-Google-0.1.1.tar.gz by BDUGGAN https://cpan.metacpan.org/authors/id/B/BD/BDUGGAN/Perl6/OAuth2-Client-Google-0.1.1.tar.gz

[19:38] *** rgrau left
[19:40] *** ChoHag left
[19:42] *** kaare_ left
[19:43] *** Cabanossi left
[19:45] *** silug joined
[19:45] *** zakharyas left
[19:46] *** Cabanossi joined
[19:47] *** ChoHag joined
[19:50] *** ShalokShalom joined
[19:53] *** mr-foobar joined
[19:54] *** releasable6 left
[19:54] *** releasable6 joined
[19:54] *** ChanServ sets mode: +v releasable6

[19:54] *** AlexDaniel left
[19:56] *** mcmillhj left
[19:57] *** eliasr left
[20:04] *** troys is now known as troys_

[20:09] *** Morfent joined
[20:10] *** mcmillhj joined
[20:11] *** domidumont left
[20:15] *** char_var[buffer] left
[20:15] *** Cabanossi left
[20:15] *** espadrine joined
[20:15] *** mcmillhj left
[20:16] *** Cabanossi joined
[20:22] *** cdg left
[20:23] *** cdg joined
[20:24] *** Aaronepower joined
[20:25] *** mcmillhj joined
[20:26] *** epony left
[20:27] *** bdmatatu left
[20:29] *** troys_ is now known as troys

[20:39] <comborico1611> Quiet day, huh?

[20:40] <moritz> looks like :)

[20:40] <comborico1611> Are you into martial arts?

[20:41] <moritz> no

[20:41] <moritz> but my wife is, at least into one branch

[20:41] *** cdg_ joined
[20:41] <comborico1611> How come the Germans don't have their own?

[20:42] <moritz> that's a surprisingly good question

[20:43] <moritz> I guess one part of it is that Germany doesn't have a long unified culture

[20:43] <comborico1611> It just occurred to me, you being German.

[20:43] <moritz> many parts have (Bavaria, Saxonia, etc.), but "Germany" isn't very old

[20:43] <comborico1611> I didn't realize that.  

[20:43] *** Cabanossi left
[20:43] <comborico1611> Prussia started when?

[20:44] <comborico1611> And why does it sound like Russia? I never had a teacher explain that.

[20:44] <moritz> but, I'm not aware of either of those having a string martial arts culture either

[20:44] <comborico1611> Haha.

[20:44] <moritz> comborico1611: in German, they don't sound similar. "Preussen" vs. "Russland"

[20:45] <comborico1611> Ah! Mystery finally solved!

[20:45] *** kaare_ joined
[20:45] *** cdg left
[20:45] <comborico1611> I always forget the... Um... Whatever it's called.  F r ance isn't France but Francais.

[20:46] *** cdg_ left
[20:46] *** Cabanossi joined
[20:46] <comborico1611> It is unfortunate somebody choose perRussia. I believe Americans don't know what Prussia is because of this.

[20:47] <comborico1611> pRussia*

[20:47] <comborico1611> Americans are ignorant enough as it is. lol.

[20:47] <moritz> https://www.quora.com/Why-do-martial-arts-seem-to-come-almost-exclusively-from-Asia

[20:47] <comborico1611> No need to confuse us further.

[20:48] <moritz> there's only so many phonemes you can combine :-)

[20:51] <geekosaur> that answer ignores things like capoeira that are western but share similarities with asian-style martial arts

[20:52] <comborico1611> Preussen... How would i say this in my OWN English.  I'm not 100% on pronunciation, but I'd call it Parusin.

[20:52] <comborico1611> Honestly, i think the German spelling is English-enough.

[20:53] <moritz> the eu is pronounce like the "oi" in "moisture"

[20:53] <comborico1611> But no, somebody had to call it pRussia.

[20:53] <moritz> let's hope their p-value is low enough :-)

[20:54] <comborico1611> I see.  In English, we would just replace oi with ew. Prussen.

[20:54] <comborico1611> Heh, i don't get your joke.

[20:56] <moritz> in statistics, the p-value is related to the strength of evidence

[20:56] <comborico1611> When I hear the word capoeira, I always think of that 90's movie where a substitute teacher teaches the students it. He then becomes involved in some dangerous undercover drug thing at the school or something.

[20:57] <moritz> like, you are trying to test if some new drug is better than not doing anything. But, it could be random fluctuation

[20:57] <comborico1611> I see.  

[20:57] <moritz> so, the lower your p-value, the more confident you are when distinnguishing the cases

[20:57] <moritz> hence, you need a very low p-value to distinguish russia and prussia :-)

[20:58] <comborico1611> *smiles blankly

[20:58] <moritz> ok, I admit, that was very nerdy :)

[21:00] <comborico1611> Do you use much mathy examples in your Fundamentals? Mathy is difficult to define. It's always refreshing when the example uses very basic numbers.

[21:01] <moritz> comborico1611: there are two of the ~12 examples that use basic math

[21:01] <comborico1611> Where? You sent me something?

[21:02] <geekosaur> comborico1611, you might note that the Prussia confusion is self-inflicted; it's not like the Prussians told us how to Anglicize their name

[21:02] <moritz> one is about visualizing disk usage by different files, the other is about plotting number of git commits per contributor

[21:02] <moritz> so, not really rocket science

[21:02] <geekosaur> (well, strictly, it's probably the British who did it)

[21:03] <comborico1611> Yeah i know! That is the regretful part. I think it didn't even need to be changed/anglicized.

[21:04] <comborico1611> I think the two biggest topics of programming are, language wars, and do I need to be good at math to program.

[21:05] <comborico1611> Language Wars includes what's the best programming language to learn first.

[21:08] <moritz> that's the first stage

[21:08] <ivans> too bad the big vs. little endian war is practically over

[21:08] <ivans> who doesn't like drama

[21:08] <moritz> then the second stage is "I know how to program, but how do I structure it so that I can maintain it?"

[21:09] <comborico1611> Heh, yes stage one, but the biggest stage. Many people desire to be programmers but never seal the deal.

[21:09] <moritz> and maybe the third stage is "what's a good cache key? and how will operating and business interact with my program?"

[21:10] <moritz> dunno yet what the fourth stage will be; I'm eager to find out

[21:10] <comborico1611> Stage two is surprising. Stage three is beyond me knowledge.

[21:10] <comborico1611> My*

[21:11] <comborico1611> I think my talent is in stage two. I love to organize things.

[21:12] <comborico1611> But I've never seen a ten page code, so I'm not sure what stage two is about.

[21:13] *** mson left
[21:17] <moritz> large code bases don't make good newcomer training material :-)

[21:18] *** troys is now known as troys_

[21:18] <comborico1611> Probably so. But i excel when i see whole program examples.  I have textbooks with just snippets of code.

[21:19] <ivans> I think looking at "real" code bases can be useful, even if you skip 99% of the details

[21:19] <comborico1611> Stroustrup has been the worst. I think it is the most common method.  I'm only aware of one author that gives whole program examples.

[21:20] <comborico1611> Have should be hate*

[21:20] <ivans> I learned C first and it was hard to imagine the difference between typical text book examples and even the simplest real program

[21:20] <ivans> but looking at how some utilities like `cat` and `less` are implemented gave me lots of ideas

[21:21] <comborico1611> I've never seen a real program yet.

[21:21] <ivans> then looking at the difference between a GNU and an openbsd implementation was fun :p

[21:21] <comborico1611> Those are C library modules?

[21:21] <ivans> they are typical programs you find in a Linux or Unix system

[21:21] <ivans> usually written in C

[21:22] <comborico1611> Maybe I'll look at one sometime. I'm trying to jump into networking. I have more books to read first.

[21:22] <ivans> `cat` is very simple: it takes file names as command line arguments and prints the contents of each file

[21:23] <ivans> but even though it sounds trivial it's one of the most common programs you'll use in linux

[21:23] *** Herby_ joined
[21:23] <Herby_> o/

[21:23] <comborico1611> Interesting.

[21:24] <ivans> there are many programs you find in a linux/unix system that can be basically implemented in less than 100 lines of code

[21:24] <ivans> but looking at how the "real" implementations are written is nice

[21:24] <Herby_> rookie question: I'm using perl6 2017.07 on linux.  Whats the easiest way to upgrade to 2017.10?

[21:25] <ivans> Herby_: did you install it from you distribution's package manager or manually?

[21:25] <ivans> (and which distro?)

[21:26] <comborico1611> I'm a rookie, as well. :-(

[21:26] <Herby_> i'm a linux novice user as well but I believe I built it from source?

[21:26] <Herby_> and galliousOS on a chromebook

[21:26] <Herby_> and i used checkinstall

[21:26] <Herby_> not sure if any of that helps

[21:27] <Herby_> comborico1611: part of the club :)

[21:27] <ivans> me too actually :D

[21:27] *** epony joined
[21:28] *** troys_ is now known as troys

[21:28] *** Cabanossi left
[21:28] <ivans> Herby_: if you built from sourc I'd assume you just have to build the new version like you did the old one

[21:29] <comborico1611> (There actually are knowledgeable people on here. ivans is confused. He's no rookie.)

[21:29] <Herby_> do i need to somehow remove the 2017.07 before building the 2017.10?

[21:31] *** Cabanossi joined
[21:31] <bolts> Herby_: I installed the update from source without removing the old version, and it hasn't broken for me, but someone more knowledgeable may have a smarter answer.

[21:32] <Herby_> bolts: thanks, i'll give it a go

[21:33] <perlpilot> (If you want the experts to show up, suggest to someone that they use rakudobrew  ;-)

[21:35] <Herby_> so guys, I was thinking about using this program called rakudobrew

[21:35] <ivans> Herby_: I just googled and found that you might want to use rakudobrew

[21:35] *** kerframil left
[21:35] <Herby_> :)

[21:35] <comborico1611> Rakudobrew is like the bat-signal, huh?

[21:35] <perlpilot> Herby_: yeah, I build from source without removing the old version all the time.  Just be aware that your old version won't be available anymore (which is usually only a problem when there's issues building the new version)

[21:35] <[Coke]> ... well, I almost fell for it, having not review more than 4 lines

[21:36] <ivans> when I build stuff from source I usually do it in a home directory and make it easy to rm -rf

[21:36] <comborico1611> Haha.

[21:36] <geekosaur> note that rakudobrew is intended for developers, and may be confusing otherwise

[21:36] <[Coke]> I use this to do a rebuild, which is kind of the nuclear option:

[21:36] <Herby_> here they come! 

[21:36] <comborico1611> Good to know!

[21:36] <ivans> I tried to look at how rakudo's "make install" works with multiple versions but I don't know

[21:36] <[Coke]> https://gist.github.com/coke/c13e55d56c17fdf18b441a0bf9dba0b4

[21:36] <ivans> perlpilot: you're a genius

[21:37] <perlpilot> only sometimes.  other times I'm an idiot

[21:37] <Herby_> 60% of the time you're right every time

[21:37] *** espadrine left
[21:38] *** mcmillhj left
[21:38] <bolts> Is there a way to make r* use single line error and warning messages? I'm trying to write a compiler file for vim so I can use the quickfix window to navigate errors and warnings.

[21:38] <[Coke]> There's an env variable which lets you get json out.

[21:39] <[Coke]> Could probably use that as a base to generate vim-friendly output. Not knowing vim-guts: you can't parse the existing output?

[21:39] <comborico1611> lol

[21:39] <comborico1611> Does anyone watch Tennis here?

[21:40] <comborico1611> Regardless, Herbie's comment reminds me of the Watson predictions four tennis tournaments. Watson's like if he wins 60% of his first serves there's a 45% chance that he'll win. It's hilarious hilariously confusing.

[21:40] <perlpilot> Is "Tennis" a person or is it like "tennis", but more important  :)

[21:41] <comborico1611> Sorry, voice recognition is dictating my capitals.

[21:41] *** aindilis joined
[21:41] * [Coke] knows enough germans that an occasional capitalized Noun doesn't set off any bells.

[21:41] <comborico1611> Heh.

[21:41] <Herby_> comborico1611: I do not but I stole that line from the movie Anchorman

[21:41] <[Coke]> however, side-rant, apparently "dice" is now allowed to mean one or more. Heathens.

[21:41] <comborico1611> I see.

[21:41] <perlpilot> [Coke]: I read that too.  It's a crazy world now.  :)

[21:42] <comborico1611> The Barbarian horde!

[21:42] *** mcmillhj joined
[21:44] <bolts> [Coke]: I can parse the default output, but it's tricky with how they're formatted. I have a start, but without knowing all of the possible warnings, it's so far trial and error to get them all.  I'll take a look at the json output.

[21:44] <Herby_> does anyone have a beginner friendly resource for dipping toes in to async/concurrency/parallelism?

[21:44] *** mson joined
[21:45] <bolts> Vim's support for multiline error messages is a little kludgy.

[21:45] <[Coke]> at least the JSON output gives you something very parsable.

[21:45] <perlpilot> JSON++

[21:47] *** kitsunenokenja joined
[21:49] *** mcmillhj left
[21:51] *** markmont left
[21:57] <perlpilot> Herby_: Is https://docs.perl6.org/language/concurrency beginner friendly?  

[21:58] *** Aceeri joined
[21:58] *** Aaronepower left
[21:59] *** Aceeri is now known as Guest7088

[21:59] *** mcmillhj joined
[22:01] <Herby_> perlpilot: I'll give that a read.  Thanks!

[22:04] <bolts> So, $RAKUDO_EXCEPTIONS_HANDLER works great for errors, so far, but warnings aren't printed in json. Am I doing something wrong?

[22:05] *** mcmillhj left
[22:06] *** ivans left
[22:06] <lizmat> because warnings are not caught by CATCH, but by CONTROL ?

[22:07] <bolts> Is there a way to get warnings as json?

[22:09] <lizmat> not that I know atm

[22:09] <perlpilot> Herby_: We do need a good book on this stuff for Perl¬†6 though.

[22:11] *** kerframil joined
[22:13] *** mcmillhj joined
[22:14] *** ivans joined
[22:16] *** kitsunenokenja left
[22:18] *** markmont joined
[22:18] *** pilne joined
[22:18] *** mcmillhj left
[22:18] *** mr-fooba_ joined
[22:18] *** mr-foobar left
[22:28] *** Cabanossi left
[22:30] *** mcmillhj joined
[22:31] *** Cabanossi joined
[22:32] *** pilne left
[22:32] *** cdg joined
[22:35] *** mcmillhj left
[22:37] *** pilne joined
[22:37] *** cdg left
[22:38] *** Herby_ left
[22:40] * moritz certainly won't be the one to write it

[22:42] *** comborico1611 left
[22:42] *** AndChat|688961 joined
[22:42] *** troys is now known as troys_

[22:44] *** cdg joined
[22:45] *** ccakes_ joined
[22:45] *** ccakes_ left
[22:47] *** kitsunenokenja joined
[22:48] *** cdg left
[22:49] *** ShalokShalom left
[22:50] *** mcmillhj joined
[22:51] *** AlexDaniel joined
[22:55] *** mcmillhj left
[22:56] *** char_var[buffer] joined
[23:03] <buggable> New CPAN upload: App-Cpan6-0.8.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/App-Cpan6-0.8.0.tar.gz

[23:04] *** mr-fooba_ left
[23:10] *** mcmillhj joined
[23:11] *** mr-foobar joined
[23:14] *** mcmillhj left
[23:16] *** robertle left
[23:20] *** kitsunenokenja left
[23:27] *** Mrofnet joined
[23:28] <bolts> So, this I what I have so far for the perl6.vim compiler definition: https://gitlab.com/BoltsJ/dotfiles/blob/master/nvim/.config/nvim/compiler/perl6.vim I'm pretty sure I'm missing a bunch of waring types though.

[23:29] <ugexe> tyil: i would suggest removing the folder "perl6-nigger" from your distribution before uploading it to cpan (App-Cpan6-0.8.0.tar.gz)

[23:30] <tyil> oh

[23:30] <tyil> oops :'D

[23:30] *** Cabanossi left
[23:30] *** Morfent left
[23:30] *** Cabanossi joined
[23:31] <tyil> pushed a new version with that removed

[23:43] *** rindolf left
[23:43] <buggable> New CPAN upload: App-Cpan6-0.8.1.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/App-Cpan6-0.8.1.tar.gz

[23:47] *** mr-fooba_ joined
[23:48] *** mr-foobar left
[23:53] <buggable> New CPAN upload: App-Cpan6-0.8.2.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/App-Cpan6-0.8.2.tar.gz

[23:54] *** AndChat|688961 left
[23:54] *** comborico1611 joined
