[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 2 ballots submitted by 2 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:00] *** ryn1x joined
[00:00] *** headcase left
[00:01] *** headcase joined
[00:03] *** atroxaper left
[00:04] *** margeas left
[00:05] *** TreyHarris joined
[00:05] <jdv79> AlexDaniel: fwiw, i get its not much, i gave moritz the steps to fix "fancy unicode" in the logs.  its all him.

[00:06] <jdv79> i was on the trail of the ansi color bug but i'm holding off til unicode is fixed

[00:06] <jdv79> maybe we should move to something else.  idk.

[00:07] <AlexDaniel> if we can fix it soon-ish then there's no problem

[00:07] <jdv79> ask moritz. the unicode steps are known.

[00:08] <AlexDaniel> .tell moritz I've created this out of frustration https://github.com/perl6/marketing/issues/1 . According to jdv79 the steps for fixing the unicode issue are known. What's holding it?

[00:08] <yoleaux> AlexDaniel: I'll pass your message to moritz.

[00:08] <jdv79> basically its just the usual mysql suckage

[00:09] <AlexDaniel> jdv79: I don't think I've seen the steps for fixing this, but does it happen on read or write?

[00:09] <jdv79> well, a tad more but not too surprising

[00:09] <jdv79> its write

[00:10] <AlexDaniel> alright, so some of the logs are broken forever?

[00:10] <AlexDaniel> :S

[00:11] <jdv79> the table's charset needs to be changed to utf8mb4.  the sproc used for the insert needs the param changed to the same.  the "set names" clause the same.  that should be it.

[00:11] *** headcase left
[00:11] <jdv79> yes.  iirc the upgrade/change from mysql to mariadb was the source of the issues.

[00:11] <AlexDaniel> I'm not happy about it because at least quotable6 is using the same logs

[00:12] <AlexDaniel> and we have a few months of mangled data… maybe someone can donate his logs so that we can recover some of it

[00:13] <jdv79> its since july 21 or so

[00:13] <jdv79> its easy to find if you poke that table

[00:13] <AlexDaniel> jdv79: thank you for your help

[00:13] <jdv79> anyway.  have a good weekend!

[00:17] *** timotimo left
[00:17] *** timo joined
[00:18] *** timo is now known as timotimo

[00:22] *** jeromelanteri left
[00:23] *** headcase joined
[00:23] *** nhywyll left
[00:26] *** kyan left
[00:27] *** headcase left
[00:37] *** Sgeo_ joined
[00:37] *** cdg joined
[00:39] *** Sgeo left
[00:39] *** leont joined
[00:41] *** headcase joined
[00:42] *** Mrofnet left
[00:42] *** cdg left
[00:45] *** leont left
[00:45] *** headcase left
[00:50] *** headcase joined
[00:54] *** headcase left
[00:59] *** headcase joined
[01:02] *** headcase left
[01:02] *** Ven`` left
[01:02] *** headcase joined
[01:08] *** troys_ is now known as troys

[01:09] <HoboWithAShotgun> Raider is now known as Twix

[01:09] *** Morfent joined
[01:12] *** Ven`` joined
[01:17] *** Ven`` left
[01:20] *** mudman joined
[01:21] *** Cabanossi left
[01:23] *** headcase left
[01:24] *** Cabanossi joined
[01:27] *** headcase joined
[01:29] *** headcase left
[01:29] *** headcase joined
[01:36] *** atroxaper joined
[01:38] *** cdg joined
[01:39] *** ryn1x left
[01:40] *** atroxaper left
[01:42] *** cdg left
[01:46] *** squashable6 left
[01:46] *** ilbot3 left
[01:46] *** headcase_ joined
[01:47] *** headcase left
[01:50] *** troys is now known as troys_

[01:50] *** squashable6 joined
[01:51] *** Cabanossi left
[01:54] <Geth> ¦ whateverable: 91137b410a | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[01:54] <Geth> ¦ whateverable: Accept any word I can think of

[01:54] <Geth> ¦ whateverable: 

[01:54] <Geth> ¦ whateverable: Also makes Releasable and Squashable more consistent between each other.

[01:54] <Geth> ¦ whateverable: 

[01:54] <Geth> ¦ whateverable: See #236.

[01:54] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/91137b410a

[01:54] *** Cabanossi joined
[01:54] *** ilbot3 joined
[01:55] *** ChanServ sets mode: +v ilbot3

[01:58] *** headcase_ left
[01:58] *** TEttinger left
[02:00] *** TEttinger joined
[02:01] *** wamba left
[02:02] *** headcase joined
[02:10] <Geth> ¦ whateverable: c73cd331cc | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[02:10] <Geth> ¦ whateverable: Emergency line is on a different channel

[02:10] <Geth> ¦ whateverable: 

[02:10] <Geth> ¦ whateverable: Issue #224

[02:10] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/c73cd331cc

[02:10] <Geth> ¦ whateverable: ec2169ce0e | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[02:10] <Geth> ¦ whateverable: Note that “say” is ok in these cases

[02:10] <Geth> ¦ whateverable: 

[02:10] <Geth> ¦ whateverable: I tend to grep for “say” to make sure I don't leave any debugging aids

[02:10] <Geth> ¦ whateverable: in the code. Maybe it's better to use ｢put $foo.gist｣ here?

[02:10] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/ec2169ce0e

[02:12] <geekosaur> 'note'?

[02:12] *** headcase left
[02:12] <geekosaur> m: note $*PERL

[02:12] <camelia> rakudo-moar 4d0ead: OUTPUT: «Perl 6 (6.c)␤»

[02:13] <AlexDaniel> geekosaur: ahhhh maybe, that's if I want it to go to STDERR

[02:13] <AlexDaniel> hmm

[02:13] <geekosaur> that is where I'd want most debug output

[02:14] <AlexDaniel> m: $*PERL.note

[02:14] <camelia> rakudo-moar 4d0ead: OUTPUT: «Perl 6 (6.c)␤»

[02:16] <u-ou> m:

[02:16] <evalable6> u-ou, rakudo-moar 4d0ead240: OUTPUT: «»

[02:18] <Geth> ¦ whateverable: b6bd79da61 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[02:18] <Geth> ¦ whateverable: Remove debugging output

[02:18] <Geth> ¦ whateverable: 

[02:18] <Geth> ¦ whateverable: Oops

[02:18] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/b6bd79da61

[02:18] <Geth> ¦ whateverable: 754d4ebaba | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[02:18] <Geth> ¦ whateverable: Note instead of saying

[02:18] <Geth> ¦ whateverable: 

[02:18] <Geth> ¦ whateverable: It's probably better to use STDERR in this case.

[02:18] <Geth> ¦ whateverable: 

[02:18] <Geth> ¦ whateverable: geekosaur++

[02:18] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/754d4ebaba

[02:20] *** HoboWithAShotgun left
[02:23] *** Cabanossi left
[02:24] *** Cabanossi joined
[02:33] *** cdg joined
[02:35] *** headcase joined
[02:36] *** ryn1x joined
[02:39] *** headcase left
[02:40] *** squashable6 left
[02:43] *** headcase joined
[02:47] *** headcase left
[02:47] *** TimToady left
[02:48] *** noganex joined
[02:49] *** TimToady joined
[02:50] *** headcase joined
[02:51] *** noganex_ left
[02:57] *** notostraca joined
[02:59] *** headcase left
[03:00] *** headcase joined
[03:00] *** TEttinger left
[03:03] *** mudman left
[03:03] *** notostraca left
[03:06] *** notostraca joined
[03:07] *** atroxaper joined
[03:08] *** jaush joined
[03:09] *** ryn1x left
[03:09] *** headcase left
[03:10] <Geth> ¦ whateverable: 595e52e37b | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[03:10] <Geth> ¦ whateverable: Point to SQUASHathon wiki

[03:10] <Geth> ¦ whateverable: 

[03:10] <Geth> ¦ whateverable: Hopefully the page will be moved elsewhere, but right now let's point

[03:10] <Geth> ¦ whateverable: to whatever we have.

[03:10] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/595e52e37b

[03:10] <Geth> ¦ whateverable: 7f79b08b7a | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[03:10] <Geth> ¦ whateverable: Allow strikethru

[03:10] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/7f79b08b7a

[03:10] *** squashable6 joined
[03:10] *** ChanServ sets mode: +v squashable6

[03:11] *** atroxaper left
[03:12] *** skids joined
[03:15] *** mudman joined
[03:18] *** ryn1x joined
[03:20] *** Cabanossi left
[03:23] *** headcase joined
[03:23] *** Cabanossi joined
[03:24] *** ryn1x left
[03:28] *** jaush left
[03:35] <AlexDaniel> squashable6: status

[03:35] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 5 days and ≈6 hours (2017-10-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[03:39] *** atroxaper joined
[03:41] *** headcase left
[03:43] *** headcase joined
[03:45] *** eliasr left
[03:52] *** headcase left
[03:54] *** headcase joined
[03:55] <weabot> AlexDaniel that's next friday?

[03:57] <AlexDaniel> weabot: next Saturday, but it's UTC-12⌁UTC+14 so for most people it also includes half of Friday and Sunday

[03:57] <weabot> oh alright

[03:57] <weabot> I'll try to contribute a bit even though I've never opened up rakudo's code

[03:58] <AlexDaniel> weabot: commits to https://github.com/perl6/roast/ also count, so there's a little chance you won't even have to :)

[03:58] <AlexDaniel> buggable: tag TESTNEEDED

[03:58] <buggable> AlexDaniel, There are 46 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[03:58] <geekosaur> how about docs?

[03:58] *** headcase left
[03:59] <AlexDaniel> no docs this time

[03:59] <weabot> but I'd like to, seems like a good way to get started in contributing to moar or rakudo

[03:59] *** headcase joined
[03:59] <AlexDaniel> weabot: \o/ 🍕

[03:59] <AlexDaniel> geekosaur: don't know if you know, but last SQUASHathon was about the doc repo. Here's the log: https://gist.github.com/Whateverable/fea65db631511cb1913352df5cd397d8

[04:00] <geekosaur> I remembered docs from last time, was just wondering as that might be a route for folks who don;t know the source

[04:03] *** headcase left
[04:07] <AlexDaniel> .tell lizmat It's probably a good idea to mention SQUASHathon and Hacktoberfest in the next weekly. https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day https://github.com/issues?utf8=%E2%9C%93&q=org%3Aperl6+is%3Aopen+label%3AHacktoberfest+ https://hacktoberfest.digitalocean.com/

[04:07] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[04:09] <AlexDaniel> .tell lizmat oh, and https://raw.githubusercontent.com/perl6/marketing/master/TablePosters/SQUASHathon/2017.10/v1--CommunityBugSquashathon--SQUARE-social-media.jpg

[04:09] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[04:12] <AlexDaniel> did we just go down from 1675 to 1608 tickets?

[04:15] *** ryn1x joined
[04:18] <weabot> is rakudo entirely written in nqp and perl6?

[04:23] <AlexDaniel> weabot: well, yeah, but it needs a virtual machine to run on (like MoarVM)

[04:23] *** headcase joined
[04:24] <weabot> yeah I see that

[04:25] <weabot> and it needs nqp

[04:25] *** notostraca is now known as TEttinger

[04:25] <weabot> obviously

[04:26] <nine> Should I upgrade my laptop's OS on the day before a 2 weeks vacation? I don't know why, but I feel so tempted.

[04:27] <Zoffix> AlexDaniel: I rebuilt R6's db, so it's possible it had some already closed tickets as new. I think if a ticket is made resolved and then someone comments on it, it think it was opened again. Also spam.

[04:27] *** ryn1x left
[04:27] <AlexDaniel> buggable: bugs

[04:27] <buggable> AlexDaniel, Total: 1649; 6.D: 1; 9999: 10; @LARRY: 24; ANNOYING: 7; BOOTSTRAP: 5; BUG: 603; BUILD: 12; CONC: 48; DOCS: 1; EXOTICTEST: 1; GLR: 3; IO: 23; JVM: 53; LTA: 178; MATH: 4; META: 1; MOAR: 1; NATIVECALL: 22; NYI: 55; OO: 13; OPTIMIZER: 8; OSX: 2; PARSER: 6; PERF: 28; POD: 19; PRECOMP: 15; REGEX: 51; REGRESSION: 37; REPL: 6; RFC: 63; RT: 1;

[04:27] <buggable> AlexDaniel, SECURITY: 1; SEGV: 25; SINK: 1; SITE: 1; SPESH: 1; STAR: 7; TESTCOMMITTED: 10; TESTNEEDED: 46; TODO: 13; UNI: 26; UNTAGGED: 413; WEIRD: 2; WINDOWS: 3; See http://fail.rakudo.party/ for details

[04:27] <AlexDaniel> aaaaaah

[04:27] <AlexDaniel> ok then last time I used that number

[04:28] <AlexDaniel> and 1608 is straight from RT

[04:28] <Zoffix> m: say [+] <959 690>

[04:28] <camelia> rakudo-moar 4d0ead: OUTPUT: «1649␤»

[04:29] <Zoffix> RT tells me 1649 tickets, so R6 matches it

[04:29] *** khw left
[04:29] <AlexDaniel> that's my query: https://rt.perl.org/Search/Results.html?Format='<a href%3D"%2Frt3%2FTicket%2FDisplay.html%3Fid%3D__id__">__id__<%2Fa>%2FTITLE%3A%23'%2C%0A'<a href%3D"%2Frt3%2FTicket%2FDisplay.html%3Fid%3D__id__">__Subject__<%2Fa>%2FTITLE%3ASubject'%2C%0A'__QueueName__'%2C%0A'__ExtendedStatus__'%2C%0A'__CreatedRelative__'%2C%0A'<a href%3D"%2Frt3%2FTicket%2FDisplay.html%3FAction%3DTake%26amp%3Bid%3D__id__">Take<%2Fa>%2FTITLE%3A%26nbsp%3B

[04:29] <AlexDaniel> '&Order=DESC|DESC|ASC|ASC&OrderBy=Created|||&Query=Owner %3D 'Nobody' AND Queue !%3D 'spam' AND ( Status %3D 'new' OR Status %3D 'open' ) AND Queue %3D 'perl6'&RowsPerPage=50

[04:29] <AlexDaniel> /o\

[04:30] <Zoffix> I just went to https://rt.perl.org/ and looked in the "perl6" in query box

[04:30] <Zoffix> AlexDaniel: your query excludes tickets marked as stalled

[04:30] *** APic left
[04:31] <AlexDaniel> riiiight

[04:32] *** headcase left
[04:32] <Zoffix> Yeah, I agree about marketing Issue you opened.

[04:35] <Zoffix> .tell HoboWithAShotgun there are some modules that let you have lazy attributes: https://modules.perl6.org/s/lazy

[04:35] <yoleaux> Zoffix: I'll pass your message to HoboWithAShotgun.

[04:38] *** headcase joined
[04:38] *** kaare__ joined
[04:42] *** headcase left
[04:42] *** kaare_ left
[04:42] *** mudman left
[04:42] *** headcase joined
[04:43] *** APic joined
[04:47] *** headcase left
[04:52] *** headcase joined
[04:55] *** troys_ is now known as troys

[05:01] *** headcase left
[05:03] *** headcase joined
[05:06] *** Cabanossi left
[05:08] *** Cabanossi joined
[05:08] *** cdg left
[05:12] *** headcase left
[05:13] *** headcase joined
[05:15] *** mudman joined
[05:17] *** headcase left
[05:19] *** Xal left
[05:20] *** troys left
[05:21] *** Xal joined
[05:23] *** Zeke joined
[05:24] *** Zeke left
[05:25] *** aborazmeh joined
[05:25] *** aborazmeh left
[05:25] *** aborazmeh joined
[05:32] *** skids left
[05:33] *** headcase joined
[05:39] *** mudman left
[05:42] *** headcase left
[05:45] *** cdg joined
[05:50] *** cdg left
[05:54] *** kaare__ is now known as kaare_

[06:02] *** lizmat left
[06:03] *** headcase joined
[06:06] *** hoffentlichja left
[06:07] *** headcase left
[06:08] *** headcase joined
[06:08] *** lizmat joined
[06:14] *** chakli joined
[06:17] *** headcase left
[06:23] *** setty1 joined
[06:28] *** headcase joined
[06:30] *** kaare__ joined
[06:32] *** mudman joined
[06:33] *** kaare_ left
[06:37] *** headcase left
[06:38] *** mudman left
[06:43] *** headcase joined
[06:44] <Zoffix> m: use nqp; dd nqp::list_i(1, 2, 3).list

[06:44] <camelia> rakudo-moar 4d0ead: OUTPUT: «Cannot find method 'list': no method cache and no .^find_method␤  in block <unit> at <tmp> line 1␤␤»

[06:45] <Zoffix> What's the easy way to dump out an nqp::list_i? Just to take a look what's inside

[06:47] <Zoffix> m: use nqp; sub d (Mu \l) { dd (nqp::atpos_i(l,$_) for ^nqp::elems(l)) }; d nqp::list_i(42, 2, 3)

[06:47] <camelia> rakudo-moar 4d0ead: OUTPUT: «(42, 2, 3)␤»

[06:47] <Zoffix> Does the trick, I guess

[06:49] *** domidumont joined
[06:52] *** headcase left
[06:53] *** domidumont left
[06:54] *** domidumont joined
[06:57] *** headcase joined
[06:58] *** aborazmeh left
[07:02] *** atroxaper left
[07:04] *** headcase_ joined
[07:06] *** headcase left
[07:10] *** wamba joined
[07:16] *** headcase_ left
[07:16] *** domidumont left
[07:19] *** cdg joined
[07:19] *** headcase joined
[07:21] *** Aaronepower left
[07:21] *** Cabanossi left
[07:21] *** aborazmeh joined
[07:21] *** aborazmeh left
[07:21] *** aborazmeh joined
[07:23] *** Cabanossi joined
[07:24] *** cdg left
[07:26] *** piojo joined
[07:32] *** Xal left
[07:34] *** Xal joined
[07:41] *** nadim joined
[07:47] *** headcase left
[07:52] *** kshannon left
[07:53] *** kshannon joined
[08:01] *** jercos left
[08:01] *** piojo left
[08:02] *** jercos joined
[08:06] *** Cabanossi left
[08:08] *** Cabanossi joined
[08:11] *** piojo joined
[08:16] *** chakli left
[08:20] *** cdg joined
[08:21] *** setty1 left
[08:25] *** cdg left
[08:27] *** headcase joined
[08:28] *** mempko joined
[08:28] *** HoboWithAShotgun joined
[08:31] <Zoffix> .tell teatime you were curious about the regex fix: https://github.com/rakudo/rakudo/commit/681d6be974  tests https://github.com/perl6/roast/commit/99c822abde  It's scarier than it looks only 'cause it's in full-on NQP. It could've been in almost pure Perl 6 (but nqp performs better).

[08:31] <yoleaux> Zoffix: I'll pass your message to teatime.

[08:32] <Zoffix> .tell teatime Docs for nqp ops: https://github.com/perl6/nqp/blob/master/docs/ops.markdown https://github.com/rakudo/rakudo/blob/nom/docs/ops.markdown and guts course: https://github.com/edumentab/rakudo-and-nqp-internals-course#rakudo-and-nqp-internals-workshop

[08:32] <yoleaux> Zoffix: I'll pass your message to teatime.

[08:32] *** headcase left
[08:36] <Zoffix> .tell teatime I meant it's *NOT* as scary as it looks :)

[08:36] <yoleaux> Zoffix: I'll pass your message to teatime.

[08:37] *** headcase joined
[08:39] *** kaare__ left
[08:40] *** kaare_ joined
[08:41] *** headcase left
[08:44] *** Pilu joined
[08:46] *** headcase joined
[08:48] *** llfourn left
[08:48] *** asssio joined
[08:50] *** knobo left
[08:50] *** asssio left
[08:50] *** headcase left
[08:54] *** margeas joined
[08:55] *** ken joined
[08:56] *** ken is now known as Guest70189

[08:56] *** yht left
[08:56] *** Guest70189 is now known as thunktone

[08:57] *** mempko left
[08:58] *** domidumont joined
[09:00] *** headcase joined
[09:04] *** headcase left
[09:09] *** headcase joined
[09:13] *** headcase left
[09:14] *** nadim left
[09:18] *** headcase joined
[09:21] *** Ven`` joined
[09:21] *** cdg joined
[09:25] <HoboWithAShotgun> how do i break out of a react block OR how do i stop a supply from the outside? consider: https://hastebin.com/atorapaqol.pl

[09:25] <yoleaux> 04:35Z <Zoffix> HoboWithAShotgun: there are some modules that let you have lazy attributes: https://modules.perl6.org/s/lazy

[09:25] *** cdg left
[09:26] <HoboWithAShotgun> if want to exit main-loop cleanly on press of ctrl-x

[09:27] *** headcase left
[09:32] *** headcase joined
[09:34] *** rindolf joined
[09:36] *** headcase left
[09:44] *** aborazmeh left
[09:46] *** hoffentlichja joined
[09:46] *** thunktone left
[09:46] *** lancew joined
[09:48] *** thunktone joined
[09:52] *** Cabanossi left
[09:53] *** Cabanossi joined
[09:57] *** cdg joined
[10:01] *** cdg left
[10:16] *** evalable6 left
[10:16] *** evalable6 joined
[10:24] *** mniip left
[10:27] *** chakli joined
[10:28] <chakli> How do i check if a Str variable is undefined or empty?

[10:28] *** setty1 joined
[10:28] *** eliasr joined
[10:28] <hoffentlichja> chakli: I thnk you can do that with "with"

[10:29] <hoffentlichja> and with "without" the negative form

[10:29] <HoboWithAShotgun> m: my $str; say $str.defined;

[10:29] <camelia> rakudo-moar 07c1e4: OUTPUT: «False␤»

[10:30] <HoboWithAShotgun> m: my $str; say "no" unless $str;

[10:30] <camelia> rakudo-moar 07c1e4: OUTPUT: «no␤»

[10:31] <hoffentlichja> m: my Str $s; say "it undefined?!" without $s;

[10:31] <camelia> rakudo-moar 07c1e4: OUTPUT: «it undefined?!␤»

[10:31] <HoboWithAShotgun> m: my $str = ""; say "no" unless $str;

[10:31] <camelia> rakudo-moar 07c1e4: OUTPUT: «no␤»

[10:31] <hoffentlichja> :)

[10:31] *** pmurias joined
[10:31] <chakli> m: my $str =""; say "qqq" with $str;

[10:31] <camelia> rakudo-moar 07c1e4: OUTPUT: «qqq␤»

[10:32] <HoboWithAShotgun> yes, but it's still perl. undefined and empty evaluate to false

[10:32] <HoboWithAShotgun> so no need to get fancy :)

[10:33] *** setty1 left
[10:35] <HoboWithAShotgun> m: my $str = ""; say "no" if $str ~~ False;

[10:35] <camelia> rakudo-moar 07c1e4: OUTPUT: «Potential difficulties:␤    Smartmatch against False always fails; if you mean to test the topic for truthiness, use :!so or *.not or !* instead␤    at <tmp>:1␤    ------> 3my $str = ""; say "no" if $str ~~ 7⏏5False;␤»

[10:36] <chakli> m: my $str = ""; say "good" if $str.defined && $str !~~ "";

[10:36] <camelia> rakudo-moar 07c1e4: ( no output )

[10:42] *** japhb left
[10:42] *** japhb joined
[10:43] *** TEttinger left
[10:45] *** notbenh left
[10:45] *** notbenh joined
[10:50] *** Cabanossi left
[10:53] *** Cabanossi joined
[10:54] *** darutoko joined
[10:58] *** cdg joined
[10:58] <hoffentlichja> is there any convention for calling functions? what's the most common way of calling functions?

[11:00] <pmurias> jnthn: ping

[11:01] <moritz> hoffentlichja: there's func(args); and func args; both are common

[11:01] <yoleaux> 00:08Z <AlexDaniel> moritz: I've created this out of frustration https://github.com/perl6/marketing/issues/1 . According to jdv79 the steps for fixing the unicode issue are known. What's holding it?

[11:02] <moritz> AlexDaniel: time. Nerves. Other projects.

[11:02] <moritz> doing an ALTER TABLE on a multi-million rows mysql table is not something you should do when you don't know if you're around until it's finished

[11:02] *** cdg left
[11:03] *** moritz left
[11:09] *** headcase joined
[11:10] <pmurias> jnthn: if we have a 'method ^foo() {}' (or even method foo() {} as it seems to work the same way) how does the low level code ref end up installed in the high level Perl 6 object?

[11:11] *** lancew left
[11:13] *** headcase left
[11:14] *** lancew joined
[11:15] <chakli> when i'm doing for @arr -> $element {  }, can i get to know the index?

[11:18] *** headcase joined
[11:21] *** Cabanossi left
[11:22] *** headcase left
[11:22] <jnthn> chakli: for @arr.kv -> $idx, $element { }

[11:23] *** Cabanossi joined
[11:24] *** llfourn joined
[11:26] <jnthn> pmurias: Depends; if it's something we just compiled and are running right now, then there's some fixup code that runs and installs it; see https://github.com/rakudo/rakudo/blob/nom/src/Perl6/World.nqp#L2268

[11:27] *** headcase joined
[11:28] *** ChoHag left
[11:30] <jnthn> Oh, and on the precomp path iirc it's just done as part of deserialization

[11:31] *** isBEKaml joined
[11:31] *** pecastro left
[11:32] *** headcase left
[11:37] *** lancew left
[11:38] *** pecastro joined
[11:41] *** headcase joined
[11:47] *** mniip joined
[11:50] *** headcase left
[11:50] *** chakli left
[11:54] <timotimo> HoboWithAShotgun: you can just "done" and the react block will finish

[11:57] *** HoboWithAShotgun left
[11:58] *** vike left
[11:59] *** cdg joined
[11:59] *** lancew joined
[12:03] *** cdg left
[12:04] *** vike joined
[12:10] *** knobo joined
[12:23] *** isBEKaml left
[12:24] *** isBEKaml joined
[12:37] *** knobo left
[12:37] *** headcase joined
[12:38] *** thunktone left
[12:40] *** thunktone joined
[12:42] *** headcase left
[12:44] *** ShalokShalom_ joined
[12:44] *** isBEKaml left
[12:45] <hoffentlichja> should hash keys be quoted?

[12:46] <timotimo> by default hash access will call .Str on your keys for you. if you don't want that, use an object hash, like my %foo{Any};

[12:46] <hoffentlichja> so it's not necessary to quote them

[12:47] <teatime> the pair operator => works with barewords

[12:47] <yoleaux> 08:31Z <Zoffix> teatime: you were curious about the regex fix: https://github.com/rakudo/rakudo/commit/681d6be974  tests https://github.com/perl6/roast/commit/99c822abde  It's scarier than it looks only 'cause it's in full-on NQP. It could've been in almost pure Perl 6 (but nqp performs better).

[12:47] <yoleaux> 08:32Z <Zoffix> teatime: Docs for nqp ops: https://github.com/perl6/nqp/blob/master/docs/ops.markdown https://github.com/rakudo/rakudo/blob/nom/docs/ops.markdown and guts course: https://github.com/edumentab/rakudo-and-nqp-internals-course#rakudo-and-nqp-internals-workshop

[12:47] <yoleaux> 08:36Z <Zoffix> teatime: I meant it's *NOT* as scary as it looks :)

[12:47] *** ShalokShalom left
[12:47] <hoffentlichja> teatime: alright, thanks

[12:49] <Zoffix> hoffentlichja: for basic things (like letters and numbers only), no. But for more complex, yes

[12:49] <Zoffix> m: my %h = foo42 => 42; say %h

[12:49] <camelia> rakudo-moar 78c967: OUTPUT: «{foo42 => 42}␤»

[12:49] <Zoffix> m: my %h = fo.o42 => 42; say %h

[12:49] <camelia> rakudo-moar 78c967: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    fo used at line 1. Did you mean 'so', 'fc'?␤␤»

[12:50] <Zoffix> huggable: colonpairs

[12:50] <huggable> Zoffix, All the shortcuts of colonpairs: https://twitter.com/zoffix/status/839807414211854337

[12:50] *** soon joined
[12:50] <Zoffix> ^ all these shortcuts work too

[12:50] *** leont joined
[12:50] <soon> hello

[12:50] <Zoffix> \o

[12:51] <hoffentlichja> Zoffix: I see

[12:51] <hoffentlichja> soon: hi

[12:51] <teatime> Zoffix: perfect on the NPQ docs, thx

[12:51] <Zoffix> \o/

[12:52] <teatime> NQP

[12:52] <Zoffix>  |

[12:52] <Zoffix> /\

[12:52] <soon> can anybody help me around OAuth2?

[12:53] * Zoffix runs away

[12:53] <Zoffix> :)

[12:53] <soon> :D

[12:54] <Zoffix> Don't see any modules for it :/

[12:54] <soon> really?

[12:55] <Zoffix> soon: yeah, this language is only like 2 years old, so the ecosysem is baby sized :) There's also Perl modules on https://metacpan.org/ you could try using via Inline::Perl5 

[12:56] <Zoffix> Or you could roll your own basic client, like I see OAuth2::Client::Google did https://github.com/bduggan/p6-oauth2-client-google/blob/master/lib/OAuth2/Client/Google.pm6

[12:57] <Zoffix> Or Twitter.pm6 (though that one is OAuth1 IIRC)

[12:58] <soon> I should only ask with the clientid and clientsecret to access the token and then with token download the json file

[12:58] <soon> okey TNX

[12:59] <Zoffix> oh neat, we reached a new milestone 900 modules. Getting there for the first 1000 \o/

[12:59] *** cdg joined
[13:01] <Geth> ¦ doc: 89be4fa3e8 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[13:01] <Geth> ¦ doc: Fill missing authors

[13:01] <Geth> ¦ doc: 

[13:01] <Geth> ¦ doc: modules.perl6.org don't like it

[13:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/89be4fa3e8

[13:02] *** HoboWithAShotgun joined
[13:03] *** soon left
[13:04] *** nebuchadnezzar left
[13:04] *** cdg left
[13:05] <Geth> ¦ modules.perl6.org: 2d3c703c43 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/Source.pm

[13:05] <Geth> ¦ modules.perl6.org: [REBUILD] Handle case of "authors" set to empty array

[13:05] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/2d3c703c43

[13:06] *** thunktone left
[13:07] <Geth> ¦ ecosystem: 1a2d8287fe | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[13:07] <Geth> ¦ ecosystem: Remove 404ed module

[13:07] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/1a2d8287fe

[13:07] <Zoffix> .seen faraco

[13:07] <yoleaux> I saw faraco 1 Aug 2017 07:24Z in #perl6: <faraco> m: say (2/9  + 1/3 * 2 / 12).perl;

[13:07] *** headcase joined
[13:08] <Zoffix> .tell faraco One of your META urls in ecosystem is a 404. Couldn't see if it was renamed to something else, so I removed it: https://github.com/perl6/ecosystem/commit/1a2d8287fe

[13:08] <yoleaux> Zoffix: I'll pass your message to faraco.

[13:08] *** thunktone joined
[13:12] *** headcase left
[13:17] *** Zoffix left
[13:24] *** nadim joined
[13:25] *** lancew left
[13:40] *** evalable6 left
[13:40] *** evalable6 joined
[13:50] *** Cabanossi left
[13:52] *** mulk[m] joined
[13:53] *** Cabanossi joined
[13:53] <HoboWithAShotgun> allright, i have a supply that emits instances of MouseClick, in a consuming supply i want to either emit a MouseDoubleClick event if two sinle clicks occured within 0.3 seconds or the original single click evnt

[13:53] *** nadim left
[13:54] <HoboWithAShotgun> basically i want to suppress the single click if a doubleclick is detected

[13:54] <HoboWithAShotgun> i have an idea with start and sleep and closures, but i wonder if there is an idiomatic way

[13:55] *** zakharyas joined
[13:59] <timotimo> HoboWithAShotgun: have you looked at the list of combiners and transformers that exist?

[13:59] *** nadim joined
[14:00] <HoboWithAShotgun> i did read the docs for the Supply class but i did not find anything suitable

[14:00] *** cdg joined
[14:01] *** vike left
[14:01] <HoboWithAShotgun> maybe the match method

[14:01] <timotimo> hmm.  i thought there was one that can batch up consecutive events

[14:02] <HoboWithAShotgun> but the docs are sparse on that one

[14:02] *** piojo left
[14:03] *** leont left
[14:04] <timotimo> perhaps the source code of the throttle method can help, but i assume it's quite big given how many features it has

[14:04] *** cdg left
[14:05] <teatime> .batch is simpler and very almost does what you want

[14:05] <teatime> but yeah between those two, presumably inspiration

[14:07] *** MasterDuke_ joined
[14:10] <timotimo> ah, yes, with batch you can then map the resulting supply. for any two elements you emit a double click event, otherwise a single click

[14:10] <timotimo> does batch "restart" its countdown when a new event comes in?

[14:10] *** MasterDuke left
[14:12] <HoboWithAShotgun> can you show me an example?

[14:14] <HoboWithAShotgun> i tried whenever self.mouse-supply.grep({ $_ ~~ MouseClickEvent }).batch(:seconds(0.3)) -> $events

[14:15] <HoboWithAShotgun> that gave me an "already vowed" error

[14:15] <HoboWithAShotgun> whatever that means

[14:15] *** lichtkind left
[14:17] <MasterDuke_> HoboWithAShotgun: what about swapping the .grep and the .batch?

[14:17] *** MasterDuke_ is now known as MasterDuke

[14:17] <HoboWithAShotgun> because i would then have to deal with MouseUp, Down and Move Events too

[14:19] <MasterDuke> right, but .batch is a Supply method, not a Seq method

[14:20] <timotimo> grep is also a supply method

[14:21] <HoboWithAShotgun> anyway, whenever self.mouse-supply.batch( :seconds(0.3) ) gives me the same "Access denied to keep/break this promise; Already vowed"

[14:21] <timotimo> oh, interesting

[14:21] <MasterDuke> oops, timotimo++

[14:21] <timotimo> can you golf that in a short snippet?

[14:24] *** vike joined
[14:24] <MasterDuke> i get something different

[14:25] <MasterDuke> m: for Supply.from-list(^10).batch(:3elems) -> $b { dd $b }

[14:25] <camelia> rakudo-moar 921db9: OUTPUT: «List $b = $(0, 1, 2)␤List $b = $(3, 4, 5)␤List $b = $(6, 7, 8)␤List $b = $(9,)␤»

[14:25] <MasterDuke> m: for Supply.from-list(^10).batch(:seconds(0.3)) -> $b { dd $b }

[14:25] <camelia> rakudo-moar 921db9: OUTPUT: «Cannot resolve caller infix:<div>(Int, Rat); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[14:26] <timotimo> oh? no support for fractional seconds in the batch method?

[14:27] <MasterDuke> it appears that way. not sure why

[14:27] *** lichtkind joined
[14:30] <MasterDuke> .interval support 1ms resolution, seems like it would be nice for batch to also

[14:31] *** chakli joined
[14:32] <timotimo> m: say time div 0.3

[14:32] <camelia> rakudo-moar 921db9: OUTPUT: «Cannot resolve caller infix:<div>(Int, Rat); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[14:32] <timotimo> that's what it tries to do

[14:32] *** headcase joined
[14:33] <timotimo> looks like instead it wants do / but then .round($seconds) perhaps?

[14:34] <HoboWithAShotgun> the problem seems to lie with Terminal::Print::DecodedInput

[14:36] <HoboWithAShotgun> can i inspect the source of the batch method?

[14:37] <timotimo> of course

[14:37] *** headcase left
[14:37] <timotimo> s: Supply, "batch", \()

[14:37] <SourceBaby> timotimo, Something's wrong: ␤ERR: Could not find candidate that can do \()␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 29␤  in block <unit> at -e line 6␤␤

[14:37] <timotimo> s: Supply, "batch", \(9)

[14:37] <SourceBaby> timotimo, Something's wrong: ␤ERR: Could not find candidate that can do \(9)␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 29␤  in block <unit> at -e line 6␤␤

[14:37] <timotimo> s: Supply, "batch", \(Int)

[14:37] <SourceBaby> timotimo, Something's wrong: ␤ERR: Could not find candidate that can do \(Int)␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 29␤  in block <unit> at -e line 6␤␤

[14:37] <timotimo> how do this bot ...

[14:37] <timotimo> s: Supply, "batch", \(Supply: Int)

[14:37] <SourceBaby> timotimo, Something's wrong: ␤ERR: Could not find candidate that can do \(Int)␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 29␤  in block <unit> at -e line 6␤␤

[14:37] <MasterDuke> s: Supply, batch, \(Int)

[14:37] <SourceBaby> MasterDuke, Something's wrong: ␤ERR: ===SORRY!=== Error while compiling -e␤Undeclared routine:␤    batch used at line 6. Did you mean 'CATCH'?␤␤

[14:37] <timotimo> https://github.com/rakudo/rakudo/blob/nom/src/core/Supply.pm#L924

[14:38] <timotimo> HoboWithAShotgun: ^

[14:40] <MasterDuke> and .interval end up here eventually, if you want some inspiration https://github.com/rakudo/rakudo/blob/nom/src/core/ThreadPoolScheduler.pm#L589

[14:40] <HoboWithAShotgun> there is no constraint on $seconds in that method

[14:40] <HoboWithAShotgun> so why does it croak with 0.3?

[14:41] <MasterDuke> https://github.com/rakudo/rakudo/blob/nom/src/core/Supply.pm#L942

[14:41] <MasterDuke> timotimo showed what happens

[14:41] <MasterDuke> m: say time div 0.3

[14:41] <camelia> rakudo-moar 921db9: OUTPUT: «Cannot resolve caller infix:<div>(Int, Rat); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[14:41] <timotimo> div only does integers

[14:41] <HoboWithAShotgun> line 938

[14:41] *** headcase joined
[14:42] <HoboWithAShotgun> ?

[14:42] <timotimo> yup and a few lines further down

[14:42] *** setty1 joined
[14:42] <Geth> ¦ doc/master: 5 commits pushed by (Naoum Hankache)++

[14:42] <Geth> ¦ doc/master: 006efcfeac | Add type doc for Pod::Block::Declarator

[14:42] <Geth> ¦ doc/master: 7a6cf0fb50 | Explain Declarator blocks in language/pod

[14:42] <Geth> ¦ doc/master: 72d9d1b74a | Update the signature of WHY

[14:42] <Geth> ¦ doc/master: 6edad7356b | Links are not rendered in a pod table. Remove them

[14:42] <Geth> ¦ doc/master: 7728d81acc | Merge branch 'master' of https://github.com/perl6/doc

[14:42] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/89be4fa3e8...7728d81acc

[14:42] *** nadim left
[14:43] <HoboWithAShotgun> is that to be considered a bug?

[14:44] <HoboWithAShotgun> i mean you can specify milliseconds everywhere else i looked so far

[14:46] <MasterDuke> i would say that's a bug

[14:46] <timotimo> yup

[14:46] *** headcase left
[14:51] *** headcase joined
[14:55] *** chakli left
[14:55] *** headcase left
[14:55] <HoboWithAShotgun> batch doesnt do what i want anyway. turns out, it only "fires" when a value is emmitted to it after the treshold time

[14:56] <HoboWithAShotgun> i need it to fire after a treshold time once a event has been emitted to it 

[14:57] <HoboWithAShotgun> m: Supply.from-list(0 .. 1).batch

[14:57] <camelia> rakudo-moar bbc657: ( no output )

[14:58] <HoboWithAShotgun> m: Supply.from-list(0 .. 1).batch(:3elems) -> $x { $x.say }

[14:58] <jnthn> Are you trying to debounce?

[14:58] <camelia> rakudo-moar bbc657: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> 3Supply.from-list(0 .. 1).batch(:3elems)7⏏5 -> $x { $x.say }␤    expecting any of:…»

[14:58] *** piojo joined
[14:58] <jnthn> If so, .stable is perhas what you're looking for

[14:58] <HoboWithAShotgun> i don't know i have to look up that word :)

[14:59] <jnthn> An example would be a user typing into a textbox, and you only want to get events after nothing changed for, say 500mx

[14:59] <jnthn> *ms

[14:59] <jnthn> e.g. when they stop typing for a moment

[15:00] *** grumble left
[15:01] *** cdg joined
[15:01] <HoboWithAShotgun> jnth: in a supply i consume a supply that gives me MouseDown/Up/Click objects. and i currently just emmit them as i get them

[15:01] <HoboWithAShotgun> now i want to defer the emitting of a click event until i know it is not a double click

[15:02] *** grumble joined
[15:02] <HoboWithAShotgun> and if turns out it isn't emit the original click

[15:02] <HoboWithAShotgun> and if it is, emit a MouseDoubleClick

[15:04] <HoboWithAShotgun> brb, HexChat is acting up again

[15:04] *** HoboWithAShotgun left
[15:04] *** HoboWithAShotgun joined
[15:04] <teatime> sidenote: I did this exact thing once in AutoHotkey, heh

[15:05] *** headcase joined
[15:05] <jnthn> Not sure there's soemthing built-in that does exactly that, but can write it quite easily

[15:05] *** cdg left
[15:06] <HoboWithAShotgun> not for me :)

[15:07] <HoboWithAShotgun> <-- NOOB

[15:09] *** headcase left
[15:10] <jnthn> Something like this perhaps: https://gist.github.com/jnthn/7835d295cf30a57320a38b6a2b6ef786

[15:12] *** jeek left
[15:12] *** epony left
[15:14] *** headcase joined
[15:18] *** headcase left
[15:19] *** jeek joined
[15:21] <HoboWithAShotgun> very nice

[15:22] <HoboWithAShotgun> now all i need to know how to rebless from MouseClick to MouseDoubleClick

[15:23] <HoboWithAShotgun> the classes are identical except for the name

[15:23] *** headcase joined
[15:26] *** nadim joined
[15:26] <timotimo> you might be able .o MouseDoubleClick.new(|$otherclick.Capture)

[15:27] <timotimo> m: class Test { has $.foo; has $.bar; has $.quux }; Test.new(:99foo, bar => "baaaar", quux => "lol"); say Test.Capture.perl

[15:27] <camelia> rakudo-moar 1b9638: OUTPUT: «Cannot look up attributes in a Test type object␤  in block <unit> at <tmp> line 1␤␤»

[15:27] <timotimo> m: class Test { has $.foo; has $.bar; has $.quux }; Test.new(:99foo, bar => "baaaar", quux => "lol").Capture.perl.say

[15:27] <camelia> rakudo-moar 1b9638: OUTPUT: «\(:bar("baaaar"), :foo(99), :quux("lol"))␤»

[15:30] <Geth> ¦ doc: 11bd102ec4 | (Zoffix Znet)++ | doc/Type/List.pod6

[15:30] <Geth> ¦ doc: Document List.ACCEPTS

[15:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/11bd102ec4

[15:30] <synopsebot> Link: https://doc.perl6.org/type/List

[15:30] *** vike left
[15:33] *** xiaomiao left
[15:34] <Geth> ¦ doc: d19beddd1f | (Zoffix Znet)++ | doc/Language/operators.pod6

[15:34] <Geth> ¦ doc: Tell to look at ACCEPTS in `~~` docs

[15:34] <Geth> ¦ doc: 

[15:34] <Geth> ¦ doc: - Make it more clear the provided list of semantics is incomplete

[15:34] <Geth> ¦ doc: - Link to ACCEPTS routines people could follow and read details

[15:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d19beddd1f

[15:34] <synopsebot> Link: https://doc.perl6.org/language/operators

[15:36] *** headcase left
[15:37] *** vike joined
[15:40] *** headcase joined
[15:44] *** wamba left
[15:44] *** skids joined
[15:48] <Xliff> m: my @a = (1, 2, 3, 'all'); say "No" unless @a.all ~~ Int;

[15:48] <camelia> rakudo-moar 1b9638: OUTPUT: «No␤»

[15:48] <Xliff> m: my @a = (1, 2, 3); say "No" unless @a.all ~~ Int;

[15:48] <camelia> rakudo-moar 1b9638: ( no output )

[15:50] <tbrowder> ugexe: if i load a module tarball to cpan, are the entries in its META6.json used for anything other than dependencies?

[15:51] *** Cabanossi left
[15:53] <tbrowder> Furthermore, if I load all my ecosystem modules to CPAN, couldn’t I remove them from the ecosystem/META.list file?

[15:53] *** Cabanossi joined
[15:54] *** zakharyas left
[16:01] *** headcase left
[16:02] *** cdg joined
[16:04] *** Xal left
[16:06] *** cdg left
[16:06] *** Xal joined
[16:06] <HoboWithAShotgun> jnthn++, timotimo++ #lovelyPeople

[16:07] *** khw joined
[16:08] <Geth> ¦ doc: a27ba6507b | (Zoffix Znet)++ | doc/Language/regexes.pod6

[16:08] <Geth> ¦ doc: Rewrite section on `**` regex quantifier

[16:08] <Geth> ¦ doc: 

[16:08] <Geth> ¦ doc: - Reduce prose on Range variants (examples show them already)

[16:08] <Geth> ¦ doc: - Make examples show the actual matched content rather than True/False

[16:08] <synopsebot> Link: https://doc.perl6.org/language/regexes

[16:08] <Geth> ¦ doc: - Explain how to write more complex Ranges and values

[16:08] <Geth> ¦ doc: - Document newly-implemented semantics for edge cases:

[16:08] <Geth> ¦ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/681d6be974

[16:08] <Geth> ¦ doc: Spec:        https://github.com/perl6/roast/commit/99c822abde

[16:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a27ba6507b

[16:12] *** lancew joined
[16:15] *** xiaomiao joined
[16:22] *** cdg joined
[16:27] *** cdg left
[16:30] *** nadim left
[16:30] *** HoboWithAShotgun left
[16:37] *** nadim joined
[16:42] *** nadim left
[16:44] <pmurias> AlexDaniel: is there a serious issue stopping astral plane unicode characters from being supported by the irc log?

[16:44] *** isBEKaml joined
[16:45] <AlexDaniel> pmurias: kinda. Just this: https://irclog.perlgeek.de/perl6/2017-10-01#i_15241846

[16:46] <AlexDaniel> pmurias: it was working just fine and then got broken after some update

[16:47] <AlexDaniel> at first even ␤ was rendering as ?, but jdv79++ offered his help and fixed that

[16:48] <AlexDaniel> jdv79 also outlined steps to fix the remaining issue and that was… a few weeks ago?

[16:48] *** lancew left
[16:49] <chansen_> https://github.com/moritz/ilbot/commit/65e00b61f7d9d5af7bfa7fa518dad1e5a99f0541

[16:51] <ugexe> tbrowder: the meta6.json is always used the same no matter where it comes from

[16:52] *** TreyHarris left
[16:56] <ugexe> and if all your modules are on CPAN you don't really need them in the ecosystem too

[16:57] *** cschwenz joined
[17:05] *** TreyHarris joined
[17:10] *** cschwenz left
[17:11] <tbrowder> ugexe: what about conflicts between the two such as version number taken from the tar ball file name? or the source-url? do they have to agree?

[17:12] <ugexe> cpan sets the source-url, and the version number is not taken fro the tar ball file name

[17:14] <tbrowder> okay, so i can eliminate source-url if i no longer use the ecosystem?

[17:14] <Geth> ¦ ecosystem: titsuki++ created pull request #369: Add Geo::Hash to ecosystem

[17:14] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/369

[17:14] <Geth> ¦ ecosystem: f8389151bd | (Itsuki Toyota)++ | META.list

[17:14] <Geth> ¦ ecosystem: Add Geo::Hash to ecosystem

[17:14] <Geth> ¦ ecosystem: 

[17:14] <Geth> ¦ ecosystem: See https://github.com/titsuki/p6-Geo-Hash

[17:14] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/f8389151bd

[17:14] <Geth> ¦ ecosystem: 32f3d41ae2 | (Itsuki Toyota)++ (committed using GitHub Web editor) | META.list

[17:14] <Geth> ¦ ecosystem: Merge pull request #369 from titsuki/add-geo-hash

[17:15] <Geth> ¦ ecosystem: 

[17:15] <Geth> ¦ ecosystem: Add Geo::Hash to ecosystem

[17:15] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/32f3d41ae2

[17:16] <teatime> does http://modules.perl6.org/ index CPAN-only modules?

[17:17] *** domidumont left
[17:18] *** domidumont joined
[17:18] *** wamba joined
[17:19] *** Pilu left
[17:30] *** piojo left
[17:31] *** eroux joined
[17:39] *** Aaronepower joined
[17:43] *** zakharyas joined
[17:48] *** cdg joined
[17:52] *** cdg_ joined
[17:52] *** tomred_ joined
[17:55] <tomred_> I'm trying to build rakudo 2017.07 on ubuntu. I can't configure. I get "Unable to locate parrot_config" What other packages do I need to install?

[17:55] *** cdg left
[17:56] *** Zoffix joined
[17:56] *** releasable6 left
[17:56] *** releasable6 joined
[17:57] <Zoffix> tomred_: that's a weird error. Parrot is a thing of the past. Is it possible you have some antient rakudo page installed that's interfering?

[17:57] <Zoffix> huggable: deb

[17:57] <huggable> Zoffix, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[17:57] <Zoffix> tomred_: ^ you can just install these debs instead of building anything

[17:57] <Zoffix> (more recent than 2017.07 too)

[17:58] *** darutoko left
[17:59] *** eroux left
[17:59] *** releasable6 left
[18:00] *** releasable6 joined
[18:01] <tomred_> Let me check that I got the latest version

[18:01] <Zoffix> s/antient/ancient/; s/page/package/; # >_<

[18:05] <tomred_> I must have downloaded an old version, the latest.tar.gz has a MoarVM directory whereas the previous one I had didn't.

[18:14] *** lucasb joined
[18:14] *** zakharyas left
[18:14] *** HoboWithAShotgun joined
[18:16] *** domidumont left
[18:31] *** evalable6 left
[18:31] *** HoboWithAShotgun left
[18:31] *** evalable6 joined
[18:31] *** ChanServ sets mode: +v evalable6

[18:32] *** domidumont joined
[18:33] *** knobo joined
[18:39] *** BenGoldberg joined
[18:44] *** ChoHag joined
[18:48] *** Xal left
[18:48] *** thunktone left
[18:50] *** Xal joined
[18:55] *** leah2 left
[19:00] *** leah2 joined
[19:07] <Xliff> m: +False.say

[19:07] <camelia> rakudo-moar f42757: OUTPUT: «WARNINGS for <tmp>:␤False␤Useless use of "+" in expression "+False.say" in sink context (line 1)␤»

[19:08] <Xliff> m: say +False

[19:08] <camelia> rakudo-moar f42757: OUTPUT: «0␤»

[19:08] <Zoffix> m: +False .say

[19:08] <camelia> rakudo-moar f42757: OUTPUT: «0␤»

[19:08] <Zoffix> precedence

[19:13] *** tomred_ left
[19:15] *** epony joined
[19:15] *** zakharyas joined
[19:20] *** eliasr left
[19:20] *** knobo left
[19:21] *** vike left
[19:23] *** geekosaur left
[19:25] *** lucasb left
[19:30] <Zoffix> 22 dists on CPAN and looks like all of them are in p6c eco...

[19:31] *** knobo joined
[19:32] <Geth> ¦ ecosystem: 51557dd738 | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[19:32] <Geth> ¦ ecosystem: Trailblaze

[19:32] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/51557dd738

[19:34] *** geekosaur joined
[19:36] *** knobo left
[19:36] <Geth> ¦ modules.perl6.org/cpan-support: b192b4821a | (Zoffix Znet)++ | 5 files

[19:36] <Geth> ¦ modules.perl6.org/cpan-support: Implement CPAN metas fetcher

[19:36] <Geth> ¦ modules.perl6.org/cpan-support: review: https://github.com/perl6/modules.perl6.org/commit/b192b4821a

[19:37] *** zakharyas left
[19:38] <Geth> ¦ modules.perl6.org/cpan-support: cbb602ce63 | (Zoffix Znet)++ | bin/build-project-list.pl

[19:38] <Geth> ¦ modules.perl6.org/cpan-support: Remove duplicate constant

[19:38] <Geth> ¦ modules.perl6.org/cpan-support: review: https://github.com/perl6/modules.perl6.org/commit/cbb602ce63

[19:39] *** TEttinger joined
[19:41] *** vike joined
[19:43] *** cono joined
[19:49] *** brimonk left
[19:59] *** cdg_ left
[20:13] *** leont joined
[20:20] *** Aaronepower left
[20:23] *** domidumont left
[20:25] *** ChoHag left
[20:35] *** Cabanossi left
[20:38] *** Cabanossi joined
[20:39] *** kaare_ left
[20:39] *** kaare_ joined
[20:44] *** Aaronepower joined
[20:45] *** kaare_ left
[20:47] *** kaare_ joined
[20:48] *** geekosaur left
[20:51] *** geekosaur joined
[20:56] *** leont left
[20:56] *** cdg joined
[20:56] *** leont joined
[20:57] *** ChoHag joined
[21:05] *** p6steve joined
[21:07] *** setty1 left
[21:10] *** abraxxa joined
[21:10] *** kaare__ joined
[21:11] *** leont left
[21:13] *** kaare_ left
[21:14] *** abraxxa left
[21:25] *** p6steve left
[21:31] *** buggable left
[21:32] *** buggable joined
[21:32] *** ChanServ sets mode: +v buggable

[21:32] <buggable> New CPAN upload: Bailador-0.0.13.tar.gz by UFOBAT https://www.cpan.org/authors/id/U/UF/UFOBAT/Perl6/Bailador-0.0.13.tar.gz

[21:32] <Zoffix> \o/

[21:32] <Zoffix> buggable: <3

[21:36] *** Cabanossi left
[21:38] *** Cabanossi joined
[21:39] <Zoffix> hm

[21:39] * Zoffix isn't happy with App::Mi6

[21:43] <teatime> ?

[21:43] *** leont joined
[21:44] <Zoffix> I created an almost empty README.md and then refused to upload to CPAN because the unstashed files *it* created were still uncommited :P

[21:45] <Zoffix> It's better than nothing of course, but I think I'll roll my own upload… eventually

[21:45] <Zoffix> *uploader

[21:52] <Zoffix> "Error: Use of uninitialized value $last in numeric le (<=) at lib5/Buggable/CPANUploads.pm line 23" :( 

[21:52] <Zoffix> Looks like buggable is… a bit buggly

[21:54] *** buggable left
[22:03] *** buggable joined
[22:03] *** ChanServ sets mode: +v buggable

[22:03] <buggable> New CPAN upload: Pastebin-Shadowcat-2.001001.tar.gz by ZOFFIX https://www.cpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/Pastebin-Shadowcat-2.001001.tar.gz

[22:04] *** hahainternet is now known as death2halloween

[22:04] <Zoffix> k; take #2

[22:04] * Zoffix uploads another module

[22:04] <Zoffix> buggable: eco author:zoffix

[22:04] <buggable> Zoffix, Found 35 results: Acme::Anguish, IRC::Client, WWW, GlotIO, CoreHackers::Sourcery. See https://modules.perl6.org/s/author%3Azoffix

[22:06] <Zoffix> ok, now mi6 ouright nukes my README.md :(

[22:09] *** cdg left
[22:14] *** buggable left
[22:16] *** buggable joined
[22:16] *** ChanServ sets mode: +v buggable

[22:18] *** rindolf left
[22:20] *** buggable left
[22:21] *** BenGoldberg left
[22:22] *** cdg joined
[22:25] *** buggable joined
[22:25] *** ChanServ sets mode: +v buggable

[22:25] *** buggable left
[22:25] *** pecastro left
[22:26] *** buggable joined
[22:26] *** ChanServ sets mode: +v buggable

[22:26] <buggable> New CPAN upload: Number-Denominate-1.001001.tar.gz by ZOFFIX https://www.cpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/Number-Denominate-1.001001.tar.gz

[22:34] *** cdg left
[22:36] *** robertle left
[22:36] <buggable> New CPAN upload: Acme-Anguish-1.001002.tar.gz by ZOFFIX https://www.cpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/Acme-Anguish-1.001002.tar.gz

[22:36] <Zoffix> yey. the bot finally works right

[22:37] *** wamba left
[22:39] *** isBEKaml left
[22:40] *** pmurias left
[22:41] *** ShalokShalom_ left
[22:42] *** arnsholt left
[22:44] <timotimo> okay, now to learn how to sign up for cpan

[22:45] *** arnsholt joined
[22:46] <timotimo> /(readme|\.html|\.txt|\.[xy]ml|\.json|\.[pr]df|\.pod)(\.gz|\.bz2)?$/i

[22:46] <timotimo> this is how pause detects documentation

[22:46] <timotimo> ... no md support? :\

[22:52] <Juerd> Given the popularity of md it might be useful to work on a template for documenting Perl 6 projects with it.

[22:52] <Juerd> I know that nowadays I'd rather write markdown than pod

[22:52] <timotimo> let's invent MarkPod or PodDown

[22:52] <Juerd> :)

[22:53] <Juerd> And maybe mandown to format man pages :)

[22:53] <Juerd> ... Or maybe that's not the best name :P

[22:54] * leont has actually used pod to generate man pages outside of perl, as there aren't that many sane workflows for that as I had expected.

[22:54] <teatime> my goto for pretty much everything in this area is pandoc

[22:54] <teatime> toyed with the idea of adding pod6 as an input format but I will never get around to that

[22:55] <Juerd> leont: So do I, but I'm not enjoying it :)

[22:55] <teatime> Juerd: try pandoc for markdown -> man

[22:56] <leont> I've used pandoc for other purposes before (slides), I should have guessed it supports man pages

[22:56] * timotimo submitted a pause account request

[22:57] <timotimo> i put in a line bragging about JSON::Fast being the #1 cited module :D

[22:57] <timotimo> http://finanalyst.github.io/ModuleCitation/

[22:58] *** hoffentlichja left
[22:58] <weabot> is it possible to compile a perl6 file to bytecode?

[22:58] <timotimo> yup

[22:59] <timotimo> rakudo does it automatically for all modules

[22:59] <timotimo> we don't officially support it for scripts, but pretending a script is a module and running it that way is possible

[22:59] <weabot> I'm trying to do it for a small markov chain I wrote as a test and it's giving me this Cannot dump this object; no dump method

[22:59] <timotimo> right, you're possibly giving it the wrong --target

[22:59] <weabot> hm

[23:00] <weabot> I'm using --target=mbc

[23:00] <timotimo> are you also using the flag for the output filename?

[23:00] <weabot> perl6 -o markov.mbc --profile=html --profile-filename=prof.html --optimize=3 --stagestats --target=mbc markov.p6

[23:01] <weabot> using --output instead worked

[23:01] <timotimo> strange, it's supposed to support -o

[23:01] <jnthn> It's --output=

[23:01] <timotimo> it gives that exact error when you don't give it a filename

[23:01] <timotimo> i mean it's in the --help

[23:02] <Juerd> teatime: Pandoc looks interesting. Thanks for suggesting it

[23:02] <teatime> what does "Note that only boolean single-letter options may be bundled." mean?

[23:02] <timotimo> that you can have -asdf

[23:02] <timotimo> but not --all-stage-deep-force or something?

[23:02] <teatime> Juerd: it has the *best* implementation/extensions for markdown.  but that's optional/configurable.

[23:03] <teatime> timotimo: oh, maybe meaning you can't do something like "tar -xzvf filename.tar.gz"

[23:04] <Juerd> teatime: Indeed. -xzv would work, as they're boolean, but -f takes a string.

[23:04] <Zoffix> timotimo: well, it has no 6lang support, does it? So it can detect all it wants, the renderer would be modules.perl6.org and you can use markdown

[23:04] <timotimo> oh, i somehow didn't see the "boolean" in that

[23:04] <timotimo> Zoffix: it's about what you're allowed to overwrite

[23:05] <Zoffix> Ah

[23:05] <timotimo> it allows you to modify documentation without forcing you to get a new version in your filename

[23:05] <Zoffix> TIL

[23:05] *** pecastro joined
[23:07] <jnthn> For anyone interested, I've made a sample Cro + React/Redux Single Page Application at https://github.com/croservices/sample-app-spa-react and drafted a tutorial explaining it at https://github.com/croservices/cro/blob/master/docs/intro/spa-with-cro.md (which I'll proof-read tomorrow when I'm less tired, and get on the website proper afterwards) :)

[23:08] *** leont left
[23:08] <timotimo> cool!

[23:08] <timotimo> i was probably going to use cro + react for my grant :3

[23:16] <jnthn> :)

[23:16] <jnthn> Sleep time for me; 'night o/

[23:17] <timotimo> jnthn: wants a ".md" at the end of the "this guide" link

[23:18] <timotimo> wow, they really had matcha beer?

[23:18] <timotimo> macha* i guess?

[23:22] <mspo> macha doesn't have sugars to ferment

[23:23] *** evalable6 left
[23:23] *** evalable6 joined
[23:23] *** ChanServ sets mode: +v evalable6

[23:26] *** cdg joined
[23:28] *** Cabanossi left
[23:28] *** nebuchadnezzar joined
[23:30] <Geth_> ¦ perl6-most-wanted: 0b94ef197f | (David Warring)++ (committed using GitHub Web editor) | most-wanted/modules.md

[23:30] <Geth_> ¦ perl6-most-wanted: Update modules.md

[23:30] <Geth_> ¦ perl6-most-wanted: 

[23:30] <Geth_> ¦ perl6-most-wanted: Note WIP on Font::Freetype - bindings to the Freetype2 library

[23:30] <Geth_> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/0b94ef197f

[23:31] *** cdg left
[23:33] *** epony left
[23:35] *** Cabanossi joined
[23:36] *** margeas left
[23:42] <timotimo> jnthn: after introducing the agree and disagree methods on Tip, there could be a mention that the next agree and disagree methods are added to the Tipsy class

[23:42] <timotimo> other than that, cool tutorial

[23:44] *** BenGoldberg joined
[23:51] *** AlexDaniel left
