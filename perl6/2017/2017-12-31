[00:05] <AlexDaniel> it's hard to tell

[00:05] <AlexDaniel> 43 pages for the index

[00:05] <AlexDaniel> everything else is text and titles

[00:10] *** |oLa| left
[00:12] *** pmurias left
[00:13] *** xcm left
[00:14] <timotimo> i bet the index has a hundred to a thousand lines of "methods inherited from Any"

[00:15] *** pecastro left
[00:16] *** xcm joined
[00:17] <AlexDaniel> timotimo: I don't see that :)

[00:17] <AlexDaniel> it does list things like ‚Äúmethod Int‚Äù several times, but we have different description in each

[00:18] <AlexDaniel> but‚Ä¶ just print to file from your browser and see yourself? :)

[00:18] <AlexDaniel> takes about a minute and ‚âà5MB of space

[00:20] <timotimo> ladies and gentlemen ... three *hundred* megabytes ... of storage capacity

[00:22] <jeek> That's enough to last a lifetime, and then some

[00:27] <timotimo> what can this do for you? oh! the sky is the limit!

[00:34] <TEttinger> pokemon are incredible creatures that share the world with humans

[00:39] <timotimo> the message is violence

[00:45] <Geth> ¬¶ doc: 27e4e38382 | (Zoffix Znet)++ | doc/Type/Num.pod6

[00:45] <Geth> ¬¶ doc: Clarify coersion of ¬±Inf/NaN to Rational types

[00:45] <Geth> ¬¶ doc: 

[00:45] <Geth> ¬¶ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/042cb7413f

[00:45] <Geth> ¬¶ doc: Spec:        https://github.com/perl6/roast/commit/c3086244fd

[00:45] <synopsebot> Link: https://doc.perl6.org/type/Num

[00:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/27e4e38382

[00:46] <Geth> ¬¶ doc: 5fc5e83591 | (Zoffix Znet)++ | doc/Type/Rational.pod6

[00:46] <Geth> ¬¶ doc: Document .Num coersion of zero-denominator Rationals

[00:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5fc5e83591

[00:46] <synopsebot> Link: https://doc.perl6.org/type/Rational

[01:05] *** FROGGS left
[01:15] *** markong left
[01:24] <Geth> ¬¶ doc: 9b9b7576cb | (Zoffix Znet)++ | doc/Language/operators.pod6

[01:24] <Geth> ¬¶ doc: Use more precise wording in `eqv` docs

[01:24] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9b9b7576cb

[01:24] <synopsebot> Link: https://doc.perl6.org/language/operators

[01:26] <Geth> ¬¶ doc: ef2a93b981 | (Zoffix Znet)++ | doc/Language/operators.pod6

[01:26] <Geth> ¬¶ doc: Clarify `eqv` with zero-denominator Rationals

[01:26] <Geth> ¬¶ doc: 

[01:26] <Geth> ¬¶ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/c91bcc2afc

[01:26] <Geth> ¬¶ doc: Spec:        https://github.com/perl6/roast/commit/9b69d9787c

[01:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ef2a93b981

[01:41] <Geth> ¬¶ doc: 28599bde20 | (Zoffix Znet)++ | doc/Language/operators.pod6

[01:41] <Geth> ¬¶ doc: Revert "Clarify `eqv` with zero-denominator Rationals"

[01:41] <Geth> ¬¶ doc: 

[01:41] <Geth> ¬¶ doc: This reverts commit ef2a93b9819ae2d2a520c561111a5718eded83ca.

[01:41] <Geth> ¬¶ doc: 

[01:41] <synopsebot> Link: https://doc.perl6.org/language/operators

[01:41] <Geth> ¬¶ doc: Bugginess with zero-denomitor Rationals math got discovered[^1] and

[01:41] <Geth> ¬¶ doc: when it's fixed, it's possible there won't even be any

[01:41] <Geth> ¬¶ doc: zero-denominator Rationals that have numerators other than <1 -1 0>

[01:41] <Geth> ¬¶ doc: 

[01:41] <Geth> ¬¶ doc: [1] https://irclog.perlgeek.de/perl6-dev/2017-12-31#i_15635846

[01:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/28599bde20

[02:30] *** manchicken joined
[02:31] <manchicken> Is there a good, practical example of having a multi-tiered module that all exports under the same namespace?

[02:31] <manchicken> I don't want the POSIX module (which I suppose is now my project) all being one 200Mo file, I'd much rather it be cordoned off into functional areas.

[02:32] <manchicken> Unfortunately, I can't find very good examples of robust package+export management.

[02:32] <manchicken> I can neither confirm nor deny the volume of profanity produced by this situation.

[02:33] *** jeromelanteri left
[02:38] *** xi- left
[02:38] *** xi- joined
[02:39] <geekosaur> much of the export management machinery is currently notional

[02:39] <geekosaur> as a result, what currently exists that does non-trivial export management is highly dependent on internal details, rather ugly and potentially fragile

[02:41] *** Zoffix joined
[02:45] *** ilbot3 left
[02:47] <manchicken> That does not make me confident as a module developer that I can use this...

[02:47] <manchicken> Instead it makes me worry that I'm stuck with gigantic files.

[02:48] <manchicken> I even define `EXPORT` functions, but still get things like: ===SORRY!=== Error while compiling -e

[02:48] <manchicken> Error while importing from 'POSIX':

[02:48] <manchicken> no EXPORT sub, but you provided positional argument in the 'use' statement

[02:49] <Zoffix> manchicken: perhaps this would be of help: https://github.com/zoffixznet/debug/tree/master/mod-export-transfer

[02:49] <Zoffix> manchicken: this bit in particular: https://github.com/zoffixznet/debug/blob/master/mod-export-transfer/Foo.pm6#L6-L12

[02:50] <manchicken> How are you always so helpful?

[02:50] <manchicken> It's uncanny.

[02:50] <Zoffix> \o/

[02:50] <manchicken> No, seriously, you might want to find a doctor and have that looked at.

[02:50] <Zoffix> :)

[02:50] <manchicken> It's sure to cause you problems at some point in your life.

[02:56] <manchicken> Man... Could not find symbol '&DEFAULT'

[02:57] *** leont left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[02:57] <Zoffix> manchicken: you didn't export any subs (or exported them under some other tag than DEFAULT)

[03:00] <manchicken> `is export` is === to `is export(:DEFAULT)`, no?

[03:01] <Zoffix> Yeah

[03:01] <Zoffix> orr

[03:01] <Zoffix> m: sub foo is export(:DEFAULT) {}

[03:01] <camelia> rakudo-moar c91bcc2af: ( no output )

[03:01] <Zoffix> yeah

[03:02] <manchicken> OK.... still doesn't work.

[03:03] <manchicken> Let me push this, maybe you can help me figure out where I'm stupid.

[03:04] <manchicken> Zoffix, do you use Atom?

[03:04] <Zoffix> Yes.

[03:04] <manchicken> f666a786-0854-480a-b718-4b47faf4ccbd

[03:05] <Zoffix> What's that?

[03:05] <manchicken> I opened that for sharing.

[03:05] <manchicken> You see the cell tower like icon in the lower right?

[03:05] <manchicken> If you say "join portal" and put that UUID in there, I believe it will have you join my session.

[03:05] <Zoffix> Nope

[03:06] <manchicken> https://github.com/manchicken/perl6-posix-1/tree/refactoring

[03:06] <manchicken> That, too.

[03:06] <manchicken> This is the main module: https://github.com/manchicken/perl6-posix-1/blob/refactoring/lib/POSIX.pm

[03:07] <manchicken> This is the module which defines the function: https://github.com/manchicken/perl6-posix-1/blob/refactoring/lib/POSIX/passwd.pm

[03:07] <Zoffix> All I see FWIW; no celltowers: https://temp.perl6.party/snapshot3.png

[03:07] <manchicken> And this is where I'm trying to use the function: https://github.com/manchicken/perl6-posix-1/blob/refactoring/t/02-getuid.t

[03:09] <Zoffix> manchicken: test passes for me: https://gist.github.com/zoffixznet/1a56246ced4013c1e6db8c1ec161664c

[03:09] <manchicken> Do you have teletype enabled?

[03:10] <manchicken> ‚úî ~/Devel/perl6-posix-1 [master|‚úö 1‚Ä¶13]

[03:10] <manchicken> 22:02 $ perl6 -Ilib t/02-getuid.t

[03:10] <manchicken> ===SORRY!===

[03:10] <manchicken> Could not find symbol '&DEFAULT'

[03:10] <Zoffix> Don't even know what teletype is

[03:10] <Zoffix> manchicken: what's your perl6 -v ?

[03:10] <manchicken> ‚úò-1 ~/Devel/perl6-posix-1 [refactoring|‚úî]

[03:10] <manchicken> 22:09 $ perl6 -v

[03:10] <manchicken> This is Rakudo Star version 2017.10 built on MoarVM version 2017.10

[03:10] <manchicken> implementing Perl 6.c.

[03:11] * Zoffix builds 2017.10 to try it out on there

[03:13] <manchicken> Which version are you on?

[03:13] <Zoffix> 2017.12.11

[03:14] <manchicken> Oooh, aren't we fancy ;)

[03:14] <manchicken> I just started sanitizing to ferment this belgian golden ale that I've almost certainly loused up on account of my export woes.

[03:15] <manchicken> My yeast starter is alive, so I suppose it's not the end of the world.

[03:15] <manchicken> As soon as yeast stop eating sugar, you know there's something wrong.

[03:16] <manchicken> Oof, I'm updating `brew` on my OSX box, it's got an llvm update.

[03:16] <manchicken> This should be interesting.

[03:16] <manchicken> I'm using the version of rakudo which came with homebrew. 

[03:16] <Zoffix> Works on 2017.10 too: https://gist.github.com/zoffixznet/8adc511c19104a06731e0463170f6be7

[03:16] <Zoffix> OSX vs Linux difference maybe?

[03:17] <manchicken> Maybe?

[03:17] <manchicken> Gosh I hope not.

[03:17] *** unicodable6 left
[03:17] *** benchable6 left
[03:17] *** unicodable6 joined
[03:17] *** benchable6 joined
[03:18] <Zoffix> Maybe someone here with OSX could test it tout

[03:18] *** xcm left
[03:19] <Zoffix> maybe try `rm -fr lib/.precomp/` and run it again; maybe some precomp issue vOv

[03:20] *** xcm joined
[03:25] * manchicken tries.

[03:26] <manchicken> Didn't work.

[03:26] <manchicken> Raspbian didn't work, either.

[03:26] <manchicken> That's GNU/Linux. Different error, though.

[03:26] <manchicken> manchicken@raspberryChicken ~/Devel/perl6-posix-1 $ perl6 -Ilib t/02-getuid.t

[03:26] <manchicken> ===SORRY!===

[03:26] <manchicken> Could not find NativeCall in any of: /home/manchicken/Devel/perl6-posix-1/lib, /usr/lib/parrot/6.6.0/languages/perl6/lib, /usr/lib/parrot/6.6.0/languages/perl6

[03:26] <Zoffix> No idea.

[03:26] <manchicken> That's super old, though.

[03:27] <manchicken> Geez, 2014.07.

[03:27] <Zoffix> :S that's more than a year before first stable release

[03:27] <manchicken> heh

[03:31] * manchicken updates raspbian.

[03:44] <manchicken> I still don't know why this is happening on my mac...

[03:45] <manchicken> Filesystem case sensitivity doesn't seem to be an issue.

[03:45] <manchicken> Do you have any env vars?

[03:45] <Zoffix> Does it fail on newer raspbian?

[03:45] <manchicken> 22:34 $ env | grep PERL

[03:45] <manchicken> PERL5LIB=/Users/manchicken/perl5/lib/perl5

[03:45] <manchicken> PERL_MB_OPT=--install_base "/Users/manchicken/perl5"

[03:45] <manchicken> PERL6LIB=.,./lib,

[03:45] <manchicken> PERL_LOCAL_LIB_ROOT=/Users/manchicken/perl5

[03:45] <manchicken> PERL_MM_OPT=INSTALL_BASE=/Users/manchicken/perl5

[03:45] <manchicken> Checking for Raspbian updates.

[03:45] <manchicken> I wouldn't think that we would have a breakage like this on OSX though.

[03:45] <manchicken> I'm on the latest OSX.

[03:46] <Zoffix> m: use Test; say Test::EXPORT::.keys

[03:46] <camelia> rakudo-moar c91bcc2af: OUTPUT: ¬´(DEFAULT ALL)‚ê§¬ª

[03:46] <Zoffix> What does `perl6 --ll-exception -Ilib t/02-getuid.t` give ?

[03:48] <manchicken> https://gist.github.com/manchicken/6d7c8c4ec15f9637e833c55c66a07461

[03:49] <manchicken> I've deleted the precomp stuff.

[03:50] <Zoffix> ohhh

[03:50] <Zoffix> I was running master branch :)

[03:52] <Zoffix> manchicken: you missed the '::EXPORT' portion

[03:53] <Zoffix> sub EXPORT {

[03:53] <Zoffix>   Map.new: (

[03:53] <Zoffix>     | POSIX::passwd::EXPORT::DEFAULT::,

[03:53] <Zoffix>     | POSIX::time_h::EXPORT::DEFAULT::,

[03:53] <Zoffix>   )

[03:53] <Zoffix> }

[03:54] <Zoffix> This works.... long enough to show you you got an error in sub sig

[03:55] <manchicken> Oh.

[03:55] <manchicken> Well poo

[03:56] <manchicken> Did you just add that in your test?

[03:56] <manchicken> I get a different error now, but it seems more useful

[03:57] <Zoffix> manchicken: no, that's in POSIX. You got `POSIX::passwd::DEFAULT::` but it needs to be `POSIX::passwd::EXPORT::DEFAULT::`. Same for the other one

[04:09] <manchicken> Yeah, I was just wondering if you took my sample verbatim from GitHub, or if you modified it to make it run.

[04:14] <Zoffix> I cloned and fixed the code and it ran. The first time I just forgot to also switch to the branch and that's why I couldn't repro it

[04:14] <manchicken> Boom.

[04:14] <manchicken> I just pushed an update.

[04:21] <Zoffix> TIL we have a Seq.from-loop()  ... didn't see anyone mention it when Any.toggle() was being discussed. Look very similar

[04:22] <Zoffix> And toggle is neither tested nor documented

[04:22] * Zoffix ObligatoryWhiningAboutAddingFeaturesUsersWillNeverKnowAbout.cue

[04:27] *** Zoffix left
[04:29] *** troys_ is now known as troys

[04:31] *** Zoffix joined
[04:31] <Zoffix> They're not similar actually; never mind.

[04:31] *** Zoffix left
[04:36] *** Kyo91` joined
[04:51] *** piojo_ joined
[04:52] *** jeromelanteri joined
[04:54] *** Cabanossi left
[04:55] *** Cabanoss- joined
[04:56] *** Cabanoss- is now known as Cabanossi

[05:04] *** eliasr left
[05:11] *** konsolebox left
[05:12] *** Actualeyes joined
[05:13] *** konsolebox joined
[05:27] *** konsolebox left
[05:27] *** konsolebox joined
[05:34] *** xcm left
[05:36] *** xcm joined
[05:43] *** piojo_ left
[05:51] *** konsolebox left
[05:52] *** konsolebox joined
[06:02] *** konsolebox left
[06:03] *** konsolebox joined
[06:03] *** troys is now known as troys_

[06:07] *** khw left
[06:21] <manchicken> Sweet.

[06:21] <manchicken> I have some of this working.

[06:21] <manchicken> I can stat a file now!

[06:23] *** konsolebox left
[06:25] *** konsolebox joined
[06:29] *** manchicken left
[06:30] *** konsolebox left
[06:31] *** konsolebox joined
[06:41] *** konsolebox left
[06:42] *** konsolebox joined
[06:43] *** troys_ is now known as troys

[06:49] *** konsolebox left
[06:51] *** konsolebox joined
[06:51] *** Mikasi left
[06:51] *** Kyo91` left
[06:52] *** Mikasi joined
[06:52] *** Kyo91` joined
[06:52] *** Mikasi left
[06:53] *** Mikasi joined
[06:59] *** konsolebox left
[06:59] *** konsolebox joined
[07:00] *** Herby_ left
[07:04] *** troys left
[07:07] *** jeromelanteri left
[07:08] *** darutoko joined
[07:10] *** konsolebox left
[07:11] *** konsolebox joined
[07:26] *** wamba joined
[07:31] *** piojo_ joined
[07:52] *** cdg joined
[07:56] *** cdg left
[08:03] *** domidumont joined
[08:07] *** piojo_ left
[08:08] *** domidumont left
[08:09] *** domidumont joined
[08:18] <buggable> New CPAN upload: PDF-Font-Loader-0.1.8.tar.gz by WARRINGD https://cpan.metacpan.org/authors/id/W/WA/WARRINGD/Perl6/PDF-Font-Loader-0.1.8.tar.gz

[08:28] <buggable> New CPAN upload: PDF-Class-0.0.3.tar.gz by WARRINGD https://cpan.metacpan.org/authors/id/W/WA/WARRINGD/Perl6/PDF-Class-0.0.3.tar.gz

[08:33] *** rindolf joined
[09:03] *** |oLa| joined
[09:25] *** setty1 joined
[09:45] *** philomath_ joined
[09:49] *** sena_kun joined
[10:18] *** markong joined
[10:47] *** Ven`` joined
[10:47] *** Ven`` left
[10:48] *** wamba left
[10:51] *** sena_kun left
[11:06] *** Ven`` joined
[11:13] <gfldex> m: say so "¬Ω" ~~ /(\d+)/; say $0

[11:13] <camelia> rakudo-moar d78297fcf: OUTPUT: ¬´False‚ê§Nil‚ê§¬ª

[11:13] <gfldex> m: say so ¬Ω ~~ /(\d+)/; say $0

[11:13] <camelia> rakudo-moar d78297fcf: OUTPUT: ¬´True‚ê§ÔΩ¢0ÔΩ£‚ê§¬ª

[11:13] <gfldex> this is a wee bit confusing

[11:14] <gfldex> m: say "¬Ω".uniprop;

[11:14] <camelia> rakudo-moar d78297fcf: OUTPUT: ¬´No‚ê§¬ª

[11:15] <gfldex> how do I say ‚ÄûMatch a No‚Äú in a Regex?

[11:18] *** sena_kun joined
[11:27] *** wamba joined
[11:35] *** astj joined
[11:38] *** setty1 left
[11:39] <CIAvash[m]> m: say so "¬Ω" ~~ /(<:No>+)/; say $0

[11:39] <camelia> rakudo-moar d78297fcf: OUTPUT: ¬´True‚ê§ÔΩ¢¬ΩÔΩ£‚ê§¬ª

[11:56] *** as_ joined
[12:07] *** cdg joined
[12:12] *** cdg left
[12:17] *** Ven`` left
[12:18] *** natrys joined
[12:23] *** eliasr joined
[12:44] *** as_ left
[13:09] *** philomath_ left
[13:19] *** Aceeri_ left
[13:24] *** sena_kun left
[13:25] *** Ven`` joined
[13:29] <gfldex> lolibloggedthelasttimethisyear: https://gfldex.wordpress.com/2017/12/31/expensive-egg-timers/https://gfldex.wordpress.com/2017/12/31/expensive-egg-timers/

[13:29] <gfldex> https://gfldex.wordpress.com/2017/12/31/expensive-egg-timers/

[13:31] <lizmat> gfldex++

[13:54] *** geekosaur left
[13:55] *** Ven`` left
[13:57] *** geekosaur joined
[14:09] *** astj left
[14:18] *** xinming_ joined
[14:21] *** xinming left
[14:23] *** Ven`` joined
[14:32] *** khw joined
[14:33] *** |oLa| left
[14:44] *** shadowpaste left
[15:05] *** pmurias joined
[15:05] <pmurias> Zoffix: features that aren't tested or documented sound like candidates for removal

[15:06] <timotimo> toggle was just added this month, that's probably why it's neither tested nor documented. i think it was still being discussed how exactly it should work? maybe. i probably missed the last parts of the discussion

[15:14] <AlexDaniel> that's right

[15:15] <AlexDaniel> fwiw ‚Äúcandidates for removal‚Äù is in many cases wishful thinking :) Many things are undertested, unfortunately

[15:16] <AlexDaniel> and even if so, we should first check the ecosystem, and perhaps guess if somebody is using the said features heavily‚Ä¶

[15:19] *** AlexDaniel left
[15:19] *** AlexDaniel joined
[15:21] <pmurias> timotimo: if it's a new feature maybe we want to document/test it :)

[15:34] *** xcm left
[15:35] *** jargan joined
[15:35] *** jargan is now known as Guest56314

[15:35] *** Gruber joined
[15:35] *** xcm joined
[15:35] *** wamba left
[15:36] *** a3f left
[15:36] *** ponbiki left
[15:36] *** a3f joined
[15:36] *** wamba joined
[15:37] *** Voldenet left
[15:37] *** eythian left
[15:37] *** jast left
[15:37] *** Alikzus left
[15:37] *** preaction left
[15:37] *** cosimo left
[15:37] *** haxmeister left
[15:37] *** marcusramberg left
[15:37] *** Grrrr left
[15:37] *** kaare__ joined
[15:37] *** natrys left
[15:37] *** xi- left
[15:37] *** ggoebel left
[15:37] *** kaare_ left
[15:37] *** coverable6 left
[15:38] *** reportable6 left
[15:38] *** statisfiable6 left
[15:38] *** ponbiki joined
[15:38] <timotimo> if it's untested we're free to kick it back out :P :P :P

[15:38] *** yoleaux left
[15:39] *** haxmeister joined
[15:39] *** ponbiki is now known as Guest3313

[15:39] *** eythian joined
[15:39] *** eythian left
[15:39] *** eythian joined
[15:39] *** benchable6 left
[15:39] *** unicodable6 left
[15:39] *** bisectable6 left
[15:39] *** releasable6 left
[15:39] *** ribasushi left
[15:40] <pmurias> timotimo: isn't only stuff that's tested in 6.c (6.d in the future) safe from deletion?

[15:40] *** AlexDaniel left
[15:40] *** Mikasi left
[15:41] *** statisfiable6 joined
[15:42] *** Alikzus joined
[15:42] *** Voldenet joined
[15:42] *** Voldenet left
[15:42] *** Voldenet joined
[15:42] *** releasable6 joined
[15:42] *** preaction joined
[15:43] *** Mikasi joined
[15:44] <timotimo> true i suppose

[15:45] *** ribasushi joined
[15:45] *** cosimo joined
[15:46] *** xi- joined
[15:49] *** natrys joined
[15:49] *** marcusramberg joined
[15:52] *** ggoebel joined
[15:58] *** AlexDaniel joined
[15:58] *** ryn1x joined
[16:03] <ryn1x> Do Perl6 arrays have O(1) read and O(n) insertion and lists O(n) read and O(1) insertion like their equivelantly named traditional data structures? I assume they are much more complicated than this, but do not see any performance information in the docs...

[16:05] *** nativecallable6 left
[16:05] *** quotable6 left
[16:05] *** nativecallable6 joined
[16:05] *** ChanServ sets mode: +v nativecallable6

[16:05] *** quotable6 joined
[16:05] *** ChanServ sets mode: +v quotable6

[16:05] *** committable6 left
[16:06] *** committable6 joined
[16:07] *** AlexDaniel left
[16:08] *** kerframil joined
[16:18] <geekosaur> the only difference between Array and List is that Lists are immutable

[16:19] <geekosaur> (and as such have smaller constant factors on read but much slower insertion/update because a new List must be created)

[16:20] <geekosaur> (flip side of which is most of the List can be shared between copies because it's immutable, so again it's constant factor difference rather than big-O)

[16:20] *** xcm left
[16:21] <geekosaur> well, arguably modification is O(n) but a very fast O(n)

[16:21] <AlexDaniel`> that depends on the backend, I think

[16:21] <AlexDaniel`> you can have some reasonable expectations but you never know :)

[16:22] *** xcm joined
[16:26] *** comborico1611 joined
[16:29] <ryn1x> Thanks geekosaur and AlexDaniel`

[16:33] <timotimo> geekosaur: we don't actually share parts of lists between list objects

[16:34] <AlexDaniel`> ryn1x: see this similar question on complexity of %my-hash.elems https://irclog.perlgeek.de/perl6/2017-11-16#i_15456401

[16:34] <timotimo> what you haven't mentioned is that lists can be lazy, i.e. have a generator included in them

[16:36] <lizmat> and that lists can have containers, so be mutable (apart from the number of elements in them)

[16:41] *** wander joined
[16:42] <AlexDaniel`> ryn1x: I like your question. I filed this doc ticket: https://github.com/perl6/doc/issues/1726

[16:42] <AlexDaniel`> quotable6: ‚ÄòO(n)‚Äô

[16:42] <quotable6> AlexDaniel`, OK, working on it! This may take up to three minutes (4469197 messages to process)

[16:42] *** geospeck joined
[16:42] *** AlexDaniel joined
[16:43] <quotable6> AlexDaniel`, https://gist.github.com/d1b749b273fad886c73bbcfb52763f86

[16:44] <timotimo> and arrays can be native-typed and/or shaped

[16:44] <timotimo> AlexDaniel`: how do we feel about quotable telling the first and last match (the date i mean) and how many lines were matched?

[16:45] <AlexDaniel`> timotimo: feeling great, if only somebody worked on it! :)

[16:45] <timotimo> :D

[16:45] <timotimo> on well, i guess we'll never get that feature

[16:46] <geekosaur> timotimo, more in the sense that objects are not cloned

[16:46] <timotimo> didn't the results also show the nickname of who wrote something at one point?

[16:46] <geekosaur> I didn;t mean list slice sharing / roping

[16:47] <wander> Happy new year from China! Wish #perl6 having a better year ^_^

[16:47] <tadzik> what a bot!

[16:47] <timotimo> happy new year, wander

[16:47] <AlexDaniel`> timotimo: https://github.com/perl6/whateverable/issues/270

[16:47] <ryn1x> AlexDaniel`: That would be a very nice table to have!

[16:47] <AlexDaniel`> timotimo: no, it never did, unfortunately

[16:47] <AlexDaniel`> timotimo: but it should be possible

[16:47] *** jstuder joined
[16:48] <timotimo> did we ever spec/test the order of results we get from the permutations iterator?

[16:48] <timotimo> because there's one implementation of it - and i think it's the one bdf showed in his blog post? - where you can very efficiently skip ahead

[16:49] <AlexDaniel> timotimo: interestingly, there's no information about the sender :D https://github.com/perl6/whateverable/blob/46337991a954885fe4c535319275bbb6f797b391/bin/Quotable.p6#L49-L54

[16:49] <AlexDaniel> but it can be uncommented here: https://github.com/perl6/whateverable/blob/46337991a954885fe4c535319275bbb6f797b391/maintenance/fetch-irc.p6#L63

[16:50] <timotimo> i wonder what the hack is for

[16:51] <AlexDaniel> filed it here: https://github.com/perl6/whateverable/issues/271

[16:51] <AlexDaniel> timotimo: haha, $hack‚öõ++ :D

[16:52] <AlexDaniel> timotimo: long story short, it greps through messages as if you were running a snippet

[16:52] <AlexDaniel> timotimo: and it does that in parallel for every channel

[16:52] <timotimo> oh, that's neat

[16:52] <AlexDaniel> but because there's some extra logic that unarchives builds, it may wipe out the perl6 binary and everything

[16:53] <timotimo> do you have an idea how much time is spent json decoding in the fetch-irc script?

[16:53] <wander> timotimo: thank you

[16:53] <AlexDaniel> so to ensure that things don't lock on each other, $hack variable adds ^ characters to HEAD :D

[16:53] <AlexDaniel> so it will process different channels with builds on HEAD, HEAD^, HEAD^^, HEAD^^^‚Ä¶ :)

[16:53] <timotimo> jesus christ that's a hack!

[16:54] <AlexDaniel> timotimo: I don't remember how much time is spent there, the script runs once and takes a few minutes

[16:54] <timotimo> you see, i just got into messagepack a little, and it has the vast benefit over json that strings don't have to be escaped; they have a length prefix instead

[16:54] <AlexDaniel> timotimo: but quotable6 does not use that script. The script generates a null-separated data file and quotable greps through that

[16:54] <AlexDaniel> that's the only way I managed to get it reasonably fast

[16:54] <timotimo> yeah, i saw that

[16:55] <timotimo> how is the data updated?

[16:56] <AlexDaniel> right now I just run it manually‚Ä¶ you can ssh to the server and run maintenance/fetch-irc.p6 and see what happens :)

[16:56] <AlexDaniel> this will also add all of the recent messages, so please do :D

[16:57] *** squashable6 left
[16:57] <timotimo> i'll put in a little bit of timing information if that's all right

[16:57] *** squashable6 joined
[16:57] *** reportable6 joined
[16:57] *** ChanServ sets mode: +v reportable6

[16:57] <AlexDaniel> sure

[16:58] <timotimo> i wonder if it should race for @CHANNELS :)

[16:58] *** [particle] left
[16:58] *** [particle]1 joined
[17:04] <AlexDaniel> probably not, no need to hog up the cpu

[17:07] <timotimo> running it now

[17:08] <timotimo> Skipping 2017-11-14 because of JSON issues don't understand escape sequence '\m' at 19581

[17:08] <timotimo> huh.

[17:08] <timotimo> i wonder what that's about

[17:08] <AlexDaniel> there's a file right there for 2017-11-14

[17:09] <AlexDaniel> so you should be able to open it for inspection

[17:09] <AlexDaniel> there were several files like this, but most of them were really old so I never cared

[17:09] <AlexDaniel> 2017-11-14 is rather unfortunate

[17:10] <AlexDaniel> it's probably good that *you* are looking at it :D

[17:19] <timotimo> it's working really hard

[17:21] *** wander left
[17:22] <AlexDaniel> timotimo: with the current rakudo it may run out of ram‚Ä¶ :)

[17:22] <timotimo> i don't think it's terribly wise to keep the whole data around before spurting it into the file all at once

[17:22] *** bloatable6 left
[17:22] *** bloatable6 joined
[17:22] *** coverable6 joined
[17:22] *** benchable6 joined
[17:22] *** ChanServ sets mode: +v benchable6

[17:22] * AlexDaniel restarted some bots to free some ram

[17:23] <timotimo> maybe we should @msgs = @msgs.join("\0\0") every ~10k lines or so

[17:24] <timotimo> you just reswapped the machine?

[17:24] <AlexDaniel> yea

[17:24] * timotimo moves over to #whateverable

[17:32] *** Guest56314 is now known as jast

[17:38] *** yoleaux joined
[17:38] *** ChanServ sets mode: +v yoleaux

[17:39] *** unicodable6 joined
[17:39] *** bisectable6 joined
[17:48] *** pmurias left
[17:50] *** kaare_ joined
[17:50] *** kaare__ left
[17:56] *** Ven`` left
[17:59] *** ChoHag left
[18:00] *** pecastro joined
[18:04] <timotimo> moritz: the irclog server gives us HTML for some pages when Accept: application/json is sent; maybe there's a cache that needs to be flushed? i get that behaviour for #moarvm logs between 2013-05-31 and 2013-11-03

[18:06] *** ryn1x left
[18:10] *** pecastro left
[18:18] *** Aaronepower left
[18:26] *** Ven`` joined
[18:29] *** Zoffix joined
[18:32] <Zoffix> pmurias: removal of such features seems the most unjustified of options. I rather the devs that implement them treat the testing and documentation all as part of implementing the feature. They're the best qualified to do so. Especially when extending features of already-documented routines. For example, I see neither .tail() nor .head() docs mention you could use a Callable as an argument. So the dev spent $X

[18:32] <Zoffix> amount of time writing all that code and the end result is the manjority of Perl 6 programmers aren't even aware that feature exists.

[18:32] <Zoffix> Hence the title of my whining: what's the point of implementing features users will never know about

[18:37] *** Ven`` left
[18:37] <lizmat> Zoffix: one of the reasons I have stopped implementing tests, is that they then become part of the spec

[18:37] <lizmat> and for features for which we're not sure yet, that's a bad thing

[18:38] <lizmat> fwiw, I've had to remove tests from roast in the past when a feature I implemented was reverted

[18:38] <lizmat> so I just stopped doing that

[18:38] <Zoffix> In fact, just made Z-Script clone doc repo along with the rest, to make a point 

[18:38] <Zoffix> huggable: z-script

[18:38] <huggable> Zoffix, Helper script for Rakudo Perl 6 core development: https://github.com/zoffixznet/z

[18:39] <Zoffix> lizmat: it's Open Source. You're free to do your way IMO. My whining isn't directed to any particular dev for a reason :)

[18:39] <lizmat> I know, and I don't feel offended or anything like that

[18:40] <lizmat> I'm just stating the reason why *i* don't immediately write tests anymore

[18:40] <AlexDaniel> lizmat: sorry, what's the problem of tests becoming part of the spec?

[18:40] <AlexDaniel> like, why is it bad?

[18:40] <lizmat> well, if the feature is removed, you also need to remove the tests

[18:41] <AlexDaniel> and why is that a problem?

[18:41] <lizmat> it means you've done twice as much work for nothing, instead of only once

[18:41] <AlexDaniel> ahhh‚Ä¶ I see now

[18:44] <Zoffix> \o

[18:44] *** Zoffix left
[18:58] *** Ven`` joined
[19:02] *** darutoko left
[19:07] *** unicodable6 left
[19:07] *** unicodable6 joined
[19:07] *** pmurias joined
[19:09] *** Ven`` left
[19:12] *** cdg joined
[19:12] *** pmurias left
[19:14] *** manchicken joined
[19:17] *** Perl6 joined
[19:17] <Perl6> Hi guys

[19:18] *** espadrine left
[19:19] <Perl6> Are there any open source Perl6 projects for a beginner to read and try to contribute to>

[19:22] <AlexDaniel> awww what a great question

[19:22] <AlexDaniel> I wish one day I'd be able to suggest https://github.com/perl6/whateverable/, but as of today it's really hard to run it yourself

[19:23] <Perl6> Ah, IRC bots. Finally I will be able to automate asking annoying questions on IRC channels!

[19:23] <Perl6> Thanks, I'll have a look

[19:34] *** comborico1611 left
[19:34] *** comborico1611 joined
[19:38] *** greppable6 left
[19:39] *** greppable6 joined
[19:39] *** ChanServ sets mode: +v greppable6

[19:42] *** |oLa| joined
[19:47] <TimToady> .tell ryn1x we don't do Lisp-style cons lists by default because the head/tail model is bad for parallel processing of lists, so we keep them at a higher abstraction level; however, you can make tail-sharing lists if you like by using => for cons (it's even right associative for that reason)

[19:47] <yoleaux> TimToady: I'll pass your message to ryn1x.

[20:04] *** mson joined
[20:04] <Perl6> AlexDaniel: I'm a bit confused about what the Whateverable is. In the wiki, it says it's a collection of IRC bots, but then the individual help pages have bots with a large variety of features, that don't really seem like IRC bots?

[20:07] <timotimo> well, they are all in here :)

[20:07] <timotimo> Perl6: any one in particular you're interested in?

[20:08] <Perl6> timotimo: Well, reportable has a few commands listed as "low hanging fruit," so that's probably the best one to start with :)

[20:09] *** manchicken left
[20:10] *** mson left
[20:11] <Perl6> Oh, I see, so you issue commands to bots through an IRC client

[20:11] <timotimo> yup

[20:12] *** kst joined
[20:14] *** Herby_ joined
[20:14] <Herby_> o/

[20:15] <Geth> ¬¶ doc: cd2216f441 | (Jeremy Studer)++ | doc/Language/quoting.pod6

[20:15] <Geth> ¬¶ doc: Distinguish between qqww and ¬´ ¬ª quoting

[20:15] <Geth> ¬¶ doc: 

[20:15] <Geth> ¬¶ doc: The "Word quoting with interpolation and quote protection" section

[20:15] <Geth> ¬¶ doc: previously stated that qqww and ¬´ ¬ª are equivalent. Changing that to

[20:15] <synopsebot> Link: https://doc.perl6.org/language/quoting

[20:15] <Geth> ¬¶ doc: indicate that, while very similar, ¬´ ¬ª will create allomorphs while

[20:15] <Geth> ¬¶ doc: qqww will not by default.

[20:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cd2216f441

[20:20] *** cdg left
[20:35] *** s0me0n3-unkn0wn joined
[20:36] <TimToady> it's equiv to qq:ww:v actually

[20:37] <TimToady> (v for the val function, which is what creates allomorphs)

[20:37] <jstuder> TimToady: do you think I should explicitly state that in that section

[20:37] *** pmurias joined
[20:38] <jstuder> documentation for :v is on the page

[20:38] <jstuder> just much further up

[20:38] *** s0me0ne-unkn0wn left
[20:40] <jstuder> it does seem like a good idea, now that you mention it

[20:40] * TimToady has no strong opinion either way

[20:40] <TimToady> it might help some people, and get in the way of other people

[20:41] <jstuder> maybe in a one sentence blurb?

[20:41] <TimToady> or a parenthetical remark

[20:42] *** pmurias left
[20:42] <jstuder> ok I'll mention it but as unobtrusively as I can

[20:58] *** evalable6 left
[20:58] *** evalable6 joined
[21:05] *** manchicken joined
[21:05] *** travis-ci joined
[21:05] <travis-ci> Doc build errored. Jeremy Studer 'Distinguish between qqww and ¬´ ¬ª quoting

[21:05] <travis-ci> https://travis-ci.org/perl6/doc/builds/323660330 https://github.com/perl6/doc/compare/28599bde20bd...cd2216f4412d

[21:05] *** travis-ci left
[21:05] <buggable> [travis build above] ‚úì All failures are due to: timeout (1 failure).

[21:15] <manchicken> OK, so the constant writer being missing is problematic.

[21:24] *** AlexDani` joined
[21:24] *** manchicken left
[21:25] *** manchicken joined
[21:26] *** AlexDaniel left
[21:28] *** comborico1611 left
[21:29] *** comborico1611 joined
[21:31] *** AlexDani` is now known as AlexDaniel

[21:33] *** manchicken left
[21:33] *** jstuder left
[21:34] *** manchicken joined
[21:34] *** aeruder left
[21:36] *** khw left
[21:40] *** cdg joined
[21:45] *** cdg left
[21:46] *** manchicken left
[21:48] *** manchicken joined
[22:02] *** eliasr left
[22:03] *** xcm left
[22:04] *** |oLa| left
[22:05] *** xcm joined
[22:10] *** ilbelkyr left
[22:10] *** ilbelkyr joined
[22:10] *** ilbelkyr left
[22:12] *** ilbelkyr joined
[22:15] *** ggoebel left
[22:35] *** ggoebel joined
[22:37] *** blinker left
[22:38] *** ilbelkyr left
[22:38] *** ilbelkyr joined
[22:38] *** ilbelkyr left
[22:39] *** ilbelkyr joined
[22:41] <AlexDaniel> so I went cycling a little bit exactly at midnight‚Ä¶ and now I've seen butterfly fireworks (????)

[22:41] <yoleaux> 21:25Z <Zoffix> AlexDaniel: perhaps the todo-fudged versions should be removed from the spec? The `$/` is a proper Perl 6 var. The rest... I dunno... the Perl5-ism errors only ever hurt me not helped me; I think the fewer of them we have the better. If I write `$+` it usually means I meant `$++` and I don't want it suggesting some crap from some other language...

[22:41] <yoleaux> 21:25Z <Zoffix> AlexDaniel: https://github.com/perl6/roast/commit/0a1da1a8ba99020ae61cd97181bb9adddfe0b869

[22:42] <AlexDaniel> this went along with smiley face fireworks, which was cool as well

[22:42] <AlexDaniel> but butterflies were actually doing some wing flapping which was done by lights going brighter and dimmer periodically

[22:43] <AlexDaniel> looking now on youtube, there's no video of that

[22:46] *** espadrine joined
[22:47] <AlexDaniel> lots of videos for smiley faces though

[22:50] <manchicken> I'm writing a poor-man's constant writer for the POSIX module.

[22:52] <manchicken> Thinking it might make more sense to have a program which writes a Perl module, kinda like what I'm doing in Fcntl.

[22:52] <manchicken> If I like this approach better, I may export that to its own module.

[22:53] *** xcm left
[22:54] *** xcm joined
[23:02] <Perl6> Hey guys I copied the code from Bisectable.p6, but I realised that I don't have the dependencies (where it says "use ...") How can I get these?

[23:04] <gfldex> bisectable6: source

[23:04] <bisectable6> gfldex, https://github.com/perl6/whateverable

[23:04] <gfldex> Perl6: see https://github.com/perl6/whateverable/tree/master/lib

[23:05] <gfldex> Perl6: and http://modules.perl6.org/

[23:05] <Perl6> Thanks

[23:06] *** domidumont left
[23:07] *** domidumont joined
[23:16] <timotimo> happy new year to the UTC+1 folk :)

[23:18] <AlexDaniel> Perl6: feel free to join #whateverable for more info

[23:19] <AlexDaniel> Perl6: in fact, the thing about bisectable bot is that it needs thousands of rakudo builds to operate properly

[23:19] <AlexDaniel> Perl6: and the easiest way to work with it, in that regard, is to just do the development on the server it runs on

[23:19] <AlexDaniel> Perl6: if you're interested, let me know your ssh key and I'll give you access

[23:20] *** domidumont left
[23:21] *** manchicken left
[23:22] <Geth> ¬¶ whateverable: 0532012f7f | (Aleks-Daniel Jakimenko-Aleksejev)++ | META6.json

[23:22] <Geth> ¬¶ whateverable: META6.json file

[23:22] <Geth> ¬¶ whateverable: 

[23:22] <Geth> ¬¶ whateverable: So that you can do this to install dependencies:

[23:22] <Geth> ¬¶ whateverable: 

[23:22] <Geth> ¬¶ whateverable:     zef install --deps-only .

[23:22] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/0532012f7f

[23:22] <AlexDaniel> Perl6: see this ‚Üë

[23:23] <AlexDaniel> Perl6: if you pull now, you should be able to do `zef install --deps-only .` in whateverable repo, and that'll install the deps

[23:26] *** comborico1611 left
[23:29] <Perl6> AlexDaniel: Thanks, I'll pull now

[23:33] *** kerframil left
[23:33] *** stmuk_ joined
[23:36] *** stmuk left
[23:38] *** labster joined
[23:38] *** comborico1611 joined
[23:38] <Perl6> AlexDaniel: Also, sounds cool, I'll be sure to check in to the #whateverable channel, but I don't really want the server access. Thanks for the offer though.

[23:43] <AlexDaniel> quotable6: 'in Perl 6 please'

[23:43] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4482999 messages to process)

[23:43] *** rindolf left
[23:44] <quotable6> AlexDaniel, https://gist.github.com/5deaff2f5621da0aa7c1a00f4eac8f57

[23:44] *** quotable6 left
[23:45] *** quotable6 joined
