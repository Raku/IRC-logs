[00:00] <buggable> üé∫üé∫üé∫ It's time for the monthly Accidental /win Lottery üòçüòçüòç We have 4 ballots submitted by 3 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 28! Congratulations to jnthn! You win a roll of duck tape!

[00:00] <AlexDaniel> XD

[00:12] * zengargoyle FML - "thanks @zengargoyle ! been looking for a replacement for something like FocusMe on win/mac, this is the closest iv'e found so far so will continue giving it a shot"

[00:18] * zengargoyle expects i will have to write a non-gui version.  this person listened to my non-documented hack-arounds, isn't afraid of the Terminal and sudo and editing YAML files and still wants that thing i made on a whim in response to some random post on a Q&A site.

[00:20] * zengargoyle that i never actually used myself because knowing how it works negates the reason for it's existance. aaarrrrggghhh.

[00:33] *** dubi0us left
[00:53] *** dubi0us joined
[00:55] *** astj joined
[00:58] *** dubi0us left
[01:17] <ugexe> m: class Foo { has %.hash handles <AT-KEY>; multi method AT-KEY($key where {$_ eq 'foo'}) { say "Got foo"; nextsame(); }; }

[01:17] <camelia> rakudo-moar 047464: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Package 'Foo' already has a method 'AT-KEY' (did you mean to declare a multi-method?)‚ê§at <tmp>:1‚ê§¬ª

[01:18] <ugexe> is there a way to make the handles play nice with the multi?

[01:22] *** bjz joined
[01:28] *** bjz left
[01:32] *** dubi0us joined
[01:32] <geekosaur> I don't think that does what you want

[01:33] <geekosaur> "handles" trait defines AT-KEY in Foo to do AT-KEY in %.hash

[01:33] <geekosaur> oh, I see, you want overrideable. I think you have to do that by hand

[01:34] <geekosaur> just as you would have to define your own accessors instead of somehow modifying the autogenerated ones with has $.whatever

[01:37] *** dubi0us left
[01:41] *** astj left
[01:41] *** astj joined
[01:44] *** bjz joined
[01:45] *** ilbot3 left
[01:48] *** dubi0us joined
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:49] *** BenGoldberg joined
[01:52] *** aindilis joined
[01:56] *** bjz left
[01:58] *** dubi0us left
[01:59] *** dubi0us joined
[02:03] *** dubi0us left
[02:17] *** raschipi joined
[02:18] *** dubi0us joined
[02:18] *** noganex_ joined
[02:21] *** noganex left
[02:23] *** astj left
[02:26] *** astj joined
[02:28] *** dubi0us left
[02:28] *** astj left
[02:28] *** astj joined
[02:29] *** ggoebel left
[02:32] *** bjz joined
[02:32] *** dubi0us joined
[02:34] *** aborazmeh joined
[02:34] *** aborazmeh left
[02:34] *** aborazmeh joined
[02:41] *** dubi0us left
[02:50] *** dubi0us joined
[02:58] *** dubi0us_ joined
[02:59] *** dubi0us left
[03:01] *** aborazmeh left
[03:05] *** Cabanossi left
[03:06] *** Cabanossi joined
[03:07] *** dubi0us_ left
[03:10] *** literal_ joined
[03:21] *** dubi0us joined
[03:22] *** bjz left
[03:26] *** Actualeyes joined
[03:31] *** dubi0us left
[03:33] *** literal_ left
[03:34] *** bwisti joined
[03:40] *** bjz joined
[03:42] *** araraloren_ left
[03:49] *** araraloren joined
[03:50] *** dubi0us joined
[03:53] *** bjz left
[03:53] *** astj left
[03:54] *** dubi0us left
[03:55] *** bjz joined
[03:55] *** khw left
[03:56] *** astj joined
[03:59] *** dubi0us joined
[04:01] *** astj left
[04:01] *** Cabanossi left
[04:03] *** Cabanossi joined
[04:14] *** dubi0us left
[04:17] *** dubi0us joined
[04:19] *** wamba joined
[04:23] *** mcmillhj joined
[04:24] *** pilne left
[04:25] *** aquila-chrysaeto joined
[04:27] *** dubi0us left
[04:27] *** dubi0us joined
[04:29] *** mcmillhj left
[04:32] *** dubi0us left
[04:33] *** Cabanossi left
[04:34] *** Cabanossi joined
[04:38] *** bwisti left
[04:38] *** dubi0us joined
[04:41] *** astj joined
[04:42] *** astj left
[04:42] *** dubi0us left
[04:42] *** astj joined
[04:48] *** dubi0us joined
[04:57] *** dubi0us left
[05:06] *** aborazmeh joined
[05:06] *** aborazmeh left
[05:06] *** aborazmeh joined
[05:11] *** llfourn joined
[05:14] *** raschipi left
[05:21] *** dubi0us joined
[05:22] *** mcmillhj joined
[05:25] *** dubi0us left
[05:27] *** dubi0us joined
[05:27] *** mcmillhj left
[05:28] *** BenGoldberg left
[05:31] *** skids left
[05:31] *** dubi0us left
[05:38] *** dubi0us joined
[05:39] *** avalenn left
[05:40] *** astj left
[05:41] *** kaare_ joined
[05:43] *** astj joined
[05:47] *** dubi0us left
[05:48] *** dubi0us joined
[05:53] *** dubi0us left
[05:58] *** dubi0us joined
[06:00] <Geth> ¬¶ DBIish: d9378416c0 | (Alexey Melezhik)++ (committed using GitHub Web editor) | README.pod

[06:00] <Geth> ¬¶ DBIish: An example how to pass dbname as file for qqlite

[06:00] <Geth> ¬¶ DBIish: 

[06:00] <Geth> ¬¶ DBIish: I took me some time to understand how can I do this.

[06:00] <Geth> ¬¶ DBIish: review: https://github.com/perl6/DBIish/commit/d9378416c0

[06:00] <Geth> ¬¶ DBIish: c46dfe5821 | (Alexey Melezhik)++ (committed using GitHub Web editor) | README.pod

[06:00] <Geth> ¬¶ DBIish: Fix typo

[06:00] <Geth> ¬¶ DBIish: review: https://github.com/perl6/DBIish/commit/c46dfe5821

[06:00] <Geth> ¬¶ DBIish: e658df8846 | (Salvador Ortiz)++ (committed using GitHub Web editor) | README.pod

[06:00] <Geth> ¬¶ DBIish: Merge pull request #94 from melezhik/master

[06:00] <Geth> ¬¶ DBIish: 

[06:00] <Geth> ¬¶ DBIish: An example how to pass dbname as file for sqlite

[06:00] <Geth> ¬¶ DBIish: review: https://github.com/perl6/DBIish/commit/e658df8846

[06:02] *** dubi0us left
[06:04] *** astj left
[06:07] *** dubi0us joined
[06:12] *** dubi0us left
[06:16] *** wamba left
[06:17] *** domidumont joined
[06:18] *** Cabanossi left
[06:19] *** dubi0us joined
[06:19] *** Cabanossi joined
[06:19] *** astj joined
[06:22] *** astj left
[06:22] *** astj_ joined
[06:23] *** dubi0us left
[06:24] *** domidumont left
[06:24] *** domidumont joined
[06:27] *** cpage__ left
[06:28] *** dubi0us joined
[06:32] *** dubi0us left
[06:34] *** |oLa| joined
[06:37] *** dubi0us joined
[06:37] *** domidumont left
[06:38] *** rindolf joined
[06:40] *** espadrine joined
[06:40] *** aindilis left
[06:42] *** dubi0us left
[06:47] *** dubi0us joined
[06:51] *** abraxxa joined
[06:54] *** darutoko joined
[06:55] *** abraxxa left
[06:57] *** dubi0us left
[06:58] *** dubi0us joined
[07:02] *** dubi0us left
[07:07] *** dubi0us joined
[07:12] *** dubi0us left
[07:14] *** setty1 joined
[07:19] *** dubi0us joined
[07:23] *** dubi0us left
[07:30] *** dubi0us joined
[07:34] *** huf joined
[07:34] *** dubi0us left
[07:35] *** aborazmeh left
[07:36] *** astj_ left
[07:39] *** dubi0us joined
[07:40] *** astj joined
[07:43] *** dubi0us left
[07:48] *** dubi0us joined
[07:57] *** dubi0us_ joined
[07:57] *** dubi0us left
[07:59] *** astj left
[08:00] *** kaare_ left
[08:00] *** astj joined
[08:01] *** astj left
[08:01] *** astj joined
[08:01] *** dubi0us_ left
[08:02] *** Cabanossi left
[08:04] *** Cabanossi joined
[08:08] *** dubi0us joined
[08:09] *** domidumont joined
[08:12] *** dubi0us left
[08:13] *** bjz left
[08:15] *** kaare_ joined
[08:16] *** kurahaupo left
[08:16] *** kurahaupo joined
[08:17] *** dubi0us joined
[08:18] *** araujo left
[08:21] *** dubi0us left
[08:28] *** dubi0us joined
[08:33] *** dubi0us left
[08:34] *** bjz joined
[08:35] *** FROGGS joined
[08:37] *** kyan joined
[08:38] *** dubi0us joined
[08:38] *** kaare_ left
[08:48] *** Cabanossi left
[08:49] *** Cabanossi joined
[08:52] *** dubi0us left
[08:58] *** dubi0us joined
[09:00] *** bjz left
[09:02] *** mcmillhj joined
[09:02] *** dubi0us left
[09:03] *** kaare_ joined
[09:03] *** bjz joined
[09:07] *** mcmillhj left
[09:10] *** dubi0us joined
[09:15] *** dubi0us left
[09:16] *** astj left
[09:16] *** kaare__ joined
[09:17] *** kaare_ left
[09:18] *** dubi0us joined
[09:19] *** pmurias joined
[09:20] *** mcmillhj joined
[09:22] *** kaare__ left
[09:22] *** dubi0us left
[09:23] *** astj joined
[09:25] *** mcmillhj left
[09:28] *** dubi0us joined
[09:28] *** lichtkind_ joined
[09:37] *** kurahaupo left
[09:37] *** kurahaupo joined
[09:37] *** sjoshi joined
[09:37] *** dubi0us left
[09:39] *** dubi0us joined
[09:40] *** sjoshi left
[09:44] *** dubi0us left
[09:48] *** dubi0us joined
[09:48] *** astj left
[09:49] *** parv joined
[09:52] *** dubi0us left
[09:52] *** mniip left
[09:56] *** domidumont left
[09:56] *** mcmillhj joined
[09:58] *** dubi0us joined
[09:58] *** cpage__ joined
[10:01] *** mcmillhj left
[10:07] *** dubi0us left
[10:11] <Geth> ¬¶ doc: f682cd6abb | (Jan-Olof Hendig)++ | doc/Language/io-guide.pod6

[10:11] <Geth> ¬¶ doc: Indentation fixes

[10:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f682cd6abb

[10:16] *** TEttinger left
[10:18] *** dubi0us joined
[10:22] *** dubi0us left
[10:23] *** bjz_ joined
[10:25] *** bjz left
[10:27] *** dubi0us joined
[10:31] *** dubi0us left
[10:32] *** parv left
[10:40] *** baar joined
[10:40] <baar> hello all. One question about sigils:

[10:41] <baar> in Python I can create class with methofs typical for some containers. But without to extend base container type

[10:41] <baar> for example iterable but without setting. Or with indexable getter but without setting and other combinations

[10:42] *** dubi0us joined
[10:43] <baar> This mean that I can not say what is it: list, hash or something else. So if I can do the same in Perl, what sigil I should use for such instances? How to select sigil?

[10:43] <baar> I mean Perl6 sure

[10:44] *** mr-foobar joined
[10:46] *** notbenh joined
[10:46] <jnthn> You can put anything in a $ so that's always an option.

[10:46] *** dubi0us left
[10:46] *** mr-fooba_ left
[10:47] <jnthn> @ means "I can index into it like @a[...]"; you don't have to subclass anything, just do the Positional role. The role for % is associative and means "I can index into it like %h{...}"

[10:47] <jnthn> *Associative

[10:48] <jnthn> m: my %h is BagHash # an example of an Associative built-in that's not Hash

[10:48] <camelia> rakudo-moar 047464: ( no output )

[10:48] <jnthn> m: say BagHash ~~ Hash

[10:48] <camelia> rakudo-moar 047464: OUTPUT: ¬´False‚ê§¬ª

[10:49] <jnthn> https://docs.perl6.org/language/subscripts#Custom_types may be useful also

[10:50] <timotimo> hmm, if BagHash isn't Hash, maybe it should be called something different. maybe HashyBag :D

[10:50] <llfourn> m: say BagHash ~~ Map

[10:50] <camelia> rakudo-moar 047464: OUTPUT: ¬´False‚ê§¬ª

[10:52] *** travis-ci joined
[10:52] <travis-ci> Doc build passed. Jan-Olof Hendig 'Indentation fixes'

[10:52] <travis-ci> https://travis-ci.org/perl6/doc/builds/249069522 https://github.com/perl6/doc/compare/e2754690c9ba...f682cd6abb90

[10:52] *** travis-ci left
[10:56] *** bjz joined
[10:57] *** dubi0us joined
[10:58] *** bjz_ left
[11:02] *** dubi0us left
[11:05] *** khw joined
[11:07] *** dubi0us joined
[11:17] *** dubi0us left
[11:17] *** dubi0us joined
[11:18] <lizmat> m: say BagHash ~~ QuantHash   # timotimo 

[11:18] <camelia> rakudo-moar 3058ba: OUTPUT: ¬´True‚ê§¬ª

[11:20] <llfourn> .oO(maybe it should be called QuantHashy)Oo

[11:22] *** dubi0us left
[11:24] <timotimo> :)

[11:25] <lizmat> .oO( QuantyHash )

[11:26] *** dubi0us joined
[11:30] *** domidumont joined
[11:31] *** dubi0us left
[11:34] <timotimo> HantyQuash

[11:38] *** dubi0us joined
[11:42] *** dubi0us left
[11:46] *** bjz left
[11:47] *** giraffe joined
[11:47] *** giraffe left
[11:47] *** giraffe joined
[11:47] *** dubi0us joined
[11:47] *** Cabanossi left
[11:49] *** Cabanossi joined
[11:52] *** dubi0us left
[11:56] *** dubi0us joined
[12:01] *** dubi0us left
[12:06] *** dubi0us joined
[12:10] *** dubi0us left
[12:17] *** dubi0us joined
[12:21] *** dubi0us left
[12:27] *** dubi0us joined
[12:32] *** dubi0us left
[12:36] *** dubi0us joined
[12:40] *** dubi0us left
[12:45] *** dubi0us joined
[12:47] *** Cabanossi left
[12:47] *** domidumont left
[12:49] *** Cabanossi joined
[12:50] *** dubi0us left
[12:52] *** robertle left
[12:57] *** dubi0us joined
[12:58] *** colomon_ joined
[12:59] *** bjz joined
[12:59] *** colomon left
[12:59] *** colomon_ is now known as colomon

[13:01] *** dubi0us left
[13:06] *** dubi0us joined
[13:10] *** dubi0us left
[13:17] *** dubi0us joined
[13:21] *** bjz left
[13:24] *** robertle joined
[13:26] *** dubi0us_ joined
[13:27] *** dubi0us left
[13:27] *** colomon left
[13:28] *** colomon joined
[13:30] *** dubi0us_ left
[13:31] *** baar left
[13:33] *** bjz joined
[13:37] *** dubi0us joined
[13:39] <sacomo> hi #perl6

[13:41] *** dubi0us left
[13:46] *** lucasb joined
[13:47] *** dubi0us joined
[13:48] <rindolf> sacomo: moose!

[13:49] <rindolf> sacomo: sup?

[13:49] <sacomo> ola

[13:49] <sacomo> looks like everyone is sleeping

[13:49] <lucasb> yo

[13:49] <sacomo> konbanwa

[13:50] <sacomo> are either of you familiar with match?

[13:51] <sacomo> when I return a list of matches the results are wrapped in ÔΩ¢ÔΩ£ brackets

[13:52] *** dubi0us left
[13:52] <lucasb> you want just the string matched, not the match object?

[13:52] <sacomo> is the best way to get thos to Str to just use .Str?

[13:52] <sacomo> yeah, is there a better way? like some option I can pass to match?

[13:53] <lucasb> yes, I would guess calling .Str on it is the way to go

[13:53] <jnthn> Can also stringify them with the ~ prefix operator, or if you just use them in a context that wants a Str then you'll get that

[13:54] <jnthn> fwiw, in Perl 6 a Match is an object (and nested matches form a tree)

[13:54] <sacomo> ok, thanks.

[13:55] <jnthn> And it's the .gist method that does the formatted output (which is used by `say`)

[13:55] <jnthn> If using, for example, `put` instead of `say`, which just outputs the string value, then you'd also get them without that

[13:56] <sacomo> the ~ prefix is simple

[13:56] <sacomo> ok, that is good to know

[13:56] *** dubi0us joined
[13:58] *** dubi0us left
[13:58] <sacomo> m: say "the quick brown fox".match(/ 'quick'|'brown' /, :g).map({.Str});

[13:58] <camelia> rakudo-moar 75e87d: OUTPUT: ¬´(quick brown)‚ê§¬ª

[13:59] <sacomo> m: say "the quick brown fox".match(/ 'quick'|'brown' /, :g).map({~$_});

[13:59] <camelia> rakudo-moar 75e87d: OUTPUT: ¬´(quick brown)‚ê§¬ª

[14:00] <jnthn> m: say ~<< "the quick brown fox".match(/ 'quick'|'brown' /, :g)

[14:00] <camelia> rakudo-moar 75e87d: OUTPUT: ¬´(quick brown)‚ê§¬ª

[14:01] <sacomo> ooh

[14:01] <sacomo> I like that 

[14:02] *** bjz_ joined
[14:02] *** Cabanossi left
[14:03] *** bjz left
[14:04] *** Cabanossi joined
[14:04] *** dubi0us joined
[14:07] *** dubi0us left
[14:09] *** dubi0us joined
[14:19] *** leont joined
[14:41] *** [particle] left
[14:45] *** mr-fooba_ joined
[14:47] *** andrzejku joined
[14:47] *** mr-foobar left
[14:49] <araraloren> I want make a clone method for my class. Should I clone the parent class first or after child class ?

[15:03] *** jsoo_ joined
[15:03] *** jsoo_ left
[15:05] *** pilne joined
[15:10] *** dubi0us left
[15:11] *** dubi0us joined
[15:13] *** Ven joined
[15:13] *** Ven is now known as Guest79326

[15:16] *** dubi0us_ joined
[15:17] *** Cabanossi left
[15:18] *** dubi0us left
[15:19] *** Cabanossi joined
[15:19] *** Guest79326 left
[15:21] *** dubi0us_ left
[15:22] *** Ven_ joined
[15:25] *** zakharyas joined
[15:26] *** dubi0us joined
[15:31] <araraloren> :)

[15:33] *** dubi0us left
[15:33] *** dubi0us joined
[15:35] *** dubi0us left
[15:36] *** dubi0us joined
[15:39] *** Celelibi joined
[15:41] *** dubi0us left
[15:41] *** dubi0us joined
[15:42] *** ptolemarch left
[15:42] *** dubi0us_ joined
[15:42] *** ptolemarch joined
[15:46] *** dubi0us left
[15:49] *** [particle] joined
[15:51] *** domidumont joined
[15:51] *** Rawriful joined
[15:56] *** lichtkind_ left
[15:59] *** mniip joined
[16:03] *** bjz joined
[16:04] *** dubi0us_ left
[16:05] *** bjz_ left
[16:08] *** dubi0us joined
[16:09] *** lichtkind_ joined
[16:12] <timotimo> the built-in clone doesn't do what you need it to? you need deep cloning semantics?

[16:12] *** dubi0us left
[16:13] <FROGGS> araraloren: usually you care about dependencies first (in a recursive manner)... but I dunno what your use-case is, and whet difference there is

[16:13] <araraloren> timotimo, yeah right, I want a deep clone

[16:14] <timotimo> with a clone you won't likely have any inter-attribute dependencies?

[16:14] <timotimo> you just set all the attributes?

[16:15] <araraloren> I want figure out what is the right way to do it .

[16:16] <araraloren> m: class B { has $.s; method clone(*%_) { self.bless(s => %_<s> // $!s.clone); } }; class A is B { has @.a; method clone(*%_) { self.bless(a => %_<a> // @!a.clone()); }; }; my $a = A.new(a => [1, 2, 3], s => 8); my $b = $a.clone(); $a.a.push(23);say $b;

[16:16] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´A.new(a => [1, 2, 3], s => Any)‚ê§¬ª

[16:16] *** Cabanossi left
[16:17] *** dubi0us joined
[16:17] <araraloren> m: class B { has $.s; method clone(*%_) { self.bless(s => %_<s> // $!s.clone); } }; class A is B { has @.a; method clone(*%_) { self.bless(a => %_<a> // @!a.clone()); nextwith(|%_); }; }; my $a = A.new(a => [1, 2, 3], s => 8); my $b = $a.clone(); $a.a.push(23);say $b;

[16:17] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´A.new(a => [], s => 8)‚ê§¬ª

[16:19] *** wamba joined
[16:19] *** Cabanossi joined
[16:22] *** dubi0us left
[16:28] *** dubi0us joined
[16:29] *** bwisti joined
[16:33] *** dubi0us left
[16:34] *** BenGoldberg joined
[16:36] <BenGoldberg> What's the syntax for declaring a C struct with a fixed-length array embeded in it?  my class Foo is repr('CStruct') { HAS ... }

[16:37] <timotimo> we don't have that yet :(

[16:37] <zengargoyle> m: my %h = <foo bar>; %h{*}.[0]

[16:37] <camelia> rakudo-moar c56f0a: ( no output )

[16:37] <zengargoyle> m: my %h = <foo bar>; %h{}.[0]

[16:37] <camelia> rakudo-moar c56f0a: ( no output )

[16:37] *** dubi0us joined
[16:37] <zengargoyle> m: my %h = <foo bar>; %h{*}.[0].say

[16:37] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´bar‚ê§¬ª

[16:37] <zengargoyle> m: my %h = <foo bar>; %h{}.[0].say

[16:37] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´{foo => bar}‚ê§¬ª

[16:38] *** bjz left
[16:40] <zengargoyle> jnthn: ¬´make ($<style1> // $<style2> // $<style3>).ast¬ª -- once upon a time... i did ¬´make $/{*}.[0].made¬ª for the same sort of thing.  decent approach or not?

[16:42] <zengargoyle> guess now that would be $/{*}.first.made. :)

[16:44] <timotimo> yeah, or [//] @$/{*}

[16:44] * zengargoyle tots wishes i had remembered this before now.  guess that will go into plan-e of my `at` parser. :P

[16:45] <zengargoyle> in grammar, only one thing will be there....

[16:45] *** xinming joined
[16:46] <zengargoyle> you just don't know which one thing you got...

[16:46] <timotimo> the thing is that to get the .made you'd need to put parens around

[16:46] <timotimo> or

[16:46] *** Mithaldu joined
[16:46] <timotimo> "made [//] @$/{*}:"

[16:46] <timotimo> okay, so how about this, though:

[16:47] <timotimo> m: my %result = :99style2; say %result{*}:kv:value.perl;

[16:47] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Failure.new(exception => X::Adverb.new(what => "slice", source => "\%result", unexpected => ["value"], nogo => ["kv"]), backtrace => Backtrace.new)‚ê§¬ª

[16:47] <timotimo> whoops?

[16:47] <timotimo> m: my %result = :99style2; say %result{*}:pair:value.perl;

[16:47] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Unexpected named argument 'pair' passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:47] <timotimo> m: my %result = :99style2; say %result{*}:pairs:value.perl;

[16:47] *** dubi0us left
[16:47] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Unexpected named argument 'pairs' passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:47] <timotimo> m: my %result = :99style2; say %result{*}:p:value.perl;

[16:47] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Failure.new(exception => X::Adverb.new(what => "slice", source => "\%result", unexpected => ["value"], nogo => ["p"]), backtrace => Backtrace.new)‚ê§¬ª

[16:47] <zengargoyle> :" -- ? i don't get this...

[16:47] <timotimo> what's that one called again

[16:47] *** dubi0us joined
[16:47] <timotimo> oh, that's the indirect method call syntax

[16:48] <timotimo> it's for people who really want to write "new MyClass: 1, 2, 3"

[16:48] <timotimo> m: my %result = :99style2; say %result{*}:value;

[16:48] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Unexpected named argument 'value' passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:48] <timotimo> m: my %result = :99style2; say %result{*}:values;

[16:48] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Unexpected named argument 'values' passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:49] <timotimo> there totally was an adverb like that

[16:49] <timotimo> i have no idea what it was

[16:49] <timotimo> m: my %result = :99style2; say %result{*}:v;

[16:49] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´(99)‚ê§¬ª

[16:49] <timotimo> actually, when you have {*} :v makes no sense because you already only get that

[16:49] <zengargoyle> if you match and hit the action, you're going to have a $/ with a $/<something> = Match

[16:49] <timotimo> the stuff that didn't go into the match don't even end up in the match object

[16:50] <timotimo> instead of $/{*}.[0] you can also $/.values.head

[16:50] <zengargoyle> m: my %result = :99style2; say %result{*};

[16:50] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´(99)‚ê§¬ª

[16:50] *** lucasb left
[16:50] <zengargoyle> {*} gives you values, {} gives you pairs....

[16:51] <timotimo> did you want the name of the thing matched?

[16:51] *** bjz joined
[16:51] <zengargoyle> no, just the thing... the $whatever.made is the only really important part in this case.

[16:52] *** dubi0us left
[16:52] <timotimo> right, so %result.values.head.made?

[16:52] <timotimo> hm, i wonder

[16:52] <zengargoyle> yeah, or %result{*}.first.made

[16:52] *** zacts joined
[16:52] <timotimo> m: my %result = :99foo; say head values %result:::

[16:52] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    head used at line 1‚ê§‚ê§¬ª

[16:53] <timotimo> m: my %result = :99foo; say (head (values %result:):):

[16:53] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´99‚ê§¬ª

[16:53] <timotimo> :) :)

[16:53] <zengargoyle> (that's pretty much what i did recently before i remembered the {*}.[0] thing....

[16:57] *** dubi0us joined
[16:57] <zengargoyle> m: my %h = <foo bar>; for %h{}.[0].kv -> $k, $v { say "$k -> $v" }

[16:57] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´foo -> bar‚ê§¬ª

[17:00] <zengargoyle> m: my %h = <foo bar>; for %h{}.[0] -> $p { say "$p.key() -> $p.value()" }

[17:00] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´foo -> bar‚ê§¬ª

[17:00] <zengargoyle> howto -> $k, $v { ... }

[17:01] <timotimo> how do you mean?

[17:02] <zengargoyle> m: my %h = <foo bar>; for %h{}.[0] -> $k, $v { say "$k -> $v" }

[17:02] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Too few positionals passed; expected 2 arguments but got 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:02] *** dubi0us left
[17:02] <zengargoyle> m: my %h = <foo bar>; for %h{}.[0] -> $k => $v { say "$k -> $v" }

[17:02] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix > instead‚ê§at <tmp>:1‚ê§------> 3my %h = <foo bar>; for %h{}.[0] -> $k =>7‚èè5 $v { say "$k -> $v" }‚ê§¬ª

[17:02] <zengargoyle> m: my %h = <foo bar>; for %h{}.[0] -> ($k, $v){ say "$k -> $v" }

[17:02] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Too few positionals passed to ''; expected 2 arguments but got 0 in sub-signature‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:02] <zengargoyle> m: my %h = <foo bar>; for %h{}.[0] -> ($k => $v){ say "$k -> $v" }

[17:02] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix > instead‚ê§at <tmp>:1‚ê§------> 3y %h = <foo bar>; for %h{}.[0] -> ($k =>7‚èè5 $v){ say "$k -> $v" }‚ê§¬ª

[17:02] <timotimo> m: my %h = <foo bar>; say %h{}.perl

[17:02] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´{:foo("bar")}‚ê§¬ª

[17:02] <zengargoyle> sorta like that

[17:02] <timotimo> looks like %h{} just returns %h

[17:03] <timotimo> a zen-slice, like @foo[]

[17:03] *** Ven_ left
[17:03] <zengargoyle> ah

[17:04] *** perigrin joined
[17:05] <timotimo> m: my %h = <foo bar>; my ($k, $v) = %h.kv; say $k.perl; say $v.perl

[17:05] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´"foo"‚ê§"bar"‚ê§¬ª

[17:06] <araraloren> so, There is no pretty way to do a clone for a child class ?  

[17:06] *** zakharyas left
[17:06] <araraloren> https://github.com/araraloren/perl6-terminal-table/blob/master/lib/Terminal/Table/String.pm6#L22

[17:06] *** dubi0us joined
[17:06] <timotimo> in that clone method you have there the result of self.bless is unused and just thrown away

[17:07] <araraloren> Look at this String, it inherit from Str, also I know that clone maybe wrong.

[17:07] <araraloren> Yeah, so what should I do..

[17:07] <timotimo> i'd my $theclone = callsame; $theclone.style = $theclone.style.clone

[17:08] *** BenGoldberg left
[17:08] <timotimo> of course you'll have to have accessors for $!style

[17:08] <araraloren> I also have read some rakudo source code, but found no way.

[17:08] <timotimo> oh

[17:08] <timotimo> how about this

[17:08] <timotimo> nextwith(|(%_, {style => self.style.clone}))

[17:09] <araraloren> em, I will try

[17:09] <timotimo> m: my %foo = :1bar, :2baz; sub sayparams(*%_) { say %_.perl }; sayparams(|(%foo, {style => 99}))

[17:09] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´Too many positionals passed; expected 0 arguments but got 2‚ê§  in sub sayparams at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:09] <timotimo> m: my %foo = :1bar, :2baz; sub sayparams(*%_) { say %_.perl }; sayparams(|%(%foo, {style => 99}))

[17:09] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´{:bar(1), :baz(2), :style(99)}‚ê§¬ª

[17:09] <timotimo> there we go

[17:10] *** perigrin left
[17:11] *** dubi0us left
[17:11] * zengargoyle sould have said make a .perl and EVAL. :)   method clone() { return EVAL self.perl } -- like.

[17:12] <araraloren> timotimo, seems like you code is right, I will make more test

[17:12] <araraloren> thanks

[17:13] *** perigrin joined
[17:13] <araraloren> s/you/your/

[17:17] *** dubi0us joined
[17:17] *** Cabanossi left
[17:19] *** Cabanossi joined
[17:22] *** dubi0us left
[17:27] *** dubi0us joined
[17:31] *** bjz left
[17:32] *** dubi0us left
[17:33] *** bjz joined
[17:35] *** nhywyll joined
[17:37] *** dubi0us joined
[17:37] <zengargoyle> m: my %h = <foo bar>; given %h.first -> (:key($k), :value($v)) { say "$k -> $v" }

[17:37] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´foo -> bar‚ê§¬ª

[17:38] <zengargoyle> that's what i was looking for.

[17:41] *** dubi0us left
[17:47] *** dubi0us joined
[17:52] *** dubi0us left
[17:52] *** bjz left
[17:53] *** bjz joined
[17:57] *** dubi0us joined
[17:59] <jnthn> zengargoyle: Hm, that's cute. %().first.made may also work (iirc %() is short for %($/))

[18:06] <zengargoyle> m: grammar D { rule TOP { a+ | b+ { say "in TOP" } } }; say so D.parse("aaa");

[18:06] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´True‚ê§¬ª

[18:06] <zengargoyle> where's my "in TOP" ?

[18:07] *** grumble joined
[18:08] <zengargoyle> m: grammar D { rule TOP { a+ | b+ { make "in TOP" } } }; say D.parse("aaa").made;

[18:08] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´No such method 'gist' for invocant of type 'NQPMu'. Did you mean 'isa'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:10] <zengargoyle> m: grammar D { rule TOP { a+ | b+ { make "in TOP" } } }; say D.parse("bbb").made;

[18:10] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´in TOP‚ê§¬ª

[18:10] *** jamesaxl joined
[18:10] * zengargoyle frell

[18:10] <zengargoyle> m: grammar D { rule TOP { [ a+ | b+ ] { make "in TOP" } } }; say D.parse("aaa").made;

[18:10] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´in TOP‚ê§¬ª

[18:11] *** dubi0us left
[18:18] <Geth> ¬¶ ecosystem: d22b30e8ea | loren++ (committed using GitHub Web editor) | META.list

[18:18] <Geth> ¬¶ ecosystem: Update Terminal::Table version 

[18:18] <Geth> ¬¶ ecosystem: 

[18:18] <Geth> ¬¶ ecosystem: fix clone method

[18:18] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/d22b30e8ea

[18:19] *** dubi0us joined
[18:20] *** Ven joined
[18:20] *** Ven is now known as Guest28990

[18:21] *** Guest28990 left
[18:21] <zengargoyle> m: my grammar D { token a { a+ }; token b { b+ }; rule TOP { [ <a> | <b> ] { given %().kv -> ($k,$v) { make [ $k, $v ] } } }; }; say so D.parse("aaaa"); say D.parse("aaaa").made;

[18:21] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´True‚ê§[a ÔΩ¢aaaaÔΩ£]‚ê§¬ª

[18:23] *** dubi0us left
[18:25] *** cdg joined
[18:26] <Geth> ¬¶ doc: 64a0330591 | (Jan-Olof Hendig)++ | doc/Type/IO/CatHandle.pod6

[18:26] <Geth> ¬¶ doc: Formatting fixes

[18:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/64a0330591

[18:27] *** dubi0us_ joined
[18:28] *** Cabanossi left
[18:31] *** Khisanth left
[18:32] *** Cabanossi joined
[18:32] *** dubi0us_ left
[18:36] <zengargoyle> m: my grammar D { token a { a+ }; token b { b+ }; rule TOP { [ <a> | <b> ] { make %().kv } }; }; say so D.parse("aaaa"); say D.parse("aaaa").made;

[18:36] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´True‚ê§(a ÔΩ¢aaaaÔΩ£)‚ê§¬ª

[18:37] *** dubi0us joined
[18:45] *** dubi0us left
[18:47] *** darutoko left
[18:47] *** dubi0us joined
[18:47] <Geth> ¬¶ doc: 33a6888252 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/quoting.pod6

[18:47] <Geth> ¬¶ doc: show the example as described

[18:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/33a6888252

[18:49] *** Kaffe left
[18:52] *** dubi0us left
[18:56] *** dubi0us joined
[19:02] *** Kaffe joined
[19:04] *** Khisanth joined
[19:06] *** dubi0us left
[19:09] *** dubi0us joined
[19:14] *** bjz left
[19:16] <sjn> how does one introspect the signature of the method you're currently in? (I'm thinking of calling .signature on something similar to Perl5's __SUB__)

[19:16] *** travis-ci joined
[19:16] <travis-ci> Doc build errored. Jan-Olof Hendig 'Formatting fixes'

[19:16] <travis-ci> https://travis-ci.org/perl6/doc/builds/249162155 https://github.com/perl6/doc/compare/f682cd6abb90...64a0330591a5

[19:16] *** travis-ci left
[19:18] *** dubi0us_ joined
[19:18] *** dubi0us left
[19:19] *** Khisanth left
[19:22] *** dubi0us_ left
[19:28] *** dubi0us joined
[19:29] <geekosaur> m: class A { method a { dd &?ROUTINE.signature } }; A.new.a

[19:29] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´:(A $: *%_)‚ê§¬ª

[19:29] <geekosaur> sjn ^^

[19:31] *** nhywyll left
[19:32] *** dubi0us left
[19:32] <tbrowder> hi, how can i get the number of bytes in a Str? i can get graphemes, but i haven't been able to convert to a Buf to get bytes.

[19:34] <geekosaur> you need to specify an encoding

[19:34] <tbrowder> never mind, looks like Str encode method is the route to go, thnx

[19:35] <geekosaur> m: say "√Ö√§".encode('UTF-8').bytes

[19:35] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´4‚ê§¬ª

[19:35] <geekosaur> yes

[19:37] *** madgoat joined
[19:37] *** dubi0us joined
[19:38] *** travis-ci joined
[19:38] <travis-ci> Doc build errored. Tom Browder 'show the example as described'

[19:38] <travis-ci> https://travis-ci.org/perl6/doc/builds/249166391 https://github.com/perl6/doc/compare/64a0330591a5...33a68882521e

[19:38] *** travis-ci left
[19:40] *** madgoat left
[19:42] *** dubi0us left
[19:45] *** kyan left
[19:47] *** dubi0us joined
[19:52] *** dubi0us left
[19:52] *** lucasb joined
[19:55] *** Shanta joined
[19:57] *** dubi0us joined
[19:57] *** kyan joined
[19:57] <Shanta> Hi I am new to perl 6 in the process of installing zef using. 2 git clone https://github.com/ugexe/zef.git 3 cd zef 4 perl6 -Ilib bin/zef install zef

[19:58] <Shanta> Too few positionals passed; expected 2 arguments but got 1   in code  at /home/shanta/zef/lib/Zef/Repository/LocalCache.pm6 (Zef::Repository::LocalCache) line 90   in method slurp-package-list at /home/shanta/zef/lib/Zef/Repository/LocalCache

[19:59] <Shanta> What am I missing?

[20:04] *** cdg left
[20:04] *** jamesaxl left
[20:06] *** dubi0us left
[20:07] *** TEttinger joined
[20:07] *** dubi0us joined
[20:07] *** dubi0us left
[20:08] *** dubi0us joined
[20:16] *** Cabanossi left
[20:16] *** cyphase joined
[20:19] *** user3 joined
[20:19] *** Cabanossi joined
[20:19] *** rindolf left
[20:20] <user3> how do I get the symmetric difference between 2 hash variables %h1 and %h2

[20:23] <user3> %h1 is a proper superset of %h2

[20:25] <moritz> Shanta: what's your version of Perl 6?

[20:25] <yoleaux> 30 Jun 2017 22:01Z <AlexDaniel> moritz: clog handles unicode rather poorly nowadays‚Ä¶ ¬¶ appears as √Ç¬¶ and I don't think this issue existed previously

[20:25] <moritz> perl6 --version

[20:25] <zengargoyle> Shanta: try: perl6 -I. ./bin/zef install .

[20:25] <moritz> user3: sets support difference as an operator, duno if hashes do

[20:27] <zengargoyle> and/or the instructions say: perl6 -Ilib bin/zef install .

[20:28] <zengargoyle> it might not be able to install a named module from the internets from it's source dir 'install zef', but should install a directory (itself) with 'install .'

[20:28] <sjn> Shanta: perl6 -v # gives the version you're running now. zef needs a recent version

[20:30] <jnthn> m: my %h1 = :a, :b, :c; my %h2 = :c, :d; say %h1 ‚äñ %h2

[20:30] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´set(d, b, a)‚ê§¬ª

[20:30] <jnthn> m: my %h1 = :a, :b, :c; my %h2 = :c, :d; say %h1 (^) %h2 # ascii

[20:30] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´set(d, b, a)‚ê§¬ª

[20:31] <zengargoyle> oh, yeah, maybe perl6 version. :)

[20:32] *** rindolf joined
[20:33] <zengargoyle> .u ‚äñ 

[20:33] <yoleaux> U+2296 CIRCLED MINUS [Sm] (‚äñ)

[20:36] <zengargoyle> https://docs.perl6.org/language/setbagmix#index-entry-Symmetric_set_difference_operator

[20:38] <zengargoyle> i think https://docs.perl6.org/language/glossary#index-entry-Texas_operator needs a link to https://docs.perl6.org/language/unicode_texas

[20:42] *** |oLa| left
[20:42] *** Khisanth joined
[20:42] *** |oLa| joined
[20:44] *** BenGoldberg joined
[20:45] *** ilbot3 left
[20:45] *** ilbot3 joined
[20:45] *** ChanServ sets mode: +v ilbot3

[20:46] <moritz> m: say 42

[20:46] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´42‚ê§¬ª

[20:48] *** Cabanossi left
[20:49] *** Cabanossi joined
[20:49] *** rindolf left
[20:51] *** andrzejku left
[20:51] <leont> My code is doing ¬´my $raw = $optional || %variables{$key}:exists¬ª, and the compiler complains about ¬´You can't adverb &infix:<||>¬ª, what am I doing wrong?

[20:52] *** rindolf joined
[20:54] <moritz> just precedence

[20:54] <moritz> my $raw = $optional || (%variables{$key}:exists);

[20:54] * zengargoyle thinks it's too late in the day to figure out usage of L<> in docs. :)

[20:56] *** user3 left
[20:57] *** |oLa| left
[20:58] <Juerd> Interesting that adverbs are looser than ||

[20:58] <Juerd> Does that have use cases?

[20:59] <leont> Solved it be switching them around

[20:59] <leont> *by

[20:59] *** |oLa| joined
[20:59] <masak> Juerd: adverbs don't really participate in the precedence game. they just seek out the highest node in the AST fragment they're in.

[21:01] <Juerd> masak: What's a good strategy for me, as a code reading human, to know what the adverb will be applied to?

[21:01] <leont> ugexe: And now zef doesn't want to do anything. ¬´Too few positionals passed; expected 2 arguments but got 1¬ª, Zef::Repository::LocalCache line 90

[21:04] <masak> Juerd: it will apply to the loosest operator that precedes it (but no looser than infix:<,>)

[21:05] *** parv joined
[21:05] <masak> Juerd: so if you have a sense of the order the operators will execute in, you can form an intuition of what the adverb will bind to

[21:05] <Juerd> masak: Oh, so in %foo{$key}:exists it applies to the operator {}, rather than the hash?

[21:05] <masak> aye

[21:05] <Juerd> I should read up on adverbs. I understand very little about them.

[21:05] <masak> %foo is a term, not an operator :)

[21:05] <Juerd> Good point, but I find this syntax rather alien :)

[21:06] <masak> but with `+%foo{$key} :exists`, it applies to the prefix:<+>; probably not intended

[21:06] <Juerd> Ahh

[21:06] <masak> because prefix:<+> is very loose

[21:06] <Juerd> Thanks, this clears up a lot of the fog in my mind, regarding adverbs

[21:06] <masak> the one that always bites me is the `||` above. or `&&`

[21:06] <masak> basically, I find (for me) adverbs break a fundamental expectation of refactoring

[21:07] <masak> that subexpressions can be re-arranged according to mathematical laws

[21:07] <leont> I would have expected them to bind on proximity

[21:07] <masak> yes, that might have been nice

[21:09] <timotimo> maybe it's time for a slang to explore this

[21:09] <masak> \o/

[21:09] <masak> to the slang machine!

[21:09] <timotimo> that was not me volunteering

[21:09] <timotimo> :)

[21:10] <masak> history will be the judge of that

[21:11] <timotimo> historians from the future will not be able to retroactively force me to implement this :)

[21:12] <timotimo> well, if sufficiently far in the future, it might be possible

[21:12] *** domidumont left
[21:13] *** broquaint left
[21:13] *** iH2O joined
[21:13] <masak> any sufficiently advanced future-historianism is indistinguishable from coercion

[21:14] <iH2O> why doesn't "say;" work to print an empty line? what is the cleanest way to do it?

[21:14] *** araraloren left
[21:14] <masak> m: say ""

[21:14] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´‚ê§¬ª

[21:14] <iH2O> say ''

[21:14] <masak> iH2O: historical reasons.

[21:14] <evalable6> iH2O, rakudo-moar c56f0af9a: OUTPUT: ¬´¬ª

[21:15] <masak> iH2O: in Perl 5, `say` means `say $_`

[21:15] <iH2O> ok

[21:16] <masak> iH2O: and it was decided early on that people who wrote `say;` in Perl 6 would be far too likely to mean `say $_;` (influenced by Perl 5) even though by the logic of Perl 6 it clearly means `say "";`

[21:16] <timotimo> m: put

[21:16] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "put" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3put7‚èè5<EOL>‚ê§Other potential difficulties:‚ê§    Function "put" may not be called without arguments (please use () or whitespace to denote arguments, or &put to r‚Ä¶¬ª

[21:16] <timotimo> m: put()

[21:16] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´‚ê§¬ª

[21:16] <timotimo> m: say()

[21:16] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´‚ê§¬ª

[21:16] <timotimo> there you go, you can do that, as well

[21:18] <parv> m: say put

[21:18] <yoleaux> 30 Jun 2017 10:19Z <HelpBot[perl6]> parv: you should only ever use releases and not "build every day" off a random commit. Non-release commits aren't as thoroughly tested and it isn't uncommon for them to have some regressions. People who build them are like people who do 30 over speed limit: they think they know better and would like to get (bugfixes) fast, but eventually they'll come across a untested pothole that wipes all their data.

[21:18] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "put" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3say put7‚èè5<EOL>‚ê§Other potential difficulties:‚ê§    Function "put" may not be called without arguments (please use () or whitespace to denote arguments, or &put ‚Ä¶¬ª

[21:18] <masak> I've always felt that those of us who don't have a strong Perl 5 lilt have been short-changed by that "potential difficulty" error. `say;` is such a nice, short, clear, straightforward thing to write.

[21:18] <masak> but, on the other hand, I haven't been strongly pushing for a pragma-or-something to turn it off, either, so... :)

[21:20] <parv> masak, i won't have minded if Perl 6 would not even bear a passing similarity to Perl 5 (which I have been using for a long time)

[21:20] <parv> m: say say

[21:20] <camelia> rakudo-moar c56f0a: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "say" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3say say7‚èè5<EOL>‚ê§Other potential difficulties:‚ê§    Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or use an‚Ä¶¬ª

[21:21] *** iH2O left
[21:24] <timotimo> with slanngs you can make it as outlandish as you like :D

[21:31] *** setty1 left
[21:34] <Shanta> This is Rakudo version 2016.12 built on MoarVM version 2016.12 implementing Perl 6.c.

[21:35] <timotimo> that's rather old

[21:36] *** lucasb left
[21:38] <Shanta> zengargoyle tried yor sugestion shorter error list but same problem

[21:44] <timotimo> Shanta: it's definitely possible that your version of rakudo is too old to install zef

[21:47] <Shanta> Just downloaded from the site.

[21:51] <timotimo> you're on a 32bit windows?

[21:51] <timotimo> no, that's 2016.01

[21:51] <Shanta> linux

[21:51] <timotimo> where did you download it? rakudo.org has 2017.04, or 2016.01, not 2016.12

[21:51] <Shanta> yes

[21:52] <Shanta> I will try again from the tar.

[21:53] <Shanta> did the first install from the web page code as shown way above.

[21:54] *** wamba left
[21:57] <El_Che> Shanta: in case you just want rakudo and want to install modules with zef: https://github.com/nxadm/rakudo-pkg/releases

[21:57] <Shanta> wget  https://rakudo.perl6.org/downloads/rakudo/rakudo-2017.06.tar.gz 3 tar xzf rakudo-2017.06.tar.gz 4 cd rakudo-2017.06/ 5 perl Configure.pl --gen-moar --gen-nqp --backends=moar 6 make 7 make install

[21:58] <timotimo> it will not install that rakudo systemwide btw

[21:58] <Shanta>  El_Che can't get zef installed yet.

[21:59] <timotimo> maybe you have a PATH that points to an older perl6 binary?

[21:59] <timotimo> what would "which perl6" say?

[22:00] <El_Che> Shanta: the link I gave you are precompiled linux packages that include a script to install zef.

[22:00] <Shanta> I am reading the i should have .06

[22:00] <El_Che> rakudo star on linux are: source to compiles with a set of pre-chose modules

[22:01] <Shanta> code used to get zef git clone https://github.com/ugexe/zef.git Cloning into 'zef'...

[22:02] <timotimo> + documentation

[22:02] <Shanta>  path seems to be /usr/bin/perl6

[22:02] *** parv left
[22:03] <timotimo> okay, it wouldn't install that with the commandline you gave above

[22:03] <timotimo> so that must be the przoblem

[22:03] <timotimo> did you try installing a perl6 with your package manager?

[22:03] *** |oLa| left
[22:03] <Shanta> yes them removed it as it would be too old.

[22:04] <timotimo> hm, but somehow it must have stuck around

[22:07] <Shanta> Maybe I pull a windows to get the path to refresh Primarily flowing Gabor Szabo's new book.

[22:07] <timotimo> oh cool

[22:07] <timotimo> if there's no perl6 binary at that path, which wouldn't output it and calling perl6 wouldn't try to run it

[22:09] *** robertle left
[22:11] *** Shanta left
[22:12] *** Shanta joined
[22:19] *** sftp left
[22:20] *** sftp joined
[22:28] *** cyphase left
[22:33] *** bjz joined
[22:44] *** bjz left
[22:59] *** dubi0us_ joined
[23:01] *** dubi0us left
[23:02] *** Cabanossi left
[23:03] *** pmurias left
[23:04] *** Cabanossi joined
[23:06] *** cyphase joined
[23:06] *** Ven joined
[23:07] *** Ven is now known as Guest98263

[23:08] *** dubi0us_ left
[23:10] *** dubi0us joined
[23:11] *** dubi0us_ joined
[23:12] *** Guest98263 left
[23:14] *** dubi0us left
[23:14] *** dubi0us__ joined
[23:17] *** dubi0us_ left
[23:23] *** cyphase left
[23:24] *** dubi0us__ left
[23:27] *** cyphase joined
[23:27] *** dubi0us joined
[23:29] *** Rawriful left
[23:32] *** dubi0us left
[23:35] *** dubi0us joined
[23:35] *** dubi0us_ joined
[23:40] *** dubi0us left
[23:48] *** bjz joined
[23:48] *** Cabanossi left
[23:49] *** Cabanossi joined
[23:53] *** dubi0us joined
[23:56] *** dubi0us_ left
[23:56] *** Ben_Goldberg joined
[23:56] *** BenGoldberg left
[23:56] *** Ben_Goldberg is now known as BenGoldberg

