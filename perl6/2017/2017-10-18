[00:05] *** Morfent joined
[00:05] *** pilne joined
[00:08] *** Mrofnet left
[00:13] *** ryn1x joined
[00:16] *** mcmillhj joined
[00:16] *** cpage_ joined
[00:17] *** kaare_ left
[00:18] *** matiasli1a left
[00:19] *** ryn1x left
[00:20] *** mcmillhj left
[00:22] <pilne> am i wrong in my feeling that perl6 is probably the easiest way to code if you want/must glue together other languages due to grammars?

[00:23] <pilne> like... if i don't care right now about performance, but for some reason i want to/need to mix say... c, ruby, python, and perl5 code....

[00:23] <pilne> perl6 would probably be the most natural way to do that (as compared to anything else, except maybe doing it "bottom up" with c?)

[00:23] <pilne> like if perl5 is glue, perl6 is superglue :D

[00:24] <raschipi> I don't see the relation to Grammars, though...

[00:25] <pilne> aren't grammars what allow the interop to be kept perl6 based?

[00:25] <pilne> in terms of syntax? or is my brain finally just melting down a little?

[00:26] <raschipi> No, it's the foreign function interface

[00:27] <raschipi> i.e. NativeCall

[00:27] <raschipi> Rakudo uses NativeCall to call into other languages.

[00:27] *** Cabanossi left
[00:28] <raschipi> But Perl6 was built from the start to be able to do these things, so it's not just NativeCall.

[00:28] <pilne> fair enough

[00:29] *** mcmillhj joined
[00:30] *** Mrofnet joined
[00:30] *** Cabanossi joined
[00:31] *** kaare_ joined
[00:33] *** Morfent left
[00:34] *** mcmillhj left
[00:44] *** ryn1x joined
[00:47] *** llfourn joined
[00:57] *** aborazmeh joined
[00:57] *** aborazmeh left
[00:57] *** aborazmeh joined
[01:01] *** mcmillhj joined
[01:06] *** mcmillhj left
[01:07] *** margeas left
[01:10] *** eliasr left
[01:19] <Geth> ¬¶ doc: f7eefbd890 | (Zoffix Znet)++ | 3 files

[01:19] <Geth> ¬¶ doc: Document behaviour with degenerate cue intevals

[01:19] <Geth> ¬¶ doc: 

[01:19] <Geth> ¬¶ doc: - Could use less stilted language

[01:19] <Geth> ¬¶ doc: 

[01:19] <Geth> ¬¶ doc: Impl: https://github.com/rakudo/rakudo/commit/df01ad97e5

[01:19] <Geth> ¬¶ doc: Spec: https://github.com/perl6/roast/commit/baa8ccbb30

[01:19] <Geth> ¬¶ doc: Extra tests: https://github.com/rakudo/rakudo/commit/031f8cf77c

[01:19] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f7eefbd890

[01:22] *** mcmillhj joined
[01:23] *** darkmorph left
[01:23] <raschipi> u: ‚Äî

[01:23] <unicodable6> raschipi, U+2014 EM DASH [Pd] (‚Äî)

[01:23] *** aborazmeh left
[01:26] *** mcmillhj left
[01:27] *** Cabanossi left
[01:30] *** Cabanossi joined
[01:35] *** bitrauser_ joined
[01:36] *** mcmillhj joined
[01:38] *** bitrauser left
[01:40] *** mcmillhj left
[01:44] *** Herby_ joined
[01:44] <Herby_> o/

[01:45] *** ilbot3 left
[01:46] *** mson joined
[01:51] *** Morfent joined
[01:53] *** matiaslina joined
[01:54] *** Mrofnet left
[01:55] <HoboWithAShotgun> m: my %h = gather { take :p(1) }; %h.say

[01:55] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´Unexpected named argument 'p' passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:55] *** ilbot3 joined
[01:55] *** ChanServ sets mode: +v ilbot3

[01:56] <HoboWithAShotgun> m: my %h = gather { take p => 1) }; %h.say

[01:56] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3my %h = gather { take p => 17‚èè5) }; %h.say‚ê§    expecting any of:‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§        statement ‚Ä¶¬ª

[01:56] <HoboWithAShotgun> m: my %h = gather { take p => 1 }; %h.say

[01:56] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´Unexpected named argument 'p' passed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:56] *** matiaslina left
[01:56] <HoboWithAShotgun> bummer

[01:56] *** jeffythedragonsl joined
[01:58] *** Zoffix joined
[01:58] <Zoffix> HoboWithAShotgun: you're passing it as named arg to &take. Pass it as a positional instead

[01:58] <Zoffix> m: my %h = gather { take "p" => 1 }; %h.say

[01:58] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´{p => 1}‚ê§¬ª

[01:59] <Zoffix> m: my %h = gather { take "p" => 1;   take :42z.Pair;   :100y.take }; %h.say

[01:59] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´{p => 1, y => 100, z => 42}‚ê§¬ª

[01:59] <Zoffix> I think it's described in detail here: https://docs.perl6.org/language/traps#Named_Parameters

[02:00] * Zoffix .put-into: $bed

[02:00] *** Zoffix left
[02:00] *** Morfent left
[02:02] <HoboWithAShotgun> m: say (y => 1) == ('y' => 1)

[02:02] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´Cannot resolve caller Numeric(Pair: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[02:03] *** jeffythedragonsl left
[02:04] <HoboWithAShotgun> good night

[02:04] <HoboWithAShotgun> me too

[02:06] *** kaare__ joined
[02:07] *** cog_ left
[02:08] *** cognominal joined
[02:09] <ugexe> m: my %h = gather { take $(:p(1)) }; %h.say

[02:09] <camelia> rakudo-moar 4c3700729: OUTPUT: ¬´{p => 1}‚ê§¬ª

[02:09] *** kaare_ left
[02:13] *** darkmorph joined
[02:25] *** ryn1x left
[02:27] *** perlpilot left
[02:28] *** noganex_ joined
[02:31] *** noganex left
[02:31] <Herby_> question

[02:31] <Herby_> disclaimer: I'm new to Linux

[02:31] <Herby_> in the terminal, if I type "zef", i get the options for zef

[02:31] <Herby_> if I type "sudo zef", it says command not found

[02:32] <Herby_> what gives

[02:36] <raschipi> do you have sudo installed?

[02:36] <Herby_> yep

[02:36] <geekosaur> root often has a restricted $PATH

[02:37] <Herby_> Should I need sudo to: zef install HTTP::UserAgent ?

[02:37] <raschipi> Yep, sudo will clean up the environment before running commands.

[02:37] <geekosaur> sudo is usually configured to clean its environment and install a sanitized $PATH by default; see /etc/sudoers and the doucmenttion thereto

[02:37] *** ryn1x joined
[02:38] <raschipi> And it's better to leave it that way. Instead use the complete path to the zef executable.

[02:38] <Herby_> hmmm

[02:39] <geekosaur> and you should only need to sudo if you have rakudo installed in a system directory. be cautious in that case if it got there by a package manager

[02:39] <Herby_> i'm clueless linux rookie... i used checkinstall to install rakudo

[02:40] <raschipi> can you give us the result of `which perl6`?

[02:41] <Herby_> '/home/chrx/rakudo/rakudo-star-2017.07/install/bin//perl6

[02:42] <raschipi> hum, doesn't seem like you'd need to use sudo to install modules

[02:42] <Herby_> when I try:  zef install HTTP::UserAgent

[02:42] *** darkmorph left
[02:42] <Herby_> I get a wordy error, but the gist is "permission denied"

[02:43] <Herby_> Failed to open file /home/chrx/.zef/store/MANIFEST.zef: Permission denied

[02:44] <geekosaur> sounds like you used sudo a previous time and now you have root-owned files under $HOME

[02:44] <Herby_> definitely possible...

[02:45] <raschipi> yeah, I would do `chown -R chrx:chrx /home/chrx/.zef`?

[02:45] <geekosaur> (this might even break zef, I think it assumes something installed under $HOME is guaranteed writable and it can re-precomp or etc.)

[02:45] <geekosaur> or maybe CURLI makes the assumption

[02:45] <geekosaur> the chown needs to be done via sudo though

[02:45] *** perlpilot joined
[02:46] <raschipi> right, you'll need sudo

[02:46] <Herby_> so I should:   sudo chown -R chrx:chrx /home/chrx/.zef

[02:46] <geekosaur> yes

[02:47] <raschipi> have a look at this: https://explainshell.com/explain?cmd=sudo+chown+-R+chrx%3Achrx+%2Fhome%2Fchrx%2F.zef

[02:50] <Herby_> progress. got further in the install then got this: CompUnit::Repository install target is not writeable/installable: /home/chrx/auto

[02:50] <Herby_> Need a valid installation target to continue

[02:50] <geekosaur> same issue, sounds like. but why is zef creating a dir there?

[02:50] <raschipi> you have the same problem on that path probably

[02:54] <raschipi> Anyway, it should be safe to execute the same command in that path: `sudo chown -R chrx:chrx /home/chrx/auto`

[02:55] <Herby_> chown: cannot access '/home/chrx/auto': No such file or directory

[02:55] <raschipi> try `mkdir ~/auto`

[02:56] <geekosaur> now I think something else is wrong

[02:56] <geekosaur> like, I didn't think it should be writing there to begin with. wrong path in zef's CUR somehow?

[02:57] <geekosaur> or maybe it's a bug in the package

[02:57] <geekosaur> I would be rather annoyed if installing a random package started putting stuff in random dirs outside the CUR playground

[02:57] <geekosaur> much as I would be if apt-get dropped something in $HOME (a debian no-no)

[03:02] <Herby_> i think my install is all jacked

[03:02] <Herby_> I was able to install http::useragent

[03:03] <Herby_> but when I run a simple script

[03:03] <Herby_> Could not find HTTP::UserAgent at line 2 in:

[03:03] <Herby_>     /home/chrx/.perl6

[03:03] <Herby_>     /home/chrx/rakudo/rakudo-star-2017.07/install/share/perl6/site

[03:03] <Herby_>     /home/chrx/rakudo/rakudo-star-2017.07/install/share/perl6/vendor

[03:03] <Herby_>     /home/chrx/rakudo/rakudo-star-2017.07/install/share/perl6

[03:03] <Herby_>     CompUnit::Repository::AbsolutePath<77908064>

[03:03] <Herby_>     CompUnit::Repository::NQP<59934952>

[03:03] <Herby_>     CompUnit::Repository::Perl5<59934992>

[03:05] *** evalable6 left
[03:05] *** evalable6 joined
[03:05] *** ChanServ sets mode: +v evalable6

[03:06] *** mcmillhj joined
[03:10] *** ryn1x left
[03:13] <ugexe> its all configurable. https://github.com/ugexe/zef/blob/master/resources/config.json

[03:15] <HoboWithAShotgun> Color::Named - Because colors are people too. Do you think that could be somehow politically incorrect? i'm super bad at judging such things

[03:16] <raschipi> One thing that comes to my mind is that there are people that don't have names.

[03:17] <HoboWithAShotgun> i mean it as a reference to "aliens are people too"

[03:17] <HoboWithAShotgun> meh, better not before somebody calls me racist or something

[03:18] *** Herby_ left
[03:20] *** cpage_ left
[03:20] *** wamba joined
[03:26] *** domm left
[03:26] *** S007 left
[03:27] <geekosaur> its possible. 'colored' was at one point a racial epithet

[03:27] <geekosaur> in the US at least

[03:29] *** ryn1x joined
[03:30] *** mcmillhj left
[03:31] *** MasterDuke left
[03:31] *** raschipi left
[03:32] *** domm joined
[03:32] *** khw left
[03:34] *** ryn1x left
[03:42] *** Cabanossi left
[03:44] *** Cabanossi joined
[03:44] *** cpage_ joined
[03:54] *** pilne left
[03:55] *** mson left
[03:58] *** Morfent joined
[04:04] *** broquaint left
[04:06] *** cdg joined
[04:06] *** raschipi joined
[04:07] *** BenGoldberg left
[04:10] *** cdg left
[04:12] *** broquaint joined
[04:13] *** Cabanossi left
[04:13] *** cognominal left
[04:14] *** Cabanossi joined
[04:31] <AlexDaniel`> .seen azawawi

[04:31] <yoleaux> I saw azawawi 12 Oct 2017 03:47Z in #perl6: <azawawi> https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md   # Seems like the direction Atom is taking with future language integrations (autocomplete, find definitions, warning/error diagnostics, ..etc)

[04:34] *** evalable6 left
[04:34] *** evalable6 joined
[04:37] *** ryn1x joined
[04:38] *** wamba left
[04:38] *** raschipi left
[04:40] *** kyan left
[04:42] *** Cabanossi left
[04:44] *** Cabanossi joined
[04:55] *** ryn1x left
[05:04] *** sena_kun joined
[05:11] *** HoboWithAShotgun left
[05:23] *** ryn1x joined
[05:27] *** ryn1x left
[05:32] *** domidumont joined
[05:33] *** domidumont left
[05:53] *** evalable6 left
[05:53] *** evalable6 joined
[05:59] *** domidumont joined
[06:02] *** domidumont left
[06:02] *** domidumont joined
[06:02] *** ryn1x joined
[06:07] <AlexDaniel`> so Imlib2 is too bitrotten, MagickWand is too incomplete, and Image::PNG::Portable is too slow

[06:10] *** lowbro joined
[06:10] <AlexDaniel`> maybe Image::Magick:from<Perl5> ? Hmm

[06:10] *** lowbro left
[06:10] *** lowbro joined
[06:18] *** patrickz joined
[06:21] *** aborazmeh joined
[06:21] *** aborazmeh left
[06:21] *** aborazmeh joined
[06:28] *** Cabanossi left
[06:29] *** Cabanossi joined
[06:30] *** nadim joined
[06:34] *** ryn1x left
[06:34] *** aborazmeh left
[06:39] *** TEttinger left
[06:41] *** abraxxa joined
[06:45] *** darutoko joined
[06:45] *** mr-foobar joined
[06:46] *** wamba joined
[06:47] *** R0b0t1_ left
[06:48] *** wander joined
[06:49] *** R0b0t1_ joined
[06:51] *** rindolf joined
[06:56] *** cdg joined
[06:58] *** ryn1x joined
[07:02] *** wander left
[07:02] *** ryn1x left
[07:03] *** jonas1 joined
[07:05] *** kerframil left
[07:10] <jonas1> http://test.rg.avisita.com/admin/agenda/

[07:25] *** evalable6 left
[07:25] *** evalable6 joined
[07:27] *** Cabanossi left
[07:29] *** Cabanossi joined
[07:32] *** S007 joined
[07:39] *** wander joined
[07:41] <wander> Can we add a precedence info of proto-regexes?

[07:41] <moritz> wander: are you talking about grammars in general? or the Perl 6 grammar in Rakudo?

[07:42] *** wander_ joined
[07:42] <wander_> rule expression:sym<+> (precedence => 1) { <expression>+ % <sym>}; rule expression:sym<*> (precedence => 0) { <expression>+ % <sym>};

[07:42] <wander_> something like these

[07:43] <moritz> no

[07:43] <wander_>  in Rakudo

[07:43] <moritz> there' no operator precedence parser built into the proto mechanism

[07:44] *** sproctor joined
[07:45] <wander_> since I have several operators to handle, I try to find some method to deal with them in similar form

[07:45] <moritz> a good OPP supports quite some features (precedence, different operator types (infix, prefix, postfix, circumfix), different associativies, including non-associative operators)

[07:45] <moritz> and we haven't found a good way yet to structure the API for one

[07:45] *** wander left
[07:46] <moritz> this is something that could be well experimented with in a module

[07:47] *** thunktone joined
[07:47] <wander_> sadly

[07:57] *** ryn1x joined
[08:01] *** AlexDaniel` left
[08:04] *** sena_kun left
[08:04] *** sena_kun joined
[08:05] *** cdg left
[08:05] *** cdg joined
[08:06] *** cdg left
[08:06] *** cdg joined
[08:11] *** R0b0t1_ left
[08:12] *** [particle] left
[08:14] *** R0b0t1_ joined
[08:16] *** wander_ left
[08:20] *** dakkar_ joined
[08:20] *** dakkar_ left
[08:20] *** dakkar joined
[08:22] *** |oLa|1 joined
[08:24] *** llfourn_ joined
[08:24] *** bonsaikitten joined
[08:25] *** itaylor57_ joined
[08:25] *** TimToady_ joined
[08:25] *** Gothmog__ joined
[08:25] *** El_Che_ joined
[08:25] *** [Coke]_ joined
[08:25] *** jnthn_ joined
[08:25] *** jeek_ joined
[08:25] *** Util_ joined
[08:26] *** broquain1 joined
[08:27] *** timo joined
[08:27] *** timo is now known as Guest2271

[08:27] *** eaterof joined
[08:28] *** john51 left
[08:28] *** |oLa| left
[08:28] *** ribasushi left
[08:28] *** itaylor57 left
[08:28] *** SCHAPiE left
[08:28] *** xiaomiao left
[08:28] *** llfourn left
[08:28] *** eater left
[08:28] *** masak left
[08:28] *** cgfbee left
[08:28] *** broquaint left
[08:28] *** Util left
[08:28] *** timotimo left
[08:28] *** jeek left
[08:28] *** Gothmog_ left
[08:28] *** TimToady left
[08:28] *** mattp_ left
[08:28] *** lucs left
[08:28] *** [Coke] left
[08:28] *** El_Che left
[08:28] *** jnthn left
[08:28] *** masak joined
[08:28] *** ab5tract_ left
[08:28] *** lucs joined
[08:28] *** ab5tract joined
[08:28] *** ribasushi joined
[08:28] *** john51 joined
[08:28] *** Gothmog__ is now known as Gothmog_

[08:28] *** eaterof is now known as eater

[08:28] *** SCHAPiE joined
[08:29] *** masak is now known as Guest31543

[08:29] *** mattp_ joined
[08:29] *** cgfbee joined
[08:31] *** ryn1x left
[08:31] *** evalable6 left
[08:31] *** greppable6 left
[08:31] *** coverable6 left
[08:31] *** squashable6 left
[08:31] *** bloatable6 left
[08:32] *** HoboWithAShotgun joined
[08:32] *** charsbar left
[08:33] *** charsbar joined
[08:39] *** Ulti left
[08:39] *** Ulti joined
[08:42] *** thunktone left
[08:43] *** holyghost left
[08:43] *** robertle joined
[08:43] *** holyghost joined
[08:44] *** thunktone joined
[08:44] *** AlexDaniel` joined
[08:48] *** greppable6 joined
[08:48] *** bloatable6 joined
[08:48] *** coverable6 joined
[08:48] *** evalable6 joined
[08:48] *** ChanServ sets mode: +v coverable6

[08:48] *** ChanServ sets mode: +v evalable6

[08:48] *** squashable6 joined
[08:50] *** wamba left
[08:51] *** cdg left
[08:51] *** cdg joined
[08:52] *** cdg left
[08:52] *** tyilanmenyn joined
[08:52] *** cdg joined
[08:53] *** jnthn_ is now known as jnthn

[08:53] *** tyil left
[08:54] *** coverable6 left
[08:54] *** coverable6 joined
[08:54] *** ChanServ sets mode: +v coverable6

[08:54] *** [particle] joined
[08:55] *** jmarkert joined
[08:57] *** ryn1x joined
[08:57] *** HoboWithAShotgun left
[09:02] *** ryn1x left
[09:04] *** HoboWithAShotgun joined
[09:05] <robertle> in perl6 (as oppsosed to perl5), can I create circular structures and they get garbage collected? or do I need to do some sort of reference weakening?

[09:06] <jnthn> Yeah, circular structures are no problem

[09:06] <jnthn> GC is based on reachability

[09:07] <robertle> cool, thanks!

[09:08] *** steeznson joined
[09:10] *** thunktone left
[09:12] *** thunktone joined
[09:14] *** eliasr joined
[09:21] <Geth> ¬¶ ecosystem: 16a8a777be | (Alexey Melezhik)++ (committed using GitHub Web editor) | META.list

[09:21] <Geth> ¬¶ ecosystem: Move Sparrowdo::RemoteFile to CPAN

[09:21] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/16a8a777be

[09:22] *** thunktone left
[09:22] *** vivus-ignis joined
[09:23] *** thunktone joined
[09:31] <buggable> New CPAN upload: Sparrowdo-RemoteFile-0.0.1.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowdo-RemoteFile-0.0.1.tar.gz

[09:32] <melezhik> buggable

[09:33] <melezhik> sorry, last line has been printed occassionally , never mind it :))

[09:36] *** ryn1x joined
[09:40] *** wamba joined
[09:46] *** enheh left
[09:47] *** rgrau joined
[09:47] <steeznson> what would be a good beginners project for someone interested in learning Perl 6's unique functionality? I've written applications in Java and C# before

[09:47] *** Aaronepower joined
[09:51] *** cdg left
[09:51] *** margeas joined
[09:53] *** domidumont left
[09:59] <ufobat> doing something with grammars?

[10:00] *** Aaronepower left
[10:01] <steeznson> i

[10:02] <ufobat> and i am allways looking for ppl to contribute to Bailador ;)

[10:02] <steeznson> *i'm interested in using unicode co-extensively with functions and exploring rationals

[10:02] <sena_kun> parsing, concurrency, scripting as a good points to start... Basically, I'd better go with a software you want/need, not the one Perl 6 makes(does it?) you to write, I guess.

[10:03] <steeznson> thanks, i'll mull it over. I'm taking more of an academic interest in perl for a grad school project.

[10:06] *** ryn1x left
[10:07] *** vijayanat joined
[10:07] <vijayanat> say hello

[10:08] <sena_kun> m: say "Hello";

[10:08] <camelia> rakudo-moar 2580a0a6f: OUTPUT: ¬´Hello‚ê§¬ª

[10:10] <sena_kun> oh, new hyper/race is merged. \0/ jnthn++

[10:11] *** vijayanat left
[10:11] *** zakharyas joined
[10:13] *** HoboWithAShotgun left
[10:16] *** Aaronepower joined
[10:18] *** Aaronepower left
[10:20] *** wamba left
[10:25] *** Aaronepower joined
[10:31] *** rgrau left
[10:33] *** Aaronepower left
[10:34] *** Aaronepower joined
[10:36] *** astj left
[10:36] *** astj joined
[10:41] *** Cabanossi left
[10:41] *** cdg joined
[10:44] *** Cabanossi joined
[10:44] *** steeznson left
[10:46] *** Aaronepower left
[10:46] *** cdg left
[10:47] *** AlexDaniel` left
[10:49] *** ryn1x joined
[10:49] *** Aaronepower joined
[10:52] *** xinming left
[10:53] *** ryn1x left
[10:53] *** wamba joined
[10:59] *** Aaronepower left
[11:09] *** Aaronepower joined
[11:09] *** Aaronepower left
[11:10] *** Aaronepower joined
[11:18] *** thunktone left
[11:19] *** thunktone joined
[11:20] *** ryn1x joined
[11:22] *** khw joined
[11:22] *** leah2 left
[11:24] *** llfourn_ left
[11:27] *** raschipi joined
[11:37] *** leah2 joined
[11:40] *** tyilanmenyn is now known as tyil

[11:41] *** darkmorph joined
[11:48] *** darkmorph left
[11:53] *** ryn1x left
[12:08] <sproctor> So I've found a YAML parser that doesn't explode when I give it a swagger file. Next up cro include and I've got all I need (I think) to make a CRO swagger plugin. :D

[12:09] <sproctor> (Sorry OpenAPI)

[12:09] *** Aaronepower left
[12:09] <jnthn> Nice

[12:09] <jnthn> sproctor: By "cro include" do you mean the include feature in the router?

[12:09] <sproctor> That's the bunny yes.

[12:09] *** Aaronepower joined
[12:10] <jnthn> Nice timing, I implemneted it last weekend :)

[12:11] <sproctor> Cool. I've been thinking about it for a while. The idea being you should be able to decorate the OpenAPi with OperationId's that match controller methods and the just do an include $plugin->parse_file( "path/to/file" ) 

[12:12] <sproctor> It'll generate all the routes and also validation sub types based on the spec. So you just need to create the controllers... That's my thinking anyway.

[12:12] <sproctor> Similar to the Mojo plugin. 

[12:13] <sproctor> I prefer that way of working to the auto generation thing in most cases. As it means you can update your spec file later and not have to regenerate all your system. Anyway I'll keep an eye on things and play about with this over the weekend.

[12:14] <sproctor> (Note to self. Finish slides for LPW)

[12:15] <DrForr> Ack, I have to finish my abstract :/

[12:15] <yoleaux> 16 Oct 2017 09:39Z <HoboWithAShotgun> DrForr: On the site for Perl6Tidy (https://github.com/drforr/perl6-Perl6-Tidy) you claim it could be installed by zef, but it isn't in the eco system (https://modules.perl6.org/search/?q=tidy).

[12:18] <DrForr> .tell HoboWithAShotgun I'll probably add it over the weekend. I was thinking it should do something less trivial than bracing, but braces are good enough for now, I suppose.

[12:18] <yoleaux> DrForr: I'll pass your message to HoboWithAShotgun.

[12:23] *** ShalokShalom_ joined
[12:25] *** ShalokShalom left
[12:26] *** thunktone left
[12:29] *** Guest31543 is now known as masak

[12:29] *** thunktone joined
[12:30] *** dogbert2 joined
[12:31] *** Aaronepower left
[12:35] *** Aaronepower joined
[12:38] *** Aaronepower left
[12:40] *** Aaronepower joined
[12:42] *** Aaronepower left
[12:43] *** tadzik left
[12:43] *** Aaronepower joined
[12:46] *** releasable6 left
[12:46] *** releasable6 joined
[12:46] *** mr-foobar left
[12:47] *** cgfbee left
[12:48] *** cdg joined
[12:49] *** wamba left
[12:49] *** ryn1x joined
[12:50] *** pilne joined
[12:50] *** mr-foobar joined
[12:51] *** cgfbee joined
[12:52] *** thunktone left
[12:52] *** cdg left
[12:54] *** thunktone joined
[12:55] *** tadzik joined
[12:56] *** wamba joined
[12:57] *** AlexDaniel` joined
[13:02] *** eliasr left
[13:04] *** mcmillhj joined
[13:04] *** eliasr joined
[13:07] *** Mrofnet joined
[13:09] *** mson joined
[13:09] *** Morfent left
[13:12] *** Cabanossi left
[13:14] *** Cabanossi joined
[13:20] *** El_Che_ is now known as El_Che

[13:23] *** ryn1x left
[13:27] *** cdg joined
[13:28] *** jeek_ is now known as jeek

[13:34] *** Guest2271 is now known as timotimo

[13:34] <[Coke]_> (JSON::Fast) did you look at any of the other JSON modules, btw?

[13:35] <timotimo> is there something wrong with JSON::Fast?

[13:35] <timotimo> i'll probably merge the "allow sorting hashes by key" thing soon

[13:37] *** HoboWithAShotgun joined
[13:39] *** mempko joined
[13:42] *** thunktone left
[13:43] *** [Coke]_ is now known as [Coke]

[13:44] *** Cabanossi left
[13:44] *** Cabanossi joined
[13:47] * [Coke] again finds the irc logs needing a verrrry wide display to be read.

[13:48] <jdv79> the web version?  sometimes it doesn't fit.  looks like an html fail.

[13:48] <timotimo> it's pretty bad, yeah

[13:50] <raschipi> What about the raw text version in the colabti.org logs?

[13:51] *** wamba left
[13:54] *** broquain1 left
[13:54] *** broquaint joined
[14:00] *** wamba joined
[14:02] *** zakharyas left
[14:02] *** zakharyas joined
[14:06] *** zakharyas left
[14:11] <buggable> New CPAN upload: Sparrowdo-RemoteFile-0.0.2.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowdo-RemoteFile-0.0.2.tar.gz

[14:13] *** Cabanossi left
[14:14] *** Cabanossi joined
[14:15] <Geth> ¬¶ ecosystem: c2fda9a172 | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[14:15] <Geth> ¬¶ ecosystem: Add Reminders.pm6 to ecosystem

[14:15] <Geth> ¬¶ ecosystem: 

[14:15] <Geth> ¬¶ ecosystem: "Reminders: Class for managing reminders about task and events"

[14:15] <Geth> ¬¶ ecosystem: 

[14:15] <Geth> ¬¶ ecosystem: See: https://github.com/zoffixznet/perl6-Reminders

[14:15] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/c2fda9a172

[14:16] *** cdg left
[14:19] *** HoboWithAShotgun left
[14:19] *** leah2 left
[14:21] *** HoboWithAShotgun joined
[14:26] *** lowbro left
[14:27] *** mcmillhj left
[14:28] *** mcmillhj joined
[14:30] *** leah2 joined
[14:32] *** ryn1x joined
[14:33] *** Aaronepower left
[14:37] *** tomaw_ joined
[14:40] *** Aaronepower joined
[14:41] *** cdg joined
[14:42] *** tomaw_ is now known as tomaw

[14:45] *** epony left
[14:48] <[Coke]> zoffix, testing out a modified update-rakudo that reinstalls all my modules.

[14:48] <[Coke]> (might be too much, may end up with just adding a bunch of installs of the stuff I know I use daily so that experimental stuff isn't resurrected.)

[14:49] *** pilne left
[14:49] <timotimo> you're only reinstalling stuff to get the tests to run again, right?

[14:50] <timotimo> or to get newer versions i guess

[14:51] <[Coke]> reinstalling because my normal upgrade process wipes out all the installed modules.

[14:51] <timotimo> ah ok

[14:55] *** atroxaper joined
[14:59] *** jonas1 left
[15:02] *** simonm joined
[15:04] <[Coke]> is HyperIterable on nom yet, or still in a branch?

[15:04] *** TEttinger joined
[15:06] *** ryn1x left
[15:06] *** simonm left
[15:10] *** patrickz left
[15:12] *** virtualsue joined
[15:13] *** vivus-ignis is now known as ignis__away

[15:14] <timotimo> the hyper work has landed in nom

[15:15] <timotimo> not sure if HyperIterable is an actaul thing

[15:15] *** Kyo91 joined
[15:16] <ilmari> no, that got _deleted_

[15:17] <ilmari> it's HyperSeq now

[15:17] *** Aaronepower left
[15:18] *** Kyo91_ joined
[15:18] <ilmari> (and RaceSeq)

[15:18] *** simonm joined
[15:20] *** Kyo91 left
[15:21] *** simonm left
[15:21] *** mcmillhj left
[15:23] <jnthn> HyperIterable was part of the old internals of the now-discarded hyper/race implementation

[15:23] *** mcmillhj joined
[15:23] <jnthn> Well, the original idea was to make those "internals" API

[15:24] <jnthn> But (a) the design didn't work so well, and (b) the new one seems to work better, but I'd like freedom to change it in the future

[15:24] <[Coke]> HyperIterable is in the docs, failing an example build.

[15:24] <[Coke]> line 150, doc/Type/Any.pod6

[15:24] *** troys joined
[15:25] *** HoboWithAShotgun left
[15:26] <timotimo> ah, because there's a map method on HyperIterable

[15:28] <jnthn> Huh, that sounds confused

[15:30] <[Coke]> https://docs.perl6.org/type/Any#method_map

[15:33] <jnthn> oh, right

[15:33] <jnthn> No, it ain't going to work that way any more

[15:33] <jnthn> The map method is on HyperSeq and RaceSeq now

[15:41] *** dj_goku_ joined
[15:42] *** domidumont joined
[15:43] *** ryn1x joined
[15:43] *** dj_goku left
[15:47] *** wamba left
[15:49] *** ignis__away is now known as vivus-ignis

[15:50] *** sena_kun left
[15:52] *** titsuki joined
[15:57] *** HoboWithAShotgun joined
[15:59] *** dataangel left
[16:00] *** steeznson joined
[16:01] *** robertle left
[16:03] *** vivus-ignis is now known as ignis__away

[16:11] *** troys is now known as troys_

[16:11] *** virtualsue left
[16:12] *** Cabanossi left
[16:15] *** Cabanossi joined
[16:15] *** ryn1x left
[16:16] *** Grimy joined
[16:17] *** xinming joined
[16:18] *** abraxxa left
[16:19] *** virtualsue joined
[16:21] *** Grimy left
[16:24] *** TimToady_ is now known as TimToady

[16:25] *** sproctor left
[16:25] *** TimToady left
[16:25] *** TimToady joined
[16:26] *** atroxaper left
[16:31] *** dakkar left
[16:33] *** robertle joined
[16:41] *** troys_ is now known as troys

[16:42] *** ignis__away is now known as vivus-ignis

[16:42] *** haxmeister joined
[16:42] <haxmeister> https://paste.pound-python.org/show/5qzOIR8EFv00Kj0qtaEg/

[16:48] *** ryn1x joined
[16:49] <timotimo> haxmeister: can you debug PowerShell?

[16:50] <timotimo> in this case powershell syntax

[16:51] <haxmeister> not much of a power user on windows

[16:51] <haxmeister> anything specific I might look at?

[16:52] <timotimo> the thing that's exploding here is the sha256 implementation that uses the powershell so it doesn't have to pull in any dlls or slow perl6 code

[16:52] *** ryn1x left
[16:52] <timotimo> all of this is just for downloading and verifying the dlls we have on the gtk-dlls.p6c.org site

[16:53] <timotimo> you can manually git clone the gtk simple source repository, put the DLLs into the resources/ folder (and check the sha256 signatures manually) and then just throw out the Build.pm file

[16:53] <timotimo> then "zef install ." inside the code directory

[16:53] <haxmeister> kk

[16:54] *** virtualsue left
[16:57] *** steeznson left
[17:02] *** wamba joined
[17:02] *** vivus-ignis is now known as ignis__away

[17:04] <ugexe> zef install . --/build

[17:04] <timotimo> oh i did not know about that

[17:04] <timotimo> nice.

[17:04] <ilmari> --/?

[17:05] <timotimo> maybe i should reach out to the twittersphere and find somebody to fix the sha256 thing

[17:05] <ugexe> false

[17:05] <ugexe> --/ = Bool::False, -- = Bool::True (when applied to a boolean type anyway)

[17:06] *** araujo left
[17:06] <ilmari> what happened to the traditional --foo/--no-foo?

[17:06] <ugexe> personally i don't like that convention, which means writing both params in your &MAIN

[17:07] <ugexe> sub MAIN(Bool:D :$foo, Bool:D, :$no-foo) { } 

[17:07] <ilmari> why couldn't --no-foo set Bool:D :$foo to False?

[17:08] <ugexe> because then MAIN is parsing its params fairly different than other subs

[17:08] <ugexe> what happens if i have an actual :$no-foo for instance

[17:09] *** domidumont left
[17:09] *** kaare__ is now known as kaare_

[17:11] *** steeznson joined
[17:14] <b2gills> --no-foo could be added as an option that you can turn on

[17:15] <ugexe> well sure, but any GetOpt thing could technically be added as an option. 

[17:22] <haxmeister> timotimo: ok I cloned gtk-simple.. now what DLLs do I need to move, and where is this resources folder?

[17:22] <timotimo> you'll find all the URLs in Build.pm

[17:22] *** HoboWithAShotgun left
[17:22] <timotimo> https://github.com/perl6/gtk-simple/blob/master/Build.pm

[17:23] <timotimo> it turns out gtk-simple's Build.pm will try to load libgtk-3-0.dll and if it succeeds won't try to download anything or verify hashes

[17:23] *** margeas left
[17:23] *** virtualsue joined
[17:24] *** margeas joined
[17:33] *** ShalokShalom_ left
[17:33] *** ShalokShalom joined
[17:33] *** ignis__away is now known as vivus-ignis

[17:34] *** darkmorph joined
[17:35] <haxmeister> man that's kind of a nuisance for windows users

[17:38] *** vivus-ignis left
[17:39] *** Actualeyes joined
[17:39] *** ShalokShalom left
[17:39] <nine> Yep, it'll be good when Build.pm is finally gone

[17:41] <timotimo> weird. it looks like all you have to do to get a hash is Get-FileHash /foo/bar -Algorithm SHA256 | select Hash | Format-List

[17:41] <timotimo> why is our code so much longer?

[17:41] <timotimo> function get-sha256 { param($file);[system.bitconverter]::tostring([System.Security.Cryptography.sha256]::create().computehash([system.io.file]::openread((resolve-path $file)))) -replace \"-\",\"\" } 

[17:41] <timotimo> for comparison

[17:42] <timotimo> "this should work all the way back to powershell v1" that's why, of course

[17:43] <timotimo> the ms docs for powershell only have it since 5.1

[17:46] *** mcmillhj left
[17:47] <haxmeister> v1 is an awfully long time ago

[17:47] <timotimo> cool, you can PowerShell.exe -Version 2

[17:47] *** vivus-ignis joined
[17:49] *** domidumont joined
[17:49] <timotimo> i have a powershell version 4.0 here but it has Get-FileHash for some reason

[17:49] <timotimo> oh

[17:50] <timotimo> what the docs page means with "the closest version" is apparently "two versions further away from the closest version"

[17:50] *** patrickz joined
[17:51] <haxmeister> /cygdrive/c/Users/jday/AppData/Local/Temp/libgmodule-2.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libgobject-2.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libgtk-3-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libiconv-2.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libpango-1.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libpangocairo-1.0-0.dll 

[17:51] <haxmeister> /cygdrive/c/Users/jday/AppData/Local/Temp/libpangoft2-1.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libpangowin32-1.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libpixman-1-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libpng15-15.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libxml2-2.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libatk-1.0-0.dll 

[17:51] <haxmeister> /cygdrive/c/Users/jday/AppData/Local/Temp/libcairo-gobject-2.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libffi-6.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libfontconfig-1.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libfreetype-6.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libgdk_pixbuf-2.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libgdk-3-0.dll 

[17:51] <haxmeister> /cygdrive/c/Users/jday/AppData/Local/Temp/libgio-2.0-0.dll /cygdrive/c/Users/jday/AppData/Local/Temp/libglib-2.0-0.dll

[17:51] <haxmeister> oh sorry

[17:51] <haxmeister> have no idea why it did that

[17:51] <haxmeister> windows :/

[17:51] <haxmeister> liblzma-5.dll is missing?

[17:52] *** mcmillhj joined
[17:53] *** vivus-ignis left
[17:54] *** ryn1x joined
[17:54] <patrickz> Hey! I'm currently trying to get buttons on the raspberry pi working using interrupts.

[17:55] <patrickz> Using NativeCall + the wiringPi library doesn't work, because wiringPi spawns a thead and thus causes a MVM panic when the interrupt hits.

[17:56] <patrickz> Has somebody already done interrupt stuff with perl6 and can point into a direction?

[17:56] <timotimo> oh, interrupts? like, posix signals?

[17:56] <patrickz> think so

[17:57] *** HoboWithAShotgun joined
[17:57] <patrickz> if I looked it up correctly wiringPi uses ioctl + poll on a filehandle internally

[17:57] <patrickz> but there is no IO::Handle.poll in p6...

[17:57] <timotimo> an strace would perhaps be enlightening

[17:58] *** ryn1x left
[17:59] <mst> is it not possible to create a callback that can be passed via NCI and transfers back to the MVM thread first?

[18:00] *** vivus-ignis joined
[18:00] <timotimo> we do have something for cross-thread callbacks; at least there's a test that has some of those words in its filename

[18:01] <timotimo> what does this mvm panic look like, patrickz?

[18:01] <haxmeister> timotimo: thanks for the help.. zef completed with no errors.. will try some code here shortly

[18:03] *** virtualsue left
[18:03] <timotimo> maybe all that's needed is to remove the \ in front of the " signs in the hash function?

[18:06] *** konsolebox joined
[18:06] *** Aaronepower joined
[18:09] *** cdg left
[18:09] *** cdg joined
[18:13] *** cdg left
[18:14] *** patrickz left
[18:15] *** ChoHag left
[18:15] *** patrickz joined
[18:16] <patrickz> timotimo: MoarVM panic: native callback ran on thread unknown to MoarVM

[18:17] <timotimo> yes, that makes sense. you might have to use some other ipc mechanism

[18:18] *** vivus-ignis is now known as ignis__away

[18:18] *** cdg joined
[18:19] <patrickz> I thought about replicating the ioctl + poll thing in p6 land.

[18:19] *** darutoko left
[18:21] <patrickz> No idea if those functions are already available in p6. A quick grep on the source only yielded stuff in libuv :-/

[18:23] *** cdg left
[18:23] <patrickz> stuff in libuv/src/unix/poll.c is not called in moarvm. I guess p6 has no native poll support.

[18:24] <mst> patrickz: poll() is just one way to determine if a filehandle is readable

[18:24] <mst> patrickz: libuv has multiple backend implementations to do that, of which poll is one.

[18:25] <raschipi> Probably because they develop to the lcd of linux and windows

[18:25] <mst> patrickz: it would make no sense for moarvm to call that directly

[18:25] <timotimo> shouldn't it be enough to have a thread that read()s in a loop?

[18:25] <steeznson> Sorry to go a little off topic: Could someone briefly elaborate a little on grammars here? Am I correct in thinking they just function as classes of regexes? 

[18:25] <mst> raschipi: poll() is often not the best backend on linux anyway

[18:27] <raschipi> you prefer real time signals?

[18:27] *** cognominal joined
[18:27] <timotimo> grammars are actually just a kind of class, and regexes/tokens/rules in them are just a kind of method

[18:28] <steeznson> @timotimo thanks that clears things up a little

[18:29] <timotimo> being able to derive from and mix into grammars is super useful

[18:30] <patrickz> timotimo: just looked at the strace of my little test script failing with wiringPi. It looks like the C poll() just does read() in a loop :-P

[18:31] <timotimo> well, that's at least easy to replicate in pure perl6 code

[18:31] *** kyan joined
[18:31] <steeznson> great, looking forward to playing with grammars while exploring more of perl's functionality

[18:32] <raschipi> At least now Linux hackers are working on making aio_read() actually non-blocking.

[18:34] *** ryn1x joined
[18:38] *** wander joined
[18:40] <wander> how to write rules to get the precedence expected?

[18:40] <wander> rule mul { | <id> '*' <mul> | <id> '/' <mul> | <id> '%' <mul> | <id> }

[18:40] <wander> I write down this and find multiplicative-expression assoc<right>

[18:41] <wander> while expected is left

[18:41] *** eater left
[18:41] *** eaterof joined
[18:41] *** eaterof is now known as eater

[18:42] *** steeznson left
[18:42] <wander> oh, it has nothing to do with precedence, but associativity

[18:43] *** Cabanossi left
[18:44] *** Cabanossi joined
[18:46] *** eater left
[18:47] *** rgrau joined
[18:48] <tyil> https://travis-ci.org/scriptkitties/perl6-SemVer/jobs/289455352 does anyone know why zef throws these errors?

[18:48] *** eater joined
[18:52] *** ChoHag joined
[18:54] *** ignis__away is now known as vivus-ignis

[18:55] <ugexe> probably because you are using stuff in your depends you should not be using

[18:56] <tyil> I took it from the META6 spec, but thats out of date then

[18:57] <tyil> is there an up to date page with the full META6 spec

[18:57] *** virtualsue joined
[18:58] <tyil> the docs refer to https://design.perl6.org/S22.html#META6.json

[18:58] <tyil> which has the depends that I based that META6.json on

[18:59] <tyil> so I guess according to the docs, zef doesnt support stuff it should be supporting

[19:00] <ugexe> those arent "the docs"

[19:00] <tyil> ttps://docs.perl6.org/language/modules#index-entry-META6.json-META6.json refers to it

[19:00] <tyil> if docs.perl6.org isnt "the docs", what is?

[19:02] <ugexe> what does that url, which is different than the previous url, point at that zef does not support?

[19:02] <tyil> "See the full META specification for more details as well as further options available for use in META6.json files."

[19:02] <tyil> that "full META specification" is the S22.html

[19:03] <tyil> so the docs quite clearly state that S22.html contain the full spec, and the docs.perl6.org page is just a sample

[19:03] <ugexe> well S22.html at the top clearly states its not the spec

[19:03] <tyil> "clearly" in a bit overblown

[19:04] <ugexe> its a bright red header

[19:04] <tyil> since it says on S22.html it "may" be out of date

[19:04] <tyil> and the docs.perl6.org points to the "full META spec", to S22.html

[19:04] <ugexe> "for specs, see the official test suite"

[19:05] <tyil> which is not actually linked it

[19:05] <tyil> to

[19:05] <ugexe> ok, anyways, you know why it doesnt work now.

[19:05] <tyil> regardless, zef and the docs are out of sync, and the error message could certainly get some improvement

[19:05] <ugexe> go for it

[19:06] *** mempko left
[19:06] <tyil> well, I can guess why it doesnt work now, but I still dont have a clear link to the actual spec that zef supposedly supports

[19:06] <ugexe> its supposedly in the code and CUR/rakudo

[19:07] *** ryn1x left
[19:07] *** |oLa|1 left
[19:07] <tyil> if you have a real pointer I'd gladly check it out later today, but I'm getting a strong vibe that you're annoyed that I want better docs and zef to adhere to it

[19:08] <wander> seems Perl 6 grammar use LL() grammar, how to build rules with left-associativity

[19:08] <tyil> so I'll just leave it at "zef and the docs arent in sync", and let it rest for a bit

[19:09] <moritz> or do something about it

[19:09] *** troys is now known as troys_

[19:09] <tyil> moritz: hence I asked for a clear link to the actual spec ;)

[19:09] <tyil> then I can update the docs with the correct link, write it out if I have more time

[19:10] <tyil> "its supposedly here and there" doesn't really help me

[19:10] <tyil> or saying "the docs are wrong", that doesn't really help anyone either

[19:10] <tyil> if he doesn't want to help me find out where the correct info is, I can't help to correct the docs

[19:11] <ugexe> part of your responses are in part to how you framed your questions

[19:11] *** |oLa| joined
[19:11] *** |oLa| left
[19:11] *** |oLa| joined
[19:12] <tyil> and because you seem pretty bent on not providing me with the simple answer to my simple question I wanted to let off some steam on both sides

[19:12] <tyil> because all I get from this is that you're annoyed that I found a possible issue with zef

[19:12] <tyil> and I'm getting annoyed at you evading trying to actually help me

[19:12] *** vivus-ignis left
[19:12] <tyil> and this is helping nobody so far

[19:13] <raschipi> if the answer was easy, it would have been provided to you already

[19:14] <tyil> my question right now is, where can I find the META6.json spec directly

[19:14] <raschipi> https://docs.perl6.org/language/modules#index-entry-META6.json-META6.json

[19:15] <moritz> tyil: there's stuff on docs.perl6.org and in the synopsis

[19:15] <tyil> which refers to the "full spec" which is either incorrect or not cerroctly implemented

[19:15] <moritz> they are out of sync, and out of sync with the implementation

[19:15] <moritz> hence, the need for improvement which you mentioned

[19:15] <tyil> yes, but I cant improve it if nobody wants to link me the full spec

[19:15] <ugexe> again with the framing... maybe not-yet-implemented would have been a better choice

[19:15] <raschipi> There's a note in the spec that says it's known to be incomplete.

[19:15] <samcv> so i think the answer is just to not make sub items inside of depends

[19:15] <samcv> and then zef should be able to handle it?

[19:16] <raschipi> I linked it above for you, that's it, all there is.

[19:16] <moritz> tyil: sure you can, if you want to dig in and find out what's actually going on

[19:16] <ugexe> yes

[19:16] <moritz> this is not waterfall, where a Complete Spec[tm] is written, and everything is derived from it

[19:16] <perlpilot> tyil: what samcv said.

[19:16] <tyil> perlpilot: I know thats the solution, we're past that point for quite a while now

[19:17] <perlpilot> tyil: ah, then update the docs to reflect reality  :-)

[19:18] <tyil> "zef does not support the full META6 spec", I can just add that yes

[19:18] <raschipi> tyil: the docs were written as forward-compatible with the new and improved specification you're planning to write.

[19:18] <raschipi> this way you'll won't have to rewrite the docs after writing the specification.

[19:19] *** domidumont left
[19:19] <ugexe> we dont know if it supports the full meta spec or not. what is in the SPECULATION documents is not neccesarily the spec

[19:20] <tyil> it clearly says "specification" in the link on docs.perl6, not speculation

[19:20] <tyil> idk why you're making such a big deal out of a simple question

[19:21] <ugexe> uh ok

[19:21] <tyil> I'm willing to update the docs on this to avoid confusion, and if there currently is no actual spec to adhere to outside of the sample on docs.perl6.org, thats fine too

[19:22] <raschipi> the word 'specification' on those documentsz is there because history.

[19:23] <raschipi> perl6 actual specifications are written in the form of tests

[19:23] <perlpilot> tyil: that section where it says "META specification" also talks about the "META.info file" too, so it's nicely out of date.

[19:23] <tyil> perlpilot: yes, and it refers back to perl6.org which is also out of date, which just causes confusion

[19:23] <tyil> which is why I want to update it

[19:24] <tyil> but on this particular issue I can't seem to get a clear and straightforward answer

[19:25] <masak> greetings #perl6

[19:25] <raschipi> heya masak 

[19:25] <raschipi> tyil: there's no specification.

[19:25] <masak> I just learned from a Guy Steele talk that the `?` in regexes was probably invented by Alfred Aho back in 1975

[19:27] <moritz> \o masak, long time no see

[19:27] <masak> yeah. I haven't defected or anything, I'm just being "put to good use" at $work :)

[19:28] <moritz> btw, while you were away, I've written two books :-)

[19:28] <Geth> ¬¶ doc: Tyil++ created pull request #1614: Remove link to outdated META6 spec

[19:28] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1614

[19:28] <masak> I noticed! congratulations!

[19:28] <masak> moritz++

[19:28] <moritz> thanks :)

[19:29] <moritz> No. 2 isn't quite published yet

[19:29] <moritz> but the manuscript is submitted, and I keep running into topics that I could have covered

[19:30] <masak> I've *started* on one of my two books, but there's ways to go still

[19:30] <moritz> which one?

[19:31] <masak> the cat theory one

[19:32] <raschipi> about the physical state of cat matter?

[19:32] <raschipi> are cats solid or liquid?

[19:32] <moritz> and if it's too much at once, we'll replace it with more theory or less theory :-)

[19:39] *** evalable6 left
[19:39] *** evalable6 joined
[19:39] *** ChanServ sets mode: +v evalable6

[19:39] *** mson left
[19:42] *** Urchin joined
[19:50] *** kerframil joined
[19:57] *** steeznson joined
[19:58] *** setty1 joined
[20:00] *** leah2 left
[20:04] *** Zoffix joined
[20:06] *** callyalater joined
[20:08] <callyalater> m: my $s = "p" ~ 0x304.chr;

[20:08] <camelia> rakudo-moar 2fba0ba0d: ( no output )

[20:09] *** rindolf left
[20:09] *** cdg joined
[20:10] <callyalater> m: my $s = "p" ~ 0x304.chr; say $s; say $s.samemark("a"); say $s.ords; .say for $s.uninames; say $s.codes; say $s.chars;

[20:10] <camelia> rakudo-moar 2fba0ba0d: OUTPUT: ¬´pÃÑ‚ê§p‚ê§(112 772)‚ê§LATIN SMALL LETTER P‚ê§COMBINING MACRON‚ê§2‚ê§1‚ê§¬ª

[20:10] *** patrickz left
[20:11] <callyalater> m: my $s = "p" ~ 0x304.chr; say $s.uninames;

[20:11] <camelia> rakudo-moar 2fba0ba0d: OUTPUT: ¬´(LATIN SMALL LETTER P COMBINING MACRON)‚ê§¬ª

[20:11] <Zoffix> tyil: the clear and straightforward answer is there's no "official" and complete spec for META contents at the moment. So far we're "winging" it with what zef does and what the slightly outdated speculation you saw documents. Making a concrete spec is listed as "would be good" on 6.d agenda https://github.com/perl6/6.d-prep/blob/master/TODO/README.md#see-if-we-can-nail-down-the-meta6json-spec , but I haven't

[20:11] <Zoffix> seen anyone willing to champion that. There's a separate #perl6-toolchain channel for this stuff. I don't sit in it, but it's possible some of the spec was discussed (logs https://irclog.perlgeek.de/perl6-toolchain/2017-10-18 )

[20:12] <Zoffix> tyil: so for your PR to docs, perhaps it better to clarify it's a work in progress and keep the link rather than removing it

[20:12] <geekosaur> META format still changes every couple weeks, in fact

[20:12] <geekosaur> I'm not sure we're anywhere near the point of having a spec as such

[20:12] <Zoffix> FWIW, it might be best to spec (as roast spec) just the basics, leaving extended stuff as a separate spec

[20:14] *** ryn1x joined
[20:14] <Zoffix> I'm not surprised. In logs I saw a person interested in the spec getting annoyed at vague responses

[20:15] <raschipi> Well, it would help if someone in the chgannel knew the answer.

[20:16] <Zoffix> :)

[20:16] *** cdg_ joined
[20:18] * Zoffix goes back to the dev cave

[20:18] *** Zoffix left
[20:18] *** leah2 joined
[20:20] *** cdg left
[20:29] *** espadrine joined
[20:30] *** mr-foobar left
[20:31] *** pmurias joined
[20:33] <pmurias> if we are going to have a same name multiple authors for a given module which one will be installed when I type 'zef install Foo'?

[20:35] <tyil> ZofBot: thats fine too, but as it stands its only causing confusion, so I want to change that at least

[20:36] *** virtualsue left
[20:36] <tyil> samcv suggested to change the wording to say that there is a bigger target to work towards, but that it currently is not supported by the existing package managers, so one should stick to the sample on the docs.perl6 page

[20:37] <tyil> .tell zoffix thats fine too, but as it stands its only causing confusion, so I want to change that at least (I highlighted it to your bot by accident)

[20:37] <yoleaux> tyil: I'll pass your message to zoffix.

[20:38] *** virtualsue joined
[20:40] *** Urchin left
[20:42] *** wamba left
[20:42] *** Cabanossi left
[20:44] *** Cabanossi joined
[20:48] *** raschipi left
[20:49] *** ryn1x left
[20:50] *** mempko joined
[20:54] *** steeznson left
[20:56] <ugexe> pmurias: whatever the first repo/mirror in the zef config that reports the highest version

[20:59] <ugexe> if you want a specific auth explicity, then be explicit. if an ecosystem allows itself to make the implicit invocation problematic then user/company policy would likely remove them from the config as a source

[21:00] <ugexe> similar to when you say `use Foo` vs `use Foo:auth<bar>`

[21:01] *** virtualsue left
[21:07] *** setty1 left
[21:08] *** mcmillhj left
[21:13] <pmurias> ugexe: so the plan is that the ecosystem will enforce name ownership?

[21:13] <ugexe> that is up to whatevery ecosystems policy

[21:14] <ugexe> its not enforced in the current p6c ecosystem, but its been able to maintain sanity

[21:15] *** ChoHag left
[21:15] <pmurias> all the default zef ones must enforce that eventually

[21:17] <pmurias> otherwise people who type zef install DBIish will install DBIsh:auth<evilbitcoinminer>

[21:19] *** troys_ is now known as troys

[21:19] *** Kyo91_ left
[21:20] <ugexe> it just mirrors in general

[21:23] <ugexe> you can change the default to true/false in the config for what does exists, or with --/p6c --/cpan etc (commands also pulled from config file). so the tooling to do that exists

[21:23] <ugexe> https://github.com/ugexe/zef/blob/master/resources/config.json#L32-L56 

[21:24] *** zakharyas joined
[21:25] *** pmurias left
[21:25] *** rindolf joined
[21:29] *** ChoHag joined
[21:32] *** mcmillhj joined
[21:33] *** callyalater left
[21:42] *** virtualsue joined
[21:44] *** zakharyas left
[21:51] *** mempko left
[21:52] *** ryn1x joined
[21:54] *** mcmillhj left
[21:56] *** mcmillhj joined
[22:01] *** mcmillhj left
[22:06] *** mcmillhj joined
[22:09] *** kyan left
[22:14] *** mcmillhj left
[22:16] *** mcmillhj joined
[22:21] *** mcmillhj left
[22:22] *** rgrau left
[22:22] *** virtualsue left
[22:26] *** ryn1x left
[22:32] *** rindolf left
[22:32] *** mcmillhj joined
[22:33] <HoboWithAShotgun> .tell skaji I hacked on mi6, check out https://github.com/skaji/mi6/pull/28

[22:33] <yoleaux> 12:18Z <DrForr> HoboWithAShotgun: I'll probably add it over the weekend. I was thinking it should do something less trivial than bracing, but braces are good enough for now, I suppose.

[22:33] <yoleaux> HoboWithAShotgun: I'll pass your message to skaji.

[22:37] *** mcmillhj left
[22:42] *** Cabanossi left
[22:43] *** phogg joined
[22:44] *** Cabanossi joined
[22:47] *** ryn1x joined
[22:48] *** mcmillhj joined
[22:51] *** ryn1x left
[23:08] *** espadrine left
[23:11] *** troys is now known as troys_

[23:13] *** |oLa| left
[23:14] *** |oLa| joined
[23:14] *** troys_ is now known as troys

[23:16] *** mcmillhj left
[23:24] *** mcmillhj joined
[23:26] *** |oLa| left
[23:26] *** mempko joined
[23:33] *** ryn1x joined
[23:33] *** mcmillhj left
[23:36] *** Aaronepower left
[23:40] *** Herby_ joined
[23:40] <Herby_> o/

[23:40] <tyil> \s

[23:40] <tyil> \o

[23:40] <tyil> *

[23:40] <Herby_> \o/

[23:41] <Herby_> Anyone know if there is a plan to put a CSV module in with Rakudo Star?

[23:41] <tyil> I dont know of any such plans, but there might be more knowledgable people around

[23:41] *** cdg joined
[23:42] <Herby_> a module for basic CSV reading/writing would definitely be used I think

[23:42] *** hoffentlichja joined
[23:44] *** cdg_ left
[23:45] *** mcmillhj joined
[23:46] *** raschipi joined
[23:46] *** cdg left
[23:49] *** BenGoldberg joined
[23:50] *** mempko left
[23:53] *** mcmillhj left
[23:58] *** Cabanossi left
[23:59] *** Cabanossi joined
