[00:00] *** mcmillhj joined
[00:04] *** mcmillhj left
[00:15] *** benjikun joined
[00:16] <benjikun> Does anyone know to run something when the user tries to quit (ctrl+c)

[00:19] <timotimo> sure

[00:19] <benjikun> How?

[00:20] <timotimo> signal(SIGINT).tap({ say "oh no!"; exit })

[00:20] <benjikun> alright

[00:20] <benjikun> sounds good

[00:20] <benjikun> thank you

[00:20] <timotimo> YW

[00:20] <timotimo> it's a Supply that emits a value every time that signal is received

[00:22] *** SpikeMaster joined
[00:23] *** skids joined
[00:25] <benjikun> I appreciate the quick response, thanks!

[00:31] *** Cabanossi left
[00:34] *** Cabanossi joined
[00:41] *** BenGoldberg joined
[00:41] *** Kyo91 joined
[00:45] *** pharv_ left
[00:46] *** Kyo91 left
[00:47] <benjikun> m: my @things = <1 2 3 4>; @things.splice(0, @things.elems, ());

[00:47] <camelia> rakudo-moar f083cf: ( no output )

[00:47] <benjikun> m: my @things = <1 2 3 4>; @things.splice(0, @things.elems, ()); say @things.perl;

[00:47] <camelia> rakudo-moar f083cf: OUTPUT: «[]␤»

[00:49] <benjikun> What are some other ways for clearing arrays lol

[00:49] <benjikun> setting it to nil?

[00:50] *** pharv joined
[00:56] <benjikun> also for some reason spurt isn't sending anything to the file

[00:56] <benjikun> does the file have to exist beforehand?

[00:56] *** jaldhar joined
[01:02] *** Cabanossi left
[01:04] *** Cabanossi joined
[01:05] *** coetry joined
[01:06] *** coetry___ left
[01:13] *** grondilu left
[01:14] *** Kyo91 joined
[01:15] <jeromelanteri> zengargoyle, yes, thank you

[01:15] <yoleaux> 28 Jul 2017 19:14Z <zengargoyle> jeromelanteri: the Git::Wrapper thing has been solved!  i made pull-request on Git::Wrapper with the fix.

[01:15] <yoleaux> 28 Jul 2017 21:07Z <zengargoyle> jeromelanteri: was it you who wanted TagBar config for perl6?  https://gist.github.com/77f253d6d721e4b6287b8e5321b31e9f

[01:15] <jeromelanteri> yoleaux, thank you to

[01:15] *** benjikun left
[01:17] <HoboWithShotgun> "No such method 'elements' for invocant of type 'Any'", is that perl6s way to tell me something is undefined?

[01:17] *** deep-book-gk_ joined
[01:17] *** skids1 joined
[01:19] *** skids left
[01:19] *** Kyo91 left
[01:19] *** deep-book-gk_ left
[01:19] <jeromelanteri> yoleaux, really ?!! how you do that ? what was the problem ?

[01:21] <jeromelanteri> problem was from Git::Wrapper module or from my code ? and what exactly happened ?

[01:22] *** skids1 left
[01:22] <jeromelanteri> yoleaux, i can not see any pull-request there: https://github.com/perlpilot/p6-Git-Wrapper/pulls

[01:22] <TEttinger> jeromelanteri: yoleaux is a bot that was referring a message to you from zengargoyle

[01:22] <jeromelanteri> TEttinger, OMG !

[01:23] <jeromelanteri> zengargoyle, i can not see any pull request for Git::Wrapper, but anyway, what was the problem ?

[01:23] *** skids joined
[01:24] *** espadrine left
[01:24] *** skids left
[01:26] <zengargoyle> jeromelanteri: the pull-request is on the niqcrocks repo that's used by the ecosystem/zef.

[01:26] <geekosaur> HoboWithShotgun, that is one way, yes

[01:28] <zengargoyle> jeromelanteri: https://github.com/nicqrocks/p6-Git-Wrapper/pull/2

[01:28] <zengargoyle> jeromelanteri: basically one statement needed a 'BEGIN' in front of it. :)

[01:34] <HoboWithShotgun> uh, nice. exception handling? just add a catch to a block. any block. how very perlish :)

[01:37] <HoboWithShotgun> do you guys have a favourited paste service?

[01:39] *** pharv left
[01:40] <zengargoyle> i use github gists because they're git repositories and you can edit them that way if you like.

[01:40] <geekosaur> not really. pastebin.com is kinda not liked much though

[01:40] <zengargoyle> and the Perl 5 application App::Nopaste provides a nice CLI command to create one.

[01:41] <zengargoyle> but App::Nopaste supports various different paste sites.

[01:42] *** skids joined
[01:43] <jeromelanteri> gist github

[01:43] <jeromelanteri> zengargoyle, very good ! thank you

[01:43] <jeromelanteri> zengargoyle, from now, how to profit and update this Git::Wrapper ?

[01:44] <zengargoyle> jeromelanteri: jnthn gave a lot of good hints and the final 'this should work' fix. :)

[01:44] *** someuser left
[01:45] <jeromelanteri> zengargoyle, but i mean... from zef, how to tell him to choose perpilot repo or nicqrock one ?

[01:46] *** ilbot3 left
[01:46] <jeromelanteri> and why by default it choose this one or an other ?

[01:47] <zengargoyle> the modules zef finds automagically are listed in a big file on github.  when an author has a module they want to publish, they make a pull-request to add the github URL to that list.

[01:48] *** Swey_Hey left
[01:48] <zengargoyle> https://github.com/perl6/ecosystem/blob/master/META.list

[01:49] <jeromelanteri> zengargoyle, i do uninstall the perlpilot one and then install from ur of nicqrock. but it failed.

[01:49] <jeromelanteri> from url

[01:49] <zengargoyle> zef also searches CPAN, but that's rather new and not used much yet.

[01:50] <zengargoyle> nicqrock hasn't accepted my pull-request yet....

[01:50] <jeromelanteri> zengargoyle, yes. also it doesn't want to install from this url.

[01:51] <jeromelanteri> zengargoyle, why do you make the choice to pull request this one repo and not the default official one ?

[01:52] *** ilbot3 joined
[01:52] *** ChanServ sets mode: +v ilbot3

[01:52] *** nadim left
[01:52] *** Swey_Hey joined
[01:53] *** Swey_Hey left
[01:54] <zengargoyle> this repo is the one found by zef and listed in that META.list file.... so it's pretty much the official one now.

[01:55] <jeromelanteri> zengargoyle, when i do zef install Git::Wrapper, it does install perlpilot one.

[01:56] <jeromelanteri> zengargoyle, anyway... i do find ~/.perl6/ -name "Wrapper*"

[01:57] <jeromelanteri> there is no Wrapper.pm6 file find . Where should be source files installed from zef ?

[01:58] *** Kyo91 joined
[01:58] <jeromelanteri> nothing in /usr and nothing in /opt

[01:58] <jeromelanteri> i think id do compile things only, doesn't copy sources... correct ?

[02:00] *** coetry left
[02:01] <jeromelanteri> la

[02:02] <zengargoyle> i just pushed a fixed version to my github but can't make zef actually load it via URL.

[02:02] <zengargoyle> you can clone http://github.com/zengargoyle/p6-Git-Wrapper.git

[02:02] *** Kyo91 left
[02:02] *** Cabanossi left
[02:03] <zengargoyle> cd into p6-Git-Wrapper and do `zef install .` 

[02:03] *** ponbiki left
[02:03] <zengargoyle> or just clone the nicqrocks version, add the BEGIN to lib/Git/Wrapper.pm and `zef install .` that way.

[02:04] *** ponbiki joined
[02:04] *** Cabanossi joined
[02:05] <zengargoyle> i'm not sure why when i try `zef install http://github.com/zengargoyle/p6-Git-Wrapper.git` it still installs the old version.

[02:08] <zengargoyle> ah, zef cache.... had to `rm -rf ~/.zef/{tmp,store}/p6-Git-Wrapper.git` before it would actually use my URL.

[02:10] <zengargoyle> if you install and it says :ver('0.0.8') then you have the fixed one.  :ver('0.0.7') is the broken version.

[02:14] *** Kyo91 joined
[02:16] *** mcmillhj joined
[02:17] <jeromelanteri> zengargoyle, ho well.. i had the same idea you had first... i just came back from fit clone and vim the Wrapper.pm file from perlpilot.

[02:19] *** Kyo91 left
[02:19] <zengargoyle> jeromelanteri: i doubt perlpilot's version will every get updated...  i *think* nicqrocks is the new maintainer.

[02:20] <jeromelanteri> ok then i do remove perlpilot and clone nicqrocks

[02:20] <zengargoyle> .ask perlpilot are you still maintaining Git::Wrapper?

[02:20] <yoleaux> zengargoyle: I'll pass your message to perlpilot.

[02:20] *** mcmillhj left
[02:21] <zengargoyle> when i looked, nicqrocks repo had more recent changes.  like a couple months/weeks ago.  perlpilots was like 7 months old.

[02:22] <jeromelanteri> zengargoyle, yeah... but what i need is not the last shiny porsche also... but a strong module who works (i mean... all the time).

[02:23] <zengargoyle> oh, and that .ask is how you get yoleaux to leave a message for somebody.  (or .tell does about the same thing)

[02:23] <jeromelanteri> zengargoyle, alos, it looks like there is no pass tests required for post modules for perl6. 

[02:24] <jeromelanteri> zengargoyle, yes, i see. very good to pass message to a robot.

[02:25] <zengargoyle> http://dpk.io/yoleaux -- more docs for the bot.

[02:26] <jeromelanteri> let's try it...

[02:27] <jeromelanteri> .gc perl6 Git::Wrapper

[02:27] <yoleaux> jeromelanteri: Sorry, that command (.gc) crashed.

[02:27] <jeromelanteri> (crying)

[02:27] *** deep-book-gk_ joined
[02:28] <jeromelanteri> .tr :fr :en mon tailleur est riche

[02:28] <yoleaux> jeromelanteri: Sorry, that command (.tr) crashed.

[02:28] <jeromelanteri> (crying again)

[02:28] *** deep-book-gk_ left
[02:28] <zengargoyle> mostly it's .ask .tell and .u that i've seen people actually use.

[02:28] <jeromelanteri> ok

[02:28] <zengargoyle> .botsnack

[02:28] <synopsebot6> om nom nom

[02:28] <yoleaux> :D

[02:28] <zengargoyle> fand that one.

[02:29] <jeromelanteri> what a wondefull world !

[02:29] <jeromelanteri> wonderfull

[02:29] <jeromelanteri> zengargoyle, well.. thank you for your fix, it works very well.

[02:31] *** coetry joined
[02:32] <zengargoyle> if you're really bored, clone my VimPlugger.git repo... :)  i sorta made your thing into more like a regular set of modules while trying to figure out Git::Wrapper thing.

[02:34] *** SpikeMaster left
[02:35] <zengargoyle> mostly just moving files and making Module::Name longer and tests to check if modules compile or not.  made it a little easer to try things out and see if tests still passed or not.

[02:35] *** Kyo91 joined
[02:36] <zengargoyle> but in the end... it was just Git::Wrapper that was broken so it didn't really matter... :P

[02:36] *** Kyo91 left
[02:43] <jeromelanteri> i done you fix allready and works. that's ok like that.

[02:43] <zengargoyle> cool.

[02:44] <jeromelanteri> yes, i have to merge then and go ahead. my master branch is in front of my Git::Wrapper one. I have to add a comment on my README file. May i talk about your help inside ? you will not become very popular because i am not to... but i have to ask you before to do that.

[02:50] *** coetry left
[02:55] <jaldhar> Hello.  Could someone try installing Algorithm::DawkinsWeasel with zef?  I'm getting a strange error and I want to know if it is just me.

[02:56] *** noganex joined
[02:58] *** garpert joined
[02:59] *** noganex_ left
[03:02] *** Cabanossi left
[03:04] *** coetry_ joined
[03:04] *** Cabanossi joined
[03:05] <ugexe> i sent you a PR already jaldhar 

[03:06] <ugexe> well, i thought i did

[03:07] <ugexe> your source-url is wrong - https://github.com/jaldhar/Algorithm-DawkinsWeasel needs a .git at the end

[03:07] <ugexe> otherwise zef doesn't know to fetch it with git instead of wget

[03:10] <jaldhar> ugexe: oh didn't see that.  Thanks. 

[03:11] <ugexe> zengargoyle: found why that did not seem to update... I had a git fetch where i needed a git pull

[03:11] <jaldhar> ugexe: There's no PR but I presume all I need to do is update META6.json in my repository right?

[03:12] <ugexe> jaldhar: yep thats right

[03:13] <jaldhar> ok doing that...

[03:13] <ugexe> it might take some time to show up in the ecosystem, but i verified that `zef install https://github.com/jaldhar/Algorithm-DawkinsWeasel.git` works

[03:14] <jaldhar> ugexe: one thing though, the error message was rather misleading.  I thought zef couldn't find unzip or something.

[03:17] <zengargoyle> ugexe: cool, thanks.

[03:19] <zengargoyle> jeromelanteri: you can mention if you want, no problem... or just mention the fine folks on #perl6 :)

[03:19] <ugexe> jaldhar: because zef cant just guess

[03:19] <ugexe> what that url downloaded might be valid to some other plugin

[03:30] *** Cabanossi left
[03:32] *** Todd_ joined
[03:32] *** grondilu joined
[03:33] *** Cabanossi joined
[03:33] <Todd_> Hi.  I am trying to turn "123.456.789" into "123456".  My match is `$NewRev =~ m/\.(.*?)\.(.*?)\.(*.)/;` which string an unknown "." verb error.  What am I doing wrong?

[03:33] <grondilu> m: say grammar { rule TOP { <digit> | <TOP> <digit> }.parse: "01234";

[03:33] <camelia> rakudo-moar f083cf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3digit> | <TOP> <digit> }.parse: "01234";7⏏5<EOL>␤»

[03:33] <grondilu> m: say grammar { rule TOP { <digit> | <TOP> <digit> } }.parse: "01234";

[03:33] <camelia> rakudo-moar f083cf: OUTPUT: «(timeout)»

[03:34] <grondilu> *

[03:34] <Todd_> I don't understand

[03:34] <ugexe> =~ is perl5

[03:34] <Todd_> oh poop.  Wrong group.  Sorry

[03:35] *** Todd_ left
[03:35] * geekosaur just spotted the actual error

[03:36] *** coetry_ left
[03:38] *** coetry_ joined
[03:45] <HoboWithShotgun> allright, i am shelling out to curl and have a strange bug

[03:46] <HoboWithShotgun> i think there might be a bug in the shell command

[03:46] <HoboWithShotgun> see https://gist.github.com/holli-holzer/1a04256e9c536081f5c096df2a87184d

[03:48] *** coetry___ joined
[03:48] *** coetry_ left
[03:51] <jeromelanteri> zengargoyle, done ! thank you dude

[03:52] *** HoboWithShotgun is now known as HoboWithShotgunA

[03:52] *** HoboWithShotgunA is now known as HoboWithShtgnAFK

[03:52] * geekosaur wonders which "system shell" is being used there

[03:53] * HoboWithShtgnAFK wonders if the D:> isn't clue enough?

[03:53] <geekosaur> that is the thing yiouy are typing to, which may not be what perl 6 is using

[03:54] <geekosaur> unix has $SHELL, windows does not have such convention

[03:54] <HoboWithShtgnAFK> well i have cygwin installed

[03:56] <geekosaur> it looks windows specific since it works here

[03:56] <geekosaur> windows command line parsing is ... an adventure. :/

[03:57] <HoboWithShtgnAFK> i changed it to single quotes. the error message then indicates perl6 is indeed using the native shell

[03:59] *** garpert left
[03:59] *** coetry___ left
[03:59] <geekosaur> ...the thing about windows is that quote handling is deferred to the application normally (i.e. with cmd, or powershell). if the curl you are using is from cygwin or msys2 then it may be assuming a shell is doing some of the quote processing

[04:00] <geekosaur> er, a unix-like shell

[04:00] *** coetry_ joined
[04:00] <geekosaur> and some executables for windows try to be "clever" and figure out which to do... which is unreliable at best.

[04:01] <geekosaur> (that can lead to some real head-scratching errors, especially if you use the other kind of cmd.exe quote (^ which is sort-of like Unix's \ escape but not quite the same)

[04:01] <HoboWithShtgnAFK> apparantly "shell" escaped the double quotes 

[04:02] <geekosaur> that might be worth reporting as a rakudobug

[04:03] <geekosaur> buggable, rakudobug

[04:03] <geekosaur> bleh

[04:03] <geekosaur> huggable, rakudobug

[04:03] <huggable> geekosaur, Report bugs by emailing to [email@hidden.address]
[04:03] <geekosaur> thought it had more detail than that..

[04:03] <HoboWithShtgnAFK> when i say shell qq[echo "foo"];

[04:03] <HoboWithShtgnAFK> the output is \"foo"

[04:03] <HoboWithShtgnAFK> that is definitly not correct

[04:04] <HoboWithShtgnAFK> whatever behaviour it should either be foo or "foo"

[04:05] <HoboWithShtgnAFK> or \"foo\"

[04:06] <HoboWithShtgnAFK> unless my 4am mind is completely off

[04:08] <geekosaur> your analysis sounds correct to me. definitely file a rakudobug.

[04:08] <geekosaur> (unless your rakudo is several months old; try "perl6 -v"(

[04:09] <HoboWithShtgnAFK> 2017.07

[04:09] *** aborazmeh joined
[04:09] *** aborazmeh left
[04:09] *** aborazmeh joined
[04:09] <geekosaur> yes, file rakudobug.

[04:09] <HoboWithShtgnAFK> allright, will do

[04:09] <HoboWithShtgnAFK> tx for your input

[04:13] *** xinming joined
[04:15] *** coetry_ left
[04:16] *** coetry_ joined
[04:17] *** xinming_ left
[04:18] *** pharv joined
[04:18] *** aborazmeh left
[04:31] *** Cabanossi left
[04:33] *** Cabanossi joined
[04:34] *** wamba left
[04:36] <pharv> is anyone here a core contributor to the web app framework Bailador?

[04:37] *** xtreak joined
[04:43] <PerlJam> pharv: why?

[04:46] <pharv> well, i'm looking for a project to contribute to, but i've heard some people express some concerns about some of the design decisions, so i was just gonna ask about the strategy

[04:48] <pharv> it doesn't have to be a framework, it's just the type of development i'm most familiar with, so i figured i could help out with something like that... i just want to work on something that's well-designed and has some momentum

[04:48] <PerlJam> pharv: the right people to ask about Bailador design are probably ufobat and szabgab.  I've contributed some code as I was thinking of using it, but I haven't looked at the design in detail yet.

[04:49] <pharv> i've also heard about PW6, but it looks like it's still in design phase

[04:50] <pharv> ok... i haven't used it yet, but it looks like Web::App::MVC got abandoned a few months ago... and PW6 is still in design phase

[04:51] <pharv> if Bailador is the only game in town, i'll help out, i just wanted to explore a few options first

[04:52] <PerlJam> pharv: also, for Bailador stuff, it's probably best to get on the slack team for it and chat there.

[04:52] <PerlJam> pharv: I don't think it's the only game, but it does have some momentum.

[04:52] *** skids left
[04:52] <PerlJam> and szabgab *is* writing a book about it supposedly, so there's some incentive there for him to keep working on it  :)

[04:53] <pharv> ahh

[04:53] <pharv> you said you considered using it... what did you end up using instead?

[04:54] <PerlJam> I haven't used anything instead.  I'm trying to find a way to use Perl6 at work and a small, stand alone web app might just do the trick.

[04:54] <pharv> ahh, cool... what languages do you currently use at work?

[04:55] <PerlJam> Mostly Perl 5 and JS

[04:55] <pharv> do you use Moose?

[04:55] <PerlJam> well ... the Ext flavor of JS anyway

[04:55] <PerlJam> yes, we use Moose/Moo

[04:55] <pharv> hah, that's funny... perl5/extjs was my first job at verizon wireless :)

[04:57] <PerlJam> We've also been using Moops, but we keep running into problems with weird stuff happening that's hard to debug, so whenever that happens the standard response is to use Moo + Function::Paramters + Type::Tiny    (you can guess why I want Perl 6 instead :)

[04:57] <pharv> lol, yeah

[04:57] <pharv> although when i did perl/extjs, i spent about 90% of my time debugging extjs

[04:58] <pharv> hopefully it's made some progress in the last 5 years

[04:59] *** zengargoyle left
[04:59] <PerlJam> luckily we've got some really talented front-end guys who take care keeping us up-to-date wrt extjs and they handle any debugging  (they've found probably 3 or 4 extjs bugs in the last year and if extjs hasn't fixed them, they've devised work-arounds)

[04:59] <pharv> oh, that's awesome

[05:00] <pharv> yeah, extjs scared me away from front-end development, but i've actually started to enjoy it recently with angular2

[05:00] <PerlJam> what's funny for me is that I first used extjs back in 2007ish and it's definitely come a long way since then  ;)

[05:00] *** Ben_Goldberg joined
[05:00] *** BenGoldberg left
[05:00] *** Ben_Goldberg is now known as BenGoldberg

[05:00] *** zengargoyle joined
[05:01] <pharv> wow, i can't even imagine what it was like back then

[05:03] <pharv> it probably wasn't that bad, it was just a little overwhelming for me as my first job, and the version we were using wasn't very well documented at the time... i think it was 4.5 or so

[05:05] *** zengargoyle left
[05:13] *** coetry_ left
[05:15] *** zengargoyle joined
[05:16] <zengargoyle> .botsnack

[05:16] <synopsebot6> om nom nom

[05:16] <yoleaux> :D

[05:38] *** Ben_Goldberg joined
[05:39] *** BenGoldberg left
[05:39] *** Ben_Goldberg is now known as BenGoldberg

[05:41] *** shmibs left
[05:42] *** shmibs joined
[05:42] *** grondilu left
[05:43] *** grondilu joined
[05:43] *** khw left
[05:44] *** shmibs left
[05:45] *** BenGoldberg left
[05:45] *** shmibs joined
[05:47] *** BenGoldberg joined
[05:47] *** HoboWithShtgnAFK left
[05:47] *** zoll left
[05:56] *** xtreak left
[05:58] *** xtreak joined
[05:59] *** kyan left
[06:03] *** pilne left
[06:11] *** pharv left
[06:14] *** abraxxa joined
[06:25] *** abraxxa left
[06:30] *** xtreak left
[06:38] *** xtreak joined
[06:42] *** robertle joined
[06:47] *** jaldhar left
[06:53] *** statisfiable6 left
[06:54] *** statisfiable6 joined
[06:54] *** ChanServ sets mode: +v statisfiable6

[06:58] *** BenGoldberg left
[07:01] *** Cabanossi left
[07:03] *** Cabanossi joined
[07:11] *** andrzejku joined
[07:22] *** parv joined
[07:26] *** rindolf joined
[07:39] *** mr-foobar joined
[07:40] *** Skarsnik joined
[07:45] *** nadim joined
[07:48] *** darutoko joined
[08:00] *** Cabanossi left
[08:01] <jeromelanteri> i get an array, how to show the last entry of the array ?

[08:02] <jeromelanteri> my @array = <a b c d e f>; say @array.last;

[08:02] *** Cabanossi joined
[08:03] <jeromelanteri> @array[-1] (not works to)

[08:03] *** wamba joined
[08:04] <jeromelanteri> @array.pop works, but remove the last one...

[08:04] <Skarsnik> .tail(1)

[08:05] <Skarsnik> m: my @a = 1..5; say @a.tail(1);

[08:05] <camelia> rakudo-moar f083cf: OUTPUT: «(5)␤»

[08:06] <jeromelanteri> Skarsnik, thank you

[08:07] <parv> m: my @x = (1,3); say @x.tail(0)

[08:07] <camelia> rakudo-moar f083cf: OUTPUT: «()␤»

[08:07] <parv> m: my @x = (1,3); say @x.tail(2)

[08:07] <camelia> rakudo-moar f083cf: OUTPUT: «(1 3)␤»

[08:07] <parv> m: my @x = (1,3); say @x.tail(1)

[08:07] <camelia> rakudo-moar f083cf: OUTPUT: «(3)␤»

[08:07] <parv> m: my @x = (1,3,4,5); say @x.tail(2)

[08:07] <camelia> rakudo-moar f083cf: OUTPUT: «(4 5)␤»

[08:07] <parv> m: my @x = (1,3,4,5); say @x.tail(3)

[08:07] <camelia> rakudo-moar f083cf: OUTPUT: «(3 4 5)␤»

[08:08] <Skarsnik> m: my @a = 1..5; say @a.tail;

[08:08] <camelia> rakudo-moar f083cf: OUTPUT: «5␤»

[08:08] *** andrzejku left
[08:08] <jeromelanteri> perfect

[08:09] <parv> .tail is not really a substitute for -ve indexing as cannot get only the last i-th element

[08:09] <zengargoyle> m: my @f = < 1 2 3 4 >; say @f[*];

[08:09] <camelia> rakudo-moar f083cf: OUTPUT: «(1 2 3 4)␤»

[08:09] <zengargoyle> m: my @f = < 1 2 3 4 >; say @f[*-1];

[08:09] <camelia> rakudo-moar f083cf: OUTPUT: «4␤»

[08:10] <zengargoyle> m: my @f = < 1 2 3 4 >; say @f[2..*];

[08:10] <camelia> rakudo-moar f083cf: OUTPUT: «(3 4)␤»

[08:10] <zengargoyle> m: my @f = < 1 2 3 4 >; say @f[2..*-1];

[08:10] <camelia> rakudo-moar f083cf: OUTPUT: «(3 4)␤»

[08:10] <jeromelanteri> well... which one make working proc the less ?

[08:10] <jeromelanteri> indexing i think ?

[08:11] *** andrzejku joined
[08:11] <zengargoyle> not sure.  indexing was first.  .tail is more recent and probably just indexing underneath.

[08:12] <jeromelanteri> so maybe the same

[08:12] <jeromelanteri> ok one or the other should make the job i need thank you

[08:12] <zengargoyle> yeah, with compile wizardry.

[08:12] *** wamba left
[08:13] *** wamba joined
[08:14] <jeromelanteri> there is something more i not understand with my code... i do ask an entry from prompt (Prompt:Gruff::Export), and put it in a variable. Well..; that works, but when i ask to change it, it said that it can not assign to an immutable value.

[08:15] <jeromelanteri> why immutable value ?

[08:15] <zengargoyle> ouch, complicated. :)  Array and List and Seq are all almost same thing... method tail (Array:D: $n) {} is complicated...

[08:16] <jeromelanteri> this variable is passed in argument to other sub functions... from there a problem happen. is it because this variable can not be change if pass by argument to an ther function ? do it need to be a referenced variable instead ?

[08:16] <parv> jeromelanteri, probably using binding instead of assignment  $x := 4 instead of $x = 4

[08:16] <jeromelanteri> parv, i'm going to try

[08:17] <zengargoyle> sub whatever (Str $value is copy) { }   or $value is rw  -- arguments to functions are read-only by default.

[08:18] *** andrzejku left
[08:18] <zengargoyle> is copy makes it so you can write to it.  is rw makes it like reference where you change the thing in the calling place.

[08:18] <jeromelanteri> zengargoyle, may i use ref instead of copy ? like \$value ?

[08:18] <jeromelanteri> is rw then...

[08:18] <zengargoyle> don't thing so.

[08:19] <zengargoyle> maybe you can use \value (no $) not sure.  usually is copy or is rw.

[08:20] <jeromelanteri> := instead works... let's try to define as "is rw"...

[08:21] <jeromelanteri> works to !

[08:22] <jeromelanteri> ok, i think define well as "is rw" seems to be more readable code for me.

[08:22] <zengargoyle> jeromelanteri: did you do perl 5 before?

[08:23] <jeromelanteri> long time ago one year, then nothing perl for 10 years, and a little bit two weeks ago... prefer perl6 from far now.

[08:24] *** mr-foobar left
[08:24] *** [particle]1 left
[08:25] *** [particle] joined
[08:25] <zengargoyle> cool, i did perl5 for many years and can sometimes explain in perl5 but that probably will not help much.

[08:26] <jeromelanteri> i was very happy with perl5, but see python and ruby (ruby very funny). then use C++ and very happy by powerfull and precision of C++. Now perl6 looks like a real powerfull OO language.

[08:27] <parv> jeromelanteri, tried julia?

[08:27] <jeromelanteri> use it for fun and want to make own script

[08:27] <jeromelanteri> never try julia

[08:28] <jeromelanteri> want to have a look with haskell and framework yesod soon... python with django (a little bit tired with Rails). See some Go code looks funny to. But never heard about julia.

[08:28] <zengargoyle> i waited patiently a long time for perl6 and still here... it is cool.

[08:29] <jeromelanteri> yes, it can be very nice code reading, very clear i think. But need a learning curve first like all langages (much more when need to be precise).

[08:30] <jeromelanteri> i look at some module source codes... some of them looks like people coding C lanugage before... not to much use the power of OO.

[08:31] <parv> julia, haskell, clojure in context of fortran: https://arstechnica.com/science/2014/05/scientific-computings-future-can-any-coding-language-top-a-1950s-behemoth/  -- short introduction on page 2

[08:31] <jeromelanteri> i see also that ther eis an OS construct from haskell...

[08:31] <jeromelanteri> nixOS

[08:31] <jeromelanteri> strange langages also should be prolog (old)

[08:32] <zengargoyle> rosetta code might be a good place to look.  same problems in many languages.  usually perl6 version is by somebody good.

[08:33] <jeromelanteri> what seems to be very well is the way you can do with perl6 by different options coding.

[08:33] <R0b0t1> I looked at Perl 6 maybe two years ago

[08:33] <R0b0t1> The last two years have made it far more usable

[08:33] <R0b0t1> You might want to look at Scala

[08:33] <R0b0t1> sorry to interject

[08:33] <jeromelanteri> nop

[08:34] *** [particle] left
[08:34] <R0b0t1> Elixir also has a nice web framework

[08:34] <zengargoyle> TIMTOWTDI -- There Is More Than One Way To Do It.  almost the meaning of perl 5/6

[08:34] <jeromelanteri> scala, julia cclojure... well... lot of information to find. Ok, then i will.

[08:35] <R0b0t1> Erlang, the language Elixir is based on, has some very novel features that found their way into Perl 6. Mainly to do with scheduling I think

[08:36] <jeromelanteri> actually, i use Rails for web framework... i'm not to much happy by Rails. ery slow, eat lot of ressources... i thinking about yesod/haskell because of compiling code ability (then more quick).

[08:36] <R0b0t1> jeromelanteri, I actually just had a conversation about this elsewhere

[08:36] * zengargoyle thinks perl6 became reasonable with moar replacing parrot.  became fast enough to play with.

[08:36] *** mr-foobar joined
[08:36] *** [particle] joined
[08:36] <R0b0t1> I think it is very good you are already looking at Haskell

[08:36] <jeromelanteri> What is Erlang need for running ? does it need a kind of engine in background ?

[08:36] <R0b0t1> Knowing what type theory is and how it works makes one capable of reasoning about whether a language is good or not

[08:36] <zengargoyle> heh, erlang....

[08:37] *** grumble left
[08:37] <R0b0t1> Yeah, Erlang runs on BEAM which is a VM implemented by Ericsson

[08:37] <jeromelanteri> R0b0t1, yes, i looking at this... but my levele is very poor... need more time. I'm actually very happy with C++, but i'm searching an other one langage to stay with.

[08:37] <R0b0t1> It has a very lightweird process type

[08:37] *** grumble joined
[08:37] <R0b0t1> lightweight*

[08:37] <jeromelanteri> R0b0t1, i thinking that the best is by far to be compiled.

[08:38] <zengargoyle> erlang was created by telephone people to run telephone switches.  mostly rock-solid and failure proof.  prolog heritage.

[08:38] <jeromelanteri> ho well...

[08:38] <jeromelanteri> what about julia ?

[08:39] <R0b0t1> Meh

[08:39] <zengargoyle> it's good for what it does.  i've had erlang jabber (xMPP) servers that run for *years* without anything bad happening.

[08:39] <R0b0t1> The webpage of any of these languages would have you believe they nearly cure cancer

[08:39] <R0b0t1> That is why I think it is important to have a wide breadth of field and know about functional languages, logical languages, etc

[08:40] <R0b0t1> So you can tell if anything is actually good

[08:40] <jeromelanteri> what is this expression: "cure cancer" mean ? (i'm not english)

[08:40] <R0b0t1> Perl 6 lets you experiment with almost anything

[08:40] <zengargoyle> and if you're careful, you can hot-swap code while server is running.  and it is built around multiple nodes so is distributed from the start.

[08:41] <jeromelanteri> I want to stay use perl6 for playing and kind of little script jobs on computers... nt more.

[08:41] <R0b0t1> jeromelanteri: A very hard to cure classification of diseases that are usually fatal. I mean that the webpages talk up their respective language a bit much

[08:41] <zengargoyle> cancer is disease that kills.  the cure is always 10 years in the future.

[08:41] <R0b0t1> zengargoyle: That is the part I have never actually seen duplicated - the hotswapping

[08:42] <zengargoyle> cure for cancer is like cure for common cold or fusion reactors.

[08:42] <R0b0t1> Or a language that actually does what I need it to do

[08:43] <jeromelanteri> actually i paid for a little server on Vultr... then i would like to make things going quicker with no more VM need languages (like Rails or some other). Yesod should be the one, but maybe you know some other ?

[08:44] <zengargoyle> R0b0t1: i want slangs and every language at once.  this sub does postscript because it returns an image, this sub is in forth because it has a nice stack solution, this sub is in APL because it's math-magic...

[08:44] <jeromelanteri> also, each time you want to update rails is a big big story... 

[08:45] <parv> perl6 needs VM in form of moar-vm (or a different one)

[08:45] *** xtreak left
[08:47] <jeromelanteri> i see

[08:48] <jeromelanteri> i will not use this for a kind of web site because of that.

[08:48] * zengargoyle thinks forth is the ultimate no-vm.  it's basically dynamic super macro assembler.

[08:48] <jeromelanteri> forth... added to my searching to do list

[08:50] <zengargoyle> jeromelanteri: nah, it's old and mostly used for embedded things.  it was just one of my first languages *long* time ago.

[08:51] *** wamba left
[08:51] <parv> zengargoyle, what you (or anybody else) have to say about lua? (i looked at some beginner level code once or twice)

[08:52] <zengargoyle> i don't like lua's "array indexes start at 1 not 0" thing. :)

[08:52] <jeromelanteri> zengargoyle, well... you should like to look at micro-controller books. hobby like PIC micro-controllers... but very powerfull

[08:52] <Skarsnik> it's only good to embed in other stuff

[08:52] <jeromelanteri> i see lua can works fine, but difficult to read.

[08:53] <jeromelanteri> have to learn and use this a little for conky application

[08:53] <jeromelanteri> i think blender use it also ?

[08:53] <zengargoyle> yeah, lua never made me happy....  sorta like javascript.  the idea is good, the reality is a bit yuck.

[08:54] <jeromelanteri> zengargoyle, you will not like nodes.js then... :)

[08:55] <zengargoyle> it is like different javascript.  simple idea of object and slots and simplicity that sounds good like lisp but does not quite hit the right balance for me.

[08:56] <zengargoyle> jeromelanteri: yeah, i don't like javascript or node.js, pretty much avoid them as much as possible.

[08:56] <jeromelanteri> nothing can be bad more than VBA and OpenOffice Basic language

[08:57] <jeromelanteri> zengargoyle, i use coffeescript up to javascript code (more easy to read/write.. and then... ho no... not to debug... same)

[08:57] <zengargoyle> well.... AMIGA Basic or TRS-80 Basic are arguably worse than VB :)

[08:58] <jeromelanteri> i start learn my first langage with Basic on Commodor 64 ! then C.

[08:58] <zengargoyle> or hell, Apple integer BASIC for that matter.  no floating point!!!!

[08:59] <jeromelanteri> but you know... you can run long time, if you have little legs... you will never run quick. Same for the brain as i see. Never mind, i have not a big brain, then i will learn humility.

[08:59] <parv> speaking of Apple, how is people's experience with Swift?

[09:00] <zengargoyle> we could go back to HP calculators but.... 

[09:00] <jeromelanteri> HP langage was very funny. You like asm, you like HP

[09:01] <parv> zengargoyle, hey I wrote TI-82 program for complex numbers & polar coords. HP was too expensive for me then.

[09:01] <zengargoyle> haven't tried swift, but the talk i watched was intersting enough.

[09:01] *** GhostK joined
[09:01] <jeromelanteri> does Swift a kind of GUI ?

[09:01] <GhostK> hi ( tese msg

[09:01] <GhostK> *test

[09:02] <GhostK> oops not social ch. sry 

[09:02] <zengargoyle> parv: i played with my dads calculator....  there was acutally a lunar-lander game you could type in and try to land on the moon.

[09:03] <jeromelanteri> It was the first NASA propaganda maybe ?

[09:03] <parv> zengargoyle, which HP calculator was it, do you remember?

[09:03] <jeromelanteri> SX48

[09:04] <zengargoyle> it was in the 70's.  plastic, wedge like, LED display and slide switch for power....  and had a holster.

[09:04] <jeromelanteri> then older than SX48

[09:05] <zengargoyle> around the same time was the TI that had the magnetic strips for programs....

[09:05] <eater> zengargoyle: are you sure about LEDs?

[09:05] <zengargoyle> eater: well i mean the red segmented display that all caculators had at the time.

[09:06] <jeromelanteri> 7 segment LED or LCD 16 segment / chars

[09:06] *** xtreak joined
[09:06] <parv> zengargoyle, ok that before TI-{79 .. 83} era. I was thinking of graphical calculators c.1995

[09:06] <eater> yeah, leds were invented physically in '62

[09:07] <eater> https://web.archive.org/web/20070809062214/http://www.technology.gov/Medal/2002/bios/Holonyak_Craford_Dupuis.pdf

[09:07] <eater> hehe

[09:08] <jeromelanteri> in the 80's, mac was very strong, very different, big/good quality (but can not have one at home... to exepensive). proc was Motorola.

[09:11] <stmuk> the first program I typed in (70s) into a (6502 based) KIM-1 was "Lunar Lander" I remembered it displayed SAFE on its LEDs

[09:11] <zengargoyle> i have a piece of cable that (oral history) is from a Univac, it's about 1 inch diameter and has many bundles shielded wires inside.  about 2 feet long.  my grandfather kept it in his truck to hit people with. :P

[09:12] <stmuk> my dad borrowed the KIM-1 from work

[09:12] <zengargoyle> they hired women to solder the cables to PC boards (-ish) because they had good eyesight from sewing....

[09:13] <eater> yea

[09:13] <eater> the first programmers where females

[09:14] <eater> how did it shift so badly tho

[09:14] <zengargoyle> i'd love to actually identify the cable some day....  i think it's probably some telephone trunk cable.  but it is really old...

[09:15] <jeromelanteri> telephones cables are mono-brin and they are rotated in the cable. 

[09:15] <zengargoyle> eater: do you want to know?  i ask this of all my victims. :P

[09:16] <jeromelanteri> they are twisted for the background sound level to be down.

[09:17] <zengargoyle> jeromelanteri: don't know what that means... they look like stranded core, insulator, stranded sheild, outer insulator, and there are dozens or more of them in a rubber/plastic outer shell that's about 2mm thick.

[09:17] <jeromelanteri> we actually use some old and new technology mixed for the deep water ROV materials. Due to the problem of data transmissions and energy fr

[09:18] <jeromelanteri> for make running hrdolic pump, make going camera view, and send commands.

[09:19] <jeromelanteri> zengargoyle, they use different normal tecnologies depend of the utility of the cables.. that can be different for analogic sound or for data (depend of frequencies also) and for energy.

[09:19] *** parv left
[09:20] <zengargoyle> it's heavy but flexible and if you smacked somebody with it it would hurt bad.

[09:20] <jeromelanteri> energy can be very specific due to how many current need to go inside...

[09:20] <zengargoyle> why not fiber?

[09:21] *** parv joined
[09:21] <jeromelanteri> fiber can not share electric energy. We use fiber for camera (3 cables with 6 pairs each... need to have spare ready to run without delay

[09:21] <zengargoyle> ah, of course.

[09:21] <jeromelanteri> fibers are also very fragil

[09:22] <jeromelanteri> and repair need between one and two hours to go

[09:22] <jeromelanteri> i'm talkign about big ROV (3T5 weight)

[09:23] <zengargoyle> the ROV and deep sea stuff i have seen is all about high data transfer and research networking.

[09:23] <jeromelanteri> who go about 2500 meter deep

[09:23] <zengargoyle> well maybe not *deep* sea.

[09:23] <eater> zengargoyle: are you the reason?

[09:24] <jeromelanteri> i do work for inspection in african area sub sea. Inpections of pipes and TLP for oil and gaz industry

[09:24] <TEttinger> TLP?

[09:24] <jeromelanteri> Is a kind of plateform

[09:24] <zengargoyle> sweet.  i worked for .edu in research networking.

[09:25] <jeromelanteri> hey... do you guys used allready coding with Gst lib ?

[09:26] <jeromelanteri> i'm trying to do something with that... but very difficult for me.

[09:27] <jeromelanteri> https://bitbucket.org/jerome___/gst_video_testeur

[09:27] <zengargoyle> eater: math wise, women are better at calculation then men statistically wise.

[09:27] <jeromelanteri> i have to go again on this project.

[09:29] <zengargoyle> eater: it's a big-ish discussion in the reasons for lack of diversity in STEM fields.

[09:30] *** Swey_Hey joined
[09:34] *** wamba joined
[09:36] <Skarsnik> jeromelanteri, I worked a bit with gstreamer yes

[09:37] <eater> zengargoyle: I dont follow, because women are better at math, they don't do STEM? or do you not mean that

[09:38] <TEttinger> it's mostly an unwelcoming culture, especially in american startup culture (see: ubeer)

[09:38] <TEttinger> uber

[09:38] <zengargoyle> eater: https://www.youtube.com/watch?v=9bTKRkmwtGY

[09:39] <TEttinger> it should be resolvable, but like other resolvable problems (cough global warming cough) isn't being addressed well.

[09:39] <jeromelanteri> Skarsnik, i'm trying to make dynamics overlay data on video streams... show them together in live, and same time capture video (overlay should be captured inside a file... like it's current to do for overlay sub-title), then later recording result of overlay and video...

[09:39] <jeromelanteri> but actually, i failed to find any examples for use Gst with GUI Qt5

[09:40] <Skarsnik> did you try QtGstreamer ?

[09:40] <Skarsnik> it's a bitch to compile it on windows thou

[09:40] <jeromelanteri> i'm just able to capture video and show OR recording... not in the same time.

[09:40] <jeromelanteri> Skarsnik, yes, that is my bitbucket repo a little code for test it

[09:41] <jeromelanteri> https://bitbucket.org/jerome___/gst_video_testeur

[09:41] <zengargoyle> eater: it's long... but decent. it's just different areas... CS is not so much NASA sending moon shots and getting the numbers right than being crazy tech dude drilling tunnels.

[09:41] <jeromelanteri> (10 month old.. need to go ahead)

[09:41] * zengargoyle and that's about the end of that digression.

[09:42] <Skarsnik> hm, sems like a complicated pipeline

[09:43] <Skarsnik> I only used to play video with my own gstreamer plugin in the mix

[09:43] <jeromelanteri> Skarsnik, for me, i understadn a bit the pipeline Gst prncipe, but it still compicate to make in place. Also, the doc is C oriented, then Gst/Qt use some other way to do for little things i think.

[09:44] <jeromelanteri> play video ok... but for construct pipeline to make pplaying, then make recording, then push overlay.. all in the same time... OMG !!! it make me crazy

[09:44] <jeromelanteri> Qt5 doesn't have something for make this easy to...

[09:44] <jeromelanteri> and i didn't want to use QML code.

[09:46] <jeromelanteri> there is also events happen...

[09:46] <Skarsnik> QtGstreamer make just writing the gst code in C++/Qt more c++ friendly (and also better qt integration for widget)

[09:46] <jeromelanteri> yes

[09:47] <Skarsnik> https://github.com/Toyunda/toyunda/blob/master/QToyTime/videowidget.cpp maybe that can help yu

[09:47] <Skarsnik> it's beem a while I worked with this stuff

[09:49] <jeromelanteri> Skarsnik, yes, that should yes... very good and nice code

[09:49] *** Swey_Hey left
[09:50] <jeromelanteri> Skarsnik, , thank you

[09:52] *** parv left
[10:00] *** Cabanossi left
[10:03] *** Cabanossi joined
[10:19] <Skarsnik> moritz, is there a way to have svg-plot to put the value on the graph?

[10:50] *** TEttinger left
[10:54] *** espadrine joined
[11:04] *** SCHAPiE left
[11:06] *** SCHAPiE joined
[11:12] *** lizmat left
[11:12] *** colomon joined
[11:20] *** xtreak left
[11:23] *** xtreak joined
[11:29] *** colomon left
[11:31] *** Cabanossi left
[11:33] *** Cabanossi joined
[11:34] *** vendethiel joined
[11:37] <nadim> good day, can someone please remind me what was the shortcut for calling a method only if it exists?

[11:37] <yoleaux> 05:32Z <llfourn> nadim: Thanks for suffering to figure out that problem. Did you manage to make an RT? It still sounds like a bug.

[11:38] *** lizmat joined
[11:41] <Skarsnik> ^can ?

[11:45] <nadim> .tell llfourn Hi, I did not managed to make a RT since I could not golf it down, on the other hand I found what the problem was. Maybe this will help https://nopaste.linux-dev.org/?1160132

[11:45] <yoleaux> nadim: I'll pass your message to llfourn.

[11:45] <nadim> Skarsnik: I mean calling a method only if it is possible, not finding out if it is possible

[11:45] *** GhostK left
[11:45] <Skarsnik> I think can make a call

[11:46] <nadim> ah!

[11:46] <nadim> ah right caret + can

[11:46] <Skarsnik> m: say (0..3).^can("elems);

[11:46] <camelia> rakudo-moar f083cf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' ␤at <tmp>:1␤------> 3say (0..3).^can("elems);7⏏5<EOL>␤    expecting any of:␤        argument list␤        double quotes…»

[11:46] <Skarsnik> m: say (0..3).^can("elems");

[11:46] <camelia> rakudo-moar f083cf: OUTPUT: «(elems Method+{<anon|44581280>}.new)␤»

[11:47] <Skarsnik> nvm it's not this one

[11:48] <nadim> could have been :)

[11:52] <Skarsnik> m: say (0..3).+^can("elems");

[11:52] <camelia> rakudo-moar f083cf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call␤at <tmp>:1␤------> 3say (0..3).+7⏏5^can("elems");␤»

[11:54] <timotimo> there's .* but that'll call multiple candidates if there are more than one

[11:55] <timotimo> actually

[11:55] <timotimo> .? does what you want

[11:56] <Skarsnik> m: say (0..3).?("elems");

[11:56] <camelia> rakudo-moar f083cf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use .? on a non-identifier method call␤at <tmp>:1␤------> 3say (0..3).?("elems")7⏏5;␤»

[11:56] <Skarsnik> m: say (0..3).?elems;

[11:56] <camelia> rakudo-moar f083cf: OUTPUT: «4␤»

[11:56] <Skarsnik> m: say (0..3).?foo;

[11:56] <camelia> rakudo-moar f083cf: OUTPUT: «Nil␤»

[11:58] <nadim> that's the one! 

[12:02] <Skarsnik> hu

[12:02] <Skarsnik> that an interesting bug/weird stuff

[12:02] <timotimo> you mean that you can't .?()?

[12:03] *** colomon joined
[12:03] <Skarsnik> No, I made a script that made profile for a script with multiple rakudo release, but it failed at some point 

[12:04] <Skarsnik> I mean the code is basicly for @rakudo-release {run a p6 script with --profile arguments}

[12:04] <timotimo> mh

[12:05] <Skarsnik> and for some reason the script fail with undef value toward the end of the releases

[12:05] *** tzekid joined
[12:05] <Skarsnik> and I already run the called script 100 times for each release to make benchmarks

[12:06] *** itaylor57 left
[12:06] <timotimo> that sounds interesting indeed

[12:06] <Skarsnik> my bet is some memory issue since the script call a native lib

[12:07] <timotimo> what are you calling a native lib for here?

[12:07] <Skarsnik> the called script use a native lib

[12:07] <timotimo> i thought the calling script had the undef errors?

[12:07] <Skarsnik> Yes, the called script end with undef errors for later release

[12:08] <timotimo> oh, ok

[12:08] *** colomon left
[12:08] <timotimo> if you call a perl6 script 100 times you'll spend about 10s only doing startup

[12:08] *** tzekid left
[12:09] <Skarsnik> The called script output times that I track internaly, I don't use the running time of the script

[12:09] *** tzekid joined
[12:10] *** colomon joined
[12:10] <Skarsnik> hm

[12:11] *** Kristjan55555 joined
[12:11] <Skarsnik> https://gist.github.com/Skarsnik/179f3d91f1df24f1af1a132d749580e6

[12:11] <Skarsnik> ok this is weird, adding --profile make it goes boom

[12:12] *** Skarsnik_ joined
[12:13] *** jaldhar joined
[12:14] <Kristjan55555> https://twitter.com/kristjan1125125 http://imgur.com/a/GZeEy

[12:15] <timotimo> oh

[12:15] <timotimo> that

[12:15] <timotimo> yeah, that's a code-gen issue that the profiler can cause somehow

[12:16] *** Cabanossi left
[12:16] *** Skarsnik left
[12:16] *** andrzejku joined
[12:17] *** Skarsnik_ is now known as Skarsnik

[12:18] *** Cabanossi joined
[12:18] *** kaare_ left
[12:18] *** Kristjan55555 left
[12:19] <timotimo> yeah, i recommend you not click on that imgur link

[12:19] <Skarsnik> I made the mistake ~~

[12:20] <timotimo> moritz: wanna purge that line of spam from the irclogs?

[12:20] *** itaylor57 joined
[12:21] *** jaldhar_ joined
[12:22] *** jaldhar left
[12:25] *** grondilu_ joined
[12:28] *** grondilu left
[12:31] *** jaldhar_ left
[12:31] *** xtreak left
[12:31] *** jaldhar_ joined
[12:36] *** rindolf left
[12:39] <rightfold> Ugh

[12:39] <rightfold> Someone told me not to click it and naturally I clicked it

[12:41] <Skarsnik> timotimo, dunno if that usefull https://gist.github.com/Skarsnik/1c356d1d3b115ce08a4368778b6999b4

[12:41] *** araraloren joined
[12:42] <timotimo> rightfold: sometimes i hate the internet

[12:43] <timotimo> gotta go!

[12:43] <rightfold> Reminds me of Portal 2 with all the DO NOT ENTER signs 🤡

[12:44] *** colomon left
[12:46] <timotimo> except there you get something nice

[12:46] *** colomon joined
[12:47] <rightfold> Yeah I heard you get a cake

[12:47] <timotimo> you get that for following all the orders

[12:51] *** skids joined
[12:56] <Geth> ¦ ecosystem: 272d253b86 | (Tom Browder)++ | META.list

[12:56] <Geth> ¦ ecosystem: add new module

[12:56] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/272d253b86

[12:57] *** rindolf joined
[13:25] <Skarsnik> lizmat, I included profiles for each rakudo version https://gist.github.com/Skarsnik/1c356d1d3b115ce08a4368778b6999b4 not sure if that helpful

[13:31] *** colomon left
[13:33] *** lucasb joined
[13:39] <AlexDaniel> Skarsnik: I made the mistake too :|

[13:39] <AlexDaniel> next time I'll backlog in the other direction, like I usually do…

[13:40] *** lucasb left
[13:45] <El_Che> moritz: if I read your book through safari once it arrives there, do you know how royalties work? Do you get paid?

[13:46] *** pilne joined
[13:53] *** colomon joined
[14:02] *** colomon left
[14:05] *** BenGoldberg joined
[14:16] *** bronious left
[14:16] *** Cabanossi left
[14:18] *** Cabanossi joined
[14:38] *** someuser joined
[14:41] *** Khisanth left
[14:42] *** setty1 left
[14:45] <moritz> El_Che: if the publisher gets paid, so do I. But I don't know the specifics for safari

[14:45] <moritz> El_Che: but I'd appreciate a review much more than the roaylties

[14:46] <AlexDaniel> do we have a ticket or docs or anything about implicit EVAL in regexes?

[14:48] <AlexDaniel> I remember stumbling upon this before, and at the time I was thinking this should not be allowed without MONKEY-SEE-NO-EVAL, but honestly I remember nothing about this now

[14:49] *** kaare_ joined
[14:50] <AlexDaniel> I mean stuff like this:

[14:50] <AlexDaniel> m: my $x = ‘hello’; say ‘hello world’ ~~ /<{$x}>/

[14:50] <camelia> rakudo-moar 6d3ba6: OUTPUT: «｢hello｣␤»

[14:50] <AlexDaniel> m: my $x = ‘#hello’; say ‘hello world’ ~~ /<{$x}>/

[14:50] <camelia> rakudo-moar 6d3ba6: OUTPUT: «5===SORRY!5===␤Regex not terminated.␤at /home/camelia/EVAL_0:1␤------> 3anon regex { #hello}7⏏5<EOL>␤Regex not terminated.␤at /home/camelia/EVAL_0:1␤------> 3anon regex { #hello}7⏏5<EOL>␤Malformed regex␤at /home/camelia/EV…»

[14:51] *** mr-fooba_ joined
[14:51] <AlexDaniel> or was it the right behavior with <{}> ?

[14:52] *** ufobat joined
[14:52] *** mr-foobar left
[14:54] *** Khisanth joined
[14:55] <ufobat> hello :)

[14:56] <ufobat> does anyone have any advice what i can do about this: https://gist.github.com/ufobat/30a4cd45430a9c566b4ab680f694b0a3 it is an installation error of HTTP::Request::Suply on my box. but it works on travis with perl6 nom

[14:59] *** tzekid left
[15:00] *** colomon joined
[15:02] <Skarsnik> hm weird

[15:03] <AlexDaniel> alright I opened this doc issue, feel free to leave your comments if you understand what's going on there: https://github.com/perl6/doc/issues/1429

[15:04] <Skarsnik> weird

[15:05] <Skarsnik> I know, I am very usefull

[15:05] *** colomon left
[15:05] <ufobat> :D

[15:05] <AlexDaniel> how can I match some generated string from a regex? Like, if I don't want to create a temp variable beforehand

[15:06] *** tzekid joined
[15:06] <AlexDaniel> <{/ … /}> ?

[15:06] <AlexDaniel> <{my $foo = …; / $foo /}> ?

[15:10] <geekosaur> <$var>

[15:11] <AlexDaniel> geekosaur: more information?

[15:12] <geekosaur> oh, I think I was answering ane arlier questiona ctually

[15:12] <AlexDaniel> well you can answer any question :)

[15:12] <AlexDaniel> <$var> seems to be doing EVAL too

[15:13] <geekosaur> btw that <{ }> looks like an LTA internal error stopped things, not intended behavior

[15:18] <japhb> Someone was asking about Terminal::Print and the associated examples?  (I updated and/or wrote several of those, maybe I can help?)

[15:21] <japhb> timotimo, nadim: ^^

[15:24] <japhb> .tell timotimo It looks like from the #perl6 logs that you were asking about creating a TUI with Terminal-Print.  I was about to launch into creating high-level widgets for Terminal-Print (e.g. edit boxes, radio buttons, etc.) a few months ago, but got stuck on problems with Uni-level raw input in MoarVM (which blocked e.g. decoding cursor keys and mouse movement).  Those problems might have been fixed now after jnthn++'s considerable work, so might be worth pickin

[15:24] <yoleaux> japhb: I'll pass your message to timotimo.

[15:25] *** skids left
[15:27] <andrzejku> araraloren 

[15:34] *** kyan joined
[15:35] *** kyan left
[15:35] *** kyan joined
[15:38] *** bioexpress joined
[15:41] <bioexpress> Hello, can somebody say me how I could describe the change from `function( %options )` to `function( *%options )`? 

[15:42] <AlexDaniel> oh, what a great question!

[15:42] <masak> bioexpress: you mean what to call the '*'? or what it means?

[15:42] <bioexpress> How to call it

[15:42] <AlexDaniel> I wondered exactly the same thing some time ago

[15:42] <masak> bioexpress: "slurpy"

[15:42] <masak> m: sub f1(%options) { %options<foo> }; say f1({ :foo<1> })

[15:42] <camelia> rakudo-moar 6d3ba6: OUTPUT: «1␤»

[15:43] <masak> m: sub f1(*%options) { %options<foo> }; say f1(:foo<1>)

[15:43] <camelia> rakudo-moar 6d3ba6: OUTPUT: «1␤»

[15:43] <bioexpress> Form hash to slurpy?

[15:43] <masak> ...and there you see the effects of adding the star

[15:43] <masak> bioexpress: from hash parameter to slurpy hash parameter

[15:43] <bioexpress> Thx!

[15:43] <masak> phz!

[15:44] <masak> er, *pzh! :)

[15:44] <masak> (short for "пожалуйста") :P

[15:44] *** BenGoldberg left
[15:45] <AlexDaniel> masak: my question is slightly different! :) How can I have a space in a key when doing this?

[15:45] <AlexDaniel> you can't just slam a pair into it

[15:45] <AlexDaniel> m: sub foo(*%z) { dd %z }; foo :5a, :5b, foobar => ‘world’

[15:45] <camelia> rakudo-moar 6d3ba6: OUTPUT: «{:a(5), :b(5), :foobar("world")}␤»

[15:45] <AlexDaniel> m: sub foo(*%z) { dd %z }; foo :5a, :5b, ‘foo bar’ => ‘world’

[15:45] <camelia> rakudo-moar 6d3ba6: OUTPUT: «Too many positionals passed; expected 0 arguments but got 1␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:48] *** colomon joined
[15:48] <AlexDaniel> m: sub foo(*%z) { dd %z }; foo :5a, :5b, |(‘hello world’ => ‘world’)

[15:48] <camelia> rakudo-moar 6d3ba6: OUTPUT: «{:a(5), :b(5), "hello world" => "world"}␤»

[15:48] <AlexDaniel> well, nevermind

[15:48] *** khw joined
[15:49] *** bioexpress left
[15:52] <japhb> AlexDaniel: Perl 6 practically makes it a policy not to prevent you from being too clever for your own good.  ;-)

[15:52] <AlexDaniel> japhb: which issue are you talking about exactly? :)

[15:54] <japhb> AlexDaniel: Oh, just seeing the "But I need a space in the key of my slurpy hash!" unfold.  :-)

[15:55] <japhb> Just reminds me of lots of other place where Perl 6 goes for subtle dissuasion rather than outright stopping you.

[15:56] *** araraloren left
[16:00] *** kaare__ joined
[16:02] <masak> japhb: "not to prevent you from being too clever for your own good" -- what a refreshing way of putting it

[16:03] *** kaare_ left
[16:04] <masak> japhb: lately I've been thinking of all the (ES.next, but still) linter rules I want in a project to prevent me from doing silly things. JavaScript is a really neat language when propped up from all sides by just the right linter rules.

[16:04] *** S007 left
[16:04] <masak> but Perl 6 has almost the opposite policy from those linter rules. it allows you to be as clever as you want, and it just goes along with it.

[16:05] *** S007 joined
[16:07] <masak> maybe that's being unfair to Perl and Perl 6, though. in the end what it's doing can be called consistency in all things. not putting up arbitrary limits.

[16:15] *** Cabanossi left
[16:15] *** colomon left
[16:16] <jnthn> There are things that Perl 6 outright disallows that you'd catch with a linter in JavaScript though. Such as using undeclared variables. :)

[16:17] <AlexDaniel> m: no strict; $x = ‘but I really want to!’; say $x # :)

[16:17] <camelia> rakudo-moar 6d3ba6: OUTPUT: «but I really want to!␤»

[16:17] *** Cabanossi joined
[16:19] <jnthn> It's your foot :P

[16:20] <AlexDaniel> not after I put it into a module :P :D

[16:22] *** GhostK joined
[16:25] <japhb> AlexDaniel: Are you going to call that "FootGun:ver<666>" ?

[16:39] *** colomon joined
[16:44] *** colomon left
[16:49] *** kyan left
[16:55] *** bvcosta joined
[16:57] <timotimo> well done japhb

[16:57] *** yati joined
[16:57] <yoleaux> 15:24Z <japhb> timotimo: It looks like from the #perl6 logs that you were asking about creating a TUI with Terminal-Print.  I was about to launch into creating high-level widgets for Terminal-Print (e.g. edit boxes, radio buttons, etc.) a few months ago, but got stuck on problems with Uni-level raw input in MoarVM (which blocked e.g. decoding cursor keys and mouse movement).  Those problems might have been fixed now after jnthn++'s considerable

[16:57] <yoleaux>  work, so might be worth pickin

[16:57] <timotimo> did you make the rpg tui?

[16:58] <timotimo> but yeah, should work now

[16:58] <timotimo> the inpup stuff

[16:58] <timotimo> network connection barely exists here

[16:58] <timotimo> typing blind

[17:00] <yati> Hello people, I want to define the infix multiplication operator for my class: what am I doing wrong here? http://paste.scsys.co.uk/564708

[17:01] <geekosaur> yati, most operators are not methods

[17:02] <geekosaur> sub infix:<*> (Interval:D $a, Interval:D $b) { ... }

[17:02] <yati> Ah

[17:02] <geekosaur> actually, correct that

[17:02] <geekosaur> multi sub infix:<*> (Interval:D $a, Interval:D $b) { ... }

[17:02] <yati> What do the :D's do?

[17:02] <geekosaur> and it will be selected based on types. (the :D means it won't be selected for undefined values)

[17:03] *** wamba left
[17:03] <geekosaur> you could omit them but the error messages tend to be worse because they leak implementation details that a caller generally doesn't/shouldn't care about

[17:04] <yati> geekosaur: that worked thanks!

[17:04] <geekosaur> whereas with the :D-s they get an error pointing at the place where tey used the operator, not one pointing into your implementation

[17:04] *** pmurias joined
[17:05] <yati> geekosaur: where do I find info about :D and other such "extended typing operators" or whatever they are called? :)

[17:05] <geekosaur> (this is not just location but also things like the variable names involved, with the type smiley version it will identify the variable the user passed in, otherwise it names one of your internal variables or parameters)

[17:06] <pmurias> masak: if Perl 6 forced a linter and coding style on you it wouldn't be a Perl

[17:06] *** grondilu_ left
[17:07] <geekosaur> https://docs.perl6.org/type/Signature#Constraining_Defined_and_Undefined_Values

[17:07] *** grondilu joined
[17:07] <yati> geekosaur: that is pretty neat, I recall there being a term to describe typing with constraints on values of the types, can't remember it right now.

[17:07] <yati> Thanks for the link

[17:07] *** pharv joined
[17:15] <Geth> ¦ ecosystem: fb9e08c1c9 | grondilu++ (committed using GitHub Web editor) | META.list

[17:15] <Geth> ¦ ecosystem: adding Symbol module

[17:15] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/fb9e08c1c9

[17:15] <R0b0t1> zengargoyle: I suppose that is a solution

[17:16] <grondilu> should Travis deal with dependencies defined in META6.json?

[17:16] <grondilu> *shouldn't

[17:18] * grondilu realises that's much to ask, probably needs to specifie dependencies in .travis.yml or something

[17:30] *** Cabanossi left
[17:32] *** Cabanossi joined
[17:33] *** bvcosta left
[17:34] <yati> Okay, so thanks for geekosaur, I managed to get this: http://paste.scsys.co.uk/564709 -- now the question is, if class A extends B, like in my example, how do I wrap B's constructor in A?

[17:34] <yati> The error I get now concerns the fact that I cannot call method parallel() on Interval values, since the argument is a Resistance value

[17:35] <AlexDaniel> greppable6: flatmap

[17:35] <greppable6> AlexDaniel, https://gist.github.com/aa5bae6dfcf4096b9e57fc37b52f4696

[17:37] <geekosaur> yati, in general you don't define method new directly. you use the MOP's default new which builds superclasses properly etc.

[17:39] <geekosaur> in this case you would define submethod BUILD, which gives you a structurally complete object including superclasses. (if you define your own new, you have to build superclasses yourself and even create the object yourself; see the "bless" method. it is *not* the same "bless" as in perl 5!)

[17:40] <geekosaur> https://docs.perl6.org/language/classtut#Constructors

[17:40] <geekosaur> https://docs.perl6.org/language/objects#Object_Construction

[17:44] * geekosaur wonders if there should be an easily-overridden warning about defining method new directly...

[17:45] *** abraxxa joined
[17:48] *** kaare__ left
[17:50] *** abraxxa left
[17:53] *** kaare__ joined
[17:55] <zengargoyle> .botsnack

[17:55] <synopsebot6> om nom nom

[17:55] <yoleaux> :D

[17:59] *** BenGoldberg joined
[18:00] *** statisfiable6 left
[18:03] *** statisfiable6 joined
[18:03] *** ChanServ sets mode: +v statisfiable6

[18:13] <yati> geekosaur: I see, but I still can't figure out how to do this: Interval exposes an alternate ctor, Interval.from-center-percent(), which I want to delegate to from Resistance.new(). I tried making a submethod BUILD (:$val, :$tol) that then calls Resistance.from-center-percent(), but that does not seem to work. 

[18:14] <yati> So want: Resistance.new(10, 1) to call return a Resistance object that has the underlying Interval built with Interval.from-center-percent(10, 1)

[18:15] <yati> s/call//

[18:16] *** kaare__ left
[18:18] *** kaare__ joined
[18:26] <SmokeMachine> m: my \undef = 42; say undef

[18:26] <camelia> rakudo-moar 6d3ba6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of undef as a value; in Perl 6 please use something more specific:␤ an undefined type object such as Any or Int,␤   :!defined as a matcher,␤        Any:U as a type constraint,␤    Nil as the ab…»

[18:31] <geekosaur> yati, for that you would indeed need method new (but you must do more than just delegating, see the second link I sent) or you would need to replace submethod BUILDALL

[18:31] *** itaipu joined
[18:34] <AlexDaniel> m: class Foo { has $.bar = !!! ‘bar is required’ }; Foo.new(:42bar)

[18:34] <camelia> rakudo-moar 998535: ( no output )

[18:34] <AlexDaniel> m: class Foo { has $.bar = !!! ‘bar is required’ }; Foo.new()

[18:34] <camelia> rakudo-moar 998535: OUTPUT: «bar is required␤  in method  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:34] <AlexDaniel> that's pretty cool

[18:35] <AlexDaniel> I didn't know you could use !!! like this. Although this example would work just fine with die also

[18:35] <grondilu> is there a difference between C<callwith> and C<samewith>?

[18:37] *** miro_ joined
[18:38] * grondilu goes to read https://perl6.party/post/Perl6-But-Heres-My-Dispatch-So-Callwith-Maybe

[18:41] *** HoboWithShotgun joined
[18:41] <HoboWithShotgun> good localtime you wonderful people

[18:41] <HoboWithShotgun> normally i use "beautiful" rather than "wonderful", but I was at several YAPCs. I know... I know.

[18:42] * mst sulks

[18:44] *** wamba joined
[18:44] <HoboWithShotgun> that's good. as long as you do that, you don't talk

[18:44] <HoboWithShotgun> ;-)

[18:44] *** AlexDaniel is now known as AlexWithFootgun

[18:44] <zengargoyle> mst: do you have any code up that shows your "shipping a CUR" like thing?

[18:47] <mst> zengargoyle: code?

[18:48] <mst> I mean the point here is basically you can deploy via tar or rsync (or a fat .deb)

[18:49] <zengargoyle> an example that i can look at...  my mind goes to fatpack and Object::Remote and tak and the like.

[18:50] *** andrzejku left
[18:50] <zengargoyle> i.e. do you have a sh wrapper that does perl6 -Imycur -e 'Module::run' or something to get that almost fully contained like a fatpack.

[18:50] <mst> in perl5, all I mean is "including the local::lib in the tarball"

[18:51] <HoboWithShotgun> rakudobot: say "äöü".encode("UTF-8").decode("latin1");

[18:52] <HoboWithShotgun> meh, what was the bots' name again?

[18:52] <AlexWithFootgun> m:

[18:52] <evalable6> AlexWithFootgun, rakudo-moar 9658dd98c: OUTPUT: «»

[18:52] <mst> zengargoyle: but, yeah, you can do that, or stick a 'use lib' in the script, or whatever

[18:53] <AlexWithFootgun> m: say "äöü".encode("UTF-8").decode("latin1");

[18:53] <camelia> rakudo-moar 998535: OUTPUT: «Can not decode a utf-8 buffer as if it were latin1␤  in block <unit> at <tmp> line 1␤␤»

[18:53] *** eroux joined
[18:53] <HoboWithShotgun> yeah, that's what i get too

[18:54] <HoboWithShotgun> what am i doing wrong?

[18:55] *** zakharyas joined
[18:56] <mst> trying to do something that doesn't make sense?

[18:57] <zengargoyle> i was just wondering if you had an automated process for the "all deps but core installed to this cur" and wrap this 'module/script' up like fatpacker.  or if it's still a sorta manual process.

[18:57] *** zakharyas left
[18:58] *** zakharyas joined
[18:59] *** shu joined
[19:00] <mst> I've not particularly automated it

[19:00] <mst> honestly though "use a user that can't write to the global CUR to install everything, hey presto now ~/.perl6 contains what you wanted" is not a terrible approach

[19:00] <HoboWithShotgun> possibly, mst. as i understand it string literals are utf-8, right. the windows shell talks latin1. and so my output is borked

[19:01] <HoboWithShotgun> what do i do to fix this. 

[19:01] <zengargoyle> with fresh perl6 that doesn't have any needed modules already installed....

[19:01] <zengargoyle> or removing the site CUR somehow...

[19:02] *** Cabanossi left
[19:02] <geekosaur> HoboWithShotgun, chcp 65001

[19:02] <geekosaur> although I thought it was supposed to check that and translate (possibly to -c8)

[19:02] <zengargoyle> and zef can install to a specific CUR.... i'm just not sure there's a core-only sort of option at the moment to ensure every dep needed goes into CUR...

[19:02] *** shu left
[19:03] *** zakharyas left
[19:03] *** Cabanossi joined
[19:04] <mst> zengargoyle: for perl5 I use a fresh build a lot of the time too

[19:04] <mst> "I could be clever, or I could use a perl with an empty site directory that the build can't write to"

[19:04] *** darutoko left
[19:04] <mst> this being systems, clever is the wrong answer

[19:04] <zengargoyle> ah, *nods*

[19:05] *** zakharyas joined
[19:05] <HoboWithShotgun> geekosaur: now it's broken twice

[19:05] <geekosaur> huh?

[19:06] <HoboWithShotgun> with chcp65001: NegasphÃ¤re, without: NegasphÃ¤re, should be: Negasphäre

[19:06] <zengargoyle> i've just used the cpanm flags for *everything not core* goes into this ./lib

[19:07] *** committable6 left
[19:07] *** greppable6 left
[19:07] <mst> the cpanm -L flag uses lib::core::only which was extracted from local::lib because I don't entirely trust it

[19:08] <HoboWithShotgun> interesting. with and without actually is different but comes out identical in my client

[19:08] <geekosaur> normalized and non-normalized?

[19:08] <zengargoyle> spinning up a frest perl or whatever is probably better...

[19:08] *** greppable6 joined
[19:08] *** committable6 joined
[19:08] *** ChanServ sets mode: +v greppable6

[19:08] *** ChanServ sets mode: +v committable6

[19:08] <mst> -L is useful for a quick check

[19:09] <mst> for build work I like a fresh perl

[19:10] <geekosaur> (ä can be \x00e5 or \x0065\x0308; the former is the normalized one per Unicode spec.)

[19:11] <geekosaur> (and feeding a non-normalized one in might be just the thing to trigger odd issues, given that windows is not great at locales)

[19:12] <zengargoyle> yeah, makes sense... just a little too much effort for the things i was doing where just trying it once to see if it works was pretty much "it works, i'm done." :)

[19:13] *** itaipu left
[19:13] <geekosaur> er \x0061

[19:13] <geekosaur> no 0065

[19:14] <zengargoyle> hehe, because the whole reason i was fatpacking was because they wouldn't change/upgrade/add to the perl that was there... :P

[19:15] <zengargoyle> and it was shared over NFS, so same perl everywhere. :)

[19:16] *** andrzejku joined
[19:19] *** itaipu joined
[19:28] *** itaipu left
[19:35] *** itaipu joined
[19:37] *** nhywyll joined
[19:52] *** TEttinger joined
[20:01] *** Cabanossi left
[20:02] <japhb> .tell timotimo Yes, I did the RPG TUI demo.  And I have a present for you:  https://github.com/ab5tract/Terminal-Print/blob/raw-input/examples/tris.p6  (Note the branch.)

[20:02] <yoleaux> japhb: I'll pass your message to timotimo.

[20:03] *** Cabanossi joined
[20:05] *** colomon joined
[20:05] *** andrzejku left
[20:06] *** skids joined
[20:09] *** colomon left
[20:11] *** skids left
[20:16] <ufobat> when i install a module with zef, it will install the dependencies of the module as well. (if the tests of the module fail, zef wont install nothing at all) but that leads me to the question, what if the tests of the module run another perl6, are the depenencies of the module available to this perl6 invokation. i think they aren't. and thing this has recently been changed, could that be?

[20:18] *** rindolf left
[20:18] <ufobat> s/and thing/and i think/

[20:24] *** pharv left
[20:37] *** clarkema joined
[20:40] <masak> pmurias: re "if Perl 6 forced a linter on you" -- yes, my point exactly. Perl culture is anti-linter-rules, not because linters are a bad idea, but because it's against the Liberté ideals of Perl.

[20:41] *** andrzejku joined
[20:41] <nadim> . tell japhb Hi, I wrote this https://github.com/nkh/P6-Data-Dump-Tree/blob/master/examples/folding.pl. It's a begining a of NCurses appliction to display data. The idea was to make a data viewer that could be used by scripts. The folding is handled by the dumper, it just needs ome nice UI. if you'd like to make something or even just translate this example I'll put it in the distro.

[20:47] *** Skarsnik_ joined
[20:49] <nadim> masak: I want  linter forced on me, looking forward to a Perl::Critic like for P6

[20:49] <nadim> forced by me ;)

[20:49] *** Skarsnik left
[20:50] *** zakharyas left
[20:53] *** ufobat left
[21:07] *** mr-foobar joined
[21:08] *** skids joined
[21:09] *** mr-fooba_ left
[21:10] *** kaare_ joined
[21:11] *** cog_ joined
[21:12] *** itaipu left
[21:12] *** kaare__ left
[21:12] *** BenGoldberg left
[21:13] *** cog__ left
[21:15] *** Skarsnik_ left
[21:15] *** Geth left
[21:16] *** Geth joined
[21:19] *** itaipu joined
[21:20] *** andrzejku left
[21:21] *** llfourn left
[21:22] *** skids left
[21:31] <El_Che> moritz: I'll keep you posted when I see it arriving in Safari

[21:34] *** itaipu left
[21:36] *** itaipu joined
[21:37] *** nhywyll left
[21:43] *** eroux left
[21:56] *** itaipu left
[22:00] *** yati left
[22:01] *** Cabanossi left
[22:03] *** Cabanossi joined
[22:11] *** jaldhar_ left
[22:12] *** jaldhar_ joined
[22:12] *** itaipu joined
[22:14] *** Rawriful joined
[22:30] *** Cabanossi left
[22:32] *** espadrine left
[22:32] *** Cabanossi joined
[22:43] *** miro_ left
[22:43] *** clarkema left
[22:46] *** vendethiel left
[22:47] *** HoboWithShotgun left
[23:01] *** benjikun joined
[23:02] *** rubio_terra joined
[23:02] <benjikun> Why is the build failing? https://github.com/perl6/gtk-simple

[23:02] <benjikun> I've installed it successfully on the latest version

[23:05] *** BenGoldberg joined
[23:06] *** pmurias left
[23:07] <geekosaur> looks like a bug in zef when it was last updated which, note, was 6 months ago)

[23:10] <benjikun> hm

[23:19] *** Rawriful left
[23:26] *** deep-book-gk_ joined
[23:26] <timotimo> i just restarted the gtk-simple build on travis-ci

[23:26] <yoleaux> 20:02Z <japhb> timotimo: Yes, I did the RPG TUI demo.  And I have a present for you:  https://github.com/ab5tract/Terminal-Print/blob/raw-input/examples/tris.p6  (Note the branch.)

[23:26] <timotimo> i don't have access to the appveyor because azawawi hosts it

[23:27] <timotimo> though i have my own appveyor of that project

[23:27] <geekosaur> the error there looks no worthwhile (strawberry perl install complaining about unsigned package)

[23:28] <timotimo> bleh, that thing still?

[23:28] <timotimo> i feel like i fixed that like five times already

[23:28] <timotimo> https://ci.appveyor.com/project/timo/gtk-simple/build/job/ydxbm7sxq0876dxu - works here it looks like

[23:29] *** deep-book-gk_ left
[23:36] *** nadim left
[23:46] *** Cabanossi left
[23:46] <benjikun> is Larry Wall in this irc? lol

[23:47] *** Cabanossi joined
[23:49] <geekosaur> sometimes

[23:53] *** wamba left
[23:53] *** pharv joined
[23:58] <timotimo> it's quite possible that we have to bump the lowest version for gtk-simple

[23:59] <timotimo> since zef just doesn't work on such an old version .. or something

[23:59] <timotimo> alternatively, put lost of backwards-compatibility hacks into zef :D

