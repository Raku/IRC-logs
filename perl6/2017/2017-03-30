[00:00] <AlexDaniel> samcv: generally, this is what makes it switch to it: setxkbmap -compat 'complete+ef+ledcaps(group_lock)' 'ef,ef(phonetic)' -option 'grp:sclk_toggle,grp_led:caps

[00:00] <AlexDaniel> (missing ' on the end)

[00:00] <samcv> kk

[00:01] <AlexDaniel> samcv: you can take any other existing layout as an example

[00:03] <AlexDaniel> samcv: if I recall correctly, -compat thing is needed to work around some issue with japanese keyboards

[00:03] <AlexDaniel> samcv: ( https://bugs.freedesktop.org/show_bug.cgi?id=91042 )

[00:03] <AlexDaniel> samcv: so if you're just starting, you probably don't need it

[00:04] <samcv> thank you kindly

[00:04] <AlexDaniel> samcv: sclk_toggle is to make scroll lock switch between layouts, again it's something you probably don't need at all

[00:04] <AlexDaniel> so it is simply setxkbmap 'yourlayout'

[00:04] *** mcmillhj joined
[00:06] *** mst left
[00:06] *** mst joined
[00:07] <AlexDaniel> samcv: at the time I found this to be very helpful: https://medium.com/@damko/a-simple-humble-but-comprehensive-guide-to-xkb-for-linux-6f1ad5e13450

[00:09] *** Cabanossi left
[00:10] *** Cabanossi joined
[00:10] *** mcmillhj left
[00:11] *** cyphase left
[00:11] <AlexDaniel> samcv: if you get into problems where some of your custom keys are not working in some software, feel free to ping me. There are a couple of tricks I know

[00:13] <samcv> thank you

[00:13] *** mcmillhj joined
[00:15] *** cyphase joined
[00:16] *** rpburkholder left
[00:18] *** mcmillhj left
[00:23] *** cyphase left
[00:24] *** labster left
[00:25] *** Actualeyes left
[00:28] *** cyphase joined
[00:28] *** Actualeyes joined
[00:33] *** mcmillhj joined
[00:34] *** Actualeyes left
[00:38] *** mcmillhj left
[00:39] *** labster joined
[00:39] *** cyphase left
[00:43] *** mcmillhj joined
[00:44] *** cyphase joined
[00:48] *** mcmillhj left
[00:52] *** cyphase left
[00:57] *** cyphase joined
[00:58] *** mcmillhj joined
[01:00] *** sftp left
[01:00] *** sftp joined
[01:03] *** mcmillhj left
[01:05] *** cyphase left
[01:05] *** aborazmeh joined
[01:05] *** aborazmeh left
[01:05] *** aborazmeh joined
[01:10] *** cyphase joined
[01:15] *** mcmillhj joined
[01:17] *** ChoHag joined
[01:18] *** cyphase left
[01:23] *** cyphase joined
[01:24] *** mcmillhj left
[01:29] *** mcmillhj joined
[01:34] *** mcmillhj left
[01:39] *** mcmillhj joined
[01:43] *** mcmillhj left
[01:45] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:49] *** mcmillhj joined
[01:53] *** Cabanossi left
[01:54] *** mcmillhj left
[01:55] *** Cabanossi joined
[01:58] *** mcmillhj joined
[02:03] *** mcmillhj left
[02:08] *** mcmillhj joined
[02:13] *** mcmillhj left
[02:22] *** mcmillhj joined
[02:30] *** mcmillhj left
[02:31] *** alimon left
[02:34] *** alimon joined
[02:38] *** noganex_ joined
[02:40] *** mcmillhj joined
[02:40] *** noganex left
[02:46] *** araujo left
[02:46] *** araujo joined
[02:47] *** mcmillhj left
[02:52] *** mcmillhj joined
[02:52] *** xtreak joined
[02:53] *** Cabanossi left
[02:55] *** Cabanossi joined
[02:55] *** kurahaupo__ joined
[02:56] *** llfourn_ joined
[02:56] *** mcmillhj left
[02:59] *** llfourn left
[03:01] *** mcmillhj joined
[03:05] *** mcmillhj left
[03:07] *** Cabanossi left
[03:09] *** Cabanossi joined
[03:10] *** aborazmeh left
[03:12] *** mcmillhj joined
[03:13] *** vendethiel- joined
[03:13] *** vendethiel left
[03:17] *** mcmillhj left
[03:21] *** mcmillhj joined
[03:23] *** ChoHag left
[03:26] *** mcmillhj left
[03:27] *** drrho_ joined
[03:30] *** pelev joined
[03:31] *** pelev left
[03:31] *** mcmillhj joined
[03:31] *** pelev joined
[03:32] *** pelev left
[03:36] *** pedh joined
[03:36] *** mcmillhj left
[03:39] *** pelev joined
[03:39] *** pelev left
[03:40] <AlexDaniel> ===SORRY!=== Representation must be composed before it can be serialized

[03:40] <AlexDaniel> what does it mean?

[03:41] *** pedh left
[03:41] <AlexDaniel> ah-ha, it means I cannot ｢use …:from<Python>;｣ in a module

[03:42] * BenGoldberg was going to say, you need to do Classname.^compose, but that could be it instead.

[03:42] <AlexDaniel> uh-oh, so how do I use something with Inline::Python if I'm doing it in a module?

[03:43] * BenGoldberg doesn't know.

[03:43] <BenGoldberg> In any case, g'night.

[03:44] *** BenGoldberg left
[03:46] *** darutoko joined
[03:48] *** mcmillhj joined
[03:51] *** Cabanossi left
[03:53] *** mcmillhj left
[03:54] *** Cabanossi joined
[03:59] <AlexDaniel> .tell nine any ideas? https://irclog.perlgeek.de/perl6/2017-03-30#i_14348415

[03:59] <yoleaux> AlexDaniel: I'll pass your message to nine.

[04:00] *** mcmillhj joined
[04:05] *** wamba joined
[04:07] *** mcmillhj left
[04:08] <samcv> looks rike that coverage i generated is incorrect because i think it copied over the old results every .t file was ran

[04:08] <samcv> so i guess i'll make a nqp shell script that sets a random one, then when it runs them all combine all the randomly named datafiles together

[04:10] <samcv> or maybe it combines them. i'm not really sure the files are the same size

[04:11] *** mcmillhj joined
[04:12] *** Resol joined
[04:15] *** mcmillhj left
[04:16] *** Resol left
[04:19] <u-ou> I want to write a bot that connects to IRC via SSL. how do I do that?

[04:19] <yoleaux> 29 Mar 2017 10:19Z <Zoffix> u-ou: Don't know if anyone mentioned, but if you're writing an IRC bot, we already have an IRC module you can use and not mess with sockets: https://modules.perl6.org/repo/IRC::Client

[04:20] *** mcmillhj joined
[04:20] *** cyphase left
[04:22] <u-ou> I guess that's my answer in a way, but I'm not sure if I want to use a library yet.

[04:24] *** mcmillhj left
[04:26] <AlexDaniel> u-ou: so you want something to handle SSL stuff but don't want to use a module?

[04:28] <u-ou> I didn't say "don't want to". just wondered if perl6 provided something for me.

[04:34] *** mcmillhj joined
[04:38] *** Cabanossi left
[04:39] *** Cabanossi joined
[04:41] *** dustinm` joined
[04:43] *** cyphase joined
[04:52] *** cyphase left
[04:57] *** cyphase joined
[05:01] *** curan joined
[05:10] *** cyphase left
[05:12] *** noganex joined
[05:15] *** Exodist left
[05:15] *** cyphase joined
[05:15] *** noganex_ left
[05:15] *** vytas left
[05:16] *** vytas-local_ joined
[05:16] *** AlexDaniel left
[05:17] *** Exodist joined
[05:20] *** gdonald left
[05:21] *** gdonald joined
[05:29] *** cyphase left
[05:29] *** AmazingPudding is now known as DrEeevil

[05:29] <u-ou> pony

[05:30] *** mcmillhj left
[05:32] *** Tonik joined
[05:33] *** mcmillhj joined
[05:33] *** cyphase joined
[05:36] *** cyphase left
[05:37] <samcv> u-ou, there's an IRC bot thing

[05:37] *** cyphase joined
[05:37] <samcv> i've built an irc bot using it

[05:38] *** mcmillhj left
[05:38] <samcv> buggable, eco IRC::Client

[05:38] <buggable> samcv, Found 4 results: IRC::Client, IRC::Client::Plugin::HNY, IRC::Client::Plugin::Factoid, IRC::Client::Plugin::UserPoints. See https://modules.perl6.org/#q=IRC%3A%3AClient

[05:39] <u-ou> ta, will look into it

[05:39] *** wamba left
[05:42] *** mcmillhj joined
[05:44] <samcv> the source for my bot is here https://github.com/samcv/keira-perl6-ircbot in case you're interested. it all uses plugins

[05:44] <samcv> well the whole thing is a plugin. in the lib folder the Keira.pm6 file has the bulk of the code, that get simpored into the executable

[05:46] *** domidumont joined
[05:46] <u-ou> thanks :D

[05:46] *** mcmillhj left
[05:47] *** noganex left
[05:48] *** noganex joined
[05:49] *** xtreak left
[05:49] *** mcmillhj joined
[05:50] *** RabidGravy joined
[05:50] *** xtreak joined
[05:51] *** domidumont left
[05:52] *** domidumont joined
[05:52] *** Cabanossi left
[05:52] <u-ou> gtg

[05:53] *** xtreak left
[05:53] *** xtreak joined
[05:54] *** Cabanossi joined
[05:54] *** mcmillhj left
[05:55] *** Tonik left
[05:58] *** cyphase left
[06:02] *** cyphase joined
[06:03] *** mcmillhj joined
[06:08] *** mcmillhj left
[06:08] *** labster left
[06:09] *** lowbro joined
[06:09] *** lowbro left
[06:09] *** lowbro joined
[06:10] *** cyphase left
[06:13] *** labster joined
[06:15] *** cyphase joined
[06:18] *** domidumont left
[06:19] *** mcmillhj joined
[06:20] *** cyphase left
[06:22] *** vendethiel joined
[06:22] *** vendethiel- left
[06:22] *** wamba joined
[06:24] *** xtreak left
[06:24] *** mcmillhj left
[06:25] *** cyphase joined
[06:27] *** xtreak joined
[06:28] *** mcmillhj joined
[06:32] *** mcmillhj left
[06:33] *** cyphase left
[06:36] *** mcmillhj joined
[06:37] *** obfusk_ left
[06:38] *** obfusk joined
[06:38] *** cyphase joined
[06:41] *** mcmillhj left
[06:46] *** mcmillhj joined
[06:49] *** cyphase left
[06:51] *** mcmillhj left
[06:51] *** Cabanossi left
[06:54] *** mcmillhj joined
[06:54] *** Cabanossi joined
[06:54] *** cyphase joined
[06:54] *** xtreak left
[06:55] *** xtreak joined
[06:59] *** pmurias joined
[06:59] *** mcmillhj left
[06:59] <pmurias> jnthn: re 'make spectest' on rakudo-debugger, does 'make spectest' test the rakudo debugger?

[07:00] *** ufobat joined
[07:01] <samcv> pmurias, i don't think it does

[07:02] *** mcmillhj joined
[07:07] *** mcmillhj left
[07:09] *** cyphase left
[07:11] *** dakkar joined
[07:14] *** cyphase joined
[07:14] *** mcmillhj joined
[07:15] *** domi91c joined
[07:15] <domi91c> hello

[07:16] *** domi91c left
[07:19] *** domidumont joined
[07:20] *** mcmillhj left
[07:24] *** cyphase left
[07:27] *** kurahaupo__ left
[07:27] *** skids left
[07:29] *** cyphase joined
[07:29] *** mcmillhj joined
[07:32] *** xtreak left
[07:33] *** xtreak joined
[07:33] *** zakharyas joined
[07:33] *** robertle left
[07:37] *** mcmillhj left
[07:38] *** Cabanossi left
[07:39] *** Cabanossi joined
[07:41] *** mcmillhj joined
[07:45] *** cyphase left
[07:46] *** mcmillhj left
[07:50] *** mcmillhj joined
[07:50] *** cyphase joined
[07:54] *** mcmillhj left
[07:56] *** wamba left
[07:56] *** ChoHag joined
[08:00] *** mcmillhj joined
[08:04] <pmurias> why is nqp::if faster then if ... {}?

[08:04] <samcv> do you think it is faster?

[08:05] *** mcmillhj left
[08:05] <samcv> i mean sometimes it's not any faster. do you have evidence showing it's slower or just assuming it's slower?

[08:06] *** cyphase left
[08:06] <pmurias> it's used in the CORE a lot, I'm just wondering if the regular statement could be optimized so it's no longer needed

[08:06] <samcv> but yeah nqp::if can be faster depending on what is in the if condition. if it's a nqp type thing nqp::if can be faster somewhat if it's a hot codepath

[08:06] <samcv> ah

[08:07] <samcv> it would go here https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Optimizer.nqp

[08:08] <samcv> there probably already is something there, but i'm not sure what it covers

[08:08] <samcv> but if you are finding nqp::if is being faster in one situation i would try and improve the optimizer

[08:08] *** mcmillhj joined
[08:08] *** Cabanossi left
[08:09] *** Cabanossi joined
[08:10] *** cyphase joined
[08:13] *** mcmillhj left
[08:15] *** cyphase left
[08:16] *** tojo joined
[08:18] *** xtreak left
[08:20] * lizmat has tried to get into the optimizer a few times

[08:20] <lizmat> but I have not been able to wrap my head around it just yet  :-(

[08:21] <lizmat> this has probably to do with age

[08:21] <samcv> i think i understand it. and then i keep going and then realize i know nothing at all

[08:21] *** xtreak joined
[08:21] <samcv> when that file starts to make sense and then suddenly you realize you have no clue what it's doing

[08:25] *** wamba joined
[08:26] *** dominix joined
[08:29] *** dominix left
[08:33] *** mcmillhj joined
[08:38] *** mcmillhj left
[08:43] *** xtreak left
[08:44] *** xtreak joined
[08:46] *** mcmillhj joined
[08:47] <El_Che> samcv: that's the Socratic paradox :)

[08:51] *** mcmillhj left
[08:53] *** rindolf joined
[08:54] *** mcmillhj joined
[08:56] *** espadrine_ joined
[08:56] *** pytuger left
[08:58] <pmurias> do we want to implement count-only for stuff such as (-1.5.Num..^3).iterator?

[08:59] <pmurias> we have a skipped test, but I'm not sure how useful the count-only method for such cases would actually be

[08:59] *** mcmillhj left
[09:08] *** xtreak left
[09:13] *** mcmillhj joined
[09:14] *** TEttinger left
[09:16] *** pytuger joined
[09:16] *** pytuger left
[09:16] *** pytuger joined
[09:18] *** mcmillhj left
[09:21] *** gdonald left
[09:22] *** gdonald joined
[09:23] *** mcmillhj joined
[09:24] *** M-Illandan left
[09:24] *** Matthew[m] left
[09:24] *** ilmari[m] left
[09:24] *** unclechu left
[09:24] *** dp[m] left
[09:24] *** xui_nya[m] left
[09:24] *** CIAvash[m] left
[09:24] *** mienaikage left
[09:24] *** tadzik left
[09:24] *** wictory[m] left
[09:26] *** wictory[m] joined
[09:26] *** espadrine_ left
[09:28] *** ufobat left
[09:28] *** mcmillhj left
[09:29] *** jonas1 joined
[09:35] *** mcmillhj joined
[09:36] <timotimo> There's no short-hand way to get a Promise that's already kept with a value you give, right?

[09:36] <timotimo> like, you can't "Hello".Promise, or Promise.kept-value("Hello")

[09:40] *** mcmillhj left
[09:43] *** tadzik joined
[09:43] *** dp[m] joined
[09:43] *** M-Illandan joined
[09:43] *** Matthew[m] joined
[09:44] *** unclechu joined
[09:44] *** ilmari[m] joined
[09:44] *** mienaikage joined
[09:44] *** xui_nya[m] joined
[09:44] *** CIAvash[m] joined
[09:46] *** jferrero left
[09:47] *** xtreak joined
[09:47] *** jferrero joined
[09:48] *** labster left
[09:51] *** ChoHag left
[09:53] *** ChoHag joined
[09:54] *** andrzejku joined
[09:54] <andrzejku> hey where is Perl https://goo.gl/IxNzo8

[09:54] <andrzejku> how is with bug density in perl6?

[10:00] *** mcmillhj joined
[10:05] *** mcmillhj left
[10:08] *** Actualeyes joined
[10:09] *** mcmillhj joined
[10:12] *** ufobat joined
[10:13] *** mcmillhj left
[10:18] *** mcmillhj joined
[10:22] *** mcmillhj left
[10:27] *** mcmillhj joined
[10:30] *** astj left
[10:30] *** astj joined
[10:31] *** donaldh joined
[10:32] *** mcmillhj left
[10:35] *** astj left
[10:35] *** astj joined
[10:36] *** Cabanossi left
[10:36] *** mcmillhj joined
[10:39] *** Cabanossi joined
[10:41] *** mcmillhj left
[10:47] *** vendethiel left
[10:49] *** tojo left
[10:50] *** mcmillhj joined
[10:55] *** mcmillhj left
[10:57] *** wamba left
[11:03] *** tojo joined
[11:04] *** bjz joined
[11:05] *** Actualeyes left
[11:05] *** mcmillhj joined
[11:10] *** mcmillhj left
[11:13] <SHODAN> andrzejku, odd article

[11:14] *** maasta left
[11:14] <andrzejku> maybe

[11:14] <andrzejku> but how is with bug density in perl6?

[11:15] *** mcmillhj joined
[11:17] *** mcmillhj left
[11:17] <SHODAN> i think you'll have to perform that study yourself if you're interested. i haven't heard of any such numbers :\

[11:18] <timotimo> there's not enough user code publically available on github for a sensible study, i'd say

[11:18] <SHODAN> that might be a problem too

[11:19] *** ufobat left
[11:25] <andrzejku> okay but what do you think about it?

[11:26] <andrzejku> Perl6 vs C++ bug density

[11:29] *** xtreak left
[11:29] <pmurias> the way the measure "bug density" doesn't seem very reliable

[11:31] *** ufobat joined
[11:32] <timotimo> opened github issues per line of code?

[11:32] <pmurias> commits with a message that looks like it fixes a bug

[11:32] <timotimo> ah

[11:33] <andrzejku> timotimo: I think it should be developer feelings statistics

[11:33] *** donaldh left
[11:33] <timotimo> no, definitely not

[11:34] <timotimo> "how buggy does your language make your code?" "my language is perfect, go away"

[11:34] <timotimo> that's got to be helpful!

[11:34] <timotimo> "php provokes bugs" - "no php is flawless, you dumb bully!"

[11:35] *** Actualeyes joined
[11:35] *** mcmillhj joined
[11:35] <pmurias> disgruntlement seems like a very useful thing to measure

[11:39] <andrzejku> I don't think so

[11:39] <andrzejku> many developers which program for many many years can told you many stories with different projects and languages

[11:40] *** mcmillhj left
[11:40] *** ChoHag left
[11:40] <andrzejku> I heard one a story about guy who need to fix some bugs in C/C++/scripting mixed code

[11:40] <andrzejku> and he was crying

[11:40] <andrzejku> after couple days

[11:41] <nebuchadnezzar> interesting the GraphQL and Perl6 slides

[11:42] *** ChoHag joined
[11:44] <pmurias> andrzejku: most (all) technologies suck and annoy people in different ways, what would be interesting to measure is to what degree they do that

[11:44] *** Actualeyes left
[11:45] *** mcmillhj joined
[11:50] *** mr-foobar left
[11:50] *** mcmillhj left
[11:56] <profan> pmurias: i think it's very difficult to come to any objective measure about it

[11:57] <profan> while bug density may be hard to measure, "disgruntlement" is.. also quite up there in terms of difficulty i'd say :P

[11:57] *** mcmillhj joined
[12:02] *** mcmillhj left
[12:02] <DrForr> timotimo: Were you the one playing with Synthesia?

[12:03] <timotimo> ayup

[12:03] <DrForr> Are you using your laptop keyboard, or an actual MIDI controller?

[12:05] <timotimo> i'm the proud owner of an alesis vi61

[12:07] *** geekosaur left
[12:07] <DrForr> Shiny. I'm looking for something portable, having had to deal with selling at least one 61-key unit.

[12:07] *** Cabanossi left
[12:08] *** geekosaur joined
[12:09] *** Cabanossi joined
[12:09] *** Actualeyes joined
[12:09] <timotimo> yeah, the vi61 is definitely not portable :)

[12:10] <timotimo> my dad started my interest when he got some pretty tiny thingie for almost-free one time and showed it to me

[12:11] <timotimo> it had pretty cheap keys, and not many of 'em

[12:11] <timotimo> like one and a half octave maybe?

[12:12] <DrForr> Indeed. I bought an 88-key Yamaha MIDI controller (weighted, velocity) and had a fun (for geeky "Okay, how the hell do I set this up..." values of fun) in order to practice as close as I could get to a real piano, but it's nothing really useful w/o GarageBand...

[12:13] <timotimo> pff, garage band. there's so many cool tools out there to try

[12:13] *** mcmillhj joined
[12:13] <timotimo> if you'd enjoy fiddling with synth parameters and filters and such, have a look at sunvox

[12:13] <DrForr> I know; it took me quite a while to figure out basic VS..R? sound stuff, I played w/ cubase.

[12:14] <timotimo> oh, you mean the attack/decay/hold/fourth-thing

[12:14] <Woodi> andrzejku: if you check some link in this article and link there, you will get that Perl5 is almoust as good as TypeScript :)  but this article is just completly waste of time with terrible name with terrible arguments and conclusions...

[12:14] <timotimo> ah, attack, decay, sustain, release

[12:14] <DrForr> Yeah, ASDR envelopes.

[12:15] <DrForr> It was just the keys, full 88-key multitouch velocity sensitive, and just figuring out the options to play back live sound was a challenge.

[12:16] <timotimo> hehe

[12:16] <DrForr> Hence garageband.

[12:18] *** mcmillhj left
[12:18] <DrForr> Synthesia looks fun enough (and I've watched enough video using it) to get me back into it, but I'd either need something like a Yamaha PSR taking up a huge amount of space (but with the fire-and-forget advantage) or take a more multimedia approach with a simpler keyboard. I can span more than an octave (I know, quit bragging) so at least a 49-key would work for me.

[12:20] <timotimo> what, you can reach further than the same note on two octaves with just one hand?

[12:20] <DrForr> Just barely.

[12:21] *** drrho_ left
[12:21] <DrForr> Double-jointed and all that.

[12:21] *** drrho_ joined
[12:23] <andrzejku> Woodi: hey

[12:23] <andrzejku> Woodi: priv?

[12:24] <timotimo> FWIW, i just hook synthesia up to a qsynth aka fluidsynth

[12:24] <timotimo> not much setup required

[12:24] * timotimo heads out now

[12:24] *** tojo left
[12:28] *** bjz left
[12:42] *** donaldh joined
[12:43] *** mcmillhj joined
[12:47] *** raschipi joined
[12:49] *** mcmillhj left
[12:49] *** perlpilot left
[12:51] *** perlpilot joined
[12:56] *** curan left
[13:00] *** ChoHag left
[13:02] *** ChoHag joined
[13:07] *** Cabanossi left
[13:09] *** Cabanossi joined
[13:10] *** mcmillhj joined
[13:13] *** sufrostico joined
[13:14] <[Coke]> http://www.platohistory.org/blog/2012/09/plato-emoticons-revisited.html

[13:16] <raschipi> Someone has to write a proposal so that Unicode can represent that.

[13:19] <DrForr> https://youtu.be/AcS3NOQnsQM?t=115

[13:21] * [Coke] actually ponders making a module that, given a char or int, will print the str/codepoint/uniname

[13:21] <[Coke]> I've written so many one liners ending with a very long "say" at the end to dump that out…

[13:22] <raschipi> Make it also able to dump property tables.

[13:22] <raschipi> Like the bot.

[13:23] <masak> [Coke]: may I point you to the excellent App::Uni? https://metacpan.org/pod/App::Uni

[13:23] <masak> [Coke]: these days, I never leave home without it

[13:24] *** xtreak joined
[13:24] <raschipi> Looks like a good template, but it would be useful to have a p6 version so we can query what Perl6 thinks of them.

[13:25] *** wcummings left
[13:26] <masak> I won't stop you from porting App::Uni to Perl 6, of course. my guess is it ends up being much smaller.

[13:28] <[Coke]> masak++ nifty

[13:29] <[Coke]> I could see adding a -v to get rashipi's desired output also.

[13:30] <raschipi> There is Perl6 code for all of this already, just factor it out of the bots.

[13:31] <jnthn> react/whenever example of the day: quick and dirty async SSH port forwarder https://github.com/jnthn/p6-ssh-libssh/blob/forwarding/examples/forward.p6

[13:32] *** skids joined
[13:33] <raschipi> "dirty" as in: cleaner than something that would be written in any other language except Erlang.

[13:34] <jnthn> ;)

[13:35] <jnthn> Well, more things like "it just goes and tears down the SSH session without caring about ongoing connections at shutdown" :)

[13:36] <jnthn> What I actually needed to implement was reverse forwarding, alas...

[13:36] * jnthn goes to try and figure that out

[13:37] <raschipi> "tears down the SSH session without caring about ongoing connections": Just let TCP deal with it. That's it's job anyway.

[13:37] <jnthn> Well, there is that :)

[13:45] * nebuchadnezzar is enjoying the Damian's talk “On the shoulder of Giants” and wonders where Quantum::Computation module is :-D

[13:51] *** Cabanossi left
[13:54] *** Cabanossi joined
[14:02] <skids> jnthn: had any time for any initial thoughts on my "rolevolution" branch?  I'm thinking maybe people will lean towards reversing the sense of the directive so renaming it something like "insist role {} and insist method {}".  Or maybe TimToady would have a better word.

[14:04] *** jonas1 left
[14:10] <jnthn> skids: Not yet, I'm afraid. :( Not really had time for Perl 6 anything this week (except $dayjob bits that happen to be done with Perl 6)

[14:11] <raschipi> I admire Timtoady, he makes the most difficult task on Computer Science look so easy.

[14:13] *** ChoHag left
[14:15] *** wamba joined
[14:16] <llfourn_> skids: what's the rolevolution?

[14:20] *** cdg joined
[14:23] *** lowbro left
[14:24] *** cdg left
[14:24] *** cdg joined
[14:26] <jast> raschipi: naming things?

[14:26] <raschipi> Yeah.

[14:31] <raschipi> The second one in the list being cache invalidation, of course.

[14:33] *** ChoHag joined
[14:36] <Woodi> why cache invalidation is hard ?

[14:38] *** xtreak left
[14:39] <jnthn> llfourn_: https://gist.github.com/skids/18fa6fb1de776400abd43b6e82e9fcc2

[14:39] *** xtreak joined
[14:39] <Geth> ¦ doc: d1f2c6ac97 | (Zoffix Znet)++ | doc/Type/Method.pod6

[14:39] <Geth> ¦ doc: Correct and expand &lastcall docs

[14:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d1f2c6ac97

[14:40] <raschipi> It's a tradeoff between keeping everything consistent and actually getting better performance out of it. How do you know a cache is stale without checking the source or the peers (which is what a cache is meant to avoid, after all).

[14:40] <raschipi> And then doing it without race-conditions.

[14:42] <Woodi> raschipi: I think it's a bit like fighting with physics laws

[14:44] *** xtreak left
[14:46] <Woodi> ok, that's answer why it's hard ;)

[14:47] <DrForr> Alternatively, thinking like a physicist, you have to observe the cache in order to attempt to invalidate it.

[14:50] <skids> (This is going to evolve into a discussion on Lamport clocks and light cones, isn't it?)

[14:53] *** donaldh left
[14:53] <DrForr> Only relatively.

[14:54] <raschipi> I just find it almost unbelivable CPU algorithms have to wait for clock propagation, that's all. People have been researching assynchronous CPUs to get around it.

[14:55] <DrForr> Clock pulses take up a good chunk of the CPU.

[14:56] <timotimo> yeah, it has to be a nice and even tree that gets the clock to all parts at the very same time

[14:56] <skids> I actually think the basic problem might be more solvable by highly syncronous CPUs.

[14:56] <skids> Like a lock location that CPU#1 will only write to on clock cycles that are mod 1, CPU mod 2, etc.

[14:57] <timotimo> cache invalidation is actually really easy. as soon as you've written to the cache, flush the cache.

[14:57] <raschipi> For CPUs, yeah. But CS wants to deal with Caches in general, not just CPU caches.

[14:58] <timotimo> no, for all caches

[14:59] <raschipi> That doesn't solve even a read-only cache, because clients don't subscribe to events necessarily. They just retrieve and keep it in a cache.

[15:01] *** rindolf left
[15:01] *** donaldh joined
[15:02] <raschipi> The answer of course, is that they just use stale data anyway, it's an unsolvable problem in it's most general form. And the joke is that it's easier to solve than naming things.

[15:02] *** cdg left
[15:03] *** cdg joined
[15:04] *** rindolf joined
[15:04] <timotimo> you don't understand my solution

[15:04] <timotimo> when you've written to the cache, immediately clear the cache. problem solved

[15:04] <[Coke]> m: (0..0x1FFF).grep({$_.chr.uninames ~~ /GREEK/}).say

[15:04] <camelia> rakudo-moar 545d82: OUTPUT: «(834 837 880 881 882 883 885 886 887 890 891 892 893 895 900 901 902 904 905 906 908 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 9…»

[15:04] <timotimo> you can never read stale data from the cache

[15:04] <timotimo> because the cache never has data in it

[15:04] <[Coke]> m: (0..0x1FFF).hyper.grep({$_.chr.uninames ~~ /GREEK/}).say

[15:04] <camelia> rakudo-moar 545d82: OUTPUT: «()␤»

[15:06] <[Coke]> shouldn't those be the same?

[15:06] <raschipi> People, I'm going, we'll talk later.

[15:07] *** raschipi left
[15:08] *** xtreak joined
[15:10] <[Coke]> masak: https://gist.github.com/coke/008e6e5e937a2174e442ef258701af7b

[15:12] <[Coke]> masak: uni -n /(random regex)/ doesn't quite work yet, but everything else seems fineish.

[15:12] <timotimo> [Coke]: hyper's broken, though

[15:13] <[Coke]> also need to make DWIM mode DWIMMIER.

[15:13] <[Coke]> timotimo: ok. 

[15:14] *** itaipu joined
[15:14] *** Zoffix joined
[15:16] * [Coke] wonders if he should support "uni -n / 'ROMAN' .* 'HUNDRED' /" as an arbitrary command line.

[15:17] <[Coke]> as opposed to uni -n /'ROMAN'.*'HUNDRED'/

[15:24] *** Khisanth left
[15:26] *** khw joined
[15:27] *** pytuger left
[15:27] <ilmari> [Coke]: note that there's already App::Uni on cpan, which ships a 'uni' command

[15:29] *** gdonald left
[15:29] *** gdonald joined
[15:30] <timotimo> he was already told

[15:33] *** tharkun left
[15:33] *** tharkun joined
[15:34] <ilmari> oh, indeed

[15:35] <moritz> \o

[15:36] * moritz back home

[15:36] * ilmari boggles at Ↄ U+02183 - ROMAN NUMERAL REVERSED ONE HUNDRED

[15:36] <ilmari> does that mean -100?

[15:37] <ilmari> it's not a number as far as unicode is concerned

[15:37] <ilmari> Category: Lu (Letter, Uppercase)

[15:37] *** Khisanth joined
[15:46] *** pytuger joined
[15:46] *** pytuger left
[15:50] <Zoffix> New blog post: "But Here's My Dispatch, So callwith Maybe": https://perl6.party/post/Perl6-But-Heres-My-Dispatch-So-Callwith-Maybe

[15:51] <samcv> unidump: Ↄ

[15:51] <unicodable6> samcv, https://gist.github.com/e2ce1728b26360660cc44b409f389cfe

[15:55] *** Zoffix left
[15:56] *** araraloren joined
[16:00] *** dakkar left
[16:01] <araraloren> m: enum A < C D E >; enum B < C D E>;

[16:01] <camelia> rakudo-moar 3e275d: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'C, D and E'␤    at <tmp>:1␤    ------> 3enum A < C D E >; enum B < C D E>7⏏5;␤»

[16:03] <araraloren> Anyone can help me for this compile error? 

[16:07] *** robertle joined
[16:08] <perlpilot> araraloren: don't do that?

[16:09] *** raschipi joined
[16:11] *** mcmillhj left
[16:12] <jnthn> It's a warning rather than an error

[16:13] <jnthn> And it's because enums automatically export the symbols inside of them into the surroudning scope

[16:15] *** xtreak left
[16:21] <araraloren> jnthn, but rakudo complain this and gave up compile

[16:22] *** zakharyas left
[16:22] *** mcmillhj joined
[16:24] *** zakharyas joined
[16:28] <samcv> ===SORRY!=== Error while compiling:

[16:28] <samcv> Redeclaration of symbol 'A'

[16:29] *** mcmillhj left
[16:29] <samcv> m:  my enum A < C D E >; { my enum B < C D E>; }

[16:29] <camelia> rakudo-moar 3e275d: ( no output )

[16:30] <samcv> just put them in different scope if you have to have enums with the same names

[16:31] <samcv> araraloren, or you can store them into variables

[16:32] <araraloren> That's a slightly inflexible rather than C enum :(  

[16:32] <samcv> m: my $var = my enum B < C D E>; say $var; my $var2 = my enum A < C D E>; say $var2 

[16:32] <camelia> rakudo-moar 3e275d: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'C, D and E'␤    at <tmp>:1␤    ------> 3 say $var; my $var2 = my enum A < C D E>7⏏5; say $var2␤Map.new((:C(0),:D(1),:E(2)))␤Map.new((:C(0),:D(1),:E(2)))␤»

[16:32] <araraloren> No way, rakudo reject this, haha ...

[16:33] <samcv> m: my $a; { $a = enum A < C D E >;}; my $b; { $b = enum B < C D E >; }

[16:33] <araraloren> I put enum inside class now

[16:33] <camelia> rakudo-moar 3e275d: ( no output )

[16:33] <samcv> yeah or do that

[16:34] <samcv> many ways you can do it but in a class souds nicest

[16:34] <samcv> and everybody likes nice programmers

[16:35] <araraloren> ~~ OK thanks

[16:38] *** Cabanossi left
[16:39] <TimToady> if you export the enums, only the colliding ones should be "poisoned" and require qualification

[16:39] *** Cabanossi joined
[16:39] *** domidumont left
[16:39] <TimToady> (one of the ideas we stole from Ada)

[16:41] *** mcmillhj joined
[16:46] *** mcmillhj left
[16:55] <b2gills> m: constant A := do { enum A < C D E >}; constant B := do { enum B < C D E>; }; say A::C; say B::C

[16:55] <camelia> rakudo-moar 3e275d: OUTPUT: «C␤C␤»

[16:55] <b2gills> m: constant A := do { enum A < C D E >}; constant B := do { enum B < C D E>; }; say A::C.perl; say B::C.perl

[16:55] <camelia> rakudo-moar 3e275d: OUTPUT: «B::C␤B::C␤»

[16:55] <b2gills> m: constant A := do { my enum A < C D E >}; constant B := do { my enum B < C D E>; }; say A::C.perl; say B::C.perl

[16:55] <camelia> rakudo-moar 3e275d: OUTPUT: «Could not find symbol '&C'␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[16:56] <b2gills> m: constant A := do { my enum A < C D E >}; say A.perl

[16:56] <camelia> rakudo-moar 3e275d: OUTPUT: «Map.new((:C(0),:D(1),:E(2)))␤»

[16:56] <b2gills> m: constant A := do { my enum A < C D E >}; say A<C>

[16:56] <camelia> rakudo-moar 3e275d: OUTPUT: «0␤»

[16:57] <b2gills> m: constant A := do { my enum A < C D E >}; say A<D>

[16:57] <camelia> rakudo-moar 3e275d: OUTPUT: «1␤»

[16:57] *** araraloren left
[16:57] *** mcmillhj joined
[16:59] *** donaldh left
[17:00] *** itaipu left
[17:01] *** sufrostico left
[17:03] *** mcmillhj left
[17:08] *** AndyDee left
[17:08] *** darutoko left
[17:08] *** MasterDuke left
[17:10] <skids> m: our class A { our enum A is export(:enums) < C D E >};  our class B { our enum B < C D E>; }; { import A; say A::C.perl; }; { import B; say B::C.perl }; { import A :enums; say C.perl }

[17:10] <camelia> rakudo-moar 3e275d: OUTPUT: «A::C␤B::C␤A::C␤»

[17:10] <skids> That's how I'm handling it in my xcb wrapper.

[17:10] *** jast left
[17:11] *** espadrine_ joined
[17:12] *** jast joined
[17:15] *** AndyDee joined
[17:16] *** mcmillhj joined
[17:24] *** zakharyas left
[17:33] <raschipi> huggable: hug me

[17:33] * huggable hugs raschipi

[17:33] *** pistacchio joined
[17:40] *** raschipi left
[17:40] *** grondilu joined
[17:44] *** khw left
[17:47] <[Coke]> do we have a way to interrogate which version of unicode we're using yet?

[17:47] *** sufrostico joined
[17:48] *** AlexDaniel joined
[17:54] <[Coke]> .seen rjbs

[17:54] <yoleaux> I saw rjbs 10 Mar 2017 21:04Z in #perl6: <rjbs>  /win 7

[17:56] *** ilmari_ joined
[17:57] *** z-b joined
[17:57] *** kipd_ joined
[17:57] *** hahainte1net joined
[17:57] *** alnewkir1 joined
[17:59] *** charsbar_ joined
[17:59] *** charsbar left
[17:59] *** ilmari left
[17:59] *** kipd left
[17:59] *** hahainternet left
[17:59] *** alnewkirk left
[17:59] *** charsbar_ is now known as charsbar

[17:59] *** ilmari_ is now known as ilmari

[17:59] *** hahainte1net is now known as hahainternet

[18:00] *** kipd_ is now known as kipd

[18:03] *** cdg left
[18:08] *** Cabanossi left
[18:08] *** Sound joined
[18:09] *** Sound is now known as Guest72951

[18:09] *** Guest72951 left
[18:10] *** Sound_ joined
[18:10] *** Sound_ left
[18:12] *** Cabanossi joined
[18:20] <lucs> Why does it seem to me that all English speakers pronounce "integral" as "intregal"?

[18:28] <geekosaur> not all of us but it's pretty common

[18:35] <[ptc]> as a native, I've always been amazed at the pronunciation of 'Wednesday'; where I come from it sounds more like "Wensday"

[18:37] <hobbs> lucs: I usually hear "intergral", but the short answer is rs are slippery

[18:38] <hobbs> nothing else explains Brett Favre

[18:39] <lucs> hobbs: Hmm... Yeah, I think I've heard it like that too.

[18:40] <lucs> [ptc]: I've never heard Wednesday pronounced other that like you said, "Wensday" :)

[18:40] <hobbs> the only people who consistently say it otherwise are Indian English speakers

[18:40] <hobbs> who pronounce it exactly as written

[18:40] <geekosaur> sometimes you hear the second d but in the wrong place ("wendsday")

[18:41] *** AndyDee left
[18:41] *** pistacchio left
[18:41] <hobbs> (which is pretty amusing, in my book)

[18:41] *** AndyDee joined
[18:41] <[ptc]> lucs: ah well, where I'm from mumbling is part of the accent :-)

[18:41] <lucs> :)

[18:42] <hobbs> (that last bit was about Wednesday, not integral)

[18:42] <[ptc]> fwiw, my version is "innegrl"

[18:42] <lucs> Yikes :)

[18:43] <[ptc]> :-)

[18:43] <hobbs> sounds like Appalachia :)

[18:46] *** Tonik joined
[18:54] *** Cabanossi left
[18:56] *** Cabanossi joined
[18:58] *** labster joined
[18:58] *** kyan joined
[19:00] *** obfusk left
[19:00] *** obfusk_ joined
[19:03] <skids> "nucular" is a verbal tick you may easily acquire if you were exposed to too many evangelical talk radio shows during the 80s.  I don't know where "intergal" would have come from though.

[19:04] *** TEttinger joined
[19:05] *** raschipi joined
[19:13] *** LeCamarade left
[19:14] <[Coke]> (uni) added a -w so you can easily search for things with "CAT" and not get MULTIPLICATION

[19:16] *** sufrostico left
[19:17] *** kyan left
[19:34] *** ugjka is now known as xyk

[19:34] *** xyk is now known as ugjka

[19:40] *** kurahaupo__ joined
[19:42] *** kurahaupo__ is now known as kurahaupo

[19:52] *** bjz joined
[20:02] *** mcmillhj left
[20:07] <gfldex> i used `temp` in real code today the first time

[20:07] *** mcmillhj joined
[20:07] <gfldex> there are so many nice things in Perl 6 I didn't use yet :)

[20:11] <raschipi> What did you use it for?

[20:12] <gfldex> https://github.com/gfldex/perl6-meta6-bin/blob/master/bin/meta6#L148

[20:12] <gfldex> you can't init a container with itself, unless you use temp

[20:14] <raschipi> I see, you're accessing a variable in the outer scope. I was thinking about using temp on parameters and not seeing how it was different from "is copy"

[20:16] *** mcmillhj left
[20:16] <gfldex> m: my $foo = 42; sub s { temp $foo //= $foo ~ ':'; say $foo }; s

[20:16] <camelia> rakudo-moar 70d555: OUTPUT: «42␤»

[20:16] <gfldex> this feels wrong

[20:16] <gfldex> m: my $foo = 42; sub s { temp $foo; say $foo }; s

[20:16] <camelia> rakudo-moar 70d555: OUTPUT: «42␤»

[20:17] <gfldex> temp should first create a copy and then apply the //=

[20:17] *** cdg joined
[20:20] <raschipi> m: my $foo = 42; sub s { temp ($foo //= $foo ~ ':'); say $foo }; s

[20:20] <camelia> rakudo-moar 70d555: OUTPUT: «42␤»

[20:20] *** xfix joined
[20:20] <raschipi> I think temp doesn't happen at runtime.

[20:22] <raschipi> Like "my".

[20:24] *** Peter_R left
[20:26] *** mcmillhj joined
[20:26] *** Peter_R joined
[20:27] *** ChoHag left
[20:31] *** itaipu joined
[20:31] *** setty1 joined
[20:32] *** mcmillhj left
[20:33] *** setty1 left
[20:34] *** bjz left
[20:34] *** LeCamarade joined
[20:35] *** setty1 joined
[20:38] *** gdonald left
[20:38] *** gdonald joined
[20:41] *** mcmillhj joined
[20:44] *** itaipu_ joined
[20:45] <Voldenet> i can't express how much I like the usage of method-name instead of method_name or MethodName

[20:45] <Voldenet> I wish I could use perl6 syntax in .net's world, anyone working on perl6 for it? :P

[20:46] *** mcmillhj left
[20:46] <raschipi> What about $method's-name ?

[20:46] <geekosaur> niecza hasn't been maaintained in a while

[20:46] *** timotimo left
[20:46] *** timo joined
[20:47] *** timo is now known as Guest15399

[20:47] *** Guest15399 left
[20:47] *** itaipu left
[20:47] *** timo1 joined
[20:48] <Voldenet> raschipi: eh, is that even correct? :o

[20:48] <Voldenet> hmmm, that's kind of insane syntax :D

[20:48] <timo1> finally i'm on an up-to-date version of weechat again

[20:48] <Voldenet> but I can see its uses

[20:48] <raschipi> m: my $method's-name = "aaa"; say $method's-name

[20:48] <camelia> rakudo-moar 70d555: OUTPUT: «aaa␤»

[20:49] <AlexDaniel> I've used ' a couple of times

[20:49] <AlexDaniel> It was something like $let's-save

[20:49] <Voldenet> :)

[20:50] <Voldenet> i tend to use it to delimit strings only

[20:50] <raschipi> What's the name of the Unicode property the codepoint needs for Perl6 to allow it in variable's names?

[20:50] <AlexDaniel> raschipi: general category? :P

[20:51] <AlexDaniel> raschipi: https://docs.perl6.org/language/unicode_texas#Alphabetic_Characters

[20:51] <AlexDaniel> m: say ‘π’.uniprop

[20:51] <camelia> rakudo-moar 70d555: OUTPUT: «Ll␤»

[20:51] <AlexDaniel> m: my $πππ = 42; say $πππ

[20:51] <camelia> rakudo-moar 70d555: OUTPUT: «42␤»

[20:52] <AlexDaniel> unidump: π

[20:52] <unicodable6> AlexDaniel, https://gist.github.com/759dd48da1132d599051e678310dad7e

[20:52] <raschipi> m: say ‘'’.uniprop

[20:52] <camelia> rakudo-moar 70d555: OUTPUT: «Po␤»

[20:53] <AlexDaniel> raschipi: ‘gc’ or ‘General_Category’, and uniprop defaults to it

[20:53] <AlexDaniel> I'm pretty sure ' and - are exceptions

[20:53] <raschipi> They are treated differently by the parser, but they do have a property that's looked for everything else.

[20:54] *** grondilu_ joined
[20:54] <Voldenet> m: my $; = 42; say $;

[20:54] <camelia> rakudo-moar 70d555: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of $; variable; in Perl 6 please use real multidimensional hashes␤at <tmp>:1␤------> 3my $;7⏏5 = 42; say $;␤»

[20:54] <Voldenet> m: my $; = 42; say $;

[20:54] <camelia> rakudo-moar 70d555: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of $; variable; in Perl 6 please use real multidimensional hashes␤at <tmp>:1␤------> 3my $;7⏏5 = 42; say $;␤»

[20:54] *** mcmillhj joined
[20:55] <raschipi> They are used as letters in English and other languages, therefore have the property set.

[20:55] *** ggoebel joined
[20:55] <raschipi> I just don't remember the name.

[20:56] *** grondilu left
[20:56] <AlexDaniel> u: ;

[20:56] <unicodable6> AlexDaniel, U+003B SEMICOLON [Po] (;)

[20:56] <AlexDaniel> … something is wrong

[20:57] <AlexDaniel> mc: ‘;’.uniname.say

[20:57] <committable6> AlexDaniel, ¦2015.12: «SEMICOLON»

[20:57] <AlexDaniel> or am I missing something

[20:57] <AlexDaniel> .u ;

[20:57] <yoleaux> U+037E GREEK QUESTION MARK [Po] (;)

[20:57] <raschipi> How do I ask the bot to produce the property tables?

[20:57] <AlexDaniel> raschipi: uniprop: …

[20:57] <AlexDaniel> raschipi: you can include more than one character

[20:57] <raschipi> uniprop: '

[20:58] <AlexDaniel> oh sorry… unidump

[20:58] <raschipi> unidump: '

[20:58] <unicodable6> raschipi, https://gist.github.com/4904e5860a97fe5782a6c5e564a6c1e9

[20:58] *** kurahaupo left
[20:58] *** Tonik left
[20:59] <AlexDaniel> raschipi: fwiw, apostrophe appears here: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Grammar.nqp#L504

[20:59] *** mcmillhj left
[21:00] <raschipi> Like I said, I know they are treated exceptionally by the parser, because of it's other uses in the language.

[21:00] <AlexDaniel> ah, <apostrophe> is also ' :)

[21:01] <raschipi> Found it: Pattern_Syntax , http://www.unicode.org/reports/tr31/

[21:01] *** wamba left
[21:02] <raschipi> Loves, it's time for me to leave. XOXO

[21:02] <Voldenet> m: my Int $int:hungarian-notation'2 = 42; say $int:hungarian-notation'2

[21:02] <camelia> rakudo-moar 70d555: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my Int $int:hungarian-notation7⏏5'2 = 42; say $int:hungarian-notation'2␤    expecting any of:␤        constraint␤        infix␤        infix stopper…»

[21:02] <Voldenet> uh, at least there are limits to insanity

[21:03] <Voldenet> m: my Int $int:hungarian-notation = 42; say $int:hungarian-notation

[21:03] <camelia> rakudo-moar 70d555: OUTPUT: «42␤»

[21:03] <Voldenet> ...not that shallow either :)

[21:06] <timo1> right, you're not allowed to start with a number after a hyphen (or apostrophe)

[21:06] <Voldenet> but I bet colon does something special

[21:06] <timo1> yup

[21:06] *** raschipi left
[21:07] <timo1> it's what we use for &infix:<+> and such

[21:07] *** timo1 is now known as timotimo

[21:07] *** nadim_ joined
[21:07] *** mcmillhj joined
[21:09] *** RabidGravy left
[21:09] *** Cabanossi left
[21:10] <Voldenet> hm, is it invalid to use $type:name as a variable name though?

[21:11] <timotimo> m: my $type:name = 5; my $type:othername = 9;

[21:11] <camelia> rakudo-moar 70d555: ( no output )

[21:11] <timotimo> m: my $type:name = 5; my $type:othername = 9; dd $type:name, $type:othername

[21:11] <camelia> rakudo-moar 70d555: OUTPUT: «Int $type:name = 5␤Int $type:othername = 9␤»

[21:11] <Voldenet> It obviously works. ;)

[21:11] <timotimo> seems to work just fine

[21:11] *** skids left
[21:11] *** Cabanossi joined
[21:12] *** MasterDuke joined
[21:14] *** mcmillhj left
[21:28] *** itaipu_ left
[21:29] <gfldex> m: my $name = 42; my $name:foo = 43; dd ::

[21:29] <camelia> rakudo-moar 70d555: OUTPUT: «PseudoStash.new(("!UNIT_MARKER" => !UNIT_MARKER,"\$!" => Nil,"\$/" => Nil,"\$=finish" => Mu,"\$=pod" => [],"\$?PACKAGE" => GLOBAL,"\$_" => Any,"\$name" => 42,"\$name:foo" => 43,"\$¢" => Nil,"::?PACKAGE" => GLOBAL,:EXPORT(EXPORT),:GLOBALish(GLOBAL)))␤»

[21:30] <gfldex> what is $¢ ?

[21:31] <gfldex> it's in roast, so it's a thing

[21:33] <mst> dollarcent?

[21:34] *** nadim_ left
[21:35] <MasterDuke> the changelog for 2015.09 say: '$¢' in grammars now refers to the current cursor

[21:35] <perlpilot> gfldex: I tend to think of it as the "in-flux" version of $/

[21:35] <timotimo> yeah, it's the same as $/.CURSOR

[21:38] *** bjz joined
[21:39] <Voldenet> a propos, special characters in perl6 are widely used, but is there any good way to use them with regular keyboard on windows?

[21:40] *** itaipu joined
[21:41] <timotimo> there's a page about that on the docs site

[21:41] <Voldenet> except not on windows ;(

[21:41] <timotimo> oh? damn

[21:42] *** grondilu_ is now known as grondilu

[21:42] *** grondilu left
[21:42] *** grondilu joined
[21:45] *** cpage_ left
[21:46] *** dct joined
[21:47] <gfldex> Voldenet: most ppl on windows cheat and use a VM

[21:47] *** mcmillhj joined
[21:49] <Voldenet> using alt + 0171 for « and alt + 0187 for » is kind of painful

[21:49] <Voldenet> also, I use a VM too, but xorg sucks

[21:49] <Voldenet> so I chose not to use it :P

[21:50] <gfldex> Voldenet: that's what I use https://gfldex.wordpress.com/2016/08/31/one-line-of-unicode-at-you-fingertips/

[21:52] *** mcmillhj left
[21:53] *** skink joined
[21:54] *** Cabanossi left
[21:54] <Voldenet> atm I'm using plain << and >> instead, which looks worse but kind of works :)

[21:55] <Voldenet> too bad all methods are bound to using unix tools

[21:55] *** sufrostico joined
[21:55] *** rindolf left
[21:55] <geekosaur> Voldenet, https://github.com/samhocevar/wincompose ?

[21:56] *** pmurias left
[21:56] *** Cabanossi joined
[21:58] <geekosaur> huggable, wincompose :is: https://github.com/samhocevar/wincompose a compose key for Windows, allowing choice of compose key and user-defined compositions

[21:58] <huggable> geekosaur, Added wincompose as https://github.com/samhocevar/wincompose a compose key for Windows, allowing choice of compose key and user-defined compositions

[22:00] *** bjz left
[22:01] <geekosaur> ahahah just discovered one of its predefined bindings uses the konami code for a table flip

[22:01] <Voldenet> heh :D

[22:02] <Voldenet> Hm, I'm yet to learn how to use it though

[22:02] *** ufobat left
[22:03] *** rindolf joined
[22:03] <geekosaur> "compose key" is a unix thing. so <compose> < < gets «

[22:03] *** mcmillhj joined
[22:04] <Voldenet> wincompose comes with too many sequences, and I just need a "perl6" sequence :)

[22:05] <Voldenet> ...or i might just use google japanese ime ★

[22:08] <skink> Who has issues installing Crypt::Bcrypt?

[22:08] <grondilu> off-topic:  rocket launch tonight https://www.youtube.com/watch?v=xsZSXav4wI8

[22:11] *** mcmillhj left
[22:13] <perigrin> isn't this the space tested rocket?

[22:14] <perigrin> (yes yes it is)

[22:14] <labster> yup, I'm excited!

[22:16] * perigrin is on the wrong end of the country for a change

[22:16] <perigrin> :/

[22:18] *** setty1 left
[22:22] *** mcmillhj joined
[22:23] <AlexDaniel> grondilu: another one that is supposed to land back, right?

[22:24] <grondilu> AlexDaniel: I think so

[22:24] <grondilu> there is a "landing" mark on the timeline

[22:27] *** mcmillhj left
[22:28] <Voldenet> skink: I don't have issues, it just plainly does not work for me

[22:28] <Voldenet> > Testing [FAIL]: if:ver('0.1.0'):auth('github:FROGGS')

[22:28] <Voldenet> whatever that should mean

[22:29] *** dct left
[22:31] <perigrin> AlexDaniel: and the one that already did it once.

[22:31] <Voldenet> oh

[22:31] <Voldenet> t/if.t (Wstat: 0 Tests: 1 Failed: 0)

[22:31] <perigrin> basically "can we do it again"

[22:31] <Voldenet>   Parse errors: Bad plan.  You planned 5 tests but ran 1.

[22:33] <skink> Oh, that's roundabout

[22:33] <skink> That's a dependency of Crypt::Random

[22:34] <Voldenet> Yeah, it's /if/

[22:37] <Voldenet> not sure if it's not my setup's problem, but "Cannot find method 'symtable' on object of type GLOBAL", got that too?

[22:37] <skink> Ah, okay zoffix already put a ticket in for that module

[22:38] <Voldenet> indeed

[22:38] <Voldenet> "let's just wait"

[22:38] <skink> Everything actually builds fine for me

[22:38] *** mcmillhj joined
[22:39] *** Cabanossi left
[22:41] *** obfusk joined
[22:41] *** obfusk_ left
[22:41] *** Cabanossi joined
[22:43] *** mcmillhj left
[22:54] <labster> If anyone's still in suspense, successful launch, and success retrieval of first stage.  The second stage of SES-10 is moving from LEO to geostationary orbit.

[22:54] *** mcmillhj joined
[22:59] *** mcmillhj left
[23:03] *** Zoffix joined
[23:05] <Zoffix> skink: it probably works for you 'cause you're on 2017.01 or earlier rakudo. 2017.02+ had changes to some internal features that if.pm6 is actually using.

[23:07] <skink> Yeah that's what I figured

[23:09] *** anant joined
[23:10] *** anant left
[23:10] *** mcmillhj joined
[23:14] *** cdg left
[23:15] *** mcmillhj left
[23:17] *** Zoffix left
[23:24] *** AlexDaniel left
[23:31] *** skink left
[23:34] *** rindolf left
[23:38] *** skids joined
[23:39] *** itaipu left
[23:45] *** espadrine_ left
