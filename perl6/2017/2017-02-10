[00:04] *** cpage_ joined
[00:04] *** pyrimidine left
[00:16] *** Sgeo joined
[00:19] *** labster left
[00:27] *** baest left
[00:29] <timotimo> https://github.com/timo/SDL2_Raw-p6 - added screenshots of example code into the readme :)

[00:29] <timotimo> (and also, the readme is completely new)

[00:30] <IOninja> \o/

[00:30] <IOninja> lookin' sweet

[00:32] <timotimo> a little bit :3

[00:35] <timotimo> i took extra care to make the screenshots as tiny as they can get

[00:36] <timotimo> it would have been better if the window didn't have an icon, or if the upper-right controls didn't have a gradient to them

[00:36] <timotimo> OSLT

[00:37] *** baest joined
[00:40] *** ggoebel joined
[00:53] *** geekosaur left
[00:53] <timotimo> tony-o: are you the right person to ask about modules.zef.pm, or is it ugexe?

[00:54] *** aborazmeh joined
[00:54] *** aborazmeh left
[00:54] *** aborazmeh joined
[00:55] *** geekosaur joined
[00:58] <timotimo> ah!

[00:58] <timotimo> i didn't notice the big "About" button at the top

[00:59] *** labster joined
[00:59] *** d^_^b joined
[01:00] *** pyrimidine joined
[01:01] <tony-o> i'd be the guy

[01:01] <tony-o> timotimo: what's up?

[01:03] <timotimo> submitted all the issues just now :)

[01:04] *** felher joined
[01:05] *** pyrimidine left
[01:07] *** jpl_ joined
[01:07] <timotimo> i think i'm done with uploading issues for now

[01:07] <tony-o> timotimo++

[01:07] <tony-o> i'll take a look later tonight or tomorrow

[01:07] <timotimo> cool

[01:08] <tony-o> glad to know someone is using modules.zef.pm aside from me 

[01:08] <timotimo> right now you can put XSS onto modules.zef.pm, but the site isn't security-critical, so ... :)

[01:09] <tony-o> XSS?

[01:10] <tony-o> oh it's getting a lot of traffic apparently, i haven't looked at the traffic in a few months

[01:10] <timotimo> someone on hackernews linked to it from the perl6 thread

[01:10] <timotimo> well, i can put random html into my code and when somebody browses my code, their browser will execute that html

[01:10] *** notostraca is now known as TEttinger

[01:11] <timotimo> do you have some kind of monitoring up where i could look at your stats? like a collectd-web or munin or something?

[01:11] <timotimo> i haven't looked at collect.p6c.org in a while :(

[01:13] *** jpl__ joined
[01:13] *** jpl__ left
[01:13] *** jeff_linahan joined
[01:13] *** jeff_linahan left
[01:14] *** jpl_ left
[01:14] *** jpl_ joined
[01:14] <jpl_> hey guys it's jeff

[01:14] <jpl_> gotta find a handle that fits

[01:15] <timotimo> o/

[01:16] <timotimo> what is it that you need a handle on?

[01:16] <jpl_> so I told some people about perl6 they were interested

[01:16] <jpl_> irc

[01:16] <jpl_> jeffythedragonslayer doesn't fit

[01:16] <timotimo> oh, i see

[01:16] <timotimo> jeffyslaysdragons

[01:16] <timotimo> what's the limit on freenode anyway?

[01:17] <jpl_> it cut me off at jeffythedragonsl

[01:17] <timotimo> then it'd cut the s at the end of my suggestion

[01:17] <jpl_> sl is steam locomotive when you type ls backwards

[01:17] <timotimo> yes! :D

[01:18] <jpl_> if I'm ever in an action movie there needs to be a scene when I'm riding a dragon and jump off onto moving train

[01:18] <timotimo> hm, a train heist?

[01:18] <jpl_> lol

[01:18] <geekosaur> yes, 16 is the limit. also limited character set

[01:19] <TimToady> drat, was gonna go for jeffyÊÆ∫Èæç

[01:19] <jpl_> that works :)

[01:20] <jpl_> when I worked at jpl people thought I had stolen a laptop because my bash prompt was my username: jpl

[01:21] <timotimo> you worked at the jet propulsion laboratory?

[01:21] <TimToady> wow!

[01:21] <jpl_> just an intern

[01:21] <timotimo> pretty cool

[01:21] <geekosaur> otoh an other channel I'm in has a MarvinPA (as abbrev for "the Paranoid Android")

[01:21] * TimToady was just an extern :)

[01:22] <timotimo> heh

[01:22] <hobbs> but not a volatile

[01:22] <TimToady> JPL's a cool place, you could go to lectures by visiting guests every day and never get a lick of work done...

[01:22] <timotimo> jffydrgnslr

[01:22] <jpl_> they should add an extern "TimToady" to embed perl code in C++

[01:23] * TimToady also saw Maggie Thatcher at JPL

[01:23] <timotimo> the thatcher that's known for destroying all the infrastructure of great britain?

[01:23] <jpl_> that's pretty cool

[01:23] <TimToady> well, they didn't let her talk, it was just a walk-through :)

[01:24] <timotimo> OK

[01:24] <jpl_> I saw Bill Nye in pasadena give a speech

[01:25] <TimToady> I think Bill Nye wasn't even born yet when I was there :P

[01:25] *** aborazmeh left
[01:26] <TimToady> actually, he's only a year younger than me :)

[01:27] <jpl_> TimToady: I honestly thought maybe you weren't developing perl anymore when I came across your website a couple years ago

[01:28] <TimToady> it's a bit out of date, but I've been too busy developing perl to update it :)

[01:29] <jpl_> oh don't get me wrong I love the bare html look

[01:30] <jpl_> I just saw http://wall.org/~larry/perl.html wasn't found and thought you weren't working on it

[01:34] <tony-o> timotimo: i have google analytics, i can add you to the site if you'd like

[01:35] <tony-o> timotimo: i have no idea what i would do with the info

[01:36] <timotimo> oh, cool

[01:36] <timotimo> i also have no idea :)

[01:36] <timotimo> but i do like to look at graphs for 10 seconds and then forget i ever did

[01:37] <tony-o> 19:54 < ugexe> yeah probably needs to be setup eventually

[01:37] <tony-o> oops

[01:38] <tony-o> http://i.imgur.com/RfMDfNs.png

[01:39] <timotimo> interesting, 3 japanese sessions were counted

[01:39] <tony-o> strangely i have a lot of japanese/korean followers on social media

[01:39] <jpl_> japanese was actually the first foreign language I got interested in

[01:40] <jpl_> cause I'm a weeaboo

[01:40] <timotimo> that's fine

[01:40] <tony-o> i don't know any japanese or korean

[01:40] <tony-o> and the german has gone by the wayside because there aren't many in california

[01:40] <jpl_> well you start with my name ÊÆ∫Èæç

[01:41] <hobbs> tony-o: move to Texas ;)

[01:41] <tony-o> no thanks

[01:41] <tony-o> just spent 3 of every 5 weeks in houston :-)

[01:42] <hobbs> okay, PA then. Much nicer. :)

[01:42] <tony-o> i would definitely go back to the midwest

[01:42] <tony-o> PA isn't bad

[01:42] *** jpl_ left
[01:43] *** jeffythedragonsl joined
[01:43] *** jeffythedragonsl left
[01:44] *** yqt left
[01:45] *** jeffythedragonsl joined
[01:48] *** pyrimidine joined
[01:49] <jeffythedragonsl> I'm from PA

[01:49] <MasterDuke> jeffythedragonsl: same here (originally)

[01:50] <TimToady> .oO(Palo Alto)

[01:50] <TimToady> .oO(Panama)

[01:50] <jeffythedragonsl> in maryland now

[01:51] <TimToady> my son used to live in silver spring

[01:51] <MasterDuke> also in md now

[01:56] *** jeffythedragonsl left
[01:57] *** pyrimidine left
[01:59] <tony-o> twinsies

[02:00] *** jeffythedragonsl joined
[02:01] <jeffythedragonsl> freenode not accepting unicode in nicknames *sigh*

[02:02] <tony-o> erroneous

[02:02] <hobbs> jeffythedragonsl: which bit of PA?

[02:02] <jeffythedragonsl> collegeville

[02:03] <jeffythedragonsl> only college in collegeville is ursinus though

[02:03] <hobbs> but it's a very collegial atmosphere

[02:04] <hobbs> I used to go down to King of Prussia if I wanted to see a movie REALLY BIG or gawk at stuff I couldn't afford in the Apple Store

[02:05] <tony-o> king of prussia is where i was in PA

[02:05] <tony-o> for SAP -

[02:05] <jeffythedragonsl> imax is great

[02:06] *** kaare__ left
[02:07] * hobbs lived in Monroe County for 15 years

[02:07] <jeffythedragonsl> i had a friend put a python script that printed "gates>jobs" in a loop or something at that store

[02:08] <jeffythedragonsl> they couldn't figure out how to kill it and offered him a job

[02:13] <tony-o> the people at the apple store?

[02:15] <tony-o> while [ 1 == 1 ]; do echo 'gates>jobs'; done;

[02:15] *** baest left
[02:16] <tony-o> i'm sure there's a shorter way

[02:16] <jeffythedragonsl> he made it a bit harder to kill than that :)

[02:17] <tony-o> oh he put some effort into it 

[02:17] <tony-o> i used to like renaming the 'recycle bin' at best buy

[02:17] *** kaare__ joined
[02:17] *** cyphase joined
[02:18] <hobbs> tony-o: "while true", no need to get your test operators out :)

[02:18] <jeffythedragonsl> while true works in zsh too

[02:19] <tony-o> got too fancy

[02:20] *** gdonald left
[02:20] <geekosaur> or while :

[02:21] *** gdonald joined
[02:23] <tony-o> funny how much time can be spent focuing on something so trivial

[02:23] <tony-o> focusing

[02:24] *** sufrostico left
[02:25] *** labster left
[02:30] <IOninja> .oO( I bet they're sick of sinuses jokes at ursinus college... )

[02:31] *** bpmedley joined
[02:31] *** baest joined
[02:32] <Geth> ¬¶ specs: c6cdaff34d | (Zoffix Znet)++ | v6d.pod

[02:32] <Geth> ¬¶ specs: Add reminder to un-LTA log(42, 1) error

[02:32] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/commit/c6cdaff34d

[02:33] <Geth> ¬¶ specs: c112fa54a8 | (Zoffix Znet)++ | v6d.pod

[02:33] <Geth> ¬¶ specs: )

[02:33] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/commit/c112fa54a8

[02:34] <IOninja> So, what's the acronym for making LTA stuff Awesome...?

[02:35] <IOninja> ATB... "make error Awesomer Than Before"

[02:35] <IOninja> And what's an error that is not LTA?

[02:35] <timotimo> PDG? Pretty Damn Good?

[02:36] *** jeffythedragonsl left
[02:37] <hobbs> MTLTA

[02:38] <IOninja> I like PDG :D

[02:39] *** atweiden-air joined
[02:42] <samcv> hmm so 9482 in base -10 equals -8678

[02:42] <samcv> i got negative bases from -1 to -10 working

[02:42] <hobbs> balanced ternary or nothing at all

[02:43] <samcv> heh

[02:44] <samcv> hobbs, what is that, 0,1,2 where 1 is 1 and 2 is -1?

[02:44] *** baest left
[02:44] <hobbs> pretty much

[02:44] *** baest joined
[02:44] <samcv> cool

[02:45] <hobbs> usually you write the -1 as an upside-down or crossed-out 1

[02:46] <hobbs> it has a few interesting mathematical properties

[02:46] <samcv> u: upside down number one

[02:46] <unicodable6> samcv, Found nothing!

[02:47] <samcv> u: 1

[02:47] <unicodable6> samcv, U+0001 <control-0001> [Cc] (control character)

[02:47] <unicodable6> samcv, U+0010 <control-0010> [Cc] (control character)

[02:47] <samcv> wtf

[02:47] <samcv> not what i wanted

[02:47] <samcv> m: '1'.uniname.say

[02:47] <camelia> rakudo-moar f569c4: OUTPUT¬´DIGIT ONE‚ê§¬ª

[02:47] <samcv> u: digit one

[02:47] *** ilbot3 joined
[02:47] *** ChanServ sets mode: +v ilbot3

[02:48] <hobbs> unicode usually uses "turned" for something that's been rotated 180

[02:48] <timotimo> also for the undead

[02:48] <hobbs> but only seems to have TURNED DIGIT 2 and TURNED DIGIT 3

[02:48] <hobbs> no 1 :)

[02:48] <unicodable6> samcv, U+0031 DIGIT ONE [Nd] (1)

[02:48] <unicodable6> samcv, U+0661 ARABIC-INDIC DIGIT ONE [Nd] (Ÿ°)

[02:49] <unicodable6> samcv, https://gist.github.com/56b630e8a3e84dbc7f95af6677bf25a3

[02:49] <timotimo> it probably used to have only ^2 and ^3

[02:49] <timotimo> and then the turned variants were introduced for some reason. and then the rest of ^1, ^4, ...

[02:49] * timotimo maximum shrug

[02:50] <timotimo> unicode consortium giveth, unicode consortium taketh away

[02:50] <hobbs> mostly it giveth emoji

[02:50] <unicodable6> samcv, https://gist.github.com/ae64845843cde54a29676220243796b6

[02:50] <samcv> what it taketh away?

[02:50] <timotimo> dunno

[02:50] <TimToady> I usually write it with +, 0, and -

[02:50] <timotimo> i just accept my fate kneeling down

[02:51] <hobbs> TimToady: sensible!

[02:51] *** cdg_ left
[02:52] *** cdg joined
[02:53] *** pyrimidine joined
[02:56] *** baest left
[02:59] *** pyrimidine left
[03:01] *** baest joined
[03:03] *** jeffythedragonsl joined
[03:04] *** xtreak joined
[03:14] *** labster joined
[03:29] *** cdg left
[03:33] *** jeffythedragonsl left
[03:41] *** noganex joined
[03:53] *** Eddward joined
[03:53] <Eddward> samcv: Hi.  Are you able to see an attachment on issue 525?

[03:53] <yoleaux> 8 Feb 2017 10:35Z <samcv> Eddward: I am told if you open the file with :enc<utf8-c8>, or you can rename the file, ($file).copy($file.Str.encode('utf8-c8').decode('utf8')) where $file is a IO::Path obj

[03:53] <samcv> hi Eddward 

[03:54] <Eddward> I tried to upload a recreate script.  I don't think it worked.

[03:54] <samcv> nope i can't. how big is the file

[03:54] <samcv> and is it just one or multiple

[03:55] <samcv> or is it just a text file?

[03:55] <Eddward> 50k

[03:55] <Eddward> It's a zip with 4 files.

[03:55] <Eddward> It wouldn't let me just upload the script.  It only like certain file types.

[03:56] <samcv> try uploading again

[03:56] <samcv> or rename from like foo.p6 to foo.p6.txt

[03:56] <samcv> but i think zips work

[03:56] <Eddward> It created a link, but it just links back to the issue.

[03:56] <Eddward> I'll try again.

[03:56] <samcv> yeah the link got messed up

[03:56] <samcv> edit the post and try uploading again

[03:57] <Eddward> ugh.  I'm getting the "something went really wrong" thing again.

[03:59] <Eddward> I'm trying to find a pastebin for binaries.

[04:02] <Eddward> Does this work for you?  http://filebin.ca/3Bs49AZXK4GX/recreate.zip

[04:02] <samcv> yep

[04:03] *** atweiden-air left
[04:03] <Eddward> cool.  I added the link to the issue.

[04:03] *** atweiden joined
[04:05] <Eddward> oh.  I should have added :bin to the slurp()s I bet.

[04:05] <samcv> no, just :enc('utf8-c8')

[04:05] <samcv> so it doesn't put the unicode into NFC

[04:06] <Eddward> Will that force everything to be utf8-c8?

[04:07] <Eddward> I'm afraid I don't really even know what utf8-c8 or NFC really are.  I'm just worried I'll fix this file and potentially break others.

[04:07] <samcv> yeah. ok well let me try it

[04:08] <atweiden> i've narrowed down a role-related error message that i don't comprehend at https://github.com/atweiden/hxc

[04:08] <Eddward> Like if I had a file with the 3 byte u and the 2 byte u, would it handle both?

[04:08] <atweiden> Method 'bullet-point:sym<->' must be resolved by class HXC::Parser::Grammar because it exists in multiple roles (HXC::Parser::Grammar::Paragraph, HXC::Parser::Grammar::ListItem, HXC::Parser::Grammar::ListBlock)

[04:08] <atweiden> what's the proper way to fix this?

[04:09] <samcv> Eddward, it will retain all the data

[04:09] <samcv> and if you try and open that file it will work too if the file's not in NFC form

[04:09] <samcv> NFC is canonical unicode representation, lets say it's official Correct Way‚Ñ¢ to store unicode

[04:10] <samcv> but some characters like ≈≠ can be stored as two characters, but the NFC form is only one codepoint

[04:10] <samcv> stored as two codepoints i mean

[04:10] <samcv> i'm installing the modules you are using Eddward 

[04:10] *** labster left
[04:11] <Eddward> ok.  I'm using star from January

[04:15] <Eddward> like this?  slurp "$directory/expected.txt", :enc('utf8-c8')

[04:15] <samcv> ok what is this program supposed to do

[04:15] <samcv> yep

[04:16] <Eddward> It's still writing a 2 byte U instead of the 3 byte.

[04:16] <samcv> how are you writing the file

[04:16] <samcv> oh you need spurt :enc('utf8-c8'

[04:17] <Eddward> oh.  I did the slurp, not the spurt.

[04:17] <skids> atweiden: if it is not a diamond problem, adding an "is default" to one of the rules might work.

[04:18] <Eddward> same thing:      spurt "$directory/found.txt", $unescaped-data, :enc('utf8-c8');

[04:18] <samcv> ok but what are you doing

[04:18] <samcv> what is what you want the result to be

[04:19] <samcv> how do i check what you're checking to determine this

[04:19] <samcv> do you want expected.txt and found.txt to be the same?

[04:19] <Eddward> I cd into recreate-525/ and run ./recreate.pl6

[04:19] <Eddward> Then I open found.txt and expect.txt in a hex editor.

[04:19] <samcv> ok

[04:20] <samcv> you want found.txt and expect.txt to be the same contents

[04:20] <samcv> sec now that i know what you want the result to be i can do this lol

[04:20] <Eddward> The script will print good or bad if it thinks it worked or not.  I just just with the hex editory because I'm not sure I trust what I'm doing in the script to correctly compare them.

[04:20] <Eddward> Yes.

[04:21] <Eddward> expected.txt is the output of ls with file:// added and the newline removed.

[04:21] <Eddward> I can get the same thing in perl5.

[04:21] <samcv> ok so you are using DBIish to get the entry?

[04:21] <Eddward> Yes.

[04:22] <samcv> ok. so it's DBIish that's normalizing the text

[04:22] <Eddward> sample.db is a pruned banshee.db.

[04:22] <atweiden> skids: diamond problem?

[04:22] <samcv> sec

[04:22] <Eddward> I guess.  DBI has the the string URI escaped hex codes.

[04:22] <skids> m: role B does A { method foo { } }; role C does A { method foo { } }; role D does C does B { }; D.new; # long-standing problem with roles

[04:22] <camelia> rakudo-moar 301bcf: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Invalid typename 'A'‚ê§at <tmp>:1‚ê§------> 3role B does A7‚èè5 { method foo { } }; role C does A { met‚ê§¬ª

[04:22] *** zakharyas joined
[04:23] <skids> atweiden: ^^

[04:23] <skids> oops

[04:23] <Eddward> I think uri_unescape() is creating the normalized u.

[04:23] <samcv> hm k

[04:23] <samcv> second

[04:24] <samcv> ok so that makes it easier then

[04:24] <skids> m: role A { method foo { } }; role B does A { method foo { } }; role C does A { method foo { } }; role D does C does B { }; D.new; # long-standing problem with roles

[04:24] <camelia> rakudo-moar 301bcf: OUTPUT¬´Method 'foo' must be resolved by class D because it exists in multiple roles (C, B)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[04:24] <samcv> if it's just URI::Escape

[04:24] <skids> atweiden: It isn't supposed to be that way.

[04:25] <Eddward> That's if I'm guessing right.  I'm still not sure I understand what's happening.

[04:25] <atweiden> skids: where would one add the `is default` ?

[04:26] <skids> Actually I tried it doesn't help.

[04:26] <skids> Neither does my old workaround anymore.

[04:26] <skids> :-(

[04:26] <skids> m: role A { multi method foo ($self: :$diamond? where {True}) { } }; role B does A { }; role C does A { }; role D does C does B { }; D.new; # old workaround

[04:26] <camelia> rakudo-moar 301bcf: OUTPUT¬´Multi method 'foo' with signature :($self: :$diamond where { ... }, *%_) must be resolved by class D because it exists in multiple roles (C, B)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[04:27] <samcv> hmm trying to find source of uri escape

[04:27] <Eddward> On a side note, I might be safer if you default $dbfile to "$directory/sample.db".  I forgot that.

[04:27] <Eddward> Then you don't have to be in the directory.

[04:28] <Eddward> rakudo-star-2017.01/modules/uri/lib/URI/Escape.pm

[04:28] <Eddward> That's where I find it in the star directory.

[04:29] <atweiden> skids: does something need doing in rakudo?

[04:29] <Eddward> https://github.com/moritz/perl6-all-modules/blob/master/perl6-community-modules/uri/lib/URI/Escape.pm

[04:29] <samcv> well i have 175 vs 176 now

[04:29] <samcv> but i maybe messed it up

[04:29] <samcv> give me a few mins ok

[04:31] <skids> atweiden: Yeah, it's a skip in roast. RT#12474

[04:31] <Eddward> yep

[04:31] <skids> oops wrong paste

[04:31] <skids> RT#124749

[04:31] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=124749

[04:32] <skids> (and it's been hard to get a firm answer on the same problem for attributes)

[04:32] *** labster joined
[04:32] <samcv> ok i fixed it Eddward 

[04:32] <Eddward> cool!

[04:32] <Eddward> What's the change?

[04:33] <Eddward> I'll try it on the larger library.

[04:33] <Eddward> uri-unescape()?

[04:33] <samcv> wait hold on

[04:33] <samcv> yeah i'm working on it

[04:34] <Eddward> ok

[04:34] <skids> atweiden: though I'm not sure about the second test in that roast block WRT punning/inheritence.

[04:37] *** aborazmeh joined
[04:37] *** aborazmeh left
[04:37] *** aborazmeh joined
[04:37] *** Cabanoss- joined
[04:41] *** agentzh left
[04:41] *** Cabanoss- is now known as Cabanossi

[04:45] <samcv> ok i see what's happening

[04:45] <samcv> the unescaper is unescaping one character at a time i think

[04:45] <samcv> so replaces the character in the string, then goes to the next char

[04:45] <atweiden> there is more than one way to do it, thanks anyway skids

[04:45] <samcv> and it ends up getting normalized because it's not doing it at once

[04:46] <samcv> .subst(:g, / [ '%' (<.xdigit> ** 2 ) ]+ /, -> $/ {

[04:46] <samcv>             Buf.new($0.flatmap({ :16(~$_) })).decode($enc)

[04:46] <samcv>         })

[04:46] <samcv> this is what i'm doing now, and $enc is 'utf8-c8'

[04:47] <Eddward> ok.  I'll try that in a minute....

[04:47] <samcv> well it doesn't work :) i'm working on a solution

[04:48] <samcv> ah ok i see

[04:49] <samcv> because the character before the diacritic is not encoded with the uri escaping, we add the diacritic to it, and perl 6 does NFC

[04:49] *** pyrimidine joined
[04:49] <samcv> so even decoding the buff with utf8-c8 doesn't work. because a lone diacritic is the same in NFC form, it's only attached to something that it's different

[04:50] <Eddward> Well, you understand it.  A solution doesn't have to come today.

[04:50] <samcv> ok. i will eventually figure it out :)

[04:51] <samcv> and then hopefully we can update uri-unescape so that it can do utf8-c8

[04:51] *** AlexDaniel left
[04:52] <Eddward> cool.  Thanks for looking at it.  Sorry to be such a pest.

[04:52] <samcv> no problem. it's a real world problem that needs solutions :)

[04:54] <Eddward> I'm going to drop for a while.  I have some errands to run before midnight.

[04:54] <samcv> kk

[04:54] *** Eddward left
[04:54] *** pyrimidi_ joined
[04:54] *** pyrimidine left
[04:56] *** BenGoldberg left
[04:56] *** AlexDaniel joined
[04:57] *** atweiden left
[04:59] *** pyrimidi_ left
[05:01] *** AlexDaniel left
[05:03] *** abruanese left
[05:05] *** eroux joined
[05:05] *** gdonald left
[05:06] *** gdonald joined
[05:06] *** abruanese joined
[05:06] *** dogbert11 joined
[05:07] *** Cabanossi left
[05:07] *** Cabanossi joined
[05:09] *** Actualeyes joined
[05:09] *** wamba joined
[05:11] *** atweiden joined
[05:12] *** xtreak left
[05:13] *** xtreak joined
[05:18] *** atweiden left
[05:19] *** xtreak left
[05:24] *** xtreak joined
[05:30] *** eroux left
[05:31] *** eroux joined
[05:35] *** aborazmeh left
[05:36] *** curan joined
[05:37] *** circ-user-DyWuw joined
[05:41] <samcv> well i actually got it. heh

[05:41] <samcv> pretty hacky

[05:48] *** eroux left
[05:50] *** pyrimidine joined
[05:54] *** eroux joined
[05:55] *** pyrimidine left
[05:55] *** cibs joined
[06:05] *** labster left
[06:13] *** eroux left
[06:22] *** agentzh joined
[06:29] *** aborazmeh joined
[06:29] *** aborazmeh left
[06:29] *** aborazmeh joined
[06:31] *** darutoko joined
[06:32] *** agentzh left
[06:33] *** agentzh joined
[06:37] *** aborazmeh left
[06:48] *** pyrimidine joined
[06:51] *** RabidGravy joined
[06:53] *** pyrimidine left
[06:54] *** pyrimidine joined
[06:55] *** pyrimidi_ joined
[06:55] *** pyrimidine left
[06:55] *** abraxxa joined
[06:59] *** pyrimidi_ left
[07:02] *** itaipu left
[07:04] *** brrt joined
[07:06] *** abraxxa left
[07:16] *** nebuchadnezzar joined
[07:21] *** brrt left
[07:21] *** eiro joined
[07:21] <eiro> hello everyone

[07:28] <masak> heiro! \o

[07:29] *** abraxxa joined
[07:36] *** cpage_ left
[07:40] *** wamba left
[07:44] *** faraco joined
[07:46] *** circ-user-DyWuw left
[07:56] *** pyrimidine joined
[08:00] *** bjz joined
[08:01] *** pyrimidine left
[08:03] *** brrt joined
[08:09] *** ufobat joined
[08:12] *** labster joined
[08:17] *** bjz left
[08:25] *** rindolf joined
[08:26] *** circ-user-DyWuw joined
[08:27] *** wamba joined
[08:28] *** cpage_ joined
[08:31] *** circ-user-DyWuw left
[08:31] *** abraxxa left
[08:33] *** bjz joined
[08:46] *** xtreak left
[08:47] *** xtreak joined
[08:48] *** xtreak left
[08:52] *** cgfbee joined
[08:58] *** pyrimidine joined
[09:03] *** pyrimidine left
[09:05] *** donaldh joined
[09:13] *** abraxxa joined
[09:16] *** pyrimidine joined
[09:21] *** pyrimidine left
[09:25] *** [particle] joined
[09:33] *** xtreak joined
[09:38] *** Xliff joined
[09:38] <Xliff> \o

[09:39] <faraco> o/

[09:39] <Xliff> Does anyone know if Perl6 can read P5's Storable files?

[09:39] <DrForr> Through Inline::Perl5, yes.

[09:40] <Xliff> Kinda defeats the purpose of porting a Perl5 module, yes?

[09:40] <Xliff> But I was afraid that was to be the case.

[09:40] <Xliff> May want to convert those datafiles to JSON or something.

[09:41] <Xliff> DrForr: You aren't aware of a native Perl6 solution?

[09:41] <DrForr> It's entirely possible for Perl 6 to read Perl 5 Storable format files, yes.

[09:41] <DrForr> I don't think anyone's written a module to do that yet, however.

[09:41] <Xliff> Ah.

[09:42] <DrForr> There's PerlStore, which is a Perl 6 format.

[09:42] <Xliff> Right, but I am trying to port a Perl 5 module to Perl 6 which has data in Perl 5's Storable format.

[09:43] <DrForr> Okay, cool.

[09:45] <Xliff> So I will look into PerlStore. 

[09:45] <Xliff> Because looking at Storable's code made my head hurt.

[09:45] <DrForr> My followup question would be: How often are you going to want to migrate Perl 5 data to Perl 6? And wouldn't a converter for that data that uses Inline::Perl5, reads the storable format and then dumps out Perl 6 format be easier than doing bit-for-bit compatible Storable code?

[09:45] <Xliff> Dead ended at what I expect is an XS routine.

[09:46] <DrForr> Yes, Storable isn't pure Perl 5.

[09:46] <Xliff> LOL! Your followup whas what I just decided to do.

[09:47] <DrForr> use Storable:from<Perl5>; my $x = Storable.new($filename); "file".put($x.perl); # or something similar.

[09:47] <Xliff> Yes. That's the nutshell.

[09:49] *** bjz left
[09:50] *** Ven joined
[09:50] *** zakharyas left
[09:51] *** zakharyas joined
[09:53] <Xliff> Well.... "use Storable:from<Perl5>" chokes

[09:54] <Xliff> $ perl6 -e 'use Storable:from<Perl5>;'

[09:54] <Xliff> ===SORRY!===

[09:54] <Xliff> Type check failed in binding to $handle; expected CompUnit::Handle but got Sub (sub EXPORT (*@args) {...)

[09:54] <Xliff> Bug?

[09:54] <Xliff> Lemme try something else;

[09:56] *** zakharyas left
[09:57] *** gregf_ joined
[09:58] <faraco> star: use Storable:from<Perl5>

[09:58] <camelia> star-m 2016.10: OUTPUT¬´===SORRY!===‚ê§Please install Inline::Perl5 for Perl 5 support. ‚ê§¬ª

[09:59] <faraco> star: use LWP::Useragent

[09:59] <camelia> star-m 2016.10: OUTPUT¬´===SORRY!===‚ê§Could not find LWP::Useragent at line 1 in:‚ê§    /home/camelia/.perl6‚ê§    /home/camelia/star-2016.10/share/perl6/site‚ê§    /home/camelia/star-2016.10/share/perl6/vendor‚ê§    /home/camelia/star-2016.10/share/perl6‚ê§    CompUnit::Repository:‚Ä¶¬ª

[09:59] *** ocbtec joined
[10:04] *** donaldh left
[10:06] <Xliff> I may have to go back to the original author for the raw data.

[10:07] <Xliff> Recursion limit of 1000 exceeded at /usr/lib/i386-linux-gnu/perl/5.24/Data/Dumper.pm line 233

[10:07] *** wamba left
[10:08] *** xtreak_ joined
[10:09] *** pyrimidine joined
[10:10] *** xtreak left
[10:14] *** pyrimidine left
[10:18] <Xliff> Well, I can load the data in Perl5, but it's bloody recursive.

[10:19] *** ccntrq joined
[10:21] *** donaldh joined
[10:22] *** bjz joined
[10:35] *** Ven left
[10:37] *** wamba joined
[10:37] *** bjz left
[10:40] <Xliff> OK. Too tired to suss this out any further. I know I can load the data via "use Inline::Perl5; my $p5 = Inline::Perl5.new; $p5.call("use Storable; my $h = retrieve($filename)")

[10:40] <Xliff> The problem is figuring out the bloody structure because it looks like endless arrays.

[10:44] *** jjido joined
[10:44] *** TEttinger left
[10:48] *** jjido left
[10:57] <DrForr> Xliff: use Inline::Perl5; use Storable:from<Perl5>; my $s = Storable.new(...);

[11:00] <DrForr> https://github.com/niner/Inline-Perl5 # The SYNOPSIS is pretty clear.

[11:00] <DrForr> use Storable:from<Perl5> <retrieve>; # import retrieve() from Storable.

[11:02] *** patrickz joined
[11:04] *** andrzejku joined
[11:09] <Xliff> DrForr: I mentioned earlier that method was a no go:

[11:09] <Xliff> $ perl6 -e 'use Storable:from<Perl5> <retrieve>; my $h = retrieve("perl5/english")'

[11:09] <Xliff> ===SORRY!===

[11:09] <Xliff> Type check failed in binding to $handle; expected CompUnit::Handle but got Sub (sub EXPORT (*@args) {...)

[11:09] *** donaldh left
[11:10] <Xliff> As a matter of fact, I can boil that down to "use Storable:from<Perl5>"

[11:10] <Xliff> Is that a bug?

[11:11] *** pyrimidine joined
[11:16] *** pyrimidine left
[11:23] *** xnhp0320 joined
[11:23] *** xnhp0320 left
[11:23] *** cpage_ left
[11:24] *** donaldh joined
[11:31] *** espadrine joined
[11:36] *** llfourn joined
[11:40] *** donaldh left
[11:42] *** xtreak_ left
[11:43] <DrForr> Looks that way, though I'd check the test suite to make sure the documentation hasn't come ad rift from the actual code.

[11:48] *** faraco left
[11:52] *** pyrimidine joined
[11:54] *** patrickz left
[11:56] *** labster left
[11:56] *** pyrimidine left
[11:56] *** pyrimidine joined
[12:01] *** cpage_ joined
[12:01] *** pyrimidine left
[12:12] *** sufrostico joined
[12:15] *** thundergnat joined
[12:16] *** Ven joined
[12:17] <thundergnat> .tell samcv Take a look at http://rosettacode.org/wiki/Negative_base_numbers#Perl_6 for negative base number for bases -2..-36.

[12:17] <yoleaux> thundergnat: I'll pass your message to samcv.

[12:17] *** thundergnat left
[12:18] *** curan left
[12:19] * DrForr contemplates negabinary, balanced ternary and imaginary bases.

[12:27] *** gdonald left
[12:27] *** gdonald joined
[12:28] *** Ven left
[12:28] *** infrabyte joined
[12:28] *** infrabyte left
[12:29] *** sena_kun joined
[12:29] *** wamba left
[12:30] *** brrt left
[12:46] *** zakharyas joined
[12:47] *** salv0 joined
[12:50] *** abraxxa left
[12:52] *** faraco joined
[12:52] *** user9 joined
[12:57] *** pyrimidine joined
[12:58] *** AlexDaniel joined
[13:02] *** pyrimidine left
[13:12] *** Geth joined
[13:12] *** ChanServ sets mode: +v Geth

[13:16] <timotimo> Xliff: i think you just have to gte a fresher Inline::Perl5 and/or rakudo

[13:26] *** zakharyas left
[13:28] <IOninja> Are continuations still "somewhat experimental and JVM-only NQP feature"? I'm getting a crash in nqp::continuationreset(PROMPT, &!resumption) but on moar....

[13:30] <timotimo> rakudo uses continuations to implement gather/take (but sometimes gather/take is optimized to use something simpler, i think when all elements are requested?)

[13:30] <jnthn> Not at all; they're used by gather/take, and also in 6.d await

[13:30] <jnthn> Don't suppose you're using rotor? :)

[13:31] * jnthn filed a regression ticket about that in RT and it blew up inside the gather impl

[13:31] <jnthn> Though I suspect that it's because something downstream is mis-using the iterator

[13:31] <jnthn> Like pull-one'ing it after it already replied with IterationEnd or similar

[13:31] <IOninja> Yeah, I'm debugging that one ATM

[13:32] <jnthn> Ah, cool :)

[13:32] <jnthn> I suspect if there was a problem in gather/take we'd probably notice it all over the place. 

[13:32] <jnthn> So my guess would be that it's in the rotor/batch impl

[13:39] *** kyan left
[13:43] *** wamba joined
[13:43] *** pyrimidine joined
[13:48] *** wcummings joined
[13:48] <IOninja> Are you meant to be able to call .pull-one any number of times without anything crashing?

[13:48] <wcummings> whats the state of perl6 in emacs? is henrik's perl6-mode the best thing? hasnt been updated in a while

[13:49] <IOninja> wcummings: I see 34 commits on top of that in our fork: https://github.com/perl6/perl6-mode

[13:49] <wcummings> ahh the fork didnt come up in my search results, thanks

[13:50] <timotimo> IOninja: i guess after IterationEnd has been returned, you're not supposed to do it any more?

[13:50] <IOninja> Basically, it looks like R::I.Batch pulls one-too-many times. This already caused a bug with IO::ArgFiles.lines, but there we made its .pull-one not crash when it's called too many times.

[13:50] *** wamba left
[13:51] <IOninja> The same issue exists with this .rotor bug which is due to .pull-one being called too many times:

[13:51] <timotimo> that'd probably be the fix, then

[13:51] <IOninja> m: given (gather do for ^2 { take "x" }).iterator -> $it { dd do for ^10 { $it.pull-one } }

[13:51] <camelia> rakudo-moar 301bcf: OUTPUT¬´Cannot invoke this object (REPR: Uninstantiable; Callable)‚ê§  in code  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:52] <IOninja> timotimo: that being what? :) Make .pull-one not crash after stuff's been exhausted or do we say that there's no guarantees that you can still call .pull-one after you got IterationEnd?

[13:52] <Xliff> timotimo: Thanks for the suggestion. I will refresh Inline::Perl5

[13:52] <Xliff> I rakudobrew daily

[13:52] <timotimo> i don't think we make that guarantee

[13:53] <timotimo> jnthn called that mis-using

[13:53] <timotimo> so i'd be inclined to say "don't do that"

[13:54] <IOninja> OK. Then I'll figure out what the RI::Batch is doing and then we'll need to revert the IO::ArgFiles thing (it's introducing X% slowdown) and toss its test, as the test tests for ability to call .pull-one till you're blue in the face

[13:54] <timotimo> mhm

[13:54] <Xliff> And that removed the issue from "perl6 -e 'use Storable:from<Perl5>'

[13:54] <timotimo> may wait for jnthn to actually confirm that's what he meant

[13:54] <Xliff> I keep forgetting that Inline::Perl5 is a bit volatile.

[13:55] <IOninja> jnthn: is it acceptable for .pull-one to not be callable after it returned IterationEnd?

[13:55] <Xliff> So....

[13:56] <Xliff> What's the best way to convert a Perl5Array to a proper Perl 6 Array. Especially when the Perl5Array may be using circular array references.

[13:56] <Xliff> ???

[13:56] <Xliff> And is that something that .perl or PerlStore can handle?

[13:56] <jnthn> IOninja: You're not meant to use an Iterator again after it gave back IterationEnd

[13:56] <jnthn> IOninja: Doing so is undefined behavior

[13:57] <IOninja> Perfect!

[13:57] <timotimo> it'd be interesting if we could mix in a role that wraps all methods of all iterators to check for protocol adherence

[13:58] *** pyrimidine left
[13:58] *** pyrimidine joined
[14:00] <Xliff> Does anyone know of a way to read Storable data into Perl 6 without using Inline::Perl5?

[14:00] <IOninja> heh

[14:00] <IOninja> Well, it's open source. Replicate the code in Perl 6

[14:01] <[Coke]> Xliff: no new intel has surfaced since you asked in backscroll, probably. :)

[14:01] <IOninja> But IIRC there are issues reading its data even between different versions. I always viewed it as here-be-dragons type of storage.

[14:01] <[Coke]> Did you upgrade your copies of inline::perl5 and rakudo ? (or report which versions you were using?)

[14:02] <[Coke]> IOninja: ah, good point.

[14:03] <[Coke]> also, do you have a gist showing your current issue?

[14:05] *** matiaslina joined
[14:06] <Xliff> [Coke]: Updated, yes.

[14:07] <Xliff> And I am able to get the data in via Inline::Perl5. However that structure is not conducive to .perl or .gist because it contains circular references.

[14:09] *** ocbtec left
[14:10] <[Coke]> What are you trying to get from the data?

[14:12] *** bitmap joined
[14:14] <Xliff> Will PerlStore or .gist handle circular references?

[14:14] <IOninja> .gist will

[14:14] <Xliff> The end goal is to remove the dependency of Inline::Perl5 in reading the data.

[14:14] <Xliff> So I need to take the Perl5 files and convert them into something suitable for Perl6.

[14:14] <[Coke]> .gist and .perl are not great about circular references, no. but that still doesn't answer the question - what are you trying to do ?

[14:14] <IOninja> m: my @a = [@a]; say @a

[14:14] <camelia> rakudo-moar 301bcf: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot use variable @a in declaration to initialize itself‚ê§at <tmp>:1‚ê§------> 3my @a = [@7‚èè5a]; say @a‚ê§    expecting any of:‚ê§        term‚ê§¬ª

[14:14] <[Coke]> "something suitable" 

[14:14] <[Coke]> ?

[14:14] <IOninja> m: my @a; @a[0] = @a; say @a

[14:14] <camelia> rakudo-moar 301bcf: OUTPUT¬´(\Array_74318568 = [Array_74318568])‚ê§¬ª

[14:15] <[Coke]> so, you want Storable6?

[14:15] <faraco> howdy

[14:16] <Xliff> m: my @a; @a[0] = 1; @a.push: @a[0] xx 8; say @a;

[14:16] <camelia> rakudo-moar 301bcf: OUTPUT¬´[1 (1 1 1 1 1 1 1 1)]‚ê§¬ª

[14:16] <[Coke]> PerlStore isn't a core thing.

[14:16] <Xliff> [Coke]: Storable6. Yes.

[14:16] <[Coke]> So, right now, there's no core P6 Storable, (and .perl and .gist weren't meant to fill that niche), and you'll have to talk to teodozjan about PerlStore. 

[14:17] <[Coke]> (so, I would consider this a conversation starter, but don't expect anything at the moment to fill this particular niche)

[14:17] <Xliff> my @b; my @c; my @a = (1, @b, @c); @b = (2, @c, @a); @c = (3, @b, @a); say @a;

[14:18] <Xliff> m: my @b; my @c; my @a = (1, @b, @c); @b = (2, @c, @a); @c = (3, @b, @a); say @a;

[14:18] <camelia> rakudo-moar 301bcf: OUTPUT¬´(\Array_55036336 = [1 (\Array_55037008 = [2 [3 Array_55037008 Array_55036336] Array_55036336]) (\Array_55037064 = [3 [2 Array_55037064 Array_55036336] Array_55036336])])‚ê§¬ª

[14:18] <IOninja> Xliff: .gist won't let you roundrip data, even if it can handle circular structures.

[14:18] <Xliff> m: my @b; my @c; my @a = (1, @b, @c); @b = (2, @c, @a); @c = (3, @b, @a); say @a.gist;

[14:18] <IOninja> m: say <1/2>

[14:18] <camelia> rakudo-moar 301bcf: OUTPUT¬´(\Array_52104392 = [1 (\Array_52105064 = [2 [3 Array_52105064 Array_52104392] Array_52104392]) (\Array_52105120 = [3 [2 Array_52105120 Array_52104392] Array_52104392])])‚ê§¬ª

[14:18] <camelia> rakudo-moar 301bcf: OUTPUT¬´0.5‚ê§¬ª

[14:18] <IOninja> m: say "5"

[14:18] <camelia> rakudo-moar 301bcf: OUTPUT¬´5‚ê§¬ª

[14:19] <Xliff> I'm onlyh worried about the circular structures at this point. It was a GOTCHA I didn't forsee.

[14:20] *** pyrimidine left
[14:20] <[Coke]> Looking at FIleStore, it is just using .perl, so that's not helpful.

[14:20] *** pyrimidine joined
[14:21] <Xliff> Screw it. If I need to I can just use .perl or .gist and gzip the resulting file.

[14:21] <[Coke]> I think rakudo has all the pieces that you could render it out as a bytecode file (but that wouldn't be portable between backends)

[14:21] <Xliff> Or now.

[14:21] <Xliff> s/now/not/

[14:21] <Xliff> I think using compression on the resulting .perl or .gist output would be bytecode enough.

[14:22] <Xliff> Not efficient, but it should work.

[14:23] *** Ven joined
[14:23] <Xliff> Although I get nervous when I do a .perl or a .gist and the program just hangs.

[14:24] <DrForr> .perl .. still.. can't dump circular structures? I'd swear I filed that bug at least a year ago.

[14:24] <timotimo> it can

[14:24] <IOninja> It can't dump a lot of things.

[14:25] <timotimo> there's $*PERLSEEN or what is it called?

[14:25] <IOninja> m: (1...*).perl

[14:25] <camelia> rakudo-moar 301bcf: OUTPUT¬´Cannot .elems a lazy list‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:25] <IOninja> .gistseen, but it's used only for .gist, innit?

[14:25] <IOninja> m: my @a; @a = [@a]; @a.perl.say

[14:25] <camelia> rakudo-moar 301bcf: OUTPUT¬´[]‚ê§¬ª

[14:25] <IOninja> m: my @a; @a[0] = @a; @a.perl.say

[14:25] <camelia> rakudo-moar 301bcf: OUTPUT¬´(my \Array_74464672 = [Array_74464672,])‚ê§¬ª

[14:25] <DrForr> Well, there are lots of things I wouldn't expect it to be able to dump, but it's good to know that the circular case is taken care of.

[14:25] <IOninja> Oh, nevermind

[14:26] *** pyrimidine left
[14:26] <IOninja> m: my @a; @a[0] = @a; my $z = @a.perl.EVAL; say $z.perl

[14:26] <camelia> rakudo-moar 301bcf: OUTPUT¬´$[Mu]‚ê§¬ª

[14:27] <Xliff> Rut roh

[14:27] <IOninja> seems broke

[14:27] <Xliff> m: my @a; @a[0] = @a; my $z = @a.gist.EVAL; say $z.perl

[14:27] <camelia> rakudo-moar 301bcf: OUTPUT¬´5===SORRY!5=== Error while compiling /home/camelia/EVAL_0‚ê§Preceding context expects a term, but found infix = instead‚ê§at /home/camelia/EVAL_0:1‚ê§------> 3(\Array_80645888 =7‚èè5 [Array_80645888])‚ê§¬ª

[14:27] <timotimo> huh, misses the my?

[14:27] <IOninja> .gist isn't meant to be evalable

[14:27] <timotimo> oh, right

[14:28] <Xliff> Oh. I thought it was the other way around. LOL

[14:28] <Xliff> m: my @a; @a[0] = @a; my $z = @a.perl.EVAL; say $z.perl

[14:28] <camelia> rakudo-moar 301bcf: OUTPUT¬´$[Mu]‚ê§¬ª

[14:28] <Xliff> m: my @a; @a[0] = @a; my @z = @a.perl.EVAL; say @z.perl

[14:28] <camelia> rakudo-moar 301bcf: OUTPUT¬´[Mu]‚ê§¬ª

[14:28] <Xliff> My .gist still hasn't done anything.

[14:29] <Xliff> Generally a sign that something is stuck down the rabbit hole, somewhere.

[14:47] <Geth> ¬¶ doc: 84a1c452de | (Will "Coke" Coleda)++ | doc/Language/functions.pod6

[14:47] <Geth> ¬¶ doc: fix typo

[14:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/84a1c452de

[14:49] *** Sound joined
[14:52] *** llfourn left
[15:04] *** ocbtec joined
[15:06] *** matiaslina left
[15:14] *** patrickz joined
[15:15] *** user10 joined
[15:15] *** user9 left
[15:15] *** user10 is now known as user9

[15:18] <tbrowder> hi #perl6

[15:19] <IOninja> \o

[15:19] *** wamba joined
[15:20] <tbrowder> continuing suggestions for website, and IOninja's comments about using p6 because of memory use:  maybe a dumb question, but would it help )if possible) p6 to make it a daemon process somehow so the startup time is once?

[15:21] *** llfourn joined
[15:22] <timotimo> the way he's suggesting you use it is already to make it a daemon process

[15:22] *** araraloren joined
[15:22] <timotimo> by using Bailador or something similar

[15:22] <tbrowder> any chance of bailador being made multi-threaded any time soon?

[15:23] <timotimo> well, there's a bunch of stability improvements still being made to multithreaded stuff

[15:23] <timotimo> i think there's already multi-thread-capable web frameworks

[15:23] <timotimo> but i haven't had to build any web apps in a long time with perl6

[15:23] <timotimo> so i don't know which. maybe it's something to do with "crust"?

[15:23] <tbrowder> would bailador only block while responding to a request?

[15:24] <timotimo> it won't take in or respond to more than one request at a time

[15:24] *** Ven left
[15:25] <tbrowder> so a lightly used site wouldn't  be too painful. i mean look at the SLOW dynamic sites out there now!

[15:25] <timotimo> you're free to kick off threads as much as you want, but it won't allow you to respond to a request later than a new request coming in

[15:25] <timotimo> aye, and if you serve static files from your web server itself (i.e. apache/nginx/cherokee/iis/...) there will only be load for the truly dynamic pages

[15:26] <tbrowder> hm, i'll look at crust again...

[15:27] <timotimo> ah, crust is really a thing that a web framework would use

[15:27] <timotimo> so you want something that depends on crust rather than crust itself

[15:27] <tbrowder> another question about the proxying for bailador: incoming is https, proxy is http, what happens to the response from the proxied server, back out via https?

[15:28] <IOninja> yes

[15:28] <tbrowder> cool--thanks IOninja and timotimo!

[15:28] <timotimo> it would be a pretty amazing feat if the server would actually somehow make the browser open an HTTP connection so it could send the response back

[15:29] <timotimo> and somehow make it properly recognize what request that was the response to

[15:29] <timotimo> "Frinfon" is a minimal sinatra clone, that's a web framework

[15:30] <timotimo> that's apparently the only one i can find in perl6-all-modules that depends on Crust and is a web framework like thing

[15:30] <timotimo> i don't even know if crust has multithreaded capabilities :) :)

[15:31] *** patrickz left
[15:33] *** patrickz joined
[15:36] *** faraco left
[15:38] *** llfourn left
[15:49] *** xtreak joined
[15:52] *** Ven joined
[15:52] *** patrickz left
[16:03] *** ssotka joined
[16:14] *** khw joined
[16:15] *** Ven left
[16:16] <sena_kun> [Coke], ping. Any info about https://github.com/perl6/doc/pull/1181?

[16:17] <RabidGravy> timotimo, Crust relies on the underlying server engine for the multithreaded capabilities

[16:18] *** cdg joined
[16:19] *** patrickz joined
[16:20] <timotimo> OK, so if you put it on top of HTTP::Server::Threaded or HTTP::Server::Async it'd work well?

[16:20] <RabidGravy> well assuming they do that sort of PSGI thing

[16:20] <RabidGravy> HTTP::Server::Tiny works

[16:21] <timotimo> is Tiny multi-thread-capable?

[16:22] <tony-o> Async is stable with moar-blead

[16:22] *** Ven joined
[16:22] <tony-o> and you could build a PSGI type interface on top of it

[16:23] <RabidGravy> I keep meaning to make that

[16:23] <timotimo> it's stable? cool!

[16:23] <timotimo> RabidGravy: for lumberjack you used crust directly, right?

[16:23] <timotimo> so you haven't tested it with async or threaded servers?

[16:23] <RabidGravy> no

[16:24] <[Coke]> sena_kun: sorry, very busy with $DAYJOB, haven't had a chance to review yet.

[16:24] <sena_kun> [Coke], don't worry, just checking is it actual.

[16:25] <RabidGravy> anyhow I visited the warehouse of the company I am working for today

[16:25] <RabidGravy> some really cool robotic stuff

[16:25] <IOninja> :o

[16:25] <timotimo> neat

[16:25] <ugexe> pass the butter

[16:26] <timotimo> do they also have these neat little robo buddies that skittle along the floor and move shelves around?

[16:26] *** user9 left
[16:26] *** user9 joined
[16:27] <RabidGravy> no, unfortunately not, but the massive picking thing like a huge tap library robot was quite awe inspiring

[16:28] <IOninja> .oO( tap library..? )

[16:28] <RabidGravy> tape

[16:28] <IOninja> Ah

[16:30] <RabidGravy> really whizzy for something two storeys tall and as long as a tennis court

[16:32] <timotimo> whoa.

[16:32] <timotimo> our local hackspace is going to get a small pick&place machine

[16:32] <timotimo> it takes up an area of 1.6m x 1.6m 

[16:33] <timotimo> dunno how tall it is

[16:33] <timotimo> but damn, p&p is so fancy

[16:33] <huf> i hope you use it to automate something absolutely silly

[16:34] <timotimo> we're actually going to produce badges for our upcoming event

[16:35] *** llfourn joined
[16:40] <tony-o> where do you work?

[16:40] *** user9 left
[16:40] *** user9 joined
[16:43] *** llfourn left
[16:44] <RabidGravy> who?

[16:44] <timotimo> the babe with the power

[16:45] <RabidGravy> I am working for an "online luxury fashion retailer" right now 

[16:45] *** user9 left
[16:48] *** pyrimidine joined
[16:49] <sena_kun> Am I wrong or we had a module for creating skeletons for new modules? Not META6-bin, but something else with lib/, t/, etc.

[16:50] <timotimo> mi6

[16:50] <IOninja> buggable: eco Ddt

[16:50] <buggable> IOninja, Ddt 'Distribution Development Tool a replacement for mi6': https://github.com/kalkin/Ddt

[16:51] <timotimo> interesting

[16:52] <sena_kun> perfect! thanks.

[16:53] *** user9 joined
[16:54] *** user9 left
[16:59] <RabidGravy> I keep meaning to actually write the one that Oyatul was supposed to be a part of

[16:59] <timotimo> ouya tool?

[17:00] <RabidGravy> Booyah!

[17:00] * IOninja wonders if "Sam S" and "smsl" are the same person

[17:00] <IOninja> Show up as separate in rakudo's contributor tool

[17:00] <timotimo> they are not

[17:00] <RabidGravy> well I actually made it for a family of things

[17:00] <IOninja> Ah, OK

[17:00] <timotimo> https://github.com/ssutch - this is sam s

[17:00] <IOninja> cool

[17:00] <timotimo> at least i think so

[17:01] <IOninja> no contrib activity

[17:01] <RabidGravy> anything that wants some files laid out in a particular way

[17:01] <IOninja> Yet this person apparently submitted one commit to doc, nqp, MoarVM, roast, or rakudo repos

[17:02] <IOninja> don't matter much I guess

[17:02] <timotimo> BBIAB

[17:04] <IOninja> oh, it *is* the same person: https://github.com/perl6/doc/blob/master/CREDITS#L253-L269

[17:05] <IOninja> .ask smsl you're listed twice in contributors under "Sam S" and "smsl". Which should be used? Both in docs credits: https://github.com/perl6/doc/blob/master/CREDITS#L253-L269 and `smsl` in Rakudo's credits: https://github.com/rakudo/rakudo/blob/nom/CREDITS#L717-L718

[17:05] <yoleaux> IOninja: I'll pass your message to smsl.

[17:05] *** user9 joined
[17:10] *** patrickz left
[17:16] *** patrickz joined
[17:17] *** Ven left
[17:25] <samcv> hmm would be cool if Pod::To::Markdown would use ```perl6 ``` for quoting perl 6 code

[17:25] <yoleaux> 12:17Z <thundergnat> samcv: Take a look at http://rosettacode.org/wiki/Negative_base_numbers#Perl_6 for negative base number for bases -2..-36.

[17:25] <samcv> nice. i already did bases -2 to -10 at least. but that is good so i can extended it further :P

[17:25] <samcv> to add more of the most useful bases

[17:28] <IOninja> IIRC that's just a GitHub extension and would mess up proper Markdown

[17:29] <IOninja> Oh, I think even the ``` bit is GitHub extension. I have a hack to reformat it on perl6.party that uses a Multimarkdown renderer: https://github.com/zoffixznet/perl6.party/blob/master/lib/Perl5/Party/Posts.pm#L34

[17:30] <samcv> does ```perl6 mess up other markdown?

[17:30] <samcv> i thought other ones would just ignore it if they can't syntax highlight it?

[17:30] <RabidGravy> I dunno, but other things definitely support the ``` 

[17:30] <samcv> ^

[17:31] <samcv> and all the ones i have seen, if they don't have syntax highlighter installed or don't support syntax highlighting just ignore what's after the ```

[17:31] <samcv> until a newline

[17:32] <samcv> https://github.com/samcv/perl6-number-base did i mess up how i did the Pod?

[17:32] <samcv> cause this looks ugly

[17:32] <samcv> this is what I did https://github.com/samcv/perl6-number-base/blob/master/lib/Number/Base.pm6#L3

[17:33] <IOninja> No mention of ``` in standard: https://daringfireball.net/projects/markdown/syntax

[17:33] <IOninja> The "other things" must be all the gazillion variations

[17:34] <samcv> ``` is pretty common though

[17:34] <samcv> m: say 10.base(-10)

[17:34] <camelia> rakudo-moar 02815c: OUTPUT¬´base argument to base out of range. Is: -10, should be in 2..36‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:35] <samcv> m: say "e92".base(10)

[17:35] <camelia> rakudo-moar 02815c: OUTPUT¬´No such method 'base' for invocant of type 'Str'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:35] <samcv> m: say "e92".parse-base(10)

[17:35] <camelia> rakudo-moar 02815c: OUTPUT¬´Cannot convert string to number: malformed base-10 number in '3‚èè5e92' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:35] <samcv> m: say "e92".parse-base(-10)

[17:35] <camelia> rakudo-moar 02815c: OUTPUT¬´Radix -10 out of range (allowed: 2..36)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:35] <samcv> maybe that should be changed to "malformed base 10 number"

[17:35] <samcv> cause base-10 looks like base -10

[17:36] <samcv> what do you think IOninja 

[17:36] <AlexDaniel> that's a bit too much

[17:37] <samcv> hmm?

[17:37] <AlexDaniel> current message is alright

[17:37] <samcv> well since base -10 exists, i think the error message is not as good as it can be

[17:37] <samcv> to put a hyphen-minus in front of the 10

[17:37] <AlexDaniel> wait‚Ä¶ base -10?

[17:37] <samcv> yes. my module supports it :P

[17:37] <samcv> it's a real base

[17:38] <diakopter> according to rosetta code: "Negative base numbers are an alternatively way to encode numbers without the need for a minus sign. "

[17:38] <samcv> yep

[17:38] <samcv> like base -2

[17:38] <diakopter> those alternatively ways

[17:38] <AlexDaniel> wait, is it this balanced thingy?

[17:38] <samcv> is-deeply from-base('101', -2), 5, "from-base -1 for '101' is 5";

[17:39] <samcv> here is one test i have in my code

[17:39] <IOninja> samcv: message looks fine to me

[17:39] <samcv> 101 in base -2 is 5

[17:39] <AlexDaniel> hm‚Ä¶ but still, the error message is fine

[17:39] *** llfourn joined
[17:39] <AlexDaniel> it says it's out of range, only 2..36 is allowed

[17:39] *** cibs left
[17:40] <samcv> that one is fine

[17:40] <samcv> i'm talking about the other one

[17:40] <samcv> m: say "ae".parse-base(10)

[17:40] <camelia> rakudo-moar 02815c: OUTPUT¬´Cannot convert string to number: malformed base-10 number in '3‚èè5ae' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Actually thrown at:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:40] <samcv> would be better if it just said "base 10" or something

[17:41] *** sufrostico left
[17:41] *** cibs joined
[17:42] <samcv> m: say (-2)**$_ for ^5

[17:42] <camelia> rakudo-moar 02815c: OUTPUT¬´1‚ê§-2‚ê§4‚ê§-8‚ê§16‚ê§¬ª

[17:42] <samcv> AlexDaniel, that's how negative bases work

[17:43] <samcv> 1010 in base -2 is -10 for example

[17:43] <samcv> has a 1 in the -2 place, and a 1 in the -8's place

[17:43] *** sufrostico joined
[17:43] <AlexDaniel> but it's different from balanced ternary, right?

[17:44] <samcv> yes

[17:44] <AlexDaniel> hmh

[17:44] <samcv> ternary is 0, 1, or 2, where the 2 == -1

[17:44] <samcv> though they often denote it with some other symbol that isn't a 2

[17:44] *** llfourn left
[17:46] <samcv> hmm think i will try and get to the backlog of atom-language-perl6 issues this morning

[17:46] <samcv> not that many. but always easier to hunt and find them all in the same session

[17:48] *** sufrostico left
[17:48] *** itaipu joined
[17:51] *** Coleoid_n left
[17:56] *** bwisti joined
[18:13] *** sufrostico joined
[18:16] *** TimToady joined
[18:29] <samcv> argh on the docs i can't even search for Regex and get the Language/Regexes page

[18:29] <samcv> we should give the Language pages more weighting

[18:29] <IOninja> m: class { has $a = 42; has $.b where $!a }.new: :42b

[18:29] <camelia> rakudo-moar 02815c: OUTPUT¬´Cannot look up attributes in a VMNull type object‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:29] <IOninja> Is this supposed to work at all?

[18:31] <AlexDaniel> c: 2015.01.1 class { has $a = 42; has $.b where $!a }.new: :42b

[18:31] <committable6> AlexDaniel, ¬¶¬´2015.01.1¬ª: 

[18:31] <IOninja> Ah.. right :)

[18:32] <AlexDaniel> it worked for 3 months, so‚Ä¶ ü§∑

[18:32] <IOninja> oh, it's pre-Christmas... hmm

[18:32] <TimToady> we make sure the = bits happen in the right order, but I dunno about when 'where' runs; maybe 'where' wasn't working at all back then

[18:33] <IOninja> c: 2015.01.1 my $z = class { has $a = 42; has $.b where $!a }.new: :42b; say $z.b

[18:33] <committable6> IOninja, ¬¶¬´2015.01.1¬ª: 42

[18:33] <IOninja> c: 2015.01.1 my $z = class { has $a = 42; has $.b where $!a }.new: :b("lulz"; say $z.b

[18:33] <committable6> IOninja, https://gist.github.com/c381503668e3c6411225fa76b918554f

[18:33] <IOninja> c: 2015.01.1 my $z = class { has $a = 42; has $.b where $!a }.new: :b("lulz"); say $z.b

[18:33] <committable6> IOninja, ¬¶¬´2015.01.1¬ª: lulz

[18:33] <AlexDaniel> oh

[18:33] <Geth> ¬¶ doc: 8cd3001dbf | (Samantha McVey)++ | assets/sass/_highlights.scss

[18:33] <Geth> ¬¶ doc: Try and highlight the m and rx in m// and rx// differently

[18:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8cd3001dbf

[18:33] <AlexDaniel> well :)

[18:33] <IOninja> c: 2015.01.1 my $z = class { has $a = 42; has $.b where {$!a == 42} }.new: :b("lulz"); say $z.b

[18:33] <committable6> IOninja, ¬¶¬´2015.01.1¬ª: lulz

[18:33] <IOninja> Yeah, it's just the where ain't working

[18:34] <IOninja> oh wait

[18:34] <IOninja> c: 2015.01.1 my $z = class { has $a = 42; has $.b where {$!a == 41} }.new: :b("lulz"); say $z.b

[18:34] <committable6> IOninja, ¬¶¬´2015.01.1¬ª: lulz

[18:34] <IOninja> Yeah

[18:34] <IOninja> c: 2015.01.1 my $z = class { has $a = 42; has $.b where {dd $!a; $!a == 41} }.new: :b("lulz"); say $z.b

[18:34] <committable6> IOninja, ¬¶¬´2015.01.1¬ª: lulz

[18:34] * IOninja puts this ticket back into "hard" pile and moves on

[18:35] *** pyrimidine left
[18:35] *** llfourn joined
[18:35] *** pyrimidine joined
[18:40] *** llfourn left
[18:40] *** pyrimidine left
[18:43] <Geth> ¬¶ doc: 54fa9b4324 | (Samantha McVey)++ | htmlify.p6

[18:43] <Geth> ¬¶ doc: Fix build for macosx

[18:43] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/54fa9b4324

[18:54] *** sufrostico left
[18:55] <samcv> what is with travis being super slow

[18:56] <IOninja> gifted horse....

[18:57] <geekosaur> ^ we're freeloading on a commercial service, commercial users come first then they handle any free users as resources are available

[18:58] *** labster joined
[19:01] <wcummings> if i install rakudo from source, is that supposed to include zef?

[19:01] <sena_kun> wcummings, nope.

[19:01] *** xtreak left
[19:02] <sena_kun> afaik, at least.

[19:02] <IOninja> wcummings: if by "from source" you mean compiler's source, then no. There are bootstrapping instructions in zef's readme tho

[19:02] <IOninja> buggable: eco zef

[19:02] <buggable> IOninja, zef 'It's like [cpanm] wearing high heels with a tracksuit': https://github.com/ugexe/zef

[19:03] <IOninja> huh... GitHub uglified their top panel?

[19:03] <samcv> omg whyyy

[19:03] <sena_kun> seems bad. :|

[19:03] <samcv> and the rest of the page is white?

[19:04] <samcv> sena_kun, be happy it doesn't follow you as you scroll down the page

[19:04] <samcv> just wait

[19:05] <sena_kun> samcv, following by scrolling is not so bad as it seems and can be useful depending on... different stuff. But new top looks like someone accidently inverted colors and pushed it without testing.

[19:06] <sena_kun> but "we're freeloading on a commercial service"-argument works here too.

[19:07] <IOninja> .oO( there're always user styles... )

[19:08] *** cdg left
[19:09] <AlexDaniel> u: subscript c

[19:09] <unicodable6> AlexDaniel, U+0656 ARABIC SUBSCRIPT ALEF [Mn] (‚óåŸñ)

[19:09] <unicodable6> AlexDaniel, U+1D62 LATIN SUBSCRIPT SMALL LETTER I [Lm] (·µ¢)

[19:09] <unicodable6> AlexDaniel, https://gist.github.com/4e5daff0b4555e33aa1d151187dd6268

[19:09] *** mcmillhj joined
[19:12] *** mcmillhj left
[19:12] *** espadrine left
[19:12] <samcv> sena_kun, now when i have a tiny screen

[19:14] <sena_kun> samcv, fullscreen browser mode?

[19:15] <samcv> nope

[19:15] <IOninja> do we have something other than nqp to test whether a thing is containerized? 

[19:15] <IOninja> m: use Test; is-deeply [], [].item.perl.EVAL

[19:15] <camelia> rakudo-moar 02815c: OUTPUT¬´ok 1 - ‚ê§¬ª

[19:15] <IOninja> I need something like that ^ except it'd also verify the itemization is there

[19:15] <IOninja> .. without poking at .perl string

[19:16] <sena_kun> samcv, modern web is young ==> all about violence

[19:17] <samcv> heh

[19:18] <samcv> is this for the Test module?

[19:18] <IOninja> my Q? No, I'm just writing a roast test.

[19:18] <samcv> ah i see

[19:18] <samcv> you can see if it's in a Scalar

[19:19] <samcv> m: my $var; say $var.VAR.^name

[19:19] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:21] <IOninja> m: $().VAR.^name.say

[19:21] <camelia> rakudo-moar 02815c: OUTPUT¬´Use of Nil in string context‚ê§  in block <unit> at <tmp> line 1‚ê§Str‚ê§¬ª

[19:21] <IOninja> m: ().VAR.^name.say

[19:21] <camelia> rakudo-moar 02815c: OUTPUT¬´List‚ê§¬ª

[19:23] *** itaipu left
[19:23] <tony-o> m: my \x = $(); x.VAR.^name.say;

[19:23] <camelia> rakudo-moar 02815c: OUTPUT¬´Use of Nil in string context‚ê§  in block <unit> at <tmp> line 1‚ê§Str‚ê§¬ª

[19:23] <tony-o> m: my \x = $(); x = 5; x.VAR.^name.say;

[19:23] <camelia> rakudo-moar 02815c: OUTPUT¬´Use of Nil in string context‚ê§  in block <unit> at <tmp> line 1‚ê§Cannot modify an immutable Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:23] *** itaipu joined
[19:23] <tony-o> m: my $y = 5; my \x = $y; x = 5; x.VAR.^name.say;

[19:23] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:23] <tony-o> m: my $y = 5; my \x = $y; x = 'hello world'; x.VAR.^name.say;

[19:23] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:24] <tony-o> m: my $y = 5; my \x = $y; x = %( x => 5 ); x.VAR.^name.say;

[19:24] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:24] <samcv> m: my $var; say $var.VAR.^methods

[19:24] <camelia> rakudo-moar 02815c: OUTPUT¬´(<anon> <anon> new name of default dynamic WHICH)‚ê§¬ª

[19:24] <samcv> m: my \var; say var.VAR.^name

[19:24] <camelia> rakudo-moar 02815c: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Term definition requires an initializer‚ê§at <tmp>:1‚ê§------> 3my \var7‚èè5; say var.VAR.^name‚ê§¬ª

[19:24] <samcv> m: my \var = 0; say var.VAR.^name

[19:24] <camelia> rakudo-moar 02815c: OUTPUT¬´Int‚ê§¬ª

[19:24] <samcv> that seems to work fine

[19:25] <samcv> m: my $var = 0; say $var.VAR.^name

[19:25] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:25] <samcv> yep

[19:25] *** darutoko left
[19:25] <IOninja> m: say $().VAR.^name

[19:25] <camelia> rakudo-moar 02815c: OUTPUT¬´Use of Nil in string context‚ê§  in block <unit> at <tmp> line 1‚ê§Str‚ê§¬ª

[19:26] <IOninja> m: say ($()).VAR.^name

[19:26] <camelia> rakudo-moar 02815c: OUTPUT¬´Use of Nil in string context‚ê§  in block <unit> at <tmp> line 1‚ê§Str‚ê§¬ª

[19:26] <IOninja> m: say ().item.VAR.^name

[19:26] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:26] <IOninja> weird

[19:27] <IOninja> : $[].perl.say

[19:27] <IOninja> ,: $[].perl.say

[19:27] <IOninja> m: $[].perl.say

[19:27] <camelia> rakudo-moar 02815c: OUTPUT¬´$[]‚ê§¬ª

[19:27] <IOninja> m: [].item.perl.say

[19:27] <camelia> rakudo-moar 02815c: OUTPUT¬´$[]‚ê§¬ª

[19:27] <IOninja> m: say quietly $[].VAR eqv [].item.VAR

[19:27] <camelia> rakudo-moar 02815c: OUTPUT¬´True‚ê§¬ª

[19:27] <IOninja> m: say quietly $[].VAR.^name

[19:27] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:28] <IOninja> m: say ($(),).VAR.^name 

[19:28] <camelia> rakudo-moar 02815c: OUTPUT¬´Use of Nil in string context‚ê§  in block <unit> at <tmp> line 1‚ê§List‚ê§¬ª

[19:28] <IOninja> Oh, dammit, tripped on the very bug I'm fixing!

[19:28] <IOninja> m: say $( ).VAR.^name

[19:28] <camelia> rakudo-moar 02815c: OUTPUT¬´Scalar‚ê§¬ª

[19:28] <IOninja> samcv++ thanks

[19:29] *** raiph joined
[19:32] *** espadrine joined
[19:32] <IOninja> FWIW, grepping the doc repo for `$()` gives nothing, but it's a shorthand for $/.made ?? $/.made !! $/.Str

[19:34] <RabidGravy> :-O

[19:36] <gfldex> IOninja: does roast agree?

[19:36] *** llfourn joined
[19:40] *** cpage_ left
[19:41] <IOninja> Ah, always forget that step :P

[19:41] *** llfourn left
[19:42] <IOninja> gfldex: this seems to be it: https://github.com/perl6/roast/blob/master/S05-match/make.t#L16-L22

[19:43] <IOninja> Though I don't see it testing that it uses $/.made ?? as opposed to say $/.made.defined ?? for example

[19:43] <IOninja> And personally, I'd expect .defined thing, probably. Never used $() tho

[19:44] *** TEttinger joined
[19:46] <IOninja> m: 'foo' ~~ /o+ {make 42}/; say $()

[19:46] <camelia> rakudo-moar 02815c: OUTPUT¬´42‚ê§¬ª

[19:46] <IOninja> m: 'foo' ~~ /o+ {make 0}/; say $()

[19:46] <camelia> rakudo-moar 02815c: OUTPUT¬´oo‚ê§¬ª

[19:47] <IOninja> .DEFINITE even

[19:48] <IOninja> m: 'foo' ~~ /o+ {make 0 but True}/; say $()

[19:48] <camelia> rakudo-moar 02815c: OUTPUT¬´0‚ê§¬ª

[19:48] <IOninja> hehe

[19:49] * [Coke] yawns.

[19:50] *** hartenfels joined
[19:51] <ufobat> i need some help pls, following line of code produces this output, and i dont understand why

[19:51] <ufobat>             say "r = $r ceiling -> ", $r.ceiling, " ", $r.perl, " what:",  $r.WHAT;

[19:52] <ufobat> r = 2 ceiling -> 3 <2/1> what:(Rat)

[19:53] <ufobat> m: my $a = <2/1>; say $a.perl, $a.ceiling, $a;

[19:53] <camelia> rakudo-moar a148c7: OUTPUT¬´2.022‚ê§¬ª

[19:54] * IOninja tries to parse that

[19:54] <IOninja> I guess r = 2 ceiling -> 3 <2/1> what:(Rat) isn't perl code?

[19:54] <ufobat> no thats the output of the say statement

[19:54] <IOninja> Ah :D

[19:54] <IOninja> m: my $a = <2/1>; say [ $a.perl, $a.ceiling, $a ] 

[19:54] <camelia> rakudo-moar a148c7: OUTPUT¬´[2.0 2 2]‚ê§¬ª

[19:55] <IOninja> Looks good to me?

[19:55] <IOninja> ufobat: how do you make $r?

[19:56] <IOninja> I'm guessing there's floating point noise

[19:56] <IOninja> ummm

[19:56] <ufobat> but shouln't i see this in $a.perl ? which is 2/1

[19:57] <IOninja> ufobat: well, what's $r? how do you make it?

[19:57] <[Coke]> say does a gist.

[19:57] <IOninja> So far, I've not seen a reproduction of your issue

[19:57] <ufobat> i wasn't able to track it down, i dont know, its part of my xpath evaluation

[19:58] <ufobat> [Coke], but it is a say $a.perl, so no gist, right?

[19:58] <IOninja> s: 2.0, 'ceiling', \()

[19:58] <SourceBaby> IOninja, Sauce is at https://github.com/rakudo/rakudo/blob/02815c9/src/core/Rational.pm#L60

[19:58] <El_Che> samcv: I am looking how to update the syntax checking support for perl6 on vim (with JSON error output). How does that work on atom? Does it call an external program (eg "perl6 -c")?

[19:59] <IOninja> s: 2.0, 'perl', \()

[19:59] <SourceBaby> IOninja, Sauce is at https://github.com/rakudo/rakudo/blob/02815c9/src/core/Rat.pm#L5

[19:59] <IOninja> ufobat: what version are you on?

[19:59] <ufobat> 2017.01 

[19:59] <IOninja> aha, well here's the first clue: https://github.com/rakudo/rakudo/blob/02815c9/src/core/Rat.pm#L6-L8

[20:00] <IOninja> Since it's not ending up as 2.0 in .perl, then denominator isn't exactly 1

[20:00] <IOninja> And I think there's a ticket for this issue that .perl isn't accurate

[20:00] <IOninja> (or did I supposedly fix that already?)

[20:00] <ufobat> right i get <2/1

[20:01] <ufobat> > instead of 2.0

[20:01] <IOninja> Yeah, suppoosed to be fixed: https://github.com/rakudo/rakudo/commit/b5aa3c591e4f0fdf6ccf9e5132fdf6a15618151d

[20:02] <IOninja> Ummm, wait a sec.

[20:02] <IOninja> nu/de are Ints :S there's no fp noise :S

[20:02] <IOninja> m: <2/1>.perl.say

[20:02] <camelia> rakudo-moar a148c7: OUTPUT¬´2.0‚ê§¬ª

[20:03] <IOninja> ufobat: well, I'll be very interested in a repo case.

[20:03] <ufobat> IOninja, sorry? what, you mean you'd like to see my code?

[20:04] <IOninja> ufobat: I'd like to see code that I can run and reproduce that problem

[20:04] <[Coke]> m: <2/1>.perl.put

[20:04] <camelia> rakudo-moar a148c7: OUTPUT¬´2.0‚ê§¬ª

[20:04] <ufobat> IOninja, yeah but it isnt tracked down:

[20:04] <IOninja> don't matter

[20:05] <IOninja> I can stick debug prints into rakudo at least and dump stuff

[20:05] <ufobat> give me a sec

[20:05] <ufobat> https://github.com/ufobat/p6-XML-XPath/blob/master/t/23_much_more_function_and_expressions.t#L32

[20:06] <ufobat> https://github.com/ufobat/p6-XML-XPath/blob/master/lib/XML/XPath/FunctionCall.pm6#L106

[20:07] *** cale2 joined
[20:07] *** cpage_ joined
[20:08] <IOninja> Could not find XML::XPath::ExprOperator::And

[20:08] <IOninja> What dist is that in?

[20:08] <ufobat> i am sorry, it is pushed now

[20:10] <cale2> hello

[20:10] *** cpage__ joined
[20:11] <IOninja> lol

[20:11] <IOninja> I stuck dd [$r, "X42"]; before the buggy line and the bug vanished

[20:12] *** cpage_ left
[20:12] *** cpage__ is now known as cpage_

[20:12] *** dj_goku joined
[20:12] <ufobat> okay, so we just keep the dd there and everthing will be fine :D

[20:13] <IOninja> Schr√∂dinger's bug... I can ask what type it is and all, but as soon as I try to peek at its nu/de, bug goes away :)

[20:13] * IOninja digs furtehr

[20:14] *** Pattux joined
[20:15] * ufobat gives IOninja a box of cookies and a beer

[20:15] <IOninja> beer? gross

[20:16] <Pattux> exit

[20:16] <ufobat> what!? am i not the only one that finds beer disgusting?

[20:16] <IOninja> m: say 4 div 2 + 1

[20:16] <camelia> rakudo-moar a148c7: OUTPUT¬´3‚ê§¬ª

[20:16] <RabidGravy> weirdos

[20:16] <IOninja> ahah

[20:17] *** Pattux left
[20:17] <cale2> I don't get the obsession with craft beer, but beer is fine in general

[20:17] * IOninja prepares sandwich bread

[20:17] <IOninja> Bug sammiches for dinner

[20:18] <RabidGravy> "craft beer" is just a term for marketing to hipsters

[20:18] *** dj_goku left
[20:18] <RabidGravy> I buy beer from a local brewery whenever I can

[20:19] *** bjz joined
[20:19] <tony-o> cale2: mostly a hobby for some people, finding out what's out there, trying obscure things

[20:19] <IOninja> ufobat: compiling a fix

[20:20] <ufobat> IOninja, yay :D

[20:21] <cale2> Yeah, I like buying beer from local breweries too. But I have more of a pedestrian palette for beer. Can't do nitro stout or christmas ale

[20:21] <tony-o> i don't care for the seasonal stuff either 

[20:21] <ufobat> IOninja, what was it?

[20:24] <IOninja> ufobat: still thinking about it. 'cause I can't obtain the Rat you got by hand

[20:24] <IOninja> oh, maybe some math operation...

[20:25] <IOninja> hm

[20:25] * IOninja tries to trace how $r is created

[20:26] <IOninja> ufobat: where does $r come from?

[20:26] <IOninja> where is it made

[20:26] <ufobat> well it starts with fn-last()

[20:28] <IOninja> Basically, somehow the $r you got is <4/2>

[20:28] <IOninja> m: use nqp; my $r = <4/2>; say [ nqp::getattr(nqp::decont($r), Rat, '$!numerator'), nqp::getattr(nqp::decont($r), Rat, '$!denominator') ]

[20:28] <camelia> rakudo-moar a148c7: OUTPUT¬´[2 1]‚ê§¬ª

[20:28] <IOninja> ^ but if I make one manually, it gets reduced in .new

[20:28] *** pyrimidine joined
[20:28] <ufobat> the $of in fn-last is  the $start.elems from Line 12 of Predicates.pm6

[20:28] <IOninja> So there's some step that's missing that reduction step. Right now I stuck it into .ceiling, but feels like it's missing elsewhere

[20:29] *** sena_kun left
[20:29] *** r3m joined
[20:30] *** ocbtec left
[20:31] <ufobat> the rest is  XML::XPath::ExprOperator::* ; *::Div and *::Plus

[20:33] <ufobat> if you see a 4/2 its probably the div operator

[20:33] *** pyrimidine left
[20:34] <ufobat> not sure what XML does, but i'd expect its more a less a "4" / "2"

[20:35] <IOninja> ufobat: well, I've just pushed a temporary fix. If you build it you can resume your work. I'll try hunting where the <4/2> Rat gets made and see if a better fix can be made

[20:36] <ufobat> IOninja, awesome :) thanks for your help!

[20:36] <IOninja> Thanks for the bug!

[20:36] * IOninja bites into the sandwich

[20:36] <IOninja> Yummy

[20:37] *** llfourn joined
[20:42] *** robertle joined
[20:42] *** llfourn left
[20:49] *** pyrimidine joined
[20:50] <RabidGravy> not digging this new  style on github 

[20:50] *** sena_kun joined
[20:51] <IOninja> yeah, it's pretty gross

[20:52] <gfldex> it does provide a clear separation between github stuff and a repo

[20:53] *** yqt joined
[20:54] *** pyrimidine left
[20:54] <geekosaur> http://userstyles.org/styles/37035 ftw

[20:55] <geekosaur> also http://userstyles.org/styles/121315

[21:05] *** cdg joined
[21:07] *** cdg_ joined
[21:07] *** bjz left
[21:11] *** cdg left
[21:11] *** cdg__ joined
[21:14] *** cdg_ left
[21:16] *** cdg joined
[21:17] * [Coke] guesses he's on the other side of an A/B split on github.

[21:18] *** itaipu left
[21:19] <geekosaur> mm, possibly I am too, in which case I presume my style is about to break :/

[21:19] *** cdg__ left
[21:19] * geekosaur thought loading it in an incognito window looked different from what he recalled of unstyled though

[21:21] *** pyrimidine joined
[21:23] <[Coke]> the top menu bar changed color if I'm not logged in, that seems to be it.

[21:25] *** Sgeo left
[21:27] *** Tonik joined
[21:32] *** pyrimidine left
[21:33] *** pyrimidine joined
[21:34] *** ufobat left
[21:35] *** patrickz left
[21:38] *** pyrimidine left
[21:39] *** llfourn joined
[21:44] *** llfourn left
[21:49] *** sena_kun left
[21:54] *** rindolf left
[21:54] *** Tonik left
[22:00] *** dj_goku joined
[22:06] *** dj_goku left
[22:06] *** labster left
[22:07] *** cdg_ joined
[22:08] *** labster joined
[22:09] *** bjz joined
[22:09] *** RabidGravy left
[22:09] *** itcharlie1 joined
[22:10] *** cdg left
[22:12] *** cdg joined
[22:15] *** cdg_ left
[22:15] *** Sound left
[22:20] *** bjz left
[22:21] *** travis-ci joined
[22:21] <travis-ci> Doc build errored. Samantha McVey 'Try and highlight the m and rx in m// and rx// differently'

[22:21] <travis-ci> https://travis-ci.org/perl6/doc/builds/200444907 https://github.com/perl6/doc/compare/84a1c452de4d...8cd3001dbf5a

[22:21] *** travis-ci left
[22:22] <samcv> looks like it just timed out

[22:23] *** cdg_ joined
[22:25] <timotimo> travis has been acting a bit strange lately

[22:25] *** cdg left
[22:29] *** torbjorn joined
[22:36] *** bjz joined
[22:38] *** cdg joined
[22:40] *** llfourn joined
[22:41] *** cdg_ left
[22:43] <El_Che> \o/ my fist implementation of syntax checking for perl6 in vim using rakudo JSON error output is kind of working√ß

[22:43] <El_Che> !

[22:43] <jnthn> :)

[22:43] <jnthn> Cool!

[22:44] <jnthn> .oO( mighta been quicker to use your fingers, but whatever works... )

[22:44] <El_Che> previous version used regex, but this is way cooler

[22:45] <jnthn> *nod*

[22:45] <jnthn> Yeah, a bunch more robust

[22:45] *** llfourn left
[22:46] <El_Che> I wouldn't call it robust there, but it will get there :)

[22:48] <perlpilot> "rakudo JSON error output"?

[22:49] *** vktec joined
[22:51] <timotimo> yep

[22:51] <El_Che> perlpilot: RAKUDO_EXCEPTIONS_HANDLER=1

[22:51] <timotimo> um, 1? not JSON?

[22:52] <El_Che> JSON

[22:52] <El_Che> sorry

[22:53] <vktec> I'm considering learning Perl6. What are the downsides of it?

[22:53] <El_Che> If anyone is interested, this branch works: https://github.com/nxadm/syntastic-perl6/tree/json

[22:53] <timotimo> performance isn't very good, that's definitely a downside of perl6 at the moment

[22:53] <El_Che> It needs a lot of cleanup and some todo (e.g., highlight error instead of margin)

[22:54] <perlpilot> vktec: The main downsides are its newness and performance.  But it's otherwise very nice.

[22:54] <El_Che> vktec: new language, needs library (you change to be famous)

[22:54] <timotimo> your chance*

[22:54] <El_Che> f*ck, too tired

[22:54] <timotimo> though you can use libraries from python and perl5 freely

[22:54] <perlpilot> :q!

[22:54] <perlpilot> oops

[22:55] <vktec> Okay. How bad is the performance issue?

[22:55] <El_Che> vktec: nice enough to force me to learn a little vimscript to have support for it

[22:55] <IOninja> vktec: after you learn it, it'll be hard to learn other languages :)

[22:55] <vktec> El_Che: Whoa, that's impressive! :P

[22:55] <vktec> IOninja: Hahaha

[22:55] <perlpilot> vktec: It's not too bad for most things that I've done with it. 

[22:56] <vktec> Okay.

[22:56] <perlpilot> vktec: Also though, there are "escape hatches" for performance ... you can use Inline::Perl5 to talk to Perl 5 if you need to or with NativeCall, write the slow bits in C

[22:56] <vktec> Cool

[22:56] <perlpilot> (there are other Inline:: modules to talk to other languages too)

[22:56] <vktec> That's a very neat feature

[22:58] <IOninja> w00t. nanis's PR successfully fixes RT#130736 on my box.

[22:58] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130736

[22:58] <jnthn> The concurrency/parallelism stuff can also help somewhat on performance (if it's applicable to what you're doing)

[23:02] <IOninja> umm, wtf now it fails :S

[23:04] <El_Che> vktec: for me, I like how expressive it is (a lot of common functions/methods are built so code can be short), modern (unique OO system, gradual typing, concurrent) and dead easy C-binding. The community is very accessible. Downsize is age (needs more libs) and speed for sometype of applications (although it's getting a lot faster).

[23:04] <vktec> Okay, last question before I go start learning Perl6: Any good web frameworks for it yet or should I call back into Perl5 and use something like Dancer2?

[23:05] <vktec> El_Che: Okay. The performance issue isn't really a problem for me (if performace mattered, I'd be using C), and age won't be an issue for all that long, I imagine

[23:05] * vktec goes off to start learning

[23:06] <IOninja> vktec: there are a few in the ecosystem ( http://modules.perl6.org/ ), but AFAIK none of them are really mature yet. I had reasonable success using Mojolicious via Inline::Perl5 tho

[23:07] <vktec> Gotcha. I'll probably stick with Python for web stuff in that case, and wait for things to become a bit more mature

[23:07] <El_Che> vktec: that's a good plan

[23:08] <El_Che> nine gave a talk at fosdem about web + perl6 but not there yet

[23:08] <El_Che> (some audio out of sync issue)

[23:11] <vktec> Cool. Well, I'm gonna go learn Perl6! This a good place to start? http://perl6intro.com/

[23:11] *** hartenfels left
[23:16] *** itcharlie1 left
[23:18] <IOninja> vktec: yeah. If you already know programming https://learnxinyminutes.com/docs/perl6/ could be handy. More stuff listed on this page in "For newcomers" section: https://perl6.org/resources/

[23:18] <gfldex> vktec: we got blogs too! http://pl6anet.org/

[23:19] <vktec> IOninja: I'll check them out. Thanks!

[23:19] <vktec> gfldex: Ooh, I'll keep an eye on that

[23:23] *** espadrine left
[23:26] *** cibs left
[23:28] *** cibs joined
[23:30] *** lep-delete left
[23:35] *** pyrimidine joined
[23:35] *** lep-delete joined
[23:37] *** dj_goku joined
[23:38] *** bjz left
[23:38] *** raiph left
[23:39] *** pyrimidine left
[23:42] *** llfourn joined
[23:47] *** llfourn left
[23:51] *** cale2 left
[23:58] *** cibs left
