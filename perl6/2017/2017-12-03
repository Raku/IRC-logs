[00:03] *** aindilis joined
[00:06] <timotimo> yowser, looking at the bytecode is like cutting an onion here

[00:09] *** kyan joined
[00:14] <timotimo> we already knew we'll have to get a lot smarter about native refs, but i wasn't aware we could get wins before we start doing optimizations across inlines, too

[00:15] *** robertle left
[00:16] *** ctilmes left
[00:17] <timotimo> i see a piece of code - and i don't know how often it gets hit - that grabs a reference to a lexical variable, decontainerizes it (which boxes it into an Int object), then we boolify it with the "boolify a big integer" instruction, and then we check that for non-null

[00:19] <timotimo> for some reason, we believe that lexical ref is used from 15 different places ..?!

[00:23] *** cdg left
[00:24] *** cdg joined
[00:25] <timotimo> seems to run 11x per row?

[00:27] <timotimo> two different instances of getlexref_i in this piece of code, the both of them combined run 11x per row, that's it

[00:29] *** Cabanossi left
[00:29] *** cdg left
[00:29] <timotimo> okay, some of those are actually passed to another function

[00:31] *** Cabanossi joined
[00:31] *** nadim left
[00:31] <timotimo> ah, one of these is for when you ask for :p in split, which isn't what's being used in CSV

[00:35] *** dalek joined
[00:35] *** ChanServ sets mode: +v dalek

[00:35] *** synopsebot joined
[00:35] *** ChanServ sets mode: +v synopsebot

[00:36] *** poohman left
[00:37] *** Geth joined
[00:37] *** ChanServ sets mode: +v Geth

[00:37] *** SourceBaby joined
[00:37] *** ChanServ sets mode: +v SourceBaby

[00:39] *** astronavt joined
[00:40] *** aindilis left
[00:49] *** Sgeo joined
[00:51] *** Sgeo_ left
[00:53] *** poohman joined
[00:54] *** Sgeo_ joined
[00:56] *** Sgeo left
[00:57] *** rube65 joined
[00:57] *** patrickz_ joined
[00:59] *** Cabanossi left
[00:59] *** evalable6 left
[00:59] *** evalable6 joined
[01:00] *** patrickz left
[01:01] *** rube65 left
[01:01] *** Cabanossi joined
[01:19] *** aborazmeh joined
[01:19] *** aborazmeh left
[01:19] *** aborazmeh joined
[01:21] *** ryn1x joined
[01:23] <buggable> New CPAN upload: Terminal-Spinners-0.0.5.tar.gz by RYNIX https://cpan.metacpan.org/authors/id/R/RY/RYNIX/Perl6/Terminal-Spinners-0.0.5.tar.gz

[01:25] *** cdg joined
[01:27] <ryn1x> ^ w00t!

[01:34] <timotimo> cool

[01:35] *** astronavt left
[01:41] *** ryn1x left
[01:44] *** Cabanossi left
[01:45] *** margeas left
[01:46] *** Cabanossi joined
[01:46] *** astronavt joined
[01:47] <Herby_> timotimo: you taking part in the advent of code puzzles this year?

[01:47] <timotimo> i'm not

[01:47] <Herby_> if you get bored, the new one is available in about 3 hours: http://adventofcode.com/

[01:47] <Herby_> and people posting solutions over here: https://www.reddit.com/r/adventofcode/

[01:48] <Herby_> typically the first few days are easy but the difficulty ramps up

[01:48] <timotimo> i'm going through a period of RSI at the moment, so i'm incredibly bored, but also not able/allowed to do much typing

[01:48] *** jeromelanteri joined
[01:48] <Herby_> bummer, hope you feel better

[01:50] <mspo> timotimo: I used to get ganglion cycsts from RSI

[01:50] <mspo> timotimo: eventually I figured out it was cuased by bad wrist positioning more than anything else

[01:50] <mspo> timotimo: I would smash my hand against a stone surface to pop them

[01:55] <timotimo> i do have a ganglion, already had it for a while, but it's still so small it's hard to notice if you don't know it's there, and it hasn't grown in like a year

[01:56] <mspo> timotimo: I never noticed mine until the pain of it passing between my hand-bones hurt too badly

[01:56] <mspo> not driving has helped, actually; since I no longer have the steering wheel in a bad position

[02:12] *** poohman left
[02:13] *** Actualeyes left
[02:15] *** ctilmes joined
[02:22] <Morfent> how do i pass a pointer to a string to a native function?

[02:23] <geekosaur> it already passes them as pointers, because C. if you need a pointer to the pointer, you need to interpose another Pointer

[02:37] *** kyan left
[02:38] <Morfent> oh, the problem was i was passing parametres the wrong way

[02:38] <Morfent> Pointer[Str].new($output.WHERE) should've just been Pointer[Str].new

[02:45] *** robinsmidsrod left
[02:45] *** robinsmidsrod joined
[02:45] *** ilbot3 left
[02:53] <AlexDaniel> c: all constant k = k

[02:53] <committable6> AlexDaniel, https://gist.github.com/1034b317c444a81b8b743c241aaa4879

[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[03:01] <AlexDaniel> c: all my (\a) = 1; say a

[03:02] <committable6> AlexDaniel, https://gist.github.com/41b21096cf1c65bad1c2e897668029f9

[03:02] <AlexDaniel> bisect: old=2015.11 my (\a) = 1; say a

[03:02] <bisectable6> AlexDaniel, Bisecting by output (old=2015.11 new=e5b660e) because on both starting points the exit code is 0

[03:02] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/21747f6e3cb923eb462b0643d9dec43d

[03:02] <bisectable6> AlexDaniel, (2015-12-15) https://github.com/rakudo/rakudo/commit/d23a73da4360961ebdce703ccebcdf6ba77d1f92

[03:03] *** aborazmeh left
[03:08] *** ivans left
[03:10] *** astronavt left
[03:14] <AlexDaniel> so 224 MOLD tickets before‚Ä¶

[03:15] <AlexDaniel> 161 ticket now

[03:15] <AlexDaniel> say 224 - 161

[03:15] <evalable6> AlexDaniel, rakudo-moar e5b660ee0: OUTPUT: ¬´63‚ê§¬ª

[03:15] <AlexDaniel> say 224 √∑ 2

[03:15] <evalable6> AlexDaniel, rakudo-moar e5b660ee0: OUTPUT: ¬´112‚ê§¬ª

[03:15] <AlexDaniel> say 161 √∑ 2, ‚Äòticket to go :)‚Äô

[03:15] <evalable6> AlexDaniel, rakudo-moar e5b660ee0: OUTPUT: ¬´80.5ticket to go :)‚ê§¬ª

[03:15] <AlexDaniel> say 161 √∑ 2 - 112, ‚Äòticket to go :)‚Äô

[03:15] <evalable6> AlexDaniel, rakudo-moar e5b660ee0: OUTPUT: ¬´-31.5ticket to go :)‚ê§¬ª

[03:16] <AlexDaniel> WELL definitely not in this state of mind!!!

[03:16] <AlexDaniel> say 224√∑2 - 161, ‚Äòtickets to go :)‚Äô

[03:16] <evalable6> AlexDaniel, rakudo-moar e5b660ee0: OUTPUT: ¬´-49tickets to go :)‚ê§¬ª

[03:16] <AlexDaniel> ok I'll take it :D

[03:17] <AlexDaniel> 6c: my Int $a of Str; say "hi"

[03:18] <committable6> AlexDaniel, https://gist.github.com/3da7d76993df85fcd740effe47f4930d

[03:18] <AlexDaniel> c: all my Int $a of Str; say "hi"

[03:18] <committable6> AlexDaniel, https://gist.github.com/f1dbf35f2b9c07cd7a28b189ee1798da

[03:18] <AlexDaniel> bisect: old=2015.10 my Int $a of Str; say "hi"

[03:18] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.10 new=e5b660e). Old exit code: 0

[03:19] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/ffe0fa8af14bc1e2184b76c68a355ae5

[03:19] <bisectable6> AlexDaniel, (2015-11-18) https://github.com/rakudo/rakudo/commit/06729d91e6e2d0c96ee700012827677ee518b737

[03:19] <AlexDaniel> c: 06729d91e^,06729d91e my Int $a of Str; say "hi"

[03:20] <committable6> AlexDaniel, https://gist.github.com/4fa568877e56551e5203af885970e391

[03:24] <AlexDaniel> c: all my $a = <2147483648/1>; say $a

[03:25] <committable6> AlexDaniel, https://gist.github.com/93cdd2bf81efb94e66511a9230837fc6

[03:25] <AlexDaniel> bisect: old=2015.12 my $a = <2147483648/1>; say $a

[03:25] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=e5b660e). Old exit code: 1

[03:25] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/3dcbf3113004dc134cdd316f955688a4

[03:25] <bisectable6> AlexDaniel, (2016-02-07) https://github.com/rakudo/rakudo/commit/27752615026fe58fe2012825c5f4e55e7412c95a

[03:28] <AlexDaniel> m: my $a = <2147483648/1>; say $a

[03:28] <camelia> rakudo-moar e5b660ee0: OUTPUT: ¬´2147483648‚ê§¬ª

[03:28] <AlexDaniel> m:  $a = <99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999/1>; say $a

[03:28] <camelia> rakudo-moar e5b660ee0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$a' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5$a = <9999999999999999999999999999999999‚ê§¬ª

[03:28] <AlexDaniel> m: my $a = <99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999/1>; say $a

[03:28] <camelia> rakudo-moar e5b660ee0: OUTPUT: ¬´99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999‚ê§¬ª

[03:28] <AlexDaniel> m: my $a = <99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999/2>; say $a

[03:28] <camelia> rakudo-moar e5b660ee0: OUTPUT: ¬´49999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999.5‚ê§¬ª

[03:31] <AlexDaniel> 6c: https://gist.githubusercontent.com/masak/b84a87a694217c9508d6/raw/266bb5831fcf37bad998ee58d34a1fae47ad59ad/fizzbuzz.p6

[03:31] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:31] <committable6> AlexDaniel, https://gist.github.com/cedc8ef783acc22e8f07afa98f5ad7d6

[03:31] <AlexDaniel> 6c: constant nums = 1; my \fizzbuzz = nums\ .map({ $_ });

[03:31] <committable6> AlexDaniel, https://gist.github.com/76f318afe9a72a77d2bf0fecff46a555

[03:31] *** cdg left
[03:33] *** kyan joined
[03:33] <AlexDaniel> bisect: old=2017.09 https://gist.githubusercontent.com/masak/b84a87a694217c9508d6/raw/266bb5831fcf37bad998ee58d34a1fae47ad59ad/fizzbuzz.p6

[03:33] *** Herby_ left
[03:33] <bisectable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:33] <bisectable6> AlexDaniel, Bisecting by output (old=2017.09 new=e5b660e) because on both starting points the exit code is 1

[03:34] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/143789fbc47bdbc2d6a8aea3f4b93ac1

[03:34] <bisectable6> AlexDaniel, (2017-09-28) https://github.com/rakudo/rakudo/commit/6824e19282e19a0953fc64faf14445600d9b24e6

[03:34] <AlexDaniel> c: 6824e1928^,6824e1928 https://gist.githubusercontent.com/masak/b84a87a694217c9508d6/raw/266bb5831fcf37bad998ee58d34a1fae47ad59ad/fizzbuzz.p6

[03:34] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:34] <committable6> AlexDaniel, https://gist.github.com/eef75414cdee17fb2542b773a49df398

[03:34] <AlexDaniel> well, not really

[03:37] <AlexDaniel> c: all constant nums = 1; my \fizzbuzz = nums\ .map({ $_ });

[03:38] <committable6> AlexDaniel, https://gist.github.com/e503d4e068d70977512a1eb47b65a0a5

[03:40] <AlexDaniel> bisect: constant nums = 1; my \fizzbuzz = nums\ .map({ $_ });

[03:40] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=e5b660e). Old exit code: 1

[03:41] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/f6968d1e500459f26eef2697d054b9ad

[03:41] <bisectable6> AlexDaniel, (2017-10-07) https://github.com/rakudo/rakudo/commit/f254e359d79b5953a019802fcd956421731282dc

[03:42] *** konsolebox left
[03:42] <AlexDaniel> nah I'm not going to reach 112 by myself

[03:43] <AlexDaniel> m: =begin DATA‚ê§foo‚ê§=end DATA‚ê§say $=pod<DATA>

[03:43] <camelia> rakudo-moar e5b660ee0: OUTPUT: ¬´Type Array does not support associative indexing.‚ê§  in block <unit> at <tmp> line 4‚ê§‚ê§¬ª

[03:44] *** konsolebox joined
[03:47] <AlexDaniel> c: all class m { has $.a; method m1() { $::<!a"> = 1; } } ; my $c = m.new(); $c.m1();

[03:48] <committable6> AlexDaniel, https://gist.github.com/836e4459ff9c4260fa087a9ca3a3f2b5

[03:51] <AlexDaniel> eval: https://rt.perl.org/Ticket/Attachment/1352482/722858/test.p6

[03:51] <evalable6> AlexDaniel, It looks like a URL, but mime type is ‚Äòapplication/octet-stream‚Äô while I was expecting something with ‚Äòtext/plain‚Äô or ‚Äòperl‚Äô in it. I can only understand raw links, sorry.

[03:51] <AlexDaniel> üñï RT

[03:57] <AlexDaniel> wait, what is earliest, more and wait?

[03:59] <AlexDaniel> RT#125343 if anyone is interested

[03:59] <synopsebot> RT#125343 [open]: https://rt.perl.org/Ticket/Display.html?id=125343 [WEIRD] Using an earliest { ... wait 0 { ... } } causes 

[04:08] *** Herby_ joined
[04:10] *** robinsmidsrod left
[04:13] *** Cabanossi left
[04:13] <AlexDaniel> 6c: use v6;‚ê§‚ê§my $supply = supply {‚ê§    die;‚ê§}‚ê§‚ê§react {‚ê§    whenever $supply {‚ê§‚ê§    }‚ê§}‚ê§

[04:13] <committable6> AlexDaniel, https://gist.github.com/68ce947d044543596b490d3a933d6c74

[04:14] <AlexDaniel> bisect: old=2016.10 new=2016.11 use v6;‚ê§‚ê§my $supply = supply {‚ê§    die;‚ê§}‚ê§‚ê§react {‚ê§    whenever $supply {‚ê§‚ê§    }‚ê§}‚ê§

[04:14] <bisectable6> AlexDaniel, Bisecting by output (old=2016.10 new=2016.11) because on both starting points the exit code is 1

[04:14] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/7db4c66b0bf3377f997c5e0b5b069493

[04:14] <bisectable6> AlexDaniel, (2016-10-15) https://github.com/rakudo/rakudo/commit/19422430e40d45460ea87568feedc30a810c26e5

[04:14] <AlexDaniel> ah damn it has the filename in the exception

[04:15] *** Cabanossi joined
[04:16] <AlexDaniel> bisect: old=2016.10 new=2016.11 use v6;‚ê§‚ê§my $supply = supply {‚ê§    die;‚ê§}‚ê§‚ê§react {‚ê§    whenever $supply {‚ê§‚ê§    }‚ê§}‚ê§CATCH { exit .gist.contains: ‚ÄòOriginal exception‚Äô }

[04:16] <bisectable6> AlexDaniel, Bisecting by exit code (old=2016.10 new=2016.11). Old exit code: 0

[04:16] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/5b549d89bf73b4afafc27425d16e1b4a

[04:16] <bisectable6> AlexDaniel, (2016-11-02) https://github.com/rakudo/rakudo/commit/abf6caf06eb7e48674d4e22a4ad6b580e5efecbf

[04:16] *** wander joined
[04:19] <wander> what a new day #perl6

[04:19] <yoleaux> 2 Dec 2017 23:13Z <AlexDaniel> wander: good news!!! I think your RT comment went through

[04:19] <AlexDaniel> wander: o/

[04:19] <Herby_> wander: \o

[04:19] <AlexDaniel> wander: we're at <147 MOLD tickets, can we get it to 112 (half of what we had before)?

[04:20] <AlexDaniel> oh, actually 144 already

[04:20] <wander> oh, even forget which rt :-)

[04:21] <AlexDaniel> wander: it was some ticket that's now closed :)

[04:21] <wander> squashable6: status

[04:21] <squashable6> wander, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà7 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[04:21] <squashable6> wander, Log and stats: https://gist.github.com/58300e37b003fbf2c285127b4be6bed8

[04:21] <wander> good news :)

[04:22] <AlexDaniel> c: all say 1 !after 2 !after 3;

[04:23] <committable6> AlexDaniel, https://gist.github.com/e4532afbab17e1f44699d54fc3a66d42

[04:23] <AlexDaniel> wander: not sure about that, I'll have to leave in an hour or so

[04:23] <AlexDaniel> bisect: old=2015.11 say 1 !after 2 !after 3;

[04:23] <bisectable6> AlexDaniel, Bisecting by output (old=2015.11 new=e5b660e) because on both starting points the exit code is 0

[04:23] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/312f805011d5aa22bd26e756666a61ff

[04:23] <bisectable6> AlexDaniel, (2015-11-23) https://github.com/rakudo/rakudo/commit/a06069b1d7c582f62439db1360080ad77f6a71ec

[04:23] *** Herby_ left
[04:23] <AlexDaniel> c: a06069b1d^,a06069b1d say 1 !after 2 !after 3;

[04:24] <committable6> AlexDaniel, ¬¶a06069b1d^: ¬´False‚ê§¬ª ¬¶a06069b: ¬´True‚ê§¬ª

[04:25] *** ctilmes left
[04:26] *** reportable6 left
[04:26] *** reportable6 joined
[04:26] *** ChanServ sets mode: +v reportable6

[04:27] <wander> say !((!(1 after 2)) after 1)

[04:27] <evalable6> wander, rakudo-moar e5b660ee0: OUTPUT: ¬´True‚ê§¬ª

[04:27] <wander> if after's associativity marked 'left'

[04:28] <AlexDaniel> c: 2017.11,HEAD my $a = (1, 2, 3); $a[42] = 21

[04:28] <committable6> AlexDaniel, ¬¶2017.11,HEAD(e5b660e): ¬´Cannot modify an immutable Str (Nil)‚ê§  in block <unit> at /tmp/awFQWcir8L line 1‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[04:29] *** konsolebox left
[04:30] *** pdcawley left
[04:31] *** kyan left
[04:35] *** konsolebox joined
[04:40] *** konsolebox left
[04:41] <AlexDaniel> down to 137‚Ä¶

[04:42] *** konsolebox joined
[04:46] <wander> reportable6: list

[04:46] <reportable6> wander, https://gist.github.com/637814509cbd7ed7b255091ea1ca9224

[04:47] <wander> reportable6: 2017-12-02T00:00:00Z 2017-12-03T00:00:00Z

[04:47] <reportable6> wander, OK, working on it! This may take up to 40 seconds

[04:47] <reportable6> wander, https://gist.github.com/dfa7f43d6ed26a53ca3f414352509448

[04:49] <AlexDaniel> 6c: say ("a" ~~ /<alpha> & <ident> & <alnum>/).caps

[04:49] <committable6> AlexDaniel, https://gist.github.com/8a185bf112addfc979874bc785329f35

[04:49] <AlexDaniel> hmm

[04:49] <AlexDaniel> bisect: say ("a" ~~ /<alpha> & <ident> & <alnum>/).caps

[04:49] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=e5b660e) because on both starting points the exit code is 0

[04:49] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/e966c87e9c18ba395daff3ccd4b2d2ba

[04:49] <bisectable6> AlexDaniel, (2017-02-22) https://github.com/rakudo/rakudo/commit/1cafc67b1aad14eafa8d3e6431656524e4d0d5d3

[04:50] <AlexDaniel> c: 1cafc67b1aa^,1cafc67b1aa say ("a" ~~ /<alpha> & <ident> & <alnum>/).caps

[04:50] <committable6> AlexDaniel, ¬¶1cafc67b1aa^: ¬´(ident => ÔΩ¢aÔΩ£ alnum => ÔΩ¢aÔΩ£ alpha => ÔΩ¢aÔΩ£)‚ê§¬ª ¬¶1cafc67: ¬´(ident => ÔΩ¢aÔΩ£ alpha => ÔΩ¢aÔΩ£ alnum => ÔΩ¢aÔΩ£)‚ê§¬ª

[04:51] <AlexDaniel> wander: well, the closest snapshot is actually 2017-12-01T07:33:00Z

[04:51] *** reportable6 left
[04:51] *** reportable6 joined
[04:52] <AlexDaniel> reportable6: 2017-12-01T07:33:00Z 2017-12-03T00:00:00Z

[04:52] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[04:52] <reportable6> AlexDaniel, https://gist.github.com/8a38cdf3fbd564bdd06c2eb53b965942

[04:53] <AlexDaniel> ‚Üë that looks better :)

[04:54] <wander> yes, i know that. i wanted only to see the diff just now

[04:55] <wander> :)

[04:55] <AlexDaniel> :)

[04:56] *** Herby_ joined
[04:56] <Herby_> Advent of Code: Day 3 kicks off in about 3 minutes for those interested: http://adventofcode.com/

[05:01] <AlexDaniel> wander: nah, I won't make it. Going to bed now

[05:01] * AlexDaniel hoping to get some good 90 minutes of sleep :)

[05:10] <wander> rt#125061

[05:10] <synopsebot> RT#125061 [new]: https://rt.perl.org/Ticket/Display.html?id=125061 Roast rakudo skip/todo test:./S04-declarations/will.t line:33 reason: 'declared variable not visible in block yet'

[05:10] <wander> https://github.com/perl6/roast/blob/03686da5d7f8d8c359e0ce6a538e29dc95e1d218/S04-declarations/will.t#L29-L36

[05:11] <wander> regardless the NYI init, i wonder whether `will init` is supposed to see $x

[05:12] <wander> my $x  will begin { $same1 ~= "a"; say $x }

[05:14] *** araraloren joined
[05:19] *** someuser joined
[05:27] *** dmaestro left
[05:29] *** llfourn_ left
[05:36] *** khw left
[05:37] *** konsolebox left
[05:38] *** konsolebox joined
[05:43] <araraloren> The second day: https://ideone.com/jpJpG3

[05:43] <araraloren> :)

[05:53] *** Xliff_ left
[05:56] <Herby_> araraloren: ++

[06:16] <squashable6> üçï W4anD0eR96++ opened issue ‚ÄúAnother butting issue on Str and Enum‚Äù: https://github.com/rakudo/rakudo/issues/1296

[06:17] *** darutoko joined
[06:28] *** Cabanossi left
[06:30] *** Cabanossi joined
[06:32] <wander> m: use MONKEY-SEE-NO-EVAL; EVAL('class A { has $.a}'); say A.new(a=>4);

[06:32] <camelia> rakudo-moar e5b660ee0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    A used at line 1‚ê§‚ê§¬ª

[06:32] <wander> ^^ This is what rt#122289 says, IMO

[06:32] <synopsebot> RT#122289 [open]: https://rt.perl.org/Ticket/Display.html?id=122289 [WEIRD] unexpected behaviour during EVAL()

[06:32] *** konsolebox left
[06:32] <wander> however, if you put these stmts line by line, it works

[06:32] <wander> in REPL

[06:33] <wander> not work if you write down a script

[06:34] *** konsolebox joined
[06:40] <wander> interesting, i've sent 4 e-mails to rt system on 4 different tickets. an hour late none of them arrived.

[06:40] <wander> s/late/later/

[06:41] * wander errands &

[06:42] <geekosaur> rt does that in my experience

[06:42] <geekosaur> it batches stuff

[06:42] <geekosaur> so for example with all the activity in the squashathon I go 1-2 hours with an empty mailbox and then 20 messages at once

[06:43] <geekosaur> well, not rt-the-program but whatever mail setup rt.perl.org is using/connected to

[06:44] <geekosaur> reminds me of sendmail >4 with some bad addresses in the outbound mix and bad tuning, actually. sorts by recipient, then gets stuck for an hour on the MX hosts it can't connect to

[06:45] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúAnother butting issue on Str and Enum‚Äù: https://github.com/rakudo/rakudo/issues/1296

[06:58] *** konsolebox left
[06:59] *** konsolebox joined
[07:10] *** konsolebox left
[07:11] *** AlexDaniel left
[07:12] *** konsolebox joined
[07:26] *** konsolebox left
[07:27] *** parv joined
[07:27] *** konsolebox joined
[07:35] *** konsolebox left
[07:39] <araraloren> https://gist.github.com/araraloren/9e088472525b6d369204db20d3d8c9ba

[07:39] <araraloren> Can someone tell me what's the debug message mean ? It's about zef

[07:40] <araraloren> Why it test failed

[07:41] *** konsolebox joined
[07:46] *** rindolf joined
[07:47] <araraloren> .tell ugexe I setup a new linux(fedora 25), after install rakudo-pkg. It failed when I run `install-zef-as-user.p6` ^^

[07:47] <yoleaux> araraloren: I'll pass your message to ugexe.

[07:47] <araraloren> .tell ugexe sorry, fedora 26

[07:47] <yoleaux> araraloren: I'll pass your message to ugexe.

[07:52] <geekosaur> I'm thinking you're missing some external programs, notably 'prove' which should come from perl 5. But you;re on Fedora so you likely are suffering from the RH/Fedora 'we only install a half-assed perl' issue

[07:54] <geekosaur> you want to install the perl-core package to get a proper base perl 5 environment like every other OS / distro provides

[07:55] <geekosaur> this may also be the issue with TAP::Harness, especially if it's looking for the p5 one

[07:55] *** cdg joined
[07:56] *** wamba joined
[08:00] *** cdg left
[08:04] *** eliasr joined
[08:10] *** Actualeyes joined
[08:16] *** AlexDaniel joined
[08:20] *** AlexDaniel left
[08:21] *** AlexDaniel joined
[08:25] *** pdcawley joined
[08:34] *** konsolebox left
[08:35] *** wander left
[08:36] *** konsolebox joined
[08:38] *** sena_kun joined
[08:44] *** konsolebox left
[08:46] *** konsolebox joined
[08:54] *** nadim joined
[08:54] *** parv left
[08:55] *** pdcawley left
[08:58] *** natrys joined
[09:02] *** parv joined
[09:03] *** robertle joined
[09:11] *** domidumont joined
[09:13] *** cdg joined
[09:14] <AlexDaniel> squashable6: status

[09:14] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà2 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:14] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/d692f2f0ff6314da25ec271b589e8347

[09:15] *** cdg_ joined
[09:16] <squashable6> üçï AlexDaniel++ edited wiki page ‚ÄúMonthly Bug Squash Day‚Äù: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:16] <natrys> if I have a list of numbers, what's a concise way to get the first index of a certain number?

[09:18] *** cdg left
[09:18] *** cdg joined
[09:19] *** domidumont left
[09:19] *** cdg_ left
[09:19] <araraloren> geekosaur, yeah, maybe. But it just said that `SKIP`ed, not report error

[09:19] *** domidumont joined
[09:23] *** cdg left
[09:42] *** ivans joined
[09:46] *** pdcawley joined
[09:49] <AlexDaniel> m: say <60 80 31 50 20>.first(*.is-prime, :k)

[09:49] <camelia> rakudo-moar e31a414b9: OUTPUT: ¬´2‚ê§¬ª

[09:49] <AlexDaniel> natrys: ‚Üë

[09:51] <AlexDaniel> mch: Block but True

[09:51] <committable6> AlexDaniel, ¬¶2015.12: ¬´Cannot look up attributes in a type object‚ê§  in block <unit> at /tmp/AJ1lVK6gGf line 1‚ê§‚ê§ ¬´exit code = 1¬ª¬ª ¬¶HEAD(e31a414): ¬´¬ª

[09:51] <AlexDaniel> mch: my $b = Block but True; say $b.WHICH

[09:51] <committable6> AlexDaniel, ¬¶2015.12: ¬´Cannot look up attributes in a type object‚ê§  in block <unit> at /tmp/Qe1RNQTi2t line 1‚ê§‚ê§ ¬´exit code = 1¬ª¬ª ¬¶HEAD(e31a414): ¬´Block+{<anon|94398302702384>}|U94398282163112‚ê§¬ª

[09:54] <natrys> AlexDaniel: thanks! somehow missed first in the doc

[10:09] *** konsolebox left
[10:09] <AlexDaniel> eval: https://gist.githubusercontent.com/TimToady/4963642/raw/5fdbc679c77906f22a48967ef9cfba9e782a88d4/gistfile1.txt

[10:09] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[10:09] <evalable6> AlexDaniel, rakudo-moar e31a414b9: OUTPUT: ¬´(exit code 1) Too many positionals passed; expected 1 argument but got 4‚ê§  in method new at /tmp/kT9pWaHpbw line 46‚ê§  in block <unit> at /tmp/kT9pWaHpbw line 59‚ê§‚ê§¬ª

[10:10] <AlexDaniel> c: all https://gist.githubusercontent.com/TimToady/4963642/raw/5fdbc679c77906f22a48967ef9cfba9e782a88d4/gistfile1.txt

[10:10] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[10:10] <committable6> AlexDaniel, https://gist.github.com/297882f4f84bb8362a0ce0523439c436

[10:11] *** konsolebox joined
[10:11] <AlexDaniel> 10 tickets left!!

[10:12] <AlexDaniel> squashable6: next

[10:12] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:12] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/dd2ed84cee5445ddbb9bd774746ef56b

[10:12] *** pdcawley left
[10:13] *** TEttinger left
[10:16] *** natrys left
[10:21] <AlexDaniel> 117!!!

[10:21] <AlexDaniel> 5 to go!!

[10:26] <teatime> when, if ever, should you use ‚Äúuse v6;‚Äù ?

[10:27] <AlexDaniel> teatime: if you're worried that some confused mind will run it with perl5

[10:27] <teatime> (I'm pretty satisfied naming files ‚Äú‚Ä¶.pl6‚Äù and ‚Äú‚Ä¶.pm6‚Äù, if that matters.  That's fine, right?)

[10:27] <AlexDaniel> yea, p6 is possibly more common but pl6 is fine too

[10:28] <teatime> ah, hadn't seen that one yet actually.

[10:28] *** Cabanossi left
[10:28] <teatime> thanks.

[10:28] <lizmat> AlexDaniel: have to go afk now, so no more Squashathon contributions from my end  :-(

[10:28] <AlexDaniel> lizmat: that's cool. I think we'll reach 112

[10:28] <teatime> .p6 and .pm6, or .p6 for both?

[10:29] <AlexDaniel> lizmat: which is half of what we had!

[10:29] <AlexDaniel> lizmat: something to mention in p6weekly maybe *hint-hint*

[10:29] *** parv left
[10:29] <teatime> ‚Äú.p6‚Äù is definitely sexier, somehow.  (lol)

[10:29] <AlexDaniel> teatime: https://github.com/perl6/doc/issues/778

[10:29] <teatime> in the same way that X and K are cooler letters of the alphabet.

[10:30] *** Cabanossi joined
[10:30] <AlexDaniel> teatime: I think √∂ is cooler :)

[10:31] <AlexDaniel> actually, we already reached 112 MOLD tickets

[10:31] <AlexDaniel> \o/

[10:32] <teatime> ok, so (.p6 + .pm6) seems to be the winner.  thanks, AlexDaniel++

[10:33] <AlexDaniel> teatime: well, that's the idea. But if you have more than a hundred of modules then you can change it \o/

[10:33] <teatime> heh you should re-add LHF, if y'all settled that / if it wouldn't annoy coke

[10:33] <AlexDaniel> ( well, at least you can ‚Äúvote‚Äù a bit :) )

[10:34] <teatime> haha

[10:34] <moritz> data from perl6-all-modules: .p6 346 vs .pl 198 vs .pl6 310

[10:34] <moritz> pm6 2861 vs pm 1488

[10:36] <teatime> on windows, I think I'd have the installer:  associate both .p6 and .pl6 with perl6, {dunno if there'd be any reason to also associate .pm6?),  and then if perl6 scripts ending in .pl are expected to work, that would actually be handled/wrapped by perl5  (or some perl-dispatching script, if you can't get buy-in from perl5 upstream)

[10:37] <teatime> and then in docs, it's up to you whether to just suggest .p6 or say there's a choice between the two.

[10:37] <AlexDaniel> teatime: https://github.com/perl6/doc/issues/778#issuecomment-348754983 :)

[10:37] <teatime> but mainly, should def. assoc. both .p6 and .pl6.  on unix, it matters much less / not at all.

[10:38] *** evi joined
[10:38] * teatime makes a quick mention of that in the bug.

[10:38] *** lizmat left
[10:42] <squashable6> üçï AlexDaniel++ edited wiki page ‚ÄúMOLD Removal SQUASHathon‚Äù: https://github.com/rakudo/rakudo/wiki/MOLD-Removal-SQUASHathon

[10:43] <AlexDaniel> squashable6: status

[10:43] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:43] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/ac4ff0923303b08223fb046e42985ccf

[10:44] <AlexDaniel> reportable6: 2017-12-01T07:33:00Z 2017-12-03T06:00:00Z

[10:44] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[10:44] *** reportable6 left
[10:44] *** reportable6 joined
[10:44] <teatime> AlexDaniel: I guess it's an EBIKEALREADYSHEDDED

[10:44] <AlexDaniel> reportable6: 2017-12-01T07:33:00Z 2017-12-03T06:00:00Z

[10:44] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[10:45] <AlexDaniel> a bikeshed for e-bikes? That's something new

[10:45] <teatime> threw my 0.02¬¢ in tho 

[10:45] <reportable6> AlexDaniel, https://gist.github.com/866ce0876f2404f0d887b26210b0e122

[10:45] *** reportable6 left
[10:45] *** reportable6 joined
[10:45] *** ChanServ sets mode: +v reportable6

[10:48] *** konsolebox left
[10:50] *** parv joined
[10:55] *** konsolebox joined
[10:59] *** parv left
[11:02] <AlexDaniel> there's not much to do here now: https://fail.rakudo.party/t/MOLD

[11:03] <AlexDaniel> maybe some of the autogenerated tickets are already resolved, but I did check them automagically with a script about two months ago

[11:03] <AlexDaniel> (and at the time closed some of them)

[11:03] <AlexDaniel> not really willing to do it again, maybe remind me next December‚Ä¶ :)

[11:06] *** MasterDuke joined
[11:09] *** Ven`` joined
[11:18] *** wamba left
[11:20] *** wamba joined
[11:24] <AlexDaniel> squashable6: status

[11:24] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event is in 35 minutes. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:24] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/b745dc910a2226badbf2f6dffdef5518

[11:29] *** Ven`` left
[11:30] *** itaipu joined
[11:35] *** AlexDaniel left
[11:44] *** konsolebox left
[11:45] <MasterDuke> i was travelling all day yesterday, but i did just confirm that one RT still has the same behavior

[11:46] *** konsolebox joined
[11:52] *** evi left
[12:04] *** pdcawley joined
[12:06] *** raiph left
[12:13] *** Cabanossi left
[12:15] *** wander joined
[12:15] *** Cabanossi joined
[12:15] <wander> AlexDaniel: 103 MOLD now

[12:16] <wander> [12:19] <AlexDaniel> wander: we're at <147 MOLD tickets, can we get it to 112 (half of what we had before)?

[12:17] *** ctilmes joined
[12:20] *** margeas joined
[12:22] <AlexDaniel`> MasterDuke++ every bit counts :)

[12:23] <AlexDaniel`> wander: \o/

[12:39] *** pdcawley left
[12:44] *** pdcawley joined
[12:52] *** pdcawley left
[12:58] *** kitsunenokenja joined
[13:22] *** AlexDaniel joined
[13:23] <AlexDaniel> reportable6: 2017-12-01T07:33:00Z 2017-12-03T12:00:00Z

[13:23] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[13:23] <reportable6> AlexDaniel, https://gist.github.com/c2824fa8c8bffdc72c79e7f22e545c8b

[13:24] <AlexDaniel> squashable6: status

[13:24] <squashable6> AlexDaniel, Next SQUASHathon in 32 days and ‚âà20 hours (2018-01-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[13:25] <SmokeMachine> Hi! how can I convert NQPArray to Array on QAST?

[13:25] *** robertle left
[13:26] <AlexDaniel> squashable6: log 2017-12-02

[13:26] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/2286b5029e04bfb1aa5552f2a72879ea

[13:30] *** jeromelanteri left
[13:31] *** reportable6 left
[13:31] *** reportable6 joined
[13:31] *** ChanServ sets mode: +v reportable6

[13:31] <AlexDaniel> reportable6: 2017-12-01T07:33:00Z 2017-12-03T12:00:00Z

[13:31] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[13:32] <reportable6> AlexDaniel, https://gist.github.com/d9a9f76e6470f80be8b03a463464c6cb

[13:47] *** reportable6 left
[13:47] *** reportable6 joined
[13:57] *** Popov_ joined
[13:57] <Popov_> #perl6

[13:59] *** ctilmes left
[13:59] <Popov_> perl6: say 'hello'

[13:59] <camelia> rakudo-jvm a92950fb4: OUTPUT: ¬´Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.‚ê§¬ª

[13:59] <camelia> ..rakudo-moar c9699ab2c: OUTPUT: ¬´hello‚ê§¬ª

[13:59] <Popov_> perl6: say "hello";

[13:59] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´hello‚ê§¬ª

[13:59] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: ¬´Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.‚ê§¬ª

[14:00] <DrForr> Afternoon all.

[14:00] <Popov_> perl6: say "hello" eq "hello";

[14:00] <camelia> rakudo-jvm a92950fb4: OUTPUT: ¬´Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.‚ê§¬ª

[14:00] <camelia> ..rakudo-moar c9699ab2c: OUTPUT: ¬´True‚ê§¬ª

[14:00] <Popov_> perl6: say 6 eq 6;

[14:00] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´True‚ê§¬ª

[14:00] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: ¬´Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.‚ê§¬ª

[14:00] <Popov_> perl6: say 6 eq 7;

[14:00] <camelia> rakudo-jvm a92950fb4: OUTPUT: ¬´Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.‚ê§¬ª

[14:00] <camelia> ..rakudo-moar c9699ab2c: OUTPUT: ¬´False‚ê§¬ª

[14:00] <Popov_> perl6: say 6 ne 7;

[14:00] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´True‚ê§¬ª

[14:00] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: ¬´Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.‚ê§¬ª

[14:01] <DrForr> The P6A interface is not letting me choose a date (the 6th, obviously) on which to publish an article. I'm guessing I should just write it as usual and paste the HTML or whatever on the 6th?

[14:02] <DrForr> (also the p6eval-token thing looks a bit odd to me.)

[14:02] <moritz> DrForr: you can schedule posts

[14:03] <moritz> DrForr: you might need the old-school interface at https://perl6advent.wordpress.com/wp-admin/edit.php though

[14:03] <moritz> DrForr: or if you are having trouble, I can schedule it for you

[14:03] <DrForr> That's what I've been trying to do. There's a "Publish Immediately" sidebar... Aaah, that might do the trick.

[14:03] <DrForr> Let me try that first. It gives me a calendar but won't let me actually click on a date.

[14:04] <moritz> I can schedule it for you if you want. You can still edit it after that

[14:04] <moritz> tbrowder: how is your advent calendar post for tomorrow coming along?

[14:05] <DrForr> Let me try this first...

[14:06] <DrForr> Hold the phone here, I don't think this is the right account. Fiddling...

[14:08] <DrForr> moritz: "Cannot Acess the Dashboard Requested" - I don't think I've got access to p6a, and it's using my existing WP account that I'd tried desperately to forget about.

[14:09] <moritz> DrForr: should i send you an inventation to a different email address?

[14:09] <moritz> *invitation

[14:10] <DrForr> I *swear* I'm going to rewrite this POC in Perl6...

[14:12] <AlexDaniel> Popov_: we normally use ‚Äúm: ‚Äù prefix

[14:12] <AlexDaniel> m: say 42

[14:12] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´42‚ê§¬ª

[14:12] <DrForr> moritz++ # thanks, hopefully that'll work.

[14:12] <moritz> btw my post for the 8th is ready, and can be swapped with an earlier date if the need arises

[14:16] *** geospeck joined
[14:18] *** geospeck left
[14:18] *** robertle joined
[14:28] <titsuki> .tell moritz thanks for your code modification of my advent post! But I gave up using <pre> tags and decided to use gist. 

[14:28] <yoleaux> titsuki: I'll pass your message to moritz.

[14:35] *** kitsunenokenja left
[14:41] *** ctilmes joined
[14:46] *** Popov_ left
[14:56] *** Morfent joined
[14:59] *** geospeck joined
[15:04] *** Morfent left
[15:13] *** cdg joined
[15:14] *** itaipu left
[15:20] *** nadim left
[15:22] *** nadim joined
[15:23] <tbrowder> .tell moritz i‚Äôll make it but i would prefer a swap of dates if possible

[15:23] <yoleaux> tbrowder: I'll pass your message to moritz.

[15:29] *** Cabanossi left
[15:30] *** Cabanossi joined
[15:32] *** Morfent joined
[15:32] *** Morfent left
[15:35] *** Morfent joined
[15:40] *** araraloren left
[15:43] *** Ven`` joined
[15:53] *** TreyHarris left
[15:58] <Herby_> o/

[15:59] *** Cabanossi left
[16:00] *** Cabanossi joined
[16:02] *** Voldenet joined
[16:02] *** Voldenet left
[16:02] *** Voldenet joined
[16:07] *** TreyHarris joined
[16:08] *** lizmat joined
[16:09] *** geospeck left
[16:13] *** ShalokShalom left
[16:15] <moritz> tbrowder: sure, no problem

[16:15] <yoleaux> 14:28Z <titsuki> moritz: thanks for your code modification of my advent post! But I gave up using <pre> tags and decided to use gist.

[16:15] <yoleaux> 15:23Z <tbrowder> moritz: i‚Äôll make it but i would prefer a swap of dates if possible

[16:16] <Geth> ¬¶ mu: 151337f253 | (Moritz Lenz)++ | misc/perl6advent-2017/schedule

[16:16] <Geth> ¬¶ mu: Swap days with tbrowder

[16:16] <Geth> ¬¶ mu: review: https://github.com/perl6/mu/commit/151337f253

[16:20] <moritz> ZofBot: at least in the preview of the perl 6 advent calendar, it seems that the first line of a <pre><code>...</code></pre> block is indented a few pixels more than the rest. It would be awesome if you could deploy your CSS skills to fix that

[16:20] <moritz> if not, no big deal

[16:21] *** khw joined
[16:22] <moritz> blog post for tomorrow is scheduled

[16:23] <tbrowder> .tell moritz thanks!

[16:23] <yoleaux> tbrowder: I'll pass your message to moritz.

[16:23] <moritz> I'm right here :-)

[16:23] <yoleaux> 16:23Z <tbrowder> moritz: thanks!

[16:38] *** perlpilot_ joined
[16:40] *** kyan joined
[16:40] *** kyan left
[16:41] *** patrickz_ left
[16:46] *** vendethiel- joined
[16:48] *** Ven`` left
[16:55] *** ctilmes left
[17:14] *** lizmat left
[17:17] <wander> squashable6: status

[17:17] <squashable6> wander, Next SQUASHathon in 32 days and ‚âà16 hours (2018-01-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:18] *** ilbelkyr joined
[17:19] *** Ven`` joined
[17:20] *** vendethiel- left
[17:29] *** Cabanossi left
[17:30] *** Cabanossi joined
[17:38] *** cdg left
[17:44] *** aindilis joined
[17:44] *** cdg joined
[17:49] *** cdg left
[17:53] *** john_parr joined
[17:55] *** TreyHarris left
[17:56] *** wander left
[18:02] *** yqt joined
[18:03] *** comborico1611 joined
[18:05] <comborico1611> Perlpilot, you around?

[18:07] *** relaxed joined
[18:10] *** TreyHarris joined
[18:11] *** cdg joined
[18:12] *** patrickz joined
[18:26] *** darutoko left
[18:29] *** Cabanossi left
[18:30] *** Cabanossi joined
[18:33] <buggable> New CPAN upload: Font-FreeType-0.0.5.tar.gz by WARRINGD https://cpan.metacpan.org/authors/id/W/WA/WARRINGD/Perl6/Font-FreeType-0.0.5.tar.gz

[18:38] *** rgrau joined
[19:11] *** ctilmes joined
[19:16] *** dotness joined
[19:21] <dotness> Hey. Is there a way to get a child class name from parent's method ? https://glot.io/snippets/ew2q9kpewp

[19:22] <dotness> I want to return child class instance via parent's custom constructor. Is there a way to get child class name via callframe or something buildin ?

[19:24] <timotimo> not sure what you're looking for; how does the parent method decide which child class' name to return?

[19:24] <timotimo> anyway, if you call the method "custom-constructor" on B rather than A - even if it's declared in A - it will create a B for you (if you use "self.bless" or "self.new")

[19:25] *** bwisti joined
[19:25] <dotness> hah , funny it is in fact self.new - i was looking at it for half an hour , but couldnt see it ;)

[19:25] <timotimo> the trick is that "self" is of the type you're calling the method on

[19:25] *** pmurias joined
[19:26] <timotimo> m: class A { method what-am-i { say self.^name } }; class B is A { }; class C is B { }; A.what-am-i; B.what-am-i; C.what-am-i

[19:26] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´A‚ê§B‚ê§C‚ê§¬ª

[19:27] <b2gills> If you want the actual type object, rather than the name of it swap `.^name` with `.WHAT`

[19:27] <timotimo> right, but you'll likely just want to call self.new or self.bless in which case it doesn't care if it's the type object or an instance

[19:29] <dotness> thanks :) , its just funny that i had the answer before my eyes all the time - but for some reason i started playing with ::?CLASS:U - which is just a macro ;)

[19:30] <timotimo> that expression is useful mostly in roles, because roles can be mixed into whatever classes

[19:35] *** releasable6 left
[19:35] *** releasable6 joined
[19:35] *** ChanServ sets mode: +v releasable6

[19:36] *** unicodable6 left
[19:36] *** unicodable6 joined
[19:36] *** ChanServ sets mode: +v unicodable6

[19:36] *** bisectable6 left
[19:36] *** committable6 left
[19:36] *** bisectable6 joined
[19:36] *** committable6 joined
[19:36] *** ChanServ sets mode: +v committable6

[19:47] <moritz> if I enable "Use Markdown for posts and pages." on https://perl6advent.wordpress.com/wp-admin/options-writing.php will it break the existing posts and drafts?

[19:49] <moritz> should I try it?

[19:52] *** ctilmes left
[19:52] <comborico1611> I dunno, but I need to submit my article description.

[19:53] *** ctilmes joined
[19:57] <SmokeMachine> Hi there! could someone help me? Im writing a slang and one of the slang do is create a block, bur when I create the block (with the slang) inside a for loop it gets only the last value of the utterable variable... it runs all the times it should, but every time with the same value...

[19:57] <SmokeMachine> my code is here: https://github.com/FCO/p6-react/blob/master/teste2.p6

[19:57] <SmokeMachine> it prints:

[19:58] <SmokeMachine> https://www.irccloud.com/pastebin/CptqVuqy/

[19:58] <SmokeMachine> could someone help me?

[19:59] <comborico1611> I'm a newb.  Sorry.

[19:59] <SmokeMachine> comborico1611: :) thanks

[20:01] <moritz> comborico1611: and you should actually write the article :-)

[20:01] <SmokeMachine> moritz: any help?

[20:02] <moritz> SmokeMachine: sorry, I don't have any experience with slangs

[20:02] <SmokeMachine> :(

[20:07] *** domidumont left
[20:09] *** pdcawley joined
[20:09] *** pmurias left
[20:09] *** pmurias joined
[20:13] <comborico1611> mortiz, I'm almost finished.

[20:13] <moritz> comborico1611: that's great

[20:13] <comborico1611> moritz*

[20:13] <comborico1611> Yup!

[20:14] <moritz> and it seems bduggan is done with his post for day 10

[20:14] <tony-o> SmokeMachine: why are you calling .render twice?

[20:15] <SmokeMachine> the first one is the component's render and the second one is the element's render...

[20:15] <SmokeMachine> the component's render returns a element...

[20:16] <SmokeMachine> tony-o: ^^

[20:18] *** TEttinger joined
[20:19] <tony-o> i have a feeling the answer is in the slang

[20:20] <tony-o> the $item is set properly when it gets to <Item ..

[20:20] <ctilmes> moritz - I scheduled mine for 12:00am.

[20:20] <ctilmes> on tuesday

[20:20] *** cdg left
[20:21] *** cdg joined
[20:21] <SmokeMachine> tony-o: probably...

[20:21] <SmokeMachine> this works:

[20:22] <moritz> ctilmes: thanks!

[20:22] <SmokeMachine> https://www.irccloud.com/pastebin/ZuC8TNf5/

[20:23] <tony-o> is that the route you want to go?  the first one seems more readable

[20:23] <moritz> ctilmes: the time zone seems not to be UTC; can I change it to midnight UTC?

[20:23] <SmokeMachine> tony-o: no! just testing...

[20:23] <ctilmes> please -- I wasn't sure about that

[20:23] *** dotness left
[20:23] <ctilmes> thank you

[20:24] <tony-o> SmokeMachine: :-)

[20:24] *** sftp left
[20:24] <SmokeMachine> I was used to have the same kind of problem writing JS with var variables (no let)...

[20:24] <moritz> done

[20:25] *** cdg left
[20:27] <SmokeMachine> tony-o: like this: https://glot.io/snippets/ew2s40zm67

[20:27] <tony-o> SmokeMachine: here - add this to line 8 on your Slang

[20:27] <tony-o> say @data[0]<data>.().perl if $type eq 'Item';

[20:27] <evalable6> tony-o, rakudo-moar c9699ab2c: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/ciGLEh_9qZ‚ê§Variable '@data' is not declared‚ê§at /tmp/ciGLEh_9qZ:1‚ê§------> 03say 08‚èè04@data[0]<data>.().perl if $type eq 'Item‚ê§¬ª

[20:28] *** Cabanossi left
[20:28] <tony-o> that gets the item you're _actually_ looking for, which sounds like the slang is parsing  data="{{something}}" as a Block you need to call to get the data 

[20:29] <SmokeMachine> tony-o https://www.irccloud.com/pastebin/3EoSW72F/

[20:30] *** Cabanossi joined
[20:32] <SmokeMachine> tony-o: if I comment the 2nd render, and print its elements, this is what is printed:

[20:32] <SmokeMachine> Element.new(type => "ul", children => [[Element.new(type => "Item", children => [], pars => {:data(->  { #`(Block|140715798154584) ... })}), Element.new(type => "Item", children => [], pars => {:data(->  { #`(Block|140715798154584) ... })}), Element.new(type => "Item", children => [], pars => {:data(->  { #`(Block|140715798154584) ... })})],], pars => {})

[20:32] <tony-o> SmokeMachine: https://gist.github.com/tony-o/8254813e24224c147b8406729a26b34f

[20:32] *** benchable6 left
[20:33] *** benchable6 joined
[20:33] <tony-o> i think this does closer to what you'd like

[20:33] *** kerframil joined
[20:34] <tony-o> your slang is parsing Item data="{{ $item }}" as  create an element (Item) with data (Block <- callable in this case) 

[20:34] <tony-o> same as in javascript the value of $item at the time the .render.render is called is the last element in $.props<item> 

[20:35] *** kerframil left
[20:35] <tony-o> that loop isn't being evaluated at the time of the .render, it's being evaluated during the grammar parsing - is another way to say what i mean

[20:36] <tony-o> the patch above gets the value from the block at the time of parsing ^

[20:37] <SmokeMachine> yes! that worked!

[20:37] <SmokeMachine> tony-o: thank you very much!

[20:37] <tony-o> np

[20:38] <tony-o> now i need to make my tar module not look like the IPO of warthog, nines favorite mess

[20:39] <SmokeMachine> IPO of warthog? sorry, what that mean?

[20:40] *** yqt left
[20:40] <tony-o> i wrote a dependency module that nine was looking for earlier this year and it took two iterations, one to make it kind of work and then the rewrite 8 hours later to make it simple and *really* work

[20:41] <tony-o> https://github.com/tony-o/p6-warthog

[20:45] *** okl joined
[20:47] *** comborico1611 left
[20:50] <SmokeMachine> tony-o: it looks extremely interest!

[20:51] <SmokeMachine> * interesting

[20:57] *** Cabanossi left
[21:00] *** Cabanossi joined
[21:01] *** Herby_ left
[21:02] *** okl left
[21:02] *** comborico1611 joined
[21:02] *** AndChat|688961 joined
[21:02] *** comborico1611 left
[21:03] <AndChat|688961> moritz, did i upload my document onto advent page?

[21:03] *** AndChat|688961 left
[21:04] *** comborico1611 joined
[21:04] <comborico1611> That was me, as guest account thing.

[21:04] <comborico1611> I've never used word press

[21:05] <moritz> comborico1611: yes, but the formatting is a bit weird

[21:05] <moritz> comborico1611: most of the prose seems to be in monospace font

[21:06] <moritz> comborico1611: do you want me to fix that?

[21:06] <comborico1611> If it is difficult to read.

[21:06] <comborico1611> I chose that font because I like the look of it. But I didn't realize it was going to look weird.

[21:07] <moritz> I find it harder to read than it needs to be

[21:08] <comborico1611> Alright go ahead.

[21:08] <comborico1611> Thanks!

[21:15] <moritz> comborico1611: done.

[21:15] <moritz> comborico1611: should I schedule it for publishing on the 6th?

[21:15] <comborico1611> Or earlier. Doesn't matter.

[21:18] <moritz> done

[21:18] <comborico1611> Thanks.

[21:18] *** perlpilot_ left
[21:19] <moritz> comborico1611: thank you for writing for the Perl 6 advent calendar!

[21:22] <comborico1611> It is a good opportunity to reach some people.

[21:25] *** sergot joined
[21:26] <comborico1611> And i believe in the community.

[21:28] <timotimo> SmokeMachine: https://github.com/pmurias/p6-jsx - maybe this gives you a hint or two on how to implement jsx as a perl6 slang

[21:37] *** Rawriful joined
[21:40] *** cpage_ left
[21:40] *** greppable6 left
[21:40] *** greppable6 joined
[21:40] *** ChanServ sets mode: +v greppable6

[21:44] <SmokeMachine> timotimo: very similar to what I did...

[21:45] <SmokeMachine> Why everything I start writing was already written?!

[21:45] <timotimo> everything's a remix ;)

[21:52] <tadzik> we're all markov chain bots of our former selves

[21:57] <pmurias> SmokeMachine: are you writing a JSX slang?

[21:59] <SmokeMachine> pmurias: kinda...

[22:00] <El_Che> If I write a Naticall-based module, that needs 2 .so's and I build them at install time, where should be .so be placed?

[22:00] <El_Che> (don't say some global OS PATH or LD_LIBRARY_PATH)

[22:01] <pmurias> SmokeMachine: p6-jsx is not yet complete but what I'm hoping to achieve is to keep it as close as possible to JSX so that we can use it with real react.js on top of rakudo.js

[22:03] <pmurias> moritz: what do you want to achieve with your slang?

[22:03] <SmokeMachine> I was thinking something like that... but not use the react.js and change some things I don‚Äôt like in react...

[22:04] <pmurias> moritz: sorry

[22:04] <pmurias> SmokeMachine: what do you want to change?

[22:04] <SmokeMachine> And I was thinking on starting with server side rendering...

[22:06] <SmokeMachine> I don‚Äôt remember... :P I am trying to remember while I write it...

[22:07] <teatime> El_Che: ‚ÄúYou can achieve [‚Ä¶] by specifying resources under resources/libraries in your META6.json without any lib prefix or extension, and by retrieving that resource from %?RESOURCES in your module.‚Äù  -- github.com/hoelzro/p6-native-resources

[22:08] <SmokeMachine> Now my implementation isn‚Äôt just the  slang... it‚Äôs rendering... (with almost no features... but it‚Äôs rendering...)

[22:09] <pmurias> SmokeMachine: you should be able to use my slang for server side rendering without problems

[22:09] <El_Che> teatime: thank you. I'll have a look there. Until now, I've only used system libraries. But that lib I need is not compiled by default on OS packages

[22:09] <El_Che> (so the lib is there, but it misses what I need :) )

[22:10] *** kitsunenokenja joined
[22:10] <pmurias> SmokeMachine: I don't seen any need/benefit of mixing the rendering (or passing to react.js part) with the slang itself

[22:10] *** setty1 left
[22:10] <SmokeMachine> pmurias: https://github.com/FCO/p6-react/tree/master

[22:10] <teatime> El_Che: it looks like your use case has been thought of / covered, just not sure where best up-to-date docs for it is;  if you see hoelzro_ around, he probably knows ;)

[22:12] <El_Che> thx

[22:13] *** kitsunenokenja left
[22:14] <pmurias> SmokeMachine: the implementation looks similiar

[22:15] <SmokeMachine> That‚Äôs a good signal (I think)

[22:18] *** setty1 joined
[22:19] *** Ven`` left
[22:29] *** ShalokShalom joined
[22:36] *** kitsunenokenja joined
[22:45] *** ctilmes left
[22:46] <SmokeMachine> pmurias: any special reason to do not use a pblock on  token jsx_attribute_value:sym<EXPR>?

[22:50] *** ryn1x joined
[22:53] <ryn1x> Does this seem like a good or bad way to use SQLite3 with Perl6... by just making calls to the SQLite3 terminal utility? https://gist.github.com/ryn1x/7a37d5adf9b58c3dd2279fe5c5303273#file-sqlite3-pm6 

[22:53] <ryn1x> My other idea was to wrap or use the C library, but that seemed like a ton of work for what I need right now...

[22:54] <timotimo> i expect most people would use sqlite3 via DBIish

[22:54] <timotimo> since it goes via the c api it can also get some more meta-info, like what types were the fields supposed to be

[22:54] <timotimo> without having to understand what query the user set off

[22:55] *** mson joined
[22:56] <ryn1x> I didn't know about DBIish... I need to go have a look...

[22:56] <timotimo> oh, ok

[22:57] <ryn1x> I did a search on modules.perl6.org for 'sqlite'...

[22:57] <timotimo> it's true, you wouldn't know to search for "dbi" if you didn't come from perl5

[22:57] <timotimo> doesn't help that DBIish doesn't have any tags in its metadata

[22:58] *** setty1 left
[22:59] <ryn1x> Man DBIish is definitely the module I needed... oh-well... I did get some good practice trying to come up with my own solution ha.

[22:59] <El_Che> ryn1x: more power to you :)

[23:07] <pmurias> SmokeMachine: a pblock would introduce a block, in real JSX there is an expression there

[23:10] <pmurias> SmokeMachine: and what would the paramaters to the block be?

[23:11] <SmokeMachine> pmurias: in my implementation I used a block, and I run that block to get the value...

[23:11] *** someuser left
[23:12] <SmokeMachine> pmurias: but I couldn't use only the pblock... I added a extra {}... I couldn't use only the pblock... couldn't parse...

[23:13] <pmurias> SmokeMachine: why not a regular <block> instead of <pblock>

[23:14] <SmokeMachine> pmurias: sample: https://github.com/FCO/p6-react/blob/master/teste2.p6#L7

[23:15] <SmokeMachine> im not sure...I tried <block>, but I couldn't -> $bla {;}... than I changed to <pblock>

[23:16] <dpk> p6: say "Ô¨Å" ~~ /fi/

[23:16] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´Nil‚ê§¬ª

[23:16] <pmurias> SmokeMachine: I have to go to sleep, already past my bedtime, I'll have a look at the {{}} issue tommorow;)

[23:16] <dpk> p6: say "Ô¨Å" ~~ /:ignoremark fi/

[23:16] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´Nil‚ê§¬ª

[23:16] <SmokeMachine> pmurias: thanks! have a good night!

[23:17] <dpk> p6: say "fi" ~~ /Ô¨Å/

[23:17] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´Nil‚ê§¬ª

[23:17] <dpk> p6: say "fi" ~~ /:ignoremark Ô¨Å/

[23:17] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´Nil‚ê§¬ª

[23:17] <pmurias> SmokeMachine: using a real block instead of a proper expression would be more perlish for sure, my plan was to first implement JSX as close to the orginal as possible (so that we can reuse/steal docs etc.) and then add optional extra perlishness on top

[23:18] <pmurias> sleep&

[23:18] *** pmurias left
[23:18] <timotimo> p6: say "fi" ~~ /:ignorecase Ô¨Å/

[23:18] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´ÔΩ¢fÔΩ£‚ê§¬ª

[23:19] <dpk> oh, Ô¨Å is considered a case variant?

[23:19] <timotimo> must be a foldcase thing

[23:19] <timotimo> m: say fc Ô¨Å

[23:19] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    Ô¨Å used at line 1‚ê§‚ê§¬ª

[23:19] <timotimo> m: say fc "Ô¨Å"

[23:19] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´fi‚ê§¬ª

[23:19] <dpk> also, that's incorrect, surely it should return 'fi'

[23:19] <timotimo> true

[23:19] <dpk> p6: say "ss" ~~ /:ignorecase √ü/

[23:19] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´ÔΩ¢sÔΩ£‚ê§¬ª

[23:20] <dpk> ‚¨ë that one is significantly more likely to bite people in practice

[23:20] <timotimo> wasn't "sharp s turns into ss" removed?

[23:20] <dpk> from what?

[23:20] <timotimo> by the unicode consortium i mea

[23:20] <dpk> no

[23:21] <dpk> if they did, it would be wrong ‚Ä¶ ·∫û is now allowed but not mandatory

[23:21] <timotimo> ok

[23:23] <timotimo> p6: say "Ô¨Åa" ~~ /:ignorecase a/

[23:23] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§¬ª

[23:23] <dpk> p6: say "ss" ~~ /:ignorecase [ss||√ü]/

[23:23] <camelia> rakudo-moar c9699ab2c: OUTPUT: ¬´ÔΩ¢ssÔΩ£‚ê§¬ª

[23:23] <timotimo> this is the one we do get right

[23:23] <dpk> there's a workaround, at least

[23:25] <SmokeMachine> u: fi

[23:25] <unicodable6> SmokeMachine, U+0035 DIGIT FIVE [Nd] (5)

[23:25] <unicodable6> SmokeMachine, U+01BC LATIN CAPITAL LETTER TONE FIVE [Lu] (∆º)

[23:25] <unicodable6> SmokeMachine, 1314 characters in total: https://gist.github.com/eb8a9f0792565b7379b83341cd70092c

[23:26] <SmokeMachine> ???

[23:26] <dpk> u: Ô¨Å

[23:26] <unicodable6> dpk, U+FB01 LATIN SMALL LIGATURE FI [Ll] (Ô¨Å)

[23:26] <timotimo> digit five

[23:26] <timotimo> that's where the fi lives

[23:28] <dpk> so where do i report about about Ô¨Å/√ü matching? is it a bug in Perl 6 or in Rakudo?

[23:30] <timotimo> i'd say rakudo, but there'll want to be test cases, which would be "against perl6"?

[23:31] <timotimo> or maybe there are already

[23:34] <AlexDaniel> o/

[23:34] *** llfourn joined
[23:36] *** Rawriful left
[23:38] <AlexDaniel> samcv: ‚Üë ? :)

[23:38] <timotimo> i think one of the fundamental problems is that our matches are (basically) triples of original string, start, and length

[23:39] <timotimo> and if you match an f that just so happens to be inside an fi ligature, we can't find a place in the original string that - when substring'd - gives you just f

[23:39] <timotimo> though i think we may have a differentiation between "original thing matched against" and "thing we found result in"?

[23:42] *** perlpilot_ joined
[23:42] *** Cabanossi left
[23:45] *** Cabanossi joined
[23:45] *** ShalokShalom left
[23:47] *** ShalokShalom joined
[23:47] *** ShalokShalom left
[23:47] *** ShalokShalom joined
[23:51] <dpk> okat, first Perl 6 bug filed ‚Ä¶ hope i did it right

[23:54] <AlexDaniel> dpk: that's on github or RT?

[23:55] <dpk> i typed perlbug which i assume goes to the latter

[23:55] <AlexDaniel> okay

[23:55] <dpk> i didn't know there's a github tracker ‚Ä¶

[23:55] <AlexDaniel> dpk: both are fine

[23:55] <AlexDaniel> although on RT your first ever bug report might take a while to appear :)

