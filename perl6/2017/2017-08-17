[00:04] *** Sgeo_ joined
[00:05] *** Sgeo left
[00:09] *** jonh joined
[00:14] <jonh> moo

[00:15] *** dubi0us left
[00:19] *** dubi0us joined
[00:20] *** skids joined
[00:21] *** lookatme joined
[00:22] <zoll> mu. mu.'

[00:22] *** troys_ is now known as troys

[00:23] *** dubi0us left
[00:24] *** dubi0us_ joined
[00:26] *** Cabanossi left
[00:28] *** Cabanossi joined
[00:32] *** dubi0us_ left
[00:45] *** pierre_ joined
[00:50] *** mcmillhj joined
[00:54] *** mcmillhj left
[00:55] *** dubi0us joined
[00:56] *** lookatme left
[00:57] *** Actualeyes left
[00:57] *** lookatme joined
[00:58] *** wamba left
[01:00] *** dubi0us left
[01:01] *** dubi0us joined
[01:01] *** pierre_ left
[01:02] *** lookatme left
[01:02] *** lookatme joined
[01:03] *** pierre_ joined
[01:05] *** dubi0us left
[01:10] *** dubi0us joined
[01:25] *** pierre_ left
[01:25] *** troys is now known as troys_

[01:26] *** Cabanossi left
[01:28] *** mcmillhj joined
[01:28] *** Cabanossi joined
[01:31] *** Praise left
[01:32] *** pierre_ joined
[01:33] *** mcmillhj left
[01:33] *** cdg joined
[01:38] *** cdg left
[01:42] *** dubi0us left
[01:45] *** ilbot3 left
[01:46] *** dubi0us joined
[01:47] *** entonian joined
[01:51] *** ilbot3 joined
[01:51] *** ChanServ sets mode: +v ilbot3

[01:55] *** dubi0us left
[01:55] *** entonian left
[01:55] *** raschipi left
[01:57] <lookatme> morning

[02:00] *** dubi0us joined
[02:00] <BenGoldberg> Evening.

[02:00] *** devmikey left
[02:02] *** noganex_ joined
[02:04] *** dubi0us left
[02:05] *** noganex left
[02:06] <mspo> hi

[02:10] *** char_var[buffer] left
[02:15] *** Actualeyes joined
[02:15] *** ash_gti left
[02:17] *** itaipu joined
[02:18] *** dfghrfghnji joined
[02:18] <dfghrfghnji> How do I make a <pre></pre> block in perl6 pods?

[02:18] <dfghrfghnji> like =begin pre

[02:20] <dfghrfghnji> so that it doesn't mess up my spacing

[02:22] <dfghrfghnji> is this even possible?

[02:27] *** char_var[buffer] joined
[02:28] *** dubi0us joined
[02:32] *** dubi0us left
[02:37] *** dubi0us joined
[02:39] *** pilne left
[02:41] *** dubi0us left
[02:41] *** Cabanossi left
[02:43] *** Cabanossi joined
[02:43] *** cpage_ left
[02:46] *** dubi0us joined
[02:50] *** dubi0us left
[02:55] *** dubi0us joined
[02:59] *** noganex joined
[02:59] <dfghrfghnji> m: my uint8 $n = 100;

[02:59] <camelia> rakudo-moar 3e70d4: ( no output )

[02:59] *** dubi0us left
[03:00] <dfghrfghnji> m: my uint8 $n = 100; say $n;

[03:00] <camelia> rakudo-moar 3e70d4: OUTPUT: «100␤»

[03:00] *** dubi0us joined
[03:01] *** noganex_ left
[03:05] *** dubi0us left
[03:09] *** Cabanossi left
[03:09] *** dubi0us joined
[03:11] *** dfghrfghnji left
[03:11] *** zengargoyle left
[03:12] *** Cabanossi joined
[03:13] <BenGoldberg> m: my int8 $n = 128; say $n;

[03:13] <camelia> rakudo-moar 3e70d4: OUTPUT: «-128␤»

[03:13] *** dubi0us left
[03:17] <lookatme> m: my int8 $n = 128; say $n; my int8 $n2 = int8.new(128); say $n2;

[03:17] <camelia> rakudo-moar 3e70d4: OUTPUT: «-128␤-128␤»

[03:18] <lookatme> m: my int8 $n = 127; say $n;

[03:18] <camelia> rakudo-moar 3e70d4: OUTPUT: «127␤»

[03:18] <ryu0> m: my int8 $n = 127; say $n + $n;

[03:18] <camelia> rakudo-moar 3e70d4: OUTPUT: «254␤»

[03:18] <ryu0> ... Some kind of type promotion.

[03:18] *** dubi0us joined
[03:19] <ryu0> m: my int8 $n = 127; say $n * 3;

[03:19] <camelia> rakudo-moar 3e70d4: OUTPUT: «381␤»

[03:19] <BenGoldberg> m: m: my int8 $n = 127; say ($n + $n).WHAT;

[03:19] <camelia> rakudo-moar 3e70d4: OUTPUT: «(Int)␤»

[03:19] <ryu0> m: my int8 $n = 127; say $n.WHAT;

[03:19] <camelia> rakudo-moar 3e70d4: OUTPUT: «(Int)␤»

[03:20] <BenGoldberg> Hmm, using a method on a primitive might cause autoboxing.

[03:21] <BenGoldberg> m: multi foo(int-->'int') {}; multi foo(Int-->'Int') {}; m: my int8 $n = 127; say foo($n);

[03:21] <camelia> rakudo-moar 3e70d4: OUTPUT: «int␤»

[03:21] <BenGoldberg> m: multi foo(int-->'int') {}; multi foo(Int-->'Int') {}; m: my int8 $n = 127; say foo($n+$n);

[03:21] <camelia> rakudo-moar 3e70d4: OUTPUT: «int␤»

[03:22] <BenGoldberg> m: multi foo(int-->'int') {}; multi foo(Int-->'Int') {}; m: my int8 $n = 127; say foo($n+10000);

[03:22] <camelia> rakudo-moar 3e70d4: OUTPUT: «int␤»

[03:22] *** mcsnolte left
[03:22] <BenGoldberg> m: multi foo(int8-->'int8') {}; multi foo(int-->'int') {}; multi foo(Int-->'Int') {}; m: my int8 $n = 127; say foo($n);

[03:22] <camelia> rakudo-moar 3e70d4: OUTPUT: «Ambiguous call to 'foo'; these signatures all match:␤:(int8 $ --> "int8")␤:(int $ --> "int")␤  in block <unit> at <tmp> line 1␤␤»

[03:23] *** dubi0us left
[03:23] <BenGoldberg> m: multi foo(int8-->'int8') {}; multi foo(int-->'int') {}; multi foo(Int-->'Int') {}; say foo(127);

[03:23] <camelia> rakudo-moar 3e70d4: OUTPUT: «Int␤»

[03:23] *** zengargoyle joined
[03:25] <BenGoldberg> It looks like rakudo has trouble distinguishing between differently sized ints.

[03:26] <TEttinger> that looks like an annoying bug... seems like there's no types being used at all

[03:27] <TEttinger> or the signature matching is not choosing the most correct type

[03:27] <TEttinger> (if it's specified as an int8, it should use the int8 version...)

[03:29] <BenGoldberg> I'd offer to rakudobug it, but I'm about to fall asleep.  Goodnight!

[03:30] *** BenGoldberg left
[03:32] *** dubi0us joined
[03:36] *** dubi0us left
[03:41] *** dubi0us joined
[03:43] *** MasterDuke left
[03:44] *** pharv joined
[03:45] *** dubi0us left
[03:49] *** cdg joined
[03:50] *** dubi0us joined
[03:54] *** cdg left
[03:56] *** Cabanossi left
[03:57] *** Cabanossi joined
[03:57] *** khisanth_ joined
[04:00] *** Khisanth left
[04:08] *** dubi0us left
[04:13] *** dubi0us joined
[04:18] *** dubi0us left
[04:19] *** Actualeyes left
[04:33] *** shadoxx left
[04:34] *** itaipu left
[04:40] *** pierre_ left
[04:41] *** xtreak joined
[04:41] *** dubi0us joined
[04:42] *** gregf_ left
[04:42] *** Resol left
[04:42] *** zoll left
[04:42] *** ChoHag left
[04:42] *** go|dfish left
[04:42] *** APic left
[04:42] *** obra left
[04:42] *** k-man left
[04:42] *** aindilis` left
[04:42] *** hythm left
[04:42] *** freeze left
[04:42] *** cgfbee left
[04:42] *** tokik left
[04:42] *** garu left
[04:42] *** klapperl left
[04:42] *** hahainternet left
[04:42] *** rblackwe left
[04:42] *** japhb left
[04:42] *** Mithaldu left
[04:44] *** ilogger2 joined
[04:44] *** ecocode joined
[04:44] *** ccntrq joined
[04:44] *** xiaomiao joined
[04:44] *** stmuk_ joined
[04:44] *** hythm joined
[04:44] *** ChanServ sets mode: +v ilogger2

[04:45] *** xiaomiao left
[04:45] *** xiaomiao joined
[04:45] *** cgfbee joined
[04:45] *** salva joined
[04:45] *** ugjka joined
[04:45] *** Xliff joined
[04:45] *** shadowpaste joined
[04:45] *** Mithaldu joined
[04:45] *** vike joined
[04:45] *** eater joined
[04:45] *** luis joined
[04:45] *** simcop2387 joined
[04:45] *** khisanth_ joined
[04:45] *** eythian joined
[04:45] *** aeruder joined
[04:45] *** Cabanossi joined
[04:45] *** mtj_ joined
[04:45] *** Voldenet joined
[04:45] *** Dunearhp joined
[04:45] *** CIAvash[m] left
[04:45] *** xui_nya[m] left
[04:46] *** tyil joined
[04:46] *** MilkmanDan joined
[04:46] *** eythian left
[04:46] *** eythian joined
[04:46] *** diegok joined
[04:46] *** MilkmanDan left
[04:46] *** MilkmanDan joined
[04:46] *** TreyHarris joined
[04:46] *** khisanth_ is now known as Guest51511

[04:46] *** tyil left
[04:46] *** tyil joined
[04:46] *** Geth joined
[04:46] *** Voldenet left
[04:46] *** Voldenet joined
[04:46] *** noganex joined
[04:46] *** k-man joined
[04:46] *** Xal joined
[04:46] *** ilbot3 joined
[04:47] *** jameslenz joined
[04:47] *** gabiruh joined
[04:47] *** protium joined
[04:47] *** lookatme joined
[04:47] *** jast joined
[04:47] *** ChanServ sets mode: +v ilbot3

[04:47] *** moritz joined
[04:47] *** pm51 joined
[04:47] *** spider-mario joined
[04:47] *** emeric_ joined
[04:47] *** revere joined
[04:47] *** mattp__ joined
[04:47] *** shmibs joined
[04:47] *** marcusramberg_ joined
[04:47] *** samcv joined
[04:47] *** mst joined
[04:47] *** alimon joined
[04:47] *** titsuki joined
[04:47] *** epony joined
[04:47] *** ilbelkyr joined
[04:47] *** samcv left
[04:47] *** samcv joined
[04:48] *** mst left
[04:48] *** mst joined
[04:48] *** musca joined
[04:48] *** maettu joined
[04:48] *** notbenh joined
[04:48] *** b2gills joined
[04:48] *** ilbelkyr left
[04:48] *** sftp joined
[04:48] *** go|dfish1 joined
[04:48] *** andrewalker joined
[04:48] *** dustinm` joined
[04:49] *** ribasushi joined
[04:49] *** ilbelkyr_ joined
[04:49] *** [particle] joined
[04:49] *** gugod joined
[04:49] *** esh joined
[04:49] *** ShalokShalom joined
[04:49] *** incredible joined
[04:49] *** mcmillhj joined
[04:50] *** xxpor joined
[04:50] *** ggoebel joined
[04:50] *** stux|RC-only joined
[04:50] *** jcallen joined
[04:50] *** nightfrog joined
[04:50] *** ilbelkyr_ left
[04:50] *** ilbelkyr_ joined
[04:50] *** mr-foobar joined
[04:51] *** ilbelkyr_ is now known as ilbelkyr

[04:51] *** konsolebox joined
[04:51] *** giraffe joined
[04:51] *** giraffe is now known as Guest29805

[04:52] *** lookatme left
[04:52] *** SCHAPiE joined
[04:52] *** mienaikage joined
[04:52] *** ingy1 joined
[04:53] *** Guest69863 joined
[04:54] *** mcmillhj left
[04:54] *** ChanServ sets mode: +v camelia

[04:55] *** dubi0us joined
[04:55] *** k-man left
[04:55] *** k-man joined
[04:56] *** skids joined
[04:56] *** jercos joined
[04:57] <ShalokShalom> is Perl6 capable to do all these things? 

[04:57] <ShalokShalom> http://coconut-lang.org/

[04:59] *** ilmari[m] joined
[04:59] *** wictory[m] joined
[04:59] *** Matthew[m] joined
[04:59] *** mack[m] joined
[04:59] *** M-Illandan joined
[04:59] *** unclechu joined
[04:59] *** tyil[m] joined
[04:59] *** tadzik joined
[04:59] *** xui_nya[m] joined
[04:59] *** CIAvash[m] joined
[04:59] *** dubi0us left
[05:00] *** dubi0us joined
[05:01] *** Sgeo joined
[05:03] *** jantore joined
[05:04] <TEttinger> heh, ShalokShalom. it looks like they've been half-paying-attention to hacker news

[05:04] <ShalokShalom> how does this answer my question?

[05:06] <TEttinger> well, it doesn't, but at least one of those things is a misfeature

[05:06] <ShalokShalom> and what is half-paying-attention?

[05:06] <ShalokShalom> like?

[05:07] <TEttinger> well Hacker News tends to focus on certain features to the exclusion of others. tail call optimization is important primarily if you're porting Scheme code

[05:07] <TEttinger> there are some other uses for it, but mostly it shows up because Java doesn't have it, and C# doesn't have it

[05:08] <ShalokShalom> a lot of different sources criticise languages who lack tailcall optimization

[05:08] <TEttinger> the parallel map example they give is given as an antipattern in Clojure's community

[05:08] *** dubi0us left
[05:08] <ShalokShalom> like the current JS implementation, except Safari

[05:08] <ShalokShalom> yeah

[05:08] <TEttinger> pmap in clojure, or parallel_map in coconut, almost never improves the speed of a map

[05:09] <ShalokShalom> and?

[05:09] <ShalokShalom> in Clojute

[05:09] <ShalokShalom> Clojure

[05:09] *** dubi0us joined
[05:09] <TEttinger> and it wreaks havoc with side effects

[05:09] <ShalokShalom> is Perl capable to do this stuff?

[05:09] <ShalokShalom> which features are supported?

[05:09] <ShalokShalom> is there a list of functional programming language feature support?

[05:10] <TEttinger> I don't use perl 6 really, but as far as I can tell, very yes

[05:10] <ShalokShalom> xD

[05:10] <ShalokShalom> thanks a lot

[05:10] <TEttinger> i used it a bit

[05:10] <TEttinger> I think ADTs are supported even in the basic NQP layer

[05:10] <ShalokShalom> i see

[05:10] <TEttinger> lazy yes

[05:11] <ShalokShalom> what does this mean?

[05:11] <ShalokShalom> in the basic NQP layer

[05:11] <TEttinger> oh sorry, NQP is the language that Perl 6 is built on, it is an acronym for Not Quite Perl

[05:12] <TEttinger> everything in NQP is also in Perl6 I believe, possibly in a different package

[05:12] <TEttinger> function composition I'm not totally sure on how it works in perl6 because there's some special operators that affect other ones, and i don't know if those compose.

[05:13] <TEttinger> operator functions are more than supported, they go further than in coconut

[05:13] *** dubi0us left
[05:13] <TEttinger> same with the alternate fixity (prefix to and from infix)

[05:13] *** piojo joined
[05:14] <TEttinger> destructuring and pattern matching I have no idea if they are or aren't or are planned or what

[05:15] <TEttinger> pipelining I am almost sure is present, I think I've seen it in use often here

[05:19] *** brimonk joined
[05:19] <ShalokShalom> pattern matching is available

[05:19] <ShalokShalom> thanks a lot

[05:24] *** cpage_ joined
[05:25] *** Cabanossi left
[05:25] *** sivoais joined
[05:26] *** khw left
[05:27] *** Cabanossi joined
[05:28] *** andrzejku joined
[05:28] *** cdg joined
[05:28] *** hcit joined
[05:32] *** brabo joined
[05:32] *** cdg left
[05:32] <ShalokShalom> what means this ö in the topic? :)

[05:36] *** hobbs joined
[05:37] *** brabo left
[05:38] <ShalokShalom> TEttinger: a developer of Perl 6 seems to like implement tail call optimisation

[05:38] <ShalokShalom> https://news.ycombinator.com/item?id=11961729

[05:38] *** Actualeyes joined
[05:39] <ShalokShalom> its not possible anymore to comment on this thread, otherwise would i mention, that Perl6 also can call Python libraries

[05:40] *** kyan joined
[05:42] *** tokik joined
[05:44] *** lowbro joined
[05:44] *** lowbro left
[05:44] *** lowbro joined
[05:45] *** dubi0us joined
[05:48] *** xiaomiao left
[05:48] *** xiaomiao joined
[05:49] *** dubi0us left
[05:51] <piojo> For those who don't write parsers, what do you think of perl6's new regular expression system?

[05:53] <andrzejku> loo

[05:54] <andrzejku> :)

[05:54] *** dubi0us joined
[05:58] *** Guest69863 left
[06:03] *** dubi0us left
[06:04] *** Util joined
[06:04] *** a3r0 joined
[06:05] *** lookatme joined
[06:05] *** espadrine joined
[06:08] *** dubi0us joined
[06:08] *** pierre_ joined
[06:10] *** gigavinyl joined
[06:12] *** dubi0us left
[06:13] *** gigavinyl left
[06:13] *** gigavinyl joined
[06:13] *** skids left
[06:14] *** ufobat joined
[06:17] *** gigavinyl left
[06:26] *** nadim joined
[06:27] *** gigavinyl joined
[06:27] *** gigavinyl left
[06:28] *** gfldex joined
[06:28] *** gfldex left
[06:31] *** gfldex joined
[06:31] *** Xliff_ joined
[06:32] *** ShalokShalom_ joined
[06:35] *** Xliff left
[06:35] *** ShalokShalom left
[06:36] *** dubi0us joined
[06:39] *** Cabanossi left
[06:41] *** dubi0us left
[06:42] *** Cabanossi joined
[06:43] *** shadoxx joined
[06:45] *** dubi0us joined
[06:46] *** ShalokShalom_ is now known as ShalokShalom

[06:47] <ShalokShalom> Perl 5 can call Fortran, Assambler and other inline too, does this count here as well?

[06:49] *** tojo joined
[06:49] *** xiaomiao is now known as bonsaikitten

[06:49] *** dubi0us left
[06:50] *** cibs joined
[06:50] *** marcusramberg_ is now known as marcusramberg

[06:50] *** dubi0us joined
[06:54] *** kyan left
[06:56] *** obra joined
[06:56] *** dubi0us left
[07:10] *** dubi0us joined
[07:14] *** dubi0us left
[07:26] *** Cabanossi left
[07:27] *** Cabanossi joined
[07:28] *** bhm joined
[07:34] *** itaipu joined
[07:38] *** dubi0us joined
[07:42] *** dubi0us left
[07:44] *** cdg joined
[07:45] *** darutoko joined
[07:47] *** KotH joined
[07:47] *** dubi0us joined
[07:48] *** entonian joined
[07:48] *** cdg left
[07:49] *** wamba joined
[07:50] *** domidumont joined
[07:50] *** cosimo joined
[07:50] *** dakkar joined
[07:52] *** pierre_ left
[07:52] *** nine_ joined
[07:52] *** entonian left
[07:52] *** zakharyas joined
[07:53] *** nine_ is now known as nine

[07:54] *** hobbs left
[07:54] *** NeuralAnomaly left
[07:54] *** ZofBot left
[07:54] *** huggable left
[07:54] *** Geth_ left
[07:54] *** buggable left
[07:54] *** hoelzro left
[07:54] *** hobbs joined
[07:54] *** hobbs left
[07:54] *** hobbs joined
[07:54] *** domidumont left
[07:54] *** domidumont joined
[07:55] *** leego joined
[07:55] *** huggable joined
[07:55] *** ChanServ sets mode: +v huggable

[07:55] *** ZofBot joined
[07:55] *** buggable joined
[07:55] *** ChanServ sets mode: +v ZofBot

[07:55] *** ChanServ sets mode: +v buggable

[07:55] *** plicease joined
[07:55] *** jonh joined
[07:56] *** dubi0us left
[07:57] *** dubi0us joined
[07:57] *** abraxxa joined
[07:57] *** ilbot3 left
[07:57] *** ccntrq left
[07:59] *** ccntrq joined
[08:01] *** dubi0us left
[08:02] *** itaipu left
[08:03] *** ilbot3 joined
[08:03] *** ChanServ sets mode: +v ilbot3

[08:03] *** jonas1 joined
[08:03] <ShalokShalom> is there also inline syntax highlighting and so on supported in some IDEs?

[08:04] *** pierre_ joined
[08:05] *** nattefrost joined
[08:06] *** dubi0us joined
[08:09] *** APic joined
[08:09] *** xtreak joined
[08:10] *** dubi0us left
[08:11] *** domidumont left
[08:13] *** ChoHag joined
[08:14] *** jonh left
[08:14] *** plicease left
[08:14] *** huggable left
[08:14] *** ZofBot left
[08:14] *** buggable left
[08:14] *** leego left
[08:15] *** jonh joined
[08:15] *** dubi0us joined
[08:15] *** ZofBot joined
[08:15] *** buggable joined
[08:15] *** huggable joined
[08:15] *** ChanServ sets mode: +v ZofBot

[08:15] *** ChanServ sets mode: +v buggable

[08:15] *** ChanServ sets mode: +v huggable

[08:15] *** leego joined
[08:15] *** plicease joined
[08:19] *** dubi0us left
[08:21] *** arnsholt joined
[08:24] *** dubi0us joined
[08:29] *** dubi0us left
[08:29] *** dubi0us joined
[08:32] *** xtreak left
[08:37] *** dubi0us left
[08:38] *** nowan joined
[08:38] *** dubi0us joined
[08:40] *** Cabanossi left
[08:42] *** Cabanossi joined
[08:46] *** dubi0us left
[08:48] *** huf joined
[08:52] *** dubi0us joined
[08:52] *** breinbaas joined
[08:53] *** Rawriful joined
[08:53] *** jnthn joined
[08:56] *** dubi0us left
[09:01] *** pierre_ left
[09:07] *** nebuchadnezzar joined
[09:10] *** pierre_ joined
[09:14] *** nowan left
[09:17] *** avarab joined
[09:17] *** avarab left
[09:17] *** avarab joined
[09:17] *** nowan joined
[09:18] *** pmurias joined
[09:18] *** avarab left
[09:18] *** avarab joined
[09:18] *** avarab left
[09:18] *** avarab joined
[09:19] <pmurias> piojo: even when writing "normal" regexes you should be able to use parts of parsers from CPAN

[09:20] *** dubi0us joined
[09:20] *** avarab is now known as avar

[09:21] *** stmuk_ is now known as stmuk

[09:24] *** dubi0us left
[09:25] *** Actualeyes left
[09:33] <ShalokShalom> the gradual type inference works with Hindley–Milner, like in Perl5?

[09:33] *** dubi0us joined
[09:35] *** cdg joined
[09:39] *** astj_ joined
[09:39] *** cdg left
[09:42] *** lookatme left
[09:42] <piojo> pmurias: I don't really parse anything uglier than version numbers. What I'm wondering is whether people manage to remember the new syntax if you don't use it for all it's worth

[09:42] <piojo> Because it's dang powerful. But it's also much less literal than typical regexes. It's more of a programming language in and of itself.

[09:44] <piojo> So I'm wondering if anyone more experienced than me would say "yep, I always use the :P5 version" or "the differences become simple after you use them a few times"

[09:45] *** epony left
[09:46] *** dubi0us left
[09:47] *** dubi0us joined
[09:53] *** epony joined
[09:54] *** Cabanossi left
[09:55] <tyil> does perl 6 do type classes and higher kinded types?

[09:56] *** dubi0us left
[09:57] *** Cabanossi joined
[09:58] *** tinita joined
[10:00] *** tinita left
[10:00] *** tinita joined
[10:01] *** dubi0us joined
[10:03] <nadim> it does type objects, https://docs.perl6.org/language/classtut#index-entry-type_object, that may be what you are looking for

[10:04] <nadim> you question is a bit vague, to me, if the doc does not answer your question, maybe giving an example of what you mean could help answer you.

[10:04] <tyil> idk, I was told by some scala folk that it didnt do those things, I cant into scala

[10:04] <tyil> so I was hoping someone in here might know more about it :p

[10:04] <nadim> What do you need it for? it's all good with scala doing it but what is your use case?

[10:05] <piojo> @tyil: or roles. Roles are groups of coherent logic for a specific purpose, like Numeric

[10:05] *** dubi0us left
[10:05] *** pierre_ left
[10:07] <tyil> nadim: none, I just want to be able to tell this guy that perl can do it too :p

[10:09] <nadim> tyil: http://danielwestheide.com/blog/2013/02/06/the-neophytes-guide-to-scala-part-12-type-classes.html says it's a trait as projo noted. they can be parametrized, and an be applied to single objects with 'but'

[10:10] *** dubi0us joined
[10:11] <tyil> neat

[10:11] *** leego left
[10:11] *** leego joined
[10:12] *** ilmari[m] left
[10:12] *** damnlie left
[10:12] *** lichtkind left
[10:13] *** damnlie joined
[10:14] *** dubi0us left
[10:15] <piojo> tyil: that page does seem like something roles (and "but" if you're dealing with a builtin type) are suited for.

[10:16] *** FiendKing04 joined
[10:17] *** Technaton joined
[10:19] *** dubi0us joined
[10:19] *** mr-foobar left
[10:20] *** rindolf joined
[10:21] <nadim> piojo: I have another understanding of 'but', has nothing to do with builtin types but with instanciated objects.  correct me if I am wrong

[10:23] *** mr-foobar joined
[10:24] *** dubi0us left
[10:24] *** Cabanossi left
[10:25] *** ilmari[m] joined
[10:25] *** lichtkind joined
[10:25] <nadim> .tell Skarsnik:  thanks for the help with NativeCall stuff. t's starting to look good  http://i.imgur.com/ay6dLTc.png. I'd like to build a GumboNode with the parent instanciated, did't really get how.

[10:25] <yoleaux> nadim: What kind of a name is "Skarsnik:"?!

[10:25] <nadim> .tell Skarsnik  thanks for the help with NativeCall stuff. t's starting to look good  http://i.imgur.com/ay6dLTc.png. I'd like to build a GumboNode with the parent instanciated, did't really get how.

[10:25] <yoleaux> nadim: I'll pass your message to Skarsnik.

[10:26] *** leah2 joined
[10:27] *** Cabanossi joined
[10:27] *** nadim left
[10:28] *** dubi0us joined
[10:29] <Xliff_> .last ab5tract

[10:29] <Xliff_> .seen ab5tract

[10:29] <yoleaux> I saw ab5tract 8 Aug 2017 13:51Z in #perl6: <ab5tract> i was wondering where i might find information on nqp::p6bindattrinvres

[10:33] <piojo> nadim: yeah, it's for instances, but I was thinking about the article complaining about Ruby's monkey patching polluting the global namespace. It seems like to avoid that, what you would want in that example is to make just the instances do a role.

[10:36] <piojo> nadim: but I'm not sure whether that would work, since I don't know how you'd add your custom adapter logic with 'but'. But I'm new to this.

[10:36] *** mr-fooba_ joined
[10:36] *** mr-foobar left
[10:37] *** jferrero joined
[10:37] *** dubi0us left
[10:42] *** dubi0us joined
[10:51] *** dubi0us left
[10:52] *** dubi0us joined
[10:56] *** Cabanossi left
[10:57] *** Cabanossi joined
[10:59] *** espadrine left
[10:59] *** zakharyas left
[11:02] *** espadrine_ joined
[11:04] *** dubi0us left
[11:05] *** infrabyte joined
[11:06] *** mr-foobar joined
[11:09] *** mr-fooba_ left
[11:14] *** hahainternet joined
[11:20] *** nadim_web joined
[11:21] *** cognominal joined
[11:23] <nadim_web> It's what 'but' does, only the instance does the role. for a whole class you control it is 'does', there is also 'augment' which is a king of sledge hammer IMO.

[11:25] *** Cabanossi left
[11:26] *** araraloren joined
[11:26] <araraloren> evening

[11:27] *** Cabanossi joined
[11:28] *** dubi0us joined
[11:32] *** dubi0us left
[11:33] <moritz> \o araraloren 

[11:33] <yoleaux> 16 Aug 2017 17:03Z <AlexDaniel> moritz: 🙏 unicode in irc log

[11:33] *** infrabyte left
[11:33] <araraloren> 哦、

[11:33] <araraloren> o/

[11:33] *** espadrine_ left
[11:34] <APic> \o

[11:35] *** TiTex joined
[11:36] *** ilbot3 left
[11:36] *** ilbot3 joined
[11:36] *** ChanServ sets mode: +v ilbot3

[11:36] <moritz> 🙏 !

[11:37] <moritz> :(

[11:37] *** dubi0us joined
[11:39] <moritz> it seems it's the logging that's messed up :(

[11:39] <piojo> nadim_web: I meant that I didn't know how to supply an implementation when using 'but', but I found that's in the docs.

[11:39] <piojo> $object but role Numeric { method Int { return 1; } }

[11:39] *** funnymath joined
[11:40] *** piojo left
[11:40] *** funnymath left
[11:41] *** dubi0us left
[11:48] *** markmont joined
[11:56] *** ilbot3 left
[11:58] *** ilbot3 joined
[11:58] *** ChanServ sets mode: +v ilbot3

[11:58] *** cpage joined
[12:01] *** Rawriful left
[12:03] *** dubi0us joined
[12:04] *** dubi0us left
[12:13] <gfldex> the changed to .parse will cause quite a bit of fallout

[12:13] <gfldex> as i had to learn for doesn't like to loop over a Failure

[12:13] <araraloren> buggable, eco tree

[12:13] <buggable> araraloren, Found 10 results: Data::Dump::Tree, File::Directory::Tree, Pod::TreeWalker, Algorithm::BinaryIndexedTree, Algorithm::TernarySearchTree. See https://modules.perl6.org/s/tree

[12:15] *** zakharyas joined
[12:17] *** TiTex left
[12:17] *** TiTex joined
[12:19] *** raschipi joined
[12:25] *** Cabanossi left
[12:27] *** dubi0us joined
[12:27] *** Cabanossi joined
[12:30] *** Rawriful joined
[12:33] *** perlpilot joined
[12:35] *** dubi0us left
[12:39] *** dubi0us joined
[12:39] *** dgl joined
[12:39] *** dgl is now known as dg

[12:46] *** jonas1 left
[12:55] *** mcmillhj joined
[12:57] <gfldex> lolibloggedalittle! https://gfldex.wordpress.com/2017/08/17/parsing-nothing/

[12:59] <raschipi> gfldex: Can't the new behavior be made optional with a flag?

[12:59] <Geth> ¦ doc: 492a6082ff | (Jonathan Worthington)++ | doc/Type/atomicint.pod6

[12:59] <Geth> ¦ doc: Add documentation for atomicint.

[12:59] <Geth> ¦ doc: 

[12:59] <Geth> ¦ doc: Together with all of the atomic integer operations.

[12:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/492a6082ff

[13:00] <gfldex> raschipi: you can use .subparse instead but that comes with additional semantics

[13:01] <gfldex> using the defined-or operator is a common way to deal with such problems (for perlists anyway)

[13:02] <jnthn> I hope just adding that file will be enough for the docs build to index the ops and stuff...guess I'll find out soon :)

[13:03] <raschipi> gfldex: Can't this be delayed to 6.d?

[13:03] <raschipi> That's what it's for, isn't it?

[13:03] <gfldex> that was my thought aswell

[13:03] <gfldex> but then we will only find out later

[13:04] <gfldex> so it might actually lead to less work as it is

[13:04] <tadzik> wait, it broke 6.c?

[13:04] <tadzik> that's not supposed to happen, is it

[13:04] *** cdg joined
[13:05] <gfldex> it did break one of my modules, see my blog

[13:05] <tadzik> right

[13:05] <timotimo> raschipi, gfldex, timtoady already said he'd retract the commit if there's ecosystem fallout, which you just demonstrated

[13:05] <tadzik> that's how I learned about it

[13:05] <tadzik> oh, good :)

[13:06] <gfldex> timotimo: i would prefer to have to run automated tests for exactly one version of Perl 6

[13:06] <gfldex> but what do I know :)

[13:08] <gfldex> is there a way to force 6.d on a script from the outside?

[13:08] <gfldex> would be handy to have an envirounment switch for that for testing

[13:08] <raschipi> Can't -M6.d ?

[13:09] <gfldex> doesn't work

[13:10] <gfldex> and I don't think it should because 6.d is a pragma, not a real module

[13:10] *** cdg_ joined
[13:11] <gfldex> you would have to add semantics how and when to override pragmas that are locally scoped

[13:14] *** cdg left
[13:14] <timotimo> gfldex: ideally you'd really only need to test one version

[13:15] <raschipi> But I agree, a flag to ask "will my stuff break on the next version" would be useful.

[13:16] *** pecastro joined
[13:16] *** mr_ron joined
[13:17] *** itaipu joined
[13:17] *** lucs joined
[13:18] <gfldex> jnthn: if you keep going like that we will have to ship Perl 6 with a .ttf :->

[13:19] <jnthn> gfldex: I started out asking for function names and of course the discussion ended up with Unicode operators :P

[13:21] *** leego is now known as leedo

[13:22] *** mr-fooba_ joined
[13:23] *** pecastro left
[13:23] *** wtw joined
[13:23] *** mr-foobar left
[13:25] *** Cabanossi left
[13:25] *** ryu0 joined
[13:25] <gfldex> is // calling .defined?

[13:27] *** araraloren left
[13:27] <jnthn> Yes

[13:27] *** Cabanossi joined
[13:28] <raschipi> u: ⚛

[13:28] <unicodable6> raschipi, U+269B ATOM SYMBOL [So] (⚛)

[13:29] <gfldex> i'm getting "WARNING: unhandled Failure detected in DESTROY." even though I filtered the list with [//].

[13:30] *** andrzejku left
[13:30] *** dubi0us left
[13:32] <timotimo> but it goes through all failures? because i think it would short-circuit

[13:32] <raschipi> In the example in your blog post, $parsed will have Nil, but I think $/ will still have the failure, which ends up in the GC.

[13:33] <timotimo> m: my $counter = 0; class Thing { method defined { say "defined?"; $counter++ ~~ 5..* } }; say [//] (Thing.new xx 10)

[13:33] <camelia> rakudo-moar a45ede: OUTPUT: «defined?␤defined?␤defined?␤defined?␤defined?␤defined?␤defined?␤defined?␤defined?␤Thing.new␤»

[13:33] <nadim_web> jnthn: my guess is that this error message is bad "Cannot invoke this object (REPR: Null; VMNull)" :)

[13:33] <timotimo> hm, ok

[13:33] <jnthn> nadim_web: yes 

[13:34] <nadim_web> I reported it to the module generating it but I am a bit curious of how it can happen.

[13:34] *** dubi0us joined
[13:35] <gfldex> raschipi: it's actually from a different spot in that module

[13:36] <gfldex> raschipi: $/ is set by m// and friends, not .parse

[13:36] <raschipi> Right.

[13:36] <gfldex> raschipi: so I was wrong

[13:36] <gfldex> that leaves the question what $/ should hold on a failed parse

[13:38] <gfldex> .tell timtoady canned worms alert up until https://irclog.perlgeek.de/perl6/2017-08-17#i_15032122

[13:38] <yoleaux> gfldex: I'll pass your message to timtoady.

[13:38] *** mattn_jp joined
[13:38] *** dubi0us_ joined
[13:38] <moritz> another Unicode test: €

[13:38] *** dubi0us left
[13:39] <ilmari> more testing 💩

[13:40] <ryu0> please none of that.

[13:40] <ryu0> ol

[13:40] <ilmari> still doesn't handle non-BMP characaters

[13:40] <moritz> it's mysql

[13:40] <ryu0> mysql doesn't support the full unicode range?

[13:40] <ilmari> not with the default utf8 character set

[13:41] <ilmari> you need utf8mb4

[13:41] * ryu0 facepalms.

[13:41] <ilmari> because 🤢

[13:41] <timotimo> they did the same mistake microsoft did with their 16bit wide characters ...

[13:42] *** dubi0us_ left
[13:43] <ryu0> works for most text, but falls apart if you want to store other CPs.

[13:44] <gfldex> raschipi: that's the line that is producing the stray Failure object: https://github.com/gfldex/perl6-git-config/blob/master/lib/Git/Config.pm6#L18

[13:44] <ilmari> well, they were using utf8, but not allowing more than 3 bytes per codepoint

[13:44] <ilmari> as in allocating n*3 byte buffers for n-character strings

[13:44] *** krlgrs joined
[13:45] <ryu0> you can't know the full-size in advance unless you're willing to go to utf32...

[13:45] <timotimo> you could always use surrogate characters ;_;

[13:46] <krlgrs> hi ! I need to use ftp or sftp with perl6, should I use Net FTP ? Is there any other way ? 

[13:46] <ilmari> that's only defined when decoding utf-16, isn't it?

[13:46] <ryu0> yea...

[13:47] <ryu0> utf8 is what i store text as ultimately as it doesn't make sense to use utf32 normally.

[13:47] <ryu0> especially if i'm just going to output it..

[13:50] <timotimo> ilmari: doesn't prevent JSON from being declared to be utf8 but also having surrogate characters in them

[13:51] *** araraloren joined
[13:52] <raschipi> krlgrs: There are Perl6 bindings to libcurl: https://github.com/CurtTilmes/perl6-libcurl

[13:53] <Geth> ¦ doc: ronaldxs++ created pull request #1456: regexes.pod6 change predefined <|wb>, <ww> to <?wb>, <?ww>

[13:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1456

[13:53] *** mattn_jp left
[13:54] <Geth> ¦ doc: c92f2f15e0 | (Jonathan Worthington)++ | doc/Type/Scalar.pod6

[13:54] <Geth> ¦ doc: Document atomic operations on Scalar containers.

[13:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c92f2f15e0

[13:54] *** mr-fooba_ left
[13:58] <krlgrs> raschipi thank you

[13:58] <b2gills> bisect: old=2017.06 exit {S:g:i/(.) <(.*?)> <{~$0 .succ}>//}('codeolfg') eq 'cdefg'

[13:58] <bisectable6> b2gills, On both starting points (old=2017.06 new=a45ede9) the exit code is 1 and the output is identical as well

[13:58] <bisectable6> b2gills, Output on both points: «»

[14:01] <b2gills> bisect: old=2017.06 exit {S:g:i/(.) <(.*?)> <{~$0 .succ}>//}(' codeolfg') eq 'cdefg'

[14:01] <bisectable6> b2gills, On both starting points (old=2017.06 new=a45ede9) the exit code is 0 and the output is identical as well

[14:01] <bisectable6> b2gills, Output on both points: «»

[14:01] <b2gills> Huh

[14:02] *** Rawriful left
[14:03] <Geth> ¦ doc: 83d31cb2a5 | (Jonathan Worthington)++ | doc/Type/atomicint.pod6

[14:03] <Geth> ¦ doc: Follow spelling change to atomic prefix ops.

[14:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/83d31cb2a5

[14:05] *** mr-foobar joined
[14:06] <Geth> ¦ doc: 568cf1e6bf | (Jonathan Worthington)++ | doc/Type/Thread.pod6

[14:06] <Geth> ¦ doc: Document full-barrier.

[14:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/568cf1e6bf

[14:10] *** Kyo91 joined
[14:11] *** pharv_ joined
[14:12] *** lizmat joined
[14:15] *** krlgrs left
[14:15] *** Rawriful joined
[14:16] *** pharv_ left
[14:17] *** skids joined
[14:18] *** araraloren_ joined
[14:21] *** araraloren left
[14:21] *** dubi0us joined
[14:24] *** lowbro left
[14:24] *** Cabanossi left
[14:25] *** dubi0us left
[14:27] *** Cabanossi joined
[14:29] *** g0d355__ joined
[14:30] *** raschipi_ joined
[14:31] <Geth> ¦ doc: 265000d7a6 | (Ronald Schmidt)++ | doc/Language/regexes.pod6

[14:31] <Geth> ¦ doc: regexes.pod6 change predefined <|wb>, <ww> to <?wb>, <?ww>

[14:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/265000d7a6

[14:31] <Geth> ¦ doc: 273f326691 | (Ronald Schmidt)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[14:31] <Geth> ¦ doc: Merge pull request #1456 from ronaldxs/non-capture-wb

[14:31] <Geth> ¦ doc: 

[14:31] <Geth> ¦ doc: regexes.pod6 change predefined <|wb>, <ww> to <?wb>, <?ww>

[14:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/273f326691

[14:32] *** raschipi left
[14:33] *** raschipi_ is now known as raschipi

[14:34] *** testmehere joined
[14:34] <Geth> ¦ doc: b6e5e650fc | (Elizabeth Mattijsen)++ | doc/Type/atomicint.pod6

[14:34] <Geth> ¦ doc: Fix a few typos

[14:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b6e5e650fc

[14:36] *** testmehere left
[14:37] <ShalokShalom> so, 6 get rid of this line noise?

[14:38] <ilmari> no, just a different kind

[14:38] <ilmari> more unicodey

[14:39] *** Guest51511 left
[14:40] *** lucasb joined
[14:45] <ShalokShalom> :/

[14:45] <ShalokShalom> noisy code is fine for programming newbies?

[14:45] <ShalokShalom> i like to code so clean as possible

[14:49] <raschipi> ShalokShalom: Whatever get's the job done.

[14:49] <ilmari> you don't _have_ to write line-noise in any language (except brainfuck, apl etc.)

[14:52] *** Guest51511 joined
[14:52] <raschipi> Of course cleaner code is better, but sometimes it's also expensive and unnafordable.

[14:52] <Geth> ¦ doc: 2b5abdf42a | (Elizabeth Mattijsen)++ | doc/Type/Scalar.pod6

[14:52] <Geth> ¦ doc: More typo fixes

[14:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2b5abdf42a

[14:53] *** mr-foobar left
[14:55] *** Actualeyes joined
[14:55] *** lizmat left
[14:56] *** mr-foobar joined
[14:56] *** Cabanossi left
[14:57] *** Cabanossi joined
[15:02] *** Aaronepower joined
[15:04] *** kubrat joined
[15:04] *** sjn joined
[15:09] *** TiTex left
[15:11] *** Sgeo left
[15:12] *** AlexDaniel joined
[15:14] *** Sgeo joined
[15:16] *** JimmyZ joined
[15:18] *** |oLa| left
[15:18] *** nadim_web left
[15:19] <ugexe> line noise speaks more to the programmer than the language

[15:25] *** mr-foobar left
[15:25] *** TimToady joined
[15:26] *** Cabanossi left
[15:26] *** mr-foobar joined
[15:27] *** Cabanossi joined
[15:29] *** Geth left
[15:30] *** Geth joined
[15:33] <raschipi> gfldex: Do you usually participate in #perl6-dev?

[15:35] *** kybr joined
[15:42] *** andrzejku joined
[15:44] *** araraloren_ left
[15:47] <ShalokShalom> ilmari: for, for what is it for?

[15:49] <gfldex> raschipi: no

[15:49] <yoleaux> 15:30Z <TimToady> gfldex: $/ is in fact set by .parse

[15:51] <ilmari> ShalokShalom: what?

[15:53] <raschipi> I was gonna tell you that Timtoady left you a message there, but the bot works cross-channel.

[15:54] *** mr-foobar left
[15:59] <perlpilot> ShalokShalom: that's just the other edge of the "freedom" knife.  If you don't want to be cut, you have to be careful.  (though, it's not so hard to "carefully" write non-line-noise)

[16:00] <ilmari> conciseness can sometimes help readability just as much as verbosity can

[16:00] *** mr-foobar joined
[16:00] <ilmari> it's a balancing act

[16:00] *** abraxxa left
[16:01] *** perigrin joined
[16:04] <ShalokShalom> perlpilot: why do you use knifes in general?

[16:04] *** konsolebox left
[16:04] <ShalokShalom> i like clean code

[16:05] <gfldex> how do you define "clean code"?

[16:05] <perlpilot> ShalokShalom: knives are useful tools.

[16:06] <ShalokShalom> gfldex: less clutter

[16:06] <ShalokShalom> obvious

[16:06] <gfldex> how do you define "clutter" in the context of code?

[16:07] <ShalokShalom> perlpilot: do you think, you can achieve your goals without knifes?

[16:07] <ilmari> ShalokShalom: not if my goal is to cut something

[16:07] <ShalokShalom> and if you goal is to open something?

[16:07] <mst> C4

[16:07] <ilmari> mst++

[16:10] *** konsolebox joined
[16:10] <mst> <NamedN> "you were only meant to blow the bloody for loop... ?"

[16:10] <gfldex> I found that when I have to replace a term that is a matter of definition with another term that is matter of definition I tend to talk about something that doesn't really exists

[16:10] *** Cabanossi left
[16:10] <ilmari> ShalokShalom: what do you consider more readable? 'my $sum = [+] @numbers;' or 'my $sum; for @numbers -> $x { $sum = $sum + $x }'?

[16:11] <perlpilot> ShalokShalom: Metaphors aside, the point is that Perl allows for freedom of expression.  A consequence of freedom is that people are allowed to do things you may not like.  And that's okay, *you* don't have to do them because of that same freedom.

[16:12] <ShalokShalom> ilmari: both crappy

[16:12] <ShalokShalom> less symbols

[16:12] <ShalokShalom> clear language

[16:12] *** khisanth_ joined
[16:12] *** Cabanossi joined
[16:12] <ShalokShalom> perlpilot: so long as i can express myself with less noise

[16:12] <perlpilot> ShalokShalom: and you can.

[16:12] <ShalokShalom> gfldex: xD

[16:13] <ShalokShalom> perlpilot: can you show me some example code?

[16:13] <ilmari> ShalokShalom: this better: declare sum integer; for number in numbers do add number to sum yielding sum done;

[16:13] <ShalokShalom> guides me "Think Perl 6" into this direction?

[16:13] <ShalokShalom> ilmari: perfect

[16:13] <perlpilot> I guess you can write COBOL in perl  ;)

[16:13] <ilmari> ShalokShalom: then perl (in any form) is not for you

[16:13] <ShalokShalom> just translate in my mother tongue now :P

[16:13] <ShalokShalom> ilmari: ok, thanks

[16:13] <ShalokShalom> which one is?

[16:14] <ShalokShalom> in your opinion

[16:14] <raschipi> COBOL

[16:16] *** Guest51511 left
[16:16] <raschipi> Programmers have a high risk of getting CTS, so very verbose languages got out of fashion a long time ago.

[16:16] *** Skarsnik joined
[16:16] <Skarsnik> Hello

[16:16] <yoleaux> 10:25Z <nadim> Skarsnik: thanks for the help with NativeCall stuff. t's starting to look good  http://i.imgur.com/ay6dLTc.png. I'd like to build a GumboNode with the parent instanciated, did't really get how.

[16:16] <yoleaux> 16:01Z <AlexDaniel> Skarsnik: by the way, does RT #131914 affect you in any way, or did you notice it by chance?

[16:16] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131914

[16:16] <gfldex> ShalokShalom: I do prefere less clutter too, that's why I like Perl 6. But I will define clutter different then you. An I'm quite sure you will change your definition of clutter too after you mastered the language.

[16:17] <ShalokShalom> probably

[16:17] <gfldex> my $cfg-handle = ([//] try (@fs».IO».open))

[16:17] <ShalokShalom> do you know OCaml

[16:17] <ShalokShalom> this is what i call less clutter

[16:17] <gfldex> that's actually a nested loop and I would not like to write those

[16:17] <ShalokShalom> so many symbols <. <

[16:17] <ShalokShalom> in this code example

[16:18] <gfldex> simple nested loops introducing two blocks is what I would count as clutter

[16:18] <raschipi> ShalokShalom: So you don't like to learn Maths? Because of the symbols...

[16:18] <Skarsnik> .tell nadim damn that look good

[16:18] <yoleaux> Skarsnik: I'll pass your message to nadim.

[16:18] <perlpilot> ShalokShalom: when people complain about the symbols used in Perl, I tend to think that's like complaining that the letter "k" exists.   It's just a question of what symbology you're used to.

[16:19] <b2gills> without those symbols ([//] try (@fs».IO».open)) would have been something like ten times as long

[16:20] *** mr_ron left
[16:20] *** go|dfish1 is now known as go|dfish

[16:20] <perlpilot> yeah, learning what the symbols mean and how to use them increases your ability of expression.   This is often a good thing.

[16:20] <gfldex> m: my @fs = <a b>; my $fh; for @fs -> $f { $fh.push: try $f.IO.open }; @fs.grep({.defined})

[16:20] <camelia> rakudo-moar c67d7d: ( no output )

[16:21] <ShalokShalom> Perl 5 supports calling from Assembler and other languages which are currently not mentioned in the Perl6 entry on the FFi article on Wikipedia

[16:21] <perlpilot> of course, you have to consider your audience a little bit.   You wouldn't speak at a PhD level to a toddler.

[16:21] <gfldex> ShalokShalom: I untangled that expression for you

[16:21] <ShalokShalom> i guess the NativeCall library counts for both?

[16:21] <gfldex> I like my version better

[16:21] *** setty1 joined
[16:21] <ShalokShalom> yeah, agree

[16:21] <ShalokShalom> and yes, math is my weak spot

[16:21] <b2gills> gfldex: it also needs a .tail on the grep

[16:21] <gfldex> not really

[16:21] <b2gills> .head not tail

[16:21] <yoleaux> b2gills: Sorry, that command (.head) crashed.

[16:22] <gfldex> i want it to blow when I call .slurp

[16:22] <perlpilot> ShalokShalom: do you like music or painting?

[16:22] <ShalokShalom> i quite like it, while my school failed to ship it with joy, most of the time

[16:22] <ShalokShalom> sure

[16:22] <perlpilot> (these things are also rife with symbology)

[16:22] <gfldex> the @fs should be $fs tho

[16:22] *** mcmillhj left
[16:22] <ShalokShalom> perlpilot: with different kinds of

[16:22] <ShalokShalom> our mind work differently, when symbols are into the play, as with sounds

[16:23] <b2gills> gfldex: the [//] LIST returns the first defined value, the grep would return all of the defined values

[16:23] <gfldex> b2gills: it does not

[16:24] <TimToady> symbols are friendlier to non-English speakers than words are

[16:24] <perlpilot> ShalokShalom: now you've got me wondering how to add an aural component to the Perl language  :-)

[16:24] <ShalokShalom> do you understand the syntax of OCaml?

[16:24] <gfldex> b2gills: see https://irclog.perlgeek.de/perl6/2017-08-17#i_15032081

[16:24] <ShalokShalom> :)

[16:25] <ShalokShalom> TimToady: thats for what translations are

[16:25] <perlpilot> ShalokShalom: yeah, it's got all those * and | and -> and ( and ) and = and ... symbols.   It's totally weird.

[16:25] <ShalokShalom> i am wondering, why there are no (?) parsers around, who translate the keywords before the compilation 

[16:25] <ShalokShalom> perlpilot: less symbols 

[16:25] <b2gills> gfldex: that is doing exactly what I said

[16:26] <ShalokShalom> with a clear sense

[16:26] <gfldex> TimToady: I do not agree. Symbols are just fair in that they need both english speakers and non-english speakers to learn something completely new

[16:26] <AlexDaniel> .first(*.defined) ?

[16:26] <ShalokShalom> TimToady: plus, the tutorials are anyway just in English

[16:26] <ShalokShalom> so this is a wanna be argument, imho

[16:26] <ShalokShalom> gfldex: plus this, yeah

[16:27] <ShalokShalom> its a language on its own

[16:27] <gfldex> ShalokShalom: luckily it's a nice language :)

[16:27] *** mcmillhj joined
[16:28] <b2gills> I would argue that `0, 1, 2, 4, 8, 16 ... *` is almost exactly how an English person would write the sequence of powers of 2

[16:28] <perlpilot> ShalokShalom: so ... where's the high-water mark of how many symbols are "just enough, but not too much"?  At what point do you feel the symbology as a burden as opposed to concise expression?

[16:29] <b2gills> m: say [//] $,$,$, 1, 2 

[16:29] <camelia> rakudo-moar c67d7d: OUTPUT: «1␤»

[16:30] <ShalokShalom> perlpilot: how often you use them

[16:30] <ShalokShalom> and if the syntax can fit on a post card 

[16:30] <AlexDaniel> b2gills: I'm a bit late, but isn't ｢([//] try (@fs».IO».open))｣ wrong anyway?

[16:30] <ShalokShalom> gfldex: yeah :)

[16:30] <perlpilot> ShalokShalom: heh, it's that second one where perl fails you I guess :)

[16:30] <AlexDaniel> because all of @fs will be opened anyway

[16:30] *** [Coke] joined
[16:31] <ShalokShalom> i guess so

[16:31] <[Coke]> test?

[16:31] <ShalokShalom> perlpilot: so what can you recommend me, in this case?

[16:31] <ShalokShalom> next to OCaml and Pharo, maybe functional

[16:31] <b2gills> AlexDaniel: It does more work than necessary, because it calls .IO.open on all of the values before the [//], but is otherwise fine

[16:32] *** mcmillhj left
[16:32] <[Coke]> weird. irssi was still up, but apparently not connected anywhere.

[16:33] <perlpilot> ShalokShalom: I don't know anything about Pharo, but I like Haskell.

[16:33] <perlpilot> ShalokShalom: but then, I also like Perl 6  :-)

[16:33] <ShalokShalom> i see

[16:33] <ShalokShalom> thanks a lot

[16:33] <AlexDaniel> m: my @a = { Nil }, { say ‘hello’; 42 }, { say ‘world’; 50 }; say @a.map({ .() }).first(*.defined)

[16:33] <camelia> rakudo-moar c67d7d: OUTPUT: «hello␤42␤»

[16:34] <[Coke]> (I see jnthn mentioning he was k-lined elsewhere; wonder if that also happened to me.)

[16:35] *** ckraniak left
[16:37] *** mcmillhj joined
[16:38] *** mr-foobar left
[16:39] *** dakkar left
[16:39] *** mr-foobar joined
[16:41] *** Cabanossi left
[16:42] *** Cabanossi joined
[16:42] *** mcmillhj left
[16:48] *** cpage_ left
[16:55] *** mcmillhj joined
[16:59] *** mcmillhj left
[17:03] *** zakharyas left
[17:06] *** st_elmo joined
[17:07] *** st_elmo left
[17:13] *** AlexDaniel left
[17:15] *** mcmillhj joined
[17:18] *** nadim joined
[17:18] *** AlexDaniel joined
[17:19] *** zakharyas joined
[17:20] *** mcmillhj left
[17:20] *** mcmillhj joined
[17:25] *** raschipi left
[17:27] <nadim> Skarsnik: can you give me a hand instanciating a gumbo with a few parents other fields? did you see the screenshot i send you?

[17:27] <yoleaux> 16:18Z <Skarsnik> nadim: damn that look good

[17:27] *** ingy1 is now known as ingy

[17:28] <nadim> Skarsnik: well I just received your message, so you've seen it

[17:31] <Skarsnik> hm use the module? not sure how to populate most of this stuff

[17:32] *** Praise joined
[17:32] *** Praise left
[17:32] *** Praise joined
[17:35] <nadim> Another complex struct self referential if possible would be as good.

[17:36] <nadim> Anything to test with that is instanciated in fact. I tried, without knowing what I did, and the result was a nice data rendering of an exception. at least it died cleanly

[17:37] <Skarsnik> huhu

[17:37] <nadim> :P

[17:44] *** domidumont joined
[17:50] *** PerlMonger joined
[17:50] <PerlMonger> Hi guys

[17:51] <PerlMonger> How do I run perl6 code in Atom?

[17:51] <PerlMonger> I have the perl6 addon

[17:53] *** Aaronepower left
[17:53] *** zakharyas left
[18:00] *** profan joined
[18:04] *** lucasb left
[18:13] *** ttkp6 joined
[18:13] <moritz> PerlMonger: https://perl6advent.wordpress.com/2015/12/03/day-3-atom-editor-support/ mentions an approch using atom-runner

[18:13] <moritz> now idea how up-to-date that is

[18:14] *** haukex joined
[18:14] <moritz> s/now/no/

[18:14] <PerlMonger> I have the package they mention, but I'll have a read through it

[18:18] *** st_elmo joined
[18:19] *** haukex left
[18:20] *** lizmat joined
[18:23] *** Aaronepower joined
[18:25] *** PerlMonger left
[18:26] *** cpage_ joined
[18:31] *** espadrine_ joined
[18:36] *** cdg joined
[18:37] *** mspo joined
[18:38] *** jeek joined
[18:39] *** cdg_ left
[18:41] *** cdg left
[18:41] *** cpage_ left
[18:48] *** itaipu left
[18:50] *** itaipu joined
[18:55] *** raschipi joined
[18:56] *** ponbiki joined
[18:56] *** haukex joined
[19:00] <Skarsnik> hm, do I need something to coerce a $ holding an Array with for to get each elem?

[19:00] <Skarsnik> m: my $foo = [{a => "1"}, {a => "2"}]; say $foo[1].WHAT; for $foo -> $f { say $f.WHAT}

[19:00] <camelia> rakudo-moar a30ce6: OUTPUT: «(Hash)␤(Array)␤»

[19:01] <jnthn> for @$foo

[19:01] <moritz> or $foo.list, iirc

[19:01] <moritz> m: my $foo = [{a => "1"}, {a => "2"}]; say .^name for @$foo;

[19:01] <camelia> rakudo-moar a30ce6: OUTPUT: «Hash␤Hash␤»

[19:01] <moritz> m: my $foo = [{a => "1"}, {a => "2"}]; say .^name for $foo.list

[19:01] <camelia> rakudo-moar a30ce6: OUTPUT: «Hash␤Hash␤»

[19:01] <raschipi> m: my $foo = [{a => "1"}, {a => "2"}]; say .^name for |$foo;

[19:01] <camelia> rakudo-moar a30ce6: OUTPUT: «Hash␤Hash␤»

[19:02] <Skarsnik> Ahh thx :)

[19:02] <raschipi> Skarsnik: Also, note the .^name instead of .WHAT

[19:02] *** haukex left
[19:03] <raschipi> .WHAT uses compiler magic and sometimes doesn't work. If you want the name, ask for it.

[19:06] <timotimo> mostly *.WHAT doesn't do what you would naively expect

[19:06] *** Kyo91 left
[19:08] <moritz> .WHAT returns the type object; but for debugging, I want the type name

[19:11] *** Cabanossi left
[19:11] <lizmat> m: my int $a; await do for ^10 { start { $a++ for ^1000 } }; dd $a

[19:11] <camelia> rakudo-moar a30ce6: OUTPUT: «7315␤»

[19:12] *** Cabanossi joined
[19:12] <lizmat> m: my int $a; await do for ^10 { start { $a⚛++ for ^1000 } }; dd $a   # whee!

[19:12] <camelia> rakudo-moar a30ce6: OUTPUT: «10000␤»

[19:12] *** darutoko left
[19:16] <moritz> m: my int $a; await do for ^10 { start { $a++ for ^1000 } }; dd $a; say now - INIT now

[19:16] <camelia> rakudo-moar a30ce6: OUTPUT: «9128␤0.00583703␤»

[19:16] <mspo> m: 5.WHO

[19:16] <camelia> rakudo-moar a30ce6: ( no output )

[19:16] <moritz> m: my int $a; await do for ^10 { start { $a⚛++ for ^1000 } }; dd $a; say now - INIT now

[19:17] <camelia> rakudo-moar a30ce6: OUTPUT: «10000␤0.00864247␤»

[19:17] <moritz> m: say 5.WHO

[19:17] <camelia> rakudo-moar a30ce6: OUTPUT: «Int␤»

[19:17] <moritz> m: say 5.WHO.perl

[19:17] <camelia> rakudo-moar a30ce6: OUTPUT: «{}␤»

[19:17] <moritz> m: say 5.WHO.^name

[19:17] <camelia> rakudo-moar a30ce6: OUTPUT: «Stash␤»

[19:21] *** domidumont left
[19:22] <mspo> will there be a .WHERE ?

[19:22] <mspo> (and .WHEN/.HOW)

[19:22] <mspo> oh there already is a HOW

[19:22] <mspo> m: say 5.HOW

[19:22] <camelia> rakudo-moar a30ce6: OUTPUT: «Perl6::Metamodel::ClassHOW.new␤»

[19:22] <moritz> m: say 'foo'.WHERE

[19:22] <camelia> rakudo-moar a30ce6: OUTPUT: «140590182265624␤»

[19:23] <mspo> m: say 'foo'.WHEN

[19:23] <camelia> rakudo-moar a30ce6: OUTPUT: «No such method 'WHEN' for invocant of type 'Str'. Did you mean any of these?␤    WHERE␤    WHY␤␤  in block <unit> at <tmp> line 1␤␤»

[19:23] <mspo> m: say 'foo'.WHY

[19:23] <camelia> rakudo-moar a30ce6: OUTPUT: «No documentation available for type 'Str'.␤Perhaps it can be found at https://docs.perl6.org/type/Str␤»

[19:23] *** Kyo91 joined
[19:23] <mspo> not sure WHAT to think about that WHERE :)

[19:24] <raschipi> mspo: I think it could be used in NativeCall.

[19:26] <Skarsnik> m: use NativeCall; my size_t $a; say $a.WHERE

[19:26] <camelia> rakudo-moar a30ce6: OUTPUT: «32309328␤»

[19:27] <raschipi> Now cast it to a pointer.

[19:27] <mspo> m: say &foo.WHERE

[19:27] <camelia> rakudo-moar a30ce6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    foo used at line 1␤␤»

[19:28] <Skarsnik> m: use NativeCall; my size_t $a; say $a.WHERE; my int32 $b = nativecast(int32, $a); say $b.WHERE;

[19:28] <camelia> rakudo-moar a30ce6: OUTPUT: «140438740726336␤Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque (Int)␤  in sub nativecast at /home/camelia/rakudo-m-inst-1/share/perl6/sources/24DD121B5B4774C04A7084827BFAD92199756E03 (Na…»

[19:29] <Skarsnik> m: use NativeCall; my size_t $a; say $a.WHERE; my Pointer[int32] $b = nativecast(int32, $a); say $b.WHERE;

[19:29] <camelia> rakudo-moar a30ce6: OUTPUT: «139765430248000␤Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque (Int)␤  in sub nativecast at /home/camelia/rakudo-m-inst-1/share/perl6/sources/24DD121B5B4774C04A7084827BFAD92199756E03 (Na…»

[19:29] <Skarsnik> m: use NativeCall; my size_t $a; say $a.WHERE; my Pointer[int32] $b = nativecast(Pointer[int32], $a); say $b.WHERE;

[19:29] <camelia> rakudo-moar a30ce6: OUTPUT: «140020095017536␤Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque (Int)␤  in sub nativecast at /home/camelia/rakudo-m-inst-1/share/perl6/sources/24DD121B5B4774C04A7084827BFAD92199756E03 (Na…»

[19:30] *** rindolf left
[19:32] <Skarsnik> nice one of the the struct of libxml2 has 88 members xD

[19:36] *** lizmat left
[19:38] *** zakharyas joined
[19:40] *** Cabanossi left
[19:42] *** Cabanossi joined
[19:47] *** cpage_ joined
[19:47] *** ckraniak joined
[19:51] *** cdg joined
[19:51] *** andreoss joined
[19:55] <moritz> I'm currently looking for inspiration

[19:55] <moritz> for the Perl 6 regexes/grammar book, I want to write an example project

[19:55] <moritz> so I need some data format to parse

[19:55] <Skarsnik> yaml?

[19:56] <moritz> ideally something not too complicated (complete SQL might be too much)

[19:56] <mspo> I submitted a doc pr counting hobbits from LOTR quotes

[19:56] <mspo> but I think it's lost

[19:56] <moritz> Skarsnik: possibly

[19:56] <mspo> yaml is compelx-as-hell

[19:56] *** cdg left
[19:56] <moritz> the more ideas, the better

[19:56] <mspo> what's that simplified one from the github guy?

[19:56] <mspo> rust uses it a lot

[19:56] <mspo> TOML

[19:56] <moritz> mspo: I feared so. But so far, I'm looking for ideas, not judge them

[19:56] <mspo> you could probably do a complete TOML in the book

[19:56] <moritz> mspo: TOML sounds good

[19:57] <mspo> moritz: it has some weird date stuff but, otherwise, is yaml-looking ini

[19:57] <mspo> https://en.wikipedia.org/wiki/TOML  <- I wrote that

[19:58] <Skarsnik> prolog? xD

[19:59] <mspo> regarding yaml: https://stackoverflow.com/a/21699210

[19:59] <mspo> one of my favorites

[20:00] <moritz> Skarsnik: worth investigating

[20:00] <ufobat> a simple lisp grammar maybe, moritz?

[20:00] <mspo> the first go program was an s-lang parser, apparently

[20:00] <mspo> s-expressions

[20:02] * moritz writes down all those suggestions

[20:02] <raschipi> moritz: INI files?

[20:02] <raschipi> or CSV

[20:02] <mspo> apache logs

[20:03] <moritz> or apache config file

[20:03] <Skarsnik> elf?

[20:04] <Skarsnik> probably not really interesting to write with a grammar thou

[20:04] <mspo> moritz: that's a good NativeCode + Grammar exmaple.  You can get apache to dump the parsed config in a c structure

[20:04] <raschipi> e-mail headers

[20:04] <mspo> moritz: one of the devs wrote a httpd.conf -> json for me one time just in an irc chat

[20:05] <Skarsnik> http request? (probably too simple)

[20:05] <mspo> GNATS bug tickets are emails + event log if you want more of a challenge :)

[20:05] *** Kyo91_ joined
[20:05] <mspo> netbsd has like 50k of them if you want to practice parsing.  I made a perl5 script (ugly) to do gnats2json

[20:06] <mspo> for dumping into solr

[20:07] *** Kyo91 left
[20:08] *** cdg joined
[20:09] <ugexe> parse the output of RAKUDO_MODULE_DEBUG to create an orderable dependency graph

[20:09] *** Sgeo left
[20:09] <Skarsnik> can't cvs parsing be easily multithreaded?

[20:10] <moritz> Skarsnik: not really

[20:10] <Geth> ¦ Inline-Perl5: 4fca7715ba | (Stefan Seifert)++ | lib/Inline/Perl5.pm6

[20:10] <Geth> ¦ Inline-Perl5: Speed up other invoke methods a tiny bit by using a lower level type check

[20:10] <Geth> ¦ Inline-Perl5: 

[20:10] <Geth> ¦ Inline-Perl5: Ports the same speedup as 04a774ccf87c241e1bf5540d62854689bfdc835d to

[20:10] <Geth> ¦ Inline-Perl5: other ways to invoke methods.

[20:10] <Geth> ¦ Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/4fca7715ba

[20:10] <Geth> ¦ Inline-Perl5: f52727c9fc | (Stefan Seifert)++ | lib/Inline/Perl5/Object.pm6

[20:10] <Geth> ¦ Inline-Perl5: Speed up generated methods of Perl 5 objects

[20:10] <Geth> ¦ Inline-Perl5: 

[20:10] <Geth> ¦ Inline-Perl5: Use rakudo's optimized multi dispatcher instead of checking ourselves if

[20:10] <Geth> ¦ Inline-Perl5: arguments were passed.

[20:10] <Geth> ¦ Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/f52727c9fc

[20:10] <moritz> Skarsnik: if you have a CSV dialect that allows multi-line quoted strings, then there's no obvious mechanism for splitting the lines that you could parse in parallel

[20:10] <Skarsnik> oh yeah line size is not fixed?

[20:11] <ugexe> you could parse individual lines to a worker pool though I would think

[20:12] *** cdg_ joined
[20:12] <mspo> ugexe: I think you'd want to feed batches of lines

[20:12] <mspo> feels like you'd be spending more cpu dispatching vs parsing

[20:13] <raschipi> crontab

[20:13] <ufobat> https://github.com/ufobat/p6-time-crontab :D

[20:14] <moritz> there's more to crontabs though (variable assignments, @reboot clauses etc.)

[20:14] <ugexe> optimally yes. i was imaging how a streaming json parser works

[20:15] <raschipi> ufobat: I knew about your awesome work, but I don't think Moritz is lookin for NIY.

[20:15] *** cdg left
[20:15] <ufobat> what is NIY?

[20:15] <raschipi> not implemented yet

[20:16] <ufobat> ah

[20:16] <perlpilot> normally that's spelled NYI

[20:16] <ufobat> no my link was more like "feel free to steal some grammar code"

[20:16] * moritz is looking for general ideas for now, and will sift through them later to check if they are feasible

[20:17] <moritz> another thing I could parse: IRC commands

[20:17] <Skarsnik> meh

[20:17] <ufobat> oh that would be fun

[20:17] <mspo> mm bots

[20:17] <Skarsnik> it's like CMD arg arg arg args

[20:18] <Skarsnik> or CMD args:args:arg blablaba

[20:19] <moritz> I'm also considering a parser for python. Not the full language, but something that deals with indentation levels

[20:19] *** haukex joined
[20:20] *** devmikey joined
[20:23] <moritz> parsing PCRE using Perl 6 regexes -- how meta

[20:23] <Skarsnik> huhu

[20:30] <ufobat> i guess RL examples for users are most likely data from proprietary systems

[20:31] <ufobat> for the most common things there are already modules, http, json, markdown, some wiki language

[20:31] *** haukex left
[20:31] *** haukex joined
[20:36] *** xenowoolfy joined
[20:36] <Juerd> Hi xenowoolfy 

[20:36] <xenowoolfy> Hi Juerd

[20:37] <xenowoolfy> Heh I inadvertently opened the wrong app and suddenly I am in #perl6.  Sorry.

[20:39] <Juerd> It's a good place to end up in, even if by mistake :)

[20:39] <moritz> yes; I came here 10.5 years ago to report a broken link, and somehow I stayed

[20:39] <Juerd> :)

[20:39] <xenowoolfy> :-)

[20:40] <raschipi> Yet, broken links everywhere. #Perl6 failed you, Moritz.

[20:40] *** Cabanossi left
[20:41] *** andrzejku left
[20:42] <moritz> ... and I only noticed more than a decade later. Shame on me. :-)

[20:42] *** Cabanossi joined
[20:42] <xenowoolfy> lizmat and I are driving back hpme in Echt from Cologne, where we had a regular NiederrheinPM meeting. Talking about German Perl Workshop 2018 in Cologne. Liz gave a demo of jnthn's work on atomic operators.

[20:44] *** xenowoolfy left
[20:44] <moritz> ooh, Köln is nice to reach for me by train or plane

[20:45] <moritz> and if the organization isn't such a disaster as this year, I might attend :-)

[20:49] *** ChristopherBotto joined
[20:50] <ChristopherBotto> Hello everyone!

[20:50] <moritz> hello ChristopherBotto 

[20:51] <ChristopherBotto> m: dd %?RESOURCES;

[20:51] <camelia> rakudo-moar a30ce6: OUTPUT: «Nil␤»

[20:51] <ChristopherBotto> m: use zef; dd %?RESOURCES;

[20:51] <camelia> rakudo-moar a30ce6: OUTPUT: «===SORRY!===␤Could not find zef at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/perl6␤    CompUnit::Reposit…»

[20:51] <ChristopherBotto> m: use Zef; dd %?RESOURCES;

[20:51] <camelia> rakudo-moar a30ce6: OUTPUT: «Nil␤»

[20:52] <ChristopherBotto> moritz: Hello.

[20:53] *** zakharyas left
[20:53] <ChristopherBotto> I was wondering how to use %?RESOURCES. I see it used in other people's code, but don't seem to be able to access it in my own.

[20:53] <moritz> iirc, %?RESOURCES is only available inside an installed module

[20:56] <moritz> basically it's a hash where the key is a local path (or file name), and once the module is installed, the value becomes the absolute path to the installed file

[20:56] <moritz> that said, I've never used it myself, and I'm sure others can explain it better

[20:57] <moritz> if you are looking for more usage examples, git clone https://github.com/moritz/perl6-all-modules.git and then do a git grep im there

[20:58] <ChristopherBotto> moritz: Thanks so much!

[20:58] *** st_elmo left
[21:00] <moritz> ChristopherBotto: you're welcome

[21:00] <moritz> time for sleeping here

[21:01] *** skids left
[21:06] *** Kyo91_ left
[21:06] *** eroux joined
[21:13] *** raschipi left
[21:16] *** mcmillhj left
[21:16] *** Kyo91_ joined
[21:30] *** mcmillhj joined
[21:34] *** mcmillhj left
[21:40] *** Kyo91_ left
[21:42] *** lizmat joined
[21:42] *** literal joined
[21:44] *** mcmillhj joined
[21:46] *** markmont left
[21:46] *** Skarsnik left
[21:49] *** mcmillhj left
[21:52] *** devmikey left
[21:53] *** devmikey joined
[21:59] *** cdg_ left
[21:59] *** ash_gti joined
[22:02] *** cdg joined
[22:02] *** mcmillhj joined
[22:03] *** MasterDuke joined
[22:07] *** mcmillhj left
[22:09] *** wamba left
[22:11] *** TEttinger joined
[22:11] *** Kyo91_ joined
[22:13] *** ChristopherBotto left
[22:14] *** haukex left
[22:15] <b2gills> .tell moritz I wrote a Grammar for a made up language for a code golf once, I don't know if it is helpful or not for what you are doing https://stackoverflow.com/a/41770672/1337

[22:15] <yoleaux> b2gills: I'll pass your message to moritz.

[22:15] *** xenowoolfy joined
[22:15] *** xenowoolfy left
[22:16] *** Kyo91_ left
[22:16] *** cdg_ joined
[22:19] *** cdg left
[22:20] *** cdg_ left
[22:20] *** mcmillhj joined
[22:25] *** erdic joined
[22:25] *** mcmillhj left
[22:27] *** setty1 left
[22:27] *** nattefrost left
[22:27] *** dct joined
[22:29] <AlexDaniel> If I do something like this:

[22:29] <AlexDaniel> perl6 -ne 'INIT $*IN.nl-in = ‘a’; INIT $*OUT.nl-out = ‘~~~’; … … … … …'

[22:29] <AlexDaniel> am I crazy or is it the right way to do something like this?

[22:29] <AlexDaniel> note that I want to use “\0” for both nl-in and nl-out, the thing above was just an example

[22:34] *** lichtkind left
[22:39] <AlexDaniel> well, what could possibly go wrong :)

[22:41] *** mcmillhj joined
[22:43] *** markmont joined
[22:43] *** skids joined
[22:45] *** mcmillhj left
[22:53] *** mcmillhj joined
[22:57] *** mcmillhj left
[22:58] *** devmikey left
[23:15] *** andreoss left
[23:16] *** ugjka left
[23:19] *** ugjka joined
[23:26] *** mcmillhj joined
[23:30] *** mcmillhj left
[23:39] *** mcmillhj joined
[23:40] *** espadrine_ left
[23:44] *** mcmillhj left
[23:53] *** mcmillhj joined
[23:54] *** Sgeo joined
[23:56] *** zoll joined
[23:57] *** mcmillhj left
