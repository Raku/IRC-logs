[00:00] *** dct left
[00:01] *** cdg joined
[00:05] *** KDr2_m joined
[00:12] *** KDr2_m left
[00:17] *** mcmillhj joined
[00:23] *** mcmillhj left
[00:23] *** risou_awy is now known as risou

[00:26] *** espadrine left
[00:34] *** mcmillhj joined
[00:39] *** mcmillhj left
[00:40] *** risou is now known as risou_awy

[00:40] *** vendethiel left
[00:40] *** mcmillhj joined
[00:41] *** adu joined
[00:41] *** vendethiel joined
[00:45] *** mcmillhj left
[00:46] *** pyrimidine joined
[00:51] *** pyrimidine left
[00:54] *** evalable6 left
[00:54] *** committable6 left
[00:54] *** statisfiable6 left
[00:54] *** bisectable6 left
[00:54] *** benchable6 left
[00:54] *** unicodable6 left
[00:56] *** unicodable6 joined
[00:56] *** ChanServ sets mode: +v unicodable6

[00:56] *** bisectable6 joined
[00:56] *** benchable6 joined
[00:56] *** committable6 joined
[00:56] *** ChanServ sets mode: +v bisectable6

[00:56] *** evalable6 joined
[00:56] *** ChanServ sets mode: +v benchable6

[00:56] *** ChanServ sets mode: +v committable6

[00:56] *** ChanServ sets mode: +v evalable6

[00:56] *** statisfiable6 joined
[00:56] *** ChanServ sets mode: +v statisfiable6

[01:02] *** Matthew[m] left
[01:02] *** ilmari[m] left
[01:02] *** tadzik left
[01:02] *** unclechu left
[01:02] *** dp[m] left
[01:03] *** xui_nya[m] left
[01:03] *** M-Illandan left
[01:03] *** mienaikage left
[01:03] *** CIAvash[m] left
[01:03] *** mcmillhj joined
[01:03] *** wictory[m] left
[01:04] *** aborazmeh joined
[01:04] *** aborazmeh left
[01:04] *** aborazmeh joined
[01:05] *** captain-adequate left
[01:06] *** captain-adequate joined
[01:06] *** captain-adequate left
[01:07] *** mienaikage joined
[01:07] *** CIAvash[m] joined
[01:07] *** sufrostico left
[01:08] *** ilmari[m] joined
[01:08] *** mcmillhj left
[01:09] <BenGoldberg> m: use nqp; my $p = nqp::getattr( &say.signature, Signature, '$!params' ); dd $p;

[01:09] <camelia> rakudo-moar 2cf9b5: OUTPUT: «P6opaque: no such attribute '$!params' in type Signature when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:10] *** wictory[m] joined
[01:11] *** lukaramu left
[01:11] *** dp[m] joined
[01:11] <BenGoldberg> m: dd &say.signature.params

[01:11] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(| is raw,)␤»

[01:12] <MasterDuke> m: use nqp; my $p = nqp::getattr( &say.signature, Signature, '@!params' ); dd $p;

[01:12] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'dispatch:<.?>' for invocant of type 'NQPArray'␤  in block <unit> at <tmp> line 1␤␤»

[01:13] <BenGoldberg> m: use nqp; my $p = nqp::getattr( &say.signature, Signature, '@!params' ); say so $p;

[01:13] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'Bool' for invocant of type 'NQPArray'␤  in block <unit> at <tmp> line 1␤␤»

[01:14] *** benchable6 left
[01:14] *** benchable6 joined
[01:14] *** ChanServ sets mode: +v benchable6

[01:14] *** tadzik joined
[01:15] *** xui_nya[m] joined
[01:15] <MasterDuke> m: use nqp; my @p = nqp::getattr( &say.signature, Signature, '@!params' ); dd @p;

[01:15] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Array @p = [| is raw]␤»

[01:16] *** cdg left
[01:16] *** Matthew[m] joined
[01:16] *** M-Illandan joined
[01:17] *** cdg joined
[01:17] *** unclechu joined
[01:19] <BenGoldberg> m: use nqp; my $p = nqp::getattr( &say, Method, '$!signature' ); say so $p;

[01:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «P6opaque: no such attribute '$!signature' in type Method when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:19] <BenGoldberg> m: use nqp; my $p = nqp::getattr( &say, Code, '$!signature' ); say so $p;

[01:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «True␤»

[01:19] <BenGoldberg> m: use nqp; my $p = nqp::getattr( &say, Code, '$!signature' ); say $p;

[01:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(| is raw)␤»

[01:20] *** ZzZombo left
[01:21] *** cibs left
[01:21] *** ZzZombo joined
[01:21] *** ZzZombo left
[01:21] *** ZzZombo joined
[01:22] *** g0d355__ joined
[01:22] *** cibs joined
[01:24] <BenGoldberg> m: sub plus( Int $x, Int $y ) { $x+$y }; use nqp; nqp::bindattr( &plus, Code, '$!signature', &say.signature ); say &plus.signature;

[01:24] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(| is raw)␤»

[01:24] <BenGoldberg> m: sub plus( Int $x, Int $y ) { $x+$y }; use nqp; nqp::bindattr( &plus, Code, '$!signature', &say.signature ); say plus( 2, 3 );

[01:24] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5␤»

[01:25] <BenGoldberg> m: sub plus( |args ) { [+] args }; use nqp; nqp::bindattr( &plus, Code, '$!signature', :(Int, Int) ); say plus( 2, 3 );

[01:25] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5␤»

[01:25] <BenGoldberg> m: sub plus( |args ) { [+] args }; use nqp; nqp::bindattr( &plus, Code, '$!signature', :(Int, Int) ); say plus( 2, 3, 4 );

[01:25] <camelia> rakudo-moar 2cf9b5: OUTPUT: «9␤»

[01:25] <BenGoldberg> m: sub plus( |args ) { [+] args }; use nqp; nqp::bindattr( &plus, Code, '$!signature', :(Int, Int) ); say &plus.signature;

[01:25] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Int, Int)␤»

[01:26] <BenGoldberg> m: sub plus( Int $x, Int $y ) { $x+$y }; use nqp; nqp::bindattr( &plus, Code, '$!signature', &say.signature ); say plus( 2, 3, 4 );

[01:26] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling plus(Int, Int, Int) will never work with declared signature (Int $x, Int $y)␤at <tmp>:1␤------> 3e, '$!signature', &say.signature ); say 7⏏5plus( 2, 3, 4 );␤»

[01:26] <BenGoldberg> m: sub plus( Int $x, Int $y ) { $x+$y }; use nqp; nqp::bindattr( &plus, Code, '$!signature', &say.signature ); my $ref = &plus; $ref( 2, 3, 4 );

[01:26] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Too many positionals passed; expected 2 arguments but got 3␤  in sub plus at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:27] <BenGoldberg> m: sub plus( Int $x, Int $y ) { $x+$y }; my $ref = &plus; $ref( 2, 3, 4 );

[01:27] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Too many positionals passed; expected 2 arguments but got 3␤  in sub plus at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:27] *** agentzh left
[01:28] <BenGoldberg> It's a bit strange that altering a sub's signature doesn't seem to alter much of anything, aside from what .signature returns.

[01:28] <BenGoldberg> m: dd { ^a + ^b };

[01:28] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routines:␤    a used at line 1␤    b used at line 1␤␤»

[01:29] <BenGoldberg> m: (-> $a, $b { $a + $b }).WHAT.say;

[01:29] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Block)␤»

[01:29] <BenGoldberg> m: (-> $a, $b { $a + $b }).signature.say;

[01:29] <camelia> rakudo-moar 2cf9b5: OUTPUT: «($a, $b)␤»

[01:32] *** agentzh joined
[01:37] *** Actualeyes joined
[01:40] *** itaipu left
[01:43] <BenGoldberg> bisectable6, help

[01:43] <bisectable6> BenGoldberg, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Bisectable

[01:44] <BenGoldberg> m: use nqp; nqp::exit( 1 );

[01:44] <camelia> rakudo-moar 2cf9b5: ( no output )

[01:44] <BenGoldberg> m: use MONKEY-GUTS; nqp::exit( 1 );

[01:44] <camelia> rakudo-moar 2cf9b5: ( no output )

[01:44] <BenGoldberg> bisectable6: use MONKEY-GUTS; nqp::exit( 1 );

[01:44] <bisectable6> BenGoldberg, On both starting points (old=2015.12 new=2cf9b53) the exit code is 1 and the output is identical as well

[01:44] <bisectable6> BenGoldberg, Output on both points: 

[01:46] <MasterDuke> BenGoldberg: do you get any different results if you alter the signature earlier, e.g., at BEGIN or INIT time?

[01:48] *** pyrimidine joined
[01:49] <BenGoldberg> To be honest, I'm glad that alterning the signature *doesn't* change things... I want to wrap a subroutine like so: my $wrapped = sub (|args) { my $*foo = $bar; $orig(|args) };, and then change the signature of $wrapped to match the original's.

[01:50] <BenGoldberg> While it's convenient for me, I'm vaguely worried that it might change in the future.

[01:50] *** elaADnlxie left
[01:52] <MasterDuke> $!signature doesn't show up in roast at all

[01:54] <BenGoldberg> I expect that '$!signature' is only used when Code objects are created -- everywhere else, the method .signature is used instead.

[01:55] *** risou_awy is now known as risou

[02:02] <BenGoldberg> m: my $x = given 42 { when Int { 3 }; default { "eh" } }; say $x;

[02:02] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5===␤Word 'given' interpreted as a listop; please use 'do given' to introduce the statement control word␤at <tmp>:1␤------> 3my $x = given7⏏5 42 { when Int { 3 }; default { "eh" } }␤Unexpected block in infix position (two term…»

[02:02] <BenGoldberg> m: my $x = do given 42 { when Int { 3 }; default { "eh" } }; say $x;

[02:02] <camelia> rakudo-moar 2cf9b5: OUTPUT: «3␤»

[02:04] *** mcmillhj joined
[02:11] *** aborazmeh left
[02:19] <BenGoldberg> m: use nqp; my $p = nqp::getattr( (method(Int:D) { ... }).signature, Signature, '@!params' ); dd $p;

[02:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3qp; my $p = nqp::getattr( (method(Int:D)7⏏5 { ... }).signature, Signature, '@!param␤    expecting any of:␤        infix stopper␤        statement end…»

[02:19] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); dd $p;

[02:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'dispatch:<.?>' for invocant of type 'NQPArray'␤  in block <unit> at <tmp> line 1␤␤»

[02:19] *** kalkin- left
[02:19] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); dd @$p;

[02:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'cache' for invocant of type 'NQPArray'␤  in block <unit> at <tmp> line 1␤␤»

[02:19] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say @$p;

[02:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'cache' for invocant of type 'NQPArray'␤  in block <unit> at <tmp> line 1␤␤»

[02:19] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say $p[0];

[02:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «X::Multi::NoMatch exception produced no message␤  in block <unit> at <tmp> line 1␤␤»

[02:19] *** kalkin- joined
[02:19] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); dd $p[0];

[02:19] <camelia> rakudo-moar 2cf9b5: OUTPUT: «X::Multi::NoMatch exception produced no message␤  in block <unit> at <tmp> line 1␤␤»

[02:20] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); $p[0] = 42;

[02:20] <camelia> rakudo-moar 2cf9b5: OUTPUT: «X::Multi::NoMatch exception produced no message␤  in block <unit> at <tmp> line 1␤␤»

[02:20] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' );

[02:20] <camelia> rakudo-moar 2cf9b5: ( no output )

[02:20] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( $p, 0 );

[02:20] <camelia> rakudo-moar 2cf9b5: OUTPUT: «This type (Scalar) does not support positional operations␤  in block <unit> at <tmp> line 1␤␤»

[02:21] <BenGoldberg> m: my $m = method (Int:D) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 0 );

[02:21] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Mu $␤»

[02:21] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 0 );

[02:21] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Mu $␤»

[02:22] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; use nqp; my $p = nqp::getattr( $m.signature, Signature, '$!params' ); say nqp::atpos( nqp::decont($p), 0 );

[02:22] <camelia> rakudo-moar 2cf9b5: OUTPUT: «P6opaque: no such attribute '$!params' in type Signature when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[02:22] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; dd $m.params; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 0 );

[02:22] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'params' for invocant of type 'Method'␤  in block <unit> at <tmp> line 1␤␤»

[02:22] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; dd $m.signature.params; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 0 );

[02:22] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Mu $, Int:D $x, *%_)␤Mu $␤»

[02:22] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; dd $m.signature.params; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 1 );

[02:22] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Mu $, Int:D $x, *%_)␤Int:D $x␤»

[02:22] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; dd $m.signature.params; use nqp; my $p = nqp::getattr( $m.signature, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 1 ).WHAT;

[02:22] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Mu $, Int:D $x, *%_)␤(Parameter)␤»

[02:23] *** mcmillhj left
[02:25] <BenGoldberg> m: my $s = :(Int:D $x); dd $s.params; use nqp; my $p = nqp::getattr( $s, Signature, '@!params' ); say nqp::atpos( nqp::decont($p), 1 ).WHAT;

[02:25] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Int:D $x,)␤P6opaque: no such attribute '@!params' in type Signature when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[02:26] <BenGoldberg> m: my $s = :(Int:D $x); dd $s.params; use nqp; my $p = nqp::getattr( $s, Signature, '$!params' ); say nqp::atpos( nqp::decont($p), 1 ).WHAT;

[02:26] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Int:D $x,)␤P6opaque: no such attribute '$!params' in type Signature when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[02:27] <BenGoldberg> m: my $s = :(Int:D $x); dd $s.params[]

[02:27] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Int:D $x,)␤»

[02:27] <BenGoldberg> m: my $s = :(Int:D $x); dd $s.params[0]

[02:27] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Parameter $x = Int:D $x␤»

[02:27] <BenGoldberg> m: my $s = :(Int:D $x); dd $s.params[1]

[02:27] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Nil␤»

[02:27] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; dd $m.signature.params[0]

[02:27] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Mu $␤»

[02:27] <BenGoldberg> m: my $m = method (Int:D $x) { 42 }; dd $m.signature.params[1]

[02:27] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Parameter $x = Int:D $x␤»

[02:28] <BenGoldberg> m: my $s = :(Int:D $x); dd $s.params[0]

[02:28] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Parameter $x = Int:D $x␤»

[02:30] <BenGoldberg> m: my @array = 1, 2; use nqp; say nqp::decont( @array );

[02:30] <camelia> rakudo-moar 2cf9b5: OUTPUT: «[1 2]␤»

[02:30] <BenGoldberg> m: my @array = 1, 2; use nqp; say nqp::decont( @array ).WHAT;

[02:30] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Array)␤»

[02:32] *** cibs left
[02:34] *** cibs joined
[02:34] *** mcmillhj joined
[02:37] *** cdg_ joined
[02:41] *** cdg left
[02:43] *** mcmillhj left
[02:45] *** sQuEE joined
[02:47] *** cdg joined
[02:50] *** cdg_ left
[02:50] <BenGoldberg> m: sub foo(Int $x) { 42 }; say foo 3;

[02:50] <camelia> rakudo-moar 2cf9b5: OUTPUT: «42␤»

[02:54] <BenGoldberg> m: :(Int: $x).params.say;

[02:54] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Int $ Mu $x)␤»

[02:55] <BenGoldberg> m: :(Str: $x).params.say;

[02:55] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Str $ Mu $x)␤»

[02:55] <BenGoldberg> m: :(Str: $x, Int $y).params.say;

[02:55] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Str $ Mu $x Int $y)␤»

[03:00] *** ZzZombo left
[03:03] *** risou left
[03:03] *** saki left
[03:04] *** risou_awy joined
[03:04] *** risou_awy is now known as risou

[03:09] <BenGoldberg> m: class Foo { sub bar() { 42 } }; say Foo.^methods;

[03:09] <camelia> rakudo-moar 2cf9b5: OUTPUT: «()␤»

[03:09] *** risou left
[03:10] *** risou_awy joined
[03:10] *** risou_awy is now known as risou

[03:10] <BenGoldberg> m: class Foo { method bar() { 42 } }; say Foo.^methods;

[03:10] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(bar)␤»

[03:13] *** cibs left
[03:15] *** cibs joined
[03:15] *** mcmillhj joined
[03:18] *** adu left
[03:19] *** noganex joined
[03:20] <BenGoldberg> m: class Foo { method bar() { 42 } }; class Baz { }; my $bar = Foo.^methods[0]; Baz.^add_method: "bar", $bar; Baz.^compose; say Baz.bar;

[03:20] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Type check failed in binding to <anon>; expected Foo but got Baz (Baz)␤  in method bar at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:20] *** mcmillhj left
[03:20] *** vendethiel left
[03:21] *** mcmillhj joined
[03:21] *** vendethiel joined
[03:21] *** noganex_ left
[03:22] <BenGoldberg> m: class Foo { method bar() { 42 } }; class Baz { }; my $bar = Foo.^methods[0]; Baz.^add_method: "bar", $bar; Baz.^compose; 

[03:22] <camelia> rakudo-moar 2cf9b5: ( no output )

[03:22] <BenGoldberg> m: class Foo { method bar() { 42 } }; class Baz { }; my $bar = Foo.^methods[0]; Baz.^add_method: "bar", $bar; Baz.^compose; say Baz.new.bar;

[03:22] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Type check failed in binding to <anon>; expected Foo but got Baz (Baz.new)␤  in method bar at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:25] *** mcmillhj left
[03:25] *** adu joined
[03:27] *** mcmillhj joined
[03:32] *** pyrimidi_ joined
[03:32] *** pyrimidine left
[03:34] *** xtreak joined
[03:36] *** mcmillhj left
[03:39] *** KDr2 joined
[03:40] <BenGoldberg> m: enum { Foo => 3 }; dd Foo;

[03:40] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Foo used at line 1␤Undeclared routine:␤    enum used at line 1␤␤»

[03:41] <BenGoldberg> m: enum { Foo => 3 }; say Foo;

[03:41] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Foo used at line 1␤Undeclared routine:␤    enum used at line 1␤␤»

[03:41] <BenGoldberg> m: enum Foo { Bar => 3 }; say Bar;

[03:41] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared names:␤    Bar used at line 1. Did you mean 'Bag'?␤    Foo used at line 1␤Undeclared routine:␤    enum used at line 1␤␤»

[03:41] <BenGoldberg> m: enum Foo { Bar => 3 }; say Foo::Bar;

[03:41] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Foo used at line 1␤Undeclared routine:␤    enum used at line 1␤␤»

[03:41] <timotimo> m: say { Bar => 3 }.perl

[03:41] <camelia> rakudo-moar 2cf9b5: OUTPUT: «{:Bar(3)}␤»

[03:42] <timotimo> m: enum Foo ('Bar', 3); say Foo::Bar

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Bar␤»

[03:42] <timotimo> m: enum Foo ('Bar', 3); say Bar

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Bar␤»

[03:42] <timotimo> m: enum Foo ('Bar', 3); say FOO

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    FOO used at line 1. Did you mean 'Foo'?␤␤»

[03:42] <timotimo> m: enum Foo ('Bar', 3); say Foo

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Foo)␤»

[03:42] <BenGoldberg> m: enum Foo Bar => 3; say Bar;

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared names:␤    Bar used at line 1. Did you mean 'Bag'?␤    Foo used at line 1␤Undeclared routine:␤    enum used at line 1␤␤»

[03:42] <BenGoldberg> m: enum Foo (Bar => 3); say Bar;

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Bar␤»

[03:42] <BenGoldberg> m: enum Foo (Bar => 3); say &Bar;

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Nil␤»

[03:42] <BenGoldberg> m: enum Foo (Bar => 3); say &asdf;

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    asdf used at line 1␤␤»

[03:42] *** adu left
[03:42] <BenGoldberg> m: enum Foo (Bar => 3); say &Bar.perl;

[03:42] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Nil␤»

[03:43] <BenGoldberg> m: enum Foo (Bar => 3); say &Bar.gist;

[03:43] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Nil␤»

[03:43] *** KDr2 left
[03:43] *** KDr2 joined
[03:44] <timotimo> m: enum Foo (Bar => 3); say Bar.perl

[03:44] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Foo::Bar␤»

[03:44] <BenGoldberg> m: enum Foo (Bar => 3); my $b = &Bar; say $b();

[03:44] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Cannot find method 'Any' on object of type List␤  in block <unit> at <tmp> line 1␤␤»

[03:44] <BenGoldberg> Now that's a LTA error message.

[03:45] <BenGoldberg> m: enum Foo (Bar => 3); say Foo.kv

[03:45] <camelia> rakudo-moar 2cf9b5: OUTPUT: «()␤»

[03:45] <BenGoldberg> m: enum Foo (Bar => 3); say Foo.k

[03:45] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'k' for invocant of type 'Foo'␤  in block <unit> at <tmp> line 1␤␤»

[03:45] <BenGoldberg> m: enum Foo (Bar => 3); say Foo.keys

[03:45] <camelia> rakudo-moar 2cf9b5: OUTPUT: «()␤»

[03:45] <BenGoldberg> m: enum Foo (Bar => 3); say Foo.values

[03:45] <camelia> rakudo-moar 2cf9b5: OUTPUT: «()␤»

[03:45] <timotimo> you want Foo::.keys and Foo::.values

[03:45] <BenGoldberg> m: enum Foo (Bar => 3); say Bar.kv

[03:45] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Bar 3)␤»

[03:46] *** adu joined
[03:46] *** cdg left
[03:46] <BenGoldberg> m: my $m = enum Foo (Bar => 3); say $m.kv

[03:46] <camelia> rakudo-moar 2cf9b5: OUTPUT: «(Bar 3)␤»

[03:47] <BenGoldberg> m: enum Foo (Bar => 3); dd Foo;

[03:47] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Foo␤»

[03:47] <BenGoldberg> m: enum Foo (Bar => 3); dd Foo.WHAT;

[03:47] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Foo␤»

[03:47] <BenGoldberg> m: enum Foo (Bar => 3); dd Foo.Map;

[03:47] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Map.new(())␤»

[03:47] <BenGoldberg> m: enum Foo (Bar => 3); dd Foo.enums;

[03:47] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Map.new((:Bar(3)))␤»

[03:48] <BenGoldberg> m: class Baz { enum Foo (Bar => 3) }; dd Baz::Foo.enums;

[03:48] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Map.new((:Bar(3)))␤»

[03:48] <BenGoldberg> m: class Baz { enum Foo (Bar => 3) }; dd Baz.Bar;

[03:48] <camelia> rakudo-moar 2cf9b5: OUTPUT: «No such method 'Bar' for invocant of type 'Baz'␤  in block <unit> at <tmp> line 1␤␤»

[03:48] <BenGoldberg> m: class Baz { enum Foo (Bar => 3) }; dd Baz::Bar;

[03:48] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Foo::Bar␤»

[04:01] *** adu left
[04:03] *** mcmillhj joined
[04:09] *** mcmillhj left
[04:09] <BenGoldberg> m: my $foo; say $foo.?bar;

[04:09] <camelia> rakudo-moar 2cf9b5: OUTPUT: «Nil␤»

[04:09] <BenGoldberg> m: my $foo; say so $foo.?bar;

[04:09] <camelia> rakudo-moar 2cf9b5: OUTPUT: «False␤»

[04:11] <BenGoldberg> m: .return when 3;

[04:11] <camelia> rakudo-moar 2cf9b5: ( no output )

[04:11] <BenGoldberg> m: sub foo { .return when 3 }; say foo;

[04:11] <camelia> rakudo-moar 2cf9b5: OUTPUT: «()␤»

[04:11] <BenGoldberg> m: sub foo { return 4 when 3 }; say foo;

[04:11] <camelia> rakudo-moar 2cf9b5: OUTPUT: «()␤»

[04:13] <BenGoldberg> m: sub foo { return 4 with 3 }; say foo;

[04:13] <camelia> rakudo-moar 2cf9b5: OUTPUT: «4␤»

[04:13] <BenGoldberg> m: sub foo { .return with 3 }; say foo;

[04:13] <camelia> rakudo-moar 2cf9b5: OUTPUT: «3␤»

[04:13] <SmokeMachine> m: enum Bla (a => sub {}) # why its wrong?

[04:13] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot auto-generate a proto method for 'Int' in the setting␤at <tmp>:1␤»

[04:14] <SmokeMachine> m: enum Bla (a => {b => sub {}}) # but its ok?

[04:14] <camelia> rakudo-moar 2cf9b5: ( no output )

[04:14] <SmokeMachine> m: enum Bla (a => {b => sub {}}); say a.value<b>

[04:14] <camelia> rakudo-moar 2cf9b5: OUTPUT: «sub () { #`(Sub|61171832) ... }␤»

[04:14] <BenGoldberg> m: my %hash = (a => 'b'); sub foo { .return with %hash{^x}; 'naah' }; say foo('no');

[04:14] <camelia> rakudo-moar 2cf9b5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    x used at line 1␤␤»

[04:14] <BenGoldberg> m: my %hash = (a => 'b'); sub foo { .return with %hash{$^x}; 'naah' }; say foo('no');

[04:14] <camelia> rakudo-moar 2cf9b5: OUTPUT: «naah␤»

[04:15] <BenGoldberg> m: my %hash = (a => 'b'); sub foo { .return with %hash{$^x}; 'naah' }; say foo('a');

[04:15] <camelia> rakudo-moar 2cf9b5: OUTPUT: «b␤»

[04:15] <BenGoldberg> . o O (.return with is my new friend)

[04:16] <timotimo> i find it a bit difficult to figure out what your intention was with all these evals

[04:16] <timotimo> are you aware of private-messaging camelia?

[04:17] <BenGoldberg> Umm, oops?

[04:17] <BenGoldberg> Mostly figuring syntax out :)

[04:21] <timotimo> gotta get some sleep

[04:21] <timotimo> have a good one!

[04:21] <Geth> ¦ perl6.org/Getting-Involved-Community: f3446f2af6 | Cale++ | source/community/index.html

[04:21] <Geth> ¦ perl6.org/Getting-Involved-Community: Add "Getting Involved" Section

[04:21] <Geth> ¦ perl6.org/Getting-Involved-Community: 

[04:21] <Geth> ¦ perl6.org/Getting-Involved-Community: Looking for feedback on this addition. Think I covered the main areas

[04:21] <Geth> ¦ perl6.org/Getting-Involved-Community: review: https://github.com/perl6/perl6.org/commit/f3446f2af6

[04:21] <Geth> ¦ perl6.org: WildYorkies++ created pull request #77: Add "Getting Involved" Section

[04:21] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/pull/77

[04:22] *** wamba joined
[04:23] <MasterDuke> timotimo++ thanks for the debugging help

[04:24] <timotimo> thanks for the mild kick in the butt

[04:27] *** adu joined
[04:37] *** mcmillhj joined
[04:41] *** mcmillhj left
[04:52] *** adu left
[04:54] *** indexme joined
[04:55] *** mcmillhj joined
[04:58] *** Cabanoss- joined
[04:59] *** astj left
[04:59] *** astj joined
[04:59] *** astj left
[04:59] *** astj joined
[05:02] *** Cabanossi left
[05:02] *** Cabanoss- is now known as Cabanossi

[05:09] *** mcmillhj left
[05:10] *** mcmillhj joined
[05:12] *** xtreak left
[05:13] <BenGoldberg> m: my %hash; { temp %hash<foo> = 'bar' }; dd %hash; # is this intended behavior?

[05:13] <camelia> rakudo-moar 470736: OUTPUT: «Hash %hash = {:foo(Any)}␤»

[05:13] *** xtreak joined
[05:18] *** mcmillhj left
[05:22] *** indexme left
[05:29] *** eroux joined
[05:36] *** xtreak left
[05:39] <Geth> ¦ doc: 45a79315b3 | raiph++ | doc/Language/traps.pod6

[05:39] <Geth> ¦ doc: s/True/False/ in `# OUTPUT:` line

[05:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/45a79315b3

[05:39] *** xtreak joined
[05:52] *** j75_ joined
[06:00] *** rurban joined
[06:00] *** pyrimidi_ left
[06:00] *** pyrimidine joined
[06:04] <geekosaur> BenGoldberg, I don't think so. (And iirc older perl had that bug at one point too, with local...)

[06:05] *** rurban left
[06:06] <j75_> Any idea why I can't install perl 6 on one machine? Makefile:470: recipe for target 'CORE.setting.moarvm' failed http://paste.ubuntu.com/24100486/

[06:08] <sammers> hi #perl6

[06:10] <geekosaur> j75_, the lack of error message suggests to me the OOM killer got it

[06:10] <sammers> is this behavior for `constant` correct? When I run this in the repl, the second run doesn't run the sub...

[06:11] <sammers> m: my %subs = foo => -> $bar { say "Hello, $bar" }; say "1st run"; %subs<foo>.("bar"); constant foo = %subs<foo>; say "2nd run"; foo.("bar");

[06:11] <camelia> rakudo-moar 470736: OUTPUT: «1st run␤Hello, bar␤2nd run␤Cannot find method 'Any' on object of type Str␤  in block <unit> at <tmp> line 1␤␤»

[06:11] <sammers> m: my %subs = foo => -> $bar { say "low $bar" }; my %subs = foo => -> $bar { say "Hello, $bar" }; say "1st run"; %subs<foo>.("bar"); constant foo = %subs<foo>; say "2nd run"; foo.("bar");

[06:11] <camelia> rakudo-moar 470736: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol '%subs'␤    at <tmp>:1␤    ------> 3 => -> $bar { say "low $bar" }; my %subs7⏏5 = foo => -> $bar { say "Hello, $bar" };␤1st run␤Hello, bar␤2nd run␤Cannot find method 'Any' on object …»

[06:11] <sammers> sorry for the spam

[06:13] *** j75_ is now known as j75

[06:14] <j75> geekosaur: thanks, just checked dmesg I think you are right

[06:14] <geekosaur> sammers, "constant" operates at compile time, and %subs is empty then

[06:15] <sammers> ok, after creating %subs, then running "foo.("bar");" from a new repl line it works. 

[06:16] <geekosaur> right, that'd make sense for how the repl operates

[06:16] <sammers> ok, thanks

[06:17] <sammers> is there any way to do something like this and execute the code block assigned to %subs<foo> without using foo.()?

[06:17] <sammers> like, something that lets me use "foo: .." or just "foo $param"?

[06:21] *** risou is now known as risou_awy

[06:24] <geekosaur> m: BEGIN my %subs = foo => -> $bar { say "Hello, $bar" }; say "1st run"; %subs<foo>.("bar"); constant foo = %subs<foo>; say "2nd run"; foo.("bar");

[06:24] <camelia> rakudo-moar 470736: OUTPUT: «1st run␤Hello, bar␤2nd run␤Hello, bar␤»

[06:24] <geekosaur> but for the .() I think you may need to play with hacking CALL-ME into it :/

[06:25] *** risou_awy is now known as risou

[06:25] <sammers> hmm

[06:25] <BenGoldberg> m: sub foo ($bar) { say "low $bar" }; foo "param";

[06:25] <camelia> rakudo-moar 470736: OUTPUT: «low param␤»

[06:27] <BenGoldberg> It should be pretty easy to create a module with an import method, which takes a hash (your %subs), and then mucks with %CALLER so that perfectly ordinary subs are produced.

[06:28] <BenGoldberg> But, since it's late enough in my time zone that it's almost early, I've gotta go.

[06:28] *** BenGoldberg left
[06:28] <sammers> how do I send a note to another user again?

[06:30] <j75> [irc]  /msg  [-server <server>] <target>[,<target>...] <text>

[06:31] <geekosaur> or for yoleaux, .tell nick message

[06:31] <sammers> .tell BenGoldberg thanks, I will take a look into %CALLER

[06:31] <yoleaux> sammers: I'll pass your message to BenGoldberg.

[06:31] <sammers> ok, thanks

[06:32] *** kyan joined
[06:35] *** xtreak left
[06:35] *** eroux left
[06:36] *** xtreak joined
[06:38] *** Actualeyes left
[06:42] *** risou is now known as risou_awy

[06:50] *** RabidGravy joined
[06:55] *** wamba left
[06:56] *** n1ce_ is now known as n1ce

[06:56] *** n1ce left
[06:56] *** n1ce joined
[06:59] *** KDr2 left
[06:59] *** xtreak left
[07:02] *** xtreak joined
[07:06] *** Actualeyes joined
[07:10] *** KDr2 joined
[07:19] *** mcmillhj joined
[07:20] <RabidGravy> boom!

[07:22] *** kaare_ left
[07:22] *** kaare_ joined
[07:22] <RabidGravy> right off to the grindstone

[07:30] *** risou_awy is now known as risou

[07:32] <moritz> good morning

[07:33] *** llfourn left
[07:34] <moritz> so, I have a second poll; please help me select the "Perl 6 by Example" cover. Hopefully final round :-) https://en.99designs.de/contests/poll/juj7un

[07:36] *** llfourn joined
[07:39] *** cibs left
[07:40] *** domidumont joined
[07:41] *** cibs joined
[07:47] *** darutoko joined
[07:49] *** wamba joined
[07:50] <sammers> moritz, my wife likes 148

[07:52] <moritz> sammers: thanks. What about yourself?

[07:52] <sammers> me too, I voted for 148

[07:52] *** bjz joined
[07:53] * moritz also consulted his wife several times about the cover designs

[07:54] <sammers> actually, I like both

[07:54] *** robertle left
[07:54] <moritz> of the 148 design proposals I got, about 50 were above the "I'd be happy with that" level

[07:55] <moritz> and throwing out good designs was kinda hard, but I had to narrow it down

[07:55] <sammers> yeah, I liked several of the earlier ones too.

[08:00] *** ufobat joined
[08:02] *** mr-foobar left
[08:05] *** mr-foobar joined
[08:07] *** wamba left
[08:10] *** rurban joined
[08:14] *** mienaikage left
[08:14] *** ilmari[m] left
[08:14] *** Matthew[m] left
[08:14] *** M-Illandan left
[08:14] *** wictory[m] left
[08:14] *** dp[m] left
[08:14] *** tadzik left
[08:14] *** CIAvash[m] left
[08:14] *** unclechu left
[08:14] *** xui_nya[m] left
[08:18] *** xinming_ joined
[08:22] *** xinming left
[08:22] *** wictory[m] joined
[08:24] *** llfourn left
[08:36] *** zakharyas joined
[08:39] *** xtreak left
[08:40] *** xtreak joined
[08:41] *** TEttinger left
[08:50] *** dakkar joined
[08:52] *** KDr2 left
[08:59] *** xtreak left
[09:00] <DrForr> o/

[09:00] *** ZzZombo joined
[09:00] *** ZzZombo left
[09:00] *** ZzZombo joined
[09:05] *** astj left
[09:05] *** astj joined
[09:09] *** llfourn joined
[09:10] *** astj left
[09:11] *** mcmillhj left
[09:16] *** parv joined
[09:19] *** Possum left
[09:34] *** cibs left
[09:34] *** wamba joined
[09:35] *** tadzik joined
[09:35] *** M-Illandan joined
[09:35] *** dp[m] joined
[09:35] *** unclechu joined
[09:35] *** Matthew[m] joined
[09:35] *** ilmari[m] joined
[09:35] *** xui_nya[m] joined
[09:35] *** CIAvash[m] joined
[09:35] *** mienaikage joined
[09:36] *** cibs joined
[09:38] *** risou is now known as risou_awy

[09:43] *** xtreak joined
[09:48] *** pyrimidine left
[09:50] *** pyrimidine joined
[09:54] *** pyrimidine left
[10:07] *** wamba left
[10:08] *** astj joined
[10:09] *** mxco86 joined
[10:10] *** wamba joined
[10:26] *** risou_awy is now known as risou

[10:32] *** zakharyas left
[10:34] *** zakharyas joined
[10:34] *** xtreak left
[10:36] *** elaADnlxie joined
[10:40] *** parv left
[10:40] *** kurahaupo joined
[10:43] *** Possum joined
[10:43] *** risou is now known as risou_awy

[10:44] *** cyphase left
[10:47] *** cyphase joined
[10:52] *** bjz left
[10:55] *** mr-foobar left
[10:56] *** user9 left
[10:56] *** bjz joined
[10:59] *** user9 joined
[11:00] *** _28_ria left
[11:01] *** _28_ria joined
[11:04] *** labster left
[11:08] *** jonas1 joined
[11:08] *** mr-foobar joined
[11:13] *** pyrimidine joined
[11:16] *** _28_ria left
[11:18] *** _28_ria joined
[11:20] *** pyrimidine left
[11:21] *** brrt joined
[11:23] *** xtreak joined
[11:25] <IOninja> \o

[11:29] *** itaipu joined
[11:30] *** rurban left
[11:31] *** xtreak left
[11:42] *** spebern joined
[11:42] <DrForr> o/

[11:43] *** sena_kun joined
[11:46] *** bjz left
[11:48] <spebern> m: my %hash = key => "val"; say %hash<not_existing_key>;

[11:48] <camelia> rakudo-moar da9940: OUTPUT: «(Any)␤»

[11:49] <spebern> is this supposed to be like this?

[11:50] <IOninja> yes

[11:51] <spebern>  m: my %hash = key => "val"; say %hash<not_existing_key>.elems;

[11:51] <camelia> rakudo-moar da9940: OUTPUT: «1␤»

[11:51] <IOninja> Yeah, 1-el list with an Any in it.

[11:51] <IOninja> m: my %hash = key => "val"; say %hash<not_existing_key>:v.elems;

[11:51] <camelia> rakudo-moar da9940: OUTPUT: «0␤»

[11:51] <spebern> ok I was not expecting this

[11:51] <IOninja> And the Any is in there, 'cause hashes autovivify

[11:52] <IOninja> m: my %h; %h<foo><bar><ber> = 42; say %h

[11:52] <camelia> rakudo-moar da9940: OUTPUT: «{foo => {bar => {ber => 42}}}␤»

[11:52] <spebern> ok thanks :-)

[11:58] <lizmat> m: say Any.elems

[11:58] <camelia> rakudo-moar da9940: OUTPUT: «1␤»

[11:59] <lizmat> so not only for a non-existing key in a hash, but for every type object

[12:02] *** pyrimidine joined
[12:03] *** astj left
[12:07] *** itaipu left
[12:12] *** pyrimidine left
[12:13] *** spebern left
[12:15] <SmokeMachine> m: enum Bla (a => sub {}) # why its wrong?

[12:15] <camelia> rakudo-moar 659595: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot auto-generate a proto method for 'Int' in the setting␤at <tmp>:1␤»

[12:15] <SmokeMachine> m: enum Bla (a => {b => sub {}}) # this isn't

[12:15] <camelia> rakudo-moar 659595: ( no output )

[12:16] *** andrzejku joined
[12:19] <lizmat> SmokeMachine: looking

[12:19] <SmokeMachine> lizmat: shouldn't be wrong?

[12:19] <lizmat> don't think so

[12:21] <lizmat> m: enum Bla (a => Mu)  # other case

[12:21] <camelia> rakudo-moar 659595: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot auto-generate a proto method for 'kv' in the setting␤at <tmp>:1␤»

[12:21] <lizmat> SmokeMachine: please rakudobug it, will look at it later if nobody beats me to it

[12:22] <IOninja> Does the second one actually work or you simply aren't getting any errors. I recall there being a ticket on the topic

[12:23] *** spebern joined
[12:23] <SmokeMachine> m: enum Bla (a => {b => sub {}}); a.value<b>.say

[12:23] <camelia> rakudo-moar 659595: OUTPUT: «sub () { #`(Sub|47096384) ... }␤»

[12:23] *** lep-delete left
[12:23] <SmokeMachine> IOninja: ^^

[12:23] *** sena_kun left
[12:24] <SmokeMachine> lizmat: rakdobuging...

[12:24] <lizmat> afk for a while&

[12:25] *** wamba left
[12:26] <timotimo> lizmat: thanks for fixing the Binding exception message

[12:27] <timotimo> i wonder if we ought to look at all the other exceptions that are put into P6EX

[12:27] <SmokeMachine> m: enum Bla (a => class {})

[12:27] <camelia> rakudo-moar 659595: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot auto-generate a proto method for 'Int' in the setting␤at <tmp>:1␤»

[12:27] *** risou_awy is now known as risou

[12:28] *** lep-delete joined
[12:29] <SmokeMachine> Shouldn't the last one give the same error as the next one?

[12:29] <SmokeMachine> m: enum Bla (a => Nil)

[12:29] <camelia> rakudo-moar 659595: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Using a type object as a value for an enum not yet implemented. Sorry. ␤at <tmp>:1␤------> 3enum Bla (a => Nil)7⏏5<EOL>␤»

[12:31] <timotimo> nah, it just fails way earlier

[12:31] <timotimo> it is kind of strange that it appears, though

[12:35] *** cibs left
[12:37] *** cibs joined
[12:44] *** risou is now known as risou_awy

[12:47] *** lukaramu joined
[12:59] *** user9 left
[13:01] *** user9 joined
[13:04] *** pyrimidine joined
[13:09] *** pyrimidi_ joined
[13:09] *** pyrimidine left
[13:10] *** pyrimidine joined
[13:10] *** pyrimidi_ left
[13:24] <IOninja> SmokeMachine: turns out it's a known issue: https://rt.perl.org/Ticket/Display.html?id=130158#ticket-history

[13:24] <IOninja> And these are the ones I was thinking about https://rt.perl.org/Ticket/Display.html?id=130041#ticket-history https://rt.perl.org/Ticket/Display.html?id=130446#ticket-history 

[13:25] <SmokeMachine> IOninja: so that shouldn't work?

[13:25] *** Sound joined
[13:26] <IOninja> err... No comment on that. I'm saying there's already a ticket for it.

[13:27] *** astj joined
[13:29] *** drrho_ left
[13:30] *** drrho_ joined
[13:31] *** smls joined
[13:31] <smls> bisectable6: say [=>] (1, 2).Seq;

[13:31] <bisectable6> smls, Bisecting by exit code (old=2015.12 new=6595950). Old exit code: 0

[13:31] <bisectable6> smls, bisect log: https://gist.github.com/4e4a3cfd591978358e188efda98113fa

[13:31] <bisectable6> smls, (2017-03-02) https://github.com/rakudo/rakudo/commit/60a8f9e7151825bcd1d4ab829ef78bebc359cbdb

[13:33] <IOninja> m: say [=>] (1, 2).Seq;

[13:33] <camelia> rakudo-moar 659595: OUTPUT: «P6opaque: no such attribute '$!reified' in type List when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[13:33] *** lukaramu_ joined
[13:33] <IOninja> heh

[13:33] <smls> RT'd

[13:36] *** lukaramu left
[13:38] <smls> Occasionally running unit tests of my own code with Rakudo nom, seems to be paying off... :)

[13:38] *** wamba joined
[13:39] <IOninja> we should be doing it nightly with a bot :)

[13:43] <IOninja> m: use nqp; sub (+values) { nqp::getattr(values,List,'$!reified') }( ().Seq )

[13:43] <camelia> rakudo-moar 659595: OUTPUT: «P6opaque: no such attribute '$!reified' in type List when trying to get a value␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[13:43] <IOninja> The cause

[13:44] <IOninja> m: use nqp; sub (+@values) { nqp::getattr(@values,List,'$!reified') }( ().Seq )

[13:44] <camelia> rakudo-moar 659595: ( no output )

[13:44] <IOninja> tis not the same thing is it...

[13:44] * IOninja leaves it for expert eyes...

[13:47] *** cdg joined
[13:47] *** raschipi joined
[13:48] *** nightfrog is now known as culb

[13:52] *** kent\n left
[13:52] *** wamba left
[13:53] *** xfix left
[13:53] *** kent\n joined
[13:53] *** mcmillhj joined
[13:53] *** KDr2 joined
[13:54] *** xfix joined
[13:54] *** KDr2 left
[13:55] *** KDr2 joined
[13:55] *** wamba joined
[13:56] <IOninja> m: class Foo { method bar { say "bar" } }; class Bar { has $!bar handles 'bar' = Foo.new }; Bar.new.bar

[13:56] <camelia> rakudo-moar 659595: OUTPUT: «bar␤»

[13:56] <IOninja> hm... does it have to be an attribute? I just wanna say "Foo handles all the `bar` method calls"

[13:56] *** brrt left
[13:57] <IOninja> um... this design is weird.

[13:58] *** g0d355__ left
[13:58] <IOninja> April, 2016's Zoffix writes terrible Perl 6...

[13:58] <masak> m: class Foo { method bar { "bar" } }; class Bar is Foo {}; say Bar.new.bar

[13:58] <camelia> rakudo-moar 659595: OUTPUT: «bar␤»

[13:59] <masak> "Foo handles all the `bar` method calls" sounds a little bit like class inheritance to me...

[13:59] <IOninja> A bit.

[14:00] <IOninja> I didn't want all the methods though, but now I see they're included in this codebase anyway, so meh, inheritance it is!

[14:00] *** wamba left
[14:00] <jsimonet> m: "&now()"

[14:00] <camelia> rakudo-moar 659595: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    now used at line 1. Did you mean 'not', 'HOW'?␤␤»

[14:00] <IOninja> now is a term

[14:00] <IOninja> m: "{now}"

[14:00] <camelia> rakudo-moar 659595: ( no output )

[14:01] <IOninja> m: "{now}".say

[14:01] <camelia> rakudo-moar 659595: OUTPUT: «Instant:1488549698.179669␤»

[14:01] <jsimonet> m: sub foo() { 'plop' }; say "&foo()";

[14:01] <camelia> rakudo-moar 659595: OUTPUT: «plop␤»

[14:01] <IOninja> m: "&term:<now>()".say

[14:01] <camelia> rakudo-moar 659595: OUTPUT: «Instant:1488549710.507149␤»

[14:01] <jsimonet> Is this correct?

[14:01] <IOninja> Yes.

[14:01] <jsimonet> ok

[14:01] <jsimonet> thanks :)

[14:01] <IOninja> <IOninja> now is a term

[14:02] <jnthn> IOninja: I think you can handles Bar to say it should handle all methods defined in Bar

[14:03] <IOninja> Cool.

[14:04] *** brrt joined
[14:04] *** pyrimidine left
[14:06] *** brrt left
[14:09] *** smls_ joined
[14:10] *** smls left
[14:10] <IOninja> m: sub (Str :$id) {}()

[14:10] <camelia> rakudo-moar 659595: ( no output )

[14:10] <IOninja> m: sub (Str(Cool) :$id) {}()

[14:10] <camelia> rakudo-moar 659595: OUTPUT: «Use of uninitialized value of type Cool in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in sub  at <tmp> line 1␤»

[14:10] <IOninja> m: sub (Str:D(Cool) :$id) {}()

[14:10] <camelia> rakudo-moar 659595: OUTPUT: «Parameter '$id' requires an instance of type Str, but a type object was passed.  Did you forget a .new?␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:10] <IOninja> :(

[14:10] <IOninja> Well, last one is lame, but at least understandable....

[14:11] * IOninja sweeps the problem under the rug with `= ''`

[14:14] *** smls_ left
[14:16] *** skids joined
[14:16] *** pyrimidine joined
[14:18] <raschipi> m: say sub (Str:D(Cool) :$id = '') {}()

[14:18] <camelia> rakudo-moar 659595: OUTPUT: «Nil␤»

[14:20] <raschipi> m: say sub (Str:D(Cool) :$id = '') {$id}(id => 42)

[14:20] <camelia> rakudo-moar 659595: OUTPUT: «Type check failed in binding to '$id'; expected Str but got Int (42)␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:21] <raschipi> m: say sub (Str:D(Cool) :$id = '') {$id}(id => '42')

[14:21] <camelia> rakudo-moar 659595: OUTPUT: «42␤»

[14:21] *** pyrimidine left
[14:23] <IOninja> Twitter.pm6 can now send direct messages \o/

[14:24] <IOninja> Sucks that you don't get notifications for DMs received from yourself :/

[14:26] <IOninja> Gonna make a bot that proxies IRC messages addressed to me to my Twitter. This way I won't have to ever read IRC, but still get notifications if someone tells me something :)

[14:26] <raschipi> IOninja: if you aren't on IRC, you don't exist

[14:27] * IOninja is fine with that

[14:28] *** risou_awy is now known as risou

[14:30] *** imcsk8 left
[14:30] <timotimo> existing is way too much hassle

[14:31] *** imcsk8 joined
[14:33] *** vendethiel left
[14:35] *** Sound left
[14:36] *** pmurias joined
[14:36] *** ggoebel left
[14:39] *** zakharyas left
[14:41] * masak is happily surprised to find https://tio.run/nexus/perl6

[14:43] <timotimo> what's the "header" and "footer" thing about?

[14:45] <masak> no idea

[14:46] *** risou is now known as risou_awy

[14:47] *** solarbunny left
[14:50] *** zakharyas joined
[14:53] <moritz> looks to be simply code that's concatenated to the "code" input field

[14:53] <moritz> if I define a variable in the header, I can access it in the footer

[14:53] <moritz> no idea why one needs separate input fields for that though

[14:53] <IOninja> likely for markup

[14:54] <IOninja> I assume Perl 6 isn't the only language on the site.

[14:54] <moritz> maybe to be able to collapse parts you don't want to show

[14:54] *** lkm joined
[14:54] <timotimo> fair enough

[14:54] *** lkm left
[14:57] *** pyrimidine joined
[14:58] *** risou_awy is now known as risou

[14:59] <Geth> ¦ perl6.org/Getting-Involved-Community: 9ec4d48c00 | Cale++ | source/community/index.html

[14:59] <Geth> ¦ perl6.org/Getting-Involved-Community: Update index.html

[14:59] <Geth> ¦ perl6.org/Getting-Involved-Community: review: https://github.com/perl6/perl6.org/commit/9ec4d48c00

[15:01] <Geth> ¦ perl6.org: f3446f2af6 | Cale++ | source/community/index.html

[15:01] <Geth> ¦ perl6.org: Add "Getting Involved" Section

[15:01] <Geth> ¦ perl6.org: 

[15:01] <Geth> ¦ perl6.org: Looking for feedback on this addition. Think I covered the main areas

[15:01] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/f3446f2af6

[15:01] <Geth> ¦ perl6.org: 9ec4d48c00 | Cale++ | source/community/index.html

[15:01] <Geth> ¦ perl6.org: Update index.html

[15:01] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/9ec4d48c00

[15:01] <Geth> ¦ perl6.org: 04b9e32461 | (Zoffix Znet)++ | source/community/index.html

[15:01] <Geth> ¦ perl6.org: Merge pull request #77 from perl6/Getting-Involved-Community

[15:01] <Geth> ¦ perl6.org: 

[15:01] <Geth> ¦ perl6.org: Add "Getting Involved" Section

[15:01] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/04b9e32461

[15:02] <Geth> ¦ perl6.org: 8b0dfdd8c3 | (Zoffix Znet)++ | source/community/index.html

[15:02] <Geth> ¦ perl6.org: s/newcomers// in "I already know the language" section

[15:02] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/8b0dfdd8c3

[15:04] *** KDr2 left
[15:06] *** rurban joined
[15:08] *** ggoebel joined
[15:11] *** rurban left
[15:13] *** elaADnlx` joined
[15:16] <SmokeMachine> IOninja: but the ticket says LTA error message...

[15:17] <IOninja> m: class { has Str:D $.foo }.new: :foo<foo>

[15:17] <camelia> rakudo-moar 659595: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable definition of type Str:D requires an initializer␤at <tmp>:1␤------> 3class { has Str:D $.foo 7⏏5}.new: :foo<foo>␤»

[15:17] *** elaADnlxie left
[15:17] <IOninja> Seriously? -_-

[15:21] <IOninja> Default constructor for 'ZofBot::Plugin::Twitter' only takes named arguments xx 100

[15:21] <IOninja> Die in a fire!

[15:22] <IOninja> m: sub x { %(:42foo, :43bar) }; class {}.new: |(x<foo bar>:p)

[15:22] <camelia> rakudo-moar 659595: OUTPUT: «Default constructor for '<anon|70104960>' only takes named arguments␤  in block <unit> at <tmp> line 1␤␤»

[15:22] <IOninja> What's its problem?

[15:23] <IOninja> m: sub x { %(:42foo, :43bar) }; class { has $.foo; has $.bar; method x { dd [$!foo, $!bar ] }}.new(|(%(x<foo bar>:p))).x

[15:23] <camelia> rakudo-moar 659595: OUTPUT: «[42, 43]␤»

[15:23] <jnthn> :p returns a list of pairs

[15:23] <jnthn> Try |%(x<foo bar>:p)

[15:24] *** pecastro left
[15:24] <IOninja> Thanks.

[15:26] <timotimo> we need to build a slang that accepts FACE WITH STUCK-OUT TONGUE instead of :p  -  😛

[15:26] <timotimo> (doesn't show up in my terminal)

[15:26] <IOninja> heh

[15:30] *** wamba joined
[15:33] *** itaipu joined
[15:40] *** pecastro joined
[15:42] *** Khisanth left
[15:43] <IOninja> m: class { has SetHash $.x .= new: 42 }.new.x.say

[15:43] <camelia> rakudo-moar 8eebf0: OUTPUT: «SetHash.new(42)␤»

[15:43] <IOninja> m: class { has SetHash:D $.x .= new: 42 }.new.x.say

[15:43] <camelia> rakudo-moar 8eebf0: OUTPUT: «===SORRY!===␤Could not locate compile-time value for symbol SetHash:D␤»

[15:43] <IOninja> hehehe

[15:43] <IOninja> tis the same bug as the `::` in names with `.new`

[15:47] <IOninja> This one: https://github.com/rakudo/rakudo/commit/700a07747a3973c713a352cd165f6dd9dac0f698

[15:47] <IOninja> though no idea how to make it handle type smileys

[15:47] * IOninja stashes this one for a rainy day...

[15:48] <jnthn> We'd need to spot it's a concreteness type and pull out hte real type to do the .new on

[15:49] <jnthn> Though I'm curious why we're ever using the string there

[15:49] <jnthn> Feels a bit odd, since we should be letting type parsing make an AST with the right kinda thing, I'd hope

[15:50] *** cschwenz joined
[15:51] <IOninja> m: class { has $!foo = 42; subset Meows where $!foo; }

[15:51] <camelia> rakudo-moar 8eebf0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable $!foo used where no 'self' is available␤at <tmp>:1␤------> 3has $!foo = 42; subset Meows where $!foo7⏏5; }␤»

[15:51] <cschwenz> so, for META6 files… is the file suffix .json or .info ?

[15:51] <IOninja> Bummer... Any way around this? I want a subset to use class's attribute

[15:51] <IOninja> cschwenz: META6.json

[15:51] <cschwenz> IOninja++

[15:51] <cschwenz> thanks

[15:54] <IOninja> m: class { has $!foo = 42; submethod BUILD { our subset Meows where -> $f { sub ($e) { $e ~~ $f } }($!foo); }; method mew ($v) { say $v ~~ Meows } }.new.mew: 42

[15:54] <camelia> rakudo-moar 8eebf0: OUTPUT: «Cannot look up attributes in a VMNull type object␤  in method mew at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:55] <IOninja> m: class { has $!foo = 42; submethod BUILD { my $x = $!foo; our subset Meows where $x; }; method mew ($v) { say $v ~~ Meows } }.new.mew: 42

[15:55] <camelia> rakudo-moar 8eebf0: OUTPUT: «True␤»

[15:55] <IOninja> yey

[15:55] *** pyrimidine left
[15:55] *** Khisanth joined
[15:56] *** pyrimidine joined
[15:58] <jnthn> That seems...a bit dangerous 

[15:59] <jnthn> Also I don't think it's doing what you think it is :)

[15:59] <jnthn> m: class { has $!foo = 42; submethod BUILD { my $x = $!foo; our subset Meows where $x; }; method mew ($v) { say $v ~~ Meows } }.new.mew: 43

[15:59] <camelia> rakudo-moar 8eebf0: OUTPUT: «True␤»

[15:59] <jnthn> Thought so...

[16:00] <IOninja> aww :(

[16:00] <jnthn> At the time $!foo is read in BUILD it hasn't been initialized

[16:00] <jnthn> So $x contains the Any type object

[16:00] <jnthn> And so it's doing 42 ~~ Any

[16:01] <jnthn> Also even if a binding were used, it'd still be referring to the attribute of the latest instance of the object

[16:01] *** pyrimidine left
[16:01] <IOninja> m: class { has $!foo = 42; submethod TWEAK { dd $!foo; my $x = $!foo; dd $x; our subset Meows where $x; }; method mew ($v) { say $v ~~ Meows } }.new.mew: 428

[16:01] <camelia> rakudo-moar 8eebf0: OUTPUT: «Int $!foo = 42␤Int $x = 42␤True␤»

[16:01] <IOninja> What about this one? Seem it's initialized

[16:02] <IOninja> m: class { has $!foo = 42; submethod TWEAK { dd $!foo; my $x = $!foo; dd $x; our subset Meows where * == $x; }; method mew ($v) { say $v ~~ Meows } }.new.mew: 428

[16:02] <camelia> rakudo-moar 8eebf0: OUTPUT: «Int $!foo = 42␤Int $x = 42␤Use of uninitialized value of type Any in numeric context␤  in whatevercode  at <tmp> line 1␤False␤»

[16:02] <IOninja> hmmm

[16:02] <jnthn> Same lifetime problem though

[16:02] <IOninja> OK

[16:02] <jnthn> There's no good way to do it

[16:02] <jnthn> Short of method foo($*SELF:) { ... }

[16:02] <jnthn> And then subset Blah where { $*SELF.foo == 42 } or so

[16:03] <jnthn> Which I'm not sure if counts as "good"

[16:03] <IOninja> :)

[16:10] *** itaipu left
[16:15] <IOninja> m: class { my SetHash $x .= new: <foo>; subset Foo where .uc ∈ $x; method x { say 'foo' ~~ Foo } }.new.x

[16:15] <camelia> rakudo-moar 8eebf0: OUTPUT: «Invocant requires an instance of type SetHash, but a type object was passed.  Did you forget a .new?␤  in method x at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:15] <IOninja> m: class { my SetHash $x .= new: <foo>; subset Foo where {.uc ∈ $x}; method x { say 'foo' ~~ Foo } }.new.x

[16:15] <camelia> rakudo-moar 8eebf0: OUTPUT: «False␤»

[16:15] <IOninja> Supposed to be like that or is it a thunking issue? (the difference between the two is the explicit block on `where`)

[16:16] *** itaipu joined
[16:18] <jnthn> Not sure why the first one failed

[16:18] <IOninja> m: 'x'.uc ∈ SetHash

[16:18] <camelia> rakudo-moar 8eebf0: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "∈" in expression ".uc ∈ SetHash" in sink context (line 1)␤Invocant requires an instance of type SetHash, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[16:18] <IOninja> Looks like in that version $x is not initialized

[16:25] *** indexme joined
[16:31] <raschipi> How is this use of a colon called: "my SetHash $x .= new: <foo>;"?

[16:31] *** ZofBot joined
[16:31] *** ChanServ sets mode: +v ZofBot

[16:32] <IOninja> ¯\_(ツ)_/¯ just a normal method call

[16:32] *** Meows joined
[16:32] <Meows> Check it out....

[16:32] <raschipi> I searched for it in the subroutine and method invocation pages and can't find documetation for this form.

[16:32] <Meows> I heard Zoffix is aweome!

[16:33] <Meows> Yup, and IOninja is cool too

[16:33] <IOninja> \o\/

[16:33] *** cschwenz left
[16:33] <Meows> Zoffix Zoffix Zoffix Zoffix

[16:33] *** Meows left
[16:33] <timotimo> what's that all about %)

[16:33] <timotimo> is that your twitter-irc-bridge or something?

[16:33] <moritz> performance art?

[16:34] <IOninja> wait for it...

[16:34] <IOninja> My direct messages on Twitter: http://i.imgur.com/GUt5YF5.png

[16:34] <IOninja> :)

[16:35] <timotimo> useful

[16:35] <IOninja> The bot relayed my mentions to twitter, and did not relay the last message because it saw me speak :D

[16:37] <IOninja> All in just 60 lines of Perl 6 code: https://github.com/zoffixznet/perl6-ZofBot/blob/master/lib/ZofBot/Plugin/Twitter.pm6

[16:41] *** itaipu left
[16:43] <IOninja> raschipi: well, it's $foo.bar: <some args>; But we have the meta-assign op; in other languages you may seen it as $x += 42, which is the same as $x = $x + 42; We extended that metaphore to all operators, so you $x .= foo: <some args> is the same as $x = $x.foo: <some args>; (which is same as $x = $x.foo(<some args>)

[16:44] <raschipi> I know how it works, I understood the code. But I got it from code examples and wanted to see the docs for it. Can't find it.

[16:44] *** ZzZombo left
[16:49] <IOninja> Ah. No idea where that may be documented.

[16:50] *** pyrimidine joined
[16:52] <IOninja> There's a blurb here: https://docs.perl6.org/routine/$FULL_STOP$EQUALS_SIGN

[16:52] <raschipi> That part I had seen, I want the colon list part.

[16:53] *** zakharyas left
[16:53] *** domidumont left
[16:57] <IOninja> m:  say { $:add ?? $^a + $^b !! $^a - $^b }( 4, 5 ) :!add

[16:57] <camelia> rakudo-moar 8eebf0: OUTPUT: «-1␤»

[16:57] <IOninja> TIL you can specify named args outside the parens :o

[16:58] <raschipi> m:  say { $:add ?? $^a + $^b !! $^a - $^b }( 4, 5 )

[16:58] <camelia> rakudo-moar 8eebf0: OUTPUT: «Required named parameter 'add' not passed␤  in block <unit> at <tmp> line 1␤␤»

[16:59] <raschipi> m:  say { $:add ?? $^a + $^b !! $^a - $^b }( 4, 5 ) :add

[16:59] <camelia> rakudo-moar 8eebf0: OUTPUT: «9␤»

[16:59] <raschipi> Like an adverb.

[17:00] *** pyrimidine left
[17:00] *** elaADnlx` is now known as elaADnlxie

[17:01] *** pyrimidine joined
[17:01] <IOninja> m: say {[~] $:foo, $:bar, $:ber }() :foo :!bar :ber<meows>

[17:01] <camelia> rakudo-moar 8eebf0: OUTPUT: «TrueFalsemeows␤»

[17:02] <IOninja> The $: twigil would be a lot more useful if you could somehow use it in, say, a for loop

[17:03] *** mcmillhj left
[17:03] <IOninja> m: my %h = :42a, :72b; for %h.pairs { say $:key, $:value }

[17:03] <camelia> rakudo-moar 8eebf0: OUTPUT: «Too many positionals passed; expected 0 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[17:03] <IOninja> like something like this

[17:03] *** Actualeyes left
[17:04] *** mcmillhj joined
[17:05] *** pyrimidine left
[17:05] *** khw joined
[17:06] <raschipi> So it should assume that $:key is .key?

[17:07] <IOninja> No, the issue lies in unpacking

[17:07] <IOninja> m: my %h = :42a, :72b; for %h.pairs -> (:$key, :$value) { say $key, $value }

[17:07] <camelia> rakudo-moar 8eebf0: OUTPUT: «a42␤b72␤»

[17:07] <IOninja> and if it unpacked the 1 thing given to it to named args, the $:key, $:value would wokr

[17:07] <raschipi> m:  say { $:add? ?? $^a + $^b !! $^a - $^b }( 4, 5 )

[17:07] <camelia> rakudo-moar 8eebf0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus postfix␤at <tmp>:1␤------> 3say { $:add7⏏5? ?? $^a + $^b !! $^a - $^b }( 4, 5 )␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement m…»

[17:09] <IOninja> Something like `my %h = :42a, :72b; for %h.pairs ---> { say $:key, $:value }` to mean call it as `for { {}(|$_) }`

[17:09] <raschipi> I see

[17:09] *** mcmillhj left
[17:09] *** pyrimidine joined
[17:09] *** ufobat left
[17:10] *** mcmillhj joined
[17:10] <IOninja> Which can be generalized to signature thingie on all callables that would know to slip the given argument, so instead of doing |(blah blah) on each call, you'd specify it once in the signature.

[17:11] <IOninja> Or maybe not, since we can do slurpies right now \o/

[17:11] <IOninja> So just $:foo is something I'm yet to use in real code :)

[17:15] *** mcmillhj left
[17:16] *** araraloren joined
[17:17] *** xzhao joined
[17:22] *** ZofBot left
[17:22] *** ZofBot joined
[17:22] *** ChanServ sets mode: +v ZofBot

[17:24] *** pyrimidine left
[17:24] *** pyrimidine joined
[17:24] <IOninja> Well, the relay bot is done. The long weekend has almost stared...

[17:25] * IOninja disappears into the shadows to do IO ninjaing...

[17:25] <IOninja> *started :)

[17:28] <timotimo> cool

[17:29] *** pyrimidine left
[17:30] *** mcmillhj joined
[17:34] <elaADnlxie> ZofBot: relay bot?

[17:35] *** Kaffe left
[17:35] *** [particle] joined
[17:35] *** mcmillhj left
[17:35] *** Kaffe joined
[17:36] *** d4l3k_ joined
[17:36] *** ChanServ sets mode: +v d4l3k_

[17:37] *** kst` joined
[17:38] *** Some-body_ joined
[17:38] *** mindos_ joined
[17:40] *** integral_ joined
[17:40] *** integral_ left
[17:40] *** integral_ joined
[17:40] *** domidumont joined
[17:41] *** moritz_ joined
[17:41] *** rurban joined
[17:42] *** indexme left
[17:42] *** jsimonet1 joined
[17:42] *** dp[m]1 joined
[17:42] *** abruanese_ joined
[17:42] *** gabiruh_ joined
[17:43] *** dp[m] left
[17:43] *** dalek left
[17:43] *** DarthGandalf left
[17:43] *** gabiruh left
[17:43] *** [particle]1 left
[17:43] *** mindos left
[17:43] *** jsimonet left
[17:43] *** camelia left
[17:43] *** Undercover left
[17:43] *** SourceBaby left
[17:43] *** synopsebot6 left
[17:43] *** kst left
[17:43] *** integral left
[17:43] *** salparadise left
[17:43] *** abruanese left
[17:43] *** moritz left
[17:43] *** Some-body_ is now known as DarthGandalf

[17:43] *** mcmillhj joined
[17:43] *** d4l3k_ is now known as dalek

[17:43] *** mindos_ is now known as mindos

[17:43] <araraloren> ~~ O_O

[17:43] *** camelia joined
[17:43] *** salparadise joined
[17:44] *** abruanese_ is now known as abruanese

[17:44] *** dakkar left
[17:45] *** ChanServ sets mode: +v camelia

[17:45] *** xzhao left
[17:48] *** mcmillhj left
[17:49] *** moritz_ left
[17:50] *** moritz joined
[17:52] *** mcmillhj joined
[17:56] *** pyrimidine joined
[17:57] *** mcmillhj left
[17:59] *** mcmillhj joined
[18:01] <Geth> ¦ perl6.org: 99947e7e36 | Cale++ | source/community/index.html

[18:01] <Geth> ¦ perl6.org: Edit hack on compiler text

[18:01] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/99947e7e36

[18:04] *** telex left
[18:05] *** Sound joined
[18:05] *** telex joined
[18:09] *** SourceBaby joined
[18:09] *** ChanServ sets mode: +v SourceBaby

[18:09] *** Undercover joined
[18:09] *** ChanServ sets mode: +v Undercover

[18:10] *** cognominal joined
[18:10] *** cog__ left
[18:13] *** astj left
[18:34] *** spebern left
[18:35] *** astj joined
[18:37] *** rurban1 joined
[18:38] *** rurban left
[18:39] *** astj left
[18:43] <RabidGravy> Boo!

[18:44] *** rurban1 left
[18:44] *** rurban joined
[18:47] *** rurban1 joined
[18:48] *** rurban left
[18:49] *** espadrine joined
[18:50] *** araraloren left
[18:51] *** cibs left
[18:51] *** agentzh left
[18:52] *** cibs joined
[18:58] *** cdg left
[18:59] *** rurban1 left
[19:00] <IOninja> elaADnlxie: ZofBot DMs me on Twitter when people mention me on IRC while I'm away. So I don't need to backlog :)

[19:06] *** zakharyas joined
[19:08] *** hankache joined
[19:10] <hankache> hoal #perl6

[19:10] <hankache> hola*

[19:10] *** rurban joined
[19:19] <RabidGravy> erp

[19:19] *** darutoko left
[19:21] *** TEttinger joined
[19:22] *** risou is now known as risou_awy

[19:24] *** agentzh joined
[19:25] *** rurban left
[19:31] *** risou_awy is now known as risou

[19:32] *** risou is now known as risou_awy

[19:36] *** wamba left
[19:38] <b2gills> .tell moritz the header and footer fields on TIO.run are for Code Golfs where the entry is a function or a snippet, see the "Try it" link at http://codegolf.stackexchange.com/a/110377/1147

[19:38] <yoleaux> b2gills: I'll pass your message to moritz.

[19:42] <IOninja> m: '...'.encode.bytes.say

[19:42] <camelia> rakudo-moar 8eebf0: OUTPUT: «3␤»

[19:42] <IOninja> m: '…'.encode.bytes.say

[19:42] <camelia> rakudo-moar 8eebf0: OUTPUT: «3␤»

[19:43] <IOninja> wow, that Brachylog entry looks mental...

[19:48] *** risou_awy is now known as risou

[19:50] *** rurban joined
[19:52] <Geth> ¦ doc/py-nutshell: fc5555b940 | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[19:52] <Geth> ¦ doc/py-nutshell: py-nutshell

[19:52] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/fc5555b940

[19:56] <IOninja> fancy

[19:56] *** RabidGravy left
[19:57] *** Arckazur joined
[19:57] *** labster joined
[19:59] *** rurban1 joined
[19:59] *** RabidGravy joined
[20:00] *** rurban left
[20:01] <moritz> \o

[20:01] <yoleaux> 19:38Z <b2gills> moritz: the header and footer fields on TIO.run are for Code Golfs where the entry is a function or a snippet, see the "Try it" link at http://codegolf.stackexchange.com/a/110377/1147

[20:01] *** ggoebel left
[20:03] *** zakharyas left
[20:04] *** risou is now known as risou_awy

[20:08] <Geth> ¦ doc/py-nutshell: 865fdcf7b5 | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[20:08] <Geth> ¦ doc/py-nutshell: put

[20:08] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/865fdcf7b5

[20:09] * IOninja finishes spamming commit comments...

[20:09] *** bjz joined
[20:11] *** pyrimidine left
[20:12] *** pyrimidine joined
[20:12] <raschipi> Are Python devs still wanting to remove the few funtional features they have?

[20:14] <IOninja> Ask in #python?

[20:15] <raschipi> Don't want to start a flamewar.

[20:16] *** pyrimidine left
[20:17] <Geth> ¦ doc/py-nutshell: 347c99e3bb | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[20:17] <Geth> ¦ doc/py-nutshell: replace i with x

[20:17] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/347c99e3bb

[20:20] <elaADnlxie> raschipi: what do you mean by still? They moved them to some includable package or something, but it was a long time ago

[20:20] <raschipi> I see, thanks. I knew someone here would know.

[20:20] <IOninja> m: q♥{({$/ if is-prime $/=2**++$*++$-1}…*.comb>$^k).min:{abs $k-.comb}}♥.encode.bytes.say

[20:20] <camelia> rakudo-moar 8eebf0: OUTPUT: «68␤»

[20:20] *** risou_awy is now known as risou

[20:20] <IOninja> b2gills: ^ can shave off 3 chars by using .comb instead of .chars and using $^k instead of pointy block

[20:22] *** domidumont left
[20:29] *** robertle joined
[20:31] *** xzhao joined
[20:31] *** xzhao left
[20:33] *** bjz_ joined
[20:35] *** bjz left
[20:36] *** Arckazur left
[20:38] <Geth> ¦ doc/py-nutshell: b5f4caf034 | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[20:38] <Geth> ¦ doc/py-nutshell: whatever code for lambdas

[20:38] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/b5f4caf034

[20:39] *** adu joined
[20:40] <IOninja> \o/

[20:40] <IOninja> bduggan++

[20:40] *** adu left
[20:41] *** labster left
[20:43] *** labster joined
[20:44] <b2gills> Both of those are things I usually try, I must have been tired and didn't bother

[20:45] *** rurban1 left
[20:46] *** hankache left
[20:48] *** risou is now known as risou_awy

[20:48] *** lichtkind__ joined
[20:52] *** lichtkind_ left
[20:52] *** risou_awy is now known as risou

[20:56] *** rindolf left
[20:58] *** raschipi left
[21:00] <Geth> ¦ perl6-most-wanted: c039c4934f | (Brad Clawsie)++ | most-wanted/modules.md

[21:00] <Geth> ¦ perl6-most-wanted: mention HTTP2

[21:00] <Geth> ¦ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/c039c4934f

[21:00] <elaADnlxie> IOninja: hm, I wonder, how can have some generic exception handling when using IRC::Client? That is, I want to do something different here: https://github.com/zoffixznet/perl6-IRC-Client/blob/master/lib/IRC/Client.pm6#L301

[21:03] <Geth> ¦ doc/py-nutshell: a6f804bbb3 | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[21:03] <Geth> ¦ doc/py-nutshell: use x²

[21:03] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/a6f804bbb3

[21:05] *** Sound left
[21:07] *** agentzh left
[21:08] <elaADnlxie> By the way, perhaps somebody wants to write something here: http://stackoverflow.com/questions/1416215

[21:08] <Geth> ¦ doc/py-nutshell: f01ba07387 | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[21:08] <Geth> ¦ doc/py-nutshell: added more idiomatic named parameters

[21:08] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/f01ba07387

[21:09] *** risou is now known as risou_awy

[21:12] *** cdg joined
[21:15] <Geth> ¦ doc/py-nutshell: 32b3be421f | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[21:15] <Geth> ¦ doc/py-nutshell: off by 1

[21:15] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/32b3be421f

[21:18] *** risou_awy is now known as risou

[21:20] <lizmat> elaADnlxie: I wrote something

[21:20] *** rurban joined
[21:20] <IOninja> elaADnlxie: none ATM; would need to add code

[21:21] <Geth> ¦ doc/py-nutshell: 032a15e1df | (Brian Duggan)++ | doc/Language/py-nutshell.pod6

[21:21] <Geth> ¦ doc/py-nutshell: blocks vs subroutines

[21:21] <Geth> ¦ doc/py-nutshell: review: https://github.com/perl6/doc/commit/032a15e1df

[21:21] <IOninja> prolly an attribute on IRC::Client that takes a Callable that gets called from that default block

[21:21] * IOninja &

[21:22] <moritz> nine: does Inline::Python have any python 3 support?

[21:23] *** SCHAAP137 left
[21:27] <elaADnlxie> lizmat++

[21:28] *** SCHAAP137 joined
[21:28] *** ufobat joined
[21:29] *** mcmillhj left
[21:31] *** pyrimidine joined
[21:35] *** travis-ci joined
[21:35] <travis-ci> Doc build failed. Brian Duggan 'py-nutshell'

[21:35] <travis-ci> https://travis-ci.org/perl6/doc/builds/207484960 https://github.com/perl6/doc/commit/fc5555b940bc

[21:35] *** travis-ci left
[21:35] *** pyrimidine left
[21:36] <lizmat> elaADnlxie: hmmm... that was a 7 year old question, I just realized  :-)

[21:36] *** bjz joined
[21:37] *** bjz_ left
[21:38] <elaADnlxie> lizmat: yes, but that's what comes up on the first page of google

[21:39] *** rurban1 joined
[21:40] <lizmat> elaADnlxie: ah, good point  :-)

[21:41] *** rurban left
[21:42] <b2gills> lizmat: do you mind if I changed the links to the markdown equivalent of L<general overview|http:…>

[21:42] <lizmat> you can ?

[21:43] <lizmat> please go ahead  :-)

[21:43] *** ggoebel joined
[21:49] *** travis-ci joined
[21:49] <travis-ci> Doc build failed. Brian Duggan 'put'

[21:49] <travis-ci> https://travis-ci.org/perl6/doc/builds/207489473 https://github.com/perl6/doc/compare/fc5555b940bc...865fdcf7b587

[21:49] *** travis-ci left
[21:50] *** bjz left
[21:51] *** jonas1 left
[21:52] *** risou is now known as risou_awy

[21:53] <b2gills> lizmat: like this https://stackoverflow.com/posts/42588603/revisions

[21:53] <lizmat> :-)

[21:54] <b2gills> You can also do it [like this](http://example.com), but it makes it harder to find all the links to edit them in larger posts

[21:55] <b2gills> That is one of the main features that Markdown has that I feel that POD is lacking

[21:55] *** agentzh joined
[21:55] *** mcmillhj joined
[21:55] <b2gills> being able to group the links at the end

[21:55] <Geth> ¦ ecosystem: ufobat++ created pull request #301: Adding XML::Rabbit

[21:55] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/301

[21:57] *** travis-ci joined
[21:57] <travis-ci> Doc build failed. Brian Duggan 'replace i with x'

[21:57] <travis-ci> https://travis-ci.org/perl6/doc/builds/207491982 https://github.com/perl6/doc/compare/865fdcf7b587...347c99e3bbb5

[21:57] *** travis-ci left
[22:00] *** skids left
[22:00] *** mcmillhj left
[22:00] *** mcsnolte joined
[22:00] *** skids joined
[22:01] *** mr-foobar left
[22:02] *** mcmillhj joined
[22:08] *** pyrimidine joined
[22:08] *** risou_awy is now known as risou

[22:09] *** mcmillhj left
[22:10] *** skids left
[22:13] *** ttkp6 joined
[22:13] *** pyrimidine left
[22:16] *** RabidGravy left
[22:20] *** travis-ci joined
[22:20] <travis-ci> Doc build failed. Brian Duggan 'whatever code for lambdas'

[22:20] <travis-ci> https://travis-ci.org/perl6/doc/builds/207498627 https://github.com/perl6/doc/compare/347c99e3bbb5...b5f4caf034ec

[22:20] *** travis-ci left
[22:20] *** mcmillhj joined
[22:25] *** mcmillhj left
[22:28] *** evalable6 left
[22:28] <Geth> ¦ ecosystem: a1950e0dd5 | (Martin Barth)++ | META.list

[22:28] <Geth> ¦ ecosystem: Adding XML::Rabbit

[22:28] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a1950e0dd5

[22:28] <Geth> ¦ ecosystem: a2bfcf40cf | (Martin Barth)++ | META.list

[22:28] <Geth> ¦ ecosystem: Merge pull request #301 from ufobat/patch-3

[22:28] <Geth> ¦ ecosystem: 

[22:28] <Geth> ¦ ecosystem: Adding XML::Rabbit

[22:28] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a2bfcf40cf

[22:29] *** robertle left
[22:29] <ufobat> thanks zoffix :)

[22:29] <IOninja> np

[22:31] *** alphah left
[22:39] *** Voldenet left
[22:40] *** risou is now known as risou_awy

[22:43] *** risou_awy is now known as risou

[22:44] *** Voldenet joined
[22:44] *** Voldenet left
[22:44] *** Voldenet joined
[22:44] *** mcmillhj joined
[22:49] *** mcmillhj left
[22:51] *** travis-ci joined
[22:51] <travis-ci> Doc build failed. Brian Duggan 'use x²'

[22:51] <travis-ci> https://travis-ci.org/perl6/doc/builds/207505822 https://github.com/perl6/doc/compare/b5f4caf034ec...a6f804bbb3d5

[22:51] *** travis-ci left
[22:54] *** cibs left
[22:56] *** cibs joined
[22:58] *** alimon left
[22:59] *** mcmillhj joined
[23:00] *** ufobat left
[23:03] *** mcmillhj left
[23:04] *** avalenn left
[23:05] *** mcmillhj joined
[23:06] *** avalenn joined
[23:10] *** mcmillhj left
[23:14] *** astj joined
[23:15] *** rurban joined
[23:17] *** rurban1 left
[23:17] *** pyrimidine joined
[23:18] *** astj left
[23:20] *** travis-ci joined
[23:20] <travis-ci> Doc build failed. Brian Duggan 'added more idiomatic named parameters'

[23:20] <travis-ci> https://travis-ci.org/perl6/doc/builds/207507403 https://github.com/perl6/doc/compare/a6f804bbb3d5...f01ba07387bc

[23:20] *** travis-ci left
[23:21] *** risou is now known as risou_awy

[23:22] *** pyrimidine left
[23:28] *** travis-ci joined
[23:28] <travis-ci> Doc build failed. Brian Duggan 'off by 1'

[23:28] <travis-ci> https://travis-ci.org/perl6/doc/builds/207509501 https://github.com/perl6/doc/compare/f01ba07387bc...32b3be421fec

[23:28] *** travis-ci left
[23:29] *** mcmillhj joined
[23:34] *** mcmillhj left
[23:34] *** llfourn left
[23:34] *** mcmillhj joined
[23:37] *** risou_awy is now known as risou

[23:39] *** mcmillhj left
[23:43] *** travis-ci joined
[23:43] <travis-ci> Doc build failed. Brian Duggan 'blocks vs subroutines'

[23:43] <travis-ci> https://travis-ci.org/perl6/doc/builds/207510972 https://github.com/perl6/doc/compare/32b3be421fec...032a15e1df4e

[23:43] *** travis-ci left
[23:44] *** eroux joined
[23:44] *** ZzZombo joined
[23:44] *** ZzZombo left
[23:44] *** ZzZombo joined
[23:45] *** kurahaupo left
[23:48] *** eroux left
[23:49] *** kurahaupo joined
[23:50] *** mcmillhj joined
[23:55] *** risou is now known as risou_awy

[23:55] *** risou_awy is now known as risou

[23:55] *** mcmillhj left
[23:56] *** BenGoldberg joined
[23:57] *** simcop2387 left
[23:59] *** llfourn joined
