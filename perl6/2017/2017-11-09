[00:04] *** cdg joined
[00:09] *** cdg left
[00:22] *** cdg joined
[00:25] *** ryn1x joined
[00:27] *** NEveD joined
[00:30] *** ryn1x left
[00:44] *** mempko left
[00:47] *** aborazmeh joined
[00:47] *** aborazmeh left
[00:47] *** aborazmeh joined
[00:48] *** margeas left
[00:50] *** MasterDuke joined
[00:51] *** ryn1x joined
[00:51] *** ryn1x_ joined
[00:51] *** jameslenz left
[00:51] *** Cabanossi left
[00:53] *** nadim left
[00:53] *** ryn1x__ joined
[00:54] *** Cabanossi joined
[01:11] *** mempko joined
[01:21] *** mcmillhj left
[01:25] *** ryn1x__ left
[01:26] *** ryn1x_ left
[01:26] *** ryn1x left
[01:28] <comborico1611> What is the purpose of the braces in following statement? $object.someMethod({:red(195), :green(110), :blue(70),});

[01:29] <El_Che> it's a hash

[01:29] <comborico1611> Hmm. Okay. Thank you.

[01:30] <El_Che> the :red(195) is a short hand for red => 195

[01:30] <comborico1611> Oh!

[01:31] <comborico1611> Also is the list comma a typo?

[01:31] <El_Che> without the braces you'll be passing a list

[01:31] <comborico1611> (I'm copying it as I see it from a book.)

[01:32] <El_Che> the comma separates the pairs

[01:32] <comborico1611> Oh!

[01:32] <comborico1611> The last one is necessary?

[01:32] <comborico1611> (70),

[01:33] <El_Che> no

[01:33] <comborico1611> Is it an error?

[01:33] <El_Che> no

[01:33] <geekosaur> the last oen isn't necessary here, but becomes habit because (x) is just x but (x,) is a list containing x

[01:33] <El_Che> it's good for copy pasting, or adding one more

[01:33] <El_Che> certainly if you format the hash in different lines

[01:33] <geekosaur> also it makes it easier to add more values to the end, especially if you are spreading it over multiple lines

[01:34] *** ryn1x joined
[01:34] *** ryn1x_ joined
[01:34] *** Exodist left
[01:34] <comborico1611> Hmm. I will add these to my notes. Thank you!

[01:34] *** mcmillhj joined
[01:35] <El_Che> comborico1611: have a look at hashes here: https://docs.perl6.org/type/Hash

[01:35] <El_Che> if not clear, raise a bug :)

[01:36] *** Exodist joined
[01:36] <comborico1611> Thank you. First I'm going to go back in this book and see if the author mention the : shorthand syntax. If not, I'll make sure I I rip on him for that in my review.

[01:37] <El_Che> who's book are you reading?

[01:37] <geekosaur> 'colonpair' is the standard term for it

[01:37] <comborico1611> Think Perl 6

[01:37] <El_Che> I browsed through it on orailly safari

[01:38] <El_Che> I think it's more a "learn to program" book than a "learn perl 6" book, though

[01:38] *** ryn1x left
[01:38] *** mcmillhj left
[01:39] *** ryn1x_ left
[01:40] <comborico1611> I disagree. I think it is a book for people which know how to program, but definitely not Perl 5 programmers.

[01:40] <comborico1611> Ideal for someone who has been away from programming for a while.

[01:41] <El_Che> like I said, I just browsed through it

[01:42] <comborico1611> But i just admit that I'm not the typical programmer type.  I'm more of an I/T type then computer science.

[01:42] <comborico1611> Just = must

[01:42] <comborico1611> Than

[01:42] <El_Che> in that case it may be a good fit

[01:43] *** Exodist left
[01:45] <comborico1611> Geekosaur, thank you for the term colonpair. You just save me 15 minutes. And he did mention it in the book, but it is in a chapter which he said could be skipped on a first reading. The author has a few chapters dedicated to practice exercises.

[01:45] *** Exodist joined
[01:45] *** mempko left
[01:48] *** mcmillhj joined
[01:50] *** ryn1x joined
[01:51] *** kalkin--- joined
[01:51] *** ryn1x_ joined
[01:51] *** Exodist left
[01:52] *** mcmillhj left
[01:53] *** bb joined
[01:53] <bb> hello

[01:54] *** kalkin-- left
[01:54] *** Exodist joined
[01:56] *** bb left
[01:56] *** cdg left
[01:59] *** ryn1x left
[02:03] *** Exodist left
[02:03] *** ryn1x_ left
[02:03] *** ryn1x joined
[02:03] *** ryn1x_ joined
[02:03] *** ryn1x__ joined
[02:05] *** Exodist joined
[02:05] *** mcmillhj joined
[02:07] *** Cabanossi left
[02:08] *** ryn1x_ left
[02:08] *** ryn1x left
[02:08] *** ryn1x__ left
[02:09] *** Cabanossi joined
[02:10] *** mcmillhj left
[02:10] *** troys is now known as troys_

[02:13] *** kaare_ left
[02:13] *** kaare_ joined
[02:15] *** audiatorix joined
[02:16] <audiatorix> is there any elegant way to get an array of each byte of a string?

[02:17] *** ryn1x joined
[02:19] <geekosaur> https://docs.perl6.org/type/Str#method_encode

[02:20] *** mcmillhj joined
[02:20] *** aborazmeh left
[02:21] *** ryn1x left
[02:22] <audiatorix> Would I need to use the experimental unpack method on blob?

[02:22] <geekosaur> and presumably .List to turn the buf8 into a list

[02:22] <geekosaur> (or .Array if it needs to be mutable)

[02:25] *** mcmillhj left
[02:25] <geekosaur> m: "abc".encode("latin1").List.say

[02:25] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «(97 98 99)␤»

[02:25] <geekosaur> note that you have to encode it; Str does not contain bytes, it contains graphemes

[02:27] <audiatorix> right

[02:27] <audiatorix> thanks

[02:27] *** audiatorix left
[02:32] *** grondilu joined
[02:32] <grondilu> is JSON::Fast broken or something?  I have an error complaining about parenthesis

[02:37] <grondilu> ===SORRY!=== Error while compiling /home/grondilu/site#sources/5FD1C95F89B03F456148D15142B2C1CA718C905F (JSON::Fast)

[02:37] <grondilu> Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 53)

[02:37] <grondilu> ------>         last unless ⏏$wsord == 32 || $wsord == 10 || $wsord =

[02:40] * grondilu can't even run panda update because of this

[02:40] <grondilu> should I gave up on panda and install zef?

[02:41] <grondilu> *give

[02:42] *** ryn1x joined
[02:42] *** ryn1x_ joined
[02:43] *** cdg joined
[02:45] <comborico1611> Goodnight!

[02:45] *** comborico1611 left
[02:45] *** ryn1x__ joined
[02:46] *** ilbot3 left
[02:48] *** dogbert17 left
[02:48] *** cdg left
[02:50] *** notbenh left
[02:50] *** cdg joined
[02:51] *** TimToady joined
[02:51] *** APic left
[02:52] *** benchable6 left
[02:52] *** statisfiable6 left
[02:52] *** unicodable6 left
[02:52] *** awwaiid joined
[02:52] *** hahainternet joined
[02:53] *** MilkmanDan joined
[02:53] *** broquaint joined
[02:53] *** konsolebox left
[02:53] *** john51 left
[02:53] *** committable6 left
[02:54] *** john51 joined
[02:54] *** committable6 joined
[02:54] *** Exodist left
[02:55] *** sgzxl joined
[02:56] *** ilbot3 joined
[02:56] *** ChanServ sets mode: +v ilbot3

[02:56] *** piojo joined
[02:57] *** notbenh joined
[02:57] *** sgzxl left
[02:58] *** konsolebox joined
[02:58] *** Gothmog_ joined
[02:59] *** lookatme joined
[03:00] *** cosimo joined
[03:00] *** mingdao joined
[03:03] * grondilu updated JSON::Fast with zef

[03:03] *** grondilu left
[03:04] *** Exodist joined
[03:05] *** gugod joined
[03:06] *** [Coke] joined
[03:06] *** nekomune joined
[03:07] *** Mrofnet joined
[03:07] *** Khisanth joined
[03:09] *** Merfont left
[03:10] *** darkmorph left
[03:10] *** benchable6 joined
[03:10] *** ChanServ sets mode: +v benchable6

[03:10] *** APic joined
[03:11] *** Exodist left
[03:11] *** ufobat_ joined
[03:12] *** Exodist joined
[03:13] *** pnu__ left
[03:13] *** pnu__ joined
[03:13] *** khw left
[03:14] *** iviv left
[03:14] *** khw joined
[03:14] *** iviv joined
[03:14] *** coverable6 left
[03:14] *** bloatable6 left
[03:14] *** greppable6 left
[03:14] *** squashable6 left
[03:14] *** ilmari[m] left
[03:14] *** tyil[m] left
[03:14] *** buggable left
[03:14] *** huggable left
[03:15] *** huggable joined
[03:15] *** buggable joined
[03:15] *** squashable6 joined
[03:15] *** greppable6 joined
[03:15] *** bloatable6 joined
[03:15] *** coverable6 joined
[03:15] *** ChanServ sets mode: +v huggable

[03:15] *** ChanServ sets mode: +v buggable

[03:15] *** ChanServ sets mode: +v squashable6

[03:15] *** ChanServ sets mode: +v greppable6

[03:15] *** ChanServ sets mode: +v bloatable6

[03:15] *** ChanServ sets mode: +v coverable6

[03:15] *** holyghost left
[03:15] *** ufobat left
[03:15] *** AlexDaniel` left
[03:15] *** Matthew[m] left
[03:15] *** Garland_g[m] left
[03:15] *** CIAvash[m] left
[03:16] *** mack[m] left
[03:16] *** wictory[m] left
[03:16] *** wamba[m] left
[03:16] *** tadzik left
[03:16] *** xui_nya[m] left
[03:16] *** M-Illandan left
[03:16] *** ryn1x_ left
[03:16] *** ryn1x left
[03:16] *** mienaikage left
[03:16] *** unclechu left
[03:16] *** ryn1x__ left
[03:17] *** notbenh left
[03:19] *** notbenh joined
[03:20] *** noganex joined
[03:23] *** noganex_ left
[03:24] *** colomon left
[03:26] *** mson left
[03:38] *** Cabanossi left
[03:39] *** Cabanossi joined
[03:43] *** ryn1x joined
[03:43] *** ryn1x_ joined
[03:43] *** ryn1x__ joined
[03:45] *** konsolebox left
[03:47] *** ryn1x_ left
[03:47] *** ryn1x left
[03:47] *** ryn1x__ left
[03:49] *** dugword joined
[03:51] *** wamba joined
[03:51] *** colomon joined
[03:56] *** ufobat_ left
[03:56] *** xxpor_ joined
[03:56] *** smash left
[03:57] *** smash joined
[03:58] *** committable6 left
[03:59] *** committable6 joined
[04:00] *** ufobat_ joined
[04:01] *** eliasr left
[04:06] *** Cabanossi left
[04:08] *** Cabanossi joined
[04:11] *** dj_goku joined
[04:17] *** ryn1x joined
[04:17] *** ryn1x_ joined
[04:18] *** mcmillhj joined
[04:18] *** ryn1x__ joined
[04:23] *** mcmillhj left
[04:26] *** cdg left
[04:28] *** cdg joined
[04:32] *** cdg left
[04:38] *** xxpor_ left
[04:38] *** xxpor joined
[04:38] *** napo1eon joined
[04:47] *** wander left
[04:48] *** llfourn joined
[04:50] *** ryn1x__ left
[04:51] *** ryn1x left
[04:51] *** ryn1x_ left
[04:52] *** rodrigok left
[04:53] *** Khisanth left
[04:54] *** ryn1x joined
[04:54] *** wander joined
[04:59] *** troys_ is now known as troys

[05:00] *** Exodist left
[05:01] *** ryn1x_ joined
[05:01] *** ryn1x left
[05:01] *** ryn1x__ joined
[05:02] *** Exodist joined
[05:06] *** ryn1x__ left
[05:06] *** ryn1x_ left
[05:06] *** Khisanth joined
[05:07] *** ryn1x joined
[05:11] *** Exodist left
[05:11] *** pentashift joined
[05:11] *** holyghost joined
[05:12] *** Exodist joined
[05:12] *** ryn1x_ joined
[05:12] *** ryn1x__ joined
[05:18] *** Exodist left
[05:20] *** Exodist joined
[05:22] <wander> afternoon #perl6 ~

[05:24] *** yht left
[05:24] *** ryn1x left
[05:25] *** ryn1x__ left
[05:25] *** ryn1x_ left
[05:28] <pentashift> Good evening 

[05:29] *** cdg joined
[05:30] *** yht joined
[05:31] *** troys is now known as troys_

[05:37] *** ryn1x joined
[05:37] *** ryn1x_ joined
[05:37] *** ryn1x__ joined
[05:37] *** tadzik joined
[05:38] *** Cabanossi left
[05:38] *** wamba left
[05:38] *** Cabanossi joined
[05:41] *** troys_ is now known as troys

[05:42] *** ryn1x__ left
[05:42] *** ryn1x_ left
[05:42] *** ryn1x left
[05:51] *** ryn1x joined
[05:52] *** ryn1x_ joined
[05:52] *** ryn1x__ joined
[05:54] *** unicodable6 joined
[05:54] *** statisfiable6 joined
[06:08] *** Cabanossi left
[06:09] *** Cabanossi joined
[06:09] *** titsuki joined
[06:10] *** Exodist left
[06:10] *** kaare_ left
[06:11] *** astj_ joined
[06:12] *** Exodist joined
[06:12] *** ab5tract_ joined
[06:12] *** shadoxx_ joined
[06:13] *** kshannon_ joined
[06:13] *** ch3ck3r joined
[06:14] *** vike1 joined
[06:15] *** silug left
[06:15] *** titsuki_ left
[06:15] *** kshannon left
[06:15] *** charsbar left
[06:15] *** masak left
[06:15] *** astj left
[06:15] *** shadoxx left
[06:15] *** ab5tract left
[06:15] *** vike left
[06:15] *** Alikzus_ left
[06:15] *** preaction left
[06:15] *** kst` joined
[06:15] *** tbrowder_ joined
[06:16] *** kaare_ joined
[06:16] *** Matthew[m] joined
[06:16] *** ilmari[m] joined
[06:16] *** wamba[m] joined
[06:16] *** CIAvash[m] joined
[06:16] *** AlexDaniel` joined
[06:16] *** mack[m] joined
[06:16] *** tyil[m] joined
[06:16] *** unclechu joined
[06:16] *** wictory[m] joined
[06:16] *** pentashift_ joined
[06:16] *** Garland_g[m] joined
[06:16] *** mienaikage joined
[06:16] *** xui_nya[m] joined
[06:16] *** preaction joined
[06:16] *** Alikzus_ joined
[06:17] *** unicodable6 left
[06:18] *** smash_ joined
[06:18] *** committable6 left
[06:18] *** ab5tract joined
[06:18] *** ambs_ joined
[06:18] *** Exodist left
[06:19] *** charsbar joined
[06:20] *** Exodist joined
[06:20] *** masak joined
[06:21] *** masak is now known as Guest21976

[06:22] *** dugword left
[06:22] *** ab5tract_ left
[06:22] *** holyghost left
[06:22] *** pentashift left
[06:22] *** llfourn left
[06:22] *** napo1eon left
[06:22] *** smash left
[06:22] *** yoleaux left
[06:22] *** kst left
[06:22] *** ambs left
[06:22] *** tbrowder left
[06:22] *** llfourn_ joined
[06:22] *** tbrowder_ is now known as tbrowder

[06:23] *** silug joined
[06:23] *** ryn1x_ left
[06:23] *** HoboWithAShotgun left
[06:24] *** ryn1x__ left
[06:24] *** ryn1x left
[06:24] *** census left
[06:25] *** statisfiable6 left
[06:25] *** statisfiable6 joined
[06:26] *** wander left
[06:29] *** wamba joined
[06:30] *** darutoko joined
[06:31] *** M-Illandan joined
[06:33] *** khw left
[06:34] *** Exodist left
[06:35] *** Cabanossi left
[06:36] *** Exodist joined
[06:38] *** piojo left
[06:38] *** Cabanossi joined
[06:41] *** imcsk8 left
[06:41] *** imcsk8 joined
[06:50] *** ryn1x joined
[06:51] *** ryn1x_ joined
[06:51] *** Exodist left
[06:53] *** ch3ck3r left
[06:55] *** ryn1x left
[06:55] *** ryn1x_ left
[06:56] *** Exodist joined
[07:00] *** domidumont joined
[07:05] *** domidumont left
[07:07] *** domidumont joined
[07:07] *** lizmat_ joined
[07:08] *** wander joined
[07:08] *** releasable6 left
[07:09] *** hahainternet left
[07:09] <wander> .ask [Coke] what is the use of Disambiguation files? It seems we cannot reach those pages directly from out doc site

[07:09] *** coverable6 left
[07:09] *** nativecallable6 left
[07:09] *** diegok left
[07:09] *** squashable6 left
[07:09] *** greppable6 left
[07:09] *** bloatable6 left
[07:09] *** benchable6 left
[07:09] *** quotable6 left
[07:09] *** statisfiable6 left
[07:10] *** bisectable6 left
[07:10] *** lizmat left
[07:10] *** evalable6 left
[07:10] *** albongo left
[07:10] *** raiph joined
[07:12] *** llfourn_ left
[07:13] *** ilbot3 left
[07:15] <raiph> .tell eugene_barsky $a = $_ with $b # only does assignment if $b is defined

[07:16] *** ilbelkyr left
[07:17] *** ilbot3 joined
[07:17] *** ChanServ sets mode: +v ilbot3

[07:21] *** geospeck joined
[07:22] *** Cabanossi left
[07:24] *** Cabanossi joined
[07:25] *** ryn1x joined
[07:26] *** Exodist left
[07:26] *** ryn1x_ joined
[07:26] *** troys left
[07:27] *** ryn1x__ joined
[07:28] *** Exodist joined
[07:34] *** rindolf joined
[07:34] *** Exodist left
[07:36] *** Exodist joined
[07:37] *** espadrine left
[07:38] *** dugword joined
[07:45] *** isBEKaml left
[07:45] *** Exodist left
[07:46] *** Exodist joined
[07:47] <ZzZombo> why

[07:47] <ZzZombo> m: my Int:D $x=1;say $x.isa(Int:D)

[07:47] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «False␤»

[07:47] <ZzZombo> m: my Int:D $x=1;say $x.isa(Int)

[07:47] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «True␤»

[07:50] *** salv0 joined
[07:56] *** wamba left
[07:56] *** philomath joined
[07:58] *** ryn1x left
[07:58] *** philomath left
[07:59] *** ryn1x__ left
[07:59] *** lowbro joined
[07:59] *** lowbro left
[07:59] *** lowbro joined
[07:59] *** ryn1x_ left
[07:59] *** raiph left
[08:00] *** domidumont left
[08:00] <moritz> ZzZombo: isa is not a type check, it's an "is instance of"-check

[08:00] <moritz> ZzZombo: and 1 is an instance of Int, not of Int:D

[08:01] *** sena_kun joined
[08:01] <moritz> I know that's confusing :-)

[08:01] *** domidumont joined
[08:01] *** zakharyas joined
[08:01] <moritz> m: subset A of Int where * > 2; say 5.isa(A)

[08:01] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «False␤»

[08:01] <ufobat_> what do i need to do in oder to pass something that was created like that: "my Mu $l := nqp::list_s()" into a sub with a signature like this sub foo(*@a) { ... }

[08:01] <ufobat_> basically what $list.flat() would do?

[08:02] <moritz> ufobat_: have you tried foo(|$l) ?

[08:03] <ufobat_> nope

[08:03] <ufobat_> Cannot find method 'FLATTENABLE_LIST':

[08:04] <moritz> foo(@$l) ?

[08:04] *** parv joined
[08:04] *** zakharyas left
[08:04] *** Exodist left
[08:05] *** andrzejku joined
[08:05] <ufobat_> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.perl }; foo(@$l)

[08:05] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «Cannot find method 'cache': no method cache and no .^find_method␤  in block <unit> at <tmp> line 1␤␤»

[08:05] *** zakharyas joined
[08:05] <ufobat_> maybe i need to create a List object, first?

[08:06] <moritz> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.perl }; foo(@ = $l)

[08:06] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «Cannot find method 'perl': no method cache and no .^find_method␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[08:06] <moritz> :(

[08:06] <ufobat_> my first time in nqp :D

[08:06] *** Cabanossi left
[08:07] *** Exodist joined
[08:08] *** wamba joined
[08:08] *** Cabanossi joined
[08:09] <geekosaur> you'll have to find whatever nqp function flattens an nqp list; it's not a perl 6 list

[08:12] <ufobat_> there is an interator, but i dont find something to flatten it :(

[08:13] *** dugword left
[08:14] *** Exodist left
[08:14] *** dugword joined
[08:16] *** Exodist joined
[08:19] *** dugword left
[08:19] *** mr-foobar left
[08:23] *** nadim joined
[08:23] *** mr-foobar joined
[08:28] <lookatme> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.WHAT; }; foo(@ = $l)

[08:28] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «(Array)␤»

[08:28] <lookatme> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.of; }; foo(@ = $l)

[08:28] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «(Mu)␤»

[08:30] <lookatme> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.^methods.grep({$^a.name eq "perl"}); }; foo(@ = $l)

[08:30] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «(perl perl)␤»

[08:33] *** jonas1 joined
[08:41] *** ryn1x joined
[08:41] *** ryn1x_ joined
[08:41] *** ryn1x__ joined
[08:46] *** ryn1x__ left
[08:46] *** ryn1x_ left
[08:46] *** ryn1x left
[08:50] *** mr-foobar left
[08:54] *** mr-foobar joined
[08:59] *** rgrau joined
[08:59] *** konsolebox joined
[09:01] *** HoboWithAShotgun joined
[09:03] *** wander left
[09:04] *** konobi_ left
[09:05] *** wamba left
[09:06] *** Cabanossi left
[09:08] *** nadim left
[09:09] *** abraxxa joined
[09:09] *** Cabanossi joined
[09:11] *** wamba joined
[09:12] *** wander joined
[09:12] *** ryn1x joined
[09:12] *** ryn1x_ joined
[09:12] *** ryn1x__ joined
[09:13] <Geth> ¦ doc/add-edit-ico: 9b946252ac | (Alex Chen)++ | 3 files

[09:13] <Geth> ¦ doc/add-edit-ico: Add edit ico

[09:13] <Geth> ¦ doc/add-edit-ico: 

[09:13] <Geth> ¦ doc/add-edit-ico: A try to fix #1622 .

[09:13] <Geth> ¦ doc/add-edit-ico: review: https://github.com/perl6/doc/commit/9b946252ac

[09:15] <Geth> ¦ doc: W4anD0eR96++ created pull request #1667: Add edit ico

[09:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1667

[09:15] *** dct joined
[09:16] <AlexDaniel> m: say 42

[09:16] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «42␤»

[09:18] *** mr-foobar left
[09:23] *** mr-foobar joined
[09:23] *** lizmat_ is now known as lizmat

[09:26] <ufobat_> lizmat, you're an nqp guru :-) you could help me, maybe?

[09:26] <lizmat> I might, what is the problem ?

[09:26] *** ecocode joined
[09:27] <ufobat_> maybe you can read up in your history, i want to pass a my Mu $l = nqp::list_s() thingy into a sub(*@foo) { ... } 

[09:27] <ufobat_> https://github.com/rakudo/rakudo/pull/1242#discussion_r149797893

[09:28] *** noganex_ joined
[09:28] *** kalkin-- joined
[09:29] *** bloatable6 joined
[09:29] *** ChanServ sets mode: +v bloatable6

[09:29] *** AlexDaniel left
[09:29] *** AlexDani` joined
[09:30] *** committable6 joined
[09:30] *** statisfiable6 joined
[09:30] *** ChanServ sets mode: +v committable6

[09:30] *** ChanServ sets mode: +v statisfiable6

[09:30] *** noganex left
[09:31] *** rgrau left
[09:31] *** kalkin--- left
[09:31] *** dustinm` joined
[09:32] <lizmat> ufobat_: that won't work

[09:32] *** araujo left
[09:32] *** rgrau joined
[09:32] *** albongo joined
[09:32] *** charsbar left
[09:33] *** hahainternet joined
[09:33] <ufobat_> ja :-)

[09:33] *** diegok joined
[09:33] *** greppable6 joined
[09:33] * HoboWithAShotgun yawns himself into a new day

[09:33] *** bisectable6 joined
[09:33] *** benchable6 joined
[09:34] <lizmat> ufobat_: the closest thing you can do with a list:s:

[09:34] <lizmat> m: use nqp; my $s := nqp::list_s("a","b","c"); sub a(Mu $list) { dd $list.^name }; a $s

[09:34] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «"BOOTStrArray"␤»

[09:34] <ufobat_> the thing i tought was that tha code in IO::Spec::*.catdir() does exactly what resolve() is missing

[09:34] *** quotable6 joined
[09:34] *** evalable6 joined
[09:34] *** japanoise joined
[09:35] *** travis-ci joined
[09:35] <travis-ci> Doc build passed. Alex Chen 'Add edit ico

[09:35] <travis-ci> https://travis-ci.org/perl6/doc/builds/299535705 https://github.com/perl6/doc/commit/9b946252ac6a

[09:35] *** travis-ci left
[09:35] *** sena_kun left
[09:35] *** BooK joined
[09:35] *** charsbar joined
[09:36] *** releasable6 joined
[09:36] *** nativecallable6 joined
[09:37] *** unicodable6 joined
[09:37] <ufobat_> your example wont help in the PR. I thought maybe i could create a List with the $l in it?.. But regarding my PR is it reasonable to use catdir() in resolve()? and maybe you have a hint how this could be achived?

[09:37] *** grumble joined
[09:37] *** coverable6 joined
[09:37] *** dakkar joined
[09:38] *** squashable6 joined
[09:39] *** parv left
[09:40] *** xi- joined
[09:40] *** ilbelkyr joined
[09:42] *** nadim joined
[09:47] *** ryn1x__ left
[09:47] *** ryn1x_ left
[09:47] *** ryn1x left
[09:50] *** mr-foobar left
[09:50] <Geth> ¦ doc/add-edit-ico: 5a749c93ec | (Alex Chen)++ (committed using GitHub Web editor) | htmlify.p6

[09:50] <Geth> ¦ doc/add-edit-ico: Update htmlify.p6

[09:50] <Geth> ¦ doc/add-edit-ico: review: https://github.com/perl6/doc/commit/5a749c93ec

[09:50] *** mr-foobar joined
[09:50] <lizmat> ufobat_: sorry, was distracted

[09:51] <ufobat_> no worries :-)

[09:52] <lizmat> Spec.catdir is a public method, right?

[09:52] <ufobat_> right

[09:52] <lizmat> the only way to make that work, is it to have a candidate that takes a Mu and then handle it inside in nqp

[09:53] <lizmat> .flat will never work on a list_s anyways

[09:53] <lizmat> need to be afk now&

[09:54] *** Aaronepower left
[09:54] *** APic left
[09:55] *** nadim left
[09:56] <ufobat_> okay! thank you

[10:02] *** eliasr joined
[10:15] *** APic joined
[10:26] *** margeas joined
[10:28] *** margeas left
[10:30] *** Aaronepower joined
[10:35] *** salv0 left
[10:36] *** salv0 joined
[10:37] *** Cabanossi left
[10:38] *** Cabanossi joined
[10:47] *** rgrau left
[10:50] *** mr-foobar left
[10:50] *** ryn1x_ joined
[10:50] *** ryn1x joined
[10:50] *** ryn1x__ joined
[10:51] *** mr-foobar joined
[10:53] <moritz> didn't we have a somewhat general op for upgrading NQP to Perl 6 types?

[10:54] <moritz> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.perl }; foo(nqp::hllizefor($l, 'perl6'))

[10:54] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «Cannot find method 'perl': no method cache and no .^find_method␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[10:54] <jnthn> nqp::hllize

[10:55] <jnthn> Oh, you found it :)

[10:55] <moritz> m: use nqp; my Mu $l := nqp::list_s("a", "b"); sub foo(*@a) { say @a.perl }; foo(nqp::hllize($l))

[10:55] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «Cannot find method 'perl': no method cache and no .^find_method␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[10:55] <moritz> seems it doesn't configure a mapping for list_s

[10:55] <jnthn> But Nope

[10:55] <jnthn> gah

[10:55] <jnthn> No, it doesn't

[10:55] <jnthn> But

[10:56] <jnthn> my str @array is using the exact same representation as an nqp::list_s

[11:06] *** mniip joined
[11:16] *** pmurias joined
[11:17] *** zakharyas left
[11:19] *** mr-foobar left
[11:20] *** llfourn joined
[11:22] *** mr-foobar joined
[11:24] *** ryn1x__ left
[11:24] *** ryn1x_ left
[11:24] *** ryn1x left
[11:27] *** Aaronepower left
[11:35] *** ryn1x joined
[11:35] *** ryn1x_ joined
[11:36] *** Aaronepower joined
[11:40] *** ryn1x_ left
[11:40] *** ryn1x left
[11:49] *** mr-foobar left
[11:54] *** mr-foobar joined
[11:59] *** kaare_ left
[11:59] *** cdg left
[11:59] *** kaare_ joined
[12:05] *** HoboWithAShotgun left
[12:09] *** ryn1x joined
[12:10] *** ryn1x_ joined
[12:10] *** ryn1x__ joined
[12:14] *** ryn1x_ left
[12:15] *** ryn1x left
[12:15] *** ryn1x__ left
[12:19] <Geth> ¦ doc/add-edit-ico: 21437e407d | (Alex Chen)++ | 3 files

[12:19] <Geth> ¦ doc/add-edit-ico: Keep ico style consistent

[12:19] <Geth> ¦ doc/add-edit-ico: review: https://github.com/perl6/doc/commit/21437e407d

[12:19] *** ryn1x joined
[12:20] *** mr-foobar left
[12:23] *** aindilis left
[12:24] *** aindilis joined
[12:24] *** mr-foobar joined
[12:24] *** ryn1x left
[12:35] *** ryn1x_ joined
[12:35] *** ryn1x joined
[12:36] *** ryn1x__ joined
[12:36] *** holyghost joined
[12:36] *** Cabanossi left
[12:39] *** Cabanossi joined
[12:40] *** ryn1x left
[12:40] *** ryn1x__ left
[12:40] <holyghost> I've made something which uses a levels hash inside octants to collide against intersected world objects (something based on an octtree), I don't know if it's any faster but here it is at pm : http://perlmonks.org/?node_id=1203007  I will port it to perl6 tomorrow or this weekend

[12:40] *** ryn1x_ left
[12:43] *** holyghost left
[12:47] <xi-> is there a way I could use modules from an entire directory without having to explicitly use each module?

[12:50] *** mr-foobar left
[12:52] *** mr-foobar joined
[12:52] <DrForr> You may not have wanted to know this, but Common Lisp's (loop) functionality is trivial to implement.

[12:53] *** leont joined
[12:55] <DrForr> Well, at least the 'collect' bit which is all I was really after.

[12:58] <DrForr> And I get my first "Heap exhausted, game over." error in sbcl.

[12:59] <DrForr> xi - maybe look at Pluggable?

[13:01] <perlawhirl> Hi DrForr

[13:01] <perlawhirl> I'm running into a Readline error (it occurs on 2 Centos 6 boxes), but... I don't suspect it's Readlines fault, so I haven't raised an issue

[13:02] <perlawhirl> but can you take a peep at this gist and tell me if you've got any ideas

[13:02] <perlawhirl> https://gist.github.com/0racle/c7e65b6946a30479cf8493fbafc04f53

[13:02] <perlawhirl> I suspect it's NativeCalls fault, but... I'm known to be wrong about things from time to time :D

[13:03] *** Exodist left
[13:04] *** AlexDani` is now known as AlexDaniel

[13:04] <DrForr> It could be me, that might be a new variable that's appeared since I've seriously looked at the code.

[13:05] *** llfourn left
[13:05] *** Exodist joined
[13:05] *** Cabanossi left
[13:06] <DrForr> Which is an embarrassingly long time, I'll freely admit. Let me set an alert on my phone and I'll delve into it tonight. I'm at work here and was just tossing out a quick tidbit.

[13:06] *** ryn1x joined
[13:06] *** ryn1x_ joined
[13:07] <perlawhirl> no probs. It's been happening for maybe a month, it's not a deal breaker, just a little annoying... which is to say, no rush, i appreciate you taking the time when you can.

[13:08] <perlawhirl> The line it points to in readline is just a sub that calls a native sub... nothing too special going on, so i suspect something has changed inside NativeCall

[13:08] <perlawhirl> (which may need to be accounted for in Readline, possibly)

[13:08] *** Cabanossi joined
[13:08] <DrForr> Right. I certainly won't dismiss it as a user error.

[13:10] <perlawhirl> both boxes are running a Rakudo manually built from head. I might see if I can replicate it Star or with a point release via rakudobrew.

[13:10] <perlawhirl> will let you know

[13:11] *** ryn1x left
[13:11] *** Aaronepower left
[13:11] *** ryn1x_ left
[13:13] <DrForr> I'm just gratified that someone is using the code... I've got some plans that have been brewing while I take a break from things.

[13:13] *** census joined
[13:14] <perlawhirl> So, doing a little digging and the error looks like it's coming from nativecall.c in MoarVM

[13:14] <perlawhirl> https://github.com/MoarVM/MoarVM/blob/87191078c38be29be16a0801963552f3455ea495/src/core/nativecall.c#L153

[13:14] <DrForr> Incidentaly 'say Loop { Repeat 3; Collect 5; };' correctly returns [ 5 5 5 ]

[13:14] <[Coke]> .tell wander not sure why you're asking me about the disambiguation files. They predate my involvement with doc, I don't have any special knowledge, sorry.

[13:14] <census> DrForr !

[13:15] *** philomath joined
[13:15] <DrForr> Someone on FB said "I like (format) but for gods' take don't impleent (loop)." Red flag. Bull.

[13:16] <DrForr> Er, gods' sake. Insert Japanese pun here.

[13:17] <[Coke]> ... ENOTBOT

[13:18] <wander> [Coke] I don't know who is in charge of this stuff. Could you please take a look at https://github.com/perl6/doc/issues/1666 

[13:19] <DrForr> I'm writing (among the usual too damn many things) Format::Lisp and the CL test suite uses (loop) constructs. I just wanted to be able to write the test files so that they look like the CL test suite.

[13:19] <geospeck> What is the equivalent to perl's 5 "perl -c -Mwarnings -Ilib" for syntax checking? I know you can do "perl6 -c" but I cant see anything for warnings. Thanks

[13:19] *** ChoHag joined
[13:19] <wander> If these files are useless now, we can stop generating it.

[13:19] *** ChoHag_ left
[13:20] <DrForr> This way all I need to do is replace () with {}, move to prefix, change case and Robert becomes the brother of your father.

[13:21] *** mr-foobar left
[13:22] *** mr-foobar joined
[13:22] *** rgrau joined
[13:23] <wander> .ask moritz are you in charge of 'write-disambiguation-files'? why do we generate disambiguation files? please take a look at https://github.com/perl6/doc/issues/1666

[13:24] <wander> I found moritz wrote the origin version 'write-disambiguation-files'

[13:26] <Geth> ¦ doc/add-edit-ico: 4f224f8be1 | (Alex Chen)++ | 2 files

[13:26] <Geth> ¦ doc/add-edit-ico: Remove ads

[13:26] <Geth> ¦ doc/add-edit-ico: review: https://github.com/perl6/doc/commit/4f224f8be1

[13:27] <Geth> ¦ doc/master: 5 commits pushed by (Alex Chen)++

[13:27] <Geth> ¦ doc/master: 9b946252ac | Add edit ico

[13:27] <Geth> ¦ doc/master: 5a749c93ec | Update htmlify.p6

[13:27] <Geth> ¦ doc/master: 21437e407d | Keep ico style consistent

[13:27] <Geth> ¦ doc/master: 4f224f8be1 | Remove ads

[13:27] <Geth> ¦ doc/master: 2f61c619df | Merge pull request #1667 from perl6/add-edit-ico

[13:27] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/b663b0428c...2f61c619df

[13:29] <[Coke]> wander: no one's in charge of anything at this point. You should be able to generate the site locally and see if any of the disambiguation pages are linked to from anywhere.

[13:29] <[Coke]> If we're not using them, we either *should* use them, or not create them, I agree.

[13:31] <moritz> wander: the idea was that you can just put anything in the URL after https://docs.perl6.org/ and you'd get some docs for that

[13:33] <[Coke]> might be able to use it as the basis of  https://github.com/perl6/doc/issues/1099

[13:34] <wander> well, sounds functional. but we have search.js, don't we? and this usage is implicit

[13:34] *** census left
[13:34] *** census joined
[13:35] <moritz> wander: the difference is that when somebody asks me about an operator, I can give them an URL without having to open the search thingy first

[13:35] <moritz> I'm not super into this feature, but I did built it because it scratched an itch I had

[13:36] *** Cabanossi left
[13:36] *** ExtraCrispy joined
[13:38] *** mcmillhj joined
[13:38] *** Cabanossi joined
[13:43] *** philomath_ joined
[13:43] <wander> emmm...then we need a better searching(listing) machine

[13:43] <wander> https://docs.racket-lang.org/search/index.html

[13:44] <moritz> why?

[13:44] <moritz> even with a better search engine, I actually have to open it to use it

[13:44] <moritz> (not saying we don't, I just don't see the connection here)

[13:45] <wander> https://docs.racket-lang.org/search/index.html?q=let

[13:45] *** comborico1611 joined
[13:46] *** philomath left
[13:50] <wander> I'm thinking about search engine... if the search action result in a page listing thing relevant, which is quite similar with disambiguation file, it may be a better practice. Meanwhile, you can write give guys an URL in format above.

[13:50] *** mr-foobar left
[13:50] <wander> Meanwhile, you can write an URL like above and give it to others

[13:51] <wander> Without open it and use it

[13:51] *** audreyable6 joined
[13:53] *** mr-foobar joined
[13:59] *** wander left
[14:00] *** wander joined
[14:00] *** perlpilot joined
[14:02] *** darkmorph joined
[14:02] *** Exodist left
[14:03] *** wamba left
[14:03] *** Exodist joined
[14:03] *** philomath_ is now known as philomath

[14:07] *** wamba joined
[14:09] *** kaare_ left
[14:12] *** cdg joined
[14:12] *** kaare_ joined
[14:12] *** Exodist left
[14:14] *** Exodist joined
[14:17] *** ryn1x joined
[14:17] *** ryn1x_ joined
[14:17] *** cdg_ joined
[14:17] *** ryn1x__ joined
[14:18] *** tangible6 joined
[14:18] *** ChanServ sets mode: +v tangible6

[14:18] *** audreyable6 left
[14:21] *** mr-foobar left
[14:21] *** cdg left
[14:21] *** Exodist left
[14:23] *** zakharyas joined
[14:23] *** mr-foobar joined
[14:23] *** Exodist joined
[14:26] <Geth> ¦ doc: 6e1aa87b7e | holli-holzer++ (committed by Zoffix Znet) | doc/Language/5to6-nutshell.pod6

[14:26] <Geth> ¦ doc: Update 5to6-nutshell.pod6 (#1665)

[14:26] <Geth> ¦ doc: 

[14:26] <Geth> ¦ doc: mentioned AUTOLOAD/FALLBACK

[14:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6e1aa87b7e

[14:26] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[14:27] *** kaare_ left
[14:28] <Geth> ¦ doc: de8acaf0d9 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/5to6-nutshell.pod6

[14:28] <Geth> ¦ doc: Reword

[14:28] <Geth> ¦ doc: 

[14:28] <Geth> ¦ doc: "Gone" suggests the feature is gone entirely, but FALLBACK is very

[14:28] <Geth> ¦ doc: similar, so just suggest it as alternative.

[14:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/de8acaf0d9

[14:41] *** sena_kun joined
[14:47] *** Exodist left
[14:50] *** rgrau left
[14:50] *** Exodist joined
[14:51] *** pentashift_ left
[14:51] *** ryn1x__ left
[14:51] *** ryn1x_ left
[14:51] *** ryn1x left
[14:52] *** mr-foobar left
[14:53] *** geospeck left
[14:53] *** mr-foobar joined
[14:54] *** philomath left
[15:00] *** Exodist left
[15:02] *** Exodist joined
[15:02] *** ryn1x joined
[15:02] *** ryn1x_ joined
[15:02] *** ryn1x__ joined
[15:07] *** ryn1x_ left
[15:07] *** ryn1x left
[15:07] *** ryn1x__ left
[15:12] *** jonas1 left
[15:12] *** jonas1 joined
[15:21] *** mr-foobar left
[15:22] *** Exodist left
[15:22] *** mr-foobar joined
[15:23] *** Exodist joined
[15:26] *** ryn1x_ joined
[15:26] *** ryn1x joined
[15:31] *** ryn1x left
[15:31] *** ryn1x_ left
[15:32] *** ryn1x_ joined
[15:32] *** ryn1x joined
[15:32] *** Exodist left
[15:33] *** ryn1x__ joined
[15:33] *** bwisti left
[15:33] *** Exodist joined
[15:34] *** philomath joined
[15:37] *** ryn1x left
[15:37] *** ryn1x__ left
[15:37] *** ryn1x_ left
[15:38] *** philomath_ joined
[15:40] *** Exodist left
[15:41] *** philomath left
[15:43] *** Exodist joined
[15:46] *** llfourn joined
[15:47] *** kaare_ joined
[15:49] *** comborico1611 left
[15:50] *** comborico1611 joined
[15:52] *** mr-foobar left
[15:53] *** domidumont left
[15:55] *** luke_ joined
[15:55] *** luke_ is now known as Guest77798

[15:55] *** Guest77798 is now known as luke__

[15:56] *** luke__ is now known as luke___

[15:56] *** mr-foobar joined
[15:56] <luke___> Hello, I'm using the Rakudo compiler and I'm wondering what the -n option does exactly

[15:57] <luke___> I know that it loops  over each line on input, but is there a way to set code to be executed after the loop?

[15:57] *** mcmillhj left
[15:58] <AlexDaniel> luke___: LAST should work

[15:58] *** Phi_mb joined
[15:58] <AlexDaniel> luke___: https://docs.perl6.org/language/phasers#LAST

[15:58] *** Phi_mb is now known as philomath

[15:58] *** MilkmanDan left
[15:59] *** mcmillhj joined
[15:59] *** levex joined
[15:59] *** levex is now known as Guest75775

[15:59] <[Coke]> luke___: cat /etc/passwd | perl6 -ne '.say; END {say "EEK"}'

[15:59] <[Coke]> (I tried LAST, no luck)

[16:00] *** MilkmanDan joined
[16:00] <AlexDaniel> huh

[16:00] *** philomath_ left
[16:00] <AlexDaniel> I was 100% convinced that it was working

[16:01] <luke___> Since I'm going to use it for golfing, END is even better ;-)

[16:01] <AlexDaniel> hah

[16:01] <AlexDaniel> luke___: anyway, I created this issue: https://github.com/perl6/doc/issues/1668

[16:01] *** rodrigok joined
[16:02] <AlexDaniel> luke___: is it https://code-golf.io/ ? :)

[16:02] <luke___> I'm on codegolf.stackexchange.com

[16:02] <AlexDaniel> ah okay

[16:02] *** mempko joined
[16:03] <luke___> This is my current solution: https://codegolf.stackexchange.com/a/147584/63774

[16:03] <luke___> As it's twice as long as the Perl 5 solutions, I'm quite sure I can do it a lot shorter

[16:03] <luke___> But since I only started learning Perl 6 3 days ago, I don't think it's too bad...

[16:04] *** khw joined
[16:06] <luke___> Is there a variable that is auto-initialised to 0?

[16:06] *** ryn1x joined
[16:06] *** ryn1x_ joined
[16:08] *** darkmorph left
[16:09] *** lostinfog joined
[16:09] <[Coke]> m: my $a; say ++$a;

[16:09] <camelia> rakudo-moar f8e1a5faa: OUTPUT: «1␤»

[16:09] <Geth> ¦ perl6.org: 634f187e7e | (Steve Mynott)++ | 2 files

[16:09] <Geth> ¦ perl6.org: Rakudo Star 2017.10

[16:09] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/634f187e7e

[16:10] *** neilb left
[16:10] *** ryn1x left
[16:10] *** ryn1x_ left
[16:17] *** census left
[16:19] *** lostinfog left
[16:20] <ZzZombo> @!children.grep({.isa(Grammar::VDF::Key-Value) && (!@names || .name eq @names.any)}); #this returns all values, probably filtered by name(s)

[16:20] <ZzZombo> @!children.first({.isa(Grammar::VDF::Key-Value) && .name eq $name}); #this is supposed to give first matching value, but always gives Nil, while the first works. What's wrong?

[16:20] *** mr-foobar left
[16:25] <stmuk> http://rakudo.org/2017/11/09/announce-rakudo-star-release-2017-10/

[16:26] <[Coke]> stmuk++ #thanks for all the star releases!

[16:26] *** mr-foobar joined
[16:28] *** Guest75775 is now known as Levex

[16:28] *** Levex left
[16:28] *** Levex joined
[16:30] *** Exodist left
[16:31] *** lowbro left
[16:31] *** mr-foobar left
[16:31] *** Exodist joined
[16:32] *** wamba left
[16:33] *** troys joined
[16:33] *** ryn1x joined
[16:37] <Geth> ¦ doc: 2ca0128323 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/5to6-nutshell.pod6

[16:37] <Geth> ¦ doc: Try to workaround busted link parser

[16:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2ca0128323

[16:37] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[16:37] *** ryn1x_ joined
[16:37] *** ryn1x__ joined
[16:40] *** zakharyas left
[16:40] *** Exodist left
[16:42] *** Exodist joined
[16:43] *** rgrau joined
[16:43] *** ryn1x_ left
[16:43] *** ryn1x__ left
[16:44] *** ryn1x left
[16:48] *** Exodist left
[16:51] *** Exodist joined
[16:54] *** philomath left
[16:54] *** philomath joined
[16:57] *** ryn1x joined
[16:58] *** ryn1x_ joined
[16:58] *** ryn1x__ joined
[16:59] *** abraxxa left
[17:01] *** Exodist left
[17:05] *** mcmillhj left
[17:05] *** Exodist joined
[17:07] *** Cabanossi left
[17:08] *** Cabanossi joined
[17:10] *** eliasr left
[17:11] *** ryn1x__ left
[17:12] *** ryn1x left
[17:12] *** ryn1x_ left
[17:19] *** havenwood joined
[17:20] <havenwood> I recall from years ago that there was a way to enforce OO style method calls, but I'm not coming up with anything searching for it. Is the "use oo" directive still a thing?

[17:20] <Juerd> What does "OO style" mean?

[17:22] <havenwood> Juerd: `"hi".say` enforced over `say("hi")`

[17:22] <havenwood> Or the other way around.

[17:26] <perlpilot> "enforced" doesn't sound very perlish

[17:30] *** mcmillhj joined
[17:32] *** aindilis left
[17:33] *** aindilis joined
[17:36] *** mcmillhj left
[17:36] <Juerd> havenwood: The latter is not a method call, but a function call.

[17:37] <havenwood> Juerd: Right, I'd swear there was a way to limit to only function calls or method on receiver calls.

[17:37] <ilmari> say is both a built-in function and a method on Mu

[17:37] *** wamba joined
[17:37] <havenwood> Juerd: Maybe I'm thinking of another language, or maybe it was removed. I'm at a loss...

[17:37] <ilmari> sounds like you want a linter

[17:38] *** Cabanossi left
[17:38] *** Cabanossi joined
[17:41] *** ryn1x joined
[17:41] *** mson joined
[17:42] *** ryn1x_ joined
[17:44] *** mcmillhj joined
[17:46] *** ryn1x left
[17:47] *** ryn1x_ left
[17:54] <wander> how can I convert `grammar { token Top { | a { say 42 } | b { say 10} } }` into grammar with actions object?

[17:55] *** wamba left
[17:55] <wander> that is, I have alternations. for this case, maybe I can test what `$/` is, but how about things go complex?

[17:57] *** wamba joined
[17:57] <moritz> when things become complex, you move the branches to separate regexes or tokens

[17:57] <moritz> and then the token that matches triggers its own action method

[17:59] <wander> ok

[18:04] *** wamba left
[18:05] *** Cabanossi left
[18:08] *** Cabanossi joined
[18:12] *** darkmorph joined
[18:20] *** ryn1x joined
[18:20] *** ryn1x_ joined
[18:20] *** ryn1x__ joined
[18:22] *** rodrigok left
[18:23] <moritz> wander: have you looked at a few existing, working grammars, and looked how they do things?

[18:23] <[Coke]> havenwood: being able to restrict that doesn't sound familiar to me.

[18:24] <moritz> there are a few grammars for existing formats on modules.perl6.org that are less than a screen page each, and work well

[18:27] <wander> Not a medium size project. Rakudo's Grammar.nqp is too large to understand well, demo grammars are not very practical.

[18:30] <moritz> I'm not talking about demos

[18:30] <moritz> there are working INI and JSON grammars, for example

[18:30] *** troys is now known as troys_

[18:31] <moritz> a Fortran grammar that has ~100 lines: https://github.com/nobodyinperson/perl6-fortran-grammar/blob/master/lib/Fortran/Grammar.pm6 (no idea how good it is though)

[18:33] <moritz> JSON: https://github.com/moritz/json/blob/master/lib/JSON/Tiny/Grammar.pm

[18:34] <moritz> INI: https://github.com/tadzik/perl6-Config-INI/blob/master/lib/Config/INI.pm

[18:34] *** setty1 joined
[18:35] *** ExtraCrispy left
[18:35] *** troys_ is now known as troys

[18:37] *** mr-foobar joined
[18:38] * wander have opened the links and write them on the note

[18:39] <wander> Here is my practice in grammar: https://gist.github.com/W4anD0eR96/8ea22f570f1ef30a9204a6a98878e36e

[18:40] <wander> Part of a lesson task, convert C code(subset of grammar) into an intermediate code

[18:40] *** darutoko left
[18:40] <wander> ugly though

[18:47] *** llfourn left
[18:49] *** perlpilot left
[18:52] *** dakkar left
[18:53] *** ryn1x__ left
[18:53] *** ryn1x_ left
[18:54] *** ryn1x left
[18:54] *** mr-foobar left
[18:55] *** mr-foobar joined
[19:00] *** ryn1x joined
[19:04] *** dugword joined
[19:04] *** wamba joined
[19:04] *** ryn1x left
[19:06] *** philomath left
[19:08] *** raschipi joined
[19:14] *** cdg joined
[19:16] *** ryn1x joined
[19:16] *** ryn1x_ joined
[19:17] *** cdg_ left
[19:20] *** cdg left
[19:21] *** cdg joined
[19:21] *** ryn1x left
[19:21] *** ryn1x_ left
[19:26] *** raschipi left
[19:26] *** cdg left
[19:31] *** cdg_ joined
[19:37] *** cdg joined
[19:39] *** ryn1x joined
[19:40] *** ryn1x_ joined
[19:40] *** daniel__ joined
[19:40] *** cdg_ left
[19:41] <daniel__> Hello all!

[19:41] *** domidumont joined
[19:41] <DrForr> Evenin'.

[19:41] <luke___> Hello

[19:41] *** cdg left
[19:42] <daniel__> I have a strange issue with $@ that I am trying to wrap my ahead around. $@ starts out populated, but after the statement "if ($@)", it is empty.

[19:42] <daniel__> Stranger still, "if ($@)" evaluates true

[19:43] <moritz> daniel__: are you actually using Perl 6?

[19:43] <moritz> if not, you should try #perl

[19:43] <daniel__> Oops, that is my bad, thank you

[19:43] *** daniel__ left
[19:44] *** ryn1x left
[19:44] *** ryn1x_ left
[19:46] *** dj joined
[19:48] *** dugword left
[19:48] <dj> howdy.  I'm probably not the first to notice this: at the bottom of https://perl6.org/compilers/features it claims to be updated hourly, but the timestamps below that are quite old (from 2016)

[19:49] <geekosaur> that page probably shouldn't exist any more

[19:50] <dj> the latest rakudo announcement references it

[19:50] <moritz> dj: thanks for the report

[19:50] *** havenwood left
[19:50] *** Levex left
[19:52] <geekosaur> let me correct that: comparisons to niecza (and pugs mentioned at the bottom) shouldn't exist any more.

[19:55] *** mr-foobar left
[20:01] *** rgrau left
[20:04] *** mr-foobar joined
[20:08] *** geospeck joined
[20:11] *** comborico1611 left
[20:13] *** troys is now known as troys_

[20:13] <ufobat_> is perl6/roast the complete testsuite for perl6 or is there somewhere something else? in other workds, if i make a change and pass the spectest it's okay so far

[20:14] *** ryn1x joined
[20:14] <AlexDaniel> ufobat_: there are also some rakudo-specific tests: https://github.com/rakudo/rakudo/tree/master/t

[20:14] <moritz> ufobat_: there are some tests local to rakudo (in the t/) directory too, but not too many

[20:14] <moritz> ufobat_: in rakudo, if you do a "make test" and a "make spectest", you should be covered

[20:15] <ufobat_> ok, ty :-)

[20:15] *** ryn1x_ joined
[20:16] *** comborico1611 joined
[20:17] *** ryn1x__ joined
[20:18] *** wander left
[20:21] *** Cabanossi left
[20:23] *** Cabanossi joined
[20:25] *** mr-foobar left
[20:26] *** nadim joined
[20:26] *** mr-foobar joined
[20:31] *** espadrine joined
[20:31] *** Voldenet joined
[20:31] *** Voldenet left
[20:31] *** Voldenet joined
[20:34] <leont> Regarding the picture thing, I remember a picture of perl6 people being taken at an NLPW 1 or 2 years ago, probably by woolfy, that may be suitable (though I still would recommend checking it with people first)

[20:34] <DrForr> leont: I'd guess it's the one we're using on the FB Perl 6 group backdrop.

[20:37] *** mson left
[20:39] *** eliasr joined
[20:40] *** mson joined
[20:40] *** yoleaux joined
[20:40] *** ChanServ sets mode: +v yoleaux

[20:41] * leont given myself a FB-free month, so I can't check :-)

[20:46] <DrForr> Good call.

[20:47] <tadzik> we'll give you a coin after 12 months :P

[20:47] <DrForr> Bitcoin? Sign me up!

[20:47] *** ryn1x_ left
[20:48] *** ryn1x__ left
[20:48] *** ryn1x left
[20:48] <moritz> a dogecoin maybe :-)

[20:49] <tadzik> a dogecoin tipbot on #perl6, that'd be quite something :)

[20:49] <DrForr> WTH do Venetian rulers have to do with blockchains?

[20:49] *** levex joined
[20:50] *** zakharyas joined
[20:50] *** levex is now known as Guest13239

[20:50] *** Cabanossi left
[20:51] <tadzik> sounds like there's more meanings to "doge" that I was aware of :o

[20:52] <DrForr> When Venice was at the height of its power, they elected their rulers and called them doges.

[20:54] *** Cabanossi joined
[20:54] *** zakharyas left
[20:54] *** zakharyas joined
[20:54] <moritz> https://en.wikipedia.org/wiki/Dogecoin

[20:55] *** mr-foobar left
[20:56] *** zakharyas left
[20:57] *** mr-foobar joined
[20:57] *** zakharyas joined
[20:58] * DrForr wishes he had a fan. The downstairs neighbors are having goulash, and it's all over.

[20:59] *** yht left
[21:02] <tadzik> ach, the smell of goulash... a double-edged sword

[21:04] <DrForr> Indeed. There's a place by the office that makes the good stuff, but I don't have to live above it :)

[21:06] <DrForr> Hrm, I'm moving above a Chinese restaurant tomorrow, maybe I should have thought about that.

[21:07] <DrForr> It might also increase the odds of Kristen Wiig being in the neighborhood, so there's an upside.

[21:08] *** cdg joined
[21:09] *** cdg left
[21:09] *** cdg_ joined
[21:11] *** cdg_ left
[21:11] *** cdg joined
[21:15] *** cdg left
[21:17] *** philomath joined
[21:18] *** philomath left
[21:18] *** zakharyas left
[21:18] *** cdg joined
[21:19] <tadzik> hmm, a "cascade operator": https://gist.githubusercontent.com/kasperpeulen/587f0b225c3ad5e1fc338e0c10002918/raw/e25231bd3dc8ceec7a80a03967b9541bf002e128/cascade.dart

[21:19] <tadzik> is there a module for it already? :)

[21:19] *** cdg_ joined
[21:19] *** zakharyas joined
[21:20] *** domidumont left
[21:21] <tadzik> oh, and I haven't said it here yet: consider getting a dashcam if you drive a car

[21:21] <tadzik> people can be... surprising sometimes

[21:21] *** Cabanossi left
[21:21] <moritz> like, throwing themselves before your car to claim insurance?

[21:22] <tadzik> I head about that happening too, in my case it was a Moose Test with another car playing the Moose role

[21:22] <tadzik> I passed but ripped a tire on a curb, now the cost is on me

[21:22] *** geospeck left
[21:23] *** cdg left
[21:23] <tadzik> (also, it might've made a really cool replay :P)

[21:23] <moritz> ah, good old Moose :/

[21:24] *** Cabanossi joined
[21:25] *** mr-foobar left
[21:25] <comborico1611> I'm frustrated guys.

[21:25] <tadzik> how can we help? :)

[21:26] <comborico1611> You know those people who want to be a programmer, but they don't like math problems?

[21:26] <tadzik> sure

[21:26] *** mr-foobar joined
[21:26] <comborico1611> Well, I'm one of those.

[21:26] <tadzik> so, you're looking for exercises but don't like project euler?

[21:26] <DrForr> Project Eule?

[21:26] *** ryn1x joined
[21:26] *** ryn1x_ joined
[21:26] <comborico1611> I have interest in networking. And I've even read 1.5 books on it.

[21:26] *** ryn1x__ joined
[21:26] <DrForr> *Euler

[21:27] <comborico1611> Well my frustration comes from and unsure position whether I should continue trying to be programmer.

[21:27] <tadzik> why do you think you shouldn't?

[21:28] <tadzik> does everyone feel like a math geek and you feel out of place, or?

[21:28] <comborico1611> The route I was told to get into networking is first to learn C, which is where I'm having a problem.

[21:29] <comborico1611> The practice problems in most of the programming books or heavily math-related. So I typically skip those.

[21:29] <DrForr> Most of what I do for work is implementing business logic which is nowhere near hardcore math.

[21:29] <tadzik> +1

[21:29] <comborico1611> That's encouraging to hear. Thanks.

[21:29] <tadzik> the most advanced math I ever used in my "career" was a cos(x) function. And I say career in quotes because it was for a university project

[21:30] <tadzik> that was... let's see

[21:30] <tadzik> 4 years ago apparently

[21:30] <comborico1611> So I recently bought a bundle of books. Three of them are about C or Unix related. Two of them are concerning cplusplus framework called I can't remember it's for a networking.

[21:30] <tadzik> oh sorry, it was atan() actually :)

[21:30] <moritz> comborico1611: learning C for network programming is very old school. You can do with dynamic languages (Python, Perl), or Go if you need higher performance

[21:31] <DrForr> I've done N-gram cluster analysis for lexemes, which is fairly intense, but I was also doing more of the R portion of R&D.

[21:31] <moritz> and Perl/Python/Go are easier on the beginner than C or C++

[21:31] <tadzik> I'd say C is a useful rite of passage if you want to get into programming for programming's sake

[21:31] <comborico1611> Moritz, but the good resources that people recommend are typically in C.

[21:32] <tadzik> it's definitely beneficial to know how things work under the hood when writing a highlevel code, but nowhere near essential

[21:32] <tadzik> so what books did you buy, comborico1611?

[21:33] <DrForr> The goulash has dissipated, yay. About to start freezing here.

[21:33] <moritz> though some of the best networking people I know only do a little programming

[21:33] <comborico1611> In my mind, I'm trying to attain a higher level of networking skills, because I'm not interested in creating programs, mainly because I'm not good at problem solving.  I suspect that networking is more repetitious than General software development.

[21:33] <moritz> but they know all about BGP, VPLS, router configuration, VLANs and all that good stuff

[21:34] <comborico1611> Networking (that famous one). Let me go upstairs and check but they're all called.

[21:34] <DrForr> These days there's a big push to automate a lot of that, so Docker/ansible is useful too.

[21:34] <tadzik> by The Guy? :P

[21:34] <tadzik> it rings a bell

[21:35] <comborico1611> Okay so the granddaddy book is UNIX Network programming by Stevens.

[21:35] <comborico1611> You need to know C to understand that.

[21:35] *** dogbert17 joined
[21:36] <comborico1611> Someone recommended learning about computer systems before learning C because that would make things easier. So I bought computer systems by Bryant.

[21:37] <comborico1611> I read computer networking by kurose, and it was easy to understand and interesting.

[21:38] <comborico1611> Another Unix book is UNIX systems programming by Robbins, which you need to know C 4.

[21:38] <comborico1611> And then a small book like a hundred Pages called pocket socket guide which is written in C as well.

[21:38] <tadzik> hm

[21:38] <comborico1611> And like I said, two books 4 C plus plus networking using the ace framework.

[21:39] <DrForr> Well, beyond pointer math there's really not a lot of intense math involved in the network layers...

[21:39] <tadzik> C can be a bit intimidating, but the upside is, once you understand it, little will be able to scare you :)

[21:39] <comborico1611> Nope. Learning the router algorithms we're difficult and I skipped it.

[21:39] <moritz> DrForr: there's always bit operations for dealing with IP network addresses and stuff

[21:40] <comborico1611> Bit operations meaning requiring C?

[21:40] <DrForr> Yea, but I don't count those as "advanced." But my background is maths.

[21:40] <DrForr> comborico1611: You can do bitwise stuff in most languages.

[21:41] <comborico1611> And then I bought Pearl 6 because I felt like it was such a radically different programming language that knowledge of it may help steer me in the right direction.

[21:43] <DrForr> Perl actually gets used quite a bit for socket and network stuff, especially for people banging out exploit POCs because packet creation is simple with the pack() instructions.

[21:43] <comborico1611> But one thing I learned in dealing with these books in the last 9 months is that I definitely prefer a certain Style of writing.

[21:44] <comborico1611> Hmm. That's good to know, drforr

[21:45] <tadzik> is it C itself that you have trouble with, or the math/algorithms involved?

[21:45] *** troys_ is now known as troys

[21:46] <DrForr> The pointer stuff can be intimidating, Perl abstracts that away from you.

[21:47] <DrForr> But of course if you haven't done much in C you won't know what I'm taling about.

[21:47] <comborico1611> I'm having problems with c because the layout of the book is topical based. the author does not hold your hand and introduce topics to you slowly. It is essentially a reference manual. In fact that's the title of the book. Lol

[21:48] *** yoleaux left
[21:48] <comborico1611> I could follow along with pointers in C plus plus. At least at a basic level.

[21:48] *** dugword joined
[21:48] <DrForr> I haven't done C seriously for probably a decade, can't advise on books.

[21:49] *** yoleaux joined
[21:49] *** ChanServ sets mode: +v yoleaux

[21:49] <comborico1611> If I know the fundamentals of perl 6, would I be able to get along and perl 5 if I needed to?

[21:49] *** yoleaux left
[21:50] <comborico1611> Along with" perl 5. Let me switch to an actual keyboard.

[21:50] <tadzik> sure

[21:50] <tadzik> it may seem weird at places ;)

[21:50] <teatime> comborico1611: there's not really suuuper similar, nothing like python 2 vs. 3, but a lot of the coolest/nicest perl6 features have been backported to perl5 it seems like

[21:50] <teatime> I don't really do perl5 or keep up w/ it these days

[21:51] <teatime> comborico1611: warning:  you may find yourself getting along fine but constantly wishing it was perl6

[21:51] <teatime> I seem to do that w/ every language now

[21:51] <tadzik> I do Perl 5 mostly these days, and... exactly what teatime says

[21:51] <tadzik> wishing it was perl 6

[21:51] *** zakharyas left
[21:52] <DrForr> When I teach Perl6 I find that I have to explain "yes, it's quite a bit different than how 5 does it."

[21:52] <El_Che> You loose a lot of built-in perl6 features, you win order of magnitudes in modules

[21:52] *** colomon_ joined
[21:53] <tadzik> and quite a bit of performance :)

[21:53] <DrForr> El_Che: But we have Inline::Perl5 to bridge the gap :)

[21:53] <El_Che> DrForr: while I appreciate the smart people that did that, no :)

[21:54] <El_Che> you don't want to manage 2 chains of dependencies

[21:55] *** mr-foobar left
[21:55] *** MasterDuke left
[21:56] *** colomon left
[21:56] *** colomon_ is now known as colomon

[21:56] <tadzik> . o O ( I wish I only had 2 chains to manage :P )

[21:56] *** mr-foobar joined
[21:57] <DrForr> Nod, I've been having trouble coming up with a good migration strategy.

[21:57] <El_Che> this weak I hit a perl5 problem, that reminded me of perl6 weak points: deployment

[21:57] <El_Che> week

[21:57] *** dugword left
[21:58] <El_Che> I was migrating a perl 5 project to docker. Part of the migration is using Hashicorp's Vault for storing secrets. Because it's not a inhouse soft, the most plausible option was writing a wrapper that queries Vault en injects the secrets

[21:58] <El_Che> I wrote the thing in Perl 5 and it had more dependencies that the actual soft we were running

[21:59] *** yoleaux joined
[21:59] *** ChanServ sets mode: +v yoleaux

[21:59] <El_Che> so with pain in my heart I started rewriting the wrapper in go

[21:59] <teatime> my personal site / ssg involves ruby, javascript, haskell, may soon adopt some Lua, hrm.. I think I eliminated python

[21:59] <teatime> considering adding perl6 :)

[21:59] <El_Che> teatime: we have a small perl6 project in production. Want to migrate to docker soon as well :)

[22:00] *** ryn1x left
[22:00] *** releasable6 left
[22:00] *** ryn1x__ left
[22:00] *** ryn1x_ left
[22:00] *** releasable6 joined
[22:00] <teatime> I installed docker, which upon apt-get install, makes a network bridge and assigns it an address from a subnet it hopes you're not using, 172.0.0.1 ... which happens to be my LAN subnet and gateway IP

[22:01] <teatime> I'm like, "how the heck is docker getting my default route IP and then why is it making it the bridge iface addr", but no, it was just bad luck / coincidence

[22:01] <teatime> sorry, 172.17.0.1

[22:01] <El_Che> teatime: I suspect it's the distro's fault

[22:01] <El_Che> I don't know if it's harcoded

[22:01] <teatime> well it's the docker project's packages, it's not in debian's repos

[22:01] <El_Che> (all the tutorials point to that though)

[22:02] <El_Che> we're having good results with docker + ipv6

[22:02] <El_Che> all the ipv4 iptables+forwarder magic disappears

[22:02] <teatime> it would also be nice if you could change just that property of the docker network, but it seems I have to delete it and re-create it from scratch.

[22:02] <comborico1611> Teatime, thanks for the info!

[22:04] *** comborico joined
[22:04] <teatime> yvw

[22:06] *** Cabanossi left
[22:06] *** yoleaux left
[22:06] *** yoleaux joined
[22:06] *** ChanServ sets mode: +v yoleaux

[22:08] *** Cabanossi joined
[22:13] *** mcmillhj left
[22:13] *** salv0 left
[22:18] *** setty1 left
[22:21] *** mcmillhj joined
[22:22] *** rindolf left
[22:25] *** mempko left
[22:26] *** mcmillhj left
[22:29] *** ryn1x joined
[22:29] *** ryn1x_ joined
[22:29] *** ryn1x__ joined
[22:29] *** comborico left
[22:30] *** mcmillhj joined
[22:33] *** ryn1x__ left
[22:33] *** ryn1x_ left
[22:33] *** ryn1x left
[22:34] *** MasterDuke joined
[22:36] *** mcmillhj left
[22:39] *** jonas1 left
[22:43] <samcv> m: <a ab bc ad ba>.comb(/\S*a\S*/).say

[22:43] <camelia> rakudo-moar d6cd0d2f5: OUTPUT: «(a ab ad ba)␤»

[22:43] <samcv> m: <a ab bc ad ba>.comb(m/\S*a\S*/).say

[22:43] <camelia> rakudo-moar d6cd0d2f5: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤Cannot resolve caller comb(Str: Nil); none of these signatures…»

[22:43] <samcv> is this supposed to work? there's a roast test that's skipped

[22:43] <samcv> my first thought is to say that the test is wrong, but maybe someone else can confirm/deny that

[22:46] *** mcmillhj joined
[22:47] *** raschipi joined
[22:51] *** raschipi left
[22:52] *** mcmillhj left
[22:52] *** Cabanossi left
[22:53] *** Cabanossi joined
[22:56] *** mr-foobar left
[22:57] *** mr-foobar joined
[22:59] *** mcmillhj joined
[23:01] *** ryn1x joined
[23:01] *** ryn1x_ joined
[23:01] *** ryn1x__ joined
[23:01] *** mempko joined
[23:01] *** wamba left
[23:04] *** neilb joined
[23:04] *** mcmillhj left
[23:07] *** comborico1611 left
[23:07] *** mson left
[23:08] *** comborico1611 joined
[23:12] *** mcmillhj joined
[23:17] *** mcmillhj left
[23:21] *** neilb left
[23:26] *** mr-foobar left
[23:26] *** mcmillhj joined
[23:26] *** neilb joined
[23:29] *** mr-foobar joined
[23:32] *** mcmillhj left
[23:34] *** ryn1x_ left
[23:34] *** ryn1x__ left
[23:34] *** ryn1x_ joined
[23:34] <TimToady>  samcv: no, that shouldn't work, since m// matches against $_ before ever .comb is called

[23:34] *** ryn1x__ joined
[23:34] *** pmurias left
[23:35] *** dct left
[23:37] *** dct joined
[23:39] *** ryn1x__ left
[23:39] *** ryn1x_ left
[23:39] *** ryn1x left
[23:41] *** mcmillhj joined
[23:43] *** ryn1x joined
[23:46] *** mcmillhj left
[23:46] <El_Che> \o/ <-- I finally have rakudo alpine packages. Important addition for containers

[23:47] <El_Che> still some small stuff to fix before release

[23:49] *** ryn1x_ joined
[23:49] *** ryn1x__ joined
[23:50] *** dogbert17 left
[23:54] *** ryn1x left
[23:54] *** ryn1x_ left
[23:54] *** ryn1x__ left
[23:55] *** mr-foobar left
[23:56] *** dct left
[23:56] *** mr-foobar joined
[23:56] *** ryn1x_ joined
[23:56] *** ryn1x joined
[23:57] *** mcmillhj joined
[23:59] *** ryn1x__ joined
