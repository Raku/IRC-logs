[00:00] *** ksn00b joined
[00:01] <ksn00b> How is it possible to use enum within 'given'/'when' scope?

[00:01] *** adu left
[00:03] *** Dee22 joined
[00:04] <ksn00b> This is my code: https://pastebin.com/QKXKdJay

[00:05] *** AndyDee left
[00:15] *** adu joined
[00:19] *** Dee22 left
[00:20] *** AndyDee joined
[00:21] *** AndyDee left
[00:21] *** sammers joined
[00:24] <MasterDuke> tbrowder: something like this perhaps? `for $pod -> $_ is rw { $_ = pod2text($_) }; my $string = $pod.join("\n\n");`

[00:30] *** ne_robot left
[00:32] *** adu left
[00:39] *** [1]Jarryd98 joined
[00:40] *** mcmillhj joined
[00:40] *** Jarryd98 left
[00:40] *** [1]Jarryd98 is now known as Jarryd98

[00:43] <tbrowder> thanks, MasterDuke, I'll try that!

[00:48] *** mcmillhj left
[00:54] *** Actualeyes left
[00:56] *** sammers left
[01:01] *** zapwai joined
[01:01] <Zoffix> .tel ksn00b yes, `when` can smartmatch one an Enum. Your issue was you used commas inside the `<...>`. The angle brackets already separate on space; no need for commas. Also, enums can start at values other than 0. Also, `when` can be used without a `give`. It smartmatches against the topic (the $_ variable). https://gist.github.com/zoffixznet/1fe539715b0332be7361990785b0dd87

[01:01] <Zoffix> .tell ksn00b yes, `when` can smartmatch one an Enum. Your issue was you used commas inside the `<...>`. The angle brackets already separate on space; no need for commas. Also, enums can start at values other than 0. Also, `when` can be used without a `give`. It smartmatches against the topic (the $_ variable). https://gist.github.com/zoffixznet/1fe539715b0332be7361990785b0dd87

[01:01] <yoleaux> Zoffix: I'll pass your message to ksn00b.

[01:01] *** Zoffix left
[01:06] *** ksn00b left
[01:08] *** [1]Jarryd98 joined
[01:10] *** Jarryd98 left
[01:10] *** [1]Jarryd98 is now known as Jarryd98

[01:33] *** mcmillhj joined
[01:36] <zengargoyle> https://gist.github.com/zengargoyle/5a14f01a35918f6c3391b90e9b85a22a

[01:36] *** zacts left
[01:36] <zengargoyle> if somebody could tell me whether this is a bug or just some other misunderstanding i would much appreciate it. :)

[01:38] *** ksn00b joined
[01:42] *** mcmillhj left
[01:42] *** Cabanossi left
[01:43] *** araraloren_ joined
[01:43] *** [1]Jarryd98 joined
[01:43] *** Cabanossi joined
[01:44] <ksn00b> Zoffix: ah.. That was my mistake, thanks.

[01:44] <yoleaux> 01:01Z <Zoffix> ksn00b: yes, `when` can smartmatch one an Enum. Your issue was you used commas inside the `<...>`. The angle brackets already separate on space; no need for commas. Also, enums can start at values other than 0. Also, `when` can be used without a `give`. It smartmatches against the topic (the $_ variable). https://gist.github.com/zoffixznet/1fe539715b0332be7361990785b0dd87

[01:45] *** mcmillhj joined
[01:45] *** Jarryd98 left
[01:45] *** [1]Jarryd98 is now known as Jarryd98

[01:46] *** araraloren left
[01:46] *** ilbot3 left
[01:46] *** araralonre__ joined
[01:47] *** araraloren_ left
[01:48] <timotimo> zengargoyle: not only does the one with the whatever star match "only the last", it'll match the last as many times as there are matchers

[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:48] <timotimo> looks like it's not closing over the $r as much as you were expecting, and i'm not sure what amount of closing is to be expected here

[01:50] <timotimo> more likely the regex compilation isn't closing over the $r as much as you're expecting it to

[01:50] <timotimo> i should really go to sleep before the damn birds start yelling at me again

[01:51] *** Actualeyes joined
[01:52] *** [1]Jarryd98 joined
[01:53] <zengargoyle> so the additional -> code is somehow makes $r more closed.  why doesn't this affect the eq version as well or is it just some regex thing.  hrm...

[01:54] *** Jarryd98 left
[01:54] *** [1]Jarryd98 is now known as Jarryd98

[01:54] *** mcmillhj_ joined
[01:57] *** mcmillhj left
[01:59] *** mcmillhj_ left
[02:00] <zengargoyle> heh, maybe it's just a fluke that the eq version works in the first place. :)

[02:00] *** araralonre__ left
[02:03] *** AlexDaniel left
[02:05] *** mcmillhj joined
[02:14] *** mcmillhj left
[02:15] *** mcmillhj joined
[02:15] *** adu joined
[02:19] <tbrowder> all: thanks to kurahaupo's word description and MasterDuke's hint, I think a long-standing bug in Pod::To::Text may be fixed. it now successfully extracts pod from S26-documention.pod without error. I will submit PR tomorrow.

[02:20] <committable6> tbrowder, https://gist.github.com/0ae5466dc9480c3326953a6b176d29e1

[02:21] <tbrowder> going to bed a happy camper...

[02:23] *** mcmillhj_ joined
[02:26] *** mcmillhj left
[02:27] *** Cabanossi left
[02:28] *** mcmillhj_ left
[02:28] *** Cabanossi joined
[02:29] *** cyphase left
[02:34] *** cyphase joined
[02:39] *** adu left
[02:42] <dwarring> ksn00b: how about starting the enum at zero

[02:42] <dwarring> enum MyEnum <zero one two three>

[02:45] *** adu joined
[02:46] <BenGoldberg> Deliberately misnaming enum constants is a hilarious way to confuse your readers.

[02:46] <dwarring> ksn00b: https://gist.github.com/dwarring/84be2b06ddf73c7d02f68090f429512c

[02:47] <dwarring> BenGoldberg: yup

[02:47] <BenGoldberg> m: enum MyEnum <zero one two three>; say one;

[02:47] <camelia> rakudo-moar 608e88: OUTPUT: ¬´one‚ê§¬ª

[02:48] <dwarring> m: enum MyEnum <zero one two three>.pick; say one;

[02:48] <camelia> rakudo-moar 608e88: OUTPUT: ¬´one‚ê§¬ª

[02:48] <BenGoldberg> m: enum <one two three four five>; say two+three;

[02:48] <camelia> rakudo-moar 608e88: OUTPUT: ¬´3‚ê§¬ª

[02:49] <BenGoldberg> m: enum <one two three four five>; say two+three==four;

[02:49] <camelia> rakudo-moar 608e88: OUTPUT: ¬´True‚ê§¬ª

[02:50] <dwarring> m: enum MyEnum <zero one two three>.pick(*); say one;

[02:50] <camelia> rakudo-moar 608e88: OUTPUT: ¬´one‚ê§¬ª

[02:50] <dwarring> m: enum MyEnum <zero one two three>.pick(*); say two+three==four;

[02:50] <camelia> rakudo-moar 608e88: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    four used at line 1‚ê§‚ê§¬ª

[02:50] <dwarring> m: enum MyEnum <zero one two three four>.pick(*); say two+three==four;

[02:50] <camelia> rakudo-moar 608e88: OUTPUT: ¬´False‚ê§¬ª

[02:51] <BenGoldberg> m: enum M <one two three four five>; say M.pick;

[02:51] <camelia> rakudo-moar 608e88: OUTPUT: ¬´four‚ê§¬ª

[02:51] <dwarring> m: enum MyEnum <zero one two three four>.pick(*); say two+two==four;

[02:51] <camelia> rakudo-moar 608e88: OUTPUT: ¬´True‚ê§¬ª

[02:51] <dwarring> m: enum MyEnum <zero one two three four>.pick(*); say two+two==four;

[02:51] <camelia> rakudo-moar 608e88: OUTPUT: ¬´True‚ê§¬ª

[02:51] <BenGoldberg> m: enum M <one two three four five>; say M.pick(*);

[02:51] <camelia> rakudo-moar 608e88: OUTPUT: ¬´(three four one five two)‚ê§¬ª

[02:52] *** mcmillhj joined
[02:52] *** noganex_ joined
[02:55] *** noganex left
[02:55] *** Ben_Goldberg joined
[02:55] *** BenGoldberg left
[02:56] *** Ben_Goldberg is now known as BenGoldberg

[02:56] *** mcmillhj left
[02:57] *** Cabanossi left
[02:58] *** Cabanossi joined
[03:04] *** adu left
[03:05] *** ksn00b left
[03:06] *** mcmillhj joined
[03:11] *** Cabanossi left
[03:12] *** adu joined
[03:12] *** Cabanossi joined
[03:12] *** adu left
[03:12] *** mcmillhj_ joined
[03:17] *** mcmillhj_ left
[03:26] *** Actualeyes left
[03:34] *** mcmillhj left
[03:38] *** Actualeyes joined
[03:42] *** pilne left
[03:48] *** khw left
[03:48] *** mcmillhj joined
[03:49] *** zapwai left
[03:55] *** cgfbee left
[03:56] *** emeric left
[03:56] *** nowan left
[03:56] *** emeric joined
[03:57] *** nowan joined
[03:57] *** mcmillhj left
[04:00] *** mcmillhj joined
[04:00] *** cgfbee joined
[04:04] *** mcmillhj left
[04:18] <Geth> ¬¶ doc: a3e0260565 | (Gabor Szabo)++ | 2 files

[04:18] <Geth> ¬¶ doc: run accepting :err as well; How to fetch error from the resulting Proc object

[04:18] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a3e0260565

[04:34] *** travis-ci joined
[04:34] <travis-ci> Doc build errored. Gabor Szabo 'run accepting :err as well; How to fetch error from the resulting Proc object'

[04:34] <travis-ci> https://travis-ci.org/perl6/doc/builds/237377477 https://github.com/perl6/doc/compare/856e8465096f...a3e026056583

[04:34] *** travis-ci left
[04:37] *** bwisti left
[04:39] *** mcmillhj joined
[04:41] *** Cabanossi left
[04:42] *** Cabanossi joined
[04:43] *** mcmillhj left
[04:43] *** curan joined
[04:44] *** sivoais left
[04:46] *** BenGoldberg left
[04:53] *** sivoais joined
[04:53] *** araraloren joined
[04:59] *** Actualeyes left
[04:59] *** Herby_ left
[05:08] *** mcmillhj joined
[05:12] *** mcmillhj left
[05:15] *** aborazmeh joined
[05:15] *** aborazmeh left
[05:15] *** aborazmeh joined
[05:17] *** aborazmeh left
[05:18] *** pegop joined
[05:27] *** ufobat joined
[05:43] *** xtreak joined
[05:47] *** cpage left
[05:47] *** cpage joined
[05:53] *** domidumont joined
[05:53] *** cpage_ left
[05:54] *** cpage_ joined
[05:54] *** Cabanossi left
[05:57] *** Cabanossi joined
[05:57] *** mcmillhj joined
[05:57] *** xtreak left
[05:58] *** wamba joined
[05:58] *** domidumont left
[05:59] *** domidumont joined
[06:01] *** mcmillhj left
[06:03] *** skids left
[06:11] *** mcmillhj joined
[06:16] *** rindolf joined
[06:16] *** mcmillhj left
[06:20] *** domidumont left
[06:25] *** mcmillhj joined
[06:29] *** mcmillhj left
[06:48] *** mr-foobar left
[07:01] *** Actualeyes joined
[07:01] *** xtreak joined
[07:13] *** mcmillhj joined
[07:14] *** darutoko joined
[07:17] <Geth> ¬¶ Inline-Perl5: 693e576416 | (Stefan Seifert)++ | 2 files

[07:17] <Geth> ¬¶ Inline-Perl5: Do not import pragmas when loading Perl 5 modules.

[07:17] <Geth> ¬¶ Inline-Perl5: 

[07:17] <Geth> ¬¶ Inline-Perl5: Lower case module names are reserved for pragmas. It doesn't make sense to

[07:17] <Geth> ¬¶ Inline-Perl5: import them and the names may interfere with Perl 6' CORE subs.

[07:17] <Geth> ¬¶ Inline-Perl5: Fixes GH #92

[07:17] <Geth> ¬¶ Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/693e576416

[07:17] *** mcmillhj left
[07:28] *** mcmillhj joined
[07:32] *** mcmillhj left
[07:35] *** dakkar joined
[07:37] *** parv joined
[07:41] *** Cabanossi left
[07:41] *** mcmillhj joined
[07:42] *** Cabanossi joined
[07:44] *** domidumont joined
[07:46] *** mcmillhj left
[07:46] *** g4 joined
[07:46] *** g4 left
[07:46] *** g4 joined
[07:48] *** darutoko left
[07:49] *** Jarryd98 left
[07:49] *** Jarryd98 joined
[07:52] *** darutoko joined
[08:01] *** Jarryd98 left
[08:01] *** jonas2 joined
[08:02] *** Jarryd98 joined
[08:03] *** wamba left
[08:04] *** jonas2 left
[08:06] *** fatguy joined
[08:09] *** mcmillhj joined
[08:13] *** mcmillhj left
[08:16] *** zakharyas joined
[08:22] *** pmurias joined
[08:27] *** [1]Jarryd98 joined
[08:27] *** mcmillhj joined
[08:29] *** Jarryd98 left
[08:29] *** [1]Jarryd98 is now known as Jarryd98

[08:32] *** mcmillhj left
[08:37] *** jonas2 joined
[08:42] *** mcmillhj joined
[08:47] *** mcmillhj left
[08:54] *** wamba joined
[08:54] *** Cabanossi left
[08:56] *** gregf_ joined
[08:57] *** Cabanossi joined
[09:01] *** mcmillhj joined
[09:05] *** mcmillhj left
[09:22] *** vimal2012 joined
[09:23] *** vimal2012 left
[09:23] *** vimal2012 joined
[09:23] <vimal2012> p6: say 3

[09:23] <camelia> rakudo-moar 608e88: OUTPUT: ¬´3‚ê§¬ª

[09:27] *** moritz left
[09:27] *** freeze left
[09:27] *** vcv left
[09:27] *** [Coke] left
[09:27] *** jonas2 left
[09:27] *** xtreak left
[09:27] *** nowan left
[09:27] *** noganex_ left
[09:27] *** ilbot3 left
[09:27] *** araujo left
[09:27] *** ChoHag left
[09:27] *** pelev left
[09:27] *** xinming_ left
[09:27] *** aindilis left
[09:27] *** movl left
[09:27] *** jast left
[09:27] *** hythm left
[09:27] *** risou left
[09:27] *** LeCamarade left
[09:27] *** kst`` left
[09:27] *** dogbert17 left
[09:27] *** perlpilot left
[09:27] *** esh left
[09:27] *** Grrrr left
[09:27] *** giraffe left
[09:27] *** breinbaas left
[09:27] *** jdv79 left
[09:27] *** cxreg left
[09:27] *** Kaffe left
[09:29] *** AlexDaniel joined
[09:30] <AlexDaniel> greppable6: all\:

[09:30] <greppable6> AlexDaniel, https://gist.github.com/35e1df904a40be02dcceb4dae0487539

[09:30] <AlexDaniel> oh no wait, wrong bot‚Ä¶

[09:30] <AlexDaniel> quotable6: ‚Äòall:‚Äô

[09:31] <quotable6> AlexDaniel, https://gist.github.com/2ca292ff95a514527715a6d8fe74e631

[09:32] <AlexDaniel> quotable6: ^ ‚Äòall:‚Äô

[09:32] <quotable6> AlexDaniel, https://gist.github.com/0f0ae62506e02599b6ca4f88336ab3c7

[09:33] <AlexDaniel> okay‚Ä¶ so people do this too often

[09:42] *** fatguy left
[09:49] *** [Coke] joined
[09:49] *** vcv joined
[09:49] *** moritz joined
[09:51] *** luis left
[09:54] *** luis joined
[10:02] *** nowan joined
[10:02] *** mcmillhj joined
[10:05] <Geth> ¬¶ doc: dca7b697d1 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Proc.pod6

[10:05] <Geth> ¬¶ doc: Fix errors in example code

[10:05] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/dca7b697d1

[10:06] <Geth> ¬¶ doc: 9c1951e7c9 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Proc.pod6

[10:06] <Geth> ¬¶ doc: Remove proc runs from example testing

[10:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9c1951e7c9

[10:06] *** mcmillhj left
[10:11] *** margeas joined
[10:13] *** jonas2 joined
[10:13] *** noganex_ joined
[10:13] *** ilbot3 joined
[10:13] *** araujo joined
[10:13] *** ChoHag joined
[10:13] *** pelev joined
[10:13] *** xinming_ joined
[10:13] *** aindilis joined
[10:13] *** dogbert17 joined
[10:13] *** movl joined
[10:13] *** jast joined
[10:13] *** hythm joined
[10:13] *** risou joined
[10:13] *** LeCamarade joined
[10:13] *** kst`` joined
[10:13] *** perlpilot joined
[10:13] *** esh joined
[10:13] *** Grrrr joined
[10:13] *** giraffe joined
[10:13] *** breinbaas joined
[10:13] *** jdv79 joined
[10:13] *** cxreg joined
[10:13] *** Kaffe joined
[10:13] *** gensym joined
[10:13] *** obra joined
[10:13] *** alnewkir1 joined
[10:13] *** pm5 joined
[10:13] *** weber.freenode.net sets mode: +v ilbot3

[10:13] *** xtreak joined
[10:14] *** xtreak left
[10:15] *** pecastro left
[10:15] *** xtreak joined
[10:15] *** Exodist left
[10:16] *** pecastro joined
[10:18] *** Celelibi left
[10:18] *** parv left
[10:18] *** Exodist joined
[10:21] *** ne_robot joined
[10:24] *** travis-ci joined
[10:24] <travis-ci> Doc build errored. Zoffix Znet 'Remove proc runs from example testing'

[10:24] <travis-ci> https://travis-ci.org/perl6/doc/builds/237453972 https://github.com/perl6/doc/compare/dca7b697d1bf...9c1951e7c95b

[10:24] *** travis-ci left
[10:25] <ne_robot> ugexe: when I try to do the request to http://spys.ru/proxies with Net::HTTP::GET (https://pastebin.com/TMWcM99e), the website gives me 503; if I do the same thing with Python, it works - https://pastebin.com/xb9CnLT3

[10:26] <ne_robot> ugexe: what am I doing wrong with Perl6?

[10:29] *** colomon joined
[10:33] *** TEttinger left
[10:41] *** pmurias left
[10:41] *** travis-ci joined
[10:42] <travis-ci> Doc build passed. Zoffix Znet 'Fix errors in example code'

[10:42] <travis-ci> https://travis-ci.org/perl6/doc/builds/237453698 https://github.com/perl6/doc/compare/a3e026056583...dca7b697d1bf

[10:42] *** travis-ci left
[10:44] *** AlexDaniel left
[10:47] *** vimal2012 left
[10:49] *** vimal2012 joined
[10:51] *** mcmillhj joined
[10:55] *** vimal2012 left
[10:56] *** mcmillhj left
[11:04] *** mcmillhj joined
[11:05] *** travis-ci joined
[11:05] <travis-ci> Doc build passed. Zoffix Znet 'Remove proc runs from example testing'

[11:05] <travis-ci> https://travis-ci.org/perl6/doc/builds/237453972 https://github.com/perl6/doc/compare/dca7b697d1bf...9c1951e7c95b

[11:05] *** travis-ci left
[11:08] *** parv joined
[11:08] *** mcmillhj left
[11:11] *** robertle joined
[11:16] *** aborazmeh joined
[11:16] *** aborazmeh left
[11:16] *** aborazmeh joined
[11:18] *** Celelibi joined
[11:25] *** mr-foobar joined
[11:37] *** mcmillhj joined
[11:42] *** mcmillhj left
[11:47] *** Jarryd98 left
[11:48] *** mcmillhj joined
[11:53] *** mcmillhj left
[11:55] *** Cabanossi left
[11:57] *** Cabanossi joined
[12:01] *** itaylor57 left
[12:02] *** cpage left
[12:03] *** mcmillhj joined
[12:03] *** pmurias joined
[12:08] *** mcmillhj left
[12:09] *** xtreak left
[12:17] *** mcmillhj joined
[12:17] *** dogbert11 joined
[12:19] *** itaylor57 joined
[12:21] *** pilne joined
[12:22] *** mcmillhj left
[12:22] *** parv left
[12:25] *** Cabanossi left
[12:27] *** Cabanossi joined
[12:30] *** mcmillhj joined
[12:33] *** raschipi joined
[12:33] *** xtreak joined
[12:35] *** mcmillhj left
[12:51] *** xtreak left
[12:52] *** curt_ joined
[12:52] *** nadim joined
[12:53] *** mcmillhj joined
[13:05] *** Zoffix joined
[13:05] <Zoffix> How to get symbols the module exports via EXPORT sub?

[13:06] <Zoffix> m: require Test; dd ::('UNIT::Test::EXPORT::DEFAULT::&is')

[13:06] <camelia> rakudo-moar 608e88: OUTPUT: ¬´Sub is = sub is (;; Mu | is raw) { #`(Sub|75608552) ... }‚ê§¬ª

[13:06] <Zoffix> $ perl6 -Irepo/lib -e 'require Benchy; dd ::("UNIT::Benchy::EXPORT::DEFAULT::&b")'

[13:06] <Zoffix> Failure.new(exception => X::NoSuchSymbol.new(symbol => "UNIT::Benchy::EXPORT::DEFAULT::\&b"), backtrace => Backtrace.new)

[13:06] <Zoffix> Seems the above way only works for routines marked with `is export`

[13:08] <ufobat> is tehre a better way for sub a($a where {$a ~~ Int|Callable}) { ... }

[13:09] <Zoffix> ufobat: $a where Int|Callable

[13:09] <Zoffix> `where` smartmatches already

[13:10] <Zoffix> also: multi a (Int $a) {}; multi a (&a) {}

[13:12] <Geth> ¬¶ doc: 6a49dcccca | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[13:12] <Geth> ¬¶ doc: Remove note about Rakudo and EXPORT

[13:12] <Geth> ¬¶ doc: 

[13:12] <Geth> ¬¶ doc: AFAIK current way is the it's meant to work and the note implies

[13:12] <Geth> ¬¶ doc: it's a bug looking to be fixed.

[13:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6a49dcccca

[13:15] *** pmurias left
[13:16] <ufobat> thanks!

[13:16] <Zoffix> ufobat: now you help me :D

[13:16] *** pmurias joined
[13:17] <ufobat> oh my.. how? :D

[13:17] <Zoffix> ufobat: answer my question about require above

[13:19] <ufobat> i am afraid i cant :/

[13:19] <Zoffix> :)

[13:28] *** dwarring left
[13:28] <Zoffix> Well, don't know how to do above, but solved what I was /actually/ trying to do with this concoction: (try require ::("IRC::Client")) === Nil and (qx{git clone https://github.com/zoffixznet/perl6-IRC-Client/ repo},  (require ::("IRC::Client"))); my \IRC = ::("IRC::Client"); dd IRC.new

[13:29] <Zoffix> loading a module, with cloning a repo if the module fails to load, and loading from that 

[13:35] <araraloren> m: dd UNIT::.keys

[13:35] <camelia> rakudo-moar 608e88: OUTPUT: ¬´("\$=pod", "\$_", "\$/", "!UNIT_MARKER", "\$=finish", "EXPORT", "\$!", "::?PACKAGE", "GLOBALish", "\$¬¢", "\$?PACKAGE").Seq‚ê§¬ª

[13:35] <araraloren> m: require Test; dd UNIT::.keys

[13:35] <camelia> rakudo-moar 608e88: OUTPUT: ¬´("\$=pod", "\$_", "\$/", "!UNIT_MARKER", "\$=finish", "EXPORT", "\$!", "::?PACKAGE", "GLOBALish", "\%REQUIRE_SYMBOLS", "Test", "\$¬¢", "\$?PACKAGE").Seq‚ê§¬ª

[13:36] *** khw joined
[13:37] *** daxim left
[13:37] *** daxim joined
[13:39] *** Cabanossi left
[13:41] <araraloren> m: require Test; dd UNIT::.keys; dd UNIT::{"\$?PACKAGE"};

[13:41] <camelia> rakudo-moar 608e88: OUTPUT: ¬´("\$=pod", "\$_", "\$/", "!UNIT_MARKER", "\$=finish", "EXPORT", "\$!", "::?PACKAGE", "GLOBALish", "\%REQUIRE_SYMBOLS", "Test", "\$¬¢", "\$?PACKAGE").Seq‚ê§GLOBAL‚ê§¬ª

[13:42] *** Cabanossi joined
[13:49] *** pecastro left
[13:51] *** pecastro joined
[14:10] *** ne_robot left
[14:12] *** Zoffix left
[14:13] *** skids joined
[14:19] *** mcmillhj left
[14:21] *** mcmillhj joined
[14:23] *** avuserow joined
[14:24] <tbrowder> AlexDaniel: excuse the 'all', please, wasn't aware of consequences

[14:33] *** cdg joined
[14:33] *** cdg left
[14:34] *** cdg joined
[14:40] <[Coke]> (specify perl 6 fund); note that if you do that, it'll probably go to jnthn's fund, not the general purpose fund which was used to fund zoffix's own grant.

[14:40] <yoleaux> 29 May 2017 22:37Z <Zoffix> [Coke]: My final report for the IO grant is now available. I believe I've completed all of the grant's goals. Let me know what the next steps are: http://blogs.perl.org/users/zoffix_znet/2017/05/completion-report-perl-6-io-tpf-grant.html

[14:40] <yoleaux> 29 May 2017 22:38Z <Zoffix> [Coke]: the Markdown format for the report is available in https://github.com/zoffixznet/IOwesomeness/blob/master/reports/May-2017.md

[14:45] <Geth> ¬¶ doc: 1dc0eff496 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO.pod6

[14:45] <Geth> ¬¶ doc: Close pipes in the example

[14:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1dc0eff496

[14:46] <Geth> ¬¶ doc: a5d0383884 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO.pod6

[14:46] <Geth> ¬¶ doc: Fix typos; Fixes #1349

[14:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a5d0383884

[14:54] *** Cabanossi left
[14:55] *** cdg_ joined
[14:55] *** cdg left
[14:57] *** Cabanossi joined
[15:02] *** CacoS joined
[15:05] *** Actualeyes left
[15:08] *** Actualeyes joined
[15:09] *** curan left
[15:09] *** Actualeyes left
[15:17] <Geth> ¬¶ doc: 8a3d6d4bda | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO.pod6

[15:17] <Geth> ¬¶ doc: Remove duplicate word

[15:17] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8a3d6d4bda

[15:23] *** aborazmeh left
[15:25] <Geth> ¬¶ doc: 10502173fe | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO.pod6

[15:25] <Geth> ¬¶ doc: Fix up &spurt example

[15:25] <Geth> ¬¶ doc: 

[15:25] <Geth> ¬¶ doc: - Uncomment commented code

[15:25] <Geth> ¬¶ doc: - Fixup outputs

[15:25] <Geth> ¬¶ doc: - Don't CATCH to demonstrate Failure; this isn't how Failure mechanism is meant to be used

[15:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/10502173fe

[15:27] *** AlexDaniel joined
[15:32] *** araraloren left
[15:35] *** bwisti joined
[15:42] *** zakharyas left
[15:50] <[Coke]> not ok 189 - doc/Type/Thread.pod6 had duplicate words: the the

[15:51] <[Coke]> (looks like the other 50+ failures in my experiment there are all false positives.

[15:51] *** jonas2 left
[15:55] *** domidumont left
[15:57] *** travis-ci joined
[15:57] <travis-ci> Doc build errored. Zoffix Znet 'Remove duplicate word'

[15:57] <travis-ci> https://travis-ci.org/perl6/doc/builds/237559186 https://github.com/perl6/doc/compare/a5d0383884ed...8a3d6d4bda50

[15:57] *** travis-ci left
[15:59] <Geth> ¬¶ doc: fca615c5de | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Thread.pod6

[15:59] <Geth> ¬¶ doc: Fix duplicate word

[15:59] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fca615c5de

[15:59] *** fatguy joined
[16:10] <[Coke]> ooh, I didn't realize it was on a line boundary. nice.

[16:16] *** travis-ci joined
[16:16] <travis-ci> Doc build errored. Zoffix Znet 'Fix up &spurt example

[16:16] <travis-ci> https://travis-ci.org/perl6/doc/builds/237562447 https://github.com/perl6/doc/compare/8a3d6d4bda50...10502173fe0c

[16:16] *** travis-ci left
[16:17] *** raschipi left
[16:22] *** wamba left
[16:27] *** zakharyas joined
[16:33] <AlexDaniel> tbrowder: well, according to quotable6, people do that very often

[16:34] <AlexDaniel> so IMO committable6 is wrong and people are right :)

[16:39] *** robertle left
[16:41] <tony-o> ingy: Slang::SQL works still - need to figure out some deprecated use of %*LANG 

[16:41] *** travis-ci joined
[16:41] <travis-ci> Doc build passed. Zoffix Znet 'Fix duplicate word'

[16:41] <travis-ci> https://travis-ci.org/perl6/doc/builds/237576913 https://github.com/perl6/doc/compare/10502173fe0c...fca615c5de6b

[16:41] *** travis-ci left
[16:41] <tony-o> but that shouldn't affect syntax/use 

[16:46] *** dakkar left
[16:51] *** bwisti left
[16:52] *** st_elmo joined
[16:59] *** bwisti joined
[17:06] *** itaipu joined
[17:06] *** mcmillhj left
[17:07] *** mcmillhj joined
[17:21] <AlexDaniel> m: say #`X

[17:21] <camelia> rakudo-moar ae891f: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "say" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3say7‚èè5 #`X‚ê§Other potential difficulties:‚ê§    Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or use an expl‚Ä¶¬ª

[17:21] *** wamba joined
[17:22] <AlexDaniel> m: #`X

[17:22] <camelia> rakudo-moar ae891f: ( no output )

[17:22] <AlexDaniel> what's that :o

[17:24] *** Cabanossi left
[17:24] *** mcmillhj left
[17:27] *** mcmillhj joined
[17:27] *** Cabanossi joined
[17:29] <geekosaur> I suspect it's a comment extending to the next X

[17:30] <AlexDaniel> ummm

[17:30] <AlexDaniel> m: #`{{{

[17:30] <camelia> rakudo-moar ae891f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Couldn't find terminator }}} (corresponding {{{ was at line 1)‚ê§at <tmp>:1‚ê§------> 3#`{{{7‚èè5<EOL>‚ê§    expecting any of:‚ê§        }}}‚ê§¬ª

[17:30] <AlexDaniel> m: say #`X hello X 42

[17:30] <camelia> rakudo-moar ae891f: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "say" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3say7‚èè5 #`X hello X 42‚ê§Other potential difficulties:‚ê§    Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or ‚Ä¶¬ª

[17:31] <AlexDaniel> no?

[17:32] <AlexDaniel> well, maybe, but?

[17:33] *** setty1 joined
[17:33] <AlexDaniel> m: dd #`X

[17:33] <camelia> rakudo-moar ae891f: OUTPUT: ¬´block <unit>‚ê§¬ª

[17:33] <AlexDaniel> ah right, indeed, looks like a comment

[17:35] *** committable6 left
[17:35] *** committable6 joined
[17:35] *** ChanServ sets mode: +v committable6

[17:36] *** TeamBlast left
[17:36] <AlexDaniel> m: #`X hello‚ê§ say 42

[17:36] <camelia> rakudo-moar ae891f: OUTPUT: ¬´42‚ê§¬ª

[17:36] <AlexDaniel> ah-ha

[17:36] <AlexDaniel> it's parsed as a regular comment

[17:36] <AlexDaniel> okay

[17:37] <AlexDaniel> so you can do this

[17:37] <AlexDaniel> m: #`‚Äú say 42 ‚Äù say 42

[17:37] <camelia> rakudo-moar ae891f: OUTPUT: ¬´42‚ê§¬ª

[17:37] <AlexDaniel> but can't do that

[17:37] <AlexDaniel> m: #`" say 42 " say 42

[17:37] <camelia> rakudo-moar ae891f: ( no output )

[17:38] <Geth> ¬¶ doc: 95bd16012d | (Zoffix Znet)++ (committed using GitHub Web editor) | app.pl

[17:38] <Geth> ¬¶ doc: Debitrot Mojolicious app

[17:38] <Geth> ¬¶ doc: 

[17:38] <Geth> ¬¶ doc: Fixes #1332

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/95bd16012d

[17:39] *** TeamBlast joined
[17:41] *** lichtkind joined
[17:42] *** grondilu_ joined
[17:42] *** domidumont joined
[17:43] *** espadrine_ joined
[17:45] *** grondilu left
[17:56] <perlpilot> debit-rot?  ;-)

[17:57] *** TeamBlast left
[17:58] <[Coke]> debitrot13

[17:59] *** TeamBlast joined
[18:01] *** mr-foobar left
[18:03] *** mr-foobar joined
[18:11] *** buggable left
[18:11] *** buggable joined
[18:11] *** ChanServ sets mode: +v buggable

[18:11] *** buggable left
[18:12] *** buggable joined
[18:12] *** ChanServ sets mode: +v buggable

[18:16] *** TeamBlast left
[18:18] *** zakharyas left
[18:19] *** TeamBlast joined
[18:19] *** cbk_ left
[18:35] *** mcmillhj left
[18:36] *** mcmillhj joined
[18:37] *** TeamBlast left
[18:39] *** TeamBlast joined
[18:42] *** ufobat left
[18:51] *** kyan joined
[18:55] *** grondilu_ left
[18:56] <Geth> ¬¶ doc: 5ff5574e76 | (Jan-Olof Hendig)++ | doc/Language/subscripts.pod6

[18:56] <Geth> ¬¶ doc: Adjusted some OUTPUT: messages

[18:56] <Geth> ¬¶ doc: 

[18:56] <Geth> ¬¶ doc: Since the document was written, error messages have changed and

[18:56] <Geth> ¬¶ doc: so has the format output by dd.

[18:56] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5ff5574e76

[18:56] *** Cabanossi left
[18:57] *** Cabanossi joined
[18:57] *** pilne left
[19:03] *** cdg joined
[19:07] *** cdg_ left
[19:07] *** dwarring joined
[19:14] *** darutoko left
[19:15] *** cdg left
[19:15] *** cdg joined
[19:25] *** itaipu left
[19:28] *** domidumont left
[19:30] *** pilne joined
[19:45] *** ne_robot joined
[19:52] *** yqt joined
[19:55] *** Cabanossi left
[19:57] *** Cabanossi joined
[20:01] *** cdg_ joined
[20:04] *** cdg left
[20:05] *** nebuchadnezzar left
[20:05] *** nebuchadnezzar joined
[20:17] *** Celelibi left
[20:17] *** CacoS left
[20:20] *** ne_robot left
[20:21] *** Celelibi joined
[20:29] <Geth> ¬¶ doc: f4582a441d | (Jan-Olof Hendig)++ | doc/Language/variables.pod6

[20:29] <Geth> ¬¶ doc: Touched up ^ twigil example

[20:29] <Geth> ¬¶ doc: 

[20:29] <Geth> ¬¶ doc: Closes #1353

[20:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f4582a441d

[20:35] *** raschipi joined
[20:36] *** yqt left
[20:40] *** raiph joined
[20:49] *** setty1 left
[20:50] <raiph> NativeCall question on SO with no comment/answer https://stackoverflow.com/questions/44266457/array-of-structs-as-an-attribute-of-a-perl-6-nativecall-struct

[20:50] *** cdg_ left
[20:53] *** cdg joined
[21:00] *** pmurias left
[21:02] *** skids left
[21:08] *** raschipi left
[21:10] <raiph> bisectable: help

[21:10] <bisectable6> raiph, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^‚àû).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Bisectable

[21:12] * AlexDaniel is also ready to help

[21:12] *** mcmillhj left
[21:13] <raiph> bisectable6: 2016.02 use NativeCall; CArray[int]; say CArray[Pointer]

[21:13] <bisectable6> raiph, On both starting points (old=2015.12 new=5e33934) the exit code is 1 and the output is identical as well

[21:13] <bisectable6> raiph, https://gist.github.com/01237e5b4ae5d876e8482a5935ca5c76

[21:13] <raiph> commitable6: 2016.02 use NativeCall; CArray[int]; say CArray[Pointer]

[21:13] <committable6> raiph, ¬¶2016.02: ¬´WARNINGS for /tmp/QbB0hy1ANM:‚ê§Useless use of constant value CArray[int] in sink context (line 1)‚ê§(Pointer])¬ª

[21:14] <AlexDaniel> bisectable6: use NativeCall; CArray[int]; say CArray[Pointer]

[21:14] <bisectable6> AlexDaniel, On both starting points (old=2015.12 new=5e33934) the exit code is 0 and the output is identical as well

[21:14] <bisectable6> AlexDaniel, Output on both points: ¬´WARNINGS for /tmp/Ist4tcRZUR:‚ê§Useless use of constant value CArray[int] in sink context (line 1)‚ê§(Pointer])¬ª

[21:14] *** troys joined
[21:14] <AlexDaniel> bisectable6: old=2016.02 use NativeCall; CArray[int]; say CArray[Pointer]

[21:14] <bisectable6> AlexDaniel, On both starting points (old=2016.02 new=5e33934) the exit code is 0 and the output is identical as well

[21:14] <bisectable6> AlexDaniel, Output on both points: ¬´WARNINGS for /tmp/k7WMB1qXOg:‚ê§Useless use of constant value CArray[int] in sink context (line 1)‚ê§(Pointer])¬ª

[21:15] <raiph> AlexDaniel: nice bot and nice bot docs too :)

[21:15] <AlexDaniel> \o/

[21:16] <AlexDaniel> raiph: by the way

[21:16] <raiph> use NativeCall; say CArray[Pointer] # .gist is screwed up and has been since at least 2015.12

[21:16] <raiph> m: use NativeCall; say CArray[Pointer] # .gist is screwed up and has been since at least 2015.12

[21:16] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´(Pointer])‚ê§¬ª

[21:16] <AlexDaniel> committable6: 2015.11 use NativeCall; CArray[int]; say CArray[Pointer]

[21:16] <committable6> AlexDaniel, ¬¶2015.11: ¬´(TypedCArray[Pointer])¬ª

[21:17] <AlexDaniel> bisectable6: old=2015.11 use NativeCall; CArray[int]; say CArray[Pointer]

[21:17] <bisectable6> AlexDaniel, Bisecting by output (old=2015.11 new=5e33934) because on both starting points the exit code is 0

[21:17] <raiph> er, since at least 2016.02 I mean

[21:18] *** TEttinger joined
[21:18] <AlexDaniel> nice bot just got stuck‚Ä¶

[21:18] * AlexDaniel slaps bisectable6

[21:19] <AlexDaniel> this feels like it is a change in rakudo, by the way

[21:19] <AlexDaniel> unless adding .close to the pipe in between breaks something (sometimes)

[21:19] *** committable6 left
[21:19] *** bisectable6 left
[21:20] *** committable6 joined
[21:20] *** ChanServ sets mode: +v committable6

[21:20] <raiph> bisectable6: old=2015.11 use NativeCall; exit +(CArray[Pointer].gist ne 'CArray[Pointer]')

[21:20] <AlexDaniel> one second

[21:20] *** bisectable6 joined
[21:20] *** ChanServ sets mode: +v bisectable6

[21:20] <AlexDaniel> bisectable6: old=2015.11 use NativeCall; exit +(CArray[Pointer].gist ne 'CArray[Pointer]')

[21:20] <bisectable6> AlexDaniel, On both starting points (old=2015.11 new=5e33934) the exit code is 1 and the output is identical as well

[21:20] <bisectable6> AlexDaniel, Output on both points: ¬´¬ª

[21:20] <AlexDaniel> bisectable6: old=2015.11 use NativeCall; CArray[int]; say CArray[Pointer]

[21:20] <bisectable6> AlexDaniel, Bisecting by output (old=2015.11 new=5e33934) because on both starting points the exit code is 0

[21:21] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/9aa863ab0a2aa77102b3f9cb8ccf6c05

[21:21] <bisectable6> AlexDaniel, (2015-12-01) https://github.com/rakudo/rakudo/commit/cdc3fb041abdf29b0d1981f89509bae09d031b07

[21:21] <AlexDaniel> c: cdc3fb041^,cdc3fb041 use NativeCall; CArray[int]; say CArray[Pointer]

[21:21] <committable6> AlexDaniel, ¬¶cdc3fb041^: ¬´(TypedCArray[Pointer])¬ª ¬¶cdc3fb0: ¬´(CArray[Pointer])¬ª

[21:22] <AlexDaniel> wait, both are okay, no?

[21:22] *** f1ro joined
[21:22] <AlexDaniel> bisectable6: old=cdc3fb041 use NativeCall; CArray[int]; say CArray[Pointer]

[21:22] <bisectable6> AlexDaniel, Bisecting by output (old=cdc3fb0 new=5e33934) because on both starting points the exit code is 0

[21:23] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/41303c58170332075c3a69c48980bb59

[21:23] <bisectable6> AlexDaniel, (2015-12-01) https://github.com/rakudo/rakudo/commit/518b46feb9ae179cf7a73220673da5b9fbb01016

[21:23] <raiph> bisectable6: old=2015.11 use NativeCall; exit +(CArray[Pointer].gist ne 'CArray[Pointer]') # AlexDaniel, is this correct usage?

[21:23] <AlexDaniel> c: 518b46feb^,518b46feb use NativeCall; CArray[int]; say CArray[Pointer]

[21:23] <bisectable6> raiph, On both starting points (old=2015.11 new=5e33934) the exit code is 1 and the output is identical as well

[21:23] <bisectable6> raiph, Output on both points: ¬´¬ª

[21:23] <committable6> AlexDaniel, ¬¶518b46feb^: ¬´(CArray[Pointer])¬ª ¬¶518b46f: ¬´(Pointer])¬ª

[21:23] <AlexDaniel> raiph: I'd say no. It will compare the output anyway if you just say it

[21:24] <AlexDaniel> raiph: something like this would be correct for ‚Äògit bisect‚Äô on command line

[21:24] <raiph> gotchya

[21:24] <AlexDaniel> but for bisectable it is too much thinking on your side :)

[21:25] <AlexDaniel> the reason it didn't work is because it should be ‚Äúne '(CArray[Pointer])'‚Äù I think (with parens)

[21:25] <AlexDaniel> c: cdc3fb041^,cdc3fb041,518b46feb^,518b46feb use NativeCall; CArray[int]; say CArray[Pointer]

[21:25] <committable6> AlexDaniel, ¬¶cdc3fb041^: ¬´(TypedCArray[Pointer])¬ª ¬¶cdc3fb0,518b46feb^: ¬´(CArray[Pointer])¬ª ¬¶518b46f: ¬´(Pointer])¬ª

[21:25] <AlexDaniel> raiph: ‚Üë this is basically the whole history of that thing changing :)

[21:25] <raiph> that's amazing

[21:26] <AlexDaniel> (where sha^ is a parent of the commit)

[21:28] *** f1ro left
[21:33] <raiph> m: use NativeCall; say CArray[CPointer]

[21:33] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    CPointer used at line 1. Did you mean 'Pointer'?‚ê§‚ê§¬ª

[21:51] *** troys is now known as troys_

[21:52] <timotimo> that got renamed a while back

[21:52] *** st_elmo left
[21:52] <timotimo> but CArray is always of pointers to structs if they aren't of native nums or ints

[21:53] *** espadrine_ left
[21:54] <raiph> m: use NativeCall; put gist CArray[Pointer] # timotimo: this is the tangent I'm chasing right now

[21:54] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´(Pointer])‚ê§¬ª

[21:54] <raiph> note the missing `CArray[`

[21:56] <timotimo> interesting

[21:56] <timotimo> m: use NativeCall; put CArray[Pointer].^name; put CArray[Pointer].^long_name

[21:56] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´NativeCall::Types::CArray[NativeCall::Types::Pointer]‚ê§No such method 'long_name' for invocant of type 'Perl6::Metamodel::ClassHOW+{<anon>}+{<anon>}'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:56] <timotimo> is it perhaps actually shortname?

[21:56] <timotimo> m: use NativeCall; put CArray[Pointer].^shortname;

[21:56] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´Pointer]‚ê§¬ª

[21:56] <timotimo> right, that's b0rked

[21:57] * timotimo spits hot debug printfs

[21:58] *** nadim left
[21:59] <timotimo> ah, interesting

[21:59] <timotimo> in set_name it spits by :: and sets the shortname to be only the stuff after the last ::

[21:59] <timotimo> that's in Naming.nqp

[22:01] *** pecastro left
[22:06] *** beginner joined
[22:07] <beginner> how to create own data type in perl6?

[22:08] *** drrho_ left
[22:08] *** drrho_ joined
[22:09] *** rindolf left
[22:12] *** ne_robot joined
[22:15] <AlexDaniel> beginner: like a class?

[22:15] <raiph> beginner: create a new class with whatever attributes and/or methods you want

[22:15] <timotimo> beginner: what do you consider a "data type"?

[22:16] <raiph> m: enum my-enum <a b c>; role my-role {}; class my-class {}; grammar my-grammar {}; # etc.

[22:16] <camelia> rakudo-moar 5e3393: ( no output )

[22:16] <AlexDaniel> so everyone was quiet for 8 minutes, and then we all decided to reply in one second? :)

[22:17] <raiph> heh

[22:17] <beginner> timotimo : suppose a need a type that contains underscore and digits

[22:18] <MasterDuke> or like the examples from the discussion from yesterday. subset My-Int of Int where ... . constant My-Array = Array of Int

[22:19] <raiph> m: subset MyType of Str where / '_' / & / \d ** {2..Inf} /

[22:19] <camelia> rakudo-moar 5e3393: ( no output )

[22:19] <jnthn> m: subset MyType of Str where /^ <[0..9_]>+ $/; my MyType $x = '123_456'

[22:19] <camelia> rakudo-moar 5e3393: ( no output )

[22:19] <jnthn> m: subset MyType of Str where /^ <[0..9_]>+ $/; my MyType $x = '123_456!!!'

[22:19] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´Type check failed in assignment to $x; expected MyType but got Str ("123_456!!!")‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:20] *** pecastro joined
[22:20] <jnthn> Heh, I see raiph and I took the alternative interpretations of the problem. :)

[22:20] <beginner> AlexDaniel : we have built in types like int for numbers ,str for characters. I need to create a type that is combination of number and symbols

[22:21] *** ne_robot left
[22:23] <raiph> beginner: if a dynamically checked type is OK then I think creating a subset type as demo'd above is the natural solution

[22:23] *** AlexDaniel left
[22:24] <beginner> thanks all...that helps

[22:29] *** shmibs joined
[22:36] *** mcmillhj joined
[22:41] *** mcmillhj left
[22:41] *** mscha joined
[22:41] <mscha> m: sub foo(Int @bar = (1,2,3)) { say @bar }; foo;

[22:41] <camelia> rakudo-moar 5e3393: OUTPUT: ¬´Type check failed in binding to parameter '@bar'; expected Positional[Int] but got List ($(1, 2, 3))‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:43] *** mcmillhj joined
[22:44] *** AndroUser2 joined
[22:45] *** wamba left
[22:50] *** mcmillhj_ joined
[23:03] *** AndroUser2 left
[23:06] *** AndroUser2 joined
[23:14] *** BenGoldberg joined
[23:15] *** kurahaupo left
[23:17] *** margeas left
[23:18] *** mcmillhj left
[23:21] *** beginner left
[23:23] *** Rawriful joined
[23:28] *** cdg left
[23:38] *** mr-foobar left
[23:40] *** mscha left
[23:41] *** mr-foobar joined
[23:49] *** skids joined
[23:52] *** mcmillhj_ is now known as mcmillhj

[23:58] *** Rawriful left
