[00:04] *** zoll left
[00:07] <raschipi> Whay can't the original filename be stored with the bytecode?

[00:07] <raschipi> Seems to be a common request.

[00:09] <ugexe> they want to edit a file by the same name as the original filename

[00:11] <ugexe> zef locate 5671A6C52C604B78F4C138573DCFB019723F7B7F --sha1, zef locate lib/Zef/CLI.pm6, zef locate Zef::CLI

[00:15] <geekosaur> nobody guarantees it would be recompiled

[00:15] <geekosaur> the way compilation happens is you install the file

[00:17] <pompomcrab> geekosaur: hmm i don't like that feature then. is there a dongle to make p6 do it like p5 so i can live-edit installed modules?

[00:18] <geekosaur> no, and there won;t be one unless it also includes a "forbid installing different versions of modules or modules from different sources because that would interfere with that importnt live editing feature"

[00:18] <raschipi> What will it do If I nuke that?

[00:19] <pompomcrab> geekosaur: saying "no" only motivates me to dive into the rakudo source to make a patch to do it ;)

[00:19] <geekosaur> ok, yes, :ver and :auth are evil that you must eradicate

[00:19] <geekosaur> hop to it

[00:20] <pompomcrab> geekosaur: i'll just do it like node.js does using ./node_modules to override global installed modules lol

[00:21] <Zoffix> pompomcrab: you can have a local version you load 

[00:21] <geekosaur> you could possibly create a new CUR that does not honor multiple sources so it can get away with not renaming things uniquely, and force its use for your modules

[00:21] <geekosaur> but you would have to remember to use it because it will not be default

[00:21] <raschipi> You say so, but I don't get it. Is it explained somewhere why would the capability pf having multiple versions installed interfere with the hability of getting rid of a cached version and recompiling?

[00:21] <pompomcrab> now we're talking, i'll do that

[00:22] <Zoffix> pompomcrab: and edit that. Unlike Perl, the installed modules are already pre-compiled. They're not evaluated from source each time. Just grab the source of the module you want to edit, get it to the state that pleases you, and if you want install that version

[00:22] <geekosaur> raschipi, so you want perl 6 even slower by having to constantly recheck and recompile things?

[00:22] <geekosaur> the whole point of CUR was to make the slow compile step happen only once

[00:22] <pompomcrab> tbh package-manager-itis fatigue has got me liking little langs like Lua where there are no modules, you're on your own free to implement it however you want

[00:23] <Zoffix> :)

[00:23] <raschipi> No, I want it to tell me the source the cache came from and recompile if the cache is cleared.

[00:23] <Zoffix> raschipi: I think the filename (and even code itself) is stored somewhere. It's just not usedxd

[00:23] <pompomcrab> Zoffix: this is great stuff for me to learn, i've been wondering how the Compile Unit stuff really worked but it's complicated so i gave up

[00:24] <Zoffix> \o/

[00:25] <raschipi> One option to do it the slow way, recompiling everything and another to spill out where the bytecode came from would solve the issue. No need to be slow by default.

[00:25] <Zoffix> raschipi: yeah, `zef locate WWW` gives me the filename for the module and if I pop it open it got plain sauce in it

[00:26] <raschipi> can zef locate source installed by means other than itself?

[00:26] <Zoffix> I'd imagine so

[00:26] <geekosaur> this is part of the CUR, I believe

[00:26] *** Cabanossi left
[00:26] <Zoffix> 'cause IIUC, it's just uses CUR interface for everything

[00:27] <pompomcrab> i'm happy to dig into the p6-guts and Just Make It Work since i do have a personal goal to get Some Code Any Code submitted into p6, since i arrived too late in 2002 to contribute to a p5 mostly-finished-it-already-exists-on-CPAN

[00:27] <Zoffix> But also, IIRC there doesn't have to be a downloaded source file the stuff came from. You could make a CUR that reads from /dev/random if you wantede

[00:28] <Zoffix> pompomcrab: oh, great. You may wanna mark a date in your callendar. 

[00:28] <Zoffix> squashable6: status

[00:28] <squashable6> Zoffix, Next SQUASHathon in 29 days and ≈9 hours (2017-10-07 UTC-12⌁UTC+14)

[00:28] <Zoffix> pompomcrab: ^ I understand next squashathon will be on the compiler. Basically, we all get together in this channel for 1 day and try to fix bugs on the selecter repo :)

[00:28] *** Cabanossi joined
[00:29] <Zoffix> And by that time we'll have some tickets marked for Low Hanging Fruit, so that people new to it can contribute something.

[00:29] *** ash_gti left
[00:31] *** ash_gti joined
[00:34] <raschipi> People don't have to sign something to be allowed to participate?

[00:36] *** armin left
[00:36] <Zoffix> raschipi: no, it's only if you want a commit bit to rakudo/* repos

[00:37] <pompomcrab> Zoffix: ok i'm in

[00:37] <raschipi> To send pull requests that's not needed? Good to know.

[00:38] <pompomcrab> at the very least i can steal some knowledge and level up

[00:38] <Zoffix> \o/

[00:38] <Zoffix> raschipi: right. We'd never get much contributions if it were needed for pull requests too :PO

[00:39] <Zoffix> (P.S.: for stealing knowledge; there are a couple articles with "Core Hacking" in their titles on https://rakudo.party/ )

[00:42] <ugexe> you can do auth/ver and use the original names, you just put them in a sha1 directory. see: https://github.com/ugexe/Perl6-CompUnit--Repository--Lib

[00:42] <ugexe> you'll notice the failing tests are also all precomp

[00:46] *** armin joined
[00:46] <ugexe> but i have not yet implemented the items required to do look ups without parsing json

[00:57] *** Cabanossi left
[00:58] *** lizmat left
[00:58] *** Cabanossi joined
[01:03] *** snarkyboojum joined
[01:05] <BenGoldberg> m: my class C { }; my role R { }; say map { C but R }, ^5;

[01:05] <camelia> rakudo-moar e7a588: OUTPUT: «((C+{R}) (C+{R}) (C+{R}) (C+{R}) (C+{R}))␤»

[01:05] *** grumble left
[01:05] *** rumble joined
[01:05] <BenGoldberg> m: my class C { }; my role R { }; say $_.WHERE for map { C but R }, ^5;

[01:05] <camelia> rakudo-moar e7a588: OUTPUT: «140341004940976␤140341004940976␤140341004940976␤140341004940976␤140341004940976␤»

[01:13] *** lizmat joined
[01:16] *** armin left
[01:19] *** margeas left
[01:22] *** xiaoyafeng joined
[01:22] <xiaoyafeng> hello, 

[01:26] <xiaoyafeng> I notice (^100).grep({$_ >3}) has another way of writing: (^100).grep(* > 3)   could anyone explain what * does mean in argument for me? Thanks! 

[01:27] *** Cabanossi left
[01:28] *** Cabanossi joined
[01:29] <Xliff> BenGoldberg: Isn't that a good thing? Class and role definition aren't being duplicated?

[01:29] <ash_gti> xiaoyafeng * in that context is a whatever

[01:29] <ash_gti> see https://docs.perl6.org/type/Whatever for some more details, but its a type of placeholder

[01:29] *** armin joined
[01:30] <BenGoldberg> Not everything I type into camelia is a "WTF, is this wrong?", sometimes the results are things I'm quite happy about :)

[01:30] * BenGoldberg smiles.

[01:30] <Xliff> m: my class C { }; my role R { }; map { my C but R $cr = .new; $cd.WHERE.say }, ^5;

[01:30] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed my␤at <tmp>:1␤------> 3y class C { }; my role R { }; map { my C7⏏5 but R $cr = .new; $cd.WHERE.say }, ^5;␤»

[01:30] <Xliff> m: my class C { }; my role R { }; map { my C but R $cr = .new; $cd.WHERE.say } ^5;

[01:30] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed my␤at <tmp>:1␤------> 3y class C { }; my role R { }; map { my C7⏏5 but R $cr = .new; $cd.WHERE.say } ^5;␤»

[01:31] <BenGoldberg>  m: my class C { }; my role R { }; constant CR = C but R; map { my CR $cr = .new; $cd.WHERE.say } ^5;

[01:31] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$cd' is not declared. Did you mean '$cr'?␤at <tmp>:1␤------> 3t CR = C but R; map { my CR $cr = .new; 7⏏5$cd.WHERE.say } ^5;␤»

[01:31] <BenGoldberg>  m: my class C { }; my role R { }; constant CR = C but R; map { my CR $cr = .new; $cr.WHERE.say } ^5;

[01:31] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing comma after block argument to map␤at <tmp>:1␤------> 3p { my CR $cr = .new; $cr.WHERE.say } ^57⏏5;␤»

[01:32] <BenGoldberg>  m: my class C { }; my role R { }; constant CR = C but R; map { my CR $cr = .new; $cr.WHERE.say }, ^5;

[01:32] <camelia> rakudo-moar e7a588: OUTPUT: «Type check failed in assignment to $cr; expected C+{R} but got Int (0)␤  in block <unit> at <tmp> line 1␤␤»

[01:32] <BenGoldberg> Err

[01:32] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; map { my CR $cr = .new; $cr.WHERE.say } ^5;

[01:32] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing comma after block argument to map␤at <tmp>:1␤------> 3p { my CR $cr = .new; $cr.WHERE.say } ^57⏏5;␤»

[01:32] <Xliff> o_0

[01:32] <BenGoldberg> You're thinking in perl5 ;)

[01:33] <BenGoldberg> In perl5, you write: map BLOCK LIST.  In perl6, you write: map BLOCK, LIST

[01:33] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; (^5).map { $cr = .new; $cr.WHERE.say };

[01:33] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> 3e R { }; constant CR = C but R; (^5).map7⏏5 { $cr = .new; $cr.WHERE.say };␤    exp…»

[01:33] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { $cr = .new; $cr.WHERE.say };

[01:33] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$cr' is not declared␤at <tmp>:1␤------> 3{ }; constant CR = C but R; (^5).map: { 7⏏5$cr = .new; $cr.WHERE.say };␤»

[01:33] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my $cr = .new; $cr.WHERE.say };

[01:33] <camelia> rakudo-moar e7a588: OUTPUT: «139809934886832␤139809934898280␤139809934899368␤139809934900456␤139809934901544␤»

[01:34] <Xliff> \o/

[01:34] * BenGoldberg wants to know why my code produced "but got Int (0)"

[01:35] <BenGoldberg> Xliff, You're producing a bunch of Any.new()s.

[01:35] <xiaoyafeng> if * is just a placeholder, what difference is between $_ and * ?

[01:35] <BenGoldberg> * produces a special object, called a Whatever.

[01:36] <BenGoldberg> $_ is the default variable for various operations.

[01:36] <BenGoldberg> There're used in similar manners, but do different things.

[01:36] <MasterDuke> xiaoyafeng: it's slightly more than just a placeholder, it kind of curries also

[01:37] <xiaoyafeng> emmm, 

[01:37] <BenGoldberg> If you write: *.foo, this generates an anonymous subroutine which takes an object, and calls the method foo on it.

[01:37] <BenGoldberg> If you write $_.foo, this takes the object inside of the $_ variable and calls the method foo on it, immediately.

[01:38] <ash_gti> m: for [1, *, 3] { dd $_ }

[01:38] <camelia> rakudo-moar e7a588: OUTPUT: «Int <element> = 1␤Whatever <element> = *␤Int <element> = 3␤»

[01:38] <ash_gti> m: my $a = * + 3; $a(4).say;

[01:38] <camelia> rakudo-moar e7a588: OUTPUT: «7␤»

[01:39] <BenGoldberg> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my $cr = CR.new; dd $cr };

[01:39] <camelia> rakudo-moar e7a588: OUTPUT: «C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤»

[01:39] <BenGoldberg> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my CR $cr = CR.new; dd $cr };

[01:39] <camelia> rakudo-moar e7a588: OUTPUT: «C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤»

[01:40] <BenGoldberg> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my CR $cr .= new; dd $cr };

[01:40] <camelia> rakudo-moar e7a588: OUTPUT: «C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤C+{R} $cr = C+{R}.new␤»

[01:40] <BenGoldberg> ¯\_(ツ)_/¯

[01:46] *** ilbot3 left
[01:46] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my CR $cr .= new; $cr.WHERE. };

[01:46] <camelia> rakudo-moar e7a588: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of . to concatenate strings; in Perl 6 please use ~␤at <tmp>:1␤------> 3^5).map: { my CR $cr .= new; $cr.WHERE. 7⏏5};␤»

[01:46] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my CR $cr .= new; $cr.WHERE.say };

[01:46] <camelia> rakudo-moar e7a588: OUTPUT: «139751884208200␤139751884221304␤139751884224048␤139751884226792␤139751884229536␤»

[01:47] <Xliff> m: my class C { }; my role R { }; constant CR = C but R; (^5).map: { my CR $cr .= new; $cr.WHERE.say; $cr.^name.say };

[01:47] <camelia> rakudo-moar e7a588: OUTPUT: «140524025540936␤C+{R}␤140524025556512␤C+{R}␤140524025559840␤C+{R}␤140524025563168␤C+{R}␤140524025566496␤C+{R}␤»

[01:47] <Xliff> Those don't look like anys. ;)

[01:47] <Xliff> Of course, the results of the map won't make any sense. LOL

[01:48] *** Xliff left
[01:50] <xiaoyafeng> Thanks, very clear description on * thanks very much

[01:50] <xiaoyafeng> ;)

[01:51] *** moski joined
[01:51] *** ash_gti left
[01:52] *** moski left
[01:54] *** ilbot3 joined
[01:54] *** ChanServ sets mode: +v ilbot3

[01:55] *** ash_gti joined
[02:04] *** pompomcrab left
[02:11] *** Cabanossi left
[02:13] *** Cabanossi joined
[02:14] *** Guest36961 left
[02:18] *** noganex joined
[02:21] *** noganex_ left
[02:22] *** aborazmeh joined
[02:22] *** aborazmeh left
[02:22] *** aborazmeh joined
[02:23] *** ash_gti left
[02:24] *** llfourn left
[02:26] *** ash_gti joined
[02:27] *** AlexDaniel left
[02:44] *** xtreak joined
[02:46] *** ash_gti left
[02:48] *** xtreak left
[02:55] *** ash_gti joined
[02:57] *** Cabanossi left
[02:58] *** Cabanossi joined
[03:15] *** wamba left
[03:29] *** ash_gti left
[03:30] *** ash_gti joined
[03:46] *** dogbert2 left
[03:49] *** aborazmeh left
[03:52] *** giraffe joined
[03:53] *** giraffe is now known as Guest34710

[03:54] *** llfourn joined
[03:57] *** Cabanossi left
[03:57] *** Cabanoss- joined
[03:57] *** Cabanoss- is now known as Cabanossi

[04:18] *** dj_goku joined
[04:18] *** dj_goku left
[04:18] *** dj_goku joined
[04:18] *** cog_ joined
[04:19] *** lizmat_ joined
[04:19] *** ttkp6 left
[04:19] *** mattp__ left
[04:20] *** mattp__ joined
[04:20] *** dj_goku_ left
[04:21] *** samcv left
[04:21] *** DrForr left
[04:21] *** DrForr joined
[04:21] *** samcv joined
[04:21] *** lizmat left
[04:21] *** cognominal left
[04:21] *** marcusramberg left
[04:22] *** marcusramberg joined
[04:24] *** bisectable6 left
[04:24] *** releasable6 left
[04:24] *** greppable6 left
[04:24] *** nativecallable6 left
[04:24] *** nativecallable6 joined
[04:24] *** greppable6 joined
[04:24] *** releasable6 joined
[04:24] *** bisectable6 joined
[04:25] *** notbenh left
[04:25] *** coverable6 left
[04:25] *** bloatable6 left
[04:26] *** notbenh joined
[04:27] *** roguelazer left
[04:27] *** jercos left
[04:27] *** ilmari[m] left
[04:27] *** wamba[m] left
[04:27] *** llfourn left
[04:27] *** gugod left
[04:28] *** llfourn joined
[04:28] *** kshannon left
[04:29] *** kshannon joined
[04:29] *** roguelazer joined
[04:33] *** xtreak joined
[04:36] *** jercos joined
[04:41] *** wamba[m] joined
[04:41] *** ilmari[m] joined
[04:43] *** gugod joined
[04:50] <ash_gti> Zoffix I think I have a fix for the https://rt.perl.org/Public/Bug/Display.html?id=132043 issue, I submitted a pull request for https://github.com/perl6/roast/pull/308 and https://github.com/rakudo/rakudo/pull/1152

[04:53] *** roguelazer left
[04:55] *** Cabanossi left
[04:57] *** Cabanossi joined
[04:58] *** raschipi left
[05:04] *** roguelazer joined
[05:06] *** ash_gti left
[05:06] *** BenGoldberg left
[05:12] *** xtreak_ joined
[05:13] *** xtreak left
[05:16] *** zakame joined
[05:17] *** Xal left
[05:23] *** ash_gti joined
[05:29] *** mcmillhj left
[05:29] *** khw left
[05:37] *** mcmillhj joined
[05:38] <Geth> ¦ doc: zakame++ created pull request #1541: Split and rephrase lines in the footer

[05:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1541

[05:39] *** mcmillhj left
[05:43] *** dj_goku left
[05:44] *** skids left
[05:55] *** Cabanossi left
[05:57] *** Cabanossi joined
[06:13] *** Exodist left
[06:14] *** xtreak_ left
[06:14] *** Exodist joined
[06:26] *** ash_gti left
[06:26] *** daxim joined
[06:27] *** ufobat joined
[06:32] *** xinming left
[06:32] *** ash_gti joined
[06:35] *** dj_goku joined
[06:35] *** dj_goku left
[06:35] *** dj_goku joined
[06:41] *** ash_gti left
[06:41] *** dj_goku left
[06:47] *** leont joined
[06:49] *** ChoHag joined
[07:02] *** jonas1 joined
[07:10] *** Cabanossi left
[07:12] *** Cabanossi joined
[07:15] *** jonas1 left
[07:15] *** jonas1 joined
[07:16] *** robertle left
[07:22] *** xtreak joined
[07:27] *** xtreak left
[07:27] *** snarkyboojum left
[07:30] *** leont left
[07:31] *** eliasr joined
[07:36] *** abraxxa joined
[07:41] *** dakkar joined
[07:43] *** geekosaur left
[07:52] *** darutoko joined
[07:52] *** xinming joined
[07:55] *** ufobat left
[07:55] *** Cabanossi left
[07:55] *** ufobat joined
[07:55] *** geekosaur joined
[07:55] <ufobat> good morning ;)

[07:57] *** Cabanossi joined
[08:02] *** wamba joined
[08:03] *** xtreak joined
[08:11] *** zakharyas joined
[08:16] *** lizmat_ is now known as lizmat

[08:18] *** xtreak left
[08:24] *** dj_goku joined
[08:24] *** dj_goku left
[08:24] *** dj_goku joined
[08:24] *** zakharyas left
[08:24] *** robertle joined
[08:28] *** dj_goku left
[08:45] *** Niels_ joined
[08:46] <Niels_> Hello!

[08:47] *** Niels_ left
[08:51] *** cognominal joined
[08:52] *** cog_ left
[08:55] *** Cabanossi left
[08:57] *** Cabanossi joined
[08:58] *** Sgeo left
[09:02] *** llfourn left
[09:08] *** zakharyas joined
[09:09] *** margeas joined
[09:24] *** Sgeo joined
[09:28] *** snarkyboojum joined
[09:42] *** stux|RC-only left
[09:44] *** stux|RC-only joined
[09:55] *** Cabanossi left
[09:57] *** Cabanossi joined
[09:58] *** nattefrost joined
[10:09] *** fireartist joined
[10:11] *** llfourn joined
[10:11] <fireartist> Hi, should rakudo be buildable with 1GB RAM? - rakudobrew is dying on me

[10:12] <gfldex> fireartist: you should be fine with adding 1GB of swap

[10:12] *** dj_goku joined
[10:12] *** dj_goku left
[10:12] *** dj_goku joined
[10:14] <fireartist> gfldex: ah, I've no swap - I'll check whether there's any unallocated disk I can use - thanks!

[10:15] <gfldex> fireartist: if you don't got any swap right now, disabeling tmpfs might help too

[10:17] *** dj_goku left
[10:22] <teatime> fireartist: I do that all the time (enable swap so that I can build rakudo on small-spec (512MB and up) VMs)... as long as you have the disk space, you can make a swap file nowadays, you do not need a dedicated swap partition.

[10:22] *** TEttinger left
[10:24] *** rindolf joined
[10:26] *** ShalokShalom_ joined
[10:26] <fireartist> I don't have any free disk, but realized I could temporarily double my VM's RAM & CPU for 1.5cents/hr - doing that now :-)

[10:28] <teatime> fireartist: e.g.:    dd if=/dev/zero of=/swapfile bs=1M count=2048  &&  mkswap /swapfile  &&  swapon /swapfile    (and add to /etc/fstab for future boots.)  afaik this is equally fast as swap part, and it's usually nice to have everything on one partition/filesystems for VMs.

[10:28] <teatime> haha.  that works too :)

[10:29] *** ShalokShalom left
[10:29] <teatime> sorry for my late response I had to read a man-page... apparently fallocate is /not/ the preferred way to pre-allocate a swapfile... at least according to mkswap(8)

[10:31] *** teatime is now known as teatwo

[10:32] *** teatwo is now known as teatime

[10:32] *** vgh joined
[10:33] *** ggoebel left
[10:37] *** vgh left
[10:38] <fireartist> "Rakudo has been built and installed" - thank you!

[10:40] <Aaronepower> Hello, how do I say to stop a rule once the next word is a certain word? Like `rule list { [. not ',' | not 'or']+ }`

[10:45] <jnthn> Perhaps <!before foo>

[10:45] *** ggoebel joined
[10:48] <teatime> Aaronepower: docs for ^^ are at https://docs.perl6.org/language/regexes#Look-around_assertions

[10:50] <Aaronepower> teatime: Yes, but they wouldn't capture the last value correct?

[10:52] <teatime> I beleive look-arounds are zero-width assertions, so they can't capture anything.

[10:53] <timotimo> m: "hello" ~~ / h <?before (ello)> /; say $/

[10:53] <camelia> rakudo-moar 978535: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in metachar:sym<( )>; couldn't find final ')'␤at <tmp>:1␤------> 3"hello" ~~ / h <?before (ello)>7⏏5 /; say $/␤    expecting any of:␤        infix stopper␤»

[10:53] <timotimo> m: "hello" ~~ / h <?(ello)> /; say $/

[10:53] <camelia> rakudo-moar 978535: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3"hello" ~~ / h <?7⏏5(ello)> /; say $/␤Unable to parse regex; couldn't find final '/'␤at <tmp>:1␤------> 3"hello" ~~ / h <?7…»

[10:53] <timotimo> mhm mhm

[10:54] *** snarkyboojum left
[10:54] *** Cabanossi left
[10:55] *** zakharyas left
[10:57] *** Cabanossi joined
[10:57] *** lowbro joined
[10:57] *** lowbro left
[10:57] *** lowbro joined
[10:59] *** piojo2 joined
[11:09] <Aaronepower> teatime: Sorry, I'm using this in a grammar

[11:17] <teatime> oh yeah, I meant to say...  Are there any places you're not allowed to do look-aheads?  I seem to remember that you couldn't use them in a grammar, or something, but it's been too long now   (or, am I just imagining that?)

[11:18] <Aaronepower> teatime: I have used lookaheads in grammars before.

[11:19] *** piojo2 left
[11:21] *** piojo2 joined
[11:28] *** Skarsnik joined
[11:31] <timotimo> maybe you remember something about the interplay of calling rules of your grammar with <?foo> or <!foo> and action methods?

[11:33] <Skarsnik> hello

[11:34] *** census joined
[11:39] <Aaronepower> timotimo: I tried `rule items { .+ | . [<?before or> | <?before ','>] }`

[11:41] <timotimo> don't think that works like you expect

[11:41] <timotimo> that'll either match a whole bunch of anything, or one anything that has a "or" or "," immediately after it

[11:43] <timotimo> it might work if you just remove the "| ." part

[11:47] <teatime> timotimo: yeah, that was it; thank you.

[11:48] <Aaronepower> timotimo: Well that is kind of what I want. Except now I don't know how to make it optional.

[11:48] <timotimo> what's the other condition you allow it to stop at? end of file?

[11:48] <Aaronepower> timotimo: Yes

[11:55] *** Cabanossi left
[11:56] *** zakharyas joined
[11:57] *** Cabanossi joined
[11:58] <Aaronepower> timotimo: Or just end of string

[12:00] *** dj_goku joined
[12:02] <census> I'm  having trouble with the sub in the code: https://pastebin.com/r4updX2c

[12:03] <census> It's saying: "Too few positionals passed; expected 1 argument but got 0"   I thought it was actually 1---I'm not sure how 0

[12:05] *** dj_goku left
[12:06] <Aaronepower> census: If you remove the `:` on $year on line 25 does it work?

[12:06] <Skarsnik> &make-term you want

[12:07] <census> thanks Aaronepower !  i have no idea how i missed that

[12:07] <Skarsnik> make-trem will call the sub

[12:19] <Aaronepower> timotimo: My solution was `rule items { .+ [<?before or> | <?before ','>] || .+ }` I don't know if that's bad practice or not though.

[12:22] <timotimo> Aaronepower: you can just <?before or> | <?before '.'> | $

[12:23] <Aaronepower> timotimo: Ah, I tried doing `<?before $>`

[12:24] <timotimo> i'm not sure it'd make much of a difference

[12:24] <timotimo> though $ is a zero-width thing, too

[12:26] *** cognominal left
[12:26] *** Cabanossi left
[12:27] *** Cabanossi joined
[12:29] *** llfourn left
[12:31] <census> Aaronepower and Skarsnik : when i create the sub on line 13 in https://pastebin.com/r4updX2c  you see how i put cancer. i realize it should be "cancer". how would i do with an ' like "Alzheimer's"?

[12:31] *** cognominal joined
[12:32] *** geekosaur left
[12:34] *** geekosaur joined
[12:36] <Aaronepower> What would be a reason for a proto token to cause `Cannot invoke this object (REPR: Null; VMNull)`?

[12:37] <lizmat> a bug, because you should never see that 

[12:38] <Aaronepower> lizmat: https://paste.rs/R8O Any time proto token unit is matched I get that.

[12:39] <lizmat> hmmm.. could you try renaming "unit" to something else?  maybe it's some interference with some internals?

[12:40] <Aaronepower> lizmat: Nope same error.

[12:41] <jnthn> There ain't a unit method anywhere, I don't think...

[12:41] <lizmat> :-(  then I hope someone else will be able to help you, as I'm not that familiar with grammar internals

[12:41] * jnthn doesn't spot what's going on

[12:42] <census> mst can i ask you a question?

[12:43] <jnthn> Aaronepower: I guess Grammar::Tracer and Grammar::ErrorReporting aren't to blame (you can still get it without those two)?

[12:44] <Aaronepower> jnthn: Huh, Grammar::Tracer being removed makes it work.

[12:44] <[Coke]> in core, many of the proto tokens use { <...> } instead of {*}

[12:44] <[Coke]> that's all I got. ;)

[12:47] <perlpilot> good morning #perl6

[12:47] <timotimo> hi perlpilot 

[12:47] *** gregf_ left
[12:55] *** Cabanossi left
[12:56] *** bdmatatu joined
[12:57] *** snarkyboojum joined
[12:57] *** Cabanossi joined
[12:57] <perlpilot> Aaronepower: what version of Perl 6 are you using?   I just tried your grammar and it worked fine afaict -- https://gist.github.com/perlpilot/85791ca10f671fa51132d09b7112f744

[12:57] <Aaronepower> perlpilot: 2017.07

[12:58] <perlpilot> ah ... I'm running a more recent version (as shown at the bottom of the output in that gist)

[12:59] <timotimo> Grammar::Tracer may cause the grammar to behave differently :(

[13:00] <jnthn> I thought all those were fixed :/

[13:01] <timotimo> not sure, i should probably write some test cases :)

[13:03] <timotimo> trying it against the yamlish grammar gives me "Cannot invoke this object (REPR: Null; VMNull)" again

[13:05] *** cdg joined
[13:05] *** snarkyboojum left
[13:06] <census>  query labster

[13:06] <census> hey

[13:06] <census> oops sorry about that

[13:06] *** rumble is now known as grumble

[13:07] <census> does anybody know a #perl administrator?

[13:07] <perlpilot> census: are you trying to get unbanned or something?

[13:07] <census> perlpilot i was just wondering if am banned

[13:08] <census> i tried to join the room

[13:08] <census> i got error: " Cannot join channel (+r) - you need to be identified with services"

[13:08] <timotimo> that's not a ban

[13:08] <timotimo> you just have to register with NickServ

[13:08] <census> oh okay thanks. i never had to do that before, so i didn't know. thanks for clarifying

[13:08] <perlpilot> or if your nick is already registered, identify 

[13:09] <perlpilot> census: https://freenode.net/kb/answer/registration

[13:09] <census> thanks perlpilot !

[13:10] <census> i had a question about some perl6 code i'm writing, but i remember it was also an issue that came up when i was doing perl5

[13:10] <census> in my code https://pastebin.com/XKAUDY5G on line 13 you see "Alzheimer Disease"  that works fine, but i want to add an apostrophe to make "Alzheimer's Disease" and i know i need to set up some ASCII type thing, i think ?

[13:16] <perlpilot> census: you mean you think the apostrophe needs to be encoded?  Like &#39;  ?   

[13:17] * perlpilot isn't sure what "post" does and hasn't read the docs

[13:18] <perlpilot> (I mean, I can guess what post does, but what it does with :term(), I dunno)  :)

[13:18] <census> perlpilot yes i'm worried i need something lke that because of the way I'm using ' in the syntax already that it wouldn't recognzie ' as part of what i need to locate

[13:19] <perlpilot> census: oh, you could just change your outer quotes.

[13:20] <census> perlpilot so the line is:     '( "Alzheimer Disease"[Title/Abstract] AND united states[pl] AND (("' ~ $year ~ '/01/01"[PDat] : "' ~ $year ~ '/12/31"[PDat])))'

[13:20] <perlpilot> census: or you could do '( "Alzheimer' ~ "'s" ~ 'Disease" ...'

[13:22] <census> perlpilot that didn't work. it compiled, but it returned no hits, so it didn't work with the website. unless i misinterpreted you: '( "Alzheimer' ~ "'s" ~ 'Disease"[Title/Abstract] ........... 

[13:22] *** Actualeyes left
[13:23] *** aborazmeh joined
[13:23] *** aborazmeh left
[13:23] *** aborazmeh joined
[13:24] *** xinming_ joined
[13:25] <perlpilot> oh, I left out a space giving you "Alzheimer'sDisease" instead of "Alzheimer's Disease".   Put that space back in and see if it helps

[13:27] *** xinming left
[13:29] <census> perlpilot thanks!  that worked great :)

[13:36] *** holli joined
[13:38] *** Actualeyes joined
[13:39] *** holli left
[13:39] *** HoboWithAShotgun joined
[13:46] *** skids joined
[13:48] *** hjup joined
[13:48] *** dj_goku joined
[13:48] *** dj_goku left
[13:48] *** dj_goku joined
[13:53] *** hjup left
[13:53] *** aborazmeh left
[13:54] *** dj_goku left
[13:56] <HoboWithAShotgun> which of the perl 6 releases on github is good for Linux Mint?

[13:56] <HoboWithAShotgun> https://github.com/nxadm/rakudo-pkg/releases

[13:56] <timotimo> is mint still split between an ubuntu-based and a debian-based version?

[13:57] <HoboWithAShotgun> no idea

[13:58] <timotimo> it seems so

[13:58] <timotimo> hm, or maybe the part i just read about that is out of date

[13:58] <HoboWithAShotgun> oh joy, now how do i find out which version of mint this is

[13:59] <timotimo> oh, only Linux Mint Debian Edition is based on debian; you'd find that under the name LMDE

[13:59] *** zakame left
[14:00] <timotimo> so you'll have a version based on ubuntu, so i'd expect the ubuntu packages would fit best

[14:00] <HoboWithAShotgun> mmh there is only one for 17.04, i think this 18

[14:00] <HoboWithAShotgun> i'll go ahead and give it a try

[14:00] <timotimo> no, linux mint 18 is based on ubuntu 16.04 lts

[14:05] <HoboWithAShotgun> meh, i'm just going to use rakudobrew again

[14:11] *** Exodist left
[14:11] <Skarsnik> you dl a rakudo release and follow the installation/build instruction

[14:11] <Skarsnik> +could

[14:11] *** Exodist joined
[14:12] *** sumdoc joined
[14:14] <sumdoc> Looks like change in rakudo is causing tests failure in Log::Async. It was working alright till yesterday 

[14:14] <sumdoc> https://github.com/bduggan/p6-log-async/issues/19

[14:15] <timotimo> sumdoc: does it rely on a file immediately showing writes to it when you re-open it for reading?

[14:16] <timotimo> if so, the module should really open the log file :!buffer or .flush it regularly

[14:18] <Skarsnik> maybe ping Zoffix for a toaster run? x)

[14:24] <HoboWithAShotgun> Succes :) / This is Rakudo version 2017.08-91-g9785356 built on MoarVM version 2017.08.1-128-gde6dced

[14:24] *** st_elmo joined
[14:25] <timotimo> it's not recommended to just run whatever commit is latest; if you want stability, you'd be better off using the 2017.08 (and 2017.08.1) tags 

[14:25] <sumdoc> timotimo I love latest and greatest :))

[14:26] <HoboWithAShotgun> i'm just toying around, and if i find a bug

[14:26] *** Cabanossi left
[14:27] *** Cabanossi joined
[14:30] *** fireartist left
[14:39] <bdmatatu> I've been looking into the p6-log-async issue, but haven't yet figured it out; I was thinking maybe something to do with recent rakudo work on flushing/buffering but I'm not sure

[14:40] *** piojo2 left
[14:40] *** piojo2 joined
[14:41] <timotimo> it seems very likely

[14:42] *** Kyo91 joined
[14:42] <sumdoc> timotimo Could this p6-log-aync issue due to flushing issues?

[14:43] <timotimo> that's what i expect

[14:43] <timotimo> that's the thought behind my question from half an hour ago

[14:43] <sumdoc> timotimo :)

[14:43] <HoboWithAShotgun> is there a bootstrapping tool for new modules?

[14:44] <bdmatatu> It does rely on that behavior

[14:45] <bdmatatu> I tried adding calls to close and flush before re-opening, but it didn't help

[14:45] <timotimo> there's at least mi6 and Miroku, HoboWithAShotgun 

[14:47] * HoboWithAShotgun googles

[14:47] <moritz> HoboWithAShotgun: there's also ddt

[14:48] <timotimo> all those should have the authoring tag, imo

[14:48] <moritz> https://github.com/kalkin/Ddt

[14:48] <timotimo> but only ddt does (and app::gptrixie does, too)

[14:52] <HoboWithAShotgun> which one would you remcommend?

[14:52] <moritz> I've used ddt for Gramar::ErrorReporting, and haven't regretted it

[14:52] <HoboWithAShotgun> allright

[14:52] <HoboWithAShotgun> so be it

[14:53] *** Hor|zon joined
[14:54] <HoboWithAShotgun> have the powers that be considered any (quality assurance?) measures so the module archive won't clutter as much?

[14:55] <HoboWithAShotgun> like 12 modules for the same job

[14:55] *** sumdoc left
[14:55] <moritz> qa has not much to do with the number of competing modules

[14:55] *** st_elmo left
[14:55] <moritz> and no, as far as I can tell, we haven't

[14:56] <moritz> we let people contribute whatever they want, and usage will decide which ones "win"

[14:59] <mspo> isn't that why metacpan tracks stars and downloads and stuff?

[14:59] <mspo> there are also a lot of meta-modules that gather up "good" stuff (IO::All, like posted in here yesterday)

[14:59] <ilmari> metacpan can't track downloads, since CPAN is mirrored around the world

[15:00] <mspo> okay right, just stars I guess

[15:00] <mspo> although I know people whine about that a lot

[15:00] <mspo> maybe every lib should ping back to google analytics :)

[15:01] <mspo> (joke)

[15:01] <mspo> the big dependency graph is another good metric (N programs depend on Y library)

[15:04] *** araujo left
[15:06] *** ChoHag left
[15:07] *** skids left
[15:08] *** ChoHag joined
[15:11] <HoboWithAShotgun> what is the perl6 equiv of "use lib"?

[15:12] <lizmat> use lib

[15:12] <timotimo> "use lib"

[15:14] <moritz> I'm currently searching for a good subtitle for my new book

[15:14] <moritz> the title will most likely be "Parsing with Perl 6 Regexes and Grammars"

[15:15] <moritz> maybe something like "A Deep Dive into Parsing" or "An In-Depth Exploration of Parsing"

[15:27] <Skarsnik> I deep dive in parsing hell

[15:28] <timotimo> "how to not drown"

[15:30] <census> Skarsnik are you good with HTTP::UserAgent ?

[15:31] <bdmatatu> "a recursive descent into parsing"?

[15:31] <timotimo> "how i .made it out"

[15:33] <moritz> bdmatatu: I like it :-)

[15:34] <bdmatatu> :-)

[15:35] *** kd8dyg joined
[15:36] <moritz> but I fear my publisher won't :/

[15:36] *** dj_goku joined
[15:36] *** dj_goku left
[15:36] *** dj_goku joined
[15:39] <moritz> oh well, it's worth trying

[15:40] <jnthn> .oO( From text to action :P )

[15:41] *** dj_goku left
[15:42] <timotimo> A call to action()

[15:43] *** HoboWithAShotgun left
[15:44] *** kd8dyg left
[15:47] <jnthn> "Putting text into action" is better and would do the same pun :)

[15:52] *** grondilu left
[15:56] *** Cabanossi left
[15:57] *** Cabanossi joined
[16:04] <moritz> the disadvantage with in-jokes in the title is that a potential reader is mostl likely not yet in on the joke

[16:05] <timotimo> right

[16:06] *** mtj_ left
[16:09] *** skids joined
[16:09] *** khw joined
[16:12] *** robertle left
[16:13] * masak .oO( the advantage with intensional definitions in mathematics is that all jokes are in-jokes )

[16:15] <moritz> eeks. My publisher uses a new layout, which only allows 63 characters per line in code examples

[16:15] <moritz> used to be 68

[16:16] <timotimo> damn

[16:29] *** ash_gti joined
[16:29] *** abraxxa left
[16:31] <Ulti> if I ever once suggested I wanted strings to be iterable and array indexable I was wrong, so wrong... this feature of Python is nightmarish for bugs without strict typing

[16:32] <Ulti> some of the more subtler design choices in Perl 5 can only be appreciated somewhere else

[16:33] <Ulti> I spent an hour with an error KeyError 'w' where its only because its my own code I knew it would be some weird bug related to 'weight'[0]

[16:33] <skids> Yeah but "not as crappy" is a bummer of a marketing theme.

[16:33] <Ulti> if it was more complex code working in a team thats horrible

[16:33] <Ulti> the error ends up miles from the actual bug

[16:34] *** dogbert2 joined
[16:36] *** khw left
[16:37] *** robertle joined
[16:38] *** HoboWithAShotgun joined
[16:38] *** dakkar left
[16:39] *** kyan joined
[16:44] *** Aaronepower left
[16:44] *** smls joined
[16:45] *** piojo2 left
[16:45] <smls> bisectable6:  say ("\c[REGIONAL INDICATOR SYMBOL LETTER G]" x 2).chars;

[16:45] <bisectable6> smls, Bisecting by output (old=2015.12 new=9785356) because on both starting points the exit code is 0

[16:45] <bisectable6> smls, bisect log: https://gist.github.com/01a82d07e8009c7beffe5893432dddf2

[16:45] <bisectable6> smls, (2017-08-23) https://github.com/rakudo/rakudo/commit/593fa5f87fcc97cf3cbafd62f34b3119c9b1fbe3

[16:46] *** leont joined
[16:46] *** HoboWithAShotgun left
[16:48] *** samb1 left
[16:52] *** khw joined
[17:00] *** samb1 joined
[17:03] *** purcell joined
[17:03] *** setty1 joined
[17:04] *** ash_gti left
[17:04] *** zakharyas left
[17:09] *** ash_gti joined
[17:19] <rindolf> smls: cool bot!

[17:22] <nadim> I had two new methods, https://nopaste.linux-dev.org/?1161381, and I had to change the order  so it worked when I called it with three arguments. Am I missing something?

[17:25] *** dj_goku joined
[17:25] *** dj_goku left
[17:25] *** dj_goku joined
[17:26] <smls> rindolf: Yep. Created by AlexDaniel, I think.

[17:28] <smls> rindolf: See here for the documentation: https://github.com/perl6/whateverable/wiki

[17:30] *** dj_goku left
[17:30] <smls> nadim: Named parameters only affect multi-dispatch when they are marked *required*, i.e. `:$lines!` or `:$lines is required`

[17:33] <nadim> smls++

[17:36] <rindolf> smls++ # helping nadim 

[17:36] <rindolf> nadim: you remember about the p6-dump-tree change, right?

[17:38] <nadim> rindolf: Yes I do, as you know I have been, and still am, quite sick. But I hope it will happen soon. 

[17:39] *** purcell left
[17:40] *** zakharyas joined
[17:40] <rindolf> nadim: i didn't quite recall that. I suffer from info overload

[17:41] <rindolf> nadim: hope you feel better soon

[17:41] *** HoboWithAShotgun joined
[17:43] <nadim> rindolf: thanks

[17:46] *** jkoo joined
[17:47] *** zakharyas left
[17:48] *** ash_gti left
[17:50] *** ash_gti joined
[17:55] *** andrzejku joined
[17:55] *** skids left
[17:59] *** Kyo91 left
[18:00] *** Rawriful joined
[18:00] *** Aaronepower joined
[18:01] *** Kyo91 joined
[18:10] *** Cabanossi left
[18:12] *** Cabanossi joined
[18:15] *** Aaronepower left
[18:18] *** cdg left
[18:19] *** ash_gti left
[18:21] *** jonas1 left
[18:33] *** census left
[18:41] *** Cabanossi left
[18:42] *** Cabanossi joined
[18:54] *** HoboWithAShotgun left
[18:59] *** Franciman joined
[19:02] *** pecastro left
[19:06] *** pecastro joined
[19:08] *** zakharyas joined
[19:11] *** bartolin joined
[19:11] *** darutoko left
[19:13] *** dj_goku joined
[19:18] *** dj_goku left
[19:19] *** notbenh left
[19:21] *** pecastro left
[19:21] *** andrewalker left
[19:24] *** zakharyas left
[19:26] *** andrewalker joined
[19:27] *** pecastro joined
[19:27] *** _28_ria left
[19:28] *** kyan left
[19:31] *** pecastro left
[19:32] *** _28_ria joined
[19:32] *** bdmatatu left
[19:33] *** AlexDaniel joined
[19:35] *** zacts left
[19:35] *** coverable6 joined
[19:37] *** bloatable6 joined
[19:38] *** pecastro joined
[19:39] *** |oLa| left
[19:39] *** zacts joined
[19:42] *** |oLa| joined
[19:43] *** ShalokShalom_ is now known as ShalokShalom

[19:45] *** TEttinger joined
[19:47] *** ChoHag left
[19:48] *** pecastro left
[19:52] *** pecastro joined
[20:02] *** smls left
[20:03] *** cdg joined
[20:08] *** jkoo left
[20:14] *** itaipu joined
[20:19] *** ufobat left
[20:21] *** notbenh joined
[20:27] <BooK> nine++ # -OFun

[20:29] *** cdg_ joined
[20:29] <BooK> we spent three hours on enums, and all I produced was a typo fix :-)

[20:29] <Skarsnik> huhu

[20:32] *** cdg left
[20:33] *** raschipi joined
[20:43] *** skids joined
[20:45] *** robertle left
[20:48] <lizmat> BooK++

[20:49] *** mr-foobar joined
[20:54] *** ash_gti joined
[20:56] *** andrzejku left
[21:01] *** dj_goku joined
[21:01] *** dj_goku left
[21:01] *** dj_goku joined
[21:06] *** dj_goku left
[21:09] *** nattefrost left
[21:18] *** skids left
[21:20] *** Rawriful left
[21:21] *** itaipu left
[21:32] *** Kyo91_ joined
[21:34] <BooK> lizmat: my first ever commit to rakudo :-)

[21:34] *** Kyo91 left
[21:36] *** Kyo91_ left
[21:36] <MasterDuke> BooK++

[21:37] <raschipi> m: say Bool ~~ Enumeration;

[21:37] <camelia> rakudo-moar 347da8: OUTPUT: «False␤»

[21:38] <raschipi> 💩

[21:39] <raschipi> Sorry for the pile of poo, I was testing if the unicode was fixed in the logs.

[21:43] <BooK> raschipi: yeah, that's what nine and I tried to work on, and failed (for now)

[21:44] <raschipi> I'm eagerly waiting for your results.

[21:51] *** Aaronepower joined
[21:55] *** Cabanossi left
[21:57] *** Cabanossi joined
[21:59] *** lancew joined
[21:59] *** setty1 left
[22:18] *** geekosaur left
[22:19] *** geekosaur joined
[22:19] *** leont left
[22:29] *** ash_gti left
[22:34] *** mtj_ joined
[22:35] *** someuser left
[22:49] *** dj_goku joined
[22:49] *** dj_goku left
[22:49] *** dj_goku joined
[22:49] *** cdg joined
[22:53] *** cdg_ left
[22:53] *** pilne joined
[22:54] *** cdg left
[22:54] *** dj_goku left
[22:55] *** Cabanossi left
[22:55] *** cdg joined
[22:56] *** cdg_ joined
[22:57] *** Cabanossi joined
[22:58] *** skids joined
[23:00] *** cdg left
[23:00] *** rid joined
[23:01] *** rid left
[23:04] *** ttkp6 joined
[23:07] *** lancew left
[23:08] *** cdg_ left
[23:08] *** cdg joined
[23:10] *** cdg left
[23:33] <Geth> ¦ doc: a7453d5154 | (Will "Coke" Coleda)++ | xt/words.pws

[23:33] <Geth> ¦ doc: learn new word

[23:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a7453d5154

[23:33] <Geth> ¦ doc: 871cc1a173 | (Will "Coke" Coleda)++ | doc/Type/utf8.pod6

[23:33] <Geth> ¦ doc: fix typo

[23:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/871cc1a173

[23:33] <Geth> ¦ doc: d4170d14f4 | (Will "Coke" Coleda)++ | doc/Type/utf8.pod6

[23:33] <Geth> ¦ doc: Use actual class def so the example compiles

[23:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d4170d14f4

[23:33] *** itaipu joined
[23:34] *** rindolf left
[23:37] *** cpage_ left
[23:41] *** RID1984 joined
[23:41] *** Cabanossi left
[23:41] *** RID1984 left
[23:42] *** Cabanossi joined
[23:46] <Geth> ¦ doc: ba916848ce | (Will "Coke" Coleda)++ | doc/Type/Any.pod6

[23:46] <Geth> ¦ doc: Remove extra return part of sig.

[23:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ba916848ce

[23:46] <Geth> ¦ doc: 04ee7902e3 | (Will "Coke" Coleda)++ | doc/Type/Thread.pod6

[23:46] <Geth> ¦ doc: remove use of "HLL".

[23:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/04ee7902e3

