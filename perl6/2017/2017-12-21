[00:00] *** cdg joined
[00:02] *** SHODAN joined
[00:14] *** cdg left
[00:14] *** troys is now known as troys_

[00:18] * AlexDaniel 💤

[00:21] *** agwind joined
[00:21] *** AndChat|688961 left
[00:23] *** bwisti left
[00:27] *** Rawriful joined
[00:28] <Geth> ¦ doc: b42c58c029 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO/Handle.pod6

[00:28] <Geth> ¦ doc: Make IO::Handle.eof docs more precise

[00:28] <Geth> ¦ doc: 

[00:28] <Geth> ¦ doc: with respect to what "exhausted handle" means and the behaviour

[00:28] <Geth> ¦ doc: of .eof when .seeking back into content.

[00:28] <synopsebot> Link: https://doc.perl6.org/type/IO/Handle

[00:28] <Geth> ¦ doc: 

[00:28] <Geth> ¦ doc: Spec: https://github.com/perl6/roast/commit/d478095cb0

[00:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b42c58c029

[00:28] <Geth> ¦ doc: b62849f10f | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO/Handle.pod6

[00:28] <Geth> ¦ doc: Fix typo

[00:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b62849f10f

[00:32] *** synopsebot left
[00:32] *** synopsebot joined
[00:32] *** ChanServ sets mode: +v synopsebot

[00:33] *** pilne joined
[00:38] *** Actualeyes joined
[00:40] *** espadrine joined
[00:43] *** synopsebot left
[00:44] *** synopsebot joined
[00:44] *** ChanServ sets mode: +v synopsebot

[00:46] *** lookatme joined
[00:47] <lookatme> o/

[00:47] <tyil> \o

[00:54] *** mikowitz left
[00:55] *** Guest19 joined
[01:03] *** cdg joined
[01:04] <pilne> i've never "missed" a language as much as I miss perl6 when i choose to, or have to look elsewhere

[01:06] *** david_xd left
[01:07] *** cdg left
[01:09] *** pdcawley joined
[01:15] *** pdcawley left
[01:20] *** pdcawley joined
[01:30] *** Zoffix joined
[01:30] <Zoffix> pilne: it's like we say: "Perl 6 is the last language you'll ever learn"

[01:31] *** kerframil joined
[01:32] <TEttinger> followed by a picture of tonya harding, signed "or else"

[01:33] <pilne> LOL

[01:33] <pilne> i remember watching that coverage on a CRT TV :D

[01:38] *** agwind left
[01:41] *** g41j1n joined
[01:50] *** wamba left
[01:53] *** Praise left
[02:03] *** noganex_ joined
[02:04] *** piojo1 joined
[02:04] *** olinkl_ joined
[02:04] *** Grauwolf_ joined
[02:05] *** parisba_ joined
[02:05] *** jnap__ joined
[02:05] *** BuildTheRobots_ joined
[02:06] *** hoelzro joined
[02:07] *** noganex left
[02:07] *** piojo left
[02:07] *** epony left
[02:07] *** xi- left
[02:07] *** Grauwolf left
[02:07] *** afresh1 left
[02:07] *** Zoffix left
[02:07] *** BuildTheRobots left
[02:07] *** parisba left
[02:07] *** nekomune left
[02:07] *** olinkl left
[02:07] *** hoelzro_ left
[02:07] *** jnap_ left
[02:07] *** parisba_ is now known as parisba

[02:07] *** jnap__ is now known as jnap_

[02:07] *** afresh1 joined
[02:07] *** olinkl_ is now known as olinkl

[02:07] *** BuildTheRobots_ is now known as BuildTheRobots

[02:08] *** epony joined
[02:08] *** Zoffix joined
[02:08] *** xi- joined
[02:08] *** nekomune joined
[02:09] *** statisfiable6 left
[02:09] *** bisectable6 left
[02:09] *** quotable6 left
[02:10] *** releasable6 left
[02:10] *** coverable6 left
[02:10] *** benchable6 left
[02:10] *** squashable6 left
[02:11] *** greppable6 left
[02:11] *** greppable6 joined
[02:11] *** jast left
[02:17] *** agwind joined
[02:18] *** jast joined
[02:23] <riceandbeans> how stark of a difference is there going from 5 to 6?

[02:29] <Hotkeys> riceandbeans: here's a quick rundown https://docs.perl6.org/language/5to6-nutshell

[02:29] <b2gills> riceandbeans: I have a small test file that tries to do a bunch of things in such a way that it works for both. In that file the workarounds far outweigh the code

[02:30] <Hotkeys> I probably should've read context

[02:31] <riceandbeans> How about performance of 6 vs 5?

[02:33] <riceandbeans> ugh the whitespace thing is going to take getting used to

[02:34] <b2gills> There are some examples where Perl 6 can beat Perl 5. Writing Perl 6 is nicer.

[02:35] <Hotkeys> There's a reason "Perl 6 is the last language you'll ever learn" :P

[02:35] <Hotkeys> It may not beat other languages performance-wise (yet) but it's ever improving and has come a long way since christmas 2015

[02:35] <Hotkeys> and writing p6 is very enjoyable

[02:37] <riceandbeans> well, the only one it needs to compete against is perl 5

[02:37] <riceandbeans> that's all I'm comparing it to

[02:37] *** g41j1n left
[02:43] <Geth> ¦ doc: c57a6e0033 | (Brad Gilbert)++ (committed using GitHub Web editor) | doc/Type/atomicint.pod6

[02:43] <Geth> ¦ doc: Remove extra - in atomic-[inc|dec]-fetch

[02:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c57a6e0033

[02:43] <synopsebot> Link: https://doc.perl6.org/type/atomicint

[02:44] *** cdg joined
[02:45] *** ilbot3 left
[02:48] *** cdg left
[02:53] *** Rawriful left
[02:56] *** ilbot3 joined
[03:00] <lookatme> :)

[03:04] *** agwind left
[03:12] *** agwind joined
[03:20] *** eliasr left
[03:20] *** agwind left
[03:25] *** flatwhite joined
[03:25] *** kerframil left
[03:25] *** flatwhite is now known as kerframil

[03:27] *** Mikasi joined
[03:34] *** pilne left
[03:35] <Zoffix> riceandbeans: very stark, if you're aiming at native Perl 6, rather than just speaking with a heavy Perl 5 accent. They're different languages. Performance-wise: rakudo (perl6 compiler) is currently slower in many areas, but in the past year+ it caught quite a lot. I'd say if viewed as a landscape, rakudo's is a very uneven one--writing something differently can sometimes give 10x boost--while perl5's is

[03:35] <Zoffix> smooth. Specific area where perl5 is a lot faster is regexes: in rakudo they both seen little optimization so far and are more elaborate than perl5's (you get proper Match objects for all Captures for example). BUT, whenever I write Perl 5, I often have to write stuff while mubling "this is so much easier to write in perl 6" :) *Programmer's time* is a lot more optimized in Perl6 imo

[03:36] <Zoffix> riceandbeans: it's like the brochure says (page 11): "Consice" is the word :) https://github.com/perl6/marketing/blob/master/pub/Introducing-Perl6-Brochure.pdf

[03:36] <Zoffix> ... if spelt right :P

[03:38] <Zoffix> My personal pain-point currently is lack of polished, top-notch, perl6 modules (Mojo::Pg, Mojolicious), not perf

[03:40] <Zoffix> stressing on *polished*

[03:40] <Zoffix> \o

[03:41] *** Zoffix left
[04:00] *** astj left
[04:01] *** astj joined
[04:04] *** astj left
[04:04] *** astj joined
[04:06] *** mahafyi joined
[04:06] *** Cabanossi left
[04:07] *** Cabanossi joined
[04:10] *** astj left
[04:11] *** astj joined
[04:15] *** mahafyi left
[04:23] <riceandbeans> :(

[04:24] <riceandbeans> I do perl5 every night at home working with mojo::pg and a full mojo app

[04:24] <riceandbeans> how is moarvm vs the jvm performance?

[04:24] <riceandbeans> I mean, after the five years of waiting for a jvm to start

[04:26] <riceandbeans> random, I saw a funny youtube of larry wall and he referenced companies really close to me, so I got curious and I was like....where does he work? I didn't figure it out in my short search before I lost interest, BUT his personal page mentions his church, which I can almost walk to

[04:30] *** troys_ is now known as troys

[04:50] *** cpup left
[04:56] *** cpup joined
[05:12] *** perigrin_ joined
[05:12] *** kshannon_ joined
[05:13] *** perigrin left
[05:13] *** kshannon left
[05:14] *** cdg joined
[05:17] *** poohman joined
[05:18] *** poohman left
[05:19] *** poohman joined
[05:19] *** poohman left
[05:19] *** cdg left
[05:33] *** aindilis left
[05:33] *** traxex left
[05:38] *** traxex joined
[05:54] *** espadrine left
[05:56] *** khw left
[06:02] *** cpup left
[06:10] *** SCHAPiE left
[06:19] *** cpup joined
[06:20] *** shadowpaste0 joined
[06:20] *** [Coke]_ joined
[06:20] *** [Coke]_ left
[06:20] *** [Coke]_ joined
[06:21] *** BooK_ joined
[06:22] *** ccntrq- joined
[06:26] *** hoelzro left
[06:26] *** robinsmidsrod left
[06:26] *** shadowpaste left
[06:26] *** buggable left
[06:26] *** simcop2387 left
[06:26] *** [Coke] left
[06:26] *** leedo left
[06:26] *** ZofBot left
[06:26] *** plicease left
[06:26] *** kent\n left
[06:26] *** peteretep left
[06:26] *** BooK left
[06:26] *** jcallen left
[06:26] *** gdonald left
[06:26] *** NEveD left
[06:26] *** ccntrq left
[06:26] *** shadowpaste0 is now known as shadowpaste

[06:27] *** troys is now known as troys_

[06:28] *** greppable6 left
[06:28] *** greppable6 joined
[06:29] *** darutoko joined
[06:31] *** Guest19 left
[06:31] *** hoelzro joined
[06:31] *** robinsmidsrod joined
[06:31] *** buggable joined
[06:31] *** simcop2387 joined
[06:31] *** leedo joined
[06:31] *** ZofBot joined
[06:31] *** plicease joined
[06:31] *** kent\n joined
[06:31] *** peteretep joined
[06:31] *** jcallen joined
[06:31] *** gdonald joined
[06:31] *** NEveD joined
[06:31] *** leguin.freenode.net sets mode: +vv buggable ZofBot

[06:35] *** greppable6 left
[06:35] *** greppable6 joined
[06:48] <piojo1> How do you indent and brace multi-line method parameter lists? (things can get really long with types, where, default values, and argument unpacking)

[06:48] *** hoelzro left
[06:48] *** robinsmidsrod left
[06:48] *** buggable left
[06:48] *** simcop2387 left
[06:48] *** leedo left
[06:48] *** ZofBot left
[06:48] *** plicease left
[06:48] *** kent\n left
[06:48] *** peteretep left
[06:48] *** jcallen left
[06:48] *** gdonald left
[06:48] *** NEveD left
[06:48] *** SCHAPiE joined
[06:48] <piojo1> is there any commonly preferred style?

[06:50] *** domidumont joined
[06:50] *** yoleaux left
[06:51] *** preaction left
[06:51] <piojo1> (I mean signatures, not invocations)

[06:53] *** preaction joined
[06:54] *** domidumont left
[07:01] *** Mikasi left
[07:06] *** konsolebox left
[07:06] *** lancew left
[07:08] *** lancew joined
[07:08] *** konsolebox joined
[07:09] *** domidumont joined
[07:13] *** domidumont left
[07:14] *** domidumont joined
[07:15] *** konsolebox left
[07:16] *** troys_ is now known as troys

[07:16] *** konsolebox joined
[07:19] <moritz> piojo1: http://perlpunks.de/paste/show/5a3b607e.727d.9a

[07:20] *** pdcawley left
[07:21] <piojo1> moritz: thanks. I think I'll follow your lead and break the old perl tradition of same-line praces

[07:23] *** troys left
[07:24] *** NEveD joined
[07:24] *** hoelzro joined
[07:24] *** peteretep joined
[07:24] *** gdonald joined
[07:24] *** robinsmidsrod joined
[07:24] *** leedo joined
[07:24] *** jcallen joined
[07:25] *** buggable joined
[07:25] *** ZofBot joined
[07:25] *** simcop2387 joined
[07:25] *** plicease joined
[07:26] <piojo1> For consistency, do you use classical next-line braces when the argument list isn't long? https://pastebin.com/c8LjkPPT

[07:26] *** kent\n joined
[07:27] <moritz> piojo1: no, I use cuddled braces there

[07:28] <piojo1> moritz: thanks

[07:28] <piojo1> I see your longer style is a hybrid of cuddled and next-line braces :)

[07:29] *** cognominal joined
[07:29] <moritz> piojo1: not really; in the multi-line example, the { is still cuddled with the ) on the same line

[07:32] *** konsolebox left
[07:34] *** lancew left
[07:34] <piojo1> moritz: yes, but I see the line-break as being part of the next-line style. Though I suspect your perspective is coming from a different place (list formatting) than mine (function formatting)

[07:34] *** wamba joined
[07:34] *** konsolebox joined
[07:35] *** lowbro joined
[07:35] *** lowbro left
[07:35] *** lowbro joined
[07:36] *** cognominal left
[07:38] *** domidumont left
[07:39] *** domidumont joined
[07:48] <Geth> ¦ Pod-To-HTML: fluca1978++ created pull request #29: Use of a debug environment variable.

[07:48] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/pull/29

[07:59] *** traxex left
[07:59] *** abraxxa joined
[08:03] *** aborazmeh joined
[08:03] *** aborazmeh left
[08:03] *** aborazmeh joined
[08:04] *** traxex joined
[08:15] *** aborazmeh left
[08:20] *** Grauwolf_ left
[08:20] *** aborazmeh joined
[08:20] *** aborazmeh left
[08:20] *** aborazmeh joined
[08:20] *** Grauwolf joined
[08:30] *** wamba left
[08:33] *** kerframil left
[08:36] *** dakkar joined
[08:41] *** aborazmeh left
[08:43] *** konsolebox left
[08:44] *** bioexpress joined
[08:45] *** konsolebox joined
[08:45] *** pmurias joined
[08:48] *** eliasr joined
[08:49] *** yoleaux joined
[08:49] *** ChanServ sets mode: +v yoleaux

[08:51] *** scimon joined
[08:51] <scimon> Morning all.

[08:56] <bioexpress> Hello, how could I rewrite this code https://gist.github.com/anonymous/1eec3377fd8569b9a2330def847b05d9 to get a better error message?

[09:00] <scimon> One sec.

[09:02] <moritz> bioexpress: subset PositiveInt of Int where * > 0

[09:02] *** parv joined
[09:02] <moritz> bioexpress: and then use PositiveInt as a type constraint

[09:02] <moritz> I think you can also do things like

[09:02] <moritz> m: subset ABC of Int where { $_ > 0 or fail "must be positive" }; my ABC $x = -3;

[09:02] <evalable6> moritz, rakudo-moar bbf95dbc7: OUTPUT: «(exit code 1) must be positive␤  in block <unit> at /tmp/0TWYzjcHRr line 1␤␤»

[09:04] <scimon> Both of those are great answers ++moritz

[09:05] *** konsolebox left
[09:09] *** rindolf joined
[09:12] *** konsolebox joined
[09:15] *** cdg joined
[09:19] *** cdg left
[09:24] *** wamba joined
[09:45] *** konsolebox left
[09:46] *** konsolebox joined
[09:49] <Ulti> scimon++ for todays adventing

[09:50] <scimon> Cheers

[09:55] *** vichib left
[09:56] *** Actualeyes left
[09:57] *** Actualeyes joined
[10:00] *** traxex left
[10:00] *** traxex joined
[10:02] *** traxex left
[10:06] *** traxex joined
[10:06] *** jeromelanteri joined
[10:09] *** sena_kun joined
[10:14] <bioexpress> moritz: thx!

[10:21] *** parv left
[10:22] <Geth> ¦ perl6.org: packtpartner++ created pull request #89: Update index.html

[10:22] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/pull/89

[10:25] *** xinming_ joined
[10:27] <Geth> ¦ perl6.org: 43387f37c7 | Packt++ (committed by Moritz Lenz) | source/resources/index.html

[10:27] <Geth> ¦ perl6.org: Update index.html

[10:27] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/43387f37c7

[10:29] *** xinming left
[10:51] *** cdg joined
[10:55] *** bioexpress left
[10:55] *** cdg left
[10:57] *** abraxxa left
[10:58] *** abraxxa joined
[11:16] *** kerframil joined
[11:48] *** kaiwkx joined
[11:48] *** kaiwkx left
[11:50] *** void1 joined
[11:50] *** void1 left
[11:50] *** void1 joined
[11:50] *** kaiwkx joined
[11:53] *** kaiwkx left
[11:56] *** eliasr left
[12:19] *** strangemk2 joined
[12:21] *** strangemk2 left
[12:22] *** void1 left
[12:26] *** void1 joined
[12:26] *** void1 left
[12:26] *** void1 joined
[12:28] *** geospeck joined
[12:33] *** xcm left
[12:34] *** xcm joined
[12:35] *** mahafyi joined
[12:39] *** lowbro left
[12:40] *** void1 left
[12:40] <AlexDaniel> “looks like Camelia lost its $*IN” hmmm

[12:40] <AlexDaniel> evalable6: say slurp

[12:40] <evalable6> AlexDaniel, rakudo-moar 202459ce0: OUTPUT: «♥🦋 ꒛㎲₊⼦🂴⧿⌟ⓜ≹℻ 😦⦀🌵 🖰㌲⎢➸ 🐍💔 🗭…»

[12:40] <evalable6> AlexDaniel, Full output: https://gist.github.com/e3280956c818adc6e39e3d6481481775

[12:40] <mahafyi> what makes a module 'polished'? with reference to what Zoffix mentioned earlier today? I asked  the ther day about what makes a line of cod elegant? is it being as concise as possible, as performant as possible, should it be OO programming?

[12:40] *** Praise joined
[12:40] *** Praise left
[12:40] *** Praise joined
[12:41] *** kerframil left
[12:41] <mahafyi> since i am working towards making a module , though its going to be spectacularly slow i suspect

[12:43] <AlexDaniel> mahafyi: for me it means well-thought-out. Also it should be properly maintaned. Concise, fast, OO — these really don't matter IMO.

[12:44] *** reportable6 left
[12:44] *** unicodable6 left
[12:44] *** greppable6 left
[12:44] *** reportable6 joined
[12:44] *** squashable6 joined
[12:44] *** unicodable6 joined
[12:44] *** ChanServ sets mode: +v unicodable6

[12:44] *** greppable6 joined
[12:44] *** benchable6 joined
[12:44] *** ChanServ sets mode: +v benchable6

[12:44] <Hotkeys> I'd say conciseness is good as long as you aren't hindering readability 

[12:52] <scimon> I'd prefer a documented and tested module that's maybe not as fast as it could be over a lightning fast one I have to trawl through the code of in order to work out how to use it.

[12:56] <mahafyi> well then i will skip attempt to use OO for now at least... i think i can get the functional programming part of it

[12:56] *** vichib joined
[13:00] *** cpage_ joined
[13:04] <scimon> One of the strengths of the language is you can mix and match. 

[13:04] <scimon> Including functional with types :) 

[13:11] *** Zoffix joined
[13:15] <Zoffix> mahafyi: by "polished" I meant well-designed, well-tested, well-documented, and well-battle-tested. Any time I reach for Mojo::Pg, I can easily look up in the docs what I need and solve my task at hand with a single method call chain of objects that fit one another; all without any bugs or issues. By constrast, with Perl 6's DBIish, I have to read the source code to find most of the methods, which are

[13:15] <Zoffix> inconsistently named, awkward to use, and last time I used that module, it ate up all the RAM on my server.

[13:16] <jast> anything that is inspired by DBI would be awkward to use

[13:17] <jast> anyway, "polished" is a woolly term to use, but for libraries what I care about most is that they're easy to use, common cases don't need too much useless boilerplate (ideally none at all), but special cases are still possible without too much monkeying around

[13:18] *** cpage_ left
[13:18] <mahafyi> Zoffix : :) i will try my hand , though no deadline in sight, all i know is i will work daily at it.

[13:19] <jast> one way to make a not-so-polished library is to design it up front to be able to do "absolutely anything" but to achieve anything, the library's user has to set up a few dozen context objects and strategies and adapters and callback chains

[13:19] <Zoffix> Totally.

[13:22] *** Zoffix left
[13:30] <scimon> Good points 

[13:37] *** cpage_ joined
[13:41] *** jeromelanteri left
[13:44] <mahafyi> and we should try to reuse modules wherever possible?

[13:45] *** cpage left
[13:48] *** cpage joined
[13:48] <scimon> Generally reinventing the wheel is a bad plan.

[13:48] <scimon> (So if a module exists to do something it makes sense to try and use it)

[13:49] <jast> it's not always easy to decide

[13:49] <jast> generally if a module covers the thing you need fairly well, it tends to be a good idea to use it

[13:49] *** lizmat left
[13:49] <jast> but it depends on how well and according to which criteria the module is being maintained, too

[13:50] <jast> for example, if the maintainers of a module like to move fast and break things, you'll quickly end up being stuck with an old version forever, or you'll end up maintaining your own fork

[14:04] <Geth> ¦ doc: 77bbde9d9e | (Luca Ferrari)++ | doc/Language/terms.pod6

[14:04] <Geth> ¦ doc: Fix 'too early' ambigous statement in constant term explaination.

[14:04] <Geth> ¦ doc: 

[14:04] <Geth> ¦ doc: As proposed in Pull Request <https://github.com/perl6/doc/pull/1686>

[14:04] <Geth> ¦ doc: and related discussion, it is probably better to rephrase the 'too early'

[14:04] <synopsebot> Link: https://doc.perl6.org/language/terms

[14:04] <Geth> ¦ doc: statement. Since the original pull request author gfldex did not

[14:04] <Geth> ¦ doc: comment out the review for almost three weeks, I'm committing this

[14:04] <Geth> ¦ doc: with the only aim to help readers better understanding the paragraph.

[14:04] <Geth> ¦ doc: 

[14:04] <Geth> ¦ doc: Thanks to gfldex for his effort.

[14:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/77bbde9d9e

[14:04] <Geth> ¦ doc: ca2095be8b | (Luca Ferrari)++ | doc/Language/terms.pod6

[14:04] <Geth> ¦ doc: Add link to traps sections for compile time constants.

[14:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ca2095be8b

[14:10] *** domidumont1 joined
[14:13] *** domidumont left
[14:15] *** cdg joined
[14:27] <Geth> ¦ doc: dc141b07e8 | (Luca Ferrari)++ | doc/Language/traps.pod6

[14:27] <Geth> ¦ doc: Minor rewording of the constant trap section.

[14:27] <Geth> ¦ doc: 

[14:27] <Geth> ¦ doc: Use of a dash coherently between 'pre'-'compilation'.

[14:27] <Geth> ¦ doc: Add 'Computed' to the title.

[14:27] <synopsebot> Link: https://doc.perl6.org/language/traps

[14:27] <Geth> ¦ doc: Minor rephrasing of the final paragraph.

[14:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dc141b07e8

[14:29] *** lizmat joined
[14:43] <scimon> jast: one would hope if the authors are doing that they'd also be open to outside help. :)

[14:46] *** david_xd joined
[14:47] *** aindilis joined
[14:50] <Geth> ¦ Pod-To-HTML: bb6bd8dfbd | (Luca Ferrari)++ (committed by Zoffix Znet) | lib/Pod/To/HTML.pm

[14:50] <Geth> ¦ Pod-To-HTML: Use of a debug environment variable. (#29)

[14:50] <Geth> ¦ Pod-To-HTML: 

[14:50] <Geth> ¦ Pod-To-HTML: * Use of a debug environment variable.

[14:50] <Geth> ¦ Pod-To-HTML: 

[14:50] <Geth> ¦ Pod-To-HTML: Instead of defining a couple of methods with the same name 'Debug' to enable

[14:50] <Geth> ¦ Pod-To-HTML: or disable the debugging output, borrow the same P6DOC_DEBUG environment

[14:50] <Geth> ¦ Pod-To-HTML: variable.

[14:50] <Geth> ¦ Pod-To-HTML: <…commit message has 17 more lines…>

[14:50] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/bb6bd8dfbd

[14:51] *** lizmat_ joined
[14:51] <scimon> So... I just tried something silly (defining a subset of a Sub that checks the arity) my attempt didn't work. But now I wonder if it's doable somehow.

[14:51] <Geth> ¦ Pod-To-HTML: d91cc41dee | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[14:51] <Geth> ¦ Pod-To-HTML: Document P6DOC_DEBUG env var

[14:51] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/d91cc41dee

[14:52] <Geth> ¦ Pod-To-HTML: 916bd50f5e | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[14:52] <Geth> ¦ Pod-To-HTML: Fix tpo

[14:52] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/916bd50f5e

[14:52] <Geth> ¦ Pod-To-HTML: 98cc35eb05 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[14:52] <Geth> ¦ Pod-To-HTML: Bump version

[14:52] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/98cc35eb05

[14:52] <scimon> m: subset TwoArgs of Sub where *.arity == 2;sub caller ( TwoArgs &f, $a, $b ) { say &f($a,$b) };sub callee( $a, $b ) { $a + $b };caller( &callee, 1, 2 );

[14:52] <evalable6> scimon, rakudo-moar 202459ce0: OUTPUT: «(exit code 1) Type check failed in binding to parameter '&f'; expected Callable[Sub] but got Sub (sub callee ($a, $b) {...)␤  in sub caller at /tmp/MOERkS7uNS line 1␤  in block <unit> at /tmp/MOERkS7uNS line 1␤␤»

[14:52] *** Hotkeys left
[14:53] *** lizmat left
[14:58] *** Zoffix joined
[15:00] <Zoffix> scimon: nothing silly about that. We support full signature typechecks both with subsets and even in signature itself.

[15:00] <Zoffix> m: subset IntAndStrSub where .?signature ~~ :(Int, Str); say -> Int, Str {} ~~ IntAndStrSub; say {;} ~~ IntAndStrSub

[15:00] <evalable6> Zoffix, rakudo-moar 202459ce0: OUTPUT: «True␤False␤»

[15:00] <Zoffix> m: multi z(&s:(Int, Str)) { say "right sub" }; multi z(|) { say "wrong sub" }; z -> Int, Str {}; z {;}'

[15:01] <evalable6> Zoffix, rakudo-moar 202459ce0: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/pic1Gp40_R␤Strange…»

[15:01] <evalable6> Zoffix, Full output: https://gist.github.com/370abc01da5192989fb4c90d44012ff5

[15:01] <Zoffix> m: multi z(&s:(Int, Str)) { say "right sub" }; multi z(|) { say "wrong sub" }; z -> Int, Str {}; z {;}

[15:01] <evalable6> Zoffix, rakudo-moar 202459ce0: OUTPUT: «right sub␤wrong sub␤»

[15:02] <Zoffix> should be able to use anon var too `&:(Int, Str)`, but looks like it's a parse bug there

[15:02] <scimon> AHHHH! I knew there had to be a way to do it.

[15:03] <Zoffix> I think that stuff is documented here: https://docs.perl6.org/type/Signature#Signature_Literals

[15:03] *** cognominal joined
[15:08] <Zoffix> R#1326

[15:08] <synopsebot> R#1326 [open]: https://github.com/rakudo/rakudo/issues/1326 [LHF] Parse failure with signature unpacking on anon Callable param

[15:09] <scimon> Yeah but why read stuff when you can try jamming it into the code and see what happens? :D (Generally the next thing I do it read stuff).

[15:12] <Zoffix> I think that ticket can be fixed by just changing this line to `<subshortname> | <sigterm> | <subshortname> <sigterm>` https://github.com/rakudo/rakudo/blob/202459ce0b9cf0170339d543529c9415d52ac3d4/src/Perl6/Grammar.nqp#L582

[15:12] <Zoffix> If anyone wants to give it a go

[15:12] <Zoffix> \o

[15:13] *** Zoffix left
[15:13] *** cdg left
[15:13] *** domidumont joined
[15:13] *** domidumont left
[15:14] *** domidumont joined
[15:14] *** domidumont1 left
[15:16] <Geth> ¦ doc: 2877756577 | (Luca Ferrari)++ | doc/Language/traps.pod6

[15:16] <Geth> ¦ doc: Space between 'Perl' and version ('5', '6').

[15:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2877756577

[15:16] <Geth> ¦ doc: 4a19bcbb4c | (Luca Ferrari)++ | doc/Language/traps.pod6

[15:16] <Geth> ¦ doc: Add C<> blocks in titles and paragraphs.

[15:16] <synopsebot> Link: https://doc.perl6.org/language/traps

[15:16] <Geth> ¦ doc: 

[15:16] <Geth> ¦ doc: For a more coherent appearence and behavior, use C<> when referring to

[15:16] <Geth> ¦ doc: types in titles and paragraphs.

[15:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4a19bcbb4c

[15:16] <Geth> ¦ doc: 474dca2866 | (Luca Ferrari)++ | doc/Language/traps.pod6

[15:16] <Geth> ¦ doc: Little rewording on the BUILDALL paragraph.

[15:16] <Geth> ¦ doc: 

[15:16] <Geth> ¦ doc: Promoted the paragraph as a 'main' one, removing parentheses; linked to

[15:16] <Geth> ¦ doc: object creation for a better explaination of BUILD, BUILDALL, callsame.

[15:16] <Geth> ¦ doc: 

[15:16] <Geth> ¦ doc: Minor typos fixed.

[15:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/474dca2866

[15:17] <mahafyi> :) i am able to answer and control a telephony channel using Asterisk PBX AGI (Astersisk Gateway Interface) now. Instead of the perl5 RETURN, I simply used SAY and it worked ok. the hard part is structuring the whole thing into a module now, i have to get started with subroutines in earnest next i suppose.

[15:19] <scimon> That sounds pretty impressive :)

[15:20] *** jargan joined
[15:21] *** jast left
[15:21] *** jargan is now known as jast

[15:23] *** tabv left
[15:23] *** tabv_ joined
[15:23] *** tabv_ is now known as tabv

[15:24] *** zakharyas joined
[15:24] <mahafyi> as i said, if a code executes without errors, that itself is good for me, lol.

[15:25] <mahafyi> perl6/asterisk/agi/t1.p6,123: @*ARGS.perl  is an extract from logs, it is supposed to give all the arguments passed to script , i have : say "VERBOSE  @*ARGS.perl 1";

[15:26] <mahafyi> where VERBOSE is the asterisk agi command (exectues ok) , @*ARGS.perl is the arguments array elements printed and the last 1 is simply the verbosity level in asterisk (can be safely ignored for our immediate purpose)

[15:26] *** cdg joined
[15:28] *** domidumont1 joined
[15:28] *** lizmat_ left
[15:31] <mahafyi> ok never mind , i got it

[15:31] *** domidumont left
[15:31] *** zakharyas left
[15:33] <mahafyi> now the script erros out : from asterisk debug i see - AGI Rx << VERBOSE["123"] 1 . it should be VERBOSE 123 1 , so thats going to be easy enough, but it looks like i have to tear away to do some work (for which i am paid)

[15:33] *** zakharyas joined
[15:36] *** kaare_ joined
[15:37] *** david_xd left
[15:40] *** cognominal left
[15:41] <mahafyi> right now, i am simply writing say 'this command + params' and say 'that command + parms' ; the whole script is only that, get args, get env setting from asterisk config files, inherit all system variables for use . i have to figure out how this can be a module, how a user can use this beneficially instead of writing everything all over.

[15:44] *** troys joined
[15:48] *** lowbro joined
[15:48] *** lowbro left
[15:48] *** lowbro joined
[15:49] *** geospeck left
[15:55] *** geospeck joined
[15:57] *** david_xd joined
[15:59] *** geospeck left
[15:59] *** geospeck joined
[16:00] *** geospeck left
[16:02] *** pmurias left
[16:05] *** [Coke]_ is now known as [Coke]

[16:06] *** cdg left
[16:06] *** cdg joined
[16:07] *** geospeck joined
[16:08] *** geospeck left
[16:09] *** wamba left
[16:11] *** cdg left
[16:15] *** cognominal joined
[16:15] *** kent\n left
[16:16] *** wamba joined
[16:16] *** kent\n joined
[16:17] *** itaipu joined
[16:19] *** cognominal left
[16:20] *** cognominal joined
[16:21] <Geth> ¦ doc/master: 8 commits pushed by (Luca Ferrari)++

[16:21] <Geth> ¦ doc/master: 0c182c1392 | Hide long link behind its description.

[16:21] <Geth> ¦ doc/master: 30a830755f | Reference to the Slip type for the | list operator.

[16:21] <Geth> ¦ doc/master: a92bc078aa | Conditional operator with the same explaination as in 5to6-perlop.

[16:21] <Geth> ¦ doc/master: 030b64e707 | Fix title of '~' as string concatenation.

[16:21] <Geth> ¦ doc/master: db57997e58 | Use B<> to mark a double asterisk word.

[16:21] <Geth> ¦ doc/master: b4ff0dadf1 | Itemize the for loop rules.

[16:21] <Geth> ¦ doc/master: 3f4cb3b5be | Translate an '=' to an 'i.e.' in text.

[16:21] <Geth> ¦ doc/master: 06a0985a44 | Example of for iteration consuming more variables at the same time.

[16:21] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/474dca2866...06a0985a44

[16:39] *** silug joined
[16:41] *** troys is now known as troys_

[16:46] *** troys_ is now known as troys

[16:47] *** domidumont1 left
[16:52] *** lowbro left
[16:53] <[Coke]> m: enum sides <Back Front>; my %a := :{Back=>10, Front=>20}; say %a.perl; say %a{Back};

[16:53] <evalable6> [Coke], rakudo-moar cf7b01ef8: OUTPUT: «:{:Back(10), :Front(20)}␤(Any)␤»

[16:53] <[Coke]> How to make that print "10" ?

[16:56] <AlexDaniel> m: enum sides <Back Front>; my %a := :{Back=>10, Front=>20}; say %a.perl; say %a{~Back};

[16:56] <evalable6> AlexDaniel, rakudo-moar cf7b01ef8: OUTPUT: «:{:Back(10), :Front(20)}␤10␤»

[16:56] <AlexDaniel> hmmm

[16:56] <[Coke]> ah, the hash init isn't doing what I thought, perhaps.

[16:56] <Juerd> [Coke]: Well, if anything goes, just remove the : before {}

[16:57] <Juerd> [Coke]: Why is that there in the first place? :)

[16:57] <[Coke]> Juerd: because I want an object hash.

[16:57] <[Coke]> I didn't want the stringified versions.

[16:57] <Juerd> I don't know what that is

[16:57] <AlexDaniel> ( https://docs.perl6.org/type/Hash#Non-string_keys_(object_hash) )

[16:57] <[Coke]> a hash with objects as keys instead of strings

[16:57] <Juerd> Thanks

[16:58] <[Coke]> (making it work with strings only for now)

[16:58] <AlexDaniel> aaaaaaaah

[16:58] <AlexDaniel> m: enum sides <Back Front>; my %a := :{(Back)=>10, (Front)=>20}; say %a.perl; say %a{Back};

[16:58] <evalable6> AlexDaniel, rakudo-moar cf7b01ef8: OUTPUT: «:{sides::Back => 10, sides::Front => 20}␤10␤»

[16:59] <Juerd> I was just about to say: they're strings, not objects :)

[16:59] <AlexDaniel> that's just the pair notation

[16:59] * AlexDaniel facepalms

[17:00] *** abraxxa left
[17:00] <Juerd> TIL object hashes exist and you need parens to actually use it :)

[17:00] <[Coke]> ah, AlexDaniel++

[17:01] <[Coke]> *facepalm* and I did this the right way someone else using Pair.new explicitly. :|

[17:01] <timotimo> well, the pair notation will autoquote the LHS if it looks identifiery

[17:01] <[Coke]> *somewher

[17:10] <scimon> So... as usual when I get shown something like this I try to jam something crazy in.

[17:11] <scimon> m: my %h{Any};%h{any(1,2)} = "1 or 2";say %h{$_} for 1..3

[17:11] <evalable6> scimon, rakudo-moar cf7b01ef8: OUTPUT: «1 or 2␤1 or 2␤(Any)␤»

[17:11] <scimon> Junctions as hash keys. Because why not?

[17:12] <AlexDaniel> scimon: :|

[17:12] <scimon> But.... it doesn't do what I thought it did :(

[17:13] *** geospeck joined
[17:13] *** Zoffix joined
[17:14] <Zoffix> scimon: because Junctions aren't Any, they don't fit when you assign to the key. You need to type-constraint on Mu

[17:16] <Zoffix> And then you'd hit RT#125614 , for which there's a fix in a branch, but the fix is blocked by RT#128905

[17:16] <synopsebot> RT#125614 [open]: https://rt.perl.org/Ticket/Display.html?id=125614 [BUG] Can't store whole 1&2 junctions in Mu-keyed hash in Rakudo

[17:16] <synopsebot> RT#128905 [open]: https://rt.perl.org/Ticket/Display.html?id=128905 [BUG] Some core Routines do not do Callable role

[17:17] <Zoffix> s/because//;

[17:17] <scimon> Well.... by the time I think of a good use case for then it might be working :)

[17:17] <Zoffix> scimon: what did you think it did?

[17:18] <Zoffix> Cause your code assins the string value to keys 1 and 2 and then correctly looks those up

[17:18] <scimon> Yeah... I realised this after I tried adding a none(1,2) junction as a Key as well.

[17:19] <scimon> (I kinda liked the idea of a none junction as a default key)

[17:19] <Zoffix> Ah yeah, the autothreading doesn't care about the type of junction IIUC

[17:20] *** cognominal left
[17:20] <Zoffix> m: my %h{Mu}; my $j := none 1, 2; %h.AT-KEY($j) = "1 or 2"; say %h.AT-KEY: $_ for 1, 2, $j

[17:20] <evalable6> Zoffix, rakudo-moar cf7b01ef8: OUTPUT: «(Any)␤(Any)␤1 or 2␤»

[17:22] <scimon> I shall continue poking about at stuff.

[17:22] <Zoffix> scimon: good :) Report all the explosions if you find any: https://github.com/rakudo/rakudo/issues/new

[17:22] <scimon> Will do 

[17:25] <scimon> I was interested in the WHICH results for sets being consistent allowing for === matching of them. 

[17:26] *** zakharyas1 joined
[17:30] <Zoffix> m: enum sides <Back Front>; (my %a{sides}){Back, Front} = 10, 20; say %a.perl; say %a{Back};

[17:30] <evalable6> Zoffix, rakudo-moar e5c38ad67: OUTPUT: «(my Any %{sides} = sides::Back => 10, sides::Front => 20)␤10␤»

[17:31] *** scimon left
[17:31] *** Zoffix left
[17:32] *** khw joined
[17:39] *** mahafyi left
[17:39] *** dakkar left
[17:40] *** zakharyas left
[17:41] *** zakharyas1 left
[17:54] *** rindolf left
[17:56] *** rindolf joined
[18:03] *** wamba left
[18:09] *** nativecallable6 left
[18:09] *** coverable6 joined
[18:09] *** nativecallable6 joined
[18:11] *** domidumont joined
[18:17] *** sjoshi joined
[18:18] *** sjoshi left
[18:19] *** sjoshi joined
[18:19] *** sjoshi left
[18:21] *** raiph joined
[18:21] *** sjoshi joined
[18:23] *** domidumont left
[18:23] *** cognominal joined
[18:24] *** darutoko left
[18:25] *** domidumont joined
[18:28] *** cognominal left
[18:28] *** eliasr joined
[18:28] *** cognominal joined
[18:33] *** troys is now known as troys_

[18:36] *** sjoshi left
[18:37] *** sjoshi joined
[18:39] *** sjoshi left
[18:41] *** geospeck left
[18:43] *** cognominal left
[18:48] *** SHODAN left
[18:49] *** SHODAN joined
[18:51] *** domidumont left
[18:53] *** setty1 joined
[18:56] *** wamba joined
[18:58] *** domidumont joined
[19:00] *** domidumont left
[19:01] *** domidumont joined
[19:02] *** natrys joined
[19:11] *** geospeck joined
[19:16] *** geospeck left
[19:16] *** domidumont left
[19:18] *** poohman joined
[19:27] *** vichib left
[19:42] *** lizmat joined
[19:44] *** poohman left
[19:59] *** geospeck joined
[20:00] *** cognominal joined
[20:21] *** traxex_ joined
[20:22] *** traxex left
[20:23] *** committable6 left
[20:23] *** bloatable6 left
[20:23] *** bisectable6 joined
[20:23] *** ChanServ sets mode: +v bisectable6

[20:23] *** committable6 joined
[20:23] *** ChanServ sets mode: +v committable6

[20:23] *** bloatable6 joined
[20:23] *** quotable6 joined
[20:23] *** ChanServ sets mode: +v quotable6

[20:23] *** statisfiable6 joined
[20:26] *** Hotkeys joined
[20:32] *** cdg joined
[20:41] *** brrt joined
[20:57] *** brrt left
[20:58] *** evalable6 left
[20:58] *** releasable6 joined
[20:58] *** evalable6 joined
[21:08] *** lizmat left
[21:19] *** zakharyas joined
[21:21] *** zakharyas left
[21:22] *** zakharyas joined
[21:37] *** itaipu left
[21:38] *** itaipu joined
[21:47] *** zakharyas left
[21:47] *** zakharyas joined
[21:50] *** zakharyas1 joined
[21:54] *** zakharyas left
[22:03] *** cdg left
[22:05] *** cdg joined
[22:09] *** troys_ is now known as troys

[22:10] *** itaipu left
[22:11] *** cdg left
[22:15] *** geospeck left
[22:29] *** wamba left
[22:33] *** setty1 left
[22:35] *** Zoffix joined
[22:44] *** sena_kun left
[22:45] *** natrys left
[22:48] *** zakharyas1 left
[22:56] <Zoffix> Happy 2nd pre-Birthday, Perl 6! :)

[22:56] <Zoffix> Who wants some celebration cake? https://temp.perl6.party/cake.jpg

[22:57] <Zoffix> ZofBot: here, have a slice, buddy: 🍰

[22:57] <ZofBot> Zoffix, and I think so far it's even eluded jnthn++

[22:59] <jnthn> The cake. It eluded me. /o\

[22:59] *** someuser_ joined
[23:01] <rindolf> Zoffix: hi

[23:01] <geekosaur> ...it gets content from irc?

[23:02] <geekosaur> (I remember sending the IRC message that came from)

[23:02] *** someuser left
[23:03] <AlexDaniel> /o/

[23:03] <jnthn> I'm curious what the context was :)

[23:03] <jnthn> But anything that eluded me in the past sure as heck is going to at the moment.

[23:04] <geekosaur> home/allbery/.config/hexchat/logs/ZNC [ttuttle ds] - FreeNode/#perl6-dev.log-2017 Dec 11 23:35:33 <geekosaur>	the signal values thing is an open bug

[23:04] <geekosaur> (about $*SIGNAL (I think?) mismatches)

[23:04] <geekosaur> oh, second line lost because of slashes, whoops

[23:05] <Zoffix> jnthn: it was how to fix differences between static Signal enums and dynamic Kernel.signal lookups. They have different values (at least on some OSes, like Windows): https://irclog.perlgeek.de/perl6-dev/2017-12-11#i_15563701

[23:05] <geekosaur> yes, that

[23:05] <Zoffix> geekosaur: the brain is primed with a random book from Project Gutenberg and then it's also fed from IRC :)

[23:06] <Zoffix> And when the bot starts giving too much nonsense, I reset the brain and load another book.

[23:06] <geekosaur> also I need to correct that path at some point

[23:06] *** cdg joined
[23:07] *** lizmat joined
[23:08] <geekosaur> yeh, I'd seen the book matches but not IRC content before

[23:09] *** kerframil joined
[23:11] <jnthn> Zoffix: ah, that...

[23:11] * jnthn kinda hoped somebody else might nail that one

[23:11] <Zoffix> :D

[23:12] <jnthn> Will get to it eventually though, if nobody else does

[23:12] *** cdg left
[23:12] <jnthn> In the meantime, I should probably get to bed and continue trying to sleep away this flu thing...

[23:13] <jnthn> o/

[23:13] <Zoffix> \o

[23:23] <timotimo> Zoffix: that cake has coconut shavings as its outer layer?

[23:23] <Zoffix> yeah

[23:26] <timotimo> what's on the inside?

[23:26] <Zoffix> Should be vanilla cake/cream. (I'm yet to cut it)

[23:27] <timotimo> that does sound kinda nice

[23:27] <Zoffix> :)

[23:27] <timotimo> workrave tells me to stop keyboardwork for the day :\

[23:27] * AlexDaniel disabled it temporarily

[23:27] <timotimo> happy be-earlied birthday to perl6 :P

[23:27] <Zoffix> \o/

[23:49] *** cdg joined
[23:50] *** cpage__ joined
[23:52] *** cpage_ left
[23:52] *** cpage__ is now known as cpage_

