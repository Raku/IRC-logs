[00:00] <redfd> done?

[00:00] <timotimo> cool, then you have zef

[00:00] <redfd> why nor work command zef?

[00:00] <timotimo> you have probably not added the path to you rpath yet

[00:00] <redfd> how add? please

[00:01] <timotimo> you're on linux?

[00:01] <redfd> yes

[00:01] <timotimo> OK, typically, you'd add paths in your ~/.profile

[00:02] <redfd> this? ~/rakudo-star-2017.01/modules/zef# ls bin  lib  LICENSE  logotype  META6.json  README.pod  resources	t  xt

[00:02] *** mcmillhj left
[00:02] <timotimo> no, more like /home/timo/perl6/install/share/perl6/site/bin/zef

[00:02] <timotimo> depending on where you installed rakudo-star to

[00:02] <timotimo> i have this perl6 folder in my home where i put everything perl6-related

[00:02] <timotimo> i don't know where rakudo-star installs to by default

[00:03] <timotimo> what do you get from "which perl6"?

[00:03] <redfd> stop, please_ I can use p6 without root?

[00:03] <mst> redfd: of course you can

[00:04] <mst> redfd: how did you install rakduo-star ?

[00:04] <redfd> which perl6 /usr/local/bin/perl6

[00:04] <timotimo> oh, you installed it into your system

[00:04] <mst> ok, so you installed it as root

[00:04] <mst> why did you install it as root if you want to use it without root?

[00:04] <redfd> i dont know

[00:04] <redfd> ))

[00:04] <redfd> brb 

[00:05] <redfd> i want install perl6

[00:05] <redfd> with zef 

[00:05] <mst> what happens if you run 'which zef' ?

[00:06] <redfd> nothing 

[00:06] <redfd> no zef

[00:08] *** jdmmmmm left
[00:08] *** mcmillhj joined
[00:09] <ugexe> m: say $*REPO.repo-chain.grep(* ~~ CompUnit::Repository::Installable).map(*.prefix.child("bin").absolute)

[00:09] <camelia> rakudo-moar bf6371: OUTPUT: «(/home/camelia/.perl6/bin /home/camelia/rakudo-m-inst-2/share/perl6/site/bin /home/camelia/rakudo-m-inst-2/share/perl6/vendor/bin /home/camelia/rakudo-m-inst-2/share/perl6/bin)␤»

[00:09] <ugexe> zef is installed to one of those paths already, but its not in your PATH

[00:10] <redfd> I'm reinstallling again 

[00:11] <redfd> how make p6 without root? with zef? please help

[00:11] <redfd> step to reproduce)

[00:11] *** Cabanossi left
[00:12] <ugexe> https://github.com/ugexe/zef/blob/master/.travis.yml#L20-L27

[00:12] <ugexe> that is how to install rakudo and set the PATH properly. then you can install zef and it will work because PATH will already be set

[00:12] <redfd> ok I do rm rakudo 

[00:12] <ugexe> note its line 20 to 27 specifically 

[00:13] <redfd> so

[00:13] <ugexe> you dont have to do the two export ZEF_* lines tho

[00:13] <redfd> i dont know 

[00:13] <timotimo> when you use that "export", you'll only have the right path in your PATH until you close that shell, and also only in that shell, not in others

[00:13] *** mcmillhj left
[00:13] <redfd> step 1 for install perl6?

[00:14] *** pmurias left
[00:14] <redfd> i want rakudo-star

[00:15] <redfd> not *brew

[00:15] <redfd> because in brew not work zef

[00:15] *** Cabanossi joined
[00:15] <redfd> zef cant download LWP::Simple 

[00:15] <redfd> and so on 

[00:16] <redfd> test with errors

[00:16] <ugexe> zef works with rakudobrew. your setup sounds broken

[00:16] <redfd> wtf? its normal for p6?

[00:16] <redfd> or I stupid?)

[00:17] <ugexe> it sounds like you have multiple perl6 installs in your PATH, both rakudobrew and regular

[00:17] *** labster joined
[00:18] <redfd> so, I download this http://rakudo.org/downloads/star/rakudo-star-latest.tar.gz rigth?? 

[00:19] <ugexe> I don't use rakudo-star other than on windows, so I can't help you there

[00:19] <redfd> hmm

[00:20] <redfd> maybe rakudobrew??

[00:20] <timotimo> rakudobrew isn't meant for end-users

[00:22] <redfd> what meant for end users?

[00:23] <timotimo> just the steps ugexe linked to from the .travis.yml file

[00:24] *** kurahaupo left
[00:25] *** kyan joined
[00:25] <redfd> ok

[00:25] *** bjz left
[00:27] <redfd> perl Configure.pl $VM_OPTS --gen-nqp --backends=$BACKEND

[00:27] <redfd> what is it?

[00:28] <timotimo> ah i didn't look closely

[00:28] <timotimo> one thing you may be interested in is using a --prefix=somepath

[00:28] <timotimo> like, my prefix is /home/timo/perl6/install

[00:28] <redfd> perl Configure.pl --gen-moar --gen-nqp --backends=moar -- its ok?

[00:29] <timotimo> well, you may want a --prefix

[00:29] <redfd> so.. perl Configure.pl /home/user/perl6/install --gen-moar --gen-nqp --backends=moar ?

[00:30] <timotimo> you have to put --prefix= in front of the path

[00:30] <redfd> so.. perl Configure.pl --prefix=/home/user/perl6/install --gen-moar --gen-nqp --backends=moar ?

[00:30] <timotimo> that looks good

[00:30] <redfd> ok

[00:31] <redfd> one momet

[00:31] <timotimo> i'll go to bed real soon

[00:31] <timotimo> but there's good instructions in the README

[00:31] <redfd> i ubderstand English

[00:31] <redfd> very bad 

[00:32] <timotimo> wait, maybe the instructions you need are in INSTALL, not in README

[00:32] <timotimo> okay it's INSTALL.txt

[00:33] <redfd> now 

[00:33] <redfd> I just want perl6 and zef 

[00:34] <redfd> i complet perl Configure.pl --prefix=/home/user/perl6/install --gen-moar --gen-nqp --backends=moar |||| what next? 

[00:34] <timotimo> "make" and then "make install"

[00:34] <redfd> ok

[00:34] <timotimo> after that do the thing with zef again: go into zef's directory and "perl6 -Ilib bin/zef install ."

[00:35] <timotimo> i wish you the best of luck :)

[00:35] <timotimo> good night!

[00:35] <redfd> thank \ u2)

[00:41] *** AlexDaniel left
[00:42] *** cognominal left
[00:42] <llfourn> Just got my TPF 50min talk approved \o/. Going to be talking about: https://github.com/spitsh/spitsh

[01:09] *** bjz joined
[01:13] *** gdonald left
[01:13] *** gdonald joined
[01:28] *** Cabanossi left
[01:29] *** Cabanossi joined
[01:30] *** espadrine left
[01:31] *** bjz left
[01:33] *** lowbro left
[01:42] *** Sgeo joined
[01:46] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:48] <tbrowder> ref docs, routine symlink: it seems that the p6 symlink args are reversed from the *nix link cmd, or am i misreading it?

[01:51] <Voldenet> > ln [OPTION]... [-T] TARGET LINK_NAME   (1st form)

[01:52] <Voldenet> > sub    symlink(Str $target, Str $name --> Bool)

[01:52] <Voldenet> doesn't seem reversed

[01:54] <Voldenet> but I do dislike that it's not consistent with cp, which basically is 'cp name target'

[01:55] <tbrowder>  but look at the docs, 2nd arg is name of file, not link, oppo from ln

[01:56] * grondilu thinks the target should be a named parameter

[01:56] <tbrowder> ln -s filename link

[01:56] <redfd> help please 

[01:56] <redfd> perl6 -Ilib bin/zef install . All candidates are currently installed No reason to proceed. Use --force to continue anyway

[01:56] <Voldenet> oh

[01:56] <Voldenet> yeah, naming choices there

[01:56] <redfd> which zef - no result

[01:56] <Voldenet> *cough*

[01:57] <mst> redfd: please uninstall all perl6s you already installed and start from a clean system

[01:58] <mst> redfd: you are guessing and we don't know what's on your system

[01:58] <redfd> no

[01:58] <mst> then no help

[01:59] *** mr-foobar joined
[02:03] <redfd> ok

[02:03] <tbrowder> well, docs are correct, symlink is reversed from *nix ln, bummer!

[02:04] <tbrowder> although, to be fair, i always thought ln should be that way, too

[02:05] <tbrowder> when you do ls -l on a link it show link then tgt

[02:05] <redfd> i dont kbow use symlink)

[02:07] <BenGoldberg> m: dd symlink("/nope", "/nope")

[02:07] <camelia> rakudo-moar bf6371: OUTPUT: «symlink is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in sub symlink at src/RESTRICTED.setting line 18␤  in block <unit> at <tmp> line 1␤␤»

[02:08] <BenGoldberg> m:  dd symlink("/nope", "/nope") if 0;

[02:08] <camelia> rakudo-moar bf6371: ( no output )

[02:14] <redfd> please 

[02:15] *** redfd left
[02:16] *** redfd joined
[02:17] <redfd> have derectory /home/xxxxx/perl6/install/share/perl6/site/bin/

[02:17] <redfd> ./zef running 

[02:17] <redfd> how facking add symlink?

[02:17] <dmaestro> tbrowder: I suppose an idiom like this is intended: perl6 -e 'my $fn = "file.pl6".IO; $fn ~~ :f && say "new-link".IO.symlink($fn)'

[02:18] <redfd> please give me command

[02:21] <dmaestro> redfd: what file do you want to link to, and where do you want to put the link?

[02:21] <redfd> ./zef 

[02:21] <redfd> in /home/xxxxx/perl6/install/share/perl6/site/bin/

[02:22] <mst> why is /home/xxxxx/perl6/install/share/perl6/site/bin not in your $PATH

[02:22] <mst> if you want to be able to run that?

[02:25] <redfd> how add ?

[02:27] *** noganex_ joined
[02:30] *** noganex left
[02:43] *** redfd left
[02:49] *** bjz joined
[02:50] *** labster left
[02:54] *** BenGoldberg left
[02:56] <u-ou> hi

[02:59] *** skids joined
[03:04] *** g0d355__ left
[03:41] *** Cabanossi left
[03:44] *** mr-foobar left
[03:44] *** Cabanossi joined
[03:48] *** labster joined
[03:56] *** khw left
[04:07] *** mcmillhj joined
[04:12] *** mcmillhj left
[04:20] *** kaare__ joined
[04:21] *** kaare_ left
[04:22] *** gdonald left
[04:23] *** gdonald joined
[04:24] *** mcmillhj joined
[04:25] *** Cabanossi left
[04:27] *** Trioxin joined
[04:28] *** Cabanossi joined
[04:28] *** mcmillhj left
[04:43] <samcv> what in the actual.... how the hell

[04:43] <samcv> how does this happen

[04:44] <samcv> look at the numbers https://i.imgur.com/ePs6Ygc.png

[04:44] <samcv> that is not in my code

[04:45] <geekosaur> terminal's auto font switching to get the glyphs and not switching back properly

[04:45] <samcv> maybe

[04:46] *** gdonald left
[04:46] <samcv> it happens every time i run it

[04:46] <geekosaur> because every line it happens on has a glyph, and the lines that don't do it render nothing

[04:46] <samcv> hmm

[04:47] *** gdonald joined
[04:47] <samcv> yeah

[04:48] <samcv> uh my other terminal stops showing at 171

[04:48] <samcv> really weird

[04:50] <geekosaur> lots of possibilities, sadly. probably not an ft2 issue but could be fontconfig, likely pango for VTE-based terminals, or the terminal itself

[04:50] <geekosaur> many versions of pango are buggy for non-ISO, non-CJK characters :/

[04:52] * geekosaur keeps running into that rendering hebrew and arabic

[04:53] <samcv> yeah

[04:54] <samcv> oh i think it actually is just rando  characters

[04:54] <samcv> and it just happened to be the same number.

[04:54] <samcv> my code's not properly resetting something

[04:54] <samcv> and it iterate the chacaters forever maybe

[04:56] <samcv> yay i think i fixed it

[04:56] <samcv> really weird that it somehow lined up with actual numbers

[05:00] *** rurban joined
[05:00] *** rurban left
[05:02] *** wamba joined
[05:09] *** Trioxin left
[05:09] *** Trioxin2 joined
[05:10] *** Cabanossi left
[05:14] *** Cabanossi joined
[05:14] <u-ou> im a baby perl6er

[05:25] <skids> o/

[05:27] <u-ou> oh, man you can make special variables your arguments

[05:27] <u-ou> I love that

[05:27] <u-ou> like for $/ or $_

[05:32] *** Sgeo left
[05:37] *** titsuki left
[05:38] *** titsuki joined
[05:58] *** ufobat joined
[06:01] *** titsuki left
[06:01] *** titsuki joined
[06:02] *** labster left
[06:04] *** titsuki left
[06:04] *** titsuki joined
[06:10] *** RabidGravy joined
[06:11] *** mcmillhj joined
[06:17] *** rurban joined
[06:18] *** mcmillhj left
[06:22] *** ChoHag joined
[06:28] *** mcmillhj joined
[06:33] *** mcmillhj left
[06:36] *** ufobat left
[06:39] <samcv> magic

[06:39] <samcv> perl is just special

[06:41] *** Cabanossi left
[06:43] *** Cabanossi joined
[06:50] *** Actualeyes left
[06:51] *** ufobat joined
[06:54] *** rindolf joined
[06:54] *** g0d355__ joined
[06:56] *** skids left
[07:03] *** darutoko joined
[07:15] *** rindolf left
[07:21] *** cyphase left
[07:21] *** labster joined
[07:23] *** rindolf joined
[07:30] *** Sgeo joined
[07:48] *** cyphase joined
[07:55] *** Cabanossi left
[07:59] *** Cabanossi joined
[08:05] <moritz> \o

[08:08] *** spebern joined
[08:11] *** domidumont joined
[08:16] *** domidumont left
[08:17] *** domidumont joined
[08:19] *** szabgab joined
[08:19] *** e1 joined
[08:27] <simcop2387> m: 1+1

[08:27] <camelia> rakudo-moar bf6371: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "+" in expression "1+1" in sink context (line 1)␤»

[08:31] <TEttinger> m: say 1+1

[08:31] <camelia> rakudo-moar bf6371: OUTPUT: «2␤»

[08:33] <samcv> ok. it's coming

[08:35] <samcv> optimized string search :) regex gonna get much faster

[08:36] <samcv> about to bunch moar for git rakudo now

[08:38] <samcv> gonna get some ice cream to celebrate

[08:39] *** CIAvash joined
[08:46] *** rumble joined
[08:48] <u-ou> :D

[08:55] <szabgab> I was looking at http://smoke.perl6.org/report but it seems to be out of date. Is it still functioning?

[08:55] <yoleaux> 1 Apr 2016 13:39Z <[Coke]> szabgab: - Can you please double check https://rt.perl.org/Ticket/Display.html?id=123497 against a 2016 R*?

[08:55] *** espadrine joined
[08:55] <samcv> ok done. now i will enjoy this ice cream

[08:56] *** grumble left
[08:56] <szabgab> yoleaux: p6doc works on the 2017.01 I have. AFAIK that ticket can be closed

[08:57] <samcv> yoleaux, is a bot. it cannot hear you ;)

[08:58] *** wamba left
[08:59] *** wamba joined
[08:59] <szabgab> samcv: oh just nagging the rare visitor :)

[09:00] <samcv> damn p6doc doesn't work on os x. that's lame

[09:00] <samcv> or maybe it does

[09:00] <samcv> it's been 1 year :)

[09:00] <samcv> ticket is still open tho

[09:02] *** tneeds joined
[09:03] <szabgab> Oh I see now I reported it for osx. I am now using Perl 6 inside a Docker image so I don't know if p6doc works on OSX or not.

[09:05] <samcv> can you not install modules or whatever?

[09:05] <szabgab> checking again, apparently I have also installed Rakudo on OSX   p6doc works ther

[09:05] <szabgab> there

[09:05] *** kyan left
[09:06] <szabgab> that ticket can be closed

[09:07] <samcv> cool

[09:07] <samcv> want me to close it or you

[09:07] <szabgab> pls do

[09:08] <samcv> kk

[09:10] *** spebern left
[09:18] <szabgab> so back to smoke testing: http://smoke.perl6.org/report seems to be stuck in 2015.   http://testers.perl6.org/ seems to report for released verisions of Rakudo

[09:19] <szabgab> Is there a page for smoke testing Rakudo with the spectests?   Is there a page for smoke testing modules with the development version of Rakudo?

[09:22] *** ChoHag left
[09:25] <gfldex> szabgab: http://testers.perl6.org/

[09:26] <szabgab> gfldex: does that test on the latest development version or only on released versions?

[09:27] <gfldex> don't think so, seams to be Star

[09:28] <gfldex> if module authors setup travis cron jobs, the ecosystem tests against bleeding

[09:28] <gfldex> (very few do)

[09:28] <samcv> .o(should check if i have travis cron jobs)

[09:28] <samcv> gotta take advantage of all that free cpu time

[09:29] <samcv> oh i do actually

[09:29] <samcv> it ran 2 days ago. cool

[09:29] <samcv> https://travis-ci.org/samcv/URL-Find/builds

[09:29] <gfldex> samcv: see 2nd halve of https://gfldex.wordpress.com/2017/01/20/once-a-week/

[09:29] <samcv> haven't updated it since a few months ago but still running tests

[09:30] <samcv> gfldex, uhm is testers.perl6whatever does that go off of travis at all?

[09:30] <samcv> like if we got everybody to setup cron jobs

[09:30] <szabgab> what do you mean travis cron jobs?

[09:30] <samcv> it runs every set amount of time

[09:31] <samcv> and can run against development and release version

[09:31] <gfldex> testers wont but modules.perl6.org does

[09:31] <samcv> yeah

[09:31] <samcv> szabgab, have you seen our travis matrixes

[09:31] <samcv> we have them for multiple os's too

[09:31] *** rindolf left
[09:31] <samcv> very neat

[09:31] <szabgab> samcv: I don't think so 

[09:31] <szabgab> I found this now: https://docs.travis-ci.com/user/cron-jobs/

[09:32] <gfldex> you can tell travis where to get rakudo from. So you could have a meta package that tests against release

[09:32] <samcv> this is for moarvm https://travis-ci.org/MoarVM/MoarVM

[09:32] <samcv> here's moar's matrix

[09:32] <samcv> has loads of configurations of moarvm and two os's mac and linu

[09:32] <szabgab> I wonder if travis has a API that could be used to tell to run all the test when a new commit arrived to Rakudo

[09:32] <samcv> and hopefully we'll have windows automated soon

[09:32] <samcv> it does

[09:32] <samcv> every time

[09:32] <gfldex> the travis api is rather shitty

[09:32] <samcv> oh, do you mean modules?

[09:33] <samcv> modules probably not easily unless you set it up yourself

[09:33] <gfldex> it does not run on commits in a dep

[09:33] <samcv> nope

[09:33] <samcv> that would be nice. but until then. we have cron

[09:34] *** e1 left
[09:34] *** bjz left
[09:36] <samcv> which part did you want me to read

[09:36] <samcv> i read it all tho

[09:38] <szabgab> samcv: I guess "latest" in the .travis.yml refers to the latest released Rakudo.  Is there a way to add "nightly" or "blead" or some other keyword that would use a Rakudo build that was created from the most recent push to the Rakudo repo?

[09:38] <samcv> yeah. uh

[09:38] <samcv> i think there way

[09:38] <samcv> *was but i forget it

[09:39] <samcv> i thought i remember doing it. but dunno have many repos

[09:39] <samcv> well not that many

[09:40] <samcv> i will try now on my module though

[09:41] <samcv> yeah i think it worked

[09:41] <samcv> https://travis-ci.org/samcv/URL-Find

[09:41] <samcv> it has two different jobs now. release and development

[09:43] <samcv> oh ok. i needed to change it to `nom` not moar-blead. it tries to check out that branch i guess

[09:45] *** szabgab left
[09:51] *** rurban1 joined
[09:52] *** Trioxin2 left
[09:53] *** rurban left
[09:54] *** andrzejk_ joined
[09:57] *** Cabanossi left
[09:57] *** Cabanossi joined
[10:02] *** rumble is now known as grumble

[10:14] *** szabgab joined
[10:18] <szabgab> samcv: so if one adds "nom" to the travis.yml file that will run the tests on the most recently pushed code?

[10:20] <szabgab> hmm the doc here: https://docs.travis-ci.com/user/languages/perl6/ seems to indicate otherwise

[10:31] *** szabgab left
[10:33] *** titsuki left
[10:34] *** titsuki joined
[10:35] *** AndyDee left
[10:36] *** AndyDee joined
[10:38] *** TEttinger left
[10:45] *** ufobat left
[10:50] *** tomboy64 left
[10:58] *** zakharyas joined
[11:00] *** holyghost joined
[11:01] *** holyghost left
[11:10] *** tomboy64 joined
[11:14] *** labster left
[11:22] *** rindolf joined
[11:34] *** leah2 left
[11:43] *** awwaiid left
[11:51] *** leah2 joined
[11:55] *** Cabanossi left
[11:57] *** mr-foobar joined
[11:59] *** Cabanossi joined
[12:00] *** Trioxin2 joined
[12:05] *** zakharyas left
[12:15] *** rurban1 left
[12:18] <tbrowder> dmaestro: thanks, but

[12:19] <tbrowder> uh, no buts...

[12:26] *** Cabanossi left
[12:28] *** Cabanossi joined
[12:30] *** rurban joined
[12:34] *** leah2 left
[12:37] <Geth> ¦ doc: 6bd0f98376 | (Zoffix Znet)++ | 5 files

[12:37] <Geth> ¦ doc: [io grant] Dissuade readers from using IO::Spec*

[12:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6bd0f98376

[12:47] *** robertle left
[12:49] *** leah2 joined
[12:52] *** AlexDaniel joined
[12:52] *** robertle joined
[12:54] *** Guest15811 joined
[12:56] *** rurban1 joined
[12:58] *** rurban left
[13:00] *** Guest15811 left
[13:12] <Geth> ¦ doc: 7afd9c4279 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[13:12] <Geth> ¦ doc: [io grant] Remove unrelated related classes

[13:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7afd9c4279

[13:16] *** domidumont left
[13:28] <Geth> ¦ doc: a43ecb9d3e | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[13:28] <Geth> ¦ doc: [io grant] Document IO::Path's $.SPEC and $.CWD

[13:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a43ecb9d3e

[13:31] <Geth> ¦ doc: fadf4e930b | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[13:31] <Geth> ¦ doc: Fix typo

[13:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fadf4e930b

[13:33] *** CIAvash left
[13:37] <andrzejk_> hello perl6 :)

[13:45] *** espadrine left
[13:47] <masak> hi andrzejk_ 

[13:48] <andrzejk_> hey

[13:48] <andrzejk_> masak how is your sunday?

[13:56] <Geth> ¦ doc: e9b6809260 | (Zoffix Znet)++ | 4 files

[13:56] <Geth> ¦ doc: [io grant] Document IO::Path::* subclasses

[13:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e9b6809260

[14:03] *** ajr_ joined
[14:04] *** Actualeyes joined
[14:04] <Geth> ¦ doc: 9102b51380 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[14:04] <Geth> ¦ doc: [io grant] Fix up IO::Path.basename

[14:04] <Geth> ¦ doc: 

[14:04] <Geth> ¦ doc: - it doesn't just return filename, since IO::Path can reference

[14:04] <Geth> ¦ doc:     more than just files

[14:04] <Geth> ¦ doc: - Point out semantics with Windows shares

[14:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9102b51380

[14:06] <ajr_> Can anyone tell me where and how the Rakudo* installation sets the .../install/share/perl6/site/bin and install/share/bin values in PATH?

[14:06] <moritz> ajr_: which platform are you on?

[14:07] <ajr_> There's a message at the end of the install process that says "please set them", but it seems to have been done automatically

[14:07] <ajr_> Linux

[14:11] <moritz> I'm pretty sure it can't

[14:11] <moritz> maybe you have done it previously?

[14:11] <andrzejk_> moritz how the perl6 is parsing every line till terminate sign ;

[14:12] <Geth> ¦ doc: 5c1d3b6558 | (Zoffix Znet)++ | doc/Type/IO/Spec/Unix.pod6

[14:12] <Geth> ¦ doc: [io grant] Document IO::Spec::Unix.basename

[14:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c1d3b6558

[14:16] <ajr_> Moritz - that's entirely possible, (as the fact that I've forgotten doing it), but I didn't want my update script to be fighting the official process pointlessly.

[14:22] <Geth> ¦ doc: aa293f9a9e | (Zoffix Znet)++ | doc/Type/IO/Spec/Unix.pod6

[14:22] <Geth> ¦ doc: Fix typo

[14:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/aa293f9a9e

[14:23] <Geth> ¦ doc: a1cb80bd02 | (Zoffix Znet)++ | doc/Type/IO/Spec/Win32.pod6

[14:23] <Geth> ¦ doc: [io grant] Document IO::Spec::Win32.basename

[14:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a1cb80bd02

[14:34] <moritz> andrzejk_: token by token

[14:34] <andrzejk_> but what terminate parser

[14:34] <andrzejk_> I mean it is JIT compiler

[14:34] <andrzejk_> so he parse first line and push to jit

[14:35] <andrzejk_> it looks like every perl6 guarantee that ends with ; or EOF

[14:35] <andrzejk_> or it is the line before closing parenthess

[14:35] <timotimo> no, the whole program is parsed before it goes to code-generation

[14:35] <andrzejk_> timotimo lulsh why?

[14:35] <andrzejk_> why so?

[14:36] <andrzejk_> why not a line

[14:36] *** rurban1 left
[14:36] *** rurban joined
[14:36] <timotimo> well, one reason is we allow you to call subs before you declare them - but if you don't declare them we refuse the parse

[14:36] <timotimo> m: this-sub-doesnt-exist(1)

[14:36] <camelia> rakudo-moar cc209f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    this-sub-doesnt-exist used at line 1␤␤»

[14:36] <timotimo> m: this-sub-doesnt-exist(1); sub this-sub-doesnt-exist($_) { say "haha, fooled you" }

[14:36] <camelia> rakudo-moar cc209f: OUTPUT: «haha, fooled you␤»

[14:37] <timotimo> you can't run that code if you didn't finish parsing

[14:37] <andrzejk_> timotimo ok now I get it

[14:37] <timotimo> most things aren't sensibly runnable before you have parsed a whole lot more of the program, either

[14:37] <timotimo> we do compile-time selection of multi candidates, too

[14:38] <timotimo> so even if we're using sub only-works-with-string(1) near the start, how is the compiler supposed to know if there's a multi candidate for Int later in the source?

[14:38] <andrzejk_> do you mean overloading?

[14:39] <timotimo> multiple dispatch

[14:39] <andrzejk_> multi is perl6 overloading method equivalent

[14:39] <timotimo> it's similar

[14:39] <andrzejk_> yeah

[14:39] <andrzejk_> okay I got it a bit

[14:39] <andrzejk_> you parse whole file prepare syntax tree and then generate assembler

[14:39] <timotimo> no

[14:39] <andrzejk_> ?

[14:40] <timotimo> we don't generate assembler

[14:40] <andrzejk_> oh okay

[14:40] <andrzejk_> :D

[14:40] <timotimo> we go from code text to QAST, to MAST, to moar bytecode, and then the JIT might turn parts of it into x86_64 machine code

[14:41] <andrzejk_> timotimo okay

[14:41] <andrzejk_> that's okay I think

[14:41] <andrzejk_> :)

[14:42] <andrzejk_> what about syntax can I ask some questions you?

[14:42] <timotimo> you can certainly try

[14:42] <andrzejk_> ok

[14:43] <andrzejk_> as I know all things are certainly objects in perl6

[14:43] <moritz> all things that can go into variables are objects

[14:43] <andrzejk_> which correspond to 6model

[14:44] <andrzejk_> 6model is meta things which consist in each object

[14:44] *** Trioxin2 left
[14:44] <timotimo> "consist in"?

[14:44] <andrzejk_> come in

[14:45] <andrzejk_> timotimo sorry my english is fucked except when I hurry to write smth

[14:45] <andrzejk_> :P

[14:45] <andrzejk_> especially

[14:45] <moritz> I'd say 6model is an implementation of the low-level parts of the p6 object system

[14:45] <andrzejk_> sure

[14:46] <andrzejk_> so lets say first line "hello world".say

[14:46] <andrzejk_> so the parser create anonymous variable "hello world"

[14:47] <andrzejk_> and he knows that characters in quotes correspond to Str

[14:47] <andrzejk_> and then he call method say on Str

[14:47] <timotimo> no variable involved

[14:47] <andrzejk_> that how I  understand it

[14:47] <timotimo> have you ever tried perl6 --target=ast -e 'your code here'?

[14:47] <andrzejk_> wait let me try x)

[14:50] <andrzejk_> Array?

[14:50] <timotimo> sorry, what?

[14:50] <moritz> m: say Array

[14:50] <camelia> rakudo-moar cc209f: OUTPUT: «(Array)␤»

[14:51] <timotimo> m: say so Array

[14:51] <camelia> rakudo-moar cc209f: OUTPUT: «False␤»

[14:51] <andrzejk_> I don't undestand it well

[14:51] <andrzejk_> it is String

[14:52] <andrzejk_> - QAST::Stmt <sunk final> \"hello\".say

[14:55] *** kurahaupo joined
[14:59] *** khw joined
[15:00] <andrzejk_> fuck

[15:00] <andrzejk_> it looks very hard to implement this

[15:00] <andrzejk_> :D

[15:02] *** ajr__ joined
[15:05] *** ajr_ left
[15:07] <timotimo> ... implement what?

[15:07] <timotimo> and what do you mean by "it is String"?

[15:08] *** ajr__ left
[15:08] *** ajr joined
[15:08] *** ajr is now known as Guest76122

[15:10] *** Guest76122 left
[15:11] *** ajr_ joined
[15:15] <andrzejk_> I am trying to implement perl6

[15:15] <andrzejk_> and just trying to figure out from what to start lexer implementation

[15:16] <ajr_> andrzejk - are you trying to re-write the compiler?

[15:16] <andrzejk_> ye exactly

[15:16] <ajr_> Why?

[15:17] <andrzejk_> I think I can write a better one

[15:17] <ajr_> Have you read the original source code?

[15:17] <andrzejk_> no but there no some functionality which I need

[15:17] <grondilu> andrzejk_: could you write one that targets webassembly?

[15:17] <andrzejk_> I want to have Perl6 on embedded devices

[15:18] <andrzejk_> and faster though

[15:18] <andrzejk_>  in any way I am searching of start point

[15:20] *** ajr__ joined
[15:21] *** ajr_ left
[15:22] *** ajr__ left
[15:22] *** itaipu joined
[15:22] *** ajr_ joined
[15:24] <ajr_> andrzejk - if you can write a better Perl6 compiler singlehandedly, there's clearly a space on your shelf for a Turing Award

[15:24] <andrzejk_> ajr_ :D

[15:24] <andrzejk_> I want to start and maybe someone help me in the future

[15:24] <ajr_> Studying the existing one would be a good start

[15:25] <andrzejk_> I don't like read C code :s

[15:26] *** Cabanossi left
[15:26] <timotimo> have you looked at arane?

[15:26] <andrzejk_> what is arane?

[15:26] <timotimo> a p6 compiler written in cpp

[15:26] <timotimo> incomplete

[15:27] <andrzejk_> that sounds good

[15:27] <andrzejk_> x)

[15:27] <andrzejk_> I will start reading it

[15:27] <andrzejk_> timotimo thnks for help timotino

[15:29] *** Cabanossi joined
[15:30] <andrzejk_> timotimo what happend with bizzarecake?

[15:31] <andrzejk_> is he alive?

[15:31] *** rurban1 joined
[15:31] <timotimo> i certainly hope he didn't die

[15:31] <timotimo> hasn't been on irc for a long time

[15:31] *** rurban2 joined
[15:31] *** rurban2 left
[15:32] <andrzejk_> timotimo ohh

[15:33] <timotimo> .seen BizarreCake

[15:33] <yoleaux> I saw BizarreCake 30 Aug 2014 14:30Z in #perl6: <BizarreCake> Is an int array implicitly castable to an Int array?

[15:34] <andrzejk_> timotimo my friend die like a 3 month ago

[15:34] <andrzejk_> he was programmer

[15:34] *** rurban left
[15:35] *** rurban1 left
[15:37] *** cgfbee left
[15:37] *** Rawriful joined
[15:38] <timotimo> oh shit, that sucks :(

[15:40] <andrzejk_> yeah

[15:40] <andrzejk_> that happens to many programmers here

[15:40] <andrzejk_> i suppose

[15:40] <andrzejk_> he got contract b2b and his client needs a code urgently but he won't lose money so he program even when he was sick

[15:41] <andrzejk_> and one day he just die

[15:47] <andrzejk_> timotimo it looks like he just implement this

[15:47] <andrzejk_> without any idea how to add Mu object to it etc.

[15:48] *** zakharyas joined
[15:51] <timotimo> i don't know what b2b means

[15:52] <andrzejk_> they pay you good money but you have no vacances etc.

[15:52] <andrzejk_> ne to go

[15:52] <andrzejk_> for a bit

[15:52] *** andrzejk_ left
[15:52] *** skids joined
[15:52] <gfldex> timotimo: as requested: https://github.com/gfldex/perl6-meta6-bin/commit/964670ff642ff5b8e7391c51ea6ad9087fe3a06b

[15:53] <gfldex> timotimo: it does not know about authors yet and doesn't do anything fancy either

[15:56] *** Cabanossi left
[15:57] <timotimo> fantastic! i'll install that straight-away

[15:58] *** Cabanossi joined
[15:59] <timotimo> it'd be cool if the repository description or the readme mentioned that the module name is actually META6::Bin

[15:59] *** domidumont joined
[15:59] <gfldex> timotimo: you may have to --force, i forgot to dump version

[16:00] <timotimo> i didn't have META6::Bin yet

[16:01] *** leont joined
[16:02] <gfldex> timotimo: hold on, I have a typo

[16:02] <timotimo> META6::bin, though

[16:02] <timotimo> first it's all caps, then it's no caps at all

[16:04] *** Ven joined
[16:04] *** Ven is now known as Guest99305

[16:08] *** jdmmmmm joined
[16:08] *** Guest99305 left
[16:15] *** tokomer joined
[16:24] *** TEttinger joined
[16:28] <Geth> ¦ doc: 28b6283b96 | (Zoffix Znet)++ | 4 files

[16:28] <Geth> ¦ doc: [io grant] Document IO::Spec::*.canonpath

[16:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/28b6283b96

[16:30] *** ajr_ left
[16:32] *** jdmmmmm left
[16:48] *** cdg joined
[16:50] *** ufobat joined
[16:53] *** andrzejk_ joined
[16:53] <Geth> ¦ doc: 50e5565699 | (Zoffix Znet)++ | 3 files

[16:53] <Geth> ¦ doc: [io grant] Document IO::Spec::*.catdir and .catfile

[16:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/50e5565699

[17:11] *** zakharyas left
[17:14] *** itaipu left
[17:17] *** cdg left
[17:19] *** ajr_ joined
[17:20] *** ajr_ left
[17:21] <Geth> ¦ doc: 9dd7399f15 | (Zoffix Znet)++ | doc/Type/IO/Spec/Cygwin.pod6

[17:21] <Geth> ¦ doc: Remove IO::Spec::Cygwin.catfile

[17:21] <Geth> ¦ doc: 

[17:21] <Geth> ¦ doc: The class doesn't provide it, but merely inherits

[17:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9dd7399f15

[17:24] <Geth> ¦ doc: dbdc9959ab | (Zoffix Znet)++ | 3 files

[17:24] <Geth> ¦ doc: [io grant] Document IO::Spec::*.catpath

[17:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dbdc9959ab

[17:30] *** itaipu joined
[17:41] *** Cabanossi left
[17:41] *** jjido joined
[17:44] *** Cabanossi joined
[17:44] *** stmuk_ joined
[17:46] *** stmuk left
[17:59] *** spebern joined
[18:02] <samcv> .tell szabgab yes if you put nom in .travis.yml it does devel build of rakudo. Worked for me here https://travis-ci.org/samcv/URL-Find

[18:02] <yoleaux> samcv: I'll pass your message to szabgab.

[18:13] *** spebern left
[18:24] *** jjido left
[18:35] *** Sound joined
[18:35] *** Sound is now known as Guest9049

[18:37] *** Guest9049 left
[18:38] *** Sound_ joined
[18:40] *** Woodi_ is now known as Woodi

[18:47] *** spebern joined
[18:48] *** kaare__ left
[19:05] *** jjido joined
[19:06] *** titsuki left
[19:07] *** titsuki joined
[19:19] *** domidumont left
[19:26] *** itaipu left
[19:28] *** mxco86 left
[19:29] *** labster joined
[19:31] *** darutoko left
[19:33] *** itaipu joined
[19:33] *** titsuki left
[19:39] *** jjido left
[19:39] *** titsuki joined
[19:41] *** kaare__ joined
[19:42] *** Cabanossi left
[19:43] *** Cabanossi joined
[19:44] *** as_ joined
[19:45] <as_> Hi guys. I wonder if the way modules are stored in file system is invention of Rakudo or zef or Perl 6

[19:47] *** imcsk8 left
[19:47] *** jjido joined
[19:48] <lizmat> Perl 6

[19:55] *** imcsk8 joined
[20:06] *** titsuki left
[20:06] <moritz> rakudo, no?

[20:08] <timotimo> what, the compunitrepo stuff isn't perl6?

[20:09] <moritz> the API is, but the file layout isn't, afaict

[20:09] *** titsuki joined
[20:09] <moritz> I mean, are there are tests for the actual file locations and contents in roast?

[20:09] <timotimo> oh, ok

[20:10] <timotimo> that makes sense

[20:10] <moritz> a different compiler could store a complete distribution or compunitrepo or so in an sqlite db

[20:13] *** mxco86 joined
[20:13] <timotimo> right

[20:13] <sjn> that sounds kinda weird to me

[20:13] <timotimo> in fact, if it weren.t needed to load NativeCall to bind sqlite, i'd totally dare someone to write that over the course of an evening

[20:14] <sjn> doesn't that mean that one can't switch compiler/VM and continue using the modules that are already installed?

[20:17] <lizmat> moritz: yeah, rakudo, you're right  :-)  somehow I missed the first of 3 options

[20:18] <timotimo> sjn: um, how is the jvm supposed to load .moarvm files?

[20:18] <timotimo> i mean, sure, custom classloader, but do we really want to implement a moarvm in java to make that work?

[20:20] <timotimo> well, different vms can share precomp folders for different formats

[20:20] <timotimo> and nothing prevents a different compiler from implementing the same CUR as rakudo has, maybe even using the code almost 1:1

[20:27] *** spebern left
[20:30] *** _28_ria left
[20:30] *** BenGoldberg joined
[20:31] *** _28_ria joined
[20:33] <lizmat> ok, so I have a patch that will make Set.WHICH 8x faster (for a 50 element Set)

[20:34] *** as_ left
[20:34] <lizmat> it uses nqp::sha1 to create a unique fingerprint of the .WHICH representations of the objects in the Set

[20:34] <lizmat> it lets 1 TODO test pass

[20:35] <lizmat> and it breaks another that specifically checks for a specific .WHICH value

[20:35] <lizmat> (which in my opinion is a faulty test)

[20:35] <lizmat> I figured since nqp::sha1 is good enough for CUR, it should be good enough for set identification

[20:37] *** leont left
[20:38] <timotimo> do you do some kind of sorting or something to make sure equal sets get the same which?

[20:38] <lizmat> yes, sorting is involved  :-)

[20:38] <El_Che> kkk

[20:38] <El_Che> oops

[20:39] <El_Che> laggy connection

[20:40] *** jjido left
[20:41] <timotimo> sounds like a good idea to me, to use sha1

[20:42] *** leont joined
[20:44] <AlexDaniel> lizmat: “sha1” and “unique fingerprint” sound a bit weird when put into the same sentence :)

[20:44] <lizmat> AlexDaniel: why ?

[20:44] <lizmat> :-)

[20:45] <lizmat> it you're worried about collisions, maybe we should have nqp::shaX that's better :-)

[20:46] <AlexDaniel> that would make me feel better, I guess…

[20:46] <timotimo> .o( love shaX, la la love shaX~ )

[20:46] <lizmat> we currently use nqp::sha1 for CUR

[20:46] <lizmat> .oO( B52's :-)

[20:46] <timotimo> we can somewhat easily add another sha* algo in there

[20:47] <timotimo> then we just generate sha1 and shaWhatever in CUR and if one file exists, mv it to the other filename

[20:47] <lizmat> timotimo: could we have an nqp::sha that takes a list_s ?

[20:47] <lizmat> so we could bypass the nqp::join step ?

[20:47] <timotimo> i think we can do that, yeah

[20:47] <lizmat> or would that still concat internally anyway ?

[20:47] <timotimo> but i'm really wondering why we even allow Str to be pushed into sha1 at all

[20:48] <timotimo> no, almost all hash algos support pushing arbitrary amounts of data in piecewise and getting the result at the end (or anywhere in-between)

[20:48] *** itaipu left
[20:48] <lizmat> cool!

[20:48] <timotimo> suggest a name for it?

[20:49] <timotimo> listsha1?

[20:49] <timotimo> though maybe that could also be how we allow passing Buf and friends in?

[20:49] <timotimo> so ... objsha1 perhaps?

[20:49] <timotimo> it'd internally dispatch based on the REPR of the thing passed in, then

[20:50] <timotimo> (can't make the regular sha1 op do that because its signature says it has to be a string)

[20:51] *** BenGoldberg left
[20:51] <lizmat> nqp::sha ?

[20:51] <timotimo> haha, like "sha1 means sha one, sha means sha many"? :)

[20:52] <lizmat> hmmm

[20:52] <lizmat> :-)

[20:52] <lizmat> not how I meant it, but yeah  :-)

[20:52] <timotimo> do we want to give that a parameter to choose hash type, too?

[20:52] <timotimo> so we don't have to add a new opcode every time we decide to add another hash function?

[20:57] <samcv> ok gonna get back to work on trying to make perl 6 appimages

[21:02] <timotimo> i have a sha256 here, but no sha512 to go with it

[21:02] *** itaipu joined
[21:02] <timotimo> https://github.com/mycelium-com/entropy - this project has a public domain sha256 and sha512 in C

[21:02] <timotimo> maybe i should grab those

[21:05] <samcv> nice

[21:07] <timotimo> / Total length of the entire message must be provided, as it will be appended

[21:07] <timotimo> / at the end according to the specification.

[21:07] <timotimo> ???

[21:08] *** RabidGravy left
[21:08] *** wamba left
[21:08] <timotimo> oh, is the length of the message appended to the message before it gets hashed?

[21:09] <timotimo> why did i claim you could feed in arbitrary amounts of data? it has to be in terms of the hashes block size for many (including 256 and 512 versions of sha2)

[21:10] <timotimo> eeehhh this code also uses an endiannes swapping that they implemented like this: https://github.com/mycelium-com/entropy/blob/master/lib/endian.h

[21:10] <timotimo> and i have no idea if that works with all our compilers?

[21:11] <timotimo> we surely don't want to have atmel support in there, how is that supposed to compile moarvm anyway :)

[21:13] <timotimo> i don't really feel like chasing this around right now :|

[21:18] *** andrzejk_ left
[21:18] *** Sound_ left
[21:26] <lizmat> timotimo: sorry, I was distracted

[21:27] <lizmat> all ideas sound nice, also the not chasing around right now part

[21:29] <timotimo> hah :)

[21:30] <samcv> timotimo, do you know if moar bytecode will get messed up if the alignment of it changes

[21:30] <samcv> if i replace some directory names inside it

[21:32] <samcv> oh looks like it might be...

[21:32] <samcv> ok so with moar i can just set LD_LIBRARY_PATH=./install/lib and not worry too much

[21:32] <samcv> but nqp's /share/nqp files are an issue

[21:33] <timotimo> oh btw INSTALL.txt still refers to panda

[21:34] <samcv> nice

[21:34] <timotimo> and maybe we need to change more stuff in there?

[21:34] <samcv> probably

[21:34] <samcv> rakudostar mentions zef

[21:34] <samcv> in readme at least

[21:35] <timotimo> i'm not sure, but i'd assume changing the length of some strings in the string heap will make things terribly confused

[21:35] <timotimo> we do store the offsets of sections near the beginning

[21:35] *** titsuki left
[21:35] *** titsuki joined
[21:36] <samcv> yeah

[21:36] <samcv> it got angry

[21:36] <samcv> gonna go for round 2

[21:36] <samcv> gonna --prefix="/r/us" and then gonna use sed to replace that to ./usr

[21:36] <samcv> and hope that works

[21:37] <samcv> might not for moar. but hopefully for nqp stuff it will

[21:38] <timotimo> well, you see ... strings are stored with their length in front in the string heap

[21:39] <samcv> yeah that is smart

[21:39] <timotimo> if you adjust the sizes of sections, you can rewrite strings in the heap

[21:39] <timotimo> sizes/offsets/samethingreally

[21:39] <samcv> but replacing /r/us with ./usr is much less bad than ./././././././././././. +10 more times

[21:39] <samcv> hopefully will reduce our shame.

[21:40] <samcv> i am looking at some travis build files for making appimages

[21:40] <samcv> for different projects and things

[21:40] <samcv> also timotimo are there uh. ENV vars i can change to make nqp work in another directory like i can for moar

[21:40] <samcv> with LD_LIBRARY_PATH

[21:41] <samcv> the /share/nqp/blahhhhh.moarvm files

[21:41] <timotimo> uuuuhh

[21:42] <samcv> also idk if there's a way we could get *real* moveable support

[21:42] <samcv> by actually not putting the full path in places

[21:42] <samcv> for nqp building and such

[21:42] <timotimo> well, the paths have to go somewhere. maybe as flags in our launcher shell scripts :\

[21:42] <samcv> well yeh they go somewhere

[21:42] <samcv> "./usr" or whatever

[21:43] <timotimo> did you see the ModuleLoader.nqp inside src/vm/moar?

[21:43] <samcv> yea

[21:43] *** Rawriful left
[21:44] <timotimo> certainly if we have a dynamic var that we set from the very main function after the commandline parser gave it to us ... that could perhaps help?

[21:44] <timotimo> anyway, how do other langs make their binaries movable? like python?

[21:44] <samcv> probably like that

[21:44] <samcv> relative directories

[21:45] <samcv> linux why you do this :(

[21:45] <samcv> make it so hard

[21:48] <timotimo> wait, does it, though?

[21:48] <samcv> uh

[21:48] <samcv> not that much i guess you have preload

[21:48] <timotimo> if i mv my `which python` somewhere else it'll b0rk?

[21:48] <samcv> not really linux's fault

[21:48] <samcv> but libraries at least

[21:48] <samcv> idk

[21:48] *** robertle left
[21:54] *** ufobat left
[21:55] *** Cabanossi left
[21:56] <samcv> wow

[21:56] <samcv> i did it

[21:56] <samcv> wooo

[21:56] <samcv> it's... working

[21:59] *** Cabanossi joined
[21:59] <timotimo> cool!

[21:59] <timotimo> you're using sed and stuff? to replace paths and everything?

[22:00] <samcv> yeah.

[22:00] <samcv> it's not loading linenoise though

[22:00] <samcv> can't find the .so file

[22:00] <timotimo> ah

[22:00] <samcv> but otherwise works

[22:00] <samcv> gonna get a bit more agressive tho

[22:01] <samcv> i've been doing it in stages

[22:01] <timotimo> well, that's in perl6-land where we have much more freedom

[22:01] <timotimo> you know what really, really annoys me?

[22:01] <samcv> .moarvm files all can be replaced with ./usr

[22:01] <samcv> maybe

[22:01] <timotimo> you can't load the contents of a so file. it has to be a file on disk

[22:01] <samcv> oppression!

[22:01] <samcv> hmm. uh

[22:01] <timotimo> i don't want to write my own dynamic linker?!?!

[22:01] <samcv> make a fake disk

[22:01] <timotimo> what, like with fuse? :)

[22:02] <samcv> ok

[22:02] <samcv> now linenoise works

[22:02] <samcv> wooooo

[22:02] <samcv> ok now to try making an appimage with this

[22:13] <samcv> timotimo, is there a command line argument for perl 6 to change paths upon launching?

[22:16] <samcv> m: say $*CWD

[22:16] <camelia> rakudo-moar 6c9f31: OUTPUT: «"/home/camelia".IO␤»

[22:16] <MasterDuke> samcv, timotimo: can't stick around to chat about it, but is what you've been talking about (relocating rakudo) the same thing mst was working on?

[22:17] <samcv> i get "/r".IO

[22:17] <samcv> weird

[22:17] <samcv> oh

[22:17] <samcv> i am in /r

[22:17] <samcv> durp

[22:17] *** jeek left
[22:17] <samcv> thought it was \r for a sec

[22:17] <samcv> no clue

[22:19] <timotimo> MasterDuke: i think mst was working on things mostly in the makefile

[22:19] <timotimo> we're talking about taking an already-compiled rakudo and making it movable to anywhere in the filesystem

[22:20] <timotimo> samcv: it'd be fantastic if we could get something that also works on windows, so that the next rakudo star msi could get a path selector for installation

[22:20] <samcv> well you have to compile it in a specific directory

[22:20] <samcv> well.

[22:20] <samcv> ./say /u/sr -> ./usr

[22:20] <samcv> otherwise theings get weird with multiple levels of ././././

[22:20] <samcv> as i experienced

[22:20] <samcv> some things don't support it

[22:21] <samcv> or something. dunno. it didn't work. and was ugly

[22:21] <samcv> nice. ok i have a script automated to make the install relocatable

[22:21] <samcv> now to make appimage tho

[22:24] <gfldex> timotimo: it would be nice if you could test meta6 --pull-request. My tests are rather synthetic. (see https://github.com/gfldex/perl6-meta6-bin#pull-request-options)

[22:26] <samcv> modules work too timotimo 

[22:28] <timotimo> cool

[22:28] <timotimo> gfldex: not before bed, i think. but cool thing to have !

[22:29] <timotimo> it'd probably be cool to have a link to https://github.com/settings/tokens from the readme

[22:34] <El_Che> lizmat: the green leaf stickers you haveat the booth are mongodb

[22:35] *** pecastro_ left
[22:36] <gfldex> timotimo: the github api can create tokens. I may add meta6 --create-github-token tomorrow.

[22:48] *** bjz joined
[22:49] *** kurahaupo left
[22:51] *** kurahaupo joined
[22:55] *** Cabanossi left
[22:58] *** Cabanossi joined
[23:02] *** titsuki left
[23:02] *** titsuki joined
[23:02] <u-ou> is it ok to just say for ITERABLE -> $_ { ... }?

[23:03] <AlexDaniel> u-ou: well, if you're writing an arrow, why not give it a useful name then?

[23:03] <u-ou> oh, right. you don't need to -_-

[23:04] <u-ou> actually wait. I was thinking of it with whenever

[23:04] *** rindolf left
[23:04] <AlexDaniel> u-ou: but you can write it like that, no problem

[23:04] <AlexDaniel> whenever?

[23:04] <u-ou> yeah

[23:04] <AlexDaniel> like, with supplies?

[23:04] <u-ou> like whenever $whatever.Supply -> $_

[23:04] <AlexDaniel> oh

[23:05] *** titsuki left
[23:05] <AlexDaniel> u-ou: a block is a block, should work just fine

[23:05] <u-ou> ok

[23:05] *** titsuki joined
[23:06] *** kurahaupo left
[23:10] <samcv> ok well i made a working perl 6 that doesn't use appimage. but i think i need to change the paths for appimage to work

[23:10] <samcv> i think it wants to "be" in /usr but the binaries and other files to think that they are in ./

[23:10] <samcv> so gonna install in /m and then sed it to ./

[23:10] *** bjz left
[23:24] *** kurahaupo joined
[23:25] *** dha joined
[23:26] *** Cabanossi left
[23:29] *** Cabanossi joined
[23:36] <samcv> krita has appimages and i hear they're popular

[23:36] <timotimo> krita is great in general

[23:37] *** itaipu left
[23:37] <samcv> yeah

[23:38] <samcv> people are lazy. and if they can run it by just downoalding one file. that would be neat

[23:39] <samcv> dunno if installing new modules will work. but. should be great to play around with it for sure

[23:39] <samcv> since you have the star modules

[23:39] <timotimo> i'd assume there's a mechanism to store stuff on the user's system

[23:39] <samcv> uhm

[23:39] <samcv> it's just a program

[23:40] <samcv> i dunno

[23:40] <samcv> it colud write to ~/.config if it were like krita or something

[23:40] <timotimo> i mean with appimages

[23:40] <samcv> inside the appimage?

[23:40] <samcv> maybe not

[23:40] <timotimo> nah

[23:40] *** cpage__ left
[23:40] <samcv> or could just have them downoald a .tar.gz

[23:41] <samcv> and put it wherever they want. and as long as they don't install more modules

[23:41] <samcv> everyhing should work if moved. but if they make a module it'll probably lock it into that directory

[23:41] <samcv> maybe. idk.

[23:42] <samcv> i guess i'll find out

[23:44] <timotimo> i mean we'd do module installation like krita does image saving

[23:44] <timotimo> you wouldn't want to use krita if it can't save away images you've made, right?

[23:44] <samcv> yeah i mean

[23:44] <samcv> you can write files where you want

[23:44] <samcv> it's just a program

[23:45] <timotimo> well, it's run in its own little FS, no?

[23:45] <samcv> but can't write to its own folders maybe except in memory

[23:45] <samcv> yeah

[23:45] <samcv> squashfs

[23:45] <timotimo> it's not chrooted?

[23:45] <samcv> uh

[23:45] <timotimo> like, how does it give you a /usr?

[23:45] <timotimo> oh wait, squashfs, is that like an overlay over the normal FS?

[23:45] <samcv> i do not know

[23:46] <timotimo> i mean there's #appimage right here on freenode, we could probably ask ... or maybe i'll find out in the github wiki or something

[23:49] <timotimo> ugexe: i still have your Installation2.pm6 gist open :D

[23:50] <timotimo> hm. if i make an appimage out of, like, bash or fish ...

[23:50] <timotimo> then i could just explore what the inside of an appimage looks like

[23:52] *** _28_ria left
[23:53] *** _28_ria joined
[23:54] *** _28_ria left
[23:56] *** _28_ria joined
[23:57] *** kurahaupo left
[23:57] *** kurahaupo joined
[23:58] *** kurahaupo left
[23:58] *** kurahaupo joined
