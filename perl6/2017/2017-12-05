[00:03] *** cdg_ joined
[00:04] *** cdg left
[00:09] *** cdg_ left
[00:10] *** jnthn joined
[00:12] *** cdg joined
[00:14] * sjn reads the weekly changes blogpost

[00:14] <sjn> where's the squashaton announced?

[00:16] <timotimo> squashable6: status

[00:16] <squashable6> timotimo, Next SQUASHathon in 31 days and ‚âà9 hours (2018-01-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[00:16] *** rmusial left
[00:16] *** mcmillhj left
[00:17] <sjn> ah, cool

[00:17] <timotimo> not sure where else we announce it

[00:17] <timotimo> since not everybody's on irc

[00:18] <sjn> sounds like a blog post about community activit

[00:19] <sjn> activities*

[00:21] <sjn> doesn't seem like it's for newbies though (low-hanging/simple bugs aren't mentioned)

[00:21] <timotimo> it's meant to be for newbies; people can get as much assistance as they need from irc at least

[00:24] <sjn> Hm. The february squashathon is at the same time as FOSDEM

[00:25] <sjn> Maybe an idea to highjack a table in the cantina and have a physical squashathon there?

[00:33] <AlexDaniel> that's a wonderful idea. In fact, there's a small chance that I'd be able to get my ass there

[00:34] <AlexDaniel> sjn: this month it kinda fell through the cracks and wasn't advertized much

[00:40] *** xcm left
[00:42] *** xcm joined
[00:44] <sjn> It might be a nice way to get people to try out Perl 6

[00:45] <AlexDaniel> yes

[00:45] <sjn> although, I guess the Cantina staff and/or FOSDEM orgas probably don't like the thought of using the cantina for organizing a hackathon

[00:46] <sjn> (not to mention issues around power outletes & networking)

[00:46] <AlexDaniel> if you can help with anything squashathon-related, please do

[00:47] <AlexDaniel> this month I even had a problem coming up with the topic :)

[00:48] *** itaipu left
[00:49] *** mson joined
[00:51] <sjn> Hm. Didn't the the FOSDEM orgas at some point have a dedicated hackathon room?

[00:52] <sjn> AlexDaniel: nothing wrong in recycling topics :)

[00:53] <AlexDaniel> sjn: sure, but doing a doc squashathon two times in a row is a bit boring

[00:53] <sjn> AlexDaniel: as for helping, I don't know yet. I'll keep it in mind.

[00:53] <AlexDaniel> üëç

[00:54] *** pat_js left
[00:55] <sjn> Maybe the thing is to find ways to make hackathons more interesting? :) (e.g. inchstones, competitions, beer or a combination of these)

[00:55] *** patrickz_ joined
[00:56] <sjn> Having a hackathon progrss dashboard might help

[00:58] * sjn imagines a track with differently-coloured larvae competing to become first over a goal line (and turn into a camelia)

[00:58] *** patrickz left
[00:59] <sjn> and progress on the track is made by the amount of karma messages (e.g. AlexDaniel++ ) on #perl6 for that person within 5 minutes of an accepted pull-request

[00:59] *** evalable6 left
[00:59] *** evalable6 joined
[01:00] <AlexDaniel> well, squashable6 already creates a log like this: https://gist.github.com/Whateverable/fea65db631511cb1913352df5cd397d8

[01:01] <sjn> that looks like a good start :)

[01:02] *** margeas left
[01:06] *** kaare__ joined
[01:08] *** cdg left
[01:08] *** kaare_ left
[01:10] *** ctilmes joined
[01:20] *** lookatme joined
[01:23] <lookatme> hi

[01:23] <lookatme> morning o/

[01:36] <sjn> it's good night in Oslo :)

[01:36] <lookatme> :)

[01:38] <sjn> in #perl6, we often say "good *, #perl6" for timezone reasons :)

[01:39] <lookatme> good morning #perl6 :)

[01:39] <lookatme> Hah

[01:39] <lookatme> I am reading the advent calendar

[01:43] <sjn> yeah, lots of good stuff there

[01:43] *** chenyf joined
[01:56] *** ccntrq joined
[01:57] *** Cabanossi left
[01:58] *** NEveD joined
[01:58] *** mcmillhj joined
[01:59] *** chenyf left
[01:59] *** Cabanossi joined
[02:01] *** comborico1611 left
[02:04] *** perlpilot_ joined
[02:10] *** kitsunenokenja joined
[02:16] *** TimToady joined
[02:20] *** perigrin joined
[02:20] *** perigrin left
[02:21] *** perigrin joined
[02:25] *** mcmillhj left
[02:28] *** troys_ is now known as troys

[02:44] *** Voldenet joined
[02:44] *** Voldenet left
[02:44] *** Voldenet joined
[02:45] *** perlpilot_ left
[02:46] *** ilbot3 left
[02:52] <SmokeMachine> hi there!

[02:52] *** pavel_ joined
[02:53] <SmokeMachine> m: my %a = a => (1,2,3); class B {has @.a}; my $b = B.new: |%a; dd $b.a # How can I make the attr a do not be an array of a list, but be only the list or an array

[02:53] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [(1, 2, 3),]‚ê§¬ª

[02:53] <SmokeMachine> ?

[02:54] <pavel_> Quick question: Where is there a changelog posted? I'm considering building the latest version of perl6 since the version in my distro's repo is outdated, and I'd like to know if it's worth the effort.

[02:59] <AlexDaniel> pavel_: https://github.com/rakudo/rakudo/blob/master/docs/ChangeLog

[02:59] *** ilbot3 joined
[02:59] *** ChanServ sets mode: +v ilbot3

[02:59] <pavel_> Thanks much!

[02:59] <AlexDaniel> pavel_: and MoarVM has its own changelog: https://github.com/MoarVM/MoarVM/blob/master/docs/ChangeLog

[03:01] <AlexDaniel> pavel_: what version is in your distro? And what's the distro?

[03:01] <pavel_> Fedora, and 2017.08

[03:02] <pavel_> It's not that out of date, but it's for an online interpreter, and people want the latest features.

[03:02] <AlexDaniel> huggable: deb

[03:02] <huggable> AlexDaniel, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[03:02] <AlexDaniel> pavel_: what about taking an rpm from there ‚Üë ?

[03:03] <pavel_> Oh that's really neat! I think I'll do that.

[03:03] <pavel_> Thanks!

[03:03] <AlexDaniel> pavel_: may I also ask what online interpreter it is? :)

[03:04] <pavel_> https://tio.run/#perl6

[03:04] <pavel_> It's not *actually* maintained by me, but someone I know. I'm just helping out.

[03:05] <pavel_> tio.run supports several hundred programming languages, and new ones are added basically as fast as the maintainer finds out about their existance :P

[03:05] <lookatme> m: my %a = a => [1,2,3]; class B {has @.a}; my $b = B.new: |%a; dd $b.a

[03:05] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [[1, 2, 3],]‚ê§¬ª

[03:06] <AlexDaniel> pavel_: that's pretty cool

[03:07] <lookatme> m: my %a = a => [1,2,3]; class B {has @.a; method TWEAK(:$a) { @!a := $a; }}; my $b = B.new: |%a; dd $b.a

[03:07] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´[1, 2, 3]‚ê§¬ª

[03:08] <lookatme> SmokeMachine, ^^ works but IDK if there exist more convenient way to do it

[03:08] *** mson left
[03:10] <AlexDaniel> huggable: try :is: https://f.perlbot.pl/#perl6 https://tio.run/#perl6 https://glot.io/new/perl6 https://ideone.com/

[03:10] <huggable> AlexDaniel, Added try as https://f.perlbot.pl/#perl6 https://tio.run/#perl6 https://glot.io/new/perl6 https://ideone.com/

[03:11] <AlexDaniel> ‚Üë if anyone knows more let me know

[03:11] <AlexDaniel> I mean, don't let me know, just edit the entry

[03:12] <lookatme> :) use above command ?

[03:12] <AlexDaniel> yea

[03:13] <AlexDaniel> lol ideone lists perl¬†6 as just ‚Äúperl‚Äù. Whoops.

[03:14] <lookatme> I remember it was perl6 long time ago, maybe something bug in that site

[03:14] <lookatme> It has two perl

[03:15] <SmokeMachine> lookatme: thanks... but I need to use that for a class that wasn't created by me... :(

[03:15] <SmokeMachine> but is that expected?

[03:15] <SmokeMachine> m: my %a = a => (1,2,3); class B {has @.a}; my $b = B.new: |%a; dd $b.a # is this expected?

[03:15] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [(1, 2, 3),]‚ê§¬ª

[03:21] *** Voldenet left
[03:24] *** ctilmes left
[03:25] <pavel_> huggable try

[03:25] <pavel_> huggable: try

[03:25] <huggable> pavel_, https://f.perlbot.pl/#perl6 https://tio.run/#perl6 https://glot.io/new/perl6 https://ideone.com/

[03:25] <pavel_> Neato

[03:25] <sjn> m: my %a := a => (1,2,3); class B {has @.a}; my $b = B.new: |%a; dd $b.a

[03:25] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [1, 2, 3]‚ê§¬ª

[03:25] <sjn> SmokeMachine: is that what you're looking for?

[03:25] *** Voldenet joined
[03:25] *** Voldenet left
[03:25] *** Voldenet joined
[03:27] *** Cabanossi left
[03:29] *** Cabanossi joined
[03:35] <SmokeMachine> sjn: yes! I think that‚Äôs it!

[03:36] <sjn> SmokeMachine: check out this blog zoffix++ wrote about the topic: https://perl6advent.wordpress.com/2017/12/02/perl-6-sigils-variables-and-containers/

[03:36] <SmokeMachine> m: my %a := a => (1,2,3); dd %a

[03:36] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´:a((1, 2, 3))‚ê§¬ª

[03:42] <SmokeMachine> sjn: my real problem is here: https://github.com/FCO/p6-react/blob/cb302e3a65b73b929377374530a7cc81cf9a7a75/lib/Element.pm6#L31

[03:43] <SmokeMachine> I‚Äôll see if I can use your suggestion to fix that tomorrow... thanks

[03:44] <sjn> I have no idea what I'm looking at there

[03:45] *** troys is now known as troys_

[03:52] *** pavel_ left
[03:53] *** xinming joined
[04:11] *** Cabanossi left
[04:12] *** Cabanossi joined
[04:19] *** mson joined
[04:30] *** samcv joined
[04:38] *** kitsunenokenja left
[04:42] *** Cabanossi left
[04:43] *** Cabanossi joined
[04:50] *** BinGOs left
[04:50] *** tyil[m] joined
[04:50] *** wander joined
[04:51] *** BinGOs joined
[04:55] *** troys_ is now known as troys

[05:01] <lookatme> m: my %a = a => (1,2,3); class B {has @.a}; my $b = B.new: %a<>; dd $b.a

[05:01] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Default constructor for 'B' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[05:01] <lookatme> m: my %a = a => (1,2,3); class B {has @.a}; my $b = B.new: %a>><>; dd $b.a

[05:01] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Default constructor for 'B' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[05:04] <Geth> ¬¶ doc: c75c186d1c | (Alex Chen)++ | doc/Language/concurrency.pod6

[05:04] <Geth> ¬¶ doc: Fix #1697

[05:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c75c186d1c

[05:04] <synopsebot> Link: https://doc.perl6.org/language/concurrency

[05:09] *** eliasr left
[05:12] *** daxim joined
[05:23] *** AlexDaniel left
[05:25] *** ChoHag joined
[05:30] <SmokeMachine> m: my %a = a => (1,2,3); class B {has @.a}; my $b = B.new: |%a>><>; dd $b.a

[05:30] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [1]‚ê§¬ª

[05:31] <SmokeMachine> m: my %a = a => (1,2,3); class B {has @.a}; my $b = B.new: |%a<>; dd $b.a

[05:31] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [(1, 2, 3),]‚ê§¬ª

[05:35] *** ivans left
[05:37] <piojo> wander: thanks for fixing my bug just now :)

[05:37] <piojo> The same problem appears in doc/Type/Supply.pod6

[05:39] <piojo> I'll fix it if you don't see this

[05:39] <Geth> ¬¶ doc: 4054e408cd | (Alex Chen)++ | doc/Type/Supply.pod6

[05:39] <Geth> ¬¶ doc: Fix broken link

[05:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4054e408cd

[05:39] <synopsebot> Link: https://doc.perl6.org/type/Supply

[05:40] <wander> just see it :)

[05:41] <piojo> wander: great, thanks!

[05:46] *** daxim left
[05:47] *** daxim joined
[05:48] *** khw left
[05:50] *** troys left
[06:04] *** releasable6 left
[06:04] *** releasable6 joined
[06:04] *** greppable6 left
[06:04] *** greppable6 joined
[06:04] *** squashable6 left
[06:05] *** squashable6 joined
[06:17] *** AlexDaniel joined
[06:26] *** ChoHag left
[06:29] *** mson left
[06:32] <tyil> I'm trying to use the alpine-perl6:latest docker image, but installing OpenSSL fails its test, saying libssl.so cant be found. I've tried adding an `apk add libssl1.0` but that didn't seem to fix the issue. Anyone here who might have any idea?

[06:32] *** konsolebox left
[06:35] *** konsolebox joined
[06:53] <geekosaur> alpine has dev packages

[06:54] <geekosaur> libsso.so without a version is a dev package (and, boo hiss, whatever is doing that really shouldn't; it will likely break if the library ABI changes)

[06:55] <geekosaur> https://pkgs.alpinelinux.org/contents?file=libssl.so&path=&name=&branch=&repo=&arch=

[06:55] <geekosaur> (ssl is also a special case since openssl and libressl can be built using (mostly) the same ABI and can both provide the dev package)

[06:57] <geekosaur> unfortunately I suspect that's also why it uses the dev package :/

[07:11] <tyil> ah

[07:11] *** domidumont joined
[07:13] <tyil> thats an odd choice for a convention, but if it works for them

[07:16] *** parv joined
[07:16] *** geospeck joined
[07:16] *** domidumont left
[07:16] *** domidumont joined
[07:27] <tyil> it passes more tests now, but OpenSSL seems to not work as expected in this docker :(

[07:28] <El_Che> my experience with alpine that it's fine for small self-contained projects

[07:29] <El_Che> everything bigger ends in wtfs and lost time

[07:30] <El_Che> tyil: use ubuntu or debian-slim and wget rekudo from this site in your image: https://github.com/nxadm/rakudo-pkg/releases ?

[07:30] <tyil> that'll have to wait until I'm done at work I think, but if that's the suggested solution I'll use that instead

[07:31] <El_Che> it's not *the* suggested solution, just mine

[07:31] <El_Che> if you tinker enough with alpine you'll get things working

[07:32] * El_Che remember the tinkering time spent to get alpine Rakudo packages built

[07:32] <El_Che> s

[07:32] <tyil> :p

[07:32] *** aindilis left
[07:32] <El_Che> I spent more time on alpine than on all other distros I support together

[07:34] *** AlexDaniel left
[07:35] *** reportable6 left
[07:35] *** reportable6 joined
[07:35] *** ChanServ sets mode: +v reportable6

[07:36] <tyil> I havent tried getting a p6 app into a docker container, this was just the first I found on dockerhub

[07:38] <El_Che> I am working on that as well, but I haven't released it

[07:38] <El_Che> the idea is to use my binary packages instead of using rakudobrew

[07:38] <El_Che> the image build time would be seconds

[07:38] <tyil> I dont mind having a master image that compiles it tbh

[07:38] <El_Che> I do :)

[07:39] <tyil> :p

[07:39] <El_Che> I use CI heavily

[07:39] <El_Che> every commit generates a new docker image

[07:39] <tyil> as a funtoo user it would be weird to complain on compiling a single master image :p

[07:39] <El_Che> hehe

[07:39] <tyil> but yeah, for CI I prefer non-compiled images, since compiling takes longer than testing

[07:40] <tyil> and its just a drag thats not necessary there

[07:40] <El_Che> also, if you're not testing rakudo itself, compiling has no added value in the chain

[07:40] <tyil> making sure that you get the original, non-modified source 

[07:40] *** darutoko joined
[07:41] <tyil> perl 6 doesnt have much compile-time options afaik, so there's not much to win in customization there

[07:42] <El_Che> original source: that's the reasonthe only upstream images I use are the base images from the distro's and I build everything else on top myself

[07:43] <El_Che> (being part of a security team makes you paranoid :) )

[07:43] <tyil> you dont need to be part of a security team for that

[07:43] <tyil> these days all you need is to read the news

[07:44] <El_Che> :)

[07:47] *** parv left
[07:48] *** |oLa| joined
[07:53] *** ChoHag joined
[07:55] *** Cabanossi left
[07:58] *** Cabanossi joined
[08:04] *** sena_kun joined
[08:05] *** xcm left
[08:05] *** |oLa| left
[08:07] *** xcm joined
[08:07] *** lizmat left
[08:08] *** lizmat joined
[08:09] <moritz> is it paranoia if you know they are after you?

[08:10] *** |oLa| joined
[08:10] *** |oLa| left
[08:11] <lizmat> no, that's common::sense  :-)

[08:15] * lizmat clickbaits https://p6weekly.wordpress.com/2017/12/04/2017-49-mischieventing/

[08:23] <tyil> lizmat: old news!

[08:24] <tyil> but still lizmat++ :>

[08:30] *** abraxxa joined
[08:31] *** aindilis joined
[08:38] <lookatme> m: multi sub trait_mod:<is>(Attribute \a, :$constructor) { say a; a; }; class A { has Int $.a is constructor; };

[08:38] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Int $!a‚ê§¬ª

[08:38] *** lowbro joined
[08:38] *** lowbro left
[08:38] *** lowbro joined
[08:38] <lookatme> m: multi sub trait_mod:<is>(Attribute \a, :$constructor) { say a.package; a; }; class A { has Int $.a is constructor; };

[08:38] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§No such method 'gist' for invocant of type 'A'‚ê§at <tmp>:1‚ê§¬ª

[08:38] <lookatme> What the problem here ? ^

[08:40] *** abraxxa left
[08:40] <lookatme> s/What/What's/ :)

[08:41] *** dakkar joined
[08:41] *** abraxxa joined
[08:41] <moritz> lookatme: the trait runs as soon as it's parsed, so class A isn't fully composed yet

[08:41] <moritz> in particular, the implicit parent class Any (which provides method gist) isn't added yet

[08:41] <lookatme> hmm, that make sense 

[08:42] <lookatme> oh

[08:42] <moritz> btw you should make :$constructor a required param by adding a ! after it

[08:42] <moritz> multi sub trait_mod:<is>(Attribute \a, :$constructor!) 

[08:43] <lookatme> oh, you are right

[08:43] <lookatme> It should be

[08:45] <tyil> I was already wondering what that ! did in one of the advent articles

[08:45] <moritz> tyil: which one?

[08:46] <tyil> day 4

[08:46] <tyil> it has `multi sub MAIN(Bool :$test!) {`

[08:47] <moritz> ah :-)

[09:06] *** jeek joined
[09:08] *** cdg joined
[09:09] *** lookatme left
[09:16] <tyil> https://news.ycombinator.com/item?id=15850497

[09:25] *** Cabanossi left
[09:25] <piojo> Is there a way to look up a class's method using ::?CLASS without calling it?

[09:26] <moritz> m: say Int.^lookup('sqrt').^name

[09:26] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Method‚ê§¬ª

[09:26] <moritz> piojo: ^^ like this

[09:28] *** Cabanossi joined
[09:28] <piojo> moritz: thanks! To be clear, the name is static. Is that still the right way?

[09:29] <piojo> It's just to set up an event handler (err, a tap)

[09:30] <moritz> piojo: sound more like you want *.yourmethod

[09:31] <piojo> moritz: I'm just going for: INIT { $supply.tap(::?CLASS.handler); }

[09:32] <piojo> but the above doesn't work since it calls the handler, and I can't seem to reference it with &::?CLASS.handler

[09:32] <piojo> and $?CLASS seems to not be defined in INIT

[09:36] <moritz> so, use the class name?

[09:39] <piojo> moritz: the class name is long, and the fact that this is early code means it'll definitely need to be refactored

[09:39] <piojo> Seems like the best solution is to call it:

[09:39] <piojo> INIT { $supply.tap: { ::?CLASS.handler($_); } }

[09:42] <lizmat> m: class A::B::C { }; constant S = A::B::C; dd S.new  # piojo: you can shorten class names

[09:42] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´A::B::C.new‚ê§¬ª

[09:42] <piojo> lizmat: That's extremely helpful. Thanks!

[09:45] *** wander left
[09:47] <piojo> I don't think using the class name actually works for this

[09:47] <piojo> m: my $method = &Int.Str; say $method;

[09:47] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Illegally post-declared type:‚ê§    Int used at line 1‚ê§‚ê§¬ª

[09:48] <piojo> But using a block works well enough, and .^lookup would also work

[09:55] *** eliasr joined
[10:00] *** virtualsue joined
[10:11] *** virtualsue left
[10:21] *** cdg left
[10:21] *** jnthn left
[10:21] *** cdg joined
[10:21] *** jnthn joined
[10:26] *** cdg left
[10:33] <Geth> ¬¶ doc: 42344f80f2 | (Alex Chen)++ | 2 files

[10:33] <Geth> ¬¶ doc: Fix #1689, rewrite stuff about redispatch

[10:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/42344f80f2

[10:34] *** wander joined
[10:38] <wander> Not quite good, if we want, as discuss in perl6/roast/issues/357, regard our doc site as textual specs of perl6, we have more things TODO

[10:38] <wander> Recur, we have 2 language pages about grammar, 3(if includes MOP) pages about OOP

[10:40] <wander> Besides, re-dispatching and return statements about intersection of Control Flow and Function, we might doc them in Function and set links in CF

[10:44] *** donaldh_ joined
[10:50] *** pmurias joined
[10:52] *** margeas joined
[10:54] *** donaldh_ left
[10:54] *** donaldh joined
[10:57] *** Cabanossi left
[10:58] *** Cabanossi joined
[10:59] <SmokeMachine> m: my %a = a => (1,2,3); my %b; for %a.kv -> \k, \v {%b{k} := v<>}; class B {has @.a}; my $b = B.new: |%b; dd $b.a # :)

[10:59] <camelia> rakudo-moar 78aeaf469: OUTPUT: ¬´Array @!a = [1, 2, 3]‚ê§¬ª

[11:01] *** TEttinger left
[11:08] <tyil> lizmat: neat, I didnt know one could shorten class names like that

[11:08] <tyil> wish there was a more concise form to do that though, like `use My::Long::Class::Name as ShortClass;`

[11:12] <lizmat> I think there was some speculation about that

[11:13] <wander> tyil: https://github.com/rakudo/rakudo/blob/master/src/core/Cursor.pm

[11:14] <tyil> wander: dont I need to have a `use` for that somewhere?

[11:15] <wander> aha, only I show you we use it in rakudo :)

[11:15] <DrForr> Pastebin::Gist failed while installing the Advent thing. I'll force it because it looks like a network timeout issue, but someone should know.

[11:15] <tyil> ah

[11:15] <wander> not reply to "[19:09] <tyil> wish there was a more concise form to do that though, like `use My::Long::Class::Name as ShortClass;`"

[11:16] <DrForr> tyil: I've meant to add a shadow/alias thing for quite a while, especially as my packages use long class names internally which tend to make tracebacks messy.

[11:16] <tyil> now that all my questions are being answered at random anyway, is there a standard way to bundle manpages with a module, so the module manager will install them at the right location once the module gets installed?

[11:17] <tyil> would be nice if we could specify pod documents in a man entry in the META6 for instance

[11:17] <tyil> and have zef compile those to manpages and put them in /usr/share/man (or wherever your man page directory resides)

[11:18] <tyil> if this is currently not possible, should I make a pr or drop this question in #perl6-toolchain?

[11:19] <tyil> to at least get input in some form, and potentially put it on a roadmap?

[11:19] <lizmat> DrForr tyil there's actually syntax for that in S11:528

[11:19] <synopsebot> Link: https://design.perl6.org/S11.html#line_528

[11:19] <lizmat> use Short:name<Long::Name::Of::MOdule>

[11:19] <tyil> oh

[11:19] <tyil> snap

[11:19] <tyil> thanks lizmat 

[11:19] <tyil> you the best

[11:20] <lizmat> alas, it appears NYI

[11:20] <DrForr> Yeah, that would be why I stalled.

[11:20] <tyil> and you shattered my dreams within 10 seconds!

[11:20] <lizmat> but nine ugexe should be able to point where that logic lives

[11:20] <DrForr> Too many things to do, too little time.

[11:21] <DrForr> I've got a long Xmas vacation with scant network access, maybe while I'm writing a book outline.

[11:22] <DrForr> (yes, bowing to the will of the majority and resurrecting my \LaTeX knowledge.)

[11:22] <tyil> nice

[11:22] <tyil> write it in POD6

[11:22] <DrForr> *don't* get me started :)

[11:22] <tyil> hehe

[11:22] <DrForr> (as another project alongside Pod::To::BlogspotHTML is Pod::To::LaTeX.)

[11:23] <tyil> I currently use adoc for most things, I've done a little pod6, but that doesnt seem to be parsed by github

[11:23] <tyil> I was considering to rewrite App::Cpan6's adoc files to pod6 to get better at it, but I also use the adoc format to render to a manpage

[11:23] <DrForr> I'd prefer LaTeX because I can't stand most editors.

[11:24] <tyil> latex, pod and adoc all go through the same editor for me

[11:25] *** Cabanossi left
[11:26] * moritz writes in markdown these days

[11:26] <DrForr> I'm just something of a typographical purist, I suppose. My copy of Bringhurst is still in storage...

[11:26] <moritz> there are a few extensions that make it book-capable

[11:26] <moritz> the thing I don't like about latex is that there is no shortcut for literal code

[11:27] <moritz> \verb|$c| is just too much overhead, compared to `$c`

[11:27] <DrForr> Use the \listing package, and add it to a vim register.

[11:28] *** Cabanossi joined
[11:36] *** ctilmes joined
[11:38] <DrForr> I suppose a markdown <-> LaTeX converter would meet my spe... oh god another project.

[11:42] <DrForr> I wonder if it's feasible to write a Bringhurst LaTeX template...

[11:43] *** mscha joined
[11:43] <mscha> m: my Int @a = (1,2,3); say @a > 2; # fine

[11:43] <camelia> rakudo-moar 47f23fc68: OUTPUT: ¬´True‚ê§¬ª

[11:44] <mscha> m: my int @a = (1,2,3); say @a > 2; # why not fine?

[11:44] <camelia> rakudo-moar 47f23fc68: OUTPUT: ¬´Cannot resolve caller Real(array[int]: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:44] <mscha> m: my int @a = (1,2,3); say +@a > 2; # workaround

[11:44] <camelia> rakudo-moar 47f23fc68: OUTPUT: ¬´True‚ê§¬ª

[11:55] *** Cabanossi left
[11:56] <jnthn> m: say Array ~~ Cool

[11:56] <camelia> rakudo-moar 47f23fc68: OUTPUT: ¬´True‚ê§¬ª

[11:56] <moritz> has anybody looked at https://github.com/Microsoft/language-server-protocol ?

[11:56] <jnthn> m: say array[int] ~~ Cool

[11:56] <camelia> rakudo-moar 47f23fc68: OUTPUT: ¬´False‚ê§¬ª

[11:56] <moritz> my impression is that folks put a lot of work into it

[11:57] <sjn> moritz: that one has been mentioned here at least two times the last year :)

[11:58] <sjn> I think it would be great to support it

[11:58] *** Cabanossi joined
[11:59] <moritz> sjn: ok, great to know I'm not the only one :-)

[12:00] <DrForr> Another idea to add to the list... bugger.

[12:01] <DrForr> It kind of screams "enhanced revenue stream" to me...

[12:05] <pmurias> "enhanced revenue stream"?

[12:05] <yoleaux> 03:41Z <samcv> pmurias: it's <:InBlockName> if you see how it is in roast

[12:06] <pmurias> DrForr: ahh, you mean it sound like some corporate buzzword

[12:06] <pmurias> moritz: there was some "proof of concept" attempt for that 

[12:07] <DrForr> No, not that. I just meant that it could be added to VStudio and with some "secret sauce" libraries require your editor to be hooked to the 'net and access the server for "special" content. I'm probably being entirely too paranoid there, but just remembering how M$ used to be.

[12:08] <tyil> moritz: I did markdown before getting to adoc, but I like adoc better for writing technical docs

[12:11] <pmurias> DrForr: it's just a protocol so unless we plan to raise funds for the TPF that way there is no reason for our implementation to do that ;)

[12:11] <DrForr> Heh.

[12:12] <DrForr> I know, I've just seen lock-in occur. That being said I'd love to have a portable way to let people use a remote Perl 6 compiler.

[12:14] <lizmat> perhaps a Cro plugin should be enough ?

[12:15] <pmurias> lizmat: for the language-protocol-server?

[12:15] <lizmat> yeah? 

[12:15] * lizmat has only been half listening so may have been off the bat completely

[12:17] <pmurias> lizmat: I haven't looked into the technical details closely yet

[12:18] <DrForr> It appears to be JSON-RPC on the inside.

[12:21] *** geekosaur joined
[12:23] <buggable> New CPAN upload: Sparky-0.0.23.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparky-0.0.23.tar.gz

[12:25] *** scimon joined
[12:25] *** natrys joined
[12:25] <scimon> Afternoon all.

[12:28] <Phlogistique> good afternoon

[12:28] <moritz> tyil: adoc eq asciidoc?

[12:28] <tyil> moritz: yes

[12:33] <buggable> New CPAN upload: Game-Sudoku-0.1.0.tar.gz by SCIMON https://cpan.metacpan.org/authors/id/S/SC/SCIMON/Perl6/Game-Sudoku-0.1.0.tar.gz

[12:34] <scimon> So. It's not finished yet but it does some fun stuff and I had a lot of fun with Sets and Junctions.

[12:35] *** mcmillhj joined
[12:39] *** mcmillhj left
[12:47] *** cdg joined
[12:47] <scimon> Now to write up the Advent calender. 

[12:51] *** cdg left
[12:59] *** kannan joined
[13:00] <kannan> good day all, feels like home , back on the irc chat after months.

[13:00] <lizmat> kannan o/

[13:03] *** char_var[buffer] left
[13:06] <scimon> Hi

[13:12] *** mscha left
[13:13] *** wander left
[13:13] *** leah2 left
[13:14] *** leah2 joined
[13:18] *** ctilmes left
[13:18] *** arnsholt joined
[13:24] *** cdg joined
[13:25] <El_Che> If I am using NativeCall and I receive a Pointer (in order to hold data, don't care about the contents during execution), is there a way to print its contents while debugging without going through the effort of writing C structs representations of the data?

[13:26] *** Cabanossi left
[13:27] *** Cabanossi joined
[13:28] *** cdg left
[13:31] *** jeromelanteri joined
[13:38] *** jeromelanteri left
[13:39] *** scimon left
[13:39] *** mcmillhj joined
[13:40] *** virtualsue joined
[13:54] *** cdg joined
[13:55] *** comborico1611 joined
[13:57] *** cdg_ joined
[14:00] *** cdg left
[14:05] *** dakkar left
[14:06] *** dakkar joined
[14:09] *** virtualsue left
[14:25] *** Cabanossi left
[14:28] *** Cabanossi joined
[14:31] *** kannan_ joined
[14:35] *** kannan left
[14:35] *** kannan_ is now known as kannan

[14:38] *** Morfent left
[14:46] *** wander joined
[14:47] *** konsolebox left
[14:48] *** cpage_ joined
[14:48] *** konsolebox joined
[14:50] *** pmurias left
[14:50] *** khw joined
[14:51] *** pmurias joined
[14:55] *** mson joined
[15:00] *** epony left
[15:00] *** epony joined
[15:01] *** mcmillhj left
[15:01] *** mcmillhj joined
[15:04] *** ctilmes joined
[15:07] *** raiph left
[15:13] *** mcmillhj left
[15:21] *** kannan_ joined
[15:21] *** kannan left
[15:22] *** kannan_ is now known as kannan

[15:26] *** troys joined
[15:42] *** zakharyas joined
[15:43] *** domidumont left
[15:44] *** zakharyas left
[15:49] *** zakharyas joined
[15:51] *** zakharyas left
[15:54] *** zakharyas joined
[16:02] *** zakharyas left
[16:03] *** zakharyas joined
[16:03] *** parv joined
[16:04] *** parv left
[16:06] *** zakharyas left
[16:06] *** domidumont joined
[16:10] *** mcmillhj joined
[16:11] *** zakharyas joined
[16:11] *** ExtraCrispy joined
[16:12] *** Cabanossi left
[16:13] *** Cabanossi joined
[16:15] *** zakharyas left
[16:20] *** ExtraCrispy left
[16:23] *** gdonald joined
[16:31] *** zakharyas joined
[16:43] *** lowbro left
[16:59] *** abraxxa left
[17:02] *** zakharyas left
[17:02] *** scimon joined
[17:03] *** ChoHag left
[17:05] <Voldenet> I might be rehashing the question from long ago, but is there any fast and production-ready http server in p6?

[17:06] *** zakharyas joined
[17:06] <Voldenet> I've tried 'cro' which looks very nice, but isn't very fast yet, maybe I'm not doing stuff correctly

[17:06] <perlpilot> Voldenet: have you seen cro?   http://cro.services

[17:06] <perlpilot> oops, I'm too slow

[17:07] <perlpilot> http://modules.perl6.org/search/?q=http+server   maybe one of those will do you well?

[17:08] <jnthn> I've benchmarked Cro doing 600+ requests per second using ab

[17:09] <jnthn> That was doing a "hello world" style thing

[17:10] <El_Che> is there an easy way to print the contents of a NativeCall C-Pointer of C struct without writing a struct for them. Only for debugging

[17:10] * jnthn found the file where he tracks the best numbers he's seen...seems 660 req/sec. Apparently if there is no matching route it can do 816 req/sec handing back the 404 :P

[17:11] *** Cabanossi left
[17:12] *** Morfent joined
[17:13] *** Cabanossi joined
[17:14] <jnthn> (And yes, I've also benchmarked it being beaten by other things by a factor of 2-3, so there's some way to go...)

[17:14] <moritz> fail fast, eh? :-)

[17:14] <jnthn> Apparently :)

[17:15] <Voldenet> Yeah, 600rq/s isn't too fast indeed - I'm not expecting nginx-like performance, but something around 2k would be decent

[17:15] <ctilmes> Put nginx in front of cro, caching frequent requests

[17:15] *** ChoHag joined
[17:16] <Voldenet> but that's kind of cheating ;)

[17:16] <ctilmes> Depends on what you are trying to do.  Pretty frequent production set up.

[17:16] <Voldenet> also, this nodejs snippet is 10x faster:  http://ix.io/CNW

[17:17] <Voldenet> and it does more or less what cro's example

[17:18] <ctilmes> I'm not saying a faster cro would be nice, but I really like cro, so I'd rather write cro code and front-end cache/run multiple servers, etc. for now

[17:19] <jnthn> About the only optimization effort that's gone on so far with Cro has been improving a handful of hotspots inside of Rakudo and MoarVM that it showed up. Given that, I suspect there's plenty of room for more wins.

[17:20] <Voldenet> I'm kind of tempted to try benchmarking IO::Socket::Async

[17:22] *** ufobat joined
[17:23] *** scimon left
[17:24] <jnthn> Those'd be interesting numbers to see

[17:28] <Voldenet> > 540.43 [#/sec]

[17:29] <Voldenet> but that's very naive approach: http://ix.io/CNZ

[17:29] *** mson left
[17:32] *** ChoHag left
[17:34] *** dakkar left
[17:37] *** Levex joined
[17:38] *** ChoHag joined
[17:39] <Voldenet> bam, 3k rq/s

[17:39] <Voldenet> that's a bit warmer http://ix.io/CO1 :)

[17:40] <jnthn> Yeah, the first one forces all the processing onto a single thread, the second doesn't

[17:41] <Voldenet> Ah, so there's no need for the second schedule-on

[17:41] <jnthn> No

[17:43] <Voldenet> so, 4k rqs: http://ix.io/CO3

[17:43] <Voldenet> I'm kind of wondering why I can't set initial_threads to 16

[17:44] <ilmari> -> $ { ... } since you're not using $l

[17:44] <Voldenet> Well, /I kind of need to use that if I actually want to parse anything/ ;P

[17:44] <ilmari> well yes, but not for this trivial benchmark

[17:45] <jnthn> Home time &

[17:48] <Voldenet> I guess the socket performance isn't the big issue here

[17:53] *** ChoHag left
[18:00] *** ChoHag joined
[18:02] * [Coke] is in the middle of apache hell and would love to be able to replace the config here with a few lines of perl 6. :P

[18:03] <lizmat> reminds me of my first Apache config generator, written about 20 years ago?

[18:05] *** ctilmes left
[18:09] *** kannan left
[18:16] *** ChoHag left
[18:18] *** ChoHag joined
[18:29] *** Ven`` joined
[18:31] *** ChoHag left
[18:34] *** mcmillhj left
[18:35] <mspo> [Coke]: apache hell?

[18:37] <[Coke]> mspo: Using apache 2.4 and mod_perl2; know just enough to get the basics working, but rapidly am reaching points where things I try to do don't work, and I don't have enough knowledge to determine why not.

[18:37] <[Coke]> Is it a bug? am I expecting something to work that shouldn't?

[18:37] <mspo> [Coke]: any reason you're using mod_perl?

[18:37] <[Coke]> is it related to the mod_perl2?

[18:37] <[Coke]> I'm not having this conversation again. :)

[18:37] <mspo> [Coke]: beyond the code cache stuff, I mean;  are you using mod_perl for its apache-configuring-ability?

[18:37] <mspo> did we already?

[18:38] *** zakharyas left
[18:38] <[Coke]> Having already had it beaten out of me in #perl.

[18:38] <mspo> oic

[18:38] <[Coke]> no, not you, you're fine. :)

[18:38] <mspo> [Coke]: for actual apache stuff mod_lua (the built-in one) is probably the way to go

[18:38] <mspo> [Coke]: that is, if you need something bananas that you can't do with regular httpd.conf

[18:39] <[Coke]> we already had apache, doing 90% of what we needed. to do the one last thing, mod_perl was an easy fit. did that 10%. now there's "one more thing", which may or may not be a reasonable thing to do try to do.

[18:39] <mspo> [Coke]: apache works by execution phases and you can use mod_(perl|lua) to hook into them

[18:39] <mspo> [Coke]: but it isn't always obvious what context you are in

[18:44] *** darutoko left
[18:44] *** raiph joined
[18:45] *** setty1 joined
[18:48] *** Ven`` left
[18:51] *** raiph left
[18:52] *** raiph joined
[18:53] *** ChoHag joined
[19:00] *** mcmillhj joined
[19:01] *** raiph left
[19:05] *** mcmillhj left
[19:06] *** mcmillhj joined
[19:10] *** cdg_ left
[19:11] *** cdg joined
[19:12] *** mcmillhj left
[19:14] *** mcmillhj joined
[19:15] *** cdg left
[19:23] <donaldh> m: my @list = 0..5; '2'.match(/(\d+)/) and say @list[$0]

[19:23] <camelia> rakudo-moar 9a2f53250: OUTPUT: ¬´2‚ê§¬ª

[19:23] <donaldh> m: my @matrix[2;2]; '0,0'.match(/(\d+) ',' (\d+)/) and @matrix[$0; $1] = True

[19:23] <camelia> rakudo-moar 9a2f53250: OUTPUT: ¬´Partially dimensioned views of shaped arrays not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:24] <donaldh> m: my @matrix[2;2]; '0,0'.match(/(\d+) ',' (\d+)/) and @matrix[+$0; +$1] = True

[19:24] <camelia> rakudo-moar 9a2f53250: ( no output )

[19:24] *** pmurias left
[19:24] <donaldh> indices for shaped arrays need manually coerced to int

[19:25] <donaldh> Normal arrays just DWIM

[19:26] <donaldh> okay, that actually golfs down to

[19:26] <donaldh> m: my @matrix[2;2]; @matrix['0'; '0'] = True

[19:26] <camelia> rakudo-moar 9a2f53250: OUTPUT: ¬´Partially dimensioned views of shaped arrays not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:26] *** Cabanossi left
[19:26] <donaldh> m: my @array; @array['2'] = True

[19:26] <camelia> rakudo-moar 9a2f53250: ( no output )

[19:28] *** Cabanossi joined
[19:31] *** troys is now known as troys_

[19:31] *** cdg joined
[19:35] *** bwisti left
[19:36] *** cdg left
[19:36] *** unicodable6 left
[19:36] *** unicodable6 joined
[19:36] *** ChanServ sets mode: +v unicodable6

[19:36] *** bisectable6 left
[19:36] *** committable6 left
[19:36] *** bisectable6 joined
[19:36] *** ChanServ sets mode: +v bisectable6

[19:36] *** committable6 joined
[19:36] *** ChanServ sets mode: +v committable6

[19:41] *** natrys left
[19:41] <lizmat> donaldh: please make a GH issue :-)

[19:49] *** itaipu joined
[20:01] *** cdg joined
[20:03] *** xinming left
[20:06] *** cdg left
[20:08] *** domidumont left
[20:21] *** ctilmes joined
[20:27] *** mcmillhj left
[20:32] *** benchable6 left
[20:33] *** benchable6 joined
[20:34] *** mcmillhj joined
[20:47] *** troys_ is now known as troys

[20:54] *** pochi joined
[20:55] *** Cabanossi left
[20:57] *** geospeck left
[20:58] *** Cabanossi joined
[21:05] *** zakharyas joined
[21:05] *** xinming joined
[21:28] *** rindolf left
[21:30] *** TimToady left
[21:31] *** cdg joined
[21:32] *** TimToady joined
[21:36] *** cdg left
[21:38] *** cdg joined
[21:39] *** mson joined
[21:40] *** sena_kun left
[21:47] *** pmurias joined
[21:56] *** Cabanossi left
[21:58] *** Cabanossi joined
[22:03] *** TEttinger joined
[22:03] *** mcmillhj left
[22:08] *** lostinfog joined
[22:10] *** m0ltar left
[22:16] *** zakharyas left
[22:16] <Geth> ¬¶ ecosystem: ace48d620c | (Tony O'Dell)++ (committed using GitHub Web editor) | META.list

[22:16] <Geth> ¬¶ ecosystem: InterProcess Event::Emitter functionality

[22:16] <Geth> ¬¶ ecosystem: 

[22:16] <Geth> ¬¶ ecosystem: Now you can send data [multiplexed] between processes with `named` events with ease

[22:16] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/ace48d620c

[22:20] *** m0ltar joined
[22:41] *** cpage_ left
[22:48] *** AlexDaniel joined
[22:49] <AlexDaniel> u: bicycle

[22:49] <yoleaux> 16:38Z <tbrowder> AlexDaniel: what do you think of my last comment on last Rakudo PR-

[22:49] <unicodable6> AlexDaniel, U+1F6B2 BICYCLE [So] (üö≤)

[22:49] <unicodable6> AlexDaniel, U+1F6B3 NO BICYCLES [So] (üö≥)

[22:49] <yoleaux> 16:45Z <tbrowder> AlexDaniel: PR? I am getting close to a good solution for the table config key values but I think the last PR is a good interim solution.  Note also the previous PR must also be merged to get the new tests to work.  So I‚Äôm respectfully requesting merge of PR #1287 and PR #1291.

[22:52] *** comborico joined
[22:52] <comborico> Moritz, you around?

[22:55] *** Cabanossi left
[22:56] *** lostinfog left
[22:58] *** Cabanossi joined
[23:06] *** cpage_ joined
[23:14] *** rindolf joined
[23:16] <DrForr> .tell moritz Scheduled Day 7 for Thursday 11:59 AM so we've got time for last minute critiquing.

[23:16] <yoleaux> DrForr: I'll pass your message to moritz.

[23:19] *** troys is now known as troys_

[23:23] *** mcmillhj joined
[23:23] *** comborico left
[23:25] *** Cabanossi left
[23:26] <DrForr> Gotta get to bed. Also sent a note to the OP, I'll be around at prob. 9:30am CET.

[23:27] *** mcmillhj left
[23:28] *** Cabanossi joined
[23:29] *** troys_ is now known as troys

[23:30] *** dayangkun joined
[23:32] *** mcmillhj joined
[23:33] *** pmurias left
[23:39] *** mcmillhj left
[23:48] *** mson left
[23:51] <donaldh> lizmat: GH issue added 

[23:55] *** rindolf left
[23:56] *** donaldh left
[23:57] *** Cabanossi left
[23:58] *** Cabanossi joined
