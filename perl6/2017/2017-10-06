[00:02] *** cdg joined
[00:07] *** cdg left
[00:13] *** Ven`` left
[00:13] *** Ven`` joined
[00:15] *** [particle]1 is now known as [particle]

[00:23] *** cpage_ joined
[00:24] *** margeas left
[00:27] *** tushar joined
[00:27] *** tushar left
[00:27] *** tushar joined
[00:32] *** thou left
[00:36] *** tushar left
[00:41] *** arnsholt left
[00:42] <weabot> what's the preferred way of installing zef manually?

[00:44] *** mantovani joined
[00:45] *** cdg joined
[00:45] *** shadoxx left
[00:46] *** shadoxx joined
[00:47] <MasterDuke> weabot: i think it's something like `perl6 -I lib bin/zef install .` in whatever directory you've cloned it to

[00:47] *** mcmillhj joined
[00:47] <weabot> alright thanks!

[00:48] <Geth> ¬¶ doc: 0cc05104f3 | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[00:48] <Geth> ¬¶ doc: Document IO::Handle.slurp(:bin) arg

[00:48] <Geth> ¬¶ doc: 

[00:48] <Geth> ¬¶ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/e2ec569b7c

[00:48] <Geth> ¬¶ doc: Spec: https://github.com/perl6/roast/commit/1aa8a8ad18

[00:48] <synopsebot> Link: https://doc.perl6.org/type/IO/Handle

[00:48] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0cc05104f3

[00:50] *** cdg left
[00:51] <jdv79> jnthn: https://gist.github.com/anonymous/e2f9cc4405ab9086472ddeb3771aef15

[00:51] <jdv79> sorry but that's the best i could golf it down too

[00:51] *** mcmillhj left
[00:51] <jdv79> run that a few times and one will block up; seemingly on the qqx line

[00:52] <jdv79> or anyone else that could provide insight

[00:53] *** mudman left
[00:53] <jdv79> .tell jnthn if you have a chance - if i run this a few times it seems to block on the qqx line:  https://gist.github.com/anonymous/e2f9cc4405ab9086472ddeb3771aef15

[00:53] <yoleaux> jdv79: I'll pass your message to jnthn.

[00:59] *** ChoHag left
[01:01] <AlexDaniel_> squashable6: status

[01:01] <squashable6> AlexDaniel_, ‚ö†üçï Next SQUASHathon in ‚âà8 hours (2017-10-07 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[01:01] <AlexDaniel_> I'm pulling the list of RT tickets right now, I won't be online in 8 hours

[01:02] *** mcmillhj joined
[01:07] *** mcmillhj left
[01:07] <AlexDaniel_> ‚Ä¶ although maybe I'll run it again a few hours later

[01:08] *** shadoxx left
[01:09] *** shadoxx joined
[01:15] *** mcmillhj joined
[01:17] *** cdg joined
[01:20] *** mcmillhj left
[01:26] *** KotH left
[01:26] *** Cabanossi left
[01:27] *** Cabanossi joined
[01:28] *** KotH joined
[01:31] *** mcmillhj joined
[01:32] *** grondilu_ left
[01:32] *** grondilu joined
[01:37] *** mcmillhj left
[01:38] *** mcmillhj joined
[01:42] *** shadoxx_ joined
[01:42] *** mcmillhj left
[01:43] *** shadoxx left
[01:44] *** mcmillhj joined
[01:45] *** ilbot3 left
[01:49] *** mcmillhj left
[01:54] *** ilbot3 joined
[01:54] *** ChanServ sets mode: +v ilbot3

[01:57] *** yht joined
[01:58] *** mcmillhj joined
[02:03] *** mcmillhj left
[02:04] *** tyilanmenyn joined
[02:05] *** timotimo left
[02:05] *** ggherdov left
[02:05] *** domm left
[02:05] *** sjn left
[02:05] *** hahainternet left
[02:05] *** sjn joined
[02:06] *** domm joined
[02:06] *** tyil left
[02:06] *** mack[m] left
[02:06] *** f3ew left
[02:06] *** timotimo joined
[02:08] *** squashable6 left
[02:08] *** statisfiable6 left
[02:08] *** unicodable6 left
[02:08] *** quotable6 left
[02:08] *** nativecallable6 left
[02:08] *** unicodable6 joined
[02:08] *** nativecallable6 joined
[02:08] *** quotable6 joined
[02:08] *** statisfiable6 joined
[02:08] *** squashable6 joined
[02:09] *** releasable6 left
[02:09] *** peteretep_ joined
[02:10] *** jkva__ joined
[02:11] *** hahainternet joined
[02:11] *** ilmari_ joined
[02:11] *** cdg left
[02:12] *** peteretep left
[02:12] *** Technaton left
[02:12] *** jkva_ left
[02:12] *** ilmari left
[02:12] *** andrewalker left
[02:12] *** Bucciarati left
[02:12] *** sacomo left
[02:12] *** mienaikage left
[02:12] *** daxim left
[02:12] *** rodarmor left
[02:12] *** shmibs left
[02:12] *** jkva__ is now known as jkva_

[02:12] *** peteretep_ is now known as peteretep

[02:12] *** ilmari_ is now known as ilmari

[02:12] *** Bucciarati joined
[02:12] *** f3ew joined
[02:13] *** andrewalker joined
[02:13] *** shmibs joined
[02:13] *** rodarmor joined
[02:14] *** Technaton joined
[02:15] *** unicodable6 left
[02:15] *** nativecallable6 left
[02:15] *** quotable6 left
[02:15] *** statisfiable6 left
[02:15] *** squashable6 left
[02:16] *** SCHAPiE left
[02:16] *** mienaikage joined
[02:16] *** mack[m] joined
[02:20] *** shadoxx joined
[02:20] *** shadoxx_ left
[02:20] *** rodrigok joined
[02:22] *** SCHAPiE joined
[02:25] *** rodrigok left
[02:25] *** Cabanossi left
[02:25] *** releasable6 joined
[02:27] *** Cabanossi joined
[02:29] <weabot> Missing block

[02:29] <weabot> ------> <BOL>‚èè<EOL>

[02:29] <weabot>     expecting any of:

[02:29] <weabot>         statement end

[02:29] <weabot> this doesn't tell me much, what's the best way to find out where it's wrong?

[02:29] <weabot> it's at stage2 in nqp during parsing, that's all I know

[02:30] <weabot> the file is about 1200 lines long so it's a bit hard to find

[02:32] *** ab5tract_ joined
[02:32] *** nativecallable6 joined
[02:32] *** quotable6 joined
[02:32] *** unicodable6 joined
[02:32] *** ChanServ sets mode: +v unicodable6

[02:32] *** squashable6 joined
[02:32] *** statisfiable6 joined
[02:33] *** japhb_ joined
[02:33] *** [ptc]_ joined
[02:33] *** mspo_ joined
[02:35] *** Bucciarati left
[02:35] *** ab5tract left
[02:35] *** zacts left
[02:35] *** [ptc] left
[02:35] *** japhb left
[02:35] *** leedo_ left
[02:35] *** mspo left
[02:37] *** daxim joined
[02:37] *** Bucciarati joined
[02:37] *** sacomo joined
[02:38] *** SCHAPiE left
[02:39] *** zacts joined
[02:39] *** statisfiable6 left
[02:39] *** squashable6 left
[02:39] *** nativecallable6 left
[02:39] *** quotable6 left
[02:39] *** releasable6 left
[02:39] <weabot> wtf is going on here

[02:39] *** releasable6 joined
[02:39] *** nativecallable6 joined
[02:39] *** squashable6 joined
[02:39] *** quotable6 joined
[02:39] *** statisfiable6 joined
[02:40] *** leedo_ joined
[02:41] *** noganex_ joined
[02:42] *** kurahaupo_ left
[02:44] *** noganex left
[02:46] *** SCHAPiE joined
[02:51] <TEttinger> weabot: looks like the bots (-able6) are being worked on

[02:52] *** rodrigok joined
[02:53] *** rodrigok left
[02:53] *** rodrigok joined
[02:54] *** rodrigok left
[02:54] *** rodrigok joined
[02:56] <AlexDaniel_> not really, there's some issue with freenode it seems

[02:57] <AlexDaniel_> maybe not, but bots shuold not quit because of ping timeouts normally

[02:57] <AlexDaniel_> especially half of them, hmm‚Ä¶

[02:59] *** rodrigok left
[03:00] *** rodrigok joined
[03:00] <AlexDaniel_> only those with ipv6 addresses are affected, hmm‚Ä¶

[03:00] <AlexDaniel_> ipv4**

[03:00] * AlexDaniel_ shrugs

[03:15] *** eliasr left
[03:25] *** shadoxx left
[03:27] <AlexDaniel_> squashable6: status

[03:27] <squashable6> AlexDaniel_, ‚ö†üçï Next SQUASHathon in ‚âà6 hours (2017-10-07 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[03:33] *** shadoxx joined
[03:43] *** BenGoldberg left
[03:43] *** labster left
[03:54] *** Cabanossi left
[03:56] *** Cabanossi joined
[03:57] *** ch3ck3r joined
[03:58] *** mcmillhj joined
[04:01] *** rodrigok left
[04:03] *** mcmillhj left
[04:06] *** ggherdov joined
[04:09] *** flatwhite joined
[04:09] *** kerframil left
[04:10] *** mcmillhj joined
[04:12] *** cdg joined
[04:14] *** skids left
[04:14] *** mcmillhj left
[04:16] *** cdg left
[04:22] *** hoffentlichja joined
[04:27] *** mcmillhj joined
[04:31] *** mcmillhj left
[04:36] *** xtreak joined
[04:38] *** araraloren left
[04:38] *** araraloren_ joined
[04:50] *** piojo joined
[04:51] <piojo> Hi, does anyone here use or develop cro?

[04:53] <piojo> I've started using it as a server to provide a simple HTTP API that queries a database, but I noticed moar crashes after a couple days, and when I compiled moarvm with debug symbols, it decided to hang instead of crashing.

[04:53] <piojo> I'm using the september perl6 release, on linux.

[04:56] <piojo> what's the way to debug this further? If I use perl6-debug, can I pause the hung process and see what it's doing?

[04:59] *** wamba joined
[05:03] *** tyilanmenyn is now known as tyil

[05:05] *** cgfbee joined
[05:20] <hoffentlichja> is the convention for constants in perl6 still all caps snake case?

[05:25] *** evalable6 left
[05:25] *** evalable6 joined
[05:33] *** Wiertek joined
[05:35] *** Morfent left
[05:39] *** domidumont joined
[05:40] *** mr-foobar left
[05:41] *** mr-foobar joined
[05:43] *** domidumont left
[06:03] *** squashable6 left
[06:03] *** evalable6 left
[06:03] *** releasable6 left
[06:03] *** statisfiable6 left
[06:03] *** quotable6 left
[06:03] *** nativecallable6 left
[06:03] *** unicodable6 left
[06:03] *** committable6 left
[06:03] *** bloatable6 left
[06:03] *** greppable6 left
[06:03] *** coverable6 left
[06:03] *** benchable6 left
[06:03] *** bisectable6 left
[06:04] *** bloatable6 joined
[06:04] *** committable6 joined
[06:04] *** quotable6 joined
[06:04] *** nativecallable6 joined
[06:04] *** ChanServ sets mode: +v committable6

[06:04] *** ChanServ sets mode: +v quotable6

[06:04] *** ChanServ sets mode: +v nativecallable6

[06:04] *** unicodable6 joined
[06:04] *** greppable6 joined
[06:04] *** coverable6 joined
[06:04] *** evalable6 joined
[06:04] *** ChanServ sets mode: +v evalable6

[06:04] *** bisectable6 joined
[06:04] *** benchable6 joined
[06:04] *** releasable6 joined
[06:04] *** squashable6 joined
[06:04] *** statisfiable6 joined
[06:08] *** Xliff_ joined
[06:09] *** Cabanossi left
[06:10] *** mr-foobar left
[06:11] *** Xliff left
[06:11] *** Cabanossi joined
[06:12] *** domidumont joined
[06:12] *** domidumont left
[06:14] *** domidumont joined
[06:14] *** mr-foobar joined
[06:22] <teatime> .tell lizmat the link "the issues at hand" on latest weekly is broken.

[06:22] <yoleaux> teatime: I'll pass your message to lizmat.

[06:23] *** wamba left
[06:23] *** troys_ is now known as troys

[06:24] *** Morfent joined
[06:32] *** cpage_ left
[06:40] *** mr-foobar left
[06:42] *** mr-foobar joined
[06:44] *** llfourn left
[06:55] *** Guest21598 left
[07:00] *** rindolf joined
[07:02] *** wamba joined
[07:03] *** giraffe joined
[07:03] *** giraffe is now known as Guest43993

[07:04] *** troys left
[07:08] *** Morfent left
[07:09] *** mr-foobar left
[07:13] *** mr-foobar joined
[07:13] *** lowbro joined
[07:14] *** lowbro left
[07:14] *** lowbro joined
[07:16] *** Morfent joined
[07:27] *** cpage_ joined
[07:31] *** leont_ joined
[07:38] *** leont_ left
[07:38] *** Cabanossi left
[07:41] *** timotimo left
[07:41] *** Cabanossi joined
[07:41] *** mr-foobar left
[07:43] *** mr-foobar joined
[07:54] *** rba left
[07:57] <Ulti> piojo: might be worth leaving an issue on the main github repository  https://github.com/croservices/cro-ssl/issues  also jnthn here is one of the people involved

[07:58] <Ulti> piojo: there are also some environment variables you can set so Rakudo logs things as it goes, but these would get really big after two days

[07:58] *** wander4096 joined
[07:59] <Ulti> also wrong ling doh https://github.com/croservices/cro

[08:08] *** Cabanossi left
[08:11] *** mr-foobar left
[08:11] *** Cabanossi joined
[08:12] *** mr-foobar joined
[08:12] *** xtreak left
[08:12] <stmuk> nice GH issue for Fri 

[08:12] <stmuk> https://github.com/Microsoft/vscode/issues/32405

[08:13] <piojo> Ulti: thanks. I don't think I have enough details to make a bug report at this point, but I'll try to catch jnthn when he's online

[08:22] *** rba joined
[08:29] *** someuser joined
[08:40] *** Cabanossi left
[08:40] *** mr-foobar left
[08:41] *** Cabanossi joined
[08:44] *** mr-foobar joined
[08:47] *** xtreak joined
[08:51] *** rba left
[08:52] *** Morfent left
[08:54] *** Zoffix joined
[08:54] <Zoffix> teatime: broken how? Works for me. You might have to be logged in to github to be able to access the page tho

[08:55] *** rba joined
[08:58] *** pmurias joined
[08:58] <pmurias> what is 'my int $foo is default(*)' supposed to even do?

[08:58] <pmurias> I found it fudged in the tests

[08:59] *** rba left
[08:59] * Zoffix would guess "leave last value"

[08:59] *** rba joined
[08:59] *** telex left
[08:59] <Zoffix> as in `my int $foo is default(*) = 42; $foo = Nil; say $foo` still got 42 up in it

[09:00] <moritz> that looks quite constructed to me

[09:00] <moritz> what would my int $foo is default(*); say $foo; do ?

[09:00] *** telex joined
[09:01] <moritz> not really constructed; more like an abuse of what "default" means

[09:01] <pmurias> btw, why do we have the Nil reverts stuff to default behavior?

[09:01] <moritz> because we[tm] thought it was a good idea?

[09:01] *** jonas1 joined
[09:02] <jnthn> I don't think we can do `is default` on natives. There's nowhere to stash the default away.

[09:02] <yoleaux> 00:53Z <jdv79> jnthn: if you have a chance - if i run this a few times it seems to block on the qqx line:  https://gist.github.com/anonymous/e2f9cc4405ab9086472ddeb3771aef15

[09:02] <Zoffix> moritz: it'd be 0 because it's int :) Dunno what the case for `my $n` would be tho

[09:02] *** rba left
[09:03] *** xinming left
[09:03] <moritz> I'm in favor of scraping the test

[09:03] <Zoffix> +1

[09:03] <teatime> Zoffix: Indeed, I'm not logged in, and it gives a 404.  Is it the same data etc. as this:  https://github.com/search?q=is%3Aopen+is%3Aissue+user%3Aperl6+label%3AHacktoberfest

[09:03] <teatime> because that works fine even logged out

[09:03] *** wamba left
[09:04] <Zoffix> teatime: yeah, looks to be it

[09:04] <Zoffix> huggable: hacktoberfest

[09:04] <huggable> Zoffix, Hacktoberfest Issues: https://github.com/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+user%3Aperl6+label%3AHacktoberfest

[09:05] <Zoffix> huggable: hacktoberfest :is: Hacktoberfest Issues: https://github.com/search?q=is%3Aopen+is%3Aissue+user%3Aperl6+label%3AHacktoberfest

[09:05] <huggable> Zoffix, Added hacktoberfest as Hacktoberfest Issues: https://github.com/search?q=is%3Aopen+is%3Aissue+user%3Aperl6+label%3AHacktoberfest

[09:05] <teatime> .tell lizmat looks like because I'm not logged in; this works even if logged out:  https://github.com/search?q=is%3Aopen+is%3Aissue+user%3Aperl6+label%3AHacktoberfest

[09:05] <yoleaux> teatime: I'll pass your message to lizmat.

[09:05] <jnthn> pmurias: Nil - so that you can return a typed container to its correct undefined value without knowing that type. Most useful if you want to *return* Nil, because then you don't know what the caller will assign it into.

[09:06] <Zoffix> squashable6: status

[09:06] <squashable6> Zoffix, ‚ö†üçï Next SQUASHathon is just a few moments away (2017-10-07 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:06] <Zoffix> Is it waiting for someone to flip the switch? It's 5:06 on my clock.... 

[09:06] <Zoffix> AlexDaniel: yo

[09:06] <teatime> is lizmat the correct person for p6weekly?

[09:06] <teatime> going off my poor memory heh

[09:06] *** piojo left
[09:07] <Zoffix> teatime: yeah, she did write the last 100+ weeklies. timotimo also has the keys to make changes

[09:07] <Zoffix> Oh and timotimo wrote several of those last 100+ weeklies

[09:08] <Zoffix> squashable6: loud

[09:08] <squashable6> Zoffix, ALRIGHT, LET'S DO IT!!!

[09:08] <Zoffix> squashable6: status

[09:08] <squashable6> Zoffix, ‚ö†üçï Next SQUASHathon is just a few moments away (2017-10-07 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:08] <Zoffix> the anticipation is killing me... :D

[09:09] *** rba joined
[09:10] *** mr-foobar left
[09:12] *** Morfent joined
[09:14] *** mr-foobar joined
[09:15] *** wamba joined
[09:17] *** cog__ joined
[09:19] <AlexDaniel_> Zoffix: no

[09:20] <AlexDaniel_> Zoffix: it should work automatically

[09:20] <Zoffix> Oh man it treats 59m as "few moments"

[09:20] <Zoffix> stupid robot

[09:20] <AlexDaniel_> a few moments away = less than one hour

[09:20] <Zoffix> That's not a few moments! :)

[09:20] *** cog_ left
[09:20] <Zoffix> Maybe it's cultural...

[09:21] <AlexDaniel_> https://github.com/perl6/whateverable/issues/244

[09:21] <Zoffix> I heard somewhere being late for half hour is acceptable.

[09:21] *** TEttinger left
[09:22] *** yht left
[09:23] *** holyghost left
[09:23] <teatime> 2017-10-07 00:00:00 UTC-12 *is* in the past though, right

[09:23] <teatime> or did my back-of-envelope calc go wrong

[09:23] <AlexDaniel_> you should use +14 for the calculation I think

[09:24] <AlexDaniel_> 09:24 UTC right now, +14 is 23:24

[09:24] *** Cabanossi left
[09:24] <AlexDaniel_> sounds about right

[09:26] *** Cabanossi joined
[09:28] <Geth> ¬¶ whateverable/few-moments: 1a61e78749 | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/Misc.pm6

[09:28] <Geth> ¬¶ whateverable/few-moments: Don't call 1 hour "a few moments"

[09:28] <Geth> ¬¶ whateverable/few-moments: 

[09:28] <Geth> ¬¶ whateverable/few-moments: - Return number of minutes until $then when it's just minutes

[09:28] <Geth> ¬¶ whateverable/few-moments: - Return 'a few moments' only when there is less than a minute left

[09:28] <Geth> ¬¶ whateverable/few-moments: review: https://github.com/perl6/whateverable/commit/1a61e78749

[09:28] <Geth> ¬¶ whateverable: zoffixznet++ created pull request #245: Don't call 1 hour "a few moments"

[09:28] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/pull/245

[09:29] <Zoffix> AlexDaniel_: https://github.com/perl6/whateverable/pull/245

[09:29] <Zoffix> Didn't run any tests....

[09:29] <Geth> ¬¶ whateverable: 1a61e78749 | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/Misc.pm6

[09:29] <Geth> ¬¶ whateverable: Don't call 1 hour "a few moments"

[09:29] <Geth> ¬¶ whateverable: 

[09:29] <Geth> ¬¶ whateverable: - Return number of minutes until $then when it's just minutes

[09:29] <Geth> ¬¶ whateverable: - Return 'a few moments' only when there is less than a minute left

[09:29] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/1a61e78749

[09:29] <Geth> ¬¶ whateverable: a625d4e53a | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | lib/Misc.pm6

[09:29] <Geth> ¬¶ whateverable: Merge pull request #245 from perl6/few-moments

[09:29] <Geth> ¬¶ whateverable: 

[09:29] <Zoffix> \o/

[09:29] <Geth> ¬¶ whateverable: Don't call 1 hour "a few moments"

[09:29] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/a625d4e53a

[09:30] *** squashable6 left
[09:30] *** squashable6 joined
[09:30] *** ChanServ sets mode: +v squashable6

[09:30] <AlexDaniel_> squashable6: next

[09:30] <squashable6> AlexDaniel_, ‚ö†üçï Next SQUASHathon is in 29 minutes (2017-10-07 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:30] *** mr-foobar left
[09:30] *** jeek left
[09:31] <Zoffix> \o/

[09:33] *** cdg joined
[09:33] *** mr-foobar joined
[09:33] *** rba_ joined
[09:34] <AlexDaniel_> Zoffix: fwiw not only you'd need to have thousands of rakudo builds for running the tests, but squashable has no tests whatsoever /o\

[09:34] <AlexDaniel_> I'm working on that too, but you know‚Ä¶ 177 issues /o\

[09:35] <Zoffix> :)

[09:36] *** okl joined
[09:37] *** rba left
[09:38] *** cdg left
[09:38] <Zoffix> for SQUASHAthoners: S32-str/Collation.t will be failing until we do the nqp/moarvm bump (which requires fixing a bug in moarvm/nqp first). You can ignore the failures in that file

[09:40] *** yht joined
[09:40] <Zoffix> This will be an interesting test in our infrastructure... what with 4 different repos depending on one another in some way :)

[09:41] *** timo joined
[09:41] *** timo is now known as Guest65627

[09:43] *** ufobat joined
[09:50] *** rba_ is now known as rba

[09:54] *** Guest65627 is now known as timotimo

[09:55] *** holyghost joined
[10:00] <Zoffix> m: my $x; my $y := $x; $x = (42,$y); say $x; 

[10:00] <camelia> rakudo-moar 96669c: OUTPUT: ¬´(\List_84653920 = (42 List_84653920))‚ê§¬ª

[10:00] <AlexDaniel_> squashable6: status

[10:00] <squashable6> AlexDaniel_, üçïüçï SQUASHathon is in progress! The end of the event in 2 days and ‚âà1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:00] <Zoffix> m: my $x; my $y := $x; $x = Map.new((:a(42),:b($y))); say $x

[10:00] <camelia> rakudo-moar 96669c: OUTPUT: ¬´Map.new((:a(42),:b(Any)))‚ê§¬ª

[10:00] <Zoffix> Seems like an incongruency: you can shove a writable container into a List but not into a map?

[10:01] *** darutoko joined
[10:02] *** kurahaupo joined
[10:06] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAppVeyor and JIT‚Äù: https://github.com/MoarVM/MoarVM/issues/718#issuecomment-334714128

[10:06] <squashable6> üçïüçïüçï  First contribution by AlexDaniel++! ‚ô•

[10:06] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúAppVeyor and JIT‚Äù: https://github.com/MoarVM/MoarVM/issues/718

[10:10] *** Cabanossi left
[10:10] <squashable6> üçïüçïüçï  First contribution by zoffixznet++! ‚ô•

[10:11] <Zoffix> :) maybe geth should be reporting here too for rakudo/nqp/moarvm during squashatong

[10:11] *** Cabanossi joined
[10:13] *** AlexDaniel_ left
[10:25] *** okl left
[10:29] *** W4RL0RD joined
[10:30] <AlexDaniel> Maybe

[10:31] <AlexDaniel> Probably

[10:34] *** rba left
[10:35] *** margeas joined
[10:40] *** Morfent left
[10:45] <stmuk> started? in which TZ is it Sat?

[10:59] <pmurias> language design question: if on a 32bit backend I assign say a 40bit long bignum to a 'int' should that thrown an exception?

[10:59] <pmurias> m: my int $foo = 100000000000000000000;

[10:59] <camelia> rakudo-moar 69af24: OUTPUT: ¬´Cannot unbox 67 bit wide bigint into native integer‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:59] <pmurias> m: my int32 $foo = 2**40;

[10:59] <camelia> rakudo-moar 69af24: ( no output )

[10:59] <pmurias> m: my int32 $foo = 2**40;say $foo;

[10:59] <camelia> rakudo-moar 69af24: OUTPUT: ¬´0‚ê§¬ª

[11:00] *** evalable6 left
[11:00] *** evalable6 joined
[11:00] *** ChanServ sets mode: +v evalable6

[11:00] *** AlexDaniel_ joined
[11:02] *** wamba left
[11:03] <squashable6> üçïüçïüçï  First contribution by pmurias++! ‚ô•

[11:04] *** llfourn joined
[11:05] *** AlexDaniel_ left
[11:14] *** ChoHag joined
[11:14] *** domidumont left
[11:19] *** AlexDaniel_ joined
[11:21] <squashable6> üçïüçïüçï  First contribution by lizmat++! ‚ô•

[11:25] *** Aaronepower joined
[11:25] *** xtreak left
[11:28] *** xtreak joined
[11:31] *** rba joined
[11:32] *** Grrrr joined
[11:34] *** kurahaupo left
[11:34] *** kurahaupo joined
[11:39] *** Aaronepower left
[11:39] *** rba left
[11:40] *** Cabanossi left
[11:40] *** rba joined
[11:41] *** Cabanossi joined
[11:41] <Zoffix> stmuk: UTC+14

[11:42] <Zoffix> and UTC+13, and UTC+12 too by now

[11:43] <Zoffix> pmurias: yeah, it should throw. However, if it goes outta bound with operations (e.g. $foo++), it should do what hardware does (which is wrap around on all the OSes we support, I was told)

[11:46] *** xtreak left
[11:48] *** domidumont joined
[11:52] *** NEveD joined
[11:56] *** Praise- joined
[11:56] *** Praise- left
[11:56] *** Praise- joined
[11:56] *** Praise left
[11:58] <Geth> ¬¶ roast: 7de1138c34 | (Zoffix Znet)++ | S32-hash/perl.t

[11:58] <Geth> ¬¶ roast: Map.perl preserves Map's scalar containeration

[11:58] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/7de1138c34

[12:05] *** |oLa|1 joined
[12:05] *** |oLa| left
[12:12] <Zoffix> perlpilot: you around? Is there anyway you could edit rakudo's and moarvm's `geth` hooks' URLs and add `,#perl6` at the end of them so geth reports in #perl6 for it too, during SQUASHathon? SQUASHathon is kinda ded and boring without commit announcements.

[12:15] <moritz> I've changed it for rakudo

[12:16] *** evalable6 left
[12:16] *** evalable6 joined
[12:16] <moritz> I don't have permissions for MoarVM

[12:16] <Zoffix> moritz++ Thanks :)

[12:19] <timotimo> squashathon is going on and my wrists require me to not type much :|

[12:20] <Zoffix> Shake your hand like... ever used a mercury thermometre and know how to shake it to reset it? Do a motion like that

[12:21] <Zoffix> Also: fill a pot with hot water and stick your wrists there for a while

[12:24] *** Cabanossi left
[12:24] <Geth> ¬¶ rakudo/nom: 381c4c3bb2 | (Zoffix Znet)++ | src/core/Map.pm

[12:24] <Geth> ¬¶ rakudo/nom: Add space between els in Map.gist

[12:24] <Geth> ¬¶ rakudo/nom: 

[12:24] <Geth> ¬¶ rakudo/nom: We add one in Hash, List, and Buf .gists

[12:24] <Geth> ¬¶ rakudo/nom: 

[12:24] <Geth> ¬¶ rakudo/nom: (Noticing though that Buf and List gists separate els with spaces,

[12:24] <Geth> ¬¶ rakudo/nom: but Hash/Map with commas + spaces)

[12:24] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/381c4c3bb2

[12:25] <Geth> ¬¶ roast: 8a3908c3e2 | (Zoffix Znet)++ | S32-hash/map.t

[12:25] <Geth> ¬¶ roast: Spec Map.gist trimming to 100 els

[12:25] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/8a3908c3e2

[12:26] *** Cabanossi joined
[12:27] *** yht left
[12:29] <Geth> ¬¶ doc: 4aadcc3c8e | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Map.pod6

[12:29] <Geth> ¬¶ doc: Document Map.gist trimming to 100 els

[12:29] <Geth> ¬¶ doc: 

[12:29] <Geth> ¬¶ doc: Impl: https://github.com/rakudo/rakudo/commit/aad8991e2a

[12:29] <Geth> ¬¶ doc: Spec: https://github.com/perl6/roast/commit/8a3908c3e2

[12:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4aadcc3c8e

[12:29] <synopsebot> Link: https://doc.perl6.org/type/Map

[12:33] <perlpilot> good $localtime all.

[12:33] <Zoffix> \o

[12:34] <perlpilot> So far the squashathons seem to be scheduled when I'm busy.  I'm at work now, and then I'm moving this weekend.

[12:34] <perlpilot> When's the next one?

[12:34] <Zoffix> Why are so many people moving lol? Like 4 people in this channel are moving

[12:35] <Zoffix> perlpilot: it's first Saturday of the month every month

[12:35] <perlpilot> Zoffix: #perl6 is full of movers and shakers  :)

[12:35] <weabot> Zoffix so it's technically not started yet?

[12:36] *** flatwhite left
[12:36] <Zoffix> weabot: it started already. It's Saturday in some timezones already.

[12:36] <perlpilot> Zoffix: oh, and btw, I don't have access to make that change on MoarVM either.  I'm not sure besides jnthn who does.

[12:36] <Zoffix> OK :)

[12:36] <weabot> alright

[12:37] <weabot> so the 48 hour period where it's still saturday somewhere, gotcha ;)

[12:37] <Zoffix> I think it's a 26-hour period

[12:38] <Zoffix> squashable6: status

[12:38] <squashable6> Zoffix, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:38] <squashable6> Zoffix, Log and stats: https://gist.github.com/afd6c9f05704fc6c42214a71a5b58f25

[12:38] <Zoffix> Ah, ok, guess more

[12:38] <Zoffix> UTC-12 to UTC+14

[12:39] <Zoffix> No idea how many hours that is in total :)

[12:40] <Zoffix> m: say 26+24

[12:40] <camelia> rakudo-moar 381c4c: OUTPUT: ¬´50‚ê§¬ª

[12:40] <Zoffix> I guess that many, but it sounds too many

[12:43] *** setty1 joined
[12:44] <Zoffix> s: (1+2i), 'Num', \();

[12:44] <SourceBaby> Zoffix, Something's wrong: ‚ê§ERR: Cannot resolve caller sourcery(List, List); none of these signatures match:‚ê§    ($thing, Str:D $method, Capture $c)‚ê§    ($thing, Str:D $method)‚ê§    (&code)‚ê§    (&code, Capture $c)‚ê§  in block <unit> at -e line 6‚ê§‚ê§

[12:44] <Zoffix> oops wc

[12:44] *** ShalokShalom_ joined
[12:44] *** HoboWithAShotgun joined
[12:44] <Zoffix> buggable: tag lhf

[12:44] <buggable> Zoffix, There are 5 tickets tagged with LHF; See http://fail.rakudo.party/t/LHF for details

[12:44] <Zoffix> buggable: tag testneeded

[12:44] <buggable> Zoffix, There are 55 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[12:45] <Zoffix> ^ Lots of opportunity for newcomers in this SQUASHathon

[12:45] <Zoffix> lhf = low hanging fruit (easy tickets)

[12:47] *** profan left
[12:47] *** ShalokShalom left
[12:53] *** Ven`` left
[12:54] *** AlexDaniel_ left
[12:57] *** rba left
[12:58] *** rba joined
[12:58] *** lucasb joined
[13:01] *** AlexDaniel_ joined
[13:01] <Geth> ¬¶ rakudo/nom: b377de1c48 | (Zoffix Znet)++ | src/core/Exception.pm

[13:01] <Geth> ¬¶ rakudo/nom: Versatilize X::Numeric::CannotConvert a bit

[13:01] <Geth> ¬¶ rakudo/nom: 

[13:02] <Geth> ¬¶ rakudo/nom: Make it stringify .defined $!targets as is, while .perl'ifying

[13:02] <Geth> ¬¶ rakudo/nom: others. This maintains the old output for X::Numeric::Real, while

[13:02] <Geth> ¬¶ rakudo/nom: leaving open the possibility of using more than just a type for

[13:02] <Geth> ¬¶ rakudo/nom: $!target if we'll need to.

[13:02] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b377de1c48

[13:04] *** mcmillhj joined
[13:06] *** Ven`` joined
[13:06] <lucasb> o/

[13:07] <lucasb> So, can I blindly add ":D" to all those methods in https://github.com/rakudo/rakudo/blob/98fae3d84/src/core/Rat.pm#L86-L224 ?

[13:07] *** cdg joined
[13:08] <lucasb> RT #1270

[13:08] <lucasb> RT #127051

[13:08] <synopsebot> RT#127051 [new]: https://rt.perl.org/Ticket/Display.html?id=127051 [LHF] error for 1/1.WHAT

[13:08] <Zoffix> lucasb: not blindly. After you add it, make spectest (or stresstest if you got the time) and make sure it's clean

[13:08] *** cdg left
[13:08] <Zoffix> t/spec/S32-str/Collation.t                                      (Wstat: 1280 Tests: 14 Failed: 5)

[13:08] <Zoffix>   Failed tests:  1, 7, 10-12

[13:09] <Zoffix> Except for ^ those failures which are expected (awaiting nqp bump)

[13:09] *** cdg joined
[13:10] <lucasb> Zoffix: well, that's the thing. I don't have a recent installation around :D but I expect the change do be harmless

[13:10] <Zoffix> lucasb: I don't follow the thing... You make the change, then build it, then run the tests.

[13:10] *** cdg_ joined
[13:11] *** eliasr joined
[13:11] <Zoffix> git clone https://github.com/YOUR-FORK/rakudo && cd rakudo; <make changes>; perl Configure.pl --gen-moar --gen-nqp --backends=moar; make; make test; make install; make spectest

[13:13] <Zoffix> It's quite possible for failures or hangs to happen in this change, since we have those iffy ":Us are zeros" semantics in some places.

[13:13] <lucasb> alright, I'll setup my local environment. (I was just being lazy and wanted to submit the thing in GH interface without testing :)

[13:13] <lucasb> Zoffix: thanks!

[13:13] <Zoffix> eww no :)

[13:14] *** cdg left
[13:15] <Geth> ¬¶ doc: eac84166a8 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Num.pod6

[13:15] <Geth> ¬¶ doc: Document Num.Int

[13:15] <Geth> ¬¶ doc: 

[13:15] <Geth> ¬¶ doc: Exception impl: https://github.com/rakudo/rakudo/commit/f04bd1d617f60

[13:15] <Geth> ¬¶ doc:  Exception spec: https://github.com/perl6/roast/commit/fcee82fcff56f187

[13:15] <synopsebot> Link: https://doc.perl6.org/type/Num

[13:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/eac84166a8

[13:15] * Zoffix &

[13:19] *** mr-foobar left
[13:22] *** mr-foobar joined
[13:22] *** mspo_ is now known as mspo

[13:23] *** smonff joined
[13:27] *** damnlie left
[13:29] *** skids joined
[13:35] *** Wiertek left
[13:35] *** smonff left
[13:38] *** Cabanossi left
[13:38] *** smonff joined
[13:41] *** Cabanossi joined
[13:43] *** rba left
[13:43] *** rba joined
[13:45] *** damnlie joined
[13:48] *** smonff` joined
[13:50] <HoboWithAShotgun> good localtime() you lovely freaks and freakettes, onward in my journey ...

[13:50] <HoboWithAShotgun> so how do i export a method?

[13:50] <HoboWithAShotgun> i mean manually via EXPORT

[13:52] *** smonff left
[13:53] <HoboWithAShotgun> i want to add some utility functions to my class so i can write $something->goo( ... ) instead of $something.somethingelse.meth("goo", ...)

[13:54] <HoboWithAShotgun> but there are quite a few of those, and i dont want to DRY

[13:56] *** smonff`` joined
[13:56] *** smonff` left
[13:56] <stmuk>  /j moarvm

[13:56] <stmuk> argg

[13:56] <Zoffix> .oO( accidental /j lottery... )

[13:59] <HoboWithAShotgun> btw, i really realy love this foo( |@args ) syntax

[13:59] <HoboWithAShotgun> that saves so, so much typing

[13:59] <moritz> HoboWithAShotgun: it looks like you want delegation, not method exports

[14:00] <moritz> m: class ContainsAStr { has $.str handles <uc lc> }; given ContainsAStr.new(str => 'Purl') { say .uc; say .lc }

[14:00] <camelia> rakudo-moar b377de: OUTPUT: ¬´PURL‚ê§purl‚ê§¬ª

[14:00] <HoboWithAShotgun> i misspoke

[14:01] <HoboWithAShotgun> i solved that one last night using exactly that

[14:02] <moritz> afaict there's not generic method exporter

[14:02] <HoboWithAShotgun> i meant  $something->goo ( ... ) instead of $something.some-longish-name("goo", ...)

[14:03] <moritz> YourClass.add_method($alias, YourClass.^find_method($original_name))

[14:03] <HoboWithAShotgun> ok, and where do i put this?

[14:03] <Zoffix> .^add_method

[14:04] <moritz> right, .^add_method

[14:04] <moritz> HoboWithAShotgun: outside the class

[14:04] <moritz> and later do YourClass.^compose(...) call

[14:04] <moritz> oh, I think it can go inside the class too

[14:05] <moritz> hm, if you need the name of the alias inside, you might need to add a closure in between

[14:05] <moritz> or you could use FALLBACK, though that's kinda evil

[14:06] <moritz> YourClass.^add_method($alias, sub ($SELF, |c) {YourClass.^find_method($original_name)($SELF, $alias, |c) } )

[14:06] *** rba left
[14:07] <moritz> you might want to draw the YourClass.^find_method outside the closure for performance reasons

[14:07] *** mempko joined
[14:09] *** rba joined
[14:10] *** Cabanossi left
[14:11] *** Cabanossi joined
[14:12] *** Cabanossi left
[14:13] *** Cabanossi joined
[14:18] *** rba left
[14:21] <HoboWithAShotgun> that doesnt seem to work. I get "STable conflict detected during deserialization.

[14:21] <HoboWithAShotgun> (Probable attempt to load a mutated module or modules that cannot be loaded together)."

[14:21] <jnthn> Usually a missing BEGIN

[14:23] <HoboWithAShotgun> that seems to do it. i know get signature mismatch but might be me fucking up

[14:23] <Zoffix> Anyone registered for PAUSE recently? Do you get the account right away or do you have to wait for a human to approve it first?

[14:23] <HoboWithAShotgun> thanks so far

[14:24] <Zoffix> huggable: swear jar

[14:24] <huggable> Zoffix, Help Perl 6. Donate: https://donate.perlfoundation.org/

[14:27] <HoboWithAShotgun> yup, it works

[14:27] *** lucasb left
[14:28] <HoboWithAShotgun> you saying if i drop a dollar into the head i can swear in irc?

[14:28] *** domidumont left
[14:28] <HoboWithAShotgun> it works fine now, btw. thanks vm

[14:28] <moritz> for the next hour, yes :-)

[14:28] *** domidumont joined
[14:28] <Zoffix> Yeah, you can swear by putting a dollar per swear :")

[14:29] <HoboWithAShotgun> i'll take the hour

[14:29] <Zoffix> \o/

[14:29] <HoboWithAShotgun> you twat :D

[14:29] <jnthn> Finally, we found a way to fund Perl 6 development :P :P

[14:30] <moritz> now we just need a few russians :-)

[14:30] <AlexDaniel_> squashable6: status

[14:30] <squashable6> AlexDaniel_, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà21 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:30] <HoboWithAShotgun> speaking of swearing, the scots are masters in this

[14:30] <squashable6> AlexDaniel_, Log and stats: https://gist.github.com/80f8f5c0a6b37c69cad2717eeb6ae389

[14:33] <squashable6> üçïüçïüçï  First contribution by jnthn++! ‚ô•

[14:34] <Zoffix> \o/

[14:34] *** rba joined
[14:35] *** Technaton left
[14:35] <AlexDaniel_> samcv: if you can add #perl6 channel to Geth webhook that would be nice too

[14:35] <HoboWithAShotgun> into the head... is it possible to aquire dyslexia over time?

[14:35] <HoboWithAShotgun> develop, rather

[14:35] *** domidumont1 joined
[14:35] <AlexDaniel_> HoboWithAShotgun: yeah‚Ä¶ dementia?

[14:37] <HoboWithAShotgun> i sure do hope not

[14:37] <AlexDaniel_> Zoffix: oh, it should be %23perl6 ?

[14:37] <AlexDaniel_> not #perl6 ?

[14:37] <HoboWithAShotgun> it would be horrible to get outsmarted by mum one day ;D

[14:37] <Zoffix> AlexDaniel_: github converts it automagically

[14:37] <AlexDaniel_> ahhh, ok

[14:37] <Zoffix> I used #perl6 

[14:38] *** domidumont left
[14:39] *** Technaton joined
[14:44] <AlexDaniel_> jnthn: is it possible to give Zoffix (or me) more privileges on MoarVM and rakudo repos? Because we tend to do various bot stuff and trying to find someone to manage webhooks is a bit annoying

[14:46] <Zoffix> (and rakudo :P)

[14:47] *** cdg_ left
[14:48] *** cdg joined
[14:50] *** mcmillhj left
[14:53] *** cdg left
[14:54] *** mcmillhj joined
[14:58] <AlexDaniel_> moritz: ‚Üë or maybe you are the right person to ping about that stuff?

[14:58] <moritz> AlexDaniel_: I don't even have permissions in the moarvm repo myself

[14:58] <AlexDaniel_> like, I'm not insisting or anything, but it will make my life a tiny bit easier :)

[14:58] *** enheh joined
[14:59] *** wamba joined
[14:59] <jnthn> AlexDaniel_: Probably can, though trying to fix a bug before wandering off to take care of visiting family; please ping me about it at the weekend or so :)

[14:59] <AlexDaniel_> \o/

[15:04] <jdv79> jnthn: did you get a chance to look at the blocking issue i had?

[15:04] <jnthn> jdv79: No

[15:05] <Zoffix> Everyone wants a piece of jnthn :)

[15:05] <jdv79> wanted to know if its just me or should i bug it.  ok.

[15:05] <jnthn> jdv79: Will probably be next week before I've chance

[15:05] <jdv79> cool

[15:06] <jnthn> One thing that stands out to me though is

[15:07] *** rba left
[15:07] <jnthn> https://gist.github.com/anonymous/e2f9cc4405ab9086472ddeb3771aef15#file-gistfile1-txt-L35

[15:07] <jnthn> How many times will that line of code run?

[15:07] <jnthn> Becuase it will work once and throw an exception every time after that

[15:07] <jnthn> And bring down the react block with it

[15:07] <jdv79> that's just something i threw in to avoid sleeping in the example.  its not part of the real code

[15:07] <jnthn> OK

[15:08] <jdv79> it was sleeping instead before on the last line and results were the same 

[15:08] <jdv79> next week is fine.  its friday.  have a good weekend!

[15:09] <jdv79> thanks for peeking at it

[15:11] <jnthn> np, will try and remember next week but ping me if I forget

[15:11] *** domidumont joined
[15:11] <HoboWithAShotgun> allright, that was weird. i was creating a hash of pairs of strings representing the sub names for the exporter thing and it crashed with: 

[15:11] <HoboWithAShotgun> This type (QAST::WVal) does not support positional operations

[15:12] <HoboWithAShotgun> by strategic commenting i found a single line in the hash assignment that was the problem

[15:12] <HoboWithAShotgun> now i replaced it by exactly the same text and it works

[15:13] <jdv79> ok

[15:13] <HoboWithAShotgun> i now have a program with two identical lines which either crashes or not, depending on which line i comment out

[15:13] *** AlexDaniel_ left
[15:14] *** domidumont1 left
[15:14] *** AlexDaniel_ joined
[15:17] <Zoffix> HoboWithAShotgun: what version of rakudo are you using?

[15:18] *** Wiertek joined
[15:19] <HoboWithAShotgun> This is Rakudo version 2017.08-91-g9785356 built on MoarVM version 2017.08.1-128-gde6dced

[15:20] <Zoffix> HoboWithAShotgun: upgrade to latest commit (or use a release). You're using a minimally dev commit and there's been a lot of volatile changes recently

[15:20] <Zoffix> *minimally tested

[15:20] <Zoffix> huggable: sauce

[15:20] <huggable> Zoffix, Install untested latest development version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[15:20] <HoboWithAShotgun> its a non issue, i deleted the crash comment and all is fine

[15:21] *** rba joined
[15:21] <HoboWithAShotgun> i just wonder, WTF? HOW?

[15:21] <HoboWithAShotgun> or better why

[15:23] *** lowbro left
[15:23] *** Cabanossi left
[15:25] *** domidumont left
[15:26] *** Cabanossi joined
[15:27] *** wamba left
[15:27] *** wamba joined
[15:28] *** st_elmo joined
[15:30] <Geth> ¬¶ nqp: 60f79d38e9 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[15:30] <Geth> ¬¶ nqp: Bump MoarVM

[15:30] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/60f79d38e9

[15:30] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.09.1-553-ga4fef0b...2017.09.1-575-gd4e230a

[15:30] <Geth> ¬¶ rakudo/nom: c4b96e457b | (Zoffix Znet)++ | tools/build/NQP_REVISION

[15:30] <Geth> ¬¶ rakudo/nom: Bump NQP

[15:30] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c4b96e457b

[15:30] <Geth> ¬¶ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.09-40-ga6a1aa0...2017.09-59-g60f79d3

[15:33] <Zoffix> New blog post: "CPAN6 Is Here": https://6lang.party/post/CPAN6-Is-Here

[15:34] <Zoffix> .tell tyil I promised you a post on CPAN6: https://6lang.party/post/CPAN6-Is-Here  There's certainly room for a better guide on the process :)

[15:34] <yoleaux> Zoffix: I'll pass your message to tyil.

[15:35] <tyil> Zoffix: sweet

[15:35] <yoleaux> 15:34Z <Zoffix> tyil: I promised you a post on CPAN6: https://6lang.party/post/CPAN6-Is-Here  There's certainly room for a better guide on the process :)

[15:35] <tyil> thanks :>

[15:35] <tyil> I got a PAUSE ID today

[15:35] <tyil> in anticipation of all this :>

[15:37] *** AlexDaniel_ left
[15:42] *** cdg joined
[15:42] *** enheh left
[15:45] *** smonff`` left
[15:47] *** cdg left
[15:47] *** setty1 left
[15:47] <tyil> Zoffix: are there plans to render readme.adoc files as well?

[15:48] <Zoffix> tyil: I have no immediate plans for the website, as I'm busy with @other-things. But people can implement stuff. The code that renders readme is here: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/Controller/Dist.pm#L115-L128

[15:49] <tyil> alright, thanks 

[15:49] <tyil> .hug Zoffix 

[15:49] * huggable hugs Zoffix 

[15:49] *** cdg joined
[15:51] *** eroux joined
[15:53] *** rba left
[15:54] *** cdg left
[15:54] *** enheh joined
[16:03] *** vytautas joined
[16:03] *** mcmillhj left
[16:13] <HoboWithAShotgun> where is the line between compact and obtuse?

[16:15] *** Wiertek left
[16:19] *** Aaronepower joined
[16:19] <Zoffix> Right here: compact ‚îÉ obtuse

[16:27] <HoboWithAShotgun> that's a pretty line

[16:27] <HoboWithAShotgun> i wish i had a line like that

[16:29] *** troys joined
[16:30] *** ufobat left
[16:31] <Zoffix> Good news! You know the language that can give you a line like that. Just type "\c[BOX DRAWINGS HEAVY VERTICAL]".say to get it

[16:31] <Zoffix> :)

[16:34] <vytautas> want to read characters from terminal, one by one, as keys are pressed

[16:34] <vytautas> googled, found termios

[16:34] <Geth> ¬¶ rakudo/nom: 8ff76b5962 | (Elizabeth Mattijsen)++ | 27 files

[16:34] <Geth> ¬¶ rakudo/nom: Add some # vim: ft=perl6 expandtab sw=4

[16:34] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8ff76b5962

[16:35] <vytautas> given example only prints first when second is pressed, second when third is pressed etc

[16:37] <lizmat> Zoffix: is it because of Squashable that Geth also reports here ?

[16:42] *** atroxaper joined
[16:43] <Zoffix> lizmat: because of SQUASHathon, yeah. It'll be turned off in #perl6 after SQUASHathon is over

[16:43] <lizmat> ok, just checkin  :-)

[16:43] <Zoffix> vytautas: probably because it's waiting for combiners?

[16:44] <Zoffix> vytautas: there's Terminal::Print people recommended when this topic was brought up before; maybe check it out

[16:44] <Zoffix> eco: Terminal::Print

[16:44] <buggable> Zoffix, Terminal::Print 'Asynchronous printing to your terminal -- as a simple grid': https://github.com/ab5tract/Terminal-Print

[16:44] <Zoffix> vytautas: and waiting for combiners issue is described here (I don't off-top-head know the way around it: https://docs.perl6.org/type/IO::Handle#Waiting_for_potential_combiners )

[16:44] <Zoffix> Bu tmaybe the module sorts it out

[16:45] *** Wiertek joined
[16:45] <gdonald>  https://rosettacode.org/wiki/Keyboard_input/Obtain_a_Y_or_N_response#Perl_6

[16:46] *** mcmillhj joined
[16:48] <Zoffix> That code looks gross

[16:49] <Zoffix> Shelling out... and for each keypress

[16:49] <Zoffix> I guess it reads just one char.. ok

[16:50] <stmuk> I think https://rt.perl.org/Ticket/Display.html?id=131814 should be closed

[16:50] <stmuk> anyone agree?

[16:52] <timotimo> stmuk: but "foo" is what the original poster expected, instead they got \"foo"

[16:52] <Zoffix> I get \"foo\" on my terminal

[16:52] <Zoffix> Looks like rakudo is trying to escape the quotes with `\"` and it ain't working

[16:52] <timotimo> that'd also be wrong, right?

[16:53] <timotimo> it shouldn't escape these quotes, i think?

[16:53] <Zoffix>  Yeah, it should print without any slashes

[16:54] <stmuk> well the ticket actually gives the wrong observed output anyway \"foo

[16:54] <stmuk> I assume thats a typo for \"foo\"

[16:54] <Zoffix> C:\Users\zoffix>perl6 -e "say qqx[echo \x[22]foo\x[22]];"

[16:54] <Zoffix> \"foo\"

[16:54] <Zoffix> That's on 2017.07 star

[16:54] *** ch3ck3r left
[16:55] <stmuk> well 2017.01 on windows correctly returns "foo" (without escapes)

[16:57] <stmuk> as does 2017.05

[16:57] <Zoffix> stmuk: I recall there was a Proc::Async bug with quopting that was fixed around .06 time and likely that fix introed this new bug

[16:58] <stmuk> Zoffix: ah I'll poke around that

[16:59] <Zoffix> stmuk: maybe this was it: https://github.com/MoarVM/MoarVM/commit/05a7dc3

[16:59] <stmuk> ok I'll try adding that back in a branch

[17:00] *** noganex_ left
[17:03] *** noganex joined
[17:03] *** AlexDaniel_ joined
[17:05] *** japhb_ is now known as japhb

[17:10] *** andrzejku joined
[17:11] *** rba joined
[17:12] *** someuser left
[17:17] <Geth> ¬¶ ecosystem: 530861b810 | timo++ (committed using GitHub Web editor) | META.list

[17:17] <Geth> ¬¶ ecosystem: JSON::Fast now has its home on CPAN.

[17:17] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/530861b810

[17:21] <squashable6> üçïüçïüçï  First contribution by samcv++! ‚ô•

[17:21] *** ken joined
[17:21] <Geth> ¬¶ nqp: 02a426e0e6 | (Samantha McVey)++ | src/HLL/Grammar.nqp

[17:21] <Geth> ¬¶ nqp: Remove support for ornate parenthesis from quoting constructs

[17:21] <Geth> ¬¶ nqp: 

[17:21] <Geth> ¬¶ nqp: Reasons:

[17:21] <Geth> ¬¶ nqp: * These are not recognized by Unicode as being brackets

[17:21] <Geth> ¬¶ nqp: * They do not conform to Pi/Pf or Ps/Pf general category pairings

[17:21] <Geth> ¬¶ nqp: * They don't have a Bidi_Mirroring_Glyph or a Bidi_Matching_Bracket pair

[17:21] <Geth> ¬¶ nqp: * They have never been considered brackets for any of the history of

[17:21] <Geth> ¬¶ nqp:   Perl 6, and they never will be considered brackets

[17:21] *** ken is now known as Guest36651

[17:21] <Geth> ¬¶ nqp: * There are no modules which use these brackets, and no known users

[17:21] <Geth> ¬¶ nqp: * It is not easily versionable, and not feasible to make it versioned

[17:21] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/02a426e0e6

[17:23] *** enheh left
[17:24] <japhb> pmurias: Is there a big block in the remainder that you can win all at once?  Or will every new JS feature only give you e.g. a fraction of a percent?

[17:26] <japhb> Dammit, scrollback was stuck, thought pmurias had just said something he said yesterday.  :-(

[17:26] *** Praise- is now known as Praise

[17:28] *** leont_ joined
[17:34] <Geth> ¬¶ nqp: 576d78eef8 | (Samantha McVey)++ | src/HLL/Grammar.nqp

[17:34] <Geth> ¬¶ nqp: Add a removal message if ornate parentheses are used

[17:34] <Geth> ¬¶ nqp: 

[17:34] <Geth> ¬¶ nqp: This message will eventually be removed, but in the very unlikely

[17:35] <Geth> ¬¶ nqp: case anybody is using them, provide a useful message.

[17:35] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/576d78eef8

[17:36] *** markldevine joined
[17:36] <markldevine> p6: say 3

[17:36] <camelia> rakudo-moar 8ff76b: OUTPUT: ¬´3‚ê§¬ª

[17:37] *** markldevine left
[17:37] <Zoffix> drive-by-eval

[17:40] *** wamba left
[17:40] *** andrzejku left
[17:42] *** atroxaper left
[17:42] *** atroxaper joined
[17:42] *** andrzejku joined
[17:45] *** Ptolemarch joined
[17:45] *** nadim_ joined
[17:45] *** nadim left
[17:50] * AlexDaniel_ is wishing to see drive-by-bisect some day

[17:50] <AlexDaniel_> I guess the squashathon is going to start on Saturday for me. Too tired today :)

[17:51] <AlexDaniel_> squashable6: status

[17:51] <squashable6> AlexDaniel_, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:51] <squashable6> AlexDaniel_, Log and stats: https://gist.github.com/634d2abdf2fc1f4533bdac3caa10b59c

[17:51] <AlexDaniel_> happy squashathoning everyone o/

[17:51] <Zoffix> \O

[17:52] *** ShalokShalom_ is now known as ShalokShalom

[17:54] *** AlexDaniel_ left
[17:55] *** AlexDaniel_ joined
[17:57] *** mcsnolte joined
[17:58] *** leont_ left
[18:01] *** holyghost left
[18:01] *** smls joined
[18:01] <stmuk> Zoffix: adding the  UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS back into  moarvm src/io/procops.c does fix all the quoting problems

[18:02] <smls> Hi all

[18:02] <stmuk> but I'm seeing other errors with the build (which may be related to my VM which just crashed)

[18:02] *** araraloren_ left
[18:02] <timotimo> hey smls 

[18:03] <stmuk> the make install step fails with "Could not open (CompUnit::Repository::Staging). Failed to stat file: no such file or directory"

[18:03] <smls> So how does the SQUASHathon work? :)

[18:03] *** HoboWithAShotgun left
[18:03] <timotimo> dangit, the module list updater is written in perl5

[18:04] <Zoffix> sweet

[18:04] <Zoffix> squashable6: status

[18:04] <squashable6> Zoffix, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà17 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:04] <squashable6> Zoffix, Log and stats: https://gist.github.com/b15e0f806a74a93dc27fbef06275b040

[18:04] *** atroxaper left
[18:05] <Zoffix> smls: for first Saturday of the month (in all timezones), we hack on some target repo. This month it's rakudo/rakudo, which also includes commits to moarvm/moarvm, perl6/nqp, and perl6/roast. Pick a problem to hack on. Submit fix. Receive free digital pizza. More info in the wiki: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:05] <Zoffix> buggable: pizza me

[18:05] <buggable> Zoffix, enjoy this slice of Hawaiian pizza, my friend! Yummy üçï

[18:05] <Zoffix> yummy

[18:05] <Zoffix> buggable: tag hlf

[18:05] <buggable> Zoffix, There are no tickets tagged with HLF

[18:05] <Zoffix> buggable: tag testneeded

[18:05] <buggable> Zoffix, There are 55 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[18:06] <Zoffix> smls: ^ those are LHF pickings, though I you might wish something a bit tougher :)

[18:06] <smls> Zoffix: So any work on RT tickets during this time window, counts?

[18:06] <Zoffix> smls: yeah

[18:06] <smls> ok

[18:07] <Zoffix> buggable: tag lhf

[18:07] <buggable> Zoffix, There are 5 tickets tagged with LHF; See http://fail.rakudo.party/t/LHF for details

[18:07] <Zoffix> (I meant this one, not hlf)

[18:09] *** AlexDaniel_ left
[18:09] <Zoffix> timotimo: lol, you've *just* noticed that? :)

[18:09] *** W4RL0RD left
[18:09] <timotimo> i didn't consider changing anything about that before

[18:09] <timotimo> i mean contribute

[18:10] <timotimo> or something

[18:10] <squashable6> üçïüçïüçï  First contribution by moritz++! ‚ô•

[18:10] <Geth> ¬¶ roast: 7fd6b6f3ac | (Moritz Lenz)++ | S04-statements/gather.t

[18:10] <Geth> ¬¶ roast: Test for RT #127672

[18:10] <Zoffix> Ah :)

[18:10] <Geth> ¬¶ roast: 

[18:10] <Geth> ¬¶ roast: take inside a regex with m:g// runs the expected number of times

[18:10] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/7fd6b6f3ac

[18:10] <synopsebot> RT#127672 [new]: https://rt.perl.org/Ticket/Display.html?id=127672 ÔΩ¢takeÔΩ£ inside global and exhaustive matching is broken (m:g/. {take 1}/)

[18:11] <moritz> I can't seem to close this ticket

[18:12] <moritz> whatever action I do, I can only chose "new" or "new (unmodified)" as the next state

[18:15] <smls> moritz: Can you go into the "Basics" tab and use the "Status" drop-down?

[18:16] * Zoffix resolves it

[18:16] *** profan joined
[18:17] *** ranguard joined
[18:17] <moritz> smls: it seems Zoffix++ has resolved it in the mean time. Now I have two options again, "resolved" and "resolved (unchanged)"

[18:18] <Zoffix> moritz: I added you to bug admins now. The old account listed has different email adddress

[18:18] <ranguard> Zoffix: hi, CPAN6++ - small note: https://backpan.metacpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/ is useful URL as well (being a backpan)...

[18:19] <Zoffix> Thanks.

[18:19] <Zoffix> huggable: metabackpan :is: https://backpan.metacpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/

[18:19] <huggable> Zoffix, Added metabackpan as https://backpan.metacpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/

[18:20] <moritz> m: say 1 ‚àà (Set) ?? 'present' !! 'not present';

[18:20] <camelia> rakudo-moar 8ff76b: OUTPUT: ¬´not present‚ê§¬ª

[18:20] <moritz> m: say Set ‚äá Set ?? 'present' !! 'not present';

[18:20] <camelia> rakudo-moar 8ff76b: OUTPUT: ¬´present‚ê§¬ª

[18:22] <stmuk> hmmm I think reverting the quoting change isn't sufficient since there are side effects on CURS

[18:23] *** ranguard left
[18:23] <Zoffix> Well, the quoting change fixed the bug. You can't just revert it, especially since now CURS use Proc::Async, so it's probably choking on the bug that commit fixed

[18:23] <Zoffix> $ perl6 -e 'm: say 1 ‚àà (Set) ?? 'present' !! 'not present';'

[18:23] <Zoffix> Non ast passed to WANTED: NQPMu

[18:23] <Zoffix> m: say 1 ‚àà (Set) ?? present !! not present;

[18:23] <camelia> rakudo-moar 8ff76b: OUTPUT: ¬´Non ast passed to WANTED: NQPMu‚ê§5===SORRY!5=== Error while compiling <tmp>‚ê§Your !! was gobbled by the expression in the middle; please parenthesize‚ê§at <tmp>:1‚ê§------> 3say 1 ‚àà (Set) ?? present !!7‚èè5 not present;‚ê§    expecting any of‚Ä¶¬ª

[18:25] <Zoffix> Looks right. a Set:U is treated as a 1-element Set with Set:U up in it. 1 is not part of it and Set:U is same set as Set:U

[18:25] * Zoffix &

[18:28] <stmuk> ok I'll look further at the windows quoting bug tomorrow (if noone beats me to it)

[18:32] *** st_elmo left
[18:36] *** vytautas left
[18:38] *** atroxaper joined
[18:43] *** atroxaper left
[18:43] *** konsolebox left
[18:44] *** darutoko left
[18:45] <timotimo> so i've made changes to the db builder libs; how do i check if everything's all right?

[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: fe7ce8d988 | (Timo Paulssen)++ | lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm

[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: output info from rate limiter in log

[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: 

[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: so we can get an idea for how it operates - i.e. does it

[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: refresh to full only after the reset time is reached, or does

[18:48] *** jonas1 left
[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: it slowly fill up (leaky bucket style)

[18:48] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: review: https://github.com/perl6/modules.perl6.org/commit/fe7ce8d988

[18:48] *** HoboWithAShotgun joined
[18:48] <timotimo> someone want to check this? i'll go AFK for a bit

[18:49] <El_Che> thumbs up for seeing liz and wendy yesterday!

[18:50] *** konsolebox joined
[18:58] <lizmat> El_Che o/

[18:59] <Zoffix> timotimo: you can run `perl bin/build-project-list.pl` locally and see if it provides right output. Pithub's interface always confounded me so I don't know if that part is right, but you might want to move this `my $commits = $self->_repo($commit_request->list)                or return;` part AFTER your block that prints out limits; otherwise it'll only get printed when a dist has fresh commits

[19:00] <Zoffix> timotimo: oh, nevermind

[19:00] <Zoffix> The cached checker is actually a dozen lines lower.

[19:00] <Zoffix> `cpanm -vn --installdeps .` will install all the prereqs locally.

[19:01] <Zoffix> (or you can try out a checkout on modules.perl6.org account on www.p6c.org)

[19:01] <Zoffix> Or you can just merge :P

[19:02] <smls> In S05-mass/rx.t, why is the information of every test duplicated in a comment above it?

[19:03] <smls> https://github.com/perl6/roast/blob/master/S05-mass/rx.t

[19:04] <smls> And what is the y/n field?

[19:04] * Zoffix has no idea

[19:05] <moritz> smls: rx.t is an automatic translation of some data-driven tests from earlier regex implementations

[19:06] <moritz> smls: the comments were the data-driven tests, and inserted to make it easier to check if the translation was done correctly

[19:06] <smls> So should they added for new tests?

[19:06] <smls> *be

[19:06] <moritz> no

[19:07] <moritz> I don't see any benefits

[19:07] <smls> ok

[19:07] <Zoffix> timotimo: oh, I can actually test it myself.

[19:09] <Zoffix> ain't working right

[19:09] * Zoffix tries to fix

[19:10] <Zoffix> oh, a bit later

[19:10] *** evalable6 left
[19:10] *** evalable6 joined
[19:10] *** ChanServ sets mode: +v evalable6

[19:12] *** pecastro left
[19:17] *** troys is now known as troys_

[19:23] *** pecastro joined
[19:30] *** pecastro left
[19:30] *** pecastro joined
[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: eff4140f69 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm

[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: Fix up rate limiter code

[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: 

[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: It's ->list on the ->commits that returns the request.

[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: The (crappily-named) ->_repo() then error-handles it and

[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: returns content.

[19:31] <Geth> ¬¶ modules.perl6.org/github_rate_limiting: review: https://github.com/perl6/modules.perl6.org/commit/eff4140f69

[19:31] <Xliff_> I take it there is a lot of work going on in the rakudo tree, today?

[19:32] *** patrickz joined
[19:32] <Xliff_> Right now rakudobrew fails when installing.

[19:32] <Zoffix> oops

[19:32] <Zoffix> Accidentally sent masak++ a PR for modules site merge :)

[19:33] <Xliff_> ==> Bootstrapping Panda

[19:33] <Xliff_> Unable to parse expression in argument list; couldn't find final ')'

[19:33] <Xliff_>    at SETTING::src/core/Exception.pm:57  (/home/cbwood/.rakudobrew/moar-nom/install/share/p 

[19:33] <Xliff_> So rakudo did install, it is just panda that failed.

[19:33] <Geth> ¬¶ modules.perl6.org: zoffixznet++ created pull request #85: GitHub rate limiting

[19:33] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/pull/85

[19:33] <Geth> ¬¶ modules.perl6.org: fe7ce8d988 | (Timo Paulssen)++ | lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm

[19:33] <Geth> ¬¶ modules.perl6.org: output info from rate limiter in log

[19:33] <Geth> ¬¶ modules.perl6.org: 

[19:33] <Geth> ¬¶ modules.perl6.org: so we can get an idea for how it operates - i.e. does it

[19:33] <Geth> ¬¶ modules.perl6.org: refresh to full only after the reset time is reached, or does

[19:33] <Geth> ¬¶ modules.perl6.org: it slowly fill up (leaky bucket style)

[19:33] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/fe7ce8d988

[19:33] <Geth> ¬¶ modules.perl6.org: eff4140f69 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm

[19:33] <Geth> ¬¶ modules.perl6.org: Fix up rate limiter code

[19:33] <Geth> ¬¶ modules.perl6.org: 

[19:33] <Geth> ¬¶ modules.perl6.org: It's ->list on the ->commits that returns the request.

[19:33] <Geth> ¬¶ modules.perl6.org: The (crappily-named) ->_repo() then error-handles it and

[19:33] <Geth> ¬¶ modules.perl6.org: returns content.

[19:33] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/eff4140f69

[19:34] <Geth> ¬¶ modules.perl6.org: b90f0895fc | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm

[19:34] <Geth> ¬¶ modules.perl6.org: Merge pull request #85 from perl6/github_rate_limiting

[19:34] <Geth> ¬¶ modules.perl6.org: 

[19:34] <Geth> ¬¶ modules.perl6.org: GitHub rate limiting

[19:34] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/b90f0895fc

[19:34] <Zoffix> Xliff_: panda is deprecated software. Use zef

[19:34] <Xliff_> OK, well FYI "rakudobrew" still uses panda. Someone may want to get in contact with the maintaner and update him on this.

[19:35] <timotimo> it "uses" panda?

[19:35] <Xliff_> If I have the time and will, I will try to generate a PR.

[19:35] <timotimo> only if you "rakudobrew build-panda", no?

[19:35] *** domidumont joined
[19:35] <Xliff_> timotimo: "rakudobrew build moar"

[19:35] <Zoffix> Xliff_: well, rakudobrew is also not-recommended :)

[19:35] <Xliff_> ^^ Attempts to install panda.

[19:35] <timotimo> huh? there's no reason to install panda from that command

[19:35] <Zoffix> Xliff_: weird

[19:35] *** atroxaper joined
[19:35] <Xliff_> That's the only command I use.

[19:35] <Zoffix> huggable: source

[19:35] <huggable> Zoffix, Install untested latest development version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[19:36] <Xliff_> Zoffix: If rakudobrew is also no longer recommended (which is new news I must have missed) then what is a better alternative?

[19:36] *** pecastro left
[19:36] <timotimo> hm, does rakudobrew reinstall all packages you had before when you build a new version?

[19:37] <Xliff_> timotimo: That command will not. I don't know if there are other options in rakudobrew that will do that.

[19:37] <Zoffix> timotimo: not in my experience

[19:38] <timotimo> there's no code in rakudobrew that lets you install panda

[19:38] <timotimo> or run panda

[19:38] <timotimo> only code to complain

[19:38] <Xliff_> I would suspect such functionality would be better placed in zef.

[19:38] <Xliff_> Hrm. Maybe I am using an older version of rakudobrew.

[19:38] <timotimo> perhaps, it comes with a self-upgrade command

[19:39] <Zoffix> Xliff_: Rakudo Star has always been the recommended distribution for end users. `rakudobrew` is for core hackers who need multiple versions of rakudo at the same time. Those who want bleeding-edge freshly-squeezed rakudos can setup bash alias in the link huggable gave above

[19:39] *** mempko left
[19:39] <Zoffix> Xliff_: also there are compiler-only distro packages that you could also use

[19:39] <Zoffix> huggable: deb

[19:39] <huggable> Zoffix, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[19:40] *** atroxaper left
[19:40] <Zoffix> Xliff_: also, to circle back to your original statement. Yeah, there are commits to rakudo flying in, but HEAD builds and passes all the tests (and our goal is to keep it in that state, even during squashathons).

[19:41] <Xliff_> I will probably alias commands, then.

[19:41] <Xliff_> I have been using rakudobrew since I started with perl6.

[19:41] <Xliff_> Be a shame to see it go.

[19:42] <Xliff_> git pull

[19:42] <Xliff_> perl Configure.pl --gen-moar --gen-nqp --backends=moar & gmake & gmake test & gmake install

[19:42] <Xliff_> I think those are the necesary bits.

[19:42] <Zoffix> Why? It kinda sucks (atm), since you have to rehash every time you install binaries 

[19:42] <Zoffix> Xliff_: you're on windows?

[19:43] <Xliff_> Linux guest in Windows host. So the answer to that question is indeterminable.

[19:43] <Xliff_> You would need a qubit.

[19:43] <Zoffix> Xliff_: oh ok, I mis-spoke, rakudo HEAD builds and passes all the tests on Linux and OSX. Windows build is a bit lagging behind. 

[19:43] *** pecastro joined
[19:44] <Zoffix> But you can install Rakudo Star: https://rakudo.perl6.org/downloads/star/rakudo-star-2017.07-x86_64%20(JIT).msi

[19:44] <Zoffix> .oO( a bit stale... )

[19:45] <Zoffix> And yeah, those are the commands. You also need to install zef: git clone https://github.com/ugexe/zef & cd zef & perl6 -I. bin/zef install .

[19:45] <Zoffix> You don't need to keep around the directory that command clones and you don't need to re-install zef after you update rakudo next time

[19:46] *** mempko joined
[19:47] *** masak joined
[19:47] <Xliff_> k

[19:55] <Geth> ¬¶ roast: smls++ created pull request #341: Add tests for backtracking into alternations

[19:55] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/pull/341

[19:55] <squashable6> üçï smls++ opened pull request ‚ÄúAdd tests for backtracking into alternations‚Äù: https://github.com/perl6/roast/pull/341

[19:55] <squashable6> üçïüçïüçï  First contribution by smls++! ‚ô•

[19:55] <timotimo> Zoffix: 

[19:56] <timotimo> shall we force a rebuild?

[19:56] <smls> ^^ This PR closes 2 RTs if merged!

[19:56] <squashable6> üçï lizmat++ merged pull request ‚ÄúAdd tests for backtracking into alternations‚Äù: https://github.com/perl6/roast/pull/341

[19:57] <Geth> ¬¶ roast: 65a762217c | smls++ | 2 files

[19:57] <Geth> ¬¶ roast: Add tests for backtracking into alternations

[19:57] <Geth> ¬¶ roast: 

[19:57] <Geth> ¬¶ roast: They're the bottom eight tests listed at

[19:57] <Geth> ¬¶ roast: https://github.com/perl6/nqp/pull/368

[19:57] <Geth> ¬¶ roast: (The other ones listed there, for quantifiers,

[19:57] <Geth> ¬¶ roast: seem to be already covered in S05-mass/rx.t)

[19:57] <Geth> ¬¶ roast: 

[19:57] <Geth> ¬¶ roast: This closes RT #130117 and #131973.

[19:57] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/65a762217c

[19:57] <Geth> ¬¶ roast: b1ba026b46 | lizmat++ (committed using GitHub Web editor) | 2 files

[19:57] <synopsebot> RT#130117 [open]: https://rt.perl.org/Ticket/Display.html?id=130117 [TESTNEEDED] [REGEX] Sequential alternation `||` does not respect `:ratchet`

[19:57] <Geth> ¬¶ roast: Merge pull request #341 from smls/master

[19:57] <Geth> ¬¶ roast: 

[19:57] <synopsebot> RT#131973 [open]: https://rt.perl.org/Ticket/Display.html?id=131973 [TESTNEEDED] [REGEX] Backtracking modifiers on individual atoms fail to override a regex-global `:ratchet` modifier.

[19:57] <Geth> ¬¶ roast: Add tests for backtracking into alternations

[19:57] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/b1ba026b46

[19:58] *** stux|RC-only left
[19:58] *** |oLa|1 left
[20:00] *** n joined
[20:00] *** n is now known as Guest57810

[20:03] *** Guest57810 left
[20:05] *** domidumont left
[20:06] *** TreyHarris left
[20:08] *** mcmillhj left
[20:09] *** TreyHarris joined
[20:10] *** smls left
[20:15] *** Morfent joined
[20:16] *** perlpilot left
[20:20] *** lancew joined
[20:35] *** mcmillhj joined
[20:35] <perlawhirl> I'm getting error trying to make moarvm at the moment

[20:36] <Xliff_> Wow! There are no fast HTML parsers for Perl6.

[20:36] <perlawhirl> error: redefinition of typedef ‚ÄòMVMJitCompiler‚Äô

[20:36] <perlawhirl> https://pastebin.com/Xansbjdy

[20:36] <perlawhirl> any ideas?

[20:37] <Xliff_> Of course, I am trying to parse a 2.5M HTML, but isn't that below average for page sizes these days?

[20:37] <Geth> ¬¶ roast: 946d2ff79d | (Samantha McVey)++ | 2 files

[20:37] <Geth> ¬¶ roast: Add ignorecase and ignoremark tests to cover interpolation

[20:37] <Geth> ¬¶ roast: 

[20:37] <Geth> ¬¶ roast: Add tests to cover RT132232 and RT132233 which I have just opened to

[20:37] <Geth> ¬¶ roast: track the interpolation issues with ignorecase. There may be issues

[20:37] <synopsebot> RT#132232 [new]: https://rt.perl.org/Ticket/Display.html?id=132232 [UNI] ignorecase returns too many graphemes for expanding foldcase graphemes

[20:37] <Geth> ¬¶ roast: with ignoremark or ignorecase+ignoremark as well.

[20:37] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/946d2ff79d

[20:37] <synopsebot> RT#132233 [new]: https://rt.perl.org/Ticket/Display.html?id=132233 [UNI] ignorecase doesn't use foldcase semantics when the haystack is interpolated

[20:39] *** pecastro left
[20:39] <perlawhirl> Xliff_: use it as an excuse to write a NativeCall module for https://github.com/lexborisov/myhtml :)

[20:39] <perlawhirl> eco: myhtml

[20:39] <buggable> perlawhirl, HTML::MyHTML 'wrapper for MyHTML, a fast HTML parsing C library': https://github.com/MadcapJake/p6-MyHTML

[20:39] <perlawhirl> oh... it is done

[20:40] *** pecastro joined
[20:42] *** smls joined
[20:43] *** atroxaper joined
[20:47] <smls> Should .FLATTENABLE_HASH be tested directly, or is it considered internal?

[20:47] *** Ven joined
[20:48] *** atroxaper left
[20:48] *** Ven is now known as Guest1102

[20:48] <smls> re https://rt.perl.org/Ticket/Display.html?id=126951#txn-1484603

[20:48] *** rindolf left
[20:49] *** mcmillhj left
[20:52] *** Aaronepower left
[20:52] <Xliff_> perlawhirl: I'm already doing that for libxml2!!!

[20:53] <Xliff_> Plus, there is this.

[20:53] <Xliff_> https://github.com/MadcapJake/p6-MyHTML

[20:53] <Xliff_> MadcapJake++

[20:54] *** Cabanossi left
[20:54] <lizmat> smls: FLATTENABLE_HASH is an implementation detail, afaik

[20:54] <smls> ok

[20:54] <lizmat> any tests should be in make test, not roast

[20:55] <Xliff_> Aaaannd... HTML::MyHTML isn't working.

[20:56] *** Cabanossi joined
[20:57] *** eroux left
[21:00] *** Wiertek left
[21:01] *** Aaronepower joined
[21:01] *** pmurias left
[21:05] <Geth> ¬¶ roast: 8773139c37 | smls++ | S06-signature/slurpy-and-interpolation.t

[21:05] <Geth> ¬¶ roast: Test interpolating a typed hash into an argument list

[21:05] <Geth> ¬¶ roast: 

[21:05] <Geth> ¬¶ roast: Closes RT #126951

[21:05] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/8773139c37

[21:05] <synopsebot> RT#126951 [open]: https://rt.perl.org/Ticket/Display.html?id=126951 [TESTNEEDED] Interpolating a typed hash into an argument list produces wrong keys

[21:05] *** andrzejku left
[21:06] *** AlexDaniel_ joined
[21:06] <AlexDaniel_> squashable6: status

[21:06] <squashable6> AlexDaniel_, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà14 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:06] <squashable6> AlexDaniel_, Log and stats: https://gist.github.com/484a1f8192e5052cb42dbde3ba986d54

[21:06] *** skids left
[21:06] *** TEttinger joined
[21:08] <smls> AlexDaniel_: Why is it not tracking RT tickets being closed?

[21:09] <AlexDaniel_> smls: because it can't :(

[21:09] <AlexDaniel_> smls: I made the snapshot of the whole RT queue and will diff it against what we get after the squashathon

[21:09] <smls> ok

[21:09] <AlexDaniel_> so we'll get stats but not bot announcements here, sorry if it's a problem

[21:10] <smls> No worries

[21:11] <smls> I count 5 tickets closed so far.

[21:11] <smls> s/tickets/RTs/

[21:11] <AlexDaniel_> wow

[21:12] *** Aaronepower left
[21:13] <AlexDaniel_> smls: fwiw, a link to the roast commit is sometimes useful

[21:13] <AlexDaniel_> I'm thinking RT #131973 and RT #130117 were closed without a link

[21:13] <synopsebot> RT#131973 [resolved]: https://rt.perl.org/Ticket/Display.html?id=131973 [TESTNEEDED] [REGEX] Backtracking modifiers on individual atoms fail to override a regex-global `:ratchet` modifier.

[21:13] <synopsebot> RT#130117 [resolved]: https://rt.perl.org/Ticket/Display.html?id=130117 [TESTNEEDED] [REGEX] Sequential alternation `||` does not respect `:ratchet`

[21:15] *** patrickz left
[21:15] <AlexDaniel_> smls++

[21:16] <smls> AlexDaniel_: Link added.

[21:16] <AlexDaniel_> I see :)

[21:16] <AlexDaniel_> okay, given that I can't sleep today and that it's already Saturday here‚Ä¶ let's squash some tickets :)

[21:17] *** Guest36651 left
[21:17] <smls> :)

[21:18] <AlexDaniel_> buggable: TESTNEEDED

[21:18] <AlexDaniel_> buggable: tag TESTNEEDED

[21:18] <buggable> AlexDaniel_, There are 50 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[21:18] <AlexDaniel_> wow, 50 tickets

[21:22] *** Aaronepower joined
[21:23] <teatime> heh, there's not an Inline::JavaScript or Inline::NodeJS right

[21:24] *** Cabanossi left
[21:26] <AlexDaniel_> teatime: I guess so, yeah. At the same time we have rakudo.js‚Ä¶ :) http://blogs.perl.org/users/pawel_murias/2017/10/rakudojs-update---passes-6465-roast-test.html

[21:26] *** Cabanossi joined
[21:27] <AlexDaniel_> teatime: it's not ready yet though

[21:27] <AlexDaniel_> teatime: maybe talk to pmurias if you want to help

[21:28] *** vike left
[21:32] <Geth> ¬¶ rakudo/nom: 92e51c3d4e | (Elizabeth Mattijsen)++ | 5 files

[21:32] <Geth> ¬¶ rakudo/nom: Compile time defaults for attributes stored as value

[21:32] <Geth> ¬¶ rakudo/nom: 

[21:32] <Geth> ¬¶ rakudo/nom: - store the compile-time value of a default if possible

[21:32] <Geth> ¬¶ rakudo/nom: - makes object creation with concrete compile-time default values faster

[21:32] <Geth> ¬¶ rakudo/nom:   - about 40% faster for a single attribute, like "has $.foo = 42"

[21:32] <Geth> ¬¶ rakudo/nom: - rather than generating a method to be installed and called during init

[21:32] <Geth> ¬¶ rakudo/nom: - only supports concrete default values for now, type objects use old behaviour

[21:32] <Geth> ¬¶ rakudo/nom: <‚Ä¶commit message has 12 more lines‚Ä¶>

[21:32] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/92e51c3d4e

[21:34] <Geth> ¬¶ modules.perl6.org: 22de8d1ea1 | (Zoffix Znet)++ (committed using GitHub Web editor) | use-me-for-commit-triggers

[21:34] <Geth> ¬¶ modules.perl6.org: [REBUILD] for github rates

[21:34] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/22de8d1ea1

[21:35] <Zoffix> timotimo: done... I thought we didn't need to since the commit runs before the cache checker, but yeah, we need a rebuild so that it uses the max of github API reqs. Although, I don't think old build logs are backed up, so we'll need to keep an eye on the next one to grab it before it's overwritten

[21:35] <Zoffix> .in 30m build log

[21:35] <yoleaux> Zoffix: I'll remind you at 22:05Z

[21:35] <Zoffix> .in 2h build log

[21:35] <yoleaux> Zoffix: I'll remind you at 23:35Z

[21:36] <Geth> ¬¶ roast: 59398cd9cf | smls++ | S06-signature/slurpy-and-interpolation.t

[21:36] <Geth> ¬¶ roast: bump plan for commit 8773139c3

[21:36] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/59398cd9cf

[21:36] <Geth> ¬¶ roast: 9ea27ad2e7 | smls++ | S03-metaops/reduce.t

[21:36] <Geth> ¬¶ roast: Add test for reducing a Seq with operator =>

[21:36] <Geth> ¬¶ roast: 

[21:36] <Geth> ¬¶ roast: This closes RT #130906.

[21:36] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/9ea27ad2e7

[21:36] <synopsebot> RT#130906 [open]: https://rt.perl.org/Ticket/Display.html?id=130906 [TESTNEEDED] [REGRESSION] Reducing a Seq with `=>` fails with "P6opaque: no such attribute '$!reified' in type List"

[21:37] <Geth> ¬¶ roast: be53acf443 | (Elizabeth Mattijsen)++ | S12-introspection/attributes.t

[21:37] <Geth> ¬¶ roast: Adapt tests to new possible Attribute.build values

[21:37] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/be53acf443

[21:37] <AlexDaniel_> Zoffix: hah, there's one case when I used .6pl file extension

[21:37] <AlexDaniel_> that's from 2015

[21:39] <Geth> ¬¶ roast: a745629ef4 | (Elizabeth Mattijsen)++ | 2 files

[21:39] <Geth> ¬¶ roast: Untodo now passing tests

[21:39] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/a745629ef4

[21:40] <AlexDaniel_> m: sub foo() is cached {}

[21:40] <camelia> rakudo-moar 8ff76b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Use of the 'is cached' trait is experimental; please 'use experimental :cached'‚ê§at <tmp>:1‚ê§¬ª

[21:40] <AlexDaniel_> m: use experimental :cached; sub foo() is cached {}

[21:41] <camelia> rakudo-moar 8ff76b: ( no output )

[21:42] <timotimo> Zoffix: wowza, do you see that? at the end of our run we still have more than 3k requests left over

[21:43] *** pecastro left
[21:43] *** pecastro joined
[21:43] <squashable6> üçïüçïüçï  First contribution by timo++! ‚ô•

[21:44] <Zoffix> timotimo: that wasn't a full run tho

[21:44] <Zoffix> m: say 900/60

[21:44] <camelia> rakudo-moar 8ff76b: OUTPUT: ¬´15‚ê§¬ª

[21:44] <Zoffix> timotimo: and at most we'll save 15 minutes off the run

[21:45] *** Rawriful joined
[21:47] <Zoffix> Well, that's not true. There's also the option of parallelizing stuff.

[21:50] *** committable6 left
[21:50] *** committable6 joined
[21:51] *** atroxaper joined
[21:56] *** atroxaper left
[21:56] <AlexDaniel_> fwiw I rejected RT #125500

[21:56] <synopsebot> RT#125500 [rejected]: https://rt.perl.org/Ticket/Display.html?id=125500 [SEGV] double free or corruption, invalid pointer

[21:57] <AlexDaniel_> I wanted to do that for more than a year, so I hope people don't mind

[21:58] *** HoboWithAShotgun left
[21:58] *** wamba joined
[21:58] *** committable6 left
[21:58] *** committable6 joined
[21:58] *** ChanServ sets mode: +v committable6

[22:02] <Xliff_> Is there a way to remove a set of keys (in an array) from a Hash without using a loop?

[22:02] <Zoffix> %h{@key}:delete

[22:02] <Zoffix> %h{@keys}:delete

[22:02] <Xliff_> Ah! neat.

[22:03] *** masak left
[22:03] <Xliff_> Will that return an error if a key in @keys doesn't exist?

[22:03] *** Guest1102 left
[22:04] *** masak joined
[22:05] <yoleaux> Zoffix: build log

[22:05] <AlexDaniel_> m: my %h; %h<foo>:delete

[22:05] <camelia> rakudo-moar 92e51c: ( no output )

[22:05] <AlexDaniel_> m: my %h; say %h<foo>:delete

[22:05] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´(Any)‚ê§¬ª

[22:05] <AlexDaniel_> m: my %h = foo => 42; say %h<foo>:delete

[22:06] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´42‚ê§¬ª

[22:06] <AlexDaniel_> Xliff_: no

[22:06] <AlexDaniel_> Xliff_: do you want it to produce an error?

[22:07] <gfldex> m: my %h = :1a, :2b; say %h<a c>:exists:delete; dd %h

[22:07] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´(True False)‚ê§Hash %h = {:b(2)}‚ê§¬ª

[22:08] *** R0b0t1_ left
[22:08] <timotimo> Zoffix: i'd totally take 15 minutes off that run

[22:08] <Zoffix> m: say DateTime.today.utc

[22:08] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´No such method 'today' for invocant of type 'DateTime'. Did you mean 'day'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:08] <Zoffix> m: say DateTime.now.utc

[22:08] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´2017-10-06T22:08:53.303578Z‚ê§¬ª

[22:08] *** smls left
[22:09] *** Mrofnet joined
[22:09] <Zoffix> k, next run will start in 12 minutes and then take ~1h20m

[22:09] <AlexDaniel_> gfldex: that's very interesting

[22:09] *** devmikey joined
[22:10] *** robertle left
[22:10] <gfldex> m: my %h = :1a, :2b; say ?all(%h<a c>:exists:delete); dd %h

[22:10] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´False‚ê§Hash %h = {:b(2)}‚ê§¬ª

[22:10] *** R0b0t1_ joined
[22:10] *** Cabanossi left
[22:11] <Zoffix> Gonna be rebuilding R6 db in ~30-40m. First gonna add a button for managers to delete spam tickets

[22:11] <Xliff_> No. Thanks, AlexDaniel++

[22:11] *** Cabanossi joined
[22:11] <Xliff_> So why am I getting a sink error if I do the following: next if $pn eq <token user_agent x-user-agent>.any;

[22:12] *** Morfent left
[22:14] <AlexDaniel_> Xliff_: I'd need more code to reproduce it

[22:14] <AlexDaniel_> m: my $pn = ‚Äòtoken‚Äô; loop { last if $pn eq <token user_agent x-user-agent>.any }'

[22:14] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3eq <token user_agent x-user-agent>.any }7‚èè5'‚ê§¬ª

[22:14] <AlexDaniel_> m: my $pn = ‚Äòtoken‚Äô; loop { last if $pn eq <token user_agent x-user-agent>.any }

[22:14] <camelia> rakudo-moar 92e51c: ( no output )

[22:16] *** Morfent joined
[22:18] *** HoboWithAShotgun joined
[22:19] *** Mrofnet left
[22:23] <AlexDaniel_> Zoffix: ‚ô•

[22:23] *** atroxaper joined
[22:25] <Zoffix> timotimo: OK, go for it :) If I were doing it, I'd stuff the remaining requeststs into $dist->{_builder}{something_or_other} (like it does here https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm#L95 ) and I think that key will be available here: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder.pm#L78-L79 where you can

[22:25] <Zoffix> calculate how long to sleep. Prolly starting at zero and then figuring out if you need to dial it up based on the remaining requests and the number of dists still needed to process. That loop processes ALL the dists, so the count will include CPAN dists too. The count of p6c dists only can be saved somewhere from this routine tho:

[22:25] <Zoffix> https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder.pm#L128-L132

[22:29] *** atroxaper left
[22:36] <timotimo> Zoffix: i was literally just going to sleep until the reset time if the remaining requests went below like 5

[22:42] <AlexDaniel_> is it possible to do something like ÔΩ¢say ~Backtrace.newÔΩ£ from nqp?

[22:42] <timotimo> AlexDaniel_: if you don't find a better way, you can use any super obscure op, trig ops usually work well, and just gdb break on that

[22:43] <AlexDaniel_> I want it to keep going

[22:43] <timotimo> that's no problem

[22:43] <timotimo> after you made the breakpoint just do "commands", "call MVM_dump_backtrace(tc)", "c", "end"

[22:44] *** skids joined
[22:45] <Geth> ¬¶ modules.perl6.org: 4cf72ba4bc | (Timo Paulssen)++ | 2 files

[22:45] <Geth> ¬¶ modules.perl6.org: by default only sleep if we hit github's rate limit.

[22:45] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/4cf72ba4bc

[22:45] <timotimo> this should be correct, right?

[22:48] <Xliff_> Still getting the error, with no explanation as to WHY it is occuring.

[22:48] <Xliff_> This time it is: next if $pn.text.lc ~~ /^ 'token' | 'user' | 'user_agent' | 'x-user-agent' $/;

[22:49] <Xliff_> The only other thing I can think of is that $pn comes from Inline::Perl5?

[22:49] <Xliff_> If I replace that "next if" with "say", the error goes away.

[22:49] <timotimo> you'll probably want to have [ ] around the alteration

[22:50] *** silug left
[22:51] <Zoffix> timotimo: looks right. The only thing is all the ->_interval business can probably be removed now entirely. It's just ded code

[22:51] <timotimo> i can do that

[22:52] <Zoffix> timotimo++

[22:53] <timotimo> how do i build a link in my pod so that it ends up as a working inlined image in the markdown?

[22:53] *** troys_ is now known as troys

[22:56] <Xliff_> m: for <a b c d> -> $abc { say $abc; next; say "Not here"; };

[22:56] <camelia> rakudo-moar 92e51c: OUTPUT: ¬´a‚ê§b‚ê§c‚ê§d‚ê§¬ª

[22:56] <Xliff_> For some reason that call to "next" is generating a sink error.

[22:56] <timotimo> TimToady is the expert on sink errors; maybe you can golf it a little and get us a --target=ast of that?

[22:57] <Xliff_> "Useless use of constant value next in sink context (line 30)" -- which is a WARNING, not an error, but still nonsensicle.

[22:57] <Xliff_> sensical

[22:58] *** devmikey left
[22:58] <timotimo> Zoffix: i'll alko throw out the interval bits of the commandline parser, yeah?

[22:58] *** silug joined
[22:58] <Zoffix> Yeah

[22:59] <Geth> ¬¶ modules.perl6.org: b1ff19737a | (Timo Paulssen)++ | 4 files

[22:59] <Geth> ¬¶ modules.perl6.org: throw out all mention of the interval feature.

[22:59] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/b1ff19737a

[23:02] *** hoffentlichja left
[23:06] <timotimo> Zoffix: oh no, something's wrong with the modules site

[23:07] <timotimo> [Fri Oct  6 23:04:24 2017] [info] Removed 770 dists that are no longer in the ecosystem

[23:07] <timotimo> that's not right o_O

[23:07] <Zoffix> whoops :}

[23:08] *** lancew left
[23:09] <Zoffix> Had a Oct 4th db laying around; swapped it to use that for now...

[23:10] <timotimo> phew.

[23:11] <timotimo> that must have been the first commit in this series, right?

[23:14] <Zoffix> Dunno, don't see anything wrong, looking at https://github.com/perl6/modules.perl6.org/compare/6493171...HEAD

[23:16] <timotimo> i removed the last statement in that foor loop

[23:16] <timotimo> but it doesn't have sinking like perl6 does, right?

[23:16] <timotimo> i mean it has something like it

[23:16] <Zoffix> last? I don't see it

[23:16] * Zoffix fires up a local copy

[23:17] <Zoffix> Oh, the loop is just for aliasing stuff to $_

[23:19] <timotimo> it had "dist has new commits" for basically all dists it looks like

[23:19] <timotimo> that's weird? or is that from a "full rebuild"?

[23:19] <Zoffix> That's normal if that's the full rebuild (should say at start of log)

[23:20] <timotimo> it is

[23:20] <Zoffix> I'm getting unhelpful errors. There's a syntax error somewhere

[23:20] <Zoffix> Oh see it

[23:20] <Zoffix> perl6ism :)

[23:20] <timotimo> oh crap

[23:20] <timotimo> what did i do?

[23:20] <Geth> ¬¶ modules.perl6.org: 7c1ef83871 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/Source/GitHub.pm

[23:20] <Geth> ¬¶ modules.perl6.org: Fix perl6ism

[23:20] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/7c1ef83871

[23:21] <timotimo> dangit!

[23:21] <timotimo> i could have thougt of that

[23:21] <Zoffix> :)

[23:21] <timotimo> thought*

[23:21] <timotimo> anyway, i put another dist of mine on pause just now

[23:22] <Zoffix> sweet

[23:22] *** sivoais left
[23:22] <timotimo> so, the old update logs will be thrown away ... i'd like to have known a bit more precisely how much time the new rate limiter saves

[23:22] <buggable> New CPAN upload: SDL2-Raw-0.1.tar.gz by TIMOTIMO https://cpan.metacpan.org/authors/id/T/TI/TIMOTIMO/Perl6/SDL2-Raw-0.1.tar.gz

[23:22] *** sivoais joined
[23:22] <timotimo> there it is, nice.

[23:24] <Geth> ¬¶ modules.perl6.org: 83336e9905 | (Zoffix Znet)++ | use-me-for-commit-triggers

[23:24] <Geth> ¬¶ modules.perl6.org: [REBUILD] trigger rebuild with new limiter

[23:24] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/83336e9905

[23:24] <Zoffix> Ok. just started a new build. Old one took ~1hr20m.

[23:24] <Zoffix> Old old, I mean

[23:24] * Zoffix looks in build log

[23:25] <timotimo> yeah, i see that, too

[23:25] <timotimo> the one that deleted everything :D

[23:25] <Zoffix> 1hr15m.

[23:25] <Zoffix> So that's basically the normal run.

[23:25] <timotimo> how does Pithub react to hitting the rate limit? i think you get a "forbidden" error if you hit it

[23:26] <timotimo> yes, you do.

[23:26] <Zoffix> They'll show up in build log.

[23:26] <Zoffix> The errors. I think it actually says you're too fast or something

[23:26] <timotimo> right, but it'll then skip ahead to the next dist?

[23:26] <Zoffix> Yeah

[23:26] <timotimo> it does

[23:26] <timotimo> well, that sucks :)

[23:26] <timotimo> we should put in some code that detects it (even though we defensively stop before exhausting the request count completely)

[23:27] <timotimo> like, what if another script on the server also uses the github api and consumes some requests in parallel

[23:27] <timotimo> (i'm not sure how exactly they determine who shares which request pool)

[23:27] <Zoffix> There's an API key

[23:27] <timotimo> ah, ok

[23:28] <timotimo> what machine runs the updater? www?

[23:28] <timotimo> it does

[23:29] <Zoffix> Yeah, www/modules.perl6.org

[23:29] <timotimo> where do i go to see the in-progress log? journalctl?

[23:29] <Zoffix> Man, 7:59pm. I'm wasting valuable squashathon time :)

[23:30] <Zoffix> timotimo: there should be a file in /tmp I think

[23:30] * Zoffix &

[23:30] *** Zoffix left
[23:30] <timotimo> oke!

[23:30] *** Mrofnet joined
[23:30] <timotimo> holy crap, there's a lot of stuff in /tmp

[23:30] <timotimo> all of those files belong to modules.perl6.org

[23:31] <timotimo> oh, it's a crapton of empty folder

[23:31] <timotimo> folders*

[23:33] *** BenGoldberg joined
[23:33] *** Morfent left
[23:34] *** margeas left
[23:35] <yoleaux> Zoffix: build log

[23:35] <timotimo> um, yoleaux, zoffix ain't here :P

[23:37] *** atroxaper joined
[23:38] *** mempko left
[23:41] *** atroxaper left
[23:46] *** skids left
[23:58] *** skids joined
