[00:01] *** bwisti joined
[00:09] *** seatek joined
[00:15] *** skids joined
[00:18] *** shmibs joined
[00:22] *** pierre_ joined
[00:27] *** sufrostico joined
[00:29] <Geth> ¦ doc: a24b3fa998 | (Will "Coke" Coleda)++ | doc/Language/functions.pod6

[00:29] <Geth> ¦ doc: clarify phrasing

[00:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a24b3fa998

[00:32] *** lookatme joined
[00:32] <lookatme> morning

[00:40] *** zoll joined
[00:43] <kybr> https://gist.github.com/kybr/3577b4e69493ec7fda1b10101d6b4774 thoughts?

[00:52] *** ChoHag left
[00:52] *** sufrostico left
[00:54] *** sufrostico joined
[01:00] <lookatme> I think it's ok. 

[01:01] <timotimo> i'm not sure what "a small Num" means

[01:02] <timotimo> oooh

[01:02] <timotimo> you were expecting a Rat every time

[01:02] <timotimo> you might have to create all the parts as FatRat to make that work properly

[01:03] <timotimo> rat will turn into num if the denominator overflows a 64bit int or something like that

[01:04] *** gdonald left
[01:06] *** travis-ci joined
[01:06] <travis-ci> Doc build passed. Will "Coke" Coleda 'clarify phrasing'

[01:06] <travis-ci> https://travis-ci.org/perl6/doc/builds/252224839 https://github.com/perl6/doc/compare/29e7f545bb74...a24b3fa998fc

[01:06] *** travis-ci left
[01:07] <timotimo> kybr: does that help?

[01:12] *** eliasr left
[01:12] <lookatme> timotimo, Can you help me? This is a problem about **require** : https://gist.github.com/araraloren/ea1bf8d54e2251042c7f4c45f778fc43

[01:14] <Geth> ¦ doc: db9bfdba9b | (Will "Coke" Coleda)++ | htmlify.p6

[01:14] <Geth> ¦ doc: remove commented out code

[01:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/db9bfdba9b

[01:17] *** gdonald joined
[01:22] <timotimo> m: say (require ::("foobar")).perl

[01:22] <camelia> rakudo-moar 83e157: OUTPUT: «Could not find foobar at line 0 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Repository::Absolut…»

[01:22] <timotimo> ah

[01:22] <timotimo> i expect we're not generating a call to .sink for require statements

[01:22] <timotimo> that's why a failure is created, but just disappears into the ether

[01:23] <kybr> timotimo: yes. thanks. i'll try using FatRat internal to the sub

[01:25] <timotimo> kybr: FatRat is "infectious", so you probably only need to turn one of the things into a FatRat. just gotta be the right one :)

[01:25] <timotimo> ideally the first one that'll be executed, precedence-wise

[01:26] <lookatme> timotimo, But if no require, the line 11 ` @plugins.push(::($plugin.^name)::Compiler.new);` would be failed

[01:27] <timotimo> m: require ::("omgwhat"); say ::("omgwhat").perl

[01:27] <camelia> rakudo-moar 83e157: OUTPUT: «Could not find omgwhat at line 0 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Repository::Absolu…»

[01:27] <timotimo> oh, huh. so where'd the failure come from ...

[01:28] <lookatme> https://github.com/araraloren/perl6-app-snippet/blob/master/lib/App/snippet/C.pm6#L5

[01:29] <lookatme> This is the class/module I want import 

[01:29] <timotimo> i always get tripped up about how exactly you get something into your code with require only

[01:30] <lookatme> rakudo report it can not find App::snippet::C::Compiler if missing require 

[01:33] <timotimo> yeah

[01:33] <timotimo> let me clone all of this

[01:36] <timotimo> actually i'm far past my bedtime >_<

[01:36] *** kerframil left
[01:40] <timotimo> huh, could it be that the plugins call actually returns the things loaded?

[01:40] <lookatme> I think no way

[01:41] <lookatme> wait me try

[01:43] <timotimo> it totally is! \o/

[01:43] *** mst left
[01:44] *** mst joined
[01:45] <timotimo> you may have to do something ugly like $plugin.WHO<Compiler>.new

[01:45] <lookatme> timotimo, it can not get inner name of module

[01:45] <timotimo> and printing the .perl of that says it's a App::snippet::C::App::snippet::C::Compiler.new

[01:45] <lookatme> oh

[01:46] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:48] *** ChanServ sets mode: +v ilbot3

[01:48] <timotimo> good night!

[01:48] <lookatme> timotimo, seems like ok now, thanks

[01:48] <lookatme> good night

[01:48] <timotimo> YW

[01:49] *** espadrine left
[01:52] *** konsolebox left
[01:56] *** troys is now known as troys_

[01:57] *** llfourn left
[01:57] *** hobo_ joined
[02:02] *** llfourn joined
[02:09] *** noganex joined
[02:11] *** hobo_ left
[02:12] *** noganex_ left
[02:31] *** skids left
[02:32] <lookatme> Maybe there is a problem with require. Or there are something else I didn't know

[02:38] *** Cabanossi left
[02:38] *** mcmillhj joined
[02:39] *** sufrostico left
[02:39] *** Cabanossi joined
[02:43] *** mcmillhj left
[02:43] <kybr> is anyone using this: https://github.com/samgwise/Net-OSC

[03:09] *** vendethiel joined
[03:10] *** ptolemarch left
[03:12] *** astj joined
[03:32] *** zoll left
[03:34] <Geth> ¦ doc: 1df9aecb6b | (Samantha McVey)++ | doc/Type/Hash.pod6

[03:34] <Geth> ¦ doc: Minor grammar change to Hash section

[03:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1df9aecb6b

[03:34] <Geth> ¦ doc: 35800ae146 | (Samantha McVey)++ | doc/Language/unicode_entry.pod6

[03:34] <Geth> ¦ doc: Little update to ibus-daemon suggestion

[03:34] <Geth> ¦ doc: 

[03:34] <Geth> ¦ doc: This change works a little better and the --desktop option can have

[03:34] <Geth> ¦ doc: odd side effects.

[03:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/35800ae146

[03:39] *** pilne left
[03:42] *** stmuk_ joined
[03:44] *** stmuk left
[03:47] *** nadim joined
[03:51] *** astj left
[03:51] *** astj joined
[03:52] *** Cabanossi left
[03:52] *** astj left
[03:52] *** astj joined
[03:53] *** Cabanossi joined
[03:53] *** Json joined
[03:53] *** Json left
[03:57] *** evanm joined
[04:02] <evanm> Hi, I'm trying to figure out a strange error message when I have a sub-signature

[04:03] <evanm> seems to have been brought up before here: https://rt.perl.org/Public/Bug/Display.html?id=123116

[04:03] <evanm> but I still see it with the latest rakudo

[04:03] <evanm> p6: sub foo(&block (Int --> Bool)) { say "thanks" }; foo(sub (Int $x) { Bool($x) })

[04:04] <camelia> rakudo-moar 83e157: OUTPUT: «Too few positionals passed to 'foo'; expected 1 argument but got 0 in sub-signature of parameter &block␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[04:04] *** llfourn left
[04:04] *** llfourn joined
[04:06] <evanm> The "Too few positionals passed" error message doesn't make any sense. Similar NativeCall functions work fine.

[04:12] <ugexe> m: sub foo(&block:(Int)) { block(1) }; foo(sub (Int $x) { say "thank you" })

[04:12] <camelia> rakudo-moar 83e157: OUTPUT: «thank you␤»

[04:12] <ugexe> m: sub foo(&block:(Int --> Bool)) { block(1) }; foo(sub (Int $x --> Bool) { say "thank you" })

[04:12] <camelia> rakudo-moar 83e157: OUTPUT: «thank you␤»

[04:12] <ugexe> m: sub foo(&block:(Int --> Bool)) { block(1) }; foo(sub (Int $x) { say "thank you" })

[04:13] <camelia> rakudo-moar 83e157: OUTPUT: «Constraint type check failed in binding to parameter '&block'; expected anonymous constraint to be met but got Sub (sub (Int $x) { #`(Sub...)␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[04:14] *** bwisti left
[04:14] <geekosaur> that last is kinda a lousy error

[04:14] <geekosaur> message

[04:16] *** vendethiel left
[04:19] *** astj left
[04:20] *** astj joined
[04:20] <evanm> So I take it that this works if a colon is placed after &block

[04:24] *** astj left
[04:24] *** travis-ci joined
[04:24] <travis-ci> Doc build errored. Samantha McVey 'Little update to ibus-daemon suggestion

[04:24] <travis-ci> https://travis-ci.org/perl6/doc/builds/252253789 https://github.com/perl6/doc/compare/db9bfdba9ba8...35800ae14690

[04:24] *** travis-ci left
[04:24] <buggable> [travis build above] ✓ All failures are due to timeout (1), missing build log (0), GitHub connectivity (0), or failed make test (0).

[04:25] *** mcmillhj joined
[04:29] *** mcmillhj left
[04:30] *** AlexDaniel left
[04:31] *** khw left
[04:36] *** evanm left
[04:43] *** pierre_ left
[04:51] *** Cabanossi left
[04:52] *** troys_ is now known as troys

[04:53] *** Cabanossi joined
[04:55] *** Cabanossi left
[04:56] *** Cabanossi joined
[04:57] *** mcmillhj joined
[05:01] *** mcmillhj left
[05:04] <Geth> ¦ doc: 9a9465fe0d | (Samantha McVey)++ | doc/Type/List.pod6

[05:04] <Geth> ¦ doc: Use routine roundrobin instead of sub roundrobin

[05:04] <Geth> ¦ doc: 

[05:04] <Geth> ¦ doc: sub roundrobin doesn't match what we use anywhere else in the docs

[05:04] <Geth> ¦ doc: or on the same page as well.

[05:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9a9465fe0d

[05:18] *** pierre_ joined
[05:21] <Geth> ¦ doc: 0b005062fb | (Samantha McVey)++ | 19 files

[05:21] <Geth> ¦ doc: Replace occurances of =head2 sub with routine for consistency

[05:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0b005062fb

[05:22] *** troys left
[05:23] *** xtreak joined
[05:32] <Geth> ¦ doc: 1274f18751 | (Samantha McVey)++ | .travis.yml

[05:32] <Geth> ¦ doc: Don't highlight Travis CI build to speed up build times

[05:32] <Geth> ¦ doc: 

[05:32] <Geth> ¦ doc: Hopefully this will prevent the build from timing out and going

[05:32] <Geth> ¦ doc: over the Travis max numbers of minutes.

[05:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1274f18751

[05:37] *** Cabanossi left
[05:38] *** Cabanossi joined
[05:54] *** travis-ci joined
[05:54] <travis-ci> Doc build errored. Samantha McVey 'Use routine roundrobin instead of sub roundrobin

[05:54] <travis-ci> https://travis-ci.org/perl6/doc/builds/252268288 https://github.com/perl6/doc/compare/35800ae14690...9a9465fe0d41

[05:54] *** travis-ci left
[05:55] <buggable> [travis build above] ✓ All failures are due to timeout (1), missing build log (0), GitHub connectivity (0), or failed make test (0).

[05:55] *** andrzejku joined
[05:57] *** wamba joined
[06:01] *** travis-ci joined
[06:01] <travis-ci> Doc build failed. Samantha McVey 'Replace occurances of =head2 sub with routine for consistency'

[06:01] <travis-ci> https://travis-ci.org/perl6/doc/builds/252270996 https://github.com/perl6/doc/compare/9a9465fe0d41...0b005062fb63

[06:01] *** travis-ci left
[06:01] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[06:04] *** BenGoldberg left
[06:07] *** travis-ci joined
[06:07] <travis-ci> Doc build failed. Samantha McVey 'Don't highlight Travis CI build to speed up build times

[06:07] <travis-ci> https://travis-ci.org/perl6/doc/builds/252272568 https://github.com/perl6/doc/compare/0b005062fb63...1274f18751bb

[06:07] *** travis-ci left
[06:07] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[06:11] *** rindolf joined
[06:13] *** ChoHag joined
[06:14] *** |oLa| left
[06:15] *** |oLa| joined
[06:19] *** lowbro joined
[06:19] *** lowbro left
[06:19] *** lowbro joined
[06:21] *** Cabanossi left
[06:23] *** Cabanossi joined
[06:24] *** _28_ria joined
[06:31] <samcv> well i think it's *actually* failing but i have no clue why

[06:31] <samcv> now that i set it to just to bigpage

[06:33] *** xerx joined
[06:34] *** |oLa| left
[06:44] *** mcmillhj joined
[06:49] *** mcmillhj left
[06:55] *** mcmillhj joined
[06:56] *** |oLa| joined
[06:56] *** leont joined
[06:58] *** aborazmeh joined
[06:58] *** aborazmeh left
[06:58] *** aborazmeh joined
[07:00] *** mcmillhj left
[07:00] *** lowbro left
[07:02] *** lowbro joined
[07:02] *** lowbro left
[07:02] *** lowbro joined
[07:06] *** mcmillhj joined
[07:10] *** mcmillhj left
[07:16] *** mcmillhj joined
[07:20] *** astj joined
[07:21] *** domidumont joined
[07:21] *** domidumont left
[07:21] *** |oLa| left
[07:21] *** mcmillhj left
[07:21] *** |oLa| joined
[07:22] *** domidumont joined
[07:24] *** astj left
[07:24] *** |oLa| left
[07:25] *** dakkar joined
[07:27] *** mcmillhj joined
[07:31] *** mcmillhj left
[07:34] *** abraxxa joined
[07:35] *** parv joined
[07:36] *** zakharyas joined
[07:36] *** leont left
[07:37] *** labster left
[07:38] *** mcmillhj joined
[07:40] * lizmat clickbaits https://p6weekly.wordpress.com/2017/07/10/2017-28-rakudo-is-hot/

[07:42] *** domidumont left
[07:42] *** labster joined
[07:42] *** mcmillhj left
[07:42] *** domidumont joined
[07:48] *** mcmillhj joined
[07:53] *** mcmillhj left
[07:57] * parv wonders (bit haugty) why do people need to make their life diffcult (http://www.nntp.perl.org/group/perl.perl6.users/2017/07/msg3988.html)?

[07:59] *** mcmillhj joined
[08:00] * lizmat wonders about that a lot

[08:01] *** wamba left
[08:04] *** jonas1 joined
[08:05] *** mcmillhj left
[08:07] *** Hor|zon left
[08:09] *** cosimo joined
[08:17] *** domidumont left
[08:18] *** zakharyas left
[08:22] *** domidumont joined
[08:22] *** mcmillhj joined
[08:27] *** mcmillhj left
[08:33] *** mcmillhj joined
[08:34] *** xerx left
[08:37] *** mcmillhj left
[08:41] *** g3 left
[08:50] *** rindolf left
[08:54] *** wamba joined
[08:57] *** robertle joined
[09:00] *** rindolf joined
[09:03] *** xtreak left
[09:04] *** xtreak joined
[09:07] *** cosimo left
[09:08] *** xtreak left
[09:09] *** cosimo joined
[09:13] *** cyphase left
[09:15] *** eliasr joined
[09:18] *** xtreak joined
[09:20] *** parv left
[09:26] *** ChoHag left
[09:27] *** mxco86 joined
[09:36] *** gurmble is now known as grumble

[09:40] *** cosimo left
[09:42] *** cosimo joined
[09:42] *** TEttinger left
[09:45] *** aborazmeh left
[09:57] *** konsolebox joined
[10:03] *** astj joined
[10:07] *** astj left
[10:10] *** _28_ria left
[10:11] *** lowbro left
[10:12] *** _28_ria joined
[10:12] *** lowbro joined
[10:12] *** lowbro left
[10:12] *** lowbro joined
[10:22] *** zakharyas joined
[10:32] *** xtreak left
[10:55] *** n_work joined
[10:59] *** Fong left
[11:13] *** pierre_ left
[11:22] *** Cabanossi left
[11:23] *** Cabanossi joined
[11:28] *** cosimo left
[11:32] *** astj joined
[11:32] *** xtreak joined
[11:34] *** araraloren joined
[11:36] *** xtreak left
[11:36] *** xtreak joined
[11:37] *** astj left
[11:37] <araraloren> evening

[11:39] <lizmat> araraloren  o/

[11:40] *** seatek left
[12:02] *** domidumont1 joined
[12:03] *** wamba left
[12:04] *** domidumont left
[12:06] *** Cabanossi left
[12:06] *** wamba joined
[12:08] *** Cabanossi joined
[12:11] *** domidumont1 left
[12:17] *** domidumont joined
[12:27] *** mxco86 left
[12:40] *** xtreak left
[12:48] *** cosimo joined
[12:52] *** awwaiid left
[12:53] *** awwaiid joined
[12:55] *** pmurias joined
[12:56] *** mcmillhj joined
[12:58] *** n_work left
[13:02] *** domidumont1 joined
[13:02] *** cosimo left
[13:03] *** cosimo joined
[13:04] *** domidumont left
[13:06] *** pierre__ joined
[13:15] <pmurias> what would be a good way to parse a signature in string form? 

[13:16] <pmurias> I want to parse something like 'Backtrace::Frame:D: --> Int' into something I can work on

[13:21] *** Cabanossi left
[13:22] <robertle> 444444

[13:22] <robertle> sorry

[13:23] *** Cabanossi joined
[13:29] <lizmat> pmurias: in Perl 6 code?

[13:29] <lizmat> perhaps split on ('::',':','-->',' ')  ??

[13:30] <lizmat> multi-fixed string split is pretty fast

[13:30] *** robertle left
[13:31] <moritz> $x where { $x ~~ / '::' .+ 'x' / }

[13:31] <pmurias> lizmat: I can use NQP or nqp:: level ops if it's the best way

[13:31] *** araraloren left
[13:31] <moritz> valid signature too

[13:31] <lizmat> pmurias: then you're outta luck on the multi-fixed string split

[13:31] *** araraloren joined
[13:35] *** kurahaupo joined
[13:36] *** donaldh joined
[13:37] *** skids joined
[13:38] <pmurias> I'm mostly concerned with parsing the signatures that we have in our core docs

[13:38] *** domidumont1 left
[13:38] <araraloren> parsing signature string ?

[13:40] <pmurias> araraloren: in the docs we have 'Defined as method line(Backtrace::Frame:D: --> Int)'

[13:40] <pmurias> araraloren: I want to make the stuff in the signature clickable

[13:41] *** andrzejku left
[13:41] <pmurias> so that you can click on the subparts of signatures in my doc viewer: https://6docs.github.io/awesome-p6docs/type/Backtrace::Frame

[13:41] <araraloren> oh, great idea

[13:42] <pmurias> argh, broken link

[13:45] <araraloren> maybe you can stole something from rakudo/nqp source code

[13:45] <araraloren> or create your own grammar 

[13:49] *** wamba left
[13:49] *** od1 joined
[13:49] <od1> hello people

[13:50] <araraloren> hi od1 

[13:50] *** _ramix_ joined
[13:51] *** domidumont joined
[13:52] *** jonas1 left
[13:53] *** _ramix_ left
[13:54] *** cdg joined
[13:58] <pmurias> araraloren: I played around with stealing parts of Rakudo's grammar but some stuff like default values require the whole thing

[13:58] <pmurias> araraloren: I think I should either use the full one or fix up Perl6::Parser

[14:00] <araraloren> hmm

[14:01] *** zakharyas left
[14:01] *** zakharyas joined
[14:05] *** domidumont left
[14:06] *** zakharyas left
[14:09] *** domidumont joined
[14:12] *** araraloren_ joined
[14:14] *** AlexDaniel joined
[14:15] *** araraloren left
[14:16] *** astj joined
[14:16] *** rindolf left
[14:17] *** rindolf joined
[14:21] *** Cabanossi left
[14:21] *** astj left
[14:23] *** Cabanossi joined
[14:24] *** ChoHag joined
[14:26] *** khw joined
[14:32] *** colomon left
[14:34] <pmurias> fixed link to my (early WIP) doc viewer: https://6docs.github.io/type/Backtrace::Frame

[14:35] <pmurias> one that actually works: https://6docs.github.io

[14:35] *** greppable6 left
[14:36] *** Ven`` joined
[14:37] <Ven``> .u [^-']

[14:37] <yoleaux> U+0027 APOSTROPHE [Po] (')

[14:37] <yoleaux> U+002D HYPHEN-MINUS [Pd] (-)

[14:37] <yoleaux> U+005B LEFT SQUARE BRACKET [Ps] ([)

[14:37] *** greppable6 joined
[14:37] *** ChanServ sets mode: +v greppable6

[14:37] *** greppable6 left
[14:40] *** lowbro left
[14:43] *** zakharyas joined
[14:44] *** domidumont left
[14:47] *** bwisti joined
[14:47] *** cosimo left
[14:47] *** cosimo joined
[14:54] *** cosimo left
[14:54] <ambs> either I do not know how to fake a from e-mail address, or ezml is too intelligent.

[15:01] *** domidumont joined
[15:05] *** wamba joined
[15:12] *** donaldh left
[15:13] *** wamba left
[15:21] *** Ven`` left
[15:30] <timotimo> 163011   pmurias │ fixed link to my (early WIP) doc viewer: https://6docs.github.io/type/Backtrace::Frame

[15:31] <timotimo> oops

[15:31] <timotimo> that 404s :(

[15:32] *** domidumont left
[15:35] *** cosimo joined
[15:37] *** raschipi joined
[15:39] <ugexe> for allowing commit-ids, tags, etc in git urls does it make sense to use # instead of @ as the uri / commit-id separator? e.g. `https://github.com/ugexe/zef.git#v0.1.15` instead of `https://github.com/ugexe/zef.git@v0.1.15`? I believe the later is not a valid uri

[15:40] <raschipi> It's a valid url, but everything before the @ is a username

[15:41] <raschipi> https://user:password@domain.name/path

[15:42] <ugexe> can you have a user with no password / colon separator in a valid uri?

[15:42] *** zakharyas left
[15:43] *** zakharyas joined
[15:43] <perlpilot> https://tools.ietf.org/html/std66#section-3.3

[15:43] <raschipi> Yes, if the [:password] part is missing it's considered a user without password. Colon separator would be invalid in most servers but it's not forbidden in the URI.

[15:44] <perlpilot> Read the last paragraph of section 3.3   :-)

[15:45] <ugexe> oh i've read it a few times... I have a URI grammar in both Grammar::HTTP and Zef::Utils::URI. i just know i never thought about those cases enough to test

[15:45] <perlpilot> and "@" is explicitly listed as one of the valid chars in a path segment.

[15:47] <ugexe> i wonder where my grammar was getting caught up then

[15:48] <raschipi> I see, the "authority segment" has to end at the first slash, that's what I was missing.

[15:53] *** abraxxa left
[15:54] <ugexe> ah so @ can go in the path, but there doesn't appear to be any rules for handling it as anything other than a regular charater in the path

[16:03] <nicq20> When messing with slangs and the grammar, what does an action need to return for statement_control?

[16:03] <timotimo> you usually don't return things from action methods

[16:04] <timotimo> i expect you mean "make" instead of "return"?

[16:04] <nicq20> Oops, yes.

[16:04] <timotimo> i guess you'll make some sort of qast node (or rather tree)

[16:04] <nicq20> New to slangs and stuff sorry.

[16:05] <nicq20> Something along the lines of a QAST::Op?

[16:05] <timotimo> i'd have to look through Perl6/Actions.nqp

[16:06] <nicq20> Ok. I'm looking at this for reference: https://github.com/tony-o/perl6-slang-sql/blob/master/lib/Slang/SQL.pm6

[16:08] *** cosimo left
[16:09] <araraloren_> That codes already outdate

[16:09] <nicq20> That could be why I'm having trouble. (Possibly)

[16:10] <araraloren_> You can refer some other slang module

[16:10] *** zakharyas left
[16:11] <araraloren_> night

[16:11] *** araraloren_ left
[16:11] <nicq20> See ya.

[16:11] <ugexe> how is it outdated?

[16:12] <ugexe> last I knew it worked

[16:13] *** zakharyas joined
[16:13] *** wamba joined
[16:13] <ugexe> tony-o: ^

[16:22] *** pierre__ left
[16:24] <nicq20> Anyone happen to know what this error means: `New type for Perl6::Grammar must have a matching representation (P6opaque vs Uninstantiable)`

[16:29] <nicq20> Huh, I can't even find this error in rakudo or nqp.

[16:35] <timotimo> it's inside moarvm

[16:35] <timotimo> you're trying to rebless something?

[16:37] <timotimo> maybe you're passing something incompatible to the augment_slang (or whatever) method?

[16:44] *** titsuki joined
[16:46] *** titsuki_ left
[16:47] *** zakharyas left
[16:51] <TimToady> yes, that slang code is outdated; nobody should be setting %*LANG any more except for compat with old versions

[16:52] <tony-o> that's the only part of the slang that is outdated, i haven't looked up the new way to integrate the slang yet

[16:52] <yoleaux> 10 Jun 2017 20:20Z <eveo> tony-o: tony-o/perl6-http-server-threaded and perl6/perl6-http-server-async appear to be the same module. Should one of them be removed from the ecosystem?

[16:53] <tony-o> eveo: they're different modules.

[16:53] <TimToady> nowadays you should just be able to say $*LANG.refine_slang('MAIN', SQL::Grammar, SQL::Actions) or so

[16:53] <TimToady> for define_slang, you'd have to do your own mixins, but refine_slang will do the mixins for you

[16:55] <TimToady> one can put both ways into their own try, so it works with both old and new rakudos

[16:56] <TimToady> or however you say that grammatical-like

[16:56] <tony-o> m: %*LANG.^methods.say;

[16:56] <camelia> rakudo-moar 2eeb00: OUTPUT: «(DESTROY AT-POS AT-KEY defined handled Int Num Numeric Set SetHash Bag BagHash Mix MixHash mess sink self CALL-ME FALLBACK STORE new Bool Str gist perl exception backtrace AT-POS AT-KEY BIND-KEY ASSIGN-KEY STORE iterator sink unshift chrs gist BIND-POS N…»

[16:56] <tony-o> hmm.. i wonder if my moar is broken

[16:57] *** nicq20-mobile joined
[16:57] <TimToady> %*LANG is still there, but mainly only to catch old usages and warn

[16:57] <TimToady> eventually it will go away

[16:57] <tony-o> oh oops

[16:57] <tony-o> i'm on nom - maybe i'm broken

[16:57] <TimToady> refine_slang is more recent than define_slang, so you might not have ityet

[16:58] <tony-o> it finds the method for me, just complains about MRO

[16:58] <tony-o> Incompatible MROs in P6opaque rebless for types

[16:58] <tony-o> guess i should work on updating this sooner rather than later

[16:59] <timotimo> might have to make your grammar and actions roles instead of classes?

[17:00] <tony-o> they're both roles

[17:02] *** Zoffix joined
[17:02] *** cdg left
[17:02] <Zoffix> tony-o: what's the actual code you're using?

[17:02] <Zoffix> buggable: eco bioperl

[17:03] <buggable> Zoffix, BioPerl6 'Collection of Bioinformatics classes, roles, and modules': https://github.com/cjfields/bioperl6

[17:03] *** cdg joined
[17:03] <Zoffix> umm.. nope not it

[17:03] <tony-o> https://gist.github.com/tony-o/a7958c3848233f61d1813db6bbb7e071#file-gistfile1-txt-L74

[17:04] <Zoffix> tony-o: you're giving it your own grammar instead of having it mixed into main lang. Here: https://github.com/MattOates/BioInfo/blob/master/lib/BioInfo.pm6#L37-L39

[17:04] <tony-o> with define_slang it get the error that ::Grammar needs to be uninstantiable or P6Opaque so that may be a clue

[17:05] <tony-o> ah

[17:05] <Zoffix> tony-o: oh wait

[17:05] <Zoffix> tony-o: see you're using .refine_slang instead of define slang. I've not heard that one yet

[17:05] *** dakkar left
[17:06] <TimToady> I added it at tpc::na :)

[17:06] <Zoffix> Ah

[17:06] <TimToady> it's not heavily tested yet...

[17:07] <Zoffix> m: BEGIN $?LANG.refine_slang('MAIN', role { token apostrophe { <[ - ' \\ ]> } }); my $foo\bar = 42; say $foo\bar;

[17:07] <camelia> rakudo-moar 2eeb00: OUTPUT: «42␤»

[17:07] *** epony left
[17:07] <Zoffix> m: BEGIN $?LANG.refine_slang('MAIN', role { token apostrophe { <[ - ' \\ ]> } }, class {}); my $foo\bar = 42; say $foo\bar;

[17:07] <camelia> rakudo-moar 2eeb00: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤An exception occurred while evaluating a BEGIN␤at <tmp>:1␤Exception details:␤  5===SORRY!5=== Error while compiling ␤  Cannot find method 'specialize' on object of type Perl6::Metamodel::ClassH…»

[17:08] *** nicq20_mobile joined
[17:08] *** nicq20_mobile left
[17:08] *** nicq20-mobile left
[17:08] *** nicq20-mobile joined
[17:09] <TimToady> those have to be roles, yes

[17:09] <Zoffix> Ah

[17:09] <Zoffix> m: BEGIN $?LANG.refine_slang('MAIN', role { token apostrophe { <[ - ' \\ ]> } }, role {}); my $foo\bar = 42; say $foo\bar;

[17:09] <camelia> rakudo-moar 2eeb00: OUTPUT: «===SORRY!===␤Incompatible MROs in P6opaque rebless for types Perl6::Grammar and Perl6::Actions+{<anon|56403104>}␤»

[17:10] <TimToady> hmm

[17:10] <Zoffix> Ah, I see the bug

[17:10] <Zoffix> It's trying to mix it into MAIN instead of MAIN-actions

[17:10] <TimToady> ah, that'd do it :)

[17:10] <Zoffix> I mean bind to

[17:10] * Zoffix hackety hacks

[17:10] * TimToady has not used it with actions yet

[17:10] <TimToady> obviously...

[17:11] <TimToady> tony-o: anyway, define_slang with your own mixin should work fine till that bubbles through

[17:11] <tony-o> thanks TimToady and Zoffix - fixes to bring the slang up to date have been pushed

[17:11] <TimToady> you'll want to mix in with what you pull out via $*LANG.grammar and $*.actions, iirc

[17:12] <TimToady> er, $*LANG.grammar('MAIN') and $*LANG.actions.slang('MAIN') I should say

[17:12] <TimToady> in lieu of reading from %*LANG

[17:12] <tony-o> nicq20: Slang::SQL should be up to date now

[17:13] <TimToady> all that boilerplate is why we have refine_slang now :)

[17:13] <tony-o> TimToady: ++

[17:13] <nicq20-mobile> Woo! Thanks

[17:13] <TimToady> even if it doesn't quite work yet...

[17:13] *** |oLa| joined
[17:13] <tony-o> haha :-)

[17:14] *** epony joined
[17:15] *** cyphase joined
[17:15] <nicq20-mobile> Are there any docs about the kind of stuff? 

[17:15] <nicq20-mobile> *this

[17:15] <TimToady> not very; this is all the internals that we'll eventual build slang syntax with

[17:16] <TimToady> *ly

[17:16] <tony-o> next 'to-do' on that module is interpolating variables

[17:16] *** cosimo joined
[17:20] <nicq20-mobile> Ah, ok. Any chance there's something in QAST?

[17:20] <nicq20-mobile> *on

[17:20] *** bpmedley left
[17:20] <nicq20-mobile> Gee whiz this keyboard. 

[17:21] <Zoffix> nicq20-mobile: https://github.com/perl6/nqp/blob/master/docs/qast.markdown

[17:21] <Zoffix> Not this is unofficial-we-can-change-it-any-time-we-want-without-warning-use-at-your-own-risk type of stuff

[17:22] <nicq20-mobile> Well, it's better than my current knowledge.  :)

[17:22] <Zoffix> Also...

[17:23] <Zoffix> huggable: nqp course

[17:23] <huggable> Zoffix, nothing found

[17:23] <Zoffix> huggable: internals course

[17:23] <huggable> Zoffix, nothing found

[17:23] <Zoffix> you suck

[17:23] <nicq20-mobile> This is how the robot uprising starts... 

[17:24] <Zoffix> huggable: internals course :is: Rakudo/NQP Internals Course: https://github.com/edumentab/rakudo-and-nqp-internals-course#rakudo-and-nqp-internals-workshop

[17:24] <huggable> Zoffix, Added internals course as Rakudo/NQP Internals Course: https://github.com/edumentab/rakudo-and-nqp-internals-course#rakudo-and-nqp-internals-workshop

[17:24] <Zoffix> Slightly outdated in places but gives you a general idea

[17:24] <Zoffix> Compiler I built during the course: https://github.com/perl7/perl7/

[17:27] <nicq20-mobile> Oh, cool! That will help a lot. 

[17:30] *** cyphase left
[17:32] *** nicq20_mobile joined
[17:33] *** espadrine joined
[17:35] *** nicq20-mobile left
[17:36] *** cyphase joined
[17:39] *** cosimo left
[17:48] *** nicq20_mobile left
[17:51] <Zoffix> m: BEGIN $?LANG.refine_slang("MAIN", role { token apostrophe { <[ - ' \\ ]> } }, role {}); my $foo\bar = 42; say $foo\bar;

[17:51] <camelia> rakudo-moar fe1a06: OUTPUT: «42␤»

[17:51] *** pilne joined
[17:51] <Zoffix> tony-o: ^ there. Fixed forever.

[17:52] * Zoffix flies away into the sunset

[17:52] *** Zoffix left
[18:09] *** andrzejku joined
[18:20] <tony-o> lmao

[18:22] *** sherwool joined
[18:28] *** ChoHag left
[18:34] *** nemo joined
[18:34] <nemo> So. I was reading https://docs.perl6.org/language/unicode_entry

[18:34] *** cdg left
[18:34] <nemo> "You may have issues using the compose key in all programs. the xim input method requires no extra installation, but it will not work with high codepoint values, such as emoji. "  ←  that's false 

[18:34] <nemo> you can absolutely put emoji into .XCompose - hell that's one of my main uses for it

[18:34] *** cdg joined
[18:35] <nemo> http://m8y.org/tmp/XCompose.txt  ←  a simple example

[18:35] <nemo> https://github.com/kragen/xcompose/blob/master/dotXCompose  has no emoji, but you could easily extend it if for some reason you wanted to inflict those on your perl6

[18:38] <timotimo> but xim isn't xcompose?

[18:38] <nemo> timotimo: yesitis

[18:39] <geekosaur> xcompose is the configuration file for xim

[18:39] <timotimo> interesting

[18:39] <nemo> so yeah. no idea who wrote that but is wildly off

[18:39] <nemo> XCompose forever!!@!

[18:40] <geekosaur> someone was testing in gtk, I bet

[18:40] <nemo> is my fav 'cause it works everywhere and has a relatively easy config file 😃

[18:40] <nemo> geekosaur: that seems plausible

[18:40] <nemo> that is. ignoring the xim part

[18:40] <geekosaur> gtk apps have a cut-down xim implementation

[18:40] <nemo> geekosaur: yep. that's why the section above has the override instructions

[18:40] <nemo> geekosaur: gtk has this harcoded useless thing

[18:40] <geekosaur> yep

[18:40] <nemo> geekosaur: it isn't xim at all really

[18:40] <geekosaur> but I suspect not everything honors the override

[18:41] <nemo> geekosaur: ummm

[18:41] <nemo> geekosaur: everything gtk does

[18:41] <nemo> for qt apps not using a bridge would need the qt override

[18:41] <nemo> but it is similar

[18:41] <nemo> geekosaur: native X apps would not need the override

[18:41] <nemo> geekosaur: you're going to have the exact same problem w/ uim tho

[18:41] <nemo> anyway regardless that sentence is simply wrong

[18:41] *** setty1 joined
[18:43] <geekosaur> sadly, not *everything* gtk. I have certainly seen gtk programs that override (literally overwrite) your env config

[18:43] *** FROGGS joined
[18:43] <geekosaur> because gtk3/gnome devs know better than us little people

[18:44] <nemo> geekosaur: huh. which program? so I may blacklist it?

[18:44] *** zakharyas joined
[18:45] <nemo> I already have a long blacklist that amounts to "everything written by Lennart Poettering"

[18:45] <nemo> (well, on the gentoo machines - on ubuntu the fix will be devuan once EOL is reached on LTS)

[18:46] <mst> nemo++

[18:49] <nemo> mst: https://m8y.org/tmp/package_mask.txt  I don't take credit for it.  and tbh systemd bothers me way more than pulseaudio which is of more limited scope

[18:49] <nemo> anyway. OT

[18:55] <raschipi> Debian works fine without systemd. Devuan only use is to show people that dislike systemd have no idea what they're doing.

[18:56] <nemo> raschipi: I have no interest in maintaining a distro myself. devuan is a convenience

[18:56] <hahainternet> is Devuan even alive?

[18:56] <hahainternet> every time i've seen it linked there's virtually no activity

[18:57] <nemo> https://git.devuan.org/groups/devuan-packages/activity

[18:57] <hahainternet> nemo: that's what i mean, that's very dead

[18:58] <nemo> oh? seems active enough to me. there's not that much that needs to be done to change debian

[18:58] <nemo> as raschipi noted

[18:58] <nemo> hahainternet: just blacklisting and shims

[18:58] <nemo> same reason gentoo works fine without it

[18:59] <raschipi> "there's not that much". They are two years late in their releases and the most recent debian release was very big. reaally big.

[18:59] <hahainternet> nemo: i can't say whether or not devuan works fine, but i don't see any evidence of actual use in any volume

[18:59] <hahainternet> for example, there are many many open issues, many without comments, many from months ago

[18:59] <nemo> plausible. but then. debian is already smaller than ubuntu so doesn't surprise me devuan would be even smaller

[18:59] <raschipi> They won't be able to complete the GCC 7 migration at all.

[19:00] <raschipi> Ubuntu is smaller than debian

[19:00] <nemo> in terms of user base?

[19:00] <nemo> that seems a little unlikely

[19:01] <hahainternet> i think he means packages

[19:01] <hahainternet> and i'm not sure, it's likely to be quite even

[19:01] <nemo> hahainternet: packages not surprising since it is a derivative. all debian-based will be smaller

[19:01] <nemo> and devuan is indeed quite tiny by that measure

[19:02] <hahainternet> anyhow, there's (imo) very few non anti-poettering reasons for abandoning systemd

[19:02] <hahainternet> and i have been a linux admin for more than half my life now :(

[19:02] <hahainternet> afaik devuan have put absolutely zero compelling arguments forward

[19:03] <nemo> http://without-systemd.org/wiki/index.php/Arguments_against_systemd

[19:03] <raschipi> I mean in relation to development effort

[19:03] <hahainternet> nemo: this is just a link of links, few of which have any value

[19:03] * nemo shrugs

[19:03] <nemo> hahainternet: I anticipated that. but at least you can't say nothing was presented

[19:04] <nemo> my very very fav rant, the more fundamental one, was http://wizardofbits.tumblr.com/post/45232318557/systemd-more-like-shit-stemd  plus was entertaining

[19:04] <nemo> setting aside the stupid bugs and responses

[19:04] <nemo> but again this is soooo OT

[19:05] <nemo> I just came by to try and get that perl6 unicode page corrected ☺

[19:05] <hahainternet> ☺

[19:05] <hahainternet> but this page is nonsense, it insists you should keep old init, because it 'monitors' processes, but it doesn't

[19:05] <hahainternet> so the whole page is dead

[19:05] <nemo> http://m8y.org/tmp/unicodesilliness.txt

[19:05] <hahainternet> oh interesting, i use those graph characters to draw graphs

[19:05] <hahainternet> on a different channel

[19:05] <nemo> hahainternet: I'd say the heart of that page is... "YOU LOSE. YOU LOST WHEN YOU DECIDED THAT PID 1 SHOULD DO A LOT."

[19:06] <hahainternet> nemo: but i don't lose, my systemd boxes are significantly more useful than my sysvinit boxes

[19:06] <nemo> that's missing the point

[19:06] <nemo> hahainternet: http://m8y.org/tmp/chess2.txt + http://m8y.org/tmp/temp3.txt 

[19:06] <nemo> hahainternet: we were playing games on IRC

[19:07] <hahainternet> nemo: yeah i've done that too, won a chess game entirely done through irc :)

[19:07] <nemo> hahainternet: sure. but maybe the board layout is new

[19:08] <hahainternet> nemo: haha, nice PM, and i've read the page now and the only compelling argument is against d-bus

[19:08] <hahainternet> but named pipes do not replace d-bus

[19:08] <hahainternet> and d-bus will become a kernel mediated system bus

[19:08] <hahainternet> which is an improved design

[19:08] <hahainternet> so again the argument falls away

[19:09] <nemo> ಠ_ಠ

[19:09] <nemo> oh well whatever

[19:09] <nemo> don't really care. choice right!

[19:09] <geekosaur> no, actually, kdbus is a hack because userspace dbus is a steaming pipe

[19:09] <geekosaur> *pile

[19:09] <nemo> "you're entitled to your incorrect opinion" to use the standard internet line

[19:09] <hahainternet> geekosaur: kdbus is long dead

[19:09] <hahainternet> https://github.com/bus1

[19:10] <geekosaur> so whgat is the new kernel mediated "hotness" to work around dbus being crap?

[19:10] <hahainternet> 'work around'

[19:10] <hahainternet> it provides a bus

[19:10] <hahainternet> that is the point

[19:10] <geekosaur> just keep trying to fix dbus by not fixing it, of course

[19:10] <hahainternet> what?

[19:10] <geekosaur> shove it into the kernel, we don;t need to fix our crap code

[19:11] <hahainternet> what are you talking about geekosaur, bus1 is not dbus is not kdbus

[19:11] <hahainternet> the concept of a kernel mediated system bus is a reasonable thing

[19:11] <lizmat> .ask perlawhirl should this say True or False in your book: say <a b c>.Mix ⊄ <a b b c d>.Mix

[19:11] <yoleaux> lizmat: I'll pass your message to perlawhirl.

[19:11] <nemo> geekosaur: remember this one from last year ? https://www.agwa.name/blog/post/how_to_crash_systemd_in_one_tweet

[19:12] <geekosaur> see, I think properly done system bus and properly done systemd would be good things. I just do not trust the current developers to program their way out of a wet paper bag, and they keep demonstrating they cannot be trusted to do so

[19:12] <hahainternet> nobody can be trusted to do so

[19:12] <nemo> I trust BSD folks more

[19:12] <hahainternet> nobody writes bug-free code

[19:12] <geekosaur> ...

[19:13] <hahainternet> apple did not verify SSL certificates for significant amounts of time

[19:13] <hahainternet> BSD has CVEs just like everyone else

[19:13] <geekosaur> right, nobody is in any way shape or form competent so their incomptence is fully justified

[19:13] <hahainternet> recently all Linux software was determined to be able to violate stack guard pages

[19:13] <nemo> heh

[19:13] <hahainternet> geekosaur: who do you trust to write good code?

[19:13] <nemo> so because all software has some flaws therefore all software is equivalent in quality ☺

[19:13] <nemo> I've heard that argument used in favour of C over Rust too

[19:14] <hahainternet> that's not the argument i made, but hey

[19:14] <nemo> can write bugs in rust, why try to improve verification?

[19:14] <hahainternet> i agree verification should be improved

[19:14] <moritz> 21:13 < hahainternet> geekosaur: who do you trust to write good code?

[19:14] <nemo> 15:12 < nemo> I trust BSD folks more

[19:14] <nemo> 15:13 < hahainternet> BSD has CVEs just like everyone else

[19:14] <hahainternet> but you cannot trust any developer

[19:14] <moritz> finally a question I can answer

[19:14] <moritz> nobody!

[19:14] <nemo> you went straight to an absolute

[19:14] <hahainternet> hi moritz :)

[19:14] <geekosaur> hahainternet, you just made that argument again

[19:14] <hahainternet> nemo: because that's the reality

[19:14] <geekosaur> so much for not making it

[19:14] <nemo> ok. just saying. that was the argument you made

[19:14] <hahainternet> no, i didn't, i'm not saying "you should trust all developers equally"

[19:14] <geekosaur> nobody is operfect, therefore provably bad is good

[19:15] <nemo> 😃

[19:15] <hahainternet> i am saying nobody is perfect, so the phrase "trust the current developers" is meaningless

[19:15] <hahainternet> because you should trust no developers

[19:15] <nemo> moritz: hey... can you fix that https://docs.perl6.org/language/unicode_entry.html  ?  That's why I came here 

[19:15] <geekosaur> ...

[19:15] <timotimo> nemo: there ought to be a link to the github repo at the botto

[19:15] <timotimo> m

[19:15] <geekosaur> yes, trust is all or nothing, there is no such thing as some being more trustworthy than others

[19:15] <geekosaur> never has been, never will be

[19:15] <timotimo> so you don't have to rely on any dev to do it for you

[19:16] <hahainternet> geekosaur: how do you measure trustworthy?

[19:16] <nemo> timotimo: ah yes. "just issue a PR"

[19:16] <Triplefox> trust is many dimensional

[19:16] <nemo> and wait

[19:16] <nemo> timotimo: all I want is 'he xim input method requires no extra installation, but it will not work with high codepoint values, such as emoji.'  deleted

[19:16] <nemo> as wrong

[19:16] <hahainternet> nemo: you can make pull requests specifically on github

[19:16] <hahainternet> without having to do anything else

[19:17] <geekosaur> hahainternet, for starters, does not release as a production version code that has not been tested. which poettering does continually, and red hat pushes into production and shoves down everyone's throat continuously

[19:17] <hahainternet> geekosaur: what do you mean by 'has not been tested'?

[19:18] <geekosaur> what is *wrong*  with you?

[19:18] <hahainternet> afaik systemd doesn't even have the concept of 'production version'

[19:18] <moritz> geekosaur, hahainternet: could you please move to channel where you discussion is more on topic? Thanks

[19:18] <moritz> *to a channel

[19:18] <moritz> grammar is hard

[19:18] <geekosaur> I'm just dropping it because there is no discussion here

[19:19] <timotimo> nemo: but the "requires no extra installation" part can stay?

[19:19] *** xerx joined
[19:19] <geekosaur> yes, it's built into X11

[19:20] <nemo> timotimo: ↑

[19:21] <nemo> timotimo: it's just that it reads awkwardly without the last part

[19:21] <nemo> so might as well just drop the whole phrase

[19:21] <nemo> samcv seems to be the one who added it. *shrug*

[19:21] <timotimo> k

[19:21] <nemo> https://github.com/perl6/doc/commit/0d4110870173259da9a4a104c9abf9d20321ac42

[19:22] <Geth> ¦ doc: 580bb6a9a8 | (Timo Paulssen)++ | doc/Language/unicode_entry.pod6

[19:22] <Geth> ¦ doc: remove counterfactual statement. nemo++

[19:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/580bb6a9a8

[19:22] <timotimo> how's that?

[19:22] <nemo> thanks. my OCD is assuaged

[19:23] <nemo> timotimo: also big fan of my gigantic .XCompose - works on almost everything, and I even have lil' perl script to use it with ctrl-a+v from tmux to replace the missing screen functionality

[19:24] <nemo> timotimo: although frankly I'd be surprised ibus would ever work better than xim in terms of cross-framework support - but who knows. depending one's system, if ibus is already setup correctly, might be easier to use that

[19:25] <nemo> there is an ibus-xim bridge I think

[19:25] <geekosaur> ibus --xim

[19:25] <nemo> ah. that simple. cool.

[19:26] <nemo> geekosaur: but then if you're using that, why would emoji be an issue. so confused ☺

[19:26] <nemo> anyway. fixed so moving on

[19:27] <nemo> hahainternet: BTW. WRT those silly unicode snippets.  this one on the page was golfed to smallest size possible in bash with help of #bash

[19:27] <nemo> hahainternet: 

[19:27] <nemo> for i in {0..63};{((i%16!=11&&i%16<14))&&C+=($((i+127137)));};n=52;for i in {1..5};{((x=RANDOM%n--,y=C[x],C[x]=C[n]));printf "\U`printf %x $y` ";}

[19:27] <nemo> it actually draws a shuffled poker hand ☺

[19:28] <nemo> my initial variant was much less terse

[19:28] <nemo> s/shuffled/random/

[19:43] *** eliasr left
[19:46] *** atweiden left
[19:48] <cxreg> anyone aware of an ongoing attempt to get rakudo running on wasm? (with or without moarvm)

[19:51] * moritz not

[19:51] *** Cabanossi left
[19:52] <kybr> IO::Socket::Async does not allow setting the source port. can someone correct me if i'm wrong?

[19:53] *** Cabanossi joined
[19:53] <cxreg> moritz: I've been at nodesource for a while so I'm shoulder deep in libuv, v8, etc

[19:53] *** travis-ci joined
[19:53] <travis-ci> Doc build failed. Timo Paulssen 'remove counterfactual statement. nemo++'

[19:53] <travis-ci> https://travis-ci.org/perl6/doc/builds/252540300 https://github.com/perl6/doc/compare/1274f18751bb...580bb6a9a8c1

[19:53] *** travis-ci left
[19:53] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[19:54] <cxreg> moritz: thinking of giving something a whirl, just looking for a jumping off point

[19:56] *** FROGGS left
[19:57] <timotimo> kybr: it appears you are correct

[19:58] <kybr> does this go all the way down to nqp? moar?

[20:02] <moritz> my own incoherent ramblings on the Perl 6 naming debate: https://perlgeek.de/blog-en/perl-6/2017-018-losing-named-and-orientation.html

[20:02] <moritz> even with a typo in the URL. great.

[20:03] <kybr> timotimo: thanks. i'm trying to do this: https://stackoverflow.com/questions/9873061/how-to-set-the-source-port-in-the-udp-socket-in-c 

[20:05] <timotimo> ah, for udp

[20:06] <timotimo> we support it for neither tcp nor udp ;(

[20:06] <cxreg> moritz: what ever happened to Camilia as a potential name?

[20:07] <[Coke]> moritz++

[20:09] <moritz> cxreg: I have no idea. I don't even know if anybody inside the Perl 6 community ever liked it, or seriously proposed it

[20:09] <[Coke]> that never really had traction, I don't think.

[20:09] <moritz> so far I've mostly heard that from p5 folks, and I feel free to ignore those suggestions

[20:09] <cxreg> fair :)

[20:12] *** zakharyas left
[20:13] <ranguard> moritz: "Two years ago, I didn't believe. Now you're reading a tired man's words.

[20:14] <ranguard> p5 people have had that for many many many more years, so please don't just ignore them.. some of us are VERY tired

[20:14] *** Zoffix joined
[20:15] <ranguard> s/very tired/have given up/

[20:15] <moritz> ranguard: I don't ignore people suggesting Perl 6 should rename. I ignore suggestions for specific names that come from outside the Perl 6 community

[20:16] <moritz> and that seem to point to any possible name, regardless of its quality, just to have it not be called "Perl 6" anymore

[20:16] <cxreg> what about naming it PERL :D

[20:17] <ranguard> specific names, fair enough.. naming is hard :)

[20:18] <cxreg> I still maintain btw that after spending a year deep in node.js adoption land, that the space is ripe for the taking

[20:18] <cxreg> mindshare is hard :/

[20:19] <Zoffix> moritz++ yey! You didn't waste my time with the post :) It's perfectly valid to not like "Rakudo Perl 6". As I've said, that name is not ideal due to exactly the reasons you stated, but it's probably the only one that could be forced into use by the "rebels" so to speak if there is no official stance on extending the name. My hope is a better extension can be made by people in power to change names.

[20:20] <[Coke]> "extension" ?

[20:20] <Zoffix> I would be perfectly fine with "Something Perl 6" where "Something" is selected entirely by TimToady and is officially declared to be so

[20:21] <moritz> let's call it "Ruby Perl 6".

[20:21] <cxreg> Mu

[20:21] <timotimo> Perlinius 6

[20:21] <Zoffix> [Coke]: some feel "Perl" branding is valuable, so the current proposal is not to "change" the name but to extend it with an extra word

[20:22] <Zoffix> moritz: clearly it should be Ruby 3 Perl 6. Make it impossible for them to release the next major version :p

[20:22] <cxreg> I think maybe that's mostly nostalgia and emotion on the part of the suggester, more than current reality.  imho.

[20:23] <[Coke]> Zoffix: thank you for the clarification.

[20:23] * Zoffix & shopping

[20:23] *** MasterDuke left
[20:23] <[Coke]> m: say "\c[ZERO WIDTH SPACE]Perl 6" # dad joke level?

[20:23] <camelia> rakudo-moar 37250e: OUTPUT: «​Perl 6␤»

[20:24] <tbrowder> Turbo Perl 6

[20:25] <tbrowder> Mod Perl 6

[20:25] * zengargoyle sorry to have missed the Input Method bashing, ibus vs xim vs uim is a total PITA for me...  must read some of nemo++ links.

[20:26] *** khw left
[20:27] <zengargoyle> between input methods and fonts and HiDPI display i'm sorta in a only half way works as much as it used to point in life. :/

[20:28] <timotimo> .o( camelious )

[20:29] <cxreg> zengargoyle: ibus -> ibis -> https://www.youtube.com/watch?v=mO-OpFjHRbE

[20:29] <raschipi> Royal Perl6

[20:31] <zengargoyle> cxreg: arrrghh me has PTSD about birds. :)

[20:33] <El_Che> I think what Zoffix's post proofs is that the naming discussion wasn"t settled with a weak compromise (one that no one was really happy with) as many hoped and that the discussion will come back from time to time

[20:34] <El_Che> whatver the course, I would prefer not see see aninomisity between perl5 and 6 people

[20:35] *** andrzejku left
[20:36] <zengargoyle> gokuraku -- sorta same roots.  (1) (Buddh) Sukhavati (Amitabha's Pure Land)/(2) paradise/(P)/  'tis the thing you say when slipping into a nice hot bath.

[20:37] * zengargoyle tends more to the just call it p6.

[20:37] *** raiph joined
[20:39] <Zoffix> Why not Z9?

[20:39] <Triplefox> Java Perl 6...now for jvm

[20:40] <zengargoyle> r4o

[20:40] <El_Che> maybe the relation with ruby and elixir could be an example?

[20:40] <zengargoyle> .... r5o

[20:40] <zengargoyle> urlang

[20:41] *** pierre__ joined
[20:43] <zengargoyle> glot -- if we go back to the idea of slangs and univerality.

[20:43] *** raschipi left
[20:44] <Zoffix> meh

[20:44] <El_Che> The Perls could be too close to C and C++ (where the naming suggest an enhancement but many people don't agree)

[20:45] * zengargoyle has an unnatural desire for mixing languages like Inline::* on steroids.  one sub in p6, one in forth, one in prolog, etc.

[20:45] <raiph> I already know Zoffix's objection to what I suggested but does anyone else object?

[20:45] *** pierre__ left
[20:45] <El_Che> zengargoyle: you hate your fellow programmers :)

[20:46] <Zoffix> Even I'm unsure what you suggested.... "P6"?

[20:46] <Zoffix> So it'd be "P6 Perl 6"?

[20:46] <zengargoyle> i see a close relation between p5 and p6, maybe it's just coming from a really distant point of view.

[20:46] <raiph> No. One would choose P6 or Perl 6 depending on whether or not you wish to emphasize "Perl"

[20:46] <El_Che> What about Pisces?

[20:47] <El_Che> P.+6

[20:47] <lizmat> .oO( fishy )

[20:47] <[Coke]> El_Che: .... sounds fishy

[20:47] <Zoffix> Interesting, I see no relation between Perl 5 and Perl 6. Hell, even the sigils are different

[20:47] <[Coke]> TOO SLOW!

[20:47] <El_Che> even the greek char looks like abutterfly

[20:47] <El_Che> ♓

[20:48] <zengargoyle> in the infinite dimensional space, all languages are the same.  for me, p5 and p6 share some very similar shadows.

[20:48] <Zoffix> heh

[20:48] <Zoffix> :)

[20:48] * Zoffix &

[20:48] *** Zoffix left
[20:49] <El_Che> Zoffix6

[20:51] <zengargoyle> like choosing different axioms but arriving at the same spaces of what can be proven and what can't.  different incompletes that are close shadows to each other. :)

[20:51] * zengargoyle thinks *gah* the same peeps thought up both of them...

[20:52] <timotimo> zof6?

[20:55] *** greppable6 joined
[20:55] *** ChanServ sets mode: +v greppable6

[20:56] * zengargoyle also wonders if anybody else follows Marpa...

[20:59] *** TimToady left
[20:59] *** skids left
[21:00] *** TimToady joined
[21:01] *** tyil is now known as not_tyil

[21:12] *** nadim left
[21:13] *** TEttinger joined
[21:13] <[Coke]> I'm see blog posts every so often, but it seems like a purely academic thing to me. (says the Perl 6 person)

[21:14] *** mcmillhj left
[21:15] *** setty1 left
[21:16] *** evanm joined
[21:19] *** nadim joined
[21:19] *** espadrine left
[21:20] *** cpage_ left
[21:20] *** dct joined
[21:23] <evanm> Hi, I have a question about the new await behavior described here: https://github.com/rakudo/rakudo/pull/1004

[21:24] *** TimToady left
[21:26] <evanm> My understanding is that if "await" is called by a managed (non-main) thread, the call to "await" may return from a different OS thread

[21:26] <evanm> This appears to  be the case from my tests, however it also appears that $*THREAD is not properly updated

[21:27] <evanm> So for instance I have two threads running concurrently (post-await) that are reporting the same thread ID

[21:27] *** TimToady joined
[21:28] <evanm> Has anyone run into this issue? Or is $*THREAD.id behaving as expected, but my expectations are wrong?

[21:36] *** Cabanossi left
[21:38] *** Cabanossi joined
[21:41] *** mcmillhj joined
[21:42] *** Cabanossi left
[21:42] *** Cabanossi joined
[21:45] *** mcmillhj left
[21:48] *** Zoffix joined
[21:49] <Zoffix> evanm: no idea about the answer. But if you don't get it today, try asking again on Thursday. Our resident expert who'd know the answer for that question is currently on vacation :)

[21:49] *** cpage_ joined
[21:51] <lizmat> evanm: that sounds like  bug

[21:51] <lizmat> if you can golf it, submitting a rakudobug would be appreciated

[21:55] <timotimo> we do have something that makes sure dynamic variables from where you called start will stick around for the inside of the start block

[21:55] <timotimo> maybe it accidentally keeps the $*THREAD around from where the start was called originally

[21:55] <timotimo> i haven't looked at the mechanism that does it, i just remember the commit message scroll past

[21:56] *** cpage_ left
[21:57] *** mcmillhj joined
[21:57] <lizmat> ah, that could very well be the reason  :-)

[22:01] *** mcmillhj left
[22:03] <evanm> Thanks. I'll go ahead and file a bug report. What's the vacationing expert's irc handle, so I can make sure it gets attention?

[22:07] *** nicq201 joined
[22:11] <zengargoyle> evanm: i'd guess jnthn for almost anything dealing with await and threads and concurrency in general.

[22:12] <evanm> timotimo: If you happen to have the commit message handy, I'll include it in the report as a possible lead

[22:14] *** cpage_ joined
[22:15] *** mcmillhj joined
[22:16] *** Xliff_ joined
[22:17] <lizmat> evanm: pretty sure the commit message is not very useful, as that would apply to all dynamic variables

[22:17] *** cpage__ joined
[22:18] <lizmat> whereas the stickiness of $*THREAD when continuing on a different thread is just a side-effect for *that* particular dynamic variable

[22:18] <lizmat> it wouldn't matter for any other dynamic variable, unless it has some dependency on the thread ID

[22:19] <lizmat> but none come to mind right now

[22:19] *** cpage_ left
[22:19] *** cpage__ is now known as cpage_

[22:19] *** Xliff left
[22:20] *** mcmillhj left
[22:21] <timotimo> i found it

[22:21] <timotimo> the message is "Code in start blocks see dynamics of starter"

[22:22] <timotimo> bedf2a7073042c79b886aec9e39ad8be4b0af498

[22:24] *** nadim left
[22:25] *** rindolf left
[22:25] *** mcmillhj joined
[22:26] *** wamba left
[22:28] <nicq201> What does the '{}' mean in `token comment:sym<#> { '#' {} \N* }` from Grammar.nqp?

[22:28] <evanm> Thanks... my juicy bug report is almost ready.

[22:29] <timotimo> it terminates the declarative prefix of the token

[22:30] *** mcmillhj left
[22:30] <timotimo> since after a # anything is valid, this rule would win over anything else that starts with #, like for example #`( foo )

[22:31] <nicq201> So how does #`(foo) get called then? Wouldn't it just be taken by '#'?

[22:33] <timotimo> nope

[22:33] <timotimo> it's defined something like #`<opener> {} or something

[22:33] <timotimo> with LTM (what you get when you use | or protoregex) the longest token matched wins

[22:34] <timotimo> but only the declarative prefix counts

[22:34] <nicq201> What exactly is a 'declarative prefix'?

[22:34] <timotimo> it's anything from the beginning to the first thing that can't be parsed declaratively (think of it as "parsed by a NFA")

[22:34] <timotimo> anything that's a traditional, "mathematical" regular expression

[22:35] <timotimo> no backreferences, no lookarounds, no arbitrary code blocks

[22:35] *** skids joined
[22:38] <nicq201> Ok. So between / '#' / and / [ '#' ** 2..3 ] / The first would be the one that would be called?

[22:39] <nicq201> (Kind of a poor example, but best I could come up with).

[22:40] *** MasterDuke joined
[22:41] *** cdg_ joined
[22:41] *** kerframil joined
[22:42] *** mcmillhj joined
[22:42] <timotimo> well, if you have #` there, ## can't even match at all

[22:42] <nicq201> Better example: between `/ '#' {} \N*/` and `/ '##' {} \N*/`, the second would be called given "###Hello"

[22:42] <timotimo> that'? right

[22:42] <timotimo> sorry

[22:42] <timotimo> that's right

[22:43] *** cdg left
[22:43] <nicq201> And the reason for choosing the second one is because more of the regex exactly matches.

[22:44] *** bpmedley joined
[22:44] <timotimo> "exactly" is a strange word for this

[22:45] <timotimo> if you have / . {} .* / and / .. {} .* /, the second one also wins

[22:45] <timotimo> it's not about whether a match is exact, like a literal vs a character class, or something like that

[22:46] *** mcmillhj left
[22:51] *** Cabanossi left
[22:53] *** Cabanossi joined
[22:54] <nicq201> Hmm... I having some trouble understanding how some of this works. :/

[22:55] <nicq201> Is there a doc on this so that I don't need to bother you?

[22:55] *** mcmillhj joined
[23:00] *** mcmillhj left
[23:00] <zengargoyle> lizmat: thanks for PackUnpack info, looks like it will replace my 'use experimental :pack;' and make some things a bit easier at least until some more official-ish p6-way thing turns up.

[23:06] *** cdg_ left
[23:08] *** evanm left
[23:10] *** mcmillhj joined
[23:12] *** kerframil left
[23:12] *** kerframil joined
[23:13] *** BenGoldberg joined
[23:15] *** pmurias left
[23:15] *** mcmillhj left
[23:18] <nicq201> tony-o: Ar you still online?

[23:18] <nicq201> *are

[23:21] *** kerframil left
[23:23] *** kerframil joined
[23:23] <timotimo> nicq201: well, the old spec docs are rather exhaustive, but partially obsolete

[23:24] <timotimo> S05:1

[23:24] <synopsebot6> Link: http://design.perl6.org/S05.html#line_1

[23:24] <nicq201> timotimo: Yeah, I don't really check them for info anymore. :/

[23:29] *** mcmillhj joined
[23:31] <nicq201> Well,  the reason I ask was because I was trying to emulate Smart::Comments from P5, and thought it could be a useful way of learning how to make Slangs.

[23:32] *** nicq201 left
[23:33] *** nicq201 joined
[23:33] <nicq201> https://github.com/nicqrocks/perl6-smart-comments if you want to take a look.

[23:33] *** nicq201 left
[23:33] *** mcmillhj left
[23:34] <timotimo> that's cool

[23:37] *** Cabanossi left
[23:38] *** Cabanossi joined
[23:38] *** raschipi joined
[23:41] *** mcmillhj joined
[23:42] <MasterDuke> nicq20: i don't know anything about slangs, but is this relevant? https://irclog.perlgeek.de/perl6/2017-07-11#i_14856952

[23:46] *** kerframil left
[23:46] *** BenGoldberg left
[23:46] *** mcmillhj left
[23:48] <ugexe> you can now use git revisions in git uris. both as META6.json "source-url" : "https://github.com/ugexe/zef.git@v0.1.23" or `zef -v install https://github.com/ugexe/zef.git@v0.1.23`

[23:48] *** dct left
[23:52] *** cpage__ joined
[23:54] *** cpage_ left
[23:54] *** cpage__ is now known as cpage_

