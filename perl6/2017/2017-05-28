[00:00] *** aindilis joined
[00:02] <timotimo> SDL and VPython are two very different things altogether

[00:03] <azawawi> timotimo: i meant we need a simple 3D library on top of SDL like VPython's

[00:04] <timotimo> ah

[00:04] <timotimo> since vpython has a "scene" thing, it's much more than i'd call a "3d library"

[00:05] <timotimo> though to be honest, i'm a bit "damaged" in my expectations of what a 3d library would do by having used opengl (a long time ago)

[00:06] <azawawi> im stuck since yesterday on a weird 3D 2D C array problem in ex011.p6  (PLplot)

[00:06] <azawawi> :)

[00:07] <azawawi> opengl is cool but what vpython does perfectly is making complicated 3D stuff simple while providing advanced options

[00:08] <timotimo> maybe it'd be a good idea to model something off of three.js

[00:08] *** dj_goku joined
[00:10] <azawawi> or go crazy and port obelisk.js to Perl 6 :)

[00:10] <azawawi> https://codepen.io/slobaum/pen/zhmFL

[00:10] <azawawi> on my todo list

[00:11] *** kurahaupo_ joined
[00:11] *** kotp left
[00:13] *** kurahaupo left
[00:14] *** dj_goku left
[00:14] *** Cabanossi left
[00:15] *** Cabanossi joined
[00:29] <timotimo> i remember you spoke about it before

[00:29] *** nadim left
[00:32] *** finanalyst joined
[00:36] *** [2300mAh] joined
[00:38] *** azawawi left
[00:43] *** kurahaupo_ left
[00:43] *** kurahaupo joined
[00:44] *** kurahaupo left
[00:44] *** kurahaupo joined
[00:45] *** kurahaupo left
[00:45] *** kurahaupo_ joined
[00:45] *** kurahaupo joined
[00:46] *** troys is now known as troys_

[00:48] *** kurahaupo left
[00:49] *** kurahaupo_ left
[00:53] *** yoleaux joined
[00:53] *** ChanServ sets mode: +v yoleaux

[01:13] *** BenGoldberg joined
[01:15] *** kurahaupo joined
[01:16] *** kurahaupo left
[01:16] * BenGoldberg wonders if that map is for simcity2000 or xbattle ;)

[01:16] <Geth> ¦ doc: 8b77d0f56a | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Supply.pod6

[01:16] <Geth> ¦ doc: Fix typo

[01:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8b77d0f56a

[01:16] *** kurahaupo joined
[01:16] *** Praise left
[01:20] *** kurahaupo_ joined
[01:20] *** kurahaupo_ left
[01:20] *** kurahaupo_ joined
[01:23] *** kurahaupo left
[01:23] *** kurahaupo joined
[01:24] *** kurahaupo left
[01:24] *** kurahaupo_ left
[01:33] *** curt_ left
[01:34] *** itaylor57 left
[01:41] <zostay> MasterDuke: will do, thx

[01:46] *** ilbot3 left
[01:47] *** ilbot3 joined
[01:47] *** ChanServ sets mode: +v ilbot3

[01:49] <zostay> .tell lizmat https://rt.perl.org/Public/Bug/Display.html?id=131386

[01:49] <yoleaux> zostay: I'll pass your message to lizmat.

[01:56] *** dj_goku joined
[01:56] *** dj_goku left
[01:56] *** dj_goku joined
[01:59] *** Cabanossi left
[02:00] *** Cabanossi joined
[02:01] *** dj_goku left
[02:06] *** travis-ci joined
[02:06] <travis-ci> Doc build errored. Zoffix Znet 'Fix typo'

[02:06] <travis-ci> https://travis-ci.org/perl6/doc/builds/236791842 https://github.com/perl6/doc/compare/9f2e762ed1d1...8b77d0f56a23

[02:06] *** travis-ci left
[02:13] *** pilne left
[02:24] *** itaylor57 joined
[02:30] *** dwarring left
[02:39] *** xinming_ joined
[02:40] *** cdg joined
[02:40] *** xerx joined
[02:43] *** xinming left
[02:52] *** mr-foobar left
[02:53] *** mr-foobar joined
[02:55] *** noganex_ joined
[02:57] *** Cabanossi left
[02:57] *** noganex left
[03:00] *** Cabanossi joined
[03:13] *** Cabanossi left
[03:14] *** Cabanossi joined
[03:15] *** zacts joined
[03:22] *** skids joined
[03:29] *** araraloren_ joined
[03:32] *** araraloren left
[03:38] *** khw left
[03:39] *** cdg_ joined
[03:41] *** cdg left
[03:44] *** dj_goku joined
[03:44] *** dj_goku left
[03:44] *** dj_goku joined
[03:49] *** dj_goku left
[04:13] *** araraloren_ is now known as araraloren

[04:25] *** rindolf joined
[04:25] *** aborazmeh left
[04:27] *** Cabanossi left
[04:29] *** Cabanossi joined
[04:33] *** cdg_ left
[04:41] *** zacts left
[04:46] *** zacts joined
[04:57] *** mr-foobar left
[04:58] *** mr-foobar joined
[05:13] *** CacoS joined
[05:14] <fatguy> how do i test can-ok on class ?

[05:22] <fatguy> i used this on testing class : can-ok ::(module)::math, 'new', 'ok loading math class';

[05:22] <fatguy> any good practices ?

[05:28] *** parv joined
[05:30] *** zacts left
[05:33] *** dj_goku joined
[05:37] *** dj_goku left
[05:39] *** wamba joined
[05:47] <llfourn> fatguy: if ::(module)::match is a class then that looks fine

[05:47] <llfourn> math*

[05:48] <llfourn> if it's not working you might try ::(module).WHO<math> and see if that works

[05:54] <fatguy> llfourn: thanks!

[05:56] <llfourn> m: use Test; say ::("Test")::.keys; say ::("Test").WHO.keys

[05:56] <camelia> rakudo-moar a0b6f6: OUTPUT: «()␤(&todo_output EXPORT &failure_output &output)␤»

[05:56] <llfourn> fatguy: yep, that's still a bug

[05:58] *** Cabanossi left
[05:59] *** Cabanossi joined
[05:59] *** xerx left
[06:17] *** xiaomiao left
[06:22] *** xiaomiao joined
[06:24] <Geth> ¦ ecosystem: finanalyst++ created pull request #343: add Task::Popular distribution (correct typo in earlier module)

[06:24] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/343

[06:32] <Geth> ¦ ecosystem: 719a6c2c72 | (Richard Hainsworth)++ (committed by Zoffix Znet) | META.list

[06:32] <Geth> ¦ ecosystem: add Task::Popular distribution (#343)

[06:32] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/719a6c2c72

[06:45] *** espadrine joined
[06:46] *** wamba left
[06:54] *** smls joined
[06:55] <smls> bisectable6: my (@a, @b) := [Z] <a 1>, <b 2>, <c 3>; say @a;

[06:55] <bisectable6> smls, Bisecting by exit code (old=2015.12 new=a0b6f6b). Old exit code: 1

[06:55] <bisectable6> smls, bisect log: https://gist.github.com/54a125252b5d73d42ca0facf6f752770

[06:55] <bisectable6> smls, (2017-04-28) https://github.com/rakudo/rakudo/commit/98e137b1fe6f24a1f66b821518b892dfe6169dbd

[06:56] <smls> yay, that's another RT I can close

[07:03] *** don joined
[07:04] *** don left
[07:06] *** rurban joined
[07:06] *** rurban left
[07:07] *** setty1 joined
[07:14] *** jaeuser joined
[07:15] *** nadim joined
[07:15] *** fatguy left
[07:16] *** darutoko joined
[07:19] *** skids left
[07:21] *** dj_goku joined
[07:21] *** dj_goku left
[07:21] *** dj_goku joined
[07:21] *** skids joined
[07:24] *** BenGoldberg left
[07:26] *** dj_goku left
[07:32] *** troys_ left
[07:37] *** jaeuser left
[07:51] *** skids left
[07:54] *** dct joined
[08:09] *** mr-foobar left
[08:27] *** Cabanossi left
[08:29] *** cognominal left
[08:30] *** Cabanossi joined
[08:43] *** mr-foobar joined
[08:49] <lizmat> .

[08:49] <yoleaux> 01:49Z <zostay> lizmat: https://rt.perl.org/Public/Bug/Display.html?id=131386

[08:49] <lizmat> fixed with https://github.com/rakudo/rakudo/commit/87d0e0a39e

[08:52] <Geth> ¦ doc: 6dd92b899e | (Zoffix Znet)++ | 6 files

[08:52] <Geth> ¦ doc: [io grant] Document IO::CatHandle

[08:52] <Geth> ¦ doc: 

[08:52] <Geth> ¦ doc: A___A

[08:52] <Geth> ¦ doc:            A___A       |o o|

[08:52] <Geth> ¦ doc:      ____ / o o \      |='=|

[08:52] <Geth> ¦ doc: ___/~____   ='= /_____/    |_________

[08:52] <Geth> ¦ doc:   (______)__m_m_)    /  ||||

[08:52] <Geth> ¦ doc:                     |___||||]

[08:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6dd92b899e

[08:53] <lizmat> Zoffix++   # making a dream come true

[08:57] *** parv left
[08:58] <moritz> nadim: nice!

[08:59] <nadim> and 10 times shorter than .gist

[08:59] <zengargoyle> hrmm.... "Remember the various regexes we experimented for extracting dates" vs "Remember the various regexes we experimented with for extracting dates"?

[09:00] <nadim> moritz: but to be fair it is specialized; not only does it handle long strings, etc ... but it also knows about what JSON::Tiny returns and decide to inline sub elements or not show them at all

[09:02] * zengargoyle wonders if this is some Queen's English vs American English sort of thing.  worthy of pull-request or not?

[09:02] <nadim> moritz: the JSON::Tiny filter https://github.com/nkh/P6-Data-Dump-Tree/blob/master/examples/JSON_parsed.pl#L67-L103

[09:09] *** dj_goku joined
[09:09] *** dj_goku left
[09:09] *** dj_goku joined
[09:09] * zengargoyle is sending pull-requests/issues to thinkinperl6

[09:14] *** dj_goku left
[09:14] <Voldenet> zengargoyle: well the meaning in both cases is different

[09:14] <Voldenet> "experiment" a regex would mean "to determine what it would do in that case"

[09:15] <Voldenet> ...I think

[09:15] <Voldenet> and "experiment with" would sound that you tried a few of them and picked one that worked best, hm

[09:17] <Voldenet> http://www.macmillandictionary.com/dictionary/american/experiment_2 1st vs 2nd meaning :P

[09:18] <Voldenet> actually most dicts give you similar two meanings http://onelook.com/?w=experiment&ls=a

[09:19] <zengargoyle> yeah, i'm torn.  it just made my brain lock up for a moment reading it.  like 'in line' vs 'on line' or 'in the hospital' vs 'in hospital'.

[09:19] <zengargoyle> or 'queue' as the brits say.

[09:20] <Voldenet> eh, americans don't say 'queue'? :o

[09:20] <Voldenet> ah, "line"

[09:21] <Voldenet> but "fifo line" sounds unprofessional, I'm still "queueing", so I can get bonus points for vowel spree ;)

[09:21] <zengargoyle> 'the things that we experimented' is sorta wierd vs 'the things we experimented with'...

[09:22] <moritz> queue implies fifo

[09:22] <zengargoyle> so does in a line :P

[09:22] <hahainternet> queue is indeed the correct spelling and concept :)

[09:24] <zengargoyle> this american watched too much brittish tv as a child in the south and was accused of being a damn yankee by teachers for talking weird. :)

[09:24] <hahainternet> wow that's just depressing zengargoyle :(

[09:25] <Voldenet> > https://docs.perl6.org/routine/pack#role_Blob

[09:26] <Voldenet> "Considered experimental" ~ should I inline p5's pack/unpack for this?

[09:26] <zengargoyle> meh, just like Perl* i'm liberal in input. :P

[09:26] <Geth> ¦ doc: 0653d31fbb | (Zoffix Znet)++ | doc/Type/IO/CatHandle.pod6

[09:26] <Geth> ¦ doc: Fix formatting issue

[09:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0653d31fbb

[09:27] <zengargoyle> hence not knowing if 'which' is needed....

[09:28] <zengargoyle> https://github.com/LaurentRosenfeld/thinkperl6/blob/master/book/grammars.tex#L399

[09:37] * zengargoyle has also been recently watching a bunch of brit Royal Institute lectures with experiments so 'the things we experimented' also makes some sense in that 'experimented' is the like the meta of the experiments as a whole but 'experimented with' is the collective of all of the individual experiments which each stand on their own.

[09:40] <hahainternet> i don't think you can use "experimented" like that, i'm no linguist though

[09:40] <hahainternet> but it would be more appropriate to be "the experimentation"

[09:40] <lizmat> .oO( we can verb anything )

[09:41] <hahainternet> well in the verbed noun form this would be fine "they experimented" as in "they medalled"

[09:41] <El_Che> IANAL aka "I am not a linguist"

[09:41] <hahainternet> but referring to the subject by it?

[09:41] <hahainternet> you wouldn't say "the events we medalled"

[09:42] <hahainternet> so yeah, if it'd be "the events in which we medalled" i contest it's also "the things with which we experimented"

[09:45] *** smls left
[09:45] <zengargoyle> the events we medalled with

[09:46] <hahainternet> surely "in", the events were not the tool

[09:46] <hahainternet> anyway, i have a grade C qualification in english

[09:46] <hahainternet> so not really the most appropriate to correct you 

[09:52] *** Jarryd98 joined
[09:54] <zengargoyle> hahainternet: you can't correct me, i don't know either. :P

[09:57] <zengargoyle> it just makes my native us english brain go bonk but might not even be a blip for the whole rest of the english speaking world.

[09:57] *** Cabanossi left
[10:00] *** Cabanossi joined
[10:04] *** wamba joined
[10:06] * zengargoyle decides there are no strong opinions either way and continues reading for something more black and white.

[10:09] *** TEttinger left
[10:11] *** lolo78 joined
[10:15] <lolo78> zengargoyle: I have tried to use American English throughout Think Perl 6 book. The issue might just be that English is not my mother tongue, so I might not be always very precise with these things. Laurent R.

[10:15] <lolo78> That said, the book has been reviewed by three professional editors and proofreaders at O'Reilly, I would think they would have picked it up if it was really a mistake.

[10:16] *** travis-ci joined
[10:16] <travis-ci> Doc build passed. Zoffix Znet 'Fix formatting issue'

[10:16] <travis-ci> https://travis-ci.org/perl6/doc/builds/236849498 https://github.com/perl6/doc/compare/6dd92b899ee1...0653d31fbbd5

[10:16] *** travis-ci left
[10:28] *** Cabanossi left
[10:29] *** Cabanossi joined
[10:30] *** pmurias joined
[10:30] *** espadrine left
[10:32] *** margeas joined
[10:35] <pmurias> hmm, building nqp-js currently requires building nqp-m (and moar). What should 'perl Configure.PL --backends=js --gen-nqp' in rakudo.js do?

[10:36] <zengargoyle> lolo78: i understand and that's why i'm cautious.

[10:38] <zengargoyle> lolo78: and great work and enjoyable read (or at least skimming through). 

[10:39] <zengargoyle> lolo78: feel free to ignore me if i make some random comments. :)

[10:47] <lolo78> zengargoyle: oh, no, any comment that might help improve the book is welcome. (Even though it is too late now for the printed version, since the dead tree version is out by now. I can still improve the e-version.)

[10:48] <lolo78> Even though I tried to make it as good as I reasonably could, I am aware it does not even come close to perfection.

[10:49] <zengargoyle> lolo78: i am skimming through and reading interesting bits and came across a few sentences/paragraphs here and there that made me stop and re-read a couple of times to understans.

[10:50] <zengargoyle> but not 'horribly broken' or maybe not 'just not quite my dialect of english' and probabbly 'just fine'.

[10:52] <lolo78> You're welcome to send comments at this address: think.perl6 (at) gmail.com. Or to raise issues on GitHub as you did already.

[10:54] <zengargoyle> cool :) and many thanks for your work and for putting it out there.

[10:54] <lolo78> BTW, I have added "zengargoyle" in the contributors' list. Please let me know if you wish to appear under another name.

[10:57] *** dj_goku joined
[10:57] *** dj_goku left
[10:57] *** dj_goku joined
[11:02] <araraloren> lolo78++ :)

[11:03] *** dj_goku left
[11:10] * zengargoyle wishes he could dig up enough of three years of high school french to say something witty.

[11:12] <mst> je suis desolee mais j'ai oubliee le plus part de la langue francaise que j'ai etudie

[11:12] <zengargoyle> i'm desolate but i forgot most of the french that i studed. ????

[11:13] <jnthn> Probably studied rather than studed :)

[11:13] <zengargoyle> lol

[11:13] <jnthn> I remember "je suis desolee" is "I'm sorry" :)

[11:14] <jnthn> At school they taught me to pass a French exam rather than to speak French. I passed the exam with the top grade. But I was darn useless if I had to actually use the language. :/

[11:14] <jnthn> In like, a situation other than an exam.

[11:15] <zengargoyle> back in the day while reading 'Less Than Zero' I had a brain fart where i didn't understant WTF was that word.  it was that chapter where it was in frend and i hit a word that i didn't know.

[11:15] <lolo78> jnthn: except that if you say "je suis desolee", you are talking as a female person. :)

[11:17] <lolo78> A man would say "Je suis désolé".

[11:17] <jnthn> That would be an acute mistake...

[11:17] *** shiven joined
[11:20] * zengargoyle groans

[11:25] <mst> zengargoyle: 'je suis desolee' is more "I'm very sorry"

[11:25] <mst> lolo78: yeah, see the "I've forgotten most of it" bit ;)

[11:25] <mst> every time I type or say it I always manage to make at least one mistake

[11:25] <mst> quelle fuckin' surprise ;)

[11:26] <zengargoyle> strangely enough, french is like the third languge in my area, but i rarely hear it.  the crosswalks have french markings but i only hear english and ermenian.

[11:34] * zengargoyle blames decades old high school choose latin/spanish/french ... probabbly should have chosen latin. :P

[11:37] *** brrt joined
[11:42] <El_Che> https://nxadm.wordpress.com/2017/05/28/so-what-about-perl-6-dependencies/ <-- a blog post where I mention mst, now that he's here

[11:58] *** Cabanossi left
[11:59] *** Cabanossi joined
[12:03] <mst> also worth noting Object::Remote exists since that's excellent for zero-deployment

[12:04] <mst> I thought lexical importing meant "Soon, you’ll be able to load different versions of the same library in the same program." was viable now?

[12:07] *** cgfbee left
[12:13] *** cgfbee joined
[12:14] <El_Che> mst: I haven't seen that in the wild yet

[12:15] *** lucasb joined
[12:16] <lucasb> Hello o/

[12:16] <araraloren> hi o\

[12:16] <El_Che> Object::Remote does solve one time of deployment, but a lot of use cases need something more simple

[12:18] <lucasb> would "().Seq" be the most simple way to create a Seq for demonstration purporses?

[12:18] <lucasb> I saw something about Seqs binding to arrays in the backlog and RT

[12:19] <lucasb> just a sec :)

[12:20] <araraloren> There are some case can return a Seq. Please refer this : https://docs.perl6.org/type/Seq

[12:21] <llfourn> m: <one two three>.map(*.uc).^name.say # seems pretty simple

[12:21] <camelia> rakudo-moar 87d0e0: OUTPUT: «Seq␤»

[12:21] <llfourn> m: (loop { }).^name.say

[12:21] <camelia> rakudo-moar 87d0e0: OUTPUT: «Seq␤»

[12:24] <lucasb> thanks for the examples and reference

[12:24] <araraloren> m: WHAT(<1 2 3> Z=> <4 5 6>).say

[12:24] <camelia> rakudo-moar 87d0e0: OUTPUT: «(Seq)␤»

[12:26] <lucasb> has been lots of months since I don't touch Perl 6. I forgot the little I knew

[12:28] *** khw joined
[12:29] <araraloren> There are many many many ... feature in Perl6 ..

[12:30] *** kaare__ left
[12:31] *** brrt left
[12:32] <zengargoyle> mst: i really thought that when IO changes broke my tests I might be able to just throw a pair of {} around it with a 'use v6.c;' at the front and it would magiallly start working again... :(

[12:36] <zengargoyle> i only hope that what i was doing wasn't actuall in the spectests that describe 6.c

[12:41] <zengargoyle> lolo78: i am zengargoyle (at) gmail.com should the need arise.

[12:43] *** espadrine joined
[12:45] *** dj_goku joined
[12:45] *** dj_goku left
[12:45] *** dj_goku joined
[12:50] *** dj_goku left
[12:57] *** Cabanossi left
[12:59] *** Cabanossi joined
[13:21] *** wamba left
[13:26] *** CacoS left
[13:31] *** MilkmanDan left
[13:32] *** MilkmanDan joined
[13:32] *** wamba joined
[13:35] *** mr-foobar left
[13:39] *** mr-foobar joined
[13:49] *** mr-foobar left
[13:56] *** ufobat joined
[13:58] *** user3 joined
[14:03] <user3> I'm new to perl6. I want to make visible all names in a module I just defined: module mymod { our $x = 42; }; use mymod;

[14:03] <user3> doesn't work

[14:04] <moritz> user3: after that you can use $mymod::x

[14:04] <moritz> user3: and you can give subs an "is export" trait to make it available in the calling module

[14:05] *** b2gills left
[14:06] <araraloren> Yeah, you should export by add `is export`, such as { our $x is export = 42; }

[14:07] *** b2gills joined
[14:08] <user3> module mymod { our $x is export = 42; }; use mymod;

[14:08] <user3> i still get error messages

[14:08] <user3> i'll put them in a pastebin...

[14:12] <user3> https://pastebin.com/n5hCJU34

[14:12] <araraloren> m: module mymod { our $x is export = 42; }; say $mymod::x;

[14:12] <camelia> rakudo-moar 87d0e0: OUTPUT: «42␤»

[14:12] <araraloren> m: module mymod { our $x = 42; }; say $mymod::x;

[14:12] <camelia> rakudo-moar 87d0e0: OUTPUT: «42␤»

[14:12] <araraloren> m: module mymod { my $x = 42; }; say $mymod::x;

[14:12] <camelia> rakudo-moar 87d0e0: OUTPUT: «(Any)␤»

[14:13] <geekosaur> if your rakudo is old, use won't work and you have to do something like: mymod->IMPORT();

[14:13] <geekosaur> or mymod.IMPORT() or whatever that syntax was

[14:13] <user3> This is Rakudo version 2017.04.3-176-g824cfa3 built on MoarVM version 2017.04-56-g8ad18b8

[14:14] <geekosaur> actually I wonder fi that was even changed...

[14:14] <araraloren> mymod is under current scope. Use is except a **compunit**

[14:15] <geekosaur> m: module mymod { our $x is export = 42; }; use mymod;

[14:15] <camelia> rakudo-moar 87d0e0: OUTPUT: «===SORRY!===␤Could not find mymod at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Repos…»

[14:15] <araraloren> s/except/expect /

[14:15] <user3> the compiler seems to be looking for external modules while I just want it to compile the trivial module mymod

[14:16] <user3> could that be something in my environment? like my enviornment variables?

[14:17] <araraloren> No, use expect a **compunit**, not a module/class name

[14:17] <geekosaur> m: module mymod { our $x is export = 42; }; import mymod; dd $x

[14:17] <camelia> rakudo-moar 87d0e0: OUTPUT: «Int $x = 42␤»

[14:17] <araraloren> You **use** a compunit, then import module/class/variable etc

[14:18] <araraloren> use == need + import

[14:18] *** Ven joined
[14:19] *** Ven is now known as Guest70007

[14:20] <araraloren> Sorry my english is so poor. If you understand what i said, I will appreciate .

[14:20] <geekosaur> araraloren, I understand but I think it's LTA that "need" doesn't turn into a no-op here

[14:21] <user3> well, for now I'm trying to run basic perl6 examples. I'd just like a way to dump all names in the module mymod into the current scope

[14:21] <geekosaur> basically I should be able to write code that doesn't have to know how mymod came into existenced

[14:21] <user3> it appears more complicated than in other languages

[14:21] <araraloren> m: module mymod { my $x is export = 42; }; say $mymod::x;

[14:21] <camelia> rakudo-moar 87d0e0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can't apply trait 'is export' on a my scoped variable. Only our scoped variables are supported.␤at <tmp>:1␤------> 3module mymod { my $x is export7⏏5 = 42; }; say $mymod::x;␤    expecting any o…»

[14:22] <araraloren> m: module mymod { my $x is export = 42; }; import mymod; say $mymod::x;

[14:22] <camelia> rakudo-moar 87d0e0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can't apply trait 'is export' on a my scoped variable. Only our scoped variables are supported.␤at <tmp>:1␤------> 3module mymod { my $x is export7⏏5 = 42; }; import mymod; say $mymod::x;␤    e…»

[14:22] <user3> araraloren: that works

[14:22] <Geth> ¦ doc: 0364b594f3 | (Moritz Lenz)++ | doc/Language/variables.pod6

[14:22] <Geth> ¦ doc: Correct mixed list/item assignment example, dogbert17++

[14:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0364b594f3

[14:22] <moritz> there you go, now you're dogbert18 :-)

[14:22] <user3> but I'd like to make all names visible in the current scope

[14:22] <geekosaur> user3, that's only true for a small subset of "other languages" that don't really have the concept of lexical variables

[14:22] <moritz> user3: but why? modules are for encapsulation

[14:23] <moritz> sharing everything runs counter the idea of encapsulation

[14:23] <araraloren> When you want some name visible, you should add trait `is export` for it.

[14:24] <user3> ok

[14:25] <user3> m: module mymod { our $x = 42; }; say $mymod::y;

[14:25] <camelia> rakudo-moar 87d0e0: OUTPUT: «(Any)␤»

[14:26] <user3> I'd rather have the compiler return an error message, given that y doesn't exist

[14:26] *** Khisanth left
[14:26] <user3> referecing the nonexisting variable y isnt detected at compile time :(

[14:27] <araraloren> Yeah, Is it a BUG here .?

[14:27] <user3> ?

[14:29] <araraloren> moritz, Why rakudo not report error when refer a name not exists ?

[14:29] <ufobat> woups

[14:29] <ufobat> moar just crashed

[14:30] *** kaare__ joined
[14:31] *** Praise joined
[14:31] *** Praise left
[14:31] *** Praise joined
[14:32] <dogbert17> m: for <ab:c d$e fgh ij*> { .say if m/<!alpha>/; } # why is 'fgh' printed here?

[14:32] <camelia> rakudo-moar 87d0e0: OUTPUT: «ab:c␤d$e␤fgh␤ij*␤»

[14:34] <araraloren> m: for <ab:c d$e fgh ij*> { if m/<!alpha>/ { say $/; } }

[14:34] <camelia> rakudo-moar 87d0e0: OUTPUT: «｢｣␤｢｣␤｢｣␤｢｣␤»

[14:34] *** dj_goku joined
[14:34] *** dj_goku left
[14:34] *** dj_goku joined
[14:35] <araraloren> +

[14:37] <araraloren> m: for <ab:c d$e fgh ij*> { if m/<:!alpha>/ { say $/; } }

[14:37] <camelia> rakudo-moar 87d0e0: OUTPUT: «｢:｣␤｢$｣␤｢*｣␤»

[14:38] <araraloren> m: for <ab:c d$e fgh ij*> { .say if m/<:!alpha>/; }

[14:38] <camelia> rakudo-moar 87d0e0: OUTPUT: «ab:c␤d$e␤ij*␤»

[14:38] *** dj_goku left
[14:38] <dogbert17> araraloren++, so a colon was missing

[14:39] <araraloren> I dont' know, I was also confused here. 

[14:42] *** Khisanth joined
[14:42] <dogbert17> it's odd, should all subrules have a : in them, e.g. <:digit>

[14:42] *** pilne joined
[14:43] <araraloren> dogbert17, no, document said <digit> is same as <:L>

[14:46] <araraloren> m: for <ab:c d$e fgh ij*> { if m/<alpha><!alpha>/ { say $/; say "-" ~ $/.Str ~ "-"; } }

[14:46] <camelia> rakudo-moar 87d0e0: OUTPUT: «｢b｣␤ alpha => ｢b｣␤-b-␤｢d｣␤ alpha => ｢d｣␤-d-␤｢h｣␤ alpha => ｢h｣␤-h-␤｢j｣␤ alpha => ｢j｣␤-j-␤»

[14:48] <araraloren> I think that what you mean , dogbert17 

[14:49] <araraloren> m: for <ab:c d$e fgh ij*> { .say if m/<-alpha>/; }

[14:49] <camelia> rakudo-moar 87d0e0: OUTPUT: «ab:c␤d$e␤ij*␤»

[14:49] <araraloren> s/that/that's/

[14:50] <araraloren> Add a `-` before character class, indicates a complemented character class

[14:51] <Geth> ¦ doc: 2b4586c2f9 | (Jan-Olof Hendig)++ | doc/Language/variables.pod6

[14:51] <Geth> ¦ doc: Correct the output from a few code examples

[14:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2b4586c2f9

[14:52] <dogbert17> araraloren, many thanks

[14:52] *** kurahaupo joined
[14:52] <araraloren> dogbert17, you are welcome

[14:53] <araraloren> dogbert17, `Note that <!alpha> is different from <-alpha>. /<-alpha>/ is a complemented character class equivalent to /<!before <alpha>> ./, whereas <!alpha> is a zero-width assertion equivalent to a /<!before <alpha>>/ assertion.`

[14:54] <araraloren> I found that in Synopsis .

[14:54] <araraloren> S05

[14:54] <araraloren> That's clear now, I think .

[14:55] *** finanalyst left
[14:56] <Geth> ¦ doc: 77972678ac | (Jan-Olof Hendig)++ | doc/Language/variables.pod6

[14:56] <Geth> ¦ doc: Fixed a broken example. araraloren++

[14:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/77972678ac

[14:56] *** Guest70007 left
[14:57] <dogbert17> araraloren: the docs got improved thanks to you :)

[14:57] *** mr-foobar joined
[14:57] <araraloren> dogbert17, :)

[14:59] *** Ven_ joined
[15:10] <user3> m: module mymod { our $x is export = 42; }; import mymod; say $x;

[15:10] <camelia> rakudo-moar 87d0e0: OUTPUT: «42␤»

[15:10] <user3> just what i need

[15:11] <user3> what difference does this make if I add "is export" after "module mymode"?

[15:11] <user3> m: module mymod is export { our $x is export = 42; }; import mymod; say $x;

[15:11] <camelia> rakudo-moar 87d0e0: OUTPUT: «42␤»

[15:12] <user3> makes no difference. in every example I ran that made no difference lol

[15:13] <user3> that's probably because i only ran basic cases

[15:15] *** lucasb left
[15:17] *** BenGoldberg joined
[15:25] <araraloren> https://docs.perl6.org/syntax/class

[15:26] *** user3 left
[15:28] *** Cabanossi left
[15:30] *** Cabanossi joined
[15:32] *** llfourn left
[15:36] *** vike left
[15:36] <nadim> timotimo: when asked about filding data dumps like the html output does, where did you  want to show it? an application that is done for that? using curses? as part of something else? 

[15:37] *** domidumont joined
[15:38] <ufobat> is there a class in perl6 that acts as a stringbuffer?

[15:38] <nadim> what's a stringbuffer?

[15:39] <nadim> what do you expect it to do?

[15:39] <ufobat> basically str, but immutable. i'd like to have an object and add(Str $s) to it and get the current string in buffer and wipe it

[15:39] <ufobat> s/immutable/mutable/

[15:40] <mst> this seems like a "what are you trying to achieve" sort of situation

[15:41] *** llfourn joined
[15:42] *** domidumont left
[15:42] <ufobat> id like to have an objects that is IO::Handle and whenever i write onto that handle i wand to push it into a "buffer" (thats the add() thing from above) i'd like to get the current buffer, == everything that was written onto that io::handle and then maybe i like to say .wipe() so buffers are clean

[15:42] *** domidumont joined
[15:43] <ufobat> probably a simple @array is sufficient for that, i just thought if there is maybe something and i am reinventing a wheel

[15:44] <nadim> you want to use IO methods on it?

[15:44] <ufobat> aye

[15:44] <ufobat> not necessarily on the stringbuffer itself

[15:44] *** xtreak joined
[15:45] <ufobat> this is more o less what i mean: https://github.com/zoffixznet/perl6-Test-Output/blob/master/lib/Test/Output.pm6#L4

[15:46] *** vike joined
[15:47] *** fatguy joined
[15:48] *** xtreak left
[15:48] *** xtreak joined
[15:54] *** xtreak left
[15:54] *** wigner joined
[15:57] *** Ven_ left
[15:58] *** Cabanossi left
[15:59] *** Praise left
[16:00] *** Cabanossi joined
[16:00] *** Ven joined
[16:00] *** Ven is now known as Guest80608

[16:01] <Geth> ¦ doc: edeb069ce7 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[16:01] <Geth> ¦ doc: [io grant] Document IO::Path.split

[16:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/edeb069ce7

[16:04] <Geth> ¦ doc: 62ec7ff415 | (Zoffix Znet)++ | 2 files

[16:04] <Geth> ¦ doc: Use direct Str.comb/.split links in IO::*Handle methods

[16:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/62ec7ff415

[16:06] *** wigner left
[16:06] *** wigner joined
[16:11] *** sftf joined
[16:22] *** dj_goku joined
[16:22] *** dj_goku left
[16:22] *** dj_goku joined
[16:26] *** llfourn_ joined
[16:27] *** dj_goku left
[16:38] *** Praise joined
[16:38] *** Praise left
[16:38] *** Praise joined
[16:42] *** Zoffix joined
[16:42] <Zoffix> ufobat: there's a bit of a wobbly IO::String module

[16:42] <Zoffix> buggable: eco IO::String

[16:42] <buggable> Zoffix, IO::String 'Emulate file interface for strings': https://github.com/hoelzro/p6-io-string

[16:44] *** Cabanossi left
[16:44] <Zoffix> ufobat: and in upcoming weeks I plan to make IO::UFO module that basically will let users create custom IO::Handles without needing to implement a gazillion methods, but rather a single writer and/or reader, with possibility of overriding extra methods for, say, perf reasons; kinda like the situation with Iterator

[16:45] *** Cabanossi joined
[16:45] <Zoffix> oh

[16:45] <Zoffix> buggable: eco middle

[16:45] <buggable> Zoffix, Found 4 results: Crust::Middleware::Syslog, Crust::Middleware::Session, IO::MiddleMan, Crust::Middleware::Session::Store::DBIish. See https://modules.perl6.org/#q=middle

[16:45] <Zoffix> buggable: eco IO::middle

[16:45] <buggable> Zoffix, IO::MiddleMan 'hijack, capture, or mute writes to an IO::Handle': https://github.com/zoffixznet/perl6-IO-MiddleMan

[16:45] <Zoffix> ufobat: ^ also, maybe that could be useful to whatever you're trying to do

[16:46] * Zoffix wonders how that stuff survived all the recent IO changes

[16:46] <Zoffix> *how well

[16:47] *** Praise left
[16:49] *** Praise joined
[16:49] *** Praise left
[16:49] *** Praise joined
[16:52] *** travis-ci joined
[16:52] <travis-ci> Doc build errored. Zoffix Znet '[io grant] Document IO::Path.split'

[16:52] <travis-ci> https://travis-ci.org/perl6/doc/builds/236915233 https://github.com/perl6/doc/compare/77972678ac21...edeb069ce757

[16:52] *** travis-ci left
[16:58] <Geth> ¦ doc/master: 5 commits pushed by (JJ Merelo)++, (Juan Julián Merelo Guervós)++

[16:58] <Geth> ¦ doc/master: 78fd66c66a | Changes a bit examples and grammar

[16:58] <Geth> ¦ doc/master: 98eee05913 | Merge branch 'master' into extra-twigils

[16:58] <Geth> ¦ doc/master: 1acc2a03fb | Changed to -

[16:58] <Geth> ¦ doc/master: 342f4ccbb7 | Merge branch 'extra-twigils' of github.com:perl6/doc into extra-twigils

[16:58] <Geth> ¦ doc/master: 998d6458ea | Merge pull request #1342 from perl6/extra-twigils

[16:58] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/62ec7ff415...998d6458ea

[17:05] <tbrowder> hi #perl6

[17:05] <Geth> ¦ doc: 1bc6852530 | (Zoffix Znet)++ | doc/Type/IO/Spec/Cygwin.pod6

[17:05] <Geth> ¦ doc: Document that IO::Spec::Cygwin.join swaps slashes

[17:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1bc6852530

[17:05] *** Zoffix left
[17:06] <tbrowder> is there a way to get the line number of the original pod source when using, say, pod2text?

[17:11] *** Ven joined
[17:12] *** Guest80608 left
[17:12] *** Ven is now known as Guest24123

[17:13] *** travis-ci joined
[17:13] <travis-ci> Doc build failed. Juan Julián Merelo Guervós 'Merge pull request #1342 from perl6/extra-twigils

[17:13] <travis-ci> https://travis-ci.org/perl6/doc/builds/236926395 https://github.com/perl6/doc/compare/62ec7ff415fc...998d6458eafa

[17:13] *** travis-ci left
[17:13] *** cognominal joined
[17:16] *** xtreak joined
[17:16] *** Guest24123 left
[17:19] *** Ven_ joined
[17:19] <Geth> ¦ doc: 2d96596ea0 | (Zoffix Znet)++ | 3 files

[17:19] <Geth> ¦ doc: [io grant] Document IO::Spec::*.split

[17:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2d96596ea0

[17:22] *** AlexDaniel left
[17:23] *** xtreak left
[17:26] <Geth> ¦ doc: e10ff7b3a1 | (Jan-Olof Hendig)++ | doc/Language/typesystem.pod6

[17:26] <Geth> ¦ doc: Fixed a few typos

[17:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e10ff7b3a1

[17:27] *** Cabanossi left
[17:29] *** Cabanossi joined
[17:34] *** zakharyas joined
[17:42] <ufobat> .tell zoffix thanks!

[17:42] <yoleaux> ufobat: I'll pass your message to zoffix.

[17:43] *** Ven_ left
[17:45] <ufobat> what if there would be a "src" button on the sites on doc.perl6.org? when you read about a class or something you might wonder about the implementation.. because i click on src on metacpan quite a lot

[17:46] *** Ven_ joined
[17:51] *** Ven_ left
[17:51] *** Ven_ joined
[17:51] *** travis-ci joined
[17:52] <travis-ci> Doc build passed. Zoffix Znet '[io grant] Document IO::Spec::*.split'

[17:52] <travis-ci> https://travis-ci.org/perl6/doc/builds/236930468 https://github.com/perl6/doc/compare/1bc685253024...2d96596ea0b8

[17:52] *** travis-ci left
[17:56] *** Ven_ left
[17:56] <Geth> ¦ doc: 129c09793a | (Zoffix Znet)++ | 2 files

[17:56] <Geth> ¦ doc: [io grant] Document IO::Spec::*.splitdir

[17:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/129c09793a

[17:56] *** Zoffix joined
[17:58] <Zoffix> ufobat: I rather we don't do it. Not only is the docs.perl6.org is meant for Perl 6 the language, without relying on any specific implementation, but I also rather people don't know about the internals. There's been a ton of breakage recently because people assumed some IO::Handle methods were implemented in terms of other methods

[17:58] *** shiven left
[17:59] <Zoffix> Not to mention many methods have multiple candidates for perf reasons, despite the API having just one candidate; which candidate would the docs link to anyway?

[18:00] <Zoffix> ufobat: there's SourceBaby bot in #zofbot  you could use; it provides IRC interface for CoreHackers::Sourcery module:

[18:00] <Zoffix> Zoffix_0 s: Rakudo::Iterator, 'ReifiedList', \([])

[18:00] <Zoffix> SourceBa Zoffix__, Sauce is at https://github.com/rakudo/rakudo/blob/cd6ae22/src/core/Rakudo/Iterator.pm#L2452y

[18:00] <Zoffix> buggable: eco SourceHackery

[18:00] <buggable> Zoffix, Nothing found

[18:00] <Zoffix> buggable: eco Hackery

[18:00] <buggable> Zoffix, Nothing found

[18:00] <Zoffix> stupid bot

[18:00] <Zoffix> buggable: eco CoreHackers

[18:00] <buggable> Zoffix, CoreHackers::Sourcery 'Helper for showing actual source code locations of core subs and methods': https://github.com/zoffixznet/perl6-CoreHackers-Sourcery

[18:01] <Zoffix> there we go

[18:01] *** skids joined
[18:03] <Zoffix> m: say [.file, .line] with &say

[18:03] <camelia> rakudo-moar 6ca702: OUTPUT: «[SETTING::src/core/io_operators.pm 20]␤»

[18:04] <Zoffix> ^ there's also that; though Sourcery gives you a direct link to github for the commit your rakudo is built off of

[18:10] *** dj_goku joined
[18:10] *** dj_goku left
[18:10] *** dj_goku joined
[18:12] <El_Che> NeuralAnomaly, status

[18:12] <NeuralAnomaly> El_Che, [✘] Next release will be in 2 weeks and 5 days. Since last release, there are 25 new still-open tickets (22 unreviewed and 0 blockers) and 279 unreviewed commits. See http://perl6.fail/release/stats for details

[18:13] <sftf> Hi! Anybody now is there Damian Conway's "400 Years of Perl 6" 2017 video?

[18:15] *** dj_goku left
[18:16] <El_Che> sftf: check with sjn if the oslo guys recorded it

[18:19] <sftf> El_Che: thanks

[18:19] *** sftf left
[18:22] *** vytautas joined
[18:26] <vytautas> zef install GTK::Simpler failed

[18:27] *** zacts joined
[18:28] <Zoffix> sftp: there's last year's version; unsure if it changed a lot: https://www.youtube.com/watch?v=Nq2HkAYbG5o

[18:29] <Zoffix> vytautas: did you install the gtk lib? sudo apt-get install libgtk-3-dev

[18:29] <Zoffix> Per https://github.com/perl6/gtk-simple/blob/master/README.md#prerequisites

[18:31] <vytautas> yes i did, at first it failed earlier in the process and i apt-find found it and installed 

[18:31] <vytautas> where do we paste stuff?

[18:33] <Zoffix> vytautas: https://gist.github.com/

[18:33] <Zoffix> Fails for me too

[18:33] * Zoffix looks

[18:37] <Zoffix> ugh, (pod mixed with code)--

[18:39] <vytautas> GTK::Simple works so i will have smth to play with in the meantime

[18:39] <vytautas> simple but not too simple :P

[18:41] <Geth> ¦ doc: 36ea8daedf | (Jan-Olof Hendig)++ | doc/Language/typesystem.pod6

[18:41] <Geth> ¦ doc: Fixed non working code example

[18:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/36ea8daedf

[18:46] <Zoffix> Weird. I get a bunch of "WARNING: unhandled Failure detected in DESTROY … Failure was: No such symbol 'GTK::Simple::App'" from it

[18:47] <Zoffix> With this too: perl6 -e 'sub app (|args) { require GTK::Simple::App; return ::("GTK::Simple::App").new: |args }; for ^50 { app }'

[18:47] <Zoffix> But not this: perl6 -e 'sub app { require GTK::Simple::App; return ::("GTK::Simple::App").new }; for ^50 { app }'

[18:47] <Zoffix> wtf :s

[18:48] <Zoffix> .tell nine getting weird Failures about symbols in GTK::Simpler checkout. Seem to occur only when .new on looked up symbol is given args. Does it look like an issue with Rakudo? https://irclog.perlgeek.de/perl6/2017-05-28#i_14649906

[18:48] <yoleaux> Zoffix: I'll pass your message to nine.

[18:49] <Zoffix> And goes away in perl6 -e 'sub app (|args) { (require GTK::Simple::App).new: |args }; for ^50 { app }'

[18:50] *** wigner left
[18:52] *** darutoko left
[18:52] *** Skarsnik joined
[18:53] * Zoffix knocks it on the head

[18:55] *** Zoffix left
[19:12] <Geth> ¦ doc: a6cd0279ce | (Zoffix Znet)++ | 2 files

[19:12] <Geth> ¦ doc: Use better example in Spec.split

[19:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a6cd0279ce

[19:15] *** brrt joined
[19:20] *** skids left
[19:20] *** TEttinger joined
[19:20] *** domidumont left
[19:26] <Geth> ¦ doc: b9469600d5 | (Zoffix Znet)++ | 3 files

[19:26] <Geth> ¦ doc: [io grant] Document IO::Spec::*.splitpath

[19:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b9469600d5

[19:30] <Geth> ¦ doc: e93159afd4 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[19:30] <Geth> ¦ doc: Improve IO::Path.watch docs

[19:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e93159afd4

[19:33] *** vytautas left
[19:36] *** SCHAPiE left
[19:37] *** AlexDaniel joined
[19:38] *** SCHAPiE joined
[19:39] *** skids joined
[19:39] <AlexDaniel> c: all my $hash-empty = %(); say $hash-empty.^name;

[19:41] *** dct left
[19:41] *** mr-foobar left
[19:41] <AlexDaniel> c: all my $hash-empty = %(); say $hash-empty.^name;

[19:41] <AlexDaniel> :|

[19:42] <AlexDaniel> committable6: help

[19:42] *** committable6 left
[19:42] *** committable6 joined
[19:42] *** ChanServ sets mode: +v committable6

[19:43] <AlexDaniel> c: all my $hash-empty = %(); say $hash-empty.^name;

[19:43] <committable6> AlexDaniel, ¦all (41 commits): «Hash»

[19:43] <AlexDaniel> \o/

[19:43] *** mr-foobar joined
[19:46] *** zakharyas left
[19:47] *** araujo joined
[19:48] <Geth> ¦ doc: 8e5ed872f9 | (Zoffix Znet)++ | 2 files

[19:48] <Geth> ¦ doc: Update docs for the handle encoding refactor

[19:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8e5ed872f9

[19:50] * BenGoldberg wonders why IO::Path.watch does not accept an optional :$scheduler argument.

[19:50] <lizmat> BenGoldberg: because it is a very old proof of concept

[19:51] *** brrt left
[19:52] <Geth> ¦ doc: ef0b809728 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[19:52] <Geth> ¦ doc: Touch up unlink docs

[19:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ef0b809728

[19:52] <Geth> ¦ doc: 93dcea5a8e | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[19:52] <Geth> ¦ doc: Touch up `tell` docs

[19:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/93dcea5a8e

[19:53] <El_Che> Zoffix in on a roll. The IO grant?

[19:55] <AlexDaniel> how can I print rakudo version?

[19:55] <AlexDaniel> I always forget…

[19:55] <El_Che> /opt/rakudo/bin/perl6 --version

[19:55] <AlexDaniel> without that

[19:55] <AlexDaniel> m: say $*PERL # that's not it

[19:55] <El_Che> telepathy?

[19:55] <camelia> rakudo-moar b3cd29: OUTPUT: «Perl 6 (6.c)␤»

[19:56] <AlexDaniel> m: say $*VM # almost but not quite?

[19:56] <camelia> rakudo-moar b3cd29: OUTPUT: «moar (2017.05.25.g.62.bc.54.e.9)␤»

[19:56] <Geth> ¦ doc: 760d0345b9 | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[19:56] <Geth> ¦ doc: Add examples to handle .read/.readchars

[19:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/760d0345b9

[19:58] *** dj_goku joined
[19:58] *** dj_goku left
[19:58] *** dj_goku joined
[20:00] <Geth> ¦ doc: b72cf811d7 | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[20:00] <Geth> ¦ doc: Use `given` instead of `with` in handle opening

[20:00] <Geth> ¦ doc: 

[20:00] <Geth> ¦ doc: These examples might be copy-pasted into code where ignoring

[20:00] <Geth> ¦ doc: failures in open might be a bad idea.

[20:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b72cf811d7

[20:00] <AlexDaniel> m: say $*PERL.compiler.version

[20:00] <camelia> rakudo-moar b3cd29: OUTPUT: «v2017.05.282.gb.3.cd.299.e.1␤»

[20:03] *** travis-ci joined
[20:03] <travis-ci> Doc build errored. Zoffix Znet 'Use better example in Spec.split'

[20:03] <travis-ci> https://travis-ci.org/perl6/doc/builds/236954287 https://github.com/perl6/doc/compare/36ea8daedfb6...a6cd0279cedb

[20:03] *** travis-ci left
[20:03] *** dj_goku left
[20:05] *** travis-ci joined
[20:05] <travis-ci> Doc build failed. Zoffix Znet 'Update docs for the handle encoding refactor'

[20:05] <travis-ci> https://travis-ci.org/perl6/doc/builds/236961044 https://github.com/perl6/doc/compare/e93159afd4f6...8e5ed872f9af

[20:05] *** travis-ci left
[20:07] *** skids left
[20:07] <Skarsnik> $*VERSION ?

[20:08] *** skids joined
[20:08] <lizmat> http://blogs.perl.org/users/domm/2017/05/no-proposal-for-europen-perl-conference-2018-yet.html

[20:12] <Geth> ¦ doc: ef9f453d5a | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[20:12] <Geth> ¦ doc: Remove IO::Path.watch

[20:12] <Geth> ¦ doc: 

[20:12] <Geth> ¦ doc: The method was entirely unspecced and not part of Perl 6 language.

[20:12] <Geth> ¦ doc: 

[20:12] <Geth> ¦ doc: Removed from Rakudo in:

[20:12] <Geth> ¦ doc: https://github.com/rakudo/rakudo/commit/21fd2c4ade

[20:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ef9f453d5a

[20:12] <moritz> nooo

[20:12] <moritz> I actually use that :(

[20:12] <lizmat> nooooo

[20:14] *** Zoffix joined
[20:14] <Zoffix> moritz: use IO::Notification.watch-path: $path

[20:15] <wamba> m: my  $fr=FatRat.new(17685594380071097, 5629499534213120); say $fr," ", $fr.fmt("%.20f") 

[20:15] <camelia> rakudo-moar b3cd29: OUTPUT: «3.14159265358979258 3.14159265358979000000␤»

[20:15] <moritz> Zoffix: that won't help with code published in a print magazine :(

[20:15] <BenGoldberg> Zoffix, It should go through a deprecation cycle.

[20:15] <Zoffix> Well. It was never part of the language :|

[20:16] <moritz> it was documented

[20:16] <moritz> the docs don't make it clear if it's not tested, and thus "never part of the language"

[20:17] <Geth> ¦ doc: 93515a5785 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[20:17] <Geth> ¦ doc: Revert "Remove IO::Path.watch"

[20:17] <Geth> ¦ doc: 

[20:17] <Geth> ¦ doc: This reverts commit ef9f453d5ab4b3fc4637830c4b5ab3ee003088a8.

[20:17] <Geth> ¦ doc: 

[20:17] <Geth> ¦ doc: Per: https://irclog.perlgeek.de/perl6/2017-05-28#i_14650194

[20:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/93515a5785

[20:17] <moritz> thanks

[20:19] *** skids left
[20:22] *** fatguy left
[20:34] *** skids joined
[20:38] <ufobat> could someone explain me the signature of this method? multi method ACCEPTS(Str:D: Str:D \other)

[20:39] <ufobat> i don't get 'Str:D:'

[20:41] <Zoffix> ufobat: the invocant is a string

[20:41] <Zoffix> that isn't a type object

[20:42] <Zoffix> https://docs.perl6.org/type/Signature#index-entry-type_constraint_%3AD-type_constraint_%3AU-type_constraint_%3A__-Constraining_Defined_and_Undefined_Values

[20:44] <ufobat> your link is just about the :U and :D, right?

[20:46] <Zoffix> yeah

[20:46] <Zoffix> m: class Foo { multi method x (Foo:D:) { say "instance" }; multi method x(:Foo:U:) { say "type object" } }; Foo.x; Foo.new.x

[20:46] <camelia> rakudo-moar 65941b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3D:) { say "instance" }; multi method x(:7⏏5Foo:U:) { say "type object" } }; Foo.x; ␤»

[20:46] <ufobat> this was clear

[20:47] <Zoffix> m: class Foo { multi method x (Foo:D:) { say "instance" }; multi method x(Foo:U:) { say "type object" } }; Foo.x; Foo.new.x

[20:47] <camelia> rakudo-moar 65941b: OUTPUT: «type object␤instance␤»

[20:47] <ufobat> but not the 'Str:D:' from 'Str:D: Str:D \other'

[20:47] <ufobat> the very first part

[20:48] <ufobat> a

[20:48] <ufobat> hhh

[20:48] <Zoffix> ufobat: it's two Str:D, the first one being the invocant (the object the method is called on). So, Str.ACCEPTS: 'foo' won't hit that candidate (invocant is not :D); 'foo'.ACCEPTS: 'foo' will (both are :D); 'foo'.ACCEPTS: Str won't (arg is not :D); 'foo'.ACCEPTS: 42 won't (arg is not a Str)

[20:49] <ufobat> got it :)

[20:50] <ufobat> is there a reason for this syntax, now i understand it my first tought is, why do you repeat yourself

[20:50] <Zoffix> Repeat how?

[20:51] <Zoffix> You're specifying two arguments. Hence two Str:Ds

[20:51] <ufobat> why not, for example, just class MyClass { multi method foo(:D:)...}

[20:51] <ufobat> but it is always the same class from method? right

[20:52] <ufobat> i coudnt class Foo { multi method (Bar:D:) {...} } or could i?

[20:53] <Zoffix> Yeah, you could

[20:53] *** travis-ci joined
[20:53] <travis-ci> Doc build errored. Zoffix Znet 'Touch up `tell` docs'

[20:53] <travis-ci> https://travis-ci.org/perl6/doc/builds/236962007 https://github.com/perl6/doc/compare/ef0b809728bc...93dcea5a8eff

[20:53] *** travis-ci left
[20:53] <ufobat> how does it make sense?

[20:55] <ufobat> when i have class Foo with method foo, the invocant is allways Foo (or a class that inherits from it)

[20:56] <Zoffix> m: class Bar {…}; class Foo { multi method x(Bar:) { say "nice subclass, bruh" }; multi method x() { say "booo no subclass" } }; class Bar is Foo {};  Foo.x; Bar.x

[20:56] <camelia> rakudo-moar a47a78: OUTPUT: «booo no subclass␤nice subclass, bruh␤»

[20:56] <ufobat> if Bar inherits from Foo i would change the behaviour of method foo in Bar i would change the source there

[20:56] *** lolo78 left
[20:58] <ufobat> i see

[20:58] <ufobat> thank you Zoffix  :)

[20:58] <Zoffix> And same for Str:D; keep in mind it does Stringy and is Cool, Any, and Mu. It's nice to be explicit and say what the cindidate is for rather than save 3 characters of typing and risk weird bugs when some parent class adds another candidate.

[20:58] <Zoffix> m: class Foo does Stringy { multi method Bool(Any:D) { say 'ooops... this candidate is not being hit' } }.new.Bool.say

[20:58] <camelia> rakudo-moar a47a78: OUTPUT: «True␤»

[20:58] <Zoffix> (and I notice the plain `(:D:)` syntax don't even work

[20:59] <Zoffix> m: class Foo does Stringy { multi method Bool(::?CLASS:D) { say 'ooops... this candidate is not being hit' } }.new.Bool.say

[20:59] <camelia> rakudo-moar a47a78: OUTPUT: «True␤»

[20:59] <Zoffix> m: class Foo does Stringy { multi method Bool(::?CLASS:D:) { say 'ooops... this candidate is not being hit' } }.new.Bool.say

[20:59] <camelia> rakudo-moar a47a78: OUTPUT: «ooops... this candidate is not being hit␤True␤»

[20:59] <Zoffix> guess it could mean that if it were made to work ¯\_(ツ)_/¯

[20:59] <Zoffix> \o

[20:59] *** Zoffix left
[21:02] *** lichtkind joined
[21:05] *** setty1 left
[21:07] *** travis-ci joined
[21:07] <travis-ci> Doc build passed. Zoffix Znet 'Remove IO::Path.watch

[21:07] <travis-ci> https://travis-ci.org/perl6/doc/builds/236966144 https://github.com/perl6/doc/compare/b72cf811d7c5...ef9f453d5ab4

[21:07] *** travis-ci left
[21:08] <Geth> ¦ doc: dcd7490800 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[21:08] <Geth> ¦ doc: [io grant] Fix rmdir docs

[21:08] <Geth> ¦ doc: 

[21:08] <Geth> ¦ doc: - Document sub form takes a list of dirs and returns a list

[21:08] <Geth> ¦ doc: - Toss non-empty-dir-removing snippet as it's buggy and leaks handles.

[21:08] <Geth> ¦ doc:   We have a module for the job; recommend it.

[21:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dcd7490800

[21:10] *** travis-ci joined
[21:10] <travis-ci> Doc build errored. Zoffix Znet 'Use `given` instead of `with` in handle opening

[21:10] <travis-ci> https://travis-ci.org/perl6/doc/builds/236963314 https://github.com/perl6/doc/compare/760d0345b9e3...b72cf811d7c5

[21:10] *** travis-ci left
[21:13] *** pelev joined
[21:15] *** pelev left
[21:16] *** pelev joined
[21:21] *** zacts left
[21:23] *** [1]Jarryd98 joined
[21:25] *** Jarryd98 left
[21:25] *** [1]Jarryd98 is now known as Jarryd98

[21:27] *** bacek__ joined
[21:28] *** travis-ci joined
[21:28] <travis-ci> Doc build passed. Zoffix Znet 'Revert "Remove IO::Path.watch"

[21:28] <travis-ci> https://travis-ci.org/perl6/doc/builds/236967417 https://github.com/perl6/doc/compare/ef9f453d5ab4...93515a5785cd

[21:28] *** travis-ci left
[21:28] *** Cabanossi left
[21:29] *** bacek_ left
[21:29] *** Cabanossi joined
[21:34] *** zacts joined
[21:43] *** zacts left
[21:44] *** zacts joined
[21:45] *** pmurias left
[21:46] *** dj_goku joined
[21:48] *** [1]Jarryd98 joined
[21:50] *** Jarryd98 left
[21:50] *** [1]Jarryd98 is now known as Jarryd98

[21:52] *** dj_goku left
[21:57] *** Skarsnik left
[21:59] *** Cabanossi left
[21:59] *** Cabanossi joined
[22:27] *** Cabanossi left
[22:30] *** Cabanossi joined
[22:50] *** aborazmeh joined
[22:50] *** aborazmeh left
[22:50] *** aborazmeh joined
[22:59] *** espadrine left
[23:16] *** BenGoldberg left
[23:20] *** nowan left
[23:24] *** nowan joined
[23:25] *** rindolf left
[23:31] *** [1]Jarryd98 joined
[23:33] *** Jarryd98 left
[23:33] *** [1]Jarryd98 is now known as Jarryd98

[23:35] *** dj_goku joined
[23:39] *** dj_goku left
[23:41] *** margeas left
[23:49] *** wamba left
[23:59] *** ufobat left
