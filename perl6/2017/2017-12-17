[00:04] <Herby_> MasterDuke: Ah, thanks

[00:04] <Herby_> Ulti: ++ on the advent calendar article

[00:25] *** wamba left
[00:33] *** tyil left
[00:34] *** tyil joined
[00:39] *** sena_kun left
[00:42] *** Cabanossi left
[00:45] *** Cabanossi joined
[01:02] *** raschipi left
[01:13] <RabidGravy> just prepping the advent aricle to post lest anyone is getting nervous

[01:22] <RabidGravy> there, advent article posted

[01:22] <Hotkeys> \o/

[01:23] *** troys_ is now known as troys

[01:23] <RabidGravy> it will be a miracle f there are fewer than ten typos as I went to the supermarket in the middle and had to had a few beers to revover ;-)

[01:23] *** konsolebox left
[01:25] *** Actualeyes joined
[01:30] *** konsolebox joined
[01:30] *** aborazmeh joined
[01:30] *** aborazmeh left
[01:30] *** aborazmeh joined
[01:33] <RabidGravy> So I avoided the bad paragraph break errors from last year, but there are some egregious typos and brainos, but I think I'll leave them as it entertains the language geeks ;-)

[01:36] <geekosaur> typopotamuses?

[01:38] <RabidGravy> :-O

[01:38] <RabidGravy> (also quite ratted now)

[01:39] <RabidGravy> can we move the "advent" to a different time of year, lots of time pressure in december ;-)

[01:40] <RabidGravy> that's https://perl6advent.wordpress.com/2017/12/17/something-about-messaging-but-i-couldnt-think-of-a-snappier-title/ if you want to get in early

[01:50] *** RabidGravy left
[02:01] <Herby_> .tell RabidGray ++

[02:01] <yoleaux> Herby_: I'll pass your message to RabidGray.

[02:03] <Herby_> whoops

[02:03] <Herby_> .tell RabidGravy ++

[02:03] <yoleaux> Herby_: I'll pass your message to RabidGravy.

[02:09] *** troys is now known as troys_

[02:21] *** Herby__ joined
[02:24] *** colomon_ joined
[02:25] <japhb> Where is the source for the advent posts?  I think (at least) the posts for the 14th and the 17th have mangled source code snippets, and I'd like to see the original.

[02:26] *** colomon left
[02:26] *** colomon_ is now known as colomon

[02:26] *** colomon left
[02:26] *** colomon joined
[02:30] *** colomon left
[02:31] *** aborazmeh left
[02:31] *** colomon joined
[02:40] *** colomon left
[02:42] *** aborazmeh joined
[02:42] *** aborazmeh left
[02:42] *** aborazmeh joined
[02:46] *** ilbot3 left
[02:50] *** ChoHag left
[02:56] *** ilbot3 joined
[02:56] *** ChanServ sets mode: +v ilbot3

[03:03] *** agwind joined
[03:05] *** jeek joined
[03:08] *** agwind left
[03:10] *** agwind joined
[03:20] *** piojo_ joined
[03:20] *** araraloren joined
[03:21] <araraloren> 哦|

[03:21] <araraloren> o|

[03:28] <Herby__> \o

[03:33] *** Herby__ left
[03:35] *** raschipi joined
[03:37] *** konsolebox left
[03:38] *** konsolebox joined
[03:40] *** colomon joined
[03:43] *** Cabanossi left
[03:45] *** Cabanossi joined
[03:50] *** troys_ is now known as troys

[04:06] *** agwind left
[04:07] *** agwind joined
[04:12] <Herby_> does p6 have something comparable to python's "setdefault"?

[04:12] <Herby_> for hashes

[04:24] <araraloren> Herby_, I check setdefault of hash in python, I think Perl6 default does that

[04:25] <araraloren> m: my %h = name => 'foo'; say %h; %h<name> = 'bar'; say %h;

[04:25] <camelia> rakudo-moar 53a94fe51: OUTPUT: «{name => foo}␤{name => bar}␤»

[04:26] <araraloren> m: my %h; say %h; %h<name> = 'bar'; say %h;

[04:26] <camelia> rakudo-moar 53a94fe51: OUTPUT: «{}␤{name => bar}␤»

[04:26] *** agwind left
[04:27] <raschipi> M: my %h is default(42); say %h<a>; %h<a> = 55; say %h<a>; %h<a> = Nil; say %h<a>

[04:27] <raschipi> m: my %h is default(42); say %h<a>; %h<a> = 55; say %h<a>; %h<a> = Nil; say %h<a>

[04:27] <camelia> rakudo-moar 53a94fe51: OUTPUT: «42␤55␤42␤»

[04:27] *** agwind joined
[04:29] <araraloren> oh, I am wrong

[04:29] <araraloren> It should be 

[04:29] <araraloren> m my %h = name => 'foo'; say %h; %h<name> //= 'bar'; say %h;

[04:29] <araraloren> m: my %h = name => 'foo'; say %h; %h<name> //= 'bar'; say %h;

[04:29] <camelia> rakudo-moar 53a94fe51: OUTPUT: «{name => foo}␤{name => foo}␤»

[04:30] <araraloren> Herby_, ^^

[04:30] <araraloren> m: my %h = namex => 'foo'; say %h; %h<name> //= 'bar'; say %h;

[04:30] <camelia> rakudo-moar 53a94fe51: OUTPUT: «{namex => foo}␤{name => bar, namex => foo}␤»

[04:51] *** aborazmeh left
[04:54] *** agwind left
[04:55] *** agwind joined
[04:58] <Herby_> araraloren / raschipi: thanks

[04:58] *** Cabanossi left
[04:59] *** Cabanoss- joined
[05:00] *** Cabanoss- is now known as Cabanossi

[05:00] <raschipi> Herby_: You can put a default on any variable, attribute or array.

[05:08] <Herby_> raschipi: can you put a default of any empty hash?

[05:08] <Herby_> like:   current_dict = current_dict.setdefault(letter, {})

[05:08] <Herby_> I'm reading up on tries: https://stackoverflow.com/questions/11015320/how-to-create-a-trie-in-python

[05:08] <raschipi> No idea what that means.

[05:09] <Herby_> sorry, i'm reading that python example of creating a trie

[05:09] <Herby_> and trying to figure out how i'd do it in p6

[05:13] <raschipi> Well, it would be nested hashes from what I'm getting, why do you want it?

[05:14] <raschipi> Yeah, "setdefault" would be //= or = // like araraloren said above.

[05:15] <Herby_> k thanks

[05:35] *** khw left
[05:38] *** TEttinger joined
[05:41] *** Cabanossi left
[05:43] *** agwind left
[05:44] *** Cabanossi joined
[05:45] *** agwind joined
[05:55] *** piojo_ left
[05:55] *** agwind left
[06:00] *** AlexDani` is now known as AlexDaniel

[06:13] *** piojo_ joined
[06:15] *** troys is now known as troys_

[06:21] *** bellagnok256 joined
[06:21] *** bellagnok256 left
[06:26] *** piojo_ left
[06:40] *** wamba joined
[06:45] *** mspo left
[06:57] *** Cabanossi left
[06:59] *** Cabanossi joined
[07:02] *** AlexDaniel left
[07:06] *** raschipi left
[07:20] *** vike joined
[07:20] *** vike left
[07:42] *** Cabanossi left
[07:42] *** vike joined
[07:44] *** vike left
[07:44] *** Cabanossi joined
[07:47] *** rindolf joined
[07:50] *** troys_ is now known as troys

[08:01] *** parv joined
[08:02] *** troys left
[08:03] *** darutoko joined
[08:06] *** AlexDaniel joined
[08:16] <Hotkeys> Perhaps this question is more appropriate here than in #perl6-dev: What kinds of uses might the new/upcoming .toggle have?

[09:10] *** piojo_ joined
[09:22] *** {-puzzle538 joined
[09:22] *** {-puzzle538 left
[09:24] *** xinming_ left
[09:24] *** stammhe367 joined
[09:24] *** stammhe367 left
[09:25] *** dolcissi767 joined
[09:25] *** dolcissi767 left
[09:42] *** pipi931 joined
[09:42] *** pipi931 left
[09:45] *** blowme10 joined
[09:46] *** blowme10 left
[09:46] *** nico291 joined
[09:46] *** nico291 left
[09:48] *** DarthGandalf left
[09:50] *** DarthGandalf joined
[09:54] *** piojo_ left
[09:54] <tyil> today's advent article has a typo in the last sentence, where it says "tutotials"

[09:54] <tyil> should most likely be tutorials

[10:06] <dpk> is there any way in the perl6 repl to disable the 'potential difficulties' warnings? or at least make it still do what it would have done

[10:06] <dpk> (i'm aware this may be bad practice but i'm trying to get a sense for edge cases)

[10:09] <lizmat> s/tutotials/tutorials/ done   # tyil++

[10:11] <tyil> thanks!

[10:25] <AlexDaniel> lizmat: there was a question ↑ about .toggle :)

[10:26] <AlexDaniel> lizmat: if you have a good answer, maybe we can put it into the documentation

[10:28] <lizmat> perhaps an example would work best:

[10:29] <lizmat> in its simplest case, .toggle is like grep *but* once the condition has evaluated to False for the first time, it stops checking

[10:29] <lizmat> m: dd ^10 .map( { .say; $_ } ).grep( * < 5 )

[10:29] <camelia> rakudo-moar 53a94fe51: OUTPUT: «0␤(0, 1, 2, 3, 4).Seq␤1␤2␤3␤4␤5␤6␤7␤8␤9␤»

[10:30] <lizmat> m: dd ^10 .map( { .note; $_ } ).grep( * < 5 )

[10:30] <camelia> rakudo-moar 53a94fe51: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤(0, 1, 2, 3, 4).Seq␤»

[10:30] <lizmat> note that all values have been sayd 

[10:30] <lizmat> m: dd ^10 .map( { .note; $_ } ).toggle( * < 5 )

[10:30] <camelia> rakudo-moar 53a94fe51: OUTPUT: «0␤1␤2␤3␤4␤5␤(0, 1, 2, 3, 4).Seq␤»

[10:30] * tyil notes it

[10:30] <araraloren> It test all value

[10:31] <lizmat> note that with .toggle it only tests until the first False

[10:32] *** sena_kun joined
[10:34] <lizmat> with multiple Callables, you specify condition for inclusion, condition for exclusion, condition for inclusion, etc.

[10:34] <lizmat> dd ^10 .map( { .say; $_ } ).toggle( * < 3, * > 5, * < 9 )

[10:34] *** camelia left
[10:34] <lizmat> m: dd ^10 .map( { .say; $_ } ).toggle( * < 3, * > 5, * < 9 )

[10:34] <evalable6> lizmat, rakudo-moar 53a94fe51: OUTPUT: «0␤(0, 1, 2, 6, 7, 8).Seq␤1␤2␤3␤4␤5␤6␤7␤8␤9␤»

[10:34] <lizmat> m: dd ^10 .map( { .note; $_ } ).toggle( * < 3, * > 5, * < 9 )

[10:34] <evalable6> lizmat, rakudo-moar 53a94fe51: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤(0, 1, 2, 6, 7, 8).Seq␤»

[10:35] <lizmat> if you want to start with an exclusion condition, you need to pass the :off named parameter

[10:36] <lizmat> m: dd ^10 .map( { .note; $_ } ).toggle( :off, * > 3, * < 6, * > 8 )

[10:36] <evalable6> lizmat, rakudo-moar 53a94fe51: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤(4, 5, 9).Seq␤»

[10:37] <lizmat> I'm not awake yet to write coherent documentation  :-)  so if someone else could take a stab, that would be fine by me  :-)

[10:38] *** camelia joined
[10:38] <AlexDaniel> I filed a doc issue here: https://github.com/perl6/doc/issues/1716

[10:38] <AlexDaniel> although… do we have any tests for it in roast?

[10:39] *** ChanServ sets mode: +v camelia

[10:39] <AlexDaniel> heh, evalable6++ :)

[10:43] *** Cabanossi left
[10:44] *** Cabanossi joined
[10:45] *** konsolebox left
[10:45] *** konsolebox joined
[11:02] <lizmat> AlexDaniel: no, no tests for .toggle in roast yet, as I was unsure the implementation would be acceptable by jnthn and TimToady 

[11:02] <lizmat> since they haven't reacted, I guess it means they're ok with it

[11:02] <lizmat> still means we need a .toggle for Supplies as well

[11:03] <lizmat> afk&

[11:03] <Hotkeys> I'm curious what interesting uses people will have for toggle

[11:06] <araraloren> I think it's just a candidates we have :)

[11:24] <TEttinger> Hotkeys: toggle seems handy in general. in clojure it's analogous to take-while and map all rolled up into one procedure that does grep stuff too

[11:25] <TEttinger> since toggle has a stopping condition, it could make dealing with lazy/infinite/very-large sequences easier

[11:26] *** konsolebox left
[11:27] *** |oLa| joined
[11:28] *** Grauwolf left
[11:28] *** konsolebox joined
[11:28] *** Grauwolf joined
[11:30] <TEttinger> the name toggle is just awful though. toggling a switch means turning it off from on, or on from off

[11:31] <TEttinger> and there's none of that here?

[11:31] <TEttinger> is that what the multiple Callables do?

[11:32] <araraloren> Why not add another grep candidate :)

[11:32] <araraloren> or add a :toggle named argument 

[11:37] *** eliasr joined
[11:38] *** Cabanossi left
[11:38] *** Cabanossi joined
[11:42] <Hotkeys> TEttinger: from what I understand it's essentially toggling between a take-while and a skip-until 

[11:42] <Hotkeys> So I don't mind the name

[11:43] <araraloren> :) okay

[11:43] <AlexDaniel> .oO( greggle? 

[11:43] <AlexDaniel> )

[11:48] *** laret709 joined
[11:48] <laret709> 10,08▄10,03▄03,05▄11,04▄03,07▄04,02▄10,04▄12,07▄11,09▄10,03▄02,10▄07,07▄12,13▄05,09▄04 HAPPY NIGGER DAY!! PLEASE SAY HI TO ALL THE DUMB NIGGERS IN #OFTC...quicktalkeh676te.onion/6697dghtweqmkv: camelia colomon tyil darutoko committable6 MasterDuke Herby_ statisfiable6 releasable6 TEttinger rindolf reportable6 bisectable6 |oLa| bloatable6 Voldenet AlexDaniel coverable6 labster r

[11:48] <laret709> 02,13▄13,08▄09,02▄07,11▄03,03▄09,02▄13,11▄09,04▄11,02▄05,05▄03,09▄05,13▄05,11▄03,11▄11,09▄07,13▄07,02▄13 HAPPY NIGGER DAY!! PLEASE SAY HI TO ALL THE DUMB NIGGERS IN #OFTC...quicktalkeh676te.onion/6697vfxtunuyw: committable6 |oLa| afresh1 Cabanossi Hotkeys xcm ryn1x spider-mario TimToady quotable6 jeek comborico1611 benchable6 ilbot3 labster coverable6 greppable6 eva

[11:48] *** laret709 left
[11:53] *** konsolebox left
[11:55] * moritz deletes some spam from IR clogs

[11:57] *** TEttinger left
[11:59] *** konsolebox joined
[12:00] *** piojo_ joined
[12:05] <AlexDaniel> heh, the spam bot went through extra trouble to notify other bots here…

[12:06] *** ZzZombo left
[12:06] *** ZzZombo joined
[12:09] *** piojo_ left
[12:12] *** Cabanossi left
[12:14] *** Cabanossi joined
[12:16] <AlexDaniel> hah, in fact all of them…

[12:19] *** piojo_ joined
[12:37] <tyil> bots need love too

[12:38] <araraloren> O_o

[12:44] *** pecastro left
[12:55] *** parv left
[12:56] <timotimo> Herby_: you don't have to set the default of a hash to an empty hash to get a trie, because autovivification does all that work for you. observe:

[12:56] <timotimo> m: my %trie; %trie<h><e><l><l><o> = 1; say %trie

[12:56] <camelia> rakudo-moar 53a94fe51: OUTPUT: «{h => {e => {l => {l => {o => 1}}}}}␤»

[12:56] <araraloren> Is there a way skip the rest element of a Iterator ?

[12:58] <timotimo> the "rest element"? if you want to skip to the end, you can .sink-all

[12:58] <timotimo> (which will also sink the values)

[12:58] *** AlexDaniel left
[12:58] *** piojo_ left
[12:59] <araraloren> oh, thanks, I found that in document, but not sure

[12:59] <araraloren> I thought there will be a method called skip-all :)

[13:26] *** piojo_ joined
[13:27] *** Cabanossi left
[13:28] *** geospeck joined
[13:29] *** Cabanossi joined
[13:30] *** lasse_ joined
[13:45] *** comborico1611 left
[13:45] *** comborico1611 joined
[13:58] *** AlexDaniel joined
[14:02] *** Hotkeys left
[14:06] *** piojo_ left
[14:07] *** espadrine left
[14:11] *** Cabanossi left
[14:14] *** Cabanossi joined
[14:26] *** andrzejku joined
[14:29] <andrzejku> hi

[14:29] <andrzejku> :)

[14:32] <Geth> ¦ doc: 5c0d7807c1 | (Elizabeth Mattijsen)++ | doc/Type/Telemetry.pod6

[14:32] <Geth> ¦ doc: Update basic Telemetry documentation

[14:32] <synopsebot> Link: https://doc.perl6.org/type/Telemetry

[14:32] <Geth> ¦ doc: 

[14:32] <Geth> ¦ doc: More on the separate instruments to follow

[14:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c0d7807c1

[14:34] <lizmat> timotimo: sometimes I think we need a "done" on Iterators, like we have on Supplies

[14:35] <lizmat> that would default to sink-all

[14:41] *** piojo_ joined
[14:46] *** piojo_ left
[15:05] <Geth> ¦ doc: 5b3f34bc00 | (Elizabeth Mattijsen)++ | doc/Type/Telemetry/Instrument/Usage.pod6

[15:05] <Geth> ¦ doc: First stab at documenting Telemetry::Instrument::Usage

[15:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5b3f34bc00

[15:05] <synopsebot> Link: https://doc.perl6.org/type/Telemetry/Instrument/Usage

[15:05] <lizmat> afk again&

[15:53] *** Celelibi left
[15:56] *** Celelibi joined
[16:00] *** araraloren left
[16:08] *** camelia left
[16:14] *** andrzejku left
[16:15] *** andrzejku joined
[16:17] *** geospeck left
[16:22] <Herby_> timotimo: that is awesome.  Now that I've had a little sleep, I'm going to give tries another look

[16:22] <timotimo> you're gonna give tries another try? :3

[16:22] *** nine left
[16:23] <Herby_> even after multiple tries, i'll give tries another try

[16:23] <Herby_> :)

[16:23] <timotimo> triès bien

[16:23] *** cdg joined
[16:25] * masak .oO( triès bien -- the data structure of choice when a trèes bien is not enough )

[16:25] *** andrzejku left
[16:25] <timotimo> i think i need an explanation for that one, masak 

[16:25] *** david_xd joined
[16:26] <masak> less cerebral than I'd wish

[16:26] <masak> just that two data structures are named 'trie' and 'tree', respectively

[16:26] <timotimo> oh!

[16:26] <timotimo> that's actually not bad at all

[16:27] * masak bows

[16:27] <masak> ...and the correct French spelling is 'très', but who's counting

[16:28] <timotimo> my google chrome does this very annoying thing where code lines in the advent calendar have everything below the baseline cut off :\

[16:29] <timotimo> but not on every line. on most, but a few have their lower parts legible

[16:31] <timotimo> mostly it's g looking like a

[16:31] <timotimo> "what's an exchanae?"

[16:39] *** sena_kun left
[16:45] *** espadrine joined
[16:48] *** geospeck joined
[16:51] *** andrzejku joined
[17:01] *** khw joined
[17:06] <Herby_> timotimo: speaking of tries.  If you have a moment free, could you show me how you'd write this python solution in perl6?

[17:06] <Herby_> https://stackoverflow.com/questions/11015320/how-to-create-a-trie-in-python

[17:06] <Herby_> the accepted answer on that, the function make_trie

[17:07] <Herby_> I can't wrap my head around the current_dict = current_dict.setdefault(letter, {})

[17:07] <Herby_> :(

[17:08] <timotimo> ah, sure

[17:08] <timotimo> so you're starting off with the base dictionary

[17:09] *** |oLa| left
[17:09] <timotimo> then for each letter of the word you access the entry in that dictionary for that letter. if there's no entry yet, an empty dictionary will be created and put there, and that's what gets assigned into current_dict

[17:10] <Herby_> ok

[17:10] <timotimo> it's like you're moving a cursor through the nested dictionaries, creating new empty dictionaries if necessary on the way

[17:11] <Herby_> I just don't see where the actual letter gets inserted in to the dictionary, since it appears to always create an empty dict

[17:11] <timotimo> m: my %a; %a{|("foobar".comb)} = 1; say %a

[17:11] <evalable6> timotimo, rakudo-moar 53a94fe51: OUTPUT: «{a => (Any), b => (Any), f => 1, o => (Any), r => (Any)}␤»

[17:11] <timotimo> oops, wrong one

[17:11] <timotimo> m: my %a; %a{||("foobar".comb)} = 1; say %a

[17:11] <evalable6> timotimo, rakudo-moar 53a94fe51: OUTPUT: «{a => (Any), b => (Any), f => 1, o => (Any), r => (Any)}␤»

[17:11] <timotimo> also not the right one

[17:11] <timotimo> ah, the trick with that is that the letters are keys in the dictionary, not values

[17:11] <timotimo> the only actual value that ever gets stored is "_end_"

[17:12] *** Cabanossi left
[17:14] *** Cabanossi joined
[17:15] <Herby_> hmm

[17:15] <timotimo> so we're starting with an empty dict ("root"), then by going through the word "foo" we do the following:

[17:16] *** nine joined
[17:16] <timotimo> current_dict is "root" first. our first letter is f. we ask for what "root" has stored at f, which is currently nothing. setdefault stores a {} at the l key in "root" for us

[17:16] <timotimo> so our root looks like {"f": {}} now

[17:16] <timotimo> and our current_dict is what setdefault returned, which is that inner empty dict

[17:16] <Herby_> ok

[17:17] <timotimo> next letter is o, and current_dict is the inner dictionary. we ask it to give (and perhaps install {}) what's in that inner dict at key "o"

[17:17] *** camelia joined
[17:17] <timotimo> so it creates that empty dict and we have our root look like {"f": {"o": {}}} and current_dict is the innermost empty dict

[17:17] <timotimo> one more o, the same treatment, but for "one layer" deeper in there

[17:17] <timotimo> gives us {"f": {"o": {"o": {}}}}

[17:18] <timotimo> we're done with the loop and our current_dict is the innermost dict once again

[17:18] <Herby_> ok

[17:18] <timotimo> we store _end at the _end key there, which makes the innermost dict be {"_end_": "_end_"}

[17:18] *** ChanServ sets mode: +v camelia

[17:19] <timotimo> now going with a new word, like "foor", will be very different, because this time there are already dictionaries stored under the keys for "f", "o", and "o"

[17:19] <timotimo> i'll be afk for a bit

[17:20] <Herby_> ok thanks for the explanation

[17:20] *** cdg left
[17:21] *** geospeck left
[17:25] *** andrzejku left
[17:26] *** setty1 joined
[17:32] *** nige joined
[17:32] *** ruschlem joined
[17:33] <nige> hi - I just added advent day 18 and scheduled it for tomorrow morning  

[17:33] <Herby_> nige: o/

[17:33] <Herby_> can't wait to read it

[17:34] *** andrzejku joined
[17:35] <timotimo> i have the power to read it early >:)

[17:37] <Herby_> great power, great responsibility etc

[17:37] *** nige left
[17:38] <timotimo> scheduled in 7 hours, huh?

[17:38] <timotimo> yeah, that sounds perfect

[17:39] *** nige joined
[17:39] <moritz> nige: I've added a "Day 18:" to the title, and set the schedule to midnight. Hope that's fine with you

[17:42] <moritz> just to keep stuff consistent with the other posts

[17:45] <timotimo> aaw, that's a short post :(

[17:50] *** benchable6 left
[17:50] *** benchable6 joined
[17:50] *** ChanServ sets mode: +v benchable6

[17:51] *** piojo_ joined
[17:55] <nige> thanks Moritz - that's fine

[17:58] <nige> moritz btw the grammar chapter in perl 6 fundamentals was very helpful 

[18:01] *** cdg joined
[18:05] *** cdg left
[18:05] *** mziescha joined
[18:08] *** unicodable6 left
[18:08] *** reportable6 left
[18:08] *** squashable6 left
[18:08] *** greppable6 left
[18:08] *** coverable6 left
[18:08] *** nativecallable6 left
[18:08] *** unicodable6 joined
[18:08] *** reportable6 joined
[18:09] *** greppable6 joined
[18:09] *** squashable6 joined
[18:09] *** coverable6 joined
[18:09] *** nativecallable6 joined
[18:09] *** ChanServ sets mode: +v unicodable6

[18:09] *** ChanServ sets mode: +v reportable6

[18:09] *** ChanServ sets mode: +v nativecallable6

[18:14] *** piojo_ left
[18:20] *** agwind joined
[18:21] *** M_o_C joined
[18:31] *** agwind left
[18:32] *** cdg joined
[18:40] *** darutoko left
[18:44] <moritz> nige: thanks for the feedback. There's more detail in https://smile.amazon.com/dp/1484232275/ :-)

[18:59] *** colomon_ joined
[19:00] *** colomon left
[19:00] *** colomon_ is now known as colomon

[19:09] *** andrzejku left
[19:14] *** geospeck joined
[19:24] *** nige left
[19:26] *** nige joined
[19:27] *** Mikasi joined
[19:27] *** Mikasi left
[19:27] *** Mikasi joined
[19:29] *** cdg left
[19:31] <dpk> "A Recursive Descent into Parsing" *groan*

[19:31] *** mziescha left
[19:33] * AlexDaniel sings along

[19:35] *** rindolf left
[19:36] *** rindolf joined
[19:36] *** M_o_C left
[19:37] *** eliasr left
[19:38] * moritz likes the subtitle

[19:42] *** Mikasi left
[19:42] *** nige left
[19:43] *** Cabanossi left
[19:44] *** Cabanossi joined
[19:44] *** nige joined
[19:45] *** andrzejku joined
[19:48] <buggable> New CPAN upload: LIVR-2.1.0.tar.gz by KOORCHIK https://cpan.metacpan.org/authors/id/K/KO/KOORCHIK/Perl6/LIVR-2.1.0.tar.gz

[19:52] *** leah2 left
[19:58] <AlexDaniel> moritz: nothing wrong with it really

[19:59] <Herby_> in that buggable msg: "LIVR-2.1.0.tar.gz" looks to be a hyperlink that goes nowhere

[20:00] <Herby_> not sure if thats for every new CPAN upload msg or not

[20:00] <moritz> huh, works here

[20:00] <jast> works for me, too

[20:00] <jast> maybe there was a bit of a delay before it finished setting itself up?

[20:00] <moritz> wget --quiet https://cpan.metacpan.org/authors/id/K/KO/KOORCHIK/Perl6/LIVR-2.1.0.tar.gz; echo $?

[20:00] <moritz> 0

[20:01] <Herby_> when I click on the bolded "LIVR-2.1.0.tar.gz", it just opens up a webpage with a url of LIVR-2.1.0.tar.gz

[20:01] <jast> oh, that's not a link at all, your client is probably misunderstanding it

[20:01] <Herby_> the cpan link works

[20:01] <Herby_> gotcha

[20:01] <jast> IRC doesn't have a concept of links

[20:01] <Herby_> i'm using hexchat, not sure if that makes a difference

[20:01] <jast> so terminals and clients try to guess, sometimes incorrectly

[20:02] <Herby_> kk

[20:02] <moritz> the IRC logs guess correctly too: https://irclog.perlgeek.de/perl6/2017-12-17#i_15591493

[20:03] <jast> maybe the IRC logs just don't link URIs without protocol prefixes, like example.org

[20:03] <jast> (just verified :))

[20:03] *** colomon left
[20:05] <moritz> that's pretty hard to get right, given the proliferation of TLDs

[20:08] *** leah2 joined
[20:19] *** geospeck left
[20:19] <timotimo> there was this one terminal emulator that would send dns requests out to figure out if something the mouse is hovering over is a valid domain

[20:21] <moritz> "what could possibly go wrong"

[20:36] *** nige left
[20:37] *** nige joined
[20:38] *** david_xd left
[20:40] *** yqt joined
[20:42] *** Hotkeys joined
[20:46] *** colomon joined
[20:53] *** david_xd joined
[20:57] *** committable6 left
[20:57] *** committable6 joined
[20:57] *** ChanServ sets mode: +v committable6

[20:58] *** evalable6 left
[20:58] *** releasable6 left
[20:58] *** bisectable6 left
[20:58] *** bloatable6 left
[20:58] *** statisfiable6 left
[20:58] *** quotable6 left
[20:58] *** quotable6 joined
[20:58] *** bisectable6 joined
[20:58] *** ChanServ sets mode: +v bisectable6

[20:58] *** evalable6 joined
[20:58] *** releasable6 joined
[20:58] *** bloatable6 joined
[20:58] *** statisfiable6 joined
[21:09] *** lasse_ left
[21:16] <nige> surprised to see that perl 6 is not appearing in the timeline: https://en.wikipedia.org/wiki/Timeline_of_programming_languages

[21:20] *** setty1 left
[21:22] *** andrzejku left
[21:30] *** nige left
[21:39] *** yqt left
[21:50] <b2gills> .tell nige There is no entry for any version of Perl other than 1.0 https://en.wikipedia.org/wiki/Timeline_of_programming_languages

[21:50] <yoleaux> b2gills: I'll pass your message to nige.

[21:51] <Geth> ¦ doc: 0++ created pull request #1717: Minor adjustments

[21:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1717

[21:58] <lizmat> b2gills nightfrog https://en.wikipedia.org/wiki/Timeline_of_programming_languages#2010s  # added Perl 6

[21:58] <Herby_> lizmat: ++

[21:58] <lizmat> nightfrog sorry, I meant nige

[21:59] <Herby_> the hyperlink for Perl 6 doesn't go anywhere, not sure if that is intentional or not

[21:59] <Herby_> rather, it doesnt go to an article

[22:00] <b2gills> Should probably point to https://en.wikipedia.org/wiki/Perl_6

[22:01] <lizmat> fixed

[22:01] <Herby_> Huzzah!

[22:03] <MasterDuke> lizmat++. another possible suggestion, rakudo in "The Rakudo Team" could link to https://en.wikipedia.org/wiki/Rakudo_Perl_6. or does that make the entry too busy?

[22:08] <buggable> New CPAN upload: Text-Markov-1.0.1.tar.gz by BBKR https://cpan.metacpan.org/authors/id/B/BB/BBKR/Perl6/Text-Markov-1.0.1.tar.gz

[22:12] <lizmat> MasterDuke: linked the Rakudo Team to the CREDITS page

[22:13] <MasterDuke> good idea, lizmat++

[22:13] <lizmat> also: Perl 6 now links to the Rakudo Perl 6 page, as that was the implementation that became officially released then

[22:15] *** TEttinger joined
[22:21] *** colomon_ joined
[22:22] *** colomon left
[22:22] *** colomon_ is now known as colomon

[22:27] *** Cabanossi left
[22:29] *** Cabanossi joined
[22:31] *** DarthGandalf left
[22:36] *** agwind joined
[22:38] *** colomon left
[22:40] <rindolf> Happy birthday, Perl!

[22:42] *** R0b0t1` left
[22:45] *** R0b0t1` joined
[22:49] <tyil> happy birthday!

[22:52] *** DarthGandalf joined
[22:53] *** colomon joined
[22:57] *** colomon left
[22:58] *** Cabanossi left
[22:59] *** Cabanossi joined
[23:01] *** colomon joined
[23:01] *** ryn1x left
[23:03] <lizmat> whee!   

[23:03] <lizmat> well, at least in NL now  :-)

[23:10] *** rindolf left
[23:15] *** comborico1611 left
[23:15] *** comborico1611 joined
[23:20] *** ryn1x joined
[23:21] *** agwind left
[23:30] *** john_parr left
[23:30] <tyil> lizmat: I can ask sam if she wanna come visit your place when she wakes up, to celebrate the wonders of perl ^^

[23:34] *** david_xd left
[23:38] *** john_parr joined
[23:42] *** astronavt joined
[23:55] *** itaipu joined
[23:57] *** Cabanossi left
[23:59] *** Cabanossi joined
