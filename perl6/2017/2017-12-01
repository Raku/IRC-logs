[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 6 ballots submitted by 6 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 14! Congratulations to jast! You win a roll of duck tape!

[00:00] <Geth> ¦ doc: 1038e87562 | (Tom Browder)++ | doc/Language/tables.pod6

[00:00] <Geth> ¦ doc: use non-breaking spaces

[00:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1038e87562

[00:00] <Geth> ¦ doc: dba00e4572 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[00:00] <Geth> ¦ doc: Merge pull request #1694 from tbrowder/table-talk

[00:00] <synopsebot> Link: https://doc.perl6.org/language/tables

[00:00] <Geth> ¦ doc: 

[00:00] <Geth> ¦ doc: use non-breaking spaces

[00:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dba00e4572

[00:00] <Zoffix> Way to go, jast :)

[00:00] <Zoffix> What time is it?

[00:01] <Zoffix> Iiiiiiiiiiiiiiiitttt'ssss 2017 ADVENT TIME \o/ \o/

[00:01] *** Cabanossi left
[00:01] <Zoffix> Perl 6 2017 Advent Day 1 post: "The Grinch of Perl 6: A Practical Guide to Ruining Christmas": https://perl6advent.wordpress.com/2017/12/01/the-grinch-of-perl-6-a-practical-guide-to-ruining-christmas/

[00:03] *** Cabanossi joined
[00:04] *** Herby_ joined
[00:04] <Herby_> o/

[00:05] <Zoffix> \o

[00:10] * Zoffix calls it a day

[00:10] *** Zoffix left
[00:12] <Slayerk> m: my @n; my $ns  := 1, 2 ... 20; loop (my $i = 1; $i < 100000; $i++) {      if $i %% $nns[^20].all {  @n.push($i);    }}say @n

[00:12] <camelia> rakudo-moar f78fd7c17: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$nns' is not declared. Did you mean '$ns'?␤at <tmp>:1␤------> 3= 1; $i < 100000; $i++) {      if $i %% 7⏏5$nns[^20].all {  @n.push($i);    }}say @␤»

[00:12] <Slayerk> Oops

[00:13] <Slayerk> m: my @n; my $ns  := 1, 2 ... 20; loop (my $i = 1; $i < 100000; $i++) {if $i %% $ns[^20].all {  @n.push($i);    }}say @n;

[00:13] <camelia> rakudo-moar f78fd7c17: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3$i %% $ns[^20].all {  @n.push($i);    }}7⏏5say @n;␤»

[00:14] <Slayerk> m: my @n; my $ns  := 1, 2 ... 20; loop (my $i = 1; $i < 100000; $i++) {if $i %% $ns[^20].all {  @n.push($i);    }} say @n;

[00:14] <camelia> rakudo-moar f78fd7c17: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3$i %% $ns[^20].all {  @n.push($i);    }}7⏏5 say @n;␤»

[00:15] <geekosaur> if you're putting it all on one line like that, you need more semicolons

[00:15] <geekosaur> } at the end of a line (or before another }) inserts a semicolon for you

[00:15] <Slayerk> Okay, maybe 4th time lucky

[00:16] <geekosaur> also, if you're just noodling around (or testing before presenting code to ask a question), consider: /query camelia

[00:17] <Slayerk> Ah, thanks :P

[00:19] *** robertle_ left
[00:20] *** nadim left
[00:22] <Slayerk> Is there a way to estimate how long some code should take to execute?

[00:25] *** lookatme joined
[00:25] <lookatme> o/

[00:25] <Herby_> lookatme: o/

[00:26] <lookatme> haha

[00:26] *** Ven`` left
[00:29] *** Ven`` joined
[00:30] *** margeas left
[00:31] <Herby_> For those that don't know: Advent of Code kicks off in 4.5 hours!

[00:32] <Herby_> http://adventofcode.com/

[00:32] <Herby_> a fun series of programming puzzles

[00:33] <Herby_> speaking of advent, I'm excited to read the first perl 6 advent calendar topic

[00:35] <lookatme> That site is about Perl6 ?

[00:37] <captain-adequate> Looks cool.

[00:37] <Herby_> lookatme: nope, people solve the puzzles with all sorts of programming languages

[00:38] <Herby_> I participated last year, was a lot of fun

[00:38] <lookatme> Oh

[00:38] <Herby_> there is a subreddit for it where people post solutions: https://www.reddit.com/r/adventofcode/

[00:41] *** pentashift left
[00:41] *** char_var[buffer] left
[00:42] *** Slayerk left
[00:42] *** kerframil left
[00:43] *** astronavt joined
[00:46] *** char_var[buffer] joined
[00:47] *** astronavt left
[00:48] *** jast left
[00:48] *** jast joined
[00:52] *** aborazmeh joined
[00:52] *** aborazmeh left
[00:52] *** aborazmeh joined
[00:52] *** troys is now known as troys_

[00:55] <Geth> ¦ ecosystem: a965a84ebc | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[00:55] <Geth> ¦ ecosystem: Add Proxee.pm6 to ecosystem

[00:55] <Geth> ¦ ecosystem: 

[00:55] <Geth> ¦ ecosystem: "A more usable Proxy with bells":

[00:55] <Geth> ¦ ecosystem: - Easy Coercer Proxies

[00:55] <Geth> ¦ ecosystem: - Simplified interface for a regular Proxy

[00:55] <Geth> ¦ ecosystem: - Ability to use automatic storage

[00:55] <Geth> ¦ ecosystem: 

[00:55] <Geth> ¦ ecosystem: https://github.com/zoffixznet/perl6-Proxee

[00:55] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a965a84ebc

[00:57] *** mson joined
[00:59] *** evalable6 joined
[01:00] *** astj joined
[01:00] *** lizmat joined
[01:01] *** jast left
[01:04] *** BenGoldberg joined
[01:04] *** donaldh left
[01:05] *** cdg joined
[01:06] *** jast joined
[01:06] *** pi2 left
[01:06] *** konsolebox left
[01:06] *** donaldh joined
[01:08] *** konsolebox joined
[01:09] *** ivans left
[01:09] *** ivans joined
[01:09] *** cdg_ left
[01:09] *** cdg left
[01:10] *** reportable6 left
[01:10] *** reportable6 joined
[01:10] *** ChanServ sets mode: +v reportable6

[01:12] *** Ven`` left
[01:13] *** pi2 joined
[01:16] *** Ven`` joined
[01:24] *** cdg joined
[01:24] *** llfourn left
[01:28] *** cdg left
[01:30] *** espadrine left
[01:34] *** eliasr left
[01:37] *** jast left
[01:37] *** jast joined
[01:37] *** dayangkun left
[01:43] *** astronavt joined
[01:48] *** cdg joined
[01:48] *** astronavt left
[01:49] <captain-adequate> Yay... My advent calendar just arrived.

[01:53] *** cdg left
[01:56] *** jast left
[01:56] *** jast joined
[02:01] *** Cabanossi left
[02:03] *** Cabanossi joined
[02:04] *** st_elmo left
[02:07] *** ivans_ joined
[02:07] *** Ven`` left
[02:07] *** ivans left
[02:12] *** Morfent left
[02:12] *** Guest98560 left
[02:13] *** perlbot left
[02:14] *** bhm left
[02:20] *** ilogger2_ joined
[02:23] *** TEttinger joined
[02:24] *** zakharyas joined
[02:26] *** ccakes joined
[02:27] *** astj joined
[02:27] *** noganex joined
[02:27] *** krunen joined
[02:30] *** konsolebox joined
[02:44] *** astronavt joined
[02:48] *** Cabanossi joined
[02:49] *** astronavt left
[02:50] *** jeromelanteri joined
[02:55] *** dayangkun joined
[02:56] *** dayangkun left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[02:59] *** itaipu joined
[03:00] *** dayangkun joined
[03:02] *** cdg joined
[03:02] *** ufobat_ joined
[03:03] *** dayangkun left
[03:05] <SmokeMachine> m: https://gist.github.com/FCO/5283312f055b2846f9e7a2990a7a4f25

[03:05] <camelia> rakudo-moar f78fd7c17: OUTPUT: «===SORRY!===␤Could not find Grammar::Tracer at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/perl6␤    Co…»

[03:06] <SmokeMachine> m: https://gist.github.com/FCO/5283312f055b2846f9e7a2990a7a4f25

[03:06] <camelia> rakudo-moar f78fd7c17: OUTPUT: «===SORRY!===␤Something went wrong in (NoMatch)␤»

[03:06] <SmokeMachine> it works if its not a slang... any idea why it doesn't when its a slang?

[03:07] *** cdg left
[03:08] <SmokeMachine> m: https://gist.github.com/FCO/b184fd90cf8913dd462020025890c820

[03:08] <camelia> rakudo-moar f78fd7c17: OUTPUT: «｢<head>bla<br /><form>bla: <input /></form></head>｣␤ p6x-xml => ｢<head>bla<br /><form>bla: <input /></form></head>｣␤  p6x-tag => ｢<head>bla<br /><form>bla: <input /></form></head>｣␤   p6x-open-close-tag => ｢<head>bla<br /><form>bla…»

[03:11] *** cdg joined
[03:16] <lookatme> Can not access gist :(

[03:25] *** Ven`` joined
[03:29] <SmokeMachine> https://www.irccloud.com/pastebin/UKBXgzyk

[03:30] <SmokeMachine> Or http://pasted.co/b3b83f3e

[03:30] <lookatme> First one ok

[03:32] *** kerframil joined
[03:32] <lookatme> The code looks awesome

[03:37] *** itaipu left
[03:40] *** Herby__ joined
[03:41] *** mson joined
[03:44] *** reportable6 joined
[03:44] *** ChanServ sets mode: +v reportable6

[03:44] *** Ven`` left
[03:45] *** astronavt joined
[03:45] *** Cabanossi left
[03:48] *** Cabanossi joined
[03:50] *** astronavt left
[04:03] *** char_var[buffer] joined
[04:08] *** cpage_ joined
[04:15] *** Cabanossi left
[04:17] *** Cabanossi joined
[04:21] *** jast joined
[04:22] *** Ben_Goldberg joined
[04:22] *** Ben_Goldberg is now known as BenGoldberg

[04:25] <Herby__> in python, you can have a something be: self.string = None

[04:25] <Herby__> what is 'None' in perl 6?

[04:27] *** cdg left
[04:28] *** cdg joined
[04:28] *** jast left
[04:31] *** jast joined
[04:32] *** cdg left
[04:33] *** mcmillhj joined
[04:35] *** aborazmeh joined
[04:35] *** aborazmeh left
[04:35] *** aborazmeh joined
[04:36] *** jeromelanteri left
[04:37] <geekosaur> Str

[04:37] <geekosaur> that is, it's a type object

[04:37] <geekosaur> (Any should also work)

[04:37] <Herby__> geekosaur: thanks

[04:37] <Herby__> i'm looking at some python code that looks like:  self._part(name, [], None, clean)

[04:38] <geekosaur> m: my Str $a = 'foo'; $a = Str; dd $a

[04:38] <camelia> rakudo-moar f78fd7c17: OUTPUT: «Str $a = Str␤»

[04:38] <Herby__> so in p6, it might look like:  self!part($name, (), Any, $clean)   ?

[04:38] <geekosaur> generally we prefer the most specific typed undefined applicable

[04:38] <geekosaur> so it depends

[04:39] <geekosaur> (since types help the compiler catch mistakes)

[04:39] <Herby__> gotcha

[04:39] <geekosaur> m: my Str $a = 'foo'; $a = Any; dd $a

[04:39] <camelia> rakudo-moar f78fd7c17: OUTPUT: «Type check failed in assignment to $a; expected Str but got Any (Any)␤  in block <unit> at <tmp> line 1␤␤»

[04:39] <geekosaur> right, didn;t think it would do that

[04:40] <geekosaur> although in that context (only) Nil also works... but it's not general; for a variable, it means "set to whatever was specified by 'is default' trait, or the type's default if none"

[04:42] <Herby__> geekosaur: thank you.  one more basic question. passing an empty anonymous list as an argument?

[04:42] <Herby__> self._part(name, [], None, clean)

[04:43] <geekosaur> that .. depends. I'm still a bit confused by promotion and when Array works for List

[04:45] *** aborazmeh left
[04:46] *** aborazmeh joined
[04:46] *** astronavt joined
[04:46] *** aborazmeh left
[04:46] *** aborazmeh joined
[04:48] <Herby__> Do you futz with functional programming much?

[04:48] <geekosaur> uh. I'm one of the maintainers of xmonad

[04:48] <Herby__> I'm a rookie and I have a hard time with writing OO

[04:49] <geekosaur> (tiling window manager written in Haskell)

[04:49] <Herby__> ahh

[04:49] <Herby__> you familiar at all with python?

[04:49] <geekosaur> not very

[04:49] <geekosaur> I can read it, haven't written very much

[04:49] <Herby__> I'd like to convert this (relatively) simple python library to Perl 6.  But i stumble with OO

[04:49] <Herby__> https://github.com/divijbindlish/parse-torrent-name/blob/master/PTN/parse.py

[04:49] <lookatme> just like me :)

[04:50] <Herby__> vague question, but could I tackle that with FP?

[04:50] <Herby__> FP in perl6

[04:50] *** astronavt left
[04:54] <geekosaur> honestly? if I'm parsing in perl 6 I'd write a Grammar, rather than doing it manually

[04:55] <tony-o> FP ?

[04:55] <lookatme> Hmm, seems like it is a parser

[04:55] <lookatme> Functional Programming

[04:56] <tony-o> ah

[04:57] <tony-o> you could write that parser in a grammar or with fp (i wouldn't write oo for _that_ one in particular)

[04:58] <lookatme> https://github.com/araraloren/perl6-getopt-advance/blob/master/t/04-pair-parser.t#L6 A simple grammar

[05:00] <Herby__> I did try my hand at a basic grammar for it: https://pastebin.com/zmiEnNBE

[05:00] <Herby__> ignore the line numbering

[05:00] <lookatme> So grammar is OO style ? 

[05:01] <lookatme> Oh, you parse a torrent file ?

[05:01] *** Cabanossi left
[05:01] <geekosaur> it's sort of modified OO, but your 'methods' are perl 6's extended regex syntax

[05:01] <geekosaur> token, rule, etc.

[05:01] <tony-o> grammar is, kind of, a more sophisticated regex 

[05:02] <Herby__> grammars seem to have a steep learning curve to do anything useful. for rookies at least

[05:02] * geekosaur kinda got sucked into a support issue elsewhere, sorry

[05:02] <tony-o> and you don't _need_ the actions bit in that file

[05:02] *** Cabanossi joined
[05:04] <Herby__> if you're in the mood for solving puzzles, adventOfCode just went live: http://adventofcode.com/2017/day/1

[05:04] <Herby__> gonna use p6 this year

[05:05] <tony-o> just finished making pp6 tar work 

[05:05] <tony-o> can read tar files from git 

[05:05] <lookatme> great

[05:07] *** Herby__ left
[05:10] *** reportable6 left
[05:10] *** reportable6 joined
[05:16] *** dayangkun joined
[05:18] *** aborazmeh left
[05:27] *** BenGoldberg left
[05:28] *** Nex6 joined
[05:29] *** Nex6 left
[05:29] *** Cabanossi left
[05:32] *** Cabanossi joined
[05:43] *** mcmillhj left
[05:45] *** aborazmeh joined
[05:45] *** aborazmeh left
[05:45] *** aborazmeh joined
[05:47] *** astronavt joined
[05:49] *** llfourn joined
[05:50] *** aborazmeh left
[05:51] *** mson left
[05:51] *** astronavt left
[06:06] *** someuser joined
[06:08] *** konsolebox left
[06:09] *** dayangkun left
[06:13] *** konsolebox joined
[06:14] <moritz> Zoffix++ # https://perl6advent.wordpress.com/

[06:21] <lookatme> moritz++

[06:23] <lookatme> I got the first star :)  http://adventofcode.com

[06:25] <lookatme> https://ideone.com/iUhPA0

[06:31] *** Actualeyes joined
[06:33] *** dayangkun joined
[06:38] *** dayangkun left
[06:40] *** jast left
[06:44] *** geospeck joined
[06:45] *** Cabanossi left
[06:47] *** Cabanossi joined
[06:47] *** dayangkun joined
[06:47] *** astronavt joined
[06:48] *** jast joined
[06:48] *** geospeck left
[06:52] *** astronavt left
[06:59] <Herby_> lookatme: ++!

[07:00] *** dayangkun left
[07:04] *** dayangkun joined
[07:05] <squashable6> Webhook for rakudo/rakudo is now active! Non-blocking is better than blocking.

[07:06] <AlexDaniel> squashable6: next

[07:06] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈2 hours (2017-12-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:08] <squashable6> Webhook for perl6/roast is now active! Approachable is better than simple.

[07:10] *** darutoko joined
[07:10] <AlexDaniel> rakudo and roast repos tracked just in case

[07:12] *** domidumont joined
[07:13] *** abraxxa joined
[07:16] *** abraxxa1 joined
[07:17] *** geospeck joined
[07:17] *** abraxxa left
[07:18] *** domidumont left
[07:18] *** abraxxa1 left
[07:18] *** domidumont joined
[07:18] *** abraxxa joined
[07:19] *** abraxxa left
[07:22] *** wamba joined
[07:22] *** abraxxa joined
[07:23] *** sena_kun joined
[07:26] *** abraxxa left
[07:31] *** jast left
[07:33] *** jast joined
[07:34] *** rindolf joined
[07:37] <lookatme> I complete the first day : https://ideone.com/TX1lqB

[07:39] *** abraxxa joined
[07:42] *** pentashift joined
[07:48] *** astronavt joined
[07:53] *** astronavt left
[08:00] *** Cabanossi left
[08:01] *** Ven`` joined
[08:02] *** ivans joined
[08:02] *** Cabanossi joined
[08:08] *** dayangkun left
[08:20] *** jast left
[08:21] *** jast joined
[08:23] *** dayangkun joined
[08:24] *** sena_kun left
[08:28] *** Ven` joined
[08:28] *** Ven`` left
[08:31] *** Ven` left
[08:39] *** geospeck left
[08:39] *** geospeck joined
[08:40] *** geospeck left
[08:48] *** patrickz joined
[08:49] *** astronavt joined
[08:53] *** astronavt left
[08:57] *** Ven`` joined
[08:57] *** konsolebox left
[08:58] *** patrickz left
[08:58] *** patrickz joined
[08:58] *** konsolebox joined
[08:59] *** wamba left
[08:59] *** patrickz left
[09:00] *** lizmat joined
[09:01] *** zakharyas left
[09:07] *** llfourn left
[09:11] <anop> Is there perl6 projects for BigData ?

[09:11] *** zakharyas joined
[09:12] <Ulti> anop: nothing specific that I know of, if you mean things like bindings to Spark etc.

[09:13] <anop> yes

[09:13] <Ulti> which would be an interesting place for the JVM implementation to go

[09:16] *** konsolebox left
[09:18] *** konsolebox joined
[09:18] *** piojo joined
[09:19] *** lizmat left
[09:23] <buggable> New CPAN upload: Wikidata-API-0.0.3.tar.gz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/Wikidata-API-0.0.3.tar.gz

[09:25] <piojo> I just noticed type restraints aren't working when precompiled. Is this known, or should I file a bug?

[09:25] <piojo> m: sub test(--> Array[Pair]) { return my Pair @pairs; }; test

[09:25] <camelia> rakudo-moar f78fd7c17: ( no output )

[09:26] <piojo> But if you put that in Test.pm6 and run it, with perl6 -I. -MTest -e 'Test::test', it says Type check failed for return value; expected Array[Pair] but got Array[Pair].new()

[09:27] <piojo> I guess being parameterized, this case doesn't get as much testing as the more common types.

[09:28] <piojo> Maybe it only fails for Array[Pair]. Array[Int] works fine.

[09:28] *** nadim joined
[09:30] *** konsolebox left
[09:31] *** konsolebox joined
[09:33] <teatime> is it like Pair([])

[09:34] <teatime> or something

[09:35] *** patrickz joined
[09:39] *** Ven`` left
[09:40] *** piojo1 joined
[09:40] <piojo1> teatime: when I print the type with .WHAT, the type is Array[Pair]

[09:41] <piojo1> And it's the same result if I return Array[Pair].new.

[09:41] *** piojo left
[09:42] *** scimon joined
[09:48] *** jast left
[09:50] *** astronavt joined
[09:53] *** wamba joined
[09:55] *** astronavt left
[09:57] *** robertle joined
[09:58] *** wamba left
[10:04] *** wamba joined
[10:05] *** dayangkun left
[10:06] *** eliasr joined
[10:07] *** mscha joined
[10:07] *** piojo joined
[10:07] <mscha> m: say 'abcdef'.comb.rotate(3); # Do I really need to ...

[10:07] <camelia> rakudo-moar f78fd7c17: OUTPUT: «No such method 'rotate' for invocant of type 'Seq'␤  in block <unit> at <tmp> line 1␤␤»

[10:08] <mscha> m: say 'abcdef'.comb.List.rotate(3); # ... spell it out?

[10:08] <camelia> rakudo-moar f78fd7c17: OUTPUT: «(d e f a b c)␤»

[10:09] *** piojo1 left
[10:12] <piojo> m: 'abcdef'.comb.cache.rotate(3);

[10:12] <camelia> rakudo-moar f78fd7c17: ( no output )

[10:13] <piojo> mscha: because Seq is conceptually not list-like. It's more like an iterator. But you can cache the values and treat it as a list after that.

[10:16] *** wamba left
[10:16] *** zakharyas left
[10:24] *** wander joined
[10:25] <mscha> m: say (1,2,3,4,5) / 2;  # this is fine, but ...

[10:25] <camelia> rakudo-moar f78fd7c17: OUTPUT: «2.5␤»

[10:26] <mscha> m: say (1,2,3,4,5) div 2;  # ..; this isn't.  A bit inconsistent?

[10:26] <camelia> rakudo-moar f78fd7c17: OUTPUT: «Cannot resolve caller infix:<div>(List, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[10:31] *** araraloren joined
[10:31] *** TEttinger left
[10:31] *** lizmat joined
[10:32] <wander> rt#124609

[10:32] <synopsebot> RT#124609 [new]: https://rt.perl.org/Ticket/Display.html?id=124609 Roast rakudo skip/todo test:./S02-magicals/VM.t line:45 reason: 'no VM.signature yet'

[10:33] <wander> it said we don't have $*VM.signature

[10:33] <wander> then I reach here↓

[10:33] <wander> https://github.com/rakudo/rakudo/blob/a1866b7b3339099c06ffb7ee28e721d16558f0a1/src/core/VM.pm#L24-L31

[10:33] <wander> so what it $*VM.signature should be?

[10:33] <wander> s/it//

[10:34] <wander> same as $*VM.properties mentioned by rt#124606

[10:35] <synopsebot> RT#124606 [new]: https://rt.perl.org/Ticket/Display.html?id=124606 Roast rakudo skip/todo test:./S02-magicals/VM.t line:7 reason: 'VM.properties does not exist'

[10:37] *** Ven`` joined
[10:42] *** Ven`` left
[10:51] *** astronavt joined
[10:52] *** cschwenz joined
[10:53] <wander> AlexDaniel: rt#125488 could not be reproduced, maybe it was fixed

[10:54] <synopsebot> RT#125488 [new]: https://rt.perl.org/Ticket/Display.html?id=125488 Some phaser blorsts don't see outer $_

[10:54] <wander> with perl6 -v as "This is Rakudo version 2017.11-44-g4a32089fd built on MoarVM version 2017.11-20-gd23f5ca1 implementing Perl 6.c."

[10:55] *** astronavt left
[10:56] *** cschwenz left
[10:58] *** Ven`` joined
[11:01] *** Cabanossi left
[11:02] *** itaipu joined
[11:02] *** Cabanossi joined
[11:03] *** lizmat left
[11:23] <SmokeMachine> Now there’s more people online, somebody could help me? This grammar works, but when I make it a slang, it breaks... does anyone now why?

[11:24] *** margeas joined
[11:24] <SmokeMachine> m: https://gist.github.com/FCO/b184fd90cf8913dd462020025890c820

[11:24] <camelia> rakudo-moar f78fd7c17: OUTPUT: «｢<head>bla<br /><form>bla: <input /></form></head>｣␤ p6x-xml => ｢<head>bla<br /><form>bla: <input /></form></head>｣␤  p6x-tag => ｢<head>bla<br /><form>bla: <input /></form></head>｣␤   p6x-open-close-tag => ｢<head>bla<br /><form>bla…»

[11:25] <SmokeMachine> m: https://gist.github.com/FCO/5283312f055b2846f9e7a2990a7a4f25

[11:25] <camelia> rakudo-moar f78fd7c17: OUTPUT: «===SORRY!===␤Something went wrong in (NoMatch)␤»

[11:25] *** Ven`` left
[11:25] <DrForr> Oh, we finally have official slang code, neat. Maybe that'll be my new post...

[11:28] <DrForr> The first thing I'd do is encourage you to file a bug, there's no line/file info with the SORRY error.

[11:28] *** cdg joined
[11:29] <SmokeMachine> DrForr: I think you are right!

[11:30] *** mscha left
[11:33] <timotimo> SmokeMachine: it could be the difference between rakudo's ws and the default ws

[11:33] <scimon> https://github.com/Scimon/p6-Game-Sudoku  So here's my holiday work in progress. It's near a point where I might release it. I want to get a solver done (for at least simple solutions) and then look at possibly a puzzle creator. 

[11:33] *** cdg left
[11:34] <SmokeMachine> Another information: when I change the order of the p6x-tags, it changes the error (but the grammar works the same way...)

[11:36] <araraloren> :)

[11:36] <scimon> This morning I was having a conversation with one of the dev managers and he said "Why do you like Perl6 so much?" that took a while. 

[11:37] <teatime> (wildly off-topic:)   1)  https://i.imgur.com/blEwPfJ.png    2)  https://i.imgur.com/TZLSRNM.png   ⇠   Trying out an open-source parametric 3d modeling / cad program.  how cool is that.

[11:38] <SmokeMachine> m: https://gist.github.com/FCO/53427981f39d328599a2b86da46daaad

[11:38] <camelia> rakudo-moar f78fd7c17: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in p6x-unique-tag; couldn't find final '/>' (corresponding starter was at line 60)␤at <tmp>:60␤------> 3<head7⏏5>␤»

[11:38] <moritz> teatime: nice!

[11:38] <teatime> wtb perl6 spreadsheet / something that combined spreadsheet & literate programming

[11:38] <DrForr> teatime: I've had a background idea about a parser/builder for LCAD (LEGO CAD) for a long time.

[11:41] <SmokeMachine> That totally different error occurred just because I changed the order of the p6x-tag

[11:42] *** wamba joined
[11:44] <DrForr> At least that time the line number got in :)

[11:44] <SmokeMachine> Yes...

[11:46] *** notbenh joined
[11:46] <SmokeMachine> I already tried to make it a comment:sym<p6x>, a term:sym<p6x> and a statement_control:sym<p6x>... all with the same error...

[11:46] <timotimo> SmokeMachine: have you tried --rxtrace?

[11:47] <SmokeMachine> timotimo: No! I didn’t know that exists... what does that do?

[11:49] <timotimo> it's an extremely simplistic tool to trace rakudo's stage parse

[11:49] <SmokeMachine> (I’m on my phone now... I can’t try it just now... :(

[11:51] *** astronavt joined
[11:55] <wander> moritz: your ticket rt#76744 performs quite differently now, plz check when you're free

[11:55] <synopsebot> RT#76744 [open]: https://rt.perl.org/Ticket/Display.html?id=76744 [TODO] implement :dba adverbs in regexes

[11:56] <wander> I'm not sure what ':dba' acts

[11:56] *** astronavt left
[12:03] <moritz> m: '(abc' ~~ /'(' ~ ')' .*/

[12:03] <camelia> rakudo-moar f78fd7c17: ( no output )

[12:04] <wander> m: '(abc)' ~~ /'(' ~ ')' .*/

[12:04] <camelia> rakudo-moar f78fd7c17: ( no output )

[12:04] <wander> m: say '(abc)' ~~ /'(' ~ ')' .*/

[12:04] <camelia> rakudo-moar f78fd7c17: OUTPUT: «｢(abc)｣␤»

[12:05] <wander> m: say '(abc)' ~~ /:dba('foo') '(' ~ ')' .*/

[12:05] <moritz> m: grammar A { token TOP { :dba('parenthesis') \( ~ \) .* }; method FAILGOAL($goal) { die $goal } }; A.parse('(abc'))

[12:05] <camelia> rakudo-moar f78fd7c17: OUTPUT: «Nil␤»

[12:05] <camelia> rakudo-moar f78fd7c17: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected closing bracket␤at <tmp>:1␤------> 3($goal) { die $goal } }; A.parse('(abc')7⏏5)␤»

[12:05] <moritz> m: grammar A { token TOP { :dba('parenthesis') \( ~ \) .* }; method FAILGOAL($goal) { die $goal } }; A.parse('(abc')

[12:05] <camelia> rakudo-moar f78fd7c17: ( no output )

[12:05] <moritz> the error is still the same: :dba(...) makes ~ not work

[12:05] <wander> m: say '(abc)' ~~ /:dba('foo') '(' ~ ')' .*/ # seems even break normal matching

[12:05] <camelia> rakudo-moar f78fd7c17: OUTPUT: «Nil␤»

[12:06] <moritz> it's just that the default behavior of ~ switched from "throw an exception" to "call FAILGOAL"

[12:06] <moritz> m: grammar A { token TOP { \( ~ \) .* }; method FAILGOAL($goal) { die $goal } }; A.parse('(abc')

[12:06] <camelia> rakudo-moar f78fd7c17: OUTPUT: «\) ␤  in method FAILGOAL at <tmp> line 1␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[12:07] <moritz> (dba stands for "do business as", and is supposed to set the current rule name for use in error messages)

[12:07] <wander> m: say 'abc' ~~ /:dba('foo') abc/

[12:07] <camelia> rakudo-moar f78fd7c17: OUTPUT: «Nil␤»

[12:07] <wander> m: say 'abc' ~~ / abc/

[12:07] <camelia> rakudo-moar f78fd7c17: OUTPUT: «｢abc｣␤»

[12:08] <wander> is this normal? ':dba' is used for error messages, but it looks like even break a trivial matching

[12:09] <moritz> it is not normals. Hence my bug report.

[12:09] <moritz> *normal

[12:09] <wander> see.

[12:09] *** rp-- joined
[12:09] <jnthn> I'm not totally sure we ever implemented :dba in Rakudo

[12:10] <jnthn> It's certainly in NQP, 'cus we use it for a load of error reporting :)

[12:10] <moritz> jnthn: I'm not sure either, but if it wasn't, at least it was silently ignored instead of f-ing up matches

[12:15] <wander> lizmat: your ticket rt#125488 could not be reproduced, maybe it was fixed

[12:15] <synopsebot> RT#125488 [new]: https://rt.perl.org/Ticket/Display.html?id=125488 Some phaser blorsts don't see outer $_

[12:15] <wander> m: for ^2 { NEXT .say }

[12:15] <camelia> rakudo-moar f78fd7c17: OUTPUT: «0␤1␤»

[12:16] <wander> m: for ^10 { LAST .say }

[12:16] <camelia> rakudo-moar f78fd7c17: OUTPUT: «9␤»

[12:16] <moritz> write tests, close? :-)

[12:16] <AlexDaniel> wander: any chance you can send that as a reply to the ticket? (so that the info is not lost)

[12:17] <wander> I'm not familiar with rt system, let me try(maybe spend some time)

[12:17] <AlexDaniel> wander: here's how to do that without an account: https://github.com/rakudo/rakudo/wiki/Rakudo-SQUASHathon-Guide#writing-a-comment

[12:18] <wander> got it.

[12:19] <wander> moritz: where do you think that the test should be? S04-phasers?

[12:19] <moritz> wander: yes, sounds good

[12:21] <AlexDaniel> wander: as for when it was fixed, here's what can be tried

[12:22] <AlexDaniel> 6c: for ^2 { NEXT .say }

[12:22] <committable6> AlexDaniel, https://gist.github.com/c52d9b13c9660c4f19f29dd61cdd2ead

[12:22] <AlexDaniel> bisect: for ^2 { NEXT .say }

[12:22] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=f78fd7c). Old exit code: 1

[12:22] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/d6196ac9ab8a00f0da4a7e2b3b59c0e2

[12:22] <bisectable6> AlexDaniel, (2016-08-03) https://github.com/rakudo/rakudo/commit/5e61516a3fd290d93a7e18899483ccb2b9ba3a30

[12:23] <AlexDaniel> c: 5e61516a3fd^,5e61516a3fd for ^2 { NEXT .say }

[12:23] <committable6> AlexDaniel, ¦5e61516a3fd^: «Cannot call method 'say' on a null object␤  in block <unit> at /tmp/aF0nV9Cmus line 1␤␤ «exit code = 1»» ¦5e61516: «0␤1␤»

[12:24] <AlexDaniel> wander: yeah. ↑

[12:24] <wander> thanks

[12:25] *** wamba left
[12:26] <AlexDaniel> squashable6: status

[12:26] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:26] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/822bdcff2e0e5e2ee3a9ff7262cd04dd

[12:26] <AlexDaniel> squashable6 will not announce updates on RT, but I hope we can live with that :)

[12:27] * AlexDaniel leaves for ≈5 hours

[12:27] *** rp-- left
[12:29] *** rp-- joined
[12:32] *** ihabhussein joined
[12:33] *** ihabhussein left
[12:34] *** ihabhussein joined
[12:37] *** abraxxa left
[12:41] *** araraloren_ joined
[12:41] *** MarufCetin joined
[12:42] *** MarufCetin left
[12:44] *** rp-- left
[12:44] *** araraloren left
[12:46] *** cdg joined
[12:47] *** rp-- joined
[12:48] *** pentashift left
[12:48] *** pentashift joined
[12:50] *** ihabhussein left
[12:50] *** ihabhussein joined
[12:50] *** cdg left
[12:51] <squashable6> 🍕🍕🍕  First contribution by W4anD0eR96++! ♥

[12:52] *** astronavt joined
[12:54] *** pentashift left
[12:55] *** pentashift joined
[12:56] <squashable6> 🍕 W4anD0eR96++ opened pull request “Test for RT #125488”: https://github.com/perl6/roast/pull/362

[12:56] <synopsebot> RT#125488 [new]: https://rt.perl.org/Ticket/Display.html?id=125488 Some phaser blorsts don't see outer $_

[12:57] *** astronavt left
[12:58] *** sena_kun joined
[12:58] *** ufobat_ left
[13:02] *** telex joined
[13:09] <wander> bisect:  enum Color (<red green purple> Z=> 1,2,4);

[13:09] <bisectable6> wander, On both starting points (old=2015.12 new=f78fd7c) the exit code is 0 and the output is identical as well

[13:09] <bisectable6> wander, Output on both points: «»

[13:11] <wander> c: a3869a^, a3869a enum Color (<red green purple> Z=> 1,2,4);

[13:11] <committable6> wander, ¦a3869a^,a3869a: «No build for this commit»

[13:11] <timotimo> maybe no space allowed in between?

[13:12] *** AlexDaniel joined
[13:13] *** AlexDaniel left
[13:15] <wander> c: a3869a^,a3869a enum Color (<red green purple> Z=> 1,2,4);

[13:15] <committable6> wander, ¦a3869a^,a3869a: «No build for this commit»

[13:17] <SmokeMachine> timotimo: https://gist.github.com/FCO/992c0d2bf548e2eadac70bfcc0b6f871

[13:18] <timotimo> wow, that is gigantic

[13:18] *** geospeck joined
[13:21] *** ihabhussein left
[13:22] *** geospeck left
[13:24] <squashable6> 🍕 W4anD0eR96++ wrote a comment on commit 1fbabe9b5757: https://github.com/perl6/roast/commit/1fbabe9b57576095a96c2e813c534892efc69596#commitcomment-25981254

[13:25] *** geospeck joined
[13:31] *** mson joined
[13:34] <wander> I try to write a e-mail with title '[perl #125488]' to [email@hidden.address] but it seems got lost

[13:34] <wander> I don't know why

[13:35] <SmokeMachine> timotimo: yes... it is... :(

[13:36] <AlexDaniel`> You have to wait a little bit I think

[13:37] <AlexDaniel`> wander: have you tried creating an account? Might be worth it

[13:38] <wander> quite a while :P

[13:39] *** wamba joined
[13:41] <squashable6> 🍕🍕🍕  First contribution by timo++! ♥

[13:41] <AlexDaniel`> wander: what do you mean?

[13:42] *** ufobat_ joined
[13:42] <wander> I sent that e-mail 30 minutes ago

[13:43] <moritz> there's a manual approval process for mails from senders that haven't been seen before

[13:43] <wander> and I'm afraid if I write in the wrong format :P

[13:44] <squashable6> 🍕 tbrowder++ synchronize pull request “add new tests for fix to rakudo repo issue #1282”: https://github.com/perl6/roast/pull/361

[13:44] <squashable6> 🍕🍕🍕  First contribution by tbrowder++! ♥

[13:45] <AlexDaniel`> Sometimes emails to rt are just lost...

[13:48] *** cdg joined
[13:49] <moritz> https://news.ycombinator.com/item?id=15822649 # p6advent discussion on HN

[13:50] *** wamba left
[13:52] <AlexDaniel`> moritz: oh gosh :D

[13:53] <timotimo> oh, phlogistique, i know that person

[13:53] <AlexDaniel`> Well guess they are not going to like my perl6 golf post

[13:53] <timotimo> if it's the same person

[13:53] *** astronavt joined
[13:53] <moritz> still, the post is ranked #5 right now

[13:57] <perlpilot> TIL about nextcallee  (even though it's been there for 2 years, I don't think I've encountered it before)

[13:58] *** astronavt left
[14:00] *** Cabanossi left
[14:02] *** Cabanossi joined
[14:04] *** raiph joined
[14:04] *** rp-- left
[14:06] *** AlexDaniel joined
[14:10] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Test for RT #125488”: https://github.com/perl6/roast/pull/362#issuecomment-348503849

[14:10] <squashable6> 🍕🍕🍕  First contribution by AlexDaniel++! ♥

[14:10] <synopsebot> RT#125488 [new]: https://rt.perl.org/Ticket/Display.html?id=125488 Some phaser blorsts don't see outer $_

[14:14] <squashable6> 🍕 W4anD0eR96++ wrote a comment on “Test for RT #125488”: https://github.com/perl6/roast/pull/362#issuecomment-348504945

[14:15] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Test for RT #125488”: https://github.com/perl6/roast/pull/362#issuecomment-348505128

[14:16] *** ufobat_ left
[14:18] *** geospeck left
[14:18] *** geospeck joined
[14:18] *** geospeck left
[14:23] <squashable6> 🍕 W4anD0eR96++ synchronize pull request “Test for RT #125488”: https://github.com/perl6/roast/pull/362

[14:23] <synopsebot> RT#125488 [new]: https://rt.perl.org/Ticket/Display.html?id=125488 Some phaser blorsts don't see outer $_

[14:24] <squashable6> 🍕 W4anD0eR96++ merged pull request “Test for RT #125488”: https://github.com/perl6/roast/pull/362

[14:26] <AlexDaniel> wander: can you also include a test for FIRST, LEAVE, PRE, UNDO, KEEP?

[14:27] <AlexDaniel> what you've done is enough to close the ticket, but not enough to prevent regressions from happening :)

[14:28] <wander> aha, you're right

[14:32] *** sena_kun left
[14:37] *** rp-- joined
[14:38] <wander> AlexDaniel: 

[14:38] <wander> m: for ^10 { KEEP .say ; 42 }

[14:38] <camelia> rakudo-moar 5929887c7: OUTPUT: «WARNINGS for <tmp>:␤0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤Useless use of constant integer 42 in sink context (line 1)␤»

[14:39] <wander> shouldn't it `say 42` 10 times?

[14:39] <wander> we have doc "For phasers such as KEEP and POST that are run when exiting a scope normally, the return value (if any) from that scope is available as the current topic within the phaser."

[14:39] <AlexDaniel> ha…

[14:39] <timotimo> yeah, that should probably give you 42 there, and maybe not warn about sink context

[14:40] <AlexDaniel> the sink context is right

[14:40] <AlexDaniel> m: say (for ^10 { KEEP .say ; 42 })

[14:40] <camelia> rakudo-moar 5929887c7: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤(42 42 42 42 42 42 42 42 42 42)␤»

[14:40] <timotimo> shouldn't having a keep phaser change that?

[14:41] <moritz> no

[14:41] <timotimo> OK

[14:41] <moritz> at least, I don't think so :-)

[14:41] <moritz> KEEP is for successful scope exits, no?

[14:41] <timotimo> yes

[14:42] <AlexDaniel> 6c: say (for ^10 { KEEP .say ; 42 })

[14:43] <committable6> AlexDaniel, ¦6c (25 commits): «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤(42 42 42 42 42 42 42 42 42 42)␤»

[14:43] <AlexDaniel> c: all say (for ^10 { KEEP .say ; 42 })

[14:43] <committable6> AlexDaniel, https://gist.github.com/43ce73f89c022479b9de6953a83e6227

[14:43] *** rp-- left
[14:49] *** mcmillhj joined
[14:51] *** stmuk joined
[14:54] *** astronavt joined
[14:55] <AlexDaniel> m: enum RT116719 (<red green purple> Z=> 1,2,4); dd RT116719.enums

[14:55] <camelia> rakudo-moar 5929887c7: OUTPUT: «Map.new((:green(2),:purple(4),:red(1)))␤»

[14:55] <synopsebot> RT#116719 [open]: https://rt.perl.org/Ticket/Display.html?id=116719 [BUG] Internal error message on Z=> in enum declaration in Rakudo

[14:55] <AlexDaniel> bisect: old=HEAD~50 enum RT116719 (<red green purple> Z=> 1,2,4); dd RT116719.enums

[14:55] <bisectable6> AlexDaniel, Bisecting by output (old=HEAD~50 new=5929887) because on both starting points the exit code is 0

[14:55] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/a8b354f8e35060af3830745e703f86ab

[14:55] <bisectable6> AlexDaniel, (2017-11-27) https://github.com/rakudo/rakudo/commit/d9021cf16e7df051c5e17c33919c9bde44c5e0db

[14:56] <AlexDaniel> c: d9021cf16e^,d9021cf16e enum RT116719 (<red green purple> Z=> 1,2,4); dd RT116719.enums

[14:56] <committable6> AlexDaniel, ¦d9021cf16e^: «Map.new(("green\t2" => 1,"purple\t4" => 2,"red\t1" => 0))␤» ¦d9021cf: «Map.new((:green(2),:purple(4),:red(1)))␤»

[14:58] *** astronavt left
[14:59] *** philomath joined
[15:01] <Herby_> o/

[15:04] *** mniip joined
[15:05] *** nhywyll joined
[15:05] *** philomath left
[15:06] <AlexDaniel> wander: https://rt.perl.org/Ticket/Display.html?id=116719#txn-1511945

[15:06] <AlexDaniel> wander++

[15:07] <AlexDaniel> timotimo: “maybe no space allowed in between?” spaces are allowed :)

[15:08] <AlexDaniel> it said “No build for this commit” because it's a commit from 2013

[15:08] <AlexDaniel> and the first release of rakudo on moar is 2014.01

[15:08] <AlexDaniel> in theory bisectable can be improved to be able to bisect rakudo-parrot, but should I really spend my time on that? :P

[15:09] <AlexDaniel> that'd be really fun tho

[15:09] <Geth> ¦ doc: 964e169d6d | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[15:09] <Geth> ¦ doc: try another fix for the table

[15:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/964e169d6d

[15:09] <synopsebot> Link: https://doc.perl6.org/language/regexes

[15:10] <squashable6> 🍕 zoffixznet++ opened issue “[6.d BLOCKER] Implement …”: https://github.com/rakudo/rakudo/issues/1289

[15:10] <squashable6> 🍕🍕🍕  First contribution by zoffixznet++! ♥

[15:12] <squashable6> 🍕 zoffixznet++ edited issue “[6.d BLOCKER] Implement …”: https://github.com/rakudo/rakudo/issues/1289

[15:13] <squashable6> 🍕 zoffixznet++ edited issue “[6.d BLOCKER] Implement …”: https://github.com/rakudo/rakudo/issues/1289

[15:14] <squashable6> 🍕 AlexDaniel++ opened issue “KEEP does not set $_ to the return value”: https://github.com/rakudo/rakudo/issues/1290

[15:15] <AlexDaniel> wander: https://rt.perl.org/Ticket/Display.html?id=125488#txn-1511951

[15:15] <AlexDaniel> wander++ :)

[15:17] *** comborico1611 joined
[15:18] *** wamba joined
[15:18] <Herby_> AlexDaniel: for the squishathon, is there an easy way to identify low-hanging fruit for newbies?

[15:19] <AlexDaniel> Herby_: it depends. The idea behind this particular squashathon this month is about MOLD tickets: https://fail.rakudo.party/t/MOLD

[15:19] <AlexDaniel> Herby_: there are some docs on https://github.com/rakudo/rakudo/wiki/MOLD-Removal-SQUASHathon

[15:20] <Herby_> Ah ok

[15:20] <AlexDaniel> Herby_: basically if you find a ticket in that list, and you can still reproduce the issue, than you leave a comment and that's a good enough contribution :)

[15:20] <AlexDaniel> Herby_: that's probably low-hanging enough

[15:20] <Herby_> sounds doable :)

[15:20] *** Ven`` joined
[15:20] <AlexDaniel> then*

[15:24] <squashable6> 🍕 zoffixznet++ edited issue “[6.d BLOCKER] Implement …”: https://github.com/rakudo/rakudo/issues/1289

[15:24] *** domidumont left
[15:30] *** AlexDaniel left
[15:37] <Geth> ¦ doc: bac6a7112c | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[15:37] <Geth> ¦ doc: add escapes back

[15:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bac6a7112c

[15:37] <synopsebot> Link: https://doc.perl6.org/language/regexes

[15:39] *** nhywyll is now known as natrys

[15:41] *** mson left
[15:47] *** pmurias joined
[15:48] *** natrys left
[15:48] *** nhywyll joined
[15:49] <pmurias> AlexDaniel`: why do a Perl 6 golf post?

[15:49] *** nhywyll left
[15:50] *** Ven`` left
[15:50] *** natrys joined
[15:52] *** domidumont joined
[15:53] *** domidumont left
[15:53] *** Zoffix joined
[15:54] <[Coke]> because it's fun?

[15:54] <Zoffix> pmurias: why do any post? :)  Golf post is good. It'll let people glance at readable concice Perl 6 code.

[15:54] *** astronavt joined
[15:55] <Zoffix> ZofBot: concice is conciser

[15:55] <ZofBot> Zoffix, right, but even the error message implies something strange

[15:56] <DrForr> And fan the flames over people gleefully pointing out the proof that P6 is even more write-only on the HN article. (not that I truly care about such things...)

[15:57] *** domidumont joined
[15:57] *** jast joined
[15:58] <Zoffix> DrForr: "even more write-only" than what?

[15:58] <DrForr> 5, natch.

[15:59] <Zoffix> DrForr: but it isn't. Why would anyone point it out?

[15:59] *** astronavt left
[16:00] <[Coke]> Wy does any troll.

[16:00] <[Coke]> *why

[16:00] <DrForr> Because it gives them something to feel superior and say "See, *my* favorite language is better than *yours*, because reasons."

[16:00] *** matthias__ joined
[16:00] <Zoffix> That's no reason to avoid writing an article.

[16:01] <Zoffix> Otherwise, we'd not write anything. And sit quietly in a corner, afraid to be noticed.

[16:01] <Zoffix> Time to grow some… whatever bodypart gives you courage… and write stuff :)

[16:01] <Zoffix> Still three spots left. Sign up: https://github.com/perl6/mu/blob/master/misc/perl6advent-2017/schedule

[16:01] <Herby_> Zoffix: ++ on the advent article

[16:01] <matthias__> Hi everyone. How can I type a constant? As in give it a type.

[16:02] <Zoffix> matthias__: it's a constant. It doesn't need a type

[16:02] <DrForr> Didn't say it was, pmurias was asking rhetorically "why..."

[16:03] <Zoffix> DrForr: you mentioned flame fanning. That sounded like critique against writing to me :)

[16:04] <DrForr> Coming from someone who's just written a blog post and is writing an advent post over the weekend :)

[16:04] <DrForr> It would be hypocritical of me to advocate against writing and then go on writing :)

[16:04] <comborico1611> Matthias__ variables are constant by default in perky, i think. I'm new.

[16:04] <comborico1611> Perl6

[16:05] <jnthn> m: my Int constant c = 42

[16:05] <camelia> rakudo-moar 5929887c7: ( no output )

[16:05] <jnthn> Our `our` depending on the desired scope

[16:05] <DrForr> Some days I tire of this and think I missed my true calling as a watchmaker, don't know why.

[16:05] <Zoffix> m: my Int constant c = 42e0

[16:05] <camelia> rakudo-moar 5929887c7: ( no output )

[16:05] <Zoffix> :)

[16:05] <Geth> ¦ doc: 25fcf0137e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[16:05] <Geth> ¦ doc: correct table cell content

[16:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/25fcf0137e

[16:05] <synopsebot> Link: https://doc.perl6.org/language/regexes

[16:06] *** mson joined
[16:06] <comborico1611> Zoffix, 3 spots left to create Advent puzzle?

[16:06] <matthias__> Zoffix: jnthn: I see, thanks.

[16:07] <Zoffix> comborico1611: three empty spots to sign up to write Advent blog posts.

[16:07] <comborico1611> I see. I'm not qualified.

[16:07] <Zoffix> There're 24 posts altogether; one per day, so number of spots is limited

[16:07] <Zoffix> comborico1611: why not?

[16:07] <Zoffix> comborico1611: have you used Perl 6 at all?

[16:07] <comborico1611> I'm floating all over the place with programming languages.

[16:07] <Zoffix> :)

[16:07] *** Ven`` joined
[16:07] <DrForr> comborico1611: No less qualified than anyone writing, that's impostor syndrome talking :)

[16:08] <comborico1611> All I've done is red three quarters of a book.

[16:08] <DrForr> comborico1611: All the more reason, you have a perspective most of us don't :)

[16:08] <comborico1611> True.

[16:08] <perlpilot> comborico1611: what DrForr said.  Share your experience

[16:08] <comborico1611> Haha. You guys are funny.

[16:08] <DrForr> Which book, BTW?

[16:08] <comborico1611> Think Perl6

[16:09] <perlpilot> comborico1611: alternatively, you could give a kind of book review  :)

[16:09] <matthias__> jnthn: So whenever I explicitly add a type I have to explicitly set `my` or `our`? Is there reason for constants not defaulting to `our` in that case as well?

[16:09] <DrForr> Ah cool, I need to pick up my copy; probably at FOSDEM and see about getting it signed :)

[16:09] <comborico1611> Hmm. I do have a book review in-the-works for this book.

[16:09] <comborico1611> Nice.

[16:10] *** Ven`` left
[16:10] <comborico1611> I want to hear jnth say a book review would be fine for Advent post.

[16:10] <Zoffix> comborico1611: see my last eval above; jnthn's way isn't working. It's constant without a container and with a mandatory. It doesn't need a type. How come you're trying to set the type?

[16:10] <comborico1611> Then i will do it. :-)

[16:11] <Zoffix> A book review is fine for Advent post.

[16:11] <Zoffix> *mandatory value

[16:11] <jnthn> matthias__: The declarator is required so we know to parse a type next. That's just the way the syntax works; it's consistent with every other declarator in the language.

[16:11] <comborico1611> Alright.

[16:11] <perlpilot> comborico1611: it's weird that you would single one jnthn as the arbiter of what's good for an advent post.

[16:11] <comborico1611> I'm not trying to set a type const.  I was just trying to answer matthias's question.

[16:12] <DrForr> No need to ask permission, just add yourself to the list :)

[16:12] <Zoffix> comborico1611: oh, right, too many people. Wrong person :)

[16:12] <perlpilot> s/single one/single out/   # I swear, my brain is weird

[16:12] <comborico1611> Perlpilot, yeah, sorry no offense. I just don't know who's in charge here. And I don't want to commit myself to that post and look like an idiot if that content isn't suitable for Advent.

[16:12] <Zoffix> No one's in charge. Anarchy \o/

[16:13] <comborico1611> I doubt that.

[16:13] <comborico1611> I will sign.

[16:13] <scimon> So.... I love perl6's operator chaining. Is there a good explanation anywhere of how it works though? 

[16:13] <scimon> m: say [(^)] ( (1,2,3,4), (5, 8, 9), (2,3,4,5), (5,8,9) ).pick(4)

[16:13] <camelia> rakudo-moar 5929887c7: OUTPUT: «set(1)␤»

[16:14] <perlpilot> comborico1611: okay ... I'll claim to be "in charge" since colomon and I first setup the Perl 6 advent calendar all those years ago.   And since I'm in charge.  Write something!  We'll help if you need it.

[16:14] <scimon> The fact that always returns 1 is frankly mindblowing. 

[16:14] <perlpilot> :-)

[16:14] <comborico1611> How to I sign up? 

[16:14] <comborico1611> Haha. That's funny that you happen to be the guy that set it up.

[16:14] <Zoffix> comborico1611: add yourself to one of the three empty spots here: https://github.com/perl6/mu/blob/master/misc/perl6advent-2017/schedule

[16:15] <Zoffix> Click the pencil icon in top right and edit and then submit

[16:15] *** Cabanossi left
[16:15] <perlpilot> comborico1611: If you don't already have a WP account, give me your email and I'll send you and invite

[16:15] *** Ven`` joined
[16:15] <comborico1611> K. Yeah, i needed to pencil icon tip, because i have no idea how gutbug works.

[16:15] <comborico1611> GitHub

[16:16] *** matthias__ left
[16:16] <Zoffix> comborico1611: here, use this link: https://github.com/perl6/mu/edit/master/misc/perl6advent-2017/schedule

[16:16] <Zoffix> comborico1611: alternatively, just tell me the day you want and I'll add you

[16:16] <comborico1611> Heh.  I need a week, at least.

[16:17] *** Ven`` left
[16:17] <Zoffix> comborico1611: OK. So 16th or 21st?

[16:17] *** Cabanossi joined
[16:17] <comborico1611> 21st

[16:18] <comborico1611> Eh, 16th if you haven't set it.

[16:18] <Geth> ¦ mu: c97bfda436 | (Zoffix Znet)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[16:18] <Geth> ¦ mu: Put comborico1611 for 21st

[16:18] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/c97bfda436

[16:18] <perlpilot> comborico1611: and your email address?  (so I can invite you)

[16:19] <Geth> ¦ mu: 99245888f6 | (Zoffix Znet)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[16:19] <Geth> ¦ mu: Move comborico1611 to 16th

[16:19] <Geth> ¦ mu: 

[16:19] <Geth> ¦ mu: Per https://irclog.perlgeek.de/perl6/2017-12-01#i_15518990

[16:19] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/99245888f6

[16:19] <comborico1611> What was the earliest date? I'm changing my mind I think I can get this done today.

[16:19] <Zoffix> comborico1611: 6th

[16:20] <comborico1611> Email is clint_who atttttt yah ooo 

[16:20] <comborico1611> Ill take 6th

[16:20] <Geth> ¦ mu: Scimon++ created pull request #31: Update schedule

[16:20] <Geth> ¦ mu: review: https://github.com/perl6/mu/pull/31

[16:20] <scimon> :)

[16:20] <Geth> ¦ mu: be9a8c6900 | (Simon Proctor)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[16:20] <Geth> ¦ mu: Update schedule

[16:20] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/be9a8c6900

[16:20] <Geth> ¦ mu: fdf3067827 | (Zoffix Znet)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[16:20] <Geth> ¦ mu: Merge pull request #31 from Scimon/patch-1

[16:20] <Geth> ¦ mu: 

[16:20] <Geth> ¦ mu: Update schedule

[16:20] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/fdf3067827

[16:21] <perlpilot> comborico1611: invite send (assuming I parsed your email correctly ;)

[16:21] <scimon> So I figure I've done enough of my crazy plan to write out it.

[16:21] <comborico1611> Rosenfeld is going to hate me for this...

[16:21] <scimon> @perlpilot my email is simon dot proctor at gmail dot com :)

[16:21] *** geospeck joined
[16:21] <comborico1611> I'll try to be as polite and professional as possible.

[16:21] <perlpilot> scimon: sent for you too

[16:22] <scimon> Cool cheers.

[16:22] <Zoffix> scimon: that one just introspects the op you're using to figure out which one of META_BLAH_BLAH routines to call under the hood. For the `(^)` op, it calls these: https://github.com/rakudo/rakudo/blob/master/src/core/metaops.pm#L401-L415

[16:22] <comborico1611> But my goal in this review is to express when I truly feel the best way to learn to program is. Because his book is set up as an introductory course to programming.

[16:22] <scimon> Right I'll now not think about it until Monday (Party tonight... recovery this weekend)

[16:22] <comborico1611> When equals what*

[16:23] <scimon> Zoffix: but it's more how it manages to handle things like 1 < 5 < 10 

[16:23] <scimon> The number of languages that can parse and manage to give a sane answer for that are minimal.

[16:24] <scimon> I mean in the example I gave 

[16:24] <Zoffix> m: sub infix:<z> is assoc<chain> { dd @_ }; 1 z 5 z 10

[16:24] <camelia> rakudo-moar 5929887c7: OUTPUT: «[5, 10]␤[1, Nil]␤»

[16:24] <scimon> m: (1,2,3,4) (^) (5, 8, 9) (^) (2,3,4,5) (^) (5,8,9)

[16:24] <camelia> rakudo-moar 5929887c7: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "(^)" in expression "(1,2,3,4) (^) (5, 8, 9) (^) (2,3,4,5) (^) (5,8,9)" in sink context (line 1)␤»

[16:24] *** ryn1x_ joined
[16:24] <scimon> m: say (1,2,3,4) (^) (5, 8, 9) (^) (2,3,4,5) (^) (5,8,9)

[16:24] <camelia> rakudo-moar 5929887c7: OUTPUT: «set(1)␤»

[16:25] <scimon> In most languages that could do the set stuff you'd end up doing (1) (^) (5,8,9) and get (1,5,8,9) 

[16:25] <Zoffix> Though for `<` op, there's additional chainage with other ops. That's currently not available in userland for custom ops and is done by the compiler. 

[16:25] <scimon> Like I say... it's stunning and something we should be talking about more.

[16:25] <scimon> (I'll be mentioning it in my Advent page)

[16:26] <scimon> Hats of to all involved. Time for me to find some drinks.

[16:26] <Zoffix> s: &[(^)], \((1,2,3,4), (5, 8, 9), (2,3,4,5), (5,8,9))

[16:26] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/4fca94743/src/core/set_symmetric_difference.pm#L227

[16:26] <scimon> s/of/off/

[16:26] <comborico1611> Thanks!

[16:26] *** geospeck left
[16:26] <Zoffix> scimon: ^ that one just has a candidate that takes a list of them all and computes correct result. IIRC lizmat++ implemented that one

[16:27] <comborico1611> Perlpilot, got your email.

[16:27] <scimon> Night all

[16:27] <Zoffix> night

[16:27] *** scimon left
[16:27] <Zoffix> comborico1611: when you article is ready, you can log in and schedule it here: https://perl6advent.wordpress.com/wp-admin/edit.php

[16:27] *** AlexDaniel joined
[16:27] <Zoffix> Schedule for midnight, of the day you're doing it for

[16:28] <pmurias> Zoffix: I just feel that the articles that show a bunch of bizarre features (like a bunch of unicode operators etc.) don't leave a good impression on people that don't know Perl 6 already

[16:28] <comborico1611> K. Thanks!

[16:28] <DrForr> Re: watchmaking https://www.myswitzerland.com/nl/have-you-ever-dreamed-of-being-a-watchmaker-for-a-day.html

[16:28] <ryn1x_> I would like to do some IPC from perl6 to a c++ program. I have never done IPC in any language before and am not sure where to start. What would be the Easiest solution (not worried about performance right now)? I want to start by sending a message containing a file path from my perl6 program to a c++ program. I have read that some possible methods are sockets, named pipes, SQLite, and shared memory. I need to pick one and start lear

[16:29] <Geth> ¦ mu: e168425908 | (Zoffix Znet)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[16:29] <Geth> ¦ mu: Move comborico1611 to 6th

[16:29] <Geth> ¦ mu: 

[16:29] <Geth> ¦ mu: Per https://irclog.perlgeek.de/perl6/2017-12-01#i_15519005

[16:29] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/e168425908

[16:29] <Zoffix> ryn1x_: you could just send to STDIN. Is that viable?

[16:30] <Zoffix> ryn1x_: with run :in, "./your-c-program" { .in.print: "blah blah"; .in.close }

[16:30] *** comborico joined
[16:31] <wander> jnthn:

[16:31] <wander> rt#123835

[16:31] <synopsebot> RT#123835 [open]: https://rt.perl.org/Ticket/Display.html?id=123835 Cannot use 'is rw' on optional parameter

[16:31] <wander> https://design.perl6.org/S06.html#Parameter_traits

[16:32] <jferrero> m: ("01" .. "12").join("-").say

[16:32] <camelia> rakudo-moar 5929887c7: OUTPUT: «01-02-11-12␤»

[16:32] <wander> we won't to implement that, do we?

[16:32] <Zoffix> pmurias: my view on that is: you're free to write your own article that you think leaves the impressions you want. There are still 2 spots left. Implying someone should not write a post just because you don't like golf is kinda LTA

[16:32] <jferrero> bug with Range?

[16:32] <Zoffix> jferrero: no, it's what it does with strings

[16:32] <wander> s/*./we shan't to implement that, shall we?/

[16:33] <ryn1x_> Zoffix: That does seem viable. Right now I am starting my c++ program with Proc::Async.new(). Maybe I was overthinking this... 

[16:33] <Zoffix> m: ("01", *.succ ... "12").join("-").say

[16:33] <camelia> rakudo-moar 5929887c7: OUTPUT: «01-02-03-04-05-06-07-08-09-10-11-12␤»

[16:33] <AlexDaniel> comborico1611++

[16:33] <comborico> Ahh.  A keyboard!

[16:33] <jferrero> m: ("01","02" ... "12").join("-").say

[16:33] <camelia> rakudo-moar 5929887c7: OUTPUT: «01-02-03-04-05-06-07-08-09-10-11-12␤»

[16:34] <Zoffix> jferrero: it's a bit crazy and there's a couple tickets arguing for the feature's removal. Basically if the strings are more than one char it just passes to `...` op and that one does it per-char, so above it increased 0 to 1 and increased second 1 to 2

[16:34] <Herby_> m: say "\c[FATHER CHRISTMAS]"

[16:34] <camelia> rakudo-moar 5929887c7: OUTPUT: «🎅␤»

[16:34] <AlexDaniel> m: say "\c[BUTTERFLY]"

[16:34] <camelia> rakudo-moar 5929887c7: OUTPUT: «🦋␤»

[16:34] <AlexDaniel> m: say "\c[MOTHER CHRISTMAS]"

[16:34] <camelia> rakudo-moar 5929887c7: OUTPUT: «🤶␤»

[16:34] <Herby_> pretty cool

[16:34] <jferrero> Zoffix: thanks.

[16:35] * Zoffix &

[16:35] *** Zoffix left
[16:35] <squashable6> 🍕 tbrowder++ requested a review on pull request “add new tests for fix to rakudo repo issue #1282”: https://github.com/perl6/roast/pull/361

[16:38] <wander> raiph: do you still remember this ticket? rt#123457

[16:38] <synopsebot> RT#123457 [open]: https://rt.perl.org/Ticket/Display.html?id=123457 enum A <Code> "P6opaque: no such attribute '$!signature'"

[16:40] <wander> anyway, it cannot be reproduced. maybe with a test suck like "can build enum with reserve name" added we close this ticket

[16:40] *** troys joined
[16:40] <AlexDaniel> c: 30edf7 enum A <Code>

[16:41] <committable6> AlexDaniel, ¦30edf7: «===SORRY!===␤P6opaque: no such attribute '$!signature'␤ «exit code = 1»»

[16:41] <wander> oops

[16:41] <AlexDaniel> bisect: old=30edf7 enum A <Code>

[16:41] <bisectable6> AlexDaniel, Bisecting by exit code (old=30edf7 new=5929887). Old exit code: 1

[16:41] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/abd71bc6b3a264508cd788c2dc0cc6d8

[16:41] <bisectable6> AlexDaniel, (2015-12-13) https://github.com/rakudo/rakudo/commit/3c81e335f3a327e4cacee993d1b5f265dfe3706e

[16:41] <AlexDaniel> c: 30edf7,3c81e335f3^,3c81e335f3,HEAD enum A <Code>

[16:41] <committable6> AlexDaniel, ¦30edf7,3c81e335f3^: «===SORRY!===␤P6opaque: no such attribute '$!signature'␤ «exit code = 1»» ¦3c81e33,HEAD(5929887): «»

[16:42] <AlexDaniel> wander: yeah, that seems to be fixed as per ↑

[16:42] *** pmurias left
[16:43] <AlexDaniel> wander: fwiw if you have any questions regarding the bots, please ask. There's some documentation but I don't know if it's clear enough: https://github.com/perl6/whateverable/wiki/Committable https://github.com/perl6/whateverable/wiki/Bisectable 

[16:44] <wander> see :-)

[16:46] <AlexDaniel> “Note that there are builds available up to 2015.07” oops! Outdated

[16:46] <AlexDaniel> 2014.01 is the oldest release it supports atm :)

[16:46] <AlexDaniel> c: 2014.01 say 42

[16:46] <committable6> AlexDaniel, ¦2014.01: «42␤»

[16:51] <DrForr> Password reset, username sent... apparently I was using lastpass at soe time.

[16:51] <DrForr> *some

[16:51] <DrForr> Or wanted to cancel and found out I couldn't.

[16:55] *** astronavt joined
[16:55] <[Coke]> m: say "\c[DIADO KOLEDA]"

[16:55] <camelia> rakudo-moar 5929887c7: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name [DIADO KOLEDA]␤at <tmp>:1␤------> 3say "\c[DIADO KOLEDA7⏏5]"␤»

[16:59] *** mcmillhj left
[17:00] *** astronavt left
[17:01] *** araraloren_ left
[17:03] *** ctilmes joined
[17:04] *** setty1 joined
[17:05] <ctilmes> Could someone here add me to the perl6 advent wordpress?

[17:05] *** cdg left
[17:06] <timotimo> that would be ... curteous :D

[17:08] <timotimo> ctilmes: if you give me an email address, i can

[17:08] <timotimo> looks like i somehow social-engineered my way into an admin position …

[17:09] *** domidumont left
[17:13] <wander> bisect: my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:13] <bisectable6> wander, On both starting points (old=2015.12 new=5929887) the exit code is 0 and the output is identical as well

[17:13] <bisectable6> wander, Output on both points: «Rat|89999999999999999999/100000000000000000000␤Rat|89999999999999999999/100000000000000000000␤»

[17:14] <AlexDaniel> wander: I can close RT#123457, right?

[17:14] <synopsebot> RT#123457 [open]: https://rt.perl.org/Ticket/Display.html?id=123457 enum A <Code> "P6opaque: no such attribute '$!signature'"

[17:14] <AlexDaniel> I wonder what's in RT#123456

[17:14] <AlexDaniel> no such ticket. Such a pity :)

[17:14] *** Cabanossi left
[17:15] <wander> AlexDaniel: yes

[17:16] <wander> c: 2015.12,5929887^,5929887,HEAD my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:16] <committable6> wander, ¦2015.12,5929887^,5929887,HEAD(5929887): «Rat|89999999999999999999/100000000000000000000␤Rat|89999999999999999999/100000000000000000000␤»

[17:17] *** Cabanossi joined
[17:19] <wander> rt#126102 is a subset of rt#126016, we've closed 126016 but forgot 126102, i think

[17:19] <synopsebot> RT#126102 [open]: https://rt.perl.org/Ticket/Display.html?id=126102 [BUG] Rat.perl doesn't round-trip numerical value

[17:19] <synopsebot> RT#126016 [resolved]: https://rt.perl.org/Ticket/Display.html?id=126016 [MATH] Rat.Str incorrectly rounds in the part after the decimal dot

[17:19] <AlexDaniel> wander: ok https://rt.perl.org/Ticket/Display.html?id=123457#txn-1511989

[17:19] *** khw joined
[17:20] <wander> thanks

[17:20] *** philomath joined
[17:20] <AlexDaniel> wander: lol, what a funny ticket

[17:20] <AlexDaniel> c: 2015.09 say 0.9999999999999999999999.perl

[17:20] <committable6> AlexDaniel, ¦2015.09: «0.A␤»

[17:20] <AlexDaniel> XD

[17:20] <AlexDaniel> that's hilarious

[17:20] <timotimo> yikes! :D

[17:20] <wander> :P

[17:21] <timotimo> m: .print for "0.", "A" x 10, "a" x 13, "h!"

[17:21] <camelia> rakudo-moar 5929887c7: OUTPUT: «0.AAAAAAAAAAaaaaaaaaaaaaah!»

[17:22] <AlexDaniel> c: 2015.09 say 0.9999999999999999999999.perl ~ ‘h!’

[17:22] <committable6> AlexDaniel, ¦2015.09: «0.Ah!␤»

[17:24] <AlexDaniel> c: all my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:24] <committable6> AlexDaniel, https://gist.github.com/c954d420c5abb7fb3a25ae984fbbc6e2

[17:24] <AlexDaniel> c: b5aa3c591e4f^,b5aa3c591e4f my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:24] <committable6> AlexDaniel, ¦b5aa3c591e4f^,b5aa3c5: «Rat|89999999999999999999/100000000000000000000␤Rat|89999999999999999999/100000000000000000000␤»

[17:25] <AlexDaniel> bisect: old=2015.09 my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:25] <bisectable6> AlexDaniel, Bisecting by output (old=2015.09 new=5929887) because on both starting points the exit code is 0

[17:25] *** mcmillhj joined
[17:25] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/c6cf4b4db5430f2e381363b29bf01d48

[17:25] <bisectable6> AlexDaniel, (2015-09-25) https://github.com/rakudo/rakudo/commit/c8ec2999bee8b2396419d9ebf54e5e2656a6c0b8

[17:25] <AlexDaniel> fwiw, this channel is officially and deliberately loud for the duration of the squashathon :)

[17:25] *** philomath left
[17:26] *** philomath_ joined
[17:26] <AlexDaniel> wander: ok, so this ↑ tells me that it wasn't fixed in RT#126016

[17:26] <AlexDaniel> wander: I mean, these issue seems to be different

[17:26] <AlexDaniel> c: c8ec2999bee^,c8ec2999bee my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:26] <committable6> AlexDaniel, ¦c8ec2999bee^: «Rat|89999999999999999999/100000000000000000000␤Rat|9/10␤» ¦c8ec299: «Rat|89999999999999999999/100000000000000000000␤Rat|89999999999999999999/100000000000000000000␤»

[17:27] <Ulti> is that 16th Dec slot on the advent calendar still going?

[17:27] <AlexDaniel> huggable: advent

[17:27] <huggable> AlexDaniel, Sign up to write an Advent blog post: https://github.com/perl6/mu/blob/master/misc/perl6advent-2017/schedule

[17:27] <Ulti> was going to write up various bits and pieces about perf improvements, shall I chuck my name down

[17:28] <AlexDaniel> Ulti: that'd be awesome!

[17:29] <wander> AlexDaniel: interesting

[17:29] *** comborico left
[17:29] <AlexDaniel> c: c8ec2999bee^,c8ec2999bee my $a = 0.99999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:29] <committable6> AlexDaniel, https://gist.github.com/b7dfe5f33145417c29b42a3ab0b26450

[17:30] <AlexDaniel> wander: ok, it also mentions .A issue, and that was indeed fixed in the ticket you mentioned

[17:30] *** mcmillhj left
[17:30] <AlexDaniel> wander: I'll try to leave a helpful comment there

[17:30] <Geth> ¦ mu: f55a9d1045 | (Matt Oates)++ (committed using GitHub Web editor) | misc/perl6advent-2017/schedule

[17:30] <Geth> ¦ mu: Taking the 16th

[17:30] <Geth> ¦ mu: 

[17:30] <Geth> ¦ mu: Deck The Halls With Perf Improvements

[17:30] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/f55a9d1045

[17:31] <timotimo> Ulti: feel free to ask me stuff about perlformance :)

[17:31] <AlexDaniel> c: c8ec2999bee^,c8ec2999bee,HEAD my $a = 0.89999999999999999999; my $b = $a.perl.EVAL; say $a.WHICH; say $b.WHICH

[17:32] <committable6> AlexDaniel, ¦c8ec2999bee^: «Rat|89999999999999999999/100000000000000000000␤Rat|9/10␤» ¦c8ec299,HEAD(5929887): «Rat|89999999999999999999/100000000000000000000␤Rat|89999999999999999999/100000000000000000000␤»

[17:32] <Ulti> I was mostly going to cover Tux's stuff my BioInfo tests, the Prime number benchmark which was posted ages ago and then show just how many commits there have been around perf since "Christmas"

[17:33] <Ulti> maybe highlight major work thats been done and point at it like improved JIT/spesh stuff and the improved concurrnecy support

[17:33] <wander> 01:30 am here, today i'm too tired for lab things, good night #perl6 _zZ

[17:33] <wander> &

[17:33] *** wander left
[17:33] <Ulti> one of the original prime number benchmarks uses grep so I can chuck a .race on it

[17:34] <AlexDaniel> wander++

[17:34] <timotimo> is race good enough, or should it be hyper?

[17:34] <timotimo> (i'm also wondering if the csv test shouldn't also be hyper instead of race. though maybe it actually is)

[17:34] <Ulti> can do both and talk about the difference

[17:35] <Ulti> but yeah if there's anything you want to add I'll try and get it done ahead of time so people can check it out

[17:35] <timotimo> lovely :)

[17:35] * timotimo afk

[17:37] <Ulti> http://www.moarvm.org/measurements/perl6-bench/ this looks useful :3

[17:38] <Ulti> oh all the recent ones are 0 byte files :'(

[17:39] *** mcmillhj joined
[17:39] <AlexDaniel> .tell wander OK https://rt.perl.org/Ticket/Display.html?id=126102#txn-1511996

[17:39] <yoleaux> AlexDaniel: I'll pass your message to wander.

[17:39] <AlexDaniel> squashable6: status

[17:39] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈18 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:39] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/c80838f967031a9bb4688e47b5b862e6

[17:42] *** llfourn joined
[17:42] *** philomath_ left
[17:44] *** mcmillhj left
[17:45] *** konsolebox_ joined
[17:45] <El_Che> HN thread is somewhat depressing but there is a point there.

[17:46] <El_Che> I am also under the impression that we tend to show of the expectacular-and-cute-but-not-that-useful bits of the language instead of the ton of good stuff (tons)

[17:46] *** konsolebox left
[17:47] <El_Che> no critic towards the post itself (or the upcoming one), but it feels kind of cultural

[17:49] *** robertle left
[17:52] *** robertle joined
[17:56] *** astronavt joined
[17:56] <Ulti> oh man no one put up the latest post on HN surely

[17:57] <Ulti> show casing powerful stuff no one should ever do... thats anti martketing

[17:57] *** mcmillhj joined
[17:57] <Ulti> its a cool, fun, intersting post but someone reading it from a thousand miles up on some enterprise Java high is going to just be afraid

[17:58] <Ulti> every single one of those comments is exactly what Id expect, especially given most people will have only ever seen a couple of examples of an P6 in their life :9

[18:01] <El_Che> Well, it depends on your public. Most people (imho) will get or see the fun in the "cool" stuff once they get the more mundaine stuff. So it can be a very in-circle thing

[18:01] *** astronavt left
[18:02] *** wamba left
[18:02] <robertle> also having scissors is nice, but you need the discipline not to run with them...

[18:03] *** domidumont joined
[18:07] *** jeek joined
[18:08] <El_Che> robertle: the problem is not that you can do weird/advanced stuff with the language (that's a plus), but people from the outside with only look at the golfing and/or urf8 cuteness and not look further

[18:09] <AlexDaniel> looking at my rough notes, there's nothing scary in the upcoming golf post. Shit might hit the fan when I show stuff encoded in base 0x10FFFF, but other than that it's cool and readable.

[18:09] <AlexDaniel> (ha, talk about utf8 cuteness)

[18:10] <El_Che> - "Oh, we need a new name. Sharing the name with Perl 5 is confusing and we get bad press from matt's archive in the '90"

[18:10] <El_Che> - "Oh, let's golf"

[18:10] <El_Che> :)

[18:11] <El_Che> AlexDaniel: looking fwd to your post, but I am probably inside the bubble already :)

[18:11] <El_Che> I don't know if a make any sense. I don't want to sound like I'm trolling

[18:13] <AlexDaniel> El_Che: it makes sense, but it's irrelevant I think. There's a type of people who will find something to shitcomment about anyway, and it doesn't matter if we give them a reason or not.

[18:13] <El_Che> actually, I am not talking about HN in particular

[18:14] <El_Che> I couldn't care less about that

[18:14] *** cdg joined
[18:14] <El_Che> and even that is better than being ignore in a way, it may be a sign of modest succes

[18:15] *** cdg_ joined
[18:15] *** Cabanossi left
[18:16] <Ulti> AlexDaniel: yeah on the code golf challenge site with P6 I set myself the challenging of keeping it readable and small, I came second or third on a couple

[18:17] <El_Che> I point out that on one way Perl 6 wants to differenciate itself from perl 5, and on the other hand it repeats the kind of compressed smartness and cuteness that gave perl5 a bad reputation

[18:17] *** ctilmes left
[18:17] *** Cabanossi joined
[18:17] <El_Che> in that send, we're sending mixed signals

[18:17] <Ulti> yeah I really agree with that

[18:17] <Ulti> and for the most part the advent calendar has done a reasonable job of not going too nuts

[18:18] <El_Che> s/send/sense/

[18:18] <Ulti> I like the post though, so haters are going to hate... if you cant pick up its an article about antipatterns/footguns which are cool but obviously evil and wrong you probably shouldn't program in Perl 6

[18:19] *** cdg left
[18:20] *** ctilmes joined
[18:20] <El_Che> Ulti: I agree. But if loud enough they can influence people to not even try the tech

[18:20] <El_Che> (ask perl 5)

[18:20] <Ulti> yup

[18:20] <Ulti> I would perhaps not have put the day 1 post as what not to do :D

[18:21] *** mson left
[18:21] <Ulti> but its fun and well written which youd hope would trump that

[18:21] <Ulti> for some reason half of hacker news have absolutely no concept of "fun" with respect to programming, let alone a sense of humour 

[18:21] <El_Che> it's only a few fun posts and not a manifesto. Nothing is lost. I am only concerned about the mixed signals.

[18:22] *** ctilmes left
[18:22] <Ulti> meh Perl 6 should embrace living amongst the mixed signals

[18:22] * teatime remembers that time someone's (Zoffix's?) talk slides covering unicode operators + defining the shrug-emoji-string as an operator, and [reddit or HN comments, can't remember which] assumed it was a joke for the longest time.

[18:22] <El_Che> Ulti: there are a lot of angry people on the net, but that's not new :)

[18:22] *** ctilmes joined
[18:22] <teatime> then kinda totally missed the distinction between 'this is cool' and 'you should really do this' heh

[18:23] <El_Che> hehe

[18:24] *** geospeck joined
[18:24] <Ulti> yeah :/ I regret this 2012 post http://blog.mattoates.co.uk/2012/02/perl6-and-fun-with-unicode-operators.html

[18:26] <El_Che> I am one of those people that regularly work on 3 OS'es and there is no way I'm learning to remap keys on all 3 and memorize the differences :P

[18:26] <El_Che> I'll always be a texas ranger that way ;)

[18:27] <Ulti> Im kind of tempted to make a Test::Random that has that pile of poo operator

[18:27] <teatime> El_Che: I have always been a big Compose key fan; WinCompose is OK on Windows, and of course it's fine on *nix¹... I do not know of a way to get it on OS X, though (I don't use Mac, but I wish I knew of where to point Mac users for Compose functionality, if it can be done.)

[18:28] <teatime> ¹Until GNOME/GTK decided to do their own thing and break it for possibly no good reason.  Surprise?

[18:28] <El_Che> I am utterly disappointed on keyboard shortcuts o a mac

[18:28] <El_Che> of

[18:28] <Ulti> if you see a pile of poo you just get a fuzzer on something

[18:28] <teatime> bbl

[18:29] <El_Che> Ulti: you would pretty far  to prove my point, he? 

[18:29] <Ulti> El_Che: ctrl+cmd+space on a Mac FTW

[18:30] <El_Che> looks like IOS

[18:30] <El_Che> and workflow-breaking 

[18:31] <Ulti> it jumps the focus to the search and you can press enter so its not too bad

[18:32] <Ulti> oh it doesn't... I swear it used to highlight if you managed to get down to a single emojii

[18:40] *** ryn1x_ left
[18:42] <AlexDaniel> perhaps the squashathon is more interesting than discussing piles of poo? :P https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:42] <AlexDaniel> squashable6: status

[18:42] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈17 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:42] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/bcf752accfef2632056ac4effee580ed

[18:48] <AlexDaniel> j: say 42

[18:48] <camelia> rakudo-jvm a92950fb4: OUTPUT: «Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.␤»

[18:54] *** geospeck left
[18:57] *** astronavt joined
[18:58] *** geospeck joined
[19:01] *** itaipu left
[19:02] *** astronavt left
[19:02] *** natrys left
[19:03] *** Zoffix joined
[19:04] <Zoffix> Exciting news! My Advent post made it to first page of HackerNews: https://news.ycombinator.com/

[19:04] <gfldex> Zoffix++

[19:06] *** mcmillhj left
[19:07] <Zoffix> Some good jokes in the comments. I like it.

[19:08] *** darutoko left
[19:08] <AlexDaniel> Zoffix++

[19:10] <perlpilot> Zoffix++ nice reply to the naysayers

[19:10] <AlexDaniel> “are they genuinely excited about the stuff in this post or are they horrified?” :D

[19:13] <perlpilot> I'm still digesting kbenson's comment about "Perl 6 providing way too much freedom"

[19:15] *** pentashift left
[19:16] *** mcmillhj joined
[19:21] *** cdg_ left
[19:21] *** xcm joined
[19:22] *** natrys joined
[19:26] *** domidumont left
[19:32] *** natrys left
[19:33] *** mcmillhj left
[19:35] *** releasable6 joined
[19:35] *** ChanServ sets mode: +v releasable6

[19:36] *** unicodable6 joined
[19:36] *** ChanServ sets mode: +v unicodable6

[19:36] *** bisectable6 joined
[19:36] *** committable6 joined
[19:43] *** cdg joined
[19:44] *** cdg left
[19:46] <squashable6> 🍕🍕🍕  First contribution by usev6++! ♥

[19:53] *** ctilmes left
[19:53] *** TEttinger joined
[19:58] *** astronavt joined
[20:01] *** xtt joined
[20:01] *** cdg joined
[20:02] *** astronavt left
[20:05] *** troys is now known as troys_

[20:08] *** cdg left
[20:08] *** natrys joined
[20:08] *** cdg joined
[20:09] *** integral left
[20:10] *** integral joined
[20:10] *** integral left
[20:10] *** integral joined
[20:12] *** cdg_ joined
[20:13] *** TreyHarris joined
[20:13] *** cdg left
[20:20] *** rindolf left
[20:21] *** ctilmes joined
[20:27] *** rindolf joined
[20:29] *** nadim left
[20:29] *** nadim_ joined
[20:32] *** benchable6 joined
[20:33] *** s0me0ne-unkn0wn joined
[20:33] *** cdg joined
[20:36] *** cdg_ left
[20:37] *** Herby_ joined
[20:37] <Herby_> o/

[20:38] *** cdg left
[20:38] *** bdmatatu joined
[20:39] *** lizmat joined
[20:40] <AlexDaniel> OK folks, I think we have 20 tickets unMOLD-ed

[20:40] <Herby_> \o/

[20:40] <AlexDaniel> maybe more, because fail.rakudo.party does not update immediately I think

[20:41] *** clarkema joined
[20:41] <AlexDaniel> there are several tickets that need tests, so if anybody is feeling lonely… ;)

[20:44] *** cdg joined
[20:49] *** cdg left
[20:52] *** xtt left
[20:54] <clarkema> Hi all.  I'm playing around with the Advent of Code as a source of little puzzles for learning Perl 6 (http://adventofcode.com/2017/day/1)    I have a working solution for today's two challenges, but I'd love some feedback on style and idiom.  My solution is at https://gist.github.com/clarkema/d0b6d8d9527854fb6f2388474861db2a -- in particular, it feels like there should be a better way to get an array of digits out of the string.  

[20:54] <clarkema> Any pointers very gratefully received!

[20:54] <masak> m: .say for "65536".comb

[20:54] <camelia> rakudo-moar 5929887c7: OUTPUT: «6␤5␤5␤3␤6␤»

[20:55] <clarkema> ah, thanks!

[20:55] <masak> :)

[20:55] <masak> in general, `.comb` is the opposite/dual of `.split`

[20:56] <masak> `.comb` is for when you want to keep things. its default is per-character

[20:57] <clarkema> that's really handy, thanks!  It looks a lot less ugly

[20:58] *** astronavt joined
[21:01] <clarkema> so you're specifying what you want, rather than what you don't, and you don't get the extra two empty matches at each end

[21:01] <AlexDaniel> m: my @d = ‘911229’.comb; @d .= push: @d.head; say sum gather for @d.rotor(2 => -1) { take .head if [==] $_ }

[21:01] <camelia> rakudo-moar 5929887c7: OUTPUT: «12␤»

[21:02] <AlexDaniel> rotor, gather/take, […] :) All in one snippet

[21:03] *** astronavt left
[21:04] *** geospeck left
[21:04] <clarkema> *reading up on rotor*

[21:05] <AlexDaniel> m: say ‘12345’.comb.rotor(2 => -1)

[21:05] <camelia> rakudo-moar 5929887c7: OUTPUT: «((1 2) (2 3) (3 4) (4 5))␤»

[21:05] <clarkema> That's pretty cool - I originally started off wondering if I could extract pairs like that but couldn't find an easy way to do it; so it's nice to see a solution for that approach

[21:06] *** leah2 joined
[21:06] <clarkema> (although as a spoiler the next part of the challenge involves testing against the digit half way around the array, instead of the neighbough, so I ended up rotating on (@digits.chars/2)

[21:11] <clarkema> What's going on with the  'push:'?  it obviously expands to something like @d = @d.push(@d.head), but I havn't seen an explanation of the colon approach

[21:12] <teatime> `push: a;` is equiv to `push(a)`

[21:13] <teatime> https://docs.perl6.org/language/syntax#Precedence_Drop

[21:15] <clarkema> Interesting, thanks -- didn't really know what to search for that one.  Definitely looks like something to beware of on longer chained calls

[21:22] <clarkema> AlexDaniel Is that the reduction metaoperator in the take clause (as in, you're reducing a two-element list from the block argument to a boolean) or is something else happening?

[21:25] *** cdg joined
[21:27] *** espadrine joined
[21:29] *** cdg left
[21:29] <Zoffix> AlexDaniel: yeah, fail.rakudo.party updates every 10m via a cron job

[21:30] *** Cabanossi left
[21:30] <perlpilot> clarkema++  thanks for reminding me about adventofcode.com  :)

[21:32] *** Cabanossi joined
[21:36] *** kerframil left
[21:36] <AlexDaniel> clarkema: yeah, it puts == between the elements of the list

[21:36] <AlexDaniel> clarkema: so it's pretty much identical to .[0] == .[1]

[21:36] <AlexDaniel> (given that you only have two values)

[21:36] <clarkema> Great -- I had the feeling my grep option was a little verbose

[21:37] <clarkema> perlpilot: It's really handy to have some little challenges like that to provoke questions when learning something new!

[21:39] *** integral_ joined
[21:39] *** integral_ left
[21:39] *** integral_ joined
[21:39] <perlpilot> clarkema: yeah.  It's also great just to play  :-)   I found out about it last year in the middle of advent and started writing some Perl 6 solutions, but I got side-tracked and didn't do them all.    I'm going to try to do them all this year.  We'll see how it goes

[21:40] *** integral left
[21:41] *** integral_ is now known as integral

[21:41] * afresh1 is solving it in perl6 - https://github.com/afresh1/adventofcode

[21:41] <perlpilot> afresh1: cool

[21:42] *** mr-foobar joined
[21:43] *** mr-foobar left
[21:43] <afresh1> but I'm terrible at perl6, so looking forward to seeing what other folks here say

[21:43] <perlpilot> Looks like all of the Perl 6 Advent slots are filled (yay #perl6 people!) but I bet some of the adventofcode.com solutions would be worthy of a future Perl 6 Advent post

[21:45] <perlpilot> the adventofcode problems kinda remind me a little bit of MJD's Quiz of the Week

[21:45] <clarkema> afresh1: some interesting stuff in your solution as well; TI certainly MTOWTDI

[21:45] *** baest joined
[21:46] <afresh1> going to go try to actually understand `comb` and `rotor` now though :-)

[21:46] <clarkema> it's nice to see your :skip-empty as well though

[21:47] *** troys_ is now known as troys

[21:48] <baest> camelia: perl6: say DateTime.new(1512164032, :timezone($*TZ)).Instant;

[21:48] <camelia> baest: rakudo-jvm a92950fb4: OUTPUT: «Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.␤»

[21:48] <camelia> ..rakudo-moar 5929887c7: OUTPUT: «Instant:1512164069␤»

[21:48] <baest> is that just me or is it very strange that 37 secs is added?

[21:49] <baest> camelia: perl6: say DateTime.new(1512164032).Instant;

[21:49] <camelia> baest: rakudo-moar 5929887c7: OUTPUT: «Instant:1512164069␤»

[21:49] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: «Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.␤»

[21:49] *** Herby_ left
[21:50] <perlpilot> baest: yeah, someone mentioned that yesterday I think and I was guessing leapseconds, but there's only been 26 of those.

[21:51] <perlpilot> in any case, it seems very familiar to me though I don't know the reason why

[21:51] <teatime> GMT time is off 18 seconds from UTC

[21:51] <teatime> but that doesn't help

[21:51] <baest> perlpilot: :)

[21:52] <teatime> TAI is off from UTC by at least 34.1 seconds

[21:52] <teatime> perhaps more, dunno how old my reference is

[21:54] <perlpilot> https://confluence.qps.nl/display/KBE/UTC+to+GPS+Time+Correction

[21:54] <perlpilot> See the first paragraph

[21:54] <teatime> https://en.wikipedia.org/wiki/International_Atomic_Time

[21:54] <teatime> it's TAI, 37 seconds from UTC

[21:54] <teatime> mmm

[21:55] *** konsolebox_ left
[21:55] <perlpilot> so it is leap seconds plus the initial difference of 10 seconds

[21:57] *** konsolebox joined
[21:58] <baest> Wow ok, that explains it I guess, but still not very useful that you can't create a DateTime with an Instant from another DateTime and expect them to be the same time

[21:59] <perlpilot> Why are you converting your DateTime to Instant anyway?

[21:59] *** astronavt joined
[22:01] <teatime> Instant is by def. TAI

[22:01] <teatime> whereas DateTime's are in UTC or zones offset from UTC

[22:01] <teatime> but, they should round-trip...

[22:02] * masak .oO( this isomorphism is bent! )

[22:04] *** astronavt left
[22:07] <baest> perlpilot: storing them in a database as an int

[22:08] <perlpilot> baest: why not store them as a string in ISO8601 format?

[22:08] <teatime> it may not be different, at least for you / at the moment, but perhaps .posix would be more appropriate

[22:08] <teatime> or, yeah, even better that

[22:09] *** nebuchad` joined
[22:10] <baest> more storage with a string and I like being able to manipulate easier through SQL. Should probably use PostgreSQL and store them as a timestamp

[22:11] <perlpilot> pg groks ISO8601 too

[22:12] <perlpilot> and I'll point out that concern over storage space is what caused all the Y2K hoopla 

[22:14] *** cdg joined
[22:15] *** Cabanossi left
[22:15] <baest> still with SQLite as I use currently you will not be able to manipulate them easily. But the important thing for me is to know what caused the thing

[22:17] *** Cabanossi joined
[22:18] *** kitsunenokenja joined
[22:20] *** pdcawley joined
[22:22] <baest> Thanks for the help guys!

[22:23] *** pdcawley left
[22:23] *** baest left
[22:23] *** pdcawley joined
[22:23] *** cdg_ joined
[22:23] *** pdcawley left
[22:23] *** cdg_ left
[22:24] *** pdcawley joined
[22:24] *** cdg left
[22:24] *** pdcawley left
[22:24] *** pdcawley joined
[22:25] *** pdcawley left
[22:25] *** pdcawley joined
[22:26] *** pdcawley left
[22:26] *** pdcawley joined
[22:26] *** pdcawley left
[22:27] *** pdcawley joined
[22:27] *** pdcawley left
[22:27] <AlexDaniel> DrForr: here?

[22:27] *** pdcawley joined
[22:28] *** pdcawley left
[22:28] *** pdcawley joined
[22:29] *** pdcawley left
[22:29] *** pdcawley joined
[22:29] *** comborico1611 left
[22:30] *** natrys left
[22:30] *** pdcawley left
[22:30] <AlexDaniel> .tell DrForr Please check RT#125299 and do something with it. I really don't understand what has to be done in order to close it. If it's just that the line number of the starter has to be mentioned, then it was done in https://github.com/rakudo/rakudo/commit/3ede49cd7ab257a0f9dccebb24fa4f965336147c

[22:30] <yoleaux> AlexDaniel: I'll pass your message to DrForr.

[22:30] <synopsebot> RT#125299 [open]: https://rt.perl.org/Ticket/Display.html?id=125299 [BUG] LTA error message when forgetting to close block inside string in Rakudo

[22:31] *** bdmatatu left
[22:32] *** troys is now known as troys_

[22:32] *** comborico1611 joined
[22:32] *** cdg joined
[22:33] <AlexDaniel> squashable6: status

[22:33] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈13 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[22:33] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/85ae0b5a63c9e0a03ef92044b342bd6b

[22:36] *** char_var[buffer] left
[22:37] *** Ven`` joined
[22:47] *** setty1 left
[22:54] *** troys_ is now known as troys

[22:57] *** nebuchad` left
[22:58] *** nebuchadnezzar joined
[23:00] *** astronavt joined
[23:05] *** astronavt left
[23:07] *** wamba joined
[23:10] *** clarkema left
[23:16] *** cdg left
[23:16] *** cdg joined
[23:20] *** cdg left
[23:21] *** Ven`` left
[23:24] <squashable6> 🍕 tbrowder++ opened pull request “Fix table caption RT #126740”: https://github.com/rakudo/rakudo/pull/1291

[23:24] <synopsebot> RT#126740 [new]: https://rt.perl.org/Ticket/Display.html?id=126740 [POD] Pod::Block::Table node caption property is not populated properly

[23:26] <squashable6> 🍕 tbrowder++ edited pull request “Fix table caption RT #126740”: https://github.com/rakudo/rakudo/pull/1291

[23:28] <squashable6> 🍕 tbrowder++ opened pull request “add tests for fix for RT #126740”: https://github.com/perl6/roast/pull/363

[23:29] *** Cabanossi left
[23:32] *** Cabanossi joined
[23:38] *** mson joined
[23:42] *** ctilmes left
[23:43] *** kupopo joined
[23:46] <kupopo> I'm getting a cryptic error when trying to `make install` rakudo-star-2017.10: ./perl6-j tools/build/install-core-dist.pl $PREFIX/share/perl6 fails with Unhandled exception: VMArray representation does not implement bind_pos_native.  Has anyone seen or heard of this? (Google didn't turn up anything useful)

[23:48] <lizmat> kupopo: could you add --ll-exception after ./perl6-j and gist the output ?

[23:49] <lizmat> kupopo: otoh, I'm not sure of the state of the JVM backend even allowing a "make install" at this time

[23:52] <kupopo> lizmat: here's the full stack with --ll-exception: https://gist.github.com/shicks/27df7cf0d868b61eea59b950942d4c62

[23:53] <kupopo> I'm a bit confused about that - my understanding is that the JVM backend is basically usable, no?  Is it not meant to be installed?

[23:55] <lizmat> bartolin would really be the person to answer this question, as he's been the one working on the JVM backend lately

[23:55] <lizmat> personally, I have focused all of my efforts on making things faster on the MoarVM backend

[23:56] <lizmat> .ask bartolin is https://gist.github.com/shicks/27df7cf0d868b61eea59b950942d4c62 something you'd expect from a "make install" ?

[23:56] <yoleaux> lizmat: I'll pass your message to bartolin.

[23:56] <lizmat> kupopo: but from the error message, it would seem to me there's something not implemented on the JVM backend that is being used in the install process

[23:57] <lizmat> and/or not properly worked around on the JVM backend

[23:57] *** ctilmes joined
[23:57] <lizmat> :-(

[23:57] * lizmat hopes bartolin can share some insights

[23:58] <kupopo> Thanks.  I guess I'll ask my more general "what are you actually trying to do?" question - I'd like to share a perl6 program with folks who don't have perl6 installed.  I'd hoped to try using a jar file for this (and maybe that wouldn't work anyway), but maybe there's a better supported solution?

[23:59] <kupopo> (i.e. perl6 is not standard in any linux distributions I'm aware of, unlike perl5 which one can generally assume exists)

