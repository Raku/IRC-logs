[00:00] *** neewbie joined
[00:00] <neewbie> hi

[00:00] <raschip> o/

[00:01] <raschip> huggable: hug neewbie 

[00:01] * huggable hugs neewbie 

[00:02] <neewbie> i have a question, if you guys could helpme. whats the best way to read a line of integers in a file to treat as a list of numbers instead of a stirng?

[00:02] <neewbie> \o

[00:02] <neewbie> its possible to use int to list operators in a list of strings of ints?

[00:03] <timotimo> just grab the line, split it with .words, then .map(*.Int)

[00:03] <timotimo> it'll explode if it finds non-int characters, though

[00:03] <timotimo> you may have to make sure the newline at the end gets properly removed

[00:03] <neewbie> thanks

[00:04] <neewbie> it worked

[00:04] <neewbie> tx

[00:04] <neewbie> and

[00:05] <neewbie> i noticed that when i do a + 1 in a range, it adds up to every element in the range, but in the list adds to the lenght. theres is a shortcut to do a operation to every value in the list other than a .map ?

[00:06] <ugexe> [+]

[00:06] <neewbie> but [+] adds the elements in the list, the +1 in the range adds 1 to every elemetn in the list

[00:07] <timotimo> there's >>+>> 1 for example

[00:07] <timotimo> if you want to have it return a new list with values

[00:07] <timotimo> otherwise you can >>++ or ++<< to modify the list in-place

[00:07] <neewbie> can you show an example pls?

[00:07] *** faraco left
[00:08] <SmokeMachine> is there a value mutable version of pair?

[00:08] <raschip> SmokeMachine: Isn't that a scalar?

[00:08] <TimToady> note hypers are eager, so use X+ 1 if you want it to be a lazy list

[00:09] <timotimo> m: my @things = <3 1 4 1 5 9>; say @things >>+>> 1; say @things; @things>>++; say @things

[00:09] <camelia> rakudo-moar 9a11ea: OUTPUT«[4 2 5 2 6 10]␤[3 1 4 1 5 9]␤[4 2 5 2 6 10]␤»

[00:09] <TimToady> besides, X+ is shorter than >>+>>  :)

[00:09] <neewbie> thank you

[00:09] <SmokeMachine> notviki: I was trying this:

[00:09] <timotimo> aye, it is

[00:09] <SmokeMachine> m: my @a; for <c c c a a a b c c> -> $c {if !@a or $c ne @a[*-1].key {@a.push: $c =>1} else {@a[*-1].value += 1}}; say @a

[00:09] <camelia> rakudo-moar 9a11ea: OUTPUT«Cannot assign to an immutable value␤  in block <unit> at <tmp> line 1␤␤»

[00:09] <neewbie> X+ and >>+>> are the same thing?

[00:09] *** imcsk8 left
[00:09] <timotimo> no

[00:09] <timotimo> the former is lazy, the latter is eager

[00:09] <SmokeMachine> m: my $a = a => 1; say $a; $a.value++; say $a # raschip 

[00:09] <camelia> rakudo-moar 9a11ea: OUTPUT«a => 1␤Cannot resolve caller postfix:<++>(Int); the following candidates␤match the type but require mutable arguments:␤    (Mu:D $a is rw)␤    (Int:D $a is rw)␤␤The following do not match for other reasons:␤    (Bool:D $a is rw)␤    (Bool:U…»

[00:09] *** imcsk8 joined
[00:10] <timotimo> m: my @a = a => my $ = 1; say $a; $a.value++; say $a

[00:10] <camelia> rakudo-moar 9a11ea: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared. Did you mean '@a'?␤at <tmp>:1␤------> 3my @a = a => my $ = 1; say 7⏏5$a; $a.value++; say $a␤»

[00:10] <SmokeMachine> m: my @a; for <c c c a a a b c c> -> $c {if !@a or $c ne @a[*-1].key {@a.push: $c =>1} else {@a[*-1].value++}}; say @a

[00:10] <camelia> rakudo-moar 9a11ea: OUTPUT«Cannot resolve caller postfix:<++>(Int); the following candidates␤match the type but require mutable arguments:␤    (Mu:D $a is rw)␤    (Int:D $a is rw)␤␤The following do not match for other reasons:␤    (Bool:D $a is rw)␤    (Bool:U $a is rw…»

[00:10] *** Coleoid left
[00:10] <timotimo> m: my $a = a => my $ = 1; say $a; $a.value++; say $a

[00:10] <camelia> rakudo-moar 9a11ea: OUTPUT«a => 1␤a => 2␤»

[00:10] *** eyck joined
[00:10] <timotimo> SmokeMachine: ^

[00:10] *** Coleoid joined
[00:10] <SmokeMachine> great! thanks timotimo !

[00:11] <neewbie> can i turn off the messages when people enter and quit the chat? i'm getting lost

[00:11] *** baest left
[00:11] <SmokeMachine> m: my @a; for <c c c a a a b c c> -> $c {if !@a or $c ne @a[*-1].key {@a.push: $c => my $ = 1} else {@a[*-1].value++}}; say @a # notviki 

[00:11] <camelia> rakudo-moar 9a11ea: OUTPUT«[c => 3 a => 3 b => 1 c => 2]␤»

[00:11] <timotimo> that depends entirely on your irc client, neewbie 

[00:11] *** baest joined
[00:11] *** ggherdov left
[00:11] <neewbie> ok, will search later. 

[00:12] <timotimo> for example, weechat will hide joins and quits that it thinks aren't relevant, and only shows joins/quits it thinks you care about

[00:12] *** SHODAN left
[00:12] *** amalia__ left
[00:12] *** notbenh_ left
[00:12] <TimToady> neewbie: they're pretty easy to ignore if your client makes them a different color

[00:12] *** ggj_ left
[00:12] *** chee left
[00:12] *** amalia__ joined
[00:12] <neewbie> but eager means that evaluates all the list and then adds + 1 to every item? and lazy does without know the whole list?

[00:13] *** atta left
[00:13] *** yubimusubi left
[00:13] <timotimo> it'll add as +1 to as many items in the list as some consumer asks for, ignoring the rest until they are needed - or forever

[00:14] *** ggherdov joined
[00:14] *** ZoffixZ joined
[00:14] *** SHODAN joined
[00:14] *** atta joined
[00:14] *** Possum joined
[00:14] <neewbie> so X+ is faster than >>+>> ?

[00:14] <TimToady> m: say ((0...*) Z+ 1)[^30]

[00:14] <camelia> rakudo-moar 9a11ea: OUTPUT«(1 Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil)␤»

[00:14] <timotimo> no, it's a trade-off that depends on your situation

[00:14] <ZoffixZ> neewbie: click on the three-bar icon in top left column and choose " Hide JOINS/PARTS/QUITS:"

[00:14] <TimToady> m: say ((0...*) X+ 1)[^30]

[00:14] <camelia> rakudo-moar 9a11ea: OUTPUT«(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30)␤»

[00:14] *** ZoffixZ left
[00:15] <TimToady> neewbie: not necessarily

[00:15] <TimToady> often eager evaluation can be faster, depending on what is producing the list

[00:15] *** smash joined
[00:15] <notviki> SmokeMachine: well, it's just a long and dense version :) I was hoping for some nice, short, way

[00:15] *** pyrimidine joined
[00:15] <neewbie> thanks zoffixz, it worked :D

[00:15] <timotimo> at some point we'll want to use vectorized instructions on your CPU, so eager evaluation in this case might end up many many times faster

[00:16] <SmokeMachine> notviki: :(

[00:16] <timotimo> but if you have an infinite list and only actually want the first three values, the eager case will finish when the universe has exploded, the other one will only take a milisecond

[00:16] <timotimo> so that's many, many, many, many cases faster

[00:16] <timotimo> times*

[00:16] <TimToady> which is why we have two different ways to do it

[00:17] <neewbie> so if i have a short list, which i know the scope, the eager is a better choice

[00:17] <timotimo> yeah, it's difficult to sell "you have to make the universe explode" to our customers as part of their daily operations

[00:17] *** chee joined
[00:17] <TimToady> neewbie: again, it depends on what you're optimizing for.  X+ can be easier to read than »+»

[00:17] <timotimo> you may think there's infinite universes in the multiverse, but if everybody starts exploding many millions of universes a day, who knows what will happen!

[00:18] <TimToady> and if programmer time is what you're optimizing for, use the more readable

[00:18] <neewbie> how the X+ operator is called? i can't find in the docs search box

[00:18] <timotimo> it's a cartesian product, we call it the cross metaop

[00:18] <timotimo> in this case it's the cross metaop applied to the addition operator

[00:18] <TimToady> m: say <a b> X~ 1,2

[00:18] <camelia> rakudo-moar 9a11ea: OUTPUT«(a1 a2 b1 b2)␤»

[00:19] <neewbie> the >>+>> is hyper operator, right? i was reading this slide http://tpm2016.zoffix.com/ and it says it has a bug. do you guys know if it was fixed?

[00:19] <timotimo> no, the .hyper and .race methods have a bug

[00:19] <timotimo> hyperoperators on their own are fine

[00:19] <neewbie> hmm, so confusing. x-x

[00:20] *** notbenh_ joined
[00:20] *** aborazmeh joined
[00:20] *** aborazmeh left
[00:20] *** aborazmeh joined
[00:20] *** pyrimidine left
[00:21] <raschip> neewbie: It's like math, it takes a while to take it all in.

[00:21] <neewbie> i see

[00:21] *** integral joined
[00:21] *** integral left
[00:21] *** integral joined
[00:22] <neewbie> and i'm really bad at math.

[00:22] <neewbie> i found the operators page, going to read before asking more questions.

[00:22] <raschip> So it's not like math.

[00:22] <neewbie> thank you very much

[00:22] <raschip> It's like learning a new language.

[00:25] *** smash left
[00:25] *** jnthn left
[00:25] *** smash joined
[00:25] *** jnthn joined
[00:33] *** newbie1 left
[00:33] <TimToady> mais oui!

[00:35] <raschip> Claro

[00:35] *** pecastro joined
[00:36] *** rindolf left
[00:40] *** cdg left
[00:40] <TimToady> Power tools!  https://www.youtube.com/watch?v=UZDWEd7kjS4

[00:44] <notviki> 0.o

[00:45] *** sean` joined
[00:52] *** shayan_ left
[00:53] *** sean` left
[00:53] <hattakhomma> Sorry to bug on a random questions, but I wanted to try to use perl for some web development work.  From what I understand how you include functions from another php file, in perl the functions are included a perl modules?

[00:54] <hattakhomma> oops sorry wrong channel

[00:59] *** BenGoldberg joined
[01:03] *** espadrine left
[01:04] *** shayan_ joined
[01:08] *** rindolf joined
[01:09] *** shayan_ left
[01:09] *** shayan_ joined
[01:11] *** pyrimidine joined
[01:11] *** shayan_ left
[01:12] *** shayan_ joined
[01:16] *** pyrimidine left
[01:27] <notviki> hah

[01:27] <notviki> hattakhomma: check out http://mojolicious.com  it's a nice Perl 5 web framework

[01:28] <notviki> oh wait

[01:28] <notviki> hattakhomma: sorry, it's http://mojolicious.org/

[01:28] <notviki> It on CPAN: https://metacpan.org/pod/Mojolicious

[01:33] *** rindolf left
[01:35] *** zacts joined
[01:36] <Geth>  doc: f7ff9b7496 | (Samantha McVey)++ | htmlify.p6

[01:36] <Geth>  doc: Fix --no-proc-async option for htmlify.p6 on MacOS

[01:36] <Geth>  doc: review: https://github.com/perl6/doc/commit/f7ff9b7496

[01:37] *** Coleoid left
[01:43] <[Coke]> http://news.perlfoundation.org/2017/01/tpf-grant-novemberdecember-rou.html regarding the TPF grant request for LP6

[01:44] *** neewbie left
[01:50] <raschip> "1.3. Grant proposals should mention how the grant results will be made available to the public. The grant results must be must be accessible free of charge." Stallman wouldn't be pleased by this. Being available gratis isn't a requirement for something to be free.

[01:54] <notviki> Well, I'm glad that is over.

[01:55] <samcv> [Coke], can you test the doc --no-proc-async for me?

[01:58] *** labster left
[02:05] *** raschip left
[02:05] *** hattakhomma left
[02:08] <[Coke]> samcv: already running it, thanks. :)

[02:08] <samcv> cool

[02:09] <SmokeMachine> I think I already did it, but is there a method that is called on role composition? (I think its the method compose, is it?)

[02:09] *** ggj_ joined
[02:10] <notviki> SmokeMachine: I heard of the COMPOSE phaser...

[02:10] <SmokeMachine> thanks!

[02:10] <notviki> m: 1 but role { COMPOSE { say "weeeeee" } }

[02:10] <camelia> rakudo-moar 9a11ea: ( no output )

[02:11] <notviki> m: role Foo { COMPOSE { say "weeeeee" } }; class :: does Foo {}; 

[02:11] <camelia> rakudo-moar 9a11ea: ( no output )

[02:11] <notviki> m: role Foo { COMPOSE { say "weeeeee" } }; class :: does Foo {}.new

[02:11] <camelia> rakudo-moar 9a11ea: ( no output )

[02:11] * notviki shrugs

[02:11] *** pyrimidine joined
[02:11] <SmokeMachine> :(

[02:14] <SmokeMachine> notviki: looks you are right: https://docs.perl6.org/language/phasers#Phasers

[02:15] <notviki> SmokeMachine: seems NYI: https://docs.perl6.org/language/phasers#CONTROL

[02:15] <notviki> (also that part has busted rendering)

[02:16] *** pyrimidine left
[02:18] <SmokeMachine> notviki: I think Im getting crazy... I could swear that I did use it...

[02:20] <notviki> hmmm.... Trying to use the RT API endpoint perl6.fail uses through the browser gives me "Temporarily Unavailable" and that's been for like 4 days now :/

[02:21] *** Ben_Goldberg joined
[02:21] *** BenGoldberg left
[02:21] *** Ben_Goldberg is now known as BenGoldberg

[02:22] <notviki> ooohhh... there's a special --rebuild option you're supposed to pass in when building the db anew

[02:22] <notviki> oops :}

[02:24] <samcv> how is the --help generated, like how can you specify a description of what the program does?

[02:25] <notviki> samcv: it's sub USAGE or something similar

[02:25] <samcv> kk

[02:25] <notviki> samcv: oh: https://docs.perl6.org/language/functions#sub_USAGE

[02:25] <notviki> You're just print stuff from within it

[02:26] *** BenGoldberg left
[02:27] <notviki> buggable: tags

[02:27] <buggable> notviki, Total: 1468; BUG: 988; UNTAGGED: 313; LTA: 141; NYI: 96; RFC: 61; CONC: 53; JVM: 53; REGEX: 46; SEGV: 31; PERF: 28; UNI: 27; NATIVECALL: 22; REGRESSION: 21; @LARRY: 20; POD: 20; TODO: 18; IO: 16; TESTNEEDED: 15; PRECOMP: 13; BUILD: 11; OO: 11; TESTCOMMITTED: 10; STAR: 8; BOOTSTRAP: 6; OPTIMIZER: 6; GLR: 5; MATH: 4; OSX: 4; REPL: 3; WEIRD: 3; RT: 2; SPESH: 2; WINDOWS: 2; CONFIGURE:

[02:27] <notviki> NeuralAnomaly: status

[02:27] <NeuralAnomaly> notviki, [✘] Next release will be in 1 week and 3 days. Since last release, there are 80 new still-open tickets (0 unreviewed and 0 blockers) and 250 unreviewed commits. See http://perl6.fail/release/stats for details

[02:28] <notviki> samcv: fixed now RE: <samcv> .tell notviki seems perl6.fail has… failed. It is not showing any ticket

[02:28] *** user_ joined
[02:28] <samcv> perl6.fail.fail

[02:28] <samcv> nice :-)

[02:29] <SmokeMachine> how can I .^add_method a multi method?

[02:30] *** shayan_ left
[02:31] *** kalkin- left
[02:33] <notviki> m: class Foo {}; Foo.^add_method: "meows", multi method { say "hi" }; Foo.^add_method: "meows", multi method ($) { say "meows" }; Foo.meows: 42

[02:33] <camelia> rakudo-moar 9a11ea: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤An anonymous method may not take a multi declarator␤at <tmp>:1␤------> 3thod: "meows", multi method { say "hi" }7⏏5; Foo.^add_method: "meows", multi method␤»

[02:33] *** BenGoldberg joined
[02:33] <notviki> really

[02:34] <notviki> SmokeMachine: apparently you can use .add_dispatchee for an already existing routine.

[02:35] <notviki> SmokeMachine: https://www.reddit.com/r/perl6/comments/5li94u/comparing_custom_classes_with_eqv/ bottom of OP'

[02:35] <notviki> s post

[02:35] * notviki drops to bed

[02:35] <SmokeMachine> notviki: great! thanks!

[02:35] <SmokeMachine> notviki: yes! I remember that! I didn't remember the name of the method

[02:37] <SmokeMachine> I thinks thats not for methods... :(

[02:38] *** AlexDaniel joined
[02:39] <SmokeMachine> Im wrong

[02:40] *** BenGoldberg left
[02:40] <SmokeMachine> methods generated by $.attr aren't multi?

[02:42] *** BenGoldberg joined
[02:46] *** ilbot3 left
[02:48] *** ilbot3 joined
[02:54] <BenGoldberg> m: for ^7 -> $a, $b { print $a, $b }

[02:54] <camelia> rakudo-moar 9a11ea: OUTPUT«012345Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[02:55] *** jonadab left
[02:55] <BenGoldberg> m: for ^7 -> $a, $b { print $b.DEFINITE; print $a, $b }

[02:55] <camelia> rakudo-moar 9a11ea: OUTPUT«True01True23True45Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[02:55] <BenGoldberg> m: for ^7 -> $a, $b { print 1 }

[02:55] <camelia> rakudo-moar 9a11ea: OUTPUT«111Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[02:56] <BenGoldberg> Hmm...

[02:57] <AlexDaniel> so?

[02:57] <AlexDaniel> m: for ^7 -> $a, $b? { say “$a {$b // ‘none’}”; }

[02:57] <camelia> rakudo-moar 9a11ea: OUTPUT«0 1␤2 3␤4 5␤6 none␤»

[02:57] <BenGoldberg> AlexDaniel++

[02:58] <BenGoldberg> Thanks :)

[02:58] <BenGoldberg> m: for ^7 -> $a, $b? { print $b.DEFINITE }

[02:58] <camelia> rakudo-moar 9a11ea: OUTPUT«TrueTrueTrueFalse»

[02:58] <BenGoldberg> m: for (^7.slip, Any) -> $a, $b? { print $b.DEFINITE }

[02:58] <camelia> rakudo-moar 9a11ea: OUTPUT«Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesize␤    at <tmp>:1␤    ------> 3for (^77⏏5.slip, Any) -> $a, $b? { print $b.DEFINI␤    Precedence of ^ is looser than method call; please parenthesize␤ …»

[02:59] <BenGoldberg> m: for ((^7).slip, Any.slip) -> $a, $b? { print $b.DEFINITE }

[02:59] <camelia> rakudo-moar 9a11ea: OUTPUT«No such method 'slip' for invocant of type 'Range'␤  in block <unit> at <tmp> line 1␤␤»

[02:59] <AlexDaniel> I only wonder why is it 42 here:

[02:59] <AlexDaniel> m: for ^7 -> $a, $b? --> 42 { say “$a {$b // ‘none’}”; }

[02:59] <camelia> rakudo-moar 9a11ea: OUTPUT«0 42␤2 42␤4 42␤6 42␤»

[02:59] *** skids joined
[02:59] <BenGoldberg> m: for ((^7).Slip, Any.Slip) -> $a, $b? { print $b.DEFINITE }

[02:59] <camelia> rakudo-moar 9a11ea: OUTPUT«TrueTrueTrueFalse»

[03:00] <BenGoldberg> m: for ((^7).Slip, Any.Slip) -> $a, $b? { print $a }

[03:00] <camelia> rakudo-moar 9a11ea: OUTPUT«0246»

[03:00] <BenGoldberg> m: for ((^7).Slip, Any.Slip) -> $a, $b? { print $b }

[03:00] <camelia> rakudo-moar 9a11ea: OUTPUT«135Use of uninitialized value $b of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block  at <tmp> line 1␤»

[03:00] <BenGoldberg> m: for ((^7).Slip, Any.Slip) -> $a, $b? { say $b }

[03:00] <camelia> rakudo-moar 9a11ea: OUTPUT«1␤3␤5␤(Any)␤»

[03:00] <AlexDaniel> драт ахе ыоу тхыинг то во?

[03:00] <AlexDaniel> what are you trying to do?

[03:00] <BenGoldberg> m: for ((^7).Slip, Any.Slip) -> $a, $b? { say $b.DEFINITE }

[03:00] <camelia> rakudo-moar 9a11ea: OUTPUT«True␤True␤True␤False␤»

[03:03] <BenGoldberg> I want to write some utility functions; they're going to iterate over a user supplied list, which might or might not have an even number of elements.  If there're an odd number of elements in the list, I want to deal with the last element specially.

[03:05] <tbrowder>  ref Inline::Perl5, i need some help, please

[03:07] <tbrowder> i have an object that .WHAT calls a (Perl5Array), how can i make that ap6 array?

[03:07] <tbrowder> s/ap6/a p6/

[03:08] <AlexDaniel> m: for (^7).rotor(2) -> ($a, $b) { say “$a → $b”; }

[03:08] <camelia> rakudo-moar 9a11ea: OUTPUT«0 → 1␤2 → 3␤4 → 5␤»

[03:10] <AlexDaniel> m: for (^7).rotor(2, :partial) -> ($a, $b?) { say “$a → {$b // ‘none’}”; } # meh, not any better

[03:10] <camelia> rakudo-moar 9a11ea: OUTPUT«0 → 1␤2 → 3␤4 → 5␤6 → none␤»

[03:15] <AlexDaniel> does anybody know what's the deal with this:

[03:15] <AlexDaniel> m: for ^4 -> $a --> 42 { say “$a” }

[03:15] <camelia> rakudo-moar 9a11ea: OUTPUT«0␤1␤2␤3␤»

[03:15] <AlexDaniel> m: for ^4 -> $a --> 42 { say “{$a}” }

[03:15] <camelia> rakudo-moar 9a11ea: OUTPUT«42␤42␤42␤42␤»

[03:16] <AlexDaniel> looks like a bug, right?

[03:17] *** pyrimidine joined
[03:21] <samcv> cool. caught up with my atom-language-perl6 tickets now.

[03:22] *** pyrimidine left
[03:23] *** xtreak joined
[03:26] *** Ben_Goldberg joined
[03:27] *** BenGoldberg left
[03:27] *** Ben_Goldberg is now known as BenGoldberg

[03:29] *** tharkun joined
[03:30] <tharkun> Where can I get the recommended 101 perldoc for perl6

[03:32] <BenGoldberg> p6doc?

[03:34] <AlexDaniel> tharkun: not sure what you mean exactly, but I'd perhaps start with https://learnxinyminutes.com/docs/perl6/ and http://perl6intro.com and then https://docs.perl6.org/language.html

[03:34] <AlexDaniel> tharkun: does that answer your question or were you looking for something else?

[03:34] *** aborazmeh left
[03:35] <tharkun> I'll look into those thanks

[03:42] *** MasterDukeLaptop joined
[03:44] *** labster joined
[03:45] *** Resol joined
[03:45] *** dalek left
[03:45] *** dalek joined
[03:45] *** ChanServ sets mode: +v dalek

[03:47] *** pyrimidine joined
[03:48] *** jonadab joined
[03:56] *** pyrimidine left
[03:57] *** kyan joined
[04:00] *** Actualeyes left
[04:23] *** faraco joined
[04:23] <faraco> howdy

[04:28] <AlexDaniel> o/

[04:29] <faraco> :D

[04:38] <[Coke]> (docs) looks like we were very careful about .html file names (maybe overly so) but there are image names with ::'s in them.

[04:54] <samcv> [Coke], regarding highlights failing on os x

[04:55] <samcv> hmm maybe we should build on os x for the bot too.

[04:55] <faraco> in META6.json, what is resources refers to?

[04:55] <samcv> not sure why it would hang but hmm

[04:56] *** pyrimidine joined
[04:56] <timotimo> faraco: extra files that will get installed along with your module that you can access via a special variable

[04:57] <[Coke]> samcv: perhaps related to why --parallel is horked.

[04:57] <samcv> well uhm. having --no-proc-async by default will slow it down a ton

[04:57] <faraco> timotimo: thanks. I gonna blog it as my diary.

[04:57] <samcv> basically the diff between pygmentize vs inline::python was

[04:58] <Geth>  doc: 47761aa955 | (Samantha McVey)++ | htmlify.p6

[04:58] <Geth>  doc: Only start the highlights worker thread when we need to

[04:58] <Geth>  doc: 

[04:58] <Geth>  doc: Also make sure the user has run `make init-highlights` by checking if

[04:58] <Geth>  doc: the coffee executable is in the right location.

[04:58] <Geth>  doc: review: https://github.com/perl6/doc/commit/47761aa955

[04:58] <Geth>  doc: 9bea4a4ac0 | (Samantha McVey)++ | .travis.yml

[04:58] <Geth>  doc: Update .travis.yml to test os MacOS as well as Linux

[04:58] <Geth>  doc: review: https://github.com/perl6/doc/commit/9bea4a4ac0

[04:58] <samcv> [Coke], did i fix --no-proc-async on os x though?

[04:58] <[Coke]> yes, I can at least run htmlify.pl now by using that arg.

[04:59] <samcv> ok good

[04:59] <[Coke]> We don't have to make it the default; can change that part of the ticket into "fix this on OS X" if I didn't make a ticket for that.

[04:59] <samcv> k

[05:01] *** pyrimidine left
[05:01] *** BenGoldberg left
[05:05] <samcv> [Coke], does it hang at the very end of highlighting?

[05:10] <[Coke]> hope not!

[05:11] <[Coke]> Still getting "Highlights is reading...." streaming across the screen.

[05:11] *** bpmedley left
[05:16] *** pyrimidine joined
[05:17] *** khw left
[05:20] *** pyrimidine left
[05:22] *** bwisti left
[05:24] *** travis-ci joined
[05:24] <travis-ci> Doc build failed. Samantha McVey 'Update .travis.yml to test os MacOS as well as Linux'

[05:24] <travis-ci> https://travis-ci.org/perl6/doc/builds/190847083 https://github.com/perl6/doc/compare/f7ff9b7496a5...9bea4a4ac0e9

[05:24] *** travis-ci left
[05:27] <samcv> oh [Coke] i mean _without_ --no-proc-async

[05:27] *** kyan left
[05:27] *** bartolin left
[05:28] *** Resol left
[05:29] *** bartolin joined
[05:32] <[Coke]> samcv: no, it hangs immediately.

[05:32] <Geth>  doc: 0389b3aac7 | (Samantha McVey)++ | .travis.yml

[05:32] <Geth>  doc: Don't hardcode the home directory so Travis works for MacOS

[05:32] <Geth>  doc: review: https://github.com/perl6/doc/commit/0389b3aac7

[05:32] <samcv> oh ok

[05:32] <[Coke]> first time a highlight is done.

[05:32] <[Coke]> (you're right, it's insanely slow without the async)

[05:32] <[Coke]> still building here...

[05:33] <samcv> [Coke], what node do you have?

[05:33] <[Coke]> ?

[05:33] <samcv> node --version

[05:33] <[Coke]> oh, nodejs. one se

[05:33] <[Coke]> v7.4.0

[05:33] <samcv> ok that's what I have too

[05:35] *** MasterDukeLaptop left
[05:39] *** Actualeyes joined
[05:42] *** holyghost joined
[05:42] *** CIAvash joined
[05:42] *** pyrimidine joined
[05:45] *** Cabanossi left
[05:46] *** Cabanossi joined
[05:50] *** pyrimidine left
[05:52] *** pyrimidine joined
[05:54] *** holyghost left
[05:55] <[Coke]> ok, giving up on seeing if my change worked. bedtime instea.d

[05:56] *** holyghost joined
[05:56] *** pyrimidine left
[05:57] *** travis-ci joined
[05:57] <travis-ci> Doc build errored. Samantha McVey 'Don't hardcode the home directory so Travis works for MacOS'

[05:57] <travis-ci> https://travis-ci.org/perl6/doc/builds/190851897 https://github.com/perl6/doc/compare/9bea4a4ac0e9...0389b3aac74f

[05:57] *** travis-ci left
[05:57] <samcv> ok it stalls before Starting highlights worker thread

[05:57] <samcv>  is displayed

[06:01] *** bjz joined
[06:09] *** thayne joined
[06:10] *** bjz left
[06:23] *** faraco left
[06:26] *** skids left
[06:35] *** atweiden-air joined
[06:35] <atweiden-air> m: class ABC { class DEF {*} }; my ABC::DEF $abc-def .= new; say so $abc-def ~~ ABC;

[06:35] <camelia> rakudo-moar 9a11ea: OUTPUT«False␤»

[06:36] <atweiden-air> is it possible to check that ABC::DEF is part of class ABC?

[06:36] <atweiden-air> ABC::*

[06:38] *** Tonik joined
[06:41] *** girafe left
[06:49] *** RabidGravy joined
[06:53] *** holyghost left
[06:54] <AlexDaniel> atweiden-air: I'm not sure I understand. $abc-def.^name already gives you ABC::DEF

[06:55] *** Tonik left
[06:55] <moritz> atweiden-air: define "part of"

[06:55] <moritz> atweiden-air: inside the namespace != a subtype of

[06:56] <atweiden-air> yes to inside the namespace of

[06:56] *** sortiz joined
[06:57] <sortiz> \o #perl6

[06:57] <samcv> o/

[06:59] *** astj_ joined
[06:59] *** astj left
[07:01] *** domidumont joined
[07:02] *** andrzejku joined
[07:05] *** domidumont left
[07:07] *** domidumont joined
[07:09] *** pyrimidine joined
[07:11] *** holyghost joined
[07:11] *** holyghost left
[07:11] *** holyghost joined
[07:13] *** pyrimidine left
[07:14] <dalek> DBIish: cbdf5b7 | (Salvador Ortiz)++ | / (7 files):

[07:14] <dalek> DBIish: Pg: TypeConverter post-merge cleanup

[07:14] <dalek> DBIish: 

[07:14] <dalek> DBIish: kaare++ the work and original itch

[07:14] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/cbdf5b7bf7

[07:14] *** atweiden-air left
[07:17] <RabidGravy> salortiz++ # I did actually fear that was going to get bike-shedded to death

[07:19] *** faraco joined
[07:20] <faraco>  Mu is the most undefined value. ? What? Going to wiki, it says it means 'nothing'. Is the value == undefined in Perl 5 or NULL in C

[07:21] <faraco> m: say !Int.defined;

[07:21] <camelia> rakudo-moar 9a11ea: OUTPUT«True␤»

[07:21] <moritz> faraco: on a less philosophical level, Mu is is the root of the type hierarchy

[07:21] <moritz> https://docs.perl6.org/images/type-graph-Mu.svg

[07:22] *** raiph joined
[07:22] <faraco> oh, now I understand what it means 'the most undefined'.

[07:23] <faraco> thanks moritz

[07:23] <RabidGravy> if you want to check something is defined, you want to check whether it is defined whatever type it is 

[07:23] <sortiz> RabidGravy, In past months I had to move house and buried in $work, but I'm back

[07:23] <RabidGravy> :)

[07:24] <geekosaur> a type object is the least defined value of a type. Mu is the least defined type.

[07:24] <RabidGravy> anyway off to the code mines

[07:24] <samcv> so shortly I am going to make roast use LINE FEED and FORM FEED instead of LINE FEED (LF) and FORM FEED (FF) for the \c[ ] entries

[07:24] <faraco> is it some sort of 'placeholder' for Mu?

[07:24] <samcv> as soon as I add a fix for MoarVM which allows those unicode alias names to be used. and for now we will still allow LINE FEED (LF) and FORM FEED (FF)

[07:25] <samcv> but they won't be in roast anymore

[07:25] <faraco> I like the documentation. Easy on the eyes to read.

[07:25] <geekosaur> um? what is "it" here?

[07:26] <samcv> moritz, geekosaur thoughts?

[07:26] <faraco> oops, my grammar is messed up. I meant, is Mu some sort of 'placeholder'?

[07:26] <samcv> i am guessing maybe there will be a way we can depreciate the unicode 1 names?

[07:26] <faraco> for Any and Junction?

[07:26] <geekosaur> insofar as it is the most basic type, of which all other types are composed

[07:26] <samcv> maybe in moarvm or something. some message to the user that it's depreciated

[07:26] <samcv> but still compiles and functions

[07:28] <geekosaur> Mu is what you use if you want to allow anything including junctions. This has an operational effect: if a sub or method does not specifically announce that it handles Junctions (by using the type Mu or Junction), perl 6 will autothread a junction given to it

[07:28] <samcv> and i can manually add in those unicode 1 names during the depreciation period, and .uniname will show <control-0020> for \n instead of LINE FEED (LF), but LINE FEED (LF) will still work for \c

[07:30] <geekosaur> Most of the time, if you want an all-inclusive type you want to use Any so that junctions get autothreaded. You would only use Mu if you need (or need to know about) the junction itself for some reason

[07:31] <faraco> geekosaur: I think I need to try the examples first to understand these types in depth.

[07:31] <geekosaur> (autothread = perl 6 will run the sub/method, at least notionally concurrently, for all values in the Junction, combining the result into a Junction)

[07:34] <samcv> j: say "\c[FORM FEED]".ord.base(16)

[07:34] <camelia> rakudo-jvm fb4f16: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name FORM FEED␤at <tmp>:1␤------> 3say "\c[FORM FEED7⏏5]".ord.base(16)␤»

[07:35] <faraco> geekosaur: thanks. Taking that as a note.

[07:45] *** AlexDaniel left
[07:46] *** faraco left
[07:51] *** wamba joined
[07:51] *** jeek joined
[07:51] *** pyrimidine joined
[07:55] *** pyrimidine left
[08:03] *** cschwenz joined
[08:03] *** llfourn joined
[08:03] *** pyrimidine joined
[08:05] *** xtreak left
[08:07] *** pyrimidine left
[08:08] *** xtreak joined
[08:09] *** xtreak left
[08:12] *** cdg joined
[08:14] *** xtreak joined
[08:17] *** ufobat joined
[08:21] *** faraco joined
[08:21] *** xtreak left
[08:26] *** xtreak joined
[08:28] *** faraco left
[08:29] *** domidumont left
[08:31] *** domidumont joined
[08:35] *** zakharyas joined
[08:37] *** xinming left
[08:38] *** cgfbee joined
[08:43] *** holyghost left
[08:48] *** g4 joined
[08:48] *** g4 left
[08:48] *** g4 joined
[08:52] *** domidumont left
[08:52] *** domidumont joined
[08:56] *** ihab joined
[09:06] *** jonas1 joined
[09:09] *** abraxxa left
[09:09] *** holyghost joined
[09:09] *** pyrimidine joined
[09:10] *** xinming joined
[09:14] *** pyrimidine left
[09:16] *** xtreak left
[09:16] *** xtreak joined
[09:17] *** domidumont left
[09:18] *** Actualeyes left
[09:19] *** domidumont joined
[09:24] *** pyrimidine joined
[09:29] *** xtreak left
[09:29] *** pyrimidine left
[09:31] *** dakkar joined
[09:36] *** sortiz left
[09:39] *** ambs left
[09:42] *** xtreak joined
[09:47] *** rindolf joined
[09:47] *** bjz joined
[09:52] *** faraco joined
[09:52] <faraco> A question - https://docs.perl6.org/language/variables#The_%5E_Twigil

[09:52] <faraco> in $/ part

[09:52] <faraco> why the XML.Grammar.parse("<p>some text</p>); doesn't work?

[09:53] <faraco> installed XML, and use XML::Grammar; return (Any)

[09:53] <faraco> I got this error - No such method 'Grammar' for invocant of type 'XML'

[09:53] <faraco>   in block <unit> at t.p6 line 2

[09:53] <DrForr> Because you want XML::Grammar, I think?

[09:54] <DrForr> I.E. XML::Grammar.parse(...)

[09:54] <faraco> so, is the example got mistake there? it use XML.Grammar.parse(...) instead of XML::Grammar.parse(...)

[09:55] *** bjz left
[09:55] <faraco> okay, I think it's typo

[09:55] <DrForr> Yeah, it's a typo. Maybe submit a PR?

[09:56] <faraco> I think I'll direct commit since it's a small change?

[09:56] *** pmurias joined
[09:56] <DrForr> Feel free.

[09:56] <faraco> alright. :D

[09:56] <faraco> thanks for helping

[09:56] <DrForr> No worries.

[10:00] <Geth>  doc: 661567b686 | faraco++ | doc/Language/variables.pod6

[10:00] <Geth>  doc: fixed typo

[10:00] <Geth>  doc: review: https://github.com/perl6/doc/commit/661567b686

[10:01] *** pyrimidine joined
[10:01] *** abraxxa joined
[10:04] *** wamba left
[10:04] *** faraco left
[10:05] *** faraco joined
[10:06] *** abraxxa left
[10:07] *** pyrimidine left
[10:09] *** abraxxa joined
[10:10] *** ufobat left
[10:10] *** ChoHag left
[10:18] *** abraxxa left
[10:19] *** pyrimidine joined
[10:19] *** abraxxa joined
[10:20] *** xinming left
[10:21] *** ugjka left
[10:23] *** pyrimidine left
[10:26] *** ugjka joined
[10:26] *** labster left
[10:28] *** bjz joined
[10:28] *** MARTIMM joined
[10:29] <MARTIMM> o/

[10:29] *** cibs left
[10:29] *** travis-ci joined
[10:29] <travis-ci> Doc build errored. faraco 'fixed typo'

[10:29] <travis-ci> https://travis-ci.org/perl6/doc/builds/190900024 https://github.com/perl6/doc/compare/0389b3aac74f...661567b68641

[10:29] *** travis-ci left
[10:31] *** cibs joined
[10:32] <MARTIMM> I was wondering why 'our' cannot have a type. What is the phylosophy

[10:33] <MARTIMM> Same for *@xyz in argument lists

[10:33] <jnthn> Different reasons

[10:33] <faraco> isn't our for package scope?

[10:34] <jnthn> our is just a lexical alias to a package symbol, and package symbol tables are just hashes.

[10:34] <MARTIMM> where can I look this up?

[10:34] <jnthn> m: { our $a = 42 }; { say our $a }

[10:34] <camelia> rakudo-moar 0f149d: OUTPUT«42␤»

[10:34] <MARTIMM> Ah, I see, there no space in the tables to add type

[10:34] <jnthn> Imagine if the types were different on those two, what would be do?

[10:35] <jnthn> Well, also the declaration is of the alias, not of the symbol, which is just something in a hash

[10:35] <samcv> m: our $a; my int $b = 10; $a := b; say $a.WHAT

[10:35] <camelia> rakudo-moar 0f149d: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    b used at line 1␤␤»

[10:35] <samcv> m: our $a; my int $b = 10; $a := $b; say $a.WHAT

[10:35] <camelia> rakudo-moar 0f149d: OUTPUT«(Int)␤»

[10:36] <jnthn> On *@xyz it's because the incoming values might be from a lazy list, but generally with types we expect them to do their checking "immediately"

[10:37] <faraco> It is weird, why doc compiling on OSX failed. The error is all about The command "$CXX --version" exited with 127.

[10:37] <faraco> any opinion?

[10:38] <faraco> oh: /Users/travis/build.sh: line 57: g++-4.8: command not found

[10:38] <MARTIMM> jnthn: I'll ponder a bit over it, thanks for now

[10:41] *** MARTIMM left
[10:44] *** llfourn left
[10:45] *** MARTIMM joined
[10:47] *** xtreak left
[10:50] <MARTIMM> another question: will submethod DESTROY in a class always be called when an object is teared down. E.g. at program exit. I need something to do like saving data at the end without having to call a save operation explicitly

[10:52] *** ambs joined
[10:53] *** wamba joined
[10:53] *** CIAvash left
[10:53] *** dogbert17 joined
[10:55] *** bubbleup left
[10:56] <jnthn> MARTIMM: No. If you want reliable called-at-exit things, use END

[10:58] <MARTIMM> jnthn: thanks, about the our example you showed: { our $a = 42 }; { say our $a }, does it show 'define/save in one scope and pulling it out in the other?'

[10:59] <jnthn> Pretty much, yes

[11:00] <jnthn> m: GLOBAL::<$a> = 42; { say our $a }

[11:00] <camelia> rakudo-moar 0f149d: OUTPUT«42␤»

[11:00] <jnthn> Though as shown here, it's just a hash, so there's not really a formal point of definition of the entry there.

[11:01] <MARTIMM> I understand now

[11:02] <faraco> A question, what is actually 'dynamic variable'? $*MYDYVAR, is it equivalent to Global variable?

[11:02] *** xtreak joined
[11:03] <faraco> m: say $*ENV

[11:03] <camelia> rakudo-moar 0f149d: OUTPUT«Dynamic variable $*ENV not found␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[11:03] <MARTIMM> say %*ENV

[11:03] <MARTIMM> m:say %*ENV

[11:03] <faraco> m: %*ENV

[11:03] <camelia> rakudo-moar 0f149d: ( no output )

[11:03] <faraco> yeah, hash

[11:03] <faraco> forgot

[11:04] <faraco> so, what it's a global variable? When it says dynamic, I'm thing about 'mutable'.

[11:04] <faraco> thinking*

[11:04] <pmurias> faraco: they are dynamically scoped

[11:05] <faraco> and how dynamically scoped variable works? Can it be accessed from other scopes, class, methods, submethods etc?

[11:05] <pmurias> m: sub foo {say $*FOO}; my $*FOO = 123; {my $*FOO = 456; foo()}; say $*FOO;

[11:05] <camelia> rakudo-moar 0f149d: OUTPUT«456␤123␤»

[11:06] <pmurias> faraco: they can be accessed from the other things you call

[11:07] <pmurias> faraco: so they sort of work like a global, only when you declare a dynamic variable with a my it then gets reset to the previous value

[11:07] <pmurias> faraco: do you know perl 5?

[11:07] <faraco> I don't.

[11:08] *** rindolf left
[11:09] *** TEttinger left
[11:11] <faraco> well, just a little bit. but that's it. nothing more deeper than dabbling the surface.

[11:14] *** raschipi joined
[11:15] <pmurias> faraco: look up https://docs.perl6.org/language/variables#The_*_Twigil

[11:15] <faraco> erm, inside the block, my $*FOO resets variable and assigned with 456; and foo return it as lexical scope. and after the block, it use literally the foo routine again, calling the actual dynamic variable.

[11:16] <faraco> I don't if that what it's supposed to do, or I'm wrong here.

[11:16] <faraco> know*

[11:17] <pmurias> faraco: quoting the docs, a dynamic variable is looked up in the callers scope

[11:18] <Geth>  doc: 9d74487e84 | (Samantha McVey)++ | .travis.yml

[11:18] <Geth>  doc: Allow failures on Travis on MacOS (OS X)

[11:18] <Geth>  doc: review: https://github.com/perl6/doc/commit/9d74487e84

[11:18] <Geth>  doc: b0221a5174 | (Samantha McVey)++ | htmlify.p6

[11:18] <Geth>  doc: Try and end the highlights process after we are done with it

[11:18] <Geth>  doc: review: https://github.com/perl6/doc/commit/b0221a5174

[11:19] <faraco> samcv: is it because g++ v4.8 not exist in OSX?

[11:19] <samcv> no

[11:19] <samcv> some concurrency problem

[11:19] <faraco> oh

[11:19] <samcv> still works on --no-proc-async though

[11:19] <samcv> well since the fix i made today

[11:22] <faraco> pmurias: ah, I think I'm getting the idea now.

[11:22] *** travis-ci joined
[11:22] <travis-ci> Doc build passed. faraco 'Update .travis.yml'

[11:22] <travis-ci> https://travis-ci.org/faraco/doc/builds/190912084 https://github.com/faraco/doc/compare/661567b68641...40f59be5e035

[11:22] *** travis-ci left
[11:23] <faraco> what, did my commit *rebuilt* again

[11:23] <evalable6> faraco, Full output: https://gist.github.com/820e015de0b4be1cabeac96a9ab8bbb3

[11:23] <evalable6> faraco, rakudo-moar 0f149de: OUTPUT«(exit code 1) 04===SORRY!04===␤Type 'commit' is not declared␤at /tmp/vJYkMs9zbP:…»

[11:23] <bisectable6> faraco, On both starting points (old=2015.12 new=0f149de) the exit code is 1 and the output is identical as well

[11:23] <committable6> faraco, ¦«did»: Cannot find this revision (did you mean “all”?)

[11:23] <bisectable6> faraco, Output on both points: 04===SORRY!04===␤Type 'commit' is not declared␤at /tmp/OFMFrihaDB:1␤------> 03did my commit08⏏04 *rebuilt* again␤Malformed my␤at /tmp/OFMFrihaDB:1␤------> 03did my08⏏04 commit *rebuilt* again␤

[11:24] <faraco> okay, I need to learn this IRC bot commands. Help?

[11:26] *** xinming joined
[11:26] <raschipi> what what?

[11:26] <raschipi> what, what?

[11:26] <evalable6> raschipi, Full output: https://gist.github.com/9ec3a6c024b0862234b4c911abcf4d4e

[11:26] <evalable6> raschipi, rakudo-moar 0f149de: OUTPUT«(exit code 1) 04===SORRY!04=== Error while compiling /tmp/FBoDzSfAqs␤Bogus postf…»

[11:26] <bisectable6> raschipi, On both starting points (old=2015.12 new=0f149de) the exit code is 1 and the output is identical as well

[11:26] <bisectable6> raschipi, https://gist.github.com/dbb196f7a63dc9abfd1d206f62e214cb

[11:27] <raschipi> The bots understand a message sdtarting whith "what," as a command. I thought they had fixed the whatevables to only do this to a few people that want it.

[11:28] <cschwenz> this has all the makings of a "Who's on first." routine…

[11:29] <faraco> whoa, https://gist.github.com/Whateverable. A secret bot gist acc.

[11:30] <raschipi> Why do you think it's secret?

[11:31] <faraco> it's secret to me, because I never told about it. Actually, I'm just saying. doesn't mean it literally.

[11:31] <raschipi> ok

[11:32] <notviki> .tell AlexDaniel you were waiting for it to happen again: https://irclog.perlgeek.de/perl6/2017-01-11#i_13898957

[11:32] <yoleaux> notviki: I'll pass your message to AlexDaniel.

[11:33] <raschipi> Thanks Pete, I was looking who to send the message to.

[11:34] <notviki> Who's pete?

[11:34] <raschipi> Hum, I thought your name was Pete.

[11:34] <raschipi> Sorry for the confusion.

[11:34] <notviki> nope

[11:35] <faraco> why the doc build still return error. hmm

[11:35] <notviki> faraco: doesn't the above say it passed?

[11:36] <notviki> the travis bot

[11:37] *** rindolf joined
[11:37] <faraco> that's weird. the build of 3306.1 failed.

[11:37] <raschipi> notviki: Isn't your name "Peter Evans"?

[11:37] <faraco> or I'm crazy

[11:38] <notviki> raschipi: no

[11:39] <raschipi> Soory for the confusion, then.

[11:40] <notviki> raschipi: and even if you knew my name, why use it here? Not everyone wants to be IDed

[11:41] <raschipi> Sorry for it. I have seen it in many places, I thought you didn't care.

[11:41] <raschipi> Calling people their names is considered polite where I come from.

[11:42] <DrForr> raschipi: This is IRC, rules are a bit different here. I use nicks in public and private conversation on IRC, and real names only rarely.

[11:42] <cschwenz> DrForr++  :-)

[11:43] <DrForr> Part of the fun of going to a convention is having people say "*You're* X?"

[11:43] <raschipi> Sorry for the cultural mismatch. I learned it already.

[11:43] <mst> raschipi: on IRC, a person's nick *is* their name, and calling them something else is weird

[11:43] <DrForr> No worries.

[11:44] <raschipi> Let me change mine, then.

[11:45] <DrForr> Hell, the first time *I* went to a convention (YAPC 99) I unpacked my stuff at the dorm and headed out to look for the nearest bar, figuring I'd find some hacker types.

[11:45] <mst> I mean, I solved the problem by using my initials, because I wanted a coherent multi-platform identity

[11:45] <mst> but people are allowed to want different things to me

[11:46] *** notviki is now known as brokenchdir

[11:46] <DrForr> I didn't think there was a picture of me online anywhere, so you can imagine my surprise when I walked by a cafe' and heard 30 people shout my nick in unison.

[11:47] *** bjz_ joined
[11:48] *** xtreak left
[11:49] *** bjz left
[11:50] <mst> DrForr: oh that's *excellent*

[11:50] <faraco> "Hey DrForr, want drink some coffee with me!"

[11:50] <mst> I'm so used to IRC nicks as primary identifiers that I mostly use people's nicks in person too

[11:51] *** xtreak joined
[11:51] * ilmari justuses his real name as his irc nick

[11:51] *** xtreak left
[11:51] *** travis-ci joined
[11:51] <mst> (this is one of the reasons I grumble about Zoffix being unable to pick one, but he appears to be ok with me just always using Zoffix ;)

[11:51] <travis-ci> Doc build failed. Samantha McVey 'Try and end the highlights process after we are done with it'

[11:51] <travis-ci> https://travis-ci.org/perl6/doc/builds/190920650 https://github.com/perl6/doc/compare/661567b68641...b0221a51749d

[11:51] *** travis-ci left
[11:51] <ilmari> although I didn't start using it IRL until 9 years ago

[11:52] <cschwenz> i've run into the following problem in some code i'm writing:  given an Iterable that contains any Perl 6 core data type, how do i find the first String/Number (descending into contained Iterables when found, so depth first) in the given Iterable?

[11:52] <mst> ilmari: this is filed under "things mst was never going to notice" ;)

[11:53] <ilmari> mst: when I lived in .no I used my norwegian first name, but that turned out to be phonetically confusing to english-speaking people

[11:53] <ilmari> so when I quit my first job I changed to using the finnish one

[11:53] <ilmari> (first .uk job)

[11:54] <mst> well, I'm pretty sure your first name contains at least one sound that doesn't actually appear in english

[11:55] <mst> the best I can manage IIRC is to be recognisably trying while mispronouncing it

[11:55] *** pyrimidine joined
[11:56] <ilmari> mst: most people do a reasonable job when reading it out loud (modulo the wrong a sound), it's when I say it to them it's confusing

[11:56] <mst> pretty sure the 'f' isn't an english 'f' sound either?

[11:56] <mst> it seems like halfway between an f and a v to me when I hear you say it

[11:57] <raschipi> SmokeMachine also uses his complete name in GitHub and didn't mind when I used it.

[11:57] <ilmari> mst: that might just be me being sloppy, or the preceding g influencing it

[11:57] <gfldex> cschwenz: see https://gfldex.wordpress.com/2016/10/02/things-i-found-out-while-finding/

[11:57] <gfldex> cschwenz: look for .&?BLOCK

[11:57] <brokenchdir> cschwenz: deepmap/duckmap?

[11:57] *** ugjka is now known as UgJkA

[11:58] <mst> raschipi: sure. most people won't care. but IRC nicks are a better identifier on IRC anyway. so you may's well use them.

[11:58] <brokenchdir> I don't remember if they do depth first but easy to check

[11:58] <cschwenz> thanks gfldex :-)

[11:58] <mst> the whole "not identifying people" is not my primary reason, clarity of communication is my primary reason

[11:58] <cschwenz> brokenchdir: what do you mean by deepmap/duckmap?

[12:00] *** pyrimidine left
[12:00] <brokenchdir> cschwenz: the two routines

[12:00] <DrForr> raschipi: See how your client highligts when I use your nick? It won't happen with your real name.

[12:00] <brokenchdir> cschwenz: made for... descending into stuff

[12:00] <brokenchdir> cschwenz: https://docs.perl6.org/routine/duckmap  https://docs.perl6.org/routine/deepmap

[12:01] <brokenchdir> m: [1, [3, 5, [6, 'foo',], 'bar'], 'meow'].duckmap: -> Str $x { say "First Str is $x"; last }

[12:01] <camelia> rakudo-moar 0f149d: OUTPUT«First Str is foo␤First Str is bar␤First Str is meow␤»

[12:01] <brokenchdir> too bad `last` doesn't work

[12:03] *** mst left
[12:03] *** mst joined
[12:03] <gfldex> m: (1,2,3).map: { say 'ello'; last; say 'oi‽' }

[12:03] <camelia> rakudo-moar 0f149d: OUTPUT«ello␤»

[12:03] <gfldex> brokenchdir: i would vote that last not working in duckmap to be a bug

[12:04] <arnsholt> mst: I think the only sound in ilmari's first name that isn't in english is the a vowel

[12:04] <arnsholt> But Norwegian has weird intonation patterns, which tends to throw non-natives for a bit of a loop

[12:05] <arnsholt> They're not phonemic though (barring a couple of edge cases), so getting them wrong isn't too big a deal

[12:05] <ilmari> arnsholt: the a? that's pretty similar to the (southern-english) bath, but a bit shorter

[12:06] <mst> getting something with the intonation of the southern 'bath' sound and the length of the northern 'bath' sound is ... interesting

[12:07] <ilmari> people who read it pronounce it like the northern-english bath, which I can live with

[12:07] <cschwenz> ah, okay.  thanks brokenchdir :-)

[12:07] <ilmari> i.e. like the first syllable in dagger

[12:15] *** fluca1978 joined
[12:16] *** _Vasyl joined
[12:18] <El_Che> Perl devroom at FOSDEM full schedule: https://fosdem.org/2017/schedule/track/perl/ (added: stevan's abstract)

[12:18] *** pyrimidine joined
[12:20] <mst> El_Che: who's going to be in charge of the LTs ?

[12:20] <brokenchdir> gfldex, yeah, my first expectation was for it to work

[12:21] <DrForr> Oh, goodie, he's just after me :) Well, after I put the crowd to sleep, he can wake 'em up :)

[12:21] <El_Che> mst: in chanrge? I was thinking on show up, and stop after max 5m (most people will announce things like a workshop or yapce I suspect, so often just a few minutes)

[12:21] <El_Che> mst: nothing planned really

[12:22] <mst> El_Che: right, but whoever's timekeeping normally has a list in advance

[12:22] <mst> the main thing here is I don't want the list to be full before I have a chance to work out wtf I feel like giving an LT about ;)

[12:22] *** pyrimidine left
[12:23] <El_Che> ah, you're coming? nice

[12:23] <mst> looks like "probably" atm

[12:23] *** cdg left
[12:23] <El_Che> I called it "Announcements & LT" because of the more spontanous nature of the "talks")

[12:24] <mst> right

[12:24] <El_Che> I could reserve the first spots for people that come to see mee during the day

[12:24] <El_Che> I need to think about that

[12:24] *** matt_ left
[12:25] <El_Che> I reckon, being Sunday, many people are tired and just want to go to the restaurant :)

[12:25] <mst> suggest asking rgeoffrey for advice

[12:25] <El_Che> thx, I will

[12:25] <mst> he runs the ::NA and ::EU LTs

[12:25] <mst> also you could ask acme who does the LPW ones

[12:26] <El_Che> mst: I'll discuss it with Wendy and maybe post more about the format

[12:27] <mst> basically, if possible, you want people to come up with LT ideas on the day if something inspires them

[12:27] <mst> BUT also you don't want to end up with scheduling issues thereby

[12:27] <El_Che> I took a more improvisized approach because I wan't really thinking about talks, more about "hey, i have something cool to say"

[12:27] <El_Che> 15m is pretty short

[12:27] <mst> oh, you've only got a 15m slot for the whole thing?

[12:28] <El_Che> yes --> hence the "announcements addition"

[12:28] <El_Che> we had some people jumping in at the last minute

[12:28] <mst> don't call it LTs at all then, just 'announcements and stuff'

[12:29] <mst> given a normal LT is normally ~4min

[12:29] <El_Che> I expect Theo talking about YAPC::EU and Wendy about the post-fosdem restaurant

[12:29] <mst> right

[12:29] <El_Che> adapting the title is a good idea

[12:30] <El_Che> I fear though, when removing LT, people won't come forward

[12:30] <El_Che> LT == open mic

[12:30] <El_Che> Announcement == "internal thingy"

[12:31] <El_Che> "Announcement & Open Mic" or something

[12:31] <mst> yeah, so do it as 'announcements and lightning advertisements' and then tell people in between other talks

[12:35] *** matt_ joined
[12:35] *** ambs left
[12:35] *** matt_ is now known as Guest41757

[12:36] *** ambs joined
[12:37] *** ChoHag joined
[12:39] *** bjz joined
[12:39] *** bjz_ left
[12:42] <arnsholt> ilmari: True, true. The dialects have the pure a sound. But TBH, it's mostly the intonation that makes foreigners sound funny when they attempt Norwegian

[13:00] *** bwisti joined
[13:00] *** Kaffe left
[13:02] *** MARTIMM left
[13:04] *** fluca1978 left
[13:07] *** mr_ron joined
[13:08] *** Kaffe joined
[13:19] *** pyrimidine joined
[13:22] *** lukaramu joined
[13:24] *** pyrimidine left
[13:32] <faraco> hey guys, is there anybody knows any perl 6 freely released ebooks? I'm gonna add it to here - https://github.com/vhf/free-programming-books/pull/2198

[13:34] <brokenchdir> Don't know any

[13:35] <brokenchdir> As in.. there likely aren't any.

[13:35] <DrForr> Well, there are several books in progress and at least one that I know is out, but not for free yet.

[13:36] <faraco> DrForr - you mean the 'Perl 6 by Example'?

[13:36] <DrForr> Andrew Shitov, yes.

[13:36] <faraco> ah

[13:37] <faraco> I see. Well, I have to wait a little longer then. Thanks for the input guys.

[13:38] *** hchienjo joined
[13:38] <DrForr> Or write one yourself while you're learning, that's the best time because you know exactly what you want to find, and can research it as you're writing :)

[13:39] *** hchienjo left
[13:39] *** raschipi left
[13:40] *** xinming left
[13:40] <faraco> DrForr: unfortunately, my English is not good enough for me to write a book. Although, you give me an idea to write it in my native language.

[13:41] <DrForr> Which is? Someone might be willing to translate if the text has already been written...

[13:41] <DrForr> There's one that's coming out which is in French originally, but being translated to English.

[13:42] *** xinming joined
[13:42] <faraco> oh, now you giving me another idea to use Gitbook.

[13:42] <faraco> collaborating writing.

[13:43] <perlpilot_> also, don't discount someone helping to make your english better if you choose to go that route.

[13:43] <faraco> thanks DrForr, will try that and see where it's going.

[13:43] <DrForr> perlpilot_: Good point, I've offered to do that here for our docs but nobody seemed to be interested.

[13:44] <faraco> perlpilot_: Well, I try to improve my English by using them as much as possible.

[13:46] *** cschwenz left
[13:49] <faraco> s/them/it

[13:54] *** dj_goku left
[13:55] * [Coke] boggles at the britishness of "want different things to me". :)

[13:55] *** brokenchdir is now known as brokenchicken

[14:01] * brokenchicken wonders how to make perl6 scripts not have a kilometre long paths in htop

[14:01] *** shmibs joined
[14:01] <brokenchicken> my p6 is via rakudobrew :/

[14:01] <mst> brokenchicken: overwrite whatever the local $0 equivalent is?

[14:02] * brokenchicken doesn't know how to do that :(

[14:02] <mst> and I don't know where the list of superglobals is documented

[14:03] <mst> [Coke]: hm?

[14:03] *** buggable left
[14:04] *** buggable joined
[14:04] *** ChanServ sets mode: +v buggable

[14:05] *** dj_goku joined
[14:06] <[Coke]> mst: in ameringlish, it's "different from" or "different than" 

[14:06] <[Coke]> "to" is right out.

[14:06] <brokenchicken> well, there are $*PROGRAM / $*PROGRAM-NAME but they're immutable and if I `my` them I don't see them change the htop value

[14:07] <mst> oh, this may be another on the list of "standard facilities perl6 doesn't have yet" then

[14:07] <mst> load Inline::Perl5 and set $0 from perl5 space

[14:08] <mst> what could possibly go wrong

[14:09] <brokenchicken> and that htop name is "/home/zoffix/.rakudobrew/moar-nom/install/bin/moar --execname=/home/zoffix/.rakudobrew/bin/../moar-nom/install/bin/perl6 --libpath=/home/zoffix/.rakudobrew/moar-nom/install/share/nqp/lib --libpath=/home/zoffix/.rakudobrew/moar-nom/install/share/nqp/lib --libpath=/home/zoffix/.rakudobrew/moar-nom/install/share/perl6/lib

[14:09] <brokenchicken> --libpath=/home/zoffix/.rakudobrew/moar-nom/install/share/perl6/runtime /home/zoffix/.rakudobrew/moar-nom/install/share/perl6/runtime/perl6.moarvm foo.p6"

[14:09] <brokenchicken> dunno why nqp/lib is there twice

[14:09] <mst> because once for moar and once for nqpm and it so happens they have the same prefix and the script generator doesn't dedupe because it predates us knowing what a prefix is

[14:09] <brokenchicken> :o

[14:10] * [Coke] is kind of wistful that @inc on twitter ain't a perl handle.

[14:10] <mst> moar ships a share/nqp directory containing the opcodes

[14:11] <mst> nqp ships a share/nqp directory containing the other crap it needs

[14:11] <mst> the fact everything assumed they would be the same directory was a lolsob slide

[14:11] <brokenchicken> :D

[14:12] <[Coke]> samcv: ah. I just realized that the slowdown of 'make htmlify' here on my work mactop is very likely a problem with dayjob's enterprise security "features" that were rolled out in teh past month.

[14:13] <[Coke]> dammit.

[14:13] <brokenchicken> EVAL '$0 = "foo"; print "hi\n"', :lang<Perl5>; didn't do anything to help

[14:15] <Geth>  ecosystem: finanalyst++ created pull request #285: adding Informative (popup dialog box) to ecosystem

[14:15] <Geth>  ecosystem: review: https://github.com/perl6/ecosystem/pull/285

[14:15] <Geth>  ecosystem: 74954c881a | (Richard Hainsworth)++ | META.list

[14:15] <Geth>  ecosystem: adding Informative (popup dialog box) to ecosystem

[14:15] <Geth>  ecosystem: 

[14:15] <Geth>  ecosystem: see https://github.com/finanalyst/p6-inform

[14:15] <Geth>  ecosystem: review: https://github.com/perl6/ecosystem/commit/74954c881a

[14:15] <Geth>  ecosystem: f3bc5568c8 | (Zoffix Znet)++ | META.list

[14:15] <Geth>  ecosystem: Merge pull request #285 from finanalyst/master

[14:15] <Geth>  ecosystem: 

[14:15] <Geth>  ecosystem: adding Informative (popup dialog box) to ecosystem

[14:15] <Geth>  ecosystem: review: https://github.com/perl6/ecosystem/commit/f3bc5568c8

[14:15] <brokenchicken> hmm

[14:16] <brokenchicken> IIRC that ain't gonna work actually..

[14:16] <mst> brokenchicken: welp, there's probably some weird interaction between rakudo and perl5 that I don't understand then

[14:17] <Geth>  ecosystem: 42baa321b4 | (Zoffix Znet)++ | META.list

[14:17] <Geth>  ecosystem: s/META.json/META6.json/

[14:17] <Geth>  ecosystem: review: https://github.com/perl6/ecosystem/commit/42baa321b4

[14:20] *** ocbtec joined
[14:22] <Geth>  doc/coke/pngless: 29295940fe | (Will "Coke" Coleda)++ | 2 files

[14:22] <Geth>  doc/coke/pngless: Don't generate .png typegraph files

[14:22] <Geth>  doc/coke/pngless: review: https://github.com/perl6/doc/commit/29295940fe

[14:22] *** pyrimidine joined
[14:25] <Geth>  doc: coke++ created pull request #1131: Don't generate .png typegraph files

[14:25] <Geth>  doc: review: https://github.com/perl6/doc/pull/1131

[14:25] <[Coke]> hey, the PR notifications work. nifty.

[14:26] <[Coke]> docs - do we have an infrastructure machine we can run a dynamic site on?

[14:26] *** pyrimidine left
[14:27] <mst> [Coke]: doing that for docs.perl6.org sounds like a terrible idea.

[14:28] <moritz> [Coke]: depends on the anticipated resource usage

[14:28] <moritz> the machine has 4g RAM

[14:28] <[Coke]> eh. guess I'll just do everything in JS.

[14:29] <mst> [Coke]: it's all fun and games until an aggregator hugs you to death

[14:29] <brokenchicken> :)

[14:30] <[Coke]> mst: I mean, obvs. it'd be caching. somewhere. (I don't want to ahve to set any of that up though, so.)

[14:30] *** cdg joined
[14:30] <mst> a static site generator is the easiest to sysadmin pre-emptive cache

[14:30] <[Coke]> I'd appreciate if someone whose machine ISN'T being slowed to a crawl by security software gave that PR a go.

[14:31] *** travis-ci joined
[14:31] <travis-ci> Doc build errored. Will "Coke" Coleda 'Don't generate .png typegraph files'

[14:31] <travis-ci> https://travis-ci.org/perl6/doc/builds/190968416 https://github.com/perl6/doc/commit/29295940fea2

[14:31] *** travis-ci left
[14:31] <[Coke]> Install [FAIL] for zef:auth('github:ugexe'): ^^

[14:32] *** llfourn joined
[14:33] *** skids joined
[14:36] <andrzejku> hey someone from USA here?

[14:36] <pmurias> andrzejku: plenty of people from the USA here

[14:37] <andrzejku> I have got an opportunity to take a job in Detroit

[14:37] <jonadab> There are jobs in Detroit?

[14:37] <jonadab> TIL

[14:37] <brokenchicken> There are people in Detroit? TIL

[14:37] <andrzejku> yeah, I also think it is bad idea even for guy from middle europe

[14:37] <faraco> Holy

[14:38] <andrzejku> we are poor here but Detroit is worse

[14:38] <andrzejku> however maybe I am not right

[14:38] <jonadab> andrzejku: Personally, I would consider detroit the second-worst city in America, after Los Angeles.

[14:38] <faraco> why? crime rate?

[14:39] <jonadab> faraco: crime rate is certainly relevant, and part of it.

[14:39] <[Coke]> I mean, there are some big names still there that are good to work for. my company has a large it presense there.

[14:39] *** bjz left
[14:39] <brokenchicken> They should build another robocop :P

[14:39] <andrzejku> I also don't know if I need rent car to live there and how much will cost life there with a apartament renting and healthy food for 3 ppl

[14:39] <jonadab> Also, detroit was historically dominated, economically speaking, by the automobile manufacturing industry, which has been slowly dying in this country for more than half a century.

[14:40] <jonadab> andrzejku: You'd need a car, yes.

[14:40] <andrzejku> oh okay :D

[14:40] <andrzejku> jonadab, so it is not for me

[14:40] <jonadab> But that's true _almost_ anywhere in America.

[14:40] *** Actualeyes joined
[14:41] <jonadab> I wouldn't really consider needing a car to be one of the reasons to avoid Detroit.

[14:41] <andrzejku> I need to make driving license since I go by foot or public transport and by bike in my city

[14:41] <andrzejku> nearly everywhere

[14:41] <jonadab> I go by foot around Galion, sure; but at some point you need to go somewhere too far away to walk.

[14:42] <jonadab> Any city large enough that you never need to go down the road to another city, is large enough that you can't walk across town.

[14:42] <brokenchicken> What about public transit?

[14:42] <jonadab> And really pervasive public transport in America is limited to a handful of megacities (Chicago, New York, SoCal, etc.

[14:43] <andrzejku> looks like Europe is more attractive for me

[14:43] *** MasterDukeLaptop joined
[14:43] *** faraco left
[14:43] <jonadab> Some medium-size cities (e.g., Cleveland, Chicago) have _some_ public transport; I imagine Detroit is likely in that category; but it would be massively inconvenient to be entirely dependent on that.

[14:44] <jonadab> I mean, when my brother-in-law lived in Miami, he relied on public transport; it took him 2-3 hours by bus to make a trip that would be an hour or less by car.

[14:45] <jonadab> (When he married my sister, he moved to West Palm Beach, and they have a car.)

[14:45] <mst> america doesn't really do public transport, sadly

[14:46] <mst> that and the whole 'papers please' attitude are probably my main annoyances

[14:46] <jonadab> I don't think public transport is really practical in most of America.  Our population distribution is too evenly spread out, not bunched up like Europe and Japan.

[14:46] <andrzejku> what do you by 'papers please'?

[14:46] *** pyrimidine joined
[14:46] <brokenchicken> Here it's more convenient for me to take the bus than sit in traffic

[14:46] <andrzejku> mean*

[14:47] <mst> having to have my passport with me at all times

[14:47] <brokenchicken> Well, you do have a funny accent :P

[14:47] <jonadab> mst: That's likely only relevant if you're near a border.

[14:47] <jonadab> Or a major coastal city, possibly.

[14:47] <jonadab> Well, you need ID if you do something like write a check, so if your passport is your only ID...

[14:48] <mst> jonadab: or if I want to buy cigarettes, or if a cop is bored, or ...

[14:48] * brokenchicken wonders what's the most accurate way to get just the fractional part of a numeric...

[14:48] <f3ew> mst: that's no different from Europe (papers please)

[14:48] <mst> f3ew: yes it is.

[14:49] <jonadab> mst: I live in Ohio, and it's been months since I showed anyone my ID.

[14:49] <jonadab> Last time I went to the BMV, I think, in fact.

[14:49] <jonadab> My bank doesn't even ask for ID when I cash my paychecks.

[14:49] <mst> jonadab: I get the feeling the non-coastal states are significantly less terrible

[14:49] <jonadab> mst: That seems likely.

[14:50] <mst> IIRC in ohio the only time I facepalmed was the fact that the bars had to card people who were obviously in their forties

[14:50] <jonadab> But don't tell the people from New York and California, they want to call us "flyover country" and pretend we aren't significant.

[14:50] <mst> yes, well, I used 'non-coastal' advisedly :)

[14:50] <jonadab> Heh.

[14:51] *** pyrimidine left
[14:52] <mst> but in both .uk and mainland europe, I can usually leave my passport in my hotel room and it never matter

[14:52] <jonadab> As for bars, yes, they want to err on the side of carding anyone even remotely close to potentially needing to be carded, but that's partly a cultural thing to do with the role of alcohol in society.  (The socially acceptable way to drink alcohol in America is _at home_.  Doing it out in public is...  frowned on.)

[14:53] *** jgrabber joined
[14:53] <jonadab> I kept my passport on my person when I was in Canada, but I think I only ever actually needed it at the border.

[14:53] <jdv79> afaik its illegal in most, if not all of the US to drink in public

[14:54] *** confundus joined
[14:54] <jonadab> jdv79: Well, it's legal to drink in a bar; but there is significant social stigma attached to even going into a bar.

[14:54] <jdv79> where?  i can tell you that is not the case here in nyc

[14:54] <jdv79> in fact its likely teh opposite

[14:55] <jdv79> odd convo for #perl6.  maybe i should backlog...

[14:55] <jonadab> I'm in Ohio, have also lived in Indiana, Michigan, and travelled significantly in Pennsylvania.

[14:55] <f3ew> mst: I have to be able to prove my identity (which requires passport + residence permit/visa in the EU)

[14:55] <mst> f3ew: for what?

[14:55] <f3ew> mst: it's a legal requirement :)

[14:56] <f3ew> Any police officer can ask for it, my bank needs it for anything significant, getting insurance, etc

[14:56] <brokenchicken> 0.o

[14:56] * brokenchicken doesn't even HAVE a passport

[14:56] <brokenchicken> In Canukistan.

[14:57] <jonadab> brokenchicken: You only need a passport if you travel outside your country of citizenship.

[14:57] <jonadab> I never had one either, until I planned a trip to Niagara Falls.

[14:57] <pmurias> f3ew: isn't it country rather then Europe specific?

[14:57] <mst> f3ew: oh, identity documents for banks, sure

[14:57] <jonadab> (Later I travelled more extensively in Canada.)

[14:58] <jonadab> Right, banks require ID probably everywhere; but it only has to be a passport if you're in a foreign country, obviously.

[14:59] <jonadab> Actually, the _first_ time I travelled in Canada, I didn't need a passport.  But that was before September 11th.

[15:00] <mst> after which we collectively lost our shit, but that's a whole different rant that we probably don't want to get all over the channel

[15:00] <jonadab> True.

[15:00] <jonadab> (Sane response to September 11th:  hmm, maybe this long-standing policy of pacifying plane hijackers by doing whatever they want until the plane is on the ground, is not such an awesome plan; let's not do that.)

[15:01] <mst> f3ew: given when I visit EU countries normally I don't even have a paper visa of any sort, I'm confused how I could be legally required to carry one to show the police though

[15:01] *** jonas1 left
[15:02] <jonadab> mst: A visa is different.  I don't need a visa to go to Canada either.

[15:02] <jdv79> I think technically a US citizen is required to be able to produce a passport in the schengen area but i've never carried mine and had no trouble.

[15:02] <pmurias> mst: they can check your passport to see if you are from the EU

[15:02] <mst> jonadab: I'm responding to < f3ew> mst: I have to be able to prove my identity (which requires passport + residence permit/visa in the EU)

[15:03] <jdv79> i mean out and about.  of course i had one.

[15:03] <jonadab> mst: Whether a visa is required depends where you're from, typically.

[15:03] <jonadab> US citizens don't need a visa in Canada; Europeans don't need a visa anywhere in the EU.

[15:04] <mst> jonadab: the sky is blue

[15:04] <mst> (we're playing "state the obvious" until f3ew replies, right?)

[15:05] <jonadab> mst: Do I need to state the even more obvious thing that, this being the internet, he might be from a different country than you are?

[15:05] <jnthn> mst: Here in .cz, you can always be asked for ID by the police, and can be fined if you can't produce it. In practice, I never have been asked to date.

[15:06] *** _4d47 joined
[15:06] <jnthn> So it's certainly the case that you're required to carry some form of ID in some European countries.

[15:06] <jast> my country (EU) does in fact require people to possess official proof of identity (passport or identity card), though it does not require you to carry it with you

[15:06] <mst> jonadab: no, you don't, which is why I was waiting for him to reply, so we would find out.

[15:07] *** g4 left
[15:09] *** cdg_ joined
[15:10] *** raschi joined
[15:11] *** cdg left
[15:12] <mst> I don't actually mind the idea that I should always have ID with me while in a foreign country. What I mind is the idea that I'm going to have to produce it All The Damn Time, and that that's considered completely normal

[15:13] <jnthn> Ah. Then, in my experience, no problems here. :)

[15:15] *** FROGGS joined
[15:15] <mst> americans seem to find my aversion to that to be as confusing as my lack of aversion to CCTV

[15:15] <mst> oh what a world etc.

[15:16] *** travis-ci joined
[15:16] <travis-ci> Doc build passed. Will "Coke" Coleda 'Don't generate .png typegraph files'

[15:16] <travis-ci> https://travis-ci.org/perl6/doc/builds/190968416 https://github.com/perl6/doc/commit/29295940fea2

[15:16] *** travis-ci left
[15:16] <raschi> Come to Brazil, you don't need to carry id around here.

[15:17] <f3ew> pmurias: I'm not a citizen of a EU country, they all have that requirement

[15:17] *** pyrimidine joined
[15:17] <huf> here you're expected to carry your ID all the time but you almost never have to produce it, UNLESS you're a teenager or a minority

[15:17] <brokenchicken> Wasn't not being stopped by police without reason one of the items on universal declaration of human rights that like all of UN supposedly aheres to?

[15:17] <f3ew> Sorry, work called

[15:18] <raschi> "without reason" They can do it with very little reason, though.

[15:18] <f3ew> It's not *all* the time. It's *any* time a government agent demands it.

[15:18] <huf> "you looked suspicious"

[15:18] <huf> done

[15:19] <f3ew> "Prove you are legally resident"

[15:19] <huf> suspicious behavior includes being 16 years old without a parent near :)

[15:19] <raschi> "I thought I smelled something funny"

[15:19] <jeek> No one shall be subjected to arbitrary arrest, detention or exile.

[15:19] <jeek> Depends on how you define "detention", I'd wager.

[15:19] <[Coke]> m: lc

[15:19] <camelia> rakudo-moar 563d11: OUTPUT«5===SORRY!5===␤Argument to "lc" seems to be malformed␤at <tmp>:1␤------> 3lc7⏏5<EOL>␤Other potential difficulties:␤    Unsupported use of bare "lc"; in Perl 6 please use .lc if you meant $_, or use an explicit invocant or argument, or u…»

[15:20] *** pyrimidine left
[15:20] *** pyrimidi_ joined
[15:21] <f3ew> jeek: "show ID or we will detain you"

[15:21] <[Coke]> m: tc

[15:21] <camelia> rakudo-moar 563d11: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Calling tc() will never work with declared signature (Cool $s)␤at <tmp>:1␤------> 3<BOL>7⏏5tc␤»

[15:21] * [Coke] wonders why those are so different.

[15:21] <raschi> In Brazil, they can stop you to ID you if they suspect a crime. Technically, at this time you'd have to present id. But it has been modernized and police can serch the civil registries from their cars now. So people don't need to carry id anymore, just state their complete name and birth date when asked.

[15:22] <raschi> Well, it's not a federal system, but it works like that in the south.

[15:22] <mst> raschi: that fits within my criteria for "actually civilised"

[15:23] <raschi> mst: thanks.

[15:23] <gregf_> is it true that 80% of the population end up in prisons in brazil? #no case for an ID then

[15:24] <mst> gregf_: wat

[15:24] <mst> I sometimes suspect britain is basically kinda neurotic about mandatory id

[15:24] <raschi> gregf_: No, this is not the United States.

[15:24] <huf> hahahahahaha 80%

[15:24] <f3ew> Heh

[15:26] *** pyrimidi_ left
[15:26] <raschi> Carrying id has never been mandatory in Brazil, but police was forbidden from arresting you to perform identification if you were carrying yours. So people got used to carrying it around. Now police can id people without the document, so it's not necessary anymore.

[15:28] *** gregf_ left
[15:29] *** gregf_ joined
[15:30] <perlpilot_> #perl6 is weird today

[15:30] <Woodi> it's all a bit strange... police officer standing in fron of you do not ask "Who you are?" but rather "Show me the papers"... It's seems so "remote" from reality ;)  Just like Kerberos, to do things you need TGT from some centralised place :)

[15:32] <jast> at least Kerberos doesn't also charge you $$$ for the TGT

[15:33] <raschi> In Brazil people are not charged for their id either. The government is forbidden from charging for procedures considered "essencial for citenship".

[15:34] <f3ew> Nice

[15:34] <Woodi> anyway, chdir in multi threaded app is weird... some layer between environment and app internals (job queue?) should be some standard thing :)

[15:36] <Woodi> raschi: wow... Brazil gov sytem looks to be very sane. maybe you need some advertising ? :)

[15:38] <pmurias> Woodi: AFAIK the id checking works the same name in our country too

[15:38] *** raschi left
[15:38] <Woodi> pmurias: but gov/police attitude seems some sane...

[15:40] *** raschipi joined
[15:41] <pmurias> Woodi: we don't have any urban warfare so the policing seems relatively sane

[15:41] <raschipi> Our laws are good, they're not followed sometimes, though.

[15:42] <Woodi> pmurias: don't saying we have prolems with police or id. actually law allow us to not carry id at all

[15:44] *** khw joined
[15:44] <raschipi> Woodi: where are you from?

[15:45] <Woodi> raschipi: Poland

[15:45] <raschipi> What would the police do if they suspect you commited a crime and you aren't carrying id?

[15:46] <Geth>  doc: cae174eba6 | (Will "Coke" Coleda)++ | htmlify.p6

[15:46] <Geth>  doc: Revert "Try and end the highlights process after we are done with it"

[15:46] <Geth>  doc: 

[15:46] <Geth>  doc: This reverts commit b0221a51749d2356c43d318ef9163c7eaed22fba.

[15:46] <Geth>  doc: review: https://github.com/perl6/doc/commit/cae174eba6

[15:46] <Woodi> raschipi: first, they will make me to wait :)  and then depends if I'm suspect, etc

[15:46] <[Coke]> samcv: I reverted your last doc commit, it had a syntax error.

[15:49] <Woodi> and I would not worry about car industry in States :)

[15:49] *** llfourn left
[15:49] * Woodi afks

[15:51] *** shayan_ joined
[15:53] <raschipi> There's a "right to petition" in Brazil, and it's considered on of the "basic citizenship" rights, which means anyone can petition the government and they won't charge for it. My wife works answering petitions people file at a public office.

[16:03] *** pyrimidine joined
[16:03] *** Guest41757 left
[16:03] *** matt_ joined
[16:04] *** matt_ is now known as Guest76099

[16:04] *** jgrabber left
[16:07] *** pyrimidine left
[16:09] <Geth>  doc: a6367a6258 | (Will "Coke" Coleda)++ | t/00-load.t

[16:09] <Geth>  doc: catch htmlify.p6 syntax errors sooner, maybe?

[16:09] <Geth>  doc: review: https://github.com/perl6/doc/commit/a6367a6258

[16:10] *** MasterDukeLaptop left
[16:12] *** Khisanth left
[16:17] *** pyrimidine joined
[16:17] <pmurias> -e 'say "Hello World"' now works in (local) rakudo.js with the full setting loaded :)

[16:18] <timotimo> nice!

[16:19] <dj_goku> pmurias++

[16:21] <brokenchicken> pmurias++

[16:24] *** Khisanth joined
[16:25] <jnthn> \o/

[16:25] <jnthn> pmurias++

[16:28] <brokenchicken> What about -e 'say "I ♥ Perl 6"' ? :)

[16:30] <raschipi> -e 'say "I 🦋 Perl 6"'

[16:31] <brokenchicken> m: "🦋".uniname.say

[16:31] <camelia> rakudo-moar 563d11: OUTPUT«BUTTERFLY␤»

[16:32] <brokenchicken> oh it's my char :)

[16:32] * brokenchicken is sad the terminal doesn't display it

[16:33] <pmurias> brokenchicken: your example works

[16:33] <brokenchicken> pmurias++

[16:34] <kybr> now that i'm working with unicode symbols more i want to know the best way to mix these symbols and perl6 and c++ programs. right now, the width of the symbols varies so that characters overlap. i've been using a fixed-width font.

[16:35] <kybr> what sort of terminal/editor configurations are people using to do perl6 with unicode?

[16:40] <pmurias> brokenchicken: for now rakudo.js has the unicode support js does, as doing NFG stuff without slowing things down will require significant thought

[16:40] <brokenchicken> eh, better than nothing :)

[16:40] <brokenchicken> Progress!

[16:41] *** travis-ci joined
[16:41] <travis-ci> Doc build passed. Will "Coke" Coleda 'Revert "Try and end the highlights process after we are done with it"

[16:41] <travis-ci> https://travis-ci.org/perl6/doc/builds/190998407 https://github.com/perl6/doc/compare/b0221a51749d...cae174eba6de

[16:41] *** travis-ci left
[16:41] *** domidumont left
[16:42] *** user9 left
[16:43] *** shayan_ left
[16:43] <raschipi> We need to finish the C code generator before people start recommending node.js as a virtual machine to run precompiled P6 code.

[16:44] <timotimo> i don't know about any c code generators?

[16:44] <raschipi> Or a bytecode code generator.

[16:45] <timotimo> you mean like rakudo?

[16:45] <raschipi> Yeah, just a way to dump the bytecode in a way that moar can pick it up later.

[16:45] <Woodi> pmurias++  # persistence

[16:46] <timotimo> so ... exactly like our moar bootstrapping procedure?

[16:46] *** llfourn joined
[16:47] <timotimo> like, what we did when we didn't have an nqp-m yet, but we wanted to build nqp into nqp-m

[16:47] <timotimo> i don't see a reason to do anything like that any more ...

[16:48] *** shayan_ joined
[16:50] <brokenchicken> kybr: I just use Atom editor

[16:51] *** llfourn left
[16:51] <brokenchicken> And in a perfect world, I have unicode ops bound to the extra keys on my keyboard. In reality, I have driver issues but it don't bother me none, 'cause I haven't been programming anything for like half a year

[16:52] <brokenchicken> pmurias: someone's asking on Twitter: "what's $*OUT in the browser?"

[16:53] <timotimo> usually you have a dom element that slurps up all your output

[16:53] <timotimo> but this isn't for the browser

[16:53] <timotimo> this is for node.js, which actually has a stdout

[16:53] <brokenchicken> Ah

[16:53] <timotimo> it'll be for the browser at some point, too. not terribly much work.

[16:53] <timotimo> just not the current focus, iiuc

[16:57] <pmurias> brokenchicken: there is no clear answer to what $*OUT should be, console.log is one option

[16:59] <pmurias> timotimo: I have run stuff generated with nqp-js with webpack in the browser in the past and it wasn't a huge amount of work

[17:00] *** pyrimidine left
[17:02] *** domidumont joined
[17:03] <pmurias> why does someone have a twitter account registered using my email? :/

[17:07] *** shayan_ left
[17:08] <brokenchicken> Are you sure it's not you who registered it and forgot about it? :)

[17:12] *** pyrimidine joined
[17:13] <pmurias> brokenchicken: yes, there where things in it I didn't tweet for sure

[17:17] *** pyrimidine left
[17:20] *** pyrimidine joined
[17:23] <brokenchicken> pmurias: try entering it on https://haveibeenpwned.com/ :)

[17:24] <brokenchicken> damn... two hacks for my primary email now increased to 3 -_-  Hacked in 2012... Released publicly in 2016 -_-

[17:24] *** pyrimidine left
[17:30] *** shayan_ joined
[17:33] *** Guest76099 is now known as matt_

[17:37] *** pyrimidine joined
[17:39] *** domidumont left
[17:41] <brokenchicken> Hm, for the first time ever, I now struggled a bit in comprehending Perl 5's list with some parens and ternaries because my brain kept plugging in Perl 6's non-flatteting of lists into it.

[17:41] *** pyrimidine left
[17:41] <brokenchicken> I hope I'll find a Perl 6-based source of income BEFORE I complete forget Perl 5 :o

[17:43] <pmurias> brokenchicken: what if you will have to use Inline::Perl5 in your Perl 6-based job? ;)

[17:44] <brokenchicken> It'd mostly be for a couple of modules that I'd still use in Perl 6 land.

[17:47] *** llfourn joined
[17:48] *** labster joined
[17:52] *** llfourn left
[17:53] *** shayan_ left
[17:57] *** dakkar left
[17:57] *** shayan_ joined
[17:58] *** shayan_ left
[18:06] *** zakharyas left
[18:11] *** shayan_ joined
[18:12] *** _Vasyl left
[18:12] *** shayan_ left
[18:12] *** _Vasyl joined
[18:21] <brokenchicken> m: "\x[7]\x[3]".uninames.words[^2].join.say

[18:21] <camelia> rakudo-moar 563d11: OUTPUT«BELLEND␤»

[18:21] * brokenchicken giggles

[18:21] <jnthn> :P

[18:21] *** AlexDaniel joined
[18:30] * masak .oO( ars bellend-i )

[18:31] *** sjn joined
[18:32] <samcv> m: say "\c[BELL]".ord

[18:32] <camelia> rakudo-moar 563d11: OUTPUT«7␤»

[18:32] <[Coke]> pmurias++

[18:39] *** pyrimidine joined
[18:46] *** llfourn joined
[18:46] <SmokeMachine> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {Proxy.new: FETCH => method () {$attr.get_value(self)}, STORE => method ($val) {$attr.set_value(self, $val)}})}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[18:47] <camelia> rakudo-moar 563d11: OUTPUT«42␤MoarVM panic: Memory allocation failed; could not allocate 131072 bytes␤»

[18:51] *** llfourn left
[18:51] *** confundus left
[18:54] *** Tonik joined
[18:54] <tony-o> pmurias: brokenchicken: console.log seems like the most equiv to $*OUT and $*ERR seems equivalent to console.error

[18:56] *** pyrimidine left
[18:58] *** ggoebel joined
[18:59] <lizmat> http://blogs.perl.org/users/pawel_murias/2017/01/say-hello-world-works-with-the-full-setting.html   # pmurias++

[18:59] <AlexDaniel> .

[18:59] <yoleaux> 11:32Z <notviki> AlexDaniel: you were waiting for it to happen again: https://irclog.perlgeek.de/perl6/2017-01-11#i_13898957

[19:00] <AlexDaniel> ah dammit

[19:00] <AlexDaniel> I thought I did it already

[19:00] <ggoebel> andrzejku: Regarding Detroit, yes you would need a car. 

[19:00] <AlexDaniel> .tell notviki thanks

[19:00] <yoleaux> AlexDaniel: I'll pass your message to notviki.

[19:01] <hoelzro> dang, that's awesome pmurias++

[19:01] *** espadrine joined
[19:03] <ggoebel> andrzejku: it is still one of the more dangerous cities in the USA from a crime statistics perspective

[19:04] <AlexDaniel> pmurias++ that sounds great indeed

[19:04] <brokenchicken> AlexDaniel: notviki died

[19:04] <ggoebel> andrzejku: that said, a lot depends on where you live in or around Detroit

[19:06] *** evalable6 left
[19:06] *** committable6 left
[19:06] <AlexDaniel> dammit, that was the wrong one…

[19:06] *** bisectable6 left
[19:06] <ggoebel> andrzejku: if you have kids, I would recommend doing research on schools and living outside Detroit

[19:07] *** bisectable6 joined
[19:07] *** evalable6 joined
[19:07] *** committable6 joined
[19:07] *** ChanServ sets mode: +v bisectable6

[19:07] *** ChanServ sets mode: +v committable6

[19:07] <AlexDaniel> what, it's fixed?

[19:07] <committable6> AlexDaniel, ¦«it's»: Cannot find this revision (did you mean “Linz”?)

[19:07] <AlexDaniel> ok one second…

[19:07] *** committable6 left
[19:08] *** shayan_ joined
[19:09] *** committable6 joined
[19:09] *** ChanServ sets mode: +v committable6

[19:09] <AlexDaniel> what, it's fixed?

[19:10] <AlexDaniel> right

[19:10] *** cdg_ left
[19:10] <brokenchicken> \o/

[19:10] *** pyrimidine joined
[19:10] <AlexDaniel> brokenchicken: weird, he was alive just a few hours ago

[19:11] <AlexDaniel> maybe he simply changed his nickname, right? ;)

[19:11] <AlexDaniel> u: chicken

[19:11] <unicodable6> AlexDaniel, U+1F414 CHICKEN [So] (🐔)

[19:12] <AlexDaniel> u: broken

[19:12] <unicodable6> AlexDaniel, U+00A6 BROKEN BAR [So] (¦)

[19:12] <unicodable6> AlexDaniel, U+238B BROKEN CIRCLE WITH NORTHWEST ARROW [So] (⎋)

[19:12] <unicodable6> AlexDaniel, https://gist.github.com/960b331e58c7e01fb1a789ea91e6ddd8

[19:12] <AlexDaniel> 🐔‍💔

[19:13] <ggoebel> pmurias: pmurias++ what is next for rakudo-js?

[19:13] *** shayan_ left
[19:15] <pmurias> ggoebel: fixing bugs to make tests pass and speeding things up

[19:15] *** pyrimidine left
[19:16] *** girafe joined
[19:17] <pmurias> ggoebel: also making the build system vaguely sane so that it can be packaged up and is easier for others to play with

[19:18] <AlexDaniel> I have never thought about not taking an ID card with me anywhere I go. Who knows what document you'd need to sign? re: carrying id card with you

[19:18] <AlexDaniel> but that's Estonia…

[19:18] <moritz> it's not such a big burden

[19:20] *** pyrimidine joined
[19:24] <AlexDaniel> and a lot of people are using it as a primary method for logging into stuff (e.g. bank accounts, or any other local website actually…)

[19:24] *** pyrimidine left
[19:27] *** hankache joined
[19:28] *** wamba left
[19:29] <moritz> German passports (and possibly ID cards, don't know) also have some kind of PKI stuff, but with a batshit crazy propietary protocol, so basically nobody uses it

[19:30] <AlexDaniel> passports? How do you slide a passport into a card reader?

[19:31] <samcv> brokenchicken, \o/ https://github.com/atom/first-mate/issues/85#issuecomment-271969450

[19:31] <samcv> should be able to get atom-language-perl6 to detect .pm files now

[19:31] <samcv> once this person changes this 👍

[19:32] *** kyan joined
[19:33] * brokenchicken doesn't recall what this about

[19:33] <brokenchicken> You sure you're talking to the right chicken?

[19:34] <samcv> uhm it's about atom perl 6 highlighting. so we can detect .pm files as being perl 6 vs perl 5

[19:34] <samcv> unless you are notnotviki

[19:34] <diakopter> lulz

[19:36] <brokenchicken> Cool.

[19:36] * brokenchicken uses sublime text 2 for Perl 5

[19:36] <brokenchicken> It's... sublime :}

[19:38] <El_Che> samcv++

[19:38] <El_Che> using atom for perl 5 & 6 was a non-starter

[19:40] <brokenchicken> fwiw, I don't even have first-mate installed, so you've probably mistaken me with someone else...

[19:40] <raschipi> We lost him.

[19:44] <samcv> brokenchicken, it's in atom

[19:44] <samcv> heh

[19:44] <samcv> nice my unicode manuals came \o/

[19:44] <samcv> both volumes. took a while. they're print on demand

[19:45] <brokenchicken> \o/

[19:47] *** llfourn joined
[19:48] <samcv> oh looks like i missed the non emoji sequences in my mvm PR for adding sequences. will have to add this for the next one.

[19:48] <samcv> such as LATIN CAPITAL LETTER A WITH MACRON AND GRAVE is U+100 U+300

[19:51] *** cibs left
[19:52] *** llfourn left
[19:53] *** cibs joined
[19:53] *** raschipi left
[19:54] *** kyan left
[19:56] <[Coke]> m: my $re = "<< FACE >>" ; say "A FACE IS HERE" ~~ / $re /;

[19:56] <camelia> rakudo-moar 3d8628: OUTPUT«Nil␤»

[19:56] <brokenchicken> m: my $re = "<< FACE >>" ; say "A FACE IS HERE" ~~ / <$re> /;

[19:56] <camelia> rakudo-moar 3d8628: OUTPUT«｢FACE｣␤»

[19:57] <[Coke]> danke.

[20:00] *** hankache left
[20:03] <brokenchicken> .tell raschi it was in #perl6-dev https://irclog.perlgeek.de/perl6-dev/2017-01-10#i_13894263 RE: "do you have a link to the log where what motivated that commit happened?"

[20:03] <yoleaux> brokenchicken: I'll pass your message to raschi.

[20:04] <samcv> [Coke], did this trigger when we weren't using proc::async? https://github.com/perl6/doc/commit/cae174eba6de2038c82e0842338ee316bd64386e

[20:05] *** chansen_ left
[20:05] *** chansen_ joined
[20:07] <[Coke]> samcv: it didn't even compile.

[20:07] <[Coke]> "perl6 -c htmlify.p6" died.

[20:07] <samcv> oh ok thanks

[20:07] <[Coke]> $no-highlight isn't a variable there.

[20:23] *** bjz joined
[20:27] *** wamba joined
[20:30] *** domidumont joined
[20:34] *** domidumont left
[20:40] *** ChoHag left
[20:41] *** ChoHag joined
[20:44] <_4d47> p6: say 1.578.round(0.11);

[20:44] <camelia> rakudo-moar ba8a28: OUTPUT«1.54␤»

[20:44] <brokenchicken> :\

[20:45] <brokenchicken> s: 1.578, 'round', \(.11)

[20:45] <SourceBaby> brokenchicken, Sauce is at https://github.com/rakudo/rakudo/blob/ba8a284/src/core/Real.pm#L44

[20:46] <brokenchicken> p6: say 1.578.round(0.01);

[20:46] <camelia> rakudo-moar ba8a28: OUTPUT«1.58␤»

[20:47] <brokenchicken> p6: say 1.578.round(0.42);

[20:47] <camelia> rakudo-moar ba8a28: OUTPUT«1.68␤»

[20:47] <AlexDaniel> why :\ ?

[20:48] <brokenchicken> .oO( docs could use more examples... https://docs.perl6.org/routine/round )

[20:48] <_4d47> aww silly me, thanks brokenchicken!

[20:48] <brokenchicken> p6: say 1.578.round(0.5);

[20:48] <camelia> rakudo-moar ba8a28: OUTPUT«1.5␤»

[20:48] *** llfourn joined
[20:49] <AlexDaniel> m: say (−.55).round(.1);   # -0.5 

[20:49] <camelia> rakudo-moar ba8a28: OUTPUT«-0.5␤»

[20:49] <AlexDaniel> that's an OK example

[20:49] <brokenchicken> m: my $what = 1.578; my $scale = pi; say ($what / $scale + 1/2).floor * $scale;

[20:49] <camelia> rakudo-moar ba8a28: OUTPUT«3.14159265358979␤»

[20:49] <brokenchicken> haw

[20:49] <brokenchicken> (^ that's the formula round sues)

[20:50] * brokenchicken relocates

[20:51] <samcv> m: say 'test'

[20:51] <camelia> rakudo-moar c99fbc: OUTPUT«test␤»

[20:52] *** ocbtec left
[20:53] *** llfourn left
[20:54] *** pyrimidine joined
[20:59] *** pyrimidine left
[21:05] <brokenchicken> m: say (−.55).round(-.1);

[21:05] <camelia> rakudo-moar c99fbc: OUTPUT«-0.6␤»

[21:06] <brokenchicken> AlexDaniel: so your example's broken right?

[21:06] *** kyan joined
[21:07] <AlexDaniel> brokenchicken: why? What output did you expect?

[21:08] <brokenchicken> AlexDaniel: dunno, I'm not a mathmatician :) but one of them gotta be wrong

[21:09] <AlexDaniel> I'm surprised you can supply a negative $unit

[21:09] <moritz> I'd say that falls under "gigo"

[21:09] <moritz> though we might want to prevent the "garbage in" part

[21:09] <AlexDaniel> yup

[21:09] <AlexDaniel> m: say 2.5.round(1)

[21:09] <camelia> rakudo-moar c99fbc: OUTPUT«3␤»

[21:09] <brokenchicken> mortitz, how does -5.5 rounds? to -.5?

[21:10] <AlexDaniel> m: say 2.5.round(-1)

[21:10] <camelia> rakudo-moar c99fbc: OUTPUT«2␤»

[21:10] <AlexDaniel> brokenchicken: where did you see that?

[21:10] <brokenchicken> see what?

[21:10] <AlexDaniel> -0.55 rounds to -0.5, that's ok?

[21:10] <moritz> brokenchicken: please start to spell my name correctly :-) tab completion helps

[21:11] *** rindolf left
[21:11] <brokenchicken> sorry, imma on the phone :}

[21:11] <AlexDaniel> :) https://irclog.perlgeek.de/perl6/search/?nick=&q=mortitz

[21:11] <moritz> brokenchicken: one more reason to use some kind of auto completion :-)

[21:12] <brokenchicken> lol

[21:13] <brokenchicken> AlexDaniel-- I'm laughing at that on the bus and everyone's staring at me

[21:14] <brokenchicken> AlexDaniel: I don't know how -.55 is supposed to round... it always up?

[21:14] <AlexDaniel> the docs say that it's always up for mid-points

[21:14] <brokenchicken> ah ok

[21:15] <AlexDaniel> for negative $unit it seems to be always down

[21:15] *** cdg joined
[21:15] <AlexDaniel> so it's not really a gigo

[21:15] <brokenchicken> So... let's call that a feature? ;)

[21:15] <AlexDaniel> looks like a feature, even though probably an unintentional one

[21:15] <moritz> but probably undocumented and untested

[21:16] <AlexDaniel> m: say 2.5.round(0)

[21:16] <camelia> rakudo-moar 644cd3: OUTPUT«Attempt to divide 5 by zero using div␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[21:16] <AlexDaniel> boom

[21:16] <brokenchicken> m: say Inf.round: -Inf

[21:16] <camelia> rakudo-moar 644cd3: OUTPUT«NaN␤»

[21:16] <brokenchicken> m: say Inf.round: -5

[21:16] <camelia> rakudo-moar 644cd3: OUTPUT«Inf␤»

[21:16] *** FROGGS left
[21:18] <AlexDaniel> m: dd 5.round(1)

[21:18] <camelia> rakudo-moar 644cd3: OUTPUT«5␤»

[21:18] <AlexDaniel> m: dd 5.round(1.0)

[21:18] <camelia> rakudo-moar 644cd3: OUTPUT«5.0␤»

[21:18] <AlexDaniel> m: dd 5.round(1e0)

[21:18] <camelia> rakudo-moar 644cd3: OUTPUT«5e0␤»

[21:18] <AlexDaniel> interesting, right?

[21:19] <brokenchicken> not really :)

[21:19] <brokenchicken> m: say dd 5 + 1e0

[21:19] <camelia> rakudo-moar 644cd3: OUTPUT«6e0␤Nil␤»

[21:20] <brokenchicken> types infect like that

[21:20] <brokenchicken> m: dd 5.round(0i)

[21:20] <camelia> rakudo-moar 644cd3: OUTPUT«Attempt to divide 5 by zero using /␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[21:20] <AlexDaniel> unless it's complex, yea

[21:20] <brokenchicken> m: dd 5.round(1+0i)

[21:20] <camelia> rakudo-moar 644cd3: OUTPUT«5e0␤»

[21:20] <brokenchicken> heh

[21:21] <moritz> m: dd 5.round(1+1i)

[21:21] <camelia> rakudo-moar 644cd3: OUTPUT«Can not convert 1+1i to Real: imaginary part not zero␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[21:21] <brokenchicken> m: dd 5 + 1+0i

[21:21] <camelia> rakudo-moar 644cd3: OUTPUT«<6+0i>␤»

[21:21] *** xyz_ joined
[21:22] <brokenchicken> well, I'd expect the infection to be consistent :)

[21:22] *** pyrimidine joined
[21:23] <brokenchicken> m: dd (1+0i).floor

[21:23] <camelia> rakudo-moar 644cd3: OUTPUT«<1+0i>␤»

[21:24] <xyz_> Does Perl 6 have an easy regex syntax for matching nested parenthesis? For example things like "( 1 + ( 2 + 3 ) )".

[21:24] *** andrzejku left
[21:24] <brokenchicken> m: dd (1+0i).floor * (1+0i)

[21:24] <camelia> rakudo-moar 644cd3: OUTPUT«<1+0i>␤»

[21:24] <brokenchicken> weird

[21:24] <brokenchicken> why does .round lose it

[21:24] <brokenchicken> .oO( it got a complex candodate )

[21:25] <moritz> xyz_: well, Perl 6 regexes make recursion easy-ish

[21:25] *** bjz left
[21:26] <moritz> m: my regex nested { '(' ~ ')' [ \d+ | <nested> ]+ % \+ }; say '(1+(2+3))' ~~ /<nested>/

[21:26] <camelia> rakudo-moar 644cd3: OUTPUT«No such method 'nested' for invocant of type 'Cursor'␤  in regex nested at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:26] <AlexDaniel> eval: grammar G { token TOP { (<-[()]>+)? [[‘(’ ~ ‘)’ <x=.TOP> ] (<-[()]>+)?]* } }; say G.parse(‘sum ((1 2 3) (3 4 5) join)’); .say for ^9999

[21:26] <evalable6> AlexDaniel, rakudo-moar 644cd34: OUTPUT«｢sum ((1 2 3) (3 4 5) join)｣␤ 0 => ｢sum ｣␤ x => ｢(1 2 3) (3 4 5) join｣␤  x => ｢1…»

[21:26] <evalable6> AlexDaniel, Full output: https://gist.github.com/3b5407d5f4085b86cfdf7ef80e2adda8

[21:26] <moritz> m: my regex nested { '(' ~ ')' [ \d+ | <&nested> ]+ % \+ }; say '(1+(2+3))' ~~ /<&nested>/

[21:26] <camelia> rakudo-moar 644cd3: OUTPUT«｢(1+(2+3))｣␤»

[21:26] <brokenchicken> wow spammalicious

[21:26] <moritz> xyz_: ^^ see above. Matching whitespace too is left as excercise to the reader :-)

[21:26] <brokenchicken> I guess phones arent good for irc

[21:27] *** pyrimidine left
[21:27] <xyz_> Thanks! :-)

[21:27] <brokenchicken> moritz++

[21:28] <moritz> brokenchicken: I think phones aren't good for text-based media, having crappy input and too little screen space to skim easily

[21:28] <brokenchicken> :)

[21:31] *** pyrimidine joined
[21:37] *** pmurias left
[21:38] *** xyz_ left
[21:39] *** pyrimidine left
[21:46] *** Gasher joined
[21:47] *** lukaramu left
[21:49] <jonadab> moritz: That's only true, of course, if phones have small screens and no good keyboard.  They really gotta start making better phones :-)

[21:50] *** llfourn joined
[21:50] <jonadab> There was that phablet fad for a while there, I kept hoping it would turn into photebooks...

[21:50] <jonadab> Because the ideal thing really is a phesktop :-)

[21:51] <timotimo> photobooks?

[21:52] <jonadab> Hehe.

[21:52] *** andrzejku joined
[21:52] <jonadab> I was thinking photebook = crassis of phone + notebook

[21:52] <timotimo> crass.

[21:53] <jonadab> But photobook could be popular too.

[21:53] <jonadab> No, if I wanted to be crass I'd have said phaptop.

[21:53] <timotimo> the thing about photobook is that it contains phō

[21:54] *** labster left
[21:55] *** llfourn left
[21:57] <moritz> is a phaptop a laptop that's only used for consuming pornography

[21:57] <timotimo> i think that's the idea

[21:58] <jonadab> No, no, it's a combination phone/laptop, same as a phablet is a combination phone/tablet.

[21:58] <timotimo> hm. so a flip-phone?

[21:58] <jonadab> Err, larger.  phablets are generally larger than other smartphones (though often smaller than a full-sized tablet).

[21:59] <jonadab> So by extension we can surmise that a phaptop would be intermediate in size between a phone and a laptop.

[21:59] <timotimo> hm

[21:59] <timotimo> i'm not sure where subnotebook ends and laptop starts

[22:00] <timotimo> i think the laptops i've been using so far have been relatively small

[22:02] <timotimo> i had a thinkpad t23, a thinkpad x220s, a thinkpad t440s so far

[22:03] *** skids left
[22:03] *** bjz joined
[22:10] *** Tonik left
[22:11] *** bjz left
[22:11] <mst> I had a ... forget the oldest one, it was a pentium

[22:11] <mst> then an x31, then an x61s, then a thinkpad tablet 2, now onto a helix 2

[22:12] *** bjz joined
[22:13] * jonadab is still waiting for them to come out with a laptop that has at least a 19" 4:3 display and a decent keyboard.

[22:13] <AlexDaniel> define decent

[22:13] <timotimo> oooh 4:3

[22:13] <brokenchicken> 4:3 eww

[22:13] <timotimo> so much space for activities

[22:13] <jonadab> AlexDaniel: I tend to like buckling springs...

[22:13] <timotimo> so you're fine with a 4cm thick laptop? :)

[22:13] <brokenchicken> :F

[22:13] <jonadab> Sure.

[22:14] * AlexDaniel is still happy with his thinkpad x200

[22:14] <timotimo> i like my laptops thin

[22:14] <jonadab> I routinely carry around books weighing (collectively) more than double any laptop made in the last twenty years.

[22:15] <AlexDaniel> well maybe you should stop carrying books then :D

[22:15] <jonadab> Why?

[22:15] <AlexDaniel> indeed, why do you have to carry them?

[22:15] <jonadab> Because I want them in the place where I am going?

[22:16] <AlexDaniel> sounds reasonable

[22:16] *** bjz left
[22:17] <AlexDaniel> timotimo: by the way, do you have another workstation at home?

[22:17] <AlexDaniel> timotimo: or you just use your laptop

[22:19] <yoleaux> notviki: SmokeMachine remember the DEFINITE!

[22:19] <timotimo> i have a desktop machine that i do much of my work on

[22:20] <timotimo> among other things because i want to play a game or two every now and then

[22:20] <AlexDaniel> timotimo: interesting. How do you synchronize?

[22:20] <timotimo> usually via github, but sometimes i just scp between laptop and desktop

[22:23] *** RabidGravy left
[22:26] *** setty1 joined
[22:28] *** girafe left
[22:32] *** pyrimidine joined
[22:38] *** pyrimidi_ joined
[22:38] *** pyrimidine left
[22:40] <SmokeMachine> m: multi infix:<||>(42, 42) {"OK"}; say infix:<||>(42, 42); say 42 || 42

[22:40] <camelia> rakudo-moar 8f3476: OUTPUT«OK␤42␤»

[22:42] <brokenchicken> (reads jnthn++'s report on the ticket).. so I guess it's not a bug

[22:43] <SmokeMachine> brokenchicken: I answered the response...

[22:44] * brokenchicken doesn't see it on the ticket

[22:44] <brokenchicken> or email...

[22:46] <SmokeMachine> brokenchicken: Just sent

[22:47] <SmokeMachine> How could I make A.b work?

[22:47] <SmokeMachine> m: class A {has $.b; method FALLBACK($name, |) { $name }}; say A.new.b; say A.c; say A.b

[22:47] <camelia> rakudo-moar 8f3476: OUTPUT«(Any)␤c␤Cannot look up attributes in a A type object␤  in block <unit> at <tmp> line 1␤␤»

[22:51] *** pyrimidi_ left
[22:51] *** llfourn joined
[22:54] <brokenchicken> make it a private attr?

[22:55] <perlpilot_> seems sub-optimal to me.

[22:55] <SmokeMachine> brokenchicken: but I need the method on the instance and on the type object...

[22:57] *** llfourn left
[22:57] <brokenchicken> make your own accessor that doesn't whine about attrs on tpe objects

[22:57] <SmokeMachine> I am trying to create a trait on the attribute that will create a method with the attribute name for the object type

[22:57] <brokenchicken> method b(::?CLASS:D:) is rw {$!b}

[22:58] <SmokeMachine> I was trying something like this:

[22:59] <SmokeMachine> 16:46 <SmokeMachine> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {Proxy.new: FETCH => method () {$attr.get_value(self)}, STORE => method ($val) {$attr.set_value(self, $val)}})}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say

[22:59] <SmokeMachine> $a.b # why?

[23:01] <brokenchicken>  m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {Proxy.new: FETCH => method () {$attr.get_value(self)}, STORE => method ($val) {$attr.set_value(self, $val)}})}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b

[23:01] <brokenchicken> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {Proxy.new: FETCH => method () {$attr.get_value(self)}, STORE => method ($val) {$attr.set_value(self, $val)}})}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b

[23:01] <brokenchicken> camelia: yo, robot!

[23:01] <camelia> rakudo-moar 8f3476: OUTPUT«42␤MoarVM panic: Memory allocation failed; could not allocate 60320 bytes␤»

[23:01] <brokenchicken> heh

[23:02] <brokenchicken> duuno man

[23:02] * brokenchicken &

[23:11] *** espadrine left
[23:11] *** labster joined
[23:17] <SmokeMachine> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42})}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:17] <camelia> rakudo-moar 8f3476: OUTPUT«42␤Cannot resolve caller b(A: ); none of these signatures match:␤    (Mu:U $: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[23:19] <SmokeMachine> Shouldn't the . on $.b create the method for the instance?

[23:20] <brokenchicken> SmokeMachine: I think it does that only if there ain't any other methods 

[23:21] <brokenchicken> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (::?CLASS:U:) {42})}; $attr.package.^add_multi_method("b", method (Mu:D:) is rw {$attr}) class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:21] <camelia> rakudo-moar 8f3476: OUTPUT«===SORRY!===␤Could not locate compile-time value for symbol ::?CLASS␤»

[23:21] <brokenchicken> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42})}; $attr.package.^add_multi_method("b", method (Mu:D:) is rw {$attr}) class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:21] <camelia> rakudo-moar 8f3476: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '$attr' is not declared␤at <tmp>:1␤------> 3multi_method("b", method (Mu:D:) is rw {7⏏5$attr}) class A {has $.b is c}; say A.b;␤»

[23:22] <brokenchicken> wat

[23:22] <brokenchicken> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {$attr});}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:22] <camelia> rakudo-moar 8f3476: OUTPUT«42␤Cannot modify an immutable Attribute␤  in block <unit> at <tmp> line 1␤␤»

[23:22] <brokenchicken> something like that, I dunno what to use instead of $attr up in there. In normal code you'd use $!b in there

[23:23] *** Praise joined
[23:23] *** Praise left
[23:23] *** Praise joined
[23:23] <brokenchicken> m: multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {::($attr.name)});}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:23] <camelia> rakudo-moar 8f3476: OUTPUT«42␤No such symbol '$!b'␤  in method <anon> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[23:23] <brokenchicken> ah right

[23:25] <brokenchicken> m: use nqp; multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {nqp::getattr($attr.package, $attr.package, $attr.name)});}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:25] <camelia> rakudo-moar 8f3476: OUTPUT«42␤Cannot look up attributes in a A type object␤  in method <anon> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[23:25] <brokenchicken> m: use nqp; multi trait_mod:<is>(Attribute $attr, :$c!) {$attr.package.^add_multi_method("b", method (Mu:U:) {42}); $attr.package.^add_multi_method("b", method (Mu:D:) is rw {nqp::getattr(self, self.WHAT, $attr.name)});}; class A {has $.b is c}; say A.b; my $a = A.new; $a.b = 1; say $a.b # why?

[23:25] <camelia> rakudo-moar 8f3476: OUTPUT«42␤1␤»

[23:25] <brokenchicken> huzzah?

[23:26] <SmokeMachine> \o/

[23:26] <SmokeMachine> brokenchicken: thanks!

[23:27] <SmokeMachine> But shouldn't be easier?

[23:27] *** raiph left
[23:31] *** TEttinger joined
[23:34] *** shayan_ joined
[23:34] *** raschipiu joined
[23:37] *** pecastro left
[23:42] *** raschipiu left
[23:45] *** Gasher left
[23:51] *** cpage_ left
[23:53] *** llfourn joined
[23:54] *** pecastro joined
[23:58] *** llfourn left
