[00:03] *** mcmillhj left
[00:07] *** _28_ria left
[00:07] *** mcmillhj joined
[00:08] *** _28_ria joined
[00:09] *** kurahaupo_ joined
[00:10] *** kurahaupo left
[00:11] *** mcmillhj left
[00:13] *** kurahaupo_ left
[00:20] *** _28_ria left
[00:22] *** _28_ria joined
[00:22] *** mcmillhj joined
[00:25] *** kurahaupo joined
[00:29] *** mcmillhj left
[00:32] *** kurahaupo_ joined
[00:32] *** kurahaupo_ left
[00:33] *** kurahaupo_ joined
[00:33] *** kurahaupo left
[00:33] *** kurahaupo_ left
[00:34] *** kurahaupo joined
[00:37] *** cpage_ left
[00:38] *** Cabanossi left
[00:40] *** cpage_ joined
[00:40] *** Cabanossi joined
[00:42] *** kurahaupo_ joined
[00:45] *** kurahaupo left
[00:49] *** kurahaupo joined
[00:49] *** kurahaupo_ left
[00:51] *** kurahaupo_ joined
[00:53] *** kurahaupo left
[01:01] *** mcmillhj joined
[01:49] *** mcmillhj left
[01:50] *** mcmillhj joined
[01:54] *** mcmillhj left
[02:00] *** _28_ria left
[02:01] *** _28_ria joined
[02:09] *** cpage_ left
[02:11] *** kurahaupo joined
[02:12] *** SCHAPiE left
[02:15] *** kurahaupo_ left
[02:16] *** SCHAPiE joined
[02:23] *** kurahaupo_ joined
[02:24] *** noganex joined
[02:26] *** kurahaupo left
[02:27] *** noganex_ left
[02:36] *** kurahaupo_ left
[02:36] *** kurahaupo joined
[02:43] *** zacts joined
[02:44] *** labster left
[02:50] *** labster joined
[02:56] *** wamba joined
[02:57] *** AlexDaniel left
[03:06] *** xtreak joined
[03:14] *** aborazmeh joined
[03:14] *** aborazmeh left
[03:14] *** aborazmeh joined
[03:18] *** xtreak left
[03:19] *** xtreak joined
[03:19] *** Actualeyes left
[03:22] *** aborazmeh left
[03:23] *** xtreak left
[03:34] *** mcmillhj joined
[03:36] *** xtreak joined
[03:36] *** Cabanossi left
[03:38] *** mcmillhj left
[03:40] *** Cabanossi joined
[03:57] *** redhands joined
[03:59] *** redhands left
[04:04] *** mcmillhj joined
[04:07] *** wamba left
[04:09] *** mcmillhj left
[04:36] *** mcmillhj joined
[04:39] *** skids left
[04:39] *** mr-foobar left
[04:40] *** mr-foobar joined
[04:44] *** mcmillhj left
[04:48] *** curan joined
[04:55] *** mr-foobar left
[05:02] *** sjn left
[05:13] *** wamba joined
[05:16] *** xtreak left
[05:17] *** ufobat joined
[05:18] *** mr-foobar joined
[05:23] *** mr-foobar left
[05:37] *** mr-foobar joined
[05:46] *** wamba left
[05:47] *** tomboy64 left
[05:49] *** tomboy64 joined
[05:51] *** RabidGravy joined
[05:52] *** Actualeyes joined
[05:58] *** lowbro joined
[05:58] *** lowbro left
[05:58] *** lowbro joined
[06:02] *** xtreak joined
[06:03] *** xinming_ joined
[06:06] *** xinming left
[06:07] *** Cabanossi left
[06:09] *** Cabanossi joined
[06:11] <RabidGravy> BooYa!

[06:14] *** domidumont joined
[06:19] *** domidumont left
[06:19] *** domidumont joined
[06:31] *** kurahaupo_ joined
[06:33] *** wamba joined
[06:34] *** kurahaupo left
[06:37] *** Cabanossi left
[06:39] *** Cabanossi joined
[06:54] *** baest_ joined
[06:54] *** Kaffe_ left
[06:55] *** Kaffe joined
[06:55] *** [ptc] left
[06:55] *** ambs left
[06:55] *** ambs joined
[06:55] *** RabidGravy left
[06:55] *** baest left
[06:55] *** sftp left
[06:56] *** RabidGravy joined
[06:56] *** vcv joined
[06:56] *** breinbaas joined
[06:57] *** [ptc] joined
[06:57] *** erdic_ joined
[06:57] *** john51_ left
[06:57] *** john51 joined
[06:57] *** erdic_ is now known as erdic

[06:59] *** sftp joined
[07:02] *** _kristian joined
[07:04] *** andrewalker joined
[07:11] *** wamba left
[07:13] *** rindolf joined
[07:13] *** wamba joined
[07:18] *** grondilu_ is now known as grondilu

[07:18] *** grondilu left
[07:18] *** grondilu joined
[07:19] <grondilu> .seen pmurias

[07:19] <yoleaux> I saw pmurias 10 Apr 2017 14:55Z in #perl6: <pmurias> so if it fails a roast test it's most likely because of a bug rather then some minor unimplemented feature

[07:26] *** ChoHag joined
[07:31] *** wamba left
[07:34] <samcv> guys is it a bad idea or not to create an AppImage with ALL the perl 6 modules

[07:35] <samcv> well. as many as pass building

[07:35] *** pmurias joined
[07:35] <samcv> i think that might be fun

[07:35] <pmurias> grondilu: hi

[07:38] <moritz> samcv: as long as it's not the only option, go for it!

[07:39] <samcv> or could make zef availible and have it install to like ~/.perl6 or something

[07:39] <samcv> since it looks there anyway

[07:40] <samcv> make a rakudo moar-blead with everything in it. or whatever

[07:41] <samcv> and also would test the modules and give a report on it. though some of them may fail because of the appimage and it not starting out in ./

[07:41] <samcv> well. but i can install them before making the appimage. so that shouldn't be too hard.

[07:41] <samcv> might still have the issue they have to recompile when first run. and they may or may not be cached after that. still need to investigate full

[07:45] <samcv> just added cron to it

[07:45] <samcv> but yeah the main real problem is getting it to change path before doing anything. so the relative paths work normally

[07:46] <samcv> does anybody have input on what command line option could be added to do that? what it wuold be?

[07:47] <moritz> --cwd=path

[07:47] <moritz> or --workingdir=path

[07:47] <moritz> or something like that

[07:47] <samcv> yeah that would be great

[07:48] <moritz> or --chdir=path

[07:48] <samcv> good suggestions

[07:48] <samcv> i tried adding a module that does it. but with how the appimage is relative, it totally breaks things to preload modules

[07:49] <samcv> they can be loaded fine in scripts but not *before* because the precompilation and stuff triggers a dependency cycle (even if it's an empty file you're preloading)

[07:51] *** Cabanossi left
[07:54] <samcv> argh. precomps have nonrelative paths in them

[07:54] <samcv> frustrating. so can't put them back in because then hashes are wrong

[07:54] *** Cabanossi joined
[07:55] <samcv> wonder if i can just rename them based on the checksum?

[07:55] <samcv> after i edit them

[08:01] *** jonas1 joined
[08:04] *** mr-foobar left
[08:05] *** mr-foobar joined
[08:05] *** dakkar joined
[08:12] <samcv> also i think we should have Readline not Linenoise for Rakudo *

[08:12] <samcv> since Linenoise does not support Unicode properly. it's UTF-8 naive

[08:16] *** darutoko joined
[08:22] *** espadrine left
[08:22] *** Cabanossi left
[08:22] *** kurahaupo joined
[08:22] *** g4 joined
[08:23] *** kurahaupo__ joined
[08:25] *** kurahaupo_ left
[08:25] *** Cabanossi joined
[08:25] *** CIAvash joined
[08:26] *** kurahaupo left
[08:28] *** kurahaupo__ left
[08:33] *** xtreak left
[08:34] *** xtreak joined
[08:36] <u-ou> is there a way to tailcall in perl6 like 5's goto &foo

[08:36] *** xtreak left
[08:36] *** xtreak joined
[08:37] *** stmuk_ joined
[08:39] *** stmuk left
[08:41] *** stmuk joined
[08:43] *** stmuk_ left
[08:52] *** Cabanossi left
[08:53] <u-ou> nvm, im off to bed ;p

[08:53] <u-ou> night

[08:53] <u-ou> night

[08:53] <u-ou> oops

[08:54] *** Cabanossi joined
[09:04] *** Luna521 joined
[09:05] <samcv> night u-ou 

[09:06] <samcv> u-ou, this is what the documentation says https://docs.perl6.org/language/5to6-perlfunc#goto

[09:08] <samcv> i would read here https://design.perl6.org/S04.html#The_goto_statement

[09:08] *** Luna521 left
[09:10] <samcv> looks like next last and redo can be called on Label 's

[09:11] <samcv> and Label is a type

[09:11] *** tadzik left
[09:11] *** ilmari[m] left
[09:11] *** CIAvash[m] left
[09:11] *** Matthew[m] left
[09:11] *** mienaikage left
[09:11] *** dp[m] left
[09:11] *** xui_nya[m] left
[09:11] *** unclechu left
[09:11] *** M-Illandan left
[09:13] *** wictory[m] joined
[09:14] *** Luna521 joined
[09:15] *** TEttinger left
[09:23] *** Luna521 left
[09:23] *** xtreak left
[09:24] *** xtreak joined
[09:26] *** tadzik joined
[09:26] *** M-Illandan joined
[09:26] *** dp[m] joined
[09:26] *** Matthew[m] joined
[09:26] *** unclechu joined
[09:26] *** ilmari[m] joined
[09:26] <Geth> Â¦ ecosystem: a798b27b49 | (Alexey Melezhik)++ (committed using GitHub Web editor) | META.list

[09:26] <Geth> Â¦ ecosystem: Install Rakudo as system package

[09:26] <Geth> Â¦ ecosystem: 

[09:26] <Geth> Â¦ ecosystem: https://github.com/melezhik/perl6-sparrowdo-rakudo - This is simple installer of Rakudo Perl6.

[09:26] <Geth> Â¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a798b27b49

[09:26] *** xui_nya[m] joined
[09:26] *** mienaikage joined
[09:26] *** CIAvash[m] joined
[09:28] *** xtreak left
[09:28] *** xtreak joined
[09:30] *** ChoHag left
[09:30] *** noganex left
[09:30] *** noganex joined
[09:31] *** xtreak left
[09:32] *** Actualeyes left
[09:33] *** xtreak joined
[09:34] *** lizmat left
[09:38] *** ChoHag joined
[09:38] *** bjz joined
[09:44] *** movl joined
[09:44] *** movl left
[09:45] *** movl joined
[09:52] *** Luna521 joined
[09:56] *** Luna521 left
[09:57] *** bjz left
[09:59] *** bjz joined
[10:05] *** Luna521 joined
[10:06] *** TEttinger joined
[10:07] *** Luna521 left
[10:08] *** Luna521 joined
[10:31] *** fatguy joined
[10:35] <fatguy> how do i import class / role into my main perl file ? my class file is Class/Example.pm, i specified 'unit module Example' and use 'use Class:Example' on main file but when i run it, it return  'undeclared name'

[10:38] <geekosaur> you needed "unit module Class::Example;" and probably "use lib '.'"

[10:39] <geekosaur> or, "use lib 'Class'"

[10:39] <Luna521> 'Google haskell

[10:40] *** fatguy left
[10:49] *** Luna521 left
[10:53] *** Luna521 joined
[11:04] *** fatguy joined
[11:05] *** g4 left
[11:10] *** Luna521 left
[11:16] *** labster left
[11:19] *** Luna521 joined
[11:23] *** Luna521 left
[11:23] *** Luna521 joined
[11:27] *** kyan left
[11:30] *** Luna521 left
[11:40] *** fatguy left
[11:59] *** raschipi joined
[12:03] *** DarthGandalf joined
[12:13] *** xtreak left
[12:15] *** fatguy joined
[12:16] *** bjz_ joined
[12:16] *** xtreak joined
[12:17] *** bjz left
[12:19] *** xtreak left
[12:19] *** xtreak joined
[12:20] *** ufobat left
[12:26] *** xtreak left
[12:39] *** wamba joined
[12:45] *** shlomif joined
[12:45] *** rindolf left
[12:45] *** domidumont left
[12:45] *** shlomif is now known as rindolf

[12:50] *** domidumont joined
[12:54] *** domidumont left
[12:55] *** domidumont joined
[12:56] *** domidumont left
[12:56] *** mcmillhj joined
[12:57] *** domidumont joined
[12:59] *** TimToady left
[13:01] *** TimToady joined
[13:02] *** curt_ joined
[13:03] *** curt_ left
[13:05] *** curan left
[13:10] *** raschipi left
[13:28] *** skids joined
[13:34] *** titsuki joined
[13:36] *** Cabanossi left
[13:40] *** Cabanossi joined
[13:40] *** wamba left
[13:48] <moritz> timotimo: fwiw perl6-all-modules is now up-to-date

[13:52] <timotimo> thanks!

[13:52] <masak> moritz++

[13:52] <timotimo> moritz++

[13:53] <timotimo> so it turns out that we never precompile nfas for grammars that are written in perl6 code. only grammars in nqp code get that benefit, like the Perl6::Grammar itself

[13:53] <masak> huh

[13:54] <masak> potential big speedup?

[13:58] <timotimo> startup improvements could be had

[13:58] <timotimo> so, this is confusing me right now:

[13:59] <timotimo> i see that in the bootstrap a Regex gets @!caps, $!nfa, @!alt_nfas set as attributes, and SET_CAPS, SET_NFA, SET_ALT_NFA, and such set as methods

[14:00] <timotimo> ah, it was just one of the <anon> in there

[14:00] *** lowbro left
[14:01] <timotimo> okay, let's see ...

[14:02] <timotimo> haha

[14:02] <timotimo> could it be ...

[14:02] <timotimo> m)

[14:02] <timotimo> nqp has the method ALT_NFAS that it calls to get at the nfas

[14:02] <timotimo> rakudo calls it ALT_NFA

[14:04] <timotimo> oh, not quite

[14:04] <timotimo> that's supposed to be a different method

[14:04] *** jdmmmmm joined
[14:05] <timotimo> why ALT_NFA is calling atkey on an attribute that's supposedly a List ... nobody will ever know?

[14:05] *** jdmmmmm left
[14:08] <timotimo> yeah, we're totally storing a hash inside an attribute that's defined to be List

[14:11] <timotimo> it's iterating over the result of ALT_NFAS into a variable named $name, but it's actually expected to be a pair ... who thought of all this :D

[14:13] *** aindilis left
[14:20] *** xtreak joined
[14:20] *** Actualeyes joined
[14:23] *** bjz_ left
[14:25] <timotimo> cool, i think i've got it

[14:30] <timotimo> and there's the commit

[14:32] *** bjz joined
[14:32] *** fatguy left
[14:39] *** pat_js joined
[14:40] *** nowan left
[14:40] *** bjz left
[14:43] *** nowan joined
[14:44] *** khw joined
[14:47] *** domidumont left
[14:48] *** domidumont joined
[14:56] *** domidumont left
[14:57] *** domidumont joined
[15:08] *** wamba joined
[15:15] *** drrho_ left
[15:16] *** drrho_ joined
[15:18] *** xtreak left
[15:21] *** alimon joined
[15:23] *** gdonald left
[15:23] *** domidumont left
[15:23] *** gdonald joined
[15:31] *** cdg joined
[15:31] *** st_elmo joined
[15:43] *** kaare__ left
[15:47] *** Stamm joined
[15:51] *** Stamm left
[16:08] *** titsuki left
[16:09] *** CIAvash left
[16:16] *** geekosaur left
[16:18] *** geekosaur joined
[16:36] *** robertle joined
[16:39] *** cpage_ joined
[16:48] *** dakkar left
[17:07] *** domidumont joined
[17:08] *** b2gills left
[17:16] *** pat_js left
[17:39] <alphah> how can I merge these two hashes:

[17:39] <alphah> %mainhash: {subhash1 => {key1 => True, key2 => value2}, subhash2 => {key3 => value3, key4 => True}}

[17:39] <alphah> %otherhash:  {subhash1 => {key1 => True, key2 => othervalue2}, subhash2 => {key5 => value5, key6 => True}}

[17:39] <alphah> sotha %mainhash becomes {subhash1 => {key1 => True, key2 => othervalue2}, subhash2 => {key3 => value3, key4 => True, key5 => value5, key6 => True}}

[17:40] *** xfix_ left
[17:41] <alphah> merge keys of %otherhash to %mainhash, if duplicate keys , then overwrite %mainhash and use the vlaues from %otherhash

[17:44] <MasterDuke> m: my %a = (a => 1, b => 2); my %b = (b => 3, c => 4); %a ,= %b; dd %a

[17:44] <camelia> rakudo-moar 064b58: OUTPUT: Â«Hash %a = {:a(1), :b(3), :c(4)}â¤Â»

[17:45] <MasterDuke> that works for a single level of hashes, haven't tried with multi-leveled hashes

[17:46] <alphah> yes, doesn't work for multi level hashes

[17:49] <TimToady> m: my %a = :1a, :2b, :3c; my %b = :42b; %a Â«=Â» %b; say %a

[17:49] <camelia> rakudo-moar 064b58: OUTPUT: Â«{a => 1, b => 42, c => 3}â¤Â»

[17:51] *** setty1 joined
[17:51] <TimToady> that might recurse

[17:52] <TimToady> but it's probably gonna screw up your top level

[17:52] <TimToady> sometimes you just gotta write a map :)

[17:53] <alphah> hmm

[17:53] <TimToady> at one point we had a .tree command that could remap differently on different levels, dunno if we still do

[17:55] <jnthn> m: my %mainhash := {subhash1 => {key1 => True, key2 => 'value2'},subhash2 => {key3 => 'value3', key4 => True}}; my %otherhash := {subhash1 => {key1 => True, key2 => 'othervalue2'}, subhash2 => {key5 => 'value5', key6 => True}}; for %otherhash { %mainhash{.key} = hash %mainhash{.key}, .value }; say %mainhash # shortest I figured so far

[17:55] <camelia> rakudo-moar 064b58: OUTPUT: Â«{subhash1 => {key1 Trueâ¤key2       value2 => {key1 => True, key2 => othervalue2}}, subhash2 => {key3       value3â¤key4     True => {key5 => value5, key6 => True}}}â¤Â»

[17:56] <jnthn> Uh, not sure it's right though :)

[17:57] <jnthn> m: my %mainhash := {subhash1 => {key1 => True, key2 => 'value2'},subhash2 => {key3 => 'value3', key4 => True}}; my %otherhash := {subhash1 => {key1 => True, key2 => 'othervalue2'}, subhash2 => {key5 => 'value5', key6 => True}}; for %otherhash { %mainhash{.key} = hash %mainhash{.key}<>, .value<> }; say %mainhash # shortest I figured so far

[17:57] <camelia> rakudo-moar 064b58: OUTPUT: Â«{subhash1 => {key1 => True, key2 => othervalue2}, subhash2 => {key3 => value3, key4 => True, key5 => value5, key6 => True}}â¤Â»

[17:57] <TimToady> maybe Â«Â«=Â»=Â» or some such

[17:57] <jnthn> that looks more like it

[17:57] <jnthn> Dinner :)

[17:58] <alphah> trying to understand what you guys did :)

[18:04] <alphah> jnth: yeah it worked :)

[18:04] *** inokenty joined
[18:05] <alphah> TimToady: reading about Â«Â«=Â»=Â» I'll see if I can make it work, looks shorter

[18:05] <alphah> Thanks guys

[18:05] *** xinming_ left
[18:12] *** espadrine joined
[18:17] <TreyHarris> TimToady: I thought there was a categorize variant for this.... hrm

[18:19] <Geth> Â¦ doc: 56b50fe109 | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[18:19] <Geth> Â¦ doc: [io grant] Document IO::Handle.slurp

[18:19] <Geth> Â¦ doc: 

[18:19] <Geth> Â¦ doc: - Rakudo impl: https://github.com/rakudo/rakudo/commit/f1b4af7af4

[18:19] <Geth> Â¦ doc: - Tests: https://github.com/perl6/roast/commit/7e4a2ae34b

[18:19] <Geth> Â¦ doc: - Also add deprecation notice to .slurp-rest

[18:19] <Geth> Â¦ doc: review: https://github.com/perl6/doc/commit/56b50fe109

[18:20] <TreyHarris> Can anybody point me at a P6 port of a perlxs-dependent module? I just want to crib off how it was done, I can figure out my own way but there are probably already conventions I can follow

[18:21] <TreyHarris> (A full port, I mean, not a p6-to-p5 bridge)

[18:21] <mst> I'm not sure there exactly are such things, p6 seems to go straight to FFI

[18:21] <mst> so it's more like a perl5 module using http://p3rl.org/FFI::Platypus

[18:22] <mst> jnthn: suggestions for a good example of 'is native' ?

[18:23] <TreyHarris> mst: that's what I was going to do when I said "I can figure out my own way"-- just translate the .t files into Perl 6 and rewrite the XS into "is native" calls. Assuming that the P5 API is equivalent to the best P6 API, which it may not be.

[18:26] <TreyHarris> .subst(/\.t\/, ".t and .pm")

[18:27] <Geth> Â¦ ecosystem: b0036ac344 | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[18:27] <Geth> Â¦ ecosystem: Use META6.json for MARTIMM/pod-render

[18:27] <Geth> Â¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/b0036ac344

[18:27] *** cdg left
[18:27] <Geth> Â¦ ecosystem: 229fdc2aac | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[18:27] <Geth> Â¦ ecosystem: Use META6.json for XML.pm6

[18:27] <Geth> Â¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/229fdc2aac

[18:29] <jnthn> Depends what kind of library it is. If it's some C code that you want to compile on install and call, see Digest::SHA1::Native. If it's to some installed library (and maybe include a Win32 binary install option) then there's loads of examples; Acrhive::LibArchive::Raw is probably a nice mix of non-tiny but isolated.

[18:30] <jnthn> And if it's some kind of non-blocking library and you want an example of how to front it with Promise/Supply, SSH::LibSSH is probably the best example so far

[18:30] <TreyHarris> I'm specifically curious if anyone has done it in a case where different OS variants are smooshed together via XS into the same Perl 5. Like Proc::ProcessTable. 

[18:31] <TreyHarris> $*OS and $*SYS, which I remember from the Apocalypses, don't seem to exist anymore, so I don't even see how to switch on it

[18:31] <jnthn> It's $*DISTRO and $*KERNEL nowadays

[18:32] <jnthn> So far as native calls go, we don't resolve them until the first call

[18:32] <TreyHarris> jnthn: and regex matching against it at compiletime (to switch on <linux bsd etc>) is allowable?

[18:33] <jnthn> I think they're objects rather than strings so you may be able to exact match

[18:33] <jnthn> m: say $*KERNEL

[18:33] <camelia> rakudo-moar f1b4af: OUTPUT: Â«linux (4.4.57.18.3.default)â¤Â»

[18:33] <jnthn> m: say $*KERNEL.^methods

[18:33] <camelia> rakudo-moar f1b4af: OUTPUT: Â«(BUILD name version release hardware arch bits signals signal Str gist auth signature desc)â¤Â»

[18:33] <jnthn> m: say $*KERNEL.name

[18:33] <camelia> rakudo-moar f1b4af: OUTPUT: Â«linuxâ¤Â»

[18:34] <TreyHarris> m: say $*KERNEL.^methods

[18:34] <camelia> rakudo-moar f1b4af: OUTPUT: Â«(BUILD name version release hardware arch bits signals signal Str gist auth signature desc)â¤Â»

[18:34] <TreyHarris> ah, cool

[18:34] <TreyHarris> m: say $*KERNEL.name

[18:34] <camelia> rakudo-moar f1b4af: OUTPUT: Â«linuxâ¤Â»

[18:34] <TreyHarris> that may be sufficient.

[18:37] <TreyHarris> -Should I define such native subs in a phaser if I'm going to do that kind of thing? Or since it's not resolved until first call can I just do method dispatch on something I get out of $*KERNEL and assume the invalid native calls will never be reached?

[18:38] <TreyHarris> i.e., method exposedthing (not native) uses $*KERNEL to call method hiddenthing-linux or method hiddenthing-bsd, etc.?

[18:39] <TreyHarris> or can I even subsignature off of $*KERNEL itself and use a multi?

[18:39] <jnthn> Personally I'd probably rely on it not being resolved until first call and just dispatch to the correct one

[18:39] <TreyHarris> (Sorry, I know I _can_. I just don't know if I should.)

[18:40] <jnthn> Unless there were a load of calls and I wanted to break them out into separate modules by OS or something

[18:40] <jnthn> Not sure if I'd where-cause it off $*KERNEL

[18:40] <jnthn> Those aren't...entirely optimal :)

[18:41] <jnthn> Another option would be to have a role declaring the "interface" and then write a class doing it per OS or whatever

[18:42] <jnthn> And then something like constant TheThingy is export = do given $*KERNEL { when 'linux' { TheLinuxImpl } ... }

[18:43] <jnthn> Then the implementation is selected at compile time and you don't have repeated runtime checks, and export a consistent symbol name to userspace

[18:43] <jnthn> uh, s/userspace/the user of your module/ :)

[18:43] <jnthn> The interface role is optional of course, it just gives people a portable type they can talk about

[18:45] <jnthn> shopping, bbl

[18:45] *** Actualeyes left
[18:47] <TreyHarris> jnthn: yeah, makes sense. The compiler doesn't even let you write a where clause for a parameterless signature, and taking advantage of it letting you write something like "multi foo($a where { $*KERNEL.name ~~ 'linux'}) { ... }" when you do have a parameter seems fugly as hell

[18:49] *** Actualeyes joined
[18:49] <TreyHarris> jnthn: I like the "constant TheThingy is export = do given $*KERNEL" a lot. It answers a lot of cases where I felt frustrated that I couldn't declare the same name twice globally and disambiguate between them lexically

[18:50] *** kaare__ joined
[18:51] <TreyHarris> why I was complaining to geekosaur yesterday that use lack's Haskell's "import Long.Thing as T" and "import Prelude hiding (coreThing); import Elsewhere (coreThing)"

[18:51] *** domidumont left
[18:51] <TreyHarris> *C<use> lacks Haskell's...

[18:56] *** kyan joined
[18:56] <TreyHarris> That said, does that mean we've entirely given up on the idea of answering the diamond dependency problem where you depend on A and B where A depends on C version 1 and B depends on C version 2?

[18:57] <TreyHarris> Because I know that was a design goal

[19:00] <geekosaur> not so much given up, as not having tackled it yet and probably not going to happen for v6.d either

[19:00] <geekosaur> it's a Hard Problem

[19:01] <TreyHarris> geekosaur: Oh, I know, and you know I know :-)

[19:04] *** xinming joined
[19:11] *** kaare__ left
[19:20] <skids> TreyHarris: I had a relatively efficient runtime backend chooser in the Sum:: module (lib/Sum/Recourse.pm), but it is currently bitrotten.  Allowed the module to roll with it if someone installed/uninstalled a native library and fallback to a different one or pure Perl6.

[19:20] *** darutoko left
[19:23] <grondilu> m: say .fmt("%f") give [*] 1..361;

[19:23] <camelia> rakudo-moar f1b4af: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Two terms in a rowâ¤at <tmp>:1â¤------> 3say .fmt("%f")7â5 give [*] 1..361;â¤    expecting any of:â¤        infixâ¤        infix stopperâ¤        postfixâ¤        statement endâ¤        stateâ¦Â»

[19:23] <grondilu> m: say .fmt("%f") given [*] 1..361;

[19:23] <camelia> rakudo-moar f1b4af: OUTPUT: Â«Infâ¤Â»

[19:23] *** nhywyll joined
[19:23] <grondilu> how can I get a scientific notation without going through floating points?

[19:24] <grondilu> (also, can I?)

[19:24] <TreyHarris> skids: yes! I vaguely remembered that, and I went looking for it

[19:24] <TreyHarris> skids: guess it's best I didn't find it since it would have confused me

[19:25] *** AlexDaniel joined
[19:27] *** xfix joined
[19:28] <skids> m: .fmt("%f").say given [*] 1..361;

[19:28] <camelia> rakudo-moar f1b4af: OUTPUT: Â«Infâ¤Â»

[19:28] <skids> oh didn;t notice the reduce.

[19:29] * skids mind is dulled from logging into 300 switches today.

[19:31] *** grondilu left
[19:40] *** wamba left
[19:42] *** labster joined
[19:44] <skids> m: say (45/678939).base(10,50); # grondilu -- just move the '.' and count? 

[19:44] <camelia> rakudo-moar f1b4af: OUTPUT: Â«0.00006627988670558032459469849279537631510341871656â¤Â»

[19:47] <TreyHarris> m: say .log10 given [*] 1..361;

[19:47] <camelia> rakudo-moar f1b4af: OUTPUT: Â«Infâ¤Â»

[19:47] <TreyHarris> ouch

[19:48] *** avalenn left
[19:50] *** yqt joined
[20:01] *** avalenn joined
[20:02] *** nhywyll left
[20:07] *** Cabanossi left
[20:09] *** Cabanossi joined
[20:09] <skids> m: say $_.can("log10")[0]>>.package given [*] 1..361;

[20:09] <camelia> rakudo-moar f1b4af: OUTPUT: Â«((Numeric))â¤Â»

[20:11] *** Zoffix joined
[20:11] <Zoffix> m: printf '%.5fe%d', $_/10**(.chars-1), .chars-1 with [*] 1..361

[20:11] <camelia> rakudo-moar f1b4af: OUTPUT: Â«1.43792e768Â»

[20:12] <Zoffix> Negative numbers sold separately

[20:12] <Zoffix> Also, the 10** explodes at some largish point.

[20:12] *** Zoffix left
[20:14] *** cdg joined
[20:14] <skids> m: say $_.can("log")>>.package given [*] 1..361; #hehe

[20:14] <camelia> rakudo-moar f1b4af: OUTPUT: Â«((Real) (Cool))â¤Â»

[20:21] <Geth> Â¦ ecosystem: blippy++ created pull request #315: Add NCurses6 to ecosystem

[20:21] <Geth> Â¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/315

[20:23] *** leont left
[20:23] *** leont joined
[20:24] <Geth> Â¦ ecosystem: 1634b1f5ea | blippy++ (committed by Zoffix Znet) | META.list

[20:24] <Geth> Â¦ ecosystem: Add NCurses6 to ecosystem (#315)

[20:24] <Geth> Â¦ ecosystem: 

[20:24] <Geth> Â¦ ecosystem: See https://github.com/blippy/perl6-ncurses6

[20:24] <Geth> Â¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/1634b1f5ea

[20:30] *** _28_ria left
[20:32] *** _28_ria joined
[20:37] *** Cabanossi left
[20:39] *** Cabanossi joined
[20:41] *** ChoHag left
[20:47] *** bjz joined
[20:57] *** skids left
[21:00] *** alimon left
[21:04] *** gdonald left
[21:04] *** gdonald joined
[21:08] *** robertle left
[21:08] *** RabidGravy left
[21:10] *** _28_ria left
[21:12] *** _28_ria joined
[21:12] *** dct joined
[21:14] *** bjz left
[21:19] *** dct left
[21:19] *** Actualeyes left
[21:20] *** mcmillhj left
[21:21] *** bjz joined
[21:21] *** setty1 left
[21:23] *** yusrideb joined
[21:28] *** bjz left
[21:31] *** dct joined
[21:32] *** bjz joined
[21:37] <Geth> Â¦ ecosystem: caecb13b8e | (Jonathan Worthington)++ (committed using GitHub Web editor) | META.list

[21:37] <Geth> Â¦ ecosystem: Add IO::Socket::Async::SSL

[21:37] <Geth> Â¦ ecosystem: 

[21:37] <Geth> Â¦ ecosystem: See https://github.com/jnthn/p6-io-socket-async-ssl for further information.

[21:37] <Geth> Â¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/caecb13b8e

[21:38] *** Cabanossi left
[21:38] *** yqt left
[21:38] *** Cabanossi joined
[21:40] *** bjz left
[21:45] *** john51 left
[21:45] *** john51 joined
[21:47] *** john51 left
[21:48] *** dct left
[21:49] *** mcmillhj joined
[21:50] *** john51 joined
[21:51] *** dct joined
[21:54] *** mcmillhj left
[21:55] <leont> That sounds like a useful module!

[21:57] <jnthn> Took a bit of figuring how to do :)

[21:57] <jnthn> Though writing async bindings to C libs is kinda a fun thing to be doing :)

[22:03] * [Coke] gets a new macbook pro for work, and wonders how on earth liz is coping with the lack of an escape key.

[22:04] <samcv> it has no escappe key!

[22:04] *** mcmillhj joined
[22:07] <[Coke]> it has the dynamic bar at the top, which usually has an escape "key" in it.

[22:07] <[Coke]> I am tempted to remap ` to be ESC instead.

[22:08] <leont> Someone is hating users of proper editors? ;-)

[22:08] *** Cabanossi left
[22:09] *** Cabanossi joined
[22:10] *** mcmillhj left
[22:14] *** dct left
[22:16] <AlexDaniel> [Coke]: what about caps lock? :)

[22:16] <mst> [Coke]: Ctrl-[ is your friend

[22:18] <[Coke]> caps lock is control for me.

[22:19] *** dct joined
[22:19] <lucs> [Coke]: Same for me, and Ctrl-[ for ESC works fine.

[22:20] *** gdonald left
[22:21] *** mcmillhj joined
[22:21] <samcv> when do we just get neural implants to control keyboards with our minds though

[22:21] *** st_elmo left
[22:23] *** gdonald joined
[22:25] *** mcmillhj left
[22:25] *** pmurias left
[22:27] <AlexDaniel> samcv: these are called hands :)

[22:27] *** pmurias joined
[22:31] *** Actualeyes joined
[22:33] *** cdg left
[22:36] *** mcmillhj joined
[22:41] *** mcmillhj left
[22:44] *** kyan left
[22:51] *** Cabanossi left
[22:52] *** espadrine left
[22:52] *** mcmillhj joined
[22:54] *** Cabanossi joined
[22:57] *** dct left
[22:57] *** mcmillhj left
[22:57] *** gdonald left
[22:57] *** gdonald joined
[23:10] *** rindolf left
[23:13] *** skids joined
[23:14] *** pmurias left
[23:25] <Geth> Â¦ doc: 017acd4e18 | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[23:25] <Geth> Â¦ doc: [io grant] Improve docs for IO::Path.slurp

[23:25] <Geth> Â¦ doc: review: https://github.com/perl6/doc/commit/017acd4e18

[23:27] *** mcmillhj joined
[23:34] *** labster left
[23:37] *** Cabanossi left
[23:38] <Geth> Â¦ doc: 0f49bb548c | (Zoffix Znet)++ | doc/Type/IO.pod6

[23:38] <Geth> Â¦ doc: [io grant] List Rakudo-supported encodings in open()

[23:38] <Geth> Â¦ doc: review: https://github.com/perl6/doc/commit/0f49bb548c

[23:39] *** Cabanossi joined
[23:41] <Geth> Â¦ doc: e60da5cc8d | (Zoffix Znet)++ | doc/Type/IO.pod6

[23:41] <Geth> Â¦ doc: [io grant] List utf-* alias examples too since they're common

[23:41] <Geth> Â¦ doc: review: https://github.com/perl6/doc/commit/e60da5cc8d

[23:43] *** labster joined
[23:44] <Geth> Â¦ doc: f83f78cbec | (Zoffix Znet)++ | doc/Type/IO.pod6

[23:44] <Geth> Â¦ doc: [io grant] Use idiomatic Perl 6 in example

[23:44] <Geth> Â¦ doc: review: https://github.com/perl6/doc/commit/f83f78cbec

