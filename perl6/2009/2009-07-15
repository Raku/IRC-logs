[00:11] *** Limbic_Region left
[00:16] *** meppl left
[00:18] *** hercynium_ joined
[00:31] *** hercynium left
[00:39] *** cdarroch left
[00:46] *** nihiliad joined
[00:59] *** Util left
[01:12] <last> Hello out there.  How does one use STD.pm (at home, not the irc version here)?

[01:13] <TimToady> I've used it occasionally

[01:13] <pugs_svn> r27563 | lwall++ | [STD] start splitting out 'need' semantics from 'use'

[01:13] <pugs_svn> r27563 | lwall++ | [STD] fix less-than-awesome message about null patterns, PerlJam++, moritz++

[01:13] <TimToady> cd src/perl6

[01:13] <TimToady> make

[01:13] <TimToady> tryfile foo

[01:14] <TimToady> or viv foo to get AST

[01:14] <last> Wait, where is src/perl6?  Is this in Pugs?

[01:14] <TimToady> yes

[01:14] <TimToady> have you a commit bit to the pugs repo?

[01:15] <last> I think I do, though I haven't messed with it since the very early days.

[01:16] <TimToady> any idea what the svn id was?

[01:16] <TimToady> nevermind, found it

[01:16] *** agentzh left
[01:16] <last> ?

[01:16] <TimToady> still at ralf.org?

[01:17] <last> yes

[01:17] <TimToady> I can renew it if you don't remember your password

[01:17] <last> let me give it a try.

[01:18] <last> how did you figure out ralf.org?  there aren't any obvious connections between this ID and that I can think of...

[01:18] <TimToady> via colomon

[01:19] <TimToady> your irc commection is colomon@

[01:19] <last> Ah.  I see.  :)

[01:19] <TimToady> and that's your old svn id

[01:19] <last> Thank you!  Both for this help and for Perl in general.

[01:20] * TimToady bows and can't stand up again because his swelled head is too heavy

[01:23] *** payload left
[01:23] *** athomason1 joined
[01:24] *** sri_kraih left
[01:25] *** kane_ joined
[01:26] *** xinming_ is now known as xinming

[01:36] <TimToady> std: //

[01:36] <p6eval> std 27563: OUTPUT¬´##### PARSE FAILED #####‚ê§Null regex not allowed at /tmp/BkMdsQczMZ line 1:‚ê§------> [32m//[31m[0m‚ê§FAILED 00:02 36m‚ê§¬ª

[01:37] <TimToady> std: / [] /

[01:37] <p6eval> std 27563: OUTPUT¬´##### PARSE FAILED #####‚ê§Null pattern not allowed at /tmp/3HRRgDMgiz line 1:‚ê§------> [32m/ [[31m] /[0m‚ê§    expecting any of:‚ê§     termish‚ê§  ws‚ê§FAILED 00:02 36m‚ê§¬ª

[01:37] *** athomason left
[01:37] <TimToady> std: / [ a | b | ] /

[01:37] <p6eval> std 27563: OUTPUT¬´##### PARSE FAILED #####‚ê§Null pattern not allowed at /tmp/nX1wGfNDpN line 1:‚ê§------> [32m/ [ a | b | [31m] /[0m‚ê§    expecting any of:‚ê§    termish‚ê§  ws‚ê§FAILED 00:03 36m‚ê§¬ª

[01:37] <TimToady> std: / [ a | | c ] /

[01:37] <p6eval> std 27563: OUTPUT¬´##### PARSE FAILED #####‚ê§Null pattern not allowed at /tmp/634IPLm289 line 1:‚ê§------> [32m/ [ a | [31m| c ] /[0m‚ê§    expecting any of:‚ê§    rxinfix‚ê§  termish‚ê§ ws‚ê§FAILED 00:02 36m‚ê§¬ª

[01:38] <TimToady> std: / [ ) /

[01:38] <p6eval> std 27563: OUTPUT¬´##### PARSE FAILED #####‚ê§Unmatched closing bracket at /tmp/ghZdjjJq1c line 1:‚ê§------> [32m/ [ [31m) /[0m‚ê§    expecting any of:‚ê§   regex atom‚ê§       rxinfix‚ê§ termish‚ê§ ws‚ê§FAILED 00:02 36m‚ê§¬ª

[01:38] <TimToady> std: / [ - ] /

[01:38] <p6eval> std 27563: OUTPUT¬´##### PARSE FAILED #####‚ê§Unrecognized regex metacharacter at /tmp/AS19cXbMlx line 1:‚ê§------> [32m/ [ [31m- ] /[0m‚ê§    expecting any of:‚ê§  regex atom‚ê§       rxinfix‚ê§ termish‚ê§ ws‚ê§FAILED 00:02 36m‚ê§¬ª

[01:42] *** agentzh joined
[01:43] *** kane___ left
[01:46] *** SmokeMachineFCO joined
[01:49] *** kane_ left
[01:51] *** justatheory joined
[01:56] *** SmokeMachine joined
[01:58] *** beggars joined
[02:00] *** FCO left
[02:12] *** explorer left
[02:13] *** tann left
[02:13] <jauaor> hi TimToady 

[02:13] <jauaor> :)

[02:13] *** SmokeMachineFCO left
[02:15] * jauaor smoking test his tiny lang :P

[02:17] *** FCO joined
[02:23] *** frew_ joined
[02:24] *** agentzh left
[02:27] <last> Does the STD.pm tryfile require a working Pugs?  I'm having a rough time get Pugs built...

[02:31] *** FurnaceBoy left
[02:31] *** ihrd joined
[02:31] *** ihrd left
[02:35] *** SmokeMachine left
[02:38] <TimToady> last: no, only a working Perl 5.10

[02:40] <last> Ah, 5.10 dependencies bite me again. Guess I'll move it to the Linux box with 5.10...  Thanks again.

[02:41] *** beggars left
[02:43] *** last left
[02:51] <eternaleye> (backlogging) moritz_, szabgab: Weren't line anchors _intentionally_ taken out because they made Firefox start working _really_ hard (and be nonresponsive) on in-page searches?

[02:53] *** athomason1 left
[02:58] *** nihiliad left
[03:01] *** beggars joined
[03:19] *** bucky joined
[03:20] *** donaldh left
[03:20] *** donaldh joined
[03:21] *** sklarthag left
[03:21] *** ihrd joined
[03:21] *** kyrbe left
[03:21] *** ihrd left
[03:28] *** frankshaw joined
[03:28] *** agentzh joined
[03:32] *** synth left
[03:38] <skids> eternaleye: I don't think that was the main reason the line anchors were taken out.

[03:43] <skids> .oO(though there should be a better system)

[03:49] *** eMaX joined
[04:02] *** skids left
[04:11] *** perlsyntax joined
[04:12] <perlsyntax> Where can  i download perl 6?

[04:12] <perlsyntax> for linux

[04:13] <perlsyntax> hello

[04:14] <araujo> hi

[04:14] <araujo> check the site http://perl6-projects.org/

[04:14] *** frankshaw left
[04:14] <araujo> and choose an implementation 

[04:14] <araujo> :)

[04:22] <perlsyntax> what be good to use with ubuntu linux i just a newbie..

[04:24] *** perlsyntax left
[04:29] <araujo> mmm

[04:40] *** ihrd joined
[04:40] *** ihrd left
[04:42] *** xuser joined
[04:49] *** xuser left
[05:00] *** ihrd joined
[05:01] *** justatheory left
[05:03] *** ihrd left
[05:15] *** kane_ joined
[05:16] *** Laepdjek joined
[05:20] <szabgab> eternaleye, the anchors were not "taken out" that was just a bug I introduced that eliminated them

[05:21] <szabgab> otoh it does seem to be less responsive to me in FF

[05:38] *** jauaor left
[05:39] *** ihrd joined
[05:52] *** eMaX left
[05:55] *** DemoFreak joined
[05:59] *** bucky left
[06:01] <literal> moritz_: why did the syntax highlighting on your blog go away?

[06:02] *** simcop2387 left
[06:05] *** Laepdjek left
[06:12] <moritz_> eternaleye: no, the javascritp made browsers freak out, not the line anchors

[06:12] <moritz_> literal: things that I wrote in POD never had syntax hilighting

[06:25] *** finanalyst joined
[06:27] *** Su-Shee joined
[06:27] <Su-Shee> hi

[06:29] *** rfordinal joined
[06:29] *** kane_ left
[06:32] <szabgab> moritz_, I was planning to replace that javascript with jquery

[06:32] <szabgab> but now I need to go back and write more slides :-)

[06:32] <moritz_> szabgab: ok ;-)

[06:33] *** iblechbot joined
[06:33] <szabgab> there were already 7 people registered to my Perl 6 class when I got the last update!

[06:40] *** M_o_C joined
[06:48] *** rfordinal left
[06:48] <lisppaste3> tene pasted "basic dialog window" at http://paste.lisp.org/display/83615

[06:48] <Tene> comments?

[06:48] *** kst left
[06:49] <Tene> One issue... @*ARGS actually isn't usable at all for passing to a C function that expects argv...

[06:49] *** kst joined
[06:49] <Tene> NCI::Util's toolkit_init can use a parrot argv... but not a processed one like @*ARGS

[06:50] <Tene> so I saved the real argv into @*REALARGS

[06:51] <Su-Shee> ooh, I like to test it - what's Elementry?

[06:51] *** eMaX joined
[06:52] <moritz_> Tene: nice.

[06:53] <moritz_> .oO( why does all GUI code has to look ugly like that? )

[06:53] <eternaleye> That's the E17 toolkit, right?

[06:54] <Tene> eternaleye: yes, one of them.

[06:54] <Tene> moritz_: I basically ported straight from C, with some minor OO stuff on top.

[06:54] *** Rez joined
[06:54] <Tene> I really want to make the OO interface a lot nicer.

[06:54] <Su-Shee> moritz_: at least it's a common standard of ugliness ;) 

[06:55] <Tene> so... it needs some significant APi design.

[06:55] *** Rez is now known as Guest90041

[06:55] <Tene> I should post this to github.

[06:55] <Su-Shee> Tene: it's perfectly readable if one knows gui toolkits...

[06:55] <moritz_> aye

[06:56] <Su-Shee> (great. 3 days ago, I deleted all e17 stuff, because I didn't need it. ;)

[06:56] *** ihrd left
[06:57] <Tene> Heh.

[06:57] <Tene> lemme post this to github...

[06:57] <Su-Shee> yes, please. 

[06:58] <Tene> http://github.com/tene/parrot-elementary/tree/master

[06:58] <Tene> first run build.sh to compile the needed .so

[06:58] <Tene> make sure you have elementary installed

[06:58] <Tene> then run run.sh, which just runs parrot with -X /usr/local/lib

[06:59] <Tene> I'm not sure what env var I could set to make that not required.

[06:59] <Tene> http://imgur.com/kgDVS.png

[07:00] <Tene> I need to wrap the rest of the widgets...

[07:00] *** Guest90041 left
[07:01] <Tene> need to define a few constants...

[07:01] <Tene> need to add a macro for the library init stuff

[07:01] <Tene> but, a good start

[07:01] <Su-Shee> urgh.. elementary really depends on _anything_ :))

[07:01] <Su-Shee> aeh, every.

[07:05] <Tene> Yeah. ;)

[07:05] <Tene> um... there's one issue... I've been getting sporadic segfaults somewhere in one of the efl libs.

[07:05] <Tene> sometimes it takes me a few tries to start the app

[07:05] <Tene> once it starts, everything runs fine.

[07:05] <Su-Shee> I just found the already compiled sources which I didn't delete.

[07:05] <Tene> Also, everything runs perfectly inside of gdb

[07:05] <Tene> every time.

[07:05] <Tene> so, difficult to reproduce...

[07:06] <moritz_> Tene: you could try valgrind

[07:07] <Tene> moritz_: clever.

[07:07] <Tene> I was thinking of trying to debug from a core file.

[07:08] <moritz_> (actually not clever, I just had lots of bad experience ;)

[07:08] <eternaleye> Tene: Do you run into the issue where core files only have 2 stack frames?

[07:08] <Tene> eternaleye: I have very little experience with core files.  I loaded one into gdb a couple of days ago to see if I could do it, and the backtrace definitely had more than two stack frames...

[07:09] <eternaleye> Hm. Maybe it's some setting here, then

[07:09] <Tene> moritz_: segfault not reproducable under valgrind, of course.

[07:10] <moritz_> bah.

[07:10] <Tene> moritz_: but the degfault is definitely happening in the e lib, not parrot, afaict.

[07:11] <eternaleye> Tene: strace?

[07:11] <Tene> so I'll report it to the e folks, and let them track it down.

[07:11] *** frew_ left
[07:14] <Su-Shee> (my coffee went cold, I haven't even got up yet.. and all to see a little window popping up.. ;)

[07:14] <Tene> and to click the buttons!

[07:15] <Tene> Don't forget to click the buttons!

[07:15] *** ihrd joined
[07:15] <Su-Shee> ok, _that_ makes all the difference! :)

[07:15] <Tene> hmm... I can add focus callbacks...

[07:16] <Su-Shee> Tene: are you planning a little howto ala "how to wrap a c lib into parrot and make this a rakudo camel?"

[07:16] <Tene> Um, sure.

[07:16] <Tene> I hadn't planned that yet.

[07:16] <Tene> But, would that be useful to someone, do you think?

[07:17] <Su-Shee> Tene: to more or less everyone who's planning to make the usal 8604 c libs available to rakudo, I think.

[07:17] <Su-Shee> Tene: specifically to everyone planning to wrap cairo, gtk, tk, qt, clutter ... 

[07:17] <moritz_> aye.

[07:17] <moritz_> various DB clients too

[07:17] <Tene> Su-Shee: the way this *should* happen is that we could autogenerate these wrappers from the C headers.

[07:17] <Tene> there was even a project to do that, ncigen

[07:18] <Tene> but it's been pretty much abandoned.

[07:18] <moritz_> that's a shame

[07:18] <Tene> The author lives in my city... I could track him down and "politely" convince him...

[07:18] <Su-Shee> Tene: I personally gladly do it by hand as long as it's a little easier than XS.. 

[07:18] <Tene> I've never done XS.

[07:18] <Su-Shee> Tene: knocking at his door at 3 in the morning, abducting his cat..? ;)

[07:18] <Tene> Exactly!

[07:19] <Su-Shee> Tene: I took one look into it and didn't even start - I've always wanted to add xlib surfaces to cairo-perl

[07:19] *** zamolxes joined
[07:19] <Tene> there's an existing xlib wrapper for Parrot... but it's not usable from rakudo.

[07:19] <Su-Shee> Tene: anyway - imagine a rakudo-wrapper around entire X including composite... 

[07:20] *** donaldh left
[07:20] <Tene> It wouldn't take much to make it available from rakudo, though.

[07:20] <Su-Shee> Tene: I'm drooling into my keyboard, now. 

[07:20] *** donaldh joined
[07:20] <Tene> oh?  for raw xlib?

[07:20] <Su-Shee> ok, not for that, no. ;)

[07:20] <Tene> heh

[07:21] <moritz_> the art of wrapping includes deciding what to wrap ;-)

[07:21] <Su-Shee> Tene: what I'm thinking about is that OLPC's "sugar" project shows us, that there is no reason not to write shiny windowmanagers in a "scripting language". now imagine having extensive gui/graphic's bindings of all kinds in rakudo.

[07:21] <pugs_svn> r27564 | moritz++ | [t/spec] remove a left-over .car

[07:22] <Su-Shee> moritz_: tuna with goat cheese. ;)

[07:22] <Tene> looks like someone started wrapping Qt.

[07:22] <Tene> Su-Shee: japhb has made OpenGL available from rakudo

[07:23] <Su-Shee> Tene: Very nice. 

[07:24] <Tene> Su-Shee: does the elementary example work for you?

[07:24] <Tene> et.pir ?

[07:25] <Su-Shee> Tene: have to update some stuff first, elementary doesn't play with older snapshots, it seems.

[07:25] <Tene> or .pl ?

[07:25] <Tene> ah

[07:26] *** |MoC| joined
[07:26] *** M_o_C left
[07:26] *** ihrd left
[07:27] *** _MoC_ joined
[07:27] *** |MoC| left
[07:29] *** rfordinal joined
[07:34] *** tann joined
[07:35] <tann> std: (1..5).grep :{ $_ % 1 };

[07:35] <p6eval> std 27563: OUTPUT¬´ok 00:02 37m‚ê§¬ª

[07:35] <tann> rakudo: (1..5).grep :{ $_ % 2 };

[07:35] <p6eval> rakudo d8d064: OUTPUT¬´Statement not terminated properly at line 2, near ":{ $_ % 2 "‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[07:35] <tann> ^^^ looks like rakudo's parser doesn't get it right?

[07:36] <eternaleye> rakudo: (1..5).grep: { $_ % 2 }

[07:36] <p6eval> rakudo d8d064:  ( no output )

[07:36] <eternaleye> rakudo: .say for (1..5).grep: { $_ % 2 }

[07:36] <tann> eternaleye: std parses ok

[07:37] <p6eval> rakudo d8d064: OUTPUT¬´1‚ê§3‚ê§5‚ê§¬ª

[07:37] *** payload joined
[07:37] <Tene> rakudo doesn't do adverbial blocks yet

[07:37] <tann> eternaleye: if that space makes such a difference, expect lots of guys to become bald sooner 

[07:37] <tann> Tene: thanks

[07:38] *** rfordinal left
[07:38] <eternaleye> tann: It's a semantic error, not a syntactic one - STD only catches _syntax_ errors

[07:38] *** eMaX left
[07:39] <eternaleye> "wrong meaning" vs "bad grammar"

[07:39] <tann> eternaleye: the space is mandatory?

[07:39] <tann> ie.... no space is allowed

[07:39] <eternaleye> tann: For it to do what you intended there, I think so (I'm no expert)

[07:40] <tann> eternaleye: oh man methinks that'll suck

[07:40] <eternaleye> rakudo: .say for (1..5).grep : { $_ % 2 }

[07:40] <p6eval> rakudo d8d064: OUTPUT¬´Statement not terminated properly at line 2, near ": { $_ % 2"‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[07:40] <Tene> I've never liked the adverbial block thing at all, personally.

[07:40] *** eMaX joined
[07:40] <tann> especially when people are accustomed to write  :by(n)  

[07:40] <Tene> std: (1..5).grep:{ $_ % 1 }

[07:40] <p6eval> std 27564: OUTPUT¬´ok 00:02 37m‚ê§¬ª

[07:40] <eternaleye> tann: it's than _anything_ followed by a colon without whitespace is an invocant

[07:41] <eternaleye> rakudo: .say for (1..5).grep\ : { $_ % 2 }

[07:41] <p6eval> rakudo d8d064: OUTPUT¬´1‚ê§3‚ê§5‚ê§¬ª

[07:41] <eternaleye> "unspace" is useful

[07:42] <tann> pugs: (1..5).grep :{ $_ }

[07:42] <p6eval> pugs: OUTPUT¬´*** ‚ê§    Unexpected ":{"‚ê§    expecting operator‚ê§    at /tmp/qm019IEa83 line 1, column 13‚ê§¬ª

[07:42] *** kidd_ joined
[07:42] <tann> oh man

[07:42] <tann> larry must've thought hard about this ...

[07:42] <tann> it sucks nonetheless

[07:43] <Tene> pugs never got adverbial block, iirc.

[07:44] <eternaleye> tann: prefix:<:> is the Pair constructor (also known as 'adverbial' form). :something('value) makes the Pair 

[07:44] <eternaleye> :something('value') makes the Pair something => 'value'

[07:44] <tann> eternaleye: and i thought only pythonists care about whitespaces

[07:44] <eternaleye> Omitting parens and value default it to Bool::True

[07:45] <eternaleye> tann: Perl only cares when leaving it out creates something abiguous to parse

[07:45] <eternaleye> *ambiguous

[07:45] <moritz_> Perl 6 cares much more about whitespace

[07:45] *** ihrd joined
[07:45] <moritz_> not about leading whitespaces on lines though

[07:46] <tann> and those error will appear ambiguous to perl6 novices 

[07:46] <eternaleye> (1..5).grep:{ $_ % 2 } # is (1..5).grep an invocant, or is { $_ % 2 } the key of a pair?

[07:46] <moritz_> it's an adverbial block, actually

[07:46] <tann> so, .say for 1..100  :by(3) -> $i; will fail to parse

[07:46] <Su-Shee> Tene: You've not just wrapped Elementary into parrot, you wrote a parrot version of the window-popup itself and wrapped this into rakudo?

[07:46] <tann> lemme check

[07:47] <tann> rakudo: .say for 1..100 :by(3) -> $i;

[07:47] <p6eval> rakudo d8d064: OUTPUT¬´Statement not terminated properly at line 2, near ":by(3) -> "‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[07:48] <eternaleye> tann: I have no clue what that's supposed to do, and it's rightly invalid IIUC

[07:48] <tann> rakudo: .say for 1..100:by(3);

[07:48] <p6eval> rakudo d8d064: OUTPUT¬´Statement not terminated properly at line 2, near ":by(3);"‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[07:48] <eternaleye> -> declares parameters on blocks; where's the block?

[07:49] <tann> eternaleye: late night and too much food :)

[07:49] <eternaleye> rakudo: .say for 1..100 :by(3);

[07:49] <p6eval> rakudo d8d064: OUTPUT¬´Statement not terminated properly at line 2, near ":by(3);"‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[07:49] <moritz_> adverbs on operators aren't implemented in Rakudo

[07:49] <moritz_> so 1..10:by() won't work yet

[07:49] <eternaleye> Ah

[07:49] <moritz_> rakudo: say Range.new(1, 10, by => 3)

[07:49] <p6eval> rakudo d8d064: OUTPUT¬´Multiple Dispatch: No suitable candidate found for 'cmp', with signature 'PP->I'‚ê§in method Range::true (src/gen_setting.pm:1601)‚ê§called from Main (/tmp/bSC5AgieMK:2)‚ê§¬ª

[07:50] <moritz_> rakudo: say Range.new(from => 1, to =>  10, by => 3)

[07:50] <p6eval> rakudo d8d064: OUTPUT¬´12345678910‚ê§¬ª

[07:51] <tann> moritz: i can't still get over the fact that a space before the adverbial is significant :((

[07:51] <tann> i.e. space before the colon

[07:54] <moritz_> tann: you will, eventually

[07:54] <tann> moritz_: but ya know, i have love for those who like to get into perl 6 ;)

[08:06] *** ejs joined
[08:09] *** tann left
[08:09] *** ihrd left
[08:10] *** dakkar joined
[08:11] *** beggars left
[08:13] *** ejs left
[08:16] *** ejs joined
[08:21] *** frankshaw joined
[08:22] *** kst left
[08:22] *** kst joined
[08:31] *** simcop2387 joined
[08:34] *** payload left
[08:39] *** ihrd joined
[08:40] *** frankshaw left
[08:49] *** DemoFreak left
[09:03] <Su-Shee> *tadaaa* :) http://frollein-schmidt.de/tenes-elementary-window.png

[09:04] *** masak joined
[09:04] <moritz_> and most importantly - did you click those buttons? :-)

[09:05] <Su-Shee> (only 2 hours, an entire enlightement 17 later and renaming my parrot-paths... but it doesn't segfault...)

[09:05] <Su-Shee> I did and they don't break it either. :)

[09:06] <Su-Shee> Tene: very nice. really works just fine.

[09:06] <Su-Shee> (no, I can click as hard as I want - doesn't segfault. :)

[09:07] <moritz_> that doesn't sound very parrotish :-)

[09:07] *** payload joined
[09:07] <Su-Shee> started 20 times and killed it: no segfaults.

[09:08] <Su-Shee> moving around fast also no problem.

[09:09] <Su-Shee> doesn't break expose either. nice, clean, working window.

[09:09] <Su-Shee> no flickering, no nothing.

[09:10] * Su-Shee clicks happily on a button with a stupid grin - I'm really grateful noone's seeing this. :) 

[09:10] <finanalyst> moritz_: which buttons???

[09:10] *** ihrd left
[09:10] <Su-Shee> finanalyst: Tene's "elementary" window has buttons to click on.

[09:11] <finanalyst> \a goes to find elementary project

[09:11] <Su-Shee> (and the window actually is an elementary one but it's the name of enlightenment's widget set..)

[09:11] <Su-Shee> finanalyst: http://download.enlightenment.org/snapshots/2009-06-14/ <-- this works

[09:12] <Su-Shee> finanalyst: and then gitclone Tene's stuff. 

[09:12] <finanalyst> is this parrot or perl6?

[09:12] <moritz_> yes.

[09:12] <Su-Shee> finanalyst: both!

[09:12] <Su-Shee> moritz_: :)

[09:12] *** kst left
[09:12] <Su-Shee> finanalyst: elementary wrapped in parrot wrapped in rakudo.

[09:13] <finanalyst> can i get the project using proto?

[09:13] *** kst joined
[09:13] <Su-Shee> finanalyst: no idea, I just gitcloned it.

[09:15] <Su-Shee> (actually, the code looks like a parrot binding of elementary, then a parrot gui program and this seems to be also wrapped into rakudo..)

[09:15] *** Guest33841 left
[09:17] <masak> http://perlmonks.org/?node_id=780001 # KyleHa++

[09:21] <Matt-W> I'm hoping to be able to take a look at wrapping GTK+ with Parrot at some point

[09:23] <Su-Shee> Matt-W: probably everyone does.. 

[09:23] <Matt-W> But first... this mug of hot chocolate

[09:24] * Su-Shee now gets up and starts the actual day. I need breakfast now.

[09:28] <pugs_svn> r27565 | moritz++ | [t/spec] fudge gets confused with some tests counts, so add a #?DOES line

[09:41] *** mikehh joined
[09:43] <mikehh>  rakudo - d8d0640 builds on parrot r40098 make test PASS, make spectest (up to rev 27564) reports 1 failure - but actually passes

[09:43] <mikehh> t/spec/S03-operators/hyper.rakudo - Parse errors: Bad plan.  You planned 91 tests but ran 93.

[09:45] *** agentzh left
[09:45] *** agentzh joined
[09:45] <mikehh> that's on Ubuntu 9.04 amd64

[09:49] *** sri_kraih joined
[09:54] *** meppl joined
[09:59] *** pmurias joined
[10:01] *** kst left
[10:04] *** kst joined
[10:05] *** ihrd joined
[10:05] *** zamolxes left
[10:19] <moritz_> mikehh: fixed in r27565

[10:26] <szabgab> rakudo: say qq:to/END/  bla END

[10:26] <p6eval> rakudo d8d064: OUTPUT¬´Colons cannot be used as delimiters in quoting constructs at line 2, near ":to/END/  "‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[10:26] <szabgab> are heredocs implemented already ?

[10:26] <moritz_> szabgab: here-docs are NYI

[10:26] <szabgab> std: say qq:to/END/  bla END

[10:26] <p6eval> std 27565: OUTPUT¬´##### PARSE FAILED #####‚ê§Syntax error (two terms in a row?) at /tmp/qPux9EcCNy line 1:‚ê§------> [32msay qq:to/END/  [31mbla END[0m‚ê§    expecting any of:‚ê§  infix or meta-infix‚ê§      infix stopper‚ê§    standard stopper‚ê§ statement modifier loop‚ê§  terminator‚ê§FAILED 00:04 37m‚ê§¬ª

[10:27] <moritz_> std: say qq:to/END/‚ê§bla‚ê§END

[10:27] <p6eval> std 27565: OUTPUT¬´ok 00:04 37m‚ê§¬ª

[10:27] <moritz_> I think the terminator must be on a line of its own

[10:27] <szabgab> ok, how do I type that newline ?

[10:27] <szabgab> in XChat ?

[10:27] <moritz_> by copy & paste :-)

[10:27] <szabgab> std: say qq:to/END/‚ê§bla‚ê§END

[10:27] <p6eval> std 27565: OUTPUT¬´ok 00:04 36m‚ê§¬ª

[10:27] <szabgab> clever :-)

[10:28] <moritz_> or of course you can define a compose key sequence

[10:29] <szabgab> I have no idea how to do that

[10:30] <moritz_> it's an X.org thing, not xchat

[10:30] <moritz_> but I've never tried that

[10:37] *** _MoC_ left
[10:40] *** M_o_C joined
[10:46] <mikehh>  rakudo - d8d0640 builds on parrot r40098 all tests PASS, make test/make spectest (up to rev 27565) - Ubuntu 9.04 amd64

[10:46] *** M_o_C left
[10:48] *** jan_ joined
[10:53] *** payload left
[10:55] *** stepnem joined
[10:57] *** stepnem left
[11:00] *** stepnem joined
[11:02] *** stepnem left
[11:07] *** stepnem joined
[11:07] *** iblechbot left
[11:09] <masak> rakudo: say (1..3).pick(5, :repl).perl

[11:09] <p6eval> rakudo d8d064: OUTPUT¬´[2, 3, 3, 1, 3]‚ê§¬ª

[11:09] *** Su-Shee left
[11:10] <masak> ooh, we have :repl, cool.

[11:12] <moritz_> http://perlmonks.org/?node_id=779942 note the reply to this node :-)

[11:15] <masak> :)

[11:15] <masak> "Perl 6 bias"

[11:16] <moritz_> aye

[11:20] *** donaldh left
[11:21] *** donaldh joined
[11:22] *** KyleHa joined
[11:24] *** ihrd left
[11:28] <moritz_> rakudo: print $*IN.get

[11:28] <p6eval> rakudo d8d064: OUTPUT¬´Land der Berge, Land am Strome,¬ª

[11:29] *** mikehh_ joined
[11:29] <moritz_> http://www.google.com/search?q=perl+6+Land+der+Berge&hl=en :-)

[11:30] <moritz_> rakudo: print $*IN.lines(3).[2]

[11:30] <p6eval> rakudo d8d064: OUTPUT¬´Land der H√§mmer, zukunftsreich!¬ª

[11:36] *** payload joined
[11:36] <masak> I edited the Wikipedia article on the Austrian national anthem to mention its use here on #perl6. http://en.wikipedia.org/wiki/Land_der_Berge,_Land_am_Strome

[11:36] <masak> I'm not 100% the edit will survive, but we'll see.

[11:36] *** eMaX left
[11:38] *** KyleHa left
[11:38] *** jlaire_ joined
[11:39] *** jlaire_ is now known as jlaire

[11:40] <moritz_> "Use in popular culture" would have been the usual headline :-)

[11:41] <masak> oh right! I was clutching for something like that.

[11:41] <masak> should I change it?

[11:41] <moritz_> I think so, not sure

[11:41] * masak changes

[11:44] *** mikehh left
[11:56] *** kimtaro joined
[12:00] *** takadonet joined
[12:00] *** payload left
[12:00] <takadonet> morning all

[12:03] <masak> takadonet: \o

[12:06] <takadonet> ?

[12:07] <masak> takadonet: it's the image of a person, lifting one arm in a greeting gesture.

[12:07] <takadonet> hehe never seen that one before

[12:07] *** kidd_ left
[12:08] <masak> takadonet: I'd guess the meme is about one month old on #perl6.

[12:08] <takadonet> masak: I been on and off this channel over the past year or so

[12:09] <masak> takadonet: have you been doing anything cool with Rakudo yet?

[12:10] <takadonet> masak: Working on getting multiple fasta parser working but met with limited success

[12:10] <masak> anything in particular blocking?

[12:10] *** jan_ left
[12:10] *** cbk left
[12:10] *** frew left
[12:10] *** chipdude left
[12:10] *** eternaleye left
[12:10] *** Ehtyar left
[12:10] *** cognominal left
[12:11] *** chipdude joined
[12:11] *** clkao joined
[12:11] *** frew joined
[12:11] *** estrabd joined
[12:11] <takadonet> I can parse the input correctly however have trouble capturing all the match AND return a single object

[12:12] *** pugs_svn joined
[12:12] <masak> in what way is that a problem?

[12:12] <masak> the Match object in $/ is one single object.

[12:12] <masak> and it captures the whole match.

[12:14] <takadonet> it's been a week since I last did it. Give me a second to see where I left off

[12:14] *** last joined
[12:15] *** eternaleye joined
[12:20] <takadonet> Well looks like I was wrong. I was able to return a single object with the correct attributes however I could not modify attribute (such as removing new line characters) in the grammar and see the changes outside the scope of the grammar

[12:22] *** clintongormley joined
[12:22] <masak> no, that sounds like something you cannot do -- yet.

[12:23] *** Ehtyar joined
[12:23] <masak> but I'm sure there are plenty of possible workarounds.

[12:23] *** mikehh__ joined
[12:24] <takadonet> That's one thing I do not like about perl 6 right now. Never sure if I'm hitting a real road block or just my knowledge of the language 

[12:24] *** pmurias left
[12:25] *** mikehh_ left
[12:25] <moritz_> that's why we have such a helpful IRC channel :-)

[12:25] *** M_o_C joined
[12:26] <takadonet> Indeed, just wish I had more time to hack with Perl 6

[12:28] <masak> it's all a matter of allocating the time we already have.

[12:32] <takadonet> or taking time from work to hack.....

[12:32] *** jauaor joined
[12:33] <masak> effectively, that's what I do. I only work half time.

[12:33] *** jauaor left
[12:34] <moritz_> masak: are you still at university?

[12:34] <masak> moritz_: aye. working/studying.

[12:34] <moritz_> so half time work, half time studying, half time hacking? :-)

[12:35] <masak> exactly.

[12:35] <masak> I haven't had a 100%-or-less schedule in years, so nothing new. :)

[12:37] <Matt-W> masak: what are you studying?

[12:39] <masak> Matt-W: bioinformatics.

[12:39] *** SamuraiJack joined
[12:40] *** DemoFreak joined
[12:40] <SamuraiJack> rakudo: say "hello world";

[12:40] <p6eval> rakudo d8d064: OUTPUT¬´hello world‚ê§¬ª

[12:40] <SamuraiJack> rakudo: say.WHAT

[12:40] <p6eval> rakudo d8d064: OUTPUT¬´say requires an argument at line 2, near ".WHAT"‚ê§in Main (src/gen_setting.pm:2444)‚ê§¬ª

[12:40] <Matt-W> masak: Ah, so Perl then :)

[12:40] <masak> rakudo: SAY &say.WHAT

[12:40] <takadonet> Wished I had a real bioinformatics program to take but no such luck

[12:40] <p6eval> rakudo d8d064: OUTPUT¬´Could not find non-existent sub SAY‚ê§¬ª

[12:40] *** mikehh__ is now known as mikehh

[12:40] <SamuraiJack> say "hello world".WHAT

[12:41] <masak> rakudo: say &say.WHAT

[12:41] <p6eval> rakudo d8d064: OUTPUT¬´Code()‚ê§¬ª

[12:41] <masak> Matt-W: there's a lot of that, yes.

[12:41] <Matt-W> masak: hurrah for Perl!

[12:42] * Matt-W would like a job where he can do Perl

[12:42] <SamuraiJack> rakudo: say "hello world".WHAT

[12:42] <takadonet> my workplace does Perl :)

[12:42] <p6eval> rakudo d8d064: OUTPUT¬´Str()‚ê§¬ª

[12:42] <SamuraiJack> cool )

[12:42] *** iblechbot joined
[12:43] *** ispy_ joined
[12:43] <Matt-W> takadonet: Nice

[12:44] <SamuraiJack> rakudo: say &say.WHAT.WHAT

[12:44] <p6eval> rakudo d8d064: OUTPUT¬´Code()‚ê§¬ª

[12:44] <takadonet> Well Perl,C,Java. Depends what project you are assigned

[12:44] <SamuraiJack> rakudo: say &say.WHAT.WHAT.perl

[12:44] <p6eval> rakudo d8d064: OUTPUT¬´Code‚ê§¬ª

[12:44] <masak> at work, I do mostly Java.

[12:46] <takadonet> Really at work you can pick any language as long as you can justify it and that it makes sense

[12:46] <Matt-W> Lucky you

[12:46] <Matt-W> We're C++ and Java

[12:46] <Matt-W> some Perl

[12:47] <Matt-W> And getting the okay to write anything new in anything other than Java is really hard

[12:47] <Matt-W> Getting the okay to use the most appropriate language for the job seems to need intervention by the Queen

[12:49] *** alc joined
[12:51] <takadonet> Matt-W: Which Queen?

[12:52] <masak> the Red Queen from 'Through the Looking-Glass', probably.

[12:52] *** niksnut joined
[12:53] <Matt-W> Well the Queen to whom I owe allegiance is Elizabeth II of the United Kingdom, but I suspect she might not carry enough authority here in the office.

[12:54] <masak> too bad. then you could refer to the codebase as "Her Highness' Codebase".

[12:54] <Matt-W> After all, what does she know about programming languages

[12:55] <masak> s/'/'s/

[12:55] <Matt-W> It is said that when she gave Bill Gates his honorary knighthood she told him she has never used a computer

[12:55] <Matt-W> Which would not surprise me

[12:55] <Matt-W> But I'm sure she'd like Perl 6

[12:55] <Matt-W> Everyone should like Perl 6

[12:56] <takadonet> hehe

[12:56] <takadonet> one of my co-workers still does not believe it will be out any time soon

[12:56] <Matt-W> I'm not sure about soon

[12:56] <masak> neither am I.

[12:56] *** davef joined
[12:56] <Matt-W> but it will definitely happen

[12:56] *** araujo joined
[12:56] <Matt-W> I've convinced my co-workers of that

[12:56] <Matt-W> and they even like the sound of some of the features

[12:57] <Matt-W> When I did a Perl 5 training course last year, I included a slide in the OOP section showing how to do the example class in Perl 6

[12:57] <Matt-W> People liked the look of that :)

[12:57] <masak> I think there's too much focus on the actual moment of release. there's so much to be done before that happens.

[12:57] <Matt-W> Yes

[12:57] <Matt-W> I just like the day to day progression towards it

[12:57] <masak> that's the only way to make it happen.

[12:57] <Matt-W> One day we'll look at the language features and say 'hang on a sec, this is nearly done'

[12:58] <masak> aye :)

[12:58] <Matt-W> But for now it is enough to track the progress

[12:58] <Matt-W> And after all, most things that get implemented seem to get redesigned in the process

[12:58] <masak> I take that as a very good sign.

[12:58] <takadonet> I enjoy watching the progress that has been made so far but I so want to start using it daily at work

[12:59] <masak> a spec that adapts to reality.

[12:59] <masak> takadonet: you should start by using pun.

[12:59] <masak> http://github.com/masak/pun/

[13:00] <masak> perfect for those short filtering scripts.

[13:00] <masak> </commercial>

[13:03] <Matt-W> I've never got my head around -p and -n

[13:03] <masak> getting a spectest failure running t/spec/S32-io/IO-Socket-INET.t

[13:03] <masak> anyone else getting that?

[13:04] <masak> Matt-W: oh, they're very simple! -n wraps your code in 'while ($_ = $*IN.get).defined) { ... }' and -p in 'while ($_ = $*IN.get).defined) { ... ; .say }'

[13:04] <pmichaud> Good morning, #perl6

[13:04] <masak> oh hai pmichaud 

[13:04] *** jauaor_ joined
[13:05] *** jauaor_ left
[13:05] <Matt-W> masak: ahah

[13:05] <Matt-W> pmichaud: Good morning

[13:06] <masak> did there use to be a <dot> rule in PGE?

[13:06] *** jauaor joined
[13:06] <pmichaud> there did, yes.

[13:06] <pmichaud> Now it's just '.'

[13:06] * masak fixes t/spec/S32-io/IO-Socket-INET.t

[13:07] <davef> hi - in rakudo, if I 'use' a class file in a 'role' definition file I sometimes get 'Could not find non-existent sub trait_mod:is', if I include the class source it's Ok. Is this a known bug or am I doing something wrong? 

[13:08] <pugs_svn> r27566 | masak++ | [IO-Socket-INET.t] <dot> is no more, let's use '.' instead

[13:08] <pmichaud> it's not a known bug.  I don't know if you're doing something wrong.  

[13:08] <masak> davef: I don't get it. is there a nopaste to go with that question?

[13:08] *** payload joined
[13:09] <davef> sorry - what's a nopaste?

[13:09] *** riffraff joined
[13:09] <masak> davef: http://paste.lisp.org/

[13:09] <masak> (for example)

[13:10] *** eternaleye left
[13:11] <masak> davef: it's a web service for posting pieces of code longer than one line (because it'd create too much traffic on the channel) so that everyone can discuss the same piece of code.

[13:11] <davef> ok - will try and generate a minimal example then nopaste it.

[13:11] <masak> excellent.

[13:15] <moritz_> @seen jnthn

[13:15] <lambdabot> jnthn is in #perl6. I last heard jnthn speak 6d 12h 45m 49s ago.

[13:16] <masak> ENOJNTHN

[13:17] <Matt-W> holiday?

[13:17] <pmichaud> yes.

[13:17] <Matt-W> good

[13:17] <masak> he deserves it.

[13:17] <Matt-W> better than being kidnapped by a mob of Common Lisp programmers

[13:17] <moritz_> lol

[13:17] <masak> Matt-W: can that happen?

[13:18] <Matt-W> who are worried that Perl 6 will show that Common Lisp isn't the ultimate programming language after all

[13:18] *** Su-Shee joined
[13:18] * masak looks around nervously

[13:19] <Matt-W> Sometimes you can distract them

[13:19] <Matt-W> Just point out an unmatched bracket

[13:19] <masak> ah! clever.

[13:19] <Matt-W> Doesn't always work though

[13:20] <masak> no, if they indent properly it doesn't help much.

[13:20] <Su-Shee> masak: are you still reading up on MVC?

[13:20] <masak> Su-Shee: very much so, yes.

[13:21] <masak> well, I think I grok MVC as such. it's MVC frameworks that still stump me a bit.

[13:21] <Su-Shee> masak: http://st-www.cs.uiuc.edu/users/smarch/st-docs/mvc.html I think this is one of the Smalltalk "originals" and very interesting.

[13:21] <masak> Su-Shee: ah, yes. a classic.

[13:22] <masak> been a while since I read that one, so I probably will re-read it.

[13:22] <Su-Shee> more detailed in a good way. 

[13:22] <masak> but (as I said), I'm fairly confident about what MVCs do.

[13:22] <masak> just not how MVC web frameworks function.

[13:22] <Su-Shee> how exactly they implement the idea?

[13:23] <masak> yes, something like that.

[13:23] <masak> all the nitty-gritty details, ORM, templates and the like.

[13:23] <masak> how it all fits together.

[13:23] <Matt-W> masak: all lisp example code I've seen lately was indented very poorly

[13:23] <Su-Shee> I found the mojo source very readable and helpfull.

[13:23] <masak> I've bought the Catalyst book.

[13:23] <Matt-W> they always seemed to put their closing brackets all at the end at once ))))))

[13:23] <masak> Su-Shee: oh, I'll check it out then.

[13:24] <masak> Matt-W: I find the Emacs sources are quite nice.

[13:24] <Matt-W> masak: if you come up with some remarkable insights on Catalyst, let me know

[13:24] <Matt-W> masak: I was playing with it recently

[13:24] <Su-Shee> masak: and it's _very_ lean and "plain". 

[13:24] <masak> Su-Shee: do you consider Mojo an MVC framework?

[13:24] <Su-Shee> masak: sure, it is one. 

[13:25] <masak> ok.

[13:25] <Su-Shee> very neat and tidy code. 

[13:26] <masak> gotcha.

[13:42] *** sri_kraih left
[13:43] *** sri_kraih joined
[13:43] *** last left
[13:43] *** last joined
[13:44] *** last left
[13:45] *** SF joined
[13:45] *** icwiener joined
[13:45] *** SF left
[13:46] *** colomon joined
[13:46] <colomon> Hi all.

[13:47] <colomon> I'm trying to get tryfile / STD.pm to work.  

[13:47] <colomon> Right now I get syntax error at STD.pm line 1, near "grammar STD:"

[13:47] <colomon> when I use stock Perl 5.10.0.

[13:47] <moritz_> how do you run it?

[13:47] <moritz_> did 'make' succeed?

[13:47] <masak> sounds like you're trying to run STD.pm with Perl 5.

[13:48] <colomon> 'make' what?  I was under the impression I didn't have to build pugs...

[13:50] <moritz_> colomon: there's a Makefile in src/perl6/

[13:50] <moritz_> colomon: independent from pugs

[13:50] <PerlJam> colomon: you don't have to build pugs, but STD.pm isn't perl 5 code, so you have to build something that understands it :)

[13:50] <moritz_> (it's the pugs repo, but it doesn't built pugs to run 'make' in src/perl6/)

[13:51] <colomon> Just tried it, hardcoded to /usr/local/bin/perl

[13:51] <colomon> Can I just do a quick search and replace on the perl6 directory to point it to my Perl 5.10?

[13:51] <PerlJam> colomon: yep, it expects perl 5.10 to be in /usr/local

[13:52] <PerlJam> colomon: or you could create symlink from /usr/bin/perl to /usr/local/bin/perl if you have 5.10 installed

[13:52] <colomon> I only have 5.10 installed on my personal account, not as root.

[13:53] <PerlJam> oh, then yeah, change /usr/local/bin/perl everywhere to be your local copy of 5.10

[13:53] <PerlJam> also, make sure you have Moose installed

[13:54] <colomon> Okay, I'll give that a try.  Thanks!

[13:55] *** payload left
[13:58] *** alester joined
[13:59] *** azawawi joined
[13:59] *** M_o_C left
[14:01] *** azawawi left
[14:01] <masak> M_o_C: I think I prefer "Reality is that which, when you stop believing in it, doesn't go away." -- Philip K. Dick

[14:05] *** riffraff left
[14:07] *** M_o_C joined
[14:11] *** kidd_ joined
[14:13] *** skids joined
[14:15] *** kane_ joined
[14:16] *** simcop2387 left
[14:19] *** finanalyst left
[14:19] <masak> #p6s tonight. 19:00 UTC as usual.

[14:19] <moritz_> and like last time I might not be able to attend

[14:20] <moritz_> too much lasagne waiting to be cooked and eaten

[14:20] <masak> I know the feeling. :)

[14:21] <moritz_> and later on maybe "Zoff im Zoo", a very nice card game

[14:22] <PerlJam> #p6s ?

[14:22] <colomon> Have working tryfile!  Thanks again!

[14:22] <masak> PerlJam: #perl6-soc

[14:22] <masak> colomon++

[14:22] <PerlJam> masak: and what goes on at #perl6-soc ?

[14:23] <masak> PerlJam: we discuss the two Perl 6 GSoC projects.

[14:23] <masak> sort of like weekly status meethings.

[14:23] *** cbk joined
[14:24] <PerlJam> ah.

[14:24] <PerlJam> How are they coming along BTW?

[14:24] <moritz_> (Zoff im Zoo even made it into a a scientific publication, http://ideas.repec.org/p/dgr/kubcen/2002113.html)

[14:24] <masak> PerlJam: if you come tonight, you'll find out.

[14:24] <masak> PerlJam: all my information is a week old.

[14:25] <PerlJam> it may be a week old to you, but it's new and fresh to me  ;)

[14:25] <moritz_> I think pmurias++ is coming along very nicely

[14:25] <moritz_> he basically did most of his dispatch work, and now has to optimize it

[14:25] <masak> that's my impression as well.

[14:26] <moritz_> with literal++ it's harder to tell for me

[14:26] <PerlJam> literal was doing the docs?

[14:26] <masak> I do know literal++ has made some progress with Padre.

[14:27] <PerlJam> I guess I should look at what the gsoc projects actually are  :)

[14:27] <moritz_> I see a disturbingly low rate of commits to grok (for somebody being paid half time), but I don't know how much of a good metric that is

[14:27] <masak> but I don't know how far he's got on the part of grok which I consider to be most exciting. we discussed it a fair bit last week, though.

[14:27] <masak> moritz_: yes, same here. and a disturbingly low rate of blog posts.

[14:28] <PerlJam> okay, waiting for 1900utc

[14:31] *** justatheory joined
[14:43] *** macae joined
[14:45] *** justatheory left
[14:49] *** simcop2387 joined
[14:50] *** Exodist joined
[14:57] *** Exodist left
[14:59] *** ejs1 joined
[15:06] *** kidd_ left
[15:08] *** ejs left
[15:09] <moritz_> is Tene's part of the web.pm grant finished?

[15:11] <masak> Tene's part is "help clear away Rakudo/Parrot blocks, and do a pastebin".

[15:11] <masak> as far as I'm concerned, he has done that part admirably.

[15:11] <moritz_> wasn't there a Tags.pm also?

[15:11] <masak> yes.

[15:11] <masak> and LolDispatch.

[15:12] <masak> but those weren't in the grant proposal.

[15:12] *** simcop2387 left
[15:12] <moritz_> ok

[15:12] <masak> still very useful, of course.

[15:14] *** simcop2387 joined
[15:14] *** Sunbeam[Pinged] left
[15:15] *** Sunbeam joined
[15:17] *** hercynium_ left
[15:20] *** donaldh left
[15:23] *** donaldh joined
[15:29] *** nihiliad joined
[15:34] *** justatheory joined
[15:38] *** niksnut left
[15:39] *** kimtaro left
[15:40] *** ruoso joined
[15:48] <Lorn> rakudo has threads?

[15:48] <moritz_> exactly one.

[15:48] <Lorn> moritz_: one? 

[15:48] <masak> but that one is very nice.

[15:49] <masak> speaking of that, what is the plan in Parrot for threading?

[15:49] <Tene> masak: there are a few blockers...

[15:50] <PerlJam> masak: as I've always heard it, the plan is "eventually"  :)

[15:50] <Tene> threads work okay under some restrictive conditions.

[15:50] <masak> ok. I didn't even know whether it was underway, so that's good news to me.

[15:51] <Lorn> does parrot/rakudo threads will be "JNI" like?

[15:51] *** ejs2 joined
[15:52] <Lorn> masak: do you have a example/link for threads in rakudo?

[15:53] <PerlJam> rakudo: async { say "hi" }

[15:53] <masak> Lorn: no, since the thread support is "exactly one" right now, it's hard to provide an example or a link.

[15:53] <p6eval> rakudo d8d064: OUTPUT¬´async not implemented at line 2, near ""‚ê§in Main (src/gen_setting.pm:640)‚ê§¬ª

[15:55] <PerlJam> Lorn: btw, that was an example for you :)

[15:55] <Lorn> PerlJam: :P

[15:56] <Tene> masak: one of the parrot milestones coming up involves threads, but I forget which one.

[15:56] <masak> Tene: ah.

[15:57] <masak> async is, IIRC, a remnant of the STM ideas in Pugs -- and I'm informed that we don't believe in STM as fiercely any more, for whatever reason.

[15:57] *** dakkar left
[15:57] <Tene> https://trac.parrot.org/parrot/ticket/757

[15:58] <Tene> is the big blocker I found.  In parrot you *can* make a thread, but if any classes with non-simple names exist, parrot crashes when trying to clone the interpreter.

[15:58] <masak> Tene: thanks. trac, since about a week ago, only gives me redirect loops. :/

[15:58] <PerlJam> masak: async is still mentioned in the spec.

[15:59] <masak> PerlJam: it is indeed.

[15:59] <masak> but only once in S04, and S17 is still slightly drafty I think.

[15:59] * moritz_ hasn't heard of async{} going away

[15:59] <masak> I'm not saying it has gone away.

[16:00] <masak> I'm just saying it stems from STM, which we don't believe in as fiercely any more.

[16:00] <masak> for whatever reason.

[16:00] <Tene> masak: so, once Parrot gets its threads fixed, I have an async {} implementation I can commit.

[16:00] <PerlJam> so ... ultimately threads in perl still needs some loving.

[16:00] <masak> Tene: cool!

[16:00] *** gbacon left
[16:01] <masak> wow, S17 is definitely drafty.

[16:02] *** Psyche^ joined
[16:02] *** ejs1 left
[16:03] <PerlJam> masak: but async doesn't seem to be greatly related to STM.

[16:04] <moritz_> no, the rollback is

[16:04] <masak> PerlJam: indeed. instead, that seems to be the contend/maybe/defer keywords.

[16:12] <Matt-W> how do I return a value from some inline PIR?

[16:13] <PerlJam> Matt-W: I think it's something like %r = $P0 ... but my memory is very rusty.

[16:13] <moritz_> it is.

[16:13] <moritz_> erm, correct, not rusty ;-)

[16:13] <PerlJam> Matt-W: $P0 would be the value you want to return in my example.

[16:16] <Su-Shee> Tene: Did you read backlog? :)

[16:17] <Matt-W> PerlJam: woo, thanks

[16:17] <Matt-W> had to pull in some stuff from other code

[16:17] *** Patterner left
[16:17] <Matt-W> turns out to return an integer you have to box it into a PMC and return that

[16:17] *** Psyche^ is now known as Patterner

[16:17] <Matt-W> woops

[16:17] <Matt-W> and I returned the wrong one

[16:18] <Matt-W> masak: http://gist.github.com/147817 <- look what I can do!

[16:18] <Matt-W> Now to fit it in somewhere appropriate...

[16:19] <PerlJam> Matt-W: IO somewhere :)

[16:19] <Matt-W> yeah

[16:19] <Matt-W> now according to S32::IO, this stuff lives in a class we don't have yet

[16:19] <Matt-W> and has a very strange interface

[16:20] <Matt-W> Parrot doesn't seem to have a way to call stat and get back everything at once, which is interesting

[16:20] <masak> Matt-W++

[16:21] <Matt-W> Implementing it is much easier than actually putting it somewhere useful

[16:21] <masak> Matt-W: I fear that the current ones are in any-str or some such.

[16:21] <masak> :e, :d and :f, that is.

[16:21] *** yahooooo joined
[16:22] <masak> yahooooo: helooooo!

[16:22] <masak> moritz_: http://perlgeek.de/blog-en/perl-6/musings-on-spectest-chart.writeback -- nice post!

[16:22] <masak> moritz_++

[16:22] <PerlJam> Matt-W: having something working and in the repo is probably more important than having it be exactly correct methinks.

[16:23] <Matt-W> PerlJam: perhaps

[16:23] <PerlJam> er, be in exactly the right place I mean.

[16:23] <masak> moritz_: one spelling nit: s/to some extend/to some extent/

[16:23] <PerlJam> (of course the code should be correct :)

[16:23] <Matt-W> well yes

[16:23] <Matt-W> but what form should it take

[16:23] <PerlJam> Copy perl5

[16:23] <Matt-W> Perl 5 has stat

[16:24] <Matt-W> to implement that I'd have to call Parrot's stat lots of times

[16:24] <PerlJam> Well, I meant as far as the IO heirarchy goes.  Make IO::File or somesuch.

[16:24] <PerlJam> or IO::FSNode if you want to be more S32-ish  

[16:24] <Matt-W> yes that's what S32 says

[16:24] <Matt-W> how do I add a new class to the setting?

[16:25] <moritz_> Matt-W: write a new file, add it to build/Makefile.in

[16:25] <moritz_> git-add it

[16:25] <moritz_> reconfigure, recompile, profit!

[16:25] <Su-Shee> it's profit now? I though open source leads to fame and glory..

[16:26] <Su-Shee> +t. 

[16:26] <Matt-W> that could be considered a form of profit

[16:26] <Matt-W> moritz_: thanks

[16:26] <moritz_> Su-Shee: profit on a meta level

[16:26] <Tene> Su-Shee: yes, I read it.

[16:26] <PerlJam> reconfigure, recompile, karma!

[16:26] <PerlJam> how's that?

[16:27] <Su-Shee> PerlJam: very -do of rakudo :)

[16:27] <PerlJam> wait ... rakudo means "way of karma"?  ;)

[16:27] <Su-Shee> "guaranteed way into karma" ;)

[16:30] *** justatheory left
[16:31] <masak> moritz_: oh, now I see two typos: s/extend/extent/ and s/left to moved/left to move/ http://perlgeek.de/blog-en/perl-6/musings-on-spectest-chart.writeback

[16:32] <Tene> Su-Shee: did you have any remaining questions for me?

[16:32] <moritz_> masak: thanks. Clearly I shouldn't blog at 0.30AM ;-)

[16:33] <masak> moritz_: yes, please keep blogging. even Knuth makes mistakes.

[16:33] * Matt-W isn't happy with this FSNode API

[16:33] <Su-Shee> Tene: no. works perfectly stable here, anyway. :)

[16:33] <Matt-W> still, I can implement it for now so I shall

[16:33] <moritz_> Matt-W: that's because it should be FSM ;-)

[16:33] <Matt-W> FSM?

[16:34] <moritz_> the flying spaghetti monster can fix it all!

[16:34] <Matt-W> yes, but it probably won't

[16:34] <Tene> Su-Shee: I didn't wrap the PIr version of the basic window example, I reimplemented it in Perl 6.

[16:34] <Tene> so it's completely independent of the PIr version

[16:34] <masak> Matt-W: also not happy with it. it feels way overdesigned.

[16:34] <Su-Shee> Tene: aaah.. ok. 

[16:36] <Matt-W> masak: also, it puts file times in a hash

[16:37] <PerlJam> Matt-W: why not go with something like IO::stat for now and let the future sort out that FSNode business?

[16:37] <PerlJam> (or IO::mtime in your case)

[16:38] <Matt-W> that would be my preference

[16:39] <PerlJam> rakudo doesn't currently have any API guarantees does it?

[16:39] *** jan_ joined
[16:39] <TimToady> S03 defines it as IO.m

[16:41] <Matt-W> really

[16:41] <Matt-W> so IO.m('myfile')?

[16:41] <TimToady> no IO('myfile').m

[16:41] <Matt-W> ah

[16:41] <Matt-W> yes of course

[16:41] <PerlJam> or $filename.IO.m

[16:42] <TimToady> or 'myfile'.IO.m

[16:42] <TimToady> yeah

[16:42] <PerlJam> or $filename.IO ~~ :m

[16:42] <TimToady> that too

[16:42] * Matt-W blinks

[16:42] <Matt-W> the last one seems odd

[16:42] <PerlJam> rakudo doesn't grok $filename.IO yet though

[16:45] <TimToady> Matt-W: it just falls out of the definition of Pair smartmatching to abstract out boolean method calls as a form of data

[16:45] <Matt-W> mtimes aren't a boolean thing though

[16:45] <TimToady> and hence, junctionable

[16:45] *** rfordinal joined
[16:46] *** rfordinal left
[16:46] <TimToady> ah yes, :m probably doesn't make much sense then

[16:46] <TimToady> since it would pretty much always be true

[16:47] <Matt-W> unless it happened to be modified exactly on the epoch

[16:47] <TimToady> I'm confusing it with :M :)

[16:47] <TimToady> which doesn't make much sense either

[16:47] <TimToady> so ignore me, and make it .mtime

[16:47] <Matt-W> heh

[16:48] *** justatheory_ joined
[16:48] <Matt-W> so we're missing a few things then I think

[16:48] <TimToady> some mornings I just can't guzzle coffee fast enough to get smart

[16:49] <Matt-W> it's okay, I'm going out soon so I'll stop bugging you about it

[16:49] <Matt-W> what we don't seem to have is the IO('myfile') bit

[16:50] <Matt-W> so I think this is going to take a bit more structural work

[16:50] <TimToady> well, the S32 folks have only been thinking of it as the parent package, but I'd like to move it more in the direction that ingy first proposed it

[16:50] *** alc left
[16:51] <TimToady> where IO is an abstraction of potential IO

[16:51] <TimToady> but opens lazily on demand and with a mode appropriate to its usage

[16:52] <TimToady> or it the case of a stat, it might never open at all

[16:52] <TimToady> or maybe it opens it to guarantee consistent fstat semantics instead

[16:53] <Matt-W> aah

[16:53] <TimToady> in any case, someday I'd like to have a file copy look like IO($in) ==> IO($out)

[16:53] *** ruoso left
[16:55] <PerlJam> TimToady++

[16:55] <TimToady> ingy++

[16:55] <TimToady> the P5 version of IO tries to do a little too much, probably, but I like the basic abstraction idea

[16:55] <PerlJam> me too

[16:56] <TimToady> every now and then I take a pass through IO.pod and simplify.  Maybe I'm overdue for another pass :)

[16:56] <Matt-W> maybe :)

[16:56] <Matt-W> I'd just like some framework I can implement things in :)

[16:57] <TimToady> or maybe I should get ingy to simplify it :)

[16:57] <Matt-W> delegation is the soul of good management

[16:59] *** r696 left
[16:59] *** Patterner left
[16:59] *** pmurias joined
[17:00] *** Psyche^ joined
[17:00] *** Psyche^ is now known as Patterner

[17:05] *** fm_ joined
[17:05] <Matt-W> &

[17:06] *** fm_ left
[17:06] *** payload joined
[17:10] <Tene> pmichaud: I ran into a rakudo issue last night...

[17:10] <pmichaud> Tene: ouch.

[17:10] <pmichaud> (Good afternoon, #perl6)

[17:11] <Tene> pmichaud: I got my toolkit wrapper working, but to call the toolkit_init function, I needed access to the unmodified argv.

[17:11] <Tene> to pass to NCI::Util's call_toolkit_init

[17:11] <pmichaud> I don't understand "unmodified argv"

[17:12] <Tene> okay, 'sec

[17:12] <Tene> src/builtins/guts.pir +390

[17:12] <Tene> !UNIT_START

[17:13] <Tene> it has .param pmc args, which gets modified, and then stuffed into @*ARGS

[17:13] <Tene> I needed access to args *before* it was modified.

[17:14] <PerlJam> rakudo:  my $x = 0;  $x++;  $x.++;

[17:14] <p6eval> rakudo d8d064: OUTPUT¬´Statement not terminated properly at line 2, near ".++;"‚ê§in Main (src/gen_setting.pm:3340)‚ê§¬ª

[17:14] <Tene> my workaround patch to demonstrate it was to set_hll_global '$REALARGV', args before modifying it.

[17:15] <pmichaud> I don't understand what part of @ARGS isn't working for you.  the args list isn't significantly modified.

[17:15] <pmichaud> only the first element (the script name) is removed.

[17:18] <Tene> I'm not sure either.  The NCI argv stuff is a little mysterious to me right now.

[17:20] <Tene> Hmm, maybe you're right...

[17:21] <Tene> ah, it might have been the shifting off $PROGRAM_NAME

[17:21] <Tene> maybe if I pass that too...

[17:22] *** ejs2 left
[17:23] *** rfordinal joined
[17:27] <Tene> pmichaud: okay, nevermind. :)

[17:29] <Tene> pmichaud: did you see this: http://gist.github.com/147853 ?

[17:30] *** kane_ left
[17:30] *** kst left
[17:31] *** kst joined
[17:33] *** SmokeMachine joined
[17:35] <pmichaud> Tene: no, hadn't seen that.  Looks very cool.

[17:38] *** FCO left
[17:39] *** macae left
[17:48] <payload> line 5: my $bg = $win.'widget_add'('bg', 1.0, 1.0);

[17:48] <payload> _'widget_add'_

[17:48] <payload> ?

[17:48] <Tene> Yes.

[17:48] <Tene> erm... typo

[17:48] <Tene> I was translating from PIR.

[17:49] <payload> what is this? ive read GTK+ today somewhere?

[17:50] <Tene> It's elementary, one of the Enlightenment libraries.

[17:50] <payload> ah cool

[17:50] <Tene> Not particularly stable or convenient.  GTK might be a more-popular choice.

[17:51] *** gbacon joined
[17:54] <lisppaste3> TimToady pasted "Tene: perhaps formatted more like this" at http://paste.lisp.org/display/83642

[17:56] <[particle]> that looks sixy

[17:56] *** kane_ joined
[17:56] <Tene> Nice. :)

[17:56] <pmichaud> o/ "I'm too sixy for my code..." o/

[17:56] <pmichaud> "Perl 6 is one sixy language."

[17:57] <Su-Shee> new karaoke version for developers.

[17:58] <REPLeffect> that's an almost .. um ... scary thought :D

[18:01] <pmichaud> afk, lunch

[18:02] *** SamuraiJack left
[18:06] <szabgab> how can I find out the directory of the currently running script ?

[18:06] <szabgab> sg like FindBin::Bin ?

[18:07] <szabgab> or is there a basename() I can run on $*PROGRAM_NAME ?

[18:10] *** kate21de joined
[18:17] *** icwiener left
[18:18] <payload> does substr only has the parameters    start   and   count ?

[18:19] *** icwiener joined
[18:19] <payload> a named parameter   end   would be nice i  think

[18:25] *** synth joined
[18:28] *** kst left
[18:28] *** kst joined
[18:28] *** kane___ joined
[18:28] *** kane_ left
[18:31] *** hercynium joined
[18:31] *** SmokeMachine left
[18:36] <payload> why does not every error message has a line number? it's often disturbing

[18:36] <payload> what do i have to do to make these error messages more helpful? ^^

[18:42] <PerlJam> some errors are generated by parrot, some by rakudo (for one thing)

[18:44] *** SmokeMachine joined
[18:45] *** FurnaceBoy joined
[18:45] *** cdarroch joined
[18:50] <masak> payload: substr has an '$end' parameter. see S32/Str

[18:50] <masak> #p6s in 10.

[18:52] <payload> oh yes... found. ^^

[18:57] *** FCO joined
[18:58] *** mikehh_ joined
[19:01] *** SmokeMachine left
[19:02] <masak> p6s now -- provided someone besides me is here to participate in the meeting... :)

[19:02] *** mikehh__ joined
[19:07] *** jrtayloriv joined
[19:13] *** mikehh left
[19:15] *** mikehh_ left
[19:20] *** donaldh left
[19:21] *** donaldh joined
[19:25] *** SamuraiJack joined
[19:27] *** justatheory_ left
[19:33] *** sri_kraih_ joined
[19:34] *** nbrown left
[19:34] *** eternaleye joined
[19:37] *** jrtayloriv left
[19:40] *** hercynium left
[19:41] *** justatheory joined
[19:44] <takadonet> meeting? where?

[19:44] <masak> takadonet: on #perl6-soc

[19:45] <takadonet> can I listen in?

[19:45] <masak> oh, absolutely.

[19:49] *** sri_kraih left
[19:51] *** huf joined
[19:54] *** gbacon left
[19:55] *** sri_kraih joined
[19:56] *** justatheory left
[19:57] *** gbacon joined
[20:01] <pmichaud> Test #2 in t/spec/S32-hash/invert.t isn't a valid test as written (assumes order of results)

[20:02] <masak> we should implement eqv for hashes. :)

[20:02] <pmichaud> yes, but that still wouldn't help this case :-)

[20:02] <pmichaud> (it's a list)

[20:02] <masak> oh :)

[20:04] *** explorer joined
[20:11] *** sri_kraih_ left
[20:12] *** Su-Shee left
[20:15] <StephenPollei> std: [+]

[20:15] <p6eval> std 27566: OUTPUT¬´ok 00:02 36m‚ê§¬ª

[20:15] <StephenPollei> std: >>.

[20:15] <p6eval> std 27566: OUTPUT¬´##### PARSE FAILED #####‚ê§Can't understand next input--giving up at /tmp/AWEjEBRHSo line 1:‚ê§------> [32m[31m>>.[0m‚ê§    expecting any of:‚ê§  prefix or noun‚ê§   statement end‚ê§    statement list‚ê§   whitespace‚ê§FAILED 00:02 36m‚ê§¬ª

[20:16] *** icwiener_ joined
[20:16] *** icwiener left
[20:16] *** kst left
[20:17] *** kst joined
[20:20] *** rfordinal left
[20:28] *** hercynium joined
[20:33] <colomon> Any idea what might be wrong with the line $out.print "ISO-10303-21;\n"; ?

[20:34] <pmichaud> needs a colon or parens

[20:34] <pmichaud> $.out.print("ISO-10303-21;\n");

[20:34] <pmichaud> $out.print: "ISO-10303-21;\n";

[20:35] <pmichaud> std:  $*OUT.print "ISO-10303-21;\n";

[20:35] <p6eval> std 27566: OUTPUT¬´##### PARSE FAILED #####‚ê§Syntax error (two terms in a row?) at /tmp/8xXrpABTCl line 1:‚ê§------> [32m$*OUT.print [31m"ISO-10303-21;\n";[0m‚ê§    expecting any of:‚ê§   infix or meta-infix‚ê§      infix stopper‚ê§    standard stopper‚ê§ statement modifier loop‚ê§  terminator‚ê§FAILED 00:02

[20:35] <p6eval> ..37m‚ê§¬ª

[20:35] <moritz_> pmichaud: so it should be is_deeply {%h.invert}, {b => 'a', d => 'c'}, right?

[20:36] <pmichaud> moritz_: that might work

[20:36] <pmichaud> I was thinking to test the sorted list

[20:36] <pmichaud> %h.invert.sort

[20:36] <moritz_> that's what the later tests do

[20:36] <moritz_> pmichaud: I don't care either way - should I, or will you correct it?

[20:37] <pmichaud> well, it's failing in rakudo with Parrot trunk, so it needs fixing.

[20:37] <moritz_> ok, I'll update, test and commit

[20:37] <pmichaud> I'm fine with the is_deeply approach, I think.

[20:37] <colomon> pmichaud: yup, parens work.  Thanks!  (colon is deeply surprising to me...)

[20:45] <dalek> rakudo: dfe8518 | pmichaud++ | build/PARROT_REVISION:

[20:45] <dalek> rakudo: Bump PARROT_REVISION to after the keys-branch-merge for more testing.

[20:45] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/dfe85183c5b9314152432b8e05a71fb3853e9d43

[20:47] <TimToady> it's a variant of the invocant colon in print $*OUT: "..."

[20:47] *** justatheory joined
[20:47] *** justatheory left
[20:48] *** justatheory joined
[20:49] <pugs_svn> r27567 | moritz++ | [t/spec] test relied on hash order, pmichaud++, bacek++

[20:50] *** molaf joined
[20:52] <colomon> Is :i on regexes still not implemented in rakudo?

[20:53] <masak> rakudo: say "FOO" ~~ m:i/foo/

[20:53] <p6eval> rakudo d8d064: OUTPUT¬´sh: ./perl6: No such file or directory‚ê§¬ª

[20:53] <moritz_> it is, but only on the inside

[20:53] <moritz_> "FOO" ~~ m/:i foo/

[20:54] <colomon> is putting it after m/foo/:i legal syntax?  STD.pm let it by...

[20:55] <moritz_> no

[20:55] <TimToady> it would try to apply the :i to whatever operator preceded the m//

[20:55] <colomon> rakudo: say "FOO" ~~ m/:i foo/

[20:55] <p6eval> rakudo dfe851: OUTPUT¬´FOO‚ê§¬ª

[20:55] <colomon> ah.

[20:55] <colomon> Thanks!

[20:55] <PerlJam> std: m/foo/:i

[20:55] <p6eval> std 27566: OUTPUT¬´ok 00:02 36m‚ê§¬ª

[20:55] <PerlJam> interesting

[20:55] <TimToady> is arguably a bug

[20:56] <[particle]> my dog $rx; $rx ~~ Dog :i;

[20:56] <TimToady> it doesn't check the top of the term stack to see if it's really an operator

[20:57] <[particle]> anyway, seems a  bug to me, whitespace wanted after the closing delimiter on a regex, at the least

[20:58] <pugs_svn> r27568 | moritz++ | [perl6-projects.org] re-add note about source of file. Also add an

[20:58] <pugs_svn> r27568 | moritz++ | authentication header for google webmaster tools to get some statistics

[21:00] *** payload left
[21:00] <sjohnson> suggestion for Perl 6:  possibility of string interpolation for CONSTANTS somehow?

[21:02] <masak> rakudo: constant a = 4; say "{a}"

[21:02] <p6eval> rakudo dfe851: OUTPUT¬´4‚ê§¬ª

[21:02] <masak> sjohnson: like that? :)

[21:02] <sjohnson> heheh

[21:03] <sjohnson> like that :)

[21:03] <masak> sjohnson: sorry, we disappoint you all the time by already having solutions... :)

[21:03] <moritz_> my $a is ro = 5; say "foo $a";

[21:06] *** masak left
[21:07] <sjohnson> perl 6.. the language of kings

[21:12] *** hercynium_ joined
[21:12] *** as joined
[21:14] *** SamuraiJack left
[21:18] *** hercynium_ left
[21:21] *** payload joined
[21:25] *** hercynium_ joined
[21:32] *** pmurias left
[21:34] *** molaf left
[21:35] *** iblechbot left
[21:38] *** hercynium left
[21:41] *** clintongormley left
[21:47] *** Limbic_Region joined
[21:50] *** simcop2387 left
[21:50] *** simcop2387 joined
[21:53] <moritz_> rakudo: say { a => 1, b => 2 } eqv { b => 2, a => 1 }

[21:53] <p6eval> rakudo dfe851: OUTPUT¬´infix:<eqv> is only implemented for certain special cases yet‚ê§in sub infix:eqv (src/gen_setting.pm:1450)‚ê§Null PMC access in get_pmc_keyed()‚ê§current instr.: 'perl6;Perl6;Compiler;eval' pc 288503 (src/gen_actions.pir:24176) (src/gen_setting.pm:3340)‚ê§¬ª

[21:55] *** M_o_C left
[21:59] <pugs_svn> r27569 | moritz++ | [t/spec] fix and extend %h1 eqv %h2 tests

[22:02] <dalek> rakudo: 10843c7 | moritz++ | src/setting/Operators.pm:

[22:02] <dalek> rakudo: infix:<eqv> for hashes

[22:02] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/10843c757f36fd2981fd88ad38b2985cbfb91627

[22:09] *** skids left
[22:12] *** as left
[22:16] *** icwiener_ left
[22:20] *** bucky joined
[22:21] *** athomason joined
[22:23] *** rfordinal joined
[22:30] <literal> @tell masak gah, sorry I couldn't make it tonight :(

[22:30] <lambdabot> Consider it noted.

[22:31] *** athomason left
[22:31] *** athomason joined
[22:33] <moritz_> rakudo: say {} eqv {}

[22:33] <p6eval> rakudo dfe851: OUTPUT¬´infix:<eqv> is only implemented for certain special cases yet‚ê§in sub infix:eqv (src/gen_setting.pm:1450)‚ê§Null PMC access in get_pmc_keyed()‚ê§current instr.: 'perl6;Perl6;Compiler;eval' pc 288503 (src/gen_actions.pir:24176) (src/gen_setting.pm:3340)‚ê§¬ª

[22:37] *** Whiteknight joined
[22:37] <dalek> rakudo: 9a7a1dc | moritz++ | src/setting/Operators.pm:

[22:37] <dalek> rakudo: two identical objects are also equivalent

[22:37] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/9a7a1dce066c4136594693b44e1d220795c7cc88

[22:39] *** rfordinal left
[22:41] *** justatheory_ joined
[22:42] *** nbrown joined
[22:46] *** justatheory left
[22:48] *** nihiliad left
[22:50] *** kane_ joined
[22:50] *** missingthepoint joined
[22:54] *** justatheory_ left
[22:55] *** Khisanth left
[22:59] <missingthepoint> http://www.perlcabal.org/syn/: "updated every one hour with the latest Synopses and Pugs test suite from their respective SVN repositories"

[22:59] *** Khisanth joined
[23:00] *** ruoso joined
[23:00] <literal> they're both kept in the Pugs repository now

[23:00] <missingthepoint> that's what I thought

[23:05] *** kane___ left
[23:07] *** kane___ joined
[23:08] <pugs_svn> r27570 | bpetering++ | [docs/feather/syn_index.html] Change incorrect/misleading dual repos statement

[23:12] *** kane_ left
[23:18] *** jrtayloriv joined
[23:20] *** donaldh left
[23:21] *** donaldh joined
[23:31] *** DemoFreak left
[23:33] *** jrtayloriv left
[23:44] *** cj joined
[23:44] <cj> seen diakopter

[23:44] <cj> seen diakopter?

[23:46] <bucky> hi cj

[23:55] *** davef left
[23:56] *** jrtayloriv joined
[23:56] *** jrtayloriv left
