[00:16] *** icwiener left
[00:17] *** eternaleye left
[00:29] *** jhuni joined
[00:37] *** DemoFreak left
[00:37] *** spx2_ left
[00:41] *** eternaleye joined
[00:43] *** spx2 joined
[00:48] *** spx2_ joined
[00:53] *** spx2 left
[00:54] *** timebomb left
[01:00] *** |jedai| left
[01:01] *** |jedai| joined
[01:02] *** spx2 joined
[01:03] *** spx2_ left
[01:17] *** Chillance left
[01:21] *** mj41 joined
[01:24] *** shinobi-cl_ left
[01:26] *** |jedai| left
[01:27] *** |jedai| joined
[01:27] *** spx2_ joined
[01:37] <Whiteknight> rakudo: my $x = { say 5; }; $x();

[01:37] <p6eval> rakudo 36267: OUTPUT«5␤»

[01:37] <Whiteknight> rakudo: my $x = -> $a { say $a; }; $x("hello world");

[01:37] <p6eval> rakudo 36267: OUTPUT«hello world␤»

[01:38] <Whiteknight> always happy when my code examples not only parse, but actually produce the right output

[01:39] *** mj41_ left
[01:40] *** shinobi-cl_ joined
[01:42] *** spx2 left
[01:59] *** c1sung joined
[02:02] *** jfredett joined
[02:02] <shinobi-cl_> perl6: my %Example ; push %Example{"a"}, 1, 2, 3; say %Example{"a"}; 

[02:02] <p6eval> pugs: OUTPUT«1 2 3␤»

[02:02] <p6eval> ..rakudo 36267: OUTPUT«No applicable methods.␤␤current instr.: '_block14' pc 104 (EVAL_16:50)␤»

[02:02] <p6eval> ..elf 25169: OUTPUT«␤»

[02:03] *** alester joined
[02:03] *** shinobi-cl_ left
[02:11] *** |jedai| left
[02:12] *** |jedai| joined
[02:19] <s1n> hmm, does rakudo from github currently build for anyone else?

[02:19] <s1n> i'm getting PARROT_FLOATVAL_INF_NEGATIVE and POSITIVE errors and don't see it defined in parrot anymore

[02:27] *** aindilis left
[02:28] *** aindilis joined
[02:35] *** spx2_ left
[02:36] <s1n> n/m, outdated repo

[02:38] *** spx2 joined
[02:43] *** TheOrz joined
[02:58] *** spx2 left
[03:01] *** spx2 joined
[03:15] *** Whiteknight left
[03:19] *** spx2 left
[03:22] *** spx2 joined
[03:23] *** alester left
[03:28] <pugs_svn> r25170 | diakopter++ | deleting cruft.

[03:28] *** justatheory left
[03:37] *** justatheory joined
[03:38] *** justatheory left
[03:38] *** justatheory joined
[03:38] *** justatheory left
[03:50] *** |jedai| left
[03:51] *** |jedai| joined
[03:53] *** mberends joined
[03:54] *** gravity left
[03:55] *** meppuru joined
[03:56] *** meppl left
[04:06] *** alexn_org left
[04:15] *** Sepheebear joined
[04:17] *** meppuru is now known as meppl

[04:21] *** spx2_ joined
[04:29] *** spx2 left
[04:36] *** spx2 joined
[04:40] *** km2 left
[04:48] *** alester joined
[04:51] *** |jedai| left
[04:52] *** |jedai| joined
[04:52] *** spx2_ left
[04:55] *** |jedai| left
[04:55] *** |jedai| joined
[05:11] *** scrottie joined
[05:16] *** Tene_ joined
[05:26] <s1n> moritz_: i think you can close rt #59372, i can't seem to reproduce it anymore

[05:27] *** Tene left
[05:27] *** justatheory joined
[05:28] *** justatheory left
[05:32] <s1n> moritz_: while you're at it, close rt #60510 too

[05:43] *** spx2 left
[05:43] *** spx2 joined
[05:49] *** spx2_ joined
[05:50] <mberends> is anyone with OS X lurking here right now?

[05:56] *** jrockway joined
[05:59] <mberends> on OSX, what does "perl6 -e 'say %*VM<config><osname>'" print? osx?

[06:00] *** spx2 left
[06:01] *** TheOrz left
[06:01] *** |jedai| left
[06:02] *** |jedai| joined
[06:04] *** maerzhase joined
[06:05] *** |jedai| left
[06:05] *** |jedai| joined
[06:09] *** TheOrz joined
[06:15] *** meppl left
[06:34] *** spx2 joined
[06:35] *** Sepheebear left
[06:39] *** maerzhase left
[06:47] *** spx2_ left
[06:52] <moritz_> s1n: closed, thanks

[06:55] *** |jedai| left
[06:56] *** |jedai| joined
[06:57] *** Sepheebear joined
[07:04] *** khatar left
[07:09] *** ayrnieu left
[07:10] *** ayrnieu joined
[07:14] *** maerzhase joined
[07:19] *** alester left
[07:27] *** eternaleye_ joined
[07:27] *** eternaleye left
[07:33] *** iblechbot joined
[07:35] *** |jedai| left
[07:35] *** |jedai| joined
[07:41] *** eternaleye joined
[07:42] *** eternaleye_ left
[07:48] *** Casan left
[08:03] *** timebomb joined
[08:05] *** DemoFreak joined
[08:06] *** ayrnieu left
[08:07] *** ayrnieu joined
[08:08] *** iblechbot left
[08:10] *** jhuni left
[08:18] *** ashizawa joined
[08:26] <szabgab_> I saw in the docs the way to open directory is   S16-io.pod:  my $dir = IO::Dir::open('.');

[08:27] <szabgab_> has this been implemented in Rakudo ?

[08:29] <szabgab_> in other words, how can I list all the files in a directory ?

[08:30] <moritz_> I'd be surprised if you could

[08:31] <moritz_> run('ls > tempfile');

[08:32] <szabgab_> tx

[08:38] <szabgab_> regarding open() for files, is the normal behavior now to throw an exception if it cannot open the file?

[08:39] <moritz_> the specced behaviour is to fail(), which throws an exception only if 'use fatal;' is in scope

[08:43] *** maerzhase left
[08:45] *** Sepheebear left
[09:02] *** ejs joined
[09:10] *** maerzhase joined
[09:10] *** |jedai| left
[09:11] *** |jedai| joined
[09:11] <szabgab_> std: my $line = "bla"; if ($line ~~ /x/ ff $line ~~ /y/) {say "in" }

[09:12] <p6eval> std 25170: OUTPUT«00:04 34m␤»

[09:12] <szabgab_> rakudo: my $line = "bla"; if ($line ~~ /x/ ff $line ~~ /y/) {say "in" }

[09:12] <p6eval> rakudo 36276: OUTPUT«Statement not terminated properly at line 1, near "ff $line ~"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[09:14] *** maerzhase1 joined
[09:16] *** maerzhase1 left
[09:16] *** maerzhase1 joined
[09:28] *** maerzhase left
[09:36] *** |jedai| left
[09:37] *** |jedai| joined
[09:43] *** maerzhase1 left
[09:43] *** maerzhase joined
[09:45] *** DemoFreak left
[09:46] *** meppl joined
[10:12] *** masak joined
[10:25] *** maerzhase left
[10:25] *** maerzhase joined
[10:37] *** yves joined
[10:39] <mberends> masak: hi

[10:39] <masak> mberends: greetings

[10:40] <moritz_> hi there

[10:40] <masak> all the people starting with 'm' are here.

[10:40] <masak> where are the others?

[10:41] <mberends> Hmmm

[10:41] <mberends> what does your computer say for perl6 -e'say %*VM<config><osname>' ?

[10:41] <mberends> is it osx ?

[10:41] <Matt-W> Is it just that people beginning with M are more likely to be in Europe?

[10:42] <masak> mberends: darwin

[10:43] <moritz_> masak: yesterday night TimToady tried to @tell you something, but ENOλBOT

[10:43] <masak> mberends: are you slipping into the dangerous territory of OS detection? :)

[10:43] <masak> moritz_: ok, will backlog.

[10:43] <mberends> thanks, that goes into my Makefile.p6

[10:43] <masak> mberends: just make sure the fallback is sensible. :)

[10:44] <Matt-W> surely the default os is windows 95 :)

[10:44] <mberends> the fallback is my local OS :)

[10:45] <masak> lunch &

[10:47] *** |jedai| left
[10:48] <szabgab_> masak: when you are back from lunch, how should I reuse parts of November in some other application ?

[10:48] <szabgab_> right now I am writing a static web site so I'd like to reuse HTML::Template

[10:49] <szabgab_> for now I start by copy-ing the required files from the November source tree to my directory

[10:49] *** xinming_ joined
[10:51] <masak> szabgab_: not technically back from lunch, but short reply:

[10:52] <masak> HTML::Template is being obsoleted in the long run. we're starting a Web project, whose objective is re-use. in the meantime, feel free to use whatever you want. any feedback to prevent code drift and increase collaboration is appreciated.

[10:52] * masak recloaks

[10:54] <szabgab_> and why do you drop HTML::Template ?

[10:54] <moritz_> if "they" drop it, I'll adopt it

[10:55] <szabgab_> can modules already loaded from other directories (is @INC already in place ?) or only from . ?

[10:57] <moritz_> you can BEGIN { @*INC.push('dir') }

[10:57] <szabgab_> oh and just to catch up with the changes in last week, I see the parrot SVN repo moved, what about Rakudo, is it still in the languages/perl6 subdir of parrot ?

[10:58] <szabgab_> moritz_: oh, that's better than copying the files

[10:58] <szabgab_> I could not compile Dispatcher.pm

[10:59] <moritz_> szabgab_: it has moved to git (or so I think), but there hasn't been an announcement yet

[11:00] *** Maghnus joined
[11:03] *** |Jedai| joined
[11:06] *** hercynium joined
[11:07] *** maerzhase left
[11:15] *** maerzhase joined
[11:19] <masak> szabgab_: we'll drop HTML::Template because November is XML-based, so a text-based templating system feels both dangerous and wasteful.

[11:19] *** iblechbot joined
[11:24] <masak> TimToady: re a class lying to itself: maybe I'm using 'handles' for the wrong thing then. I have a class hierarchy in which plenty of delegation is made to a central class, and I found it made things a lot shorter and more convenient to use 'handles'. however, only the class itself uses those delegated methods, and it even feels a bit odd to be exposing them. hence the question about 'handles' and private methods.

[11:27] *** |Jedai| left
[11:30] <moritz_> if you use 'handles' excessively, can't you use roles + composition instead?

[11:31] <masak> moritz_: no, because part of the reason I use it is so that I can have separation of concerns.

[11:31] *** Jedai left
[11:31] <masak> moritz_: https://github.com/masak/druid/

[11:32] <masak> Druid::Game is in the middle, Druid::View and Druid::Player depend on it.

[11:32] <masak> but both the latter are interested in things like board size and the position of pieces, information found in the former.

[11:33] <masak> uh, I'm consciously blurring the object/class distinction in the above, as is often done.

[11:35] *** Jedai joined
[11:35] <masak> anyway, doing roles+composition would be counter to the idea that Druid::Game holds all the important information (model), while surrounding classes (views) query it for things.

[11:43] <szabgab_> is there an .ini or .conf file reader implemented in Perl 6 ?

[11:44] <masak> szabgab_: not to my knowledge.

[11:44] <masak> we usually take the eval(slurp) route.

[11:44] <Matt-W> eww

[11:44] <masak> suboptimal, but fast.

[11:45] <Matt-W> that's not very safe

[11:45] <masak> Matt-W: that's correct.

[11:45] <masak> it's generally advised against.

[11:45] <Matt-W> a handy stopgap until you implement something better though

[11:45] <szabgab_> but then you assume the file format to be perl 6 , not the "standard" [section]   and key = value lines

[11:45] <masak> we figure that we're allowed to make such transgressions if we put up big warning signs and produce working code :)

[11:45] <Matt-W> lol

[11:45] <Matt-W> and replace it with a proper configuration file later?

[11:45] <masak> aye.

[11:46] <Matt-W> you're forgiven

[11:46] <masak> szabgab_: right.

[11:46] <masak> szabgab_: writing a grammar for that ought to be a pleasant task.

[11:46] <szabgab_> oh, so now I should learn how to that, :-),  

[11:46] <szabgab_> lots of yaks to be shaven here

[11:48] <masak> szabgab_: if you're here for an hour or so, I can walk you through it.

[11:48] <masak> it should be really easy.

[11:48] <masak> that's the nice thing about Perl 6 grammars.

[11:49] <masak> rakudo: grammar Conf { regex TOP { <heading> }; regex heading { ^^ '[' <ident> ']' $$ }; regex ident { \w+ } }; say '[test]' ~~ /<Conf::TOP>/

[11:49] <p6eval> rakudo 36277: OUTPUT«[test]␤»

[11:50] <masak> szabgab_: there you go, just to get you started :)

[11:50] <masak> now, go forth and spread the Perl 6 joy in the world.

[11:51] <szabgab_> masak: I want my code work first and start creating the web site

[11:52] <szabgab_> and I'd like to make it happen today

[11:52] <szabgab_> I can always improve tomorrow :-)

[11:52] <masak> szabgab_: go with eval(slurp) so far, then.

[11:52] <masak> or no conf file at all.

[12:05] <pugs_svn> r25171 | masak++ | [S12] fixed minor typo in class name

[12:05] <pugs_svn> r25172 | masak++ | [S16] added :async flag to getc

[12:05] *** TheOrz left
[12:05] <Matt-W> masak: I spent a while the other day going mad trying to write a grammar

[12:06] <Matt-W> masak: I may need to ask many questions about it at some point

[12:06] <masak> Matt-W: I'd be glad to help.

[12:06] <masak> Matt-W: writing grammars is supposed to be rewarding, not frustrating. you're doing something wrong. :P

[12:07] <Matt-W> I know!

[12:07] <Matt-W> I think it's just some basic understanding about whitespace handling and things like that

[12:07] <Matt-W> if I can get my head around all that, I should be fine

[12:07] <masak> aye.

[12:07] <Matt-W> Then I shall just kick myself over using _something_ to denote emphasis instead of some sort of matching brackets

[12:07] <masak> to be honest, I haven't grokked that either.

[12:08] <Matt-W> lunch &

[12:12] *** ashizawa left
[12:16] *** donaldh joined
[12:21] <jnthn> hi from Bulgaria

[12:21] *** |Jedai| joined
[12:21] <masak> jnthn: say 'hi' back :)

[12:24] <jnthn> :)

[12:24] <jnthn> Flying home tomorrow.

[12:24] <jnthn> And then it'll be back to Rakudo hacking. :-)

[12:27] <masak> jnthn: it will be nice to have you back. when both you and pmichaud are absent, reality feels strangely hollow and unfulfilling.

[12:28] <masak> plus, I don't know who to complain to. :P

[12:29] <jnthn> RT? ;-)

[12:30] <masak> jnthn: come on, I've done that to death. :P

[12:31] <masak> I think I have 150 open bugs or some such reported by me.

[12:31] <masak> new/open

[12:31] <jnthn> That used to be our entire queue size! :-|

[12:31] <masak> aye.

[12:31] * jnthn will try to reduce the bug count using his Rakudo Days.

[12:32] *** maerzhase1 joined
[12:32] <masak> jnthn++

[12:32] <jnthn> OK, so what's the git equivalent to svn up?

[12:32] <jnthn> git pull?

[12:33] *** maerzhase left
[12:33] <masak> jnthn: basically, yes.

[12:33] <masak> seems I have only 114 new/open bugs. :)

[12:33] <masak> jnthn: pull = fetch + merge

[12:34] <masak> http://git.or.cz/gitwiki/GitFaq#head-4740bcc3bab81a8b3f11258fdab5d7c853acf5a7

[12:34] *** |Jedai| left
[12:34] *** |Jedai| joined
[12:36] *** maerzhase1 left
[12:36] *** maerzhase joined
[12:38] *** maerzhase left
[12:38] *** maerzhase joined
[12:39] *** maerzhase left
[12:42] *** maerzhase joined
[12:43] *** maerzhase1 joined
[12:46] *** maerzhase1 left
[12:47] *** maerzhase1 joined
[12:47] *** maerzhase left
[12:48] *** maerzhase joined
[12:48] *** maerzhase1 left
[12:57] *** _Jedai_ joined
[13:07] *** maerzhase left
[13:07] *** TheOrz joined
[13:12] <mberends> masak: down the slippery slope, what does darwin show for 'ps o args' ?

[13:15] <masak> mberends: it shows something I don't understand. what is it I'm looking at?

[13:17] <mberends> the 'o' option of ps does user defined columns of output. On GNU/Linux it gives 'COMMAND'

[13:18] <mberends> it's a little used section of 'man ps'

[13:18] <masak> I see.

[13:18] <masak> well, it does work here.

[13:18] <masak> but it shows 'ARGS' and then some empty lines.

[13:19] <mberends> oh dear, empty lines not good

[13:19] <masak> they seem to correspond to the command '-bash' in full ps.

[13:20] <mberends> that's not the same as GNU. I'm trying to replace your Perl 5 scaffolding with Perl 6, and make it autodetect differences between your OS and mine.

[13:21] <mberends> it looks like 'o' is a valid option for you, but what follows must differ.

[13:22] <masak> aye.

[13:23] <mberends> could you peruse 'man ps' for me and summarize the available arguments after the 'o' option? I would like to read the full command line, including its arguments. The purpose is to detect the paths used by parrot and perl6.pbc

[13:24] *** |Jedai| left
[13:24] *** |Jedai| joined
[13:25] <masak> mberends: http://gist.github.com/56912

[13:27] <mberends> brilliant, standby for my work in progress

[13:29] <mberends> masak: http://gist.github.com/56913

[13:29] *** donaldh left
[13:30] *** ruoso joined
[13:32] *** _Jedai_ left
[13:35] *** _Jedai_ joined
[13:36] <masak> mberends: nice.

[13:36] <masak> for those first debug statements, you might want to consider a 'given %*VM<config> { ... }' block

[13:37] <masak> oh! you did that later, I see.

[13:38] <mberends> yes, the first lines are deprecated, only retained for possible copy/pasting

[13:38] <mberends> you have to start somewhere...

[13:38] <masak> mberends: why do you need to find yourself in the ps listing?

[13:39] <mberends> 13:23 : to get the possibly independent parrot and perl6.pbc directories

[13:39] <masak> not sure I understand.

[13:39] <masak> ps shows processes, not directories :)

[13:40] <masak> just get people to set the damn $PARROT_DIR env variable. :)

[13:40] <mberends> ah, but the right ps incantation will show the executable filenames and args. Works a treat on Linux.

[13:40] <masak> $ perl6 -e 'say @*ARGS' 1 2 3

[13:40] <masak> 123

[13:41] <masak> wot's wrong with dat?

[13:42] <masak> mberends: no, I confess to being utterly confused as to what information it is you are trying to extract from ps.

[13:42] <literal> masak: nothing?

[13:42] <masak> literal: exactly!

[13:43] <mberends> this approach was: don't give people unnecessary work. bearing in mind that some people want to use 'perl6' and others 'parrot perl6.pbc', let them choose and then detect how the Makefile.p6 was invoked.

[13:43] <literal> does it put spaces between the numbers if you do say ~@*ARGS ?

[13:43] <masak> literal: yep.

[13:43] <literal> cool

[13:43] * jnthn wondes why they'd do different things...

[13:44] <masak> mberends: I'd say detect as much as possible (via $PATH and $PARROT_DIR or whatever) but don't go overboard trying to please.

[13:44] <masak> sometimes what the user needs is a good slap-around and a message telling them to set their environment variables.

[13:44] <mberends> it already works for me, I was just trying to get it to work for you too.

[13:45] <mberends> being a good neighbour an' all that

[13:45] <masak> yes, but why do you have to mix 'ps' into it all?

[13:45] <masak> I just don't get it.

[13:45] <masak> I mean, given that ps apparently exists in a multitude of flavours.

[13:46] <masak> oh well, I guess we just have different priorities. you seem to be willing to sacrifice platform independence for that little extra service.

[13:49] *** |Jedai| left
[13:50] *** |Jedai| joined
[13:53] *** _Jedai_ left
[13:58] <ruoso> masak, I've just replied to your last commit message...

[13:58] <masak> ruoso: the :async one?

[13:58] <ruoso> yes

[13:58] * masak reads

[13:59] <ruoso> I agree with leon that it should be called non-blocking instead

[13:59] <ruoso> but more importantly, I think being blocking-or-not is an attribute of the IO object,

[13:59] <ruoso> not a parameter of that specific io operation

[13:59] <masak> yes, I agree with you both about the name.

[14:00] <masak> ruoso: my main objective was to make sure the functionality is in S16.

[14:00] <masak> I'm not particularly attached to the name of the parameter or to its exact location.

[14:00] <ruoso> so, role IO { has $.blocking; }

[14:01] <masak> has Bool $.blocking;

[14:02] <masak> anyway, I don't have the time to make elaborate changes right now. feel free to change it any way you please.

[14:04] * ruoso out-of-time

[14:05] <masak> I'm sure someone will take pity on the change sooner or later.

[14:06] *** meppl left
[14:06] *** meppl joined
[14:11] *** DemoFreak joined
[14:14] *** |Jedai| left
[14:15] *** |Jedai| joined
[14:20] *** spx2 left
[14:20] *** maerzhase joined
[14:21] *** maerzhase left
[14:21] *** maerzhase joined
[14:21] *** spx2 joined
[14:24] <szabgab_> std: my %h; %h<a><b> = 42;

[14:24] <p6eval> std 25172: OUTPUT«00:02 33m␤»

[14:24] <szabgab_> rakudo: my %h; %h<a><b> = 42;

[14:24] <p6eval> rakudo 36282: OUTPUT«Method 'postcircumfix:{ }' not found for invocant of class 'Failure'␤current instr.: 'postcircumfix:{ }' pc 3633 (src/classes/Associative.pir:77)␤»

[14:24] <szabgab_> rakudo: my %h{Str;Str}; %h<a><b> = 42;

[14:25] <p6eval> rakudo 36282: OUTPUT«Statement not terminated properly at line 1, near "{Str;Str};"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[14:25] <masak> szabgab_: autovivification not implemented yet in Rakudo.

[14:25] <masak> neither are chained-dimensional indices.

[14:25] <szabgab_> rakudo: my %h; %h<a> = {}; %h<a><b>= 42;

[14:25] <p6eval> rakudo 36282: RESULT«42»

[14:25] <moritz_> or typed arrays/hashes

[14:26] <szabgab_> so is this the way to use multi dimensianl hashes ?

[14:26] <masak> moritz_: not even typed arrays? I thought they were just broken.

[14:26] <masak> szabgab_: aye.

[14:27] <szabgab_> rakudo: my %h; %h<a> = {}; %h{"a"}{"b"}= 42;

[14:27] <p6eval> rakudo 36282: RESULT«42»

[14:27] <szabgab_> rakudo: my %h; %h<a> = {}; %h{"a"; "b"}= 42;

[14:28] <p6eval> rakudo 36282: OUTPUT«Statement not terminated properly at line 1, near "{\"a\"; \"b\"}"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[14:28] <szabgab_> is the {;} syntax only used for declaration or also for the indexing ?

[14:28] <masak> szabgab_: no, really not implemented yet. :)

[14:28] <masak> szabgab_: I think for both.

[14:29] <szabgab_> std: my %h; %h<a> = {}; %h{"a"; "b"}= 42;

[14:29] <p6eval> std 25172: OUTPUT«00:04 33m␤»

[14:29] *** maerzhase left
[14:29] *** maerzhase1 joined
[14:32] *** spx2_ joined
[14:37] *** pmurias joined
[14:38] <pmurias> ruoso: hi

[14:38] <ruoso> hi pmurias 

[14:40] *** spx2__ joined
[14:40] *** hercynium left
[14:43] <pmurias> ruoso: i'm thinking if i would be worth to make the $scope register special so we could have &?ROUTINE.lexical withought having to call .set_lexical

[14:44] *** spx2 left
[14:44] <pmurias> s/thinking/considering

[14:45] <ruoso> pmurias, I'd argue to keep the set_lexical specially and make $scope special in m0ld code

[14:46] *** TheOrz left
[14:46] *** spx2 joined
[14:46] <szabgab_> how do I compare two deep data structures if they contain the same data ?

[14:47] <szabgab_> shouldn't ~~ do the job ?

[14:47] <masak> Test.pm's is_deeply does the job.

[14:47] <masak> not sure if ~~ is the right tool for that.

[14:48] <szabgab_> hmm, I missed is_deeply when searched for it a few minutes ago, thanks

[14:49] <szabgab_> actually there should be some tool without involving Test.pm  as well

[14:50] <szabgab_> but for now I need it in a test anyway

[14:51] <ruoso> szabgab_, in theory eqv should do it

[14:51] *** Exodist joined
[14:51] *** spx2_ left
[14:52] <pmurias> ruoso: the $scope register would be special by convention rather then syntactially, .set_lexical would also be kept

[14:52] <szabgab_> is_deeply(%data, {"names" => {"fname" => "foo", "lname" => "bar"}}, $file);

[14:52] <ruoso> pmurias, I mean it would be treated by the compiler specially... 

[14:52] <szabgab_> says they are not the same, even though if I %data.perl.say

[14:52] <szabgab_> it shows the same thing

[14:53] <ruoso> pmurias, so you don't need to mess with the register count 

[14:53] <masak> szabgab_: please submit a rakudobug for that.

[14:53] <pmurias> ruoso: it's already treated specially by the compiler

[14:53] <ruoso> I mean the m0ld compiler, not mildew

[14:54] <szabgab_> I have BEGIN { @*INC.push("{%*ENV<PARROT_DIR>}/languages/perl6/") } in my test file

[14:55] <szabgab_> but is that the right version of rakudo?

[14:56] <masak> the git project resides in languages/rakudo, no?

[14:57] *** spx2__ left
[14:57] <szabgab_> so has rakudo moved to git or is it still in the parrot svn?

[14:57] <masak> yes.

[14:57] <masak> :)

[14:58] <masak> szabgab_: pmichaud did the move last week, and then he mysteriously disappeared.

[14:59] <pmurias> ruoso: the m0ld compiler would only need support for a volatile declaration so that the register would have the appropriate number

[14:59] <pmurias> my $scope is volatile(0); ?

[15:00] <ruoso> I was thinking it would be easier if you just assumed that "my $scope;" meant that register would already contain the lexical scope of that mold

[15:00] <ruoso> like if "my $scope;" actually meant "my $scope = $mold.lexical"

[15:03] <pmurias> is volatile seems easier to implement and we currently depend on handwritten blocks not being optimised in a few places already

[15:04] *** maerzhase1 left
[15:04] <ruoso> pmurias, if you say so, go for it ;)

[15:04] *** |Jedai| left
[15:04] <ruoso> it looks great to me ;)

[15:05] *** |Jedai| joined
[15:06] *** masak left
[15:15] *** pmurias left
[15:16] *** timebomb left
[15:22] *** kanru left
[15:41] *** spx2_ joined
[15:45] *** ejs left
[15:47] *** khisanth_ joined
[15:49] *** khisanth_ is now known as Khisanth

[15:53] *** spx2 left
[15:54] *** justatheory joined
[15:54] *** aindilis` joined
[16:08] *** aindilis left
[16:17] *** maerzhase joined
[16:21] *** alester joined
[16:26] *** stef_ joined
[16:28] *** stef_ left
[16:29] *** stef_ joined
[16:30] *** nihiliad joined
[16:31] <alester> Where's the pmichaud?

[16:31] <alester> Oh Paaaatrick

[16:33] *** Tene joined
[16:34] *** icwiener joined
[16:39] *** |Jedai| left
[16:39] *** hercynium joined
[16:39] *** |Jedai| joined
[16:41] *** maerzhase left
[16:44] *** Tene_ left
[16:56] *** maerzhase joined
[16:57] *** maerzhase left
[16:57] *** maerzhase joined
[17:02] *** alc joined
[17:03] *** eternaleye left
[17:04] *** |Jedai| left
[17:04] *** |Jedai| joined
[17:06] *** jferrero joined
[17:13] *** ayrnieu_ joined
[17:13] *** ayrnieu left
[17:13] *** ayrnieu_ is now known as ayrnieu

[17:14] *** jfredett left
[17:19] *** sahadev joined
[17:19] <sahadev> hello, i am not svn-savvy, so can someone tell when this means in svn-speak?

[17:19] <sahadev> >> svn update

[17:19] <sahadev> svn: PROPFIND request failed on '/parrot/trunk'

[17:19] <sahadev> svn: PROPFIND of '/parrot/trunk': 302 Found (https://svn.perl.org)

[17:20] <moritz_> sahadev: it means that you've missed the switch to the parrot.org svn server

[17:20] <moritz_> sahadev: see https://www.parrot.org/ 

[17:20] <sahadev> ah. how do i fix that?

[17:20] <moritz_> there are some instructions on that page

[17:20] <sahadev> ok. thanks.

[17:22] <sahadev> moritz_: i recently came across your series of "Perl 5 to 6" lessons. thanks for them. very useful.

[17:25] <moritz_> sahadev: good to hear; you're welcome

[17:40] *** smtms left
[17:41] *** jferrero left
[17:46] *** dalek left
[17:46] *** dalek joined
[17:49] *** |Jedai| left
[17:49] *** |Jedai| joined
[17:49] *** _Jedai_ joined
[17:49] *** smtms joined
[17:50] *** alc left
[17:55] *** meppl left
[18:02] *** Psyche^ joined
[18:14] *** _Jedai_ left
[18:15] *** _Jedai_ joined
[18:18] *** Patterner left
[18:18] *** Psyche^ is now known as Patterner

[18:26] *** japhb left
[18:26] *** smtms left
[18:26] *** stef_ left
[18:26] *** dmpk2k joined
[18:28] *** cognominal left
[18:30] *** Caelum_ joined
[18:30] *** smtms joined
[18:32] *** cognominal joined
[18:32] *** maerzhase left
[18:35] *** mtnviewmark joined
[18:39] *** _Jedai_ left
[18:40] *** _Jedai_ joined
[18:41] *** barney joined
[18:44] *** preflex joined
[18:56] *** icwiener left
[18:56] *** icwiener joined
[19:00] *** japhb joined
[19:06] *** sri_kraih joined
[19:09] *** maerzhase joined
[19:10] *** kcwu joined
[19:10] *** simcop2387 joined
[19:10] *** pugs_svn joined
[19:17] *** pugs_svn left
[19:17] *** simcop2387 left
[19:17] *** kcwu left
[19:18] *** kcwu joined
[19:18] *** simcop2387 joined
[19:18] *** pugs_svn joined
[19:20] *** timbunce joined
[19:25] <mberends> timbunce: hi, do visit here regularly?

[19:25] <timbunce> mberends: no, just when I run my irc client, which isn't very often at the moment

[19:27] <mberends> ah. I can tell you that DBI is one of the most yearned after features not yet in Rakudo.

[19:28] <timbunce> feel free to write one layered over Simon Cozens driver code

[19:28] <mberends> if only I could...

[19:29] <rodi> out of curiosity, why do people want DBI in rakudo at this stage?

[19:29] <rodi> </delurk>

[19:29] *** _Jedai_ left
[19:29] *** pugs_svn left
[19:29] *** simcop2387 left
[19:29] *** kcwu left
[19:30] *** _Jedai_ joined
[19:30] <mberends> the most complete application is a Wiki engine, http://november-wiki.org

[19:31] <mberends> in addition, there is enough of Perl 6 working now that the data it manipulates is worth storing in something smarter than flat files.

[19:33] <mberends> the November project is http://github.com/viklund/november/tree/master

[19:34] *** meppl joined
[19:37] <rodi> mberends: cool, thanks for the link.

[19:39] *** maerzhase1 joined
[19:39] <mberends> the other must-use link is http://irclog.perlgeek.de/perl6/today

[19:41] <rodi> feels very recursive to look over there while I'm typing over here...

[19:41] <mberends> rorrim a ekil | like a mirror

[19:42] *** _timbunce joined
[19:45] *** maerzhase left
[19:45] *** simcop2387 joined
[19:48] *** cognominal left
[19:50] *** timbunce left
[19:51] *** cognominal joined
[19:53] *** M_o_C joined
[19:58] *** lisppaste3 left
[20:03] *** lisppaste3 joined
[20:04] *** nihiliad left
[20:23] *** sahadev left
[20:24] *** barney left
[20:25] *** kcwu joined
[20:25] *** pugs_svn joined
[20:29] *** M_o_C left
[20:30] *** jan_ left
[20:30] *** Caelum_ is now known as Caelum

[20:34] *** jeremiah left
[20:37] *** jan_ joined
[20:37] *** c9s_ joined
[20:50] *** maerzhase1 left
[20:54] *** _Jedai_ left
[20:54] *** _Jedai_ joined
[21:03] *** mberends left
[21:09] *** maerzhase joined
[21:12] *** _Jedai_ left
[21:18] *** ayrnieu_ joined
[21:20] *** ayrnieu left
[21:20] *** ayrnieu_ is now known as ayrnieu

[21:29] *** jferrero joined
[21:29] <Khisanth> hmm

[21:29] <Khisanth> perl6: 1..10:by(2)

[21:30] <p6eval> pugs: OUTPUT«*** ␤    Unexpected ":by"␤    expecting "_", fraction, exponent, term postfix or operator␤    at /tmp/LmU4e4iw1T line 1, column 6␤»

[21:30] <p6eval> ..elf 25172: OUTPUT«Parse error in: /tmp/G2wP4wnErK␤panic at line 1 column 11 (pos 11): No previous operator visible to adverbial pair ([#<Match:0x819d6bc @on_str="1..10:by(2)", @from=5, @to=11, @bool=true, @hash={:value=>#<Match:0x819d874 @on_str="1..10:by(2)", @from=6, @to=11, @bool=true,

[21:30] <p6eval> ..@hash={:...

[21:30] <p6eval> ..rakudo 36300: OUTPUT«Statement not terminated properly at line 1, near ":by(2)"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[21:31] <moritz_> no implementation does adverbs on operators yet :/

[21:31] <rodi> I can help with that, actually:

[21:31] <rodi> (2,4,6,8,10)

[21:31] <rodi> next?

[21:32] <moritz_> rodi: now do that for 2..*:by(2) ;-)

[21:32] <rodi> moritz_: done.  it's lazy, though, so you won't get 

[21:32] <rodi> 'em til you need 'em.

[21:32] <rodi> :-P

[21:34] <rodi> crap, I can never remember if I'm supposed to be parsimonious or lazy there.

[21:34] <Khisanth> moritz_: I just try that once every couple of months :P

[21:34] <moritz_> Khisanth: ;)

[21:42] *** Jedai left
[21:43] *** sri_kraih left
[21:50] <TimToady> I can do that one.  (2,4,6,8,10...*)

[21:51] <avar> my @fib = (2,3,5,7...*)

[21:52] <TimToady> currently just (1,1...&[+])

[21:52] <moritz_> &[+] works?

[21:52] <moritz_> I'm surprised

[21:52] <TimToady> specced

[21:52] <moritz_> is that new?

[21:52] <TimToady> less than a week :)

[21:52] <moritz_> ie "yes"

[21:53] <TimToady> but not new :)

[21:53] <moritz_> not .new ;-)

[21:53] <TimToady> but given that &[+] is just short for &infix:<+> it shouldn't be hard to implement

[21:56] <TimToady> 'course, some folks define fib() as (0,1...&[+])

[22:00] <TimToady> so obviously the standard P6 definition should be (0|1, 1 ... &[+])

[22:03] * moritz_ cries out in agony

[22:04] <araujo> (1,1 ... &[+]) , means .... (1,1, 1+1, 2+1, 3+2 .... ) ?

[22:04] *** _timbunce left
[22:04] <moritz_> yes

[22:05] <moritz_> although... not sure

[22:05] *** rob joined
[22:05] <TimToady> same as (1,1 ... { $^a + $^b }) only without creating a new closure

[22:05] <araujo> nice fib

[22:05] <moritz_> TimToady: doesn't [+] expect arbitrary many arguments?

[22:05] <pugs_svn> r25173 | putter++ | [elfish/on_sbcl] A start at supporting multiple CL implementations - libraries are now organized into implementation specific copies.

[22:05] <pugs_svn> r25173 | putter++ | [STD_red] More UTF fiddling.  Unbreaks on_sbcl

[22:05] <moritz_> so it would be (1, 1, 1+1, 1+1+2, ...)

[22:05] *** rob is now known as Guest73922

[22:06] <TimToady> no, specced as left associative

[22:06] <moritz_> ok

[22:06] <TimToady> and perhaps the &[] form always picks a 2-ary form

[22:07] <pugs_svn> r25174 | putter++ | [elfparse] rx_on_re - A start at cleaning up field accesses.

[22:08] <TimToady> much as [~] $a, $b, $c implies $a ~ $b ~ $c despite being list associative

[22:09] <araujo> so like a fold?

[22:09] <TimToady> that's how we spell it in p6

[22:10] <araujo> I see ...

[22:10] <araujo> :)

[22:11] * araujo likes it

[22:12] <araujo> TimToady, is this true for any operator? .. I mean, [+], [-], .....

[22:12] <araujo> ?

[22:13] <TimToady> pugs: [-] 10,1,1,1

[22:13] <p6eval> pugs: RESULT«7»

[22:13] <[particle]1> any infix operator

[22:13] <TimToady> any simple infix

[22:13] <araujo> right, good :)

[22:13] <TimToady> doesn't do thunky stuff

[22:13] <TimToady> and lvalues are unlikely to work well

[22:14] <TimToady> but anything without side effects, sure

[22:14] <TimToady> including user-define operators

[22:14] <araujo> yeah, it is a very declarative feature

[22:15] <TimToady> pugs: sub infix:<foo> ($a,$b) { "$a:$b" }; [foo] 1,2,3,4,5

[22:15] <p6eval> pugs: RESULT«1»

[22:15] <TimToady> pugs: sub infix:<foo> ($a,$b) { "$a:$b" }; say [foo] 1,2,3,4,5

[22:15] <p6eval> pugs: OUTPUT«1␤»

[22:15] <TimToady> hmm

[22:15] <TimToady> well, seems buggy

[22:15] <araujo> :(

[22:15] <araujo> but it is cool indeed

[22:16] <araujo> who is in charge of pugs these days?

[22:16] <[particle]1> yes.

[22:16] <TimToady> no one

[22:16] <araujo> mm..

[22:16] * jnthn finally gets around to scribbling something about his hacking in his blogs.

[22:17] <TimToady> officially, no one was ever in charge of pugs :)

[22:17] <araujo> Long time I don't look at pugs code... 

[22:17] <araujo> wonder how much it has changed.... will take a look

[22:17] <TimToady> almost nothing has changed...if you want to bring it more up to date, feel free

[22:18] <TimToady> or write a STD backend that spits out Haskell...

[22:18] <araujo> I can play a bit with it for sure

[22:19] <avar> araujo: yay

[22:20] <araujo> avar, :)

[22:21] *** Exodist left
[22:22] <TimToady> it's suffered a certain amount of "design rot" as the P6 specs have evolved

[22:22] *** Exodist joined
[22:23] <mtnviewmark> ah, so the fib example shows that the &[op] syntax is clearly being confused by people with [op] metaop

[22:23] <mtnviewmark> perhaps &<op> would be better?  (and I know what yer gonna say.... :-)  )

[22:24] <mtnviewmark> the comment moritz_: so it would be (1, 1, 1+1, 1+1+2, ...)

[22:24] <mtnviewmark> implies that he thought it was passing the [+] operator, not the + operator

[22:25] <diakopter> araujo: see the recent Pugs releases on hackage

[22:26] <diakopter> araujo: I'm curious to know how Pugs has changed apart from svn.pugscode

[22:27] <araujo> diakopter, that one is the latest 6.2.13.14? 

[22:27] <araujo> diakopter, do you use it?

[22:28] *** Whiteknight joined
[22:29] <diakopter> araujo: I have a local install of that release, yeah, that I was using to build smop

[22:30] <moritz_> I tried to install it on the server on which p6eval lives, but it fell victim to the OOM-killer

[22:30] <araujo> diakopter, does it work latest ghc?, I heard it had some problems

[22:30] <araujo> with*

[22:31] <araujo> ok, I will try this

[22:36] <pugs_svn> r25175 | lwall++ | [S03] remove frivolous sub [op] form of reduce declaration

[22:36] <pugs_svn> r25175 | lwall++ | &[op] always refers to a binary infix even for list associative ops

[22:37] *** Guest73922 left
[22:37] <TimToady> mtnviewmark: can't really use &<op> because far more ops contain < and > than contain [ and ]

[22:38] <TimToady> and I'm trying to change the meaning of [op] to mean infix, and the reduce form works that way merely because it's being used where a term is expected

[22:39] <TimToady> and if that's what you expected me to say, I guess it doesn't hurt to repeat it for everyone else :)

[22:40] <araujo> :)

[22:40] <TimToady> now I'm trying to figure out what $a [\op] $b means :)

[22:40] <araujo> haha

[22:41] <araujo> diakopter, i can see pugs is available from cabal-install .....

[22:42] <TimToady> not sure how close to HEAD that is; was audreyt doing that on a private branch?

[22:43] <TimToady> or did that get merged?

[22:43] <moritz_> there were no pugs commits in the last couple of months

[22:45] <araujo> well, the hackage tarball package seems a bit outdated

[22:45] <TimToady> it was some months ago in any case

[22:46] <TimToady> anyway, I don't know how much success you'll have compiling src/Pugs directly, but you'd need that in order to hack on it

[22:47] <araujo> isn't audrey around here these days?

[22:47] <araujo> TimToady, next to it...

[22:47] <pugs_svn> r25176 | moritz++ | [t/TASKS] remove task for which the spec was just removed

[22:47] *** phade joined
[22:47] <araujo> looking at the cabal file, I think i won't have too much problems

[22:47] <araujo> i am checking the svn repo though

[22:48] <diakopter> araujo: how is the hackage tarball outdated? there's been a new release posted quite often the past few months

[22:50] <araujo> Upload date	Tue Dec 16 09:01:01 UTC 2008

[22:50] <araujo> for latest tarball?

[22:50] <diakopter> (that seems fairly recent to me)

[22:51] <diakopter> relative to the last time someone committed something to Pugs in svn here

[22:51] <TimToady> my impression is that audrey lurks, but doesn't want to promise (implictly or explicitly) anything that might exceed her current bandwidth, which seems completely sane to me :)

[22:56] *** wolv joined
[22:57] <araujo> diakopter, ok, just asked, because i got a 2006 package in my repo for the pugs tarball .. version 6.2.13

[22:57] <diakopter> oh.... 2006?  wow.

[22:57] <araujo> yeah :P

[22:58] *** iblechbot left
[22:58] <araujo> but i guess it is just us (Gentoo) too outdated

[22:58] <araujo> :|

[22:58] <araujo> I am testing svn though ... 

[23:00] *** AzureStone_ joined
[23:00] *** AzureStone left
[23:00] <diakopter> which ghc version do you have? I recommend the cabal/hackage release of Pugs 6.2.13.14 (you mentioned above), on ghc 6.10.1.

[23:01] <araujo> svn: REPORT of '/pugs/!svn/vcc/default': Could not read response body: connection was closed by server (http://svn.pugscode.org)

[23:01] <araujo> diakopter, i've got 6.8

[23:01] <moritz_> that's too old

[23:02] <araujo> i need that version for some packages 

[23:03] <araujo> moritz_, will test first

[23:05] *** phade left
[23:05] *** ruoso left
[23:05] <moritz_> oh wait, the 6.6.* are too old, not sure about 6.10

[23:07] *** wolverian left
[23:07] *** wolv is now known as wolverian

[23:11] *** lambdabot joined
[23:11] <diakopter> wb lambdabot 

[23:13] <TimToady> @messages

[23:13] <lambdabot> You don't have any new messages.

[23:16] *** Bribles left
[23:19] *** ruoso joined
[23:22] <araujo> moritz_, yeah, 6.6 is the 'old' one

[23:22] <araujo> 6.8 is quite good yet

[23:22] <araujo> and 6.10 is latest

[23:29] *** maerzhase left
[23:29] *** maerzhase joined
[23:34] *** wolverian left
[23:36] *** jferrero left
[23:37] <araujo> diakopter, which version do you use?

[23:48] *** meppl left
[23:48] <diakopter> araujo: ghc 6.10.1

[23:48] <diakopter> but, only to build smop a little ago

[23:50] <araujo> oh i mean

[23:50] <araujo> of pugs

[23:50] <diakopter> the latest hackage/cabal release, 6.2.13.14

[23:50] <araujo> diakopter, through caball install?

[23:50] <diakopter> yeah

[23:50] <diakopter> on windows, no less.

[23:54] *** maerzhase left
[23:57] *** jhorwitz joined
[23:59] *** hercynium left
