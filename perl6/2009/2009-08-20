[00:14] *** yahooooo left
[00:19] *** justatheory joined
[00:19] <KyleHa> Back.

[00:20] *** broquaint left
[00:24] *** justatheory left
[00:24] *** ihrd left
[00:25] *** carlin left
[00:34] <pmichaud> oops

[00:34] <pmichaud> I mis-judged the utc time

[00:34] <pmichaud> I'll be back around 01:30, actually

[00:34] <KyleHa> Oh, OK.

[00:35] <KyleHa> Thanks for letting me know.  8-)

[00:41] *** SmokeMachine joined
[00:51] * jnthn -> sleep, night all

[00:51] <KyleHa> G'night jnthn.

[00:51] <jnthn> KyleHa++: Best of luck on the release!

[00:52] <KyleHa> Thank you!

[00:55] *** __ash__ joined
[01:17] *** Limbic_Region joined
[01:19] *** drbean joined
[01:33] *** jferrero left
[01:37] *** cdarroch left
[01:37] <dalek> rakudo: 929a700 | (Kyle Hasselbacher)++ | docs/announce/2009-08:

[01:37] <dalek> rakudo: announce/2009-08: passing 82% of spectests

[01:37] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/929a7005721bc8ec2dd258814641fd4609f8c38e

[01:47] *** meppl left
[01:52] <pmichaud> 82%?  I suspect no.

[01:53] <KyleHa> Hmmm.

[01:53] <pmichaud> checking.

[01:53] <KyleHa> I think you're right.  It's 82% of the ones in spectest.data

[01:55] *** ruoso left
[01:57] <KyleHa> What counts the tests for spectest-progress.csv?

[01:57] <pmichaud> a special script I have does it.

[01:57] <pmichaud> It's just an estimate

[01:58] <pmichaud> I just pushed an updated commit

[01:58] <pmichaud> do you plan to release within the next 3 hours, or after that?

[01:58] <KyleHa> It should be all ready to go in the next three hours.

[01:58] <pmichaud> actually I should say 3.5 hours :-)

[01:58] <pmichaud> okay.

[01:58] <pmichaud> We'll go with the current numbers then.

[01:58] <pmichaud> 12369 passing, 17675 in suite == 71.5% 

[01:58] <KyleHa> I've already made the tarball and checked that it works, spectested and all.

[01:59] <pmichaud> I'm about to push the updated announcement

[01:59] <KyleHa> I get 69.9%

[01:59] <KyleHa> Pretty much 70%, really.

[02:00] <pmichaud> oh, I typoed my number earlier.

[02:00] <KyleHa> rakudo: say 12369 / 17675 * 100;

[02:00] <KyleHa> Oh, OK.

[02:00] <p6eval> rakudo 0d4fe0: OUTPUT«69.980198019802␤»

[02:00] <pmichaud> I did 12639  (oops!)

[02:00] <pmichaud> we go with 70%.

[02:01] <pmichaud> eh, 69.9%

[02:01] <pmichaud> I'd rather round down than up.

[02:01] <KyleHa> So that spectest-progress.csv is updated by a cron job somewhere of yours?

[02:01] <pmichaud> it's not a cron job -- it's not completely automated

[02:01] <dalek> rakudo: 7685eb3 | pmichaud++ | docs/spectest-progress.csv:

[02:01] <dalek> rakudo: spectest-progress.csv update: 430 files, 12339 passing, 0 failing

[02:01] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/7685eb30e9341157b0b1378a99ef59d4b875fc0e

[02:01] <dalek> rakudo: 8d8ffc7 | pmichaud++ | :

[02:01] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[02:01] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/8d8ffc71ebe9829af1eb7f97e1097815836666d5

[02:01] <pmichaud> it's a script I run, yes.

[02:01] <pmichaud> but sometimes "things go wrong" so it's not entirely trustable to a script

[02:02] <KyleHa> I see.

[02:02] <pmichaud> although it's been a while since anything has gone drastically wrong

[02:02] <pmichaud> at any rate, I wouldn't want it automatically pushing commits

[02:03] <KyleHa> Nah.  I'd have it commit locally and push it whenever.

[02:03] <pmichaud> even then, I don't necessarily want to commit locally

[02:04] <pmichaud> at any rate, it's super-simple to handle it manually right now

[02:04] <KyleHa> Yup, looks it.

[02:04] <pmichaud> it only takes a few minutes (except for the time needed to run the tests)

[02:04] <KyleHa> Looks like the announce needs the PDX flavor text, then a new tarball, and it's all set.

[02:04] <pmichaud> I also want some notes in there about handling of the perl6 executable

[02:06] <KyleHa> The problem as I recall is...

[02:06] <KyleHa> You can build it as usual, but you have to execute it from the directory you built it in.

[02:06] <KyleHa> The fix is 'make install'

[02:07] <KyleHa> After a 'make install', the installed perl6 will run from anywhere.

[02:07] <KyleHa> Is that right?

[02:12] *** Whiteknight left
[02:14] <pmichaud> yes.  I'm writing the announcement text for that now.

[02:14] <KyleHa> Oh, thank you!

[02:19] *** molaf joined
[02:22] *** Limbic_Region left
[02:23] *** ruoso joined
[02:23] *** justatheory joined
[02:32] <pmichaud> just pushed a few announcement updates -- reviews/suggestions/patches welcomed.  (I'm still adding more notes.)

[02:32] <KyleHa> Looking.

[02:37] <dalek> rakudo: 82ef264 | pmichaud++ | docs/announce/2009-08:

[02:37] <dalek> rakudo: More 2009-08 announcements.

[02:37] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/82ef264a1018f09391b086d3ec73fcb69d88a5c9

[02:42] <KyleHa> Is there a guideline on the announcement text width?  I reformed a paragraph, and it's wider than the others.

[02:42] <dalek> rakudo: 3d5359d | pmichaud++ | docs/ (2 files):

[02:42] <dalek> rakudo: More text updates in preparation for release.

[02:42] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/3d5359dda772cf9db538a682942a22f3475e1b6b

[02:47] <KyleHa> I edited the two paragraphs about installation.  I think it reads better, but you should check it for accuracy.

[02:48] <dalek> rakudo: c88002f | (Kyle Hasselbacher)++ | docs/announce/2009-08:

[02:48] <dalek> rakudo: announce text edits

[02:48] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/c88002f671d0a51259b867178ecd2bbc23ec4390

[02:48] <dalek> rakudo: bffd1ca | (Kyle Hasselbacher)++ | :

[02:48] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[02:48] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/bffd1cae7d8fb647d5e7bb275df3c25011b4dfa5

[02:49] <KyleHa> pmichaud:  Thanks so much for being here to help me with this.  I appreciate you making yourself available on my schedule.

[02:50] <pmichaud> my pleasure

[02:50] <pmichaud> actually, it's not so much that I'm adopting your schedule, as that this was the only time I'd have available to do it before the release anyway. :-)

[02:51] <pmichaud> but yes, I'm glad to be around to assist as needed :)

[02:51] <KyleHa> Heh.  OK, then I'm just lucky.  8-)

[02:53] <KyleHa> At this point, I think I'm waiting for your stamp of approval on the announce text before I make the tarball and test it.

[02:53] <pmichaud> okay.  I'm doing a README update at the moment to better explain "make install"

[02:53] <pmichaud> (I started to put the explanation in announce, then realized it belongs in README)

[02:53] <KyleHa> No rush.

[03:03] <wayland76> if I have code that says "class Foo does Str {...} ; my Array of Foo @arr = func();", and func() returns a list of Str, will it create the Foo objects from the Strs, assuming that Foo.operator<=> works?

[03:04] <wayland76> (ie. should it in Perl 6, even if it's NYI?)

[03:04] <pmichaud> it will not.

[03:04] <KyleHa> I think Foo.Str would have to work, but I'm half guessing.

[03:05] <pmichaud> first,  "my Array of Foo @arr"  doesn't mean what you think it means :-)

[03:05] <pmichaud> it means that each element of @arr must be an Array

[03:05] <pmichaud> (in fact, it has to be an Array of Foo)

[03:06] <pmichaud> so you probably meant    "my Foo @arr"   if you want @arr to be an array of Foo objects

[03:06] <wayland76> That's what I meant, thanks :)

[03:06] <pmichaud> second,  "my Foo @arr" means that each element of @arr has to be an instance of Foo

[03:06] <pmichaud> since Str is not a Foo, you'll get type check exceptions with    my Foo @arr = func();

[03:07] <pmichaud> the "Foo"  in "my Foo @arr"  is a type constraint, not a type coercion

[03:07] *** justatheory left
[03:07] <wayland76> Ah.  So is there some way to do a coercion?

[03:08] <pmichaud> my guess would be     my Foo @arr = (Foo($_) for func());

[03:08] <wayland76> Or do I have to do my Foo @arr = map { new Foo($_) } func();

[03:09] <wayland76> ok

[03:09] <wayland76> So if we call a type name as a function, does that call "new" then?

[03:09] <wayland76> s/new/constructors/ ?

[03:09] <pmichaud> no, but there's a way to define a coercion

[03:09] <pmichaud> i.e., in class Foo you'd define how to build a Foo from a Str

[03:10] <wayland76> Ok, I'll look in the doco, thanks :)

[03:10] <pmichaud> I'm not sure what that would look like.

[03:17] <pmichaud> Running "make install" will install Rakudo into the appropriate

[03:17] <pmichaud> locations, and those executables can be run from any directory.

[03:17] <pmichaud> (from the announce text)

[03:17] <pmichaud> I'm not sure that's quite specific enough.

[03:18] <KyleHa> OK.

[03:18] <pmichaud> fixing.

[03:18] <pmichaud> how about...

[03:18] <pmichaud>    Running "make install" will install Rakudo and its libraries into the Parrot installation that was used to build it.  The executables can then be run from any directory.

[03:18] <dalek> rakudo: 42d8ebd | pmichaud++ | README:

[03:18] <dalek> rakudo: Some README refactorings.

[03:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/42d8ebdd97490c5c95ae2dae24366235feeb80d4

[03:18] <dalek> rakudo: 0e5e157 | pmichaud++ | :

[03:18] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[03:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/0e5e157921525d33e2e9c498508a66ec3ca5d959

[03:19] <KyleHa> I'd make it one sentence.

[03:19] <KyleHa> (more)

[03:20] <KyleHa> Running "make install" will install Rakudo and its libraries into the Parrot installation that was used to build it, and then the executables will run from any directory.

[03:20] <pmichaud> wfm

[03:20] <KyleHa> Ultimately, though, I think this is turning to bikeshedding.  8-)

[03:20] <wayland76> pmichaud: Actually, if you don't define the conversion, it defaults to running "new"

[03:20] <pmichaud> well, a phrase like "appropriate directories" is just asking for questions :-)

[03:21] <KyleHa> I often overwork my sentences too.

[03:21] <pmichaud> wayland76: that's in the spec?  wow

[03:21] *** frew__ joined
[03:22] <wayland76> S13:205 or so

[03:24] <wayland76> Unfortunately, it call it as Dog.new($spot) instead of Dog.new(Parameter => $spot)

[03:24] <pmichaud> that does seem to be an interesting discontinuity

[03:24] <dalek> rakudo: fd8fc8a | pmichaud++ | docs/announce/2009-08:

[03:24] <dalek> rakudo: More announcement bikesh^H^H^H^H^H^Hupdates.

[03:24] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/fd8fc8a8e4ea0db44928b0da0bbf0a9bd0adb745

[03:25] <wayland76> Since I'm keen to join the bikeshedding, let me point out that ^W would've been better than ^H^H^H^H^H^H    :)

[03:26] <pmichaud> (sigh)

[03:26] <pmichaud> git commit --amend .....

[03:26] <pmichaud> :-)

[03:28] <KyleHa> So there's notes about the install in the announce and the README.

[03:28] <pmichaud> yes.

[03:28] <pmichaud> but the announce mainly points to the README

[03:28] <KyleHa> Yep.  Good good, I say.

[03:28] <pmichaud> the README has notes before; I just rewrote them a bit.

[03:28] <pmichaud> *had

[03:28] <wayland76> README haz cheezeburgerz? :)

[03:29] <KyleHa> Announce has "69.98%" because nines look better than zeros.

[03:30] <pmichaud> Because we're >this< close to 70%.  :-)

[03:30] <KyleHa> *grin*

[03:31] *** hercynium left
[03:31] <KyleHa> OK, I'm going to make the release tarball out of this, test it, and do the trumpet work tomorrow.

[03:31] <pmichaud> 70% is rounding up, so I didn't want that.  69.9 is honest, but makes people think "gee, they're almost at 70%".  69.98 says "okay, it really is 70%"

[03:31] <pmichaud> 69.98 will also probably produce a few smarmy comments about how we're being overprecise or something like that, too.  :-)

[03:33] <pmichaud> okay, assuming that we're still getting clean spectest runs, I can't think of anything else that has to be done before the release.  It's all yours, KyleHa++

[03:33] <pmichaud> and thanks a bunch for doing this release

[03:33] <KyleHa> Thanks again for all your yelp.

[03:33] <KyleHa> s/yelp/help/

[03:33] <pmichaud> glad to yelp anytime :-)

[03:33] <KyleHa> Heh.

[03:39] *** molaf left
[03:42] <KyleHa> Builds OK, 'make test' works.  make spectest running...

[03:43] *** leedo left
[03:44] *** leedo joined
[03:51] *** TimToady joined
[03:58] <KyleHa> spectests passed.  Yay!

[03:59] *** alester left
[04:09] <pugs_svn> r28039 | ash++ | Removed a rakudo specific test skip in S12-class/inheritence.t

[04:09] <__ash__> yay, now make spectest passes 2 more tests

[04:26] *** zloyrusskiy joined
[04:38] *** mee joined
[04:39] *** Zloy_Russkiy joined
[04:39] <PerlJam> pmichaud: awake?

[04:40] <pmichaud> awake.

[04:40] <pmichaud> just noticing that rakudo no longer builds against Parrot trunk.

[04:41] <PerlJam> So ... I was just looking at the release instructions ... is there any reason it's not just "make release" instead of "make release VERSION=YYYY-MM" ?

[04:41] <PerlJam> or, rather than "instead of", how about "in addition to"

[04:41] <PerlJam> (i.e. VERSION=... would be optional)

[04:42] <pmichaud> if you have an easy way to make that happen, I'd be okay with a patch to do it :-)

[04:42] <pmichaud> the main reason is that I didn't want to enforce VERSION=, and I wasn't sure how to make it optional in a makefile

[04:43] <KyleHa> Release is done.

[04:43] * pmichaud checks

[04:43] <KyleHa> I went ahead and announced and uploaded and all anyway.  I'll be a zombie tomorrow.

[04:44] <KyleHa> I created a use.perl.org account just for this.  8-)

[04:45] <pmichaud> good :)

[04:45] <pmichaud> looks awesome to me

[04:45] <pmichaud> KyleHa++

[04:46] <KyleHa> Thank goodness.  And thank you, pmichaud++

[04:47] <KyleHa> G'night!

[04:47] <pmichaud> Good night!

[04:47] *** KyleHa left
[04:54] *** Zloy_Russkiy left
[04:56] *** __ash__ left
[05:00] *** unitxt left
[05:04] <wayland76> Btw, does Rakudo * mean that we stop recommending people use github?

[05:04] *** LionMadeOfLions left
[05:05] <PerlJam> wayland76: er, why?

[05:05] <wayland76> Just wondering :)

[05:06] <wayland76> Oh, and KyleHa++ even if he's left :)

[05:09] *** lionWrk joined
[05:12] <pugs_svn> r28040 | wayland++ | [S32/IO] and [S16] Changes include:

[05:12] <pugs_svn> r28040 | wayland++ | * Removed spurious references to "Array of", now that pmichaud++ has explained things to 

[05:12] <pugs_svn> r28040 | wayland++ |   me

[05:12] <pugs_svn> r28040 | wayland++ | * Added    a number of things to better cope with the Encoding   

[05:12] <pugs_svn> r28040 | wayland++ | * Other    minor cleanups

[05:15] *** nihiliad left
[05:16] *** wayland76 left
[05:17] *** dnukem joined
[05:17] *** justatheory joined
[05:23] *** frew__ left
[05:25] *** justatheory left
[05:26] <PerlJam> pmichaud: Try this patch http://gist.github.com/170857

[05:27] *** ruoso left
[05:41] *** orafu left
[05:41] *** orafu joined
[05:45] *** ihrd joined
[05:45] *** wayland76 joined
[05:45] *** tak11 left
[05:48] *** tak11 joined
[05:54] *** abra joined
[05:56] *** solarion joined
[05:59] *** finanalyst joined
[06:00] *** youwin left
[06:02] *** youwin joined
[06:04] *** szabgab left
[06:05] *** cognominal left
[06:25] <moritz_> rakudo: multi a ($x, $y?) { say "a" }; multi a ($x) { say "b" }; a(3);

[06:25] <p6eval> rakudo 0d4fe0: OUTPUT«Ambiguous dispatch to multi 'a'. Ambiguous candidates had signatures:␤:(Any $x, Any $y?)␤:(Any $x)␤in Main (/tmp/RtdgIucQeV:2)␤»

[06:28] *** cognominal joined
[06:28] <moritz_> I CAN HAZ RELEAZ!

[06:29] <moritz_> KyleHa++

[06:37] *** youwin left
[06:39] <ihrd> hi

[06:39] *** youwin joined
[06:39] <ihrd> I compile last Rakuso

[06:40] <ihrd> argh, Rakudo, and find out I can run perl6 from rakudo dir only

[06:40] <ihrd> from any other place it said

[06:40] <moritz_> ihrd: you have to install it

[06:40] <ihrd> Null PMC access in isa()

[06:40] <ihrd> current instr.: 'parrot;P6metaclass;register' pc 633 (runtime/parrot/library/P6object.pir:430)

[06:40] <ihrd> called from Sub 'perl6;Perl6Role;onload' pc 5091 ((unknown file):-1)

[06:40] <ihrd> called from Sub '_block138' pc -1 ((unknown file):-1)

[06:40] <moritz_> it's known and documented (see README)

[06:41] <ihrd> ok, thank you

[06:42] <moritz_> (nobody reads READMEs anyway, we should call them READMENOTORYOULLDIEAVIOLENTDEATH)

[06:42] <ihrd> I read it carefuly first time

[06:42] <dalek> rakudo: 48f6de1 | moritz++ | README:

[06:42] <dalek> rakudo: remove trailing ws in README

[06:42] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/48f6de1a5711827dd079f81286e485b9985567cf

[06:43] <ihrd> but for now I just compile rakudo as usual

[06:43] <moritz_> yes, I understand

[06:48] <ihrd> ok, I read it. Can we replace "You can now use 'make' to build Rakudo Perl." by "You can now use 'make' and 'make install' to build and install Rakudo Perl." instead of "You can now use 'make' to build Rakudo Perl."

[06:49] <moritz_> will do later on

[07:03] *** rfordinal joined
[07:07] *** rfordinal left
[07:08] <moritz_> rakudo: Perl6::Grammar.parse('1') && say $/.perl

[07:08] <p6eval> rakudo 0d4fe0: OUTPUT«Method 'perl' not found for invocant of class 'Perl6;Grammar'␤»

[07:08] <moritz_> rakudo: Perl6::Grammar.parse('1') && say ~$/

[07:08] <p6eval> rakudo 0d4fe0: OUTPUT«1␤»

[07:09] *** barney joined
[07:12] *** sarthak joined
[07:12] *** sarthak left
[07:14] *** Chillance joined
[07:21] *** zamolxes left
[07:30] *** eiro left
[07:31] *** KatrinaTheLamia left
[07:31] *** Patterner left
[07:31] *** moritz_ left
[07:31] *** jan__ left
[07:31] *** gbacon left
[07:31] *** moritz_ joined
[07:31] *** KatrinaTheLamia joined
[07:31] *** Patterner joined
[07:31] *** jan__ joined
[07:31] *** gbacon joined
[07:31] *** irc.freenode.net sets mode: +o moritz_

[07:32] *** eiro joined
[07:38] *** abra left
[07:50] *** ihrd left
[07:52] *** dduncan joined
[07:59] *** zloyrusskiy left
[08:00] *** zloyrusskiy joined
[08:01] <lisppaste3> dduncan pasted "Rakudo build problem - no HLLCompiler" at http://paste.lisp.org/display/85717

[08:03] <dduncan> any idea why this is happening or how to get Rakudo to build?

[08:03] <pmichaud> was Parrot installed with "make install-dev" ?

[08:03] * moritz_ was just about to ask that :-)

[08:04] <dduncan> just make install, as the README says

[08:04] <moritz_> dduncan: the README from which century? :-)

[08:04] <pmichaud> README says "make install-dev"

[08:04] <pmichaud> line 64

[08:05] <pmichaud> We should've put a check for that into Configure.pl.  Oops.

[08:05] <pmichaud> it's on my todo list now.

[08:05] <pmichaud> (if anyone else beats me to it, great :-)

[08:09] <dduncan> I see it now, in Rakudo's README, in the section mentioning --parrot-config, which I did use ... but Parrot's README makes no mention of install-dev, and it should, considering people who go and install Parrot first without looking at Rakudo

[08:10] <dduncan> I will try re-installing Parrot using make install-dev now

[08:10] <pmichaud> that's a very valid point as well.

[08:10] <pmichaud> Still, Rakudo's Configure.pl ought to catch this, so we should make that happen.

[08:11] <dduncan> both are a good idea

[08:11] <pmichaud> I'm a bit surprised that PCT/HLLCompiler.pbc isn't installed by "make install" even for Parrot, though.  Almost nothing will run (much less build) without it.

[08:12] <pmichaud> according to Parrot's MANIFEST.generated file, it should've been installed.

[08:12] <dduncan> now that I know install-dev exists, I can understand why that separation might be done ... perhaps analogous to Catalyst's separation into Catalyst-Runtime and Catalyst-Devel ?

[08:13] <pmichaud> oh, wait, perhaps now.

[08:13] <pmichaud> *not

[08:13] * moritz_ will patch parrot's README

[08:13] <dduncan> but that implies maybe pre-compiled HLL

[08:13] <pmichaud> hmmm?

[08:14] <pmichaud> oh, yes, it would imply pre-compiled HLL.  That's Parrot's working model of distribution.

[08:14] <pmichaud> It expects most people to obtain precompiled components, not to build them directly.

[08:14] <dduncan> right, well, good to design in the separation early as possible, as it is done

[08:14] <dduncan> just a documentation omission then

[08:15] <moritz_> documentation enhanced in (parrot) r40670

[08:15] <pmichaud> very interesting... "make install" doesn't install the PCT components.  That's bad.

[08:16] <moritz_> so even a precompiled rakudo needs install-dev?

[08:17] <pmichaud> more to the point, parrot's "make install" should install the PCT components

[08:19] <pmichaud> on a different topic, I have no idea what to think about http://use.perl.org/comments.pl?sid=43556&cid=70186 .  I think I'm just going to ignore it.

[08:19] *** M_o_C joined
[08:19] <dduncan> okay, using Parrot's "make install-dev" appears to have fixed my reported problem with Rakudo make

[08:21] <moritz_> pmichaud: ignoring it seems like a good option.

[08:21] *** larsen joined
[08:22] <Matt-W> pmichaud: It displays quite clearly that he didn't understand a word of what you were trying to say

[08:22] <moritz_> and it contains factual errors

[08:22] <moritz_> "Perl 5 was a complete rewrite of Perl 4" -- wtf? that's the first time I read that

[08:23] <Matt-W> If it was, it was only the interpreter

[08:23] <Matt-W> it wasn't a rewrite of the language itself

[08:25] * Matt-W ponders some sort of reply... but would need to get a use.perl account first, so is suffering a lack of enthusiasm

[08:26] <moritz_> Matt-W: I think it's not worth replying

[08:26] <moritz_> it looks like a semi-informed flame bait with no intention to get any corrections, just food for flames

[08:26] <Matt-W> I'm tempted to try

[08:26] <Matt-W> I can always stop

[08:27] <Matt-W> Shall think about it for a bit

[08:30] <pmichaud> Actually, I think I have a reply.

[08:30] *** ejs joined
[08:31] *** broquaint joined
[08:32] *** PZt left
[08:37] <dduncan> good night

[08:37] *** dduncan left
[08:40] *** DanielC joined
[08:43] * Matt-W has a fairly rambling sort of reply he should probably try to conciseify

[08:43] *** Chillance_ joined
[08:43] <pmichaud> I just wrote mine:  http://use.perl.org/comments.pl?sid=43556&cid=70194

[08:44] <DanielC> Hi

[08:44] <Matt-W> good one pmichaud

[08:44] <DanielC> Reply to what? Did someone say something stupid?

[08:44] <Matt-W> I was going to say some things along the same lines

[08:44] <Matt-W> along with some other stuff

[08:44] <Matt-W> I might just say the other stuff now

[08:44] <pmichaud> DanielC: http://use.perl.org/comments.pl?sid=43556&cid=70186

[08:44] <DanielC> *click*

[08:47] * cognominal explodes PGE :  regex { <[x10000..xEFFFF]> }

[08:48] <moritz_> cognominal: maybe <-[\x0..\x10000]> is less explody?

[08:49] <pmichaud> PGE doesn't know how to do ranges in enumerated character lists short of building the entire set of characters at the moment

[08:49] <cognominal> I just wanted to match xml tags 

[08:49] <pmichaud> so the range \x10000..\xEFFFF is a little... large

[08:49] <cognominal> indeed

[08:50] <cognominal> :)

[08:50] * moritz_ wonders how hard it would be to use inversion lists for such ranges

[08:51] <pmichaud> the tricky part is breaking up the character enumeration into smaller pieces

[08:51] <pmichaud> we also have to deal with things like  \w, \s, \W, etc.

[08:52] <moritz_> well, I thought about doing it just for the special case of enumerated char classes

[08:52] <cognominal> what is an inversion list?

[08:52] <DanielC> pmichaud: That was a good response.

[08:53] <pmichaud> DanielC: thanks.

[08:53] <cognominal> http://www.ibm.com/developerworks/linux/library/l-cpinv.html

[08:53] <pmichaud> I meant \w, \s, \W in enumerated lists

[08:54] <pmichaud> e.g.,   <-[\W]>

[08:54] <pmichaud> or

[08:54] <pmichaud>    <-[\s 0..9]>    # exclude whitespace and digits

[08:55] <pmichaud> or

[08:55] <pmichaud>     <-[\s a e i 0..9 o u]>  # exclude whitespace, digits, and lowercase vowels

[08:56] <moritz_> pmichaud: are \W etc. implemented by querying the unicode character database?

[08:56] <pmichaud> at the moment PGE maintains a table of whitespace chars (more)

[08:57] <pmichaud> but for \d and \w we ask Parrot, and in the case of Unicode Parrot asks ICU

[08:58] <pmichaud> there's not a way in Parrot to say "enumerate all of the \w chars", there's just a way to say "is this character a \w".  (Yes, we could loop through all possible codepoints asking if each one is a \w...)

[08:59] <moritz_> would you be interested in a perl based prototype which uses inversion lists + direct questions to a different implementation?

[08:59] * Matt-W cuts off his urge to ramble forever and posts a reply

[08:59] <moritz_> ie that would make <[$range]-\w> working by first doing an inversion list lookup, and then asking parrot if the character matches \w?

[09:00] <pmichaud> moritz_: that sounds too special case-y to me

[09:00] *** Chillance left
[09:00] <pmichaud> it's not the case of <[$range] - \w> that is tricky on its own -- in fact, that's not even valid.

[09:01] <pmichaud> the tricky part of enumeration lists is that we have at least three things that can appear there:  (1) individual characters, (2) ranges, and (3) certain character properties such as \w, \d, \s, etc.

[09:02] <moritz_> well, my idea might cover that

[09:02] <pmichaud> so PGE needs to come up with a data structure that can represent the various combinations of these, including their negations

[09:02] <moritz_> inversion lists can represent (1), (2) and negations

[09:03] <pmichaud> I think I can more efficiently represent (1) and (2) directly, without the inversion list

[09:04] <pmichaud> I can certainly evaluate a direct representation more efficiently.

[09:04] <moritz_> well, you certainly have more experience in that area than I do :-)

[09:04] <pmichaud> :-)

[09:04] <pmichaud> thanks for the tip on inversion lists, though, I hadn't really seen that before

[09:10] *** Chillance__ joined
[09:12] *** tak11 left
[09:27] *** Chillance_ left
[09:30] *** meppl joined
[09:33] <frettled> I get spectest failure on S12-attributes/class.rakudo and S14-roles/basic.rakudo, but I can't recall whether these were known or not.  I've searched RT, but haven't found matching entries.  New stuff or known?

[09:37] *** ispy_ joined
[09:51] *** Chillance__ left
[09:51] *** Chillance joined
[09:58] *** guest_007 joined
[10:02] *** Whiteknight joined
[10:08] *** Su-Shee joined
[10:08] <Su-Shee> good day! :)

[10:12] <DanielC> o/

[10:13] *** Whiteknight left
[10:14] <jnthn> morning

[10:15] * Su-Shee started rakudo lobbying in the office today. 

[10:15] <DanielC> Su-Shee: Are you lobbying that your office start using Rakudo?

[10:17] *** azawawi joined
[10:17] <azawawi> std: "helllooo";

[10:17] <p6eval> std 28040: OUTPUT«ok 00:04 37m␤»

[10:17] <szbalint> ;)

[10:18] <azawawi> moritz_: hi

[10:18] <colomon> http://rakudo.org/how-to-get-rakudo needs to be modified to add the "make install" bit.

[10:19] <Su-Shee> DanielC: yes.

[10:19] <DanielC> Su-Shee: What do you want to use it for?

[10:19] <azawawi> moritz_: is rakudo going to be released today?

[10:20] <Su-Shee> DanielC: in 2010, the entire system is scheduled for "throw away, write new" ;)

[10:20] <DanielC> oh

[10:20] <DanielC> Su-Shee: Do you think Rakudo is ready for that?

[10:20] <Su-Shee> DanielC: essentially, web plus dbi plus heavy web service apis plus document converting.

[10:21] <DanielC> Does Rakudo have those things already? (e.g. dbi)

[10:21] <Su-Shee> DanielC: we'll see. even if we exchange minor modules with rakudo, it would be a nice start. we have some perfect candiate for grammars.

[10:21] <Su-Shee> (for example)

[10:22] <azawawi> 2009-08-20   Rakudo #20 "PDX"                (kyle)

[10:22] *** masak joined
[10:22] <masak> hideloho, perl6ers.

[10:22] <DanielC> o/

[10:23] <DanielC> Su-Shee: I didn't think that Rakudo was ready for production use like that (heavy web service), it would be very exciting if you could make it work for that.

[10:25] <Su-Shee> DanielC: well it's going to be a) a process and b) - we're planning for something which at least should run the next decade with perl. so, at least smaller things with rakudo doesn't seem to be impossible and then slowly migrating.

[10:25] <DanielC> I see.

[10:26] <masak> Su-Shee++

[10:26] <DanielC> Su-Shee++

[10:26] <Su-Shee> well let's see how much of a success my lobbying really will be. ;)

[10:27] <DanielC> What other alternatives is your office considering?

[10:27] <Su-Shee> perl 5

[10:27] <DanielC> Hmmm...

[10:27] <moritz_> oh hai

[10:27] <Su-Shee> no different language, though. 

[10:27] <moritz_> azawawi: in case you haven't noticed, it's already released

[10:28] <DanielC> Difficult choice. Perl 5 has better features right now, but who knows where things will be in 10 years?

[10:28] <moritz_> different.

[10:28] <Su-Shee> DanielC: well my crystal ball, my female intuition and the tealeaves earlier this morning said clearly "perl 6". 

[10:29] <DanielC> :-)

[10:31] <azawawi> moritz_: cool thanks

[10:31] <Su-Shee> wow. some people really hate perl 6. 

[10:31] <DanielC> Su-Shee: Q: Are you located in Germany?

[10:31] <DanielC> Su-Shee: Your website URL is in German.

[10:31] <Su-Shee> DanielC: yes

[10:32] <masak> wow, this furry_marmot fellow sure sounds angry.

[10:32] <colomon> Su-Shee: Is that a reference to people at your work, or furry-marmot?

[10:32] <Su-Shee> colomon: neither. discussion on #perl right now.

[10:32] <colomon> Oh.

[10:33] <DanielC> What did they say?

[10:33] <Su-Shee> "vapor6" "silimar name"

[10:33] <moritz_> I updated http://rakudo.org/how-to-get-rakudo to mention 'make install'

[10:33] <colomon> moritz_++

[10:33] <KatrinaTheLamia> yeah, I've been reading that discussion...

[10:33] <DanielC> moritz_++

[10:33] <Su-Shee> moritz_: ui, there's a make install now? cool.

[10:34] <KatrinaTheLamia> how is libSDL support in Perl6? I have a project that I want to do that won't reach maturity anytime soon... figured I'd get it started in Perl6.

[10:34] <moritz_> it's actually mandatory now - a non-installed rakudo will only work from the root of the build directory

[10:36] <moritz_> KatrinaTheLamia: I know there is some support in parrot for it, which might be usable from within rakudo

[10:37] <moritz_> KatrinaTheLamia: actually there's a small Perl 6 example in the parrot repository, in examples/sdl/blue_rect.pl

[10:39] <KatrinaTheLamia> moritz_, I'll look into it. I am really new to current Perl standards--I programmed for it long ago, but left for a while. From what I've been reading on various Enlightened Perl docs and blogs, it has came a long way... I really like some of the stuff some people are doing, and I want to be a part of it... so, you'll have to excuse me if I seem silly every now and then... it is purely ignorance on the matters at hand.

[10:39] <moritz_> KatrinaTheLamia: note that most "modern perl" blogs talk about perl 5

[10:39] <moritz_> KatrinaTheLamia: both perl 5 and perl 6 has come a long way though :-)

[10:40] <moritz_> Su-Shee: in case you haven't see it: http://perlgeek.de/blog-en/perl-6/svg-adventure.writeback - does that count as "beautiful perl"? :-)

[10:41] <Su-Shee> moritz_: pretty perl, yes. :)

[10:41] <moritz_> pretty, ok :-)

[10:41] <KatrinaTheLamia> moritz_, well, I also have a few other projects I want to get done in Perl 5... including a few video games... however the Perl 6 game, I do not envision being near complete for some time, so I figured I'd do it in Perl 5

[10:41] <KatrinaTheLamia> Perl 6*

[10:41] <Su-Shee> KatrinaTheLamia: well you see the different views here and in #perl over there perfectly...

[10:43] <DanielC> I find Perl 6 as a language far more interesting than Perl 5.

[10:43] <DanielC> It has borrowed a lot of cool things from Haskell (functional language features) as well as Ruby/Smalltalk ("everything is an object")

[10:44] <yath> but not .inspect :(

[10:44] <moritz_> KatrinaTheLamia: anyway, you're welcome to join our large quest/mmorpg :-)

[10:44] <DanielC> My favorite languages were Perl 5, Haskell and Ruby. In some ways, Perl 6 is a combination of all of the above.

[10:44] <Matt-W> Yup

[10:44] <Matt-W> That's how I see it

[10:45] <KatrinaTheLamia> moritz_, nice. Thanks ^.^

[10:45] <jnthn> yath: .inspect?

[10:45] <moritz_> DanielC: would you be interesting in porting a cool ruby project to perl 6?

[10:45] <DanielC> moritz_: Is there a specific one you have in mind?

[10:45] <yath> jnthn: in smalltalk you can do "object inspect!" and see all doc-strings, methods and attributed of the object

[10:45] <yath> (or the class)

[10:45] <moritz_> DanielC: yes, a plotting/charting module that produces nice SVG... let me find the link

[10:45] <yath> s/attributed/attributes/

[10:46] <KatrinaTheLamia> heh, the Perl 5 game I want to do is, ironically based on a forgotten web comic known as "Kid Radd". I think having a forgotten web comic be done well and get going in what is often (incorrectly) regarded as a forgotten language would be a good satire.

[10:46] <yath> jnthn: or, to talk smalltalk-ish: every message an object instanciated from that class would recongnize ;-)

[10:46] <KatrinaTheLamia> I'd make sure to make fun of the people like those in #perl regularly in the Kid Radd games I want to do... though, it would be rather tongue in cheek

[10:47] <reqamst> rakudo source looks dirty for me... :( different filetypes... i can't find myself

[10:47] <DanielC> moritz_: I haven't touched Ruby in years (I have to work with PHP - ugh) but I'm willing to give it a shot.

[10:47] <Matt-W> yath: Well we've got metaclass methods for finding methods and attributes and things...

[10:47] <yath> Matt-W: yeah, but inspect was really easy

[10:48] <Matt-W> $a.^methods isn't?

[10:48] <yath> Matt-W: just typed foo inspect! into the REPL and got a list of everything the object knows about

[10:48] <yath> Matt-W: well, inspect also had the doc-strings along with the method :)

[10:48] <reqamst> i think pugs is easier to recognize, but.. is it dead currently?

[10:48] <moritz_> DanielC: http://scruffy.rubyforge.org/ this one

[10:48] <DanielC> *click*

[10:49] <moritz_> DanielC: I'd really like to help, but I don't know ruby at all

[10:49] <Matt-W> yath: we'll have those according to Damian's latest doc ides, but they won't all come out of one method that's all

[10:50] <reqamst> moritz_: how could i help with this project?

[10:51] <moritz_> reqamst: by translating ruby to perl 6, or explaining some ruby constructs to me, setting up a repo, thinking of a good name etc.

[10:51] <DanielC> moritz_: I'm only a Ruby beginner, but I'll give it a shot. This library looks really neat.

[10:52] <DanielC> reqamst: Do you know Ruby?

[10:52] <moritz_> DanielC: I looked at it, it's about 3k lines of code including blank lines and comments

[10:52] <moritz_> and most classes are < 100 lines

[10:52] <DanielC> ok

[10:52] <reqamst> DanielC: yes, I know

[10:52] <DanielC> Doesn't sound too bad.

[10:53] <DanielC> reqamst: You are probably better at Ruby than I am. Do you want to try to port this library to Perl 6 with me?

[10:53] <masak> I'm willing to help too, if someone else sets up the repo.

[10:53] <moritz_> setting up a repo is easy. Coming up a with good name is hard.

[10:54] <masak> yeah... 'puffy' is not an immediately good candidate. :P

[10:54] <reqamst> DanielC: we can try... I am discover source

[10:54] <KatrinaTheLamia> I am not too bad with Ruby... even though I cannot stand RoR.

[10:54] <DanielC> I'll try to think of a good name...

[10:54] <moritz_> once we've got a name (if only a provisional) I'll set up a repo

[10:54] <reqamst> discovering

[10:54] <masak> perhaps something to do with 'lickable (plots)'?

[10:54] <Su-Shee> KatrinaTheLamia: why is that? isn't that what everybody wants today?

[10:55] <moritz_> plitable?

[10:55] <DanielC> KatrinaTheLamia: You don't like RoR? Me neither. What I don't like about it is that it feels very restrictive.

[10:55] <moritz_> pletable?

[10:55] <masak> moritz_: sounds like a table module.

[10:55] <KatrinaTheLamia> Su-Shee, I tried to learn RoR, and found that the documentation on it, like most Ruby projects, is deplorable at best

[10:55] <DanielC> RoR feels like wearing a straight jacket.

[10:55] <jnthn> yath: While I think Perl 6 makes all that information available, I concede there isn't one nice method to get you all of it in one go.

[10:55] <KatrinaTheLamia> you'd think with Ruby being highly associated with rdoc, the projects would be very well documented when released

[10:56] <DanielC> It is really easy to do the very specific things that the makers intended, but really hard to do anything different and novel.

[10:56] <Matt-W> yes that's the problem I had with it

[10:56] <masak> 'graphsome'? :)

[10:56] <KatrinaTheLamia> jnthn, what are some good Perl 6 resources? Maybe I should see about gathering as much as I can onto Nimh Labs.

[10:56] <Matt-W> Catalyst seems more flexible, although at the expensive of initial complexity

[10:56] <DanielC> I was surprised that RoR became so popular. I thought the Ruby language was supposed to be about flexibility.

[10:56] <moritz_> KatrinaTheLamia: we try to have links to nearly everything on http://perl6-projects.org/

[10:57] <KatrinaTheLamia> moritz_, thankies ^.^

[10:57] <Su-Shee> Matt-W: I'm a Mojo fan, I have to admit.

[10:57] <KatrinaTheLamia> moritz_, next time a trout to the face and telling me /topic will do ~.^

[10:57] <DanielC> Su-Shee: What is Mojo?

[10:57] <masak> KatrinaTheLamia: we're not big on slapping people's faces here. :)

[10:58] <moritz_> KatrinaTheLamia: we try to be friendly here, but I'll remember :-)

[10:58] <Su-Shee> DanielC: CPAN -> install Mojo and http://mojolicious.org

[10:58] <masak> we can make exceptions :)

[10:58] <DanielC> *click*

[10:58] <jnthn> KatrinaTheLamia: perl6-projects is, as moritz said, a good place. For keeping up to date plus seeing lots of good blog posts, http://planetsix.perl.org/ is worth watching.

[10:58] *** dbrock left
[10:58] <Su-Shee> DanielC: very tiny-tidy sleek mvc framework

[10:58] <DanielC> Su-Shee: Sounds good.

[10:59] <reqamst> DanielC: source looks simple

[10:59] <DanielC> Mojo -> bookmarked

[10:59] <DanielC> reqamst: That's good news.

[11:00] <DanielC> I haven't looked at the source - I'm at work right now, I should work at least a little :)

[11:00] <moritz_> aye, it did look simple to me when I looked at it

[11:01] * moritz_ wonders if cardinal runs it

[11:01] <DanielC> simple == good

[11:02] <KatrinaTheLamia> thank you jnthn 

[11:02] <masak> all this _why nostalgia has made me want to check out Camping. :)

[11:03] <KatrinaTheLamia> masak, moritz_ yeah, I mostly said that, as I realised how silly I was for not checking the topic

[11:03] <KatrinaTheLamia> anyways, I'd love to join this MMORPG and be a well known blogger

[11:03] <masak> KatrinaTheLamia: asking to get slapped with a trout is about the only way to get slapped with a trout around here.

[11:04] <masak> KatrinaTheLamia: oh, you've read something. *blushes*

[11:04] <reqamst> DanielC: and it's well documented

[11:04] <KatrinaTheLamia> heh... though, it should be noted, when playing games, I tend to take the role of "loonie" of the four major arch types

[11:04] <DanielC> reqamst: Yes. It looks well documented.

[11:04] *** synth left
[11:04] <KatrinaTheLamia> masak, well, I saw that article in my RSS reader some time ago ^.^

[11:04] *** synth joined
[11:05] <masak> KatrinaTheLamia: I'm no expert. what's a "loonie"?

[11:05] <KatrinaTheLamia> masak, I'll look for the old USENET article ^.^

[11:05] <frettled> masak: http://seiyuu.com/okamoto/gaming/realmen.htm

[11:05] <frettled> KatrinaTheLamia: see above :)

[11:06] <KatrinaTheLamia> oh thanks frettled ^.^

[11:06] * KatrinaTheLamia clicks

[11:06] <KatrinaTheLamia> it has been too long since I read that ^.^

[11:07] <masak> KatrinaTheLamia: "The Loonie -- The type who will do anything for a cheap laugh, including casting a fireball at ground zero." I think you'll be a good Rakudo tester/bug submitter. :)

[11:12] <KatrinaTheLamia> naw... I've got a _better_ project to be a tester/bug submitter... JPerl6 ~.^

[11:12] * KatrinaTheLamia is shot

[11:13] <masak> would that be Perl 6 for the JVM?

[11:13] <masak> rakudo: /\ /

[11:13] <p6eval> rakudo 0d4fe0:  ( no output )

[11:13] <Matt-W> that'd be cool... but hard

[11:14] <masak> rakudo: /\ /; say "alive"

[11:14] <masak> Matt-W: as opposed to other compiler projects around here? :P

[11:14] <p6eval> rakudo 0d4fe0: OUTPUT«alive␤»

[11:15] *** SmokeMachine left
[11:19] <KatrinaTheLamia> I dunno, I'd mostly imagine it would largely be seen as an abomination of Perl6... though, now that I think of it, it would succeed at putting Perl6 into the enterprise world... the only issue I can foresee on my part is a large amount of lack of experience... also while I have read a few books on compiler design, my readings still have neglected the infamous Dragon Book...

[11:19] <KatrinaTheLamia> which you know what? I have money... time to buy it ^.^

[11:19] <Matt-W> KatrinaTheLamia: it wouldn't be an abomination. Perl 6 is supposed to be implemented in as many ways as people want!

[11:19] <Matt-W> And having that foot into the Java world would be nice

[11:19] <Matt-W> Someone was looking at doing it on .NET

[11:20] <Matt-W> Which would also be cool

[11:20] <masak> very much so.

[11:21] <Matt-W> It's all very well having Rakudo on Parrot, but running on an existing VM as well would be a huge boost

[11:21] <Matt-W> &

[11:21] <masak> just to note, bleeding-edge Parrot/Rakudo produces segmentation faults and bus errors here on my box.

[11:21] <KatrinaTheLamia> alright then... I'll look into it... however, it will likely be _really_ bad at first... as while I knew Perl5 during the Perl 5.6 and prior era... I don't really know current knowledge that well. Maybe I can use it to learn Perl6? I find implementing systems helps me best understand the very nature of how such a system works, as oppose to using it.

[11:21] <masak> not matter what I run.

[11:21] <moritz_> masak: that's known, bacek will take care later today

[11:22] <DanielC> It would be cool to have Perl running on the Davlik machine so it runs on Android.

[11:22] <masak> moritz_: oh, good.

[11:22] <KatrinaTheLamia> any suggestions on books to buy and places to get them? I've been neglecting getting that damn Dragon Book for far too long... is Amazon a good place to get that?

[11:23] <moritz_> KatrinaTheLamia: look at http://isbn.nu/ it has nice overviews of where to buy things

[11:23] <KatrinaTheLamia> I cannot admit to being an expert in CS... but then, when I went to NAIT (the local standard on CS), I found the systems standards are exceedingly low... with me often hijacking the class from the teacher. But what I've read some _really_ nice things with this ^.^

[11:23] <KatrinaTheLamia> moritz_, thankies ^.^

[11:26] *** omega_ joined
[11:26] <masak> omega_: o/

[11:27] *** omega left
[11:28] *** rjh joined
[11:29] <reqamst> can you recommend me any module as an example of good perl6 practices?

[11:31] <masak> reqamst: anything in particular? module organisation? OO? comments?

[11:32] <reqamst> especially OO

[11:32] <masak> reqamst: on a general level, you should check out (the Perl 6 part of) proto. it's fairly nice. http://github.com/masak/proto/

[11:32] <masak> for OO especially, check out Druid. http://github.com/masak/druid/

[11:33] <masak> it even uses the Listener pattern, and is heavily commented with the newest S26 commenting praxis.

[11:35] * KatrinaTheLamia quietly notes both of those are masak own projects :P

[11:35] *** ihrd joined
[11:35] <masak> KatrinaTheLamia: I'd feel guilty about it, but try coming up with other examples of the same size -- I dare you. :)

[11:36] <KatrinaTheLamia> masak, give me enough time to learn Perl6 better ~.^

[11:36] <masak> KatrinaTheLamia: you know, I like your attitude. :)

[11:36] <jnthn> Heh. masak++ probably has written some of the most extensive Perl 6 code out there so far. :-)

[11:36] <jnthn> And in the process weeded out the most bugs. :-)

[11:36] <masak> I know STD.pm is pretty large, and massively impressive.

[11:36] * jnthn should actually try writing some Perl 6 code.

[11:37] <masak> it requires its own compiler just to run. :)

[11:37] <masak> Elf is also pretty large. I don't know much about its status.

[11:37] <masak> the spectests, if one were to view them as some sort of application, constitute the largest Perl 6 application in the wild.

[11:38] <KatrinaTheLamia> yeah... jnthn don't feel bad... I am still stuck in the tutorial mode... then it is off to do my mass genocide of Slimes in the world of Perl6 ^.^

[11:38] <masak> and then there's all the secrent government projects running on Perl 6 next-gen codebases, but which... I'm not at liberty to talk about, unfortunately. :P

[11:38] <masak> noo! what have the Slimes done to you? all they do is sit around!

[11:39] <reqamst> masak: thanks

[11:39] <KatrinaTheLamia> heh... well, I did technically case a series of paradoxes that caused Perl 6 to come into reality after mentioning to the wrong people that Eris makes extensive use of Perl 6 in her works. So it doesn't surprise me that the Illuminatus make use of Perl6... I couldn't see any other ue ^.^

[11:39] <jnthn> masak: If you consider Rakudo's setting...

[11:39] <jnthn> masak: That's a non-small example too.

[11:39] <masak> jnthn: also true.

[11:39] <KatrinaTheLamia> cause*

[11:40] <masak> KatrinaTheLamia: also, while Druid is completely written by me, I'll note that proto is written by a mosaic of Perl 6 authors.

[11:41] <ihrd> hi there

[11:41] <masak> ihrd: o/

[11:41] <ihrd> jnthn: do you saw me emails?

[11:41] <KatrinaTheLamia> masak, I am just teasing you on that... you have every right to be proud of your code

[11:42] <ihrd> masak: 8)

[11:42] <masak> KatrinaTheLamia: oh, I am. just trying to be fair about the attribution.

[11:42] <finanalyst> Matt-W: how long did it take to get an account on use-perl?

[11:42] <reqamst> hmm... it could be difficult to recognize when I made bug, and when it's rakudo bug... especially when I am not advanced in perl6 

[11:42] <masak> reqamst: yes. that's what #perl6 is for.

[11:42] <reqamst> :)

[11:42] <jnthn> ihrd: Yes, I saw 'em.

[11:43] <masak> rakudo: ?/is this a bug/; say "nope"

[11:43] <p6eval> rakudo 0d4fe0: OUTPUT«Use of uninitialized value␤nope␤»

[11:43] <masak> oh.

[11:43] <jnthn> lol

[11:43] <masak> implicit comparison with $_

[11:43] * KatrinaTheLamia hands reqamst a kitten, "perl6 is dangerous to go alone, have this ^.^"

[11:44] <KatrinaTheLamia> anyways, back to reading... so that maybe one day, I can be learned and smart ^.^

[11:44] <masak> that reminds me, I still haven't called a project of mine "Kittens"

[11:44] <reqamst> KatrinaTheLamia: ^^

[11:46] <KatrinaTheLamia> masak, if you do, I would love to see it as an integral part of Perl6. Mostly just so it could be advertised via that Legend of Zelda Meme.

[11:46] <masak> :)

[11:47] *** ruoso joined
[11:51] <masak> I think I know which project to name that, then. coincidentally, I had trouble naming that project, so it suits me fine.

[11:54] <jnthn> masak: Everytime I break it though, I'd feel bad about having killed a kitten.

[11:57] <moritz_> so, how do we name the Perl 6 port of scruffy?

[11:58] <moritz_> plotty?

[11:58] <Su-Shee> plotticilous ;)

[11:58] <jnthn> PlotHead

[11:59] <Su-Shee> *hihi*

[11:59] <DanielC> But this is not a plotting library.

[11:59] <DanielC> It is a generic SVG library, no?

[11:59] <DanielC> Or is it really just for plotting?

[11:59] <moritz_> no, it's charting/plotting

[11:59] <DanielC> ah

[11:59] <DanielC> charty

[11:59] <Su-Shee> pieplott

[11:59] <reqamst> charty looks nice

[12:00] <moritz_> +1 for charty

[12:00] * DanielC just wrote the first word that crossed his mind...

[12:01] <Su-Shee> chartyplott

[12:01] <Su-Shee> plottychart

[12:01] <moritz_> plarty :-)

[12:01] <Su-Shee> chotty! ;)

[12:01] <DanielC> You could just forget about having the name mean anything and just name it after your favourite animal (e.g. lizzard).

[12:01] <reqamst> cockatoo!

[12:02] <Su-Shee> perlplott

[12:02] <reqamst> perlchart

[12:02] <DanielC> Well, that's certainly a unique name (cockatoo).

[12:03] <DanielC> phart  ;-)  

[12:03] <masak> I like 'charty' or 'chartie'.

[12:03] <masak> commute &

[12:03] <moritz_> http://www.cockatoosoftware.com.au/

[12:03] *** masak left
[12:03] <moritz_> okay, anybody against 'charty'?

[12:04] <DanielC> no objections

[12:04] <moritz_> 3

[12:04] <moritz_> 2

[12:04] <moritz_> 1

[12:04] <Su-Shee> moritz_: Open source Web Charting and Graphing using only CSS and Javascript. 

[12:04] <moritz_> sold

[12:04] <Su-Shee> already exists.

[12:04] <moritz_> ouch

[12:04] <Su-Shee> charty -> sourcefroge

[12:04] <DanielC> wallaby

[12:04] <DanielC> platypus

[12:04] <DanielC> there are a lot of animal names.

[12:05] <reqamst> so chotty?

[12:05] <DanielC> Is there any animal that is known for drawing?

[12:05] <DanielC> (besides humans)

[12:05] <jnthn> Humans?

[12:05] <jnthn> Oh, damm.

[12:05] <DanielC> heh

[12:05] <reqamst> :)

[12:05] <Su-Shee> DanielC: purple

[12:05] <Su-Shee> I mean the snail which delivers purple.

[12:06] <Su-Shee> and *hihi* the red lice :)

[12:06] <reqamst> purple is part of pidgin

[12:06] <jnthn> Squids have ink.

[12:06] <jnthn> But Squid is already well know open source project.

[12:06] <reqamst> yes

[12:06] <reqamst> it's pigdin main library

[12:07] <DanielC> purple sounds ok, even if pigdin uses it.

[12:07] <azawawi> rakudo build failure on win32 xp http://gist.github.com/171023

[12:07] <DanielC> there are many things called purple

[12:07] <moritz_> plurple :-)

[12:08] <DanielC> graphene ?  

[12:08] *** takadonet joined
[12:08] <takadonet> morning all

[12:08] <azawawi> moritz_: any idea why rakudo build is failing http://gist.github.com/171023 ?

[12:09] <DanielC> grapheme would be sort of a reference to Perl's linguistic roots.

[12:09] <KatrinaTheLamia> moritz_, you could name it after something from lovecraftian fiction ^.^

[12:09] * moritz_ likes graphene

[12:09] <moritz_> KatrinaTheLamia: haven't read any  lovecraft, iirc

[12:10] <KatrinaTheLamia> moritz_, heh, you should, it gets referenced a lot by geeks ^.^

[12:10] *** abra joined
[12:10] <DanielC> Note: graphene and grapheme (n vs m) are different things. I spelled it wrong the first time. With an "n" it is something to do with chemistry.

[12:10] <moritz_> DanielC: actually my working group does lots of transport calculations on graphene :)

[12:11] <KatrinaTheLamia> DanielC, hmm... are you suggesting we name it after various designer drugs then?

[12:11] * KatrinaTheLamia is trying hard to make a joke about that... but everything she can think of just ends up being extremely tasteless >.>

[12:11] <moritz_> there doesn't seem to be any software named 'graphene' yet

[12:11] <DanielC> KatrinaTheLamia: I was actually thinking about grapheme, the smallest unit of written language.

[12:12] <DanielC> A reference to Perl's linguistic roots. But I'm happy with graphene too.

[12:12] <KatrinaTheLamia> DanielC, since it would be for graphing, that would actually be pretty good, to be honest... something to do with Escartes geography, or something like that

[12:12] <KatrinaTheLamia> I dunno, I am being silly I guess

[12:12] <DanielC> Yeah, I was thinking along those lines... grapheme/graphene sound like graphing.

[12:15] *** nErVe joined
[12:16] <reqamst> maybe look for name amongst famous artists?

[12:16] <moritz_> picassocharts?

[12:16] <DanielC> I like graphene / grapheme

[12:16] <Su-Shee> will surely get sued by paloma picasso.

[12:16] *** ihrd left
[12:17] <KatrinaTheLamia> naw... if we were to do an artist, we'd clearly need to go with something obscure, yet completely fitting for the subject

[12:17] <reqamst> pastel?

[12:17] * moritz_ would be happy with graphene too

[12:17] <KatrinaTheLamia> yeah, I like graphene too as well ^.^

[12:18] <Su-Shee> moritz_: like the graphene transistor clocks? ;)

[12:18] <reqamst> :D

[12:18] *** cj left
[12:19] *** cj joined
[12:19] <Su-Shee> (and now we know why companies invent totally bogus and stupid product names ;)

[12:19] *** cj left
[12:19] <reqamst> scribble?

[12:20] *** ilogger2 joined
[12:21] <Su-Shee> reqamst: exist, is a text editor ;)

[12:21] <reqamst> Tufte, cool!

[12:22] * azawawi tries to build rakudo on win32 after mingw32-make realclean

[12:23] <reqamst> it's short, unique and have something common with charts ;)

[12:23] <DanielC> Yeah.

[12:24] <moritz_> +1

[12:24] *** huf left
[12:24] *** mattp left
[12:24] *** PerlJam left
[12:24] *** arthur-- left
[12:24] *** pjcj left
[12:24] *** breinbaas left
[12:24] *** hatseflats left
[12:24] *** frettled left
[12:24] *** colomon left
[12:24] *** Lorn left
[12:24] *** ilbot2 left
[12:24] *** jisom left
[12:24] *** mkelly32 left
[12:24] *** ascent left
[12:24] *** dalek left
[12:24] *** ingy left
[12:25] *** nicomen left
[12:25] *** lucs left
[12:25] *** andreasg_ left
[12:25] *** spinclad left
[12:25] *** he_ left
[12:25] *** cxreg left
[12:25] *** tarbo2_ left
[12:25] *** p6eval left
[12:25] *** edenc left
[12:25] *** zetta left
[12:25] *** c9s left
[12:25] *** cosimo left
[12:25] *** integral left
[12:25] *** bigpresh_ left
[12:25] *** krunen_ left
[12:25] *** rafl left
[12:25] *** shachaf left
[12:25] *** Tene left
[12:25] *** mberends left
[12:25] *** Aisling left
[12:25] *** sbp left
[12:25] *** nsh left
[12:25] *** Maddingue left
[12:25] *** tomaw_ left
[12:26] *** moritz_ joined
[12:26] *** jrockway joined
[12:26] *** obra_ joined
[12:26] *** literal_ joined
[12:26] *** nErVe joined
[12:26] *** ruoso joined
[12:26] *** rjh joined
[12:26] *** omega_ joined
[12:26] *** azawawi joined
[12:26] *** Su-Shee joined
[12:26] *** guest_007 joined
[12:26] *** ispy_ joined
[12:26] *** meppl joined
[12:26] *** DanielC joined
[12:26] *** broquaint joined
[12:26] *** ejs joined
[12:26] *** larsen joined
[12:26] *** M_o_C joined
[12:26] *** zloyrusskiy joined
[12:26] *** eiro joined
[12:26] *** gbacon joined
[12:26] *** jan__ joined
[12:26] *** Patterner joined
[12:26] *** KatrinaTheLamia joined
[12:26] *** barney joined
[12:26] *** youwin joined
[12:26] *** cognominal joined
[12:26] *** solarion joined
[12:26] *** wayland76 joined
[12:26] *** dnukem joined
[12:26] *** lionWrk joined
[12:26] *** mee joined
[12:26] *** TimToady joined
[12:26] *** leedo joined
[12:26] *** drbean joined
[12:26] *** diakopter joined
[12:26] *** gfldex joined
[12:26] *** wolverian joined
[12:26] *** BinGOs joined
[12:26] *** mikehh joined
[12:26] *** sri_kraih joined
[12:26] *** simcop2387 joined
[12:26] *** xomas_ joined
[12:26] *** baest joined
[12:26] *** cotto joined
[12:26] *** reqamst joined
[12:26] *** athomason joined
[12:26] *** rhr_ joined
[12:26] *** [particle] joined
[12:26] *** irc.freenode.net sets mode: +o moritz_

[12:26] *** japhb joined
[12:26] *** frew joined
[12:26] *** RonOreck joined
[12:26] *** jantore joined
[12:26] *** kent\n joined
[12:26] *** yath joined
[12:26] *** Gothmog_ joined
[12:26] *** ewilhelm_ joined
[12:26] *** kolibrie_ joined
[12:26] *** gabiruh joined
[12:26] *** cxreg joined
[12:26] *** mattp joined
[12:26] *** nsh joined
[12:26] *** sbp joined
[12:26] *** ascent joined
[12:26] *** breinbaas joined
[12:26] *** Aisling joined
[12:26] *** Lorn joined
[12:26] *** zetta joined
[12:26] *** huf joined
[12:26] *** lucs joined
[12:26] *** arthur-- joined
[12:26] *** hatseflats joined
[12:26] *** spinclad joined
[12:26] *** jisom joined
[12:26] *** PerlJam joined
[12:26] *** Tene joined
[12:26] *** nicomen joined
[12:26] *** shachaf joined
[12:26] *** rafl joined
[12:26] *** ingy joined
[12:26] *** colomon joined
[12:26] *** pjcj joined
[12:26] *** andreasg_ joined
[12:26] *** dalek joined
[12:26] *** Maddingue joined
[12:26] *** tomaw_ joined
[12:26] *** tarbo2_ joined
[12:26] *** ilbot2 joined
[12:26] *** p6eval joined
[12:26] *** mberends joined
[12:26] *** frettled joined
[12:26] *** irc.freenode.net sets mode: +oooo PerlJam Tene mberends frettled

[12:26] *** he_ joined
[12:26] *** integral joined
[12:26] *** krunen_ joined
[12:26] *** mkelly32 joined
[12:26] *** c9s joined
[12:26] *** cosimo joined
[12:26] *** edenc joined
[12:26] *** bigpresh_ joined
[12:26] *** bloonix_ joined
[12:26] *** sunnavy joined
[12:26] *** zol joined
[12:26] *** kst joined
[12:26] *** cookys joined
[12:26] *** c1sung joined
[12:26] *** eldragon2 joined
[12:26] *** hcchien joined
[12:26] *** adhoc joined
[12:26] *** Helios joined
[12:26] *** Trey joined
[12:26] *** lambdabot joined
[12:26] *** clkao joined
[12:26] *** awwaiid joined
[12:26] *** charsbar joined
[12:26] *** buubot joined
[12:26] *** pnu joined
[12:26] *** felipe joined
[12:26] *** Grrrr joined
[12:26] *** szbalint joined
[12:26] *** Ingmar joined
[12:26] *** pmichaud joined
[12:26] *** jeekobu joined
[12:26] *** IRSeekBot joined
[12:26] *** cls_bsd joined
[12:26] *** chipdude joined
[12:26] *** sjohnson joined
[12:26] *** skids joined
[12:26] *** Woody2143 joined
[12:26] *** phenny joined
[12:26] *** michaelr joined
[12:26] *** avar joined
[12:26] *** allbery_b joined
[12:26] *** silug joined
[12:26] *** christine joined
[12:26] *** patmat joined
[12:26] *** irc.freenode.net sets mode: +oo pmichaud sjohnson

[12:26] <reqamst> dufte tufte

[12:26] <Su-Shee> in the north there's also "toefte" ;) 

[12:26] <moritz_> (the u in 'dufte' is pronounce the the oo in cool)

[12:26] <moritz_> anyway, tufte it is then

[12:26] *** adhoc left
[12:26] *** mattp left
[12:26] *** [particle] left
[12:26] *** mikehh left
[12:26] *** rjh left
[12:26] *** nErVe left
[12:26] *** youwin left
[12:26] *** huf left
[12:26] *** cotto left
[12:26] *** Helios left
[12:26] *** Trey left
[12:26] *** solarion left
[12:26] *** hcchien left
[12:26] *** reqamst left
[12:26] *** lambdabot left
[12:26] *** PerlJam left
[12:26] *** arthur-- left
[12:26] <DanielC> +1

[12:27] *** PerlJam joined
[12:27] *** nErVe joined
[12:27] *** rjh joined
[12:27] *** youwin joined
[12:27] *** solarion joined
[12:27] *** mikehh joined
[12:27] *** cotto joined
[12:27] *** reqamst joined
[12:27] *** [particle] joined
[12:27] *** mattp joined
[12:27] *** huf joined
[12:27] *** arthur-- joined
[12:27] *** hcchien joined
[12:27] *** adhoc joined
[12:27] *** lambdabot joined
[12:27] *** Trey joined
[12:27] *** Helios joined
[12:27] *** irc.freenode.net sets mode: +o PerlJam

[12:27] *** yath left
[12:27] *** diakopter left
[12:27] *** pjcj left
[12:27] *** chipdude left
[12:27] *** hatseflats left
[12:27] *** TimToady left
[12:27] *** breinbaas left
[12:27] *** IRSeekBot left
[12:27] <azawawi> moritz_: it nows builds on win32...cool... it was a corrupted parrot directory...

[12:28] *** TimToady joined
[12:28] *** diakopter joined
[12:28] *** yath joined
[12:28] *** breinbaas joined
[12:28] *** hatseflats joined
[12:28] *** pjcj joined
[12:28] *** IRSeekBot joined
[12:28] *** chipdude joined
[12:28] *** skids left
[12:28] *** sjohnson left
[12:28] *** jeekobu left
[12:28] *** szbalint left
[12:28] *** frettled left
[12:28] *** colomon left
[12:28] *** rhr_ left
[12:28] *** Su-Shee left
[12:28] *** buubot left
[12:28] *** eldragon2 left
[12:28] *** michaelr left
[12:28] *** Lorn left
[12:28] *** allbery_b left
[12:28] *** larsen left
[12:28] *** phenny left
[12:28] *** lionWrk left
[12:28] *** charsbar left
[12:28] *** ruoso left
[12:28] *** avar left
[12:28] *** c1sung left
[12:28] *** pnu left
[12:28] *** clkao left
[12:28] *** ilbot2 left
[12:28] *** ewilhelm_ left
[12:29] *** frettled joined
[12:29] *** ruoso joined
[12:29] *** Su-Shee joined
[12:29] *** larsen joined
[12:29] *** lionWrk joined
[12:29] *** rhr_ joined
[12:29] *** ewilhelm_ joined
[12:29] *** Lorn joined
[12:29] *** colomon joined
[12:29] *** ilbot2 joined
[12:29] *** c1sung joined
[12:29] *** eldragon2 joined
[12:29] *** clkao joined
[12:29] *** charsbar joined
[12:29] *** buubot joined
[12:29] *** pnu joined
[12:29] *** szbalint joined
[12:29] *** jeekobu joined
[12:29] *** sjohnson joined
[12:29] *** skids joined
[12:29] *** allbery_b joined
[12:29] *** avar joined
[12:29] *** michaelr joined
[12:29] *** phenny joined
[12:29] *** irc.freenode.net sets mode: +oo frettled sjohnson

[12:29] *** Grrrr left
[12:29] *** RonOreck left
[12:29] *** athomason left
[12:29] *** sri_kraih left
[12:29] *** barney left
[12:29] *** jisom left
[12:29] *** mkelly32 left
[12:29] *** pmichaud left
[12:29] *** jrockway left
[12:29] *** silug left
[12:29] *** Woody2143 left
[12:29] *** gfldex left
[12:29] *** cls_bsd left
[12:29] *** simcop2387 left
[12:29] *** pmichaud joined
[12:29] *** jrockway joined
[12:29] *** barney joined
[12:29] *** gfldex joined
[12:29] *** sri_kraih joined
[12:29] *** simcop2387 joined
[12:29] *** athomason joined
[12:29] *** RonOreck joined
[12:29] *** jisom joined
[12:29] *** mkelly32 joined
[12:29] *** Grrrr joined
[12:29] *** cls_bsd joined
[12:29] *** Woody2143 joined
[12:29] *** silug joined
[12:29] *** irc.freenode.net sets mode: +o pmichaud

[12:31] <moritz_> http://github.com/moritz/tufte/tree/master

[12:31] <DanielC> *click*

[12:31] <moritz_> anybody who wants commit access please give me your github ID

[12:31] *** tomaw_ left
[12:32] <DanielC> danielc

[12:32] <moritz_> reqamst: do you also have a github account?

[12:32] *** jnthn joined
[12:33] <takadonet> graphs..... no thanks moritz_

[12:33] <DanielC> masak sure does.

[12:33] <jnthn> irc server fail

[12:33] <reqamst> moritz_: yes, i have

[12:33] <reqamst> moritz_: reqamst

[12:34] <moritz_> ok, masak, DanielC and reqamst are committers

[12:35] <DanielC> Well, I'm off for lunch.

[12:35] *** DanielC is now known as DanielC_away

[12:37] *** tomaw_- joined
[12:39] *** literal_ is now known as Hinrik

[12:39] *** Hinrik is now known as literal

[12:40] *** PZt joined
[13:07] *** masak joined
[13:08] *** Psyche^ joined
[13:10] *** zloyrusskiy left
[13:13] <wayland76> KatrinaTheLamia: It looks like I'll have to fight you for the title of "channel clown" :)

[13:14] *** unitxt joined
[13:14] <masak> no need to make it a singleton role. :)

[13:14] * wayland76 swings at KatrinaTheLamia with a bladder full of whitewash on a string attached to a stick, missed, and the bladder his wayland76 in the back of the head.

[13:15] <wayland76> s/his/hit

[13:16] <KatrinaTheLamia> well wayland76 ... with every channel clown there is always two, no more, no less. Master and apprentice...

[13:16] * KatrinaTheLamia pulls out a rubber chicken with a pulley in the middle

[13:16] <KatrinaTheLamia> in this case, I'll make an exception...

[13:17] * KatrinaTheLamia has quit on error exception, "apparently she fights like a cow"

[13:17] <KatrinaTheLamia> whoops >.>

[13:17] <masak> moritz_: great name. kudos.

[13:17] * wayland76 wonders out loud if he get seniority, completely unaware of any rubber chicken shenanigans :)

[13:19] <KatrinaTheLamia> depends... do you speak Swahili?

[13:19] * wayland76 has not read any Lovecraft either, neither HP or the Compaq variety, but has played the Call of Cthulhu roleplaying game

[13:19] * wayland76 doesn't know whether he can speak Swahili or not, having never tried :)

[13:20] <KatrinaTheLamia> well, we are in the same boat then

[13:20] <KatrinaTheLamia> meh, we could always do something similar to DC... I'll be the channel's Harley Quinn and you can be Mr. J ~.^

[13:20] <wayland76> I had a book recommended to be personally by Larry Wall.  Does that count? :)

[13:20] <moritz_> masak: not my idea, but thanks anyway

[13:21] * wayland76 discovers, after a quick Google, that not owning a television makes you miss references occasionally

[13:22] <wayland76> KatrinaTheLamia: How about we take turns being the straight man :)

[13:22] <wayland76> @karma KatrinaTheLamia

[13:22] <lambdabot> KatrinaTheLamia has a karma of 0

[13:22] <wayland76> KatrinaTheLamia++

[13:22] <wayland76> @karma KatrinaTheLamia

[13:22] <lambdabot> KatrinaTheLamia has a karma of 1

[13:22] <KatrinaTheLamia> I find the concept of being a "straight man" very hard to understand ^.^

[13:22] <wayland76> "The first hit is free, kid" :)

[13:22] *** nErVe left
[13:23] <KatrinaTheLamia> oh... does this mean I got to dress in horrid fashion and hang around in seedy neighbourhoods now, Mr. W?

[13:23] <Su-Shee> popcorn anyone? ;)

[13:23] *** Patterner left
[13:23] *** Psyche^ is now known as Patterner

[13:23] *** frederico joined
[13:23] <wayland76> KatrinaTheLamia: Metaphorically.  And having been brought up sheltered/bookish, I'm afraid I speak pre-1960s English, so that when I say "man", you have to guess whether I mean "man", or "person"

[13:24] <wayland76> The one neighbourhood that we expect you to frequent is #perl6

[13:25] *** KyleHa joined
[13:25] <wayland76> But that's certainly not seedy -- I'm not the only person who has said something like "I like being on #perl6 because I'm the stupidest person there" :)

[13:25] <KatrinaTheLamia> well... that "not being subjectated to the horrors of Tv" kind of puts you ahead of others in my books... though some of the cartoons in the 1990s were not too bad

[13:25] <wayland76> I saw Astro Boy a few times :)

[13:25] <Su-Shee> who needs a tv to be up2date? ;)

[13:26] <wayland76> Su-Shee: Who needs to be up2date? :)

[13:26] <KatrinaTheLamia> wayland76, which version of the Mighty Atom? The 1960s series? The 1980s series? or the 2003 series?

[13:26] <wayland76> KatrinaTheLamia: Whatever was on television in the 1980s :)

[13:26] <Su-Shee> wayland76: tv meme sluts like me ;)

[13:27] <KatrinaTheLamia> I dunno, the reason Mighty Atom was build kind of disturbs me... kind of a work around of the actual greaving process of the person who build him.

[13:27] *** bpetering joined
[13:27] *** bpetering is now known as missingthepoint

[13:28] <KatrinaTheLamia> (the Mighty Atom, Astro Boy, was built to be modeled after his creator's son who had died in a car accident)

[13:28] * wayland76 only knows about Mighty Atom because he once read an article about how middle-aged Japanese car company executives really want to build the Mighty Atom = Astro Boy :)

[13:28] *** araujo joined
[13:29] <KatrinaTheLamia> wayland76, well, for proper clowning, look for episodes of the EWJ cartoon, the Sam and Max cartoon, Freakazoid, and oh shoot... I am forgetting another >.>

[13:29] <KyleHa> "proper clowning"

[13:29] <KatrinaTheLamia> also Reboot is fun to watch... but Season 3 and 4 got rather serious. However Season 4 is fun to parody. Who wouldn't want to be a Mainframe Neoviral?

[13:29] <wayland76> I was thinking more of "The Goon Show", a 1950s BBC Radio comedy that sometimes even had a script beforehand.

[13:30] <KatrinaTheLamia> wayland76, see, and you have just out crazied me ^.^

[13:30] <wayland76> Although I have only listened to the reruns :)

[13:30] <KatrinaTheLamia> I love the Goon Show... why didn't it occur to me ^.^

[13:30] <mkelly32> freakazoid... heh. the entire internet from 1998 in his head

[13:31] <wayland76> KatrinaTheLamia: What country?

[13:31] <KatrinaTheLamia> mkelly32, it could be worse. He could have Something Awful and 4chan in his head... but that wouldn't make for a very child friendly cartoon... I don't think even Heavy Metal magazine would dare run such a thing

[13:32] <masak> are List and Array iterable in some sense?

[13:32] <moritz_> masak: yes

[13:32] <mkelly32> and ricardo montalbán as his nemesis...

[13:32] <moritz_> you do that every day, no?

[13:32] <masak> moritz_: whiche sense is that?

[13:32] <moritz_> for @array { .. }

[13:32] <moritz_> that iterates over @array

[13:32] <moritz_> see S07 for the proposed low-level API

[13:32] <masak> moritz_: so they have a .get method, yes?

[13:33] <masak> moritz_: is there a role involved too?

[13:33] <masak> and does List and Array do that role themselves, or is it Positional that does it for them?

[13:33] <wayland76> Definitely a role

[13:33] <KatrinaTheLamia> Mr. W, I live in a Pirate Outpost in the Communist Terrorist Stronghold in the Frozen Arctic Tundra North of the 49th parallel... or at least that is what I gather my country is from American news... though they usually leave out the 49th Parallel bit... it helps when they don't give an actual location on the map.

[13:33] <mkelly32> they had a few star trek referennces ("ooey goey worms in your ear"), but i don't think they ever quite yelled "KAAAAHN!"

[13:33] <wayland76> It was designed by ruoso so it has to have a role :)

[13:34] <moritz_> masak: ruoso is the one to ask, if S07 isn't enlightening

[13:34] * masak tries S07 first, then ruoso 

[13:34] *** KyleHa left
[13:34] <wayland76> I did some S07 hacking, but most of the ideas came from ruoso

[13:34] * ruoso might be here... might not be here... who knows...

[13:35] <KatrinaTheLamia> schroedinger's ruoso?

[13:35] <wayland76> KatrinaTheLamia: I just remember hearing something about John Lennon trying to explain the Goon Show to Americans, so I wondered (I'm in .au, in case anyone cares) :)

[13:35] *** frew__ joined
[13:36] <wayland76> He may or may not have been, but he can't be any more -- we've observed him :)

[13:36] *** jauaor joined
[13:37] * ruoso hopes nobody tries to observe me

[13:37] <KatrinaTheLamia> heh... well, my mom is Orange Irish, and my dad spent most of his youth in Briton when grandpa was stationed there (technically Canada was still part of UK until like 1984, 1983)... so my parents had a lot of British influence. It just entered into me as I grew up.

[13:37] * wayland76 apologises to ruoso for dashing his hopes

[13:38] <KatrinaTheLamia> well... now that ruoso has been observed... care to swing him around my his tail?

[13:38] <masak> I don't quite get the answers I want from S07.

[13:38] <masak> ruoso: OH HAI.

[13:38] <wayland76> KatrinaTheLamia: I have American parents, but grew up in .au, and picked up some British related culture somehow

[13:39] * ruoso X|

[13:39] <masak> ruoso: if I promise not to observe you, can I ask some questions?

[13:39] <ruoso> masak, you can ask'em... and I'll try to answer... but I'm quite in a hurry

[13:39] <masak> ruoso: is the idea 'Array does Iterator' in some sense?

[13:39] * wayland76 does not swing ruoso, due to respecting people who are actually working on an implementation of Perl 6 :)

[13:40] <masak> ruoso: would this work: my @array; my $first-item = $array.Iterator.get;

[13:40] <KatrinaTheLamia> wayland76, well, from what I've seen of Aussies here in Canada, most of what Aussies say and do makes a lot more sense than what a lot of Americans suggest as being normal

[13:40] <ruoso> yes... it would...

[13:40] <ruoso> masak, but @array.get should work as well

[13:40] <ruoso> except that @array.get will consume the @array

[13:40] <masak> ruoso: what simple check can I do on an object to find out whether it'll behave like an iterator?

[13:40] <ruoso> while @array.Iterator.get won't

[13:40] <KatrinaTheLamia> wayland76, also, I think I am going to need to call you Bruce. Just to ease confusion around here.

[13:40] <masak> $obj.can('get')?

[13:41] *** wayland76 is now known as BruceLogicalPosi

[13:41] <ruoso> masak, $obj ~~ Iterator

[13:41] <KatrinaTheLamia> lmao

[13:41] <masak> ruoso: thanks. that's all.

[13:41] * BruceLogicalPosi tivismBradman

[13:41] <BruceLogicalPosi> There, now I got it all in

[13:41] *** BruceLogicalPosi is now known as wayland76

[13:42] <KatrinaTheLamia> Mr. W, care to remind #Perl6 of the faculty rules?

[13:43] <wayland76> KatrinaTheLamia: I would consider it, but that would probably contravene the #perl6 culture :)

[13:44] <KatrinaTheLamia> lol

[13:44] <missingthepoint> can I be Barry?

[13:44] <wayland76> Although strangely enough, there's an editor that (IIRC) does Perl 6 syntax highlighting called "Padre"

[13:44] <KatrinaTheLamia> missingthepoint, well, as long as you don't try to claim you are the Tick

[13:46] <KatrinaTheLamia> anyways... time to eat something... though, I didn't roll a 20 on kitchen appliances, so I cannot has waffles of +9/+9 delicious... so... I am think blueberry pancakes with maple syrup.

[13:46] <wayland76> wayland76 hates it when his server crashes due to being too cold (it's a weird bit of hardware)

[13:46] * missingthepoint hates it when BOSS's server crashes for no good reason

[13:47] <missingthepoint> oh, wait. there is a good reason. IT'S RUNNING WINDOWS

[13:47] <moritz_> usually electronics run *better* when cool :-)

[13:47] <wayland76> moritz_: Not this one.  Unless it's too warm to wear my jacket, the thing won't even boot.  It's a reproducible problem :)

[13:48] <wayland76> That's why I'm in the process of replacing it.  Should be done in a few weeks

[13:48] *** missingthepoint is now known as BarryCategorical

[13:48] * BarryCategorical ImperativeAblett

[13:49] <BarryCategorical> wayland76, we are similar, you and I

[13:49] <Su-Shee> understanding other people's code is really tiresome after a few hours. 

[13:49] <KatrinaTheLamia> BarryCategorical,  hmm... clearly it needs to run a real OS. I suggest until he learns better how to handle a computer, he runs Contiki OS on a good solid C=64

[13:49] <KatrinaTheLamia> BarryCategorical, IMO, it would be a vast improvement

[13:50] <BarryCategorical> the nick? :D

[13:50] * wayland76 is reading up on Barry now :)

[13:50] <wayland76> BarryCategorical: No ContikiOS on C64

[13:50] <wayland76> You've heard of C4, the explosive?

[13:51] <moritz_> .oO( my favourite :-)

[13:51] <wayland76> Well, C-64 is 16 times as explosive

[13:51] * BarryCategorical is suddenly vastly scarder of moritz_ ...

[13:51] <wayland76> That's why they used it on the moon mission :)

[13:51] <KatrinaTheLamia> I've had people scared I'd make C4 in High School... I will note, school life got a lot better for me after columbine ^.^

[13:52] * wayland76 somehow managed not to have too bad a school experience.  Not sure how that happened, though

[13:52] <BarryCategorical> ^.^

[13:52] * KatrinaTheLamia just realised that she is still an extremely young snake

[13:52] <moritz_> BarryCategorical: bombing over IRC is not yet ripe for a wide market

[13:52] <moritz_> so don't worry

[13:52] <KatrinaTheLamia> moritz_, yeah, that is why envelopes and anthrax were invented ^.^. They make great gifts ^.^

[13:52] * wayland76 lies on the floor, looking for carpet bombs, just in case :)

[13:53] <moritz_> KatrinaTheLamia: but they are also hard to deliver via IRC...

[13:53] <moritz_> anyway, I should point out that this channel is publicly logged :-)

[13:53] <KatrinaTheLamia> moritz_, meh, I've already long since been  put on the no fly list

[13:54] <KatrinaTheLamia> though, I do find that kind of retarded... there is one terrorist on a plane, and over fifty other people... I am sure the others can easily take him.

[13:54] <mkelly32> i used to be on that, too. at least, some M* Kelly was...

[13:55] <mkelly32> because, clearly, no terrorist would ever think to fly under an alias and use fake identification...

[13:55] <szbalint> some people were joking at YAPC::EU that americans wouldn't name buildings C1 to C8

[13:55] <szbalint> because someone might ask "where is C4?"

[13:56] <wayland76> No, that's N* Kelly.  

[13:56] <BarryCategorical> "it was liberated"

[13:56] <mkelly32> heh. that reminds me of a prank i heard of. someone got 4 pigs, labeled them "1", "2", "3", "5"... set them loose on a school campus. people spent all day trying to find pig #4.

[13:56] <KatrinaTheLamia> I lived in an apartment C5... everybody kept going to apartment C4 to find me for some odd reason though >.>

[13:56] <moritz_> somehow that reminds me of the disk world where the rooms where numberd 5, 6, 7, 7b, 9, ...

[13:56] <wayland76> They don't let him on planes because he won't take off his metal armour to go through security :)

[13:57] *** __ash__ joined
[13:57] <KatrinaTheLamia> wayland76, I would have figured it was R. Kelly... but then that joke was old and stupid the first time it was made.

[13:57] * jauaor lives in C1 apt 

[13:57] * KatrinaTheLamia didn't really get the whole R. Kelly case in the states... it really made no sense to her what so ever

[13:57] <jauaor> :P

[13:58] * wayland76 missed the R. Kelly and M. Kelly references, but posts http://images.google.com.au/images?hl=en&q=ned+kelly+armour&revid=583246249&ei=PFaNSt3VHJaIkQX_2cyZDA&sa=X&oi=revisions_inline&resnum=0&ct=broad-revision&cd=1&start=0 for people looking for the N Kelly reference

[13:59] <BarryCategorical> Barry and Bruce inflict massive Australian culture on #perl6...

[13:59] * mkelly32 is getting hilighted too many times!

[13:59] <jauaor> fame has a price

[13:59] * wayland76 remembers the difference between Australia and yoghurt

[13:59] <wayland76> ...

[13:59] <moritz_> just imagine how many times _why got hilighted :-)

[13:59] <wayland76> yoghurt has live culture :)

[14:00] *** azawawi left
[14:01] <masak> _why's disappearance has certainly made people appreciate the guy more.

[14:02] * moritz_ also liked his brother better when he was across the ocean

[14:03] <BarryCategorical> wow, _why really disappeared.

[14:03] *** frew__ left
[14:04] * wayland76 suddenly realises where he's seen the word "Lamia" before -- AD&D Mostrous Manual :)

[14:05] *** sri_kraih_ joined
[14:05] <KatrinaTheLamia> I am not that much of a monster... Hera just is jealous cause Zeus likes us better than her... hence a rather long slander campaign of the ages

[14:06] <KatrinaTheLamia> part of why it is so easy for me to be a Discordian ^.^

[14:06] <wayland76> Ah, yeah, you get that.  Those Greek gods, I dunno.  You and Arachne... :)

[14:07] <KatrinaTheLamia> well, the biggest issue was that the Greeks, great blokes, couldn't really be trusted with history. They suffered from indigestion you see ^.^

[14:08] * wayland76 wonders if he's missed the joke, unless it's that a bad past gives you bad history, and a bad repast gives you indigestion

[14:08] <KatrinaTheLamia> wayland76, ! Ah, in which case, it is time you were enlightened, Eris style.

[14:08] * KatrinaTheLamia grabs the link

[14:10] <KatrinaTheLamia> http://principiadiscordia.com/ << here we go wayland76 ... a treasure trove of enlightenment ^.^

[14:12] <Tene> KatrinaTheLamia: →←

[14:12] *** ejs left
[14:17] *** rfordinal joined
[14:21] *** sri_kraih left
[14:24] *** hercynium joined
[14:26] * KatrinaTheLamia cannot make out what Tene wrote...

[14:27] <Tene> KatrinaTheLamia: in ascii, -><-

[14:27] <Tene> five-fingered hand of eris

[14:27] <KatrinaTheLamia> ah ^.^

[14:27] <Tene> brb, teaching.

[14:27] <KatrinaTheLamia> yes, I am quite madly in love with Eris... she took my heart some time ago, and replaced it with a golden apple. I took that to mean I am very beautiful ^.^

[14:28] <Tene> A very reasonable interpretation.

[14:28] <KatrinaTheLamia> then all is lost ^.^

[14:29] *** arthur-- left
[14:29] *** arthur-- joined
[14:30] *** arthur-- is now known as arthur-_

[14:30] * jnthn back

[14:31] <KatrinaTheLamia> wb jnthn 

[14:31] <wayland76> jnthn: From the time I challenge KatrinaTheLamia for the title of channel clown, there's nothing worth backlogging

[14:31] *** Psyche^ joined
[14:31] <wayland76> (unless you count that ruoso said that Array does Iterator)

[14:32] <KatrinaTheLamia> wayland76, such is the nature of challenging somebody for channel clown ^.^

[14:32] <jnthn> I already knew that. ;-)

[14:32] * jnthn skips backlogging

[14:32] <KatrinaTheLamia> jnthn, also ruoso has been observed, that may be of note too ^.^

[14:32] *** BarryCategorical is now known as missingthepoint

[14:32] <wayland76> KatrinaTheLamia: Yeah, I know.  But I wanted jnthn to have some free time to do coding, since he's one of the two core developers of Rakudo Perl 6

[14:33] <masak> despite specifically hoping not to be observed.

[14:33] <wayland76> (unless I've missed another core developer)

[14:33] <__ash__> i have a question about class bodies that i am wondering if it some people may, are they supposed to be executable in the sense of how ruby's class bodies are executable? 

[14:33] <__ash__> s/may/may know/

[14:34] <moritz_> __ash__: class bodies are executed at compile time

[14:34] <moritz_> __ash__: and during execution they construct the class

[14:35] <KatrinaTheLamia> hmm... I should prolly head on down to my therapists... he may be worried about me...

[14:35] <szbalint> (short circuiting backlogging)++

[14:36] <KatrinaTheLamia> hmmm

[14:36] <KatrinaTheLamia> (-><-)++

[14:36] <wayland76> Now for a demo:

[14:37] <wayland76> @karma (-><-)

[14:37] <KatrinaTheLamia> @karma -><-

[14:37] <lambdabot> (-><-) has a karma of 1

[14:37] <lambdabot> -><- has a karma of 0

[14:37] <wayland76> @karma wayland

[14:37] <lambdabot> wayland has a karma of 125

[14:37] <KatrinaTheLamia> hmm... well atleast it is not 1006... prolly about the level of half a Radita.

[14:37] <KatrinaTheLamia> Raditz*

[14:38] *** rfordinal left
[14:38] <wayland76> (afk, back in 5)

[14:39] *** Patterner left
[14:39] *** Psyche^ is now known as Patterner

[14:39] <pmichaud> Good morning, #perl6

[14:39] <jnthn> lolitspmichaud

[14:40] *** nErVe joined
[14:41] *** Su-Shee left
[14:41] *** azawawi joined
[14:43] <moritz_> oh hai

[14:44] <azawawi> moritz_: any idea what PERL6HERE is doing in Cursor.pmc and STD.pm ?

[14:44] *** molaf joined
[14:44] <moritz_> azawawi: no.

[14:44] <azawawi> moritz_: the default value is a strange utf-8 that is showing as a block here

[14:45] *** KyleHa joined
[14:45] <moritz_> then you know more than I do

[14:45] <azawawi> :)

[14:46] *** azawawi left
[14:52] *** DanielC_away is now known as DanielC

[14:53] *** mikehh_ joined
[14:54] *** payload joined
[14:55] <__ash__> jnthn: if I were to try to get $a.Role::foo(); to work, would that be a daunting task you think? 

[14:56] *** nihiliad joined
[14:57] <jnthn> __ash__: I was pondering hacking the punner.

[14:57] <jnthn> Though was wondering if I might be able to think of something cleaner.

[14:58] <__ash__> whats the punner?

[14:59] <wayland76> 'night all.  1am means it's after my bedtime

[14:59] *** cotto left
[14:59] <wayland76> __ash__: When a role is made to work like a class, we say it's "punned" as a class.  Does that help?

[15:00] <__ash__> okay, is that when it makes a blank object and applies the role to it?  kinda like calling new on a role?

[15:05] *** zloyrusskiy joined
[15:06] <jnthn> __ash__: Yes, pretty much

[15:06] <jnthn> Well, .new on the role puns it and instantiates the pun.

[15:07] <jnthn> Basically, find_method on a role hands back an invokable that puns and re-dispatches.

[15:07] <jnthn> We may be able to handle this by detecting in that invokable (I think it's defined in src/classes/Role.pir) that we haven't actually got a role as the invocant...

[15:07] <jnthn> And then do something from there.

[15:08] <jnthn> It'll probably take a little experimenting.

[15:08] *** zloyrusskiy left
[15:09] *** mikehh left
[15:10] *** zloyrusskiy joined
[15:10] *** cotto joined
[15:11] <__ash__> in the !select method? 

[15:12] <jnthn> __ash__: No

[15:12] <jnthn> Right at the bottom

[15:13] <jnthn> See P6opaque.pmc for the name...I forget it off hand (sorry, a bit distracted dealing with some other bits...)

[15:13] <dalek> rakudo: e0820fa | pmichaud++ | build/Makefile.in:

[15:13] <dalek> rakudo: Patch to allow Windows to link with ICU.

[15:13] <dalek> rakudo: Patch courtesy Fran􏿽xE7ois Perrad [email@hidden.address]
[15:13] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/e0820fa5d6c38dc79dfd7e6005b5588916a80207

[15:14] <__ash__> no worries, i am not trying to keep you from getting your work done, i might play around in the Role.pir file and see if i can get it to explode, or work, probably explode though

[15:14] *** zetta left
[15:20] *** rfordinal joined
[15:21] *** justatheory joined
[15:22] *** payload left
[15:27] *** eldragon2_ joined
[15:28] *** eldragon2 left
[15:28] *** cj joined
[15:29] <cj> diakopter: any news on ironperl? :)

[15:29] *** eldragon2_ is now known as eldragon2

[15:33] <jnthn> __ash__: OK, I can concentrate on Rakudo again now. :-)

[15:33] <jnthn> __ash__: It's .sub '!pun_helper' that I was meaning.

[15:34] <__ash__> kk, i saw that one

[15:35] <jnthn> Hmm. Looking it now I'm not quite so sure though.

[15:37] *** nErVe left
[15:38] <__ash__> i think right now its the !select that throws the error

[15:38] <jnthn> What is the error again?

[15:38] <jnthn> is it that it can't call !select?

[15:38] <__ash__> Method '!select' not found for invocant of class 'Foo'

[15:38] <jnthn> Right.

[15:39] <jnthn> That's because normally you do TheRole.meth

[15:39] <jnthn> And so the first parameter is TheRole

[15:39] <jnthn> Whereas here it's not.

[15:40] <__ash__> i am not sure if this is related, or something to worry about right now, but indirectly calling a role method (like how you can with a class) doesn't work either

[15:41] <__ash__> it gives invoke() not implemented in class 'Undef' as its error

[15:41] <jnthn> __ash__: Code example?

[15:41] <moritz_> rakudo: role A { method foo { 'bar' } }; class B does A { }; B.new.'foo'.say

[15:41] <p6eval> rakudo 0d4fe0: OUTPUT«bar␤»

[15:41] <moritz_> seems to work.

[15:41] * moritz_ wonders if we have tests for that

[15:42] <jnthn> moritz_: I dunno. We don't have a test for that glorious hyper + .+ + candidate list dispatch I demonstrated yesterday either though ;-)

[15:42] <__ash__> rakudo: role A { method foo { 'bar' } }; class B does A { }; my B $b .= new; A::foo $b; 

[15:42] <p6eval> rakudo 0d4fe0: OUTPUT«Null PMC access in invoke()␤in Main (/tmp/BPUPLKpzHd:2)␤»

[15:42] <jnthn> __ash__: Oh, that.

[15:42] <jnthn> I'm not convinced that should work..

[15:43] <jnthn> What if it's a parametric role, and all that...

[15:43] *** carlin_ joined
[15:43] <moritz_> uhm, that's trying to call a method as a sub

[15:43] <moritz_> don't think that's supported at all

[15:43] <__ash__> oh, okay, i wasn't sure if it was in the spec or not, i just assumed it worked for classes, and since a role method is essenctially a class method i figured it would function similiarly

[15:44] <jnthn> moritz_: It is, and it's fine in a class.

[15:44] <jnthn> Well the thing is that in a sense roles are always parametric...

[15:44] <__ash__> rakudo: role A { method foo { 'bar' } }; class B does A { }; my B $b .= new; B::foo $b;

[15:44] <p6eval> rakudo 0d4fe0: OUTPUT«Null PMC access in invoke()␤in Main (/tmp/KDenz5Ocas:2)␤»

[15:45] <jnthn> __ash__: Right, but B::foo does not exist.

[15:45] <jnthn> (We shouldn't Null PMC Access, but we certainly should not find anything there.)

[15:45] <jnthn> Anyway, back to the task at hand...

[15:46] <jnthn> I'm tempted as a first cut to, in P6opaque, attach the role to the clone'd !pun_helper just as we attach the name now.

[15:47] <jnthn> That'd get us some of the way.

[15:48] <jnthn> Then after that it can be handled in !pun_helper.

[15:48] *** moritz_ sets mode: +oo jnthn __ash__

[15:48] *** jnthn is now known as wesome_i_haz_op

[15:48] <wesome_i_haz_op> woo

[15:48] *** wesome_i_haz_op is now known as jnthn

[15:49] <moritz_> prepared for a *really* bad programming joke? http://ircz.de/static/pics/2009_06_29_19_47_28/nerdcore017.gif

[15:49] <TimToady> i can haz op 2?

[15:49] <phenny> TimToady: 19 Aug 10:21Z <wayland76> tell TimToady Next time I mess up the documentation, feel free to tell me to fix it.  If I'm in documentation mode, I can usually find the time

[15:50] *** moritz_ sets mode: +o TimToady

[15:50] <moritz_> TEHR U GO

[15:50] <TimToady> kthnx

[15:51] <jnthn> moritz_: That's...terrible.

[15:52] <__ash__> i didn't see it coming, then it happened... i just died a little inside... *now to forward to all my programming buddies* 

[15:52] *** zloyrusskiy left
[15:52] *** jferrero joined
[15:54] <jnthn> OK, so if I'm in a branch in git and I want to pull the latest changes in from master

[15:55] <jnthn> I just do git rebase master ?

[15:55] <masak> yup.

[15:55] <masak> jnthn++

[15:55] <moritz_> and cross your fingers :-)

[15:56] <pmichaud> TimToady: ...did you learn any new advanced hieroglyphics that we can stick into Perl 6?  ;-)

[15:56] <jnthn> masak: omg it worked!

[15:56] <jnthn> ;-)

[15:56] *** dnukem left
[15:56] *** cdarroch joined
[15:56] <masak> jnthn: I know! rebase is 21th century technology, I tell you!

[15:56] * jnthn continues happily breaking stuff in his branch.

[15:58] <TimToady> pmichaud: I want opening and closing cartouche characters now for brackets

[15:58] *** payload joined
[16:00] * masak adds a (hopefully) motivating SYNOPSIS to the Tufte README

[16:01] <KyleHa> What's a cartouche?  Something to do with automobiles?

[16:01] <moritz_> masak++ # Just Ducking Foo It

[16:01] <masak> :>

[16:02] <DanielC> Can I get the Tufte URL again please? I forgot to bookmark it.

[16:02] <KyleHa> I'm thinking "back bumper".

[16:02] <moritz_> DanielC: http://github.com/moritz/tufte/tree/master

[16:03] <jnthn> Tufte?

[16:03] <DanielC> *click*

[16:03] <DanielC> *bookmark*

[16:03] *** hercynium left
[16:03] <jnthn> oh, that's what it ended up getting called

[16:03] <moritz_> right.

[16:03] <jnthn> Well, it's better than PlotHead. ;-)

[16:03] <moritz_> funny thing is that Mr. Tufte seems to criticize the way normal charts/plots are done

[16:04] <moritz_> like we want to produce them :-)

[16:04] <DanielC> jnthn: http://en.wikipedia.org/wiki/Edward_Tufte

[16:04] <masak> moritz_: well, let's try to make him at least a little proud. :)

[16:04] <moritz_> masak: aye

[16:04] <KyleHa> I like PlotHead, but I might have gone with PlotTwist.

[16:05] <moritz_> heh, SVG supports twisting coordinate transformations :-)

[16:05] <moritz_> or something like that

[16:05] <DanielC> If we ever find another name we like better we can change name.

[16:06] <KyleHa> Maybe you could get some US Govt attention by calling it TerroristPlot.

[16:06] <reqamst> yes, name isin't the most important

[16:07] <DanielC> KyleHa: I once heard about an airport announcement looking for a guy called Al Kyda.

[16:07] <moritz_> right, beautiful charts are

[16:08] <KyleHa> DanielC: I'd laugh if it weren't plausible.

[16:09] <DanielC> KyleHa: I don't think the guy was in trouble. I got the impression that it was just a funny coincidence. But I don't know.

[16:10] *** M_o_C left
[16:10] <DanielC> masak: Looking at the README... what do the colons mean? As in :width => 300

[16:10] <masak> oops, did I miss those? :/

[16:10] * masak checks

[16:10] <reqamst> ?

[16:10] <masak> yup, thanks.

[16:10] <DanielC> Ahh... they are a Rubyism?

[16:11] *** payload left
[16:11] <mkelly32> does => not auto-quote the LHS anymore?

[16:11] <masak> DanielC: sort of... I took the Ruby code and translated it. missed those colons.

[16:11] <masak> fixed.

[16:11] <masak> DanielC++

[16:11] <DanielC> k

[16:12] <DanielC> @karma

[16:12] <lambdabot> You have a karma of 21

[16:12] <masak> the previous code would parse, but probably NDWYM.

[16:12] *** masak left
[16:15] <__ash__> jnthn: oh, i found where i got the impression you should be able to indirectly call role methods, in S12, methods, indirect notation, but i just realized its a different syntax than what i was referring to, it would be more like Role::method $obj: ; (forgot about the : in the indirect notation)

[16:15] <__ash__> well, theoretically, if you can do $obj.Role::method(); then according to that Role::method $obj: ; should work also 

[16:16] <jnthn> __ash__: Ah, that is different 'cus I think we essentially emit the same code.

[16:16] <jnthn> That is, Role::method $obj: ; should probably result in the same PAST as $obj.Role::method

[16:16] <__ash__> yeah, i see that now, i forgot about the : making it indirect

[16:17] <KyleHa> @karma

[16:17] <lambdabot> You have a karma of 40

[16:17] <KyleHa> @karma kyle

[16:17] <lambdabot> kyle has a karma of 256

[16:17] <KyleHa> Nyuck nyuck nyuck.

[16:21] *** alester joined
[16:21] *** DanielC left
[16:35] <__ash__> well, i have to head to class, jnthn i am going to poke around in the Role.pir to see if i can learn anything more about how role's methods work and how to get $a.Role::foo() to work

[16:37] <jnthn> __ash__++: great!

[16:37] <jnthn> Have fun. ;-)

[16:38] <missingthepoint> DanielC: TV show, here... "Chaser's War on Everything" :)

[16:38] *** __ash__ left
[16:39] <missingthepoint> Rubyism: :foo is a symbol

[16:40] <missingthepoint> that is, ":foo" refers to a Symbol object

[16:40] *** szabgab joined
[16:40] <missingthepoint> and every instance of :foo in your code refers to the same symbol object

[16:40] <missingthepoint> rationale: less memory usage, apparently

[16:40] <missingthepoint> (not sure i buy that)

[16:43] <mkelly32> well, each :foo is just a reference to some global :foo. whereas each "foo" is a reference to a different "foo", as i understand it

[16:43] <missingthepoint> masak++ # naming, i can haz tufte book amazon?

[16:44] <TimToady> better to just keep track of which things are mutable/immutable and let the system decide whether to coalesce immutables

[16:45] <missingthepoint> TimToady: why let the system decide as opposed to the user?

[16:46] <TimToady> because it's really "make", not let

[16:46] <TimToady> and the system is the slave, not the user

[16:46] <mkelly32> well, i think "foo" is mutable in ruby, isn't it? don't think they have separate String and StringBuffer or whatever, like Java

[16:47] <missingthepoint> well, amen to the second point... is that all? i'm interested in the semantics of similar stuff in perl 6, seeing i'm supposed to be helping masak with his scruffy port :)

[16:48] <TimToady> S02 takes a first crack at documenting which types are mutable and which aren't

[16:51] *** lionWrk is now known as LionMadeOfLions

[16:51] <Tene> Sup dawg, I heard you like lions.

[16:53] <missingthepoint> Tene: ?       :)

[16:54] *** szabgab left
[16:57] <Tene> missingthepoint: "10:51 -!- lionWrk is now known as LionMadeOfLions"

[16:58] <Tene> I made a reference to an INTERNETS MEME.  The implied continuation of my statement was "So I put a lion in your lion."

[16:58] <missingthepoint> oh i missed that one. where's the meme school?

[16:58] <missingthepoint> (waiting for someone to say 'here')

[16:59] <moritz_> it's called 4chan

[16:59] <jnthn> How is meme formed? How man get knowledge?

[16:59] <missingthepoint> moritz NEWLY updated and jnthn. you have both nearly made me spit coke over my keyboard.

[17:00] <missingthepoint> (moritz_: java joke.)

[17:00] * Tene lol'd.

[17:08] *** nihiliad left
[17:08] *** nihiliad joined
[17:09] <mberends> missingthepoint missed a point. typical.

[17:09] <missingthepoint> mberends doesn't know how right he is... :P

[17:10] *** nihiliad left
[17:10] *** nihiliad joined
[17:11] <reqamst> I first time compiled rakudo and it's sloooow. :(

[17:11] <moritz_> scruffy makes heavy use of delegation, including lvalues

[17:11] * moritz_ wonders if rakudo supports that

[17:12] <jnthn> moritz_: Delegation as in, handles?

[17:12] <moritz_> jnthn: right

[17:12] <jnthn> Rakudo support for handles is quite featureful.

[17:12] <jnthn> And tested.

[17:12] <reqamst> there will be some hard optimisations?

[17:12] <moritz_> even for lvalues?

[17:12] <moritz_> reqamst: there will.

[17:12] <jnthn> But I'm not sure it's had enough abuse^W yet.

[17:13] <jnthn> moritz_: I'm not sure if that's any different that lvalue routines in general?

[17:13] * moritz_ tests

[17:13] *** nErVe joined
[17:13] <[particle]> reqamst: yes, someday

[17:14] <moritz_> Null PMC access in find_method()

[17:14] <jnthn> reqamst: There are various bottlenecks. One of them is calling / invocation.

[17:14] <takadonet> reqamst: They are mostly working on features first

[17:14] *** nErVe left
[17:14] <jnthn> reqamst: That particular area will improve in the not too distant future.

[17:14] <jnthn> But there's still plenty of others.

[17:14] *** zloyrusskiy joined
[17:14] <jnthn> moritz_: Heh, file rakudobug ;-)

[17:15] <moritz_> jnthn: yes, but I'll commit tests first

[17:15] <reqamst> Good to know. :) Today I need 10 seconds to run 'say "hello"'

[17:16] <moritz_> reqamst: that *is* slow - 1.6s on my machine

[17:16] <missingthepoint> reqamst: just curious, what's your hardward like? :)

[17:16] <reqamst> yes, my testmachine is old (celeron 900mhz, 256ddr ram), but...

[17:16] <jnthn> < 1s on mine...

[17:16] <moritz_> reqamst: you can also try to configure parrot with --optimize

[17:16] <reqamst> moritz_: oh, I will try

[17:17] * moritz_ tries that too

[17:17] <reqamst> it's pure arch linux, without X

[17:24] * jnthn almost gets the container traits refactor working...

[17:28] <moritz_> reqamst: with optimized parrot it's "only" 1.1s here (down from 1.6)

[17:30] <missingthepoint> rakudo: say 10 * (1.1 / 1.6)

[17:30] <p6eval> rakudo 0d4fe0: OUTPUT«6.875␤»

[17:35] <reqamst> this could mean 5sec faster for me

[17:36] <reqamst> and getting rakudo usable

[17:37] <moritz_> jnthn: it turns out lvalue method delegation *does* work...

[17:37] <moritz_> jnthn: however there's something fishy with initializing the attribute on which the 'handles' is defined

[17:38] <moritz_> actually it's nto related to 'handles' at all ;-)

[17:39] <jnthn> moritz_: Ah, OK.

[17:39] * jnthn wonders if this is good or bad. :-)

[17:39] <moritz_> rakudo: class A { }; class B { has A $.x; submethod BUILD { $!x .= new() } }; say B.new.x.WHAT

[17:39] <p6eval> rakudo 0d4fe0: OUTPUT«Failure()␤»

[17:40] <moritz_> jnthn: that should be A()

[17:40] <moritz_> rakudo: class A { }; class B { has A $.x; submethod BUILD { $!x .= new() } }; say B.new.x.defined

[17:40] <p6eval> rakudo 0d4fe0: OUTPUT«0␤»

[17:41] <jnthn> moritz_: Ah, that bug.

[17:41] <moritz_> so it's know=

[17:41] <moritz_> ?

[17:41] <moritz_> and ticketed?

[17:42] <jnthn> I'm pretty sure I saw a ticket related to it.

[17:42] <moritz_> ok

[17:42] *** pugs_svn joined
[17:45] <pugs_svn> r28042 | moritz++ | [t/spec] simplify and unfudge lvalue delegation tests

[17:46] <reqamst> o, pugs is alive

[17:46] <frew> reqamst: that's the spectest

[17:46] <frew> not really pugs itself

[17:46] <reqamst> mhm

[17:46] <moritz_> it just lives in the pugs repo

[17:47] <reqamst> why is it died?

[17:47] <reqamst> people don't like haskell?

[17:47] <moritz_> because audreyt++ got ill and had to re-focus after her recovery

[17:52] <missingthepoint> how is she doing?

[17:53] <moritz_> I think she's doing fine

[17:53] <moritz_> but she doesn't do so much publicly exposed hacking anymore (which caused lots of stress, I suppose)

[17:55] <jnthn> rakudo: my Int $x = 4.2;

[17:55] <jnthn> rakudo: my Int $x = 4; $x = 4.2;

[17:56] <p6eval> rakudo 0d4fe0: OUTPUT«Assignment type check failed; expected Int, but got Num␤in Main (/tmp/gxAZpxEcZj:2)␤»

[17:56] <p6eval> rakudo 0d4fe0: OUTPUT«Assignment type check failed; expected Int, but got Num␤in Main (/tmp/IqZiKWkP2z:2)␤»

[17:56] <missingthepoint> ok, good to hear. tis a shame when a community loses someone of that skill level... look what just happened with _why

[17:56] *** alester left
[17:57] <moritz_> aye

[17:57] <moritz_> she does continue to contribute to perl - just look at her CPAN dir

[17:59] <pmichaud> back from lunch

[17:59] <missingthepoint> aye.

[18:00] *** KyleHa1 joined
[18:00] *** KyleHa left
[18:02] <missingthepoint> oh hai pmichaud.

[18:04] *** arthur-_ left
[18:04] *** araujo left
[18:04] *** unitxt left
[18:04] *** ascent left
[18:04] *** obra_ left
[18:04] *** omega_ left
[18:04] *** broquaint left
[18:04] *** dalek left
[18:04] *** ingy left
[18:04] *** arthur-_ joined
[18:04] *** araujo joined
[18:04] *** unitxt joined
[18:04] *** obra_ joined
[18:04] *** omega_ joined
[18:04] *** broquaint joined
[18:04] *** ascent joined
[18:04] *** ingy joined
[18:04] *** dalek joined
[18:05] *** rfordinal left
[18:05] *** he_ left
[18:05] *** cxreg left
[18:05] *** wayland76 left
[18:05] *** literal left
[18:05] *** tarbo2_ left
[18:05] *** guest_007 left
[18:05] *** p6eval left
[18:06] *** rfordinal joined
[18:06] *** literal joined
[18:06] *** guest_007 joined
[18:06] *** wayland76 joined
[18:06] *** cxreg joined
[18:06] *** tarbo2_ joined
[18:06] *** p6eval joined
[18:06] *** he_ joined
[18:07] <jnthn> gah, so close and yet so far

[18:07] <jnthn> ok, dinner break

[18:13] *** simcop2387 left
[18:23] <nicomen> Solved the remaining issues with perl6 here, but forgot to write it down! :-) http://my.opera.com/Wargamez/albums/showpic.dml?picture=11762449&album=859407

[18:31] <missingthepoint> pmichaud: did you see the progress on csv?

[18:32] *** simcop2387 joined
[18:33] <mikehh_> rakudo (e0820fa) builds on parrot r40676 - make test PASS, make spectest (up to 28042) 3 tests fail - Ubuntu 9.04 amd64 (gcc)

[18:33] <mikehh_> t/spec/S06-advanced_subroutine_features/wrap.rakudo fails with Lexical '@log' not found after ok 6 - wrapper after

[18:34] <mikehh_> t/spec/S04-declarations/my.rakudo - Failed test:  48

[18:34] <mikehh_> t/spec/S29-context/eval.rakudo - Failed test:  1

[18:36] *** pmurias joined
[18:36] <pmurias> hi

[18:36] <lambdabot> pmurias: You have 1 new message. '/msg lambdabot @messages' to read it.

[18:38] *** szabgab joined
[18:38] <pmurias> ruoso: re including smop test in p5 build i haven't tried it yet, but i'll look into it

[18:42] *** M_o_C joined
[18:45] *** masak joined
[18:45] *** zloyrusskiy left
[18:45] <missingthepoint> pmichaud: http://github.com/bpetering/Text--CSV/blob/0002814e4b3899f915ff449f32766dbf5c2b8e50/parse_spectest_progress.pl

[18:46] <moritz_> missingthepoint: we should plug that into SVG::Plot somehow to generate the graphics in Perl 6

[18:47] <moritz_> which means I have to patch it to support multiple data sets ;-)

[18:48] <missingthepoint> ;)

[18:48] * PerlJam is sleepy today

[18:49] <moritz_> missingthepoint: each step closer to self-hosting is a success

[18:49] <missingthepoint> moritz_: indeed.

[18:50] *** [particle] left
[18:50] <missingthepoint> dunno what you think of ray kurzweil, but i just watched a talk of his - "15 years and 31 days"

[18:50] *** zloyrusskiy joined
[18:50] * moritz_ doesn't know him at all

[18:51] *** [particle] joined
[18:51] <missingthepoint> "the singularity is near"... ?

[18:51] <masak> and Perl 6 is the language which will get us there.

[18:52] <missingthepoint> masak++, a man after my own heart :P

[18:52] <masak> missingthepoint: do you happen to have a URL?

[18:52] <moritz_> missingthepoint++ # nice work with Text::CSV

[18:52] <masak> waitwait, there's a Text::CSV now? :)

[18:53] <moritz_> http://github.com/bpetering/Text--CSV

[18:53] <masak> missingthepoint: we should probably merge our projects. :)

[18:53] <missingthepoint> www.ted.com/index.php/talks/ray_kurzweil_on_how_technology_will_transform_us.html

[18:53] <masak> thanks.

[18:54] <missingthepoint> obvious parallels to perl 6. :)

[18:55] <masak> ah. yes, I saw that talk not so long ago.

[18:55] <moritz_> missingthepoint: it would be nice if you placed the modules into a lib/ directory, which is quasi standard for perl modules

[18:55] <missingthepoint> masak: key phrase for your blogging: "15 years and 31 days"

[18:56] <masak> I think I missed when he said that, though.

[18:56] <missingthepoint> moritz_: true... i intend a bit of work on T::CSV soon :)

[18:57] <missingthepoint> masak: about sequencing HIV versus SARS

[18:57] <masak> missingthepoint: oh, aha.

[18:57] <masak> I recall.

[18:57] *** rfordinal left
[18:57] <missingthepoint> masak: you have an amazing memory. how long ago did you watch that? o

[18:57] <masak> yes, there are obvious parallels to Perl 6 there, indeed.

[18:57] <missingthepoint> ... _O

[18:58] <masak> missingthepoint: perhaps two weeks ago.

[18:58] <missingthepoint> _O

[18:59] <masak> "dear diary. today we invented the continuation-based smiley on #perl6..."

[18:59] *** payload joined
[18:59] <missingthepoint> nono, you're making me laugh, and ppl are sleeping! :)

[19:00] <masak> missingthepoint: now you've just made it a challenge instead. :P

[19:00] * moritz_ still admires the VVLLSS LOLSPK

[19:00] <masak> isn't that 'VWLLSS'?

[19:00] <masak> and 'LLSPK'? :)

[19:00] <moritz_> you know that lolcats can't spell ;-)

[19:00] <masak> oh, right.

[19:00] <masak> LOLICANTSPEL

[19:01] <missingthepoint> lolcats spell excellently in a non-standard english orthography.

[19:02] <masak> I wish I could believe that.

[19:02] <moritz_> if you transform the coordinate system all lines are straight ;-)

[19:02] <missingthepoint> moritz_: NOT YOU TOO!?!?!

[19:02] <masak> there are many findings about Lolspeak that I've made reading the Lolcat Bible, that I haven't blogged about or otherwise shared.

[19:03] <masak> one is that (surprise, surprise) the Lolcat Bible is not a quality work.

[19:03] <dalek> rakudo: 9716d3f | pmichaud++ | docs/spectest-progress.csv:

[19:03] <dalek> rakudo: spectest-progress.csv update: 431 files, 12371 passing, 0 failing

[19:03] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/9716d3f166f8be14eea0d7acb08b5a31014c1b42

[19:03] <masak> and that's understating things a bit.

[19:03] <missingthepoint> masak: i used to work in a christian bookstore. there's an "Aussie bible", with, well.... predictable content :D

[19:04] <masak> oh my.

[19:04] <masak> doesn't the original bible contain enough predictable content?

[19:07] * missingthepoint breaks uncomfortable silence...

[19:07] <missingthepoint> ... so you were making me laugh? :)

[19:08] <masak> yeah, but I forgot how.

[19:08] <masak> let's talk about our duplicated efforts instead.

[19:08] <missingthepoint> done.

[19:09] <missingthepoint> so i have some thoughts about Perl 6 csv parsing.

[19:09] <masak> I'll have a look at your Text::CSV, and you can look at my CSV, and then we can merge them, preferably in your repository.

[19:09] <missingthepoint> why mine?

[19:09] <missingthepoint> yours is more "central"

[19:09] <masak> I doubt that.

[19:10] <moritz_> on a surface of a sphere nothiing is more central ;-)

[19:10] <missingthepoint> oi!

[19:10] <masak> I did things in the wrong order, I implemented CSV first, and then started studying how CSV worked.

[19:10] <jnthn> I've done that with Perl 6 occasionally.

[19:11] <jnthn> ;-)

[19:11] <missingthepoint> well, i went extra-dimensional: started porting Text::CSV, then learned how it worked, then learned enough perl6 to do so :S

[19:11] <masak> missingthepoint: wow, you already have more code than I. :)

[19:13] <missingthepoint> moritz_: "oi" is Australian for "hey you, stop that" :)

[19:13] <missingthepoint> pronounced like "oy" in "oy vey"

[19:14] * PerlJam likes the methaphors clothed_field and nude_field

[19:14] <PerlJam> good names

[19:14] <moritz_> missingthepoint: telling me to stop shilling semi-scientific bullshit won't do you any good ;-)

[19:14] <masak> for some reason, I associate 'oi' with the Internet Oracle. as in 'oi, Zadoc!'.

[19:15] <masak> moritz_: keep on shilling semi-scientific bullshit!

[19:15] <PerlJam> masak: you're more connected, thus seemingly more "central"

[19:15] <missingthepoint> PerlJam: exactly.

[19:16] <masak> PerlJam: how do you count conntections? module dependencies?

[19:16] <moritz_> PerlJam: proto makes everything a distance "1" from itself

[19:16] <missingthepoint> so to prevent code duplication, (ie multiple Text::CSVs), i vote for masak's github.

[19:16] <PerlJam> masak: *you* are more connected :)

[19:17] <masak> missingthepoint: our codebases are already very different. I don't see how we can easily merge them.

[19:17] *** hercynium joined
[19:17] <masak> but I'm already willing to change the name of mine s/CSV/Text::CSV/, in order to... uh... increase confusion. never mind.

[19:17] <[particle]> make the module name the same, and change the authority :)

[19:18] <masak> NYI, but good idea.

[19:18] <moritz_> swap module name and authorities

[19:18] <[particle]> that's the easiest merge, let CPAN fight it out :)

[19:18] <moritz_> use masak :auth<Text::CSV>;

[19:18] <masak> :)

[19:18] <missingthepoint> actually, i vote for getting rid of 'C' entirely.

[19:18] <masak> ENOCPAN.

[19:18] <masak> moritz_: :P

[19:18] <PerlJam> missingthepoint: me too.

[19:18] <PerlJam> missingthepoint: xSV ?

[19:18] <[particle]> IP6AN

[19:18] <[particle]> incomprehensible perl 6 archive network

[19:19] <missingthepoint> PerlJam: too p5-internalsy

[19:19] <masak> missingthepoint: Text::SV?

[19:19] <moritz_> text is certainly a scalar values, yes ;-)

[19:20] <missingthepoint> masak: ok... still in Text::?

[19:20] <PerlJam> heh

[19:20] <missingthepoint> moritz_: my thoughts exactly :D

[19:20] <PerlJam> context is king.  Only a minority of people are going to associated SV with perl 5

[19:20] <moritz_> PerlJam: I know

[19:21] <PerlJam> (it just so happens that some of that minority is probably a majority of the active #perl6 crowd right now, but still  :)

[19:21] <masak> remember, we want something that's just like CPAN, preferably _is_ CPAN, but it should also contain all manner of Parrot-based language modules, except CPAN only accepts Perl things, and it should be distributed like github, and it should have a cool name, except there's no consensus at all about the name. and someone needs to implement the thing, too.

[19:21] <missingthepoint> but still, i concur

[19:21] <TimToady> I think I may have discovered the coercion declaration syntax

[19:21] <masak> oh?

[19:21] <TimToady> my Foo() $x;  # short for my Foo(Any) $x;

[19:21] <TimToady> std: my Int() $x;

[19:21] <p6eval> std 28042: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused (two terms in a row?) at /tmp/qiwNlfCSqn line 1:␤------> [32mmy Int() [33m⏏[31m$x;[0m␤    expecting any of:␤       bracketed infix␤  infix stopper␤    standard stopper␤ statement modifier loop␤  terminator␤     trait␤FAILED 00:02 38m␤»

[19:22] <TimToady> currently illegal

[19:22] <masak> STD says no.

[19:22] <jnthn> TimToady: That means it coerces on each assignment?

[19:22] <TimToady> I haven't taught it yet :)

[19:22] *** ispy_ left
[19:22] <moritz_> TimToady: should that be the same as 'my $x as Foo'?

[19:22] <TimToady> my Foo() @foo = "x" xx *

[19:23] <TimToady> don't think so, if as is returning an rvalue

[19:23] <TimToady> anyway, it looks like in declarative context we have () available after typenames

[19:23] <jnthn> my Foo() @foo = "x" xx *; # what does that boil down to?

[19:24] <TimToady> my Foo @foo = map { Foo($_) }, "x" xx 8;

[19:24] <PerlJam> Hmm.  Why not?  we already have [] and {} after typenames

[19:24] <TimToady> and Foo($x) as rvalue is a coercion

[19:24] <jnthn> TimToady: Hmm? I meant more, my Foo @foo creates an Array[Foo]

[19:24] <TimToady> it's still an array of Foo

[19:25] <TimToady> I think

[19:25] <TimToady> storage-wise

[19:25] <jnthn> That's awkward.

[19:25] <TimToady> but it's an array of Foo() that knows it accepts Any

[19:25] <PerlJam> and if I think of coercion as a transformation function, the my Foo() $x; makes good mnemonic sense too

[19:26] <TimToady> so my Foo() @x; @x[42] = $nonfoo; should still try to do Foo($nonfoo) coercion

[19:26] <TimToady> it's advertised as Any in the sig

[19:26] <moritz_> as Any(Foo)? ;-)

[19:26] <jnthn> TimToady: What do we parameterize a role with?

[19:26] <PerlJam> TimToady: but what else goes in the ()?   would we have things like  my Foo(Array of Int) @foo;  ?

[19:27] <jnthn> In order to ask fro this?

[19:27] <jnthn> TimToady: I can imagine this may work:

[19:27] <TimToady> any type you want to advertise it as accepting goes inside

[19:27] <[particle]> my SomeClass() $obj = $some_sig;  # would this run .new or .BUILDALL or just fail to coerce?

[19:27] <TimToady> but default is Any

[19:27] <PerlJam> okay

[19:28] *** synth^2 joined
[19:28] <PerlJam> and multiple coercions?

[19:28] <TimToady> it would depend on whether anyone defined coercion to SomeClass

[19:28] <jnthn> my Foo() @x; # really means: subset TEMP of Any where -> $x is rw { $x = Foo($x) }; Array[TEMP]

[19:28] <TimToady> it still depends on SomeClass dispatching to &.()

[19:28] <jnthn> However, if youdo that

[19:28] *** synth^3 joined
[19:29] <jnthn> Then you can't use multiple dispatch to distinguish @x and @y in my Foo() @x and my Bar() @x.

[19:29] <jnthn> That may be surprising.

[19:29] <TimToady> I don't see the problem offhand

[19:30] <TimToady> what you just said doesn't make sense to me

[19:30] <jnthn> ...

[19:30] <moritz_> well, we want Turing complete multi dispatch at one point

[19:30] <jnthn> You didn't actually answer my original question.

[19:30] <moritz_> so we should be able to dispatch on everything ;-)

[19:30] <PerlJam> moritz_: aren't we already there?

[19:30] <PerlJam> ;)

[19:30] <jnthn> Which was

[19:30] <moritz_> PerlJam: only with where-blocks (which are kinda cheating)

[19:30] <jnthn> my Foo @x # it's an Array[Foo]

[19:30] <jnthn> my Foo() @x # it's an Array[???] # what goes in the ???

[19:31] <jnthn> It's kinda unimplementable without answering that.

[19:31] *** pyrimidine joined
[19:32] <PerlJam> It's still Array[Foo], but assignments get passed through Foo($thingy) to coerce as I read things

[19:32] <TimToady> well, but the generic code probably needs to know both types

[19:32] <TimToady> the internal and the external

[19:33] <jnthn> PerlJam: What tells assignment that?

[19:33] <TimToady> so perhaps Array[Foo(Any)] can be made to work

[19:33] <jnthn> Hmm.

[19:33] *** tak11 joined
[19:33] <jnthn> That could work somehow.

[19:33] <TimToady> but we have to be careful about maing Type(Type) work even in rvalue context, in that case

[19:33] <jnthn> I think.

[19:33] <TimToady> *making

[19:34] <jnthn> Yeah

[19:34] <jnthn> It's one of those "ouch, the type system was already complex enough" things.

[19:35] <TimToady> yes, well, the question is whether coercion is entirely operational or wants to be more declarative in spots

[19:35] <jnthn> I guess really though

[19:35] <TimToady> and we're typically biasing things a bit toward the declarative in p6

[19:35] *** barney left
[19:35] <PerlJam> I don't think I've every thought of coercion as declarational.

[19:35] <PerlJam> s/y//

[19:35] <jnthn> If you have a ::T that you set as a "coercion type", and you use it in a signature, we could somehow try to be smart enough about it to make it as if you'd written an Any $x as Foo

[19:36] <jnthn> But if we're doing that

[19:36] <jnthn> We maybe want to toss as

[19:36] <jnthn> And just write Any(Foo) $x

[19:36] <jnthn> oh wait

[19:36] <jnthn> Foo(Any) $x

[19:36] <PerlJam> So ... what problem does this solve?

[19:36] <TimToady> yes, I'm looking for something that generalizes better than as

[19:37] <TimToady> it can be treated as a single type until you want to differentiate the inside and the outside

[19:37] <jnthn> PerlJam: The problem is that we need to make specification of a coercion kind of "first class".

[19:37] <jnthn> Or a single type that you can talk about.

[19:37] <PerlJam> jnthn: why?

[19:37] <jnthn> Because otherwise we can't actually implement my Foo() @x

[19:37] <jnthn> Or at least

[19:37] <jnthn> Not by just having it fall out of a parametric role.

[19:38] <jnthn> Which it really needs to.

[19:38] <jnthn> That is, we want to be able to write a role Array[::T] and not have to worry about whether T jsut implies a constraint or a constraint plus a coercion.

[19:39] <jnthn> My feeling is that Foo(Any) will be a kind of type constructor.

[19:39] <jnthn> And when building a signature out of it we'd probably deconstruct it somewhat.

[19:39] <jnthn> And it has an ACCEPTS that coerces.

[19:40] <jnthn> TimToady: We might be able to sneak this in with a bit less pain that I first thought...

[19:40] <TimToady> almost more of a storage issue, so the "int" type is more like int(Int)

[19:40] *** synth^3 left
[19:40] *** synth^3 joined
[19:40] <TimToady> I'm officially Int, but whenever you store me, turn me into an int

[19:41] <TimToady> so possibly related to boxing/unboxing

[19:41] <jnthn> Hmm.

[19:41] <TimToady> though it's funny that "unboxing" is associated with the tighter constraint

[19:42] <jnthn> That's interesting too.

[19:42] <TimToady> arguably int is a smaller box than Int :)

[19:42] <jnthn> Yeah

[19:42] <PerlJam> I haven't used C++ in a good while, but I remember there was something like, if you defined a constructor for your object that took a type X, then anywhere you specified a variable to be a type of your class, you could use type X and it would just magically work.  I remember this magic being ultimately evil.  This "coercion type" feels similar to me right now.

[19:43] <moritz_> implicit usage of such coercions would be evil, yes

[19:43] <jnthn> Which is what my Foo() $x is kinda asking for. ;-)

[19:43] <PerlJam> exactly.

[19:44] *** jferrero left
[19:44] <PerlJam> I guess perl has much been scoping control though, so that may mitigate any problems.

[19:44] <TimToady> and we have a community to point out the evil of one's ways

[19:45] <PerlJam> i.e.  with "my Foo() $x", the coercion is scoped the same as $x, right?

[19:45] <jnthn> "That's SO evil! I like it!!"

[19:45] <PerlJam> jnthn: heh

[19:45] <jnthn> PerlJam: Correct

[19:45] <jnthn> PerlJam: Which makes it feel a bit less awful.

[19:45] <moritz_> PerlJam: it's only only scoped like $x, it's also tied to the variable $x

[19:45] <jnthn> Aye

[19:45] <PerlJam> moritz_: right, good poitn

[19:45] <PerlJam> er, point

[19:45] <jnthn> It's very much like dialects.

[19:46] <jnthn> There's always a use statement to tell you what language you're in.

[19:46] <TimToady> anyway, my point was primarily about the syntax, not the pragmatics :)

[19:47] *** synth^2 left
[19:47] <PerlJam> TimToady: well, I was getting to that  :)  parens seem a small indicator of such magic

[19:47] <PerlJam> (perhaps I'm just too curmudgeonly today)

[19:48] <TimToady> twice as big as it was gonna be in my earlier syntax :)

[19:48] <TimToady> which was something like

[19:48] <TimToady> my >Foo $x

[19:48] <TimToady> or

[19:48] <TimToady> my Any>Foo $x

[19:49] <moritz_> granted, Foo() is bettter.

[19:54] <TimToady> multi infix:<+> (Num() $x, Num() $y) { #`<primitive addition here> }  # the old Any,Any version

[19:54] <moritz_> does it still lift()?

[19:54] <moritz_> or did it never?

[19:55] <TimToady> no redispatch in this form

[19:55] <jnthn> TimToady: Ah, it coerces while binding?

[19:56] <TimToady> without coercion, Any/Any redispatches to Num/Num, but this is conceptually simpler

[19:56] <jnthn> TimToady: Any reason not to have it, if it's primitive, as

[19:56] <TimToady> yes, that's the idea

[19:56] <jnthn> :(num() $x, num() $y)

[19:56] <jnthn> I guess it's impl. dependent...

[19:56] <TimToady> well, if you want to coerce to the native type, sure

[19:56] <moritz_> what about Inf?

[19:56] <jnthn> I'd figure you may for a primitive.

[19:57] <moritz_> 'Inf' + 3

[19:57] <jnthn> moritz_: num can represent inf

[19:57] <moritz_> jnthn: ok

[19:57] <jnthn> *infinity

[19:57] <TimToady> presumably a coercion failure would result in binding failure though, and dispatch elsewhere more general

[19:57] <moritz_> sounds sane.

[19:57] <TimToady> maybe

[19:58] <moritz_> (this part, at least :)

[19:58] <TimToady> something to think on for a while, anyway

[19:58] <jnthn> note to self: doing ^C while viewing a git diff has a high chance of screwing up the terminal

[19:58] <TimToady> let people's subconsciouses stew for a while to see what bubbles up

[19:59] *** japhb left
[20:00] <PerlJam> Is the dispatch order of Num vs. Num() such that Num comes first in  the candidate list?

[20:00] <moritz_> PerlJam: since Num() would be like Any, Num is more specific

[20:01] <TimToady> well, my brane needs to go inoperative for a bit, in an old geezery kind of way. &  # zzz

[20:01] <PerlJam> moritz_: that's what I would think.  Just checking.  :)

[20:02] <jnthn> Num would be narrower than Num(), yes

[20:02] <PerlJam> X(Y) is treated like Y

[20:02] <jnthn> Right.

[20:02] <jnthn> The multi-dispatcher will probably be ignorant of the existence of the X

[20:02] <jnthn> If we can get away with that anyway...

[20:03] <moritz_> at least for building the candidate list

[20:03] <moritz_> it will be aware of it during the bindability check

[20:03] <jnthn> At least.

[20:03] <jnthn> Oh, hmm

[20:03] <jnthn> We need to be careful there...

[20:04] <jnthn> If you make your infix:<+> need a bindability check, it means we can't do type based caching, which means slowness

[20:04] <jnthn> Oh

[20:04] <jnthn> Maybe we could in that we know which types can coerce

[20:04] <jnthn> But that still may be too much of an assumption.

[20:04] <moritz_> and it would make user defined types slower

[20:06] <jnthn> Wow, my throat is bad enough today that I can actually sing like the Opeth guy...

[20:06] <pmichaud> while on this topic...

[20:06] <jnthn> ...Opeth?

[20:06] <jnthn> ...my throat?

[20:06] <pmichaud> it seems a bit bizarre that   Foo($x)   defaults to  Foo.new($x), given that the default .new doesn't know how to handle a single positional (iiuc)

[20:07] <jnthn> heh, I didn't know it did..

[20:07] <jnthn> I thought it did $x.Foo

[20:07] <moritz_> that's what I thought too

[20:07] <pmichaud> this came up in discussions yesterday

[20:07] <pmichaud> looking for the reference(s)

[20:07] *** ruoso left
[20:08] <pmichaud> S13:204

[20:08] <pmichaud> As a fallback, if no

[20:08] <pmichaud> method responds to a coercion request, the class will be asked to attempt to

[20:08] <pmichaud> do C<Dog.new($spot)> instead.

[20:08] <jnthn> spec fail.

[20:08] <moritz_> aye.

[20:09] <pmichaud> I also was wondering if the default 'new' method is a multi

[20:09] <jnthn> pmichaud: Not afaik.

[20:09] <jnthn> Though that's only an issue if you monkey-patch Object, no?

[20:09] <pmichaud> for example, in the thread "Custom object constructors" on p6l, ruoso++ suggests

[20:09] <pmichaud> method new(Str $timestamp) { self.SUPER::new(ts => strptime('...',$timestamp));

[20:09] <pmichaud> }

[20:10] <pmichaud> and I was wondering if that's in fact more like

[20:10] <pmichaud> multi method new(Str $timestamp) { nextwith(ts => strptime('...', $timestamp)); }

[20:10] <pmichaud> or, if .new is multi

[20:11] <jnthn> Why isn't it method new(Str $timestamp) { nextwith(ts => strptime('...', $timestamp)); }

[20:11] <jnthn> ?

[20:11] <pmichaud> multi method new(Str $timestamp) { .new(ts => strptime('...', $timestamp)); }

[20:11] <jnthn> But yes, nextwith is the nice thing to use here.

[20:11] <jnthn> YOu don't have to be a multi to defer though.

[20:11] <jnthn> Deferal goes through multis and then up the inheritance hierarchy.

[20:11] <pmichaud> right

[20:11] <jnthn> So no need for it to be a multi for this to work.

[20:11] <pmichaud> but with multi, one doesn't have to use nextwith at all

[20:11] <masak> why is nextwith better than naming the method?

[20:11] <jnthn> The default constructor is not generated though, afaiu?

[20:12] <pmichaud> one can just redelegate to .new

[20:12] <jnthn> It's inherited?

[20:12] <jnthn> True

[20:12] <pmichaud> the original question was how to make something like   Foo.new($x)   dwim

[20:12] <moritz_> masak: it's not the same

[20:12] <jnthn> That's more about people declaring their own .new a multi though, so dispatch can skip over it and keep looking?

[20:13] <masak> and when you guys say .new, you do mean self.new, right? </nitpicky>

[20:13] <jnthn> masak: yes

[20:13] <pmichaud> masak: yes -- sorry about that

[20:13] <masak> oh, good.

[20:13] <jnthn> Just being lazy fingered. ;-0

[20:13] <moritz_> $.new for short ;-)

[20:13] <masak> don't want to have that bikeshed discussion again. :)

[20:13] <masak> (it was in 2006)

[20:13] <PerlJam> masak: wait ... $_ should be aliased to the invocant in methods ...  ;)

[20:13] <jnthn> I might just post the three word message "SHUT UP ALREDY" if that one happens again...

[20:14] <masak> PerlJam: argh!

[20:14] <jnthn> That way people will discuss my attitude problem instead of having the discussion again. ;-)

[20:14] <mkelly32> heh, you're on lists that got that guy, too?

[20:15] <pmichaud> <bikeshed>I don't think it's an attitude problem, it's more like a character flaw</bikeshed>  :-) :-)

[20:15] <jnthn> pmichaud: I'm not quite sure how it'd dwim with positionals.

[20:15] <jnthn> Thanks pm. :-P

[20:15] <pmichaud> jnthn: I'm not talking at all about auto-creating new in any form, if that's what you're thinking.

[20:16] <jnthn> pmichaud: OK, good, I just hadn't yet worked out why you wanted to write a multi new.

[20:16] <pmichaud> given that I'm creating a class Foo, and I want to be able to define a .new for Foo that works based on positional arguments, what's the canonical way to do that?

[20:16] <jnthn> I see it now (because it's a trick to dispatch up the tree).

[20:16] <masak> Rakudo works again! bacek++, I guess.

[20:16] <jnthn> It's Perl, there's many ways to do it...

[20:17] <pmichaud> jnthn: sure, but the versions given in the thread all looked somewhat bletcherous -- they were basically overriding BUILD and new both (and claiming that both had to be done)

[20:17] <jnthn> I guess if you're subclassing, you care a bit about the constructors of the parent.

[20:17] <jnthn> I don't get why both have to be done.

[20:17] <pmichaud> I don't think they do

[20:17] <jnthn> If you take positionals, then you just map them to names when calling .bless

[20:17] <pmichaud> so your code looks like... ?

[20:18] <jnthn> method new($foo, $bar) { self.bless(*, :$foo, :$bar) }

[20:18] <jnthn> well, and a return in there if you want to be explicit.

[20:18] * PerlJam hadforgotten about the :$foo shortcut

[20:18] <PerlJam> perl++

[20:18] <jnthn> The other nice thing about naming your parameters in the signature

[20:18] <jnthn> As in, giving them the names of the attributes

[20:19] <jnthn> Is that as well as calling that $x.new(4, 2) 

[20:19] <jnthn> you can also call it $x.new(foo => 4, bar => 2)

[20:19] <jnthn> ;-)

[20:19] <jnthn> (Well, not in Rakudo yet.)

[20:20] <pmichaud> what happens if Foo itself is subclassed, though?

[20:20] <pmichaud> it still works out?

[20:20] <jnthn> It'd inherit that constructor.

[20:20] <jnthn> The subclass would need to define a constructor that it liked more.

[20:21] <jnthn> Or Foo could declare it's candidate a multi so failure to bind there isn't fatal.

[20:21] <pmichaud> right, which gets back to my "is <new> a multi" question

[20:21] <jnthn> Depends on the semantics a class prefers to have.

[20:21] <jnthn> If it wants to say "thou shalt construct me this way and only this way", then only.

[20:22] <jnthn> If it wants to say "here's another way", then multi.

[20:22] <pmichaud> I meant the default <new>

[20:22] <jnthn> The default new is in Object.

[20:22] <pmichaud> correct

[20:22] <pmichaud> is it a multi, or no?  or does it not matter?

[20:22] <jnthn> It doesn't matter.

[20:22] <jnthn> There's nowhere to look beyond it.

[20:22] <pmichaud> so if I have class Foo defined with

[20:22] <pmichaud> multi method new($foo) { self.bless(*, :$foo); }

[20:22] <jnthn> multi method dispatch in Perl 6 does not consider all multis from all classes together.

[20:23] <jnthn> It's a class by class consideration.

[20:23] <jnthn> Up the inheritance hierarchy.

[20:23] <pmichaud> I can still do    Foo.new()     and have it get to Object's .new ?

[20:23] <jnthn> Correct.

[20:23] <pmichaud> even if Object.new isn't defined as multi ?

[20:23] <jnthn> If a class provides no viable multi candidates, we continue looking up.

[20:23] <jnthn> Correct.

[20:24] <pmichaud> okay.

[20:24] <jnthn> We consider the options provided by each class in isolation.

[20:24] <jnthn> Failing to bind to an only is always an error.

[20:24] <jnthn> But failing to bind to any of the available multis just means we consider the parents.

[20:24] <pmichaud> got it.

[20:24] <PerlJam> but, if Foo.new($x) is to do something useful as per S13, then Object's new will have to be multi  :)

[20:25] <jnthn> PerlJam: Heh, true.

[20:25] <jnthn> I'm a little distrubed about that though.

[20:25] <pmichaud> Yes, that issue still exists independent on this one.

[20:25] <moritz_> isn't it multi anyway?

[20:25] <pmichaud> I'd like to see the   self.bless(*, ...)  answer added to the thread on p6l, though.

[20:25] <jnthn> I can't think of a good default.

[20:25] <moritz_> pmichaud: I just mentioned it

[20:25] <pmichaud> okay, good.

[20:26] <jnthn> oh arse...so much for my patch being good.

[20:26] * jnthn failed a sanity test

[20:26] <pmichaud> moritz++

[20:27] <jnthn> pmichaud: *almost* got trait application on containers into shape.

[20:27] <pmichaud> jnthn: nice!

[20:27] <jnthn> pmichaud: trait_mod:<of> is now written entirely in Perl 6. ;-)

[20:27] <reqamst> someone vandalised pugs article on wikipedia, I fixed it :(

[20:27] <pmichaud> that's simultaneously scary and cool.

[20:28] <moritz_> reqamst++

[20:31] <jnthn> pmichaud: Yeah, though annoyingly I've managed to cause some weird breakage...hopefully nothing too hard to track down.

[20:31] <jnthn> Doesn't help that the PIR line number seems to be kinda off...

[20:32] <Tene> jnthn: that's been the case for ages.  I vaguely remember suspecting that imcc isn't counting annotations when counting lines.

[20:32] <Tene> But I don't know that I ever confirmed it.

[20:36] *** japhb joined
[20:49] *** Caelum joined
[20:58] *** tak11 left
[21:01] *** tak11 joined
[21:06] *** zloyrusskiy left
[21:08] *** nihiliad left
[21:18] *** tak__ joined
[21:18] *** tak11 left
[21:19] *** alester joined
[21:22] <KatrinaTheLamia> hmm... I may look into signing up for git hub... though, do I need to be a completely a total git to use it? Or is it something I can work on? Like I mean I am a little daft--does that help?

[21:23] <KyleHa1> The name 'git' refers to its creator, not the users.  Sorry.

[21:23] *** tak__ is now known as tak11

[21:23] <moritz_> it generally doesn't help to be daft when dealing with technology ;-)

[21:23] <KyleHa1> deft, another story.

[21:24] <KatrinaTheLamia> yeah, I recall the quote Linus made about him naming all his projects after himself... I chuckled

[21:24] <pyrimidine> git?

[21:24] <KatrinaTheLamia> moritz_, I dunno, with windows, php and so many other things being so popular with technology, I wouldn't think it would hurt ~.^

[21:25] <moritz_> KatrinaTheLamia: well, maybe I'm wrong.

[21:25] <KatrinaTheLamia> pyrimidine, git is a slang term for somebody who is useless... or something similar to that. Generally if you call somebody a "git" it generally is not complement.

[21:25] <pyrimidine> yes, I know (mum's english)

[21:26] <KatrinaTheLamia> hooray!

[21:26] <masak> KatrinaTheLamia: if it's a nudge you need to sign up with github: do it! you won't regret it.

[21:26] <masak> github is better than Facebook and Twitter combined.

[21:26] <masak> friending is called 'forking' on github.

[21:26] <KatrinaTheLamia> masak, alright--I was going to in a bit... I figured I'd make a joke...

[21:26] <KatrinaTheLamia> and oh dear... I am not entire sure I want to be on github now ~.^

[21:26] <masak> KatrinaTheLamia: I'm glad you did.

[21:27] <masak> KatrinaTheLamia: because of the 'forking' part? it doesn't hurt or anything.

[21:27] <pyrimidine> just so everyone knows: http://www.oreillynet.com/pub/e/1394

[21:27] * masak wonders if he's too risqué

[21:27] <pyrimidine> allison pointed this out the other day

[21:27] <KatrinaTheLamia> I mean facebook? I generally regard that site as lower than the various chans when it comes to intelligent discussion on the interweb

[21:28] <masak> KatrinaTheLamia: http://tomayko.com/writings/github-is-myspace-for-hackers

[21:28] <pyrimidine> (that's the link to the 'Git in an Hour' webcast)

[21:28] <masak> KatrinaTheLamia: oh, me too. I don't go near it with a wet towel.

[21:28] <KatrinaTheLamia> oh dear... comparing it to myspace now... makes me not even want to go there more

[21:28] <masak> KatrinaTheLamia: but... what that URL says.

[21:29] <masak> KatrinaTheLamia: I'm afraid you misunderestimate. :)

[21:29] <KatrinaTheLamia> masak, well, you should generally be going everywhere with your towel ~.^

[21:29] * KatrinaTheLamia stops complaining and learns to click the links.

[21:29] <masak> github is great at letting you click links.

[21:30] *** zamolxes joined
[21:30] <pyrimidine> the git webcast I linked to above was a very good introduction

[21:31] <pyrimidine> also: http://progit.org/book/

[21:31] *** molaf left
[21:34] *** Limbic_Region joined
[21:42] <jnthn> pmichaud: Have happiness, the bacekator has fixed the regression, apparently...

[21:42] * masak is teh happy about that

[21:43] <jnthn> I on the other hand have managed to write a patch that skillfully passes everything we passed before...apart from 1 test in assign.t. Gah.

[21:43] <moritz_> jnthn: review the test for correctness before worrying about it

[21:43] <jnthn> rakudo: my $x //= 42; say $x;

[21:43] <moritz_> jnthn: assign.t is full of only half-correct tests, I fear

[21:43] <p6eval> rakudo 0d4fe0: OUTPUT«Use of uninitialized value␤␤»

[21:44] *** Whiteknight joined
[21:45] <masak> oh, I remember that one.

[21:45] <jnthn> oh wtf

[21:45] <pyrimidine> rakudo: my $x \\= 42; say $x;

[21:45] <jnthn> not ok 77 - //= also works in declaration

[21:45] <jnthn> #      got: undef

[21:45] <jnthn> # expected: 5

[21:45] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "\\\\= 42; sa"␤in Main (src/gen_setting.pm:3390)␤»

[21:45] <jnthn> OK, how on *earth* was this test passing at all before?

[21:45] <masak> jnthn: :D

[21:46] *** synth^3 left
[21:46] *** synth joined
[21:46] *** KyleHa1 left
[21:47] <moritz_> lol

[21:47] <masak> or, as the Brits say, loul.

[21:48] * jnthn switches back to master to see if it works there.

[21:50] <masak> oh, and by the way, missingthepoint and I had a long privmsg discussion, in which we totally connected and decided to mind-meld our two Text::CSV modules in a few days' time.

[21:50] <masak> synergy++

[21:50] <jnthn> rakudo: use Test; my $f //= 5; is $f, 5, '//= also works in declaration';

[21:50] <p6eval> rakudo 0d4fe0:  ( no output )

[21:51] <jnthn> oh wtf

[21:51] <jnthn> rakudo: my $f //= 5; say $f eq 5

[21:51] <p6eval> rakudo 0d4fe0: OUTPUT«Use of uninitialized value␤0␤»

[21:51] <masak> the evalbot borders on being useless when it doesn't output stuff.

[21:52] <jnthn> OK, color me confused.

[21:52] <jnthn> The test does pretty much that.

[21:52] <jnthn> And...passes.

[21:52] <jnthn> epic wtf.

[21:52] <wayland76> masak: I was worried for a minute that the two of you were going to become a borg :)

[21:53] <masak> wayland76: oh, we haven't ruled that out.

[21:54] <jnthn> OK, so it really does work in the context of the test. 

[21:54] <jnthn> :'-(

[21:54] <masak> jnthn: that's an amazing discovery!

[21:55] <jnthn> But only in master

[21:55] <jnthn> Not in my branch.

[21:55] <jnthn> I wonder if I'm allowed to call that out as a bogus pass.

[21:55] <jnthn> Given

[21:55] <jnthn> That it clearly doesn't really work... :-|

[21:55] <jnthn> rakudo: my $x //= 5; say $x;

[21:55] <jnthn> rakudo: { my $x //= 5; say $x; }

[21:55] <p6eval> rakudo 0d4fe0: OUTPUT«Use of uninitialized value␤␤»

[21:55] <p6eval> rakudo 0d4fe0: OUTPUT«5␤»

[21:55] <jnthn> ...erm...

[21:55] <moritz_> rakudo: my @a = <a b c>; for ^10 { print @a[$_ % *] }

[21:56] <p6eval> rakudo 0d4fe0: OUTPUT«abcabcabca»

[21:56] <moritz_> rakudo++

[21:56] <masak> wow.

[21:56] <masak> that is beautiful.

[21:56] <moritz_> it is.

[21:56] <jnthn> wow...in theory I knew that works, but I'd never thought to try it :-)

[21:56] <jnthn> moritz++

[21:56] <jnthn> That is, I can see exactly why it would work.

[21:57] <jnthn> But yeah, very neat idea. :-)

[21:57] <moritz_> it's amazing what you can do with whatever-stars

[21:57] <jnthn> I'm not entirely sure I want to know why //= only works in a block...

[21:57] <jnthn> ...and why my changes made it just consistently not work.

[21:59] <masak> that's the big mystery, it seems.

[22:00] * moritz_ just hacked multiple bars into SVG::Plot

[22:00] <masak> moritz_++

[22:01] <moritz_> next step: stacked bars

[22:01] <moritz_> then we have all we need to re-generate the spectest charts with Perl 6.

[22:01] <masak> \o/

[22:02] <missingthepoint> pmichaud: ^^

[22:02] <moritz_> well, let's wait until it's actually done ;-)

[22:02] *** pyrimidine left
[22:03] <missingthepoint> moritz_: ah, i just provided extra motivation... ;)

[22:04] <jnthn> moritz_: Will they be prettier too? ;-)

[22:05] * missingthepoint off to do Text::CSV .t work.

[22:05] <jnthn> moritz_: And maybe we can incorporate a picture of a pony? ;-)

[22:05] <moritz_> jnthn: I hope so.

[22:05] *** MoC` joined
[22:05] <moritz_> a pony and a butterfly.

[22:05] <wayland76> What does that % operator do up above in moritz_'s rakudo code?

[22:06] <moritz_> wayland76: modulo

[22:06] <masak> wayland76: it gives you the remainder of an integer division.

[22:07] *** payload left
[22:07] <masak> that's the fifth arithmetic operation, one that they sadly tend to under-emphasize in the basic math curriculum.

[22:07] <wayland76> That's what I thought.  I still don't understand the code.  Is it some sort of iterator thingy?

[22:07] <masak> wayland76: no, but I had to look at it for a while too to grok it.

[22:07] <masak> wayland76: the secret is that * means .elems in array indices.

[22:08] <moritz_> wayland76: replay * by the number of items in the array

[22:08] <moritz_> so it's just <a b c>[ $_ % 3 ]

[22:08] <wayland76> Ah, I see the magic :)

[22:08] <moritz_> but written for an arbitrary number of items

[22:08] <wayland76> thanks :)

[22:08] <moritz_> yw

[22:10] <wayland76> rakudo: my @a = <a b c>; print @a[map { $_ % @a } 1..10]

[22:10] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "[map { $_ "␤in Main (src/gen_setting.pm:3390)␤»

[22:10] <wayland76> rakudo: my @a = <a b c>; print @a[map { $_ % @a } 1..10];

[22:10] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "[map { $_ "␤in Main (src/gen_setting.pm:3390)␤»

[22:10] <moritz_> wayland76: comma after }

[22:10] <wayland76> rakudo: my @a = <a b c>; print @a[map { $_ % @a }, 1..10];

[22:11] <p6eval> rakudo 0d4fe0: OUTPUT«bcabcabcab»

[22:11] <jnthn> Anyone else finding rakudo.org a little bit failed at the moment?

[22:11] <wayland76> rakudo: my @a = <a b c>; print @a[map { $_ % @a }, 0..9];

[22:11] <moritz_> well, ^10 is is 0..9

[22:11] <p6eval> rakudo 0d4fe0: OUTPUT«abcabcabca»

[22:11] <moritz_> jnthn: why?

[22:11] <jnthn> moritz_: When I try to load it I get a blank page... :-/

[22:12] <moritz_> works fine here.

[22:12] <jnthn> huh

[22:12] <jnthn> :-/

[22:13] <moritz_> oh dammit, I shouldn't try to be too clever.

[22:15] <jnthn> loliblogged: http://use.perl.org/~JonathanWorthington/journal/39499

[22:19] <moritz_> lolib0rkedmysvgplot

[22:21] <masak> jnthn++ # nice, meaty post

[22:21] <jnthn> moritz_: That sounds oddly unlolish.

[22:21] <jnthn> .oO( post not suitable for vegitarians? )

[22:21] <masak> jnthn: uhm, quorn-y post?

[22:22] <jnthn> eww

[22:22] <masak> tofu-y post?

[22:22] <masak> doesn't quite have the same ring to it.

[22:22] <jnthn> "I will now proceed to eat a tofu."

[22:22] <masak> I'm sure the vegetarians will understand.

[22:22] *** payload joined
[22:23] *** M_o_C left
[22:25] <jnthn> (tofu quote from http://www.weebls-stuff.com/wab/hams/ - warning, awful pun at the end)

[22:25] <masak> jnthn: I couldn't help but note that your PublicReportRenderer doesn't explicitly inherit from your ReportRenderer...

[22:25] <jnthn> masak: oh, fail

[22:26] <jnthn> masak: corrected, thanks like

[22:26] <masak> np.

[22:26] <masak> so, wow, nextsame et al. actually does both inheritance-hierarchy and multimethod deferral?

[22:27] <jnthn> Correct.

[22:27] <masak> which one does it do when faced with a choice of both?

[22:27] <jnthn> always multi-methods, and if the last applicable one of those defers too then it goes up the inheritance chain.

[22:28] <masak> ok.

[22:28] <jnthn> masak: Imagine making a list of every multi-variant in every class in the hierarchy that you could call.

[22:28] <wayland76> masak: You left my character classes out of your blog post

[22:28] <jnthn> That's what it's walking through.

[22:28] <masak> wayland76: oh noes! which post, and which character classes?

[22:28] *** jan__ left
[22:29] <wayland76> The one about Eve Online (Aug 11)

[22:29] *** pmurias left
[22:30] <wayland76> On the other hand, we don't need newbies volunteering to be spec re-drafters :)

[22:30] <masak> wayland76: I think you might fall under 'priest', actually. but consider my classes an open set.

[22:31] <wayland76> Yeah, I figured I was closest to "priest", with attempts at healing also involved

[22:32] <masak> we're all mixes, I think.

[22:32] <masak> real-world RPGs tend not to be so clear-cut.

[22:33] * jnthn figures he's probably something of a Mage.

[22:33] * moritz_ has the branedumb

[22:33] <moritz_> I have an array @a which contains arrays of numbers (of same lenght)

[22:33] <moritz_> and I want to calculate the maximal row sum

[22:33] <wayland76> masak: I've played shadowrun, which lets you cut across categories :)

[22:33] <moritz_> hwo do I do that?

[22:34] <masak> rakudo: @a = [1,2,3], [4,5,6], [7,8,9]; say [max] @a>>.sum

[22:34] *** tak11 left
[22:34] <p6eval> rakudo 0d4fe0: OUTPUT«Symbol '@a' not predeclared in <anonymous> (/tmp/25HpXCMmZ2:2)␤in Main (src/gen_setting.pm:3390)␤»

[22:34] <masak> rakudo: my @a = [1,2,3], [4,5,6], [7,8,9]; say [max] @a>>.sum

[22:34] <p6eval> rakudo 0d4fe0: OUTPUT«Method 'sum' not found for invocant of class 'Perl6Array'␤»

[22:34] <masak> O RLY?

[22:34] <wayland76> max(for @a -> @b { [+] @b })

[22:35] <wayland76> rakudo: @a = [1,2,3], [4,5,6], [7,8,9]; say max(for @a -> @b { [+] @b });

[22:35] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "(for @a ->"␤in Main (src/gen_setting.pm:3390)␤»

[22:35] <moritz_> I'd want to get 3 + 6 + 9 = 18 in masak's example

[22:35] <masak> rakudo: sub sum(@a) { [+] @a }; my @a = [1,2,3], [4,5,6], [7,8,9]; say [max] map { sum($_) },  @a

[22:35] <p6eval> rakudo 0d4fe0: OUTPUT«24␤»

[22:35] <masak> moritz_: oh.

[22:35] <masak> moritz_: is that what you call 'rows'? :)

[22:35] <moritz_> maybe I formulated it a bit weirdly

[22:35] <masak> aye.

[22:35] <moritz_> masak: for some values of transposition :/

[22:36] <jnthn> rakudo: my @a = [1,2,3], [4,5,6], [7,8,9]; say [+] @a.map( .max }

[22:36] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "( .max }"␤in Main (src/gen_setting.pm:3390)␤»

[22:36] <jnthn> rakudo: my @a = [1,2,3], [4,5,6], [7,8,9]; say [+] @a.map({ .max })

[22:36] <jnthn> gah

[22:36] <jnthn> :-)

[22:36] <p6eval> rakudo 0d4fe0: OUTPUT«18␤»

[22:36] <jnthn> rakudo: my @a = [1,2,3], [4,5,6], [7,8,9]; say [+] @a.map: *.max

[22:36] <p6eval> rakudo 0d4fe0: OUTPUT«18␤»

[22:37] <jnthn> Less brackety.

[22:37] <moritz_> rakudo: my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; say [+] @a.map: *.max

[22:37] <p6eval> rakudo 0d4fe0: OUTPUT«18␤»

[22:37] <moritz_> not quite what I want

[22:37] <masak> thought so.

[22:37] <moritz_> should be 16 in that case

[22:37] <jnthn> rakudo: my @a = [1,2,3], [4,5,6], [7,8,9]; say [+] @a.map: *.end

[22:37] <masak> jnthn: the sum of the column with the largest sum.

[22:37] <jnthn> oh no

[22:37] <p6eval> rakudo 0d4fe0: OUTPUT«6␤»

[22:38] <jnthn> Oh!

[22:38] <jnthn> wait, no...really?

[22:38] <moritz_> rakudo: @a = [1,2,3], [4,5,6], [7,8,9]; say ([Z] @a).perl

[22:38] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "@a).perl"␤in Main (src/gen_setting.pm:3390)␤»

[22:38] <jnthn> Oh, columm as in...1 + 4 + 7

[22:38] <jnthn> OK

[22:38] * wayland76 wonders if we can make people saints (in protestantism, every Christian is a saint), and whether he can be a presbyter or not :)

[22:40] <masak> rakudo: sub col-sum(@a, $col) { [+] map { $_[$col] }, @a }; my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; my $max-col = sort { col-sum(@a, $_ }, ^@a[0]; say $max-col; say col-sum(@a, $max-col)

[22:40] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near "(@a, $_ },"␤in Main (src/gen_setting.pm:3390)␤»

[22:40] <masak> rakudo: sub col-sum(@a, $col) { [+] map { $_[$col] }, @a }; my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; my $max-col = sort { col-sum(@a, $_) }, ^@a[0]; say $max-col; say col-sum(@a, $max-col)

[22:40] <p6eval> rakudo 0d4fe0: OUTPUT«0 1 2␤Use of uninitialized value␤Use of uninitialized value␤Use of uninitialized value␤0␤»

[22:40] <masak> hrm.

[22:41] <moritz_> rakudo: my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]: say [max] @a.keys.map: { [+] @.values[*][$_] }

[22:41] <p6eval> rakudo 0d4fe0: OUTPUT«Statement not terminated properly at line 2, near ": say [max"␤in Main (src/gen_setting.pm:3390)␤»

[22:41] <moritz_> rakudo: my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; say [max] @a.keys.map: { [+] @.values[*][$_] }

[22:41] <p6eval> rakudo 0d4fe0: OUTPUT«Lexical 'self' not found␤»

[22:41] <masak> rakudo: sub col-sum(@a, $col) { [+] map { $_[$col] }, @a }; my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; my $max-col = (sort { col-sum(@a, $_) }, 0..@a[0].elems)[0]; say $max-col; say col-sum(@a, $max-col)

[22:41] <p6eval> rakudo 0d4fe0: OUTPUT«Use of uninitialized value␤Use of uninitialized value␤Use of uninitialized value␤3␤Use of uninitialized value␤Use of uninitialized value␤Use of uninitialized value␤0␤»

[22:41] <masak> back to the drawing board.

[22:42] <moritz_> got it.

[22:43] <moritz_> rakudo: my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; say [max] @a.values[0].keys.map: { [+] @a.map: -> $a { $a[$_] } } };

[22:43] <p6eval> rakudo 0d4fe0: OUTPUT«Syntax error at line 2, near "};"␤in Main (src/gen_setting.pm:3390)␤»

[22:43] <wayland76> Just so I understand the problem, we add up each "column", then pick the largest?

[22:43] <moritz_> rakudo: my @a = [3, 2, 1], [4, 5, 6], [7, 8, 9]; say [max] @a.values[0].keys.map: { [+] @a.map: -> $a { $a[$_] } };

[22:43] <p6eval> rakudo 0d4fe0: OUTPUT«16␤»

[22:43] <moritz_> wayland76: correct.

[22:44] <masak> rakudo: sub col-sum(@a, $col) { [+] map { .[$col] }, @a }; my @a = [3,2,1], [4,5,6], [7,8,9]; say [max] map { col-sum(@a, $_) }, ^@a[0]

[22:44] <p6eval> rakudo 0d4fe0: OUTPUT«16␤»

[22:44] <masak> moritz_: yep, our solutions are equivalent.

[22:45] <moritz_> right; I just inline col-sum as another map

[22:45] <moritz_> which means I have stacked bar charts working.

[22:45] <masak> yay!

[22:46] <masak> I, on the other hand, completely ran into a wall with the CSV module.

[22:46] <moritz_> with yours? or with missingthepoint's?

[22:46] <masak> with mine.

[22:46] <masak> time to push what I have and sleep on it.

[22:47] <missingthepoint> masak: i have further thoughts for you.

[22:47] <missingthepoint> (whenever you want them)

[22:47] <masak> missingthepoint: preferably tomorrow, if that's alright.

[22:48] <missingthepoint> masak: no problem :)

[22:48] <masak> missingthepoint: I just pushed the progress for the evening.

[22:48] <masak> I got many of the early TODO points working.

[22:49] * moritz_ has to fix lots of docs after his stacked bars

[22:49] <masak> missingthepoint: I'm currently stuck on newlines inside of quotes, so I'm going to sleep on that.

[22:49] <moritz_> http://moritz.faui2k3.org/tmp/out.svg

[22:49] *** jonathanturner joined
[22:49] <moritz_> that's how the stacked bars can look like

[22:50] <missingthepoint> masak: ok.

[22:50] <masak> moritz_++

[22:50] <masak> sleep &

[22:50] *** masak left
[22:50] <jnthn> night, mas...oh, to late.

[22:50] <jnthn> moritz_: Ooh, nice.

[22:56] <reqamst> moritz_: could you pull it to the github?

[22:57] <moritz_> reqamst: it's already on github (but it's not Tufte :/ )

[22:57] <moritz_> http://github.com/moritz/svg-plot/

[22:57] <moritz_> it's nice for now, but not very extensible.

[22:58] <reqamst> oh, I was thinking it's Tufte

[22:59] <moritz_> that would be great, but it requires more initial work

[23:02] *** simcop2387 left
[23:03] <jnthn> moritz_: warn "stacked: $stacked"; # leftover debugging output?

[23:03] <moritz_> jnthn: yes

[23:04] <moritz_> jnthn: removed, thanks

[23:04] *** jonathanturner left
[23:08] <sjohnson> perl 6 is a big deal

[23:09] <jnthn> orly? :-)

[23:09] <sjohnson> =)

[23:09] <sjohnson> i should subscribe to the rakudo blog

[23:09] <sjohnson> but i am not quite sure what i can offer to the cause, though i would love to

[23:11] <sjohnson> my main strength about Perl 6 development is getting excited and optimistic about it

[23:11] <moritz_> you can start writing stuff in perl 6 and blog about it

[23:11] <moritz_> that's basically what masak++ does ;-)

[23:12] <sjohnson> definitely a good start

[23:12] <reqamst> hmm.. I can run rakudo's perl6 only from that same directory where is perl6, otherwise I receive http://paste.lisp.org/display/85764

[23:13] <reqamst> is it common?

[23:13] <moritz_> reqamst: you need to run 'make install', the installed version should run from everywhere

[23:13] <missingthepoint> sjohnson: i have a few ideas about how you could help if you're interested... :)

[23:13] <sjohnson> what did you have in mind?

[23:15] <missingthepoint> sjohnson: well, you have web skills? i suspect rakudo.org could use some updating and TLC... (but you might need to run this by pmichaud or alester)

[23:16] <sjohnson> wouldn't be a bad start

[23:16] <sjohnson> i do have said skills

[23:16] <missingthepoint> sjohnson: also, hanging around here and being friendly is always useful... you actually pick up a fair bit just idling, and you can pass that on to visitors :)

[23:16] <reqamst> moritz_: I made

[23:18] <missingthepoint> sjohnson: i have half a "Not-Implemented-Yet List" for Rakudo... I could use some help with that, and I think it could go on rakudo.org/status...

[23:18] <sjohnson> missingthepoint: the occasional pat on the back to others and telling a silly joke go a long way too :]

[23:18] <alester> sjohnson: We are glad to get any kind of help on rakudo.org

[23:19] <alester> whether visually w/tmeplates, or with creating pages, or whatever.

[23:19] <reqamst> moritz_: but now I think it's not related to rakudo

[23:19] <reqamst> nvm

[23:19] <sjohnson> missingthepoint: is it online?

[23:19] <sjohnson> alester: i'll see what i can do

[23:20] <missingthepoint> sjohnson: soon... :)

[23:22] <missingthepoint> could some sort of admin privileges be organized for sjohnson on rakudo.org? :)

[23:23] <missingthepoint> (better not hamstrung, methinks...)

[23:25] <sjohnson> *puppy dog eyes*

[23:25] <alester> i'm glad to hand out privs once there's some sort of idea of what you'll be doin'

[23:27] <alester> Not that I don't trust what you'll be doin'.  Mostly the fewer privs that go out, the fewer privs I need to wrangle.

[23:27] <sjohnson> do you need special privs to post on the main blog?

[23:27] <wayland76> sjohnson: Are you planning to mostly edit content?

[23:27] <wayland76> redesign css?

[23:27] <alester> you need privs to do anything.

[23:28] <sjohnson> ehh before I get too ahead of myself, i won't make any claims.  i have hardly enough time as it is, but i was thinking maybe posting some relevant paragraphs on the main site after giving rakudo a thorough testing

[23:28] <wayland76> (when I said "edit content", I mean "edit/write content"

[23:28] <alester> Although excitement and optomistic is free. :-)

[23:28] <sjohnson> by writing cute programs, like puzzle solvers, flashcard programs, etc

[23:28] <alester> That's great. I"d love to see what you can come up with.

[23:29] <alester> sjohnson: You know what else I need help with?

[23:29] <wayland76> Sounds like "content creation, etc"

[23:29] <missingthepoint> sjohnson++, good ideas :)

[23:29] <sjohnson> alester: what's that

[23:29] <alester> http://perlbuzz.com/2009/08/help-perl101org-become-a-great-tool-for-perl-newcomers.html I really want to make perl101.org be dual-languaged.

[23:29] <wayland76> alester: post it in the channel; maybe someone will volunteer :)

[23:29] <alester> For example, I put some Perl 6 here: http://perl101.org/arrays.html

[23:30] <wayland76> rakudo is in Drupal

[23:30] <wayland76> sorry, rakudo.org is

[23:30] <alester> This will help newbies to both Perl 5 AND Perl 6 AND for people transitioning to Perl 6.

[23:30] <sjohnson> i can speak french

[23:31] <sjohnson> cute bees btw

[23:31] <sjohnson> :)

[23:31] *** MoC` left
[23:33] <missingthepoint> sjohnson: can you write french?

[23:34] <sjohnson> yes

[23:34] <missingthepoint> sjohnson: excellent! why didn't you say so sooner? :)

[23:34] *** payload left
[23:35] <sjohnson> too obsessed with learning Japanese now :)

[23:35] <alester> I don't believe it.  He should have said oui.

[23:35] <missingthepoint> sjohnson: have you seen u4x? (http://svn.pugscode.org/docs/u4x/README)

[23:35] <sjohnson> link won't work for me

[23:35] <sjohnson> alester: ... oui bien sur

[23:36] <missingthepoint> oh hm, oops, http://svn.pugscode.org/pugs/docs/u4x/README

[23:36] <sjohnson> if i didn't know "oui" for real, it would be a sad day in Perl history

[23:36] *** simcop2387 joined
[23:39] <sjohnson> someone will have to put me to the translator test

[23:40] <sjohnson> and have faith that I won't use babelfish Google language tools

[23:40] <sjohnson> （　｀ー´）

[23:40] <alester> We wouldn't really know if you did. :-)

[23:41] <alester> Anyone who has not yet read the Zompist Phrasebook needs to right now.  http://www.zompist.com/phrases.html

[23:41] <missingthepoint> I think there are a few people from .fr here... if you have tuits they might be able to do some quick checks...

[23:41] * sjohnson places his hand on the Camel Book and recites the Perl oath

[23:41] <sjohnson> heheh

[23:41] *** synth^2 joined
[23:42] <wayland76> "I do solemnly swear to promote laziness, be impatient, and share the hubris at every opportunity" :)

[23:42] <sjohnson> "The bellboy won't score me any coke. "

[23:42] <sjohnson> i love how that's slipped in

[23:42] <alester> oh, keep going

[23:46] *** frew__ joined
[23:47] <sjohnson> that was a good read

[23:47] <sjohnson> i showed my brother

[23:48] <sjohnson> he also enjoyed it :)

[23:48] <alester> "I know I'm naked, can you please just tell me how to get back to the hotel" is the capper for m.e

[23:48] <wayland76> I love the translation of "Where is the Cathedral?" :)

[23:48] <alester> I know many are not real.

[23:48] <alester> What is it?

[23:49] <wayland76> "Où est le bordel ?"

[23:49] <alester> hahah

[23:49] <alester> ok going home

[23:49] <wayland76> (for backloggers who don't speak french, look up the English word "bordello")

[23:49] *** alester left
[23:50] <sjohnson> where's the brothel i think it translaets to

[23:50] <wayland76> sjohnson: Yes, I know.  I was giving people a chance to improve their English at the same time :)

[23:51] <sjohnson> that's my wayland!

[23:51] <jnthn> Gotta love the ones for "I understand your language perfectly."

[23:51] <sjohnson> :)

[23:52] *** nihiliad joined
[23:52] <sjohnson> anyone around here around 27 years old?

[23:52] <sjohnson> and played NES?

[23:53] <sjohnson> hopefully this isn't too off-topic

[23:53] *** synth left
[23:58] <sjohnson> this perl101 site is great

[23:58] <sjohnson> i'd love to contribute some tricks i've learned over the years to this site

[23:59] *** jan_ joined
