[00:10] *** minazo joined
[00:12] *** gilimanjaro left
[00:12] *** minazo left
[00:25] *** davidad joined
[00:26] *** Tene_ is now known as Tene

[00:57] *** DemoFreak left
[01:14] *** skids joined
[01:23] *** dukeleto left
[01:34] *** amoc joined
[01:36] *** lumi joined
[01:38] *** meppl left
[01:39] *** wknight8111 left
[01:45] *** gilimanjaro joined
[01:45] *** gilimanjaro left
[01:46] *** gilimanjaro joined
[01:47] *** gilimanjaro left
[01:47] *** gilimanjaro joined
[01:47] *** gilimanjaro left
[01:48] *** gilimanjaro joined
[01:55] *** kanru left
[01:57] *** hercynium left
[02:02] *** gilimanjaro_ joined
[02:02] *** fridim_ left
[02:03] *** gilimanjaro_ left
[02:03] *** gilimanjaro_ joined
[02:03] *** gilimanjaro__ joined
[02:03] *** gilimanjaro_ left
[02:07] *** gilimanjaro left
[02:15] *** Gruber joined
[02:16] *** Matt-W_ joined
[02:17] *** r0bby_ joined
[02:20] *** gilimanjaro__ left
[02:20] *** PacoLinux left
[02:24] *** PacoLinux joined
[02:24] *** Grrrr joined
[02:24] *** integral joined
[02:24] *** Matt-W joined
[02:25] *** Grrrr left
[02:29] *** Matt-W left
[02:34] *** diakopter left
[02:34] *** broquaint left
[02:34] *** zostay left
[02:34] *** scrottie left
[02:34] *** szbalint left
[02:34] *** legis left
[02:34] *** yves left
[02:34] *** lucs left
[02:34] *** allbery_b left
[02:34] *** shachaf left
[02:34] *** pmichaud left
[02:34] *** PerlJam left
[02:34] *** frobnitz left
[02:34] *** Woody2143 left
[02:34] *** mj41 left
[02:34] *** Ehtyar left
[02:34] *** Casan left
[02:34] *** Khisanth left
[02:34] *** japhb left
[02:34] *** Maghnus left
[02:34] *** IRSeekBot left
[02:34] *** jnthn left
[02:34] *** buu left
[02:34] *** ingy left
[02:34] *** Maddingue left
[02:34] *** cls_bsd left
[02:34] *** rafl left
[02:34] *** Gruber left
[02:34] *** Patterner left
[02:34] *** justatheory left
[02:34] *** cotto left
[02:34] *** gbacon left
[02:34] *** silug left
[02:34] *** gfldex left
[02:34] *** xinming left
[02:34] *** aindilis left
[02:34] *** kcwu left
[02:34] *** davidad left
[02:34] *** cxreg left
[02:34] *** REPLeffect_ left
[02:34] *** literal left
[02:34] *** yahooooo left
[02:34] *** mtve left
[02:34] *** charsbar_ left
[02:34] *** wolverian left
[02:34] *** buubot left
[02:34] *** Southen_ left
[02:34] *** Aisling left
[02:34] *** baest left
[02:34] *** skids left
[02:34] *** sri_kraih left
[02:34] *** jaldhar left
[02:34] *** c9s left
[02:34] *** dalek left
[02:34] *** jan_ left
[02:34] *** meteorjay left
[02:34] *** rhr left
[02:34] *** mofino left
[02:34] *** Diederich left
[02:34] *** pugs_svn left
[02:34] *** Eevee left
[02:34] *** orafu left
[02:34] *** wayland76 left
[02:34] *** Helios left
[02:34] *** [particle] left
[02:34] *** simcop2387 left
[02:34] *** lambdabot left
[02:34] *** pdc left
[02:35] *** pmichaud joined
[02:35] *** tarbo2 joined
[02:35] *** pasteling joined
[02:35] *** zev joined
[02:35] *** Trey joined
[02:35] *** lambdabot joined
[02:35] *** pdc joined
[02:35] *** simcop2387 joined
[02:35] *** [particle] joined
[02:35] *** Helios joined
[02:35] *** wayland76 joined
[02:35] *** orafu joined
[02:35] *** Gruber joined
[02:35] *** skids joined
[02:35] *** davidad joined
[02:35] *** Ehtyar joined
[02:35] *** legis joined
[02:35] *** Casan joined
[02:35] *** Patterner joined
[02:35] *** sri_kraih joined
[02:35] *** Khisanth joined
[02:35] *** justatheory joined
[02:35] *** jaldhar joined
[02:35] *** japhb joined
[02:35] *** Maghnus joined
[02:35] *** wolverian joined
[02:35] *** REPLeffect_ joined
[02:35] *** silug joined
[02:35] *** rafl joined
[02:35] *** diakopter joined
[02:35] *** broquaint joined
[02:35] *** zostay joined
[02:35] *** scrottie joined
[02:35] *** szbalint joined
[02:35] *** yves joined
[02:35] *** frobnitz joined
[02:35] *** Woody2143 joined
[02:35] *** lucs joined
[02:35] *** mj41 joined
[02:35] *** allbery_b joined
[02:35] *** shachaf joined
[02:35] *** PerlJam joined
[02:35] *** literal joined
[02:35] *** gfldex joined
[02:35] *** c9s joined
[02:35] *** xinming joined
[02:35] *** IRSeekBot joined
[02:35] *** ingy joined
[02:35] *** irc.freenode.net sets mode: +oo pmichaud PerlJam

[02:35] *** buu joined
[02:35] *** Maddingue joined
[02:35] *** cls_bsd joined
[02:35] *** jnthn joined
[02:35] *** dalek joined
[02:35] *** buubot joined
[02:35] *** jan_ joined
[02:35] *** meteorjay joined
[02:35] *** rhr joined
[02:35] *** Southen_ joined
[02:35] *** aindilis joined
[02:35] *** yahooooo joined
[02:35] *** mtve joined
[02:35] *** charsbar_ joined
[02:35] *** cotto joined
[02:35] *** Aisling joined
[02:35] *** gbacon joined
[02:35] *** mofino joined
[02:35] *** cxreg joined
[02:35] *** baest joined
[02:35] *** jrockway joined
[02:35] *** gravity joined
[02:35] *** maluco joined
[02:35] *** kcwu joined
[02:35] *** Diederich joined
[02:35] *** pugs_svn joined
[02:35] *** Eevee joined
[02:35] *** irc.freenode.net sets mode: +o jnthn

[02:35] *** OuLouFu joined
[02:36] *** pdc_ joined
[02:36] *** [particle] left
[02:36] *** zev left
[02:36] *** Helios left
[02:36] *** wayland76 left
[02:36] *** pdc left
[02:36] *** Trey left
[02:36] *** simcop2387 left
[02:36] *** tarbo2 left
[02:36] *** orafu left
[02:36] *** pasteling left
[02:36] *** lambdabot left
[02:36] *** zev joined
[02:38] *** Helios joined
[02:39] *** [particle] joined
[02:39] *** Trey joined
[02:43] *** Helios left
[02:43] *** wayland76 joined
[02:43] *** Helios joined
[02:43] *** simcop2387 joined
[02:43] *** pdc joined
[02:43] *** lambdabot joined
[02:43] *** tarbo2 joined
[02:43] *** pasteling joined
[02:44] *** tarbo2 left
[02:45] *** Helios- joined
[02:47] *** Helios left
[02:52] *** aindilis` joined
[02:52] *** alester joined
[02:54] *** pdc_ left
[02:54] *** gravity left
[02:54] *** xinming left
[02:54] *** kcwu left
[02:54] *** aindilis left
[02:54] *** gfldex left
[02:54] *** silug left
[02:55] *** pdc_ joined
[02:56] *** gfldex joined
[02:56] *** silug joined
[02:56] *** xinming joined
[02:56] *** gravity joined
[02:56] *** kcwu joined
[02:57] *** xinming left
[02:57] *** xinming joined
[02:59] *** gravity_ joined
[03:05] *** pdc left
[03:07] *** nihiliad1 joined
[03:08] *** nihiliad left
[03:13] *** tarbo2 joined
[03:14] *** pdc_ is now known as pdc

[03:18] *** AzureStone_ left
[03:19] *** AzureStone joined
[03:22] *** gravity left
[03:29] *** Tene_ joined
[03:30] *** Tene left
[03:30] *** Tene_ is now known as Tene

[03:42] *** sephee joined
[03:43] *** mikehh left
[03:46] *** orafu joined
[03:46] *** gilimanjaro joined
[03:47] *** legis left
[03:48] *** jaldhar left
[03:50] *** r0bby_ is now known as r0bby

[04:01] *** OuLouFu left
[04:02] *** gilimanjaro left
[04:56] *** alester left
[04:57] *** lambdabot left
[04:57] *** amoc left
[04:59] *** lambdabot joined
[05:23] *** mberends joined
[05:27] *** mberends left
[05:27] *** Tene_ joined
[05:28] *** mberends joined
[05:33] *** mikehh joined
[05:35] *** jnthn left
[05:35] *** Ehtyar left
[05:35] *** Khisanth left
[05:35] *** Maghnus left
[05:35] *** japhb left
[05:35] *** buu left
[05:35] *** Casan left
[05:35] *** Maddingue left
[05:35] *** cls_bsd left
[05:35] *** ingy left
[05:35] *** IRSeekBot left
[05:35] *** rafl left
[05:35] *** aindilis` left
[05:35] *** Gruber left
[05:35] *** justatheory left
[05:35] *** Patterner left
[05:35] *** gbacon left
[05:35] *** cotto left
[05:38] *** wolv joined
[05:38] *** jnthn joined
[05:38] *** aindilis` joined
[05:38] *** Gruber joined
[05:38] *** Ehtyar joined
[05:38] *** Casan joined
[05:38] *** Patterner joined
[05:38] *** Khisanth joined
[05:38] *** japhb joined
[05:38] *** Maghnus joined
[05:38] *** rafl joined
[05:38] *** IRSeekBot joined
[05:38] *** ingy joined
[05:38] *** buu joined
[05:38] *** Maddingue joined
[05:38] *** cls_bsd joined
[05:38] *** cotto joined
[05:38] *** gbacon joined
[05:38] *** irc.freenode.net sets mode: +o jnthn

[05:38] *** wolverian left
[05:40] *** Tene left
[05:42] *** araujo left
[05:42] *** araujo joined
[05:49] *** jnthn left
[05:49] *** Ehtyar left
[05:49] *** Maghnus left
[05:49] *** Khisanth left
[05:49] *** buu left
[05:49] *** Casan left
[05:49] *** Maddingue left
[05:49] *** japhb left
[05:49] *** cls_bsd left
[05:49] *** ingy left
[05:49] *** IRSeekBot left
[05:49] *** rafl left
[05:49] *** Gruber left
[05:49] *** Patterner left
[05:49] *** cotto left
[05:49] *** gbacon left
[05:49] *** aindilis` left
[05:50] *** jnthn joined
[05:50] *** aindilis` joined
[05:50] *** Gruber joined
[05:50] *** Ehtyar joined
[05:50] *** Casan joined
[05:50] *** Patterner joined
[05:50] *** Khisanth joined
[05:50] *** japhb joined
[05:50] *** Maghnus joined
[05:50] *** rafl joined
[05:50] *** IRSeekBot joined
[05:50] *** ingy joined
[05:50] *** buu joined
[05:50] *** Maddingue joined
[05:50] *** cls_bsd joined
[05:50] *** cotto joined
[05:50] *** gbacon joined
[05:50] *** irc.freenode.net sets mode: +o jnthn

[05:54] *** skids left
[06:00] *** nihiliad1 left
[06:14] *** nihiliad joined
[06:50] *** masak joined
[06:51] <masak> morning, junctioncamels.

[06:58] <mberends> ah,  morning, junctionmask.

[06:58] <lambdabot> mberends: You have 1 new message. '/msg lambdabot @messages' to read it.

[06:58] <mberends> @massage

[06:58] <lambdabot> masak said 3d 10h 6m 6s ago: oh, and for some Pod6 tests, November's Test::InputOutput might be more fitting. http://use.perl.org/~masak/journal/37976

[06:59] <mberends> 3 days ago! mberends-- for poor attendance.

[06:59] <masak> happens to the best of us.

[06:59] <masak> Easter only comes once a year.

[07:00] <masak> mberends: I can haz Lobster in browser! will blog about it today, but if you're curious, it's in the web repo, in bin/run-lobster

[07:00] * mberends is _very_ curious

[07:01] <masak> I copied HTTP::Daemon to the Web repo, like I said I would. happily, no mods were required, but I'm not sure that will keep being true.

[07:01] <masak> there is quite some overlap between HTTP::Daemon and Web::Re*.

[07:02] <masak> I think the former will hace to yield some autoracy, but I'll have to investigate it more -- specifically, Rack's concept of "middleware".

[07:03] <mberends> it look like we shall hammer out some inter-module co-operation at the Hackathon.

[07:03] <masak> indeed.

[07:04] <masak> mberends: pmichaud wants such a discussion also.

[07:04] <masak> with a slant towards module database format in Rakudo, methinks.

[07:04] <masak> my goal at present, before I blog, is putting Druid in a similar wrapper. that'd be the first non-trivial app to run on top of Web, and it'd be a good goal for week 4.

[07:04] <masak> for now, I'm cutting as many corners as possible, which means no SVG, and no lintels. :/

[07:05] <masak> just JFDI-ing, and improving from there.

[07:05] <mberends> masak++: excellent plan. you can output text in <pre>output</pre> for now.

[07:06] <masak> for the Druid board? aye.

[07:06] <mberends> aye

[07:06] <masak> and then just a dumb list of sarsen moves as links.

[07:08] <mberends> do you know if  there be dragons in recursive regexen? (for grammar Pod).

[07:08] <masak> ah, './proto update all' still feels like such a luxury,,,

[07:08] <masak> mberends: no, 'cus I haven't seen the rakudobug about it...

[07:09] <masak> h0y, html-template is b0rked.

[07:09] <mberends> oyez, here too last coupla days

[07:10] <masak> ay, no. it's proto that's b0rked.

[07:10] <masak> musta been my underscores-to-dashes campaign did it.

[07:11] <mberends> underscores_to-dashes also b0rks on regex names :(

[07:11] <masak> oh!

[07:11] * masak thinks he knows what is the problem

[07:12] <masak> rakudo: sub do-build {}; do-build

[07:12] <p6eval> rakudo 5b679a: OUTPUT«Could not find non-existent sub build␤current instr.: '_block14' pc 58 (EVAL_16:39)␤»

[07:12] * masak submits rakudobug

[07:12] <masak> mberends: any reason not to call that sub just 'build'?

[07:13] <mberends> nope.

[07:13] * masak renames, then

[07:14] <masak> rakudo: sub sub-build {}; sub-build

[07:14] <p6eval> rakudo 5b679a: OUTPUT«Malformed routine definition at line 1, near "-build"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[07:14] <masak> all this is against the LTM, as I understand it.

[07:16] <masak> rakudo: sub method-build {}; method-build

[07:16] <p6eval> rakudo 5b679a: OUTPUT«Malformed method definition at line 1, near "-build"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[07:16] <masak> substituting if, given, for, where and else works fine, though.

[07:17] <mberends> masak, do you mean LTM has difficulty with '-' a an identifier char?

[07:17] <mberends> *as

[07:17] <masak> I mean the LTM as a principle should allow such names.

[07:17] <masak> it shouldn't tokenize on the keywords as it seems to do now.

[07:18] <masak> mberends: back to you. what was the recursive weirdness in Pod gramamrs?

[07:19] <mberends> blocks may contain nested instances of the same type, several turtles down.

[07:23] <masak> an example?

[07:27] <mberends> Pod Parser v2 development concentrates on a full grammar for all of Pod, as STD does it for all of Perl 6. Emitters are just swappable action classes. Initially the v1 test suite looked good for v2 as well, but getting the grammar to parse all the variations is tough. =begin can contain =for can contain =begin etc.

[07:28] <masak> ah. yes.

[07:29] <mberends> stream based parsing is so much easier, and that's what gave that line by line output you noticed earlier.

[07:29] <masak> aha.

[07:30] <masak> yes, I do something like streams in Text::Markup::Wiki::MediaWiki too.

[07:30] <masak> but I don't get that nice effect.

[07:31] <mberends> literal++ is also starting to play with Pod Parser v1 for GSoC, and is worried about speed too. The tree parser has tighter inner loops making it about twice as fast.

[07:31] *** DemoFreak joined
[07:31] <masak> I'm getting speed worries in many places right now.

[07:32] <masak> we need someone who is pathologically crazy about optimization to take an interest in Parrot and Rakudo.

[07:33] <mberends> lying awake thoughts of a stream based parser in C began to tease my neurons - is that disloyal, or a wake up call?

[07:34] <masak> mberends: the only one that makes the rules is yourself.

[07:34] <masak> and bindings to C are not much explored, at least not by us Perl6ers.

[07:34] <masak> so it'd definitely be interesting.

[07:34] <masak> been thinking similar things for a Druid computer player.

[07:35] <mberends> v3 will be in only C then, just to give a performance comparison.

[07:35] <masak> :)

[07:35] <mberends> 15k RAM per 1 byte of document was ridiculous.

[07:35] <masak> o_O

[07:38] <mberends> how's the procrastination going? (re: slides etc)

[07:38] <masak> mberends: I was on a bus for 9 hours yesterday.

[07:39] <masak> took the time to make a mind map of all I want to put in the talk.

[07:39] <masak> so I feel on track.

[07:39] <mberends> :)

[07:39] <masak> that said, my plans for the slides are rather... ambitious.

[07:40] <masak> so there's still plenty of chance for crises and last-minute stuff.

[07:40] <masak> will demo a reasonably ready version for viklund on Tue.

[07:40] <masak> thinking of uploading the slides beforehand to get feedback on them. haven't decided on that yet.

[07:41] <mberends> compared to taking over the world, it should be a walk in the park ;) If there's any way I can help, feel free to ask.

[07:41] <masak> thank you.

[07:42] <masak> I think you'll quite naturally become the final reviewer of the stuff. :)

[07:42] * mberends looks forward to that too

[07:43] <masak> mberends: hm, so each request to the web server invokes the script in bin/ anew?

[07:44] <mberends> correct. in a child process. That's why deleting its .pir file can give you a dynamic recompile.

[07:44] * masak wonders where he'll store the game state in Druid, then

[07:44] <masak> I'll basically have to make a persistence layer.

[07:47] <mberends> yes, a layer for the logical design, but either cookies or url parameters for physical storage if little data, or one of those with a key identifier and local storage (file, database) if much data.

[07:47] <masak> fairly little data. needs local storage if I don't trust the clients.

[07:48] <masak> and it's a game, so I don't.

[07:48] <masak> but one-step-at-a-time.

[07:49] <masak> I've just discovered that Druid::View::Text can only print things, it doesn't stringify them and return them as strings.

[07:49] <masak> the ironical thing is that I've been touting that as an antipattern for years to my studens, and now I find I've done it myself.

[07:49] <masak> s/studen/student/

[07:50] <mberends> heh. Pod Parser v1 was also I/O structured and v2 will be strings throughout.

[07:50] <masak> nice streaming effect, bye bye.

[07:51] <masak> ...until we get lazy strings, at least.

[07:52] <masak> rack and web return a list of strings as a web response. perhaps something to consider, to avoid unnecessary string concatenations?

[07:52] <mberends> don't prematurely optimize

[07:53] <masak> well, there's a tension between that one and "don't make interfaces that you know'll be slow".

[07:53] <masak> but you're right.

[07:54] <mberends> it's the current sensation of the ble<[ea]>ding edge.

[07:55] *** ejs joined
[07:56] <mberends> afk & # shower

[08:02] * masak can haz Druid in browser

[08:02] <masak> \o/

[08:02] <masak> looks like crap, but that's the board alright.

[08:02] * masak fixes crap

[08:07] <masak> yah. better.

[08:08] *** iblechbot joined
[08:20] <masak> hm, I could make good use of Tene_'s Tags module in what I'm writing.

[08:25] <mberends> masak: when you're ready, I can host a DruidServer at autoexec.demon.nl:<yourport>

[08:25] <masak> some ways to go still -- but hey, thanks.

[08:25] <masak> might have something ready till Friday.

[08:26] <masak> I'll bring my LEGO Druid board to NPW, by the way.

[08:26] <mberends> cool!

[08:30] * masak converts the Druid app to Tags

[08:30] <masak> Tags has an API that's pleasant to write in.

[08:31] *** ejs left
[08:35] <masak> @tell Tene_ I believe there's a typo in the post http://blogs.gurulabs.com/stephen/2009/03/tagspm-for-the-perl-6-web-proj.html -- I think there must be a comma between ':id<numberlist>' and '{', since both these are terms.

[08:35] <lambdabot> Consider it noted.

[08:38] <Casan> I had to lookup premature optimization, and found this interesting tidbit. http://www.acm.org/ubiquity/views/v7i24_fallacy.html and its enlightening.

[08:38] <masak> Casan: looks very interesting. will read.

[08:39] <masak> I do believe misplaced optimization causes a lot of grief in the world of programming.

[08:39] <masak> people simply should not do anything of the sort unless they keep a profiler running alongside.

[08:40] <masak> speaking of superstitions, I'm getting a very spooky error from Rakudo.

[08:41] <Casan> the article gets the point through too. premature optimization does not mean you shouldn't optimize. it only means you should really consider your battles.

[08:41] <masak> it says something about positionals, and then gives me a stack trace that claims that a block in Tags was called from Druid::Game's new methos.

[08:41] <masak> s/methos/method/

[08:41] <masak> Casan: that, and measure the results.

[08:42] <masak> Casan: it's extremely hard to know what all the layers will do to the speed of one's code.

[08:42] <masak> even assembler is non-trivial that way nowadays, with all the funny stuff going on in processors.

[08:43] <Casan> yep. I try to balance this by doing what I can to adopt and apply best practices, but it all comes down the how quality is measured by the target user.

[08:44] <masak> aye.

[08:44] <masak> Casan: so, have you taken Rakudo for a spin yet? :)

[08:45] <Casan> masak: yep have followed the development for years, and try and read all I can.

[08:45] <masak> yes, but actually writing a script...?

[08:45] <Casan> masak: yeah, but nothing as big as november.

[08:46] <masak> ok. what did you write?

[08:47] <Casan> just basic tests and snippets to see how things worked, nothing out of the ordinary.

[08:47] <masak> ah. you're where I was last spring, sounds like.

[08:47] <masak> before I got all crazy and tried to write a wiki engine in Perl 6.

[08:47] <Casan> masak: currently I have to follow a course at uni where they teach C#, but it bores me, so I try to see how I can do all the same examples in the books in rakudo.

[08:48] <masak> nice.

[08:48] <masak> we need stuff like that.

[08:48] <masak> consider uploading your results to perl6-examples at github, for everyone's benefit.

[08:50] <Casan> I will, even considered writing some mini books about the stuff, but I'm not of big name fame, but maybe I'll just do it anyways :)

[08:51] <masak> Casan: the Perl 6 community is small. to reach fame, you only have to do something that people like. that's all.

[08:51] <Casan> I am currently looking into how C#'s properties concept can be applied in perl6. but I won't get into details here now, as I don't know if others know about how C# does stuff.

[08:52] <masak> I bet some people have an inkling. I don't.

[08:53] *** mjk joined
[08:53] <Casan> masak: true, if people like what you are doing, they would be inclined to read/use it despite the fairly unknown origin.

[08:53] <Casan> ohh, well, lets just do it.

[08:54] <mjk> why pugs is stopped?

[08:55] <masak> mjk: lead developer turned to other things.

[08:56] <Casan> have you heard anything about DBI for perl6 development yet? My last impresssion was that it was halted, and when it will pickup it will be rooted in the parrot as a DBI layer for all HLL's like mod_parrot/mod_perl but I'm curious.

[08:57] <mjk> pugs is coming along nicely, why stop it?

[08:57] <masak> Casan: haven't heard much. there are supposedly some proof-of-concept scripts in Parrot's examples/ dir.

[08:57] <masak> mjk: lead developer turned to other things.

[08:57] <masak> mjk: it's entirely possible for someone else to pick it up.

[08:57] <masak> but nobody has done that.

[08:57] <mberends> Casan: nice article about optimization. re: DBI, there is a DBDI being touted as the Next Generation, but no Rakudo implementation yet.

[08:58] <mjk> masak: thank you

[08:58] *** meteorjay left
[08:58] <masak> mjk: you could check out Rakudo. it passes something like 10k tests.

[08:58] <mberends> Casan: do you occasionally write ++var instead of var++ because it is faster?

[08:59] * mberends used to but gave up because it was less readable

[08:59] <masak> I think it's more readable. I don't care about the speed.

[08:59] <masak> it's verb-object, which I'm used to.

[08:59] <mjk> masak: When will perl6 be ready or released?

[09:00] <mberends> heh

[09:00] <masak> mjk: :)

[09:00] <masak> mjk: ask yourself this instead: what is it that you would like to do, today?

[09:00] <masak> then maybe we can guide you further.

[09:00] <mjk> heh

[09:00] <masak> just sitting around hoping for Christmas is not something we tend to do here.

[09:01] <Casan> mberends: I wouldn't do it for speed, in the bigger picture readability also have an impact on another dimension of speed. but if it was to achieve the completion of a task that needs me doing I would.

[09:01] <masak> mjk: realistic answer: it'll be a while yet. I don't make predictions, but not this Christmas, and possibly not next either. I don't know.

[09:02] <masak> mjk: that said, much can be done in Rakudo today. it's really, really worth checking out.

[09:03] <mjk> masak: :)

[09:05] <Casan> mjk: I view it like a base inventory in a kitchen. when a feature that is to be used quite often is stable I add it and use it consistently. And I try to improve my base inventory continously, but try not to pressure it unstable.

[09:06] *** rafl left
[09:07] <mberends> Casan: the C# properties feature would be a fairly radical language extension, so it's unlikely to be adopted this far down the road. Still, the Rakudo developers surprise us regularly with quick wins. I would not want to reschedule Christmas just for what is basically syntactic sugar though.

[09:08] <masak> syntactic sugar is for modules, once we have macros.

[09:09] <mberends> then properties will come, quite easily

[09:10] * masak is tracking down a really strange bug

[09:10] <masak> something to do with exporting, I'll bet.

[09:10] <masak> ah. yes.

[09:11] <Casan> mberends: yeah I couldn't find it anywhere in s12, and figured that for now you have to use setters and getters to achieve enhanced encapsulation, or just just . is rw and use the where (trait?) for constraints that would be a typical reason for using the properties concept.

[09:11] <masak> @tell Tene_ your Tags.pm is exporting 'map' !

[09:11] <lambdabot> Consider it noted.

[09:12] <mberends> Casan: totally agreed. What masak++ said makes sense: you can contribute a properties extension once macros are done :)

[09:13] <Casan> but something I find really interesting now is to compare the perl6 OO model in an UML perspective.

[09:14] <Casan> I haven't found much writing about that anywhere though, and I wonder how much it has been considered in the design fase.

[09:14] <mberends> hmm, interesting, yes. I thought UML was too vague or abstract to impact language design.

[09:15] <Casan> mberends: it may be, but still of importance. for larger app design and teaching its invaluable.

[09:16] <mberends> Casan: yes, that's at the high level.

[09:16] <Casan> ohh thats not an absolute, but a feeling I seem to have been conditioned with from uni.

[09:19] <mberends> UML avoids or shuns implementation. Pugs, Parrot and Rakudo are doing that hard part, and have different meta object implementations.

[09:20] <Casan> but hey I have no preference per se. I just observe now while running through this CS course where C# and UML is the main teaching, and the outcome is that I become more aware of what would be required of perl6 to be used as an alternative.

[09:21] <mberends> Casan: the discussions in #perl6 about SMOP, Moose, elf and so on would interest you.

[09:21] <Casan> introspection features are good.

[09:22] <Casan> mberends: yeah how so? 

[09:22] *** rafl joined
[09:22] <masak> just need to share this; it's so pretty: http://gist.github.com/93929

[09:24] *** mjk left
[09:24] <mberends> Casan: you seem interested in how the OO theory becomes implementation, and those are alternative implementations

[09:25] <mberends> masak: thanks for sharing that. Tene++, and yes, manual source layout is best.

[09:25] <masak> :)

[09:26] <Casan> mberends: ahh true. yeah been looking into them already, but I wondered if there were something special from the previous talk on #perl6 I should know. but I'll just tag along.

[09:27] <Casan> didn't know about elf though, thanks for the highlight.,

[09:27] <masak> I'm intrigued by all three of those.

[09:28] <mberends> Casan: your most valuable contribution to this group might be to keep asking how Perl 6 can match or improve on C#, and that might result in some fresh ideas.

[09:29] <masak> I would argue that people can easily maximize their contribution by writing code on Rakudo. doens't have to be much. it's ridiculously easy to find RT-able things that way.

[09:29] *** iblechbot left
[09:29] <masak> s/doens/doesn/

[09:30] <mberends> yes, I meant ask by trying to do it and getting help when necessary

[09:30] <masak> um, and by 'writing code on Rakudo', I mean 'writing Perl 6 code that runs on top of Rakudo', not patching Rakudo itself.

[09:30] <masak> mberends: oh, ok. aye.

[09:31] <Casan> mberends: sure, from a learners point of view.

[09:31] <Casan> masak: hehe just try to stop me, if not writing code, I would wrong around as a mute.

[09:32] <masak> Casan: release early, release often. where's the code? :)

[09:32] * Casan is a mute

[09:32] <Casan> ;)

[09:32] <masak> ;)

[09:33] *** rafl left
[09:33] <mberends> Casan: try porting stuff. I have enough challenge porting Perl 5, you should have plenty of challenge porting .NET examples.

[09:37] *** rafl joined
[09:40] <Casan> btw, I tried testing method return type (eg. class myclass { method mymethod () returns Str { my Int $number = 1; return $number; } } my $myclass = myclass.new(); say $myclass.mymethod(); ) but it doesn't croak, and I wonder if its because something is still to be implemented, or if I'm going about this wrong? (I'm using the parrot-1.0.0 and rakudo addon packages)

[09:42] <mberends> Casan: will try it for you soon

[09:44] <mberends> masak: seeing that last gist again, Tene++ needs to replace '{' with ':' to eliminate your '}', and then you have Python!

[09:44] <masak> mberends: I was thinking similar things.

[09:44] <masak> it would indeed be nice to have that.

[09:44] <masak> but it requires macros too.

[09:45] <masak> (and people will generally not be amused.)

[09:45] <mberends> TimToady++ would never admit it was cool :) yes, like you said.

[09:46] <masak> also, the colon in that place clashes with the invocant colon.

[09:46] <masak> and these are subs.

[09:46] <mberends> ah well, it was only a fanciful thought

[09:47] <masak> I liked it. I had half of that thought before.

[09:50] <masak> latest Druid now has a dep on Web.pm :)

[09:51] <mberends> rakudo: class myclass { method mymethod () returns Int { my Int $number = 1; return $number; } }; my $myclass = myclass.new(); say $myclass.mymethod(); # worked with Int

[09:51] <p6eval> rakudo 5b679a: OUTPUT«1␤»

[09:51] <mberends> rakudo: class myclass { method mymethod () returns Str { my Int $number = 1; return $number; } }; my $myclass = myclass.new(); say $myclass.mymethod(); # not with Str

[09:51] <p6eval> rakudo 5b679a: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17360 (src/builtins/control.pir:222)␤»

[09:51] <masak> jnthn++

[09:52] <mberends> Casan, you probably needed just a ';' after the class declaration

[09:52] <masak> aye, Perl 6 mandates that.

[09:53] <masak> (when you write one-liners, that is.)

[09:57] <Casan> ohh, never knew about the ; but also maybe something was checked in post the release I have installed on the w32 machine I'm currently using which enables the check.

[09:57] <masak> yes.

[09:57] <masak> if you're running a release, it was.

[09:58] <Casan> I really should either switch to my fbsd environment, or find out how to compile the latest rakudo on w32.

[09:58] <mberends> Casan: yes, both :)

[09:59] *** mikehh_ joined
[09:59] <Casan> wish the former, but must be the latter, as the C# course requires visual studio, and switching all the time makes me crazy.

[10:00] <mberends> most of us are a little crazy here, you'd be in good company 

[10:01] <masak> mberends: my $perl6lib = %*ENV<PWD> ~ '/lib'; # having trouble with this line right now. since Druid now deps on Web.pm, PERL6LIB needs to contain the latter as well...

[10:01] <mberends> mono runs most C# in Unix

[10:01] <masak> mberends: tricky problem. :/

[10:01] <Casan> ;) but great checkin jnthn, now I can get past this chapter with a good feeling.

[10:02] <wayland76> Casan: Use Linux xen as base, and run FreeBSD and W32 on top of it

[10:03] * wayland76 ducks :)

[10:03] <mberends> masak: hmm, tricky indeed. probably need to split on ':'

[10:03] <Casan> mberends: yeah but I think icazas pursuit is pointless, the masses will always see it lacking behind in implementation, and ms would never let it come to par, there will always be something, and with this in mind the general developer or more the company does not have the balls to bet on it in the long haul.

[10:03] * mberends gulps

[10:03] <masak> mberends: the problem is how to find Web.pm from Druid. that information is in proto's config.proto.

[10:04] <mberends> oh, yes, a deeper problem by far

[10:04] <Casan> wayland76: hehe yeah, thought about that, but.

[10:04] <masak> :/

[10:04] <mberends> masak: told you so (one /lib to rule 'em all) ;)

[10:05] <masak> I need to mull over this.

[10:05] <wayland76> masak: I think that's legal in holland :)

[10:05] <wayland76> ( s/holland/Nederlands/ :) )

[10:05] <masak> wayland76: you're thinking of mills. :P

[10:06] <wayland76> No, I'm thinking of mull :)

[10:06] <masak> we can't introduce a dependency on proto in any way, because that's against proto's philosophy.

[10:06] <masak> this needs to work without proto as well.

[10:06] <wayland76> (not that I use it, or anything, I just can't resist a joke)

[10:07] <masak> wayland76: I feel I'm missing something. but that's OK. maybe it's a sign of innocence.

[10:07] * mberends gets it now. 

[10:07] *** mikehh left
[10:08] <wayland76> masak: Or cross-cultural miscommunication.  In Australia at least, "mull" is a fairly common slang term for marijuana, which I believe is legal in the netherlands

[10:08] <masak> ah. yes.

[10:09] <mberends> some Dutch windmills, while protected as national monuments, are not allowed to operate because the noise might disturb the neighbors :/

[10:09] <wayland76> But I don't even do coffee or cigarettes, let alone marijuana

[10:09] <Casan> masak: I've been giving mod_perl6 vs FastCGI some thought.. have you looked into it to speed up november?

[10:09] <mberends> in Amsterdam "coffee shop" is a joint that sells joints

[10:09] <wayland76> mberends: I'll keep that in mind.  Somewhat pointless :)

[10:09] <masak> Casan: yes.

[10:10] <wayland76> mberends: I didn't know that.  I'll keep it in mind if I ever need to make more jokes :)

[10:10] <wayland76> masak: Would you care to elaborate? :)

[10:12] <masak> wayland76: on mod_perl6? well, the guy who writes it (forgot his nick) contacted us a few months back.

[10:12] <Casan> jhorwitz

[10:12] <masak> right.

[10:12] <masak> he sent along a few patches that'd make November run on mod_perl6, and we accepted them, with slight modifications.

[10:12] <masak> haven't heard from him since.

[10:12] <wayland76> ok, cool

[10:13] <wayland76> I've been a HTML::Mason user (which likes mod_perl) in the past, so I was wondering :)

[10:13] <Casan> he seems to be a lone runner, but good to hear its connected.

[10:13] <Casan> but how about fastcgi?

[10:14] <masak> we haven't done anything with fastcgi.

[10:16] <Casan> I have only been using mod_perl, but looked into it because matt s trout said why not :) from what I gather,  enabling perl6 via fastcgi ought to be easier for the short run, but I wonder if anyone have looked into it.

[10:16] <masak> nope. you're welcome to.

[10:17] <mberends> HTTP::Daemon needs only two things to match fastcgi speedwise: native sockets (almost ready) and threads. Sockets will be a tempting Hackathon mini project in Oslo.

[10:17] <masak> mberends: what's blocking sockets at present?

[10:18] <mberends> apart from me, dunno :/

[10:18] <masak> $self.block()

[10:18] <mberends> bacek++ says it's good to go

[10:18] <Casan> ok, now my want_to list is full, I better leave irc for a while to work on my marketing research report for uni, so I can get into some coding without interruption (wishful thinking).

[10:18] <masak> Casan: have the appropriate amoung of fun.

[10:19] <bacek> Who call my name?

[10:19] <masak> s/ng/nt/

[10:19] <mberends> Casan: ok, see you soon.

[10:19] <masak> mberends: see what you did, now you woke bacek. :)

[10:19] <wayland76> bacek: I didn't but you accidentally asked me about HTTP::Daemon the other day, and mberends should be able to give you an update :)

[10:19] <mberends> bacek, I just gave your karma a nudge, that's all

[10:19] <bacek> masak: it's only 8PM here :)

[10:19] * masak knows that

[10:20] <wayland76> bacek: masak is implying that you're a bear (or something) being woken up, and possibly wanting to eat us all for dinner :)

[10:21] <wayland76> well, maybe implying is too strong a word

[10:21] <masak> insinuating.

[10:21] <bacek> mberends: I can try to wrap native libfcgi in parrot. Never did it before but it good chance to learn something new :)

[10:21] <wayland76> metaphorising :)

[10:21] <masak> bacek: preved medved! :)

[10:21] <mberends> o mea culpa

[10:22] <wayland76> bacek: Casan wants to do that too :)

[10:22] <wayland76> oh wait, maybe not

[10:22] <bacek> wayland76: I'm almost Australian bear now. And Koalas never wake up.

[10:22] <wayland76> no, I think I'm wrong :)

[10:22] <wayland76> ...and nor are they bears :)

[10:23] <wayland76> well, they do wake up.  Didn't you see that one in the bushfire photos?  Now you know what it takes to wake one up :)

[10:23] <bacek> masak: Ilia teach you something bad :)

[10:23] <masak> bacek: seems so. :)

[10:23] <masak> \o/ preved!

[10:24] <bacek> wayland76: I hope that my butt will not be in this kind of fire.

[10:24] <bacek> masak: >_< :)

[10:24] <wayland76> bacek: Sydney should be safe (or safer, anyway)

[10:25] * masak stops juggling Russian memes now

[10:25] <bacek> wayland76: I hope so. But who knows...

[10:26] <Casan> wayland76: bacek is better qualified, and our desires should not be mutually exclusive, bacek for the go :)

[10:26] <wayland76> Like I said, I'm wrong :)

[10:26] <bacek> Casan: As I told I never tried to do something with NCI... 

[10:26] <wayland76> But only I'm allowed to say so, so thank you :)

[10:27] <wayland76> Anyway, I'm supposed to be elsewhere

[10:27] * wayland76 teleports...

[10:27] <mberends> bacek: during the Oslo Hackathon coming weekend I plan to rewrite the Rakudo based HTTP::Daemon (a port of the Perl 5 one) to use socket(), listen(), accept() and so on. A previous attempt stalled and crashed in masak's laptop, so it needs more care this time.

[10:27] * Casan vanshes

[10:27] <bacek> wayland76: nearest BBQ? :)

[10:27] * masak disappears

[10:28] <wayland76> bacek: Well, no, but in my primitive hunter-gatherer lifestyle at the moment, I need to hunt some yoghurt and kill it before I can eat it

[10:29] <wayland76> (or maybe not kill it -- yoghurt contains live culture, which is how you can tell the difference between it and Australia :) )

[10:29] <bacek> mberends: It's good. I can try to help with it (assuming very different timezones)

[10:30] <mberends> bacek: thanks, looking forward to it. Rest assured hacking will be almost 24hr.

[10:30] <bacek> wayland76: be careful! Friend of mine spent couple of days fighting with "living culture" after eating some yoghurts :)

[10:32] *** pmurias joined
[10:32] <mberends> they shouldn't build those dairy plants near hospitals ;)

[10:33] * bacek returns to sleep (and hacking Parrot guts to help his evil plan to rule the World)

[10:35] <bacek> mberends: To use corpse as compost? :)

[10:35] * mberends tries not to think too much about the origin of anything he eats

[10:44] *** gilimanjaro_ joined
[10:46] *** M_o_C joined
[10:49] *** redicaps joined
[10:49] *** redicaps left
[10:50] *** fridim__ joined
[10:51] *** masak left
[11:01] *** Casan left
[11:01] *** barney joined
[11:13] <wayland76> Oh, I regularly think "dead chicken" as I'm eating it :)

[11:13] *** wayland76 left
[11:15] <mberends> Oh, 'live culture' versus Australia hit me only several minutes later :)

[11:18] <jnthn> Vesele velku noc, camelfolk. :-)

[11:19] <mberends> jnthn, good afternoon

[11:20] <jnthn> mberends: hi :-)

[11:21] <mberends> scrollback will show you that typed return values are much appreciated :)

[11:22] <jnthn> Yes, I saw that.

[11:22] <jnthn> Now we just need to finish up the cases where they don't quite work yet.

[11:22] * jnthn wonders when someone will find the first practical use for multi-dispatch based on return type

[11:23] <jnthn> .oO( if they didn't already )

[11:23] <mberends> .oO( sounds like a want() kinda thing )

[11:23] <mikehh_> If you got somethin' there someone will find a use for it :-}

[11:25] <mikehh_> weather it is practical .....

[11:25] <mikehh_> sorry :-}

[11:27] <mikehh_> as for live kulture in the antipodes

[11:29] *** fridim__ is now known as fridim_

[11:29] <pmurias> jnthn: multi-dispatch base on return types is similiar to context

[11:30] <pmurias> jnthn: things like read :: Read a => String -> a in haskell would use that when ported over into a dynamic setting

[11:31] *** gilimanjaro_ left
[11:34] *** goksie joined
[11:38] <mikehh_> BTW t/spec/S09-typed-arrays/hashes.t PASSes

[11:40] <mberends> mikehh_: so that's all tests passing again after that, notso?

[11:41] <mikehh_> I got 2 TODO's passing and so ran the test separately and a SKIP also passes

[11:43] <mikehh_> that was a couple of hours ago but I had a nap after I started make spectest

[11:43] <jnthn> pmurias: Aye, I can see a relation there.

[11:43] <jnthn> pmurias: I really like the way that it Just Works in Perl 6 once you implement the more generic case of role-based dispatch.

[11:45] <jnthn> (I didn't have to do anything special at all to make dispatch on return type work, just made sure stuff did Callable[::T]

[11:45] <jnthn> )

[11:50] <pmurias> jnthn: dispatch on return type works in rakudo?

[11:53] *** ludan joined
[11:54] *** M_o_C left
[11:54] <jnthn> pmurias: Sure

[11:54] <jnthn> pmurias: Just the same mechanism that any other parametric role works.

[11:54] <jnthn> e.g.

[11:56] <jnthn> rakudo: role Foo[::T] { }; multi a(Foo of Int $) { say 1 }; multi a(Foo of Str $) {say  2 }; my $x = 42 but Foo[Int]; my $y = 42 but Foo[Str]; a($x); a($y);

[11:56] <p6eval> rakudo 5b679a: OUTPUT«1␤2␤»

[11:57] <jnthn> Int &x in a signature is really just Callable[Int]

[11:57] <jnthn> (Or Callable of Int)

[11:58] <jnthn> So it (and typed arrays - Positional[Int] - and typed hashes - Associative[Int]) just all falls out quite neatly. :-)

[12:00] <pmurias> jnthn: i thought you meant something like multi a(--> Int) {1};multi a(--> Str) {"2"}

[12:00] <jnthn> jnthn: Oh, that!

[12:01] <jnthn> No, that's different.

[12:01] <jnthn> And not even required in 6.0.0.

[12:01] <jnthn> And decidedly non-trivial.

[12:02] <jnthn> Anyways, the weather here is *gorgeous*.

[12:03] <jnthn> So I'm going outside for a while...hopefully for a bit of a walk (got a not-quite right knee... :-()

[12:03] <jnthn> Back later.

[12:03] <pmurias> have fun ;)

[12:03] * mberends has a completely left knee and a completely right one, fortunately

[12:07] *** masak joined
[12:08] *** payload joined
[12:12] <masak> mberends: I think it's reasonable of a Configure script to expect the dependent projects to already be in PERL6LIB.

[12:14] <mberends> masak: yes, if proto has not provided the dependencies, proto+1 should have.

[12:15] <masak> mberends: well, thing is, I feel a need to make Well-Thought-Out Practices for projects without mixing proto into it.

[12:15] <mberends> masak: this landscape may be affected by planning that takes place next weekend.

[12:16] <masak> definitely.

[12:16] *** Whiteknight joined
[12:16] <masak> I just Want Stuff to Work Now, as usual. :)

[12:17] <mberends> :) :) any WTOP you write will be tabled as exhibits at said meetings :)

[12:18] *** eternaleye joined
[12:21] <masak> mberends: Acronym Finder does not know what WTOP means. me neither.

[12:22] <masak> I suppose it's not "Worker Trainee Opportunities Program"...

[12:22] <mberends> it may be bold, but Perl 5 plays nicely with Ports, Debian dpkg tools, and OpenSolaris, so maybe Rakudo should aim to be assimilated into those rather than planning Yet Another Package Installer. ... it's Well-Thought-Out Practices!

[12:23] <masak> I'm all for making proto obsolete.

[12:23] <masak> it'll be the prettiest corpse on the block. :)

[12:25] <mberends> Web Transitional Object Packager

[12:26] <masak> that sounds Very Painful.

[12:26] <mberends> yeah, the Transitional has me worried too.

[12:27] <masak> all those words worry me.

[12:27] <mberends> --worry--

[12:28] *** ihrd joined
[12:29] <ihrd> hi there

[12:29] <ihrd> pmichaud: are you there?

[12:30] <masak> ihrd: pmichaud usually makes his presence known at the beginning of his day by committing the spectest statistics. so my guess is "no".

[12:32] <masak> general question: parsing XML in Rakudo today, what's my best shot?

[12:32] *** jonalv joined
[12:32] <masak> jonalv: OH HAI

[12:32] <jonalv> o/

[12:34] <ihrd> masak: ah :( can`t catch him to ask my question abour :pair patch

[12:34] <ihrd> Jonathan said pm have reson to do not aplly it

[12:34] * jonalv is planning to use masak++ and Perl6++ to parse data dumps from Eve online today. Perhaps he might even learn some Perl6 in the process.

[12:36] <masak> ihrd: you can always @tell via lambdabot.

[12:36] <masak> @help tell

[12:36] <lambdabot> tell <nick> <message>. When <nick> shows activity, tell them <message>.

[12:36] <masak> lambdabot: tell

[12:36] <masak> @tell

[12:36] <lambdabot> Plugin `tell' failed with: Prelude.head: empty list

[12:36] <masak> hm.

[12:37] <ihrd> masak: I know, but I used private messages instead

[12:38] <masak> ihrd: oki.

[12:45] *** DemoFreak left
[12:49] *** kane_ joined
[12:51] <mberends> masak: World Takeover Obscuritization Plan

[12:54] * mberends cannot do much constructive work today, brain numbed by O'Reilly Active Directory book

[12:55] *** payload left
[12:55] *** pmurias left
[12:56] *** mikehh_ left
[12:57] *** mikehh_ joined
[12:57] *** mikehh_ left
[12:59] *** mikehh joined
[13:02] *** amoc joined
[13:05] *** gravity_ is now known as gravity

[13:11] *** masak left
[13:11] *** masak joined
[13:27] *** pdc is now known as pdc303

[13:29] *** eternaleye left
[13:37] *** ludan left
[13:41] *** gilimanjaro joined
[13:42] *** gilimanjaro left
[13:43] *** gilimanjaro joined
[13:43] *** gilimanjaro left
[13:43] *** gilimanjaro joined
[13:44] *** gilimanjaro_ joined
[13:44] *** gilimanjaro left
[13:45] *** gilimanjaro joined
[13:45] *** gilimanjaro_ left
[13:48] *** xinming left
[13:52] *** Tene joined
[13:59] *** barney left
[14:01] <mberends> gilimanjaro, which part of NL? I'm in Vught.

[14:04] *** gilimanjaro left
[14:05] *** Tene_ left
[14:07] *** gilimanjaro joined
[14:08] *** gilimanjaro left
[14:11] <masak> can Rakudo's internal rules be used in user-written grammars?

[14:11] * masak is tired of writing the matching code for real numbers

[14:12] *** gilimanjaro joined
[14:12] <mberends> masak: <ident> <ws> etc work fine, if that's what you mean

[14:13] <masak> I think so, yes.

[14:13] *** gilimanjaro left
[14:13] *** gilimanjaro_ joined
[14:13] <mberends> and <.ident> <.ws> to (prematurely) optimize

[14:14] <masak> seems to be <dec_number> I want.

[14:14] *** gilimanjaro_ left
[14:14] *** gilimanjaro joined
[14:14] *** amoc left
[14:14] *** gilimanjaro left
[14:15] *** gilimanjaro joined
[14:15] <masak> rakudo: say 42 ~~ /<number>/

[14:15] <p6eval> rakudo 5b679a: OUTPUT«Unable to find regex 'number'␤Null PMC access in invoke()␤current instr.: 'parrot;PGE;Grammar;' pc 270 (EVAL_16:116)␤»

[14:15] * masak submits rakudobug

[14:15] <masak> :/

[14:15] *** gilimanjaro left
[14:16] *** skids joined
[14:16] *** gilimanjaro joined
[14:16] *** gilimanjaro left
[14:16] *** gilimanjaro joined
[14:17] <mberends> rakudo: my $a="abc123.45def"; $a ~~ / <digit>+ /; say $<digit>[];

[14:17] <p6eval> rakudo 5b679a: OUTPUT«123␤»

[14:17] *** gilimanjaro left
[14:17] *** gilimanjaro joined
[14:18] *** gilimanjaro left
[14:18] *** gilimanjaro joined
[14:19] *** gilimanjaro left
[14:19] *** gilimanjaro joined
[14:20] *** gilimanjaro left
[14:20] *** gilimanjaro joined
[14:20] *** gilimanjaro left
[14:21] *** goksie left
[14:22] *** vdrab joined
[14:24] *** gilimanjaro joined
[14:30] *** justatheory joined
[14:35] *** ejs joined
[14:40] *** gilimanjaro left
[14:45] *** orafu left
[14:45] *** orafu joined
[14:50] *** ihrd left
[14:54] <mberends> rakudo: my $a="abc123.45def"; $a ~~ / (<digit>|<dot>)+ /; say $0[];

[14:54] <p6eval> rakudo 5b679a: OUTPUT«123.45␤»

[14:54] *** aindilis` is now known as aindilis

[14:57] <mberends> rakudo: my $a="abc123.45def"; $a ~~ / (<digit>|<dot>)+ /; say $0;

[14:57] <p6eval> rakudo 5b679a: OUTPUT«123.45␤»

[15:01] <pmichaud> masak:  One can get to the internal rules, yes, but they aren't available by default.

[15:01] <pmichaud> masak: Currently in rakudo it would be   / <Perl6::Grammar::number> /

[15:02] <pmichaud> I suspect "officially" it ought to be  / <STD::number> /

[15:02] *** ejs left
[15:04] <pmichaud> rakudo:  my $a = "abc123.45def";   $a ~~ / <Perl6::Grammar::number> /;   say $/

[15:04] <p6eval> rakudo 5b679a: OUTPUT«123.45␤»

[15:05] <mberends> neat

[15:05] <pmichaud> rakudo:  my $a = "123 xyz-foo 456";  $a ~~ / <Perl6::Grammar::identifier> /;   say $/

[15:05] <p6eval> rakudo 5b679a: OUTPUT«xyz-foo␤»

[15:07] *** M_o_C joined
[15:14] *** sri_kraih_ joined
[15:20] *** gilimanjaro joined
[15:20] *** gilimanjaro left
[15:20] *** gilimanjaro joined
[15:21] *** gilimanjaro_ joined
[15:21] *** gilimanjaro left
[15:22] *** gilimanjaro_ left
[15:22] *** gilimanjaro joined
[15:23] *** gilimanjaro left
[15:24] *** gilimanjaro joined
[15:24] *** gilimanjaro left
[15:25] *** gilimanjaro joined
[15:26] *** gilimanjaro left
[15:28] *** davidad left
[15:28] *** gilimanjaro joined
[15:28] *** gilimanjaro left
[15:29] *** gilimanjaro joined
[15:29] <mberends> gilimanjaro: is your IRC client unstable? could you try another one?

[15:30] <masak> gilimanjaro: agreed. you're creating a bit of noise just by coming and going.

[15:30] *** gilimanjaro left
[15:30] *** gilimanjaro joined
[15:31] *** davidad joined
[15:31] *** sri_kraih left
[15:31] *** gilimanjaro left
[15:31] *** gilimanjaro joined
[15:32] *** gilimanjaro left
[15:32] *** gilimanjaro joined
[15:33] <masak> gilimanjaro: HELLO? :)

[15:34] *** gilimanjaro_ joined
[15:34] <masak> rakudo: "foo" ~~ / foo {{ new $P1, "Str"␤assign $P1, "OH HAI\n"␤"print"($P1) }} /

[15:34] <p6eval> rakudo 5b679a: OUTPUT«OH HAI␤»

[15:34] *** gilimanjaro left
[15:35] *** gilimanjaro_ left
[15:36] <masak> can the above be written any shorter?

[15:36] *** gilimanjaro joined
[15:36] *** jonalv left
[15:37] *** gilimanjaro left
[15:37] *** jonalv joined
[15:37] *** gilimanjaro joined
[15:37] <masak> rakudo: "foo" ~~ / foo {{ "print"("OH HAI\n") }} /

[15:37] <p6eval> rakudo 5b679a: OUTPUT«OH HAI␤»

[15:38] *** gilimanjaro left
[15:38] *** gilimanjaro joined
[15:38] <masak> rakudo: "foo" ~~ / foo {{ "say"("OH HAI") }} /

[15:38] <p6eval> rakudo 5b679a: OUTPUT«OH HAI␤»

[15:38] <masak> gilimanjaro: seriously. that's damn annoying.

[15:38] <mberends> i'm trying to email him

[15:38] <masak> mberends++

[15:38] <masak> gilimanjaro--

[15:39] *** gilimanjaro left
[15:39] <mberends> gotta keep these dutchies in line :/

[15:39] <masak> indeed.

[15:46] <mberends> @tell gilimanjaro Hallo Gilion, kijk even in je email voor wat IRC tips en trucs!

[15:46] <lambdabot> Consider it noted.

[15:47] <masak> jonalv: <-[<]>*

[15:47] *** sitaram joined
[15:48] <masak> jonalv: (see S05) :)

[15:51] *** Psyche^ joined
[15:52] <masak> mberends: I get the rest, but wut does 'even' mean in the above sentence?

[15:52] <masak> 'also'?

[15:53] <mberends> no, it is a kind of 'briefly' or 'just'

[15:53] <masak> ah.

[15:55] <pmichaud> masak: did you catch my note about using the Perl 6 grammar rules?

[15:55] <pmichaud> rakudo:  my $a = "abc123.45def";   $a ~~ / <Perl6::Grammar::number> /;   say $/

[15:56] <p6eval> rakudo 5b679a: OUTPUT«123.45␤»

[15:57] *** vdrab left
[16:00] *** sitaram left
[16:00] *** sitaram joined
[16:01] *** sitaram left
[16:01] *** smtms joined
[16:03] *** ludan joined
[16:04] *** Whiteknight left
[16:06] *** nadie joined
[16:06] *** gilimanjaro joined
[16:06] *** nadie left
[16:06] <mberends> gilimanjaro, did you fix something?

[16:07] *** gilimanjaro left
[16:07] *** Patterner left
[16:07] *** Psyche^ is now known as Patterner

[16:07] *** gilimanjaro joined
[16:07] *** iblechbot joined
[16:07] <mberends> gilimanjaro, did you fix something?

[16:08] *** gilimanjaro_ joined
[16:08] <mberends> gilimanjaro, check your email!

[16:08] *** gilimanjaro left
[16:10] *** DemoFreak joined
[16:11] *** gilimanjaro joined
[16:11] <mberends> gilimanjaro, see http://irclog.perlgeek.de/perl6/today

[16:12] <pmichaud> anyone remember how to kickban?

[16:12] *** gilimanjaro left
[16:12] *** gilimanjaro_ left
[16:16] *** meppl joined
[16:16] *** gilimanjaro_ joined
[16:16] *** pmichaud sets mode: +b *!*=gilimanj@*.cable.casema.nl

[16:16] *** gilimanjaro_ was kicked by pmichaud (pmichaud))
[16:20] *** mikehh left
[16:21] *** payload joined
[16:23] *** xinming joined
[16:26] *** payload left
[16:26] *** payload joined
[16:29] <dalek> rakudo: 679e480 | pmichaud++ | docs/spectest-progress.csv:

[16:29] <dalek> rakudo: spectest-progress.csv update: 359 files, 10298 passing, 5 failing

[16:29] <dalek> rakudo: Failure summary:

[16:29] <dalek> rakudo:     S32-hash/reverse.t aborted 5 test(s)

[16:29] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/679e4804d969c8541b4c19ff62d5f27688fbe010

[16:30] *** FurnaceBoy joined
[16:35] *** LylePerl joined
[16:35] <LylePerl> hi

[16:38] *** justatheory left
[16:48] *** Kisu joined
[16:48] <masak> LylePerl: greetings.

[16:49] *** ejs joined
[16:49] <LylePerl> Just tried to build the latest Rakudo against the latest Parrot r38087 on Vista but it failed...

[16:49] <LylePerl> Masak: hello again

[16:49] <masak> LylePerl: what failed?

[16:50] <LylePerl> mingw32-make: *** [perl6_s1.pbc] Error -1073741819

[16:51] <LylePerl> Parrot built fine, but Rakudo gave this error

[16:51] <masak> LylePerl: and you did a 'make realclean' before you built both, I suppose?

[16:51] <LylePerl> The Parrot version that Rakudo fetches automatically worked fine...

[16:52] <LylePerl> I'll try that...

[16:53] <masak> and you're not trying to make latest-release Rakudo against bleeding Parrot? :)

[16:54] <LylePerl> Would I get bleeding parrot by doing an "svn update"? :/

[16:55] <masak> I guess you would.

[16:55] <LylePerl> Then I think I am :?

[16:55] <masak> you'd want bleeding Rakudo too if you're running bleeding Parrot.

[16:55] <LylePerl> Do you get bleeding Rakudo doing a "git pull"?

[16:56] <masak> depends on how you got it from the beginning.

[16:56] <masak> if you want a brand new one, you'd use 'git clone'.

[16:56] <masak> if you already have a git repo, then 'git pull'.

[16:57] <LylePerl> I got it with git clone git://github.com/rakudo/rakudo.git

[16:57] <LylePerl> Then updated with git pull

[16:57] <masak> ok.

[16:57] <LylePerl> Sorry I'm being a bit dense :(

[16:57] <masak> then you have bleeding Rakudo.

[16:57] <masak> not at all. :)

[16:58] <LylePerl> I'm not sure if you saw. I'm documenting the things I have to learn into a guide on helping with development..

[16:58] <LylePerl> So hopefully when people ask similar questions in the future you'll be able to just point them at my guide...

[16:59] <masak> sounds a noble cause.

[16:59] <masak> and yes, I saw that :)

[16:59] <masak> was away on a trip, but I took the time to backlog when I could.

[17:00] <LylePerl> shows dedication :)

[17:00] <masak> more like addiction :P

[17:01] <LylePerl> lol

[17:01] <LylePerl> parrot has rebuilt, just trying rakudo

[17:02] <LylePerl> Nope, same error

[17:02] <LylePerl> Would that kind of thing get submitted as a bug?

[17:02] <masak> definitely.

[17:03] <LylePerl> Ok, that'll be the next bit of my guide then :)

[17:03] <masak> :)

[17:03] <masak> send an email to [email@hidden.address] -- but you know that, I suppose.

[17:04] <LylePerl> Not through RT? Or does it have the same effect?

[17:04] <masak> it's the only way to submit bugs (that I know of).

[17:05] <LylePerl> Do you know how to get the revision number from git?

[17:12] <LylePerl> Is it just the latest commit hash?

[17:15] <masak> aye.

[17:47] *** abra joined
[17:58] <jonalv> I can haz LaTeX output in rakudo

[17:58] <masak> :)

[17:58] <masak> jonalv++

[17:58] <jonalv> thanks masak++

[17:59] <masak> "club of mutual appreciation" :P

[18:08] <jnthn> LaTeX...nice. :-)

[18:08] <jnthn> The collection of Perl 6 modules keeps on growing. :-)

[18:08] <masak> it does.

[18:08] <mberends> jonalv: looks interesting, can I use that for Pod to LaTeX conversion?

[18:09] * jnthn has sore feet from his walk

[18:09] <jonalv> LOL

[18:09] <jonalv> mberends: I have no idea of what you mean

[18:09] <jonalv> masak: help :)

[18:09] <masak> jonalv: Pod is a documentation format for Perl.

[18:09] <jonalv> masak made me do it

[18:09] <masak> that's true. :)

[18:09] <masak> I'm teaching jonalv Perl 6 at present.

[18:10] <masak> I think he likes it, but he's also a bit shy. :)

[18:10] <mberends> jonalv, I'm trying to understand what kind of 'can haz LaTeX' you're doing.

[18:10] <masak> jnthn: did you see my last small project on github? it emulates 'perl6 -ne' and 'perl6 -pe'.

[18:10] <jonalv> it might be worth mentioning that I have not written many lines of Perl5 and that I come from Java world...

[18:10] <masak> mberends: it's not a module. yet. :)

[18:10] <jnthn> masak: Yes :-)

[18:11] <masak> jnthn: I have plans to expand it to accept files, too. like this: "perl6p -e '...' file1 file2"

[18:12] <jnthn> I guess it's in part a workaround for a lack of S19 implementation?

[18:12] <masak> aye.

[18:13] <masak> I think [particle]1 will eventually get to that, but I wantz it liek now.

[18:14] <jonalv> masak: you are evil :)

[18:14] * masak feels he doesn't have jonalv's full support :P

[18:15] <jonalv> mberends: I made a script that downloads market data for the game Eve online and compiles it and presents it using LaTeX. Nothing fancy at all...

[18:15] <masak> mberends: but he has big plans for it, he says.

[18:16] <masak> I'm sure before long, we'll be seeing a module or two...

[18:16] <masak> :P

[18:16] <skids> std: my $a = "2"; :10[4, $a];

[18:16] <p6eval> std 26187: OUTPUT«ok 00:04 38m␤»

[18:16] <jonalv> masak: It depends. Online games has a tendency to eat up all time that could be used for coding you know... :)

[18:17] <masak> jonalv: Perl 6 is the ultimate online game.

[18:17] <masak> (note lack of smiley.)

[18:17] <jonalv> masak: noted

[18:17] * masak almost finished his 'Week 4 of Web.pm' blog post

[18:21] <mberends> jonalv, just saw http://eve-central.com for the first time. Looks like something I would be interested in too, except using actual stock markets.

[18:22] <masak> "Predicting the stock market using Perl 6 grammars" by mberends.

[18:22] <masak> I'd buy that book.

[18:22] <mberends> that's be Perl 7 grammars, methinks

[18:22] <masak> oh right.

[18:23] <masak> by the way, when will Perl 7 be ready?

[18:23] <masak> I'd like a very precise estimate, kthx.

[18:23] <mberends> the lookahead in Perl 6 is finite by design.

[18:23] <jnthn> *groan*

[18:23] <masak> mberends++ # bad puns

[18:24] <mberends> by Easter?

[18:24] <masak> mberends: let's make it Easter.

[18:24] <skids> the reason for the credit crisis is that banks need perl6 to balance their books :-)

[18:24] <skids> So give us TARO money :-)

[18:24] <skids> erm TARP.

[18:27] <skids> You know today WOULD be the appropriate dayto hide an easter egg in rakudo.

[18:28] <mberends> yep, didn't one pop out at you when you parsed a recursive regex? ;)

[18:30] <masak> oh, those are easter eggs?

[18:30] <skids> Hehe.  Maybe make $θ evaluate to "Just another perl hacker."

[18:30] <masak> and here I thought they were bugs all along...

[18:30] *** orafu left
[18:31] *** orafu joined
[18:35] *** ejs left
[18:43] *** nbrown joined
[18:45] * skids worries that everyone got quiet after easter egg talk...

[18:46] <jnthn>  /kick dalek && git push

[18:46] <jnthn> ;-)

[18:51] *** xinming left
[18:54] * masak suddenly gets skids' visual $0 pun

[18:56] <mberends> is that a theta?

[18:56] <skids> Should be, I pasted off a google search for "theta"

[18:57] <mberends> or a \C[COMIC EASTER EGG]

[18:57] * skids is american, genetically incapable of composing keyboard characters.

[18:58] <masak> skids: you should try Emacs.

[18:58] * mberends has a uk keyboard, logically incapable of Just Working

[18:58] * skids uses emacs actually

[18:59] <masak> skids: then you should try LEIM.

[18:59] <masak> it does that for you.

[18:59] <masak> LEIM真是很好.

[19:01] <skids> Yeah, I had xchat displaying something other than boxes with numbers in them before my HD crash, now not so much.

[19:02] <skids> Settings don't work in the new version. :-(

[19:02] <skids> Or maybe I don't have a font or something.

[19:02] <skids> I dunno, I get back to it someday.

[19:04] <mberends> same problem here, maybe someone at the hackathon can help ;-)

[19:07] *** xinming joined
[19:11] <skids> Can someone think of an example of "Object context"?

[19:16] *** Eevee left
[19:21] <masak> skids: no, what is it?

[19:21] <skids> Probably just cruft, it's in E02 (or something) I was reading earlier.

[19:22] <masak> aha.

[19:22] <masak> yes, it can't be found in the synopses.

[19:22] <masak> perhaps that one is now known as 'item context' or some such.

[19:22] *** payload left
[19:22] <pmichaud> I suspect 'item context'

[19:22] *** payload joined
[19:22] <skids> IIRC it was a subclass of item context alongside numberical and string and boolean.

[19:23] *** Eevee joined
[19:23] <skids> well subcontext

[19:23] * skids rememers to choose words carefully.

[19:24] <skids> Especially when yesterday I was having fun citing how many different ways the word "context" is overloaded.

[19:24] <pmichaud> well, the meaning of "context" depends on its context :-)

[19:24] <skids> :-)

[19:25] <masak> human language is plastic that way.

[19:27] * jnthn has the latest Rakudo built on his laptop, but didn't back any clothes yet. Hmm...priorities.

[19:28] <pmichaud> yes, I'm starting to fall behind on my trip preparations as well.

[19:29] <jnthn> Gotta leave the appartment around 5:40am tomorrow. :-|

[19:32] <pmichaud> for me, the trip has reasonable departure, layover, and arrival times.  :-)  Except possibly for my return trip -- only 90 minutes 

[19:33] <pmichaud> (90 minutes to get through customs and to my next flight)

[19:33] <jnthn> I got a 40 minute connection to make tomorrow.

[19:33] <jnthn> But, within Schengen zone.

[19:34] <jnthn> (= no checks to go through anywhere, afaik)

[19:34] <jnthn> Still a bit tighter than I'd like, but the flight with a longer connection time meant connection was more of a detour and cost twice as much!

[19:35] <pmichaud> I suspect you'll make it just fine.  :-)

[19:36] * skids marvels at the utter brokenness of OpenOffice's SVG export.

[19:36] * pmichaud uses this as a good time to make a backup of his desktop

[19:39] <skids> http://abrij.org/~bri/p6context_tempurl.png

[19:40] <pmichaud> I don't see 'eager', 'lazy', or 'hyper'  in that :-)

[19:40] *** riffraff joined
[19:41] <skids> Well, I didn't put eager and lazy in there because actually other than S07, which is still draft, I don't think the rest call that a context yet.  So it might be avoidable.

[19:42] <skids> And I didn't see hyper "context" anywhere yet.

[19:44] *** abra left
[19:44] <skids> eager/lazy are really an adjective on the other contexts e.g. "eager list context"

[19:45] <skids> rvalue/lvalue are almost as well, but probably not as cleanly

[19:46] *** Casan joined
[19:47] <masak> sub/method/class/role/grammar/regex/token/rule can be considered contexts.

[19:48] <jnthn> pmichaud: I suspect so too...otherwise I'd have asked for something else to be booked!

[19:50] <skids> masak: Almost anything "can be considered" a context :-)

[19:50] <masak> skids: I guess. :)

[19:51] <skids> It's what we expect people to think of when we say "context" with enough emphasis/focus to not be taken as a plain english word.

[19:51] * masak says _context_ out loud

[19:51] <skids> In which case if it gets too overloaded the effect of doing so is limited.

[19:52] *** jest joined
[19:52] <skids> Which is one of the reasons why you cannot make sense of any graphic library these days since everying is either a "screen" or a "frame", except in the other library where it's the opposite.

[19:54] *** jonalv left
[19:54] <mberends> :) and viewport, and box, and area. sigh.

[19:54] <masak> overloaded words are everywhere in programming.

[19:55] <masak> "manager". ugh.

[19:55] <pmichaud> "user"

[19:55] <jest> rakudo: say "hello"

[19:55] <pmichaud> "data"

[19:55] <p6eval> rakudo 679e48: OUTPUT«hello␤»

[19:55] <skids> oh lest I foget my favorite: "window"

[19:56] <skids> So anyway if I have a point it's that we limit our vocabulary at a significant cost.

[19:56] <skids> And CS majors need to take some literature classes or something.

[19:57] <skids> And people shouldn't frown on intriducing new words not normally seen in code.

[19:58] <skids> And aiksaurus should be mandatory in development kits.

[19:58] <mberends> perl goes farther than most languages to acknowledge the similarities to spoken languages, and #perl6 is frequented by linguists of both kinds.

[19:59] <mberends> making it rather special

[19:59] <skids> One of the reasons I like perl :-)

[20:19] *** payload left
[20:19] *** payload joined
[20:22] *** jest left
[20:23] *** icwiener joined
[20:29] *** Tene_ joined
[20:30] *** TimToady left
[20:31] *** args joined
[20:34] *** rgs left
[20:34] *** ludan left
[20:35] *** TimToady joined
[20:41] *** mberends_ joined
[20:41] *** mberends_ left
[20:43] *** Tene left
[20:43] *** masak left
[20:53] *** mberends left
[20:53] *** mberends joined
[20:57] *** Ehtyar left
[21:15] <mberends> rakudo: say chr(0x23cf)

[21:15] <p6eval> rakudo 679e48: OUTPUT«⏏␤»

[21:15] <mberends> rakudo: say "\c[EJECT SYMBOL]"

[21:15] <p6eval> rakudo 679e48: OUTPUT«⏏␤»

[21:18] * jnthn -> sleep and travelling, see y'all sometime over the next few days, some of you in person. :-)

[21:20] <mberends> jnthn: safe journey, see you soon ☺

[21:20] *** jferrero joined
[21:27] * skids lol @ mutators.t

[21:28] <skids> " interface tentatively not entirely disapproved of by all(@Larry) "

[21:30] <mberends> " they all sat on the fence "

[21:30] *** ludan joined
[21:31] <mberends> " nobody dared offend anyone by speaking out "

[21:33] *** amoc joined
[21:33] *** amoc left
[21:35] <literal> ?

[21:45] <mberends> skids: that "not entirely disapproved" interface is never used ifaics.

[21:45] *** iblechbot left
[21:46] <skids> well, it made it into the Synopsis and hasn't been gutted.  I suppose when it starts to get implemented there may be closure (no pun intended)

[21:47] <mberends> Casan: mutators are almost C# properties: http://xrl.us/gnxp (from pugs/t/spec/S12-attributes/mutators.t)

[21:48] *** icwiener left
[21:49] <mberends> skids: the url has nice examples

[21:53] * mberends needs sleep

[21:53] *** mberends left
[21:56] *** ludan left
[21:56] <skids> rakudo: class A { has $.a is rw }; my $b = 42; my $c = A.new; $c.a := $b; $c.a.say;

[21:57] <p6eval> rakudo 679e48: OUTPUT«rtype not set␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[22:00] *** justatheory joined
[22:04] *** cognominal left
[22:10] <skids> rakudo: my $b; sub lb is rw () { return $b; }; my $a = 42; lb() = 3; $b.say; lb() := $a; $b.say

[22:10] <p6eval> rakudo 679e48: OUTPUT«rtype not set␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[22:11] <skids> rakudo: my $b; sub lb is rw () { return $b; }; my $a = 42; lb() = 3; $b.say;

[22:11] <p6eval> rakudo 679e48: OUTPUT«3␤»

[22:11] <skids> Ah, because it's a compile-time error, OK.

[22:13] * skids wonders if the spec is clear on := and lvalue subs.

[22:13] <skids> (And whether there's a terminology to distinguish lvalues from lvalues-that-may-be-bound.)

[22:15] <skids> rakudo: my $b; sub lb is rw () { return \$b; }; my $a = 42; lb() = 3; $b.say; lb() := $a; $b.say

[22:15] <p6eval> rakudo 679e48: OUTPUT«rtype not set␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[22:15] *** PacoLinux left
[22:15] <skids> can't blame a guy for trying.

[22:30] <skids> rakudo: my $a = 1; my $b = 2; $a = \$b; $b = 3; $a.perl.say;

[22:30] <p6eval> rakudo 679e48: OUTPUT«3␤»

[22:30] <skids> Are those supposed to autodereference under .perl?

[22:41] *** riffraff left
[22:52] *** mikehh joined
[23:12] <Casan> how do I leave a message to mberends using the bot? (do I need to be registered?)

[23:12] <literal> just type: @tell mberends foo bar

[23:13] *** payload left
[23:15] *** wayland76 joined
[23:17] <wayland76> (with /msg lambdabot in front if you want things a little more private)

[23:17] <wayland76> Of course, mberends can retrieve the messages publicly, and then everyone would see what you said :)

[23:20] <Casan> @tell mberends regarding p6 mutators, C# properties: afaics the C# properties offer the encapsulation by allowing a private attribute in the class to be given a value from the class using it through $classinstance.attritbute=value; and it will go through a mutator process before the value is stored. the example provided at http://xrl.us/gnxp is just using the mutator concept also used by java where you have to specify eg a set_Attribute() and there

[23:20] <lambdabot> Consider it noted.

[23:20] <Casan> wayland76: should do it only to avoid flooding the channel. nothing private here. :)

[23:20] <literal> looks like it got cut off at "set_Attribute() and there"

[23:20] <wayland76> That message got cut off after "and there".  You'll need to send another message :)

[23:21] <wayland76> Well, I've sometimes seen people tell things, and then someone else chimes in and answers their question :)

[23:21] <Casan> heck, I'll send an email instead :)

[23:22] <Casan> thanks for the @tell btw.

[23:22] *** DemoFreak left
[23:23] *** sri_kraih_ left
[23:26] *** s1n1 joined
[23:27] *** s1n left
[23:30] * skids tries to figure out what Casan's distinction is

[23:44] <Casan> skids: first off, I have no beef with it. It only came up as I have to take a CS class touting C# and to be less bored about it, I try to do the examples/tasks in p6 simultaniously, which also gives me the opportunity to see how C# people will experience p6, etc.

[23:44] <skids> I'm just trying to understand what the difference is, is all.

[23:48] <Casan> skids: C# properties allows you to define a method say: public string Attribute { get { return attribute; } set { attribute = value; } } in a class having a private string attribute;

[23:49] <Casan> skids: and then in the caller say $classinstance.Attribute=value; whereafter the public string Attribute property method is used to store in the private attribute of that class.

[23:50] <skids> So the difference is that the get/set routines are syntactically placed near the attribute itself in the definition?

[23:50] <Casan> skids: offers some encapsulation(the setter can limit to a range of values, which we in p6 can do by a where trait on the attribute) and simplified syntax to some, as opposed the standard get/set routines and the method syntax in the caller.

[23:51] <skids> Right, but the mutators do not use the method syntax in the caller, as they are lvalue subs.

[23:51] <skids> they use Obj.Attribute = val.

[23:52] <Casan> I haven't yet gotten my head around the lvalue sub concept so I can't tell.

[23:53] <skids> lvalue sub returns something that can be assigned to.  So if you had sub x is rw { return $b } and you did x() = 3, $b would be assigned 3.

[23:53] <skids> (assuming $b was in scope when &x was defined)

[23:55] <Casan> ok, I'll just try some code to see what happens and to understand.

[23:56] <skids> Yeah, well, unfortunately it isn't implemented in rakudo yet.

[23:57] <skids> Wouldn't be surprised if, when it does get implemented, it might get some sugar so the accessors can look traitish in the simple case.

[23:59] <Casan> ohh, heh ok, better let it be for now then.

