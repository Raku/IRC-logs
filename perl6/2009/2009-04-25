[00:01] *** [particle]1 joined
[00:37] *** M_o_C left
[00:39] *** Casan left
[00:43] *** wollmers left
[00:53] *** dukeleto left
[00:58] *** ejs left
[01:01] *** wknight8111 left
[01:34] *** sri_kraih joined
[01:43] *** Marianoe joined
[01:53] *** Marianoe left
[01:57] *** eternaleye joined
[02:03] *** cspencer joined
[02:13] *** km2 left
[02:16] *** cspencer left
[02:49] *** amoc left
[03:09] *** davidad joined
[03:23] *** FurnaceBoy left
[03:23] *** braceta left
[03:26] *** cdarroch left
[03:26] *** abra joined
[03:34] *** cspencer joined
[03:38] *** abra left
[03:48] *** cognominal left
[03:58] *** kst` joined
[04:03] *** yahooooo joined
[04:11] *** justatheory left
[04:12] *** azawawi joined
[04:14] *** justatheory joined
[04:23] *** meppl joined
[04:41] *** cspencer left
[04:48] *** Kisu joined
[05:04] *** xuser joined
[05:04] *** skids left
[05:11] *** scook0 joined
[05:29] *** scook0 left
[05:30] *** scook0 joined
[05:38] *** azawawi left
[05:40] *** yahooooo left
[05:41] *** hcchien_ joined
[05:41] *** hcchien left
[05:51] *** yahooooo joined
[05:58] *** kate21de joined
[05:59] *** azawawi joined
[06:10] *** abra joined
[06:28] *** eternaleye_ joined
[06:29] *** eternaleye left
[06:35] <pugs_svn> r26422 | szabgab++ | Smart::Links report potential legacy L<< links as broken, improved test suite

[06:42] <pugs_svn> r26423 | azawawi++ | [S:H:P6] Updated to latest std and increased version.

[06:43] *** ejs joined
[06:47] *** eternaleye_ left
[06:47] *** eternaleye joined
[06:49] *** DemoFreak joined
[07:02] <pasteling> "azawawi" at 212.38.137.139 pasted "redspans warnings when parsing STD.pm" (10 lines, 690B) at http://sial.org/pbot/36201

[07:03] <azawawi> TimToady: im seeing a couple of uninitialized warnings when parsing STD.pm via redspans, please see  http://sial.org/pbot/36201

[07:20] *** zamolxes joined
[07:43] <pugs_svn> r26424 | szabgab++ | Smart::Links add parsing support to smartlinking to artbitrary document

[07:51] *** cognominal joined
[07:54] <pugs_svn> r26425 | szabgab++ | Smart::Links syn_id now includes the S prefix as well

[07:56] *** M_o_C joined
[08:01] *** shachaf_ joined
[08:06] *** iblechbot joined
[08:08] <moritz_> good morning

[08:08] *** abra_ joined
[08:09] *** abra left
[08:10] *** abra_ left
[08:11] *** abra_ joined
[08:11] *** abra_ left
[08:13] *** abra joined
[08:19] *** zamolxes_ joined
[08:19] <azawawi> moritz_: good morning

[08:20] *** zamolxes left
[08:20] <azawawi> moritz_: quick q, what's ^ infront of a method name for?

[08:21] * azawawi is working on building a symbol table out of redspans output for Padre Perl6... (private/public method... scopes.. anonymous blocks)

[08:22] <moritz_> azawawi: it's an abbrev for .HOW.method($obj, ...)

[08:22] <moritz_> ie a call to the meta class

[08:23] * azawawi reads S12

[08:29] <azawawi> so ! for private methods and ^ for HOW methods right?

[08:30] *** M_o_C left
[08:31] <moritz_> yes

[08:33] <azawawi> so beside method names in the outline im going to suffix the method name with (private) and (how)

[08:33] <azawawi> public methods are default right?

[08:35] *** M_o_C joined
[08:39] *** abra left
[08:41] *** abra joined
[08:44] <moritz_> yes

[08:44] *** abra left
[08:44] <moritz_> I don't see the use in marking methods as "how"

[08:44] *** abra joined
[08:44] <moritz_> unless you add methods to the meta class

[08:45] <moritz_> which isn't trivially detectable statically

[08:47] <azawawi> moritz_: so distiguishing between private/public methods is the way to go

[08:49] *** abra left
[08:50] <moritz_> there are also submethods

[08:50] <moritz_> which are public but not inherited

[08:52] *** abra joined
[08:53] *** abra left
[08:58] *** abra joined
[08:59] *** abra left
[09:02] *** abra joined
[09:02] *** abra left
[09:04] *** yahooooo left
[09:05] *** abra joined
[09:07] *** szabgab joined
[09:10] <pugs_svn> r26426 | szabgab++ | Smart::Links separate the strict syn_id notion, allow for subdirectories

[09:12] <szabgab> You can start adding smartlinks in the format L<S32::Abstraction/....> to point to the specs in the subdriectory

[09:13] <szabgab> There is also a new http://perlcabal.org/syn/stats.html page listing most of the issues with the smartlinks

[09:14] <azawawi> szabgab: nice

[09:15] <azawawi> szabgab++

[09:17] <szabgab> and I am off to my flight now

[09:17] *** szabgab left
[09:17] <moritz_> szabgab++ indeed

[09:24] *** ejs left
[09:35] *** kimtaro joined
[09:42] *** ejs joined
[09:46] *** payload joined
[09:50] *** yahooooo joined
[09:51] *** rindolf joined
[10:13] *** ejs left
[10:30] *** iblechbot left
[10:44] *** abra left
[10:44] *** abra joined
[10:45] *** davidad left
[10:45] *** abra left
[10:46] *** abra joined
[10:49] <pugs_svn> r26427 | lwall++ | [redspans] ignore {*} reductions, just use whole rules

[10:50] *** abra left
[10:51] *** abra joined
[10:52] <TimToady> azawawi: see last checkin

[10:53] <azawawi> lwall: im checking it... thx :)

[10:54] <azawawi> TimToady++

[10:59] <pugs_svn> r26428 | lwall++ | [viv] each bless category rule into specific S class rather than generic

[10:59] <pugs_svn> r26428 | lwall++ | [viv] cut down boilerplate

[10:59] <TimToady> well, jet lag has to be good for something...

[11:00] <TimToady> jnthn: I think the Big Confusion has to do with not distinguishing non-stateful roles from their stateful counterparts

[11:01] <TimToady> Bool, in particular, is both a readonly interface to values and a readwrite interface to a bit attribute

[11:01] *** abra left
[11:02] <TimToady> when we mix in Bool::True we're mixing in the value interface

[11:02] <TimToady> but when we say "does Bool" we're saying we want to add a Bool attribute

[11:03] <TimToady> these must be distinguished better somehow, so we know for instance that Array and Hash want the rw versions of the corresponding roles

[11:04] <TimToady> perhaps "does" pulls in attribute definitions, and "provides" or "presents" or some such leaves them out.

[11:05] <TimToady> or we have some marker on the type to indicate whether it's pure or not

[11:08] <TimToady> such that mixing in Bool::True actually mixes in Bool:ro with a readonly .true method, while mixing in Bool:rw gives you a rw .true method

[11:09] <TimToady> notation is, of course, up for bikeshedding

[11:10] *** iblechbot joined
[11:10] <TimToady> but the idea is, if you're not specific, things default to the current notation, more or less

[11:13] <TimToady> and instead of RangeIterator, we might have Range:rw or some such

[11:14] <TimToady> and Array would be an alias for Positional:rw

[11:14] <TimToady> well, have to get up in <2 hr, so I'd better try to rest more

[11:14] <TimToady> zzz &  # maybe

[11:46] *** payload left
[11:52] *** Whiteknight joined
[11:55] *** fridim_ joined
[12:45] <pugs_svn> r26429 | azawawi++ | [S:H:P6] version 0.45 which includes fixed redspans parsing. TimToady++

[12:49] <azawawi> moritz_: an initial outline tree from Padre for STD.pm http://feather.perl6.nl/~azawawi/Padre-Plugin-Perl6-STD.pm.png

[12:50] <azawawi> moritz_: notice that i still have a couple of stuff to fix but we're nearly there :)

[12:51] <TimToady> looks like EXPR isn't showing up as a method

[12:53] <TimToady> pmichaud: see my musings ~2hr ago on what's going on with .true et al.

[12:54] <azawawi> TimToady: yeah i need to fix my parsing; im assuming a ident. Next step building a symbol table to fix all of these problems.

[12:55] <azawawi> TimToady: it takes like 5 min to generate on my laptop since STD parsing is done on a separate process p6tokens.pl in Padre Perl6

[12:55] <azawawi> TimToady: part of it, to avoid re-entry problems and re-use of the STD parser :)

[12:55] <TimToady> STD already builds symbol tables, kinda

[12:57] <TimToady> shower &

[12:58] <azawawi> any way to access them via STD->symbol_table_something

[12:58] <azawawi> lunch & :)

[12:59] *** skids joined
[13:07] *** maja joined
[13:10] *** iblechbot left
[13:12] <TimToady> azawawi: the packages are all attached via {'CORE'} in the top node, find other packages in CORE::GLOBAL

[13:13] <TimToady> lexicals are (temporarily) accessible via $*CURPAD, so the reduce action could capture a link to that

[13:13] <TimToady> afk &

[13:15] *** abra joined
[13:22] *** maja_ left
[13:26] *** rindolf left
[13:42] <pugs_svn> r26430 | ron++ | Add tickets directory for tests corresponding directly to active tickts

[13:48] *** ejs joined
[13:48] <skids> ?nopaste

[13:48] <lambdabot> Haskell pastebin: http://hpaste.org/new

[13:48] <skids> last time I used that one, there was no message to this channel (no channels in the drop-down)

[13:49] *** Limbic_Region joined
[13:56] *** azawawi left
[13:57] <pasteling> "skids" at 71.192.212.78 pasted "Perl6 zip/roundrobin, now with funky lvalue goodness" (141 lines, 5.2K) at http://sial.org/pbot/36210

[14:00] *** xuser left
[14:03] *** abra left
[14:04] *** abra joined
[14:12] *** pmurias joined
[14:14] *** Casan joined
[14:16] *** PhatEddy joined
[14:17] *** cspencer joined
[14:18] *** rindolf joined
[14:19] <PhatEddy> Anyone around for help with a subversion problem related to a spec test?

[14:19] *** azawawi joined
[14:22] *** cspencer left
[14:22] *** Limbic_Region left
[14:23] *** abra left
[14:24] *** abra joined
[14:27] *** zamolxes_ left
[14:28] <pugs_svn> r26431 | ron++ | for lack of better suggestion - undoing unintentional added test

[14:39] *** amoc joined
[14:45] *** nihiliad joined
[14:46] *** jbt joined
[14:48] *** PhatEddy left
[14:50] *** nihiliad left
[14:54] *** nihiliad joined
[15:10] *** jbt left
[15:11] *** ejs1 joined
[15:13] *** Psyche^ joined
[15:21] <skids> rakudo: my List of Capture sub f {}

[15:22] <p6eval> rakudo 7bbc62: OUTPUT«Use of protoobject as value␤»

[15:26] *** Patterner left
[15:26] *** Psyche^ is now known as Patterner

[15:28] *** DJ-DONGDOT joined
[15:41] *** M_o_C left
[15:51] *** nbrown left
[15:52] *** nbrown joined
[15:52] *** justatheory left
[15:57] <skids> rakudo: my Capture List sub f { return }; f;

[15:57] <p6eval> rakudo 7bbc62: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[15:57] <skids> rakudo: my Capture List sub f { return() }; f;

[15:57] <p6eval> rakudo 7bbc62: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[15:58] <skids> rakudo: my Capture List sub f { return () }; f;

[15:58] <p6eval> rakudo 7bbc62: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[15:58] <skids> rakudo: my Capture List sub f { return \() }; f;

[15:58] <p6eval> rakudo 7bbc62: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[15:58] <skids> rakudo: my Capture List sub f { return(()) }; f;

[15:59] <p6eval> rakudo 7bbc62: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[16:05] <skids> rakudo: my Num List sub f { return (1) }; f.say; my Num List sub g { return ("A") }; g;

[16:05] <p6eval> rakudo 7bbc62: OUTPUT«1␤Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[16:05] <skids> rakudo: my Num List sub f { return () }; f; 

[16:05] <p6eval> rakudo 7bbc62: OUTPUT«Type check failed on return value␤current instr.: 'die' pc 17536 (src/builtins/control.pir:225)␤»

[16:11] *** kate21de left
[16:15] *** M_o_C joined
[16:21] <skids> rakudo: my Num List sub f () { ("A") }; f.say;

[16:21] <p6eval> rakudo 7bbc62: OUTPUT«A␤»

[16:24] *** DJ-DONGDOT left
[16:24] * skids files rakudobug

[16:30] *** amoc left
[16:37] *** kimtaro left
[16:43] *** pmurias left
[16:44] *** Casan left
[16:52] *** ejs1 left
[17:05] *** wayland76 left
[17:15] *** perlmonkey joined
[17:16] * perlmonkey is looking for larry

[17:16] <literal> you can do @tell TimToady oh hi

[17:17] <literal> to send him a message

[17:17] <perlmonkey> cool

[17:17] <perlmonkey> @tell TimToady got a chemistry question for you larry

[17:17] <lambdabot> Consider it noted.

[17:18] <literal> chemistry?

[17:18] <perlmonkey> didn't larry major in chemistry

[17:19] <literal> don't know

[17:20] *** masak joined
[17:20] <rindolf> literal: it's in http://www.wall.org/~larry/onion3/talk.html

[17:20] <rindolf> literal: but he ended up doing a different major.

[17:21] <masak> Auzon: I haven't finished backlogging yet, but I noticed you were asking about LWP::Simple.

[17:21] <literal> I see

[17:22] <masak> Auzon: ...and HTTP::Daemon. the latest HTTP::Daemon resides in the Web.pm repo. we unfortunately have two copies at present, as the lesser of two evils.

[17:24] <masak> Auzon: LWP::Simple isn't on the roadmap, but I'd love to see one.

[17:24] <masak> (possibly with a more appropriate name)

[17:26] *** wayland76 joined
[17:26] *** mberends joined
[17:27] <masak> moritz_: in what sense are submethods public?

[17:30] *** nbrown_ joined
[17:32] *** FurnaceBoy joined
[17:33] *** nbrown left
[17:33] *** nbrown_ is now known as nbrown

[17:34] *** pmurias joined
[17:35] <perlmonkey> whos calling me

[17:35] <masak> perlmonkey: oh hai.

[17:36] <masak> perlmonkey: so, have you written your first script in Rakudo Perl 6 yet? :)

[17:36] <perlmonkey> masak: oh hai, no I'm still using 5.8 :P

[17:36] <masak> perlmonkey: I hear you can use both 5.8 and pre-6.0 :)

[17:37] <masak> apart from the mental impedence mismatch when switching, it's no problem at all.

[17:38] <perlmonkey> cool

[17:48] *** iblechbot joined
[17:53] *** rindolf left
[18:03] <japhb> rakudo: sub Foo::foo { say "foo" } Foo::foo()

[18:03] <p6eval> rakudo 7bbc62: OUTPUT«Malformed routine definition at line 1, near "Foo::foo {"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[18:04] <japhb> How do I pronounce that in rakudo's accent?

[18:05] <masak> rakudo: module Foo { sub foo { say "foo " } }; Foo:foo()

[18:05] <p6eval> rakudo 7bbc62: OUTPUT«Statement not terminated properly at line 1, near ":foo()"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[18:05] <masak> rakudo: module Foo { sub foo { say "foo " } }; Foo::foo()

[18:05] <p6eval> rakudo 7bbc62: OUTPUT«foo ␤»

[18:06] <masak> japhb: good enough? or did you want to actually inject the sub into a not-yet-declared namespace-module-thingy?

[18:06] <masak> I don't know how to do the latter... or even whether it's allowed.

[18:06] <japhb> masak: Nod.  That was actually yak shaving.  The real problem is that I want to do the Foo::foo() part.  Because really, I want to do OpenGL::foo().

[18:06] <japhb> And the OpenGL namespace was created by PIR

[18:06] <masak> ok.

[18:07] <japhb> Though you give me an idea ... I wonder if I make a fake 'module OpenGL {}' declaration, that will make Rakudo believe me.

[18:07] <masak> there's something called 'is also'

[18:07] *** davidad joined
[18:07] <masak> soon to be known as 'augment', but right now it's 'is also' in Rakudo.

[18:07] <masak> you could try that.

[18:08] <masak> rakudo: module A {}; module A {}

[18:08] <p6eval> rakudo 7bbc62: OUTPUT«Re-declaration of type A at line 1, near ""␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[18:08] <masak> rakudo: module A {}; module A is also {}

[18:08] <p6eval> rakudo 7bbc62:  ( no output )

[18:09] <japhb> Hmmmm.  Rakudo doesn't seem to believe the original module exists.

[18:10] * japhb tries using some PIR to alias the namespaces

[18:13] <pmichaud> I wonder if "module OpenGL;"  works.  Or if it should work.

[18:14] <pmichaud> no, wait.  It would be "module OpenGL { ... };"

[18:17] <pmichaud> that might be enough to tell Rakudo that OpenGL is a package name

[18:18] <japhb> Doesn't seem to do the trick ... I'm currently refreshing myself on PDD21

[18:18] <pmichaud> rakudo:   module Foo { };   say Foo::foo(); 

[18:18] <p6eval> rakudo 7bbc62: OUTPUT«Null PMC access in invoke()␤current instr.: '_block14' pc 60 (EVAL_20:41)␤»

[18:18] <pmichaud> that should work.

[18:18] <pmichaud> i.e., to grab a 'foo' subroutine out of the Foo namespace.

[18:18] <japhb> pmichaud: Sure, but OpenGL is rooted in parrot's namespace, not perl's.

[18:19] *** ejs left
[18:19] <pmichaud> Right now Rakudo is rooted in parrot's namespace also.

[18:19] <pmichaud> Unless that changed over the past two days.

[18:19] * japhb blinks

[18:19] <japhb> So ... 'module OpenGL' is really parrot::OpenGL?

[18:19] <pmichaud> if you're talking in terms of parrot's HLL namespaces, yes.

[18:20] <pmichaud> (there is no "parrot::OpenGL" notion in general)

[18:20] <pmichaud> module OpenGL is really   ['parrot';'OpenGL']

[18:20] <pmichaud> (from parrot's root namespace)

[18:20] <japhb> Oh right, gotcha

[18:20] *** rfordinal joined
[18:21] <masak> I would submit that rakudobug, but I suspect it's in there somewhere already.

[18:21] <pmichaud> what rakudobug is that?

[18:22] <masak> the Null PMC access on calling a non-thing in a module.

[18:22] <pmichaud> oh, yes.

[18:22] <masak> it seems too familiar to be new.

[18:22] <pmichaud> it's not.

[18:22] <pmichaud> I suspect we need a form of lookup that says "throw smart exception if this comes back null"

[18:23] <masak> hm. aye.

[18:23] <masak> that would at least lead to fewer RT tickets. ;)

[18:39] *** ejs joined
[18:40] <rfordinal> jnthn : are you ready to Hackathon?

[18:43] *** PhatEddy joined
[18:47] *** zamolxes joined
[18:49] *** ejs left
[18:49] *** ejs joined
[18:54] *** eternaleye_ joined
[18:55] *** eternaleye left
[18:58] *** s1n left
[18:58] *** s1n joined
[18:58] *** barney joined
[19:00] *** payload joined
[19:04] *** PhatEddy left
[19:07] <LylePerl> rakudo: $*CWD.say

[19:07] <p6eval> rakudo 7bbc62: OUTPUT«Use of uninitialized value␤␤»

[19:07] * LylePerl wonders when his patch will get looked at...

[19:09] <pasteling> "japhb" at 76.191.190.8 pasted "Why don't bar() and baz() work like foo()?" (41 lines, 821B) at http://sial.org/pbot/36219

[19:09] <LylePerl> I've been thinking about Rakudo's portability in code

[19:10] <LylePerl> In Perl 5 you often have to prepare your module so that is works on Windows as well an Linux

[19:11] <LylePerl> Are there any intentions for Rakudo to handle more of this, so most modules coded for Linux will just work on Windows?

[19:12] <masak> LylePerl: that would be the ideal, I think. but there are also no efforts to give you shell access, if you want to make your code non-portable.

[19:12] *** eternaleye_ left
[19:12] <masak> LylePerl: right now, shell access is our only means of doing some things.

[19:12] *** s1n left
[19:13] *** eternaleye joined
[19:26] <masak> rakudo: grammar Foo { regex TOP { foo } }; use Test; plan 1; say '# ', ?Foo.parse(""); nok ?Foo.parse('')

[19:26] <p6eval> rakudo 7bbc62: OUTPUT«1..1␤# 0␤ok 1 - ␤»

[19:26] <masak> oh, good.

[19:26] <masak> time to upgrade my Rakudo, I think.

[19:27] <LylePerl> masak: Are you saying there are no backticks or system command?

[19:28] <masak> LylePerl: there's &run, formerly known as &system.

[19:28] *** payload left
[19:28] <masak> we're still waiting for backticks.

[19:28] *** payload joined
[19:29] <azawawi> masak: ping

[19:29] <masak> azawawi: pong.

[19:30] <azawawi> masak: November.pm gives a warning when STD.pm parsed.

[19:30] <masak> it did last time I ran it through STD.pm as well.

[19:30] <masak> but which one is it now?

[19:31] <pasteling> "azawawi" at 212.38.137.139 pasted "November.pm STD warning" (6 lines, 163B) at http://sial.org/pbot/36221

[19:32] <masak> I just pushed a few commits I made on the train today. with those, all tests except the final integration test file pass on my box.

[19:32] <azawawi> masak: and a few files are missing 'use v6;'

[19:32] <masak> azawawi: that error might be because you're not including the html-template project when you're running.

[19:32] <masak> azawawi: oh, will fix that.

[19:33] <azawawi> masak: im using Padre Perl6 plugin to view them via Outline view 

[19:33] <masak> that's exciting news.

[19:33] <azawawi> masak: and padre does not detect a .pm without use v6; or class/grammar/module/role

[19:34] <patmat> i have a problem running Rakudo on NetBSD

[19:34] <masak> I'm adding 'use v6' now to those that lack it.

[19:36] <patmat> is there someone with Rakudo on NetBSD knowledge?

[19:36] *** barney left
[19:36] <patmat> if I do "make" after perl Configure.pl --gen-parrot

[19:36] <masak> there, pushed.

[19:36] <patmat> that's what happens:

[19:37] <patmat> http://www.pastie.org/458183

[19:37] <patmat> someone had this problem?

[19:38] <patmat> it's on a new installed NetBSD 4.0.1

[19:38] * azawawi uploads a few screenshots of Padre-Plugin-Perl6 in action

[19:38] <patmat> azawawi: ah good :)

[19:39] <masak> patmat: did you try a 'make clean' before that?

[19:39] <masak> (just checking)

[19:40] <patmat> ok one moment

[19:40] <patmat> same error

[19:40] <azawawi> masak: http://feather.perl6.nl/~azawawi/Padre-Plugin-Perl6-with-STD.png

[19:41] <azawawi> masak: and http://feather.perl6.nl/~azawawi/Padre-Plugin-Perl6-with-November.png

[19:41] <masak> patmat: strange. it doesn't seem platform-dependent, and I get no error here. I just built Rakudo.

[19:41] <masak> azawawi: very, very cool.

[19:42] <patmat> yep

[19:42] <patmat> masak hm i don

[19:42] <patmat> don't know what's wrong :(

[19:42] <azawawi> masak: that now handles identifier-with-dashes and expressions bugs

[19:42] <patmat> but thanks, i have to find it out myself, i'm annoyed anyway with my system anyway...

[19:42] <masak> patmat: you could submit this as a rakudobug, I guess.

[19:42] <patmat> maybe i'm just installing the new Ubuntu on that NB

[19:43] <patmat> dont have time for so much trouble hehe

[19:43] *** rindolf joined
[19:43] <masak> well, it's up to you.

[19:43] <mberends> masak: howai (with mouth full of pizza)

[19:43] <masak> mberends: hai!

[19:43] <meppl> good night

[19:43] <masak> mberends: did your course go well?

[19:45] <mberends> masak: think so. it began politely enough about M$ and degenerated to a frustrations soapbox at the end. happy cu$tomer anyways :)

[19:45] <masak> :)

[19:45] *** meppl left
[19:45] * mberends has 7 days of #perl6 backlog to study

[19:46] <masak> wait till you get to the golfing spree in the logs :)

[19:46] <mberends> masak: ooh!

[19:48] <mberends> while re-generating the proto database requirements, came to the 'PERL6LIB is deperecated' dead end a few times. why is it considered to be just a temporary workaround?

[19:49] <masak> probably because it isn't compatiable with the databse thingy.

[19:50] <masak> not to mention not needed in the face of a databse thingy.

[19:50] *** asakra joined
[19:50] <mberends> ok, was beginning to think so. The versioning requirement will require quite a lot of new code.

[19:51] <masak> I'm just speculating, mind. TimToady will know for sure.

[19:51] <masak> he's the one who said it's so when I started making proto.

[19:55] <moritz_> re

[19:55] * azawawi is happy :)

[19:55] *** payload left
[19:56] *** ejs left
[19:56] <azawawi> moritz_: did u see the STD.pm screenshot? :)

[19:57] <moritz_> azawawi: which one? I saw quite many recently

[19:57] <masak> rakudo: grammar Foo { regex TOP { foo } }; use Test; plan 1; nok ?Foo.parse('')

[19:57] <p6eval> rakudo 7bbc62: OUTPUT«1..1␤ok 1 - ␤»

[19:58] <masak> how come this succeeds here on #perl6 but fails on my box?

[19:58] <azawawi> moritz_: http://feather.perl6.nl/~azawawi/Padre-Plugin-Perl6-with-STD.png

[19:58] * masak discovers why

[19:58] <moritz_> it works locally here

[19:58] <masak> oh.

[19:58] <masak> never mind.

[19:59] <moritz_> nice

[19:59] <masak> in other news, I think it's a bad idea to make copies of Test.pm to store in projects.

[19:59] <masak> definitely not a Well-Thought Out Practice.

[19:59] <azawawi> moritz_: i could get the private/my/class/attributes in this release; maybe tomorrow. 

[20:00] *** ejs joined
[20:01] <masak> moritz_: I'm intrigued by the automated testing idea for November. I would like to know if you know how I could set that up, say, on feather.

[20:03] <pugs_svn> r26432 | hinrik++ | [util/perl6.vim] put the 'vim: filetype=perl6' bit in a =comment line so Perl6::Perldoc won't render it in the HTML

[20:06] *** araujo left
[20:07] <jnthn> hi - anyone know if any changes that would affect building dynops have gone in of late?

[20:11] <moritz_> don't know

[20:11] <moritz_> masak: does the test harness have a different return value on failure?

[20:11] <moritz_> (I hope so)

[20:11] <masak> moritz_: oh, I should think so.

[20:13] <moritz_> masak: maybe you could simply create a dummy CPAN package, and use the CPAN testers reporting framework

[20:13] <masak> :)

[20:13] *** eternaleye left
[20:13] <moritz_> or you could simply do a 'make test > $logfile || mail $logfile'

[20:14] <masak> that's more like it.

[20:14] <masak> can I do cronjobs on feather?

[20:14] <moritz_> sure.

[20:15] <masak> I will do some attempts tomorrow.

[20:15] <masak> I have already decided that I want one report on bleading Rakudo and one on latest-release Rakudo.

[20:15] <masak> that would help a lot, just to have those statistics handy every day.

[20:19] *** s1n joined
[20:21] <azawawi> masak: Utils.pm also doesnt parse with STD

[20:21] <moritz_> there's also TapTinder for parrot

[20:21] <masak> azawawi: that so?

[20:21] <moritz_> which does a very similar reporting job for parrot

[20:21] <masak> azawawi: it builds ok.

[20:21] <pasteling> "azawawi" at 212.38.137.139 pasted "Utils.pm" (11 lines, 322B) at http://sial.org/pbot/36222

[20:22] <azawawi> masak: im just going on all the files; checking their highlighting and outline views in Padre

[20:22] <masak> std: int time

[20:22] <p6eval> std 26432: OUTPUT«##### PARSE FAILED #####␤Syntax error (two terms in a row?) at /tmp/sVmFU0bTTE line 1:␤------> [32mint [31mtime[0m␤    expecting any of:␤ infix or meta-infix␤      infix stopper␤    standard stopper␤ statement modifier loop␤  terminator␤FAILED 00:02 35m␤»

[20:23] <masak> std: int(time)

[20:23] <p6eval> std 26432: OUTPUT«ok 00:02 35m␤»

[20:23] <moritz_> ah, prefix:int is banned from the spec

[20:23] <masak> azawawi: will fix.

[20:23] <masak> rakudo: int time

[20:23] <p6eval> rakudo 7bbc62:  ( no output )

[20:23] * masak submits rakudobug

[20:24] *** PhatEddy joined
[20:25] <azawawi> moritz_: maybe this a parsing bug in std

[20:25] <masak> azawawi: no, it has actually been disallowed.

[20:26] <pasteling> "azawawi" at 212.38.137.139 pasted "Possible STD parsing bug in Dispatcher/Rule.pm" (6 lines, 227B) at http://sial.org/pbot/36223

[20:26] <PhatEddy> I noticed today that I have a pugs commit bit and started adding RT tests to the spec/ticket directory.

[20:26] <masak> azawawi: it's just missing a space before '->'.

[20:27] <masak> I don't know if that's mandatory.

[20:27] <PhatEddy> Anyone have an opinion on whether I should add a comment/reply to the tickets about the existence of the tests ?

[20:27] *** kate21de joined
[20:27] <moritz_> PhatEddy: please do so

[20:28] <moritz_> PhatEddy: but I would prefer tests in the file where the features are tested, not separate files for the tickets

[20:28] *** simcop2387 joined
[20:28] <moritz_> if they *really* don't fit into there, they should go into t/spec/integration

[20:29] <PhatEddy> The reason for the ticket test files, which I discussed on IRC earlier, is  

[20:29] <PhatEddy> 1) the propensity of ticket tests to die and need eval

[20:29] <moritz_> for that we have fudge directives

[20:30] <PhatEddy> 2) The ability to test after making changes which other tickets may have incidentally been closed

[20:30] <PhatEddy> (active tickets)

[20:30] <moritz_> that's caught by autounfudge

[20:31] <PhatEddy> I did discuss this idea before and nobody made me aware of your concerns ... I will start to look into them ...

[20:31] <moritz_> the reason not have them separately is that the test suite is supposed to be implementation agnostic

[20:31] *** Whiteknight left
[20:31] <moritz_> (sorry that I didn't discuss earlier, I wasn't at home then)

[20:31] *** Whiteknight joined
[20:32] <literal> current rakudo doesn't build

[20:33] <literal> http://sial.org/pbot/36224

[20:33] * moritz_ tests

[20:34] <azawawi> masak: all the november grammars pass on STD... nice

[20:34] <masak> azawawi: thanks for the heads-ups.

[20:35] <moritz_> literal: builds here after a 'make clean' - are you sure that have a clean working tree?

[20:35] * moritz_ wonders if pmichaud already made his blog post about NPW (+hackathon)

[20:35] <literal> heh, that was the problem

[20:35] <patmat> literal it doesn't build for me either :(

[20:36] <literal> had been messing with src/setting/List.pm

[20:36] <azawawi> masak: http://feather.perl6.nl/~azawawi/Padre-Plugin-Perl6-with-MediaWiki.png

[20:36] <patmat> ahh

[20:36] <patmat> literal NetBSD ?

[20:36] <patmat> i have the same problem!

[20:36] <literal> patmat: nah, linux

[20:36] <masak> I have a Web.pm blog post in the pipe. will probably post it before going home.

[20:36] <patmat> make clean didnt help me :(

[20:36] *** skids_ joined
[20:37] <moritz_> patmat: is 'git status' clean?

[20:37] <masak> azawawi: cool! that's one of "my" classes. :)

[20:37] *** ejs left
[20:38] <patmat> moritz_ how can i see that? im a git newbie :P

[20:38] <moritz_> patmat: type `git status'

[20:38] <moritz_> patmat: then press enter ;-)

[20:38] <moritz_> (without the quotes)

[20:39] <mberends> moritz_: perl6 r38354 has 1 spectest error: t/spec/S16-unfiled/slurp.t plans 5 tests but has only 4.

[20:39] <patmat> moritz_ alright thought so, but.. theres only this then:

[20:39] <patmat> # On branch master

[20:40] <patmat> nothing to commit (working directory clean)

[20:40] <masak> patmat: that means it's clean.

[20:40] *** skids left
[20:40] <patmat> alright :P so that's not the problem hm

[20:40] <patmat> and with make clean... make same error

[20:41] * azawawi is evil; hmmm... refactor p6 method names in Padre...

[20:42] <PhatEddy> moritz_: I looked around for autounfudge and didn't find it.   Is it just not using --fudge ?

[20:42] <moritz_> mberends: that was ron++, it seems

[20:43] <moritz_> PhatEddy: it's currently in rakudo in tools/

[20:43] <mberends> moritz_: not serious

[20:43] <moritz_> but could easily be generalized

[20:44] <PhatEddy> no I just stepped on that one file ...

[20:44] <PhatEddy> check the log ...

[20:45] *** rindolf left
[20:45] <moritz_> PhatEddy: what's your svn id?

[20:46] <azawawi> moritz_: how much of STD.pm is working under rakudo at the moment?

[20:46] <PhatEddy> I am guessing it's ron.  The commit bit was probably almost a year ago.

[20:46] <moritz_> azawawi: there are lots of things that don't work, like attributes, LTM and so on

[20:47] <moritz_> PhatEddy: r26430 seems fine, it adds one test and increases the plan by one

[20:47] <moritz_> PhatEddy: but r26431 removes one test but leaves the plan unchanged

[20:47] <PhatEddy> but you don't have the patch yet that makes the extra test run ...

[20:48] <PhatEddy> so it would fail now.

[20:49] <masak> yet another reason why putting a copy of Test.pm in your own project is not a Well-Thought-Out Practice: setting PERL6LIB to 'html-template:november' causes a lot of tests to fail, but setting it to 'november:html-template' causes all tests to pass. :/

[20:49] <moritz_> patmat: ah, your problem is that you try to build rakudo with parrot-1.0

[20:50] <moritz_> patmat: but the latest release requires parrot-1.1, and git HEAD requires the svn revision that's given in build/PARROT_REVISIOIN

[20:51] <patmat>  pkg_info parrot

[20:51] <patmat> Information for parrot-1.0.0:

[20:52] <patmat> someone is right here :P

[20:53] <moritz_> @ask szabgab you told us that one can make smartlinks of the form L<S32::Abstraction - but are the S32 files rendered anywhere? if so where? if not, what's the point of the links? (or is it still todo?)

[20:53] <lambdabot> Consider it noted.

[20:55] <patmat> thanks for that moritz_ :) i try it with the new version

[20:55] *** eternaleye joined
[20:55] <patmat> i think theres not yet a newer NetBSD pkg

[20:56] <moritz_> patmat: then do a 'perl Configure --gen-parrot' in the rakudo dir

[20:56] <moritz_> patmat: that will download and build a copy of parrot for you (but not install it)

[20:57] <patmat> oh

[20:58] <pugs_svn> r26433 | moritz++ | [t/spec] fix plan in slurp.t

[20:59] <patmat> moritz_: http://www.pastie.org/458234

[20:59] <patmat> after i uninstalled the parrot pkg

[21:00] <moritz_> for the --gen-parrot option you need subversion installed

[21:01] <patmat> hmm ok

[21:01] <patmat> i just have git here.. so i need svn

[21:02] <moritz_> yes.

[21:15] <patmat> Let's see! :)

[21:18] *** asakra left
[21:19] * moritz_ heads off to bed

[21:21] <patmat> good night, thanks for your help!

[21:23] *** Maghnus_ joined
[21:28] *** eternaleye_ joined
[21:29] *** eternaleye left
[21:31] * masak tries to sleep a bit too

[21:39] <patmat> nighty masak!

[21:40] <patmat> oh no rakudo still doesnt work for me gr

[21:40] *** masak left
[21:40] *** Maghnus left
[21:40] *** Maghnus_ is now known as Maghnus

[21:47] *** abra left
[21:59] *** M_o_C left
[22:00] *** yahooooo left
[22:04] *** yahooooo joined
[22:13] *** mberends left
[22:21] *** skids_ left
[22:23] *** skids_ joined
[22:25] *** azawawi left
[22:25] *** jferrero joined
[22:31] *** PhatEddy left
[22:37] *** pmurias left
[22:40] *** iblechbot left
[22:41] <pasteling> "japhb" at 76.191.190.8 pasted "I've gotten a little farther. Now why is baz() still failing?" (41 lines, 792B) at http://sial.org/pbot/36225

[22:42] <japhb> It looks like I can't directly call a native method on a native PMC from Rakudo.

[22:43] <japhb> Is there a workaround for this?

[22:43] *** kst` left
[22:43] *** kst joined
[22:45] *** awwaiid left
[22:45] <japhb> Hmmmm ... is it because Rakudo is expecting method names to be decorated with sigils?

[22:46] * japhb is not even sure how to test that ...

[22:53] *** barney joined
[22:54] *** barney left
[23:01] <japhb> rakudo: module Foo { sub _foo { say "foo" } }  Foo:_foo()

[23:02] <p6eval> rakudo 705ecc: OUTPUT«Statement not terminated properly at line 1, near "Foo:_foo()"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[23:02] <japhb> HAH!  Caught you, ya bastidge!

[23:02] <japhb> rakudo: module Foo { sub _foo { say "foo" } }  Foo::_foo()

[23:02] <p6eval> rakudo 705ecc: OUTPUT«Statement not terminated properly at line 1, near "Foo::_foo("␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[23:02] <japhb> Well, actually, I did *the second time*  :-)

[23:02] <japhb> rakudo: module Foo { sub _foo { say "foo" } }  Foo::_foo();

[23:03] <p6eval> rakudo 705ecc: OUTPUT«Statement not terminated properly at line 1, near "Foo::_foo("␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[23:03] <japhb> rakudo: module Foo { sub foo { say "foo" } }  Foo::foo();

[23:03] <p6eval> rakudo 705ecc: OUTPUT«Statement not terminated properly at line 1, near "Foo::foo()"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[23:03] <japhb> rakudo: module Foo { sub foo { say "foo" } };  Foo::foo();

[23:03] <p6eval> rakudo 705ecc: OUTPUT«foo␤»

[23:03] <japhb> rakudo: module Foo { sub _foo { say "foo" } };  Foo::_foo();

[23:03] <p6eval> rakudo 705ecc: OUTPUT«Statement not terminated properly at line 1, near "_foo();"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:85)␤»

[23:04] <japhb> There it is.

[23:06] <japhb> std: module Foo { sub _foo { say "foo" } };  Foo::_foo();

[23:06] <p6eval> std 26433: OUTPUT«ok 00:04 35m␤»

[23:08] *** kate21de left
[23:14] *** wormphlegm joined
[23:20] <japhb> Hmmm, this seems bad:

[23:20] <japhb> $ make spectest

[23:20] <japhb> /home/geoff/git/rakudo/parrot/parrot  perl6.pbc --target=pir --output=Test.pir Test.pm

[23:20] <japhb> svn co "http://svn.pugscode.org/pugs/t/spec" t/spec

[23:20] <japhb> svn: OPTIONS of 'http://svn.pugscode.org/pugs/t/spec': Could not resolve hostname `svn.pugscode.org': Host not found (http://svn.pugscode.org)

[23:20] <japhb> make: *** [t/spec] Error 1

[23:25] <japhb> rakudobug?

[23:33] <s1n> japhb: if you file, be very specific, because it works for me, but i can resolve svn.pugscode.org and it doesn't look like you can

[23:33] <skids_> try pinging it from cl

[23:34] <japhb> s1n: Just started working.  Looks like a temporary failure.

[23:34] *** justatheory joined
[23:42] *** araujo joined
[23:44] *** DemoFreak left
