[00:06] *** ryan_ joined
[00:06] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 14: Going to the Rats': http://perl6advent.wordpress.com/2009/12/14/day-14-going-to-the-rats/

[00:11] *** lestrrat is now known as lest_away

[00:14] *** yahooooo joined
[00:16] *** ryan_ left
[00:22] *** IllvilJa left
[00:26] *** payload joined
[00:31] *** IllvilJa joined
[00:32] *** payload left
[00:32] *** payload joined
[00:55] *** kcwu left
[01:00] *** kcwu joined
[01:02] *** jrockway_ is now known as jrockway

[01:14] *** Ryan52 joined
[01:22] *** pmurias left
[01:23] *** payload left
[01:25] *** agentzh joined
[01:39] *** jferrero left
[01:40] *** JimmyZ joined
[02:19] *** c9s left
[02:24] *** c9s joined
[02:36] *** ihrd joined
[02:44] *** zaslon left
[02:44] *** mubot left
[02:44] *** pointme left
[02:44] *** envi^office joined
[02:45] *** pointme joined
[02:45] *** zaslon joined
[03:04] *** abra left
[03:13] *** coke joined
[03:13] <coke> so, how would one return from a try block?

[03:14] <coke> best I've got so far is to set a $flag and then have a conditional post-try.

[03:19] <diakopter> pugs: sub a() { try { return 4 }; return 5 }; say a;

[03:19] <p6eval> pugs: 4␤

[03:20] <diakopter> I dunno, honestly

[03:20] <diakopter> (I don't know whether that's up-to-spec)

[03:20] <coke> doubt it.

[03:20] <coke> rakudo: sub a() { try { return 4 }; return 5 }; say a;

[03:20] <p6eval> rakudo 7ef386: 5␤

[03:20] <coke> the problem is that return is a CONTROL exception...

[03:21] <coke> hurm. though now that I think about it..

[03:21] *** _jaldhar left
[03:22] <diakopter> mildew-js: sub a() { try { return 4 }; return 5 }; say a;

[03:22] <p6eval> mildew-js: Can't open perl script "mildew": No such file or directory␤

[03:22] <coke> (doesn't help that I'm actually using NQP)

[03:22] <diakopter> o :)

[03:25] <arnsholt> Reading about git makes me suspect it's not actually intended to be used by humans >.<

[03:26] *** Wolfman2000 joined
[03:26] <Wolfman2000> ...I forgot. I'm supposed to post to the calendar tomorrow, aren't I?

[03:26] <coke> diakopter: hurm. I think pugs might be right on this one. 

[03:28] <carlin> Wolfman2000: looks like it, http://dev.pugscode.org/browser/misc/perl6advent-2009/schedule

[03:28] <Wolfman2000> thanks for the reminder.

[03:28] * Wolfman2000 has been kept busy the past few days

[03:29] <carlin> Wolfman2000: did you see that someone attempted your Caesar cipher challenege?

[03:29] <Wolfman2000> carlin: I got a few email posts about it. didn't see a reason to reply.

[03:30] * Wolfman2000 was also busy with wrapping up college stuff...stupid tuition and almost lost health records.

[03:31] *** nihiliad left
[03:33] *** ihrd left
[03:35] *** nihiliad joined
[03:38] *** _jaldhar joined
[03:45] *** meppl joined
[03:46] *** envi^home joined
[03:59] *** Intensity left
[04:03] *** lest_away is now known as lestrrat

[04:10] <Wolfman2000> reminder please: I know Perl 6 has .perl that should be the toString() equivalent. Are there any other similar commands?

[04:17] <carlin> Wolfman2000: .perl returns the data structure. .Str, .Int, .Num etc. type-cast

[04:18] <Wolfman2000> ah, that explains that.

[04:18] <carlin> rakudo: my %h = { foo => 1, bar => 2}; say %h.perl; say %h.Str; say %h.Int;

[04:18] <p6eval> rakudo 7ef386:  ( no output )

[04:18] <carlin> argh, evalbot can't do hashes

[04:19] <carlin> rakudo: my @h = { foo => 1, bar => 2}; say @h.perl; say @h.Str; say @h.Int;

[04:19] <p6eval> rakudo 7ef386:  ( no output )

[04:19] <carlin> rakudo: my @h = <Foo bar baz>; say @h.perl; say @h.Str; say @h.Int;

[04:19] <p6eval> rakudo 7ef386: ["Foo", "bar", "baz"]␤Foo bar baz␤3␤

[04:19] <Wolfman2000> ...I forgot. Is there a quick way to shuffle the elements of a list around?

[04:20] <carlin> my @a = <foo bar baz>; say @a.perl; @a .= pick(*); say @a.perl

[04:20] <carlin> rakudo: my @a = <foo bar baz>; say @a.perl; @a .= pick(*); say @a.perl

[04:20] <p6eval> rakudo 7ef386: ["foo", "bar", "baz"]␤["baz", "bar", "foo"]␤

[04:20] <Wolfman2000> ...holy crap

[04:21] <Wolfman2000> now if only I understood what pick(*) is supposed to do with that

[04:21] *** justatheory joined
[04:21] <Wolfman2000> ...along with .=

[04:21] <Wolfman2000> I thought ~ is the new concatenation operator. What does .= do now?

[04:22] <carlin> @a .= pick(*); is the same as writing @a = @a.pick(*)

[04:22] <Wolfman2000> so @a.pick(*) picks the elements in random order...and then stored in @a again.

[04:22] <Wolfman2000> Where * means "all you can" in this context

[04:23] <carlin> pick picks a number of elements at random

[04:23] <carlin> rakudo: my @a = 1..5; say @a.pick(2)

[04:23] <p6eval> rakudo 7ef386: 53␤

[04:23] <Wolfman2000> I know it picks parameter elements

[04:23] <Wolfman2000> I'm writing on that tomorrow

[04:24] <carlin> yes, * basically means everything, so it picks everything in a random order

[04:25] <Wolfman2000> ...and someone else is going to talk about the * soon. Oh well: sneak preview

[04:28] <carlin> Wolfman2000: you definitely 'picked' a good topic :-)

[04:28] <Wolfman2000> ...urge...to groan...rising...

[04:30] <Wolfman2000> carlin: my post is ready for previewing.

[04:46] <diakopter> coke: a

[04:47] <diakopter> coke: ah

[04:47] <diakopter> silly wireless keboard drops characters

[04:47] <diakopter> keyboard

[04:51] *** meppel joined
[04:56] *** justatheory left
[04:59] *** meppl left
[05:22] *** dryden joined
[05:24] <dryden> how goes the project?

[05:25] <Wolfman2000> which project? There are many in Perl 6

[05:28] <dryden> I should have been more specific. I don't actually know enough to fully understand the progress of the Perl6 project in its entirety. I can say that I am very excited.

[05:32] <Wolfman2000> There are many implementations out there, with some farther along than others.

[05:33] <Wolfman2000> Primarily, this room focuses on Rakudo, with some also devoting time to...I think it's called Mildew

[05:37] <dryden> I haven't heard of Mildew, I have heard of Rakudo. I've been meaning to try it out. I haven't yet, I'm concerned about performance since it runs on parrot (as far as I know). 

[05:37] <Wolfman2000> dryden: the goal is to make it work first, then speed it up later.

[05:39] <dryden> I definitely see your point, and completely agree with you. I'm starting to lose sight of the point in trying to make it work. Especially with Ruby having become so popular, and the recent release of stable Ruby 1.9

[05:39] <Wolfman2000> ...perhaps the best ones to answer your concerns are the developers of Rakudo

[05:39] <Wolfman2000> TimToady, pmichaud, jnthn: either of you guys here?

[05:41] <dryden> Yikes, that's alright, I wouldn't want to disturb them. They're probably very busy.

[05:47] <[particle]> they're probably sleeping

[05:48] <[particle]> by the end of march, you'll see a release of rakudo named "Rakudo *"

[05:48] <[particle]> it will be a usable subset of Perl 6, one with which you can solve everyday problems.

[05:48] <[particle]> it may not be very fast, but it'll get the job done.

[05:51] <dryden> That sounds really exciting, I suppose as wolfman said, step one is to get it working, and we can worry about performance later.

[05:54] *** Astoria` joined
[05:57] <dryden> I think performance in the long run will still be an issue, simply because the set of "everyday problems" or applications in general are becoming more networked or web-based. And that's one area where performance still matters mostly because of server limitations and a massive number of users.

[05:59] <dryden> By the time, Perl6 is out, stable, and performing well. Newer arguably "faster developing" languages like Ruby and Ruby based systems might have a stronghold.

[06:00] <dryden> I'm not trying to depress anyone. I'm worried. I love Perl.

[06:03] *** thowe left
[06:07] <dryden> I love what you're all doing. I'm so sorry for talking so much.

[06:10] *** dryden left
[06:16] *** coke left
[06:17] <diakopter> hm

[06:20] <diakopter> I admit; I think dryden's comments have validity (dryden if you're reading the irclogs, feel free to return or otherwise continue the discussion).

[06:24] <wayland76> diakopter & dryden; have you read mst's post on Perl 5 vs. Perl 6?

[06:25] *** nihiliad left
[06:25] <wayland76> http://www.shadowcat.co.uk/blog/matt-s-trout/f_ck-perl-6/

[06:26] <Ryan52> mst is great

[06:38] *** coke joined
[06:42] <wayland76> Well, I could do without the profanity, but he makes a good point

[06:45] <hejki> yup

[06:45] <hejki> perl5 is great :)

[06:51] *** kaare joined
[06:51] *** kaare is now known as Guest31990

[06:51] *** envi^home left
[06:54] *** mberends joined
[06:58] *** Astoria` left
[06:59] <mberends> we need to hug our neighbours in #perl more - even yesterday a visitor asked what they thought of Perl 6 and the regular members just trashed it. I cannot find the log reference, but it was phrased ["Perl" 6].

[07:01] *** masak joined
[07:01] <mberends> masak!

[07:01] <masak> \o/

[07:01] <phenny> masak: 11 Dec 18:57Z <TimToady> tell masak if you call it Rocket Art you can say it's not rocket science...

[07:01] <phenny> masak: 12 Dec 02:46Z <carlin> tell masak november and uri (owned by ihrd) have a lib/URI.pm

[07:01] <phenny> masak: 12 Dec 03:01Z <carlin> tell masak ... but it looks like that is the last conflict \o/

[07:02] <hejki> mberends: heh.. i'm a perl5 fanatic, but i tend to like perl6 instead of bashing it - after all it solves lots of stuff that's not that trivial in perl5 (at least without any additional modules :P)

[07:02] <masak> carlin: I believe (but investigation needed) that it's "the same" URI.pm, possibly with improvements in the standalone repo.

[07:02] <hejki> also i think it's a common misbelief that perl6 is even close to ready :P

[07:03] <masak> hejki: the concept 'ready' is a mirage.

[07:03] *** Supaplex joined
[07:03] <hejki> well i don't think perl6 is even close to usable

[07:03] <hejki> atm :)

[07:03] <masak> I respectfully disagree.

[07:04] <masak> that said, I wouldn't use it for everything.

[07:04] <hejki> sure, but i think that spending several tens of seconds to do for 1..10_00 -> $i is rw { $i++ } means it's not usable

[07:04] <masak> yes, I know what you mean.

[07:04] <hejki> (not sure if several tens of seconds are even enough for that)

[07:04] <hejki> ye

[07:04] <hejki> this is why i consider it being unusable :)

[07:05] <masak> we seem to have different criteria, is all.

[07:05] <hejki> yup. i love how all stuff is subjective :)

[07:05] <masak> I wouldn't use Perl 6 for speed right now.

[07:05] <Supaplex> let's all go back to dos 3.3.

[07:05] <masak> then again, I wouldn't use Ruby for speed either.

[07:05] <hejki> masak: well i'm crawling through project euler.net atm

[07:05] <hejki> masak: and most of those do require some speed to be comfortable to test :P

[07:06] <masak> hejki: trust me, I feel your pain.

[07:06] <hejki> masak: (i've improved my algorithm skills a lot tho ! :))

[07:06] <hejki> ye :P

[07:06] <masak> hejki: wait until you run up against the complexity barriers, too. :/

[07:06] <hejki> and the most fsced up thing is that i'd really want perl6 to be good and competetive language - cause i really do like it and the concept

[07:06] <masak> hejki: patience. :)

[07:07] <hejki> masak: heh.. using gaher { .. } with a for ^Inf -loop didn't work out as intetended either tbh ;>

[07:07] <masak> no, Rakudo isn't lazy yet...

[07:07] <masak> there's a branch going on where it will be.

[07:07] <hejki> ye.. i'm patient, but i think that the amount of fuzz around perl6 makes other people impatient (also they might think that perl6 sucks, since they aren't aware of it's current state)

[07:07] <masak> merge ETA one month.

[07:07] <hejki> ahh

[07:07] <hejki> :P

[07:08] <masak> (that's my subjective estimate, based on current speed)

[07:08] <masak> hejki: we try to target early adopters, and people who can fill in the blanks. :)

[07:10] <masak> naturally, in almost any comparison against (say) Perl 5, Perl 6 is going to come up short right now. that's because no-one's ever tried this route before.

[07:11] <masak> people who want the polished, well-tested product will have to hold their breath for a few years while people who are willing to improve the imperfect product get to work. :)

[07:11] *** youwin joined
[07:12] <hejki> :)

[07:12] <masak> thing is, we need more of the latter kind -- hence the active PR.

[07:13] <hejki> i'm willing to do stuff if needed, i've never developed a language tho. :)

[07:13] <mberends> hejki: that's the -Ofun here :-)

[07:14] <Supaplex> lol

[07:14] <mberends> and the most awesome language too :)

[07:15] <mberends> er, *the*

[07:15] <Supaplex> Larry likes my vanity license plates

[07:16] <mberends> ... with what text ?

[07:16] <masak> hejki: when I started getting interested in Perl 6, I had never developed a language either.

[07:16] <Supaplex> perl6

[07:17] <mberends> Supaplex: :-)

[07:17] <masak> Supaplex: I remember you. you've been here before, haven't you?

[07:17] <Supaplex> ohhh probably.

[07:17] * Supaplex is still a Supaplex after all these years

[07:18] <masak> I also remember enjoying the game 'Supaplex' many years ago on an i386 machine.

[07:19] <hejki> masak: :)

[07:19] *** Su-Shee joined
[07:19] <Su-Shee> good morning.

[07:20] <mberends> gm Su-Shee

[07:20] <masak> Su-Shee: mornin'!

[07:20] <moritz_> good morning

[07:20] <Supaplex> I still keep a 386sx16 for those good ole days myself.  Has a ide to cf adapter with a 32mb CF in it. :)

[07:21] <masak> tonight I dreamt that we were slashdotted a second time.

[07:22] <moritz_> :-)

[07:24] *** rgrau left
[07:26] <masak> mberends: re #perl6: I hang on #perl6-on-freenode whenever I'm on IRC, trying to detect when people mention Perl 6. I'm sad to hear there are people trashing the language still. some of the members are very understanding post-bridge.

[07:27] <mberends> masak: yes, I was sad too, it passed by before I could "try to help".

[07:28] <masak> right. no use bringing it up after the fact. we'll try to be there next time instead. :)

[07:28] <mberends> +1

[07:29] <Su-Shee> It'll pass when there's something really nice to show off with.

[07:29] <masak> the tendency to write '"Perl" 6' is easily understood as an expression of the feeling that Perl 6 is encrouaching somehow.

[07:29] <masak> s/oua/oa/

[07:31] <masak> mindshare-wise if not feature-wise.

[07:31] <mberends> we've been through the naming debate often enough. we have make the best of what we've got.

[07:31] <mberends> *have to

[07:32] <masak> I'm in the "it's the right name, lay off it" camp...

[07:33] <hejki> i guess the similarity between perl and perl6 is that both try to utilize every possible character in the syntax :)

[07:33] <moritz_> not quite

[07:33] <moritz_> since Perl 6 is Unicode-based, there are many unused characters left :-)

[07:34] <mberends> unicode gives even more characters ... what moritz_ said :)

[07:34] <Su-Shee> yes, wonderful. I'm already wishing for a use English ;)

[07:35] <Supaplex> just wait until buu adds the orgasm operator

[07:36] <Su-Shee> which will be an opengl-based sparkling 3d animated true color thingie? ;)

[07:37] <mberends> virtual fun!

[07:37] <Supaplex> yes. and if you don't draw it correctly, it's a syntax error.

[07:37] <masak> some people like to think of the history of programming languages as a struggle where one 'usurps' others: http://twitter.com/byxorna/status/6641461450

[07:38] <hejki> :P

[07:38] *** LeifD joined
[07:39] *** LeifD left
[07:39] <Su-Shee> well who cares.. either perl 6 will be adopted or it won't and that doesn't depend on the name but on the environment, examples and usefulness.

[07:40] <hejki> well i guess it has something to do with the name as well - there are loads of perl-bashers that haven't written a single line of perl

[07:45] <wayland76> Su-Shee: To continue our previous discussion, I just found a real reason to not use an online office suite

[07:46] <wayland76> It stops working when a truck drives past your house and tears the telephone line from the pole, as happened in the midst of our previous discussion :)

[07:46] <hejki> :P

[07:46] <Supaplex> hahaah

[07:46] <moritz_> ouch

[07:48] <Supaplex> wayland76: so why do you live in a place like that? ;)

[07:48] <wayland76> Because it's nice out here in the country :)

[07:49] *** cotto left
[07:49] <Supaplex> cool

[07:49] <Su-Shee> I know why I like the city.. ;)

[07:50] <wayland76> In relation to that link; is Perl 6 fast?

[07:50] <Supaplex> because it has a different smell

[07:50] <hejki> wayland76: not atm, but i hope it'll be :)

[07:50] <wayland76> ok, just checking -- that's what I thought :)

[07:51] <wayland76> Maybe we should add it to the spec :)

[07:51] <moritz_> perl 6 is lightning fast - just no Perl 6 compiler so far :-)

[07:53] *** TiMBuS joined
[07:53] *** Alias joined
[07:54] * Su-Shee -> office.

[07:54] <TiMBuS> Can't return outside a routine

[07:54] <TiMBuS> in Main (file <unknown>, line <unknown>)

[07:54] <TiMBuS> :I

[07:55] <TiMBuS> ok but, what if i dont have a single return anywhere

[07:55] <moritz_> maybe a fail()?

[07:55] <moritz_> rakudo: ...

[07:55] <p6eval> rakudo 7ef386: Can't return outside a routine␤in Main (file <unknown>, line <unknown>)␤

[07:56] <hejki> rakudo: foo(2); sub foo (Int $x) { $x; #returns 2 }

[07:56] <p6eval> rakudo 7ef386: Unable to parse block; couldn't find final '}' at line 2, near ""␤in Main (file <unknown>, line <unknown>)␤

[07:56] <hejki> heh.. comments ftw :>

[07:56] <JimmyZ> ng: sub foo { return {say $^a ~ $^b x 2 ~ 'bar2000'} }; $_ = foo; $_('f', 'o');

[07:56] <p6eval> ng 0307c2: foobar2000␤

[07:56] <JimmyZ> ng: sub foo { return {say $^b ~ $^a x 2 ~ 'bar2000'} }; $_ = foo; $_('f', 'o');

[07:56] <p6eval> ng 0307c2: offbar2000␤

[07:57] <JimmyZ> hello all, Is it right?

[07:57] <mberends> looks right

[07:57] <JimmyZ> ng: sub foo { {say $^a ~ $^b x 2 ~ 'bar2000'} }; $_ = foo; $_('f', 'o');

[07:57] <p6eval> ng 0307c2: Not enough positional parameters passed; got 0 but expected 2␤current instr.: '_block36' pc 260 (EVAL_1:113)␤

[07:58] <moritz_> TiMBuS: fail() and '...' both fall back to return() in rakudo

[07:58] <TiMBuS> i see

[07:58] <JimmyZ> pugs: sub foo { {say $^a ~ $^b x 2 ~ 'bar2000'} }; $_ = foo; $_('f', 'o');

[07:58] <p6eval> pugs: *** Blocks with implicit params cannot occur at statement level␤    at /tmp/QTM8cu8d6P line 1, column 46-54␤

[07:58] <JimmyZ> rakudo: sub foo { {say $^a ~ $^b x 2 ~ 'bar2000'} }; $_ = foo; $_('f', 'o');

[07:58] <p6eval> rakudo 7ef386: Not enough positional parameters passed; got 0 but expected 2␤in Main (file src/gen_setting.pm, line 324)␤

[07:58] <TiMBuS> im guessing its a fail() somewhere

[08:04] *** colomon joined
[08:04] *** Alias left
[08:04] *** Alias joined
[08:05] *** iblechbot joined
[08:08] <TiMBuS> welp turns out it was a {...} i left somewhere. dang.

[08:09] <TiMBuS> on a related note that old perl 6 irc bot i made went from using 70mb of ram to 107mb. O_o

[08:12] *** hanekomu_ joined
[08:15] <carlin> It'll increase more if you leave it running :-)

[08:20] *** Baggio_ joined
[08:22] *** jferrero joined
[08:27] <diakopter> wayland76: yes, why?

[08:28] <diakopter> (why do you ask, I mean)

[08:28] <wayland76> diakopter: If that's in reference to the link I posted before, I thought it might be related to what dryden was asking about :)

[08:30] <diakopter> wayland76: yes, the question you directed at me, above

[08:30] <diakopter> whether I read the scrant at that url

[08:31] *** hirschnase left
[08:32] <diakopter> I read dryden's use of "it" in "... starting to lose the point of trying to make it work.." as referring to "Perl 6 on Parrot"

[08:33] <diakopter> since his only complaint was, precisely, "I'm concerned about performance since it runs on parrot"

[08:33] <diakopter> his/her

[08:34] <diakopter> (dryden's sex being unspecified)

[08:35] <Supaplex> use Wahmbulance;

[08:36] <diakopter> wayland76: you said "what dryden was asking about" - dryden's only question was "how goes the project?"

[08:37] <diakopter> masak: who was trashing the language earlier?

[08:37] <wayland76> diakopter: I was thinking particularly of this dryden quote: "I'm not trying to depress anyone. I'm worried. I love Perl."  

[08:37] <masak> diakopter: according to mberends, someone on #perl6. I wasn't there.

[08:37] <masak> um, #perl, that is.

[08:38] <masak> sometimes the '6' sneaks in there, in writing as well as in speach... :/

[08:38] <diakopter> ahhhh, I see the double typo now :) sry

[08:38] <diakopter> actually, triple, now

[08:39] <Supaplex> http://www.bash.org/?5300

[08:39] <masak> diakopter: I rest my case. :/

[08:39] <diakopter> (the earlier typos were what threw me off :)

[08:39] <masak> Supaplex: I really like that one.

[08:40] <Supaplex> I agree :) It fits pretty well right now.

[08:41] <Su-Shee> *hihi* :)

[08:42] <diakopter> HI

[08:45] *** mathw joined
[08:49] *** wayland joined
[09:05] *** wayland76 left
[09:14] <dalek> book: d5d9a2e | (Carlin Bingham)++ | src/ (2 files):

[09:14] <dalek> book: [Builtins] [Preface] Fix typos

[09:14] <dalek> book: s/postive/positive

[09:14] <dalek> book: s/architectual/architectural

[09:15] <dalek> book: review: http://github.com/perl6/book/commit/d5d9a2e83be3f16cfa2f207211b71d6c3c424cfc

[09:15] <BooK> ONOES progress on the perl 6 book will wake me up!

[09:18] <masak> BooK: maybe /ignore dalek?

[09:18] <moritz_> BooK: time to get a case sensitive hilight :-)

[09:22] *** colomon left
[09:23] <BooK> moritz_: yeah :)

[09:40] *** envi^office left
[09:42] * masak .oO( Let's finish the Perl 6 book quickly, so we don't wake BooK up unnecessarily! )

[09:43] * moritz_ has to hand in his thesis on Friday. After that he might have more time for writing book stuff

[09:44] *** pmurias joined
[09:45] <masak> it's fun to say "book", isn't it? :)

[09:45] <masak> when I write "book", it shows up highlighted like a nickname in my client.

[09:46] <moritz_> let's just come up with a good name for it, then we can call it by name

[09:46] <masak> <superlative adjective> Perl 6

[09:47] <diakopter> "Up the Perl 6 Space Elevator"

[09:47] <diakopter> "Orbiting Rakudo Star"

[09:48] <diakopter> "Blasting Off with Perl 6"

[09:49] <moritz_> what about something more modest? "Using Perl 6"?

[09:50] <masak> that's a nice title.

[09:50] <masak> not very exciting, but perhaps we don't need exciting.

[09:51] <moritz_> I think it captures that idea that we want usable examples, to enable people to write usable Perl 6 code

[09:51] <carlin> Only problem is once you have Using Perl 6, Learning Perl 6, Programming Perl 6 ... it gets confusing as to which is which

[09:51] <hejki> ye

[09:51] <diakopter> "Using Perl 6: The first high is free"

[09:51] <hejki> "Landing Manual for Planet Perl6"

[09:51] <moritz_> carlin: so far there's neither of {Learning,Programming} Perl 6, so we can ignore them if we want :-)

[09:52] <hejki> "The Big Book of Perl6"

[09:52] <hejki> could it be a pun as well?

[09:52] <moritz_> that's definitively not what we're writing

[09:52] <diakopter> well, sixperl call mentioned Damian+Larry ramping up on Camel6, and Stonehedge wrote a lot of LearningPerl6 already...

[09:53] <diakopter> so, I disagree that those can be ignored

[09:53] <diakopter> esp since they'll likely be O'Reilly

[09:53] <hejki> "grammar Perl6 { .. }"

[09:54] <diakopter> "Adopting Perl 6"

[09:54] <diakopter> "Skinny-Dipping With Perl 6"

[09:54] <diakopter> "Seducing Perl 6"

[09:54] <diakopter> "Abusing Perl 6"

[09:54] <diakopter> I mean, there are lots of comical tongue-in-cheek cutesy options

[09:55] <moritz_> diakopter: Learning Perl 6 is a sleeping project

[09:55] <diakopter> "Implementing Perl 6" is already around 100,000 pages long

[09:56] <diakopter> so I don't think that'll ever be printed

[09:56] *** ejs joined
[09:56] <diakopter> "Birthing Perl 6" will need to be travailed by TimToady

[09:57] <diakopter> "Debunking Perl 6" is plenty long too

[09:57] <diakopter> "Trolling #perl6" is never long enough :P

[09:57] <mberends> "Sleeping with Perl 6"

[09:58] <diakopter> on that note, "A Taste of Perl 6" wouldn't be all that bad.

[09:58] <hejki> "Bashing Perl6" :)

[09:58] <diakopter> so, "Tasting Perl 6"

[09:58] <diakopter> "Wandering Perl 6"

[09:59] * moritz_ likes "A Taste of Perl 6", but it feels like it stays too much on the surface

[09:59] <diakopter> I mean, "Exploring Perl 6"

[09:59] <diakopter> "Drowning in Perl 6"

[09:59] <mberends> "Diving for Perl 6"

[09:59] <diakopter> oooooo

[09:59] *** cotto joined
[10:00] <diakopter> as in "Cracking the Perl 6 Oyster"

[10:00] <diakopter> "This Oyster Tastes Like Onions"

[10:01] <hejki> cracking the oyster sounds a bit perverted :)

[10:01] <diakopter> oh. I thought it was the next one that was...

[10:01] <hejki> hmm.. it would be if you'd s/Onions/Blood/;

[10:02] <hejki> "Primal Concrete Perl6" ?

[10:03] <diakopter> "Perl 6, Thusly"

[10:04] <hejki> "Lo and Behold - Perl6"

[10:05] <diakopter> "Perl 6, Exploded. Just some of the Clusters, though"

[10:05] <hejki> :P

[10:05] *** hanekomu_ left
[10:06] <hejki> "Practical Roundup for Perl6" 

[10:06] <diakopter> "Interring Perl 6"

[10:06] <masak> "I made you a Perl 6, but I eated it"

[10:06] <diakopter> or did I mean Entering

[10:06] <diakopter> lol

[10:07] *** Baggio_ left
[10:07] <diakopter> "I CAN HAZ PERL6"

[10:07] <hejki> "Perl6 makes the Cake real"

[10:07] *** ejs1 joined
[10:08] <diakopter> "Perl 6 Takes the Cake"

[10:08] <hejki> "Perl6 ICT - Intensive Combat Training course with Chuck Norris"

[10:08] <carlin> Iridescent Perl 6

[10:08] <Su-Shee> Perl 6 Primer which we could shorten to p6p

[10:08] <hejki> "Adolescent Perl6"

[10:08] <diakopter> "Perl 6: A Piece of Cake"

[10:08] <hejki> "Perl 6: A Cuckoo for Cac"

[10:08] <hejki> s/Cac/Caca/;

[10:09] <Su-Shee> Diving into Perl 6

[10:09] <diakopter> "The Nascent Perl 6".  "The Latent Perl 6"  "The Extant Perl 6"  "The Burgeoning Perl 6"

[10:09] <mberends> "Punning in Perl 6" - the #perl6 style guide

[10:09] <hejki> :P

[10:09] <moritz_> Su-Shee: that's already the name of a blog about Perl 6

[10:09] *** jferrero left
[10:09] <masak> "The Truth About Perl 6"

[10:09] <Su-Shee> moritz_: oh, never heard of it. 

[10:10] <diakopter> "Plumbing The Depths of Perl 6: No, this is not a Perl 6 Deep Dive"

[10:10] <hejki> "Perl6.WHAT"

[10:10] * diakopter likes

[10:10] <diakopter> "Perl6.HOW", and so forth, too

[10:10] <hejki> ye

[10:10] <diakopter> "Perl6.WHICH", even!

[10:11] <hejki> "Perl6.ICANHASCHEEZBURGER - for advanced programmers"

[10:11] <carlin> Nacreous Perl 6

[10:11] <diakopter> "LOLPERL: formerly known as Perl 6"

[10:11] <carlin> .oO( CLAZZ foo { HAZ $.bar; }... )

[10:12] <diakopter> std: SEZ "O HAI, WORLD"

[10:12] <p6eval> std 29343: Undeclared name:␤     'SEZ' used at line 1␤ok 00:01 106m␤

[10:13] <mberends> ENEEDMOREGRAMMAR

[10:13] <carlin> Pearlescent Perl 6

[10:13] <carlin> LOLCAT found where correct English expected

[10:14] <diakopter> "The Splendiferous Perl 6"  "Roundabout Perl 6"  "Approximating Perl 6"  "Approaching Perl 6"  "Designing Perl 6"  "Mutating Perl 6"

[10:15] <diakopter> "Perl 6, ish"

[10:15] <diakopter> "Perl 6, or somesuch"

[10:15] <hejki> "Perl6-on-a-stick"

[10:15] <diakopter> i kill me

[10:15] *** Baggio_ joined
[10:15] <hejki> "Perl6 - Schlumorp!"

[10:15] * moritz_ misses a minimum of seriousness

[10:17] <mberends> afk & # serious things

[10:17] *** ejs left
[10:17] <diakopter> afk& # serious things like sleep

[10:19] <moritz_> now I scared them off :/

[10:20] <diakopter> o hai from sleep

[10:21] <diakopter> "Perl 6, Delivered"

[10:21] <diakopter> "Perl 6, Just In Time"

[10:22] <diakopter> "Perl 6, Again"

[10:22] <diakopter> "Perl 6, Yes, Really"

[10:23] <diakopter> "Perl 6, We Mean It This Time For Realz Srsly"

[10:28] <hejki> "Perl 6, Funky and Fresh"

[10:30] <masak> "Perl 6, Seriously!"

[10:31] *** JimmyZ left
[10:33] *** c9s left
[10:38] *** pmurias left
[10:43] <mathw> "I HAZ A PERL 6"

[10:43] <masak> it'll never make it past copy-editing. :P

[10:44] <masak> apart from that, I like it. :)

[10:44] <wayland> "Perl 6, and DNF -- well, one out of two"

[10:45] <masak> "Perl 6 Using Your Hands"

[10:45] *** wayland is now known as wayland76

[10:45] <masak> "Dig into Perl 6"

[10:45] <carlin> I was thinking Forever Perl 6

[10:45] <wayland76> The Perly Bird Get 6 worms

[10:45] <hejki> :D

[10:45] <wayland76> ...and no butterflies

[10:45] <carlin> Perl 6: Tales from the bikeshed

[10:46] <wayland76> carlin++ :)

[10:46] <masak> :)

[10:46] <wayland76> 'night all

[10:46] <mathw> Well obviously, it's for the LOLSPEAK translation

[10:46] *** TiMBuS left
[10:47] <hejki> "Peeling Perl 6"

[10:48] <wayland76> Perl 6: Oh what a Peeling! :)

[10:48] <wayland76> afk &

[10:50] <carlin> Trawling for Perl 6

[10:51] <hejki> "Crawing Perl6"

[10:51] <hejki> s/w/v/;

[10:52] <carlin> Making a pun from pearl seems clever but also cliched

[10:52] <hejki> same goes with Perlfect

[10:52] <hanekomu> "Do They Know It's Perl6?"

[10:57] <carlin> * Perl 6

[10:57] <carlin> to go with Rakudo *

[11:02] <mathw> do cilre roda la perlxas.

[11:02] <mathw> Or something like that

[11:03] <mathw> my Lojban is terrible

[11:07] *** agentzh left
[11:09] *** Baggio_ left
[11:18] <jnthn> o/

[11:19] <mathw> o/

[11:19] <masak> o/

[11:20] <carlin> o/

[11:20] <Infinoid> o/

[11:21] <moritz_> \o

[11:23] <jnthn> moritz++ # dares to be different :)

[11:24] <jnthn> Friend who has been visiting for the weekend heads home later today...so will be back to hacking on Rakudo Stuff soon. :-)

[11:25] <mathw> yay

[11:26] *** TiMBuS joined
[11:27] *** TiMBuS left
[11:27] *** Baggio_ joined
[11:39] *** envi^home joined
[11:41] *** lestrrat is now known as lest_away

[11:52] *** Baggio_ left
[11:57] *** lest_away is now known as lestrrat

[12:01] *** SmokeMachine joined
[12:03] *** iblechbot left
[12:10] *** Baggio_ joined
[12:11] *** pnu left
[12:13] *** Baggio_ left
[12:15] *** Baggio_ joined
[12:15] *** pnu joined
[12:27] *** rgrau_`` is now known as rgrau

[12:42] *** ejs2 joined
[12:47] *** colomon joined
[12:54] *** ejs1 left
[13:00] *** pjcj_ joined
[13:00] *** pjcj left
[13:06] *** payload joined
[13:08] *** colomon left
[13:09] *** meppel left
[13:11] *** meteorjay left
[13:12] <pmichaud> "Perl 6:  It's not for everybody (yet)... but you're not everybody."

[13:12] *** rodi joined
[13:13] <moritz_> A slightly long title for a book :-)

[13:13] <masak> "Hugs and kisses from the #perl6 crew." :)

[13:13] <pmichaud> ...maybe a tagline more than a book title, then.   Plus I stole it from the graduate studies program of the university I work at :)

[13:14] <mathw> "Perl 6 for Adventuresome Types"

[13:15] <Wolfman2000> *yawn* Perl 6: The Revolution

[13:15] <Wolfman2000> I don't know

[13:15] * Wolfman2000 just recently woke up

[13:17] <pmichaud> as counterpoint to "Perl 6 for Dummies", perhaps we should do "Perl 6 for Cool and Smart People"

[13:19] <masak> could be seen as slightly elitist, I dunno...

[13:19] <pmichaud> "Perl 6: The Adventure Begins"

[13:19] <mathw> elitist is unfashionable

[13:19] <masak> rakudo: class A {}; multi sub cmp(A $a, A $b) { 1 }; say (A.new, A.new).sort

[13:19] <pmichaud> "Perl 6 Tamed"

[13:19] <p6eval> rakudo 7ef386:  ( no output )

[13:19] <masak> locally, "Multiple Dispatch: No suitable candidate found for 'cmp', with signature 'PP->I'"

[13:20] <mathw> "You have six onions"

[13:20] * masak submits rakudobug

[13:20] <pmichaud> "Perl 6:  Null PMC Access"

[13:20] <masak> \o/

[13:20] *** meppl joined
[13:20] <masak> pmichaud: that one has my vote!

[13:20] <moritz_> pmichaud: but do we want to tame it?

[13:22] <pmichaud> "Perl 6: Warp Speed"   (probably can't get the rights from Paramount)

[13:23] <pmichaud> afk for a while... have lots of errands this morning :(

[13:30] <Su-Shee> Rakudo and the six Perls

[13:30] *** payload left
[13:31] *** rodi left
[13:31] *** meppel joined
[13:36] *** jan` joined
[13:36] <masak> std: for ^10 { break }

[13:36] <p6eval> std 29343: ok 00:01 107m␤

[13:36] <masak> TimToady: shouldn't that be a compile-time error?

[13:36] *** jan` is now known as Guest43273

[13:37] <masak> Do I correctly assume that 'augment class' changes a class within the current module scope, whereas 'augment slang' changes a slang only lexically?

[13:38] * moritz_ thought that 'augment' changes globally

[13:39] <Wolfman2000> I'll have to leave soon for winter break work. If there are any changes that need to be made to the (planned) last gift I have for the Advent Calendar, you have my permission to make them.

[13:41] <moritz_> hugme: tweet rakudoperl Perl 6 advent calendar day 14: Going to the Rats http://perl6advent.wordpress.com/2009/12/14/day-14-going-to-the-rats

[13:41] * hugme hugs moritz_; tweet delivered

[13:41] <masak> moritz_: S02:2632

[13:41] *** payload joined
[13:43] <moritz_> that doesn't seem to imply to me that the scope of 'augment' is limited to a package

[13:43] <masak> what does it seem to imply, then?

[13:43] *** meppl left
[13:43] <masak> it's "lexically scoped".

[13:44] <moritz_> augment slang, yes

[13:44] <masak> yes.

[13:44] <moritz_> sorry

[13:44] <moritz_> I was not clear about that

[13:44] <moritz_> I thought 'augment class' was global, 'augment slang' lexical

[13:45] <masak> moritz_: ok.

[13:45] <masak> so 'augment class' is not a 'language tweak' a la S11?

[13:45] <masak> but introducing operators is?

[13:46] <masak> Wolfman2000: great post!

[13:47] <Wolfman2000> No obvious errors this time?

[13:47] <masak> Wolfman2000: '♥', '♣', '♦', '♠' -- have you considered using <>?

[13:47] <masak> same with the 'A', '2'... above that.

[13:47] <masak> that would solve the wrapping issue.

[13:47] <Wolfman2000> masak: ...right, should have remembered that. Good idea

[13:48] <masak> also, I personally prefer Card.new(:$rank, :$suit)

[13:48] <masak> otherwise, I see no nits to .pick :)

[13:48] <Wolfman2000> rakudo: @suits = <♥, ♣, ♦, ♠>; say @suits.join(" ");

[13:49] <p6eval> rakudo 7ef386: Symbol '@suits' not predeclared in <anonymous> (/tmp/O39wFpA3Oh:2)␤in Main (file <unknown>, line <unknown>)␤

[13:49] <Wolfman2000> rakudo: my @suits = <♥, ♣, ♦, ♠>; say @suits.join(" ");

[13:49] <p6eval> rakudo 7ef386: ♥, ♣, ♦, ♠␤

[13:49] *** mepplock joined
[13:49] <Wolfman2000> ...derp

[13:49] <moritz_> Wolfman2000: don't use , inside <...>

[13:49] <moritz_> rakudo: my @suits = <♥ ♣ ♦ ♠>; say @suits.join("|");

[13:49] <p6eval> rakudo 7ef386: ♥|♣|♦|♠␤

[13:49] <moritz_> ng: my @suits = <♥ ♣ ♦ ♠>; say @suits.join("|");

[13:49] <Wolfman2000> my post is updated

[13:49] <p6eval> ng 0307c2: ♥|♣|♦|♠␤

[13:50] <moritz_> Wolfman2000++

[13:50] <Wolfman2000> of course, I'm still surprised that this worked when I tested...

[13:50] <Wolfman2000> rakudo: my @dice = 1 5 10 20 50 100 500; say @dice.pick(10, :replace).join(" ");

[13:50] <p6eval> rakudo 7ef386: Confused at line 2, near "5 10 20 50"␤in Main (file <unknown>, line <unknown>)␤

[13:50] <Wolfman2000> ...or I didn't copy it right

[13:50] <Wolfman2000> rakudo: my @dice = <1 5 10 20 50 100 500>; say @dice.pick(10, :replace).join(" ");

[13:50] <p6eval> rakudo 7ef386: 500 20 20 500 10 20 1 1 500 10␤

[13:52] <Wolfman2000> alright, everything should be good from what I can tell. I can't guarantee I'll be here when the code is made public

[13:52] <Wolfman2000> Still, hopefully my lack of working directly with the building of Perl 6 wasn't a hindrance.

[13:53] <moritz_> don't worry, if something goes awefully wrong somebody else will fix it :-)

[13:53] <Wolfman2000> *nods*

[13:53] <mathw> oh, moritz_, thanks for answering that question on my Junctions post

[13:53] <mathw> I was offline most of yesterday

[13:53] <moritz_> mathw: you're welcome

[13:54] *** riffraff joined
[13:55] *** JimmyZ joined
[13:57] *** meppel left
[13:58] *** ejs1 joined
[14:01] *** ejs2 left
[14:08] *** ejs2 joined
[14:09] *** Exodist left
[14:09] *** colomon joined
[14:09] *** ihrd joined
[14:09] *** ihrd left
[14:10] *** ejs1 left
[14:21] *** synth joined
[14:21] *** synth left
[14:22] *** Guest31990 left
[14:22] *** lisppaste3 left
[14:22] *** viklund left
[14:22] *** hicx174 left
[14:22] *** tarbo2 left
[14:22] *** Guest69693 left
[14:23] *** Guest31990 joined
[14:23] *** Guest43273 left
[14:23] *** Alias left
[14:23] *** jrockway left
[14:23] *** zostay left
[14:23] *** frew left
[14:23] *** slavik left
[14:23] *** jlaire left
[14:23] *** jan_ left
[14:23] *** ashizawa left
[14:24] *** viklund joined
[14:25] *** iblechbot joined
[14:26] *** viklund left
[14:26] *** lisppaste3 joined
[14:26] *** viklund joined
[14:26] *** hicx174 joined
[14:26] *** tarbo2 joined
[14:26] *** viklund_ joined
[14:27] *** Joda joined
[14:27] *** jrockway joined
[14:27] *** zostay joined
[14:28] *** Joda is now known as Guest221

[14:28] *** moritz_ left
[14:28] *** moritz_ joined
[14:29] *** tarbo2 left
[14:30] *** c9s joined
[14:30] *** tarbo2 joined
[14:37] *** colomon left
[14:51] *** elmex left
[14:52] *** viklund left
[14:56] *** synth joined
[14:56] *** elmex joined
[14:56] *** [synth] joined
[14:57] *** mariano__ joined
[15:02] *** alester joined
[15:04] *** KyleHa joined
[15:04] *** PacoLinux joined
[15:06] *** [synth] left
[15:06] *** jan` joined
[15:07] *** jan` is now known as Guest11428

[15:08] *** Guest31990 left
[15:10] *** ejs2 left
[15:10] *** takadonet joined
[15:11] <takadonet> morning all

[15:12] <masak> o/

[15:13] *** perlygatekeeper joined
[15:13] <takadonet> masak: how are you?

[15:14] <masak> takadonet: tired but happy.

[15:14] <masak> takadonet: how are you?

[15:14] <takadonet> masak: busy and want to hack on bioperl6

[15:14] *** colomon joined
[15:15] *** JimmyZ left
[15:17] *** JimmyZ joined
[15:20] *** Baggio_ left
[15:24] *** colomon left
[15:26] *** masak left
[15:31] *** payload left
[15:35] *** mariano__ left
[15:35] *** mariano__ joined
[15:39] *** Psyche^ joined
[15:41] *** kaare joined
[15:41] *** kaare is now known as Guest12394

[15:43] *** Patterner left
[15:43] *** Psyche^ is now known as Patterner

[15:43] *** payload joined
[15:46] *** beggars joined
[15:50] *** jan_ joined
[15:57] *** JimmyZ left
[15:57] *** tylerni7 left
[15:58] *** tylerni7 joined
[16:11] *** nihiliad joined
[16:13] *** astrojp left
[16:22] *** jlaire joined
[16:22] *** frew joined
[16:22] *** ashizawa joined
[16:22] *** slavik joined
[16:30] *** SmokeMachine left
[16:35] *** payload left
[16:35] *** payload joined
[16:36] *** zloyrusskiy joined
[16:39] *** envi^home left
[16:41] *** payload left
[16:43] *** PerlJam joined
[16:49] *** PerlJam left
[16:49] *** PerlJam joined
[16:52] *** masak joined
[16:52] <masak> my computer crashed.

[16:53] <jeremiah> yuck

[16:53] <TimToady> that seems...suboptimal...

[16:53] <masak> once again, it is an innocent victim of my Firefox tabs.

[16:53] <jeremiah> All ten thousand?

[16:53] <TimToady> but did it crash *fast*?

[16:53] <masak> more like 2.5k.

[16:53] <jeremiah> Which tab was the culprit?

[16:53] <PerlJam> masak: http://www.google.com/chrome  :-)

[16:53] <phenny> PerlJam: 12 Dec 02:41Z <carlin> tell PerlJam there's a copy of your Benchmark.pm in perl6-examples lib and in its own repo, which causes problems for proto. Would you mind removing or renaming the perl6-examples copy?

[16:53] <masak> PerlJam: :)

[16:53] <jeremiah> Wow - you must have been reading a lot to get down to 2.5K

[16:54] <masak> jeremiah: yes, and irreversible crashes brought it down a bit, too.

[16:54] <jeremiah> :(

[16:54] <masak> bah. win some, lose some :)

[16:54] <moritz_> masak: maybe you should just put less in your reading queue

[16:54] *** payload joined
[16:54] <masak> moritz_: but there are so many worthwhile and interesting things!

[16:55] <diakopter> masak: how many of those open tabs are duplicates? :)

[16:55] <masak> diakopter: some. not more than 0.5%.

[16:55] <moritz_> masak: but they are only interesting and worthwile if you actually get around to read them...

[16:55] <masak> moritz_: well, I do. eventually.

[16:55] <jeremiah> What about all the tabs that you don't even know about yet?

[16:55] <TimToady> you sure you're not looking for "worthwhile OR interesting"?  :P

[16:55] <moritz_> unless firefox crashes

[16:55] <masak> jeremiah: whoa.

[16:56] <masak> moritz_: firefox is good at bringing itself up with the tabs intact.

[16:56] <jeremiah> Chrome does that too - but puts them in history

[16:56] <masak> moritz_: as long as I unplug the ethernet cord while it tries to load them all in... :)

[16:56] <diakopter> lol.

[16:56] <masak> jeremiah: interesting. how does that work?

[16:56] *** SmokeMachine joined
[16:57] <jeremiah> So you have to click on a link to restore all your tabs

[16:57] <jeremiah> Which is nice because it avoids the firefox behavior

[16:57] <jeremiah> Which seems to be affecting your computer

[16:57] *** _jaldhar left
[16:58] <masak> jeremiah: only once every month or so.

[16:58] <jeremiah> aha

[16:59] *** _jaldhar joined
[16:59] <diakopter> survey: if you were looking for an open-source/free-software garbage-collecting multi-stage/meta-programming multi-platform VM/compiler, which would you choose, and why?

[17:00] <moritz_> I'd ask diakopter :-)

[17:00] <jeremiah> parrot - because it is the only one that fits that criteria

[17:00] <diakopter> cheat answer :P

[17:00] <jeremiah> ?

[17:00] <PerlJam> jeremiah: uh ... no it doesn't.

[17:00] <jeremiah> :)

[17:00] <PerlJam> :)

[17:00] <jeremiah> I was just guessing - I thought it was a trick question

[17:00] <diakopter> you got that right

[17:01] <moritz_> probably depends on what you mean by "meta-programming"

[17:01] <PerlJam> jeremiah: parrot would be my answer too  (but only because I haven't looked at any other VMs)

[17:01] <diakopter> runtime codegen in-process/in-memory

[17:01] <diakopter> that can be invoked on the same working set

[17:02] <mberends> Perl 5?

[17:02] <mberends> you didn't say multi-language :P

[17:03] <diakopter> yeah, but any interpreter can be multi-language

[17:03] <diakopter> :P

[17:03] <moritz_> Perl 5 is a very bad assembler language :-)

[17:03] <diakopter> PerlJam: how doesn't parrot fit the criteria?

[17:04] <moritz_> parrot has garbage collection, but at times it's less-than-awesome

[17:04] <diakopter> oh

[17:05] <PerlJam> diakopter: I was being overly critical.  If you twiddle the knob  that says how successful parrot is at each of those criteria then parrot fits perfectly.

[17:05] <masak> moritz_: parrot has speed, but at times it's less-than-awesome :)

[17:06] <TimToady> parrot has *, but at time it's LTA. :)

[17:06] <TimToady> *times

[17:07] <masak> if Parrot has *, then it must be a perfect platform for Rakudo *.

[17:08] <TimToady> I wonder if break would be easier to implement if we made it a statement_prefix...

[17:08] <diakopter> V8 would fit the criteria, except it's not really a compiler stand-alone.  it doesn't have a bytecode/IR to which it can persist/read.  to persist state you have to build your script into an executable that links into libv8 using g++

[17:08] <masak> swim &

[17:09] *** masak left
[17:09] *** solarion left
[17:09] * TimToady pictures masak testing a rock while swimming...

[17:09] <TimToady> "yep, that one sinks fast!"

[17:09] <TimToady> "I'd better let go of it..."

[17:10] <diakopter> "we must be in the dead sea, b/c rocks float"

[17:11] <TimToady> silly masak, you're testing pumice!

[17:11] <diakopter> any other answers for my survey?

[17:11] <arnsholt> I'm not at all familiar with the field, but the alternatives are more or less Parrot, JVM and CLR, no?

[17:12] <moritz_> mono

[17:12] <TimToady> s/CLR/mono/ if you want FOSS

[17:12] <moritz_> you can look also in LLVM

[17:12] *** Astoria` joined
[17:12] <moritz_> s/in/at/

[17:12] <arnsholt> Yeah, I'm not familiar with the terminology, but yeah the .Net VM thing

[17:13] <TimToady> you could put it on top of Haskell...

[17:13] <arnsholt> moritz_: Good point

[17:13] <mberends> diakopter: since V8 is open source C++, could persisting the IR be added?

[17:13] <arnsholt> TimToady: In that case you could add any Turing-complete language, no?

[17:13] <TimToady> that was my next point

[17:14] <arnsholt> Oh, right

[17:14] <arnsholt> Ignore my last then

[17:14] <diakopter> mberends: yes, but there's no IR at all.  JS source directly to machine code that runs upon loading.  You'd have to bundle a g++ too

[17:14] <TimToady> but Haskell turns most of those knobs pretty high

[17:15] <arnsholt> Haskell is very cool indeed

[17:15] <moritz_> ... out of my reach

[17:15] <TimToady> in spots

[17:15] <arnsholt> moritz_: Same here. I've not managed to put in enough effort to really learn how to use it properly

[17:16] <diakopter> new criterion: that doesn't require being able to write in Haskell, the Language of the Gods

[17:16] <TimToady> does writing in pugs count?

[17:16] <diakopter> :P

[17:16] <PerlJam> I thought Perl 6 was the language of the gods?

[17:16] <moritz_> PerlJam: depends on the gods, really :-)

[17:17] <diakopter> (kidding on the new criterion)

[17:17] <TimToady> hemidemisemigods

[17:17] <takadonet> http://xkcd.com/224/

[17:17] <PerlJam> takadonet: exactly!

[17:17] <diakopter> takadonet: oh yeah :D

[17:21] <diakopter> re JVM runtime codegen/loading, how do folks do that?

[17:26] <arnsholt> Re: Loading, that's handled by methods in java.lang.ClassLoader, AFAICT

[17:26] <arnsholt> As for compiling, I think you need either a compiler (if you want to compile at runtime, like JSP does) or a library that gives you a sane interface to the assembler language

[17:26] *** payload left
[17:28] <arnsholt> I don't think you have a byte code generation lib in the standard library, like C# has (from what I understand)

[17:30] *** solarion joined
[17:31] <diakopter> for .net/clr, there's an MIT-licensed addon library http://runsharp.googlecode.com that wraps even System.Reflection.Emit... it's what I've been experimenting with lately

[17:32] <diakopter> clr/mono, I mean (I've been using mono)

[17:33] <diakopter> for jvm, looks like http://www.gnu.org/software/kawa/ is a good tool

[17:34] <arnsholt> Right

[17:38] *** _jaldhar is now known as jaldhar

[17:40] <diakopter> (specifically, the gnu.bytecode included in kawa)

[17:41] <obra> TimToady: ping? I recall in some writing of yours, you've stated that one of your biggest regrets about p5 is that 'use strict' isnt' the default. Am I on crack? Can you think of a convenient citation?

[17:41] <mberends> diakopter: did you need answers, or were you just teasing us to see if we also know what you already know?

[17:42] <TimToady> I don't think I ever said that about P5, except insofar as P6 does it differently

[17:42] <obra> ok 

[17:42] <TimToady> I maintained for many years that was good for people to pick righteousness explicitly  :)

[17:42] <TimToady> *that it

[17:43] * obra nods.

[17:43] <TimToady> but p6 has enough new righteousnes to pick explicitly already :)

[17:43] <diakopter> mberends: both

[17:44] <obra> I'm in the midst of a discussion about p5 policy and "upgrading" the defaults on users in a newer release of Perl 5, such that code that previously worked needs a "use foo" statement to make it keep working.

[17:44] <PerlJam> TimToady: Are you sure you don't want to herd people towards righteousness with a sword?  That's been used with great success in the past.   ;->

[17:44] <obra> That...makes me sad.

[17:45] <diakopter> the discussion makes you sad, or the proposed "upgrading" policy?

[17:46] <obra> diakopter: actually, the arguments against my "we should do everything we can to make sure old code keeps working" policy :)

[17:48] <mberends> it depends what kind of damage results from breaking the old code

[17:49] <obra> mberends: you mean whether they come after us with pitchforks or with knives?

[17:49] <TimToady> .oO(It's the End of the World as we Know It, and I feel fine...)

[17:49] * obra grins at TimToady 

[17:50] <mberends> heh, perhaps just the cost and time to rewrite the old bad bits

[17:50] <TimToady> "Hi, I see that you have a bad bit at line 42; rewriting it for you..."

[17:50] <diakopter> yeah. unfortunately, I'm in agreement with you. The Slippery Slope mindset is what maintainers must by necessity listen to: "if they're introducting [backward-compatability-breaking-change X] now, that basically means perl is no longer supported."  Otoh, I agree fully with the argument that the systems that have the "old" code will almost never be upgraded anyway, ever...  But it's a branding/marketing issue, unfortunately (for those who want to improve 

[17:51] <obra> TimToady: That would be a lovely solution

[17:51] <TimToady> well, except for the little matter of write access :)

[17:51] <arnsholt> Isn't there also precedent for keeping backwards compatibility?

[17:52] <TimToady> P5 specializes in keeping; P6 specializes in breaking it.  :)

[17:52] <TimToady> *keeping it

[17:54] <obra> diakopter: I have people installing 

[17:55] <obra> software I wrote in 1997 on modern machines running RedHat Enterprise 5.3 with Perl 5.10

[17:55] <obra> and it all works just fine :)

[17:55] <obra> TimToady: I could see a runtime rewrite and a "recompiled code cache"

[17:56] *** PacoLinux left
[17:56] <diakopter> obra: I hope I was clear that I thought it was a branding issue (that backward compatibility must be maintained)

[17:56] <obra> Nod

[17:57] <diakopter> but from where are they obtaining the 1997 software?  CD-ROMs?  or cpan?  or another website?

[17:57] <mberends> the cost of backward compatibility accumulates over time; one solution is to sneak reporting instrumentation into the old infrastructure, using its trace logs to gradually eradicate/replace the undesired parts.

[17:58] <obra> diakopter: upgrading existing systems.

[17:59] <diakopter> oh... you said installing.

[17:59] *** stephenlb joined
[17:59] <obra> new system. new copy of the same code they were already running. on a new Perl with deps from cpan, etc.

[18:01] <diakopter> I hope that's a paid support contract :) b/c I wouldn't want to have to worry about that otherwise; newer deps from cpan break compatibility (often unintended) often..

[18:02] * obra shrugs

[18:03] <obra> I still don't want to screw over end users. 

[18:03] <diakopter> still, I don't see why both modes can't be supported going forward...? a local/site flag?

[18:03] <obra> Hurting people makes them not like you.

[18:03] <obra> diakopter: the issue is entirely one of "what does perl do without you Explicitly saying you want a certain behavior"

[18:03] <diakopter> (with the backward-compat mode still the default)

[18:03] <obra> right. your parenthetical expression is the topic of the debate.

[18:04] <diakopter> I'm referring to a system-wide default

[18:04] <moritz_> I've been submitting patches for dev.perl.org/perl6/ for a while, and now the question has come up if we should remove links to pugscode.org there

[18:05] <moritz_> quick poll: [A] leave as is [B] remove most, but not all [C] remove them all

[18:05] <mberends> B

[18:05] * moritz_ votes for B, but would love to hear other opinions too

[18:05] <mberends> moritz_: it's ok, two makes a quorum ;)

[18:06] <diakopter> B

[18:06] <diakopter> (but first, I see only one link there anyway...)

[18:07] <obra> diakopter: right. Should the systemwide default be the new "better" behavior or the behavior that existed before we "fixed" it?

[18:07] <moritz_> some have been removed already, some are hidden on subpages

[18:07] <diakopter> incl the subpages

[18:07] <diakopter> there's one at the bottom of the FAQ

[18:08] <diakopter> actually, no, it's not even a hyperlink

[18:08] <diakopter> <a name="http://www.pugscode.org/"

[18:09] <diakopter> and then the 1 actual link on the Status page

[18:10] <diakopter> architecture.html definitely needs mothballed

[18:11] *** orafu left
[18:11] *** orafu joined
[18:11] <diakopter> the copy on status.html needs lots of tense changes

[18:12] <diakopter> "Internals" on status.html needs rewording/rewritten

[18:12] <moritz_> if anybody wants to help, the sources can be obtained with   svn co https://svn.perl.org/perl.org/docs/live/dev

[18:14] *** PacoLinux joined
[18:15] *** colomon joined
[18:16] <diakopter> which pugscode link was proposed to remove?

[18:19] *** ShaneC joined
[18:20] <moritz_> Leo asked if we should remove them all

[18:21] <diakopter> does he want all the parrot links removed too?

[18:21] <moritz_> nope

[18:21] <moritz_> let me give you a bit more context

[18:22] <moritz_> somewhere on one of the pages it said "for latest news re perl6, visist [...] www.pugscode.org"

[18:22] <moritz_> a patch of mine removes that, reasoning that there haven't been any news on pugscode.org for years

[18:22] <moritz_> so he asked if we should remove all links to pugscode.org

[18:23] <diakopter> ok, but I don't see that anywhere in the svn checkout

[18:23] <diakopter> your patch was already committed?

[18:23] <moritz_> index.html, perl6/status.html, perl6/faq.pod

[18:24] <moritz_> diakopter: don't know, I sent two patches, one was applied already, the other not

[18:24] <moritz_> and right now I have no overview what was in which patch

[18:24] <diakopter> on the live site (and in svn) there is just the 1 link to pugscode, and then the other fake link on FAQ

[18:25] *** cotto_work joined
[18:25] <moritz_> I see two links in svn

[18:25] <moritz_> index.html

[18:25] <moritz_> 51:  <td><font size="+2"><a href="http://www.pugscode.org/">Pugs</a></font></td

[18:25] <moritz_> perl6/status.html

[18:25] <moritz_> 46:<a href="http://www.pugscode.org/">Pugs</a> - an experimental implementation of Perl 6. Run Perl 6 today!

[18:26] <diakopter> ok

[18:26] <diakopter> why would Leo want to remove the Pugs links but not the Parrot links?

[18:27] <moritz_> probably because I told him it contains no news

[18:27] *** cdarroch joined
[18:27] <moritz_> anyway, Leo asked, I'll answer that not all links should be removed

[18:28] *** zloyrusskiy left
[18:30] <coke> apparently not. bother.

[18:30] <coke> ww

[18:30] *** coke is now known as Coke

[18:33] <diakopter> moritz_: how shall I submit patches for the site?

[18:36] <moritz_> diakopter: subscribe at http://lists.scsys.co.uk/cgi-bin/mailman/listinfo/perl-org-patches

[18:36] <moritz_> and maybe look at http://lists.scsys.co.uk/pipermail/perl-org-patches/2009-December/thread.html for my first two patches

[18:39] *** riffraff left
[18:40] *** rgrau` joined
[18:52] *** Coke left
[18:55] *** justatheory joined
[19:02] <IllvilJa> If I want to handle YAML docs in rakudo perl6, what are my best options?  Is it already built into the language, is it a core library already included or should I install some Perl6 module from github or elsewhere?

[19:04] <moritz_> you should first write a YAML library, and then use it

[19:12] <PerlJam> Didn't someone code a small YAML lib in Perl 6 already?

[19:20] <moritz_> I'm not aware of that

[19:20] <moritz_> only of JSON

[19:21] *** KeithWolters joined
[19:23] <PerlJam> Maybe I'm thinking of the JSON one then  (they tend to occupy the same locality in my brain)

[19:24] <moritz_> when you try to implement them, you'll notice very soon that they are very different beasts :-)

[19:25] <PerlJam> aye, they're used in similar contexts which is why they're close in my brain.

[19:27] <moritz_> me attempts to teach people that data serialization languages and data exchange languages fill different niches don't seem to very effective

[19:27] <PerlJam> heh

[19:28] <PerlJam> It doesn't matter what niche they were designed for or are most useful for; people will use them however they please.

[19:30] *** rachelBROWN left
[19:30] <moritz_> aye

[19:33] *** thowe joined
[19:33] <thowe> Hello.

[19:33] <moritz_> hi thowe 

[19:39] <Su-Shee> JSON is YAML, btw. 

[19:40] <moritz_> JSON is a tiny, well-defined subset of the huge multiverse of YAML

[19:49] *** rjh_ left
[19:54] <diakopter> does anyone know whether either/both of the last two State of the Onion talks (video, audio, transcript/slides) are available online (or offline!) anywhere???

[19:54] <diakopter> I'll keep asking every week until someone who knows replies... ;)

[19:57] <IllvilJa> moritz_: PerlJam: I assume then that the currently available JSON implementation in Perl6 is the most "whippitupitudical" approach to get some basic management of structured data on storage as well as interchanged between processes [potentially via a storage media ;-) ].

[19:58] <moritz_> IllvilJa: right. It's just limited to numbers, booleans, undef, arrays and hashes

[19:59] <IllvilJa> moritz_: JSON should do then.  I'm actually quite accustomed to XML, but I don't know how well THAT beast is supported in Perl6.

[20:00] <IllvilJa> XML is a heavyweight monster that actually cooperates with me.

[20:01] <moritz_> there's an XML grammar somewhere on github, but to be fair proper XML support consists of far more than just a grammar

[20:01] *** Exodist joined
[20:01] *** riffraff joined
[20:02] *** vamped joined
[20:04] <mberends> IllvilJa: the reference to YAML that you recall is probably about proto, which uses a teeny subset of the format in a very limited way

[20:05] <mberends> and that subset is not the same subset as JSON :(

[20:07] <vamped> rakudo: my @a = 10 ... * +1,20; @a.perl.say

[20:07] <p6eval> rakudo 7ef386: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]␤

[20:07] <vamped> rakudo: my @a = 1.0 ... * +.1,2.0; @a.perl.say

[20:07] <p6eval> rakudo 7ef386: [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9]␤

[20:08] <vamped> anyone know why there is a difference here, above: ?

[20:08] <moritz_> vamped: probably floating point/rounding errors

[20:08] <colomon> presume it's the good old... what moritz said.

[20:09] <moritz_> rakudo: my @a = 1.0 ... * + 1/10 , 2.0; @a.perl.say

[20:09] <p6eval> rakudo 7ef386: [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9]␤

[20:09] <colomon> rakudo: my @a = 1 ... * + 1/10, 2; @a.perl.say

[20:09] <Tene> rakudo: my @a = 1.0 ... * +.1,2.001; @a.perl.say

[20:09] <p6eval> rakudo 7ef386: Multiple Dispatch: No suitable candidate found for 'cmp', with signature 'PP->I'␤in Main (file <unknown>, line <unknown>)␤

[20:09] <p6eval> rakudo 7ef386: [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2]␤

[20:09] <moritz_> that did it

[20:09] <colomon> that was Tene's I think.

[20:09] <colomon> series operator hates me.  :)

[20:09] <vamped> I was thinking that was a possibility, but ideally I would expect it to work as it was.

[20:10] <moritz_> vamped: it will, in a few months

[20:10] <moritz_> vamped: we have a branch where 1.0 and 0.1 are Rats too

[20:10] <colomon> vamped: floating point numbers just don't work that way.

[20:10] <vamped> ok. cool. speaking of ng?

[20:10] <moritz_> it just needs a lot of other things being worked on before we can merge it

[20:10] <moritz_> vamped: yes

[20:10] <diakopter> ng: my @a = 1.0 ... * +.1,2.0; @a.perl.say

[20:10] <p6eval> ng 0307c2: too few positional arguments: 3 passed, 4 (or more) expected␤current instr.: 'perl6;Code;new' pc 11596 (src/builtins/Positional.pir:142)␤

[20:11] <colomon> though actually, it seems to me that series operator ought to include its last argument in the list always, no matter what?

[20:11] <colomon> diakopter: that's NYI in ng.

[20:11] <colomon> if you're bored, you're welcome to implement it.  :)

[20:11] <vamped> and do I understand correctly that ng will probably not be merged by this month's release?

[20:11] <moritz_> colomon: yes, but if the accumulated value is larger than the limit, it won't be included

[20:12] <moritz_> vamped: pmichaud hasn't decided finally on that (afaik), but I think it's highly unlikely

[20:12] <moritz_> heck, we don't even have working hashes or ranges in ng

[20:12] <colomon> to make it reasonable, ng would have to pass about 30,000 more tests in the next two days.

[20:12] <PerlJam> colomon: it could happen  :)

[20:13] <diakopter> I thought LTM in nqp-rx was the holdup

[20:13] <diakopter> the next big thing, I mean

[20:13] <Tene> there are some things blocking on lists API refactor.

[20:13] <moritz_> diakopter: that's postponed for when it's actually needed

[20:14] <colomon> no hashes, can't pass by array, lists don't really work, ranges don't work, no list assignment...

[20:15] <PerlJam> colomon: I've known pmichaud to not sleep for really long periods of time ... it could still happen  :)

[20:16] <colomon> PerlJam: I can maybe believe he could take care of all the big blockers, but that still leaves rebuilding the core (aka setting) and I don't think you can run spectest fast enough to make all the needed changes in 48 hours.  :)

[20:17] <RichiH> hmm, today's advent calendar does not go into details about what causes `say pi.Rat` and `say pi` to print different values

[20:17] <PerlJam> I'm going to continue to wear my optimist hat this week regardless.

[20:22] <colomon> RichiH: it's implied, sorry.

[20:23] <colomon> basically, if you say pi.Rat, what you get is an approximation of pi as a Rat which is accurate to 1e-6 (I think).

[20:23] <RichiH> colomon: well, because one is Rat and the other one a mere Num

[20:23] <colomon> so the first six digits or so of pi.Rat and pi should match, and then they will diverge.

[20:23] <RichiH> but i would have thought that pi is stored in a way that yields the same result in both contexts

[20:24] <colomon> I guess the quick answer is, it definitely isn't.

[20:24] <vamped> rakudo: say pi.Rat.perl

[20:24] <p6eval> rakudo 7ef386: 355/113␤

[20:24] <colomon> in master, pi is a Num.

[20:25] <colomon> as spec'd and in ng, pi will be a Rat.

[20:25] <colomon> (At least, I think the spec implies pi is a Rat.)

[20:25] <colomon> I guess once pi is a Rat, then pi.Rat will exactly equal pi.  :)

[20:26] <colomon> (though pi isn't defined at all in ng yet.)

[20:26] <vamped> rakudo: say pi.Rat(1e-14).perl

[20:26] <p6eval> rakudo 7ef386: 80143857/25510582␤

[20:27] <colomon> yeah, that might do it for accuracy.

[20:27] <colomon> rakudo: say pi.Rat(1e-14)

[20:27] <p6eval> rakudo 7ef386: 3.14159265358979␤

[20:27] <vamped> RichiH: I think that part of the post explains it. Yes?

[20:27] <colomon> rakudo: say pi;

[20:27] <p6eval> rakudo 7ef386: 3.14159265358979␤

[20:28] <sjohnson> rakudo:  my @a = <1 2 3>;  for @a { $_ = 'x' }; say @a.perl

[20:28] <p6eval> rakudo 7ef386: ["x", "x", "x"]␤

[20:28] <vamped> RichiH: Rat defaults to 1e-6

[20:28] <RichiH> vamped: hmm, true

[20:29] <sjohnson> what is the best way to avoid "writing back" to the @ var?  anyone?  :]

[20:30] <vamped> is very excited about decimal numbers being represtented as Rats

[20:30] <moritz_> sjohnson: use an explicit signature

[20:30] <moritz_> rakudo:  my @a = <1 2 3>;  for @a -> $a { $a = 'x' }; say @a.perl

[20:30] <p6eval> rakudo 7ef386: Cannot assign to readonly variable.␤in Main (file <unknown>, line <unknown>)␤

[20:32] <sjohnson> hmm

[20:32] <sjohnson> moritz_: is this new to p6?

[20:33] <moritz_> sjohnson: yes

[20:34] <sjohnson> moritz_: the p5 way is just doing $tmp = $_ i suppose

[20:36] <sjohnson> that is kinda cool though

[20:36] <sjohnson> moritz_: what about (in p6) if you wanted to actaully do the modifications i did, but not "write back" to the foreach array?

[20:37] <sjohnson> but just change in side the { } scope willy nilly

[20:41] <sjohnson> i suppose $tmp = $_ is the only way in P6 too?

[20:41] <moritz_> no

[20:41] <moritz_> 'is copy

[20:41] <moritz_> rakudo:  my @a = <1 2 3>;  for @a -> $a is copy { $a = 'x' }; say @a.perl

[20:41] <p6eval> rakudo 7ef386: ["1", "2", "3"]␤

[20:43] *** dakkar joined
[20:43] <sjohnson> wow, this is pretty cool

[20:43] <sjohnson> moritz_++

[20:44] <moritz_> not my idea :-)

[20:45] <sjohnson> always ++ the messenger is my P6 motto

[20:45] <sjohnson> looks like i really can't think up any good ideas that haven't already been done to p6

[20:47] *** am0c left
[20:49] *** coke joined
[20:49] <sjohnson> moritz_: is there a safe and proper way, to "is copy", and use the $_ var without too much extra writing?

[20:49] <sjohnson> will just "is copy" be safe + smart?

[20:50] <moritz_> $_ is copy  works

[20:52] <sjohnson> rakudo:  my @a = <1 2 3>;  for @a is copy { s/./x; }; say @a.perl

[20:52] <p6eval> rakudo 7ef386: Confused at line 2, near "is copy { "␤in Main (file <unknown>, line <unknown>)␤

[20:52] <sjohnson> rakudo:  my @a = <1 2 3>;  for @a $_ is copy { s/./x = 'x' }; say @a.perl

[20:53] <p6eval> rakudo 7ef386: Confused at line 2, near "$_ is copy"␤in Main (file <unknown>, line <unknown>)␤

[20:53] <sjohnson> rakudo:  my @a = <1 2 3>;  for @a {$_ is copy} { s/./x = 'x' }; say @a.perl

[20:53] <p6eval> rakudo 7ef386: Confused at line 2, near "is copy} {"␤in Main (file <unknown>, line <unknown>)␤

[20:53] <vamped> sjohnson: for @a -> $_ is copy {...}

[20:55] <sjohnson> is it impossible to implement an for @a is copy syntax?

[20:55] <sjohnson> to omit writing $_ if it's $_ ?

[20:55] <moritz_> the question is not if it's impossible

[20:55] <moritz_> but if it's really worth the trouble

[20:56] *** Su-Shee left
[20:57] <vamped> maybe a .copy method should be invented, so: for @a.copy {...}

[20:57] <colomon> std: my @a = <1 2 3>;  for @a is copy { s/./x; }; say @a.perl

[20:57] <p6eval> std 29343: [31m===[0mSORRY![31m===[0m␤Missing block at /tmp/MwjdXT7nB4 line 1:␤------> [32mmy @a = <1 2 3>;  for @a [33m⏏[31mis copy { s/./x; }; say @a.perl[0m␤    expecting any of:␤  infix or meta-infix␤      infix stopper␤    parameterized block␤      standard stopper␤ terminator␤FAILED

[20:57] <p6eval> ..00:01 110m␤

[20:58] *** KeithWolters left
[20:58] <sjohnson> it is kind of cool when you can omit the $_ ... but that's just me i guess

[20:58] <coke> is .panic a standard thing, or only NQP?

[21:00] <moritz_> STD.pm uses that too

[21:00] <moritz_> so it's quasi standard

[21:02] <diakopter> I think panic is in the synopses somewheres

[21:02] *** gabiruh_ is now known as gabiruh

[21:03] <diakopter> oh wait, or mabye it was removed

[21:04] <coke> is this legal? http://nopaste.snit.ch/19081

[21:05] <coke> if I try to put a variable in the .panic, I get an error during compilation about the angle bracket.

[21:05] <diakopter> what does ** mean there

[21:05] <moritz_> separated by

[21:06] <moritz_> coke: I think it should work, but maybe it's an nqp limitation

[21:06] <diakopter> I knew that, last week :)

[21:06] <coke> moritz_: any suggestions on alternate spellings that might work? =-)

[21:08] <moritz_> coke: if interpolation doesn't work either... no idea

[21:09] <coke> is "$<error>" the right way to spell that?

[21:09] <coke> (that didn't work either.)

[21:09] <moritz_> it is

[21:09] <coke> I can only get literal strings to work. (but comma separating /them/ works fine.)

[21:10] *** riffraff left
[21:10] <coke> with "$<extra>", it compiles, but then doesn't actually interpolate at runtime.

[21:10] * coke finds the nqp-rx wishlist...

[21:15] *** riffraff joined
[21:17] *** jferrero joined
[21:17] <coke> moritz_: added to http://wiki.github.com/perl6/nqp-rx/requests, danke.

[21:18] *** SmokeMachine left
[21:18] *** SmokeMachine joined
[21:19] *** riffraff left
[21:22] *** jaldhar left
[21:27] <vamped> to install Rakudo on a computer (Ubuntu) without an internet connection, can I install on another computer (Ubuntu) and copy directory tree over? Are there any limitations to this method?

[21:27] <moritz_> vamped: if it's the same architecture (i386 vs. amd64) it should work

[21:28] <wayland76> Are they the same version of Ubuntu?  That helps too.  

[21:28] <wayland76> Packaging systems do essentially what you're talking about

[21:28] <vamped> will be the same version of Ubuntu. I don't know now if the other computer is same architecture.

[21:28] <wayland76> We can't guarantee it will work, but it's got a good chance

[21:29] <[particle]> there are parrot packages for debian

[21:29] <[particle]> are there rakudo packages for debian yet?

[21:29] <wayland76> vamped: It's also possible to just download the debian .deb file, and then use "dpkg -i <packagefile>"

[21:30] <moritz_> [particle]: in experimental, I think

[21:32] <vamped> wayland76: there's a rakudo deb? where?

[21:34] <moritz_> http://packages.debian.org/rakudo

[21:34] <moritz_> 2009-09 - ancient already :-)

[21:35] <vamped> :( I think I'll just try copying directory tree (if it's same arch, otherwise ??)

[21:35] <moritz_> otherwise: rsync or copy rakudo and parrot tree over, and build from source

[21:36] <moritz_> instead of using --gen-parrot, you can also

[21:36] <moritz_> cd parrot/; perl Configure --prefix=$path_to_rakudo/parrot_install; make install

[21:36] <moritz_> cd ..

[21:36] <moritz_> perl Configure.pl

[21:36] <moritz_> make install

[21:36] <vamped> vielen Dank, moritz.

[21:37] <moritz_> bitteschön :-)

[21:45] *** Guest12394 left
[21:48] *** Intensity joined
[21:48] *** tarski left
[21:49] *** meppel joined
[21:55] * coke cries, as the machine that he had unicode all setup on is now dead, so he's stuck with ?'s again. =-)

[21:56] <moritz_> coke: http://perlgeek.de/en/article/set-up-a-clean-utf8-environment unfinished and unreviewd, but maybe still of help

[21:56] <diakopter> coke: ?? ? ???? ?????? ?

[21:56] <diakopter> (kidding)  afk&

[21:58] *** mepplock left
[21:58] <coke> moritz_: eh. I'll focus energies on resurrecting the dead machine.

[21:59] <coke> but keep that for future reference, thank you!

[21:59] <coke> but *will keep...

[22:03] <wayland76> I don't know that there is one.  I guess I just assumed there was

[22:03] <wayland76> vamped: ^^

[22:03] *** mepplock joined
[22:04] <wayland76> Coke: Þát´s ñó góød

[22:04] <wayland76> (Sorry :) )

[22:05] <moritz_> the IRC logs show such characters usually correctly, so if he's *really* curious he just needs a working browser

[22:06] <Tene> I guess I've just been spoiled by fedora...

[22:06] <vamped> wayland76: tháńks änÿwæy

[22:07] <wayland76> Well, but if the browser doesn't support unicode either... :)

[22:08] <wayland76> Oh, and s/Þat/Ðat/, sorry :)

[22:09] <vamped> @Tene: I'm too spoiled by Ubuntu to go back to Fedora ;)  -- but that's a topic for another forum :D

[22:09] <wayland76> I'd argue that all the packaging systems are rubbish :)

[22:11] <moritz_> if you don't want downgrades, dpkg/apt is great :-)

[22:11] *** mariano__ left
[22:15] <wayland76> I want a packaging system that works on every OS, so that my perl programs can be packaged once, run anywhere

[22:16] <wayland76> I want a packaging system that can be relied upon by other software; mozilla plugins?  Use a package.  <other software> plugins?  Use a package.  These pieces of software should just be able to call upon a library function to generate themselves a plugin manager

[22:16] <moritz_> if you write one, I'll test it for you :-)

[22:17] <moritz_> aye, plugin systems have been reinvented far too many times

[22:17] <diakopter> the cpan client needs a special mode where it detects being run as root, and detects whether it's set to use the system package systems, and (if possible) builds/installs packages for the distributions it's requested to install/upgrade

[22:17] <diakopter> dpkg/yast/yum/pkgadd

[22:17] <diakopter>  port on macs

[22:17] <moritz_> automatically shelling out to CPANPLUS::Dist::*

[22:18] *** pmurias joined
[22:18] *** SmokeMachine left
[22:18] *** meppel left
[22:18] <wayland76> Oh, yeah, I also want it modular; specifically, I want to be able to replace/modify the algorithm that chooses which packages to install

[22:19] <BinGOs> I use pkgsrc on Darwin, good luck forcing me to use ports

[22:19] <moritz_> but I guess it'll work the other way round in the end

[22:19] <pmurias> diakopter: re looking for a vm what are you planning to implement?

[22:19] <diakopter> BinGOs: (or whatever)

[22:19] <moritz_> large applications will ship as VMs

[22:19] <moritz_> erm, VM images

[22:19] <wayland76> Do I want to delay my software packages a week behind the releases?  Can be done.  Do I want to make one of my repos take priority over another, even if there's a more recent version?  Can be done :)

[22:19] <BinGOs> edge-cases are going to burn.

[22:19] <moritz_> and maintain their own environment

[22:20] <wayland76> Oh, yeah, did I say I also want to support both source and binary distros? :)

[22:20] <moritz_> and world domination, too!

[22:20] <diakopter> wayland76: well yeah :P

[22:20] <wayland76> Well, *of course* world domination :)

[22:21] <diakopter> integration of usually-bundled C lib dependencies would be nice too

[22:21] <diakopter> while we're dreaming...

[22:22] <wayland76> diakopter: I don't understand

[22:22] <wayland76> integration of C lib dependencies with what?

[22:23] <wayland76> with the C lib dependencies of other packages?

[22:23] <moritz_> XML::LibXML depends on libxml-2.0

[22:23] <diakopter> exactly

[22:23] <diakopter> (what moritz_ said)

[22:23] <moritz_> -dev, of course :-)

[22:23] <wayland76> But are you saying you want to bundle libxml-2.0 into the same package?

[22:25] <diakopter> I'm saying it would be nice if a distribution that depended on libxml-2.0 could tell cpan to use the system libxml-2.0 if available, to optionally install a system libxml-2.0 if available, and to optionally fallback to building/installing a bundled libxml-2.0 .tar.gz (optionally with custom patches & install destination)

[22:25] <moritz_> for me declaring the dependency would be enough

[22:26] *** patspam joined
[22:27] <pmurias> diakopter: bunlding a C lib is not very elegant

[22:27] <pmurias> * bundling

[22:27] <diakopter> yeah, but plenty do it

[22:27] <diakopter> (already)

[22:27] <diakopter> I'm trying to provide other options

[22:27] <moritz_> more elegant than dying with an error message that only geeks understand, if at all

[22:29] <pmurias> but installing the appropriate package via the package manager would be great

[22:32] <slavik> will parrot have a configurable library loader?

[22:33] *** vamped left
[22:36] <diakopter> slavik: there's this  http://github.com/quietfanatic/link-c

[22:37] <slavik> diakopter: something like that

[22:37] *** alfieANDfred joined
[22:37] *** alfieANDfred left
[22:37] <slavik> so that it would be possible to define the loading policy and libraries

[22:38] <slavik> basically, parrot should be able to do what the jvm can do, but not use java as the language

[22:39] <wayland76> My idea is that CPAN should simply be another repository that declares dependencies, just like anything else.  

[22:39] <diakopter> moritz_: I agree with what you said about large applications..

[22:42] <pmichaud> Right now I'm leaning towards not merging ng for the release

[22:42] <pmichaud> I'd rather do good work over time than rush to get things in

[22:42] <PerlJam> pmichaud++

[22:43] <moritz_> sounds sensible

[22:43] <diakopter> is LTM still planned for nqp-rx?

[22:43] <pmichaud> planned, yes, but how much we do depends more on what we need for Rakudo *

[22:43] <diakopter> oh

[22:44] <wayland76> pmichaud: Didn't I say something about February for LTM? :)

[22:44] <pmichaud> wayland76: you probably did.  If there's a LTM feature that I find we absolutely have to have for Rakudo*, I'll undoubtedly expedite it

[22:45] <pmichaud> right now my focus is more on getting ng landed and making sure we're covering the items in the ROADMAP

[22:45] *** am0c joined
[22:46] *** pmurias left
[22:47] <wayland76> Yeah, I did.  You were saying that it would be done by the end of Summer 2009.  I said February 2010 :)

[22:47] <pmichaud> well, I have sufficient LTM for us to get protoregexes working

[22:47] <PerlJam> wayland76: So ... which christmas will Perl 6 be "released"?

[22:47] <pmichaud> PerlJam: 2008

[22:48] <wayland76> I can't tell until pmichaud makes a prediction.  Then I'll double that :)

[22:48] * PerlJam tries to tap into wayland76's clear psychic abilities

[22:48] <PerlJam> wayland76: so, christmas 4016?  :)

[22:48] *** KyleHa left
[22:48] <wayland76> sufficient LTM for protoregexes counts as something

[22:48] *** Astoria` left
[22:49] <wayland76> Ok, what I really mean is (wayland76 predicted time) = (pmichaud's predicted time) - (date of prediction)

[22:49] <wayland76> whoops

[22:49] <wayland76> Ok, what I really mean is (wayland76 predicted time) = [ (pmichaud's predicted time) - (date of prediction) ] * 2 + (date of prediction)

[22:50] <wayland76> sufficient LTM for protoregexes counts for a lot, I meant.  pmichaud++

[22:51] <wayland76> pmichaud: Are you meaning that -ng should be merged after the December release?

[22:56] *** dakkar left
[22:59] <pmichaud> wayland76: I'm simply meaning it likely won't happen before

[23:02] <moritz_> in git, how can I find the point where two branches were... well, branched?

[23:02] <moritz_> or the first differing commit, or so

[23:02] <PerlJam> moritz_: git merge-base A B

[23:03] <moritz_> PerlJam: thanks

[23:03] <PerlJam> moritz_: try git merge-base master ng # for instance  

[23:03] <PerlJam> or you can use SHA1s

[23:12] *** iblechbot left
[23:19] <moritz_> I looked in rakudo master if there's anything worth cherry-picking to ng

[23:19] <moritz_> didn't find anything really

[23:20] <moritz_> most commits in master were made to the setting

[23:20] <moritz_> and despite all its smartness, git doesn't seem to like to cherry-pick patches to renamed files

[23:34] *** xenoterracide left
[23:35] *** pmurias joined
[23:40] *** KyleHa joined
[23:47] *** KyleHa left
[23:59] *** LionMade1fLions joined
[23:59] *** Exodist left
[23:59] *** cotto_work left
[23:59] *** elmex left
[23:59] *** Guest221 left
[23:59] *** cotto left
[23:59] *** Wolfman2000 left
[23:59] *** kcwu left
[23:59] *** IRSeekBot left
[23:59] *** revdiablo left
[23:59] *** carlin left
[23:59] *** wolverian left
[23:59] *** BooK left
[23:59] *** rgrau left
[23:59] *** r0bby left
[23:59] *** mathw left
[23:59] *** draxil42 left
[23:59] *** bloonix left
[23:59] *** ruz left
[23:59] *** omega__ left
[23:59] *** LionMadeOfLions left
[23:59] *** sunnavy left
[23:59] *** idemal left
[23:59] *** pmichaud left
[23:59] *** avuserow left
