[00:00] *** vamped left
[00:01] *** ihrd1 left
[00:07] <masak> s1n: you're welcome to the Druid guts. it's under Artistic 2.0, so be my guest. :) let me know if you have any questions.

[00:07] <masak> there's an Observer pattern in there, for example.

[00:12] *** vamped joined
[00:14] <vamped> does anyone know if anyone is working on the documenation, as in $ perldoc -f split

[00:14] <vamped> or when it will be best to start that

[00:21] <masak> vamped: I hope to make some headway with my u4x project early in 2010, which would be what you describe.

[00:22] <vamped> I've read your intro to that project

[00:22] <masak> I just need to find a way to stay motivated for long enough to make something that can be built upon.

[00:22] <masak> it's probably much more than a month of half-hour bursts of activity that's required. so it's bigger than my November blogging sprees.

[00:23] <masak> maybe if I keep at it for a while, it'll attract collaborators. documentation is more collaborator-friendly than a code project.

[00:23] <vamped> I appreciated your Nov blogging sprees -- missed them when they were gone.

[00:24] <masak> thanks.

[00:24] <masak> I've also toyed with the idea of having monthly u4x releases.

[00:24] <vamped> What skill level is required to help with the u4x project?

[00:25] <masak> u4-January, u4-February... u4Xmas 2010.

[00:25] <masak> vamped: you need to be able to write English sentences.

[00:25] <masak> vamped: and then, to some extent, to accept constructive criticism and dictatorial changes in the name of consistency. :)

[00:25] <vamped> incrimental projects seem to help not overwhelm people 

[00:26] <masak> aye.

[00:26] <vamped> well, I can write english (er um, at least write american, lol)

[00:27] <masak> :)

[00:27] <masak> American English will probably be the English chosen. that seems to be the default for software.

[00:27] <vamped> well, let me know if I can help when you get to that point.

[00:28] <masak> I can't post to blogs.perl.org. I'm getting "Your comment submission failed for the following reasons: Text entered was wrong. Try again." what does that mean?

[00:28] <masak> vamped: thank you. knowing this motivates me. I'll stay in touch.

[00:28] <masak> zzz &

[00:39] *** colomon joined
[00:43] *** lestrrat is now known as lest_away

[00:52] *** eternaleye left
[00:55] *** eternaleye joined
[01:01] *** ashizawa joined
[01:15] *** vamped left
[01:20] *** lest_away is now known as lestrrat

[01:31] <wayland76> phenny: I recommend using the Wikipedia standard for English; basically, whichever language the page is already in, stick to that, and whoever starts the page gets to choose

[01:32] <wayland76> phenny: tell masak I recommend using the Wikipedia standard for English; basically, whichever language the page is already in, stick to that, and whoever starts the page gets to choose

[01:32] <phenny> wayland76: I'll pass that on when masak is around.

[01:34] *** jferrero left
[01:34] <colomon> ng: say (1...11).grep({$^a % 3 == 1}).perl

[01:34] <p6eval> ng 78e422: (1, 4, 7, 10)␤

[01:36] *** JimmyZ joined
[01:39] *** agentzh joined
[01:52] <JimmyZ> Merry Christmas, #perl6 

[02:00] *** pointme left
[02:00] *** mubot left
[02:00] *** zaslon left
[02:00] *** pointme joined
[02:00] *** mubot joined
[02:00] *** zaslon joined
[02:01] *** wolf2k_ubuntu joined
[02:04] *** Baggio_ joined
[02:28] <JimmyZ> ng: sub infix:< +-*/ >($a, $b) { (({$a*$b},{$a+$b}, {$a-$b}, {$a/$b}).pick())()}; say 2 +-*/ 5

[02:28] <p6eval> ng 78e422: too few positional arguments: 3 passed, 4 (or more) expected␤current instr.: 'perl6;Code;new' pc 11669 (src/builtins/Positional.pir:125)␤

[02:30] <wolf2k_ubuntu> ng: sub infix:<+-*/>($a, $b) { ($a+$b, $a-$b, $a*$b, $a/$b).pick(); }; say 2+-*/ 5;

[02:30] <p6eval> ng 78e422: too few positional arguments: 3 passed, 4 (or more) expected␤current instr.: 'perl6;Code;new' pc 11669 (src/builtins/Positional.pir:125)␤

[02:31] <wolf2k_ubuntu> ...you'd think it's simple

[02:32] <colomon> don't think you can create new operators in ng yet....

[02:34] <wolf2k_ubuntu> rakudo: sub infix:<+-*/>($a, $b) { ($a+$b, $a-$b, $a*$b, $a/$b).pick(); }; say 2+-*/ 5;

[02:34] <p6eval> rakudo 8dc189: 0.4␤

[02:34] <wolf2k_ubuntu> rakudo: sub infix:<+-*/>($a, $b) { ($a+$b, $a-$b, $a*$b, $a/$b).pick(); }; say 2+-*/ 5;

[02:34] <p6eval> rakudo 8dc189: 7␤

[02:34] <wolf2k_ubuntu> it works in rakudo

[02:37] *** wolf2k_ubuntu left
[02:38] *** Baggio_ left
[02:48] *** jaldhar_ joined
[02:53] *** wolf2k_ubuntu joined
[03:02] *** xomas left
[03:03] *** _jaldhar left
[03:05] *** xomas_ joined
[03:14] <JimmyZ> only master

[03:16] *** cls_bsd joined
[03:29] *** Baggio_ joined
[03:33] *** drbean_ left
[03:37] *** LostProphet joined
[03:38] <LostProphet> gday

[03:39] *** LostProphet left
[03:58] *** Baggio__ joined
[03:58] *** Baggio_ left
[04:09] *** partisan joined
[04:10] *** colomon left
[04:11] *** eternaleye left
[04:12] *** youwin left
[04:12] *** matsuzine joined
[04:17] *** partisan left
[04:17] *** youwin joined
[04:18] *** partisan joined
[04:32] *** lestrrat is now known as lest_away

[04:32] *** JimmyZ left
[04:44] *** lest_away is now known as lestrrat

[04:50] *** AndChat- joined
[04:54] *** ComWT joined
[04:55] *** ComWT left
[05:03] *** Baggio__ left
[05:03] *** Baggio_ joined
[05:05] *** AndChat- left
[05:06] *** AndChat- joined
[05:12] *** Baggio_ left
[05:19] <xinming> Perl 6 is not released this christmas. :-)

[05:21] <carlin> xinming: next Christmas maybe :-)

[05:22] <xinming> carlin: I believe in 2014. <<2012>> told us larry will be on the boat to implement the perl 6, and release perl 6 on year 0001. :-P

[05:26] *** AndChat- left
[05:27] *** [particle]1 left
[05:37] *** JimmyZ joined
[05:37] <JimmyZ> xinming: 2012 kan de tai duo le a?

[05:53] *** matsuzine left
[05:55] <wayland76> Might be generally usable by next Christmas, and with a few good of libraries in 2011.  But CPAN-level of libraries?  Maybe 2015?  :)

[06:02] *** patspam1 left
[06:05] <diakopter> wayland76: well, the spec says Perl 6 will be able to *be* Perl 5, so that includes CPAN

[06:05] <JimmyZ> use v5;

[06:06] <JimmyZ> so write a v5.pm

[06:06] *** Baggio_ joined
[06:08] <diakopter> JimmyZ: :/

[06:11] *** partisan left
[06:12] *** partisan joined
[06:18] *** Baggio_ left
[06:18] *** Baggio_ joined
[06:18] *** agentzh left
[06:18] *** agentzh joined
[06:20] *** partisan left
[06:20] *** Baggio_ left
[06:20] *** Baggio__ joined
[06:20] *** partisan joined
[06:24] *** partisan left
[06:25] *** partisan joined
[06:27] *** Baggio__ left
[06:28] *** partisan left
[06:28] *** partisan joined
[06:28] *** partisan left
[06:35] *** LostProphet joined
[06:36] <LostProphet> say 3

[06:36] <LostProphet> perl6: say 3

[06:36] <LostProphet> lolwut

[06:36] *** LostProphet left
[06:36] *** partisan joined
[06:36] <p6eval> elf 29395, pugs, rakudo 8dc189: 3␤

[06:40] <diakopter> perl6: say 3

[06:40] <p6eval> elf 29395, pugs, rakudo 8dc189: 3␤

[06:41] *** justatheory left
[06:41] *** partisan left
[06:46] *** meppl joined
[06:52] *** nihiliad left
[06:55] *** wolf2k_ubuntu left
[06:56] *** tempire left
[06:56] *** Baggio_ joined
[07:02] *** fridim joined
[07:11] *** Baggio_ left
[07:14] *** Baggio_ joined
[08:03] *** gfx joined
[08:28] *** JimmyZ left
[08:29] *** partisan joined
[08:30] *** JimmyZ joined
[08:30] <JimmyZ> ng: say 9999 ** 8

[08:30] <p6eval> ng 78e422: 9.99200279944007e+31␤

[08:31] <JimmyZ> ng: say (9999 ** 8).PARROT

[08:31] <p6eval> ng 78e422: Num␤

[08:31] <JimmyZ> ng: say (9999 ** 8).perl

[08:31] <p6eval> ng 78e422: Method 'perl' not found for invocant of class 'Num'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[08:31] <JimmyZ> rakudo: say (9999 ** 8).perl

[08:31] <p6eval> rakudo 8dc189: 9.99200279944007e+31␤

[08:32] <JimmyZ> rakudo: say (9999 ** 8).PARROT

[08:32] <p6eval> rakudo 8dc189: Num␤

[08:32] <JimmyZ> rakudo: say (9999 ** 8).Int

[08:32] <p6eval> rakudo 8dc189: -9223372036854775808␤

[08:35] *** partisan left
[08:38] *** partisan joined
[08:42] *** JimmyZ left
[08:43] *** unobe joined
[08:44] *** unobe left
[08:44] *** unobe joined
[08:45] <unobe> rakudo: my $x = [1,2,3]; for 0 .. $x.elems { say $x.[$_] }

[08:45] <p6eval> rakudo 8dc189: 1␤2␤3␤Use of uninitialized value␤␤

[08:45] <unobe> rakudo: my $x = [1,2,3]; for 1 .. $x.elems { say $x.[$_] }

[08:45] <p6eval> rakudo 8dc189: 2␤3␤Use of uninitialized value␤␤

[08:45] <unobe> ng: my $x = [1,2,3]; for 0 .. $x.elems { say $x.[$_] }

[08:45] <p6eval> ng 78e422: sh: ./perl6: No such file or directory␤

[08:45] <unobe> ng: my $x = [1,2,3]; for 0 .. $x.elems { say $x.[$_] }

[08:45] <p6eval> ng 78e422: sh: ./perl6: No such file or directory␤

[08:46] <unobe> rakudo: my $x = [1,2,3]; for 0 .. $x.elems { say $x.[$_] }

[08:46] <p6eval> rakudo 8dc189: 1␤2␤3␤Use of uninitialized value␤␤

[08:47] <unobe> ng: say 3;

[08:47] <p6eval> ng 78e422: sh: ./perl6: No such file or directory␤

[08:47] *** unobe left
[08:53] *** mikehh joined
[08:54] *** gfx left
[09:03] <masak> wayland76: why is the "whoever starts an article chooses the language" preferable to having the same language throughout the project? besides, I thought English Wikipedia was written in US English, as a rule.

[09:03] <phenny> masak: 01:32Z <wayland76> tell masak I recommend using the Wikipedia standard for English; basically, whichever language the page is already in, stick to that, and whoever starts the page gets to choose

[09:12] *** Baggio_ left
[09:13] <carlin> masak: Wikipedia uses US English for US topics, UK English for UK/EU topics and whatever the main-contributor to the article used where that's not applicable

[09:13] *** Baggio_ joined
[09:13] <carlin> masak: http://en.wikipedia.org/wiki/Wikipedia:ENGVAR

[09:18] <wayland76> Yes, that's right; I deliberately over-simplified things.  The basic reason is to be inclusive.  I mean, if people didn't care about these things, they'd all just agree on a standard and use it :)

[09:18] <wayland76> carlin++ for citation :)

[09:19] *** iblechbot joined
[09:24] <wayland76> masak: Just a note that most other English variants (Australian, Canadian, etc) are tend to be a mix of British and American.  For example, my English, as a dual-citizen Australian/American who grew up in Australia with American parents, is much closer to British than American, I think.

[09:24] <wayland76> s/are//

[09:24] <wayland76> Whatever we do, though, I think we should use programmer quotation

[09:25] <masak> oh, agreed.

[09:26] <masak> wayland76: the points about different varieties of English are starting to make sense. it's good to be inclusive and not reject an article just because it's written in some non-US variety of English.

[09:27] <masak> that said, I fear that any such irregularity may give a generally unpolished impression, make comprehensive searches more difficult, etc.

[09:27] <wayland76> (For those who aren't familiar with it, there was an article that I'm unable to locate at the moment that talked about how programmers use quotation marks differently than others; normally there are rules about which order quotation marks go in, but programmers generally put the puncuation inside the quotes if it was in the original, and outside if it wasn't)

[09:28] <masak> wayland76: there's mention of it in The Hacker's Dictionary, IIRC.

[09:28] <masak> http://www.outpost9.com/reference/jargon/jargon_7.html#SEC14

[09:29] <wayland76> Hmm.  Well, you have some good points.  I prefer the Wikipedia answer myself, but since my role in things is generally small-problem-fixer rather than creator, it may not be relevant.  

[09:29] <wayland76> masak: Yeah, that's the one.  masak++ :)

[09:30] <wayland76> Oh, wait, maybe not

[09:30] <wayland76> No, not that one

[09:31] <wayland76> The one I'm thinking of is mostly really about whether the ? goes inside the "" or not.  

[09:33] *** ejs joined
[09:50] <masak> hm, the one I was thinking of as well. I must've found the wrong one.

[09:51] *** ejs left
[09:51] <masak> here it is: http://www.outpost9.com/reference/jargon/jargon_6.html#SEC13

[09:51] *** ejs joined
[09:58] <moritz_> good morning

[10:00] <masak> moritz_: good morning! frohe Weihnachten!

[10:01] <moritz_> masak: ebenso!

[10:01] * masak guesses that means "likewise", and not "even so" :)

[10:01] *** Su-Shee joined
[10:01] <moritz_> masak guesses correctly

[10:02] <masak> Su-Shee: frohe Weinachten!

[10:02] <masak> if I keep up this, I'll be German myself before I know it.

[10:02] <masak> s/up this/this up/

[10:02] <Su-Shee> good morning. ;)

[10:03] <Su-Shee> masak: with the release of rakudo star, you'll have to know "froehliche ostern!" ;)

[10:03] <masak> Merry Ostrich!

[10:03] <moritz_> masak: you'd have to learn a lot about bureaucracy first :-)

[10:03] <masak> moritz_: I'd say being a Swede gives me at least partial knowledge :)

[10:04] <masak> happy news from local, disconnected GGE-land: the TreeSpider refactor is complete and merged into master. I'm now making progress by leaps and bounds again.

[10:04] <masak> it delighted me that the infix:<&> implementation, which seemed insurmountable before, now only was a couple of lines of class definition.

[10:05] <masak> (that one is tricky because it has to match its RHS, then reset the matching position, and then match its LHS)

[10:06] <masak> er, tr/RL/LR/

[10:19] *** ejs left
[10:22] <moritz_> and backtrack if necessary

[10:22] <moritz_> and participate in LTM :-)

[10:29] *** _jaldhar_ joined
[10:29] *** agentzh left
[10:35] <masak> moritz_: since GGE doesn't do LTM, I don't have to, either. but infix:<&> doesn't do its own backtracking -- the tree spider handles that. only infix:<|> and the quantifiers need to participate in the backtracking so far.

[10:35] <masak> s/GGE/PGE/

[10:37] <moritz_> masak: so in GGE, does 'aab' ~~ / ^ [ .* & a* ] $ / match?

[10:37] <masak> moritz_: hm. :)

[10:38] <moritz_> is "hm. :)" a "no"?

[10:38] <moritz_> :-)

[10:38] <masak> it would, if those two happened to be of the same length...

[10:38] <moritz_> oh wait

[10:38] <moritz_> forget the trailing $

[10:38] <masak> do you have an example target string as well?

[10:39] <masak> does it contain anything but 'a's? :)

[10:39] <moritz_> 'aab' ~~ / ^ [ .* & a* ] /

[10:39] <masak> ah.

[10:39] <masak> no, that wouldn't match at present.

[10:39] <masak> I think I've implemented that wrongly.

[10:40] <masak> it needs to backtrack on both its operands, doesn't it?

[10:40] <moritz_> yes

[10:40] <masak> gotcha. then I know what to do.

[10:40] <masak> strangely, all the tests in rx_metachar pass. maybe there are backtracking tests somewhere else.

[10:41] <moritz_> I wouldn't bet on it

[10:41] <masak> :)

[10:41] *** ejs joined
[10:41] <masak> this is why a port is good. it improves the test suite. :)

[10:41] <masak> mind you, the test suite is generally very good. that's one thing that makes the porting work enjoyable.

[10:41] <masak> pmichaud++

[10:41] <moritz_> I thought that PGE didn't do & at all

[10:42] *** jaldhar_ left
[10:42] <masak> well, most of the tests aren't marked TODO, so I think it does.

[10:42] <moritz_> rakudo: say 'a' ~~ / a & . /

[10:42] <masak> there's one interesting test, looking like this: /a&|b/

[10:42] <p6eval> rakudo 8dc189: a␤

[10:42] <masak> it's supposed to yield a parse error. but it doesn't.

[10:43] <moritz_> std: / a &| b /

[10:43] <p6eval> std 29395: [31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/FOZtZOZLGf line 1:␤------> [32m/ a &[33m⏏[31m| b /[0m␤    expecting any of:␤     regex_infix␤      termish␤        ws␤FAILED 00:01 106m␤

[10:43] <masak> that's because PGE has a prefix:<|> to allow for /|a|b|c/.

[10:44] <masak> so /|b/ is legal in PGE, which makes /a&|b/ legal.

[10:44] *** FalseVinylShrub joined
[10:44] <masak> there's a TODO on that one; so it's an unsolved riddle.

[10:44] <masak> I'm pondering how best to handle it.

[10:44] <moritz_> look at how STD.pm does it?

[10:45] <masak> good idea.

[10:45] <masak> I'll do that.

[10:46] * masak downloads Moose to read its test suite over the holidays

[10:48] *** ejs left
[10:48] *** Chillance joined
[10:51] *** ejs joined
[11:09] *** |Jedai| left
[11:12] *** |Jedai| joined
[11:18] *** FalseVinylShrub left
[11:18] *** FalseVinylShrub joined
[11:21] *** mberends joined
[11:22] <mberends> Happy Christmas, #perl6

[11:24] *** FalseVinylShrub left
[11:25] * mberends is getting into mildew installation as promised. The docs are going to be called README initially, despite recent comments not being much in favour. There is no better alternative yet.

[11:32] *** kaare joined
[11:32] *** kaare is now known as Guest33913

[11:34] *** lestrrat is now known as lest_away

[11:34] <moritz_> hugme: add unobe to perl6-examples

[11:34] * hugme hugs unobe. Welcome to perl6-examples!

[11:37] <mberends> perl6: "Bah Humbug!".subst(/Hum/,"De").say

[11:37] <p6eval> rakudo 8dc189: Bah Debug!␤

[11:37] <p6eval> ..pugs: Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.14/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' trapped by operation mas…

[11:37] <p6eval> ..elf 29395: Can't locate object method "subst" via package "Bah Humbug!" (perhaps you forgot to load "Bah Humbug!"?) at (eval 125) line 3.␤ at ./elf_h line 5881␤

[11:37] <mberends> Rakudo FTW!

[11:38] *** FalseVinylShrub joined
[11:39] <masak> :)

[11:39] <masak> mberends: merry Winter Solstice.

[11:40] <mberends> thanks masak, insgelijks

[11:40] <masak> Gelukkig Kerstfeest!

[11:41] <masak> 2009 has been a wonderful year for Perl 6. 2010 promises to be even wonderfuller.

[11:42] <mberends> :) God jul!

[11:42] <IllvilJa> God Jul you too mberends!

[11:42] <IllvilJa> And everyone else!

[11:43] <carlin> Happy Boxing day everyone :-)

[11:54] *** kidd joined
[11:57] *** Baggio_ left
[11:59] *** Baggio_ joined
[12:05] <mberends> masak: happy to see your happy news about TreeSpider leaping, bounding and maybe even backtracking :)

[12:07] *** iblechbot left
[12:09] <mberends> my spider doesn't even crawl properly yet, but there is hope

[12:16] *** arthur-_ joined
[12:16] *** arthur-_ left
[12:18] *** arthur-_ joined
[12:18] *** arthur-_ left
[12:21] <mberends> afk # a big meal

[12:27] *** trondham joined
[12:27] *** partisan left
[12:28] *** Beetny left
[12:28] *** arthur-_ joined
[12:32] *** Baggio_ left
[12:35] *** Baggio_ joined
[12:39] *** arthur-_ left
[12:49] *** arthur-_ joined
[13:07] *** PacoLinux left
[13:08] *** fridim is now known as Guest37728

[13:11] *** arthur-_ left
[13:12] *** arthur-_ joined
[13:16] *** arthur-_ left
[13:20] *** arthur-_ joined
[13:30] *** FalseVinylShrub left
[13:33] *** pmurias joined
[13:36] *** arthur-_ left
[13:42] *** arthur-_ joined
[13:45] *** araujo left
[13:47] *** FalseVinylShrub joined
[13:53] *** orafu left
[13:53] *** orafu joined
[13:56] *** Baggio_ left
[13:57] *** Baggio_ joined
[14:02] *** IllvilJa left
[14:04] *** partisan joined
[14:07] *** PacoLinux joined
[14:10] *** FalseVinylShrub left
[14:13] *** partisan left
[14:14] *** PacoLinux left
[14:14] *** IllvilJa joined
[14:15] *** arthur-_ left
[14:15] *** partisan joined
[14:16] *** arthur-_ joined
[14:23] <masak> mberends: oh, it does backtracking alright. but to get moritz_++'s use case to work, I need to cheat a bit less than I've done so far. a regex node needs to be able to host multiple savepoints, as will the infix:<&> in the regex /a* & .*/ -- one from each quantifier.

[14:24] *** hicx174 is now known as `hicx174`

[14:26] *** PacoLinux joined
[14:27] *** FalseVinylShrub joined
[14:30] *** partisan left
[14:30] *** `hicx174` is now known as hicx174````

[14:32] *** hicx174```` is now known as ^^^

[14:35] *** ^^^ is now known as ^^

[14:36] *** ^^ is now known as hicx174

[14:38] *** arthur-_ left
[14:39] *** arthur-_ joined
[14:41] *** iblechbot joined
[14:42] *** patspam joined
[14:47] *** JimmyZ joined
[14:49] *** wolf2k_ubuntu joined
[14:53] *** ejs1 joined
[14:53] *** JimmyZ left
[14:55] *** arthur-_ left
[14:57] *** partisan joined
[15:00] *** wolf2k_ubuntu left
[15:02] *** Psyche^ joined
[15:03] *** colomon joined
[15:03] *** Patterner left
[15:03] *** Psyche^ is now known as Patterner

[15:04] *** ejs1 left
[15:05] *** ejs left
[15:08] *** wolf2k_ubuntu joined
[15:16] *** soupdragon joined
[15:19] *** arthur-_ joined
[15:20] *** arthur-_ left
[15:21] *** wolf2k_ubuntu left
[15:21] *** wolf2k_ubuntu joined
[15:23] *** JimmyZ joined
[15:25] *** cls_bsd left
[15:25] * masak .oO( the holidays reduce even #perl6 to the crackling static of joins and quits )

[15:26] <masak> hi, I'm new to Perl 6. could someone explain to me how LTM works, and why I should care?

[15:26] *** frettled sets mode: +o masak

[15:26] <frettled> But it's never too quiet for a christmas kanelbulle!

[15:27] <masak> :)

[15:27] <masak> you and your kanelbulle :)

[15:28] <frettled> ;)

[15:29] <frettled> I see that the calendar was brought to a nice conclusion by pmichaud++.

[15:29] *** FalseVinylShrub left
[15:29] <masak> it was indeed.

[15:29] <wolf2k_ubuntu> masak: Sorry for not messing with the pastebin much. Still focused on getting my own pages up before the end of the year...or at least, something similar to the old version.

[15:30] <wolf2k_ubuntu> Getting support in these rooms...is not as easy as it is in this paticular room.

[15:30] <masak> wolf2k_ubuntu: no problemo. I've been similarly distracted from Web.pm lately, too.

[15:30] <wolf2k_ubuntu> I do have good news though

[15:30] <wolf2k_ubuntu> I got all As in my classes this semester.

[15:30] <masak> \o/

[15:31] <frettled> congrats!

[15:31] <wolf2k_ubuntu> I'm one step closer to having a new career opportunity

[15:31] <masak> wolf2k_ubuntu: that sounds like great news!

[15:31] <frettled> you may now upgrade your nick to wolf2.1k!

[15:31] <wolf2k_ubuntu> frettled++: hah. the 2000 is stuck with me.

[15:32] <masak> wolf_gogool

[15:32] <wolf2k_ubuntu> That's just egotistical

[15:32] <masak> especially if you write out all the zeroes.

[15:33] <JimmyZ> Merry Christmas!

[15:35] <JimmyZ> to Maigao

[15:36] <frettled> God jul!  :D

[15:38] <JimmyZ> rakudo: sub foo($a) { take $a; } foo('a');

[15:38] <p6eval> rakudo 8dc189: Confused at line 2, near "foo('a');"␤in Main (file <unknown>, line <unknown>)␤

[15:38] <JimmyZ> rakudo: sub foo($a) { take $a; }; foo('a');

[15:38] <p6eval> rakudo 8dc189: take without gather␤

[15:39] <JimmyZ> rakudo: sub foo($a) { take $a; }; gather foo('a');

[15:39] <p6eval> rakudo 8dc189:  ( no output )

[15:52] *** nihiliad joined
[16:03] *** avar left
[16:03] *** avar joined
[16:05] *** aindilis left
[16:15] <JimmyZ> rakudo: sub foo(*@a) { take @a; }; say [~] gather foo('foo','bar');

[16:15] <p6eval> rakudo 8dc189: foobar␤

[16:16] <JimmyZ> rakudo: sub foo(*@a) { take @a; }; say [~] gather foo('foo','bar','2000');

[16:16] <p6eval> rakudo 8dc189: foobar2000␤

[16:16] <JimmyZ> rakudo: sub foo(*@a) { take @a; }; say gather foo('foo','bar','2000');

[16:16] <p6eval> rakudo 8dc189: foobar2000␤

[16:16] <JimmyZ> rakudo: sub foo(*@a) { take @a; }; say (gather foo('foo','bar','2000')).perl;

[16:16] <p6eval> rakudo 8dc189: ["foo", "bar", "2000"]␤

[16:16] <JimmyZ> rakudo: sub foo(*@a) { take @a; }; say ([~] gather foo('foo','bar','2000')).perl;

[16:16] <p6eval> rakudo 8dc189: "foobar2000"␤

[16:17] *** cls_bsd joined
[16:17] *** JimmyZ left
[16:18] *** Baggio_ left
[16:26] <masak> JimmyZ: merry Christmas!

[16:26] <dalek> rakudo/ng: c9b8720 | (David Romano)++ | src/core/List.pm:

[16:26] <dalek> rakudo/ng: * Allow for .perl to output nested arrays and empty arrays

[16:26] <dalek> rakudo/ng: 	modified:   src/core/List.pm

[16:26] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/c9b87200f72e28ace471db4ecd235bb385e55059

[16:27] <colomon> I think we actually need a better version of that patch.

[16:27] <colomon> But I'm not even sure how to test it... I've not messed around with Lists of Arrays yet.  :)

[16:31] *** nihiliad left
[16:31] <colomon> 3qa1\\\\

[16:31] <colomon> "+

[16:32] <colomon> That's Merry Christmas! from my boy.

[16:32] *** SmokeMachine left
[16:33] <mberends> parses perfectly here :)

[16:35] <colomon> ng: say (1, 2, 3).WHAT

[16:35] <p6eval> ng 78e422: List()␤

[16:36] <colomon> ng: say (1, 2, 3).Array

[16:36] <p6eval> ng 78e422: Method 'Array' not found for invocant of class 'List'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[16:36] <colomon> ng: say [1, 2, 3].WHAT

[16:36] <p6eval> ng 78e422: Array()␤

[16:36] <colomon> ooooo

[16:52] *** payload joined
[16:53] *** Baggio_ joined
[16:57] *** ejs joined
[17:03] <mberends> pmurias: is successfully running scons in pugs/v6/smop a prerequisite for setting up mildew? That is giving an error in build/p5/src/p5interpreter.c:186: expected expression before ‘;’ token, and indeed line 186 contains "  mold_run_coro = ;" but its source is generated by tools/ri.

[17:11] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Merry Christmas!': http://perl6advent.wordpress.com/2009/12/25/merry-christmas/

[17:12] <dalek> rakudo/ng: 2cab482 | (Solomon Foster)++ | src/core/ (2 files):

[17:12] <dalek> rakudo/ng: Move unobe++'s Array ".perl" code to an actual Array.perl function.

[17:12] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/2cab482e5c497b8bb2647bbeccf3ce55ae7acf76

[17:20] *** FullMetalHarlot joined
[17:21] <mberends> where's KatrinaTheLamia today?

[17:25] *** payload left
[17:26] *** payload joined
[17:26] *** araujo joined
[17:29] *** FullMetalHarlot left
[17:29] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 24: The Perl 6 standard grammar': http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[17:31] <mberends> zaslon: learn about FIFO versus LIFO please

[17:31] <zaslon> Sorry, I don't understand that command

[17:32] <pmurias> mberends: you can use the mildew js backend

[17:33] <pmurias> mberends: but it seems a missing m0ld error

[17:34] <mberends> pmurias: thanks :) indeed, something about m0ld is probably an empty string

[17:34] <pmurias> do you have v6/smop/m0ld_exe

[17:34] <pmurias> ?

[17:34] *** payload left
[17:35] <mberends> no, but there is a m0ld directory

[17:35] <pmurias> make in v6/smop should create m0ld_exe

[17:36] *** am0c left
[17:36] <mberends> ok, must get ghc going first

[17:38] *** payload1 joined
[17:51] *** soupdragon left
[17:55] *** nihiliad joined
[17:59] *** payload joined
[17:59] *** payload1 left
[17:59] <mberends> pmurias: m0ld_exe built, 1754456 bytes on amd64 debian stable

[18:00] *** ejs left
[18:02] <pmurias> mberends: so make test works in smop?

[18:03] <mberends> running...

[18:04] <mberends> <green>All tests successful</green>

[18:04] <mberends> but 'make' in v6/mildew/ segfaulted :(

[18:06] <mberends> make clean; make CORE segfaults too

[18:07] <pmurias> segfaulted? :( nopaste the output please

[18:08] <mberends> only 2 lines: perl mildew -Cso --yeast --empty-setting -o CORE/int.mildew.so CORE/int.pm

[18:08] <mberends> make: *** [CORE/int.mildew.so] Segmentation fault

[18:09] <mberends> it could be that there are partial builds hanging over from previous error. I think a fresh checkout of the v6 subtree might help

[18:11] <mberends> there were 2 parsec library options, I installed libghc6-parsec3-dev

[18:12] <pmurias> haskell isn't supposed to segfault

[18:13] <pmurias> perl mildew -Cso --yeast --empty-setting -o CORE/int.mildew.so  CORE/int.pm segfaults?

[18:14] <mberends> it may not have been haskell. svn up'ing v6 atm...

[18:15] * pmurias uses git clean to remove trash from previous builds

[18:17] <mberends> smop 'make test' passed again. shall I go straight for the perl line in mildew/ ?

[18:19] <mberends> well, that segfaulted :( no diagnotic messages at all

[18:19] <pmurias> you could try using gdb or valgrind to get an error messag

[18:19] <pmurias> e

[18:19] <mberends> ok

[18:20] <pmurias> or you could just try using the js backend first

[18:22] <mberends> valgrind = Conditional jump or move depends on uninitialised value(s) (in /usr/lib/libperl.so.5.10.0) three times

[18:23] <masak> mberends: re FIFO and LIFO. some day I'm going to blog about the amazing LILO data structure.

[18:23] <mberends> lazy form of FIFO?

[18:24] *** partisan left
[18:24] <mberends> another segfault from perl mildew -Bjs -Cso --yeast --empty-setting -o CORE/int.mildew.so  CORE/int.pm

[18:26] <masak> mberends: no, it works exactly the same as a FIFO queue. it's more of a 'glass half empty' thing.

[18:26] *** Baggio_ left
[18:27] <mberends> masak: makes sense, just wanted the L to mean something ;)

[18:28] <mberends> btw, the opposite of LTM should be STM, but it isn't :P

[18:31] <pmurias> mberends: 64 bitness might be causing the problem

[18:33] *** payload left
[18:33] <mberends> pmurias: ok, I can try a 32 bit Ubuntu 9.10 instead in a few mins

[18:33] *** payload joined
[18:42] <pmurias> mberends: what's the -Bjs doing in that line?

[18:43] <pmurias> mberends: you could try if perl mildew -Cdesugar CORE/int.pm, that invocation should only involve perl stuff

[18:43] <mberends> pmurias: it was to follow your suggestion of trying the js backend

[18:43] <pmurias> s/,/segfaults,/

[18:45] <pmurias> -CX compiles using X -BX executes using X

[18:45] <mberends> pmurias: that also segfaults, building 32 bit smop on another machine

[18:45] <pmurias> mberends: it's not a smop issue

[18:45] <mberends> ok

[18:46] <pmurias> perl mildew -Cdesugar doesn't use smop or m0ld

[18:46] *** youwin left
[18:47] *** mberends_ joined
[18:48] *** mberends_ is now known as mberends32

[18:51] <mberends32> perl mildew -Cdesugar CORE/int.pm # works

[18:51] *** mberends is now known as mberends64

[18:52] <mberends64> there may be a deeper problem on the amd64 installation

[18:54] <mberends64> nothing else segfaults on it though

[18:56] <pmurias> perl mildw -Cdesugar works only on 32bit?

[18:57] <pmurias> perl mildew -Cdesugar

[18:57] <mberends32> yes, but 2 computers is not much proof of a problem

[18:58] <pmurias> and make test segfaults on 32bit?

[18:58] <mberends32> no, I have skipped the smop make until now, so we don't know

[18:59] <pmurias> does STD work on the 62bit machine

[19:00] <pmurias> ?

[19:00] <mberends32> I'll build and make smop, but that requires ghc6 and parsec download, will take a few minutes

[19:06] <mberends32> STD (viv) has worked until today on both systems (under vill)

[19:06] *** payload left
[19:09] *** SmokeMachine joined
[19:13] <mberends32> ./tryfile STD.pm and smop 'make test' pass in 32 and 64 bits

[19:18] <mberends32> pmurias: success with perl mildew -Cso --yeast --empty-setting -o CORE/int.mildew.so CORE/int.pm

[19:20] <pmurias> on 32bit?

[19:20] <mberends32> yes

[19:20] <mberends32> therefore you could well be right about a 64 bit problem

[19:21] <mberends64> what 64 bit problem?

[19:22] <mberends32> mberends64: stay out of this!

[19:24] <mberends64> mberends32: are you disrespectin' me?

[19:28] <mberends32> mberends64: no, just mentioning that there are no segfaults here. can you say the same?

[19:29] *** SmokeMachine left
[19:31] <mberends64> mberends32: look, occasional segfaulting is understandable when developing advanced software. are you saying you *never* segfault, because if you do you are either lying through you teeth of you never really push the boundaries of development.

[19:32] <mberends64> *or

[19:33] <mberends64> *your teeth, ok

[19:34] <masak> I go away for a few moments, and when I come back, mberends has cloned himself...

[19:35] <Su-Shee> and doubled his capacity. ;)

[19:37] <masak> I'd need a masak64 sometimes, for sure.

[19:37] <masak> with or without the kanelbulle.

[19:46] <masak> rakudo: say "Zreel Puevfgznf!".trans("A..Za..z" => "N..ZA..Mn..za..m")

[19:46] <p6eval> rakudo 8dc189: Merry Christmas!␤

[19:52] *** colomon left
[19:59] <pmurias> mberends32: so make test in mildew passes on 32bit?

[20:13] <mberends32> testing...

[20:16] <mberends32> failed :( nopasting..

[20:16] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Merry Christmas!': http://perl6advent.wordpress.com/2009/12/25/merry-christmas/

[20:17] <mberends32> now read the LILO entry ;)

[20:18] <pmurias> LILO?

[20:18] <mberends32> pmurias: http://irclog.perlgeek.de/perl6/2009-12-25#i_1869206 ;)

[20:18] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 24: The Perl 6 standard grammar': http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[20:21] <pmurias> mberends32: did you nopaste?

[20:21] <lisppaste3> mberends32 pasted "mildew 32 bit 'make test' errors" at http://paste.lisp.org/display/92640

[20:23] <mberends32> svn r29395 and STD freshly made

[20:23] <pmurias> mberends32: seems there is something wrong with my STD

[20:24] <pmurias> it handles self differently than it should

[20:24] <mberends32> pmurias: the central STD is probably not important because you take a snapshot

[20:24] <pmurias> no i don't

[20:25] <mberends32> oh, ok

[20:25] <pmurias> it's an empty leftover dir

[20:26] <mberends32> ok, I'll delete the leftover

[20:27] <mberends32> pmurias: just to be certain, ok to delete mildew/perl6-snapshot/* ?

[20:27] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Merry Christmas!': http://perl6advent.wordpress.com/2009/12/25/merry-christmas/

[20:28] <pmurias> mberends32: yes

[20:30] <pugs_svn> r29396 | mberends++ | [mildew] remove the empty leftover perl6-snapshot directory 

[20:30] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 24: The Perl 6 standard grammar': http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[20:30] <pmurias> mberends32: it's better to ask for forgivness than permission, particularly with version controled things ;)

[20:31] <mberends32> :) I'm slowly getting used to that

[20:34] *** wolf2k_ubuntu left
[20:37] <pmurias> mberends32: what's your perl version?

[20:38] <mberends32> 5.10.0 from Ubuntu 9.10 fully updated

[20:39] <pmurias> STD seems to match self differently (incorrectly) here

[20:41] <mberends32> that is deeply worrying, you would not expect a discrepancy there

[20:42] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Merry Christmas!': http://perl6advent.wordpress.com/2009/12/25/merry-christmas/

[20:42] <pmurias> mberends32: i'll try with a perl5.11 build from source

[20:42] *** colomon joined
[20:45] <pmurias> got to build it first...

[20:45] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 24: The Perl 6 standard grammar': http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[20:45] <diakopter> zaslon: orly

[20:45] <zaslon> Sorry, I don't understand that command

[20:49] *** colomon left
[20:49] <arnsholt> Methinks there are a couple of wrinkles in zaslon that could be ironed out =)

[21:05] *** constant left
[21:09] *** justatheory joined
[21:15] *** justatheory left
[21:17] *** xinming_ joined
[21:18] <masak> arnsholt: youthinks correctly. maybe I'll have a look at it -- I'm getting curious.

[21:23] *** xinming left
[21:31] *** patspam left
[21:32] *** colomon joined
[21:32] *** colomon left
[21:34] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Merry Christmas!': http://perl6advent.wordpress.com/2009/12/25/merry-christmas/

[21:35] *** colomon joined
[21:40] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 24: The Perl 6 standard grammar': http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[21:40] <Wolfman2000> where's the mute button for zaslon?

[21:42] <Gothmog_> /silence zaslon would probably help

[21:44] <Wolfman2000> I don't like to /silence or /ignore anyone/thing in general

[21:46] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Merry Christmas!': http://perl6advent.wordpress.com/2009/12/25/merry-christmas/

[21:48] *** nihiliad left
[21:48] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 24: The Perl 6 standard grammar': http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[21:48] *** nihiliad joined
[21:49] *** nihiliad left
[21:54] <colomon> someone /kick zaslon already....

[21:54] <masak> phenny: tell carlin re http://github.com/carlins/rssbot/blob/master/lib/Zaslon.pm#L45 -- there's a string form of &slurp, so you can cut the number of statements to a third there.

[21:54] <phenny> masak: I'll pass that on when carlin is around.

[21:54] *** zaslon was kicked by masak (masak))
[21:55] <masak> phenny: tell carlin that I was looking for the reason zaslon keeps posting duplicates, but it strikes me that maybe you already know.

[21:55] <phenny> masak: I'll pass that on when carlin is around.

[22:08] *** vamped joined
[22:08] <vamped> Merry Christmas Perl 6

[22:08] *** mberends32 left
[22:08] *** mberends64 left
[22:09] <vamped> *echo* ?

[22:09] <diakopter> vamped: Perl 6 thanks you

[22:10] <vamped> thanks diakopter

[22:10] <vamped> where do I submit suspected spec bugs? also [email@hidden.address] ?

[22:10] <diakopter> you can say them here

[22:10] <diakopter> TimToady will read them in the irclogs

[22:10] <diakopter> and others will comment here

[22:11] <vamped> ok. and how do I determine what line number I'm referring to if I'm viewing html spec?

[22:11] <diakopter> ah

[22:11] <vamped> anyway: S04 says "$func = sub ($a, $b) { .print if $a eq $b };"

[22:12] <vamped> i'm confused. ".print" refers to $_, but there is no $_ is this context ?

[22:12] <diakopter> the html source has anchor tags that indicate the original line numbers

[22:13] <vamped> line_102

[22:13] <diakopter> I think $_ gets aliased to the first slot

[22:13] *** youwin joined
[22:14] <vamped> rakudo: my $func = { .print if $^a eq $^b }; $func(2,3);

[22:14] <p6eval> rakudo 8dc189:  ( no output )

[22:14] <vamped> rakudo: my $func = { .print if $^a eq $^b }; $func(4,4);

[22:14] <p6eval> rakudo 8dc189: Use of uninitialized value␤

[22:15] <arnsholt> diakopter/vamped: Wouldn't $_ create a closure over the enclosing scope's $_?

[22:16] <vamped> arnsholt. yes, if I understand you correctly. I'll try this:

[22:17] <vamped> rakudo: $_ = 6; my $func = { .print if $^a eq $^b }; $func(4,4);

[22:17] <p6eval> rakudo 8dc189: 6

[22:17] <vamped> like that?

[22:17] *** kidd is now known as rgrau

[22:19] <diakopter> arnsholt: I mean, in Perl 6, I think $_ gets aliased to the first slot... that doesn't necessarily mean rakudo has implemented that yet

[22:20] <vamped> afk - baking bread can't wait

[22:21] <diakopter> arnsholt: oops, I meant, to vamped

[22:21] <diakopter> however, sub { } is different from { }, I'm fairly certain.

[22:23] *** REPLeffect_ left
[22:25] *** REPLeffect_ joined
[22:28] *** ashizawa left
[22:28] *** Chillance left
[22:35] <vamped> rakudo: $_ = 5; my $func = sub { .print if $^a eq $^b }; $func(3,3)

[22:35] <p6eval> rakudo 8dc189: Use of uninitialized value␤

[22:36] *** Guest33913 left
[22:37] <vamped> so if diakopter is correct, the 3 examples at S04#line_102 do what is intended. Otherwise they do not do what is intended (printing one of the values passed to the block)

[22:40] *** colomon left
[22:40] <vamped> looking at the tests following, i believe diakopter is correct! (although the tests are a bit over my head right now)

[22:40] <vamped> it states: # { } has implicit signature ($_ is rw = $OUTER::_)

[22:42] <vamped> ok. well I have referred it to people who understand better than I. I am happy to leave it at that.

[22:45] *** ashizawa joined
[22:52] *** soupdragon joined
[22:58] *** colomon joined
[22:58] *** xinming joined
[23:02] <diakopter> vamped: do you have an svn commit bit? you can correct typos in the spec and add/edit tests if you did..

[23:03] <vamped> I do not

[23:03] <diakopter> privmsg me your email address and desired username if you want one

[23:04] <diakopter> (and add/edit Perl 6 implementations) :)

[23:05] <diakopter> customary first ci is to append yourself to AUTHORS

[23:05] *** xinming_ left
[23:07] <vamped> ci ?

[23:09] *** meteorjay joined
[23:09] <Khisanth> hmm it hasn't moved over to git yet?

[23:10] *** meppl left
[23:12] <vamped> diakopter: did you get my email?

[23:12] *** lest_away is now known as lestrrat

[23:13] <diakopter> vamped: I got your privmsg

[23:13] <diakopter> and replied

[23:13] <diakopter> and had commitbit invite you

[23:14] <diakopter> Khisanth: "it" meaning the Perl 6 Synopses and spec tests and Larry's grammar specification/implementation?

[23:14] <diakopter> no

[23:14] <diakopter> Khisanth: I don't know of any plans to move those to git

[23:14] <diakopter> vamped: ci=checkin

[23:22] <carlin> masak: It's Wordpress, refresh the feed and it shows the post from the 25th as the latest, refresh a while later and the 25th is gone and it shows the 24th as the latest, refresh a while later and it's showing the 25th again... my guess is some weird caching. Zaslon compares the lastest post it seen with the latest post in the feed and if they differ it thinks there's an update.

[23:22] <phenny> carlin: 21:54Z <masak> tell carlin re http://github.com/carlins/rssbot/blob/master/lib/Zaslon.pm#L45 -- there's a string form of &slurp, so you can cut the number of statements to a third there.

[23:22] <phenny> carlin: 21:55Z <masak> tell carlin that I was looking for the reason zaslon keeps posting duplicates, but it strikes me that maybe you already know.

[23:25] <diakopter> carlin: maybe have it cache the urls of posts it's already reported

[23:25] *** trondham left
[23:27] *** ejs joined
[23:29] *** iblechbot left
[23:30] *** Guest37728 left
[23:46] *** vamped left
[23:49] *** colomon left
[23:57] *** trondham joined
