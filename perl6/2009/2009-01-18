[00:00] *** Whiteknight left
[00:01] *** Eevee left
[00:07] *** kst` joined
[00:07] *** kst left
[00:10] <mberends> @tell masak re: ./perl6 versus ../../parrot perl6.pbc, RT#62376 illustrates a similar problem and can be demonstrated with r35708 on Debian x86-32. http://rt.perl.org/rt3/Public/Bug/Display.html?id=62376

[00:10] <lambdabot> Consider it noted.

[00:10] *** pcbuetow joined
[00:11] *** mberends left
[00:13] *** iblechbot left
[00:14] *** [particle]1 left
[00:14] *** Whiteknight joined
[00:19] *** vixey left
[00:27] *** spx2 left
[00:27] *** pbuetow left
[00:27] *** spx2 joined
[00:38] *** kisu joined
[00:40] *** jhorwitz left
[00:45] *** _jedai_ left
[00:46] *** |jedai| joined
[00:52] *** ayrnieu_ joined
[01:03] *** ayrnieu left
[01:20] *** ekole left
[01:26] *** DemoFreak left
[01:41] *** meteorjay joined
[01:44] *** kisu_ joined
[01:44] <diakopter> ruoso: ri invokes m0ld with the following command line parameter: ",suffix='.c',src_suffix='.ri'" (I added double quotes b/c they're immaterial on windows)

[01:54] *** dduncan joined
[01:57] *** nacho_ left
[01:58] *** kisu left
[02:17] *** [particle]1 joined
[02:17] *** Limbic_Region joined
[02:24] *** Limbic_Region left
[02:25] *** ayrnieu_ is now known as ayrnieu

[02:26] *** [particle] left
[02:26] *** On left
[02:41] *** Eevee_ is now known as Eevee

[02:46] *** dduncan left
[02:48] *** dduncan joined
[02:48] *** brunoV left
[02:49] *** dduncan left
[02:52] *** |jedai| left
[02:53] *** |jedai| joined
[03:06] *** HyP joined
[03:09] <HyP> hy

[03:10] <HyP> i search a help for code in Perl

[03:11] <araujo> ?

[03:11] <HyP> Problem is after log and connect , i've not view of terminal host

[03:12] <HyP> sorry i'm frenche and my english is incorrect

[03:13] <araujo> mm... 

[03:13] <araujo> this channel is about perl 6 

[03:13] *** mberends joined
[03:13] <araujo> you probably want help for perl 5?

[03:17] *** aindilis joined
[03:23] *** kst` left
[03:23] *** kst` joined
[03:37] *** meppl joined
[03:40] *** DemoFreak joined
[03:43] *** DemoFreak left
[03:49] *** sepheebear is now known as Sepheebear

[04:01] *** HyP is now known as HyP|away

[04:15] *** gwern joined
[04:16] <gwern> no pugs channel?

[04:17] *** _jedai_ joined
[04:17] *** |jedai| left
[04:23] <gwern> well, if anyone can tell why HsJudy was removed from pugs I'd appreciate it

[04:37] *** [particle] joined
[04:42] *** icwiener_ joined
[04:43] *** icwiener left
[04:55] *** [particle]1 left
[05:05] *** _jedai_ left
[05:06] *** |jedai| joined
[05:12] *** justatheory left
[05:47] *** justatheory joined
[05:51] *** justatheory left
[05:57] *** icwiener_ left
[06:08] *** ayrnieu left
[06:20] *** HyP|away is now known as HyP

[06:34] *** spx2 left
[06:36] *** HyP is now known as HyP|away

[06:41] *** _jedai_ joined
[06:43] *** |jedai| left
[06:46] *** _jedai_ left
[06:47] *** |jedai| joined
[06:58] *** [particle]1 joined
[07:01] *** kisu_ left
[07:07] *** [particle] left
[07:11] *** |jedai| left
[07:12] *** |jedai| joined
[07:49] *** ZuLuuuuuu joined
[07:53] *** ZuLuuuuuu left
[08:03] *** kst`` joined
[08:03] *** kst` left
[08:13] *** ejs joined
[08:16] *** kisu joined
[08:38] *** iblechbot joined
[09:06] *** |jedai| left
[09:07] *** |jedai| joined
[09:17] *** [particle] joined
[09:19] *** DemoFreak joined
[09:30] *** mberends left
[09:36] *** [particle]1 left
[09:43] *** On joined
[09:56] *** ejs left
[10:06] *** Maghnus joined
[10:10] *** baysao joined
[10:14] *** baysao left
[10:15] *** |jedai| left
[10:16] *** |jedai| joined
[10:16] *** schmalbe joined
[10:19] *** ZuLuuuuuu joined
[10:28] *** Ehtyar joined
[10:31] *** masak joined
[10:40] *** |jedai| left
[10:40] *** |jedai| joined
[10:58] *** ejs joined
[10:59] *** pmurias joined
[11:13] <pmurias> diakopter: those parameters are incorrect, how did you tweak your SConstruct you may have broken it

[11:15] *** HyP|away is now known as HyP

[11:15] *** HyP left
[11:16] <masak> std: my @a = $_ for 1,2,3

[11:16] <lambdabot> masak: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:16] <p6eval> std 24936: OUTPUT«00:06 105m␤»

[11:16] <masak> @messages

[11:16] <lambdabot> mberends said 11h 6m 21s ago: re: ./perl6 versus ../../parrot perl6.pbc, RT#62376 illustrates a similar problem and can be demonstrated with r35708 on Debian x86-32. http://rt.perl.org/rt3/Public/

[11:16] <lambdabot> Bug/Display.html?id=62376

[11:16] <masak> @clear messages

[11:16] <lambdabot> Messages cleared.

[11:18] <masak> rakudo: my @a = $_ for 1,2,3; say @a.perl

[11:18] <p6eval> rakudo 35710: OUTPUT«Lexical '@a' not found␤current instr.: '_block14' pc 162 (EVAL_17:73)␤»

[11:19] <masak> it surprises me somewhat that @a is not declared in the above case. but I don't know what the spec says about such a case.

[11:27] *** _jedai_ joined
[11:27] *** lambdabot left
[11:28] *** |jedai| left
[11:30] *** lambdabot joined
[11:30] *** kst``` joined
[11:30] *** kst`` left
[11:38] *** [particle]1 joined
[11:46] *** kane_ left
[11:57] *** [particle] left
[12:01] *** _jedai_ left
[12:01] *** |jedai| joined
[12:03] *** vixey joined
[12:09] *** masak left
[12:25] *** |jedai| left
[12:26] *** |jedai| joined
[12:38] *** pmurias left
[12:44] <ruoso>  diakopter, ping

[13:20] *** jimmy_ joined
[13:24] *** jan_ left
[13:26] *** HyP joined
[13:28] *** jimmy_ left
[13:36] *** masak joined
[13:40] <masak> szabgab++ # C-style for loop RT ticket

[13:40] <lambdabot> masak: You have 1 new message. '/msg lambdabot @messages' to read it.

[13:40] <masak> @messages

[13:40] <lambdabot> mberends said 13h 30m 18s ago: re: ./perl6 versus ../../parrot perl6.pbc, RT#62376 illustrates a similar problem and can be demonstrated with r35708 on Debian x86-32. http://rt.perl.org/rt3/Public/

[13:40] <lambdabot> Bug/Display.html?id=62376

[13:40] <masak> lambdabot: right, I got you the first time. :/

[13:40] <masak> @clear

[13:40] <lambdabot> Messages cleared.

[13:40] <jnthn> masak: You and bots just don't get on, huh? :-)

[13:41] <masak> jnthn: I think I have high expectations.

[13:41] <masak> I want the future, now.

[13:44] <masak> http://gist.github.com/48659

[13:45] *** HyP is now known as HyP|away

[13:46] <jnthn> High expectations indeed...at least, purl makes them look high. ;-)

[13:46] <masak> purl wilfully violates them.

[13:46] <masak> that's her main flaw.

[13:47] <jnthn> Aye, but somehow, when she's gone, she's missed.

[13:48] <masak> right, right. she has some good traits.

[13:48] * jnthn tries to get more done on his slides, but sorta wants to be coding too...

[13:48] <jnthn> Think I figured out how I'm going to do junction auto-threading while in the shower this morning.

[13:49] <masak> jnthn: I note that you and pmichaud still haven't really made a dent in the pile of bug tickets I left you over the holidays. ;)

[13:50] <jnthn> Yes. ;-)

[13:51] <jnthn> On my part, it's because I've got a good chunk of time at the moment without much distraction from anything else.

[13:51] <jnthn> And so I'm taking advantage of it while I have it to get the Big Things in my Hague Grant underway.

[13:52] <masak> I understand.

[13:52] <jnthn> Also, waiting to see if my Rakudo day will be renewed.

[13:52] <masak> renewed?

[13:52] <jnthn> Aye, it was agreed until end of 2008.

[13:52] <masak> oh.

[13:52] <jnthn> They encouraged me to submit a proposal for continuing it in 2009 though, and I've done so.

[13:53] <jnthn> So just waiting to hear on that. :-)

[13:53] * masak crosses fingers

[13:53] <jnthn> For now though, I've got my hands plenty full on the Hague Grant tasks.

[13:54] <masak> ok, no worries.

[13:54] <masak> I don't have any showstopping bugs right now.

[13:54] <jnthn> OK

[13:55] <jnthn> I do have some I want to address, plus I need to go through RT and close up any that I have fixed already.

[13:55] <masak> just general grumpiness over arbritary segfaults. you probably saw the discussion with chromatic++ yesterday.

[13:55] <jnthn> *nod*

[13:55] <jnthn> They are just plain hard to track down.

[13:55] <jnthn> And hard to re-produce too.

[13:56] <masak> except the ones that occur every time :/

[13:56] <jnthn> Especially on different platforms.

[13:56] <masak> like the double free.

[13:57] *** _jedai_ joined
[13:57] <jnthn> That one is scary. I don't doubt that if it was an easyish or even a mediumish difficulty fix, chromatic++ wouldn't have done it by now.

[13:57] <jnthn> erm, would have done it

[13:57] <jnthn> When chromatic describes it as hard, I'm worried.

[13:57] <masak> :)

[13:58] <jnthn> If you get any that are _not_ the double free though, a backtrace is helpful.

[13:59] *** |jedai| left
[13:59] <jnthn> (We have quite enough backtraces of that one in RT. :-|)

[13:59] <masak> I only have the double free and irregular ones right now. and chromatic tells me that the irregular ones can't exist. :/

[14:00] *** [particle] joined
[14:00] <jnthn> I think the point was more that, the Parrot bug that gives rise to them shouldn't exist in the executable and not exist when running the PBC.

[14:00] <jnthn> *but* whether the bug manifests may vary.

[14:01] <jnthn> Which if it's GC related, is very possible.

[14:01] <masak> I realize that. and he managed to convince me that apart from the double free, ./perl6 is not necessarily worse than parrot perl6.pbc.

[14:01] <masak> just crashes in different places.

[14:01] <jnthn> Right.

[14:02] <jnthn> Because of differing memory allocation patterns.

[14:02] <masak> which means that the consistent lack of crashes in the former since I switched is a coincidence. which I somewhat reluctantly accept.

[14:02] <masak> s/former/latter/

[14:03] <jnthn> That analysis is consistent with what I know too.

[14:03] <jnthn> The trouble with the segfaults that arise out of GC issues is...

[14:03] *** Whiteknight left
[14:03] <jnthn> They're hard to track down without a small program.

[14:04] *** [particle]1 left
[14:04] <masak> is this due to the nature of Parrot or something? I've never managed to make JVM segfault.

[14:04] <jnthn> And a small program in Perl 6 doesn't help so much. Even if you can reproduce it with running the output of --target=pir it's still pulling in perl6.pbc that does a lot of stuff.

[14:04] <jnthn> It's a stability thing.

[14:04] <jnthn> And maturity etc.

[14:05] <jnthn> And I suspect also in part, complexity.

[14:05] <masak> mm

[14:06] <jnthn> I've hunted down GC bugs before. They are highly non-trivial. :-(

[14:06] <masak> oh! and I've sort of decided that after the Rakudo leaving-the-nest thing, November will start targetting Rakudo and Parrot versions, not HEADs.

[14:07] <jnthn> Last time I patched one it was 5-6 hours of analysis.

[14:07] <masak> I got a bit fed up with three testsuite marathons in a row.

[14:07] <masak> not anyone-in-particular's fault, of course, just a fallout of our current development model.

[14:07] <jnthn> That's probably a sensible stratergy for November.

[14:08] <jnthn> If you actually want to get development done on it rather than just bug hunting.

[14:08] <masak> aye. I'm at the point where I'd like to guarantee stability.

[14:08] <jnthn> I think the rvar branch shook a lot of things up.

[14:08] <jnthn> It was needed, for sure.

[14:08] <masak> I'm still not sure what November will become. but if it's to become a good wiki, it needs stability.

[14:09] <masak> jnthn: the thing I'm the least pleased about is class-def-on-line-1.

[14:09] <jnthn> But I don't doubt some things that accidentally and untestedly worked before it, were broken.

[14:09] <masak> I realise that's what the spec says, but it _feels_ a bit unintuitive.

[14:09] <jnthn> I've always been tending to write classes in blocks.

[14:10] <masak> at least when we have like five different modules which worked before with a couple of harmless use statements before the class decl.

[14:10] *** schmalbe left
[14:10] <masak> I buy the match-against-grammar deprecation thing. that was our fault in not heeding the many warnings about deprecation. :)

[14:11] <masak> but I don't really see the harm in having use statements above 'class Foo;'

[14:13] <masak> @tell moritz_ s/hoover/hover/ in http://perlgeek.de/blog-en/perl-6/parse-tree.writeback -- otherwise, nice post.

[14:13] <lambdabot> Consider it noted.

[14:13] <jnthn> Not sure, what the design rationale is.

[14:13] <jnthn> But it's been Perl 6 spec for a long while.

[14:14] *** Southen left
[14:14] <masak> I guess I didn't interpret 'first in file' so... literally myself.

[14:15] <jnthn> Now and then, the spec does actually really mean what it says. ;-)

[14:15] <masak> haha

[14:17] <masak> perl6: my @a = 1,2,3; @a >>+<<= [10,20,30]; say @a

[14:17] <p6eval> pugs: OUTPUT«*** Unsafe function '=' called under safe mode␤    at /tmp/Z6j8KKzUTU line 1, column 16-36␤»

[14:17] <p6eval> ..rakudo 35717: OUTPUT«Method 'list' not found for invocant of class 'Iterator'␤current instr.: '!HYPEROP' pc 14949 (src/builtins/assign.pir:273)␤»

[14:17] <p6eval> ..elf 24936: OUTPUT«Undefined subroutine &GLOBAL::prefix__61 called at (eval 131) line 4.␤ at ./elf_f line 3861␤»

[14:17] <masak> both Pugs and Rakudo seem to parse that as prefix:<=>

[14:17] <jnthn> >>+=<<

[14:18] <jnthn> But I don't think we implemnet it yet.

[14:18] <masak> oh. so putting the = outside is wrong? where does it say that?

[14:18] <jnthn> I think the implementations are correct to parse that as prefix:=

[14:19] *** Whiteknight joined
[14:19] <jnthn> S03

[14:19] *** kst``` left
[14:19] <jnthn> @array 􏿽xBB+=􏿽xBB 42;                 # add 42 to each element

[14:19] <lambdabot> I'll crush ye barnacles!

[14:19] *** kst``` joined
[14:20] <jnthn> ...well, that was a purlesque comment from lambdabot...

[14:20] <masak> :)

[14:21] <masak> jnthn: that tells me that >>+=<< is right, which I can accept.

[14:21] <masak> but where does it say that >>+<<= is wrong?

[14:21] <masak> or, at least, NWIM?

[14:22] <jnthn> It'd never occurred to me you'd write it that way. Hmm.

[14:22] <jnthn> std: @a >>+<<= [10,20,30];

[14:22] <p6eval> std 24936: OUTPUT«00:08 144m␤»

[14:23] <masak> but that doesn't tell us if STD also sees it as prefix:<=> :)

[14:23] <jnthn> Yeah, that's what I was thinking after I wrote it... :(

[14:24] <masak> oh well. back to more worldly things.

[14:24] <jnthn> I see what you're expecting it to parse as now though.

[14:24] <jnthn> (at first I didn't...)

[14:25] <masak> aye, and it seems to me that your suggestion is slightly different, although I haven't yet come up with an example that hightlights said difference.

[14:26] <jnthn> They're certainly subtle, afaict.

[14:28] <masak> hm, November p6w doesn't build at all today. investigating...

[14:29] *** jan__ joined
[14:33] * jnthn discovers a multi dispatch bug while testing his slide examples :-|

[14:34] <masak> code++

[14:34] <jnthn> I should write more of it...

[14:36] <masak> I know the feeling.

[14:38] *** HyP|away is now known as HyP

[14:41] <masak> oh! our Test.pm doesn't work, for some reason.

[14:42] <masak> and neither does the one in languages/perl6.

[14:43] * masak wonders if that's worthy of a rakudobug

[14:43] <jnthn> :-S

[14:44] * jnthn does svn up do find out what on earth is going on

[14:44] <masak> ./perl6 -e 'use Test' is enough.

[14:44] <masak> ...to trigger the problem.

[14:44] <masak> No method named 'pass' to remove in class 'POST;Compiler'.

[14:44] <jnthn> Wow.

[14:44] <masak> jnthn: sorry to distract you from whatever you were doing.

[14:45] * jnthn sees some patched Parrot core stuff

[14:45] <jnthn> Just slide writing, but I was going to move on to hacking on Rakudo soon...

[14:45] <masak> that's two Parrot fixes in a row affecting Rakudo in a disastrous way.

[14:46] <masak> looking forward to that 1.0 stable API. :P

[14:46] <jnthn> masak: Reproduced it here.

[14:46] <jnthn> masak: Did you try a realclean?

[14:46] <masak> I _always_ do realclean when compiling.

[14:47] <jnthn> OK, so I probably don't need to also do it then.

[14:47] <masak> you could, but the error wouldn't go away.

[14:47] <jnthn> Right.

[14:48] <jnthn> erm.

[14:48] <jnthn> How on *earth* does POST::Compiler come into this...

[14:48] <jnthn> perl6 -e 'multi foo() { }'

[14:48] <jnthn> Also does it.

[14:49] <masak> :/

[14:49] <jnthn> Well done, somebody...

[14:49] <masak> good thing there's not a release coming up or something. :/

[14:49] * jnthn looks through what's been commited of late for suspects

[14:49] <jnthn> ...to revert. :-|

[14:49] <masak> jnthn++

[14:50] * masak goes back to learning Chinese words

[14:50] <jnthn> Whiteknight: ping

[14:54] *** vixey left
[14:55] *** jhorwitz joined
[14:57] *** pmurias joined
[14:59] <ruoso> hi pmurias 

[15:00] <jnthn> And the winner of the "who did the Parrot change that broke Rakudo" is...

[15:00] <masak> (drum roll)

[15:00] <jnthn> 35697

[15:01] <jnthn> (by Whiteknight. I feared so, from the error. :-()

[15:01] <jnthn> Even more fun, there are two additional patches on top of the files as of how they were in that patch.

[15:01] * jnthn hates just reverting people's patches

[15:01] <Whiteknight> jnthn: pong!

[15:02] <masak> sounds like this might take a while.

[15:02] <masak> Whiteknight: we were just talking about you. :)

[15:02] <Whiteknight> yeah, I see that

[15:02] <jnthn> Whiteknight: your get_class changes have caused epic breakage :-(

[15:02] <Whiteknight> that get_class stuff is insufferable

[15:02] <jnthn> Whiteknight: Your later patches succeed in making it fail in a different way though. ;-)

[15:02] <masak> I got an angry mob of November hackers outside my window. what should I tell them?

[15:03] <Whiteknight> tell them I'll have a fix committed in about 5 minutes

[15:03] <jnthn> Whiteknight++ # thanks

[15:03] <masak> they seem pleased.

[15:03] <jnthn> (Would much rather have you fix it, than hit the undo button. :-))

[15:03] <Whiteknight> what we need right now is all the use cases of get_class that Rakudo is relying on added to the test suite

[15:03] <Whiteknight> because I obviously don't know them all, and this is an area that is ripe for changes/updates/improvements

[15:04] <jnthn> *nod*

[15:04] <Whiteknight> So if somebody can throw together some tests for that, I'll revert my recent changes of it

[15:05] *** kisu left
[15:05] <Whiteknight> where can I go to reproduce this problem? are the failures evident in the Rakudo test suite anywhere?

[15:06] <Whiteknight> I want to make sure my fix actually fixes it

[15:06] <masak> Whiteknight: ./perl6 -e 'use Test'

[15:06] *** kisu joined
[15:06] <jnthn> Whiteknight: Thing is that your patch touches get_class and stuff that it calls

[15:07] <jnthn> It's possible the breakage is because of other things relying on the behavior elsewhere, not specifically get_class.

[15:07] <jnthn> Though I'm kinda guessing here.

[15:09] <Whiteknight> I'm decently certain that it's only coming through get_class, but I'll do some more research on it all

[15:09] <Whiteknight> I think I can back out most of the changes/fixes and still leave RSA working the way it's supposed to

[15:10] <jnthn> OK

[15:10] *** |jedai| joined
[15:10] <jnthn> I'll try and have a look through the Rakudo source and the tests and see what we're doing that is untested in Parrot core.

[15:11] <Whiteknight> thanks

[15:11] <jnthn> (with regard to get_class)

[15:11] <Whiteknight> yeah

[15:11] *** _jedai_ left
[15:12] <Whiteknight> jnthn, on an unrelated note: what term do you use to refer to the postfix if or unless syntax?

[15:12] <pmurias> ruoso: hi

[15:13] <masak> rakudo: class A does B {}; role B {}

[15:13] <p6eval> rakudo 35718: OUTPUT«Null PMC access in find_method()␤current instr.: '!meta_trait' pc 17937 (src/builtins/guts.pir:559)␤»

[15:13] * masak submits rakudobug

[15:14] <Whiteknight> masak, hold off on the rakudo bug for a minute

[15:14] <Whiteknight> I've got a fix coming down the parrot-pipeline that might resolve that issue

[15:14] * masak holds off for a minute

[15:14] <Whiteknight> thanks

[15:15] <masak> meanwhile, what's the semantics of does-ing a role which is declared later in the file?

[15:15] <jnthn> Whiteknight: That's a separate issue to the one you're fixing.

[15:15] <jnthn> masak: The semantics is, it gives an error.

[15:15] <masak> (Илья's question on p6u)

[15:15] <masak> jnthn: ok. I'll reply that to him.

[15:15] <jnthn> I explained this to someone else yesterday...

[15:15] <masak> I thought it would.

[15:15] <ruoso> pmurias, i'm  considering implementing named args

[15:15] <jnthn> masak: But file, we need a better error.

[15:16] <ruoso> pmurias, what do you think of implementing "use"?

[15:16] <masak> no, I'm holding off for a minute.

[15:16] <jnthn> In fact, we need a _compile time_ error.

[15:17] <pmurias> ruoso: i'm planning to implement use Foo:from<perl5> now

[15:17] <ruoso> cool

[15:19] <masak> pmurias++

[15:19] <Whiteknight> jnthn, okay

[15:20] <masak> pmurias: that is the one feature that might make me a smop user.

[15:21] <ruoso> pmurias, I'm thinking about splitting AST::* into separated files as well

[15:21] <ruoso> what do you think?

[15:24] *** |jedai| left
[15:24] *** |jedai| joined
[15:24] <ruoso> masak, you realize that only syntax is missing to do that? see mildew/example

[15:25] <pmurias> ruoso: the splitting of VAST seems too have worked nicely

[15:25] <masak> ruoso: yes, I understand. actually, what I'm really after is being able to write whole Perl 6 programs that use Perl 5 CPAN modules.

[15:34] <pmurias> ruoso: we have to consider if we want to always create a p5 interpreter or only when it's actually needed

[15:35] *** gwern left
[15:35] <ruoso> pmurias, I was thinking we could pre-declare a variable...

[15:36] <ruoso> and kinda autovivify it when someone try to use it

[15:36] <ruoso> but while we don't support autovivification

[15:36] *** tigreton joined
[15:36] <ruoso> we could just initialize it always

[15:37] <tigreton> hi

[15:38] <pmurias> tigreton: hi

[15:38] <pmurias> ruoso: $P5Interpreter?

[15:38] <ruoso> yeah... maybe for now

[15:39] <Whiteknight> okay, so maybe my fix will take more then 5 minutes, I have a lot of tests to run

[15:39] <pmurias> $+P5Interpreter maybe

[15:39] <pmurias> i'll fake $+foo as $foo for now

[15:40] <pmurias> perl6: $+OUT.print("hi\n");

[15:40] *** ZuLuuuuuu left
[15:40] <p6eval> elf 24936: OUTPUT«Can't call method "Str" on an undefined value at ./elf_f line 649.␤ at ./elf_f line 3861␤»

[15:40] <p6eval> ..pugs: OUTPUT«*** Can't modify constant item: VUndef␤    at /tmp/KzAU8pkTN6 line 1, column 1-20␤       /tmp/KzAU8pkTN6 line 1, column 1-20␤»

[15:40] <p6eval> ..rakudo 35718: OUTPUT«Scope not found for PAST::Var '$+OUT' in ␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[15:41] *** icwiener joined
[15:41] <ruoso> pmurias, we don't have a dynamic prelude yet

[15:41] <ruoso> nor dynamic lookup

[15:42] <ruoso> and $+OUT was not yet assumed as the standard

[15:43] <Whiteknight> masak: Can't find ./Test in @INC

[15:43] <ruoso> although TimToady was very much inclined to make it the standard

[15:44] <pmurias> perl6: my $foo = 2;say $+foo;

[15:44] <p6eval> pugs: OUTPUT«*** Can't modify constant item: VUndef␤    at /tmp/TPoVWsLEjq line 1, column 13-22␤       /tmp/TPoVWsLEjq line 1, column 13-22␤»

[15:44] <p6eval> ..elf 24936: OUTPUT«Can't call method "Str" on an undefined value at ./elf_f line 649.␤ at ./elf_f line 3861␤»

[15:44] <p6eval> ..rakudo 35718: OUTPUT«Scope not found for PAST::Var '$+foo' in ␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[15:45] *** |jedai| left
[15:45] *** |jedai| joined
[15:46] <ruoso> hmmm... 

[15:46] <ruoso> I was surprised to realize that :foo($bar) doesn't expect directly an EXPR inside the parens

[15:46] <ruoso> but it is a full circumfix with a semilist inside

[15:47] <Whiteknight> Okay, I just put through a commit that should fix this issue

[15:47] <Whiteknight> if I could get some testers  to double-check me, that would be awesome

[15:47] * jnthn tests

[15:48] <ruoso> TimToady, can the compiler simplify :foo($bar) to take directly the EXPR inside the statement inside the semilist inside the postircumfix?

[15:48] <ruoso> or is there a different possible use to that?

[15:49] <ruoso> pmurias, $+foo doesn't look in the current scope... only in the caller scope and onward

[15:50] <ruoso> (backward, actually)

[15:50] *** Ehtyar left
[15:51] *** tigreton is now known as tigreton2

[15:51] *** tigreton2 is now known as tigreton

[15:53] <pmurias> ruoso: Syntax.pod:1824

[15:53] *** tigreton is now known as tigreton2

[15:54] *** tigreton2 is now known as tigreton

[15:55] <jnthn> Whiteknight: Looks encouraging.

[15:55] <tigreton> bye

[15:55] *** tigreton left
[15:55] <ruoso> pmurias, that looks like an exception

[15:56] <jnthn> Whiteknight: Running spectest to be really sure, but think it's fixed. Thanks!

[15:57] <jnthn> Whiteknight++

[15:57] <Whiteknight> don't thank me, curse whoever wrote this code originally

[16:00] <Whiteknight> okay, I'm logging off for the afternoon probably. Talk to you gentlemen later

[16:00] *** Whiteknight left
[16:01] <pugs_svn> r24937 | pmurias++ | [mildew]

[16:01] <pugs_svn> r24937 | pmurias++ | use SDL::App:from<perl5> calls $P5Interpreter.eval('use SDL::App')

[16:02] *** cai joined
[16:02] <pmurias> ruoso: we have to figure out what to we want an use Foo::Bar:from<perl5> to export

[16:02] *** aindilis left
[16:03] <pmurias> s/to/do

[16:04] <masak> Whiteknight++

[16:05] <pmurias> we could run the 'use Foo::Bar' using Safe.pm and expose whatever appears in main:: afterwards

[16:05] <pmurias> ruoso: seems sane?

[16:06] *** aindilis joined
[16:20] *** [particle]1 joined
[16:25] *** namenlos left
[16:27] *** _jedai_ joined
[16:28] *** |jedai| left
[16:29] *** HyP is now known as HyP|away

[16:29] *** DemoFreak left
[16:30] *** DemoFreak joined
[16:38] *** [particle] left
[16:42] <szabgab> After NPW there is going to be a Perl6 hackathon I am planning to participate, others whom are interested, please put your name on

[16:42] <szabgab> http://www.perlfoundation.org/perl6/index.cgi?oslo_perl_6_hackaton_2009

[16:44] * masak is interested

[16:44] <masak> szabgab: (that's not the way to use 'whom')

[16:45] <szabgab> whome maybe?

[16:46] <masak> szabgab: it's like this: 'who' and 'whom' are like 'they' and 'them'. you can tell that 'them are interested' sounds wrong. so does '...whom are interested'.

[16:46] <masak> szabgab: 'whome' does not exist as a word in English.

[16:46] <masak> ...AFAIK.

[16:47] <szabgab> ah typo++, 

[16:47] <szabgab> so how would I say that ? others that are interested ?

[16:48] <masak> 'that', or 'who', works.

[16:48] <szabgab> oh crap, just put your name on the wiki :-)

[16:48] <masak> I did.

[16:49] <masak> I'm not _just_ a grammar nazi. :P

[16:49] <masak> I also do things.

[16:51] <szabgab> np :-)

[16:52] <szabgab> in the end we'll have to ask TimToady about that sentence

[16:52] <masak> not really.

[16:53] <masak> the thing about 'whom' in English is that it's not really needed in current usage. so when it is used wrongly, it sounds grating for at least two reasons.

[16:53] *** aindilis left
[16:54] *** aindilis joined
[16:58] <jnthn> whom is dead.

[16:58] <jnthn> In a generations time, it should be mostly forgotten. :-)

[16:59] <masak> thing is, I really like some sentences that has'em. :)

[16:59] <Khisanth> replaced by a one letter equivalent? :p

[17:00] <masak> 'to who it may concern' doesn't sound nearly as good...

[17:02] *** brunoV joined
[17:06] <ruoso> pmurias, hmm

[17:06] <ruoso> I think we don't need to support export by default

[17:07] <ruoso> we might support explicit import of symbols

[17:07] <ruoso> like...

[17:07] *** cai left
[17:07] <ruoso> use CGI:from<perl5> <header h1>;

[17:07] <ruoso> would import the symbols header and h1

[17:10] <pmurias> export by default will require use-ing the perl5 module at compile time

[17:10] *** gravity joined
[17:11] <pmurias> ruoso: the thing i have most doubts about when should ::CGI be exported

[17:11] <ruoso> what do you mean?

[17:12] <pmurias> we need a protoobject for CGI.new to work

[17:12] <ruoso> ah... I see..

[17:12] <ruoso> yes, we need a P5Package object

[17:13] <ruoso> that we register as 'CGI::', 'CGI' and '&CGI := { CGI }'

[17:13] <ruoso> and CGI.new is the same as CGI::.new in P5

[17:13] <pmurias> why do we register &CGI?

[17:14] <ruoso> because CGI.new is parsed as CGI().new()

[17:15] *** _jedai_ left
[17:15] *** |jedai| joined
[17:16] <diakopter> ruoso: I'm here now

[17:16] <diakopter> pmurias: same

[17:16] <pmurias> diakopter: hi

[17:16] <ruoso> diakopter, hi

[17:16] <diakopter> how should those parameters look

[17:17] <pmurias> none at all

[17:17] <diakopter> hm, ok

[17:17] <pmurias> m0ld_exe doesn't receive parameters

[17:17] <pmurias> ruoso: only because is_type is not filled in correctly in STD

[17:18] <pmurias> diakopter: did you change SConstruct?

[17:19] <diakopter> yeah, I had to, some

[17:19] <diakopter> I don't have 'cat'

[17:19] <diakopter> but anyway, it's stuck at the same spot now.

[17:20] <meppl> good night

[17:21] <pmurias> diakopter: what you could do is to commit your changes and i'll see if it works correctly on linux

[17:22] *** meppl left
[17:23] <diakopter> after line 154 of control_exception_return.c is emitted, sm0p.exe is hanging/pausing

[17:23] <diakopter> http://perl6.pastebin.com/f3a71b9b4

[17:23] <buubot> diakopter: The paste f3a71b9b4 has been copied to http://erxz.com/pb/14915

[17:24] *** mtnviewmark joined
[17:25] <pmurias> diakopter: .ri files are emitted by tools/ri not sm0p.pl

[17:25] <mtnviewmark> std: $foo.~^

[17:25] <p6eval> std 24937: OUTPUT«############# PARSE FAILED #############␤Syntax error at /tmp/cWFHYolBOG line 1:␤------> $foo.~^␤    expecting postfix_prefix_meta_operator␤00:05 86m␤»

[17:25] <diakopter> pmurias: I don't see how that applies to my situation

[17:26] <mtnviewmark> std: $foo.:~^

[17:26] <p6eval> std 24937: OUTPUT«############# PARSE FAILED #############␤Obsolete use of . to concatenate strings; in Perl 6 please use ~ instead at /tmp/jhTO9QQTHC line 1:␤------> $foo.:~^␤    expecting dotty method or postfix␤00:05 86m␤»

[17:26] <mtnviewmark> aha!

[17:27] <pmurias> diakopter: the should be no such thing as sm0p.exe

[17:27] <ruoso> pmurias, is_type isn't looked for in CGI.new

[17:27] <mtnviewmark> so .:<prefix> doesn't work as per Syn03...

[17:27] <diakopter> pmurias: what should the sm0p executable be named?

[17:27] <pmurias> diakopter: is the paste smop related

[17:27] <ruoso> pmurias, it is looked in places like "does Foo" or "is Foo"

[17:27] <masak> mtnviewmark: hello. what doesn't work as per Syn03, you say?

[17:28] <pmurias> diakopter: what do you mean by the sm0p executable

[17:28] <diakopter> pmurias: yes, it's one of the 3 threads in sm0p.exe while it's "hung", the most active one

[17:28] <mtnviewmark> hello masak 

[17:28] <mtnviewmark> Syn03 says .:<postfixop> is a method call op

[17:28] <diakopter> pmurias: the one that's built by Setup.exe

[17:28] <mtnviewmark> but, on my reading of STD.pm it wasn't so I checked here 

[17:28] <mtnviewmark> and, it isn't

[17:28] <ruoso> diakopter, that's m0ld.exe

[17:28] <pmurias> m0ld_exe.exe

[17:28] <diakopter> oh, ok

[17:28] <masak> mtnviewmark: that might have been deprecated.

[17:29] <diakopter> I must have mistyped sm0p somewhere then

[17:29] <ruoso> diakopter, there is also sm0p.pl

[17:29] <masak> mtnviewmark: ISTR that filetest adverbs :x got desugared to .:x before, but .x now.

[17:29] <mtnviewmark> okay - I'll write up my findings on methodcall operators - as STD is a bit far from Syn03... 

[17:29] <diakopter> sorry, I meant m0ld.exe is hanging

[17:30] <ruoso> diakopter, it's probably waiting for input

[17:30] <ruoso> are you sure it is receiving the data via stdin?

[17:30] <mtnviewmark> but AFAICT there is no dotted from of prefix operators anymore

[17:30] <pmurias> diakopter: could you paste your SConstruct

[17:30] <pmurias> ?

[17:30] <diakopter> ruoso: it did indeed output 154 lines of control_exception_return.c

[17:31] <masak> mtnviewmark: prefix operators?

[17:31] <mtnviewmark> masak - do you know what .^!method and !method are?  the later is named privop in STD

[17:31] <mtnviewmark> masak - right there is a dotted from of postfix operators:   .++ and .i for example

[17:31] <masak> mtnviewmark: aye, they are calls/references to private things in classes.

[17:32] <mtnviewmark> (wonders how .i is parsed.. operator? or method name?)

[17:32] <ruoso> diakopter, right... maybe tools/ri is trying to talk to m0ld_exe but it's not being able to send the input data

[17:32] <mtnviewmark> std:  $p!seekret(42)

[17:32] <masak> mtnviewmark: TimToady++ decided the other day to always treat .i as a method.

[17:32] <p6eval> std 24937: OUTPUT«00:05 86m␤»

[17:32] <jnthn> mtnviewmark: .i I think with latest tweaks is...what masak said. :-)

[17:32] <masak> :)

[17:32] <mtnviewmark> what?  not as an operator?    so 3 + 4i is gone?  now 3 + 4.i

[17:33] <jnthn> No

[17:33] <masak> mtnviewmark: no 4i is still there.

[17:33] <jnthn> 3 + 4i will work

[17:33] <jnthn> 3 + 4.i wouldn't

[17:33] <mtnviewmark> well, in that case i is an operator --

[17:33] <masak> sure.

[17:34] <mtnviewmark> ah - just .i was the adjudicated result... got it

[17:34] <masak> it just doesn't have a .i form.

[17:34] <ruoso> diakopter, can you try to debug tools/ri ?

[17:34] <mtnviewmark> so -  what is .:method if no longer the dotted form of prefix opeerators?

[17:34] <diakopter> ruoso: http://perl6.pastebin.com/f2a0d8da0

[17:34] <buubot> diakopter: The paste f2a0d8da0 has been copied to http://erxz.com/pb/14916

[17:35] <diakopter> ruoso: yes, give me a few minutes

[17:36] <masak> mtnviewmark: I have no idea. I hardly understand the question. :/

[17:36] <ruoso> diakopter, I don't understand windows command expansion...

[17:36] <ruoso> but the way tools/ri is called seems wrong to me

[17:36] *** kst``` left
[17:36] <diakopter> how does it seem wrong? all I changed was how the $SOURCE is fed

[17:36] *** kst``` joined
[17:36] * mtnviewmark doesn't think that windows command expansion is deterministic! :-)

[17:37] <mtnviewmark> okay - well, i've got to go now - I'll send my methodcall findings out later today!

[17:37] <mtnviewmark> caio!

[17:37] *** mtnviewmark left
[17:41] *** justatheory joined
[17:43] <diakopter> ruoso: screenshot of process explorer for the process tree.  http://imagebin.ca/view/0Ozu8GM.html

[17:45] <diakopter> ruoso, believe it or not, cmd.exe does handle the nested double-quotes correctly, afaict/afaik.

[17:46] * diakopter installs ActiveState's interactive gui debugger

[17:47] <masak> ok, I'm withdrawing for the evening to concentrate on too many Chinese characters for tomorrow. see y'all.

[17:47] *** masak left
[17:52] <diakopter> ruoso: any thoughts?

[17:59] *** vixey joined
[18:00] *** |jedai| left
[18:00] *** HyP|away is now known as HyP

[18:00] *** |jedai| joined
[18:00] *** ayrnieu joined
[18:03] *** Casan joined
[18:10] *** brunoV left
[18:14] <diakopter> ruoso: okay, I'm now stepping through tools/ri

[18:15] <ruoso> check if it is calling m0ld correctly

[18:15] <diakopter> how will I be able to tell?

[18:16] <ruoso> what are the parameters send to open3

[18:16] <ruoso> ?

[18:16] <ruoso> s/send/sent/

[18:18] <ruoso> does Open3 works as expected in Windows?

[18:18] *** moritz_ left
[18:18] *** moritz_ joined
[18:19] <moritz_> re

[18:19] <lambdabot> moritz_: You have 1 new message. '/msg lambdabot @messages' to read it.

[18:21] <diakopter> ruoso: @_[3] in open3() is "m0ld.exe"; that's the only parameter that stringifies to anything other than ""

[18:22] *** HyP is now known as HyP|away

[18:22] <ruoso> diakopter, so after that step, does it write to m0ld?

[18:23] <ruoso> where does it hang?

[18:23] <diakopter> I'm not sure I can trace the fh with this debugger...

[18:24] <ruoso> ok... go step by step, and tell me where it hang?

[18:25] <diakopter> during the exec @cmd in Open3.pm

[18:26] *** |jedai| left
[18:26] <diakopter> I'm pretty confident IPC::Open3 has been specifically tweaked to work well in this Strawberry Perl

[18:27] *** |jedai| joined
[18:27] <diakopter> but yeah it's starting to seem as if it's not sending input to m0ld.exe

[18:27] <ruoso> try open2 instead

[18:28] *** DemoPhreak joined
[18:28] <ruoso> (does win32 have a stderr?)

[18:28] <diakopter> heh; the graphical debugger didn't appreciate me killing the whole process tree

[18:28] <diakopter> yes

[18:34] <diakopter> ruoso: switching it to use open2() helped

[18:34] <diakopter> it seems to have finished writing to control_exception_return.c

[18:34] <ruoso> cool

[18:35] <pugs_svn> r24938 | ruoso++ | [mildew] starting the support for named parameters. support for colonpair and fatarrow. added nibbler vast type... only the signature handling is missing;

[18:35] <ruoso> diakopter, I think you can commit the version using open2

[18:35] <ruoso> there shouldn't be much harm

[18:35] <diakopter> ruoso: ok

[18:36] <diakopter> ruoso: but, see this paste

[18:37] <diakopter> http://erxz.com/pb/14921

[18:38] <ruoso> diakopter, is the control_exception_return compleete?

[18:38] <diakopter> ruoso: well, there aren't any incomplete blocks at the end :) I don't know what the last block should be, though

[18:38] <ruoso> diakopter, for some reason scons seems to think your compiler is named 'cl'

[18:39] <ruoso> diakopter, is there something that looks like the output from m0ld?

[18:39] <diakopter> what does the output of m0ld look like?

[18:39] <ruoso> a function call with a lot of numbers as arguments

[18:40] <ruoso> numbers and C symbols, that is

[18:40] *** [particle] joined
[18:40] <diakopter> in the .c file? no.

[18:41] <diakopter> also, m0ld.exe is still running (twice), orphaned

[18:41] <ruoso> hmm... ok... so it looks like it didn't work as expected

[18:41] <ruoso> the warnings were pointing in that direction

[18:41] *** |jedai| left
[18:41] <pugs_svn> r24939 | moritz++ | [t/spec]

[18:41] <pugs_svn> r24939 | moritz++ |  * wrote tests for multis with multiple signatures

[18:41] <pugs_svn> r24939 | moritz++ |  * corrected redo.t

[18:41] <pugs_svn> r24939 | moritz++ |  * some unfudges

[18:41] <pugs_svn> r24939 | moritz++ |  * fixed slurpy-params-2.t to use [+] @a instead of @a.sum

[18:41] <ruoso> diakopter, it sure has to do with IPC in windows

[18:42] <diakopter> yeah

[18:42] * ruoso need to go for a while...

[18:42] * ruoso later &

[18:43] *** DemoFreak left
[18:43] *** |jedai| joined
[18:43] <pugs_svn> r24940 | moritz++ | [t/spec] unfudge subref.t for rakudo

[18:45] *** [particle]1 left
[18:45] <diakopter> pmurias: what do you think about me trying to make tools/ri read and write to files based on filename parameters and not STDIN,STDOUT

[18:45] <diakopter> I mean as an attempted solution, not necessarily a permanent change

[18:49] <ruoso> diakopter, feel free to try it

[18:52] *** Psyche^ joined
[19:03] *** Patterner left
[19:03] *** Psyche^ is now known as Patterner

[19:10] *** DemoPhreak is now known as DemoFreak

[19:12] <pugs_svn> r24941 | ruoso++ | [mildew] named parameters working!!!! YAY!!!

[19:13] *** ZuLuuuuuu joined
[19:13] <pugs_svn> r24942 | ruoso++ | [smop/src-s1p] remove uncessary parens

[19:14] <ruoso> and that means Multi.pm can be compiled!

[19:17] <pugs_svn> r24943 | moritz++ | [t/spec] fudge submethods.t to be runnable (but doesn't pass yet)

[19:17] <ruoso> we now need the mildew so loader

[19:18] <jnthn> moritz_: Is that, none of it passes?

[19:18] <jnthn> I think I looked at that and it was the lexicals outside classes issue getting in the way as much as anything...

[19:19] <moritz_> jnthn: that's right

[19:19] * jnthn added submethods just the other day

[19:20] <jnthn> Then looked to add that test file and realized we couldn't...and I think that was about the last thing I did on Rakudo. :-)

[19:20] <ruoso> mildew: sub foo(:$named) { $OUT.print($named.FETCH)}; foo(:named<Hello from Mildew>);

[19:20] <p6eval> mildew: OUTPUT«Can't locate object method "emit" via package "AST::Pair" at src/AST.pm line 255.␤»

[19:20] <ruoso> hmm... outdated eval

[19:22] *** kst```` joined
[19:22] *** kst``` left
[19:22] <ruoso> pmurias, I think I'll create another directory in smop to host prelude that is already compilable, and make smop load that prelude from start

[19:32] <pugs_svn> r24944 | moritz++ | [t/spec] unfudge passing test in basic-types.t for rakudo

[19:33] <pugs_svn> r24945 | moritz++ | [t/spec] more unfudges

[19:34] <pugs_svn> r24946 | moritz++ | [t/spec] another unfudge

[19:35] *** s1n left
[19:35] *** s1n joined
[19:35] *** s1n left
[19:37] <ruoso> mildew: sub foo {$OUT.print("gone")}; sub bar(|$capture) { &foo.postcircumfix:<( )>((|$capture),:cc(&?ROUTINE.back)); $OUT.print("won't print") }; bar(); $OUT.print("mad");

[19:38] <p6eval> mildew: RESULT«Use of uninitialized value in hash element at ../../src/perl6/Cursor.pm line 819.␤Use of uninitialized value in concatenation (.) or string at ../../src/perl6/Cursor.pm line 881.␤Can't call method "emit_m0ld" on an undefined value at src/VAST/noun.pm line 34.␤»

[19:40] <ruoso> hmpf... still outdated

[19:40] <moritz_> do I need to do anything else than building smop?

[19:41] <moritz_> (which I just did)

[19:41] *** cannedfish joined
[19:42] <ruoso> moritz_, I think you need to rebuild std, and cleanup lex/

[19:44] <moritz_> ruoso: try again please

[19:44] <ruoso> sub foo { $OUT.print("gone\n") }; sub bar(|$capture) { &foo.postcircumfix:<( )>((|$capture),:cc(&?ROUTINE.back)); $OUT.print("won't print\n"); }; bar(); $OUT.print("mad\n");

[19:45] <ruoso> mildew: sub foo { $OUT.print("gone\n") }; sub bar(|$capture) { &foo.postcircumfix:<( )>((|$capture),:cc(&?ROUTINE.back)); $OUT.print("won't print\n"); }; bar(); $OUT.print("mad\n");

[19:46] <p6eval> mildew: RESULT«(null pattern for prefix_circumfix_meta_operator:*) at ../../src/perl6/Cursor.pm line 464.␤Can't call method "emit_m0ld" on an undefined value at src/VAST/noun.pm line 34.␤»

[19:46] <moritz_> sh: line 1: 10544 File size limit exceededperl mildew /tmp/hLS5dzUjs9 >> /tmp/yLLJCp6LkD 2>&1

[19:46] <moritz_> ruoso: I can increase that limit - how much space do you need?

[19:47] *** cannedfish left
[19:47] <ruoso> the question is how mucg std needs

[19:48] *** [particle]1 joined
[19:48] <moritz_> I don't think STD.pm writes so much into one file

[19:48] <pugs_svn> r24947 | moritz++ | [evalbot] increase max file size limit

[19:48] *** p6eval left
[19:49] *** p6eval joined
[19:51] *** On left
[19:51] *** On joined
[19:52] <pmurias> ruoso: the mildew so loader works

[19:52] <moritz_> mildew: sub foo { $OUT.print("gone\n") }; sub bar(|$capture) {  &foo.postcircumfix:<( )>((|$capture),:cc(&?ROUTINE.back));  $OUT.print("won't print\n"); }; bar(); $OUT.print("mad\n");

[19:52] <p6eval> mildew: OUTPUT«gone␤mad␤»

[20:01] *** jisom joined
[20:01] *** jisom left
[20:03] *** [particle] left
[20:03] *** c9s_ joined
[20:07] *** _jedai_ joined
[20:07] *** kisu_ joined
[20:07] *** |jedai| left
[20:08] *** Sepheebear left
[20:11] *** kisu left
[20:16] *** s1n joined
[20:20] *** c9s left
[20:24] *** aindilis` joined
[20:30] <rakudo_svn> r35722 | moritz++ | [rakudo] add four files and a bit more documentation to t/spectest.data

[20:37] *** aindilis left
[20:38] <ruoso> moritz_++

[20:38] <ruoso> and now you saw mildew call/cc

[20:40] <ruoso> mildew: sub foo(:$named) { $OUT.print($named.FETCH)}; foo(:named<Hello from Mildew>);

[20:40] <p6eval> mildew: OUTPUT«Can't locate object method "emit" via package "AST::Pair" at src/AST.pm line 255.␤»

[20:40] <ruoso> interesting...

[20:41] *** [particle] joined
[20:41] *** _jedai_ left
[20:42] <ruoso> hmm... that means I didn't implement the compiler hack for named argument in routine call...

[20:42] *** |jedai| joined
[20:46] *** kst```` left
[20:46] *** kst```` joined
[20:52] *** HyP|away is now known as HyP

[20:55] <pugs_svn> r24948 | moritz++ | [t/spec] correct a test in code.t, and add another one for RT #62432

[20:59] *** [particle]1 left
[20:59] *** HyP left
[21:09] *** s1n left
[21:14] *** meltingwax joined
[21:16] <pugs_svn> r24949 | ruoso++ | [mildew] implement the named args compiler hack in VAST::term;

[21:18] *** s1n joined
[21:20] <rakudo_svn> r35724 | moritz++ | [rakudo] correct file name in spectest.data

[21:22] *** ejs1 joined
[21:27] *** ejs left
[21:38] <pugs_svn> r24950 | moritz++ | [t/spec] regression tests for RT #62006

[21:38] *** jhorwitz left
[21:43] *** s1n left
[21:44] *** vixey left
[21:46] *** donaldh joined
[21:47] *** s1n joined
[21:49] *** ZuLuuuuuu left
[21:51] *** shinobi-cl joined
[21:51] <shinobi-cl> hello every1!

[21:52] <moritz_> good localtime

[21:52] <shinobi-cl> can i have your attention for a little?

[21:52] <shinobi-cl> i just started a perl6 wiki

[21:52] <shinobi-cl> on perl6 dot wikia dot com

[21:52] <shinobi-cl> i just have one article by now :( and it sucks hehe

[21:53] <shinobi-cl> you are all welcome to contribute !

[21:53] <moritz_> shinobi-cl: why another wiki? we already have a few

[21:54] <moritz_> most prominently http://www.perlfoundation.org/perl6/index.cgi?perl_6 which links to most others

[21:55] <shinobi-cl> thhat wiki is sooo incomplete

[21:55] <moritz_> right

[21:55] <jnthn> moritz_: Fudge fail? I get 

[21:55] <jnthn> t\spec\S12-attributes\mutators.rakudo                   23    2  24-25

[21:55] <moritz_> shinobi-cl: so is the new one

[21:56] <jnthn> (failed that is)

[21:56] <moritz_> jnthn: I'll investiage

[21:56] <shinobi-cl> well, but it only has a few hours of life

[21:56] <shinobi-cl> anyway, there it its:)

[21:56] <shinobi-cl> seeya, got to make more articles

[21:56] <moritz_> good luck!

[21:57] <jnthn> moritz_: Oh, I think it's test count

[21:57] <jnthn> 1..23

[21:57] <moritz_> jnthn: aye

[21:57] <jnthn> later

[21:57] <jnthn> ok 24 - # SKIP class Proxy

[21:57] <jnthn> ok 25 - # SKIP class Proxy

[21:57] <jnthn> OK, cool, not so bad then. :-)

[21:58] <moritz_> I just counted them, there *are* 25 tests in that file

[21:58] <moritz_> fix committed

[21:58] *** kst```` left
[21:58] <pugs_svn> r24951 | moritz++ | [t/spec] fix plan() noticed by jnthn++

[21:58] *** kst```` joined
[21:58] <moritz_> but I did find a fudge bug today

[21:59] <moritz_> it forgets half of the file on 'make t/spec/S06-signature/slurpy-params-2.t'

[22:00] <moritz_> @tell TimToady t/spec/fudge --keep-exit-code rakudo t/spec/S06-signature/slurpy-params-2.t emits an incomplete file, many tests are missing at the end

[22:00] <lambdabot> Consider it noted.

[22:09] *** Casan left
[22:11] *** DemoFreak left
[22:20] <pugs_svn> r24952 | moritz++ | [t/spec] some more unfudges found by autounfudge

[22:27] *** spx2 joined
[22:28] *** ST47 joined
[22:29] *** dmpk2k left
[22:31] <pugs_svn> r24953 | moritz++ | [t/spec] get rid of some passing TODO tests by skipping them until we get

[22:31] <pugs_svn> r24953 | moritz++ | clarification from p6l

[22:31] *** DemoFreak joined
[22:35] *** Jedai left
[22:36] *** Jedai joined
[22:36] <shinobi-cl> just some advertising...New perl6 wiki, on http://perl6.wikia.com .....Please contribute with guides and how-to s!!!!! thanks!

[22:37] *** shinobi-cl left
[22:38] *** _jedai_ joined
[22:38] *** |jedai| left
[22:38] *** donaldh left
[22:47] *** s1n left
[22:47] *** s1n joined
[22:51] <moritz_> rakudo now passes 6352 spec tests

[22:58] <jnthn> moritz_++ # nice!

[23:01] *** ejs1 left
[23:02] *** [particle]1 joined
[23:03] *** pmurias left
[23:04] *** shinobi-cl joined
[23:04] *** jhuni joined
[23:04] <shinobi-cl> hello 

[23:05] *** _jedai_ left
[23:05] *** |jedai| joined
[23:09] *** moritz__ joined
[23:10] <moritz__> the network in which the irclogs live seems very much down

[23:15] *** moritz__ left
[23:18] *** moritz_ left
[23:18] *** ilbot2 left
[23:18] *** [particle] left
[23:22] *** iblechbot left
[23:22] <shinobi-cl> hi! a new wiki about perlt is online: http://perl6.wikia.com

[23:22] <shinobi-cl> an article about reading binary files (seek, and all that) would be a nice addition :)

[23:22] *** shinobi-cl left
[23:23] *** shinobi-cl joined
[23:24] <diakopter> shinobi-cl: you already mentioned it.

[23:25] *** froele joined
[23:27] <froele> hi guys

[23:27] <froele> just wondering anyone actually used lua

[23:31] *** moritz_ joined
[23:31] <froele> does perl have TST

[23:32] <froele> ternary search trees?

[23:32] <froele> it's a fractal of binary trees.

[23:32] *** ilbot2 joined
[23:34] <froele> anyone familiar with this?

[23:47] *** _jedai_ joined
[23:47] <froele> anyone designed MUDs here?

[23:47] <froele> perhaps a Multi-threaded MUD codebase in perl

[23:47] *** |jedai| left
[23:48] <diakopter> @tell scrottie froele asked about MUDs

[23:48] <lambdabot> Consider it noted.

[23:49] <froele> diakopter: who is scrottie?

[23:50] *** pcbuetow left
[23:50] <diakopter> froele: google him?

[23:54] *** kst```` left
[23:54] *** kst```` joined
[23:54] <froele> yeah done

[23:54] <froele> but anyone in here who will give me some direction on  this

[23:59] *** tristes_tigres joined
[23:59] *** tristes_tigres left
