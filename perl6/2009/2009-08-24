[00:01] *** wknight8111 joined
[00:01] *** Whiteknight left
[00:08] <japhb> Is there an example somewhere of defining and using classes in NQP?

[00:09] * japhb trying to avoid shaving too many yaks before the day is over

[00:09] <jnthn> Any language's action grammar is a class.

[00:09] <jnthn> And using - TheClassName.new()

[00:10] <jnthn> I think it only likes the class Foo::Bar; syntax though (over the curly brace one).

[00:10] <japhb> jnthn, AH!  That was my mistake!

[00:10] *** lollan left
[00:11] <japhb> Hmmm, still no good.

[00:12] <jnthn> No? Hmm.

[00:12] <jnthn> "no good"?

[00:13] <japhb> Actually, no, the class Foo { ... } syntax works too.  I had an unrelated bug in the same area, which I didn't see because it was valid Perl 6 but not valid NQP.

[00:13] <jnthn> japhb: Oh no, it should be able to take a block

[00:14] <jnthn> japhb: Ah, so you found

[00:14] <jnthn> I was just reading the grammar.

[00:14] <japhb> :-)

[00:14] *** justatheory joined
[00:15] <japhb> jnthn, NQP has no 'use' equivalent, right?  Just load_bytecode()?

[00:18] <jnthn> japhb: correct

[00:18] <japhb> jnthn, can you override an NQP class's new()?

[00:18] <jnthn> japhb: Should just be able to write a method new

[00:18] <jnthn> I can't think of any reason off ahnd that would not work.

[00:19] <japhb> jnthn, OK.

[00:19] <jnthn> oh, I lied about NQP having no built-ins. It appears it does...

[00:19] <japhb> Yeah, found them.  Just a couple.

[00:19] <japhb> I've been adding back modified versions from Rakudo of a few key builtins and vars.

[00:19] <jnthn> Oh, I wonder if we can't see them in Rakudo because we compile the code to PIR, but don't load the NQP library or something.

[00:19] <jnthn> That's fine.

[00:20] <jnthn> You can probably negotiate with pmichaud over what can go in and stay in.

[00:21] <japhb> jnthn, for now, I'm just keeping them local to the project, but I may suggest to pmichaud that some standard builtins collections be available.  For instance, the "glue" builtins, such as run(), qx(), %*ENV, %*VM, and so on.

[00:21] <japhb> Not as core,

[00:22] <japhb> but as a well-known PBC to load if desired.

[00:22] <jnthn> japhb: nod

[00:22] <jnthn> That makes sense.

[00:25] <japhb> The biggest problem I'm having writing NQP is finding sample code that's not a language grammar.  :-)

[00:26] <japhb> .oO( I'm writing the sample code that I needed, I guess ... )

[00:27] <jnthn> You probably are, I'm afraid.

[00:27] *** cotto left
[00:36] *** wknight8111 left
[00:36] <Tene> jnthn: japhb asked for it, so NQP will have 'use' and 'eval' soon.

[00:37] <japhb> Tene++ # wheeee

[00:37] <jnthn> Tene++

[00:38] <wayland76> Tene++

[00:38] <jnthn> karma Tene

[00:38] <jnthn> @karma Tene

[00:38] <lambdabot> Tene has a karma of 58

[00:38] <jnthn> @dogma Tene

[00:38] <lambdabot> Unknown command, try @list

[00:39] <jnthn> aww

[00:39] <japhb> OK, I'm getting frustrated with my grepping.  How do you define/set attributes for a class in NQP?  Alternately, since there's no 'bless' (at least, not in the NQP sources, I suppose it could come from elsewhere in PCT), what do you return from a new() method?

[00:39] <jnthn> .oO( must not make "karma ran over dogma" joke )

[00:40] <jnthn> japhb: Aww crap.

[00:40] <jnthn> japhb: Well at first glance NQP appears to lack "has"

[00:40] <jnthn> :-/

[00:40] <japhb> jnthn, Oh, that's *very* reassuring.

[00:40] <japhb> jnthn, yup.

[00:41] <jnthn> like, the word doesn't appear in the grammar

[00:41] <Tene> embedded PIR!

[00:41] <japhb> jnthn, yup, that's what I saw

[00:41] <jnthn> Well yes

[00:41] <jnthn> That's probably the best bet ATM.

[00:42] <japhb> Tene, OK, sure, but we're now beginning to get to things that really ought to be in there without going to inline PIR.

[00:42] <jnthn> japhb: I agree.

[00:42] <japhb> Well, at least something *minimal*.

[00:43] <japhb> pmichaud, around yet?

[00:46] <Tene> jnthn: you ruin my trolling with your reason.

[00:48] <wayland76> We have to remember the reasonable defence against trolling next time we get trolls

[00:48] <wayland76> But OTOH, it was a successful troll -- it got a response :)

[00:49] <japhb> Rrolls rarely enjoy they response that involves getting cleaved.  :-)

[00:49] <japhb> er

[00:49] <japhb> Trolls

[00:50] <jnthn> lol you fail it you can't even spell troll lol

[00:50] <wayland76> cleave together, or cleave apart?

[00:50] <jnthn> ;-)

[00:50] *** seeken joined
[00:52] <japhb> The silly thing was my typo was caused by fat-fingering a minor cleanup of an otherwise grammatically correct sentence.  Sigh.

[01:03] *** FCO left
[01:14] <japhb> If I say create a '$OS' variable in PIR using set_hll_global, I still have to say 'our $OS' in NQP before trying to use $OS, or the parser complains of no declaration.  Is there some magic way to poke the parser so it knows about the "builtin" global?

[01:15] <jnthn> japhb: afaik no

[01:15] <jnthn> japhb: let me glance the source

[01:18] <jnthn> japhb: Ah

[01:18] <jnthn> If you can tweak the outermost block between the past and the post stages, you can probably call .symbol('$OS', 'scope'=>'package') 

[01:19] <jnthn> Oh wait...that's a parser tweak.

[01:20] <jnthn> Hmm. I can't think of a good way. Sorry.

[01:20] *** jaldhar left
[01:25] *** leedo_ left
[01:26] *** leedo joined
[01:27] <jnthn> japhb: I'll sleep in a moment (very late here...) Any final questions before I go?

[01:33] <jnthn> Timed out

[01:33] * jnthn -> sleep, night all

[01:35] <wayland76> 'night :)

[01:39] <japhb> Hope he sleeps well ... and jnthn++ for all the help today

[01:50] *** wayland76 left
[01:57] *** alester joined
[02:13] *** takadonet left
[02:24] *** meppl left
[02:32] *** cotto joined
[02:36] *** alester left
[02:45] *** carlin joined
[02:50] *** justatheory left
[02:53] *** pugs_svn left
[02:53] <ihrd> rakudo: my $code = {"Foo"}; my %h = :bar; $code(| %h);

[02:53] *** p6eval left
[02:56] *** jaldhar joined
[03:07] *** molaf joined
[03:09] <carlin> heh, it killed the bot

[03:10] <ihrd> :(

[03:12] *** zamolxes left
[03:12] *** zamolxes joined
[03:26] *** SmokeMachine joined
[03:32] *** nihiliad left
[03:40] <PerlJam> @tell alester Several pages on rakudo.org go to a blank page (/documentation, /community, /developers-guide, /status).  Same thing happens when I attempt to login.

[03:40] <lambdabot> Consider it noted.

[03:47] *** molaf left
[03:55] *** leedo left
[03:56] *** quietfanatic joined
[03:57] *** leedo joined
[03:58] *** leedo left
[03:58] *** tak11 left
[03:59] *** quietfanatic left
[04:09] *** wayland76 joined
[04:23] *** kyle_l5l joined
[04:23] <japhb> http://gitorious.org/parrot-plumage/parrot-plumage

[04:24] <japhb> jnthn, pmichaud: Note especially the NQP section of http://gitorious.org/parrot-plumage/parrot-plumage/blobs/master/TODO

[04:24] *** wayland76 left
[04:33] *** Zloyrusskiy joined
[04:51] *** _jaldhar joined
[05:04] *** jaldhar left
[05:11] *** Zloyrusskiy left
[05:13] *** leedo joined
[05:14] <s1n> jnthn: i created a really nice work-around for the interim, it took several hours of thinking and 2 minutes to implement, it's _far_ from perfect, but i'm going to use it for now

[05:15] <s1n> jnthn: i'll send it to you tomorrow

[05:16] *** sri_kraih_ joined
[05:32] *** sri_kraih left
[05:32] *** sri_kraih_ is now known as sri_kraih

[05:36] *** adhoc left
[05:41] *** orafu left
[05:41] *** orafu joined
[05:44] *** agentzh left
[06:00] *** justatheory joined
[06:01] *** kidd_ left
[06:04] <moritz_> good morning

[06:06] *** finanalyst joined
[06:07] <japhb> Good morning, moritz_

[06:20] *** szabgab left
[06:28] *** mj41 joined
[06:28] *** rfordinal joined
[06:30] <japhb> http://use.perl.org/~geoffrey/journal/39516

[06:33] <moritz_> japhb++

[06:33] <japhb> moritz_, thx!

[06:47] *** szabgab joined
[06:49] *** rfordinal left
[06:51] *** polettix joined
[07:00] *** Su-Shee joined
[07:00] <Su-Shee> heyho :)

[07:00] <moritz_> ho yo!

[07:01] <sjohnson> hi!

[07:02] *** moritz_ sets mode: +oo japhb Su-Shee

[07:02] <Su-Shee> *hihi* perl on android. :)

[07:08] <carlin> perl on android?

[07:10] <Su-Shee> google phone. http://code.google.com/p/android-scripting/source/browse/perl/ase/scripts/hello_world.pl

[07:11] <ihrd> japhb++

[07:12] *** rfordinal joined
[07:13] <japhb> ihrd, thx!

[07:21] *** Kentrak joined
[07:22] <Kentrak> Anyone here know the state of proto/multi in objects?

[07:23] <Kentrak> Trying to define another .new and finding that it makes the original .new no longer accessible.  Not sure if it's a bug in the object code and .new isn't defined as proto, or if it's a multiple dispatch bug.

[07:24] <moritz_> good question

[07:24] <moritz_> rakudo: class A { multi new ($x) { } }; A.new()

[07:24] <moritz_> bah, p6eval is gone (server down)

[07:25] <lisppaste3> kentrak pasted "untitled" at http://paste.lisp.org/display/85940

[07:26] <Kentrak> http://paste.lisp.org/display/85940 should show the problem somewhat succinctly...  although I just realized I should have included the output of the latest rakudo build.

[07:27] <carlin> Su-Shee: nice, I knew ASE had accepted the suggestion to add perl but I didn't think it was close to being released

[07:27] <lisppaste3> kentrak annotated #85940 "untitled" at http://paste.lisp.org/display/85940#1

[07:28] <moritz_> Kentrak: this is a bug in rakudo. If your custom new method would have hidden the default constructure, you'd have gotten a dispatch error

[07:28] <moritz_> Kentrak: could you please submit a bug report to [email@hidden.address]
[07:28] <Kentrak> yep

[07:28] <Kentrak> Just wanted to check before submitting. :)

[07:29] <moritz_> great

[07:32] <Kentrak> Also, is there a defined object method for determining the available mthods/submethods an object has?

[07:33] <moritz_> you can loook at Class.^methods(:local) for example

[07:33] <moritz_> or ask about specific methods with .can or .^can

[07:33] <moritz_> don't know how any of those deal with submethods though

[07:33] <Kentrak> moritz_: ah.  Somehow missed the introspection part of S12.  Thanks

[07:34] *** nbrown left
[07:34] <moritz_> Kentrak: if the specs are confusing (which wouldn't surprise me) you might also look at the tests in t/spec/S12-introspection/

[07:35] <moritz_> rakudo passes all of them right now

[07:35] *** nbrown joined
[07:36] <Matt-W> Morning

[07:37] <Kentrak> moritz_: thanks, on the right track now.

[07:40] *** Kentrak left
[08:03] *** agentzh joined
[08:08] *** jaffa8 joined
[08:09] <jaffa8> hi

[08:09] <moritz_> hi japhb 

[08:09] <moritz_> erm, hi jaffa8 

[08:09] <moritz_> sorry, tab fail :-)

[08:09] <jaffa8> has anyone tried to compile std.pm?

[08:09] <jaffa8> Because I cannot

[08:09] <moritz_> worked for me last I tried

[08:10] <jaffa8> in what version?

[08:10] <jaffa8> I get an error

[08:10] <jaffa8> Statement not terminated properly at line 171, near "= %::($var"

[08:10] <moritz_> what exactly did you do?

[08:10] <jaffa8> I wrote a small program

[08:10] <jaffa8> use STD;

[08:10] <jaffa8> my $e=1;

[08:11] <jaffa8> and ran perl6.exe on it.

[08:11] <moritz_> that's not how it works

[08:11] <moritz_> rakudo can't run it yet

[08:11] <moritz_> cd pugs/src/perl6

[08:11] <moritz_> make

[08:11] <moritz_> # and hope

[08:11] <moritz_> I don't know if anybody tried it on windows though

[08:16] <jaffa8> the lesson is

[08:16] <jaffa8> never base a project on one person.

[08:17] <moritz_> jaffa8: you're very welcome to increase our bus number

[08:17] <jaffa8> what is bus?

[08:18] <moritz_> http://www.c2.com/cgi/wiki?BusNumber

[08:18] *** eiro_ is now known as eiro

[08:19] <jaffa8> IS that a joke?

[08:19] *** dukeleto joined
[08:19] <moritz_> no, it's serious

[08:20] <moritz_> just that people don't have to be hit by a bus to drop out of a project

[08:20] <moritz_> they can just have a shift of interest, illness, a new job with no time left, whatever

[08:20] <jaffa8> exactly

[08:20] <jaffa8> the term is oversimplifying

[08:21] <moritz_> yes, but it's catchy :-)

[08:21] <moritz_> it has a nice second conotation

[08:21] <moritz_> a bus is a communication medium

[08:22] <moritz_> so if you have bus number of 1, only one person can efficiently program on that project

[08:22] <jaffa8> so what is the bus number of rakudo?

[08:23] <moritz_> 2, I'd say

[08:23] *** Eevee left
[08:24] <jaffa8> Specifically, who are they?

[08:24] <moritz_> jnthn and pmichaud

[08:29] <ihrd> ah, good link

[08:30] <ihrd> moritz_++

[08:33] <jaffa8> moritz_, why is catch in uppercase?

[08:33] <jaffa8> it does not look logical to me...

[08:33] *** masak joined
[08:34] <moritz_> jaffa8: all special blocks are, to make them stand out

[08:34] <moritz_> BEGIN, END, CATCH, CONTROL, PRE, POST, CHECK, INIT - you name it

[08:34] <moritz_> it's not only that they stand out - they might also be very useful names for the programmer to use for own stuff

[08:35] <jaffa8> it does look a big deal to me

[08:35] <jaffa8> it does not look a big deal to me

[08:35] <masak> greetings, perl6ers.

[08:35] <masak> jaffa8: you are so full of paradox!

[08:35] <moritz_> oh hai masak 

[08:36] <ihrd> moritz_: I find out why I had the strange error while 'make' tests

[08:36] <moritz_> ihrd: what was it?

[08:36] <ihrd> moritz_: It`s just another one Test.pir in my system

[08:37] <moritz_> oh. was it in PERL6LIB or something?

[08:37] <ihrd> yes, I just rm all of them, remake spectest and it works for now

[08:38] <masak> that's a weak definition of 'finding out' :)

[08:38] <masak> oh, another Test.pir. sorry. :/

[08:39] <masak> yesterday in a blog comment I argued against having several Test.pm (and, by extension, Test.pir) copies spread out over different repos.

[08:39] *** zamolxes left
[08:39] <masak> I don't think it's the responsibility of an average Perl 6 project to hold or copy in Test.pm.

[08:40] <masak> I think it only leads to chaos and bitrot.

[08:40] <ihrd> masak: yes, we should use one

[08:41] <ihrd> masak: and send patches instead of tweaking our own Test.pm :)

[08:41] <masak> maybe this is the right moment to finally codify the first practice in wtop...

[08:41] <masak> ihrd: oh, absolutely. :)

[08:41] <jaffa8> masak: what makes you think that?

[08:42] <jaffa8> What is the paradox?

[08:42] <masak> <jaffa8> it does look a big deal to me

[08:42] <masak> <jaffa8> it does not look a big deal to me

[08:43] <jaffa8> it was a typo

[08:43] <jaffa8> the main problems with perl 6 now

[08:43] <jaffa8> compiler is slow

[08:43] <jaffa8> the design is not implemented

[08:43] <jaffa8> the error messages are not the best

[08:44] <jaffa8> std.pm cannot be compiled.

[08:44] *** frederico_br left
[08:44] <jaffa8> not a big deal

[08:44] <ihrd> masak: sorry, I do`t catch, what is wtop?

[08:45] <masak> ihrd: it's a project mberends and I thought up: "Well-Thought-Out Practices". kind of like Perl::Critic for Perl 6 projects.

[08:45] <ihrd> masak: ah, thank you.

[08:46] <jaffa8> masak: I was responsing on moritz_'s response.

[08:47] <jaffa8> he wrote that INIT is an uppercase to allow the programmer to use init for his own use.

[08:47] <masak> jaffa8: that's one of the reasons, yes.

[08:47] <jaffa8> it would not bother me if INIT was in lower.

[08:47] <jaffa8> I would use init_program

[08:47] <jaffa8> or init_parsing

[08:48] <jaffa8> or whatever if it were a keyword

[08:48] <masak> jaffa8: another reason is that INIT is special in that it runs automatically.

[08:48] <masak> jaffa8: I'm glad it would hypothetically not bother you.

[08:48] <Matt-W> moritz_: great blog post on object creation btw. Liked it a lot.

[08:48] <Matt-W> moritz_++

[08:49] *** Matt-W sets mode: +o masak

[08:49] <masak> jaffa8: I'm also happy that Perl 6 gets out of the way in the way it does for common keywords.

[08:49] <moritz_> Matt-W: thanks, and glad that I could be of help

[08:49] <masak> the sigils help a lot with that, of course.

[08:49] <ihrd> ah, yes, join one's voice to that 

[08:49] <ihrd> I post link in my own blog :)

[08:49] <Matt-W> the all-caps stuff is a nice hint that Something Special Is Happening

[08:50] <Matt-W> a bit like .WHAT and .HOW and friends

[08:51] <masak> indeed.

[08:52] <moritz_> just like BUILD

[08:55] <sjohnson> Perl 6 Is A Big Deal

[08:55] <sjohnson> :)

[08:55] <masak> sjohnson: :)

[08:59] *** kidd joined
[09:00] *** al joined
[09:00] <moritz_> btw the server on which p6eval is hosted is down

[09:00] <moritz_> I apologize for the inconenience

[09:00] <moritz_> $ ssh [email@hidden.address]
[09:00] <moritz_> ssh_exchange_identification: Connection closed by remote host

[09:01] <masak> moritz_: no problem. thanks for a generally very consistent service.

[09:01] *** Gothmog_ left
[09:01] <moritz_> you're very welcome.

[09:14] *** braceta joined
[09:15] <jaffa8> moritz_, what is your role in Perl 6?

[09:16] <masak> moritz_ is our teddy bear. we hug him when we need to hug someone.

[09:16] <masak> he's also excellent at writing spectests and blog posts.

[09:16] <moritz_> lol

[09:16] <moritz_> jaffa8: according to masak <http://use.perl.org/~masak/journal/39445> I'm a Priest :-)

[09:17] <masak> oh, right. Priest.

[09:17] <moritz_> teddy priest?

[09:17] <masak> I get those two mixed up sometimes.

[09:17] <moritz_> jaffa8: we don't have fixed roles. I do what's necessary and within my scope

[09:17] <masak> moritz_: now that creates interesting mental images.

[09:17] <masak> moritz_++

[09:17] <moritz_> and I try to have fun along the way, which mostly works very well

[09:18] <carlin> http://www.bearfamilygifts.com/bear/priest-bear-hat-glasses-lisar.jpg

[09:19] * moritz_ can somewhat identify with that picture

[09:20] <masak> carlin: wow.

[09:20] <masak> that's uncanny.

[09:24] * Matt-W seems to recall classifying himself as a Warrior/Priest/Archer with Mage ambitions

[09:25] *** ihrd left
[09:25] <masak> something like that here too.

[09:26] <Matt-W> Most of my Perl 6 time is Priest though

[09:30] *** rfordinal left
[09:30] <masak> most of mine is Warrior, closely followed by Archer.

[09:31] <jaffa8> moritz_,your role seems to be pretty fixed to me.

[09:31] <moritz_> jaffa8: how so?

[09:32] <jaffa8> you are writing blogs.

[09:32] <jaffa8> Is that all ,right?

[09:32] <masak> certainly not.

[09:32] <masak> moritz_ is all over the place.

[09:32] <moritz_> lunch&

[09:32] <masak> even in the canteen!

[09:32] <jaffa8> evangelist?

[09:33] * moritz_ runs IRC logs, evalbot, the test suite, several Perl 6 apps, rakudo patches, ...

[09:33] <moritz_> really lunch&

[09:33] <masak> jaffa8: well, no need to bring religion into it, but sure.

[09:33] <Matt-W> moritz_ is part of the glue which holds the project together

[09:33] <jaffa8> masak, I just read it

[09:33] *** M_o_C joined
[09:33] <jaffa8> evangelist

[09:34] <jaffa8> it is used in programming field

[09:34] <masak> moritz_ is a very important cog in the machinery that keeps moving Perl 6 forward day by day.

[09:34] <masak> jaffa8: yes, because people keep applying religious metaphors to programming.

[09:34] <masak> jaffa8: like the Emacs/vim "holy wars".

[09:35] <masak> I've never truly grokked such exclusionist views of things.

[09:35] <masak> but maybe that's not what you meant.

[09:36] *** Gothmog_ joined
[09:37] <jaffa8> where is the exclusism in being an evangelist?

[09:38] <jaffa8> exclusionism

[09:38] *** guest_007 joined
[09:39] <masak> I was talking about the danger of exclusionism in applying the religion metaphor to the computer world.

[09:40] <masak> being an evangelist is fine, it's just not a word I tend to use to describe the concept.

[09:40] <masak> also, much of the promotion for Perl 6 that I see favourably brings in other languages, comparing and contrasting.

[09:41] <masak> Perl tends to do that a lot, given its very horizontal heritage.

[09:41] <masak> jaffa8: but you shouldn't pidgeon-hole moritz_ as only a PR man. he does a lot more around here.

[09:45] *** wayland76 joined
[09:46] *** hanekomu joined
[09:47] *** hanekomu left
[09:48] <masak> seems HTML 5 people have to be very clear about when HTML 5 will be 'ready': http://html5doctor.com/2022-or-when-will-html-5-be-ready/

[09:48] <Matt-W> o/ wayland76

[09:49] <wayland76> hi :).  I'll likely be in and out, because I'm trying to beat xorg into submission at the moment, and I'm using an X-based IRC client

[09:49] *** hanekomu joined
[09:50] <jaffa8> masak: Are you taking this thing a way too seriously?

[09:50] <wayland76> My answer is who cares, because XHTML2 is better than HTML 5 anyway :)

[09:50] <masak> wayland76: :)

[09:50] * sri_kraih falls off his chair laughing

[09:50] <masak> wayland76: wasn't XHTML2 scrapped?

[09:51] <wayland76> No, just some people got in a snit and developed HTML 5 as a competitor :)

[09:51] <masak> jaffa8: with 'this thing', do you mean computers? religion? life?

[09:52] <masak> I tend to take all those a little too seriously, I think.

[09:52] <carlin> wayland76: http://tech.slashdot.org/story/09/07/03/1447237/XHTML-2-Cancelled

[09:52] <jaffa8> masak: I mean the importance of what I think of moritz_

[09:52] *** ejs joined
[09:52] *** braceta left
[09:52] <wayland76> Ah, well, I looked into the whole thing earlier this year, so I guess I missed that one :)

[09:52] <wayland76> Thanks :)

[09:53] <masak> jaffa8: I'm just trying to guide you into seeing more aspects of moritz_. your current view seems a bit... one-sided.

[09:54] <wayland76> Does that mean that we never get XForms?

[09:54] <masak> wayland76: we already have XForms, no?

[09:56] <wayland76> Do we?

[09:56] <wayland76> What standard is it part of?

[09:56] <masak> I always thought it was a standard on its own.

[09:56] <Matt-W> it is

[09:56] <masak> but frankly, I'm not well versed in XForms.

[09:56] <Matt-W> XForms can fit into any XML application

[09:56] <Matt-W> thanks to the wonder of namespaces

[09:57] <Matt-W> but it was kind of intended for XHTML2

[09:57] <masak> :/

[09:57] <wayland76> Yes, but what about using them on the web?  

[09:57] <Matt-W> which was, in itself, pretty damn cool

[09:57] <Matt-W> oh well you need a browser which supports them...

[09:57] <Matt-W> there was a firefox extension which added xforms support at one point

[09:57] <Matt-W> but that was a long time ago

[09:57] <wayland76> Yeah, I don't care too much about XHTML2 itself, more about XForms and things like that.  

[09:57] <Matt-W> sadly I think they'll be gone in favour of ordinary crappy forms and lots of javascript :(

[09:57] <wayland76> There's still a Firefox/Seamonkey extension that does XForms

[09:57] <masak> theoretically, some browser could just go ahead and add full XHTML2 support, right?

[09:57] <Matt-W> oh yes

[09:57] <Matt-W> but they won't

[09:58] <masak> :(

[09:58] <wayland76> Well, apparently there's a namespace conflict between XHTML2 and HTML5

[09:58] <Matt-W> well that was stupid wasn't it

[09:58] <masak> namespace conflict?!

[09:59] <Matt-W> shouldn't XHTML2's be www.w3.org/$year/xhtml2

[09:59] <wayland76> Oh, seems like I ingested some FUD

[09:59] <Matt-W> there's a lot of FUD about XHTML2

[09:59] <wayland76> one guy said namespace conflict, another said not

[10:00] <Matt-W> some people saw a lack of backward compatibility and went mad

[10:00] <Matt-W> it's a bit like Perl 6 in that respect

[10:00] <Matt-W> only Perl 6 will not be scrapped

[10:00] <masak> *phew*

[10:01] <wayland76> Oh well, when Perl 6 is done, XHTML2 will be a simple matter of programming :)

[10:01] * masak wonders if there'll be a "save HTML2" movement

[10:02] <Matt-W> everyone's looking at HTML5

[10:02] <Matt-W> bloody web applications

[10:02] <Matt-W> mumble mumble

[10:02] <Matt-W> I do NOT want to write my desktop software in HTML!

[10:02] <Matt-W> it's not meant for it!

[10:02] <masak> it's inevitable.

[10:02] <Matt-W> no it's not

[10:03] <Matt-W> especially if people stop saying it's inevitable

[10:03] <masak> :)

[10:03] <Matt-W> I don't mind so much the idea of using browser tech

[10:03] <Matt-W> but HTML is ridiculously unsuitable

[10:03] <Matt-W> it's not even very good at normal documents

[10:04] <wayland76> Includentally, XHTML2 works partly now: http://w3future.com/weblog/gems/xhtml2.xml

[10:04] <Matt-W> I know people do impressive things with it, but it's usually because they're very clever or very persistent rather than because the tools are good

[10:04] <jaffa8> masak: ok

[10:05] <masak> jaffa8: sorry if I seemed overboard in any way. :) it was not my intent.

[10:05] <wayland76> ...it's just the way he is :)

[10:05] <masak> 哈哈

[10:05] <wayland76> That's why he fits in here :)

[10:05] <masak> Perl 6: all overboard!

[10:06] <carlin> I don't mind HTML, but JS/AJAX is painful

[10:06] <masak> carlin: it's mainly the DOM that's painful.

[10:06] <masak> JS in itself is a quite endurable language... with a bad rep.

[10:06] <wayland76> Well, XHTML2 would seriously reduce the amount of JS due to having cooler forms features :)

[10:07] <wayland76> The problem with JS is that it's not Perl 6, but apart from that, it's not too bad :)

[10:08] <masak> wayland76: I could dig out the guy who said it, but I forgot his name right now: "given that JavaScript was promoted to the ubiquitous programming language almost completely by accident... we could have ended up much worse."

[10:09] <jaffa8> masak, what is the meaning of overboard in this context?

[10:09] <masak> jaffa8: exaggerated.

[10:09] <jaffa8> And what have you exaggerated?

[10:10] <wayland76> Life, the universe, and everything :)

[10:10] <masak> I have exaggerated my breakfast. and yet, I'm hungry.

[10:11] <jaffa8> ok, that I am one-sided?

[10:11] <jaffa8> Or the importance of all of this?

[10:11] <jaffa8> or what?

[10:11] <masak> jaffa8: the importance of all of this.

[10:12] *** patrickas joined
[10:13] <masak> jaffa8: it's nice talking to you and all... but I get the feeling sometimes that you either do not have a 100% grip on the language, or you like living under bridges and taking toll fees from people who pass.

[10:13] <wayland76> Btw, I often wear a hat like that teddy bear :)

[10:13] *** donaldh joined
[10:13] <masak> wayland76: I think that might suit you very well. :)

[10:14] <masak> wayland76: in the future, I will picture you with that kind of hat when we chat. :)

[10:14] <wayland76> jaffa8: Watch this

[10:14] <wayland76> @karma-all

[10:14] <lambdabot>  "ethanbot2"          1454

[10:14] <lambdabot>  "moritz"              978

[10:14] <lambdabot>  "pmichaud"            643

[10:14] <lambdabot>  "jnthn"               584

[10:14] <lambdabot>  "lwall"               577

[10:14] <lambdabot> [1922 @more lines]

[10:15] <wayland76> I don't know how ethanbot2-- got up there, but you'll notice that moritz_ has the highest karma around here

[10:16] <wayland76> masak: Are you on Facebook?

[10:16] <masak> wayland76: heavens, no.

[10:16] <masak> I don't agree to their idea that the Web should have walls.

[10:16] <wayland76> No?  Ok.  I don't follow it much, but it's useful for finding people that I kind of know, but not well enough that I see them often

[10:17] <wayland76> Not even walls with graffiti on them?

[10:17] <masak> maybe that kind of wall.

[10:17] <masak> but not walls which you cannot see over.

[10:17] <masak> Larry Wall is allowed, too.

[10:19] <wayland76> So you don't like that lots of Facebook is password protected?

[10:19] <wayland76> Did you know that you can make your own part not password protected?

[10:19] <masak> wayland76: I don't not like it, I just stay away from it. it's not my Web.

[10:20] <wayland76> Ok.  

[10:20] <masak> phenny: tell jnthn that I hear some people wanting user-defined FETCH/STORE. is that on some schedule? I don't see it in docs/ROADMAP...

[10:20] <phenny> masak: I'll pass that on when jnthn is around.

[10:20] *** zamolxes joined
[10:21] <masak> wayland76: same reasoning as writing open-source software, actually. it lasts longer and feels more meaningful.

[10:21] <Matt-W> I basically only use Facebook to communicate with a certain group of people

[10:22] <Matt-W> I no longer view it as a means to create content

[10:22] <wayland76> No, I don't regard it as a way of creating content

[10:22] <Matt-W> I did for a brief, foolish few days

[10:23] <wayland76> But, for example, I met a guy recently, and all I know is his name and his brother.  I haven't seen or heard from the brother in months, and have no contact details for either, but because the brother is my facebook friend, I could write and ask for the other brother's e-mail address

[10:23] <Su-Shee> I clicked me with the same people I already clicked in orkut, xing and so on and now everybody has clicked each other again so we can go back to business. ;)

[10:24] <wayland76> I'm basically only on Facebook.  I have a MySpace, but nothing ever happens there, except the occasional message from a band I like

[10:24] *** meppl joined
[10:25] <Matt-W> I despise MySpace

[10:25] <Matt-W> Not on a conceptual level

[10:25] <Matt-W> Because that's not really any different to any of the others

[10:25] <Matt-W> but because their design and markup is so incredibly horrible

[10:26] <wayland76> Yeah, I've noticed that.  I had to put in a good solid effort to make it look alright :)

[10:26] <Matt-W> I didn't even try

[10:26] <Matt-W> I've only got an account to help me poke around in other people's :)

[10:26] <Matt-W> my profile contains nothing at all

[10:27] <Matt-W> Facebook I approve of more because they start out with a pretty decent design and don't let people break it

[10:27] <Matt-W> shame about the apps platform

[10:27] <Su-Shee> ah well.. I have irc. :)

[10:27] <wayland76> What's wrong with the apps platform?

[10:27] <Matt-W> silly games

[10:28] <Matt-W> I get an endless stream of invites from games and quizzes my contacts are playing

[10:28] <Su-Shee> which mostly already were silly web games ;)

[10:28] <Matt-W> yes but I could ignore them more effectively then

[10:28] <wayland76> I'm messaging a few people my myspace URL because I don't want it in the logs, etc :)

[10:30] <wayland76> masak: Another good reason to get Facebook ... there are pictures of my hat :)

[10:30] <Su-Shee> iiiih wayland76 - it's _translated_ :))

[10:30] <masak> wayland76: as irresistable as that sounds...

[10:32] <wayland76> Su-Shee: Is that a problem?

[10:33] <Su-Shee> wayland76: oh yes :) because it's an automated translatation. sounds plain "off" :)

[10:33] <wayland76> Ah, well, just look at my picture then :)

[10:33] *** alanhaggai joined
[10:33] *** kyle_l5l left
[10:33] <Su-Shee> looks very country. :) 

[10:34] <wayland76> :)

[10:34] <wayland76> With a cravat?

[10:34] <wayland76> Well, maybe :)

[10:35] <wayland76> But if you put that hat from the teddy bear on me.... :)

[10:36] *** moritz_ sets mode: +o wayland76

[10:40] <Su-Shee> my office view says "swimming pool", "cafe", "river" and all this in bright sunlight... how very motivating...;)

[10:42] *** rfordinal joined
[10:44] *** riffraff joined
[10:46] *** szabgab left
[10:52] <jnthn> dobry den, #perl6

[10:52] <phenny> jnthn: 10:20Z <masak> tell jnthn that I hear some people wanting user-defined FETCH/STORE. is that on some schedule? I don't see it in docs/ROADMAP...

[10:52] <masak> lolitsjnthn

[10:52] <jnthn> masak: It may not be too hard to do, just need to work out exactly how.

[10:53] <masak> \o/

[11:04] *** rjh joined
[11:14] *** eMaX joined
[11:18] *** SmokeMachine left
[11:20] *** donaldh left
[11:20] *** donaldh joined
[11:29] *** brrrrr joined
[11:33] <jaffa8> wayland76, what has popularity have to do with anything?

[11:36] <jnthn> Gah, my brane won't work today. :-/

[11:41] *** szabgab joined
[11:45] *** payload left
[11:49] <wayland76> jaffa8: Well, he gets the karma when he's been helpful in some way

[11:49] <wayland76> Although the number of helps is what counts -- a big help counts for the same as a small one :)

[11:50] <masak> ...which promotes long-term helpfulness, not just one-off stunts.

[11:50] * wayland76 offers jnthn an oil filter for his brain

[11:51] <wayland76> Well, my point is, moritz_ does lots of little things around, and that's what got him the karma.  Our higher-level mages don't have the same level, but tend to produce their help in larger blocks.

[11:56] <masak> (and karma gets reset occasionally, making it even more approximate)

[11:58] *** takadonet joined
[11:58] <takadonet> morning all

[11:58] *** yves joined
[11:59] <masak> takadonet: o/

[11:59] <takadonet> masak: How are you doing today?

[12:00] <masak> takadonet: I am doing adequately, thank you. and you?

[12:00] <takadonet> masak: Doing good

[12:02] *** kidd left
[12:07] <jaffa8> Is there a webpage where I can try long programs on std

[12:07] <jaffa8> ?

[12:08] *** mikehh left
[12:08] <polettix> rakudo: my @a; my $x = 1; @a.push($x); $x++; @a.say;

[12:09] <polettix> uhm, no

[12:09] <carlin> polettix: the bot is offline

[12:09] <masak> polettix: evalbot's server is down. :/

[12:09] <polettix> ach

[12:09] <polettix> I get 2 printed in rakudo, I'd expect 1

[12:09] <jnthn> known

[12:09] <polettix> ok

[12:09] <jnthn> (yes, bug)

[12:09] <masak> polettix: but thanks. :)

[12:10] <jnthn> I did try fixing it once and oddly it broke Other Things. :-/

[12:10] <polettix> fine, I'll add an "as copy" then :)

[12:11] <polettix> s/as/is/

[12:13] <masak> polettix++ # works around

[12:14] * jnthn should maybe try and fix it tomorrow.

[12:14] <polettix> complaint-driven development? :)

[12:15] <moritz_> jnthn: are you doing a rakudo day tomorrow?

[12:15] <moritz_> polettix: we partly do that, yes.

[12:15] <jnthn> moritz_: Aye, plan to.

[12:16] <polettix> well, I'm not complaining anyway, playing with perl6 is awesome

[12:16] <carlin> it's the best kind of development, given that everything no one uses works fine ;)

[12:16] * jnthn prefers to call it "feedback driven development" :-)

[12:16] <polettix> [performance apart of course :)]

[12:17] *** abra joined
[12:18] <masak> carlin: :)

[12:18] <masak> polettix: Rakudo is awesome, the performance is a...w...e...s...o...m...e...

[12:20] <takadonet> man.... it really suck trying to keep 3 computers with latest version of rakudo. Always confuses me why some tests pass on certain computers and not others. Till I realizes forgot to update rakudo.

[12:20] <jnthn> Good job pmichaud and I are both planning on improvements that will aid performance in various areas then. :-)

[12:20] <takadonet> excellent

[12:21] <masak> takadonet: make it a one-keypress action to update.

[12:21] <jnthn> Plus the Parrot folks are building profiling tools to help us know why we're slow.

[12:21] <Matt-W> ooh good for them

[12:21] <jnthn> But yes, I fully agree - performance is sucky.

[12:21] <takadonet> masak: I do but still forget to update :)

[12:21] <masak> takadonet: update every morning with your morning yoghurt. I do. :)

[12:22] <takadonet> I should

[12:22] * moritz_ doesn't eat yoghurt regularly, but still updates his rakudo regularly :-)

[12:22] * masak smiles and plays "Living on the edge"

[12:23] * Matt-W bleeds a lot

[12:24] <carlin> it's a sign of a balanced lifestyle; maintaining a good yoghurt:rakudo-updates ratio

[12:24] <wayland76> I eat yoghurt more regularly :)

[12:27] <masak> we have a fair number of branches on http://github.com/rakudo/rakudo/ -- are there any outdated ones that can be removed?

[12:28] <moritz_> the autounfudge-with-limits and mail-patch branches are still valuable

[12:28] <jnthn> Probably

[12:29] <moritz_> I doubt that ins and ins2 are of any use though (maybe pmichaud can comment)

[12:29] <jnthn> In half an hour, that github page will have loaded, and I'll tell you.

[12:29] <masak> :)

[12:30] <moritz_> jnthn: git-branch -r also shows all remote branches

[12:30] * jnthn got the page with the crying thingy that looks like a cat and an octopus had a kid together

[12:31] <wayland76> Wait, doesn't the latest rakudo include the changes from ins2?

[12:31] <jnthn> wayland76: yes

[12:31] <wayland76> ins is dead

[12:31] <moritz_> wayland76: which is why we don't need that branch anymore

[12:31] <wayland76> Ah, I see the question now :)

[12:32] *** ejs left
[12:41] *** payload joined
[12:57] <jaffa8> Whare are talking about the speed of the compiler or the speed of generated code?

[12:57] <jnthn> jaffa8: Both.

[12:57] <moritz_> mostly of the generated code, I think

[12:57] <moritz_> but many performance improvements will affect both

[12:58] *** carlin left
[12:59] <jaffa8> I wonder

[12:59] *** carlin joined
[12:59] <jaffa8> Is there any optimasion in parrot?

[12:59] <jaffa8> I mean automatic one.

[13:01] <jaffa8> What is the objective performance of Perl 6?

[13:01] <jaffa8> Has anyone measured that?

[13:02] <moritz_> the JIT runcore can be seen as optimization

[13:02] <moritz_> Perl 6 is a language specification, and as such has no performance

[13:02] <moritz_> only implementations have performance

[13:02] <moritz_> and rakudo is currently ~500 times slower than perl5

[13:02] *** _jaldhar left
[13:02] <jaffa8> I mean implementation

[13:03] *** _jaldhar joined
[13:03] <jaffa8> In what?

[13:03] <jaffa8> What is slower?

[13:03] <jaffa8> The code execution?

[13:04] <moritz_> running a simple program in both

[13:04] *** beggars joined
[13:04] <moritz_> including compilation and run time

[13:04] <moritz_> anyway, feel free to do your own benchmark

[13:04] <jaffa8> what about runtime in itself without compilation?

[13:04] <moritz_> (and be sure to compile parrot with --optimize for fairness)

[13:04] <moritz_> I don't know, never tried.

[13:05] <jaffa8> I suspect compilation accounts for most of it.

[13:05] <moritz_> don't suspect. Try it!

[13:06] <jaffa8> It toook 5:40 seconds

[13:06] <jaffa8> to compile 3000 lines program

[13:06] <jaffa8> and give an error message

[13:07] <jaffa8> I have a look

[13:07] <jnthn> Is that 5 mins 40 seconds or 5.4 seconds?

[13:07] <jaffa8> 5 minutes

[13:07] <jnthn> wow

[13:07] <masak> that's... slow.

[13:08] <jnthn> Unusually slow.

[13:08] <masak> aye.

[13:08] <masak> compilation here takes seconds, not minutes.

[13:08] <jaffa8> if I just use configure.pl

[13:09] <jaffa8> What kind of code would that produce?

[13:09] <jaffa8> Debugged or optimised?

[13:09] <moritz_> debugging

[13:10] <moritz_> jaffa8: try perl Configure --gen-parrot --gen-parrot-option=--optimize

[13:10] <moritz_> and then rebuild

[13:10] <moritz_> and try again

[13:10] <moritz_> should be about 30% faster, or so

[13:10] <jaffa8> 30%?

[13:10] <jaffa8> that is not mch

[13:11] <jaffa8> masak: How big is your code?

[13:11] *** molaf joined
[13:11] <masak> jaffa8: good question. hold on.

[13:14] <jaffa8> it is 5:30 seconds.

[13:14] <jaffa8> now

[13:14] <jaffa8> What have you expected?

[13:14] <jaffa8> How should It be?

[13:14] <jaffa8> How fast should It be?

[13:15] <jaffa8> Should it compile it in 10 seconds?

[13:15] <jaffa8> Is it backtracking parser?

[13:16] <jaffa8> Is rakudo a backtracking parser?

[13:16] <takadonet> Looks like someone is on a coffee high...

[13:17] <masak> :)

[13:19] *** M_o_C left
[13:20] <jnthn> jaffa8: No, it (hardly ever) backtracks.

[13:21] <jnthn> jaffa8: I'd expect an order of magnitude performance gain on the parsing once we have proto-regexes in place.

[13:21] <jnthn> And are using those.

[13:21] <jnthn> Since those drastically cut down the search space.

[13:21] <jnthn> At the moment we try a lot of things when parsing that we coulda ruled out in advance.

[13:22] <jaffa8> no cofee, just me.

[13:22] <takadonet> jaffa8: Good to hear

[13:25] *** Front_slash joined
[13:26] *** orafu left
[13:26] *** orafu joined
[13:27] <masak> jaffa8: the November codebase is ~2000 lines of code (incl empty lines and comments) spread over ~20 .pm files. it takes 50 seconds for Rakudo to parse it all on my computer,

[13:29] <masak> so, about 40 lines per second.

[13:31] <wayland76> 'night all

[13:31] <masak> wayland76: o/

[13:32] <Su-Shee> does p6 have a goto? :)

[13:32] <jaffa8> Whare you?

[13:32] <jaffa8> Whare are you?

[13:32] <moritz_> Su-Shee: afaict yes

[13:32] <wayland76> Australia

[13:32] <masak> buubot: spack goto

[13:32] <buubot> masak: Couldn't match input.

[13:32] <masak> :/

[13:33] <masak> Su-Shee: anyway, it's in S04.

[13:33] *** mtkatwork joined
[13:33] *** abra left
[13:35] *** abra joined
[13:35] <Su-Shee> hrmpf. ;)

[13:35] <Su-Shee> now I can't reasonably say "it has to go, won't exist in p6 anymore anyway!" ;)

[13:37] <masak> Su-Shee: goto is a reasonable, very simple construct. we have abstracted away most of its uses in loops and if statements, but it can still be useful in its bare form.

[13:38] <moritz_> masak: simple? I doubt that

[13:38] <moritz_> masak: you know there are scopes to consider...

[13:38] <masak> moritz_: that is true.

[13:38] <jnthn> tbh, I haven't got the slightest clue how on earth we're going to make goto work.

[13:38] <moritz_> if it were all that simple, rakudo would support it by now

[13:39] <jaffa8> yes, goto looks simple

[13:39] <Matt-W> Make it only work within the same scope

[13:39] <jaffa8> there is goto in PIR

[13:39] <Matt-W> But don't tell anybody

[13:39] <masak> moritz_: one could support a limited form of it... in-scope goto or some such.

[13:39] <jnthn> jaffa8: lol

[13:39] * moritz_ wonders if TimToady insists on having a general goto

[13:39] <Su-Shee> let it silently die. :)

[13:39] <moritz_> or mark it as post-6.0

[13:39] <jnthn> jaffa8: The goto in PIR is also block-limited.

[13:40] <Matt-W> general goto is just too painful

[13:40] <jnthn> sub foo { label: if 42 { goto label; } } # own't work, goto is in a different block

[13:40] <jnthn> *won't

[13:40] <Matt-W> also almost completely useless

[13:41] <moritz_> so can be omitted altogether :-)

[13:41] <jaffa8> what about the assembler?

[13:41] <jaffa8> pasm?

[13:41] <moritz_> PIR doesn't have scopes as Perl 6

[13:41] <moritz_> neither does PASM

[13:41] <carlin> Whenever conversation starts about goto I'm reminded of this: http://xkcd.com/292/

[13:42] <Matt-W> that might have to go up on my desk at work

[13:44] <jaffa8> jnthn,,   moritz_ says there are not scopes in PIR

[13:45] <Matt-W> no, he said there aren't scopes like Perl 6's

[13:45] <Matt-W> doesn't mean it doesn't have its own

[13:45] <jnthn> jaffa8: Perl 6 block == Parrot Sub.

[13:49] <jaffa8> I guess there is if block as well

[13:49] <jaffa8> and loop block

[13:50] <jnthn> A form of goto that only lets you jump within the current scope or to a lexical outer scope would probably be do-able without excessive pain, and cover a lot of the use cases.

[13:51] <Matt-W> it's the only time I ever use it

[13:51] <jaffa8> why? SHould goto be able to jump into another procedure?

[13:51] <Matt-W> noooooooooooooo

[13:51] <carlin> But not implementing it would be completely painless and lower raptor deaths

[13:52] <Matt-W> jnthn: put it down for after Rakudo Star

[13:52] <jaffa8> programming ne pain. IMO.

[13:52] <jnthn> Matt-W: I suspect it already was. :-)

[13:52] <Matt-W> jnthn: no doubt

[13:52] <Matt-W> far more important things to worry about

[13:53] <jnthn> Matt-W: Unless some enterprising soul comes along and implements it, it's unlikely to happen before then.

[13:53] <jaffa8> if ($programming eq "pain") { print "this is something wrong"}

[13:53] <jnthn> I'm uninterested in implementing it.

[13:53] <Matt-W> jnthn: I'm not going to take that bait

[13:53] <Su-Shee> I'll refactor my gotos here into perl nirvana anyway. I've never once used goto in Perl.

[13:54] <jaffa8> Su-Shee, it is only about you, it is about humanity

[13:54] <jaffa8> s/it is/it is not/

[13:55] <Su-Shee> yeah, but I just asked for it. ;)

[13:55] <carlin> humanity would be better off without goto :)

[13:55] <Matt-W> humanity does not require goto in Perl 6

[13:55] <jaffa8> Are you sure?

[13:55] <Matt-W> yes

[13:56] <Matt-W> however, there may be some benefit from a sane version

[13:56] <jaffa8> I think it is like hyperjump, Stargate, instantenous travelling.

[13:56] <Su-Shee> jaffa8: yeah and years later everybody asks themselves how they ended up here. ;)

[13:56] <carlin> Yes, pity it's difficult to do that travelling while reading the code

[13:57] <jaffa8> With a good ide, you can travel.

[13:57] <jaffa8> within a sec.

[13:57] <Matt-W> I'm not sure there's any kind of IDE which can help you make sense of goto-spaghetti

[13:58] <jaffa8> there may be visual representation of the code

[13:58] <jaffa8> Also, who said it should be overused?

[14:00] <Su-Shee> my goto here is a replacement for checking for some settings first. instead, it jumps into goto "when the setting situation comes along" instead of checking it first and depend everything else later on the setting.

[14:02] <Matt-W> I am admittedly usually the last person to argue in favour of avoiding a potentially troublesome language feature

[14:02] <Matt-W> But unrestricted goto is just too horrible to contemplate

[14:04] <moritz_> "As in Perl 5, it is possible to goto into a lexical scope, but only for lexical scopes that require no special initialization of parameters"

[14:04] <moritz_> that's not unrestricted at all

[14:04] *** KyleHa joined
[14:04] <moritz_> it means you can't goto into a method, for example

[14:05] <Matt-W> that's acceptable :)

[14:05] * moritz_ recommends reading S04

[14:06] <moritz_> "You may not go into a given or a for, though, because that would bypass a formal parameter binding"

[14:06] <moritz_> uhm, but doesn't 'if' also do formal parameter binding?

[14:06] <moritz_> if $x -> $y { say $y }

[14:07] *** nihiliad joined
[14:08] <Matt-W> It does if you do that form of if

[14:08] <Matt-W> but surely the ordinary form doesn't

[14:08] <Matt-W> if $x { say "cow"; }

[14:09] *** eMaX left
[14:10] *** eMaX joined
[14:11] *** hanekomu left
[14:14] *** polettix left
[14:14] *** M_o_C joined
[14:15] *** payload left
[14:25] <jnthn> The branch re-dispatch-1 can go.

[14:26] *** Psyche^ joined
[14:28] *** rfordinal left
[14:28] *** pmurias joined
[14:30] <masak> jnthn: done.

[14:31] <jnthn> masak++

[14:31] <masak> the syntax is `git push origin :re-dispatch-1` for some inscrutable reason.

[14:32] <masak> "strangely inconsistent" :P

[14:33] <moritz_> do you have to delete them first locally?

[14:33] *** riffraff left
[14:33] <masak> moritz_: not that I know.

[14:34] <masak> but I didn't have a local copy of that branch, so maybe.

[14:35] <masak> ah. reading the manpage for 'git push' makes it a little less arbitrary having the colon there.

[14:36] *** ruoso joined
[14:39] <masak> what happens if you pass a positional, and then the same argument as a named parameter?

[14:40] *** mikehh joined
[14:40] <moritz_> presumable the same as if you passed the same twice as named

[14:42] *** Patterner left
[14:42] *** Psyche^ is now known as Patterner

[14:43] <masak> last-one-wins?

[14:43] <moritz_> dunno

[14:43] <masak> ISTR that was the behaviour for two nameds.

[14:43] <moritz_> rakudo: sub a (:$b) { say $b }; a(:b(4), :b(1))

[14:43] <moritz_> DAMMIT

[14:43] <masak> :)

[14:44] *** EDevil joined
[14:45] *** payload joined
[14:45] <moritz_> mlenz@wvbh074:~$ perl6 -e 'sub a (:$b) { say $b }; a(:b(4), :b(1))'

[14:45] <moritz_> duplicate named argument - 'b' not expected

[14:45] <moritz_> jnthn++ # don't know if that's how it's specced - but the error message is awesome

[14:46] <jnthn> moritz_: Heh, that's a Parrot error message actually. ;-)

[14:46] <moritz_> oh

[14:46] <jnthn> moritz_: BTW, is that the correct semantics?

[14:46] <moritz_> parrot++ then

[14:46] <moritz_> jnthn: no idea.

[14:47] <pmurias> ruoso: hi

[14:48] <moritz_> S06 doesn't seem to mention it

[14:48] <masak> "Perl 6 allows multiple same-named arguments, and records the relative order of arguments with the same name. When there are more than one argument, the C<@> sigil in the parameter list causes the arguments to be concatenated [...] Other sigils bind only to the I<last> argument with that name"

[14:48] <moritz_> oh

[14:49] <masak> I had to look a while for it, too.

[14:49] <jnthn> ouch

[14:49] <jnthn> That's going to be fun to implement. :-)

[14:49] <masak> :)

[14:49] <jnthn> Good job we're moving away from Parrot's binder. :-)

[14:49] <moritz_> well, maybe there's room for negotiation here

[14:50] <moritz_> I don't think it's particularly useful

[14:50] <Matt-W> I can see uses for it

[14:50] <moritz_> it can generate hard to debug errors

[14:50] <Matt-W> but yes, it could

[14:50] <moritz_> foo(:a, :b, [ten more lines] :!a)

[14:51] <moritz_> "I called it a with :a, why is :$a false?"

[14:51] <Matt-W> because you aren't reading your code properly!

[14:51] <Matt-W> at least we *have* named arguments

[14:52] <Matt-W> maybe multiple named arguments should be something the routine has to say it accepts

[14:52] <Matt-W> not entirely sure about the utility of accepting multiple ones when it just uses the last silently

[14:52] <jnthn> BTW, for those interested in module install etc toolchain stuff for Perl 6, Alias just pointed out on #parrot the #toolchain channel, which may be a source of input.

[14:52] <masak> Matt-W: flattened hashes.

[14:53] <pmurias> where can i find the remains of the perl 5 to perl 6 translator?

[14:53] <moritz_> masak: that's the one use case I could think of

[14:53] <jnthn> (It was mentioned in the context of the Parrot module stuff that japhb was playing with, but may be applicable here.)

[14:55] <jaffa8> What is the story of perl 5 to perl 6 translator?

[14:55] *** szabgab left
[14:57] <moritz_> jaffa8: Perl 5 has a backend (MAD) which emits something XML-like for perl 5 code

[14:57] <pmurias> it used to be a gsoc project

[14:58] <moritz_> jaffa8: and there was a gsoc project to translate that into Perl 6 code

[14:58] <pmurias> it lived in the pugs repo from what i can remember

[14:58] <moritz_> iirc the source code is stil in the pugs repo

[14:58] <ruoso> hi pmurias 

[14:58] <Matt-W> I didn't know about that

[14:59] <jaffa8> Is Mad complete?

[15:00] <pmurias> ruoso: do you know where should we replace the smopp5 runloop with the polymorphic one?

[15:00] <pmurias> jaffa8: it used to preserve all info

[15:01] <pmurias> re translator misc/pX/Common/P5_to_P6_Translation

[15:03] <pmichaud>  good morning, #perl6

[15:03] <masak> morning, pm.

[15:03] <moritz_> oh hai pmichaud 

[15:04] <Matt-W> oh hai!

[15:05] *** nihiliad left
[15:06] <masak> if I could make a modest proposal for a spec simplification, it would be this: for nameds not coming in through hashes, disallow duplicate nameds, period. allow a flattened hash to either override (if it comes after) or be overridden by (if it comes before) the explicit named params.

[15:06] <moritz_> is that really simpler?

[15:07] <masak> I think so.

[15:07] <jnthn> pmichaud: morning

[15:07] <masak> it would catch coding errors in the form of accidentally duplicated nameds.

[15:08] <masak> it would also cause saner semantics for nameds whose values are lists.

[15:10] *** Eevee joined
[15:11] <pmurias> would it be worthwhile to revive the p5 to p6 translator?

[15:11] <masak> pmichaud: I've been admiring compilers/pge/PGE/Exp.pir today. :)

[15:11] <masak> pmurias: I think so.

[15:11] <moritz_> pmurias: IMHO it would make to wait until the possible targets support more of Perl 6

[15:12] <moritz_> *make sense*

[15:12] <pmichaud> masak: where "admiring" == "in complete awe of how someone can make such a big mess of things?"   ;-)

[15:12] *** frew left
[15:12] <carlin> are +<= / +>= mention anywhere in the specs? Couldn't find them in S03 (and it would be a big help if they were in Differences.pod ;) )

[15:12] <masak> pmichaud: it's not a big mess.

[15:12] <pmichaud> :-)

[15:12] <masak> pmichaud: for what it does, it's quite well organized.

[15:12] <pmurias> moritz: rakudo supports most of the common stuff doesn't it?

[15:12] <pmichaud> masak: thanks

[15:12] <moritz_> pmurias: and it would make sense to write it in Perl 6. Haskell hackers are hard to find within the perl community

[15:12] <masak> pmichaud: of course, PIR-producing PIR is scary in itself... :P

[15:12] <moritz_> pmurias: for some value of "common", yes :-)

[15:13] <pmurias> moritz_: the orginal code is very poorly written so it's not really worth keeping it

[15:13] <masak> or you could write it in Perl 5, and conv... oh wait.

[15:14] <jnthn> The translator being able to translate itself would be kind the point you know that it's really working. :-)

[15:14] <moritz_> I see two options for a 5 -> 6 converter

[15:15] <moritz_> either it works like a normal compiler, and produces code that doesn't have much in common with the source

[15:15] <masak> jnthn: true. you could run both it and it-but-converted on itself, and see if they both produce the same Perl 6 program. :)

[15:15] <moritz_> or it tries to do some fuzzy translation, which will not always be what the users wants, but much closer to the source, and more readable

[15:16] <pmurias> i think the second choice is preferable

[15:16] <masak> but teh hard.

[15:16] * moritz_ too

[15:16] <moritz_> but it wouldn't be able to bootstrap :-)

[15:17] <pmurias> why not? if you avoid things that don't translate it should bootstrap itself easily

[15:18] <moritz_> anyway, if it were my project I'd write it in Perl 6 in the first place

[15:18] <pmurias> most of the stuff in p5 could be translated fairly easily

[15:19] <moritz_> however there's not yet a Perl 5 grammar available in Perl 6, so it might be worth using PPI

[15:19] <Su-Shee> <-- home. later.

[15:19] <pmurias> why not use MAD?

[15:19] *** Su-Shee left
[15:20] *** donaldh left
[15:20] <masak> does MAD work for 5.10?

[15:20] <moritz_> it should

[15:20] <moritz_> it's not very convenient though

[15:20] <moritz_> you have to specially compile your Perl 5 to use it

[15:20] *** donaldh joined
[15:21] <moritz_> but of course it's the option that offers the most accurate parse trees

[15:22] *** finanalyst left
[15:24] *** mtkatwork left
[15:25] <jaffa8> Can you explain this line in Perl:*FROM = *$from{FILEHANDLE};?

[15:26] *** nihiliad joined
[15:27] <masak> jaffa8: this is not #perl, it's #perl6.

[15:32] *** carlin left
[15:34] <masak> we're often off-topic here, but we prefer not to become a general Perl help channel. there are already good such channels.

[15:35] <jaffa8> no problem, there are other way of seeking help.

[15:36] *** cdarroch joined
[15:36] <jaffa8> ways.

[15:37] *** arnsholt joined
[15:38] <masak> also, in some sense, we prefer missing the future rather than missing the past. :)

[15:38] <masak> er, in the 'longing for' sense.

[15:38] *** frew joined
[15:44] <arnsholt> masak: It's a lot easier to feel a longing for what you've had and know, than something you haven't and don't

[15:44] <arnsholt> That's my theory, anyways

[15:44] <masak> arnsholt: I have Perl 6.

[15:44] <arnsholt> Hooray! =)

[15:44] <masak> \o/

[15:45] <arnsholt> Is there a scrollback bot, BTW? I'm probably missing out on a certain amount of context to the two lines by you I read

[15:46] <masak> arnsholt: http://irclog.perlgeek.de/perl6/2009-08-24

[15:47] <arnsholt> Gracias

[15:47] *** beggars left
[15:48] <jaffa8> arnsholt,unless you have seen others having it

[15:48] <jaffa8> So you may think it will be good for you too.

[15:49] <arnsholt> Good point

[15:52] *** brrrrr left
[15:53] *** rfordinal joined
[15:57] <ruoso> pmurias, first we need to define the strategy we're going to use...

[15:58] <ruoso> my initial plan was to add another variable to the current interpreter and have a PolymorphicEvalOP that would execute $continuation.next

[16:02] *** masak left
[16:02] <ruoso> pmurias, that would also mean that the "goto" implementation would get the current p5 state and save as $continuation.back

[16:17] *** rfordinal left
[16:28] *** Su-Shee joined
[16:28] *** charsbar left
[16:28] *** charsbar joined
[16:30] *** rindolf joined
[16:30] <rindolf> Hi all.

[16:30] <rindolf> Does Rakudo support PERL6LIB?

[16:30] <rindolf> Or RAKUDOLIB or something?

[16:30] <rindolf> Someone is asking us about it on #padre  on irc.perl.org

[16:31] <moritz_> rindolf: PERL6LIB, yes

[16:31] <rindolf> moritz_: OK.

[16:32] <takadonet> that's me rindolf :)

[16:32] <moritz_> there's also BEGIN { @*INC.push: 'path' }

[16:32] <rindolf> takadonet: ah.

[16:32] <takadonet> STD.pm in Padre is not finding any of my modules that have created....

[16:32] <Su-Shee> full-service rindolf.. :)

[16:33] <moritz_> takadonet: well, STD.pm != rakudo

[16:33] <takadonet> I know

[16:34] <takadonet> Was hope to get rid of those silly message saying it cannot find my modules in padre

[16:42] *** zamolxes left
[16:52] *** jferrero joined
[16:55] *** lambdabot left
[16:55] *** Limbic_Region joined
[16:57] <moritz_> I don't know what I should make of http://rt.perl.org/rt3/Ticket/Display.html?id=68760 - is it spam?

[16:57] *** justatheory left
[16:57] *** ruoso left
[16:59] *** lambdabot joined
[17:02] *** adam-pwgsc joined
[17:08] *** jauaor left
[17:12] <jnthn> moritz_: Heh, not sure.

[17:12] *** justatheory joined
[17:12] <jnthn> moritz_: I'm not sure how you'd accidentally send that... :-|

[17:12] <jnthn> People do manage to achieve all sorts though. ;-)

[17:13] <TimToady> clicked on a mailto: link somewhere?

[17:13] *** justatheory left
[17:13] *** EDevil left
[17:16] * moritz_ currently spectests the patch from http://rt.perl.org/rt3/Ticket/Display.html?id=68296

[17:39] *** alanhaggai left
[17:45] *** frederico joined
[17:53] *** japhb left
[17:55] *** Daenyth_ joined
[17:55] <Daenyth_> o/

[17:56] *** Daenyth_ is now known as Daenyth

[17:56] <moritz_> welcome Daenyth 

[17:56] <Daenyth> How's it going? :)

[17:56] <TimToady> would you like a commit bit? :)

[17:56] <Daenyth> for rakudo on github? I wouldn't object.. :)

[17:57] <TimToady> I only have some pugs repo commit bits, alas

[17:57] <moritz_> we hand out commit bits for the pugs repo (test suite, STD.pm, synopsis) freely

[17:57] <TimToady> but with those you can hack tests or spec

[17:57] <Daenyth> I think I have one for pugs actually

[17:57] <Daenyth> afk, some errands to run

[17:57] *** Front_slash left
[17:58] <moritz_> Daenyth: right (if you hav $nick@gmail.com)

[17:58] <moritz_> *have*

[17:58] <TimToady> *HAZ*

[17:59] <moritz_> ah right. KANNOD GET USED TO KNEW SPELING

[17:59] <jaffa8> Hi

[18:10] *** jferrero left
[18:12] <Su-Shee> we can stop all efforts. perl 6 is ready: Su-Shee: Chuck Norris also wrote a complete Perl 6 implementation :)

[18:13] <moritz_> Su-Shee: but did he release it? ;-)

[18:14] <Su-Shee> :)

[18:14] *** hercynium joined
[18:15] *** japhb joined
[18:16] <jaffa8> Why not Swarzenegger?

[18:17] <moritz_> because Chuck Norris doesn't write Schwarzenegger jokes

[18:17] <Su-Shee> jaffa8: too weak. only chuck can do it. :)

[18:17] <jaffa8> Look at how far Swarzengegger have got!

[18:18] <jnthn> If Chuck Norris ran California, it would have recovered from the recession before the recession even started!

[18:18] <jnthn> ;-)

[18:18] <jaffa8> What makes you think that?

[18:18] *** leedo left
[18:18] <Su-Shee> jnthn: if chuck ran California, it would never had seen a recession.. :)

[18:18] <jaffa8> I am not sure about that.

[18:18] *** leedo joined
[18:19] *** frederico left
[18:19] *** abra left
[18:21] *** frederico joined
[18:21] <moritz_> what should a Perl 6 japh for Rakudo Star print?

[18:21] <moritz_> "Just another Perl compiler,"?

[18:21] <jaffa8> Sushi?

[18:22] <TimToady> Just another Perl

[18:22] <moritz_> TimToady++ # nice idea

[18:24] <dalek> rakudo: 7512462 | (Gianni Ceccarelli)++ | src/ (2 files):

[18:24] <dalek> rakudo: move pick to setting

[18:24] <dalek> rakudo: Signed-off-by: Moritz Lenz [email@hidden.address]
[18:24] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/7512462c718a2f4eb978d7110f4832a38946d25e

[18:26] *** pioto joined
[18:26] *** frederico left
[18:27] *** justatheory joined
[18:28] *** frederico joined
[18:31] *** frederico left
[18:41] *** Su-Shee left
[18:57] <frettled> He probably got it from Chuck Norris.  ;)

[19:00] <rindolf> She was quoting me.

[19:00] <rindolf> http://perl.net.au/wiki/Perl_Humour#Chuck_Norris_and_Perl_6

[19:01] *** masak joined
[19:02] <jnthn> lolitsmasak

[19:02] <jnthn> :-D

[19:02] <masak> :)

[19:02] * masak had a nice swim

[19:02] <jnthn> Cool

[19:03] <jnthn> Bet it wasn't in the sea. :-)

[19:06] <masak> no, it was in a cool pool.

[19:06] <lisppaste3> moritz_ pasted "Stary obfu" at http://paste.lisp.org/display/85972

[19:07] <masak> moritz_++

[19:07] <masak> scary indeed.

[19:07] <moritz_> somehow the last few characters are a bit too obvious

[19:07] <moritz_> I had some fun fiddling these stars together ;-)

[19:08] *** mikehh_ joined
[19:08] <masak> moritz_: that one alone is worth a blog post, I'd say.

[19:09] <moritz_> I'm now fiddling a bit with the quotes

[19:09] <moritz_> turns out I can use <...> instead

[19:09] <jnthn> omfg

[19:09] <masak> I think there are two Rs in 'starry', btw.

[19:09] <jnthn> I think so.

[19:09] <masak> unless you meant stare-y.

[19:09] <moritz_> I probably meant both ;-)

[19:09] <jnthn> I parsed it as the Slovak word for "old" first :-)

[19:10] <moritz_> and that (3) galls me - how can I turn a * into a number?

[19:10] <masak> jnthn: hah, me too!

[19:10] <masak> jnthn: but Russian.

[19:11] <masak> moritz_: pass in a list (*,*,*) and numify it.

[19:12] <moritz_> masak: thanks

[19:13] <moritz_> except that I'll spell it +<* * *> ;-9

[19:13] <Daenyth> back

[19:13] <moritz_> no need for the + actually

[19:14] * jnthn is trying to write in Russian at the moment to his language partner.

[19:15] *** rindolf left
[19:18] <TimToady> rakudo: [*]()+[*]()+[*]()

[19:19] <Daenyth> so what's this I hear about a possible «make install» for rakudo?

[19:19] <PerlJam> Daenyth: not only a possible, but an actual.

[19:19] <Daenyth> :D

[19:19] <Daenyth> so that means I can package it finally!

[19:20] *** donaldh left
[19:20] <moritz_> Daenyth: there's a README in rakudo that's fairly up to date

[19:20] <Daenyth> moritz_: I'll start off with a -git package

[19:21] *** donaldh joined
[19:23] <Daenyth> hmm

[19:23] <Daenyth> is ICU a compile time optional depend or runtime?

[19:23] <moritz_> compile time

[19:23] <Daenyth> mmk

[19:23] <moritz_> and *strongly+ recommended

[19:23] <Daenyth> I'll probably package that if it isn't already then

[19:24] <moritz_> (actually parrot-configure-time)

[19:24] <Daenyth> ok

[19:24] *** TimToady1 joined
[19:24] *** mikehh left
[19:24] <Daenyth> well, for now rakudo/parrot will probably be bundled in one package, unless there's a better way you'd advise me to do it... can rakudo compile off a system install of parrot or does it need the svn checkout?

[19:25] *** mikehh_ is now known as mikehh

[19:25] <moritz_> it needs an installed parrot

[19:25] <moritz_> (+ make dev-install)

[19:25] <moritz_> erm, install-dev

[19:25] <Daenyth> ok.. so a parrot package by itself would be a good thing

[19:26] <jnthn> Yes.

[19:26] <Daenyth> oh wait.. someone beat me to it

[19:26] <Daenyth> rakudo is already in AUR

[19:26] <Daenyth> :<

[19:26] *** guest_8976 joined
[19:26] <moritz_> is it parrot-1.5?

[19:26] <Daenyth> http://aur.archlinux.org/packages/rakudo/rakudo/PKGBUILD

[19:26] <guest_8976> Computer Repair Nampa - http://nnucomputerwhiz.com Any Dog Breed - http://anydogbreed.com

[19:26] *** guest_8976 left
[19:26] <jnthn> Just to point out ICU is a compile-time dependency for Parrot, rather than Rakudo.

[19:26] <Daenyth> looks like the guy didn't really know what he was doing making it..

[19:26] <reqamst> Daenyth: oh, nice

[19:27] <Daenyth> that PKGBUILD is screwed up on so many levels

[19:27] <PerlJam> Daenyth: so fix it!  :)

[19:27] <Daenyth> PerlJam: yeah, I'll email the maintainer and ask if he wants to let me adopt it

[19:27] <moritz_> is it custom to include such things upstream?

[19:28] <Daenyth> http://aur.archlinux.org/packages/rakudo-git/rakudo-git/PKGBUILD ok, this package looks much more sane

[19:29] <Daenyth> except for the extra clone..

[19:30] *** TimToady left
[19:30] * jnthn nom

[19:30] <Daenyth> mm

[19:30] <Daenyth> I'll email both maintainers and see if they want to disown

[19:30] *** iblechbot joined
[19:32] *** TimToady1 is now known as TimToady

[19:35] <takadonet> welcome back TimToday

[19:36] *** carlin joined
[19:38] <Daenyth> So I was under the impression that pugs was dead?

[19:38] <TimToady> it's "stable"

[19:38] <PerlJam> as a perl 6 compiler, it's dead.

[19:38] <moritz_> hibernating, I'd say

[19:38] *** moritz_ sets mode: +o TimToady

[19:38] <Daenyth> I see

[19:38] <moritz_> given the last blog entry on http://pugs.blogs.com/audrey/

[19:38] <masak> not changing, I'd say.

[19:39] <TimToady> the basic problem was that its bus number never exceeded 1

[19:40] <Daenyth> bus number?

[19:40] <moritz_> we have that problem in more areas

[19:40] <moritz_> Daenyth: number of people how, when hit by a bus, will make development halt

[19:40] <Daenyth> ahh

[19:41] <pmichaud> low bus number == your project could end very quickly

[19:41] <moritz_> http://perlgeek.de/blog-en/perl-6/starry-obfu.html there you go

[19:41] <masak> moritz_++ delivers!

[19:42] *** Confield left
[19:42] * Daenyth glazes

[19:42] <pmichaud> Perl 6 has arrived.

[19:42] <masak> moritz_: which feature? I ask immediately.

[19:43] <moritz_> masak: hm`

[19:43] <adam-pwgsc> moritz_: holy ****

[19:43] <moritz_> "but I'm

[19:43] <moritz_> not aware of any feature"

[19:43] <Daenyth> is <> a quoting thing nowadays?

[19:43] <masak> moritz_: oh, I read too quickly... :/

[19:43] <moritz_> Daenyth: yes, it's like qw( ) only shorter ;-)

[19:43] <masak> Daenyth: yes, it's what used to be qw()

[19:43] <Daenyth> gotcha

[19:43] <Daenyth> ok, now this starts to make more sense

[19:43] <PerlJam> moritz_: it's needs another *** *-* ** *+*/*+*/* at the end of the string though  :)

[19:43] <Daenyth> ...barely

[19:44] <moritz_> PerlJam: newlines are optional ;-)

[19:45] <masak> moritz_: it prints 'ust another Perl' and then nothing more... :)

[19:45] <masak> er, s/ust/Just/

[19:45] <moritz_> PerlJam: and *** *-* ** *+*/*+*/* can be written as ****-* ** *+*/*+*/* (one space removed)

[19:45] <moritz_> masak: that's because Rakudo is just another Perl.

[19:45] <adam-pwgsc> haha that's brilliant. I love it. I love perl so much.

[19:45] <Daenyth> I have no clue how it works

[19:45] <masak> moritz_: ah. :)

[19:45] <Daenyth> but great! :D

[19:46] <PerlJam> moritz_: yeah, I wasn't golfing so much.

[19:46] <moritz_> Daenyth: let me explain... when you use '*' as term it constructs a closure

[19:46] * Daenyth glazes

[19:46] <moritz_> Daenyth: so 1 + * generates a block -> $x { 1 + $x }

[19:46] <moritz_> or * * * generates -> $x { $x * $x }

[19:46] <Daenyth> I mean, I can see the splitting on *** bit

[19:47] <moritz_> inside the eval the (<* * *>) invokes that closure with a three-item list

[19:47] <PerlJam> moritz_: turn the explanation into another blog post  :)

[19:47] <Daenyth> +1

[19:47] <moritz_> ok ;-)

[19:47] <Daenyth> can you link me to the relevent spec? Maybe I'd get it more if I read that

[19:48] * PerlJam wonders how hard it would be to make a program that discovered the starry form of all numbers from 1 to 100 using <* * *>

[19:48] <moritz_> S02:812

[19:49] <Daenyth> okies

[19:49] <moritz_> the IRC logs turn that into a direct link to the correct line

[19:49] <Daenyth> irc logs?

[19:49] <moritz_> see /topic

[19:49] <Daenyth> aha

[19:49] <Daenyth> gotcha

[19:51] <moritz_> PerlJam: actually I think that much space could be safed by factoring out a common term like **** ** * * *

[19:52] *** KyleHa left
[19:52] <Daenyth> * is going to take me a while to wrap my head around ._.

[19:52] *** KyleHa joined
[19:53] *** takadonet left
[19:53] <PerlJam> Daenyth: I have to say, that even knowing what * does, it surprised me the first time I saw something like (* ** *)(2)

[19:54] <moritz_> masak: I suppose you did fill out your gsoc evaluation for literal++?

[19:54] *** hercynium left
[19:54] <masak> moritz_: I did.

[19:54] <moritz_> great.

[19:54] <masak> and I only needed to be harassed by googlebots once, too!

[19:54] <moritz_> ;-)

[19:55] <jnthn> Daenyth: You wouldn't by any chance be the person who gave a Rakudo + FreeBSD talk at UPW back in...march/february-ish this year, would you?

[19:55] <Daenyth> jnthn: I doubt it

[19:56] <Daenyth> unless I've suddenly taken to traveling for lectures in my sleep >.>

[19:56] <jnthn> Oh wait, is pkgbuild the BSD stuff?

[19:56] <Daenyth> arch

[19:56] * jnthn is clueless

[19:56] <jnthn> Ah

[19:56] <Daenyth> freebsd does ports

[19:56] <jnthn> Then in that case, it makes it even less likely.

[19:56] <jnthn> Sorry.

[19:56] <Daenyth> which is a similar concept

[19:56] <jnthn> Yeah, you're right.

[19:56] <Daenyth> arch PKGBUILDs are inspired partially by ports

[19:56] * jnthn is not a *nix guy.

[20:00] <adam-pwgsc> Is it hard doing perl dev on a windows box?

[20:00] <masak> no, not nowadays.

[20:00] <jnthn> No.

[20:00] <TimToady> apart from perl dev being always hard everywhere... :)

[20:00] <masak> that's just programming being hard.

[20:01] <masak> as far as I'm concerned, Perl makes it easier. :)

[20:01] <PerlJam> adam-pwgsc: are you familiar with padre?  

[20:01] <Daenyth> so wait

[20:01] <Daenyth> a closure is like code interpolated in a string?

[20:01] <masak> Daenyth: yes, in strings it is.

[20:01] <PerlJam> Daenyth: no, a closure is like a subroutine that knows some things about the environment in which it was created .

[20:02] <Daenyth> ahh

[20:02] <Daenyth> now things begin to make more sense

[20:02] *** Eevee left
[20:02] *** guest_007 left
[20:02] *** carlin_ left
[20:02] *** cj left
[20:02] *** moritz_ left
[20:02] *** gbacon left
[20:02] <masak> rakudo: my $a = { say "I am a closure" }; $a()

[20:02] <Daenyth> >.>

[20:03] <Daenyth> is evalbot not here?

[20:03] <masak> seems not.

[20:03] <TimToady> it seems to be "stable"

[20:03] <masak> I think it's the evalbot server that's stable.

[20:03] *** cj joined
[20:03] <TimToady> std: 42 43

[20:04] <Daenyth> stably offline? :)

[20:04] *** Eevee joined
[20:04] *** moritz_ joined
[20:04] * masak plays evalbot

[20:04] *** guest_007 joined
[20:04] *** carlin_ joined
[20:04] *** gbacon joined
[20:04] * moritz_ is back from net outage

[20:04] <masak> TimToady: SORRY! Couldn't parse... two terms in a row?

[20:04] *** b_jonas joined
[20:04] <TimToady> moritz_: we determined that evalbot is down while you were netsplit

[20:09] *** mikehh left
[20:09] <moritz_> TimToady: actually its server is unreachable

[20:09] <TimToady> probably just an asteroid, then

[20:09] <TimToady> or would that be an asterite after it hits?

[20:09] <TimToady> .oO(tonight, chance of light aster showers)

[20:09] <Daenyth> is Q != q (string quoting)?

[20:09] <TimToady> Q is raw quoting, no escapes

[20:09] <TimToady> other forms derive from that

[20:09] <TimToady> q is really Q:q for instance

[20:09] <Daenyth> ok

[20:09] <Daenyth> just browsing the perlgeek blog

[20:09] <Daenyth> the post I'm reading wasn't clear

[20:09] <TimToady> it's hard to explain everything first :)

[20:09] * Daenyth nods

[20:09] <b_jonas> I wonder if there are any p5 obfus that accidentally work in perl6 unchanged.

[20:09] *** mikehh joined
[20:10] <TimToady> probably, I'd guess

[20:10] *** elmex joined
[20:10] <TimToady> though the comma on map will kill a lot of them

[20:11] <b_jonas> http://www.perlmonks.com/?node=japh+algebra is killed by the =~ for regex match

[20:11] <TimToady> that too

[20:11] <TimToady> anything with bitshifts will die

[20:11] <b_jonas> maybe one of my short quines 

[20:13] *** iblechbot left
[20:14] <b_jonas> does perl6 have here documents? I can't find them in S02

[20:14] <pmichaud> yes, see   q:to

[20:14] <pmichaud> or looks for "heredoc"

[20:14] <TimToady> just another language derived from Q, really

[20:14] <b_jonas> oh, but not with the p5 syntax, so that short quine doesn't work

[20:14] <TimToady> yes, << is the Texas form of « these days

[20:15] <b_jonas> yep

[20:15] <b_jonas> second in http://www.perlmonks.com/?node_id=661934 I mean

[20:15] <b_jonas> third might work though

[20:15] <b_jonas> $a=q(;print"\$a=q($a)$a");print"\$a=q($a)$a"

[20:16] <moritz_> q() is a sub call in Perl 6

[20:16] <b_jonas> is it, now?

[20:16] <b_jonas> how do you use parens as a delimiter for regexen?

[20:17] <b_jonas> wait, comment syntax in S02 has changed!

[20:17] <b_jonas> great, I didn't like the old one

[20:17] <b_jonas> though it's still not what I hoped for

[20:17] <masak> postcircumfix parens always mean 'sub call' in Perl 6.

[20:17] <TimToady> part of extensibility is making keywords not special, as much as possible.  so foo() is always a function call regardless

[20:17] <moritz_> rakudo: sub q($x) { say $x }; q("foo")

[20:17] <moritz_> ouch.

[20:17] <moritz_> no p6eval

[20:18] <moritz_> anyway, that prints "foo\n" for me

[20:18] <b_jonas> but q is special anyway before most characters

[20:18] <masak> b_jonas: yes, but parens are more special.

[20:20] <b_jonas> oh well, parens are convenient in p5 for regex quoting only because of p5 regex syntax anyway

[20:20] <b_jonas> how about the seventh then?

[20:20] <b_jonas> print"$_\Q$_\E\"\n"for"print\"\$_\\Q\$_\\E\\\"\\n\"for\""

[20:20] <b_jonas> or the eighth, which is really similar

[20:21] <TimToady> no \Q

[20:21] <b_jonas> makes sense

[20:21] <b_jonas> no point for it really

[20:21] *** [1]Limbic_Region joined
[20:22] *** Limbic_Region left
[20:22] *** [1]Limbic_Region is now known as Limbic_Region

[20:23] *** Confield joined
[20:26] <b_jonas> can you use alphabetics as quote delimiters in perl 6?

[20:27] <TimToady> no

[20:27] <moritz_> no?

[20:28] <b_jonas> am wondering on http://www.perlmonks.com/?node_id=453519

[20:28] <b_jonas> with strictures off

[20:28] <moritz_> TimToady: STD.pm parses m foof just fine

[20:29] <moritz_> TimToady: and so does rakudo

[20:29] <b_jonas> no wait, there's no 'no strict subs' in p6 so it can't work

[20:29] <japhb> pmichaud, did you get a chance to look at the NQP section of http://gitorious.org/parrot-plumage/parrot-plumage/blobs/master/TODO ?

[20:31] *** hercynium joined
[20:32] <TimToady> moritz_: well, maybe we relaxed that at some point

[20:33] <pmichaud> japhb: not yet I hadn't, no.  I'll look at it after I finish the email I'm currently writing.

[20:33] <japhb> pmichaud, OK, thanks!

[20:37] <TimToady> moritz_: I was thinking of S05:1775

[20:38] <b_jonas> http://www.perlmonks.com/?node_id=438050 doesn't work because it uses $_[$n] to access the nth positional parameter

[20:38] <TimToady> which STD also violates

[20:38] *** gabiruh left
[20:39] <moritz_> TimToady: if it's something more general than regexes it should be in S02, really

[20:39] <TimToady> agreed

[20:39] <b_jonas> uh huh

[20:39] <b_jonas> "You may not use whitespace or alphanumerics for delimiters.  "

[20:39] <b_jonas> thanks

[20:40] <TimToady> I knew it was in there somewhere though :)

[20:41] <b_jonas> none of my obfus work then I think

[20:41] <b_jonas> unsurprising since perl 5.10 broke like three of them as well

[20:42] <b_jonas> am I too version-dependent in my japhs?

[20:42] *** Limbic_Region left
[20:52] *** Limbic_Region joined
[21:01] *** japhb left
[21:07] *** Whiteknight joined
[21:08] *** masak left
[21:24] *** japhb joined
[21:26] *** molaf left
[21:30] <pmichaud> okay, done with email (finally)

[21:31] <pmichaud> japhb: Q:PIR{...}  should be working.  If it's not working, feel free to submit a bug report.

[21:31] <japhb> pmichaud, OK, will do.  Which bug address?

[21:31] <japhb> (Or trac?)

[21:31] <pmichaud> trac

[21:31] <japhb> k

[21:32] <pmichaud> I don't understand  "make Glue.pir a 'standard option' for NQP"

[21:32] <japhb> pmichaud, Oh, sorry, that referred to a discussion with jnthn

[21:32] <japhb> We were basically saying, we agree that NQP should stay clean, with minimal builtins.

[21:33] <japhb> However, there is a use case for people to get at least the glue builtins, like run() ... and we thought shipping a "standard" PIR file with these builtins would be useful.  That way, anyone that wanted them could just load_bytecode(), and have them ready.

[21:34] <pmichaud> that sounds to me like a Parrot library, not an NQP one.

[21:34] <japhb> pmichaud, I referred to it as an NQP library because my implementation was pretty much a port of PIR from Rakudo to NQP.

[21:34] <pmichaud> sure.

[21:34] <japhb> But it matters not to me, that was merely a suggestion.

[21:35] <pmichaud> NQP should be able to load libraries, yes.  :-)

[21:35] <pmichaud> it's likely that NQP will get its own "use" syntax handler as well

[21:35] <pmichaud> I had been waiting to see how Perl 6 and Rakudo fleshed those out before committing anything to NQP

[21:36] <japhb> Right, and it does, through the existing load_bytecode() (plus Tene's upcoming use support).  I was just suggesting adding a library of common builtins to the supported set ... whether with NQP or with Parrot ... *shrug*

[21:36] <japhb> nodnod

[21:36] <pmichaud> last item:  I agree that NQP should make it possible to declare class attributes

[21:36] <pmichaud> it probably won't be as extensive as Perl 6's declarations -- for example, we might only support declaration of private attributes

[21:37] <japhb> Makes sense to me, fits the minimalist design.

[21:37] <jnthn> I could use thsoe too.

[21:38] <pmichaud> (library of common builtins)  I'm all in favor of libraries of common builtins; I just don't think that NQP wants to be defining them.  :-)

[21:38] <pmichaud> NQP might very well be used to create them, but it shouldn't define them :-)

[21:39] *** mzedeler joined
[21:39] <mzedeler> Hi

[21:40] <mzedeler> I am preparing a posting to the Perl 6 mailing list and just want to check that this subject hasn't been discussed before.

[21:40] <pmichaud> what's the subject?

[21:40] <jnthn> "IO"

[21:40] <jnthn> ;-)

[21:40] <mzedeler> Ranges and over-countable domains

[21:40] <japhb> pmichaud, I just realized the other reason I was thinking of them as "NQP builtins" -- they include poking objects into the global namespace, with names that are from Perl 6.  See http://gitorious.org/parrot-plumage/parrot-plumage/blobs/master/Glue.pir .

[21:40] <pmichaud> Ranges have undoubtedly been discussed before, although not always in complete detail.

[21:41] <mzedeler> 1.0001 .. 1.01 doesn't really make much sense without specifying some step sizve.

[21:41] <pmichaud> japhb: afaik, there's not really a "global namespace"

[21:41] <PerlJam> mzedeler: sure it does; the step size is 1 

[21:41] <mzedeler> And with 1 .. 2i ?

[21:41] <japhb> pmichaud, I'm sorry, I'm very tired and being imprecise.  .namespace []

[21:41] <pmichaud> mzedeler: I can certainly talk about  1.0001 .. 1.01   as a continuous range

[21:42] <mikehh> rakudo (7512462) builds on parrot r40764, make test / make spectest (up to 28056) PASS - Ubuntu 9.04 amd64 (g++)

[21:42] <mzedeler> pmichaud: yes - as interval definition, but expanding to a list...?

[21:42] *** KyleHa left
[21:42] <pmichaud> japhb: okay... I don't quite see how that affects NQP, though.  If a library wants to put things in the global namespace, that's fine.

[21:43] *** jrtayloriv joined
[21:43] <moritz_> as a list it expands into (1.0001, )

[21:43] <pmichaud> mzedeler: since the default interval is 1, that would be a list of one element.  That's fine.

[21:43] <japhb> pmichaud, I think I have failure of brain.  Nevermind.

[21:43] <pmichaud> Perl generally doesn't warn or prevent degenerate cases.

[21:43] <pmichaud> japhb: no problem :-)

[21:43] <pmichaud> japhb: my whole past week or so has been "failure of brain" mode.  :-)

[21:43] <japhb> heh

[21:44] <mzedeler> pmichaud: but you cant really compare 1 and 2i. Its like having a range from 'banana' to 3.14.

[21:44] <PerlJam> Though mzedeler does have a point that 1.0001..1.01 as a list is just 1.0001, but 1.0006 ~~ 1.0001..1.01 is true.  That might seem strange to some people

[21:44] <mzedeler> Pun intended.

[21:44] <pmichaud> mzedeler: sure, that part of the specification is somewhat imprecise, I agree.

[21:44] <mzedeler> PerlJam: Yes. Same point for character ranges.

[21:45] <moritz_> 1..2i will probably be the empty list, or fail()

[21:45] <pmichaud> I'm also not entirely comfortable with the range specification for strings; I posted a message about it but I think it was warnocked.

[21:45] <mzedeler> aaa is between aa and ba, but not when you use a Range.

[21:45] <PerlJam> pmichaud: what are you unhappy about for string ranges?

[21:45] <mzedeler> Same here.

[21:45] <moritz_> I think it's generally desirable to fail() if start- and endpoint are of different type, or not comparable

[21:45] <b_jonas> perl5 does have a range from 'banana' to '3.14' and it's empty, but 'a' to '3.14' has size 26**4 I think

[21:46] <pmichaud> PerlJam: parts of string ranges are very unintuitive and have bizarre effects

[21:46] <b_jonas> hmm, wait

[21:46] *** nbrown_ joined
[21:46] <b_jonas> strange, "a"..3.14 and "a".."3.14" give different results in perl5

[21:46] <mzedeler> b_jonas: I am talking about a range from the Str 'banana' to the Num 3.14.

[21:46] <b_jonas> sure, it doesn't make sense

[21:47] <jrtayloriv> I'm getting the following when I run 'make spectest': http://pastebin.com/d5530b6c2 ... is this anything I should be concerned about / post a bug report on?

[21:47] <mzedeler> Sorry for stirring up things. I'll post my rants at the mailing list right now. Its already done. It sounds like it is appropriate.

[21:47] <moritz_> jrtayloriv: is that the 2009-08 release of rakudo?

[21:47] <pmichaud> jrtayloriv: the autoincrement-range.t tests aren't expected...  the other two are.

[21:47] <PerlJam> jrtayloriv: known bugginess

[21:47] <moritz_> heh, three answers, all of them different

[21:48] <jrtayloriv> moritz_: :)

[21:48] <jrtayloriv> moritz_: I just did git pull today (an hour or so ago)

[21:48] <moritz_> the problem in autoincrement-range.t seems that libicu is not available

[21:48] <japhb> Brilliant.  Last night I couldn't get Q:PIR{} to work.  Today I can't make it fail.

[21:48] <pmichaud> if so, then autoincrement-range.t needs to be marked # icu in spectest.data

[21:48] <japhb> I think I'm going to bed and pretend this afternoon doesn't exist.

[21:49] <mzedeler> Bye for now.

[21:50] <moritz_> jrtayloriv: what does './parrot_install/bin/parrot_config has_icu' from within the rakudo dir say?

[21:50] *** mzedeler left
[21:50] <jrtayloriv> 0

[21:51] <moritz_> jrtayloriv: thanks

[21:51] *** ruoso joined
[21:52] <moritz_> jrtayloriv: ok, I committed a "fix" (which is not to run that test if the ICU library is not available)

[21:52] <jrtayloriv> moritz_: thank you

[21:52] <PerlJam> pmichaud: oh, while I'm thinking of it again ...  www.rakudo.org has many blank pages for me.  Do you know why or how to fix ot?

[21:52] <PerlJam> s/ot/it/

[21:53] <moritz_> it seems to be related to the presence of cookies

[21:53] <dalek> rakudo: 9d9d416 | moritz++ | t/spectest.data:

[21:53] <dalek> rakudo: [t/spectest.data] autoincrement-range.t needs the # icu flag, jrtayloriv++

[21:53] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/9d9d41675dab91fbeb6dcf29998210e00baecf97

[21:53] <moritz_> when I delete all cookies from rakudo.org the next page load works fine

[21:53] * PerlJam t ries it

[21:54] <PerlJam> nope.

[21:54] <PerlJam> http://www.rakudo.org/documentation is still blank

[21:55] <PerlJam> I also get a blank page when I try to login.

[21:55] <PerlJam> But http://www.rakudo.org/how-to-get-rakudo and http://www.rakudo.org/how-to-help show up fine.

[21:55] <PerlJam> (maybe someone enabled a rule in drupal to only show pages that start with "how"  :-)

[21:56] <moritz_> ;-)

[21:56] <moritz_> let's try "why" too

[21:57] <jrtayloriv> I am having the same problem -- http://www.rakudo.org/community is blank for me

[21:57] <moritz_> bah.

[21:59] <PerlJam> Is it possible to get a login on the box that hosts rakudo.org?

[22:00] <jaffa8> I think

[22:01] <jaffa8> rakudo should have been written in perl

[22:01] <moritz_> it is, mostly

[22:01] <jaffa8> what else?

[22:01] <PerlJam> more and more of it is every day in fact

[22:01] <moritz_> PIR, C

[22:01] <jaffa8> I mean perl 5

[22:01] <PerlJam> jaffa8: see STD

[22:02] <jaffa8> what for?

[22:02] <moritz_> well, Perl 6 is much more suited for writing a compiler than Perl 5

[22:02] <moritz_> we've had various attempts at writing Perl 6 is Perl 5

[22:02] <jaffa8> in?

[22:02] <carlin> v6.pm

[22:02] <moritz_> s/is/in/

[22:02] <jaffa8> is=in?

[22:02] <PerlJam> yeah, and they've been *so* successful!  :)

[22:02] <moritz_> kp6, v6.pm

[22:02] <moritz_> for example

[22:02] <jaffa8> who?

[22:03] <moritz_> they all suffered from the same problem

[22:03] <jaffa8> Which is?

[22:03] <moritz_> jaffa8: I'm about to explain, but explaining takes longer than asking questions

[22:03] *** nbrown left
[22:03] <moritz_> so... either they implemented only a small part of Perl 6 which coudl be directly translated to Perl 5

[22:04] <moritz_> or they became horribly slow.

[22:04] <moritz_> because they had to add layer upon layer on perl 5

[22:04] <jaffa8> What parser have they used?

[22:04] <Tene> pmichaud: ping

[22:04] <moritz_> and then perl 5 was just not fast enough

[22:04] <moritz_> custom parsers

[22:04] <moritz_> but I'm mostly talking about execution speed

[22:04] <Tene> pmichaud: japhb asked me to add support for 'use' and 'eval' to NQP.  Do you have any inclination to comment on what you'd like to see there before I write and commit it?

[22:05] <jaffa8> Of what?

[22:05] <moritz_> of these implementations.

[22:05] <PerlJam> jaffa8: you're welcome to try to write a perl 6 compiler in perl 5 if you want.

[22:06] <PerlJam> jaffa8: the spec is more mature now than when those others tried.  That's got to help a little  :)

[22:06] <PerlJam> and you've got several other implementations to crib ideas from if you get stuck on how to handle something 

[22:06] <pmichaud> Tene: I want them to continue the minimal nature of NQP -- i.e., to provide essentially the semantics that HLLCompiler is providing

[22:07] * Tene nods.

[22:08] <pmichaud> I expect to be improving HLLCompiler's eval capability to resolve the REPL issues.

[22:08] <Tene> Do you want me to send you whatever patch I write before committing it, to make sure I don't add too much?

[22:08] <pmichaud> Tene: if you send me a patch beforehand I'll be glad to review.  If you just want to commit, I might revert.

[22:08] <pmichaud> (but I'm fine with that if you are)

[22:08] <pmichaud> I'd say forgiveness better than permission here :-)

[22:08] <jaffa8> I have used Perl 5 for compilation purposes.

[22:08] <Tene> I rather prefer that you just revert, yes.

[22:08] <jaffa8> I used Parse:Yapp

[22:08] <pmichaud> Let's do that then.

[22:09] <moritz_> jaffa8: so you already have experience. That's great, and will make success more probable

[22:09] <Tene> i generally assume that if I commit something stupid, it'll just get reverted and I'll get decremented, as that's how I'd prefer anyone else contributed to something I cared about, except in exceptional cases.

[22:09] <pmichaud> Tene: that's fine with me.

[22:09] <pmichaud> I also wouldn't want it to block on my review.

[22:10] <pmichaud> however, I'm now done with trips for the year, and the kids are back in school, and I don't have anyone coming to visit, so I _hope_ I'll have a ton more time than I've had for the past several months

[22:11] * Tene schedules a visit to pmichaud's roof.

[22:11] <pmichaud> yes, if anyone wants to come visit, we can likely get some extensive hacking done :-)

[22:11] <pmichaud> and I do have a spare bedroom

[22:11] <PerlJam> pmichaud: somehow I doubt that.

[22:12] <pmichaud> PerlJam: oh?  why's that?

[22:12] <Tene> I'm wondering if I should try to arrange hacking with allison and particle here in seattle.  We've already arranged for dinner...

[22:12] <PerlJam> pm: for me, only if the wife and kids don't come. :)

[22:12] <pmichaud> oooh, that's right, the members meeting is tomorrow.  I should see if I'm authorized to vote yet.

[22:13] <jaffa8> pmichaud, where do you live?

[22:13] <pmichaud> jaffa8: Plano, Texas   (just north of Dallas)

[22:13] <jaffa8> Is it windy?

[22:14] <pmichaud> sometimes, yes, but generally no.

[22:14] <jaffa8> Is it hot?

[22:14] <Tene> Taking time off work to visit you to help work on the PGE rewrite/refactor/rewhatever is actually an extremely attractive idea to me.

[22:14] <pmichaud> Tene: that could work, definitely.

[22:14] <pmichaud> if you can get as far as a dallas airport, I can get you the rest of the way :)

[22:15] <jaffa8> I cannot imagine you are serious.

[22:15] <Tene> Why not?

[22:15] <jaffa8> Group hacking?

[22:15] <jaffa8> Does that work?

[22:15] <pmichaud> sure.  f2f work is often very productive (more)

[22:15] <jaffa8> What is f2f?

[22:15] <pmichaud> jnthn++ and I are extremely productive when we're in the same room working on things

[22:15] <Tene> face-to-face

[22:15] <PerlJam> jaffa8: have you ever heard of pair programming?

[22:16] <jaffa8> yes

[22:16] <PerlJam> jaffa8: have you ever done it?

[22:16] <Tene> I'd have to get time off work... and I don't have any savings to speak of right now.

[22:16] <jaffa8> yes

[22:16] <pmichaud> Tene: we'll keep it in mind over the next couple of months.  We might be able to work something out.

[22:16] <jaffa8> What would you do in pair?

[22:17] <pmichaud> many times it's easier to explain or explore design issues in person in front of a whiteboard than to try to do it via email or irc

[22:17] <jnthn> Yes, face to face meetups are very useful.

[22:17] <pmichaud> irc is relatively low-bandwidth

[22:17] <jaffa8> how long does it last?

[22:17] <PerlJam> real-life-bandwidth++

[22:17] <jaffa8> Such a cooperation

[22:18] <jaffa8> 1 day

[22:18] <jaffa8> ?

[22:18] <jaffa8> 1 week?

[22:18] <pmichaud> depends

[22:18] <jnthn> Depends. 1 day is generally too short though.

[22:18] <pmichaud> jnthn and I have managed to make productive use of two or three days easily

[22:18] <jnthn> I mean, the first 2 hours I've not had enough coffee to do anything useful anyway.

[22:18] <PerlJam> pm: Wasn't there a Dallas.p6m hackathon recently?

[22:18] <jnthn> ;-)

[22:18] <pmichaud> and I found the parrot developers summit last november (2 days) to be extremely productive

[22:18] *** nihiliad left
[22:18] <pmichaud> yes, we're doing a Dallas.p6m this saturday

[22:19] <pmichaud> we're doing about 2-3 hours for that

[22:19] <jnthn> Two or three days normally leaves me feeling "we got lots done, but we could have done more tomorrow too" :-)

[22:19] <jaffa8> you could do pair programming with a suitable software

[22:19] <PerlJam> jnthn: I don't see Dallas on your travel map  :)

[22:19] <pmichaud> anyway, if Tene++ arrived here, I have no doubt we would whip out a bunch of interoperability code and resolve several big design issues

[22:20] <PerlJam> jnthn: we've used gobby to good effect here (even with the limited bandwidth)

[22:20] <PerlJam> er, s/jnthn/jaffa8/

[22:20] <pmichaud> if seattle weren't so far away I'd even have considered attending there :-)

[22:20] <jnthn> PerlJam: Dallas is a little far for me to come.

[22:20] * pmichaud gets his parrot board votes in.

[22:21] <pmichaud> PerlJam: I much prefer to meet with jnthn++ in some locale other than Dallas :-)

[22:21] *** sri_kraih left
[22:21] <PerlJam> jnthn: All you have to do is find some client that'll pay your way nearby and use that as an excuse to visit Pm for a few days  :)

[22:21] <PerlJam> pmichaud: even CRP?  ;)

[22:21] <pmichaud> sure, even CRP

[22:21] <jaffa8> Dallas is 8 hours from here.

[22:21] <pmichaud> jaffa8: eight hours driving or flying?

[22:21] <jnthn> Is CRP missing a vowel?

[22:21] <jaffa8> flying

[22:22] <jnthn> .oO( oh my, I wonder which city I just offended )

[22:22] <pmichaud> CRP = airport code for "Corpus Christi, Texas"

[22:22] <PerlJam> jaffa8: you and I are roughly within the same time locus of Dallas,  though I'd be driving 

[22:22] <pmichaud> PerlJam: I'll likely be in CRP sometime in Sep, btw.  :-)

[22:22] *** sri_kraih joined
[22:23] <PerlJam> pmichaud: if it's the week of the 14th, I'll be in Vegas 

[22:23] <pmichaud> ...vegas?

[22:23] <jnthn> Vegas would be a terrible place for a hackathon.

[22:23] <jnthn> Since what happens in Vegas stays in Vegas, nothing would get committed at all.

[22:23] <pmichaud> heh

[22:23] <PerlJam> pmichaud: Rizzo and I are attending a "project management" course there.

[22:23] <pmichaud> PerlJam: suuuuuuuure you are

[22:23] *** tak11 joined
[22:23] <jnthn> "project"

[22:23] <jnthn> ;-)

[22:23] <pmichaud> "project management" sounds like a euphemism to me

[22:24] <PerlJam> pm: Rizzo set it up, so you can guess his motivation  :)

[22:24] <pmichaud> pj:  okay, I think I nailed it on my first comment then :)

[22:24] <pmichaud> where are you staying?

[22:25] <PerlJam> in fact, the same course is offered at different times in other cities and he argued convincingly that we should go to the one in Nevada.

[22:25] <pmichaud> hey, I'm "managing a project"!  Maybe I should go also?

[22:25] <PerlJam> I actually am not sure where we're staying.

[22:25] <pmichaud> I wonder if CBI/HRI would pay for me to go... :-P

[22:26] <PerlJam> I think it's the Flamingo

[22:26] <pmichaud> we could do project management course by day, and then "hacking" at night.  After all, there's nothing else to do after 5pm in vegas.... :-P

[22:26] <PerlJam> heh

[22:27] <pmichaud> afk for a bit

[22:28] * PerlJam saw "The Hangover" 2 nights ago, so Las Vegas has a different brain-feel than it would have otherwise.

[22:28] *** pmurias left
[22:33] <carlin> is anyone able to grant commit access to the pugs svn? I have some small changes I want to make to the docs, I was going to email the patches but they're fairly trivial so it doesn't seem worth bothering others with if I can do it myself :)

[22:34] <jnthn> carlin: yes

[22:34] <moritz_> carlin: just /msg me or jnthn your email address and desired nickname

[22:34] <jnthn> carlin: pm me your email address and desired...

[22:35] *** REPLeffect left
[22:35] <jnthn> If you want comedy, send it to both of us and we'll race.

[22:35] <moritz_> lol

[22:35] <moritz_> how neglecting of us not to offer you a commit bit earlier

[22:36] *** mikehh left
[22:36] <carlin> I would have taken you up on the offer to have a race but I couldn't send both at the same time so it would be unfair

[22:36] *** mikehh joined
[22:36] *** mikehh left
[22:36] <jnthn> carlin: added you

[22:37] *** mikehh joined
[22:37] <moritz_> carlin: it's a custom to add yourself to the AUTHORS file in your first commit 

[22:37] <jnthn> carlin: So you'll have password in your email.

[22:37] *** eMaX left
[22:38] <moritz_> carlin: and you can also invite new commiters if you log in to http://commitbit.pugscode.org/admin/project/Pugs/people with your svn password

[22:39] <carlin> viral commit access, nice :)

[22:39] <moritz_> aye ;-)

[22:39] <PerlJam> carlin: it's an exclusive club ... just look at the list :)

[22:40] <moritz_> gvanrossum: [email@hidden.address] (author, pending)

[22:40] <moritz_> ("pending" means he never actually comitted something)

[22:40] *** dew joined
[22:42] <s1n> moritz_: i never added myself to AUTHORS in pugs or CREDITS in rakudo lol

[22:42] <moritz_> s1n: you should have

[22:42] <s1n> moritz_: i should indeed, maybe i should do that before the hackathon this weekend

[22:44] <s1n> moritz_: i haven't made any patches for rakudo since the switchover though :(

[22:45] <moritz_> s1n: you should change that ;-)

[22:47] <s1n> moritz_: i haven't been able to keep up, i work best if i have specific tasks to do, fishing for things to work on when i don't know what needs done or know the code that well is tough (for me anyways)

[22:48] *** adam-pwgsc left
[22:49] <s1n> moritz_: know of anything that needs work?

[22:49] <moritz_> s1n: t/spec/TODO in the pugs repo is full of stuff that needs work (not Rakudo stuff, I know)

[22:50] <moritz_> if you want to work on Rakudo, I have a nice idea to speed up the build process

[22:50] <moritz_> currently the setting is concatenated into one huge Perl 6 file, and then compiled to PIR

[22:51] <moritz_> it would be more efficient (and easier to parallelize) if all the files would be compiled separately

[22:51] <moritz_> and the PIR concatenated then

[22:51] <s1n> can you concat PIR files like that?

[22:52] <s1n> and why do you think that would speed things up?

[22:52] <moritz_> because larger files take over-proportionally long

[22:52] <moritz_> because they contain growing data structures like symbol tables etc.

[22:53] <moritz_> and yes, you can concatenate PIR like that

[22:53] <moritz_> that's how it's done for all the src/classes/*.pir etc.

[22:55] <s1n> jnthn: here's my shortcut, this seems to be a nice stop-gap measure

[22:55] <s1n> jnthn: http://gist.github.com/174282

[22:55] <moritz_> gotta sleep now, TTFN folks

[22:57] *** alester joined
[22:57] <jnthn> TTFN?

[23:00] <carlin> ta ta for now

[23:05] <jnthn> s1n: Ah, it's a step on the way to working out how to make %*ENV work. :-)

[23:05] <jnthn> carlin: ah, thanks :-)

[23:05] <s1n> jnthn: yes, but rakudo has no "temporary hacks" area

[23:06] <jnthn> s1n: I'm not really inclined to add a bunch of functions that people will start using, only to have to deprecate them later.

[23:06] <s1n> jnthn: it does indeed call setenv, i stopped it in gdb :)

[23:06] <s1n> jnthn: yes, i understand, but i thought i'd point it out and mention that it doesn't really belong yet

[23:07] <s1n> jnthn: there are no functions in the spec similar to the POSIX function, so it doesn't really belong anywhere

[23:10] <jnthn> s1n: *nod*

[23:10] <jnthn> I think getting %*ENV fixed up is probably the way to go.

[23:11] <s1n> jnthn: i agree, but that'll have to wait until i have a weekend free :)

[23:11] <jnthn> I may try and get Proxy objects done soon-ish so you can do that.

[23:11] <jnthn> (If you want to do that. :-))

[23:11] <s1n> jnthn: honestly, i'd rather do it once, than have to reimplement

[23:12] <jnthn> s1n: Aye.

[23:12] <jnthn> Then I'd wait for Proxy objects.

[23:12] <s1n> (if the needed bits aren't _huge_ that is)

[23:14] <jnthn> TimToady: Is this bit in S06 still correct?

[23:14] <jnthn>     set_name $obj: "Sam";   # try $obj.set_name("Sam") first, then

[23:14] <jnthn>                             # fall-back to set_name($obj, "Sam")

[23:15] <jnthn> (I know a lot of fall-back stuff went away, I'm not sure if this counts.)

[23:17] *** REPLeffect joined
[23:20] *** donaldh left
[23:20] *** donaldh joined
[23:27] *** payload left
[23:29] *** cdarroch left
[23:30] <Tene> japhb: I'm just about done at work for today.  Depending on what the gf has planned for tonight, I'll either get stuff done soon or late tonight before bed.

[23:34] <jnthn> std: ::Everything but KitchenSink

[23:34] <jnthn> aww, no evalbot :-)

[23:34] * jnthn just found where in the spec KitchenSink is defined.

[23:36] *** M_o_C left
[23:41] <s1n> phenny: tell masak did you forget to commit some stuff in Web.pm? i just pulled the tests and either i am testing wrong or they are failing; for example, it can't find Web::Happle

[23:41] <phenny> s1n: I'll pass that on when masak is around.

[23:44] *** nbrown joined
[23:54] *** [particle] left
[23:55] *** payload joined
[23:58] * jnthn just finished a re-read of S06.

[23:58] <jnthn> My word, there's some stuff in there.

