[00:02] <Casan> btw.. the property feature of C# is maybe already supported in another way through roles, say you could apply a does something to a $.attribute is rw, and in there write something similar to a property method that supports the encapsulation. just an idea.

[00:03] <skids> could be.

[00:05] <Casan> roles is an intriguing concept... pictured it once as a very dynamic include system.

[00:09] <skids> pugs: my $b; my $a = Proxy.new(:for($b), :FETCH{"OH".say}, :STORE{"HAI".say}); $a = 1;

[00:09] <p6eval> pugs:  ( no output )

[00:10] <skids> pugs: my $b; my $a is Proxy(:for($b), :FETCH{"OH".say}, :STORE{"HAI".say}); $a = 1;

[00:10] <p6eval> pugs: OUTPUT«*** ␤    Unexpected ");"␤    expecting term postfix or operator␤    at /tmp/ebeb47mBZv line 1, column 68␤»

[00:11] *** M_o_C left
[00:11] <skids> pugs: my $b; my $a is Proxy(:for($b), :FETCH{"OH".say}, :STORE{"HAI".say},); $a = 1;

[00:11] <p6eval> pugs: OUTPUT«*** ␤    Unexpected ");"␤    expecting "," or operator␤    at /tmp/tHvXOYNtwu line 1, column 69␤»

[00:43] *** sitaram joined
[00:51] *** sitaram left
[01:06] *** sitaram joined
[01:11] *** frew|work joined
[01:21] *** jferrero left
[01:33] *** LylePerl left
[01:38] *** LylePerl joined
[01:48] *** LylePerl left
[01:49] *** cspencer joined
[01:52] *** agentzh left
[01:52] *** eternaleye joined
[02:03] *** agentzh joined
[02:06] *** Casan left
[02:24] *** nbrown left
[03:10] *** meppuru joined
[03:26] *** meppl left
[03:45] *** alester joined
[03:47] *** orafu left
[03:47] *** orafu joined
[04:05] *** SamB left
[04:14] *** iblechbot joined
[04:16] *** justatheory left
[04:16] *** nihiliad left
[04:21] *** Tene joined
[04:23] *** redicaps joined
[04:30] *** cspencer left
[04:33] *** Tene_ left
[04:38] *** jaldhar joined
[04:41] <jaldhar> quick question.  How do you split up a string into unicode codepoints?  $string.comb gives back characters not codepoints

[04:48] <literal> .ord for "foo".split ?

[04:49] <literal> perl6: print .ord for "foo".split

[04:49] <p6eval> elf 26187: OUTPUT«Use of uninitialized value in concatenation (.) or string at ./elf_h line 5105.␤syntax error at (eval 125) line 4, near "(->ord"␤ at ./elf_h line 5881␤»

[04:49] <p6eval> ..rakudo 679e48: OUTPUT«too few arguments passed (1) - 4 params expected␤current instr.: 'parrot;Any;split' pc 34525 (src/gen_setting.pir:3295)␤»

[04:49] <p6eval> ..pugs: OUTPUT«102»

[04:50] <literal> oh well

[04:55] <jaldhar> ok.  I Will try again the next time I recompile rakudo.

[04:55] *** jaldhar left
[04:59] *** alester left
[05:01] *** frew|work left
[05:11] *** iblechbot left
[05:12] * jnthn likes airports with free wifi

[05:23] *** skids left
[05:26] *** mberends joined
[05:26] <mberends> jnthn: and that airport would be ... ?

[05:26] <lambdabot> mberends: You have 1 new message. '/msg lambdabot @messages' to read it.

[05:27] <mberends> @massage

[05:27] <lambdabot> Casan said 6h 7m 19s ago: regarding p6 mutators, C# properties: afaics the C# properties offer the encapsulation by allowing a private attribute in the class to be given a value from the class using

[05:27] <lambdabot> it through $classinstance.attritbute=value; and it will go through a mutator process before the value is stored. the example provided at http://xrl.us/gnxp is just using the mutator concept also

[05:27] <lambdabot> used by java where you have to specify eg a set_Attribute() and there

[05:29] <mberends> @tell Casan oh yes, I see, and also saw the lvalue sub discussion :)

[05:29] <lambdabot> Consider it noted.

[05:36] *** dukeleto joined
[05:36] *** FurnaceBoy left
[05:39] <jnthn> mberends: Vienna.

[05:39] <mberends> :)

[05:39] <jnthn> mberends: Though my other local airport - Bratislava - has it too. :-)

[05:40] <mberends> enjoy :) and happy landings

[05:48] * jnthn -> coffeeeeee

[06:01] *** redicaps left
[06:19] *** simcop2387 left
[07:05] *** [particle] left
[07:06] *** DemoFreak joined
[07:12] *** [particle] joined
[07:16] *** xinming_ joined
[07:35] *** xinming left
[07:46] *** icwiener joined
[07:49] *** masak joined
[07:51] <masak> greetings, flip-camels

[07:59] <mberends> masak: good @greeting[day-part::before-noon]

[08:01] <masak> mberends: oh hai.

[08:01] <masak> today is the day I start writing my slides in earnest.

[08:01] <masak> that means less of the usual hacking. oh well.

[08:02] <mberends> the tuits do get rounder as deadlines approach :)

[08:02] <masak> 哈哈

[08:02] <mberends> yeah, whatever

[08:03] * masak dives into slidemaking

[08:06] <masak> mberends: have you tried pun?

[08:07] <mberends> I read the book, so I wasn't in a great hurry to see the movie. sry ;)

[08:07] <mberends> I grokked it tho'

[08:08] <masak> ah, but the three-part play is awesome.

[08:08] <masak> mberends: it contains a bug.

[08:08] *** barney joined
[08:08] <mberends> easter buggy?

[08:08] <masak> or rather, Rakudo does.

[08:08] <masak> or maybe Parrot.

[08:08] <masak> yah, probably Parrot.

[08:08] <masak> it reads a line too much. :/

[08:08] * mberends will see the matinee performance

[08:09] <masak> hm, maybe I should just find the appropriate RT ticket and prioritize it...

[08:09] <mberends> yah I noes parrot reds 2 much.

[08:09] * masak does so

[08:09] <masak> it sucks.

[08:09] <masak> how are we supposed to do precision engineering under such circumstances? :P

[08:10] <mberends> Parrot appends a \n after a slurp, I was going to RT it and forgot, because I had hoped to include a proof and test.

[08:11] <mberends> just chomp it

[08:11] <masak> that would be a fine solution (except it sucks to have to adapt code to bugs), but here I'm reading line-by-line.

[08:11] <mberends> there are 4 places where Parrot slurps, making the bug a bit harder to find.

[08:12] <masak> that's part of the nice thing about -n and -p

[08:13] *** samlh joined
[08:13] <mberends> basically if the last line in a file does _not_ end in \n, Parrot adds one for you, trying to be consistent presumably.

[08:14] <masak> mm.

[08:14] <mberends> and you get an extra line for free :/

[08:14] <masak> parrot--

[08:15] <mberends> mberends-- # not flagging this earlier

[08:16] <masak> well, it's in RT since many months back: http://rt.perl.org/rt3/Ticket/Display.html?id=60142

[08:17] *** wolv- joined
[08:19] <masak> rakudo: class A; use Test

[08:19] <p6eval> rakudo 679e48:  ( no output )

[08:19] <masak> that one Null-PMCs on my box.

[08:20] <masak> rakudo: class A::C {}; A::B.foo

[08:20] <p6eval> rakudo 679e48: OUTPUT«Null PMC access in invoke()␤current instr.: '_block14' pc 60 (EVAL_20:41)␤»

[08:20] * masak submits rakudobug

[08:21] <mberends> masak, these are not slides ;)

[08:21] <masak> erm.

[08:21] <masak> research. :)

[08:22] <masak> (actually they're offline finds since yesterday.)

[08:23] <mberends> that's allowed :)

[08:24] <masak> phew. :)

[08:24] * masak wipes brow

[08:30] *** wolv left
[08:37] *** Woody4286 left
[08:57] *** ejs joined
[09:02] *** szabgab joined
[09:10] *** ludan joined
[09:20] *** agentzh left
[09:25] *** sri_kraih joined
[09:26] *** framp joined
[09:26] *** ludan left
[09:26] *** framp left
[09:27] *** iblechbot joined
[09:30] *** agentzh joined
[09:31] *** M_o_C joined
[09:33] *** agentzh left
[09:42] *** grwi joined
[09:52] *** agentzh joined
[09:57] *** barney left
[10:02] *** masak left
[10:06] *** sitaram left
[10:22] *** Woody4286 joined
[11:01] *** masak joined
[11:03] *** DemoFreak left
[11:03] *** SamB joined
[11:06] <masak> proto keeps leaving those make.log files in all my repos...

[11:06] <masak> I wish it'd stop doing that.

[11:13] * mberends CAN HAZ FLIP LOBSTR o/

[11:14] <masak> \o/

[11:14] *** goksie joined
[11:15] *** Woody4286 left
[11:15] <masak> mberends: oh, and I just successfully worked around the one-line-too-many parrotbug in pun.

[11:15] <masak> (yeah, yeah. slides. :) )

[11:16] <mberends> :)

[11:16] <mberends> and well done :)

[11:17] <masak> 谢谢

[11:17] * masak uses cat(1) for its original purpose

[11:19] <mberends> and after the slides, suggestion: for the hordes who will want their own Lobster, include a PERL6LIB= somewhere in the README.

[11:19] <masak> the README of Web.pm? aye, it's way behind the times.

[11:19] <mberends> aye

[11:19] <masak> "after the slides" would be sometime tomorrow, by the current time plan.

[11:20] <mberends> :)

[11:25] <masak> perl6n and perl6p now accept input files after the script, too.

[11:25] <masak> hacking in bash hurts. :/

[11:28] *** grwi left
[11:28] *** eduard joined
[11:28] <masak> but the scripts are already quite useful to me. I doogfood them a lot.

[11:31] *** payload joined
[11:31] *** eduard is now known as DHGE

[11:35] *** zamolxes joined
[11:44] <ingy> au

[11:49] *** ejs1 joined
[11:49] <wayland76> The time is 9:46 in au

[11:50] *** ejs1 left
[11:54] *** payload left
[11:55] <masak> Au is also the chemical symbol for gold.

[11:56] <wayland76> Yes.  "We've golden soil, and wealth for toil..." (a quote from our national anthem) :)

[11:58] <masak> maybe not a coincidence.

[11:58] *** ejs left
[11:59] <wayland76> Maybe not, but I suspect it is :)

[11:59] <wayland76> Or rather, was providential, rather than with any human intent :)

[12:00] <masak> good enough for me. :)

[12:23] *** Woody4286 joined
[12:39] *** masak left
[12:39] *** masak joined
[12:48] *** goksie left
[12:53] *** DHGE left
[13:03] *** sitaram joined
[13:10] *** ludan joined
[13:11] *** masak left
[13:18] *** LylePerl joined
[13:23] *** masak joined
[13:41] *** barney joined
[13:48] *** skids joined
[13:51] *** Tene_ joined
[13:51] *** jan_ left
[13:51] *** frobnitz left
[13:52] *** frobnitz joined
[13:56] *** simcop2387 joined
[14:00] *** lucs left
[14:00] *** szbalint left
[14:00] *** scrottie left
[14:00] *** yves left
[14:00] *** PerlJam left
[14:00] *** pmichaud left
[14:00] *** shachaf left
[14:00] *** mj41 left
[14:00] *** Woody2143 left
[14:00] *** allbery_b left
[14:00] *** shachaf joined
[14:00] *** szbalint joined
[14:00] *** scrottie joined
[14:00] *** allbery_b joined
[14:04] *** Tene left
[14:14] *** M_o_C left
[14:15] *** M_o_C joined
[14:17] *** ludan left
[14:30] *** amoc joined
[14:36] *** ludan joined
[14:39] *** PacoLinux joined
[14:48] *** ingy left
[14:49] *** ingy joined
[15:01] *** Trey left
[15:01] *** Trey joined
[15:03] *** cognominal joined
[15:08] *** rafl_ joined
[15:09] *** rafl left
[15:12] *** nihiliad joined
[15:12] <LylePerl> I've finished the first part of my "helping with Perl 6 Development" guide

[15:12] <LylePerl> http://www.perlfoundation.org/perl6/index.cgi?roadmap_to_helping_with_development

[15:12] * masak reads

[15:13] <LylePerl> I've managed to document everything I've learned so far

[15:13] <masak> amazing.

[15:13] <LylePerl> Now I'm (finally) up to the bit of writing spec for a new feature (chdir)

[15:14] <masak> LylePerl++

[15:14] <LylePerl> And I'm a bit stuck :/

[15:14] <masak> just ask.

[15:14] *** [particle]1 is now known as [particle]-

[15:14] <masak> LylePerl: a nit: Pugs is usually written like a normal word, even though it's technically an acronym.

[15:15] <LylePerl> masak: ok, I'll fix that next time I update :)

[15:15] <masak> on the other hand, SVN is usually written with all-caps, unless you mean the CLI command.

[15:15] *** sri_kraih_ joined
[15:16] <LylePerl> Damnd conventions :)

[15:16] <masak> indeed.

[15:16] <LylePerl> I've read through s32 IO

[15:17] <LylePerl> There is section IO::DirectoryNode that has rmdir

[15:17] <LylePerl> So I'm guessing chdir would go there?

[15:18] <LylePerl> I'm really not sure what I'm doing :s

[15:18] <masak> I think you're right.

[15:19] <LylePerl> So do I make changes to the file then upload by svn?

[15:19] <masak> aye.

[15:19] <LylePerl> Do I need to get commit access?

[15:19] <LylePerl> Also TimToady was saying about a $CD object...

[15:19] <masak> you need a Pugs commitbit.

[15:19] *** pmurias joined
[15:20] <[particle]-> i can give you one

[15:20] <LylePerl> particle: Thanks

[15:20] <[particle]-> all i need is your email address and preferred svn username

[15:21] <LylePerl> particle: I am new to svn though, it's version controlled so I wont be able to accidentally break anything will I??

[15:21] <masak> LylePerl: my suggestion is to write the smallest thing that works. if we need a $CD object, one will surely be added later. what's important now is that the chdir function is added.

[15:21] <[particle]-> no, don't worry

[15:21] <masak> LylePerl: trust the anarchy.

[15:21] <[particle]-> we have a "forgiveness is better than permission" model

[15:21] <LylePerl> :)

[15:21] <masak> if a bad commit comes in, someone will revert it.

[15:21] *** jan_ joined
[15:21] <masak> that's the way it works. :)

[15:22] <LylePerl> ok, my email [email@hidden.address] and user cosmicnet

[15:22] <[particle]-> invite sent to that email address.

[15:22] <LylePerl> thanks

[15:23] <masak> [particle]-: oh hai, by the way. is there a time plan for some of the lower-hanging flags to perl6?

[15:23] <[particle]-> it may take a few minutes to arrive, depending on server load

[15:23] <masak> [particle]-: you might have seen what I did to fake -n and -p for the time being.

[15:23] <[particle]-> masak:  i've just finished up a consulting gig that should restore a healthy quantity of free time in my life again.

[15:23] <masak> sounds promising.

[15:24] <[particle]-> ...which i will devote to S19.

[15:24] *** amoc left
[15:24] <masak> \o/

[15:24] <[particle]-> i haven't seen the -n/-p work

[15:24] <[particle]-> but, i'll review it soon

[15:24] <masak> http://github.com/masak/pun/

[15:26] *** exodist joined
[15:26] *** frew|work joined
[15:27] *** ludan left
[15:28] *** barney left
[15:29] *** pmichaud joined
[15:29] <[particle]-> thanks!

[15:30] *** ludan joined
[15:34] *** sri_kraih left
[15:45] *** riffraff joined
[15:48] *** rindolf joined
[15:48] <rindolf> Hi all.

[15:49] *** PZt joined
[15:49] <diakopter> hi

[15:51] <diakopter> etoofewops

[15:52] <masak> most of the ops are in transit.

[15:52] *** ChanServ sets mode: +o masak

[15:52] *** ChanServ sets mode: +o [particle]-

[15:52] *** ChanServ sets mode: +o pmichaud

[15:53] <masak> :)

[15:53] *** ChanServ sets mode: +o Tene_

[15:53] <diakopter> ok better

[15:53] <masak> thanks. I'm one of those who log out, so it won't stick, unfortunately.

[15:53] <masak> but I appreciate the thought.

[15:54] <diakopter> k

[15:55] *** Psyche^ joined
[15:58] <pmichaud> I'm about to log out/in again, as I need to reset my session.

[15:59] *** lucs joined
[16:02] *** zamolxes left
[16:03] *** ludan left
[16:04] <pugs_svn> r26188 | cosmicnet++ | added spec for chdir

[16:05] <[particle]-> cosmicnet++

[16:07] <masak> LylePerl++

[16:07] *** Patterner left
[16:07] *** Psyche^ is now known as Patterner

[16:09] <pmichaud> bbiab -- resetting irssi session

[16:09] <masak> LylePerl: might I suggest that it returns some informative value of True, such as a Str with the name of the directory?

[16:09] *** pmichaud left
[16:10] *** pmichaud joined
[16:10] *** masak sets mode: +o pmichaud

[16:10] <masak> hm, I see now that rmdir is specced to return true on success...

[16:17] *** icwiener_ joined
[16:18] <pugs_svn> r26189 | cosmicnet++ | added spec for chdir

[16:19] <masak> LylePerl: or you could write "touched 'last-modified' and added self as author" as the commit summary. :)

[16:20] <LylePerl> cool changes appear here

[16:21] <LylePerl> masak: your write I probably should have wrote that, can I edit it?

[16:21] <masak> no need. :)

[16:21] <masak> just keep it in mind till next time.

[16:21] <masak> LylePerl: I reviewed both commits, and the look fine.

[16:21] <LylePerl> I wasn't sure if i should update the document version number or not?

[16:22] <masak> I think so, whenever you introduce something new.

[16:22] <masak> but I also think that it doesn't matter very much. I've never understood why we keep with those version numbers.

[16:23] <LylePerl> masak: should I change it now? (and earlier I meant your right...)

[16:23] <masak> perhaps the one instance when it might be important is when some detail actually changes.

[16:23] <masak> LylePerl: you could, if you like.

[16:24] *** amoc joined
[16:26] <masak> going for a run. will be back tonight.

[16:26] *** masak left
[16:27] <[particle]-> that's a long run! it's 0927 here

[16:32] *** icwiener left
[16:34] <LylePerl> Right, now to figure out how to write spec tests

[16:38] <LylePerl> This might sound a bit dumb

[16:38] <LylePerl> But I'm assuming there are Perl 5 spec tests for chdir?

[16:38] <LylePerl> Where are they?

[16:39] <[particle]-> do you have ack installed?

[16:39] <[particle]-> cpan App::Ack

[16:40] <[particle]-> also, make sure you have the pugs t/ directory checked out

[16:40] <[particle]-> then ack chdir t/

[16:41] <[particle]-> ack is a grep replacement, written in perl, especially useful when working in working copies

[16:42] <LylePerl> hmmm can't find an ActivePerl Ack package, I'll try to build

[16:43] <[particle]-> ppm install App::Ack

[16:43] <[particle]-> it's there

[16:43] <[particle]-> but, it's an easy build from cpan

[16:43] <LylePerl> That's odd it's not coming up for me. I'm on 5.10

[16:44] <LylePerl> I'm showing plain 'ack'

[16:47] <[particle]-> http://nopaste.snit.ch/16260

[16:49] <dalek> rakudo: 2c13d6c | pmichaud++ | docs/spectest-progress.csv:

[16:49] <dalek> rakudo: spectest-progress.csv update: 359 files, 10298 passing, 5 failing

[16:49] <dalek> rakudo: Failure summary:

[16:49] <dalek> rakudo:     S32-hash/reverse.t aborted 5 test(s)

[16:49] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/2c13d6c19d55e9284ea7f6b74c62551934d319eb

[16:50] <LylePerl> particle: I see. I was using the ppm GUI that wan't showing it. App::Ack is part of the ppm ack

[16:53] *** DemoFreak joined
[16:53] <[particle]-> aha. i've never used the gui

[16:53] <LylePerl> Thanks that's brought up 3 files that try to use chdir

[16:53] <LylePerl> Not as test though... I'll investigate and add that to my guide :)

[16:54] <[particle]-> if they're under t/spec, then they're in spec tests

[16:54] <[particle]-> if they're outside t/spec, they're old pugs tests that should be converted

[16:54] <LylePerl> there in t/builtins

[16:55] <LylePerl> I see perl 5

[16:55] <LylePerl> so there are no chdir tests

[16:56] <LylePerl> as chdir is part of s32/io

[16:57] <LylePerl> do I create the folder t/spec/S32-io?

[16:58] <LylePerl> There is already a t/spec/S16-io, but chdir isn't part of s16...

[16:58] <LylePerl> Would that be correct?

[17:00] <[particle]-> sure

[17:17] *** Woody2143 joined
[17:24] *** sitaram left
[17:24] *** kane_ left
[17:31] *** maerzhase joined
[17:34] *** [particle]- left
[17:34] *** [particle]1 joined
[17:36] *** [particle]1 is now known as [particle]-

[17:46] *** kidd left
[17:48] *** japhb left
[17:49] *** Tene joined
[17:52] *** cspencer joined
[17:54] *** szabgab left
[17:56] *** frew|work left
[18:00] *** Tene_ left
[18:03] *** cspencer left
[18:06] *** mberends left
[18:16] *** LylePerl left
[18:26] *** LylePerl joined
[18:27] *** LylePerl left
[18:40] *** dduncan joined
[18:40] *** dduncan left
[18:47] *** japhb joined
[18:56] *** minazo joined
[19:00] *** kidd joined
[19:08] <TimToady>  /id

[19:09] <TimToady> not to mention /ego

[19:10] <[particle]-> i was just thinking how glad i am that you're now in immediate gratification mode

[19:12] <TimToady> use Christmas :asap;

[19:12] <TimToady> lunch &

[19:23] *** icwiener-_- joined
[19:27] *** smtms left
[19:31] *** payload joined
[19:33] *** ejs joined
[19:34] *** cspencer joined
[19:36] *** LylePerl joined
[19:38] *** payload left
[19:39] *** payload joined
[19:40] *** icwiener_ left
[19:42] *** masak joined
[19:42] *** cspencer left
[19:43] *** alester joined
[19:46] *** payload left
[19:55] <LylePerl> hi masak, good run?

[19:55] <masak> LylePerl: aye, thank you.

[19:55] <masak> ran for almost an hour.

[19:56] <masak> my body feels very satisfied afterwards.

[19:56] <LylePerl> good for you :)

[19:57] <masak> I'm currently trying not to procrastinate writing my slides too much.

[19:57] *** fridim_ left
[19:58] *** fridim_ joined
[19:58] <LylePerl> been looking at the perl5 tests for chdir

[19:58] <LylePerl> It uses File::Spec::Functions

[19:59] <masak> ok.

[19:59] <LylePerl> I don't fully understand the state on Perl 6 modules

[20:00] <LylePerl> So there is no central PAN?

[20:00] <LylePerl> Some Pugs, others in Rakudo, other on Git???

[20:02] <masak> LylePerl: that's right. things are very much spread out and in flux.

[20:03] <LylePerl> That's a pain :/ Maybe a page on the wiki where things can be listed? At least until a new kind of cpan is formed...

[20:03] <masak> LylePerl: to be honest, I don't count the things in Pugs, since they are probably mostly outdated and haven't been tested in Rakudo.

[20:04] <masak> LylePerl: perl6-examples on github was started partly to port things over from the Pugs repo.

[20:05] <masak> LylePerl: Rakudo holds exactly one module: Test.pm. people keep saying that it shouldn't be a module, that it should be integrated into the setting, etc. that keeps not happening. :)

[20:05] *** payload joined
[20:05] *** ejs left
[20:05] <LylePerl> masak: I came across perl6-examples at one point, I'll have to look again in more detail

[20:06] <masak> it also has new modules not from Pugs, thanks to mberends++

[20:06] <pmichaud> I'm also hoping to get some clarity in modules at NPW

[20:07] <LylePerl> wish I was going to NPW :(

[20:07] *** M_o_C left
[20:07] <masak> pmichaud: I will re-read the specs looking for things on modules in time for NPW.

[20:08] <pmichaud> masak: that would be great.  Many of the specs are purposefully vague, leaving it to the implementors and module writers to work something out.

[20:08] <pmichaud> TimToady++ will (rightly) point out that we also need to deal with versioned modules; my approach has been to kick that can down the road a bit further.

[20:09] <masak> pmichaud: me too. none of my projects are versioned. :)

[20:09] <pmichaud> I'm wondering if rakudo should include any modules in its releases (more)

[20:09] <pmichaud> and if so, should any of those modules appear in git checkouts

[20:10] <pmichaud> perhaps we need a "make lib" or "make stdmodules" target to check them out of whatever repo is appropriate.

[20:11] <masak> pmichaud: I've always had the impression that implementations only need ship with the modules necessary for bootstrapping connection with a CPAN equivalent.

[20:11] <pmichaud> sure, but there's also a question of expectations -- what will someone expect upon downloading Rakudo ?

[20:11] <pmichaud> at least until we have specific distributions available as .rpm or .deb or whatever

[20:13] <LylePerl> Some users (like windows ones) will expect everything to be included from the first install

[20:13] <masak> well. what _will_ someone expect upon downloading Rakudo?

[20:13] <pmichaud> that's part of what I hope to explore at NPW :-)

[20:13] <masak> which modules are we talking about, exactly?

[20:13] <pmichaud> a good question would be things like File::Spec

[20:13] <masak> are any of them written yet? :)

[20:13] <LylePerl> I've come across plenty of win32 hosting companies that struggle to use ppm

[20:14] <pmichaud> and there are some in pugs ext/ directory

[20:14] <pmichaud> which might be good candidates to update to recent Perl 6 implementations

[20:14] <masak> hm. I'm afraid I will have to pull the plug to get some slide-making done. the intertubes are too distracting.

[20:14] <masak> will backlog.

[20:15] <pmichaud> okay, see you at NPW, then :-)

[20:15] <pmichaud> (tomorrow is a travel day for me)

[20:15] <masak> pmichaud: yes. looking forward to it.

[20:15] <masak> pmichaud: have a pleasant journey.

[20:16] *** iblechbot left
[20:16] *** masak left
[20:18] <LylePerl> Is there a Rakudo version of File::Spec?

[20:19] <pmichaud> not yet.... but there really shouldn't be a "Rakudo version"  or a "Pugs version".  There should just be a File::Spec

[20:20] <[particle]-> and i hope the interface is much more like class::path than file::spec

[20:21] <[particle]-> maybe named IO::Path

[20:23] <LylePerl> for chdir.t I'm thinking I'll just extract the bits I need from the File::Spec at Pugs, rather than depend on the module... Would you agree?

[20:23] <pmichaud> seems reasonable.

[20:23] <pmichaud> If it turns out to be unreasonable, we'll fix it then.  :-)

[20:24] <LylePerl> ok :)

[20:32] <LylePerl> Would anyone mind if I created a page to list the current Perl 6 modules and how to get them? I don't want to step on any toes...

[20:33] <pmichaud> Sounds like a terrific idea.

[20:34] <pmichaud> I have a couple of place to link to it, as well.

[20:34] <pmichaud> There's also perl6-projects.org

[20:34] <[particle]-> perl6-examples

[20:34] <pmichaud> well, I think of perl6-examples as being more example programs than actual modules

[20:35] <[particle]-> er, if perl6-examples is the standard repo for modules, the docs may fit best there

[20:35] <[particle]-> but, perl6-projects.org seems a good fit as well

[20:35] <pmichaud> I'm not sure it'll be the standard repo for modules.  I'm thinking of creating an initial standard repo under github/perl6

[20:36] <LylePerl> pmichaud: I think that'd be a great idea. Having things all over the place is a real pain for any new developers

[20:36] <pmichaud> yes, but like you, I also don't want to step on any toes.  :-)

[20:37] <pmichaud> on the other hand, perhaps "forgiveness" is the better philosophy here.  And JFDI.

[20:39] <LylePerl> I'd say JDI (I don't like to swear) :p

[20:39] <pmichaud> I think JDI might infringe on a trademark :-)

[20:42] *** iblechbot joined
[20:45] <[particle]-> LylePerl: the f is silent

[20:58] *** icwiener-_- left
[21:09] *** japhb left
[21:10] *** japhb joined
[21:15] *** Casan joined
[21:16] *** payload left
[21:18] <pmichaud> http://www.perlfoundation.org/perl6/index.cgi?perl_6_hackathon_targets

[21:20] *** payload joined
[21:21] *** amoc left
[21:23] *** Limbic_Region joined
[21:30] *** wknight8111 joined
[21:43] *** nihiliad left
[21:44] *** maerzhase left
[21:45] <skids> pmichaud: if you run out of "language targets" early, I have put some more stuff on http://www.perlfoundation.org/perl6/index.cgi?perl6_tasks probably since last you looked.

[21:46] *** fridim_ left
[21:46] <pmichaud> maybe we link to perl6_tasks from my list

[21:46] <skids> But mostly, best of luck!

[21:54] *** alester left
[21:59] *** liufeng joined
[22:00] <liufeng> ?eval [+] 1..100

[22:02] <[particle]-> rakudo: say [+] 1..100

[22:02] <p6eval> rakudo 2c13d6: OUTPUT«5050␤»

[22:09] *** iblechbot left
[22:15] *** liufeng left
[22:15] *** skids left
[22:15] *** ludan joined
[22:32] *** ludan left
[22:34] *** riffraff left
[22:46] *** hercynium joined
[22:47] *** payload left
[22:48] *** payload joined
[23:06] *** ruoso joined
[23:07] <ruoso> Hello

[23:08] *** davidad left
[23:10] *** DemoFreak left
[23:29] *** exodist left
[23:30] *** davidad joined
[23:30] *** cspencer joined
[23:39] *** wknight8111 left
[23:48] <pmurias> ruoso: hi

[23:48] <ruoso> hi pmurias 

[23:49] * ruoso working a lot lately

[23:49] <ruoso> almost no time to be around here

[23:51] <pmurias> the refactored smop is starting to run some code, "1;" with --empty-setting

[23:51] <ruoso> cool

[23:52] <pmurias> shower&

[23:56] *** brunov joined
[23:59] *** bacek_ joined
