[00:00] *** tylerni7 left
[00:03] *** tylerni7 joined
[00:07] *** nbrown left
[00:17] *** nbrown joined
[00:24] *** alester joined
[00:25] *** tak11 joined
[00:33] *** colomon joined
[00:37] *** synth left
[00:42] *** _jaldhar joined
[00:50] *** jrtayloriv left
[00:51] *** nbrown left
[00:54] *** jaldhar left
[00:55] *** ihrd joined
[01:10] *** PZt joined
[01:21] <s1n> phenny: tell pmichaud i think parrot/compilers/nqp/src/Grammar.pg might be what i was looking for

[01:21] <phenny> s1n: I'll pass that on when pmichaud is around.

[01:34] <diakopter> phenny: tell lambdabot @msgs

[01:34] <phenny> diakopter: I'll pass that on when lambdabot is around.

[01:35] <diakopter> @tell phenny tell lambdabot @tell phenny tell lambdabot @msgs

[01:35] <lambdabot> Consider it noted.

[01:35] <phenny> lambdabot: 01:34Z <diakopter> tell lambdabot @msgs

[01:35] <diakopter> hrm.

[01:35] <__ash__> are you trying to make an infinite loop? 

[01:36] <diakopter> I don't know; am I?

[01:36] <diakopter> wait, are you?

[01:37] <__ash__> lol, /shrug 

[01:37] *** jferrero left
[01:38] <__ash__> have you ever done any meta programming diakopter? 

[01:40] <diakopter> __ash__: I seem to recall something of the sort

[01:40] <__ash__> there isn't a spec for the meta objects in perl6, have any thoughts on the topic?

[01:41] <diakopter> I thought there was one

[01:41] <__ash__> not that i have seen, or moritz_ 

[01:41] <diakopter> I wrote a parser-generator-generator (aka a parser generator with a configurable grammar-grammar) a couple of months ago

[01:42] <diakopter> I thought ruoso wrote up how he implemented P6Object

[01:43] * diakopter searches the irclogs

[01:43] <__ash__> well, if that exists that would be lovely, moritz_ was saying someone should come up with a metaclass spec so i thought i'd get a ball rolling if i could and blog about some ideas and see what people have to say on the topic

[01:44] <diakopter> odd; I coulda sweareth there were several writeups on it

[01:45] <__ash__> there may be, if so that would be great

[01:45] *** bgs100 joined
[01:45] <__ash__> just because we don't know about it doesn't mean it doesn't exists :P 

[01:46] *** bgs100 is now known as dgs100

[01:47] *** rhr_ joined
[01:48] *** synth joined
[01:49] <diakopter> I'd look in the Synopses but when I go to read them online, my scroll bar becomes about 1 pixel tall, and it's a tad overwhelming.

[01:49] <diakopter> scroll bar handle, I mean.

[01:49] *** sri_kraih_ joined
[01:49] *** Whiteknight left
[01:50] <__ash__> the S12 Synopses touches on it but not in much detail, not what i would call 'fleshed out' 

[01:50] *** rhr left
[01:50] <donri> i saw a discussion about executable class bodies earlier, what was the conclusion? does/will perl6 have 'em, or why not (there usually is a good reason when the answer is no :))?

[01:50] <__ash__> they have them already

[01:51] <donri> you can do meta stuff a la ruby?

[01:51] <__ash__> they do not have some meta operations though like ruby, yet.

[01:51] <__ash__> you can do some of that, but not all of it will work because of meta-related magic not being implmented yet

[01:51] <diakopter> someone define "executable class bodies" please?

[01:52] <__ash__> class A { if true { ... do something .. } else { .. do something else ..  } }

[01:52] <donri> I have suspicions that many rubyists secretly have a perl-mentality but just want a cleaner language/OOP-model than perl5. they will love perl6 if they get over their FUD from perl5. :)

[01:52] *** dgs100 is now known as bgs100

[01:52] * donri is an ex-rubyist

[01:53] <diakopter> ok... when does the stuff inside class A { } run?

[01:53] <donri> __ash__: i'm mostly interested in what is *intended* though

[01:53] <__ash__> i am a rubyist at heart, but perl6's non OO stuff makes me want to do do more perl6, although i have high hopes for perl6's OO too

[01:53] <__ash__> diakopter:  during class construction

[01:55] <donri> scope is also an important factor, where the scope of course is the class

[01:55] <diakopter> when is class construction [triggered]?

[01:55] <donri> in ruby, when the file is first loaded/required

[01:56] <donri> i'm not very familiar with how packages/whatever work in perl

[01:56] <__ash__> it would be basically at compile time

[01:57] <donri> not really

[02:00] <__ash__> why not? 

[02:01] <donri> maybe YARV does some tricks for toplevel requires at compile time, duno

[02:01] <donri> but then it's a trick ;) require as such is a runtime operation

[02:02] <__ash__> the current perl6 spec doesn't talk about meta operations like a composition method for roles or an add_method function for classes for instance, both of which would be useful

[02:03] <__ash__> i also thing some hook functions like one thats called when an object is inherited 

[02:03] <__ash__> i am reading up on some other metaobject systems (like the CLOS ansi one, the ruby one, python too) to make sure i am not missing something that would be useful that i have personally used before

[02:06] *** sri_kraih left
[02:06] *** sri_kraih_ is now known as sri_kraih

[02:09] *** bgs100 left
[02:10] <__ash__> donri: http://gist.github.com/186441 works in rakudo right now

[02:10] <lambdabot> Title: gist: 186441 - GitHub

[02:10] <__ash__> should print "a  b" 

[02:11] <diakopter> rakudo: »ö«ö»ö«

[02:11] <donri> but can you define method names dynamically?

[02:11] <p6eval> rakudo 446d49: OUTPUT«Syntax error at line 2, near "\x{bb}\x{f6}\x{ab}\x{f6}\x{bb}\x{f6}\x{ab}"␤in Main (src/gen_setting.pm:3469)␤»

[02:11] * diakopter wants p6eval to translate the x{hh} to u

[02:13] <__ash__> rakudo: class A { }; my &b = method { say self.WHAT; }; my $a = A.new; $a.&b();

[02:13] <p6eval> rakudo 446d49: OUTPUT«A()␤»

[02:13] <__ash__> you can't bind a random method to a class currently, but there are plans for it, (an add_method function) 

[02:14] <__ash__> you can always do class Foo is also { } to extend the class defintion 

[02:15] <__ash__> although they are changing 'class XXX is also' to 'augment class XXX' 

[02:17] *** zamolxes left
[02:18] *** tak11 left
[02:18] *** ihrd left
[02:19] *** agentzh joined
[02:20] *** justatheory left
[02:25] <__ash__> so, does anyone have any comments on how the meta system needs to work? 

[02:34] *** tak11 joined
[02:34] *** am0c joined
[02:58] *** snarkyboojum left
[03:18] <carlin> rakudo: grammar foo { rule TOP { 'lorem' | <.panic> }; method panic { die "The sky is falling!"; }; }; foo.parse('blah');

[03:18] <p6eval> rakudo 446d49: OUTPUT«Null PMC access in find_method()␤in method foo::panic (/tmp/jpiMsPIkac:2)␤called from regex foo::TOP (/tmp/jpiMsPIkac:2)␤called from Main (/tmp/jpiMsPIkac:2)␤»

[03:18] <donri> i wonder, could design by contract be implemented by meta programming in a way that feels native?

[03:25] <__ash__> i am not very familiar with design by contract

[03:25] *** sevvie_ joined
[03:25] *** sevvie left
[03:38] *** test34 joined
[03:49] *** alester left
[03:59] *** FCO joined
[04:00] *** SmokeMachine left
[04:01] *** frew_ joined
[04:04] *** asciiville joined
[04:06] *** asciiville left
[04:12] *** araujo left
[04:13] *** araujo joined
[04:13] *** araujo left
[04:15] *** araujo joined
[04:16] *** araujo left
[04:17] *** araujo joined
[04:19] *** dukeleto left
[04:20] *** araujo left
[04:21] *** dukeleto joined
[04:22] *** araujo joined
[04:23] *** __ash__ left
[04:24] *** __ash__ joined
[04:25] *** dukeleto left
[04:27] *** justatheory joined
[04:30] *** justatheory left
[04:30] *** alester joined
[04:32] *** gabiruh joined
[04:35] *** meppl joined
[04:55] *** __ash__ left
[05:16] *** mhymn left
[05:17] *** nihiliad left
[05:19] *** frew_ left
[05:43] *** alester left
[05:53] *** flip913 joined
[05:55] *** agentzh left
[05:57] <flip913> Is it correct that "Rakudo*" translates in P6-speak to "Rakudo Whatever"?

[06:00] <obra_> what do you mean by that?

[06:01] <obra_> Rakudo* is to be the first 'stable' release of Rakudo coming in spring of 2010

[06:07] <flip913> Yes ... and "*" is the "Whatever" operator ... so I conclude that "Rakudo *" is a Perl6 with "Whatever" is finished at that time ;-)

[06:08] <obra_> not quite how I've heard pmichaud describe it. There's very much a list of "must haves"

[06:14] <devin> pronounciation is "rakudo star" ... jnthn told me it means partly a "star" like in the sky, to fix your gaze upon as a goal

[06:15] <flip913> Well, I've been reading S02, and that's where the association comes from ...

[06:18] <moritz_> I think it's not totally wrong - the version number is "whatever"

[06:19] <donri> "kinda 1.0, but whatever"? :)

[06:20] <moritz_> maybe we'll release the versions *, *+1, *+2 etc ;-)

[06:21] <rewt> *.0, *.1, ..., **.0, ... ***.0, etc

[06:22] <moritz_> rakudo: say (* ** *).(3)

[06:22] <p6eval> rakudo 446d49: OUTPUT«27␤»

[06:22] *** lambdabot left
[06:25] *** rfordinal left
[06:41] *** orafu left
[06:41] *** orafu joined
[06:46] *** mj41 joined
[06:50] *** barney joined
[06:51] <flip913> rakudo: say(* * * ** *)(3);

[06:51] <p6eval> rakudo 446d49: OUTPUT«!whatever_closure␤invoke() not implemented in class 'Boolean'␤in Main (/tmp/cNTDmoY4bw:2)␤»

[06:52] <flip913> rakudo: say(* * * ** *).(3);

[06:52] <p6eval> rakudo 446d49: OUTPUT«!whatever_closure␤invoke() not implemented in class 'Boolean'␤in Main (/tmp/cRN3VxPJ8L:2)␤»

[06:52] <flip913> strange, that works for me ...

[06:53] <flip913> Ah, this rakudo is out-of-date by about a week ... that's why.

[06:55] <moritz_> ouch.

[06:56] <pugs_svn> r28237 | moritz++ | [evalbot] don't quote things in system LIST 

[07:04] <dalek> rakudo: e4c7a05 | moritz++ | build/PARROT_REVISION:

[07:04] <dalek> rakudo: bump PARROT_REVISION to get fixes in Scalar.assign_pmc

[07:04] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/e4c7a05c874f38f317e4fde8890bb1ed77fbf63e

[07:07] *** rfordinal joined
[07:09] *** akl left
[07:09] *** KatrinaTheLamia left
[07:09] *** akl joined
[07:12] <Matt-W> Good morning

[07:21] *** agentzh joined
[07:25] <carlin> rakudo: my $regex = regex :g:s:i { my name is (.*) };

[07:25] <p6eval> rakudo 446d49: OUTPUT«Malformed regex definition at line 2, near ":g:s:i { m"␤in Main (src/gen_setting.pm:3469)␤»

[07:25] <carlin> rakudo: my $regex = regex { :g:s:i my name is (.*) };

[07:25] <p6eval> rakudo 446d49:  ( no output )

[07:28] <carlin> Is that first one NYI?

[07:29] <moritz_> yes

[07:29] <moritz_> and I think :g is NYI in general

[07:30] <carlin> Ah okay

[07:33] <carlin> The second isn't in the spec AFAICT, was it implented and then the spec was changed? Or are they both correct?

[07:41] *** kidd joined
[07:52] *** xinming_ joined
[07:58] *** ssm left
[07:58] *** rhr_ left
[07:58] *** krunen left
[07:58] *** Caelum left
[07:58] *** Caelum_ joined
[07:59] *** he_ joined
[07:59] *** ssm joined
[07:59] *** michaelr joined
[08:02] *** Caelum_ is now known as Caelum

[08:02] *** flip913 left
[08:04] *** szbalint joined
[08:04] *** krunen joined
[08:09] <pugs_svn> r28238 | carlin++ | [S05] Small grammatical fix 

[08:09] *** xinming left
[08:12] *** rhr joined
[08:17] *** alexn_org joined
[08:22] *** ejs joined
[08:28] *** flip913 joined
[08:36] <flip913> S03, hyperop, anyone?

[08:39] <flip913> If I've got a tree structure in a variable, and want to call some function on every entity, I read something along the lines of $tree.>>.foo in S03.

[08:39] <flip913> Now hyperoperators have no order defined.

[08:39] <Matt-W> $tree>>.foo

[08:39] <flip913> Is it possible to declare that I want the parents done before the children?

[08:40] <Matt-W> if ordering is important, use an explicit loop

[08:40] <flip913> The order of the children wouldn't be important, just that a parent is completely done before the children

[08:40] <flip913> If I write the Each() for the object myself?

[08:45] <Matt-W> Well I don't know how your tree is structured

[08:45] <Matt-W> hyperoperators work on lists

[08:45] <Matt-W> presumably hooking into a role there, the name of which I can't remember

[08:50] <flip913> role Each according to S03

[08:51] <flip913> Each Node would have a list (or maybe hash) of children

[08:52] <Matt-W> It would depend, then, how you do Each in your tree classes

[08:52] <Matt-W> But hyperoperators can parallelise, so you still shouldn't depend on ordering

[08:53] <Matt-W> although you could ensure parent->child ordering

[08:53] <Matt-W> just not parent->parent

[08:53] <flip913> That would be ok ... I just need to have a parent finished before going to the children

[08:53] <Matt-W> You could arrange that

[08:55] <Matt-W> it may be that normal hyperoperator semantics don't fit that particularly well though - you might get a clearer interface by using a method taking a Callable

[09:02] <mikehh> rakudo (e4c7a05) builds on parrot r41257 - make test / make spectest (up to 28238) PASS - Ubuntu 9.04 amd64

[09:02] <mikehh> rakudo - t/spec/S03-operators/arith.rakudo - TODO passed:   120, 131-132

[09:02] <mikehh> rakudo - no Segmentation faults reported in make spectest

[09:02] <kidd> ls

[09:03] <kidd> ooops, sorry :(

[09:05] * carlin likes Irssi's oops.pl script (http://scripts.irssi.org/html/oops.pl.html)

[09:06] <mikehh> time for some i386 tests - bbiab

[09:06] <kidd> carlin: I didn't know about it.  thanks :)

[09:09] *** mikehh left
[09:10] *** am0c left
[09:13] *** am0c joined
[09:17] *** cognominal left
[09:24] *** Caelum is now known as Caelum_

[09:24] *** Caelum_ is now known as Caelum

[09:27] <jnthn> o/

[09:27] <phenny> jnthn: 12 Sep 13:49Z <masak> tell jnthn Please put your "Solved in Perl 6" talk slides online soon, so that those of us who weren't fortunate enough to be in Japan at the time can enjoy it, too!

[09:27] <jnthn> Will try and get to that today. :-)

[09:29] *** KatrinaTheLamia joined
[09:37] *** mikehh joined
[09:38] * frettled cheers jnthn on

[09:41] * jnthn is in Kyoto now :-)

[09:44] <devin> "Solved in Perl 6" was a very good talk

[09:46] <jnthn> *bow*

[09:48] *** pnu left
[09:48] *** pnu joined
[09:51] *** arnsholt_ joined
[09:51] *** xinming_ left
[09:51] *** xinming joined
[09:51] *** akl left
[09:53] *** lambdabot joined
[09:59] *** payload joined
[10:00] *** lambdabot left
[10:02] *** lambdabot joined
[10:03] *** gbacon left
[10:04] *** obra_ left
[10:04] *** gbacon joined
[10:04] *** arnsholt left
[10:08] <Matt-W> jnthn: It certainly looked like an excellent idea for a talk. I do want to see the slides :)

[10:20] *** M_o_C joined
[10:28] *** ejs left
[10:29] *** ejs joined
[10:32] *** donaldh joined
[10:34] *** ejs left
[10:44] *** rfordinal left
[10:47] <mikehh> rakudo (e4c7a05) builds on parrot r41257 - make test / make spectest (up to 28238) PASS - Ubuntu 9.04 i386

[10:47] <mikehh> rakudo - t/spec/S03-operators/arith.rakudo - TODO passed:   131

[10:47] <mikehh> rakudo - make spectest reports 126 Non-zero wait status: 11 (Segfault after passing tests)

[10:47] <mikehh> rakudo - Note t/spec/S03-operators/arith.rakudo TODO passes 120, 131-132 and NO Segmentation faults reported on amd64 at same revision

[10:49] *** payload left
[10:49] *** ejs joined
[10:49] <mikehh> cant get cardinal to build at the moment on i386 - will check later

[10:49] <mikehh> it builds on amd64

[10:50] <mikehh> sorry wrong window - that should be in #parrot

[10:58] * moritz_ is surprised by the positive responses to his latest blog post

[10:58] <lambdabot> moritz_: You have 2 new messages. '/msg lambdabot @messages' to read them.

[10:58] *** meteorjay joined
[10:59] <moritz_> lambdabot: you delived those twice already - that's enough now.

[10:59] *** ejs left
[10:59] *** ejs joined
[10:59] <moritz_> wayland76: sorry, I think I replied to a months-old message from lambdabot yesterday

[11:01] <moritz_> and I'm equally surprised that this blog post is on number 10 of the reddit front page

[11:11] <moritz_> rakudo: 3.foobar

[11:11] <p6eval> rakudo 446d49: OUTPUT«Method 'foobar' not found for invocant of class 'Int'␤»

[11:15] *** am0c left
[11:16] *** arnsholt_ is now known as arnsholt

[11:20] *** donaldh left
[11:20] <moritz_> rakudo: 1/0

[11:20] <p6eval> rakudo 446d49:  ( no output )

[11:20] <moritz_> rakudo: foo()

[11:21] <p6eval> rakudo 446d49: OUTPUT«Could not find non-existent sub foo␤»

[11:21] * moritz_ wants an example of a backtrace

[11:21] *** donaldh joined
[11:23] *** sm` joined
[11:23] <diakopter> rakudo: * * *

[11:23] <p6eval> rakudo 446d49:  ( no output )

[11:27] <moritz_> parrot build fails on p6eval's server

[11:28] <moritz_> which is why the rakudo is so old

[11:28] <moritz_> (the server always tries tries to build the newest parrot, not the one from build/PARROT_REVISION

[11:29] <moritz_> trying again after a realclean...

[11:33] *** sm^^^ left
[11:46] *** kidd left
[11:51] *** PacoLinux joined
[11:58] *** agentzh left
[12:01] *** tak11 left
[12:02] *** obra_ joined
[12:02] *** zamolxes joined
[12:08] *** takadonet joined
[12:08] <takadonet> morning all

[12:08] <moritz_> morning takadonet... some I always read taka .NET when seeing your nick name :-)

[12:09] <takadonet> hehe

[12:10] <takadonet> TimToday told me that my name has some Japanese meaning but I forgot what it was. I made up this name a long time ago

[12:10] *** donaldh left
[12:10] *** meteorjay left
[12:10] *** KatrinaTheLamia left
[12:10] *** gabiruh left
[12:10] *** Jedai left
[12:10] *** jan__ left
[12:10] *** jiing left
[12:10] *** Aisling_ left
[12:10] *** Grrrr left
[12:10] *** pjcj left
[12:10] *** clkao left
[12:11] *** donaldh joined
[12:11] *** meteorjay joined
[12:11] *** KatrinaTheLamia joined
[12:11] *** gabiruh joined
[12:11] *** Jedai joined
[12:11] *** jan__ joined
[12:11] *** jiing joined
[12:11] *** Aisling_ joined
[12:11] *** Grrrr joined
[12:11] *** clkao joined
[12:11] *** pjcj joined
[12:15] *** gabiruh left
[12:15] *** gabiruh joined
[12:15] *** jiing left
[12:15] *** jiing_ joined
[12:19] *** Aisling_ left
[12:19] *** Aisling joined
[12:24] *** krunen left
[12:25] *** krunen joined
[12:28] *** payload joined
[12:42] *** pjcj_ joined
[12:43] *** pjcj left
[12:45] *** frederico joined
[12:48] *** ihrd joined
[12:48] *** ihrd left
[12:52] *** FCO left
[12:57] *** M_o_C left
[12:58] *** zamolxes left
[13:01] *** Grrrr left
[13:01] *** donaldh left
[13:01] *** jan__ left
[13:01] *** clkao left
[13:01] *** Jedai left
[13:01] *** KatrinaTheLamia left
[13:01] *** meteorjay left
[13:02] *** donaldh joined
[13:02] *** meteorjay joined
[13:02] *** KatrinaTheLamia joined
[13:02] *** Jedai joined
[13:02] *** jan__ joined
[13:02] *** Grrrr joined
[13:02] *** clkao joined
[13:02] *** fredrecsky joined
[13:03] *** sm` left
[13:04] *** sm` joined
[13:04] *** Grrrr left
[13:08] *** meteorjay left
[13:08] *** meteorjay joined
[13:09] *** donaldh left
[13:09] *** Grrrr joined
[13:12] *** maja joined
[13:13] *** kent\n left
[13:15] <carlin> rakudo: my $socket = IO::Socket::INET.socket(2,1,6); $socket.bind('127.0.0.1', 4242); $socket.listen(); $socket.recv(); while $socket.accept() {};

[13:15] <p6eval> rakudo e4c7a0: OUTPUT«Null PMC access in get_bool()␤in Main (/tmp/eGCv3xSHeg:2)␤»

[13:15] <mikehh> rakudo (e4c7a05) builds on parrot r41260 - make test / make spectest (up to 28238) PASS - Ubuntu 9.04 i386

[13:15] <mikehh> rakudo - t/spec/S03-operators/arith.rakudo - TODO passed:   131

[13:15] <mikehh> rakudo - make spectest reports 91 Non-zero wait status: 11 (Segfault after passing tests)

[13:16] <moritz_> mikehh: weren't those gone in the last two spectest runs?

[13:17] <mikehh> moritz_ on amd64 I don't get any - this is on i386

[13:18] <mikehh> the previous run I got 121, this one 91

[13:18] <mikehh> am running again

[13:22] *** frederico left
[13:23] *** kent\n joined
[13:24] <mikehh> re-ran make spectest and got 115 Non-zero wait status: 11 (Segfault after passing tests)

[13:24] <mikehh> it seems pretty random

[13:25] *** browser joined
[13:26] <mikehh> in the previous run (91 picked up) for example  t/spec/S03-operators/arith.rakudo had a Non-zero wait status 11 but not in this run (115 picked up)

[13:34] *** fredrecsky left
[13:34] *** zamolxes joined
[13:46] *** browser left
[13:47] <eiro> cd

[13:47] <eiro> hello all 

[13:47] <diakopter> eiro: hello

[13:47] <moritz_> cd: No such file or directory

[13:48] <moritz_> oh hai :-)

[13:48] <eiro> :)

[13:48] <eiro> i was just wondering where my cd command is 

[13:48] <eiro> i didn't expected it on my irc client

[13:51] <yath> moritz_: cd defaults to ~, doesn't it? ;)

[13:51] <moritz_> yath: yes

[13:51] <Matt-W> yes

[13:52] <Matt-W> in unixy shells, anyway

[13:52] * yath loves his "t" alias.

[13:52] <yath> (cd /tmp)

[13:52] <yath> makes my ~ much more clean =:-)

[13:52] *** alester joined
[13:53] <yath> http://kitt.yath.de/~yath/t.png ;)

[14:02] <diakopter> in cmd.exe `cd` does `pwd`

[14:02] *** SmokeMachine joined
[14:03] <Matt-W> yes that's the silly windows way

[14:04] <yath> well, where would it change to? \? or %HOME%? ;)

[14:05] <yath> or %HOMEDIR% or whatever it's called

[14:06] <huf> it could halt the gamelauncher and reboot to a *nix...

[14:07] <diakopter> sigh; the Perl JSON modules say that viv's AST has circularity, so they refuse to use it... but it doesn't have circularity; it has multiple references to the same object in the tree, but not as a parent of each other.

[14:07] <diakopter>  %USERPROFILE% actually

[14:08] <diakopter> also %HOMEPATH% 

[14:08] <moritz_> well, the Perl 6 JSON module wouldn't make that error, because it doesn't try to detect circularities at all :-)

[14:09] <moritz_> diakopter: I don't think that JSON can meaningfull represent that either

[14:09] <moritz_> it would have to copy the object each time it occurs

[14:09] <diakopter> mine can

[14:09] *** perletc joined
[14:10] <moritz_> what does the json to [$obj, $obj] look like?

[14:10] <moritz_> s/to/for/

[14:11] <moritz_> rakudo: my $x = 5;; for 1, 2, -> $x { $x.say }; say $x

[14:11] <p6eval> rakudo e4c7a0: OUTPUT«Could not find non-existent sub for␤»

[14:11] <diakopter> here's a node with multiple refs:  http://perl6.pastebin.com/m3af02967

[14:11] <moritz_> rakudo: my $x = 5;; for 1, 2 -> $x { $x.say }; say $x

[14:11] <p6eval> rakudo e4c7a0: OUTPUT«1␤2␤5␤»

[14:12] *** kidd_ joined
[14:12] <diakopter> uses the perl ref address as the key

[14:13] <moritz_> I don't see json.org mentioning that as legal JSON

[14:13] <diakopter> :P

[14:14] <diakopter> true; it's not JSON, but it's JS source that DWIW

[14:15] <moritz_> std: -> my $x, $y { }

[14:15] <p6eval> std 28238: OUTPUT«===SORRY!===␤Invalid typename my at /tmp/KgpD4iPAKa line 1:␤------> -> my⏏ $x, $y { }␤FAILED 00:03 41m␤»

[14:15] <diakopter> I'm just going to eval the JS string anyway (as opposed to letting json2.js parse/check it and then eval it)

[14:16] <diakopter> I couldn't find a YAML parser in JS

[14:16] <diakopter> someone else feel free...

[14:16] <moritz_> ask ingy :-)

[14:16] <diakopter> ingy: consider yourself summoned

[14:17] <moritz_> http://yaml.org/ says JsYaml, but it's a dead link

[14:18] <diakopter> right... and the SF project is a yaml emitter in JS, not parser.  and ingy's JS code in the yaml source repo is empty; just a skeleton.

[14:21] *** agentzh joined
[14:21] *** abra joined
[14:22] <diakopter> to handle objects containing self-references without requiring a traversal of the object (for markers) after construction in JS, a closure containing the lookup/assignment could be injected into an array whose closure items are called after the object is declared.

[14:23] <diakopter> anyway, at that point I might as well be writing a yaml parser, though. ... so

[14:28] <diakopter> moritz_: __ash__ was asking about metamodel writeups...  I thought ruoso wrote that up in one of the Syn?

[14:28] *** sm^^^ joined
[14:28] *** sm` left
[14:29] <moritz_> diakopter: I think ruoso specced some ways how classes, metaclasses and representations interact, but I don't the he wrote a spec for the default metaclass

[14:29] <moritz_> I'm happy to be proven wrong, though

[14:29] *** payload left
[14:34] *** KyleHa joined
[14:37] *** ejs left
[14:40] *** Zloyrusskiy joined
[14:41] *** nihiliad joined
[14:41] *** justatheory joined
[14:50] *** Psyche^ joined
[14:53] *** Patterner left
[14:53] *** Psyche^ is now known as Patterner

[14:54] *** __ash__ joined
[14:55] <__ash__> ping moritz_

[14:55] <moritz_> you pang? ;-)

[14:57] *** flip913 left
[15:00] *** JimmyZ joined
[15:00] <__ash__> yup, i wrote up some basic ideas of some useful stuff, i am still flushing it out but http://failureontheweb.com/blog/article-1252900685 will be a link to it

[15:01] *** Zloyrusskiy left
[15:02] <moritz_> great

[15:02] <moritz_> I have to de- and re-commute, and should be back in ~4 hrs if everything works out

[15:06] *** Zloyrusskiy joined
[15:07] <__ash__> alright, moritz_ i am going to keep writing up in more detail some of those examples, and maybe purpose some tests

[15:08] *** Zloyrusskiy left
[15:15] *** cognominal joined
[15:18] *** JimmyZ left
[15:20] *** donaldh joined
[15:28] *** drbean_ joined
[15:29] *** drbean left
[15:30] *** am0c joined
[15:30] <jnthn> For those wanting my YAPC::Asia slides - see http://www.jnthn.net/articles.shtml

[15:31] *** zamolxes left
[15:32] *** donaldh left
[15:33] * jnthn -> sleep

[15:33] <__ash__> jnthn: do you know if there has been a spec for the meta functionality in perl6?

[15:33] <jnthn> See introspection bits of S12 for some of it

[15:33] <jnthn> As for some other bits, the HOW API proposed by smop is likely to become spec, or something close to it.

[15:34] <jnthn> Note repr APIs are implementation specific, and thus won't be spec'd.

[15:34] <jnthn> (in the Perl 6 spec, that is)

[15:34] <__ash__> repr? 

[15:34] *** am0c left
[15:35] <__ash__> is that something specific to smop? 

[15:35] <jnthn> representation

[15:35] <jnthn> No, :repr is spec.

[15:35] <jnthn> See S12.

[15:35] <jnthn> Exactly what the API looks like for implemetning one is specific to an implementation though.

[15:35] <jnthn> Rakudo's API for this currently doesn't exist, for example. ;-)

[15:36] <__ash__> are there plans for an official set of functions like a role composition function and maybe a add_method to an object method? 

[15:36] <jnthn> Yes, that's what the HOW API defines.

[15:36] <jnthn> At this stage, it's something of a discussion still though.

[15:36] <jnthn> The smop proposal for it is the closest we have at the moment.

[15:37] <__ash__> okay, i'll read up more on smop's, moritz_ said there wasn't much of a spec for it yet so i have been trying to write up some ideas for it to make it into more of a spec than what we were aware of

[15:37] <jnthn> I hope between Rakudo, smop and any other interested parties we can get something along these lines into S12.

[15:37] <__ash__> yeah, it would be really useful

[15:38] <jnthn> Yeah, I agree, we're getting I think towards the time when we perhaps can think about doing that.

[15:38] <__ash__> http://greaterthaninfinity.com/blog/article-perl-6-meta-programming is what i am working on, i am going to keep updating that for now, just curious about input but if you have to go thats fine, i'll keep writing stuff up

[15:38] *** drbean_ left
[15:39] <jnthn> I expect to flesh a bunch of this out in Rakudo in the near-ish future.

[15:39] <jnthn> Really though, it's muchly a consensus thing.

[15:40] *** drbean joined
[15:40] *** M_o_C joined
[15:40] <jnthn> I mostly think what smop proposed for the HOW API looks about right, though.

[15:41] <__ash__> is that in pugs/v6/smop? 

[15:41] <jnthn> There's an article on the perl foundation perl 6 wiki that covers this well

[15:41] <__ash__> k, i'll find that

[15:42] <jnthn> http://www.perlfoundation.org/perl6/index.cgi?smop_oo_api

[15:43] <jnthn> See HOW API and Declaration API.

[15:43] <__ash__> kk, thanks

[15:45] * jnthn really sleeps now :-)

[15:46] *** drbean left
[15:47] <__ash__> cya

[15:47] <__ash__> didn't mean to keep you 

[15:51] *** __ash__ left
[15:54] *** drbean joined
[15:59] *** rfordinal joined
[16:00] *** cdarroch joined
[16:03] *** payload joined
[16:06] *** am0c joined
[16:17] *** stephenlb joined
[16:32] *** agentzh left
[16:37] *** zaphar_ps joined
[16:38] *** __ash__ joined
[16:43] *** __ash__ left
[16:53] *** __ash__ joined
[16:55] *** gbacon left
[16:56] *** alexn_org left
[17:01] *** arnsholt left
[17:01] *** arnsholt joined
[17:04] *** gbacon joined
[17:04] <pugs_svn> r28239 | fglock++ | [mp6] added Javascript build script 

[17:08] *** jiing joined
[17:11] *** jiing_ left
[17:15] *** rfordinal left
[17:24] *** Zloyrusskiy joined
[17:31] *** frew_ joined
[17:41] *** sevvie_ left
[17:44] *** azawawi joined
[17:45] *** cmv joined
[17:46] <azawawi> moritz_: ping

[17:49] *** azawawi left
[17:50] *** __ash__ left
[17:51] *** DCOLLINS joined
[17:51] <DCOLLINS> Hi folks

[17:52] <DCOLLINS> Having an issue with my Rakude..."for (0..$max :by($div)) {" fails with "Statement not terminated properly" near ":by($div))". Varied parens, spacing, even taking something directly from the spec fails. What's wrong?

[17:56] <avar> last I knew rakudo didn't implement :by at all

[17:57] <avar> rakudo: 0..10:by(2)

[17:57] <p6eval> rakudo e4c7a0: OUTPUT«Confused at line 2, near ":by(2)"␤in Main (src/gen_setting.pm:3469)␤»

[17:57] <avar> rakudo: (0..10):by(2)

[17:57] <p6eval> rakudo e4c7a0: OUTPUT«Confused at line 2, near ":by(2)"␤in Main (src/gen_setting.pm:3469)␤»

[17:57] <DCOLLINS> "Confused"? 

[17:57] <DCOLLINS> Mice error :)

[17:57] <DCOLLINS> nice  even

[17:57] <avar> You have upset its fragile little mind

[17:58] <DCOLLINS> say [+] 1..2;

[17:58] <DCOLLINS> Wait

[17:58] <DCOLLINS> rakudo: say [+] 1..2;

[17:58] <p6eval> rakudo e4c7a0: OUTPUT«3␤»

[17:58] <DCOLLINS> rakudo: say (1..2).[+]

[17:58] <p6eval> rakudo e4c7a0: OUTPUT«Confused at line 2, near ".[+]"␤in Main (src/gen_setting.pm:3469)␤»

[18:04] *** barney left
[18:08] *** frew__ joined
[18:08] *** frew_ left
[18:12] *** abra left
[18:15] *** ruoso joined
[18:21] *** __ash__ joined
[18:27] *** molaf joined
[18:29] *** DCOLLINS left
[18:30] *** zamolxes joined
[18:51] *** rindolf joined
[18:51] <rindolf> Salaam!

[18:56] *** meppl left
[18:57] <diakopter> heh; I got STD.pm into JSON (actual JSON, too)

[18:58] <diakopter> 11MB

[18:59] *** zostay_ left
[18:59] *** zostay joined
[19:00] <[particle]1> brr

[19:00] *** [particle]1 is now known as [particle]

[19:00] * diakopter turns up the a/c

[19:06] <diakopter> less/vim don't like an 11MB text file with no linebreaks

[19:10] <diakopter> har; I need to quote the property keys that are also js keywords... heh

[19:10] *** synth left
[19:14] *** Intensity joined
[19:21] *** pyrimidine joined
[19:24] *** buu left
[19:29] <moritz_> re

[19:30] <pmichaud> moritz++ # excellent article about 100% spectests

[19:30] <phenny> pmichaud: 13 Sep 04:30Z <s1n> tell pmichaud i'm looking for specifics on nqp; hit me up if you have any info for me

[19:30] <phenny> pmichaud: 01:21Z <s1n> tell pmichaud i think parrot/compilers/nqp/src/Grammar.pg might be what i was looking for

[19:30] <moritz_> pmichaud: thanks

[19:35] *** baest joined
[19:39] *** buubot left
[19:42] *** Chillance joined
[19:46] *** baest_ joined
[19:48] <__ash__> moritz_:  jnthn said he was going to base most of the OO meta stuff on the SMOP HOW api http://www.perlfoundation.org/perl6/index.cgi?smop_oo_api 

[19:48] *** buubot joined
[19:50] *** __ash__ left
[19:50] <moritz_> that's fine by as as long as it ends up being in the spec at some piont

[19:52] *** buu joined
[19:54] *** takadonet left
[19:57] *** _jaldhar left
[19:59] *** araujo left
[20:01] *** araujo joined
[20:03] *** baest left
[20:04] *** araujo left
[20:05] *** jaldhar joined
[20:06] *** araujo joined
[20:07] *** Zloyrusskiy left
[20:07] *** baest joined
[20:08] *** araujo left
[20:08] *** hercynium joined
[20:10] *** araujo joined
[20:11] *** araujo left
[20:11] *** sri_kraih left
[20:12] *** __ash__ joined
[20:13] *** araujo joined
[20:19] *** payload left
[20:20] *** sevvie joined
[20:24] *** baest_ left
[20:25] *** synth joined
[20:36] *** perletc left
[20:38] *** jaldhar left
[20:38] *** payload joined
[20:42] *** rindolf left
[20:54] *** araujo left
[20:55] *** araujo joined
[21:06] *** RonOreck_ left
[21:16] *** M_o_C left
[21:29] <dalek> rakudo: a9ff309 | pmichaud++ | docs/spectest-progress.csv:

[21:29] <dalek> rakudo: spectest-progress.csv update: 436 files, 15500 (71.5% of 21679) pass, 0 fail

[21:29] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/a9ff309e63f1df4f271847757f7f014902d26858

[21:32] *** rewt left
[21:34] <pyrimidine> wow, over 15k now.  Nice!

[21:35] *** Whiteknight joined
[21:35] <pyrimidine> (and agreed on blog post by moritz++)

[21:43] *** ruoso left
[21:53] *** KyleHa left
[21:53] *** cmv left
[22:01] *** lambdabot left
[22:01] *** pyrimidine left
[22:03] *** lambdabot joined
[22:17] *** mikehh left
[22:19] *** lambdabot left
[22:21] *** lambdabot joined
[22:23] *** mikehh joined
[22:23] *** nihiliad left
[22:26] *** molaf left
[22:26] *** mikehh left
[22:30] *** mikehh joined
[22:34] *** SmokeMachine left
[22:43] *** am0c left
[22:45] *** kidd_ left
[22:50] *** bgs100 joined
[22:51] *** ab5tract joined
[23:08] *** SmokeMachine joined
[23:17] *** tak11 joined
[23:17] *** sm` joined
[23:21] <carlin> jnthn++ # Very nice YAPC::Asia slides :-)

[23:23] *** araujo left
[23:24] *** araujo joined
[23:28] *** jglick joined
[23:34] *** sm^^^ left
[23:36] *** __ash__ left
[23:42] *** pjcj joined
[23:43] *** test34 left
[23:46] <carlin> rakudo: say 12 ?? 14;

[23:47] <p6eval> rakudo a9ff30: OUTPUT«ResizablePMCArray: Can't pop from an empty array!␤in Main (src/gen_setting.pm:3469)␤»

[23:55] *** pjcj_ left
[23:57] *** SmokeMachine left
