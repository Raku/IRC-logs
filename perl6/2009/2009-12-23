[00:03] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 23: Lazy fruits from the gather of Eden': http://perl6advent.wordpress.com/2009/12/23/day-23-lazy-fruits-from-the-gather-of-eden/

[00:03] *** mubot left
[00:06] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 22: Operator Overloading': http://perl6advent.wordpress.com/2009/12/22/day-22-operator-overloading/

[00:09] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 23: Lazy fruits from the gather of Eden': http://perl6advent.wordpress.com/2009/12/23/day-23-lazy-fruits-from-the-gather-of-eden/

[00:12] <diakopter> zaslon: thanks

[00:12] <zaslon> Sorry, I don't understand that command

[00:13] <diakopter> zaslon: i see

[00:13] <zaslon> Sorry, I don't understand that command

[00:20] <dduncan> question, are there multiple NaN values or just one?  the synopsis talk as if there is just one but I thought I read otherwise somewhere, such as a different NaN for each general reason we don't have a number

[00:21] <dduncan> in the latter case, NaN sounds like a specialized unthrown exception

[00:35] *** Chillance left
[00:42] *** payload left
[00:44] *** nihiliad left
[00:52] *** meppl joined
[01:00] *** pmurias left
[01:06] *** colomon left
[01:20] *** lest_away is now known as lestrrat

[01:24] *** colomon_ joined
[01:28] <colomon_> dduncan: I think the spec is still vague on that.

[01:42] *** Baggio_ joined
[01:48] <diakopter> http://cacm.acm.org/magazines/2010/1/55760-what-should-we-teach-new-software-developers-why/fulltext

[01:50] *** katz left
[01:59] <ash__> diakopter: thats why my degree says 'Software Engineer' not computer science, well hopefully when i get it next semester

[01:59] <diakopter> http://schneide.wordpress.com/2009/12/21/the-fallacy-of-the-right-tool/

[02:00] <diakopter> ash__: oh :)

[02:01] <diakopter> oh look, the essay isn't copyrighted yet until 2010

[02:01] <diakopter> heh

[02:01] <ash__> i like to think i can program, or am better at the programming side of 'computer science' but that may be a biased opinion

[02:02] <ash__> dang, they are a month ahead of everyone else

[02:02] <eternaleye> diakopter: That is an awesome post

[02:02] *** zaslon left
[02:02] *** pointme left
[02:02] <ash__> i'd hate to be in one of his classes, if he's that far ahead i'd never catch up

[02:02] *** pointme joined
[02:02] *** mubot joined
[02:02] *** zaslon joined
[02:03] <ash__> speaking of ACM, i gave a presentation on perl6 and rakudo at my school, and am probably going to give it again next semester

[02:05] <diakopter> eternaleye: which one? the Stroustrup essay or the Softwareschneiderei GmbH post

[02:05] <eternaleye> Stroustrup

[02:08] <diakopter> ash__: re your degree-to-be, he writes 'Preferring the labels "software engineering" or "IT" over "CS" may indicate differences in perspective, but problems have a nasty way of reemerging in slightly different guises after a move to a new setting.'

[02:12] <diakopter> imho, students should be awarded distinct measurements of achievement in their demonstrated ability in the areas of Problem/Goal Analysis/Identification and Measurement/Experiment Design/Implementation

[02:17] <diakopter> the first category is Analyzing a Problem (and in the absence of having a Problem to Analyze), Identifying a measurable Goal for improvement

[02:20] <diakopter> the second category is Designing and Implementing Measurements and Experiments, obviously :)  Computers, their softwares, and the states of those softwares are the subjects/universe for compsci students, and the rest falls out from there.  </hand_wave>

[02:24] <diakopter> otoh, "Computer Scientists" Science is an very different discipline.

[02:26] <sjohnson> hi

[02:27] <diakopter> sjohnson: hola

[02:28] <sjohnson> hows it goin!

[02:28] <diakopter> Blackberry data services down globally for 4 hours

[02:31] <eternaleye> ouch

[02:32] <ash__> diakopter: my schools main distinction between CS and Software engineering is software engineers have more project based classes and have to take a few extra classes like software process vs cs that have to take more theoretical classes on programming and a few more EE-ish related classes

[02:34] <eternaleye> ash__: What school?

[02:37] <ash__> auburn

[02:37] <ash__> university in auburn al

[02:44] *** jaldhar joined
[02:47] *** JimmyZ joined
[02:57] *** _jaldhar joined
[02:57] *** jaldhar left
[02:59] *** Baggio_ left
[02:59] *** Baggio_ joined
[03:34] <colomon_> ng: (1...11).grep(*%3)>>.say

[03:34] <p6eval> ng 9d5018: too few positional arguments: 3 passed, 4 (or more) expected␤current instr.: 'perl6;Code;new' pc 11669 (src/builtins/Positional.pir:125)␤

[03:34] *** matsuzine joined
[03:35] <colomon_> ng: (1...11).grep({$_ % 3})>>.say

[03:35] <p6eval> ng 9d5018: Method 'grep' not found for invocant of class 'Array'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[03:44] *** ihrd1 joined
[03:45] *** freakazoid_42 joined
[03:45] <freakazoid_42> hello

[03:46] *** ihrd1 left
[03:46] *** gfx joined
[03:57] *** TiMBuS|Away joined
[03:59] *** TiMBuS left
[04:07] *** meppl left
[04:07] *** meppel joined
[04:08] *** meppel is now known as meppl

[04:08] *** patspam left
[04:14] *** szabgabx joined
[04:22] *** matsuzine_ joined
[04:23] *** matsuzine left
[04:24] *** cdarroch left
[04:29] *** xinming_ left
[04:32] *** am0c joined
[04:51] *** freakazoid_42 is now known as sice_boy

[05:01] *** xinming joined
[05:09] *** matsuzine_ left
[05:13] *** xomas left
[05:23] *** FalseVinylShrub joined
[05:24] *** Baggio_ left
[05:26] *** Baggio_ joined
[05:31] *** FalseVinylShrub left
[05:39] *** restrictedinfini joined
[05:40] <restrictedinfini> m new to this community

[05:40] <restrictedinfini> can someone guide me how to get started

[05:40] *** Baggio_ left
[05:41] <mberends> yes, tell me a bit about your interests

[05:50] *** restrictedinfini left
[05:50] *** xenoterracide_ is now known as xenoterracide

[05:51] <dduncan> that didn't last long

[05:52] <mberends> probably didn't get the right kind of help :-/

[05:53] *** justatheory left
[06:02] *** Baggio_ joined
[06:04] <mberends> that Bjarne Stroustrup article http://cacm.acm.org/magazines/2010/1/55760-what-should-we-teach-new-software-developers-why/fulltext is close to my heart in sentiments but disappointing for lack of practical solutions

[06:08] <mberends> "teachers should program more", "students should write bigger programs", "only qualified programmers should be allowed to supply certain software". That last one whiffs of closed shop trade unionism.

[06:09] <mberends> I'd expected better from Bjarne

[06:13] <mberends> actively participating in #perl6 has done more to improve my programmer skills than over 10 years in the classroom (they were not idle years either, just commercially oriented). :)

[06:21] *** gfx left
[06:31] <spinclad> can somebody haz edit privs on wordpress for the latest advent?  i presume  "sort { $^a[1]  $^b[1] },"  has a hidden spaceship in it, cloaked by the html encoding.

[06:31] <spinclad> and "The second property of gather is that {s//while /}the take calls ..."

[06:31] <spinclad> and "sub hamming-sequence() # 2**a * 3**b * 5**c, where { all(a,b,c) <= 0 }":   s/ <= / >= /

[06:32] <mberends> thanks, will do

[06:33] <spinclad> mberends++

[06:33] *** pdcawley joined
[06:37] <mberends> spinclad: spaceship or cmp ?

[06:38] <mberends> ok, date, <=> is correct

[06:41] <mberends> that missing 'while' had me puzzled a few hours ago as well

[06:44] *** sice_boy left
[06:45] *** agentzh joined
[06:45] *** rgrau left
[06:48] <mberends> fixed. spinclad++

[06:49] *** constant left
[07:13] *** Su-Shee joined
[07:13] <Su-Shee> good morning

[07:14] <mberends> good morning

[07:20] *** Baggio_ left
[07:29] <moritz_> good moroning

[07:31] <diakopter> moritz_: GO DMONRNGIO

[07:31] <diakopter> I mean..

[07:31] <diakopter> :)

[07:31] <moritz_> :-)

[07:32] <diakopter> ok, I got my little grammar compiler up to 9m compiled RE invocations/second.

[07:32] *** constant joined
[07:32] <diakopter> I'd say that's a good place to arrest the premature optimization for now

[07:34] <moritz_> 9M or 9m? :-)

[07:34] <diakopter> oh; lol

[07:34] <diakopter> 1e6

[07:34] <diakopter> I mean

[07:34] <diakopter> 9e6

[07:35] <diakopter> but yeah, 100 seconds/invocation would be, ... slow

[07:35] *** kaare joined
[07:36] <mberends> 9 millicompiles is worse than GGE

[07:36] *** kaare is now known as Guest73154

[07:36] <diakopter> invocations, not compiles

[07:47] <mberends> heh, after a wrong tar option: tar: Cowardly refusing to create an empty archive

[07:48] <mberends> cowards!

[07:48] * moritz_ likes that

[07:48] <moritz_> that always happens when I accidentally use c instead of x

[07:49] <mberends> indeed :)

[07:54] *** nbrown left
[07:59] *** bryan[c1] joined
[08:01] <diakopter> bryan[c1]: wb

[08:01] <bryan[c1]> ?

[08:02] <diakopter> you were here a day or two ago, iirc

[08:02] <lisppaste3> bryan[c1] pasted "untitled" at http://paste.lisp.org/display/92520

[08:02] <bryan[c1]> indeed i was

[08:02] <bryan[c1]> cant understand why that doesnt work

[08:02] <bryan[c1]> must be retarded or something

[08:02] <diakopter> Perl 6 doesn't have a 'use strict;'

[08:02] <bryan[c1]> im banned from #perl

[08:02] <bryan[c1]> so its 5.x

[08:03] <bryan[c1]> sorry

[08:04] <mberends> bryan[c1]: would you still be banned if you dropped the [c1] from your nick?

[08:04] <xinming> mberends: what's wrong with c1?

[08:04] <bryan[c1]> not sure if that would really make a difference

[08:05] <mberends> actually, you could assume another nick such as ReallyGrovellingNewbie ;)

[08:05] <bryan[c1]> :(

[08:05] <bryan[c1]> how the hell is it not working

[08:05] <mberends> but those #perl types are sometimes like the vultures in Lion King

[08:06] <diakopter> bryan[c1]: it needs a semicolon after the first print

[08:06] <bryan[c1]> oh LOL

[08:06] <bryan[c1]> now you made me feel dumb

[08:06] * bryan[c1] cries

[08:06] *** diakopter sets mode: +o bryan[c1]

[08:07] <bryan[c1]> LOL

[08:07] <diakopter> hugme: hug bryan[c1] 

[08:07] * hugme hugs bryan[c1]

[08:07] *** ChanServ sets mode: -o bryan[c1]

[08:07] <mberends> xinming: suffixes for uniqueness are fine, but they are quite noisy when not required

[08:11] *** mariuz joined
[08:13] *** flip214 joined
[08:13] <flip214> fröhliche weihnachten

[08:16] <flip214> rakudo: my $a="a:a:a"; $a.=subst( rx{ \: $ }, "."); say $a;

[08:16] <p6eval> rakudo 8dc189: a:a:a␤

[08:16] <flip214> rakudo: my $a="a:a:a:"; $a.=subst( rx{ \: $ }, "."); say $a;

[08:16] <p6eval> rakudo 8dc189: a:a:a.␤

[08:16] <flip214> rakudo: my $a="a:a:a:"; $a.=subst( rx{ \: $ }, "X"); say $a;

[08:16] <p6eval> rakudo 8dc189: a:a:aX␤

[08:16] <flip214> rakudo: my $a="a:a:a:"; $a.=subst( rx{ ':' $ }, "X"); say $a;

[08:16] <p6eval> rakudo 8dc189: a:a:aX␤

[08:17] <flip214> rakudo: my $a="a:a:a:"; $a.=subst( rx{ ":" $ }, "X"); say $a;

[08:17] <p6eval> rakudo 8dc189: Confused at line 2, near "( rx{ \":\" "␤in Main (file <unknown>, line <unknown>)␤

[08:17] <flip214> Is this wrong? Shouldn't that work, too, like with single quotes?

[08:18] *** Chillance joined
[08:19] *** iblechbot joined
[08:29] <moritz_> just NYI

[08:29] <diakopter> o/ ciao4nowUpals

[08:35] *** TiMBuS|Away left
[08:37] *** TiMBuS|Away joined
[08:44] <mathw> o/

[08:44] <lisppaste3> bryan[c1] pasted "n00b" at http://paste.lisp.org/display/92522

[08:45] <bryan[c1]> dont click that

[08:45] <bryan[c1]> well you can but its stupid

[08:50] <dduncan> so you basically posted a button that says "don't click me"

[08:50] <bryan[c1]> actually i forgot it posted into the channel

[08:51] <bryan[c1]> im used to using copypastas that dont do that sort of thing

[08:51] <dduncan> okay

[08:51] <bryan[c1]> plus its a stupid 10 line beginner program

[08:52] <bryan[c1]> sorry if it was such a bother

[08:56] *** dduncan left
[09:04] *** meneldor joined
[09:09] <moritz_> no problem

[09:09] <meneldor> hello all

[09:13] <mathw> Hello meneldor

[09:14] <meneldor> do anyone use p6 for web now?

[09:14] <meneldor> is there something like the old CGI.pm

[09:15] <moritz_> I think there is, in the November repo

[09:17] <mathw> Web.pm

[09:17] *** colomon_ left
[09:18] <mathw> which I believe November's been converted to use, but it's a separate project

[09:18] <mberends> mathw: the conversion is very partial so far

[09:19] <mathw> mberends: I didn't know how much had been done

[09:20] <mberends> November has only just kept ahead of bitrot in the last few months, because of more important other projects

[09:21] <mberends> November the CGI.pm is probably usable though

[09:22] <mberends> *the November

[09:24] *** tempire left
[09:24] <mberends> afk & # shower

[09:26] <moritz_> hugme: list projects

[09:26] <hugme> moritz_: I know about book, gge, hugme, ilbot, json, november, nqp-rx, nqpbook, perl6-examples, proto, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte, web

[09:27] <moritz_> hugme: add moritz to november

[09:27] * hugme hugs moritz. Welcome to november!

[09:31] *** bacek joined
[09:33] <bacek> o hai

[09:33] <moritz_> are new November features still generally prototyped in p5w?

[09:33] <moritz_> hi bacek 

[09:33] <bacek> std: my @tentura; say ?all(<id>.defined << @tentura)

[09:33] <p6eval> std 29388: [31m===[0mSORRY![31m===[0m␤Unsupported use of << to do left shift; in Perl 6 please use +< or ~< at /tmp/tILw2Wwz7D line 1:␤------> [32mmy @tentura; say ?all(<id>.defined << [33m⏏[31m@tentura)[0m␤FAILED 00:01 109m␤

[09:33] *** baest joined
[09:33] <dalek> november: a194133 | moritz++ |  (2 files):

[09:33] <dalek> november: start to get rid of the undef term

[09:33] <dalek> november: review: http://github.com/viklund/november/commit/a1941333bc99a03ef5b63cb27b3e53d52fe52c0a

[09:33] <bacek> std: my @tentura; say ?all(defined << @tentura)

[09:33] <p6eval> std 29388: [31m===[0mSORRY![31m===[0m␤(Possible runaway string from line 1)␤Unsupported use of << to do left shift; in Perl 6 please use +< or ~< at /tmp/Z65coUomna line 1 (EOF):␤------> [32m @tentura; say ?all(defined << @tentura)[33m⏏[31m<EOL>[0m␤FAILED 00:02 108m␤

[09:34] <bacek> moritz_, how hyper-operators should work on methods? (And should they?)

[09:34] <moritz_> rakudo: say <a b c>>>.uc

[09:34] <p6eval> rakudo 8dc189: ABC␤

[09:35] <bacek> rakudo: my @a=(a, undef, b); say ?all(@a>>defined)

[09:35] <p6eval> rakudo 8dc189: Confused at line 2, near "(@a>>defin"␤in Main (file <unknown>, line <unknown>)␤

[09:35] <bacek> erm...

[09:35] <bacek> rakudo: my @a=(a, undef, b); say all(@a>>defined)

[09:35] <p6eval> rakudo 8dc189: Confused at line 2, near "(@a>>defin"␤in Main (file <unknown>, line <unknown>)␤

[09:36] <moritz_> rakudo: my @a=(a, undef, b); say all(@a>>.defined)

[09:36] <p6eval> rakudo 8dc189: Could not find non-existent sub a␤in Main (file src/gen_setting.pm, line 324)␤

[09:36] <moritz_> you still need a dot

[09:36] <moritz_> rakudo: my @a=('a', undef, 'b'); say all(@a>>.defined)

[09:36] <bacek> rakudo: my @a=('a', undef, 'b'); say all(@a>>.defined)

[09:36] <p6eval> rakudo 8dc189: all(Bool::True, Bool::False, Bool::True)␤

[09:36] <p6eval> rakudo 8dc189: all(Bool::True, Bool::False, Bool::True)␤

[09:36] <moritz_> rakudo: my @a=('a', undef, 'b'); say ?all(@a>>.defined)

[09:36] *** TiMBuS|Away left
[09:36] <p6eval> rakudo 8dc189: 0␤

[09:36] <bacek> heh :)

[09:37] <moritz_> the junction only collapses in boolean context

[09:37] *** agentzh left
[09:37] <bacek> rakudo: my @a = ( { id => 'a' }, { id => undef }, ( id => 'b' }); say ?all(@a>>.<id>.defined)

[09:37] <p6eval> rakudo 8dc189: Confused at line 2, near "( id => 'b"␤in Main (file <unknown>, line <unknown>)␤

[09:37] <bacek> rakudo: my @a = ( { id => 'a' }, { id => undef }, { id => 'b' }); say ?all(@a>>.<id>.defined)

[09:38] *** TiMBuS|Away joined
[09:38] <p6eval> rakudo 8dc189:  ( no output )

[09:38] <moritz_> you probably want @a».<id>».defined

[09:38] <moritz_> std: my @a; @a».<id>».defined

[09:38] <p6eval> std 29388: ok 00:01 106m␤

[09:38] <bacek> rakudo: my @a = ( { id => 'a' }, { id => undef }, { id => 'b' }); say ?all(@a>>.<id>>>.defined)

[09:39] <p6eval> rakudo 8dc189:  ( no output )

[09:39] <bacek> looks like rakudo timing-out...

[09:39] <bacek> rakudo: my @a = ( { id => 'a' }, { id => undef }, { id => 'b' }); say ?all(@a>>.<id>)

[09:39] <p6eval> rakudo 8dc189:  ( no output )

[09:40] <bacek> sigh... Did I broke it?

[09:40] <bacek> rakudo: my @a = ( { id => 'a' }, { id => undef }, { id => 'b' }); say ~@a;

[09:40] <p6eval> rakudo 8dc189:  ( no output )

[09:40] <bacek> std: my @a = ( { id => 'a' }, { id => undef }, { id => 'b' }); say ?all(@a>>.<id>>>.defined)

[09:40] <p6eval> std 29388: [31m===[0mSORRY![31m===[0m␤Unsupported use of undef as a value; in Perl 6 please use something more specific:␤     Mu (the "most undefined" type object),␤   an undefined type object such as Int,␤    Nil as an empty list,␤    *.notdef as a matcher or method,␤ Any:U as a type

[09:40] <p6eval> ..constraint␤       or fail() …

[09:41] <bacek> std: my @a = ( { id => 'a' }, { id => Mu }, { id => 'b' }); say ?all(@a>>.<id>>>.defined)

[09:41] <p6eval> std 29388: ok 00:01 108m␤

[09:41] <bacek> ookey

[09:41] <bacek> afk # dinner

[09:45] *** rgrau joined
[09:45] <mathw> mmm dinner

[09:45] <mathw> that would be nice

[09:47] <Tene> Okay, I'm now halfway to having my scheme macros not suck.

[09:47] <Tene> Got the pattern matching half working properly.

[09:48] *** Chillance left
[09:48] <mathw> yay

[09:49] *** Chillance joined
[09:54] *** synth left
[10:09] <dalek> november: d598e32 | moritz++ | lib/ (2 files):

[10:09] <dalek> november: remove the undef term from November

[10:09] <dalek> november: review: http://github.com/viklund/november/commit/d598e32327b51a254b1c71fda2a82c4b5b4bc3f1

[10:09] *** colomon_ joined
[10:19] *** meneldor left
[10:23] <bacek> rakudo: my @a = { id => 'a' }, { id => undef }, { id => 'b' }; say ~@a

[10:24] <p6eval> rakudo 8dc189:  ( no output )

[10:24] <bacek> interesting.

[10:24] <bacek> rakudo: my @a = { id => 'a' }, { id => undef }, { id => 'b' }; say @a.WHAT

[10:24] <p6eval> rakudo 8dc189:  ( no output )

[10:25] <JimmyZ> rakudo: my %a = { id => 'a' }, { id => undef }, { id => 'b' }; say %a.WHAT

[10:25] <bacek> std: my @a = { id => 'a' }, { id => undef }, { id => 'b' }; say @a.WHAT

[10:25] <p6eval> rakudo 8dc189:  ( no output )

[10:25] <p6eval> std 29388: [31m===[0mSORRY![31m===[0m␤Unsupported use of undef as a value; in Perl 6 please use something more specific:␤     Mu (the "most undefined" type object),␤   an undefined type object such as Int,␤    Nil as an empty list,␤    *.notdef as a matcher or method,␤ Any:U as a type

[10:25] <p6eval> ..constraint␤       or fail() …

[10:25] <bacek> JimmyZ, I need list of hashes

[10:25] <bacek> std: my @a = { id => 'a' }, { id => Mu }, { id => 'b' }; say @a.WHAT

[10:25] <p6eval> std 29388: ok 00:01 107m␤

[10:26] <JimmyZ> rakudo: my @a = { id => 'a' }, { id => Mu }, { id => 'b' }; say @a.WHAT

[10:26] <bacek> rakudo: my @a = ({ id => 'a' }); say @a.WHAT

[10:26] <p6eval> rakudo 8dc189:  ( no output )

[10:26] <p6eval> rakudo 8dc189:  ( no output )

[10:26] <hejki> rakudo: my @a = { id => "a" }, { id => undef }, { id => "b" }; say ~@a

[10:27] <p6eval> rakudo 8dc189:  ( no output )

[10:27] <hejki> rakudo: my @a = { id => "a" }, { id => undef }, { id => "b" }; ~@a.say

[10:27] <JimmyZ> rakudo: my %a = ({ id => 'a' }); say %a.WHAT

[10:27] *** agentzh joined
[10:27] <JimmyZ> rakudo: my %a = ({ id => 'a' }); say @(%a).WHAT

[10:27] <Tene> bacek: what you've been doing works fine for me locally.

[10:27] <p6eval> rakudo 8dc189:  ( no output )

[10:27] <Tene> it just takes too long for p6eval.

[10:28] <bacek> Tene, ah, thanks.

[10:28] <p6eval> rakudo 8dc189:  ( no output )

[10:28] <p6eval> rakudo 8dc189:  ( no output )

[10:28] <flip214> happy xmas, and a nice new year everyone.

[10:30] *** TiMBuS|Away left
[10:30] *** TiMBuS|Away joined
[10:30] *** flip214 left
[10:32] <bacek> std: my @a = ( { id => 'a' }, { id => Mu }, { id => 'b' }); say ?all(@a >> .<id> >> .defined)

[10:32] <p6eval> std 29388: [31m===[0mSORRY![31m===[0m␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at /tmp/6KNP33WdIy line 1:␤------> [32m=> Mu }, { id => 'b' }); say ?all(@a >> [33m⏏[31m.<id> >> .defined)[0m␤FAILED 00:01 108m␤

[10:37] <bacek> std: my @a = ( { id => 'a' }, { id => Mu }, { id => 'b' }); say ?all(@a » .<id> » .defined)

[10:37] <p6eval> std 29388: [31m===[0mSORRY![31m===[0m␤Unable to parse argument list; couldn't find final ')' at /tmp/uVS2r1UsxO line 1:␤------> [32md => Mu }, { id => 'b' }); say ?all(@a »[33m⏏[31m .<id> » .defined)[0m␤    expecting any of:␤ infix or meta-infix␤      infix stopper␤    standard stopper␤

[10:37] <p6eval> ..terminator␤F…

[10:37] <bacek> std: my @a = ( { id => 'a' }, { id => Mu }, { id => 'b' }); say ?all(@a».<id>».defined)

[10:37] <p6eval> std 29388: ok 00:01 108m␤

[10:38] *** bryan[c1] left
[10:45] *** meneldor joined
[10:47] *** plainhao left
[10:52] *** TiMBuS|Away left
[10:54] *** JimmyZ left
[11:00] *** bpetering joined
[11:06] *** c9s left
[11:06] *** c9s joined
[11:12] *** bacek_ joined
[11:13] <bacek_> rakudo: my $a; say $a.defined; say all($a).defined;

[11:13] <p6eval> rakudo 8dc189: 0␤1␤

[11:13] <bacek_> interesting. Is it expected behaviour?

[11:18] *** agentzh left
[11:18] *** pdcawley left
[11:18] *** pdcawley joined
[11:23] *** bacek left
[11:30] *** Chillance_ joined
[11:35] *** Chillance left
[11:36] *** colomon_ left
[11:36] *** bacek_ left
[11:52] *** bacek_ joined
[12:00] *** Lorn left
[12:01] *** |Jedai| joined
[12:10] *** rodi joined
[12:18] *** bluescreen joined
[12:22] *** snearch joined
[12:32] *** iblechbot left
[12:50] *** snearch left
[13:04] *** FalseVinylShrub joined
[13:05] *** payload joined
[13:07] *** pmurias joined
[13:07] <mberends> hi pmurias

[13:08] *** plainhao joined
[13:08] *** bacek_ left
[13:13] *** Baggio_ joined
[13:17] *** SmokeMachine joined
[13:18] *** Guest73154 left
[13:21] *** FalseVinylShrub left
[13:21] *** xomas_ joined
[13:21] <pmurias> mberends: hi

[13:22] <mberends> just reading smop/lowdoc/01_base.pod

[13:22] *** parduncia left
[13:22] *** ssm left
[13:22] *** constant left
[13:22] *** cognominal left
[13:22] *** zibri left
[13:22] *** sjohnson left
[13:24] *** sjohnson joined
[13:24] *** zibri joined
[13:24] *** ssm joined
[13:24] *** cognominal joined
[13:24] *** parduncia joined
[13:24] *** constant joined
[13:28] *** Lorn joined
[13:35] *** colomon joined
[13:38] *** FalseVinylShrub joined
[13:42] *** Baggio__ joined
[13:43] *** iblechbot joined
[13:43] *** nbrown joined
[13:44] *** zaslon left
[13:44] *** mubot left
[13:44] *** pointme left
[13:44] *** pointme joined
[13:44] *** mubot joined
[13:44] *** zaslon joined
[13:46] *** Baggio_ left
[13:52] *** orafu left
[13:53] *** orafu joined
[13:53] *** pmurias left
[13:55] *** Wolfman2000 left
[14:10] *** iblechbot_ joined
[14:10] *** iblechbot left
[14:13] *** patspam joined
[14:17] *** iblechbot joined
[14:18] *** iblechbot_ left
[14:24] *** synth joined
[14:41] *** cls_bsd joined
[14:41] *** iblechbot left
[14:43] *** JimmyZ joined
[14:44] *** rodi left
[14:45] *** szabgab joined
[14:57] *** bpetering left
[14:59] *** KyleHa joined
[15:05] *** Psyche^ joined
[15:08] *** pmurias joined
[15:11] *** Baggio__ left
[15:11] <rjbs> also: thanks for those questions; reminded me that I needed to update my linode to use Pobox SASL again

[15:12] *** Baggio_ joined
[15:12] <rjbs> mischan

[15:22] *** Patterner left
[15:22] *** Psyche^ is now known as Patterner

[15:34] *** JimmyZ left
[15:42] *** Baggio_ left
[15:43] *** Baggio_ joined
[15:44] *** crythias joined
[15:47] *** cdarroch joined
[15:48] *** SmokeMachine left
[15:48] *** SmokeMachine joined
[15:49] *** justatheory joined
[15:50] *** Baggio_ left
[15:53] *** ash__ left
[15:55] *** crythias left
[16:00] *** nihiliad joined
[16:01] <pmurias> mberends: anything needs fixing in lowdoc/01_base.pod

[16:01] <pmurias> ?

[16:03] <mberends> pmurias: nothing urgent, I think I can correct a few minor things. It is a fairly good explanation, helped me quite a bit, thanks :)

[16:05] <mberends> pmurias: Q: is it best to assume that the re-mildew and re-smop directories can be ignored, because you are moving the content gradually into mildew and smop?

[16:05] <pmurias> re-mildew and re-smop were renamed to mildew and smop

[16:06] <pmurias> mberends: are you sure you have an up to date checkout?

[16:07] <mberends> oh, then I'll delete the fossils left over locally. maybe even svn rm them.

[16:07] <mberends> pmurias: my pugs tree might be quite old, but it is current

[16:08] <pmurias> mberends: it seems to be a git-svn thing that it left empty directories

[16:08] <mberends> pmurias: removing, thanks

[16:11] *** zloyrusskiy joined
[16:15] <pmurias> mberends: you svn rm them?

[16:16] <mberends> pmurias: busy with that, yes. not complete yet.

[16:17] <mberends> (must manually weed out generated (non svn) files first)

[16:18] *** iblechbot joined
[16:19] <pmurias> mberends: just rm -fr re-smop, svn checkout re-smop and svn rm re-smop

[16:19] <pmurias> * svn update

[16:19] <mberends> pmurias: ah, thanks! ( /me svn n00b )

[16:23] <pugs_svn> r29389 | mberends++ | [v6] remove re-smop and re-mildew, please now use smop and mildew 

[16:23] <pmurias> perl6 doesn't have reserved identifiers?

[16:23] <pmichaud> good morning, #perl6

[16:23] <moritz_> \o/

[16:23] <mberends> good morning pmichaud

[16:24] <pmichaud> can only stay for a moment -- I'm about to write my advent post; if anyone has any huge ideas for things they really want to see there then please let me know :)

[16:24] <pmichaud> otherwise, I'll start writing in about an hour or so

[16:26] <pmichaud> I have two possible themes in mind:   (1)   "The Path to Rakudo Star",   and (2)  "Yes, Virginia, there is a Perl 6"

[16:26] <pmichaud> (http://www.newseum.org/yesvirginia/ for those who want the reference to #2 :-)

[16:26] <moritz_> unresolved cultural reference at line (2)

[16:26] <mberends> pmichaud: http://irclog.perlgeek.de/perl6/2009-12-20#i_1857710

[16:26] * [particle] wonders if there's a virginia.pm...

[16:27] *** colomon left
[16:27] <mberends> pmichaud: and 17:53

[16:29] *** masak joined
[16:29] <masak> \o/

[16:29] <mberends> \o/ masak

[16:29] <pmichaud> masak:  (from backscroll)

[16:30] <pmichaud> 16:24 <pmichaud> can only stay for a moment -- I'm about to write my advent post; if anyone has any huge ideas for things they really want to see there then please let me  know :)

[16:30] <masak> moritz_: earlier today, you said that "" quotes were a feature of Perl 6 regexes, just NYI in Rakudo. on what do you base that?

[16:30] <pmichaud> 16:24 <pmichaud> otherwise, I'll start writing in about an hour or so

[16:30] <pmichaud> 16:25 <pmichaud> I have two possible themes in mind:   (1)   "The Path to Rakudo Star",   and (2)  "Yes, Virginia, there is a Perl 6"

[16:30] <pmichaud> 16:26 <pmichaud> (http://www.newseum.org/yesvirginia/ for those who want the reference to #2 :-)

[16:30] <masak> pmichaud: hm. hm hm hm.

[16:30] <pmichaud> "" quotes are a feature of Perl 6 regexes, yes.

[16:30] <moritz_> masak: S05/Simplified lexical parsing of patterns/

[16:31] <masak> moritz_, pmichaud: thanks!

[16:31] <moritz_> (Double quotes are also allowed, with the same interpolative semantics as the current language in which the regex is lexically embedded.)

[16:31] <pmichaud> nqp-rx even implements them.  :)

[16:31] <masak> \o/

[16:31] <pmichaud> (with full interpolation semantics)

[16:32] <pmichaud> okay, I have to run some errands.  If anyone has ideas or suggestions, please highlight my nick

[16:32] <pmichaud> (or votes on those two themes)

[16:32] * mberends downvotes the Virginia meme, denial being associated with deniers

[16:32] <moritz_> masak: I recommend to read S05 some day, it's well worth it :-)

[16:32] <masak> pmichaud: I'd like the 24th post of Perl 6 to blow people's minds away, so that they are left staring at the screen, drooling in Mac-fanboi-like awe.

[16:32] <pmichaud> (for #2, the post would make sense even without knowing the cultural reference :-)

[16:32] <pmichaud> masak: well, I don't have a "blow people away" subject off the top of my head -- unless there's one hiding in topic-suggestions

[16:33] <masak> pmichaud: I'm of two minds: maybe a vision post is the right thing to do, maybe it isn't. it all depends on how it's written, I guess.

[16:34] *** FalseVinylShrub left
[16:34] <pmichaud> I had been aiming more at a "strong finish that lets people know we're still making progress and that April is in sight"

[16:34] <masak> yes, something like that.

[16:34] <pmichaud> mberends: downvote noted, thanks!

[16:34] <masak> only with fireworks, subwoofers, and strong winds.

[16:35] *** snearch joined
[16:35] <pmichaud> mberends: (I had similar reservations... not sure I want to push back against negatives.  I can do the "yes virginia" post as a normal non-advent post if I still feel like it :-)

[16:36] *** meneldor left
[16:36] <moritz_> http://lastofthecarelessmen.blogspot.com/2009/12/good-thing-perl-is-dead.html something along these lines might also work (much humour)

[16:36] <mberends> +1 to "The Path to Rakudo Star" because it would be inspiring to have some glimpses into the mind of an awesome compiler design(er).

[16:37] *** mariuz left
[16:37] <pmichaud> yes, I was just thinking that perhaps the 24th advent post (blow people's minds away) would be a description of how the compiler works in the ng branch, showing off the regexes, action methods, etc.

[16:39] <moritz_> that would be awesome

[16:39] <moritz_> +1 from me

[16:39] <masak> pmichaud: yes; perhaps with relatively little focus on internals and much focus on the delivered functionality.

[16:39] <masak> here's my highly subjective list of the posts poeple liked the most: .fmt, looping, .pick, given/when, roles, grammars/actions

[16:39] <masak> (based on a combination of number of comments and my subjective tastes)

[16:40] <pmichaud> okay, gotta run.  Please add comments and suggestions... I'd be happy if the 24th post was a community post instead of just me :)

[16:40] <pmichaud> (wish I had thought of that a week ago, though)

[16:41] <masak> most posts are community posts. :)

[16:41] <masak> community++ # you guys are great!

[16:41] <masak> (and gals, and butterflies)

[16:59] <cotto_w0rk> I really liked the Whatever post.

[17:02] <moritz_> thanks

[17:11] <cotto_w0rk> (plus it's great that Whatever is now a technical term)

[17:16] <pmichaud> and "phasers" too :-)

[17:29] *** KyleHa left
[17:34] *** _jaldhar left
[17:42] <pmurias> mberends:  did you manage to get mildew to run?

[17:46] *** frew_ is now known as frew

[17:49] <masak> yes, I liked the Whatever post too.

[18:07] *** payload left
[18:08] *** colomon_ joined
[18:12] *** rgrau` joined
[18:15] *** niella joined
[18:20] *** pmurias left
[18:22] *** patspam1 joined
[18:29] *** SmokeMachine left
[18:36] *** Calimbeul joined
[18:43] *** japhb left
[18:43] *** patspam left
[19:02] *** ShaneC joined
[19:12] *** japhb joined
[19:13] <Tene> pmichaud: any chance you're around today?

[19:22] *** SmokeMachine joined
[19:24] *** colomon_ left
[19:25] *** pmurias joined
[19:27] *** pdcawley left
[19:32] *** tempire joined
[19:57] *** Trey left
[19:59] <pmichaud> Tene: here, but working on my advent post.

[20:00] *** kaare_ joined
[20:01] <Tene> pmichaud: Just want a little sanity check on some macro stuff I'm working on, implementing it in my scheme compiler first.

[20:03] *** patspam1 left
[20:03] <pugs_svn> r29390 | pmurias++ | [mildew] fix smop backend 

[20:03] <pugs_svn> r29391 | pmurias++ | [mildew] refactor AST.pm to use MooseX::Declare 

[20:04] <Tene> My current implementation strategy is to cache the text of the macro body on definition, and then each time the macro is evaluated, set some context vars corresponding to what was matched, and call back into the compiler to ask for an AST of the cached macro body, with action methods that will check for the $*MACRO or whatever for the arguments to the macro.

[20:05] *** kaare_ left
[20:05] *** kaare_ joined
[20:06] <pmichaud> Well, "cache the text of the macro body" triggers my "that doesn't smell right" sense.... but it may be correct in this particular application

[20:06] <rjbs> macros aren't textual, are they?

[20:06] <pmichaud> rjbs: we're talking in scheme, here.

[20:06] * rjbs had assumed they were some sort of parameterizable syntax tree mumblehandwave.

[20:06] <Tene> Yes, also raises a warning for me.

[20:07] <mberends> pmurias: sorry, I've not managed to get mildew to run (yet). If there are any instructions I'd like to know about them, otherwise I shall document while learning what to do.

[20:07] <Tene> Um, I guess I *could* make something like that.

[20:07] <rjbs> Even in Scheme, I'd think that.  I'm just peanut-gallerying, though.  Don't mind me.

[20:07] <pmichaud> I'm not familiar enough with scheme macros to be able to say

[20:07] * rjbs should not be distracting anyone from "works and can be improved later"

[20:07] <Tene> build an object that has an AST and also holds references to nodes in the tree.

[20:08] <pmichaud> Tene: yeah, we may want a parameterizable AST or something like that

[20:09] <rjbs> pmichaud: They must be syntactically valid, afaik, although they need not be semantically sensible outside the context of the macro.

[20:09] <rjbs> Doh, I just tried to install mzscheme on this workstation and it failed.  Instead, I will go shower and shave. &

[20:11] *** Chillance_ left
[20:11] <Tene> rjbs: I wouldn't be doing textual substitution, I'd be re-evaluating the same text each time in a different context.

[20:11] <Tene> So, effectively a parameterized AST, just with a shady implementation. :)

[20:12] <pmichaud> Tene: anyway, I don't have much further comments about it at the moment.  Perhaps the best first-cut is to go ahead with a text-based macro, just to explore it further and see what works or doesn't work.

[20:12] <Tene> pmichaud: would you be comfortable with an implementation like that for rakudo, or would you much prefer to see some kind of parameterizable AST first?

[20:12] <pmichaud> but also know that we're likely to throw it away

[20:12] <Tene> Or do you withold judgement until you see an impl? :)

[20:13] <pmichaud> well, for rakudo I'm wanting to avoid macros at the moment, unless the implementation is almost trivially simple

[20:13] <pmichaud> iirc, macros aren't on the critical path for rakudo star, and I'm a bit concerned that the specification is still immature

[20:14] <moritz_> it won't get mature unless somebody implements it

[20:14] <pmichaud> moritz_: correct, but right now my focus is on getting the ng branch landed

[20:15] <pmichaud> I'm afraid that macros might end up being a huge distraction and/or pose difficulties for the other pieces that we *do* need to implement for Rakudo *

[20:15] <pmichaud> thus I'm in favor if the implementation is trivially simple

[20:15] <pmichaud> it could also be done in a branch

[20:16] <Tene> pmichaud: If protoregexes get implemented as it sounded like the spec will flal out after talking with TT, I expect a macro implementation to be almost trivially simple.

[20:16] <pmichaud> Tene: right -- so I'd need to review the spec changes

[20:16] <Tene> pmichaud: what do you see as the current priority for work on ng?

[20:16] *** Su-Shee left
[20:17] <pmichaud> but one of the lessons of the past couple of years is that if advanced features go into the implementation too soon, it makes it really hard to refactor some of the core features later on 

[20:17] <Tene> :) yes.

[20:18] <pmichaud> right now the priority has to be getting roles and classes back to where they were, list/array handling, and list assignment

[20:18] *** Su-Shee joined
[20:18] <pmichaud> I know I'm way behind on the list stuff

[20:19] <Tene> Ah, yes, I was still waiting on that.  I remember now.

[20:19] <pmichaud> i just need a day's effort to finish it, but it also has to be a day with the right energy levels on my end

[20:19] <pmichaud> Anyway, I need to get back to my advent post or I won't be done in time.

[20:19] <Tene> Yes, I'm done harassing you for now. :)

[20:22] <rjbs> Tene: Right, I figured -- the difference being that you could crash earlier with an AST.  Anyway, I think pmichaud is right to suggest "jfdi first and see how it goes"

[20:22] *** KyleHa joined
[20:26] *** bluescreen left
[20:27] <Tene> rjbs: fwiw, it looks like S06 not only suggests textual macros, but also that an implementation should support macros of things that wouldn't be valid code on their own... unbalanced brackets, etc.

[20:28] <Tene> kinda like: macro start_debug { "if $debug {" }; macro end_debug { "}" };

[20:32] *** pdcawley joined
[20:33] <rjbs> Tene: Weird.  I will defer my worrying until later.

[20:34] <Tene> fwiw, *I* don't plan to implement those any time soon. :)

[20:35] <rjbs> :-)

[20:35] <rjbs> phew, I got a better-than-z-machine scheme installed.

[20:37] *** bluescreen joined
[20:38] <Tene> You could install my scheme: http://github.com/tene/steme/ ;)

[20:39] <rjbs> I'll see if I Can have a look later.  Company calling, soon.

[20:40] <Tene> rjbs: I'm just trolling. :)

[20:40] * rjbs wouldn't mind looking, really.

[20:40] <rjbs> just so pressed for time lately :|

[20:41] <rjbs> at least I can stop worrying about advent calendar code for 11 months, soon.

[20:41] <rjbs> (I guess I could've stopped worrying like 3wk ago)

[20:42] *** plainhao left
[20:44] *** patspam joined
[20:49] *** jjore left
[20:57] *** ashizawa left
[21:01] *** y3llow_ left
[21:10] *** KyleHa left
[21:14] *** jjore joined
[21:16] *** Trey joined
[21:20] *** SmokeMachine left
[21:21] *** Wolfman2000 joined
[21:22] <pmichaud> advent post draft now available

[21:22] <pmichaud> comments welcomed

[21:22] <Wolfman2000> Good thing I came in now. Hang on.

[21:25] <Wolfman2000> pmichaud++ for the post

[21:26] *** ejs joined
[21:27] <pmichaud> in some ways I see the Perl 6 grammar (and the new regex design) as being another of TimToady's many gifts the world... and time will tell the tale of how valuable it truly ends up being.  :)

[21:28] <pmichaud> *gifts to the world

[21:32] <pmichaud> anyway, I'm taking a break for a bit.  Comments welcomed.  Editors are free to improve the draft however they see fit.  It's currently set to publish at 00:01 UTC.

[21:32] <pmichaud> (about 2.5 hours from now)

[21:35] <mberends> Wolfman2000: could you apply your superior styling to the source code bits?

[21:35] <Wolfman2000> mberends: My "styling" isn't exactly superiour.

[21:35] <pmurias> mberends: http://www.perlfoundation.org/perl6/index.cgi?smop_dependencies might help with installing smop

[21:35] <Wolfman2000> superior*

[21:36] <Wolfman2000> But where exactly do you want me to work my magic anyway?

[21:36] <mberends> rule statement { ... etc

[21:36] <Wolfman2000> I think I know what you mean. Hang on

[21:37] <Wolfman2000> ...I would, but pmichaud is currently editing the post

[21:39] <pmichaud> looking

[21:39] *** nihiliad left
[21:39] <pmichaud> it looks right on my screne

[21:39] <pmichaud> *screen

[21:40] <pmichaud> okay, I'm no longer editing on my browser.

[21:41] *** Yaquishael joined
[21:41] <Wolfman2000> Even on refresh, it claims you are

[21:42] <pmichaud> okay, just a sec

[21:42] <pmichaud> I have to edit something anyway

[21:44] <mberends> imho the source code styling in http://perl6advent.wordpress.com/2009/12/15/day-15-pick-your-game/ or http://perl6advent.wordpress.com/2009/12/17/day-17-making-snowmen/ look nicer

[21:44] <Wolfman2000> mberends: I figured you meant that

[21:44] <mberends> :)

[21:46] <pmichaud> okay, I'm not editing now (I think)

[21:46] <pmichaud> anyone have content comments?  does it work okay as a final post?

[21:46] <Wolfman2000> You think wrong. Content is okay

[21:46] <pmichaud> how do I tell wordpress that I'm no longer editing the post?  ;-)

[21:47] <pmichaud> oh, I suppose I could log out.

[21:47] <mberends> logout? 

[21:47] <mberends> ;)

[21:47] <pmichaud> okay, I've logged out.

[21:47] <Wolfman2000> ...my screen refuses to change

[21:47] <pmichaud> Wolfman2000: perhaps you need to log out and in again :-)

[21:48] *** alester joined
[21:49] <pmichaud> oooh, I like this post:  http://waffle.wootest.net/2009/12/19/perl-6-feature-ep1/

[21:51] *** y3llow joined
[21:55] *** snearch left
[22:00] <mberends> pmichaud: the post is much more serious than most of the previous ones. Is there a way to lighten it up? (I know it's probably hard). One idea could be to showcase some of the more awesome error messages.

[22:02] *** Yaquishael left
[22:05] <pmichaud> pick one :-)

[22:05] <mberends> perhaps convert some of the sentences that contain lists to bullet points, eg paragraph 3 custom operators etc

[22:05] <pmichaud> I prefer lists, especially when it's short as here

[22:05] * pmichaud looks for awesome error messages

[22:06] * mberends doesn't know the error messages well enough

[22:06] <pmichaud> I was thinking about the ?: -> ?? !!  error

[22:06] <mberends> should be good, yes

[22:06] *** ShaneC1 joined
[22:07] *** ShaneC left
[22:08] <mberends> 'Confused' is Not Awesome

[22:10] <pmichaud> updated.

[22:11] <pmichaud> fixing quotes.

[22:11] * mberends likes

[22:14] <mberends> pmichaud: s/resolve many of the long-standing problems/finally add long-awaited features/

[22:14] <pmichaud> +2

[22:14] <pmichaud> updated.

[22:15] *** kaare_ left
[22:15] <pmichaud> have to run for a bit again.. feel free to make further edits

[22:15] <pmichaud> I agree, this one isn't quite as light as some of the earlier ones... I'll keep thinking of ways to improve that

[22:16] <mberends> looks better to me now

[22:16] <pmichaud> thanks for the comments

[22:16] <mberends> :)

[22:16] * moritz_ likes it

[22:16] <pmichaud> back in a short while

[22:16] <pmichaud> ah, if moritz++ likes it, then I feel I've at least achieved the minimum bar :)

[22:17] <pmichaud> it might not be a blockbuster ending.... but I was having trouble coming up with anything more blockbuster.  And upon reflection, I really think the grammar is an important feature of Perl 6.

[22:18] <pmichaud> anyway, afk for a short while

[22:18] <moritz_> I finally had another idea for a 24th posting :-)

[22:18] <moritz_> "building an awesome language"

[22:19] *** alester left
[22:19] <moritz_> that describes how our process works to make error messages, integration of other languages, module loading etc. awesome

[22:19] <moritz_> well, it's still kind of weak

[22:19] <moritz_> anway, bed time for me

[22:19] <moritz_> have a nice localtime everybody

[22:19] <mberends> likewise moritz_

[22:23] * mberends edits the post a little, trimming unnecessary extra words

[22:24] *** rgrau` left
[22:33] <Tene> masak: the following test passes in steme: http://github.com/tene/steme/blob/master/t/05-macro.t

[22:39] <masak> Tene: looking

[22:40] <masak> Tene: hm, I don't grok what it does at first reading.

[22:42] <Tene> masak: the debug macro is expanded at compile-time into an 'if', so the argument to debug isn't evaluated if debug-enabled is false.

[22:42] *** Patterner left
[22:42] <sjohnson> yo masak

[22:42] <Tene> the ` means "insert the ast for this macro argument"

[22:42] <Tene> afk, errands

[22:43] <masak> sjohnson: y0

[22:43] <masak> Tene: I'm starting to see it now.

[22:43] <masak> Tene: cool. :)

[22:44] *** Psyche^ joined
[22:44] *** Psyche^ is now known as Patterner

[22:44] <masak> pmichaud++ # the advent post

[22:45] <masak> hm... I'm not so good at English... is "these sort of things" the way to write it? sounds strange to me.

[22:45] <masak> I'd have it as "this sort of things" or "these sorts of things".

[22:46] * mberends is hacking the words, just saved a bit

[22:46] <masak> mberends++

[22:47] <mberends> it's technically accurate, but awkward in that sentence

[22:49] <mberends> singular throughout works better. saved.

[22:50] <Tene> masak: also spoke with TimToady about spec clarifications needed for P6 macros.

[22:50] <masak> \o/

[22:52] <masak> pmichaud++ # again

[22:52] <masak> it's a very good finish to the Calendar. going out with style! :)

[22:53] *** niella left
[22:53] <pmichaud> also, if there's one thing that I think is a killer feature of Perl 6, it's the extensible grammar.

[22:53] <masak> aye.

[22:53] <pmichaud> and parsing in general

[22:53] <pmichaud> that, to me, is what will really set Perl 6 apart relative to its contemporaries

[22:54] <masak> *cough* Lisp *cough*

[22:54] <masak> oh. right. contemporaries.

[22:54] <pmichaud> yes, I know Lisp can do that.  But there's a reason nobody uses Lisp.  :-)

[22:54] <mberends> pmichaud: would it be too off topic to show an example of a DSL grammar?

[22:55] <pmichaud> mberends: in the post?

[22:55] <mberends> yes

[22:55] <pmichaud> no, not too off topic at all, I don't think.

[22:55] <pmichaud> I didn't have a DSL in mind at the time :-)

[22:55] <mberends> lolsql

[22:55] <pmichaud> where's the grammar for that?  haven't seen it yet

[22:56] <mberends> jnthn++ posted one somewhere

[22:56] <mberends> or blogged about it

[22:56] <pmichaud> http://github.com/jnthn/lolsql/blob/master/icanhazsql.p6

[22:56] <pmichaud> it would be good if those were converted to protoregexes

[22:57] <mberends> it's a bit big to add to the post in full

[22:57] <pmichaud> <value> and <statement> would be good candidates for protoregexes there

[22:57] <pmichaud> especially statement

[22:57] * pmichaud reworks the grammar quickly

[22:59] <pmichaud> oh, maybe not.  hrm.

[23:00] <pmichaud> not sure it fits with the rest of the post.

[23:00] <masak> if it doesn't fit, leave it as it is.

[23:01] <pmichaud> afk, have to help with dinner

[23:01] <pmichaud> as before, edits to the post are welcomed :-)

[23:06] *** pmurias left
[23:07] *** sepi_ joined
[23:07] <sepi_> hi

[23:07] <sepi_> is perl 6 faster than 5

[23:07] <sepi_> ?

[23:09] <masak> sepi_: perl 6 is not an implementation like perl 5.

[23:10] <masak> sepi_: but to answer your question straight: no. right now, if you want speed above all else, go with perl 5.

[23:11] <sepi_> ok

[23:11] <masak> 'night, #perl6.

[23:12] *** bryan[c1] joined
[23:12] <sepi_> i'm a c/c++  programmer

[23:12] *** racheldaBROWN joined
[23:12] *** rachelBROWN left
[23:12] <sepi_> but i'm searcging for a scripting language to embed in my c++ apps

[23:13] <sepi_> everybody say use lua, but i like perl's syntax more than any other scripting languages

[23:13] <mberends> perl 5 is the most suitable and will remain so for at least another year

[23:15] <sepi_> is there any outsanding app built with perl, for example python has blender in its hand, but what about perl

[23:15] <sepi_> ?

[23:16] <Khisanth> isn't the answer for speed above all else "assembly"? :)

[23:16] <Khisanth> or maybe stacks of cash

[23:16] <sepi_> :)

[23:17] <sepi_> but it's rediciolus to use it

[23:19] *** iblechbot left
[23:20] *** sepi_ left
[23:23] *** guest8723 joined
[23:23] *** colomon joined
[23:26] *** guest8723 left
[23:33] *** zloyrusskiy left
[23:34] *** justatheory left
[23:34] *** justatheory joined
[23:46] *** kensanata joined
[23:48] *** jferrero joined
[23:51] *** nihiliad joined
[23:56] *** xomas_ is now known as xomas

