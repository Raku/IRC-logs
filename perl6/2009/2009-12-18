[00:03] *** ash__ joined
[00:06] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 18: Roles': http://perl6advent.wordpress.com/2009/12/18/day-18-roles/

[00:07] *** _jaldhar joined
[00:09] <diakopter> pmurias: sorry (was afk)

[00:10] *** nihiliad left
[00:10] <diakopter> pmurias: let's wait on that idea; keep at the translation of STD output, I'd recommend...

[00:19] <diakopter> quiet the past hour...

[00:19] *** ash__ left
[00:19] <pmurias> diakopter: doing git svn dcommit then ;)

[00:20] *** jaldhar left
[00:23] <carlin> jnthn++ # 'does' good advent posts

[00:23] *** lestrrat is now known as lest_away

[00:25] *** justatheory left
[00:27] *** snearch_ left
[00:40] <pmurias> mildew-js now only fails to more tests then before moving to new STD (because the newer STD cannot parse those) ;)

[00:41] <pmurias> s/to/2/

[00:43] <cotto_w0rk> who's in charge of the advent calendar?  The code needs some indentation love.

[00:46] <diakopter> cotto_w0rk: you? :)

[00:46] *** lest_away is now known as lestrrat

[00:47] <cotto_w0rk> definitely not me

[00:48] <arnsholt> It'll have to be someone with the right permissions in Wordpress, I'd bet =)

[00:50] * chromatic will send the release announcement later tonight

[00:51] *** lestrrat is now known as lest_away

[00:53] *** justatheory joined
[00:55] *** justatheory left
[00:59] *** pmurias left
[01:05] *** dduncan joined
[01:05] *** dduncan left
[01:07] *** chromatic left
[01:09] *** ShaneC left
[01:12] *** payload joined
[01:15] *** jferrero left
[01:26] *** TiMBuS left
[01:31] *** JimmyZ joined
[01:35] *** lest_away is now known as lestrrat

[01:52] *** tsbtmn joined
[01:53] *** tjc joined
[02:00] *** colomon left
[02:15] *** patspam left
[02:18] *** tjc left
[02:22] *** RichiH left
[02:23] *** agentzh joined
[02:24] *** RichiH joined
[02:27] *** kst` is now known as kst

[02:30] *** patspam joined
[02:33] *** colomon_ joined
[02:38] *** tarski joined
[02:42] *** mikehh left
[02:43] *** mikehh joined
[02:49] *** gbacon left
[02:52] *** stephenlb left
[02:54] *** patspam1 joined
[02:55] *** patspam left
[02:56] *** gfx joined
[02:57] *** RichiH left
[02:57] *** RichiH joined
[03:00] *** tarski left
[03:08] *** colomon joined
[03:08] *** colomon_ left
[03:13] *** justatheory joined
[03:17] *** justatheory left
[03:20] *** colomon_ joined
[03:20] *** colomon left
[03:20] *** colomon_ is now known as colomon

[03:21] *** cdarroch left
[03:22] *** meppl left
[03:28] <colomon> phenny: tell jnthn Somehow all the code formatting had disappeared from your post.  I just did my best to get it back, but you might want to double-check it to make sure I got it more or less the way you would like it.

[03:28] <phenny> colomon: I'll pass that on when jnthn is around.

[03:35] *** colomon left
[03:45] *** constant left
[03:45] *** ssm left
[03:45] *** parduncia left
[03:50] *** constant joined
[03:50] *** ssm joined
[03:50] *** parduncia joined
[03:53] *** ssm left
[03:53] *** parduncia left
[03:53] *** constant left
[04:02] *** constant joined
[04:02] *** ssm joined
[04:02] *** parduncia joined
[04:15] <PerlJam> succeed/proceed  +1

[04:24] *** zaphar_ps left
[04:49] *** TimToady sets mode: +vvv buubot dalek hugme

[04:49] *** TimToady sets mode: +vvv ilbot2 ilogger2 IRSeekBot

[04:49] *** TimToady sets mode: +vvvv lisppaste3 mubot p6eval phenny

[04:49] *** TimToady sets mode: +vv pointme zaslon

[04:50] *** patspam1 left
[05:03] *** meppl joined
[05:04] *** tsbtmn left
[05:34] *** matsuzine_ joined
[05:44] *** mz_ joined
[05:44] *** mz_ left
[05:50] <japhb> nqp: my $foo; sub say_foo () { say($foo) }; INIT { $foo := "Foo"; }; say_foo()

[05:50] <p6eval> nqp: ␤

[05:50] <japhb> How do I make that work?

[05:52] <TimToady> nqp: state $foo = "Foo"; sub say_foo () { say($foo) }; say_foo();  # maybe?

[05:52] <p6eval> nqp: Confused at line 1, near "state $foo"␤current instr.: 'parrot;HLL;Grammar;panic' pc 500 (src/cheats/hll-grammar.pir:197)␤

[05:52] <TimToady> # maybe not...

[05:53] <TimToady> obviousl you need a "so quite perl"

[05:53] <TimToady> *ly

[05:54] <japhb> well, sure.  :-)

[05:54] <japhb> Of course, since I'm trying to write something to help install SQP, I'm kinda stuck.  ;-)

[05:54] *** justatheory joined
[05:57] *** rgrau` left
[06:12] <diakopter> std: so so 1

[06:12] <p6eval> std 29369: Undeclared routine:␤  'so' used at line 1,1␤ok 00:01 104m␤

[06:13] <diakopter> std: not 1

[06:13] <p6eval> std 29369: ok 00:01 105m␤

[06:13] <diakopter> std; true True

[06:13] <diakopter> std: true True

[06:13] <p6eval> std 29369: ok 00:01 105m␤

[06:13] <diakopter> std: so not True

[06:13] <p6eval> std 29369: Undeclared routine:␤  'so' used at line 1␤ok 00:01 105m␤

[06:14] <diakopter> std: use ValleyGirl;

[06:14] <p6eval> std 29369: Potential difficulties:␤  Can't locate module ValleyGirl at /tmp/LvcGxV390P line 1:␤------> [32muse ValleyGirl[33m⏏[31m;[0m␤ok 00:01 103m␤

[06:15] *** justatheory left
[06:15] *** hicx174_ left
[06:16] <diakopter> std: that is, like, so like, so not True

[06:16] <p6eval> std 29369: Undeclared routines:␤ 'is' used at line 1␤     'like' used at line 1,1␤  'so' used at line 1,1␤    'that' used at line 1␤ok 00:01 106m␤

[06:16] *** hicx174 joined
[06:19] <TimToady> and stuff

[06:28] *** matsuzine_ left
[06:40] *** Caelum joined
[06:46] <diakopter> rakudo: say (!!7).WHAT === (Bool::True).WHAT === (true 7).WHAT

[06:47] <p6eval> rakudo 7f1c3f: 1␤

[06:47] <diakopter> pugs: say 3 ?? !!4 !! 5

[06:47] <p6eval> pugs: 1␤

[06:47] <diakopter> rakudo: say 3 ?? !!4 !! 5

[06:47] <p6eval> rakudo 7f1c3f: 1␤

[06:48] <moritz_> std: say 3 ?? !!4 !! 5

[06:48] <p6eval> std 29369: ok 00:01 105m␤

[06:48] <diakopter> rakudo: say 3 ?? !!0 !! 5

[06:48] <p6eval> rakudo 7f1c3f: 0␤

[06:52] <diakopter> rakudo: sub so { !!$^a }; say (so not True).WHAT

[06:52] <p6eval> rakudo 7f1c3f: Bool()␤

[06:52] *** Su-Shee joined
[06:59] *** silug left
[06:59] <diakopter> twitter dieth

[06:59] <diakopter> oooo http://www.flickr.com/photos/ceronman/4194674390/

[07:03] <diakopter> I'd tweet that url, but ...

[07:03] <moritz_> hugme: tweet hugmetest test

[07:04] <hugme> moritz_: Sorry, I don't have access to twitter account 'hugmetest'

[07:04] <moritz_> hugme: tweet hugme_test test

[07:04] * hugme hugs moritz_; tweet delivered

[07:06] <TimToady> std: so so ...

[07:06] <p6eval> std 29370: ok 00:01 107m␤

[07:06] <TimToady> std: not so so so ...

[07:06] <p6eval> std 29370: ok 00:01 105m␤

[07:06] <moritz_> so you think that's funny? :-)

[07:07] <TimToady> std: not so true

[07:07] <p6eval> std 29370: Undeclared routine:␤  'true' used at line 1␤ok 00:01 105m␤

[07:08] <TimToady> std: so say my @friends

[07:08] <p6eval> std 29370: ok 00:01 106m␤

[07:09] <TimToady> std: [1...]

[07:09] <p6eval> std 29370: [31m===[0mSORRY![31m===[0m␤Missing term at /tmp/2LLfdQa8Wx line 1:␤------> [32m[1...[33m⏏[31m][0m␤    expecting any of:␤     prefix or term␤   standard stopper␤ term␤   terminator␤       whitespace␤FAILED 00:01 105m␤

[07:10] <diakopter> oh, they recovered twitter quickly

[07:12] <TimToady> std: 1......

[07:12] <p6eval> std 29370: ok 00:01 104m␤

[07:12] <TimToady> std: .........

[07:13] <p6eval> std 29370: ok 00:01 104m␤

[07:13] <diakopter> std: ... ... ... ...

[07:13] <p6eval> std 29370: ok 00:01 104m␤

[07:14] <diakopter> std: ...: # SLTA error

[07:14] <p6eval> std 29370: [31m===[0mSORRY![31m===[0m␤Illegal use of colon as invocant marker at /tmp/lavfQDCEsF line 1:␤------> [32m...:[33m⏏[31m # SLTA error[0m␤FAILED 00:01 104m␤

[07:14] <TimToady> what do you think it should say?  :)

[07:15] <TimToady> something like Huh?

[07:15] <diakopter> "not everyone gets the colon"

[07:15] <diakopter> "I think you need a colonectomy"

[07:16] <diakopter> "..or perhaps a colostomy, or maybe just a colonoscopyo"

[07:16] <diakopter> "..or perhaps a colostomy, or maybe just a colonoscopy"

[07:17] <diakopter> sorry

[07:17] <TimToady> std: so not funny

[07:17] <p6eval> std 29370: Undeclared routine:␤  'funny' used at line 1␤ok 00:01 105m␤

[07:19] <diakopter> std: so so !! any 1 but self

[07:19] <p6eval> std 29370: ok 00:01 105m␤

[07:19] <TimToady> std: not so eager

[07:19] <p6eval> std 29370: ok 00:01 105m␤

[07:20] <TimToady> std: not so hyper # bedtime

[07:20] *** IllvilJa left
[07:20] <p6eval> std 29370: ok 00:01 105m␤

[07:20] <moritz_> good night

[07:20] *** meppl left
[07:20] <diakopter> moritz_: nite

[07:20] <diakopter> I mean

[07:20] <diakopter> heh

[07:20] <diakopter> moritz_: g'morning

[07:21] <moritz_> :-)

[07:26] *** mariuz joined
[07:28] <diakopter> std: class must does must does must does must does must does must { }

[07:28] <p6eval> std 29370: ok 00:01 104m␤

[07:32] *** kaare joined
[07:33] *** kaare is now known as Guest81964

[07:39] *** gfx left
[07:47] *** iblechbot joined
[07:55] <spinclad> std: so not hyper

[07:55] <p6eval> std 29370: ok 00:01 106m␤

[07:55] *** chromatic joined
[07:56] <spinclad> std: not so True

[07:56] <p6eval> std 29370: ok 00:01 105m␤

[07:56] <spinclad> std: so not True

[07:56] <p6eval> std 29370: ok 00:01 105m␤

[07:57] <spinclad> std: so antonymous!

[07:57] <p6eval> std 29370: [31m===[0mSORRY![31m===[0m␤Negation metaoperator not followed by valid infix at /tmp/IQ8QDSLV9V line 1:␤------> [32mso antonymous![33m⏏[31m<EOL>[0m␤    expecting any of:␤   infix or meta-infix␤      infix stopper␤    standard stopper␤ terminator␤Undeclared routine:␤    

[07:57] <p6eval> ..'antonymous' used at lin…

[07:58] <spinclad> std: so not the same

[07:58] <p6eval> std 29370: Undeclared routines:␤ 'same' used at line 1␤   'the' used at line 1␤ok 00:01 105m␤

[07:58] <chromatic> Do I have posting permissions on rakudo.org?

[07:59] <diakopter> prob not

[07:59] <chromatic> Can someone with permissions post the release announcement?

[07:59] <diakopter> I think only alester and pmichaud

[07:59] <diakopter> and jnthn

[08:00] <moritz_> and me

[08:00] <moritz_> and masak

[08:00] <moritz_> and all previous release managers :-)

[08:00] <chromatic> Well volunteered!

[08:02] <moritz_> either rakudo.org or my internets are slow

[08:03] <moritz_> http://rakudo.org/node/61

[08:03] <chromatic> Thanks!

[08:03] <moritz_> chromatic++ # managing one of the most difficult releases so far

[08:04] <chromatic> Especially on a basketball night.

[08:06] <diakopter> quietfanatic++ helped me talk out how to manage declarative API for labels/gotos in declarative MSIL generation (runsharp.googlecode.com)

[08:07] *** masak joined
[08:07] <diakopter> masak: hm

[08:07] <masak> good morning.

[08:09] <moritz_> lolitsmasak

[08:09] <moritz_> is there a book release today?

[08:09] <Tene> anyone willing to comment on preferred style for p6advent posts?

[08:09] <masak> moritz_: yes, I have a feeling there is.

[08:09] <Tene> Oh, it's masak!  I bet I can con him into doing it!

[08:10] <masak> Tene: 'preferred style'?

[08:10] <masak> we're anarchists!

[08:10] <Tene> masak: I'm talking about Grammars... think there's any value in including the long output of .perl on a match object?

[08:10] <Tene> 232 lines.

[08:10] <Tene> Or just snip it?

[08:10] <masak> eurgh.

[08:11] <Tene> Maybe just print parts of it...

[08:11] <masak> keep it short, I think.

[08:11] <moritz_> Tene: you could include a visualization

[08:11] <masak> moritz_++

[08:11] <Tene> ... ><

[08:11] <moritz_> Tene: I've written a moduel for that

[08:11] <Tene> Orly?

[08:12] <moritz_> pointme: SVG::MatchDumper

[08:12] <pointme> Sorry, I don't know anything about SVG::MatchDumper

[08:12] <Tene> I wrote a little program once to generate graphs of STD.pm and Rakudo's grammar.  That was fun.

[08:12] <moritz_> http://github.com/moritz/svg-matchdumper

[08:13] <moritz_> I need to check if it bitrotted

[08:14] <Tene> Hmm.  i'd need to install SVG.pm too.

[08:14] <Tene> Maybe I just make you generate the svg for me.

[08:15] <lisppaste3> tene pasted "untitled" at http://paste.lisp.org/display/92302

[08:19] <moritz_> I don't know if it handles multi-line input...

[08:19] <masak> wohoo! the first Rakudo release with a negative number of additional passing spectests! \o/

[08:19] <moritz_> nope, not useful :(

[08:19] <diakopter> cool; I got the declarative labels/gotos to work: http://mono.pastebin.com/d37392572

[08:22] <masak> ooh, also (.grab)++

[08:22] <masak> TimToady: should there be an Array.grab as well?

[08:24] <masak> (for the times when one wants to mutate the array as well as return the picked items)

[08:24] *** colomon joined
[08:25] *** JimmyZ_ joined
[08:26] <masak> ooh, and (succeed/proceed)++! only good changes this mroing! :)

[08:35] *** JimmyZ left
[08:42] *** Chillance joined
[08:42] <Tene> Up to 112 lines long blog post!  Almost halfway to the length of that match object. ;)

[08:42] <Tene> Hmm.  This looks to be rather longer than most of the existing posts.

[08:43] <Tene> Anyone willing to review it so far?

[08:45] *** Chillance left
[08:45] *** Chillance joined
[08:46] *** Chillance left
[08:46] * masak reviews it

[08:46] <mathw> OH HAI

[08:46] <mathw> Tene: what's it about?

[08:47] <lisppaste3> tene pasted "p6advent WIP" at http://paste.lisp.org/display/92303

[08:47] *** Chillance joined
[08:47] <Tene> mathw: grammars and action methods.

[08:47] *** Chillance left
[08:47] *** Chillance joined
[08:47] <masak> Tene: no riff on 'today's gift' in the beginning? :)

[08:47] <colomon> wait, where is it to be reviewed?.... oh, that's freaky, the paste came up here just as I finished typing the first half of the sentence. 

[08:48] *** Chillance left
[08:48] <Tene> I'm about halfway done.

[08:48] *** bl joined
[08:48] *** Chillance joined
[08:49] *** Chillance left
[08:49] <masak> Tene: why token + <.ws> instead of rule?

[08:49] *** Chillance joined
[08:50] *** Chillance left
[08:50] *** Baggio_ joined
[08:50] *** Chillance joined
[08:50] <Tene> masak: I didn't really want to get into regex/token/rule any more than I did, and I wanted to be precise about whitespace because it's used to differentiate answer/header, and I wanted a reason to mention leading ., and to be more idiomatic

[08:51] <Tene> s/more idiomatic/because that's how I was initially inclined to write it/

[08:51] <masak> :P

[08:51] <masak> fair enough. not a big issue; I was just a tad surprised.

[08:52] * Tene nods.

[08:52] <Tene> I thought about it.

[08:53] <masak> $_<header><text>

[08:53] *** silug joined
[08:53] <masak> better written as .<header><text>

[08:53] <colomon> oooo, oooo, I want to see what comes next!

[08:55] <masak> also, if it's not too late to change, the class name 'Answer' feels a tad confusing. would it be better to name it 'Alternative' or 'Option' or 'Item'?

[08:55] <Tene> Those are a bit too vague, IMO.

[08:55] <Tene> You've got your Correct Answers and Incorrect Answers.

[08:56] <masak> it's just that Question::Answer feels like a wonky type name.

[08:56] <masak> but oh well.

[08:56] <masak> maybe type $.correct as a Bool?

[08:56] <Tene> I'm a bit opinionated about that right now.  I've spent the past week trying to keep similar things in this semantic space different, so...

[08:56] <Tene> Oh, did I not include that?

[08:56] <JimmyZ_> masak: http://chinesepod.com/

[08:57] <Tene> Yes, let's.

[08:57] *** JimmyZ_ is now known as JimmyZ

[08:57] <masak> JimmyZ_: 太好了! 谢谢.

[08:58] <Su-Shee> hm. why do I still have this font rendering problem in certain ranges.. 

[08:58] <JimmyZ> masak: I don't know any more about it. Just find it.

[08:58] <mathw> Tene: looks okay so far

[08:59] <masak> JimmyZ: thanks for thinking of me.

[08:59] <JimmyZ> :)

[08:59] <Tene> masak: opinions on iterating over $<answer> and $<question> in the action method vs >>.ast ?

[08:59] <Tene> We did already have a post about >>.

[08:59] <masak> Tene: if it's without side effects, >>. is fine.

[09:00] <masak> IMHO.

[09:00] <Tene> Yes, I thought that too.

[09:03] <mathw> yeah >>. is great if you're not worried about ordering or interleving

[09:04] *** Baggio_ left
[09:05] <masak> ordering in the temporal sense.

[09:06] <masak> the order of the sequence that comes out corresponds to the order of the sequence that goes in.

[09:07] <sjohnson> yo masak

[09:07] <masak> 'sup sjohnson

[09:07] <mathw> masak: yes, I was referring more to order of execution

[09:07] <mathw> well, entirely, actually

[09:08] <masak> :)

[09:08] *** chromatic left
[09:09] <sjohnson> masak: just drinking some wine and checkin the internet

[09:10] <masak> sjohnson: well, here we are. the Internet. and we're looking back at you. :)

[09:11] <mathw> mmmmm wine

[09:11] <mathw> I doubt my manager would like it if I started drinking wine in the meeting we're having in a bit

[09:11] <mathw> Although he'd probably be happy to join in

[09:12] <mathw> Maybe I should go to the shop...

[09:13] <Tene> oh man, this prose really needs some review.  I'm not very confident in it.  'sec, lemme post.

[09:13] <sjohnson> just buy a nice looking bottle

[09:13] <sjohnson> and say it's to celebrate sometihng

[09:14] <sjohnson> much better idea than what i did, which was bring a 6 pack to work!!!

[09:14] *** lestrrat is now known as lest_away

[09:14] <sjohnson> <--- learned his lesson

[09:14] <lisppaste3> tene pasted "more p6advent WIP" at http://paste.lisp.org/display/92304

[09:16] <Tene> I'm particularly interested in feedback on anything after /As you can guess/

[09:16] <JimmyZ> wow,more long

[09:17] <Tene> JimmyZ: too long for p6advent?

[09:17] <JimmyZ> no, It's better.

[09:17] <spinclad> Tene: s/:action/:actions/

[09:18] <Tene> spinclad: only in ng, not in master.

[09:18] <Tene> I'll add a note that it will be different eventually, though.  Thanks.

[09:19] <spinclad> ah, i remembered the transition but forgot when it happened. my bad.

[09:19] <Tene> yeah, it tripped me up too.

[09:19] <masak> is this the first mention of the ng branch in an advent post? or did someone mention it before?

[09:20] <Tene> enoclue

[09:20] <Tene> day 14 mentions it

[09:20] <Tene> "One interesting development which has not made it into the main Rakudo build yet is decimal numbers in the source are now spec’d to be Rats. Luckily this is implemented in the ng branch, so it is possible to demo how it will work once it is in mainstream Rakudo"

[09:20] <spinclad> are the implicit {*}'s in master? they also transitioned in.

[09:21] <Tene> spinclad: they are not.

[09:21] <masak> Tene: "Named and Positional access (<> and []) without a variable name go to $/." -- I know what you mean, but I'm not sure a reader would.

[09:21] <Tene> Yeah, that's not great.

[09:22] <masak> perhaps concrete examples would be better.

[09:22] <Tene> "Named and Positional access without a variable name ($<foo>, $[0]) go to ..."

[09:22] <Tene> ?

[09:22] <masak> something like "$1 translates to $/[1] and $<foo> translates to $/<foo>"

[09:22] <moritz_> $<foo> is a shortcut for $/<foo> and $1 a shortcut for $/[1]

[09:22] <masak> yes.

[09:23] <Tene> Yes, I like that.  Thank you.

[09:24] <Tene> "Named and Positional access without a variable ($<foo> and $[1]) are translated into access to $/ ($/<foo> and $/[1])." ?

[09:24] <masak> by the way, Happy 22th birthday! \o/

[09:24] <Tene> Whose?

[09:25] <masak> Tene: Perl's.

[09:25] <Tene> Ah!

[09:25] <masak> s/th/nd/

[09:25] *** JimmyZ left
[09:26] <masak> Tene: I'd slap on a ", respectively" in the 2nd parenthesis, but that's mostly because I like the word. :)

[09:26] <Tene> ", masakspectively"

[09:27] *** rfordinal joined
[09:27] <masak> erm. In the Wikipedia article for Perl, under section "Future", it says "Main article: Perl 6".

[09:28] <masak> wonder what the #perl people would think about that...

[09:28] <moritz_> :-)

[09:28] <masak> I think I'll go and ask them. :)

[09:32] *** bl left
[09:33] *** krakan joined
[09:33] <masak> I was quickly told that Perl 6 is not released yet. maybe next year.

[09:33] *** JimmyZ joined
[09:35] <frettled> Haha :)

[09:35] *** frettled sets mode: +o masak

[09:36] <wayland76> Well, they must be fine with it, right?

[09:36] <Su-Shee> this bickering between the perls could stop some day. ;)

[09:37] <wayland76> yes -- as soon as we decide it's casting our perls before swine :)

[09:40] <mathw> I want to know, ignoring any concerns about implementation and migration, why there are some people who say they don't like Perl 6 the language

[09:40] <mathw> As in, what don't they like about it

[09:40] <mathw> Why do they think Perl 5 is better?

[09:41] <mathw> Are there technical arguments, or is it just people not wanting to deal with something different?

[09:41] <Tene> mathw: I have a friend who HATES it, apparently because it disallows dropping a space between 'if' and parens around a condition.

[09:41] <wayland76> Some of them it's just CPAN, but others, I don't know

[09:41] <wayland76> Ah, yes, there are those

[09:41] <Su-Shee> perl 5 is there, fast, usable, with a vast landscape of modules. 

[09:41] <frettled> mathw: Ah.  There are plenty of reasons for that, rationally and irrationally.  Rationally, Perl 5 works today, it's reasonably quick, its core features don't change every week, and yes, CPAN.

[09:41] <wayland76> I don't like that either (the if-space thing), but I can live with it to get the rest

[09:42] *** pnu left
[09:43] <frettled> Yeah, the significant whitespace-thing is definitely something that you have to be extremely careful with, also in mentioning. :)

[09:43] <mathw> Tene: but... you can drop the brackets completely!

[09:43] <Tene> mathw: that's even worse, according to him.

[09:44] <mathw> ...

[09:44] <mathw> I can't comprehend that

[09:44] <mathw> I look at Perl 6 code and it feels clean and airy

[09:44] <spinclad> Tene: (re draft): I know I have a hard time, in exposition like this, achieving a tone that is light and still precise, complete but not heavy.  This seems a very good draft: a good choice of toy, well explained.  Perhaps in polishing I would look to maintain an awareness of the setting (opening presents under the tree) and let it help with lightness of tone.

[09:44] <mathw> Largely because of that

[09:44] <wayland76> Well, I've been writing Perl and C for the last 14 years, and doing it that way.  I can understand not wanting to have to re-learn

[09:45] <Tene> mathw: it has to do with hoe he chunks code as he reads it.

[09:45] <Su-Shee> mathw: yeah, that's all great and pretty and shiny - and what exactly do I use in the office for web programming with a data base and SSL? or for network programming? or for parsing 200 gig logfiles _per day_?

[09:45] <Tene> how

[09:45] <Su-Shee> you may insist on believing it's about "not wanting to learn" - it's not.

[09:46] <Su-Shee> (which is a pretty nasty assumption on the side of the perl6 folks, btw.)

[09:47] <mathw> Su-Shee: I specifically said this is apart from migration issues, current development state, performance etc.

[09:47] <mathw> It's obvious that people are going to be reluctant to move away from a proven system

[09:47] <Su-Shee> mathw: so, what exactly is left then? 

[09:47] *** frettled sets mode: +o Su-Shee

[09:47] <mathw> The language design itself

[09:47] <moritz_> dislike for the language, community, learning process, websites

[09:47] <Su-Shee> "use Perl 6 - if you don't need speed, don't have to migrate, need no module and don't need a complete implementation"? :)

[09:48] <Su-Shee> yeah and yet you all care so very much what the perl 5 folks think about you... ;) 

[09:49] <mathw> I'm not saying those things aren't important, but I understand why people raise them, so that's why I was specifically excluding them

[09:49] <mathw> But there are people posting things in which they say they don't like the language itself, and that's what intrigues me

[09:49] <lisppaste3> tene pasted "Full p6advent draft" at http://paste.lisp.org/display/92305

[09:49] <Su-Shee> mathw: so try to understand that for many people _those_ _are_ the issues. no matter how nice the language itself might be.

[09:50] <spinclad> sure, the language has a lot of growing up to do.

[09:51] <mathw> Su-Shee: And as I said, I'm not curious about those people because I understand those objections.

[09:51] <Su-Shee> I'm rather undecided up until now wether or not I really like Perl 6 as long as I constantly bump into some limits. and the "it'll be there' is a little old for someone like me who already did Perl in '96 and really waited from 2000 over pugs until today. ;)

[09:51] <frettled> heh

[09:52] <mathw> Perl 6 the language is distinct from Perl 6 as you can currently run it, and I'm interested in why people might dislike the language.

[09:52] <frettled> I recall that at NPW in 2006, there was something about pugs, but it wasn't terribly interesting.

[09:52] <frettled> Rakudo and ng, however, give me positive vibes.

[09:52] <Su-Shee> because it's typing hell on a non english keyboard. because the operator zoo is hell of confusing. for starters. 

[09:53] <Tene> Su-Shee: can you explain non-english keyboard problems with Perl 6?

[09:53] <moritz_> Su-Shee++ # talking turkey  (if I my trust my dictionary)

[09:53] <mathw> The operator zoo?

[09:53] <Su-Shee> moritz_: sounds christmassy :)

[09:54] <moritz_> Su-Shee: american englisch for "Tacheles"

[09:54] <frettled> mathw: Well, as I said, the significant whitespace thingy is annoying.  There are other things in P6 which are similar enough to other languages on the surface, but which surprise you when you dig into them.  The specification is unfinished, and it keeps changing.  It's a language for theorists, not for programmers, since there is no implementation to test it on.  Etc.

[09:54] <Su-Shee> Tene: I already hated the sigils anyway and I have small hands, I have to grab keys like @ % $ for example with annoying finger acrobatics. 

[09:55] <frettled> And yes, it's a bother on a non-english keyboard, but Perl 5 isn't much better there.

[09:55] <Su-Shee> which is why I would prefer languages with very few special chars. 

[09:55] <mathw> An unfinished spec and a lack of implementation are not objections to the actual language, they're reasons not to use it yet.

[09:56] <frettled> mathw: Yes, actually they are.

[09:56] <Su-Shee> {} plainly sucks on a german keyboard. 

[09:56] <frettled> mathw: The unfinished spec most definitely is an objection to the actual language.

[09:56] <mathw> Su-Shee: is Python more popular in Germany then?

[09:56] <frettled> mathw: The lack of an implementation makes it an _impractical_ language.

[09:56] <Su-Shee> mathw: perl isn't popular anymore at all, most folks switched to ruby, python, java, php. there's a functional fashion wave, though.

[09:58] <mathw> Functional programming is an eminently sane way to think about certain kinds of system

[09:58] <mathw> Despite what Guido might think

[09:58] <Su-Shee> anyway. I have my reasons why I like both Perls, but there's many hurdles Perl 6 has yet to take. 

[09:58] <Su-Shee> Guido?

[09:58] <frettled> Yep.

[09:59] <mathw> Guido, the Python man

[09:59] <Su-Shee> ah, that guido. 

[09:59] <Su-Shee> I don't care, I know some python, but I don't like it. it's not sexy even though it's great to type.

[09:59] <mathw> There was some scuffle over getting rid of a load of functional constructs from the core, and an ongoing thing about tailcall optimisation

[09:59] <mathw> Python is... not nice

[09:59] <frettled> I like Perl 6 for the learning experience.  I like it for fixing some of the annoyances with Perl 5.  And I like it for simplifying a bunch of things.  :)

[10:00] <mathw> It's got nice bits, but I find its inability to have strict variable declarations or parameter type annotations is a great weakness in readability and maintainability

[10:00] <mathw> oop

[10:00] * mathw -> boring meeting

[10:02] <Su-Shee> well I want write code and get projects out and use my favorite language in the office and earn money with it and do open source and like the language and the community. if I don't get that, I ignore the language, no matter how cool or clean or nice or xy-complete its design might be.  

[10:03] <masak> Su-Shee: I think that's one of the chief (valid) criticisms of Perl 5 people. Perl 5 puts food on their family, why should they care about Perl 6?

[10:04] <masak> Su-Shee: of course, people who think like that don't hang out on #perl6.

[10:04] <masak> well, unless they can see the other side of the coin, that is.

[10:04] *** am0c left
[10:06] <Su-Shee> I think, Perl (5) people need a certain dynamic in the development - they all like shiny, crazy projects and practical modules and such. and that's something Perl 6 isn't there yet.

[10:06] <frettled> Perl 5.10 and 5.12 is upsetting the stability of Perl!  ;)

[10:06] <frettled> s/is/are/

[10:07] <frettled> Darn sentence rewriting thingy in my brain forgets to fix such things.

[10:07] <masak> frettled: could be a precedence thing. :P

[10:10] <Su-Shee> and #perl6 has a very academic taste sometimes, even I have difficulties to actually see a future for us common folks. ;)

[10:10] <masak> Su-Shee: right. it's a bit like enduring the lowered living standards while people are redoing your kitchen. Perl 5 people say "why the heck would we want to do have breakfast at a table all wrapped in ugly plastic? our house is fine as it is, why should we switch to one which isn't even finished yet just for the promise of some great faraway future?"

[10:11] <masak> I think p6l has a very academic taste. #perl6 used to intimidate me, but I think I've grown used to the jargon here.

[10:12] *** payload left
[10:13] <Tene> Okay, my p6advent post for day 21 is scheduled.

[10:13] <Tene> If someone else could confirm that it's set to be posted at the right time, that would be great.

[10:14] <frettled> Tene++

[10:15] <Tene> I really have no taste for the christmas-themed flavor stuff, so anyone who thinks it needs some of that, feel free to add it.

[10:15] *** rfordinal left
[10:15] <Su-Shee> well, unless the futuere is actually the presence, Perl 6 is competing with many other great languages one could try who doesn't have the vast CPAN environment. 

[10:16] *** snearch joined
[10:17] *** payload joined
[10:17] <masak> give a Perl 6 implementation sufficient speed and sufficient access to Perl 5/CPAN, and it doesn't matter what subset of Perl 6 it implements. people will love it.

[10:18] <spinclad> Tene++  # as of the last pasted draft, anyway.  reads well.  no access to the pending posts, will worry about that another time.

[10:19] *** colomon left
[10:20] <Tene> masak: Given an appropriate viewing angle, you just described Perl 5. ;)

[10:21] <masak> Tene: I'm aware of that. :)

[10:21] *** vamped joined
[10:21] <masak> which is why I use Perl 5 quite a lot, too.

[10:21] <spinclad> masak: not all subsets make a whole I would love for its sixness...

[10:22] <masak> spinclad: true. I think I must have exaggerated.

[10:22] <masak> but the fact is that it doesn't take very much.

[10:22] <vamped> do I understand correctly, that perl6 will be backward compatible with perl5, and will run perl5 code?

[10:22] <masak> I remember using a very reduced subset 18 months ago and loving it.

[10:22] <masak> vamped: that is the idea, yes.

[10:22] <spinclad> but speed and access to fiveness are _big_ plusses

[10:23] <masak> vamped: not backward compatible, though. just able to bridge the language gap seamlessly.

[10:23] <frettled> vamped: as in-line Perl 5 code

[10:23] <vamped> wow. seems like that will be tough to pull off.

[10:24] <masak> it's not trivial.

[10:24] <frettled> It's a bit worse than in-line assembly in C. :)

[10:24] <frettled> I also suspect that this is not a _top_ priority.

[10:24] <BinGOs> if you can do that, you can leverage existing CPAN assuming you have a suitable supporting toolchain for installation etc.

[10:28] * spinclad to bed &  ~~

[10:30] <RichiH> hmm, i just had an idea.. how about an option that can be set which enables verbose signal handling? i.e., by default, it would say something like 'Caught SIGTERM, exiting' or 'Caught SIGHUP, doing nothing'.

[10:30] *** JimmyZ left
[10:31] * Tene sleep

[10:31] <masak> RichiH: sounds like a good job for a module.

[10:31] <RichiH> masak: or that. though i am not sure how to access that info properly

[10:31] <RichiH> might be a weekend project if someone gives me a hint or two :)

[10:32] <masak> S17 mentions signals, but is admittedly underspec'd.

[10:33] <masak> RichiH: don't want to discourage you, but I fear it might be too early. Rakudo doesn't do signals yet; nor does any other implementation I know of.

[10:33] <RichiH> masak: heh, that might be a bit of a showstopper

[10:33] <RichiH> where should i put this idea so it does not get lost?

[10:33] <RichiH> other than my ever-growing todo list?

[10:34] <Su-Shee> RichiH: on the other todolist. ;)

[10:36] <RichiH> Su-Shee: but where is it?

[10:38] <Su-Shee> RichiH: it's logged now. 

[10:38] <RichiH> Su-Shee: link?

[10:38] <RichiH> or do you mean 'in irc log'?

[10:38] <RichiH> which is pretty much useless

[10:39] <Su-Shee> (maybe one of the bots should recognize "idea" commands which are written to some list available on the web.."

[10:39] <Su-Shee> RichiH: yes, there's an extensive irc log available.

[10:40] <RichiH> Su-Shee: maybe a 'proposed feature' list is a tad more useful

[10:40] <Su-Shee> I don't care how it's called :) 

[10:41] <Su-Shee> proposed features sounds like "someone should do it" - ideas are "I'll do it when I have component xy available" :)

[10:41] <wayland76> RichiH: Maybe you could add it to your "list of things to do someday" :)

[10:42] <RichiH> wayland76: 11:33:47 < RichiH> other than my ever-growing todo list?

[10:43] <RichiH> i actually _do_ plan to pursue this, but a way to say 'hey, if you get around to implement signal handling, please give me a poke because i want to implement a proper module for handling it comfortably with perl6' would be nice

[10:43] <RichiH> as, realistically speaking, i will not know of that fact within less than a month or six

[10:43] *** iblechbot_ joined
[10:44] *** iblechbot left
[10:44] <wayland76> RichiH: I'd say make a note to check back in about a year.  S17 is getting no love at the moment, and until it does, it won't be happening

[10:45] <RichiH> wayland76: so it will be ready for christmas?

[10:45] <RichiH> weee!

[10:45] <RichiH> :p

[10:46] <wayland76> That's the general idea :)

[10:56] *** vamped left
[10:57] *** Gothmog_ left
[10:57] *** Gothmog_ joined
[11:01] <frettled> :)

[11:05] *** agentzh left
[11:09] *** iblechbot_ left
[11:13] *** payload left
[11:14] *** payload joined
[11:16] <masak> hah -- RT moves so slowly that the spec overtakes it sometimes. :)

[11:16] <masak> has anyone ever figured out why RT ticket updates are so slow in reaching p6c?

[11:19] <jnthn> morning

[11:19] <phenny> jnthn: 03:28Z <colomon> tell jnthn Somehow all the code formatting had disappeared from your post.  I just did my best to get it back, but you might want to double-check it to make sure I got it more or less the way you would like it.

[11:19] <jnthn> wtf.

[11:20] <jnthn> phenny: tell colomon Thanks for clearing that up, looks good. :-)

[11:20] <phenny> jnthn: I'll pass that on when colomon is around.

[11:20] <jnthn> thanks, phenny 

[11:20] *** pdcawley joined
[11:20] <masak> jnthn: I didn't point it out at the time, but when reviewing the post I saw that you had used <code>...</code> around the code snippets. might have been related to that.

[11:21] <masak> unlike <pre />, <code /> is free-form just like normal HTML, so newlines and many spaces all get collapsed down to one space in rendering.

[11:21] <moritz_> on perlmonks <code> preserves whitespaces

[11:21] <moritz_> which adds to confusion

[11:22] <jnthn> masak: oh, hmm

[11:22] <jnthn> it looked fine in the preview, which is all the more odd.

[11:22] <jnthn> Anyway, thanks for fixes and question ansewrs.

[11:23] <jnthn> masak: Your reply on precedence isn't quite right - we are parsing it as a trait mod there.

[11:23] <masak> oh.

[11:23] <masak> please feel free to correct me in the comments.

[11:23] <jnthn> the does in $x does Foo; (mix-in) and the does in class Foo does Bar { } are parsed differently.

[11:23] <jnthn> First is an operator, second is trait.

[11:23] <jnthn> Will post :-)

[11:24] <masak> jnthn: but how would `does A, B` get parsed?

[11:27] <masak> lunch &

[11:27] *** masak left
[11:28] *** IllvilJa joined
[11:28] <moritz_> phenny: tell masak `does` is tighter than comma, so that `my @a = 1 does False, 0 does True` DWYM

[11:28] <phenny> moritz_: I'll pass that on when masak is around.

[11:28] *** rodi joined
[11:33] *** Baggio_ joined
[11:36] <jnthn> std: role A { }; role B { }; class C does A, B { }

[11:36] <p6eval> std 29372: [31m===[0mSORRY![31m===[0m␤Unable to parse class definition at /tmp/C7MPpi8XBb line 1:␤------> [32mrole A { }; role B { }; class C does A[33m⏏[31m, B { }[0m␤    expecting any of:␤  trait␤  whitespace␤FAILED 00:01 106m␤

[11:36] <jnthn> phenny: tell masak it doens't get parsed at the moment :)

[11:36] <phenny> jnthn: I'll pass that on when masak is around.

[11:40] *** colomon joined
[11:45] <jnthn> ooh! new laptop has been shipped!

[11:47] *** snearch left
[11:52] *** payload left
[12:13] *** colomon left
[12:14] *** colomon joined
[12:25] *** colomon left
[12:26] *** colomon joined
[12:30] <moritz_> it will arrive just after you leave

[12:30] * moritz_ has just handed in his diploma thesis, and dances with joy

[12:30] <moritz_> it's a bit hard to type while dancing

[12:30] <wayland76> congrats! :)

[12:30] <moritz_> thanks

[12:30] <wayland76> have to alternate then 

[12:31] <wayland76> Does that mean that you'll suddenly not have time to do P6 stuff any more?

[12:31] <moritz_> it means that I'll suddenly have more time to do P6 stuff, at least until I find a job :-)

[12:32] <wayland76> ...but you should be spending all that time on job searching :)

[12:33] <Su-Shee> moritz_: no oral exam?

[12:34] <moritz_> Su-Shee: done them already

[12:34] <Su-Shee> moritz_: then we made diplom the same day. :) it's nice that short before christmas.

[12:37] <moritz_> Su-Shee: this year? :-)

[12:38] <frettled> moritz_: oh, congratulations, this is good news!

[12:40] *** pnu joined
[12:41] <Su-Shee> moritz_: haha, not even this decade :)

[12:42] <jnthn> moritz_: Congrats! :-)

[12:43] <moritz_> \o/

[12:49] *** pmurias joined
[12:51] *** meneldor joined
[12:51] *** JimmyZ joined
[13:07] * jnthn is happy that his current post attracted some more discussion than his pervious one. :-)

[13:08] <jnthn> Some replies later...lunch!

[13:11] *** plainhao joined
[13:15] <takadonet> morning all

[13:15] *** JimmyZ left
[13:16] *** JimmyZ joined
[13:19] <colomon> moritz_: \o/

[13:19] <phenny> colomon: 11:20Z <jnthn> tell colomon Thanks for clearing that up, looks good. :-)

[13:20] <colomon> jnthn: I wonder how it happened?  The code samples looked great in your draft...

[13:22] *** Wolfman2000 left
[13:24] <frettled> colomon: <code>…</code> instead of using <pre>…</pre>

[13:24] <frettled> (or so masak suggested)

[13:25] <colomon> ah.  definitely was <code>...</code>.  I switched them to [sourcecode][/sourcecode] and then re-indented.

[13:25] <frettled> For my blog on blogspot, I use <pre>…</pre> for greater control.

[13:25] <frettled> I always edit in source mode, though.

[13:26] *** cosimo joined
[13:33] *** ssm left
[13:33] *** parduncia left
[13:33] *** constant left
[13:34] *** constant joined
[13:34] *** ssm joined
[13:34] *** parduncia joined
[13:37] *** hanekomu joined
[13:37] *** masak joined
[13:37] <masak> moritz_: yes, but...

[13:37] <phenny> masak: 11:28Z <moritz_> tell masak `does` is tighter than comma, so that `my @a = 1 does False, 0 does True` DWYM

[13:37] <phenny> masak: 11:36Z <jnthn> tell masak it doens't get parsed at the moment :)

[13:38] <masak> moritz_: ...that's what I answered in the comment, and jnthn said it wasn't applicable because the 'does' in the class decl isn't an operator.

[13:42] <jnthn> masak: I repliedto your post.

[13:42] <masak> jnthn: looks good. thanks.

[13:44] <masak> I like the other answer even better. mostly because it's a slightly provocative question. :)

[13:44] <masak> we need that. all this advent stuff has made outsiders too nice to us. :P

[13:45] *** ssm left
[13:45] *** parduncia left
[13:45] *** constant left
[13:45] <jnthn> masak: It's a fair enough quesiton. :-)

[13:45] <masak> oh, definitely.

[13:46] <jnthn> The bigger innovation is in the composition mechanism, whereas I think the asker was thinking more of the parametric part.

[13:46] <masak> it was the combination of a knowledgeable question and the 'but isn't this just...' tone that I liked. :)

[13:46] <jnthn> "but isn't that just..." is often a good question to ask anyway.

[13:46] *** constant joined
[13:46] *** ssm joined
[13:46] *** parduncia joined
[13:46] <masak> yes.

[13:46] <jnthn> I often (at lesat mentally) ask it when I see new stuff.

[13:47] <jnthn> OK, @house-chore for a bit...family are coming back tomorrow morning!

[13:47] <masak> I think there's a class of people who prefer to learn that way. I'm one of them, too.

[13:48] *** abra joined
[13:48] *** ssm left
[13:48] *** parduncia left
[13:48] *** constant left
[13:48] *** constant joined
[13:48] *** ssm joined
[13:48] *** parduncia joined
[13:49] *** iblechbot joined
[13:50] *** t4n4be joined
[13:52] <wayland76> Goodnight all :)

[13:52] *** orafu left
[13:53] *** orafu joined
[13:54] <JimmyZ> goooooood evening.

[14:00] *** rgrau left
[14:01] <masak> moritz_++ # building parrot branches with Rakudo and sending emails when they fail

[14:01] <masak> that way, I won't have to be the one to discover the build fail. :)

[14:06] *** Guest81964 left
[14:07] *** colomon_ joined
[14:07] *** colomon left
[14:07] *** colomon_ is now known as colomon

[14:08] <moritz_> hey

[14:08] <moritz_> I just had a "great" idea

[14:08] <moritz_> I could couple the IRC logs with karma tracking

[14:09] <moritz_> i can haz 2.6M lines of IRC logs

[14:09] <meneldor> Hello all, what i need to be able to test perl6 on my WinXP without Administrative rights (i cannot install anything on my pc) ?

[14:10] <moritz_> meneldor: I'm not a windows user, so I have no idea what works...

[14:10] <moritz_> meneldor: but maybe the packages from http://sourceforge.net/projects/parrotwin32/ can be installed without admin rights

[14:11] <moritz_> meneldor: or if you already have a compiler and perl installed, you can compile rakudo from source

[14:11] <meneldor> im not windows user too but right now im on guest Win OS so i've got some limitations :)

[14:11] <[particle]> strawberry perl is a compiler and perl

[14:11] <masak> PerlJam: did you follow the docs/release_guide.pod when you released the book last month?

[14:11] * PerlJam would go with strawberry perl

[14:12] <PerlJam> masak: pretty sure I did.  why?

[14:12] *** gabiruh joined
[14:12] <masak> PerlJam: well, I was curious about that months announcement...

[14:12] <[particle]> download and install strawberry perl, then download rakudo and build from source

[14:13] <masak> PerlJam: I find it here http://rakudo.org/node/60 but not in the repo itself.

[14:13] <PerlJam> doh!  I just just checked my local repo.  I never committed it.

[14:13] <meneldor> tnx i will try parrotwin32

[14:14] <masak> PerlJam: I'll add that step to the release guide. :)

[14:15] <PerlJam> committed and pushed

[14:15] <masak> PerlJam++

[14:15] <meneldor> dammit :) it wants to write to the registry and i dont have permissions 

[14:16] <masak> meneldor: I only know one Windows Rakudo user, and that's jnthn. pretty sure he has root, though. :)

[14:17] <meneldor> if i was at home i could install it on my ubuntu but right now....

[14:17] <jnthn> I also tend to build from source.

[14:17] <masak> :)

[14:17] <jnthn> Which you can do without admin rights if the right tools are already installed.

[14:18] <jnthn> Which is probably the sticking point. :-(

[14:18] <pmichaud> good morning, #perl6

[14:18] <dalek> book: 680b5b8 | duff++ | docs/announce/2009-11:

[14:18] <dalek> book: belated checkin of Nov release announcements

[14:18] <dalek> book: review: http://github.com/perl6/book/commit/680b5b89cd66338b69c6df96c5e140e510a54993

[14:18] <colomon> o/

[14:18] <dalek> book: a6ee18a | duff++ | src/preface.pod:

[14:18] <jnthn> morning, pmichaud 

[14:18] <dalek> book: Merge branch 'master' of [email@hidden.address]
[14:18] <dalek> book: review: http://github.com/perl6/book/commit/a6ee18ac0f070d7b595ac8784311106ab62ce7f6

[14:19] <masak> mornin', pm.

[14:19] <meneldor> hmm rakudo has been installed successfuly in My documents, but PATH is not set

[14:20] <colomon> Tene: I'd add another word or two about .ast where you introduce it -- I mean, I just figured out how it works (I think), but it took me a few reads to get there.

[14:20] *** patspam joined
[14:22] <pmichaud> "<ws> is a builtin regex, like <alpha>, <digit>, and friends, that matches whitespace."    <-- this phrasing always bugs me a little

[14:23] <PerlJam> heh, I was just reading that very bit

[14:23] <masak> it's wrong.

[14:24] <pmichaud> "postfix:<>"  and "postfix:[]"  are also a bit on the wrongish side.  I'd eliminate the colons.

[14:25] *** rfordinal joined
[14:25] <masak> ...and replace them with spaces...

[14:25] <pmichaud> yes

[14:25] <pmichaud> thanks

[14:25] <pmichaud> (I meant that but didn't say it)

[14:26] <masak> :)

[14:26] <meneldor> what means: error:imcc:syntax error, unexpected IDENTIFIER, expecting $end ('my')

[14:26] <pmichaud> it also shouldn't be necessary to instantiate an actions object

[14:27] <moritz_> meneldor: what did you do to get that error message?

[14:27] <pmichaud> Tene++   # *excellent* explanation of why .comb is better than .split

[14:28] * PerlJam wishes those {*} weren't there

[14:28] <pmichaud> yeah, this is a case where the ng branch would've been a lot more useful

[14:28] <PerlJam> yep

[14:29] <pmichaud> sorry about that, folks :-|

[14:29] <meneldor> path\to\parrot.exe path\to\perl6_test_code.pl

[14:29] <PerlJam> meneldor: show the code :)

[14:29] <jnthn> meneldor: Ah, that's why. :-)

[14:29] <jnthn> meneldor: You need to run perl6.exe 

[14:30] <jnthn> Not parrot.exe

[14:30] <meneldor> ah i see :)

[14:30] <dalek> book: c40a1dd | masak++ | docs/release-guide.pod:

[14:30] <dalek> book: [docs/release-guide.pod] instructions to push announcement

[14:30] <dalek> book: review: http://github.com/perl6/book/commit/c40a1ddf95b7f0c7c158b762abac59208ad7ef2d

[14:30] <meneldor> but what parrot.exe does then?

[14:30] <jnthn> Parrot expects a Parrot assembly file or bytecode file.

[14:30] <meneldor> tnx

[14:31] <PerlJam> meneldor: Parrot is the underlying VM that Rakudo runs upon.  (still, show us your perl 6 code :)

[14:31] * PerlJam is not multi-tasking very well this morning

[14:31] *** payload joined
[14:31] <meneldor> im a bit confused with all these words rakudo, parrot, pugs etc :)

[14:31] <meneldor> im not sure what to use to be able to test perl 6 code

[14:32] <PerlJam> Rakudo is an implementation of Perl 6.

[14:32] <PerlJam> Rakudo executes on top of Parrot

[14:32] <masak> meneldor++ # confused but persistent!

[14:32] <PerlJam> pugs is an obsolete, unmaintained implementation of Perl 6 that uses Haskell instead of Parrot

[14:32] <meneldor> now im more confused :D

[14:33] <moritz_> meneldor: I forgot to mention, you also need the perl6 (or rakudo) addon from the parrotwin32 page

[14:33] <moritz_> setup-parrot-1.9.0-rakudo-24.exe

[14:33] <meneldor> where is the old #!/usr/bin/perl :D

[14:33] <PerlJam> meneldor: get used to it! I always feel confused myself.  I  think it's a natural state on #perl6  :)

[14:33] <meneldor> ok tnx moritz ill try it

[14:33] <moritz_> and then there'll be a perl6.exe 

[14:34] <moritz_> which you can use to run your Perl 6 programs

[14:34] <meneldor> im perl5 fan from 7 years but i did not try perl 6

[14:34] <[particle]> we forgive you.

[14:34] <meneldor> :D tnx for that

[14:36] *** mikehh left
[14:36] *** mikehh joined
[14:41] *** t4n4be left
[14:42] <dalek> book: 69a026a | masak++ | docs/announce/2009-12:

[14:42] <dalek> book: [docs/announce/2009-12] created announcement

[14:42] <dalek> book: review: http://github.com/perl6/book/commit/69a026aa8f8eb46708398e4dc1efa807c3ad3b20

[14:45] *** rfordinal left
[14:46] <meneldor> setup-parrot-1.9.0-rakudo-24.exe wants admin right to be installed :(

[14:47] <moritz_> :(

[14:47] <meneldor> ok ill install it on my ubuntu later

[14:47] *** Chillance left
[14:47] <meneldor> thanks anyway moritz_ 

[14:47] <PerlJam> meneldor++ tenacity is an excellent trait.

[14:48] * PerlJam has discovered that Hershey's dark chocolate goes quite well with Dr Pepper

[14:49] *** rgrau joined
[14:52] *** anonperler joined
[14:52] <jnthn> multi trait_mod:<tenacity>($amount) { ... }

[14:54] <eiro> cd

[14:54] <eiro> sorry

[14:55] <anonperler> Hi. Just wanted to say thanks for making Rakudo self contained and easy to set up. Just built it using the instructions on day 1 of the advent calendar, and even after `make install` the whole thing is still nicely contained in its own `rakudo` directory.

[14:55] <anonperler> Makes upgrading later on very easy (that is, `rm -fr rakudo` and then just download and build again)3.

[14:55] <pmichaud> anonperler: you're welcome :-)

[14:55] <PerlJam> anonperler: glad you like it.

[14:55] <pmichaud> anonperler: glad to hear it worked out for you

[14:55] <moritz_> anonperler: thanks for telling us! Usually people only come here when they have problems with the build :-)

[14:56] <BinGOs> shame rakudo ate all my memory when I tried to build it

[14:56] <anonperler> You're welcome. Great stuff!

[14:56] <PerlJam> BinGOs: on feather?

[14:56] <BinGOs> On my NetBSD 3.1 box.

[14:57] *** anonperler left
[14:57] <BinGOs> rather parrot tried to take all my system memory

[14:57] *** drbean joined
[14:58] <BinGOs> Hostname: canker.bingosnet.co.uk - OS: NetBSD 3.1/i386 - CPU: 2 x Intel Pentium III (686-class), 897.32 MHz, id 0x68a - Processes: 53 - Uptime: 376d 2h 39m - Load Average: 0.24 - Memory Usage: 66.60MB/255.00MB (26.12%) - Disk Usage: 22.88GB/109.56GB (20.89%)

[14:58] <pmichaud> 256MB ?

[14:58] <BinGOs> ( Only one processor incidently ).

[14:58] <BinGOs> Yes, 256MB RAM

[14:59] <pmichaud> yeah, that's a little on the smallish side for building Rakudo at the moment.

[14:59] <BinGOs> oh meh.

[14:59] <BinGOs> I build blead on here all the time. but meh.

[14:59] <PerlJam> Has anyone ever figured out what the memory requirements are t obuild rakudo?

[15:00] <pmichaud> PerlJam: not yet

[15:00] <BinGOs> Definitely more than 256MB then >:)

[15:00] <pmichaud> I think 512MB is generally enough

[15:00] <BinGOs> Well ....

[15:00] <BinGOs> I tried on my Ubuntu box as well ...

[15:00] <PerlJam> pmichaud: maybe.  maybe not.  I'm not so sure.

[15:00] <BinGOs> seemed to kill that as well ... but I am running vmware server on there as well.

[15:00] <pmichaud> BinGOs: what step eats up all of the memory?

[15:01] <BinGOs> after parrot is built, running 'make', something to do with a pmc?

[15:02] <pmichaud> ...with a pmc?  that would be odd, normally those are pretty lightweight.

[15:02] <pmichaud> I would've expected it to eat up all of the memory when compling the setting.

[15:02] <BinGOs> actually, during the perl6.pir stage I think

[15:02] *** payload left
[15:02] <pmichaud> that also is supposed to be light-ish

[15:03] <BinGOs> I am not running it again to find out exactly I'm afraid.

[15:03] <pmichaud> no problem, I can set up a vm to try it out :)

[15:04] <BinGOs> I do have a lot of stuff going on on this box, database server, various bots, hourly rsyncs of CPAN, etc.

[15:05] * BinGOs goes back to lurking.

[15:06] <frettled> BinGOs: You have my permission to upgrade to a post-2000 computer.  ;)

[15:07] <BinGOs> Oh hilarious.

[15:08] <BinGOs> This little box was a). free b). quiet enough that I can have it on all the time without annoying the family.

[15:09] *** drbean_ left
[15:09] <BinGOs> the other little box has only 128MB of RAM but handles all my email server needs.

[15:09] <PerlJam> quiet boxes should never be underestimated.

[15:10] <PerlJam> I used to have a little linux server with a fan that occasionally rattled.  It kept waking us up at night.  

[15:11] *** Tene left
[15:12] *** Chillance joined
[15:12] *** Tene joined
[15:16] *** ash___ joined
[15:23] *** rfordinal joined
[15:24] *** mj41 left
[15:24] <ash___> does anyone else get an error when they run rakudo ng branch with --trace=1  ?

[15:24] <masak> new, fresh book release: http://rakudo.org/node/62 # moritz_++

[15:25] <moritz_> masak++ for doing actual release

[15:25] <ash___> masak++ moritz_++ *adds to my to read list*

[15:26] <mathw> everyone++

[15:27] <masak> nobody--

[15:27] <ash___> hmmm rakudo ng with --trace=3 is very random... it works one time, then bus error, then seg fault, then bus error, etc. thats odd

[15:27] <masak> pmichaud: I changed the ticket to succeed/proceed, but I forgot to cc p6c.

[15:28] <pmichaud> masak: ah.

[15:28] <masak> s/changed/already changed/

[15:28] <pmichaud> yeah, I just went from the mailing list.

[15:28] <pmichaud> anyway, masak++

[15:29] <JimmyZ> ng: (1..999).grep({$_ % 3 == 0}).say

[15:29] <p6eval> ng b9eec4: Method 'grep' not found for invocant of class 'Range'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[15:29] <JimmyZ> rakudo:(1..999).grep({$_ % 3 == 0}).say

[15:29] *** rfordinal left
[15:30] <PerlJam> ng still doesn't do ranges, does it?

[15:30] <JimmyZ> so slow!

[15:30] <colomon> ash___: rakudo ng is like that without trace at the moment, too.  I've got S32-lists/end.t 1/3 working here -- except that's 100% working 1/3 of the time, and crashing during the second test the other 2/3rds of the time.

[15:30] <colomon> PerlJam: no real ranges.

[15:31] <frettled> BinGOs: There's nothing wrong with free hardware.  If you'd been living in Norway, I'd have a _bunch_ of old hardware (P4 and newer) that you could get for free, even some dual Xeon thingies.

[15:31] <colomon> PerlJam: series operator works for N1 ... N2

[15:31] <masak> JimmyZ: I believe you need a space after 'rakudo:'

[15:32] *** mj41 joined
[15:32] <JimmyZ> rakudo:(1..999).grep({$_ % 3 == 0}).say # why is it so slow?

[15:32] <JimmyZ> real	0m7.866s

[15:33] *** rfordinal3643 joined
[15:33] <colomon> ng: (1...999).grep({$_ % 3 == 0}).say

[15:33] <p6eval> ng b9eec4:  ( no output )

[15:33] <JimmyZ> rakudo: (1..999).grep({$_ % 3 == 0}).say # why is it so slow?

[15:33] <p6eval> rakudo 7f1c3f:  ( no output )

[15:33] <colomon> ng: (1...9).grep({$_ % 3 == 0}).say

[15:33] <p6eval> ng b9eec4: Method 'grep' not found for invocant of class 'Array'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[15:33] *** FalseVinylShrub joined
[15:34] *** frettled sets mode: +oo colomon masak

[15:34] <colomon> yeah, that's what I thought....

[15:34] <diakopter> rakudo: (1..9).grep({$_ % 3 == 0}).say

[15:34] <p6eval> rakudo 7f1c3f: 369␤

[15:34] <diakopter> rakudo: (1..29).grep({$_ % 3 == 0}).say

[15:34] <p6eval> rakudo 7f1c3f: 369121518212427␤

[15:34] <diakopter> rakudo: (1..59).grep({$_ % 3 == 0}).say

[15:34] <p6eval> rakudo 7f1c3f: 36912151821242730333639424548515457␤

[15:34] <diakopter> rakudo: (1..99).grep({$_ % 3 == 0}).say

[15:35] <p6eval> rakudo 7f1c3f: 369121518212427303336394245485154576063666972757881848790939699␤

[15:35] <JimmyZ> rakudo: ([+] (1..999).grep({$_ % 3 == 0})).say

[15:35] <p6eval> rakudo 7f1c3f:  ( no output )

[15:35] *** chromatic joined
[15:35] <diakopter> timed out

[15:35] <diakopter> rakudo: (1..199).grep({$_ % 3 == 0}).say

[15:35] *** frettled sets mode: +o diakopter

[15:35] <p6eval> rakudo 7f1c3f: 369121518212427303336394245485154576063666972757881848790939699102105108111114117120123126129132135138141144147150153156159162165168171174177180183186189192195198␤

[15:35] *** Patterner left
[15:35] <diakopter> rakudo: ([+] (1..299).grep({$_ % 3 == 0})).say

[15:36] <p6eval> rakudo 7f1c3f: 14850␤

[15:36] <diakopter> (didn't time out)

[15:36] <diakopter> rakudo: ([+] (1..499).grep({$_ % 3 == 0})).say

[15:36] <p6eval> rakudo 7f1c3f: 41583␤

[15:36] <diakopter> (didn't time out)

[15:36] <masak> who wants to do the January release of the book?

[15:36] <diakopter> rakudo: ([+] (1..699).grep({$_ % 3 == 0})).say

[15:36] <p6eval> rakudo 7f1c3f: 81783␤

[15:37] <JimmyZ> time ./perl6 -e '([+] (1..999).grep({$_ % 3 == 0})).say'

[15:37] <JimmyZ> real	0m29.449s

[15:37] <JimmyZ> user	0m19.497s

[15:37] <JimmyZ> sys	0m0.300s

[15:38] <pmichaud> JimmyZ: we know that there are some very slow parts of Parrot and Rakudo, especially when creating large numbers of objects

[15:38] <pmichaud> JimmyZ: these are being worked on

[15:38] <pmichaud> JimmyZ: if you want a more detailed answer as to why this particular case is so slow, I don't know the answer right now.

[15:39] <pmichaud> I suspect it has something to do with GC, though.

[15:39] <JimmyZ> pmichaud: I see.

[15:40] *** Psyche^ joined
[15:40] *** Psyche^ is now known as Patterner

[15:41] *** rfordinal3643 left
[15:41] <diakopter> masak: consider your question bumped :)

[15:42] <pmichaud> I'll do the jan book release, if nobody else takes it :)

[15:42] <masak> diakopter: which question?

[15:42] <ash___> isn't there a GC updating in parrot around the corner? 

[15:42] <diakopter> masak: lol

[15:42] <masak> ah, the release question. :)

[15:42] <moritz_> yes, but we don't know how cles the corner is :-)

[15:42] <pmichaud> ash___: I don't know about "around the corner".

[15:43] <pmichaud> Parrot recognizes that gc is currently a huge problem.  But I'm not sure who will step up to work on it.

[15:43] <chromatic> Why, whiteknight and myself, of course.

[15:43] <pmichaud> +1 to that!

[15:43] <moritz_> chromatic++ and whiteknight++ for that

[15:44] <diakopter> <<64 to that!

[15:45] <diakopter> chromatic: are you considering diving right into generational?

[15:45] <ash___> pmichaud: well, i have seen people talking about it in the mailing list is what i mean, its a known issue, see ( http://trac.parrot.org/parrot/wiki/DevelopmentPriorities ) since it specifies parrot 2.0, and i think thats the next scheduled release, but then again i could be mistaken on the a number of area's so take that with a grain of salt 

[15:46] <pmurias> do any perl6 benchmarks exist?

[15:47] <diakopter> dunno, but it would be nice if p6eval could report elapsed millis if you, say, appended a _b to the run target name

[15:47] <chromatic> I doubt we'll go straight to generational.  We have an idea which could double the speed of the current system; it's a sweep-free, garbage-friendly system.

[15:48] <pmichaud> ash___: that page was a working/planning document

[15:48] <chromatic> The idea is to find the most minimal change.

[15:49] * diakopter quips flippantly: minimal changes lead to, well, local maxima

[15:49] <ash___> pmichaud: see, i told you i am not a reliable source of whats going on in parrot (or perl) 

[15:49] <pmichaud> ash___: anyway, since the Parrot 2.0 release is 33 days away, I'm not sure there will be a new gc by 2.0 :)

[15:50] <pmurias> diakopter: the time for snippets in the evalbot would be dominated by compile/startup time

[15:50] <ash___> pmichaud: yeah, there is that whole time constraint on things, you never have enough it seems, in my experience anyway

[15:50] <pmichaud> ash___: yeah, I was going to do a study on that topic, but I ran out of time.

[15:51] <chromatic> If we can improve freeze/thaw and constant PBCs, startup time may improve measurably for 2.0.

[15:51] <pmichaud> chromatic: I tried switching exception handlers to constant PBCs in nqp-rx, and ran into serious FAIL

[15:51] <chromatic> There's a good possibility that a current Parrot branch can provide a 20% runtime improvement.

[15:51] <diakopter> pmurias: ok.. but baselines for the startup times could be subtracted away

[15:51] <chromatic> I'd like to see the bug report there (I don't remember if you filed one).

[15:52] <chromatic> We may have to evaluate the static-scope exception handling idea sooner.

[15:52] <pmichaud> The :immediate subs remained subs -- they didn't become ExceptionHandler arguments

[15:52] <diakopter> pmurias: (for comparing on the same impl)

[15:52] <pmichaud> s/arguments/objects

[15:52] <chromatic> Okay, I remember that ticket.  I'll work on that test.

[15:52] <pmichaud> I couldn't reproduce it down to a small test case, though.

[15:52] <pmichaud> the small test cases I came up with all worked fine.  

[15:53] <pmichaud> I'm going to go ahead an implement the caching strategy in past for exception handlers, that will give us a sizable win to begin with.  when constants in pbcs become available, it'll be a trivial change from there.

[15:53] *** jferrero joined
[15:53] <pmichaud> I'm about to file some messages noting that parrot-nqp doesn't run in the context_unify3 branch, nor can I build rakudo-ng nor nqp-rx

[15:54] <diakopter> pmurias: but including the startup/compile time is good for comparing across impl

[15:54] <moritz_> pmichaud: nor can I even install context_unify3

[15:54] <pmichaud> moritz_: hmm, that part seems to work for me.  What did you use as the prefix argument ?

[15:54] <pmichaud> I just discovered this morning that --prefix to Parrot's configure.pl requires a full path name

[15:55] <moritz_> pmichaud: --prefix=/home/moritz/rakudo/parrot_install/

[15:55] <pmichaud> hmmm

[15:55] <pmichaud> I dunno then.  'make install' worked for me once I got the arguments right.

[15:55] <pmichaud> (fsvo "right")

[15:55] <moritz_> pmichaud: I think it's actually a build problem

[15:56] <pmichaud> it could be.

[15:56] <moritz_> pmichaud: that was revealed during 'make install'

[15:56] <moritz_> pmichaud: I ususally run parallel builds, which makes it a bit harder to see if the build failed

[15:57] <chromatic> Coke had trouble with context_unify3.  I think it's a modest change to his PMCs.

[15:57] <pmichaud> well, since nqp-rx doesn't have custom pmcs, it must be something else happening there.

[15:58] <chromatic> Interesting.  We'll take a look.

[15:58] <jnthn> fwiw, once we do get to the point of being able to try building Rakudo on top of that branch, I expect there will be difficulties.

[15:58] <jnthn> Well

[15:58] <pmichaud> and I'm a bit concerned about how it will impact rakudo, because rakudo has a custom dispatcher

[15:58] <jnthn> there may be.

[15:58] <pmichaud> so it may be a bit more involved than partcl :)

[15:58] <jnthn> I fear we rely on contexts and call info being separate.

[15:58] *** abra left
[15:59] <jnthn> I brought this up when it was being discussed, and said I had no objects *provided* somebody from the Parrot team could work out how to patch Rakudo up to work with the changes.

[15:59] <pmichaud> jnthn: rely on the design having them separate, or just the implementation?

[15:59] <jnthn> pmichaud: I know that we, for example, rely on being able to do multiple invocations with the same callsig.

[16:00] <jnthn> I'm not sure how that will work out if contexts and callsigs are merged.

[16:01] <jnthn> It may or may not be a problem - I'm not familiar with what the branch has done.

[16:01] <pmichaud> me neither.

[16:01] <jnthn> Thus why I'd rather somebody who is write the patch.

[16:02] <chromatic> Multiple invocations with the same call sig, how does that look?

[16:04] <jnthn> chromatic: perl6multisub.pmc does it, iirc

[16:04] <jnthn> chromatic: checking...

[16:04] <jnthn> (will get you a line #)

[16:05] <jnthn> chromatic: in master, starting line 448

[16:05] <jnthn> In ng I think this code has changed relatively little.

[16:06] <ash___> ng: role A { }; say A.^methods; # is this a known issue? I can try to look into it more (although that seems like parrot stuff that i am not very familiar with)

[16:06] <p6eval> ng b9eec4: No such attribute 'parrotclass'␤current instr.: 'perl6;RoleHOW;methods' pc 4835 (src/metamodel/RoleHOW.pir:47)␤

[16:06] <jnthn> chromatic: It's largely similar.

[16:07] <jnthn> ash___: I suspect just a tad incomplete.

[16:07] <chromatic> Suppose you had a way both to clear a Context/Sig of its return values (returning them or gathering the returns) and a way to reuse a Context/Sig for a subsequent call.

[16:07] <chromatic> Would that suffice?

[16:07] *** JimmyZ left
[16:08] <jnthn> chromatic: I *think* that might be enough.

[16:09] <jnthn> chromatic: See the comment starting XXX for what I had in mind for a future change.

[16:09] <jnthn> But I don't think that'll be a problem either.

[16:09] <ash___> jnthn: classes work, so i figured it was something like

[16:10] <jnthn> ash___: Yeah, Parrot roles and Rakudo roles are having an ongoing divorce...

[16:10] *** nihiliad joined
[16:11] <jnthn> ash___: The only thing that the Parrot role PMC is really used for now is (1) storing the methods and (b) making punning work.

[16:14] <diakopter> chromatic: would that break non-tailcall recursive invocations?

[16:15] <chromatic> I'm not sure.

[16:15] <chromatic> We might have to enable cloning.

[16:15] <chromatic> (if it doesn't already work)

[16:16] <chromatic> back in a while

[16:17] <diakopter> (which would have the same (but less efficient) effect as keeping them (callsig/context) non-merged)

[16:23] *** gbacon joined
[16:23] *** rgrau left
[16:23] *** justatheory joined
[16:27] *** meneldor left
[16:30] *** FalseVinylShrub left
[16:34] *** colomon_ joined
[16:34] *** colomon left
[16:34] *** colomon_ is now known as colomon

[16:34] *** chromatic left
[16:36] <ash___> nobreak is now proceed? 

[16:36] <PerlJam> aye

[16:36] <PerlJam> break is now succeed.

[16:36] <masak> \o/

[16:36] <PerlJam> and I like it!

[16:37] <jnthn> nobreak I didn't like. I like succeed much more :-)

[16:37] <masak> who doesn't? you can't dislike 'succeed'! ;)

[16:37] <PerlJam> eliminates the break/continue confusion, make sense, and uses words of the same length with same suffix (for mnemonic help)

[16:37] <ash___> yeah, nobreak was confusing 

[16:38] <PerlJam> and having when block succeed is far more appealing than having them break  ;)

[16:38] *** jferrero left
[16:39] * masak is conspiring with mst again

[16:39] *** jferrero joined
[16:39] <mdxi> (they have the same *root*, not the same *suffix* :) )

[16:40] <PerlJam> whatever, I'm not a linguist, nor do I play one on IRC :)

[16:40] *** Baggio_ left
[16:41] <ash___> for try's is there a finally mechanism? 

[16:42] <masak> there's the LEAVE phaser.

[16:42] <jnthn> LEAVE iirc

[16:42] <jnthn> But you can use it in any block.

[16:42] <jnthn> Just as with CATCH.

[16:42] <[particle]> why isn't break now secede?

[16:42] <masak> concede, recede...

[16:42] <[particle]> or maybe that should be leave....

[16:43] <ash___> isn't there already a leave? 

[16:43] *** wlod joined
[16:43] <[particle]> aye. but maybe it should be called secede :)

[16:45] *** wlod left
[16:49] *** Tene left
[16:50] <ash___> i think succeed and proceed make sense, given $letter { when "A" {  say 'its an "A"'; proceed } when "Ã" { say "its also unicode"; proceed } };

[16:50] <ash___> proceed makes sense

[16:51] <moritz_> but "A" ne "Ã" :-)

[16:51] <ash___> well i never said it made sense 

[16:53] <moritz_> 17:50 < ash___> i think succeed and proceed make sense

[16:53] <moritz_> *SCNR*

[16:55] *** Tene joined
[16:56] <mdxi> do_the_next_chunk_too_i_reckon is kinda wordy, but hey, maybe dangerous things should be huffman coded that way :)

[16:56] <moritz_> maybe :-)

[17:04] <pmurias> who killed svnbot?

[17:05] <masak> some ardent committer, perhaps?

[17:06] * moritz_ can't remember which host it is supposed to run on

[17:06] <moritz_> feather3?

[17:06] <moritz_> does anyone remember its host mask?

[17:07] <diakopter> heh

[17:08] <diakopter> pugs_svn you mean?

[17:08] <pmurias> propably

[17:09] <diakopter> yes, feather3

[17:09] <diakopter> pugs_svn [n=SVNBot@feather3.perl6.nl] has joined #perl6

[17:11] *** pugs_svn joined
[17:12] *** pugs_svn left
[17:12] *** pugs_svn joined
[17:15] <diakopter> pugs_svn: owe high

[17:16] <pmichaud> k

[17:16] <pmichaud> ww

[17:16] * moritz_ mmanges too many bots on too many hosts with too low truck number

[17:17] *** colomon left
[17:17] <PerlJam> moritz_: you just need a family of bots to manage themselves

[17:17] <pmichaud> sounds like it could be a new sitcom

[17:17] <pmichaud> "The Bots!"

[17:18] <moritz_> PerlJam: no, I need more co-admins

[17:19] *** _jaldhar left
[17:19] <masak> pmichaud: "Join us next week for another episode of botty humour!"

[17:19] *** SmokeMachine joined
[17:20] <TimToady> you guys have bots in the belfrey

[17:20] * moritz_ wonders of botty humour involves autopunning

[17:20] <diakopter> our dingbots are dingy

[17:20] <pmichaud> <mommybot>  I don't know what to do.... lambdabot is always speaking out of turn!

[17:21] <pmichaud> <daddybot>  Yes, but at least lambdabot isn't as annoying as purl!

[17:21] <diakopter> ..and purl has Tourette's

[17:21] <Juerd> moritz_: If the truck number is low, at least document what's there and how to restart them

[17:21] <masak> <phenny>  Why does no-one ever notice what I'm doing? Because I'm quiet, that's why!

[17:22] <pmichaud> <hugme>  Anyone need a hug?

[17:22] <masak> *lol*

[17:22] <moritz_> hugme: hug phenny 

[17:22] * hugme hugs phenny

[17:22] <masak> :D

[17:22] <TimToady> phenny: hug hugme

[17:23] <moritz_> phenny: tell hugme hug me

[17:23] <phenny> moritz_: I'll pass that on when hugme is around.

[17:23] <moritz_> hugme: hug phenny 

[17:23] * hugme hugs phenny

[17:23] <phenny> hugme: 17:23Z <moritz_> tell hugme hug me

[17:23] <masak> almost...

[17:23] <moritz_> too bad it didn't recurse :-)

[17:23] <masak> that can be arranged...

[17:24] <PerlJam> TimToady++ for succeed/proceed.  that was an excellent change.

[17:24] <diakopter> phenny: tell phenny tell phenny tell phenny

[17:24] <phenny> Hey, I'm not as stupid as Monty you know!

[17:24] <PerlJam> TimToady: not so sure about "so"  though  :)

[17:24] <masak> PerlJam: ssh! it's better than 'true'!

[17:24] <PerlJam> It's *shorter* than 'true'

[17:25] <TimToady> I agree that it's so so...

[17:25] <diakopter> but not as short as !!

[17:25] <PerlJam> I'm not quite sure what criteria make it better

[17:25] <TimToady> the problem was the existence of true, not the absence of so

[17:25] <PerlJam> diakopter: eh?  'so' is shorter than '!!'

[17:25] <pmichaud> I was thinking perhaps we need "iznot" and "izso"

[17:25] <diakopter> std: so 3; !!3

[17:25] <p6eval> std 29373: ok 00:01 107m␤

[17:25] <pmichaud> "iznot!"  "izso!"

[17:26] <diakopter> PerlJam: shorter to type, ok, but longer on the screen

[17:26] <jnthn> std: so WHAT

[17:26] <p6eval> std 29373: ok 00:01 105m␤

[17:26] <PerlJam> diakopter: okay, I'll grant you that.

[17:27] <diakopter> what you want is an abbrev for 'whether'

[17:27] <PerlJam> diakopter: but the op still needs to be wordy to be a 'not' parallel

[17:27] <pmichaud> "really"

[17:27] <pmichaud> if really 3 + 4 ....

[17:28] <PerlJam> huffman defenestration.

[17:28] <pmichaud> :)

[17:28] <jnthn> if its 3 + 4 ...

[17:28] <pmichaud> there's always "NOWAI" and "WAI"

[17:28] <jnthn> uh, it's :-)

[17:28] <jnthn> Which we can have. ;-)

[17:29] <masak> 'truely', as in 'Im truely sorry for their lots'...

[17:29] <pmichaud> "truly" isn't too bad :)

[17:29] <pmichaud> if truly $a == 5 { ... }

[17:29] <diakopter> "verily"

[17:30] <masak> if truly $sorry { for $their.lots { ... } }

[17:30] <pmichaud> @their, probably

[17:30] <masak> oh, dang. :)

[17:30] <masak> if truly $sorry { for @their.lots { ... } }

[17:31] <PerlJam> I would think @lots would make more sense.

[17:31] <diakopter> "iff" kinda has the "whether" connotation

[17:31] <pmichaud> my @result = if truly .sorry for @their>>.lots;

[17:31] <PerlJam> diakopter: I like that.

[17:31] <PerlJam> diakopter: but it's not useful elsewhere.

[17:31] <dalek> rakudo/ng: dd78a40 | jnthn++ | src/builtins/ (2 files):

[17:31] <dalek> rakudo/ng: Code does Callable, List does Positional.

[17:31] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/dd78a409115a1b6cb0b4563bc50866ec6897bd94

[17:31] <dalek> rakudo/ng: 041178b | jnthn++ | src/ (2 files):

[17:31] <dalek> rakudo/ng: Couple of role related fixes.

[17:31] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/041178b7d05da416135deca98b2b528872ce0dd6

[17:31] <diakopter> (and "iff" also is the direct complement to "not")

[17:31] <dalek> rakudo/ng: 21558a9 | jnthn++ | src/Perl6/Compiler/Signature.pm:

[17:31] <pmichaud> "iff" sounds two-way-ish-for-me

[17:31] <dalek> rakudo/ng: Re-enable sigil type checks in parameter lists.

[17:32] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/21558a98b1c6a39231be0a72a28c709f3d7c6aa8

[17:32] <diakopter> well

[17:32] <diakopter> when used in a unary sense... like I said, 'kinda'

[17:32] <TimToady> iff is spelled ?& in Perl 6

[17:32] <jnthn> So...does ng do hashes yet...

[17:32] <arnsholt> iff is eq for logicians =)

[17:33] <pmichaud> my mind keeps wondering if there's a latin root or word here

[17:33] <PerlJam> forget latin ... what about other languages?  :)

[17:33] <zaslon> lolmasakhazblogged! masak++ 'The wish, the tuning fork, and the one true heir': http://use.perl.org/~masak/journal/40037?from=rss

[17:33] *** mubot left
[17:33] <diakopter> not vs. ver

[17:34] <diakopter> ver, for verily, verify

[17:34] <pmichaud> alas, "ver" tends to think "version"

[17:34] <arnsholt> I can't quite make out from the scrollback, but what are you looking for a word for?

[17:34] <PerlJam> or "fi"  for "fidelis"  ;>

[17:34] <pmichaud> arnsholt: replacement for "true"/"so"

[17:34] <pmichaud> i.e., the logical opposite of "not"

[17:35] <diakopter> arnsholt: trying to find a better word for the combination of "bikeshed" and "yakshave" and "elephant.ignore"

[17:35] <pugs_svn> r29374 | pmurias++ | [mildew-js] add --profile option to print out the time execution and 

[17:35] <pugs_svn> r29374 | loading the setting took

[17:35] <arnsholt> Well, truth in latin is veritas

[17:35] <PerlJam> yeah, I was going more for "spirit" than "letter"

[17:36] <pmichaud> and truth in government is Nil.  Or Mu.

[17:36] <arnsholt> PerlJam: Well, my vocabulary digs out letter before spirit

[17:36] <pmichaud> if vino ....

[17:36] <arnsholt> But the logical opposite of not just nothing, no?

[17:37] <pmichaud> arnsholt: we'd like a low-precedence form of  prefix:<?>

[17:37] <pmichaud> "not" is the low-precedence form of prefix:<!>

[17:37] <jnthn> mmm...vino :-)

[17:38] *** Chillance left
[17:38] <arnsholt> A right, now I see

[17:39] <Juerd> pmichaud: ita

[17:39] <arnsholt> Some kind of copula might be appropriate

[17:39] <Juerd> pmichaud: (latin)

[17:39] <arnsholt> "is" is taken I believe, but since someone mentioned Latin, "est" is short and means the same

[17:39] <PerlJam> Hmmm "ta" 

[17:40] <Juerd> arnsholt: "est" declares equivalence, not being so.

[17:40] <arnsholt> In a declarative sentence, yes

[17:40] <arnsholt> But boolean context is essentially question

[17:40] <arnsholt> "Is this expression true?"

[17:40] <Juerd> false est false.

[17:40] <pmichaud> arnsholt: the point is to be able to get a boolean value when not in a boolean context

[17:41] <Juerd> I'd see "est" as something inherently binary. For me, it doesn't work as some prefix thing (lowprec unary)

[17:41] <Juerd> ita $foo eq $bar works

[17:41] <arnsholt> True. My analogy is essentially from Prolog

[17:41] <Juerd> But I don't think it'll ring many bells.

[17:41] <arnsholt> Yeah, there's that

[17:41] *** mariuz left
[17:41] <pmichaud> "ton"

[17:42] <pmichaud> (not backwards :-)

[17:42] <Juerd> One positive thing about ita is that it is as long as not.

[17:42] <Juerd> pmichaud: Hmmmmm

[17:42] <masak> 'indeed'

[17:42] <pmichaud> "notnot"

[17:42] <arnsholt> ton might be the best suggestion yet

[17:42] <PerlJam> most of these "cute" ones will require far more explanation than should be warranted IMHO

[17:42] <PerlJam> ergo "so" is still the winner

[17:42] <Juerd> masak: indeed looks weird as a contrast to negation. if (not ...) { ... } ... if (indeed ...) { ... }

[17:42] <pmichaud> PerlJam: if you say so

[17:42] <PerlJam> IMHO again

[17:43] <arnsholt> Juerd: You wouldn't need it in a conditional though

[17:43] <Juerd> PerlJam: Agreed

[17:43] <masak> Juerd: also, you don't need parens. :)

[17:43] <arnsholt> The if forces boolean context

[17:43] <Juerd> arnsholt: Would for stress, as documentation

[17:43] <arnsholt> True

[17:43] <Juerd> Dutch has a word for this and it's used all the time.

[17:43] <arnsholt> What is it?

[17:43] <Juerd> It's hard to explain the value of having such a word :)

[17:43] <Juerd> "wel"

[17:43] <masak> 'akshually'

[17:44] <Juerd> It's the opposite of "niet" (not)

[17:44] <Juerd> http://forum.wordreference.com/showthread.php?t=148276

[17:44] <PerlJam> google translate doesn't think that :)

[17:45] <Juerd> "It is not blue" "Wel!" (Often as "welles!" or "jawel!")

[17:45] <Juerd> In English you wuold say "Yes it is"

[17:45] <Juerd> Or "But it is"

[17:45] <pmichaud> or "Is so!"

[17:45] <Juerd> Yes.

[17:45] <PerlJam> I've seen "jawel" before.

[17:45] <pmichaud> or "Is too!"

[17:46] <Juerd> But it's harder to explain how "wel" is used in the context of there not being context :)

[17:46] <Juerd> "I've decided. I will *wel* go to that party."

[17:46] <Juerd> "I will so go" would imply enthusiasm, I think.

[17:47] <Tene> 07:22 <@pmichaud> "<ws> is a builtin regex, like <alpha>, <digit>, and friends, that matches whitespace."    <-- this  phrasing always bugs me a little

[17:47] <PerlJam> "wel" seems to capture the emphasis nicely, but not "truthiness"   (but maybe I'm bent)

[17:47] <Tene> pmichaud: any recommendations on something better to day there?

[17:47] <Juerd> To express the same thing in English I think you'd say "I am going to that party", with "am" stressed.

[17:47] <pmichaud> I'd leave the <ws> out of the example entirely

[17:47] <Juerd> PerlJam: "not" doesn't capture falsiness.

[17:47] <pmichaud> just use \s*

[17:48] <PerlJam> Juerd: I guess you're right about that too

[17:49] <Juerd> I'd almost suggest "bool" but it'd look too much like typecasting. (Which it is...)

[17:49] <arnsholt> Or truth

[17:49] *** cdarroch joined
[17:50] <arnsholt> But truth is long

[17:50] <Juerd> "truth" is ugly

[17:50] <pmichaud> afk (kid pickup)

[17:50] <Juerd> my $foo = truth ...;

[17:50] <Juerd> if not ... { ... } ...; if truth ... { ... }

[17:50] <PerlJam> Juerd: and that's why american prefer beauty to truth  ;)

[17:51] <Juerd> truth wants the opposite "lie".

[17:51] <Juerd> if lie ... { ... } ...; if truth ... { ... }

[17:51] <Juerd> That looks better :)

[17:51] <arnsholt> Well, "lie" is the same length as "not" =)

[17:51] <Juerd> Yes, but we already had a not.

[17:52] <Juerd> I think we really shouldn't rename that one :)

[17:52] <arnsholt> Indeed

[17:52] <arnsholt> But I've got to pop out for a bit as well

[17:52] <PerlJam> maybe we should

[17:52] <PerlJam> if true ... { ... }   and  if untrue ... { ... }

[17:52] <PerlJam> :)

[17:52] <PerlJam> is has the right relative huffmanization  :)

[17:53] <TimToady> you forget why we killed true in the first place

[17:53] <PerlJam> No, I'm just twiddling knobs I haven't twiddled before in hopes that something useful will come out.

[17:54] <masak> if concede ... { ... }; if deny  ... { ... }

[17:54] * Juerd is happy with "so"

[17:54] <Juerd> It's as short as !! :)

[17:55] <Juerd> If you'd translate "wel" via Esperanto, you'd end up with "yes"

[17:56] <Juerd> "Mi ja faros tion" - "I will *yes* do that"

[17:56] <Juerd> Er, s/ja/jes/

[17:56] <frettled> My goodness, Perl 6 changed again while I blinked!  ;)

[17:56] <Juerd> Which is different from "Jes, mi faros tion" - "Yes, I will do that"

[17:56] <frettled> What about "so true" and "make it so"?

[17:57] <Juerd> frettled: It's just renaming fortunately :)

[17:57] <Juerd> No big operator shifting

[17:57] <frettled> Juerd: Yeah, but each change kills a baby COBOL programmer!  :D

[17:57] <Juerd> thus $foo == $bar

[17:59] <masak> just found this: http://www.perlmonks.org/?node_id=663566

[17:59] *** nihiliad left
[17:59] <masak> to what extent can today's Perl 6 be said to be statically parseable.

[18:00] <masak> I don't recognize any of the problems merlyn brings up.

[18:01] <TimToady> masak: it's statically parseable to the extent that STD does it.  :)

[18:01] <TimToady> since STD can't run BEGIN blocks

[18:01] <masak> I should have expected that answer. :)

[18:01] <masak> but what does not being able to run BEGIN blocks mean, in terms of not being able to statically parse Perl 6?

[18:01] <TimToady> but it does fail to parse 6 .t files currently, and some of those depend on dynamic code

[18:02] <masak> ok.

[18:02] <masak> is there some sense in which static parsing of Perl 6 is 'better' than static parsing of Perl 5?

[18:02] *** colomon joined
[18:02] <masak> I mean, apart from the greatly cleaned-up grammar.

[18:04] *** nihiliad joined
[18:04] <Tene> masak: also, you need to run BEGIN to get macros.

[18:05] <masak> hm, yes.

[18:05] <TimToady> some of the failures are also failure to recognize 'use v5;' which is arguably not statically parseable :)

[18:05] <TimToady> well, the 'use v5;' is statically parseable, but what comes after...

[18:06] <moritz_> is just as statically parseable as Perl 6

[18:06] <Tene> also some traits

[18:06] <Tene> I made the changes pmichaud recommended.  Did anybody else have changes that I didn't notice in the log?

[18:07] <TimToady> std: so quietly use v5;

[18:07] <p6eval> std 29374: ok 00:01 107m␤

[18:08] <PerlJam> Tene: I thought the section where you introduce the actions could use some more explanatory prose, but since it wasn't a strong feeling, I didn't mention it earlier.

[18:08] <colomon> Tene: I suggested a bit more explanation on .ast when it is introduced.

[18:08] <PerlJam> Tene: I only mention it now in case you want to "polish" something, that would be my vote.

[18:08] <colomon> (based totally on my own initial confusion reading that section.  :)

[18:09] <Tene> hmm.  My feeling there was that it was better to get into the example ASAP, and then discuss it more in review.

[18:09] <Tene> I'll definitely re-work that section, though.

[18:09] <Tene> thanks.

[18:10] <frettled> masak++ - excellent entry.

[18:10] <masak> thanks. mst++ too.

[18:11] <Tene> What did masak write where?

[18:11] <masak> http://use.perl.org/~masak/journal/40037

[18:12] <Tene> Yes, agreed.

[18:13] * Tene afk work

[18:13] <masak> Tene: did you consider replacing the instances of $_<something><something> with .<something><something>?

[18:13] <masak> it's slightly easier on the eye.

[18:14] <PerlJam> masak: I am reminded of how love isn't a zero-sum game.  The more you give, the more you create.  We lovers of Perl are spreading the love  :)    

[18:14] <Tene> I did.  I expected explicit $_ to be a bit easier to understand.  There's already a lof of new things in that post, so I tried to keep it down in a couple of ways.

[18:15] <PerlJam> masak: (the "rule the kingdom with twice as many resources" is what triggered that thought)

[18:15] <masak> PerlJam: yes, 'zero-sum game' was a term that came up in my discussion with mst today.

[18:15] <Tene> PerlJam: I very much agree, and I have some very strong opinions on exactly that topic.

[18:15] <masak> PerlJam: and that phrase was my re-wording of same. :)

[18:15] *** ChanServ sets mode: +o Tene

[18:15] <masak> Tene: fair enough. great post!

[18:16] <Tene> all the thanks should go to procrastination; I couldn't have done it without her.

[18:16] <PerlJam> Tene++

[18:16] <PerlJam> (and masak++ and mst++ for continuing the conversation between the two halves of the Perl family)

[18:17] <masak> heh. it's not like I have any choice. :P

[18:17] * Tene successfully surpressed the urge to discuss political topics; really afk driving to work now.

[18:19] * moritz_ just updated the Whatever post and scheduled it for tomorrow

[18:22] <colomon> \o/

[18:23] *** justatheory left
[18:25] <lisppaste3> colomon pasted "Benchmarking Mandelbrot" at http://paste.lisp.org/display/92324

[18:26] <mathw> masak++ # blog post, peacemaking, hugging

[18:26] <pmichaud> something bugs me about "save for a few CPAN modules in the Perl6:: namespace, nothing usable had trickled back into the Perl community from the Perl 6 crowd."

[18:26] <pmichaud> I don't think that's quite true, depending on the timeframes.

[18:27] *** supernovus joined
[18:27] <masak> pmichaud: hm, that's true.

[18:27] <pmichaud> The biggest example being, of course, Moose.

[18:27] *** mberends joined
[18:27] <masak> when I wrote that, I was thinking circa 2004.

[18:27] <pmichaud> but quite a few other ideas trickled back into Perl 5 from Perl 6. 

[18:28] <masak> mst wouldn't give an exact date for the birth of Modernlightennaissance Perl.

[18:29] <pmichaud> circa 2004 is fine, but it should probably be explicit.  did any of Perl Rennaissance, Modern Perl, or Enlightened Perl really begin in 2004, though?

[18:29] <masak> no.

[18:29] <masak> but the year is significant in that that was when I got interested in Perl 6, and mst had already lost hope.

[18:30] * masak adds 'circa 2004' to the post

[18:30] <pmurias> mberends: mildew doesn't need an old version of itself to compile it's setting

[18:30] *** crythias joined
[18:31] <mberends> pmurias: are you leaving the m0ld behind completely?

[18:31] <supernovus> has anyone has anyone reported that the 2009-12 release of the Perl 6 book is missing the new chapters that the blog post talks about? The Makefile hasn't been updated to include them.

[18:31] <pmichaud> speaking from a strictly personal perspective, the fork wasn't nearly as split or bifurcated as this post seems to make it.  But perhaps I'm a special case.

[18:32] <masak> supernovus: oh dear.

[18:32] <masak> supernovus: thanks for the heads-up.

[18:32] <pmichaud> I agree that to the vast majority of Perl 5 folks, Perl 6 was at best a dream, it certainly didn't have a significant positive impact on their reality

[18:32] <masak> moritz_: hm, that didn't occur to me at all :/

[18:32] <PerlJam> pmichaud: you're speaking in past tense.

[18:32] <colomon> pmichaud: My impression is that the "fork" has mostly occurred as Rakudo actually gets close to producing something?  

[18:32] <moritz_> masak: I didn't include it because I wanted to discuss some options first

[18:33] <pmurias> mberends: mildew is still using m0ld

[18:33] <moritz_> masak: but so far my attempts to discuss it haven't had any resonance

[18:33] <moritz_> masak: and then I forgot

[18:33] <masak> oh, ok.

[18:33] <pmurias> mberends: having trouble with getting cabal?

[18:33] <masak> let's leave it as it is, then.

[18:33] <masak> and include it in the next month's release.

[18:33] <pmichaud> PerlJam: yes, I am speaking in past tense, because the paragraph is "circa 2004"

[18:34] <colomon> That is to say, for a long time there Perl 6 was sort of Perl 5's wacky uncle with the crazy ideas, and Perl 5 took the better ideas and ignored everything else.

[18:34] <PerlJam> okay.

[18:34] <masak> pmichaud: the conflict grows with the strength of the Perl 6 community.

[18:34] <pmichaud> masak: that's a reasonable point

[18:34] <colomon> But with Perl 6 starting to look like it might actually produce results, suddenly it's a threat rather than a curiosity.

[18:34] <colomon> threat to the status quo, that is.

[18:34] <pmichaud> I'm just not sure I want to present history as being as bifurcated as this sounds.  it didn't seem that way to me.

[18:35] <PerlJam> colomon: Hmm.

[18:35] <pmichaud> but again, I'm a minority case.

[18:35] <pmichaud> because I'm well on the inside looking out

[18:35] <masak> pmichaud: I didn't see it that way until I started spending time with mst.

[18:35] <masak> there's a whole other world out there! :P

[18:36] <masak> they call themselves Perl 5 people, and their hats look funny.

[18:36] <pmichaud> well, if the "fork" views makes all of this more palatable for the p5 side of things, I'm willing to go along wit hthat

[18:36] <pmichaud> *view

[18:36] <masak> <mst> absolutely nothing in there to complain about

[18:37] <masak> <mst> I think we're getting better at this :)

[18:37] <pmichaud> I'd just want to avoid any sense of trying to designate one heir as the "one true heir"

[18:37] <masak> well, that's the point, isn't it?

[18:37] <Su-Shee> and it would be really nice if folks like me who actually live and work in _both_ perls not get the feeling to be forced to one side or the other by getting constant teasing from both sides. 

[18:37] <masak> it's the "one true heir" thinking that creates friction.

[18:37] <PerlJam> masak: were you on #perl earlier when I mentioned how Perl 6 treats the "fat comma"?

[18:38] <masak> PerlJam: #perl on freenode?

[18:38] <PerlJam> aye

[18:38] <masak> I was, but I must have missed it.

[18:38] * masak backlogs

[18:38] <Su-Shee> (and this gossiping here isn't really much better than the same over there...)

[18:39] <masak> Su-Shee: sure it is! we have more hugs! :)

[18:39] <masak> even the bots hug each other today.

[18:39] <supernovus> I use Perl 5 and Perl 6 both (although currently in seperate projects), and once Blizkost supports XS modules, I'll probably start using them together. :-)

[18:41] <Su-Shee> yeah. and all this butterflies and flowers and hugging really doesn't hide certain assumptions what perl 5 folks might think not very well. ;)

[18:41] *** PZt left
[18:41] <PerlJam> masak: how would you interpret LoeNerd's reaction?  (if you're really backlogging)

[18:41] *** IMeMyself left
[18:41] *** PZt joined
[18:41] *** IMeMyself joined
[18:41] <masak> PerlJam: I see you in various places in the backlog, but didn't find anything on fat commas....

[18:41] *** rodi left
[18:43] *** kst left
[18:43] *** PZt left
[18:43] *** kst joined
[18:44] <patspam> douglas crockford made an interesting comment recently about how they're deliberately not giving the next planned version of javascript a version number (yet at least)

[18:45] <patspam> and why he doesn't like html5 being called "5" yet because it hasn't been recognised by any standards bodies yet

[18:45] <moritz_> it's a bit too late for that in Perl 6 :-)

[18:45] <masak> Haskell Prime suffered, according to some #haskell folks I've talked to, from the fact that it wasn't a significant improvement on 98. mainly because the latter is really good.

[18:46] <patspam> yeah, very different political sphere, but interesting to compare

[18:46] <masak> PerlJam: no, I give up. I can't find the place you're referring to. I've found LeoNerd and fat commas, but I don't find you in it.

[18:46] *** PZt joined
[18:47] <masak> ah, found it!

[18:47] <Su-Shee> masak: you'll find the more or less same discussion for Lisp under the slogan "worse is better"

[18:49] <masak> PerlJam: ok, here's what I think: LeoNerd belongs to the set of people who want to make a point out of Perl 5 and Perl 6 being "different languages". since I could successfully argue for them being both different languages and the same language, I don't find making such a point important. but he does. maybe he even feels that you're on his lawn or something, due to talking Perl 6 on #perl.

[18:50] *** payload joined
[18:51] <frettled> He's Texan?

[18:52] <masak> PerlJam: I'm no psychologist, but perhaps we are considered a threat by some, and they react by hostility. maybe they're afraid that we'll flood #perl with academic theory and vapourware releases. :)

[18:52] <Su-Shee> (or maybe they just see the academic tendencies here and the abstractness and compare it to their dynamics and plainly stick with theirs.. ;)

[18:53] <frettled> If I'd felt comfortable banging rusty nails with my wibbly bits, I would probably ask for a link to the IRC log in question.  But I don't think I do.  :)

[18:53] <Su-Shee> it's really interesting that you all think that the perl 5 folks feel threatened instead of maybe just once assuming that they have a good reason for their view.. ;)

[18:54] <masak> frettled: I'm not sure there are IRC logs for #perl.

[18:54] <masak> I was backlogging in my client.

[18:54] <frettled> masak: aha

[18:54] <frettled> You know what I like about #perl6?

[18:55] <masak> Su-Shee: it's a typical from-the-inside rationalization, I guess.

[18:55] <masak> frettled: no, what do you like about #perl6?

[18:55] <moritz_> Su-Shee: I am interested in why Perl 5 folks dislike Perl 6. Just when the only answer is "because it's not there yet" there's nothing I can do with that answer

[18:55] <moritz_> Su-Shee: and that includes infrastructure and libraries

[18:55] *** xinming_ joined
[18:56] <Su-Shee> moritz_: you could take it it is meant - that someone just doesn't care about Perl 6 until it's really there and has a basic set of libs.

[18:56] <frettled> Every other online community that I've joined, I've had to start out as an utterly deferential n00b who doesn't speak up, because, well, you're always a friggin' n00b every time you join a new online community, nevermind how much experience you have in the field or tech in question.

[18:56] <frettled> But not so here.

[18:56] *** nihiliad left
[18:56] <masak> I can proudly and without hesitation say that Perl 6 has one helluva development process, with spec/spectests/implementation reacting faster than any language process I know of.

[18:56] <moritz_> Su-Shee: so what would be my conclusion to draw from accepting that?

[18:56] <moritz_> Su-Shee: that I should leave poeple allone?

[18:57] <Su-Shee> moritz_: you don't have to conclude anything from it, just take it as they say it and leave it at that. 

[18:57] <PerlJam> Su-Shee: I'm a "perl 5 folk" and I don't understand those *other* perl 5 folk who seem to react as if they are being threatened.

[18:57] <Su-Shee> I'm half of a perl 6 folks and my doubts are growing every day and I understand very much what the fivers talk about.

[18:57] <masak> PerlJam: but you're Perl 6 infected, too.

[18:57] <PerlJam> Su-Shee: just like I don't understand those people that think that there is some sort of competition between Perl and Ruby or Perl and PHP or Perl and Python, etc.

[18:58] <pmurias> moritz_: "because it's not there yet" is a valid reason

[18:58] <PerlJam> Su-Shee: In my mind it doesn't have to be "Perl xor Ruby", but it can (and sometimes should) be "Perl *and* Ruby"

[18:58] <moritz_> pmurias: I know.

[18:58] <masak> PerlJam: there should be a term for that kind of disease. maybe zerosumgameitis.

[18:58] <PerlJam> masak: heh

[18:59] <Su-Shee> PerlJam: but this channels enters exactly this competetition every day over and over again by implying the 5ers feel threatened or by joining the other channel and teasing around.

[19:00] *** nihiliad joined
[19:01] *** xomas left
[19:01] <frettled> Su-Shee: If that's how it appears, then we should amend our ways.

[19:02] <frettled> Usually, though, I think that we're quite constructive, both in terms of community, and in terms of technology.

[19:03] <masak> we definitely have our myths and misconceptions about the other side.

[19:03] <masak> no question.

[19:03] <frettled> And looking at how other people react as well as how we _think_ that other people react is an important part of the first.

[19:03] <Su-Shee> actually, I think that there is no conflict and that all this is artificial anyway, because we're talking 5 folks in one channel and 5 in another - what the silent masses really think we just don't know. 

[19:03] <frettled> We are different enough within this channel that we can at least enlighten ourselves a bit.

[19:03] <frettled> Su-Shee: well, we know that they're either being silent here or noisy somewhere else ;)

[19:03] <masak> Su-Shee: I disagree.

[19:04] <masak> Su-Shee: Perl 6 has had, and still has, directly provocative slogans that would enrage Perl 5 people if we weren't so insignificant.

[19:04] <masak> "the next major version of Perl"

[19:04] <Su-Shee> it would annoy mst and three others. ;)

[19:05] <pmurias> and what is the next major version of Perl 5 supposed to be named?

[19:05] <frettled> pmurias: that's a contradiction in terms

[19:05] <supernovus> Perl 5.12 :-)

[19:05] <TimToady> it is certainly the case that Perl culture has *always* been about teasing, even back at Perl 1 :)

[19:05] <frettled> pmurias: "5" is the major version

[19:06] <frettled> 5.10.1 => major version 5, minor version 10, patch level 1

[19:06] <masak> Su-Shee: it's an intriguing idea that the whole conflict phenomenon is limited to five people on each side. that's not congruent with my experience, however.

[19:06] <pmichaud> 18:58 <masak> PerlJam: there should be a term for that kind of disease. maybe zerosumgameitis.

[19:06] <pmichaud> Jim Collins (author)  calls it "Tyranny of the 'Or'"

[19:06] <frettled> samiam

[19:06] <supernovus> I'd say in the case of Perl 5.10.1, 5 is the language varient, 10 is the 'major version' and '1' is the minor version. That's just my own opinion though :-)

[19:06] <frettled> pmurias: not the xor?  :D

[19:06] <masak> pmichaud: cool.

[19:06] <Su-Shee> masak: I think, you're implicitly counting the public status of the 5 (let it be 12, then.. )

[19:07] <frettled> supernovus: and that's (deliberately?) misunderstanding what "major version" means

[19:07] *** ssm left
[19:07] *** parduncia left
[19:07] *** constant left
[19:07] <pmichaud> the opposite of which is "Genius of the 'And'".  He uses it to refer to business and organizational settings where people get trapped in an either/or mentality instead of finding ways to acheive all goals simultaneously

[19:07] <masak> Su-Shee: I agree to the extent that the high-profile people are the most vocal in the debate. but I have no reason to believe that they are not expressing concerns that are more widespread.

[19:08] <moritz_> maybe we need to rename both Perl 5 and Perl 6 to completely diffent names :-)

[19:08] <frettled> pmichaud: ah, so it's also sort of covering NIH?

[19:08] <masak> moritz_: funny, that's what mst said. :)

[19:08] <frettled> moritz_: white perl and black perl?

[19:08] <pmichaud> "Strawberry Perl"   "Rakudo Perl" 

[19:08] <frettled> The Programming Language Formerly Known As Perl 5

[19:09] <pmichaud> "Pugs"

[19:09] <masak> Funny Glyph Perl.

[19:09] *** mikehh left
[19:09] *** mikehh joined
[19:09] <supernovus> Perl 5 becomes Perl -> and Perl 6 becomes Perl *  ... that would go over well methinks ;-)

[19:09] <frettled> Perl star?

[19:09] *** japhb left
[19:09] <moritz_> supernovus: not at all

[19:10] <Su-Shee> masak: well if I ask the three dozen perl fellows I know which are the john and jane perl in berlin, they mostly tend to have a friendly view towards a new Perl, but they plainly wait until it's tangible for _them_ and their expectations. mr shee will try perl 6 - when it has mysql DBI and can parse his 200 gig per day. 

[19:10] <masak> "Wanted: Perl star programmer"

[19:10] <supernovus> haha

[19:11] <frettled> I think we should have a PostgreSQL DBI before that ;)

[19:11] *** xinming left
[19:11] * Su-Shee will answer to "perl starlet wanted" ;)

[19:11] <Su-Shee> frettled: well that excludes most ISP offering LAMP

[19:12] <masak> Su-Shee: perhaps it all comes down to the fact that people engage differently in what's commonly thought of as 'the community'. my feeling is that the Perl 5 community has woven some sort of Perl 6 aversion/dislike/mistrust into itself.

[19:12] <frettled> Su-Shee: ";)" is a winking smiley, which means...?

[19:12] <Su-Shee> frettled: in my old school internet smiley dictionary it's "irony"

[19:12] <PerlJam> masak: a vocal subset of the Perl 5 community ...

[19:12] <pmichaud> PerlJam: +1

[19:12] *** payload left
[19:12] *** ShaneC joined
[19:12] <masak> PerlJam: yes, but a subset which sets the tone.

[19:13] <pmichaud> ... a subset which sets a tone that we're attuned to :)

[19:13] <Su-Shee> which sets the tone in a very few places. 

[19:13] <masak> like conferences.

[19:13] <PerlJam> Su-Shee: cite your use of "few"

[19:13] <pmichaud> oh, I tend to agree with Su-Shee.  I hear from a lot of folks that use p5, are interested in p6 "when it's ready", but don't at all feel threatened by it

[19:13] <PerlJam> I've seen it on IRC, perlmonks, twitter, blogs, encountered it in real life conversations, etc.

[19:13] <pmichaud> they're just not vocal in their "I'm not threatened"-ness

[19:14] <Su-Shee> masak: honestly, do you think the swedish perl community really cares as a whole what the 10 grand old dogen of perl 5 think about perl 6?

[19:14] <frettled> Su-Shee: In my smiley list from 1985, it's the dwarf version of ;-), which is «Winky smiley. User just made a flirtatious and/or sarcastic remark. More of a "don't hit me for what I just said" smiley.»

[19:14] <frettled> pmichaud: mm

[19:14] <Su-Shee> frettled: well I mean it in irony and/or sarcastic way. and yes, something I actually do pun on being female. 

[19:15] *** mikehh left
[19:15] <frettled> Su-Shee: but in either case, it was clear that I wouldn't mean what was written _seriously_.

[19:15] <frettled> Su-Shee: both to you and other readers.

[19:15] *** mikehh joined
[19:15] <pmichaud> anyway, I don't think think any Perl 6 aversion is completely woven into the Perl (5) community.  It's there among many of the more visible and vocal members... but of course we don't hear from the people who aren't really threatened by Perl 6

[19:16] <frettled> Su-Shee: I think I'll take a break now, because I can see that we're on the verge of hostility.  Sorry about that.

[19:16] <colomon> pmichaud++

[19:16] <Su-Shee> frettled: uhm what?

[19:16] <masak> Su-Shee: I think the reason non-Perl people think that Perl 6 === DNF is due to bad or confused messages. I think there are similar reasons for Perl 5 people (not all of them, but some) not liking Perl 6.

[19:17] <Su-Shee> frettled: I'm lying on the sofa with chocolate and hot tea and candles and chat about the politics and dynamics of programming communities... if that's hostile.. :)

[19:17] <PerlJam> Su-Shee: you're female?!?  ;)

[19:17] <ash___> in parrot, is there an easier way to print a hash in a way to see its contents? using say just did: Hash[0xdeadbeef] 

[19:17] <Su-Shee> masak: "DNF"?

[19:17] <masak> Duke Nukem Forever.

[19:17] <Su-Shee> ah :)

[19:17] <masak> inherent in the talk about 'setting the tone' is the idea that if our tone is good enough, we get to set it to some degree.

[19:17] <pmichaud> ash___: see "dumper.pir"

[19:17] <ash___> pmichaud: thanks

[19:17] <pmichaud> ash___: I generally do   _dumper(hash)

[19:17] *** constant joined
[19:17] *** ssm joined
[19:17] *** parduncia joined
[19:17] <PerlJam> Su-Shee: or, put another way ... on IRC, no one knows you're *not* male. :)

[19:18] <ash___> pmichaud: would _dump($P2) function the same? 

[19:18] *** ssm left
[19:18] *** parduncia left
[19:18] *** constant left
[19:18] <pmichaud> ash___: do you mean as opposed to _dumper($P2)  ?  I don't think so

[19:18] <pmichaud> but _dumper(...)   is Parrot's generic data dumper

[19:18] <Tene> I've been known to be not-male on IRC a few times.  Haven't worked out how to pull it off outside of IRC yet though.

[19:18] <Su-Shee> PerlJam: well I'm not really hiding it but I don't have to wear it on my shirt.. a wait I just said I want a rakudo starlet shirt.. ;)

[19:19] <ash___> oops i meant _dumper($P0), just wanted to make sure it worked with the $P0 style registers

[19:19] *** pmurias left
[19:19] <pmichaud> ash___: it's supposed to be able to dump any PMC type

[19:19] <pmichaud> (if the PMC type has the appropriate methods defined, which Hash, Array, etc. do)

[19:19] <ash___> pmichaud: alright, thanks 

[19:19] * masak heads home

[19:19] <Tene> bye masak 

[19:20] <masak> I'll be happy to talk more about communities some other time!

[19:20] <masak> it's a discussion worth having.

[19:20] *** masak left
[19:21] *** constant joined
[19:21] *** ssm joined
[19:21] *** parduncia joined
[19:21] * PerlJam wonders if there's any divisiveness between "old school" perl 5 hackers and those that use things like Moose and Modern::Perl.   I haven't noticed any, but that doesn't mean it's not out there.

[19:22] <supernovus> PerlJam: I have seen a little bit, but not as much as Perl 5 versus Perl 6.

[19:24] <ash___> in pir code, is the first param always self for a method sub? 

[19:24] <Tene> ash___: 'self' is a special register, always pointing to the invocant.  it's not passed as a param.

[19:24] <supernovus> At work, we have a few people who consider Moose, Modern::Perl and/or perl5i to be "slow, bloated overkill", and don't want us to use it in work related projects.

[19:25] <Su-Shee> PerlJam: there are. I know mostly "no moose, no poe, no catalyst" perl people.

[19:26] <supernovus> Having never used POE or Catalyst, I guess I fall into some subset of that demographic, but I do use Moose (via MooseX::Declare) and my own branch of perl5i in a lot of projects.

[19:27] <moritz_> supernovus: I think the question is not if you use those things or not, but if you reject them

[19:27] <ash___> Tene: do you know what would be passed to something if you did role A { }; A.^methods; as the first parameter? 

[19:27] <moritz_> ash___: the type object

[19:27] <moritz_> A.^methods is short for A.HOW.methods(A)

[19:27] <Tene> A.^methods is the same as A...... yeah, what he said.

[19:28] <Su-Shee> supernovus: I don't use Catalyst for example, I'm a qmail-mojo-unixoid-kiss-yagni-kind-a-girl.

[19:28] <PerlJam> Everytime I think of some useful feature of Perl being "slow", it reminds me of the time I spent benchmarking the difference in speed between Perl 4 and Perl 5.  Ultimately I came to realize that it didn't matter so much that Perl 5 was slower than Perl 4 because Perl 5 was just so much *better*  :)

[19:30] *** pmurias joined
[19:30] <ash___> moritz_: okay, well, there is an issue in ng's RoleHOW methods method src/metamodel/RoleHOW.pir#157 it doesn't have the attribute 'parrotclass'

[19:31] <moritz_> ash___: I'm not familiar with that code :(

[19:31] <ash___> ng: role A { method a { return 'b'; }}; say A.^methods;

[19:31] <p6eval> ng 21558a: No such attribute 'parrotclass'␤current instr.: 'perl6;RoleHOW;methods' pc 4866 (src/metamodel/RoleHOW.pir:47)␤

[19:32] <pmichaud> ash___: the problem is that very few of us know how type objects (A) get mapped internally

[19:32] <ash___> moritz_: you don't need to, i am just talking outloud mostly, trying to figure our whats going on to see if i can make a patch 

[19:32] <moritz_> ash___: great :-)

[19:33] <pmichaud> so, if you define role A { ... } -- I think only jnthn++ could say precisely what its type object ends up looking like

[19:33] <pmichaud> (internally, that is)

[19:34] <pmichaud> I can say that it's not going to be exactly the same as the type object for a class, and so I don't know its internal details

[19:34] <supernovus> Well, in the case of Catalyst, I've never had the need for a MVC Web framework. For simple scripts, "use CGI::Simple" is all I really need.

[19:35] <ash___> pmichaud: jnthn++ said it was possibly only partially implemented, so i am seeing if i can figure it out thats all

[19:36] *** japhb joined
[19:36] <Su-Shee> supernovus: I'm undecided on the whole MVC thing yet... 

[19:36] <Su-Shee> still?

[19:37] <Tene> "still"

[19:44] <jnthn> Role type objects aren't so interesting, really. Mostly, they just need to know what their metaclass is, handle punning if somebody tries to call a method on them, and so forth. :-)

[19:44] <ash___> i see whats wrong

[19:44] <jnthn> The actual info is in the metaclass.

[19:44] <jnthn> At the moment we still somewhat base that on a Parrot role, but soon we can (I expect) stop doing so.

[19:44] <ash___> that methods method lists RoleHOW's methods not the specific Role's methods

[19:46] <jnthn> Ah

[19:46] <jnthn> That's a bug then.

[19:47] *** jonasbn joined
[19:47] <ash___> ng: role A { method a { return 'b'; }}; say A.HOW.^methods;

[19:47] <p6eval> ng 21558a: sh: ./perl6: No such file or directory␤

[19:48] *** jonasbn left
[19:48] *** jonasbn joined
[19:48] <ash___> on my computer that returns the list of methods in RoleHOW, but for some reason A.^methods also gets dispatched to that function 

[19:48] *** xenoterracide_ is now known as xenoterracide

[19:48] <ash___> jnthn so, thats not the method that should be handling the a specific role's ^methods method? 

[19:54] <moritz_> ttp://lastofthecarelessmen.blogspot.com/2009/12/now-with-grammar-and-tests.html

[19:54] <moritz_> the tests can be greatly simplfied

[19:55] <moritz_> with given $match<ABC::broken_rhythm> { is .<<note>[0]<pitch><basenote> ... }

[19:55] <moritz_> erm, .<note>...

[19:55] <moritz_> sadly I don't manage to post code in the comments

[19:55] <jnthn> ash___: Doing SomeRole.^methods should call SomeRole.HOW.methods(SomeRole)

[19:56] <jnthn> ash___: And SomeRole.HOW should return an instance of RoleHOW 

[19:56] <colomon> moritz_: post the link to the irc log there?  :)

[19:56] <jnthn> So yes, it's the right method.

[19:56] <jnthn> the method  is probably buggy.

[19:56] <moritz_> colomon: or I just hope the author lurks here :-)

[19:56] <moritz_> likewise regex barline { '|' | ':|' | '|:' | ':|:' | '::' }

[19:56] <moritz_> looks like it would need LTM to work

[19:57] <moritz_> reordering the longest alternatives to the front would help

[20:05] <moritz_> wanted to post a link to that blog post, but now it doesn't respond at all when press the preview or submit button

[20:06] *** jferrero left
[20:08] *** jferrero joined
[20:10] *** kaare_ joined
[20:23] <ash___> jnthn: how would you access the method list of a Perl6Role from pir? 

[20:24] <ash___> if you know, if not i can try to find out

[20:32] <jnthn> ash___: Currently, those are stored in the underlying Parrot role object (which is stored as an attribute in the metaclass instance), so you can get that and then do meth_list = inspect that_thing, 'methods' or so.

[20:33] <ash___> jnthn: k, i'll try that 

[20:39] <TimToady> heh, today's /. quote: Nothing is easier than to denounce the evildoer; nothing is more difficult than to understand him. - Fyodor Dostoevski

[20:40] <moritz_> how fitting

[20:41] <PerlJam> Are you implying that Perl 5 people are evil?  ;->

[20:42] <moritz_> no :-)

[20:43] * jnthn afk for a while

[20:46] <TimToady> note that it is part of my belief system that a non-evil person can nevertheless be an evildoer.

[20:48] *** reqamst joined
[20:49] <TimToady> same goes for companies :)

[20:50] <diakopter> yelp won't help google stay less evil

[20:50] <TimToady> and, from time to time, language designers...

[20:50] <PerlJam> TimToady: There's a little yin and yang in all of us.

[20:55] <cj> TimToady: http://karma.colliertech.org/~cjac/tmp/isurvived.png

[20:56] <cj> moritz_: http://ilbot.colliertech.org/ubuntu-us-wa/today

[20:57] <moritz_> cj: thanks

[20:58] <cj> moritz_: you bet.  thanks for your help.  /lastlog moritz_: will get you a couple of deps you should add to your HOWTO

[21:00] *** justatheory joined
[21:00] <moritz_> cj: Bot::BasicBot and Calendar::Simple - did I miss any other?

[21:01] *** Su-Shee left
[21:05] *** pmurias left
[21:05] *** pmurias joined
[21:13] *** takadonet left
[21:19] <cj> moritz_: let me check my logs

[21:20] <cj> Date::Simple

[21:20] * frettled wants Dating::Simple

[21:21] <cj> Bot::BasicBot v0.81 (newer than lenny)

[21:21] <cj> those seem like the only ones I mentioned in the channel

[21:25] *** kaare_ left
[21:32] *** yahooooo left
[21:40] *** patspam left
[21:41] *** patspam joined
[21:46] *** uva joined
[21:52] * wayland76 wants Dating::TheRightPerson :)

[21:54] <ash___> is that a  perl 5 module? i don't see it in cpan 

[21:59] *** meppl joined
[22:00] <TimToady> wrong cpan, you want the Complementary Person Analysis Network for that one

[22:01] <wayland76> Is that Open Source? :)

[22:02] <mberends> has Dating::More been written yet?

[22:02] <IllvilJa> What is the best way, non-blocking way to check if the user has pressed a key? (Considering a Perl6 program running in a terminal session)

[22:02] *** patspam left
[22:02] <IllvilJa> Oh, and of course, if a key is pressed... what key as well :-).

[22:07] *** crythias left
[22:07] <frettled> wayland76: Anyway, that's NYI

[22:08] *** lazybird left
[22:08] <mberends> IllvilJa: there is no way to read keys without blocking. Even the mature Perl 5 ways are said to not always work, afair.

[22:09] <moritz_> there's Term::ReadKey, but it's *nix only, and has no real tests

[22:10] <moritz_> (for Perl 5, that is)

[22:11] <TimToady> your best bet for Perl 6 right now is probably to write a helper program to read the terminal and send in the keystrokes as events via a socket

[22:12] <moritz_> but we don't have non-blocking socket reads either :Z/

[22:12] <moritz_> s/Z//

[22:12] <PerlJam> blocking--

[22:13] <TimToady> blocking is okay if there's only one source of events, and the problem is event-driven...

[22:13] <TimToady> in general, polling solutions are going to bite you sooner or later

[22:14] <frettled> especially the electronic ones

[22:14] <ash___> how do you get the type of a pmc in pir? class $P0, $P1 seems to work, is that what that function does? or am i crazy 

[22:18] *** Wolfman2000 joined
[22:18] <moritz_> ash___: maybe #parrot would be more responsive to PIR questions

[22:18] <ash___> thats on the perl irc server right? 

[22:22] *** jonasbn left
[22:22] <moritz_> yes

[22:22] <moritz_> irc.perl.org

[22:23] <wayland76> ash___, moritz_: No, it's on irc.parrot.org

[22:23] <moritz_> wayland76: that's a DNS alias

[22:24] <moritz_> $ host irc.parrot.org

[22:24] <moritz_> irc.parrot.org is an alias for irc.perl.org.

[22:24] <wayland76> Ah, ok :)

[22:25] <wayland76> So now I've simplified my IRC config :)

[22:30] <ash___> ng: say ''.^methods; 

[22:30] <p6eval> ng 21558a: Null PMC access in inspect_str()␤current instr.: 'perl6;ClassHOW;methods' pc 3898 (src/metamodel/ClassHOW.pir:372)␤

[22:31] <ash___> i think there are some problems with introspection at this moment in ng 

[22:32] <IllvilJa> Ok, if I do a blocking read of a single keypress... is there a way for that?

[22:33] *** JodaX joined
[22:33] <IllvilJa> (But no non-blocking read of keypresses... that would be disastrous if I would attempt to reimplement good old unix 'hunt' in perl 6 ;-) )

[22:33] <Tene> IllvilJa: I've done some Curses stuff with rakudo.  It likely won't work anymore without some updates to rakudo's inter-hll loading, though.

[22:34] *** Gruber joined
[22:34] *** d4l3k_ joined
[22:34] *** r0bby_ joined
[22:34] *** nothingmuch_ joined
[22:34] *** szabgabx left
[22:34] *** wayland76 left
[22:34] *** r0bby left
[22:34] *** p6eval left
[22:34] *** Woody2143 left
[22:34] *** Grrrr left
[22:34] *** Infinoid left
[22:34] *** charsbar left
[22:34] *** elmex left
[22:34] *** szabgab left
[22:34] *** _Joda_ left
[22:34] *** renormalist left
[22:34] *** yves left
[22:34] *** breinbaas left
[22:34] *** Solarion left
[22:34] *** buubot left
[22:34] *** pmichaud left
[22:34] *** nothingmuch left
[22:34] *** simcop2387 left
[22:34] *** IRSeekBot left
[22:34] *** dalek left
[22:34] *** nothingmuch_ is now known as nothingmuch

[22:34] *** elmex joined
[22:34] *** d4l3k_ is now known as dalek

[22:35] *** yves joined
[22:35] *** p6eval joined
[22:36] *** simcop2387_ joined
[22:37] *** Infinoid joined
[22:37] *** IRSeekBot joined
[22:38] *** buubot joined
[22:41] *** simcop2387_ is now known as simcop2387

[22:43] *** stephenlb joined
[22:47] *** wayland76 joined
[22:47] *** ashizawa left
[22:53] <ash___> moritz_: $a.^methods; translates to $a.HOW.methods($a) or $a.HOW.methods($a.WHAT) ? 

[22:55] *** nihiliad left
[22:57] *** mikehh left
[22:58] <ash___> nm, i checked S12, its the first one $a.HOW.methods($a)

[22:58] <ash___> found another bug then 

[22:58] *** mikehh joined
[23:01] *** supernovus left
[23:01] <zaslon> lolmoritzhazblogged! moritz++ 'Publicity for Perl 6': http://perlgeek.de/blog-en/perl-6/publicity-for-perl-6.html

[23:05] <mberends> moritz_: it has been an incredibly successful Perl 6 Advent blog.  Well done!

[23:06] *** ssm left
[23:06] *** parduncia left
[23:06] *** constant left
[23:06] <uva> voice test

[23:07] *** constant joined
[23:07] *** ssm joined
[23:07] *** parduncia joined
[23:09] <ash___> ng: ''.^methods;

[23:09] <p6eval> ng 21558a: Null PMC access in inspect_str()␤current instr.: 'perl6;ClassHOW;methods' pc 3898 (src/metamodel/ClassHOW.pir:372)␤

[23:10] <ash___> should i put ng branch bugs in the perl 6 bug tracker? 

[23:11] <pugs_svn> r29375 | mberends++ | [pugs/src/perl6/vill] introducing vill, a viv+llvm mashup 

[23:11] *** ssm left
[23:11] *** parduncia left
[23:11] *** constant left
[23:11] *** constant joined
[23:11] *** ssm joined
[23:11] *** parduncia joined
[23:13] *** ssm left
[23:13] *** parduncia left
[23:13] *** constant left
[23:13] *** constant joined
[23:13] *** ssm joined
[23:13] *** parduncia joined
[23:14] *** ssm left
[23:15] *** parduncia left
[23:15] *** constant left
[23:15] *** constant joined
[23:15] *** ssm joined
[23:15] *** parduncia joined
[23:18] *** ash___ left
[23:19] *** patspam joined
[23:20] <PerlJam> All you perl6advent people look at my draft for Day 20 and send me some commentary.  (I know it needs work)

[23:20] <PerlJam> Gotta go now, but I will backlog  (or you can tell phenny)

[23:21] *** meteorjay left
[23:24] *** am0c joined
[23:27] *** Exodist left
[23:27] *** mberends left
[23:30] *** iblechbot left
[23:32] <Tene> PerlJam: s/xpress/express/

[23:53] <sjohnson> oh, the bliss of Perl -> PHP serializers

[23:55] *** uva left
