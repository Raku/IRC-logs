[00:00] *** braceta left
[00:00] <diakopter> gee whiz, that's what the README said!

[00:00] <diakopter> :D

[00:05] *** lergo joined
[00:06] <lergo> so who does haskelll

[00:07] *** eric256 left
[00:09] <ruoso> lergo, some people do around here... but not many of them this days

[00:09] <lergo> oh ok

[00:10] *** |jedai| left
[00:11] *** |jedai| joined
[00:11] *** pcbuetow joined
[00:13] <diakopter> <sigh> cabal.exe   cabal: getHostByName: does not exist (no such host entry)

[00:17] <ruoso> hmmm

[00:17] * diakopter downloads and extracts the .tar.gz manually :|

[00:18] <ruoso> it sure makes sense to port m0ld to p5

[00:20] <lergo> erm an unsigned int can hold up to 4,294,967,295

[00:20] * lergo just learnt something

[00:21] <diakopter> m0ld built and installed

[00:21] <diakopter> now to the second line of the .sh

[00:21] <diakopter> er, Makefile

[00:22] <ruoso> cool... now comes the hard part

[00:22] * diakopter goes afk for a bit

[00:28] *** pbuetow left
[00:30] *** [particle] joined
[00:37] *** s1n joined
[00:40] *** hercynium left
[00:48] *** s1n left
[00:48] *** lergo left
[00:49] *** [particle]1 left
[00:54] *** s1n joined
[00:57] *** meppl joined
[00:58] *** km3 joined
[00:59] * diakopter returns from afk

[01:01] <diakopter> ruoso: ok, how to do this ri step

[01:02] <diakopter> I mean, scons step

[01:04] <diakopter> hmm

[01:08] *** km2 left
[01:13] *** PZt left
[01:13] *** km3 left
[01:17] *** Dolphin_Sonar joined
[01:18] *** justatheory left
[01:21] *** PZt joined
[01:32] *** DemoFreak left
[01:41] <diakopter> ruoso: after lots of SConstruct tweaking, the first .ri->.c file gets partially complete

[01:42] *** brunoV left
[01:42] <diakopter> ruoso: the last two lines are:

[01:42] <diakopter> void control_exception_return_mold_init() { SMOP__Object* interpreter = SMOP__GlobalInterpreter;

[01:42] <diakopter> line break after {

[01:44] *** s1n left
[01:46] *** s1n joined
[01:56] *** iblechbot_ left
[02:04] *** gravity joined
[02:12] *** eternaleye joined
[02:27] *** hercynium joined
[02:39] *** dukeleto left
[02:45] *** cspencer joined
[02:46] *** Dolphin_Sonar left
[02:51] *** [particle]1 joined
[02:56] *** [particle] left
[03:00] *** aindilis left
[03:01] *** aindilis joined
[03:01] *** pcbuetow left
[03:15] *** cspencer left
[03:16] *** LimbicRegion joined
[03:18] *** [1]Limbic_Region joined
[03:21] *** [2]Limbic_Region joined
[03:26] *** Limbic_Region left
[03:26] *** [2]Limbic_Region is now known as Limbic_Region

[03:32] *** wknight8111 left
[03:33] *** [1]Limbic_Region left
[03:33] *** meppuru joined
[03:34] *** meppl left
[03:34] *** meppuru is now known as meppl

[03:35] *** LimbicRegion left
[03:39] *** lumi_ left
[03:57] *** idemal joined
[04:10] *** Limbic_Region left
[04:17] *** s1n1 joined
[04:17] *** s1n left
[04:43] *** gravity left
[04:48] *** japhb left
[04:56] *** aindilis left
[04:57] *** aindilis joined
[04:59] *** charsbar_ left
[04:59] *** japhb joined
[05:02] *** charsbar joined
[05:12] *** [particle] joined
[05:18] *** stephenlb left
[05:30] *** aindilis left
[05:30] *** aindilis joined
[05:31] *** [particle]1 left
[06:01] *** hercynium left
[06:07] *** aindilis left
[06:08] *** aindilis joined
[06:22] *** kst left
[06:22] *** kst joined
[06:35] *** pdcawley joined
[06:45] *** aindilis left
[06:45] *** aindilis joined
[06:48] *** pdcawley left
[06:49] *** pdcawley joined
[06:50] *** pdcawley left
[07:30] *** kcwu left
[07:32] *** [particle]1 joined
[07:33] *** kcwu joined
[07:36] *** [particle] left
[07:40] *** lumi joined
[07:41] *** agentzh joined
[07:50] *** japhb left
[07:51] *** japhb joined
[07:51] *** pmurias joined
[07:54] <pmurias> diakopter: one thing you should check before trying to compile the .ri files is that m0ld is working properly

[07:54] <lambdabot> pmurias: You have 1 new message. '/msg lambdabot @messages' to read it.

[07:56] <pmurias> diakopter: if ./m0ld_exe < m0ld/hello_world.m0ld prints out some C code it is

[08:22] *** iblechbot joined
[08:26] *** DemoFreak joined
[09:07] *** ejs joined
[09:10] <rakudo_svn> r35667 | cotto++ | [pod] add a =cut, noticed by jimmy++

[09:32] <pasteling> "ejs" at 77.109.30.215 pasted "parrot compile error" (13 lines, 797B) at http://sial.org/pbot/34522

[09:32] *** schmalbe joined
[09:33] <ejs> I'm getting the following compile error while making perl6 on my macbook: http://sial.org/pbot/34522

[09:35] <ejs> anyone knows what does this error means?

[09:36] *** aindilis` joined
[09:36] *** aindilis left
[09:42] *** meppl left
[09:52] *** [particle] joined
[09:56] *** aindilis` left
[10:00] *** _jedai_ joined
[10:01] *** |jedai| left
[10:10] *** [particle]1 left
[10:17] *** meppl joined
[10:17] *** pbuetow joined
[10:30] *** j1n3l0 joined
[10:31] <mj41> ejs: fixed in r35670 http://tt.ro.vutbr.cz/report/pr-Parrot/rp-trunk

[10:34] *** vixey joined
[10:38] <pugs_svn> r24936 | azawawi++ | [S:H:P6] Updated to jquery 1.3, latest STD.pm and perl6.vim

[10:38] <pugs_svn> r24936 | azawawi++ | [S:H:P6] Bumped version to 0.034 for CPAN

[10:38] *** cai joined
[10:45] *** kisu left
[10:46] *** kisu joined
[10:46] *** cai left
[10:56] *** j1n3l0 left
[11:06] *** ft joined
[11:16] *** _jedai_ left
[11:17] *** |jedai| joined
[11:36] *** tux300181 left
[11:47] *** kst left
[11:47] *** kst joined
[11:58] <ruoso> pmurias, I think there's a good reason to port m0ld to p5 now

[12:10] *** riffraff joined
[12:14] *** [particle]1 joined
[12:15] *** brunoV joined
[12:24] <ejs> mj41: thanks

[12:30] *** _jedai_ joined
[12:31] *** |jedai| left
[12:33] *** [particle] left
[13:07] *** wolv joined
[13:09] *** ejs left
[13:15] *** p6eval left
[13:15] *** avar left
[13:15] *** Aisling left
[13:15] *** p6eval joined
[13:15] *** avar joined
[13:15] *** Aisling joined
[13:20] *** _jedai_ left
[13:20] *** |jedai| joined
[13:41] *** wolv left
[13:41] *** wolv joined
[13:43] *** riffraff left
[13:51] *** cai joined
[13:57] *** alc joined
[14:09] *** meppl left
[14:31] *** braceta joined
[14:33] *** [particle] joined
[14:35] *** Whiteknight joined
[14:35] *** braceta_ joined
[14:36] *** jhorwitz joined
[14:37] *** meppl joined
[14:39] *** wolv left
[14:45] <pmurias> ruoso: hi

[14:51] *** [particle]1 left
[15:00] <rakudo_svn> r35692 | pmichaud++ | [rakudo]: spectest-progress.csv update: 286 files, 0 passing, 6288 failing

[15:00] <rakudo_svn> r35692 | pmichaud++ | * r35664 broke the Parrot build, so no passing tests :-(

[15:01] *** braceta left
[15:05] *** |jedai| left
[15:06] *** |jedai| joined
[15:08] <pbuetow> should be -- :)

[15:20] *** ayrnieu joined
[15:35] *** Limbic_Region joined
[15:37] *** Casan joined
[15:37] *** Casan left
[15:37] *** Casan joined
[15:40] *** cai left
[15:42] *** cai joined
[15:45] *** cai left
[15:49] *** hudnix joined
[16:01] *** |jedai| left
[16:02] *** |jedai| joined
[16:16] *** DemoFreak left
[16:16] *** c9s_ joined
[16:16] *** c9s_ left
[16:17] *** smtms joined
[16:18] *** c9s left
[16:19] *** c9s joined
[16:36] *** hercynium joined
[16:42] *** alester joined
[16:55] *** [particle]1 joined
[17:14] *** [particle] left
[17:17] *** rhr_ joined
[17:20] *** Limbic_Region left
[17:22] *** rhr left
[17:42] *** PZt left
[17:43] <meppl> good night

[17:45] *** meppl left
[17:45] *** _jedai_ joined
[17:46] *** |jedai| left
[17:54] *** xuser left
[18:01] *** On_home_and_afk left
[18:12] *** km2 joined
[18:18] *** On joined
[18:23] <ruoso> hi pmurias 

[18:32] <pmurias> re rewrite, you want installing smop to be easier?

[18:36] *** kisu left
[18:36] <pmurias> ruoso: bundling stuff in a installer might be a better solution to make the windows folk happy

[18:37] *** |jedai| joined
[18:37] *** _jedai_ left
[18:44] <ruoso> pmurias, I'm not able to make such a bundle

[18:45] *** |jedai| left
[18:45] *** |jedai| joined
[18:47] <pmurias> ruoso,diaktoper: how hard is it to get m0ld to compile on windows?

[18:47] *** Psyche^ joined
[18:51] *** alc left
[18:53] <ruoso> pmurias, m0ld was compiled

[18:53] <ruoso> but the .ri file was not compiled as expected 

[18:58] <pmurias> ruoso: it might be a problem with the tools/ri m0ld integration

[19:02] *** hercynium left
[19:04] *** Patterner left
[19:04] *** Psyche^ is now known as Patterner

[19:05] *** kisu joined
[19:07] *** nacho_ joined
[19:12] *** kisu left
[19:14] *** [particle] joined
[19:16] *** kisu joined
[19:21] *** |jedai| left
[19:22] *** |jedai| joined
[19:22] *** [particle]1 left
[19:26] *** aindilis joined
[19:28] *** On_Office left
[19:29] *** rhr joined
[19:31] *** |jedai| left
[19:33] *** |jedai| joined
[19:34] *** Whiteknight left
[19:42] *** schmalbe left
[19:42] *** DemoFreak joined
[19:42] *** rhr_ left
[19:47] *** Whiteknight joined
[19:50] *** braceta joined
[20:04] *** aindilis` joined
[20:09] *** braceta_ left
[20:15] *** masak joined
[20:17] *** spx2 joined
[20:18] *** aindilis left
[20:29] *** spx2_ left
[20:31] *** rindolf joined
[20:38] <diakopter> pmurias: only at the keyboard for this message... yes, ri produced some stuff... but I'll try the m0ld hello world now.

[20:39] <masak> rakudo: my @a = '--size=7', '--size=8'; if any(@a) ~~ / '--size=' (\d+) / { say $/.WHAT; }

[20:39] <p6eval> rakudo 35706: OUTPUT«Invalid namespace key of type 'Object' in get_pointer_keyed␤current instr.: 'parrot;P6metaclass;get_parrotclass' pc 1213 (runtime/parrot/library/P6object.pir:594)␤»

[20:39] <masak> I might be biting off more than I can chew here, trying to do junctions and regex matching at the same time...

[20:40] <masak> ...but is there any way I could do the above and have it DWIM, or should I use a for loop instead?

[20:40] <jnthn> That'd be the obvious way to write it...

[20:40] <masak> yes.

[20:40] * masak does it that way

[20:41] <diakopter> pmurias: http://perl6.pastebin.com/fae769c5

[20:41] <buubot> diakopter: The paste fae769c5 has been copied to http://erxz.com/pb/14901

[20:41] <jnthn> But above should work.

[20:41] <diakopter> ruoso: see above

[20:41] <jnthn> I can guess why it doesn't.

[20:41] <masak> jnthn: on my bow (some revisions back), I get Failure.

[20:41] <masak> rakudo: push my @a, "a" xx 5; @a[1] = "b"; say @a

[20:41] <p6eval> rakudo 35706: OUTPUT«Invalid namespace key of type 'Object' in get_pointer_keyed␤current instr.: 'parrot;P6metaclass;get_parrotclass' pc 1213 (runtime/parrot/library/P6object.pir:594)␤»

[20:42] <masak> jnthn: seems to be endemic.

[20:42] <diakopter> afk

[20:43] *** DemoFreak left
[20:45] <jnthn> oh, ouch

[20:45] * jnthn knows Whiteknight modified that method recently...

[20:45] <Whiteknight> who did what now?

[20:45] <masak> quick, hit the undo button!

[20:46] *** DemoFreak joined
[20:46] <Whiteknight> shit, that's something that should have been in the test suite if we're relying on it in Rakudo

[20:46] * Whiteknight goes to fix it

[20:46] <masak> Whiteknight: also known as 'what!? we don't have a test for this?'

[20:47] <masak> I know the feeling.

[20:48] <Whiteknight> okay, I have a hack solution building now

[20:49] <Whiteknight> Eventually we're going to need a comprehensive list of things that people want to be able to pass to the get_class opcode, because everytime I think I've accounted for the all another comes through and breaks everything.

[21:01] <Whiteknight> it doesn't help that the svn server appears to be acting up, and what I have on my machine doesn't appear to be in sync with whats on the server

[21:02] *** rindolf left
[21:02] <Whiteknight> okat, committed. Try r35707

[21:20] *** |jedai| left
[21:20] *** |jedai| joined
[21:20] *** braceta left
[21:28] *** aindilis` left
[21:30] *** athenot left
[21:31] *** athenot joined
[21:35] *** [particle]1 joined
[21:53] *** [particle] left
[22:03] *** ejs joined
[22:09] <masak> rakudo: if 5 > my $a = 4 { say $a }

[22:09] <p6eval> rakudo 35707: OUTPUT«Unable to set lvalue on PAST::Val node␤current instr.: 'parrot;PAST;Val;lvalue' pc 566 (src/PAST/Node.pir:161)␤»

[22:09] <masak> it works if I use parens, but what does that error mean?

[22:11] <jnthn> Hmm.

[22:11] <jnthn> masak: What's the next line down in the backtrace?

[22:12] <masak> called from Sub 'parrot;PAST;Compiler;as_post' pc 4013 (src/PAST/Compiler.pir:986)

[22:12] *** justatheory joined
[22:12] <jnthn> Ah, damm. It's failed in the PAST->POST.

[22:12] * masak submits rakudobug

[22:12] *** |jedai| left
[22:12] <jnthn> masak: Off hand, I don't know. I'd have to see what PAST tree it's producing to have a good idea.

[22:13] *** |jedai| joined
[22:16] <szabgab> rakudo: for (my $i = 1; $i <= 3; $i++) { say $i; }

[22:16] <p6eval> rakudo 35707: OUTPUT«2␤»

[22:16] <szabgab> is c-style for loop not  supported any more, am I making a mistake or just it is not yet implemented in rakudo ?

[22:16] <masak> szabgab: that's loop nowadays.

[22:17] <masak> C<loop>.

[22:17] <szabgab> ok, so why did that print 2 ?

[22:17] <masak> szabgab: either because it's legal, or it's a bug in Rakudo. :)

[22:17] <masak> rakudo: loop (my $i = 1; $i <= 3; $i++) { say $i; }

[22:17] <p6eval> rakudo 35707: OUTPUT«1␤2␤3␤»

[22:18] <masak> but for most cases, I'd say it's a punishable offense to use C-style loops nowadays.

[22:18] <szabgab> btw STD.pm or more correctly the one in Padre does not like the loop syntax eiteher

[22:19] *** alester left
[22:19] <masak> szabgab: ok.

[22:19] <szabgab> sure, I am translating the Cookbook

[22:19] <masak> std: loop (my $i = 1; $i <= 3; $i++) { say $i; }

[22:19] <p6eval> std 24936: OUTPUT«00:05 86m␤»

[22:19] <masak> szabgab: it's fine.

[22:19] <szabgab> what was that output from std ?

[22:20] <masak> szabgab: that it's fine.

[22:20] <masak> 5 seconds, 86 megabytes.

[22:20] <szabgab> nice way of saying it :-)

[22:20] <szabgab> ah

[22:20] <masak> szabgab: if you're translating to Perl 6, please translate to idiomatic Perl 6, unless the example is meant to be quaint. :)

[22:20] <szabgab> I am writing sg like "the c-stule way is now this though the perl 6 recommended way is the for loop

[22:21] <szabgab> besides I am just playing with it

[22:21] <masak> sure, sure.

[22:21] <masak> anyway, both std and Rakudo like the 'loop' three-part loop.

[22:22] <szabgab> maybe I  have an old std or sg is broken in the padre connection, I ask azawawi

[22:23] <masak> STD.pm gets old very quickly, I think.

[22:23] <masak> it's changed slightly in the last few days... but not in that area, AFAIK.

[22:25] <szabgab> oh, now the syntax error message is gone :-)

[22:26] <szabgab> its a bit slow on my end, you know 

[22:26] <masak> sometimes talking about it helps. :)

[22:27] *** ejs left
[22:28] <szabgab> oh I am telling the same to my patients

[22:29] <szabgab> err, students

[22:30] <araujo> hah

[22:32] *** wolverian left
[22:33] <szabgab> rakudo for 1..3 -> $i { say $i }

[22:33] <szabgab> rakudo: for 1..3 -> $i { say $i }

[22:33] <p6eval> rakudo 35707: OUTPUT«1␤2␤3␤»

[22:33] <szabgab> rakudo: for 1..3:by(2) -> $i { say $i }

[22:33] <p6eval> rakudo 35707: OUTPUT«Statement not terminated properly at line 1, near ":by(2) -> "␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[22:33] *** Casan left
[22:33] <szabgab> std: for 1..3:by(2) -> $i { say $i }

[22:33] <p6eval> std 24936: OUTPUT«00:05 87m␤»

[22:34] <masak> for Range.new(:from(1), :to(3), :by(2)) -> $i { say $i }

[22:34] <masak> rakudo: for Range.new(:from(1), :to(3), :by(2)) -> $i { say $i }

[22:34] <p6eval> rakudo 35707: OUTPUT«1␤2␤3␤»

[22:34] <masak> hm.

[22:34] * masak reads source

[22:35] <masak> szabgab: ISTR someone implementing :by in the Range constructor. but that code is not there, so either I was dreaming or it never reached trunk.

[22:35] *** |jedai| left
[22:36] *** |jedai| joined
[22:37] <szabgab> so shall I now mail rakudobug?

[22:37] <masak> szabgab: for a TODO thing? yes, if you like.

[22:37] <masak> it's not a bug, just a missing feature.

[22:38] <szabgab> ok so  I put TODO in the subject?

[22:38] <masak> or do you mean the Rakudo error? that might be because adverbs aren't parsed correctly, now that I think about it.

[22:39] <masak> szabgab: depends on what you're reporting.

[22:39] <szabgab> as I could not fall asleep I wanted to implement one of the entries in the cookbook and blog about it

[22:39] <masak> ok.

[22:40] <szabgab> but it is not implemented yet :-(

[22:40] <masak> nope.

[22:40] <szabgab> btw you'll be at NPW, right ?

[22:40] <masak> aye.

[22:40] <masak> talking about November.

[22:40] <masak> (I hope.)

[22:40] <szabgab> do you know if the Perl 6 workshop is still on ?

[22:40] <szabgab> it is gone from the website

[22:40] <masak> last I heard, it's still on.

[22:40] <masak> but I didn't know it was gone from the website.

[22:42] *** pmurias left
[22:42] *** kisu left
[22:44] *** wolverian joined
[22:45] <masak> jnthn: your two comments just got turned into Druid improvements. thanks. :)

[22:46] *** wolverian left
[22:46] <jnthn> masak: Two comments?

[22:46] *** wolverian joined
[22:48] <masak> jnthn: yes, one about the human-vs-computer menu at the start, and one about the paucity of syntax explanation.

[22:48] <masak> you just made them in passing, but they were important feedback to me.

[22:49] <jnthn> Ah, great. :-)

[22:49] *** ekole joined
[22:49] *** wolverian left
[22:50] <szabgab> what is the name of the :by(2) part ?

[22:50] *** wolverian joined
[22:50] <jnthn> Adverb.

[22:51] <szabgab> tx

[22:52] *** wolverian left
[22:53] *** wolverian joined
[22:54] <ekole> so guys Haskell is more of a specialise language?

[22:55] <masak> ekole: no, I think it's a generalise language.

[22:55] <masak> ekole: what do you mean?

[22:55] <ekole> in comparison to say java

[22:55] <ekole> java generics? haskell-type classes?

[22:55] <jnthn> No. You just have to be more special to be able to write Haskell than Java.

[22:55] <jnthn> ;-)

[22:55] * jnthn isn't special enough

[22:56] <ekole> :D

[22:56] <jnthn> Both do parametric polymorphism, yes.

[22:56] <masak> I find writing Haskell a bit meditative. until I actually try to run the thing.

[22:57] <ekole> i agree

[22:57] <ekole> bit meditative

[22:57] <masak> speaking of that, time to sleep...

[22:57] * masak waves

[22:57] *** masak left
[22:57] <ekole> i must ask though

[22:58] <ekole> why do universities ask you to write parsers?

[22:59] <szabgab> http://szabgab.com/blog/2009/01/1232232861.html  it is not much, but now I hope I can go to sleep :-)

[22:59] <jnthn> ekole: Probably because parsing data is a fairly common/useful thing to do.

[23:00] <jnthn> Plus it's a bit of a computer-sciency-ish thingy. :-)

[23:00] <ekole> Agreed

[23:00] <ekole> Another thing Haskell is the originator of all the ideas that are stolen by Java/C# and made completely useless?

[23:01] <jnthn> I think the ideas you're probably referring to come from functional programming more widely than Haskell.

[23:01] <jnthn> I didn't know Java really had taken many of them.

[23:02] <jnthn> C# took lambda expressions and gave them a pretty decent syntax. I've used them plenty, it's far from useless.

[23:02] <ekole> yes it is useless

[23:03] <jnthn> How so?

[23:03] <ekole> since their implementation is already inferior

[23:03] <jnthn> Erm.

[23:04] <jnthn> Details?

[23:04] <jnthn> Examples?

[23:04] <ekole> of it being useless?

[23:04] <jnthn> Yes.

[23:04] <jnthn> Given I've used it and found the complete opposite, you'll have to do pretty well to convince me. :-)

[23:05] <ekole> ok it's the blub paradox:)

[23:05] <ayrnieu> no, this is not the blub paradox.

[23:06] <ayrnieu> (unless you're talking about your own view of C#)

[23:06] *** Aisling left
[23:06] *** p6eval left
[23:06] *** avar left
[23:07] *** p6eval joined
[23:07] *** avar joined
[23:07] *** Aisling joined
[23:07] <ekole> ayrnieu: yes, it clearly is - I don't think jnthn or you're lying

[23:07] <ekole> but

[23:08] <ekole> jnthn: well, as for the details, , so I'll start with the easiest: C# 3.0's lambda expression do not permit point-free expression 

[23:08] <ekole> (not completely true, but if you try, you will hit a barrier pretty early on)

[23:08] <ayrnieu> ekole, first of all, blub applies when there are interlingual comparisons.  "Some feature of C# is of use to me." is what jnthn has said, and is what you dispute.

[23:09] <ekole> also, the type inferencer is pathetic

[23:09] <ayrnieu> jnthn did not for instance say "Some corresponding feature of Haskell's is not as good."

[23:09] <ekole> blub applies

[23:09] <ekole> "is of use to jnthn" is an infection of the mind called pragmatism

[23:10] <ekole> but anyhow can we go back to the details he askedf for? :)

[23:11] <jnthn> Interesting points.

[23:11] <jnthn> I agree the type inferencer could be improved.

[23:11] <jnthn> At the same time, I don't blame the languae designers not wanting to box themselves in.

[23:12] <jnthn> The line between decidable and undecidable is rather easy to cross when it comes to type inference.

[23:12] <szabgab> pragmatism++

[23:13] <jnthn> The type inferencer may have the limitations it does either because other aspects of the language already prohibit it from being smarter, because they want to leave the door open to doing such things in the future, or because they want to avoid "too much magic".

[23:14] <ekole> jnthn: no the limitations exist because the language is more of a marketing tool than a useful language

[23:15] <jnthn> Just because a language has reasonable market share doesn't make it a marketting tool.

[23:15] <ekole> the MSR guys admit that when not on record

[23:15] <ekole> I didn't say that - straw man

[23:15] <ekole> :)

[23:15] <jnthn> If we were talking C# 1.0 here, sure, I was skeptical too.

[23:16] <jnthn> But by C# 3.0 it's evovled into a multi-paradigm language that doesn't get in my way too much.

[23:16] <ekole> C# is inferior, the programming language researchers at MSR *know this* because I talk to them and it is so obvious that it needn't even be stated all that much

[23:17] <ekole> their influence on C# is filtered through marketing, since C# is mostly about marketing, not usefulness

[23:17] <jnthn> If we s/marketting/a language the average joe programming is capable of using/ I'd agree with you...

[23:17] <jnthn> *programmer

[23:18] <ekole> F# is waiting in the pipeline for the right time for marketing

[23:18] <jnthn> Sure, we can talk all day about the wonders of Haskell/ML and their type inference and purity and a bunch of other things.

[23:18] <jnthn> And I'm sure we can list a bunch of ways in which they are superior.

[23:18] <ekole> it can do everything C# can do, but better but it is also inferior

[23:19] <ekole> C# is inferior in *every* way

[23:19] <jnthn> To Haskell?

[23:19] <ayrnieu> ekole can't see uses for 'inferior' languages through his blub, jnthn, and he can't see his blub because he's ripped the term out of its context and taken it as a way to call you an unwashed heathen.

[23:19] <ekole> I needn't even go that far

[23:19] <ekole> F# exists -- QED

[23:20] <ayrnieu> so this is one of those cases where you should just ask your pastor for help finding appropriate apologia.

[23:21] <jnthn> "C# is inferior" and such views are a lot of what put me off doing a computer science PhD in the programming languages field.

[23:22] <ekole> yes you have already displayed a hint of pragmatism

[23:22] <jnthn> Because wax as many I met did about how what they had was superior to what everyone else was using, I preferred to instead work on things that were actually *useful*.

[23:22] <jnthn> ekole: Yeah, and the world could do with a lot more of it.

[23:22] * jnthn afk for a bit

[23:23] <ayrnieu> ekole, "X is superior" is meaningless outside of "X is superior for these ends".  And 'ends' for programming languages, oddly enough, are *bodies of code* that *do things*.  There is therefore an ineradicable pragmatism in language use.

[23:23] <ekole> jnthn: can you conceive two languages right now where one is inferior to the other?

[23:24] <ekole> wait he did that,  C# 1.0 to C# 3.0

[23:24] <ekole> erm why are you so afraid of such suggestions then?

[23:26] <s1n1> my hammer smashes things better than your hammer

[23:27] *** s1n1 is now known as s1n

[23:32] *** mberends joined
[23:38] *** Eevee_ joined
[23:40] <mberends> masak: ping

[23:41] *** _jedai_ joined
[23:43] *** |jedai| left
[23:44] *** ZuLuuuuuu joined
[23:54] *** ZuLuuuuuu left
[23:56] *** [particle] joined
[23:57] *** icwiener joined
[23:58] <diakopter> ruoso: ping

