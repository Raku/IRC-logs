[00:09] *** awwaiid left
[00:14] *** simcop2387 left
[00:34] *** gravity joined
[00:59] *** simcop2387 joined
[01:03] *** maerzhase left
[01:13] *** alester joined
[01:27] *** Limbic_Region joined
[01:43] *** meppl left
[01:48] *** alester left
[02:03] *** Limbic_Region left
[02:06] *** rhr joined
[02:17] *** wknight8111 joined
[02:19] *** Whiteknight left
[02:19] *** rhr_ left
[02:20] *** alester joined
[02:27] *** DemoFreak left
[02:27] *** wknight8111 left
[02:29] *** sri_kraih left
[03:08] *** kisu_ is now known as kisu

[03:17] *** gravity left
[03:40] *** hercynium left
[03:42] *** awwaiid joined
[03:44] *** meppl joined
[03:52] *** integral left
[04:02] *** elmex_ joined
[04:17] *** elmex left
[04:17] *** elmex_ is now known as elmex

[04:20] *** kanru left
[04:27] *** kanru joined
[04:41] <meppl> good night

[04:43] *** meppl left
[04:52] *** slavik joined
[05:20] *** lambdabot left
[05:20] *** szbalint left
[05:20] *** jnthn left
[05:20] *** nnunley left
[05:20] *** hcchien left
[05:20] *** broquaint left
[05:20] *** SamB left
[05:20] *** dalek left
[05:20] *** pasteling left
[05:20] *** simcop2387 left
[05:20] *** AzureStone left
[05:20] *** buubot left
[05:20] *** Eevee left
[05:20] *** yahooooo left
[05:20] *** edenc left
[05:20] *** nothingmuch left
[05:20] *** p6eval left
[05:20] *** dmpk2k left
[05:20] *** drbean_ left
[05:20] *** literal left
[05:20] *** Matt-W left
[05:20] *** c1sung left
[05:20] *** slavik left
[05:20] *** elmex left
[05:20] *** alester left
[05:20] *** araujo left
[05:21] *** Trey left
[05:21] *** ilbot2 left
[05:21] *** allbery_b left
[05:21] *** mj41 left
[05:21] *** charsbar_ left
[05:21] *** go|dfish left
[05:21] *** StephenPollei left
[05:21] *** Patterner left
[05:21] *** [particle] left
[05:21] *** Jedai left
[05:21] *** revdiablo left
[05:21] *** awwaiid left
[05:21] *** buu left
[05:21] *** jrockway left
[05:21] *** kidd left
[05:21] *** ruoso left
[05:21] *** silug left
[05:21] *** baest left
[05:21] *** jjore left
[05:21] *** kcwu left
[05:21] *** ingy left
[05:21] *** IRSeekBot left
[05:21] *** r0bby left
[05:21] *** xinming left
[05:21] *** Ehtyar left
[05:21] *** Grrrr left
[05:21] *** frodwith left
[05:21] *** szabgab left
[05:21] *** zev left
[05:21] *** Guest16015 left
[05:21] *** Khisanth left
[05:21] *** cls_bsd left
[05:21] *** sunnavy left
[05:21] *** Tene left
[05:21] *** obra left
[05:21] *** eternaleye_ left
[05:21] *** preflex left
[05:21] *** mtve left
[05:21] *** spinclad left
[05:21] *** Lunchy left
[05:21] *** bsdperl left
[05:22] *** eternaleye_ joined
[05:23] *** Guest16015 joined
[05:24] *** jnthn joined
[05:24] *** slavik joined
[05:24] *** elmex joined
[05:24] *** alester joined
[05:24] *** obra joined
[05:24] *** xinming joined
[05:24] *** Patterner joined
[05:24] *** araujo joined
[05:24] *** lambdabot joined
[05:24] *** Ehtyar joined
[05:24] *** [particle] joined
[05:24] *** preflex joined
[05:24] *** Jedai joined
[05:24] *** Grrrr joined
[05:24] *** frodwith joined
[05:24] *** revdiablo joined
[05:24] *** szbalint joined
[05:24] *** nnunley joined
[05:24] *** hcchien joined
[05:24] *** broquaint joined
[05:24] *** SamB joined
[05:24] *** dalek joined
[05:24] *** charsbar_ joined
[05:24] *** bsdperl joined
[05:24] *** Khisanth joined
[05:24] *** zev joined
[05:24] *** pasteling joined
[05:24] *** StephenPollei joined
[05:24] *** ilbot2 joined
[05:24] *** Trey joined
[05:24] *** allbery_b joined
[05:24] *** mj41 joined
[05:24] *** go|dfish joined
[05:24] *** cls_bsd joined
[05:24] *** Lunchy joined
[05:24] *** spinclad joined
[05:24] *** Tene joined
[05:24] *** szabgab joined
[05:24] *** sunnavy joined
[05:24] *** mtve joined
[05:24] *** irc.freenode.net sets mode: +oo jnthn Tene

[05:28] *** jnthn left
[05:28] *** nnunley left
[05:28] *** szbalint left
[05:28] *** broquaint left
[05:28] *** SamB left
[05:28] *** hcchien left
[05:28] *** dalek left
[05:28] *** lambdabot left
[05:28] *** pasteling left
[05:28] *** slavik left
[05:28] *** Trey left
[05:28] *** ilbot2 left
[05:28] *** araujo left
[05:28] *** allbery_b left
[05:28] *** alester left
[05:28] *** mj41 left
[05:28] *** charsbar_ left
[05:28] *** StephenPollei left
[05:28] *** elmex left
[05:28] *** go|dfish left
[05:28] *** [particle] left
[05:28] *** Jedai left
[05:28] *** Patterner left
[05:28] *** revdiablo left
[05:28] *** szabgab left
[05:28] *** zev left
[05:28] *** frodwith left
[05:28] *** Grrrr left
[05:28] *** Ehtyar left
[05:28] *** xinming left
[05:28] *** cls_bsd left
[05:28] *** sunnavy left
[05:28] *** Tene left
[05:28] *** obra left
[05:28] *** Khisanth left
[05:28] *** mtve left
[05:28] *** spinclad left
[05:28] *** Lunchy left
[05:28] *** bsdperl left
[05:28] *** preflex left
[05:29] *** xinming joined
[05:30] *** kanru left
[05:30] *** jnthn joined
[05:30] *** sunnavy joined
[05:30] *** slavik joined
[05:30] *** elmex joined
[05:30] *** alester joined
[05:30] *** obra joined
[05:30] *** Patterner joined
[05:30] *** araujo joined
[05:30] *** lambdabot joined
[05:30] *** [particle] joined
[05:30] *** preflex joined
[05:30] *** Jedai joined
[05:30] *** Grrrr joined
[05:30] *** frodwith joined
[05:30] *** revdiablo joined
[05:30] *** szbalint joined
[05:30] *** nnunley joined
[05:30] *** hcchien joined
[05:30] *** broquaint joined
[05:30] *** SamB joined
[05:30] *** dalek joined
[05:30] *** charsbar_ joined
[05:30] *** bsdperl joined
[05:30] *** Khisanth joined
[05:30] *** zev joined
[05:30] *** pasteling joined
[05:30] *** StephenPollei joined
[05:30] *** ilbot2 joined
[05:30] *** Trey joined
[05:30] *** allbery_b joined
[05:30] *** mj41 joined
[05:30] *** go|dfish joined
[05:30] *** cls_bsd joined
[05:30] *** Lunchy joined
[05:30] *** spinclad joined
[05:30] *** Tene joined
[05:30] *** szabgab joined
[05:30] *** mtve joined
[05:30] *** irc.freenode.net sets mode: +oo jnthn Tene

[05:31] *** awwaiid joined
[05:31] *** buu joined
[05:31] *** jrockway joined
[05:31] *** kidd joined
[05:31] *** ruoso joined
[05:31] *** silug joined
[05:31] *** r0bby joined
[05:31] *** kcwu joined
[05:31] *** baest joined
[05:31] *** IRSeekBot joined
[05:31] *** ingy joined
[05:31] *** jjore joined
[05:31] *** simcop2387 joined
[05:31] *** AzureStone joined
[05:31] *** buubot joined
[05:31] *** Matt-W joined
[05:31] *** p6eval joined
[05:31] *** dmpk2k joined
[05:31] *** drbean_ joined
[05:31] *** yahooooo joined
[05:31] *** Eevee joined
[05:31] *** nothingmuch joined
[05:31] *** edenc joined
[05:31] *** c1sung joined
[05:31] *** literal joined
[05:34] *** kisu left
[05:37] *** kisu joined
[05:46] *** kanru joined
[06:21] *** Alissi joined
[06:21] *** Alissi left
[06:28] *** mberends left
[06:38] *** justatheory joined
[06:44] *** kisu left
[06:45] *** kisu joined
[06:48] *** kisu_ joined
[06:55] *** kisu left
[07:11] *** mberends joined
[07:18] *** pdcawley joined
[07:26] *** kidd left
[07:47] *** kisu joined
[07:51] *** kisu_ left
[07:57] *** pdcawley left
[08:09] *** vixey joined
[08:15] *** alester left
[08:17] *** ejs joined
[08:32] *** alech left
[08:35] *** alech joined
[08:40] *** integral joined
[08:49] *** DemoFreak joined
[09:00] *** slavik left
[09:35] *** spx2 joined
[09:45] *** Ehtyar joined
[09:46] *** iblechbot joined
[09:47] *** azawawi left
[09:52] *** ejs left
[10:00] *** clintongormley joined
[10:05] *** spx2 left
[10:25] *** rotyei joined
[10:34] *** dtr2 joined
[10:41] *** AaronYoungest joined
[10:41] *** AaronYoungest left
[10:41] *** barney joined
[10:45] *** maerzhase joined
[10:49] *** masak joined
[10:56] <mberends> masak, nice post you wrote at PlanetSix! this dogfood is quite edible!

[10:56] <masak> mberends: which post? :)

[10:57] <mberends> December 30 - Scripters, now is the time! I'm eating as much dogfood as possible.

[10:57] * masak visits Planet Perl Six for the first time in ages

[10:57] <masak> mberends: sounds very good.

[10:57] <masak> I'm very happy on the effect that has on rakudobug

[10:58] <masak> mberends++

[10:58] <mberends> masak++ ;)

[10:59] <masak> mberends: you just entered us into "THe Club of Self-Praise" :P

[10:59] <mberends> oops!

[10:59] * masak wonders if there's a karma bot out there that detects cycles

[10:59] <mberends> ebay has those

[10:59] <masak> ah. of course.

[11:00] <mberends> a question that bothers me is side by side deployment (soon) of Perl 5 and Perl 6

[11:01] <masak> mberends: bothers you in which way?

[11:02] *** pdcawley joined
[11:05] <masak> mberends: I can assure you that it's been on my mind too, by the way. not having access to CPAN is a surefire way to realize its worth.

[11:06] *** rotyei left
[11:07] <mberends> looking at how perl4 lingered on after perl5 came out, there will be a *very* long period of coexistence. But as soon as possible, we should stop calling Rakudo perl6 and just call it perl. I expect numerous name collisions. It's ugly to have extensions like .p6 as well. My current project is a perldoc for pod6, but it will name collide with the inevitable 5.x that will also be there.

[11:08] <mberends> yes, the Perl 6 section in CPAN has only some Perl 5 emulations of Perl 6 features.

[11:09] <masak> mberends: I don't think the transition to Perl 6 will be so bad. It will take time, that's all.

[11:09] <masak> mberends: have you tried writing 'use v6' into newer versions of Perl 5.x?

[11:10] <masak> mberends: (btw, that's why you should prefix all your Perl 6 scripts with 'use v6')

[11:11] <masak> mberends: we've had thoughts of putting November on CPAN. so far we haven't.

[11:11] <dtr2> I need some help with ilbot install, http://www.orderofatlas.com/cgi-bin/ilbot_test2/index.pl - notice how the #ilbot - Today links are messed up? I can't seem to fix it

[11:12] <masak> dtr2: is that a Perl 6 question? doesn't sound like one.

[11:12] <dtr2> ilbot readme says to come here for help.

[11:12] <masak> dtr2: ah. sorry.

[11:12] <dtr2> it was created by an op here

[11:12] <masak> who wrote ilbot?

[11:12] <dtr2> moritz_, was hoping he'd be here

[11:12] <masak> he is, usually.

[11:13] <masak> @tell moritz ping from dtr2 who has trouble installing ilbot.

[11:13] <lambdabot> Consider it noted.

[11:14] <dtr2> thanks

[11:14] <masak> good luck.

[11:14] <masak> speaking of bots...

[11:15] <masak> maybe I should take a crack at writing that spec-ack bot today.

[11:16] <mberends> my approach has been more spartan: just stop writing perl5 code and do whatever is possible with rakudo. as you wrote, it shakes the language harder than 6000 tests, and is the only way to learn. consider me an eager early adopter.

[11:16] <dtr2> i would rather make my own but my client wants ilbot installed, so i can't argue

[11:16] <masak> mberends: I'm 100% with you on that. although I still need Perl 5 occasionally.

[11:16] <masak> dtr2: :)

[11:21] <buu>  What is spec-ack?

[11:21] <masak> buu: a common thing we Perl 6 devs do is to run 'ack' (a relative to 'grep') on the Perl 6 specification directory.

[11:22] <masak> moritz_++ recently suggested that we could turn that task into a bot, somewhat like perl6eval

[11:22] <buu> Ah.

[11:23] <buu> What would the output look like?

[11:24] <masak> buu: minimally, a set of references of the form Sxx:llll

[11:24] <masak> buu: but perhaps also a few words before and after.

[11:26] <buu> Where do they live?

[11:27] <masak> docs/Perl6/Spec/*.pod in the Pugs repo.

[11:27] <buu> Ah.

[11:27] <masak> buu: you have a bot, don't you?

[11:28] <buu> Yes.

[11:28] * mberends quickly does 'sudo apt-get install ack-grep'

[11:28] <masak> buu: any beginner tips? what's the fastest route to putting a bot in this channel?

[11:28] * masak wishes there were a bot toolkit

[11:29] <buu> Well

[11:29] <buu> You could make a buubot plugin extremely simply.

[11:29] <masak> \o/

[11:30] <masak> buubot: who's a cure little bot? who's a cute little bot? YOU are! yes, you are.

[11:30] <dtr2> i don't know much about perl, but from reading source of ilbot(many times) there's a simple bot mod

[11:30] <masak> dtr2: aye, there is. several, even.

[11:31] <masak> buu: does buubot run from feather?

[11:31] *** Hell_Kaiser joined
[11:32] * ruoso just suggested supporting routine_def:<coro> in STD ;)

[11:32] <mberends> buu: 378/9 # Turing test for bots

[11:33] <buu> masak: No..

[11:34] *** justatheory left
[11:34] <masak> I'm thinking of just making something small from POE::Component::IRC and putting it on feather.

[11:37] <masak> Juerd: is there a central, regularly svn upped Pugs directory on feather?

[11:39] *** xinming left
[11:39] <masak> mberends: re extensions: generally, I prefer having no extension at all on my scripts. that solves the .pl/.p6 issue. extension don't work anyway (as sufficient clues for programs who want to process the file). I use a shebang line instead.

[11:39] *** xinming joined
[11:48] <buu> Ok, that was way too much effort.

[11:49] <buu> buubot: ackspec control

[11:49] <buubot> buu: S01-overview.pod:0 S02-bits.pod:15 S03-operators.pod:7 S04-control.pod:38 S05-regex.pod:20 S06-routines.pod:12 S07-iterators.pod:0 S09-data.pod:0 S10-packages.pod:1 S11-modules.pod:0 S12-objects.pod:2 S13-overloading.pod:1 S16-io.pod:3 S17-concurrency.pod:4 S19-commandline.pod:0 S22-package-format.pod:1 S26-documentation.pod:1 S29-functions.pod:5

[11:49] <masak> buu: nice.

[11:50] <buu> buubot: ackspec continuation

[11:50] <buubot> buu: S01-overview.pod:0 S02-bits.pod:0 S03-operators.pod:0 S04-control.pod:4 S05-regex.pod:0 S06-routines.pod:0 S07-iterators.pod:0 S09-data.pod:0 S10-packages.pod:0 S11-modules.pod:0 S12-objects.pod:0 S13-overloading.pod:0 S16-io.pod:0 S17-concurrency.pod:1 S19-commandline.pod:0 S22-package-format.pod:0 S26-documentation.pod:0 S29-functions.pod:0

[11:50] <masak> do you think you could filter away those with 0 hits?

[11:50] <buu> Hrm, yeah

[11:50] <buu> Stupid grep.

[11:50] <masak> also, a synonym 'spack' would be much appreciated :)

[11:51] <masak> buu++

[11:53] <buu> buubot: spack continuation

[11:53] <buubot> buu: S04-control.pod:4 S17-concurrency.pod:1

[11:53] <masak> excellent.

[11:53] <ruoso> cool

[11:53] <ruoso> buubot: spack coroutine

[11:53] <masak> buubot++

[11:53] <buubot> masak:  To be  or not to be, that's what the question is! or not to be, that's what the question is or not to be, that's what the question is or not to be, that's what the question is. Ain't that so, GumbyBRAIN? I think it is: that's what some smart dude said. or not to be, that's what the question is. Ain't that so, GumbyBRAIN? I think it is: that's what

[11:53] <buu> haha

[11:53] <buu> what

[11:53] <ruoso> buubot: spack coro

[11:53] <masak> :D

[11:54] <ruoso> buubot doesn't like e

[11:54] <ruoso> s/e/me/

[11:54] <buu> I think I broke it.

[11:54] <buu> One sec.

[11:54] <masak> the people shouts 'we demand our buubot'

[11:54] <masak> s/s//

[11:55] <masak> today seems to be a day when wishes come true :) so, may I also wish for a resurrection of run.pugscode.org, but for Rakudo? I think that'd be great for people who'd like to play with Rakudo, but are too lazy/hesitant to download it just yet.

[11:56] <buu> buubot: spack continuation

[11:56] <buubot> buu: S04-control.pod:4 S17-concurrency.pod:1

[11:56] <ruoso> buubot: spack coroutine

[11:56] <buubot> ruoso: Sorry, I couldn't find any matches for: coroutine

[11:56] <ruoso> buubot: spack coro

[11:56] <buubot> ruoso: S17-concurrency.pod:6

[11:56] <ruoso> :P

[11:56] <masak> now who put that there, I ask. :)

[11:57] <buu> I'm just searching over a svn co out of uh

[11:57] <buu> Perl6/spec

[11:57] <masak> right.

[11:57] <ruoso> masak, I think someone who also thought that routine_declarator:<coro> is a nice thing to support

[11:57] <masak> ruoso: I think you might be right.

[11:58] <masak> Pugs has coro, methinks.

[11:58] <buu> I could make the plugin try to svn up

[11:58] <buu> I'll have to think about it.

[11:58] <masak> buu: that might be a good idea.

[11:59] <masak> buu: perhaps put in a 'last-updated' check, so it doesn't update every time.

[11:59] <buu> I don't want to do it too often.

[11:59] <ruoso> pugs: coro foo { yields 1; yields 2 }; say foo(); say foo();

[11:59] <p6eval> pugs: OUTPUT«*** No such subroutine: "&yields"␤    at /tmp/4MDhPIDoL1 line 1, column 12-20␤»

[11:59] <ruoso> pugs: coro foo { yield 1; yield 2 }; say foo(); say foo();

[11:59] <p6eval> pugs: OUTPUT«1␤2␤»

[11:59] <ruoso> indeed

[11:59] <masak> ruoso: just 'yield', I think.

[11:59] <buu> http://erxz.com/pb/14490

[11:59] <buu> spack.pm ^

[12:00] <ruoso> TimToady, can I have a ponie^W^Wcoro in STD?

[12:00] <masak> buu: nice.

[12:01] <masak> buu: I understand that you've also reached the ideal of 'no bot restart'.

[12:02] <buu> Sure.

[12:02] <masak> impressive.

[12:03] <buu> bb2 is pretty cool, but I'm currently in the middle of bb3

[12:03] <buu> Which is Moar Better.

[12:03] <masak> I should do that with my bot. need modularization first, though.

[12:03] <masak> buu: ok, what's the big difference?

[12:03] <masak> lunch &

[12:04] <buu> Like every other rewrite it's essentially a giant refactor, I drop code I don't need, I modularize code I do need, and I've fairly radically changed the interface.

[12:04] <buu> bb2 has a bunch of design decisions that nobody but me understands.

[12:04] * ruoso needs to focus on other projects... 

[12:04] <masak> :)

[12:05] <buu> For example..

[12:05] * ruoso is too much addicted to Perl 6 development

[12:05] <buu> buubot: echo 2+2

[12:05] <buubot> buu: 2+2

[12:05] <buu> buubot: echo 2+2 | eval

[12:05] <buubot> buu:  4

[12:05] <buu> buubot: echo: 2+2 | eval

[12:05] <buubot> buu: 2+2 | eval

[12:05] <buu> Nobody in the entire world has ever understood that particular feature.

[12:06] <mberends> buubot: echo 378/9 | eval

[12:06] <buubot> mberends:  42

[12:07] <mberends> buubot++

[12:07] <buubot> mberends:  To be  or not to be, that's what the question is! or not to be, that's what the question is or not to be, that's what the question is or not to be, that's what the question is. Ain't that so, GumbyBRAIN? I think it is: that's what some smart dude said. or not to be, that's what the question is. Ain't that so, GumbyBRAIN? I think it is: that's what

[12:08] <buu> I think you can also do..

[12:08] <buu> buubot: eval $(echo 2+2)

[12:08] <buubot> buu:  4

[12:09] <mberends> handy

[12:09] <ruoso> buu, can this to be or not to be message be shorter? people here is used to add karma to everything....

[12:10] <buu> buubot: forget++

[12:10] <buu> buubot: forget ++

[12:10] <buubot> buu: I forgot 

[12:10] <buu> buubot++

[12:11] <ruoso> cool

[12:11] <buu> It's a bit of a flaw.

[12:25] * ruoso logs off from irc, so he can focus on other projects... (Perl 6 development can be very addictive)

[12:25] *** ruoso left
[12:32] *** pmurias joined
[12:33] *** barney left
[12:33] *** DemoPhreak joined
[12:35] *** maerzhase left
[12:37] *** DemoFreak left
[12:47] <masak> ruoso: tell me about it.

[12:51] * clintongormley wishes he had time to get addicted to p6 :(

[12:53] *** barney joined
[12:55] *** maerzhase joined
[13:00] <Juerd> masak: There's the svk repository itself...

[13:00] <Juerd> masak: http://feather.perl6.nl/svk.html

[13:01] *** masak` joined
[13:07] *** revdiablo left
[13:09] *** revdiablo joined
[13:10] <rakudo_svn> r34804 | masak++ | [rakudo] corrected documentation -- C<eval> is not to be found in

[13:10] <rakudo_svn> r34804 | masak++ | src/builtins/eval.pir, but src/builtins/control.pir

[13:13] *** kanru left
[13:16] *** masak left
[13:17] *** revdiablo left
[13:21] *** revdiablo joined
[13:26] *** revdiablo left
[13:27] *** revdiablo joined
[13:31] *** azawawi joined
[13:31] *** kanru joined
[13:37] <pugs_svn> r24732 | particle++ | [spec] get rid of ugly and confusing C<+option> syntax (bad unix memes)--

[13:37] *** justatheory joined
[13:46] <pugs_svn> r24733 | pmurias++ | [smop]

[13:46] <pugs_svn> r24733 | pmurias++ | fix memory leakage from p5 interop

[13:46] <pugs_svn> r24733 | pmurias++ | t/p5.t still suffers from memory leakage cause by a knowhow

[13:47] *** ejs joined
[13:51] *** kisu_ joined
[13:55] *** kisu left
[14:05] *** ejs left
[14:07] *** masak` is now known as masak

[14:15] *** smtms left
[14:15] <masak> pmurias: : a memory leakage caused by a knowhow?

[14:15] <pugs_svn> r24734 | particle++ | [spec] options must appear before script name; update version/date metadata

[14:17] <pmurias> knowhows leak memory in smop

[14:17] <masak> pmurias: what are they?

[14:17] <pmurias> knowhows are primitive classes used for bootstraping the metamodel

[14:18] <masak> aha.

[14:18] <pmurias> s/primitive/simplified

[14:18] * masak has to go

[14:18] *** masak left
[14:20] <rakudo_svn> r34808 | pmichaud++ | [rakudo]: spectest-progress.csv update: 264 files, 5911 passing, 0 failing

[14:21] *** xinming_ joined
[14:24] *** meppl joined
[14:39] *** xinming left
[15:08] *** masak joined
[15:10] <masak> there's a pir script examples/library/ncurses_life.pir in the Parrot repo. I'm interested in ways to get ncurses to work from inside of Rakudo.

[15:11] *** eric2561 left
[15:11] <masak> that, along with the reading of single characters, would make realtime ASCII games such as nibbles possible.

[15:12] <pmichaud> I'm really focused on getting the rvar branch finished today, but can look at it when I need a break or when I'mdone

[15:12] <pmichaud> (tickets are stacking up in the rt queue, and the rvar branch resolves many of them)

[15:13] <masak> pmichaud: woot. good luck with the branch.

[15:13] <pmichaud> it's going very well.

[15:13] <[particle]> when a hash autovivifies a key, what's the value?

[15:13] <lambdabot> [particle]: You have 1 new message. '/msg lambdabot @messages' to read it.

[15:13] <masak> rwar!

[15:13] <[particle]> @messages

[15:13] <lambdabot> moritz_ said 18d 19h 43m 3s ago: I've glanced over S19 and I think there should be an --encoding option to specify the encoding of the source file

[15:13] <[particle]> @messages erase

[15:13] <lambdabot> You don't have any new messages.

[15:13] <pmichaud> particle:  depends on the value type of the hash, I suspect

[15:13] <[particle]> grr. how do i erase that message?

[15:14] <masak> [particle]: it's erased.

[15:14] <[particle]> no, it's not, it keeps coming back

[15:14] <pmichaud> my Int %h;    #  keys autovivify to Int protoobject

[15:14] <masak> [particle]: oh.

[15:14] <[particle]> pmichaud: i'm thinking of command-line options here

[15:14] <pmichaud> [particle]: example?

[15:14] <[particle]> :name=val1,val2,val3

[15:14] <[particle]> :name has an @ sig, so accepts a list

[15:15] <[particle]> if i provide an empty list, like :name

[15:15] <[particle]> what happens?

[15:15] <pmichaud> why does :name get an @sig ?

[15:15] <[particle]> hang on...

[15:15] <pmichaud> (haven't read S19, so I'm behind)

[15:15] <[particle]> here's some text i'm working on:

[15:16] <[particle]> it's not in S19 yet

[15:16] <[particle]> Option signatures determine how many values the option may take.

[15:16] <[particle]> Options with a C<Bool> signature are boolean flags, which do not take a value.

[15:16] <[particle]> Options with a C<$> signature accept a single value, which B<must> be provided (there is no default).

[15:16] <[particle]> Options with a C<@> signature accept a list of values.

[15:16] <[particle]> something like: "If no values are passed, and empty list is generated."

[15:17] <[particle]> or, "At least one value must be passed."

[15:17] <[particle]> are the possibilities i see atm

[15:17] <pmichaud> where do the signatures come from?

[15:17] <[particle]> they'll be defined per-option

[15:17] <[particle]> -e is $, -c is Bool

[15:18] <pmichaud> do they need to be?

[15:18] <[particle]> i don't think any perl6 options will be @, but these rules apply to Perl 6 scripts as well

[15:19] <[particle]> this affects MAIN

[15:20] <pmichaud> why isn't it just:

[15:20] <pmichaud> multi sub MAIN(:$e, Bool :$c, :@foo)   

[15:22] <[particle]> well, i need to somehow specify long and short names, for one

[15:23] <pmichaud> multi sub MAIN( :e($exec), Bool :c($compile), :f(@foo) )

[15:23] <pmichaud> (S06 already has this.)

[15:23] <[particle]> ah, thanks, forgot that syntax.

[15:24] <[particle]> still, what happens with :f(@foo) when it's passed with no list?

[15:24] <pmichaud> it should be an empty list, yes?

[15:24] <[particle]> the hash exists, but has no key/value pairs, i suppose

[15:25] <pmichaud> what "hash"?

[15:25] <pmichaud> I see no hash there.

[15:25] <[particle]> er, array with no values

[15:25] <pmichaud> right, it's an array with no values.

[15:25] <[particle]> sorry, i'm sleep- and food-deprived atm

[15:25] <pmichaud> and if the list is required, then one would do   :f(@foo)!

[15:26] <pmichaud> but note that (imo)   :f($foo)   should still accept a list option

[15:26] <[particle]> right-o. so i'll write out the signature for perl6 and be done with it. is that only or multi? hrmm

[15:27] <[particle]> pmichaud: you mean like -e "$_ = 'hello';",".say"

[15:27] <pmichaud> i.e., if I have  :f($foo),  then I should still get a list as a result of   --foo=val1,val2,val3

[15:28] <pmichaud> if the option syntax supports that mechanicm of passing arguments, then yes.

[15:28] <pmichaud> I didn't see that in S06, though.

[15:28] <[particle]> :name=val1,'val 2',etc     :name«val1 'val 2' etc»

[15:28] <[particle]> On command line...         $*ARGS capture gets...

[15:28] <[particle]> i should have prefaced that

[15:29] <pmichaud> yes, I'm looking at the same table.

[15:29] <pmichaud>     --name val1 'val 2' etc    :name«val1 'val 2' etc» # only if declared @

[15:29] <pmichaud> how would --name know when to stop processing arguments?

[15:30] <[particle]> when it runs across another option, i gather

[15:30] <[particle]> i'm not 100% on that one yet, it's timtoady's from long ago, and needs some testing imo

[15:31] <pmichaud> how do we do the "only if declared @" part?

[15:31] <s1n> [particle]: i like how s19 is turning out

[15:31] <[particle]> s1n: thanks!

[15:31] <pmichaud> looks like it has to introspect MAIN

[15:31] <s1n> i've been watching the commits, it's looking cleaner

[15:32] <s1n> i'm still on the fence about the {} block thing though

[15:32] *** xinming joined
[15:32] <pmichaud> introspecting MAIN as a set of multis is going to be .... interesting.

[15:33] <[particle]> yeah, i know. :(

[15:33] <s1n> [particle]: wait, is --n=value shorthand for --name=value?

[15:33] <[particle]> s1n: yes

[15:33] <[particle]> er, no

[15:33] <pmichaud> s1n: it is if 'n' is the shortname for 'name'

[15:33] <[particle]> -n=value is short name for --name=value (note single -)

[15:34] <s1n> okay

[15:34] <pmichaud> oh, right.

[15:34] <s1n> that email you sent said otherwise

[15:34] <[particle]> no, the email says if you want to set 'n' to 'value', use --n=value

[15:35] <pmichaud> ('n' can be a longname also)

[15:35] <[particle]> -n=value will set name to value (assuming...)

[15:35] <s1n> i'm confused

[15:36] <[particle]> multi sub MAIN(:n($name), :$n);

[15:36] <s1n> so is -n or --n shorthand?

[15:36] <[particle]> myprog --name=value1 -n=value2 --n=value3

[15:36] <s1n> what's the difference between --n=value and -n=value?

[15:37] <[particle]> sets :name to value2, and :n to value3

[15:37] <[particle]> they're different variables

[15:37] <s1n> oh..

[15:37] <[particle]> -n is short name for --name

[15:37] <[particle]> --n is its own variable

[15:37] <s1n> okay, that's... where do you draw the line on the shortening of those variables?

[15:37] * masak sees possible occasions for confusion there

[15:37] <s1n> is --na shorthand for --name?

[15:37] <[particle]> no

[15:37] * s1n agrees with masak

[15:38] <[particle]> -\w never -\w+

[15:38] <s1n> i think that'll be a sore spot

[15:38] <pmichaud> I'm not sure that Perl 6 allows   :n($name) :$n

[15:38] <s1n> in most, if not all, unix commands, shorthanding options uses only 1 -

[15:38] <s1n> --pretend equals -p

[15:38] <s1n> not --p

[15:39] <[particle]> s1n. that's the same here

[15:39] <masak> [particle]: what's the advantage of having both -n and --n?

[15:39] <pmichaud> s1n:  --p isn't a shorthand

[15:39] <s1n> what?

[15:39] *** smtms joined
[15:39] <[particle]> -p is short for --pretend

[15:39] <s1n> you just said --n would set --name

[15:39] <[particle]> --p is the long name for --p

[15:39] <[particle]> -n sets --name

[15:39] <pmichaud> but particle, this might all be moot

[15:39] <[particle]> --n sets --n

[15:39] <pmichaud> sub MAIN( :n($name), :$n )    #  might be illegal

[15:40] <[particle]> pmichaud: yes, i'll have to raise that as a question, i suppose

[15:40] <s1n> oh, okay, well, that'll be fun

[15:40] <[particle]> ...enough rope...

[15:40] <pmichaud> I don't think we can have two named parameters with the same name.

[15:40] <s1n> imho (which may not be worth anything), that's going to confuse people

[15:40] <pmichaud> s1n: I don't think it's going to work that way in practice.

[15:41] <pmichaud> normally someone would do

[15:41] <[particle]> it'd work out better for me to implement it if you can't have -p and --p

[15:41] <pmichaud> sub MAIN( :p($pretend) )

[15:41] <[particle]> maybe outlaw single-letter long names?

[15:41] <s1n> [particle]: i would agree, --p _and_ -p would not be a good idea

[15:41] <pmichaud> and then --p  would result in a "parameter 'p' not found"

[15:41] <s1n> [particle]: yes

[15:41] <masak> [particle]: I was just going to say that :)

[15:41] <pmichaud> no need to outlaw single-letter long names

[15:42] <s1n> single letter long names greatly confuses matters

[15:42] <pmichaud> only because you all are likely starting from a false premise

[15:42] <pmichaud> if I write

[15:42] <pmichaud> sub MAIN( :$q )

[15:42] <s1n> pmichaud: that premise being that they're generally not accepted anywhere else?

[15:42] <pmichaud> then I would expect --q to work

[15:42] <pugs_svn> r24735 | particle++ | [S19] explain how script passed on command-line or via STDIN works

[15:43] <[particle]> pmichaud: and you'd also expect -q to work

[15:43] <pmichaud> [particle]: yes.

[15:43] <pmichaud> so "outlawing single letter names" isn't the write answer here.

[15:43] <s1n> that's enough rope to not only hang yourself but also the guy next to you

[15:43] <[particle]> *right. yeah.

[15:43] <pmichaud> s1n: the false premise being that a single-letter name can serve as both a shortcut for a different long name and a long name in its own right

[15:44] <s1n> well, pmichaud may have more authority than i, but my vote is to disambiguate the two

[15:44] <pmichaud> I did.

[15:44] <pmichaud> (disambiguate the two)

[15:44] <s1n> by allowing --p as a long name?

[15:45] <pmichaud> s1n: by saying that if --p is a long name there can't be a separate -p short name.

[15:46] <s1n> oh i didn't catch where you said that

[15:46] <s1n> well, if you have one, then you can't have the other, that's fine too

[15:46] <[particle]> yep, i'll work up some text on that, after i finish writing the signature for perl6

[15:46] <[particle]> ut oh.

[15:47] <[particle]> perl6 -e "foo()" -e6 "bar()"

[15:47] <[particle]> hrmm, i guess that could work

[15:47] <[particle]> as long as -e and -e6 contain full statements

[15:47] <pmichaud> -e6 is short for -e=6, yes?

[15:47] <s1n> [particle]: why the 6?

[15:47] *** jhorwitz joined
[15:47] <[particle]> Execute in lax mode, without strictures and warnings enabled.

[15:48] <pmichaud> is that -e -6   or -e=6 ?

[15:48] <[particle]> ah, right, good catch

[15:48] <pmichaud> seems to me we can't have a single '-' with a long name

[15:48] <s1n> or maybe just -6 or -x

[15:49] <[particle]> i'm thinking -6

[15:49] <pmichaud> also, there doesn't seem to be a way to do -6

[15:49] <s1n> are there any plans for something like -l in perl5?

[15:49] <pmichaud> sub MAIN( :6($six) )   # not legal, afaik

[15:49] <pmichaud> I suppose one could get -6 via the slurpy hash

[15:49] <s1n> oh, i guess that's -F

[15:49] <[particle]> that's problematic

[15:50] <masak> oh, we're >200 perl6 bugs.

[15:50] <pmichaud> masak: many of those are duplicates

[15:50] <pugs_svn> r24736 | pmurias++ | [smop] method calls on p5 objects use Coro

[15:50] <s1n> masak: that means we're getting attention now :)

[15:50] <masak> ok.

[15:50] <pmichaud> and about a dozen or so are fixed in the rvar branch already

[15:50] *** xinming_ left
[15:52] <s1n> [particle]: are ++ options able to be abbreviated as well? it doesn't look like it to my untrained eye heh

[15:52] <[particle]> no

[15:52] <s1n> bummer

[15:53] <[particle]> they're meant to stand out because they're special

[15:53] <s1n> that's why they're shouted heh

[15:53] <[particle]> so they're long name only, and uppercase

[15:53] <s1n> [particle]: what about a shorthand for --doc?

[15:54] *** hercynium joined
[15:54] <[particle]> i don't think it needs it, but it might be -d

[15:54] <s1n> it's the only long name without

[15:57] <[particle]> pmichaud: how do i specify 0 or one values for a named param? use a where clause?

[15:57] <[particle]> ah, i can use default, nevermind.

[15:57] <pmichaud> how do you mean "0 or one values"?

[15:57] <[particle]> :O($output-format), # 0 or 1 values

[15:58] <[particle]> it defaults to 'exe'

[15:58] <pmichaud> so, you mean   :O($output-format) = 'exe'     ?

[15:58] <[particle]> yep

[15:58] <pmichaud> right

[15:58] <pmichaud> named parameters are already optional (0 or 1 values)

[15:59] <[particle]> right, but it can be specified without a value and accepts the default

[15:59] <pmichaud> yes.

[15:59] <[particle]> so, done.

[16:00] <pmichaud> do we really expect all perl6's to be able to produce an executable?

[16:00] *** simcop2387 left
[16:01] <[particle]> what do we expect, an ast? parse tree?

[16:01] <pmichaud> what if someone wrote a perl 6 interpreter?

[16:01] <pmichaud> it just seems weird.

[16:02] <[particle]> so, no default, every value is impl-specific?

[16:02] <pmichaud> but yes, I suppose we could say "if an implementation does this, this is how it should do it"

[16:02] <pmichaud> I wonder what Parrot would do if we didn't have the pbctoexe option.

[16:03] <[particle]> cry.

[16:03] *** estrabd joined
[16:03] <pmichaud> and is an implementation allowed to "cheat" by simply writing the source to a file with the executable bit set?  ;-)

[16:04] *** clintongormley left
[16:04] <pmurias> mildew atm produces an executable by default when passed an -o

[16:05] *** simcop2387 joined
[16:06] <[particle]> s1n: the reason i don't use -d, -o, or -c for a short name for --doc is that two of them are used, and -d will confuse perl 5 programmers

[16:06] <pmichaud> keep huffman in mind when doing short names also

[16:06] <[particle]> of course

[16:08] <pugs_svn> r24737 | particle++ | [spec] add signature for perl6, and make --output-format entirely implementation-specific

[16:13] <[particle]> >perl -e "my $x = 0;" -e "print $x" -e "if $x"

[16:13] <[particle]> >perl -e "my $x = 1;" -e "print $x" -e "if $x"

[16:13] <[particle]> 1

[16:13] <[particle]> this will be a problem with -e6

[16:13] <[particle]> i mean, mixing -e and -e6

[16:13] *** kisu__ joined
[16:17] <pugs_svn> r24738 | particle++ | [spec] add note about dangers of mixing -e and -e6

[16:17] <s1n> [particle]: can i request a section describing ++CMD, i'd like to see more about that

[16:18] <[particle]> yep, will do. need to replace ++RTS section with one describing all ++ metasyntax

[16:18] <s1n> that sounds good

[16:19] *** kisu_ left
[16:19] <s1n> is -e6 still a good idea?

[16:24] *** eric256 joined
[16:24] <eric256> perlmonks has a post about perl6 development at http://perlmonks.org/?node_id=733639 if someone wants to go say hi ;)

[16:27] *** stephens joined
[16:27] *** kisu__ left
[16:27] <masak> eric256: interesting. I might add something to that one.

[16:28] <s1n> why is everyone intent on bringing up the fact that there hasn't been a 1.0 release of perl6? i'd rather wait 20 years for a language/compiler that does everything i want than get something like python 3000

[16:28] <masak> s1n: fwiw, I don't think Python 3000 is all bad.

[16:29] <eric256> s1n: because then there would be something and not nothing ;) flame wars aside an nice release of even a limited version of specs would be nice.  as it is they can pretty much all still change completly

[16:29] <eric256> i don't fault anyone for wanting something now rather than later. thats just human nature

[16:30] <s1n> eric256: there is something, the spec, parrot, rakudo, smop

[16:30] <masak> eric256: there are monthly releases of Parrot.

[16:30] <s1n> saying there's nothing is just lazy whining

[16:30] <s1n> the work the guys in here put into perl6 is like a full-time job

[16:30] *** DemoPhreak is now known as DemoFreak

[16:31] <s1n> just because there aren't hordes of developers like python doesn't mean it doesn't exist

[16:32] <masak> eric256: I understand your comment, but there are regular releases of something. I don't think that the Rakudo devs are holding anyu

[16:32] <masak> ...holding anything back.

[16:33] <masak> that's what makes me so enthusiastic about current Perl 6 development.

[16:33] <masak> and that's what I want to make known in my blog posts.

[16:34] <s1n> how many releases of parrot have there been? remember, each one of them includes a release of perl6 (now)...

[16:34] <masak> s1n: I don't know. at least one each month during 2008.

[16:34] <s1n> so that's at least 12

[16:34] <masak> and the history of Rakudo doesn't go back much further than that.

[16:34] <masak> (I think.)

[16:35] <s1n> so there have been at least 1 year of perl6 releases

[16:35] <s1n> whether you like the implementation in there or not is not the point

[16:35] <s1n> it's still there

[16:35] <masak> aye

[16:35] <masak> the trick is to let the right target group find that out at the right moment :)

[16:36] <masak> early adopters, etc

[16:36] <s1n> i wish people would stop citing the "8 years of development" thing and just check the svn history already

[16:36] <masak> s1n: some people, yes.

[16:36] <masak> Rakudo is not for everyone, yet.

[16:36] <s1n> yet

[16:37] <s1n> at the very least it could be a toy for them

[16:37] <s1n> something to dip their toes into

[16:37] <s1n> so what if it doesn't toast your bread yet, it's there

[16:37] <masak> I'm acutely aware of that. I can make Rakudo segfault consistently on only slightly advanced stuff.

[16:37] <eric256> s1n:  thats fine for people who are in the know. but for a regular perl5 developer looking at it all you have are specs that contsantly change. so its not lazy whining

[16:37] <s1n> so, how many bugs are reported against various other compilers though?

[16:38] <eric256> and i'm not saying that all the work contributed is nothing

[16:38] <masak> s1n: the point is that some target groups don't care about Rakudo in its current state. and they're totally in their right to do so.

[16:38] <s1n> posts like that suggest that much though

[16:38] <eric256> but there is no perl6 yet, parrot isn't perl6

[16:38] <masak> eric256: what do you mean 'there is no perl6 yet'?

[16:38] <s1n> they don't have to care, implying there's nothing because there's no concrete compiler is just writing off all the hard work these people do

[16:39] <s1n> see

[16:39] <s1n> that's what i'm talking about

[16:39] <eric256> perl6 specs can change at a moments notice right? so there is no perl6 as gospel yet

[16:39] <masak> eric256: I think saying that like it's true can be a dangerous thing. I know you know Rakudo exists.

[16:39] <masak> eric256: that's a feature, not a bug.

[16:39] <s1n> "there is no perl6 yet" ~~ "you guys don't have anything even remotely stable or useful, thus there is nothing yet"

[16:39] <eric256> masak: maybe ;)

[16:39] <eric256> but it means that people can't right perl6 code and expect it to keep working in 6 months cause the spec could change

[16:39] <pmurias> eric256: that perl6 spec have to change as things are uncovered during implementation

[16:40] <s1n> that's just a slap in the face to everyone's hard work

[16:40] <masak> eric256: no, not maybe. note "the community's rewrite of the community". that's what's happening right now with the specs.

[16:40] <eric256> s1n: you can read it that way, but thats not the same thing

[16:40] <pmichaud> the spec doesn't change in its fundamentals anymore.

[16:40] <eric256> pmurias: definitly i'm not saying they shouldn't change

[16:40] <pmichaud> the changes to the spec tend to be very esoteric things that matter to implementors more than end users.

[16:40] <eric256> or that this isn't the right process, i just want to put there comments in perpective

[16:40] <pmichaud> or refinements to the spec.

[16:40] <eric256> perspective...err however you spell that

[16:40] <pmichaud> on another topic, for those who would like to help spread another resource:  http://www.perlfoundation.org/perl6/index.cgi?rakudo_feature_status

[16:41] <masak> s1n: Rakudo is remotely stable, just not stable :)

[16:41] <pmichaud> I figure a wiki page might be easier to search than RT.

[16:41] <pmichaud> (also, feel free to add comments and other items to that page)

[16:41] <eric256> pmichaud++ i was thinking about goint through RT and doing something similar. mind if i make those links to the actual bugs?

[16:42] <s1n> i personally think that rakudo is looking great

[16:42] <pmichaud> eric256: I don't mind, no.  And the idea came from someone via priv msg.

[16:42] <eric256> s1n: it definitly is

[16:42] <s1n> the work these guys have done is amazing

[16:42] <pmichaud> (and I thought:  gee, we really need that list now.)

[16:42] <pmichaud> actually, the original question was "what does work"?   :-)

[16:42] <s1n> how pmichaud and [particle] et. all can do this work and still have a job/family is amazing

[16:42] <pmurias> eric256: and most of the things that work in rakudo won't change

[16:43] <masak> Rakudo can be used for more things already than people perhaps realize.

[16:43] <eric256> pmurias: i hope so ;) 

[16:43] <s1n> eric256: the real question is not "what works?" it should be "what doesn't work?"

[16:44] <s1n> people don't say it enough, but i am personally very thankful these guys bust their hump in the name of perl6

[16:44] <s1n> just because they're not fast, is no reason to write it off as "no release"

[16:45] <s1n> (fast as in as fast as the hordes of python devs)

[16:45] <s1n> in fact, pmichaud, i owe you a beer (since you actually live in my town) heh

[16:47] <eric256> s1n: couldn't agree with you more

[16:47] <eric256> i'm looking forward to line numbers in errors so we can get a good smoke report of rakudo going

[16:47] <masak> s1n: where does the idea that Python devs are faster than Perl 6 devs come from? the Python devs are not trying to implement Perl 6 :)

[16:48] *** kisu joined
[16:48] <eric256> now we just need to get masak to update the wiki with all his bugs ;)

[16:48] <s1n> masak: i agree, but there are many more of them than us

[16:48] <masak> eric256: hey! I'm busy finding bugs.

[16:48] <pmichaud> I don't need a list of all bugs -- that's what RT is for.  I just want to get the "common" ones that tend to trip people up.

[16:48] <masak> why would I want to do double work?

[16:48] <eric256> masak++

[16:48] <eric256> pmichaud: definitly

[16:48] <pmichaud> e.g., the problems with parameter passing, and with autovivification, laziness,e tc.

[16:49] <masak> seriously. don't reinvent RT.

[16:49] <masak> describing things is ok, I guess.

[16:49] <masak> sort of a FAQ for common bugs, as pmichaud says.

[16:49] <s1n> pmichaud: i agree, get the fundamentals working, and while people start playing with that you can get the more esoteric and fringe features working

[16:49] *** rindolf joined
[16:51] <s1n> i think while all these guys fight the good fight, there's still 2 jobs that kinda need to be filled: bug wranglers and implementors/evangelists

[16:52] <eric256> are all perl6 bugs on RT for rakudo? or are there still pugs bugs in there?

[16:53] *** xinming_ joined
[16:53] <pmichaud> pugs never used RT

[16:53] <eric256> oh good. could have swarn i saw a bug for pugs in there. odd musta misread

[16:54] * pmichaud goes back to rvar branch.

[16:59] *** simcop2387 left
[17:01] *** xinming left
[17:07] *** dlocaus joined
[17:07] *** dlocaus left
[17:09] *** simcop2387 joined
[17:09] *** armagad joined
[17:11] <eric256> particle++ excellent reply to the above perlmonks link

[17:11] <masak> eric256, s1n: I've had the "Perl 6 doesn't exist yet" discussion before on the channel. it didn't end well. http://irclog.perlgeek.de/perl6/2008-11-12#i_683777

[17:12] <masak> there's always the tradeoff between correcting people and keeping them around.

[17:14] <eric256> s1n:  you need to add a job to your list to be filled: PR :)

[17:14] <s1n> masak: he was bad mouthing perl5 too, did you expect much out of that?

[17:15] <s1n> eric256: PR is the last resort of failure

[17:15] <masak> s1n: I don't know. I expected him to be reasonable. he seemed a reasonable person.

[17:15] <eric256> s1n: naw. its getting the public to see it your way

[17:15] <eric256> thats much different

[17:15] <s1n> no, it's not

[17:15] <masak> s1n: what makes you say that? in the best case, PR is automatic. done by a satisfied community.

[17:16] <pmichaud> particle++  # excellent reply.

[17:16] <s1n> masak: i agree, having to go out and tell other people by that our product actually isn't crap is like admitting there's some validity to their thought

[17:16] <masak> s1n: sure.

[17:16] <s1n> if it isn't crap, everyone will act as PR for us, not the other way around

[17:17] <masak> s1n: that's not what I want to say either.

[17:17] <eric256> dictionary.com lists it as " The art or science of establishing and promoting a favorable relationship with the public."

[17:17] <masak> s1n: saying "Rakudo isn't crap!" would indeed be counterproductive. :)

[17:17] <s1n> masak: saying it isn't vaporware is the same thing

[17:18] <masak> s1n: no. "crap" is subjective. "vapourware" is fact.

[17:18] <s1n> if we want PR, the best kind are implementations, actual software

[17:18] <eric256> masak,  s1n: "Rakudo implements perl6" isn't the same as saying "perl6 does exist"

[17:18] <masak> eric256: to me, it is.

[17:18] <eric256> thats why you need a PR person ;) lol

[17:18] <eric256> well not you

[17:18] <eric256> we

[17:18] <eric256> us

[17:18] <eric256> them

[17:18] <s1n> telling people that is just semantics

[17:18] <eric256> it?

[17:19] <eric256> the world goes round on semantics

[17:19] <masak> this is a very interesting discussion. but I have to go. see you tomorrow.

[17:19] <eric256> you were just pretty vocal about semantics a minute ago

[17:19] <eric256> later masak

[17:19] *** masak left
[17:19] <s1n> my 2 cents? get rakudo in it's own repo on it's own release cycle

[17:19] <s1n> _that's_ PR

[17:20] <eric256> and fixing the wikis to point to it instead of pugs, or both equally

[17:20] <s1n> people don't see it as existing now because it's bundled with parrot, but being bundled with parrot has really moved things along

[17:20] <eric256> it is hard to find

[17:20] *** xinming joined
[17:20] <s1n> all of that could effectively be handled once rakudo is stand-alone

[17:20] *** kst joined
[17:20] <eric256> i've been trying to do my part on that as well. working on the wiki etc

[17:21] *** armagad left
[17:22] <s1n> applications like november will do more for perl6 than anything else as well

[17:22] <s1n> when people see actual working software, they'll start playing with it themselves it's all downhill from there

[17:26] <[particle]> people don't use a language for the language, they use it for the libraries

[17:27] <[particle]> don't use a language for the syntax, that is

[17:27] <[particle]> we need DBI, CGI, etc

[17:27] <s1n> [particle]: that's not entirely true

[17:27] <[particle]> no, but basically true

[17:28] <[particle]> i don't use c for syntax

[17:28] <s1n> i was drawn to perl _because_ of the syntax (and the timtowtdi way)

[17:28] <s1n> i use c _in spite_ of the syntax heh

[17:28] <[particle]> yes, so was i, because portable c is hard

[17:28] <[particle]> and now look where i am... designing a perl compiler  written in portable c

[17:33] *** xinming_ left
[17:36] * eric256 wants to right Jabber and IRC modules in perl6, but it seems to be lacking network at the moment ;)

[17:38] <eric256> would it make sense for smart link references to be compiled into the actualy SYN's instead of just into an HTML representation of them?

[17:48] <mberends> in some discussions the synopsis and pod line numbers are used, eg Sxx:nnn

[17:49] <pmichaud> except line numbers change frequently.

[17:51] <mberends> S26 specifies L<doc:S26#definition>, a handy format similar to HTML

[17:54] <eric256> mberends: yea, just when editing the S i wonder if it would be usefull to link directly to the tests. i'm just thinking about it from a standpoint of wether it would be good to have the links compiled directly into the documents instead of only showing in rendered versions

[17:54] <pmichaud> eric256: I think the concept is that the tests link to the synopses, and then we do some pre-processing to figure out the reverse links.

[17:55] <pmichaud> as opposed to trying to put the links to the tests directly in the synopses.

[17:56] <eric256> the problem i have is that i look in the synopsis, then have to go online to the rendered version in order to figure out which tests it applies to.  i suppose that could be handled by making sure the test names/folders match the synopsis though

[17:56] <eric256> as long as one test file doesn't test multiple synopsis

[17:56] <pmichaud> yes.  I think some test renaming can be a big help here.

[17:57] <pmichaud> sometimes test files cover at least more than one section of a synopsis, yes.

[17:57] <pmichaud> I'm not sure we can/should have a "test file only covers one synopsis" restriction, though.

[17:57] <eric256> no probably not at all

[17:57] <s1n> isn't there a smartlink util that can link directly to the spec?

[17:58] <eric256> yea, it generates an HTML file though

[17:58] <eric256> which is quickly outdated. already had that issue with the online ones numerous times

[17:58] <s1n> well can't it just regenerate the html file?

[17:58] <eric256> dunno suppose some problems there is no perfect answer to

[17:59] <s1n> maybe mod_perl6 can help out with that some

[18:00] *** dukeleto left
[18:01] <eric256> s1n: yea. but everytime i refer to the .html files someone tells me to read the actual pod ;) but the actual pod doesn't have the actual reference

[18:02] <s1n> hmm smells like a good idea for a perl6 implementation :)

[18:02] <eric256> so i was thinking about making the smarklink compiler put a link directly in the pod. i'm sure there is some way to mark it as generated and remove it later if the link is no longer valid

[18:02] <SamB> maybe the real solution would be to keep the HTML up to date

[18:03] <eric256> SamB: might be

[18:04] <eric256> the advantage of putting it in the pod would be that any other pod2anything would be able to make use of it....

[18:04] <SamB> true

[18:13] <eric256> i think enough perl6 is done that the smartlinks util could be written in it ... maybe i'll rewrite it and add the option to compile links and output pod would make that app nicer to seperate out the HTML crap ;)

[18:15] <mberends> s1n: eric256: within about 1 week I shall have a Rakudo Pod::Parser useable...

[18:15] <eric256> excellent

[18:15] *** maerzhase left
[18:17] <s1n> mberends: that's awesome

[18:17] <mberends> eric256: how will uploading to your perl6-examples on github work?

[18:19] <eric256> mberends: i'm working on the details. currently you can request to be a collaborator and i'll add you

[18:19] <eric256> you can also fork it and then request to have your changed pulled in

[18:19] <eric256> we have a couple people using each method and both work fine. i'm hoping to get an automated way to add collaborators setup so you can just put your name in a web form and be added.

[18:20] <eric256> or request it of a bot in here (my real reason for wanting a perl6 irc bot ;) )

[18:20] <mberends> please add my nick as a contributor (email at flashmail.com)

[18:21] *** GitHub181 joined
[18:21] <GitHub181> perl6-examples: 3Mark A. Hershberger 07master0 SHA1-d003e86

[18:21] <GitHub181> solution to Euler problem #2 -- rakudo bug drove me crazy

[18:21] <GitHub181> http://is.gd/eqwY

[18:21] *** GitHub181 left
[18:21] <eric256> mberends: do you have a github account with that name?

[18:21] <mberends> yes

[18:22] <eric256> added

[18:22] *** Psyche^ joined
[18:22] *** Patterner left
[18:22] *** Psyche^ is now known as Patterner

[18:23] <mberends> eric256++ #

[18:29] <mberends> eric256: for a perl6 irc bot, the only blocker is socket(), connect() etc. which are promised as part of a major i/o rewrite. could you make a temporary workaround with inline PIR?

[18:29] <eric256> i was trying but it looked like PIR at the time was rewriting there network code as well.

[18:29] <eric256> that was my original plan

[18:29] <eric256> but i'm a bit slow on the PIR side

[18:29] <eric256> heh

[18:30] <mberends> maybe next week will give me time to have a go

[18:31] <pugs_svn> r24739 | particle++ | [spec] C<-e6> isn't a separate item, it's a idiom meaning -e '6;'; format perl6 signature, (geoff broadwell)++

[18:34] *** dlocaus joined
[18:34] *** dlocaus left
[18:40] *** maerzhase joined
[18:43] <eric256> 6; has special meaning?

[18:47] <pmurias> it turns off strict when passed to -e

[18:47] *** Chillance joined
[18:48] <pmurias> turns on lax in Perl 6 terms

[18:48] <pmurias> any other literal would do

[18:51] *** justatheory left
[19:13] <japhb_> Does one of the bots know how to convert a revision number to a diff view URL?

[19:13] <japhb_> (And if so, which one?

[19:14] <[particle]> not that i know of

[19:14] <[particle]> but, the irc log does it

[19:14] <[particle]> irc log?

[19:15] <[particle]> http://irclog.perlgeek.de/perl6/2009-01-02#i_800936

[19:16] *** alech left
[19:20] *** barney left
[19:23] <japhb_> Thank you, [particle], I'd forgotten about that.

[19:31] <[particle]> pmichaud: ping

[19:49] *** cognominal left
[19:50] *** justatheory joined
[19:51] *** justatheory left
[19:52] <pmichaud> [particle]: pong

[19:52] *** hercynium left
[19:53] *** hercynium joined
[19:57] *** dwhipp joined
[19:57] *** alester joined
[19:57] *** cognominal joined
[20:01] <dwhipp> thank you, perl6, for my xmas toy: I've had fun playing with it: http://dave.whipp.name/sw/perl6/connect4.html

[20:06] <[particle]> pmichaud: i'm thinking about --version, which wants to pass itself to all of perl6's subsystems (parser, compiler, whatever)

[20:07] <[particle]> if i set a top level %+ARGS entry, will it be visible in BEGIN INIT CHECK etc?

[20:07] <pmichaud> I suspect it depends on where you set it.

[20:08] <pmichaud> beyond that... I dunno.

[20:08] <[particle]> ok, well, i'm wondering if contextual variables can be used like that

[20:08] <[particle]> it'd be set as soon as its parsed on the command line

[20:09] <pmichaud> seems reasonable at first blush

[20:09] <mberends> dwhipp++: wicked!

[20:09] <pmichaud> dwhipp: that is awesome.  I'd be very interested in a writeup of your overall impressions of Perl 6 and/or Rakudo at this point.

[20:09] <pmichaud> even a short one.

[20:11] <dwhipp> I'll try to get to it this weekend -- then it's back to my $job

[20:11] * mberends beats connect4 in 9 moves ;)

[20:11] <pmichaud> sure thing.  I really appreciate the tickets and reports you've been sending.... very helpful.

[20:13] <mberends> hopefully this game can go into eric256's perl6-examples on github

[20:14] <dwhipp> I have no problems with that.

[20:16] <dwhipp> BTW, one thing that would be *really* useful before writing anything bigger would be line numbers in runtime error messages.

[20:16] <dwhipp> I had to do a lot of binary searches using "say 'HERE'" to find where things were going wrong

[20:16] <[particle]> they're due to be implemented within three tuesdays

[20:17] <[particle]> (by next parrot release)

[20:17] <dwhipp> ++

[20:18] <dwhipp> rakudo: class A { has $.foo }; class B is A { has $.bar }; B.new( foo => 1, bar => 2)

[20:18] <p6eval> rakudo 34834: OUTPUT«You passed an initialization parameter that does not have a matching attribute.␤current instr.: 'die' pc 14812 (src/builtins/control.pir:204)␤»

[20:18] <dwhipp> pugs: class A { has $.foo }; class B is A { has $.bar }; B.new( foo => 1, bar => 2)

[20:18] <p6eval> pugs: RESULT«B.new((\("bar", 2), \("foo", 1))»

[20:20] <s1n> why is -6 for -e6 not legal?

[20:22] <[particle]> Option names follow Perl 6 identifier naming convention, but C<'> is not allowed.

[20:22] <[particle]> you can't start an ident with a number

[20:23] <s1n> that's a bummer, -6 just seems fitting

[20:23] <[particle]> that may be changed for short names

[20:23] <[particle]> -e6 isn't much longer

[20:23] <[particle]> ...and it doesn't need a special rule

[20:24] <s1n> it's not much longer but it's the sore thumb, a 2 character shortname

[20:27] <[particle]> it's not a two-char shortname, it's a one-char shortname, with a value

[20:28] <[particle]> hrmm, wait... do i allow mushing options and values...

[20:28] <[particle]> >perl -eprint -e6

[20:28] <[particle]> 6

[20:28] <[particle]> p5 does, so i do too :)

[20:29] <[particle]> i'm not sure that's the right way to go

[20:30] <dwhipp> rakudo: class A { has $.foo }; my A $a .=new( foo => 42 ); say $a.perl

[20:30] <p6eval> rakudo 34835: OUTPUT«Method 'perl' not found for invocant of class 'A'␤current instr.: '_block14' pc 158 (EVAL_13:73)␤»

[20:30] <dwhipp> pugs: class A { has $.foo }; my A $a .=new( foo => 42 ); say $a.perl

[20:30] <p6eval> pugs: OUTPUT«\A.new((\("foo", 42),)␤»

[20:35] *** dwhipp left
[20:38] *** stephens left
[20:40] <eric256> linenumbers++++++++ ;)

[20:40] *** Ehtyar left
[20:46] *** Ehtyar joined
[20:53] *** Cosmos95 joined
[20:53] *** Cosmos95 left
[20:59] *** vixey_ joined
[20:59] *** vixey left
[20:59] *** vixey_ is now known as vixey

[21:00] *** jhorwitz left
[21:00] <eric256> http://www.perlmonks.org/?node_id=238031 is that cheat sheet still valid?

[21:02] <mberends> that cheat sheet worked well with pugs, but rakudo lacks stat, localtime and caller

[21:02] <eric256> okay but its valid, just not implemented.  just came accross it and was curious

[21:02] *** thepler joined
[21:03] * eric256 is looking for the var holding the current file name (or file handle, either would work i think)

[21:05] <mberends> regex result is now $/ not $0

[21:05] <eric256> rakudo: $?FILE

[21:05] <p6eval> rakudo 34835: OUTPUT«Lexical '$?FILE' not found␤current instr.: '_block14' pc 46 (EVAL_8:36)␤»

[21:06] <pugs_svn> r24740 | pmurias++ | [smop]

[21:06] <pugs_svn> r24740 | pmurias++ | overloaded bool conversion on SMOP::Object in perl5 land which calls .true

[21:06] <pugs_svn> r24740 | pmurias++ | method call on SMOP::Object can return values

[21:06] <pugs_svn> r24740 | pmurias++ | [mildew]

[21:06] <pugs_svn> r24740 | pmurias++ | added t/p5_lowlevel.t which segfaults for reasons i have yet to understand ;)

[21:06] <mberends> rakudo is rather short of special variables. it would be $*FILE for runtime

[21:07] <eric256> rakudo: $*FILE

[21:07] <p6eval> rakudo 34835: RESULT«undef»

[21:07] <eric256> well thats better ;)   http://perlcabal.org/syn/Differences.html lists $?FILE

[21:08] <mberends> that's a newer document, and authored by currently active developers

[21:10] <thepler> rakudo: (undef === undef).say

[21:10] <p6eval> rakudo 34835: OUTPUT«0␤»

[21:11] <thepler> I expected that to be true.  Is that a bug?

[21:12] <eric256> rakudo: say $*GIBBERISH

[21:12] <p6eval> rakudo 34835: OUTPUT«␤»

[21:13] <eric256> its not too picky on those

[21:16] * eric256 finds himself wishing rakudo where in git just for the pretty fork map ;)

[21:29] *** rcorder joined
[21:31] *** rcorder left
[21:32] *** rcorder joined
[21:32] *** rcorder left
[21:33] *** ryanc joined
[21:35] * eric256 wades through rakudo code looking for where it loads a file to execute.

[21:35] <azawawi> that would be a pir file

[21:36] <azawawi> perl6.pir or something

[21:37] <eric256> yea i'm looking at .sub 'main' in there...it seems to hand off to command_line..so now its off to find that ;)

[21:37] *** justatheory joined
[21:38] <azawawi> another pir but in parrot runtime

[21:38] <azawawi> i think [particle] wrote that if i remember correctly...

[21:38] <eric256> that would explain why i can't find it in rakudo

[21:39] <azawawi> yeah i chased it before... ;-)

[21:39] * eric256 needs a road mad

[21:39] <eric256> map*

[21:40] *** Hell_Kaiser is now known as Avada

[21:41] *** Khisanth left
[21:41] <eric256> ohh dear..well i think i found the name of the script running, but i'll be darned if i know anyway to get from there to src/builtins/globals.pir ;(

[21:44] <buu> buubot: spack: continuation

[21:44] <buubot> buu: S04-control.pod:4 S17-concurrency.pod:1

[21:44] *** Avada left
[21:51] *** slavik joined
[21:51] *** hercynium left
[21:52] *** Khisanth joined
[21:56] *** stephens joined
[22:01] *** Whiteknight joined
[22:06] *** SubStack joined
[22:06] *** fridim_ joined
[22:09] *** thepler left
[22:21] *** justatheory left
[22:27] *** rindolf left
[22:28] *** GitHub177 joined
[22:28] <GitHub177> perl6-examples: 3Eric Hodges 07master0 SHA1-d6b801f

[22:28] <GitHub177> Added two windows scripting game challenges.

[22:28] <GitHub177> http://is.gd/erp8

[22:28] *** GitHub177 left
[22:29] <buu> Haha

[22:29] <buu> what

[22:30] <eric256> buu: what?

[22:31] <buu> Nothing. Ignore me. Never mind. All is well!

[22:31] <eric256> lmao okay

[22:32] * eric256 is trying to get perl6-examples going

[22:32] <eric256> so we have some implemented stuff to point at ;) i'm hoping to eventualy get some bigger programs in there, but little scripts are a good start. maybe some modules eventualy

[22:35] *** DemoPhreak joined
[22:39] <mberends> eric256, did you try dwhipp's connect4 game above? you're allowed to github it.

[22:44] *** pdcawley left
[22:44] <eric256> did not, but that sounds good

[22:45] <mberends> the game uses many perl6 idioms, so it's a fine example

[22:48] *** DemoFreak left
[22:55] <eric256> does rakudo have file operations yet?

[22:56] <mberends> no, but I did kludge is_file() and is_dir() if that helps?

[22:57] *** |newbie| joined
[22:57] <eric256> man i can't do hardly any of the scripting games stuff without access to files ;(

[22:57] <eric256> lol

[22:58] <eric256> hmm open seems to work

[22:58] <mberends> rakudo natively does open close =$fh unlink slurp say print

[22:59] *** |newbie| left
[22:59] <eric256> yea slurp

[22:59] <eric256> thanks, that will do

[22:59] <mberends> :)

[23:11] <pugs_svn> r24741 | pmurias++ | [smop] overloaded stringification for idconstants, numification for native integers

[23:11] <pugs_svn> r24741 | pmurias++ | P5Coro.has_next checks if a coroutine finished (propably not neccesary)

[23:11] <pugs_svn> r24741 | pmurias++ | overloaded numification for integers and stringification for idconstants in p5 land

[23:11] <pugs_svn> r24741 | pmurias++ | [mildew]

[23:11] <pugs_svn> r24741 | pmurias++ | added a very basic SDL.pm using example

[23:15] <eric256> wow i just discovered that scoreing bowling is harder than i thought ;)

[23:15] <eric256> lol

[23:21] * mberends chuckles, but cannot remember bowling score rules either

[23:22] *** iblechbot left
[23:29] <s1n> i bought the old perl6 that o'reilly released but it's now grown outdated

[23:29] <s1n> is anyone working on an opened sourced version of that type of thing?

[23:29] <slavik> scoring bowling is easy ...

[23:30] <slavik> you just look at the scoreboard :P

[23:30] <eric256> lol

[23:30] <slavik> s1n: moritz_ has a perl5 to 6 tutorial and I started work on a Perl6 tutorials type thing

[23:30] <eric256> (2,5,7,"/",8,1,"X",9,"/",5,3,7,0,4,5,"X",2,0)  ... i thought i had it, but i got 107 which i'm pretty sure is wrong

[23:30] <pmurias> s1n: i have the previous edition of that book ;)

[23:31] <slavik> s1n: so far, I think I have a good article on grammars: http://bcacm.org/~slavik

[23:31] <slavik> :)

[23:32] <s1n> well, i'd be really cool if we had a book that was written open source style in the same vain as the camel book

[23:32] <slavik> s1n: look at my grammar article and feel free to write it on something else ...

[23:33] <s1n> slavik: that's a start, but i was hoping for something like the camel book, something that's easier to read than the spec

[23:33] <eric256> hey compared it to an online calculator and it IS 107 ;) hurrah

[23:33] <slavik> s1n: that's what I was aiming for ... just the bare necessities needed to use the particular feature

[23:34] *** GitHub6 joined
[23:34] <GitHub6> perl6-examples: 3Eric Hodges 07master0 SHA1-e2e0ed3

[23:34] <GitHub6> Adding WSG Beginner #6

[23:34] <GitHub6> http://is.gd/erDx

[23:34] <GitHub6> perl6-examples: 3Eric Hodges 07master0 SHA1-dd22341

[23:34] <GitHub6> Adding WSG Event 10

[23:34] <GitHub6> http://is.gd/erDD

[23:34] *** GitHub6 left
[23:35] <slavik> wsg?

[23:35] <eric256> Windows Scripting Games

[23:35] <s1n> eric256: took up pmichaud's suggestion?

[23:36] <slavik> windows?!

[23:36] <slavik> windows the os or windows the widget?

[23:36] <s1n> slavik: it's this kinda generic programming challenge they hold

[23:36] <slavik> windows the os or windows the widget?

[23:36] <eric256> s1n: yes ;)

[23:37] <eric256> perl ~~ "windows scripting language"....so why not?

[23:37] <slavik> :-\

[23:38] <pmichaud> (it's actually the "microsoft scripting games", not "windows"  :-)

[23:38] <slavik> I see ... kill them :P

[23:38] <eric256> ohh....opps

[23:39] <eric256> oh its "Winter Scripting Games" on their site

[23:39] <s1n> pmichaud: see beginner #2, kinda windows specific

[23:41] <eric256> s1n: yes some are

[23:46] <s1n> eric, i'd love to contribute some solutions

[23:46] <eric256> s1n: got a github username i'll add you right now

[23:46] <eric256> rakudo: say any(<a b c>) ~ any(<d e f>) ~~ 'ad';

[23:46] <s1n> s1n :)

[23:46] <p6eval> rakudo 34839: OUTPUT«0␤»

[23:47] <eric256> done

[23:47] <s1n> sweet

[23:47] <eric256> you can also fork and submit pull requests if you prefer, doesn't matter to me

[23:47] *** Limbic_Region joined
[23:48] <s1n> i'm kinda new to git, so bare (is it that or bear?) with me

[23:48] <eric256> me to

[23:48] <pmichaud> "bear"

[23:48] <eric256> been using it for...however old that repo is

[23:48] <pmichaud> as in "bear a burden"

[23:48] * eric256 guess junctions arn't working fully yet

[23:48] <pmichaud> I thought I had those working, though.  might check precedence of ~ and ~~

[23:49] <pmichaud> say (any(<a b c>) ~ any(<d e f>));

[23:49] <pmichaud> rakudo: say (any(<a b c>) ~ any(<d e f>));

[23:49] <p6eval> rakudo 34839: OUTPUT«Junction<0xb5fca774>Junction<0xb5fc75e8>␤»

[23:49] <pmichaud> rakudo: say (any(<a b c>) ~ any(<d e f>)).perl;

[23:49] <p6eval> rakudo 34839: OUTPUT«"Junction<0xb6012bdc>Junction<0xb6010348>"␤»

[23:49] <pmichaud> maybe junctions aren't working with infix:<~> yet.

[23:49] <eric256> looks like it is stringiffying the junction

[23:50] <eric256> man that was going to make a sweet answer to the telephone number problem ;)

[23:51] *** vixey left
[23:55] *** eric256 left
[23:57] *** sri_kraih joined
