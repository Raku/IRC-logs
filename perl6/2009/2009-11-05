[00:00] *** payload joined
[00:03] *** lest_away is now known as lestrrat

[00:06] <Juerd> Wolfman2000: Er, everyone can read ~juerd/apache - I don't see what the problem is.

[00:07] <Juerd> Wolfman2000: And don't worry about those sudo reports. It's a standard feature and I usually don't read them anyway.

[00:08] *** mubot left
[00:09] *** mubot joined
[00:10] <carlin> mubot: unlink moritz_

[00:10] <mubot> Sorry, I don't understand that command

[00:10] <carlin> Oh yes you do

[00:12] *** mubot left
[00:12] <jnthn> .oO( pantomime bot )

[00:12] *** mubot joined
[00:12] <carlin> mubot: unlink moritz_

[00:12] <mubot> moritz_ is no longer an alias of moritz

[00:13] <jnthn> \o/

[00:13] <carlin> mubot: karma moritz_

[00:13] <mubot> moritz_ has a karma of 5

[00:13] <carlin> mubot: karma moritz

[00:13] <mubot> moritz has a karma of 2

[00:13] <carlin> mubot: link moritz moritz_

[00:13] <mubot> moritz is an alias of moritz_ and can not be set as a master nick

[00:14] *** Lorn joined
[00:14] <carlin> What a mess

[00:15] <carlin> mubot: unlink moritz

[00:15] <mubot> moritz is no longer an alias of moritz_

[00:15] <carlin> mubot: karma moritz

[00:15] <mubot> moritz has a karma of 2

[00:15] <carlin> mubot: karma moritz_

[00:15] <mubot> moritz_ has a karma of 5

[00:15] <carlin> mubot: link moritz moritz_

[00:15] <mubot> moritz_ is now an alias for moritz (moritz will gain any karma given to moritz_)

[00:15] <carlin> mubot: karma moritz_

[00:15] <mubot> moritz has a karma of 7

[00:15] <carlin> That's better

[00:17] <diakopter> mubot: link moritz moritz_++

[00:17] <mubot> moritz_++ is now an alias for moritz (moritz will gain any karma given to moritz_++)

[00:17] <diakopter> karma moritz

[00:17] <diakopter> mubot: karma moritz

[00:17] <mubot> moritz has a karma of 7

[00:17] <diakopter> moritz++

[00:17] <diakopter> mubot: karma moritz

[00:17] <mubot> moritz has a karma of 8

[00:18] *** gfx joined
[00:18] <diakopter> moritz++++

[00:18] <diakopter> mubot: karma moritz

[00:18] <mubot> moritz has a karma of 9

[00:18] <jnthn> mubot: karma jnthn

[00:18] <mubot> jnthn has a karma of 1

[00:18] <diakopter> heh

[00:18] <jnthn> aww

[00:18] <diakopter> jnthn+=532642

[00:18] <jnthn> :D

[00:18] <jnthn> mubot: karma jnthn

[00:18] <mubot> jnthn has a karma of 1

[00:18] <jnthn> mubot: karma jnthn++

[00:18] <mubot> jnthn++ is of an unknown quantity

[00:18] <jnthn> aww

[00:18] <diakopter> mubot: karma jnthn

[00:18] <mubot> jnthn has a karma of 1

[00:19] <jnthn> Yeah

[00:19] <jnthn> Was a nice try though :-)

[00:19] <diakopter> ++jnthn

[00:19] <diakopter> mubot: karma jnthn

[00:19] <mubot> jnthn has a karma of 2

[00:19] <diakopter> ooo

[00:19] <jnthn> oh! prefix karma!

[00:19] <diakopter> that's what she said!

[00:19] <diakopter> I mean..

[00:19] <jnthn> lol

[00:20] <carlin> (Jonathan Worthington)++

[00:20] <carlin> mubot: karma Jonathan Worthington

[00:20] <mubot> Jonathan Worthington has a karma of 1

[00:20] <diakopter> mubot: karma (jnthn)

[00:20] <mubot> (jnthn) is of an unknown quantity

[00:20] <diakopter> (jnthn)++

[00:20] <diakopter> mubot: karma jnthn

[00:20] <mubot> jnthn has a karma of 3

[00:20] <jnthn> ((jnthn))++

[00:20] <diakopter> ((jnthn))++

[00:20] <diakopter> hey

[00:21] <jnthn> mubot: karma (jnthn)

[00:21] <diakopter> mubot: karma jnthn

[00:21] <mubot> jnthn has a karma of 3

[00:21] <mubot> (jnthn) is of an unknown quantity

[00:21] <diakopter> (jnthn))++

[00:21] <diakopter> mubot: karma jnthn

[00:21] <jnthn> irregular language fail :-)

[00:21] <mubot> jnthn has a karma of 3

[00:21] <diakopter> ((jnthn)++

[00:21] <diakopter> mubot: karma jnthn

[00:21] <mubot> jnthn has a karma of 4

[00:21] <diakopter> ((jnthn)++)

[00:21] <diakopter> mubot: karma jnthn

[00:21] <mubot> jnthn has a karma of 5

[00:22] <diakopter> jnthn+++

[00:22] <diakopter> mubot: karma jnthn

[00:22] <mubot> jnthn has a karma of 6

[00:22] <diakopter> heh

[00:22] * jnthn is glad to be the test case

[00:22] <diakopter>  /topic Bring Your Own Bot.  Free input parser fuzzing.

[00:23] <carlin> jnthn: Do you want me to test purge now?

[00:23] <carlin> ;-)

[00:23] <jnthn> carlin: Yes, but it's somebody else's turn now.

[00:23] <carlin> mubot: karma C

[00:23] <jnthn> I shouldn't be getting this much attention.

[00:23] <mubot> C has a karma of 2

[00:23] <carlin> mubot: purge C

[00:23] <mubot> C's karma has been reset

[00:23] <carlin> mubot: karma C

[00:23] <mubot> C is of an unknown quantity

[00:23] <jnthn> C--

[00:24] <carlin> I need to change the 0 karma error

[00:24] <carlin> mubot: karma C

[00:24] <mubot> C has a karma of -1

[00:24] <diakopter> ()--

[00:24] <diakopter> mubot: karma ()

[00:24] <mubot> () is of an unknown quantity

[00:24] <jnthn> mubot: karma 

[00:24] <mubot>  has a karma of -1

[00:24] <jnthn> lol

[00:24] <diakopter> mubot: karma ( )

[00:24] <mubot> ( ) is of an unknown quantity

[00:24] <diakopter> mubot: karma ' '

[00:24] <mubot> ' ' is of an unknown quantity

[00:24] <diakopter> ( )++

[00:24] <jnthn> (  )++

[00:24] <diakopter> mubot: karma ' '

[00:24] <mubot> ' ' is of an unknown quantity

[00:25] <diakopter> mubot: karma ( )

[00:25] <mubot> ( ) is of an unknown quantity

[00:25] <jnthn> mubot: karma   

[00:25] <diakopter> mubot: karma  

[00:25] <mubot>  has a karma of 1

[00:25] <diakopter> mubot: karma   

[00:25] <mubot>  has a karma of 1

[00:25] <carlin> mubot: karma

[00:25] <mubot> walking barefoot through a construction site: 1 | moritz: 9 | mj41: 1 | masak: 5 | jnthn): 3 | jnthn: 6 | carlin: 7 | Wolfman2000: 1 | Tene: 1 | KyleHa: 9 | Jonathan Worthington: 1 | 

[00:25] *** REPLeffect_ left
[00:25] <diakopter> diakopter--++

[00:25] <diakopter> mubot: karma diakopter

[00:25] <mubot> diakopter is of an unknown quantity

[00:25] <diakopter> diakopter--

[00:25] <diakopter> mubot: karma diakopter

[00:25] <mubot> diakopter has a karma of -1

[00:26] <diakopter> --diakopter++

[00:26] <diakopter> mubot: karma diakopter

[00:26] <mubot> diakopter has a karma of 0

[00:26] <diakopter> ++diakopter--

[00:26] <diakopter> mubot: karma diakopter

[00:26] <mubot> diakopter has a karma of 1

[00:26] <diakopter> increment beats decrement

[00:26] <jnthn> Heh, I like.

[00:26] <jnthn> It always tries to see the good side. :-)

[00:26] <jnthn> Optimist bot.

[00:28] <diakopter> mubot: karma (hi)(hihi)

[00:28] <mubot> (hi)(hihi) is of an unknown quantity

[00:28] <diakopter> (hi)(hihi)++

[00:28] <diakopter> mubot: karma (hi)(hihi)

[00:28] <mubot> (hi)(hihi) is of an unknown quantity

[00:28] <diakopter> different patterns

[00:29] <carlin> mubot: karma hihi

[00:29] <mubot> hihi is of an unknown quantity

[00:29] <diakopter> well, maybe

[00:29] <diakopter> mubot: karma (hihi)

[00:29] <mubot> (hihi) is of an unknown quantity

[00:29] <diakopter> mubot: karma hi)(hihi)

[00:29] <mubot> hi)(hihi) is of an unknown quantity

[00:29] <diakopter> mubot: karma )(hihi)

[00:29] *** ihrd joined
[00:29] <mubot> )(hihi) is of an unknown quantity

[00:29] <diakopter> mubot: karma hihi)

[00:29] <mubot> hihi) is of an unknown quantity

[00:29] <diakopter> weird

[00:29] <jnthn> I think we may have fuzzed enough by now. :-)

[00:30] <diakopter> mubot: karma )

[00:30] <mubot> ) is of an unknown quantity

[00:30] <diakopter> ok

[00:30] <carlin> mubot: karma hi)(hihi

[00:30] * jnthn distracts diakopter with std

[00:30] <mubot> hi)(hihi has a karma of 1

[00:30] <diakopter> ohhh

[00:30] <diakopter> carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++ carlin++

[00:30] <carlin> .oO( Being able to see the karma.log file helps )

[00:30] <diakopter> mubot: karma carlin

[00:30] <mubot> carlin has a karma of 8

[00:31] <carlin> Yeah...

[00:31] <carlin> I wonder how I could make that work

[00:31] <diakopter> carlin++ \n carlin++

[00:31] <diakopter> mubot: karma carlin

[00:31] <mubot> carlin has a karma of 9

[00:31] <diakopter> :)

[00:31] <diakopter> mubot: karma $ENV{PATH}

[00:31] <mubot> $ENV{PATH} is of an unknown quantity

[00:32] <diakopter> :)

[00:32] * diakopter is finally distracted by std

[00:33] *** orafu left
[00:33] *** orafu joined
[00:35] <diakopter> rakudo: &.say

[00:35] <p6eval> rakudo 5e05b8: OUTPUT«Lexical 'self' not found␤in Main (file src/gen_setting.pm, line 324)␤»

[00:36] <diakopter> rakudo: (*.say)(88)

[00:36] <p6eval> rakudo 5e05b8: OUTPUT«88␤»

[00:36] <diakopter> why would ( ) create a block there

[00:42] <jnthn> It doesn't.

[00:42] <jnthn> * does

[00:42] <diakopter> yeah but I'd expect the block to be { (*.say)(88) }

[00:43] <jnthn> ?

[00:43] <jnthn> No

[00:43] <jnthn> *.say becomes { .say }

[00:43] <jnthn> { .say }(88) invokes it.

[00:43] <diakopter> but those are parens

[00:44] *** nihiliad joined
[00:44] <diakopter> rakudo: { (say *) }(89)

[00:44] <p6eval> rakudo 5e05b8: OUTPUT«!whatever_closure␤»

[00:44] <diakopter> urgh, gurgle, snort

[00:45] <jnthn> ...not quite sure what that did...

[00:45] <diakopter> see!??!??!??!!!!!! :)

[00:45] <jnthn> Either way, while I could maybe argue that *.foo(...) would make a closure like { $_.foo(...) }

[00:45] <jnthn> I have a harder time seeing that (*.foo)(...) would be the same thing.

[00:46] <jnthn> I'd find it quite surprising if they were.

[00:48] <diakopter> rakudo: {$a = *()($a)}(my $a = sub { $a($a) })($a)

[00:48] <p6eval> rakudo 5e05b8: OUTPUT«Method 'postcircumfix:( )' not found for invocant of class 'Perl6Sub'␤in Main (file src/gen_setting.pm, line 324)␤»

[00:49] <diakopter> uhm

[00:49] * diakopter cries a little

[00:58] *** SmokeMachine joined
[00:59] *** fax left
[01:01] *** SmokeMachine left
[01:01] <zaslon> loljnthnhazblogged! jnthn++ 'Relaying the metamodel foundations': http://use.perl.org/~JonathanWorthington/journal/39844?from=rss

[01:11] *** gfx left
[01:36] <carlin> :wq

[01:36] * hugme hugs carlin, good vi(m) user!

[01:36] <carlin> Heh

[01:36] * carlin was looking at hugme's source

[01:37] *** SmokeMachine joined
[01:37] *** Whiteknight left
[01:37] *** nihiliad left
[01:42] *** nihiliad joined
[01:44] *** pdcawley left
[01:46] *** markmont joined
[01:47] *** pdcawley joined
[01:58] <sjohnson> <--- vim ninja

[02:02] *** stephenlb left
[02:16] *** estrai left
[02:16] *** eternaleye joined
[02:20] *** NorwayGeek left
[02:35] *** cdarroch left
[02:39] *** pnate left
[02:40] *** pnate joined
[02:40] *** gfx joined
[02:47] *** markmont left
[02:54] <dukeleto> who wants a commit bit to the parrot mirror on github ? so that y'all can create topic branches and such

[02:55] <dukeleto> this is an un-official automagically updated personal mirror. no CLA required :)

[03:00] *** payload1 joined
[03:00] *** payload left
[03:03] *** xp_prg left
[03:10] *** JimmyZ joined
[03:12] *** agentzh joined
[03:14] *** gfx left
[03:19] *** frederico left
[03:19] *** frederico joined
[03:27] *** silug left
[03:27] *** frew left
[03:27] *** r0bby_ left
[03:27] *** alester left
[03:27] *** miyagawa left
[03:27] *** revdiablo left
[03:27] *** awwaiid left
[03:27] *** Guest41472 left
[03:27] *** leedo left
[03:27] *** rafl left
[03:27] *** akl left
[03:27] *** allbery_b left
[03:27] *** tylerni7 left
[03:28] *** astrojp left
[03:28] *** mdxi left
[03:28] *** frederico left
[03:28] *** pnate left
[03:28] *** ihrd left
[03:28] *** mubot left
[03:28] *** Wolfman2000 left
[03:28] *** Patterner left
[03:28] *** synth left
[03:28] *** szabgab left
[03:28] *** pointme left
[03:28] *** wolverian left
[03:28] *** cotto left
[03:28] *** Grrrr left
[03:28] *** KatrinaTheLamia left
[03:28] *** renormalist left
[03:28] *** baest left
[03:28] *** christine left
[03:28] *** Bucciarati left
[03:28] *** stepnem left
[03:28] *** literal left
[03:28] *** Trey left
[03:28] *** cognominal left
[03:28] *** eiro_ left
[03:28] *** krunen left
[03:28] *** Woody2143 left
[03:28] *** BinGOs left
[03:28] *** ssm left
[03:28] *** daemon left
[03:28] *** JimmyZ left
[03:28] *** nihiliad left
[03:28] *** orafu left
[03:28] *** Maddingue left
[03:28] *** omega_ left
[03:28] *** hercynium left
[03:28] *** PerlJam left
[03:28] *** bloonix left
[03:28] *** PacoLinux left
[03:28] *** athomason left
[03:28] *** xinming left
[03:28] *** cosimo left
[03:28] *** lambdabot left
[03:28] *** parduncia left
[03:28] *** constant left
[03:28] *** eternaleye left
[03:28] *** SmokeMachine left
[03:28] *** phenny left
[03:28] *** dalek left
[03:28] *** sri__ left
[03:28] *** eMaX left
[03:28] *** justatheory left
[03:28] *** colomon left
[03:28] *** Woodi left
[03:28] *** reid04 left
[03:28] *** dj_goku left
[03:28] *** slavik1 left
[03:28] *** araujo left
[03:28] *** simcop2387 left
[03:28] *** charsbar_ left
[03:28] *** b0nk left
[03:28] *** cls_bsd left
[03:28] *** crazed left
[03:28] *** elmex left
[03:28] *** [particle] left
[03:28] *** gbacon left
[03:28] *** japhb left
[03:28] *** felipe left
[03:28] *** presh_ left
[03:28] *** Gothmog_ left
[03:28] *** PZt left
[03:28] *** tarbo2 left
[03:28] *** hsb left
[03:28] *** jrockway left
[03:28] *** tomaw_ left
[03:28] *** tak11 left
[03:28] *** mj41 left
[03:28] *** frettled left
[03:28] *** mathw left
[03:28] *** xenoterracide left
[03:28] *** hicx174 left
[03:28] *** hcchien left
[03:28] *** viklund left
[03:28] *** avuserow left
[03:28] *** lestrrat left
[03:28] *** huf left
[03:28] *** IRSeekBot left
[03:28] *** sbp left
[03:28] *** nsh left
[03:28] *** rhr left
[03:28] *** pjcj left
[03:28] *** ilbot2 left
[03:28] *** Khisanth left
[03:28] *** he_ left
[03:28] *** sunnavy left
[03:29] *** moritz_ joined
[03:29] *** frederico joined
[03:29] *** pnate joined
[03:29] *** ihrd joined
[03:29] *** mubot joined
[03:29] *** tak11 joined
[03:29] *** mdxi joined
[03:29] *** Wolfman2000 joined
[03:29] *** astrojp joined
[03:29] *** mj41 joined
[03:29] *** cognominal joined
[03:29] *** Patterner joined
[03:29] *** frettled joined
[03:29] *** synth joined
[03:29] *** eiro_ joined
[03:29] *** mathw joined
[03:29] *** krunen joined
[03:29] *** frew joined
[03:29] *** szabgab joined
[03:29] *** pointme joined
[03:29] *** lestrrat joined
[03:29] *** miyagawa joined
[03:29] *** Woody2143 joined
[03:29] *** xenoterracide joined
[03:29] *** r0bby_ joined
[03:29] *** akl joined
[03:29] *** hicx174 joined
[03:29] *** hcchien joined
[03:29] *** wolverian joined
[03:29] *** viklund joined
[03:29] *** cotto joined
[03:29] *** alester joined
[03:29] *** Grrrr joined
[03:29] *** PZt joined
[03:29] *** KatrinaTheLamia joined
[03:29] *** renormalist joined
[03:29] *** baest joined
[03:29] *** revdiablo joined
[03:29] *** avuserow joined
[03:29] *** allbery_b joined
[03:29] *** awwaiid joined
[03:29] *** BinGOs joined
[03:29] *** felipe joined
[03:29] *** christine joined
[03:29] *** Bucciarati joined
[03:29] *** presh_ joined
[03:29] *** Guest41472 joined
[03:29] *** irc.freenode.net sets mode: +ov moritz_ pointme

[03:29] *** silug joined
[03:29] *** stepnem joined
[03:29] *** leedo joined
[03:29] *** literal joined
[03:29] *** tylerni7 joined
[03:29] *** rafl joined
[03:29] *** huf joined
[03:29] *** Trey joined
[03:29] *** IRSeekBot joined
[03:29] *** jantore joined
[03:29] *** obra_ joined
[03:29] *** Juerd joined
[03:29] *** yath joined
[03:29] *** diakopter joined
[03:29] *** TimToady joined
[03:29] *** irc.freenode.net sets mode: +vooo IRSeekBot Juerd diakopter TimToady

[03:29] *** Trinity94 joined
[03:29] *** tkr joined
[03:29] *** Helios- joined
[03:29] *** jjore joined
[03:29] *** Caelum joined
[03:29] *** Infinoid joined
[03:29] *** mtve joined
[03:29] *** nothingmuch joined
[03:29] *** pmichaud joined
[03:29] *** hatseflats joined
[03:29] *** p6eval joined
[03:29] *** nsh joined
[03:29] *** sbp joined
[03:29] *** rhr joined
[03:29] *** pjcj joined
[03:29] *** tarbo2 joined
[03:29] *** ilbot2 joined
[03:29] *** Khisanth joined
[03:29] *** hsb joined
[03:29] *** Gothmog_ joined
[03:29] *** jrockway joined
[03:29] *** sunnavy joined
[03:29] *** he_ joined
[03:29] *** irc.freenode.net sets mode: +ovv pmichaud p6eval ilbot2

[03:30] *** tomaw_ joined
[03:30] *** sjohnson joined
[03:30] *** JimmyZ joined
[03:30] *** eternaleye joined
[03:30] *** nihiliad joined
[03:30] *** SmokeMachine joined
[03:30] *** orafu joined
[03:30] *** phenny joined
[03:30] *** Maddingue joined
[03:30] *** omega_ joined
[03:30] *** hercynium joined
[03:30] *** PerlJam joined
[03:30] *** dalek joined
[03:30] *** sri__ joined
[03:30] *** eMaX joined
[03:30] *** bloonix joined
[03:30] *** justatheory joined
[03:30] *** PacoLinux joined
[03:30] *** colomon joined
[03:30] *** parduncia joined
[03:30] *** Woodi joined
[03:30] *** reid04 joined
[03:30] *** ssm joined
[03:30] *** dj_goku joined
[03:30] *** daemon joined
[03:30] *** athomason joined
[03:30] *** slavik1 joined
[03:30] *** araujo joined
[03:30] *** xinming joined
[03:30] *** simcop2387 joined
[03:30] *** crazed joined
[03:30] *** charsbar_ joined
[03:30] *** cosimo joined
[03:30] *** b0nk joined
[03:30] *** constant joined
[03:30] *** cls_bsd joined
[03:30] *** elmex joined
[03:30] *** japhb joined
[03:30] *** lambdabot joined
[03:30] *** [particle] joined
[03:30] *** gbacon joined
[03:30] *** shachaf joined
[03:30] *** pugs_svn joined
[03:30] *** spinclad joined
[03:30] *** hugme joined
[03:30] *** irc.freenode.net sets mode: +ovvv sjohnson lambdabot pugs_svn hugme

[03:35] *** lisppaste3 left
[03:35] *** ihrd left
[03:39] <carlin> SF++ # http://lastofthecarelessmen.blogspot.com/2009/11/unsolicited-code-review.html

[03:43] *** lisppaste3 joined
[03:46] *** envi^office joined
[03:49] *** envi^home joined
[03:51] *** justatheory left
[03:56] *** JimmyZ__ joined
[04:14] *** mubot left
[04:14] *** mubot joined
[04:15] <carlin> mubot: help

[04:15] <mubot> usage: mubot: [karma [name] | purge <name> | link <nick> <alternative>] | <name>++ | <name>--

[04:16] <carlin> mubot: karma SF

[04:16] <mubot> SF has a karma of 1

[04:17] <carlin> SF++ # excellent http://github.com/carlins/mubot/commit/36d26eaa303153282dfa71cc7812aab75b883350

[04:17] *** JimmyZ left
[04:20] <pugs_svn> r28990 | kyle++ | [t/spec] Tests for RT 70229: Failure stringifies wrong, etc. 

[04:35] *** meppl left
[04:36] *** meppl joined
[04:37] <dukeleto> pmichaud: latest nqp-rx does not compile for me

[04:38] *** gfx joined
[04:39] *** nbrown joined
[04:39] <dukeleto> pmichaud: http://nopaste.snit.ch/18571

[04:39] <pugs_svn> r28991 | kyle++ | [t/spec] I worry that Nil might (wrongly) return one empty string and pass anyway 

[04:54] <spinclad> rakudo: say (my $a = { $^a($a) + * })($a);

[04:54] <p6eval> rakudo 5e05b8: OUTPUT«maximum recursion depth exceeded␤in Main (file <unknown>, line <unknown>)␤»

[04:56] *** justatheory joined
[04:59] *** zaslon left
[05:00] *** justatheory left
[05:02] <diakopter> spinclad: :)

[05:11] *** zaslon joined
[05:13] <Wolfman2000> sorry for semi afk. Been kept busy tonight.

[05:13] <Wolfman2000> I'll be more focused tomorrow hopefully

[05:15] *** jaldhar joined
[05:24] *** xp_prg joined
[05:31] *** mubot left
[05:32] *** Bzek joined
[05:33] *** mubot joined
[05:42] <carlin> zaslon: add carlin http://theintersect.org/category/perl6/feed/

[05:42] <zaslon> I am now following carlin's blog

[05:54] <zaslon> lolcarlinhazblogged! carlin++ 'Domo arigato, Mr. Roboto': http://theintersect.org/2009/domo-arigato-mr-roboto/

[06:00] *** charsbar_ left
[06:01] *** charsbar joined
[06:07] *** nihiliad left
[06:07] *** eternaleye left
[06:07] *** eternaleye joined
[06:24] *** gfx left
[06:26] *** NorwayGeek joined
[06:42] *** agentzh left
[06:52] *** NorwayGeek left
[06:55] *** tak11 left
[06:55] *** Su-Shee joined
[06:55] <Su-Shee> good morning.

[06:57] *** synth left
[06:58] <diakopter> Su-Shee: hi

[07:02] *** envi^home left
[07:03] *** zaslon left
[07:03] *** pointme left
[07:03] *** mubot left
[07:17] *** zaslon joined
[07:17] *** pointme joined
[07:18] *** mubot joined
[07:24] *** mubot left
[07:24] *** mubot joined
[07:24] *** pointme left
[07:24] *** pointme joined
[07:38] <moritz_> good morning

[07:38] <diakopter> moritz_: ahoy

[07:46] *** eMaX left
[07:46] *** payload joined
[07:46] *** pdcawley left
[07:46] *** payload1 left
[07:55] *** JimmyZ__ left
[08:04] *** envi^office left
[08:06] *** ejs left
[08:07] *** _eMaX_ joined
[08:10] <diakopter> moritz_: I was introduced to the table tennis table at $job's office today (yay)

[08:10] <moritz_> nice!

[08:10] *** elmex_ joined
[08:10] *** lestrrat is now known as lest_away

[08:12] *** payload left
[08:16] *** nbrown left
[08:16] *** reid04 left
[08:17] *** _eMaX_ left
[08:18] *** _eMaX_ joined
[08:19] <moritz_> dukeleto: maybe you need a 'make clean' in nqp-rx?

[08:20] <japhb> moritz_, I believe he resolved it, but only said so on #parrot.

[08:20] *** elmex left
[08:21] <moritz_> good. Thanks japhb 

[08:25] *** iblechbot joined
[08:29] *** payload joined
[08:33] *** rfordinal joined
[08:34] *** _eMaX_ left
[08:34] *** mariuz joined
[08:34] *** _eMaX_ joined
[08:42] *** elmex_ is now known as elmex

[08:53] *** JimmyZ joined
[08:58] *** IllvilJa left
[08:58] *** [particle] left
[09:00] *** [particle] joined
[09:06] *** payload left
[09:07] *** payload joined
[09:16] *** _eMaX_1 joined
[09:16] *** _eMaX_ left
[09:18] *** hanekomu joined
[09:26] *** JimmyZ__ joined
[09:29] *** payload left
[09:32] *** Helios- left
[09:33] *** drbean joined
[09:33] *** jaffa8 joined
[09:33] *** eternaleye left
[09:33] *** Helios- joined
[09:34] *** JimmyZ__ left
[09:35] *** JimmyZ left
[09:37] *** agentzh joined
[09:38] *** payload joined
[09:40] *** rgrau joined
[10:01] *** SmokeMachine left
[10:01] *** payload left
[10:22] *** IllvilJa joined
[10:25] *** agentzh left
[10:36] *** iblechbot left
[10:40] *** xp_prg left
[10:44] *** kst left
[10:46] *** kst joined
[11:03] *** astrojp left
[11:06] *** ab5tract joined
[11:14] *** jiing_ joined
[11:15] *** jiing left
[11:25] *** nbrown joined
[11:31] *** pnate2 joined
[11:32] *** dakkar joined
[11:38] *** krunen left
[11:38] *** krunen joined
[11:41] *** lest_away is now known as lestrrat

[11:45] *** pnate left
[11:45] *** payload joined
[11:49] *** zamolxes joined
[11:53] *** Su-Shee_ joined
[11:54] *** ab5tract left
[12:02] *** envi^home joined
[12:08] *** Su-Shee left
[12:12] *** iblechbot joined
[12:13] *** Su-Shee_ is now known as Su-Shee

[12:13] *** SmokeMachine joined
[12:32] *** ruoso joined
[12:32] <lisppaste3> moritz_ pasted "With which letter do most nicks in here begin?" at http://paste.lisp.org/display/89825

[12:33] * ruoso back from one week of conferences, including a YAPC

[12:34] *** moritz_ sets mode: +vv phenny pointme

[12:34] <moritz_> revdiablo: which YAPC? and how was it?

[12:45] *** explorer joined
[12:48] *** bloonix left
[12:49] <ruoso> moritz_, YAPC::Brasil and it was great... it was the first YAPC not hosted by other conference

[12:50] *** bloonix joined
[12:53] *** KyleHa joined
[12:57] *** takadonet joined
[12:57] <takadonet> morning all

[13:04] <colomon> morning!

[13:12] <takadonet> how are you colomon?

[13:12] <colomon> okay.  how about you?

[13:13] * colomon is also eager to see ng work well enough to become master...

[13:14] <takadonet> doing well. Rewriting some perl/bash script that someone else wrote over a decade ago

[13:15] <moritz_> the ng branch is still going to take a while, I fear

[13:16] <takadonet> NO!!!!!

[13:16] <takadonet> hehe

[13:16] <colomon> moritz_: by "a while", you mean a week or two, right?  ;)

[13:16] <takadonet> Hopefully I get time to write some perl 6 scripts for work....

[13:18] <moritz_> colomon: we'll see

[13:18] <moritz_> I mean it's a lot of work, to redo 70% or so of the compiler

[13:19] <moritz_> even if you have the old code to copy from, and the experience of having it done once before

[13:20] <takadonet> I have confidence in jnthn and pmichaud

[13:20] <colomon> they were on fire over the weekend.

[13:21] <moritz_> I have confidence in them too; it'll just depend on their available tuits

[13:33] *** KyleHa left
[13:36] *** meppl left
[13:42] *** payload left
[13:48] *** kolibrie joined
[13:53] <Woodi> tuits ?

[13:53] *** willie__ joined
[13:53] <moritz_> time units

[13:53] <Woodi> ah, thanx

[13:54] *** willie__ left
[13:54] <moritz_> (idiomatic) Virtual tokens for an amount of time or attention that a particular issue would need to resolve. 

[13:54] <moritz_> says wiktionary

[13:56] * Woodi yesterday found term man-centuries...

[13:57] <moritz_> 0.1k man years? ;-)

[13:57] <Woodi> yeah :)

[13:57] <Woodi> topic wasn't p6 or was... do not remember :)

[13:58] <jnthn> oh hi

[13:58] * jnthn has power again

[13:59] <Woodi> but i'm concern about 70% work in refactoring... there will be need of refactoring to remove nqp too ?

[13:59] <Woodi> go go go jnthn++ :)

[14:00] <jnthn> Where on earth did the 70% come from? :-)

[14:01] *** kidd` joined
[14:01] <moritz_> that was my guess of how much of rakudo you're refactoring

[14:02] <Woodi> it was for better statistics in time when you will finish :)

[14:02] <Wolfman2000> *yawn* morning

[14:02] <Woodi> afternoon :)

[14:02] <Wolfman2000> sorry I was too distracted last night to do much Perl6 stuff

[14:03] <moritz_> no need to apologize

[14:03] <moritz_> jnthn: do you think 70% is the wrong ballpark? maybe a bit much...

[14:03] <jnthn> Perhaps. The last couple of days haven't really been representitive of possible progress either.

[14:04] <PerlJam> good morning

[14:04] <jnthn> As I blogged yesterday, I hit a point where I needed to do some conceptual work, rather than just write code. :-)

[14:04] *** explorer left
[14:05] <jnthn> I'm hopeful that we'll be able to pick up the pace again on it soon. :-)

[14:05] <PerlJam> Even if it is 70% refactoring work, it takes place over the course of days or weeks to get a much cleaner, more maintainable system rather than months or years it took to build the "it works, but we're not sure how in some places" system  :)

[14:05] <PerlJam> (IMHO)

[14:06] <moritz_> I'm not complaining about the refactor, not at all

[14:06] <mathw> jnthn: Of course you have to stop sometimes and do some conceptual work. And from the sound of your blog post, you're going to get more out of this than first thought, so it's really quite astonishing.

[14:07] <PerlJam> moritz_: sure.   Perhaps I'm just trying to keep things in perspective (out loud) for myself if no one else  :)

[14:07] <mathw> I'm still in awe of these tools that have been built for making compilers with

[14:07] <PerlJam> mathw: yeah, jnthn++, pmichaud++

[14:07] <PerlJam> mathw: particularly pmichaud++  :)

[14:08] <jnthn> mathw: The lazy lists we'll get out of this is another big win.

[14:09] <jnthn> While I grant that we don't run many of the tests yet, having laziness and foundations for custom metaclasses in at this point - even if we can't test those - is a huge thing. :-)

[14:09] <frettled> I think it's strange that there is a ?from=rss on these use.perl.org blogs, but I see nowhere in there to subscribe via RSS or Atom.

[14:09] <Woodi> PerlJam: "we're not sure how" is sugestion for p5 ? :) no other examples come atm...

[14:10] <frettled> jnthn: nice entry yesterday

[14:11] <moritz_> frettled: if you use a non-ancient browser you'll see the red feed symbol in the address bar when you visit a use.perl.org blog

[14:12] <moritz_> PerlJam: actually somebody thinks the refactor is a bad idea: http://www.reddit.com/r/perl/comments/a0lyu/two_weeks_of_rakudong_work/

[14:12] <frettled> moritz_: Thanks for the hint, _now_ I see a _blue_ feed symbol there

[14:13] <PerlJam> moritz_: there are always naysayers.  I ignore them when I think they're wrong.  :)

[14:13] <moritz_> (s/red/orange/ btw, but I don't think the color is really canonical)

[14:13] <frettled> moritz_: I'm used to it being orange, so I didn't notice it at all.  I'm also used to the webpage itself having a separate link :)

[14:15] *** synth joined
[14:18] <jnthn> that guy is a fail

[14:19] <jnthn> If he even bothred doing some research, he could have read *why* the refactor.

[14:19] *** NorwayGeek joined
[14:19] <moritz_> why research when you can troll?

[14:20] <frettled> heh

[14:20] <frettled> But trolling is so much fun! ;)

[14:21] <moritz_> that's the problem.

[14:21] <frettled> Anyway, I think I _know_ that you guys don't embark on time consuming programming exercises in Perl 6 just because you've got a minor itch to scractch; I think you do it when there's something that itches horribly (i.e.: that really needs fixing).

[14:22] <frettled> So ignore that doofus, whoever he is.

[14:23] <jnthn> Heh, the refactor is fun in some ways, but it's also a serious amount of work too.

[14:24] <jnthn> The kind that I wouldn't do just because I felt like it. :-)

[14:24] <PerlJam> jnthn: you know you're just making up problems to solve with rakudo because you like insane amounts of work  ;)

[14:24] <PerlJam> be honest ;)

[14:25] <jnthn> :-P

[14:25] <frettled> what does that operator do?

[14:25] <PerlJam> frettled: heh!

[14:26] <PerlJam> time for a new language -- emotical

[14:26] <PerlJam> composed entirely of emoticons

[14:26] <jnthn> rakudo: multi postfix:<:-P>($x) { say "$x neeehhh!!" }; "does this" :-P

[14:26] <p6eval> rakudo 5e05b8: OUTPUT«does this neeehhh!!␤»

[14:28] <takadonet> ....

[14:29] <jnthn> Well I guess that answer is, "the :-P operator does whatever you define it to do" :-)

[14:30] <frettled> rakudo: multi postfix<:D>($x) { say "$x joy joy!" }; "happy happy" :D

[14:30] <p6eval> rakudo 5e05b8: OUTPUT«Malformed routine definition at line 2, near "postfix<:D"␤in Main (file <unknown>, line <unknown>)␤»

[14:30] <frettled> whoopsie, missed a colon.

[14:30] <frettled> rakudo: multi postfix:<:D>($x) { say "$x joy joy!" }; "happy happy" :D

[14:30] <p6eval> rakudo 5e05b8: OUTPUT«happy happy joy joy!␤»

[14:31] <jnthn> Smile 6. 

[14:31] <jnthn> You could actually make an assertion system with this.

[14:32] <jnthn> 0 <= $percentage <= 100 :-)

[14:32] <jnthn> $x > $limit :-(

[14:32] <jnthn> ...but it wasn't my idea. :-)

[14:32] *** payload joined
[14:33] *** masak joined
[14:33] <masak> good afternoon, #perl6

[14:34] <PerlJam> jnthn: have you seen ruby's rspec or cucumber ?  Check out the code examples at http://rspec.info 

[14:34] <Wolfman2000> Good grief, have to get used to all of the different time zones we have.

[14:34] <PerlJam> Wolfman2000: welcome to the internet  :)

[14:35] <jnthn> Worse, some of us work in a different time zone than we live in. ;-)

[14:36] <jnthn> PerlJam: But...they lack smilies ;-)

[14:36] <frettled> This is why my own servers «work» in UTC.

[14:36] <masak> rakudo: ({nextsame})()

[14:36] <p6eval> rakudo 5e05b8: OUTPUT«Null PMC access in clone()␤in Main (file <unknown>, line <unknown>)␤»

[14:36] <masak> did that one ever get reported?

[14:37] <jnthn> Well, I've seen it plenty of times before...

[14:37] <jnthn> Though that doesn't mean there's a ticket.

[14:37] <masak> diakopter triggered it yesterday.

[14:37] <jnthn> Yeah, but that wasn't the first time I've seen it.

[14:37] <masak> then he allegedly played dumb when moritz_ told him to submit it :)

[14:38] <masak> no wonder I get all the tickets around here! :)

[14:38] * masak submits

[14:49] * masak likes pmichaud++'s long 'priorities' email to parrot-dev

[15:11] * mathw does too

[15:11] <mathw> pmichaud++

[15:11] <masak> ah, reddit. I love the topmost comment, and how it expresses several different kinds of cluelessness very succinctly. http://www.reddit.com/r/perl/comments/a0lyu/two_weeks_of_rakudong_work/

[15:12] <masak> there's some form of general "I want a pony, now" mentality on the Intertubes.

[15:12] *** payload left
[15:12] <masak> people like to whine and complain a lot, but they don't contribute, or learn about the actual state of things.

[15:12] <jnthn> ...raku*dong*? :)

[15:13] * jnthn declines to draw the logo for that project

[15:13] <masak> and then there's people like jnthn... :P

[15:13] *** payload joined
[15:13] <jnthn> OK, Slovak class time.

[15:13] <jnthn> Back later, probably.

[15:14] <masak> have the appropriate amount of Slovak!

[15:14] <jnthn> Budem! :-)

[15:16] <mathw> masak: Clearly not an experienced programmer

[15:16] <frettled> masak: that almost sounded obscene ;)

[15:19] <masak> frettled: what, and jnthn's raku-dong wasn't? :)

[15:21] <PerlJam> It wasn't jnthn's, that's what the URL had in it  :)

[15:21] *** ab5tract joined
[15:22] <mathw> actually it just made no sense

[15:22] <masak> PerlJam: "obscenity is in the eye of the beholder" :)

[15:22] <mathw> Slovak is not something you can have an amount of

[15:23] <masak> mathw: sure you can! I have very little Slovak daily (most of it from jnthn), jnthn has a higher amount of daily Slovak...

[15:23] <mathw> no, you 'know' languages

[15:23] <mathw> maybe you 'understand' or 'speak' them

[15:23] <mathw> but you don't 'have' them

[15:23] <mathw> although people will probably understand you if you say that anyway :)

[15:24] <masak> maybe I need to have more English. :P

[15:24] <mathw> lol

[15:24] <PerlJam> mathw: you are mistaken.  I have Perl.  I have Perl 6 too.  :)

[15:24] <mathw> well I seem to recall using 'haben' for language capability in German

[15:24] <mathw> so I'm guessing you do something similar in Swedish?

[15:24] <masak> mathw: no, that's not what was involved here.

[15:24] <masak> mathw: I just built on the template 'have the appropriate amount of fun'.

[15:24] <frettled> mathw: You can «have» a Slovak, a Swede, an Englishman, etc.

[15:25] <masak> mathw: and I didn't care much for the resulting meaning.

[15:25] * PerlJam notes that the spanish speakers around here "have" language too.

[15:25] <mathw> frettled: yes, I'm aware of that

[15:25] *** reid02 joined
[15:25] <masak> mathw: though for me, to 'have Slovak' would probably mean to have a Slovak class.

[15:25] <masak> mathw: and that is (as you point out) not subject to gradation.

[15:29] *** _particle_ joined
[15:30] <[particle]> are you saying slovaks have no class?

[15:31] *** _particle_ left
[15:31] *** s1n joined
[15:32] *** Psyche^ joined
[15:37] <masak> [particle]: quoting Babbage, "I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question."

[15:44] *** Patterner left
[15:44] *** Psyche^ is now known as Patterner

[15:50] <dukeleto> moritz_: i fixed my nqp-rx issue, but thanks

[15:51] <masak> spinclad: thanks for the heads-up about the brackets mismatch. the text was there, but it was transparent.

[15:51] <dukeleto> moritz_, masak, jnthn : y'all have commit access to the parrot mirror on github now : https://github.com/leto/parrot , to easy the creation of review branches, etc

[15:51] *** Wolfman2000 left
[15:51] <dukeleto> s/easy/ease/g

[15:52] * dukeleto can't type so good before coffee

[15:55] <PerlJam> dukeleto: is parrot finally switching to git?  Or is it just the same old thing where many devs are using git?

[15:57] *** justatheory joined
[15:58] *** nihiliad joined
[16:00] *** gfldex joined
[16:01] <dukeleto> PerlJam: most parrot core devs want git, but we cannot move to git before 2.0 

[16:02] <PerlJam> 2.0 comes out in Jan 2010, right?

[16:02] <dukeleto> PerlJam: many devs use git to make git branches of parrot and then just submit a patch later on

[16:02] <dukeleto> PerlJam: yes

[16:02] <dukeleto> PerlJam: post 2.0, i am going to be lobbying hard for a git conversion

[16:03] <PerlJam> dukeleto++  :)

[16:03] <dukeleto> PerlJam: but a git conversion has not yet been set in stone or given a definite version number

[16:03] *** kidd` left
[16:03] <dukeleto> PerlJam: I estimate that it will happen between 2.0 and 3.0 :)

[16:03] <dukeleto> PerlJam: hopefully closer to 2.0 ;)

[16:11] *** payload left
[16:24] *** payload joined
[16:31] <pugs_svn> r28992 | particle++ | [perl6.org] say 'chat live' to make link action more clear 

[16:39] *** brunov joined
[16:43] *** fax joined
[16:46] *** envi^home left
[16:48] <pugs_svn> r28993 | particle++ | [perl6.org] use non-breaking spaces when referencing perl versions 

[16:50] <moritz_> didn't we do that already

[16:50] <[particle]> apparently not, or it needs to be done more than once

[16:50] <moritz_> [particle]: they were just entered as non-breaking spaces, not as their HTML entity

[16:51] <[particle]> ah.  that's not easy to see :)

[16:51] <moritz_> a question of your editor ;-)

[16:51] <[particle]> i wonder if i can make vim shade non-breaking spaces differently

[16:52] <moritz_> Ctrl+k NS ENTER

[16:52] <moritz_>  / Ctrl+k NS ENTER

[16:52] *** szabgab left
[16:53] <[particle]> set listchars=nbsp:¬

[16:54] <[particle]> i'd rather have it differently colored, though, rather than displaying a different character

[16:54] <moritz_> that's what the search does, if you set hlsearch

[16:55] <[particle]> yes, but i want it permanent

[16:57] <moritz_> hi link nonprintable Error

[16:57] <moritz_> au Syntax * syn match nonprintable / / display

[16:59] *** rfordinal3643 joined
[17:00] <SmokeMachine> rakudo: my @a=1, 1 ... {$^a + $^b}; @a[2].say

[17:00] <p6eval> rakudo 5e05b8: TIMED_OUT

[17:00] <moritz_> SmokeMachine: it's not yet lazy

[17:00] <moritz_> rakudo: my @a=1, 1 ... {$^a + $^b}, 100; @a[2].say

[17:00] <p6eval> rakudo 5e05b8: OUTPUT«2␤»

[17:00] <SmokeMachine> moritz_, hum... sorry...

[17:00] <moritz_> SmokeMachine: no problem

[17:01] <SmokeMachine> moritz_, thank's

[17:01] <moritz_> rakudo: my @a=1, 1 ... {$^a + $^b}, 100; say ~@a[0..4]

[17:01] <p6eval> rakudo 5e05b8: OUTPUT«1 1 2 3 5␤»

[17:01] *** yves joined
[17:01] <moritz_> rakudo: my @a=1, 1 ... *+*, 100; say ~@a[0..4]

[17:01] <p6eval> rakudo 5e05b8: OUTPUT«1 1 2 4 8␤»

[17:01] *** hanekomu left
[17:01] <moritz_> that just doubles, hm

[17:02] <jnthn> I should actually learn what the series operator does some day...

[17:02] <moritz_> jnthn: it just invokes the closure with the last $closure.count items

[17:03] <moritz_> jnthn: there are magic versions too, though

[17:03] <moritz_> rakudo: say 'a' ... 'g'

[17:03] <p6eval> rakudo 5e05b8: OUTPUT«abcdefg␤»

[17:04] <jnthn> rakudo: say 'a' .. 'g'

[17:04] <p6eval> rakudo 5e05b8: OUTPUT«abcdefg␤»

[17:04] <jnthn> Is that still spec?

[17:04] <moritz_> yes

[17:05] <moritz_> just :by is gone

[17:11] *** brunov left
[17:13] *** desertm4x joined
[17:13] *** beggars joined
[17:13] *** szabgab joined
[17:13] <jnthn> Ah, OK.

[17:13] *** ab5tract left
[17:18] *** rfordinal left
[17:30] *** brunov joined
[17:34] *** sjohnson left
[17:38] *** envi^home joined
[17:38] *** envi^home left
[17:48] *** cdarroch joined
[17:48] *** alester left
[17:55] *** stephenlb joined
[17:58] *** ejs joined
[17:59] *** desertm4x_ joined
[18:00] *** desertm4x left
[18:00] *** am0c joined
[18:03] *** xp_prg joined
[18:05] <TimToady> I rather suspect that the (Num @array) problem is going to become our #1 FAQ if we don't do something about it.

[18:06] <Juerd> What kind of doing something are you thinking of?

[18:07] <jnthn> TimToady: What Num @array problem?

[18:07] <jnthn> Or were the parens significant?

[18:07] <TimToady> it's a sig

[18:07] <TimToady> but it doesn't match 1,2,3

[18:08] <TimToady> or even [1,2,3]

[18:08] <jnthn> Right.

[18:08] <jnthn> Well, the real issue is that there's no good way that I know of to write a litral typed list or array.

[18:08] <jnthn> *literal

[18:08] <jnthn> Or is there?

[18:09] <TimToady> can't use Num[] since that means generics

[18:09] <jnthn> Right.

[18:10] <jnthn> And Array[Num](1,2,3) is a tad, well, hefty.

[18:10] <TimToady> (Array of Num)(1,2,3) is clunky too

[18:10] <jnthn> Yes

[18:10] <jnthn> [1, 2, 3] of Num

[18:11] <jnthn> [1, 2, 3] :of(Num) # adverb to the circumfix...

[18:11] <jnthn> If that ever could work. I still don't like it so much.

[18:11] * Juerd would prefer a syntax where the type is in front of the array

[18:11] <TimToady> adverbs are usually a desgin smell

[18:11] <TimToady> not to mention a design smell

[18:11] <jnthn> Juerd: Yeah, that was actually my main dislike.

[18:11] *** Wolfman2000 joined
[18:12] <moritz_> why do we have them, then?

[18:12] <moritz_> as a design smell trap?

[18:12] *** SmokeMachine left
[18:12] <TimToady> Nummy 1,2,3  :)

[18:12] <Wolfman2000> ...I've chosen a bad wireless location I think. 

[18:13] <TimToady> moritz_: yes, they're design smell trap because they are a feature intended to patch up a bad design, which you need sometimes :)

[18:13] <Juerd> Nameless assignment?

[18:13] <Juerd> Num @ = ...;

[18:14] <moritz_> that looks so perl5ish ;-)

[18:14] <Juerd> moritz_: I love Perl 5

[18:14] <TimToady> Juerd: can't parse Num without a my or some such in front

[18:14] <moritz_> me to. To a certain extend ;-)

[18:15] <Wolfman2000> ...and just as I was about to be able to try out some more data structure stuff for Perl6, I've been emailed to help with another situation. Gah.

[18:15] <TimToady> std: Num @ = ...;

[18:15] <p6eval> std 28993: OUTPUT«===SORRY!===␤Confused at /tmp/Iuzipc5eHZ line 1:␤------> Num ⏏@ = ...;␤    expecting any of:␤     bracketed infix␤  infix stopper␤    standard stopper␤ statement modifier loop␤  terminator␤FAILED 00:01 107m␤»

[18:15] <Wolfman2000> At least this new situation will involve payment. Sorry guys, but money kind of helps. *semi afk*

[18:19] <frettled> Okay, this is a challenge.

[18:20] <frettled> It's a challenge of the kind: "Oh, look, here I am in the corner, and there's wet paint all around. Hmm."

[18:20] <frettled> so the solution is obviously to either 1) let the paint dry, or 2) walk onto the wet paint, paint the corner, and paint over your tracks as you proceed towards the door.

[18:20] <frettled> HTH, HAND.  :)

[18:21] <TimToady> 3) swing from the chandalier

[18:21] <Juerd> frettled: You're assuming there's a door :)

[18:21] <frettled> do we have a chandelier?

[18:22] <frettled> Juerd: not having one would be a surprise, kind of, but I'm sure we have at least an exit().

[18:22] <TimToady> 4) dig up a few floorboards and escape to the basement

[18:22] *** alester joined
[18:22] <TimToady> 5) quantum tunnel through the wall

[18:23] *** mariuz left
[18:23] <TimToady> 6) rewire the microwave so it'll work with the door open, and then aim it at the paint

[18:23] <TimToady> 7) hot air balloon

[18:24] <moritz_> 8) make a video of it, upload it to youtube, make a fortune of it, and hire some real painters to it properly for you next time

[18:24] <frettled> But we're not Python developers, where will we find the hot air?

[18:25] <frettled> moritz_: that was an extra good one :)

[18:25] <frettled> Though I'm not sure what this message would say: "Perl 7 - we hired professionals this time"

[18:26] <Juerd> of Num: 1, 2, 3

[18:26] <Juerd> # Num.of(1, 2, 3)

[18:26] <moritz_> frettled: just don#t overstrech the analogy ;-)

[18:26] *** sjohnson joined
[18:27] <moritz_> s/#/'/

[18:27] <frettled> moritz_: what, are you worried that the bungee cord that we tied to the chandelier will a) bring down the chandelier, or b) tear off?

[18:27] <Juerd> Hm, but how does it know it's supposed to be an array, not a hash...

[18:27] <Juerd> of Num: [ 1, 2, 3 ]

[18:28] <frettled> Nøm [ 1, 2, 3 ]

[18:28] <Juerd> nomnom

[18:28] <jnthn> std: [ Num: 1, 2, 3 ]

[18:28] <p6eval> std 28993: OUTPUT«===SORRY!===␤Illegal redeclaration of 'Num' at /tmp/0ptRqUQcPu line 1:␤------> [ Num: ⏏1, 2, 3 ]␤FAILED 00:01 106m␤»

[18:29] <jnthn> ...I redeclared?

[18:29] <TimToady> label

[18:29] <jnthn> oh

[18:29] <frettled> And how do we specify multidimensionals with different types, or, or, or? :D

[18:29] <jnthn> ...label inside a circumfix?!

[18:29] <TimToady> all circumfixes are statements inside

[18:29] <jnthn> Do not need.

[18:29] <jnthn> heh

[18:30] <jnthn> goto inside_of_a_circumfix_duh

[18:30] <frettled> inside are statements all circumfixes?

[18:31] <TimToady> std: [ $_ * 2 if .odd for 1..100 ]  # that's how list comprehensions work

[18:31] <p6eval> std 28993: OUTPUT«ok 00:01 108m␤»

[18:32] <TimToady> and why we don't need special syntax for them, unlike, say, Python

[18:32] <Juerd> Nice one

[18:33] <jnthn> TimToady: To be clear, it was the labels inside circumfixes I was saying "do not need" to, not parsing a statement in there. But I figure then we fail on consistency, which isn't so good.

[18:33] <TimToady> is also why we relaxed the "only one statement modifier" rule

[18:33] * Juerd never quite liked that rule

[18:33] <TimToady> why wouldn't you need a label there?

[18:34] <jnthn> Well, maybe you would.

[18:34] <TimToady> std: [ LINE: for lines() { next LINE unless /foo/; $_ } ]

[18:34] <p6eval> std 28993: OUTPUT«ok 00:02 110m␤»

[18:34] <jnthn> yeah. :-/

[18:34] *** Bzek left
[18:34] <jnthn> OK, that won't work then.

[18:35] <TimToady> it seems to me that we want two things

[18:35] <TimToady> 1) an easier way to coerce those things explicitly

[18:35] <TimToady> 2) an easier way to say DWIM, darnit!

[18:36] <Juerd> If you invent 2, you get 1 for free, right? :)

[18:36] <TimToady> not necessarily

[18:36] <TimToady> not if 2) doesn't DWYRM

[18:37] <TimToady> but we already did a little of 2 with <1 2 3>

[18:37] <frettled> mm

[18:37] <jnthn> I guess we don't want to go down the "if they're all literals and of the same type, just make a typed list/array"?

[18:37] <Juerd> is(DWIM, DWIRM);  # luser sanity check

[18:37] *** Wolfman2000 left
[18:37] <TimToady> that would probably be a little too dwimmy

[18:38] *** zamolxes left
[18:38] *** Wolfman2000 joined
[18:38] <Wolfman2000> okay, I think I'm at a better connection spot

[18:39] <TimToady> but it's certainly one extreme in design, and might work out better than expected if, say Array of Int ends up matching Array of Num in the sig

[18:39] *** Juerd left
[18:39] <Wolfman2000> rakudo: say 3 > NULL;

[18:39] <p6eval> rakudo 5e05b8: OUTPUT«Could not find non-existent sub NULL␤in Main (file src/gen_setting.pm, line 324)␤»

[18:40] <Wolfman2000> ...right, undef

[18:40] <TimToady> that is, over-narrowing the type to Int @ might just end up dispatching back to (Num @array) anyway

[18:40] <Wolfman2000> rakudo: say 3 > undef;

[18:40] <p6eval> rakudo 5e05b8: OUTPUT«Use of uninitialized value␤1␤»

[18:40] <Wolfman2000> ...gah, is my memory really off?

[18:40] <TimToady> what are you trying to do?

[18:41] <Wolfman2000> TimToady: Just want to see if any integer is greater than null or undef or whatever the perl empty value was that I can't seem to remember.

[18:41] <Wolfman2000> doesn't help that I now can't connect back to my Feather Box

[18:41] <Wolfman2000> I'm getting timed out errors

[18:41] <moritz_> Wolfman2000: well, it did say 1 at the end

[18:41] <moritz_> so it 3 > undef is true

[18:42] <moritz_> it just also warned

[18:42] <frettled> TimToady: Is that a way of saying that we solve that problem when we try to do something with the array, rather than when we initialize it?

[18:42] <Wolfman2000> moritz_: ...didn't see that. Saw the use of uninitialized value aprt.

[18:43] <moritz_> frettled: it's mostly about lists, not arrays

[18:43] *** SmokeMachine joined
[18:43] <moritz_> and they are usually not declared

[18:43] <Wolfman2000> ...I'm not having good ping results, am I?

[18:43] *** meppl joined
[18:43] <moritz_> they are either literals, or results from other operations

[18:44] <frettled> moritz_: if you have results from operations, then the operations could provide internal hints.  But for literals, you don't really get good hints.

[18:45] <moritz_> frettled: isn't it more the other way round? literals we can inspect at compile time...

[18:46] <moritz_> frettled: but a map() usually has no clue what kind of list it returns

[18:46] <frettled> moritz_: well, not all operations can know, but some can.  For literals, you don't know whether it's Int or Num, as exemplified.

[18:47] <moritz_> you don't?

[18:47] <moritz_> 3 <-- Int

[18:47] <frettled> Okay, how do you know whether <1 2 3> is a list of Int or Num?

[18:47] <moritz_> 3.4 <-- Rat

[18:47] <moritz_> sure, Int

[18:47] <moritz_> and since Int ~~ Num that's no problem

[18:47] <frettled> But if I want to coerce it to be Int or Num, then what?

[18:48] <moritz_> why would you want to coerce it into a List[Num] if a List[Int] will do just fine?

[18:49] <frettled> Because I might want to use it for something other than Int at a later time without getting an error?

[18:49] <moritz_> lists are immutable

[18:49] <moritz_> you can't stuff anything into them anyway

[18:50] <frettled> moritz_: well, in that case, we _were_ talking about arrays, not lists :)

[18:50] <frettled> moritz_: sorry for being easily confused today, I'm still having a fever.

[18:51] <moritz_> frettled: arrays need to be declared anyway, so you can just declare them appropriately

[18:51] <moritz_> my Num @a;

[18:52] <frettled> moritz_: See what jnthn wrote about there not being a way to write a literal typed list or array.

[18:52] <TimToady> moritz_: [...] is an undeclared array

[18:52] <moritz_> TimToady: point taken

[18:53] <TimToady> looking at currently illegal syntax...

[18:53] <moritz_> there's not much left :(

[18:53] <frettled> one changelog entry away from being legal?

[18:53] <TimToady> std: @[Num] 1,2,3

[18:53] <p6eval> std 28993: OUTPUT«===SORRY!===␤Anonymous variable requires declarator at /tmp/R0xFwCrwUb line 1:␤------> @⏏[Num] 1,2,3␤    expecting twigil␤FAILED 00:01 105m␤»

[18:53] <TimToady> std: @*

[18:53] <p6eval> std 28993: OUTPUT«===SORRY!===␤Anonymous variable requires declarator at /tmp/8pJwMl4LMU line 1:␤------> @⏏*␤    expecting twigil␤FAILED 00:01 103m␤»

[18:53] *** hatseflats left
[18:53] <TimToady> std: @*(1,2,3)

[18:53] <p6eval> std 28993: OUTPUT«===SORRY!===␤Anonymous variable requires declarator at /tmp/9J4JqeSF7b line 1:␤------> @⏏*(1,2,3)␤    expecting twigil␤FAILED 00:01 103m␤»

[18:53] *** PerlJam left
[18:53] *** pugs_svn left
[18:53] *** dalek left
[18:53] *** hugme left
[18:54] <diakopter> there went feather

[18:54] <Wolfman2000> diakopter: So I wasn't the only one with feather connecting problems?

[18:54] <TimToady> maybe I killed it with the @* :)

[18:55] <Wolfman2000> ...I'll hope it's restored in roughly 5 minutes: I have to change wireless locations. The college library sucks right now.

[18:55] *** pmichaud left
[18:55] *** Wolfman2000 left
[18:55] <frettled> Wolfman2000: what about a wired connection?  :D

[18:55] <diakopter> p6eval is on another vps of mine

[18:55] <TimToady> yes, I know, I was just thinking it killed it in absentia

[18:56] <diakopter> hah

[18:56] <TimToady> I was intentionally applying post hoc reasoning :)

[18:56] *** jhorwitz joined
[18:57] <diakopter> I knew I had concluded that was the only good kind, for a reason.

[18:57] <diakopter> the only good kind of reasoning, I mean

[18:57] <TimToady> the only propter kind of reasoning, anyway

[18:59] <diakopter> where's crythias when we need him

[18:59] *** am0c left
[18:59] <frettled> better than post doc reasoning

[18:59] <frettled> (phdcomics)

[18:59] <TimToady> we should do something while jnthn and pmichaud are offline :)

[18:59] <moritz_> @[Num] is the least bad so far, IMHO

[18:59] <lambdabot> Unknown command, try @list

[19:00] <moritz_> lambdabot: and you shut up

[19:00] <diakopter> oh yeah, I wanted to announce that I converted sprixel over to be a PAST interpreter

[19:00] <diakopter> nqp hosting, here we come

[19:00] <moritz_> oh wow

[19:01] <diakopter> Q:PIR support will be tricky ;)

[19:01] * moritz_ greps for Q:PIR in nqp-rx

[19:01] * diakopter thought there was some

[19:01] <moritz_> not all that much, actually

[19:02] * diakopter acks

[19:02] *** Wolfman2000 joined
[19:02] <moritz_> many of them are things like 

[19:02] <moritz_> our @BLOCK := Q:PIR { %r = new ['ResizablePMCArray'] };

[19:02] <diakopter> set-property or whatever

[19:02] <Wolfman2000> To any Perlers (anyone have a better name?) that go to college: student unions > libraries

[19:02] <Wolfman2000> diakopter: feather still down for you?

[19:02] <diakopter> yeah

[19:03] <Wolfman2000> then at least it's not just me

[19:03] *** [particle] left
[19:03] <moritz_> get_hll_global, find_lex, set_hll_global

[19:03] <Wolfman2000> I was trying to plan the right way to implement a linked list.

[19:03] <Wolfman2000> I need to get better with Perl 6 classes in general before I can feel I can contribtue decently to Web.pm

[19:04] <frettled> I'm trying to think of something that @[Num] could be confused with.

[19:04] <diakopter> and I improved the interpreter-engine-in-js another 100-fold by caching cloner closures for each ast node on initialization

[19:04] <moritz_> diakopter: there seem to be about 10 Q:PIR in nqp-rx that you'd need to substitute... don't know how much PIR runtime there is though

[19:04] <TimToady> Wolfman2000: I think your subs > libs would qualify as reasoning from specific to general :)

[19:04] <diakopter> so it gets around 30m ops/second on my machine

[19:05] <diakopter> which isn't atrocious

[19:05] <Wolfman2000> TimToady: I don't think I understand exactly what you mean.

[19:05] <TimToady> subs > libs in your experience

[19:05] <TimToady> that doesn't mean it will work for everyone...

[19:06] <Wolfman2000> subs...as in subroutines.

[19:06] <Wolfman2000> and libs as in libraries

[19:06] <TimToady> subs == student union buildings

[19:06] <diakopter> Wolfman2000: store each link in the linked list in a closure! that'll optimize for efficiency.  I'm kidding.

[19:06] <Wolfman2000> diakopter: I'll have no problem with people modifying my code...within reason.

[19:06] <Wolfman2000> I'll code it the way I know how, and then you guys can help me with making it more perl like

[19:07] <frettled> TimToady: I always think of expensive sandwiches ;)

[19:07] <Wolfman2000> ...actually, since Perl 6 isn't even out of beta, what IS considered perl like?

[19:07] *** [particle] joined
[19:08] <TimToady> What is the sound of six Perls not clapping?

[19:08] <Wolfman2000> undef

[19:08] * Wolfman2000 doesn't know

[19:09] <TimToady> there are many kinds of undef in Perl 6 :)

[19:09] <Wolfman2000> ...shows how behind I am then.

[19:09] <Wolfman2000> Not just a plain undef anymore...can you elaborate on how defined undef can be?

[19:10] <TimToady> see S02:991

[19:10] *** ejs left
[19:10] <Wolfman2000> Synopsis 2...never figured out what the other numbers meant

[19:10] <Wolfman2000> come on perlcabal, load...

[19:10] <moritz_> Wolfman2000: it's a line number

[19:11] <moritz_> Wolfman2000: if you look at http://irclog.perlgeek.de/perl6/today that S02:991 is turned into a link

[19:11] <TimToady> which reads http://perlcabal.org/syn/S02.html#line_991

[19:11] <moritz_> Wolfman2000: which points directly to the line of the spec that TimToady is talking about

[19:11] <Wolfman2000> ...wow. live logging

[19:11] <Wolfman2000> Also, the page wouldn't load

[19:11] *** Guest41472 left
[19:12] <Wolfman2000> timed out

[19:12] <moritz_> that's hosted on feather

[19:12] <moritz_> gotcha

[19:12] *** mberends joined
[19:12] <Wolfman2000> okay, who is tarring and feathering the bird?

[19:12] <TimToady> I thought we were supposed to tar and feature it...

[19:13] <Wolfman2000> If you do that, the bird can't fly.

[19:13] <Wolfman2000> Then again, perhaps I'm mixing up my analogies now.

[19:13] <hercynium> rakudo: { say .clap if undef } for 'perl' x 6

[19:13] <p6eval> rakudo 5e05b8:  ( no output )

[19:13] <hercynium> (that took me far too long to get working in priv)

[19:14] <hercynium> (and probably still doesn't do what I think it does)

[19:15] <TimToady> interesting, feather seems to have even dropped from DNS

[19:15] *** [1]jaffa8 joined
[19:16] <Wolfman2000> ...dropped? Meaning...we no longer have it?

[19:16] <TimToady> seems a bit late for asteroids in the NL

[19:16] <TimToady> if anyone still has feather's old IP address, try logging onto that...

[19:16] <moritz_> 193.200.132.135

[19:16] <moritz_> for feather1

[19:16] <moritz_> nope

[19:17] <moritz_> not reachable

[19:17] <Wolfman2000> Can't seem to SSH into it myself

[19:17] <TimToady> maybe it's just a dike

[19:17] <moritz_>  8  compukos.demarc.nik-ams.nl.as8312.net (195.210.57.163)  10.832 ms  11.075 ms  11.046 ms is the last hop

[19:18] <TimToady> amsterdam, I guess

[19:18] <TimToady> so probably not a dike :)

[19:19] <TimToady> I wonder if feather is in the same building as its dns server...

[19:19] <Wolfman2000> ...are you saying the feather server may be flooded TimToady?

[19:19] <moritz_> TimToady: wouldn't surprise me

[19:19] <TimToady> no, I'm saying probably not that, now... :)

[19:20] <TimToady> more likely localized power failure

[19:20] <TimToady> so if a flood, probably only someone's basement

[19:20] <Su-Shee> I get this IP for feather.nl: 194.165.34.128

[19:21] <Wolfman2000> connection refused for SSHing purposes

[19:21] <TimToady> well, probably hasn't got a lot to do with perl6.nl

[19:22] <Wolfman2000> ...should we perhaps mirror some of the synopses somewhere?

[19:23] * moritz_ has a local git mirror of the docs/ dir

[19:23] <Wolfman2000> moritz_: I meant a web accessible mirror

[19:23] <moritz_> Wolfman2000: http://perl6.cz/wiki/Synopses/en

[19:23] <frettled> My traceroute to feather.nl completes nicely.

[19:23] <moritz_> frettled: but we're interested in feather.perl6.nl

[19:24] <frettled> ah, duh :)

[19:24] <Wolfman2000> I don't think line numbers work too well with the wiki page moritz_ 

[19:24] <moritz_> Wolfman2000: right

[19:25] <frettled> The nameservers for perl6.nl are in the same RIPE IP range, at least, which is not BCP.

[19:26] <frettled> (and hasn't been for at least 15 years)

[19:26] <moritz_> BCP?

[19:26] <frettled> none of them respond.

[19:26] <frettled> moritz_: best current practice

[19:27] <TimToady> or maybe the creditors pulled the plug, literally...

[19:27] <frettled> ooh, even worse, the nameservers for the nameservers are the nameservers themselves.

[19:27] <frettled> foot shot.

[19:27] <Wolfman2000> ah, more undefined types...here we go

[19:27] <Wolfman2000> undef, fail, Nil, Object, Whatever, and Failure

[19:28] <TimToady> Num, Int, Str etc. as well

[19:28] <TimToady> rakudo: say Num.defined

[19:28] <p6eval> rakudo 5e05b8: OUTPUT«0␤»

[19:28] <moritz_> rakudo++

[19:28] <diakopter> TimToady: I think feather hosted DNS for perl6.nl at some point as well...

[19:28] <frettled> Dordrecht.  When I visited with Abigail this fall, we went to Dordrecht after photographing windmills.

[19:29] <Wolfman2000> rakudo: say -9999999999 > -Inf;

[19:29] <p6eval> rakudo 5e05b8: OUTPUT«1␤»

[19:29] <diakopter> did you tilt the camera slightly?

[19:29] <Wolfman2000> just checking

[19:29] <frettled> diakopter: probably

[19:29] <diakopter> oh good

[19:30] <TimToady> yeah, the bottom half of a windmill isn't terribly interesting

[19:30] <Wolfman2000> ...a polymorphic type? When did I miss this?

[19:30] <TimToady> CS 201?

[19:31] <Wolfman2000> rakudo: my Int|Num $test = 1; $test += 0.5; say $test;

[19:31] <p6eval> rakudo 5e05b8: OUTPUT«Malformed declaration at line 2, near "Int|Num $t"␤in Main (file <unknown>, line <unknown>)␤»

[19:31] <Wolfman2000> :(

[19:31] <TimToady> that syntax is unlikely to work in the long run

[19:32] <Wolfman2000> are there plans for alternate syntax?

[19:32] <TimToady> both | and & already mean something else in signatures

[19:32] <TimToady> not yet

[19:32] *** jaffa8 left
[19:32] *** [1]jaffa8 is now known as jaffa8

[19:33] <Wolfman2000> ∪ This is the union shape. What can be an equivalent to this...

[19:33] <TimToady> we're not in a hurry to add unions as storage types

[19:33] <frettled> TimToady: oh, the bottom half of the windmill is more exciting, that's where all the cool stuff is.

[19:34] <TimToady> but that's inside where you can't see it from the outside

[19:35] <TimToady> Wolfman2000: and you can already add unioned constraints by defining a subset type

[19:35] <TimToady> you just can't have a variable whose type is a subset type

[19:35] <frettled> The outside has the brake, the sail adjustment, the gates, the water paddle access, the door, the windows, the pier, ...

[19:35] <TimToady> just a variable whose type is constrained to match the subset type

[19:36] <Wolfman2000> ...then what kind of type is a good name for both Int and Num?

[19:36] *** juerd joined
[19:36] <frettled> Num!

[19:36] <moritz_> Real

[19:36] <moritz_> Numeric

[19:36] <juerd> In case you're wondering why feather's unreachable: our fiber uplink is dead :(

[19:36] <TimToady> Wolfman2000: the trouble is that you're meaning more than one thing by "type"

[19:36] <Wolfman2000> Got any Phoenix Downs?

[19:36] <diakopter> get out the polisher

[19:37] <moritz_> juerd: good to know, thanks

[19:37] <frettled> juerd: yep, I can see that it took your DNS and hosting provider out, you could mention to them that having at least one NS in a different physical location is a Good Thing™

[19:38] <frettled> juerd: tough luck, though :(

[19:38] <Wolfman2000> ...in all seriousness, is there a way to revive the uplink?

[19:38] <juerd> frettled: I am my DNS and hosting provider.

[19:38] <TimToady> on one level, there is no such thing as something which is both Int and Num

[19:38] <frettled> juerd: aha.  Well, tell yourself, then.  :D

[19:38] <TimToady> on another level, an Int is a kind of Num

[19:38] <juerd> frettled: An off-site DNS server is going to be set up in the next two months.

[19:39] <juerd> It used to be entirely useless as the DNS only pointed to hosts behind the same connection.

[19:39] <frettled> And now I see the connection between your nae and that of the tech-c - heh, slow me.

[19:39] <juerd> Wolfman2000: A switch is broken. The connection can be revived by fixing or replacing the switch. Our fiber supplier's engineers are working on it.

[19:40] <TimToady> biab &

[19:40] *** kidd` joined
[19:40] <Wolfman2000> *nods to all conversations...plenty to take in*

[19:40] <frettled> Wolfman2000: hee-hee :)

[19:40] <frettled> juerd: don't you just love this kind of situation?

[19:41] <juerd> frettled: No, I'm furious.

[19:41] *** Su-Shee left
[19:41] <juerd> Especially since it is the third time in a few months.

[19:41] <frettled> juerd: yow

[19:41] <frettled> juerd: that's way too often

[19:41] <juerd> It's no use being furious outside office hours though.

[19:41] <juerd> (20:41 here)

[19:42] <frettled> juerd: we've been bitten similarly at my workplace, but we have four redundant fiber links, so it hasn't hurt _much_

[19:42] <juerd> We can't possibly afford that.

[19:42] <zaslon> lolmoritzhazblogged! moritz++ 'Perl 6: Lost in Wonderland': http://perlgeek.de/blog-en/perl-6/lost-in-wonderland.html

[19:42] <juerd> This single link costs us over 2000 EUR/month.

[19:44] <frettled> Look on the bright side; it's cheaper than a 56 kbps Atlantic link was in 1995.  ;)

[19:45] <frettled> Does your SLA give you some kind of compensation?

[19:45] <diakopter> moritz_: typo - Plant Perl

[19:45] <moritz_> he ;-)

[19:46] <juerd> frettled: Yes, but that's but a fraction of the actual loss, which is mostly one of reputation.

[19:46] <moritz_> that's a problem with English - far too many typos produce valid words again

[19:46] <moritz_> which my spell checker can't catch, obviously

[19:46] <Wolfman2000> If anyone is able to teach me ひらがな properly so I don't have to worry about english, by all means let me know.

[19:47] * Wolfman2000 is more a math person than an english person

[19:47] <frettled> Wolfman2000: I'm quite sure you can have interesting typos in ひらがな as well.

[19:47] <Wolfman2000> bah

[19:47] <mdxi> and if you always write in hiragana, you read like a 5 year-old :)

[19:48] <Wolfman2000> mdxi: I know very little hiragana and katakana. The only kanji I really know is from playing DDR

[19:48] <mdxi> ("read" as in "sound like", not "read" as in "have the reading comprehension of")

[19:48] <frettled> juerd: mm.  It took a while before my company could expand from having two lines to three to four.  Also, digging ditches in Oslo is expensive, around EUR 1200/m.

[19:49] <juerd> It's a bit cheaper here, but we're on an island. Crossing water is not that cheap.

[19:49] *** SmokeMachine left
[19:50] <arnsholt> Wolfman2000: Well, learning languages is to a certain extent more a math thing than an English thing =)

[19:50] <Wolfman2000> ...laptop is on low power. great. well, my time is almost up for this time of day anyway.

[19:50] <Wolfman2000> arnsholt: I find that hard to believe.

[19:51] <arnsholt> Well, I might be a bit of a weirdo. But I find the systems of language (syntax, morphology and so on) to quite amenable to a somewhat "mathematical" approach

[19:53] <Wolfman2000> ...I think we're all slightly weirdoes technically.

[19:53] <Wolfman2000> I mean, we are trying to work on a new language

[19:53] *** jan_ joined
[19:53] <arnsholt> Heh

[19:54] <pnate2> language learning is logical

[19:54] <pnate2> language acquisition is unconscious and intuitive

[19:55] <frettled> juerd: I hope that you get your link back quickly!

[19:55] <pnate2> so says krashen anyway

[19:55] <arnsholt> pnate2: Very well put

[19:55] <pnate2> i think there's a place for both

[19:55] <pnate2> but it depends on what you are trying to do with it

[19:56] <arnsholt> Absolutely, you definitely need both. But I feel that the common perception of language places too much emphasis on the intuitive bit

[19:56] <arnsholt> So I try to remedy that situation whenever I can =)

[19:56] <Wolfman2000> alright, I'm out for now. I should be back before 8 PM EST

[19:56] *** Wolfman2000 left
[19:57] <frettled> arnsholt: by being counter-intuitive?

[19:59] <pnate2> i have actually experienced the opposite

[19:59] <arnsholt> frettled: I suppose it might be a bit counter-intuitive. But that doesn't mean it's false =)

[19:59] <pnate2> but that's probably because i've spent too much time in university

[19:59] <pnate2> with students whose goals are very practical

[19:59] <diakopter> moritz_: 'In that cases' -> 'In those cases' or 'In that case'

[20:00] <pnate2> the application of the logic is beyond them

[20:00] <diakopter> moritz_: 'often takes time find' -> 'often takes time to find'

[20:00] <frettled> What's seemingly intuitive often isn't.

[20:00] <arnsholt> pnate2: Who is this Krashen person, BTW? Sounds like someone I should learn about

[20:00] <pnate2> american second language instruction guy

[20:00] <pnate2> http://en.wikipedia.org/wiki/Stephen_Krashen

[20:01] <pnate2> very pragmatic

[20:01] <moritz_> diakopter: thanks, fixed

[20:02] <pnate2> basically he says that competence in a second language can only be acquired, not learned, and language use is too complex for the conscious mind to handle

[20:02] <pnate2> which i think is a little defeatist but probably true at the present time

[20:03] <pnate2> i think a lot of people don't like perl 5 because it's hard to learn

[20:03] <pnate2> but i've acquired it just fine

[20:03] <pnate2> and if you read some of larry wall's stuff he talks about that too

[20:03] <arnsholt> pnate2: That looks very interesting. Thanks

[20:03] <arnsholt> But it'll have to wait 'till I manage to finish Women, Fire and Dangerous Things, which I just started

[20:04] <pnate2> haha i was just in a discussion the other day where that was mentioned

[20:04] <pnate2> haven't read it myself

[20:04] <arnsholt> I've only read the first 30 pages or so yet. But it looks promising

[20:05] *** dalek joined
[20:05] <diakopter> dalek: wb

[20:06] <diakopter> dalek: you so speedy

[20:06] <arnsholt> pnate2: From your summary of what he says, it sounds like I agree. Some parts of language have to be learned, but you also need those unconscious leaps of imagination to grasp some other things

[20:07] <arnsholt> It's an interesting perspective on Perl 5 as well

[20:07] <pnate2> the argument basically centers on the fact that no one understands how human language works

[20:07] *** juerd left
[20:07] <pnate2> and so the point of language acquisition (e.g., teaching someone spanish) is not to understand how spanish works but to learn to speak and understand spanish

[20:08] <pnate2> of course learning how spanish works is also a worthy goal

[20:08] *** pmichaud joined
[20:08] <pnate2> but it's not one anyone should be pretending to teach

[20:08] *** hatsefla1s joined
[20:08] *** Juerd joined
[20:08] *** jnthn joined
[20:09] <arnsholt> Yeah. Unfortunately some parts of language acquisition (I hate spelling that word) are really, really hard to do without immersion in the language's culture

[20:09] <pnate2> computers are way better than people for that reason

[20:09] <pnate2> you can always take it apart

[20:09] *** pugs_svn joined
[20:09] <frettled> I think that the mechanisms for learning are fascinating.

[20:10] *** Infinoid_ joined
[20:10] *** Infinoid left
[20:10] <pnate2> yeah, i'm not sure anyone really has a very good grasp on what goes on in the human mind at the moment

[20:10] <arnsholt> Yeah. But then again the sheer complexity of human systems does make them such a tempting intellectual target =)

[20:10] <frettled> Nevermind specifics like language, maths, topology, and whatnot - learning learning, that's what's really cool :)

[20:10] <pnate2> certainly analogies to computers are not very well done

[20:10] <frettled> especially given how poorly people understand computers

[20:10] <pnate2> hahaha

[20:11] <frettled> One of the erroneous paradigms I think has been particularly frustrating and entertaining is one that has changed with time:

[20:12] <frettled> - Computers can only do one thing at a time, just like the human brain.  (I.e.: computer as an analogy to the brain)

[20:12] <frettled> that one transformed into:

[20:12] <frettled> - The human brain can only do one thing at a time, just like computers.

[20:13] *** juerd_ joined
[20:13] <diakopter> I recommend imagining several impossible things before breakfast.

[20:13] <frettled> So when a snotty kid (e.g. me) points out that the computer _does_ do several things at a time, and that apparently my brain does, too, the person with the analogy recurses into an infinite loop of circular logic.

[20:13] <arnsholt> Kim Stanley Robinson makes a good point in one of his Mars books. In the age of steam, the mind was compared to a steam machine. In the age of computers we compare it to a computer. Always the most complicated machine we possess =)

[20:14] <frettled> yup

[20:17] <frettled> Or, as a friend of mine would say, «bah, humans!»

[20:18] *** PerlJam joined
[20:21] *** jhorwitz left
[20:22] *** juerd_ left
[20:30] *** hatsefla1s is now known as hatseflats

[20:41] *** ruoso left
[20:47] <TimToady> the mind is like the Internet...

[20:49] <jnthn> Full of spam and lolcats?

[20:49] <frettled> The mind is like TimToady.

[20:50] *** brunov left
[20:50] <TimToady> I knew that...

[20:53] *** [1]jaffa8 joined
[20:58] *** stephenlb left
[20:59] *** jaffa8 left
[20:59] *** [1]jaffa8 is now known as jaffa8

[21:00] *** payload left
[21:01] <colomon> TimToady: If you've got a sec, I've been thinking about uniq again.  

[21:03] <TimToady> and if I don't, you haven't? :)

[21:04] <colomon> :)

[21:06] <colomon> The current O(N^2) non-hash implementation we have takes an optional parameter which is an equalitry test.

[21:06] <colomon> Seems like something like that would be nice for the hypothetical much-improved hash version.

[21:06] <moritz_> is uniq() even specced?

[21:06] <colomon> Maybe takes a hashing function, or something like that?

[21:07] <colomon> moritz_: It wasn't last time I checked.

[21:07] <colomon> I'm trying to slowly but surely make the spec happen.  :)

[21:07] *** zaphar_ps joined
[21:07] <moritz_> an unary transformation function much like sort() takes would be kinda useful

[21:08] * colomon is pretty sure "equalitry" isn't actually a word...

[21:08] *** desertm4x_ left
[21:11] <colomon> moritz_: going to have to check the specs on that...

[21:11] <moritz_> rakudo: say <5 3 4 1 2>.sort: -*

[21:12] <p6eval> rakudo 5e05b8: OUTPUT«54321␤»

[21:13] <TimToady> I'd say there's probably a generic Set role that may be instantiated with various notions of identity

[21:13] <colomon> woah.  it does an automatic Schwartzian transform.

[21:13] *** stephenlb joined
[21:14] <colomon> TimToady: would you then use Set internally in uniq instead of a hash?

[21:14] <TimToady> probably a KeySet, since it's mutable, and not really a single set

[21:14] <colomon> (and there's not actually a Set role for that yet, right?)

[21:15] <TimToady> we just have hashes so far, which is what a KeySet is if you scratch it

[21:16] <TimToady> but we don't have object hashes yet

[21:16] <TimToady> which would default to === rather than eqv semantics

[21:17] <colomon> TimToady: right, we discussed the object hashes thing WRT uniq the other day.  

[21:18] <colomon> Huh.  We don't have implementations for most of these container types yet, do we?

[21:19] <colomon> (In rakudo, I mean.)

[21:19] <TimToady> nope, not yet

[21:19] <colomon> Seems like an interesting opportunity for someone with time on his hands.  (Not really me at the moment.)

[21:20] <TimToady> it does bring up the interesting question of how to declare such an array with a user-supplied identity function, when that is not known till run time

[21:20] <TimToady> maybe it's just a mixin

[21:21] <moritz_> TimToady: speaking of which... is eqv supposed to dispatch to a method?

[21:22] <TimToady> no, it's a function

[21:23] <TimToady> whose full name is infix:<eqv>

[21:24] <moritz_> I was just wondering, because some classes might want to override that

[21:24] <moritz_> and the visibility of an overridden eqv operator is limited

[21:25] <sjohnson> rakudo:  my $str = "Goose";  $str ~~ /(g|G)(oo)se/; print "_$1_$2_";

[21:25] <p6eval> rakudo 5e05b8: OUTPUT«Use of uninitialized value␤_oo__»

[21:25] <moritz_> so it can easily happen that an object is passed to a routine which uses eqv, but doesn't see the overridden op

[21:25] <moritz_> sjohnson: they are spelled $0 and $1 in Perl 6

[21:25] <sjohnson> moritz_: thanks... i keep forgetting :[

[21:26] <sjohnson> rakudo:  my $str = "Goose";  $str ~~ /(g|G)(oo)se/; print "_$0_$1_";

[21:26] <p6eval> rakudo 5e05b8: OUTPUT«_G_oo_»

[21:26] <colomon> moritz_: Yeah, I'm still suspecting a lot of code is going to want to use "lift" by default.

[21:26] <moritz_> lift is ugly

[21:26] <sjohnson> rakudo: my $str = "Goose";  if ($str ~~ /[g|G](oo)se/; print "_$1_";   

[21:26] <p6eval> rakudo 5e05b8: OUTPUT«Confused at line 2, near "($str ~~ /"␤in Main (file <unknown>, line <unknown>)␤»

[21:27] <moritz_> because if just one routine in the call chain forgets it, everything from there on is lost

[21:27] <moritz_> in other words NOT WANT

[21:27] *** jaldhar left
[21:27] <colomon> rakudo: my $str = "Goose";  if ($str ~~ /[g|G](oo)se/; say $0; say $1;

[21:27] *** jaldhar joined
[21:27] <p6eval> rakudo 5e05b8: OUTPUT«Confused at line 2, near "($str ~~ /"␤in Main (file <unknown>, line <unknown>)␤»

[21:28] <colomon> moritz_: I'm very much with you on that...

[21:28] <moritz_> sjohnson: imbalanced (

[21:28] <sjohnson> TimToady:  will the [g|G] act as (g|G) in p5, except that it won't write to a $[number] variable?

[21:28] <colomon> rakudo: my $str = "Goose"; if $str ~~ /[g|G](oo)se/ { say $0; say $1; }

[21:28] <p6eval> rakudo 5e05b8: OUTPUT«oo␤Use of uninitialized value␤␤»

[21:28] <sjohnson> maybe i miss understood one of your suggestions

[21:28] <moritz_> it's the same as (?:g|G) in Perl 5

[21:28] <moritz_> so "yes"

[21:30] <sjohnson> moritz_: at what point, does the [] not stuff the match inside into a $0.. $1.. etc

[21:30] <moritz_> [] is non-capturiing and grouping.

[21:30] <sjohnson> oh i c

[21:30] <sjohnson>  rakudo: my $str = "Goose"; if $str ~~ /[g|G](oo)se/ { say $0; }

[21:31] <p6eval> rakudo 5e05b8: OUTPUT«oo␤»

[21:31] <moritz_> as you described it, if I understood you correctly

[21:31] <sjohnson> it was just colomons $1 that did not get stored which produced the perfect error

[21:31] <sjohnson> but i mistook it as not doing what i hoped it would do

[21:31] * sjohnson dances

[21:31] <sjohnson> thanks colomon and moritz_ 

[21:32] <colomon> you're welcome.

[21:33] <colomon> moritz_: I would definitely love to see operators treated as first-class citizens next to class methods (ie no need for lift).  But my impression last time I brought this up was that it was a hopeless cause?

[21:34] <moritz_> colomon: they are first-class, but in a different first class than methods ;-)

[21:34] <moritz_> joining those two separate first classes was considered bad

[21:34] * colomon 's dad would start quoting Animal Farm at this point.

[21:34] <moritz_> no need ;-)

[21:35] <moritz_> in some ways we "fix" this by having ops re-dispatch to methods

[21:35] <TimToady> I don't see a general solution, but in this specific case, we're talking about operators for which both arguments must be the same type

[21:35] <moritz_> prefix:<~> to .Str, infix:<~~> to ACCEPTS etc.

[21:36] <colomon> Is prefix:<~> just a dispatch to .Str?  I thought there was a difference there (like prefix:<+> and .Num).

[21:36] <TimToady> so single dispatch might make more sense, if we can guarantee that people don't start writing eqv methods that allow differing types, in which case we're reallhy back to needing multisubs

[21:37] <moritz_> we could have sub infix:<eqv>($a, $b) { $a.WHAT === $b.WHAT ?? $a.eqv($b) !! False }

[21:37] <moritz_> or so

[21:38] <moritz_> but I still don't see a general solution

[21:39] <TimToady> well, other than the usual solution of making all multisubs global, which has its own problems

[21:39] <colomon> I guess I still don't understand the problem with having operators dispatch like methods?

[21:40] <moritz_> colomon: if you'd want to define an infix:<+>(undef, YourType) you'd have to monkey-patch Object

[21:40] <moritz_> if it were dispached as method on the first argument

[21:40] <TimToady> anyway, the single dispatch eqv semantics would be more like $a.WHAT.eqv($a,$b)

[21:41] <spinclad> std: sub foo(Num @array) { say @array.perl }; foo(my Num @ = (1, 2, 3))

[21:41] <p6eval> std 28993: OUTPUT«ok 00:02 119m␤»

[21:41] <spinclad> rakudo: sub foo(Num @array) { say @array.perl }; foo(my Num @ = (1, 2, 3))

[21:41] <p6eval> rakudo 5e05b8: OUTPUT«Malformed declaration at line 2, near "Num @ = (1"␤in Main (file <unknown>, line <unknown>)␤»

[21:42] <spinclad> rakudo: sub foo(Num $item) { say $item.perl }; foo(my Num $ = (1, 2, 3))

[21:42] <TimToady> arguably, std should not have accepted that

[21:42] <p6eval> rakudo 5e05b8: OUTPUT«Malformed declaration at line 2, near "Num $ = (1"␤in Main (file <unknown>, line <unknown>)␤»

[21:42] <spinclad> rakudo: sub foo(Num $item) { say $item.perl }; foo(my Num $x = (1, 2, 3))

[21:42] <p6eval> rakudo 5e05b8: OUTPUT«Assignment type check failed; expected Num, but got Array␤in Main (file <unknown>, line <unknown>)␤»

[21:42] <spinclad> rakudo: sub foo(Num $item) { say $item.perl }; foo(my Num $x = 1)

[21:42] <p6eval> rakudo 5e05b8: OUTPUT«1␤»

[21:42] <spinclad> rakudo: sub foo(Num @array) { say @array.perl }; foo(my Num @s = (1, 2, 3))

[21:43] <TimToady> std: foo(@foo = 1,2,3)

[21:43] <p6eval> rakudo 5e05b8: TIMED_OUT

[21:43] <p6eval> std 28993: OUTPUT«Potential difficulties:␤  Variable @foo is not predeclared at /tmp/ycMO3bkoyV line 1:␤------> foo(@foo⏏ = 1,2,3)␤Undeclared routine:␤       foo used at line 1␤ok 00:02 107m␤»

[21:44] <TimToady> std: sub foo() {...}; my @foo; foo(@foo X @foo)

[21:44] <p6eval> std 28993: OUTPUT«===SORRY!===␤Unable to parse argument list; couldn't find final ')' at /tmp/Y4yKJcwSGP line 1:␤------> sub foo() {...}; my @foo; foo(@foo X⏏ @foo)␤    expecting an infix operator with precedence tighter than list infix␤FAILED 00:02 113m␤»

[21:44] <sjohnson> Q: in p6, is there any real difference, if you code things like,  1)  join(/ /, @stuff)   2) join / /, @stuff,   3) join (/ /, @stuff);

[21:44] <TimToady> std: sub foo() {...}; my @foo; foo(@foo = @foo)

[21:44] <p6eval> std 28993: OUTPUT«ok 00:01 110m␤»

[21:45] <TimToady> arguably that shouldn't allow list assignment there

[21:45] <TimToady> 3 is wrong

[21:46] <sjohnson> TimToady: is it because of the space after "join"?

[21:46] <TimToady> well, that plus the parens

[21:47] <TimToady> which makes a single argument to the join listop

[21:47] <sjohnson> is this any different than p5?  my vim perl5 syntax checker makes different colors for these, and i am not sure which one is the best

[21:48] <sjohnson> i suppose join / / => @stuff;   might be the best?

[21:48] <TimToady> it's very different from P5, where the space didn't matter, only the parens

[21:48] <TimToady> sjohnson: that won't work either

[21:48] <spinclad> rakudo: sub foo(Num $item) { say $item.perl }; foo(my Num $x = '1')

[21:48] <p6eval> rakudo 5e05b8: OUTPUT«Assignment type check failed; expected Num, but got Str␤in Main (file <unknown>, line <unknown>)␤»

[21:48] <TimToady> => is not a synonym for , in p6

[21:48] <spinclad> my Num $x = '1'

[21:49] <spinclad> rakudo: my Num $x = '1'

[21:49] <p6eval> rakudo 5e05b8: OUTPUT«Assignment type check failed; expected Num, but got Str␤in Main (file <unknown>, line <unknown>)␤»

[21:49] <moritz_> sjohnson: why would you want to join by a regex

[21:49] <moritz_> ?

[21:49] <TimToady> that too

[21:49] <spinclad> well, there goes my idea: doesn't coerce

[21:49] <sjohnson> moritz_: sorry, i'm used to splitting by regex's

[21:49] <sjohnson> and my brain just thought of join instead of split :(

[21:50] * sjohnson stabs brain

[21:50] * spinclad gently takes icepick away

[21:51] <spinclad> hugme: hug sjohnson 

[21:51] <spinclad> ENOFEATHER

[21:51] * moritz_ hugs sjohnson 

[21:51] <sjohnson> :)

[21:51] * TimToady hugs *, but * does not reciprocate

[21:51] *** hugme joined
[21:52] <moritz_> akshually feather is back, but hugme is too stupid to autorejoin

[21:52] <sjohnson> i think perl is so good because it is the closest (or only) language i have ever found that can be considered "right brain programming"

[21:53] <TimToady> My right brain is not always in my right mind...

[21:53] <masak> moritz_++ # http://perlgeek.de/blog-en/perl-6/lost-in-wonderland.html

[21:54] <moritz_> and diakopter++ for fixing three typos/grammeros in the that blog entry ;-)

[21:55] *** brunov joined
[21:55] <TimToady> sjohnson: and if you think you want split / /, you probably want .words

[21:55] <diakopter> moritz_: grammaros even!

[21:56] <diakopter> ba-dum-ching

[21:56] <sjohnson> TimToady: words == /\s+/ ?

[21:56] <TimToady> if they're even, ?^ will cancel them out

[21:57] <TimToady> .words = .comb(/\S+/)

[21:57] <sjohnson> diakopter: http://members.shaw.ca/smujohnson/snd/garlaff.mp3

[21:57] *** fax left
[21:57] <sjohnson> TimToady: ty

[21:57] <sjohnson> maybe i could write a p6 function help bot

[21:57] <sjohnson> !help comb

[21:58] *** fax joined
[21:58] * sjohnson googles

[21:59] *** hugme left
[21:59] *** hugme joined
[21:59] <moritz_> hugme now has autorejoin

[21:59] *** TimToady sets mode: +vvv dalek hugme iblechbot

[21:59] *** TimToady sets mode: +vvvv ilbot2 ilogger2 IRSeekBot lambdabot

[21:59] *** TimToady sets mode: +vvvv lisppaste3 mubot p6eval phenny

[21:59] *** TimToady sets mode: +vvv pointme pugs_svn zaslon

[21:59] <sjohnson> hugme: hug everyone

[21:59] * hugme hugs everyone

[22:00] <diakopter> hugme: hug herself

[22:00] * hugme hugs herself

[22:01] *** cotto_work left
[22:01] <TimToady> hugme: hug everyone who deserves it

[22:01] * hugme hugs everyone who deserves it

[22:01] *** cotto_work joined
[22:02] <diakopter> hugme: hug himself

[22:02] * hugme hugs himself and blushes

[22:02] <diakopter> oo

[22:03] * TimToady feels a geezer nap coming on

[22:03] <diakopter> hugme: hug ourselves

[22:03] * hugme hugs ourselves

[22:03] <TimToady> zzz &

[22:03] <sjohnson> naps are great

[22:08] *** Whiteknight joined
[22:21] *** FullMetalHarlot joined
[22:21] *** tak11 joined
[22:22] *** mberends left
[22:23] *** KatrinaTheLamia left
[22:23] *** FullMetalHarlot is now known as KatrinaTheLamia

[22:26] *** dukelet0 joined
[22:26] <dukelet0>  howdy! just a heads up: the machine that updates the parrot github mirror died and I am currently attempting to get stuff set back up. so it might not get updated until later today

[22:26] *** kidd` left
[22:30] *** kidd` joined
[22:31] <sjohnson> hi

[22:42] *** dakkar left
[22:44] *** synth left
[22:49] *** synth joined
[22:57] *** iblechbot left
[22:58] <zaslon> lolmasakhazblogged! masak++ 'November 5 2009 -- hanging in there': http://use.perl.org/~masak/journal/39847?from=rss

[23:00] * masak backlogs

[23:00] <masak> I agree that the Num @array thing is a bit of a wtf.

[23:03] *** kidd` left
[23:04] * jnthn waves at masak 

[23:04] <masak> jnthn: oh hai there!

[23:06] * jnthn is getting more bits back in place in Rakudo * :-)

[23:07] <jnthn> erm

[23:07] <jnthn> in ng

[23:07] <jnthn> gah

[23:07] <jnthn> :-)

[23:07] <jnthn> EBRANENOTWORKING

[23:07] <jnthn> masak: Did you figure out the hotel thingy in Riga yet?

[23:08] *** frederico left
[23:09] <jnthn> masak: I was just looking

[23:09] <jnthn> They haz an offer.

[23:10] <jnthn> But I can't quite figure out their math. :-)

[23:10] <masak> jnthn: no, not yet. but I'm ready when you are.

[23:10] <jnthn> Erm, because I seem to be able to select a 3 night special deal. Even though...Ineed 4 nights. :-/

[23:11] <masak> thu, fri, sat, sun.

[23:11] <jnthn> Anyway, I'm looking at the website and it says like "Konventa hotel offers special price for attendees of Baltic Perl Workshop: 50 € per night (single or double room)"

[23:11] <masak> that's us.

[23:12] <jnthn> However even putting the slight wtf special offer thingy aside, when I just go into the system to book anyway, it's like 50 EUR a night for a single room...

[23:12] <masak> :)

[23:12] <masak> so the special price is not so special after all?

[23:13] <jnthn> Appears not.

[23:13] <jnthn> Site is http://www.konventa.lv/ and all in English btw

[23:13] <jnthn> I'm still a tad perplexed by the 3 night offer for a 4 night stay. ;-)

[23:14] <diakopter> does Andrew Shitov visit #perl6 ..? anyone know?

[23:14] <jnthn> Not afaik - you looking for him?

[23:14] <jnthn> I have an email addy if you're missing that.

[23:15] <masak> diakopter: I can't remember if I've ever seen him here. so he's not a regular, anyway.

[23:15] *** nihiliad left
[23:16] <masak> jnthn: I haven't found the BPW wording yet. but is it conceivable that the 3-night special offer does not concern us BPW goers?

[23:16] <jnthn> Oh, I think that's some offer the hotel has on.

[23:16] <jnthn> I don't think it's anything to do with BPW.

[23:16] <jnthn> I just think they may haz a bug in their site. ;-)

[23:17] <masak> so you're booking now?

[23:17] <jnthn> Might do, since I've got it in mind.

[23:17] <masak> I might as well too.

[23:17] <jnthn> Otherwise I'll only forget and procrastinate it until a few days before or something.

[23:18] <masak> nod.

[23:18] <jnthn> oh heh 

[23:18] <jnthn> if we book a suite there's not only free wifi, but the room as the internet in it.

[23:18] <masak> \o/

[23:18] <jnthn> The whole intertubes! \o/

[23:18] <masak> I've always wanted that room!

[23:19] <cotto_work> your hotels are way better than the ones in the states.  I never get a room with the Internet in it.

[23:20] <masak> jnthn: a bit into the booking process, I get an option of four nights for 111 EUR.

[23:20] <masak> apparently, that's the "Special Autumn Offer".

[23:20] <jnthn> masak: Well, that's the fial.

[23:21] <jnthn> Yes, but read the details of the offer. ;_)

[23:21] <masak> by my math, that's a lot better than 50 EUR a night.

[23:21] <masak> "Book 3 night stay in our cosy hotel, but pay only for 2 and choose a tempting meal from Month’s Special Menu!"

[23:21] <jnthn> Yes but

[23:21] <masak> oh wtf.

[23:21] <diakopter> someone said andrew shitov was demoing a new Perl 6 compiler

[23:21] <jnthn> Thu 19/11 to Mon 23/11, 4 nights

[23:21] <jnthn> diakopter: oh, I've seen that

[23:21] <diakopter> what is it

[23:21] <masak> jnthn: I'm thinking I should call them up and sort this out.

[23:22] <masak> or email them.

[23:22] <diakopter> someone speaks euros?

[23:22] <jnthn> masak: Yeah

[23:22] <masak> [email@hidden.address]
[23:22] * masak emails them

[23:22] <jnthn> masak: OK, cool - let me know the outcome. :-)

[23:22] <jnthn> masak++

[23:23] <masak> diakopter: oui, ich speak Euros, porquoi sie ask?

[23:23] <jnthn> diakopter: It's basically a proof that if you implement a tiny subset of Perl 6, you can make it 10,000 times faster than Rakudo. :-)

[23:23] <jnthn> diakopter: Basically by writing a Perl 6 to C++ translator.

[23:24] <diakopter> oh

[23:25] <jnthn> I mean, it's not surprising you're fast if you translate my $x = $y + $z to having x, y and z be C++-level variables and the code is the C++ + operator. :-)

[23:25] <jnthn> I rather guess that once lexical scopes, multi-dispatch and overloading land in it, it won't be 10,000 times faster.

[23:25] <jnthn> :-)

[23:26] <jnthn> IMO, I think it's more a toy than a serious Perl 6 implementation effort.

[23:27] <diakopter> wait, so, it requires g++ too?

[23:27] <diakopter> er something

[23:28] <jnthn> I guess so.

[23:28] <jnthn> Oh, I guess eval gets fun too. ;-)

[23:29] <jnthn> I guess you can compile a dyanmic library and then dlopen it...

[23:29] <jnthn> Anyway, IMO, interesting in that it maybe gives an idea of the bounds to which Perl 6 *could* be optimized.

[23:30] <diakopter> well

[23:30] <jnthn> But not interesting in terms of something that could grow to really support Perl 6.

[23:30] <colomon> I wouldn't scoff too much, if a full-featured Perl 6 to C++ translator existed, I'd probably use it for something things.

[23:30] <diakopter> what was the microbenchmark exactly

[23:30] <colomon> (but I expect it would be a nightmare to write, of course.)

[23:31] <jnthn> colomon: I'm not scoffing, I'm just pointing out that this approach probably is going to run into issues fairly fast.

[23:31] <jnthn> diakopter: I forget exactly, there was a couple I think. Mostly loops and integer operations though.

[23:34] <masak> jnthn: there, email sent. you got a blind carbon copy.

[23:34] <jnthn> masak: Thanks very much!

[23:34] <masak> that was a gun mail to write. :)

[23:34] <masak> looking forward to the reply (which I will forward).

[23:35] <jnthn> Probably better English than if I'd written in too. :-)

[23:35] <masak> oh, I don't know about that.

[23:35] <jnthn> "oh hai i can haz rezervashun?"

[23:35] <jnthn> :-)

[23:36] <jnthn> masak: Mail looks fine.

[23:36] <masak> as a Swede, I suffer from the wide-spread delusion that I know English.

[23:36] <jnthn> :-)

[23:36] <jnthn> Strange that.

[23:36] <masak> jnthn: good.

[23:36] <masak> now, time for sleep.

[23:36] <jnthn> I can't imagine why anybody would think you know English. ;-)

[23:36] * masak waves

[23:36] <jnthn> night o/

[23:36] <arnsholt> masak: The fact that you realize that Scandinavians don't have a god-given gift at English means that you're ahead of the game

[23:36] <arnsholt> Way ahead =)

[23:37] <masak> arnsholt: :)

[23:37] *** masak left
[23:37] *** SmokeMachine joined
[23:37] *** brunov left
[23:42] *** tak11 left
[23:43] *** tak11 joined
[23:43] *** xabbu42 joined
[23:45] *** jaffa8 left
