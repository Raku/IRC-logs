[00:05] *** astrojp left
[00:06] *** brrant left
[00:07] *** mberends left
[00:12] *** justatheory joined
[00:26] <cognominal> can someone explain me (in private not to pollute the canal) the "not in kansas anymore" meme?

[00:35] *** colomon_ joined
[00:39] *** dbrock joined
[01:05] <diakopter> rakudo: grammar Class is also { rule TOP { x } }; Class.parse("x")  #  masak 

[01:05] <p6eval> rakudo 7ef386: Null PMC access in get_attr_str()␤in Main (file <unknown>, line <unknown>)␤

[01:05] <diakopter> (saw yours above)

[01:05] <masak> diakopter: hm, yes.

[01:06] <masak> but a difference is that 'Class' is defined in Perl 6. 'Integer' isn't/

[01:06] <masak> s[/][.]

[01:07] <diakopter> oh

[01:08] <masak> http://lambda-the-ultimate.org/node/3705

[01:09] <masak> diakopter: uh, I take that back. I'm not sure there is a Class class any more. I can't find it in the spec.

[01:11] <masak> this one is kinda interesting, though:

[01:11] <masak> rakudo: grammar Perl6Array {}

[01:11] <p6eval> rakudo 7ef386:  ( no output )

[01:11] <masak> locally, 'Class Perl6Array already registered!'

[01:12] <cognominal> masak : small programs are beautiful but it needs large languages :)

[01:12] <masak> cognominal: maybe so. :)

[01:13] <arnsholt> masak: It's an interesting point, but I don't agree with him in everything

[01:13] <masak> I'm sort of hoping Perl 6 will turn out to be a small language hidden inside a large language.

[01:13] <arnsholt> For one, shell and friends is ugly and clunky as sin

[01:14] <masak> indeed.

[01:14] <masak> how come shell languages are so ugly?

[01:14] <arnsholt> And Lisp, while a very cool language, offends my aesthetic sensibilities (TimToady said something about toenail clippings and oatmeal, if memory serves)

[01:15] <masak> arnsholt: I personally am not disturbet by the parentheses in Lisp.

[01:15] <arnsholt> The parens are fine as such. It's just that everything looks the same (which is the point too), which makes it a lot harder to grasp the structure of the program, IMO

[01:16] <masak> they are a consession for the compiler to eliminate the concept of precedence entirely, and they basically 'melt away' with good indentation.

[01:16] <masak> yes, everything looking the same is a point I can understand and sympathise with.

[01:17] <arnsholt> OTOH, the syntax (or lack thereof) does give you the possibility of Lisp macros, and they are mega-awesome

[01:17] <masak> :)

[01:18] <arnsholt> Returning to the post, I think he's right that bigger languages are in the future

[01:19] * masak wonders what size of languages artificial intelligences will prefer

[01:19] <arnsholt> I can sympathise with his preference for minimalist languages like C, but when he mentions the search for a small as possible set of types and operations, I can't help but think of Russell and the search for the axiomatisation of mathematics

[01:19] <arnsholt> A wonderful idea, but blown to bits by Gödel

[01:20] <masak> I don't know about that.

[01:20] <arnsholt> AIs will probably use something weird

[01:20] <arnsholt> Of course, programming languages being Turing complete won't run into the same problem

[01:20] <cognominal> In his paper, Pike says "the art is gone". Is not Perl 6 about art?  :)

[01:20] <arnsholt> But it's definitely a positivist trait

[01:28] *** gfx joined
[01:28] *** jaldhar left
[01:29] *** jaldhar joined
[01:31] *** hcchien left
[01:31] *** jaldhar left
[01:32] *** vamped joined
[01:33] *** jaldhar joined
[01:37] *** hcchien joined
[01:46] <colomon_> rakudo: my @a = 1..4; @a <<*=>> 3; say @a.perl

[01:46] <p6eval> rakudo 7ef386: [1, 2, 3, 4]␤

[01:47] <Wolfman2000> Wonder where PerlJam is...oh well

[01:47] <rgrau> :w

[01:47] <rgrau> ooops, sorry

[01:47] <colomon_> rakudo: my @a 1..4; @a <<*>>= 3; say @a.perl

[01:47] <p6eval> rakudo 7ef386: Confused at line 2, near "1..4; @a <"␤in Main (file <unknown>, line <unknown>)␤

[01:56] *** synth left
[01:58] <masak> rakudo: class A { method postcircumfix:<{ }>($x) { 42 }; method foo() { my %h; say %h<foo> } }; A.new.foo

[01:59] <p6eval> rakudo 7ef386:  ( no output )

[01:59] <masak> locally, this gives '42'.

[01:59] * masak submits rakudobug

[02:01] *** colomon_ left
[02:03] <Wolfman2000> masak: I don't get the same thing

[02:03] <Wolfman2000> Null PMC access in find_method('new')  <-- that's what I get

[02:03] <masak> that's odd.

[02:03] <masak> maybe we should both update our Rakudos. :)

[02:04] <Wolfman2000> masak: looks like I already updated mine

[02:04] <masak> excellent. I'll update mine.

[02:04] <Wolfman2000> of course, I may not be compiling the same options as you or something... (I just use the normal instructions)

[02:05] <masak> oh, me too.

[02:06] <masak> and in my experience, that has never been the cause of differences before.

[02:12] <masak> blog post idea: Perl 6 is a result of looking at the corners on which people hurt themselves on Perl 5, and reshaping the language so that it doesn't hurt that way. the PerlMonks meditation at http://perlmonks.org/?node_id=525392 is a beautiful example, together with the last comment. "It appears you've just [made Perl 6 hurt less by telling us about how you got hurt on Perl 5]".

[02:13] <masak> I imagine moritz_ might do it well. others are welcome to try it, too. if no-one bites, I might. :)

[02:14] *** colomon joined
[02:14] <masak> I'm also pretty sure that there are tens of other, similar, examples.

[02:20] <drbean> http://www.urbandictionary.com/define.php?term=we're%20not%20in%20Kansas%20anymore

[02:20] <masak> Wolfman2000: still getting 42 here, after rebuilding newest Rakudo (master) on newest Parrot.

[02:20] <Wolfman2000> masak: I probably copied it wrong then. hold on

[02:21] <Wolfman2000> masak: ...yeah, copied it wrong last time. I got 42

[02:21] <masak> Lesson 1 of copy-and-paste: Make sure you copy the whole th

[02:21] <Wolfman2000> masak-- for bad joke

[02:22] <masak> :P

[02:25] *** orafu left
[02:25] *** orafu joined
[02:28] <colomon> I've got a first draft of my Advent day 7 post into wordpress.  I'd appreciate it if people gave feedback.

[02:28] <Wolfman2000> colomon: hang on

[02:28] <Wolfman2000> ...who is supposed to do Day 6 again?

[02:29] <colomon> mathw

[02:29] <colomon> mine could go up instead in a pinch.

[02:30] <masak> that is an attractive option. it's nice to have a post waiting for people when they wake up.

[02:30] <Wolfman2000> still previewing: hang on

[02:30] <masak> I'll give it a look as well.

[02:32] <Wolfman2000> ...what is this [sourcecode] thing?

[02:33] <colomon> masak: agreed.  unfortunately mathw went to bed about fifteen minutes before I could ask him how his post was coming.  

[02:33] <masak> yeah, I saw that.

[02:34] <colomon> Wolfman2000: look at the preview.  [sourcecode] blocks are formatted as source code.  It's quite nice.

[02:34] <TimToady> the :action vs :actions was question PM-7

[02:34] <masak> colomon: I say go for it. change the title to 'Day 6' and change days with mathw.

[02:34] <masak> TimToady: ah, that's why I remembered it... vaguely.

[02:34] <Wolfman2000> I'm presently in the edit mode: I can do so.

[02:35] *** synth joined
[02:35] <masak> I see I made a change that goes against Pm-7. I'll change it back.

[02:36] <colomon> If you guys agree and can give it a quick once over to check my sanity, sure, we can run it for day 6.  It actually is a sensible follow-up to day 5 anyway...

[02:36] <Wolfman2000> colomon: you have about 2 hours before your post goes up.

[02:36] <Wolfman2000> I'm out of edit mode so you can make your last minute adjustments

[02:39] <pugs_svn> r29266 | masak++ | [S05] reverted s/actions/action/ correction 

[02:39] <pugs_svn> r29266 | 

[02:39] <pugs_svn> r29266 | Pm-7 asserts that it should be the plural. Which means Rakudo is lagging

[02:39] <pugs_svn> r29266 | behind, not the spec.

[02:39] <colomon> afk for moment, wife needs computer and hers just blew up.

[02:39] <masak> colomon: I skimmed through it, and didn't find anything to critique.

[02:40] * masak submits rakudo TODO ticket for :actions

[02:40] <PerlJam> colomon: looks good to me too  (though the paragraph where you talk about parallelizing hyperops is written in terms of Rakudo, and I would have probably writte it in terms of Perl 6)

[02:41] <masak> the ticket is probably of little value, since this change will likely come naturally with the adoption of ng, but you never know.

[02:43] *** rgrau left
[02:44] <masak> rakudo: say :2("0b1")

[02:44] <p6eval> rakudo 7ef386: 23␤

[02:44] <masak> o.O

[02:45] <Wolfman2000> rakudo: say 0b1

[02:45] <p6eval> rakudo 7ef386: 1␤

[02:45] <Wolfman2000> rakudo: say 0b2

[02:45] <p6eval> rakudo 7ef386: Syntax error at line 2, near "say 0b2"␤in Main (file <unknown>, line <unknown>)␤

[02:45] <Wolfman2000> okay, it has some intelligence...

[02:45] <masak> why 23!?

[02:45] <Wolfman2000> rakudo: say :2(ob1)

[02:45] <p6eval> rakudo 7ef386: Could not find non-existent sub ob1␤in Main (file src/gen_setting.pm, line 324)␤

[02:45] <Wolfman2000> ...derp

[02:45] <Wolfman2000> rakudo: say :2(0b1)

[02:45] <p6eval> rakudo 7ef386: 1␤

[02:45] <masak> oh, I think I get it.

[02:46] <Wolfman2000> rakudo: say :2(0b11)

[02:46] <p6eval> rakudo 7ef386: 3␤

[02:46] <masak> 23 = 22 + 1 = 11 * 2 + 1 = 0xB * 2 + 1

[02:46] <PerlJam> rakudo: say :2("0b2")

[02:47] <p6eval> rakudo 7ef386: 24␤

[02:47] <PerlJam> rakudo: say :2("0a1")

[02:47] <p6eval> rakudo 7ef386: 21␤

[02:47] <PerlJam> rakudo: say :2("0aa")

[02:47] <p6eval> rakudo 7ef386: 30␤

[02:48] <PerlJam> rakudo: say :2("aa")

[02:48] <p6eval> rakudo 7ef386: 30␤

[02:50] <masak> rakudo: "1234" ~~ /(23)/; say :4($0)

[02:50] <p6eval> rakudo 7ef386: 11␤

[02:50] <masak> I guess it's fine to rely on :4() auto-stringifying here?

[02:53] *** meppl left
[02:53] <pugs_svn> r29267 | masak++ | [S05] further improvements to :actions example 

[02:53] <pugs_svn> r29267 | 

[02:53] <pugs_svn> r29267 | Suggested by uasi++ on Twitter

[03:02] <colomon> Okay, I'm cool with the post going up as scheduled at 5am UTC.  (Is that an hour from now?)  I tried to incorporate PerlJam++'s suggestions.

[03:02] <colomon> turning my MacBook back over to my wife so she can chat with Dell tech support.

[03:05] <Wolfman2000> ...that makes little sense, but whatever

[03:05] <cognominal> reading S06, I found lines 92 and 103 in contradiction.  line 92 says default scope is 'my' and line 103 says it's 'our'. Do I miss something?

[03:05] <colomon> Wolfman2000: notice the previous comment about my wife's computer blowing up.

[03:05] <Wolfman2000> colomon: ah, just found it

[03:06] <colomon> I get it back until she's off hold with Dell's on-line tech support.

[03:06] <colomon> That Dell has been a hideous lemon, but their tech support has been awe-inspiring.

[03:06] <colomon> I think the hard drive may be the only original component left....

[03:07] <masak> cognominal: you probably found a fossil.

[03:07] <cognominal> I am not sure which line is right...

[03:09] *** solarion left
[03:09] <cognominal> I guess 'my' is right by reading further

[03:11] <cognominal> Also in S12:221  s/;/,/g

[03:12] <colomon> phenny: tell mathw I had my Day 7 post ready to go this evening, so swapped with you.  You're up for day 7 now.  Hope that is okay.

[03:12] <phenny> colomon: I'll pass that on when mathw is around.

[03:13] <Wolfman2000> ...something's telling me I should get my day 8 post ready

[03:13] <Wolfman2000> I may end up with day 7 at this rate

[03:14] <masak> cognominal: do you have a pugs commitbit?

[03:15] <masak> Wolfman2000: it could never hurt to start planning, at least :)

[03:16] <cognominal> I should have even if I have not used it for months. Better use it tomorrow because bed time.

[03:18] <colomon> I meant all along to try to get a few posts done and ready to go in case of unexpected need.  But I have been pretty slow, and keep on getting distracted trying to make ng work....

[03:20] <masak> colomon++ # ng

[03:37] <diakopter> std: <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[03:37] <p6eval> std 29267: ok 00:01 105m␤

[03:38] <pugs_svn> r29268 | masak++ | [S05] further corrections by uasi++ 

[03:38] <diakopter> ng: say <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<34>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> * 2

[03:38] <p6eval> ng 17a1ec: 68␤

[03:40] <masak> that's enough <>'s to last you a year, at least.

[03:43] *** justatheory left
[03:45] <colomon> rakudo: say 4++

[03:45] <p6eval> rakudo 7ef386: Unable to set lvalue on PAST::Val node␤in Main (file <unknown>, line <unknown>)␤

[03:46] <colomon> hmmm... does that mean the (1, 2, 3, 4)>>++ example in the day 6 post is wrong?

[03:46] * colomon is off to bed with that thought...

[03:47] <masak> rakudo: say (1, 2, 3, 4)>>++

[03:47] <p6eval> rakudo 7ef386: Confused at line 2, near ">>++"␤in Main (file <unknown>, line <unknown>)␤

[03:49] *** am0c joined
[03:54] *** pnate joined
[03:57] *** gfx left
[04:06] *** pnate2 left
[04:19] *** am0c left
[04:31] *** agentzh joined
[04:39] <PerlJam> rakudo: for (1;2;3) { }

[04:39] <p6eval> rakudo 7ef386:  ( no output )

[04:39] <PerlJam> std: for (1;2;3) {}

[04:39] <p6eval> std 29268: [31m===[0mSORRY![31m===[0m␤Obsolete use of C-style "for (;;)" loop; instead, in Perl 6 please use "loop (;;)" at /tmp/eAuAnNDQ7D line 1:␤------> [32mfor (1;2;3)[33m⏏[31m {}[0m␤FAILED 00:01 106m␤

[04:40] *** jaldhar left
[04:42] *** colomon_ joined
[04:42] *** colomon left
[04:42] *** colomon_ is now known as colomon

[04:52] *** envi^home joined
[04:56] <PerlJam> Hrm...

[04:57] <PerlJam> I just realized something.   If we're casting Perl 6 as another language in the Perl family of languages, then saying "obsolete use of ..." is probably not quite the right thing to say 

[04:58] <masak> well, it's obsolete from the timeline of Perl 6.

[04:59] <PerlJam> Ask mst what he thinks about it :)

[04:59] <masak> all that's happened is that we have two timelines nowadays; two versions of Perl history, as it were.

[04:59] <masak> I will ask him.

[05:00] <masak> 'obsolete' just means 'we used to do that, and now we try to avoid it for whatever reason'.

[05:01] <masak> if you accept that the Perl 6 timeline runs back into the Perl 5 one before the fork, it's a valid use of the word.

[05:01] <masak> ...I think. :)

[05:02] *** colomon left
[05:02] * PerlJam wonders what the Perl 5 messages should look like when someone feeds it Perl 6 code

[05:03] <PerlJam> "It looks like you gave me some Perl 6 code; I'm Perl 5 buddy!"

[05:03] <masak> that's why we start our scripts with 'use v6;'

[05:04] <PerlJam> Well, that too breaks the illusion of a family of languages developing in parallel.

[05:04] <masak> yeah.

[05:05] *** Baggio_ joined
[05:06] <masak> nobody promised consistency. :)

[05:09] <PerlJam> I guess it doesn't matter much as long as we have sufficient convergence

[05:09] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 6: Going Into Hyperspace': http://perl6advent.wordpress.com/2009/12/06/day-6-going-into-hyperspace/

[05:10] <masak> PerlJam: convergence on what? features? community? conferences? :)

[05:10] <PerlJam> all that stuff

[05:10] * PerlJam makes a hand wavey gesture

[05:12] <PerlJam> btw, did someone talk to mathw about his post?

[05:12] *** synth left
[05:12] <masak> I don't think he's woken up yet.

[05:12] <masak> he has a phennymessage waiting for him.

[05:12] <PerlJam> good enough.

[05:13] <pugs_svn> r29269 | duff++ | [perl6advent] adjust schedule to put colomon at Day 6 

[05:15] <mdxi> speaking of the advent calendar, is there a way to disable the annoying screenshot popups on link text? or am i the only one who despises those?

[05:15] <Wolfman2000> PerlJam: two of my websites have been moved over to NFS. Unfortunately, it looks like using frameworks such as Catalyst is a no go at this time.

[05:15] <PerlJam> mdxi: um ... what are you talking about?

[05:16] <mdxi> hover over a link in the article body

[05:16] <mdxi> this is the first entry to have them

[05:16] <vamped> they were there b4 today

[05:16] <PerlJam> Ah ...  I wasn't seeing it hovering over the first link.

[05:17] <PerlJam> But there's a link in the lower right corner of the popup that says "turn site preview off"

[05:17] <mdxi> vamped: you're right. i think i read the others in w3m (oops)

[05:17] <masak> mdxi: you're not the only one who despises those screenshots, no.

[05:18] * PerlJam isn't a fan of them either

[05:18] <masak> mdxi: they can be turned off per-server on the client side easily.

[05:18] <mdxi> yeah, i jsut found it thanks to PerlJam 

[05:18] <masak> mdxi: don't know how one'd turn them off in Wordpress.

[05:18] <mdxi> nevermind :)

[05:18] <masak> they *are* annoying, though. :)

[05:19] <mdxi> i had been just scribbling my mouse around to make them go away. didn't actually inspect them.

[05:19] <mdxi> i am bad programmer

[05:19] <masak> no, they are bad widgets.

[05:20] <mdxi> i violated Good Bug Report Standards, which i have frequently yelled at people about. karma is inescapable :)

[05:20] * PerlJam found the option to disable them.

[05:21] <vamped> oh please tell!

[05:21] <masak> whatever Good Bug Report Standards are, I'm not sure they hold for applications you didn't ask for. :)

[05:21] <PerlJam> I just turned them off.  Someone please test (since I already turned them off locally)

[05:21] <vamped> i'm on board.

[05:22] <vamped> i've disabled them already too

[05:22] <masak> just clear your cookies, then.

[05:23] <masak> what made us peak on 2009-12-02 with 1080 views? was it a wave of people discovering the calendar for the first time and then not coming back?

[05:23] <masak> or did people just really like learning about C<.fmt>? :P

[05:24] <PerlJam> I think we just got a lot of twitter coverage then.

[05:24] <PerlJam> (more than now anyway)

[05:25] <masak> that sounds about right.

[05:25] <PerlJam> plus we're in a weekend and there aren't all those people who would be goofing off at work by reading the advent calendar  :)

[05:26] <masak> :)

[05:26] <PerlJam> We'll have to see how it goes next week.

[05:27] <masak> hugme: tweet rakudoperl Perl 6 Advent Calendar Day 6: Going Into Hyperspace http://bit.ly/82OMFh

[05:27] * hugme hugs masak; tweet delivered

[05:27] * masak hugs hugme back; thanks!

[05:29] *** synth joined
[05:30] <masak> time to head home. not a very productive night, but quite pleasant anyway. see y'all around!

[05:31] *** masak left
[05:42] *** jaldhar joined
[05:57] <diakopter> http://www.info.ucl.ac.be/~pvr/paradigmsDIAGRAMeng108.jpg

[06:14] *** envi_home2 joined
[06:20] *** vamped left
[06:24] <diakopter> "... talk about meta"

[06:24] <diakopter> cute, diakopter; really cute.

[06:24] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Failure()<0xb5321970>': Failure()<0xb5319ec8>

[06:24] <Wolfman2000> ...here we go again

[06:25] <diakopter> the grass is always greener, but only because of redshift.

[06:25] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Failure()<0xb53b5f8c>': Failure()<0xb53b5500>

[06:25] <diakopter> um

[06:31] *** nihiliad left
[06:31] *** nihiliad joined
[06:32] *** envi^home left
[06:34] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 6: Going Into Hyperspace': http://perl6advent.wordpress.com/2009/12/06/day-6-going-into-hyperspace/

[06:36] *** colomon joined
[06:36] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Failure()<0xb53464f8>': Failure()<0xb53400a8>

[06:37] <Wolfman2000> is zaslon on ritalin or something?

[06:37] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Failure()<0xb5383134>': Failure()<0xb5382644>

[06:37] *** zaslon was kicked by diakopter (diakopter))
[06:38] <diakopter> I suspect it's reporting that b/c the blog rss is not responding

[06:55] <pmichaud> perl6advent.wordpress.com isn't responding at all for me.

[06:55] <pmichaud> oh, there it is... taking a long time though.

[06:59] *** Baggio_ left
[07:04] *** Baggio_ joined
[07:10] <carlin> Oops, that wasn't good

[07:17] *** zaslon joined
[07:18] *** zaslon left
[07:18] *** colomon left
[07:18] *** agentzh left
[07:21] *** zaslon joined
[07:22] <carlin> zaslon: add fakitymcfakefake http://blahblahfake.com/notarealrssfeed/

[07:22] *** zaslon left
[07:23] *** zaslon joined
[07:23] <carlin> ah well, hopefully I 'fixed' it, we'll know if it happens again :-)

[07:37] *** r0bby left
[07:39] *** pnate left
[07:45] *** iblechbot joined
[08:01] *** mberends joined
[08:08] *** nihiliad left
[08:18] *** agentzh joined
[08:21] *** Baggio_ left
[08:25] *** xinming_ left
[08:31] *** Baggio_ joined
[08:37] *** iblechbot left
[08:37] *** iblechbot_ joined
[08:39] * mberends returns after a Debian hibernate, during which (forgetfully) the laptop re-booted into an Ubuntu partition, updated its Linux kernel, and then returned successfully to the hibernated Debian desktop. That's impressive state management :)

[08:52] *** mikehh joined
[08:59] *** tann joined
[09:01] *** xinming joined
[09:01] *** kaare joined
[09:02] *** kaare is now known as Guest41567

[09:04] *** mikehh_ joined
[09:05] *** xinming left
[09:06] <pugs_svn> r29270 | colomon++ | [perl6advent] Choose my second topic. 

[09:07] *** xinming joined
[09:08] <tann> rakudo: my @a = 1..5; my @b = 6..10; my @c = @a ››+‹‹ @b; say @c.perl;

[09:08] <p6eval> rakudo 7ef386: Confused at line 2, near "\u203a\u203a+\u2039\u2039 @b; "␤in Main (file <unknown>, line <unknown>)␤

[09:13] *** SirKay left
[09:18] <ng_feed> rakudo-ng: colomon++

[09:18] <ng_feed> rakudo-ng: Reactivate Int.Complex and Int.unpolar.

[09:18] <ng_feed> rakudo-ng: colomon++

[09:18] <ng_feed> rakudo-ng: Reactivate Num.unpolar and Any.cis.

[09:18] *** JimmyZ joined
[09:19] *** mikehh left
[09:19] *** IllvilJa joined
[09:21] <tann> rakudo: my @a = 1..5; my @b = 6..10; my @c = @a »+« @b; say @c.perl;

[09:21] <p6eval> rakudo 7ef386: [7, 9, 11, 13, 15]␤

[09:22] <dalek> rakudo/ng: 2904c6b | (Solomon Foster)++ | src/core/Int.pm:

[09:22] <dalek> rakudo/ng: Reactivate Int.Complex and Int.unpolar.

[09:22] <dalek> rakudo/ng: Tidy file a touch as well.

[09:22] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/2904c6b75d332aa45434797fbbfce9514b01f4f7

[09:22] <dalek> rakudo/ng: 269b081 | (Solomon Foster)++ | src/core/ (2 files):

[09:22] <dalek> rakudo/ng: Reactivate Num.unpolar and Any.cis.

[09:22] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/269b0811b8906ff7f3d8d2d11bb4ee7a25ef0d46

[09:24] *** JimmyZ left
[09:28] *** am0c joined
[09:45] *** ashizawa left
[09:47] *** ashizawa joined
[09:56] *** colomon joined
[09:56] <pugs_svn> r29271 | colomon++ | [t/spec] Split complex.t into complex.t and unpolar.t.  Tweak and fudge until unpolar.t passes in ng. 

[09:58] <ng_feed> rakudo-ng: colomon++

[09:58] <ng_feed> rakudo-ng: CHEAT: Quickly add simple N1 ... N2 operator which generates a list.

[09:58] <ng_feed> rakudo-ng: colomon++

[09:58] <ng_feed> rakudo-ng: Add unpolar.t to spectests.

[10:02] <dalek> rakudo/ng: 1ffe542 | (Solomon Foster)++ | src/ (2 files):

[10:02] <dalek> rakudo/ng: CHEAT: Quickly add simple N1 ... N2 operator which generates a list.

[10:02] <dalek> rakudo/ng: This is not the right way to do this, but it should be an okay stand-in for a week or two, and ought to allow us to re-enable a slew of tests.

[10:02] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/1ffe542fd46a6acf8c577cef665a2e32837756f1

[10:02] <dalek> rakudo/ng: 3968cf1 | (Solomon Foster)++ | t/spectest.data:

[10:02] <dalek> rakudo/ng: Add unpolar.t to spectests.

[10:02] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/3968cf1c229d086e09fd8ce69accd89510e10e84

[10:11] *** colomon left
[10:33] *** Baggio__ joined
[10:38] *** Baggio_ left
[10:48] *** tann left
[10:48] *** rgrau joined
[10:50] *** hcchien left
[10:52] *** iblechbot_ left
[10:56] *** hcchien joined
[11:09] *** Baggio__ left
[11:11] *** Baggio_ joined
[11:31] *** pmurias joined
[11:42] *** meppl joined
[11:46] *** agentzh left
[11:57] *** meppl left
[12:00] *** JimmyZ joined
[12:02] *** Su-Shee joined
[12:02] <Su-Shee> good morning.

[12:03] <JimmyZ> good morning, Su-Shee 

[12:04] <mberends> good St. Nicholas, Su-Shee

[12:06] <Su-Shee> hm, I shouldn't have put my socks into the washing machine.. ;)

[12:07] <mberends> aahh, now your gifts are wet :-(

[12:08] <Su-Shee> but clean! ;)

[12:17] *** snearch_ joined
[12:21] <pugs_svn> r29272 | pmurias++ | [viv] add missing VAST::Tight_and 

[12:21] <pugs_svn> r29273 | pmurias++ | [mildew] progress on porting to new STD 

[12:24] <mberends> oops. http://irclog.perlgeek.de/perl6/2009-12-06 has just lost the logs from 00:00 to 11:59 UTC. Could have sworn they were there 30 minutes ago :-(

[12:25] *** Baggio_ left
[12:44] *** Baggio_ joined
[12:46] *** iblechbot joined
[13:05] *** colomon joined
[13:10] *** colomon_ joined
[13:10] *** colomon left
[13:10] *** colomon_ is now known as colomon

[13:22] *** Baggio_ left
[13:24] *** Baggio_ joined
[13:32] *** jan_ left
[13:34] *** araujo left
[13:34] *** meppl joined
[13:36] *** Baggio_ left
[13:38] *** slavik left
[13:43] *** Baggio_ joined
[13:47] *** slavik joined
[13:49] *** JimmyZ left
[13:57] *** Baggio_ left
[13:59] *** Baggio_ joined
[14:01] <pmurias> TimToady: the VAST nodes for methodcall contains the method name and argument only in .

[14:03] <ng_feed> rakudo-ng: colomon++

[14:03] <ng_feed> rakudo-ng: Move Int.unpolar to Any.unpolar, relax constraints on the type passed as the argument.

[14:04] *** JimmyZ joined
[14:05] *** snearch_ left
[14:06] <dalek> rakudo/ng: 4d71a27 | (Solomon Foster)++ | src/core/ (3 files):

[14:06] <dalek> rakudo/ng: Move Int.unpolar to Any.unpolar, relax constraints on the type passed as the argument.

[14:06] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/4d71a270d1a96fa8640cfdf0abd4b685427eb336

[14:06] <pugs_svn> r29274 | colomon++ | [t/spec] Methodically test Int.unpolar, Rat,unpolar, and Num.unpolar. 

[14:09] *** colomon left
[14:17] *** SmokeMachine joined
[14:20] *** he_ left
[14:20] *** pmurias left
[14:20] *** hcchien left
[14:20] *** am0c left
[14:20] *** xinming left
[14:20] *** mberends left
[14:20] *** dbrock left
[14:20] *** PacoLinux left
[14:20] *** pointme left
[14:20] *** szabgab left
[14:20] *** dalek left
[14:20] *** c1sung left
[14:20] *** xomas_ left
[14:20] *** Wolfman2000 left
[14:20] *** renormalist left
[14:20] *** obra left
[14:20] *** Intensity left
[14:20] *** yves left
[14:20] *** sjn left
[14:20] *** mathw left
[14:20] *** krakan left
[14:20] *** draxil42 left
[14:20] *** yahooooo left
[14:20] *** bloonix left
[14:20] *** idemal left
[14:20] *** wolverian left
[14:20] *** avuserow left
[14:20] *** awwaiid left
[14:20] *** sunnavy left
[14:20] *** stepnem left
[14:20] *** LionMadeOfLions left
[14:20] *** pmichaud left
[14:20] *** carlin left
[14:20] *** ruz left
[14:20] *** mofino left
[14:20] *** moritz_ left
[14:20] *** omega__ left
[14:20] *** meteorswarm left
[14:20] *** jrockway left
[14:20] *** frew left
[14:20] *** zostay left
[14:20] *** charsbar left
[14:20] *** rhr left
[14:20] *** sundar left
[14:20] *** hicx174 left
[14:20] *** brody left
[14:20] *** arnsholt left
[14:20] *** gabiruh left
[14:20] *** pjcj left
[14:20] *** sjohnson left
[14:20] *** revdiablo left
[14:20] *** PerlJam left
[14:20] *** lambdabot left
[14:20] *** ilbot2 left
[14:20] *** parduncia left
[14:20] *** arthur-_ left
[14:20] *** Helios left
[14:20] *** japhb left
[14:20] *** Tene left
[14:20] *** jjore_ left
[14:20] *** ingy left
[14:20] *** ng_feed left
[14:20] *** gbacon left
[14:20] *** Woodi left
[14:20] *** pugs_svn left
[14:20] *** spinclad left
[14:20] *** hatseflats left
[14:20] *** dukeleto left
[14:20] *** jiing left
[14:22] *** arnsholt joined
[14:22] *** pmurias joined
[14:22] *** hcchien joined
[14:22] *** am0c joined
[14:22] *** xinming joined
[14:22] *** mberends joined
[14:22] *** dbrock joined
[14:22] *** PacoLinux joined
[14:22] *** pointme joined
[14:22] *** he_ joined
[14:22] *** xomas_ joined
[14:22] *** szabgab joined
[14:22] *** Wolfman2000 joined
[14:22] *** renormalist joined
[14:22] *** dalek joined
[14:22] *** c1sung joined
[14:22] *** Intensity joined
[14:22] *** meteorswarm joined
[14:22] *** Maddingue joined
[14:22] *** gabiruh joined
[14:22] *** pjcj joined
[14:22] *** ilbot2 joined
[14:22] *** revdiablo joined
[14:22] *** sjohnson joined
[14:22] *** lambdabot joined
[14:22] *** irc.freenode.net sets mode: +ovvv arnsholt dalek ilbot2 lambdabot

[14:22] *** PerlJam joined
[14:22] *** IRSeekBot joined
[14:22] *** frettled joined
[14:22] *** hicx174 joined
[14:22] *** rhr joined
[14:22] *** brody joined
[14:22] *** charsbar joined
[14:22] *** zostay joined
[14:22] *** sundar joined
[14:22] *** frew joined
[14:22] *** jrockway joined
[14:22] *** ruz joined
[14:22] *** obra joined
[14:22] *** yves joined
[14:22] *** sunnavy joined
[14:22] *** krakan joined
[14:22] *** wolverian joined
[14:22] *** carlin joined
[14:22] *** irc.freenode.net sets mode: +ovoo PerlJam IRSeekBot frettled carlin

[14:22] *** idemal joined
[14:22] *** stepnem joined
[14:22] *** avuserow joined
[14:22] *** bloonix joined
[14:22] *** mofino joined
[14:22] *** omega__ joined
[14:22] *** awwaiid joined
[14:22] *** moritz_ joined
[14:22] *** mathw joined
[14:22] *** draxil42 joined
[14:22] *** LionMadeOfLions joined
[14:22] *** sjn joined
[14:22] *** yahooooo joined
[14:22] *** pmichaud joined
[14:22] *** irc.freenode.net sets mode: +ooo moritz_ mathw pmichaud

[14:22] *** TimToady joined
[14:22] *** parduncia joined
[14:22] *** arthur-_ joined
[14:22] *** Helios joined
[14:22] *** japhb joined
[14:22] *** Tene joined
[14:22] *** jjore_ joined
[14:22] *** ingy joined
[14:22] *** ng_feed joined
[14:22] *** gbacon joined
[14:22] *** Woodi joined
[14:22] *** Infinoid joined
[14:22] *** cls_bsd joined
[14:22] *** dukeleto joined
[14:22] *** pugs_svn joined
[14:22] *** irc.freenode.net sets mode: +ovov TimToady ng_feed dukeleto pugs_svn

[14:22] *** hatseflats joined
[14:22] *** jiing joined
[14:22] *** phenny joined
[14:22] *** spinclad joined
[14:22] *** irc.freenode.net sets mode: +vo phenny spinclad

[14:24] *** zaslon left
[14:24] *** zaslon joined
[14:24] *** carlin sets mode: +vv zaslon pointme

[14:38] *** payload left
[14:43] <Wolfman2000> *yawn* morning

[14:48] <mberends> morning Wolfman2000, almost everyone is away today

[14:48] <Wolfman2000> mberends: kind of figured

[14:54] *** am0c left
[14:55] *** jaldhar left
[14:55] *** JimmyZ left
[14:55] <pmurias> mberends: hi

[15:02] *** vamped joined
[15:04] <vamped> mberends: ... so what happened from 0:00 to 12:00 ?

[15:04] <mberends> hi pmurias, I'm beginning to get familiar with mildew-js :) nice work!

[15:05] *** arthur-_ left
[15:06] <mberends> vamped: there may have been some recent tweaks to the server code, with unintended side effects. but that's just a guess.

[15:06] <vamped> hopefully nothing interesting was missed

[15:07] <mberends> the rows are probably there in some tables, it's probably the SQL queries that are misbehaving.

[15:08] <carlin> For it to lose exactly 12 hours it looks like a config problem

[15:08] *** arthur-_ joined
[15:08] <mberends> yes

[15:13] *** quantumEd joined
[15:26] *** jaldhar joined
[15:29] <pmichaud> good morning #perl6

[15:34] *** jferrero joined
[15:34] *** jan_ joined
[15:34] <mberends> good morning pm

[15:36] <vamped> nice advent post, pm

[15:37] <pmichaud> vamped: thanks!

[15:44] <moritz_> re

[15:49] *** Psyche^ joined
[15:50] *** Patterner left
[15:50] *** Psyche^ is now known as Patterner

[15:51] *** nihiliad joined
[15:53] *** Baggio_ left
[15:54] <diakopter> moritz_: you saw the irclog miss?

[15:56] *** colomon joined
[15:57] *** pmurias left
[15:58] *** vamped left
[16:06] <colomon> ng: say (1...10).join

[16:06] <p6eval> ng 4d71a2: 12345678910␤

[16:06] <colomon> ng: say (1...10).join(' ');

[16:06] <p6eval> ng 4d71a2: 1 2 3 4 5 6 7 8 9 10␤

[16:08] *** SmokeMachine left
[16:09] *** payload joined
[16:09] * colomon realized last night that if we have working basic loops and gather / take, it's easy enough to write an operator that takes two ints and returns the sequence from one to the other.  :)

[16:10] <mberends> :) # nqp-rx makes easy things easy and hard things possible

[16:11] *** envi_home2 left
[16:11] <colomon> This was in ng.  :)  I'm afraid at the moment, ng makes super easy things cool, easy things hard, and hard things beyond impossible.  

[16:17] <pmichaud> having seen the many changes to the perl 6 spec over the last month, restarting development with ng was absolutely the right move.  I'm not sure we could manage the transitions in the master branch.

[16:18] <slavik> pmichaud: rakudong?

[16:18] <pmichaud> slavik: yes

[16:18] <slavik> will it have proper install packages?

[16:19] <colomon> pmichaud: oh sure, I agree ng was absolutely the right thing to do.  It's just a bugger to program in right now.  :)

[16:19] <pmichaud> slavik: how do you mean "proper install packages"?

[16:19] <slavik> pmichaud: correct make install that checkinstall can make rpm/deb packages out of :P

[16:19] *** synth left
[16:19] <slavik> and place it into /usr/local/bin and a way to change PERL6LIB

[16:20] <pmichaud> slavik: we already have some targets for creating rpms

[16:20] <pmichaud> PERL6LIB might not be "real" -- at the moment it's a cheat

[16:20] <slavik> debian gets no love :(

[16:20] *** synth joined
[16:20] <slavik> I see

[16:20] <pmichaud> slavik: anyway, package/install is a goal for rakudo star, not necessarily ng

[16:20] <slavik> pmichaud: I know

[16:20] <slavik> it just would be easier if I could install rakudo and treat it as "perl6"

[16:29] *** wdsw joined
[16:30] *** wdsw left
[16:37] *** astrojp joined
[16:38] *** araujo joined
[16:55] <moritz_> diakopter: yes

[16:57] <Wolfman2000> ...and the OS Wars in my household has taken a new turn. I've finally convinced my dad that Mac OS X > Windows

[16:57] <mberends> :)

[16:58] <Wolfman2000> We may be able to salvage a nearly broken laptop and put linux on it too.

[17:11] <jnthn> afternoon, all :-)

[17:11] <Wolfman2000> afternoon jnthn.

[17:12] <Wolfman2000> In a few hours I'll prepare my Day 8 post just in case mathw isn't able to do Day 7

[17:13] <mathw> it's done

[17:13] <phenny> mathw: 03:12Z <colomon> tell mathw I had my Day 7 post ready to go this evening, so swapped with you.  You're up for day 7 now.  Hope that is okay.

[17:13] <mathw> scheduled in

[17:13] <Wolfman2000> nice timing mathw 

[17:13] <mathw> I was rather startled by colomon's swapping

[17:13] <Wolfman2000> what's your time zone again?

[17:13] <mathw> GMT

[17:13] <Wolfman2000> the usual goal for us has been to get out the posts within the first hour of the new GMT day

[17:14] <mathw> yes I should really have written it and scheduled it last night

[17:14] <Wolfman2000> it's alright...don't worry about it

[17:14] <Wolfman2000> I'll make sure to proofread it soon

[17:15] * Wolfman2000 is presently installing Ubuntu on his VirtualBox

[17:15] <mathw> please do, there may be a stupid mistake or two in there

[17:15] *** colomon left
[17:15] *** mikehh_ left
[17:16] *** mikehh_ joined
[17:16] *** colomon joined
[17:23] *** justatheory joined
[17:23] *** brrant joined
[17:28] <Wolfman2000> VirtualBox++ for working rather well

[17:31] *** colomon left
[17:31] *** colomon joined
[17:31] <colomon> jnthn, pmichaud, etc: I'm still getting very frequent crashes in ng.

[17:32] <colomon> If someone can clue me in on how to build with GDB debugging info in parrot, I think I can probably produce some useful GDB backtraces and valgrind runs.

[17:33] *** brrant left
[17:36] <mberends> colomon: add -ggdb to the gcc compiler options

[17:37] <arnsholt> colomon: If you get the help info from Parrot's config script there's an option to enable debugging symbols

[17:37] <jnthn> colomon: I think we build an optimized Parrot by default on some platforms, which probably disables debugging info.

[17:37] <arnsholt> Then you can pass that to Rakudo's configure

[17:38] <jnthn> Well, it may do anyways...

[17:38] * jnthn knows on his platform that it can be a case of choosing debug info or optimized build.

[17:39] *** colomon left
[17:39] *** colomon_ joined
[17:39] *** payload left
[17:39] *** mikehh_ left
[17:40] *** synth left
[17:44] *** colomon joined
[17:44] *** colomon_ left
[17:44] *** mikehh_ joined
[17:44] <colomon> Thanks, guys, I'll give that a try now.

[17:47] <colomon> Errr, I'll give that a try after I try to add just a couple more sensible unpolar.t tests, and get a bus error again.

[17:51] <colomon> --debugging=0        Disable debugging, default = 1

[17:52] <colomon> Does that mean -- debugging=0 disables debugging, or --debugging=1 disables debuging?

[17:52] <colomon> is parrot build with debugging by default?

[17:55] *** isawallama joined
[17:56] *** mikehh_ left
[17:58] <slavik> will it be possible to get thread/heap dumps of memory that parrot has allocated?

[17:58] *** mikehh_ joined
[18:00] <isawallama> Brooke should know.

[18:01] <colomon> Hmmm, definitely looks like the parrot makefile I have does not have debugging: CFLAGS in parrot/Makefile includes -DDISABLE_GC_DEBUG=1 -DNDEBUG -O3

[18:03] *** isawallama left
[18:05] *** abbe joined
[18:05] <slavik> and also limit how much meamory parrot will allocate?

[18:05] <abbe> hi everyone

[18:05] <abbe> anyone running rakudo on freebsd ?

[18:07] *** mikehh_ left
[18:07] <mberends> colomon: fwiw, -NDEBUG causes all assert() macros to "disappear", ie output no code at all.

[18:09] <colomon> guess I should ask on #parrot, eh?

[18:09] <abbe> gcc is segfaulting for me on 8.0-RELEASE (amd64)

[18:13] <jnthn> abbe: That's a bug in gcc. :-( There is a workaround, but I forget it...I'm sure it came up here a month or so back.

[18:13] <abbe> jnthn: yeah, I was the one who mentioned it last month. I've forgot to followup on that :(

[18:14] *** mikehh_ joined
[18:14] <abbe> jnthn: Could you please look it in your archives ?

[18:15] <jnthn> abbe: I guess it'll be searchable in the irclogs

[18:15] <abbe> One of my friend was able to build it on his dual-quad core xeon box, but I'm not able to build it on my core 2 duo boxen.

[18:15] <jnthn> pointme: irclogs

[18:15] <pointme> Sorry, I don't know anything about irclogs

[18:16] <jnthn> pointme: irclog

[18:16] <pointme> Sorry, I don't know anything about irclog

[18:16] <jnthn> aww

[18:16] <abbe> oh okay, i got it from /topic

[18:16] <jnthn> oh!

[18:16] <jnthn> :-)

[18:16] <jnthn> abbe: I don't have any archive of my own besides that one. :-)

[18:17] <abbe> thanks jnthn :)

[18:17] <moritz_> diakopter: yes

[18:21] *** mikehh_ left
[18:25] <mberends> abbe: searching irclog seems not to find the issue, but it was something about freebsd 8.0 having a slightly outdated gcc (4.2x) with a bug.  your best option would be to somehow install a newer gcc.

[18:26] <abbe> mberends: yes, I know freebsd has 4.2.1, i'm wondering if there is some workaround patch which I can apply to rakudo source for that

[18:26] <abbe> I want to avoid depending on GCC, if possible at all.

[18:28] <mberends> abbe: right, but probably no workaround documented :-(

[18:30] <abbe> It seems some logs are wiped off

[18:30] *** mikehh_ joined
[18:30] <abbe> http://irclog.perlgeek.de/parrot/2009-11-04 http://[2001:4860:b006::84]/search?q=cache:tqby-vb2MRUJ:irclog.perlgeek.de/parrot/2009-11-04+site:irclog.perlgeek.de+rakudo+gcc+freebsd+2009+segfault&cd=15&hl=en&ct=clnk&client=firefox-a

[18:33] * moritz_ wonders wtf is going on there

[18:34] <moritz_> it's still in the DB

[18:38] *** mikehh_ left
[18:44] <jnthn> Maybe the query is a bit queer. :-)

[18:45] <moritz_> I'll dump the database and try it locally

[18:46] <abbe> lol

[18:48] *** mikehh_ joined
[18:51] *** tann joined
[18:53] *** krakan left
[18:54] *** krakan joined
[18:55] *** mikehh_ left
[19:01] *** hicx174 left
[19:13] <moritz_> somehow all those rows were marked as spam

[19:15] <Wolfman2000> ...I think git's make test takes longer than make spectest for rakudo right now

[19:15] <Wolfman2000> I don't know if that's an accomplishment or not

[19:16] <mberends> it's strange, but why compile git from source? is this your Ubuntu install?

[19:17] <Wolfman2000> mberends: yes.

[19:17] <Wolfman2000> as far as why...well, I'm not in that big of a rush.

[19:18] <lisppaste3> colomon pasted "unpolar.t crash" at http://paste.lisp.org/display/91689

[19:18] <colomon> now with better debugging info....

[19:20] <arnsholt> Hmm. 0x48 looks like a weird memory address

[19:20] <arnsholt> Perhaps an unitialised variable?

[19:22] <jnthn> colomon: Hmm. I think I saw another stack trace not so long ago that also looked like that. :-/

[19:22] <colomon> also from me, or... ?

[19:22] <jnthn> colomon: Maybe.

[19:23] <colomon> I've dumped up a bunch over the last week or so.

[19:23] <jnthn> colomon: It's not blindingly obvious from the stack trace where exactly the problem is.

[19:23] <jnthn> colomon: The interesting bit is where we've been leading up to that point.

[19:23] <arnsholt> Good question. I suppose it could be, but my first guess would be that this comes from inside Parrot

[19:23] <colomon> I've still got gdb sitting open at the crash, so if there's anything I can run there that would help you...

[19:23] <moritz_> colomon: just read your calendar post - colomon++

[19:23] <arnsholt> colomon: How big is the function it fails in?

[19:23] <jnthn> arnsholt: It does, right.

[19:23] <colomon> moritz_: danke.

[19:24] <moritz_> colomon: just one minor nit: (1, 2, 3)».++ isn't supposed to work

[19:24] <jnthn> arnsholt: The question is, did it go somewhere in Rakudo beforehand.

[19:24] <moritz_> colomon: ++ needs an lvalue, and a literal number is not writable

[19:24] <colomon> moritz_: I was wondering about that last night.

[19:24] <colomon> no one was on-line who knew.

[19:24] <moritz_> you could write that >>.succ though

[19:24] <jnthn> arnsholt: And did something we did in Rakudo break it.

[19:24] <jnthn> arnsholt: Or is it completely a Parrot bug.

[19:25] <Wolfman2000> and my final results of make testing git...

[19:25] <colomon> jnthn, arnsholt: I think it's a rakudo ng bug.

[19:25] <Wolfman2000> 2 fixes, 4656 successes, 11 brokens

[19:25] <arnsholt> jnthn: If it's an unitialised variable I think it has to be a Parrot bug

[19:25] <colomon> The crashes in the file seem to depend on what is compiled later on in the file, if that makes any sense.

[19:25] <moritz_> rakudo also has some C code, which could be buggy

[19:25] <arnsholt> From the stack trace, c isn't an argument to the function, and the return value is c->current_sig

[19:26] <colomon> In this case, the file worked, I added a second case, and now it dies before the first case finishes.

[19:26] <carlin> abbe: I also get a segfault compiling rakudo on 8.0

[19:26] <abbe> carlin: you know of that workaround...?

[19:26] <arnsholt> colomon: Anyways, try to see if c being uninitialised is possible with the flow of the function

[19:27] <lisppaste3> colomon annotated #91689 "code that's failing" at http://paste.lisp.org/display/91689#1

[19:27] <abbe> carlin: I'm trying to port it to freebsd...

[19:27] <colomon> With just the first is_approx there, the code works.  With the second one added, the code fails BEFORE the first one has printed out its test message.

[19:28] <colomon> And as I said, this sort of thing has been happening to me a *lot* in ng.

[19:28] <colomon> arnsholt: "c"?

[19:28] <arnsholt> colomon: From the gdb trace you posted, it failed on this statement: "return c->current_sig;"

[19:29] *** constant left
[19:29] <arnsholt> And the error was a protection failure trying to access address 0x00000048

[19:30] <arnsholt> Which means that c has to point at 0x48, which is an invalid memory location

[19:30] <abbe> A work around I came across is removing all -W switches, and just keeping '-Wall', but wondering if it generates good code ?

[19:30] <colomon> The previous line is   Parrot_Context const *c = get_context_struct_fast(interp, ctx);

[19:30] <abbe> good as in safe, reliable.

[19:31] <colomon> I'm pretty much completely ignorant of parrot internals, so I've no idea if that is supposed to return null or not.

[19:31] <colomon> arnsholt: if it would help, I can rerun that code under valgrind and see what it says.

[19:32] <arnsholt> colomon: Might be worth a try. Hopefully it'll complain about jumps depending on uninitialised bytes somehwere in get_context_struct_fast() or below it

[19:32] <colomon> firing it up now, usually takes a few minutes.

[19:36] <dalek> book: 1b7ec89 | jnthn++ | src/roles.pod:

[19:36] <dalek> book: [roles] Start to fill out the roles chapter a bit.

[19:36] <dalek> book: review: http://github.com/perl6/book/commit/1b7ec89738197f8cea4db7c94b46237e3a766cf5

[19:36] <colomon> unfortunately, parrot's gc fires off dozens of errors under normal conditions...

[19:37] <arnsholt> Heh

[19:37] *** hicx174 joined
[19:38] <arnsholt> Which parrot rev is this?

[19:38] *** colomon_ joined
[19:38] *** colomon left
[19:38] *** colomon_ is now known as colomon

[19:39] <lisppaste3> colomon annotated #91689 "end of valgrind on the unpolar error" at http://paste.lisp.org/display/91689#2

[19:39] <arnsholt> In case you didn't get my last: Which Parrot rev is this?

[19:40] <colomon> 42822

[19:40] <moritz_> colomon: try a newer parrot version

[19:40] <moritz_> colomon: since that revision a branch was merged...

[19:40] <moritz_> and the branch had somethiing to do with calling conventions

[19:41] <arnsholt> Sounds like a plan

[19:41] <colomon> any advice for a particular version to try?

[19:41] *** r0bby joined
[19:41] *** constant joined
[19:41] <moritz_> when in doubt, use HEAD

[19:41] <jnthn> ;-)

[19:42] <jnthn> A good general principle. :-)

[19:42] * jnthn afk for a bit.

[19:43] <colomon> all right, then, HEAD it is.

[19:43] <colomon> yow, that brought in a *lot* of changes.  now I'm scared...

[19:44] *** ShaneC joined
[19:48] <moritz_> our multi method ord() is export { ... } # quiz question: what's the problem with this code?

[19:48] *** snearch joined
[19:49] <colomon> does it need the self argument name to be is export?

[19:49] <moritz_> A: in the sub version that's generated from that, the first argument is anonymous

[19:49] <moritz_> right

[19:49] <colomon> \o/

[19:49] <colomon> of course, probably have that all over core at the moment....

[19:50] <colomon> I have a vague memory the syntax to name the first argument doesn't work in ng yet.

[19:50] <moritz_> ng: class A {  method b($foo:) is export { say $foo } }; A.new.b()

[19:50] <p6eval> ng 4d71a2: Not enough positional parameters passed; got 1 but expected 2␤current instr.: 'perl6;A;b' pc 255 (EVAL_1:112)␤

[19:50] <colomon> and we were certainly bad about doing that in master, too.

[19:51] <arnsholt> Does moving to head fix it?

[19:52] <colomon> arnsholt: still compiling.

[19:52] <arnsholt> 'k

[19:52] <arnsholt> If not, I might have something worth checking out

[19:53] <colomon> my first build actually failed, so I'm trying to start over again, hoping it was a glitch in my ad hoc build process rather than a parrot / rakudo incompatibility.

[19:56] * colomon crosses his fingers for rakudo's make...

[19:59] <colomon> we have a build

[20:00] <colomon> we also have a small boy insisting I read board books to him.

[20:02] <colomon> well, that made that version of the crash go away.

[20:02] <colomon> let me play with things a bit and see if it pops back up again or not.

[20:03] <arnsholt> 'k

[20:04] <moritz_> does dalek report from the ng branch facefully?

[20:04] <colomon> facefully?

[20:04] <ng_feed> rakudo-ng: moritz++

[20:04] <ng_feed> rakudo-ng: Merge branch 'ng' of [email@hidden.address] into ng

[20:04] <ng_feed> rakudo-ng: moritz++

[20:04] <ng_feed> rakudo-ng: make ord() and chr() work with named args

[20:05] <colomon> ooo, now I need to see how you did it.  :)

[20:05] <moritz_> by cheating, ,of course!

[20:05] <colomon> :)

[20:05] <dalek> rakudo/ng: 63caed2 | moritz++ |  (14 files):

[20:05] <dalek> rakudo/ng: Merge branch 'ng' of [email@hidden.address] into ng

[20:05] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/63caed2942d6efee8fabb408aa3cbc1902a7440d

[20:05] <dalek> rakudo/ng: 7fc4854 | moritz++ | src/core/Any- (2 files):

[20:05] <dalek> rakudo/ng: make ord() and chr() work with named args

[20:05] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/7fc4854c20a040e31c690003cdd10e81b4e1e097

[20:06] <colomon> any objections to my checking in the parrot bump?

[20:06] <moritz_> no objection here

[20:06] <colomon> so you got rid of the is export and added a proto instead?

[20:06] <moritz_> right

[20:06] *** ng_feed left
[20:06] <rgrau> more or less, how many tests does ng pass? any idea ?

[20:07] <moritz_> rgrau: I'll tell you after a test run :-)

[20:07] <colomon> it just ran 1669 on mine, but I don't know how many of those are fudged.

[20:08] <rgrau> thanks, it's only to know more or less how far is rakudo master branch

[20:08] <pugs_svn> r29275 | colomon++ | [t/spec] Test method forms of cis. 

[20:09] <moritz_> 1514 tests pass :-)

[20:10] <colomon> rgrau: it's still pretty far (as you might gather from the count) but there's probably only 20 or so big things to fix and then the rest should fall into place pretty quickly.

[20:10] <moritz_> like, iterating ranges :-)

[20:11] <carlin> abbe: remove -Wmissing-include-dirs

[20:11] <rgrau> yeah, I read something about that in jnthn and masak's posts some time ago. too many yaks to  shave at first

[20:11] *** cognominal left
[20:12] <colomon> moritz_: don't know if you saw or not, but I implemented a crude Int ... Int overnight, which I suspect will help for a lot of test file uses of Range.

[20:12] *** cognominal joined
[20:12] <pugs_svn> r29276 | moritz++ | [t/spec] unfudge split-simple2.t for rakudo-ng 

[20:12] <pugs_svn> r29276 | 

[20:12] <pugs_svn> r29276 | Somehow it blows up with the fudges, but works fine without them. Huh.

[20:13] <colomon> moritz_: hopefully bumping parrot has gotten rid of that issue too.  :)

[20:13] <abbe> aha, carlin :-) danke

[20:13] <colomon> running tests now...

[20:14] <moritz_> Could not find non-existent sub &fail

[20:14] <moritz_> I "love" those

[20:15] * moritz_ hopes Tene++ gives fail() a shot

[20:16] <Wolfman2000> hey guys! We're famous now!

[20:16] <Wolfman2000> http://developers.slashdot.org/story/09/12/06/196202/The-Perl-6-Advent-Calendar <-- We're on Slashdot now!

[20:17] <colomon> no freaking way.

[20:17] <colomon> !!!!!!!!!!!

[20:18] <Wolfman2000> excited now?

[20:18] <moritz_> woot

[20:18] * moritz_ wonders if the site is still reachable...

[20:18] <Wolfman2000> presently is

[20:18] <colomon> it's wordpress, they've got to be able to handle a slashdotting, don't they?

[20:19] <Wolfman2000> colomon: guess we'll find out

[20:19] <Wolfman2000> in the meantime, have to wrap up some other things. brb/afk

[20:20] <colomon> well, that should help our number of hits for today.

[20:20] <moritz_> it did already

[20:20] *** explorer__ joined
[20:20] <moritz_> 1.8k hits today, which is the max so far

[20:23] <dalek> rakudo/ng: 0a236ac | (Solomon Foster)++ | build/PARROT_REVISION:

[20:23] <dalek> rakudo/ng: Bump parrot revision to head in an attempt to get around the random crashes I have been experiencing.

[20:23] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/0a236ac5ef9c59860028fb07bcf63e52894967fd

[20:23] <carlin> It took a whole 4 minutes between the story being posted and a Duke Nukem joke ...

[20:24] * moritz_ not surprised

[20:26] <colomon> you know, if SDL was working on perl 6, it would be cool to program a little game in p6 and dub it Duke Nukem Forever....

[20:27] * colomon is now imagining a DNF adventure game in p6 for the Book....

[20:27] <moritz_> don't

[20:27] *** jaldhar left
[20:27] <moritz_> adventure games are way too long for a book

[20:30] *** jaldhar joined
[20:30] <arnsholt> moritz_: But it'd be puntastic! ;)

[20:30] <colomon> It could be a very small adventure....

[20:31] <colomon> we could explain the delay in release of Duke was due to waiting for perl 6 to be ready...

[20:32] <moritz_> except that DNF was discontinued

[20:34] *** tarski joined
[20:34] <tarski> where can i get perl6

[20:34] <tarski> rakudo, parrot, pugs, what is the best to use right now in terms of stability?

[20:35] <colomon> rakudo.

[20:35] <moritz_> rakudo is being actively developed, in contrast to pugs

[20:35] <moritz_> and it uses parrot under the hood

[20:35] <moritz_> tarski: http://rakudo.org/how-to-get-rakudo

[20:36] <tarski> thanks

[20:36] <moritz_> you're welcome

[20:41] <colomon> Advent calendar appears to be getting about 1800 hits an hour at the moment...

[20:42] <arnsholt> Not bad. Let's hope it gives a bump in interest

[20:43] <colomon> also, pmichaud's metaoperator post has picked up two "isn't this apl?" comments already.

[20:57] <carlin> The important thing is that it lets people know Perl 6 is still alive and kicking

[20:57] <tarski> building perl6 from source now :)

[20:58] <moritz_> colomon: are you aware of any low-hanging fruit in ng?

[20:58] <moritz_> (or semi-LHF)

[21:04] <colomon> one sec, taking out garbage

[21:08] *** nihiliad left
[21:11] *** astrojp left
[21:12] <colomon> okay.

[21:13] <colomon> off the top of my head, we could probably win back a bunch of tests by systematically doing what you did to ord to other functions.  There are fudged named argument tests all over the test suite, on functions that otherwise work.

[21:14] <colomon> Actually, "win back" isn't appropriate for a lot of those, which never worked in rakudo as far as I know.

[21:14] <colomon> need to change boy, will think more while doing it.

[21:16] *** infrared joined
[21:17] <infrared> installing rakudo on fbsd, how should i specify the parrot location?

[21:19] <mberends> infrared: --parrot-config=<path>, but by you question you probably haven't installed parrot

[21:20] <mberends> *your

[21:20] <infrared> mberends: i installed it in /usr/local/parrot (non root)

[21:21] <mberends> infrared: then confirm you have /usr/local/parrot/bin/parrot_config

[21:21] *** ShaneC left
[21:21] <infrared> i do

[21:22] <infrared> make PARROTCONFIG=/usr/local/parrot/bin/parrot_config install clean

[21:22] <infrared> is what i'm attempting

[21:22] <mberends> rather try this:

[21:22] <moritz_> perl Configure --parrot-config=/usr/local/parrot/bin/parrot_config

[21:22] <moritz_> make install

[21:22] <mberends> :)

[21:23] <arnsholt> Telepathy =D

[21:23] <mberends> er, Configure.pl

[21:23] <moritz_> right

[21:24] <mberends> just checking, the parrot install and install-dev are the same, right?

[21:24] <moritz_> install = install-dev + install-base or something

[21:24] <mberends> :)

[21:25] <moritz_> s/base/bin/

[21:25] <infrared> thank you

[21:26] *** alester joined
[21:27] <abbe> thanks carlin and jnthn :)

[21:28] <Wolfman2000> Alright, time to prepare my posting...and honestly, I'll need some assistance for part of it.

[21:29] <colomon> Wolfman2000: mathw's post is ready to go for today, it appears.

[21:29] <Wolfman2000> colomon: right. Well, I'll get mine ready now for tomorrow then

[21:29] <colomon> mathw: I just spent day 6 telling people not to do @a>>.say.  :)

[21:30] <colomon> mathw: also, in the ^$n paragraph, the last character is lost.

[21:30] <Wolfman2000> ...I may be able to use >>. somehow. At least, if I can figure out how to change my .map version

[21:30] <colomon> mathw: other than that, very nice post!  methodical and clear, IMO.

[21:32] <carlin> abbe: np, it certainly is a weird gcc bug

[21:34] <moritz_> "This could have been written using a bare <code>say</code> subroutine call, but I prefer the method call syntax."

[21:34] <moritz_> not true.

[21:34] <moritz_> not in Perl 6

[21:34] <abbe> carlin: http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/139010 http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/139012 the updated PR will appear here in few minutes.

[21:36] <moritz_> mathw: mind if I remove that sentence?

[21:37] <mathw> it's not true?

[21:37] <moritz_> rakudo: for 1..4 { say }

[21:37] <p6eval> rakudo 7ef386: say requires an argument at line 2, near "}"␤in Main (file src/gen_setting.pm, line 2610)␤

[21:37] <mathw> cool

[21:37] <mathw> I like Perl 6 a little more

[21:37] <moritz_> oh, one more thing

[21:37] <moritz_> ^@array.elems Z @array

[21:37] <moritz_> can even be written nicer

[21:37] <moritz_> as @array.kv

[21:38] <mathw> I think that requires a new paragraph

[21:38] <mathw> as it's a progression from the original idea

[21:38] <mathw> so I'll add one for it when you've removed that sentence

[21:39] <mathw> and as for not using >>.say, it should work fine if your I/O system thinks in lines, and you don't care about ordering...

[21:39] <mathw> although >>.say is likely to be rare,  ithink

[21:39] <mathw> >>.something-else-which-doesnt-do-IO is more likely I think :)

[21:40] *** cspencer joined
[21:40] *** Guest41567 left
[21:40] <Wolfman2000> ah, here's what I was looking for... [sourcecode light="true"]

[21:41] <moritz_> mathw: I'm storing the post right now, but it takes ages :/

[21:41] <mathw> booooooo

[21:41] <mathw> slow bad

[21:41] <mathw> but we can cope

[21:41] <moritz_> that's the /. effect

[21:41] *** lmc left
[21:41] <moritz_> still I'm amazed the site is still up :-)

[21:42] <moritz_> done

[21:42] <Wolfman2000> moritz_: preparing my draft as you guys speak

[21:42] <Wolfman2000> haven't been affected that much

[21:42] <moritz_> mathw: I also changed ^@array.elems Z @array to @array.kv

[21:42] <mathw> as I said,  iwas going to add another paragraph for that

[21:43] <moritz_> oh, I thought you meant the other thing (empty say)

[21:43] <mathw> heh

[21:43] <mathw> I'll sort it out

[21:43] <moritz_> mathw++

[21:43] *** abbe left
[21:44] <moritz_> @karma mathw 

[21:44] <lambdabot> mathw has a karma of 14

[21:44] <mathw> gosh

[21:44] <mathw> how did that happen

[21:44] <moritz_> mathw++ # like this

[21:45] <mathw> yes I know that

[21:45] *** Su-Shee left
[21:45] <moritz_> :-)

[21:45] <mathw> but I'm surprised it's been that much since I changed my nick

[21:47] *** explorer__ left
[21:50] <Wolfman2000> ...I hope I didn't mix up all of the purposes of .comb now...

[21:50] <Wolfman2000> rakudo: my @tmp = "Hello".comb; say @tmp[1];

[21:50] <p6eval> rakudo 7ef386: e␤

[21:50] <Wolfman2000> ...probably have to recompile rakudo or something

[21:51] <Wolfman2000> rakudo: say "Hello".comb;

[21:51] <p6eval> rakudo 7ef386: Hello␤

[21:51] <moritz_> rakudo: say "Hello".comb.join('|')

[21:51] <p6eval> rakudo 7ef386: H|e|l|l|o␤

[21:51] <Wolfman2000> moritz_: I know of that too

[21:51] <moritz_> rakudo: say "Hello".comb(/<[ao]>/).join('|')

[21:52] <p6eval> rakudo 7ef386: o␤

[21:55] <Wolfman2000> rakudo: say "Perl 6 Advent".comb(/<alpha>/).join('|');

[21:55] <p6eval> rakudo 7ef386: P|e|r|l|A|d|v|e|n|t␤

[21:56] <moritz_> rakudo: say "Perl 6 Advent".comb(/<alpha>+/).join('|');

[21:56] <p6eval> rakudo 7ef386: Perl|Advent␤

[21:56] <Wolfman2000> moritz_++: Another good one.

[21:56] <Wolfman2000> But I don't want to deal with too many regex patterns yet

[21:56] <Wolfman2000> That's a gift for another day. :)

[21:57] *** cspencer left
[21:57] <Juerd_> I finally found out why I don't like python's ":".join(list)

[21:57] <Wolfman2000> Juerd_: counterintuitive?

[21:57] <Juerd_> You can't do foo.split(":").join(":").split(":").join(":")...

[21:58] <Juerd_> So here's a rule: opposite operations should be stackable as methods :)

[22:00] <Tene> moritz_: would a simple &fail that just throws an exception be okay for now?

[22:00] <Tene> could be caught with try { ... }

[22:01] *** synth joined
[22:01] <moritz_> Tene: making it an alias for return Mu; would be a better stopgap solution, I think

[22:01] <Tene> Oh?

[22:01] <Tene> Okay, I can do that.

[22:01] <slavik> Juerd_: python in general is proud to be dumb

[22:02] <slavik> GIL?!

[22:02] <Tene> slavik: rakudo can't do threads *at all*

[22:02] <slavik> Tene: not yet :P

[22:02] <Juerd_> slavik: Python is certainly not dumb.

[22:02] <slavik> Tene: what's the point of having threads if they aren't concurrent? why not just go back to Solaris ...

[22:02] <Juerd_> slavik: It has a few design bugs. So does Perl 5. And, as I'm sure we'll eventually discover, so will Perl 6.

[22:03] <slavik> Juerd_: GIL is there by design

[22:03] <Juerd_> I don't know what GIL is

[22:03] <Juerd_> Do you know what a design bug is? :)

[22:03] <Tene> global interpreter lock

[22:04] *** jan_ left
[22:04] <slavik> ie: no thread concurrency

[22:04] *** pmurias joined
[22:04] <Wolfman2000> rakudo: say "5065726C36".comb(/<xdigit>**2/).map: { chr(:16( $_ ) ) } ).join('');

[22:04] <Juerd_> Design bugs are, by definition, by design :)

[22:04] <p6eval> rakudo 7ef386: Syntax error at line 2, near ").join('')"␤in Main (file <unknown>, line <unknown>)␤

[22:04] <slavik> also ... OpenGL in Python is 50% slower than C/Perl for a very simple reason ...

[22:04] *** araujo left
[22:04] <Wolfman2000> ...BAH

[22:05] <slavik> for every opengl call, there is a call to glError()

[22:05] <Wolfman2000> rakudo: say "5065726C36".comb(/<xdigit>**2/).map: { chr(:16( $_ ) ) } );

[22:05] * Wolfman2000 copied too much

[22:05] <p6eval> rakudo 7ef386: Syntax error at line 2, near ");"␤in Main (file <unknown>, line <unknown>)␤

[22:05] <slavik> the red book explicitly says not to do this.

[22:05] <Wolfman2000> rakudo: say "5065726C36".comb(/<xdigit>**2/).map: { chr(:16( $_ ) ) } ;

[22:05] <p6eval> rakudo 7ef386: Perl6␤

[22:05] <Juerd_> Wolfman2000: Did you know the bot also responds to private messages? :)

[22:05] <Wolfman2000> Juerd_: ...that may be useful.

[22:06] <slavik> I also dislike the almost java like + for string cat

[22:06] <slavik> it should be either explicit like Perl or automatically converted like Java

[22:06] * Juerd_ sighs

[22:06] <Wolfman2000> Python is an interesting beast.

[22:06] <moritz_> slavik: did you mean javascript?

[22:06] <slavik> "val = " + str(some_val) + "\n" is messed up IMO

[22:07] <Juerd_> Context is great. Most languages don't have it.

[22:07] <slavik> moritz_: javascript as well. I mean how Java does an auto .toString() for any object that you try to cat to a string

[22:07] <Juerd_> dog

[22:07] <carlin> rakudo: say "5065726C36".comb(/<xdigit>**2/).map: { chr '0x' ~ $_ }; # Wolfman2000

[22:07] <p6eval> rakudo 7ef386: Perl6␤

[22:07] <Tene> slavik: Please try to keep the language-bashing down a bit.

[22:08] *** wayland76 joined
[22:08] <slavik> like: int a = 5; System.out.println("" + a); will wrap the 'a' in Integer class and call .toString() on it

[22:08] <slavik> Tene: I am done :P

[22:08] <Wolfman2000> carlin++: ...I think I like that even more.

[22:08] <Tene> We all do it a bit, but it's not quite the spirit we want for our community. :)

[22:08] <Wolfman2000> I'm going to borrow that for my post tomorrow.

[22:10] *** iblechbot left
[22:11] *** foudfou joined
[22:11] <Wolfman2000> To all Perl 6 Advent admins and editors: my Day 8 post is ready for critiquing.

[22:13] <Wolfman2000> ...ah. So THAT'S how I was supposed to do it...?

[22:13] <Wolfman2000> alright, which to PM

[22:14] <foudfou> hi all, I was wondering: is there a chance to see the statement ending semi-colons as optional ?

[22:14] <moritz_> foudfou: no

[22:14] <foudfou> :-)

[22:14] <moritz_> foudfou: only those preceeding a curly brace at the end of a line

[22:14] *** jonathanturner joined
[22:15] *** zamolxes left
[22:15] <jonathanturner> The Perl 6 Advent thing was a cool idea.  I'm sure it's getting a lot of people playing with the current Perl6 builds

[22:15] <Tene> foudfou: it's not likely you'll win much support for that as a lgobal language change, but you could certainly write a module that implements that change in a defined lexical scope with macros.

[22:16] <Wolfman2000> ...alright, I need more assistance from the experts. Presently, I'm using .map { method } over >>.method. I'm trying to figure out the right way of implementing it with my upcoming post.

[22:16] <Wolfman2000> jonathanturner: If nothing else, we've got a lot of people now due to Slashdot

[22:16] <Tene> foudfou: use OptionalSemis; # Semicolons are optional after this, until the end of the scope

[22:16] <Tene> Wolfman2000: you need a leading . on method

[22:16] <moritz_> jonathanturner: nearly 3k visitors from slashdot today, YaY

[22:17] <Tene> rakudo: (1,2,3).map { .say }

[22:17] <p6eval> rakudo 7ef386: Confused at line 2, near "{ .say }"␤in Main (file <unknown>, line <unknown>)␤

[22:17] <Tene> rakudo: (1,2,3).map: { .say }

[22:17] <p6eval> rakudo 7ef386: 1␤2␤3␤

[22:17] <jonathanturner> moritz_: nice

[22:17] <Wolfman2000> Tene: I'm trying to avoid using map actually

[22:17] *** nihiliad joined
[22:17] <Tene> Ah.

[22:17] <Wolfman2000> I want to use the hyperoperator.

[22:17] <Wolfman2000> but in this case, I need to use...well, let me PM you

[22:18] <jonathanturner> just had a quick question on the zip operator... if I do: ([1, 2, 3] Z [4, 5, 6]).perl.say I get [1, 4, 2, 5, 3, 6] instead of [(1, 4), (2, 5), (3, 6)].  is this flattening normal, or am I just reading it wrong?

[22:18] <moritz_> jonathanturner: it's a limitation in rakudo right now

[22:18] *** snearch left
[22:19] <moritz_> jonathanturner: it doesn't implement slices yet, which would be needed for the correct semantics

[22:20] <jonathanturner> moritz_: how involved is the implementation side of it?  might be a fun project to help with

[22:20] *** Limbic_Region joined
[22:20] <moritz_> jonathanturner: I don't really know; I guess pmichaud is the right person to ask

[22:20] <Limbic_Region> FYI, there is an unanswered Rakudo question at PerlMonks - http://perlmonks.org/?node_id=811292

[22:21] <moritz_> Limbic_Region: I'll look at it later

[22:24] *** zamolxes joined
[22:24] <moritz_> std: module Foo-1.0;

[22:24] <p6eval> std 29276: [31m===[0mSORRY![31m===[0m␤Unable to parse module definition at /tmp/jGZLFG1mw9 line 1:␤------> [32mmodule Foo[33m⏏[31m-1.0;[0m␤    expecting any of:␤       trait␤  whitespace␤FAILED 00:01 106m␤

[22:25] <moritz_> rakudo: module Foo:ver<1.0>;

[22:26] <p6eval> rakudo 7ef386:  ( no output )

[22:26] <moritz_> rakudo: module Foo:ver<1.0>; say 1

[22:26] <p6eval> rakudo 7ef386: 1␤

[22:26] *** mberends left
[22:27] *** foudfou left
[22:32] *** |Jedai| left
[22:33] *** |Jedai| joined
[22:35] *** colomon left
[22:37] <Wolfman2000> Tene++: Thanks for the help and reminding everyont that Perl 6 is still the language of TIMTOWTDI

[22:37] *** colomon joined
[22:37] <Wolfman2000> colomon: updated my piece. Have a crack at it if you want.

[22:38] <arnsholt> On a somewhat relevant note, does anyone know who submitted the calendar to slashdot?

[22:38] * arnsholt is curious =)

[22:38] <Wolfman2000> "timothy"

[22:38] <Wolfman2000> Specifically, http://www.monkey.org/~timothy/

[22:39] <colomon> Wolfman2000:  need to make and eat dinner, but I'll try to take a look after.

[22:39] *** astrojp joined
[22:40] <moritz_> there was a Timothy Nelson on p6l some time ago, iirc

[22:40] <moritz_> and maybe even here on irc, not sure

[22:40] <Wolfman2000> *shrugs* doesn't bother me.

[22:41] <moritz_> ah, but he usually uses wayland76 as a nick ;-)

[22:42] <arnsholt> Ah. That name I recognise

[22:44] <Wolfman2000> that one I don't

[22:44] *** r0bby left
[22:45] <moritz_> Wolfman2000: you should add the rot13 example that you mentioned at the end

[22:45] <moritz_> right now it's quite a cliff hanger

[22:45] <Wolfman2000> moritz_: I was hesistant since I already have a lot of information

[22:45] <moritz_> Wolfman2000: then at least put it in a paste bin and link to it, or so

[22:46] <Wolfman2000> moritz_: Hmm...good points. I'll look into it after I have dinner

[22:46] <moritz_> (and I also fixed KyleHa's name in the post :-)

[22:46] <wayland76> I didn't submit to Slashdot

[22:47] <wayland76> But I saw the article, and dropped by in case we needed help explaining things to visitors

[22:47] <Wolfman2000> then why does it say posted by timothy?

[22:47] *** r0bby joined
[22:47] <moritz_> Wolfman2000: I think there's more than one timothy in the world :-)

[22:47] <wayland76> Seeing as how the name is in the Bible, it crops up in cultures all around the world where Christianity has been an influence

[22:49] <wayland76> In this case, it appears to have been "Timothy Lord", who is not to be confused with "Timothy Nelson" (the latter is me :) )

[22:49] <Wolfman2000> wayland76: thank you for clearing that up

[22:51] <wayland76> No worries :)

[23:00] *** r0bby left
[23:01] *** ssm left
[23:02] <jnthn> Wow, the calendar made /. :-)

[23:06] *** astrojp_ joined
[23:07] <Wolfman2000> jnthn: few hours too late

[23:11] <zamolxes> jnthn: meh, I was used with the reddit and hn trolls, completely forgotten about the /. ubertrolls 

[23:13] <jnthn> Wolfman2000: Heh, I was afk for a few hours. :-)

[23:14] <jnthn> Wolfman2000: Sorry that my comment was a dupe, but it is fitting for a comment on /. ;-)

[23:14] <Wolfman2000> jnthn: it's alright

[23:17] *** astrojp left
[23:19] *** ssm joined
[23:19] * jnthn checks when his entry is needed for...and is relieved to see he still has a few days to prepare :-)

[23:21] *** r0bby joined
[23:27] <colomon> 6570 hits on the Advent blog so far today.

[23:29] <moritz_> it's kinda fun watching the stats searing up :-)

[23:30] *** Limbic_Region left
[23:34] *** jan_ joined
[23:41] <wayland76> Everyone should post at least one comment; it's looking a little sparse.  Maybe we should troll slashdot :).  

[23:41] <colomon> Wolfman2000: Your post looks pretty solid to me, though it might be fun to add the rot13 code too.

[23:43] *** pmurias left
[23:46] *** payload joined
