[00:08] *** icwiener left
[00:10] *** nihiliad left
[00:14] *** nihiliad joined
[00:16] *** ZuLuuuuuu joined
[00:37] *** orafu left
[00:37] *** OuLouFu joined
[01:02] *** wknight8111 joined
[01:05] <pasteling> "ZuLu" at 193.140.225.206 pasted "use v6; my @aral" (5 lines, 53B) at http://sial.org/pbot/35734

[01:05] <ZuLuuuuuu> Hello this code makes CPU 100%: http://sial.org/pbot/35734

[01:05] <ZuLuuuuuu> and does not display any result

[01:05] <ZuLuuuuuu> what might be the problem?

[01:06] <ZuLuuuuuu> I'm using Rakudo on Parrot 1.0

[01:09] <bacek> ZuLuuuuuu: lazy lists are not implemented yet

[01:09] <meppl> good night

[01:09] <ZuLuuuuuu> bacek: oh ok thanks

[01:09] <ZuLuuuuuu> meppl: good night

[01:09] <meppl> ;)

[01:10] *** meppl left
[01:10] *** cognominal left
[01:20] *** cognominal joined
[01:21] *** SamB left
[01:39] *** SamB joined
[01:39] <s1n> frioux: pong

[01:40] *** DemoFreak left
[01:41] *** SamB left
[01:41] *** SamB joined
[01:45] <ZuLuuuuuu> bacek: smart matching is also not fully imlemented I guess?

[01:45] <bacek> ZuLuuuuuu: which part?

[01:46] <ZuLuuuuuu> like

[01:46] <ZuLuuuuuu> I try to smart match

[01:46] <ZuLuuuuuu> a rule substitution with a string

[01:46] <ZuLuuuuuu> or an undefined value with a scaler variable

[01:48] <bacek> rakudo: say "Matched" if undef ~~ 1;

[01:48] <p6eval> rakudo 7af829: OUTPUT«Use of uninitialized value␤»

[01:48] <bacek> rakudo: say "Matched" if 'a' ~~ /<a>/;

[01:49] <p6eval> rakudo 7af829: OUTPUT«Unable to find regex 'a'␤Null PMC access in invoke()␤current instr.: 'parrot;PGE;Grammar;' pc 287 (EVAL_17:124)␤»

[01:49] *** SamB left
[01:49] *** SamB joined
[01:49] <bacek> rakudo: say "Matched" if 'bar' ~~ /a'/;

[01:49] <bacek> rakudo: say "Matched" if 'bar' ~~ /a/;

[01:49] <p6eval> rakudo 7af829: OUTPUT«perl6regex parse error: No closing ' in quoted literal at offset 31, found ''␤current instr.: 'parrot;PGE;Perl6Regex;parse_error' pc 10179 (compilers/pge/PGE/Perl6Regex.pir:1219)␤»

[01:49] <p6eval> rakudo 7af829: OUTPUT«Matched␤»

[01:49] <ZuLuuuuuu> hmmm it worked

[01:50] <ZuLuuuuuu> rakudo: say "Matched" if $isim ~~ undef;

[01:50] <p6eval> rakudo 7af829: OUTPUT«Scope not found for PAST::Var '$isim' in ␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[01:50] <ZuLuuuuuu> shouldn't this say "Matched"

[01:52] <bacek> rakudo: say "Matched" if my $isim ~~ undef;

[01:53] <p6eval> rakudo 7af829: OUTPUT«Matched␤»

[01:54] <ZuLuuuuuu> oh ok

[01:56] <ZuLuuuuuu> rakudo: say "Matched" if 'bar' ~~ s/a/b/;

[01:56] <p6eval> rakudo 7af829: OUTPUT«Statement not terminated properly at line 1, near "/;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[01:58] <bacek> std: say "Matched" if 'bar' ~~ s/a/b/;

[01:58] <p6eval> std 26019: OUTPUT«ok 00:04 36m␤»

[01:58] <bacek> looks like a bug

[02:07] *** wknight8111 left
[02:16] *** Limbic_Region left
[02:17] *** ZuLuuuuuu left
[02:22] *** kst left
[02:23] *** kst joined
[02:24] *** mikehh left
[02:25] *** kidd joined
[02:25] *** dKingston left
[02:33] *** orafu joined
[02:46] *** fridim_ left
[02:48] *** mikehh joined
[02:53] *** msmatsko left
[02:56] *** OuLouFu left
[03:09] *** orafu left
[03:09] *** OuLouFu joined
[03:30] *** ashizawa left
[03:30] *** ashizawa joined
[03:31] *** msmatsko joined
[03:36] <s1n> frioux: i have some time blocked off for tomorrow, i'll be on after dinner

[03:47] *** frayoyo joined
[04:05] *** hercynium left
[04:09] *** frayoyo left
[04:11] *** Tene_ joined
[04:14] *** araujo left
[04:14] *** araujo joined
[04:23] *** Tene left
[04:31] *** bsb_ joined
[04:31] <frioux> s1n: eh, I lose freedom after 3pm till ca. 10 tomorrow

[04:31] <frioux> sorry

[05:04] *** FurnaceBoy left
[05:11] <frioux> anyone know where pir.vim is?

[05:13] <bacek> frioux: pugs/editor

[05:14] <bacek> frioux: oops. sorry.

[05:14] <bacek> parrot/editor.

[05:14] <bacek> You have to "make" in this directory

[05:14] <frioux> one sec

[05:15] <frioux> ah

[05:15] <frioux> great

[05:15] <frioux> thanks

[05:16] <frioux> rakudo: 5 % 3 == 0

[05:16] <p6eval> rakudo 7af829: RESULT«Bool::False»

[05:16] <frioux> rakudo: 6 % 3 == 0

[05:16] <p6eval> rakudo 7af829: RESULT«Bool::True»

[05:20] <frioux> Does the init method get called when a class is instantiated with new?

[05:21] <frioux> no.

[05:21] *** msmatsko left
[05:22] <frioux> rakudo: 2 % 4 == 0

[05:22] <p6eval> rakudo 7af829: RESULT«Bool::False»

[05:22] <frioux> rakudo: 2 % 4

[05:22] <p6eval> rakudo 7af829: RESULT«2»

[05:22] <frioux> rakudo: 4 % 2 == 0

[05:23] <p6eval> rakudo 7af829: RESULT«Bool::True»

[05:25] * frioux is sad that you can't put method calls into junctions with smartmatches yet

[05:27] <bacek> rakudo: say "Matched" if .lc eq "foo" ~~ "Bar"|"FOO"

[05:27] <p6eval> rakudo 7af829: OUTPUT«Use of uninitialized value␤»

[05:27] <bacek> rakudo: say "Matched" if .lc eq "foo" ~~ ("Bar"|"FOO")

[05:27] <p6eval> rakudo 7af829: OUTPUT«Use of uninitialized value␤»

[05:27] <frioux> I meand 

[05:27] <bacek> hmm...

[05:27] <frioux> er

[05:27] <frioux> meant

[05:27] <frioux> $f ~~ .bar & .baz

[05:28] <bacek> std: my $f; $f ~~ .bar & .baz

[05:28] <p6eval> std 26019: OUTPUT«ok 00:02 35m␤»

[05:29] <frioux> I tried it with a minutes old build of rakudo though, it doesn't work atm

[05:30] <bacek> rakudo: say "hi" if "foo" ~~ .lc

[05:30] <p6eval> rakudo 7af829: OUTPUT«hi␤»

[05:30] <bacek> rakudo: say "hi" if "foo" ~~ (.lc & .uc)

[05:30] <p6eval> rakudo 7af829: OUTPUT«Use of uninitialized value␤Use of uninitialized value␤»

[05:31] <frioux> rakudo: "foo" ~~ .uc

[05:31] <p6eval> rakudo 7af829: RESULT«Bool::True»

[05:31] <frioux> rakudo: "foo" ~~ .uc & .lc

[05:31] <p6eval> rakudo 7af829: OUTPUT«Use of uninitialized value␤Use of uninitialized value␤»

[05:31] <frioux> rakudo: "foo" ~~ (.uc & .lc)

[05:31] <p6eval> rakudo 7af829: OUTPUT«Use of uninitialized value␤Use of uninitialized value␤»

[05:32] <bacek> rakudo: class Foo { method bar { say "bar"; 1 } }; my $f = Foo.new; say "hi" if $f ~~ .bar;

[05:32] <p6eval> rakudo 7af829: OUTPUT«bar␤hi␤»

[05:33] <bacek> rakudo: class Foo { method bar { say "bar"; 1 } }; my $f = Foo.new; say "hi" if $f ~~ (.bar & .bar);

[05:33] <p6eval> rakudo 7af829: OUTPUT«Method 'bar' not found for invocant of class 'Failure'␤current instr.: 'parrot;P6metaclass;dispatch' pc 637 (src/classes/ClassHOW.pir:161)␤»

[05:33] <frioux> yep

[05:33] <frioux> that's what I get here

[05:33] <bacek> frioux: parser error.

[05:33] <frioux> well

[05:33] <frioux> I didn't use say ... if

[05:33] <bacek> rakudo: class Foo { method bar { say "bar"; 1 } }; my $f = Foo.new; say "hi" if $f ~~ all(.bar, .bar);

[05:33] <frioux> I did if ... { }

[05:33] <p6eval> rakudo 7af829: OUTPUT«Method 'bar' not found for invocant of class 'Failure'␤current instr.: 'parrot;P6metaclass;dispatch' pc 637 (src/classes/ClassHOW.pir:161)␤»

[05:34] <bacek> rakudo: class Foo { method bar { say "bar"; 1 } }; my $f = Foo.new; say "hi" if $f ~~ all(&Foo.bar, &Foo.bar);

[05:34] <p6eval> rakudo 7af829: OUTPUT«bar␤bar␤get_number() not implemented in class 'Foo'␤current instr.: 'parrot;Int;ACCEPTS' pc 4751 (src/classes/Int.pir:50)␤»

[05:34] <bacek> rakudo: class Foo { method bar { say "bar"; True } }; my $f = Foo.new; say "hi" if $f ~~ all(&Foo.bar, &Foo.bar);

[05:34] <p6eval> rakudo 7af829: OUTPUT«bar␤bar␤Method 'ACCEPTS' not found for invocant of class ''␤current instr.: 'parrot;Junction;ACCEPTS' pc 9140 (src/classes/Junction.pir:154)␤»

[05:36] <frioux> see?  it's sad.

[05:43] <bacek> rakudo: class Foo { method bar { say "bar"; True } }; my $f = all(&Foo.bar, &Foo.bar); say $f.perl

[05:44] <p6eval> rakudo 7af829: OUTPUT«bar␤bar␤all(.new())␤»

[05:44] <bacek> rakudo: class Foo { method bar { say "bar"; True } }; my $f = Foo.new; say "hi" if $f ~~ all( { .bar }, { .bar } );

[05:44] <p6eval> rakudo 7af829: OUTPUT«bar␤bar␤hi␤»

[05:44] <bacek> ok. This is bug.

[05:45] <bacek> And this is workaround :)

[05:45] <frioux> why did it work in a block?

[05:45] <frioux> I like the workaround thought :-)

[05:45] <bacek> rakudo evaluates methods too early.

[05:46] <frioux> ah

[05:46] <frioux> got it

[05:46] <frioux> in other news: should this fail: { .foo 'bar' }

[05:46] <frioux> because it does

[05:47] <bacek> std: { .foo 'bar' }

[05:47] <p6eval> std 26019: OUTPUT«##### PARSE FAILED #####␤Malformed block␤Syntax error (two terms in a row?) at /tmp/D3te9cpxND line 1:␤------> [32m{ .foo [31m'bar' }[0m␤    expecting any of:␤     infix or meta-infix␤      infix stopper␤    standard stopper␤ statement modifier loop␤  terminator␤FAILED 00:02

[05:47] <p6eval> ..35m␤»

[05:47] <bacek> it should :)

[05:47] <frioux> huh

[05:47] <frioux> why?

[05:49] <bacek> "two terms in row"

[05:50] <bacek> std: { .foo.assuming('bar') }

[05:50] <p6eval> std 26019: OUTPUT«ok 00:02 35m␤»

[05:50] <frioux> eh

[05:50] <frioux> I'd just use regular parens then

[05:50] <frioux> what if I wanted to do this:

[05:50] <frioux> my @codes = @bars.map: { .foo($_) }

[05:50] <frioux> but not yet?

[05:50] <frioux> like...

[05:51] <frioux> to be evaluated later

[05:51] <frioux> my @codes = @bars.map: { { .foo($_) } } ?

[05:51] <bacek> if you have class Bar { method foo(Bar $b) { ... } };

[05:51] <bacek> rakudo: my @codes = <a b c>.map: { .uc }; say ~@codes;

[05:52] <p6eval> rakudo 7af829: OUTPUT«A B C␤»

[05:52] <bacek> there is block already

[05:52] <frioux> rakudo: <a b c>.map: { .uc }

[05:52] <p6eval> rakudo 7af829: RESULT«["A", "B", "C"]»

[05:53] <frioux> doesn't look like a block to me..

[05:53] <bacek> { .uc } is block

[05:53] <frioux> well yeah

[05:53] <frioux> but I am saying I want to do this:

[05:53] <bacek> Or you want create a lot of closures?

[05:53] <frioux> yeah

[05:53] <frioux> that

[05:53] <frioux> I tried map: { sub { .. } }

[05:53] <frioux> but it wasn't happy

[05:54] <bacek> rakudo: my @c=<a b c>.map { sub { .uc } }; say "hi"; say ~@c

[05:54] <p6eval> rakudo 7af829: OUTPUT«Statement not terminated properly at line 1, near "{ sub { .u"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[05:54] <bacek> rakudo: my @c=<a b c>.map { -> { .uc } }; say "hi"; say ~@c.map: { .() }

[05:54] <p6eval> rakudo 7af829: OUTPUT«Statement not terminated properly at line 1, near "{ -> { .uc"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[05:55] <bacek> rakudo: my @c=<a b c>.map: { -> { .uc } }; say "hi"; say ~@c.map: { .() }

[05:55] <p6eval> rakudo 7af829: OUTPUT«hi␤C C C␤»

[05:55] <frioux> hoho!

[05:55] <bacek> oh shi...

[05:55] <frioux> that's a weird bug

[05:56] <bacek> rakudo: my @c=<a b c>.map: { -> { .uc }.assuming($_) }; say "hi"; say ~@c.map: { .() }

[05:56] <p6eval> rakudo 7af829: OUTPUT«hi␤C C C␤»

[05:56] * bacek summon masak

[05:56] <bacek> afk # f1 Australian GP

[06:00] <frioux> bacek: also there is something wrong it seems with that first thing

[06:01] <frioux> it gets the invocant wrong

[06:01] <frioux> and things $_ is the invocant

[06:01] <frioux> I want the invocant to be set at ~~ time

[06:01] <frioux> but hey, I got my workaround for the day :-)

[06:04] *** nihiliad left
[06:15] *** frioux is now known as frioux_away

[06:15] *** orafu joined
[06:21] *** OuLouFu left
[06:34] *** justatheory joined
[06:52] *** lucs left
[06:52] *** lucs_ left
[06:53] *** lucs joined
[06:53] *** justatheory left
[06:53] *** kanru left
[07:04] *** Kisu joined
[07:26] *** kate21de joined
[07:26] *** ejs joined
[07:29] <literal> @tell masak your comments are requested -> http://tinyurl.com/c8j8vw

[07:29] <lambdabot> Consider it noted.

[07:30] *** ejs left
[07:33] <lucs> literal: Is it just me, or are the lines annoyingly wrapped in that proposal?

[07:34] <literal> yeah, the google groups thing apparently cuts them off at 70-something characters

[07:34] <lucs> :(  Painful to read

[07:34] <literal> what I pasted didn't exceed 80 chars per-line so I thought it was safe

[07:35] <literal> lucs: you can read it in a nice format by following the url I pointed to

[07:35] <lucs> Better :)

[07:38] <lucs> Nice project.

[07:40] *** ejs joined
[08:01] *** xinming_ joined
[08:08] *** ejs left
[08:18] *** xinming left
[08:23] *** Alias joined
[08:24] *** amoc joined
[08:33] *** orafu left
[08:36] *** orafu joined
[08:56] *** amoc left
[09:05] *** DemoFreak joined
[09:08] *** orafu left
[09:08] *** OuLouFu joined
[09:09] *** Alias left
[09:13] *** Alias joined
[09:16] *** grwi joined
[09:17] *** grwi left
[09:36] *** meppl joined
[09:37] *** Alias left
[09:37] *** Alias_ joined
[09:39] *** pmurias joined
[09:44] *** schmalbe joined
[09:58] *** amoc joined
[09:58] *** amoc left
[09:58] *** f00li5h left
[09:59] *** f00li5h joined
[10:14] *** finanalyst left
[10:26] *** orafu joined
[10:29] *** Alias_ left
[10:29] *** Alias joined
[10:31] *** sbp left
[10:32] *** sbp joined
[10:32] *** sbp left
[10:33] *** sbp joined
[10:41] *** OuLouFu left
[10:47] *** Alias_ joined
[10:47] *** Alias left
[10:52] *** mj41 joined
[10:58] *** Schnueff joined
[11:02] *** kane_ joined
[11:27] *** kane__ joined
[11:27] *** kane_ left
[11:50] *** pmurias left
[11:51] *** rob joined
[11:52] *** kane__ left
[11:52] *** Alias__ joined
[11:53] *** Alias_ left
[11:53] *** kane_ joined
[11:59] *** kane__ joined
[12:01] *** rob left
[12:01] *** kane__ left
[12:01] *** masak joined
[12:03] <masak> rakudo: say ?("5[aaaaa]" ~~ /(\d+) '[' a**$0 ']' /)

[12:03] <lambdabot> masak: You have 1 new message. '/msg lambdabot @messages' to read it.

[12:03] <masak> @massage

[12:03] <lambdabot> literal said 4h 33m 24s ago: your comments are requested -> http://tinyurl.com/c8j8vw

[12:03] <p6eval> rakudo 7af829: OUTPUT«perl6regex parse error: Error in closure quantifier at offset 34, found '$'␤current instr.: 'parrot;PGE;Perl6Regex;parse_error' pc 10179 (compilers/pge/PGE/Perl6Regex.pir:1219)␤»

[12:05] <masak> literal: excellent.

[12:05] *** kane_ left
[12:05] <masak> literal: I'm ready to discuss design ideas for proto, anytime.

[12:06] <masak> literal: typo: s/but I where the/but where the/

[12:07] <masak> literal: also count on me reviewing your commits once you start working on "psi". have you decided on an implementation language? :)

[12:08] <masak> @tell literal http://irclog.perlgeek.de/perl6/2009-03-29#i_1023806

[12:08] <lambdabot> Consider it noted.

[12:16] *** sri_kraih left
[12:21] *** sri_kraih joined
[12:28] *** bsb_ left
[12:30] *** Alias joined
[12:31] *** Alias__ left
[12:34] *** schmalbe left
[12:34] *** ludan joined
[12:49] *** Alias left
[12:49] *** Alias_ joined
[12:59] *** kane_ joined
[13:02] *** orafu is now known as help

[13:02] *** help is now known as orafu

[13:04] *** lambdabot left
[13:07] *** Alias joined
[13:07] <masak> pmichaud: ping

[13:07] *** lambdabot joined
[13:10] *** Alias_ left
[13:10] *** Alias left
[13:10] *** wknight8111 joined
[13:12] *** Alias joined
[13:12] *** mberends joined
[13:14] *** Alias left
[13:14] *** Alias_ joined
[13:18] <mberends> masak: good $summer-time!

[13:18] <masak> :)

[13:18] <masak> and to you, sir.

[13:18] <masak> shortest weekend of the year.

[13:19] <masak> mberends: I've reviewed your changes in a local branch; will push them now.

[13:19] <masak> (re proto)

[13:20] <masak> there, pushed.

[13:20] <mberends> great. just backlogged over literal's plans for psi: looks good too.

[13:20] <masak> aye.

[13:20] <masak> even if Perl 6 Christmas doesn't come this year, we'll be ready next year.

[13:21] <masak> or at least, I should say, relatively ready.

[13:23] <mberends> we'll be ready. I see you've translated my Fortran into Perl 6 ;)

[13:23] <masak> :) I just like not repeating myself.

[13:23] <masak> most of the commits were actually on string contents.

[13:24] <mberends> laziness. a very good virtue. yes, I see that.

[13:24] <masak> two further questions: can we move Configure.pm into a lib/ ? can we rename s/hello.bash/create-new-project/ ?

[13:25] <mberends> yes, and yes.

[13:25] <masak> great, I'll do that now.

[13:25] <masak> I think the create-new-project rocks...

[13:25] <masak> ...but as soon as I finished reading it, I wanted more. :)

[13:26] * mberends is in a good mood, he'll agree to almost anything today

[13:26] <masak> we should create a README stub for the developer.

[13:26] <masak> and help her pick a LICENSE.

[13:26] <masak> and stub an AUTHORS file.

[13:27] <mberends> anything you say, boss

[13:28] <masak> :P just drawing guidelines, but they're just pencilled in.

[13:28] <mberends> is the Artistic License compatible with BSD ( I know it's OK with GNU ) ?

[13:28] <masak> dunno.

[13:28] <masak> licenses confuse me to some degree.

[13:29] <masak> maybe we should provide the Death and Retribution (D&R) license as an alternative?

[13:29] <masak> it's almost always dual-licensed, though.

[13:29] <masak> s/Retribution/Repudiation/

[13:30] <masak> http://cpansearch.perl.org/src/AUDREYT/YAML-Syck-1.05/COPYING

[13:31] <mberends> now that's a license. to kill.

[13:31] <masak> :D

[13:32] <mberends> or to die for. (hey, that's [almost] Perl poetry)

[13:32] *** dKingston joined
[13:32] <masak> .die for lines("LICENSE");

[13:32] * masak really likes lines()

[13:33] * mberends noticed

[13:33] <masak> can't wait to start to use it in the next developer release!

[13:33] <masak> good thing they come once a month.

[13:33] <mberends> the BSD camp has some strong anti-GNU arguments.

[13:34] <masak> URL?

[13:34] *** kane__ joined
[13:34] <mberends> and Linus won't move from gnu 2 to gnu3, afaik

[13:34] <masak> so I heard.

[13:34] <masak> I understand, and even approve of, his arguments.

[13:34] * mberends scratches head

[13:38] *** Alias_ left
[13:38] <masak> ok, enough tinkering. I'll symbolically unlock proto again now.

[13:39] *** kane_ left
[13:39] <mberends> masak: http://www.freebsd.org/doc/en_US.ISO8859-1/articles/bsdl-gpl/article.html

[13:39] *** Alias joined
[13:40] <masak> mberends: looks like a good read. will get back to you about it in two weeks.

[13:40] <masak> today I plan to work some on the Lobster.

[13:41] <masak> been wanting to do that all week, but $WORK has been getting in the way. :/

[13:41] <mberends> cool, if lobster is good when cool.

[13:41] <masak> I should think so.

[13:42] * mberends packs stuff for a week in Groningen

[13:43] *** mberends left
[13:52] *** finanalyst joined
[13:52] *** pmurias joined
[14:28] *** ywpg joined
[14:33] <BinGOs> aaaaaaaaaaaaaaaaaaa/win 17

[14:33] <BinGOs> oops

[14:33] *** ywpg left
[14:33] *** nihiliad joined
[14:39] <masak> oh, and for anyone who's interested: my work with the Druid tests is going forward at a steady pace: http://github.com/masak/druid/blob/master/t/01-game-rules.t

[14:39] <masak> the Test::Ix framework has drawbacks, but I like it for this small purpose.

[14:41] *** cognominal_ joined
[14:45] *** simcop2387 left
[14:47] *** simcop2387 joined
[14:47] *** pmurias left
[14:52] *** cognominal left
[14:54] *** fridim_ joined
[14:57] *** wknight8111 left
[15:02] <masak> Ovid writes a good article about roles. http://use.perl.org/~Ovid/journal/38649

[15:03] *** kst left
[15:03] *** kst joined
[15:03] <masak> I hadn't quite realized how much I appreciate roles; but I realize I use them regularly, and that there is surprisingly little pain involved.

[15:09] *** Psyche^ joined
[15:25] *** ihrd joined
[15:26] <ihrd> hi

[15:26] *** unitxt joined
[15:26] *** Patterner left
[15:26] *** Psyche^ is now known as Patterner

[15:26] <ihrd> rakudo:  my @a = 1,3,2; say @a.=sort: {1};

[15:26] <p6eval> rakudo 7af829: OUTPUT«Statement not terminated properly at line 1, near ": {1};"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[15:27] <ihrd>  my @a = 1,3,2; say @a.sort: {1};

[15:27] <ihrd> rakudo:  my @a = 1,3,2; say @a.sort: {1};

[15:27] <p6eval> rakudo 7af829: OUTPUT«132␤»

[15:27] <ihrd> rakudo:  my @a = 1,3,2; say @a.=sort;

[15:27] <masak> ihrd: that's correct, if you ask me.

[15:27] <p6eval> rakudo 7af829: OUTPUT«123␤»

[15:28] <ihrd> masak, why?

[15:28] <masak> ihrd: the {1} returns 1 all the time, meaning 'the right operand is larger'.

[15:29] *** f00li5h left
[15:29] <ihrd> masak, see first example

[15:29] <ihrd> wrong topic

[15:30] *** f00li5h joined
[15:30] <ihrd> why .=sort: { ... } do not work?

[15:30] <masak> I do not know.

[15:30] <ihrd> this is my question :)

[15:30] <masak> ihrd: submit a rakudobug :)

[15:31] <ihrd> I will, if nobody answer :)

[15:31] <masak> rakudo: my @a = 1,2,3; @a .= sort: { $^a cmp $^b }

[15:31] <p6eval> rakudo 7af829: OUTPUT«Statement not terminated properly at line 1, near ": { $^a cm"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[15:32] <masak> that is indeed strange.

[15:32] <ihrd> std: my @a = 1,2,3; @a.=sort: {1}

[15:32] <p6eval> std 26019: OUTPUT«ok 00:02 37m␤»

[15:33] <ihrd> bug

[15:33] <masak> yes. STD and Rakudo disagree. I say submit now.

[15:34] <ihrd> uhu

[15:36] <ihrd> mistake in your example, spaces around .=

[15:36] <masak> ihrd: are you saying that's not allowed?

[15:36] <ihrd> I think so

[15:37] <ihrd> std: akudo: my @a = 1,2,3; @a .= sort: { $^a cmp $^b }

[15:37] <p6eval> std 26019: OUTPUT«ok 00:02 37m␤»

[15:37] <masak> :)

[15:37] <ihrd> std: my @a = 1,2,3; @a .= sort: { $^a cmp $^b }

[15:37] <p6eval> std 26019: OUTPUT«ok 00:02 37m␤»

[15:37] * masak likes spaces around operators

[15:37] <ihrd> hm

[15:37] <ihrd> sorry

[15:38] <masak> no problem at all.

[15:41] *** msmatsko joined
[15:41] * masak makes a sound like a lobster

[15:50] *** unitxt left
[15:57] *** fridim_ left
[16:04] *** unitxt joined
[16:06] <masak> std: my $a = ~~ 5;

[16:06] <p6eval> std 26019: OUTPUT«ok 00:02 37m␤»

[16:11] *** kate21de left
[16:11] *** kate21de1 joined
[16:12] *** Kisu left
[16:13] *** unitxt left
[16:14] *** justatheory joined
[16:25] *** Sepheebear left
[16:30] *** kane__ left
[16:30] *** kst left
[16:30] *** Kisu joined
[16:30] *** kst joined
[16:31] *** kane_ joined
[16:32] *** unitxt joined
[16:33] <masak> rakudo: class A { has &!a = { say "OH HAI" }; method foo { &!a() } }; A.new.foo

[16:33] <p6eval> rakudo 7af829: OUTPUT«No such attribute '!a'␤current instr.: 'parrot;A;foo' pc 267 (EVAL_20:112)␤»

[16:33] * masak submits rakudobug

[16:34] *** M_o_C joined
[16:39] *** Schnueff left
[16:39] *** orafu left
[16:40] *** OuLouFu joined
[16:40] *** masak left
[16:48] *** ihrd left
[16:54] *** f00li5h left
[16:54] *** f00li5h joined
[17:06] *** kane_ left
[17:09] *** Patterner left
[17:11] *** Alias_ joined
[17:11] <literal> @tell masak Implementation language? I thought Perl 6 was assumed :)

[17:11] <lambdabot> Consider it noted.

[17:13] <moritz_> re

[17:14] *** Tene_ left
[17:14] *** Alias__ joined
[17:15] *** Alias_ left
[17:15] *** Psyche^ joined
[17:15] *** Psyche^ is now known as Patterner

[17:16] *** Tene joined
[17:20] <pugs_svn> r26020 | moritz++ | [t/spec]

[17:20] <pugs_svn> r26020 | moritz++ |  * caps.t: update to current spec; tests for .chunks

[17:20] <pugs_svn> r26020 | moritz++ |  * S05-mass/rx.t: change infix:<also> to && in some places

[17:20] <pugs_svn> r26020 | moritz++ |  * a complete pass through the rakudo skip's, improving tests

[17:20] <pugs_svn> r26020 | moritz++ |    and finer graded fudging

[17:20] <pugs_svn> r26020 | moritz++ | Overall +221 passing tests

[17:22] <dalek> rakudo: 370dd76 | (Moritz Lenz)++ | docs/ChangeLog:

[17:22] <dalek> rakudo: [docs] update to ChangeLog

[17:22] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/370dd7605c4eb7cdb70d48b023a9d7251f2f588b

[17:22] <dalek> rakudo: dde9758 | (Moritz Lenz)++ | docs/guide_to_setting.pod:

[17:22] <dalek> rakudo: [docs] more guidelines to adding methods to the setting

[17:22] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/dde97580f9640e273c7a34fd46dc9684e542af63

[17:22] <dalek> rakudo: ab367f6 | (Moritz Lenz)++ | README:

[17:22] <dalek> rakudo: [README] information on how to obtain git SHA-1

[17:22] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/ab367f68d9fc4f50f3f7d1420aa3e510682e58e7

[17:22] <dalek> rakudo: 0d52048 | (Moritz Lenz)++ | README:

[17:22] <dalek> rakudo: [README] spell "Perl 6" with non-breaking space

[17:22] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/0d520488f0c227cf4b9762dd530c04e93d1de546

[17:22] <dalek> rakudo: bc32a56 | (Moritz Lenz)++ | src/setting/Match.pm:

[17:22] <dalek> rakudo: update Match.caps and Match.chunks to meet current spec

[17:22] <dalek> rakudo: Normal operation blocks on %($/).pairs, which stringifies the Match objects

[17:22] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/bc32a565f44d4815b76da19b3d56084a523afd0b

[17:26] *** Alias left
[17:27] *** f00li5h left
[17:27] *** f00li5h joined
[17:40] *** Alias__ left
[18:09] *** amoc joined
[18:12] *** viklund`` left
[18:12] *** orafu joined
[18:14] *** f00li5h left
[18:17] *** OuLouFu left
[18:18] *** frioux_away is now known as frioux

[18:19] <frioux> does anyone here know how I can make a closure (like this: { .foo } ) with the first arg curried, but not the invocant?

[18:21] *** f00li5h joined
[18:22] *** FurnaceBoy joined
[18:24] <moritz_> frioux: do you want the closure to be a method?

[18:24] <frioux> I guess?

[18:25] <frioux> I am not really sure I understand

[18:25] <moritz_> it could also be a sub

[18:25] <frioux> well, I think this is ultimately a work around

[18:25] <frioux> but I'll explain

[18:25] <frioux> if you do $foo ~~ .bar it works

[18:26] <frioux> but if you use this: $foo ~~ .bar & .baz it fails

[18:26] *** f00li5h left
[18:26] <frioux> because rakudo is too eager

[18:26] *** f00li5h joined
[18:26] <frioux> so you have to do $f ~~ { .bar } & { .baz }

[18:26] <moritz_> rakudo: my $s = 0; my $c = sub($i, $l) { $i.substr($c, $s, $l) }; $s = 1; $c('abcdefg', 2);

[18:26] <p6eval> rakudo 370dd7: OUTPUT«get_integer() not implemented in class 'Sub'␤current instr.: 'parrot;Any;substr' pc 12519 (src/builtins/any-str.pir:295)␤»

[18:27] <moritz_> rakudo: my $s = 0; my $c = sub($i, $l) { $i.substr($i, $s, $l) }; $s = 1; $c('abcdefg', 2);

[18:27] <p6eval> rakudo 370dd7: OUTPUT«too many arguments passed (5) - at most 3 params expected␤current instr.: 'parrot;Any;substr' pc 12519 (src/builtins/any-str.pir:295)␤»

[18:27] <moritz_> I don't understand that output

[18:28] <moritz_> frioux: I don't know if that's a rakudobug that you've found, or if it's a limitiation by the spec

[18:28] <frioux> bacek said it was a bug I think

[18:28] <frioux> and that using { } was a workaround

[18:28] <frioux> 00:44 < bacek> ok. This is bug.

[18:28] <frioux> 00:45 < bacek> And this is workaround :)

[18:40] <szabgab> rakudo: sub f($x){}; sub f($y, $z) {}

[18:40] <p6eval> rakudo 370dd7: RESULT«{ ... }»

[18:41] <szabgab> shouldn't rakuod complain about function redefinition ?

[18:41] <szabgab> rakudo: sub f($x){}; sub f($y, $z) {}; f(2, 3)

[18:41] <moritz_> it should

[18:41] <p6eval> rakudo 370dd7: OUTPUT«too many arguments passed (2) - 1 params expected␤current instr.: 'f' pc 89 (EVAL_16:52)␤»

[18:41] <moritz_> an iirc we have tests for that...

[18:41] <moritz_> but a ticket couldn't hurt ;-)

[18:41] <szabgab> oh you are worried I start to write a test :-)

[18:42] <moritz_> (although I wouldn't complain about making subs multis by default, and require an 'only sub f' to enforce just that)

[18:42] <moritz_> no

[18:42] <moritz_> I just wanted to say that it's not completely unknown to me

[18:42] <szabgab> sure :-)

[18:55] <frioux> rakudo: say #[ foo ] "test";

[18:55] <p6eval> rakudo 370dd7: OUTPUT«say requires an argument at line 1, near " #[ foo ] "␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[18:55] <moritz_> NYI

[18:55] <frioux> but that's how it should work though, right/

[18:55] <moritz_> right.

[18:56] <frioux> k

[19:02] <moritz_> added that to the status page as known todo

[19:03] *** frioux left
[19:03] *** orafu left
[19:03] *** OuLouFu joined
[19:04] *** frioux joined
[19:09] *** jhorwitz left
[19:13] <pugs_svn> r26021 | moritz++ | [t/spec] test for RT #62730

[19:15] *** icwiener joined
[19:19] <pugs_svn> r26022 | moritz++ | [t/spec] test for RT #62728

[19:22] <moritz_> rakudo: my Int $x = +'2'

[19:22] <p6eval> rakudo 370dd7: OUTPUT«Type mismatch in assignment.␤current instr.: 'die' pc 15621 (src/builtins/control.pir:204)␤»

[19:24] <moritz_> rakudo: undef === undef

[19:24] <p6eval> rakudo 370dd7: RESULT«Bool::False»

[19:29] <moritz_> don't know if that's correct.... undef doesn't seem to be immutable, so it's not a value type, so two instances of undef might not be === after all

[19:29] <moritz_> rakudo: say ++undef

[19:29] <p6eval> rakudo 370dd7: OUTPUT«1␤»

[19:34] <moritz_> std: class a { has $.attrib is build { ... } };

[19:34] <p6eval> std 26022: OUTPUT«##### PARSE FAILED #####␤Malformed class␤Unable to parse class definition␤Unexpected block in infix position (two terms in a row, or previous statement missing semicolon?) at /tmp/7DeXHpjlG9 line 1:␤------> [32mclass a { has $.attrib is build [31m{ ... } };[0m␤    expecting

[19:34] <p6eval> ..an...

[19:37] <pugs_svn> r26023 | moritz++ | [t/spec] remove tests that used 'is build' or 'will build' from A12

[19:38] <moritz_> rakudo: sub foo($.bar) { ... }; say "alive";

[19:38] <p6eval> rakudo 370dd7: OUTPUT«alive␤»

[19:40] <moritz_> rakudo: ~Bool::True

[19:40] <p6eval> rakudo 370dd7: RESULT«"1"»

[19:40] <moritz_> rakudo: ~Bool::True.name

[19:40] <p6eval> rakudo 370dd7: OUTPUT«Method 'name' not found for invocant of class 'Bool'␤current instr.: 'parrot;P6metaclass;dispatch' pc 637 (src/classes/ClassHOW.pir:161)␤»

[19:48] *** f00li5h left
[19:50] <moritz_> RT really needs a button that expires a ticket if there's no activity in a certain time frame

[19:51] <moritz_> rakudo: token text { \w+ }; say "ab" ~~ /<text>/;

[19:51] <p6eval> rakudo 370dd7: OUTPUT«get_attr_str() not implemented in class 'String'␤current instr.: 'parrot;PGE;Grammar;' pc 382 (EVAL_18:164)␤»

[19:52] *** kst left
[19:53] *** kst joined
[19:53] <moritz_> rakudo: sub foo(:$w=4){say $w};foo('w'=>3);foo(w=>3);

[19:53] <p6eval> rakudo 370dd7: OUTPUT«w  3␤3␤»

[20:02] <moritz_> for all German readers: in the current I'x magazine (April 2009, but already available) there are two Perl 6 articles

[20:03] *** drbean left
[20:03] *** estrabd_ left
[20:03] *** Caelum left
[20:03] *** estrabd joined
[20:03] *** drbean joined
[20:06] *** unitxt left
[20:19] *** Caelum joined
[20:32] *** nacho joined
[20:34] *** Sepheebear joined
[20:36] *** wknight8111 joined
[20:48] *** FurnaceBoy left
[20:50] *** finanalyst left
[20:56] *** Outh9X joined
[20:56] *** kst left
[20:57] *** kst joined
[20:57] *** sri_kraih_ joined
[21:06] *** yahooooo6 joined
[21:06] *** rgs left
[21:06] *** jan_ left
[21:06] *** bacek left
[21:06] *** yahooooo left
[21:06] *** idemal left
[21:06] *** kcwu left
[21:07] *** rgs joined
[21:07] *** jan_ joined
[21:07] *** bacek joined
[21:07] *** kcwu joined
[21:07] *** idemal joined
[21:11] *** sri_kraih left
[21:20] *** rgs left
[21:39] *** M_o_C left
[21:39] *** jan_ left
[21:41] *** jan joined
[21:41] *** pmurias joined
[21:41] *** jan is now known as Guest50274

[21:56] *** idemal left
[21:59] *** idemal joined
[21:59] *** pmurias left
[22:11] *** kst left
[22:11] *** kst joined
[22:20] * skids wonders what's up with commitbit.pugscode.org

[22:21] <moritz_> it needs slapping...

[22:22] <moritz_> ... and my password safe hangs while trying to open the file. great

[22:25] *** cspencer joined
[22:28] <moritz_> could somebody with root on feather1 please send a SIGHUP to the jifty process?

[22:28] <moritz_> (or start if there's none running)

[22:30] <mikehh> rakudo (370dd76) builds on parrot r37815 - make test PASS, make spectest FAIL - 1/339 test programs. 0/10054 subtests failed.

[22:30] <cspencer> S32 indicates that the log of 0 should be an error, whereas the spec test suite expects -Inf - should the test suite be updated to reflect this?

[22:31] <moritz_> mikehh: oh, which one failed?

[22:31] <moritz_> cspencer: -Inf looks fine to me

[22:31] <mikehh> t/spec/S29-conversions/ord_and_chr.rakudo - Parse errors: Bad plan.  You planned 444 tests but ran 300.

[22:31] <moritz_> OH NOEZ

[22:34] <mikehh> I ran make spectest earlier on rakudo (7af829f) and all was ok

[22:35] <moritz_> that's a failure that comes and goes

[22:35] <moritz_> I bet when you execute it three times, it passes at least once

[22:35] <moritz_> skids: http://commitbit.pugscode.org:6666/ now works

[22:35] <mikehh> let me try a make on it

[22:35] <moritz_> ah, and it alsow works without the explicit port

[22:38] *** bacek_ joined
[22:40] <mikehh> it starts off - 1..444 - goes through to 300 then exits with - Failed 144/444 subtests (less 96 skipped subtests: 204 okay)

[22:41] <moritz_> mikehh: could you please run the .rakudo file directly, without the harness?

[22:43] <diakopter> ok

[22:43] <diakopter> oh

[22:44] <mikehh> morritz_: it gets to ok 204 - chr() works for \3

[22:45] <mikehh> No applicable methods.

[22:45] <mikehh> current instr.: '_block308' pc 2745 (EVAL_20:835)

[22:45] <mikehh> called from Sub '_block14' pc 1711 (EVAL_20:508)

[22:46] <mikehh> called from Sub '!UNIT_START' pc 17383 (src/builtins/guts.pir:358)

[22:46] *** Alias joined
[22:46] <mikehh> called from Sub 'parrot;PCT;HLLCompiler;eval' pc 950 (src/PCT/HLLCompiler.pir:527)

[22:46] <moritz_> bah

[22:46] <mikehh> called from Sub 'parrot;PCT;HLLCompiler;evalfiles' pc 1275 (src/PCT/HLLCompiler.pir:688)

[22:47] <moritz_> I got some other occasional errors during 'make spectest', but they all went away when I ran the individual file

[22:47] <mikehh> called from Sub 'parrot;PCT;HLLCompiler;command_line' pc 1470 (src/PCT/HLLCompiler.pir:789)

[22:47] <moritz_> it's easy to blame the crappy GC in that case, but I don't know what's wrong with your rakudo

[22:47] <mikehh> called from Sub 'parrot;Perl6;Compiler;main' pc 21813 (perl6.pir:164)

[22:48] <mikehh> I am running Ubuntu Intrepid Amd86

[22:49] <cspencer> is MMD taking into account the type of the invocant when choosing the method to execute?

[22:49] <moritz_> cspencer: yes

[22:49] *** PacoLinux left
[22:50] <cspencer> hmmm...i'm attempting to implement the 'log' method for the Any class

[22:50] <cspencer> but i can't get the Complex log method to work

[22:50] <moritz_> rakudo: say log(1+2i)

[22:50] <p6eval> rakudo 370dd7: OUTPUT«0.804719+1.10715i␤»

[22:50] <cspencer> moritz: i was doing it in the setting

[22:51] <moritz_> cspencer: what's the problem? is the Complex method never called?

[22:52] <moritz_> test the method form first; I think there were some problems that exported method currently didn't declare the invocant type directly

[22:52] <cspencer> the method form with work if i put in an invocant type of Complex into Complex.pm

[22:52] *** Gruber joined
[22:52] <cspencer> without it, i get an Ambiguous candidates error

[22:53] <cspencer> however, the sub version (ie. log(2i)) still calls the Any version

[22:53] *** Grrrr left
[22:54] <moritz_> I guess you can't get it to work with 'is export' atm

[22:54] <moritz_> try to define a separate sub manually

[22:56] <cspencer> ah, ok, that works :)

[22:56] <mikehh> moritz_: the test passes on my previous build - make  t/spec/S29-conversions/ord_and_chr.t, but fails withe the same result

[22:57] <cspencer> if i submit a patch with the sub and a "TODO: remove this sub eventually" note, that'll be okay?

[22:57] <moritz_> cspencer: yes

[22:57] <mikehh> with ./perl6 t/spec/S29-conversions/ord_and_chr.t  

[22:57] <moritz_> mikehh: thank you

[22:58] <mikehh> that is at the first skip

[23:03] <mikehh> it skips 205 through 408 passes 409 through 422 and skips the last 2

[23:03] <mikehh> in my latest build it exits after 300

[23:05] <moritz_> sounds like a job for pmichaud :/

[23:06] <mikehh> the previous build was 6-7 hours ago (that passed) - let me try a rebuild

[23:09] *** ujwalic joined
[23:13] <mikehh> make t/spec/S29-conversions/ord_and_chr.t  - Failed 144/444 subtests (less 96 skipped subtests: 204 okay)

[23:15] *** yahooooo6 left
[23:16] *** yahooooo joined
[23:16] <mikehh> the earlier build was at 7af829f on parrot r37813 at Sun Mar 29 17:19:32 BST 2009

[23:19] <mikehh> this build (first time) was at 370dd76 on parroi r37815 at Sun Mar 29 21:35:26 BST 2009

[23:25] <moritz_> literal: nice gsoc proposal. I'd also be available as a mentor or backup mentor

[23:25] <literal> great

[23:25] <cspencer> rakudo:  my $pat = "b"; say "abcefg" ~~ /$pat/

[23:25] <p6eval> rakudo 370dd7: OUTPUT«Null PMC access in get_string()␤current instr.: 'parrot;PGE;Grammar;' pc 249 (EVAL_17:106)␤»

[23:25] <cspencer> do regex interpolate variables into the patterns yet?

[23:25] <moritz_> no :(

[23:25] <cspencer> doh

[23:26] <cspencer> is there a workaround?

[23:26] <moritz_> eval

[23:26] <cspencer> eval "rx/$pat/"?

[23:26] <cspencer> rakudo: my $pat = "b"; my $rx = eval("rx/$pat/");  say "abcefg" ~~ $rx

[23:26] <p6eval> rakudo 370dd7: OUTPUT«b␤»

[23:26] <cspencer> ah

[23:26] <moritz_> rakudo: my $x = '\w+'; my $rx = eval "regex { $x }"; say "foo" ~~ $rx

[23:27] <p6eval> rakudo 370dd7: OUTPUT«0␤»

[23:27] <moritz_> you were faster, and yours worked ;-)

[23:27] <moritz_> rakudo: my $x = '\w+'; my $rx = eval "rx { $x }"; say "foo" ~~ $rx

[23:27] *** kate21de1 left
[23:27] <p6eval> rakudo 370dd7: OUTPUT«0␤»

[23:27] <moritz_> rakudo: my $x = '\w+'; my $rx = eval "rx { $x }"; say $!;  say "foo" ~~ $rx

[23:27] <p6eval> rakudo 370dd7: OUTPUT«Syntax error at line 1, near "rx \\w+"␤␤0␤»

[23:27] <moritz_> rakudo: my $x = '\w+'; my $rx = eval "rx/ $x /"; say $!;  say "foo" ~~ $rx

[23:27] <p6eval> rakudo 370dd7: OUTPUT«Use of uninitialized value␤␤foo␤»

[23:28] *** kate21de joined
[23:28] <mikehh> moritz_: the only possibility I can see is in  src/setting/Match.pm       |   23 +++++++++++++++--------

[23:28] *** kate21de left
[23:29] <mikehh> all the other changes were in docs

[23:29] <moritz_> mikehh: that commit only modified .caps and .chunks, both of which aren't used in that test (nor anywhere else, for that matter)

[23:29] <moritz_> if that really caused trouble, it's somewhere much deeper

[23:32] <mikehh> as far as I can see changes in parrot r37814 and 27815 were pod or doc changes

[23:33] <mikehh> 37815

[23:35] *** ludan left
[23:36] * skids thanks moritz++ for smacking commitbit back into shape.

[23:36] <moritz_> skids: you're welcome

[23:36] * moritz_ goes to bed now

[23:37] <mikehh> moritz_: night

[23:42] *** sri_kraih_ left
[23:46] *** kst left
[23:47] *** kst joined
[23:47] <mikehh> if I run ./perl6 t/spec/S29-conversions/ord_and_chr.rakudo I get a Segmentation fault

[23:48] <mikehh> after ok 300 - # SKIP named args

