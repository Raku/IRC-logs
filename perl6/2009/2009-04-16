[00:00] *** payload joined
[00:09] *** hercynium joined
[00:16] *** bacek_ joined
[00:22] *** sitaram joined
[00:28] *** wknight8111 left
[00:28] *** DemoFreak left
[00:31] *** DemoFreak joined
[00:32] *** FurnaceBoy joined
[00:43] *** DemoFreak left
[00:48] *** sitaram left
[01:22] *** davidad joined
[01:33] *** kimtaro left
[01:35] *** mikehh joined
[01:39] *** davidad left
[01:43] *** davidad joined
[01:48] *** minazo joined
[01:50] *** kimtaro joined
[01:58] *** exodist left
[02:03] *** Limbic_Region left
[02:14] *** minazo left
[02:18] *** LylePerl left
[02:29] *** japhb left
[02:30] *** aindilis joined
[02:38] *** eternaleye joined
[02:49] *** Tene_ joined
[02:56] *** Tene left
[02:56] *** hercynium left
[03:03] *** atomicstack joined
[03:14] *** bacek left
[03:14] *** bacek joined
[03:33] *** sri_kraih left
[03:35] <s1n> anyone wanna be a guinee pig for my NLP project?

[03:37] *** cdarroch left
[03:42] *** amoc left
[03:45] *** brunov left
[03:47] *** orafu joined
[03:54] *** lambdabot joined
[04:00] <wayland76> Can you do neuro-linguistic programming through IRC? :)

[04:03] *** OuLouFu left
[04:08] <s1n> wayland76: not sure exactly what you're asking there, but i need an evaluator or two, which can be done via IRC

[04:08] <s1n> oh, NLP = natural language processing

[04:08] <wayland76> Ah, ok :)

[04:09] <wayland76> what does being a guinea pig involve in this case?

[04:09] <s1n> evaluating generated output

[04:10] <wayland76> evaluating based on what criteria?  Grammaticalness?  Artistic merit?  

[04:10] *** FurnaceBoy left
[04:10] <s1n> i have a set of weighted grading system i devised for this experiment

[04:19] *** ilogger2 joined
[04:20] *** ab5tract joined
[04:27] *** ab5tract left
[04:37] *** mncharity joined
[04:39] <mncharity> @tell masak Thanks for the commit!  Please let me know if you encounter other difficulties, or if I can be of any help.

[04:39] <lambdabot> Consider it noted.

[04:39] *** msmatsko joined
[04:39] *** mncharity left
[04:40] *** ab5tract joined
[05:03] *** ab5tract left
[05:04] *** minazo joined
[05:08] *** redicaps joined
[05:08] *** redicaps left
[05:14] *** iblechbot joined
[05:17] *** alc joined
[05:28] *** orafu joined
[05:56] *** ruoso joined
[05:59] *** meppl joined
[06:15] *** japhb joined
[06:51] <jnthn> oh morning

[06:53] *** iblechbot left
[06:55] <Matt-W> oh hai jnthn

[06:56] *** iblechbot joined
[07:10] <wayland76> Ooh, people :)

[07:14] *** ejs joined
[07:16] *** DemoFreak joined
[07:18] <Matt-W> yes people

[07:18] <Matt-W> well, me

[07:18] <Matt-W> and maybe jnthn's still hee

[07:18] <Matt-W> here*

[07:22] *** ejs left
[07:23] *** ejs joined
[07:33] *** iblechbot left
[07:34] *** iblechbot joined
[08:04] <wayland76> Well, you see, skids bets that dalek is going to be the biggest talker "tomorrow"

[08:09] *** iblechbot left
[08:30] *** kimtaro_ joined
[08:33] *** goksie joined
[08:33] <eiro> hello 

[08:33] <Matt-W> hello

[08:54] *** braceta joined
[09:02] *** kidd` joined
[09:02] *** mhsparks joined
[09:12] *** kane_ joined
[09:25] *** goksie_ joined
[09:28] *** goksie__ joined
[09:28] *** kimtaro joined
[09:30] *** goksie left
[09:34] *** justatheory joined
[09:35] *** ejs1 joined
[09:39] *** c9s_ joined
[09:45] *** kimtaro_ left
[09:45] *** ejs left
[09:47] *** ejs2 joined
[09:49] *** goksie___ joined
[09:50] *** stas__ joined
[09:50] *** araujo joined
[09:51] *** goksie__ left
[09:51] *** goksie___ left
[09:53] *** goksie_ left
[09:57] *** ejs1 left
[09:58] *** wayland76 joined
[10:03] *** kimtaro left
[10:14] <bacek> hi there

[10:14] <bacek> how is Oslo hackatron going?

[10:22] *** DemoFreak left
[10:29] *** ihrd joined
[10:29] <ihrd> hi there

[10:30] <ihrd> I use action for grammar tokens, and find out something strange

[10:31] <ihrd> If I use anything with regexp inside action method

[10:32] <ihrd> like .subst(/\w/, 'Y');

[10:32] <ihrd> make do not work

[10:33] <ihrd> I think this happens because of make use $/

[10:33] <ihrd> can I change this somehow? can I specify make to use other variable instead?

[10:36] <wayland76> Well, you could try saving $/ into another variable, and restoring it before the end of the action

[10:38] *** ruoso left
[10:47] <ihrd> wayland76: thank you, it is works

[10:47] <ihrd> btw it looks ugly

[10:49] <ihrd> I have no possibility to change C<make> behavior?

[10:50] <wayland76> I've had a better idea

[10:50] <wayland76> Use a temp scoped variable

[10:50] <wayland76> ie. at the start, write "temp $/"

[10:51] <wayland76> ...and it should fix itself when you exit the scope

[10:51] <wayland76> not sure if it's implemented, but it's in S02

[10:52] <ihrd> but I have make and another match in the same scope

[10:54] <wayland76> Well, I don't understand P6 grammars properly yet :)

[10:55] <Matt-W> I think there will be a better mechanism for that sort of thing later

[10:55] <Matt-W> but we don't have one yet

[10:55] <Matt-W> (that I'm aware of)

[10:55] *** xinming joined
[10:55] <Matt-W> seems to me that $/.ast should be assignable, that'd do the same thing as make does...

[10:56] <Matt-W> and then you could do it to other objects

[10:56] <Matt-W> or maybe $match.make($thing)

[10:56] <Matt-W> this is just groundless speculation though

[10:57] <ihrd> Matt-W: yes, I was expected something like this

[10:58] <ihrd> wayland76: temp var NYI

[10:58] <Matt-W> But there will be something better

[10:58] <Matt-W> If only because I'll be screaming my head off until it appears :)

[10:58] <wayland76> ok

[10:59] * wayland76 practises doing that too.  Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahgh!

[11:00] *** alc left
[11:04] *** brunov joined
[11:05] *** pmurias joined
[11:06] <pmurias> ihrd: $/ is contextual so if you the other match in a nested lexical scope it shouldn't cause problems

[11:07] <ihrd> pmurias: yes, and I realy have problems

[11:08] *** wayland76 left
[11:10] <ihrd> I have some check, like $exp ~~ /^ \s* $/ in action method, and now I should work ugly workaround to use make after

[11:12] *** iblechbot joined
[11:13] <pmurias> ihrd: if you use do { $exp ~~ /^ \s* $/ } the $/ shouldn't be contaminated

[11:14] <ihrd> but it is

[11:14] <ihrd> ah, sorry

[11:14] <ihrd> you are right, I will try

[11:16] <ihrd> pmurias: yes, do this in block is better workaround

[11:17] <ihrd> thank you

[11:28] *** pmurias left
[12:02] *** c9s_ is now known as c9s

[12:36] *** ihrd left
[12:38] *** payload joined
[12:39] *** ejs2 left
[12:43] *** ruoso joined
[12:53] *** amoc joined
[13:00] *** payload1 joined
[13:00] *** payload left
[13:11] *** iblechbot left
[13:15] *** sitaram joined
[13:26] *** wayland76 joined
[13:31] *** payload1 left
[13:36] *** goksie joined
[13:40] *** iblechbot joined
[13:52] *** kane_ left
[13:59] *** sri_kraih joined
[14:00] *** alester joined
[14:08] *** skids joined
[14:12] *** kimtaro joined
[14:14] *** minazo left
[14:33] *** nihiliad joined
[14:35] *** payload joined
[14:37] *** kane_ joined
[14:43] *** kane_ left
[14:50] *** LylePerl joined
[14:53] *** payload1 joined
[14:56] *** payload left
[15:00] *** exodist joined
[15:06] <eiro> http://pastebin.com/f4df057e4

[15:06] <buubot> eiro: The paste f4df057e4 has been copied to http://erxz.com/pb/17070

[15:07] <eiro> this gives me <this a>

[15:08] <eiro> i expected <a> ... any idea ? (i take my exemples from http://www.programmersheaven.com/2/Perl6-FAQ-Regex#regex which can be outdated) 

[15:10] <wayland76> rakudo: my %k = < this is a good >; for %k.keys {  /a/ or next;   .say };

[15:10] <p6eval> rakudo a4535c: OUTPUT«this␤a␤»

[15:11] <Tene> pmichaud: Okay, that's pretty cool... defining a sub named !sub_trait_lol makes "sub foo is lol { ... }" work properly

[15:11] <eiro> that's what i said, wayland76 :)

[15:11] <Tene> pmichaud: but I can't define tha sub without some hackery...

[15:13] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { /a/ or next; .say; say /a/; };

[15:13] <p6eval> rakudo a4535c: OUTPUT«this␤_block42␤a␤_block42␤»

[15:13] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { /a/ or next; .say; say((/a/)); };

[15:14] <p6eval> rakudo a4535c: OUTPUT«this␤_block42␤a␤_block42␤»

[15:14] <Tene> wayland76: mentioning a regex isn't the same as matching against it in Perl 6

[15:14] <Tene> that's just testing the truthiness of the regex /a/

[15:14] <[particle]-> yep

[15:14] <wayland76> I'm trying to print a boolean :)

[15:14] <[particle]-> you need to smartmatch

[15:14] <wayland76> oh

[15:14] <Tene> wayland76: you'r eprinting a regex, not a boolean.

[15:14] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { /a/ or next; .say; say( $_ ~~ /a/); };

[15:14] <p6eval> rakudo a4535c: OUTPUT«this␤␤a␤a␤»

[15:15] <eiro> ohhh ... 

[15:15] <Tene> rakudo: for <this a> { next unless $_ ~~ /a/; .say }

[15:15] <p6eval> rakudo a4535c: OUTPUT«a␤»

[15:15] <eiro> that's sad :(

[15:15] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { $_ ~~ /a/ or next; .say; say( $_ ~~ /a/); };

[15:15] <p6eval> rakudo a4535c: OUTPUT«a␤a␤»

[15:15] <Tene> you know, I wonder if a statement-level version of when would be a good idea

[15:15] <Tene> next when /a/

[15:16] <[particle]-> except you'll also want the reverse

[15:16] <Tene> when't

[15:16] <Tene> ;)

[15:16] <[particle]-> well, it's legal perl 6, if not proper english :)

[15:16] <Tene> when not /a/ should work...

[15:17] <Tene> Hm, it doesn't in rakudo...

[15:17] <Tene> ah, nm

[15:17] <Tene> I'm no longer convinced it should work.

[15:18] <eiro> ~~ could be unary ? 

[15:18] <eiro> next if ~~/a/

[15:18] <Tene> TimToady: what do you think about statement-modifier 'when'?

[15:21] <wayland76> @seen TimToady

[15:21] <lambdabot> TimToady is in #perl6. I don't know when TimToady last spoke.

[15:22] <literal> I recall that not making sence because 'when' leaves the block after it's executed

[15:22] <Tene> literal: and this would do the same.

[15:22] <literal> oh, ok

[15:22] <Tene> next when /a/; seems nicer than when /a/ { next }

[15:23] <literal> why not just "return unless /a/" ?

[15:23] <Tene> because 'next' will start up the next iteration of the loop

[15:23] <[particle]-> next unless $_ ~~ /a/;

[15:23] <Tene> oh, and just mentioning a regex in Perl 6 doesn't match it against $_

[15:24] <Tene> Sure, that works fine.  Just a little wordier than might be ideal.

[15:24] <wayland76> when /a/ { next; } # is good enough -- at least we don't have to refer to the context variable

[15:24] <Tene> since automatically matching against $_ has been removed, it might be nice to have a keyword for a common form of it.

[15:25] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { when !/a/ { next; } .say; };

[15:25] <p6eval> rakudo a4535c: OUTPUT«Statement not terminated properly at line 1, near ".say; };"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[15:25] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { when /a/ { next; } .say; };

[15:26] <p6eval> rakudo a4535c: OUTPUT«Statement not terminated properly at line 1, near ".say; };"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[15:26] <Tene> wayland76: };

[15:26] <Tene> semicolon after your closing }

[15:26] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { when /a/ { next; }; .say; };

[15:26] <p6eval> rakudo a4535c: OUTPUT«this␤»

[15:26] <wayland76> rakudo: my %k = < this is a good >; for %k.keys { when !/a/ { next; }; .say; };

[15:26] <p6eval> rakudo a4535c: OUTPUT«this␤a␤»

[15:27] <wayland76> Is there a way to do what I mean in my last example?

[15:27] <Tene> when /a/ { .say }; 

[15:30] <wayland76> Well, not quite what I want, but I guess I could live with smartmatch

[15:35] *** meppl left
[15:39] <Tene> std: sub 'quoted_subname' { say 'omg i am quoted' }

[15:39] <p6eval> std 26238: OUTPUT«##### PARSE FAILED #####␤Malformed routine at /tmp/M3L9Ez2s1W line 1:␤------> [32msub [31m'quoted_subname' { say 'omg i am quoted'[0m␤    expecting any of:␤      blockoid␤ name␤   routine_def␤        terminator␤     trait␤FAILED 00:02 34m␤»

[15:39] <Tene> hmm...

[15:40] <Tene> std: infix:<kindaquote> { say 'lol' }

[15:40] <p6eval> std 26238: OUTPUT«ok 00:02 35m␤»

[15:40] <Tene> std: sub infix:<kindaquote> { say 'lol' }

[15:40] <p6eval> std 26238: OUTPUT«ok 00:02 35m␤»

[15:40] <Tene> std: sub <kindaquote> { say 'lol' }

[15:40] <p6eval> std 26238: OUTPUT«##### PARSE FAILED #####␤Malformed routine at /tmp/pMlRl1gUFA line 1:␤------> [32msub [31m<kindaquote> { say 'lol' }[0m␤    expecting any of:␤    blockoid␤ name␤   routine_def␤        terminator␤     trait␤FAILED 00:02 34m␤»

[15:42] *** DemoFreak joined
[15:45] *** sitaram left
[15:52] *** Psyche^ joined
[15:59] *** braceta left
[16:04] *** Psyche^ is now known as Patterner

[16:07] <mikehh> rakudo (a4535c1) builds on parrot r38157 - make test PASS / make spectest PASS - t/spec/S09-typed-arrays/hashes.rakudo - TODO passed:   6-7

[16:08] <mikehh> Ubuntu Intrepid i386 - in fact ./perl6 t/spec/S09-typed-arrays/hashes.t ok all inc. 2 TODO and 1 SKIP

[16:09] <mikehh> have we any feedback from other builds on this?

[16:11] *** payload1 left
[16:13] *** pyrimidine joined
[16:15] *** kadaver joined
[16:15] <kadaver> what is audrey Tang's irc name?

[16:16] <[particle]-> audreyt

[16:16] <[particle]-> ...and she hasn't been around for a long time.

[16:17] <kadaver> is she still working on it?

[16:17] <[particle]-> it?

[16:17] <kadaver> Pugs I mean. and is Pugs the main Perl 6 implementation+

[16:17] <[particle]-> no, and no.

[16:17] <[particle]-> pugs hasn't been under active development for a few years.

[16:18] <[particle]-> rakudo is the perl 6 implementation with the most passing tests, and most active development

[16:18] <[particle]-> http://rakudo.org/how-to-get-rakudo

[16:19] <[particle]-> pmichaud: ping

[16:19] <wayland76> The other ones are smop and elf

[16:20] <wayland76> smop is also actively developed by multiple developers

[16:20] <[particle]-> is that all there are, these days?

[16:20] <wayland76> There may be another, but I forget

[16:20] <[particle]-> http://perl6-projects.org/

[16:20] <wayland76> I was going to write more, but try [particle]-'s link instead

[16:21] <pyrimidine> wasn't audreyt waiting on a newer version of ghc for some reason before taking up Pugs again?

[16:21] <[particle]-> yes. has ghc 6.10 come out?

[16:21] <pyrimidine> yes: http://haskell.org/ghc/

[16:22] <[particle]-> well then, maybe she's waiting on other things, or has no tuits.

[16:22] <pyrimidine> my thought as well

[16:22] <[particle]-> seems ghc 6.10 isn't a blocker anymore

[16:22] <wayland76> Probably waiting for enlightenment DR17 :)

[16:26] <kadaver> 6.10.2 now

[16:27] <kadaver> tuits?

[16:28] <[particle]-> http://www.perlfoundation.org/perl5/index.cgi?tuit

[16:30] *** yrlnry joined
[16:30] <pyrimidine> re: pugs, I worry more about how much has changed with the spec.  

[16:31] <pyrimidine> anyone know how much of the test suite it passes?

[16:31] <pyrimidine> (at one point I thought it was ~16000 or so)

[16:32] <[particle]-> i haven't built pugs in a very long time

[16:32] <pyrimidine> but that's before moritz's overhaul

[16:32] <pyrimidine> yes, same here

[16:32] <[particle]-> maybe someone on feather could run pugs against the spec tests

[16:32] <[particle]-> i bet there are a ton of parse errors now

[16:34] <pyrimidine> Agreed.  And, seeing as rakudo has passed 10000 it appears to be driving the spec now.

[16:34] <pyrimidine> (well. has been for a while actually)

[16:35] <pyrimidine> but maybe I'm wrong?

[16:35] <kadaver> is Larry Wall not working on Perl 6?

[16:36] <pyrimidine> I would say he is

[16:36] <pyrimidine> http://irclog.perlgeek.de/search.pl?channel=perl6&nick=TimToady&q=

[16:37] <pyrimidine> (note the nick)

[16:39] <[particle]-> larry is hard at work on perl 6

[16:43] <ruoso> I didn't know the irclog supported nick filter...

[16:45] <kadaver> well audreyt is getting really beautiful these days

[16:51] *** kadaver left
[16:51] *** yrlnry left
[16:52] <[particle]-> and tomorrow is audrey's birthday

[17:06] <wayland76> I wonder if geeks are more likely to look better as they get older than other people are

[17:06] <wayland76> I know I look better at 30-something than I did at, say 23

[17:07] *** mhsparks left
[17:07] *** payload joined
[17:11] <skids> Maybe it's the anti-oxidant effect of caffeine? :-)

[17:17] *** stas__ left
[17:24] *** FurnaceBoy joined
[17:27] <wayland76> Well, I don't do tea or coffee either

[17:29] <wayland76> For me, it's because I took the time to study appearance like a geek would.  Research historical styles, learn the difference between fashion and style, and develop a still-unique style that actually looks alright

[17:30] <wayland76> I met a friend that I rarely see, and he said I now look like a jazz musician

[17:31] *** payload left
[17:31] *** payload1 joined
[17:32] <wayland76> I'm wondering if other geeks do something similar sometime between the ages of 25 and 35

[17:33] <PerlJam> only the insane ones.

[17:34] <wayland76> Well, maybe :)

[17:34] <wayland76> I didn't mean that we all end up looking like jazz musicians, just that we realise that appearance can be studied from a geek point of view

[17:34] <PerlJam> The phenomenon  you're referring to is just that geeks are typically late (if ever) bloomers, in general.

[17:38] <wayland76> you mean, late or early, depending on topic and interest?

[17:39] <PerlJam> geeks are typically intellectually advanced as compared with their peers, but often physically/emotionally retarded by comparison.

[17:40] *** cdarroch joined
[17:45] <wayland76> Oh, of course :).  I know that, I was just thinking too ... specifically.  Maybe I shouldn't think out loud at 3am :)

[17:46] *** REPLeffect_ joined
[17:58] *** payload1 left
[18:03] *** pyrimidine left
[18:30] *** araujo left
[18:30] *** amoc left
[18:37] *** kst joined
[18:51] *** PhatEddy joined
[18:53] <PhatEddy> rakudo: say ("a" .. "z")[0]

[18:53] <p6eval> rakudo a4535c: OUTPUT«a␤»

[18:54] <PhatEddy> Anyone around to close RT 61848 if such is merited? (http://rt.perl.org/rt3/Public/Bug/Display.html?id=61848)

[18:57] *** stas__ joined
[19:00] <Tene> PhatEddy: I've resolved it.  Thanks.

[19:00] <PerlJam> Was there also a test for it?

[19:04] *** sri_kraih_ joined
[19:08] <PhatEddy> I found one at the end of t/spec/S02-builtin_data_types/range.t I think ...

[19:12] *** sri_kraih left
[19:19] *** PhatEddy left
[19:40] *** [particle]1 joined
[19:42] *** pyrimidine joined
[19:43] *** pyrimidine_ joined
[19:45] *** pyrimidine_ left
[19:47] *** FurnaceBoy left
[19:50] *** meppl joined
[19:50] *** frayoyo joined
[19:58] *** Khisanth joined
[19:58] *** pyrimidine left
[20:29] *** pmurias joined
[20:39] *** orafu left
[20:39] *** OuLouFu joined
[20:41] *** frayoyo left
[20:47] *** goksie left
[20:47] *** stas__ left
[20:58] *** cspencer joined
[21:23] *** ruoso left
[21:47] *** omega joined
[21:51] <omega> I'm trying to get november (and as a dep html-template) to run, but I get the following error trying to make html-template: http://pastie.org/449183

[21:51] <wayland76> Don't forget to also ask on #november-wiki

[21:51] <omega> ahh

[21:51] <wayland76> (although most of those people hang out here too)

[21:52] *** amoc joined
[21:52] <omega> and I guess they will send me to #text-escape ? :p

[21:52] <wayland76> ...Or to buy a left-handed screwdriver :)

[21:53] <omega> something like that :p

[21:55] <omega> ohh well, I guess I can ask at the talk at npw tomorrow :p

[21:55] <omega> just wanted to read up and look at it

[21:55] <cspencer> perl6: my $s = "abcde"; my $p = "XxXxX"; say $s.samecase($p)

[21:56] <p6eval> pugs: OUTPUT«*** No such method in class Str: "&samecase"␤    at /tmp/Juz6UkqIpn line 1, column 39 - line 2, column 1␤»

[21:56] <p6eval> ..rakudo a4535c: OUTPUT«Method 'samecase' not found for invocant of class 'Str'␤current instr.: 'parrot;P6metaclass;dispatch' pc 644 (src/classes/ClassHOW.pir:163)␤»

[21:56] <p6eval> ..elf 26238: OUTPUT«Can't locate object method "samecase" via package "abcde" (perhaps you forgot to load "abcde"?) at (eval 125) line 5.␤ at ./elf_h line 5881␤»

[21:56] <wayland76> best thing to do.  The IRC channels are relatively dead with NPW on

[21:56] <cspencer> perl6: my $s = "abcde"; my $p = "XxXxX"; say samecase($s, $p)

[21:56] <p6eval> rakudo a4535c: OUTPUT«Could not find non-existent sub samecase␤current instr.: '_block14' pc 101 (EVAL_17:52)␤»

[21:56] <p6eval> ..pugs: OUTPUT«*** No such subroutine: "&samecase"␤    at /tmp/uOPPIU6i6l line 1, column 39 - line 2, column 1␤»

[21:56] <p6eval> ..elf 26238: OUTPUT«Undefined subroutine &GLOBAL::samecase called at (eval 125) line 5.␤ at ./elf_h line 5881␤»

[21:57] *** wknight8111 joined
[21:59] *** alester left
[21:59] <jnthn> I think there wasn't wifi at the NPW.

[21:59] <jnthn> Can't say I've missed it though.

[22:03] <omega> there was some sometimes

[22:03] *** pmurias left
[22:04] <jnthn> ah

[22:04] <jnthn> I didn't notice it the times I had my laptop open and didn't look much the other times...

[22:12] *** nihiliad left
[22:20] *** payload joined
[22:37] *** cdarroch left
[22:41] *** msmatsko left
[22:47] *** iblechbot left
[23:06] *** ZuLuuuuuu joined
[23:09] *** Limbic_Region joined
[23:13] *** atomicstack joined
[23:23] *** DemoFreak left
[23:24] *** dalek joined
[23:25] *** FurnaceBoy joined
[23:27] *** sri_kraih_ left
[23:31] *** jferrero joined
[23:37] *** awwaiid joined
[23:41] *** sri_kraih joined
[23:48] *** justatheory left
[23:56] *** exodist left
[23:57] *** justatheory joined
[23:59] *** brunov left
