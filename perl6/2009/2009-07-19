[00:07] *** beggars left
[00:08] *** DemoFreak left
[00:15] *** justatheory joined
[00:18] *** sri_kraih_ left
[00:20] *** justatheory_ left
[00:28] *** xinming_ joined
[00:42] *** xinming left
[00:43] *** justatheory_ joined
[00:45] *** justatheory left
[00:46] *** Limbic_Region joined
[00:47] *** Whiteknight joined
[00:51] *** tann left
[01:08] *** kane_ joined
[01:09] *** araujo joined
[01:11] *** orafu left
[01:11] *** orafu joined
[01:20] *** Tene left
[01:24] *** molaf_x joined
[01:26] *** xomas_ joined
[01:41] *** molaf left
[01:57] *** Tene joined
[01:59] *** dLux left
[02:12] *** dukeleto joined
[02:12] *** xomas_ left
[02:19] *** xomas_ joined
[02:27] *** shachaf is now known as caxaf

[02:30] *** molaf_x left
[02:30] *** synth left
[02:35] *** dukeleto left
[02:47] *** cbk joined
[02:55] *** Whiteknight left
[03:00] *** |MoC| left
[03:12] *** xinming joined
[03:24] *** xinming_ left
[03:29] *** alester joined
[03:35] *** justatheory joined
[03:36] *** missingthepoint joined
[03:36] *** justatheory__ joined
[03:41] *** explorer left
[03:47] *** jhuni joined
[03:48] <missingthepoint> newbie question: can anyone tell me what's going wrong here:

[03:48] <missingthepoint> grammer foo { token bar { \d+ } }

[03:49] <missingthepoint> s/grammer/grammar/

[03:49] <missingthepoint> then:

[03:49] <missingthepoint> foo::bar.parse("5")

[03:51] <missingthepoint> -> too few arguments passed (0) - 2 params expected

[03:52] <missingthepoint> rakudo: grammar foo { token bar { \d+ } }; say foo::bar.parse("5");

[03:52] <p6eval> rakudo faf91f: OUTPUT«too few arguments passed (0) - 2 params expected␤in regex foo::bar (/tmp/uN3G6WAttI:2)␤called from Main (/tmp/uN3G6WAttI:2)␤»

[03:52] *** [Coke] left
[03:52] *** Chillance_ left
[03:53] *** justatheory left
[03:54] <missingthepoint> just NYI?

[03:57] *** justatheory_ left
[03:58] *** justatheory joined
[03:58] *** justatheory__ left
[04:00] *** justatheory_ joined
[04:00] *** justatheory left
[04:01] *** justatheory joined
[04:02] <missingthepoint> if this is documented, by all means tell me to RTFM, but at least point me to TFM

[04:02] <missingthepoint> :)

[04:03] *** justatheory__ joined
[04:06] *** justatheory___ joined
[04:06] <TimToady> .parse is a method on grammar, not on a method, actually

[04:07] <TimToady> and the grammar wants a TOP rule

[04:09] *** alester left
[04:10] <missingthepoint> i understand what you just said but have no idea how to convert that to syntax :)

[04:13] <missingthepoint> thanks :)

[04:13] <missingthepoint> now i have the next thing to figure out :)

[04:14] *** Limbic_Region left
[04:16] *** justatheory__ left
[04:18] *** justatheory_ left
[04:19] <missingthepoint> rakudo: grammar foo { token TOP { ^ <bar> $ }; token bar { \w+ } }; say foo::TOP.parse("a")

[04:19] <p6eval> rakudo faf91f: OUTPUT«too few arguments passed (0) - 2 params expected␤in regex foo::TOP (/tmp/mLoiyjn0lx:2)␤called from Main (/tmp/mLoiyjn0lx:2)␤»

[04:19] *** justatheory left
[04:20] <TimToady> foo.parse

[04:20] <missingthepoint> rakudo: grammar foo { token TOP { ^ <bar> $ }; token bar { \w+ } }; say foo.parse("a")

[04:20] <p6eval> rakudo faf91f: OUTPUT«a␤»

[04:21] *** justatheory___ left
[04:22] *** justatheory joined
[04:22] <missingthepoint> thanks :)

[04:23] <missingthepoint> rakudo: grammar foo { token TOP { ^ <bar> $ }; token bar { \w+ } }; say foo::bar.parse("a")

[04:23] <p6eval> rakudo faf91f: OUTPUT«too few arguments passed (0) - 2 params expected␤in regex foo::bar (/tmp/HVvpt0k9uC:2)␤called from Main (/tmp/HVvpt0k9uC:2)␤»

[04:34] *** azawawi joined
[04:35] <azawawi> std: .

[04:35] <p6eval> std 27606:  ( no output )

[04:44] *** Jedai left
[04:45] *** FurnaceBoy left
[04:45] *** azawawi left
[04:46] <missingthepoint> i won't pollute the channel further - is it possible to call .parse on a subrule?

[04:46] <s1n> missingthepoint: you can directly message p6eval if you don't want to pollute the chan

[04:47] <missingthepoint> s1n: thanks, lateral thinking's not my forte :)

[04:49] *** missingthepoint_ joined
[04:50] <missingthepoint_> s1n: at least before midnight :)

[04:50] <s1n> missingthepoint_ well, you at least have 10 minutes :)

[04:53] <missingthepoint_> s1n: closer to 8 hours for me :)

[04:53] <s1n> must be in europe

[04:53] <s1n> or hawaii

[04:53] <missingthepoint_> or australia

[04:53] <missingthepoint_> :)

[04:54] <jhuni> alaska

[04:55] <jhuni> Wait I am in Hawaii and it is 7:00

[04:56] *** dukeleto joined
[04:56] <s1n> i approximated

[04:56] *** dukeleto left
[04:56] *** dukeleto joined
[05:07] *** jhuni left
[05:13] *** missingthepoint_ left
[05:47] *** justatheory_ joined
[06:03] *** justatheory left
[06:04] *** tann joined
[06:06] *** justatheory_ left
[06:19] *** DemoFreak joined
[06:28] *** dukeleto left
[06:32] *** mberends joined
[06:35] *** mdxi joined
[06:46] <dalek> rakudo: 02dd257 | pmichaud++ | src/ (3 files):

[06:46] <dalek> rakudo: Parrot's Class.attributes method no longer returns attribute

[06:46] <dalek> rakudo: names in the same order in which they were declared (indeed,

[06:46] <dalek> rakudo: the order is somewhat unpredictable).  Since we need to initialize

[06:46] <dalek> rakudo: attributes in the order they were declared, add a @!attribute_list

[06:46] <dalek> rakudo: property and 'attriter' method to the Class PMC that allows Rakudo

[06:46] <dalek> rakudo: keep track of the order in which attributes are declared.

[06:46] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/02dd257e66f7f0beac9217c43af32d79e41ceec7

[07:00] *** szabgab_ joined
[07:09] <dalek> rakudo: e759b14 | pmichaud++ | build/PARROT_REVISION:

[07:09] <dalek> rakudo: Bump PARROT_REVISION to latest tested Parrot.

[07:09] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/e759b148b787cbb78931ec80d6a667bdbfd8da4b

[07:10] *** finanalyst joined
[07:10] *** szabgab left
[07:27] *** DemoFreak left
[07:36] *** kane_ left
[07:36] *** xinming_ joined
[07:40] *** iblechbot joined
[07:50] *** xinming left
[08:03] *** finanalyst left
[08:06] *** Jedai joined
[08:27] *** unitxt left
[08:27] *** azawawi joined
[08:27] <azawawi> hi

[08:27] <azawawi> moritz_: ping

[08:33] *** tann left
[08:43] *** azawawi left
[08:46] *** xinming_ left
[08:50] *** xinming joined
[09:09] *** molaf joined
[09:23] *** molaf left
[09:25] *** pancake joined
[09:30] *** pancake left
[09:33] *** mberends left
[09:38] *** molaf joined
[09:40] *** ihrd joined
[09:41] *** molaf left
[09:42] *** pmurias joined
[09:44] *** molaf joined
[09:44] <pugs_svn> r27607 | pmurias++ | [re-smop] assume some stuff in LexicalScope.lookup

[09:55] *** finanalyst joined
[10:21] <pugs_svn> r27608 | pmurias++ | [re-smop] added flunk,pass and isnt to Test

[10:38] *** thot joined
[10:38] *** Jedai left
[10:39] *** payload left
[10:40] *** fridim_ joined
[10:47] *** thot left
[10:52] *** sri_kraih joined
[11:02] *** iblechbot left
[11:13] *** M_o_C joined
[11:22] *** ihrd left
[11:27] *** ihrd joined
[11:27] *** ihrd left
[11:35] *** kborer_ joined
[11:38] *** meppl joined
[11:38] *** missingthepoint left
[11:41] *** kborer_ left
[11:52] *** kborer left
[12:07] *** jan_ left
[12:13] *** szabgab_ left
[12:13] *** szabgab_ joined
[12:25] *** Whiteknight joined
[12:34] *** iblechbot joined
[12:43] *** szabgab_ left
[12:52] *** Jedai joined
[12:56] *** synth joined
[13:02] <pugs_svn> r27609 | kyle++ | [t/spec] Test for RT #67234

[13:03] *** synth left
[13:09] *** szabgab joined
[13:11] *** synth joined
[13:15] *** Limbic_Region joined
[14:07] *** [1]Limbic_Region joined
[14:11] *** [1]Limbic_Region left
[14:20] *** gfldex left
[14:25] *** Limbic_Region left
[14:28] *** __felix__ joined
[14:47] *** rfordinal joined
[14:48] *** Chillance joined
[14:58] *** yhsuan joined
[15:04] *** justatheory joined
[15:14] *** justatheory left
[15:30] *** __felix__ left
[15:38] *** Whiteknight left
[15:42] *** skids joined
[15:45] *** FCO left
[15:52] *** szabgab left
[16:25] <finanalyst> std: proto sub infix:<add> { ... }; regex anint { <digit>+ $ };

[16:25] <p6eval> std 27609: OUTPUT«Deep recursion on subroutine "Cursor::_AUTOLEXpeek" at Cursor.pm line 366.␤Deep recursion on subroutine "Cursor::_AUTOLEXgen" at Cursor.pm line 353.␤Out of memory!␤»

[16:25] <finanalyst> std: regex anint { <digit>+ $ }; proto sub infix:<add> { ... }; 

[16:25] <p6eval> std 27609: OUTPUT«ok 00:02 36m␤»

[16:27] <finanalyst> TimToady: should the order of declaring a regex and a proto have any effect on whether they parse?

[16:27] <TimToady> infix:<add> is also a macro, so it have an influence, though it certainly shouldn't recurse like that

[16:28] <TimToady> *could have

[16:31] <finanalyst>  std: proto sub infix:<tyur483> { ... }; regex anint { <digit>+ $ };

[16:31] <p6eval> std 27609: OUTPUT«Deep recursion on subroutine "Cursor::_AUTOLEXpeek" at Cursor.pm line 366.␤Deep recursion on subroutine "Cursor::_AUTOLEXgen" at Cursor.pm line 353.␤Out of memory!␤»

[16:32] <finanalyst> TimToady: name of infix appears not to be relevant

[16:32] *** Jedai left
[16:32] <finanalyst> std: regex anint { <digit>+ $ }; proto sub infix:<tyur483> { ... }; 

[16:32] <p6eval> std 27609: OUTPUT«ok 00:02 36m␤»

[16:33] <finanalyst> std: sub infix:<tyur483> { ... }; regex anint { <digit>+ $ };

[16:33] <p6eval> std 27609: OUTPUT«Deep recursion on subroutine "Cursor::_AUTOLEXpeek" at Cursor.pm line 366.␤Deep recursion on subroutine "Cursor::_AUTOLEXgen" at Cursor.pm line 353.␤Out of memory!␤»

[16:34] <finanalyst> rakudo: proto sub infix:<tyur483> { ... }; regex anint { <digit>+ $ };

[16:34] <p6eval> rakudo e759b1:  ( no output )

[16:37] *** kane_ joined
[16:39] <finanalyst> TimToady: FYI rakudo parses [proto sub infix:<tyur483> { ... }; regex anint { <digit>+ $ };] but STD does not.  

[16:45] *** unitxt joined
[16:47] *** jan_ joined
[16:52] <finanalyst> std: regex anint { <digit>+ $ }; proto sub infix:<tyur483> { ... }; say ?('1234' ~~<anint>)

[16:52] <p6eval> std 27609: OUTPUT«ok 00:03 40m␤»

[16:53] *** molaf left
[16:54] *** Psyche^ joined
[17:02] *** fronty joined
[17:03] *** fronty left
[17:04] *** Front_slash joined
[17:06] *** jjore left
[17:09] <moritz_> re

[17:11] *** Patterner left
[17:11] *** Psyche^ is now known as Patterner

[17:13] <pugs_svn> r27610 | moritz++ | [t/spec] a basic test for eval(Buf) (added to spec in r2751)

[17:13] <pugs_svn> r27611 | moritz++ | [t/spec] adapt smart matching against Pairs to match r27503

[17:13] <pugs_svn> r27612 | moritz++ | [t/spec] Any ~~ Array tests

[17:14] <pugs_svn> r27613 | moritz++ | [t/spec] Array ~~ Hash smart match

[17:14] <pugs_svn> r27614 | moritz++ | [t/spec] nn/.../ quoting for regexes, inline :s modifier

[17:14] <pugs_svn> r27615 | moritz++ | [t/spec] tests for ss/// and s[]= forms

[17:14] <pugs_svn> r27616 | moritz++ | [t/spec] test substitution pseudo-assignment forms and captures

[17:14] <pugs_svn> r27616 | moritz++ | 

[17:14] <pugs_svn> r27616 | moritz++ | Also update t/spec/TODO

[17:14] <pugs_svn> r27617 | moritz++ | [t/spec] fudge tests for Rakudo that (eval_)dies_ok with Null PMC access

[17:14] <pugs_svn> r27618 | moritz++ | [t/spec] s[...] op= substitution forms

[17:14] <pugs_svn> r27619 | moritz++ | [t/spec] improvements foudn by STD.pm, TimToady++

[17:14] *** Whiteknight joined
[17:15] *** dalek left
[17:16] *** dalek joined
[17:21] *** szabgab joined
[17:23] <moritz_> @karma moritz

[17:23] <lambdabot> moritz has a karma of 814

[17:23] <moritz_> @karma moritz_

[17:23] <lambdabot> You have a karma of 91

[17:23] <moritz_> commits > IRC

[17:23] *** kborer joined
[17:24] *** kborer left
[17:25] *** kborer joined
[17:31] *** szabgab left
[17:38] *** kborer left
[17:44] *** iblechbot left
[17:49] *** NewOrder joined
[17:52] *** azawawi joined
[17:52] <azawawi> hi

[17:52] <azawawi> moritz_: ping

[17:54] <moritz_> azawawi: pong

[17:55] <azawawi> moritz_: any idea if i can I get more version info about rakudo (perl6 --version)? :)

[17:55] *** Jedai joined
[17:56] <moritz_> azawawi: I don't know off-hand how to do this

[17:56] <moritz_> azawawi: so please open a ticket, including which information you hope to get from it

[17:57] <azawawi> moritz_: i was hoping mostly for svn version info.. makes debugging user problems easier a bit...  

[17:57] <moritz_> we don't use svn anymore.

[17:58] <moritz_> or do you mean parrot's svn version?

[17:58] <azawawi> moritz_: git info then sorry :)

[17:58] <azawawi> moritz_: stuff like perl -V

[17:58] <moritz_> azawawi: as I said, pleae include that in the ticket

[17:58] <azawawi> moritz_: but simpler ofcourse...

[17:58] <azawawi> moritz_: sure that one

[17:59] <azawawi> moritz_: the other is the padre PGE dumper; can u help with that or is pmichaud the one to ask about that?

[18:00] <moritz_> azawawi: pmichaud, not me

[18:00] <azawawi> moritz_: sorry for bothering you then :)

[18:00] <moritz_> no problem

[18:00] *** szabgab joined
[18:01] <azawawi> moritz_: meanwhile if you can think of any addition to this help menu, i would be happy to add it http://feather.perl6.nl/~azawawi/padre_more_help.png

[18:04] <moritz_> azawawi: i think that's fine. Linking to perl6-projects.org should indirectly link to everything[tm]

[18:06] <azawawi> moritz_: cool then back to Perl 6 refactoring then :)

[18:07] <azawawi> moritz_: rakudo with strawberry is coming soon... :)

[18:07] <moritz_> cool

[18:08] *** azawawi left
[18:16] *** Whiteknight left
[18:18] *** Whiteknight joined
[18:28] *** Whiteknight left
[18:32] <moritz_> rakudo: say Inf.Int

[18:32] <p6eval> rakudo 415514: OUTPUT«-2147483648␤»

[18:35] *** finanalyst left
[18:36] *** jjore joined
[18:38] *** SmokeMachine joined
[18:43] *** explorer joined
[18:57] *** edpratomo joined
[19:04] *** Front_slash left
[19:05] <moritz_> rakudo: sub wrong ($a?, $b) {...}

[19:05] <p6eval> rakudo 415514:  ( no output )

[19:14] *** tann joined
[19:21] *** gfldex joined
[19:32] *** azawawi joined
[19:33] <moritz_> rakudo: say NaN.perl

[19:33] <p6eval> rakudo 415514: OUTPUT«NaN␤»

[19:34] <moritz_> rakudo: print Inf.perl

[19:34] <p6eval> rakudo 415514: OUTPUT«Inf»

[19:39] <azawawi> std: proto infix:<add> (@left,@right) { ... }; regex anint { <digit>+ $ };

[19:39] <p6eval> std 27619: OUTPUT«Deep recursion on subroutine "Cursor::_AUTOLEXpeek" at Cursor.pm line 366.␤Deep recursion on subroutine "Cursor::_AUTOLEXgen" at Cursor.pm line 353.␤»

[19:39] <azawawi> rakudo: #proto infix:<add> (@left,@right) { ... }; regex anint { <digit>+ $ };

[19:39] <azawawi> rakudo: proto infix:<add> (@left,@right) { ... }; regex anint { <digit>+ $ };

[19:39] <p6eval> rakudo 415514:  ( no output )

[19:41] *** PZt left
[19:51] *** azawawi left
[19:58] *** sri_kraih_ joined
[20:03] *** |MoC| joined
[20:03] *** M_o_C left
[20:12] <pugs_svn> r27620 | moritz++ | [t/spec] tests for (Inf|NaN|-Inf).Int

[20:12] <pugs_svn> r27621 | moritz++ | [t/spec] unfudges for rakudo found by autounfudge.pl

[20:14] *** sri_kraih left
[20:14] *** lichtkind joined
[20:16] *** pmurias left
[20:19] *** |MoC| left
[20:20] *** payload joined
[20:20] *** yhlu joined
[20:21] *** yhlu left
[20:24] *** fridim_ left
[20:24] *** kborer joined
[20:30] *** kidd_ joined
[20:34] <edpratomo> hello

[20:34] <moritz_> hi

[20:34] <edpratomo> is there a feature to do set intersection?

[20:35] <moritz_> sets are not well specced yet

[20:35] *** tann left
[20:35] <moritz_> Tene wrote a module that defined sets, and unicode operators on them

[20:35] <edpratomo> where is the module?

[20:36] <moritz_> dunno

[20:36] <moritz_> Tene: where's your set module?

[20:36] <jeekobu> Wouldn't that just be $junction1 & $junction2 ?

[20:37] <moritz_> junctions are not sets

[20:37] <jeekobu> k

[20:37] <moritz_> and all() is not the same as intersection either

[20:37] *** sri_kraih_ left
[20:38] *** szabgab left
[20:38] *** sri_kraih joined
[20:39] <jeekobu> Hmm.

[20:39] *** szabgab joined
[20:44] *** unitxt left
[20:46] <edpratomo> Quantum::Superpositions can be used to compute intersection

[20:47] <edpratomo> but junctions not

[20:48] <moritz_> right, that's what sets are for. We just need somebody with enough knowledge and tuits to spec them.

[20:56] *** orafu left
[21:01] *** iblechbot joined
[21:10] *** M_o_C joined
[21:22] *** edpratomo left
[21:23] *** dukeleto joined
[21:29] *** explorer left
[21:33] *** justatheory joined
[21:39] *** justatheory left
[21:40] *** dukeleto left
[21:42] *** explorer joined
[21:47] *** FCO joined
[21:49] *** SmokeMachine left
[22:15] <Tene> moritz_: dunno... did you check if I uploaded it to github?

[22:22] *** iblechbot left
[22:30] *** icwiener joined
[22:31] *** szabgab left
[22:42] *** PacoLinux left
[22:55] <spx2> moritz_: what data structures are used for sets ?

[22:56] <spx2> moritz_: there are some data structures that allow fast set operations on them

[22:56] * spx2 forgot the name... so long ago

[22:58] *** [particle] joined
[23:02] *** szabgab joined
[23:03] <arnsholt> spx2: I was thinking about the same, and digged into my data structures book

[23:03] <arnsholt> What I was thinking of at least, was the dynamic equivalence problem

[23:25] *** kidd_ left
[23:26] *** yhsuan left
[23:27] *** chid joined
[23:31] *** M_o_C left
[23:40] *** jhorwitz joined
[23:40] *** ihrd joined
[23:41] *** ihrd left
[23:42] *** Teratogen joined
[23:42] <Teratogen> Is Perl 6 ready yet?

[23:50] <arnsholt> Perl 6 is immanent in the fabric of reality

