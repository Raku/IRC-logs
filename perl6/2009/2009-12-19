[00:04] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 19: Whatever': http://perl6advent.wordpress.com/2009/12/19/day-19-whatever/

[00:07] *** nihiliad joined
[00:11] *** cdarroch left
[00:12] *** awwaiid joined
[00:21] *** synth left
[00:26] *** lest_away is now known as lestrrat

[00:29] *** pmurias left
[00:32] *** patspam left
[00:37] *** Exodist joined
[00:39] *** patspam joined
[00:50] <Wolfman2000> evening

[00:52] <sjohnson> hi

[00:56] *** yahooooo joined
[01:01] *** japhb left
[01:12] *** justatheory left
[01:16] *** colomon left
[01:42] *** colomon_ joined
[01:51] *** japhb joined
[02:15] *** patspam left
[02:18] *** patspam joined
[02:19] *** patspam left
[02:20] *** fatface_ joined
[02:23] *** fatface_ left
[02:28] *** r0bby_ is now known as r0bby

[02:28] *** jferrero left
[02:29] *** astrojp joined
[02:30] *** astrojp left
[02:33] *** LionMadeOfLions joined
[02:48] *** TimToady left
[02:48] *** zaslon left
[02:48] *** pointme left
[02:48] *** pointme joined
[02:48] *** mubot joined
[02:48] *** zaslon joined
[02:50] *** TimToady joined
[02:51] *** diakopter sets mode: +o TimToady

[02:54] *** TimToady left
[02:54] <diakopter> 'tis 

[02:54] <colomon_> 'tain't

[02:55] *** carlin sets mode: +vvv zaslon mubot pointme

[02:56] *** TimToady joined
[02:56] *** diakopter sets mode: +oo colomon_ TimToady

[02:57] <wayland76> Isn't that "perl -T" ? :)

[02:57] <colomon_> :)

[03:25] *** Chillance joined
[03:26] * colomon_ would like to point out he just likes the word 'tain't, and has no idea what diakopter was talking about.

[03:28] <sjohnson> i like it

[03:31] *** ShaneC left
[03:50] *** lestrrat is now known as lest_away

[03:54] *** stephenlb left
[04:12] *** meppel joined
[04:12] *** meppl left
[04:12] *** meppel is now known as meppl

[04:15] *** Baggio_ joined
[04:31] *** colomon_ left
[04:32] *** colomon joined
[04:34] *** astrojp joined
[04:36] *** diederich joined
[04:36] *** diederich left
[04:36] *** _jaldhar joined
[04:36] *** diederich joined
[04:37] *** rfordinal joined
[04:51] *** Baggio_ left
[04:59] *** rfordinal left
[05:02] *** pmichaud_ joined
[05:14] <diakopter> colomon: :)

[05:16] *** gfx joined
[05:18] *** lest_away is now known as lestrrat

[05:19] *** Baggio_ joined
[05:20] *** mberends joined
[05:23] *** Baggio_ left
[05:23] <diakopter> mberends++ | [pugs/src/perl6/vill] introducing vill, a viv+llvm mashup

[05:23] <diakopter> mberends++ | http://perlcabal.org/svn/pugs/revision/?rev=29375

[05:29] *** drbean_ joined
[05:29] <diakopter> mberends++ sneaking vill into pugscode svn when no one was watching

[05:29] <mberends> :) hoping some helpful people learn LLVM and help develop 'vill'

[05:30] *** matsuzine joined
[05:31] *** matsuzine left
[05:31] *** matsuzine_ joined
[05:35] *** matsuzine joined
[05:36] *** matsuzine_ left
[05:44] <mberends> the vill 'make test' is useful to prove and see what it does

[05:45] *** drbean left
[05:51] <dalek> nqp-rx: 7009fe7 | pmichaud++ | src/Regex/Cursor-protoregex-peek.pir:

[05:51] <dalek> nqp-rx: Switch to using getattribute for contexts instead of hash interface.

[05:51] <dalek> nqp-rx: review: http://github.com/perl6/nqp-rx/commit/7009fe7a5dafefb1153f0343ac67a4e7e8e16022

[05:51] <dalek> nqp-rx: eb9c75a | pmichaud++ |  (5 files):

[05:51] <dalek> nqp-rx: Update bootstrap, PARROT_REVISION.

[05:51] <dalek> nqp-rx: review: http://github.com/perl6/nqp-rx/commit/eb9c75a9b6bf144808ca6d24f31b606e9e8adba8

[06:04] *** _stuuf joined
[06:05] *** stuuf left
[06:07] *** astrojp left
[06:16] *** Jeffrey_ joined
[06:18] *** Jeffrey_ left
[06:24] * mberends skims http://unladen-swallow.googlecode.com/files/Unladen_Swallow_PyCon.pdf for ideas

[06:29] *** mj41_ joined
[06:35] *** charsbar_ joined
[06:37] *** araujo left
[06:42] *** kst left
[06:42] *** kst joined
[06:47] *** mj41 left
[06:50] *** nicholas_ joined
[06:50] *** matsuzine left
[06:52] *** nicholas_ left
[06:59] *** Baggio_ joined
[07:01] <pugs_svn> r29376 | mberends++ | [src/perl6/vill] tweak wordcount in Makefile to ignore .svn dirs 

[07:07] <pugs_svn> r29377 | pmurias++ | [vill] refer to "someone man known as pmichaud" by his name 

[07:07] <mberends> ;-)

[07:37] <pugs_svn> r29378 | mberends++ | [vill] added pmurias++ as contributor 

[07:48] *** colomon_ joined
[07:48] *** colomon left
[07:48] *** colomon_ is now known as colomon

[07:51] *** JimmyZ joined
[08:01] *** colomon_ joined
[08:01] *** colomon left
[08:01] *** colomon_ is now known as colomon

[08:08] *** meppl left
[08:11] *** JimmyZ left
[08:24] *** am0c left
[08:33] *** lumi joined
[08:33] *** kaare joined
[08:33] *** kaare is now known as Guest13816

[08:35] *** gfx left
[08:40] *** drbean joined
[08:50] *** meneldor joined
[08:50] *** JimmyZ joined
[08:52] *** drbean_ left
[08:53] *** Chillance left
[08:56] *** Chillance joined
[08:57] <meneldor> hello moritz_ , i forgot about rakudo on win32 and installed it successfully on my ubuntu

[08:57] <meneldor> now i read your PDF book

[08:58] <meneldor> but it starts with JSON tutorial?

[08:58] *** Baggio_ left
[08:58] <meneldor> is this the right book to start reading for perl5 to perl6 ?

[08:59] <moritz_> meneldor: it shouldn't start with JSON

[09:00] <meneldor> i've opened a link from the blog

[09:00] <moritz_> http://cloud.github.com/downloads/perl6/book/book-2009-12.pdf

[09:01] *** lumi_ joined
[09:01] <meneldor> http://perlgeek.de/blog-en/perl-6/we-write-a-perl-6-book-for-you.html

[09:01] <meneldor> this one

[09:01] <moritz_> meneldor: there are newer versions than the one linked on my blog, we have monthly releases

[09:01] <moritz_> and that was the first one

[09:01] <meneldor> :)

[09:01] <meneldor> ok tnx

[09:01] <moritz_> maybe we should have a permanent link which always points to the latest

[09:02] *** colomon left
[09:02] <meneldor> ah this book is different thing :) thank you moritz_ 

[09:03] *** meppl joined
[09:04] <moritz_> meneldor: it still has a chapter about parsing JSON

[09:05] <meneldor> i can read about it if i start to use perl6 for web later :)

[09:05] <meneldor> now i use json module for catalyst with perl5

[09:05] <moritz_> you can also use the knowledge for parsing something else than JSON

[09:06] *** Baggio_ joined
[09:06] <meneldor> ok but how perl6 use local module libraries?

[09:06] <meneldor> do he use own lib path?

[09:07] <moritz_> if you put modules into ~/.perl6/lib/ rakudo will find them

[09:07] <moritz_> or you can set the PERL6LIB environment variable

[09:07] <moritz_> or you can say BEGIN { @*INC.push: '/path/to/lib' } in your module

[09:07] <meneldor> i see

[09:08] <meneldor> is there a way like in perl5 to install from cpan directly to perl6 lib

[09:08] *** Baggio_ left
[09:09] <meneldor> like: cpan6 install Module

[09:09] *** nihiliad left
[09:09] <moritz_> there's an installer called "proto"

[09:09] <moritz_> http://github.com/masak/proto/

[09:10] <moritz_> you have to checkout the installed-modules branch

[09:10] <moritz_> and then you can try ./proto install json

[09:10] <meneldor> tnx

[09:16] *** Su-Shee joined
[09:16] *** iblechbot joined
[09:17] <Su-Shee> good morning

[09:17] <Tene> hi!

[09:17] <mberends> guten morgen

[09:19] <moritz_> tach!

[09:20] <meneldor> do anyone use Padre with perl6 ?

[09:21] *** lumi left
[09:21] *** JimmyZ left
[09:21] * Su-Shee doesn't.

[09:27] * moritz_ is a vim user

[09:28] <Su-Shee> so am I. gvim with shiny tabs ;)

[09:35] <meneldor> im trying this from the book: my @names = $file.get.split(' ');

[09:35] *** agentzh joined
[09:35] <meneldor> but it throws an error

[09:35] <meneldor> Could not locate a method 'get' to invoke on class 'IO'.

[09:36] <meneldor> there are 6-7 additional lines below this error

[09:37] <lisppaste3> meneldor pasted "untitled" at http://paste.lisp.org/display/92346

[09:41] * frettled is a whimsical user.

[09:41] <meneldor> can anyone help me with this error please

[09:42] *** lumi joined
[09:42] *** ashizawa joined
[09:42] <meneldor> is this my fault or this code is obsolete?

[09:44] <frettled> I'm sorry, I'm still too much of a n00b to help you with that.  :(

[09:46] <mberends> meneldor: please paste your script file

[09:47] *** frettled sets mode: +oo mberends Su-Shee

[09:47] * frettled idles again.  :)

[09:47] <mberends> :)

[09:48] <mberends> if you successfully open a file, get works

[09:49] *** mikehh left
[09:49] *** mikehh joined
[09:50] <meneldor> if i only use open it works

[09:50] <meneldor> this error appear when i use $file.get.split(' ');

[09:50] *** lestrrat is now known as lest_away

[09:56] <moritz_> $*IN.get.split(' ').perl.say

[09:57] <moritz_> rakudo: $*IN.get.split(' ').perl.say

[09:57] <p6eval> rakudo 7f1c3f: ["Land", "der", "Berge,", "Land", "am", "Strome,"]‚ê§

[09:58] *** lumi_ left
[09:58] <meneldor> moritz_: i just ran the code in the book

[09:58] <moritz_> meneldor: and did you create the data files first?

[09:59] *** agentzh left
[09:59] *** Baggio_ joined
[09:59] <meneldor> yes

[09:59] <meneldor> i wrote file named the same way with the same data inside

[10:00] *** justin_ joined
[10:01] *** Alias joined
[10:02] *** justin_ left
[10:02] <moritz_> that's weird

[10:02] <moritz_> but I'm afraid I can't investigate right now, have to leave rather soon

[10:03] <mberends> copy the source code from the book pdf give the wrong kind of quote characters

[10:04] <mberends> *copying, gives, gah, fingers too cold

[10:04] <meneldor> mberends: i've changed them :)

[10:05] <mberends> Also fixing more of them here. The original git version would be more reliable for copying.

[10:07] <mberends> works now. beware of backticks pretending to be single quotes

[10:08] <meneldor> the line: my @names = $file.get.split(' ');

[10:08] <meneldor> is hand written

[10:09] <mberends> check every quote/backtick on all lines

[10:14] <meneldor> well i did it

[10:14] <meneldor> i tryed this: my $file = open 'scores'; say $file;

[10:14] <meneldor> it prints: IO<0xb5fbe380>

[10:15] <mberends> $file is an open file object, ok

[10:15] <meneldor> but it means that OPEN works

[10:15] <meneldor> then if i use get it throws an error

[10:16] <mberends> pasting my copy, then you can diff them

[10:16] *** vamped joined
[10:17] <meneldor> your copy?

[10:18] *** vamped left
[10:20] <meneldor> here is my perl6 version: This is Rakudo Perl 6, revision 37414 built on parrot 0.9.1-devel

[10:20] <lisppaste3> mberends pasted "book example for meneldor" at http://paste.lisp.org/display/92347

[10:22] <meneldor> mberends: the same error :(

[10:22] <mberends> meneldor: your parrot is too old, you should get newer parrot and rakudo

[10:22] <meneldor> but i installed it 1 hour before

[10:22] <mberends> you downloaded from an old site

[10:22] <meneldor> oh no

[10:23] <mberends> parrot is now 1.8

[10:23] <meneldor> i use http://www.rakudo.org/how-to-get-rakudo

[10:23] * mberends looks

[10:24] <meneldor> then i downloaded  	rakudo-2009-12.tar.gz

[10:24] <meneldor> then: perl Configure.pl --gen-parrot

[10:24] <meneldor> and it check some thinks in the site i think

[10:25] <mberends> it could be that your search path is finding an earlier install instead of the new one

[10:25] *** mikehh left
[10:26] <meneldor> nope, i start perl6 executable in the same directory i've builded

[10:26] <mberends> try 'which perl6' and verify the directory

[10:27] *** lumi_ joined
[10:27] <mberends> the 0.9.1 must be removed with extreme prejudice

[10:28] <meneldor> ill try to compile it again

[10:29] <mberends> just remove all the new stuff first, and verify that you have *no* old version left

[10:29] <meneldor> this is the first time i install perl6

[10:30] <mberends> which OS is this on?

[10:30] <meneldor> ubuntu

[10:30] *** lumi left
[10:30] <meneldor> hmm now is different i think

[10:30] <meneldor> Checked out revision 43076.

[10:30] <mberends> ok, I'll try the webpage download in /tmp on another ubuntu pc

[10:31] <meneldor> wait

[10:31] <meneldor> let me compile it

[10:33] <mberends> 43076 sounds good, I'm using 42558

[10:34] *** rfordinal joined
[10:35] <meneldor> i might had been installed from old archive

[10:37] <meneldor> nice!

[10:37] <meneldor> tnx mberends 

[10:37] <meneldor> now all works

[10:37] <meneldor> i dont know how i've installed that old version before :)

[10:38] * mberends remembers the birth of 'get' at NPW in Oslo

[10:38] <meneldor> well today im starting to migrate from perl5

[10:38] <meneldor> cheers for the help mberends 

[10:39] <mberends> meneldor: you're very welcome

[10:39] <meneldor> here is the old version I've installed before: http://github.com/rakudo/rakudo

[10:40] <meneldor> when you click Download it sends you some archive rakudo-rakudo-26262626.tar.gz

[10:40] <meneldor> then i've downloaded rakudo-2009-12.tar.gz and all is OK

[10:41] <mberends> the site is current, but the tar file may be obsolete

[10:42] *** iblechbot left
[10:45] *** mikehh joined
[10:52] *** mjk joined
[10:56] *** meneldor left
[11:12] *** JimmyZ joined
[11:25] *** IllvilJa left
[11:29] *** iblechbot joined
[11:39] *** JimmyZ left
[11:44] *** lumi joined
[11:45] *** lumi_ left
[11:45] *** astoria joined
[11:53] *** Baggio_ left
[11:54] *** masak joined
[11:54] <masak> mberends++ # vill

[11:54] <masak> mberends: I vill definitely check it out! :)

[11:57] <masak> phenny: tell moritz that http://perlgeek.de/blog-en/perl-6/publicity-for-perl-6.html (while otherwise great as usual) contains a HTML-related glitch in its first paragraph. you don't type in all the HTML manually, do you? :)

[11:57] <phenny> masak: I'll pass that on when moritz is around.

[11:58] <masak> oh dang.

[11:58] <masak> phenny: tell moritz_ that http://perlgeek.de/blog-en/perl-6/publicity-for-perl-6.html (while otherwise great as usual) contains a HTML-related glitch in its first paragraph. you don't type in all the HTML manually, do you? :)

[11:58] <phenny> masak: I'll pass that on when moritz_ is around.

[12:03] * masak really liked http://use.perl.org/~Alias/journal/40026

[12:03] * Alias bows

[12:03] *** colomon joined
[12:04] <masak> I think, in all humility of course, that it's one of the areas where Perl 6 will be more adaptable than Perl 5.

[12:04] <Alias> From my perspective, Perl 6 is worse

[12:04] <Alias> Because the grammar is utterly intangible

[12:05] <Alias> And modules only have a valid document structure if they also compile

[12:06] <Alias> Does P6 have a BEGIN equivalent?

[12:06] *** Baggio_ joined
[12:06] <Alias> Is it possible to do code injection into the compiler?

[12:06] <masak> oh, sure.

[12:07] <masak> macros, defined operators, defined other pieces of syntax...

[12:07] <masak> but it's, er, homoiconic in a way that Perl 5 isn't.

[12:08] <rachelBROWN> what would be the best way to go about donating LSD to the most active contributors of perl6

[12:09] <masak> rachelBROWN: are you really sure that's what's needed at this juncture? :P

[12:10] <masak> how about we just make sure the ng branch merges instead?

[12:10] <rachelBROWN> perl6 is supposed to do everything, right?

[12:10] *** kidd joined
[12:10] <rachelBROWN> I thing LSD would help us with that.

[12:10] <huf> no, just 70% of that

[12:11] <masak> rachelBROWN: I see your point, but... I think most people believe more in LTM around here.

[12:13] <rachelBROWN> Large Telescope Metalanguage?

[12:13] <masak> no, but I like the sound of that. :)

[12:14] <masak> Longest-Token Matching.

[12:14] <huf> hmm, my LTM mislead me about the meaning of LTM

[12:15] *** araujo joined
[12:15] <masak> huf: you have a telescope? :)

[12:20] <huf> i meant long-term memory ;) no scope, only vision here.

[12:23] <masak> oh. well, hindsight is 20-20.

[12:24] <huf> you are correct. i have 0 eyes in the back of my head.

[12:26] <jnthn> oh hai, #perl6

[12:28] <masak> lolitsjnthn! \o/

[12:28] *** Su-Shee_ joined
[12:28] *** Su-Shee left
[12:29] <jnthn> .oO( does LSD make meta-models more understandable? )

[12:31] <jnthn> Anyway, the ng branch needs Hash far more. ;-)

[12:33] *** Su-Shee_ is now known as Su-Shee

[12:33] <masak> if nothing else, we're pun junkies.

[12:34] <huf> best kind of junkie. 

[12:34] * Su-Shee can stop punning every day, if I want to.

[12:34] <huf> right after each pun? and until the next one? impressive.

[12:35] *** mjk left
[12:35] <Su-Shee> just a question of will. and a backspace key in good working condition.

[12:36] <masak> the first step is admitting that one is a punster.

[12:36] <Su-Shee> "hello masak!" ;)

[12:36] <carlin> Friends don't let friends use puns

[12:36] <masak> hi.

[12:36] <masak> my name is masak, and I pun.

[12:37] <huf> hmm, this could lead to the punic wars if we arent careful

[12:37] <masak> I started punning when I was 15, sneaking behind the school building and punning where nobody heard me.

[12:37] <Su-Shee> huf: you'll have to pay for that one. ;)

[12:37] <carlin> Good idea, make a pun jar

[12:38] <Su-Shee> there is actually such a thing in english? I always had difficulties translating the german word.

[12:38] <huf> one of intermediate size no longer used in the west?

[12:38] <huf> (but still used in strife-torn bolivia as a reminder of better days)

[13:25] *** pmurias joined
[13:31] *** iblechbot left
[13:42] *** Su-Shee left
[13:44] *** rfordinal left
[13:45] *** Su-Shee joined
[13:51] *** synth joined
[13:51] *** JimmyZ joined
[13:52] *** synth left
[13:53] *** cb_ joined
[13:58] *** orafu left
[13:58] *** orafu joined
[13:59] *** cb_ left
[14:00] *** Baggio_ left
[14:00] *** cb_ joined
[14:01] *** cb_ left
[14:05] *** cotto left
[14:10] *** meppl left
[14:10] *** cb_ joined
[14:12] *** cb_ left
[14:15] *** Baggio_ joined
[14:18] *** cls_bsd left
[14:22] *** mikehh left
[14:22] *** mikehh joined
[14:42] <masak> quiet here today.

[14:42] * masak tries vill

[14:42] *** mikehh left
[14:45] <mberends> oooh, masak!

[14:46] <masak> mberends! \o/

[14:46] <mberends> you'll have to install LLVM first. Since much of the work is being done at Apple, it should not be a problem :)

[14:47] <masak> congratulations on the de-sekkritification!

[14:47] <mberends> :D

[14:47] <masak> mberends: I'm on it.

[14:47] <mberends> cool!

[14:47] <masak> reading the README in the meantime :)

[14:49] <mberends> just planning more README items, to pre-answer FAQs

[14:50] <mberends> so if *you* ask, it's ok, it's not RTFM yet ;)

[14:51] <mberends> it's nice to see that llvm-config is a Perl 5 script

[14:52] <pugs_svn> r29379 | pmurias++ | [mildew-js] strings and ints are not wrapped 

[14:52] <masak> http://llvm.org/docs/GettingStarted.html "1. Read the documentation.\n2. Read the documentation.\n3. Remember that you were warned twice about reading the documentation." :)

[14:52] <mberends> heehee

[14:55] *** gabiruh left
[15:01] *** hicx174 left
[15:02] *** hicx174 joined
[15:03] *** patspam joined
[15:07] <masak> mberends: any particular reason the 'hello world' example in the README is 'print "howdy!"' and not 'say "howdy!"'?

[15:07] <masak> the latter gives nicer output, and is more of a moral boost, since it's a Perl6ism.

[15:08] <masak> s/moral/morale/

[15:11] <mberends> masak: there was a trivial reason.  I thought I would leave 'say' as a piece of LHF to tempt some hacker to implement it in terms of the existing 'print' ;)

[15:12] <masak> ahah. :)

[15:12] <mberends> so please do

[15:12] <arnsholt> I like the idea of leaving stuff to trick new people into contributing

[15:12] <masak> still building LLVM... :)

[15:12] <mberends> "trick" ? are you insinuating ?

[15:13] <arnsholt> I'd never insinuate anything O=)

[15:14] <arnsholt> But more seriously, it sounds like a good idea. Having some stuff that people not intimately familiar with the codebase can do might be a good way of attracting more contributors

[15:14] <mberends> innocently put, it's optimizing -Ofun for the maximum number of people

[15:15] <mberends> diakopter++ got me into Sprixel that, intentionally or not

[15:16] <mberends> *like that # fingers too cold

[15:19] <masak> is your IRC client outside?

[15:20] <mberends> the shop that sells inkjet cartridges was a short walk away :)

[15:22] <masak> mberends: this only creates more questions. :)

[15:23] <masak> does your IRC client need ink?

[15:24] <masak> will the inkjet cartridge salesmen be the first against the wall when the revolution comes?

[15:24] <masak> etc.

[15:24] <mberends> this FAQ will need to become bigger than planned :)

[15:26] <masak> by the way, compiling LLVM takes a long time.

[15:27] <mberends> hmm. did you read about not building for *all* targets?

[15:28] <mberends> the default LLVM can cross compile to numerous CPUs

[15:28] <masak> is that so?

[15:28] <masak> no, I just followed the build instructions in the documentation.

[15:30] <mberends> ./configure --prefix=/usr --enable-optimized --enable-targets=host-only ?

[15:30] <mberends> (from the vill README)

[15:31] <masak> oh.

[15:31] <masak> I'll abort and do like that then.

[15:31] <masak> thanks.

[15:31] <mberends> without that, it adds about 10 CPU backends

[15:32] <mberends> it still took me 25 45 minutes

[15:32] <mberends> 25 - 45 minutes system dependent

[15:34] *** Psyche^ joined
[15:36] *** JimmyZ left
[15:39] <masak> mberends: the README is extensive and very enjoyable.

[15:45] *** colomon_ joined
[15:45] *** colomon left
[15:45] *** colomon_ is now known as colomon

[15:47] <mberends> masak: you know I value docs more than most people do

[15:50] *** Patterner left
[15:50] *** Psyche^ is now known as Patterner

[15:53] <masak> mberends: it's a positive trait. kudos.

[15:55] <mberends> masak: you're pretty good yourself too.

[15:56] <mberends> oh, the mutual appreciation society meeting is just beginning

[16:01] <moritz_> masak: thanks

[16:01] <phenny> moritz_: 11:58Z <masak> tell moritz_ that http://perlgeek.de/blog-en/perl-6/publicity-for-perl-6.html (while otherwise great as usual) contains a HTML-related glitch in its first paragraph. you don't type in all the HTML manually, do you? :)

[16:02] <masak> mberends: every community is a mutual appreciation society to some extent. :)

[16:02] <mberends> masak++ # just because

[16:02] <masak> :)

[16:03] <masak> I wish I took the time to write more documentation and architectural comments, though.

[16:03] <masak> but I am sorta proud of the GGE README, even though it's much smaller than vill's :) http://github.com/masak/gge

[16:06] <diakopter> Alias: could PPI do "keyhole" grammar mutation in the same way Devel::Declare does?

[16:06] <masak> mberends: are you sure about the v5.8.0 minimal version requirement. ISTR that STD.pm runs on > v5.10 only.

[16:08] <diakopter> Alias: (though, if you did that, it'd become as expressive as the languages STD.pm can handle...)

[16:08] <diakopter> mberends: yes, v5.10

[16:10] *** holli joined
[16:11] <holli> hi. i'm toying with todays calendar entry.

[16:11] <holli> this line: say @x.map: * ~ 'A';

[16:11] <mberends> thanks masak and diakopter, will update with other edits

[16:11] <holli> doesnt work in rakudo (No applicable candidates found to dispatch to for 'map' in Main)

[16:11] <masak> rakudo: my @x = <a b c>; say @x.map: * ~ 'A';

[16:12] <p6eval> rakudo 7f1c3f: No applicable candidates found to dispatch to for 'map'‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[16:12] <masak> holli: correct.

[16:12] <masak> rakudo: say (* ~ 'A").WHAT

[16:12] <p6eval> rakudo 7f1c3f: Confused at line 2, near "~ 'A\").WHA"‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[16:12] <masak> rakudo: say (* ~ 'A').WHAT

[16:12] <p6eval> rakudo 7f1c3f: Str()‚ê§

[16:12] <masak> holli: there you go.

[16:13] <diakopter> what?

[16:13] <masak> 's a bug.

[16:13] *** lumi_ joined
[16:14] <diakopter> rakudo: my @x = <a b c>; say @x.map: { * ~ 'A' }

[16:14] <p6eval> rakudo 7f1c3f: AAA‚ê§

[16:16] <masak> rakudo: my @x = <a b c>; say @x.map: { $_ ~ 'A' }

[16:16] <p6eval> rakudo 7f1c3f: aAbAcA‚ê§

[16:16] <masak> diakopter: both * and {} is tautological.

[16:16] *** Baggio_ left
[16:17] <diakopter> *and* repetitively redundant :P

[16:17] <masak> and unnecessary :)

[16:17] <diakopter> and extraneous

[16:17] <masak> here we go, autopunning again.

[16:17] <diakopter> in addition to superfluous

[16:17] <holli> rakudo: my @x = <a b c>; say @x.map: { * }

[16:17] <p6eval> rakudo 7f1c3f: !whatever_closure!whatever_closure!whatever_closure‚ê§

[16:17] <holli> lol

[16:18] <diakopter> lolhi indeed

[16:18] <masak> we didn't mention repetitive, did we? and repetitive.

[16:18] <carlin> rakudo: my @x = <a b c>; say @x.map: *;

[16:18] <p6eval> rakudo 7f1c3f: get_number() not implemented in class 'Sub'‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[16:19] <holli> and then they say people should write modules for Perl6

[16:19] <masak> holli: you think that's bad? :)

[16:20] <masak> holli: try implementing a functioning wiki engine 18 months ago!

[16:20] <masak> mberends: slight vill make failure: http://gist.github.com/260133

[16:21] * mberends thinks

[16:22] <mberends> ok, gcc on OS X may have a different set of C/C++ lib defaults and cannot statically link malloc()

[16:22] <masak> sounds plausible.

[16:23] <mberends> you're the first non linux customer (or maybe the first customer, period)

[16:24] <mberends> certainly the first customer with a complaint ;)

[16:24] <masak> help me solve this, and we'll see about that low-hanging 'say' fruit! :)

[16:25] <mberends> :)

[16:25] <holli> how complete is file io?

[16:26] <masak> holli: not 100%, but usable.

[16:26] <masak> anything in particular?

[16:26] *** colomon__ joined
[16:26] <holli> nah, just letting my thoughts flowing =)

[16:27] <masak> that's encouraged. :) but don't hesitate to make specific requests.

[16:27] *** nihiliad joined
[16:31] *** colomon left
[16:31] *** colomon__ is now known as colomon

[16:33] <holli> to be honest, i have absolutely no perl6 experience. was just thinking i try at latest rakudo (given all the talk about rakudo* lately). but when i see that a simple

[16:33] <holli> example from the advent calendar doesnt run i'm effectively discouraged.

[16:34] <holli> i mean it's map not working, map!

[16:34] *** lumi left
[16:35] <masak> holli: there are a couple of known issues with the Whatever * and operators.

[16:35] <mberends> masak: finally reading every word in your error gist, the make has not reached the library linking stage yet. The C++ compiler does not have the include dir that contains malloc.h in its search path. This is a typical reason why projects have to run a configure before make, to patch the Makefile. I was hoping to avoid having to do that :(

[16:35] <masak> holli: I agree that it's unfortunate that one such example crept into the Advent Calendar.

[16:36] <masak> holli: but I won't lie to you -- you're bound to run into similar omissions here and there. it's possible to write elaborate things on top of Rakudo, but one has to work and know which deficiencies to avoid.

[16:36] <masak> mberends: ah, so it's more of your fault than mine? ;)

[16:37] <mberends> yes, ok, blame me, Richard Stallman and Steve Jobs

[16:39] * holli blames Merlyn

[16:39] <masak> together, you'll have a reality distortion field to make objects materialize!

[16:39] *** subichan joined
[16:40] *** _stuuf left
[16:41] * mberends struggles to avoid adding a pre-make configure

[16:41] <holli> rakudo: say "foo { 1 + 2 } bar"

[16:41] <p6eval> rakudo 7f1c3f: foo 3 bar‚ê§

[16:41] <holli> neat

[16:42] <holli> rakudo: my $foo = 'foo { 1 + 2 } bar'; say $foo.eval

[16:42] <p6eval> rakudo 7f1c3f: Method 'eval' not found for invocant of class 'Str'‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[16:42] <masak> eval is a function.

[16:43] *** mj41_ left
[16:43] <holli> why?

[16:44] <masak> holli: most things are. 'say' and a few others are the exception.

[16:45] <colomon> I'm with holli.  Why the heck isn't there a .eval method on Str?  Makes perfectly good sense to me...

[16:45] <masak> it does.

[16:45] <mberends> holli++

[16:45] <masak> let's add it while no-one's looking :)

[16:45] <colomon> Okay, give me sec.  :)

[16:45] <holli> i contributed to perl6 =) =) =)

[16:45] <masak> if someone else does the spec, I'll do Rakudo.

[16:45] <colomon> or you get the spec and I'll get ng.

[16:46] <masak> I was thinking master.

[16:46] <masak> holli++ indeed.

[16:47] <colomon> Should it be on Any or just Str?

[16:47] <mberends> eval expects Str

[16:48] *** mj41 joined
[16:48] <masak> I added it. running spectests.

[16:48] <colomon> really?

[16:48] <colomon> rakudo: say eval 10;

[16:48] <p6eval> rakudo 7f1c3f: Parameter type check failed on call to 'eval'.‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[16:48] <masak> colomon: I'm not pushing until the spectests show green. :)

[16:48] <colomon> masak: did you do Any.eval or Str.eval?

[16:49] <colomon> masak: that's why it's easier to do it in ng.  :)

[16:49] <masak> I put it in Any-str,pm, but I coerce to Str.

[16:49] <colomon> eval ~self  ?

[16:49] <masak> yes.

[16:49] <colomon> that's exactly what I wrote here.  :)

[16:49] <masak> not much room for variation :)

[16:50] <colomon> could have been eval self.Str, I suppose.

[16:50] <masak> actually, I used parentheses, because Damian told me so.

[16:50] <masak> (and I agree)

[16:50] <colomon> really?

[16:51] *** abra joined
[16:52] <masak> yes. parentheses save lives.

[16:54] <colomon> ng spectest passes (no parens)

[16:55] <colomon> seems like Code should have a method version as well?

[16:55] <colomon> Callable?

[16:55] * holli fights to surpress a xkcd reference

[16:57] <holli> a new quoting style for filenames? neat.

[16:57] <masak> colomon: how do you figure that? why not just .() the Callable?

[16:57] <masak> colomon: there's no corresponding subroutine eval for Callable.

[16:57] <holli> is there a Perl6 book worth reading?

[16:57] <colomon> ah

[16:57] <carlin> holli: Now I'm curious, which xkcd? :-)

[16:57] <masak> holli: it's not done yet, but yes. definitely.

[16:58] <masak> holli: it's written for people like you.

[16:58] <holli> http://xkcd.com/297/ of course

[16:59] <mberends> not 224 for a change

[16:59] <carlin> Ah, I was thinking 224

[16:59] <carlin> mberends++ # heh

[17:00] <colomon> ng spectest passes (parens)

[17:00] * mberends likes 297 as well

[17:01] <carlin> xkcd really is a great, so we'll forgive him for 353 ;-)

[17:02] <masak> carlin: nothing to forgive, really. :)

[17:02] <masak> just because Python has some positive qualities doesn't mean Perl is bad, or one shouldn't use Perl...

[17:02] <TimToady> I have more of a hard time forgiving xkcd for not realizing you can end a Perl program with a right parenthesis

[17:03] <holli> masak: i'm a good proofreader =)

[17:03] <masak> holli: excellent.

[17:04] <mberends> holli: right paren, on cue

[17:04] <carlin> masak: the alt text

[17:05] <holli> mberends: huh?

[17:05] <masak> carlin: ah. that might be something that needs forgiveness. :)

[17:06] <colomon> BTW, Any.eval pushed to ng.

[17:06] <mberends> holli: TimToady asks for right parentheses and you type one before (probably) reading his remark

[17:07] <dalek> rakudo/ng: 9d5018c | (Solomon Foster)++ | src/core/Any-str.pm:

[17:07] <dalek> rakudo/ng: Add Any.eval with obvious definition.

[17:07] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/9d5018c94f854af23cf33b9846cb119184da8fb5

[17:07] <holli> noh, i didnt even realize him talking

[17:08] <mberends> synchronicity++

[17:08] <TimToady> asynchronicity++ too

[17:08] <mberends> fate, even

[17:09] <holli> speaking of it. is there builtin multicore support in Perl6?

[17:09] <TimToady> in the language, yes

[17:09] <holli> like a parallellize opeartor

[17:09] <colomon> holli: spec'd but not yet implemented

[17:10] <TimToady> rakudo: say 1,2,3 ¬ª+¬´ 4,5,6

[17:10] <p6eval> rakudo 7f1c3f: 12756‚ê§

[17:10] <TimToady> hmm, precedence failure

[17:10] <TimToady> rakudo: say (1,2,3) ¬ª+¬´ (4,5,6)

[17:10] <p6eval> rakudo 7f1c3f: 579‚ê§

[17:11] <TimToady> rakudo's parser still doesn't believe in list infixes, I guess

[17:11] <masak> TimToady: Rakudo has that one right, right?

[17:11] <masak> or not.

[17:11] <masak> I thought all hyperops had the same prec as their non-hyper counterparts.

[17:12] <masak> but perhaps that's just [] ops, not >> << ops.

[17:12] <TimToady> hmm, you may be right, lemme look

[17:12] <colomon> masak: seems to me like that would be the other way around?  

[17:12] <colomon> how can you stack [] ops?

[17:12] <masak> colomon: stack?

[17:12] <TimToady> rakudo: say 1,2,3 X 4,5,6

[17:12] <p6eval> rakudo 7f1c3f: 141516242526343536‚ê§

[17:13] <TimToady> that one is right

[17:13] <colomon> masak: have more than one of them in an expression.

[17:13] <colomon> masak: in such a fashion that precedence would be an issue.

[17:13] <TimToady> so you're right, rakudo does know about list infix, but >>+<< isn't one

[17:13] <TimToady> (yet)

[17:14] <masak> colomon: [+] 1, 2, [*] 3, 4

[17:14] <masak> colomon: but no, precedence is not an issue there.

[17:14] <holli> what was the name again of this language with all this math symbols as operators? the one that was never widely used because there were no keyboards for it 

[17:14] <masak> it all falls out naturally, because they're listops.

[17:14] <colomon> whereas @a >>+<< @b >>*<< @c is perfectly sensible...

[17:14] <TimToady> colomon: actually, pugs did implement the multithreaded hypers at one point

[17:14] <masak> holli: APL?

[17:14] <masak> holli: and there were keyboards for it. :)

[17:15] <colomon> TimToady: really?  wonder if that still works?

[17:16] <TimToady> holli: also, we have feed operators ==> and <== that work like pipelines for cell architectures

[17:17] <TimToady> but those aren't implemented yet either

[17:17] * Juerd wonders if they'll be used much

[17:17] <holli> masak: yeah, that's it.

[17:17] <diakopter> programs get hungry

[17:18] <TimToady> but basically any lazy lists could be constructed by a separate processor, as long as there aren't bad dependencies (side effects)

[17:18] <masak> pipes are another place where I have the feeling that the spec will mutate a bit before settling...

[17:18] <mberends> masak: could you confirm that your OS X does *not* have /usr/include/malloc.h or /usr/local/include/malloc.h ?

[17:19] <colomon> mine has /usr/include/malloc/malloc.h

[17:19] <diakopter> /usr/include/sys/malloc.h

[17:20] <colomon> but neither one you mention.

[17:20] <mberends> ouch, that's the problem

[17:20] <colomon> and what diakopter says, too.

[17:20] <diakopter> but stdlib.h should cover it

[17:20] <mberends> ah, good suggestion

[17:21] <diakopter> otherwise, what colomon said

[17:22] <holli> TimToady: why limiting yourself to a single machine? think cloud =)

[17:23] *** abra left
[17:23] <holli> btw cloud. i wnat perl6 on to be runnable in the google app engine =)

[17:23] *** abra joined
[17:23] <masak> holli: that's great! thanks for volunteering!

[17:24] <diakopter> holli: do you mean hosted in one of the supported gae languages? or as its own supported langage?

[17:24] <TimToady> holli: sure, but lazy lists have to keep ordering, even if calculated out of order; clouds tend to be better for map/reducey things

[17:24] <holli> the latter preferably

[17:24] <mberends> holli's head is in the clouds

[17:25] <diakopter> holli: ask again when they support RealPerl

[17:25] <holli> i think that will never happen.

[17:25] <diakopter> I mean, Perl 5... oops, did I leak the new name?

[17:25] <masak> "RealPerl"? is that the new nickname for Perl 5? :)

[17:26] <masak> strangely, I find myself amused rather than offended.

[17:26] <TimToady> as opposed to ComplexPerl? :)

[17:26] <diakopter> it was meant to amuse, so.. .whew

[17:27] <TimToady> ImaginaryPerl is a bit long to type

[17:27] <holli> so that becomes iPerl

[17:27] <TimToady> but I'd like both Perl 5 and Perl 6 to be real, so maybe NumPerl vs RatPerl

[17:27] *** hydra35 joined
[17:28] <diakopter> or RatPerl vs IrratPerl

[17:28] * TimToady contemplates jokes on Rat.pack

[17:29] <diakopter> Frat.pack; Brat.pack; Borat.pack

[17:30] <diakopter> or

[17:30] *** IllvilJa joined
[17:30] <holli> how the fuck do i update the rakudo repository?

[17:30] <diakopter> HerePerl vs LagPerl

[17:30] <mberends> masak: to avoid a potentially futile edit/commit/revert, could you edit src/run.cpp, s/malloc/stdlib/ on the first occurrence (line 3) and see if 'make' compiles one file more? It works ok on Linux.

[17:31] <diakopter> holli: not like that

[17:31] <masak> mberends: sure thing. hold on.

[17:31] <colomon> holli: did you get it using git?

[17:31] <holli> yeah, but git --help tells me there is no update (<-- svn user)

[17:32] <colomon> git pull

[17:32] <masak> mberends: that works. next failure is in save.cpp. the same cause.

[17:33] <mberends> masak: thanks, I'll patch 'em all. diakopter++

[17:33] <diakopter> AGAIN WIN

[17:33] <masak> mberends++ # great customer service

[17:33] <diakopter> that's, like, twice in one year

[17:34] <holli> grrmpff. thanks

[17:34] * diakopter used to own a mac

[17:34] *** hydra35 left
[17:35] <diakopter> then windows rehab ended, and I fell off the wagon

[17:36] <masak> mberends: belated confirmation: I have /usr/include/malloc/malloc.h

[17:38] <diakopter> std: ((())()((())()((((()))))))()()(()())((())()()(()()))((())(((((())()())))))

[17:38] <p6eval> std 29379: ok 00:01 104m‚ê§

[17:38] <diakopter> I like that language

[17:38] <carlin> I didn't know std could parse lisp

[17:39] <diakopter> perl6: ((())()((())()((((()))))))()()(()())((())()()(()()))((())(((((())()())))))

[17:39] <p6eval> pugs: *** Cannot cast from VList [] to Pugs.AST.Types.VCode (VCode)‚ê§    at /tmp/g25doSyV16 line 1, column 2-26‚ê§

[17:39] <p6eval> ..elf 29379: Use of uninitialized value in subroutine entry at (eval 138) line 3.‚ê§Can't use string ("") as a subroutine ref while "strict refs" in use at (eval 138) line 3.‚ê§ at ./elf_h line 5881‚ê§

[17:39] <p6eval> ..rakudo 7f1c3f: invoke() not implemented in class 'Undef'‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[17:40] <diakopter> mildew: ((())()((())()((((()))))))()()(()())((())()()(()()))((())(((((())()())))))

[17:40] <p6eval> mildew: Can't open perl script "mildew": No such file or directory‚ê§

[17:40] <diakopter> mildew-js: ((())()((())()((((()))))))()()(()())((())()()(()()))((())(((((())()())))))

[17:40] <p6eval> mildew-js: Can't open perl script "mildew": No such file or directory‚ê§

[17:40] <diakopter> o

[17:41] <diakopter> p6eval asciirot

[17:42] *** rfordinal3643 joined
[17:44] <pmurias> diakopter: i don't have access to the evalbot box anymore so i can fix that

[17:46] *** skyheights joined
[17:46] *** mubot left
[17:46] *** zaslon left
[17:46] *** pointme left
[17:46] *** pointme joined
[17:46] *** mubot joined
[17:46] *** zaslon joined
[17:46] <TimToady> botrot

[17:53] *** skyheights left
[17:54] <holli> rakudo: say qp{/usr}

[17:54] <p6eval> rakudo 7f1c3f: Confused at line 2, near "{/usr}"‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[17:54] *** lumi joined
[17:55] <holli> that should work, shouldnt it?

[17:56] *** abra left
[17:57] <masak> yes.

[17:57] <masak> not implemented yet in Rakudo.

[17:57] <masak> std: say qp{/usr}

[17:57] <p6eval> std 29379: ok 00:01 106m‚ê§

[17:58] <holli> so how do i read a directory in rakudo?

[17:58] <masak> you mean list all the files in it?

[17:58] <holli> for example

[17:58] <masak> I'd use something like qx{ ls } right now.

[17:59] <holli> iiek!

[18:00] <masak> 'ilek!'? was that an expression of approbation or distaste? :)

[18:00] <masak> can't keep up with the slang nowadays...

[18:00] <holli> more an expression of panic =)

[18:00] <masak> don't panic :)

[18:05] <holli> yeah, it's mostly harmless

[18:07] <masak> 'The Guide is definitive. Reality is frequently inaccurate.'

[18:08] *** justatheory joined
[18:10] <holli> you gotta love that book.

[18:11] <holli> i like the idea of this sprixel thing. beeing able to use perl6 for both, server and client side, would be definitly sexy.

[18:12] <holli> combined with a neat widget library,,,

[18:12] *** lumi_ left
[18:18] <pugs_svn> r29380 | mberends++ | [vill] portability change malloc.h to stdlib.h, masak++ diakopter++ 

[18:18] <masak> \o/

[18:18] * masak tries new, improved version of vill

[18:19] * mberends crosses fingers and legs

[18:20] <masak> awww. :(

[18:20] <masak> it got to linking this time...

[18:20] <masak> http://gist.github.com/260181

[18:22] <mberends> ok, that's *very* different, not seen such before

[18:23] <mberends> and yet it looks like one detail causes all 151 lines

[18:24] <masak> that sounds like slightly good news...

[18:24] <mberends> the LLVM config is not pointing to a lib directory properly

[18:26] <mberends> that probably would need rebuilding LLVM with a different ./configure parameter

[18:27] <mberends> .oO( where would OS X C++ expect to find lib dirs? )

[18:28] <masak> no idea.

[18:28] <mberends> the --prefix option must be different for OS X

[18:28] <TimToady> I thought llvm didn't really support C++ yet...

[18:29] <mberends> TimToady: it *uses* C++, but is only partly compiling C++

[18:30] <mberends> their greatest achievement so far is a C compiler that adds -O4, optimization across linked code modules

[18:32] <dalek> rakudo/master: 8dc1895 | masak++ | src/setting/Any-str.pm:

[18:32] <dalek> rakudo/master: [Any-str.pm] added method form of eval

[18:32] <dalek> rakudo/master: review: http://github.com/rakudo/rakudo/commit/8dc18950efcde1b9af442709846859490a99ca4b

[18:32] <masak> holli: there you go. if you hang around for half an hour or so, the rakudo evalbot will update, and you can have your method .eval :)

[18:34] <masak> and now, I need to go home and fill up on nutrients. running low on blood sugar...

[18:34] <masak> o/

[18:34] *** masak left
[18:35] *** cotto joined
[18:36] <diakopter> pmurias: it's in pugscode svn

[18:37] <diakopter> it, meaning p6eval botdna

[18:39] <diakopter> pmurias: http://svn.pugscode.org/pugs/misc/evalbot/evalbot.pl

[18:55] *** cottoo joined
[18:56] <holli> seriously, it really takes a linguist to breed the idea of a "logical non negation" as an operator =D

[18:56] *** cotto left
[18:56] <holli> masak: tx

[18:57] *** colomon left
[19:00] <holli> rakudo: my $foo = 'foo { 1 + 2 } bar'; say $foo.eval

[19:00] <p6eval> rakudo 7f1c3f: Method 'eval' not found for invocant of class 'Str'‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[19:00] <holli> p6eval sprixel my $foo = 'foo { 1 + 2 } bar'; say $foo.eval

[19:04] <mberends> holli: try sprixel: ...

[19:04] <holli> sprixel: my $foo = 'foo { 1 + 2 } bar'; say $foo.eval

[19:05] <p6eval> sprixel 29380: NYI: term__S_scope_declarator‚ê§

[19:05] <mberends> sprixel's like that :(

[19:05] <holli> makes me wonder, are the error messages spec'ed?

[19:06] <TimToady> the ones in STD.pm are, more or less

[19:06] <TimToady> to the extent that STD.pm is spec..

[19:06] <TimToady> sprixel: $_ = 'foo { 1 + 2 } bar'; say $_.eval

[19:06] <p6eval> sprixel 29380: NYI: term__S_variable‚ê§

[19:07] <holli> so the same syntax error is supposed to throw the same error in every implementation?

[19:07] <TimToady> sprixel: say 'foo { 1 + 2 } bar'

[19:07] <holli> s/same error/same message/

[19:07] <p6eval> sprixel 29380: NYI: term__S_identifier‚ê§

[19:08] <TimToady> 'is supposed to' is not, strictly speaking, a defined phrase in Standardese... :)

[19:08] <holli> btw, TimToady if you ever happen to be in Freiburg and need a couch, be my guest =)

[19:08] <TimToady> but yeah, more or less :)

[19:09] <TimToady> thanks...I think...

[19:09] <TimToady> I'll have to figure out someplace to put the couch, though...

[19:10] <holli> no need for scepticism. i just need someone to teach me some emacs tricks ^

[19:10] <holli> ^^

[19:10] *** colomon joined
[19:11] <subichan> TimToady: my proposal for perl6: multi tape finite state transducers

[19:12] <TimToady> I like the ^X^Cvi emacs command, myself  :P

[19:14] <subichan> it would be neat and you know it ;)

[19:14] * TimToady has a Pooh-brain that melts easily.

[19:15] <subichan> i know i may be late for proposals but i tried

[19:16] <subichan> it*

[19:16] <TimToady> in what way would this not be possible in a Perl 6 module?

[19:16] <holli> multi tape finite state transducer? sounds like a device from Star Trek (tm)

[19:18] <subichan> everything is possible, but somebody's gotta code it ! as a computational linguist i loved perl, but I longed a lot for two-tape transducers. had to resort to other toolkits for that. now that two-tape is kinda old and perl6 is coming out then i thought that would be a nice thing to add with its own operator or something..

[19:18] <subichan> .. as a multi-tape implementation

[19:19] <subichan> that's been done only with prolog afaik.

[19:22] *** rfordinal3643 left
[19:22] <subichan> perhaps i'm just being too lazy and egoistical

[19:25] <holli> i thought it's possible to invent your own operators in perl6.

[19:26] <subichan> yeah but i wanted it to be official.. you know, like s/// and tr//

[19:26] <colomon> holli: it certainly is possible.

[19:28] <holli> ahhh, good old hybris ;-D

[19:32] <holli> i'm just reading the wikipedia artictle about this tranducer thingie. my head aches.

[19:32] <holli> too much symbols.

[19:32] *** zloyrusskiy joined
[19:33] <TimToady> subichan: speaking of official, what's the official spelling of your name? Â≠êÁæé„ÉÅ„É£„É≥„ÄÅ„Åã„Å™„ÅÇ„ÄÇ„ÄÇ„ÄÇ

[19:34] <TimToady> or is it some other exotic language, like English?

[19:35] <holli> TimToady: you should have called this Mu object Poo. so one could say "everything comes down to poo"

[19:36] <Su-Shee> Mu is cool. I already hooked at least 3 japanologists on Perl 6 because of it. 

[19:37] <holli> .oO( writing perl6 code in kanji)

[19:38] <TimToady> std: say ÁÑ°

[19:38] <p6eval> std 29380: Undeclared routine:‚ê§  'ÁÑ°' used at line 1‚ê§ok 00:01 106m‚ê§

[19:38] <TimToady> hmm

[19:39] <subichan> it's a nickname lol so i wouldn't know how you should really spell it in japanese.. chan is the japanese suffix but the rest is really a nick.. so katakana i guess

[19:41] <TimToady> well, generally 'bi' comes out Áæé 'beauty' in names

[19:41] <TimToady> and 'su' could be any of various things

[19:41] <subichan> haha, no this evolved out of something else

[19:48] *** Psyche^ joined
[19:51] *** justatheory left
[19:56] *** Patterner left
[19:56] *** Psyche^ is now known as Patterner

[20:01] *** nihiliad left
[20:01] *** iblechbot joined
[20:07] *** colomon left
[20:10] *** astoria left
[20:19] *** subichan left
[20:26] *** vamped joined
[20:35] <vamped> is there a preferential file suffix: .pl or .p6 ?

[20:37] <mberends> vamped: .pl because the contents determine 5 or 6

[20:37] <vamped> that's what I thought, but I'm getting my p5 and p6 code mixed up, so I thought maybe .p6

[20:38] <vamped> (until perl6 will run perl5 code)

[20:39] <mberends> use .p6 if you prefer, you'll just encounter minor friction occasionally

[20:39] <mberends> rename when the interoperability lands

[20:40] <vamped> well, maybe I had better conform to the one_true_way ;)

[20:40] <mberends> lots of files in Unix have no extension, and rely on #!/something

[20:41] <vamped> yes. that's another (GOOD) possibility. I think I will do it that way

[20:41] *** nihiliad joined
[20:43] *** y3llow_ joined
[20:49] <PerlJam> for me .pl is still either "prolog" or "perl library"  (ergo, I tend to use .p6 if I use anything at all)

[20:50] <mberends> phenny, tell masak an expert at #llvm said the --prefix=/usr *should* work on OS X as well. "probably something is expecting 32-bit code and using 64-bit or vice versa"

[20:50] <phenny> mberends: I'll pass that on when masak is around.

[20:51] <mberends> are macs schizophrenic?

[20:52] *** IMeMyself left
[20:55] *** y3llow left
[21:00] *** pdcawley left
[21:03] <mberends> diakopter: ping

[21:04] *** xomas joined
[21:05] *** xomas left
[21:06] *** xomas joined
[21:07] <pugs_svn> r29381 | lwall++ | [S02] rough in idea of moritz_++ to have separate type for convenience loopbacks 

[21:07] <pugs_svn> r29381 | also conjecturally put all "last-resort" multis there to see if jnthn++ freaks

[21:07] *** TimToady sets mode: +vvvv buubot dalek hugme iblechbot

[21:07] *** TimToady sets mode: +vvv ilbot2 ilogger2 IRSeekBot

[21:07] *** TimToady sets mode: +vvvv lisppaste3 mubot p6eval phenny

[21:07] *** TimToady sets mode: +vvv pointme pugs_svn zaslon

[21:09] *** TimToady sets mode: +oooo japhb pmichaud_ Su-Shee wayland76

[21:09] *** TimToady sets mode: +oo xinming_ [particle]

[21:27] *** Chillance left
[21:33] *** Exodist left
[21:38] *** colomon joined
[21:52] *** zloyrusskiy left
[21:57] *** meppl joined
[22:06] *** astoria joined
[22:19] *** justatheory joined
[22:27] *** astrojp joined
[22:43] *** MikeD joined
[22:43] *** MikeD left
[22:45] *** subichan joined
[22:46] <moritz_> TimToady++

[23:01] *** Su-Shee left
[23:02] *** colomon left
[23:03] *** lumi_ joined
[23:11] *** subichan left
[23:23] *** lumi left
[23:34] *** astoria left
[23:41] *** colomon joined
[23:44] *** adhoc left
[23:48] *** meteorjay joined
[23:57] *** iblechbot left
[23:59] * holli choses chrome as the one true browser

