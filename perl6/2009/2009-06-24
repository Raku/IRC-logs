[00:00] *** justatheory left
[00:02] *** drbean joined
[00:02] *** jferrero left
[00:13] <pugs_svn> r27192 | lwall++ | [gimme5] fix nested paren counting

[00:16] *** DemoPhreak joined
[00:27] *** eternaleye joined
[00:28] <buu> sjohnson: When would you ever need single character access like you propose?

[00:29] <sjohnson> things like adding IRC colour codes to strings

[00:29] <sjohnson> by making a "wave" colour effect, i think it would be easier to do it with that kind of technology

[00:30] <buu> That may be the least useful example I've ever heard in my life.

[00:30] *** DemoFreak left
[00:30] <buu> s//$color_codes[$i++%@color_codes]/eg

[00:31] <buu> How would index based access even make that any easier?

[00:31] *** DemoFreak joined
[00:31] *** DemoFreak left
[00:33] <sjohnson> well, that is quite well written

[00:34] <sjohnson> i will take a screenshot

[00:34] <sjohnson> then maybe you can suggest a good way to do it

[00:35] <buu> Ok

[00:36] <sjohnson> buu: http://members.shaw.ca/smujohnson/img/screenshots/nickname_ex.PNG

[00:37] <sjohnson> i suppose in this case, you could grab the ^. and .$ regex's

[00:37] <sjohnson> and change their colours that way

[00:37] *** DemoPhreak left
[00:39] <TimToady> my problem with $a[] is that it already means something else most of the time

[00:39] <sjohnson> by that i mean, where Mango-chan goes gray-to-white then white-to-gray

[00:39] <TimToady> so it's type-error prone

[00:39] <sjohnson> is it even worthy of being implemented in some way or form?

[00:39] <sjohnson> or, as buu says, is it not even really needed

[00:40] <TimToady> it would be easy to monkey-type it in if you really need it

[00:40] <TimToady> but substr isn't how most Perl processing works anyway

[00:41] <sjohnson> if you wanted to change "this is a great house" to "this is a great_house" by a simple positional assignment, ie, $string[16] = '_';  the smart way, how would you do it?

[00:41] <sjohnson> without doing s/great house/great_house/;

[00:47] *** Whiteknight left
[00:58] *** sri_kraih_ left
[00:59] *** sri_kraih joined
[01:05] *** synth left
[01:08] *** _jaldhar_ joined
[01:17] *** _jaldhar_ is now known as jaldhar

[01:18] <tarpsocks> sjohnson: pack?

[01:18] <tarpsocks> or substr or something

[01:18] <tarpsocks> idk

[01:18] <tarpsocks> whats the answer

[01:19] <sjohnson> i am wondering what the TimToady way would be as well

[01:23] <sjohnson> or buu

[01:29] *** agentzh left
[01:30] *** agentzh joined
[01:33] <buu> sjohnson: Well, the obvious answer is substr, but I can't recall the last time I've needed to access something via a position

[01:34] <buu> I'm usually far more concerned with meta information surrounding it.

[01:34] *** jaldhar left
[01:34] <sjohnson> buu: ok

[01:35] <buu> sjohnson: As for your screen shot, the lack of regularity makes it appear to be a handcraftede sequence of color characters

[01:35] <sjohnson> i'm not sure what you mean

[01:36] *** cotto joined
[01:36] <buu> Well, if you're just referring to to the 'mango-chan' part, then as you mentioned, it would be easy to use ^ and $ match specific positions.

[01:36] *** payload left
[01:36] <buu> sjohnson: I mean, how would you do with with index access?

[01:36] <buu> You'd have to shift every character to the right so you could insert a color character

[01:37] <sjohnson> well, in all honesty, i thought what i took a screenshot, was much fancier at the time of taking it

[01:37] <sjohnson> what=> when

[01:37] <sjohnson> then realized how dead simple it was

[01:37] <sjohnson> that it only changes the first and last character

[01:38] <buu> sjohnson: The thing is, one of the things I count as a great indicator of my perl ability growing was when I stopped instinctively trying to process strings character by character.

[01:38] <sjohnson> well, i'm listening for sure

[01:38] <sjohnson> and i do like better ways of doing things

[01:38] <buu> Instead of thinking of the string as an array containing characters, I started using operations that took in to account more factors

[01:39] <buu> As to your reference earlier, changing that "great house" string, sure you could do house_string[15] = '_'; but what does that mean to anyone?

[01:39] <buu> And how would you know you wanted position 15?

[01:39] *** athomason left
[01:39] <buu> In a real program you'd use a variable to represent that position. And you'd have to use some kind of search tool to set that variable

[01:40] <buu> Instead you can combine multiple operations in to a single operator

[01:40] <buu> sjohnson: My philosophy of perl can be, to some degree, summed up as writing the smallest amount of code possible, in terms of logical operations.

[01:40] <buu> (Clearly unlike my philosophy of writing arguments out on irc)

[01:42] <sjohnson> i really wish i could think of an examlpe where that would be nice to do, but it seems that you are right, it is not really needed

[01:42] <buu> I mean, I haven't used substr in any of the code I've written in years

[01:43] <buu> Granted I haven't been performing character based color coordinating

[01:43] <buu> But that's such a bizarre corner case I would hide it away in a function and never look at it again.

[01:45] <sjohnson> i'm basically trying to clone the behaviour of that screenshot, into a weechat irc perl plugin, but having seen how easy it is, i regret even showing the screenshot

[01:45] <sjohnson> as i thought that it was much more complex

[01:45] <sjohnson> but not a huge deal, i learned a bit

[01:46] <skids> sjohnson: If you can afford to make one copy, and you know it's a string that can be encoded, I believe the way to do it is with buf8/etc.

[01:47] <skids> And as much as the deep-into-OO folks like to pretend, yes, you do need indexed like that from time to time.

[01:50] *** sri_kraih left
[01:51] <sjohnson> what exactly is... buf8

[01:54] <skids> an array of 8-bit values, packed, which you can encode from a string if it has a small enough charset.

[01:55] <skids> I am not sure how much of it is specced, but if you look back in the IRC logs the past few weeks, there was conversation about that and adding some encoding-savvy types like utf8 as well.

[01:55] *** cotto left
[01:57] <skids> Which would allow you to do what you need, but as far as I know, there has been no discussion as to whether a zero-copy way of getting one (when the underlying string matches) is doable.

[01:58] *** netfish joined
[02:02] *** molaf_x left
[02:02] *** molaf_x joined
[02:02] <sjohnson> cool

[02:03] *** payload joined
[02:03] <tarpsocks> oh my gawd

[02:06] <sjohnson> what

[02:07] *** justatheory joined
[02:09] <skids> .oO(is that a wikked woosta accent?)

[02:22] *** synth joined
[02:22] *** aindilis joined
[02:30] *** meppl joined
[02:38] *** amoc joined
[02:39] *** meppl left
[02:41] *** azawawi joined
[02:41] *** frew left
[02:42] *** KyleHa joined
[02:42] <azawawi> good morning +2gmt zone

[02:47] *** hercynium joined
[02:48] *** jaldhar joined
[02:49] <azawawi> TimToady: ping

[02:51] <azawawi> TimToady: on various tests, im getting Not a reference at ...Cursor.pm line 203. Is line 195 commented on purpose?

[02:52] *** meppl joined
[02:53] *** ihrd joined
[03:01] *** cotto joined
[03:01] *** Limbic_Region left
[03:13] *** araujo joined
[03:14] *** last left
[03:17] *** azawawi left
[03:21] *** meppuru joined
[03:29] *** meppl left
[03:29] *** s1n1 joined
[03:29] *** meppuru is now known as meppl

[03:31] *** s1n1 left
[03:31] *** s1n1 joined
[03:32] <amoc> rakudo: sub foo ([$a,$b]) { ... }

[03:32] <p6eval> rakudo 0e0671: OUTPUT«Malformed routine definition at line 2, near "foo ([$a,$"␤in Main (src/gen_setting.pm:0)␤»

[03:35] *** p6eval left
[03:35] *** xinming left
[03:35] *** baest left
[03:35] *** avar left
[03:35] *** sjohnson left
[03:35] *** s1n left
[03:35] *** Khisanth left
[03:35] *** meppl left
[03:35] *** Gothmog_ left
[03:35] *** cognominal left
[03:35] *** literal left
[03:35] *** japhb left
[03:35] *** jjore_ left
[03:35] *** dukeleto left
[03:35] *** Caelum left
[03:35] *** arnsholt left
[03:35] *** renormalist left
[03:35] *** ihrd left
[03:35] *** synth left
[03:35] *** aindilis left
[03:35] *** agentzh left
[03:35] *** cotto left
[03:35] *** dalek left
[03:35] *** charsbar_ left
[03:35] *** antiphase left
[03:35] *** Tene left
[03:35] *** Molaf left
[03:35] *** Aisling left
[03:35] *** huf left
[03:35] *** meteorjay left
[03:35] *** krunen left
[03:35] *** kolibrie left
[03:35] *** omega left
[03:35] *** KyleHa left
[03:35] *** FurnaceBoy left
[03:35] *** pnu left
[03:35] *** zpmorgan left
[03:35] *** frettled left
[03:35] *** shachaf left
[03:35] *** betterworld left
[03:35] *** breinbaas left
[03:35] *** BinGOs left
[03:35] *** payload left
[03:35] *** molaf_x left
[03:35] *** mj41 left
[03:35] *** c9s left
[03:35] *** mycelium left
[03:35] *** spx2 left
[03:35] *** PacoLinux left
[03:35] *** Gorbad left
[03:35] *** jiing_ left
[03:35] *** ascent_ left
[03:35] *** s1n1 left
[03:35] *** drbean left
[03:35] *** skids_ left
[03:35] *** skids left
[03:35] *** its left
[03:35] *** jonathanturner left
[03:35] *** frodwith left
[03:35] *** rgs left
[03:35] *** cls_bsd left
[03:35] *** nsh left
[03:35] *** allbery_b left
[03:35] *** buubot left
[03:35] *** phenny left
[03:35] *** sbp left
[03:35] *** jaldhar left
[03:35] *** amoc left
[03:35] *** zamolxes left
[03:35] *** alester left
[03:35] *** Jedai left
[03:35] *** nothingmuch left
[03:35] *** solarion left
[03:35] *** tarpsocks left
[03:35] *** broquaint left
[03:35] *** kidd_ left
[03:35] *** moritz_ left
[03:35] *** Maddingue left
[03:35] *** hercynium left
[03:35] *** netfish left
[03:35] *** xomas left
[03:35] *** Patterner left
[03:35] *** Sark23 left
[03:35] *** jan_ left
[03:35] *** acajou left
[03:35] *** awwaiid left
[03:35] *** eternaleye left
[03:35] *** szabgab left
[03:35] *** Eevee left
[03:35] *** r0bby left
[03:35] *** gfldex left
[03:35] *** araujo left
[03:35] *** AzureStone_ left
[03:35] *** PZt left
[03:35] *** pmichaud left
[03:35] *** gbacon left
[03:35] *** m-i-l-a-n left
[03:35] *** Bucciarati left
[03:35] *** justatheory left
[03:35] *** hatseflats left
[03:35] *** rfordinal left
[03:35] *** simcop2387 left
[03:35] *** clkao left
[03:35] *** krakan left
[03:35] *** obra_ left
[03:35] *** andreasg_ left
[03:35] *** kst left
[03:35] *** wolverian left
[03:35] *** bionoid left
[03:35] *** mtve left
[03:35] *** Trey left
[03:35] *** Woody2143 left
[03:35] *** ingy left
[03:35] *** TimToady left
[03:35] *** bloonix left
[03:35] *** Infinoid left
[03:35] *** rafl left
[03:35] *** ilbot2 left
[03:36] *** pmichaud joined
[03:36] *** kolibrie joined
[03:36] *** omega joined
[03:36] *** bigpresh_ joined
[03:36] *** agentzh joined
[03:36] *** synth joined
[03:36] *** aindilis joined
[03:36] *** ihrd joined
[03:36] *** alester_ joined
[03:36] *** s1n1 joined
[03:36] *** meppl joined
[03:36] *** araujo joined
[03:36] *** cotto joined
[03:36] *** jaldhar joined
[03:36] *** hercynium joined
[03:36] *** amoc joined
[03:36] *** justatheory joined
[03:36] *** payload joined
[03:36] *** molaf_x joined
[03:36] *** netfish joined
[03:36] *** eternaleye joined
[03:36] *** drbean joined
[03:36] *** xomas joined
[03:36] *** tarpsocks joined
[03:36] *** zamolxes joined
[03:36] *** szabgab joined
[03:36] *** hatseflats joined
[03:36] *** alester joined
[03:36] *** jan_ joined
[03:36] *** p6eval joined
[03:36] *** xinming joined
[03:36] *** Molaf joined
[03:36] *** mj41 joined
[03:36] *** Patterner joined
[03:36] *** rfordinal joined
[03:36] *** Gothmog_ joined
[03:36] *** c9s joined
[03:36] *** skids_ joined
[03:36] *** cognominal joined
[03:36] *** broquaint joined
[03:36] *** skids joined
[03:36] *** AzureStone_ joined
[03:36] *** bionoid joined
[03:36] *** andreasg_ joined
[03:36] *** literal joined
[03:36] *** PZt joined
[03:36] *** mycelium joined
[03:36] *** japhb joined
[03:36] *** irc.freenode.net sets mode: +o pmichaud

[03:36] *** kst joined
[03:36] *** kidd_ joined
[03:36] *** its joined
[03:36] *** spx2 joined
[03:36] *** acajou joined
[03:36] *** PacoLinux joined
[03:36] *** gbacon joined
[03:36] *** baest joined
[03:36] *** jjore_ joined
[03:36] *** jonathanturner joined
[03:36] *** dukeleto joined
[03:36] *** Caelum joined
[03:36] *** Eevee joined
[03:36] *** frodwith joined
[03:36] *** allbery_b joined
[03:36] *** rgs joined
[03:36] *** cls_bsd joined
[03:36] *** buubot joined
[03:36] *** phenny joined
[03:36] *** nsh joined
[03:36] *** sbp joined
[03:36] *** dalek joined
[03:36] *** Jedai joined
[03:36] *** awwaiid joined
[03:36] *** wolverian joined
[03:36] *** avar joined
[03:36] *** huf joined
[03:36] *** sjohnson joined
[03:36] *** nothingmuch joined
[03:36] *** charsbar_ joined
[03:36] *** s1n joined
[03:36] *** Khisanth joined
[03:36] *** m-i-l-a-n joined
[03:36] *** solarion joined
[03:36] *** simcop2387 joined
[03:36] *** clkao joined
[03:36] *** TimToady joined
[03:36] *** Sark23 joined
[03:36] *** krakan joined
[03:36] *** Gorbad joined
[03:36] *** r0bby joined
[03:36] *** Grrrr joined
[03:36] *** Lorn joined
[03:36] *** ssm joined
[03:36] *** PerlJam joined
[03:36] *** elmex joined
[03:36] *** jrockway joined
[03:36] *** ashizawa joined
[03:36] *** Ingmar joined
[03:36] *** jlaire joined
[03:36] *** pochi joined
[03:36] *** cxreg joined
[03:36] *** pugs_svn joined
[03:36] *** hcchien joined
[03:36] *** irc.freenode.net sets mode: +oo TimToady PerlJam

[03:36] *** LCamel joined
[03:36] *** revdiablo joined
[03:36] *** Helios joined
[03:36] *** estrabd joined
[03:36] *** felipe joined
[03:36] *** scrottie joined
[03:36] *** hexmode joined
[03:36] *** mattp joined
[03:36] *** DQuest joined
[03:36] *** dmpk2k joined
[03:36] *** tomaw- joined
[03:36] *** lisppaste3 joined
[03:36] *** jnthn joined
[03:36] *** Matt-W joined
[03:36] *** cosimo joined
[03:36] *** integral joined
[03:36] *** rhr_ joined
[03:36] *** yves joined
[03:36] *** nnunley joined
[03:36] *** cj joined
[03:36] *** leedo joined
[03:36] *** arnsholt joined
[03:36] *** renormalist joined
[03:36] *** antiphase joined
[03:36] *** Aisling joined
[03:36] *** krunen joined
[03:36] *** Trey joined
[03:36] *** Tene joined
[03:36] *** Infinoid joined
[03:36] *** jiing_ joined
[03:36] *** bloonix joined
[03:36] *** Maddingue joined
[03:36] *** meteorjay joined
[03:36] *** ascent_ joined
[03:36] *** ilbot2 joined
[03:36] *** moritz_ joined
[03:36] *** irc.freenode.net sets mode: +oooo Matt-W Tene Infinoid moritz_

[03:36] *** Bucciarati joined
[03:36] *** ingy joined
[03:36] *** obra_ joined
[03:36] *** gfldex joined
[03:36] *** Woody2143 joined
[03:36] *** mtve joined
[03:36] *** rafl joined
[03:36] *** irc.freenode.net sets mode: +o rafl

[03:37] *** KyleHa joined
[03:37] *** FurnaceBoy joined
[03:37] *** pnu joined
[03:37] *** zpmorgan joined
[03:37] *** kcwu joined
[03:37] *** BinGOs joined
[03:37] *** betterworld joined
[03:37] *** breinbaas joined
[03:37] *** frettled joined
[03:37] *** shachaf joined
[03:38] <pugs_svn> r27193 | kyle++ | [t/spec] Give every autoincrement test a name

[03:39] *** KyleHa left
[04:00] *** s1n1 left
[04:01] *** s1n1 joined
[04:02] *** s1n1 left
[04:14] *** FurnaceBoy left
[04:17] *** skids left
[04:18] *** last joined
[04:18] *** last left
[04:26] *** azawawi joined
[04:27] <azawawi> @tell pmichaud could u please add my blog http://ahmadzawawi.blogspot.com to planetsix?

[04:27] <lambdabot> Consider it noted.

[04:27] *** azawawi left
[04:29] *** xram joined
[04:45] *** mkfort joined
[04:50] *** synth left
[04:50] *** synth joined
[05:04] *** meppl left
[05:05] *** actualeyes joined
[05:10] *** justatheory left
[05:14] *** netfish left
[05:25] *** alester_ left
[05:29] *** zamolxes left
[05:30] *** finanalyst joined
[05:34] *** ejs joined
[05:40] *** synth left
[05:44] *** synth joined
[05:52] *** xram left
[06:03] *** aindilis left
[06:12] *** rfordinal left
[06:12] *** rfordinal joined
[06:14] *** ejs left
[06:21] *** meppl joined
[06:23] *** justatheory joined
[06:24] *** azawawi joined
[06:31] *** hercynium left
[06:32] *** DemoFreak joined
[06:32] *** rfordinal left
[06:35] *** rfordinal joined
[06:36] *** azawawi left
[06:37] *** ejs joined
[06:37] *** iblechbot joined
[06:38] *** justatheory left
[06:48] *** ejs left
[06:51] *** alc joined
[07:02] *** dakkar joined
[07:07] *** rfordinal left
[07:17] *** ejs joined
[07:24] *** viklund joined
[07:26] *** ejs1 joined
[07:35] *** ejs left
[07:48] *** barney joined
[07:52] *** eternaleye left
[07:52] *** eternaleye joined
[07:58] <Matt-W> Morning

[07:58] *** DemoFreak left
[08:06] *** AzureStone joined
[08:06] *** AzureStone_ left
[08:19] <amoc> morning!

[08:20] <moritz_> good morning, fellow sytanxcamels

[08:28] *** ihrd left
[08:32] <Matt-W> :)

[08:39] <Matt-W> Woops

[08:39] <Matt-W> I've started writing 'my' for variable declarations in C++ again

[08:39] <Matt-W> the compiler's not happy

[08:48] <avar> #define my

[08:51] <sjohnson> i've done that before

[08:51] <sjohnson> especially in PHP

[08:54] <avar> Using the C preprocessor for PHP?

[08:55] <sjohnson> yes

[08:56] *** actualeyes left
[08:57] <sjohnson> by that i mean, doing Matt-W's mistake, not your solution, avar 

[08:57] <sjohnson> well time to spank off and go to bed.. cya guys

[08:58] <Matt-W> I think my brain was thinking "Oh I wish I had C++0x's auto variables" while typing out the type of an STL iterator, then it somehow picked up the knowledge of untyped variable declarations from Perl and wrote one of those

[09:10] <frettled> *unidle* (merely 45 days) :)

[09:10] <frettled> Darnit, life should be different and leave more time for Perl 6.

[09:11] *** rfordinal joined
[09:19] *** agentzh left
[09:19] *** alc left
[09:27] *** agentzh joined
[09:27] *** zamolxes joined
[09:28] *** donaldh joined
[09:30] <Matt-W> frettled: I agree. Now try telling that to my boss and my insurance company.

[09:31] *** finanalyst left
[09:31] <Matt-W> frettled: Actually, what would be better is if my boss paid us to do Perl 6.

[09:31] <frettled> Matt-W: \o/

[09:32] *** bacek joined
[09:32] <frettled> I have a really bad conscience about not getting round to providing a fix for the handling of complex numbers (I've suggested the fix, but not written the necessary spec diffs etc.), and I also just never get the time to sit down and get comfy with even simple programming.

[09:33] <frettled> But that's how it is with bumps in life; it never rains, it pours.

[09:33] *** payload left
[09:34] *** iblechbot left
[09:34] <Matt-W> Yes I got a bucket dumped on me the last month or so

[09:35] <Matt-W> Hence very little time for Form.pm. I get home and I have no energy left or I have to phone someone up and yell at them

[09:37] *** twigil joined
[09:37] <frettled> Have 􏿽xABwe􏿽xBB gotten any further with packaging, BTW?  (New CPAN?  .deb format?  RPM format?  Something new?)

[09:41] <Matt-W> Not that I'm aware of

[09:43] *** frew joined
[09:50] *** synth left
[09:51] *** synth joined
[09:59] <frettled> Ah, well, at least I'm blogging inanely once every week or so.  I _really_ want to decide which colour mst's hair should be.

[10:10] *** payload joined
[10:16] *** jlmoko joined
[10:16] *** last joined
[10:17] *** iblechbot joined
[10:18] <jlmoko> Hi. Is Anybody testing perl6 on ARM

[10:20] *** lichtkind joined
[10:23] *** bacek left
[10:24] *** synth left
[10:28] *** frew left
[10:40] *** rfordinal left
[10:40] *** rfordinal joined
[10:41] *** Patterner left
[10:50] *** mizioumt joined
[10:54] <lichtkind> mb

[10:55] <lichtkind> i mean still 24 fidderences

[10:55] <lichtkind> arrg diff

[11:00] *** rfordinal left
[11:02] *** rjh joined
[11:05] <Infinoid> jlmoko: Not that I know of.  Doing that with rakudo will become easier once parrot supports cross compilation; I'm not sure about the other perl6 variants

[11:11] <jlmoko> Infinoid: I compiled yesterday rakudo-2009-06 on an openmoko neo Freeruner & run the test ok but spectest gived me a nice kernel panic

[11:13] <jlmoko> Infinoid: I suspect it comes from not having  memory . Is It possible?

[11:20] *** donaldh left
[11:21] *** donaldh joined
[11:22] *** synth joined
[11:23] *** beggars joined
[11:26] *** payload left
[11:26] *** cognominal left
[11:29] <Infinoid> jlmoko: Yeah, it's definitely possible.

[11:30] <Infinoid> (how much do you have?)

[11:33] <Infinoid> Parrot itself hasn't received a lot of testing on ARM... there's one guy (from the netbsd pkgsrc team) who smoke tested it on netbsd4.0 in May, but that's all

[11:33] <Infinoid> I think he was running on a netwinder; openmoko neo sounds smaller

[11:36] *** mycelium left
[11:36] *** synth left
[11:39] *** beggars left
[11:42] *** iblechbot left
[11:42] <jlmoko> Infinoid: I testing and building it with a 2.6.29 linux kernel.  free -m gives a total of 117 RAM and 1023 swap ( on a micro HDSD)

[11:43] *** synth joined
[11:45] <Infinoid> hmm, ok

[11:45] <jlmoko> Infinoid:  I sufered some kills from low memory when building rakudo but no kernel panic.

[11:45] <Infinoid> jlmoko: Sorry, I have to go

[11:45] <Infinoid> binary and memory sizes should be more or less comparable to x86

[11:45] <Infinoid> But yeah, it's a bit big at the moment

[11:45] <Infinoid> back later &

[11:46] <pmichaud> @tell azawawi I'm not the person who manages planetsix, but I'll forward your request.

[11:46] <lambdabot> Consider it noted.

[11:51] *** sri_kraih joined
[11:52] *** payload joined
[11:55] *** payload left
[11:59] *** frettled left
[11:59] *** shachaf left
[11:59] *** betterworld left
[11:59] *** breinbaas left
[11:59] *** zpmorgan left
[11:59] *** BinGOs left
[11:59] *** kcwu left
[11:59] *** pnu left
[11:59] *** bigpresh_ left
[11:59] *** kolibrie left
[11:59] *** omega left
[11:59] *** s1n left
[11:59] *** baest left
[11:59] *** xinming left
[11:59] *** Khisanth left
[11:59] *** p6eval left
[11:59] *** sjohnson left
[11:59] *** avar left
[11:59] *** meppl left
[11:59] *** felipe left
[11:59] *** Gothmog_ left
[11:59] *** jlaire left
[11:59] *** integral left
[11:59] *** synth left
[11:59] *** zamolxes left
[11:59] *** mkfort left
[11:59] *** renormalist left
[11:59] *** arnsholt left
[11:59] *** japhb left
[11:59] *** Caelum left
[11:59] *** dukeleto left
[11:59] *** jjore_ left
[11:59] *** literal left
[11:59] *** sri_kraih left
[11:59] *** AzureStone left
[11:59] *** cotto left
[11:59] *** antiphase left
[11:59] *** charsbar_ left
[11:59] *** PerlJam left
[11:59] *** Tene left
[11:59] *** dalek left
[11:59] *** Matt-W left
[11:59] *** Molaf left
[11:59] *** nnunley left
[11:59] *** huf left
[11:59] *** Aisling left
[11:59] *** meteorjay left
[11:59] *** krunen left
[11:59] *** mizioumt left
[11:59] *** agentzh left
[11:59] *** jnthn left
[11:59] *** hexmode left
[11:59] *** scrottie left
[11:59] *** Gorbad left
[11:59] *** spx2 left
[11:59] *** molaf_x left
[11:59] *** yves left
[11:59] *** jiing_ left
[11:59] *** ascent_ left
[11:59] *** c9s left
[11:59] *** ashizawa left
[11:59] *** elmex left
[11:59] *** PacoLinux left
[11:59] *** mj41 left
[11:59] *** last left
[11:59] *** jlmoko left
[11:59] *** barney left
[11:59] *** rgs left
[11:59] *** jonathanturner left
[11:59] *** its left
[11:59] *** skids_ left
[11:59] *** frodwith left
[11:59] *** nsh left
[11:59] *** cls_bsd left
[11:59] *** allbery_b left
[11:59] *** drbean left
[11:59] *** buubot left
[11:59] *** phenny left
[11:59] *** sbp left
[11:59] *** pugs_svn left
[11:59] *** cxreg left
[11:59] *** jaldhar left
[11:59] *** amoc left
[11:59] *** nothingmuch left
[11:59] *** solarion left
[11:59] *** hcchien left
[11:59] *** pochi left
[11:59] *** Jedai left
[11:59] *** alester left
[11:59] *** cosimo left
[11:59] *** DQuest left
[11:59] *** revdiablo left
[11:59] *** moritz_ left
[11:59] *** broquaint left
[11:59] *** kidd_ left
[11:59] *** Maddingue left
[11:59] *** tarpsocks left
[11:59] *** lichtkind left
[11:59] *** ejs1 left
[11:59] *** xomas left
[11:59] *** Sark23 left
[11:59] *** lisppaste3 left
[11:59] *** twigil left
[11:59] *** viklund left
[11:59] *** cj left
[11:59] *** jan_ left
[11:59] *** Lorn left
[11:59] *** Ingmar left
[11:59] *** acajou left
[11:59] *** awwaiid left
[11:59] *** ssm left
[11:59] *** donaldh left
[11:59] *** rjh left
[11:59] *** leedo left
[11:59] *** Eevee left
[11:59] *** Helios left
[11:59] *** szabgab left
[11:59] *** gfldex left
[11:59] *** r0bby left
[11:59] *** eternaleye left
[11:59] *** Grrrr left
[11:59] *** pmichaud left
[11:59] *** PZt left
[11:59] *** jrockway left
[11:59] *** Bucciarati left
[11:59] *** m-i-l-a-n left
[11:59] *** araujo left
[11:59] *** gbacon left
[11:59] *** dakkar left
[11:59] *** obra_ left
[11:59] *** rhr_ left
[11:59] *** krakan left
[11:59] *** hatseflats left
[11:59] *** clkao left
[11:59] *** simcop2387 left
[11:59] *** estrabd left
[11:59] *** bionoid left
[11:59] *** mtve left
[11:59] *** dmpk2k left
[11:59] *** wolverian left
[11:59] *** Trey left
[11:59] *** kst left
[11:59] *** Woody2143 left
[11:59] *** ingy left
[11:59] *** andreasg_ left
[11:59] *** LCamel left
[11:59] *** tomaw- left
[11:59] *** bloonix left
[11:59] *** Infinoid left
[11:59] *** TimToady left
[11:59] *** mattp left
[11:59] *** rafl left
[11:59] *** ilbot2 left
[12:00] *** pmichaud joined
[12:00] *** sri_kraih joined
[12:00] *** synth joined
[12:00] *** donaldh joined
[12:00] *** rjh joined
[12:00] *** mizioumt joined
[12:00] *** lichtkind joined
[12:00] *** last joined
[12:00] *** jlmoko joined
[12:00] *** twigil joined
[12:00] *** zamolxes joined
[12:00] *** agentzh joined
[12:00] *** AzureStone joined
[12:00] *** eternaleye joined
[12:00] *** barney joined
[12:00] *** ejs1 joined
[12:00] *** viklund joined
[12:00] *** dakkar joined
[12:00] *** meppl joined
[12:00] *** mkfort joined
[12:00] *** shachaf joined
[12:00] *** frettled joined
[12:00] *** breinbaas joined
[12:00] *** betterworld joined
[12:00] *** BinGOs joined
[12:00] *** kcwu joined
[12:00] *** zpmorgan joined
[12:00] *** pnu joined
[12:00] *** kolibrie joined
[12:00] *** omega joined
[12:00] *** bigpresh_ joined
[12:00] *** araujo joined
[12:00] *** cotto joined
[12:00] *** jaldhar joined
[12:00] *** amoc joined
[12:00] *** molaf_x joined
[12:00] *** drbean joined
[12:00] *** xomas joined
[12:00] *** tarpsocks joined
[12:00] *** szabgab joined
[12:00] *** hatseflats joined
[12:00] *** alester joined
[12:00] *** jan_ joined
[12:00] *** p6eval joined
[12:00] *** xinming joined
[12:00] *** Molaf joined
[12:00] *** mj41 joined
[12:00] *** Gothmog_ joined
[12:00] *** c9s joined
[12:00] *** skids_ joined
[12:00] *** irc.freenode.net sets mode: +o pmichaud

[12:00] *** broquaint joined
[12:00] *** bionoid joined
[12:00] *** andreasg_ joined
[12:00] *** literal joined
[12:00] *** PZt joined
[12:00] *** japhb joined
[12:00] *** kst joined
[12:00] *** kidd_ joined
[12:00] *** its joined
[12:00] *** spx2 joined
[12:00] *** acajou joined
[12:00] *** PacoLinux joined
[12:00] *** gbacon joined
[12:00] *** baest joined
[12:00] *** jjore_ joined
[12:00] *** jonathanturner joined
[12:00] *** dukeleto joined
[12:00] *** Caelum joined
[12:00] *** Eevee joined
[12:00] *** frodwith joined
[12:00] *** allbery_b joined
[12:00] *** rgs joined
[12:00] *** cls_bsd joined
[12:00] *** buubot joined
[12:00] *** phenny joined
[12:00] *** nsh joined
[12:00] *** sbp joined
[12:00] *** dalek joined
[12:00] *** Jedai joined
[12:00] *** awwaiid joined
[12:00] *** wolverian joined
[12:00] *** avar joined
[12:00] *** huf joined
[12:00] *** sjohnson joined
[12:00] *** nothingmuch joined
[12:00] *** charsbar_ joined
[12:00] *** s1n joined
[12:00] *** Khisanth joined
[12:00] *** m-i-l-a-n joined
[12:00] *** solarion joined
[12:00] *** simcop2387 joined
[12:00] *** clkao joined
[12:00] *** TimToady joined
[12:00] *** Sark23 joined
[12:00] *** krakan joined
[12:00] *** Gorbad joined
[12:00] *** r0bby joined
[12:00] *** Grrrr joined
[12:00] *** Lorn joined
[12:00] *** ssm joined
[12:00] *** PerlJam joined
[12:00] *** elmex joined
[12:00] *** jrockway joined
[12:00] *** irc.freenode.net sets mode: +oo TimToady PerlJam

[12:00] *** ashizawa joined
[12:00] *** Ingmar joined
[12:00] *** jlaire joined
[12:00] *** pochi joined
[12:00] *** cxreg joined
[12:00] *** pugs_svn joined
[12:00] *** hcchien joined
[12:00] *** LCamel joined
[12:00] *** revdiablo joined
[12:00] *** Helios joined
[12:00] *** estrabd joined
[12:00] *** felipe joined
[12:00] *** scrottie joined
[12:00] *** hexmode joined
[12:00] *** mattp joined
[12:00] *** DQuest joined
[12:00] *** dmpk2k joined
[12:00] *** tomaw- joined
[12:00] *** lisppaste3 joined
[12:00] *** jnthn joined
[12:00] *** Matt-W joined
[12:00] *** cosimo joined
[12:00] *** integral joined
[12:00] *** rhr_ joined
[12:00] *** yves joined
[12:00] *** nnunley joined
[12:00] *** cj joined
[12:00] *** leedo joined
[12:00] *** arnsholt joined
[12:00] *** renormalist joined
[12:00] *** antiphase joined
[12:00] *** Aisling joined
[12:00] *** krunen joined
[12:00] *** Trey joined
[12:00] *** Tene joined
[12:00] *** Infinoid joined
[12:00] *** jiing_ joined
[12:00] *** bloonix joined
[12:00] *** Maddingue joined
[12:00] *** meteorjay joined
[12:00] *** ascent_ joined
[12:00] *** ilbot2 joined
[12:00] *** moritz_ joined
[12:00] *** irc.freenode.net sets mode: +oooo Matt-W Tene Infinoid moritz_

[12:00] *** Bucciarati joined
[12:00] *** ingy joined
[12:00] *** obra_ joined
[12:00] *** gfldex joined
[12:00] *** Woody2143 joined
[12:00] *** mtve joined
[12:00] *** rafl joined
[12:00] *** irc.freenode.net sets mode: +o rafl

[12:01] <frettled> neat, but is it useful?  :D

[12:01] <TimToady> the main difference is that :e is parsing as a term, not where an infix is expected

[12:01] <TimToady> so it's simply dispatching to Pair.ACCEPTS

[12:02] *** jferrero joined
[12:03] *** pmurias joined
[12:12] *** frettled left
[12:12] *** kcwu left
[12:12] *** shachaf left
[12:12] *** betterworld left
[12:12] *** zpmorgan left
[12:12] *** breinbaas left
[12:12] *** BinGOs left
[12:12] *** pnu left
[12:12] *** bigpresh_ left
[12:12] *** kolibrie left
[12:12] *** omega left
[12:12] *** s1n left
[12:12] *** baest left
[12:12] *** xinming left
[12:12] *** Khisanth left
[12:12] *** p6eval left
[12:12] *** sjohnson left
[12:12] *** avar left
[12:12] *** felipe left
[12:12] *** Gothmog_ left
[12:12] *** meppl left
[12:12] *** jlaire left
[12:12] *** integral left
[12:12] *** renormalist left
[12:12] *** arnsholt left
[12:12] *** japhb left
[12:12] *** mkfort left
[12:12] *** zamolxes left
[12:12] *** synth left
[12:12] *** Caelum left
[12:12] *** dukeleto left
[12:12] *** jjore_ left
[12:12] *** literal left
[12:12] *** cotto left
[12:12] *** sri_kraih left
[12:12] *** antiphase left
[12:12] *** charsbar_ left
[12:12] *** PerlJam left
[12:12] *** Tene left
[12:12] *** dalek left
[12:12] *** AzureStone left
[12:12] *** Matt-W left
[12:12] *** Molaf left
[12:12] *** nnunley left
[12:12] *** huf left
[12:12] *** Aisling left
[12:12] *** meteorjay left
[12:12] *** krunen left
[12:12] *** pmurias left
[12:12] *** jferrero left
[12:12] *** jnthn left
[12:12] *** hexmode left
[12:12] *** scrottie left
[12:12] *** Gorbad left
[12:12] *** spx2 left
[12:12] *** molaf_x left
[12:12] *** yves left
[12:12] *** jiing_ left
[12:12] *** ascent_ left
[12:12] *** c9s left
[12:12] *** mizioumt left
[12:12] *** ashizawa left
[12:12] *** elmex left
[12:12] *** PacoLinux left
[12:12] *** agentzh left
[12:12] *** mj41 left
[12:12] *** rgs left
[12:12] *** jonathanturner left
[12:12] *** its left
[12:12] *** skids_ left
[12:12] *** last left
[12:12] *** frodwith left
[12:12] *** nsh left
[12:12] *** cls_bsd left
[12:12] *** barney left
[12:12] *** jlmoko left
[12:12] *** allbery_b left
[12:12] *** drbean left
[12:12] *** buubot left
[12:12] *** phenny left
[12:12] *** sbp left
[12:12] *** pugs_svn left
[12:12] *** cxreg left
[12:12] *** jaldhar left
[12:12] *** amoc left
[12:12] *** nothingmuch left
[12:12] *** solarion left
[12:12] *** hcchien left
[12:12] *** pochi left
[12:12] *** Jedai left
[12:12] *** alester left
[12:12] *** cosimo left
[12:12] *** DQuest left
[12:12] *** revdiablo left
[12:12] *** moritz_ left
[12:12] *** broquaint left
[12:12] *** kidd_ left
[12:12] *** Maddingue left
[12:12] *** tarpsocks left
[12:12] *** ejs1 left
[12:12] *** xomas left
[12:12] *** lichtkind left
[12:12] *** Sark23 left
[12:12] *** lisppaste3 left
[12:12] *** twigil left
[12:12] *** viklund left
[12:12] *** cj left
[12:12] *** jan_ left
[12:12] *** Lorn left
[12:12] *** Ingmar left
[12:12] *** acajou left
[12:12] *** awwaiid left
[12:12] *** ssm left
[12:12] *** leedo left
[12:12] *** Eevee left
[12:12] *** rjh left
[12:12] *** donaldh left
[12:12] *** Helios left
[12:12] *** szabgab left
[12:12] *** gfldex left
[12:12] *** r0bby left
[12:12] *** Grrrr left
[12:12] *** pmichaud left
[12:12] *** PZt left
[12:12] *** jrockway left
[12:12] *** Bucciarati left
[12:12] *** eternaleye left
[12:12] *** m-i-l-a-n left
[12:12] *** araujo left
[12:12] *** gbacon left
[12:12] *** obra_ left
[12:12] *** rhr_ left
[12:12] *** krakan left
[12:12] *** dakkar left
[12:12] *** hatseflats left
[12:12] *** clkao left
[12:12] *** simcop2387 left
[12:12] *** estrabd left
[12:12] *** bionoid left
[12:12] *** mtve left
[12:12] *** dmpk2k left
[12:12] *** wolverian left
[12:12] *** Trey left
[12:12] *** kst left
[12:12] *** Woody2143 left
[12:12] *** ingy left
[12:12] *** andreasg_ left
[12:12] *** LCamel left
[12:12] *** tomaw- left
[12:12] *** bloonix left
[12:12] *** Infinoid left
[12:12] *** TimToady left
[12:12] *** mattp left
[12:12] *** rafl left
[12:12] *** ilbot2 left
[12:14] *** pmichaud joined
[12:14] *** pmurias joined
[12:14] *** jferrero joined
[12:14] *** sri_kraih joined
[12:14] *** synth joined
[12:14] *** donaldh joined
[12:14] *** rjh joined
[12:14] *** mizioumt joined
[12:14] *** lichtkind joined
[12:14] *** last joined
[12:14] *** jlmoko joined
[12:14] *** twigil joined
[12:14] *** zamolxes joined
[12:14] *** agentzh joined
[12:14] *** AzureStone joined
[12:14] *** eternaleye joined
[12:14] *** barney joined
[12:14] *** ejs1 joined
[12:14] *** viklund joined
[12:14] *** dakkar joined
[12:14] *** meppl joined
[12:14] *** mkfort joined
[12:14] *** shachaf joined
[12:14] *** frettled joined
[12:14] *** breinbaas joined
[12:14] *** betterworld joined
[12:14] *** BinGOs joined
[12:14] *** kcwu joined
[12:14] *** zpmorgan joined
[12:14] *** pnu joined
[12:14] *** kolibrie joined
[12:14] *** omega joined
[12:14] *** bigpresh_ joined
[12:14] *** araujo joined
[12:14] *** cotto joined
[12:14] *** jaldhar joined
[12:14] *** amoc joined
[12:14] *** molaf_x joined
[12:14] *** drbean joined
[12:14] *** xomas joined
[12:14] *** tarpsocks joined
[12:14] *** szabgab joined
[12:14] *** hatseflats joined
[12:14] *** alester joined
[12:14] *** jan_ joined
[12:14] *** p6eval joined
[12:14] *** xinming joined
[12:14] *** Molaf joined
[12:14] *** mj41 joined
[12:14] *** Gothmog_ joined
[12:14] *** irc.freenode.net sets mode: +o pmichaud

[12:14] *** c9s joined
[12:14] *** skids_ joined
[12:14] *** broquaint joined
[12:14] *** bionoid joined
[12:14] *** andreasg_ joined
[12:14] *** literal joined
[12:14] *** PZt joined
[12:14] *** japhb joined
[12:14] *** kst joined
[12:14] *** kidd_ joined
[12:14] *** its joined
[12:14] *** spx2 joined
[12:14] *** acajou joined
[12:14] *** PacoLinux joined
[12:14] *** gbacon joined
[12:14] *** baest joined
[12:14] *** jjore_ joined
[12:14] *** jonathanturner joined
[12:14] *** dukeleto joined
[12:14] *** Caelum joined
[12:14] *** Eevee joined
[12:14] *** frodwith joined
[12:14] *** allbery_b joined
[12:14] *** rgs joined
[12:14] *** cls_bsd joined
[12:14] *** buubot joined
[12:14] *** phenny joined
[12:14] *** nsh joined
[12:14] *** sbp joined
[12:14] *** dalek joined
[12:14] *** Jedai joined
[12:14] *** awwaiid joined
[12:14] *** wolverian joined
[12:14] *** avar joined
[12:14] *** huf joined
[12:14] *** sjohnson joined
[12:14] *** nothingmuch joined
[12:14] *** charsbar_ joined
[12:14] *** s1n joined
[12:14] *** Khisanth joined
[12:14] *** m-i-l-a-n joined
[12:14] *** solarion joined
[12:14] *** simcop2387 joined
[12:14] *** clkao joined
[12:14] *** TimToady joined
[12:14] *** Sark23 joined
[12:14] *** krakan joined
[12:14] *** Gorbad joined
[12:14] *** r0bby joined
[12:14] *** Grrrr joined
[12:14] *** Lorn joined
[12:14] *** ssm joined
[12:14] *** PerlJam joined
[12:14] *** elmex joined
[12:14] *** irc.freenode.net sets mode: +oo TimToady PerlJam

[12:14] *** jrockway joined
[12:14] *** ashizawa joined
[12:14] *** Ingmar joined
[12:14] *** jlaire joined
[12:14] *** pochi joined
[12:14] *** cxreg joined
[12:14] *** pugs_svn joined
[12:14] *** hcchien joined
[12:14] *** LCamel joined
[12:14] *** revdiablo joined
[12:14] *** Helios joined
[12:14] *** estrabd joined
[12:14] *** felipe joined
[12:14] *** scrottie joined
[12:14] *** hexmode joined
[12:14] *** mattp joined
[12:14] *** DQuest joined
[12:14] *** dmpk2k joined
[12:14] *** tomaw- joined
[12:14] *** lisppaste3 joined
[12:14] *** jnthn joined
[12:14] *** Matt-W joined
[12:14] *** cosimo joined
[12:14] *** integral joined
[12:14] *** rhr_ joined
[12:14] *** yves joined
[12:14] *** nnunley joined
[12:14] *** cj joined
[12:14] *** leedo joined
[12:14] *** arnsholt joined
[12:14] *** renormalist joined
[12:14] *** antiphase joined
[12:14] *** Aisling joined
[12:14] *** krunen joined
[12:14] *** Trey joined
[12:14] *** Tene joined
[12:14] *** Infinoid joined
[12:14] *** jiing_ joined
[12:14] *** bloonix joined
[12:14] *** Maddingue joined
[12:14] *** meteorjay joined
[12:14] *** ascent_ joined
[12:14] *** ilbot2 joined
[12:14] *** moritz_ joined
[12:14] *** irc.freenode.net sets mode: +oooo Matt-W Tene Infinoid moritz_

[12:14] *** Bucciarati joined
[12:14] *** ingy joined
[12:14] *** obra_ joined
[12:14] *** gfldex joined
[12:14] *** Woody2143 joined
[12:14] *** mtve joined
[12:14] *** rafl joined
[12:14] *** irc.freenode.net sets mode: +o rafl

[12:15] <frettled> what, aren't you allowed to focus on chatting?  tch, tch.  ;)

[12:24] *** hercynium joined
[12:28] *** Psyche^ joined
[12:29] *** Psyche^ is now known as Patterner

[12:34] *** masak joined
[12:34] <masak> ahoj!

[12:37] <pmichaud> hello, masak!

[12:37] <lambdabot> pmichaud: You have 3 new messages. '/msg lambdabot @messages' to read them.

[12:37] * masak is the busy today

[12:38] * Matt-W is the man who keeps accidentally slipping Perl 6-isms into his C++ today

[12:39] <Matt-W> not only was I prefixing my variable declarations with 'my', I also got halfway through invoking join on a std::vector before I realised they don't have that

[12:39] <Matt-W> despite its incredible utility

[12:40] <masak> Matt-W: have you been writing that much Perl 6 lately? :)

[12:41] <masak> I occasionally do similar things in Java, but it happens less and less often. the compartments in my brain are getting better at insulating themselves.

[12:42] *** skids joined
[12:42] <frettled> masak: is that a good thing or a bad thing?

[12:42] <masak> frettled: when it comes to writing the appropriate syntax, definitely a good thing.

[12:42] <Matt-W> masak: no! It's just in my head because it's so cool.

[12:43] <masak> frettled: I still try to let myself be inspired by _ideas_ from other languages.

[12:43] <frettled> masak: :)

[12:43] <masak> ...sometimes to the dismay of my colleagues. :P

[12:43] <Matt-W> And this code I'm writing right now would be so amazingly awesome in Perl 6

[12:43] <Matt-W> masak: heh I do that too

[12:43] <masak> did you know that you can call variables '_' in Java? :)

[12:43] <masak> (sans quotes)

[12:43] <Matt-W> At my last job I entertained them all by implementing the Maybe monad from Haskell in C++ and using it extensively in the configuration system

[12:43] <Matt-W> but it worked beautifully

[12:43] <Matt-W> masak: I did not

[12:44] <masak> very handy for small loops.

[12:44] * Matt-W makes a note of that

[12:44] <frettled> hee-hee

[12:44] <masak> I also tend to write public static void main(String[] _) if I don't intend to use the arguments.

[12:44] <frettled> My goodness, the Java deities will strike you down!

[12:45] <masak> bah.

[12:45] <Matt-W> in Haskell, _ is what you say when you want to ignore a parameter

[12:45] <Matt-W> so that appeals to me

[12:45] <masak> yes, indeed.

[12:45] *** nErVe joined
[12:48] *** tarpsocks left
[12:49] *** tarpsocks joined
[12:56] *** pmurias left
[12:57] *** iblechbot joined
[13:07] *** ejs1 left
[13:08] *** cosimo left
[13:08] *** cosimo joined
[13:10] *** s1n1 joined
[13:10] *** s1n1 is now known as s1n_yapc

[13:20] *** nErVe left
[13:23] *** payload joined
[13:30] *** jlmoko is now known as jlmoko_away

[13:33] <moritz_> Matt-W: aren't all C++ objects Maybe by default? (ie they can be NULL)

[13:34] *** jlmoko_away left
[13:36] *** rfordinal joined
[13:38] <Matt-W> moritz_: no, that's just pointers

[13:38] <moritz_> Matt-W: ah, right

[13:39] <Matt-W> and one doesn't always wish to handle objects using pointers

[13:39] <Matt-W> in fact, it's something that's better to avoid

[13:39] <Matt-W> they are of course very useful in the right places

[13:42] <masak> 'every problem in software...'

[13:44] <masak> hm, the quote seems to be 'Any problem in software can be solved by adding another layer of indirection.'

[13:45] <masak> the subtext being, that just because you always can solve it that way doesn't mean that it's a good idea.

[13:45] <rgs> masak: you're looking for RFC 1925

[13:46] *** KyleHa joined
[13:47] <masak> rgs: aye, seems I am.

[13:47] *** FurnaceBoy joined
[13:47] *** FurnaceBoy left
[13:48] *** FurnaceBoy joined
[13:51] <moritz_> pmichaud: how where your talks?

[13:54] <masak> 'were', even. English orthography is hard. :/

[13:54] <sbp> wur

[13:54] <masak> :)

[13:54] * masak likes that better

[13:54] <masak> let's change it to 'wur' before 'were' becomes widespread!

[13:54] <skids> masak: lolspeak is much easier.

[13:54] <sbp> good idea, get in there early

[13:55] <masak> skids: I don't see lolspeak orthography as something that has stabilised yet. it's still in the Chaucer stage of languages.

[13:55] <masak> srsly.

[13:55] <sbp> you could even argue that 3 is a neoyogh

[13:56] <sbp> though that makes lȝȝt hard to pronounce...

[13:56] * skids doesn't have to look that up to know how horrible a pun it must be.

[13:56] <sbp> transcendentally horrible

[13:57] <moritz_> but we know for sure that it'll be all upper case.

[13:57] *** r0bby left
[13:58] *** r0bby joined
[13:59] <sbp> the strange thing about lolspeak is that it's the first language whose changes and fluidity are linked to the orthographical conventions rather than the underlying phonology of the language

[13:59] <sbp> so from that point of view it's fascinating

[13:59] <sbp> for example, owned became pwned because p is next to o on the keyboard

[13:59] <sbp> and that gradually became pwnt, which is difficult to pronounce

[13:59] <pmichaud> moritz_: I don't know how my talks were -- I didn't get to see them.  :-)

[14:00] *** s1n_yapc left
[14:00] <sbp> nor do people generally say things like "lol" in real life, though there is a Malaysian (or Indonesian? somewhere around there) tagword "lah" which acts surprisingly similarly

[14:00] <moritz_> pmichaud: but didn't youg get some kind of feedback?

[14:00] <sbp> (as a grammatical softener particle)

[14:00] <sbp> could be a feature for perl6

[14:01] <sbp> "lah" at the end of a line to get the interpreter to not take a line too seriously

[14:01] <huf> sbp: depends on people

[14:01] <huf> we say lol a lot

[14:01] <sbp> or use lah; as the opposite of use strict;

[14:01] <pmichaud> I think I have a fix to #66826 -- spectesting it now.

[14:01] <huf> i tend to use omg, wtf and lol in real speech

[14:02] <pmichaud> moritz_: I'm guessing the talks went pretty well.  As usual, I had more slides than available time.  :-)

[14:02] <huf> altho i pronounce them "in hungarian"... as far as you can pronounce acronyms in any language

[14:02] <masak> pmichaud: better that way than the opposite. :)

[14:02] <sbp> huf: hehe

[14:02] <pmichaud> masak: it's been a _long_ time since I had more time than material.  

[14:02] <huf> so wtf becomes wuh-tuh-fuh :)

[14:03] *** r0bby left
[14:03] *** r0bby joined
[14:03] <masak> pmichaud: tomorrow I'm to hold a four-hour lecture on Perl (5). I hope to have that problem then. :)

[14:03] <sbp> I'd do it in Welsh and make it be "ootv"

[14:03] <pmichaud> four hours would be a bit long, yes.

[14:04] <masak> actually, it's two two-hour lectures.

[14:04] <huf> sbp: ;)))

[14:04] <pmichaud> oh.  Much easier, then.

[14:04] <masak> :)

[14:04] <masak> how so?

[14:04] <sbp> you can pee in the middle

[14:04] <pmichaud> I think I could do two 2-hour lectures no problem.  The problem there becomes audience attention span.

[14:04] <masak> aye, true.

[14:05] <frettled> attention what?  look, there's a new feature!

[14:05] <pmichaud> altogether, my three YAPC presentations added up to 2h30, and I easily had another 15-20 mins of each

[14:05] <PerlJam> pmichaud: sound effects and visual discontinuities help :)

[14:05] <pmichaud> PerlJam: agreed, but there's also a reason why movies and entertainment programs don't run much longer than 2h30 :-)

[14:06] <masak> maybe I'll bring chocolate. that tends to get people's attention.

[14:06] <pmichaud> rewards help.

[14:06] <pmichaud> and contests.

[14:06] <KyleHa> I had a chem prof. that would "entertain" people who weren't listening with a tall glass cylinder filled with water and a chunk of dry ice at the bottom.

[14:06] <masak> KyleHa: please elaborate.

[14:06] <pmichaud> but yes, when getting to 3 hours or more I'd probably start looking for some fun distractions in the middle.

[14:07] <pmichaud> that would've been helpful on Saturday at the pvmw

[14:07] <KyleHa> masak: The result is a big tube with bubbles floating to the top continuously.

[14:07] <PerlJam> pm: how'd that go?

[14:07] <sbp> chocolate... years ago a cute girl was doing a psychology experiment for her third year project, and so she advertised it saying free chocolate to anybody who took part in it. so of course I go along because she's cute, and the experiment was actually quite fun

[14:07] <pmichaud> pj: It went extremely well.

[14:07] <sbp> and at the end she goes, "and here's the thing you really came for: the chocolate!" and gives me some chocolate. and I'm thinking "uh... huh... the chocolate..."

[14:07] <masak> KyleHa: I'm not sure I can get hold of dry ice by tomorrow. nice idea, though.

[14:08] <PerlJam> masak: dry ice is available at grocery stores around here.

[14:08] <masak> sbp: :)

[14:08] <frettled> PerlJam: nice!

[14:08] <masak> frettled: s/n// :P

[14:08] <PerlJam> heh

[14:08] <KyleHa> masak: Get a $5 toddler wading pool, 16 two-liter bottles of Diet Coke, and a fistful of Mentos.  Every 15 minutes, set off a bottle.

[14:08] *** jaldhar left
[14:08] *** r0bby left
[14:09] *** r0bby joined
[14:09] <pmichaud> at pvmw we had lots of very active participation, and people were going off in all directions (all productive) by the 2nd day

[14:09] <masak> KyleHa: this is a lecture hall at my university! I couldn't do that! :)

[14:09] <moritz_> sbp: a bar of chocolate is the standard currency for 15min psychology studies here :-)

[14:09] <sbp> back in the really old days it used to be money

[14:09] <sbp> then that stupid inflation thing happened and now chocolate is worth more...

[14:09] <PerlJam> pmichaud: lots of new faces in the crowd?

[14:10] <pmichaud> yes

[14:10] <pmichaud> we probably had 40 or so attendees, most of them aren't regulars on #parrot or #perl6 (yet)

[14:11] <sbp> hmm. #perl6 business cards?

[14:11] <PerlJam> Were coke and particle there?  I think I saw a picture on someone's blog from pvmw and those were the only two people I recognized right off.

[14:11] <PerlJam> (well, I saw a picture that I think was from pvmw :)

[14:11] <pmichaud> several people wrote new languages and grammars, and we now have someone who is instrumenting parrot and can do primitive profiling of parrot subs

[14:11] <pmichaud> (using dtrace)

[14:12] <pmichaud> Coke wasn't here, no.  Particle is here.  

[14:12] <sbp> a friend of mine did a t-shirt with some postscript on it that prints itself (postscript quine t-shirt, essentially). so maybe a perl6 quine with #perl6 in figlet embedded in it or something...

[14:12] <pmichaud> at the workshop we had me, particle, kid51, AustinHastings, Whiteknight, kid51

[14:12] <pmichaud> (oops, mentioned kid51 twice)

[14:12] <pmichaud> but those are the only #parrot "regulars" that come to mind at the moment

[14:14] *** r0bby left
[14:14] *** r0bby joined
[14:15] <moritz_> http://pmichaud.com/2009/pres/yapc-regex/slides/slide18.html who can spot the error? :-)

[14:15] <pmichaud> oh, and Util

[14:15] <pmichaud> I can!  I can!

[14:16] * masak can't

[14:16] <moritz_> that's what you get for not testing your regexes (I do that all the time, too)

[14:16] <moritz_> masak: = must be escaped

[14:16] <PerlJam> masak: = needs quotes

[14:16] <masak> oh! of course!

[14:16] <pmichaud> that's what I get for reusing slides from previous talks :-)

[14:17] <pmichaud> it _wasn't_ an error a couple of years ago :-)

[14:17] <pmichaud> besides, I don't see an error there anymore :-)

[14:17] *** r0bby left
[14:17] <frettled> muah

[14:18] *** barney left
[14:18] *** r0bby joined
[14:19] *** azawawi joined
[14:20] <azawawi> pmichaud: ping

[14:20] <lambdabot> azawawi: You have 1 new message. '/msg lambdabot @messages' to read it.

[14:21] *** hercynium left
[14:21] <pmichaud> azawawi: pong

[14:22] *** azawawi_ joined
[14:23] <azawawi_> i hate freenode's webchat... i keep d/c-ing :)

[14:23] *** azawawi left
[14:23] *** azawawi_ left
[14:23] <pmichaud> azawawi: pong

[14:23] *** synthEEEE joined
[14:23] *** azawawi joined
[14:23] <azawawi> @messages

[14:23] <lambdabot> pmichaud said 2h 37m 29s ago: I'm not the person who manages planetsix, but I'll forward your request.

[14:23] <azawawi> pmichaud: ok thx

[14:23] *** justatheory joined
[14:24] <pmichaud> azawawi: the planetsix folks might want to wait until there are more p6-related posts on that blog, though.

[14:24] *** s1n1 joined
[14:24] <azawawi> pmichaud: it is Perl 6 related :)

[14:25] <TimToady> everything is going to be Perl 6 related eventually (I hope)

[14:26] * azawawi gives up trying to play with STD internals; viv it is for S:H:P6...

[14:26] <masak> it would be nice if the planetsix filter actually detected if I have chosen "Perl 6" as the topic of my blog posts.

[14:26] <masak> that tag thing, I mean.

[14:26] <azawawi> labels/tags in blog are there...

[14:27] <masak> planetsix pays no heed, at least...

[14:28] <KyleHa> Spec says "Decrement of 'aaa' should fail."  Does that mean it dies, does nothing, returns undef, or what?

[14:28] <pmichaud> returns a failure

[14:28] <pmichaud> rakudo:   my $a = 'aaa';  $a--;

[14:28] <p6eval> rakudo 0e0671:  ( no output )

[14:29] <pmichaud> rakudo:   my $a = 'aaa';  say 'ok';  $a--;  say 'still here';

[14:29] <p6eval> rakudo 0e0671: OUTPUT«ok␤still here␤»

[14:29] <pmichaud> rakudo:   my $a = 'aaa';  say 'ok';  $a--;  say 'still here';  say $a;

[14:29] <p6eval> rakudo 0e0671: OUTPUT«ok␤still here␤Decrement out of range␤␤»

[14:29] <moritz_> rakudo: my $a = 'aaa'; say --$a ~~ undef

[14:30] <KyleHa> So it doesn't die...

[14:30] <p6eval> rakudo 0e0671: OUTPUT«1␤»

[14:30] <PerlJam> KyleHa: no, it fails :)

[14:30] <KyleHa> OK, how do I test for "fail"?

[14:30] <moritz_> there are two ways

[14:31] *** gbacon left
[14:31] <moritz_> one works in rakudo todo

[14:31] <moritz_> just checking that the result is undef

[14:31] <moritz_> the (better) way is dies_ok { use Fatal; $a-- }, '$a-- fails';

[14:33] <KyleHa> Can't find Fatal!  Woohoo!

[14:34] <moritz_> wait, I think it's called 'fatal' (lower case), but rakudo doesn't implement it anyway

[14:34] <KyleHa> Hmmm.  

[14:34] <masak> . o O( NYI, case-insensitively )

[14:35] <KyleHa> Does "fail" mean something I'd understand in Perl 5?

[14:35] <PerlJam> moritz_: $result ~~ Failure  # should work too.

[14:35] <moritz_> KyleHa: no, it's a kinda new concept

[14:35] <moritz_> KyleHa: it returns an unthrown exception that's also undef

[14:36] <KyleHa> Aha, the ~~ Failure worked.

[14:37] <KyleHa> Can I "look inside" the failure to see that it actually is "Decrement out of range" and not something else?

[14:38] <masak> oh, right. sigils are variant in Perl 5. better remember to tell my students that.

[14:38] * masak goes back and corrects all his indexing examples

[14:38] <moritz_> KyleHa: not today

[14:38] <moritz_> KyleHa: I think there will be some mechanism, but I'm not sure if it's specced, and sure it's not implemented

[14:39] <KyleHa> OK.  I'll write a comment.

[14:39] <KyleHa> Is "# TODO: " recognized, or should I write it as XXX?

[14:40] <moritz_> TODO is fine

[14:40] <KyleHa> Thanks for all you help!

[14:40] <moritz_> you're welcome

[14:40] *** synth left
[14:40] <moritz_> thanks for writing all these tests!

[14:40] <PerlJam> indeed KyleHa++

[14:41] <KyleHa> *bow*

[14:41] <masak> 397 new/open tickets in the perl6 queue!

[14:41] <masak> we're getting there. :)

[14:41] * moritz_ is always happy to recruit new sla^Wfellow contributors

[14:42] <masak> speaking of that, the emails I get with patches to my Perl 6 projects lately is, if not staggering, then at least very uplifting.

[14:42] <masak> and from people I've never met or heard about, at that.

[14:43] *** gbacon joined
[14:44] <moritz_> cool

[14:44] <pmichaud> my plan for tomorrow is to sit somewhere semi-secluded and clean up rt tickets

[14:44] <pugs_svn> r27194 | kyle++ | [t/spec] Fix the decrement fail tests in autoincrement.t

[14:45] <pmichaud> either fix, merge, comment, destroy, or say "okay yeah, it's a bug"

[14:45] <masak> nice.

[14:45] <skids> So get those tickets in :-)

[14:46] * moritz_ was pleasantly surprised when viklund++ fixed his JSON parser :-)

[14:46] <masak> only three to go before we hit 400 -- come on, people, together we can do it!

[14:47] <moritz_> masak: TODO tickets are easy to create

[14:47] <pmichaud> if you want to stay about 400 you'll need more than three... there are quite a few duplicates :-)

[14:47] <sbp> TODO not quite 400 tickets yet

[14:47] <pmichaud> s/about/above/

[14:47] <masak> aka "it's not as bad as it looks" :)

[14:50] *** last left
[14:54] <PerlJam> Who can spot the bug on this slide?  http://www.pmichaud.com/2009/pres/yapc-perl6/slides/slide57.html

[14:54] <PerlJam> :-)

[14:56] * masak can't see it this time either

[14:57] <pmichaud> Why doesn't the heckling end when the talk is finished?

[14:57] <masak> guess it's not my day today :)

[14:57] <PerlJam> pmichaud: because I wasn't at your talk :)

[14:57] <sbp> rakudo: sub postfix:<!> { [+] 1..$^n }; say 5!

[14:57] <p6eval> rakudo 0e0671: OUTPUT«15␤»

[14:57] <masak> d'oh!

[14:58] <masak> "that's not the usual definition of factorial..." :)

[14:58] <sbp> rakudo: sub postfix:<!> { [*] 1..$^n }; say 5!

[14:58] <p6eval> rakudo 0e0671: OUTPUT«120␤»

[14:58] *** azawawi left
[14:58] <masak> Rakudo++

[15:00] <sbp> this just made me realise there's no exponentiation equivalent of factorial

[15:00] <sbp> well there is, but it's not very interesting... :-)

[15:00] <PerlJam> sbp: because that's just crazy

[15:00] <moritz_> it's just always 1

[15:01] <moritz_> (1**2)**3 == 1

[15:01] <moritz_> but there is an interesting idea...

[15:01] <pmichaud> now fixed.

[15:01] <sbp> tetration factorial etc. are similarly all 1

[15:03] <masak> moritz_: if factorial doesn't include 0, the exponantiation equivalent shouldn't include 1, IMO.

[15:04] <sbp> also, 4 ± 3 really means 1 .. 7, I think

[15:04] <sbp> or 1 ... 7, whatever

[15:05] <PerlJam> sbp: no, it means 4+3 or 4-3

[15:05] <masak> it means what you define it to mean.

[15:05] <masak> I've seen both semantics in actual use.

[15:05] <sbp> ah yes

[15:05] <sbp> http://en.wikipedia.org/wiki/Table_of_mathematical_symbols gives both uses

[15:06] <moritz_> * is really just repeated application of +

[15:06] <moritz_> ** is really just repeated application of *

[15:08] <pmichaud> \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

[15:08] <moritz_> so lets define + as ^^ 0, * as ^^ 1, ** as ^^ 2

[15:08] <moritz_> and ^^ 3 is a really fast growing function, then :-)

[15:08] <sbp> yes, tetration

[15:08] <sbp> .wik Tetration

[15:08] <phenny> "In mathematics, tetration (also known as hyper-4) is an iterated exponential, the first hyper operator after exponentiation." - http://en.wikipedia.org/wiki/Tetration

[15:08] <sbp> then pentration, etc.

[15:09] <moritz_> penetration? :-)

[15:09] <sbp> you said it, not me

[15:09] <moritz_> aye :-)

[15:09] <moritz_> I think that's also what the ackerman function does with its first argument, no?

[15:09] <sbp> and I guess six would be sextration...

[15:10] <masak> who knew math could be so kinky?

[15:10] <sbp> hmm. from Wikipedia: “Ackermann originally considered a function A(m, n, p+1) of three variables, the p-fold iterated exponentiation of m with n, or m → n → p expressed using the Conway chained arrow notation.”

[15:10] <sbp> so a kind of that, it seems

[15:10] <sbp> in hypercalc, a very nifty perl program, it uses a pt operator which is a kind of tetration

[15:11] <sbp> a pt b means tetration(10, a) ** b, I think

[15:11] <sbp> 10 *** a ** b if you want to be cute

[15:13] <moritz_> so in Perl 6 (to get back on-topic) we could define a * meta operator that promotes the coming operator to next hyper step

[15:14] <moritz_> for *+ would actually be *

[15:14] <moritz_> ** would be ** (oh really? :-)

[15:14] <moritz_> *** tetration

[15:15] <moritz_> (and no, I'm not being serious)

[15:17] <PerlJam> moritz_: that doesn't mean you didn't just inspire someone else to take you seriously.  ;-)

[15:20] *** donaldh left
[15:20] *** donaldh joined
[15:22] *** eternaleye left
[15:22] <pmichaud> sometimes the "ha ha" stuff ends up being reality.

[15:22] <pmichaud> See "Parrot".

[15:23] *** eternaleye joined
[15:26] *** payload left
[15:28] *** nihiliad joined
[15:29] <sbp> what's the easiest way to define a reverse reduction operator?

[15:29] <sbp> I was trying to do tetration

[15:30] <sbp> rakudo: sub infix:<***> { [**] $^a xx $^b }; say 2 *** 4

[15:30] <p6eval> rakudo 0e0671: OUTPUT«256␤»

[15:30] <sbp> but it seems to be associating the wrong way

[15:30] <moritz_> yes, afaik it's a known bug

[15:30] <sbp> need to do 2**(2**(2**2)) not ((2**2)**2)**2

[15:30] <sbp> ah, okay

[15:33] <Gothmog_> lfold vs. rfold :)

[15:33] <Gothmog_> that's the problem with non-commutative operators...

[15:34] <Gothmog_> ehm, non-associative in that case

[15:35] <moritz_> Gothmog_: in principle operators know their associativity, so that the reduction meta operator can pick the right fold

[15:35] <moritz_> Gothmog_: it's just NYI in rakudo

[15:37] <masak> what about user-declared operators?

[15:37] <masak> specifically, those without a specified associativity.

[15:38] <sbp> yeah, in S03 it says: “If the reduction operator is defined separately from the infix operator, it must associate the same way as the operator used”

[15:39] <sbp> but I'm wondering how that's enforced

[15:39] <pmichaud> sub infix:<***> is assoc('right') { ... }

[15:39] <sbp> does that just mean for operators in the language?

[15:39] <sbp> rather than user-defined operators

[15:39] <pmichaud> if associativity of a user-defined operator isn't supplied, it tends to follow the standard for its "class"

[15:39] <sbp> rakudo: sub infix:<***> is assoc('right') { [**] $^a xx $^b }; say 2 *** 4

[15:39] <p6eval> rakudo 0e0671: OUTPUT«Use of non-existent trait.␤256␤»

[15:39] <sbp> noOOoo, non-existent

[15:39] <moritz_> aka NYI

[15:40] <masak> rakudo: sub infix:<handwave>($a, $b) { 'It just works!' }

[15:40] <p6eval> rakudo 0e0671:  ( no output )

[15:40] <sbp> heh

[15:40] <Gothmog_> moritz_: Alright. I wonder, is there a way to override that? That is, if op ist r-assoc, but I want [op] to lfold?

[15:40] <moritz_> Gothmog_: @list.reduce: &[op]

[15:40] <Gothmog_> Ah, fine.

[15:41] <sbp> and .reducerev?

[15:41] <moritz_> @list.reverse.reduce?

[15:41] <lambdabot> Unknown command, try @list

[15:41] <PerlJam> Gothmog_: you could temporarily redefine the associativity of the op too I think

[15:41] <sbp> well, there are these examples in S03:

[15:41] <sbp>     &prefix:<[*]> ::= &reduce.assuming(&infix:<*>, 1);

[15:41] <sbp>     &prefix:<[**]> ::= &reducerev.assuming(&infix:<**>);

[15:42] <PerlJam> that seems weird.

[15:42] *** REPLeffect joined
[15:42] <moritz_> but that's the only occurance of that function in the specs

[15:43] <PerlJam> I'd expect a named arg to reduce to control the direction

[15:43] <moritz_> that would be more Perl6ish, yes

[15:44] <sbp> those two lines do rather look like someone was making stuff up on the fly at an astonishing rate

[15:44] <masak> buubot: spack reducerev

[15:44] <buubot> Couldn't match input.

[15:44] <masak> hm, spack isn't always reliable.

[15:44] <PerlJam> sbp: when you can't predict the future, making something up is a good approximation  :)

[15:45] *** s1n1 left
[15:45] <masak> there's only one mention of 'reducerev' in the whole spec.

[15:45] <masak> many mentions of 'reduce' in t/spec, but none of 'reducerev'.

[15:52] <TimToady> reduce &[R**], reverse @list

[15:53] *** payload joined
[15:55] <PerlJam> cute

[15:57] <masak> so that means... hm... that applying the R metaoperator doesn't change the associativity of the resulting operator?

[15:58] <sbp> heh: my @string_theory[ [;] 100 xx 11 ];    # 11-dimensional (S09)

[15:58] <PerlJam> masak: why would it?

[15:58] <masak> PerlJam: haven't thought it through, but I wouldn't be surprised if the associativity was reversed along with the operands.

[15:59] <masak> that's my idea of Least Surprise in this case. I'm not sure I can clarify better.

[15:59] <PerlJam> ok

[16:06] <masak> to make it concrete, I expect these two expressions to mean the same thing:

[16:07] <masak> rakudo: say 1 R- 3 R- 5; say 1 R- (3 R- 5)

[16:07] <p6eval> rakudo 0e0671: OUTPUT«3␤1␤»

[16:07] <pugs_svn> r27195 | kyle++ | [t/spec] Add test for bug #66888

[16:08] <TimToady> makes some kind of sense

[16:08] <TimToady> then it'd just be reduce &[R**], @list

[16:09] <masak> yes.

[16:09] <masak> that's what I'd expect.

[16:09] <TimToady> er, well, maybe reduce wouldn't pay attention

[16:09] <TimToady> but [R**] @list

[16:09] <TimToady> shoudl

[16:09] <TimToady> ld

[16:09] <masak> :)

[16:09] <masak> aye.

[16:10] <TimToady> lunch &

[16:10] <sbp> rakudo: sub infix:<***> { [R**] $^a xx $^b }; say 2 *** 4

[16:10] <p6eval> rakudo 0e0671: OUTPUT«65536␤»

[16:11] <masak> wow, Perl 6 is scary. :)

[16:12] *** cotto left
[16:12] <PerlJam> scary in a good way :)

[16:13] <moritz_> KyleHa: re test location, S02-literals/quoting.t would be good

[16:14] <KyleHa> moritz_: Thank you.

[16:14] <pugs_svn> r27196 | moritz++ | [t] added XXX comment

[16:14] *** dakkar left
[16:15] <sbp> is there any way to make user-defined metaoperators?

[16:15] <moritz_> sbp: with evil grammar hacks, maybe

[16:15] <moritz_> the nice thing about Perl 6 is that's there's always some way

[16:16] <moritz_> but I don't know if it will be as easy as adding a 'multi prefix_infix_meta_op:<*> { ... }'

[16:16] <masak> tonight at 19 UTC, there's a mentor-student meeting in #perl6-soc. at least literal, moritz_and I will attend.

[16:16] * masak goes swimming

[16:17] <moritz_> sbp: at STD.pm:1723 you can see how a typical meta op is defined...

[16:18] <moritz_> sbp: so adding a new meta operator shouldn't be too much harder than writing those lines of codes plus adding semantics

[16:19] <sbp> my $BORG is context;

[16:19] <sbp> — sounds fun

[16:19] <sbp> ah, I see

[16:20] *** zamolxes left
[16:20] <pugs_svn> r27197 | kyle++ | [t/spec] Move a misplaced test.

[16:21] <moritz_> KyleHa: please also adjust the plan()

[16:21] <KyleHa> moritz_: OOps.

[16:22] <moritz_> at least you also forget it in the commit before, so the one in comments.t is still correct ;-)

[16:22] <KyleHa> Yeah.  Ha!

[16:22] *** last joined
[16:23] <moritz_> that also happens to me quite a lot

[16:24] <pugs_svn> r27198 | kyle++ | [t/spec] Fix the quoting.t plan I forgot

[16:24] <KyleHa> I appreciate you saying that.

[16:25] <KyleHa> It reduces my embarrassment.

[16:25] <moritz_> there are a lot of mistakes that even the "old guard" make repeatedly

[16:26] <moritz_> making mistakes is no shame

[16:26] <KyleHa> Sounds like a good place to change how things work.

[16:26] <KyleHa> Well, maybe.

[16:26] <moritz_> it's only a shame if you don't admit it, or don't want to be corrected

[16:26] <KyleHa> I agree.

[16:27] <moritz_> still, the plan() serves an important purpose, so it's IMHO worth the effort

[16:28] <KyleHa> Yeah, I get what the plan is there for.  In spite of that, I still find it annoying.

[16:28] <KyleHa> That's part of what I love about DDT.  I can just tie the plan to the data structure and forget about it.

[16:28] <moritz_> aye

[16:28] <moritz_> I'm also a big fan of DDT

[16:28] <PerlJam> but only where it makes sense.

[16:28] <moritz_> maybe we should just invent something to make fudging of data driven tests easier

[16:29] <moritz_> sure.

[16:29] <KyleHa> Yeah, I spent a little time thinking about fudging DDT.  I decided that I should get more experience with the state of the art before I try to advance it.

[16:30] <PerlJam> KyleHa: that's exactly the lesson I taught a student worker last week.

[16:30] <moritz_> well, pugs' Test.pm has a force_todo sub that takes a list of test numbers

[16:30] <moritz_> so you can say

[16:30] <ingy> masak: ping

[16:31] <moritz_> #?pugs emit force_todo(1, 5, 78)

[16:31] <moritz_> 18:16  * masak goes swimming

[16:31] <moritz_> ingy: that was 15 minutes ago, so it's unlike he'll respond too soon

[16:31] <ingy> masak: I'm ready to try a TestML port to p6

[16:31] <ingy> moritz_: ok, thx

[16:32] <sbp> unless he's got his iPhone with him

[16:32] <moritz_> (force_todo) that's not too convenient, because you have to count tests manually, still

[16:32] *** jferrero left
[16:32] <ingy> moritz_: does p6 have json parsing ?

[16:32] <KyleHa> I usually can't hear my iPhone in the pool.

[16:32] <moritz_> ingy: yes!

[16:33] <ingy> great!

[16:33] <moritz_> ingy: http://github.com/moritz/json/

[16:33] <moritz_> ingy: bug reports are always welcome, as well as fixes ;-)

[16:33] <ingy> I have a testml grammar in yaml that I can spit out into json with p5 and then use in p6

[16:33] <ingy> moritz++

[16:33] *** gbacon left
[16:34] <moritz_> (it's also on CPAN, but the state of CPAN wrt Perl 5 modules isn't all that great)

[16:34] <ingy> moritz_: I had no idea *you* were the author!

[16:34] <ingy> I just asked cuz you were around :P

[16:34] <moritz_> well, that was just good luck ;-)

[16:35] <ingy> fate

[16:35] <ingy> :)

[16:35] *** cotto joined
[16:35] <moritz_> I basically wanted a serialization format for Perl 6

[16:35] <moritz_> XML was too clumsy

[16:35] <ingy> need yaml

[16:35] <moritz_> and JSON is simpler than YAML

[16:35] <moritz_> so I decided to go for that first

[16:35] <ingy> json isn't a serialization language :P

[16:36] <ingy> you should have been at my talk this morning :)

[16:36] <ingy> one sec

[16:36] <moritz_> well, it does lists, hashes, numbers and strings

[16:36] <moritz_> that's what I wanted

[16:36] <ingy> http://ingydotnet.github.com/yaml-pgh2009-talk/003z.html

[16:36] <ingy> :D

[16:36] <moritz_> and rakudo's introspection isn't good enough to serialize custom objects anyway, for now

[16:36] <ingy> nod

[16:37] *** nathan7 joined
[16:37] *** fahadsadah joined
[16:37] <nathan7> !op

[16:37] <fahadsadah> Hi all.

[16:37] <fahadsadah> !op

[16:37] <nathan7> Oops

[16:37] <fahadsadah> Can I have ops, please?

[16:37] <nathan7> I just wanted to see him.

[16:37] <moritz_> fahadsadah: we tend to give ops to people we know rather long

[16:38] *** fahadsadah is now known as audreyt

[16:38] <ingy> or to people we know who *are* rather long :)

[16:38] *** audreyt is now known as fahadsadah

[16:38] <fahadsadah> Someone on another network said to do that for ops

[16:38] <fahadsadah> In here.

[16:39] <moritz_> don't trust anybody who says such stuff ;-)

[16:39] <fahadsadah> Well, that nick does have ops without a hostmask

[16:39] <sbp> perhaps they were talking about metaops

[16:39] <fahadsadah> Watch

[16:39] *** fahadsadah is now known as audreyt

[16:39] <audreyt> !op

[16:39] *** ChanServ sets mode: +o audreyt

[16:39] *** audreyt is now known as fahadsadah

[16:39] <fahadsadah> QED

[16:40] <moritz_> wohoo

[16:40] <fahadsadah> What's perl6?

[16:40] <sbp> fahadsadah: “Any infix relational operator returning type Bool may be transformed into its negative by prefixing with !.” — S03

[16:40] <sbp> so actually, !op should be doing the opposite of op

[16:40] <ingy> perl6 is a 100 year programming language

[16:41] <fahadsadah> Any relation to perl?

[16:41] <sbp> yes and no...

[16:41] <moritz_> sure, it's the next version

[16:41] <ingy> that's what larry wall says, anyway...

[16:41] <sbp> it's a community rewrite of perl5

[16:41] <sbp> it looks and feels to some extent the same

[16:41] <sbp> but is redesigned from the ground up

[16:41] <moritz_> and it follows some of the same design principles

[16:42] <ingy> it's perl5 on acid, mushrooms, peyote, and heroin

[16:42] <sbp> e.g. controlled lunacy

[16:42] *** Infinoid was kicked by fahadsadah (fahadsadah))
[16:42] <fahadsadah> OOPS

[16:42] *** moritz_ sets mode: -o fahadsadah

[16:42] <moritz_> don't do that!

[16:42] <sbp> the gun is loaded

[16:42] *** fahadsadah left
[16:42] <ingy> weird

[16:43] <ingy> time to go. laters...

[16:43] *** Helios left
[16:43] <sbp> c'ya

[16:47] *** Helios joined
[16:52] *** Psyche^ joined
[16:54] *** cognominal joined
[16:57] *** bionoid left
[16:59] <sbp> hmm, pmichaud's slides are pretty nifty

[17:00] *** jferrero joined
[17:03] *** mizioumt1 joined
[17:04] *** Patterner left
[17:04] *** Psyche^ is now known as Patterner

[17:11] <pmichaud> sbp: thanks!  Which slides, which parts are nifty?  The bugs?  (see earlier heckling here on #perl6 :-)

[17:12] <moritz_> programmers can be really annoying at times ;-)

[17:12] <pmichaud> I'm hoping to spend some time tonight turning slide ideas into blog posts :-)

[17:12] <sbp> pmichaud: yeah, the 2009/pres/yapc-perl6 ones

[17:13] <sbp> was just flicking through them since they were in a tab

[17:13] <sbp> nice clear examples, though. I liked the rock-scissor-paper one

[17:13] <pmichaud> jnthn++ and chromatic get credit for that one

[17:14] <pmichaud> chromatic+=  # equal karma act

[17:14] <pmichaud> aiiigh

[17:14] <pmichaud> chromatic++

[17:14] <pmichaud> cant....type...during...lightning....talks

[17:14] <sbp> heh

[17:15] *** mizioumt left
[17:16] *** gbacon joined
[17:16] *** sri_kraih_ joined
[17:17] *** sri_kraih left
[17:18] *** zamolxes joined
[17:23] *** sri_kraih_ left
[17:23] *** sri_kraih joined
[17:35] * viklund thought it was very fun to fix moritz_ JSON parser

[17:42] *** bionoid joined
[17:48] *** japhb left
[17:49] *** rindolf joined
[17:50] *** Molaf left
[17:50] *** Molaf joined
[17:50] *** lollan joined
[17:51] <lollan> yop

[17:58] <arnsholt> masak++

[17:58] <arnsholt> Thanks for nudging me with proto a while back (didn't see it 'till yesterday) and making me remember I've got a project going on

[18:01] *** pmurias joined
[18:03] <pmurias> what does !op do?

[18:04] <moritz_> it negates op

[18:04] <moritz_> rakudo: say 1 !&& 2

[18:04] <p6eval> rakudo 0e0671: OUTPUT«Statement not terminated properly at line 2, near "!&& 2"␤in Main (src/gen_setting.pm:0)␤»

[18:04] <moritz_> at least if implemented ;-)

[18:04] <moritz_> std: 1 !&& 2

[18:04] <p6eval> std 27198: OUTPUT«##### PARSE FAILED #####␤Can't negate a tight and operator because it's not iffy enough at /tmp/5dUoCLNAH2 line 1:␤------> [32m1 !&&[31m 2[0m␤FAILED 00:02 36m␤»

[18:04] <moritz_> whatever that means.

[18:04] <moritz_> std: 1 !and 2

[18:04] <p6eval> std 27198: OUTPUT«##### PARSE FAILED #####␤Can't negate a loose and operator because it's not iffy enough at /tmp/AWrphnqhT9 line 1:␤------> [32m1 !and[31m 2[0m␤FAILED 00:02 36m␤»

[18:06] <PerlJam> std: 1 !< 2

[18:06] <p6eval> std 27198: OUTPUT«ok 00:02 36m␤»

[18:06] <pmurias> moritz_: because i noticed during backlog that some people just uttered "!op" for no apparent reason

[18:06] <moritz_> pmurias: that was a bit strange indeed

[18:07] <PerlJam> std: 1 =:= 2

[18:07] <p6eval> std 27198: OUTPUT«ok 00:02 36m␤»

[18:07] <PerlJam> std: 1 !=:= 2

[18:07] <p6eval> std 27198: OUTPUT«ok 00:02 36m␤»

[18:07] <PerlJam> that's about where my yikes! meter starts creeping up

[18:08] <moritz_> [!=:=] is a very lovely operator

[18:08] *** hercynium joined
[18:09] <arnsholt> What does the =:= op do?

[18:09] <hercynium> so, how does this help us reduce the incidence of muppet-related domestic violence in our community?

[18:09] <hercynium> whoops

[18:09] <hercynium> sorry

[18:09] <moritz_> arnsholt: it tests if two variables are bound to the same container

[18:09] <hercynium> wrong channel

[18:09] <moritz_> rakudo: my ($a, $b); say $a =:= $b

[18:10] <p6eval> rakudo 0e0671: OUTPUT«0␤»

[18:10] <moritz_> rakudo: my ($a, $b); $a := $b;  say $a =:= $b

[18:10] <p6eval> rakudo 0e0671: OUTPUT«1␤»

[18:10] <arnsholt> hercynium: Not a problem. It was a good line =D

[18:10] <sbp> rakudo: { say "$^a and $^b" }((1..7).pick(2))

[18:10] <p6eval> rakudo 0e0671: OUTPUT«too few arguments passed (1) - 2 params expected␤in Main (/tmp/R0eEUFu1Kv:1)␤»

[18:10] <arnsholt> moritz_: Right. Thanks

[18:10] <hercynium> just heckling sungo @ YAPC::NA during his lightning talk :)

[18:10] <sbp> what am I wanting to do here to unpack that list?

[18:11] <sbp> in python you do function(*args)

[18:11] <sbp> I've been leafing through the Synopses, but I just can't find what I'm after

[18:11] <moritz_> sbp: it's function(|@args)

[18:11] <sbp> rakudo: { say "$^a and $^b" }(|(1..7).pick(2))

[18:11] <p6eval> rakudo 0e0671: OUTPUT«5 and 6␤»

[18:11] <sbp> awesome, thanks

[18:11] <moritz_> you're welcome

[18:11] * PerlJam is still not used to the | prefix

[18:12] <moritz_> it used to be * too for some time, I think

[18:12] * sbp finds "foo(|@onetothree);           # okay:  @onetothree flattened to three args" in S06

[18:13] <PerlJam> a prefix _ would be more mnemonic of flattening IMHO  :)

[18:14] <moritz_> oh come on, that's a valid identifier ;-)

[18:14] <sbp> function)@args(

[18:14] <PerlJam> I liked it when it was * (because of other languages where that's the same)

[18:15] <sbp> | is okay. I can kind of think of it as a pipe going backwards

[18:16] <sbp> "foo(|eager @onetothree);" is interesting too

[18:21] <PerlJam> rakudo: { say @_.join(":") }(|(1..17).pick(3))

[18:21] <p6eval> rakudo 0e0671: OUTPUT«4:7␤»

[18:21] <PerlJam> where did the first one go?

[18:21] <PerlJam> rakudo: { say @_.join(":") }(|(1..17).pick(4))

[18:21] <p6eval> rakudo 0e0671: OUTPUT«13:11:1␤»

[18:21] <PerlJam> rakudo: { say @_.join(":") }(|(1..17).pick(5))

[18:21] <p6eval> rakudo 0e0671: OUTPUT«16:1:14:13␤»

[18:22] <moritz_> PerlJam: into $_ probably. Known bug.

[18:23] <pugs_svn> r27199 | pmurias++ | [re-smop] less brutish exporting of symbols

[18:23] <pugs_svn> r27200 | pmurias++ | [re-smop] make map take an anonymous sub instead of a lexical named one

[18:29] *** rfordinal left
[18:29] *** japhb joined
[18:29] <sbp> is there any more extensive source than http://rakudo.org/status as to what's implemented in rakudo and what isn't?

[18:30] <moritz_> not in prose, I think

[18:30] <moritz_> the roadmap obviously contains lots of stuff that's not yet implemented

[18:30] <moritz_> so does RT

[18:31] <sbp> mainly I wonder as I go through the synopses

[18:31] <sbp> so I'm looking at => in S06 for example

[18:32] <sbp> and the inline tests in the HTML version at http://perlcabal.org/syn/S06.html seem to indicate it's being tested for, though skipped in pugs

[18:32] <sbp> which to me would say that rakudo is either cool with it or it's a fail that hasn't had a "skip this" added to it

[18:32] <sbp> but when I test ==>, it doesn't work...

[18:32] <moritz_> rakudo doesn't do feed yets.

[18:33] <sbp> (meant ==>, not =>, above too of course)

[18:33] <sbp> moritz_: okay. how do you know that?

[18:33] <sbp> how would you find that out if you were mere?

[18:33] <sbp> you were me, even. you were merely me...

[18:33] <moritz_> and there are no rakudo test results in the HTML version of the sources

[18:34] <moritz_> sbp: in rakudo's source tree there's a file called t/spectest.data

[18:34] <moritz_> sbp: it contains the list of all tests that are run when you do a 'make spectest' (and which all shoudl pass)

[18:34] <moritz_> the test file being linked on S06.hml isn't in there

[18:34] <moritz_> so rakudo doesn't run it

[18:34] <moritz_> it's also possible to use a very simple example and test it

[18:34] <sbp> ooh, I see

[18:34] <moritz_> and to ask here, of course ;-)

[18:35] <sbp> yeah, I did that, testing a simple example

[18:35] <sbp> but I'm not confident enough yet with perl6 to make the examples simple *enough*

[18:35] <sbp> so I mean I might be introducing some other error that I don't know about

[18:35] <moritz_> things like "is $x implement" are rather volatile to warrrant questions in IRC, for sure

[18:35] <sbp> yeah. well I do try first of course, exhaust all possible routes I can think of

[18:35] <moritz_> rakudo: my @a <== 1

[18:35] <p6eval> rakudo 0e0671: OUTPUT«No applicable methods.␤in Main (/tmp/rD7Fzr6gCA:2)␤»

[18:36] <sbp> but still it's kinda tricky when you don't know much of the language

[18:36] <sbp> so grepping spectest.data is a good tip, thanks

[18:38] *** desertm4x joined
[18:42] *** vreg joined
[18:44] <vreg> *deep breath*

[18:45] <vreg> i've been meaning to learn perl6

[18:45] <vreg> now i have a dir with files that i need to rename

[18:46] *** rfordinal joined
[18:46] *** rfordinal left
[18:46] <moritz_> ... and you're looking at how to list and move files?

[18:46] <pmichaud> it's fairly tricky to get "everything that isn't implemented yet" to throw a useful exception.  :-)

[18:46] <vreg> moritz_, yep

[18:47] <vreg> and also how to do the basics. like install pugs.

[18:47] <vreg> if you could walk me through how to get pugs installed and then rename files

[18:48] <moritz_> pugs is pretty much dead, but you try to follow the steps described in the INSTALL file

[18:48] <vreg> oh

[18:48] <vreg> it's dead?

[18:48] <vreg> is parrot the main thing now?

[18:48] <moritz_> there's not much pugs expertise left in this channel, I fear

[18:48] <vreg> and, umm,

[18:48] <vreg> rakudo

[18:48] <moritz_> yes, rakudo (the perl 6 compiler for parrot)

[18:49] <vreg> could you get me on my feet with rakudo and parrot?

[18:49] <moritz_> sure

[18:49] <vreg> thanks

[18:49] <moritz_> http://rakudo.org/how-to-get-rakudo

[18:49] <masak> wow, nice inflow of new people tonight.

[18:50] <vreg> i was afraid you'd "RTFM n00b!" me

[18:50] <sbp> these are the exact commands I used:

[18:50] <sbp> $ git clone git://github.com/rakudo/rakudo.git

[18:50] <sbp> $ cd rakudo && perl Configure.pl --gen-parrot

[18:50] <sbp> $ gmake

[18:50] <masak> #p6s in 10.

[18:50] <moritz_> vreg: we try to be friendly, but still point to the documentation ;-)

[18:50] <masak> ingy: woot! I'm ready too.

[18:51] <masak> ingy: except I'm very busy the next 48 hours... :/

[18:51] <moritz_> vreg: what sbp wrote, though you might need to use 'make' instead of gmake, depending on your system

[18:51] <vreg> windows XP here

[18:51] <pmichaud> actually, the result of the Configure.pl step will say which 'make' you're likely supposed to use :-)

[18:51] <masak> arnsholt: you're welcome :)

[18:51] <sbp> yeah. basically, if you use bsd make then you get cogs and sprockets everywhere

[18:51] <vreg> been wanting to learn how to compile but i don't know how

[18:51] <vreg> can i get a pre-built executable?

[18:52] <moritz_> for which platform?

[18:52] <vreg> windows XP

[18:52] <masak> arnsholt: oh, right, the SQL grammar. how's that one going?

[18:52] <moritz_> yes, just a second...

[18:52] <pmichaud> (we should put links to the executables on the how-to-get-rakudo page)

[18:52] <moritz_> vreg: http://parrotwin32.sourceforge.net/

[18:53] <vreg> "The parrot executable is built with MinGW and Strawberry Perl 5.10."

[18:54] <vreg> can it do perl6 too?

[18:54] <vreg> or am i misunderstanding

[18:54] <KyleHa> It's talking about the tools used to create the Parrot executable you have.

[18:55] <vreg> does the executable write to the PATH variable?

[18:55] <moritz_> I don't know that

[18:55] <twigil> and what is Strawberry Perl?

[18:56] <moritz_> twigil: it's a binary package of Perl for Windows

[18:58] <masak> #p6s in...

[18:58] <masak> ...2.

[18:58] <vreg> is there a command i can run in the cmd thing to check if i already have perl installed?

[18:58] <twigil> wow, there's even a portable version of it

[18:58] <rindolf> vreg: perl -V

[18:58] <sbp> if it's still on your path

[18:59] <sbp> if not, you could always system-wide search for perl.exe

[18:59] <vreg> has to be a capital 'V'?

[18:59] <vreg> or case insensitive

[18:59] <moritz_> capitcal V

[19:00] <masak> meeting in #perl6-soc has started.

[19:00] <vreg> i get the "perl is not recognized as a command" thing

[19:00] <vreg> i guess that means i don't have perl installed?

[19:00] <moritz_> then it's probably not installed

[19:01] <rindolf> vreg: or it's not in the path.

[19:01] <sbp> rakudo: say &infix:<+>

[19:01] <p6eval> rakudo 0e0671: OUTPUT«10␤»

[19:01] <sbp> why is this giving 10 with no args?

[19:01] <amoc> oh

[19:01] <moritz_> that's... rubbish, I'd say

[19:02] * masak submits rakudobug

[19:02] <moritz_> rakudo: say &infix:<+>.WHAT

[19:02] <p6eval> rakudo 0e0671: OUTPUT«Null PMC access in find_method()␤in Main (/tmp/ewmjTyc2Xp:2)␤»

[19:02] <masak> literal: ping

[19:02] <sbp> credit: Björn Höhrmann

[19:02] * masak submits another rakudobug

[19:02] *** hercynium left
[19:04] <vreg> running search

[19:06] <vreg> none found

[19:06] <vreg> i'd like to compile myself

[19:07] <masak> see if the manual you got at birth has a 'make' tutorial.

[19:07] <vreg> birth?

[19:08] <masak> sorry, I might have misunderstood... :)

[19:08] <skids> compiling ones'self usually takes about 9 months, and the result is never quite the same as the original. :-)

[19:08] <twigil> rakudo: my $a="1"; my $b = "2"; say $a ~ $b;

[19:08] <p6eval> rakudo 0e0671: OUTPUT«12␤»

[19:09] <vreg> was a bit surprised that the pre-built binary changelog has only one entry

[19:10] <vreg> Jun 17, 2009 2:43 am

[19:10] <vreg> are the pre-built's for windows new?

[19:10] <twigil> rakudo: my $a; my $b=3; say $a // $b;

[19:10] <moritz_> new for every release of parrot

[19:10] <p6eval> rakudo 0e0671: OUTPUT«3␤»

[19:10] <vreg> oh

[19:10] *** desertm4x left
[19:10] <vreg> 1.3.0 is the latest stable build?

[19:10] <moritz_> aye

[19:10] <moritz_> parrot releases monthly

[19:11] <moritz_> every third Tuesday, or so

[19:11] <moritz_> (of the month, that is)

[19:11] <moritz_> and the June release was 1.3.0

[19:11] <vreg> downloading now

[19:11] <vreg> i'm a bit nervous

[19:12] <moritz_> why?

[19:12] <twigil> rakudo: my @a=(1, 2, 3, 4); say @a >>*<< @a;

[19:12] <p6eval> rakudo 0e0671: OUTPUT«14916␤»

[19:12] <moritz_> when you're on windows, dowloading software is a pretty common task

[19:12] <vreg> it sounds paranoid, but i have nightmares about rebooting and having it not boot up

[19:12] <vreg> the install i mean

[19:12] <twigil>  rakudo: my @a=(1, 2, 3, 4); my @b=(); say @a >>*<< @b;

[19:13] <arnsholt> masak: Well, seeing how I haven't really worked on it for a month or two, it's going slow =)

[19:13] <vreg> or after it

[19:13] <p6eval> rakudo 0e0671: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (/tmp/LTzcM7MxBY:2)␤»

[19:13] <masak> arnsholt: I know the feeling.

[19:13] <masak> arnsholt: what's blocking you?

[19:14] <arnsholt> The main block is getting off my arse and doing stuff, to be honest

[19:14] <moritz_> I know that too.

[19:14] <vreg> is there anything i should install before i run the 1.3.0 parrot setup executable?

[19:15] <arnsholt> That, and the fact that my life has been full of life

[19:15] <masak> @seen literal 

[19:15] <lambdabot> literal is in #perl6. I don't know when literal last spoke.

[19:17] <vreg> or should i go ahead and install 1.3.0

[19:17] <vreg> and then install perl 6

[19:18] <KyleHa> Do labels and "next LABEL" work as they do in Perl 5?

[19:18] <moritz_> install parrot-1.3.0

[19:19] <KyleHa> rakudo: FOO:for (1,2,3) -> $x { next FOO if $x == 2; say $x }

[19:19] <p6eval> rakudo 0e0671: OUTPUT«Statement not terminated properly at line 2, near ":for (1,2,"␤in Main (src/gen_setting.pm:0)␤»

[19:19] <moritz_> KyleHa: I think they should, but rakudo doesn't implement them

[19:20] *** donaldh left
[19:20] <vreg> is it preferable to change the install dir from C:\ to C:\Program Files?

[19:20] <KyleHa> rakudo: FOO:for (1,2,3) -> $x { next FOO if $x == 2; say $x; }

[19:20] <p6eval> rakudo 0e0671: OUTPUT«Statement not terminated properly at line 2, near ":for (1,2,"␤in Main (src/gen_setting.pm:0)␤»

[19:20] <KyleHa> Yeah, guess not.

[19:20] <KyleHa> Thanks.

[19:20] <vreg> i usually like to stay out of root

[19:20] <vreg> if C:\ is root

[19:20] *** donaldh joined
[19:20] <moritz_> vreg: then change it

[19:21] <moritz_> KyleHa: it's in S02:3360 and onwards

[19:21] <moritz_> (and the IRC logs make that a clickable link ;-)

[19:22] <vreg> parrot installed

[19:23] <sbp> moritz_: the link doesn't work, however

[19:24] *** jferrero left
[19:24] <moritz_> sbp: it doesn't? that's a shame...

[19:25] <moritz_> oh.

[19:25] <moritz_> the html doesn't contain the line anchors anymore

[19:25] <masak> someone removed the anchors. :/

[19:25] <vreg> This binary executable feature is still somewhat experimental, and may not work on all platforms. Also, the binary has hardcoded paths to the Parrot build tree (especially the dynamic libraries and modules), so removing or moving the build tree will cause the binary to stop working.

[19:25] <masak> moritz_: I was surprised too.

[19:25] <masak> they're really useful.

[19:25] <masak> according to someone here on the channel, they made some browsers thrash a lot.

[19:26] <vreg> does that refer to the rakuto binary?

[19:26] * sbp hacks something up

[19:26] <vreg> rakudo, even

[19:26] *** azawawi joined
[19:26] <azawawi> hi

[19:26] <masak> azawawi: o/

[19:26] <rindolf> Hi azawawi 

[19:26] <moritz_> vreg: yes, but in the installed version that problem should be solved for you

[19:26] <vreg> oh

[19:27] <vreg> when i installed parrot, rakudo was installed as well?

[19:27] <moritz_> masak: I think it's more the javascript and hilighted test case snippets, not the line anchors

[19:27] *** desertm4x joined
[19:27] <moritz_> vreg: it might. I'm not that familiar with the windows package

[19:27] <masak> moritz_: I would have thought so, too.

[19:27] <moritz_> szabgab: ping

[19:29] *** mkfort left
[19:30] <pugs_svn> r27201 | azawawi++ | [S:H:P6] viv is copied here for fun.

[19:30] <azawawi> moritz_: i think he's sleeping now. 10:30pm here

[19:30] <vreg> i guess it doesn't install rakudo

[19:30] <vreg> perl -V came up empty

[19:30] <moritz_> azawawi: I'm in no particular hurry

[19:30] <azawawi> moritz_: you'll get a ping timeout :)

[19:30] <moritz_> vreg: try perl6 -v

[19:31] <vreg> oh

[19:31] <vreg> it doesn't recognize perl6

[19:32] <moritz_> what about  parrot -v?

[19:33] <moritz_> vreg: ah, you need parrot-rakudo-addon from http://sourceforge.net/project/showfiles.php?group_id=211372

[19:33] <vreg> "This is Parrot version 1.3.0 built for i386-MSWin32."

[19:34] <pugs_svn> r27202 | kyle++ | [t/spec] Some notes about character ranges

[19:35] <vreg> downloaded. installing addon now

[19:36] <pmurias> azawawi: you asked about the errors people make when writing perl6, not inserting the semicolon is a one I make often

[19:37] <meppl> good night

[19:37] <vreg> hmm

[19:37] <vreg> should i uninstall parrot?

[19:37] <vreg> before installing parrot-rakudo-addon

[19:37] <moritz_> no.

[19:37] <vreg> install it to the parrot dir?

[19:38] <moritz_> I don't know

[19:38] *** meppl left
[19:39] * vreg tries not to panic.

[19:39] <pugs_svn> r27203 | pmurias++ | [re-smop] Signature refactor

[19:42] <vreg> installed to parrot dir

[19:42] <vreg> i think it added perl6.exe to 'bin'

[19:42] <vreg> C:\>perl6 -V

[19:42] <vreg> "load_bytecode" couldn't find file 'PCT.pbc'

[19:42] <vreg> current instr.: '' pc 0 (perl6.pir:23)

[19:42] <vreg> called from Sub '_block11' pc -1 ((unknown file):-1)

[19:43] *** lollan left
[19:44] <pugs_svn> r27204 | azawawi++ | [S:H:P6] emit_p5 -> emit_color. Removed all unneeded stuff.

[19:45] <pugs_svn> r27205 | azawawi++ | [S:H:P6] test file was in win32 format

[19:47] <pugs_svn> r27206 | azawawi++ | [S:H:P6] No more emit_p6... just emit_color

[19:50] <vreg> <-- stuck

[19:51] *** jlmoko joined
[19:51] <moritz_> std: [+]

[19:51] <p6eval> std 27206: OUTPUT«##### PARSE FAILED #####␤Unable to parse array composer; couldn't find final ']' at /tmp/4RRLz3wWHe line 1:␤------> [32m[31m[0m␤    expecting noun␤FAILED 00:02 37m␤»

[19:51] <sbp> moritz_: http://inamidst.com/misc/p6/S03#1000

[19:52] *** alanhaggai joined
[19:52] *** tarpsocks left
[19:52] <vreg> moritz_?

[19:53] <moritz_> vreg: you could try to contact fperrad on the irc.perl.org network, he does the binary packages

[19:54] <sbp> http://gist.github.com/135481.txt for source

[19:54] <sbp> (yes, I know about nl. for some reason nl -s '' wasn't working properly)

[19:55] <pugs_svn> r27207 | azawawi++ | [S:H:P6] perltidy -et=4 viv.pl

[19:55] <vreg> fperrad No such nick/channel

[19:55] <vreg> when i connect to an irc.perl.org server

[19:56] <moritz_> vreg: funny, he's on that network.

[19:56] <vreg> weird

[19:56] <vreg> magnet.llarian.net

[19:56] *** kidd_ left
[19:56] <vreg> which channel should i join? that he/she's on

[19:57] <vreg> he

[19:57] <szabgab> moritz_, yes ?

[19:58] <moritz_> szabgab: the HTML on perlcabal.org/syn/*.html doesn't have the line anchors anymore...

[19:58] <moritz_> szabgab: and I believe you touched the HTML generation last - any chances of getting them back?

[19:58] <szabgab> I have not touched them since I was in Oslo have those disappeared then ?

[19:59] <szabgab> that's almost 2 months now

[19:59] <szabgab> checking svn log

[19:59] <moritz_> szabgab: dunno, I only now noticed they're gone, but it's been quite some times since I tried last

[20:00] <szabgab> I'll try to take a look tomorrow

[20:00] <moritz_> than you very much

[20:00] <moritz_> *thank

[20:00] <szabgab> I am too tired now 

[20:00] <moritz_> no hurry

[20:01] <vreg> i don't see fperrad in #perl

[20:01] <azawawi> std: a b c;

[20:02] <p6eval> std 27207: OUTPUT«Undeclared routines:␤  a used at 1 ␤     b used at 1 ␤     c used at 1 ␤ok 00:02 35m␤»

[20:02] <moritz_> vreg: /whois fperrad

[20:02] <vreg> fperrad No such nick/channel

[20:03] <azawawi> std: if 1 { };

[20:03] <p6eval> std 27207: OUTPUT«ok 00:02 35m␤»

[20:03] <azawawi> std: if 1 { }; if 1 { };

[20:03] <p6eval> std 27207: OUTPUT«ok 00:02 35m␤»

[20:03] <azawawi> std: if 1 { } if 1 { };

[20:03] <p6eval> std 27207: OUTPUT«##### PARSE FAILED #####␤Statements must be separated with semicolon at /tmp/48u1lf82wd line 1:␤------> [32mif 1 { } [31mif 1 { };[0m␤    expecting any of:␤      infix stopper␤    statement␤FAILED 00:02 35m␤»

[20:04] <azawawi> pmurias: i think we're on to something with making a quick fix for this one...

[20:05] <azawawi> std: if 1 { } my $foo;

[20:05] <p6eval> std 27207: OUTPUT«##### PARSE FAILED #####␤Statements must be separated with semicolon at /tmp/2Z1MQMHlfa line 1:␤------> [32mif 1 { } [31mmy $foo;[0m␤    expecting any of:␤       infix stopper␤    statement␤FAILED 00:02 35m␤»

[20:06] <azawawi> pmurias: using the current regexp replacement im using in quick fixes wont help us in this situation; we could guess and add a ; after }  

[20:07] <azawawi> pmurias: after i refactored S:H:P6, a 100% accurate quick fix replacement will be available.   

[20:07] <azawawi> pmurias: s/refactored/refactor/

[20:10] *** kidd_ joined
[20:10] * azawawi adds missing semicolon quick fix to his todo list

[20:16] <vreg> i have to give up if i can't get past this error :\

[20:16] <vreg> "load_bytecode" couldn't find file 'PCT.pbc'

[20:16] <azawawi> moritz_: what does viv stand for btw?

[20:17] <moritz_> azawawi: you ahve to read it as roman numbers

[20:17] <moritz_> 6-5

[20:19] *** alanhaggai left
[20:19] <vreg> what does parrot do? if perl6.exe runs the scripts

[20:20] <moritz_> perl6.exe is just a thin wrapper around parrot perl6.pbc

[20:21] <azawawi> moritz_: ah i keep forgetting that; it is the lower case that confuses me :)

[20:21] <azawawi> moritz_: thx

[20:22] <vreg> ....;C:\Program Files\Parrot-1.3.0\bin

[20:22] <vreg> i can get to perl6 in cmd through the path variable

[20:23] <vreg> but this load_bytecode error thing

[20:24] <vreg> no choice but to uninstall parrot

[20:24] <vreg> but thanks moritz_, pmichaud and everyone who tried to help

[20:24] <vreg> i appreciate it

[20:29] *** simcop2387 left
[20:30] <pugs_svn> r27208 | masak++ | removed redundant =head2, mistakenly copy-pasted

[20:30] <pugs_svn> r27209 | masak++ | [P2T1A] simplified cards example

[20:33] *** simcop2387 joined
[20:36] *** cotto left
[20:43] *** cotto joined
[20:52] <masak> TimToady: in the #perl6-soc meeting, we concluded that 'grok', the u4x CLI client, would need something STD.pm-alike, but with different requirements. it would be interesting to discuss that at some point. for example, specialized rules which called STD.pm rules might be what it needs.

[20:53] <masak> the reason for the specialized requirements is that I keep insisting that things like '[+]' be understandable by grok. '[+]' is not a complete Perl 6 statement, but it's still an atomic 'thing'.

[20:54] <viklund> std: [+]

[20:54] <p6eval> std 27209: OUTPUT«##### PARSE FAILED #####␤Unable to parse array composer; couldn't find final ']' at /tmp/QxYN9OrONp line 1:␤------> [32m[31m[0m␤    expecting noun␤FAILED 00:02 37m␤»

[20:54] <viklund> bah!

[20:54] <masak> speaking of useful errors. :P

[20:55] *** DemoFreak joined
[20:55] <viklund> std: [+] 1

[20:55] <p6eval> std 27209: OUTPUT«ok 00:02 37m␤»

[20:56] <pugs_svn> r27210 | azawawi++ | [S:H:P6] emit_color understands variables now :)

[20:58] <azawawi> viv is way cooler than redspans. TimToady++

[20:59] <masak> azawawi: what are those two, anyway?

[20:59] *** vreg left
[21:00] <azawawi> masak: two acronyms to make me cool :)

[21:00] <masak> azawawi: does viv completely replace gimme5 yet?

[21:00] <azawawi> masak: idk :)

[21:01] <moritz_> it does not.

[21:01] <azawawi> masak: but it doesnt seem to have replaced it since gimme5 is still here

[21:01] <moritz_> at least not the version in svn

[21:03] <azawawi> masak: redspans spits out string parse trees which is really useful in highlighting; however, when you need to calculate variable scope; you're out of luck using that...

[21:05] <azawawi> masak: we hacked our way before a bit in S:H:P6 via redspans but to reach a higher level of accuracy,  you need to use viv 's emit actions to access all of STD's real foo.

[21:05] <azawawi> moritz_: plz correct me if im wrong ofcourse :)

[21:06] <masak> this is all very interesting.

[21:06] * masak rubs hands together

[21:06] <moritz_> azawawi: sure, but I'm entirely an expert either

[21:06] <azawawi> masak: when i needed to know when a variable was declared, i was out of luck with redspans

[21:06] <moritz_> just because I people point to stuff, or comment on it doesn't mean that I actually understand it

[21:07] <azawawi> masak: to implement refactoring; rename variable/package/method/subroutine ...etc

[21:07] <azawawi> moritz_: come on :)

[21:09] *** mkfort joined
[21:09] <azawawi> what's a good pastebin site to use?

[21:09] <masak> azawawi: gist.github.com

[21:09] <viklund> gist.github.com?

[21:09] * masak is faster :)

[21:09] <viklund> masak++

[21:10] <azawawi> hmmm i hate it here... my isp is caching stuff a lot and i have to change urls for it to work!

[21:11] <azawawi> masak: variable declaration/usage via viv: http://gist.github.com/135520

[21:12] <masak> azawawi: cool!

[21:12] <masak> will definitely look into that more.

[21:12] <masak> but now, sleep.

[21:12] <masak> phenny: tell ingy looking forward to pairing up and working on that YAML port.

[21:12] <phenny> masak: I'll pass that on when ingy is around.

[21:13] *** desertm4x left
[21:13] *** masak left
[21:13] <pmurias> azawawi: try https? it won't be cached so easily

[21:15] <azawawi> pmurias: will try it...thx

[21:18] <azawawi> i know im a Padre guy but i will try to refactor stuff into a script for vim support as well; something like perl perl6-refactor.pl --rename-variable $foo,$foo-bar 

[21:18] <lichtkind> azawawi: what refactoring

[21:19] <azawawi> p6

[21:19] <lichtkind> azawawi: didn't you want to make arab localization for kephra too?

[21:19] <azawawi> lichtkind: i didnt have the time :)

[21:19] <azawawi> lichtkind: im lazy

[21:19] <lichtkind> azawawi: yes were at #perl6 but what kind of refactoring?

[21:19] <azawawi> lichtkind: perl 6 rename variable/package/method etc

[21:20] <lichtkind> azawawi: thats good and why your drawn to perl but please dont speak bad about yourself

[21:20] <azawawi> lichtkind: :)

[21:20] <azawawi> lichtkind: i saw you perl 6 doc index... way cool.

[21:21] <lichtkind> azawawi: its growing every day and its just 1/14 of an larger effort

[21:21] <azawawi> lichtkind: something we can re-use to provide better p6 context documentation...

[21:21] <huf> azawawi: that sounds pretty neat 

[21:21] <lichtkind> azawawi: it supposed to be documentation, because i need something for Perl6::Doc

[21:22] <azawawi> lichtkind: any pods for it?

[21:22] <azawawi> lichtkind: that we can parse

[21:22] <lichtkind> azawawi: not yet, hve too many hats right now

[21:22] <lichtkind> azawawi: but its  atarget for shure

[21:23] <lichtkind> azawawi: but in longterm we need wiki syntax2POD converter anyway :)

[21:26] *** Whiteknight joined
[21:26] <azawawi> lichtkind: so what's new with kephra?

[21:27] <lichtkind> azawawi: in last weeks not much because i did much p6 stuff but 0.4.2 will come soon

[21:27] *** ejs1 joined
[21:28] <pugs_svn> r27211 | azawawi++ | [S:H:P6] added stuff for handling blocks

[21:29] <lichtkind> azawawi: i put my 8 part tutorial online, + wrote lot for perl 6 tablets + november wiki content + + so you can imagin

[21:29] <azawawi> lichtkind++

[21:30] <lichtkind> azawawi: thanks as yesterday obra added me to planet perl 6 you will sonn read from that

[21:30] <azawawi> lichtkind: does Kephra use Moose btw?

[21:31] <lichtkind> azawawi: no

[21:31] <lichtkind> azawawi: kephra has very few dependencies

[21:31] <lichtkind> i see that as stength

[21:32] <azawawi> lichtkind: i see

[21:33] <azawawi> good night &

[21:34] *** twigil left
[21:34] <lichtkind> good night

[21:35] <pmurias> lichtkind: not using Moose is a doubtfull strength

[21:35] *** pmurias left
[21:36] * moritz_ eats moose, from time to time

[21:36] *** pmurias joined
[21:36] <lichtkind> pmurias: kephra is not objet oriented in any way, so why use moose

[21:36] <lichtkind> pmurias: and speed is important to me

[21:36] <azawawi> pmurias: i agree :)

[21:37] <PerlJam> lichtkind: what is kephra?

[21:37] <lichtkind> PerlJam: an editor written in perl, mainly by me

[21:38] *** jferrero joined
[21:39] <lichtkind> PerlJam: and i use it for the most part too because im faster in than enywhere else except when i need heavvy debbuing

[21:39] <lichtkind> debugging

[21:40] *** mizioumt1 left
[21:41] *** azawawi left
[21:41] *** frew joined
[21:42] *** frew left
[21:44] <TimToady> std: [*] 

[21:44] <p6eval> std 27211: OUTPUT«Modification of non-creatable array value attempted, subscript -1 at STD.pm line 40962.␤FAILED 00:02 37m␤»

[21:45] <moritz_> std: [++]

[21:45] <p6eval> std 27211: OUTPUT«##### PARSE FAILED #####␤Unable to parse array composer; couldn't find final ']' at /tmp/a13ohbBoGE line 1:␤------> [32m[++[31m][0m␤    expecting any of:␤        noun␤   prefix or meta-prefix␤      prefix_postfix_meta_operator␤     whitespace␤FAILED 00:02 37m␤»

[21:45] *** KyleHa left
[21:46] <TimToady> there's no ++ infix

[21:46] *** iblechbot left
[21:46] <moritz_> I know

[21:47] <TimToady> perhaps the error messages should note that it gave up on parsing it as a reduce at some point

[21:47] <TimToady> std: [+] ;

[21:47] *** skids left
[21:48] <p6eval> std 27211: OUTPUT«##### PARSE FAILED #####␤Unable to parse array composer; couldn't find final ']' at /tmp/9wCY7bMoE0 line 1:␤------> [32m[+] [31m;[0m␤    expecting any of:␤       noun␤   prefix or meta-prefix␤FAILED 00:02 37m␤»

[21:48] <TimToady> that's...peculiar

[21:49] <TimToady> ordinarily a listop allows a null list

[21:49] <TimToady> std: [+]()

[21:49] <p6eval> std 27211: OUTPUT«ok 00:02 37m␤»

[21:49] *** simcop2387 is now known as Simcop2387

[21:52] *** payload left
[21:56] <Trey> TimToady: but what should the value of C<[+] ;> be?

[21:56] <TimToady> 0

[21:57] <TimToady> S03:3831

[21:57] <TimToady> so I'd say not parsing bare [+] is a bug in STD

[22:01] *** nihiliad left
[22:05] <pugs_svn> r27212 | lwall++ | [CORE] derive &Type from Type automatically, and share object

[22:05] <pugs_svn> r27212 | lwall++ | [CORE,STD,Cursor] move Type:: entries to Type<stash>

[22:05] <pugs_svn> r27212 | lwall++ | [Cursor] reinstate setting cache

[22:11] *** ejs1 left
[22:11] <pmurias> TimToady: derive &Type from Type - hey you are stealing our nasty hacks! ;)

[22:13] *** synthEEEE left
[22:17] *** synth joined
[22:19] *** cotto left
[22:21] <moritz_> TimToady: S05 says "So for regex matching purposes we define token patterns as those patterns containing no whitespace..."

[22:21] *** sri_kraih_ joined
[22:21] <moritz_> TimToady: what exactly does the "no whitespace" mean? that ther's no (implicit) <.ws> calls? or no whitespace in the regex text?

[22:22] <moritz_> or that it may not match whitespaces in any way (ie forbids \s)?

[22:23] *** viklund left
[22:23] <TimToady>  it's not talking about token in the declarator sense, but token in the LTM sense, I think

[22:23] <TimToady> clearly it's unclear :)

[22:23] *** synth left
[22:24] <TimToady> and, in fact, tokens in either sense may contain whitespace, so it probably needs to be hedged with a "generally" in any case

[22:24] *** synth joined
[22:26] <moritz_> let's ask differently - which of these versions does your LTM matcher for STD.pm imlement?

[22:28] *** viklund joined
[22:30] <moritz_> hm, I think the bullet list later in the text pretty much clarifies it

[22:32] <moritz_> maybe the initial sentence shouldn't talk about whitespaces, but rather about things that terminate a token pattern, to be listed later on

[22:34] <moritz_> anyway, I need sleep.

[22:34] <amoc> rakudo: sub foo ([$a,$b]) {...} # works now?

[22:34] <p6eval> rakudo 0e0671: OUTPUT«Malformed routine definition at line 2, near "foo ([$a,$"␤in Main (src/gen_setting.pm:0)␤»

[22:34] <moritz_> amoc: no.

[22:35] <amoc> thank you.

[22:36] *** Infinoid joined
[22:36] <Infinoid> Oi, why did I get kicked?

[22:38] <huf> for great justice?

[22:39] * Infinoid sets huf up the bomb

[22:43] *** sri_kraih left
[22:45] *** lichtkind_ joined
[22:47] *** nathan7 left
[22:48] *** pmurias left
[22:49] <pugs_svn> r27213 | lwall++ | [S05] some clarification requested by moritz++ re ws in longest tokens

[22:51] *** alester left
[23:03] *** viklund left
[23:03] *** lichtkind left
[23:11] *** rindolf left
[23:20] *** donaldh left
[23:21] *** skids joined
[23:21] *** donaldh joined
[23:26] *** DemoFreak left
[23:33] *** cotto joined
[23:57] *** Limbic_Region joined
