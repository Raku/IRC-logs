[00:00] <TimToady> std: [??42!!] 1,2

[00:00] <p6eval> std 29290: [31m===[0mSORRY![31m===[0m‚ê§Can't reduce ?? !! because conditional operators are too fiddly at /tmp/DQTaqDDv18 line 1:‚ê§------> [32m[??42!!][33m‚èè[31m 1,2[0m‚ê§    expecting prefix_circumfix_meta_operator__S_258reduce‚ê§FAILED 00:01 104m‚ê§

[00:01] <TimToady> std: [?? 42 !!] 1,2

[00:01] <p6eval> std 29290: [31m===[0mSORRY![31m===[0m‚ê§Preceding context expects a term, but found infix ?? instead at /tmp/fYZ9eVlSqF line 1:‚ê§------> [32m[??[33m‚èè[31m 42 !!] 1,2[0m‚ê§FAILED 00:01 105m‚ê§

[00:01] <colomon> TimToady: btw, I suspect I will get roped into helping implement metaoperators in ng when that is on the table...

[00:02] <TimToady> have the appropriate amount of pain^Wfun

[00:03] <colomon> The problem is that I'm addicted to using them, therefore...

[00:03] <TimToady> std: say $^O

[00:03] <p6eval> std 29290: [31m===[0mSORRY![31m===[0m‚ê§Unsupported use of $^O variable; in Perl 6 please use $?OS or $::OS at /tmp/lRd2sI1LR0 line 1 (EOF):‚ê§------> [32msay $^O[33m‚èè[31m<EOL>[0m‚ê§FAILED 00:01 105m‚ê§

[00:03] <TimToady> there we go

[00:03] <colomon> (Considering my second Advent post, I guess I'm a pusher, too.)

[00:03] <TimToady> std: undef

[00:03] <p6eval> std 29290: [31m===[0mSORRY![31m===[0m‚ê§Unsupported use of undef as a value; in Perl 6 please use something more specific:‚ê§     Mu (the "most undefined" type object),‚ê§   an undefined type object such as Int,‚ê§    Nil as an empty list,‚ê§    *.notdef as a matcher or method,‚ê§ Any:U as a type

[00:03] <p6eval> ..constraint‚ê§       or fail() ‚Ä¶

[00:06] *** sundar joined
[00:06] *** IMeMyself left
[00:07] *** broquaint left
[00:12] <zaslon> lolperl6adventhazblogged! perl6advent++ 'Day 8: .comb your constraints': http://perl6advent.wordpress.com/2009/12/08/day-8-comb-your-constraints/

[00:13] *** romanhunt_ joined
[00:13] *** RichiH joined
[00:13] *** tarski joined
[00:14] <RichiH> when i run perl6 in interactive mode, i am left with a _very_ basic line editor. it does not support <up>, <home>, etc

[00:15] *** romanhunt left
[00:15] <RichiH> is there a way to get a more comfortable, i.e. actuallu useful, line editor?

[00:15] <RichiH> using rakudo, fwiw

[00:16] <colomon> What platform?  (<up>, for instance, works fine on my OS X Rakudo build.)

[00:16] <RichiH> current debian sid

[00:17] *** lestrrat is now known as lest_away

[00:18] *** broquaint joined
[00:18] <carlin> RichiH: You need to have a readline library installed when you build Parrot

[00:19] <carlin> apt-get install libreadline5-dev

[00:20] <RichiH> hmm, yes, that makes sense. why 5 and not 6, though?

[00:21] <mberends> RichiH: it's GNU readline 5.2, independent of Perl

[00:22] <RichiH> mberends: yes, i know. i am just wondering why carlin suggested 5.2, not 6.0

[00:23] <mberends> RichiH: either one may be OK, 5.2 is probably in other Debian builds such as lenny or squeeze

[00:24] *** jferrero left
[00:25] <carlin> RichiH: because 6 didn't come up in my apt-cache search. 6 should be alright too.

[00:25] <wayland76> Will he have to rebuild after installing readline?

[00:25] <mberends> yes, clean and rebuild Parrot even

[00:26] <RichiH> already on it

[00:26] <carlin> Yip. rm -r parrot_install, and perl Configure.pl --gen-parrot again

[00:27] <mberends> carlin++: good going on proto installed-modules

[00:27] <RichiH> perl6: say [.] "while", " i", " am", " here";

[00:27] <p6eval> rakudo 7ef386: say requires an argument at line 2, near " [.] \"whil"‚ê§in Main (file src/gen_setting.pm, line 2593)‚ê§

[00:27] <p6eval> ..elf 29290: Parse error in: /tmp/GG7rvrRfpH‚ê§panic at line 1 column 0 (pos 0): Can't understand next input--giving up‚ê§WHERE: say [.] "while", " i", " am", ‚ê§WHERE:/\<-- HERE‚ê§  STD_red/prelude.rb:99:in `panic'‚ê§  STD_red/std.rb:76:in `scan_unitstopper'‚ê§  STD_red/std.rb:224:in `comp_unit'‚ê§ 

[00:27] <p6eval> ..STD_red/std.rb‚Ä¶

[00:27] <p6eval> ..pugs: *** ‚ê§    Unexpected "[.]"‚ê§    expecting bare or pointy block construct, ":", identifier or operator‚ê§    at /tmp/OexqcbvkWy line 1, column 5‚ê§

[00:27] <colomon> Is proto installed-modules actually up and running now?

[00:28] <TimToady> std: say [.] "while", " i", " am", " here";

[00:28] <p6eval> std 29290: [31m===[0mSORRY![31m===[0m‚ê§Unsupported use of . to concatenate strings; in Perl 6 please use ~ at /tmp/AazVWxCKzo line 1:‚ê§------> [32msay [.][33m‚èè[31m "while", " i", " am", " here";[0m‚ê§FAILED 00:01 106m‚ê§

[00:28] <TimToady> RichiH: see ^^

[00:28] <RichiH> perl6: say [~] "while", " i", " am", " here";

[00:28] <p6eval> elf 29290: /home/p6eval/pugs/misc/STD_red/match.rb:117:in `block in to_dump0': undefined method `to_dump0' for nil:NilClass (NoMethodError)‚ê§     from /home/p6eval/pugs/misc/STD_red/match.rb:117:in `map'‚ê§       from /home/p6eval/pugs/misc/STD_red/match.rb:117:in `to_dump0'‚ê§   from

[00:28] <p6eval> ../home/p6eval/pugs/misc/STD_red/‚Ä¶

[00:28] <p6eval> ..pugs, rakudo 7ef386: while i am here‚ê§

[00:34] *** szabgab left
[00:35] *** szabgab joined
[00:36] <carlin> colomon: no, still needs a bit of work

[00:37] <colomon> carlin++ # progress here is really good even if it's not complete yet.

[00:41] *** cdarroch_ left
[00:41] *** cognomore joined
[00:49] *** orafu left
[00:49] *** orafu joined
[00:50] *** mberends left
[00:57] *** tarski left
[00:59] *** tarski joined
[01:03] *** romanhunt_ left
[01:06] *** lest_away is now known as lestrrat

[01:09] <RichiH> why is the identifier function called .WHAT and not .what?

[01:12] <diakopter> I suspect the interrogatives are uppercase so they're less likely to conflict with user code.

[01:12] *** nihiliad joined
[01:12] <diakopter> .. and/or more easily identifiable as built-in stuff

[01:13] *** romanhunt joined
[01:15] <jnthn> RichiH: Uppercase generally means something a bit more magical is going on.

[01:16] <jnthn> A kind of cry for attention in a sea of more normal code. :-)

[01:16] <jnthn> Most of the time, there's ways to do stuff without relying on the .UPPERCASE stuff.

[01:16] <RichiH> k

[01:19] *** gfx joined
[01:21] <sjohnson> can P6 interpolate constants in the left hand segment of s/cow/pig/; type operation?

[01:22] *** Raugturi joined
[01:22] <jnthn> sjohnson: Perl 6 can. Rakudo doesn't do that just yet (in master).

[01:23] <jnthn> (Not sure if it'll be in ng, or following closely behind ng.)

[01:23] *** meppl left
[01:25] <sjohnson> cool thanks

[01:26] <sjohnson> my guess is when it is ready, it will use the {CONSTANT} syntax

[01:26] <jnthn> I'm not quite sure what syntax it will be...maybe not that one though.

[01:27] <jnthn> becuase that's just a block, rather than implying anything to match.

[01:27] *** Raugturi left
[01:27] <jnthn> I mean, if it was a constant $foo instead then it'd be s/$foo/bar/

[01:29] <jnthn> std: constant ::foo = 42; / ::foo /

[01:29] <p6eval> std 29290: ok 00:01 107m‚ê§

[01:30] <TimToady> s/$(constant)/bar/ probably works

[01:30] <jnthn> uh, menat constant foo = 42

[01:30] <TimToady> std: s/$(pi)/pie/

[01:30] <p6eval> std 29290: ok 00:01 106m‚ê§

[01:30] <jnthn> I fear the :: will be taken as a "don't backtrack" thingy there though.

[01:30] *** jimi_hendrix joined
[01:30] <TimToady> :: is not a true sigil

[01:31] <jnthn> Aye.

[01:31] <jnthn> .oO( sigilish )

[01:31] *** romanhunt is now known as ben_bash

[01:31] <jimi_hendrix> when does perl6 come out, i know Fedora 12 will have it (or was it 13?), but it must be released before then...

[01:33] <jnthn> jimi_hendrix: Hi! Perl 6 is a language spec. Fedora will include Rakudo, which is an implementation of the Perl 6 spec. It's not 100% there, but it's increasingly useful.

[01:34] <jnthn> jimi_hendrix: Development releases of Rakudo happen every month, and have for a while - now it's just hitting the point where it's considered worth packaging to make it easier to install. :-)

[01:34] <jimi_hendrix> oh cool

[01:34] <jnthn> We're planning a major, non-development release for April.

[01:35] <jimi_hendrix> so the command to run the interpreter is rakudo, not something like perl6

[01:35] <sjohnson> jnthn: a bit after xmas :)

[01:35] <sjohnson> jimi_hendrix: that's right

[01:36] <jnthn> jimi_hendrix: Rakudo installs a perl6 executable.

[01:36] <jnthn> jimi_hendrix: At the moment Rakudo is the most advanced implementation.

[01:36] <jimi_hendrix> ok

[01:36] <jimi_hendrix> what does it lack?

[01:39] <jnthn> Right now, quite a few bits (laziness, but that's coming in a month or two...things that still need significant effort are handling of native types, concurrency bits, versioned modules, etc). Equally, it does an awful lot too (lots of the built-in operators and types are there, the object model implementation is pretty advanced, multi-dispatch works well, a large proportion of the regexes/grammars stuff is there and more is to come soon).

[01:40] <jimi_hendrix> perl6 is lazy? cool!

[01:40] <IllvilJa> How is TCP/IP doing in rakudo?

[01:40] *** JimmyZ joined
[01:40] <colomon> jnthn: any idea why Rat.abs would work and Int.abs would not?

[01:40] <IllvilJa> Or rather, IPC in general.

[01:40] <jnthn> IllvilJa: Apparently, well enough for people write write HTTP clients and IRC bots. :-)

[01:40] <jnthn> IllvilJa: Oh, and HTTP servers too.

[01:40] <IllvilJa> Whooooo...

[01:40] <IllvilJa> \o/

[01:41] <jnthn> IllvilJa: See HTTP::Daemon on github somewhere. :-)

[01:41] <jnthn> colomon: Erm. Not off hand. :-/

[01:41] <IllvilJa> Opens up a wide spectra of intresting things to tinker with!

[01:41] <jnthn> colomon: Can you define "doesn't work" a little more? :-)

[01:43] <colomon> jnthn: Well, it works, for some broken definition of works.  I've written Int.abs and Rat.abs.  My version of Rat.abs is called when you say abs(Rat), but my version of Int.abs is not called when you say abs(Int).

[01:43] <jnthn> Both are marked is export and/or are multi?

[01:43] <jnthn> If so, I smell a bug...

[01:43] <colomon> in fact, I just cut and pasted from one to the other.  :)

[01:43] <jnthn> heh

[01:44] <jnthn> Sounds failish.

[01:44] <colomon> I mean, abs is just self < 0 ?? -self !! self, after all.

[01:44] <colomon> Trying another tweak of things....

[01:44] <jnthn> Oh! I wonder if it's just that the invocant's type is not being set up properly yet.

[01:45] <colomon> also, getting horrible self-recursive things when I try to call abs(Inf) or abs(NaN), which is just odd.

[01:45] <colomon> this tweak didn't work either.

[01:45] <colomon> invocant's type?

[01:45] <jnthn> yeah

[01:46] <jnthn> When you have a class Foo { method bar() { } } then the type of the invocant of bar in its signature shoulod be Foo.

[01:46] <jnthn> Otherwise it won't work out too well when exported.

[01:46] <jnthn> I'll try and have a dig tomorrow on that.

[01:48] <colomon> Shall I check in what I have?

[01:49] <jnthn> Sure, provided it doesn't cause breakage of other things.

[01:51] *** quantumEd left
[01:51] <colomon> okay, that's even weirder.

[01:51] *** agentzh joined
[01:52] <colomon> abs(123).WHAT ~~ Int, but 123.abs.WHAT ~~ Num.

[01:53] <sjohnson> rakudo:  say sprintf("%.02f", 12.30000");

[01:53] <p6eval> rakudo 7ef386: Confused at line 2, near "(\"%.02f\", "‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[01:53] <sjohnson> rakudo:  say sprintf("%.02f", 12.30000);

[01:53] <p6eval> rakudo 7ef386: 12.30‚ê§

[01:53] <sjohnson> rakudo:  say sprintf("%.02f", 12.3);

[01:53] <p6eval> rakudo 7ef386: 12.30‚ê§

[01:53] <sjohnson> i don't think p5 can do that.. or at least i have no idea how it's done

[01:55] <sjohnson> nevermind, seems to work

[01:55] <sjohnson> *scratches his head*

[02:01] <Tene> jnthn: Fedora has included rakudo for months.

[02:03] <RichiH> btw, even though i don't suppose anyone really cares i know why the context of sigils has changed in perl6 (i think)

[02:03] <RichiH> (from "what is coming out to the box" to the plain old "what kind of box is it coming out of")

[02:04] <RichiH> my assumption would be overloading

[02:04] <sjohnson> hugme: patpat sjohnson

[02:11] *** masak joined
[02:12] <masak> lay it on me, phenny.

[02:12] <phenny> masak: 07 Dec 11:04Z <jnthn> tell masak first virtual servers...then virtual timezones. :-) And yes, :foo(:bar(:$baz)) will get you a few entries. :-)

[02:12] <phenny> masak: 07 Dec 12:00Z <carlin> tell masak http://gist.github.com/250786 # Not what you were after but Rakudo's IO couldn't do that yet

[02:12] <phenny> masak: 07 Dec 19:16Z <Wolfman2000> tell masak November is on Web.pm, right? I'm starting to wonder if I can use Squerl, Astaire, and whatever else effectively. May need some backup with installing the modules right, though.

[02:14] <masak> phenny: tell Wolfman2000 that November isn't on Web.pm yet. plan to migrate it in the next few months, though. whether Squerl, Astaire et al can be used effectively at this point remains an open question. my hunch is that they will shrink the codebase of November (by removing insane hacks), and not make it deadly slow or unreliable in the process.

[02:14] <phenny> masak: I'll pass that on when Wolfman2000 is around.

[02:14] <sjohnson> heh

[02:15] <masak> carlin: interesting. it'd be interesting to hear what you learned from the whole exercise.

[02:24] <JimmyZ> Squerl?

[02:25] <JimmyZ> Astaire?

[02:27] <masak> JimmyZ: good evening. yes. they're part of the Web.pm effort.

[02:28] <masak> JimmyZ: one is a database interface, the other is a cute-syntax dispatcher.

[02:29] <JimmyZ> I had treated Squerl as *Super perl* by my eye several times.

[02:30] <JimmyZ> masak: good evening to you.

[02:30] <masak> well, I'd like to think the code is pretty nice. so "Super Perl" might be appropriate. :P

[02:30] <masak> but the real etymology is more along the lines of SQL + Perl.

[02:31] *** Wolfman2000 joined
[02:31] <JimmyZ> Squerl -> Superl 

[02:31] <Tene> good evening, masak

[02:32] <masak> Tene: y0.

[02:32] <JimmyZ> So My eye see it, Super perl ;)

[02:32] <Wolfman2000> evening

[02:32] <phenny> Wolfman2000: 02:14Z <masak> tell Wolfman2000 that November isn't on Web.pm yet. plan to migrate it in the next few months, though. whether Squerl, Astaire et al can be used effectively at this point remains an open question. my hunch is that they will shrink the codebase of November (by removing insane hacks), and not make it deadly slow or unreliable in the process.

[02:32] <Wolfman2000> masak: ...could have thought...nevermind

[02:33] <masak> JimmyZ: I would think an eye which has to separate all these characters would be able to distinguish a few letters. :P http://masak.org/carl/w/index.php/Characters_that_look_like_telephone_poles

[02:33] <JimmyZ> oh, SQLperl

[02:34] <JimmyZ> masak: yep

[02:36] <carlin> masak: I learnt how it could possibly be done once rakudo has better IO, but without being able to run it I don't know if/how well it would work in practice

[02:36] <masak> carlin: what do we need to implement in Rakudo?

[02:37] <carlin> masak: non-blocking IO. Need to be able to accept new connections while still receiving and relaying messages to the exisiting connections.

[02:37] <Tene> carlin: like, perhaps, select()?

[02:37] <masak> JimmyZ: there are worse examples: these are my personal unfavourite. Â§± Áü¢

[02:38] <Tene> I've had select() on my tasklist for quite a while... just need to get around to writing it.

[02:39] <JimmyZ> mask: Áîü Áâõ |  ÁôΩ Êó• Áî≤ Áî± Êó¶

[02:40] <masak> JimmyZ: aye; similar. I don't seem to have a problem with those, though.

[02:40] <JimmyZ> masak: or Áâõ Âçà 

[02:40] <masak> aye. they're in my telephone poles list.

[02:40] <JimmyZ> It's just like Â§± Áü¢

[02:41] <carlin> Tene: yes, that would help

[02:41] * carlin wishes he had the skillset to implement that kind of thing

[02:42] <Tene> carlin: the first step is writing a Select PMC for Parrot.

[02:43] <TimToady> I have trouble with ÈáÜ vs Èáá

[02:44] <JimmyZ> masak,TimToday: I think the right way is writing them for 5 years. I had do it in my primary school and junior high school, It is 9 years. :)

[02:45] <JimmyZ> s/do/done/

[02:45] <pugs_svn> r29291 | colomon++ | [t/spec] Get working with ng. 

[02:45] <JimmyZ> s/in my/at/

[02:48] <JimmyZ> TimToady: I don't think ÈáÜ is a modern word.

[02:48] <JimmyZ> TimToady: It hadn't be used now.

[02:49] <masak> it might be in modern use in Japanese.

[02:49] <JimmyZ> that's out of my language

[02:53] <masak> well, sure. but kanji don't always look like the hanzi they came from.

[02:54] *** ShaneC left
[02:55] <Wolfman2000> ...I still need to eventually learn how to speak/type native japanese

[02:56] <JimmyZ> masak: I don't know kanji much.

[02:56] <masak> me neither.

[02:56] <Wolfman2000> I know only extreme basics, like „Å≤„Çâ„Åå„Å™, „Ç´„Çø„Ç´„Éä, and Êº¢Â≠ó

[02:57] *** gfx left
[02:57] <Wolfman2000> or rather, I know how to use my Mac IME

[02:59] *** orafu left
[02:59] *** orafu joined
[03:00] <TimToady> I have to look twice at ÂÖÜ vs Âåó

[03:03] <dalek> rakudo/ng: 153b18e | (Solomon Foster)++ | src/Perl6/Grammar.pm:

[03:03] <dalek> rakudo/ng: Remove pirop from abs.

[03:03] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/153b18e64deb4f86dbe14ca768461b831600dbcd

[03:03] <dalek> rakudo/ng: 16307de | (Solomon Foster)++ | t/spectest.data:

[03:03] <dalek> rakudo/ng: Turn on abs.t.

[03:03] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/16307de1e72f6da6e6d406548db01bceef63b815

[03:03] <dalek> rakudo/ng: ed63968 | (Solomon Foster)++ | src/core/ (5 files):

[03:03] <dalek> rakudo/ng: Try to rework abs to return the same type passed in.

[03:03] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/ed63968ab19bbd705bd2d139b025d7a53a6699e3

[03:03] <masak> TimToady: don't think I've ever mistaken those. they sound completely different. :P

[03:03] <JimmyZ> TimToady: Maybe ;) though they are very different 

[03:04] *** tarski left
[03:04] *** tarski joined
[03:09] <colomon> ng: say abs(-10).WHAT

[03:09] <p6eval> ng fcdef6: 0‚ê§

[03:09] <colomon> wth?

[03:09] <colomon> ng: say (abs(-10)).WHAT

[03:09] <Wolfman2000> rakudo: say abs(-10).WHAT

[03:09] <p6eval> ng fcdef6: Int()‚ê§

[03:09] <p6eval> rakudo 7ef386: Use of type object as value‚ê§0‚ê§

[03:09] <Wolfman2000> ...

[03:09] <Wolfman2000> rakudo: say (abs(-10)).WHAT

[03:09] <p6eval> rakudo 7ef386: Int()‚ê§

[03:09] <masak> 11k views yesterday on the perl6advent blog! \o/

[03:10] <colomon> oh

[03:10] <Wolfman2000> masak: wonder how many we'll get this time with my code challenge

[03:10] <masak> the thing doing visitor number graphs has literally collapsed. it doesn't appear any more.

[03:10] <colomon> we're still running about 140 hits an hour, I think.

[03:10] <carlin> slashdot++

[03:11] <Wolfman2000> 3360 hits then

[03:11] <masak> timoreilly++

[03:14] *** nbrown_ left
[03:14] *** tarsk_ joined
[03:20] *** meppl joined
[03:25] *** envi^home joined
[03:32] <colomon> jnthn: I've checked in all the abs changes.  What I can see (just added a bunch of says locally), if you call 10.Rat.abs or 10.Num.abs, it calls Rat.abs or Num.abs.  If you call 10.abs, it calls Any.abs and then Num.abs.

[03:33] <colomon> Same with 10.Int.abs

[03:42] <colomon> ng: say 10.Int.abs.WHAT

[03:42] <p6eval> ng 153b18: Num()‚ê§

[03:43] <colomon> ng: say 10.Rat.abs.WHAT

[03:43] <p6eval> ng 153b18: Rat()‚ê§

[03:44] <PerlJam> Who controls the content of dev.perl.org/perl6 ?

[03:44] *** thowe joined
[03:44] <thowe> um, hi!

[03:44] <PerlJam> greetings thowe 

[03:45] <thowe> Hiya PerlJam.

[03:45] *** envi^office joined
[03:46] <thowe> I somehow tripped over something about Perl 6 online today and I feel like I have been distracted by something shiny.  So I'm indulging that impulse.  I have fond memories of learning Perl 5, but it's been a while since I used perl.

[03:46] <PerlJam> or perhaps more importantly, who controls the content of perlcabal.org/syn?    It would be exceedingly better IMHO if the synopses weren't listed on dev.perl.org/perl6 under "related sites"

[03:46] <thowe> So, is Parrot something kind of like the jvm or Mono?

[03:46] <PerlJam> thowe: Perl 5 is Kansas, Perl 6 is Oz   :)

[03:47] <PerlJam> thowe: yes, Parrot is a VM similar to those but geared more towards dynamix languages like Perl

[03:48] <PerlJam> thowe: btw, Parrot has it's own IRC channel  irc.parrot.org:#parrot

[03:48] *** tarski left
[03:49] <thowe> PerlJam: I have to say, Perl lost some of its appeal when I started doing Ruby back in 2003...  But I would be a fool to not learn something about Perl 6.

[03:50] <PerlJam> thowe: why exactly did perl lose some appeal?  Was it Ruby's higher-level, better integrated object model?

[03:51] *** tarsk_ left
[03:51] <PerlJam> I've used ruby and found it a joy to program in, but somehow Perl still fits my brain better.

[03:52] *** nbrown joined
[03:55] <thowe> There were some specific things, but Ruby seemed cleaner, easier to read, powerful...  Also, when I would pass a multi-dimensional array just a sec

[03:56] <thowe> sorry..  when passing a multi-dimensional array to a function, it would flatten it, things like that.

[03:56] <thowe> Also, I did kind of find it hard to read, but I learned a LOT by learning perl.

[03:57] <thowe> But this new Perl sounds like it removes cruft and is redesigned to be groovy.  Kind of hard to ignore a language that has this much work in it plus is written by people who know what they are doing.

[03:58] <PerlJam> That last comment is curious.  Do you mean to imply that other language designers/implementors *don't* know what they are doing?  ;)

[03:59] *** wayland joined
[04:00] <PerlJam> thowe: btw, have you seen perl6advent.wordpress.com ?  Is that what led you here?

[04:01] <thowe> um, no...

[04:01] <thowe> What's that?

[04:01] <PerlJam> the perl 6 advent calendar.

[04:02] <thowe> Ah, yes actually :)

[04:02] <PerlJam> Well, Day 1 shows you how to get and install Rakudo (a Perl 6 implementation) if you're interested in playing with Perl 6

[04:03] <thowe> About other language designers...  No, not that they don't know what they are doing, but that they slmost certainly don't have this amount of background and direct community involvement to draw on when creating a language for mass appeal.

[04:06] <thowe> Perl 5 showed itself suitable for an extremely wide array of tasks.  I would suspect that Perl 6 would also, AND be very modern and compete well against other modern languages with all the buzz words.

[04:06] <thowe> ...also, the rails groupies have almost ruined Ruby for me...

[04:07] <PerlJam> You have an interesting viewpoint.  So often I hear/see extremes that I don't really know what the middle ground might look like.

[04:09] <thowe> wasn't there a link to an early copy of a book someplace?  I would like to read about it.  All I've heard is the years of hating on it and some tidbits about what it wants to be.  I would love to get some actual knowledge.

[04:10] <PerlJam> http://github.com/perl6/book

[04:10] <thowe> Sadly, as much as I respect Python, it just doesn't feel right to me.

[04:10] <PerlJam> It's in very rough form though

[04:10] *** wayland76 left
[04:11] <PerlJam> python wouldn't be so bad if Guido understood more powerful language features.

[04:11] <thowe> Is there a better place to get some useful "This is what Perl 6 is about" reading done?

[04:11] *** alester joined
[04:11] <PerlJam> thowe: there are the synopses (if you're not afraid to read alot)  http://perlcabal.org/syn

[04:12] <PerlJam> thowe: you can always ask stuff here.

[04:12] <PerlJam> Usually there are others awake than just me.

[04:13] <thowe> Hm.  I should see how hard this is to install on Free/OpenBSD

[04:13] <thowe> nothing beats a bit of playing.

[04:14] <thowe> y'know, one thing that got me into Ruby was that the CGI library would auto-detect that I was testing it in a browser and take arguments as if I was working in a browser.  Made troubleshooting a breeze...

[04:14] <thowe> I mean, testing from the command line...

[04:15] <thowe> I always wished the perl CGI module would do that...

[04:15] *** wayland_ joined
[04:16] <PerlJam> eh?  

[04:17] <thowe> When you write a ruby cgi program, and run it from the command line, it detects that you are in a command line and allows you to input stuff that it would normally get from the URL string.

[04:17] <thowe> Maybe there is a way to do this with the perl cgi module, but I never learned how.

[04:17] <PerlJam> perl's CGI module has always done that.

[04:18] <PerlJam> you simply pass name=val on the command line

[04:18] <PerlJam> (or you could set some environment variables)

[04:18] <thowe> hm...  Wish I had known that then...

[04:19] <PerlJam> heck, I think cgi-lib.pl even did this back in the perl 4 days.

[04:19] <thowe> I probably would have figured that out today, but back then I was a bit green

[04:19] *** rgrau` joined
[04:20] <thowe> I'm also kind of grateful how much I learned about oop when I finally "got" Ruby.

[04:20] *** rgrau left
[04:20] <thowe> but I digress.  I wanna see what Perl 6 is all about.

[04:20] <PerlJam> thowe: install Rakudo.  Play!  :)

[04:21] <wayland_> To me, Perl 6 = grammars

[04:21] <wayland_> You can group your regexes into grammars

[04:21] <wayland_> kind of like you can group methods into objects

[04:21] <thowe> I'm not sure I grok what rakudo is yet...

[04:21] *** wayland_ is now known as wayland76

[04:22] <wayland76> Oh.  Perl 6 = specification.  Rakudo = implementation

[04:22] <carlin> thowe: rakudo is a perl6 implementation that runs on the Parrot VM

[04:22] <wayland76> Official Perl 6 spec documents: http://perlcabal.org/syn/

[04:22] <wayland76> Yes.  Rakudo is not the only implementation, only the most famous one at the moment

[04:23] <thowe> What has made it the most famous?

[04:24] <wayland76> Well, it runs on Parrot, which was the plan from the beginning, and it has developers who talk about it, and it's probably the furthest along in general

[04:24] <thowe> OK

[04:25] <wayland76> Another one, SMOP, is probably the main competitor

[04:25] <thowe> so, I need a parrot vm first then(?)

[04:25] <PerlJam> Rakudo also implements most of the spec as compared with the other implementations

[04:25] <carlin> thowe: rakudo pulls that in itself during the install

[04:26] <PerlJam> thowe: if you follow the instructions on Day 1 of the Perl 6  Advent Calendar, you'll get a Parrot too

[04:26] *** stephenlb left
[04:26] <wayland76> Or if you're a package fiend (like me), there are other options, I think

[04:27] <PerlJam> aye, fedora and debian both have rakudo packages I do believe.

[04:27] <thowe> OK, I'm going to get into this calendar.  Will BSD make work, or do I need gmake?

[04:27] <PerlJam> and I think there's a cygwin package too

[04:27] <PerlJam> thowe: try it and report back to us :)

[04:27] <thowe> ok

[04:27] <PerlJam> thowe: though my gut says it should work

[04:28] <wayland76> There seems to be a FreeBSD port

[04:28] <wayland76> and I know there's a mac one

[04:28] <PerlJam> feather is a BSD system, but I'm not sure what's been installed in the way of making parrot/rakudo work

[04:28] * thowe is git-ing a clone...

[04:29] *** wayland left
[04:29] * thowe is gen-ing a parrot

[04:31] <thowe> I'm on an oldish OpenBSD system at the moment.  I really need to get my act in gear.

[04:36] *** justatheory left
[04:37] <masak> rakudo: sub foo($a = 1, $b) { say $a }; foo(3)

[04:37] <p6eval> rakudo 7ef386: Not enough positional parameters passed; got 1 but expected between 1 and 2‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[04:38] * masak submits rakudobug

[04:38] <masak> ng: sub foo($a = 1, $b) { say $a }; foo(3)

[04:38] <p6eval> ng 153b18: Not enough positional parameters passed; got 1 but expected between 1 and 2‚ê§current instr.: '&foo' pc 108 (EVAL_1:49)‚ê§

[04:39] <thowe> rakudo: sub foo($a, $b = 2) { say $a }; foo(3)

[04:39] <p6eval> rakudo 7ef386: 3‚ê§

[04:40] <thowe> rakudo: sub foo($a, $b = 2) { say $b }; foo(3)

[04:40] <p6eval> rakudo 7ef386: 2‚ê§

[04:41] <thowe> I don't understand, shouldn't it expect $b to be passed since it wasn't given a default value?

[04:42] <PerlJam> $b was given a default value of 2

[04:42] <thowe> not in masak's code.

[04:43] <PerlJam> oh.

[04:43] <thowe> I actually expected mine to work as it did.  But I also would have expected his to act as it did...

[04:43] <PerlJam> $a and $b are positional parameters, the first thing passed will always be $a and the second thing $b

[04:43] <thowe> unless this is just something I don't know about Perl6

[04:44] <thowe> PerlJam: yeah.  But he said he was going to submit a bug, but he actually got the result I would have expected him to.

[04:44] <PerlJam> rakudo: sub foo($a = 1, $b) { say $a }; foo(:b(5));

[04:44] <p6eval> rakudo 7ef386: 1‚ê§

[04:44] <thowe> ooo.  That's a trick I don't have in C++

[04:44] <thowe> or C

[04:45] <PerlJam> rakudo: sub foo($a = 1, $b) { say $b }; foo(:b(5));  # to show the other side

[04:45] <p6eval> rakudo 7ef386: 5‚ê§

[04:46] <thowe> Maybe I'm just naive, but I don't think I have seen that kind of trick in another language..  Where you define which parameter you are passing

[04:46] <thowe> maybe I've just had too much beer

[04:47] <masak> thowe: you mean named arguments? it exists here and there.

[04:48] <TimToady> std: sub foo($a = 1, $b) { say $a }; foo(3)

[04:48] <p6eval> std 29291: [31m===[0mSORRY![31m===[0m‚ê§Can't put required parameter after optional parameters at /tmp/jynShhenPv line 1:‚ê§------> [32msub foo($a = 1, $b[33m‚èè[31m) { say $a }; foo(3)[0m‚ê§    expecting any of:‚ê§   constraint‚ê§       parameter‚ê§        trait‚ê§  whitespace‚ê§FAILED 00:01 108m‚ê§

[04:48] <thowe> Hmm.  Not in C/C++ I don't think.  Been doing too much of those lately.

[04:48] <carlin> C# has them

[04:49] <thowe> Haven't seen C#/  I wonder if I can do that in Ruby...

[04:51] <thowe> can you do that in Perl 5?

[04:52] <thowe> If I do make install of this Rakudo thing, where will it install to?  Can I uninstall it?

[04:53] <carlin> It installs into the same directory parrot was installed in

[04:53] <carlin> usually parrot_install in rakudo's directory

[04:54] <thowe> ah, ok

[04:54] <masak> thus, uninstalling is just rm -rf on that directory. :)

[04:56] <thowe> OpenBSD's built-in make seems to have worked fine, BTW.

[04:57] <thowe> I'm told Ruby can't name the parameters passed.  I didn't think so...

[04:57] <thowe> name arguments I mean

[04:58] *** meppel joined
[05:03] <thowe> So, FYI, Rakudo is in and working.  Thanks!

[05:05] <masak> thowe++

[05:06] <thowe> on to day2 I guess...

[05:08] <wayland76> Perl 5 does hash keys instead of named parameters; similar on the outside, different on the inside

[05:08] *** JeffreyKegler joined
[05:11] *** JeffreyKegler left
[05:12] <thowe> heh, how does one end a Perl6 program?  Can't seem to get out of the REPL.

[05:13] <thowe> nm, crtl-d did it...

[05:13] <mdxi> ^D works, as per usual

[05:13] <masak> thowe: the REPL is not very user-friendly yet. pmichaud++ is working on it.

[05:14] *** meppl left
[05:15] *** maybehuman joined
[05:15] *** maybehuman left
[05:19] <JimmyZ> rakudo perl startup time is 2s up.

[05:21] <masak> JimmyZ: what do you mean? has it become 2s shorter?

[05:21] <masak> or 2s longer?

[05:22] <JimmyZ> masak: 2s longer now.

[05:22] <masak> ah. 'up by 2s'.

[05:32] <masak> rakudo: sub foo { @_[0] = "bah" }; my $a = "!"; foo($a); say $a

[05:32] <p6eval> rakudo 7ef386: !‚ê§

[05:32] <masak> is the default signature :(*@_ is copy) ?

[05:32] <masak> I'd have expected the above to say "bah".

[05:33] <masak> in Perl 5, it says "bah". I thought the point of the default signature was to emulate Perl 5 behaviour.

[05:33] <TimToady> i'd've expected it to blow up

[05:33] * masak submits rakudobug

[05:34] <masak> TimToady: so in the default signature, @_ isn't writeable?

[05:34] <TimToady> no, it's different from P5 in that

[05:34] <masak> ok.

[05:34] <TimToady> but most P5 programs aren't modifying their parameters

[05:34] <TimToady> and we didn't want to pay the might-be-lvalue penalty anymore

[05:35] <TimToady> that was decided in about 2003 or so

[05:35] <masak> nod.

[05:42] *** meppel left
[05:44] <masak> here's an early draft for tomorrow's Advent Calendar post: http://gist.github.com/251434

[05:44] <masak> it's been great fun to write it. I'm learning new things, too. :)

[05:45] <masak> I expect it to be quite long, maybe 2x as long as the current draft.

[05:45] <masak> that may or may not be a good thing...

[05:45] <masak> anyway, comments, especially ones pointing out where I've mixed up the concepts 'parameter' and 'argument', are most welcome.

[05:47] <masak> swimming &

[05:48] *** masak left
[05:52] <diakopter> It also -> It is also

[05:52] <diakopter> paramters -> parameters

[06:02] *** kaare joined
[06:03] *** kaare is now known as Guest30215

[06:08] <thowe> I know this is probably a stretch, but is there a perl6 program that does kind of what nanoc does?  http://nanoc.stoneship.org/  It's a "CMS" that "compiles" some templates and other stuff into static html.  I was about to start moving to the new version, but then I was kind of wondering if there was something similar in Perl6 to try(?)

[06:18] <wayland76> ping masak?

[06:19] <wayland76> I don't think there's anything like that; there's a Web.pm module that does things like that; masak knows the most about those things

[06:19] <wayland76> If you're asking perl6 web-related questions, you may also want to try the #november-wiki channel

[06:20] <wayland76> But I see he's gone swimming.  

[06:20] <wayland76> Maybe eiro or PerlJam know something too

[06:21] <wayland76> (some people's IRC clients will go "bing" if I mention their name)

[06:28] *** awwaiid left
[06:31] *** thowe left
[06:32] *** yako left
[06:33] *** gfx joined
[06:35] *** thowe joined
[06:35] <thowe> gah.  I got some tea, came back and touched my mouse and the static shock rebooted my computer.

[06:36] <thowe> If anyone ever answered my question about a nanoc work-alike I missed it.

[06:37] <carlin> thowe: http://irclog.perlgeek.de/perl6/2009-12-08#i_1812478

[06:38] <thowe> ah, cool.  Guess I didn't miss anything.  Is there a place where people can look for apps written in Perl6?  Like ruby forge?  Or is perl so huge it would be pointless?

[06:40] <carlin> Most of the Perl 6 projects are on github, because CPAN-for-Perl6 is still up in the air at the moment

[06:40] <carlin> There's a (prototype) Perl 6 package manager, that has a list: http://github.com/masak/proto/blob/master/projects.list

[06:42] <carlin> If you see something there you want to look at pointme can help you find it

[06:42] <carlin> pointme: rssbot

[06:42] <pointme> carlins's rssbot is at http://github.com/carlins/rssbot/

[06:43] <thowe> cool..  Now I have to remember my github password

[06:46] <thowe> I think I found one called Krang

[06:47] <thowe> http://krangcms.com/

[06:48] <thowe> or not, I guess it is Perl 5

[06:48] <thowe> ugh, and MySQL...

[06:53] *** xinming_ left
[06:54] <Wolfman2000> PerlJam: You here? I have a report to give you.

[06:58] <Wolfman2000> ...alright, do things the old fashioned way

[06:58] <Wolfman2000> phenny: tell PerlJam there are more catches than expected with nearlyfreespeech.net. Frameworks are not as easy to set up as expected due to to a variety of issues. I'll keep you informed.

[06:58] <phenny> Wolfman2000: I'll pass that on when PerlJam is around.

[07:00] <PerlJam> Wolfman2000: thanks.

[07:00] <phenny> PerlJam: 06:58Z <Wolfman2000> tell PerlJam there are more catches than expected with nearlyfreespeech.net. Frameworks are not as easy to set up as expected due to to a variety of issues. I'll keep you informed.

[07:00] <Wolfman2000> that was fast

[07:00] <PerlJam> I was just about to ask everyone to critique my perl6advent post

[07:01] <PerlJam> :-)

[07:01] *** nihiliad left
[07:01] <Wolfman2000> PerlJam: let me take a look

[07:01] *** gfx left
[07:02] <Wolfman2000> ...the private one on Day 10?

[07:03] <PerlJam> It shouldn't be private any more

[07:03] <PerlJam> But yes, Day 10

[07:04] <PerlJam> Any and all comments welcome.

[07:04] <Wolfman2000> Long as it's not out for the public to see...

[07:05] * Wolfman2000 applauds the story, but boos the self inclusion.

[07:05] <PerlJam> Would you rather I used your nick?

[07:05] <Wolfman2000> heck no

[07:06] <Wolfman2000> I just don't like the idea that you end up being the savior of the gift...even if it is true.

[07:06] <PerlJam> I would have used someone else's nick, but I said something I would say rather than trying to think of what someone else might say.

[07:07] *** vamped joined
[07:07] <PerlJam> "saviour of the gift" is an interesting phrase.

[07:08] <PerlJam> anyway ... I'm tired and it's way past my bed time.

[07:08] <PerlJam> good night and I'll see y'all in a few hours  :)

[07:09] <Wolfman2000> similar...I'm getting tired of dealing with this issue right now.

[07:09] <Wolfman2000> Can't even focus on Perl 6 properly until I take care of my websites, and those are in danger of being knocked offline in a few weeks

[07:12] *** alester left
[07:22] <spinclad> masak: line 1, they way -> the way

[07:23] <spinclad> line 41, gives solves -> solves

[07:25] <spinclad> line 115: paramtere

[07:27] *** iblechbot joined
[07:27] <spinclad> phenny: tell masak ^^ typos from diakopter and me

[07:27] <phenny> spinclad: I'll pass that on when masak is around.

[07:33] <moritz_> good morning

[07:34] <spinclad> good &stilldark, moritz

[07:39] *** psalc1 joined
[07:40] <psalc1> So where does a newbie just through the llama book begin to contribute?

[07:42] <moritz_> psalc1: the llama book is Perl 5. If you want to contribute to Perl 6, you have to learn the language first

[07:42] *** psalc1 left
[07:45] *** JimmyZ_ joined
[07:50] *** rfordinal left
[07:50] *** zamolxes left
[07:51] *** alexn_org joined
[07:54] *** JimmyZ left
[08:05] *** gfx joined
[08:09] *** xomas left
[08:10] *** Yvonne joined
[08:11] *** lestrrat is now known as lest_away

[08:11] *** Yvonne left
[08:11] *** xomas_ joined
[08:34] *** c1sung left
[08:38] *** c1sung joined
[08:44] *** alexn_or1 joined
[08:47] *** synth left
[08:48] *** vamped left
[08:52] *** Su-Shee joined
[08:52] <Su-Shee> good morning.

[08:52] <moritz_> hi Su-Shee 

[08:53] <mathw> Good morning

[08:53] <Su-Shee> moritz_: do I have to buy the special edition with your article? :)

[08:53] <moritz_> Su-Shee: not really

[08:53] <moritz_> Su-Shee: it's mostly just a rebrush from the first article in the iX series

[08:54] <Su-Shee> moritz_: any feedback from readers?

[08:55] <moritz_> Su-Shee: nope

[08:55] *** alexn_org left
[08:57] *** synth joined
[08:58] *** Baggio_ joined
[09:08] *** dbrock` left
[09:12] *** alexn_or1 left
[09:16] *** jl_2 joined
[09:18] * mathw writes a lengthy reply to one of the Slashdot comments

[09:19] <mathw> Someone actually asked about some misconceptions fairly intelligently, so I felt it was worth setting things straight

[09:22] *** lest_away is now known as lestrrat

[09:24] *** Baggio_ left
[09:29] <sjohnson> yo matt-w

[09:31] <moritz_> mathw: which question are you replying to?

[09:33] *** quantumEd joined
[09:33] *** gfx left
[09:42] <wayland76> oh, and mathwis a much cleverer handle than Matt-W :)

[09:42] *** Baggio_ joined
[09:43] <Juerd_> 05:28 <@PerlJam> feather is a BSD system, but I'm not sure what's been installed in the 

[09:43] <Juerd_>                  way of making parrot/rakudo work

[09:43] <Juerd_> Are there multiple systems called feather?

[09:43] <Juerd_> feather.perl6.nl isn't BSD; it's Linux.

[09:48] *** synth left
[09:49] <mathw> moritz_: http://developers.slashdot.org/comments.pl?sid=1468708&cid=30349730 unfortunately my lack of a Slashdot account means my reply sort of disappears. I should've made one. Oh well.

[09:49] <mathw> wayland76: I definitely prefer it. That hyphen was awkward, and it didn't sound right in my head

[09:50] <moritz_> I think you have to pay for /. accounts

[09:53] <wayland76> Hmm.  I have a slashdot account, and I've never paid

[09:53] <wayland76> I thought they were free, but paying got rid of the ads

[09:53] *** synth joined
[09:53] <moritz_> then maybe I did something wrong when trying to sign up, like 3 years ago

[09:54] <moritz_> then again my English wasn't particularly good back then, and I might have misunderstood something

[09:54] <wayland76> I signed up about 12 years ago :)

[09:55] <moritz_> I'm not sure I had internet 12 years ago :-)

[09:55] <wayland76> I must be the old man here :)

[09:56] *** Baggio_ left
[09:56] <wayland76> I got the Internet in '95.  I started Uni the same year that the Internet went from unknown to "Hey, what's this Internet thing everyone's talking about"

[09:57] <wayland76> It took my University's IT department pretty much my entire time at University to recover from the sudden resource drain.

[09:57] *** xinming joined
[09:57] <wayland76> Anyway, I probably signed up to Slashdot in 96.  So 13 years ago.  

[09:59] <mathw> slashdot accounts are free

[09:59] <mathw> that explains the rampant stupidity

[09:59] <wayland76> mathw: I gave you a "Mod parent up"

[09:59] <mathw> see the difference on metafilter, which charges $5 for an account...

[09:59] *** Su-Shee_ joined
[10:02] *** ihrd joined
[10:02] *** ihrd left
[10:06] <carlin> rakudo: my @a = <foo bar baz quux corge>; for @a -> $k, $v { if $v eq 'baz' { @a.delete($k) } }; say @a.perl

[10:06] <p6eval> rakudo 7ef386: StopIteration‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[10:07] <carlin> Oh, did it wrong

[10:07] <carlin> rakudo: my @a = <foo bar baz quux corge>; for @a.kv -> $k, $v { if $v eq 'baz' { @a.delete($k) } }; say @a.perl

[10:07] <p6eval> rakudo 7ef386: ["foo", "bar", undef, "quux", "corge"]‚ê§

[10:08] *** snearch joined
[10:08] *** Su-Shee left
[10:14] *** envi^office left
[10:16] *** agentzh left
[10:27] <carlin> rakudo: my @a = 1..5; undefine @a[3]; say @a.perl; my @b = 1..5; @b.delete(3); say @b.perl;

[10:27] <p6eval> rakudo 7ef386: [1, 2, 3, undef, 5]‚ê§[1, 2, 3, undef, 5]‚ê§

[10:28] <carlin> shouldn't delete completely remove the key?

[10:28] <moritz_> no

[10:28] <moritz_> splice should do that

[10:34] *** rfordinal joined
[10:34] *** rfordinal left
[10:35] *** JimmyZ_ left
[10:38] <carlin> rakudo: my @a = 1..5; @a.splice(3, 1); say @a.perl;

[10:38] <p6eval> rakudo 7ef386: [1, 2, 3, 5]‚ê§

[10:39] <carlin> cool. delete making it undef is a bit unexpected though

[10:43] <carlin> oh, perl5 does that too, nevermind

[10:43] *** Baggio_ joined
[10:44] *** hanekomu_ joined
[10:44] *** Baggio_ left
[10:47] *** Baggio_ joined
[10:48] *** synth left
[10:49] *** Baggio_ left
[10:54] *** Baggio_ joined
[11:17] *** Su-Shee_ left
[11:17] *** thowe left
[11:17] *** jlaire left
[11:17] *** quantumEd left
[11:17] *** iblechbot left
[11:17] *** Guest30215 left
[11:17] *** orafu left
[11:17] *** Wolfman2000 left
[11:17] *** cognomore left
[11:17] *** zaslon left
[11:17] *** Patterner left
[11:17] *** gbacon left
[11:17] *** mj41_ left
[11:17] *** viklund left
[11:17] *** cotto_work left
[11:17] *** p6eval left
[11:17] *** rgrau_ left
[11:17] *** Exodist left
[11:17] *** yahooooo left
[11:17] *** PZt left
[11:17] *** estrai left
[11:17] *** krunen left
[11:17] *** kst left
[11:17] *** kolibrie left
[11:17] *** felipe left
[11:17] *** sbp left
[11:17] *** nsh left
[11:17] *** elmex left
[11:17] *** avar left
[11:17] *** rjh_ left
[11:17] *** jantore_ left
[11:17] *** bigpresh_ left
[11:17] *** jnthn left
[11:17] *** Gothmog_ left
[11:17] *** c1sung left
[11:17] *** xomas_ left
[11:17] *** broquaint left
[11:17] *** huf left
[11:17] *** cognominal left
[11:17] *** BinGOs left
[11:17] *** Woody2143 left
[11:17] *** eiro left
[11:18] *** jnthn joined
[11:18] *** Su-Shee_ joined
[11:18] *** quantumEd joined
[11:18] *** c1sung joined
[11:18] *** xomas_ joined
[11:18] *** iblechbot joined
[11:18] *** thowe joined
[11:18] *** Guest30215 joined
[11:18] *** orafu joined
[11:18] *** Wolfman2000 joined
[11:18] *** cognomore joined
[11:18] *** broquaint joined
[11:18] *** zaslon joined
[11:18] *** huf joined
[11:18] *** Exodist joined
[11:18] *** yahooooo joined
[11:18] *** cognominal joined
[11:18] *** Patterner joined
[11:18] *** gbacon joined
[11:18] *** jlaire joined
[11:18] *** krunen joined
[11:18] *** mj41_ joined
[11:18] *** viklund joined
[11:18] *** cotto_work joined
[11:18] *** p6eval joined
[11:18] *** rgrau_ joined
[11:18] *** kolibrie joined
[11:18] *** kst joined
[11:18] *** PZt joined
[11:18] *** felipe joined
[11:18] *** sbp joined
[11:18] *** nsh joined
[11:18] *** elmex joined
[11:18] *** avar joined
[11:18] *** rjh_ joined
[11:18] *** jantore_ joined
[11:18] *** bigpresh_ joined
[11:18] *** BinGOs joined
[11:18] *** estrai joined
[11:18] *** Gothmog_ joined
[11:18] *** Woody2143 joined
[11:18] *** eiro joined
[11:18] *** irc.freenode.net sets mode: +ov jnthn p6eval

[11:25] *** nbrown left
[11:26] *** Intensity left
[11:27] <colomon>     isa_ok(@l[0], Regex::Match, 'first item is a Regex::Match');

[11:27] <colomon> Method 'isa' not found for invocant of class 'Regex;Match'

[11:27] <colomon> ???

[11:27] <colomon> (ng, of course)

[11:28] <moritz_> where did you get that from?

[11:29] <colomon> comb.t

[11:29] <colomon> but I just wrote it myself based on experimentation.

[11:29] <colomon> ng: say ("a ad afd".comb(/./, :match))[0].WHAT

[11:29] <p6eval> ng 153b18: Regex::Match()‚ê§

[11:29] <colomon> the existing test was clearly not following the spec.

[11:29] <moritz_> that's wrong

[11:29] <moritz_> it should be just Match

[11:30] <moritz_> and it's probably not a Perl 6 type, and thus has no .isa method

[11:30] <moritz_> seems like some type magic is needed

[11:31] <colomon> (checks S32-Rules.) yup on just Match.

[11:31] <colomon> Guess I can fudge these tests for the moment.

[11:33] <colomon> Huh.  The .to values we're returning are one greater than the .to values the test expects.

[11:33] <moritz_> ng: say "abc".comb(:match)[0].to # I expect 1 here

[11:33] <p6eval> ng 153b18: 1‚ê§

[11:34] <moritz_> rakudo: say "abc".comb(:match)[0].to 

[11:34] <p6eval> rakudo 7ef386: Method 'to' not found for invocant of class 'Str'‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[11:34] <colomon> So it's the index of the first character past the match?

[11:34] *** rodi joined
[11:35] <lisppaste3> colomon pasted "Test comb tests in questio" at http://paste.lisp.org/display/91760

[11:35] <moritz_> rakudo: "abc".match(/./)[0].to

[11:35] <p6eval> rakudo 7ef386: Method 'to' not found for invocant of class 'Failure'‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[11:36] <moritz_> rakudo: "abc".match(rx/./)[0].to

[11:36] <colomon> ng: say ("this test is weird".comb(/\w+/, :match))[0].to

[11:37] <p6eval> rakudo 7ef386: Method 'to' not found for invocant of class 'Failure'‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[11:37] <p6eval> ng 153b18: 4‚ê§

[11:37] <colomon> master had a todo for the .to tests....

[11:37] * moritz_ is not so sure anymore what's right

[11:38] <moritz_> rakudo: "abc".match(rx/./).to

[11:38] <p6eval> rakudo 7ef386:  ( no output )

[11:38] <moritz_> rakudo: say "abc".match(rx/./).to

[11:38] <p6eval> rakudo 7ef386: 1‚ê§

[11:38] <moritz_> ng: say "abc".match(rx/./).to

[11:38] <p6eval> ng 153b18: Confused at line 1, near "say \"abc\"."‚ê§current instr.: 'perl6;HLL;Grammar;panic' pc 519 (src/stage0/HLL-s0.pir:336)‚ê§

[11:38] <moritz_> ng: say "abc".match(/./).to

[11:38] <p6eval> ng 153b18: 1‚ê§

[11:38] <moritz_> master cheated very strongly in .comb

[11:40] *** Baggio__ joined
[11:41] <colomon> S05-Match objects seems to imply .to should be the char past the match

[11:41] <colomon> otherwise $/.chars    # $/.to - $/.from would be 3 when "this" is matched

[11:42] *** Baggio_ left
[11:43] <colomon> i'm changing the test

[11:48] <colomon> errr... ng spectest has fails now? :(

[11:49] <moritz_> last I looked split-simple-2.t failed

[11:50] <colomon> bother: random crashes

[11:53] <ben_bash> hey should I be able to 'git pull' to update my source tree? I seem to be unable after changing my branch to ng

[11:53] <ben_bash> good morning btw

[11:54] <moritz_> good morninig

[11:54] <moritz_> yes, you should

[11:54] <moritz_> what's the error message?

[11:55] <ben_bash> Permission denied (publickey).

[11:55] <moritz_> are you using your own fork, or rakudo's main repo?

[11:56] *** Baggio__ left
[11:56] *** jlaire left
[11:56] *** thowe left
[11:56] *** Su-Shee_ left
[11:56] *** cotto_work left
[11:56] *** viklund left
[11:56] *** zaslon left
[11:56] *** Wolfman2000 left
[11:56] *** Patterner left
[11:56] *** Guest30215 left
[11:56] *** p6eval left
[11:56] *** orafu left
[11:56] *** rgrau_ left
[11:56] *** mj41_ left
[11:56] *** gbacon left
[11:56] *** cognomore left
[11:56] *** iblechbot left
[11:56] *** quantumEd left
[11:56] *** estrai left
[11:56] *** yahooooo left
[11:56] *** PZt left
[11:56] *** Exodist left
[11:56] *** Gothmog_ left
[11:56] *** jnthn left
[11:56] *** rjh_ left
[11:56] *** krunen left
[11:56] *** jantore_ left
[11:56] *** kolibrie left
[11:56] *** avar left
[11:56] *** kst left
[11:56] *** nsh left
[11:56] *** elmex left
[11:56] *** sbp left
[11:56] *** felipe left
[11:56] *** bigpresh_ left
[11:56] *** Woody2143 left
[11:56] *** huf left
[11:56] *** c1sung left
[11:56] *** xomas_ left
[11:56] *** eiro left
[11:56] *** cognominal left
[11:56] *** BinGOs left
[11:56] *** broquaint left
[11:56] <ben_bash> I forked it

[11:57] <moritz_> ben_bash: could you please nopaste the output from `git remote -v`?

[11:57] <ben_bash> sure

[11:59] <lisppaste3> ben_bash pasted "untitled" at http://paste.lisp.org/display/91761

[11:59] *** jlaire joined
[11:59] *** thowe joined
[11:59] *** Su-Shee_ joined
[11:59] *** Baggio__ joined
[11:59] *** estrai joined
[11:59] *** PZt joined
[11:59] *** yahooooo joined
[11:59] *** Exodist joined
[11:59] *** rgrau_ joined
[11:59] *** p6eval joined
[11:59] *** cotto_work joined
[11:59] *** viklund joined
[11:59] *** mj41_ joined
[11:59] *** gbacon joined
[11:59] *** Patterner joined
[11:59] *** zaslon joined
[11:59] *** cognomore joined
[11:59] *** Wolfman2000 joined
[11:59] *** orafu joined
[11:59] *** Guest30215 joined
[11:59] *** iblechbot joined
[11:59] *** quantumEd joined
[11:59] *** irc.freenode.net sets mode: +v p6eval

[12:00] *** jnthn joined
[12:00] *** krunen joined
[12:00] *** kolibrie joined
[12:00] *** kst joined
[12:00] *** felipe joined
[12:00] *** sbp joined
[12:00] *** nsh joined
[12:00] *** elmex joined
[12:00] *** avar joined
[12:00] *** rjh_ joined
[12:00] *** jantore_ joined
[12:00] *** bigpresh_ joined
[12:00] *** Gothmog_ joined
[12:00] *** irc.freenode.net sets mode: +o jnthn

[12:00] *** c1sung joined
[12:00] *** xomas_ joined
[12:00] *** broquaint joined
[12:00] *** huf joined
[12:00] *** cognominal joined
[12:00] *** BinGOs joined
[12:00] *** Woody2143 joined
[12:00] *** eiro joined
[12:00] <moritz_> ben_bash: does pulling from upstream works?

[12:05] *** pmurias joined
[12:05] *** Gothmog_ left
[12:05] *** jantore_ left
[12:05] *** rjh_ left
[12:05] *** kolibrie left
[12:05] *** krunen left
[12:05] *** jnthn left
[12:05] *** avar left
[12:05] *** nsh left
[12:05] *** kst left
[12:05] *** elmex left
[12:05] *** sbp left
[12:05] *** felipe left
[12:05] *** bigpresh_ left
[12:05] *** c1sung left
[12:05] *** cognominal left
[12:05] *** eiro left
[12:05] *** Woody2143 left
[12:05] *** huf left
[12:05] *** xomas_ left
[12:05] *** BinGOs left
[12:05] *** broquaint left
[12:05] *** Guest30215 left
[12:05] *** Wolfman2000 left
[12:05] *** cognomore left
[12:05] *** zaslon left
[12:05] *** Patterner left
[12:05] *** viklund left
[12:05] *** cotto_work left
[12:05] *** rgrau_ left
[12:05] *** gbacon left
[12:05] *** p6eval left
[12:05] *** iblechbot left
[12:05] *** quantumEd left
[12:05] *** mj41_ left
[12:05] *** orafu left
[12:05] *** pmurias left
[12:05] *** Baggio__ left
[12:05] *** Su-Shee_ left
[12:05] *** thowe left
[12:05] *** jlaire left
[12:05] *** estrai left
[12:05] *** Exodist left
[12:05] *** PZt left
[12:05] *** yahooooo left
[12:06] *** jnthn joined
[12:06] *** pmurias joined
[12:06] *** eiro joined
[12:06] *** Woody2143 joined
[12:06] *** BinGOs joined
[12:06] *** cognominal joined
[12:06] *** huf joined
[12:06] *** broquaint joined
[12:06] *** xomas_ joined
[12:06] *** c1sung joined
[12:06] *** Gothmog_ joined
[12:06] *** bigpresh_ joined
[12:06] *** jantore_ joined
[12:06] *** rjh_ joined
[12:06] *** avar joined
[12:06] *** elmex joined
[12:06] *** nsh joined
[12:06] *** sbp joined
[12:06] *** felipe joined
[12:06] *** kst joined
[12:06] *** kolibrie joined
[12:06] *** krunen joined
[12:06] *** jlaire joined
[12:06] *** thowe joined
[12:06] *** Su-Shee_ joined
[12:06] *** Baggio__ joined
[12:06] *** estrai joined
[12:06] *** PZt joined
[12:06] *** yahooooo joined
[12:06] *** Exodist joined
[12:06] *** rgrau_ joined
[12:06] *** p6eval joined
[12:06] *** cotto_work joined
[12:06] *** viklund joined
[12:06] *** mj41_ joined
[12:06] *** gbacon joined
[12:06] *** Patterner joined
[12:06] *** zaslon joined
[12:06] *** cognomore joined
[12:06] *** Wolfman2000 joined
[12:06] *** orafu joined
[12:06] *** Guest30215 joined
[12:06] *** iblechbot joined
[12:06] *** quantumEd joined
[12:06] *** irc.freenode.net sets mode: +ov jnthn p6eval

[12:06] *** payload left
[12:07] *** Su-Shee joined
[12:07] *** broquaint left
[12:09] *** envi^home left
[12:09] *** SmokeMachine joined
[12:11] <ben_bash> I figured out the issue

[12:11] *** krunen left
[12:11] *** rjh_ left
[12:11] *** Gothmog_ left
[12:11] *** kolibrie left
[12:11] *** kst left
[12:11] *** sbp left
[12:11] *** jnthn left
[12:11] *** avar left
[12:11] *** jantore_ left
[12:12] *** elmex left
[12:12] *** nsh left
[12:12] *** felipe left
[12:12] *** bigpresh_ left
[12:12] *** huf left
[12:12] *** Woody2143 left
[12:12] *** cognominal left
[12:12] *** eiro left
[12:12] *** c1sung left
[12:12] *** BinGOs left
[12:12] *** xomas_ left
[12:12] *** Guest30215 left
[12:12] *** Wolfman2000 left
[12:12] *** cognomore left
[12:12] *** zaslon left
[12:12] *** Patterner left
[12:12] *** viklund left
[12:12] *** cotto_work left
[12:12] *** rgrau_ left
[12:12] *** gbacon left
[12:12] *** p6eval left
[12:12] *** iblechbot left
[12:12] *** quantumEd left
[12:12] *** mj41_ left
[12:12] *** orafu left
[12:12] *** Baggio__ left
[12:12] *** Su-Shee_ left
[12:12] *** thowe left
[12:12] *** jlaire left
[12:12] *** pmurias left
[12:12] *** Su-Shee left
[12:12] *** estrai left
[12:12] *** Exodist left
[12:12] *** PZt left
[12:12] *** yahooooo left
[12:12] <ben_bash> it was a key naming thing

[12:12] <ben_bash> :-\

[12:12] *** jnthn joined
[12:12] *** Su-Shee joined
[12:12] *** pmurias joined
[12:12] *** eiro joined
[12:12] *** Woody2143 joined
[12:12] *** BinGOs joined
[12:12] *** cognominal joined
[12:12] *** huf joined
[12:12] *** xomas_ joined
[12:12] *** c1sung joined
[12:12] *** Gothmog_ joined
[12:12] *** bigpresh_ joined
[12:12] *** jantore_ joined
[12:12] *** rjh_ joined
[12:12] *** avar joined
[12:12] *** elmex joined
[12:12] *** nsh joined
[12:12] *** sbp joined
[12:12] *** felipe joined
[12:12] *** kst joined
[12:12] *** kolibrie joined
[12:12] *** krunen joined
[12:12] *** jlaire joined
[12:12] *** thowe joined
[12:12] *** Su-Shee_ joined
[12:12] *** Baggio__ joined
[12:12] *** estrai joined
[12:12] *** PZt joined
[12:12] *** yahooooo joined
[12:12] *** Exodist joined
[12:12] *** rgrau_ joined
[12:12] *** p6eval joined
[12:12] *** cotto_work joined
[12:12] *** viklund joined
[12:12] *** mj41_ joined
[12:12] *** gbacon joined
[12:12] *** Patterner joined
[12:12] *** zaslon joined
[12:12] *** cognomore joined
[12:12] *** Wolfman2000 joined
[12:12] *** orafu joined
[12:12] *** Guest30215 joined
[12:12] *** iblechbot joined
[12:12] *** quantumEd joined
[12:12] *** irc.freenode.net sets mode: +ov jnthn p6eval

[12:12] *** envi^home joined
[12:13] <wayland76> Question all: Rakudo works from an installed Parrot, right?

[12:14] *** Su-Shee_ left
[12:15] *** krunen left
[12:15] *** rjh_ left
[12:15] *** Gothmog_ left
[12:15] *** kolibrie left
[12:15] *** kst left
[12:15] *** sbp left
[12:15] *** jnthn left
[12:15] *** avar left
[12:15] *** jantore_ left
[12:15] *** elmex left
[12:15] *** nsh left
[12:15] *** felipe left
[12:15] *** bigpresh_ left
[12:15] *** huf left
[12:15] *** Woody2143 left
[12:15] *** cognominal left
[12:15] *** eiro left
[12:15] *** c1sung left
[12:15] *** BinGOs left
[12:15] *** xomas_ left
[12:15] *** envi^home left
[12:15] *** Guest30215 left
[12:15] *** Wolfman2000 left
[12:15] *** cognomore left
[12:15] *** zaslon left
[12:15] *** Patterner left
[12:15] *** viklund left
[12:15] *** cotto_work left
[12:15] *** rgrau_ left
[12:15] *** gbacon left
[12:15] *** p6eval left
[12:15] *** iblechbot left
[12:15] *** quantumEd left
[12:15] *** mj41_ left
[12:15] *** orafu left
[12:15] *** Baggio__ left
[12:15] *** thowe left
[12:15] *** jlaire left
[12:15] *** pmurias left
[12:15] *** estrai left
[12:15] *** Su-Shee left
[12:15] *** Exodist left
[12:15] *** PZt left
[12:15] *** yahooooo left
[12:15] <wayland76> phenny, tell pmichaud that he needs to comment on the "Gerd or Allison" thread :)

[12:15] <phenny> wayland76: I'll pass that on when pmichaud is around.

[12:16] <moritz_> wayland76: if you installed rakudo too, yes

[12:16] *** envi^home joined
[12:16] *** quantumEd joined
[12:16] *** iblechbot joined
[12:16] *** Guest30215 joined
[12:16] *** orafu joined
[12:16] *** Wolfman2000 joined
[12:16] *** cognomore joined
[12:16] *** zaslon joined
[12:16] *** Patterner joined
[12:16] *** gbacon joined
[12:16] *** mj41_ joined
[12:16] *** viklund joined
[12:16] *** cotto_work joined
[12:16] *** p6eval joined
[12:16] *** rgrau_ joined
[12:16] *** irc.freenode.net sets mode: +v p6eval

[12:19] *** payload joined
[12:19] *** Su-Shee joined
[12:19] *** Exodist joined
[12:19] *** yahooooo joined
[12:19] *** PZt joined
[12:19] *** estrai joined
[12:20] *** c1sung joined
[12:20] *** xomas_ joined
[12:20] *** huf joined
[12:20] *** cognominal joined
[12:20] *** BinGOs joined
[12:20] *** Woody2143 joined
[12:20] *** eiro joined
[12:20] *** mathw left
[12:20] *** draxil42 left
[12:20] *** bloonix left
[12:20] *** idemal left
[12:20] *** wolverian left
[12:20] *** avuserow left
[12:20] *** sunnavy left
[12:20] *** LionMadeOfLions left
[12:20] *** pmichaud left
[12:20] *** carlin left
[12:20] *** ruz left
[12:20] *** mofino left
[12:20] *** moritz_ left
[12:20] *** omega__ left
[12:20] *** stepnem left
[12:20] *** sjn left
[12:21] *** pmurias joined
[12:21] *** thowe joined
[12:21] *** jlaire joined
[12:21] *** mathw joined
[12:21] *** ruz joined
[12:21] *** sjn joined
[12:21] *** LionMadeOfLions joined
[12:21] *** draxil42 joined
[12:21] *** moritz_ joined
[12:21] *** omega__ joined
[12:21] *** mofino joined
[12:21] *** bloonix joined
[12:21] *** avuserow joined
[12:21] *** stepnem joined
[12:21] *** pmichaud joined
[12:21] *** idemal joined
[12:21] *** carlin joined
[12:21] *** irc.freenode.net sets mode: +oooo mathw moritz_ pmichaud carlin

[12:21] *** wolverian joined
[12:21] *** sunnavy joined
[12:21] *** FCO joined
[12:22] *** jnthn joined
[12:22] *** krunen joined
[12:22] *** kolibrie joined
[12:22] *** kst joined
[12:22] *** felipe joined
[12:22] *** sbp joined
[12:22] *** nsh joined
[12:22] *** elmex joined
[12:22] *** avar joined
[12:22] *** rjh_ joined
[12:22] *** jantore_ joined
[12:22] *** bigpresh_ joined
[12:22] *** Gothmog_ joined
[12:22] *** irc.freenode.net sets mode: +o jnthn

[12:23] * moritz_ looks at the freenode link flipping and netsplits, and hums "the day the routers died" (see <http://www.youtube.com/watch?v=_y36fG2Oba0>)

[12:28] *** payload left
[12:28] *** payload joined
[12:32] *** ssm left
[12:32] *** constant left
[12:32] *** parduncia left
[12:32] *** jl_2 left
[12:32] *** pugs_svn left
[12:32] *** Woodi left
[12:32] *** japhb left
[12:32] *** spinclad left
[12:32] *** Infinoid left
[12:32] *** phenny left
[12:32] *** hatseflats left
[12:32] *** dukeleto left
[12:32] *** jiing left
[12:32] *** TimToady left
[12:32] *** cls_bsd left
[12:32] *** Helios left
[12:32] *** jjore_ left
[12:32] *** Tene left
[12:32] *** ingy left
[12:32] *** Tene joined
[12:32] *** jl_2 joined
[12:32] *** ssm joined
[12:32] *** constant joined
[12:32] *** parduncia joined
[12:32] *** Helios joined
[12:32] *** japhb joined
[12:32] *** jjore_ joined
[12:32] *** ingy joined
[12:32] *** Woodi joined
[12:32] *** Infinoid joined
[12:32] *** TimToady joined
[12:32] *** cls_bsd joined
[12:32] *** dukeleto joined
[12:32] *** pugs_svn joined
[12:32] *** irc.freenode.net sets mode: +ooov Tene TimToady dukeleto pugs_svn

[12:32] *** hatseflats joined
[12:32] *** jiing joined
[12:32] *** phenny joined
[12:32] *** spinclad joined
[12:32] *** irc.freenode.net sets mode: +vo phenny spinclad

[12:33] *** tarski joined
[12:37] <moritz_> wayland76: I've answered to the thread, hopes it cleared some things up (but I'm not sure if I understood the questions/concern correctly)

[12:38] *** colomon left
[12:41] *** ben_bash left
[12:44] *** SmokeMachine left
[12:48] *** am0c joined
[12:50] *** zamolxes joined
[12:53] <pugs_svn> r29292 | pmurias++ | [viv] all the VAST::package_declarator__S_* classes inherit from 

[12:53] <pugs_svn> r29292 | VAST::package_declarator

[12:53] <pugs_svn> r29293 | pmurias++ | [mildew] more progress on porting to new STD 

[12:53] *** pmurias left
[13:01] *** tomaw_ left
[13:02] *** tomaw_ joined
[13:03] * arnsholt likes the latest Advent calendar post

[13:04] <arnsholt> And replacing split with comb is a move that makes sense

[13:04] <arnsholt> Saying what you want rather than what you don't is nice

[13:04] <moritz_> there are applications for both

[13:04] <arnsholt> True, true

[13:05] <moritz_> it requires a bit of rethinking, so it's good mental training :-)

[13:05] <takadonet> morning all

[13:05] <arnsholt> Yeah. Especially when you've acquired the habit of thinking in terms of split =)

[13:06] <takadonet> Going to be hard to learn to switch between them at first

[13:07] <moritz_> in Perl 5 I also often used while($str =~ /regex/g) { ... }, which is actually very close to  for $str.comb($regex) { ... }

[13:08] <moritz_> in fact (in an ideal world) .comb is just a shallow wrapper around .match(:g)

[13:11] <moritz_> rakudo: sub f { return }; say defined f

[13:11] <p6eval> rakudo 7ef386: 0‚ê§

[13:11] <moritz_> ng: sub f { return }; say defined f

[13:11] <p6eval> ng 153b18: return requires an expression argument at line 1, near "}; say def"‚ê§current instr.: 'perl6;HLL;Grammar;panic' pc 519 (src/stage0/HLL-s0.pir:336)‚ê§

[13:14] <arnsholt> moritz_: Very good point that

[13:34] *** payload left
[13:35] *** snearch left
[13:42] *** payload joined
[13:46] *** meppl joined
[13:47] *** meppl left
[13:51] *** synth joined
[14:01] <PerlJam> good morning.

[14:03] <PerlJam> Anyone have a look at perl6advent day 10?  Any comments?

[14:06] <mathw> when I try to view it I get a 404

[14:06] <mathw> presumably because it's only scheduled

[14:06] <mathw> but that seems a bit shoddy on the dashboard coding there

[14:06] <mathw> and I don't have edit permission, so I can't look at it that way

[14:07] <rodi> rakudo: say "5065726C36".comb(/<xdigit>**2/)¬ª.fmt("0x%s")¬ª.chr

[14:07] <p6eval> rakudo 7ef386: Perl6‚ê§

[14:07] <PerlJam> mathw: try again :)

[14:08] <mathw> heh, now I do :)

[14:10] <mathw> Shouldn't $/ positional captures be accessed with $/[0] rather than $/<0>?

[14:11] <moritz_> they should, yes

[14:14] <mathw> Thought so

[14:14] <moritz_> apart from that: PerlJam++

[14:14] <mathw> I think the style's slightly inconsistent

[14:14] <moritz_> ng: 'x' ~~ /(.)/; say $0

[14:14] <p6eval> ng 153b18: Confused at line 1, near "say $0"‚ê§current instr.: 'perl6;HLL;Grammar;panic' pc 519 (src/stage0/HLL-s0.pir:336)‚ê§

[14:15] <moritz_> ng: 'x' ~~ /(.)/; say $/[0]

[14:15] <p6eval> ng 153b18: sh: ./perl6: No such file or directory‚ê§

[14:15] <mathw> You've got this warm fuzzy narrative style, then sometimes there are some sentences which are just flat Perl 6 tutorial material, and it doesn't blend entirely well.

[14:15] <moritz_> ng: 'x' ~~ /(.)/; say $/[0]

[14:15] <p6eval> ng 153b18: sh: ./perl6: No such file or directory‚ê§

[14:15] <mathw> The technical content is fine though

[14:18] <PerlJam> mathw: yeah, I feel the same about the style switching.  But that's what happens when I write when I'm tired  :)

[14:18] <mathw> well you've got all tomorrow to smooth it out if you want

[14:18] <mathw> so there's no panic :)

[14:18] <mathw> I should get to work on my day 12 entry soon, but I'm in a concert tonight so I shall get that done first

[14:19] <mathw> I'm doing junctions :/

[14:19] <mathw> which are very cool, but I'm a bit weak in some areas so I need to do some reading and experimenting and asking questions

[14:20] *** colomon joined
[14:20] <mathw> although I think I'll hook them in with the joy of if $x == any(1, 2, 3)

[14:21] <takadonet> mathw: You could add a bioinformatics example using junction :)

[14:21] <mathw> I don't know any bioinformatics

[14:21] <mathw> So I probably shouldn't :)

[14:22] <mathw> The other major thing of course is junctive autothreading

[14:23] <moritz_> how do we call the things that fail() return? "soft" exceptions? or "unthrown" exceptions?

[14:23] *** xinming_ joined
[14:24] <mathw> unthrown exceptions, I think

[14:25] *** Baggio_ joined
[14:27] *** [synth] joined
[14:27] *** synth left
[14:30] <moritz_> ng: 'x' ~~ /(.)/; say $/[0]

[14:30] <p6eval> ng 153b18: Can't postcircumfix:<[ ]> foreign objects yet.‚ê§current instr.: '!postcircumfix:<[ ]>' pc 261373 (src/gen/core.pir:29467)‚ê§

[14:31] *** pmurias joined
[14:35] *** xinming left
[14:36] <carlin> phenny: tell masak pushed a few more proto commits for review. Alos, what would you suggest doing about the perl6-examples/http-daemon conflict?

[14:36] <phenny> carlin: I'll pass that on when masak is around.

[14:36] <carlin> 'Night all

[14:37] <Tene> moritz_: "Failures" works too.

[14:37] <Tene> but "unthrown exception" is used in the specs.

[14:38] <mathw> I like the idea of an unthrown exception

[14:38] <mathw> it does hint very much at what will happen if you try to do something with it that might not expect it to be an exception

[14:39] <Tene> do you like it enough to verify spectest coverage for it? ;)

[14:39] <mathw> no

[14:39] <mathw> :P

[14:39] <mathw> I'm quite busy at the moment

[14:39] <mathw> Writing advent calendar entries

[14:39] <mathw> and being in concerts

[14:39] <mathw> and staring at the telephone, wondering why it doesn't ring

[14:40] <mathw> and trying to convince the cat that the keyboard is not a comfortable place to sit

[14:44] *** [synth] left
[14:48] *** synth joined
[14:49] <arnsholt> A bit offtopic: Does anyone know when prove from Test::Harness changed the --perl option to --exec? (Or how I can find out)

[14:52] <mathw> I don't, but it drove me nuts for a while because Ubuntu and Fedora seemed to have different versions

[14:53] <moritz_> did you look at the change log?

[14:54] <moritz_> http://cpansearch.perl.org/src/ANDYA/Test-Harness-3.17/Changes-2.64 and http://cpansearch.perl.org/src/ANDYA/Test-Harness-3.17/Changes

[14:56] <pmichaud> yes, ubuntu still ships with 2.64

[14:56] <phenny> pmichaud: 12:15Z <wayland76> tell pmichaud that he needs to comment on the "Gerd or Allison" thread :)

[14:56] <pmichaud> (already commented :)

[15:01] <moritz_> and of course they couldn't support both versions for some time to allow easier transition...

[15:02] *** mberends joined
[15:03] *** pmurias_ joined
[15:04] <mberends> phenny: tell carlin the http-daemon in perl6-examples is the obsolete prototype, better to keep separate modules in separate repositories

[15:04] <phenny> mberends: I'll pass that on when carlin is around.

[15:04] <arnsholt> Hmm. AFAICT it doesn't explicitly state when the change occured, but the version increment to 3.x sounds like a plausible candidate

[15:04] <moritz_> mberends: then delete it from perl6-examples

[15:05] <mberends> moritz_: will do this evening, thanks :)

[15:05] <moritz_> mberends++ # promises to clean up

[15:06] <mberends> karma for promising :) hmm, a burden of guilt until done

[15:10] *** tylerni7 left
[15:13] *** pmurias left
[15:14] *** hanekomu_ left
[15:14] *** pmurias_ is now known as pmurias

[15:14] <pmurias> mberends: hi

[15:15] <pugs_svn> r29294 | pmurias++ | [mildew] more porting 

[15:16] *** awwaiid joined
[15:23] *** alester joined
[15:25] *** Exodist left
[15:29] *** nihiliad joined
[15:30] *** payload left
[15:31] *** perlygatekeeper joined
[15:36] *** KyleHa joined
[15:43] *** Su-Shee_ joined
[15:46] <Wolfman2000> *yawn* morning

[15:46] <mberends> hi pmurias, it will be nice to see your updates this evening after $work

[15:47] *** Psyche^ joined
[15:47] *** hanekomu_ joined
[15:47] *** hanekomu_ left
[15:56] *** Baggio_ left
[15:57] *** Patterner left
[15:57] *** Psyche^ is now known as Patterner

[15:58] <pmurias> mberends: if you have any question about mildew-js feel free to ask

[15:58] *** Su-Shee left
[15:58] <mberends> :) thanks

[16:01] <pmurias> mildew is in a broken stage currently as it's not yet fully ported to the new STD

[16:03] *** am0c left
[16:05] *** pnate joined
[16:07] *** justatheory joined
[16:07] <mberends> even without the code being complete and running, it's interesting to compare how STD.pm leads to different implementations in Mildew-js and in Sprixel.

[16:11] *** KyleHa left
[16:12] <mberends> de-commute &

[16:12] *** mberends left
[16:18] *** Su-Shee_ is now known as Su-Shee

[16:32] *** rgrau` left
[16:34] *** rgrau joined
[16:36] <diakopter> pmurias: regex/nfa engine in C# completed; now to create a char-by-char LTM mode...

[16:37] <diakopter> it's about 10x slower in mono (in a 32-bit linux vm) than on windows 64-bit .NET CLR (not in a vm) on the same hardware

[16:37] *** synth left
[16:38] <diakopter> i'll try a 64-bit linux mono soon..

[16:40] <diakopter> I haven't compared them to Perl's or V8's regular expressions. :) I also haven't added memoization at all...

[16:45] *** brrant joined
[16:46] *** synth joined
[16:47] *** [particle]1 joined
[16:48] <arnsholt> diakopter: How have you implemented it? Just a standard breadth first search, or something cleverer?

[16:48] <diakopter> the char-by-char LTM mode will need specialized editions of every automaton that can chew more than 1 char (everything except Char && CharRange) - Both, Either, NonEmpty, Literal

[16:48] *** IllvilJa left
[16:49] <diakopter> arnsholt: normal mode is depth-first-search; the LTM mode will be effectively breadth-first-search

[16:49] <diakopter> recursive descent, but not using the host language stack (or function calls at all, actually)

[16:49] <diakopter> fully backtracking

[16:49] <arnsholt> Right. Looping over an agenda stack?

[16:50] <diakopter> not exactly; a tree of automata instances is walked..

[16:51] <arnsholt> Ah, cool

[16:53] <diakopter> the LTM mode needs to be able to jump around the tree aribtrarily to be efficient...

[16:53] <diakopter> treating each of the branches as coroutines..

[16:53] *** cdarroch joined
[16:54] <diakopter> it's really great to be working in a VM (both V8 & clr/mono) that has excellent garbage collection

[16:54] * moritz_ wonders how hard it is to actually construct a DFA for the LTM thing

[16:55] *** pnate left
[16:55] *** alester left
[16:55] *** szabgab left
[16:55] *** ascent_ left
[16:55] *** [particle] left
[16:55] *** hcchien left
[16:55] *** araujo left
[16:55] *** ashizawa left
[16:55] *** dbrock left
[16:55] *** Khisanth left
[16:55] *** krakan left
[16:55] *** PacoLinux left
[16:55] *** dalek left
[16:55] <diakopter> TimToady & I discussed that here a few days ago; it's possible to construct one for the first (longest) match, but not for backtracking into it

[16:55] <arnsholt> moritz_: Well, if you have an NFA there's an algorithm to make a DFA

[16:56] <diakopter> yeah, but the states would explode too hugely in many cases...

[16:56] <arnsholt> Yup. That's the problem

[16:56] <moritz_> arnsholt: I know the algorithm exist :-)

[16:56] *** dalek joined
[16:56] <moritz_> and I also know that there are regex matchers which actually use DFAs

[16:57] <arnsholt> There are? Didn't know that

[16:57] <moritz_> iirc TGE does

[16:57] <diakopter> http://www.haskell.org/haskellwiki/Regular_expressions   helpful reference, even though it's for ghc

[16:57] <arnsholt> Huh. For complex regexes the memory requirements have to be a bit nuts, no?

[16:58] <diakopter> Posix vs Perl (above)

[16:59] *** ascent_ joined
[17:01] <diakopter> but with smart memoization and some smart selective compilation into deterministic branches, an nfa engine can (my intuition tells me after effecting it a time or two) get somewhat close to a deterministic...

[17:02] *** hcchien_ joined
[17:03] <diakopter> such as, reversing direction and working backwards from anchors, avoiding greedy stars

[17:03] *** thowe left
[17:03] *** r0bby_ joined
[17:04] *** kst left
[17:04] *** [particle]1 left
[17:04] *** awwaiid left
[17:04] *** pmurias left
[17:04] *** colomon left
[17:04] *** tomaw_ left
[17:04] *** tarski left
[17:04] *** FCO left
[17:04] *** rodi left
[17:04] *** wayland76 left
[17:04] *** Lorn left
[17:04] *** pointme left
[17:04] *** betterworld left
[17:04] *** drbean_ left
[17:04] *** jan_ left
[17:04] *** r0bby left
[17:04] *** renormalist left
[17:04] *** obra left
[17:05] *** yves left
[17:05] *** drbean joined
[17:05] *** IllvilJa joined
[17:05] *** [particle] joined
[17:05] *** wayland joined
[17:05] *** [particle]1 joined
[17:05] *** awwaiid joined
[17:05] *** pmurias joined
[17:05] *** colomon joined
[17:05] *** tomaw_ joined
[17:05] *** tarski joined
[17:05] *** FCO joined
[17:05] *** rodi joined
[17:05] *** wayland76 joined
[17:05] *** Lorn joined
[17:05] *** pointme joined
[17:05] *** betterworld joined
[17:05] *** jan_ joined
[17:05] *** renormalist joined
[17:05] *** yves joined
[17:05] *** irc.freenode.net sets mode: +v pointme

[17:05] *** tomaw_ left
[17:05] <diakopter> moritz_: but yes, if you reverse the alternations in a pattern, and put ^(.*?) at the beginning, that will simulate LTM mode in a regex for the first match

[17:07] <diakopter> before reversing the order of the alternations, you have to order the alternations by their LTM prefix priority

[17:07] *** brody left
[17:07] *** pnate joined
[17:07] *** alester joined
[17:07] *** szabgab joined
[17:07] *** araujo joined
[17:07] *** ashizawa joined
[17:07] *** dbrock joined
[17:07] *** krakan joined
[17:07] *** PacoLinux joined
[17:07] <diakopter> which won't necessarily be the same as their declaration order

[17:08] *** kst joined
[17:09] <diakopter> moritz_: I thought most regex matchers compiled to DFAs...

[17:09] *** meppl joined
[17:09] *** Khisanth joined
[17:09] *** tarski left
[17:10] <moritz_> diakopter: most regex matchers that don't capture, right

[17:10] <diakopter> oh

[17:10] <diakopter> oh, neat: http://augeas.net/libfa/

[17:10] <moritz_> like grep and the like

[17:10] <pmurias> diakopter: the rule engine receives AST?

[17:10] <diakopter> yeah

[17:11] <diakopter> http://langue.pastebin.com/d5ef9c2e5

[17:11] <moritz_> sounds promising

[17:12] <diakopter> public static AstBoth Plus(AstNode node)  is the only really tricky portion

[17:13] <moritz_> diakopter++ # sharing the libfa link

[17:13] *** krakan left
[17:13] *** pnate left
[17:13] *** dbrock left
[17:13] *** PacoLinux left
[17:13] *** ashizawa left
[17:13] *** araujo left
[17:13] *** alester left
[17:13] *** szabgab left
[17:14] *** brody joined
[17:14] <diakopter> now to port http://www.brics.dk/automaton/ to C#...

[17:14] *** kst left
[17:14] *** renormalist left
[17:14] *** betterworld left
[17:14] *** pointme left
[17:14] *** wayland76 left
[17:14] *** pmurias left
[17:14] *** wayland left
[17:14] *** [particle]1 left
[17:14] *** [particle] left
[17:14] *** IllvilJa left
[17:14] *** rodi left
[17:14] *** jan_ left
[17:14] *** yves left
[17:14] *** FCO left
[17:14] *** colomon left
[17:14] *** Lorn left
[17:14] *** awwaiid left
[17:15] <diakopter> stupid netsplits

[17:15] *** [particle] joined
[17:15] *** kst joined
[17:15] *** IllvilJa joined
[17:15] *** wayland joined
[17:15] *** [particle]1 joined
[17:15] *** awwaiid joined
[17:15] *** pmurias joined
[17:15] *** colomon joined
[17:15] *** FCO joined
[17:15] *** rodi joined
[17:15] *** wayland76 joined
[17:15] *** Lorn joined
[17:15] *** pointme joined
[17:15] *** betterworld joined
[17:15] *** jan_ joined
[17:15] *** renormalist joined
[17:15] *** yves joined
[17:15] *** irc.freenode.net sets mode: +v pointme

[17:15] *** wayland_ joined
[17:15] *** envi^home left
[17:15] <diakopter> at least ilbot2 wasn't splitted

[17:16] *** pmurias_ joined
[17:16] *** krakan joined
[17:16] *** pmurias left
[17:18] <diakopter> ooooo http://www.brics.dk/automaton/ rocks

[17:18] <diakopter> commute&

[17:19] *** pnate joined
[17:19] *** alester joined
[17:19] *** szabgab joined
[17:19] *** araujo joined
[17:19] *** ashizawa joined
[17:19] *** dbrock joined
[17:19] *** PacoLinux joined
[17:20] *** wayland76 left
[17:20] *** szabgab_ joined
[17:22] *** pnate left
[17:22] *** dbrock left
[17:22] *** PacoLinux left
[17:22] *** ashizawa left
[17:22] *** araujo left
[17:22] *** alester left
[17:22] *** szabgab left
[17:22] *** tomaw_ joined
[17:25] *** alester joined
[17:25] *** rgrau left
[17:25] *** pmurias_ is now known as pmurias

[17:26] *** nihiliad left
[17:26] *** nihiliad joined
[17:27] *** wayland left
[17:28] *** pnate joined
[17:28] *** masak joined
[17:29] *** araujo joined
[17:29] <masak> thanks everybody for corrections to the blog post draft.

[17:29] <phenny> masak: 07:27Z <spinclad> tell masak ^^ typos from diakopter and me

[17:29] <phenny> masak: 14:36Z <carlin> tell masak pushed a few more proto commits for review. Alos, what would you suggest doing about the perl6-examples/http-daemon conflict?

[17:29] *** PacoLinux joined
[17:29] *** ashizawa joined
[17:31] <masak> carlin: I would suggest removing it. no need having two versions of the same module hanging around in different repos.

[17:31] *** [particle]1 left
[17:35] *** PacoLinux left
[17:35] *** szabgab_ left
[17:35] *** krakan left
[17:35] *** wayland_ left
[17:35] *** renormalist left
[17:35] *** betterworld left
[17:35] *** pointme left
[17:35] *** IllvilJa left
[17:35] *** rodi left
[17:35] *** jan_ left
[17:35] *** yves left
[17:35] *** FCO left
[17:35] *** colomon left
[17:35] *** Lorn left
[17:35] *** awwaiid left
[17:35] *** kst left
[17:36] *** PacoLinux joined
[17:36] *** szabgab_ joined
[17:36] *** krakan joined
[17:36] *** kst joined
[17:36] *** IllvilJa joined
[17:36] *** awwaiid joined
[17:36] *** colomon joined
[17:36] *** FCO joined
[17:36] *** rodi joined
[17:36] *** Lorn joined
[17:36] *** pointme joined
[17:36] *** betterworld joined
[17:36] *** jan_ joined
[17:36] *** renormalist joined
[17:36] *** yves joined
[17:36] *** irc.freenode.net sets mode: +v pointme

[17:36] *** szabgab_ left
[17:37] *** wayland_ joined
[17:37] *** szabgab_ joined
[17:47] *** cotto_w0rk joined
[17:48] <diakopter> more regex coolness: http://tusker.org/regex/regex_benchmark.html

[17:49] *** masak` joined
[17:51] <diakopter> masak`: hi

[17:51] <diakopter> masak: hi

[17:51] *** facsimile joined
[17:51] <masak`> diakopter: oh hai.

[17:51] *** facsimile left
[17:52] *** kaare_ joined
[17:52] *** quantumEd left
[17:52] *** synth left
[17:52] *** quantumEd joined
[17:53] *** masak left
[17:53] *** [particle] left
[17:53] *** justatheory left
[17:53] *** viklund left
[17:53] *** zaslon left
[17:53] *** Guest30215 left
[17:53] *** p6eval left
[17:53] *** Wolfman2000 left
[17:53] *** cotto_work left
[17:53] *** orafu left
[17:53] *** rgrau_ left
[17:53] *** mj41_ left
[17:53] *** gbacon left
[17:53] *** cognomore left
[17:53] *** iblechbot left
[17:53] *** mj41 joined
[17:53] *** [particle] joined
[17:54] *** stephenlb joined
[17:58] *** synth joined
[17:58] *** masak` is now known as masak

[18:11] *** hercynium joined
[18:20] *** rgrau joined
[18:23] *** brrant left
[18:23] *** brrant joined
[18:24] *** barney joined
[18:28] *** justatheory joined
[18:28] *** iblechbot joined
[18:28] *** orafu joined
[18:28] *** Wolfman2000 joined
[18:28] *** cognomore joined
[18:28] *** zaslon joined
[18:28] *** gbacon joined
[18:28] *** viklund joined
[18:28] *** p6eval joined
[18:28] *** rgrau_ joined
[18:28] *** irc.freenode.net sets mode: +v p6eval

[18:28] *** iblechbot left
[18:30] *** simcop2387 left
[18:32] *** ShaneC joined
[18:36] *** jl_2 left
[18:37] *** jl_2 joined
[18:37] *** payload joined
[18:40] *** simcop2387 joined
[18:51] <masak> I'm turning off graphical smileys in perl6advent. I hope that's ok.

[18:51] <quantumEd> :(

[18:51] <masak> they're giving false positives on my post.

[18:51] <masak> specifically, the :x in :x2

[18:52] <moritz_> masak++

[18:52] <PerlJam> masak++ indeed.

[18:52] * jnthn started working on his advent post last night

[18:52] <masak> jnthn++

[18:52] <jnthn> Will put a draft later today or tomorrow.

[18:53] <jnthn> omgmasakisawakewheniam!

[18:53] <masak> jnthn: hello. :)

[18:53] <colomon> Yay!  It's a nice feeling to have a number of posts ready to go.

[18:53] <masak> jnthn: yes, but I'm dead tired. it's past my bedtime.

[18:53] *** rodi left
[18:54] * colomon is being circumnavigated by his son....

[18:54] <masak> did you know we're being translated to Russian? http://ky6uk.ugatu.net/den-1-poluchaem-rakudo

[18:54] <Tene> masak: Yes, please turn them off.

[18:54] <moritz_> I've seen the trackbacks from that site

[18:54] <masak> Tene: already done.

[18:54] <colomon> Is that what's happening with those posts?  Sweet!

[18:55] <jnthn> masak: dobre!

[18:55] <jnthn> masak: Heh. Your bedtime seems to shift. :-)

[18:56] <masak> jnthn: yes, I've been on a 26-hour day for a week.

[18:56] <jnthn> masak: That's...an interesting idea.

[18:56] <masak> today is my first deviation. I want to get my post done, and I'm sitting in on a Skype meeting.

[18:57] <masak> otherwise, I'd have been sound asleep an hours ago.

[18:57] <jnthn> I guess it's a good way to prepare for living on a different planet... :-)

[18:57] <masak> jnthn: actually, I've slept better in the past week than in a long time.

[18:58] <jnthn> masak: Really?

[18:58] <jnthn> That's...interesting.

[18:58] <masak> yes, really. long, undisturbed sessions of sleep.

[18:58] <masak> sometimes in the middle of the day. :)

[18:59] *** rodi joined
[18:59] <Tene> I sleep so much better when I'm on that sleep schedule.

[18:59] * colomon has only had a couple of undisturbed sessions of sleep in the last year and a half...

[19:00] <colomon> which reminds me, I think I might have had something ready to commit in the middle of the night last night.

[19:00] <PerlJam> If my (lack of)sleep schedule didn't have to intersect and overlap with others, I'd not be on 24 hour days either.

[19:01] <arnsholt> masak: I tend to like that schedule as well. Pity it interoperates so badly with the rest of the world =)

[19:01] <masak> arnsholt: yes. it worked during my vacation.

[19:02] *** mofino left
[19:05] *** lichtkind joined
[19:06] *** Helios left
[19:07] *** Helios joined
[19:09] *** nihiliad left
[19:09] *** nihiliad joined
[19:11] *** jaldhar left
[19:13] <pugs_svn> r29295 | colomon++ | [t/spec] Add tests for .comb that returns Strs.  Fix tests for .comb that returns Matches.  Fudge for ng. 

[19:14] <colomon> There we go.

[19:15] <dalek> rakudo/ng: 098b472 | (Solomon Foster)++ | t/spectest.data:

[19:15] <dalek> rakudo/ng: Add comb.t to spectest.data.

[19:15] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/098b47204082cb2661ea9c3da4facc7171281769

[19:15] *** broquaint joined
[19:16] *** broquaint left
[19:20] <takadonet> colomon++

[19:20] *** broquaint joined
[19:27] *** mberends joined
[19:41] *** nihiliad left
[19:41] *** nihiliad joined
[19:43] *** barney left
[19:44] <pugs_svn> r29296 | colomon++ | [t/spec] Fix broken .comb test, then unfudge it. 

[19:47] <masak> my blog post for tomorrow sits among the drafts; people are welcome to review it, especially the end, which is new since this morning.

[19:51] *** brrant left
[19:52] *** pnate2 joined
[19:52] <masak> I'll be heading home soon to sleep, so if people find things to change, feel free to just go ahead.

[19:53] *** pnate left
[19:53] <moritz_> masak++

[19:53] <moritz_> masak: you should schedule it

[19:53] <masak> I did.

[19:53] <moritz_> ok

[19:54] <masak> I still find the ending a bit abrupt. I'm open to suggestions there.

[19:54] <moritz_> sub f(Array @a) { ... }  # WRONG, unless you mean a List of Arrays

[19:54] <moritz_> sub f(Int   @a) { ... }  # Array of Int

[19:54] <moritz_> inconsistent use of Array vs. List detected

[19:56] <moritz_> masak: you could point out that thse signatures are essential for multi dispatch, and thus extensibility of the language

[19:56] <masak> moritz_: but doesn't @ mean List?

[19:56] <moritz_> it means Positional

[19:56] <masak> oh, right.

[19:56] <masak> I'll change that.

[19:56] <masak> moritz_++

[19:56] <moritz_> I'd just go with Array in both places

[19:56] <masak> lies-to-children? :)

[19:56] <moritz_> yes

[19:57] <jnthn> It's really Positional of Int as a constraint in a siggy. :-)

[19:57] <masak> can I write '(actually, Positional)' in the table?

[19:57] <jnthn> But my Int @x; declares an Array of Int.

[19:57] <moritz_> masak: sure

[19:57] <jnthn> So it all depends on context. :-)

[19:57] <masak> what's the actually of Code?

[19:57] <moritz_> Callable

[19:57] <jnthn> Callable

[19:58] <jnthn> Nothing is actually Code though.

[19:58] <jnthn> but rather subclasses of it.

[19:58] <masak> nodnod.

[19:58] <jnthn> (Block, Sub, Method)

[19:58] <moritz_> WhateverCode

[19:58] <masak> Regex.

[19:58] <jnthn> Submethod

[19:58] <jnthn> Yourmom

[19:58] <jnthn> oh, wait.

[19:59] <masak> :)

[20:00] <masak> .oO( "your mom is so Callable, she has a postcircumfix:<( )> method..." )

[20:00] <rodi> masak++

[20:01] <jnthn> Meh, I wish ng's laziness was as good as my dogs.

[20:01] <jnthn> "Want to go for a walk?" <dog curls up in even tinier ball>

[20:02] * jnthn goes to take it for some exercise anyway...bbl

[20:04] <colomon> masak++ # nice post

[20:04] <masak> thanks.

[20:04] <colomon> jnthn++ # dog walking

[20:05] <colomon> I love the fact that I'm learning new stuff from almost every post....

[20:05] <masak> as pmichaud predicted, the placeholder variables are a low-hanging fruit for someone else.

[20:05] <masak> that would make a nice post by itself.

[20:05] <masak> I hope jnthn mentions the OO twigil parameters, because they're nice.

[20:06] *** rodi left
[20:08] <colomon> placeholder variables?

[20:08] <masak> colomon: $^foo

[20:08] <colomon> ah!

[20:09] <moritz_> $:foo!

[20:09] <colomon> they got mentioned in a previous post.

[20:09] <masak> we're not getting nearly as many visitors today. only 2k so far.

[20:10] <masak> still, more than any day before the Slashdotting. :)

[20:10] * colomon can still remember how excited he was to reach 1000 hits last week....

[20:12] <PerlJam> Just like any other "product", it needs to be kept fresh in people's minds.

[20:12] <masak> that's why we have daily releases. :)

[20:12] <moritz_> well, I don't think we'll ever see 10k hits per day this year

[20:12] <moritz_> but it's been a huge marketing success already

[20:12] <moritz_> and I've seen a few newcomers here, which I think is a very good sign

[20:12] <masak> moritz_: we saw 11k hits yesterday.

[20:12] <masak> aye.

[20:16] *** supernovus joined
[20:23] <takadonet> moritz_: hopefully a few stay and help out 

[20:24] <colomon> so, Any.p5chop says         for @.list -> $str is rw {

[20:24] <colomon> and ng replies: Method 'list' not found for invocant of class 'Perl6Str'

[20:24] <colomon> Is that @.list something like "self as a list"?

[20:24] <moritz_> @.list is the same as @( self.list )

[20:24] <lambdabot> No module "is the same as @( self.list )" loaded

[20:24] <moritz_> just like $.foo is short for $( self.foo )

[20:25] *** stephenlb left
[20:25] <colomon> ng: for 1 -> $x { say $x }

[20:25] <p6eval> ng 098b47: 1‚ê§

[20:25] <colomon> would it make sense to just say for self -> $str there, then?

[20:26] <moritz_> no idea

[20:27] <PerlJam> ng: for list(1) -> $x { say $x }

[20:27] <p6eval> ng 098b47: 1‚ê§

[20:27] <PerlJam> (just checking :)

[20:29] *** stephenlb joined
[20:31] * takadonet cannot wait for the next post on Perl6 advent calendar

[20:31] <PerlJam> takadonet: well you're gonna have to!  ;)

[20:31] <takadonet> Perljam: NO!!! hehe

[20:33] *** KyleHa joined
[20:33] <colomon> ng: for list("hello") -> $x { say $x }

[20:33] <p6eval> ng 098b47: hello‚ê§

[20:35] <jnthn> for list("hell", "no") -> $x { say $x }

[20:35] <jnthn> ng: for list("hell", "no") -> $x { say $x }

[20:35] <p6eval> ng 098b47: hell no‚ê§

[20:35] <jnthn> fail.

[20:35] <jnthn> ...I think... :-)

[20:36] * jnthn guesses a list should flatten, anyways...

[20:37] *** lichtkind left
[20:37] <moritz_> lolzaslonisslow

[20:37] <colomon> ah well.  p6chop is pretty darned low priority as far as I'm concerned...

[20:38] <pmichaud> yes, the list should flatten

[20:39] *** Wolfman2000 left
[20:40] *** payload left
[20:40] *** pointme left
[20:42] <sjohnson> afternoon guys

[20:42] <sjohnson> and girls

[20:42] <quantumEd> hi

[20:42] <sjohnson> how's it going

[20:42] <zaslon> lolmoritzhazblogged! moritz++ 'Perl 6: Failing Softly with Unthrown Exceptions': http://perlgeek.de/blog-en/perl-6/failing-softly.html

[20:42] <quantumEd> super!!!

[20:44] <pugs_svn> r29297 | colomon++ | [t/spec] Fudge no-break space test. 

[20:45] * masak .oO( Roberta Flack )

[20:46] <PerlJam> masak++ indeed.

[20:47] <moritz_> Fatal error: Unresolved cultural reference at line 1 near "Roberta"

[20:47] <masak> :)

[20:47] <masak> moritz_: http://www.youtube.com/watch?v=dpNdMIAnKko

[20:48] <PerlJam> masak: I was even expecting a nod to the song within the body of the text after reading the title :)

[20:48] <masak> moritz_: you might know the song better by its awful modern remix. :/

[20:48] <moritz_> so clive + youtube is the dynamic linker for cultural references :-)

[20:48] <moritz_> masak: I do

[20:48] <dalek> rakudo/ng: 98d34f1 | (Solomon Foster)++ | t/spectest.data:

[20:48] <dalek> rakudo/ng: Turn on flip.t and words.t in spectest.data.

[20:48] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/98d34f1a24b3efc8efe94fa9637079d2e88dde81

[20:48] <moritz_> masak: and I wondered how to make the pun on that song title more explicit

[20:49] <masak> moritz_: now you know. :)

[20:49] <colomon> woah.  I know that song from back in the day, I think, but I don't recognize the artist or remember the words...

[20:49] <masak> moritz_: a simple faked "Listening to: ..." would be enough. :)

[20:50] <moritz_> masak: well, you had the "right" idea anyway

[20:50] <PerlJam> Does ng have any known LHF that haven't been plucked?

[20:50] * PerlJam isn't feeling too productive today

[20:52] <colomon> If I knew, I'd be plucking them.  ;)

[20:52] * colomon would like to see the spec test with more than 2100 tests before he gets to mailing stuff and cleaning the house...

[20:52] *** payload joined
[20:53] *** pnate2 left
[20:53] <colomon> Though as I suggested to moritz_ the other day, there's easily plucked stuff in getting the named versions of various math operations to work....

[20:54] <TimToady> masak: what is this "undef" of which you speak?

[20:54] <masak> TimToady: oh dang.

[20:55] <masak> TimToady: are you saying that writing that post will force me to actually try to grok the Mu stuff? :/

[20:55] <KyleHa> For me, words.t sometimes segfaults after test 5.

[20:55] <PerlJam> Hmm.  Wolfman's post mentions undef too

[20:55] <PerlJam> oh, but that's in a perl 5 snippet

[20:55] <TimToady> I'd just say "if you default is undefined" or some such prose

[20:56] <masak> I can do that. TimToady++

[20:56] <TimToady> unspecified, maybe

[20:56] <masak> aye.

[20:56] <moritz_> TimToady: should *.defined return False, or a WhateverCode object?

[20:57] <colomon> KyleHa: on the test with tabs?

[20:57] <KyleHa> colomon: Yes, that one.

[20:57] <colomon> weird.

[20:57] <KyleHa> I'm recompiling after a 'git clean -xdf' to see if that makes a difference.

[20:58] <TimToady> moritz_: WhateverCode, I think

[20:59] <TimToady> we want "when *.defined" to work as expected

[20:59] <moritz_> rakudo: say *.defined

[20:59] <p6eval> rakudo 7ef386: set_integer_keyed() not implemented in class 'Sub'‚ê§in Main (file <unknown>, line <unknown>)‚ê§

[20:59] <moritz_> TimToady: wfm

[21:00] *** Su-Shee left
[21:02] <KyleHa> OK, now words.t segfaults every time (or at least, ten times in a row).

[21:02] <colomon> blast, can't get roots working easily without list assignment.

[21:02] <moritz_> KyleHa: lemme guess... you don't have icu installed?

[21:03] <KyleHa> moritz_: I thought I did.  How can I tell?

[21:03] <moritz_> KyleHa: ./parrot_install/bin/parrot_config has_icu

[21:03] <KyleHa> I haver version 3.8.1-3+lenny2

[21:03] <moritz_> of libicu-dev?

[21:04] <KyleHa> Yes.

[21:04] *** cognomore left
[21:04] <KyleHa> parrot_config agrees that I have icu.

[21:04] <moritz_> I have that too, parrot has no problems with that on

[21:04] *** cognominal left
[21:04] <colomon> ooo, I don't have icu installed, I think.

[21:05] <colomon> but why would icu affect that test?

[21:05] <moritz_> because it deals with strings?

[21:05] <moritz_> no, it's really just a guess

[21:07] <TimToady> masak: is that final one-liner supposed to put out something recognizable?

[21:07] <masak> yes. doesn't it?

[21:08] <TimToady>   ### ## ###

[21:08] <TimToady>   # # ## # ## # #

[21:08] <TimToady>   ### # # ## # ####

[21:08] <TimToady>   # #### # # # #

[21:08] <TimToady>   # # # # # #

[21:08] <TimToady>   # ## # ## ###

[21:08] <masak> o.O

[21:08] <TimToady> that's what the html says

[21:08] <masak> the spaces have been collapsed in that one.

[21:08] <quantumEd> I can't read it

[21:08] <quantumEd> tim toady

[21:08] <quantumEd> PERL ?

[21:08] <masak> it looks fine in the preview.

[21:08] <masak> "Perl 6".

[21:09] <masak> it's formatted in the same way as in my post a week ago, so I'm not too worried about the way it'll look in the post.

[21:09] <TimToady> I cut and pasted the whole thing to an html file, and that's what came out

[21:09] <masak> ah.

[21:10] <TimToady> are those not normal spaces?

[21:10] <masak> TimToady: try running the code indead :)

[21:10] <masak> TimToady: yes.

[21:10] <masak> TimToady: but they're in a <pre> enclosure.

[21:10] <TimToady> is there a way to tell the gist to render it?

[21:10] <masak> oh, you're reading the gist?

[21:10] <masak> I have no idea.

[21:15] <sjohnson> rakudo: my $string;  say $string.WHAT;

[21:15] <p6eval> rakudo 7ef386: Failure()‚ê§

[21:15] <TimToady> yeah, if I just sweep-select the pre section, it takes out all the extra spaces.  bizarre...

[21:15] <sjohnson> rakudo: my $string;  say $string.length;

[21:15] <p6eval> rakudo 7ef386: Method 'length' not found for invocant of class 'Failure'‚ê§in Main (file src/gen_setting.pm, line 324)‚ê§

[21:15] <sjohnson> rakudo: my $string;  say $string.chars;

[21:15] <p6eval> rakudo 7ef386: Use of uninitialized value‚ê§0‚ê§

[21:16] <sjohnson> TimToady: is "use of ..." an actual compile error?

[21:16] <moritz_> it's a run-time warning

[21:16] <TimToady> where?

[21:16] <TimToady> oh, there

[21:16] <sjohnson> TimToady: when $string hasn't be defined

[21:16] <sjohnson> i'm trying to bash javascript's annoying errors on method fails

[21:16] <TimToady> what moritz_++ said

[21:17] <sjohnson> thanks guys

[21:17] <sjohnson> rakudo:  my $str = '';  say $str.WHAT

[21:17] <p6eval> rakudo 7ef386: Str()‚ê§

[21:17] <moritz_> rakudo: my Str $str; say $str.WHAT

[21:17] <p6eval> rakudo 7ef386: Str()‚ê§

[21:18] *** cognominal joined
[21:18] <TimToady> rakudo: say Str.chars

[21:18] <sjohnson> my respect for javascript has gone down a few notices

[21:18] <p6eval> rakudo 7ef386: 5‚ê§

[21:18] <PerlJam> sjohnson: why is that?

[21:18] <sjohnson> PerlJam: not a huge fan of its strong typing

[21:19] <sjohnson> var string;  string.length // fail

[21:19] <sjohnson> must be = '';  or instantiated i believe

[21:19] <sjohnson> i like perl6's warning behaviour much more

[21:20] <sjohnson> just an opinion i suppose

[21:20] <TimToady> well, but I didn't get that on the Str.chars, which means .chars is using the wrong stringifier

[21:20] <TimToady> it should use the ~ one that returns '' with warning rather than the .Str which produces "Str()"

[21:21] <sjohnson> is this a bug ?  or am i going about my opinion rant with the wrong knowledge

[21:21] <moritz_> rakudo doesn't know about Stringy yet

[21:22] <TimToady> we're just trying to finesse Perl 6 such that it does the warning when you expect it, but gives you type information when you expect that

[21:22] <TimToady> for suitable values of "expect"

[21:23] <sjohnson> use expect;

[21:23] <TimToady> which, as moritz_++ mentions, is tied to the Str vs Stringy distinction

[21:23] <TimToady> at least as currently specced

[21:23] <moritz_> .oO( "do what I mean" vs. "exepct what I do")

[21:23] <TimToady> in those terms, I'm arguing that the coercion that .chars does should use Stringy, not Str

[21:24] *** meppl left
[21:24] <TimToady> and arguably, the coercion that Stringy does depends on both the value and the current unicode abstraction level

[21:27] <moritz_> I wonder if the "current unicode abstraction level" is really such a good idea

[21:27] <sjohnson> i'll just pretend my peanut-sized brain can understand what you just said

[21:27] <moritz_> we already have text strings and byte strings

[21:27] <moritz_> why not just introduce another type, like Codepoint-strings?

[21:27] <TimToady> I suspect Str always means graphemes, and some other type probably means a string of codepoints

[21:27] <TimToady> we could call it a Codfish

[21:27] *** jl_2 left
[21:27] *** jl_2 joined
[21:28] <TimToady> in a sense, codepoints are a partial encoding

[21:28] *** pnate joined
[21:28] *** payload left
[21:29] <sjohnson> was the idea behind parrot to make it so implementing Perl 6 would be a heck of a lot easier

[21:29] <TimToady> but we call those abstract encodings "canonicalizations"

[21:29] <sjohnson> than writing it as perl5 C interpreter was?

[21:29] <TimToady> there have been many ideas behind parrot...

[21:30] <sjohnson> i know one is for other languages to possibly be implemented as well

[21:30] <sjohnson> but im wondering if making it far easier to implement all the fancy and innovative and complex things in Perl 6 was also a definite by-product / goal

[21:30] <TimToady> another was to have an unencumbered VM

[21:31] <TimToady> parrot has gone back and forth on that issue, depending on how much they understand how strange Perl 6 is.  :)

[21:31] <TimToady> but by and large, yes, that has been a constant goal at some level or other

[21:32] <TimToady> it was de-emphasized some number of years ago as the primary goal, however

[21:32] <sjohnson> i'm really excited about this Perl 6 rakudo release coming in a few months

[21:32] <TimToady> since it was felt that emphasizing Perl would scare away developers from other languages

[21:32] <sjohnson> it will convince many folks that a lot of dev work has actually gone into it

[21:32] <sjohnson> and is not just some pipe dream

[21:33] <TimToady> it's not yet clear how much benefit derived from the de-emphasis, though...

[21:33] <TimToady> most of the other language communities keep parrot on the back burner

[21:34] <PerlJam> sjohnson: what makes you think the April release will convince anyone of anything where the 2 years of continuous monthly releases have not?

[21:35] <sjohnson> PerlJam: because the news of it being released might reach some people who don't keep up to date on Perl news

[21:35] <sjohnson> i've been using perl for 2 years before i even heard about perl 6

[21:35] <sjohnson> i am i am doubtful python programmers etc know much about the perl6 dev work 

[21:35] <Tene> PerlJam: because it's RELEASED BETA GAMMA DEVELOPMENT LOLCAT VERSION

[21:36] *** payload joined
[21:36] <PerlJam> sjohnson: well, I raise my Dr Pepper to you in the hopes that you are correct.

[21:37] <sjohnson> python programmer:  "wait, you mean perl 6 is actually happening?"

[21:38] * PerlJam hopes to work on Perl 6 documentation over the Christmas break so that said python programmer has an easyish place to start.

[21:41] * masak too

[21:42] *** viklund left
[21:42] *** zaslon left
[21:42] *** p6eval left
[21:42] *** orafu left
[21:42] *** rgrau_ left
[21:42] *** gbacon left
[21:42] *** justatheory left
[21:43] * takadonet hopes he can write some Bioperl6 before april

[21:43] *** justatheory joined
[21:43] *** orafu joined
[21:43] *** zaslon joined
[21:43] *** gbacon joined
[21:43] *** viklund joined
[21:43] *** p6eval joined
[21:43] *** rgrau_ joined
[21:43] *** irc.freenode.net sets mode: +v p6eval

[21:43] * Tene ha sother secret christmas plans.

[21:44] <PerlJam> TimToady: just remember ... http://www.snorgtees.com/withgreatmoustache-p-863.html

[21:56] <mathw> evening

[21:57] <masak> mathw: \o

[21:57] <masak> well-deserved sleep &

[21:57] *** masak left
[21:57] <moritz_> o/

[21:57] <PerlJam> Is that "half praise"?

[21:57] <PerlJam> (or 2/3 as is your wont)

[21:58] <moritz_> it's raising one hand it greeting/waving goodbye

[21:58] <mathw> o/

[21:58] <mathw> rather than \o/ which is more like 'w00t'

[21:59] <PerlJam> I always think of \o/ more like "yay!"

[22:00] <moritz_> btw I did some Perl 6 advocacy on perlmonks yesterday or so: http://www.perlmonks.org/?node_id=811487

[22:00] <mathw> moritz_++

[22:01] <PerlJam> moritz++ indeed

[22:01] <mathw> unsolicited, I see

[22:01] <mathw> :)

[22:01] <PerlJam> that's the best kind of advocacy

[22:02] <avar> Maybe I should reply with a message on how to do it in php :)

[22:02] <PerlJam> That way, someone reads it unassuming and thinks, "hmm, that's interesting" and goes to try out Rakudo  :)

[22:02] <sjohnson> hello

[22:02] <PerlJam> avar: sure ... but that'll just get you downvoted.

[22:02] <PerlJam> :)

[22:02] <mathw> avar: no no resist the temptation! be strong!

[22:03] <mathw> and also consider the effect of posting PHP on PerlMonks

[22:03] <avar> or CL: (sort array #'>) instead of @array.sort: { $^b <=> $^a }

[22:04] <mathw> #'> is saying 'use the > operator' ?

[22:04] <moritz_> the idiomatic reverse sort in Perl 6 is probably @array.sort: -*

[22:04] <moritz_> or @array.sort.reverse

[22:05] <PerlJam> moritz_: does the former work?

[22:05] <mathw> that depends if there's a meaningful prefix:<->

[22:05] <moritz_> PerlJam: don't think so

[22:05] <moritz_> rakudo: say -*

[22:05] <p6eval> rakudo 7ef386: !whatever_closure‚ê§

[22:05] <avar> mathw: yes

[22:05] <moritz_> rakudo: say <10 08 34 8>.sort: -*

[22:05] <p6eval> rakudo 7ef386: 3410088‚ê§

[22:05] <mathw> could you not say something like @array.sort: &infix:<cmp>

[22:06] <moritz_> rakudo: say <10 08 34 8>.sort( -*).perl

[22:06] <p6eval> rakudo 7ef386: ["34", "10", "08", "8"]‚ê§

[22:06] <avar> mathw: Actually "use the > function", > is just a function in CL

[22:06] <moritz_> mathw: you can, but &infix:<cmp> is the default anyway

[22:06] <mathw> avar: of course, I forget that lisp doesn't have infix operator syntax

[22:06] <mathw> in Haskell you'd say: sort (>) list

[22:07] <moritz_> ... and then you'd spend half an hour figuring out why the compiler yells at you

[22:08] <mathw> meh

[22:08] <mathw> you get used to it

[22:08] <diakopter> TimToady: the "raw" link on the gist?

[22:09] *** hercynium left
[22:09] <moritz_> mathw: that's the same "you get used to it" as in the Inline:::PERL documentation :-)

[22:13] <mathw> or Sun Studio C++'s error messages

[22:14] <mathw> and generally better than Rakudo's...

[22:14] <mathw> :P

[22:14] <mathw> yes I know, unfair comparison

[22:14] <sjohnson> hows it going masak?

[22:15] *** perlygatekeeper left
[22:16] *** mberends left
[22:21] *** iblechbot joined
[22:25] <mathw> masak went to bed

[22:30] <mathw> moritz_: why didn't you save the unthrown exceptions post for the advent calendar?

[22:30] <zaslon> lolmoritzhazblogged! moritz++ 'Keep it stupid, stupid!': http://perlgeek.de/blog-en/misc/keep-it-stupid-stupid.html

[22:32] * mathw -> bed

[22:32] <mathw> o/

[22:32] <moritz_> mathw: because 1) somebody in #perlde asked me for it today 2) I have no free slot 3) I didn't really think about it :-)

[22:32] <mathw> fairy muff

[22:32] <mathw> o/

[22:32] <moritz_> and 4) I need to blog for the iron man contest anyway :-)

[22:34] <moritz_> good night

[22:35] *** nihiliad left
[22:35] *** nihiliad joined
[22:39] *** kaare_ left
[22:39] *** viklund left
[22:39] *** zaslon left
[22:39] *** p6eval left
[22:39] *** orafu left
[22:39] *** rgrau_ left
[22:39] *** gbacon left
[22:39] *** justatheory left
[22:41] *** pnate2 joined
[22:43] *** KyleHa left
[22:43] *** justatheory joined
[22:43] *** orafu joined
[22:43] *** zaslon joined
[22:43] *** gbacon joined
[22:43] *** viklund joined
[22:43] *** p6eval joined
[22:43] *** rgrau_ joined
[22:43] *** irc.freenode.net sets mode: +v p6eval

[22:49] *** pnate left
[22:50] *** zaslon left
[22:50] *** zaslon joined
[22:53] <carlin> phenny: oh hai

[22:53] <phenny> carlin: 15:04Z <mberends> tell carlin the http-daemon in perl6-examples is the obsolete prototype, better to keep separate modules in separate repositories

[22:54] <carlin> I meant more a general case of how to handle conflicts but now that mberends++ has removed the duplicates I guess I can cross that bridge if I come to it again

[23:02] <wayland_> I know there's a branch supposed to be landing before the December release.  Has it landed, and if not, do we have a timescale?

[23:02] *** wayland_ is now known as wayland76

[23:03] <moritz_> it hasn't

[23:03] <PerlJam> wayland76: no, it hasn't

[23:03] <moritz_> and the timescale is "when it's ready" :/

[23:03] *** iblechbot left
[23:03] <PerlJam> wayland76: the timescale is "soon"

[23:03] <wayland76> Ok

[23:03] <wayland76> Because I just got an RPM of the last release to build

[23:03] <wayland76> But before submitting spec file changes, I'd like to test it on the new branch

[23:04] <wayland76> But I'd rather wait until the branch has landed, if that's possible :)

[23:04] *** obra joined
[23:05] <wayland76> Anyway, thanks :)

[23:05] *** obra left
[23:05] *** obra joined
[23:06] <PerlJam> wayland76: hang around here and you'll know when it lands.

[23:06] *** thowe joined
[23:06] <wayland76> PerlJam: I'm sure :)

[23:06] <thowe> hi

[23:07] <wayland76> But I'd rather ask than backlog :)

[23:07] <wayland76> thowe: Hi!

[23:07] <wayland76> Is the hugme bot non-responsive?

[23:08] <moritz_> hugme: list projects

[23:08] <hugme> moritz_: I know about book, gge, hugme, ilbot, json, november, nqp-rx, nqpbook, perl6-examples, proto, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte, web

[23:08] <moritz_> wayland76: it seems very responsive to me :-)

[23:09] <sjohnson> wayland76: hi

[23:09] <sjohnson> that's a nick i haven't seen in months !

[23:14] <thowe> man, have I been having a unique day...

[23:15] *** PacoLinux left
[23:15] <thowe> actually had to ban a guy from our building...  never done anything of the sort before

[23:15] <wayland76> Wow! :)

[23:15] <wayland76> hugme: hug moritz_

[23:15] * hugme hugs moritz_

[23:16] <thowe> yeah.  That was a really uncomfortable phone call to his boss.

[23:16] <wayland76> hugme: hug thowe

[23:16] * hugme hugs thowe

[23:16] <thowe> thanks.  It was tough.

[23:16] <wayland76> sjohnson: Yeah, i was doing NaNoWriMo, so that took me out for November, and part of October.

[23:17] * thowe needs to check the advent calendar today....

[23:17] <wayland76> But I dropped by here when the Slashdot article came out, although I would've been back here on Monday anyway.  

[23:17] <sjohnson> which slashdot article was it?

[23:18] <wayland76> The advent calendar one

[23:18] <thowe> the slashdot thing about the advent calendar reminded me to look in on Perl 6 again...  So I'm kind of grateful for the work done on that.

[23:18] <wayland76> I'm back here partly to get the RPM working again

[23:19] <wayland76> Because when the new branch lands, I want to test my 8 or so Perl 6 projects, to see if any of the bugs that they're blocking on are fixed :)

[23:20] *** ben_bash joined
[23:20] *** pnate2 left
[23:22] *** alester left
[23:23] <moritz_> thowe: good to hear that

[23:23] <wayland76> Part of the problem is that in the past, I haven't usually tried very hard to work around bugs, I just wait for them to be fixed

[23:24] <moritz_> all in all I'm very pleased... 20k+ page views, some 60-odd comments, a few new faces here on #perl6

[23:24] <moritz_> colomon++ and PerlJam++ for starting it

[23:30] *** hercynium joined
[23:32] <thowe> you guys sure are nicer than most folks in language channels...

[23:33] *** romanhunt joined
[23:34] *** ben_bash left
[23:34] <romanhunt> hello all

[23:34] <thowe> there's like a more friendly energy...

[23:34] <thowe> hi

[23:35] <romanhunt> the Perl 6 wikibook has been a big help. THx to whoever has been maintaining it

[23:35] *** reid06 joined
[23:35] <thowe> Wikibook?  Where's that at?  I wanna take a look.

[23:36] <romanhunt> http://en.wikibooks.org/wiki/Perl_6_Programming/

[23:37] <thowe> Ah, OK, thx.  I was wondering if it was amongst those

[23:37] <romanhunt> make sure to click the "more" links on perl6.org

[23:37] <romanhunt> theres some stuff hidden from view

[23:37] <thowe> OK

[23:38] <thowe> whoa.  that's a really... friendly looking site too.  and why not, I guess...

[23:40] *** meppl joined
[23:40] <romanhunt> rakudo ng: my $d = 5; if ($d ~~ "five") { say "true";} else { say "false";}

[23:41] <romanhunt> rakudo: my $d = 5; if ($d ~~ "five") { say "true";} else { say "false";}

[23:41] <p6eval> rakudo 7ef386: false‚ê§

[23:42] <romanhunt> rakudo: my $d = 5; if ($d ~~ "5") { say "true";} else { say "false";}

[23:42] <p6eval> rakudo 7ef386: true‚ê§

[23:43] <romanhunt> clearly I have been at work too long :-\

[23:48] *** pmurias left
[23:48] <slavik> haha

[23:49] <slavik> I though $d ~~ "five" was actually supposed to return true ...

[23:53] *** wolverian left
[23:54] <thowe> How would one know if these projects were in development? http://www.perlfoundation.org/ilya_carl_and_stephen_a_lightweight_web_framework_for_perl_6

[23:55] <pmichaud> thowe: maybe look at news.perlfoundation.org for updates?

[23:55] <thowe> ok

[23:55] *** quantumEd left
[23:57] *** pointme joined
[23:58] <carlin> pointme: web

[23:58] <pointme> masak's web is at http://github.com/masak/web/

[23:58] <carlin> thowe: ^

[23:59] <thowe> Nifty!  thanks, carlin

