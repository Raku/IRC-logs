[00:00] *** xabbu42 left
[00:03] *** TiMBuS joined
[00:03] *** nihiliad left
[00:03] <jnthn> pmichaud: I've got a start on the packages stuff. I'll continue on it tomorrow.

[00:04] <jnthn> pmichaud: I think I'm past the initial conceptually tricky bit (figuring out how it should look).

[00:04] *** pnate joined
[00:04] <jnthn> So now it's "just code" for a while. Expect to commit something tomorrow.

[00:04] *** pnate2 left
[00:10] *** kidd` left
[00:10] *** kidd` joined
[00:10] *** Gruber joined
[00:13] *** icwiener left
[00:15] *** orafu left
[00:16] *** pnate2 joined
[00:16] *** orafu joined
[00:17] *** nbrown left
[00:17] *** tak11 joined
[00:18] <bpetering> hai everyone :)

[00:21] <bpetering> jnthn: (backlogging a lil): what's the issue with Parrot/Rakudo/MSVC++ ?

[00:21] *** alester joined
[00:22] <bpetering> reason being, i'm stuck on a vista machine for the next 2 weeks, and if masak wants his tests i need to get Rakudo running :)

[00:22] <bpetering> just wondering what is the best way to do so.

[00:23] <jnthn> bpetering: ohhai

[00:23] <jnthn> bpetering: As far as I know, it's something to do with manifest.

[00:24] <Juerd> bpetering: feather? :)

[00:24] <jnthn> It gets right to the end and then fails when making perl6.exe.

[00:24] <jnthn> Juerd: shush! We might get somebody to fix Rakudo on Vista! :-P

[00:24] <bpetering> haha :P

[00:24] <jnthn> :-)

[00:24] <Juerd> jnthn: You think anyone else would notice? ;)

[00:25] <Juerd> Anyway, I'm off to bed

[00:25] <bpetering> I think vista needs to die, and if anyone has Rakudo running on it, it's slightly more reason to let it live :)

[00:25] <Juerd> Good localtime.

[00:25] <bpetering> night Juerd :)

[00:25] <jnthn> Juerd: Well, I guess the other people who are stuck on Vista. ;-)

[00:25] <jnthn> night Juerd o/

[00:26] <bpetering> jnthn: i'm a little impatient, and judging from masak++'s latest blog post, he is too.

[00:26] <bpetering> so i'm thinking cygwin.

[00:27] <bpetering> also, how hopeful are you about Rakudo on Win 7? thinking about going that route in 2 weeks or so. :)

[00:27] *** reid04 left
[00:28] *** reid04 joined
[00:29] <bpetering> err, "masak++++'s SECOND latest". My goodness that man is productive.

[00:31] *** pnate left
[00:31] *** pnate joined
[00:36] <bpetering> jnthn: oops, reread what i wrote, don't interpret that as demanding anything from you. (waking up)

[00:36] <jnthn> bpetering: I'm going to be doing Rakudo dev on Win7 in a month or so.

[00:37] <jnthn> bpetering: I think it'll share the same issue as Vista.

[00:38] *** orafu left
[00:38] <bpetering> jnthn: ok, thank you :)

[00:38] *** orafu joined
[00:38] <s1n> yay, i can haz references!

[00:39] * s1n in reference (pun) to larry's recent commits

[00:39] *** pnate2 left
[00:44] *** Wolfman2000 joined
[00:44] <Wolfman2000> Evening. Does anyone know if there are any web frameworks already working on Perl 6?

[00:44] *** pnate2 joined
[00:45] <bpetering> Wolfman2000: check out http://github.com/masak/web

[00:45] <Wolfman2000> bpetering: thanks. *goes to read*

[00:46] <bpetering> Wolfman2000: np

[00:47] <bpetering> jnthn: and keep up the good work... you and pmichaud have been fearsomely productive of late :)

[00:49] <Wolfman2000> ...this seems like it can be useful.  ...when it's time for me to upgrade to Perl 6 that is.

[00:49] <bpetering> Wolfman2000: what's stopping you, out of curiosity?

[00:49] <Wolfman2000> bpetering: still used to 5.10.0

[00:50] <Wolfman2000> waiting for Perl 6 to become more...mainstream I guess

[00:50] <bpetering> Wolfman2000: we expect to take over the world sometime around April next year :)

[00:50] <Wolfman2000> Then I'll keep an eye out

[00:51] <bpetering> seriously, read about "rakudo star" - it'll make it possible for Perl 6 to start becoming mainstream :)

[00:54] <Wolfman2000> So that's why April 2010 is the goal. perl 6 is being released...not feature complete

[00:55] <bpetering> Wolfman2000: Perl 6 is a specification developed at the same time as the implementations of it

[00:55] <Wolfman2000> I don't know if that's a good thing or not

[00:55] <bpetering> so by necessity, the implementations have releases which implement and incomplete spec

[00:55] *** pnate2 left
[00:56] <bpetering> *an incomplete

[00:56] *** Chillance left
[00:56] <bpetering> we tend to think so, because then Perl 6 can avoid the problem of "oops, the language design was frozen way before anyone tried to do anything useful with it"

[00:58] <Wolfman2000> ...the reason I asked about the web development stuff...I right now use Catalyst for one of my websites. If you require Perl 6 testing, any sort of tutorial or guide to convert my page to the Perl 6 web framework could be useful.

[00:59] <bpetering> Web.pm (URL i linked you to) isn't really ready for production use

[01:00] *** alester left
[01:00] <Wolfman2000> I'm guessing...not much is ready

[01:00] *** pnate left
[01:01] <bpetering> we have nothing near Ruby on Rails yet, true

[01:01] *** quietfanatic joined
[01:01] <bpetering> but we're also aiming way higher than Ruby

[01:01] <Wolfman2000> Well, this is a Perl room

[01:03] <bpetering> that's not a negative comment about Ruby. "It's a nice language, I use it occasionally"

[01:04] <Wolfman2000> Hard to tell: sarcasm on the web isn't my strong point

[01:04] <bpetering> Wolfman2000: neither mine. (that wasn't sarcastic) :)

[01:05] <TimToady> well, you can tell how much we like other languages by how much we borrow back from them. :)

[01:05] <TimToady> and certainly, we like a lot of Ruby because some large percentage of it was borrowed from Perl 5 :)

[01:06] <Wolfman2000> TimToady: I was not aware of the language borrowing

[01:06] <TimToady> Perl 6's twigil semantics are essentially Ruby's sigil semantics, for one example

[01:06] <TimToady> and we're very much more Everything Is An Object than we were

[01:07] <TimToady> on the other hand, Ruby's made some mistakes too, and we've tried not to borrow those :)

[01:08] <Wolfman2000> I think all languages have made mistakes at least once

[01:08] <Wolfman2000> PHP is looking to make one themselves with the namespace separator

[01:08] <Wolfman2000> ...why \?

[01:09] <TimToady> well, at least they'll *have* namespaces...finally...

[01:09] <TimToady> and hey, Perl used ' for a while, which was a bit of a problem

[01:10] <bpetering> Wolfman2000: the consensus around here is that "PHP is a demon child which should have been strangled in the crib"... (or worse)

[01:11] <Wolfman2000> bpetering: ...hope you don't mind that I actually have some websites that use PHP then.

[01:11] <bpetering> Wolfman2000: not at all, it succeeded for a reason - namely, it got some things right

[01:11] <TimToady> wel, one of our main rakudo developers has a wiki in php :)

[01:12] <TimToady> what they got right was making it dropdead easy to get started

[01:12] <Wolfman2000> TimToady: most wikis are in PHP

[01:13] <TimToady> most disruptive technologies succeed by doing something better and something else worse

[01:14] <TimToady> but I suspect the php world is quickly reaching its natural limits, much as Perl 5 has.

[01:14] <TimToady> both will see reduced growth in the future

[01:16] <Wolfman2000> ...do you require more testing with Web.pm?

[01:16] <bpetering> Wolfman2000: we'd love any sort of contribution. Testing Web.pm would be great :)

[01:16] <TimToady> which "you" are you referring to?  "you" in this case is probably some folks who are asleep right now...

[01:16] <Wolfman2000> "you" in general

[01:17] <Wolfman2000> I have...4.7 GB of space on my virtual server. I shouldn't require that much for Perl 6, right?

[01:19] <TimToady> I suspect that's probably a bit more than enough

[01:20] <Wolfman2000> ...stupid aptitude. told it to install git and it didn't even put it in the path

[01:20] <Wolfman2000> My virtual private server is Ubuntu, TW

[01:20] <Wolfman2000> BTW*

[01:21] *** quietfanatic left
[01:23] *** quietfanatic joined
[01:24] <bpetering> Wolfman2000: like TimToady said, the author of Web.pm lives in Sweden, and so is probably asleep right now.

[01:24] <Wolfman2000> bpetering: Sweden...what's the time difference...5, 6 hours from EST?

[01:25] <bpetering> GMT+2, I think

[01:25] * bpetering looks for DateTime.pm or somesuch

[01:34] <jnthn> It's 2:34 right now in Sweden.

[01:34] * jnthn lives in the same timezone

[01:34] <jnthn> 2:34am that is ;-)

[01:36] *** agentzh joined
[01:37] <sjohnson> Perl 6 borrows a lot of good things from Perl 5 too :)

[01:38] <Wolfman2000> sjohnson: I figured as such

[01:38] <Wolfman2000> well, I have enough time to get git, get perl 6, and hopefully figure out enough of Web.pm to put one of my websites on it

[01:39] <Wolfman2000> Of course...I would like to be able to keep as much of my URL names the same as possible.

[01:39] *** alester joined
[01:40] <bpetering> Wolfman2000: all the best :)

[01:40] *** nbrown joined
[01:46] <Wolfman2000> ...I just heard my dad laugh at one of the more recent Get a Mac ads

[01:47] <Wolfman2000> Sounded like PC was claiming that each version of Windows would have none of the problems the previous one did. "Trust Me".

[01:47] <Wolfman2000> Based on my own experiences with windows...I'll say no

[01:48] <pugs_svn> r28978 | lwall++ | [STD] $_ is ref 

[01:50] *** ihrd joined
[01:50] *** ihrd left
[01:52] <carlin> zaslon: still alive?

[01:52] <zaslon> Sorry, I don't understand that command

[01:52] <carlin> :)

[01:55] <carlin> I think that false alarm about pm's blog was caused by a temporary connection problem ... need error handling there. Successfully alerted to masak's post though :-)

[02:04] <carlin> zaslon: add carlin http://theintersect.org/category/perl6/feed/

[02:04] <zaslon> I am now following carlin's blog

[02:04] <carlin> zaslon: link carlin

[02:04] <zaslon> carlin's blog is at http://theintersect.org

[02:05] <carlin> zaslon: remove carlin

[02:05] <zaslon> I am no longer following carlin's blog

[02:10] *** xp_prg joined
[02:15] *** JimmyZ joined
[02:22] <Wolfman2000> okay, installing Perl 6 now...and I forgot there are different...builds, I guess, of Perl6. There's Parrot, Pugs, Rakudo (which seems to use Parrot)...any others?

[02:23] <revdiablo> Wolfman2000: Parrot is a VM, not a Perl 6 implementation.  Rakudo is a Perl 6 impl that uses Parrot.  Pugs is a Perl 6 impl that doesn't use parrot.

[02:23] <Wolfman2000> ah

[02:24] <revdiablo> Wolfman2000: There are other Perl 6 implementations at various stages of donenness, SMOP and STD.pm (the latter of which is really just a grammar, as far as I know)

[02:24] <revdiablo> Wolfman2000: Rakudo is probably the most done, or at least the one with the most promising future as far as I can tell

[02:24] <bpetering> Wolfman2000: Pugs hasn't been developed in a while... even so it's nearly as advanced as Rakudo is today, though jnthn and pmichaud are catching up fast :) 

[02:25] <pmichaud> I'm not sure I'd agree with that.

[02:25] <bpetering> pmichaud: oh?

[02:25] <Wolfman2000> I'll just stick with rakudo for now since that's the one installing

[02:25] <pmichaud> in some ways we've surpassed pugs a fair bit.

[02:25] <jnthn> I think in some areas we're waaay past. :-)

[02:25] <revdiablo> I thought Rakudo passed Pugs, but I could be wrong

[02:25] <jnthn> Especially by the time ng lands.

[02:26] <jnthn> :-)

[02:26] <jnthn> anyway, sleep for me - night!

[02:26] <bpetering> night jnthn, sleep well, get up late :)

[02:26] <diakopter> 'night

[02:27] <revdiablo> Interesting.  Googling for Rakudo, I see perlbuzz.org as the top result and perlfoundation.org as the 2nd.  Rakudo.org is the 4th

[02:27] * Wolfman2000 is still compiling Perl6...or is it Parrot right now? Gah, not used to compiling during a compile I guess.

[02:27] *** xp_prg left
[02:27] * Wolfman2000 goes back to reading the synopsis

[02:27] <revdiablo> Wolfman2000: Most sufficiently advanced computer systems have multiple layers that can or need to be compiled separately

[02:28] <revdiablo> Wolfman2000: Think of parrot as a required library =)

[02:28] <Wolfman2000> ...alright, I'll buy that

[02:28] *** mjk joined
[02:29] <alester> perlbuz.com

[02:29] <alester> perlbuzz.com

[02:29] <alester> and maybe that's because of perlbuzz.com linking to Rakudo.org everywhere

[02:29] <revdiablo> Oh yeah, .com

[02:30] <revdiablo> Wouldn't that increase rakudo.org's pagerank?

[02:30] <revdiablo> Maybe the googlebots are intoxicated

[02:30] <alester> who knows?

[02:32] *** mjk left
[02:34] <bpetering> Wolfman2000: which parts of the synopsis are you reading?

[02:35] <Wolfman2000> read a bit of S09, looking at S06 now

[02:35] *** patspam joined
[02:35] <bpetering> it can get topsy-turvy at times :)

[02:36] <Wolfman2000> agreed

[02:36] <Wolfman2000> also, right now redoing the compilation of Perl6: seemed like it hung for too long to my liking

[02:37] <revdiablo> Wolfman2000: If you know perl 5, you might want to take a look at this series of posts: http://perlgeek.de/en/article/5-to-6

[02:37] <revdiablo> I find them much more easily digestible than the synopses

[02:37] <Wolfman2000> a refresher course wouldn't hurt. good idea

[02:38] *** xp_prg joined
[02:39] <bpetering> Wolfman2000: do you have a lot of programming experience?

[02:39] <Wolfman2000> bpetering: bacherlors in Computer Science. specialized more in the web development end, though.

[02:40] <bpetering> Wolfman2000: oh, me too :) (still working on the degree though)

[02:40] <Wolfman2000> already have the degree from NCState

[02:40] <Wolfman2000> ...okay, on the same line it hung...allegedly

[02:40] *** agentzh left
[02:41] <lisppaste3> wolfman2000 pasted "Compiling rakudo hangs here." at http://paste.lisp.org/display/89705

[02:42] <bpetering> Wolfman2000: that came up a day or two ago, let me backlog and maybe i can find it for you :)

[02:42] <Wolfman2000> ...okay, it's advancing now

[02:42] <Wolfman2000> that file just took awhile

[02:43] <Wolfman2000> doesn't exactly help that I'm SSHing into basically a linux box in the middle of nowhere

[02:44] <revdiablo> Wolfman2000: Running the build in screen, I hope

[02:44] <Wolfman2000> actually...no

[02:44] <Wolfman2000> never did figure out how to get screen to work on Terminal

[02:44] <Wolfman2000> Besides: interesting to see the build process

[02:45] <Wolfman2000> src/thread.c:1386: warning: suggest braces around empty body in ‘do’ statement  Don't know how much you guys care about keeping your code warning free, but this looks like an interesting one.

[02:45] <revdiablo> It's usually pretty easy.  You type "screen" and then it seems to do nothing, you are simply given another shell.  The nice part is if your connection drops, you can ssh back in and reconnect to the terminal without losing anything.

[02:45] <bpetering> Wolfman2000: that looks very interesting!

[02:46] <Wolfman2000> why would the compiler make suggestions? I thought it was supposed to just parse what it could or choke.

[02:46] <Wolfman2000> I never understood that.

[02:49] *** araujo left
[02:50] <revdiablo> Wolfman2000: Some things are legal but may be problematic. Warnings are often added after the feature's been around long enough to require backwards compatibility

[02:50] <revdiablo> Wolfman2000: The warning doesn't break back compat, but does dissuade use of problematic features

[02:52] <Wolfman2000> I believe someone mentioned recently that Perl 6 is being designed to avoid mistakes. Wouldn't keeping the warnings in...be a mistake?

[02:52] <Wolfman2000> also, new slow file: src/ops/core_ops_cg.c

[02:55] * bpetering hugs Wolfman2000

[02:55] <Wolfman2000> ...I thank you, but no thanks

[02:55] <Wolfman2000> don't know you that well

[02:56] <carlin> bpetering: we have bots for that :-)

[02:56] <carlin> hugme: hug Wolfman2000

[02:56] * hugme hugs Wolfman2000

[02:56] <carlin> Wolfman2000: how much RAM does the box you're compiling on have?

[02:56] <Wolfman2000> 256 MB

[02:57] <bpetering> Wolfman2000: well, if you hang around long enough maybe you will :)

[02:57] <Wolfman2000> alright...guess I may as well learn about screen

[02:58] <Wolfman2000> I've disconnected from my box now

[02:58] <Wolfman2000> what's the quick and dirty that I need to know for using screen to connect to my box?

[03:00] *** xp_prg left
[03:01] *** Whiteknight left
[03:01] <bpetering> Wolfman2000: not sure i follow :|

[03:02] <Wolfman2000> ...nevermind. I think I figured out some of the basics

[03:02] <Wolfman2000> http://www.kuro5hin.org/story/2004/3/9/16838/14935

[03:03] <Wolfman2000> I've got my box screen detached...I assume it's running, doing it's thing...I just don't know if it's using much of my cable modem though or if it's going faster

[03:04] <bpetering> Wolfman2000: don't think it's possible to go faster than that

[03:04] <Wolfman2000> than what it was going while I wasn't screened you mean?

[03:05] <bpetering> pretty much, not sure i have the words to express exactly what i mean

[03:07] <revdiablo> Wolfman2000: If you ssh back in, running "screen -x" will reconnect to your prior screen session

[03:07] <revdiablo> Perhaps I replied a little too late =)

[03:07] <Wolfman2000> revdiablo: I've actually been using screen -r to reconnect to my detached screen

[03:07] <revdiablo> That works too. The difference being -x will let you connect to a session even if it's still connected elsewhere.

[03:08] *** patspam left
[03:10] <Wolfman2000> ...even with screen, seems like some files just take awhile to compile

[03:11] <bpetering> sometimes things don't happen as quickly as you want

[03:14] <bpetering> i've been wanting to upgrade my laptop for a long time, give it some more RAM... make compiles quicker :)

[03:15] <Wolfman2000> my laptop (primary computer) already has 2 GB, but it's over 2.5 years old

[03:16] <bpetering> Wolfman2000: time for an upgrade? :)

[03:16] <Wolfman2000> bpetering: no money

[03:16] <revdiablo> Wolfman2000: Screen won't usually speed you up much, but it'll sure be nice if you get disconnected halfway through an hour-long compile

[03:21] <Wolfman2000> ...does perl6 normally take an hour to compile?

[03:22] <TimToady> no, you're probably thrashing badly with only 256m

[03:23] <Wolfman2000> Let's see...4 websites to my name on that box. One on Catalyst::Perl, one on Pylons, one on CodeIgniter, and one with plain PHP. Using nginx for all four of them.

[03:23] <Wolfman2000> well, lighttpd + nginx for the PHP solutions

[03:24] <Wolfman2000> ooh...Perl 6 offers multi subs. Nice. :)

[03:29] <carlin> Thought so ... there's a memory leak that wasn't there a week ago

[03:29] *** lidden left
[03:29] <Wolfman2000> carlin: ...you mean some of the files I mentioned...are causing leaks?

[03:30] <carlin> Wolfman2000: no you should be fine

[03:30] <Wolfman2000> ...was fine

[03:30] <Wolfman2000> and...my attempt at sending hte process to the background failed so I could check memory

[03:31] <Wolfman2000> ...ooh boy. swap space is near full

[03:35] *** cotto left
[03:35] <Wolfman2000> still...if it's not one file, it's another that likes to have trouble compiling

[03:35] <Wolfman2000> And I don't exactly have a lot of websites I can just...take off

[03:36] <bpetering> Wolfman2000: which one?

[03:37] <Wolfman2000> src/ops/core_ops_cg.c  <-- that file still hates me

[03:38] <Wolfman2000> brb: need a drink

[03:42] *** patspam joined
[03:42] *** patspam left
[03:44] *** envi^office joined
[03:45] *** zloyrusskiy joined
[03:46] *** zloyrusskiy left
[03:46] <Wolfman2000> sorry about that.

[03:47] * Wolfman2000 restarts the compiling process again, then just C-a d's it

[03:49] <revdiablo> Wolfman2000: yeah, that's the ticket

[03:50] *** zloyrusskiy joined
[03:50] <Wolfman2000> ...okay, this is rich. I can assign custom operators to get things like 5! to mean factorial of 5.

[03:51] <revdiablo> Wolfman2000: It seems like a lovely feature.  I wonder how it will play out in practice.

[03:51] <Wolfman2000> I have to wonder if utf-8 characters can be used for these custom operators

[03:51] <bpetering> Wolfman2000: (x)emacs?

[03:51] <Wolfman2000> bpetering: if you're asking what type of text editor I use on my VPS box... (x)emacs > vi(m), but nano > (x)emacs

[03:52] <japhb> Wolfman2000, yes, you can define operators with the full Unicode character set.

[03:52] <Wolfman2000> japhb: Just confirmed. € is used for a doubling operation

[03:53] <japhb> Makes defining math modules quite nice.  Like actually using the native symbols for set operations, vector calculations, calculus ...

[03:53] *** zloyrusskiy left
[03:54] <lisppaste3> wolfman2000 pasted "Square Root Prefix Function?" at http://paste.lisp.org/display/89706

[03:55] <Wolfman2000> Hopefully someone who already has Perl 6 can give that a shot

[03:59] <quietfanatic> rakudo: sub prefix:<√> ($x) {sqrt $x}; say √2

[03:59] <p6eval> rakudo 74f561: OUTPUT«1.4142135623731␤»

[03:59] <quietfanatic> Can't change precedence yet though

[03:59] <quietfanatic> I think

[04:00] <quietfanatic> rakudo: sub prefix:<√> ($x) is tighter(&infix:<*>) {sqrt $x}; say √2*4

[04:00] <p6eval> rakudo 74f561: OUTPUT«No applicable candidates found to dispatch to for 'trait_mod:is'␤in Main (file <unknown>, line <unknown>)␤»

[04:00] <quietfanatic> rakudo: sub prefix:<√> ($x) {sqrt $x}; say √2*4

[04:00] <p6eval> rakudo 74f561: OUTPUT«5.65685424949238␤»

[04:00] *** JimmyZ__ joined
[04:01] <quietfanatic> rakudo: sub prefix:<√> ($x) {sqrt $x}; say √8

[04:01] <p6eval> rakudo 74f561: OUTPUT«2.82842712474619␤»

[04:01] <quietfanatic> huh

[04:01] <quietfanatic> oh

[04:01] <quietfanatic> rakudo: sub prefix:<√> ($x) {sqrt $x}; say √16

[04:01] <p6eval> rakudo 74f561: OUTPUT«4␤»

[04:01] <quietfanatic> hum

[04:01] <Wolfman2000> ...what is the NL character?

[04:02] <quietfanatic> That's a newline

[04:02] <Wolfman2000> fanciest way I've ever seen a newline

[04:02] <quietfanatic> Unicode FTW

[04:02] <Wolfman2000> what character is it?

[04:02] <Wolfman2000> err, point I guess

[04:03] <quietfanatic> U+2424: ␤

[04:03] <Wolfman2000> I wonder if buu can put that into buubot

[04:04] <Wolfman2000> ENUMS!

[04:04] <Wolfman2000> True enums in Perl 6...oh man

[04:04] <Wolfman2000> so far, the main enums I've liked the best were Java's enums. They provided...more than the traditional enum

[04:04] <quietfanatic> They're not entirely perfect yet, but they're close

[04:05] <quietfanatic> Perl's enums will act like an int or a type

[04:05] <quietfanatic> For instance, Bool is an enum

[04:05] <Wolfman2000> True and False

[04:06] <Wolfman2000> ...wait, Perl now has True and False?

[04:06] <quietfanatic> enum Bool <False True>

[04:06] <Wolfman2000> Good grief, you're going to make me squee so much I may hurt myself.

[04:06] <quietfanatic> They're still 1 and 0, just enum'd

[04:06] <quietfanatic> IIRC

[04:07] <Wolfman2000> ...better than 0 and -1 at least

[04:07] <bpetering> i agree completely

[04:07] <quietfanatic> Yes; in Perl 5 I attach a ! to the beginning of every system() call

[04:08] <Wolfman2000> ...I meant -1 and 0

[04:08] <Wolfman2000> where -1 is true

[04:08] <quietfanatic> Well -1 is true...

[04:08] <quietfanatic> rakudo: if -1 {say "-1 is true"}

[04:08] <p6eval> rakudo 74f561: OUTPUT«-1 is true␤»

[04:08] <Wolfman2000> quietfanatic: I'm not questioning that

[04:09] <Wolfman2000> I just mean...1 and 0 are more universally known as true and false

[04:09] <Wolfman2000> versus -1 and 0

[04:09] <quietfanatic> of course

[04:09] <pmichaud> plumage's Configure.nqp should use  pir::load_bytecode(...)   instead of load_bytecode(...)

[04:09] <pmichaud> oops, wrong chan

[04:10] <Wolfman2000> ...can anyone perhaps tell me what a good revision of rakudo is for me to compile? I think the latest git/svn version is...not working for me.

[04:11] <Wolfman2000> ...wait. what version OF GCC do I have/

[04:11] <Wolfman2000> ?*

[04:11] <lambdabot> Maybe you meant: . ? @ v

[04:12] <Wolfman2000> ...doesn't seem like I have that bug

[04:12] * Wolfman2000 puts in the optimize fix...maybe that will do it

[04:13] <revdiablo> Wolfman2000: I would probably start with one of the monthly releases

[04:13] *** stephenlb left
[04:13] <Wolfman2000> revdiablo: If this doesn't work, I'll look into it

[04:14] <TimToady> if it's the thrashing problem, the monthly probably won't be any better

[04:14] <Wolfman2000> No clue if it's thrashing

[04:14] <Wolfman2000> that's the problem

[04:14] <revdiablo> Wolfman2000: Is it bailing with an error or simply taking longer than you expect?

[04:15] <Wolfman2000> latter

[04:15] <Wolfman2000> I force cancel it with C-c

[04:15] <TimToady> the core ops file is probably a huge switch statement

[04:16] <revdiablo> Wolfman2000: Wait it out and see if it finishes

[04:16] <Wolfman2000> this time, I intend to

[04:17] <revdiablo> Wow, the rakudo spectest progress graph looks pretty amazing these days

[04:17] <Wolfman2000> revdiablo: got a pic or link?

[04:17] *** envi^home joined
[04:17] <revdiablo> Wolfman2000: http://rakudo.org/status

[04:18] <revdiablo> I wonder if any of the tests I wrote for pugs are still in there. =)

[04:19] <Wolfman2000> alright...looks like I'm waiting 40 minutes before checking

[04:20] <Wolfman2000> Hmm...is there no color for tests that are expected to fail, but pass anyway?

[04:20] <revdiablo> Wolfman2000: btw, you can create another window in your screen session with C-a C, then bounce between them with C-a C-a

[04:20] <Wolfman2000> Next thing I need to learn about screen: how to keep my colors.

[04:20] <revdiablo> I mean C-a c

[04:21] *** JimmyZ left
[04:21] <Wolfman2000> revdiablo: C-a C-a seemed to work

[04:21] <Wolfman2000> ...oh, I see what you meant

[04:22] *** mepplock joined
[04:29] <Wolfman2000> TimToady: is it possible to make the core ops file...well, many smaller files?

[04:30] <Wolfman2000> or at least, is there some way to identify if my box is being thrashed?

[04:30] <Wolfman2000> I can take down my websites for a few hours if need be.

[04:32] <TimToady> you'd have to ask one of our other experts, like pmichaud++

[04:32] <pmichaud> Wolfman2000: it's taking forever to compile parrot ?

[04:32] <Wolfman2000> pmichaud: rakudo...which uses parrot, so yes

[04:33] <Wolfman2000> seriously, the two of you have good timing

[04:33] <TimToady> I paged him

[04:33] <TimToady> I think he's asking whether it's during the Configure --gen-parrot or during the make?

[04:34] <pmichaud> it's during the make

[04:34] <pmichaud> if it's core_ops

[04:34] <pmichaud> it's during parrot's make, sorry

[04:34] <pmichaud> you're right, it's during rakudo's Configure --gen-parrot

[04:34] <Wolfman2000> so it's both

[04:34] <pmichaud> what os, wolfman2000?

[04:34] <pmichaud> (hard for me to find details in the backscroll)

[04:34] <Wolfman2000> Ubuntu 8.04 I believe

[04:34] <Wolfman2000> could be 8.10

[04:34] <Wolfman2000> but not any higher than that

[04:34] <pmichaud> what processor?

[04:35] <pmichaud> 64-bit or 32-bit?

[04:35] <Wolfman2000> don't recall that one offhand

[04:35] <pmichaud> maybe "uname -a" will help

[04:35] <pmichaud> if it says x86_64, then 64bit

[04:35] <Wolfman2000> long as C-z works

[04:35] <pmichaud> if it says i386 or i686, then 32-bit

[04:36] <Wolfman2000> 64 bit

[04:36] * Wolfman2000 just made a new connection to his box

[04:36] <pmichaud> how much memory on the system?

[04:36] <Wolfman2000> 256MB

[04:36] <pmichaud> oh.

[04:36] <pmichaud> very likely that's not enough to build Parrot quickly

[04:37] <TimToady> that's small even for 32-bit compile

[04:37] <pmichaud> so I'm guessing thrashing

[04:37] <pmichaud> how much swap?

[04:37] <Wolfman2000> unless I want to take my websites down for a few hours, I know

[04:37] <Wolfman2000> double

[04:37] <pmichaud> yeah, definitely pretty small

[04:37] <pmichaud> just a sec, there's an option that might help

[04:37] *** meppl left
[04:37] *** petdance joined
[04:37] <Wolfman2000> hard to argue that for $20/month, even in this bad economy

[04:37] *** quietfanatic left
[04:38] <pmichaud> try running Rakudo's Configure.pl again as follows

[04:39] <pmichaud> perl Configure.pl --parrot-option='--cgoto=0' --gen-parrot

[04:39] <pmichaud> that will probably get you there.

[04:39] <Wolfman2000> considering I haven't read much about Configure.pl, I'm not exactly aware of what that option did

[04:39] <pmichaud> at least, it's much more likely.

[04:39] <Wolfman2000> at the very least, that new cgoto thing

[04:39] <pmichaud> that passes an option to Parrot's build system saying "don't compile the computed goto option", which is what is taking so long

[04:40] <pmichaud> from Parrot's Configure.pl:

[04:40] <pmichaud>    --cgoto=0            Don't build cgoto core - recommended when short of mem

[04:40] <Wolfman2000> ...why is there goto in Perl 6 anyway?

[04:40] <Wolfman2000> Or is this something I don't want to know?

[04:40] <pmichaud> it's not in Perl 6

[04:40] <TimToady> that's a C goto

[04:40] <pmichaud> it's in the Parrot VM, in C

[04:41] <TimToady> so yes, you don't want to know :)

[04:41] <pmichaud> even I don't want to know (and I don't, really :-)

[04:41] <TimToady> it only just occurred to me that _cg means "computed goto"

[04:42] <Wolfman2000> ...I wonder why I never learned of computed gotos in class

[04:44] <Wolfman2000> okay, on the first troubling file: core_ops_switch.c

[04:45] *** patspam joined
[04:45] *** patspam left
[04:46] <Wolfman2000> ...it's advanced quickly

[04:46] <Wolfman2000> or at least, quicker than before

[04:49] <Wolfman2000> now on core_ops_cg.c

[04:50] *** pnate joined
[04:51] *** quietfanatic joined
[04:52] *** xp_prg joined
[04:55] <Wolfman2000> ...I think this is the big switch statement area. I will look forward to when the src/ops/* files are split up

[04:55] <Wolfman2000> ...wait a second...

[04:57] <Wolfman2000> GAH, I can't scroll up fast enough to stop screen

[04:57] <Wolfman2000> pmichaud: I just tried starting it again. Configure.pl complained of the parrot-option thing

[04:57] <pmichaud> oh I had it wrong

[04:57] <pmichaud> sorry about that

[04:58] <pmichaud> perl Configure.pl --gen-parrot-option="--cgoto=0" --gen-parrot

[04:58] <pmichaud> my bad

[04:58] <pmichaud> (I forgot the --gen on --gen-parrot-option)

[04:59] <Wolfman2000> ...this is certainly an adventure

[04:59] <bpetering> Wolfman2000: on what scale are you talking?

[05:00] <Wolfman2000> been awhile since I felt I could...just chuckle at my poor attempts at compiling code

[05:00] <bpetering> ah :)

[05:02] <TimToady> we all chuckle at ourselves frequently here, so you fit right in :)

[05:02] <Wolfman2000> here we go...on src/ops/core_ops.c

[05:03] <Wolfman2000> relatively quick

[05:06] <Wolfman2000> and...the switch file is at it again. I think parrot hates me

[05:09] *** cdarroch left
[05:09] <Wolfman2000> ...the big problem with screen is that I can't easily scroll up. so I have no clue when my history goes out of whack

[05:11] * Wolfman2000 goes back to normal ssh mode to be sure he can copy and paste the output as required

[05:11] <Wolfman2000> ...good thing I can stay up for awhile tonight

[05:13] *** cotto joined
[05:23] <Wolfman2000> ...I think I'm seeing new files being compiled in now

[05:23] <Wolfman2000> compilers/imcc/imcparser.c <-- that's definitely new.

[05:24] <Wolfman2000> Perl6, I will compile you yet!

[05:25] *** mepplock is now known as meppl

[05:26] <Wolfman2000> TimToady, bpetering, pmichaud, et al: parrot made

[05:27] <bpetering> Wolfman2000: \o/

[05:34] *** sifusam left
[05:36] <Wolfman2000> ...at this point, I'm not going to be surprised if rakudo doesn't want to make now.

[05:45] <Wolfman2000> off to bed now. I can mess with this in the morning...and take down some of my websites if required.

[05:48] <bpetering> good night Wolfman2000 - again, all the best :)

[05:48] <pmichaud> once you get past the parrot build, things tend to work.

[05:48] <pmichaud> at least, until you get to the parts that don't.  =-)

[05:49] <carlin> rakudo: loop { my $a = 'OH HAI' };

[05:50] <p6eval> rakudo 74f561: TIMED_OUT

[05:51] <carlin> In 657d55cce1f1 that's fine - the process sits at ~50MiB. As of d4f03670df0af the process slowly consumes more and more memory.

[05:51] <carlin> (Couldn't test anything between there because it segfaults during build)

[05:52] *** pnate2 joined
[05:58] *** petdance left
[06:02] <carlin> so I think I'll roll back the rakudo on my server, which will hopefully stop my IRC bots from leaking memory

[06:02] *** zaslon left
[06:05] *** pnate left
[06:12] *** pnate joined
[06:13] *** pointme joined
[06:13] *** zaslon joined
[06:14] *** bpetering left
[06:16] *** envi^office left
[06:27] *** pnate2 left
[06:31] *** araujo joined
[06:34] *** justatheory left
[06:36] *** NorwayGeek joined
[06:37] *** pnate2 joined
[06:38] *** pnate2 left
[06:39] *** pnate left
[06:47] *** akl left
[06:51] *** hirschnase joined
[06:57] *** agentzh joined
[07:07] *** JimmyZ__ left
[07:08] *** NorwayGeek left
[07:12] *** viklund left
[07:24] *** pnate2 joined
[07:24] *** Su-Shee joined
[07:24] <Su-Shee> good morning.

[07:28] *** kidd` left
[07:31] *** justatheory joined
[07:33] *** hirschnase left
[07:34] *** NorwayGeek joined
[07:37] <moritz_> good morning

[07:38] <Su-Shee> of course you are awake. ;)

[07:41] *** justatheory left
[07:42] <pmichaud> good morning

[07:42] <pmichaud> and yes, it's morning here also :)

[07:42] <moritz_> Su-Shee: just got up ;-)

[07:44] <Su-Shee> pmichaud: welcome to the morning shift. ;)

[07:44] <moritz_> pmichaud: did you change time zone? ;-)

[07:44] <pmichaud> no

[07:45] <pmichaud> it's just that your morning is a lot later than my morning

[07:45] <pmichaud> or something like that

[07:45] <pmichaud> at any rate, locally right now the hour portion of the time is less than 12h, so that officially makes it morning, I think :)

[07:46] <moritz_> ;-)

[07:49] <spinclad> still erev, tho, i venture; not yet boqer

[07:52] * spinclad is an hour dawnward from pmichaud 

[08:05] *** TiMBuS left
[08:07] *** iblechbot joined
[08:14] *** mariuz joined
[08:14] *** ihrd1 joined
[08:19] *** TiMBuS joined
[08:20] *** hirschnase joined
[08:22] *** hirschnase left
[08:22] *** hirschnase joined
[08:27] *** abra joined
[08:37] *** abra left
[08:40] *** drry joined
[08:41] *** drry left
[08:42] *** ihrd1 left
[08:47] *** xenoterracide left
[08:47] *** IllvilJa left
[08:47] *** agentzh left
[08:48] *** jferrero joined
[08:49] *** xenoterracide joined
[08:50] *** xenoterracide left
[08:51] *** xenoterracide joined
[08:55] *** rfordinal joined
[08:55] *** xenoterracide left
[08:58] *** xenoterracide joined
[09:04] *** IllvilJa joined
[09:07] *** NorwayGeek left
[09:10] *** rfordinal left
[09:11] *** reid04 left
[09:12] *** reid04 joined
[09:12] <moritz_> pmichaud, [particle]: the rakudoconsulting website still links to parrotcode.org (and has one CSS validation error)

[09:16] <pmichaud> thanks

[09:16] <pmichaud> particle will need to fix it

[09:17] *** viklund joined
[09:17] *** NorwayGeek joined
[09:17] *** SmokeMachine left
[09:28] *** dakkar joined
[09:38] *** frodwith left
[09:47] *** frodwith joined
[09:48] *** rgrau joined
[10:06] *** frodwith left
[10:10] *** frodwith joined
[10:17] *** slavik1 joined
[10:28] *** khisanth_ joined
[10:28] *** khisanth_ left
[10:39] *** NorwayGeek left
[10:40] *** NorwayGeek joined
[10:52] *** SmokeMachine joined
[11:06] *** rfordinal joined
[11:10] *** rfordinal left
[11:13] *** broquaint joined
[11:18] <jnthn> yay snow! \o/

[11:26] <mathw> it's just grey and damp here

[11:26] <mathw> don't know why the cat was so keen to go outside this morning

[11:26] <mathw> he'll have already been rained on twice

[11:28] <Su-Shee> snow? I'm envious. 

[11:28] <mathw> better move to bratislava then

[11:28] <Su-Shee> around the corner anyway :)

[11:29] <jnthn> Yes, I suspect it's not all so far.

[11:29] * jnthn forgets which city Su-Shee is in

[11:29] <jnthn> mathw: It doesn't matter what the cat wants to do, just that the cat is Always Right. :-)

[11:29] <mathw> even when he changes his mind thirty seconds later

[11:30] <jnthn> Even then. :-)

[11:30] <jnthn> It's amazing what cuteness does for ones always-rightness.

[11:30] <mathw> yes and my cat is almost universally agreed to be utterly adorable

[11:31] <mathw> he even won over my Dad, who doesn't like cats

[11:31] <moritz_> so the perfect source for lolcat pics? :-)

[11:31] <mathw> class Cat does Infallible { ... }

[11:32] <mathw> http://www.flickr.com/photos/mattofwalton/sets/72157621820239428/ <- judge for yourself

[11:33] <jnthn> aww

[11:34] <mathw> That's what everyone says!

[11:34] <mathw> he's charmed the entire PLANET

[11:34] <mathw> even the vet thinks he's gorgeous

[11:35] <mathw> even there he won't stop trying to cuddle people - including the woman with the giant needle she's about to stick in him

[11:36] <moritz_> http://www.flickr.com/photos/mattofwalton/4062423212/in/set-72157621820239428/ <-- nice for illustrating laziness

[11:37] * jnthn is taken by the cuteness

[11:40] <mathw> My sister kept saying 'but he's so soft and cuddly!'

[11:40] <mathw> and then shrieking when he stuck his claws in somewhere sensitive

[11:41] <jnthn> lol!

[11:44] <mathw> I don't think she was quite prepared for him to jump into her lap and demand stroking

[11:44] <mathw> fortunately he had the sense not to try that with my parents

[12:11] *** envi^home left
[12:14] *** envi^home joined
[12:17] *** hanekomu joined
[12:20] *** astrojp left
[12:21] *** astrojp joined
[12:22] *** wolverian left
[12:23] *** wolverian joined
[12:39] *** masak joined
[12:39] <jnthn> lolitsmasak!

[12:39] <masak> good afternoon, #perl6.

[12:39] <jnthn> oh hai, masak

[12:40] <mberends> oh hai you both

[12:41] <masak> mberends! \o/

[12:42] <masak> mberends: I thought I'd make Tuesdays "Temporal Tuesday" during the November month.

[12:42] <mberends> hee

[12:42] <masak> it's not directly related to November, but it would definitely be good for Rakudo Star.

[12:43] *** NorwayGeek_ joined
[12:43] * jnthn is glad masak++ is making time for this

[12:43] <jnthn> *cough*

[12:44] <masak> ah. time jokes.

[12:44] <masak> been a long time since we did those.

[12:44] <jnthn> I'm sure I can come up with more in an instant.

[12:44] <jnthn> And sustain them for the duraction of your hacking.

[12:48] *** NorwayGeek left
[12:49] *** petdance joined
[12:50] *** iblechbot left
[12:51] *** NorwayGeek joined
[12:51] *** NorwayGeek_ left
[12:54] <masak> jnthn: :P

[12:59] <takadonet> morning all

[13:01] *** FCO joined
[13:03] <masak> takadonet: o/

[13:03] <takadonet> how are you doing masak?

[13:03] <masak> takadonet: I'm... well-rested today. that's good, I guess.

[13:04] <masak> it's perhaps indicative when I get to work and people say "Ah, masak! *there* you are!"

[13:04] <takadonet> hehe

[13:04] <masak> takadonet: how are you?

[13:06] <takadonet> masak: feeling sick again. Got a nice perl 'script' from another bioinformatics group that taken some time to figure how it works

[13:07] <masak> ok.

[13:07] <takadonet> I hate that half of the input file need to be in 'dos' format and other half in unix/linux!

[13:07] <takadonet> stupid carriage return and line feed....

[13:08] <masak> needs to be? why?

[13:08] *** frettled sets mode: +ooo masak mberends takadonet

[13:09] <frettled> good something :)

[13:09] <frettled> takadonet: my sympathies, btw.

[13:10] *** Patterner left
[13:11] <takadonet> Otherwise the 'parser' will fail to read the file and crash the problem. I do not want to change too much of the script since not sure if we are ending up using it or not. Depends how well it works

[13:13] <jnthn> heh, reminds me of a talk at the Italian Perl Workshop.

[13:13] <jnthn> Theme was essnentially, "The data is always shit!" :-)

[13:14] *** TiMBuS left
[13:14] *** Psyche^ joined
[13:14] *** SmokeMachine left
[13:15] *** Psyche^ is now known as Patterner

[13:15] <takadonet> you can NEVER trust data from users. 

[13:16] <jnthn> s/data from // # ;-)

[13:16] <cognominal> what am I doing wrong with the ng branch?  /Users/stef/git/rakudo-ng/parrot_install/bin/nqp --output=src/gen/signature_pm.pir --encoding=utf8 \

[13:16] <cognominal> 	    --target=pir src/Perl6/Compiler/Signature.pm

[13:16] <cognominal> make: /Users/stef/git/rakudo-ng/parrot_install/bin/nqp: No such file or directory

[13:17] <takadonet> hehe

[13:17] <jnthn> Failing to install nqp-rx, at first guess.

[13:17] <cognominal> probably something in my path

[13:17] <cognominal> *PATH

[13:17] *** NorwayGeek left
[13:19] *** tak11 left
[13:21] *** Psyche^ joined
[13:21] *** Patterner left
[13:21] *** Psyche^ is now known as Patterner

[13:25] *** wolverian left
[13:26] *** wolverian joined
[13:31] <masak> anyone here speaks Japanese? :)

[13:31] <Su-Shee> badly.

[13:31] <masak> sounds like this Twitterer is looking for information of some kind. http://twitter.com/__gfx__/status/5379551557

[13:31] <masak> something about 'strict constructors'?

[13:31] <Su-Shee> oh, you want japanese _read_ ... 

[13:32] <masak> ah, yes. sorry.

[13:32] <masak> anyone here reads Japanese? :)

[13:32] *** nbrown left
[13:33] *** colomon left
[13:36] <hanekomu> masak: a bit

[13:36] <hanekomu> what do you need?

[13:36] <hanekomu> ah

[13:36] <hanekomu> that link

[13:38] <hanekomu> can't find a description about Perl6's constructor re strict 

[13:38] *** petdance left
[13:38] <hanekomu> (not sure what "de aru koto ni tsuite" means - will look up the grammar

[13:38] <hanekomu> but ask in irc.freenode.net #soozy, where japanese perl hackers hang out

[13:40] <moritz_> tsuite = test suite?

[13:40] <hanekomu> no

[13:40] <hanekomu> ni tsuite = about, regarding

[13:40] <hanekomu> de aru koto = thing exists

[13:40] * moritz_ very bad at guessing

[13:40] <hanekomu> i'm asking on #soozy

[13:43] <hanekomu> kazuho on #soozy told me: "can't find description stating that constructors are strict in perl6"

[13:45] <jnthn> "strict"?

[13:45] <hanekomu> no idea, i just tried to translate the thing :)

[13:45] <jnthn> :-)

[13:45] *** colomon joined
[13:46] <hanekomu> ah, "X de aru koto" = "being X", as, so more literally it is "Perl 6's constructor being strict - I can't find a description about it."

[13:47] <moritz_> maybe related to http://www.cpanforum.com/posts/7293

[13:48] <moritz_> so if anybody cares to answers: it is an error to set a non-existing attribute in a constructor in Perl 6

[13:49] *** NorwayGeek joined
[13:49] <moritz_> I don't know if that qualifies as a "strict constructor"

[13:50] <mathw> Well it's some kind of strictness I suppose

[13:50] <mathw> does it count as an unknown named parameter i.e. ignored?

[13:51] <moritz_> well, there are two things you can wrong

[13:51] <moritz_> the first is calling it with wrong arguments

[13:51] <moritz_> that still fails silently in Perl 6

[13:51] <hanekomu> afterwards, gfx tweets http://twitter.com/__gfx__/status/5379559571

[13:51] <moritz_> the second is mis-spelling an attribute in a constructor

[13:51] <moritz_> that one is caught by Perl 6

[13:52] <mathw> umm

[13:52] <mathw> how is that different to wrong arguments?

[13:52] <hanekomu> something like "strict constructors strike me as being fairly high-speed. Before long I intend to implement it in Mouse"

[13:52] <hanekomu> (if i'm not too mistaken)

[13:52] <moritz_> mathw: making the error in the class itself vs. on the caller side

[13:55] *** colomon left
[13:55] * mathw doesn't follow

[13:57] <moritz_> mathw: the main difference is that in Perl 6 you have a default constructor

[13:57] <masak> I replied to __gfx__. http://twitter.com/carlmasak/status/5391649893

[13:57] <moritz_> mathw: if you have a class A { has $!quuox }; and call A.new(quuuuox => 3), this is silently ignored

[13:57] <masak> argh, meant 'non-existent argument'.

[13:58] <moritz_> mathw: however if you write a custom constructor in which you try to assign to $!quuuuox, you'll get an error

[13:58] <masak> moritz_: oh. then my reply to ___gfx__ was wrong, I guess.

[13:59] *** patspam joined
[13:59] <mathw> moritz_: okay, yes of course. I thought that was so obvious that you were talking about something else :)

[13:59] <moritz_> masak: just point him to our IRC discussion in the logs

[13:59] <masak> moritz_: nod.

[13:59] <moritz_> it's not something that fits in 140chars if you're new to the subject

[14:00] <masak> he doesn't seem to be, though. :)

[14:00] *** ejs joined
[14:08] <masak> Wolfman2000: greetings! not sure if you're awake now, but I'm currently catching up on your backlog trails. it's cool that you're showing an interest in Web.pm.

[14:08] <Wolfman2000> *yawn* morning

[14:08] <masak> Wolfman2000: I'm sure we can think of a way for you to help the project along. :)

[14:09] <Wolfman2000> masak: The website in question shouldn't involve...too much work. It's just slightly horribly outdated in terms of content though.

[14:09] <masak> which website?

[14:09] <Wolfman2000> www.jasonfelds.com <-- that's the Catalyst page. View it quickly: I may be tempted to bring it down so I can actually get rakudo to build

[14:09] * masak views it quickly

[14:10] <masak> 'is For Sale' is all I get.

[14:10] <Wolfman2000> ...for...sale?

[14:10] <Wolfman2000> that's a new one

[14:10] <masak> oh, sorry. 'felds', not 'fields'.

[14:11] <masak> trying again.

[14:11] *** Psyche^ joined
[14:11] <masak> ah. here we go.

[14:11] <Wolfman2000> tested another page of mine that's not on catalyst: the pages load right now

[14:13] <masak> Wolfman2000: you know, I'm looking at your cretentials and thinking that you'll fit right in here. welcome aboard! :)

[14:13] <Wolfman2000> My resume is more updated...on my mobile page actually

[14:13] <Wolfman2000> www.jasonfelds.mobi

[14:13] <Wolfman2000> not on Catalyst, but it works on cell phones

[14:14] <masak> why two different URLs?

[14:14] *** iblechbot joined
[14:14] <Wolfman2000> masak: fair question. mobi is for those on mobile devices: com is for everyone else.

[14:14] <Wolfman2000> not all phones can do com

[14:14] <Wolfman2000> mobi is specifically meant for mobile devices. Not just the iphones, but the other ones

[14:14] <masak> hm.

[14:15] <Wolfman2000> This is more of my web development background coming in

[14:15] <masak> nod.

[14:15] <sbp> I worked on CC/PP for a bit, which was supposed to make this redundant

[14:15] <sbp> man did THAT fail...

[14:16] <masak> Wolfman2000: I greatly prefer the style sheet on your .mobi site, for what it's worth. :)

[14:16] <Wolfman2000> masak: That stylesheet was copied from another stylesheet without me really thinking about it

[14:16] <Wolfman2000> The desktop part is a slight rush job admittedly

[14:18] <masak> Wolfman2000: there's two of us (me and Tene) who are currently finishing up our Web.pm grant. it involves providing basic tools in Web.pm for building web applications.

[14:18] <masak> Wolfman2000: after that, I imagine we'll be focusing on a Catalyst-like framework.

[14:18] <Wolfman2000> how much is Web.pm usuable in its current state?

[14:19] <masak> Wolfman2000: it runs. let me dig out a link for you to make it concrete.

[14:19] <masak> Wolfman2000: http://github.com/masak/druid/blob/master/lib/Druid/Webapp.pm

[14:20] <masak> that's about the state of the art right now.

[14:20] <masak> what you see on that page is quite a small program which, when run, acts as a web application.

[14:20] *** colomon joined
[14:21] <Wolfman2000> Something about moving others around a simple board.

[14:21] <Wolfman2000> If it helps, my .com is...nowhere near that complicated.

[14:21] <masak> apart from that, there are other interesting tools on the way. database layer, html templates, and simple dispatching.

[14:21] <Wolfman2000> As long as I can figure out Routes.pm, I think I will have a lot covered.

[14:22] <masak> Routes.pm in the Web.pm project?

[14:22] <Wolfman2000> yeah

[14:22] <Wolfman2000> That's the only heavy thing I'm using.

[14:22] <masak> hm, haven't looked at that one in a while.

[14:22] <Wolfman2000> I like /resume versus /resume.html

[14:22] <masak> ihrd++ wrote Routes.pm. he has prior experience with Rails.

[14:22] <masak> maybe Catalyst too. I don't remember.

[14:23] <masak> but he couldn't continue on the project, due to the deteriorating global economy. :/

[14:23] <PerlJam> greeble

[14:24] <Wolfman2000> ...if it helps, Catalyst probably has a working implementation of Routes

[14:24] <Wolfman2000> so you could just borrow that code

[14:24] <masak> aye.

[14:24] <masak> I plan to be inspired by Catalyst a great deal.

[14:24] *** Patterner left
[14:24] *** Psyche^ is now known as Patterner

[14:24] <masak> I've bought the book.

[14:25] <masak> and I have good relations with people working on Catalyst.

[14:25] <PerlJam> Catalyst++

[14:25] <moritz_> I just think it takes too long to figure things out in catalyst

[14:25] <masak> I'm also looking at a number of other frameworks, to widen my perspective.

[14:25] <moritz_> getting started is non-trivial

[14:25] <masak> moritz_: nod.

[14:25] <masak> I want simplicity.

[14:25] <masak> I think Jifty does a better job there.

[14:28] <Wolfman2000> masak: in about...10 minuts, I'm going to pull some of my sites down to try to get the memory I require to compile rakudo properly

[14:28] <PerlJam> masak: you want the python to our perl?  (Catalyst is "optimized" for customizability everywhere where as something like Jifty (or Rails) are optimized to getting things going quickly.  This seems very much like python and perl)

[14:29] <masak> PerlJam: I want simplicity for small things and customizability for big things.

[14:29] <PerlJam> (easy things easy, hard things possible)++

[14:30] <masak> PerlJam: that may mean two different frameworks, but I'm hoping it means one, where the defaults are tailored towards getting started easily.

[14:30] <masak> PerlJam: I'm facing the same sorts of issues with Web.pm in general.

[14:30] <Wolfman2000> I think Catalyst was meant to be one framework for all

[14:30] <masak> oh, for sure.

[14:30] <mathw> Catalyst does make easy things fairly easy, I thought

[14:30] <mathw> I played with it for a while

[14:32] <PerlJam> mathx: Rails' opinionated software gets you going quicker than Catalyst (at the expense of some customizability and some other design tradeoffs)

[14:32] <PerlJam> er, mathw

[14:32] <mathw> yes

[14:32] <mathw> I played with Rails too

[14:32] <mathw> I discovered that you can write a blog engine in 15 minutes

[14:32] <mathw> But anything else will drive you insane

[14:32] <masak> :)

[14:33] <masak> I don't want that.

[14:33] <PerlJam> mathw: anything significantly more complex you mean

[14:33] <PerlJam> If you have need of simple database driven sites with small relationships between the tables, rails and jifty are perfect and simple

[14:34] <jnthn> A lot of the time, that's enough, though.

[14:34] <Wolfman2000> My problem with a lot of blog packages...and many other packages in general...

[14:34] <PerlJam> jnthn: yep, that's why the rails hype machine was able to take off.

[14:34] <Wolfman2000> I prefer Postgresql over MySQL. Not all of them support the good features of PG

[14:34] <jnthn> The things that put me off e.g. Jifty are its dependencies and that it's too magical.

[14:35] <jnthn> I don't *want* magic I can't understand.

[14:35] <jnthn> Or that takes me weeks to grok.

[14:36] <PerlJam> jnthn: Hmm.  s/jnthn/random perl user/  and s/Jifty/Perl 6 OOP/ and that might be a problem for Perl 6 too  ;)

[14:36] <jnthn> Perl 6 OOP has magic?

[14:36] <moritz_> I think the basics are rather easy to grok

[14:36] <PerlJam> jnthn: magic that might take people weeks to grok

[14:36] <Wolfman2000> I think Perl has more magic than we want to believe

[14:37] <moritz_> Wolfman2000: it has, but we try very hard to hide it :-)

[14:37] <jnthn> It's got a bunch of sugar, but I'm not convinced the underlying model is all that bad. :-)

[14:38] <Wolfman2000> alright...time to see if I can take websites down properly (and hope my new 50x webpage shows)

[14:38] *** KyleHa joined
[14:38] <Wolfman2000> ...nope. wrong file

[14:39] <Wolfman2000> gah, what's the unix way of searching a file for a specific phrase again?

[14:39] <moritz_> grep word $file

[14:39] <Wolfman2000> moritz_: and if you don't recall the file the phrase is in?

[14:39] <moritz_> Wolfman2000: rgrep word $dir

[14:39] <moritz_> or rgrep -r word $dir

[14:39] <PerlJam> I think you all mean "ack"  :)

[14:40] <mathw> find $dir | xargs grep word 

[14:40] <moritz_> or if you're a perl hacker you install 'ack' from CPAN and use that instead :-)

[14:40] <Wolfman2000> I need to see which file contains the phrase "502 Bad Gateway"

[14:40] <Wolfman2000> I don't recall if I have ack from cpan installed on here

[14:41] <moritz_> /usr/share/apache2/error/HTTP_BAD_GATEWAY.html.var

[14:41] <moritz_> on my debian box

[14:41] <Wolfman2000> moritz_: nginx

[14:42] *** ejs left
[14:49] <Wolfman2000> okay, pages are down, decent looking placeholder up.

[14:49] <Wolfman2000> Parrot, Rakudo...you're mine

[14:50] <moritz_> all ur birds r belong 2 us!

[14:50] <Wolfman2000> lots of memory and swap free. Let's do this

[14:51] <masak> \o/

[14:51] <PerlJam> Wolfman2000: Are you really on a system that is t hat starved for resources?

[14:51] <Wolfman2000> PerlJam: Virtual Private Server, 256 MB

[14:52] <PerlJam> ah.

[14:52] <PerlJam> good luck!

[14:52] <Wolfman2000> I used perl Configure.pl --gen-parrot-option="--cgoto=0" --gen-parrot to configure it. The computed gotos was part of the problem

[14:52] <Wolfman2000> now...it's just the slow waiting for something to happen

[14:53] <Wolfman2000> I'll assume that once Rakudo is up, I can put my websites back online without a problem

[14:53] *** envi^home left
[14:54] *** kidd` joined
[14:55] <masak> Wolfman2000: I'd assume that, too.

[14:55] <[particle]> until you try and run rakudo...

[14:56] * moritz_ sends Wolfman2000 a spare 1GB ram module

[14:56] <[particle]> then you might have problems, depending on your source.

[14:56] <Wolfman2000> moritz_: money would help more

[14:56] <Wolfman2000> [particle]: rakudo shouldn't require that much resources to run a simple website. at least...no more than double what Catalyst did

[14:56] <moritz_> Wolfman2000: I haven't yet met anybody with spare money :-)

[14:57] <moritz_> in terms of resource usage we're Less Than Awesome, I fear

[14:57] <Wolfman2000> How Less Than Awesome?

[14:58] <moritz_> 2 to 3 orders of magnitude in terms of run time

[14:59] <Wolfman2000> compared to Perl 5?

[14:59] <moritz_> yes

[14:59] <moritz_> at least last I measured

[14:59] <moritz_> since then run time improved, parsing got slower

[14:59] <Wolfman2000> If I remember my fuzzy math on that correctly...

[14:59] <Wolfman2000> If Perl 5 runs in 2 cycles, you're saying Perl 6 runs in 200 - 2000 cycles?

[15:00] <moritz_> yes

[15:00] <pmichaud> good morning, #perl6

[15:00] <moritz_> good second morning pmichaud :-)

[15:00] <mathw> oh hai pmichaud

[15:00] <Wolfman2000> ...the things I'm doing to help test an up and coming language

[15:01] <jnthn> good less-likable part of the morning pmichaud :-)

[15:01] <mathw> we've all done similar stuff

[15:01] <jnthn> the early hours of the mroning are SO nicer :-)

[15:01] <mathw> just remember, it's got to work right before it's really worth trying to make it go fast

[15:01] <Wolfman2000> Well, if anyone is willing to contribute to the "Help Wolfman get Perl 6 running while not breaking his other stuff by upgrading his virtual server" fund, donations are accepted.

[15:01] <Wolfman2000> mathw: Of course.

[15:02] <moritz_> Wolfman2000: I can give you access to a server

[15:02] <moritz_> Wolfman2000: where you can host your Perl 6 things

[15:02] <moritz_> (for free)

[15:02] <Wolfman2000> The Perl 6 stuff isn't ready yet. I was hoping to experiment on my own server. Still...this offer is tempting

[15:03] <moritz_> and that one builds parrot in less than two minutes, if properly parallelized :-)

[15:03] <masak> mornin', pmichaud++.

[15:03] <Wolfman2000> /home/wolfman2000/repos/rakudo/parrot_install/bin/parrot  perl6_s1.pbc --target=pir src/gen_setting.pm > src/gen_setting.pir  <-- this seems to be the trouble file on the normal make process BTW

[15:04] <Wolfman2000> I'm guessing this one is also one big switch statement?

[15:04] <moritz_> yes, that's the slowest step

[15:04] <mathw> Wolfman2000: It's the entire setting, in one file

[15:04] <moritz_> it's the builtins that are written in Perl 6

[15:04] <mathw> so it's quite big

[15:04] <moritz_> I worked on splitting the compilation up

[15:04] <moritz_> but it was blocking on other things

[15:04] <mathw> stubbed functions and classes wasn't it?

[15:04] <masak> Wolfman2000: apart from the server moritz_ is offering you, there's also feather.

[15:05] <moritz_> stubbed types, yes

[15:06] <Wolfman2000> Alright, I see what feather is about

[15:06] <Wolfman2000> moritz_: any fancy or simple web page to make your cause?

[15:06] <moritz_> http://feather.perl6.nl/

[15:06] * cognominal reads Test.pm. The is "export(:Default)" for each sub  is visual noise. Is it possible to declare default properties once to avoid these nasty repetitions?

[15:06] <moritz_> Wolfman2000: make what cause?

[15:06] <moritz_> cognominal: actually 'is export' is enough

[15:07] <Wolfman2000> http://www.perlfoundation.org/perl6/index.cgi?feather  This is the...declaration, for lack of a better word. It encourages people to host Perl 6 stuff, as long as they give back.

[15:07] <Wolfman2000> I don't know how much I can give back honestly

[15:07] <moritz_> Wolfman2000: don't worry about that

[15:07] <masak> Wolfman2000: what moritz_ said.

[15:07] <Wolfman2000> Especially since I'm in the process of changing career paths at thie moment

[15:07] <Wolfman2000> Trying to become a high school math/programming teacher

[15:07] <moritz_> Wolfman2000: if you tell masak "Web.pm is nice but $feature is a bit rough" you already gave back

[15:07] <masak> Wolfman2000: I don't know if it shows, but we like you already. we plan to keep you. :)

[15:08] <Wolfman2000> As long as I'm able to make a career in doing what I need to do to put food on my table, fair enough.

[15:08] <masak> Wolfman2000: if you don't have the tuits, that's fine. but it's often surprising how tuits keep showing up.

[15:08] *** Exodist left
[15:08] <moritz_> having a constant influx of newbies who are willing to talk to us is very helpful, so that we can see what the entry hurdles are

[15:09] <moritz_> and how they change over time

[15:09] <masak> nod.

[15:09] *** NorwayGeek left
[15:09] <Wolfman2000> The tuits? Sorry, that term is unfamiliar

[15:09] <moritz_> time units

[15:09] <moritz_> "I can't get around_to_it"

[15:10] <Wolfman2000> I've gained time units for this week, so I'm able to pull off something.

[15:10] <moritz_> short tuit

[15:10] <Wolfman2000> ...if this big file doesn't compile itself by the time The Price Is Right ends, I may have to look into that server of yours.

[15:10] <masak> Wolfman2000: this is a tuit economy.

[15:10] <Wolfman2000> Since my website is down, and therefore my resume...who needs my email?

[15:10] <Wolfman2000> or even...gulp...my Facebook?

[15:14] * moritz_ either reads faces or books, but not both at the same time

[15:15] <moritz_> Wolfman2000: http://www.mail-archive.com/perl6-language@perl.org/msg20060.html for getting a feather account

[15:15] <Wolfman2000> moritz_: I'm torn between feather and yours

[15:15] <moritz_> if you want an account on my machine, just /msg me your desired username

[15:16] *** NorwayGeek joined
[15:16] <moritz_> feather is a bit more reliable, but also a bit slower and more crowded

[15:16] <masak> crowded in a good way. :)

[15:16] *** NorwayGeek left
[15:16] <moritz_> you can also use both, of course :-)

[15:17] <Wolfman2000> I only plan on having one website use Perl 6, not two

[15:21] <masak> Wolfman2000: oh, so you actually plan to set up a website with Perl 6? then our paths will surely cross again soon. :)

[15:22] <masak> Wolfman2000: what kind of website?

[15:22] <Wolfman2000> I want to turn my Catalyst website (simple resume + bonus stuff site) into Perl 6

[15:22] <Wolfman2000> it's right now down so I can attempt to compile Rakudo

[15:22] <Wolfman2000> ...attempt and fail at this point it seems

[15:23] <masak> Wolfman2000: seems to me those pages are fairly static.

[15:23] <masak> Wolfman2000: i.e. you could generate the HTML pages once (using Perl 6 if you want), and then just serve them staticly.

[15:23] <Wolfman2000> They use routes, a common header with browser detection, and a common footer. They were written with clean HTML, CSS, JS

[15:24] <masak> ah, so basically HTML templates, then.

[15:24] <Wolfman2000> Not much more than that, no.

[15:24] <Wolfman2000> My main website doesn't use postgresql

[15:24] <masak> you could take a look at Hitomi.

[15:24] <masak> it's a Perl 6 fork of a Python-based HTML templater.

[15:25] <masak> it works already, but it's not very well-tested.

[15:25] <masak> I'd love it if someone gave it a go.

[15:25] <Wolfman2000> If I can find the webpage for hitomi, that would be useful.

[15:25] <Wolfman2000> Hopefully it works with 楽度

[15:26] <Wolfman2000> (yeah, felt like typing rakudo in kanji)

[15:26] <masak> :)

[15:26] <masak> it works only on 楽度 as far as I know.

[15:26] <masak> hold on, I'll get you an URL.

[15:27] <masak> or two.

[15:27] <Wolfman2000> I don't even know what rakudo means properly

[15:27] <masak> "happy earth". "paradise".

[15:28] <TimToady> that's the wrong "do"

[15:29] *** Psyche^ joined
[15:30] <TimToady> that would be happy degree

[15:30] <Su-Shee> I thought, there's more than one do to do it? ;) *scr* 

[15:30] <masak> TimToady: oh, you're right.

[15:30] *** Patterner left
[15:30] *** Psyche^ is now known as Patterner

[15:31] <TimToady> I'm always right, except when I'm not (yet).

[15:31] <masak> Wolfman2000: http://github.com/masak/web/blob/master/drafts/hitomi-example.xml http://use.perl.org/~masak/journal/39137 http://use.perl.org/~masak/journal/39351 http://github.com/masak/web/raw/master/talks/yapc-eu-2009/talk.pdf

[15:32] <Wolfman2000> huh? there's a pl namespace?

[15:32] <masak> Wolfman2000: there is now. :)

[15:32] <masak> TimToady: you're right to a happy degree, perhaps. :P

[15:32] <Wolfman2000> Will that page work if sent with the text/html mime type, or does it have to be application/xhtml+xml?

[15:33] <Wolfman2000> Still...I think I like what I'm seeing with that first link

[15:33] <TimToady> afk & # ~2hr

[15:33] * Wolfman2000 goes to check the others

[15:34] <masak> Wolfman2000: all the transforming is done server-side, if that answers your question.

[15:34] *** dj_goku left
[15:34] <masak> Wolfman2000: you can output HTML.

[15:34] <Wolfman2000> masak: that does answer

[15:35] <Wolfman2000> also, I added myself to the github thing if it makes it easier to reach me

[15:35] <masak> Wolfman2000: it does. what's the nick?

[15:35] <Wolfman2000> <--

[15:35] <masak> good.

[15:35] *** justatheory joined
[15:35] <masak> hugme: add Wolfman2000 to proto

[15:35] <Wolfman2000> well, lower case w, but...still

[15:35] <hugme> masak: github reported success, but it didn't work anyway - WTF?

[15:35] <masak> ah.

[15:35] <masak> hugme: add wolfman2000 to proto

[15:35] * hugme hugs wolfman2000. Welcome to proto!

[15:36] <masak> hugme: add wolfman2000 to web

[15:36] <hugme> masak: sorry, I don't know anything about project 'web'

[15:36] <masak> huh.

[15:36] <Wolfman2000> add wolfman2000 to Web.pm

[15:36] <Wolfman2000> hugme: add wolfman2000 to Web.pm

[15:36] <hugme> Wolfman2000: sorry, I don't know anything about project 'Web.pm'

[15:36] * masak does it manually

[15:36] <Wolfman2000> ...I'll bite

[15:36] <Wolfman2000> hugme: help

[15:36] <hugme> Wolfman2000: (add $who to $project | list projects | show $project | hug $nickname)

[15:36] <jnthn> hugme++ # error has WTF

[15:36] <Wolfman2000> hugme: list projects

[15:36] <hugme> Wolfman2000: I know about book, json, november, nqp-rx, perl6-examples, proto, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte

[15:37] <jnthn> ah, it doesn't know about web.

[15:37] <masak> fortunately, I do.

[15:37] <moritz_> didn't it say that in the first place? :-)

[15:37] <moritz_> masak: I can add it, if you want

[15:37] * masak hugs Wolfman2000. Welcome to Web.pm!

[15:37] <Wolfman2000> At least I confirmed it with help

[15:37] <masak> moritz_: please do. :)

[15:38] *** nihiliad joined
[15:38] <jnthn> Add lolsql! Add lolsql! ;-)

[15:38] <jnthn> akshually don't...

[15:38] <Wolfman2000> I've heard of sql, mysql, and postgresql

[15:38] <Wolfman2000> what's lolsql?

[15:39] <jnthn> Wolfman2000: Erm. A couple of people being silly. :-)

[15:39] <masak> Wolfman2000: http://www.aaronbassett.com/2009/i-can-haz-lolsql/

[15:39] * mathw was tempted to write a LOLSQL parser

[15:39] <jnthn> mathw: http://github.com/jnthn/lolsql

[15:39] <jnthn> mathw: join the fun!

[15:39] <Wolfman2000> ...no thanks

[15:40] <jnthn> :-)

[15:40] <jnthn> Wolfman2000: It mostly serves as a small example of Perl 6 grammars.

[15:41] <jnthn> Or at least, that's why I wrote the thing...

[15:41] <Wolfman2000> Lots of the pages you provided, masak, mention what's going on with Web.pm and Hitomi. I'm guessing there aren't a lot of example pages out there...live. That are easily viewable.

[15:41] <masak> Wolfman2000: no. none.

[15:41] <masak> Wolfman2000: it's very much an ongoing thing.

[15:42] <masak> Wolfman2000: I had a Web.pm app online for a few minutes last week.

[15:42] <masak> it kept segfaulting, though.

[15:42] <Wolfman2000> ah

[15:42] <Wolfman2000> so I shouldn't just flat out move my page and abandon the old one

[15:42] <masak> no.

[15:44] <Wolfman2000> ...still, nothing wrong with a Perl 6 mirror I guess.

[15:45] *** dj_goku joined
[15:45] <Wolfman2000> Especially since gen_setting.pm is STILL not done with its work

[15:45] <Wolfman2000> ...I said I'd give it until noon EST

[15:45] <Wolfman2000> Hopefully my patience won't snap until then.

[15:47] <masak> Wolfman2000: if you get yourself a feather account, you can compile Rakudo in your homedir. it's definitely faster than that.

[15:49] <Wolfman2000> ...I am starting to think my slice is incapable of it

[15:49] <Wolfman2000> So I have two options. feather and moritz_

[15:49] <Wolfman2000> More community support, more obligations with feather

[15:49] <masak> don't think of it as obligations.

[15:49] <Wolfman2000> faster speed, fewer tech support with moritz_

[15:50] <masak> Wolfman2000: I'm on feather. I even have a home page :) http://feather.perl6.nl/~masak/

[15:51] <Wolfman2000> ...oh yeah. The other thing I forgot about shared web hosting

[15:51] <Wolfman2000> I have to get used to lack of server control

[15:51] <moritz_> I can give you a virtual host with AllowOverride All if that helps :-)

[15:52] <Wolfman2000> moritz_: I shouldn't need that much control.

[15:52] <Wolfman2000> If I'm writing in Perl, I can set up browser overrides anyway.

[15:52] <Wolfman2000> Either way, it will feel...different for me to go from having all control to not much.

[15:54] <PerlJam> Wolfman2000: nearlyfreespeech.net

[15:54] <Wolfman2000> PerlJam: already have stuff in other languages besides PHP and Perl. Also have Python

[15:55] <Wolfman2000> I don't want to rewrite all of them

[15:55] <Wolfman2000> Plus, they all use Postgresql

[15:55] <Wolfman2000> thanks anyway

[15:55] <moritz_> moritz@ds80-237-201-115:~/rakudo$ time ( perl Configure.pl --gen-parrot && make -j 4  )

[15:55] <moritz_> ...

[15:55] <moritz_> real    5m2.716s

[15:55] <moritz_> that's a full rakudo rebuild after git clean -xdf :-)

[15:56] <moritz_> much faster if you can parallelize the parrot build

[15:56] <Wolfman2000> I should have 2 cores at least

[15:56] <Wolfman2000> Either way...it's all on that big file

[15:57] <moritz_> yes, that's the largest bottleneck

[16:00] *** vmbrasseur joined
[16:00] *** hcchien joined
[16:10] *** hicx174 joined
[16:14] *** hicx174 left
[16:17] <Juerd> Wolfman2000: feather accounts come without obligations

[16:17] <Wolfman2000> Modules and programs written in Perl 6 can also have their home on feather, if their authors work with the Perl 6 community to report and resolve bugs.

[16:17] <Wolfman2000> That's the obligation I'm seeing.

[16:18] <Wolfman2000> ...wait, I'm doing that already anyway

[16:19] <Juerd> That's everyone's default mode of operation, isn't it?

[16:19] <masak> exactly.

[16:19] <Wolfman2000> Alright, point

[16:19] <masak> Wolfman2000: there's no need to go looking for obligations.

[16:19] <masak> they will find you. :)

[16:19] <Juerd> hehe

[16:20] <Wolfman2000> Jason Felds. [email@hidden.address] I hope to eventually bring one of my websites to Perl 6...that, and I have some personal redemption to take care of. Even my little bits of help will go to that goal.

[16:20] <Juerd> If that doesn't encourage you, nothing can ;)

[16:20] <Wolfman2000> I believe that's the information you require.

[16:21] <Juerd> Wolfman2000: mail it please

[16:21] <Juerd> include preferred login nawe

[16:21] <Juerd> name

[16:21] <moritz_> that way it gets into Juerd's all-encompassing ticket system :-)

[16:21] <Juerd> haha

[16:21] <Wolfman2000> I would need to know your email. All the page says is to request an account by e-mail to Juerd. Don't see an email address.

[16:21] *** envi^home joined
[16:21] <Juerd> unread=todo

[16:22] *** nbrown04 joined
[16:22] <Juerd> That's the system

[16:23] <Juerd> Wolfman2000: that's the captcha/turing test of feather

[16:23] <Wolfman2000> Juerd: sorry, didn't fully understand that.

[16:24] <Wolfman2000> I'll just register myself to the perl foundation first

[16:24] <moritz_> Wolfman2000: you know Juerd's nickname. You know a host he owns. Try to combine that to an email address

[16:24] *** am0c joined
[16:24] <Wolfman2000> ...oh

[16:25] <Juerd> see it as a minor challenge, to find my mail address, to prove your worthiness ;) 

[16:25] <Juerd> actually feather email is probably broken

[16:26] <Juerd> so try juerd.nl :)

[16:26] <Wolfman2000> well, I just sent an email to what I think is your address

[16:27] *** nbrown04 left
[16:27] <Wolfman2000> ...and I failed

[16:27] <sbp> wow, esperanto

[16:27] <Wolfman2000> It's not [email@hidden.address]
[16:27] <moritz_> Wolfman2000: $nickname at $nickname.nl

[16:28] <Wolfman2000> Trying again

[16:28] *** zaphar_ps left
[16:28] <Wolfman2000> I never remember if email addresses are case sensitive or not

[16:28] <Juerd> they're not

[16:29] <Wolfman2000> ...no mail delivery failure message yet

[16:29] <Wolfman2000> I think I did it right

[16:29] <sbp> phenny: "Maar ik hoor 'm wel liever dan m'n officiële naam, die ik nauwelijks nog gebruik."?

[16:29] <phenny> sbp: "But I hear him do better than my official name, which I hardly use." (nl to en, translate.google.com)

[16:29] <Juerd> yay!

[16:30] <Wolfman2000> looks like you got it then

[16:30] <Juerd> that's not esperanto

[16:30] <Juerd> Wolfman2000: let's see

[16:31] *** NorwayGeek joined
[16:31] *** nbrown04 joined
[16:31] *** nbrown04 left
[16:31] <Juerd> working on my mobile phone so everything is slow

[16:32] *** nbrown04 joined
[16:32] *** nbrown04 left
[16:32] <Wolfman2000> long as the email got there, then I ddi what I was supposed to

[16:32] <masak> phenny: "Sed mi aŭdas ke li fartas pli bone ol mia oficiala nomo, kiun mi apenaŭ uzas."?

[16:32] <phenny> masak: The eo to en translation failed, sorry!

[16:32] <masak> phenny: at least you tried. :)

[16:36] *** envi^home left
[16:38] <Wolfman2000> alright, I'm in feather.

[16:38] <Juerd> ssh on a phone keyboard sucks but i created Wolfman2000 an account

[16:38] <jnthn> masak: What language? :-)

[16:38] <Wolfman2000> I just got in with the first name you gave me

[16:39] <masak> jnthn: Esperanto.

[16:39] <jnthn> masak: Ah, ok.

[16:39] <masak> jnthn: I'm surprised phenny detected even that.

[16:39] <jnthn> Shoulda guessed. :-)

[16:39] <masak> didn't expect her to succeed in translating it.

[16:40] <Wolfman2000> ...I don't think feather likes me trying to do unicode on nano

[16:40] <Wolfman2000> I wanted to put in the square root symbol in for prefix testing

[16:41] <Juerd> welcome on board, Wolfman2000++

[16:41] <Wolfman2000> √ <-- when I try to put that in, it prints as ?^?^?

[16:41] <Juerd> Wolfman2000: set LANG

[16:41] <Juerd> ie your locale

[16:41] <Wolfman2000> right...how do I set that permamently again? I think I need to set it to en.utf8 or something like that

[16:42] <Juerd> eg en_US.UTF-8

[16:43] <Wolfman2000> put LANG in my profile, source'd it, nano still hates me

[16:43] <masak> export LANG

[16:43] <Wolfman2000> ...right, forgot that step

[16:43] <Juerd> echo export LANG=en_US.UTF-8>>$HOME/.bashrc

[16:44] <Juerd> found a limitation of this on screen touch keyboard: no tilde

[16:45] <Su-Shee> not LANG. you need LC_CTYPE. 

[16:45] <Juerd> ~~~~~~ oh there it is

[16:45] <Wolfman2000> Seems like I need a lot

[16:45] <Juerd> Su-Shee: LANG suffices

[16:46] <Wolfman2000> LANG is not sufficing for me

[16:46] *** carlin_ joined
[16:46] *** carlin_ left
[16:46] <Juerd> Wolfman2000: run .bashrc after adding to it

[16:46] <Su-Shee> Juerd: LANG sets only messages and menus and stuff like that on my system. CTYPE is what I need and if I want sorting, I need COLLATE

[16:46] *** abra joined
[16:47] <Wolfman2000> Juerd: permission denied

[16:47] <Juerd> Su-Shee: current objective is getting utf8 support. LANG fixes that

[16:48] <Juerd> Wolfman2000: . .bashrc

[16:48] <Wolfman2000> I know that

[16:48] <Wolfman2000> I was told permission denied

[16:48] <Juerd> not ./

[16:48] <Wolfman2000> ...oh

[16:48] <Wolfman2000> huh

[16:48] <Su-Shee> Juerd: yes, I'm talking about the same thing and LANG is just _one_ element of possible locale settings. 

[16:49] <Wolfman2000> Su-Shee is correct: LANG is not enough, even after running . .bashrc

[16:49] <Juerd> sorry. i should have said 'source', not 'run'

[16:49] *** takadonet left
[16:49] *** abra left
[16:50] *** krunen left
[16:50] <Su-Shee> Wolfman2000: check first with locale -a what you actually got.

[16:50] <Juerd> Su-Shee: I've never explicitly set any LC_ yet I get full utf8 everywhere

[16:50] <Wolfman2000> ...it's utf8, not UTF8

[16:50] <Juerd> isn't ctype implied by lang?

[16:51] <Su-Shee> no.

[16:51] <Su-Shee> LANG is the "weakest" of all settings.

[16:51] <Juerd> Wolfman2000: iirc it is UTF-8 with capitals and hyphen

[16:51] *** ssm left
[16:51] <Su-Shee> Wolfman2000: export LC_CTYPE=en_US.utf8

[16:52] <Juerd> I could be mistaken of course

[16:52] <Wolfman2000> Juerd: according to the list, it's en_US.utf8, not en_US.UTF-8

[16:52] <Juerd> okay

[16:52] <Su-Shee> Juerd: depends on your system, check with locale -a

[16:52] <Wolfman2000> I got it workign now

[16:53] <Su-Shee> I usally generate both versions, because who knows what needs which setting.

[16:53] <Su-Shee> Wolfman2000: you should COLLATE as well and maybe NUMERIC

[16:53] <Juerd> Weird. nl_NL.UTF-8 works for me

[16:54] <Juerd> and setting lang apparently did also get me that ctype

[16:55] <Wolfman2000> ...do I have to compile Rakudo on my feather box first before using it? I just got an error while testing my √ prefix

[16:55] <Wolfman2000> perl6: error while loading shared libraries: libparrot.so.0.9.1: cannot open shared object file: No such file or directory

[16:55] <p6eval> elf 28978: OUTPUT«Parse error in: /tmp/vuzzsW15ZI␤panic at line 1 column 50 (pos 50): Statement not terminated properly␤WHERE: shared libraries: libparrot.so.0.9.1: cannot open shared obj␤WHERE:                              /\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:355:in

[16:55] <p6eval> ..`eat_t…

[16:55] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "0"␤    expecting ".", "\187", ">>", "=", "^", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript␤    at /tmp/bNaxYhu3ya line 1, column 52␤»

[16:55] <p6eval> ..rakudo 74f561: OUTPUT«Confused at line 2, near ": libparro"␤in Main (file <unknown>, line <unknown>)␤»

[16:55] <Wolfman2000> ...

[16:55] <Juerd> lol

[16:55] <Juerd> rakudo: say 'hi'

[16:55] <p6eval> rakudo 74f561: OUTPUT«hi␤»

[16:56] <Wolfman2000> This will take awhile.

[16:56] <Wolfman2000> ~jafelds/sqrt.pl contains what I'm after. I should have it set up decently...I think.

[16:57] <Wolfman2000> I guess the big question...am I doing something wrong with it?

[16:58] <Juerd> gotta go

[16:58] <Juerd> ttyl

[16:58] <Wolfman2000> *nods*

[16:58] <moritz_> Wolfman2000: yes, you have to compile locally...

[16:58] <moritz_> Wolfman2000: the error message indicates an ancient rakudo version

[16:59] <Wolfman2000> I guess I should try git and make again?

[17:00] <moritz_> aye

[17:00] <Wolfman2000> ...well, may as well reactivate my websites right now

[17:02] <Wolfman2000> alright, pages back up

[17:03] <Wolfman2000> I wonder if I should skip the make install step when I get there

[17:03] *** h1rschnase joined
[17:05] <moritz_> no, you shouldn't

[17:05] <moritz_> make install installs into $your_rakudo_dir/parrot_install/

[17:05] *** pmurias joined
[17:05] <moritz_> and then you just add $your_rakudo_dir/parrot_install/bin/perl6 ot your path, and be happy

[17:06] <Wolfman2000> ...so it's alright to make install? Wait...I don't even know my sudo

[17:07] <moritz_> you don't need sudo for that

[17:07] <moritz_> it's in your home where it will be installed

[17:07] <Wolfman2000> Funny, I didn't tell it where to PUT the files on make install. It will...just work?

[17:08] <moritz_> yes

[17:08] <moritz_> it defaults to the same dir where your parrot_config binary is

[17:08] <moritz_> and that's iinstalled locally by Configure --gen-parrot

[17:09] *** mberends left
[17:10] *** hicx174 joined
[17:11] <Wolfman2000> alright...let me wait for the spec test to get done first, then I'll try to contribute more math prefix and postfix stuff before I have to do real life things

[17:11] <Wolfman2000> I wonder if my directory is visible to others

[17:15] *** fax joined
[17:15] <masak> Wolfman2000: I'm in ur directory. sqrp.pl

[17:15] <masak> er, sqrt.pl

[17:15] <Wolfman2000> I couldn't run the file due to my compiling of rakudo right now

[17:16] <Wolfman2000> I plan on making mini files like this right now until I feel ready to try using Web.pm

[17:16] <masak> Wolfman2000: good plan.

[17:16] <masak> Wolfman2000: it runs fine here.

[17:16] <masak> √25 = 5

[17:16] <Wolfman2000> so we can all access each other's files

[17:16] <masak> aye.

[17:16] <Wolfman2000> I will keep that in mind and don't bring in my database websites over to the server

[17:16] <masak> :)

[17:17] <masak> I wouldn't do anything production-critical on feather. or with Perl 6, for that matter.

[17:17] <masak> at least not without some kind of fallback.

[17:17] <Wolfman2000> masak: My main websites are back up on my original host

[17:17] <Wolfman2000> This will allow me to experiment for awhile

[17:19] <masak> carlin: ping

[17:23] *** mariuz left
[17:23] *** hicx174 left
[17:23] *** hicx174 joined
[17:24] <masak> is there any way to say "I don't want this method to be overridden" in Perl 6? like 'final' on methods in Java.

[17:25] <moritz_> there used to be a 'final' pragma or something

[17:25] <moritz_> but all in all it doesn't really make sense

[17:25] <Wolfman2000> the spectest has failed, BTW

[17:26] <moritz_> except maybe for optimization that will fire backwards somme day

[17:26] <masak> Wolfman2000: it sometimes does. can you nopaste the summary somewhere?

[17:26] <lisppaste3> wolfman2000 pasted "spectest on feather" at http://paste.lisp.org/display/89733

[17:26] <moritz_> hugme: reload data

[17:26] <hugme> moritz_: reloaded successfully

[17:26] <masak> moritz_: I'm pretty sure I read a good argument for 'final' on methods once. don't remember it offhand, though.

[17:27] <moritz_> masak: you can always bypass the 'final' by a proxy object

[17:27] <masak> moritz_: I guess...

[17:27] <masak> maybe Perl is too liberal for 'final' to make sense.

[17:28] <masak> Wolfman2000: some of those look like segfaults. IO::Socket::INET is ever problematic (in the spectest suite). sinh.t I don't think I've seen before.

[17:28] <moritz_> sinh.t is probably a segfault or resource problem

[17:28] *** h1rschnase left
[17:29] <moritz_> unicode.t is known

[17:29] <Wolfman2000> and make install...just worked

[17:29] <KyleHa> I see those big trig test files bomb every so often.

[17:29] <Wolfman2000> just have to set the path to that and I'm good. got it

[17:29] <moritz_> the junction tests where changed recently, and I haven't got around to fix them up again

[17:29] <moritz_> hugme: list projects

[17:29] <hugme> moritz_: I know about book, hugme, json, november, nqp-rx, perl6-examples, proto, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte, web

[17:30] *** jaffa8 joined
[17:30] <Wolfman2000> yay, my program works

[17:30] <masak> \o/

[17:31] <moritz_> next step: world domination

[17:31] <Wolfman2000> <M Bison> OF COURSE!

[17:31] <Wolfman2000> ...sorry: like Nostalgia Critic a little much there

[17:35] <masak> rakudo: class A { sub foo() { say "OH HAI" } }; class B { has B $!b handles <foo>; method bar { foo } }; B.new.bar

[17:35] <p6eval> rakudo 74f561: TIMED_OUT

[17:36] <masak> here it says "Could not find non-existent sub foo".

[17:36] <masak> should that work?

[17:36] *** xp_prg left
[17:36] <jnthn> masak: Did you meant "has A $!b" ?

[17:37] <masak> oops. yes.

[17:37] <KyleHa> Yeah, what jnthn++ said.

[17:37] <masak> same result, though.

[17:38] <KyleHa> Wouldn't $!b have to get initialized with an A.new somewhere?

[17:40] <masak> KyleHa: even when it isn't, it contains the A type object.

[17:41] <masak> rakudo: class A { sub foo() { say "OH HAI" } }; class B { has A $!a handles <foo> = A.new; method bar { foo } }; B.new.bar

[17:41] *** linguini joined
[17:41] <masak> still the same result locally. no such sub.

[17:41] <p6eval> rakudo 74f561: TIMED_OUT

[17:42] <moritz_> shouldn't it complain that it can't find *method* foo?

[17:42] <masak> no, because I'm calling the sub.

[17:43] <masak> my question boils down to "does 'handles' concern itself with subs?"

[17:43] <moritz_> in my understanding 'handles' is for methods

[17:43] <Wolfman2000> I think I can see why perl6 requires more power.

[17:43] <moritz_> masak: somehow your code doesn't make sense to me

[17:43] <masak> moritz_: what about submethods?

[17:43] <Wolfman2000> Hmm...what's the proper type of "fix" for a standalone character? Something similar to the standalone +?

[17:44] <jnthn> masak: no no no no

[17:44] <jnthn> masak: $.foo

[17:44] <moritz_> masak: it just does a normal dispatch

[17:44] <jnthn> There *is* no foo sub.

[17:44] <masak> jnthn: there is, in A.

[17:44] <moritz_> but you're calling a sub foo in B

[17:44] <jnthn> oh wtf

[17:44] <masak> moritz_: yes. I was wondering whether 'handles' could do that.

[17:44] <jnthn> I read masak's code as what I thought it was meant to do. 

[17:44] <jnthn> masak: No, it won't.

[17:45] <moritz_> masak: it can't

[17:45] <moritz_> jnthn: me too

[17:45] <jnthn> It shouldn't.

[17:45] <moritz_> ;-)

[17:45] <masak> :)

[17:45] <jnthn> :-)

[17:45] <masak> Wolfman2000: I don't understand your question.

[17:45] * moritz_ thinks masak++ wants to import things from A, not delegate

[17:45] <masak> moritz_: yes, how do I do that?

[17:45] <moritz_> masak: in Rakudo, or in Perl 6? ;-)

[17:45] <Wolfman2000> ½ = 0.5. I want ½ as its own operator so to speak, and have that automatically converted to 1.0 / 2

[17:46] <masak> moritz_: in Rakudo.

[17:46] <Wolfman2000> I thought infix would work...probably did something wrong

[17:46] <masak> Wolfman2000: sounds like a term to me.

[17:46] <moritz_> Wolfman2000: no, you'd have to define it as a constant, which only works for identifiers

[17:46] <moritz_> Wolfman2000: or as a term, which is not yet implemented

[17:46] <Wolfman2000> so we haven't hit that point yet. got it

[17:47] <moritz_> rakudo: class A { sub foo { say 'bar' } }; class B { my &foo := &A::foo; method t { foo() } }; B.new.t

[17:47] <p6eval> rakudo 74f561: TIMED_OUT

[17:48] <moritz_> doesn't work :(

[17:50] <Wolfman2000> alright, most of my working math pl files are in feather/jafelds/math

[17:50] <Wolfman2000> Not too much in there right now, but...it's a start

[17:50] <moritz_> masak: sub foo(*@_, *%_) { A::foo(|@_, |%_) } # SCNR

[17:52] *** kidd` is now known as rgrau`

[17:53] <masak> moritz_: :)

[17:54] *** barney joined
[17:54] <moritz_> I'm sure you'll also find a "solution' involving eval() ;-)

[17:55] <masak> indubitably.

[17:55] <moritz_> "eval -- it's Turing complete"

[17:56] <dukeleto> moritz_: good tshirt idea :)

[17:57] <moritz_> dukeleto: indeed ;-)

[17:57] <KyleHa> Every program should start with:  eval q{

[17:57] *** stephenlb joined
[17:57] <KyleHa> There'd be no more death!

[17:57] <moritz_> KyleHa: or with 'use Inline::PERL;'

[17:57] <moritz_> KyleHa: for those dubious PERL programmers out there

[17:57] <Wolfman2000> bah, my attempt at infixing failed

[17:58] <lisppaste3> wolfman2000 pasted "Infix failure." at http://paste.lisp.org/display/89735

[17:58] <moritz_> rakudo: multi sub infix:<^>(Num $x, Num $y) { $x**$y }; say "10^2 = {10^2}"

[17:59] <p6eval> rakudo 74f561: OUTPUT«push_pmc() not implemented in class 'Sub'␤in Main (file <unknown>, line <unknown>)␤»

[17:59] *** cdarroch joined
[17:59] <moritz_> Wolfman2000: presumably infix:<^> isn't overloadable yet :(

[17:59] <KyleHa> "Your Inline::Perl program will run slowly the first few times that you run it. After that you will get used to it."  Har.

[17:59] <moritz_> must be moved to the setting to wrok

[17:59] <Wolfman2000> Does ^ already have a function I'm forgetting?

[17:59] * moritz_ has to leave for a table tennis match, TTFN folks

[17:59] <moritz_> Wolfman2000: it constructs a junction

[17:59] <moritz_> rakudo: say (3^5).WHAT

[17:59] <TimToady> an XOR junciton

[17:59] <p6eval> rakudo 74f561: OUTPUT«Junction()␤»

[18:00] <TimToady> *tion

[18:01] <Wolfman2000> rakudo: say 3^5

[18:01] <p6eval> rakudo 74f561: OUTPUT«one(3, 5)␤»

[18:01] <Wolfman2000> ...unfortunately, I don't recall reading what junctions are

[18:02] <Wolfman2000> Hmm...I need a reminder

[18:02] <Wolfman2000> rakudo: say 5 / 2

[18:02] <p6eval> rakudo 74f561: OUTPUT«2.5␤»

[18:02] <Wolfman2000> rakudo: say 5 // 2

[18:02] <p6eval> rakudo 74f561: OUTPUT«5␤»

[18:03] <Wolfman2000> rakudo: say (//).WHAT

[18:03] <p6eval> rakudo 74f561: OUTPUT«say requires an argument at line 2, near " (//).WHAT"␤in Main (file src/gen_setting.pm, line 2593)␤»

[18:03] <Wolfman2000> so // is an error?

[18:03] <TimToady> std: say (//).WHAT

[18:03] <p6eval> std 28978: OUTPUT«===SORRY!===␤Null regex not allowed at /tmp/juFzoLXOOq line 1:␤------> say (//⏏).WHAT␤FAILED 00:01 107m␤»

[18:03] <TimToady> STD will usually give you a better error message

[18:03] <TimToady> but only for syntax errors

[18:03] <Wolfman2000> ...I wasn't trying to use regex

[18:04] <TimToady> well, but / where a term is expected is always a regex in Perl

[18:04] <Wolfman2000> Just trying to do integer division

[18:04] <Wolfman2000> similar to how Python does it

[18:04] <TimToady> rakudo: say 5 div 2

[18:04] <p6eval> rakudo 74f561: OUTPUT«2␤»

[18:04] <Wolfman2000> ...

[18:04] <Wolfman2000> nevermind

[18:06] <Wolfman2000> ...right, I never understood that. There is a separate symbol for the minus sign

[18:06] <TimToady> in p6 // is like ||, but tests for defined instead of true

[18:06] <TimToady> (which got borrowed back to 5.10 to)

[18:07] <TimToady> *too

[18:11] <TimToady> masak: re "final", see S12:1814

[18:13] *** xp_prg joined
[18:13] <frettled> That's one of my favourite enhancements in P6.

[18:13] <Wolfman2000> I have to get into the real life now. Hopefully I can mess with more of P6 later.

[18:13] *** akl joined
[18:13] <Wolfman2000> Look in my feather account to see what I've gotten in there.

[18:21] <masak> TimToady: so finality works on a class level, not on a method level?

[18:22] <Wolfman2000> .away

[18:22] <Wolfman2000> err

[18:22] <masak> Wolfman2000: whoa, you've been productive!

[18:22] <Wolfman2000> hard to tell if those mini fixes are productive or not

[18:22] <Wolfman2000> unsure how many of them are useful to the public

[18:23] <Wolfman2000> the only one that doesn't work right now is half.pl

[18:23] *** justatheory left
[18:23] *** rgrau left
[18:23] *** rgrau joined
[18:24] <masak> Wolfman2000: that's because ½ is not an infix operator.

[18:24] <Wolfman2000> it's a term, and terms can't be defined

[18:24] <Wolfman2000> yet

[18:24] <masak> right.

[18:25] <Wolfman2000> I'll get this at some point

[18:25] <Wolfman2000> for now, *AWAY*

[18:25] <masak> o/

[18:25] <TimToady> std: sub term:<½> () {...}; ½ + ½

[18:25] <p6eval> std 28978: OUTPUT«ok 00:03 124m␤»

[18:27] <masak> someone should write an implementation that can do all the cool things STD.pm can do :)

[18:27] <zaslon> lolpmichaudhazblogged! pmichaud++ 'A brief report on progress': http://use.perl.org/~pmichaud/journal/39834?from=rss

[18:28] <TimToady> masak: yes, well, non-finality is about classes.  the optimizer can do what it likes on the method level for any class that is required to be non-final

[18:28] <TimToady> *that is not required

[18:29] <TimToady> and most of the things you might want final methods for are really infrastructural, and therefore the proper domain of submethods

[18:30] <masak> ah, true.

[18:30] <masak> that's probably the answer to the question that I couldn't phrase.

[18:30] <TimToady> and our classes are "open", but that doesn't mean we don't have final classes, which we call "roles"  :)

[18:31] <pmichaud> btw, jnthn, I think that the new parcel and list stuff means that multiple return value semantics fall out naturally

[18:31] <TimToady> s/final/closed/

[18:31] <masak> pmichaud++ # blog post

[18:32] <masak> food &

[18:33] *** masak left
[18:33] *** r0bby left
[18:33] <jnthn> pmichaud: Me too

[18:33] <TimToady> doesn't seem to have shown up on planetsix yet

[18:33] *** r0bby_ joined
[18:33] <jnthn> pmichaud: I didn't want to make it sound like part of my grant was now a no-op though. :-P

[18:33] <jnthn> Well, OK, extracting the design from TimToady++'s brain counts as effort I guess. :-)

[18:33] <pmichaud> jnthn: you've more than made up for it in other are.... oh, wait, I'm the grant manager.  "Yes, that's a no-op now.  You have to do some additional work to make up for it."  :-)

[18:34] <pmichaud> oops

[18:34] <pmichaud> you're right, you're the person who successfully extracted the needed details from TimToady.  That's an accomplishment.  :)

[18:34] <jnthn> ;-)

[18:34] <pmichaud> anyway, I think "done."

[18:34] <pmichaud> well, as soon as we demonstrate that it works :)

[18:35] <jnthn> Yay.

[18:35] <jnthn> \o/

[18:36] *** TimToady sets mode: +vv hugme iblechbot

[18:36] *** TimToady sets mode: +vvvv ilbot2 ilogger2 IRSeekBot lambdabot

[18:36] *** TimToady sets mode: +vvvv lisppaste3 p6eval phenny pugs_svn

[18:36] *** TimToady sets mode: +v zaslon

[18:37] *** abra joined
[18:38] *** abra left
[18:40] *** NorwayGeek left
[18:40] <PerlJam> anyone happen to know how to enable cookies in FF 3.5.4 ?

[18:42] *** quietfanatic left
[18:42] *** justatheory joined
[18:43] <awwaiid> They're not enabled by default for you?

[18:43] <PerlJam> nope

[18:45] <awwaiid> Well some prefs are in: Edit->Preferences->Privacy-> set "use custom settings for history" -> check "accept cookies"

[18:46] <awwaiid> or you can go to "about:config", search for "cookie", and then change some settings at random.

[18:46] <awwaiid> But I just upgraded from FF 3.0 and then 3.5 -> 3.5.4, and cookies were enabled the whole way. So maybe something else is wrong :)

[18:47] *** Morpheus` joined
[18:48] <PerlJam> looks like a buglet.   The "accept cookies" box was already checked, but until I viewed the checkbox and closed the prefs window, it wouldn't accept cookies from anywhere.

[18:48] <frettled> There are no errors but user errors.  However, it varies who the user is.

[18:51] <frettled> Argh.  I get so frustrated with Blogger/Blogspot sometimes; I started writing a blog post yesterday evening, but didn't finish it, so I saved it for later.

[18:52] <frettled> I then edited it this afternoon, published it, and lo and behold: it's posted with yesterday's date.  *growl*

[18:52] <frettled> Fortunately, I can fixify the date after the fact, but that may mess up people's RSS subscriptions.

[18:52] <frettled> Today's frustration was sponsored by Google.  :)

[18:53] *** jaldhar left
[18:56] <frettled> pmichaud++ - my oh my how you've been busy!

[18:57] <frettled> Reading the summary, I get the distinct impression that you're at the SMOP stage.  :D

[18:58] *** am0c left
[18:58] <PerlJam> He's not implementing anything in C and he's got much more implemented than SMOP

[18:58] <PerlJam> *rimshot*   :-)

[18:59] <PerlJam> okay, it was weak and vague and only makes sense to very few people, but I'm one of those people, so it made me smile a little and that's all that matters  :)

[19:00] * jnthn -> store, ENEEDFOOD

[19:01] <frettled> PerlJam: hee-hee :)

[19:01] *** frettled sets mode: +o PerlJam

[19:13] *** h1rschnase joined
[19:13] *** FCO left
[19:14] *** FCO joined
[19:14] *** h1rschnase left
[19:18] <cognominal> plumage?

[19:19] <cognominal> purl answered me :)

[19:20] *** Morpheus joined
[19:21] *** Morpheus` left
[19:26] *** Morpheus is now known as Morpheus`

[19:27] *** lichtkind joined
[19:29] *** athomason joined
[19:31] *** mberends joined
[19:39] *** jferrero left
[19:42] *** stephenl1 joined
[19:47] *** NorwayGeek joined
[19:52] *** Wolfman2000 left
[20:05] *** stephenlb left
[20:13] *** jferrero joined
[20:20] *** crythias joined
[20:25] *** barney left
[20:28] *** frew__ joined
[20:30] *** desertm4x joined
[20:34] <crythias> has anyone done any Win32::Ole perl?

[20:35] <crythias> I just started working on it with Microsoft MapPoint...

[20:36] *** jferrero left
[20:37] <mberends> a colleague who does not use irc has written some Excel automation using Win32::Ole

[20:38] *** aufrank joined
[20:38] <aufrank> Hi all!

[20:39] <aufrank> I just saw pmichaud++'s gist comparing NQP to JSON and had to come ask what's going on with that example

[20:39] <obra_> crythias: you probably #perl 

[20:39] <pmichaud> we're just looking at alternate serialization formats for Parrot's PAST output format

[20:40] <pmichaud> lots of people have been asking about a yaml-based version, we thought we might try json as a simpler first step

[20:41] <aufrank> I see.  And is a declaration of &infix:<+> really embedded within a declaration of &say?  What would that even do?

[20:41] <pmichaud> those are ast representations of calls

[20:41] <pmichaud> call &infix<+>, pass the result to &say

[20:41] <aufrank> ah

[20:41] <pmichaud> i.e., it's the PAST representation of   say($a + 1)

[20:42] <aufrank> thx

[20:44] <aufrank> I've really enjoyed observing as the pace of development has increased in the past couple of weeks.  You folks are doing great.

[20:46] *** justatheory left
[20:47] *** Su-Shee left
[20:47] *** mberends left
[20:47] <pmurias> pmichaud: wouldn't it be harder to serialize to a simpler structure, json can't serialise cyc

[20:47] <pmurias> pmichaud: wouldn't it be harder to serialize to a simpler structure, json can't serialise cycStąd nk=0k(x)1 .

[20:48] <pmurias> sorry

[20:48] <pmichaud> pmurias: we're just playing at the moment

[20:48] <pmurias> * serialize cyclic datastructures

[20:48] <pmichaud> pmurias: it's not intended for anything "real"

[20:48] <pmurias> json is yaml

[20:48] <pmichaud> yes, true.

[20:49] *** masak joined
[20:54] *** frew__ left
[20:56] *** pnate joined
[20:56] *** mberends joined
[20:57] <crythias> ah. yes. sorry. 

[20:58] <masak> mberends: Temporal time! :)

[20:58] <mberends> ooh!

[20:58] <masak> mberends: I'll do this publicly, in a branch in a Rakudo fork.

[20:59] <mberends> the old temporal-flux one?

[20:59] <masak> might as well.

[20:59] <masak> unless it's easier to delete that one and rebranch.

[21:00] *** vmbrasseur left
[21:01] <mberends> dunno, git can be surprising in tasks like that

[21:01] <masak> nod.

[21:02] *** icwiener joined
[21:03] <masak> moritz_: ping.

[21:03] * mberends is watching a BBC programme about black holes

[21:04] <masak> mberends: they're a fascinating subject. it's easy to get sucked in.

[21:04] * mberends did

[21:04] <masak> :)

[21:04] <masak> I'm still a bit surprised that I understand the concept of Hawking radiation.

[21:05] <sjohnson> Q: are \b for backspace / word boundary (in p5) separated in Perl 6?

[21:05] *** pnate2 left
[21:05] <masak> sjohnson: when does \b mean backspace?

[21:06] <sjohnson> masak: according to P5 camel book

[21:06] <masak> sjohnson: not saying you're wrong, just asking.

[21:06] <masak> I've never used \b in that sense myself.

[21:07] <masak> sjohnson: I don't see \b in perldoc perlop, for example.

[21:07] <masak> sjohnson: belay that; it's because I'm blind.

[21:07] * sjohnson hands masak a cloth for his glasses ;)

[21:07] <masak> thanks.

[21:08] <masak> sjohnson: I guess the answer is the same for P6 as for P5, then: \b means backspace in strings, and word boundary in regexes. :)

[21:08] <masak> either that, or the former meaning got an early retirement in Perl 6. I don't know.

[21:08] <masak> rakudo: say "OH HA\bI"

[21:08] <p6eval> rakudo 74f561: OUTPUT«OH HAI␤»

[21:08] <masak> no, there it is.

[21:11] <sjohnson> i believe it also means backspace in regex's too

[21:11] <sjohnson> Camel book p161

[21:12] <masak> sjohnson: no camel book on my shelf; sorry.

[21:12] <sjohnson> \b is under the table "Regex Metasymbols" twice :[

[21:12] <masak> sjohnson: but you might be right -- it might mean it in char classes, for example.

[21:12] <masak> just a guess.

[21:12] <sjohnson> masak: to see the behaviour in P6, should i consult / dig thru the S## sheets?

[21:13] <masak> sjohnson: S05.

[21:13] <sjohnson> thanks!

[21:13] <masak> but playing with p6eval might be just as profitable.

[21:13] <masak> rakudo: say "\b" ~~ s/<[\b]>/

[21:13] <p6eval> rakudo 74f561: OUTPUT«s/// not implemented, try .subst as workaround at line 2, near ""␤in Main (file <unknown>, line <unknown>)␤»

[21:13] <masak> um.

[21:13] <masak> rakudo: say "\b" ~~ /<[\b]>/

[21:13] <p6eval> rakudo 74f561: OUTPUT«␤»

[21:13] <frettled> lolitsmasak :D

[21:14] <masak> lolitsfrettled \o/

[21:14] <sjohnson> masak: it's changed in p6

[21:14] *** frettled sets mode: +ooo masak mberends sjohnson

[21:14] <masak> ugh. doing two parallel builds of Rakudo slows down my computer. don't try this at home.

[21:15] <frettled> masak: evidently, you need a better computer.

[21:15] <masak> I doubt it.

[21:15] <frettled> «Here's a nickel, kid, get yourself a better computer.»  (STR)

[21:15] <masak> :P

[21:17] <masak> mberends: actually, there's no temporal-flux branch in the rakudo repo. and thinking about it, I feel like a branch in a fork might be overkill. I'll just work in master, unless I'm trying out something experimental.

[21:18] <mberends> initially it's pimped up constructors, right?

[21:20] * mberends was just yanked back from the event horiz^W^W^W dozing off

[21:20] *** Wolfman2000 joined
[21:20] <masak> right. a perfect job for TDD, actually. :)

[21:20] <Wolfman2000> ...alright, you guys couldn't keep me away

[21:21] <frettled> Dozing off is a perfect job for me.

[21:21] <frettled> That, and inane blogging.

[21:22] <mberends> frettled: you made blogging an S&M art form

[21:22] <masak> mberends: I also killed off TimeRange in temporal-flux-perl6syn.

[21:23] <mberends> as overkill for a foundation layer?

[21:23] <masak> as reinventing the wheel when a range of DateTime would do the trick.

[21:23] <masak> and I want to express my slight dissatisfaction that the most common class in the whole hierarchy is called Gregorian::DateTime. Huffman cries in his grave.

[21:24] <frettled> mberends: thank you, I think

[21:25] <frettled> masak: It looks like there is room for some improvement in naming, yeah

[21:25] <mberends> masak: Huffman would have called it Cal or something like that

[21:25] <frettled> sorry for not being overly involved in this work, life's been way too busy, but at least you guys get useful stuff done :)

[21:25] <masak> mberends: I've proposed Time before. even DateTime would be fine by me.

[21:26] <frettled> I like Time because it's short, to the point, and covers it all.  mberends likes DateTime for other reasons.  ;)

[21:26] <masak> mberends: having the Gregorian:: prefix there feels very correct, in the sense the Java time classes are correct.

[21:26] *** justatheory joined
[21:26] *** justatheory left
[21:27] <mberends> it's understandable to avoid being Gregorian-centric, when StarDate might be adopted as the standard during the lifetime of Perl 6

[21:27] <frettled> Oooh, cool feature on a wish list near you: automatic class expansion if there are no name space collisions.

[21:27] <masak> mberends: yes, but must avoiding being Gregorian-centric amount to being long-winded?

[21:28] <masak> frettled: enums already do that, in a sense.

[21:28] <mberends> no, a brief label would be so much better

[21:28] *** justatheory joined
[21:28] <frettled> Example: Let's say we have the two modules Gregorian::DateTime and Granny::Weatherwax.  Because there are no other modules with similar names, you can simplify to Gr::DT and Gr::W

[21:28] <masak> frettled: as long as it doesn't lead to some horrible action-at-a-distance, I would be fine with it.

[21:29] <masak> oh, belay that. I just read your clarification.

[21:29] <frettled> Ideally, Gre::DT and Gra::W

[21:29] <masak> no please no.

[21:29] <frettled> >:->

[21:29] <masak> frettled: you'll just have to do it as a module like everybody else. :P

[21:29] <mberends> the 'use' spec (S11) allows for abbreviated aliases

[21:30] <frettled> My goodness, Perl 6 is becoming the EMACS of programming languages!  ;)

[21:31] <frettled> In other words: every feature you ever think of is already there.

[21:31] <Wolfman2000> frettled: I can't override infix operations yet. :(

[21:31] *** IllvilJa left
[21:32] <frettled> Wolfman2000: it's probably on the ToDo list, then.

[21:33] *** stephenlb joined
[21:34] <mberends> frettled: What's the date? Some date without a time. What's the time? Some time without a date. It's intuitive to keep those separate.

[21:34] <frettled> mberends: except that «time» is the concept of, well, time.

[21:35] <frettled> mberends: «time of day» is the one that's without specific meaning without a date

[21:35] <frettled> «Time» is the all-encompassing thing, the fourth dimension in spacetime.

[21:36] <mberends> frettled: sure, but what we commonly call stuff is as simple as possible

[21:36] <frettled> And no, I don't think we need a SpaceTime class, although that would be kindof cool.

[21:36] <frettled> mberends: yes, and using «Time» would make it simpler than «DateTime»

[21:37] <frettled> Time of day, if that should be subclassed somehow, could be e.g. Time::TimeOfDay, Time::TOD, or somesuch.

[21:38] <mberends> that needs more Huffman contraction, being very frequently used

[21:38] *** NorwayGeek left
[21:39] <frettled> Then perhaps it shouldn't be subclassed, but rather be methods in the Time class.  Subclassing only for specific features which are less frequently used.

[21:40] <mberends> right. keep it simple as far as possible

[21:40] <frettled> If there is a strftime method, for instance, that clearly belongs to the parent class.

[21:40] <masak> here's how Ruby does it. http://ruby-doc.org/core/classes/Time.html

[21:40] <masak> discuss.

[21:40] *** desertm4x left
[21:41] <frettled> Well, from a brief glance, Ruby's approach seems sensible enough.

[21:42] <frettled> However, I don't see anything about localization.

[21:42] <masak> frettled: ZoneOffset?

[21:42] <frettled> Nopes.

[21:42] <frettled> Localization also implies translations of month names, day names, abbreviations, standard formatting etc.

[21:43] <masak> ah.

[21:43] <mberends> strftime() was always my favourite. duct tape :)

[21:43] <frettled> Leaning on the operating system's libraries may be a very good idea.

[21:43] <frettled> mberends: yeah, I like that one, too.

[21:44] <arnsholt> frettled: Might result in the same function differing across platforms though

[21:44] *** hudnix joined
[21:44] <masak> my plan is to use one day a week during November to put together a temporal-flux proposal that p6l can't affort to refuse.

[21:44] <frettled> arnsholt: Yes, but that's life.

[21:45] <frettled> arnsholt: There's always going to be a lot of things that are platform specific.  I don't know which is worse; implementing localization yourself, or leaning on the OS's implementation.

[21:45] <moritz_> re

[21:45] <moritz_> masak: pong

[21:45] *** stephenl1 left
[21:45] <masak> moritz_: oh hai. I accidentally reviewed your last Rakudo commit. it doesn't work.

[21:46] <frettled> heh

[21:46] <masak> rakudo: my $c = Complex.new(1,2); say $c.perl

[21:46] <p6eval> rakudo 74f561: OUTPUT«Complex.new(1.perl, 2.perl)␤»

[21:46] <frettled> «accidental review» - that's a wonderful way of putting it.

[21:46] * moritz_ dumb

[21:46] <masak> moritz_: it would work in ideal Perl 6.

[21:46] <Wolfman2000> ...complex numbers? wow

[21:47] <masak> moritz_: did you perchance not write tests for this? :P

[21:47] <masak> *SCNR*

[21:47] <moritz_> will fix it later

[21:48] <masak> moritz_++

[21:48] *** hudnix left
[21:49] *** xenoterracide left
[21:49] *** xenoterracide joined
[21:50] <pmurias> frettled: automatic generation of abbreviations would lead to new modules making old code ambigious

[21:50] <frettled> pmurias: yep

[21:52] <masak> jnthn: if a where clause in a param list is a regex match, does $/ get set so that it's accessible from within the routine? if not, is there any way to do that?

[21:52] <jnthn> heh

[21:52] <jnthn> masak: I dunno off hand. I guess you can try it. :-)

[21:53] <jnthn> It may well work.

[21:53] <masak> oh, you can be sure I'll try. :)

[21:53] *** hudnix joined
[21:53] <jnthn> Since the where clause is invoked relative to the context of the routine you're in.

[21:54] <moritz_> masak: even in perfect Perl 6 my last patch is wrong

[21:54] <moritz_> +        "Complex.new($.re.perl, $.im.perl)";

[21:54] <moritz_> doesn't end in a postcircumfix

[21:54] <moritz_> so only the $.re is interpolated

[21:54] <masak> moritz_: oh, you're right.

[21:54] <masak> jnthn: sounds promising. :)

[21:55] <jnthn> rakudo: sub f($x where /\d+/) { say $/ }; f("abc123def")

[21:55] <p6eval> rakudo 74f561: OUTPUT«Use of uninitialized value␤␤»

[21:55] <jnthn> bah!

[21:55] <jnthn> fail!

[21:56] <sjohnson> rakudo:  use justdoit;

[21:56] <p6eval> rakudo 74f561: OUTPUT«Can't find ./justdoit in @*INC␤in Main (file <unknown>, line <unknown>)␤»

[21:56] <masak> jnthn: could you... make it happen? :)

[21:56] <frettled> Make it so.

[21:56] <masak> and then we'll spec it! \o/

[21:56] <jnthn> masak: It may turn out that it just fixes itself in ng anyway. Not sure.

[21:56] <moritz_> it's already specced

[21:56] <jnthn> I'll keep it in mind.

[21:57] <jnthn> I think it probably should work anyway.

[21:57] <masak> \o/

[21:57] <moritz_> if the RHS is not a block, it's parsed as the RHS of a smart match

[21:57] <masak> moritz_: yes, but...

[21:57] <masak> moritz_: that doesn't automatically mean that $/ is propagated into the routine, right?

[21:58] *** FCO left
[21:58] <jnthn> oh hmm, that's true.

[21:58] <masak> just got the error "set_pmc() not implemented in class 'default'" from my fork'd Rakudo.

[21:59] <jnthn> Sounds very fork'd to me. ;-)

[21:59] <masak> wonder what I did? :)

[21:59] <moritz_> masak: not sure which scope it is in

[21:59] <moritz_> masak: or what happens if you have multiple such things

[21:59] <masak> moritz_: the last one, in case of multimples.

[21:59] <masak> provided this makes sense at all.

[22:00] <masak> moritz_: parameters are evaluated LTR anyway.

[22:01] <moritz_> masak: yes, but binding time != evaluation time

[22:01] <jnthn> Yes, order of parameter binding is LTR.

[22:01] <moritz_> masak: and where clauses are executed at binding time

[22:01] <moritz_> doesn't calling positionals by name change that?

[22:02] <masak> I was worried something like that might spoil the fun. :)

[22:02] <masak> oh well.

[22:02] <moritz_> doesn't have to be a show-stopper

[22:04] <jnthn> moritz_: Calling positionals by name does *not* change the order in which the parameters are bound.

[22:04] *** jaffa8 left
[22:04] <jnthn> rakudo: sub foo($x where { say 1 }, $y where { say 2 }) { }; foo(1,2); foo(x => 1, y => 2); foo(y => 2, x => 1);

[22:04] <moritz_> so :($a, $b) := \(3, a => 4) binds $b first, and then $a?

[22:04] <p6eval> rakudo 74f561: OUTPUT«1␤2␤1␤2␤1␤2␤»

[22:05] <jnthn> moritz_: No.

[22:05] <moritz_> wow

[22:05] <jnthn> moritz_: It's *always* bound in the order the parameters are declared in the signature.

[22:05] * moritz_ genuinely suprised

[22:05] <jnthn> Yes, that was one of the fun parts of writing the binder. ;-)

[22:05] <moritz_> do we have tests for that? ;-)

[22:05] <jnthn> It's actually not a big deal to do really though.

[22:05] <jnthn> moritz_: Not yet. ;-)

[22:05] <jnthn> It is spec though.

[22:06] <jnthn> It's a line of spec that caused me to toss my first binding algorithm when I was designing the new binder. :-)

[22:06] <moritz_> is it also spec that constraints have to be evaluated as seldom as possible?

[22:07] <moritz_> if not, it'll make testing with side effects in the constraints much harder

[22:08] <jnthn> moritz_: Just make a constraint that requires the compiler to solve the halting problem in the test. ;-)

[22:08] <jnthn> I think not doing them would count as an optimization.

[22:08] <jnthn> But it'll be a hard opt to do.

[22:09] <moritz_> I think I know a decent way to test it

[22:09] <jnthn> For any non-trivial case.

[22:09] <jnthn> :-)

[22:09] <masak> I agree with jnthn. it feels strange to spec 'as seldom as possible'.

[22:09] <masak> better to leave it up to the implementations.

[22:10] <moritz_> I don't need that constraint for valid testing

[22:12] <masak> I'm getting strange errors.

[22:13] <jnthn> "Monkey eating beach ball can not handle banana."?

[22:14] <masak> ok, slightly strange errors.

[22:14] * masak slowly inches away from jnthn 

[22:14] <jnthn> At least now your error doesn't feel so strange any more.

[22:14] <masak> true.

[22:15] <masak> first, it was that set_pmc() error.

[22:15] <masak> now, it's "Can only transform an Object to p6opaque"

[22:16] <jnthn> Ouch.

[22:16] <jnthn> Those are gutsy errors.

[22:16] <jnthn> masak: How're you achieving them?

[22:16] <moritz_> I've seen that with outdated files lying around in the build or install dir

[22:16] <masak> jnthn: I don't know yet.

[22:17] <jnthn> The only time you'll run into "default" normally is if some dynpmc type name looking went pear-shaped, which really should not happen.

[22:17] <pugs_svn> r28979 | moritz++ | [t/spec] binding happens in parameter order 

[22:17] <moritz_> regexes ftw

[22:18] <moritz_> this test is a bit permissive, but it doesn't blow up if the dispatcher does more checks than necessary

[22:18] <Wolfman2000> Hmm...alright, feather question. Where exactly is pugs/docs/feather/~?

[22:18] <moritz_> Wolfman2000: where did you get that reference form?

[22:18] <moritz_> s/form/from/

[22:18] <Wolfman2000> http://feather.perl6.nl/~/

[22:18] <moritz_> might refer to the pugs svn repo

[22:19] *** crythias left
[22:19] <moritz_> Wolfman2000: if you put something in the public_html folder in the home dir, it'll show up on http://feather.perl6.nl/~wolfman2000/

[22:19] *** Whiteknight joined
[22:20] <Wolfman2000> moritz_: actually, ~jafelds

[22:20] <Wolfman2000> it does show

[22:20] <Wolfman2000> but I want to update the listing

[22:20] <Wolfman2000> ...and yeah, looks like I need pugs as well

[22:20] <Wolfman2000> alright, what's the proper way to get pugs?

[22:22] <moritz_> there's an INSTALL file in the pugs repo that describes that

[22:22] <moritz_> ah

[22:22] <moritz_> the ~ dir in the pugs repo

[22:22] <moritz_> how surprising ;-)

[22:22] <moritz_> in pugs/docs/feather/~/

[22:23] *** Morpheus` left
[22:27] *** tak11 joined
[22:30] <frettled> moritz_: originally there was a nothing dir, but then Emacs auto-saved a backup copy ;)

[22:31] <Wolfman2000> and...I don't have any $PAGER variables, and thus can't perl Makefile.PL pugs

[22:31] <frettled> hrm, that's buggyish

[22:32] <moritz_> Wolfman2000: you shouldn't be doing that anyway

[22:32] <jnthn> frettled: Sometimes Emacs is nearly as buggy an OS as Windows, eh? ;-)

[22:32] <Wolfman2000> so someone else will have to update the website listings to see my username

[22:32] <frettled> jnthn: Yeah, but with fewer remove execution vulnerabilities ;)

[22:33] <moritz_> Wolfman2000: if you want pugs installed, you need to follow the "INSTALLING PUGS VIA CABAL" instructions in the INSTALL file

[22:45] <masak> here's my progress for the evening: http://github.com/masak/rakudo/blob/master/temporal.t http://github.com/masak/rakudo/blob/master/src/setting/Temporal.pm

[22:45] <masak> all tests pass.

[22:45] <masak> now blogging about it.

[22:46] <moritz_> do we have a book meeting tomorrow?

[22:46] <masak> yes, I think so.

[22:46] <masak> but I'll be unable to attend. :/

[22:46] <moritz_> ok

[22:47] <jnthn> oh book...I forgot to write this week :-(

[22:47] * jnthn <- fail

[22:47] <moritz_> you wrote code that week

[22:47] <moritz_> that's fine too

[22:47] <jnthn> Yeah, and the week before... 

[22:48] <jnthn> :-/

[22:48] <moritz_> so we can have something to write about ;-)

[22:48] <moritz_> anyway, I'd also welcome reviews of what I wrote over the weekend

[22:50] <frettled> masak: where's your yak?

[22:51] <masak> frettled: sorry?

[22:51] <frettled> masak: I have a razor, but I see no yak :(

[22:51] <masak> frettled: is this a very contrived way of saying you want to contribute?

[22:52] <masak> very well. first read this: http://github.com/masak/temporal-flux-perl6syn/blob/master/S32-setting-library/Temporal.pod

[22:52] <masak> then write tests. kthxbai.

[22:52] <masak> the interesting things start at line 209.

[22:52] <frettled> masak: No, it's a very contrived way of saying that it looks fine enough that there is no need for yak shaving

[22:53] <masak> frettled: thanks. but there's a lot of redundancy in there.

[22:53] <frettled> masak: yes, a bit

[22:55] <frettled> But at the moment, I don't really see how you can easily get around that.

[22:55] *** nihiliad left
[23:00] <masak> me neither.

[23:01] <frettled> But if I for some reason should have an epiphany, I'll be sure to let you know, perhaps even in the form of a patch.  :)

[23:02] <masak> excellent. I'd expect nothing less. :)

[23:03] *** KyleHa left
[23:03] <zaslon> lolmasakhazblogged! masak++ 'November 3 2009 -- doing it with style and sophistication': http://use.perl.org/~masak/journal/39836?from=rss

[23:05] <frettled> Wotzthiszaslonthing?

[23:06] <masak> it's a bot written in Perl 6. carlin++

[23:06] <diakopter> zaslon: hi

[23:06] <zaslon> Sorry, I don't understand that command

[23:07] <moritz_> zaslon: help

[23:07] <zaslon> Sorry, I don't understand that command

[23:07] <moritz_> zaslon: you're repeating yourself

[23:07] <zaslon> Sorry, I don't understand that command

[23:07] <diakopter> zaslon: 

[23:07] <zaslon> Sorry, I don't understand that command

[23:09] <masak> zaslon: Sorry, you don't understand that command?

[23:09] <zaslon> Sorry, I don't understand that command

[23:10] * masak thought so

[23:11] *** pmurias left
[23:13] *** iblechbot left
[23:13] <fax> Sorry, I don't understand that command

[23:13] <jnthn> fax: get me a beer

[23:14] <jnthn> ...bah, useless bot.

[23:14] *** dj_goku left
[23:14] <moritz_> hugme: hug jnthn 

[23:14] * hugme hugs jnthn

[23:14] <jnthn> hugme++

[23:14] <frettled> maybe it can fax you a beer drawing

[23:14] <masak> 'night, #perl6.

[23:14] *** masak left
[23:14] <jnthn> night masak++

[23:14] <moritz_> 'night

[23:14] <frettled> yep, nighty-night!

[23:14] <jnthn> frettled: That'd be an amazing feat, given I don't actually have a fax machine. :-)

[23:15] <frettled> jnthn: what century are you living in, anyway?  :)

[23:15] <jnthn> 21st. Fax machines were so 20th century. ;-)

[23:19] <moritz_> does anybody know the URL to the svn repo that holds the perl.org website?

[23:24] <TimToady> I used to edit the specs via https://svn.perl.org/perl6/doc/trunk/design but I suspect it was all indirect via combust

[23:25] <frettled> Not via the pugs repo?

[23:25] <TimToady> not till we moved the specs there

[23:25] <frettled> D'oh :D

[23:25] <moritz_> it seems https://svn.perl.org/perl.org/ is the correct URL, but it won't let me in

[23:26] <TimToady> std: D'oh:D

[23:26] <p6eval> std 28979: OUTPUT«Undeclared name:␤      D'oh used at line 1␤ok 00:01 104m␤»

[23:26] <moritz_> not even with the svn.perl.org account info

[23:27] *** ronny_ joined
[23:27] <diakopter> std: D'oh :D

[23:27] <TimToady> looks like a new cert as of August

[23:27] <p6eval> std 28979: OUTPUT«Undeclared name:␤      D'oh used at line 1␤ok 00:02 103m␤»

[23:27] <ronny_> hi

[23:27] <TimToady> hmm, why isn't that two terms in a row

[23:28] <TimToady> but it works for me after I allow the new cert

[23:28] <diakopter> std: :D :D :D

[23:28] <moritz_> because D'oh is a listop, expecting a term?

[23:28] <p6eval> std 28979: OUTPUT«ok 00:02 102m␤»

[23:28] <TimToady> oh, it's parsed as a sub call, D'oh

[23:28] <moritz_> hi ronny_ 

[23:29] <TimToady> std: class D'oh {...}; D'oh:D

[23:29] <p6eval> std 28979: OUTPUT«ok 00:02 105m␤»

[23:29] <TimToady> std: class D'oh {...}; D'oh :D

[23:29] <p6eval> std 28979: OUTPUT«ok 00:02 105m␤»

[23:29] <moritz_> ah, I only have access to the live/ subdir

[23:29] <diakopter> std: :D:D:D:D:D:D:D

[23:29] <p6eval> std 28979: OUTPUT«ok 00:01 102m␤»

[23:29] <frettled> ooohkaaay.

[23:29] <TimToady> okay, :D in adverbial position

[23:30] *** tak_ joined
[23:30] <ronny_> whats the current state of the different perl6 implementations? didnt find any information on completeness of the language and other interesting things like bindings

[23:30] *** justatheory left
[23:31] *** tak_ left
[23:31] <moritz_> http://rakudo.org/status

[23:31] <moritz_> that's about rakudo at least

[23:31] <Tene> ronny_: that looks like several questions...

[23:31] <moritz_> pugs is mostly sleeping for several years now

[23:31] <diakopter> std: (::C:(Int))

[23:31] <moritz_> kp6 and elf also look rather dormant

[23:31] <p6eval> std 28979: OUTPUT«ok 00:02 110m␤»

[23:32] *** Whiteknight left
[23:32] *** tak_ joined
[23:32] <moritz_> mildew and sprixel are being developed actively

[23:32] <moritz_> but both aren't very usable yet

[23:32] <TimToady> ooh, I have an idea!

[23:32] <TimToady> it might even be a good idea

[23:32] <jnthn> uh-oh :D

[23:32] * diakopter takes responsibility in that case

[23:32] <TimToady> we have bare infixes, and infixes in [op]

[23:33] <TimToady> but there's no special reason to say $a [eqv] $b

[23:33] <TimToady> what if that were special, and set $! on failure?

[23:33] <moritz_> set $! to what?

[23:33] *** dakkar left
[23:33] <TimToady> whatever you want for testing

[23:33] <moritz_> to the thing that fail() retunredß

[23:33] <moritz_> s/ß/?/

[23:34] <ronny_> hmm, yes, so rakudo is the one to beet on

[23:34] <TimToady> ok $a [eqv] $b, 'message including $!';

[23:34] <diakopter> zaslon: beet on rakudo

[23:34] <zaslon> Sorry, I don't understand that command

[23:35] <diakopter> ronny_: yep, these days..

[23:35] <TimToady> that is, [op] where infix is expected would capture its arguments sufficiently well to implement is, is_deeply, etc

[23:35] <TimToady> the parser would just do that for you somehow

[23:36] <ronny_> diakopter: i suppose i'll grab it and test if i might like the actual language better than python

[23:36] <TimToady> or set some other variable than $! maybe

[23:36] <moritz_> you can like and use more programming languages than just one ;-)

[23:37] <frettled> TimToady: perhaps set any variable by programmer's choice?  *g,d&r*

[23:37] <ronny_> moritz_: yeah, but its certainly distracting for single projects to use more than one, (sometimes 2 is acceptable tho)

[23:37] <TimToady> and for parsers that aren't up to implementing [op] that way, fudge could easily translate to some other form

[23:37] <moritz_> ronny_: yes

[23:38] <diakopter> std: say \|\|\|&eval

[23:38] <p6eval> std 28979: OUTPUT«ok 00:03 130m␤»

[23:38] <moritz_> TimToady: so you want to diag($!) on failed tests?

[23:38] <moritz_> or something similar?

[23:39] <ronny_> moritz_: and since im unhappy with pythons library situation im taking a look at other things every now and then

[23:39] <TimToady> the [op] form would just capture all the data that we wish we could with "ok $a op $b" now, but can't

[23:39] <moritz_> ronny_: well, Perl 6's library situation isn't bright either at the moment

[23:39] <moritz_> ronny_: though we're working on improving that ;-)

[23:39] <ronny_> moritz_: well, i suspect that will change

[23:39] <TimToady> and it would be useful for run-time testing of assertions, as well

[23:39] <moritz_> I'm sure it will

[23:40] <moritz_> TimToady: sounds useful

[23:40] <diakopter> std: $%

[23:40] <moritz_> maybe that also answers the questions how error messages propagate from exceptions

[23:40] <p6eval> std 28979: OUTPUT«===SORRY!===␤Obsolete use of $% variable; in Perl 6 please use Form module instead at /tmp/ea0lcjGPdj line 1:␤------> $%⏏<EOL>␤FAILED 00:01 103m␤»

[23:41] <diakopter> std: ::Form

[23:41] <p6eval> std 28979: OUTPUT«ok 00:01 102m␤»

[23:41] <ronny_> moritz_: perl5 already has shown the emphasis on good libs in perl, i just never liked the language itself, perl6 seems to be more close to my liking as a language

[23:41] <moritz_> then 'foo' [~~] /f ~ f o*/ would set $! to "Unable to match regex, can't find final 'f' at $thing"

[23:41] <frettled> hmm, interesting

[23:44] <diakopter> std: \|\|\|\|\|()

[23:44] <p6eval> std 28979: OUTPUT«ok 00:01 110m␤»

[23:44] *** tak11 left
[23:45] <TimToady> well, maybe not that much, but certainly 'expected /f ~ f o*/ but got "foo"' or some such

[23:45] <diakopter> std: \|/\|/|/\|\|\//|()

[23:45] *** justatheory joined
[23:45] <p6eval> std 28979: OUTPUT«ok 00:03 110m␤»

[23:46] <moritz_> I'd expect ~ to explicitly tell me what it was looking for

[23:47] <TimToady> it could be made to happen, if individual [op] checkers can work differently, but I was looking for something that would work with any relational

[23:47] <diakopter> std: ::foo [[[eqv]]] ::bar

[23:47] <p6eval> std 28979: OUTPUT«ok 00:02 104m␤»

[23:49] <TimToady> and that could easily be fit into fudge for implementations that aren't up to treating [op] specially yet

[23:50] <TimToady> I guess if we want the failure mode of // we need $/ to contain interesting values of false

[23:50] <diakopter> std: ::foo ***** ::bar

[23:50] <p6eval> std 28979: OUTPUT«ok 00:01 104m␤»

[23:50] <TimToady> so maybe [op] sets $/ when it fails

[23:51] <TimToady> $/ could be false, while $<left> and $<right> could interesting

[23:52] <TimToady> or $<lastpanic> or whatever

[23:53] <TimToady> ltext op rtext larg rarg errmsg

[23:54] <diakopter> std: $<>

[23:54] <p6eval> std 28979: OUTPUT«ok 00:01 104m␤»

[23:55] <TimToady> std: $<><><><><><><>  # diamonds are forever

[23:55] *** rjbs joined
[23:55] <p6eval> std 28979: OUTPUT«ok 00:02 104m␤»

[23:55] <TimToady> more like

[23:55] <rjbs> First off, thanks, #perl6, for introducing me to U+2424.  What an awesome glyph.

[23:55] <TimToady> std: $$$$$<><><>

[23:55] <p6eval> std 28979: OUTPUT«ok 00:02 104m␤»

[23:56] * TimToady bows

[23:56] <moritz_> rjbs: ;-)

[23:56] *** icwiener left
[23:56] <dukeleto> TimToady: wow.

[23:56] <rjbs> Nextly, I was wondering if I would be extremely foolish to hope that we'll have persistent lexicals in the repl for R*.

[23:56] <moritz_> rjbs: not foolish, it's on the ROADMAP

[23:57] <jnthn> rjbs: We very much want them.

[23:57] <jnthn> rjbs: Highly likely we'll have them for R*.

[23:57] <rjbs> That's great.  It's been a sort of annoying stumbling block for just messing about.

[23:57] <TimToady> there's probably some way to fake it now with nested evals of closures :)

[23:57] <jnthn> Yeah, fully agree.

[23:57] <jnthn> TimToady: Yes yes, it'll just involving some cheating and lies. :-)

[23:58] <rjbs> TimToady: If I wanted to cry in my beer, I'd stay in Perl 5. ;)

[23:58] <rjbs> Hm.  I have no small beer at home.  Curses!

[23:58] *** nihiliad joined
[23:58] <jnthn> rjbs: Whatever's wrong with the big beer? ;-)

[23:58] <TimToady> one large works as well as several small

[23:58] <rjbs> no...

[23:58] *** frew__ joined
[23:58] <rjbs> I have one 12 flox (ISB) of beer at home.

[23:59] <rjbs> IT is 20 percent alcohol by volume.

[23:59] *** Gruber is now known as Grrrr

[23:59] <jnthn> Whoa.

[23:59] <moritz_> even Starkbier usually has less

[23:59] <jnthn> That's some serious beer.

[23:59] <TimToady> That's no moon!  That's a space station!!!

[23:59] <rjbs> This is the "famous" Dogfish Head 120 Minute Pale Ale.

[23:59] <rjbs> I'm going to split it with a friend, I think.

