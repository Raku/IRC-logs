[00:01] <TimToady> seems like a smop to make a timeout actually say "TIMEOUT"

[00:04] *** xinming_ left
[00:11] *** cdarroch left
[00:19] *** googe left
[00:19] *** googe joined
[00:33] *** cotto joined
[00:33] *** Chillance left
[00:34] <colomon> Looks like the relevant evalbot code is in pugs/misc/evalbot/lib/EvalbotExecuter.pm

[00:44] *** meppl left
[00:46] *** ihrd left
[00:47] <pugs_svn> r28632 | lwall++ | [IO] clarify semantics and usage of note() 

[00:48] *** rhr_ joined
[00:51] *** crythias joined
[00:52] *** rhr left
[00:58] *** crythias left
[00:59] *** crythias joined
[01:00] <diakopter> colomon: were you going to make that change?  I can, if you like

[01:01] <colomon> diakopter: I have no idea how to make that change, alas.

[01:01] <colomon> so feel free to!

[01:02] *** SmokeMachine joined
[01:04] * diakopter learned Perl's alarm quite a several years ago.  /me goes to relearn it

[01:04] * sjohnson throws the Perl Album on the CD player

[01:08] <colomon> diakopter: If you want to provide a running narrative of what it takes to do it, I'm all ears.

[01:08] <colomon> :)

[01:09] <sjohnson> i want to buy "The Camel Book, narrated by TimToady" on iTunes

[01:09] *** quietfanatic joined
[01:11] <diakopter> narrated!  lol!  there's a video!!?!?

[01:12] <diakopter> oh

[01:13] *** Whiteknight left
[01:15] <diakopter> colomon: well I'm installing an alarm signal handler that exits with a special error code, which will allegedly appear in $? after wait; is done

[01:16] *** orafu left
[01:16] *** orafu joined
[01:22] <diakopter> evalbot control restart

[01:22] *** p6eval left
[01:22] *** p6eval joined
[01:26] *** SmokeMachine left
[01:27] <colomon> diakopter: so should this be the new evalbot?

[01:28] <diakopter> well

[01:28] <diakopter> I'm testing it

[01:28] <diakopter> didn't seem to work.

[01:31] *** ihrd joined
[01:32] <diakopter> and I broke other stuff :)

[01:32] <diakopter> sec

[01:33] *** alanhaggai joined
[01:33] <diakopter> evalbot control restart

[01:33] *** p6eval left
[01:33] *** p6eval joined
[01:45] <pugs_svn> r28633 | lwall++ | [STD] 

[01:45] <pugs_svn> r28633 | comment out useless file-scoped context declarators

[01:45] <pugs_svn> r28633 | remove all the no-longer-used {*} entries as eyesores

[01:45] <pugs_svn> r28633 | cut down the overview to those notes still in effect

[01:45] <pugs_svn> r28633 | getting readier to refactor sublanguages out to separate files

[01:45] <pugs_svn> r28633 | first to move out will be P5Regex

[01:45] <pugs_svn> r28633 | also planning to move out symbol table and error service routines

[01:46] <diakopter> evalbot control restart

[01:46] *** p6eval left
[01:46] *** p6eval joined
[01:48] *** jaldhar_ joined
[01:53] <diakopter> evalbot control restart

[01:53] *** p6eval left
[01:53] *** p6eval joined
[01:55] *** stephenlb left
[01:58] *** p6eval left
[01:58] *** p6eval joined
[01:59] *** p6eval left
[01:59] *** p6eval joined
[02:00] *** _jaldhar left
[02:00] <crythias> why don't you just call it yoyo

[02:00] <crythias> or elevator

[02:01] *** rhr joined
[02:01] *** ihrd left
[02:02] *** p6eval left
[02:02] *** p6eval joined
[02:04] <quietfanatic> rakudo: sleep 20

[02:04] <p6eval> rakudo d91717: OUTPUT«TIMED_OUT»

[02:06] <colomon> \o/

[02:06] *** p6eval left
[02:06] <colomon> rakudo: say sin(pi+1);

[02:06] <quietfanatic> whoops

[02:07] <quietfanatic> diakopter: did you break evalbot?

[02:07] *** p6eval joined
[02:07] <diakopter> rakudo: say sin(pi+1);

[02:08] <p6eval> rakudo d91717: OUTPUT«-0.841470984807896␤»

[02:08] <diakopter> sprixel: my $a=0; 1 while ++$a < 60000; say $a

[02:08] <diakopter> rakudo: sleep 99999999999999999999999999

[02:08] <p6eval> sprixel 28633: TIMED_OUT

[02:08] <p6eval> rakudo d91717: TIMED_OUT

[02:08] <crythias> raduko: sleep while 1==1;

[02:09] <diakopter> kaduro: wait while fork

[02:09] <quietfanatic> s/raduko/rakudo/

[02:09] <quietfanatic> rakudo: sleep while 1==1

[02:09] <quietfanatic> Actually...

[02:09] <crythias> hee

[02:09] <p6eval> rakudo d91717: TIMED_OUT

[02:09] <quietfanatic> rakudo: sleep

[02:10] <p6eval> rakudo d91717: TIMED_OUT

[02:10] <quietfanatic> is the simplest way.

[02:10] <crythias> sudoku: 1 2 3 7 4 6 9 8 5

[02:10] <quietfanatic> orz

[02:11] <quietfanatic> perl6: sleep

[02:11] <pugs_svn> r28634 | diakopter++ | [evalbot] added a TIMED_OUT message ++quietfanatic ++TimToady ++colomon --diakopter --diakopter --diakopter --diakopter 

[02:11] <p6eval> elf 28633:  ( no output )

[02:11] <p6eval> ..sprixel 28633: OUTPUT«Use of uninitialized value in numeric lt (<) at STD.pm line 40798.␤Use of uninitialized value in numeric gt (>) at STD.pm line 40798.␤Use of uninitialized value in numeric lt (<) at STD.pm line 40798.␤Use of uninitialized value in numeric gt (>) at STD.pm line 40798.␤»

[02:11] <p6eval> ..rakudo d91717: TIMED_OUT

[02:11] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected end of input␤    at /tmp/a9shu8z8ry line 2, column 1␤»

[02:12] <diakopter> std: sleep

[02:12] <quietfanatic> std: sleep

[02:12] <p6eval> std 28633: OUTPUT«Use of uninitialized value in numeric lt (<) at STD.pm line 40798.␤Use of uninitialized value in numeric gt (>) at STD.pm line 40798.␤Use of uninitialized value in numeric lt (<) at STD.pm line 40798.␤Use of uninitialized value in numeric gt (>) at STD.pm line 40798.␤ok 00:02

[02:12] <p6eval> ..105m␤»

[02:12] <p6eval> std 28633: OUTPUT«Use of uninitialized value in numeric lt (<) at STD.pm line 40798.␤Use of uninitialized value in numeric gt (>) at STD.pm line 40798.␤Use of uninitialized value in numeric lt (<) at STD.pm line 40798.␤Use of uninitialized value in numeric gt (>) at STD.pm line 40798.␤ok 00:02

[02:12] <p6eval> ..105m␤»

[02:12] <diakopter> say wha

[02:13] <quietfanatic> pugs: sleep

[02:13] <p6eval> pugs: OUTPUT«*** ␤    Unexpected end of input␤    at /tmp/DzKxbWJcja line 2, column 1␤»

[02:14] <diakopter> if ($arg->{'_from'} < $op->{'_from'}) { # postfix

[02:14] <diakopter> pugs: sleep 2

[02:14] <p6eval> pugs: OUTPUT«*** Unsafe function 'sleep' called under safe mode␤    at /tmp/tEgcUZjCnE line 1, column 1 - line 2, column 1␤»

[02:14] <diakopter> pugs: sleep()

[02:14] <p6eval> pugs: OUTPUT«*** No compatible multi variant found: "&sleep"␤    at /tmp/ZtnQVDklbj line 1, column 1 - line 2, column 1␤»

[02:14] <diakopter> pugs: sleeple

[02:14] <p6eval> pugs: OUTPUT«*** No such subroutine: "&sleeple"␤    at /tmp/BSuiRN0jiR line 1, column 1 - line 2, column 1␤»

[02:14] *** rhr_ left
[02:15] <crythias> sprixel: function shake(mymoneymaker)

[02:15] <p6eval> sprixel 28633: OUTPUT«Undeclared routines:␤      function used at line 1␤  mymoneymaker used at line 1␤      shake used at line 1␤»

[02:18] <diakopter> 1517 occurences of  if $::DEBUG  in STD.pmc.... I wonder if those were commented out...

[02:18] <TimToady> you might get a % or two

[02:19] *** frodwith left
[02:19] *** frodwith joined
[02:22] *** Woodi left
[02:22] *** Woodi joined
[02:27] <diakopter> std: my $a=0; 1 while ++$a < 40000; say $a

[02:27] <p6eval> std 28634: OUTPUT«ok 00:02 103m␤»

[02:27] <diakopter> std: "function ()"

[02:27] <p6eval> std 28634: OUTPUT«ok 00:03 94m␤»

[02:27] <diakopter> std: "function (){ }"

[02:27] <p6eval> std 28634: OUTPUT«ok 00:02 94m␤»

[02:27] <diakopter> std: "function (){ say 4 }"

[02:28] <p6eval> std 28634: OUTPUT«ok 00:02 95m␤»

[02:28] <diakopter> std: "function (){ say $a }"

[02:28] <p6eval> std 28634: OUTPUT«Potential difficulties:␤  Variable $a is not predeclared at /tmp/5N2NAPOeJX line 1:␤------> [32m"function (){ say $a[33m⏏[31m }"[0m␤ok 00:02 97m␤»

[02:28] <quietfanatic> Wait, is function a keyword?

[02:28] <diakopter> std: "function (){ gripe $a }"

[02:28] <p6eval> std 28634: OUTPUT«Potential difficulties:␤  Variable $a is not predeclared at /tmp/p8snJ6O1et line 1:␤------> [32m"function (){ gripe $a[33m⏏[31m }"[0m␤Undeclared routine:␤ gripe used at line 1␤ok 00:02 97m␤»

[02:28] * quietfanatic didn't notice the quotes

[02:28] <diakopter> std: "function (){ gripe \$a }"

[02:28] <p6eval> std 28634: OUTPUT«Potential difficulties:␤  Variable $a is not predeclared at /tmp/etcVLvZovE line 1:␤------> [32m"function (){ gripe \$a[33m⏏[31m }"[0m␤Undeclared routine:␤        gripe used at line 1␤ok 00:02 97m␤»

[02:28] <quietfanatic> Hohoh!

[02:29] <diakopter> hohos are tasty

[02:29] <quietfanatic> Bet you've never had hohohs though.

[02:29] <diakopter> no

[02:31] <diakopter> std: 

[02:31] <diakopter> std:  

[02:32] <quietfanatic> rakudo: sleep

[02:32] <p6eval> rakudo d91717: TIMED_OUT

[02:32] <TimToady> why _?

[02:33] <diakopter> oh

[02:33] <diakopter> I don't kown

[02:34] *** envi^home joined
[02:34] <diakopter> EOUTTATIME

[02:35] <diakopter> EOUTATIME

[02:36] <diakopter> http://www.entertainmentearth.com/images/%5CAUTOIMAGES%5CDC21010lg.jpg

[02:37] <diakopter> http://images.forum-auto.com/mesimages/327677/outatime.jpg

[02:38] *** avuserow_ is now known as avuserow

[02:39] <diakopter> rakudo: my $a='99'; say \\$a

[02:39] <p6eval> rakudo d91717: OUTPUT«99␤»

[02:40] <quietfanatic> rakudo: my $a='99'; say (\\$a).WHAT

[02:40] <p6eval> rakudo d91717: OUTPUT«Str()␤»

[02:40] <quietfanatic> Shouldn't that be Capture or something?

[02:40] <quietfanatic> rakudo: my $a='99'; say (\($a)).WHAT

[02:40] <p6eval> rakudo d91717: OUTPUT«Str()␤»

[02:40] <quietfanatic> Now that really ought to be Capture().

[02:41] <quietfanatic> unless the \() notation is gone.

[02:41] <quietfanatic> rakudo: my $a='99'; say (¢($a)).WHAT

[02:41] <p6eval> rakudo d91717: OUTPUT«say requires an argument at line 2, near " (\x{a2}($a)).W"␤in Main (src/gen_setting.pm:2562)␤»

[02:42] <quietfanatic> rakudo: my $a='99'; say (@%($a)).WHAT

[02:42] <p6eval> rakudo d91717: OUTPUT«say requires an argument at line 2, near " (@%($a))."␤in Main (src/gen_setting.pm:2562)␤»

[02:45] <diakopter> std: /''/

[02:45] <p6eval> std 28634: OUTPUT«ok 00:01 94m␤»

[02:45] <quietfanatic> std: //

[02:45] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null regex not allowed at /tmp/nqn0HhMfgR line 1:␤------> [32m//[33m⏏[31m<EOL>[0m␤FAILED 00:01 93m␤»

[02:45] <quietfanatic> That's what's not allowed.

[02:46] <quietfanatic> std: /|/

[02:46] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/U6ABzFhIVy line 1:␤------> [32m/|[33m⏏[31m/[0m␤    expecting any of:␤      termish␤ ws␤FAILED 00:02 94m␤»

[02:46] <quietfanatic> std: /|3|4/

[02:46] <p6eval> std 28634: OUTPUT«ok 00:01 94m␤»

[02:46] <quietfanatic> std: /|3|4|/

[02:46] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/o1oPLRx6ba line 1:␤------> [32m/|3|4|[33m⏏[31m/[0m␤    expecting any of:␤  termish␤ ws␤FAILED 00:02 94m␤»

[02:46] <diakopter> std: /[]/

[02:46] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/jGZtAbMVTp line 1:␤------> [32m/[[33m⏏[31m]/[0m␤    expecting any of:␤     termish␤ ws␤FAILED 00:03 94m␤»

[02:46] <diakopter> std: /|[]/

[02:46] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/XBtGxu9Alh line 1:␤------> [32m/|[[33m⏏[31m]/[0m␤    expecting any of:␤    termish␤ ws␤FAILED 00:02 94m␤»

[02:46] <quietfanatic> std: /[<?>]/

[02:47] <p6eval> std 28634: OUTPUT«ok 00:02 95m␤»

[02:47] <diakopter> std: /||/

[02:47] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/JHp770wPSp line 1:␤------> [32m/||[33m⏏[31m/[0m␤    expecting any of:␤     termish␤ ws␤FAILED 00:01 94m␤»

[02:47] <quietfanatic> std: /</

[02:47] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/So3g3UXPOk line 1:␤------> [32m/<[33m⏏[31m/[0m␤    expecting any of:␤  assertion␤        name␤FAILED 00:01 95m␤»

[02:47] <diakopter> std: />/

[02:47] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unmatched closing bracket at /tmp/ic7IMIggDm line 1:␤------> [32m/[33m⏏[31m>/[0m␤    expecting any of:␤     regex atom␤       regex_infix␤      termish␤        ws␤FAILED 00:01 94m␤»

[02:47] <quietfanatic> std: /</>/

[02:47] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/AfPSobainj line 1:␤------> [32m/<[33m⏏[31m/>/[0m␤    expecting any of:␤        assertion␤        name␤FAILED 00:01 94m␤»

[02:47] <diakopter> std: /<>/

[02:47] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/tTn3ZMTrhR line 1:␤------> [32m/<[33m⏏[31m>/[0m␤    expecting any of:␤ assertion␤        name␤FAILED 00:01 94m␤»

[02:47] <diakopter> std: /<:>/

[02:47] <quietfanatic> std: /<??>/

[02:47] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/9h0LlTyyT6 line 1:␤------> [32m/<[33m⏏[31m:>/[0m␤    expecting any of:␤        assertion␤        name␤FAILED 00:01 94m␤»

[02:47] <p6eval> std 28634: OUTPUT«ok 00:01 94m␤»

[02:48] <diakopter> std: /<:?>/

[02:48] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/Y6C9TqEBg1 line 1:␤------> [32m/<[33m⏏[31m:?>/[0m␤    expecting any of:␤       assertion␤        name␤FAILED 00:02 94m␤»

[02:48] <quietfanatic> std: /<???>/

[02:48] <p6eval> std 28634: OUTPUT«ok 00:02 97m␤»

[02:48] <quietfanatic> std: /<??????????????????>/

[02:48] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/UMVdLmZHFk line 1:␤------> [32m/<???[33m⏏[31m???????????????>/[0m␤FAILED 00:01 96m␤»

[02:48] <quietfanatic> TimToady well?

[02:48] <diakopter> std: /<???!!!>/

[02:48] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/9wP7ekbcnX line 1:␤------> [32m/<???[33m⏏[31m!!!>/[0m␤FAILED 00:01 96m␤»

[02:48] <diakopter> std: /<??!!>/

[02:48] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:49] <quietfanatic> std: /<????>/

[02:49] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/M3TFAzvN20 line 1:␤------> [32m/<???[33m⏏[31m?>/[0m␤FAILED 00:02 96m␤»

[02:49] <diakopter> std: /<0??1!!2>/

[02:49] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/hWOqvAsMOm line 1:␤------> [32m/<[33m⏏[31m0??1!!2>/[0m␤    expecting any of:␤  assertion␤        name␤FAILED 00:01 96m␤»

[02:49] <diakopter> std: /<<>>/

[02:49] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:49] <diakopter> std: /<<<>>>/

[02:49] <quietfanatic> std: /<? ???>/

[02:49] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/8b1GjEP7wt line 1:␤------> [32m/<<<[33m⏏[31m>>>/[0m␤    expecting any of:␤     assertion␤        name␤FAILED 00:01 96m␤»

[02:49] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex assertion at /tmp/dgLnVlYQNW line 1:␤------> [32m/<?[33m⏏[31m ???>/[0m␤    expecting any of:␤    assertion␤        name␤FAILED 00:01 96m␤»

[02:49] <quietfanatic> std: /<!?>/

[02:50] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:50] <diakopter> std: !/&/

[02:50] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/oeVsMTZRg4 line 1:␤------> [32m!/&[33m⏏[31m/[0m␤    expecting any of:␤     termish␤ ws␤FAILED 00:01 99m␤»

[02:50] <quietfanatic> std: /<!??>/

[02:50] <diakopter> std: !/&&/

[02:50] <p6eval> std 28634: OUTPUT«ok 00:02 96m␤»

[02:50] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/f2XWaPr8XF line 1:␤------> [32m!/&&[33m⏏[31m/[0m␤    expecting any of:␤    termish␤ ws␤FAILED 00:03 99m␤»

[02:50] <diakopter> std: !/&<?>/

[02:50] <p6eval> std 28634: OUTPUT«ok 00:01 100m␤»

[02:50] <diakopter> std: /&&<?>/

[02:50] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:50] <diakopter> std: /&&/

[02:51] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/u8oxJZoNEr line 1:␤------> [32m/&&[33m⏏[31m/[0m␤    expecting any of:␤     termish␤ ws␤FAILED 00:01 96m␤»

[02:51] <quietfanatic> std: /<!!>/

[02:51] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:51] <quietfanatic> std: /<!!!>/

[02:51] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:51] <quietfanatic> std: /<!!!!>/

[02:51] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/Vz1aYGipBB line 1:␤------> [32m/<!!![33m⏏[31m!>/[0m␤FAILED 00:01 96m␤»

[02:51] <diakopter> one might think we're trying to fill irclog's db

[02:51] <quietfanatic> std: /<?!>/

[02:51] <p6eval> std 28634: OUTPUT«ok 00:02 96m␤»

[02:51] <quietfanatic> std: /<!???>/

[02:51] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:52] *** cotto left
[02:52] *** cottoo joined
[02:52] <quietfanatic> std: /<!????>/

[02:52] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/wJs2KjL7VY line 1:␤------> [32m/<!???[33m⏏[31m?>/[0m␤FAILED 00:01 96m␤»

[02:52] <quietfanatic> std: /<!!???>/

[02:52] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:52] <quietfanatic> std: /<!!!???>/

[02:52] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/IKYhq9wrup line 1:␤------> [32m/<!!![33m⏏[31m???>/[0m␤FAILED 00:01 96m␤»

[02:53] <quietfanatic> I don't quite understand what rules it's using here.

[02:54] <diakopter> one could read the grammar. or the spec.  wait, whom am I kidding?

[02:54] <quietfanatic> I SHALL READ THE GRAMMAR!

[02:54] *** cottoo left
[02:54] *** _jaldhar_ joined
[02:55] *** cotto joined
[02:55] *** Util joined
[02:57] <diakopter> std: \

[02:57] <p6eval> std 28634: OUTPUT«ok 00:02 96m␤»

[02:57] <quietfanatic> What's so funny about unspace?

[02:58] <quietfanatic> std: /\/

[02:58] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤Regex missing terminator at /tmp/lRUdWIjfGH line 1 (EOF):␤------> [32m/\/[33m⏏[31m<EOL>[0m␤FAILED 00:02 97m␤»

[02:58] <diakopter> std: \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

[02:58] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[02:58] <quietfanatic> std: /\ /

[02:58] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤No unspace allowed in regex (for literal please quote with single quotes) at /tmp/VgK3nB7bBq line 1:␤------> [32m/\[33m⏏[31m /[0m␤FAILED 00:01 96m␤»

[02:58] <quietfanatic> cute!

[02:58] <diakopter> std: /\' '/

[02:59] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤(Possible runaway string from line 1)␤Unable to parse regex; couldn't find final '/' at /tmp/449eWG0Pj0 line 1 (EOF):␤------> [32m/\' '/[33m⏏[31m<EOL>[0m␤    expecting escape␤FAILED 00:01 96m␤»

[03:00] <quietfanatic> std: /\' '\/ \/' \'/

[03:00] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[03:00] <quietfanatic> According to what I understand from the grammar, /<!!!!>/ should parse.

[03:00] <diakopter> std: /\' '/\'/'\/ '/'\//\ 

[03:00] <p6eval> std 28634: OUTPUT«ok 00:01 96m␤»

[03:01] <quietfanatic> std: /<!!!!>/

[03:01] <p6eval> std 28634: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/85tGHxoNmt line 1:␤------> [32m/<!!![33m⏏[31m!>/[0m␤FAILED 00:01 96m␤»

[03:02] <diakopter> TimToady: std uses 96MiB with the $::DEBUG lines; 75MiB without them

[03:02] <quietfanatic> It should parse as assertion:<!> containing assertion:<!!!>.

[03:02] <diakopter> wait, no.  94MiB without them.

[03:03] <diakopter> sry

[03:03] <quietfanatic> Still, 2 meggers is significant.

[03:06] *** jaldhar_ left
[03:06] *** RoomsUser_ joined
[03:09] <quietfanatic> sprixel: say (1, 2, (3, 4), 5).map(*+1).perl

[03:09] <p6eval> sprixel 28634: OUTPUT«Sprixel Error: real method calls NYI␤»

[03:11] *** RoomsUser_ left
[03:31] <pugs_svn> r28635 | kyle++ | [t/spec] Test for RT #69460 

[03:31] <pugs_svn> r28636 | kyle++ | [t/spec] Test for RT #69378 

[03:36] *** tak11 left
[03:48] *** crythias left
[03:52] <pugs_svn> r28637 | lwall++ | [STD] fix P5Regex quantified atom capture just like we did Regex yesterday 

[03:55] *** sparc joined
[04:02] *** mberends joined
[04:06] * mberends enjoys an exciting backlog and looks forward to committing sprixel's test harness from $work

[04:07] <quietfanatic> Okay, /<!!!!>/ should fail, but not with that error message.

[04:07] <quietfanatic> std: /<!!!!>/

[04:08] <p6eval> std 28636: OUTPUT«[31m===[0mSORRY![31m===[0m␤regex assertion not terminated by angle bracket at /tmp/mbiQ0pPcBZ line 1:␤------> [32m/<!!![33m⏏[31m!>/[0m␤FAILED 00:02 97m␤»

[04:08] <quietfanatic> Well, maybe it should.

[04:08] <quietfanatic> Grr.

[04:14] *** alanhaggai left
[04:22] *** baest left
[04:23] *** Util left
[04:28] *** colomon left
[04:42] *** nihiliad left
[04:48] *** baest joined
[04:54] <pugs_svn> r28638 | lwall++ | [STD] break P5Regex grammar out from STD to separate file 

[04:54] <pugs_svn> r28638 | P5 grammar will only be loaded on demand

[05:23] *** zaphar_ps left
[05:26] *** justatheory left
[05:33] *** nbrown_ joined
[05:40] *** zloyrusskiy joined
[05:45] *** eternaleye left
[05:48] *** ssm is now known as ssm_

[05:48] *** ssm_ is now known as ssm

[05:51] *** nbrown left
[06:06] *** zerhash left
[06:08] *** eternaleye joined
[06:19] *** hercynium left
[06:26] *** mberends left
[06:39] *** rfordinal3643 left
[06:41] *** eternaleye left
[06:42] *** colomon joined
[06:49] *** rfordinal joined
[06:51] <moritz_> \o/

[06:51] <diakopter> moritz_: hi

[06:52] <diakopter> rakudo: sleep 20

[06:52] <p6eval> rakudo d91717: TIMED_OUT

[06:52] <diakopter> sprixel: loop (;1;) {}

[06:53] <p6eval> sprixel 28638: OUTPUT«Sprixel Error: /_undefined_/ not yet implemented; apologies from the crew!␤»

[06:53] <quietfanatic> :)

[06:53] *** mberends joined
[06:53] <diakopter> wait wha

[06:53] <diakopter> pika FIRE

[06:54] <diakopter> PK FIRE

[06:54] <quietfanatic> It's PK fire.

[06:54] <quietfanatic> Yeah.

[06:54] <diakopter> oh.

[06:54] <diakopter> sprixel: 1 while 1

[06:54] <p6eval> sprixel 28638: TIMED_OUT

[06:54] <quietfanatic> That won't keep running like the rakudo: sleep did, will it?

[06:54] <mberends> diakopter: R U ready to merge Test.pm.js ?

[06:54] <diakopter> checking

[06:55] <diakopter> mberends: whaddya mean merge

[06:55] <mberends> I'm about to commit some changes - hopefully they don't collide with anything you're doing in that file

[06:55] <carlin> rakudo: 'foo' ~~ /<ws>*/;

[06:55] <diakopter> haven't done anything

[06:56] <p6eval> rakudo d91717: TIMED_OUT

[06:56] <mberends> ok, preparing commit...

[06:56] <diakopter> carlin: it's rebuilding rakudo atm... does that repeat forever for you?

[06:56] <quietfanatic> it may be matching the zero-width pattern infinite times

[06:56] <carlin> diakopter: Yip

[06:57] <diakopter> oh

[06:58] <diakopter> moritz_: g'morning

[06:58] <moritz_> good morning

[07:01] <mberends> :) moritz_

[07:01] <diakopter> std: say 'I\'m faster now'

[07:02] <p6eval> std 28638: OUTPUT«ok 00:01 95m␤»

[07:02] <diakopter> o wait

[07:02] <moritz_> I've seen the TIMEOUT changes to p6eval in the backlog - diakopter++

[07:04] <diakopter> TimToady wants the _ removed

[07:05] <diakopter> and maybe the D as well

[07:05] <pugs_svn> r28639 | mberends++ | [sprixel] first cut at skip(), 'make spectest' improved 

[07:06] <diakopter> ++quietfanatic figured out the 'exit 14' -> $? == 14  thing

[07:10] *** mariuz joined
[07:13] <diakopter> phenny: tell diakopter g'morning

[07:13] <phenny> You can tell yourself that.

[07:13] *** diakopter is now known as diakopter_

[07:13] <diakopter_> phenny: tell diakopter g'morning

[07:13] <phenny> diakopter_: I'll pass that on when diakopter is around.

[07:13] *** diakopter_ is now known as diakopter

[07:18] <avuserow> rakudo: say 1 + "nancy"

[07:18] <p6eval> rakudo d91717: OUTPUT«1␤»

[07:18] <avuserow> rakudo: say "nancy" + 1

[07:18] <p6eval> rakudo d91717: OUTPUT«1␤»

[07:18] <avuserow> rakudo: say "NaNcy" + 1

[07:18] <p6eval> rakudo d91717: OUTPUT«1␤»

[07:18] <avuserow> perl6: say "nancy" + 1

[07:19] <p6eval> pugs, rakudo d91717: OUTPUT«1␤»

[07:19] <p6eval> ..elf 28639: OUTPUT«Argument "\x{6e}\x{61}..." isn't numeric in addition (+) at (eval 124) line 3.␤nan␤»

[07:19] <p6eval> ..sprixel 28639: OUTPUT«Sprixel Error: TypeError: Object nancy has no method 'do_Additive'␤»

[07:19] *** eiro_ is now known as eiro

[07:22] *** TiMBuS joined
[07:27] *** snearch joined
[07:29] <avuserow> perl6: say undef + 1

[07:30] <p6eval> sprixel 28639: OUTPUT«Sprixel Error: /_term__S_undef_/ not yet implemented; apologies from the crew!␤»

[07:30] <p6eval> ..pugs: OUTPUT«1␤»

[07:30] <p6eval> ..rakudo d91717: OUTPUT«Use of uninitialized value␤1␤»

[07:30] <p6eval> ..elf 28639: OUTPUT«␤»

[07:30] <avuserow> perl6: say undef ~ 1

[07:30] <p6eval> sprixel 28639: OUTPUT«Sprixel Error: /_term__S_undef_/ not yet implemented; apologies from the crew!␤»

[07:30] <p6eval> ..pugs: OUTPUT«1␤»

[07:30] <p6eval> ..rakudo d91717: OUTPUT«Use of uninitialized value␤1␤»

[07:30] <p6eval> ..elf 28639: OUTPUT«␤»

[07:31] <avuserow> rakudo: my Str $a = "Nancy"; my Int $b = 1; say $a + $b

[07:31] <p6eval> rakudo d91717: OUTPUT«1␤»

[07:31] <avuserow> pugs: my Str $a = "Nancy"; my Int $b = 1; say $a + $b

[07:31] <p6eval> pugs: OUTPUT«1␤»

[07:31] <avuserow> sprixel: my Str $a = "Nancy"; my Int $b = 1; say $a + $b

[07:31] <p6eval> sprixel 28639: OUTPUT«Sprixel Error: TypeError: Cannot read property 'M' of undefined␤»

[07:31] <avuserow> elf: my Str $a = "Nancy"; my Int $b = 1; say $a + $b

[07:31] <p6eval> elf 28639: OUTPUT«Argument "\x{4e}\x{61}..." isn't numeric in addition (+) at (eval 123) line 5.␤nan␤»

[07:34] <moritz_> dukeleto++ # http://google-opensource.blogspot.com/2009/10/perls-of-wisdom-perl-foundation-parrots.html

[07:43] *** rfordinal left
[07:54] *** iblechbot joined
[08:15] *** szabgab left
[08:17] *** bionoid joined
[08:18] *** synth left
[08:25] <jnthn> oh morning

[08:27] *** moritz_ sets mode: +o jnthn

[08:27] <moritz_> \o/

[08:31] *** xinming left
[08:34] <Matt-W> \o/ jnthn

[08:35] * jnthn will make his first Rakudo commit in over a month later on today. :-)

[08:35] <Matt-W> WHEEEEEEEEE

[08:36] <Matt-W> is it huge and exciting?

[08:37] * Matt-W may be suffering from morning giddiness and exciteability

[08:38] <jnthn> Matt-W: Not yet

[08:38] * jnthn hasn't even written the content of first commit yet ;-)

[08:38] *** NorwayGeek left
[08:38] *** NorwayGeek joined
[08:40] <Matt-W> :(

[08:42] *** payload left
[08:42] <jnthn> Matt-W: Don't worry. Huge and exciting will be on the way.

[08:44] <Matt-W> hurrah

[08:47] *** xinming joined
[08:48] *** payload joined
[08:53] *** meppl joined
[08:54] *** snearch left
[08:56] * spinclad poings around the room like an alleged ferret

[08:58] <spinclad> ^v^ 'huge and exciting,' v^v 'my natural state' ^v^

[09:11] *** mberends left
[09:11] *** p6eval left
[09:11] *** Eevee left
[09:11] *** kcwu left
[09:11] *** lisppaste3 left
[09:11] *** yves left
[09:11] *** omega left
[09:11] *** Trey left
[09:11] *** kst left
[09:11] *** rhr left
[09:11] *** japhb left
[09:11] *** FOAD left
[09:11] *** jjore_ left
[09:11] *** rjh left
[09:11] *** kolibrie left
[09:11] *** Helios- left
[09:11] *** NorwayGeek left
[09:11] *** nbrown_ left
[09:11] *** Confield left
[09:11] *** jrtayloriv left
[09:11] *** [particle] left
[09:11] *** silug left
[09:11] *** araujo left
[09:11] *** kidd_ left
[09:11] *** dalek left
[09:11] *** cxreg left
[09:11] *** Rint left
[09:11] *** nothingmuch left
[09:11] *** diakopter left
[09:11] *** mikehh left
[09:11] *** allbery_b left
[09:11] *** andreasg1 left
[09:11] *** viklund_ left
[09:11] *** michaelr_ left
[09:11] *** tylerni7 left
[09:11] *** Intensity left
[09:11] *** blaze-x left
[09:11] *** garron left
[09:11] *** Infinoid left
[09:11] *** broquaint left
[09:11] *** clkao left
[09:11] *** buu left
[09:11] *** ewilhelm left
[09:11] *** dmpk2k left
[09:11] *** integral left
[09:12] *** nbrown_ joined
[09:12] *** p6eval joined
[09:12] *** rhr joined
[09:12] *** Confield joined
[09:12] *** japhb joined
[09:12] *** Eevee joined
[09:12] *** kcwu joined
[09:12] *** jrtayloriv joined
[09:12] *** mikehh joined
[09:12] *** FOAD joined
[09:12] *** [particle] joined
[09:12] *** silug joined
[09:12] *** araujo joined
[09:12] *** lisppaste3 joined
[09:12] *** Trey joined
[09:12] *** kidd_ joined
[09:12] *** yves joined
[09:12] *** allbery_b joined
[09:12] *** omega joined
[09:12] *** andreasg1 joined
[09:12] *** michaelr_ joined
[09:12] *** viklund_ joined
[09:12] *** dalek joined
[09:12] *** kst joined
[09:12] *** jjore_ joined
[09:12] *** cxreg joined
[09:12] *** nothingmuch joined
[09:12] *** diakopter joined
[09:12] *** tylerni7 joined
[09:12] *** Intensity joined
[09:12] *** Rint joined
[09:12] *** Helios- joined
[09:12] *** kolibrie joined
[09:12] *** rjh joined
[09:12] *** broquaint joined
[09:12] *** dmpk2k joined
[09:12] *** Infinoid joined
[09:12] *** buu joined
[09:12] *** garron joined
[09:12] *** blaze-x joined
[09:12] *** integral joined
[09:12] *** clkao joined
[09:12] *** ewilhelm joined
[09:13] *** NorwayGeek joined
[09:15] *** rfordinal joined
[09:17] *** bionoid left
[09:22] *** [particle]1 joined
[09:24] *** masak joined
[09:31] *** yahooooo left
[09:32] *** [particle] left
[09:34] <carlin> I hate it when I think I've discovered a bug but can't test it through p6eval

[09:35] <carlin> Oh!

[09:35] <carlin> rakudo: class Foo { use Test; }

[09:35] <p6eval> rakudo d91717: TIMED_OUT

[09:36] <carlin> No ...

[09:36] <carlin> rakudo: class Foo { use Test; }

[09:36] <p6eval> rakudo d91717: TIMED_OUT

[09:41] *** yahooooo joined
[09:43] *** riffraff joined
[09:47] <carlin> http://gist.github.com/202884 # known?

[09:49] <masak> don't think so.

[09:49] <phenny> masak: 05 Oct 23:29Z <Tene> tell masak You should add weblocks to your list of web frameworks to look at.

[09:49] *** mberends joined
[09:51] *** bionoid joined
[09:51] *** rfordinal left
[09:52] <masak> ooh! another continuations-based framework!

[09:54] <Tene> I've heard very good things about weblocks.  Very high praise.

[09:54] <Tene> afk sleep

[09:55] <Matt-W> oooh

[09:55] <Matt-W> I liked the look of Seaside

[09:55] <Matt-W> but I didn't really want to have to deal with a Smalltalk environment

[10:01] <Matt-W> Be nice to have something like that in Perl 6

[10:02] <Matt-W> "When the user clicks on the appropriate link (or button), Weblocks maps the click back to the callback. If the callback is a lexical closure, the programmer will have the full context in which the closure was created despite the fact that it was created during a completely different HTTP request" yum

[10:03] *** rfordinal joined
[10:12] *** riffraff left
[10:25] *** rfordinal left
[10:33] *** sri_ left
[10:33] *** sri_ joined
[10:34] *** riffraff joined
[10:34] *** yahooooo left
[10:46] *** ruoso left
[11:07] *** huf_ joined
[11:18] *** huf left
[11:32] *** ruoso joined
[11:56] *** iblechbot left
[11:57] <carlin> http://github.com/carlins/mwbot # Now using JSON

[11:57] <carlin> 'Night all

[11:57] <masak> carlin: oops, my bad. it was reported. http://rt.perl.org/rt3/Ticket/Display.html?id=64688 -- marking as duplicate.

[12:05] <masak> can we consider changing the white text on yellow background to black on yellow in http://perl6.org/ ?

[12:06] <moritz_> as long as all the >>MORE<< links have the same color, yes

[12:06] <moritz_> don't know if black is best

[12:07] <masak> there needs to be more contrast, at least.

[12:07] <masak> jonalv++, my colleague, pointed this out.

[12:08] <moritz_> then please go ahead

[12:08] * masak changes all the >>MORE<< links to a darker color

[12:12] * moritz_ hopes that masak++ just has to change a few lines of CSS

[12:12] *** takadonet joined
[12:12] <takadonet> morning all

[12:18] *** Util joined
[12:20] <moritz_> masak: maybe the dark blue from camelia's link might be a good color

[12:20] <masak> good idea. I'll try that.

[12:21] <masak> waitaminute, which dark blue?

[12:21] <masak> there's one white link in the header, and one black.

[12:23] <masak> a darkish blue works quite well, though. I'll commit that.

[12:23] *** rgrau joined
[12:24] <moritz_> I meant the blue from the 6 and 9 and camelia's wings

[12:25] *** [particle]1 left
[12:25] <masak> oh, "wings", not "link". now I get it.

[12:26] * moritz_ a bit distracted. Sorry.

[12:26] <pugs_svn> r28640 | masak++ | [perl6.org] made links dark blue instead of white 

[12:26] <pugs_svn> r28640 | 

[12:26] <pugs_svn> r28640 | The white didn't contrast enough with the pale yellow background in

[12:26] <pugs_svn> r28640 | some of the boxes.

[12:26] <moritz_> got a new colleage from the Ukraine, and so far I found at least 3 different mis-spellings of his name in that various departments

[12:30] *** szabgab joined
[12:31] *** sundar joined
[12:32] <jnthn> moritz_: Because it was transliterated in 3 different ways? :-)

[12:33] <moritz_> jnthn: yes

[12:34] <slavik2> moritz_: sounds about right ... what's his name?

[12:34] <jnthn> moritz_: There's more than one way to translit it. :-)

[12:34] <jnthn> moritz_: Is it really too hard to just use the cyrillic? ;-)

[12:35] <slavik2> haha

[12:35] *** synth joined
[12:35] <slavik2> my name makes much more sense in Cyrillic than in Latin

[12:35] <masak> Cyrillic makes much more sense in Cyrillic than in Latin.

[12:36] <jnthn> Ес, бут латин ин сириллик ис од.

[12:38] <moritz_> I don't know his cyrillic name, and it's hardly my place to give away

[12:40] <moritz_> but the administration people are oddly attached to latin here

[12:41] <jnthn> Righty. Rakudo time!

[12:45] <moritz_> jnthn: so what are you working on today?

[12:45] <jnthn> moritz_: Initial pieces towards signature handling changes.

[12:46] <moritz_> jnthn: great. Has you grant been approved?

[12:46] <jnthn> moritz_: Yes.

[12:47] <moritz_> even better!

[12:47] <jnthn> moritz_: But not announced on news.perlfoundation.org yet, but I got email saying it has been.

[12:47] <moritz_> just wanted to write that it hasn't been announced :)

[12:47] <jnthn> Yeah

[12:47] <jnthn> I'm sure TPF will get to it.

[12:48] * jnthn gets a clean Parrot tree built, since the updated one SEGV'd somehow.

[12:49] <masak> Rakudo time! \o/

[12:50] *** ruoso left
[12:51] * jnthn really hopes this Parrot build works...

[12:52] <jnthn> AARRRGH!

[12:52] <jnthn>         .\miniparrot.exe config_lib.pasm > runtime\parrot\include\config.fpmc

[12:53] <jnthn> NMAKE : fatal error U1077: '.\miniparrot.exe' : return code '0xc0000005'

[12:53] <jnthn> miniparrot.exe segfaults.

[12:53] <masak> :/

[12:53] <moritz_> trunk HEAD?

[12:54] <jnthn> moritz_: Whatever PARROT_REVISION wants, I just did a clean --gen-parrot

[12:54] <jnthn> Nuked my tree and all that lot.

[12:54] <jnthn> So it's not leftovers.

[12:55] <moritz_> did you also delete parrot_install/ ?

[12:55] <moritz_> anyway, we could just as well dump PARROT_REVISION to current HEAD to get some testing

[12:56] <jnthn> moritz_: yup

[12:56] <jnthn> moritz_: trying head now

[12:56] <moritz_> s/dump/bump/

[12:58] <jnthn> .oO( we could just as well dump parrot... )

[12:58] *** yahooooo joined
[13:03] <jnthn> OK, so

[13:03] <jnthn> turns out we switched to optimized Parrot by defualt.

[13:07] <masak> "fast but wrong"?

[13:07] <jnthn> More like "fails to build quite fast" :-)

[13:07] <jnthn> That is, Parrot fails to build. Doesn't evne get to building Rakudo.

[13:08] <Matt-W> doh

[13:08] *** [particle] joined
[13:09] *** SmokeMachine joined
[13:11] <moritz_> so, what's up with proto?

[13:11] <moritz_> specifically with the installed-modules branch

[13:12] *** zloyrusskiy left
[13:16] <mberends> er, sorry sir, I found this toy called sprixel and forgot about proto... temporarily :/

[13:16] <masak> :)

[13:16] <mberends> it's a damn good excuse imho

[13:17] <moritz_> aye

[13:17] <masak> moritz_: I'm reading the TODO list at the end of the proto script. it seems to be coming along nicely. up to step 11 completely done. step 12 part done.

[13:17] <masak> mberends++

[13:17] <masak> I'm thinking of givein that branch a spin. I'm looking forward to the benefits a centralized lib/ will bring.

[13:18] *** xinming_ joined
[13:20] *** xinming left
[13:21] <mberends> masak: we can rendezvous in proto later in the week, tuits permitting

[13:21] <dalek> rakudo: f845ccf | jonathan++ | Configure.pl:

[13:21] <dalek> rakudo: On Win32, the optimized Parrot does not even build, so don't do --optimize on Win32 for now.

[13:21] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/f845ccf9b0766518c8fd2f4522fc6ac1afb5bb22

[13:22] <masak> mberends: aye. for great justice.

[13:22] <mberends> masak: and world peace.

[13:22] <masak> mberends: I'll also see if I can't sneak in a few tuits for the temporal-flux implementation.

[13:22] <masak> mberends: yes, but someone set up us the bomb.

[13:23] *** iblechbot joined
[13:23] <mberends> masak: urghh :(

[13:23] <masak> did I mention recently how extremely unhelpful the line 'in Main (src/gen_setting.pm:3468)' is?

[13:23] <masak> it contains negative usefulness.

[13:31] <colomon> masak: It is correct, isn't it?  I mean, you could look up src/gen_setting.pm:3468 and figure out what file the problem actually was in.

[13:31] <colomon> (disclaimer: not that I have tried this myself, mind you.  I always just look where I've just made the change.)

[13:32] <jnthn> No, it seems tos how that on parse errors, so it's useless.

[13:32] <masak> nod.

[13:34] <colomon> Oh, it's the last line of the file.  I see.

[13:34] <colomon> negative usefulness indeed.

[13:35] <masak> I've ticketed it, but I seemed to have excess LTA rage inside me.

[13:35] <masak> I feel better now.

[13:36] *** PacoLinux left
[13:37] *** PacoLinux joined
[13:39] <Matt-W> masak: breathe deeply

[13:39] <Matt-W> It is very much less than awesome

[13:39] <Matt-W> But we will survive the dark time

[13:39] <Matt-W> and one day rejoice when it goes away

[13:40] <masak> \o/

[13:40] <Matt-W> does pmichaud's new rx engine have amazing error reporting potential?

[13:40] <masak> possibly. it's supposed to bring us closer to STD.pm, so...

[13:41] * jnthn digs into some refactoring.

[13:41] <jnthn> oh man, where to start...

[13:41] <Util> perl6 .say for @*INC;

[13:42] <Util> perl6: .say for @*INC;

[13:42] <p6eval> rakudo f845cc: OUTPUT«/home/p6eval/.perl6/lib␤/home/p6eval//p1/lib/parrot/1.6.0-devel/languages/perl6/lib␤lib␤.␤»

[13:42] <p6eval> ..elf 28640: OUTPUT«Use of uninitialized value in concatenation (.) or string at ./elf_h line 5105.␤syntax error at (eval 122) line 4, near "{␤->say"␤ at ./elf_h line 5881␤»

[13:42] <p6eval> ..sprixel 28640: OUTPUT«Sprixel Error: @INC is not defined␤»

[13:42] <p6eval> ..pugs: OUTPUT«␤»

[13:43] *** TiMBuS left
[13:43] <Util> rakudo: .say for @*INC;

[13:43] <p6eval> rakudo f845cc: OUTPUT«/home/p6eval/.perl6/lib␤/home/p6eval//p1/lib/parrot/1.6.0-devel/languages/perl6/lib␤lib␤.␤»

[13:43] <PerlJam> jnthn: begin at the beginning and continue until the end.  Then stop

[13:43] <Util> rakudo: BEGIN { unshift @*INC, "kibble" }; .say for @*INC;

[13:43] <p6eval> rakudo f845cc: OUTPUT«kibble␤/home/p6eval/.perl6/lib␤/home/p6eval//p1/lib/parrot/1.6.0-devel/languages/perl6/lib␤lib␤.␤»

[13:43] <jnthn> PerlJam: Suddenly it's all clear to me! 

[13:43] <jnthn> ;-)

[13:43] <Util> rakudo: use lib "kibble"; .say for @*INC;

[13:43] <p6eval> rakudo f845cc: OUTPUT«/home/p6eval/.perl6/lib␤/home/p6eval//p1/lib/parrot/1.6.0-devel/languages/perl6/lib␤lib␤.␤»

[13:43] <PerlJam> jnthn: or for more fun ... begin in the middle and work your way outward until you reach the edges.  Then stop.   :-)

[13:43] <Util> :(

[13:44] <PerlJam> jnthn: what are you refactoring?

[13:44] <jnthn> PerlJam: Initially, signatures.

[13:44] <jnthn> But that's a big thingy.

[13:45] <jnthn> My initial task is to refactor the way actions deal with signatures, to make things neater, use more compile time knowledge at compile time, and get the signature AST generation pulled out into one place.

[13:45] <Util> In Rakudo, `use lib` parses, but silently has no effect?

[13:45] <jnthn> That won't win us much besides cleaner code initially.

[13:46] <jnthn> Next step is re-do the way signatures are stored internally.

[13:46] <jnthn> Then switch to constructing those.

[13:46] <masak> ah, a signatures refactor.

[13:46] <jnthn> With maybe a compatibility layer in, or maybe not.

[13:47] <jnthn> After that, stop using Parrot's signature binder and start using our own.

[13:47] <masak> that'll close a couple of signatures tickets, I imagine.

[13:47] <PerlJam> Util: apparently

[13:47] <jnthn> Then finally, all the missing signatures features.

[13:47] <Matt-W> Cleaner code as a first step is probably a good thing, if it lets you see what to do next more easily

[13:47] <jnthn> Matt-W: Yes, I think this is a place to start.

[13:48] <Matt-W> And since we have a good test suite, it's easier to go in and do these things

[13:48] <jnthn> a *good* place

[13:48] <Matt-W> At my work, we don't have a good test suite, so we just can't

[13:48] * Matt-W is really coming over to TDD

[13:48] <Matt-W> or at least, comprehensive unit testing

[13:48] *** tlb joined
[13:48] <Util> I cannot find any references to `use lib` in the specs, although S19 list `-I` as doing the equivalent, like `-I` did on Perl5's command-line. 

[13:49] <Matt-W> Util: so far I've only seen Perl 6 code say BEGIN { @*INC.push: 'foo' }

[13:50] <Matt-W> I'm not sure if that's supposed to be the final form of it

[13:50] <Util> Matt-W: Me, too. 

[13:50] <diakopter> phenny: g'morning

[13:50] <phenny> diakopter: 07:13Z <diakopter_> tell diakopter g'morning

[13:53] *** PacoLinux left
[13:54] *** PacoLinux joined
[13:55] <mberends> g'morning diakopter

[13:56] <diakopter> mberends: howdy

[13:58] <diakopter> mberends: have you explored other .t that (could possibly) have some that pass?

[13:58] * diakopter hasn't finished backlogging

[14:01] <mberends> diakopter: no, but spectest.data has a few files commented out that were partly working but died after a recent update

[14:02] <diakopter> oh :)

[14:03] <mberends> S04-statement-modifiers/if.t S04-statements/do.t S04-statements/for.t S04-statements/if.t S04-statements/while.t

[14:07] <masak> rakudo: class MyMatch does Associative { method postcircumfix:<{ }> { "foo" } }; $/ = MyMatch.new; say $0

[14:08] <p6eval> rakudo f845cc: OUTPUT«get_pmc_keyed() not implemented in class 'MyMatch'␤in Main (/tmp/6peZmmL4bY:0)␤»

[14:08] * masak submits rakudobug

[14:09] *** Util left
[14:10] <mberends> diakopter: next spectest improvement will be skipping blocks of code, including non-test lines. Thereafter, a spectest.data todo directive to complement the skip directive.

[14:15] *** justatheory joined
[14:17] *** Chillance joined
[14:20] *** Psyche^ joined
[14:21] *** Patterner left
[14:21] *** Psyche^ is now known as Patterner

[14:25] *** PacoLinux left
[14:26] <mberends> diakopter: I'll explore other spec/*/*.t files manually in the next few days. Later on there will be a harness extension to automatically search for more tests.

[14:29] *** nihiliad joined
[14:30] *** riffraff left
[14:30] *** sparc left
[14:30] *** Jedai left
[14:30] *** ilbot2 left
[14:30] *** cosimo_ left
[14:30] *** Khisanth left
[14:30] *** gbacon left
[14:30] *** PacoLinux joined
[14:31] *** riffraff joined
[14:31] *** sparc joined
[14:31] *** Jedai joined
[14:31] *** ilbot2 joined
[14:31] *** gbacon joined
[14:31] *** cosimo_ joined
[14:32] <pmichaud> good morning, #perl6

[14:32] <moritz_> oh hai

[14:34] <jnthn> pmichaud: morning :-)

[14:34] <masak> morning, pmichaud 

[14:34] <Matt-W> o/ pmichaud

[14:35] <jnthn> heh wtf

[14:35] <jnthn> Failed 20/435 test scripts. -1306/29613 subtests failed.

[14:36] <masak> negative information again :)

[14:36] <jnthn> Literally.

[14:37] <masak> hm, if you failed a negative amount of subtests, does that mean that you passed more than the available amount of subtests?

[14:37] *** ruoso joined
[14:37] *** Woodi left
[14:47] *** Khisanth joined
[15:04] *** pmurias joined
[15:06] *** mberends left
[15:11] *** rfordinal joined
[15:14] *** PerlJam left
[15:17] *** sparc left
[15:17] *** ilbot2 left
[16:09] *** tlb left
[17:33] *** elmex left
[20:06] *** Chillance left
[22:44] *** masak left
