[00:08] *** justatheory left
[00:20] *** iblechbot left
[00:22] *** Chillance joined
[00:33] <shinobi_cl> i know that might be too early..

[00:34] <shinobi_cl> but are there plans for a parrot widget library yet?

[00:35] <diakopter> is a widget something a parrot eats?

[00:36] <shinobi_cl> i've seen some SDL code for parrot somewhere. If parrot can digest that, probably can digest a widget too. i guess

[00:45] <shinobi_cl> but, im not sure if it has to be done... If i make, for example, a simple library that allows to show windows, labels and buttons on perl6....

[00:46] <shinobi_cl> That would allow any language that parrot supports to make use of it?

[00:47] <pugs_svn> r25239 | hinrik++ | [util/perl6.vim] handle =END/=for END/=begin END correctly

[01:00] *** justatheory joined
[01:01] *** M_o_C left
[01:07] *** c9s left
[01:10] *** ab5tract joined
[01:16] *** bacek_ left
[01:18] *** DemoFreak left
[01:32] *** Guest12310 left
[01:52] *** braceta_ joined
[02:03] *** shinobi_cl left
[02:04] *** ab5tract left
[02:07] *** braceta left
[02:14] *** braceta_ left
[02:59] *** justatheory left
[03:15] *** shinobi_cl joined
[03:21] *** Limbic_Region left
[03:22] *** Tene_ joined
[03:36] *** Tene left
[03:37] *** shinobi_cl left
[03:59] *** justatheory joined
[04:00] *** justatheory left
[04:09] *** wknight8111 joined
[04:29] *** c9s joined
[04:42] *** gravity joined
[04:43] <gravity> rakudo's Makefile's spectest target has a minor bug. The URL for pugscode is missing the second slash after http

[04:45] *** SamB left
[04:56] *** dalek left
[04:56] *** dalek joined
[04:58] *** wknight8111 left
[05:05] *** Chillance left
[05:12] *** finanalyst joined
[05:38] *** gravity left
[05:40] *** c9s_ joined
[05:57] *** c9s left
[05:57] *** c9s_ is now known as c9s

[06:14] *** alester joined
[06:14] *** alester left
[06:57] *** c9s_ joined
[07:04] *** PantheraPardus joined
[07:09] *** c9s_ left
[07:10] *** c9s_ joined
[07:16] *** c9s left
[07:16] *** c9s_ is now known as c9s

[07:56] *** c9s_ joined
[07:58] *** eternaleye left
[08:01] *** c9s__ joined
[08:03] *** eternaleye joined
[08:07] *** c9s left
[08:07] *** c9s__ is now known as c9s

[08:18] *** c9s_ left
[08:41] *** finanalyst left
[09:00] *** maerzhase joined
[09:44] *** barney joined
[09:54] *** iblechbot joined
[09:55] *** M_o_C joined
[10:07] <samlh> I was just bit by the spectest target bug myself

[10:13] *** pmurias joined
[10:13] *** ejs joined
[10:23] *** oskie left
[10:29] *** DemoFreak joined
[11:10] *** ejs left
[11:17] *** ayrnieu_ joined
[11:27] *** ayrnieu left
[11:32] *** Muixirt joined
[11:45] *** kane__ left
[11:50] *** ejs joined
[11:51] *** ejs left
[11:56] *** smtms left
[12:05] *** pmurias left
[12:14] *** ejs joined
[12:21] *** PantheraPardus left
[12:41] *** mberends joined
[12:48] *** maerzhase1 joined
[12:48] *** maerzhase left
[13:10] *** ejs left
[13:15] *** smtms joined
[13:28] *** Whiteknight joined
[13:46] *** shinobi_cl joined
[14:01] *** SamB joined
[14:09] *** meppl joined
[14:12] *** masak joined
[14:24] *** wknight8111 joined
[14:25] *** Whiteknight left
[14:25] *** shinobi_cl left
[14:26] <masak> mberends: hiya.

[14:26] <mberends> HAI

[14:26] <masak> :)

[14:27] <masak> right now, my goal is simply a no-design-up-front packager that handles dependencies.

[14:28] <masak> it's being built at exactly the right moment, because I'm planning to add my first dependency shortly.

[14:28] <masak> and after that, more will arise.

[14:28] <masak> for example Druid -> SVG.

[14:29] <masak> szabgab is doing something which depends on HTML::Template. so far he's content with modding @INC at BEGIN time, so he doesn't feel the need for proto. yet. :)

[14:29] <szabgab> I can hear you !

[14:29] <masak> szabgab: :)

[14:30] <masak> I don't mind.

[14:30] *** ascent_ joined
[14:30] <masak> szabgab: thanks for the nice emails on the november-wiki list, btw.

[14:30] <masak> and szabgab++ for the CPAN module.

[14:30] <szabgab> have you seen my mail ? it seems that the release to CPAN and install via CPAN.pm works

[14:30] <masak> haven't looked at it yet, but its mere existence is really good news.

[14:30] <masak> szabgab: will try it shortly.

[14:31] <szabgab> yeah and Andreas fixed PAUSE so it was now indexed

[14:31] <masak> that's good.

[14:32] <szabgab> there are a few thing we need to formalize to make it easier for everyone else to upload modules

[14:32] <masak> indeed.

[14:32] <masak> I can enumerate the things I will expect of a module in proto:

[14:32] <szabgab> one thing Ihave not touched yet is how CPAN.pm will be able to check if the prereqs of a package are met?

[14:32] <szabgab> brb

[14:32] <masak> 1. a Makefile.PL

[14:33] <masak> 2. a lib/ directory (so November is currently disqualified)

[14:33] <masak> ...and that's it.

[14:34] <mberends> is that @INC at BEGIN time a short term hack or an official technique? Perl 5 had a reason to disallow it and force 'use lib' instead.

[14:34] <masak> if a project wants to declare dependencies, it has to have a file 'deps.proto' in the same dir that contains the above files.

[14:34] <masak> mberends: I don't mind it, but it only works if you don't publish stuff.

[14:34] <szabgab> which BEGIN block do you mean ?, in which file?

[14:34] <masak> (because the path to the thing depended on is hard-coded)

[14:34] <masak> szabgab: I don't know, it's your trick. :)

[14:35] <szabgab> oh you don't need that any more assuming you have PERL6LIB configured correctly

[14:35] <masak> that's right.

[14:36] <masak> but even setting PERL6LIB manually is a chore when you have many projects.

[14:36] <mberends> the drawback of PERL6LIB is that your program's parent process needs to set it

[14:36] <masak> proto will set it for you.

[14:36] <masak> mberends: I know. it's a pity.

[14:36] <masak> I've been thinking a lot about that in the last few days.

[14:36] <masak> here's my current solution:

[14:36] <masak> (not yet implemented)

[14:37] <szabgab> I have PERL6LIB set in my .bashrc to the @INC of my perl5

[14:37] <szabgab> actually not even that, as I am installing all my modules in a private directory

[14:37] <masak> stop the script, print out a message to STDERR saying "hey, I need you to set these environment variables for me, here's how you do it". next time the script starts, check if they've been set. otherwise, explain again what needs to be done.

[14:38] <masak> I plan to use this procedure for PARROT_DIR as well as PERL6LIB. it feels like a reasonable compromise between safety and convenience.

[14:38] <szabgab> and right now I still assume PARROT_DIR point to trunk and rakudo being in languages/rakudo

[14:39] <masak> me too. will have to look at that.

[14:39] <masak> proto needs to be able to handle all such setups.

[14:39] <masak> also, it needs to be able to respect that some things are checked out from github with the commit bit set.

[14:40] <mberends> moritz and I have switched to Parrot inside Rakudo. Second option in http://perlgeek.de/blog-en/perl-6/where-rakudo-lives.html

[14:40] <szabgab> yeah it will be nice if we can easily mix installed packages with development packages from git

[14:40] <masak> mberends: makes sense for Rakudo devs, I guess.

[14:41] <masak> szabgab: how do you mean?

[14:41] <mberends> also make sense for Rakudo users who are not interested in Parrot

[14:41] <masak> aye.

[14:41] <szabgab> masak, I dont know :-)

[14:42] <masak> mberends: makes me wonder if I shouldn't make that installation method the default in proto...

[14:42] <szabgab> mberends, so the rakudo in languages/rakudo limitations was lifted

[14:42] <mberends> yes

[14:43] <mberends> pmichaud++ made that second case possible, I do not think the two trees can be at any arbitrary locations.

[14:43] <masak> that's my understanding too.

[14:44] <masak> and moritz_ reported problem with 'make spectest' with his setup.

[14:44] <szabgab> anyway I think the best might be to require a PARROT_DIR and a RAKUDO_DIR variable now

[14:44] <masak> szabgab: aye.

[14:45] <szabgab> yeah, so I'll update mu code accordingly

[14:45] <masak> with the latter defaulting to $PARROT_DIR/languages/rakudo or perhaps $PARROT_DIR/..

[14:46] <szabgab> I am not sure I want that default

[14:46] <masak> hm, maybe not.

[14:46] <mberends> consider how we 'git clone' each other's projects all over the filesystem, every project adds another directory to PERL6LIB. That's unaccaptable. The usual Unix remedy is symbolic directory links, and tell the Windows users to try Cygwin.

[14:46] <szabgab> though we can be nice and guess (or actually check if either of thoes exist)

[14:46] <masak> mberends: why unacceptable?

[14:46] <szabgab> but on the other hand it is not that difficult for the user to configure both

[14:47] <masak> mberends: that's exactly the problem that I want proto to solve.

[14:47] <masak> the managing of PERL6LIB.

[14:47] <masak> szabgab: right. perhaps just require that, then.

[14:47] <szabgab> mberends, I don't think telling the windows users anything is will work

[14:47] <mberends> no, it hasn't up to now.

[14:48] <mberends> unacceptable in that scaling to hundreds of modules (just watch me) will make the design cumbersome.

[14:49] <mberends> how about 'git clone' into a temp area and then proto moves the results to a common lib location. CPAN does that.

[14:50] <masak> mberends: works for me. it's just not a high priority right now.

[14:51] <masak> though I'm getting a bit bothered myself by proto's soiling its own directory. thinking of creating a directory 'projects' or whatever, and .gitignoring it.

[14:51] <mberends> I like it enough to work on it, but not today. SVG::Tiny has a cold, I must cure that first.

[14:52] <masak> mberends++

[14:52] <masak> I might get back to SVG today. I have some plans.

[14:52] <mberends> and Pod::Parser risks bitrot through lack of love

[14:52] <masak> but November also has a cold.

[14:53] <mberends> achoo!

[14:53] <masak> and before that, I need to write a small essay on Chinese Literature.

[14:53] <mberends> ok, off to work everyone, chat again later!

[14:54] <masak> aye aye, sir!

[14:58] *** rhr joined
[15:01] *** Nom- joined
[15:03] <Nom-> Hi all :)

[15:05] *** icwiener joined
[15:07] <Nom-> Can anyone suggest a good guide for getting started?  I haven't kept up with perl6, but want to catch up now that we're weeks from a stable (so i hear) :)

[15:08] <masak> Nom-: http://perlgeek.de/blog-en/perl-5-to-6/

[15:09] <masak> Nom-: there have been stable releases of Parrot and Rakudo for a year and a half now.

[15:09] *** rhr_ left
[15:11] <masak> s/stable releases/stable monthly releases/

[15:12] <masak> however, the next release of Parrot will have a reasonably stable API.

[15:12] *** gravity joined
[15:13] <szabgab> Nom-, http://szabgab.com/perl6.html

[15:14] <szabgab> have to go now, bye

[15:14] <masak> szabgab: see you around.

[15:14] *** ZuLuuuuuu joined
[15:21] <masak> Nom-: it might also be good to know that we have a number of tools here on the channel that help elucidating the current state of the implementations.

[15:21] <masak> perl6: say "hello Perl 6!"

[15:21] <p6eval> elf 25239, pugs, rakudo 13f677: OUTPUT«hello Perl 6!␤»

[15:22] *** shinobi_cl joined
[15:22] <masak> that's three of our implementations replying.

[15:22] <masak> std: class Lolipop {}; my Lolipop %hash; # a hash where the values are lolipops

[15:22] <p6eval> std 25239: OUTPUT«00:02 33m␤»

[15:23] <masak> Nom-: STD knows whether things are legal Perl 6 or not.

[15:23] <masak> Nom-: using either of these tools is usually a good way to strike up a conversation on the channel, because then people see what it is you're trying to acheive.

[15:26] <Nom-> Fair enough :)

[15:26] <Nom-> What would you recommend to start playing with ?

[15:26] <masak> Nom-: among the implementations? Rakudo, and possibly Pugs.

[15:27] <masak> Nom-: http://www.parrot.org/download

[15:27] <masak> I recommend you to use Subversion to download Parrot.

[15:27] <Nom-> I've actually fetched the 0.9.0 binary from there... would that come with Raduko ?

[15:28] <masak> Nom-: it does, but not the very latest one.

[15:28] <masak> however, nothing revolutionary has happened since the 0.9.0 release, so I guess that'll do.

[15:29] <masak> if you do want the latest Rakudo, it's on github. but it requires the latest Parrot, not just 0.9.0.

[15:29] <Nom-> I see... should I be seeing output errors for compile problems too?

[15:29] <masak> Nom-: I'm not sure I understand the question. yes, I think so.

[15:31] <Nom-> hmm... i've got a simple example from that blod you linked earlier, and it's not throwing any output...

[15:31] <Nom-> I am pretty sure it's a compile problem, but something saying that would be nice :)

[15:31] <masak> Nom-: sounds fishy.

[15:31] <masak> Nom-: http://sial.org/pbot/perl6

[15:32] <masak> you could paste the output here so that I can see what it is you're doing.

[15:33] <masak> like this: http://sial.org/pbot/34936

[15:33] <Nom-> http://sial.org/pbot/34937

[15:33] <masak> gracias.

[15:34] <masak> works for me.

[15:34] <Nom-> hmm

[15:34] <masak> might this be a Windows-related bug?

[15:34] <Nom-> Entirely possible... 

[15:34] <Nom-> I'll build it for a real OS and see how I go :P

[15:35] <masak> hey, anyone else on this channel run Windows? :)

[15:35] <masak> care to confirm this bug for us?

[15:35] <masak> I get this: http://sial.org/pbot/34938

[15:36] <Nom-> right, which is what i'd expect

[15:37] <masak> Nom-: at this point I would usually ask you to send the contents of your paste to [email@hidden.address] along with Parrot version information and a note that you're running Windows...

[15:38] <masak> but this bug sounds very unlikely. someone else should have caught this already.

[15:38] <masak> Nom-: there's a possibility that this is fixed in Parrot/Rakudo HEAD.

[15:38] <Nom-> Certainly could be

[15:39] <Nom-> I'm about to fire up a Ubuntu VM I should have lying around here... i'll try that out

[15:39] <masak> Nom-: goodie.

[15:39] <masak> but IMHO, it's bad enough if the latest Parrot release contains a Rakudo that doesn't print anything on Windows.

[15:39] <Nom-> I only installed it on Windows because it was convenient :)

[15:39] <masak> Nom-: thank you for your feedback so far.

[15:39] <masak> it helps.

[15:40] <Nom-> hmm i don't think I can get away with installing it on this VM... only 80MB memory free :P

[15:41] <masak> that sounds a bit tight, yes.

[15:41] <Nom-> It doesn't do much

[15:41] <Nom-> Keeps my IRC idle time going, and receives email

[15:41] <Nom-> That's about it

[15:49] *** guru joined
[15:57] *** finanalyst joined
[15:59] <Nom-> 0.9.0 linux works perfectly for me

[15:59] <Nom-> So it does appear to be Windows specific

[16:00] <masak> Nom-: ok. if you want to, you can submit that bug report.

[16:01] <masak> I don't know what else to do at this point.

[16:01] <masak> I don't have Windows myself.

[16:01] <Nom-> No probs, will do

[16:01] <masak> Nom-++

[16:02] <ascent_> syntax error! =P

[16:02] <masak> :) right, should be (Nom-)++

[16:07] *** rhr_ joined
[16:08] <Nom-> Hmm... does a database toolkit exist in parrot ?

[16:10] <masak> Nom-: there have been experiments with sqlite bindings, but last I heard they were in their early stages.

[16:10] <masak> Nom-: a few of us are writing a wiki engine in Rakudo Perl 6, and we're using plain files as out db backend right now.

[16:11] <Nom-> I see...

[16:12] <Nom-> I see a couple of blog posts about DBI 2.0 being based around the JDBC standard (when it eventually gets kicked off)

[16:12] <Nom-> I think that's a bloody good idea :)

[16:13] <masak> Nom-: it's a bit quiet here today. usually, we have more activity on #perl6.

[16:13] <masak> Nom-: if you want to try an application written on top of Rakudo, do check out Druid.

[16:13] <masak> https://github.com/masak/druid/

[16:16] <ascent_> what about CPAN? Something new planned?

[16:17] <masak> ascent_: yes, but that was a long time ago. you can find some documents about it in the Pugs repository.

[16:17] <Nom-> I was wondering that... where's CPAN6 :P

[16:17] <masak> you're not the only one asking that question.

[16:18] <masak> it's like with the mice. they all would like that bell to be hung around the cat, but...

[16:18] <masak> ...so far, nobody has actually gone ahead and done it.

[16:19] *** rhr left
[16:20] *** icwiener_ joined
[16:23] <ascent_> masak: so what are the requirements? I'll probably can do it.

[16:23] <ascent_> masak: there was any longer discussion about it?

[16:23] <masak> ascent_: kudos to you if you do it. it's a large project.

[16:23] <masak> ascent_: I recommend reading up on that old docuement in the Pugs repo first.

[16:25] *** nihiliad joined
[16:28] <masak> I think this is it: http://svn.pugscode.org/pugs/misc/sixpan/

[16:28] <masak> someone correct me if I'n wrong.

[16:29] *** ZuLuuuuuu left
[16:31] <ascent_> masak: thanks, greping pugs for cpan is a lot of... ;)

[16:32] <ascent_> masak: I will look into it and check if I can handle it.

[16:32] <ascent_> btw, what about threads in perl6?

[16:35] <masak> ascent_: what about them?

[16:35] *** Tene joined
[16:36] *** icwiener left
[16:38] <ascent_> masak: I found that: "they've cut STM, and I suspect other threads related features may also be on the chopping block in the interest of delivering a GA language implementation in the next 18 months"

[16:38] <masak> indeed.

[16:38] <masak> that sounds like what jnthn said recently.

[16:39] <masak> I don't recall why STM was cut; I kinda liked it.

[16:42] <ascent_> who cut that? I think threads are very important thing and it will be more and more important in future... my quadcore like 'em :)

[16:43] <masak> ascent_: you know, junction autothreading is still in the language.

[16:43] <Nom-> eep... so they actually did do STM and pulled it out? :(

[16:43] <masak> Nom-: no, I don't think so.

[16:46] <Nom-> awww, async NYI :(

[16:47] *** Tene_ left
[16:52] <Nom-> Is a Java style threading system on the books for perl6 ?

[16:52] <Nom-> I'm very much looking forward to it, if it is

[16:53] <masak> Nom-: http://svn.pugscode.org/pugs/docs/Perl6/Spec/S17-concurrency.pod

[16:53] <masak> that's the latest, I think.

[16:54] <masak> but even that should be outdated if STM was scrapped.

[16:55] *** chrisdolan joined
[17:02] *** shinobi_cl left
[17:03] <Nom-> Well looks like none of that is implemented in rakudo

[17:03] <masak> right.

[17:04] <masak> however, a lot of other good stuff is.

[17:04] <masak> http://perlgeek.de/blog-en/perl-6/rakudo-rocks.html :)

[17:06] <Nom-> ooo.... perl 5.8.9 end of life :/

[17:06] <Nom-> We're only just about to make it off 5.6 @ work! 

[17:06] <ascent_> masak: looks like someone is doing cpan already: http://cpan6.org ;)

[17:07] <masak> well, I'll be.

[17:08] <masak> nice page layout. too bad about the big table, though.

[17:08] * masak wonders how difficult it would be to do that the CSS way

[17:09] <Nom-> Not difficult

[17:09] <Nom-> CSS is never as hard as people make it out to be :P

[17:10] * masak likes CSS

[17:10] <masak> one of the few standards in the world that actually hurts less the more you lean on it. :)

[17:10] <Nom-> I do too.... CSS and XSLT are my two best friends

[17:11] <Nom-> If XML wasn't so painful in Perl, i'd use XSLT more :)

[17:12] <masak> I'm not sure what you mean by XML being painful in Perl. I don't think I know of any language where it's less painful.

[17:12] <Nom-> It's painful NOT to use it in Java and .NET

[17:13] <Nom-> Depends how you do it, but using Object Serialization is the easiest way to do XML

[17:15] <masak> XPath is another wonderful standard, by the way.

[17:15] <Nom-> Absolutely

[17:15] <masak> I'm not sure I like XSLT so much. it's a bit too verbose and ambitious.

[17:16] <masak> a lot of the shortcomings were fixed in XSLT 2.0, with the result that the spec is no longer readable by mortals. :/

[17:16] <Nom-> XSLT used in conjunction with object serialization in Java is the easiest way i've ever found to put a 'web interface' in front of an application

[17:16] <Nom-> I use it all the time... have a java app spit some object out in XML format, and use XSLT to turn it into a human readable page

[17:16] <masak> Nom-: I was a heavy Apache Cocoon user a few years back. XSLT does have its place, no doubt.

[17:17] <Nom-> hmm i wonder if someone has made a perl 5.10 backport for Ubuntu Hardy ytet

[17:18] *** kate21de joined
[17:20] *** ayrnieu_ is now known as ayrnieu

[17:22] *** rindolf joined
[17:23] <Nom-> we've got like 1,000,000 lines of perl code which we're about to validate against Ubuntu Hardy, so if I could get Perl 5.10 for that, it's one less validation run when we go to the next LTS

[17:23] <masak> sounds fun.

[17:25] <Nom-> Perl 5.6.1 => Perl 5.10.0 ... I'd love to make that happen :)

[17:25] <dalek> rakudo: 6aaec33 | (Patrick R. Michaud)++ |  (2 files):

[17:25] <dalek> rakudo: Temporarily fix makefile construction to still work with Parrot.

[17:25] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/6aaec3322ad8d4e16066b0d68f127cf4978be4e1

[17:33] <pmichaud> anyone around who can do commitbit magic?

[17:34] *** guru left
[17:46] <diakopter> pmichaud: me

[17:46] <diakopter> for pugscode?

[17:46] <diakopter> pmichaud: wait, what do you need

[17:48] <diakopter> pmichaud: I SIGHUPed jifty on feather; commitbit.pugscode.org responds now...

[17:49] <pmichaud> diakopter: thanks.

[17:56] *** kate21de left
[17:58] <pugs_svn> r25240 | chrisdolan++ | Add CDOLAN to author list

[18:03] *** justatheory joined
[18:07] *** kate21de joined
[18:10] <moritz_> re

[18:11] *** justatheory left
[18:11] <dalek> rakudo: fb66ff6 | (Moritz Lenz)++ | t/harness:

[18:11] <dalek> rakudo: [t/harness] fix testing if not checked out as languages/rakudo

[18:11] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/fb66ff636f186a82814d3cab65ae542c45dcfd62

[18:18] <masak> http://use.perl.org/~masak/journal/38430

[18:20] <nihiliad> moritz_: re your t/harness commit: I'm sitting next to pmichaud at the Frozen Perl hackathon, and he asked me to fix the test harness so the tests will run as Perl 6 and not Perl 5.

[18:20] <nihiliad> moritz_: Are you already working on that?

[18:21] <moritz_> nihiliad: "make spectest" now works as it should - does that answer your question?

[18:22] <pmichaud> I'm thinking we should completely rewrite t/harness

[18:22] <moritz_> that wouldn't be bad at all

[18:22] *** moritz_ sets mode: +o pmichaud

[18:22] <moritz_> it's historically grown, as the saying goes ;-)

[18:23] <moritz_> but whatever you do to the harness, please preserve its ability of parallel testing - that's increadibly useful to me

[18:23] <pmichaud> well, currently t/harness tries to use Parrot's  Parrot::Test::Harness, which in turn does a bunch of other things important to parrot testing.

[18:24] <pmichaud> I'm thinking we don't need Parrot::Test::Harness at all -- we should be just driving Test::Harness (from Perl 5) directly.

[18:24] <moritz_> aye

[18:24] *** mncharity joined
[18:24] <pmichaud> I'm also thinking that we need to put a 'parrot' symlink somewhere in the rakudo tree, so we aren't having to "guess" the version of Parrot that was used to build rakudo.

[18:24] <moritz_> nihiliad: sorry for stealing your task :/

[18:25] <s1n> hey, pmichaud is back!

[18:25] <pmichaud> well, the task of "fix current t/harness" is really different from "rewrite t/harness"  :-)

[18:25] <moritz_> pmichaud: remember that some platfroms don't have good symlinks

[18:25] <moritz_> (windows comes to mind)

[18:26] *** mncharity changes topic to: http://pugscode.org/ http://planetsix.perl.org/ | nopaste: http://sial.org/pbot/perl6 | evalbot: perl6: say 3; (or rakudo:, pugs:, elf:, etc) | irclog: http://irc.pugscode.org/ | ~315 days 'til Xmas

[18:26] <moritz_> pmichaud: I thought about having a file  in the rakudo repo that told us which parrot revision to use...

[18:26] <moritz_> pmichaud: and a 'make parrot' target that updates parrot/ to that revision, and runs a 'make realclean; perl Configure.pl; make' there

[18:27] *** maerzhase1 left
[18:27] <nihiliad> moritz_: No worries. I'm a total n00b and will do whatever pmichaud tells me to.

[18:27] <pmichaud> moritz_: there's already a file in the rakudo repo to do this  (build/PARROTREV)

[18:27] <jnthn> Windows sure doesn't do (good|any) symlinks...

[18:27] <s1n> moritz_: why not just use parrot -V?

[18:27] <pmichaud> I've thought about having a make target, but we have a chicken-and-egg problem there

[18:28] <pmichaud> i.e., we can't really build the Makefile until we know the parrot details

[18:28] <moritz_> pmichaud: we can have a bootstrapping makefile that gets overridden

[18:28] <pmichaud> either that or we have to make the Makefile smart enough to work on .... yeah, something like that

[18:28] <moritz_> pmichaud: or offer that only as a convenience after the first run of Configure.pl

[18:29] <jnthn> I guess I'm missing something but - why can't the Configure script work out where Parrot is and stick that location into the Makefile?

[18:29] <pmichaud> moritz_: yes, I've been thinking about that also.  

[18:29] <pmichaud> jnthn: that's what it does now.

[18:29] <pmichaud> jnthn: but we also need to know the location of parrot for other things, such as t/harness

[18:29] <jnthn> OK. Is that a problem?

[18:30] <jnthn> So make test just invokes t/harness with --parrot /path/to/parrot ?

[18:30] <s1n> is it too much to assume it's on the user's $PATH?

[18:30] <moritz_> s1n: yes

[18:30] <s1n> too soon? i mean, it's not like they can't install it

[18:30] <s1n> even from the repo

[18:31] <pmichaud> "make install" doesn't work for Parrot right now.

[18:31] <pmichaud> jnthn: we're not always doing t/harness

[18:31] <pmichaud> sorry

[18:31] <pmichaud> we're not always invoking perl6 from 'make'

[18:31] <mncharity> @tell TimToady Sorry I lost sync on STD.  It turned out too costly.  Staying with it would have preempted all other elf progress.  I'll stick with rWhatever for now, and sync after bootstrap.  Perhaps piecemeal syncs before then, not sure.

[18:31] <lambdabot> Consider it noted.

[18:31] <jnthn> Ah, true.

[18:31] *** jdv79 joined
[18:32] <pmichaud> e.g., if we run t/harness directly, or run tools/test_summary.pl -- they need to know the location of parrot

[18:32] <jdv79> szabgab: around?

[18:32] <szabgab> jdv79, sorta, for a short time

[18:32] <jnthn> Yes, it's rather burdensome to make the user pass Parrot's path whenever running those.

[18:32] <masak> (Frozen Perl)++ # apparently, there's Rakudo hacking happening there!

[18:32] <masak> food &

[18:32] <pmichaud> yes, a lot.

[18:33] <jnthn> I know it violates DRY, but Configure.pl could both put the path in the makefile and into a file, which t/harness etc can grab it from?

[18:33] *** masak left
[18:33] <moritz_> well, for now Configure.pl could just write a file which contains the path to parrot

[18:33] <moritz_> ah, jnthn had the same idea, and typed faster than me ;-)

[18:33] <jdv79> you realize Perl6::Conf is not straightforward to install, right?

[18:33] <szabgab> jdv79, what do you mean ?

[18:34] * jnthn read outline of alester's talk

[18:34] <jnthn> Sounds like we're in for a busy 2009! ;-)

[18:34] <szabgab> for now I assumed PARROT_DIR and that rakudo is inside parrot

[18:34] <szabgab> next version will require PARROT_DIR and RAKUDO_DIR

[18:34] <jdv79> yeah, that's a big piece

[18:35] <dalek> rakudo: 3d92f3f | (Francois Perrad)++ |  (3 files):

[18:35] <dalek> rakudo: improve .gitignore files

[18:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/3d92f3f7fea34a05540339ed08269bba3d129ae2

[18:35] <dalek> rakudo: 37e1492 | (Francois Perrad)++ | .gitignore:

[18:35] <dalek> rakudo: ignore *.patch

[18:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/37e1492d185ac81ff2fd11bc9ee0c9ab29652482

[18:35] <pmichaud> I thought about having a file with path to parrot, but I'd really like to come up with something cleaner

[18:35] <jdv79> can't we just use cpan versions of those so the deps can be done as usual?

[18:35] <pmichaud> i.e., so that parrot can be run directly

[18:35] <szabgab> jdv79, so what is the problem with Perl6::Conf installation ?

[18:36] <pmichaud> instead of having all of the scripts read a file that says "where is parrot?"

[18:36] <s1n> having a file with the path to parrot is no more easier or difficult than requiring parrot in their path

[18:36] <jdv79> its just a lot of work.  it'd be nice if it "just worked"

[18:36] <jnthn> pmichaud: To me, it's not perfect, but seems workable for now. Depends if you want a "works" kinda solution for a "beautiful" solution. :-)

[18:36] <mncharity> moritz_/anyone: Could comment on a strawman concept?   I'm thinking of creating a  misc/elfish/gimme_elf/  with an  elfg5  perl file.  Where elfg5 is a standalone elf (basically elfblue with inlined src/perl6/STD.pmc for parsing - so no external parser).  "Just download the one file (don't even have to svn co), install its cpan dependencies, and... instant taste of elf",

[18:36] <s1n> i have parrot and perl6 in my repo builds already in my path to do just taht

[18:36] <pmichaud> I need a solution that is easy to explain to others.

[18:36] <jnthn> Nothing a lot better comes to mind rither off...

[18:36] <jdv79> i didn't know that rakudo moved out of languages/perl6 and to its own repo

[18:37] <mncharity> Do you think that would excite folks?

[18:37] <pmichaud> I can tell you that the number one problem right now at the hackathan is that people are completely unable to build parrot+rakudo and run perl6 without a _lot_ of explanation.

[18:37] <jnthn> pmichaud: Easy to make others like, or easy to explain? ;-)

[18:37] <jnthn> Ah.

[18:37] <szabgab> pmichaud, I think you should remove languages/perl6 if that is not the place of rakudo any more

[18:37] <moritz_> mncharity: I think it's a very good idea (if it can be achieved with reasonable effort)

[18:37] <jdv79> pmichaud: i'm not even there and i just experienced that:(

[18:38] *** Psyche^ joined
[18:38] *** barney left
[18:38] <pmichaud> szabgab: that's my intent -- we need to have a README there that says the new location and how to get the correct information

[18:38] <szabgab> pmichaud, maybe replace with a README file that explains where ...

[18:38] <szabgab> so I wont' finish my sentence :-)

[18:38] <s1n> i just have scripts do the grunt work for me

[18:38] <jnthn> Ah, sorry, gotta go now - back later.

[18:38] <moritz_> pmichaud: for now you can point to my blog at http://perlgeek.de/blog-en/perl-6/where-rakudo-lives.writeback, or copy its information

[18:38] <mncharity> moritz_: thanks...  anyone else?

[18:38] <pmichaud> the problem I'm having now is everyone says "we need this" but I'm too busy answering "then let's do XYZ" and not enough time to "do XYZ"

[18:38] <jnthn> Happy hackathoning!

[18:38] <s1n> maybe platform specific scripts or have the configure do something more

[18:38] <jdv79> szabgab: plus the POD doesn't render.  it looks like p6 pod.

[18:39] <moritz_> pmichaud: or should I do it?

[18:39] <pmichaud> moritz_: yes, I saw the blog post -- excellent.

[18:39] <pmichaud> moritz_: please do it.

[18:39] <pmichaud> anything that anyone can do such that I don't have to do it will save us all a ton of time.  :-|

[18:39] <szabgab> jdv79, well, yes it is p6 pod, 

[18:39] <pmichaud> right now I'm thrashing on "answering questions" and not getting any useful work done.

[18:39] <pmichaud> (not that answering questions isn't useful... :-)

[18:39] <szabgab> I don't understand what did you expect from the AFAIK first real Perl 6 module on CPAN ?

[18:40] *** Patterner left
[18:40] *** Psyche^ is now known as Patterner

[18:40] <s1n> what does the Configure.pl script do now anyways?

[18:40] <szabgab> pmichaud, that's the sign of success

[18:40] <jdv79> nothing much really.  i was hoping to be able to show it off but its not ready.

[18:41] <s1n> it sounds like the job of the configure script to try and locate parrot

[18:41] <jdv79> nice work though

[18:41] <s1n> at the very least, it could look in ../../, then in $PATH, then fall back on something else

[18:42] <pmichaud> s1n: looking in $PATH isn't very useful at the moment.

[18:42] <pmichaud> currently Configure.pl looks at ../.. and parrot/

[18:42] <pmichaud> but a lot of the scripts and modules all assume ../..

[18:42] <s1n> it's better than nothing

[18:42] <pmichaud> and so we have to get them to not do that.

[18:42] <szabgab> jdv79, when you setup CPAN.pm do you need to answer a few questions ?

[18:42] <pugs_svn> r25241 | hinrik++ | [util/perl6.vim] allow non-keyword characters in the argument to =config

[18:42] <szabgab> has anyone here managed to install the Perl6::Conf module using CPAN.pm ?

[18:43] <s1n> just because parrot doesn't install properly, doesn't mean we can't add it to our path

[18:43] <jdv79> szabgab: it just broke cause of the PARROT_DIR req not working out

[18:43] <s1n> i do that (export PATH=~/sandbox/parrot/:$PATH) already in my bashrc, maybe we can start making some assumptions to common setups

[18:43] <s1n> at least until parrot installs correctly

[18:44] <szabgab> what do you mean not working out? you have not set it up or you set it up but it still could not install ?

[18:44] <s1n> otherwise, you're writing a file the user has to modify to signal where to find parrot

[18:44] <pmichaud> but the Configure.pl step can create that file

[18:44] <jdv79> i didn't retry with CPAN.pm.  after i setup PARROT_DIR i did it by hand.

[18:44] <pmichaud> ooooh, maybe  parrot.pl ?  ;-)

[18:44] <s1n> and how is it going to create it? will it guess at parrot's location?

[18:44] <jdv79> szabgab: broke meaning the install failed.

[18:45] <pmichaud> but that sounds pretty awful also, I guess.

[18:45] <s1n> all solutions will suck until parrot correctly installs

[18:45] <szabgab> jdv79, sure, there are tons of Perl5 modules with external dependencies that fail to install unless you configure that external dependency

[18:45] <s1n> we can either start guessing where it will be, i.e. for common paths

[18:46] <s1n> or we make the user tell us

[18:46] <pmichaud> even when parrot correctly installs, we still have to have a way to indicate the location of parrot

[18:46] <s1n> no you don't

[18:46] <s1n> how do i know where gcc is?

[18:46] <s1n> my path

[18:46] <jdv79> szabgab: no doubt.  but there is a parrot cpan dist.  my question is can that be used.

[18:46] <pmichaud> that's different

[18:46] <pmichaud> you only need gcc to build, not to execute

[18:46] <pmichaud> in rakudo's case, we need parrot both to build _and_ execute

[18:46] <s1n> what about bash?

[18:47] <pmichaud> what about bash?

[18:47] <s1n> i think it's implied that it _has_ to be on your path

[18:47] <s1n> i need bash to execute things, it's in my path, so i don't have to say /bin/bash (crappy example, i know)

[18:47] <pmichaud> it's implied that parrot has to be in one's path?  I'm not sure that's a reasonable assumption at the moment.

[18:47] <s1n> not right now it's not

[18:47] <s1n> but eventually

[18:47] <mncharity> :/

[18:48] <s1n> until then we can only guess or make the user tell us

[18:48] <s1n> %perl Configure.pl --parrot /path/to/parrot

[18:48] <pmichaud> s1n:  I already have that.

[18:48] <s1n> or something else equally stupid

[18:48] <pmichaud> you're solving the wrong problem.

[18:48] <s1n> great, that's about as good as it'll get for now

[18:48] <s1n> what's the problem? lol

[18:48] <szabgab> jdv79, AFAIK not yet as it does not really install

[18:48] <pmichaud> or, more precisely, that's not currently sufficient

[18:49] <s1n> care to elaborate?

[18:49] <pmichaud> knowing the path to parrot is fine at build time -- I can do that.

[18:49] <szabgab> as I can see the other chats they are just discussing this

[18:49] <pmichaud> but after perl6.pbc is built, how do we invoke it?

[18:49] <jdv79> szabgab: i have a /usr/local/bin/parrot.  it seems to not fetch and build rakudo though.

[18:49] <s1n> why not use it to just build the perl6 executable?

[18:49] <pmichaud> you mean the fakecutable?

[18:50] <pmichaud> because the perl6 executable often segfaults improperly.

[18:50] <s1n> otherwise, you'll need a goofy path hack, file that specifies the path that is loaded, or something else

[18:50] <rakudo_svn> r36451 | moritz++ | [rakudo] Rakudo left the nest - so remove most of languages/perl6/ and change

[18:50] <rakudo_svn> r36451 | moritz++ | the README accordingly.

[18:50] <szabgab> jdv79, once there is a perl6 or rakudo executable in your PATH the installation can be straight forward

[18:50] <s1n> okay, then Parrot.pm defines it?

[18:50] <s1n> then all the scripts use Parrot.pm, which defines the configured parrot info

[18:50] <szabgab> till then we have to figure out the other things, eg. to had the pods look good

[18:50] <pmichaud> I agree, the alternative is a goofy path hack.  I'm not liking any of the solutions currently at our disposal, no.

[18:51] <s1n> and we could generate a script that looks like perl6 that launches parrot from Parrot.pm

[18:51] <jdv79> szabgab: you mean getting search.cpan.org to use a 6 POD lib?

[18:51] <pmichaud> "generate a script"  -- how does that work under Windows?

[18:51] <jdv79> s/6/p6/

[18:51] <s1n> that would have to be platform specific

[18:51] <szabgab> jdv79, I am sending and e-mail to Graham now

[18:51] <pmichaud> even platform specific -- how does that work under Windows?

[18:51] <pmichaud> you mean a perl6.bat ?

[18:52] <s1n> or better yet, perl6.p6 :)

[18:52] <szabgab> is there a perl6 pod parser written in perl 5 ?

[18:52] <moritz_> szabgab: yes, Damian wrote one

[18:52] <s1n> perl6.p6 loads Parrot.pm, which defines parrot's location, executes it with the pbc

[18:52] <pmichaud> szabgab: Damian had one at one time, but I don't know that it was ever released.

[18:52] <moritz_> it's on CPAN

[18:52] <pmichaud> maybe we just should create a perl6 "executable" in C that does the work.

[18:53] <pmichaud> i.e., not the fakecutable approach -- something that just turns around and calls exec()

[18:53] <s1n> naw, i like a perl6 script that executes the pbc :)

[18:53] <s1n> could do that, but that sounds like a p.i.t.a.

[18:53] <pmichaud> all of the answers seem like a p.i.t.a at the moment.

[18:53] <szabgab> Perl6::Perldoc::Parser  thanks

[18:53] <s1n> i actually think i like the idea of the perl6.p6 script that does the exec :)

[18:53] <pmichaud> I don't.

[18:54] <s1n> heh

[18:54] <pmichaud> for one, that script can't be .p6

[18:54] <s1n> well true

[18:54] <s1n> at least perl5

[18:54] <pmichaud> so then running perl6 would mean that we start by invoking p5?  

[18:54] <pmichaud> that seems like it'll get even more confusing.

[18:55] <s1n> is there anything else that equates to something less than a pita?

[18:56] <pmichaud> if there were an obvious simple solution it probably would've already been done.

[18:56] <s1n> Parrot.pm is generated with parrot environment settings, perl6.pl (which is in the repo) loads Parrot.pm and does it's magic. all the scripts can then safely use Parrot.pm directly or through perl6.pl...

[18:56] <s1n> true, so we just need to find one that works until we can safely assume parrot is available already, right?

[18:57] <pmichaud> "one that works" -- depends on the definition of "work"

[18:57] <s1n> imho works means it requires the least work for a developer/user to get started

[18:57] <pmichaud> it's not that we're choosing between one solution that works and many that don't -- it's that each solution has some downsides that aren't obvious

[18:57] <s1n> if it's a pita for us, so be it

[18:58] <pmichaud> I don't think perl6.pl is the answer I'm looking for.

[18:58] <pmichaud> I think I'd rather go with the fakecutable approach.  It's more along the lines of what people will expect.

[18:58] <s1n> how will you create that fakexcutable?

[18:58] <s1n> will it need to be compiled somehow?

[18:59] <pmichaud> we currently do it with "make perl6"

[18:59] <s1n> please tell me that won't introduce automake

[18:59] <s1n> oh

[18:59] <s1n> so just require the perl6 target to be executed?

[18:59] <s1n> i mean, that does a pbc_to_exe, which is problematic

[19:00] <pmichaud> why is that problematic?

[19:00] <rakudo_svn> r36453 | moritz++ | [rakudo] remove a left over perl6.pir file

[19:01] <s1n> i thought you said it crashes intermitently and is kinda buggy

[19:01] <moritz_> it worked quite stable for me most of the time

[19:02] <pmichaud> yes, but I see the perl6.pl as introducing a different set of issues.

[19:02] *** legis left
[19:02] <pmichaud> and yes, it's stable "most of the time"

[19:02] <pmichaud> maybe if it's a little intermittent we'll be pushed to get things fixed :-)

[19:02] *** szabgab left
[19:02] <pmichaud> but it's certainly far easier to say "perl6 ... "  than anything else.

[19:02] <s1n> how can the egg hatch itself without knowing about the chicken... hmmm

[19:03] <s1n> pmichaud: yes, it is, and that's why it's in my path :)

[19:03] <pmichaud> I vote for the fakecutable approach.

[19:03] <s1n> so don't change anything?

[19:03] <pmichaud> well, we still need to fixup the harness

[19:04] <pmichaud> and we should change the default Makefile target to build the fakecutable

[19:04] <s1n> i use the pbc right now, the perl6 segfault spews all kinds of crap

[19:04] <moritz_> currently 'make spectest' works for me.

[19:04] <pmichaud> as long as 'make spectest' works with the fakecutable i'm reasonably okay with that approach.

[19:05] <pmichaud> I've also decided that I no longer want Parrot to be building Rakudo's Makefile

[19:05] <s1n> good decision

[19:05] <pmichaud> i.e., the "reconfigure.pl" approach.

[19:05] <pmichaud> (i.e., don't use Parrot's 'reconfigure.pl')

[19:06] <s1n> pmichaud: are you at a hackathon right now?

[19:06] <pmichaud> yes.

[19:06] <cognominal> maddingue++

[19:17] *** Tene_ joined
[19:24] <pugs_svn> r25242 | putter++ | [gimme_elf] Created.  A *very* easy to install, standalone, elfblue variant.  To create interest in elf.

[19:24] <pugs_svn> r25242 | putter++ | Sketched in README and Makefile.

[19:25] <mncharity> moritz_: Thanks for the encouragement. :)

[19:25] <mncharity> hmm, that commit should have been moritz_++.  Wouldn't have happened without it.

[19:25] <mncharity> g'day all &

[19:25] *** mncharity left
[19:26] <moritz_> @tell mncharity now you have to blog about gimme_elf, otherwise the interest won't leave #perl6

[19:26] <lambdabot> Consider it noted.

[19:31] *** Tene left
[19:35] *** FurnaceBoy joined
[19:39] *** rindolf left
[19:44] *** jferrero joined
[19:44] *** rindolf joined
[19:45] <pugs_svn> r25243 | hinrik++ | [util/perl6.vim] ensure proper nesting of angles inside Pod formatting codes

[19:45] <pugs_svn> r25244 | hinrik++ | [S26] clarify the entry on E<> in the summary

[19:46] <pugs_svn> r25245 | hinrik++ | [util/perl6.vim] update timestamp

[19:50] <pugs_svn> r25246 | moritz++ | [irclog] point r\d+ on #parrot to parrot's trac installation

[19:52] <dalek> rakudo: 46f5a49 | (Moritz Lenz)++ | Configure.pl:

[19:52] <dalek> rakudo: Apply coding style fix by Fran􏿽xE7ois Perrad, fperrad++

[19:52] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/46f5a490f24f4977b29acd6cc4303b3e8a977e8f

[20:00] *** jhuni joined
[20:00] *** rindolf left
[20:03] *** maerzhase joined
[20:05] <chrisdolan> I want to write a test for RT#62898, but I'm not sure where to put it.  Advice?

[20:07] <dalek> rakudo: cb3422f | (Moritz Lenz)++ | .gitignore:

[20:07] <dalek> rakudo: .gitignore `perl6'

[20:07] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/cb3422fdef15f9a53892a5457475cd76969e419f

[20:07] <chrisdolan> I don't think it's specced behavior, it's just implicit.  Does it go in t/spectests or just t/?

[20:07] <moritz_> chrisdolan: into t/spec/ for sure

[20:08] <moritz_> it's implicitly specced by basic sanity, and by "everything that's not specced works like in p5"

[20:08] <chrisdolan> makes sense

[20:08] <moritz_> chrisdolan: maybe add it to t/spec/S12-class/basic.t

[20:08] <chrisdolan> Cool, thanks

[20:08] *** rindolf joined
[20:10] <moritz_> chrisdolan: do you know how I can easily pull your patch for that issue into the official rakudo tree?

[20:10] <chrisdolan> I'm just learning git today...  Let me ask here at the hackathon

[20:11] *** riffraff joined
[20:11] <s1n> so is pmichaud _the_ admin for the git repo now, or has he issued rights to someone else?

[20:11] <moritz_> chrisdolan: the patch you submitted contains spurious linebreaks 

[20:12] <chrisdolan> Yeah, that was my email client, sorry.  I should have done it as an attachment.  Let me research the git solution

[20:12] <moritz_> chrisdolan: one way is `git format-patch origin', but it's not the solutions I'm looking for ;-)

[20:13] <dalek> rakudo: 71179f1 | (Patrick R. Michaud)++ |  (5 files):

[20:13] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[20:13] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/71179f123795f536a6af8a77a825c9d1c08afd83

[20:13] <moritz_> s1n: I don't know - I don't think I can add new committers, but I can push changes for sure

[20:13] *** M_o_C left
[20:14] <chrisdolan> moritz_: OK, I just used the github.com "pull request" feature to send it to you

[20:14] <pmichaud> so far I'm the admin for the git repo, yes.

[20:14] <moritz_> chrisdolan: thanks, got the message - but it doesn't contain instructions on how to pull :(

[20:14] <pmichaud> I've generally granted push rights to those who were parrot committers

[20:15] <chrisdolan> moritz_: Hrm...

[20:15] <moritz_> pmichaud: you seem to have missed fperrad (unless you added him in the last 30 minutes)

[20:15] <pmichaud> probably so.  I wasn't trying to be exhaustive

[20:16] <s1n> what's the review process now to get push access?

[20:16] <pmichaud> basically "if you're already a parrot committer, I'll add w/o question when needed"

[20:16] <s1n> what about those who weren't parrot committers...

[20:16] <moritz_> chrisdolan: ah, `git-pull git://github.com/chrisdolan/rakudo.git master' seems to work

[20:16] *** rindolf left
[20:16] <pmichaud> I have to have some discussions with TPF and the like to see about committer access

[20:17] <chrisdolan> moritz_: No, the patch isn't in my master branch.  I made a branch called "package-redeclaration" for this

[20:17] <s1n> that would be great, i'd like to know what it would take for me to get access

[20:17] <pmichaud> we may still want to have the contributor license agreements in place

[20:18] <chrisdolan> moritz_: so maybe it's just s/master/package-redeclaration/ from your previous command

[20:18] <moritz_> chrisdolan: I'll try that

[20:19] <moritz_> chrisdolan: ah, that seems to really work, at least git-log shows your commit plus a merge commit

[20:20] <moritz_> which is the git way of doing it, if I understand it correctly

[20:20] <chrisdolan> sweet

[20:21] *** jferrero left
[20:22] *** rindolf joined
[20:24] <moritz_> rakudo: eval q[BEGIN {class Foo::Bar::Baz {}}; class Foo::Bar {}]; say "alive"; say $! if $!;

[20:24] <p6eval> rakudo 6aaec3: OUTPUT«No arguments found to dispatch on␤current instr.: 'parrot;Perl6Role;!select' pc 2689 (src/classes/Role.pir:108)␤»

[20:24] <moritz_> rakudo: eval q[BEGIN {class Foo::Bar::Baz {}}; class Foo::Bar {}]; say "alive"; 

[20:24] <p6eval> rakudo 6aaec3: OUTPUT«No arguments found to dispatch on␤current instr.: 'parrot;Perl6Role;!select' pc 2689 (src/classes/Role.pir:108)␤»

[20:25] <s1n> is that revision the last 6 bytes of the index hash?

[20:25] <moritz_> chrisdolan: you could add that (with eval_lives_ok instead of eval) to S12-class/basic.t

[20:25] <moritz_> s1n: it's the first 6 bytes of git-log | head -n 1

[20:25] <moritz_> s1n: I don't know if that makes any sense :/

[20:28] <s1n> moritz_: yeah sorta, git hashes still don't indicate timeline or anything, so it's as much sense as a sha1 hash can make

[20:29] <pugs_svn> r25247 | chrisdolan++ | Add test for the class portion of:

[20:29] <pugs_svn> r25247 | chrisdolan++ | RT#62898: Rakudo can't handle A declared after A::B was declared in an included module

[20:30] <chrisdolan> Could someone commit the patch from http://rt.perl.org/rt3/Public/Bug/Display.html?id=60164?

[20:30] <chrisdolan> I got approval from pmichaud

[20:30] <moritz_> chrisdolan: I'm running a 'make spectest' now. If all passes, I'll push.

[20:30] <chrisdolan> moritz_: still adding more tests...

[20:33] <moritz_> chrisdolan: ok, pushed. Many thanks.

[20:34] <dalek> rakudo: 2c026f7 | (Moritz Lenz)++ | src/parser/ (2 files):

[20:34] <dalek> rakudo: Merge branch 'package-redeclaration' of git://github.com/chrisdolan/rakudo

[20:34] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/2c026f71ea4e5ef8fc22104983db7b5783da0e20

[20:34] <dalek> rakudo: 1861489 | (Moritz Lenz)++ | .gitignore:

[20:34] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[20:34] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/1861489b0c22c4aa60a8aeed117ded71a18b2f00

[20:35] <moritz_> chrisdolan++ # since it's nowhere in the commit message

[20:37] <pugs_svn> r25248 | chrisdolan++ | A more specific test for RT#62898

[20:42] *** jferrero joined
[20:42] *** Limbic_Region joined
[20:43] *** meppl left
[20:57] *** IllvilJa left
[21:12] *** jhuni left
[21:18] *** finanalyst left
[21:22] *** kate21de left
[21:23] <dalek> rakudo: 577566e | (Patrick R. Michaud)++ |  (2 files):

[21:23] <dalek> rakudo: More fixes to Configure.pl and makefiles

[21:23] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/577566ed8620a263d5a77218f22463749350f25f

[21:23] <dalek> rakudo: 7ab01c5 | (Patrick R. Michaud)++ |  (2 files):

[21:23] <dalek> rakudo: Change Configure.pl to use build/Makefile.in.

[21:23] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/7ab01c54c744cea1d844fd7c47c8bcaf8c6fc109

[21:27] <moritz_> I'm starting to like the way git works

[21:29] *** Chillance joined
[21:30] *** riffraff left
[21:31] *** kate21de joined
[21:37] *** kate21de left
[21:38] *** kate21de joined
[21:40] *** rindolf left
[21:40] *** Limbic_Region left
[21:41] <chrisdolan> The rakudo portion of the frozen perl hackathon is breaking up now.

[21:42] <chrisdolan> Thanks, moritz

[21:50] *** kate21de left
[21:50] *** chrisdolan left
[21:50] *** kate21de joined
[21:53] *** justatheory joined
[21:53] *** rhr joined
[21:55] *** FurnaceBoy left
[22:05] *** icwiener-_- joined
[22:06] *** ejs joined
[22:07] *** rhr_ left
[22:13] *** IllvilJa joined
[22:13] *** nihiliad left
[22:19] *** icwiener-_- is now known as icwiener

[22:21] *** icwiener_ left
[22:32] *** meppl joined
[22:46] *** ejs left
[22:54] *** DemoPhreak joined
[23:12] *** DemoFreak left
[23:24] *** elmex left
[23:24] *** elmex joined
[23:26] *** kate21de left
[23:26] *** kate21de joined
[23:28] *** DemoPhreak is now known as DemoFreak

[23:30] *** DemoFreak left
[23:30] *** iblechbot left
[23:38] *** hercynium joined
[23:40] *** maerzhase left
[23:58] <pugs_svn> r25249 | particle++ | [S19] various minor updates and removal of stale comments

