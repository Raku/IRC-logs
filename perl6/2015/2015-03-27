[00:00] <TimToady> m: say 42.fmt("%05d")

[00:00] <camelia> rakudo-moar f5d0bc: OUTPUT«00042␤»

[00:01] <TimToady> 'course the old $# variable is like, from Perl 3 or 4

[00:01] <TimToady> well, actually, probably Perl 1

[00:01] <geekosaur> whenever a2p was added, iirc

[00:01] <TimToady> given it was put in for a2p

[00:02] <TimToady> that would be Perl 1 then :)

[00:02] <jdv79> i still don't get it - i think i want elems

[00:02] <jdv79> m: 0 .. $#{$data_tree}

[00:02] <camelia> rakudo-moar f5d0bc: OUTPUT«5===SORRY!5=== Error while compiling /tmp/PuqTtPhl3p␤Unsupported use of $# variable; in Perl 6 please use .fmt␤at /tmp/PuqTtPhl3p:1␤------> 030 .. $#7⏏5{$data_tree}␤»

[00:02] <TimToady> no, that's a variant of $#foo which is completely different

[00:02] <jdv79> what i want is $data_tree.elems, right?

[00:03] <TimToady> I guess it doesn't pick up the {} there correctly

[00:03] <TimToady> for that range you just wan ^$data_tree or so

[00:03] <TimToady> *want

[00:04] *** ssutch left
[00:04] <TimToady> my $data_tree = <a b c d e>; say ^$data_tree

[00:04] <TimToady> m: my $data_tree = <a b c d e>; say ^$data_tree

[00:04] <camelia> rakudo-moar f5d0bc: OUTPUT«0..^5␤»

[00:04] <TimToady> std: 0 .. $#{$data_tree}

[00:04] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Unsupported use of $# variable; in Perl 6 please use .fmt at /tmp/ScfrIKNj2L line 1:␤------> 030 .. $#7⏏5{$data_tree}␤Parse failed␤FAILED 00:00 136m␤»

[00:04] <jdv79> i never knew about the fmt related form - just the array usage

[00:04] <TimToady> hmm, I guess STD gets it wrong too

[00:05] <TimToady> $# (without brackets) was a way to set a default output format for any numeric

[00:05] <TimToady> it's long deprecated

[00:05] *** RabidGravy left
[00:05] <jdv79> ok, reading that now - removed in 5.10 it seems

[00:05] <jdv79> anyway, thanks

[00:06] <TimToady> so there's really no point in that error message

[00:06] <TimToady> even if it were correct, which it isn't...

[00:07] *** ssutch joined
[00:08] *** Guest35307 left
[00:09] *** ssutch left
[00:11] *** risou is now known as risou_awy

[00:12] <dalek> rakudo/nom: bcac75c | TimToady++ | src/Perl6/Grammar.nqp:

[00:12] <dalek> rakudo/nom: don't bother to correct ancient $# variable

[00:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bcac75cf2e

[00:13] *** beastd left
[00:13] *** airdisa_ left
[00:16] *** virtualsue_ joined
[00:17] *** virtualsue left
[00:17] *** virtualsue_ is now known as virtualsue

[00:18] *** virtualsue left
[00:18] <dalek> roast: 2389e34 | TimToady++ | S32-exceptions/misc.t:

[00:18] <dalek> roast: ignore ancient $# variable

[00:18] <dalek> roast: review: https://github.com/perl6/roast/commit/2389e34d69

[00:22] *** tinyblak left
[00:23] *** laouji joined
[00:38] *** zakharyas joined
[00:39] *** laouji left
[00:39] *** laouji joined
[00:44] *** laouji left
[00:45] *** yqt left
[00:46] *** bjz joined
[00:47] *** laouji joined
[00:54] <[Coke]> TimToady++

[00:57] *** zakharyas left
[01:13] *** bjz left
[01:16] *** chenryn joined
[01:18] *** jack_rabbit joined
[01:20] *** chenryn left
[01:22] *** gfldex left
[01:26] *** atweiden joined
[01:30] *** kaare_ left
[01:32] <dalek> rakudo/nom: fafc5b0 | hoelzro++ | src/core/PseudoStash.pm:

[01:32] <dalek> rakudo/nom: Add comment to else branches in PseudoStash

[01:32] <dalek> rakudo/nom: 

[01:32] <dalek> rakudo/nom: The else branches correspond to the case when $!mode is

[01:32] <dalek> rakudo/nom: STATIC_CHAIN, and having the comment makes it evident when searching

[01:32] <dalek> rakudo/nom: the file for STATIC_CHAIN that this is when that mode takes effect

[01:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fafc5b0478

[01:42] *** travis-ci joined
[01:42] <travis-ci> Rakudo build failed. Rob Hoelz 'Add comment to else branches in PseudoStash

[01:42] <travis-ci> http://travis-ci.org/rakudo/rakudo/builds/56043141 https://github.com/rakudo/rakudo/compare/bcac75cf2e8f...fafc5b047818

[01:42] *** travis-ci left
[01:56] *** bjz joined
[01:57] *** travis-ci joined
[01:57] <travis-ci> Rakudo build failed. Rob Hoelz 'Add comment to else branches in PseudoStash

[01:57] <travis-ci> http://travis-ci.org/rakudo/rakudo/builds/56043141 https://github.com/rakudo/rakudo/compare/bcac75cf2e8f...fafc5b047818

[01:57] *** travis-ci left
[02:01] *** Hor|zon joined
[02:02] *** bjz left
[02:07] *** Hor|zon left
[02:07] *** tinyblak joined
[02:11] *** larion left
[02:12] *** chenryn joined
[02:13] *** larion joined
[02:13] *** coffee` left
[02:13] *** tinyblak_ joined
[02:16] *** tinyblak left
[02:26] *** bjz joined
[02:47] *** molaf_ left
[02:51] *** adu joined
[02:52] *** telex left
[02:53] *** adu left
[02:54] *** telex joined
[03:03] *** molaf_ joined
[03:05] *** noganex_ joined
[03:08] *** noganex left
[03:16] <skids> https://gist.github.com/skids/7c9089e9c941c5fc1222 # Why I've been messing around with CompUnit, by the way.

[03:21] *** BenGoldberg left
[03:24] *** kaleem joined
[03:37] *** raiph left
[03:37] *** raiph joined
[03:40] *** lichtkind left
[03:43] <b2gills> m: my $k = <a b c>;my $n = 2; for [X] |($k xx $n) { say "$^a $^b" } # fix for http://rosettacode.org/wiki/Permutations_with_repetitions#Perl_6

[03:43] <camelia> rakudo-moar fafc5b: OUTPUT«a a␤a b␤a c␤b a␤b b␤b c␤c a␤c b␤c c␤»

[03:51] *** davido_ left
[03:51] *** Hor|zon joined
[03:53] *** davido_ joined
[03:55] *** laouji left
[03:56] *** Hor|zon left
[03:56] *** larion left
[03:59] <dalek> rakudo/tab-completion: 7aa28d2 | hoelzro++ | src/Perl6/Compiler.nqp:

[03:59] <dalek> rakudo/tab-completion: Don't only complete method names

[03:59] <dalek> rakudo/tab-completion: review: https://github.com/rakudo/rakudo/commit/7aa28d2b74

[03:59] <dalek> rakudo/tab-completion: bd68f7f | hoelzro++ | src/Perl6/Compiler.nqp:

[03:59] <dalek> rakudo/tab-completion: Offer completions for classes from imported modules

[03:59] <dalek> rakudo/tab-completion: review: https://github.com/rakudo/rakudo/commit/bd68f7fe56

[03:59] <dalek> rakudo/tab-completion: 7188744 | hoelzro++ | src/Perl6/Compiler.nqp:

[03:59] <dalek> rakudo/tab-completion: Add completions for imported modules

[03:59] <dalek> rakudo/tab-completion: review: https://github.com/rakudo/rakudo/commit/7188744dfd

[04:05] *** laouji joined
[04:06] *** Sqirrel left
[04:08] *** kaleem left
[04:09] *** raiph left
[04:12] *** chenryn left
[04:17] *** simcop2387 left
[04:22] *** Sqirrel joined
[04:34] *** larion joined
[04:56] *** molaf_ left
[05:09] *** laouji_ joined
[05:11] *** laouji left
[05:35] *** atweiden left
[05:38] *** chenryn joined
[05:40] *** Hor|zon joined
[05:41] *** skids left
[05:45] *** Hor|zon left
[05:51] *** yeahnoob joined
[06:18] *** ash_gti joined
[06:23] *** diana_olhovik_ joined
[06:24] *** yeahnoob left
[06:28] *** diana_olhovik_ left
[06:35] *** ash_gti left
[06:42] *** bjz_ joined
[06:44] *** bjz left
[06:46] *** simcop2387 joined
[06:48] *** anaeem1 joined
[06:58] *** grondilu joined
[07:00] *** gfldex joined
[07:00] *** SamuraiJack joined
[07:05] *** xprime left
[07:06] *** prime joined
[07:09] *** diana_olhovik joined
[07:20] *** jack_rabbit left
[07:23] *** FROGGS joined
[07:24] *** sirhouseboat left
[07:27] *** fhelmberger joined
[07:28] *** jack_rabbit joined
[07:28] <FROGGS> o/

[07:29] *** Hor|zon joined
[07:34] *** Hor|zon left
[07:43] *** gfldex left
[07:47] *** jack_rabbit left
[07:50] <TimToady> b2gills: fixed, thanks

[07:56] *** abraxxa joined
[07:59] *** lsm01 left
[08:01] *** lsm01 joined
[08:02] *** Rounin joined
[08:10] *** darutoko joined
[08:15] *** eli-se joined
[08:19] *** [particle]1 joined
[08:20] <nwc10> http://fwierzbicki.blogspot.com/2015/03/jython-27-release-candidate-1-available.html

[08:20] * nwc10 is still wondering why blogspot is FAIL central without JS.

[08:21] <nwc10> Rendering text content is hard?

[08:21] *** [particle] left
[08:28] *** Ven joined
[08:30] *** chenryn left
[08:30] *** Hor|zon joined
[08:35] *** Hor|zon left
[08:37] *** RabidGravy joined
[08:39] <jnthn> morning, #perl6

[08:42] *** [Tux] left
[08:42] *** |Tux| left
[08:43] <eli-se> Ven: I implemented procedures!

[08:44] <Ven> \o/

[08:47] *** eli-se left
[08:47] <nwc10> github sometimes unhappy for everyone, or just for me?

[08:47] <FROGGS> seems to be unhappy for me too

[08:49] *** rindolf joined
[08:49] *** Sir_Ragnarok left
[08:50] <moritz> nwc10: it's being DDoSed

[08:50] <cdc> morning #perl6

[08:51] * Ven doesn't really understand why one would ddos github

[08:51] <cdc> I don't understand how | works in this code: "[Zeqv] |@s».ords", from http://rosettacode.org/wiki/Longest_common_prefix#Perl_6

[08:52] <cdc> please, cuold you help me? :) 

[08:52] *** sirdancealot joined
[08:52] <cdc> as of my understanding, it prevents @s».ords to be fully flattened

[08:53] *** eli-se joined
[08:53] *** Sir_Ragnarok joined
[09:03] *** Hor|zon joined
[09:03] <jnthn> Uh, I don't know what it's doing there either...

[09:04] <jnthn> | means "flatten into an argument list"

[09:07] *** larion left
[09:10] <cdc> TimToady: could you help me to understand how | is used in "[Zeqv] |@s».ords"?

[09:10] <cdc> (from http://rosettacode.org/wiki/Longest_common_prefix#Perl_6)

[09:11] <eli-se> "[Zeqv] |@s».ords" Perl confirmed

[09:11] <eli-se> what does the pipe mean?

[09:11] <jnthn> "flatten into argument list", but I didn't actually know it was valid in this context...

[09:12] <cdc> eli-se: some examples here: http://doc.perl6.org/type/Capture

[09:13] <eli-se> Does it pass the elements of @s as arguments to ords?

[09:13] <eli-se> I'm so confused. :D

[09:14] <cdc> as of my understanding, | is used by "[Zeqv]", not by "@s».ords"

[09:15] <eli-se> I'd avoid this code. :P

[09:15] <RabidGravy> morning

[09:16] <eli-se> Doesn't @ always flatten though?

[09:16] <Ven> eli-se: no, it doesn't

[09:16] <eli-se> Flattening rules seem arbitrary and are confusing.

[09:16] <Ven> | is flatten, and I think it gets away with it because of the multi-dimension array

[09:16] <Ven> assign flattens, for flattens.

[09:19] <jnthn> | is nothing to do with array flattening though

[09:19] <jnthn> It's *only* about argument lists.

[09:19] <jnthn> We should maybe find a different name for it.

[09:19] <cdc> m: [Zeqv] ((1, 1), (1, 2))

[09:19] <camelia> rakudo-moar fafc5b: ( no output )

[09:19] <Ven> it *flattens* it to an argument list?

[09:19] <cdc> m: [Zeqv] |((1, 1), (1, 2))

[09:19] <camelia> rakudo-moar fafc5b: ( no output )

[09:19] <cdc> m: say [Zeqv] |((1, 1), (1, 2))

[09:19] <camelia> rakudo-moar fafc5b: OUTPUT«True False␤»

[09:20] <cdc> m: say [Zeqv] ((1, 1), (1, 2))

[09:20] <camelia> rakudo-moar fafc5b: OUTPUT«True True True True␤»

[09:20] <jnthn> Ven: Well, it usually shows up when you do foo(|@pos-args) or so

[09:20] <Ven> indeed

[09:20] *** kjs_ joined
[09:21] <jnthn> I can see it has an effect above but it looks highly accidental to me.

[09:21] <jnthn> Could do with a TimToady to ask... :)

[09:22] <jnthn> But we'll have to wait some hours for that.

[09:22] <cdc> ok :) Thanks !

[09:30] <sjn> m: [R=>] 1..9

[09:30] <camelia> rakudo-moar fafc5b: ( no output )

[09:30] <sjn> m: say [R=>] 1..9

[09:30] <camelia> rakudo-moar fafc5b: OUTPUT«(((((((9 => 8) => 7) => 6) => 5) => 4) => 3) => 2) => 1␤»

[09:30] <sjn> m: ([R=>] 1..9).gist

[09:30] <camelia> rakudo-moar fafc5b: ( no output )

[09:31] <jnthn> .gist just formats it; need .say to get output

[09:31] * sjn is a bit surprised that a Pair can have a Pair as key

[09:31] <jnthn> A Pair can have anything as its key and value, pretty much

[09:31] <Ven> sjn: why so?

[09:32] <sjn> Ven: maybe because of perl5 :)

[09:32] <Ven> only strings can be keys in perl5, no?

[09:32] <sjn> mm

[09:33] <jnthn> And => is a fat comma in Perl 5 rather than constructing an actual Pair object, iirc

[09:34] <Ven> that too :P

[09:34] <sjn> mm

[09:35] <eli-se> m: say ((<W I> Z <A R D>), <A B E A R D>)

[09:35] <camelia> rakudo-moar fafc5b: OUTPUT«W A I R A B E A R D␤»

[09:38] <eli-se> Poetry 6

[09:39] <eli-se> jnthn: => in Perl 5 is the same as , except (assuming use strict) that a bareword is allowed at the left side

[09:40] *** darutoko- joined
[09:40] <eli-se> http://ideone.com/LM5vWj

[09:42] *** darutoko left
[09:43] *** laouji_ left
[09:45] *** chenryn joined
[09:46] *** larion joined
[09:49] *** chenryn left
[09:53] * sjn looks more at Pairs

[09:54] <sjn> what's the difference between antipair and invert?

[09:54] * sjn has trouble seeing the point of antipair

[09:56] <jnthn> invert is only on a Pair as a degenerate case.

[09:57] <jnthn> See antiparis and invert on hashes to see what's going on, iirc.

[10:00] *** chenryn joined
[10:00] <sjn> ok, so if you want to invert a pair, and make sure it fails it fails if you're passed something else; use antipair

[10:00] <sjn> -it fails

[10:00] <eli-se> antipairs annihilate with pairs, inverts don't :P

[10:01] <FROGGS> m: say <1 2 3 4>.antipair

[10:01] <camelia> rakudo-moar fafc5b: OUTPUT«No such method 'antipair' for invocant of type 'Parcel'␤  in block <unit> at /tmp/k7FgLGAzzV:1␤␤»

[10:01] <sjn> don't know what that means

[10:01] <FROGGS> m: say <1 2 3 4>.hash.antipair

[10:01] <camelia> rakudo-moar fafc5b: OUTPUT«No such method 'antipair' for invocant of type 'Hash'␤  in block <unit> at /tmp/e1rwICLNog:1␤␤»

[10:01] <FROGGS> w/e

[10:01] <jnthn> antipairs

[10:01] <FROGGS> m: say <1 2 3 4>.antipairs

[10:01] <camelia> rakudo-moar fafc5b: OUTPUT«1 => 0 2 => 1 3 => 2 4 => 3␤»

[10:01] <FROGGS> m: say <1 2 3 4>.hash

[10:01] <camelia> rakudo-moar fafc5b: OUTPUT«1 => 2, 3 => 4␤»

[10:01] <FROGGS> hmmm

[10:02] <FROGGS> is that suppose to happen?

[10:02] <sjn> that looks very confusing

[10:02] <FROGGS> I had expected  2 => 1, 4 => 3 for antipairs...

[10:02] <jnthn> Looks right to be

[10:02] <FROGGS> but I did not read the (design) docs about that

[10:02] <jnthn> m: say <1 2 3 4>.pairs

[10:02] <camelia> rakudo-moar fafc5b: OUTPUT«0 => 1 1 => 2 2 => 3 3 => 4␤»

[10:03] <FROGGS> ahhh, I see

[10:03] <jnthn> Note how .antipairs gets you what .pairs would but with key/value swapped

[10:03] <FROGGS> yeah

[10:03] <FROGGS> makes sense

[10:03] <FROGGS> since it is not antihash :o)

[10:03] <jnthn> m: my %h = a => 1, b => 2, c => 3; say %h.pairs; say %h.antipairs; say %h.invert;

[10:03] <camelia> rakudo-moar fafc5b: OUTPUT«a => 1 b => 2 c => 3␤1 => a 2 => b 3 => c␤1 => a 2 => b 3 => c␤»

[10:03] <jnthn> m: my %h = a => 1, b => 2, c => 1; say %h.pairs; say %h.antipairs; say %h.invert;

[10:03] <camelia> rakudo-moar fafc5b: OUTPUT«a => 1 b => 2 c => 1␤1 => a 2 => b 1 => c␤1 => a 2 => b 1 => c␤»

[10:04] <jnthn> Uh. Hmm.

[10:04] <jnthn> I thought that's where there'd be a difference...

[10:04] * jnthn should apparently read the design docs too

[10:05] *** Rounin left
[10:06] <sjn> antipairs gives no hits on doc.perl6.org

[10:07] <sjn> ah, incomplete docs. never mind

[10:07] *** espadrine joined
[10:13] *** larion left
[10:21] *** anaeem1 left
[10:22] *** anaeem1_ joined
[10:22] *** chenryn left
[10:25] *** Ven left
[10:26] *** Rounin joined
[10:26] *** anaeem1_ left
[10:31] <dalek> doc: 8f2c2c2 | paultcochrane++ | lib/Type/Any.pod:

[10:31] <dalek> doc: Fix typo

[10:31] <dalek> doc: review: https://github.com/perl6/doc/commit/8f2c2c201a

[10:35] <masak> good antenoon, #perl6

[10:39] *** SamuraiJack left
[10:40] *** laouji joined
[10:41] *** [Tux] joined
[10:48] *** eli-se left
[10:49] <dalek> doc: cf99a69 | paultcochrane++ | lib/Language/5to6.pod:

[10:49] <dalek> doc: Add initial docs about given-when construct

[10:49] <dalek> doc: review: https://github.com/perl6/doc/commit/cf99a69a13

[10:50] <dalek> roast: 72db753 | jnthn++ | S10-packages/precompilation.t:

[10:50] <dalek> roast: Test for RT #124162.

[10:50] <dalek> roast: review: https://github.com/perl6/roast/commit/72db753f75

[10:50] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=124162

[10:50] <jnthn> (Todo'd test, fwiw)

[10:51] <dalek> specs: c1d2dea | paultcochrane++ | S04-control.pod:

[10:51] <dalek> specs: Add missing "to" in sentence

[10:51] <dalek> specs: review: https://github.com/perl6/specs/commit/c1d2dea297

[10:51] <dalek> specs: 3fe5f38 | paultcochrane++ | S (3 files):

[10:51] <dalek> specs: Merge branch 'master' of github.com:perl6/specs

[10:51] <dalek> specs: review: https://github.com/perl6/specs/commit/3fe5f38fa5

[10:51] *** larion joined
[10:52] <RabidGravy> I have a small query about encodings: in the p5 Term::Cap there is s/\\(\d\d\d)/pack('c',oct($1) & 0177)/eg; which I somewhat naïvely translated to s:g/\\(\d\d\d)/{ pack('C', :8($0)).decode }/

[10:52] *** sirdancealot left
[10:52] <RabidGravy> (actually doing it now in the action class but the effect is the same)

[10:53] *** chenryn joined
[10:54] <RabidGravy> which is all well and good for some inputs, but in the big termcap file with lots of obscure historical devices there are quite a lot of \200 sequences

[10:54] <RabidGravy> now this quite reasonably blows up with "Maiformed UTF-8"

[10:56] <jnthn> I hope it's Malformed or we've a typo :)

[10:57] <RabidGravy> so after my little brane kicked around for a bit I realised that the same effect could achieved with :8($0).chr  which does work fine

[10:57] <masak> no, it's literally shaped like the French month of Mai.

[10:57] <psch> \o

[10:58] <masak> o/

[10:58] <RabidGravy> in the merry merry month of Mai 

[10:58] <psch> is the french month of Mai the same as the german one?

[10:58] <masak> looks like

[10:58] <RabidGravy> anyway this works as I expect  :8("200").chr.ord gives 128 etc

[11:00] <RabidGravy> but it has "upgraded" the string and in the output there is a BOM which as I see it is going to break the intent of the tc entry

[11:00] <masak> m: my $promise = Promise.new; say $promise.status; Promise::Vow.new(:$promise).keep(42); say $promise.status

[11:00] <camelia> rakudo-moar fafc5b: OUTPUT«Planned␤Kept␤»

[11:00] * masak submits rakudobug

[11:00] <masak> I should read source more often :>

[11:01] <masak> seems you can create a new Promise::Vow just by referring to it, because it's an `our` class.

[11:01] <jnthn> umm...wtf

[11:01] <jnthn> I thought that was a lexical class

[11:01] <masak> all accesses *should* go through the .vow method in Promise, but they don't have to

[11:03] <jnthn> masak: Please try making it a lexical class and seeing if that helps things.

[11:04] <masak> will do, just let me finish submitting the rakudobug first.

[11:04] * masak has a Perl 6 day today o/

[11:04] <masak> jnthn: I dug down in git blame. you created it (as "Keeper") in 0358bae2394e14c7b4f42cd4e7f069a19c1bf060 -- it was 'our'-scoped already then.

[11:06] * nwc10 has a POETS day

[11:07] <RabidGravy> that's really, really early nwc10 - I do hope you're going to call beer o'clock early

[11:08] <jnthn> masak: OK...I suspect it's an oversight. I can't think of any reason I'd have wanted it to be non-lexical...

[11:08] <masak> me either.

[11:08] <masak> it feels like the pattern completes perfectly if it is a lexical.

[11:08] <jnthn> Right.

[11:08] <jnthn> (previous jnthn)-- # not thinking about scope

[11:17] <[ptc]> nwc10: just so you can impress your coworkers: a POETS day translates in German roughly to: Freitag ab eins, macht jeder seins

[11:18] <jnthn> .oO( How is the tag frei if I have to go to work? :P )

[11:18] *** Akagi201_ left
[11:18] *** Akagi201 joined
[11:19] * jnthn has got RT#124162 fixed on Moar HEAD o/

[11:19] * synopsebot Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=124162

[11:19] <psch> jnthn: there's a series of books that builds on that pun (i guess it is one?)

[11:19] <[ptc]> jnthn: :P

[11:19] <psch> jnthn: it's about one Herr Taschenbier, that gets a visit from the Sams, after a week of things happening that fit with the name of the day

[11:20] <jnthn> :D

[11:20] <psch> jnthn: e.g. on thursday (Donnerstag) there's thunder

[11:20] <psch> http://de.wikipedia.org/wiki/Sams_(Buchreihe)

[11:20] <[ptc]> jnthn: well, I guess in Germany all of the work is already done on Dienstag

[11:20] <psch> no translated article apparently :/

[11:21] <psch> but that's likely because the books aren't translated either, which would be hard i suppose

[11:22] <jnthn> Yes, unfortunately ability to make basic puns in a language != having any competence in it :)

[11:25] *** larion left
[11:26] *** larion joined
[11:31] *** |Tux| joined
[11:33] *** raiph joined
[11:37] * masak tried to explain "MOP to break privacy in your tests is not a good idea" in all possible ways in a p6u post

[11:37] *** Tux__ joined
[11:38] *** |Tux| left
[11:40] *** anaeem1_ joined
[11:42] <dalek> roast: 08eb364 | jnthn++ | S10-packages/precompilation.t:

[11:42] <dalek> roast: 6model parametric interning + pre-comp test

[11:42] <dalek> roast: 

[11:42] <dalek> roast: Currently todo'd on all backends.

[11:42] <dalek> roast: review: https://github.com/perl6/roast/commit/08eb364625

[11:43] <masak> ok, declaring 'my Vow' compiles and passes the immediate test of hiding the Vow class.

[11:43] <masak> spectesting.

[11:43] <jnthn> masak++

[11:44] *** anaeem1_ left
[11:53] *** vendethiel left
[11:54] *** vendethiel joined
[11:57] *** skids joined
[11:57] <[Tux]> Something recent broke Text::CSV :(

[11:58] <dalek> nqp: 579b06f | jnthn++ | docs/serialization_format.markdown:

[11:58] <dalek> nqp: Initial parametric intern serialization design.

[11:58] <dalek> nqp: 

[11:58] <dalek> nqp: Describes a new section to hold information we need to implement the

[11:58] <dalek> nqp: cross-compilation-unit interning of parameterized types.

[11:58] <dalek> nqp: review: https://github.com/perl6/nqp/commit/579b06f810

[11:59] *** laouji left
[12:00] <jnthn> [Tux]: How does it fail?

[12:00] * [Tux] is investigating 

[12:00] <skids> jnthn++

[12:01] <skids> Though now I have to go find another precomp bug to test my precomp Test:: stuff with :-)

[12:01] <RabidGravy> I knew a shower would sort my previous uncertainty about encodings, of course I just shouldn't worry about it until such time as I am about to output it

[12:02] * [Tux] thinks something to do with boolean

[12:02] <jnthn> shopping, lunch; bbiab &

[12:06] <[Tux]> fail is caused by some exception ~~ /string/

[12:06] <masak> PASS

[12:06] <dalek> rakudo/nom: fb991be | (Carl Masak)++ | src/core/Promise.pm:

[12:06] <dalek> rakudo/nom: Lexicalize Promise::Vow

[12:06] <dalek> rakudo/nom: 

[12:06] <dalek> rakudo/nom: See RT #124190. The mechanism of a Vow being exclusive to a Promise hinges on

[12:06] <dalek> rakudo/nom: Vow being defined as 'my'.

[12:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fb991be191

[12:06] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=124190

[12:07] <masak> gonna write a spectest for this after lunch, and then close the ticket.

[12:07] *** skids left
[12:08] *** eli-se joined
[12:08] *** abraxxa left
[12:10] *** travis-ci joined
[12:10] <travis-ci> Rakudo build failed. Carl Masak 'Lexicalize Promise::Vow

[12:10] <travis-ci> http://travis-ci.org/rakudo/rakudo/builds/56084029 https://github.com/rakudo/rakudo/compare/fafc5b047818...fb991be191c9

[12:10] *** travis-ci left
[12:11] <masak> travis-ci: what are you talking about -- I built and tested locally :/

[12:11] <masak> :(

[12:11] *** eli-se left
[12:11] * masak does a fresh checkout

[12:12] <moritz> masak: not your fault

[12:12] <moritz> https://travis-ci.org/rakudo/rakudo/jobs/56084030

[12:12] <masak> oh!

[12:12] <masak> (phew)

[12:12] <moritz>  error: RPC failed; result=56, HTTP code = 200

[12:12] <moritz> fatal: The remote end hung up unexpectedly

[12:12] <moritz> probably due to github being still under heavy load

[12:13] <dalek> specs: 695cab7 | paultcochrane++ | S04-control.pod:

[12:13] <dalek> specs: Wrap paragraphs consistently

[12:13] <dalek> specs: 

[12:13] <dalek> specs: This contains *no* changes to content and is only a formatting change to

[12:13] <dalek> specs: give the text a consistent and clean look and feel.

[12:13] *** dalek left
[12:13] *** dalek joined
[12:13] *** ChanServ sets mode: +v dalek

[12:14] <flussence> I've a tiny feature request: --profile=json (for dumping straight to a .json without the fancy html wrapper)

[12:14] <yoleaux> 26 Mar 2015 20:11Z <pippo> flussence: Thank you very much. That is interesting. Cheers.

[12:16] *** kjs_ left
[12:16] <RabidGravy> oh what joy "Finally, characters may be given as three octal digits after a \" - so, er, ":do=^J:am:le=^H:bs:cl=^NR:cm=^O%\068%+9%\068%+9:co#80:li#27:\"

[12:18] <RabidGravy> do you think they are still accepting patches for FreeBSD termcap?

[12:21] *** coffee` joined
[12:24] *** Ven joined
[12:27] *** xfix joined
[12:27] <hoelzro> tadzik: panda doesn't do anything special when a target repo has submodules, does it?

[12:29] <[Tux]> if I isolate the test, the test passes

[12:30] *** raiph left
[12:31] <jnthn> masak: I ran into the same thing earlier today...oh, but you're not on #moarvm so you didn't notice :)

[12:31] <[Tux]> If anyone feels like digging: https://github.com/Tux/CSV/blob/master/t/55_combi.t#L46 <= is the line that fails

[12:32] <tadzik> hoelzro: no, it does not

[12:32] <tadzik> mayhaps it should clone --recursive just in case

[12:33] <hoelzro> tadzik: I looked at p6-all-modules, and nothing uses submodules (yet)

[12:33] <hoelzro> but I was going to for linenoise

[12:34] <tadzik> okay, we can add --recursive there, no problem

[12:34] <hoelzro> cool!

[12:34] *** anaeem1_ joined
[12:35] *** telex left
[12:36] *** telex joined
[12:39] *** rmgk_ joined
[12:39] *** rmgk left
[12:39] *** rmgk_ is now known as rmgk

[12:42] <hoelzro> is there a routine for sorting a list in lexicographical order in NQP?

[12:42] <hoelzro> I just realized the list of completions my tab completion branch offers isn't sorted =/

[12:43] <tadzik> I don't suppose nqp has this sort of stuff

[12:44] <jnthn> No, don't know of any

[12:46] <hoelzro> tadzik: pun intended? =P

[12:46] <hoelzro> ok, I'll have to write my own routine or something

[12:46] *** tinyblak_ left
[12:46] <tadzik> hoelzro: hahaha, no, I did not :D

[12:46] *** H2O1 joined
[12:46] *** H2O1 left
[12:48] *** raiph joined
[12:50] <eiro> hello

[12:50] <Ven> \o

[12:51] *** Akagi201_ joined
[12:52] <RabidGravy> ooh it gets better, anyone who wants to feel better about their own software and has access to a FreeBSD termcap look at the entry for IBM 3163

[12:54] *** Akagi201 left
[12:54] *** chenryn left
[12:55] <[Coke]> .u rx

[12:55] <yoleaux> No characters found

[12:55] <[Coke]> .u prescription

[12:55] <yoleaux> U+211E PRESCRIPTION TAKE [So] (℞)

[12:58] *** kjs_ joined
[12:59] <[Tux]> https://gist.github.com/Tux/7d23f5478dc962699f8f <= REPRODUCED!

[12:59] <[Tux]> please fix :)

[12:59] <[Tux]> memory leak or something?

[13:00] *** jacksnipe left
[13:00] <[Tux]> jnthn, ^^

[13:00] *** kurahaupo1 joined
[13:02] <jnthn> Doubt it's a leak, could be corruption

[13:02] <jnthn> Either way, a good fine

[13:03] <[Tux]> tests++

[13:03] <jnthn> *find

[13:03] <jnthn> I'm working on $other-hard-problem at the moment

[13:03] <jnthn> But will put it on my todo list :)

[13:05] <masak> [Tux]: will you submit a rakudobug, or shall I?

[13:05] *** kurahaupo1 left
[13:06] <[Tux]> please do: you have better inside in how to describe the problem

[13:06] <masak> nice find, by the way.

[13:06] *** kurahaupo1 joined
[13:06] *** kurahaupo1 left
[13:06] <masak> surely that can be golf'd a bit?

[13:07] * masak tries

[13:07] <masak> reproduced locally.

[13:07] <masak> and at exactly the same point in the loop.

[13:07] <masak> seems very stable that way.

[13:08] <RabidGravy> and the termcap from http://www.catb.org/terminfo/ doesn't even have those capbilities

[13:15] *** anaeem1_ left
[13:16] *** anaeem1_ joined
[13:17] *** raiph left
[13:19] <masak> [Tux]: I managed to golf it quite a bit.

[13:19] <masak> m: class C is Exception { method message { "OH NOES" } }; for ^208 { { die C.new; CATCH { default {} } }; print "." }

[13:19] <camelia> rakudo-moar fb991b: OUTPUT«...............................................................................................................................................................................................................OH NOES␤  in block  at /tmp/3uBvBOFJHV:1␤␤»

[13:20] <masak> m: my $dots = 0; class C is Exception { method message { "That is $dots dots" } }; for ^208 { { die C.new; CATCH { default {} } }; $dots++ }

[13:20] <camelia> rakudo-moar fb991b: OUTPUT«That is 207 dots␤  in block  at /tmp/9q7YDKFEAC:1␤␤»

[13:20] *** anaeem1_ left
[13:21] <masak> so it *works* for 207 iterations, and then -- GC triggers? JIT? optimizer? -- it fails on the 208th.

[13:21] * masak submits rakudobug

[13:21] *** anaeem1 joined
[13:22] <arnsholt> Weird!

[13:22] <eiro> what if, when i translate something, i disagree the author ? 

[13:22] <arnsholt> If I had to guess, I suppose I'd say that it might be a bug in the spesh/JIT stuff

[13:22] <eiro> is it fair to just not translate it ? 

[13:22] <arnsholt> eiro: You translate

[13:23] <masak> eiro: insert a translator's footnote?

[13:23] <arnsholt> If it's really bad, maybe add a translator's note

[13:23] <eiro> oohhh yes :) 

[13:23] <eiro> thanks 

[13:24] <masak> yeah, the translator's note is kind of a last resort.

[13:24] <arnsholt> If you want to critique a piece, you should write a separate thing about it

[13:24] <arnsholt> As a translator, your job is to communicate the author's intent, not your own thoughts on the matter

[13:25] <eiro> this is not a critic but i disagree the conclusion 

[13:26] <eiro> i'm translating 5to6 (yes ... i have some spare time today) and about whitespaces, i read:  Many of those restrictions are unlikely to concern much real-life Perl code

[13:26] <psch> j: my $dots = 0; class C is Exception { method message { "That is $dots dots" } }; for ^208 { { die C.new; CATCH { default {} } }; $dots++ }

[13:26] <camelia> rakudo-jvm fb991b: ( no output )

[13:26] <psch> j: my $dots = 0; class C is Exception { method message { "That is $dots dots" } }; for ^500 { { die C.new; CATCH { default {} } }; $dots++ }

[13:26] <camelia> rakudo-jvm fb991b: ( no output )

[13:27] <eiro> which is not true: i always use line returns when chainning a lot of methods or walking around deep structures 

[13:27] <eiro> in perl6, you have to put a \ to do this 

[13:27] <eiro> and i think an example could be usefull here 

[13:28] <masak> eiro: pardon me for saying so, but somehow it feels very French to want to interject something while translating. ;)

[13:28] <arnsholt> psch: Good idea to constrast with JVM. And I think that finding goes well with my first instinct that it's a Moar/spesh problem

[13:28] <eiro> masak, you made a point there 

[13:29] <masak> eiro: I'd advise translating that bit straight, but then blogging about it and maybe effecting a change in the original. everybody wins that way.

[13:29] <eiro> i'll just STFU and translate :) 

[13:29] <masak> eiro++ # trascending his Frenchness :)

[13:30] <masak> Tux says something recent caused the above failure. I'd really appreciate it if someone wanted bisect (maybe a month back or so).

[13:30] <eiro> haha ... masak you know me for a while now: i owne you at least 1 blog post (about snowflakes) so i'm really nervous talking about blog posts 

[13:30] <masak> I could do it myself, but I would prefer to delegate so that I can use my `perl6` for other stuff.

[13:31] <[Tux]> last PASS was yesterday or wednesday

[13:31] <masak> eiro: you owe me a post about snowflakes? tell me more!

[13:31] <[Tux]> I rebuild rakudo daily

[13:31] <psch> arnsholt: spesh/jit are really far outside "stuff psch knows", but it has to be somewhere in moar i suppose... :)

[13:31] <psch> i don't think codegen there should be sufficiently different

[13:32] *** Morjo left
[13:32] * masak .oO( I build my Rakudo every day. do you even lift? ) :P

[13:32] <jnthn> There was a Moar version bump yesterday, for the first time since the 2015.03 release.

[13:33] <jnthn> -2015.03

[13:33] <jnthn> +2015.03-16-ga752064

[13:33] <eiro> masak, it was about the way i write code in perl5 (in perlude afaik). you told me not to lead lines with coma and i answer that it makes things more readable. then you explain me the concept of snowflake 

[13:33] <RabidGravy> anyone who use rakudobrew on FreeBSD?

[13:33] <masak> oh, that's a prime candidate, then.

[13:34] <jnthn> Curiously, the only spesh patches I see in the list change the thresholds for when dynamic opt kicks in.

[13:34] *** FROGGS left
[13:34] <jnthn> Meaning the problem in theory woulda been noticable *sooner* before...

[13:34] <masak> eiro: wow. I remember the discussion about commas, but I have kind of forgotten about the snowflake connection.

[13:34] <eiro> i wanted to explain my point of view in a blog post, tried a few time but never get the point i have something readable 

[13:36] <eiro> masak, i remember the snowflake connection because the blog post draft is named "snowflakes looks alike" or something

[13:36] <masak> :)

[13:37] <masak> should make it easy to search the backlog for the conversation.

[13:37] <psch> r: say "how many backends is that?"

[13:37] <camelia> rakudo-moar fb991b: OUTPUT«how many backends is that?␤»

[13:38] <masak> eiro: found it. seems like the "snowflake" metaphor is from someone else's blog post: http://irclog.perlgeek.de/perl6/2012-10-26#i_6101700

[13:38] <masak> which explains why it didn't leave a strong impression in me.

[13:38] <Ven> masak: why does it sound french to add stuff in translations? I'm interested :P

[13:38] <masak> Ven: I dunno, it just does.

[13:38] <Ven> masak: well, got any example for me?

[13:38] <eiro> yep. but i i'm trying a new approach of my todo list: switching algorithm from "FILO" to the gandalf principle: "you shall not pass"

[13:39] <masak> Ven: maybe I have the French pegged as people who like to intellectually disagree a lot.

[13:39] <Ven> I think you could even drop "intellectually" most of the time :P

[13:39] <masak> Ven: closest concrete example I can think of is "Lisp In Small Pieces", which is a very opinionated book :)

[13:40] <Ven> BooK isn't *that* opinionated... *g* (sorry, book)

[13:41] *** skids joined
[13:41] <masak> hehe

[13:41] <masak> BooK knew what he signed up for when he chose his nick.

[13:42] *** anaeem1 left
[13:43] <masak> eiro: dunno if I mentioned it in the last comma conversation we had, but your comma convention breaks the way commas work in *writing*, which is why it looks ugly. my convention protects against the same things, but doesn't break the way commas work in writing.

[13:44] *** tinyblak joined
[13:45] <psch> hrm, github still under fire :/

[13:45] <psch> clone worked, push doesn't

[13:46] <masak> different read side and write side, perhaps?

[13:46] *** airdisa joined
[13:46] <gtodd> https://www.artsy.net/feature/the-algorithm-auction  there is nothing perl related ....

[13:48] <RabidGravy> ah I thought it was me and github today

[13:49] <jnthn> psch: I've found retrying after a little time seems to work

[13:49] <RabidGravy> one in three requests failing

[13:50] *** SamuraiJack joined
[13:50] *** SamuraiJack left
[13:50] *** SamuraiJack joined
[13:51] <psch> yeah, push went through

[13:51] *** SamuraiJack left
[13:52] *** raiph joined
[13:52] <psch> "Reenable j: for r: and p6:, replace star-p: with star-j: in star:. " but i don't think camelia cares automatically?

[13:53] <RabidGravy> don't think I'll play FreeBSD today - I knew I should have gone for a noise day

[13:54] *** eli-se joined
[13:54] *** dalek left
[13:54] *** PerlJam left
[14:01] <psch> .ask moritz can you check my perl6/evalbot commit and update camelia?

[14:01] <yoleaux> psch: I'll pass your message to moritz.

[14:02] *** kaleem joined
[14:04] <masak> how would I formulate a spectest that checks for Promise::Vow not being an 'our' class?

[14:04] <masak> is checking that `Promise.WHO<Vow> :exists` is False an OK way to do it?

[14:05] <masak> m: my $p = Promise.new; my $vowname = $p.vow.^name; say Promise.WHO{$vowname} :exists

[14:05] <camelia> rakudo-moar fb991b: OUTPUT«False␤»

[14:06] <masak> maybe something like that? then even if we rename Vow (like it was renamed from Keeper to Vow before), the spectest remains meaningful.

[14:06] <psch> ...and >20 load on hack again :/

[14:06] <jnthn> Seems reasonable.

[14:06] * masak makes it so

[14:06] * psch should maybe have moved to the irc host after all

[14:08] *** vendethiel left
[14:10] *** vendethiel joined
[14:20] *** sno left
[14:21] *** lucas_ joined
[14:33] *** Akagi201_ left
[14:34] *** Akagi201 joined
[14:34] *** Akagi201 left
[14:35] *** Akagi201 joined
[14:37] *** raiph left
[14:37] *** airdisa left
[14:38] *** airdisa joined
[14:39] <lucas_> Hi. So :U means either a type object or a failure object, right? How come some methods in Bool.pm has a signature of Bool:U and they still work on defined objects?

[14:40] <jnthn> lucas_: Example?

[14:40] <lucas_> In other words, why do their signature must be Bool:U and not just Bool?

[14:41] <lucas_> pick, roll, and pre/postfix ++, --

[14:42] *** larion left
[14:42] <jnthn> m: True.pick

[14:42] <camelia> rakudo-moar fb991b: OUTPUT«Cannot call pick(Bool: ); none of these signatures match:␤    (Bool:U: *%_)␤    (Bool:U: Any $n, *%_)␤  in block <unit> at /tmp/pPdm5uWQds:1␤␤»

[14:42] <jnthn> Doesn't look like it's wrongly working on a defined object to me...

[14:42] *** airdisa left
[14:43] <jnthn> The prefix/postfix cases are multi candidates and are defining the auto-viv semantics.

[14:43] <jnthn> So a defined Bool hits an implementation of ++/-- elsewhere

[14:43] <jnthn> Probably the one that delegates to .pred/.succ

[14:44] <psch> psch@hack:~$ ps -ely | grep cron | wc -l

[14:44] <psch> 43

[14:45] <psch> /o\

[14:46] <lucas_> jnthn: Thanks! I just started reading Bool.pm source and I'm still a little confused.

[14:49] *** yoleaux left
[14:49] *** yoleaux joined
[14:49] *** ChanServ sets mode: +v yoleaux

[14:49] *** eli-se left
[14:55] <skids> So, if I fork rakudo to PR my Test:: enhancements, should I select perl6 organization option versus myself?  I don't know which way works out better.

[14:56] <jnthn> skids: Probably yourself, if I understand the question correctly

[14:56] <psch> skids: you could also branch in-repo i suppose

[14:57] <skids> Don't think I have the bit for that.

[14:57] <psch> oh right, commit access to the repos isn't the same as being in the org

[14:58] *** risou_awy is now known as risou

[14:58] <psch> skids: you're talking about Test::Utils and such?

[14:58] <psch> those are in roast, and you have commits there

[14:58] <psch> at least if you're skids on github as well :)

[14:59] <skids> jnthn: Basically when I hit fork it now gives me a popup to choose myself or the perl6 org.  And I don't know what that does exactly.

[15:00] <hoelzro> skids: it's asking if you want the fork under your user (github.com/skids/rakudo-fork) or the Perl 6 org (github.com/perl6/rakudo-fork)

[15:00] <jnthn> skids: I think if you choose yourself then you'll get a github.com/skids/rakudo

[15:00] <jnthn> Which is probably what you want.

[15:00] <hoelzro> if you have a commit bit, I think you should just do it in a branch on perl6/rakudo

[15:01] *** yoleaux left
[15:01] <skids> hoelzro: I only have a bit for docs/spec etc.

[15:01] *** yoleaux joined
[15:01] *** ChanServ sets mode: +v yoleaux

[15:01] <hoelzro> ah, ok

[15:01] <hoelzro> then I would say fork to your user

[15:01] <skids> It is decided then :-)

[15:02] *** vendethiel left
[15:02] <psch> so it wasn't about Test::Util apparently

[15:02] <skids> psch: No, https://gist.github.com/skids/7c9089e9c941c5fc1222

[15:02] <psch> on that note, i've occasionally wanted &is_run when writing tests

[15:03] <psch> it's not designed, so i suppose that'll be ecosystem Test::More or something

[15:05] <skids> I suppose the code could go anywhere, but it's intended to actually be used in roast eventually.

[15:05] *** larion joined
[15:10] <psch> skids: well, rakudo/lib/Test.pm is the Test that we shit to end-users.  roast/packages/Test/Util.pm contains more compiler-specific testing routines

[15:10] *** raiph joined
[15:10] <psch> s/shit/ship/

[15:10] <psch> o.o

[15:10] <skids> Yeah I figured that out. :-)

[15:10] *** tinyblak left
[15:10] * grondilu nominates psch for the typo of the year :)

[15:11] * jnthn chokes on his tea :P

[15:11] <skids> Well, ATM that code uses some nqp stuff, but once CompUnit is implemented to spec it will not be compiler specific.

[15:12] <psch> skids: i'm just wondering if that's something users will want to test

[15:13] <skids> It does raise the minimum bar a bit WRT exception handling probably, but just to run Test you already need to have EVAL and try.

[15:13] <psch> i'm not really opposed to putting it there, i'm just remembering that it can sometimes be a bit grating to wait for someone to look over a PR... :)

[15:13] * psch should maybe start doing that occasionally as well

[15:14] <skids> Well I'm very open to suggestions as to the destination, and also as to the actual speccing of exported functions to use it.

[15:15] *** Ven left
[15:16] *** [Sno] joined
[15:16] <RabidGravy> speaking of nqp stuff, in Linux::Fuser I've used nqp::lstat - is that okay for the long term? or is there a plan to implement stat()/lstat() for e.g. IO::Path

[15:17] <[Coke]> nqp ops in rakudo should be rare. If you have to use them, we probably need to implement something in rakudo.

[15:17] <[Coke]> in future, you'll need something like use NQP_STUFF; to declare it.

[15:17] <jnthn> RabidGravy: That should be exposed eventually; I think lizmat++ already has worked on that in the newio branch

[15:17] *** tinyblak joined
[15:20] <RabidGravy> cool, I'll keep an eye on that then :)

[15:21] <skids> psch: I guess the real question is, would an ecosystem module author need to ensure that the compiler could run a precomp unit that invokes his code before allowing panda to install it for production use.  And I've seen some places where I would need that, though hopefully they will all go away.

[15:21] *** vendethiel joined
[15:24] <psch> skids: i guess then it mostly depends on whether those places are supposed to go away.  if yes it should imo be a Test::Util routine

[15:24] <psch> that is, i would answer "assuming a perfect implementation, would users want to test CompUnits?" with "no"

[15:25] *** airdisa joined
[15:25] <skids> Yes, how reliably we can prevent regressions or unnitoced stuff out of shipped products factors in.

[15:25] <psch> (i think "perfect" there probably means "100% roast conformant")

[15:25] <psch> (and roast has CompUnit tests, in that scenario)

[15:26] <psch> but that's probably a bit too hypothetical to use as an actual argument

[15:29] *** xfix left
[15:30] *** xfix joined
[15:30] *** Rounin left
[15:30] <skids> Maybe the best thing is, put it in roast until enough people ask for it.  Or Test::Util, if roast just syncs that (I don't know what goes on in roast/packages)

[15:30] <jnthn> Test::Util lives in roast, iirc

[15:31] <RabidGravy> where should $*USER be documented?  I never found it before so I did  "sub getuid() is NativeCall returns Int { ... }" to find that out

[15:32] <skids> Ah, I see, it's not an ecosystem mod.

[15:34] <masak> apparently it's Baidu's CDN that's been hijacked to DDoS Github.

[15:34] *** Ven joined
[15:34] *** fhelmberger left
[15:35] *** smls joined
[15:35] <smls> o/

[15:35] <masak> to be specific, the DDoS happens because Baidu *visitors* make a search and the results page fires off a few requests to Github.

[15:35] *** fhelmberger joined
[15:36] <moritz> ok, hack is nearly hanging again

[15:36] <yoleaux> 14:01Z <psch> moritz: can you check my perl6/evalbot commit and update camelia?

[15:36] <moritz> and, here's the thing

[15:36] <moritz> the load is >100

[15:36] <moritz> and rising

[15:36] <moritz> and yet, via the virt-manager console, it feels mostly responsive

[15:36] <masak> moritz: is it possible to see which processes are causing the load?

[15:36] <moritz> but killing processes doesn't seem to work

[15:36] <moritz> masak: I wouldn't know how

[15:36] <psch> psch@hack:~$ ps -ely | grep cron | wc -l

[15:36] <psch> 78

[15:37] <moritz> psch: yes, I've observed a high number of cron processes before

[15:37] <masak> I wonder if it's something forehead-smackingly simple that's causing hack to behave the way it does.

[15:37] <smls> RabidGravy: $*USER should be documented at http://doc.perl6.org/language/variables#Dynamic_variables (but isn't yet)

[15:37] <masak> and we'll all go "oooh" when we realize it.

[15:38] <psch> moritz: right, i was just confirming that's it's the same.  although in hindsight you probably already knew.

[15:38] <moritz> psch: but since killing the processes doesn't work (a killall hangs), I guess there's something wrong with process handling in general

[15:38] <moritz> psch: I also tried to kill your java process (simply becauses it uses quite some RAM), and that hangs too

[15:39] <psch> moritz: my java process is a perl6-j shell stuck at ^D :/

[15:39] <psch> s/shell/REPL/

[15:39] <RabidGravy> smls, that's what I thought :)   

[15:39] *** Akagi201_ joined
[15:39] *** Akagi201 left
[15:39] * [Coke] investigates hack...

[15:40] <psch> moritz: kill -9 put that process <defunct> for me just now

[15:40] *** fhelmberger left
[15:40] <smls> m: say $*USER.WHAT  # huh.

[15:40] <camelia> rakudo-moar fb991b: OUTPUT«Cannot look up attributes in a type object␤  in method gist at src/gen/m-CORE.setting:26974␤  in sub say at src/gen/m-CORE.setting:18645␤  in block <unit> at /tmp/ASjWg_tQG2:1␤␤»

[15:40] <[Coke]> irssi is responding just fine, but opening a new shell is hanging.

[15:40] <[Coke]> ... but hitting control c in the new window made it come right back?

[15:41] <masak> haha -- Github responded by XSS-ing the attacking clients, putting up an alert() in their browsers! :D

[15:41] <masak> reading this is like reading a William Gibson novel

[15:42] <Ven> haha

[15:43] <masak> anyway, Github++

[15:43] <moritz> [Coke]: the ctrl+C probably killed a program called from your .bashrc

[15:43] <masak> see it here in action: https://github.com/greatfire/ and https://github.com/cn-nytimes/

[15:44] <[Coke]> might need iodump or iostat to get io stats. (or is there some other io tool installed?)

[15:44] <moritz> atop is installed, but starting it hangs :(

[15:45] <[Coke]> regular top works

[15:45] <[Coke]> trying to run vmstat and lsof...

[15:45] <masak> moritz: sounds to me like the distribution is hosed somehow.

[15:47] <[Coke]> how can load average be 120 if 0.2% of the cpu is in use?

[15:47] *** vendethiel left
[15:47] <bartolin_> [Coke]: iowait?

[15:48] <retupmoca> FWIW, the only time I've had processes refuse to be killed was when I was out of hard disk space

[15:48] <[Coke]> how can I check io status?

[15:48] <RabidGravy> smls, just added that and sent a pull request ;-)

[15:48] <moritz> top says the CPUs are in 99.5% wait status

[15:48] <moritz> which is why the load is so high

[15:48] <bartolin_> [Coke]: if you run top there is a value for wait in the line Cpu

[15:49] <bartolin_> what moritz says

[15:49] *** vendethiel joined
[15:49] * bartolin_ can not connect to hack

[15:50] <[Coke]> so how can I see what's causing that without, e.g. iotop?

[15:50] <RabidGravy> vmstat?

[15:51] <[Coke]> vmstat hangs. :)

[15:51] <RabidGravy> can never remember the precise incantation

[15:51] <RabidGravy> oops

[15:52] <[Coke]> all the crons are in D state pretty regularly.

[15:52] *** maannj joined
[15:53] <maannj> hey all

[15:54] <[Coke]> ugh, I probably won't be able to sudo here.

[15:55] <moritz> hi maannj 

[15:55] * retupmoca wonders what 'df -h' would show

[15:55] <bartolin_> [Coke]: can you see a complete process list?

[15:55] <retupmoca> otoh, I assume hack has a lot of disk space

[15:55] <moritz> retupmoca: it hangs

[15:55] <lucas_> If there is a signature of (SomeType \a is rw) { a = ... }, the parameter could just as well be $a in the first place, right?

[15:55] <[Coke]> retupmoca: nothing, it hangs.

[15:55] <retupmoca> oh

[15:56] <[Coke]> bartolin_: sure.

[15:56] <moritz> retupmoca: but yes, it has lots of free space

[15:56] <retupmoca> well, you've reached the limits of my knowledge in the area

[15:56] *** spider-mario joined
[15:56] <bartolin_> [Coke]: ooc, could you gist it somewhere maybe?

[15:57] <[Coke]> https://gist.github.com/coke/10b64c3ce486dea00dab

[15:58] <bartolin_> thanks, [Coke]++

[15:58] <[Coke]> can anyone see syslog? I can't even.

[15:59] *** Perl6_newbee joined
[16:00] <jnthn> lucas_: I'd say so

[16:01] <bartolin_> looking at the process list I would suspect 14227 and 13927 to be problematic. but probably it's not possible to kill those?

[16:02] <lucas_> jnthn: thanks.

[16:02] *** kaleem left
[16:02] <[Coke]> I can't even kill -9 one of my processes. still shows up in ps with state of D

[16:03] <moritz> it seems no processes terminate at all

[16:03] <moritz> well, they do; it seems no processes can be killed

[16:03] <[Coke]> I suspect we'll have to reboot again, but this time maybe install iotop and leave that running somewhere. (and maybe also leave a sudo bash running somewhere)

[16:04] <bartolin_> hmm, but if you run ps, it seems to end (I see only one 'ps' in the process list, as expected)

[16:05] <[Coke]> wait, something just died!

[16:05] <moritz> load is now 133

[16:07] <moritz> screen -rd hangs

[16:07] <moritz> ok, I'll reboot

[16:07] <[Coke]> I had a man CRON process that eventually did die.

[16:07] <[Coke]> nothing else did, though.

[16:08] <RabidGravy> ah $*GROUP as well, let's do that while I'm looking

[16:08] <[Coke]> 

[16:08] <[Coke]> 

[16:08] <moritz> RabidGravy: you could be able to push directly to perl6/doc, without the need for a pull request

[16:09] <moritz> at least if you accepted my invitation :-)

[16:10] <moritz> ok, 'reboot' did nothing; I had to force-off it in the hypervisor

[16:10] *** [Coke] left
[16:10] *** sergot left
[16:10] *** masak left
[16:10] *** psch left
[16:10] *** Mouq left
[16:10] *** Util left
[16:10] *** avuserow left
[16:10] *** dalek joined
[16:10] *** ChanServ sets mode: +v dalek

[16:11] <moritz> it's back.

[16:12] <RabidGravy> moritz, not seen any invitation - but this could be the email shitting me around

[16:14] *** masak joined
[16:15] <masak> moritz++ others++ # for investigating this

[16:18] <eiro> https://github.com/eiro/doc/commit/5745d809b79e811293528873bc0d27f5c484af57

[16:19] <spider-mario> what will parameterized type serialization bring, basically?

[16:19] <eiro> got Homepage complete and 5to6 partially translated. but i guess there is no infrastructure to have it online 

[16:20] <jnthn> spider-mario: A bunch less pre-comp bugs

[16:20] <spider-mario> oh, ok

[16:20] *** psch joined
[16:21] <masak> eiro: the comment on line 70 looks like it wants to be translated to French, too

[16:22] <eiro> masak, i'm not sure about what you said about "the way commas works in writtings

[16:22] <eiro> you mean "writting code" ?

[16:22] <eiro> masak, i check 

[16:23] <masak> eiro: no, I mean writing prose

[16:23] * masak .oO( non, I mean writing prose ) :P

[16:24] <eiro> :))

[16:24] *** PerlJam joined
[16:24] <eiro> i have to admit i'm confused: so many opinions, so many good arguments 

[16:25] <spider-mario> La pratique du "code golf" n'est pas mise en avant dans Perl6

[16:25] <eiro> well... i have to stop trying to be a developper and focus on the doc 

[16:25] <spider-mario> hm, other minor typos

[16:25] <spider-mario> mind if I submit a PR some time?

[16:25] <eiro> spider-mario, french ? mayby you can fix 

[16:26] <eiro> of course not :) 

[16:26] <eiro> it was the idea of pushing things on github 

[16:27] *** maannj left
[16:27] <spider-mario> also, apparently, « espace » is technically a feminine noun, even though it’s much more common to make it masculine

[16:27] <spider-mario> which route do you prefer to take? :p

[16:27] <RabidGravy> in the meantime I've just made a pull request to document $*GROUP as well

[16:29] <eiro> spider-mario, you mean "une espace" ? 

[16:29] <eiro> spider-mario, the route you want 

[16:29] <eiro> spider-mario, also interested by a french translation ? 

[16:30] <eiro> masak, fixed 

[16:30] <spider-mario> yes

[16:30] <masak> eiro++

[16:33] * grondilu is french an is pretty sure "espace" is masculine

[16:33] <grondilu> *and

[16:33] <spider-mario> not the typographical character, apparently

[16:34] <spider-mario> but some people argue that the computer character doesn’t fall into that category

[16:35] <TimToady> maybe we should reintroduce the neuter gender into French :)

[16:35] <spider-mario> I’m all for it

[16:35] *** Ven_ joined
[16:35] * Ven_ 's also guilty of saying "un espace" when he should really say "une espace" :)

[16:36] <spider-mario> if it replaces the other genders completely for common nouns

[16:36] *** Ven left
[16:36] <Ven_> "computer character doesn’t fall into that category" seems like a typographical character to me, tho.

[16:37] * TimToady fondly remembers raising kids and saying things like "It wants a cookie."

[16:38] <jdv79> i think a lot of english speakers would find that irrationally offensive

[16:38] <dalek> doc: 9213d4b | (Jonathan Stowe)++ | lib/Language/variables.pod:

[16:38] <dalek> doc: Document $*GROUP

[16:38] <dalek> doc: review: https://github.com/perl6/doc/commit/9213d4b7ce

[16:38] <dalek> doc: 91cbe6d | moritz++ | lib/Language/variables.pod:

[16:38] <dalek> doc: Merge pull request #66 from jonathanstowe/master

[16:38] <dalek> doc: 

[16:38] <dalek> doc: Document $*GROUP

[16:38] <dalek> doc: review: https://github.com/perl6/doc/commit/91cbe6d41c

[16:38] <PerlJam> .oO( "It rubss the lotion on its skin" )

[16:38] <jdv79> basically

[16:39] <spider-mario> I’m also tired of all the (e), -e- and other politically correct nonsense

[16:39] <masak> PerlJam: I was wondering whether I was alone in having that association...

[16:39] <spider-mario> l’Académie française disapproves, too

[16:39] <masak> of course it does :P

[16:40] <spider-mario> they say that in addition to being ugly, it adds to the problem more than it solves

[16:40] <spider-mario> and that in somes cases, it is impossible altogether

[16:40] <spider-mario> (you won’t say « Le fauteuil et la chaise sont blanc(he)s »)

[16:41] <masak> I like how gender is so fundamental to us that it gets expressed as a problem in spelling.

[16:41] <PerlJam> I wonder when that first happened

[16:42] <spider-mario> do German speakers do the same?

[16:42] <spider-mario> e.g. write „Student(in)en“

[16:42] <psch> spider-mario: Student/Innen

[16:42] *** FROGGS joined
[16:43] <psch> the "I" might not be capitalized

[16:43] <spider-mario> is it as common as in France?

[16:43] <spider-mario> I really can’t stand it anymore :/

[16:43] <psch> in official documents it's very common, yeah

[16:44] <PerlJam> (I'm also wondering if the French language is having an undue influence on Perl 6  ;)

[16:44] *** [Coke] joined
[16:44] <PerlJam> [Coke]: o/

[16:44] *** raiph left
[16:45] <spider-mario> if it does, I don’t really see it

[16:45] <spider-mario> except for «», maybe :p

[16:46] <[Coke]> PerlJam: o/

[16:46] <PerlJam> spider-mario: see?!? guillemets everywhere!

[16:46] <spider-mario> it’s not as if variables were declared using « le »

[16:46] <spider-mario> le $x;

[16:46] <spider-mario> les @xs;

[16:47] <PerlJam> Though that would make an interesting module ...  use French;

[16:47] <PerlJam> But I'll leave the implementation of that to TheDamian

[16:48] <spider-mario> use Perle;

[16:48] <jnthn> Well, FROGGS is the slangs person... :D

[16:48] *** raiph joined
[16:49] <spider-mario> (as I suspected, “Perle” is taken by several other languages)

[16:49] <FROGGS> :o)

[16:51] <[Coke]> m: use Perl;

[16:51] <camelia> rakudo-moar fb991b: OUTPUT«===SORRY!===␤Could not find Perl in any of: /home/camelia/rakudo-inst-2/share/perl6/lib, /home/camelia/rakudo-inst-2/share/perl6␤»

[16:51] <[Coke]> m: use *;

[16:51] <camelia> rakudo-moar fb991b: OUTPUT«5===SORRY!5=== Error while compiling /tmp/BOOhVIMzVN␤Undeclared routine:␤    use used at line 1␤␤»

[16:53] <PerlJam> std: use *;

[16:53] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Confused at /tmp/1rB1KXae1h line 1:␤------> 3use 7⏏5*;␤    expecting any of:␤        module_name␤    version␤Parse failed␤FAILED 00:00 133m␤»

[16:53] *** kjs_ left
[16:54] <bartolin_> moritz, [Coke]: wrt hack.p6c.org: I looked at some logfiles (/var/log/syslog etc.) and it seems the log entries stopped between 13:48 and 13:50 (last entry I found was 13:48:xx), at 13:50:00 there should have been new entries from cron processes.

[16:55] <bartolin_> maybe the system partition became remounted read-only at that time (for some reason)?

[16:55] *** Ven_ left
[16:56] <bartolin_> next time we should check that.

[16:56] <[Coke]> I have iotop -d 5 running in a screen window now, fwiw.

[16:56] <hahainternet> one of your guys machines died?

[16:56] <[Coke]> bartolin_: there's nothing to check. once it happens you can't do much. :)

[16:56] <bartolin_> a read-only filesystem would explain the symptoms

[16:56] <hahainternet> bartolin_: modify your boot config to include a 'netconsole' module line

[16:56] <[Coke]> (I couldn't run df, or dmesg..)

[16:57] <hahainternet> being unable to run dmesg is a little odd

[16:57] <hahainternet> did it hang indefinitely [Coke]?

[16:57] <bartolin_> [Coke]: just run 'mount'

[16:57] <[Coke]> bartolin_: I would expect that to cause failures, not blocks.

[16:57] <[Coke]> bartolin_: I'll try it, but I bet it also hangs. we'll see

[16:57] <hahainternet> right, if it's hanging indefinitely that's a very common disk or controller failure sign

[16:57] <bartolin_> however, I would even suggest to test that hypotheses and manually remount the root-fs as read-only ...

[16:57] <hahainternet> and the result of that will be a remount,ro

[16:58] <hahainternet> bartolin_: you must have some other machine you can send udp syslogs to

[16:58] <hahainternet> doing that with the netconsole module will get you these messages

[16:58] <hahainternet> it's how we validate these sorts of failures at work

[16:58] <bartolin_> hahainternet: sounds good, yes

[16:58] <[Coke]> moritz: do you mean the reboot didn't do anything, or it rebooted back into the same state?

[16:58] <hahainternet> otherwise, your symptoms sound exactly like a disk or controller failure

[16:58] <[Coke]>   279 be/3 root        0.00 B/s    0.00 B/s  0.00 % 31.21 % [jbd2/vda6-8]

[16:59] <[Coke]> that seems to be a pretty consistent io user. peaked at 31% io. (now at 0ish, though. nevermind. :)

[16:59] <PerlJam> .oO(  And now hack slows to a crawl from all of the system monitoring we're doing  ;)

[17:01] *** cschwenz left
[17:05] *** eli-se joined
[17:13] *** muraiki joined
[17:14] *** sirdancealot joined
[17:17] *** Util joined
[17:17] *** spider-mario left
[17:19] <moritz> [Coke]: huh? hack seems fine, load is low

[17:21] <[Coke]> moritz: yes.

[17:21] <[Coke]> I started the monitor NOW because I couldn't when we were having the problem.

[17:21] <[Coke]> my reboot question was in re: backscroll. you had problem swith the reboot, trying to figure ou thte nature of the problem.

[17:22] <moritz> [Coke]: reboot didn't seem to do anything

[17:25] <[Coke]> ... "you mean it didn't reboot, or it rebooted and then it didn't seem to do anything". :)

[17:26] <moritz> yes, didn't reboot

[17:26] *** xinming joined
[17:26] <[Coke]> ok.

[17:26] <moritz> your first branch :-)

[17:32] <[Coke]> I'm asking some friends, they were curious how scr0d things were.

[17:41] *** rindolf left
[17:42] *** airdisa left
[17:43] *** airdisa joined
[17:45] *** Akagi201_ left
[17:46] *** Akagi201 joined
[17:48] *** airdisa left
[17:49] *** J-L joined
[17:50] <J-L> m: use v6; my $n = 0; if True { $n = 7 }; say $n

[17:50] <camelia> rakudo-moar fb991b: OUTPUT«7␤»

[17:50] <J-L> m: use v6; my $n = 0; if True { $n = 7 }  say $n

[17:50] <camelia> rakudo-moar fb991b: OUTPUT«5===SORRY!5=== Error while compiling /tmp/78autCj1VA␤Confused␤at /tmp/78autCj1VA:1␤------> 3use v6; my $n = 0; if True { $n = 7 }7⏏5  say $n␤»

[17:50] *** Akagi201 left
[17:51] <TimToady> std: use v6; my $n = 0; if True { $n = 7 }  say $n

[17:51] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Strange text after block (missing comma, semicolon, comment marker?) at /tmp/gs8ltr6xXD line 1:␤------> 3use v6; my $n = 0; if True { $n = 7 }7⏏5  say $n␤    expecting any of:␤     horizontal whitespace␤  statement_control␤Parse fa…»

[17:51] <J-L> Question:  Why does the version without a ';' after the closing brace fail?  It works just fine if the last line (the say() command) is on the next line.

[17:51] <TimToady> because } serves as a statement terminator only if it's the last thing on a line

[17:52] <TimToady> otherwise it's TTIAR

[17:52] <TimToady> the rakudo error is LTA there...

[17:53] <J-L> TTIAR?  LTA?

[17:53] <cdc> Two Terms In A Row

[17:53] <J-L> Is that an error?  Or is it done on purpose?

[17:53] <TimToady> see S99

[17:53] <cdc> Less Than Awesome

[17:54] <TimToady> that is by design

[17:54] <TimToady> TTIAR violates self-clocking

[17:54] <TimToady> making it much more difficult to find other errors or report on them accurately

[17:55] <J-L> As for S99, I found https://raw.githubusercontent.com/perl6/specs/master/S99-glossary.pod , but it's raw POD.  Is there another way I can read it that I don't realize?

[17:56] *** eli-se left
[17:56] <cdc> Hello TimToady, could you help me to understand how | is used in "[Zeqv] |@s».ords"?

[17:56] <cdc> J-L: http://design.perl6.org/S99.html

[17:56] <TimToady> | is "insert into argument list"

[17:56] <cdc> J-L: TTIAR + self-cloking -> http://strangelyconsistent.org/blog/macros-allowing-two-terms-in-a-row

[17:57] <TimToady> otherwise @s».ords is a single argument to the reduce

[17:57] <TimToady> and there's not much point in reducing a single argument

[17:57] *** J-L left
[17:57] *** J-L joined
[17:57] <bartolin_> moritz: would you mind if I add a nagios check for hack.p6c.org which looks for read only filesystems? also I'd add myself to the recipients for those nagios notifications

[17:58] <TimToady> the tricky thing here is that a reduce of a list infix can't just slurp its arguments, or it completely flattens sublists

[17:58] <bartolin_> moritz: maybe the problem has nothing to do with ro file system, but we don't know yet.

[17:59] <TimToady> so instead it effectively binds like a ** rather than a *

[17:59] <TimToady> but that means anything like a parcel is a single argument rather than a list of lists

[17:59] *** telex left
[18:00] <TimToady> so the | is necessary to strip one outer layer of () implied by the single argument

[18:00] *** telex joined
[18:01] *** espadrine left
[18:01] *** vendethiel left
[18:01] <TimToady> to put it another way, when you have positional arguments, you already know how parcels work

[18:02] <TimToady> so foo (1,2,3) has a single positional argument if the signature is ($), but has 3 arguments if teh signature is (*@)

[18:02] *** airdisa joined
[18:03] <TimToady> likewise foo (1,2,3),(4,5,6) has 2 args if ($$), 4 args if ($ *@), and 6 if (*@)

[18:03] *** noganex_ left
[18:03] <TimToady> if you bind to ** insteaad of *, you get 2 args again, but variadically

[18:03] <cdc> ooohh

[18:03] <cdc> TimToady: many thanks for your help!

[18:04] <cdc> if I understand correctly, the reduce binds to **

[18:04] <TimToady> we already had zip((1,2,3),(4,5,6)) working as expected when there are literal lists, but there was no way to interpolate a variable number of lists till now, which made it really hard to write a reduction over an arbitrrry number of lists without using EVAL

[18:05] <TimToady> it's effectively **, but it is actually examining the raw arg list because it needs to optionaly decont sublists

[18:06] <TimToady> we might be able to remove the decont after GLR, I dunno

[18:06] *** rindolf joined
[18:07] <cdc> and until then, we have to either use EVAL or |, right?

[18:08] <TimToady> but the trap we were in was that every way of introducing a variadic lists of lists was itemizing each list, so all list infix reductions failed for variadic purposes

[18:08] <TimToady> you will always need | to interpolate a variadic list there, I think

[18:08] * cdc have to meditate a bit more on this code

[18:08] <TimToady> again @s».ords is a single parcel, in current parlance, and will behave as a single argument

[18:09] <TimToady> (even after it's just a sublist)

[18:10] <TimToady> if you strip off the implicit parens inside the [Z], you break [Z] (1,2,3),(4,5,6) instead

[18:11] <TimToady> so we really need the | dereference to distinguish ((1,2,3),(4,5,6)) from (1,2,3),(4,5,6)

[18:12] <cdc> so can we say that "[Zeqv] |@s».ords" is the short for "[Zeqv] (@s[0].ords, @s[1].ords)"?

[18:12] <TimToady> leave out the parens on the right

[18:12] <TimToady> or the space :)

[18:12] <TimToady> afk for a bit &

[18:12] *** airdisa left
[18:13] *** smls left
[18:13] <cdc> Thanks!

[18:13] *** airdisa joined
[18:15] *** muraiki left
[18:15] <cdc> m: my @s = < this test >; say [Zeqv] @s[0].ords, @s[1].ords

[18:15] <camelia> rakudo-moar fb991b: OUTPUT«True False False False␤»

[18:16] *** airdisa_ joined
[18:17] *** Rounin joined
[18:17] *** eli-se joined
[18:17] *** airdisa__ joined
[18:18] *** airdisa left
[18:21] *** airdisa_ left
[18:23] *** muraiki joined
[18:24] <nine_> moritz: is there some collectd or similar running on hack? How was memory usage when it hang? Maybe all those processes were swapping hard. That could keep them alive for a very long time, even after kill -9

[18:24] <yoleaux> 25 Mar 2015 22:34Z <japhb> nine_: I just rebuilt from scratch again this afternoon, and Inline::Perl5 installed perfectly.  I don't know what changed, or if the problem is just plain flakey, but I'm happy to have it working now!

[18:25] *** _edwin joined
[18:26] *** kjs_ joined
[18:28] *** kjs_ left
[18:28] <nine_> I would also suggest doing smartctl -a on all hard disks and when it happens again, run dmesg. That should give some messages in case of a hardware problem or point to the OOM killer running

[18:28] *** vendethiel joined
[18:30] *** rindolf left
[18:30] *** airdisa__ left
[18:31] <lucas_> There is native_array.pm and native-array.pm in rakudo/src/core; the latter is empty. Is it going to be deleted?

[18:31] *** airdisa joined
[18:32] <bartolin_> nine_: there is http://collect.p6c.org/ ... but we don't have data after 13:48

[18:35] *** airdisa left
[18:39] <_edwin> hi all! I have a question about moarvm:

[18:39] <_edwin> currently the readlineintfh implementation expects readline/linenoise to return the line as a UTF-8 string

[18:40] <_edwin> it turns out that at least on Windows linenoise does not do UTF-8

[18:40] *** diana_olhovik left
[18:41] <_edwin> what would be the better solution: a) try to return UTF-8 from linenoise b) covert from whatever encoding linenoise returns in readlineintfh?

[18:41] <[Coke]> yes, collectd is running.

[18:41] <[Coke]> nine_: you could not run dmesg when it was happening.

[18:44] <bartolin_> I just see that collect.p6c.org is the same host as hack.p6c.org. so the missing data would fit with a ro file system. (I'm pretty sure I've seen data with nearly 100% io wait earlier -- probably data from ram which was gone with the reboot)

[18:44] <moritz> nine_: http://collect.p6c.org/

[18:45] <moritz> nine_: and I don't think a virtual machine has smart data

[18:46] *** Akagi201 joined
[18:48] <moritz> one thing I considered is moving the collectd instance either to the phyiscal host or to another virtual machine

[18:50] <raydiak> good NQnoon #perl6

[18:50] <yoleaux> 26 Mar 2015 13:04Z <FROGGS> raydiak: can you add a test to roast for https://github.com/rakudo/rakudo/pull/395 ?

[18:51] <_edwin> fwiw, I'll experiment towards a) as it is more local and I have an idea how to try it (at least for the input)

[18:51] *** Akagi201 left
[18:55] *** gfldex joined
[18:58] <moritz> bartolin_: re nagios check, please do

[19:00] <_edwin> woohoo, I can type '{', etc., in the Rakudo REPL :)

[19:06] *** lucas_ left
[19:08] <cdc> eureka!

[19:08] <cdc> m: sub f (**@args) { for @args -> $arg { .say for $arg } }; f ((1, 2, 3), (4, 5, 6))

[19:08] <camelia> rakudo-moar fb991b: OUTPUT«1 2 3 4 5 6␤»

[19:08] <cdc> m: sub f (**@args) { for @args -> $arg { .say for $arg } }; f |((1, 2, 3), (4, 5, 6))

[19:08] <camelia> rakudo-moar fb991b: OUTPUT«1 2 3␤4 5 6␤»

[19:08] <cdc> \o/

[19:09] <cdc> TimToady++ for the explanation and everything else!

[19:10] <bartolin_> moritz: I added a nagios check (for the system partition / and /home)

[19:11] <TimToady> cdc: .say for $arg is always going to loop once

[19:11] <TimToady> so is equivalent to $arg.say

[19:12] <dalek> roast: 9f9fd05 | raydiak++ | S32-str/pack.t:

[19:12] <dalek> roast: Add a test for odd-length string input to pack 'H'

[19:12] <dalek> roast: review: https://github.com/perl6/roast/commit/9f9fd05b77

[19:14] <nine_> bartolin_: a r/o file system would not cause processes to hang.

[19:15] *** diana_olhovik joined
[19:17] <moritz> more likely: something causes lots of IO load (possibly locking, not actual reads/writes), and that's the reason that the CPUs spend their time in "wait" state *and* the reason that collect couldn't write anything to disk

[19:17] <moritz> still, it's worth checking

[19:21] <bartolin_> well, maybe it's not related to the fs being ro. but so far I've seen no file which was written to after 13:50. the load did only rise slowly after 13:50 by what I've seen at collect.p6c.org

[19:22] *** Perl6_newbee left
[19:26] *** airdisa joined
[19:37] *** kjs_ joined
[19:38] *** cygx joined
[19:38] <cygx> o/

[19:38] <FROGGS> o/

[19:39] <cygx> is it a known bug that multi MAIN(Str $foo) won't dispatch if the string happens to be numeric?

[19:40] <cygx> ah...

[19:40] <cygx> Str() works

[19:40] <cygx> so not a bug?

[19:49] <[Coke]> it's meant to process command line args, so that doesn't surprise me.

[19:49] <[Coke]> you really can't make a numeric command line arg.

[19:49] <cdc> cygx: sub MAIN($foo) { $foo.WHAT.say }

[19:49] <timotimo> this is one of the places where we want an IntStr and friends

[19:49] <yoleaux> 26 Mar 2015 22:07Z <smls> timotimo: How about this as a rudimentary start? https://gist.github.com/smls/623a9831832a3f20f9e8

[19:49] <cdc> cygx: (Int+{orig-string[Str]})

[19:50] <timotimo> thank you, smls

[19:50] <cdc> when passing "3" to the script, for instance

[19:52] <Ulti> is it possible to make a default action for a grammar?

[19:53] <timotimo> with a fallback method you should be able to

[19:53] <Ulti> ahh ok so it looks for the action method and its not there so calls the fallback

[19:53] <Ulti> I'll give that a go

[20:06] <TimToady> cygx: command line args are supposed to be run automatically through val() to intuit numerics, but that is NYI in rakudo

[20:09] *** grondilu left
[20:10] <bartolin_> another note about hack: there was a helpful log file from atop in /root. the last data it has is from 13:49:28 and at that time everything looks very good (a few gig free ram, low load, no io wait, nearly no disk io and so on. so I bet, it was a sudden problem with disk access

[20:11] *** yqt joined
[20:12] <timotimo> so maybe we should be streaming out log data through the network to a computer that sits on a different machine?

[20:13] <bartolin_> yes, I think that would be a good plan

[20:17] <bartolin_> I could help setting it up (but for today it's already late)

[20:19] <_edwin> ok, the AltGr+* input problem in the Rakudo REPL is easy to fix, but looking more at linenoise, I think linenoise will need to be replaced to make Unicode work in the REPL under Windows

[20:22] *** cygx left
[20:25] *** zakharyas joined
[20:34] *** airdisa left
[20:34] *** darutoko- left
[20:35] *** airdisa joined
[20:39] *** airdisa left
[20:39] <timotimo> god damnit linenoise :(

[20:40] *** kjs_ left
[20:49] *** raiph left
[20:52] <dalek> rakudo-star-daily: 388f608 | coke++ | log/ (9 files):

[20:52] <dalek> rakudo-star-daily: today (automated commit)

[20:52] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/388f608bdb

[21:01] *** raiph joined
[21:12] *** skids left
[21:12] *** xfix left
[21:14] * itz does the interp.o clang wait :/

[21:14] <muraiki> hi all. sorry if this is a dumb question, but I'm stuck and a noob at p6. I'm trying to use p5 modules via Inline::Perl5. I'm calling a method from a module that takes named parameters in the form foo(bar => 1, baz =>2). but for some reason it isn't seeing those params being passed

[21:14] <itz> I assume that's the compiler's fault?

[21:14] <muraiki> er, "I'm calling a method from an object"

[21:14] <muraiki> in one instance I was able to wrap the params in {} and make it happy, but in this case it isn't working :(

[21:15] <muraiki> the earlier instance was a method call as a class method, though

[21:15] <muraiki> this is a method call on an object

[21:15] <Ulti> muraiki you might want to put your code in a gist 

[21:16] <Ulti> nine_ was around earlier the author of Inline::Perl5

[21:16] <PerlJam> muraiki: my guess right now is that the "list of pairs" you're creating on P6 side isn't making it across as a flattened list that P5 can understand.

[21:17] <PerlJam> muraiki: try using foo('bar', 1, 'baz', 2) and see if that works

[21:17] <Ulti> should be easy enough since a .list should fix that

[21:17] <PerlJam> muraiki: also keep in mind that I could be totally wrong :)

[21:18] <muraiki> PerlJam: that fixed it

[21:22] <PerlJam> muraiki: you might also want to ask nine about it, in case he knows how to make it Just Work without you changing your calling style.

[21:23] <muraiki> thanks :D

[21:23] <japhb> masak: Where were you reading all the interesting details of the GitHub DDOS?

[21:25] <PerlJam> muraiki: looking at the source to Inline::Perl5, it looks like it might only take a new  multi method p6_to_p5(Pair:D $value) that turns a Pair into a list of two values.

[21:34] <_edwin> for the record, regarding linenoise: having looked now at two not-quite-readline implementations in C, I'm beginning to think that most of the line editing code for the REPL should actually be in Perl 6

[21:35] *** airdisa joined
[21:35] <_edwin> that would give a better chance for getting all the tricky Unicode stuff right, among other things

[21:43] *** airdisa left
[21:44] *** zakharyas left
[21:53] *** airdisa joined
[22:04] <PerlJam> _edwin: make a small prototype and maybe that will encourage others to hack on it :)

[22:05] <_edwin> I might try, but there's a lot of things I need to find my way through :)

[22:06] <ugexe> would there be any advantage to parsing out dependencies from QAST or parse tree instead of directly parsing the perl6 source?

[22:10] <flussence> well, you wouldn't have to directly parse the perl6 source...

[22:10] <PerlJam> except ... how did you get the QAST or parse tree in the first place?

[22:11] <ugexe> with Perl6.Grammar.parse

[22:12] <ugexe> does the parse tree require the dependencies to be parsed first? i figured it was just another representation of the source code

[22:12] *** muraiki left
[22:13] <ugexe> i wasnt sure about a QAST::CompUnit but thoughtthe parse tree would work :(

[22:15] *** lichtkind joined
[22:16] *** lichtkind left
[22:18] *** BenGoldberg joined
[22:20] <ugexe> m: use Perl6::Grammar:from<NQP>; use Perl6::Actions:from<NQP>; my $*LINEPOSCACHE; my $source-code = q/use Test; my $x; $x++; say $x;/; my NQPMatch $tree = Perl6::Grammar.parse($source-code, :actions(Perl6::Actions.new())); say $tree.dump;

[22:20] <camelia> rakudo-moar fb991b: OUTPUT«- statementlist: use Test; my $x; $x++; say $x;␤  - statement: 4 matches␤    - statement_control: use Test␤      - doc: ␤      - sym: use␤      - module_name: Test␤        - longname: Test␤          - name: Test␤            - identifier: Te…»

[22:23] <ugexe> although, if i change use Test; to something not installed I get an error instead. so i guess that answers my question

[22:24] <ugexe> i suppose it could still be useful for a module installer when dealing with installing the sub modules

[22:24] *** Akagi201 joined
[22:24] <ugexe> the order to build the modules in

[22:24] *** brrt joined
[22:26] <brrt> \o #perl6

[22:27] * _edwin created a pull-request for fixing the input of '{' etc. in the Rakudo REPL on Windows (against MoarVM/linenoise)

[22:28] *** Akagi201 left
[22:30] * _edwin -> sleep

[22:30] *** _edwin left
[22:31] *** Akagi201 joined
[22:32] *** noganex joined
[22:35] *** Akagi201 left
[22:36] *** Vlavv_ left
[22:42] *** brrt left
[22:43] *** jack_rabbit joined
[22:46] *** raiph left
[22:49] *** Vlavv_ joined
[23:07] *** raiph joined
[23:12] *** khisanth_ joined
[23:16] *** Khisanth left
[23:17] <raydiak> ugexe: problem is, our parse time and compile time are not separate...e.g. what happens if a slang is used? can't parse the rest until the slang is compiled

[23:18] <raydiak> thus "nothing can parse Perl except perl"...b/c you have to actually compile to be able to parse

[23:20] <raydiak> back to afk

[23:24] <masak> parse time is a part of compile time.

[23:25] <masak> even in languages where things are more separable.

[23:26] *** diana_olhovik left
[23:28] *** RabidGravy left
[23:35] *** skids joined
[23:36] <masak> 'night, #perl6

[23:36] *** rararara_ joined
[23:56] *** coffee` left
