[00:07] *** laouji joined
[00:09] *** thou left
[00:09] *** laouji_ joined
[00:09] *** tardisx joined
[00:10] *** laouji__ joined
[00:11] *** tardisx left
[00:11] *** tardisx joined
[00:12] *** laouji left
[00:13] *** laouji_ left
[00:25] *** davido_ joined
[00:38] *** ssqq joined
[00:39] *** yqt left
[00:40] *** ssqq left
[00:45] *** ssqq joined
[01:05] *** colomon left
[01:08] *** colomon joined
[01:10] *** agentzh_ joined
[01:11] *** aborazmeh joined
[01:11] *** aborazmeh left
[01:11] *** aborazmeh joined
[01:16] *** agentzh_ left
[02:10] *** ilogger2 joined
[02:10] *** ChanServ sets mode: +v ilogger2

[02:10] *** agentzh_ joined
[02:25] *** rmgk_ joined
[02:25] *** rmgk_ is now known as rmgk

[02:28] *** agentzh_ left
[02:34] *** aborazmeh joined
[02:34] *** aborazmeh left
[02:34] *** aborazmeh joined
[02:39] *** raiph joined
[02:52] *** aborazmeh left
[02:53] *** colomon joined
[02:59] *** kurahaupo joined
[03:21] *** raiph left
[03:26] *** thou joined
[03:39] *** agentzh_ joined
[04:04] *** kaare__ joined
[04:12] *** agentzh_ left
[04:38] *** rvchangue joined
[04:39] *** rvchangue left
[04:52] *** rvchangue joined
[04:54] *** agentzh_ joined
[05:07] *** agentzh_ left
[05:25] *** spider-mario joined
[05:31] *** aborazmeh joined
[05:31] *** aborazmeh left
[05:31] *** aborazmeh joined
[05:33] *** araujo joined
[05:33] *** araujo left
[05:33] *** araujo joined
[05:45] *** thou left
[05:48] *** ufobat joined
[05:59] *** domidumont joined
[06:02] *** domidumont left
[06:03] *** domidumont joined
[06:07] *** rba_ joined
[06:08] *** laouji joined
[06:08] <dalek> perl6-examples: 68f6bb0 | paultcochrane++ | categories/cookbook/04arrays/04-0 (2 files):

[06:08] <dalek> perl6-examples: [cookbook] indent code consistently

[06:08] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/68f6bb06ea

[06:08] <dalek> perl6-examples: b9b413d | paultcochrane++ | t/categories/cookbook/04arrays.t:

[06:08] <dalek> perl6-examples: [cookbook] add tests for 04arrays examples

[06:08] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/b9b413d39e

[06:15] *** rba_ left
[06:20] *** aborazmeh left
[06:26] *** FROGGS joined
[06:29] *** rba_ joined
[06:32] *** rba_ left
[06:34] *** kurahaupo left
[06:39] *** quester joined
[06:43] *** [Tux] joined
[06:44] *** _mg_ joined
[06:49] *** zakharyas joined
[06:51] *** abraxxa joined
[06:52] *** agentzh_ joined
[06:56] *** RabidGravy joined
[06:57] *** Ven joined
[06:59] <sjn> arnsholt, jnthn, pmichaud: We have a room at Teknologihuset for some hacking, from 09:30 today

[07:01] *** haidarian joined
[07:05] <FROGGS> morning #perl6

[07:06] <FROGGS> ohh, I wish a lot of fun at Teknologihuset

[07:08] *** telex joined
[07:08] <moritz> sounds like a fun place to be

[07:09] <masak> morning, #perl6

[07:10] *** kurahaupo joined
[07:11] <moritz> \o masak, FROGGS, sjn, *

[07:13] *** poul joined
[07:31] *** larion joined
[07:32] *** lizmat joined
[07:34] *** pdcawley joined
[07:35] *** virtualsue joined
[07:35] *** virtualsue left
[07:37] <lizmat> so, I'm the only one having this slowdown??

[07:37] * lizmat nukes install and starts from scratch

[07:39] *** agentzh_ left
[07:42] <FROGGS> lizmat: seems so... I have no slowdown

[07:44] <sjn> lizmat: we have the room at teknologihuset today, btw :)

[07:45] *** quester left
[07:47] <FROGGS> sjn: is tadzik also at your place?

[07:49] <RabidGravy> marnin'

[07:49] <tadzik> FROGGS: I was not

[07:49] <tadzik> and I

[07:49] <tadzik> 'm now aboard flytoget to OSL

[07:51] <masak> flytoget! with free wifi! \o/

[07:51] <tadzik> yes :)

[07:51] <tadzik> also the interfaceless ticket buying

[07:51] <tadzik> 1) swipe your card 2) get on train

[07:52] <tadzik> what a time to be alive

[07:52] <FROGGS> *g*

[07:55] *** larion left
[07:57] <lizmat> sjn: on our way now

[07:57] *** lizmat left
[07:59] <Ven> today's masak's autopun. https://twitter.com/kmett/status/596472641894129664

[07:59] *** laouji_ joined
[07:59] <Ven> also, o/ #perl6

[08:02] *** eiro joined
[08:03] *** laouji left
[08:06] <sjn> pmichaud, jnthn, arnsholt: I'm at teknologihuset now, in the boardroom two stairs up. Espen (the host) will show you the way

[08:09] *** bjz joined
[08:10] *** lizmat joined
[08:10] *** larion joined
[08:11] <lizmat> after an install nuke, all back to normal  :-)

[08:13] *** espadrine_ joined
[08:14] *** lizmat left
[08:16] *** darutoko joined
[08:19] <FROGGS> phew :o)

[08:19] <pmichaud> good morning, #perl6

[08:19] <FROGGS> morning pmichaud 

[08:19] <masak> morning, pmichaud!

[08:20] <arnsholt> o/

[08:20] * FROGGS hopes that pmichaud slept more than what FROGGS has heard on other conferences/workshops

[08:22] <pmichaud> I did finally start to catch up on sleep last night, yes.

[08:23] * sjn is afraid he may have kept jnthn up for too long last night.

[08:23] <sjn> the beer was good though

[08:27] <masak> this is the first time I see POD (in Perl 5) being written exclusively on lines prefixed '#pod ': https://metacpan.org/source/DAGOLDEN/Hash-Ordered-0.009/lib/Hash/Ordered.pm

[08:27] <masak> is that a new thing in Perl 5? or have I simply missed it for a very long time?

[08:28] <DrForr> Maybe a release tool gone wrong?

[08:28] <masak> oh! possible.

[08:28] <masak> nope. https://api.metacpan.org/source/DAGOLDEN/Hash-Ordered-0.009/lib/Hash/Ordered.pm

[08:28] <masak> or, at least not unless I misunderstand your question.

[08:29] *** g4 joined
[08:29] *** spider-mario left
[08:31] *** silug joined
[08:31] *** silug left
[08:31] <DrForr> I was just thinking that he might have an editor that skips '#pod' marked lines and normally removes the #pod markers before publishing.

[08:31] <DrForr> Which is admittedly a stretch.

[08:35] <masak> well, weak evidence against that is the fact that the module renders properly :)

[08:36] <dalek> rakudo/nom: 92bbf5c | arnsholt++ | t/04-nativecall/04-pointers.c:

[08:36] <dalek> rakudo/nom: Fix C issue in NativeCall tests.

[08:36] <dalek> rakudo/nom: 

[08:36] <dalek> rakudo/nom: One of the pointer tests returned a pointer to astack allocated string outside

[08:36] <dalek> rakudo/nom: of the function, which is not very safe. Replace it with a strdup()ed string

[08:36] <dalek> rakudo/nom: that's freed on verification.

[08:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/92bbf5c179

[08:36] <masak> https://metacpan.org/pod/Hash::Ordered

[08:37] <masak> `perldoc perlpod` doesn't seem to mention this at all.

[08:38] *** lizmat joined
[08:46] *** silug joined
[08:48] *** rindolf joined
[08:49] <FROGGS> arnsholt++

[08:52] *** lizmat_ joined
[08:53] *** lizmat left
[08:54] <dalek> rakudo/nom: 16847e6 | lizmat++ | src/core/CompUnit.pm:

[08:54] <dalek> rakudo/nom: Let CompUnit.precomp fail verbosely when needed

[08:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/16847e673f

[08:54] *** lizmat joined
[08:57] *** lizmat_ left
[08:58] *** lizmat_ joined
[09:01] *** virtualsue joined
[09:01] *** lizmat left
[09:06] *** lizmat_ is now known as lizmat

[09:07] <raydiak> :q

[09:07] <raydiak> erm...gnight #perl6

[09:08] <lizmat> gnight raydiak 

[09:09] <masak> raydiak has quit the vim of daytime.

[09:09] <FROGGS> gnight raydiak 

[09:10] *** Ven left
[09:18] <nwc10> good *, *

[09:18] <lizmat> .oO( Whatever :-)

[09:18] <nwc10> yeah, whatever.

[09:19] <masak> m: say "$_." for <what ever>

[09:19] <camelia> rakudo-moar 92bbf5: OUTPUT«what.␤ever.␤»

[09:19] <masak> m: say Bool.pick ?? "{uc $_}." !! "$_." for <what ever>

[09:19] <camelia> rakudo-moar 16847e: OUTPUT«WHAT.␤EVER.␤»

[09:19] <masak> m: say Bool.pick ?? "{uc $_}." !! "$_." for <what ever>

[09:19] <camelia> rakudo-moar 16847e: OUTPUT«WHAT.␤EVER.␤»

[09:19] <masak> hm.

[09:19] <masak> m: say Bool.pick ?? "{uc $_}." !! "$_." for <what ever>

[09:19] <camelia> rakudo-moar 16847e: OUTPUT«what.␤EVER.␤»

[09:19] <masak> oh, good. :)

[09:24] *** bjz_ joined
[09:27] *** bjz left
[09:34] *** lizmat_ joined
[09:34] <RabidGravy> The S29 says several times "The NameServices role in S16 covers most of these."  but no such is mentioned or even eluded to in S16, is it just somewhere I failed to noticed it or just not specced at all?

[09:35] <masak> alluded* :)

[09:35] <lizmat_> m: say ."{<uc lc>[Bool.pick]}"() for <what ever>   # masak

[09:35] <camelia> rakudo-moar 16847e: OUTPUT«what␤ever␤»

[09:35] <lizmat_> m: say ."{<uc lc>[Bool.pick]}"() for <what ever>   # masak

[09:35] <camelia> rakudo-moar 16847e: OUTPUT«what␤ever␤»

[09:35] <masak> lizmat_: nice :)

[09:35] <lizmat_> m: say ."{<uc lc>[Bool.pick]}"() for <what ever>   # masak

[09:35] <camelia> rakudo-moar 16847e: OUTPUT«WHAT␤EVER␤»

[09:36] <masak> except the reliance on Bool's numification ;)

[09:36] <lizmat_> why is that a bad thing ?

[09:36] <masak> damn you RandalSwartz, now I'm getting allergic to it too :)

[09:37] <masak> lizmat_: no reason, nvm

[09:37] *** lizmat left
[09:38] *** lizmat_ is now known as lizmat

[09:39] *** lizmat_ joined
[09:40] *** sjn_phone joined
[09:40] <RabidGravy> masak, quite. I think having a La Trappe dubbel before bedtime last night may have broken my brain.

[09:41] <pmichaud> RabidGravy: iiuc, S29 is fairly old and may contain many fossils.  It's never really been accepted anyway.

[09:41] <masak> lizmat: he once said in a p6l email (I think it was) that +Bool::True ought to be 42 just to teach people not to rely on it being 1... :)

[09:41] <masak> RabidGravy: that's a good beer.

[09:41] <DrForr> I have a 1l bottle of Westmalle trippel left over from FOSDEM.

[09:41] *** Su-Shee joined
[09:41] <Su-Shee> good morning

[09:41] <RabidGravy> pmichaud, right. 

[09:42] <masak> morning, Su-Shee!

[09:42] <RabidGravy> masak, it is indeed. I sensibly eschewed the Quadrupel however.

[09:42] <Su-Shee> jnthn: see msg for the book :)

[09:42] <Su-Shee> masak: why did I not see you in oslo? ;) 

[09:43] <masak> RabidGravy: maybe if you had that one you'd have typed "olooded" instead :P

[09:43] *** lizmat left
[09:43] <masak> Su-Shee: because timing was extremely unfortunate with @family stuff.

[09:43] *** lizmat joined
[09:43] <masak> comforting to hear I was missed, though... :>

[09:44] <RabidGravy> masak, I think it would have been more: "like, you know, sorta kinda not thinged ...." ;-)

[09:44] <Su-Shee> masak: oh, I see. it was extremely lovely. very .. family like :) and oslo is really nice, imho.

[09:44] <masak> agreed.

[09:44] <masak> I'll really really try to make it to YAPC::EU this year.

[09:45] <masak> beyond that, not much is guaranteed. :/

[09:45] <Su-Shee> masak: yes, please. I think the spaniards are trying to make it extra-nice.

[09:45] <Su-Shee> masak: also, I promised the program commitee to kick all of your perl6 butts for talks.

[09:45] <Su-Shee> masak: so you have no choice.

[09:46] <Su-Shee> "I am the borg. resistance is futile." <-- my management style.

[09:46] <FROGGS> is it really "I am the borg" in English?

[09:46] <masak> understood.

[09:46] <Su-Shee> FROGGS: yes, the borg queen says it.

[09:46] <masak> ok, #perl6 channel -- what should I talk about this year at YAPC::EU?

[09:47] <FROGGS> Su-Shee: ahh, yeah

[09:47] *** lizmat_ left
[09:47] <pmichaud> Should I talk about something?

[09:47] <masak> YES

[09:47] <Su-Shee> masak: I would love to emphasis real world perl6 so to speak, so it would be awesome to show off common problems

[09:47] <pmichaud> the timing would be very good for a discussion of language spec.

[09:47] <pmichaud> update/reprise of my FOSDEM talk, I suspect.

[09:47] <masak> Su-Shee: ok, good angle. I do have a lot of real world Perl 6 code.

[09:47] <lizmat> Missing test file: t/spec/S05-modifier/ignorecase-and-ignoremark.t   # did someone forget to git add ?

[09:48] <pmichaud> jnthn++'s perl 6 for beginners session yesterday went really well.  A lot of excitement and enthusiasm among the participants.

[09:48] <masak> \o/

[09:48] <virtualsue> i was sorry to miss that

[09:48] <FROGGS> ohh dang

[09:48] <FROGGS> lizmat: wait a sec

[09:48] <masak> was it filmed?

[09:48] *** agentzh_ joined
[09:48] <pmichaud> I'm going to see if it's possible to squeeze in a similar event at yapc::na

[09:49] <Su-Shee> masak: in no special order: things like e.g. streaming, parsing, processing, how to write a perl 6 module (on the plane I thought that maybe whipping up your own json module would illustrate how to make good practical use of grammars), networking up and down would be awesome..

[09:49] <pmichaud> masak: not filmed, no.

[09:49] <Su-Shee> masak: C library bindings.. (I hear it's extra nice and easy)

[09:49] <pmichaud> masak: it was more workshop than presentation.

[09:49] <masak> pmichaud: aww :) but ok.

[09:49] <masak> Su-Shee: I'm glad I asked. these are all good ideas, but I wouldn't have been able to come up with them myself.

[09:50] <Su-Shee> masak: functional perl 6, async perl 6....

[09:50] <Su-Shee> masak: it's mostly that I ask myself: new language? what do I do with it usally, what are my every day uses?

[09:50] <dalek> roast: 948770b | FROGGS++ | S05-modifier/ignorecase-and-ignoremark.t:

[09:50] <dalek> roast: add test file for ignorecase+ignoremark

[09:50] <dalek> roast: review: https://github.com/perl6/roast/commit/948770bf31

[09:50] <masak> I wonder if I could make it along the lines of "Solved in Perl 6", in a near-Q&A style...

[09:50] <FROGGS> lizmat: there you go

[09:51] *** lizmat_ joined
[09:51] <Su-Shee> masak: I would very much like to skip beginner's perl 6 stuff beyond maybe a day long workshop which would be awesome and make talks be firmly rooted in "now we're really using it for real things"

[09:51] <FROGGS> lizmat: I just pushed the test file

[09:52] <Su-Shee> masak: oh now THAT would make an awesome workshop - imagine half a day of "applied problem solving in perl 6 for the dirty, messy world" :)

[09:52] <nwc10> pmichaud: ++jnthn++'s thing being this 160 minute tutorial? http://act.osdc.no/osdc2015no/talk/6154

[09:53] <pmichaud> nwc10: yes

[09:53] <masak> m: my $jnthn; ++$jnthn++

[09:53] <camelia> rakudo-moar 16847e: OUTPUT«Cannot assign to an immutable value␤  in block <unit> at /tmp/Vdues1aIft:1␤␤»

[09:53] <pmichaud> it was highly attended

[09:53] * masak read "it was highly attenuated"

[09:53] <Su-Shee> masak: and I would very much appreciate if you'd tell me whose butt I should kick as well :)

[09:53] <nwc10> perl6++ # better than ++C++ :-)

[09:53] <RabidGravy> speaking of C language bindings is there something that I have missed that does something like https://metacpan.org/source/JSTOWE/TermReadKey-2.32/Configure.pm or is it make one myself?

[09:53] <Su-Shee> so. MR arnsholt! you are next ;) 

[09:53] <DrForr> Starting to wish I'd not decided to leave on the 12th :/

[09:53] <masak> Su-Shee: jnthn, pmichaud, niner, arnsholt...

[09:54] <masak> Su-Shee: FROGGS

[09:54] <pmichaud> or, I should say, there were far more people present than jnthn (or I) expected.

[09:54] <Su-Shee> masak: I just put on my good shoes to kick arnsholt's ;)

[09:54] <FROGGS> I'm not coming to Grenada

[09:54] <masak> Su-Shee: maybe you could make nwc10 give a p6 talk, I dunno.

[09:54] <masak> FROGGS: :/

[09:54] <Su-Shee> FROGGS: that's good because it's in granada ;)

[09:54] <FROGGS> ahh :P

[09:54] *** lizmat left
[09:54] <Su-Shee> :)

[09:55] <FROGGS> I'll be at the Swiss Perl Workshop though

[09:55] * btyler makes a note to submit YAPC::EU talk proposal tonight

[09:55] <DrForr> Oh, this is ::EU discussion.

[09:55] <RabidGravy> I think I may be in a position to start on making a p6 version of Term::ReadKey this week

[09:55] <masak> m: say ((&lc, &uc).pick)($_) for <grenada granada what ever>

[09:55] <camelia> rakudo-moar 16847e: OUTPUT«grenada␤granada␤what␤ever␤»

[09:55] <masak> m: say ((&lc, &uc).pick)($_) for <grenada granada what ever>

[09:55] <camelia> rakudo-moar 16847e: OUTPUT«grenada␤GRANADA␤what␤ever␤»

[09:55] <masak> lizmat_: that's how to do it, btw. obviously ;)

[09:55] *** bjz_ left
[09:55] <Su-Shee> arnsholt: I would very much like to order a yapc::eu talk from you which centers around languages, encoding and such. not too academic. maybe internationalized regex stuff for example and how to deal with mixed language environment - e.g. you process a text containing greek and latin.. 

[09:56] <pmichaud> DrForr: I did throw in a ::NA note above :)

[09:56] <RabidGravy> I haven't been to a YAPC::EU (or any perl conference for that matter,) since 2006

[09:56] *** bjz joined
[09:56] *** lizmat joined
[09:56] <virtualsue> i remember that! you did some of the best talks too

[09:56] <FROGGS> RabidGravy: we have LibraryMake

[09:56] <RabidGravy> ;-)

[09:56] <Su-Shee> btyler: what are you thinking about as a subject?

[09:57] <masak> Su-Shee++ # your kicking butt is amazing to behold!

[09:57] <btyler> Su-Shee: something like "distributed systems for poets and perl hackers"

[09:57] <Su-Shee> nwc10: I'm supposed to make you give a talk. what does it take? cookies or violence?

[09:57] <DrForr> Violent cookies.

[09:58] <arnsholt> Su-Shee: I must confess that I know more about languages than about how to encode them =)

[09:58] *** flussence joined
[09:58] <Su-Shee> btyler: distributed systems is awesome. 

[09:58] <nwc10> Su-Shee: an alpha release.

[09:58] <FROGGS> you can throw cookies for sure

[09:58] <Su-Shee> arnsholt: IT'S TIME TO LEARN IT THEN? ;)

[09:58] <nwc10> at which point, I might have a plan.

[09:58] <pmichaud> for the last couple of days I've been unable to access yapcna.org -- anyone else able to reach it?

[09:58] <masak> in some cultures, throwing a cookie is a great insult.

[09:58] <nwc10> pmichaud: I can access it from work

[09:58] <FROGGS> pmichaud: I can't

[09:58] <DrForr> Problem here too.

[09:59] <nwc10> and from a machine in the UK

[09:59] <RabidGravy> FROGGS, yeah I'm thinking it's probably extend LibraryMake to do anything else that might be needed, the P5 Term::ReadKey actually writes some of its own C code depending on what it finds - I'm looking for something like autoconf but not so shit

[09:59] <arnsholt> Su-Shee: If you write my PhD thesis for me, sure O=)

[09:59] <Su-Shee> arnsholt: well I still would like a nice talk about language processing, not too academic. maybe we can whip up a couple of real world-ish practical uses of NLP?

[09:59] *** lizmat_ left
[09:59] <FROGGS> RabidGravy: "no so shit" :P

[10:00] <FROGGS> RabidGravy: IMO you can only create another kind of shit when you wanna do something autoconfy

[10:00] <lizmat> FROGGS++

[10:00] *** abraxxa left
[10:01] *** abraxxa joined
[10:01] <RabidGravy> yeah it's just the M4yness of autoconf that I don't like, I mean that was fine twenty years ago and all

[10:02] <Su-Shee> pmichaud: after our short discussion I would love anything from a lightning talk to more along the lines of "cool shit of perl6", you know everything ranging from the "no floating point trap" to this "many versions next to each other" and "strings done right" and all the other things nobody knows ;)

[10:03] <dalek> roast: 6085e09 | FROGGS++ | S29-type/declarations.t:

[10:03] <dalek> roast: remove outdates Perl 6 types tests

[10:03] <dalek> roast: 

[10:03] <dalek> roast: There are better tests in S02-types/declare.t

[10:03] <dalek> roast: review: https://github.com/perl6/roast/commit/6085e09662

[10:03] <Su-Shee> pmichaud: and after you mentioned you need an audience: "24 year old non-academic javascript hipster hacker" ;)

[10:03] <dalek> rakudo/nom: 2e8f308 | FROGGS++ | t/spectest.data:

[10:03] <dalek> rakudo/nom: remove removed test file

[10:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2e8f308a57

[10:03] <RabidGravy> :)

[10:04] *** lizmat_ joined
[10:05] <masak> Su-Shee: one surprising thing about Perl 6 in the real world is that I almost never use junctions. or if I do, I don't think much of it.

[10:05] <pmichaud> Su-Shee: I think I might come up with a series of 1-minute summaries of cool perl 6 features.  Then my lightning talks can be a sampling of 5 from that series.  :)

[10:06] <Su-Shee> pmichaud: *hihi* "..and now the 38753 lightning talks by patrick michaud.." ;)

[10:07] <Su-Shee> pmichaud: but that would be most lovely. and my promise to write it up as a more advertising paper holds.

[10:07] <pmichaud> yeah, I'm thinking I could even do a    @talks.pick(5)   at the beginning of the talk and that determines what we hear about.  :)

[10:07] <Su-Shee> masak: I don't even remember what junctions are and why I would want them.

[10:07] *** lizmat left
[10:07] <Su-Shee> pmichaud: excellent. 

[10:08] <FROGGS> I did a lightning talk on Thursday, starting with subroutine signatures, over sub MAIN to multi MAIN where one had a where clause checking for the existence of the pfovided file...

[10:08] <RabidGravy> gwoovy

[10:08] <FROGGS> provided*

[10:08] <Su-Shee> I mean, it's kind of really necessary to actually show things and talk about things and talk about it massively NOW shortly before the release which is perceived as 2the real one" is upon you..

[10:10] <masak> Su-Shee: junctions are `if $value == 1 | 2 | 3`

[10:10] <FROGGS> btw, the atmosphere at the GPW was quite nice P6 wise... I got many ppl asking for details because they tried stuff and of course used P5isms

[10:10] <Su-Shee> oh! oh! and I want VERY MUCH a talk about the jvm backend in terms of "and like in clojure you just bind this stuff here and load it there and then suddenly your java things works perfectly.."

[10:10] <Su-Shee> masak: ah those :)

[10:10] <masak> right.

[10:10] <masak> they look very cool on paper.

[10:10] <FROGGS> ahh, and my lightning talk actually stated with: "Now you all go to perl6.org, click the download button and follow these instructions." :o)

[10:11] *** laouji joined
[10:11] <Su-Shee> now I have a cat on my ketboard...

[10:15] *** laouji left
[10:15] *** Isp-sec joined
[10:18] <pmichaud> I wonder who/how I should contact about the yapcna.org site being inaccessible.

[10:19] <nwc10> pmichaud: for you, at what level does it fail? Can you traceroute to the machine?

[10:19] <pmichaud> nwc10: I'm unable to telnet to port 80 on the machine.

[10:20] *** xfix joined
[10:20] <nwc10> pmichaud: Oh odd.

[10:20] <DrForr> traceroute fails at cpanel.net.

[10:20] <pmichaud> I can try it from my home machine, though. just a sec.

[10:21] <Su-Shee> it's www.yapcna.org - ypacna.org doesn't work.

[10:21] *** lizmat joined
[10:21] <Su-Shee> err yapcna of course

[10:21] <pmichaud> ah.  Google search results return "yapcna.org"

[10:21] <nwc10> ahaa.a

[10:21] <nwc10> I guess my browser is "helpfully" adding the www and I'm too, er, $impolite-word to notice that

[10:22] <Su-Shee> I just tried both.

[10:22] <pmichaud> I did Google search for "yapc na 2015", then clicked the first result, and no response.

[10:22] <nwc10> and then, fool that I am, I copied the URL from the desktop browser (at work) to the remote machine

[10:23] <pmichaud> okay, that helps.  Now I at least have a contact address.

[10:23] <DrForr> Because every website must have www. .

[10:23] <Su-Shee> I always wonder how non-technical people manage when we already fail so often.

[10:23] <Su-Shee> DrForr: you just configure it properly so it doesn't matter...

[10:24] * DrForr goes back to working on docker configs.

[10:24] *** lizmat_ left
[10:24] <nwc10> pmichaud: I don't know who [email@hidden.address] or [email@hidden.address] are

[10:24] <nwc10> (listed in the whois for 208.74.120.55)

[10:24] <lizmat> jnthn has entered the building

[10:25] <nwc10> but they are screwed, as the DNS says that:yapcna.org mail is handled by 0 yapcna.org.

[10:25] <nwc10> and the host is down

[10:25] <nwc10> so mail is going to be bounced after 5 days

[10:27] *** diana_olhovik_ joined
[10:28] *** rindolf left
[10:28] <jnthn> afternoon, #perl6

[10:29] <masak> jnthn! \o/

[10:29] <masak> jnthn: time to submit a talk for YAPC::EU! :D

[10:29] <nwc10> heresy!

[10:29] <jnthn> masak: When's the deadline? :)

[10:29] <dalek> rakudo/nom: 438274c | lizmat++ | src/Perl6/ModuleLoader.nqp:

[10:29] <dalek> rakudo/nom: Make module loading fail list better

[10:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/438274c6fd

[10:30] <masak> jnthn: the deadline is Su-Shee is gonna badger you until you do! :D

[10:30] <Su-Shee> I'm not worried about jnthn ;)

[10:31] <masak> haha :)

[10:34] *** lizmat_ joined
[10:37] *** lizmat__ joined
[10:37] *** lizmat___ joined
[10:38] * RabidGravy scrolls back a bit

[10:38] *** lizmat left
[10:38] *** lizmat___ is now known as lizmat

[10:38] <lizmat> (switch from flaky wifi to hopefully not so flaky 3G)

[10:39] <RabidGravy> DrForr: fancy writing a p6 version of "fig" or "docker-compose" or whatever it's called these days?  It's on my TODO list, but keeps getting pre-empted

[10:40] *** lizmat_ left
[10:40] <DrForr> Maybe. I need to get what I've got off my plate...

[10:41] <RabidGravy> I think the only particular yak that may need shaving is the http on unix domain sockets thing

[10:41] *** lizmat__ left
[10:44] <DrForr> RabidGravy: Specifically getting ReadLine documented so we can merge it :)

[10:49] <RabidGravy> :)

[10:49] *** Sysaxed` joined
[10:49] *** agentzh_ left
[10:49] *** diana_olhovik_ left
[10:54] *** diana_olhovik_ joined
[10:54] <dalek> roast: 7afaea0 | lizmat++ | S10-packages/precompilation.t:

[10:54] <dalek> roast: Just try to unlink, don't create a race

[10:54] <dalek> roast: review: https://github.com/perl6/roast/commit/7afaea00b2

[11:00] *** RabidGravy left
[11:06] <pmichaud> .u 1f37b

[11:06] <yoleaux> U+1F37B CLINKING BEER MUGS [So] (🍻)

[11:06] <pmichaud> .u 1f37a

[11:06] <yoleaux> U+1F37A BEER MUG [So] (🍺)

[11:07] <pmichaud> r: my $beer = "\C[BEER MUG]";  say unicode $beer;

[11:08] <camelia> rakudo-jvm 438274: ( no output )

[11:08] <camelia> ..rakudo-moar 438274: OUTPUT«5===SORRY!5===␤Unrecognized backslash sequence: '\C'␤at /tmp/tmpfile:1␤------> 3my $beer = "\7⏏5C[BEER MUG]";  say unicode $beer;␤Undeclared routine:␤    unicode used at line 1␤␤␤»

[11:08] <lizmat> m: say "🍺".succ

[11:08] <camelia> rakudo-moar 438274: OUTPUT«🍺␤»

[11:08] <pmichaud> r: my $beer = "\c[BEER MUG]";  say unicode $beer;

[11:08] <camelia> rakudo-jvm 438274: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Unrecognized character name BEER MUG␤at /tmp/tmpfile:1␤------> 3my $beer = "\c[BEER MUG7⏏5]";  say unicode $beer;␤»

[11:08] <camelia> ..rakudo-moar 438274: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Undeclared routine:␤    unicode used at line 1␤␤»

[11:08] <pmichaud> r: my $beer = "\c[BEER MUG]";  say uniname $beer;

[11:08] <camelia> rakudo-moar 438274: OUTPUT«BEER MUG␤»

[11:08] <camelia> ..rakudo-jvm 438274: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Unrecognized character name BEER MUG␤at /tmp/tmpfile:1␤------> 3my $beer = "\c[BEER MUG7⏏5]";  say uniname $beer;␤»

[11:09] <pmichaud> m: my $beer = "\c[BEER MUG]";  say uniname $beer;   $beer++;  say uniname $beer;

[11:09] <camelia> rakudo-moar 438274: OUTPUT«BEER MUG␤BEER MUG␤»

[11:12] *** laouji joined
[11:17] *** laouji left
[11:19] *** brrt joined
[11:20] <masak> like with infinity, incrementing beer mug just results in beer mug.

[11:21] <brrt> \o

[11:22] <DrForr> This is amusing. =begin Documentation .. =end Documentation throws "=begin not terminated by matching '=end pod'." Edit '=end Documentation' to '=end pod', guess what error I get?

[11:22] <DrForr> Yep, "=begin not terminated by matching '=end Documentation'."

[11:25] *** rurban joined
[11:26] *** agentzh_ joined
[11:26] <masak> DrForr: provide some minimal inputs to demonstrate this, and you have yourself a rakudobug ;)

[11:26] <masak> ++DrForr

[11:27] <DrForr> In a moment. it's probably *actually* bad documentation :)

[11:28] *** sjn_phone left
[11:29] <DrForr> mispeling.

[11:30] <masak> well, that saves some paperwork :)

[11:30] <DrForr> Actually it may be a bug still, testing.

[11:33] <DrForr> '=begin pod\n=begin Documentation\n=en Documentation' exhibits this behavior. I think it's still a bug as it's not picking up the misbalanced =begin..=end pairs.

[11:36] <masak> DrForr: is there a typo ('=en') in what you just wrote?

[11:37] <masak> or is it deliberate?

[11:37] <DrForr> On channel, yes, I tyoped. Let me put it in a gist.

[11:37] <masak> ah, good.

[11:39] *** raiph joined
[11:39] <DrForr> https://gist.github.com/drforr/3e789b78897759d6cc28

[11:40] <DrForr> Now of course the real problem is that these aren't properly nested.

[11:40] *** muraiki joined
[11:43] <DrForr> A better error would be "=begin at line 1 has no matching =end"?

[11:49] <DrForr> To be fair, if you pick up on the fact that the line in the *second* error isn't actually in the file, you can figure out what's going on, but it's hard to spot. And if you've been doign this for years you'll assume that the compiler simply got the line wrong :)

[11:52] *** yqt joined
[11:52] *** virtualsue_ joined
[11:52] <pmichaud> would it be at all difficult to change the error message to read  "=begin at line 3 not terminated by matching '=end Documentation'" ?

[11:52] <pmichaud> (i.e., adding "at line 3" to the message)

[11:53] <FROGGS> I believe we have that for another message already

[11:53] <pmichaud> or, perhaps better:    '=begin Documentation' at line 3 not terminated by matching '=end Documentation'

[11:53] <FROGGS> something about a block starting at an earlier line... TimToady++ might remember

[11:53] *** virtualsue left
[11:53] *** virtualsue_ is now known as virtualsue

[11:54] <DrForr> pmichaud: That'd work as well.

[11:54] *** aborazmeh joined
[11:54] *** aborazmeh left
[11:54] *** aborazmeh joined
[11:57] <DrForr> Should I file a bug?

[11:57] <dalek> rakudo/nom: f9c9822 | FROGGS++ | t/spectest.data:

[11:57] <dalek> rakudo/nom: run test (where all tests are skipped)

[11:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f9c9822f34

[11:58] <ufobat> Another Question, i've got anouther Task::Star test error. I guess its also regarding the change to Nil, like it was before with URI.pm

[11:59] <ufobat> ==> Testing Bailador

[11:59] <ufobat> # Failed test 'route GET /foo exists'

[11:59] <ufobat> # at t/01-route-existance.t line 13

[11:59] <ufobat> # expected: [200, [:Content-Type("text/html")]]

[11:59] <ufobat> #      got: [200, [:Content-Type("text/html")], Any]

[11:59] *** silug left
[12:02] <moritz> yes, looks like it

[12:03] * moritz waits for the question

[12:03] <moritz> either open an issue for Bailador, or send a pull request that fixes it :-)

[12:04] *** grondilu joined
[12:07] <dalek> roast: 21024b0 | lizmat++ | S10-packages/precompilation.t:

[12:07] <dalek> roast: Some more sanity and better layout

[12:07] <dalek> roast: review: https://github.com/perl6/roast/commit/21024b0e25

[12:11] *** domidumont left
[12:11] *** Alina-malina joined
[12:14] *** silug joined
[12:14] <dalek> roast: a5a4fc2 | lizmat++ | S32-exceptions/misc.t:

[12:14] <dalek> roast: Fix too specific test for Exception

[12:14] <dalek> roast: review: https://github.com/perl6/roast/commit/a5a4fc21c3

[12:16] *** Ven joined
[12:17] *** domidumont joined
[12:20] *** eiro left
[12:25] *** eiro joined
[12:32] <Su-Shee> tadzik: you did panda, didn't you?

[12:33] <pmichaud> DrForr: Yes, file a bug if you haven't done so already.  Thanks.

[12:33] <DrForr> Will do so.

[12:33] *** aborazmeh left
[12:34] <lizmat> Su-Shee: tadzik is travelling atm, I think

[12:34] <lizmat> I'm looking at panda atm, is there something I can help you with ?

[12:35] <Su-Shee> lizmat: no, I was just thinking a talk "how to module in perl6" would maybe be nice.. (creation, deployment, versioning etc etc)

[12:35] <Su-Shee> lizmat: and I somehow saved in my memory that tadzik did a lot of "module"

[12:36] <lizmat> he did

[12:36] <lizmat> and he knows a lot about it

[12:36] <Su-Shee> excellent. will threaten him with invasion if he doesn't comply :)

[12:36] <nwc10> and cake if he does?

[12:37] *** rindolf joined
[12:37] <Su-Shee> well I can invade and threaten him with cake, of course :)

[12:43] *** laouji joined
[12:43] *** rurban left
[12:46] *** domidumont1 joined
[12:46] *** domidumont left
[12:48] *** laouji left
[12:57] *** diana_olhovik_ left
[12:59] <masak> tadzik: I would love a "war stories about making a package manager" talk or something like that.

[12:59] *** cognominal joined
[12:59] <Su-Shee> it's in general not as easy and simple to the uninitiated as people think because it's a rather long chain from opening your editor until upload/release.

[13:00] <dalek> rakudo-star-daily: 01c92a1 | coke++ | log/ (2 files):

[13:00] <dalek> rakudo-star-daily: today (automated commit)

[13:00] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/01c92a1878

[13:00] <dalek> perl6-roast-data: 25827d6 | coke++ | / (9 files):

[13:00] <dalek> perl6-roast-data: today (automated commit)

[13:00] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/25827d622a

[13:01] <Su-Shee> also, a talk from the area "deployment/software management/almost devops" might be nice. 

[13:01] <FROGGS> $ perl6-m -e 'say("flubber¼½worms" ~~ /<:Name(/:s LATIN SMALL/)>+/)'

[13:01] <FROGGS> ｢flubber｣

[13:01] * FROGGS loves regexes

[13:02] <Su-Shee> regexes are awesome. it was the very first thing I learned when I started "programming" and "computer"

[13:10] <masak> m: .say for "flubber¼½worms".comb: /<:Name(/:s LATIN SMALL/)>+/

[13:10] <camelia> rakudo-moar f9c982: ( no output )

[13:10] <masak> o.O

[13:11] <masak> m: .say for "flubber¼½worms".comb: /r/

[13:11] <camelia> rakudo-moar f9c982: OUTPUT«r␤r␤»

[13:11] *** yqt left
[13:11] <masak> FROGGS: are you running a version from the future?

[13:14] <FROGGS> masak: fsvo of future, yes

[13:15] <DrForr> "15 minutes into the future."

[13:16] <ufobat> moritz: i just wanted my thought to be confirmed since i have no clue

[13:16] <zostay> what is the :D for in signatures and such?

[13:16] <ufobat> but you did, so thanks :)

[13:16] <moritz> zostay: it stands for "defined"

[13:16] <arnsholt> zostay: :D is defined, :U is undefined, :T is type object (I think)

[13:17] <moritz> zostay: that is, Int:D only allows Int instances, not the type object itself

[13:17] <FROGGS> though, :T is not yet implemented and :U does what :T should do

[13:17] * Juerd found :D very ugly in code, but at least it adds a lot of smileys to compensate for the rather sad };

[13:17] <masak> Juerd: also, you rarely need }; in Perl 6 code

[13:18] <zostay> aha, thanks :D

[13:18] <FROGGS> :D

[13:18] <masak> };

[13:18] <krakan> m: say 1 ~~ (1, 2, 3)

[13:18] <camelia> rakudo-moar f9c982: OUTPUT«False␤»

[13:18] <Juerd> masak: I know, but it feels wrong to leave out the ; after non-builtin-ish things...

[13:18] <ingy> what's the general object serialization method in p6?

[13:19] <masak> krakan: needs some any()

[13:19] <Juerd> ingy: .perl? ;)

[13:19] <masak> m: say 1 ~~ any(1, 2, 3)

[13:19] <camelia> rakudo-moar f9c982: OUTPUT«True␤»

[13:19] <ingy> ta

[13:19] <krakan> masak: ah, ok, thanks

[13:19] <Juerd> Is there a safe reverse of .perl?

[13:19] <masak> Juerd: that's just because you've mostly been working in languages where the distinction between language and userland is constantly visible.

[13:19] <Juerd> masak: Yes.

[13:19] <ingy> .perlfect!

[13:20] <masak> Juerd: I think I heard something about val() once

[13:20] <Juerd> ingy: You perlvert! :D

[13:20] <masak> Juerd: don't know what happened to val(), though.

[13:20] <masak> m: say val("5")

[13:20] <camelia> rakudo-moar f9c982: OUTPUT«5===SORRY!5=== Error while compiling /tmp/zc5n1qKkjG␤Undeclared routine:␤    val used at line 1␤␤»

[13:20] <ingy> Juerd: You talkin to me, perlchance?!?!

[13:22] <Juerd> Perlhaps.

[13:22] * ingy giggles and leaves

[13:22] <masak> you two are very perlsistent.

[13:22] *** molaf joined
[13:23] <Su-Shee> shall I start singing "perls are the girl's best friend" and hop out of a cake? 

[13:23] * pmichaud looks for more superlatives and fails.

[13:24] <Juerd> masak: That's just your perlspective

[13:24] *** agentzh_ left
[13:25] <Juerd> pmichaud: Can I perlsuade you to continue looking?

[13:25] <pmichaud> Juerd: perlhaps.

[13:25] <Su-Shee> pmichaud: it would probably be perls before swine anyways ;)

[13:25] <FROGGS> :P

[13:25] <FROGGS> Su-Shee++

[13:26] <DrForr> The first pun that comes to mind I steadfastly *refuse* to use.

[13:26] *** ab5tract joined
[13:34] <pmichaud> perls before swine:  https://drive.google.com/file/d/1n5Xl2Q6nIyJ8-uyr2BgarZFfgvasS4tCsA/view?usp=sharing

[13:34] *** laouji_ left
[13:41] *** agentzh_ joined
[13:43] <[Coke]> (star-daily log broken?) not updated in a month because nothing has changed in a month.

[13:43] <[Coke]> whereas the version log changes every time we build a new version. 

[13:43] *** skids joined
[13:44] <Su-Shee> pmichaud: hahahaha :) swine before perls! ;)

[13:45] <pmichaud> Su-Shee: I'm reading left-to-right here.  :)

[13:45] <Su-Shee> *hihi* I read from the z-axis ;)

[13:45] <Su-Shee> pmichaud: shall I ask why you have a SWINE handy? ;)

[13:45] <pmichaud> I have no idea.  Wendy brought it, I think.

[13:46] <Su-Shee> well I have at least a postgres elephant. ;)

[13:47] *** Isp-sec left
[13:56] * masak .oO( pmichaud has been doing teh perls for so long, he automatically has the swine to put the perls before ) :P

[13:56] *** thou joined
[13:58] <jnthn> .oO( He uses Perl to bring home the bacon? )

[13:59] *** laouji joined
[13:59] <Su-Shee> well. ;) http://loldamn.com/wp-content/uploads/2012/07/cute-kitty-bite-piglet.jpg

[13:59] <pmichaud> Well, for a long time I was using s-pork for my slide presentations.  :-P

[14:00] <FROGGS> awwwww

[14:01] <Su-Shee> I have cat pictures to illustrate any subject. ;)

[14:01] <pmichaud> Su-Shee: ... a catalog?

[14:02] *** RabidGravy joined
[14:02] <TimToady> such backalog!

[14:02] <Su-Shee> pmichaud: it's just moving from collection to catalog.. ;)

[14:02] <pmichaud> good *localtime, TimToady

[14:03] *** laouji left
[14:04] *** lolisa joined
[14:06] *** diana_olhovik_ joined
[14:09] *** airdisa joined
[14:09] *** domidumont1 left
[14:10] *** domidumont joined
[14:14] <dalek> roast: 039d420 | FROGGS++ | S05-metasyntax/unicode-property-pair.t:

[14:14] <dalek> roast: add tests for unicode property pairs

[14:14] <dalek> roast: review: https://github.com/perl6/roast/commit/039d42068b

[14:23] <dalek> roast: 9fc4b56 | FROGGS++ | S05-metasyntax/unicode-property-pair.t:

[14:23] <dalek> roast: fudge unicode test for jvm

[14:23] <dalek> roast: review: https://github.com/perl6/roast/commit/9fc4b56ec8

[14:24] <dalek> rakudo/nom: 8741051 | lizmat++ | src/ (3 files):

[14:24] <dalek> rakudo/nom: Make 'use cur' and @?INC completely operational

[14:24] <dalek> rakudo/nom: 

[14:24] <dalek> rakudo/nom: With some great help from jnthn++

[14:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/874105144b

[14:24] <dalek> nqp: 547bb85 | FROGGS++ | src/vm/moar/QAST/QASTRegexCompilerMAST.nqp:

[14:24] <dalek> nqp: implement <:Name(/:s LATIN SMALL LETTER/)> for moar

[14:24] <dalek> nqp: review: https://github.com/perl6/nqp/commit/547bb859a1

[14:25] <dalek> rakudo/nom: 4c1d2d5 | FROGGS++ | t (2 files):

[14:25] <dalek> rakudo/nom: bump nqp and run another unicode test file

[14:25] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4c1d2d532f

[14:26] <FROGGS> ohh, nice progress is nice

[14:26] <timotimo> sweet

[14:27] <FROGGS> and it is monday again *cough* :o)

[14:28] <timotimo> yes, i know :)

[14:29] <timotimo> i was waiting for more nice progress to appear from the hackathon, of course ;)

[14:30] <PerlJam> good * all.

[14:30] <pmichaud> PerlJam: /o

[14:30] <FROGGS> hehe

[14:30] <pmichaud> er, o/

[14:30] <FROGGS> hi PerlJam 

[14:30] <pmichaud> (actually, my right arm was bothering me much of last week, so perhaps /o is correct.  :)

[14:30] <moritz> sounds like \o\

[14:31] <PerlJam> moritz: not if he's facing me.

[14:31] <PerlJam> :)

[14:31] <timotimo> .o( if The Perl Foundation sponsors a Pyra for me, I may end up doing a lot of portability work on MoarVM and Rakudo for ARM systems ... )

[14:31] <timotimo> moritz: that kind of looks like "get back here, you damn arm!"

[14:32] <moritz> .oO( if TPF sponsors an extended trip to the Bahamas for me, I may end up doing a lot of Bahamas compabitlity hacking on Rakudo and MoarVM )

[14:33] <Su-Shee> moritz: veeery smooth!

[14:33] <Su-Shee> moritz: "das merken die niiiie!" ;)

[14:33] <timotimo> :D

[14:33] <moritz> Su-Shee: :-)

[14:33] <b2gills> masak: the pod in Hash::Ordered is copied after the __END__ marker by a Dist::Zilla plugin, and then the original pod is commented out so that line numbers match between the repository and the released module ( which is then hidden by default on metacpan )

[14:33] <DrForr> Extended trip to the Bahamas? Hello...

[14:34] <masak> b2gills: oh, so it's a Dist::Zilla thing? thank you -- TIL.

[14:35] <moritz> dzil -- all the magic you ever wanted, and then some

[14:35] *** FROGGS left
[14:36] <pmichaud> more magic:  http://www.catb.org/jargon/html/magic-story.html

[14:38] <hoelzro> ahoy #perl6

[14:39] <PerlJam> pmichaud: My first thought was "ground loop" and the 1994 paragraph at the end sounds like that's probably what it was.

[14:40] <pmichaud> PerlJam: somehow that story came up in conversation this weekend and so I thought I'd past it in now

[14:41] <masak> I remember finding a print version of the jargon file while still a teenager. made an impression on me.

[14:41] <PerlJam> dzil's magic is more like "you are staring at a box with many switches, some of which are invisible.  The box can do magical things ... if only you flip the right switches"

[14:42] *** ribasushi joined
[14:43] *** Isp-sec joined
[14:43] *** xfix left
[14:44] <ab5tract> hey lizmat

[14:44] <ab5tract> what is "use cur"

[14:44] <timotimo> like "use lib"; cur stands for CompUnitRepo

[14:44] <ab5tract> timotimo: ah, makes sense :)

[14:44] <muraiki> imports mongrel dogs

[14:45] <ab5tract> and resolves my complaint (which was, please no more ambiguous shortening of names!)

[14:46] <nwc10> er, epic FAIL

[14:46] <nwc10> write string requires an object with REPR MVMOSHandle

[14:46] *** cognominal left
[14:50] *** agentzh_ left
[14:51] *** _mg_ left
[14:53] <lizmat> ab5tract: it's the new use lib

[14:54] <lizmat> if the functionality is all operational, there will be a rm lib/lib.pm6 and s/cur/lib/ in World

[14:54] <lizmat> *when

[14:59] <PerlJam> Is there some problem building panda with rakudobrew?

[14:59] <dalek> rakudo/nom: fce74e1 | jnthn++ | src/core/Inc.pm:

[14:59] <dalek> rakudo/nom: Ensure we don't end up with standard handles in SC

[14:59] <dalek> rakudo/nom: 

[14:59] <dalek> rakudo/nom: Fixes the regression in 8741051.

[14:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fce74e1089

[14:59] <jnthn> Or at least, the biggy...lizmat++ is working on the regression 54-use-lib.t

[14:59] *** FROGGS joined
[15:00] <ab5tract> lizmat: interesting :)

[15:03] *** isBEKaml joined
[15:04] * TimToady suspects that "cur" is a bit you-think-that's-cute-today-ish

[15:04] <PerlJam> I just cloned a fresh rakudobrew and used it to install rakudo-moar which happened without a hitch.  But "rakudobrew build-panda" did this: https://gist.github.com/perlpilot/26ba5f94a253d60460e9

[15:04] <PerlJam> Is this a known thing?

[15:04] *** Sysaxed` left
[15:04] <TimToady> or is 'cur' a temporary expedient?

[15:05] <jnthn> TimToady: Temporary

[15:05] <jnthn> TimToady: Will become 'lib' when it works nicely, afaiu

[15:05] <TimToady> so it's intentionally cute today :)

[15:05] <jnthn> aye

[15:05] * pmichaud gives rakudobrew a try

[15:06] <TimToady> we need to figure out what a Dog type would be someday though, to go with the Rats and Cats

[15:06] *** isBEKaml left
[15:07] <pmichaud> .u 1f408

[15:07] <yoleaux> U+1F408 CAT [So] (🐈)

[15:07] <pmichaud> .u 1f400

[15:07] <yoleaux> U+1F400 RAT [So] (🐀)

[15:07] <pmichaud> .u 1f415

[15:07] <yoleaux> U+1F415 DOG [So] (🐕)

[15:10] *** larion left
[15:10] <lizmat> TimToady: "cur" is a temporary expedient

[15:10] *** larion joined
[15:10] <TimToady> yeah, I figgered that out, after an extra cup of coffee or so

[15:11] *** molaf_ joined
[15:12] *** kurahaupo left
[15:12] <jnthn> train &

[15:14] *** rarara joined
[15:14] *** molaf left
[15:18] *** isBEKaml joined
[15:19] *** cognominal joined
[15:21] *** poul left
[15:22] *** zakharyas left
[15:22] *** g4 left
[15:23] *** agentzh_ joined
[15:23] <brrt> .tell jnthn could you try building moar+nqp on windows again

[15:23] <yoleaux> brrt: I'll pass your message to jnthn.

[15:23] <brrt> in 4 hours time or so

[15:23] <brrt> :-)

[15:24] <FROGGS> brrt: I can

[15:24] <brrt> oh, please do

[15:24] <brrt> i have no access to a VM right now

[15:25] *** larion left
[15:25] *** kurahaupo joined
[15:27] *** lolisa left
[15:28] *** telex left
[15:30] *** telex joined
[15:31] *** ab5tract left
[15:32] * brrt afk

[15:33] <brrt> maybe i'll have a vm somewhat later today, i will try to test

[15:34] <FROGGS> brrt: I'm building it right now

[15:34] <brrt> ah ok

[15:34] <brrt> great :-)

[15:34] <brrt> i'll check for results later

[15:34] *** brrt left
[15:35] <dalek> rakudo/nom: 7fada0f | lizmat++ | src/Perl6/World.nqp:

[15:35] <dalek> rakudo/nom: Make sure @?INC is a Parcel

[15:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7fada0f601

[15:35] <dalek> rakudo/nom: 57ae807 | lizmat++ | t/01-sanity/54-use-lib.t:

[15:35] <dalek> rakudo/nom: Make sure we test @?INC at compile time

[15:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57ae807819

[15:38] <FROGGS> .tell brrt I was able build: perl6 version 2015.04-221-gfce74e1 built on MoarVM version 2015.04-105-gbec36ae

[15:38] <yoleaux> FROGGS: I'll pass your message to brrt.

[15:42] *** Ven left
[15:51] *** itz_ joined
[15:52] *** Ven joined
[15:53] * [Coke] ~~ from the preent.

[15:53] <[Coke]> *present!

[15:53] *** domidumont left
[15:54] *** agentzh_ left
[15:55] *** Ven left
[15:55] *** laouji joined
[15:56] <pmichaud> PerlJam: here's what I got when trying "rakudobrew build panda":  https://gist.github.com/pmichaud/701651b03fbfc6125093

[15:57] <pmichaud> (fail, but for a different reason than yours)

[15:59] <PerlJam> pmichaud: my guess right now is that the latest rakudo+panda is temporarily suffering from the CUR changes

[15:59] <pmichaud> PerlJam: that's been the line going around here as well for the last day or so

[16:00] *** laouji left
[16:01] *** lolisa joined
[16:01] <TimToady> so, in *theory*, adding a submethod DESTROY () { self.sink } to Failure shouldn't have any effect...

[16:01] <TimToady> in *practice*, not so much

[16:01] <TimToady> blows up 18 test files

[16:01] *** isBEKaml left
[16:01] <TimToady> so we've got some Failure leaks somewhere

[16:02] <TimToady> probably faulty sinking

[16:06] <TimToady> ah, no, just 11 files, was out-of-sync with github

[16:06] <TimToady> maybe Failure.DESTROY should detect that but just issue a warning for now

[16:08] *** espadrine_ left
[16:08] <TimToady> or maybe it's just an order-of-destruction issue for failures that were stored in variables, hmm...

[16:09] <TimToady> still, probably indicates logic errors somewhere

[16:11] <TimToady> not out-of-sync with github, we just have 7 or so failing spectests currently, having to do with modules

[16:12] * lizmat is surprised and checks

[16:12] <ingy> TimToady: I was thinking… you probably know I do a ton of Bash programming these days, and for CLI stuff the code really can't be beat by Perl or anything in its class. Mostly because IPC stuff is so beautifully integrated.

[16:13] <ingy> so I was wondering if Perl6 could be awesome in that realm it might be part of the evasive "killerness"

[16:13] *** gfldex joined
[16:14] <ingy> I mean "beat" in terms of succinctness of the task, and also handling all the devils in IPC stuff (that other langs bolt on)

[16:15] <lizmat> TimToady: confirrmed here, looking at them

[16:16] *** eli-se joined
[16:16] <ingy> anyway, just wanted to float that out there

[16:19] <eli-se> morning

[16:23] <cognominal> ingy got a pipe dream?

[16:24] <ingy> cognominal: cute :)

[16:24] <lizmat> m: use lib "foo"; .say for @*INC; EVAL q/BEGIN .say for @*INC/   #  huh?

[16:24] <camelia> rakudo-moar 57ae80: OUTPUT«file#foo␤file#/home/camelia/.perl6/2015.04-223-g57ae807/lib␤inst#/home/camelia/.perl6/2015.04-223-g57ae807␤file#/home/camelia/rakudo-inst-2/share/perl6/lib␤file#/home/camelia/rakudo-inst-2/share/perl6/vendor/lib␤file#/home/camelia/rakudo-inst-2/s…»

[16:24] <TimToady> cognominal: nah, he's just trying to redirect the conversation

[16:25] <lizmat> m: use lib "foo"; say +@*INC; EVAL q/say +@*INC/   #  huh?

[16:25] <camelia> rakudo-moar 57ae80: OUTPUT«9␤8␤»

[16:26] <cognominal> TimToady, but not to /dev/null

[16:26] *** kbenson_ joined
[16:26] <ingy> TimToady, cognominal: well you punsters may have answered me a bit. Perl 6 can lexically make syntax be (s)hellish :)

[16:26] <lizmat> m: use lib "foo"; say +@*INC; EVAL q/say +@*INC/; say BEGIN +@*INC  #  huh?

[16:26] <camelia> rakudo-moar 57ae80: OUTPUT«9␤8␤9␤»

[16:26] <cognominal> ingy, there is a place for a slang that mimics the shell

[16:27] *** airdisa left
[16:27] *** airdisa joined
[16:28] <ingy> cognominal: ?

[16:29] *** maddingue left
[16:30] <ingy> cognominal: I'm not sure what you mean

[16:30] <cognominal> Perl 6 is about weaving sublanguages (or slangs), so far the "normal" slang, the quote slang, the regex slang. A shell language would be a nice addition.

[16:30] <ingy> ah, yes

[16:31] <ingy> I think we can mark this one "solved in theory" then :)

[16:31] *** maddingue joined
[16:31] <cognominal> I have thinking about it a long time but I am not much a programmer.

[16:31] <ingy> Seems like something I might be interested in doing at some point

[16:31] <dalek> rakudo/nom: 8013195 | TimToady++ | src/core/Failure.pm:

[16:31] <dalek> rakudo/nom: warn if Failure.DESTROY finds unhandled one

[16:31] <dalek> rakudo/nom: 

[16:31] <dalek> rakudo/nom: Hopefully not a user-facing warning (much), but should help us find

[16:31] <dalek> rakudo/nom: failure leaks and plug 'em.

[16:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8013195a2d

[16:31] <cognominal> I am trying to get up to speed with nqp.

[16:32] *** mohij joined
[16:32] *** airdisa left
[16:32] <ingy> cognominal: If I were going to do this I'd look through all my code and find the nicest parts to keep

[16:32] <cognominal> My main complaint so far is that nqp is a different language from Perl 6 making difficult to derive slangs.

[16:32] <ingy> I use bash in xt/ tests a lot for CPAN modules now

[16:33] <ingy> especially the CLI ones (which are a lot)

[16:33] *** spider-mario joined
[16:33] <ingy> I ported Test::More to bash some time ago

[16:33] <ingy> so I can run all the perl and bash tests with the same `prove` statement

[16:34] <ingy> since prove honors the hashbang

[16:34] <ingy> although I think it may not work with perl6

[16:34] <moritz> does that work on Windows?

[16:35] <ingy> moritz: which part?

[16:35] <moritz> ingy: the tests written in bash, and running them with prove

[16:35] <ingy> that's 2 parts :)

[16:36] <moritz> ingy: and do any of them work on Windows?

[16:36] <ingy> they are xt/ tests, so the first answer is "not critical"

[16:36] <moritz> evasion means "no" :-)

[16:36] <ingy> but the second answer it "I care, and getting closer"

[16:37] <moritz> still sounds like a "no" to me :-)

[16:37] <ingy> moritz: no

[16:38] <ingy> moritz: Is Perl 6 ready for production?

[16:38] <ingy> I mean it's a loaded question

[16:38] <cognominal> ingy, in fact, recently, I said here shell for the Perl 6 repl, and apparently eyes glazed.  In my mind, that's the same thing, just != syntaxes.

[16:38] *** lizmat left
[16:38] <ingy> do you want to flog me or talk about it? :)

[16:38] <nwc10> ingy: I think a fair answer is "not before the GLR is done"

[16:38] <ingy> nwc10: so "no"

[16:39] <nwc10> ingy: indeed. not yet.

[16:39] <moritz> ingy: "do the tests run on windows" doesn't quite sound like a very loaded question to me

[16:39] <ingy> well you clearly wanted to point out that I hadn't thought about windows

[16:40] <ingy> but I have and I'm working on it

[16:40] <moritz> ingy: I didn't want to point out anything; I simply wanted to know

[16:40] <skids> hugme: hug ingy, moritz

[16:40] <skids> aww no hugme?

[16:41] <ingy> well I explained it to you and you pushed me into a corner

[16:41] <moritz> I *know* you can run bash scripts on windows if certain conditions are met (some kind of POSIX env installed)

[16:41] <ingy> just sayin

[16:41] <moritz> ingy: sorry about that

[16:41] <ingy> np :)

[16:42] <ingy> my point was that I write a lot more (dev/release) tests for CLI system interaction now, because it is easy

[16:43] <ingy> I'd like that ease in perl6

[16:44] *** lizmat joined
[16:45] <cognominal> me too. Lke the Apple motto is "there is an app for that", the Perl 6 will be "there is a slang for that"

[16:46] <cognominal> but currently to much an involved operation

[16:47] <cognominal> not even sure there is an advent post about that

[16:47] <cognominal> https://perl6advent.wordpress.com/2013/12/16/day-16-slangs/ # I am wrong

[16:48] <cognominal> but that is a mere appetizer

[16:48] *** abraxxa left
[16:49] *** airdisa joined
[16:50] <ugexe> -I doesn't appear to work anymore

[16:50] <jnthn> .tell brrt I can confirm it's foxed

[16:50] <yoleaux> 15:23Z <brrt> jnthn: could you try building moar+nqp on windows again

[16:50] <yoleaux> jnthn: I'll pass your message to brrt.

[16:50] <jnthn> .tell brrt I can confirm it's *fixed*

[16:50] <yoleaux> jnthn: I'll pass your message to brrt.

[16:54] <lizmat> ugexe: can you elaborate?

[16:55] <ugexe> if i do 'perl6 -Ilib t/some-testfile.t' it will tell me it cant find 'Some::Module' and then lists the compunitrepos but /lib is not listed

[16:56] *** virtualsue left
[16:56] <ugexe> same when i try to install panda... it cant find File::Find

[16:57] <dalek> perl6-roast-data: 84b93ac | coke++ | / (9 files):

[16:57] <dalek> perl6-roast-data: today (automated commit)

[16:57] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/84b93acab7

[16:57] <tony-o> i get file#lib in my output for that, i do have the issue with panda though

[16:57] *** spider-mario left
[16:58] <tony-o> Missing or wrong version of dependency 'src/gen/m-CORE.setting' (from 'lib/File/Find.pm')

[16:58] <lizmat> ugexe: confirmed, investigating that as well

[17:00] <ugexe> tony-o: you have leftovers from a previous install

[17:00] <ugexe> ive made a habit of doing rakudobrew nuke moar && rakudobrew build moar

[17:01] <tony-o> i don't know what nuke is going to do but it sounds like fun

[17:01] <tony-o> ah ^

[17:01] <zengargoyle> a few days ago i did an upgrade of a long dormant perlbrew setup... had lots of breakage and ended up nuking everything and starting from blank

[17:01] <tadzik> Su-Shee: yes, I did panda :)

[17:01] *** spider-mario joined
[17:01] <tony-o> maybe that's why i also see file#lib with -I

[17:02] <tadzik> masak: hmm, talk idea sounds interesting

[17:02] <tadzik> masak: although the war stories would be rather peaceful :)

[17:03] <ugexe> tony-o: i am trying to run a test which needs it before compile time (via a use statement). doing -Ilib -e 'say @*INC' is after compile time

[17:05] <timotimo> japhb: it'd be nice if bench quickstart would complain about the several perl5 dependencies missing before starting to do a lot of stuff

[17:06] <[Coke]> still getting a bunch of failures on the daily runs in integration/advent2009-day17 , across backends.

[17:06] <lizmat> error: a cherry-pick or revert is already in progress

[17:06] <lizmat> how do I fix that ?

[17:06] <lizmat> Am about to revert my commits of today  :-(

[17:06] <timotimo> resetting git with --hard perhaps?

[17:06] <timotimo> that'll nuke all state i suppose, and all changes made so far

[17:07] <lizmat> did that already

[17:07] <[Coke]> looks like that's a stress test, not a spectest.

[17:07] <timotimo> huh

[17:08] <[Coke]> git cherry-pick --abort ?

[17:08] <[Coke]> (assuming there was some merge conflict that got in the way there on the cherry pick?)

[17:09] *** _mg_ joined
[17:09] <lizmat> I had to stash stuff after I tried it for the first time

[17:10] <[Coke]> maybe the stash and the half done cherry pick conflicted? iunno.

[17:12] <lizmat> I cloned again, did the revert there, copied the files, running spectest now

[17:12] *** pyrimidine joined
[17:12] <tony-o> ugexe: i know - here is a gist: https://gist.github.com/tony-o/8a97b8d965703729d6b7

[17:13] <tony-o> ugexe: this is freshly built ^

[17:13] *** yqt joined
[17:14] *** _mg_ left
[17:15] <ugexe> so it would seem its if its a dependency of something that is 'use'd it doesnt get found before @*INC is populated?

[17:16] <lizmat> we're shutting down in Oslo right now

[17:17] <ugexe> so if your 'use Dumy' was a real module but had a 'use Dummy2', it wouldnt find Dummy2

[17:18] <dalek> rakudo/nom: bcc8e2c | lizmat++ | src/ (3 files):

[17:18] <dalek> rakudo/nom: Revert the @?INC work of today, it broke too much

[17:18] <dalek> rakudo/nom: 

[17:18] <dalek> rakudo/nom: This should unbreak the spectest, but am not sure about panda

[17:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bcc8e2c5c7

[17:18] <lizmat> away for a few hours at least&

[17:18] *** lizmat left
[17:24] <Su-Shee> tadzik: lovely! did you see the plans I have in mind for you? ;)

[17:24] <tony-o> ugexe: ill give it a shot with a real module

[17:25] <vendethiel> lizmat++ # experimenting a lot to improve what we have :)

[17:25] <Su-Shee> tadzik: any other talk idea welcome too.

[17:25] <ugexe> lizmat: https://github.com/rakudo/rakudo/blob/874105144bdb1c56437178e677d9b0c9bc6f1c57/src/Perl6/World.nqp#L644 + Line 648/649. Its just pushing 1 or 0 onto $INC

[17:25] <ugexe> oh nm

[17:28] *** koo6 joined
[17:29] *** FROGGS left
[17:29] <tadzik> Su-Shee: yeah, something about cake :P

[17:29] * timotimo is currently running a benchmark session

[17:29] <tadzik> Su-Shee: so was this about talks or inv^Wcake?

[17:31] <Su-Shee> tadzik: I promised to kick perl 6 butts for yapc::eu to have more perl6 - real world perl6 - talks and more than "jnthn does 5 talks" :) and I didn't want to leave out you ;)

[17:31] <tadzik> :) Alright

[17:31] *** FROGGS joined
[17:31] <tadzik> when does cfp end?

[17:32] <Su-Shee> tadzik: so one idea was "how to module in perl6" - something along the line of toolchaining/deployment/ and such. there's more to a module than just making it

[17:32] <Su-Shee> tadzik: no idea, lemme look

[17:33] *** pdcawley_ joined
[17:33] *** pdcawley left
[17:33] <Su-Shee> tadzik: it doesn't say. ;)

[17:34] <DrForr> Jun 30.

[17:34] <Su-Shee> DrForr: where did you find that?

[17:34] <DrForr> http://act.yapc.eu/ye2015/pricesanddates.html

[17:35] <[Coke]> bartolin: Looks like 125146 may also relate to the crash in t/spec/integration/advent2009-day17.t

[17:35] <DrForr> I'm tempted to create a talk on grammars actually.

[17:36] <Su-Shee> DrForr: well as long as you make it "real world" and not some rare uber-fancy thing you'll encounter exactly once in your life and nobody elses.. :)) also, ENCODING? ;)

[17:36] <Su-Shee> tadzik: 30th june

[17:36] <DrForr> Does parsing JS count? :)

[17:37] <Su-Shee> DrForr: for example..

[17:37] <PerlJam> DrForr: I think if you could show a grammar that parses JS and then how to derive from that a grammar that parses coffeescript (for example) would be very interesting  :)

[17:37] <Su-Shee> DrForr: or, I was thinking maybe something like making a JSON module live.. (not that there is another one needed probably..)

[17:38] <Su-Shee> PerlJam: hey! order stuff for your yapc! ;)

[17:38] <vendethiel> grammar that parses coffeescript? good luck with that...

[17:38] <vendethiel> (hint: indentation is by far not the hardest part :P)

[17:39] <DrForr> Well, I'm putting the finishing touches on an ANTLR parser as I type.

[17:39] <Su-Shee> DrForr: ok, stupid question: can it generate js as well?

[17:40] <hoelzro> what's the difference between my $result = callsame; and my \result = callsame? what exactly is the latter doing?

[17:40] <PerlJam> hoelzro: the first imposes an item context on the result, the latter does not.

[17:40] <vendethiel> hoelzro: not containerizing

[17:40] <hoelzro> ahhhhhh

[17:40] <hoelzro> thanks PerlJam, vendethiel 

[17:41] <DrForr> Not that I'm aware of, and that would probably get ito the mind-mangling realm.

[17:42] * DrForr hears a loud *pop* from the shelf that holds the *good* alcohol and notices for the first time how badly distorted the TV shelf looks.

[17:46] <tadzik> Su-Shee: alrighty then

[17:46] <DrForr> Well, generating JS from *perl* would be close to mind-mangling, generating JS from a data structure fairly simple but kind of pointless, as you'd have to ensure by hnad that you're generating syntactically valid JS, kind of defeating the purpose.

[17:47] <tadzik> Su-Shee: although to be fair, your idea is more dogfooding than real world perl6 :)

[17:47] <Su-Shee> DrForr: what I never get: why would I want to parse js from perl? what do I do with it then?

[17:47] <tadzik> Su-Shee: I could talk about gamedev again, each time I do it forces me to work on my engine some more

[17:48] <Su-Shee> tadzik: consider it an idea - you have done lots of relevant things and deployment/modules/version management is relevant to bring p6 into business

[17:48] <tadzik> true

[17:48] <tadzik> I can submit two :)

[17:48] <Su-Shee> tadzik: most certainly you can do that!

[17:48] <DrForr> JS is just an example, I'm sure there are more relevant languages or even just configuraiton file formats to work with.

[17:49] <Su-Shee> DrForr: that was a real question, I never understood why I would want to parse lang x in perl. config files I understand of course.

[17:49] <DrForr> Roundtripping JS-perl-JS might be more useful, and not *that* hard to do.

[17:50] <PerlJam> Su-Shee: It's a middle step from auto-generating working software from a high-level description of what the software should do (and the generating software should clearly be written in perl ;)

[17:50] <Su-Shee> PerlJam: yes, but what is it good for? what do I end up with what is useful to me?

[17:51] <Su-Shee> PerlJam: and: is it relevant for many developers and their every day work?

[17:51] <PerlJam> Su-Shee: "Computer, make me a cake"   *poof*  Cake.   ;-)

[17:51] <DrForr> It's a middle layer. On its own it's not terribly useful, but that doesn't mean it doesn't need to be done.

[17:51] <Su-Shee> PerlJam: that is a totally useless metaphor for me. a real world example please.

[17:51] <DrForr> And what I'm working on lets you bootstrap every language there's an ANTLR grammar for.

[17:51] * Su-Shee is too stupid to get from "Cake" to "useful software"

[17:53] *** yqt left
[17:54] <Su-Shee> what I'm getting at is having as many perl 6 talks as possible which are a good addition to the christmas announcement of "perl 6 production ready" and that means: anything useful for production. ;) I know that you can do cool brainfuck stuff with it. but how many times do you need that "in production"?

[17:55] <PerlJam> good point. practicality first.  Crazy futuristic stuff later.

[17:56] <Su-Shee> yes. because if you want to convince anybody to _actually_ use perl6, it needs to be shown to people.

[17:56] <jnthn> Or use the crazy futuristic stuff to solve very practical problems very well. :P

[17:57] <Su-Shee> if you can bring it to the masses and make it useful for us common folk.. :)

[17:57] <DrForr> If all you want is production tools rewritten in perl6 then why bother rewriting in the first place? Oh, I know, futuristic bugs!

[17:57] <Su-Shee> DrForr: I'm caring only for the marketing, perception and success. 

[17:58] <Su-Shee> DrForr: but I'm happy to take any great idea making .. 24 year old javascript hipsters flock to perl 6 :)

[17:58] <DrForr> Right. I guess what I'm really trying to say is there isn't a large enough userbase to know what the "killer app" is going to be just yet.

[17:58] <tony-o> less the 24 yr old part some of us are already here Su-Shee 

[17:58] <Su-Shee> yes, and how would you create such a userbase?

[17:59] <tony-o> free healthcare

[17:59] <DrForr> Egg, meet chicken. Chicken, egg.

[17:59] <PerlJam> Eggs came first.

[17:59] *** eli-se left
[18:00] <Su-Shee> oh well. submit whatever you want; in the end it's your community's choice on where to place yourself.

[18:00] <tony-o> the async stuff in perl6 is what originally got me to kick the node fix

[18:00] <Su-Shee> yes. I will cover that. 

[18:00] <Su-Shee> I submitted a talk "against node envy" in february already. ;)

[18:01] * jnthn will continue the async fixing/polishing work after his next couple of days teaching are done. :) 

[18:01] <Su-Shee> jnthn: your talk convinced me to add perl6 ;)

[18:01] <tadzik> Su-Shee: ooh, that sound sinteresting :)

[18:01] <Su-Shee> jnthn: the one yesterday.

[18:01] <vendethiel> Su-Shee: hi, I'm a 20y-o *coffeescript* hipster that flocked to perl6 :)

[18:01] <Su-Shee> awesome that makes two. now bring the other couple of hundred. ;)

[18:02] <vendethiel> working on that. though I havn't written my fpw slides yet.. :)

[18:02] <tony-o> Su-Shee: are those talks available online?

[18:02] <timotimo> can a single person be said to "flock"?

[18:02] <PerlJam> Su-Shee: I've occasionally thought the Perl 6 community should have a document that tries to answer why certain groups of people would use Perl 6.  "I'm new to programming, why Perl 6?"  "I'm a Java developer, why would I use Perl 6?"   "I'm a Perl 5 programmer, why would I use Perl 6?"

[18:02] *** larion joined
[18:02] <PerlJam> etc.

[18:02] <vendethiel> timotimo: i'm pretty fat :P

[18:02] <Su-Shee> vendethiel: tony-o: then please please submit a talk "why I abondoned node.js for perl6" or something like it. 

[18:03] <vendethiel> Su-Shee: never would I use such a lowly tactic :)

[18:03] <Su-Shee> tony-o: which talks?

[18:03] <timotimo> vendethiel: wait what.

[18:03] <Su-Shee> vendethiel: ?! why??

[18:03] <vendethiel> because nodejs is web scale! you turn it up and it scales right up

[18:03] <tadzik> vendethiel: why? It's okay, noders probably won't see it anyway :P

[18:03] <tony-o> timotimo: i think a single person joining another group is considered flocking, if for no other reason just colloquial

[18:03] <vendethiel> just like mongodb

[18:03] <tony-o> Su-Shee: the against node envy

[18:04] <Su-Shee> tony-o: I _submitted_ it - it's a talk for yapc::eu in september. ;)

[18:04] <Su-Shee> haven't even written the code yet

[18:04] <tony-o> ah!

[18:04] <DrForr> Port Mojo, Dancer and whatever you like to perl6, you'll have Mojo and Dancer with different bugs. We've got to have time to find out what Perl6 will be good at, we're too busy finding and fixing bugs at the moment :)

[18:04] <Su-Shee> tadzik: well people told me they liked the comparison aspect of the web frameworks thing, so I decided I'll compare the async stuff

[18:05] <Su-Shee> vendethiel: so and why wouldn't you submit such a talk?

[18:05] <vendethiel> Su-Shee: because it sounds like buzz titles

[18:05] <DrForr> And I use 'we' to mean 'you' as I really haven't done a lot yet.

[18:05] <Su-Shee> vendethiel: dude, that's why I asked for it.

[18:05] *** rindolf left
[18:06] <vendethiel> (I'd rather not have "dude" :P)

[18:06] <Su-Shee> vendethiel: you can fill it with real content. it still IS a relevant thing.

[18:06] <vendethiel> yeah, but I want people to be interested in what I have to say, not in some buzzfeed-like title

[18:06] <Su-Shee> vendethiel: honey [] dear [] that's why I asked for it. ;) 

[18:07] <PerlJam> huh

[18:07] <Su-Shee> vendethiel: you do realize that perl in general is desperate for interesting ideas how to make people be interested again?

[18:08] <Su-Shee> it would be the perfect addition to lestrad's talk how he made the yapc::asia 1200 people large.. 

[18:09] <DrForr> One of the major idaes I remember from that is rebranding to more 'web development'.

[18:10] *** cschwenz joined
[18:12] <Su-Shee> well it's none of my business what perl 6 as a community thinks is a good idea, I'm just making sure that you actually submit talks and have a shot at convincing people... 

[18:15] *** yqt joined
[18:15] *** eli-se joined
[18:16] <DrForr> For my part the most convincing argument I saw was Curtis pointing out how much cr*p Java coders have to put up, and how much of that Perl6 gets rid of.

[18:17] <Su-Shee> yeah, but on the other hand: java 8 is actually quite decent..

[18:21] <DrForr> And most of my time so far has been spent alternately finding compiler bugs and writng chunks of code while trying to ignore the "I'm about to get mugged" sensation that comes with new libraries and a new *language*.

[18:22] *** raiph left
[18:22] <jdv79> mugged?

[18:22] *** Hor|zon_ joined
[18:24] *** raiph joined
[18:24] *** kst`` joined
[18:24] <DrForr> Hyperbole mostly, but when I was starting out I'd go along writing code, then find out "Oh, this doesn't work as it used to, what do I do *now*? Oh, nice, *that's* differ..wait, how do I... Oh, cute.

[18:24] <DrForr> s/$/"

[18:25] *** ggoebel2 joined
[18:25] *** kbenson_ left
[18:25] *** diana_olhovik_ left
[18:26] *** betterwo1ld joined
[18:26] *** tony-o_ joined
[18:26] *** tony-o left
[18:26] *** yakudza left
[18:26] *** raydiak left
[18:26] *** StavroMueller left
[18:26] *** betterworld left
[18:27] *** Patterner joined
[18:27] *** StavroMueller joined
[18:27] *** kbenson_ joined
[18:27] *** diana_olhovik_ joined
[18:27] *** agentzh joined
[18:27] *** arnsholt joined
[18:27] *** Khisanth joined
[18:27] *** eternaleye joined
[18:27] *** hernan joined
[18:27] *** Possum joined
[18:27] *** torbjorn joined
[18:27] *** b^_^d joined
[18:27] *** BooK_ joined
[18:27] *** ponbiki joined
[18:27] *** eternaleye left
[18:27] *** yakudza joined
[18:28] *** eternaleye joined
[18:28] *** eternaleye left
[18:28] *** eternaleye joined
[18:29] *** raydiak joined
[18:30] *** domidumont joined
[18:30] *** b2gills joined
[18:34] <FROGGS> TimToady: instead of reinterpreting a regex subset in INTERPOLATE's EVAL, can't we mess with EVAL's context so that it does not see e.g. $arg?

[18:34] <FROGGS> m: my $a = '<{ say $arg }> <?>'; '' ~~ / <$a> / 

[18:34] <camelia> rakudo-moar bcc8e2: OUTPUT«<{ say $arg }> <?>␤»

[18:35] <FROGGS> m: my $x = 42; EVAL 'say $x'

[18:35] <camelia> rakudo-moar bcc8e2: OUTPUT«42␤»

[18:35] <FROGGS> m: my $x = 42; EVAL 'say $x', :!context

[18:35] <camelia> rakudo-moar bcc8e2: OUTPUT«Cannot call EVAL("say \$x", :!context); none of these signatures match:␤    (Cool $code, Str :lang($lang) where { ... }, PseudoStash :context($context))␤    (Cool $code, Any :lang($lang) = { ... }, PseudoStash :context($context))␤  in block <unit> at…»

[18:35] *** jgoff joined
[18:36] <FROGGS> m: my $x = 42; EVAL 'say $x', :context(PseudoStash)

[18:36] <camelia> rakudo-moar bcc8e2: OUTPUT«42␤»

[18:36] <timotimo> :context(CORE) :)

[18:36] <timotimo> er, i mean CORE::

[18:36] <FROGGS> m: my $x = 42; EVAL 'say $x', :context(CORE::)

[18:36] <camelia> rakudo-moar bcc8e2: OUTPUT«5===SORRY!5=== Error while compiling EVAL_0␤Variable '$x' is not declared␤at EVAL_0:1␤------> 3say 7⏏5$x␤»

[18:36] <FROGGS> hehe

[18:36] <FROGGS> hmmmm

[18:36] <FROGGS> I'll try that

[18:36] <FROGGS> timotimo++

[18:36] *** brrt joined
[18:37] <DrForr> I,I "I got 99 problems but a switch ain't one."

[18:38] *** rba_ joined
[18:38] <FROGGS> ohh, I can perhaps pass the correct CALLER:: around

[18:39] <timotimo> hmm

[18:39] <timotimo> seems like current rakudo-moar on nom "writes to STDERR" on rc-forest-fire; maybe a fix is needed for latest flattening/itemization fixes/changes

[18:40] <brrt> \o

[18:40] <yoleaux> 15:38Z <FROGGS> brrt: I was able build: perl6 version 2015.04-221-gfce74e1 built on MoarVM version 2015.04-105-gbec36ae

[18:40] <yoleaux> 16:50Z <jnthn> brrt: I can confirm it's foxed

[18:40] <yoleaux> 16:50Z <jnthn> brrt: I can confirm it's *fixed*

[18:40] <yoleaux> 18:37Z <PerlJam> brrt: Have you seen http://www.cs.tufts.edu/~nr/pubs/tiler.pdf

[18:40] <brrt> yay

[18:41] <DrForr> m: token f { 'a'? } "b" =~/<f>/;

[18:41] <camelia> rakudo-moar bcc8e2: OUTPUT«5===SORRY!5===␤Strange text after block (missing semicolon or comma?)␤at /tmp/5AadvQoo4p:1␤------> 3token f { 'a'? }7⏏5 "b" =~/<f>/;␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end…»

[18:41] <brrt> PerlJam - not read it, but have seen the strategy mentioned iirc

[18:41] <FROGGS> m: token f { 'a'? }; "b" =~/<f>/;

[18:41] <camelia> rakudo-moar bcc8e2: OUTPUT«5===SORRY!5===␤Unsupported use of =~ to do pattern matching; in Perl 6 please use ~~␤at /tmp/78rlyweHjj:1␤------> 3token f { 'a'? }; "b" =~7⏏5/<f>/;␤Other potential difficulties:␤    Useless declaration of a has-scoped method in mainlin…»

[18:41] <brrt> thanks :-)

[18:42] <DrForr> Oh, right. IN any case I was actually interested in whether optional terms now return 'Empty' as opposed to 'Nil'.

[18:42] <brrt> fwiw, i made a tiny mistake, but it works out nicely; instead of 32 bytes of scratch space we now have 64 bytes of scratch space 

[18:42] *** jgoff left
[18:42] <brrt> i.o.w. 'enough for every last caller-saved GPR'

[18:43] <dalek> nqp/mast_localref_2: 34b1373 | timotimo++ | t/moar/02-qast-references.t:

[18:43] <dalek> nqp/mast_localref_2: returning a str from a localref scoped var is wrong

[18:43] <dalek> nqp/mast_localref_2: review: https://github.com/perl6/nqp/commit/34b1373161

[18:44] <tony-o_> m: ('a'..'z').pick(64).join('').chars.say

[18:44] <camelia> rakudo-moar bcc8e2: OUTPUT«26␤»

[18:44] *** spider-mario left
[18:44] <tony-o_> oh i need roll

[18:45] <tony-o_> m: ('a'..'z').roll(64).join('').chars.say

[18:45] <camelia> rakudo-moar bcc8e2: OUTPUT«64␤»

[18:49] *** espadrine_ joined
[18:49] <grondilu> m: "hi"\     .say # suddenly wondering if unspaces work

[18:49] <camelia> rakudo-moar bcc8e2: OUTPUT«hi␤»

[18:50] <tony-o_> m: "hi".\ s\ a\ y

[18:50] <camelia> rakudo-moar bcc8e2: OUTPUT«5===SORRY!5=== Error while compiling /tmp/qFB_lBm97z␤Two terms in a row␤at /tmp/qFB_lBm97z:1␤------> 3"hi".\ s\ 7⏏5a\ y␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤ …»

[18:50] <grondilu> I don't think you can put them inside what would otherwise be a token.

[18:50] *** meisl joined
[18:51] *** spider-mario joined
[18:51] <timotimo> right

[18:51] *** haidarian left
[18:52] <japhb> timotimo: Did you create a GHI for that perl6-bench quickstart idea (bailing out if the perl5 does not have modules it needs)?

[18:54] <timotimo> not yet

[18:55] <timotimo> but if i do, it could also scan the benchmarks for use statements

[18:55] <timotimo> Data::Alias and List::Util at least

[18:55] <timotimo> oh, wait

[18:55] <timotimo> those need to be installed in the component itself, not the system, right?

[18:57] *** brrt left
[19:03] <FROGGS> timotimo: seems I managed to get the context right

[19:03] *** pdcawley_ left
[19:03] <FROGGS> le spectest will tell

[19:04] *** Sysaxed` joined
[19:04] *** pdcawley joined
[19:19] <timotimo> cool :)

[19:25] <japhb> timotimo: Correct.

[19:25] <japhb> Something I started and never completed.  :-(

[19:25] *** domidumont left
[19:30] <dalek> rakudo/nom: f0e142b | FROGGS++ | src/ (2 files):

[19:30] <dalek> rakudo/nom: fix context of EVAL in regex interpolation

[19:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f0e142b3a2

[19:30] <Su-Shee> so. I will remind you all about the deadline once or twice. ;) SUBMIT. 

[19:30] *** Su-Shee left
[19:32] *** laouji joined
[19:36] <meisl> Hi there, thx again for the kind help I received lately on the nqp toolchain :)

[19:36] <FROGGS> hi meisl 

[19:36] <meisl> hi FROGGS

[19:37] *** laouji left
[19:38] <meisl> got a (very simple) compiler running, for my lambda calculator thingy :D

[19:38] *** camelia joined
[19:39] <masak> 'night, #perl6

[19:39] <meisl> have a good rest, masak

[19:39] <FROGGS> gnight masak 

[19:39] *** cschwenz left
[19:40] *** ChanServ sets mode: +v camelia

[19:42] <FROGGS> m: my $foo = 42; my $a = '<{ say $arg }> .'; say 'bar' ~~ / <$a> /  # this will stop working in a bit

[19:42] <camelia> rakudo-moar bcc8e2: OUTPUT«<{ say $arg }> .␤<{ say $arg }> .␤<{ say $arg }> .␤<{ say $arg }> .␤Nil␤»

[19:42] <FROGGS> m: my $foo = 42; my $a = '<{ say $foo }> .'; say 'bar' ~~ / <$a> /  # and this will work instead

[19:42] <camelia> rakudo-moar bcc8e2: OUTPUT«5===SORRY!5=== Error while compiling EVAL_0␤Variable '$foo' is not declared␤at EVAL_0:1␤------> 3anon regex { <{ say 7⏏5$foo }> .}␤»

[19:43] <jdv79> what does "1<&1" mean?   

[19:44] <meisl> jdv79: on Windows I guess?

[19:44] <FROGGS> I know about 2>&1, but not 1<&1

[19:44] <FROGGS> 2>&1 does work on windows too btw

[19:45] *** airdisa left
[19:45] <meisl> without having tried: seems like a no-op to me...?

[19:45] <jdv79> just looking at https://rt.perl.org/Public/Bug/Display.html?id=77650

[19:46] <geekosaur> I'd expect it to be a no-op as well

[19:46] <jdv79> ok

[19:46] <FROGGS> jdv79: this is just some code to produce a warning

[19:47] *** muraiki left
[19:47] <FROGGS> m: sub 1 { 2 }; say &1

[19:47] <camelia> rakudo-moar bcc8e2: OUTPUT«5===SORRY!5=== Error while compiling /tmp/ouL2IdpO42␤Missing block␤at /tmp/ouL2IdpO42:1␤------> 3sub7⏏5 1 { 2 }; say &1␤    expecting any of:␤        new name to be defined␤»

[19:48] <geekosaur> oh, that's being evaluated by perl6, not by the shell. syntax error.

[19:49] <FROGGS> ohh, &1 translates to $/[1] it seems

[19:49] <FROGGS> m: say "foo" ~~ /(.)(.)(.)/; say &1

[19:49] <camelia> rakudo-moar f0e142: OUTPUT«｢foo｣␤ 0 => ｢f｣␤ 1 => ｢o｣␤ 2 => ｢o｣␤｢o｣␤»

[19:49] <FROGGS> m: "foo" ~~ /(.)(.)(.)/; say &1

[19:49] <camelia> rakudo-moar f0e142: OUTPUT«｢o｣␤»

[19:49] <FROGGS> weird

[19:49] <jdv79> FROGGS: where'd you find that out?

[19:50] <FROGGS> look at: perl6-m --target=ast -e 'say &2'

[19:50] <jdv79> anyway that ticket seems bogus, right?  closable as per last comment?

[19:50] <FROGGS>                 - QAST::Op(call &say) say &2

[19:50] <FROGGS>                   - QAST::Op(call &postcircumfix:<[ ]>)

[19:50] <FROGGS>                     - QAST::Var(lexical $/ :decl())

[19:50] <FROGGS>                     - QAST::WVal(Int)

[19:51] <meisl> so, to be clear - this has absolutely nothing to do with shell/cmd redirection, right?

[19:51] <FROGGS> hmmm, I dunno if these test function are supposed to swallow stderr... so I cannot judge

[19:51] <FROGGS> meisl: correct

[19:52] <[Coke]> m: rakudo: use Test; eval_lives_ok '1<&1'

[19:52] <camelia> rakudo-moar f0e142: OUTPUT«not ok 1 - ␤␤# Failed test at /tmp/GwlaEa0J1v line 1␤# Error: Whitespace required before < operator␤»

[19:53] <jdv79> iirc, and the last comment confirms, tests do generate STDERR in the p5 world.  so how to find out if that is correct in this world?

[19:53] <[Coke]> m: rakudo: use Test; eval_lives_ok '1 <&1'

[19:53] <camelia> rakudo-moar f0e142: OUTPUT«Use of Nil in numeric context at EVAL_0 line 1  in any <unit-outer> at EVAL_0:1␤␤ok 1 - ␤»

[19:53] <FROGGS> m: my $foo = 42; my $a = '<?{ say $foo }> .+'; say 'bar' ~~ / <$a> /  # \o/

[19:53] <camelia> rakudo-moar f0e142: OUTPUT«42␤｢bar｣␤»

[19:54] *** Possum left
[19:54] <[Coke]> I *think* the original complaint was that test builtins shouldn't be complaining to stderr. I think if the test does something that leaks to stderr, that's fine.

[19:56] *** |Tux| joined
[19:56] <meisl> I think this test is really about what leaks to stderr or not, &1 being just a thing to make eval complain

[19:56] <geekosaur> I think most of us expected that to be a shell thing, not a perl6 thing

[19:56] <meisl> Coke: yes, just what you said

[19:56] <geekosaur> someone probably noticed this when they botched quoting of a redirected perl6 :)

[19:57] <jdv79> yeah, ok.  i don't get why there should be that distinction but sure:)

[19:58] <meisl> well, that's what I'd call a bad test: whatever the result should be or not - you're being led to a completely wrong path at first sight

[19:59] <meisl> so instead of using &1 in that (alleged) comparison I'd propose using $IamNotNumeric

[19:59] <jdv79> stderr is potentially poisonous in any case.  i could better understand filtering all of it to prepend a # but *.

[20:00] <meisl> and then the thing about ws before <, is the test about that or the non-numeric in numeric context?!

[20:09] *** colomon left
[20:11] <literal> W 4

[20:11] <literal> oops

[20:11] *** atweiden joined
[20:12] *** Possum joined
[20:13] *** airdisa joined
[20:14] *** eli-se left
[20:26] *** airdisa left
[20:27] *** lizmat joined
[20:28] <dalek> roast: f962253 | (Justin DeVuyst)++ | S24-testing/3-output.t:

[20:28] <dalek> roast: Tests for RT #77650.

[20:28] <dalek> roast: review: https://github.com/perl6/roast/commit/f962253f72

[20:28] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=77650

[20:30] *** eli-se joined
[20:31] *** espadrine_ left
[20:31] *** colomon joined
[20:34] *** laouji joined
[20:36] *** molaf_ left
[20:38] *** laouji left
[20:39] *** cygx joined
[20:40] <cygx> o/

[20:42] *** ufobat left
[20:43] *** darutoko left
[20:44] *** brrt joined
[20:44] <jdv79> is https://rt.perl.org/Ticket/Display.html?id=77350 misclassified as closable with tests?

[20:45] <FROGGS> m: grammar A { token TOP { <so> }; token so { 'foo' | 'bar' } }; say A.parse('foo')

[20:45] <camelia> rakudo-moar f0e142: OUTPUT«Too many positionals passed; expected 1 argument but got 2␤  in regex so at /tmp/4ceGnSSjO9:1␤  in regex TOP at /tmp/4ceGnSSjO9:1␤  in block <unit> at /tmp/4ceGnSSjO9:1␤␤»

[20:45] <FROGGS> jdv79: seems like

[20:45] <cygx> I've been playing around with macros and implemented assert at https://github.com/cygx/p6-assert

[20:46] <cygx> should I add that to the ecosystem, or are the module names (assert, DEBUG, NDEBUG) too invasive?

[20:46] <FROGGS> hmmm, I guess these names are fine

[20:46] <geekosaur> we could do better than names lifted directly from C

[20:47] <FROGGS> true

[20:47] <FROGGS> but I would not call them invasive

[20:48] <colomon> as module names?

[20:48] *** kaare__ left
[20:48] <cygx> colomon: yes

[20:48] <[Coke]> well, it's "testneeded", but the test will currently fail if you use the updated one, aye.

[20:48] <[Coke]> (jdv79)

[20:48] <cygx> colomon: they intentionally look like pragmas

[20:49] <[Coke]> add a fudged failing test and then we can unmark test needed.

[20:49] <colomon> cygx: that seems mildly wrong to me.

[20:49] <colomon> I mean, they’re not pragmas, right?

[20:50] <cygx> colomon: well, they are not proper modules either

[20:50] <jdv79> [Coke]: ok, cool.

[20:50] <colomon> why not?

[20:50] <cygx> DEBUG and NDEBUG just set environment vars and can be called repeatedly

[20:50] <cygx> assert exposes a single macro

[20:51] *** dolmen joined
[20:51] <colomon> hurm, does “use DEBUG” actually turn it on?

[20:51] * colomon is thinking this sounds quite cool, even if he’s not 100% convinced by the names

[20:53] <cygx> colomon: yes, in contrast to C assert, you need to enable debug mode

[20:53] <dalek> roast: ffe2c59 | lizmat++ | S24-testing/3-output.t:

[20:53] <dalek> roast: Update test count

[20:53] <dalek> roast: review: https://github.com/perl6/roast/commit/ffe2c598a5

[20:54] <colomon> cygx: is it a general framework or just assert?

[20:54] <cygx> colomon: right now,just assert - but DEBUG and NDEBUG can easily be repurposed

[20:56] *** larion left
[20:56] <colomon> cygx: feels to me like you’re right on the verge of something awesome.  My instinct is the names still need a tweak, but you might do very well to get it in the Ecosystem as is, and figure out the tweaks later.

[20:57] <dalek> rakudo/nom: 536c26f | lizmat++ | src/Perl6/ (2 files):

[20:57] <dalek> rakudo/nom: Make 'use cur' / @?INC operational (attempt #2)

[20:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/536c26ff27

[20:58] <meisl> I've got some questions on QAST::Stmt(s) - anyone?

[20:58] *** telex left
[20:58] <lizmat> note: this does not fix panda, getting less sure that's my fault

[21:00] *** larion joined
[21:00] *** telex joined
[21:01] <timotimo> lizmat++ # perseverance

[21:03] <FROGGS> meisl: ask

[21:06] <meisl> well, actually I'm wondering what they are for at all...? (I do get working code if I stick my Ops and even just Vars right under the Block)

[21:07] *** raiph left
[21:10] <FROGGS> meisl: https://github.com/perl6/nqp/blob/master/docs/qast.markdown#qaststmts-and-qaststmt

[21:10] *** larion left
[21:12] *** colomon left
[21:13] *** fhelmberger joined
[21:14] <jdv79> lizmat: thanks

[21:16] <meisl> FROGGS: hm, yes I've read this, or similar elsewhere, and it appears reasonable at 1st sight to explicitly group a nr of statements under Stmt - but...

[21:17] *** fhelmberger left
[21:18] <meisl> FROGGS: ...what else could be inside a Block than a seq of stmts? even more so given that any expression is also a stmt; plus...

[21:19] <FROGGS> meisl: maybe jnthn can explain :o)

[21:19] *** sftp joined
[21:20] <meisl> FROGGS: ...plus that it *does* work *without* the extra Stmt(s) around it, just right under Block (some magic going on that sanitizes my illformed QAST tree?)

[21:20] <FROGGS> hmmm, not sure that this happens

[21:22] <meisl> well, I have to admit that I didn't check that (magic?) thoroughly, just judging from my toy examples

[21:23] *** larion joined
[21:26] *** dolmen left
[21:27] <meisl> FROGGS: ok, anyways. maybe you can elucidate "[...] QAST::Stmt [...] can lead to better code [...] if used correct. Incorrect use can, of course, lead to incorrect code"

[21:28] <lizmat> FROGGS jnthn : do you know of a way inside World.nqp to find out the backend we're running under ?

[21:28] <FROGGS> meisl: ahh, QAST::Stmt marks a register allocation boundary, so there is at least one difference

[21:29] <FROGGS> lizmat: gimme a sec

[21:29] <FROGGS> lizmat: if nqp::getcomp('perl6').backend.name ne 'moar' {

[21:29] <lizmat> FROGGS++

[21:30] <meisl> FROGGS: yes, it's something about locals but I still don't really get it

[21:31] <FROGGS> yeah, perhaps talk with jnthn about it

[21:31] <meisl> FROGGS: in particular I would really like to know what exactly is *incorrect use*

[21:31] <FROGGS> me needs to go to bed now

[21:31] <FROGGS> well, trying to share temporaries across QAST::Stmt's

[21:31] * lizmat hopes FROGGS will get a good night's rest

[21:32] <FROGGS> ohh, I will :o)

[21:32] <FROGGS> gnight #perl6

[21:32] <meisl> o yea, thx a lot, FROGGS

[21:32] *** FROGGS left
[21:33] *** agentzh_ joined
[21:40] *** diana_olhovik_ left
[21:40] *** agentzh_ left
[21:41] *** colomon joined
[21:41] <cygx> what's a good name for a logging function that doesn't clash with the logarithm?

[21:43] <eli-se> logging::log

[21:44] * colomon still thinks there should be a namespace, just doesn’t know what

[21:44] <lizmat> nsa::log

[21:44] <eli-se> Namespaces are one honking great idea.

[21:44] *** brrt left
[21:47] <cygx> dbg:: ?

[21:53] <meisl> cygx: log::log

[21:55] <timotimo> how about łog?

[21:56] <kurahaupo> shouldn't the function name for "logarithm" be "ln"?

[21:56] *** firecat joined
[21:56] <timotimo> well, log is usually log10 and ln is usually log_e

[21:57] <meisl> or lg

[21:57] <timotimo> m: say log 10; say ln 10

[21:57] <camelia> rakudo-moar 536c26: OUTPUT«5===SORRY!5=== Error while compiling /tmp/pEGbZqU7i1␤Undeclared routine:␤    ln used at line 1. Did you mean 'lc', 'on'?␤␤»

[21:57] <timotimo> we don't seem to have ln under that name

[21:57] <timotimo> but we do have the natural log, right?

[21:57] <timotimo> m: say log 10; say lg 10

[21:57] <camelia> rakudo-moar 536c26: OUTPUT«5===SORRY!5=== Error while compiling /tmp/FwZsYdItH3␤Undeclared routine:␤    lg used at line 1. Did you mean 'lc'?␤␤»

[21:57] <kurahaupo> timotimo: it's just a fixed ratio; log_10(x) = ln(x)/ln(10)

[21:57] <timotimo> of course

[21:58] <cygx> well, at least some mathematicians often denote log_e as log as well

[21:58] <meisl> m: say ln 2.7

[21:58] <camelia> rakudo-moar 536c26: OUTPUT«5===SORRY!5=== Error while compiling /tmp/MSXR6OmJHr␤Undeclared routine:␤    ln used at line 1. Did you mean 'lc', 'on'?␤␤»

[21:58] <kurahaupo> timotimo: and "length" works as ceil(ln(x)/ln(10))

[21:58] <kurahaupo> err, floor

[21:58] <cygx> personally, I prefer log for the generic function, lg for base 10 and ln for base e

[21:58] <cygx>  at least some mathematicians _consistently_

[21:59] <cygx> anyway, I went with logger for now (as in `use logger`)

[21:59] <kurahaupo> Maybe log-base-10 should be written Num.length ? :-)

[21:59] <meisl> well, you can call it logg, as opposed to a big chunk of wood

[22:00] *** firecat left
[22:00] *** firecat joined
[22:00] *** RabidGravy left
[22:03] <meisl> hehe, `use log` somehow reminds of Monkey Island days

[22:03] <cygx> if someone wants to keep bikeshedding, the code is at https://github.com/cygx/p6-debug

[22:03] <geekosaur> l7m :p

[22:04] <cygx> use DEBUG/use NDEBUG now set environment vars in the PERL6_DEBUG_* namespace

[22:04] <cygx> assert works as in C, logger just does a &note

[22:04] <timotimo>  Pod::To::HTML just OOM'd on my laptop in its t/02-code.t

[22:05] <timotimo> and it could very well be that it's going to do the same in the 04-lists.t as well

[22:07] *** lolisa left
[22:07] *** BenGoldberg joined
[22:08] *** lolisa joined
[22:08] <timotimo> this time i may kill it before it OOM's and gets other things on my machine killed

[22:09] <jdv79> m: class foo is Any; say foo.^methods # why nothing?

[22:09] <camelia> rakudo-moar 536c26: OUTPUT«␤»

[22:09] <lizmat> m: class foo is Any; say foo.^methods(:all)

[22:09] <camelia> rakudo-moar 536c26: OUTPUT«Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new ACCEPTS Method+{<anon>}.new Method+{…»

[22:11] *** larion left
[22:14] *** bjz left
[22:23] *** spider-mario left
[22:23] *** BenGoldberg left
[22:23] <timotimo> hmm

[22:23] <timotimo> so, what were all the things happening last week

[22:23] <timotimo> timtoady was at some event, there was the GPW and OSDC.no?

[22:23] *** spider-mario joined
[22:24] <lizmat> TimToady was at Collision in Las Vegas

[22:24] <lizmat> as was pmichaud 

[22:24] <eli-se> timotimotoady

[22:24] <lizmat> https://gist.github.com/lizmat/c7f53fa206da900c2b42   # status update @?INC related work

[22:24] *** BenGoldberg joined
[22:25] <lizmat> on that note, I wish all of #perl6 a good night!

[22:25] <lizmat> &

[22:26] <eli-se> goodbye!

[22:26] *** tony-o_ is now known as tony-o

[22:26] <timotimo> lizmat: are the : in the "include spec format" thingie new or outdated? i thought we used # in there?

[22:26] <lizmat> yes, they are outdated...

[22:27] <lizmat> fixing

[22:27] <timotimo> thank you :)

[22:29] <lizmat> fixed (I think)

[22:30] <lizmat> afk&

[22:34] <tony-o> m: use MONKEY-TYPING; augment class IO::Handle { augment method read(IO::Handle:D: Int(Cool:D) $bytes) { die $bytes; }; }; $*IN.read(1); die "dye";

[22:34] <camelia> rakudo-moar 536c26: OUTPUT«dye␤  in block <unit> at /tmp/gjyby1osNF:1␤␤»

[22:35] *** lizmat left
[22:36] <TimToady> timotimo: other than Collision, I split off Empty from Nil, and fixed warnings to include file and line number

[22:36] *** cognominal left
[22:36] *** lizmat joined
[22:37] *** cognominal joined
[22:37] *** eli-se left
[22:38] <TimToady> other than that, mostly de-LTAing messages

[22:44] *** andreoss joined
[22:46] *** muraiki joined
[22:47] *** firecat left
[22:48] <timotimo> right, good :)

[22:49] <dalek> roast: 74bedac | (Justin DeVuyst)++ | S05-grammar/inheritance.t:

[22:49] <dalek> roast: Tests for RT #77350.

[22:49] <dalek> roast: review: https://github.com/perl6/roast/commit/74bedacb78

[22:49] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=77350

[22:54] <jdv79> idk if that's really a bug but now there's a todo for it in any case

[23:00] <TimToady> that's weird, my laptop, with 100% charge, nothing making heat, just turned off, bang (well, not with any real sound)

[23:00] *** kurahaupo left
[23:01] <jdv79> cosmic rays

[23:01] <TimToady> you'd think it'd have a more temperamental crash if that were the case

[23:01] <andreoss> m: my (Any, Any, $c) = 1...3; say $c

[23:01] <camelia> rakudo-moar 536c26: OUTPUT«3␤»

[23:01] <TimToady> unless the cosmic ray in question hit the power switch itself...

[23:02] <jdv79> the spec says .assuming is on all Callables but Block seems to lack it - is that correct?

[23:02] <tony-o> TimToady: i had a lenovo that would do that because it thought the cpu fan was failing

[23:03] <TimToady> so have I, but then it usually starts carping about FAN FAILURE or so on bootup

[23:05] <TimToady> starting a compile, and the fan revs up okay

[23:09] <meisl> jdv79: I stumbled over this as well, and ended up writing my own currying lib

[23:13] *** Isp-sec left
[23:15] *** raiph joined
[23:20] *** agentzh_ joined
[23:24] *** vytas joined
[23:24] * timotimo procrastinates blog post writing by implementing a possibly worthless optimization ..

[23:25] *** cognominal left
[23:25] *** ][Sno][ joined
[23:26] <tony-o> timotimo: i think i found another symptom of that IO::Socket/Async thing where it can't read from the handle

[23:27] *** spookah joined
[23:28] *** gfldex left
[23:28] <timotimo> uh-oh

[23:28] <tony-o> https://github.com/tony-o/perl6-event-emitter-interprocess/blob/master/lib/Event/Emitter/Inter-Process.pm6#L49

[23:29] <tony-o> that will consistently read if the process is the main process but if i use Proc::Async and write to the STDIN of the sub process, it will only read $*IN maybe 1 in 100 times

[23:29] <tony-o> excuse the monkey typing, i was experimenting with stuff but wanted to upload it to show 

[23:30] *** airdisa joined
[23:31] <timotimo> oof, looks like a bit much to look at at once

[23:31] <timotimo> can you explain to me how to read the output of cachegrind?

[23:32] <tony-o> cachegrind ?

[23:32] <timotimo> i'm used to it only showing a single line regarding "I", which i learned was "instruction count"

[23:32] <timotimo> but now i have I refs, I1 misses, LLi misses, D refs, D1 misses, LLd misses, LL refs and LL misses

[23:33] <tony-o> beyond me :)

[23:34] <timotimo> OK

[23:34] <timotimo> well, the numbers went down because of my optimization, so that's probably good

[23:38] <timotimo> I refs went from 6,918,462,233 to 6,917,415,091

[23:38] *** muraiki left
[23:38] <timotimo> while I1 misses went from 82,161,276 to 80,275,325

[23:39] <timotimo> which is a much more drastic change, and i suppose misses are much more interesting than refs are

[23:42] <tony-o> i wonder if tux's csv times will go down now

[23:48] *** larion joined
[23:51] *** cygx left
