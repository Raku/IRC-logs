[00:16] *** khw left
[00:32] <tadzik> oo :0

[00:32] <tadzik> that'll help :)

[00:36] <hoelzro> tadzik: =)

[00:37] <hoelzro> I think you still have to enable the repo in Travis

[00:39] <tadzik> hm

[00:40] <hoelzro> tadzik: I can walk you through it if you need help

[00:43] *** raiph left
[00:49] *** atroxaper joined
[00:53] *** atroxaper left
[01:05] *** amurf joined
[01:09] *** amurf left
[01:10] *** Ben_Goldberg joined
[01:19] *** rmgk_ joined
[01:19] *** rmgk_ is now known as rmgk

[01:20] *** apejens left
[01:20] *** apejens joined
[01:23] *** skids joined
[01:25] *** zakharyas joined
[01:25] <skids> .botsnack

[01:25] <yoleaux> :D

[01:25] <synbot6> om nom nom

[01:29] <tadzik> hoelzro: that'd be awesome, I'll try to get in touch with you tomorrow about it

[01:29] <tadzik> now etoosleepy

[01:34] *** zakharyas left
[01:48] *** BenGoldberg joined
[01:51] *** Ben_Goldberg left
[02:06] *** noganex_ joined
[02:12] <hoelzro> ok, sounds good! I may be busy (visiting in-laws) but I might get up early and sneak away with my laptop =P

[02:15] *** jack_rabbit joined
[02:28] *** aborazmeh joined
[02:28] *** aborazmeh left
[02:28] *** aborazmeh joined
[02:29] *** jack_rabbit left
[02:37] *** jack_rabbit joined
[02:37] *** atroxaper joined
[02:42] *** atroxaper left
[02:44] *** vendethiel left
[02:45] *** nys left
[02:52] *** apejens left
[02:52] *** apejens joined
[02:54] *** amurf joined
[02:58] *** amurf left
[03:07] *** yqt left
[03:13] *** bin_005 left
[03:13] *** bin_005_k joined
[03:21] *** Sqirrel left
[03:23] *** Sqirrel joined
[03:30] *** raiph joined
[03:31] *** konsolebox left
[03:32] *** konsolebox joined
[03:32] *** khw joined
[03:33] *** gfldex left
[03:38] *** atroxaper joined
[03:42] *** atroxaper left
[03:49] *** raiph left
[03:53] *** llfourn joined
[03:58] *** llfourn left
[03:59] *** raiph joined
[04:08] *** Sqirrel left
[04:10] *** Sqirrel joined
[04:28] *** raiph left
[04:51] *** Sqirrel left
[04:52] *** Sqirrel joined
[04:57] *** aborazmeh left
[05:05] *** khw left
[05:15] *** llfourn joined
[05:24] *** atroxaper joined
[05:28] *** atroxaper left
[05:36] *** llfourn left
[05:38] *** Ben_Goldberg joined
[05:40] *** BenGoldberg left
[05:53] *** rurban joined
[06:15] *** konsolebox left
[06:21] *** aborazmeh joined
[06:21] *** aborazmeh left
[06:21] *** aborazmeh joined
[06:29] *** konsolebox joined
[06:30] *** Ben_Goldberg left
[06:32] *** amurf joined
[06:32] *** smls joined
[06:33] <smls> m: my @a = ^10;  dd @a / 2;  dd @a div 2

[06:33] <camelia> rakudo-moar 4b5e19: OUTPUT«5.0␤Cannot call infix:<div>(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at /tmp/stDkOpuAmu:1␤␤»

[06:33] <smls>  shouldn't div coerce its arguments like the other numeric ops do?

[06:35] <smls> m: my @a = ^10;  dd @a % 2;   # even its little brother 'mod' does... :)

[06:35] <camelia> rakudo-moar 4b5e19: OUTPUT«0␤»

[06:36] *** amurf left
[06:37] *** AlexDaniel left
[06:40] <smls> Hm, looks like it's according to spec: http://design.perl6.org/S03.html#line_785

[06:40] <smls> But why?

[06:44] <smls> instead of having the two sigs: (Int,   Int   --> Int) and (int, int --> int)

[06:44] <smls> couldn't it be given these:     (Int(), Int() --> Int) and (int, int --> int)

[06:44] <smls> ...without loosing any functionality?

[06:46] *** vendethiel joined
[07:09] *** vendethiel left
[07:14] <skids> I'm guessing it has to do with the return type restriction.  It would be good if the reason for that were explained in the design docs.

[07:16] <smls> Maybe it's from a time when coercive parameters didn't work like they do today?

[07:21] *** aborazmeh left
[07:22] <skids> well, so is infix %, and it is different.

[07:29] *** RabidGravy joined
[07:29] *** domidumont joined
[07:29] *** domidumont left
[07:30] *** domidumont joined
[07:32] *** araujo left
[07:33] *** araujo joined
[07:34] *** domidumont left
[07:35] *** domidumont joined
[07:36] *** vendethiel joined
[07:38] *** darutoko joined
[07:42] *** domidumont left
[07:44] <dalek> Inline-Perl5: 871858d | (Stefan Seifert)++ | / (2 files):

[07:44] <dalek> Inline-Perl5: Only create Perl 6 packages for the first interpreter

[07:44] <dalek> Inline-Perl5: 

[07:44] <dalek> Inline-Perl5: Inline::Perl5::require creates a Perl 6 wrapper package for loaded Perl5

[07:44] <dalek> Inline-Perl5: modules. use Foo:from<Perl5> uses the first created interpreter: $default_perl5.

[07:44] <dalek> Inline-Perl5: When using multiple Perl 5 interpreters, only this $default_perl5 should

[07:44] <dalek> Inline-Perl5: create wrapper packages to avoid confusion and conflicts when the same

[07:44] <dalek> Inline-Perl5: package would be created multiple times.

[07:44] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/871858dfa2

[07:44] <dalek> Inline-Perl5: 07dd4fb | (Stefan Seifert)++ | / (2 files):

[07:44] <dalek> Inline-Perl5: Allow use'ing a P5 module more than once on the same interpreter

[07:44] <dalek> Inline-Perl5: 

[07:44] <dalek> Inline-Perl5: When loading a P5 module with .require, .use or use :from<Perl5> we

[07:44] <dalek> Inline-Perl5: create a P6 wrapper package for seamless integration. Obviously we

[07:44] <dalek> Inline-Perl5: should do this only on the first load. Perl allows loading modules

[07:44] <dalek> Inline-Perl5: multiple times and we should stick to that.

[07:44] <dalek> Inline-Perl5: 

[07:44] <dalek> Inline-Perl5: Fix GH #27.

[07:44] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/07dd4fb750

[07:51] *** skids left
[07:53] *** [Sno] joined
[08:02] *** rindolf joined
[08:11] *** Alina-malina joined
[08:16] *** isBEKaml joined
[08:19] *** vendethiel left
[08:29] *** vendethiel joined
[08:52] *** isBEKaml left
[08:56] *** telex left
[08:58] *** telex joined
[09:04] *** TEttinger left
[09:13] *** rindolf left
[09:20] *** konsolebox left
[09:48] *** rindolf joined
[09:50] *** bjz left
[09:50] *** bjz joined
[09:51] *** spider-mario joined
[09:55] *** diana_olhovik joined
[10:00] *** jaffa4 joined
[10:00] <jaffa4> hi all

[10:00] <jaffa4> How can I compile a Perl6 code into moarvm bytecode?

[10:02] <nine> jaffa4: I don't know, but Panda does it on installation. Maybe have a look at that?

[10:03] *** RabidGravy left
[10:05] <masak> there was a time when I used precompilation a lot, because it made a huge difference for startup.

[10:05] <masak> nowadays, I prefer to take the startup hit, because it makes it easier to do development if I don't precompile.

[10:09] *** amurf joined
[10:13] *** amurf left
[10:28] *** geekosaur joined
[10:32] *** beastd joined
[10:33] *** rindolf left
[10:42] *** Sqirrel left
[11:05] *** cognominal joined
[11:14] <masak> thanks to conversations with vendethiel++ on our clandestine macros channel, I've come to realize that much of advanced macro constructions comes down to being able to synthetically creating variables, and then having those variables resolve in the right/Least Surprise way in the ASTs they participate in.

[11:15] <masak> users want something a little bit contradictory there: (a) hygiene, and (b) convenience.

[11:15] <vendethiel> (clandestine but logged channel :-P)

[11:16] <masak> it's top secret because not many people are all that interested :P

[11:16] <vendethiel> .oO( and we're not all that interesting )

[11:16] *** Psyche^ joined
[11:16] <masak> I dunno, I find our conversations riveting.

[11:17] <vendethiel> at least I learned a word :)

[11:29] <jaffa4> masak, riveting.. where did you learn that word?

[11:30] <masak> I'm a voracious reader. guess I picked it up through reading.

[11:34] *** yqt joined
[11:40] *** domidumont joined
[11:59] *** amurf joined
[12:00] *** rindolf joined
[12:03] *** amurf left
[12:07] *** JimmyZ_ joined
[12:10] *** gfldex joined
[12:19] *** mr-foobar left
[12:24] *** mr-foobar joined
[12:25] *** BenGoldberg joined
[12:30] *** BenGoldberg left
[12:45] *** vendethiel left
[12:59] *** yqt left
[12:59] *** tinyblak joined
[13:09] *** nys joined
[13:16] *** tinyblak_ joined
[13:18] *** JimmyZ__ joined
[13:19] *** raiph joined
[13:19] *** tinyblak left
[13:20] *** JimmyZ__ left
[13:20] *** JimmyZ__ joined
[13:21] *** JimmyZ_ left
[13:22] *** xfix joined
[13:26] *** khw joined
[13:26] *** vendethiel joined
[13:41] <masak> today's autopun spotting: https://twitter.com/SwedishCanary/status/618266555218984960

[13:41] <masak> (this is the kind of autopun that parasitizes an existing pop culture quote)

[13:42] <masak> (and yes, I've seen the xkcd on Tautology Club, so linking it here would be way redundant)

[13:44] *** bin_005_k left
[13:51] <jaffa4> Cannot find method 'AT-KEY': no method cache and no .^find_method

[13:51] <jaffa4> Is this a bug?

[13:53] *** FROGGS_ joined
[13:53] <jnthn> Not automatically.

[13:53] <yoleaux> 18 Jul 2015 22:12Z <japhb> jnthn: Happened to see the link to your S17 supply/whenever proposal.  I like it in general -- which is to say, I'd probably need to code a bit with it to find the holes if any.

[13:54] <jnthn> Depends how you ran into it.

[13:54] <jnthn> It's not a likely issue to run into, though.

[13:54] <jnthn> But just showing an error is too little info.

[13:55] <jaffa4> caused by line my $f = Perl6::Tracer.new();

[13:55] <jnthn> And what is Perl6::Tracer?

[13:55] <jaffa4> a class

[13:55] <jnthn> You don't say!

[13:55] <jaffa4> module you can install it

[13:56] <jnthn> Ah, it's on modules.perl6.org?

[13:56] <jaffa4> yes

[13:56] <hoelzro> good *, Perl 6

[13:57] <jnthn> Ah, but one of yours... 

[13:57] *** FROGGS left
[13:57] <jaffa4> It cointains tracer.p6

[13:57] <jnthn> I guess you're playing with compiler internals, then.

[13:57] <jaffa4> but it works if I use -I in command line instead of installing the module

[13:59] <jnthn> Well, there's no way I've got time to golf down a whole module and its dependencies.

[14:01] <masak> jaffa4: this is your signal to golf the code, to make it easier for people to find what's wrong. :)

[14:01] <masak> again, just to recap, "golf" means "remove anything non-essential to exposing the problem"

[14:02] <jaffa4> firsdt problem there is no decent error message

[14:02] <jaffa4> first...

[14:02] <jaffa4> Do you agree?

[14:02] <masak> depends what's wrong, I'd say.

[14:03] <jnthn> jaffa4: You're doing stuff with the internals of the compiler.

[14:03] <masak> that it can't find a method is clear. in that sense the error message is decent.

[14:03] <masak> question is why.

[14:03] *** cognominal left
[14:03] <jnthn> We spend a lot of time on user experience for users doing normal things. You're not doing a normal thing. You shouldn't expect hand-holding.

[14:04] *** sjn_phone joined
[14:06] <masak> jaffa4: if you genuinely think that Rakudo is doing something wrong in this case, the burden of proof is on you in the form of a golfed bit of code.

[14:07] <jaffa4> ok.. if I say new... if it failed inside new, I should see that linie 

[14:07] <jaffa4> There is no such line

[14:07] <jaffa4> i nthe error message

[14:07] <jaffa4> so it fails in rakudo when doing new

[14:08] <masak> as far as I'm concerned, you're jumping to conclusions.

[14:08] <masak> the only thing that matters at this point is the golfed code.

[14:08] <jaffa4> or if it fails inside new but the rakudo does not show the line number inside new , that is like indecent error message

[14:08] <masak> jaffa4: yes, but we *don't know*.

[14:08] <masak> there is not enough data.

[14:09] *** Colonel-X joined
[14:09] <jaffa4> iit is all based on what I see

[14:09] <masak> fantastic.

[14:09] <mst> jaffa4: please stop guessing randomly and show complete code that illustrates the problem, plus a mock up of what you think should happen

[14:10] <masak> jaffa4: what mst said.

[14:10] <mst> jaffa4: deleting all of the unrelated code will not only make it much easier for other people to look at but will prove that that code isn't the problem

[14:10] * masak finds it's *really* hard to not take an elitist stance and just go "listen to your elders" when someone is behaving unscientifically wrt bug reports

[14:12] <Colonel-X> Can I use in my regexes some rules defined in STD ?

[14:12] <masak> Colonel-X: yes, if you manage to inherit from STD.

[14:12] <jaffa4> https://gist.github.com/jaffa4/5728e29b867807c3cd41 , see this is the line number

[14:12] <masak> Colonel-X: class:method::grammar:rule

[14:13] <mst> jaffa4: yes, and now keep deleting code until only the problem remains

[14:13] <mst> jaffa4: you're looking for a -minimum- reproduction case here

[14:13] <Colonel-X> masak, thanks

[14:14] <mst> jaffa4: i.e. if I delete any one line from the repro case, it should stop failing

[14:14] <masak> jaffa4: three people asked you to please golf the code, and you paste the un-golfed code. also, the line number is clearly there.

[14:15] <masak> it's in your script file, line 51.

[14:15] <mst> right. I'm not even sure what's supposed to be wrong about that output

[14:15] <mst> looks like Perl6::Tracer is dying during its constructor

[14:15] <mst> which indicates ::Tracer is buggy

[14:15] <mst> but is otherwise uninteresting

[14:16] <masak> well, the interesting thing is that we're getting the line-and-file outside of the constructor.

[14:16] <mst> oh, that's not normal?

[14:16] <masak> and the error message is about `AT-KEY`, which doesn't seem to figure in the script code at all.

[14:16] <jnthn> Well, soemthings up

[14:16] <masak> so, yeah, this needs golfing.

[14:16] <masak> by jaffa4

[14:16] <mst> right, ok

[14:16] <masak> jaffa4: by you.

[14:16] <masak> jaffa4: please golf it.

[14:16] <jnthn> But in the module chain it's doing a use Perl6::Grammar:from<nqp>

[14:17] <mst> jaffa4: have you started deleting code yet?

[14:17] <mst> jaffa4: basically, your responsibility is to enact the process in http://shadow.cat/blog/matt-s-trout/sherlock-holmes/

[14:17] *** domidumont left
[14:17] <mst> jaffa4: then #perl6 can go to work on the faulty unit once they know what the fault actually is

[14:17] <masak> jnthn: yes, that's also significant. in fact, I'd mentally promote that to the biggest clue.

[14:18] *** lucasb joined
[14:19] *** JimmyZ__ left
[14:21] <jaffa4> https://gist.github.com/jaffa4/94c0325bddf927294142

[14:24] <mst> right, so now you need to delete code from Perl6::Tracer

[14:24] <mst> until you can include the module code in the gist too

[14:26] <lucasb> So, the syntax "has $foo" will continue to be valid? Any plans for killing it in the future?

[14:29] <masak> lucasb: no plans; it's a sop.

[14:30] <lucasb> sop?

[14:30] <masak> lucasb: if -- like me -- you dislike it, then don't use it.

[14:30] <masak> lucasb: it's a sop to people who don't like twigils.

[14:30] *** shlomif joined
[14:31] <lucasb> masak: yeah, I think I don't like it; thanks for the answer

[14:32] *** diana_olhovik left
[14:32] <lucasb> but one can clearly see that it will cause confusion :)

[14:33] <jnthn> lucasb: No worse than lack of twigils cause in C++/Java/C#... :)

[14:33] <mst> jnthn: worse. because I'll open a file and assume the lack of a twigil means it's a lexical then go hunting for it in the wrong place

[14:33] <jaffa4> mst: I do not get his error message if the class is not precompiled

[14:33] <mst> jaffa4: so find the smallest pre-compilable class that gives an error

[14:33] *** JimmyZ_ joined
[14:34] <jaffa4> How can I precompile what is the command?

[14:34] *** rindolf left
[14:35] <jnthn> mst: Point. Though I guess we can look to p5-mop to know whether that's actually a pain point in reality...

[14:35] <jnthn> mst: Provided my memory of p5 mop's latest incarnation is accurate, anyways... :)

[14:36] <mst> jnthn: I dunno if the latest one involves twigils, the last one that did was one of the "this is obviously going to fail because it's fighting the VM instead of using it" ones

[14:37] <mst> so, since I'd already told stevan how and why it wasn't going to work I never bothered trying to use it :)

[14:37] <mst> notable though - all my personal attempts at binding lexicals to object internals have used '$_foo'

[14:37] <mst> because mix and match scoping really annoys me

[14:38] <mst> jnthn: at the very least, I think there should be some sort of 'opt in to namespace collisons' line, "no strict 'scoping';" or something, that people can spot, to realise the sop is in use in the class

[14:38] <mst> but that might stop it being an effective sop

[14:38] *** shlomif left
[14:39] <jnthn> mst: I thought the latest one didn't have twigils for the very reason you noted :)

[14:39] <mst> and I think it's clear that I really like twigils compared to mixed namespaces, so clearly I'm partisan

[14:40] <jnthn> I've a strong preference for them too, fwiw. And as a compiler writer I'm always happy to have less code to maintain. But I don't think those two give me a reason to advocate getting rid of the feature...

[14:40] <mst> yes, probably, the latest one is still in pieces on the floor though AFAIK

[14:47] <jaffa4> if I delete moarvm file, it works

[14:47] <jaffa4> Is it not enough for you?

[14:49] <ugexe> is it enough for someone to tell you whats wrong? no

[14:50] <ugexe> you can compile code with perl6 --target=mbc --out=lib/whatever.pm6.moarvm lib/whatever.pm6

[14:51] <mst> jaffa4: you need to produce the smallest thing that when precompiled breaks

[14:53] *** Colonel-X left
[14:53] <hoelzro> nine: I've been reporting a lot of Inline::Perl5 issues lately (with more to come!); let me know if you want some help with those

[14:54] <hoelzro> I'm just trying to get things into GH issues first so they're publicly visible, and others can help if they choose

[14:54] <hoelzro> I don't expect you to do it all =)

[15:03] <jaffa4> msi: https://gist.github.com/jaffa4/94c0325bddf927294142

[15:04] <jaffa4> it happens when use Perl6::Parsing

[15:04] <jaffa4> and the code is compiled

[15:07] *** cognominal joined
[15:09] *** rindolf joined
[15:10] *** inokenty left
[15:11] <mst> jnthn: is the above any better?

[15:14] *** beastd left
[15:15] <jnthn> mst: Well, Perl6::Parsing is also one of jaffa4's modules...it's not entirely to me clear if you even need an intermediate module to trigger the issue at the moment.

[15:15] <jnthn> *clear to me

[15:15] <mst> ah

[15:15] <jnthn> So it's helped show where the problem *isn't* to a decent degree.

[15:16] <mst> jaffa4: can you please try and create a *small* .pm that reproduces it, rather than requiring modules you wrote that people don't necessarily know the internals of?

[15:16] <jnthn> But mostly pointed the finger a step down the dependency chain.

[15:21] <vendethiel> okay, I'm going to through a feature idea/request, because it's been a great one in Scala and al

[15:21] <jaffa4> Missing or wrong version of dependency ? What does it mean?

[15:21] <vendethiel> being able to "use alias". say `use Foo::Bar::{Baz => BarBaz};` <- really, I just want to be able to "import a name"

[15:22] <jaffa4> D has that feature too

[15:22] <ugexe> it means you are missing a dependency. either your build order is incorrect or you are not including the path via -I

[15:23] <ugexe> leftover build files in your project directory could do that as well

[15:25] *** atroxaper joined
[15:26] *** inokenty joined
[15:28] <jaffa4> ugexe:  the file is not missing

[15:29] *** atroxaper left
[15:32] <ugexe> thats not what is meant. can the interpreter find it? if it does find it, is it finding one that was correctly compiled (including build order)?

[15:32] <ugexe> is it an older version of rakudo?

[15:33] <ugexe> i think RAKUDO_MODULE_DEBUG=1 may tell you the file being loaded

[15:36] *** xfix left
[15:36] *** amurf joined
[15:36] <jaffa4> figured out all modules had to be recompiled...

[15:37] <jaffa4> not just one I changed

[15:37] * araujo read "rumors" around here that we might get a beta for Sept ... for what?, rakudo?

[15:37] <vendethiel> "could not find A::B in ...." <- where did I "use A::B", please , rakudo?

[15:38] <jaffa4> jnthn:  here it is https://gist.github.com/jaffa4/94c0325bddf927294142

[15:38] <ugexe> rakudo now gives errors you will make in the future

[15:40] <jnthn> jaffa4: Hmmm

[15:40] *** RabidGravy joined
[15:40] <jnthn> jaffa4: I suspect it's about pulling in NQP code

[15:41] *** Ven joined
[15:41] <jaffa4> in compiled code

[15:41] <Ven> m: class Actions{ method outer-expr:expr($/) { } }; # <- that's a valid rule name, but not a valid method one?

[15:41] <camelia> rakudo-moar 4b5e19: OUTPUT«5===SORRY!5=== Error while compiling /tmp/MMtun8cVXn␤Colon pair value '$/' too complex to use in name␤at /tmp/MMtun8cVXn:1␤------> 3Actions{ method outer-expr:expr($/) { } 7⏏5}; # <- that's a valid rule name, but no␤»

[15:41] *** amurf left
[15:41] <jnthn> jaffa4: If you rename your modules to Perl6X::Parsing and Perl6X::Tracer, do things get better?

[15:41] <Ven> std: class Actions{ method outer-expr:expr($/) { } }; # just trying...

[15:41] <camelia> std 28329a7: OUTPUT«ok 00:00 139m␤»

[15:41] <Ven> Right, seems to be a bug in rakudo then..?

[15:42] <Ven> that's probably already been reported, though.

[15:42] <jnthn> Ven: Not a bug, you need whitespace

[15:42] <Ven> jnthn: how does std do it?

[15:42] <jnthn> Ven: It's taking your ($/) as the value of the colonpair

[15:42] <jnthn> Ven: Because it only parses

[15:43] <jnthn> Ven: Or maybe it cheats and stringifies and actually creates a method literally called 'outer-expr:expr($/)' :)

[15:43] <Ven> m: class Actions{ method outer-expr:expr ($/) { } }; # "need whitespace"?

[15:43] <camelia> rakudo-moar 4b5e19: ( no output )

[15:43] <Ven> uh, that doesn't work on my local rakudo

[15:43] <jnthn> std: class Actions{ method outer-expr:expr($a) { $a } }

[15:43] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Variable $a is not predeclared at /tmp/2peN3NspoM line 1:␤------> 3s Actions{ method outer-expr:expr($a) { 7⏏5$a } }␤Check failed␤FAILED 00:00 139m␤»

[15:44] <jnthn> That's how you can see STD is parsing it the same way as Rakudo

[15:44] *** skids joined
[15:45] <Ven> indeed. thanks

[15:45] <jaffa4> jnthn:  no

[15:47] <jnthn> jaffa4: OK, so you can remove everything from Perl6::Parsing except the two two lines and still have the bug?

[15:51] <skids> jnthn: I left some comments on your S17 gist, not that I've used the async API much yet.

[15:51] <jaffa4> jnthn:  correction.. the problem disappears then

[15:51] <vendethiel> grrr. perl6 was showing the next one as an error

[15:51] <Ven> I mean, rakudo.

[15:52] *** konsolebox joined
[15:52] <jaffa4> jnthn:  ao renaming to Perl6X helped

[15:52] *** konsolebox left
[15:52] <Ven> std: class Actions{ method outer-expr:bad($/) {}; method outer-expr:expr ($/) { } };

[15:52] <camelia> std 28329a7: OUTPUT«ok 00:00 141m␤»

[15:52] <Ven> m: class Actions{ method outer-expr:bad($/) {}; method outer-expr:expr ($/) { } };

[15:52] <camelia> rakudo-moar 4b5e19: OUTPUT«5===SORRY!5=== Error while compiling /tmp/cHZZgXHpOr␤Colon pair value '$/' too complex to use in name␤at /tmp/cHZZgXHpOr:1␤------> 3ss Actions{ method outer-expr:bad($/) {}7⏏5; method outer-expr:expr ($/) { } };␤»

[15:52] <Ven> ^ if you try that in a multiline file, it'll error out on ":expr ($/)", making it hard to debug

[15:53] <jnthn> jaffa4: aha, OK. Then it's probably an issue involving namespaces shared between NQP code and Perl 6 code.

[15:53] *** BenGoldberg joined
[15:54] <jaffa4> jnthn:  how should I work?  Is this a bug?

[15:55] <masak> araujo: no, a birthday beta for *Perl 6*.

[15:55] <masak> araujo: and a 6.0 for Christmas.

[15:55] <jnthn> jaffa4: I suggest you don't use the namespace "Perl6::" in your modules.

[15:56] <jnthn> jaffa4: It may be fixable, but it seems that "use a module from NQP" is a necesary ingredient to see this

[15:57] <timotimo> could very well be that having an nqp module with Perl6:: installs a "Perl6" object in the global namespace that doesn't understand methods

[15:57] <timotimo> and later adding another class to Perl6:: and then trying to get it back out could go asplode

[15:57] <jnthn> I suspect it's that and also that the linking logic doesn't know how to merge NQP namespaces with Perl 6 ones

[15:57] <timotimo> mhm

[15:58] <timotimo> it's not exactly a common thing to want to have

[15:58] <jnthn> *nod*

[15:59] <jnthn> Generally, the only reason to do these things is because we didn't setttle on any standard API for them yet

[16:01] <jaffa4> jnthn: being able to import under another name could help

[16:02] *** zakharyas joined
[16:08] *** tinyblak_ left
[16:14] *** beastd joined
[16:15] <araujo> masak, nice :)

[16:15] <ugexe> at first thought, importing under another name could be a cool thing 

[16:16] *** spider-mario left
[16:17] <ugexe> should Proc::Async give a better error on jvm other than 'Cannot find symbol &Async'?

[16:17] *** araujo left
[16:18] <timotimo> it might be nice to get "cannot find &async inside Proc" there

[16:18] <jnthn> We could install a stub there that ways it's NYI

[16:19] *** Ven left
[16:22] <jaffa4> jnthn:  so are you planning to do something about it?

[16:23] *** sjn_phone_ joined
[16:23] <jnthn> jaffa4: Not right now. I suggest picking a different namespace; I'm not sure Perl6:: is a wise choice anyway.

[16:23] <jaffa4> jnthn: what is the wise choice?

[16:23] *** sjn_phone_ left
[16:24] <jnthn> jaffa4: Given what you're writing is heavily tied to Rakudo's internals, you may want to pick a name along those lines

[16:24] * masak .oO( "you've got to learn how to find things out for yourself!" --- "...how do I do that?" -- ":/" )

[16:24] <masak> :P

[16:25] <ugexe> that would certainly help. 'signal' is another one where i've needed to get around missing symbols between VMs

[16:25] <jnthn> jaffa4: I called the Rakudo debugger frontend Rakudo::Debugger::UI::CommandLine, for example

[16:25] <ugexe> i.e. sub signal-jvm($) { Supply.new }; my $signal-handler = &::("signal") ~~ Failure ?? &::("signal-jvm") !! &::("signal"); my $sig-resize = ::("Signal::SIGWINCH"); $signal-handler.($sig-resize).act:

[16:25] *** Alina-malina left
[16:25] <ugexe> if i want to use signal code if its running under moar, or not use signal code on jvm

[16:25] *** Alina-malina joined
[16:26] *** zakharyas left
[16:26] *** sjn_phone left
[16:28] <jaffa4> jnthn: will Rakudo::Perl6::Parse wprk?

[16:30] *** Alina-malina left
[16:31] <jnthn> jaffa4: Should do

[16:33] <JimmyZ_> Perl6X:: 😊

[16:37] <ugexe> or dont separate the namespaces at all: Perl6Parser

[16:39] *** Alina-malina joined
[16:41] * jnthn away for a bit

[16:43] * geekosaur first wonders if the emoticon is part of the namespace, then wonders if exception namespace should be 😭

[16:44] *** jack_rabbit left
[16:45] <geekosaur> (there is actually some seriousness behind that last part: I wonder about the wisdom of commandeering X)

[16:46] <BenGoldberg> Maybe the exception namespace should be 💩

[16:47] <JimmyZ_> Perl6 eXtend

[16:47] *** xinming_ joined
[16:48] *** espadrine_ joined
[16:50] *** xinming left
[17:01] <skids> geekosaur: You'd rather "class X" was available to run afoul of infix X?

[17:05] <skids> .oO(ALL YOUR ALLCAPS ARE BELONG TO 6)

[17:08] *** BenGoldberg left
[17:10] *** BenGoldberg joined
[17:13] *** atroxaper joined
[17:17] *** atroxaper left
[17:23] <timotimo> skids: but a class only appears in term position, not infix position :)

[17:24] <skids> timotimo: In well formed code.  But if your code is well formed, you won't be confused by it :-)

[17:24] <timotimo> fair enough

[17:36] *** domidumont joined
[17:41] *** jaffa4 left
[17:51] *** domidumont left
[18:01] *** AlexDaniel joined
[18:27] <lizmat> good *, #perl6!

[18:28] * lizmat notices CPU / wallclock time of spectest went up by ~10% sometime in the past week

[18:28] <masak> \o, lizmat 

[18:29] <lizmat> masak o/

[18:30] <lizmat> before: Files=1024, Tests=45592, 189 wallclock secs (11.67 usr  3.66 sys + 1077.30 cusr 82.90 csys = 1175.53 CPU)

[18:30] <lizmat> now: Files=1025, Tests=45628, 211 wallclock secs (12.08 usr  3.91 sys + 1226.55 cusr 101.71 csys = 1344.25 CPU)

[18:30] *** domidumont joined
[18:31] * masak hopes someone has the tuits to bisect that slowdown

[18:32] <lizmat> there was one NQP bump in that period, I guess that would need to be checked first

[18:33] <masak> sounds reasonable.

[18:34] <lizmat> hmmm... there were actually 2 bumps ...  one for LTM fixes

[18:34] <masak> that sounds like a very likely suspect.

[18:35] <lizmat> hmmm... raw startup seems to have bumped similarly

[18:35] <lizmat> .12 now on my machine, it used to be <  .1 not too long ago  :-(

[18:45] <lizmat> can't find any obvious reasons that would explain the increase in startup time

[18:46] <moritz> \o

[18:46] * moritz back from a weekend in Bruxelles

[18:47] <timotimo> lizmat: potentially the "add &?ROUTINE to every routine" change made a big impact

[18:47] <lizmat> ah...  hmm....

[18:47] *** spider-mario joined
[18:48] <timotimo> but 10% seems excessive for that

[18:55] * lizmat is trying spectest without 3db9326bda8d843eb2e7ad

[18:55] <masak> moritz: welcome back!

[18:55] <masak> moritz: how was Bruxelles?

[18:55] <masak> or, um, "comment etait Bruxelles?", I guess.

[18:55] *** yqt joined
[19:00] <lizmat> "hoe was het in Brussel?"

[19:00] *** yqt left
[19:00] <masak> haha, it's like Swedish but spelled funny :P

[19:00] <masak> "hur var det i Bryssel?"

[19:01] <lizmat> yeah...  just like Dutch, but spelled funny  :-)

[19:01] *** domidumont left
[19:01] *** atroxaper joined
[19:01] <masak> the grass is always spelled funny on the other side, I guess.

[19:01] <lizmat> yeah...

[19:02] <lizmat> one of my funniest moments in Sweden was seeing Holy Grail in a cinema

[19:02] <lizmat> with Swedish subtitles in the Møøse section

[19:02] *** raiph left
[19:02] *** telex left
[19:02] <masak> I'm pretty sure I've seen such subtitles on TV at some point.

[19:03] <masak> similarly, I own a copy of "Harrius Potter et Philosophi Lapis"

[19:03] <masak> sometimes I go looking for the spells they use, to see how they were translated from fake Latin into Latin :P

[19:04] *** telex joined
[19:05] *** atroxaper left
[19:08] *** yqt joined
[19:09] *** espadrine_ left
[19:09] <japhb> masak: Does Hermione's correction of the pronunciation of Wingardium Leviosa still make sense?

[19:09] *** tinyblak joined
[19:10] *** dustinm` joined
[19:12] <masak> japhb: do you know offhand which chapter it's in?

[19:13] <moritz> masak: nice; not as hot as here :-)

[19:13] <masak> japhb: (I remember it being in the movie, but don't remember if it's in the book, or if it's actual dialogue in the book)

[19:13] *** amurf joined
[19:14] *** tinyblak left
[19:15] <lizmat> afk for a bit&

[19:18] *** amurf left
[19:19] <jnthn> lizmat: The main slowdown was the LTM thing, I'm afraid

[19:19] <jnthn> lizmat: I don't have much idea what to do about that; we had the wrong semantics before.

[19:19] <jnthn> lizmat: So we don't really want to undo it.

[19:19] <jnthn> lizmat: I was hoping Parsing Wizard Larry may have an idea :)

[19:20] <masak> jnthn: that's fine for the longer spectest time. but startup was slowed down 1000% :/

[19:20] <jnthn> masak: um...what?

[19:20] <jnthn> That doesn't match what I see at all

[19:20] <masak> um, sorry. misread what lizmat wrote.

[19:20] <jnthn> masak: .1 vs .12 is not 1000% :P

[19:20] <masak> from < .1 to .12, which at least seems significant

[19:21] <jnthn> Stop with the category theory, and go redo arithmetic :P

[19:21] <masak> yeah, I fail at reading, apparently

[19:21] <jnthn> Yeah, I wonder if it's because our NFAs got bigger

[19:21] <BenGoldberg> m: ((.12 - .1) / .1).say;

[19:21] <camelia> rakudo-moar 4b5e19: OUTPUT«0.2␤»

[19:21] <jnthn> And yeah, it's significant.

[19:21] <BenGoldberg> 20%

[19:22] <jnthn> But again, I dunno what to do about it. It's not really a win to be fast and wrong...

[19:22] *** raiph joined
[19:22] <jnthn> So will have to spend some time digging deeper I guess

[19:24] <jdv79> im a bit confused on the 6 fund and jnthns req.  the req was for 10k usd and didnt liz put up 10k usd?  so why the call for more?

[19:25] <masak> jdv79: because the grant is ending?

[19:25] <jdv79> and how much more?

[19:26] <timotimo> 10x as much as before, please

[19:26] <masak> yes, someone please fund jnthn forever :)

[19:26] <jdv79> for real

[19:26] <masak> jdv79: haven't seen a sum.

[19:28] <jdv79> perhaps its time to figure that

[19:29] <jnthn> jdv79: The 10k was enough to fund 250 hours of work. I've currently done 205 hours under the grant.

[19:30] <jdv79> is there a new grant coming?

[19:30] <jnthn> jdv79: https://6guts.wordpress.com/ has some more details

[19:31] <jnthn> jdv79: The goal is to do another grant after this one in the same style, yes.

[19:32] <jdv79> nice.  i look forward to it.

[19:33] <masak> we all do \o/

[19:33] <jnthn> I basically arranged to drop to ~50% at my $dayjob for the rest of 2015, and have the rest of my time available for Perl 6 work. :)

[19:35] <jnthn> Also, well past the 100 RT tickets resolved mark on the current grant :)

[19:36] <jdv79> is pmichaud fed by the 6 fund for the glr?

[19:37] <jnthn> No

[19:39] <jdv79> weird; ok.  that's probably the most important thing to me at this point.

[19:39] <jdv79> how generous

[19:55] *** xtreak joined
[19:56] *** smls_ joined
[19:56] *** smls left
[20:01] <jnthn> I may jump in and help with GLR things once I'm done with multi-dim array stuffs.

[20:02] <jnthn> ooh yay, tomorrow will be cooler weather.

[20:07] <xtreak> Any intro material abt graphemes and their advantages?

[20:09] <masak> xtreak: well, unless you've seen http://www.joelonsoftware.com/articles/Unicode.html -- you should give it a read.

[20:10] <masak> it somehow doesn't mention the word "grapheme", though. but it's an essential read.

[20:10] <jnthn> When I was implementing the NFG stuff I did some writing on it also

[20:10] <masak> xtreak: this seems relevant, and canonical: http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries

[20:12] * masak is reminded from that page that devanagari is insane

[20:12] <xtreak> Thanks masak i read joel article but need a refresh on it.. I will look into it..

[20:12] <arnsholt> xtreak: Basicall, a grapheme is what you would call "a single character"; that is, a base thing plus anything that works like an accent or diacritic

[20:13] <masak> arnsholt: a codepoint also has claim on the description "a single character", IMHO.

[20:13] <arnsholt> Yeah, thus the quotes

[20:13] <masak> arnsholt: the difference is that the grapheme is what the reader perceives to be a single character on screen/paper.

[20:14] <arnsholt> A codepoint is what Unicode calls a character, but grapheme is what a human (who isn't a computer scientist) would call a character

[20:14] <arnsholt> Yeah, what you said

[20:14] <jnthn> A codepoint is a single codepoint :P

[20:14] <masak> I said no tautology club!

[20:14] <jnthn> .oO( if you like it shoulda put a combining ring on it :P )

[20:16] *** rindolf left
[20:19] <masak> doesn't quite have the same ring to it

[20:19] * masak .oO( if you like it shoulda made it have the same ring to it )

[20:20] <nwc10> is this the hook from which we hang a series of puns?

[20:20] <nwc10> there's beena grave shortage recently

[20:20] <nwc10> the situation is getting accute

[20:21] <jnthn> I'm a dire critic of these puns and they get low marks from me.

[20:22] <masak> your puns are all very sicilicus

[20:22] <nwc10> we're doing the best we can, given the circumflex we find ourselves in.

[20:22] <masak> I wish we could take a shortcut and circumflex them all

[20:23] <masak> dang, nwc10 was slightly more acute than I was

[20:23] <masak> should be more breve next time

[20:23] <dalek> Inline-Perl5: b4318ce | hoelzro++ | lib/Inline/Perl5.pm6:

[20:23] <dalek> Inline-Perl5: Remove .so copying workaround

[20:23] <dalek> Inline-Perl5: 

[20:23] <dalek> Inline-Perl5: Rakudo no longer has this problem, so filling up /tmp with .so files

[20:23] <dalek> Inline-Perl5: is no longer needed

[20:23] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/b4318ced4f

[20:23] <dalek> Inline-Perl5: 2cab928 | niner++ | lib/Inline/Perl5.pm6:

[20:23] <dalek> Inline-Perl5: Merge pull request #33 from hoelzro/master

[20:23] <dalek> Inline-Perl5: 

[20:23] <dalek> Inline-Perl5: Remove .so copying workaround

[20:23] <dalek> Inline-Perl5: Gladly! Thanks for the help :)

[20:24] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/2cab928770

[20:27] *** xtreak left
[20:30] *** zakharyas joined
[20:34] *** bin_005 joined
[20:35] *** darutoko left
[20:44] *** bin_005 left
[20:44] *** bin_005 joined
[20:45] *** cognominal left
[20:46] *** MilkmanDan joined
[20:47] *** cognominal joined
[20:49] *** atroxaper joined
[20:51] *** zakharyas left
[20:52] *** davido___ joined
[20:54] *** atroxaper left
[20:58] *** JimmyZ_ left
[21:03] *** Gardner joined
[21:03] *** amurf joined
[21:04] *** inokenty left
[21:04] *** Gardner is now known as mjgardner

[21:04] <ggoebel2> jnthn: any status update on your funding?

[21:05] *** bin_005 left
[21:05] *** bin_005 joined
[21:05] <ggoebel2> I would be willing to shoot off some emails to leaders of perl mongers groups asking them to pass a hat, but I'm not sure that would be considered kosher.

[21:08] *** amurf left
[21:10] <vendethiel> ggoebel2: it's been accepted

[21:11] <ggoebel2> that's good news! where was it reported?

[21:12] <vendethiel> ggoebel2: http://news.perlfoundation.org/2015/05/perl-6-development-grant-succe.html

[21:12] <vendethiel> in may already :-).

[21:13] <jnthn> vendethiel: I think ggoebel2 is talking about further funding to keep it going

[21:13] <vendethiel> oh! my bad.

[21:13] <ggoebel2> right... "Funding is being requested for an initial 3 month period, with a view to extending the grant provided the work done under it is successful and funds are available."

[21:15] *** cognominal left
[21:15] *** cognominal joined
[21:15] <jnthn> ggoebel2: Not a status update as in "I can publicly say who and what", but something good is in the pipeline. :)

[21:17] *** FROGGS_ left
[21:17] <ggoebel2> good. thank you for everything you do. And everyone else actively, passively, and otherwise working to support perl6

[21:18] * vendethiel nods in agreement, @perl6-people>>++ :)

[21:19] <jnthn> :)

[21:20] * jnthn is gonna go rest, hopefully well, so he can do useful stuff tomorrow :)

[21:20] <jnthn> 'night o/

[21:20] <vendethiel> g'night!

[21:21] *** lucasb left
[21:22] *** inokenty joined
[21:22] <masak> what ggoebel2 said.

[21:28] <AlexDaniel> yes

[21:29] <AlexDaniel> timotimo: 2014.28: Title goes here. Fill out under all circumstances!

[21:29] <AlexDaniel> you know, something is wrong with that title!

[21:32] <masak> think it's an in-joke.

[21:33] <AlexDaniel> masak: hmm?

[21:33] <skids> Now how to make it an autopun...

[21:33] <AlexDaniel> masak: are we talking about the year number?

[21:34] <masak> oh! no, I missed that.

[21:34] <masak> that's certainly wrong. s/2014/2015/ :)

[21:35] <AlexDaniel> I tend to do that a lot, especially when someone asks my age

[21:35] <AlexDaniel> I just don't know whether it incremented already or not

[21:35] <AlexDaniel> and how many times

[21:37] *** lizmat left
[21:37] <masak> ages are very annoying that way.

[21:38] <skids> When you get older it takes longer to answer what your age is.  Because you stopped caring.

[21:39] <skids> But it does make you look senile.

[21:40] <skids> I guess as you approach official retirement age your response time might speed up a bit.

[21:42] <japhb> .oO( 3 years, 4 months, 12 days, 5 hours, and 16 minutes until retirement -- but who's counting? )

[21:43] <BenGoldberg> If you're really lazy, you can say what your birthday and year are, and let the person you're talking to do the math.

[21:43] <BenGoldberg> s/year/birth year/

[21:43] <masak> 'night, #perl6

[21:47] *** beastd left
[21:48] *** dj_goku_ joined
[21:51] *** xinming_ left
[21:51] *** rurban left
[21:52] *** b2gills joined
[21:52] *** xinming joined
[21:53] *** mtj_- joined
[22:05] *** spider-mario left
[22:11] *** vendethiel left
[22:18] *** mjgardner left
[22:19] *** mjgardner joined
[22:20] *** cdc joined
[22:20] *** cdc is now known as Guest59246

[22:27] *** BenGoldberg left
[22:29] *** bjz left
[22:43] <timotimo> oh damn, did i write the previous year again?

[22:49] *** TEttinger joined
[22:51] *** LLamaRider joined
[22:51] *** LLamaRider left
[22:51] *** colomon joined
[22:54] *** colomon left
[22:54] *** lizmat joined
[22:54] *** colomon joined
[22:58] *** tinyblak joined
[23:02] *** colomon left
[23:04] *** mjgardner left
[23:07] *** nebuchadnezzar joined
[23:09] *** colomon joined
[23:10] *** amurf joined
[23:11] *** smls_ left
[23:21] *** bin_005 left
[23:35] *** colomon left
[23:42] *** dayangkun joined
[23:51] *** nys left
[23:51] *** nys joined
[23:54] *** RabidGravy left
[23:54] *** cognominal left
