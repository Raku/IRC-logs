[00:00] *** fhelmberger left
[00:00] *** fhelmberger joined
[00:01] *** fhelmberger left
[00:01] *** fhelmberger joined
[00:02] *** tinyblak left
[00:02] *** fhelmberger left
[00:02] *** fhelmberger joined
[00:03] *** fhelmberger left
[00:04] *** fhelmberger joined
[00:04] *** fhelmberger left
[00:04] *** fhelmberger joined
[00:05] *** fhelmberger left
[00:06] *** fhelmberger joined
[00:06] *** fhelmberger left
[00:07] *** fhelmberger joined
[00:07] *** fhelmberger left
[00:07] <skids> Uladox: to do that, send a PR to the "perl6/ecosystem" module that adds the base URL to META.list.  That PR will provide a place for any feedback during the process of addng the module.

[00:08] *** fhelmberger joined
[00:08] *** fhelmberger left
[00:09] *** fhelmberger joined
[00:09] *** fhelmberger left
[00:10] *** fhelmberger joined
[00:11] *** fhelmberger left
[00:11] *** Uladox left
[00:11] *** fhelmberger joined
[00:11] *** fhelmberger left
[00:12] *** Uladox joined
[00:12] *** fhelmberger joined
[00:12] <Uladox> Ok, back. Added pull request, thanks

[00:13] *** fhelmberger left
[00:13] *** fhelmberger joined
[00:14] *** fhelmberger left
[00:14] *** fhelmberger joined
[00:15] *** fhelmberger left
[00:15] *** fhelmberger joined
[00:16] *** fhelmberger left
[00:16] *** fhelmberger joined
[00:17] *** fhelmberger left
[00:17] *** fhelmberger joined
[00:18] *** fhelmberger left
[00:18] *** fhelmberger joined
[00:19] *** fhelmberger left
[00:19] *** fhelmberger joined
[00:20] *** fhelmberger left
[00:20] *** fhelmberger joined
[00:21] *** fhelmberger left
[00:21] *** fhelmberger joined
[00:22] *** fhelmberger left
[00:22] *** fhelmberger joined
[00:23] *** fhelmberger left
[00:24] *** fhelmberger joined
[00:24] *** fhelmberger left
[00:25] *** fhelmberger joined
[00:25] *** fhelmberger left
[00:26] *** fhelmberger joined
[00:26] *** BenGoldberg joined
[00:26] *** tinyblak joined
[00:26] *** fhelmberger left
[00:27] *** fhelmberger joined
[00:27] *** fhelmberger left
[00:28] *** fhelmberger joined
[00:29] *** fhelmberger left
[00:29] *** fhelmberger joined
[00:29] *** fhelmberger left
[00:30] *** fhelmberger joined
[00:30] *** fhelmberger left
[00:31] *** fhelmberger joined
[00:31] *** CurtisOvidPoe left
[00:32] *** fhelmberger left
[00:32] *** fhelmberger joined
[00:33] *** fhelmberger left
[00:33] *** fhelmberger joined
[00:33] *** aborazmeh joined
[00:34] *** aborazmeh left
[00:34] *** aborazmeh joined
[00:34] *** fhelmberger left
[00:34] *** Uladox left
[00:34] *** fhelmberger joined
[00:35] *** fhelmberger left
[00:35] *** fhelmberger joined
[00:36] *** fhelmberger left
[00:36] *** fhelmberger joined
[00:37] *** fhelmberger left
[00:37] *** fhelmberger joined
[00:38] *** fhelmberger left
[00:38] *** fhelmberger joined
[00:39] *** fhelmberger left
[00:39] *** fhelmberger joined
[00:40] *** fhelmberger left
[00:40] *** fhelmberger joined
[00:41] *** fhelmberger left
[00:41] *** fhelmberger joined
[00:42] *** fhelmberger left
[00:43] *** fhelmberger joined
[00:43] *** fhelmberger left
[00:44] *** fhelmberger joined
[00:44] *** fhelmberger left
[00:45] *** fhelmberger joined
[00:45] *** fhelmberger left
[00:46] *** fhelmberger joined
[00:46] *** fhelmberger left
[00:47] *** fhelmberger joined
[00:47] *** laouji joined
[00:47] *** fhelmberger left
[00:48] *** fhelmberger joined
[00:48] *** fhelmberger left
[00:49] *** fhelmberger joined
[00:49] *** fhelmberger left
[00:50] *** fhelmberger joined
[00:51] *** fhelmberger left
[00:51] *** fhelmberger joined
[00:52] *** fhelmberger left
[00:52] *** fhelmberger joined
[00:53] *** fhelmberger left
[00:53] *** fhelmberger joined
[00:54] *** fhelmberger left
[00:54] *** fhelmberger joined
[00:55] *** fhelmberger left
[00:55] *** fhelmberger joined
[00:56] *** fhelmberger left
[00:56] *** fhelmberger joined
[00:57] *** fhelmberger left
[00:57] *** llfourn joined
[00:57] *** fhelmberger joined
[00:57] * skids wonders when pmichaud's talk will stop being a "live stream" which won't play, even though it is under "uploads"

[00:58] *** fhelmberger left
[00:58] *** fhelmberger joined
[00:59] *** fhelmberger left
[00:59] *** fhelmberger joined
[01:00] *** fhelmberger left
[01:00] *** fhelmberger joined
[01:01] *** fhelmberger left
[01:01] *** fhelmberger joined
[01:02] *** fhelmberger left
[01:02] *** llfourn left
[01:02] *** fhelmberger joined
[01:03] *** fhelmberger left
[01:04] *** fhelmberger joined
[01:04] *** fhelmberger left
[01:04] *** fhelmberger joined
[01:05] *** fhelmberger left
[01:06] *** fhelmberger joined
[01:06] *** fhelmberger left
[01:06] <geekosaur> considering how often I see that happen with supposed professionals doing it...

[01:07] *** fhelmberger joined
[01:07] *** fhelmberger left
[01:08] *** fhelmberger joined
[01:08] *** fhelmberger left
[01:09] *** fhelmberger joined
[01:09] *** fhelmberger left
[01:09] *** petercom1and left
[01:09] *** petercom1and joined
[01:10] *** fhelmberger joined
[01:10] *** petercom1and is now known as petercommand

[01:10] *** fhelmberger left
[01:11] *** fhelmberger joined
[01:11] *** fhelmberger left
[01:12] *** fhelmberger joined
[01:13] *** fhelmberger left
[01:13] *** fhelmberger joined
[01:14] *** fhelmberger left
[01:14] *** fhelmberger joined
[01:15] *** fhelmberger left
[01:15] *** fhelmberger joined
[01:16] *** fhelmberger left
[01:16] *** fhelmberger joined
[01:17] *** fhelmberger left
[01:17] *** fhelmberger joined
[01:18] *** fhelmberger left
[01:18] *** gagalicious left
[01:18] *** fhelmberger joined
[01:19] *** fhelmberger left
[01:19] *** fhelmberger joined
[01:20] *** fhelmberger left
[01:20] *** fhelmberger joined
[01:21] *** fhelmberger left
[01:21] *** fhelmberger joined
[01:22] *** fhelmberger left
[01:22] *** gagalicious joined
[01:22] *** fhelmberger joined
[01:23] *** fhelmberger left
[01:23] *** fhelmberger joined
[01:24] *** spider-mario left
[01:24] *** fhelmberger left
[01:24] *** yqt left
[01:25] *** fhelmberger joined
[01:25] <gagalicious> sorry discon

[01:25] <gagalicious> why doesnt this work ... <meta name="description" content="Reliable and affordable my $d_sAT = $p->look_down( _tag => 'meta', 'name' => 'description' ); print $d_sAT->as_text; <-- using HTML::TreeBuilder;

[01:25] *** fhelmberger left
[01:25] *** spider-mario joined
[01:25] <gagalicious> wow... this fhelmberger<--- this guy should be banned

[01:26] *** fhelmberger joined
[01:26] <geekosaur> forward ban to ##fixyourconnection would seem a good idea

[01:26] *** fhelmberger left
[01:27] *** fhelmberger joined
[01:27] *** Petit_Dejeuner joined
[01:27] *** Petit_Dejeuner left
[01:27] *** fhelmberger left
[01:27] <gagalicious> just ban it will be best

[01:27] *** Petit_Dejeuner joined
[01:27] <gagalicious> can someone ban that guy pls... it's very annoying

[01:28] *** fhelmberger joined
[01:28] *** fhelmberger left
[01:29] *** fhelmberger joined
[01:29] *** fhelmberger left
[01:30] *** fhelmberger joined
[01:31] *** fhelmberger left
[01:31] *** fhelmberger joined
[01:32] *** fhelmberger left
[01:32] *** atweiden left
[01:32] *** fhelmberger joined
[01:33] *** fhelmberger left
[01:33] *** fhelmberger joined
[01:34] *** fhelmberger left
[01:34] *** fhelmberger joined
[01:35] *** fhelmberger left
[01:35] *** fhelmberger joined
[01:36] *** fhelmberger left
[01:36] *** fhelmberger joined
[01:37] *** fhelmberger left
[01:37] *** fhelmberger joined
[01:38] *** fhelmberger left
[01:38] *** fhelmberger joined
[01:39] *** fhelmberger left
[01:39] *** fhelmberger joined
[01:40] *** fhelmberger left
[01:40] *** fhelmberger joined
[01:41] *** fhelmberger left
[01:41] *** fhelmberger joined
[01:42] *** fhelmberger left
[01:42] *** fhelmberger joined
[01:43] <flussence> "/ignore #perl6 JOINS PARTS QUITS" works almost as well as the nuclear option...

[01:43] <tadzik> Or weechat smartfilter

[01:43] *** fhelmberger left
[01:44] *** fhelmberger joined
[01:44] <tadzik> It only shows those events.for people who also spoke in a small interval from the event

[01:44] *** fhelmberger left
[01:45] *** fhelmberger joined
[01:45] *** fhelmberger left
[01:46] *** fhelmberger joined
[01:47] *** fhelmberger left
[01:47] *** fhelmberger joined
[01:47] *** fhelmberger left
[01:48] *** fhelmberger joined
[01:48] *** fhelmberger left
[01:49] *** fhelmberger joined
[01:50] *** fhelmberger left
[01:50] *** fhelmberger joined
[01:50] *** [Sno] left
[01:51] *** fhelmberger left
[01:51] *** fhelmberger joined
[01:52] *** fhelmberger left
[01:52] *** [Sno] joined
[01:52] *** fhelmberger joined
[01:53] *** fhelmberger left
[01:53] *** fhelmberger joined
[01:54] *** fhelmberger left
[01:54] *** fhelmberger joined
[01:55] *** fhelmberger left
[01:55] *** fhelmberger joined
[01:56] *** fhelmberger left
[01:56] *** fhelmberger joined
[01:57] *** fhelmberger left
[01:57] *** fhelmberger joined
[01:58] *** fhelmberger left
[01:58] *** fhelmberger joined
[01:59] *** fhelmberger left
[01:59] *** fhelmberger joined
[01:59] *** dayangkun joined
[02:00] *** fhelmberger left
[02:00] *** fhelmberger joined
[02:01] *** fhelmberger left
[02:01] *** fhelmberger joined
[02:02] *** fhelmberger left
[02:02] <dalek> rakudo-star-daily: 954ec25 | coke++ | log/ (2 files):

[02:02] <dalek> rakudo-star-daily: today (automated commit)

[02:02] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/954ec257c9

[02:02] *** llfourn joined
[02:02] <dalek> perl6-roast-data: c8f6ed0 | coke++ | / (9 files):

[02:02] <dalek> perl6-roast-data: today (automated commit)

[02:02] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/c8f6ed0700

[02:02] *** fhelmberger joined
[02:03] *** fhelmberger left
[02:04] *** fhelmberger joined
[02:04] *** fhelmberger left
[02:05] *** fhelmberger joined
[02:05] *** fhelmberger left
[02:06] *** fhelmberger joined
[02:06] *** fhelmberger left
[02:07] *** fhelmberger joined
[02:07] *** fhelmberger left
[02:08] *** fhelmberger joined
[02:08] *** fhelmberger left
[02:09] *** fhelmberger joined
[02:09] *** fhelmberger left
[02:10] *** fhelmberger joined
[02:10] *** fhelmberger left
[02:11] *** fhelmberger joined
[02:11] *** fhelmberger left
[02:12] *** kurahaupo1 joined
[02:12] *** fhelmberger joined
[02:13] *** fhelmberger left
[02:13] *** fhelmberger joined
[02:14] *** fhelmberger left
[02:14] *** fhelmberger joined
[02:15] *** fhelmberger left
[02:15] *** fhelmberger joined
[02:16] *** fhelmberger left
[02:16] *** fhelmberger joined
[02:17] *** fhelmberger left
[02:17] *** fhelmberger joined
[02:18] *** fhelmberger left
[02:18] *** fhelmberger joined
[02:18] *** prevost joined
[02:19] *** fhelmberger left
[02:19] *** fhelmberger joined
[02:20] *** fhelmberger left
[02:20] *** fhelmberger joined
[02:21] *** fhelmberger left
[02:22] *** fhelmberger joined
[02:22] *** fhelmberger left
[02:23] *** fhelmberger joined
[02:23] *** fhelmberger left
[02:24] *** fhelmberger joined
[02:24] *** fhelmberger left
[02:25] *** fhelmberger joined
[02:25] *** fhelmberger left
[02:26] *** fhelmberger joined
[02:26] *** fhelmberger left
[02:27] *** fhelmberger joined
[02:27] <Util> gagalicious: It fails because the META tag has no content; nothing inbetween <META></META>, because META closes itself.

[02:27] *** fhelmberger left
[02:28] *** fhelmberger joined
[02:28] <Util> It does have an attribute, that is (confusingly) called "content", but that has nothing to do with the HTML concept of Content between tag pairs.

[02:28] *** fhelmberger left
[02:29] *** fhelmberger joined
[02:29] *** fhelmberger left
[02:30] *** fhelmberger joined
[02:30] <Util> Try:

[02:30] <Util> print $d_sAT->attr('content');

[02:31] *** fhelmberger left
[02:31] *** noganex_ joined
[02:31] *** fhelmberger joined
[02:31] <Util> (although, $d_sAT is no longer a appropriate name for that var)

[02:32] *** fhelmberger left
[02:32] *** fhelmberger joined
[02:33] *** fhelmberger left
[02:33] *** fhelmberger joined
[02:34] *** fhelmberger left
[02:34] *** noganex left
[02:34] *** fhelmberger joined
[02:35] *** fhelmberger left
[02:35] *** rmgk is now known as Guest45938

[02:35] *** rmgk_ joined
[02:35] *** Guest45938 left
[02:35] *** rmgk_ is now known as rmgk

[02:35] *** fhelmberger joined
[02:36] *** fhelmberger left
[02:36] *** fhelmberger joined
[02:37] *** fhelmberger left
[02:37] *** fhelmberger joined
[02:38] *** fhelmberger left
[02:38] *** fhelmberger joined
[02:39] *** fhelmberger left
[02:39] *** fhelmberger joined
[02:40] *** fhelmberger left
[02:41] *** fhelmberger joined
[02:41] *** fhelmberger left
[02:42] *** fhelmberger joined
[02:42] *** fhelmberger left
[02:43] *** fhelmberger joined
[02:43] *** fhelmberger left
[02:44] *** fhelmberger joined
[02:44] <dalek> ecosystem: 6d3122c | 'Uladox++ | META.list:

[02:44] <dalek> ecosystem: Adds Editsrc::Uggedit to META.list

[02:44] <dalek> ecosystem: 

[02:44] <dalek> ecosystem: Adds the Editsrc::Uggedit module to the module list. The module is, "The obvious in-source Perl6 based solution to avoid repetion in modifing text by using embedded code with your languages of choice, or just scanning using a perl6 module."

[02:44] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/6d3122c264

[02:44] <dalek> ecosystem: cd4614c | (David Warring)++ | META.list:

[02:44] <dalek> ecosystem: Merge pull request #47 from Uladox/master

[02:44] <dalek> ecosystem: 

[02:44] <dalek> ecosystem: Adds Editsrc::Uggedit to META.list

[02:44] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/cd4614cd4b

[02:44] *** fhelmberger left
[02:45] *** fhelmberger joined
[02:45] *** fhelmberger left
[02:46] *** fhelmberger joined
[02:46] *** fhelmberger left
[02:47] *** fhelmberger joined
[02:48] *** fhelmberger left
[02:48] *** fhelmberger joined
[02:49] *** fhelmberger left
[02:49] *** fhelmberger joined
[02:50] *** fhelmberger left
[02:50] *** fhelmberger joined
[02:50] *** prevost left
[02:51] *** fhelmberger left
[02:51] *** fhelmberger joined
[02:52] *** fhelmberger left
[02:52] *** fhelmberger joined
[02:53] *** fhelmberger left
[02:53] *** fhelmberger joined
[02:54] *** fhelmberger left
[02:54] *** fhelmberger joined
[02:55] *** fhelmberger left
[02:55] *** fhelmberger joined
[02:56] *** fhelmberger left
[02:56] *** fhelmberger joined
[02:57] *** SevenWolf left
[02:57] *** fhelmberger left
[02:57] *** fhelmberger joined
[02:58] *** fhelmberger left
[02:58] *** fhelmberger joined
[02:59] *** fhelmberger left
[02:59] *** fhelmberger joined
[03:00] *** fhelmberger left
[03:01] *** fhelmberger joined
[03:01] *** fhelmberger left
[03:02] *** fhelmberger joined
[03:02] *** fhelmberger left
[03:03] *** fhelmberger joined
[03:03] *** fhelmberger left
[03:04] *** fhelmberger joined
[03:05] *** fhelmberger left
[03:05] *** fhelmberger joined
[03:05] *** fhelmberger left
[03:06] *** fernando___ left
[03:06] *** fhelmberger joined
[03:07] *** fhelmberger left
[03:07] *** fhelmberger joined
[03:07] *** Spot__ left
[03:07] *** clkao left
[03:07] *** fhelmberger left
[03:08] *** fhelmberger joined
[03:09] *** fhelmberger left
[03:09] *** fhelmberger joined
[03:09] *** fhelmberger left
[03:10] *** fhelmberger joined
[03:11] *** fhelmberger left
[03:11] *** fhelmberger joined
[03:12] *** fhelmberger left
[03:12] *** fhelmberger joined
[03:13] *** fhelmberger left
[03:13] *** bin_005 joined
[03:13] *** fhelmberger joined
[03:14] *** fhelmberger left
[03:14] *** fhelmberger joined
[03:15] *** fhelmberger left
[03:15] *** fhelmberger joined
[03:16] *** fhelmberger left
[03:16] *** fhelmberger joined
[03:17] *** fhelmberger_ joined
[03:17] *** fhelmberger left
[03:18] *** fhelmberger_ left
[03:18] *** fhelmberger joined
[03:19] *** fhelmberger left
[03:20] *** fhelmberger joined
[03:20] *** fhelmberger left
[03:20] *** fhelmberger joined
[03:21] *** dj_goku joined
[03:21] *** fhelmberger left
[03:22] *** fhelmberger joined
[03:22] *** fhelmberger left
[03:23] *** fhelmberger joined
[03:23] *** fhelmberger left
[03:24] *** fhelmberger joined
[03:24] *** fhelmberger left
[03:25] *** fhelmberger joined
[03:25] *** fhelmberger left
[03:26] *** fhelmberger joined
[03:26] *** fhelmberger left
[03:27] *** fhelmberger joined
[03:27] *** fhelmberger left
[03:28] *** fhelmberger joined
[03:28] *** fhelmberger left
[03:29] *** fhelmberger joined
[03:30] *** fhelmberger left
[03:30] *** fhelmberger joined
[03:31] *** fhelmberger left
[03:31] <hoelzro> .tell FROGGS I've started some panda work using openpipe3 so the smoker can tell output from warnings: https://github.com/hoelzro/panda/tree/dont-cross-the-streams

[03:31] <yoleaux> hoelzro: I'll pass your message to FROGGS.

[03:31] *** fhelmberger joined
[03:32] *** fhelmberger left
[03:32] *** fhelmberger joined
[03:33] *** laouji left
[03:33] *** fhelmberger left
[03:33] *** fhelmberger joined
[03:34] *** fhelmberger left
[03:34] *** fhelmberger joined
[03:35] *** fhelmberger left
[03:35] *** fhelmberger joined
[03:36] *** fhelmberger left
[03:36] *** fhelmberger joined
[03:37] *** fhelmberger left
[03:37] *** fhelmberger joined
[03:38] *** fhelmberger left
[03:38] *** fhelmberger joined
[03:39] *** fhelmberger left
[03:39] *** fhelmberger joined
[03:40] *** fhelmberger left
[03:41] *** fhelmberger joined
[03:41] *** fhelmberger left
[03:42] *** fhelmberger joined
[03:42] *** fhelmberger left
[03:43] *** fhelmberger joined
[03:43] *** fhelmberger left
[03:44] *** fhelmberger joined
[03:44] *** fhelmberger left
[03:45] *** fhelmberger joined
[03:45] *** fhelmberger left
[03:46] *** fhelmberger joined
[03:46] *** fhelmberger left
[03:47] *** fhelmberger joined
[03:47] *** fhelmberger left
[03:48] *** fhelmberger joined
[03:48] *** fhelmberger left
[03:49] *** fhelmberger joined
[03:50] *** fhelmberger left
[03:50] *** fhelmberger joined
[03:50] *** bin_005 left
[03:51] *** fhelmberger left
[03:51] *** fhelmberger joined
[03:52] *** fhelmberger left
[03:52] *** fhelmberger joined
[03:53] *** fhelmberger left
[03:53] *** lizmat joined
[03:53] *** fhelmberger joined
[03:54] *** fhelmberger left
[03:55] *** fhelmberger joined
[03:55] *** fhelmberger left
[03:56] *** fhelmberger joined
[03:56] *** fhelmberger left
[03:57] *** fhelmberger joined
[03:58] *** fhelmberger left
[03:58] <lizmat> Q: did we lose .graphs as a method or not? if we did, there appear quite a number of fossils then in the spec

[03:58] <lizmat> socializing again&

[03:58] *** fhelmberger joined
[03:59] *** fhelmberger left
[03:59] *** fhelmberger joined
[04:00] *** fhelmberger left
[04:00] *** fhelmberger joined
[04:01] *** fhelmberger left
[04:01] *** fhelmberger joined
[04:02] *** fhelmberger left
[04:02] *** fhelmberger joined
[04:03] *** fhelmberger left
[04:04] *** fhelmberger joined
[04:04] *** fhelmberger left
[04:05] *** fhelmberger joined
[04:05] *** fhelmberger left
[04:06] *** fhelmberger joined
[04:06] *** fhelmberger left
[04:07] *** fhelmberger joined
[04:07] <JimmyZ>  https://github.com/perl6/ecosystem/commit/6d3122c264  # this is wrongish...

[04:07] *** fhelmberger left
[04:08] *** fhelmberger joined
[04:08] *** fhelmberger left
[04:09] *** fhelmberger joined
[04:10] *** fhelmberger left
[04:10] *** fhelmberger joined
[04:10] *** fhelmberger left
[04:11] *** fhelmberger joined
[04:11] *** BenGoldberg left
[04:12] *** fhelmberger left
[04:12] *** fhelmberger joined
[04:13] *** fhelmberger left
[04:13] *** fhelmberger joined
[04:14] *** fhelmberger left
[04:14] *** fhelmberger joined
[04:15] *** fhelmberger left
[04:15] *** fhelmberger joined
[04:16] *** fhelmberger left
[04:16] *** fhelmberger joined
[04:17] *** fhelmberger left
[04:17] *** fhelmberger joined
[04:18] *** fhelmberger left
[04:18] *** fhelmberger joined
[04:19] *** fhelmberger left
[04:19] *** fhelmberger joined
[04:20] *** fhelmberger left
[04:20] *** fhelmberger joined
[04:21] *** anaeem1_ joined
[04:21] *** fhelmberger left
[04:22] *** fhelmberger joined
[04:22] *** fhelmberger left
[04:23] *** fhelmberger joined
[04:23] *** fhelmberger left
[04:24] *** fhelmberger joined
[04:24] *** fhelmberger left
[04:25] *** fhelmberger joined
[04:25] <zostay> m: $h = open('test', :w); $h.print("test\n"); $h.open('test', :r, :bin); $h.get.say;

[04:25] <camelia> rakudo-moar 228168: OUTPUT«5===SORRY!5=== Error while compiling /tmp/RuxFDxHI_i␤Variable '$h' is not declared␤at /tmp/RuxFDxHI_i:1␤------> 3<BOL>7⏏5$h = open('test', :w); $h.print("test\n"␤»

[04:25] <zostay> m: my $h = open('test', :w); $h.print("test\n"); $h.open('test', :r, :bin); $h.get.say;

[04:25] <camelia> rakudo-moar 228168: OUTPUT«open is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:1␤  in sub open at src/RESTRICTED.setting:9␤  in block <unit> at /tmp/0zUznqBjdk:1␤␤»

[04:25] *** fhelmberger left
[04:26] *** fhelmberger joined
[04:26] *** fhelmberger left
[04:26] <zostay> i note that i can open the file in :bin and then use .get to get a Str, what encoding is being used in that case to decode the bytes?

[04:27] *** fhelmberger joined
[04:27] <zostay> the default :enc?

[04:27] *** fhelmberger left
[04:28] *** fhelmberger joined
[04:28] *** fhelmberger left
[04:29] *** fhelmberger joined
[04:30] *** fhelmberger left
[04:30] *** fhelmberger joined
[04:31] *** fhelmberger left
[04:31] *** fhelmberger joined
[04:32] *** fhelmberger left
[04:32] *** fhelmberger joined
[04:33] *** fhelmberger left
[04:33] *** fhelmberger joined
[04:34] *** fhelmberger left
[04:34] *** fhelmberger joined
[04:35] *** fhelmberger left
[04:35] *** fhelmberger joined
[04:35] *** telex left
[04:36] *** fhelmberger left
[04:36] *** telex joined
[04:36] *** fhelmberger joined
[04:37] *** fhelmberger left
[04:37] *** fhelmberger joined
[04:38] *** fhelmberger left
[04:38] *** fhelmberger joined
[04:39] *** fhelmberger left
[04:39] *** fhelmberger joined
[04:40] *** fhelmberger left
[04:40] *** [Sno] left
[04:40] *** fhelmberger joined
[04:41] *** fhelmberger left
[04:41] *** fhelmberger joined
[04:41] *** [Sno] joined
[04:42] *** laouji joined
[04:42] *** fhelmberger left
[04:43] *** fhelmberger joined
[04:43] *** fhelmberger left
[04:44] *** fhelmberger joined
[04:44] *** [Sno] left
[04:44] *** fhelmberger left
[04:45] *** [Sno] joined
[04:45] *** fhelmberger joined
[04:45] *** fhelmberger left
[04:46] *** fhelmberger joined
[04:47] *** fhelmberger left
[04:47] *** fhelmberger joined
[04:47] *** fhelmberger left
[04:48] *** fhelmberger joined
[04:48] *** fhelmberger left
[04:49] *** fhelmberger joined
[04:49] *** fhelmberger left
[04:50] *** fhelmberger joined
[04:51] *** fhelmberger left
[04:51] *** fhelmberger joined
[04:52] *** fhelmberger left
[04:52] *** dayangkun left
[04:52] *** fhelmberger joined
[04:53] *** fhelmberger left
[04:53] <japhb> zostay: As far as I can tell diving through the stack (without being super-careful about it), it looks like opening with :bin explicitly does *not* set an encoding, and if you never set an encoding but try to read a string from a file anyway, MoarVM will use utf8.

[04:53] *** kurahaupo1 left
[04:53] *** fhelmberger joined
[04:54] *** fhelmberger left
[04:54] *** fhelmberger joined
[04:55] *** fhelmberger left
[04:55] *** fhelmberger joined
[04:56] *** fhelmberger left
[04:56] *** fhelmberger joined
[04:57] *** fhelmberger left
[04:57] *** laouji left
[04:57] *** fhelmberger joined
[04:58] *** laouji joined
[04:58] *** fhelmberger left
[04:58] *** fhelmberger joined
[04:59] *** fhelmberger left
[04:59] *** fhelmberger joined
[05:00] *** fhelmberger left
[05:00] *** fhelmberger joined
[05:01] *** fhelmberger left
[05:02] *** fhelmberger joined
[05:02] *** labster joined
[05:02] *** fhelmberger left
[05:03] *** fhelmberger joined
[05:03] *** fhelmberger left
[05:04] *** fhelmberger joined
[05:04] *** diana_olhovik_ joined
[05:04] *** fhelmberger left
[05:05] *** fhelmberger joined
[05:05] *** labster_ joined
[05:05] *** fhelmberger left
[05:06] *** fhelmberger joined
[05:06] *** fhelmberger left
[05:07] *** fhelmberger joined
[05:07] *** fhelmberger left
[05:07] *** labster left
[05:07] *** labster_ is now known as labster

[05:08] *** fhelmberger joined
[05:08] <moritz> IMHO it should explode

[05:09] *** fhelmberger left
[05:09] *** fhelmberger joined
[05:10] *** fhelmberger left
[05:10] *** fhelmberger joined
[05:11] *** fhelmberger left
[05:11] *** fhelmberger joined
[05:12] *** fhelmberger left
[05:12] *** fhelmberger joined
[05:12] *** laouji left
[05:13] *** fhelmberger left
[05:13] <dalek> ecosystem: 9982d6d | skids++ | META.list:

[05:13] <dalek> ecosystem: Fix recently added URL

[05:13] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/9982d6d382

[05:13] *** fhelmberger joined
[05:14] *** fhelmberger left
[05:14] *** fhelmberger joined
[05:15] *** fhelmberger left
[05:15] *** fhelmberger joined
[05:16] *** fhelmberger left
[05:16] *** fhelmberger joined
[05:16] *** laouji joined
[05:17] *** fhelmberger left
[05:17] <skids> m: sub ud { Any }; my %b := :{ ud() => 1, Any => 2}; %b.perl.say

[05:17] <camelia> rakudo-moar 228168: OUTPUT«Use of uninitialized value of type Any in string context  in any p6sort at src/vm/moar/Perl6/Ops.nqp:349␤Hash[Mu,Any].new(Any => 1, "Any" => 2)␤»

[05:17] *** fhelmberger joined
[05:18] *** fhelmberger left
[05:18] *** fhelmberger joined
[05:19] *** fhelmberger left
[05:19] *** fhelmberger joined
[05:20] *** fhelmberger left
[05:20] *** fhelmberger joined
[05:21] *** fhelmberger left
[05:21] *** fhelmberger joined
[05:22] *** fhelmberger left
[05:23] *** fhelmberger joined
[05:23] *** fhelmberger left
[05:24] *** fhelmberger_ joined
[05:24] *** fhelmberger_ left
[05:25] *** fhelmberger joined
[05:25] *** fhelmberger left
[05:26] *** fhelmberger joined
[05:26] *** fhelmberger left
[05:26] *** skids left
[05:27] *** fhelmberger joined
[05:27] *** fhelmberger left
[05:28] *** fhelmberger joined
[05:29] *** fhelmberger left
[05:29] *** [Sno] left
[05:29] *** fhelmberger joined
[05:29] *** fhelmberger left
[05:30] *** fhelmberger joined
[05:30] *** diana_olhovik_ left
[05:31] *** fhelmberger left
[05:31] *** fhelmberger joined
[05:31] *** fhelmberger left
[05:32] *** fhelmberger joined
[05:33] *** fhelmberger left
[05:33] *** slavik joined
[05:33] *** fhelmberger joined
[05:34] *** fhelmberger left
[05:34] *** fhelmberger joined
[05:35] *** fhelmberger left
[05:35] *** fhelmberger joined
[05:35] *** [Sno] joined
[05:36] *** fhelmberger left
[05:36] *** fhelmberger joined
[05:37] *** fhelmberger left
[05:37] *** fhelmberger joined
[05:38] *** jack_rabbit left
[05:38] *** fhelmberger left
[05:38] *** fhelmberger joined
[05:39] *** fhelmberger left
[05:39] *** fhelmberger joined
[05:40] *** wentam joined
[05:40] *** fhelmberger left
[05:40] *** fhelmberger joined
[05:41] *** fhelmberger left
[05:41] *** fhelmberger joined
[05:42] *** fhelmberger left
[05:42] *** jack_rabbit joined
[05:42] *** fhelmberger joined
[05:43] *** fhelmberger left
[05:44] *** fhelmberger joined
[05:44] *** fhelmberger left
[05:45] *** fhelmberger joined
[05:45] *** fhelmberger left
[05:45] *** domidumont joined
[05:46] *** Patterner joined
[05:46] *** fhelmberger joined
[05:46] *** fhelmberger left
[05:47] *** RabidGravy joined
[05:47] *** fhelmberger joined
[05:47] *** fhelmberger left
[05:48] *** fhelmberger joined
[05:49] *** fhelmberger left
[05:49] *** fhelmberger joined
[05:50] *** fhelmberger left
[05:50] *** Psyche^ left
[05:50] *** domidumont left
[05:50] *** fhelmberger joined
[05:50] *** domidumont joined
[05:50] *** fhelmberger left
[05:51] *** fhelmberger joined
[05:52] *** fhelmberger left
[05:52] *** fhelmberger joined
[05:53] *** fhelmberger left
[05:53] *** fhelmberger joined
[05:54] *** fhelmberger left
[05:54] *** fhelmberger joined
[05:55] *** fhelmberger left
[05:55] *** Foxcool joined
[05:55] *** fhelmberger joined
[05:56] *** fhelmberger left
[05:56] *** fhelmberger joined
[05:57] *** fhelmberger left
[05:57] *** fhelmberger joined
[05:58] *** fhelmberger left
[05:58] *** laouji left
[05:58] *** fhelmberger joined
[05:59] *** fhelmberger left
[05:59] *** fhelmberger joined
[06:00] *** fhelmberger left
[06:00] *** fhelmberger joined
[06:01] *** fhelmberger left
[06:01] *** fhelmberger joined
[06:02] *** fhelmberger left
[06:02] *** laouji joined
[06:02] *** diana_olhovik joined
[06:02] *** fhelmberger joined
[06:03] *** domidumont left
[06:03] *** fhelmberger left
[06:04] *** fhelmberger joined
[06:05] *** fhelmberger left
[06:05] *** fhelmberger joined
[06:05] *** fhelmberger left
[06:05] *** laouji left
[06:06] *** fhelmberger joined
[06:06] *** laouji joined
[06:06] *** fhelmberger left
[06:07] *** fhelmberger joined
[06:07] *** kurahaupo1 joined
[06:07] *** fhelmberger left
[06:08] *** fhelmberger joined
[06:09] *** fhelmberger left
[06:09] *** fhelmberger joined
[06:09] *** fhelmberger left
[06:10] *** fhelmberger joined
[06:11] *** fhelmberger left
[06:11] *** fhelmberger joined
[06:11] *** llfourn left
[06:12] *** fhelmberger left
[06:12] *** fhelmberger joined
[06:12] *** vendethiel joined
[06:13] *** fhelmberger left
[06:13] *** fhelmberger joined
[06:14] *** fhelmberger left
[06:14] *** fhelmberger joined
[06:15] *** fhelmberger left
[06:15] *** fhelmberger joined
[06:16] *** fhelmberger left
[06:16] *** domidumont joined
[06:16] *** fhelmberger joined
[06:16] *** kaare_ joined
[06:17] *** fhelmberger left
[06:17] *** fhelmberger joined
[06:18] *** fhelmberger left
[06:18] *** fhelmberger joined
[06:19] *** fhelmberger left
[06:19] *** fhelmberger joined
[06:20] *** fernando___ joined
[06:20] *** fhelmberger left
[06:20] *** fhelmberger joined
[06:21] *** fhelmberger_ joined
[06:21] *** fhelmberger left
[06:22] *** fhelmberger_ left
[06:22] *** fhelmberger joined
[06:23] *** fhelmberger left
[06:24] *** fhelmberger joined
[06:24] *** clkao joined
[06:24] *** [Sno] left
[06:24] *** fhelmberger left
[06:24] *** [Sno] joined
[06:25] *** fhelmberger joined
[06:25] *** espadrine_ joined
[06:25] *** fhelmberger left
[06:26] *** fhelmberger joined
[06:26] *** fhelmberger left
[06:27] *** fhelmberger joined
[06:27] *** fhelmberger left
[06:28] *** fhelmberger joined
[06:29] *** fhelmberger left
[06:29] *** fhelmberger joined
[06:29] *** fhelmberger left
[06:30] *** fhelmberger joined
[06:31] *** fhelmberger left
[06:31] *** fhelmberger joined
[06:32] *** fhelmberger left
[06:32] *** fhelmberger joined
[06:32] *** Foxcool left
[06:32] *** Foxcool joined
[06:33] *** fhelmberger left
[06:33] *** fhelmberger joined
[06:33] *** FROGGS joined
[06:33] <RabidGravy> marning

[06:33] <FROGGS> mürning

[06:33] <yoleaux> 03:31Z <hoelzro> FROGGS: I've started some panda work using openpipe3 so the smoker can tell output from warnings: https://github.com/hoelzro/panda/tree/dont-cross-the-streams

[06:34] <FROGGS> hoelzro++ # branch name :D

[06:34] *** isacloud left
[06:34] *** fhelmberger left
[06:34] *** preyalone left
[06:34] *** fhelmberger joined
[06:35] *** fhelmberger left
[06:35] *** vendethiel left
[06:35] *** fhelmberger joined
[06:36] *** fhelmberger left
[06:36] *** fhelmberger joined
[06:37] *** fhelmberger left
[06:37] *** fhelmberger joined
[06:38] <FROGGS> hoelzro: can we do the following? get a line from stdout and the get a line from stderr, so that we are able to provide the merged err+out as well as the streams itself?

[06:38] *** fhelmberger left
[06:38] *** fhelmberger joined
[06:39] *** fhelmberger left
[06:39] <tadzik> I merged one of your panda PRs, the other I'd like to take a closer look at when I get back to a computer

[06:39] *** fhelmberger joined
[06:40] *** fhelmberger left
[06:40] *** fhelmberger joined
[06:41] *** vendethiel joined
[06:41] <tadzik> There's plenty of things wrong about revdep, it may need an overhaul of sorts, some of the issues are a bit connected to how panda generally does stuff

[06:41] *** fhelmberger left
[06:41] *** fhelmberger joined
[06:41] *** Spot__ joined
[06:42] *** fhelmberger left
[06:42] *** fhelmberger joined
[06:43] *** fhelmberger left
[06:43] <FROGGS> tadzik: I commented to the revdep PR

[06:43] *** fhelmberger joined
[06:45] *** fhelmberger left
[06:45] *** fhelmberger_ joined
[06:46] *** fhelmberger_ left
[06:46] *** fhelmberger joined
[06:47] *** fhelmberger left
[06:47] *** fhelmberger_ joined
[06:47] *** fhelmberger_ left
[06:48] *** fhelmberger joined
[06:48] <tadzik> I feel like I'm taking crazy pills!

[06:48] *** fhelmberger left
[06:49] *** fhelmberger joined
[06:50] *** fhelmberger left
[06:50] <moritz> blue crazy pills or red crazy pills?

[06:50] *** fhelmberger joined
[06:50] <moritz> .oO( an R-B Tree of crazy pills )

[06:50] *** fhelmberger left
[06:51] *** fhelmberger joined
[06:51] <tadzik> So far they're grey, before I get to revisit it :)

[06:52] *** fhelmberger left
[06:52] *** fhelmberger joined
[06:53] *** fhelmberger left
[06:53] *** ggherdov left
[06:53] *** pnu left
[06:53] *** chansen_ left
[06:53] *** fhelmberger joined
[06:54] *** fhelmberger left
[06:54] *** fhelmberger joined
[06:54] *** aborazmeh left
[06:55] *** fhelmberger left
[06:55] *** fhelmberger joined
[06:56] *** fhelmberger left
[06:56] *** aborazmeh joined
[06:56] *** aborazmeh left
[06:56] *** aborazmeh joined
[06:56] *** fhelmberger joined
[06:56] <FROGGS> fhelmberger: ping

[06:57] *** fhelmberger left
[06:57] *** fhelmberger joined
[06:58] *** fhelmberger left
[06:58] *** fhelmberger joined
[06:58] *** Ven joined
[06:59] *** fhelmberger left
[06:59] *** fhelmberger joined
[07:00] *** fhelmberger left
[07:00] *** fhelmberger joined
[07:01] *** fhelmberger_ joined
[07:01] *** fhelmberger left
[07:02] *** fhelmberger joined
[07:02] *** fhelmberger_ left
[07:03] *** fhelmberger_ joined
[07:03] *** fhelmberger left
[07:03] *** vendethiel left
[07:04] *** llfourn joined
[07:04] *** fhelmberger_ left
[07:04] *** fhelmberger joined
[07:05] *** fhelmberger left
[07:06] *** fhelmberger joined
[07:07] *** fhelmberger left
[07:07] *** fhelmberger_ joined
[07:07] *** chansen_ joined
[07:07] <Ven> o/, #perl6

[07:07] <Ven> https://twitter.com/puffnfresh/status/608026578358927360 <- I should spend some time refining sixcheck. It doesn't integrate as neatly as I'd like it to...

[07:08] *** fhelmberger_ left
[07:08] *** fhelmberger joined
[07:08] *** _mg_ joined
[07:08] *** fhelmberger left
[07:09] *** fhelmberger joined
[07:09] *** jack_rabbit left
[07:10] *** fhelmberger left
[07:10] *** fhelmberger joined
[07:11] *** fhelmberger left
[07:11] *** Ven left
[07:11] *** fhelmberger joined
[07:11] *** spider-mario left
[07:12] *** fhelmberger left
[07:12] *** fhelmberger joined
[07:12] *** jack_rabbit joined
[07:12] *** fhelmberger left
[07:13] *** larion left
[07:13] *** fhelmberger joined
[07:14] *** fhelmberger left
[07:14] *** [Sno] left
[07:14] *** fhelmberger joined
[07:14] *** [Sno] joined
[07:15] *** fhelmberger left
[07:15] *** fhelmberger joined
[07:16] *** fhelmberger left
[07:16] *** ggherdov joined
[07:16] *** fhelmberger joined
[07:16] *** pnu joined
[07:17] *** fhelmberger left
[07:17] *** fhelmberger joined
[07:18] *** amurf left
[07:18] *** fhelmberger left
[07:18] *** fhelmberger joined
[07:19] *** fhelmberger left
[07:19] *** aborazmeh left
[07:19] *** fhelmberger joined
[07:20] *** isacloud joined
[07:20] *** fhelmberger left
[07:20] *** cdc joined
[07:20] *** fhelmberger joined
[07:21] <cdc> hello #perl6

[07:21] *** fhelmberger left
[07:21] <cdc> m: 0.^methods(:all).sort

[07:21] <camelia> rakudo-moar 228168: OUTPUT«(signal SEGV)Code object coerced to string (please use .gist or .perl to do that)  in any p6sort at src/vm/moar/Perl6/Ops.nqp:349␤Code object coerced to string (please use .gist or .perl to do that)  in any p6sort at src/vm/moar/Perl6/Ops.nqp:349␤Code …»

[07:21] <cdc> SEGV ^

[07:21] *** fhelmberger joined
[07:22] *** fhelmberger left
[07:22] *** fhelmberger_ joined
[07:23] <RabidGravy> nasty

[07:23] *** fhelmberger_ left
[07:23] *** fhelmberger joined
[07:24] <wentam> So, I wrote some bindings to my graphics engine: https://github.com/wentam/P6-Graffiks

[07:24] *** fhelmberger left
[07:24] *** Ven joined
[07:24] <wentam> how do I get it listed on modules.perl6.org

[07:25] *** fhelmberger joined
[07:25] <FROGGS> wentam: create a pul request for this: https://github.com/perl6/ecosystem/blob/master/META.list

[07:25] *** fhelmberger left
[07:25] <FROGGS> pull*

[07:26] *** fhelmberger joined
[07:26] <RabidGravy> cdc, looks like a stack overflow

[07:26] *** jack_rabbit left
[07:26] <FROGGS> wentam: or you tell me your github id, and I'll add you to the perl6 team, which lets you push to the ecosystem repository directly

[07:26] *** fhelmberger left
[07:27] <RabidGravy> cdc, valgrind say "Access not within mapped region at address 0x0"

[07:27] *** fhelmberger joined
[07:27] <wentam> FROGGS, https://github.com/wentam/

[07:27] *** gfldex joined
[07:27] *** fhelmberger left
[07:28] <FROGGS> wentam: invitation sent

[07:28] *** fhelmberger joined
[07:28] *** preyalone joined
[07:28] <wentam> FROGGS, so now I just push my meta.info to that file?

[07:28] *** fhelmberger left
[07:29] <FROGGS> wentam: no

[07:29] *** jack_rabbit joined
[07:29] <wentam> I mean, the raw url to it

[07:29] *** fhelmberger joined
[07:29] <FROGGS> go to your repo, click on your META.info, click on raw

[07:29] <wentam> yeah, that's what I meant

[07:29] <FROGGS> and copy that url to the meta list

[07:29] <wentam> alrighty, tyvm

[07:29] <FROGGS> it should look like the others

[07:30] *** fhelmberger left
[07:30] *** fhelmberger joined
[07:30] <FROGGS> wentam: are you related to retupmoca?

[07:30] <RabidGravy> wentam, I would suggest doing "panda install ." in the source directory to check that panda understands your META.info if you didn't already do that

[07:30] *** fhelmberger left
[07:31] <dalek> ecosystem: 0242d1a | (Matt Egeler)++ | META.list:

[07:31] <dalek> ecosystem: Add Graffiks bindings to META.list

[07:31] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/0242d1adf8

[07:31] <wentam> FROGGS, yes, he's my brother

[07:31] *** fhelmberger joined
[07:31] <wentam> https://github.com/perl6/ecosystem/commit/0242d1adf8177e04cafc99dbf3696ae012d4184c

[07:31] <wentam> RabidGravy, oohh, good idea

[07:31] <FROGGS> Egeler++ then :o)

[07:31] <FROGGS> wentam: your META.info is invalid JSON

[07:31] *** fhelmberger left
[07:32] <wentam> RabidGravy, should have said that slightly earier, it doesn't work :P

[07:32] <FROGGS> wentam: you are missing commas

[07:32] *** fhelmberger joined
[07:32] <wentam> oopsies

[07:32] <FROGGS> I'll PR

[07:32] <wentam> I already got it fixed

[07:32] <RabidGravy> I have added one and realised I'd cocked up the META.info every time

[07:33] *** fhelmberger left
[07:33] *** fhelmberger joined
[07:33] <RabidGravy> maybe a "validate-meta" command for panda at some point

[07:33] <FROGGS> wentam++

[07:34] *** kurahaupo1 left
[07:34] *** fhelmberger left
[07:34] *** fhelmberger joined
[07:34] <cdc> RabidGravy: I've submitted RT #125365

[07:34] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125365

[07:34] <wentam> I assume that modules list updates periodically, so it will appear after a while?

[07:35] <FROGGS> wentam: every hours IIRC

[07:35] *** fhelmberger left
[07:35] <FROGGS> hour*

[07:35] <wentam> rgr

[07:35] *** fhelmberger joined
[07:35] <moritz> I can trigger a manual rebuild

[07:36] *** fhelmberger left
[07:36] *** fhelmberger joined
[07:36] <moritz> if anybody else wants to have that power, give me your ssh pubkey :-)

[07:36] *** aborazmeh joined
[07:36] *** aborazmeh left
[07:36] *** aborazmeh joined
[07:37] *** fhelmberger left
[07:37] <moritz> ok, it takes less than a minute; I guess I can run it more often

[07:37] <FROGGS> (more often)++

[07:37] *** fhelmberger joined
[07:37] <moritz> 8,28,48 * * * * bash update.sh > update.log 2>&1

[07:38] <moritz> https://raw.githubusercontent.com/carbin/p6-Crypt-Reop/master/META.info 404

[07:38] *** fhelmberger left
[07:38] *** Ven left
[07:38] *** fhelmberger joined
[07:39] *** rindolf joined
[07:39] *** fhelmberger left
[07:39] <dalek> ecosystem: 88785dc | moritz++ | META.list:

[07:39] <dalek> ecosystem: Remove reference to repo that has gone pining for the fjords

[07:39] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/88785dc17f

[07:39] *** fhelmberger joined
[07:39] *** jack_rabbit left
[07:40] <RabidGravy> moritz, any value in putting a github webhook on that (to trigger the rebuild)

[07:40] *** fhelmberger left
[07:40] *** fhelmberger joined
[07:40] <moritz> RabidGravy: not much; most changes are in the META.info files of the individual repos, not to the ecosystem repo itself

[07:41] *** Ven joined
[07:41] <RabidGravy> true

[07:41] *** fhelmberger left
[07:41] *** fhelmberger joined
[07:41] *** Ven left
[07:41] <moritz> RabidGravy: tough it might be nice to parallelize update.pl in the ecosystem repo a bit

[07:42] <moritz> it does mostly https request

[07:42] *** fhelmberger left
[07:42] *** fhelmberger joined
[07:43] *** fhelmberger_ joined
[07:43] *** fhelmberger left
[07:44] *** fhelmberger joined
[07:44] *** fhelmberger_ left
[07:45] <RabidGravy> poor fhelmberger 

[07:45] *** vendethiel joined
[07:45] *** fhelmberger left
[07:45] <RabidGravy> cdc, just added the gdb and valgrind to that RT

[07:46] *** fhelmberger joined
[07:46] <cdc> thanks !

[07:47] *** fhelmberger left
[07:47] *** fhelmberger_ joined
[07:48] *** fhelmberger_ left
[07:48] *** fhelmberger joined
[07:49] *** fhelmberger left
[07:49] *** fhelmberger_ joined
[07:50] *** fhelmberger_ left
[07:50] *** fhelmberger joined
[07:51] *** fhelmberger left
[07:51] *** fhelmberger joined
[07:52] *** fhelmberger left
[07:52] *** fhelmberger joined
[07:52] *** fhelmberger left
[07:53] *** fhelmberger joined
[07:53] *** fhelmberger left
[07:54] *** fhelmberger joined
[07:55] *** fhelmberger left
[07:55] *** jack_rabbit joined
[07:55] *** fhelmberger joined
[07:56] *** fhelmberger left
[07:56] *** fhelmberger joined
[07:57] *** fhelmberger left
[07:57] *** fhelmberger joined
[07:58] *** fhelmberger left
[07:58] *** fhelmberger joined
[07:59] *** fhelmberger left
[07:59] *** fhelmberger joined
[08:00] *** fhelmberger left
[08:00] *** fhelmberger joined
[08:01] *** fhelmberger left
[08:01] *** fhelmberger joined
[08:02] *** fhelmberger_ joined
[08:02] *** fhelmberger left
[08:03] *** fhelmberger_ left
[08:03] *** fhelmberger joined
[08:04] <breinbaas> why don't you guys kick fhelmberger?  his behavior makes it difficult to follow what goes on in this chennel

[08:04] *** fhelmberger left
[08:04] *** fhelmberger joined
[08:05] <wentam> It just links to the github homepage for Graffiks on the modules page, is my source-url wrong? https://github.com/wentam/P6-Graffiks/blob/master/META.info

[08:05] <dalek> doc: a60ba58 | RabidGravy++ | WANTED:

[08:05] <dalek> doc: Correct the spelling of Synatax

[08:05] <dalek> doc: review: https://github.com/perl6/doc/commit/a60ba58bef

[08:05] *** fhelmberger left
[08:05] <wentam> I just used the checkout url github provides

[08:05] *** fhelmberger joined
[08:06] *** jack_rabbit left
[08:07] *** fhelmberger left
[08:07] *** fhelmberger_ joined
[08:08] *** fhelmberger_ left
[08:08] *** fhelmberger joined
[08:08] <FROGGS> wentam: click on 'raw', and use that url

[08:08] <FROGGS> ahh wait

[08:08] <wentam> I mean in meta.info

[08:08] <FROGGS> misunderstood

[08:09] *** fhelmberger left
[08:09] *** labster left
[08:09] <FROGGS> your source url might want to be https://github.com/wentam/Graffiks.git

[08:09] *** fhelmberger joined
[08:09] <wentam> I'll try it

[08:10] *** fhelmberger left
[08:10] *** fhelmberger joined
[08:10] <dalek> doc: 4edf556 | RabidGravy++ | lib/Language/variables.pod:

[08:10] <dalek> doc: Add $*SPEC to variables

[08:10] <dalek> doc: review: https://github.com/perl6/doc/commit/4edf556fe1

[08:11] *** fhelmberger left
[08:11] *** fhelmberger joined
[08:11] <RabidGravy> I know there was a small amount of doubt expressed as to whether that should stay but if it goes it can be removed again ;-)

[08:11] *** fhelmberger left
[08:12] *** fhelmberger joined
[08:13] *** fhelmberger left
[08:13] *** fhelmberger joined
[08:14] *** fhelmberger left
[08:14] *** darutoko joined
[08:14] <dalek> doc: 0f60edd | paultcochrane++ | / (2 files):

[08:14] <dalek> doc: Document substr-rw

[08:14] <dalek> doc: review: https://github.com/perl6/doc/commit/0f60edd676

[08:14] *** fhelmberger joined
[08:15] *** fhelmberger left
[08:15] *** fhelmberger joined
[08:16] *** fhelmberger left
[08:16] *** fhelmberger joined
[08:17] *** fhelmberger left
[08:17] *** fhelmberger joined
[08:18] *** fhelmberger left
[08:18] *** fhelmberger joined
[08:19] *** fhelmberger left
[08:19] *** fhelmberger joined
[08:20] *** fhelmberger left
[08:20] *** fhelmberger joined
[08:21] *** fhelmberger left
[08:21] *** fhelmberger joined
[08:22] *** fhelmberger left
[08:22] *** fhelmberger joined
[08:23] *** abraxxa joined
[08:23] *** fhelmberger left
[08:23] *** fhelmberger_ joined
[08:24] *** fhelmberger_ left
[08:24] *** fhelmberger joined
[08:26] *** fhelmberger left
[08:26] *** fhelmberger_ joined
[08:26] <jnthn> morning, #perl6

[08:26] *** fhelmberger_ left
[08:26] *** fhelmberger joined
[08:27] *** fhelmberger left
[08:27] <FROGGS> morning jnthn 

[08:27] *** cschwenz joined
[08:28] *** fhelmberger joined
[08:28] <RabidGravy> erp

[08:28] *** fhelmberger left
[08:29] *** fhelmberger joined
[08:29] *** fhelmberger left
[08:30] *** Ven joined
[08:30] *** fhelmberger joined
[08:30] <wentam> FROGGS, yup, adding .git to the end fixed it

[08:30] *** fhelmberger left
[08:31] *** fhelmberger joined
[08:31] *** Ven left
[08:32] *** fhelmberger left
[08:32] <FROGGS> wentam: there is a textbox on the right on this page, where you can copy from: https://github.com/wentam/Graffiks

[08:32] *** fhelmberger joined
[08:32] <wentam> yeah, that's "https://github.com/wentam/Graffiks"

[08:32] *** fhelmberger left
[08:33] <wentam> doesn't have .git on the end there

[08:33] *** fhelmberger joined
[08:33] *** bjz joined
[08:33] *** fhelmberger left
[08:34] <wentam> although

[08:34] <wentam> https://github.com/wentam/P6-Graffiks/commit/83d1b1bf8896a11cdaad7e866936f896a99625e3

[08:34] <wentam> that was half the problem

[08:34] <wentam> or perhaps all of it

[08:34] *** fhelmberger joined
[08:35] *** fhelmberger left
[08:35] *** fhelmberger joined
[08:36] *** fhelmberger left
[08:36] *** fhelmberger joined
[08:36] <dalek> snake: 2a05e1b | arnsholt++ | src/Snake/Metamodel/ClassHOW.nqp:

[08:36] <dalek> snake: Add forgotten change for previous commit.

[08:36] <dalek> snake: review: https://github.com/arnsholt/snake/commit/2a05e1b9f0

[08:36] <dalek> snake: 81db926 | arnsholt++ | src/setting/builtins.py:

[08:36] <dalek> snake: Simple first implementation of isinstance().

[08:36] *** dalek left
[08:37] *** fhelmberger left
[08:37] *** dalek joined
[08:37] *** ChanServ sets mode: +v dalek

[08:37] *** fhelmberger_ joined
[08:37] <arnsholt> dalek: Sorry! =)

[08:37] <arnsholt> botsnack

[08:37] <synbot6> om nom nom

[08:37] <arnsholt> Oops, wrong bot. Oh well

[08:38] *** fhelmberger_ left
[08:38] *** larion joined
[08:38] *** fhelmberger joined
[08:38] <jnthn> synbot6 noms all the snacks

[08:39] *** fhelmberger left
[08:39] <jnthn> .oO( Dining bots problem )

[08:39] *** fhelmberger joined
[08:40] *** fhelmberger left
[08:40] *** fhelmberger joined
[08:41] *** fhelmberger left
[08:41] *** fhelmberger joined
[08:42] *** espadrine_ left
[08:42] *** fhelmberger left
[08:42] *** fhelmberger joined
[08:43] *** fhelmberger left
[08:43] *** fhelmberger joined
[08:44] <dalek> doc: b2d6863 | RabidGravy++ | lib/Type/IO/Path.pod:

[08:44] <dalek> doc: Missing colons after invocant type in signatures

[08:44] <dalek> doc: review: https://github.com/perl6/doc/commit/b2d6863d2a

[08:44] <dalek> doc: 744bf16 | RabidGravy++ | / (2 files):

[08:44] <dalek> doc: Merge branch 'master' of github.com:perl6/doc

[08:44] <dalek> doc: review: https://github.com/perl6/doc/commit/744bf1648c

[08:44] *** bin_005 joined
[08:44] *** fhelmberger left
[08:44] *** fhelmberger joined
[08:45] <_itz>  /last youtube

[08:45] *** fhelmberger left
[08:45] <_itz> oops

[08:45] *** fhelmberger joined
[08:46] *** fhelmberger_ joined
[08:46] *** fhelmberger left
[08:47] <RabidGravy> _itz, are you still working at that place?

[08:47] *** fhelmberger_ left
[08:48] *** fhelmberger joined
[08:48] <_itz> no I walked out because I wanted to do something more interesting

[08:48] <RabidGravy> _itz++

[08:48] <_itz> 3 years in a bank is enough :)

[08:48] *** fhelmberger left
[08:48] <RabidGravy> yeah 5 years ruined me

[08:49] *** fhelmberger joined
[08:50] *** fhelmberger left
[08:50] *** fhelmberger joined
[08:50] <jnthn> I talked to bank recruiters at the compsci career fair some years back and 5 minutes talking to them was enough of the bank industry for me. :-)

[08:50] <nwc10> _itz: any plans on how to spend your ill gotten gains?

[08:50] *** fhelmberger left
[08:50] <nwc10> ("CFT" ?)

[08:51] <nwc10> duetting with RabidGravy?

[08:51] *** fhelmberger joined
[08:51] <_itz> playing with perl6

[08:51] <[ptc]> _itz++

[08:51] <yoleaux> 8 Jun 2015 23:43Z <japhb> [ptc]: Re: specs commit 5557888, I don't think the original meant "can be aliased also", I think it meant "can be the target of an alias", so the 'to' would be correct (though I recognize it's confusing wording all around)

[08:51] <nwc10> yay

[08:51] <nwc10> "right answer" :-)

[08:51] *** fhelmberger left
[08:52] *** fhelmberger joined
[08:52] <[ptc]> _itz: ok, I'll look at the wording of the specs again and see if I can make it clearer

[08:53] *** fhelmberger left
[08:53] <dalek> specs: 939451c | paultcochrane++ | S32-setting-library/Str.pod:

[08:53] <dalek> specs: Add an initial string so that the code example runs

[08:53] <dalek> specs: review: https://github.com/perl6/specs/commit/939451c3c1

[08:53] *** fhelmberger joined
[08:53] <RabidGravy> :) I can definitely say I have used my CFT more for ruining software than I have making music, I did a small drum loop for Laica last week but have significantly upped my github stats

[08:53] *** fhelmberger left
[08:54] *** fhelmberger joined
[08:55] *** fhelmberger left
[08:55] *** fhelmberger joined
[08:55] <RabidGravy> In music/programming crossover I discussed with Robin Gareus the possibility of making silan a shared library so I can make a P6 binding

[08:56] *** fhelmberger left
[08:56] *** fhelmberger joined
[08:57] <dalek> specs: b4b49fc | paultcochrane++ | S32-setting-library/Str.pod:

[08:57] <dalek> specs: Improve wording about substr-rw aliasing

[08:57] <dalek> specs: 

[08:57] <dalek> specs: Thanks to itz++ for pointing out the sentence's meaning.

[08:57] <dalek> specs: review: https://github.com/perl6/specs/commit/b4b49fcd52

[08:57] *** fhelmberger left
[08:57] *** fhelmberger joined
[08:57] <_itz> that wasn't actually me!

[08:58] *** fhelmberger left
[08:58] *** fhelmberger joined
[08:59] *** fhelmberger left
[08:59] *** fhelmberger joined
[09:00] *** fhelmberger left
[09:00] *** fhelmberger joined
[09:01] *** fhelmberger left
[09:01] *** espadrine_ joined
[09:01] *** fhelmberger joined
[09:02] *** fhelmberger left
[09:02] *** fhelmberger joined
[09:03] *** fhelmberger left
[09:03] *** fhelmberger joined
[09:04] *** fhelmberger left
[09:04] *** fhelmberger joined
[09:05] *** fhelmberger_ joined
[09:05] *** fhelmberger left
[09:06] *** amurf joined
[09:06] *** fhelmberger_ left
[09:06] *** fhelmberger joined
[09:08] *** fhelmberger left
[09:08] *** fhelmberger_ joined
[09:08] *** fhelmberger_ left
[09:09] *** fhelmberger joined
[09:09] *** aborazmeh left
[09:09] *** fhelmberger left
[09:10] *** fhelmberger joined
[09:11] *** fhelmberger left
[09:11] *** fhelmberger joined
[09:11] *** amurf left
[09:12] *** fhelmberger left
[09:12] *** Ven joined
[09:12] *** fhelmberger joined
[09:13] *** fhelmberger left
[09:13] *** fhelmberger joined
[09:14] *** fhelmberger left
[09:14] *** fhelmberger joined
[09:15] *** fhelmberger left
[09:15] *** fhelmberger joined
[09:16] *** fhelmberger left
[09:16] *** fhelmberger joined
[09:17] *** fhelmberger left
[09:17] *** zakharyas joined
[09:17] *** fhelmberger joined
[09:18] *** fhelmberger left
[09:18] *** fhelmberger joined
[09:18] *** bin_005 left
[09:18] *** espadrine_ left
[09:19] *** fhelmberger left
[09:19] *** fhelmberger joined
[09:19] *** mr-fooba_ left
[09:20] *** mr-foobar joined
[09:20] *** fhelmberger left
[09:20] *** fhelmberger joined
[09:21] *** fhelmberger left
[09:21] *** fhelmberger joined
[09:22] <[ptc]> _itz: you're right, bugger.  I misread 

[09:22] <[ptc]> the line

[09:22] *** espadrine_ joined
[09:22] <[ptc]> ... and obviously can't type anymore

[09:22] *** fhelmberger left
[09:22] *** fhelmberger joined
[09:23] <[ptc]> japhb++ # for pointing out the correct meaning about aliasing (and sorry for not mentioning you correctly in the commit!)

[09:23] *** fhelmberger left
[09:23] *** fhelmberger joined
[09:24] *** fhelmberger_ joined
[09:24] *** fhelmberger left
[09:25] *** fhelmberger_ left
[09:25] *** fhelmberger joined
[09:26] *** _mg_ left
[09:26] *** espadrine_ left
[09:26] *** _mg_ joined
[09:26] *** fhelmberger left
[09:26] *** espadrine_ joined
[09:26] *** fhelmberger joined
[09:27] *** fhelmberger left
[09:27] *** fhelmberger joined
[09:28] *** fhelmberger left
[09:29] *** fhelmberger joined
[09:29] *** fhelmberger left
[09:29] *** Ven left
[09:30] *** fhelmberger joined
[09:30] *** fhelmberger left
[09:31] *** fhelmberger joined
[09:31] *** fhelmberger left
[09:32] *** fhelmberger joined
[09:33] *** fhelmberger left
[09:33] *** fhelmberger joined
[09:34] *** fhelmberger left
[09:34] *** fhelmberger joined
[09:34] *** zakharyas left
[09:35] *** fhelmberger left
[09:35] *** fhelmberger joined
[09:35] *** fhelmberger left
[09:36] *** fhelmberger joined
[09:37] *** fhelmberger left
[09:37] *** fhelmberger joined
[09:38] *** fhelmberger left
[09:38] *** fhelmberger joined
[09:39] *** fhelmberger left
[09:39] *** fhelmberger joined
[09:40] *** fhelmberger left
[09:40] *** fhelmberger joined
[09:41] *** fhelmberger left
[09:41] *** fhelmberger joined
[09:42] *** fhelmberger left
[09:42] *** fhelmberger joined
[09:43] *** fhelmberger left
[09:43] *** fhelmberger joined
[09:44] *** fhelmberger left
[09:44] *** fhelmberger joined
[09:45] *** fhelmberger_ joined
[09:45] *** fhelmberger left
[09:46] *** fhelmberger joined
[09:46] *** fhelmberger_ left
[09:47] *** fhelmberger_ joined
[09:47] *** fhelmberger left
[09:48] *** fhelmberger joined
[09:48] *** fhelmberger_ left
[09:50] *** fhelmberger left
[09:50] *** fhelmberger_ joined
[09:50] *** bin_005 joined
[09:50] *** fhelmberger_ left
[09:50] <RabidGravy> has anyone done anything like "Alien" to assist in working with thirdparty libraries/applications that may need to be installed?

[09:51] *** fhelmberger joined
[09:52] *** fhelmberger left
[09:52] *** fhelmberger joined
[09:52] *** fhelmberger left
[09:53] *** fhelmberger joined
[09:54] *** fhelmberger left
[09:54] *** fhelmberger joined
[09:55] *** fhelmberger left
[09:55] *** fhelmberger joined
[09:56] *** fhelmberger left
[09:56] *** fhelmberger joined
[09:56] <FROGGS> RabidGravy: for P5, yes

[09:56] *** fhelmberger left
[09:57] *** fhelmberger joined
[09:57] <RabidGravy> er, for P6 the P5 one was what I meant by "like Alien" ;-p

[09:57] *** vendethiel left
[09:57] <RabidGravy> anyway just off out for a bit

[09:58] *** fhelmberger left
[09:58] *** fhelmberger joined
[09:59] *** fhelmberger left
[09:59] *** fhelmberger joined
[10:00] *** fhelmberger left
[10:00] *** fhelmberger joined
[10:01] *** fhelmberger left
[10:01] *** fhelmberger joined
[10:01] *** araujo left
[10:02] *** RabidGravy left
[10:02] *** fhelmberger left
[10:02] *** fhelmberger joined
[10:02] *** araujo joined
[10:03] *** fhelmberger left
[10:03] *** fhelmberger joined
[10:04] *** fhelmberger left
[10:04] *** fhelmberger joined
[10:05] *** fhelmberger left
[10:05] *** vendethiel joined
[10:05] *** fhelmberger joined
[10:06] *** fhelmberger_ joined
[10:06] *** fhelmberger left
[10:07] *** fhelmberger joined
[10:07] *** fhelmberger_ left
[10:09] *** fhelmberger left
[10:09] *** fhelmberger_ joined
[10:09] *** abraxxa left
[10:09] *** fhelmberger_ left
[10:10] *** fhelmberger joined
[10:10] *** abraxxa joined
[10:10] *** fhelmberger left
[10:11] *** fhelmberger joined
[10:11] *** _mg_ left
[10:11] *** fhelmberger left
[10:12] *** fhelmberger joined
[10:13] *** fhelmberger left
[10:13] *** fhelmberger joined
[10:14] *** fhelmberger left
[10:14] *** fhelmberger joined
[10:14] *** fhelmberger left
[10:15] *** fhelmberger joined
[10:15] *** Ven joined
[10:15] <Ven> Wow. I just learned that Perl6 allowed to resume exeptions o_o

[10:15] *** fhelmberger left
[10:16] *** fhelmberger joined
[10:16] <Ven> that's totally amazing. brrt++

[10:16] *** fhelmberger left
[10:17] *** fhelmberger joined
[10:18] *** fhelmberger left
[10:18] *** fhelmberger joined
[10:19] *** fhelmberger left
[10:19] *** fhelmberger joined
[10:20] *** fhelmberger left
[10:20] *** fhelmberger joined
[10:21] *** fhelmberger left
[10:21] *** cschwenz left
[10:21] *** fhelmberger joined
[10:22] *** fhelmberger left
[10:22] <Ven> (yes, many people will say "lisp had that 30 years ago". I'm still happy :P)

[10:22] *** fhelmberger joined
[10:23] *** fhelmberger left
[10:23] *** fhelmberger joined
[10:24] *** fhelmberger left
[10:24] *** fhelmberger joined
[10:25] *** fhelmberger left
[10:25] *** fhelmberger joined
[10:26] *** fhelmberger left
[10:26] *** fhelmberger joined
[10:27] *** fhelmberger left
[10:27] *** fhelmberger joined
[10:28] *** uncleyea1 is now known as uncleyear

[10:28] *** fhelmberger left
[10:28] *** uncleyear left
[10:28] *** uncleyear joined
[10:28] *** fhelmberger joined
[10:29] *** fhelmberger left
[10:30] *** fhelmberger joined
[10:30] *** llfourn_ joined
[10:30] *** fhelmberger left
[10:31] *** llfourn left
[10:31] *** fhelmberger joined
[10:31] *** fhelmberger left
[10:32] *** fhelmberger joined
[10:33] *** fhelmberger left
[10:33] *** fhelmberger joined
[10:34] *** fhelmberger left
[10:34] *** fhelmberger joined
[10:35] *** fhelmberger left
[10:35] *** fhelmberger joined
[10:35] *** fhelmberger left
[10:36] *** fhelmberger joined
[10:37] *** fhelmberger left
[10:37] *** fhelmberger joined
[10:38] *** fhelmberger left
[10:38] *** fhelmberger joined
[10:39] *** fhelmberger left
[10:39] *** fhelmberger joined
[10:39] *** ab6tract joined
[10:40] *** fhelmberger left
[10:40] <ab6tract> .tell moritz thanks for the github org invite! should I also be filling in some paperwork for TPF?

[10:40] <yoleaux> ab6tract: I'll pass your message to moritz.

[10:40] *** fhelmberger joined
[10:40] *** cognominal joined
[10:41] *** fhelmberger left
[10:41] *** fhelmberger joined
[10:42] *** fhelmberger left
[10:42] <Ven> ab6tract: I think it's only for moar?

[10:42] *** fhelmberger joined
[10:43] *** fhelmberger left
[10:43] *** fhelmberger joined
[10:44] <ab6tract> Ven: the paperwork?

[10:44] <Ven> ab6tract: yes. maybe also for nqp?

[10:44] *** fhelmberger left
[10:44] <jnthn> The paperwork is for Rakudo

[10:44] <ab6tract> I thought it was for all the perl6/ repos... so rakudo is not under TPF? 

[10:44] <Ven> ah, it's for rakudo

[10:44] <ab6tract> ok, thanks for clearing up jnthn

[10:44] <Ven> well, considering the number of PRs you sent, someone would've asked you sooner ab6tract  :P

[10:45] *** fhelmberger joined
[10:45] *** fhelmberger_ joined
[10:45] <ab6tract> Ven: having trouble parsing whether that was a jab or not :P

[10:46] <Ven> ab6tract: not sure what a "jab" is :)

[10:46] <ab6tract> Ven: 'diss'? 'smack talk'? not sure what the kids are calling it these days ;)

[10:46] *** fhelmberger_ left
[10:46] <Ven> ab6tract: would it be better if I had wrote ab6tract++ (as meant) there? :)

[10:46] *** fhelmberger_ joined
[10:47] <ab6tract> :)

[10:47] <ab6tract> it's usually the :P that throws me off

[10:47] *** fhelmberger_ left
[10:47] <ab6tract> thanks for clarifying :)

[10:47] *** fhelmberger_ joined
[10:49] *** fhelmberger_ left
[10:49] *** fh joined
[10:49] *** tinyblak_ joined
[10:49] *** fhelmberger left
[10:49] *** fh left
[10:50] *** fhelmberger joined
[10:51] *** fhelmberger left
[10:51] *** fhelmberger joined
[10:52] *** fhelmberger left
[10:52] *** fhelmberger_ joined
[10:52] <ab6tract> ahh, if nothing else fhelmberger has successfully taught me how to disable part/join messages in two separate clients

[10:52] *** fhelmberger_ left
[10:53] *** tinyblak left
[10:53] *** fhelmberger joined
[10:53] <jnthn> I was too lazy and just did /ignore :P

[10:53] *** fhelmberger left
[10:53] <nwc10> we've *just* bothered to get ops on #austria.pm and (try to) ban it

[10:54] *** fhelmberger joined
[10:54] <nwc10> if we knew where he lived...

[10:55] *** fhelmberger left
[10:55] *** fhelmberger joined
[10:55] <nwc10> OK, less than 5ms from here

[10:55] <nwc10> less than 1.8ms from our colo

[10:55] *** fhelmberger left
[10:56] *** amurf joined
[10:56] <nwc10> actually, that's the hop before

[10:56] *** fhelmberger joined
[10:57] *** fhelmberger left
[10:57] *** fhelmberger joined
[10:57] *** fhelmberger left
[10:58] *** fhelmberger joined
[10:59] *** fhelmberger left
[10:59] <[ptc]> nwc10: you're in .at, you could drop in and say gudday ;-)

[10:59] *** fhelmberger joined
[10:59] <nwc10> [ptc]: "if we knew where he lived..."

[10:59] <nwc10> also, I don't want to get arrested

[10:59] <[ptc]> true :-)

[11:00] <nwc10> well, I'd go round and deliver a postcard or something

[11:00] *** fhelmberger left
[11:00] *** fhelmberger_ joined
[11:00] <tadzik> One for each join, one for each part

[11:00] *** amurf left
[11:00] <nwc10> [ptc]: my suspicion is that he's only a few km from me

[11:01] <nwc10> tadzik: my arms would fall off

[11:01] *** fhelmberger_ left
[11:01] <[ptc]> nwc10: well, .at isn't that big :-P

[11:01] <nwc10> reverse DNS suggests that he's in vienna

[11:01] *** fhelmberger joined
[11:01] <jnthn> well darn it

[11:02] <jnthn> After that wild goose chase...it turns out that I do still have a regression thanks to my fix...and it *is* specific to the JIT

[11:02] *** fhelmberger left
[11:02] *** Ven left
[11:02] <nwc10> there was a real goose at the end of your chase

[11:02] *** fhelmberger joined
[11:02] <nwc10> so, seems "2 real bugs"

[11:02] <nwc10> 1 of which is splaatted?

[11:03] *** fhelmberger left
[11:03] *** fhelmberger joined
[11:04] *** fhelmberger left
[11:04] *** fhelmberger joined
[11:05] *** smls joined
[11:05] *** fhelmberger left
[11:05] *** fhelmberger joined
[11:06] *** fhelmberger_ joined
[11:06] *** fhelmberger left
[11:07] *** fhelmberger_ left
[11:07] *** fhelmberger joined
[11:08] *** fhelmberger left
[11:08] *** fhelmberger joined
[11:09] <jnthn> Something like

[11:09] *** fhelmberger left
[11:10] *** fhelmberger joined
[11:10] *** Sqirrel left
[11:10] <jnthn> I'm guessing the JIT badly handles...something. I don't know what yet.

[11:10] *** fhelmberger left
[11:10] <smls> moritz: http://doc.perl6.org/type-basic.html <-- something broke?

[11:11] *** fhelmberger joined
[11:12] *** fhelmberger left
[11:12] *** fhelmberger joined
[11:13] *** fhelmberger left
[11:13] *** fhelmberger joined
[11:13] <[ptc]> smls: that problem has been around for a while now (a couple of weeks or so)

[11:13] *** fhelmberger left
[11:14] <[ptc]> smls: no idea what's causing it, and the issue seems to be buried deep down in how htmlify.p6 is doing its processing

[11:14] *** fhelmberger joined
[11:14] <[ptc]> smls: http://doc.perl6.org/type.html  still works though

[11:14] <smls> right

[11:14] *** fhelmberger left
[11:15] *** fhelmberger joined
[11:16] *** fhelmberger left
[11:16] *** fhelmberger joined
[11:17] *** fhelmberger left
[11:17] *** fhelmberger joined
[11:18] *** fhelmberger left
[11:18] *** fhelmberger joined
[11:19] *** fhelmberger left
[11:19] *** Sqirrel joined
[11:19] *** fhelmberger joined
[11:20] *** fhelmberger left
[11:20] *** fhelmberger joined
[11:21] *** fhelmberger left
[11:21] *** fhelmberger joined
[11:21] <[ptc]> interesting... I just turned off the JIT and now panda segfaults when bootstrapping

[11:22] *** fhelmberger left
[11:22] <jnthn> [ptc]: Almost certainly fixed in MoarVM HEAD

[11:22] *** fhelmberger joined
[11:23] *** fhelmberger left
[11:23] *** fhelmberger joined
[11:24] <[ptc]> jnthn: I'm building with --gen-moar so thought I was using HEAD.  I'll merge the latest Rakudo HEAD and see if that helps

[11:24] *** fhelmberger left
[11:24] *** fhelmberger joined
[11:25] *** fhelmberger left
[11:25] *** fhelmberger joined
[11:26] <jnthn> [ptc]: Thta uses the MOAR_REVISION/NQP_REVISION

[11:26] <jnthn> Which I didn't bump yet

[11:27] <arnsholt> --gen-moar=master might work?

[11:28] <[ptc]> you're right it's not head

[11:28] <[ptc]> would --gen-moar=HEAD work?  

[11:30] *** fhelmberger left
[11:30] <jnthn> What arnsholt said, I think

[11:30] <[ptc]> just trying it with =HEAD and it pulled in master, which seems logical

[11:31] <[ptc]> although =master is probably the better way to do it

[11:33] *** fhelmberger joined
[11:34] *** fhelmberger left
[11:34] *** fhelmberger joined
[11:34] *** espadrine joined
[11:35] *** fhelmberger left
[11:35] *** fhelmberger joined
[11:35] <[ptc]> thanks jnthn++, panda works again with moar HEAD and without jit

[11:35] *** fhelmberger left
[11:36] *** fhelmberger joined
[11:36] <[ptc]> although DBIish still gives the "Cannot invoke null object" error with a JIT-less moar

[11:37] *** fhelmberger left
[11:37] <jnthn> And with JIT?

[11:37] *** fhelmberger joined
[11:38] *** fhelmberger left
[11:38] *** espadrine_ left
[11:38] <[ptc]> hang on a tick

[11:38] *** fhelmberger joined
[11:38] * [ptc] rebuilds moar/nqp/rakudo

[11:39] *** fhelmberger left
[11:39] *** fhelmberger joined
[11:40] *** fhelmberger left
[11:40] *** fhelmberger joined
[11:41] *** fhelmberger left
[11:41] *** fhelmberger joined
[11:42] *** fhelmberger left
[11:42] *** fhelmberger joined
[11:43] *** fhelmberger left
[11:43] *** fhelmberger joined
[11:44] *** fhelmberger left
[11:44] *** Ven joined
[11:44] *** fhelmberger joined
[11:44] * Ven will present perl6 at a "in-school meetup" tomorrow

[11:44] <[ptc]> jnthn: barfs with the same error with and without JIT

[11:45] <Ven> task: building a "tv show episodes classifier" in perl6 (cli)

[11:45] *** Ven left
[11:45] *** fhelmberger left
[11:45] *** fhelmberger joined
[11:46] *** fhelmberger left
[11:46] *** fhelmberger joined
[11:47] *** fhelmberger_ joined
[11:47] *** fhelmberger left
[11:48] *** fhelmberger joined
[11:48] *** fhelmberger_ left
[11:49] *** _mg_ joined
[11:49] *** fhelmberger left
[11:50] *** fhelmberger joined
[11:50] <FROGGS> Ven++

[11:50] *** fhelmberger left
[11:51] *** fhelmberger joined
[11:51] *** fhelmberger left
[11:52] *** fhelmberger joined
[11:53] *** fhelmberger left
[11:53] *** fhelmberger joined
[11:53] *** bin_005 left
[11:53] *** fhelmberger left
[11:54] *** Ven joined
[11:54] *** fhelmberger joined
[11:54] *** fhelmberger left
[11:55] *** fhelmberger joined
[11:55] *** fhelmberger left
[11:56] *** fhelmberger joined
[11:56] *** fhelmberger left
[11:57] *** fhelmberger joined
[11:57] *** fhelmberger left
[11:58] <smls> Perl 6 feature idea of the day: Let .deepmap and .duckmap check the callback's signature (like .sort does), and if it allows more than one argument, pass the full path of indices+value at the current iteration!

[11:58] <smls> So that this:

[11:58] *** fhelmberger joined
[11:58] <smls> {foo=>[10, 20], bar => 30}.deepmap(-> *@_ { dd @_ })

[11:58] <smls> Would print:

[11:58] <smls> ('foo', 0, 10)

[11:58] <smls> ('foo', 1, 20)

[11:58] <smls> ('bar', 30)

[11:59] *** fhelmberger left
[11:59] <smls> Or maybe it should be controlled by a :path adverb and not the signature.

[11:59] <smls> But in any case, I think it would be useful.

[11:59] *** fhelmberger joined
[11:59] *** zakharyas joined
[12:00] *** fhelmberger left
[12:00] *** fhelmberger joined
[12:01] *** yqt joined
[12:01] *** fhelmberger left
[12:01] *** fhelmberger joined
[12:02] *** fhelmberger left
[12:02] *** ab6tract left
[12:02] *** fhelmberger joined
[12:03] *** fhelmberger left
[12:03] *** fhelmberger joined
[12:03] <Ven> m: { my $x = "a"; say $x; die 1 if True; say $x; CATCH { default { $x++; $_.resume; } } }; say 1;

[12:03] <camelia> rakudo-moar 228168: OUTPUT«a␤b␤1␤»

[12:04] *** fhelmberger left
[12:04] *** fhelmberger joined
[12:05] *** fhelmberger left
[12:05] *** fhelmberger joined
[12:06] *** fhelmberger left
[12:06] *** fhelmberger joined
[12:07] *** fhelmberger_ joined
[12:07] *** fhelmberger left
[12:08] *** gfldex left
[12:08] *** fhelmberger_ left
[12:08] <dalek> nqp: e8bb160 | jnthn++ | tools/build/MOAR_REVISION:

[12:08] <dalek> nqp: Bump MOAR_REVISION.

[12:08] <dalek> nqp: 

[12:08] <dalek> nqp: Gets us numerous fixes, mostly related to exceptions and optimization.

[12:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e8bb1608be

[12:08] <FROGGS> \o/

[12:08] *** fhelmberger joined
[12:09] <dalek> rakudo/nom: 2aad0b2 | jnthn++ | tools/build/NQP_REVISION:

[12:09] *** fhelmberger left
[12:09] <dalek> rakudo/nom: Bump NQP_REVISION for updated MoarVM.

[12:09] <dalek> rakudo/nom: 

[12:09] <dalek> rakudo/nom: This bump includes a resolution for RT #124191.

[12:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2aad0b20ac

[12:09] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=124191

[12:09] *** fhelmberger_ joined
[12:10] <dalek> roast: 3b3af27 | jnthn++ | S04-exception-handlers/catch.t:

[12:10] <dalek> roast: Test for RT #124191.

[12:10] <dalek> roast: review: https://github.com/perl6/roast/commit/3b3af27327

[12:10] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=124191

[12:11] *** fhelmberger_ left
[12:11] *** fhelmberger joined
[12:11] * smls is skeptical about resumable exceptions

[12:11] *** fhelmberger left
[12:11] <smls> Aren't they, by definition, action at a distance?

[12:12] *** fhelmberger joined
[12:12] *** joe6780 joined
[12:12] *** fhelmberger left
[12:13] <joe6780> hello

[12:13] *** fhelmberger joined
[12:13] *** anaeem1_ left
[12:13] <jnthn> smls: The place you're most likely to actually take advantage of them is with warnings.

[12:13] <jnthn> smls: Which are implemented as resumable exceptions.

[12:13] *** fhelmberger left
[12:13] *** joe6780 left
[12:14] <jnthn> lunch time &

[12:14] *** fhelmberger joined
[12:14] <smls> .oO( Code A: Welp, I can't continue with this state, the only safe thing is to bail out.   Code B: I don't know what things actually look like at A, but whatever, I'll just force it to continue! *evil laughter*)

[12:14] <Ven> smls: they're in lexical scope of the "try" block

[12:14] *** fhelmberger left
[12:15] <Ven> do you consider exceptions action-at-a-distance? resumable exceptions have the same distance

[12:15] *** fhelmberger joined
[12:15] <smls> I suppose with warnings it should be safe

[12:15] <Ven> smls: I'd recommend reading http://c2.com/cgi/wiki?CommonLispConditionSystem, it's *really* interesting

[12:15] <smls> ok

[12:16] *** fhelmberger left
[12:16] *** fhelmberger joined
[12:16] *** fhelmberger left
[12:17] *** fhelmberger joined
[12:18] *** fhelmberger left
[12:18] <_itz> can anyone actually login to http://www.sicpdistilled.com (which looks interesting) or is the github auth broken just for me?

[12:18] *** fhelmberger joined
[12:18] *** cognominal left
[12:19] *** fhelmberger left
[12:19] *** fhelmberger joined
[12:20] *** fhelmberger left
[12:20] *** fhelmberger joined
[12:21] *** fhelmberger left
[12:21] *** fhelmberger joined
[12:22] *** fhelmberger left
[12:22] *** fhelmberger joined
[12:23] *** fhelmberger left
[12:23] *** fhelmberger joined
[12:24] *** fhelmberger left
[12:24] *** fhelmberger joined
[12:25] *** fhelmberger left
[12:25] *** fhelmberger joined
[12:26] *** fhelmberger left
[12:26] *** fhelmberger joined
[12:27] <sue_> I see the big green 'authorize application' button

[12:27] *** fhelmberger left
[12:27] <sue_> do you get that far, or must i authorize this unknown thing to finish the test?

[12:27] <Ven> _itz: confirm it's broken

[12:27] *** fhelmberger joined
[12:28] <sue_> looks unfinished

[12:28] *** fhelmberger left
[12:28] *** fhelmberger joined
[12:29] <psch> hi #perl6 o/

[12:29] <psch> i just had to learn how to change my ssh keyfile password

[12:29] *** fhelmberger left
[12:30] *** fhelmberger joined
[12:30] <psch> ...'cause having my old one in hacks login log won't do 

[12:30] <psch> that's what i get for trying to use putty i guess

[12:30] *** fhelmberger left
[12:30] *** fhelmberger joined
[12:32] *** fhelmberger left
[12:32] *** fhelmberger joined
[12:32] *** zakharyas left
[12:32] *** fhelmberger left
[12:33] *** fhelmberger joined
[12:34] *** fhelmberger left
[12:34] *** fhelmberger joined
[12:35] *** fhelmberger left
[12:35] <_itz> thanks

[12:35] *** fhelmberger joined
[12:36] *** fhelmberger left
[12:36] *** fhelmberger joined
[12:37] *** fhelmberger left
[12:37] *** fhelmberger joined
[12:38] *** fhelmberger left
[12:38] *** fhelmberger joined
[12:39] *** fhelmberger left
[12:39] *** fhelmberger joined
[12:40] *** fhelmberger left
[12:40] *** fhelmberger joined
[12:41] *** fhelmberger left
[12:41] *** fhelmberger joined
[12:42] *** fhelmberger left
[12:42] *** fhelmberger joined
[12:43] *** fhelmberger left
[12:43] <psch> hm, skimming through the clog there was something about .class and .jar files from p6 programs

[12:43] *** fhelmberger joined
[12:43] <psch> i wonder if that's for something like standalone jar executables 

[12:44] *** fhelmberger left
[12:44] <psch> i think i'll try and see if i get that working, anyway

[12:44] <psch> i've been gone too long to dive right back into MOP stuff :s

[12:44] *** fhelmberger joined
[12:45] *** fhelmberger left
[12:45] *** fhelmberger joined
[12:46] *** ShimmerFairy left
[12:46] <smls> sub list-substract (@a, @b) { my %b := set @b; @a.grep({ !%b{$_} }) }

[12:46] *** fhelmberger left
[12:46] <smls> masak: ^^this is what I use for "set difference, but preserving order"

[12:46] *** fhelmberger joined
[12:47] *** fhelmberger left
[12:47] *** fhelmberger joined
[12:48] <smls> Seems to be both shorter and faster than the Hash-based solutions posted to your "mini-challenge" two weeks ago, not to mention it can handle arbitrary objects.

[12:48] *** fhelmberger left
[12:48] *** fhelmberger_ joined
[12:49] *** fhelmberger joined
[12:49] *** fhelmberger_ left
[12:51] *** fhelmberger left
[12:51] *** fhelmberger_ joined
[12:51] *** fhelmberger_ left
[12:51] *** fhelmberger joined
[12:53] *** fhelmberger left
[12:53] *** fhelmberger joined
[12:54] *** fhelmberger left
[12:54] *** fhelmberger_ joined
[12:54] <FROGGS> hi psch 

[12:54] *** fhelmberger_ left
[12:55] *** andreoss joined
[12:55] *** fhelmberger joined
[12:55] <psch> hey FROGGS

[12:55] *** fhelmberger left
[12:56] *** fhelmberger joined
[12:57] *** fhelmberger left
[12:57] *** fhelmberger joined
[12:58] *** fhelmberger left
[12:58] *** fhelmberger joined
[12:58] <colomon> sub list-substract (@a, @b) { @a.grep(* ∉ @b ) };  # shorter but probably slower

[12:58] <colomon> m: sub list-substract (@a, @b) { @a.grep(* ∉ @b ) }; say list-subtract(<a b c>, <b d e>)  # shorter but probably slower

[12:58] <camelia> rakudo-moar 2aad0b: OUTPUT«5===SORRY!5=== Error while compiling /tmp/q1nrf7p5nu␤Undeclared routine:␤    list-subtract used at line 1. Did you mean 'list-substract'?␤␤»

[12:59] *** fhelmberger left
[12:59] <colomon> m: sub list-subtract (@a, @b) { @a.grep(* ∉ @b ) }; say list-subtract(<a b c>, <b d e>)  # shorter but probably slower

[12:59] <camelia> rakudo-moar 2aad0b: OUTPUT«a c␤»

[12:59] *** fhelmberger joined
[12:59] *** ShimmerFairy joined
[13:00] *** fhelmberger left
[13:00] *** fhelmberger joined
[13:00] <Ven> m: my @a = <a b c>; my @b = <b d e>; say @a (-) @b;

[13:00] <camelia> rakudo-moar 2aad0b: OUTPUT«set(a, c)␤»

[13:00] <Ven> m: my @a = <a b c>; my @b = <b d e>; say list @a (-) @b;

[13:00] <camelia> rakudo-moar 2aad0b: OUTPUT«set(a, c)␤»

[13:01] *** fhelmberger left
[13:01] <andreoss> m: my $x = "a" x 100; say $x ~~ /a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/

[13:01] *** fhelmberger joined
[13:01] <dalek> ecosystem: 915ea34 | hoelzro++ | META.list:

[13:01] <dalek> ecosystem: Add PriorityQueue to module listing

[13:01] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/915ea34e3d

[13:01] <camelia> rakudo-moar 2aad0b: OUTPUT«(timeout)»

[13:02] <Ven> m: my $x = "a" x 100; say $x ~~ /:r a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/

[13:02] <camelia> rakudo-moar 2aad0b: OUTPUT«Nil␤»

[13:02] *** fhelmberger left
[13:02] *** fhelmberger joined
[13:03] *** fhelmberger left
[13:03] *** fhelmberger joined
[13:04] *** fhelmberger left
[13:04] <andreoss> Ven: but it should be "a" x 100

[13:04] *** fhelmberger joined
[13:05] <Ven> m: my $x = "a" x 100; say $x ~~ m:r/a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/

[13:05] <camelia> rakudo-moar 2aad0b: OUTPUT«False␤»

[13:05] *** fhelmberger left
[13:05] *** fhelmberger joined
[13:06] <JimmyZ> hoelzro: https://github.com/perl6/ecosystem/commit/915ea34e3d # is wrongish :P

[13:06] <jnthn> ? is greedy, so with :r it'll never let go of the a

[13:06] *** fhelmberger left
[13:07] *** fhelmberger joined
[13:07] <andreoss> https://swtch.com/~rsc/regexp/regexp1.html

[13:07] *** fhelmberger left
[13:08] *** fhelmberger joined
[13:08] <jnthn> heh, I've seen that link so many times I don't even need to follow it any more :P

[13:08] *** RabidGravy joined
[13:08] *** fhelmberger left
[13:09] *** fhelmberger joined
[13:10] *** fhelmberger left
[13:10] *** fhelmberger joined
[13:10] *** Ven left
[13:10] *** _mg_ left
[13:11] *** fhelmberger left
[13:11] *** _mg_ joined
[13:11] *** fhelmberger joined
[13:12] *** fhelmberger left
[13:12] <jnthn> m: 0.^methods(:all).sort

[13:12] <camelia> rakudo-moar 2aad0b: OUTPUT«Code object coerced to string (please use .gist or .perl to do that)  in any p6sort at src/vm/moar/Perl6/Ops.nqp:349␤Code object coerced to string (please use .gist or .perl to do that)  in any p6sort at src/vm/moar/Perl6/Ops.nqp:349␤Code object coerce…»

[13:12] *** fhelmberger joined
[13:12] <jnthn> Wonder if the SEGV on that was one of those I fixed this morning...

[13:13] *** fhelmberger left
[13:13] <jnthn> RabidGravy: When you get chance, please could you check if ^^ no longer SEGVs on HEAD?

[13:13] <jnthn> Locally and on evalbot it seems fine

[13:13] *** fhelmberger joined
[13:14] *** fhelmberger_ joined
[13:14] *** fhelmberger left
[13:15] *** fhelmberger_ left
[13:15] *** fhelmberger joined
[13:16] <moritz>        

[13:16] <yoleaux> 10:40Z <ab6tract> moritz: thanks for the github org invite! should I also be filling in some paperwork for TPF?

[13:16] <moritz> ab5tract: are you ab6tract? :-)

[13:16] <moritz> no extra paperwork required

[13:16] *** fhelmberger left
[13:17] *** fhelmberger joined
[13:17] *** ssqq joined
[13:17] *** fhelmberger left
[13:18] *** fhelmberger joined
[13:18] <RabidGravy> jnthn: HEAD of rakudo? or moar?

[13:18] *** fhelmberger left
[13:19] *** fhelmberger joined
[13:19] *** g4 left
[13:20] *** fhelmberger left
[13:20] <jnthn> RabidGravy: Rakudo; I bumped MOAR_REVISION/NQP_REVISION already for the patches in questoin.

[13:20] <jnthn> *question

[13:20] *** fhelmberger joined
[13:20] <RabidGravy> cool, 'ang on then

[13:21] *** fhelmberger left
[13:21] <andreoss> %  time perl6 -e 'my $x = "a" x 30; say $x ~~ /a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/'

[13:21] <andreoss> real	6m46.970s

[13:21] <andreoss> %  time perl -E 'my $x = "a" x 30; say $x =~ /a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/'

[13:21] <andreoss> real	1m19.497s

[13:21] <andreoss>  

[13:21] *** fhelmberger joined
[13:21] <_itz> how do I link moar with -g ?

[13:22] *** fhelmberger left
[13:22] <timotimo> _itz: --debug=3 should put the -g into the LDFLAGS as well

[13:22] <timotimo> in the Configure.pl invocation

[13:22] <_itz> ah ty 

[13:22] *** fhelmberger joined
[13:23] *** fhelmberger left
[13:23] *** fhelmberger joined
[13:24] <dalek> ecosystem: 874a21f | (Matt Egeler)++ | META.list:

[13:24] <dalek> ecosystem: Remove duplicate item in META.list

[13:24] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/874a21f9b5

[13:24] *** fhelmberger left
[13:24] *** fhelmberger joined
[13:25] *** yqt left
[13:25] *** fhelmberger left
[13:25] *** fhelmberger joined
[13:26] *** fhelmberger left
[13:26] *** fhelmberger joined
[13:27] *** gfldex joined
[13:27] *** fhelmberger left
[13:27] *** fhelmberger joined
[13:28] *** fhelmberger_ joined
[13:28] *** fhelmberger left
[13:29] *** fhelmberger_ left
[13:29] *** fhelmberger joined
[13:30] *** fhelmberger left
[13:30] *** fhelmberger joined
[13:31] *** fhelmberger left
[13:32] *** fhelmberger joined
[13:32] <ugexe> my $sock = IO::Socket::INET.new(:host<httpbin.org>, :port(80)); $sock.send("GET /status/200 HTTP/1.1\r\nHost: httpbin.org\r\n\r\n"); $sock.input-line-separator = "\r\n\r\n"; say $sock.get().perl # input-line-separator getting tripped up? seems to do something like match the line-separator, but returns the entire line while only removing $input-line-separator.chars[*-1] instead of $input-line-separator?

[13:32] *** fhelmberger left
[13:33] *** fhelmberger joined
[13:33] *** fhelmberger left
[13:34] *** telex left
[13:34] *** fhelmberger joined
[13:34] *** telex joined
[13:34] <ugexe> if $input-line-separator = 'TT' (to match the starting "HTTP") the first line returned is 'HT'. if $input-line-separator = 'T' the first line returned is 'H'

[13:35] <RabidGravy> jnthn++, confirmed that no longer segfaults.  Obviously the example was bogus, but hey ;-)

[13:36] *** FROGGS left
[13:36] *** JimmyZ_ joined
[13:41] <RabidGravy> cdc: by the way what you really wanted was

[13:41] <RabidGravy> m: say  0.^methods(:all).sort({ $^a.gist cmp $^b.gist })

[13:41] <camelia> rakudo-moar 2aad0b: OUTPUT«ACCEPTS ACCEPTS ACCEPTS BUILDALL BUILD_LEAST_DERIVED Bool Bool Bridge CREATE Capture Complex DUMP DUMP DUMP-OBJECT-ATTRS DUMP-PIECES EVAL FOR FatRat IO Int Int Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.…»

[13:41] <RabidGravy> with some extra thing to remove the anon methods

[13:41] <jnthn> m: say  0.^methods(:all).sort(*.name) # or this?

[13:41] <camelia> rakudo-moar 2aad0b: OUTPUT«ACCEPTS ACCEPTS ACCEPTS Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new BUILDALL BUILD_LEAST_DERIVED Method+{<anon>}.new Method+{<anon>}.new Bool Bool Bridge CREATE Capture Complex Met…»

[13:42] <RabidGravy> or that

[13:42] <timotimo> maybe a .unique :P

[13:42] *** yqt joined
[13:43] <colomon> Ven: set difference is shorter, but it’s also not order preserving

[13:43] <PerlJam> m: say  0.^methods(:all).sort(*.name).unique;   

[13:43] <camelia> rakudo-moar 2aad0b: OUTPUT«ACCEPTS ACCEPTS ACCEPTS Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new Method+{<anon>}.new BUILDALL BUILD_LEAST_DERIVED Method+{<anon>}.new Method+{<anon>}.new Bool Bool Bridge CREATE Capture Complex Met…»

[13:43] <colomon> m: sub list-subtract (@a, @b) { @a.grep(* ∉ @b ) }; say list-subtract(<c b a>, <b d e>) 

[13:43] <camelia> rakudo-moar 2aad0b: OUTPUT«c a␤»

[13:43] <colomon> m: sub list-subtract (@a, @b) { @a.grep(* ∉ @b ) }; say @a (-) @b

[13:43] <camelia> rakudo-moar 2aad0b: OUTPUT«5===SORRY!5=== Error while compiling /tmp/F5ChBulsqc␤Variable '@a' is not declared␤at /tmp/F5ChBulsqc:1␤------> 3ract (@a, @b) { @a.grep(* ∉ @b ) }; say 7⏏5@a (-) @b␤»

[13:44] <colomon> m: sub list-subtract (@a, @b) { @a - @b }; say list-subtract(<c b a>, <b d e>) 

[13:44] <camelia> rakudo-moar 2aad0b: OUTPUT«0␤»

[13:44] <colomon> m: sub list-subtract (@a, @b) { @a (-) @b }; say list-subtract(<c b a>, <b d e>) 

[13:44] <camelia> rakudo-moar 2aad0b: OUTPUT«set(a, c)␤»

[13:45] *** muraiki joined
[13:46] *** Ven joined
[13:51] <Ven> Fox news talks about github... ouch... https://www.youtube.com/watch?v=k2vJNNAQZlg

[13:52] <timotimo> hahaha, yeah

[13:52] <timotimo> that video is so excellently bizzare

[13:52] <timotimo> just imagine ... they probably make this kind of mistake in many circumstances

[13:53] <psch> uhhh

[13:53] <psch> PR before fork?

[13:53] <psch> wow

[13:53] <Ven> I think fox news is pretty well known for being terrible in the US, right?

[13:53] <psch> yeah timotimo, that's scary

[13:54] <timotimo> i think everybody knows, but a gigantic amount of people still watch them and take them seriously

[13:55] <nwc10> faux news striks again?

[13:55] *** cognominal joined
[13:57] <_itz> "reposotory"

[13:57] *** Ven left
[14:03] <hoelzro> o/ #perl6

[14:04] <hoelzro> JimmyZ: good catch; I don't know how that line got repeated =/

[14:04] <hoelzro> .tell FROGGS I would like to do that; I just wanted to get the basics done

[14:04] <yoleaux> hoelzro: I'll pass your message to FROGGS.

[14:04] <[Coke]> bummer; pmichaud's talk is now not streaming, but is cut off at the end.

[14:05] *** tardisx joined
[14:06] *** Ven joined
[14:07] <Ven> _itz: they write it correctly at the very end!

[14:12] *** molaf__ joined
[14:12] *** laouji left
[14:14] *** tinyblak_ left
[14:15] *** molaf_ left
[14:16] <ugexe> perl-j (so probably nqp-j?) seems to do the more correct thing (re: multi character input line separators) for nqp::setinputlinesep

[14:17] *** vendethiel left
[14:18] *** yqt left
[14:23] *** vendethiel joined
[14:26] *** skids joined
[14:27] *** ssqq left
[14:32] <smls> jnthn: Is it safe for one thread to assign a value to an rw attribute of an object, while another thread pushes that same object to a List/Array (but doesn't look at its attributes)?

[14:33] *** Ven left
[14:33] *** amurf joined
[14:33] <jnthn> smls: Should be

[14:34] <smls> ok

[14:34] <jnthn> smls: Pushing to the same list from two threads will get you trouble though

[14:34] <smls> yeah

[14:34] <jnthn> smls: Also, I'm currently trudging through a bunch of places we hve broken code-gen that accidentally ends up insufficient cloning of blocks

[14:34] <jnthn> *have

[14:35] <jnthn> smls: Which leads to some things seeing the wrong lexicals

[14:35] <nwc10> this is MoarVM specific, or cross VM?

[14:36] <jnthn> Cross VM

[14:38] *** amurf left
[14:40] <lizmat> good *, #perl6

[14:40] <lizmat> only caught on with backlog of today

[14:40] <lizmat> day #2 of YAPC::NA to begin soon

[14:40] *** tinyblak joined
[14:40] <psch> hi lizmat o/

[14:40] <lizmat> psch o/

[14:41] *** Petit_Dejeuner left
[14:41] <hoelzro> o/ lizmat 

[14:42] <lizmat> hoelzro \o

[14:43] <pmichaud> Important GLR-related design question

[14:43] <lizmat> pmichaud o/

[14:43] <pmichaud> (may have already been discussed on-channel)

[14:44] *** vendethiel left
[14:44] <pmichaud> since post-GLR we will only have two places that do flattening, should

[14:44] <TimToady> don't ask to ask :)

[14:44] <pmichaud>     my $list = (1,2,3);   for $list { .say } 

[14:44] <TimToady> actually, that was a topicalization, so acceptable :)

[14:44] <pmichaud> produce three iterations?

[14:44] <pmichaud> (I vote yes)

[14:44] <timotimo> in my understanding: no

[14:45] <timotimo> wait, for becomes the flattening thing?

[14:45] <pmichaud> in this formulation,   for $list { .say }    becomes isomorphic with  $list.map: { .say }

[14:46] <pmichaud> still no flattening taking place

[14:46] *** mtj_ left
[14:46] <pmichaud> (since any nested lists inside of $list aren't flattened out)

[14:46] <pmichaud> this would eliminate a lot of       for $xyz.list { ... }    formulations

[14:47] <smls> Wouldn't that break $ sigils as an indicator for non-flattening though?

[14:47] <TimToady> this has nothing to do with flattening

[14:47] <pmichaud> no, but there's no flattening here.

[14:47] <timotimo> mhm

[14:47] <smls> $xyz.list can be written as @$xyz

[14:47] <TimToady> it's "when do I access the list nature of the argument?"

[14:47] <pmichaud> smls: yes, but why are we forcing people to write   @$xyz   in the first place?

[14:48] <pmichaud> previously this was so that something like

[14:48] *** vendethiel joined
[14:48] <pmichaud>     for  ($a, @b, $c) { ... }     would flatten @b but not $a nor $c.... but 'for' no longer flattens, so why do we need to make the scalar distinction?

[14:50] <TimToady> I think I'm +1 on this now, though I used to not be

[14:50] <pmichaud> TimToady: yeah, I'm the same way.  It's especially telling after seeing some of rjbs++ code yesterday :)

[14:51] <pmichaud> I just no longer see any case where    for $scalar { ... }    shouldn't automatically access $scalar's list nature, or treat it as an iteration of one element.

[14:51] <pmichaud> s/or treat/versus treat/

[14:51] <TimToady> and that's the basic distinction between for and given now

[14:51] <timotimo> t/spec/S03-metaops/hyper.rakudo.moar .......................... No subtests run 

[14:51] <pmichaud> exactly

[14:51] <timotimo> is that my problem?

[14:52] <pmichaud> I think a lot of other uses of .list disappear, and we don't have to worry about item-versus-list context nearly so much.

[14:52] <cdc> RabidGravy, jnthn: many thanks for the fix and for the suggestion ("0.^methods(:all).sort(*.name)")!

[14:52] <pmichaud> ("we" being "programmers" here)

[14:53] <TimToady> interestingly, 'for flat $foo' is still a single iteration

[14:53] <pmichaud> yes.

[14:53] <TimToady> heading downstairs &

[14:53] <pmichaud> I'll be heading that way also soon

[14:53] *** mtj_ joined
[14:53] <jnthn> timotimo: Context? :)

[14:53] <timotimo> jnthn: the question should probably have been "does anybody else see this output?"

[14:54] <timotimo> i'll take this back to #moarvm

[14:56] *** labster joined
[14:57] *** labster left
[14:59] <smls> m: my $x = (2, 4, 6); sub a(**@a) { dd @a }; a $x

[14:59] <camelia> rakudo-moar 2aad0b: OUTPUT«(2, 4, 6)␤»

[14:59] <smls> So I guess loops will parse their headers like a **@ slurpy?

[15:00] <smls> That's at least consistent, I guess

[15:00] * PerlJam hopes that pmichaud and TimToady can explain themselves to the simple folk like myself at some point.

[15:00] <smls> (though of course from a P5 perspective, it's sacrilegious :P)

[15:01] * lizmat also heads downstairs

[15:01] *** lizmat left
[15:07] <dalek> rakudo/nom: 636bd32 | jnthn++ | src/Perl6/Actions.nqp:

[15:07] <dalek> rakudo/nom: Fix insufficient cloning in given/when/default.

[15:07] <dalek> rakudo/nom: 

[15:07] <dalek> rakudo/nom: This could lead to lexicals bleeding between threads.

[15:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/636bd32d9f

[15:07] <dalek> rakudo/nom: 70abc0b | jnthn++ | src/Perl6/Actions.nqp:

[15:07] <dalek> rakudo/nom: Must clone then p6capturelex.

[15:07] <dalek> rakudo/nom: 

[15:07] <dalek> rakudo/nom: Otherwise it's a race condition. This is the only place I spotted this

[15:07] <dalek> rakudo/nom: bug; the other places seem to get it right.

[15:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/70abc0bf3e

[15:08] <hoelzro> TIL "[] xx 4" DWIM

[15:08] <hoelzro> jnthn++

[15:09] <timotimo> oh, this could have been what caused problems when i used regexes across threads

[15:09] <timotimo> where i had to build my own $/ to make it not explode (though i'm not 100% sure that was enough)

[15:12] <hoelzro> I did not know that xx auto-thunked the LHS

[15:12] *** lizmat joined
[15:12] <jnthn> It does, so it'll DWYM :)

[15:12] <TimToady> PerlJam: it's easy to explain to a P5 programmer, if one can make the P5 programmer realize that P5's 'for' is P6's 'for flat'

[15:12] *** domidumont left
[15:12] *** Petit_Dejeuner joined
[15:12] *** vendethiel left
[15:13] <hoelzro> jnthn: I actually had to try that example in your RT response =)

[15:13] <TimToady> but for itself really just takes two arguments, one of which produces a list, and other of which is a closure

[15:13] <timotimo> we even have an optimization in place that doesn't thunk if the LHS is "simple"

[15:13] <hoelzro> timotimo: I saw that bit =)

[15:13] <hoelzro> I'm not sure if it's good or bad that Perl 6 still surprises me =P

[15:13] <hoelzro> this surprise is *definitely* welcome, though

[15:13] <jnthn> hoelzro: Found the given/when bugs while looking into you RT #125346

[15:13] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125346

[15:13] <jnthn> hoelzro: It gets things righter now but...still occasionally wrong. :/

[15:14] <timotimo> made very famous by python's implementation of default function values :)

[15:14] <hoelzro> jnthn: I saw that; interesting how that works

[15:14] <hoelzro> thanks for digging in

[15:14] <jnthn> Yeah, the case in the ticket is fixed now

[15:14] <hoelzro> oh, wow

[15:14] <jnthn> Uh

[15:14] <PerlJam> TimToady: I was having some agita from  "for $list { }" being three iterations and "for flat $foo {}" being one iteration   thinking that $foo and $list were meant to be the same.

[15:14] <jnthn> the case I golfed it to

[15:14] <hoelzro> ahhh

[15:14] <jnthn> So there's someting else going on still

[15:15] <jnthn> Your original is right most of the time rather than occasionally for me after this fix

[15:15] <hoelzro> I'm just cleaning out stale branches and uncommitted tests @ home, so I don't expect most of this to get fixed right away =)

[15:15] <jnthn> But still ends up with one promise Planned some of the time...

[15:17] *** oetiker_ joined
[15:17] *** oetiker_ left
[15:17] *** oetiker left
[15:18] *** oetiker joined
[15:20] *** lizmat left
[15:20] *** lizmat joined
[15:21] *** dr0ne joined
[15:27] *** dr0ne left
[15:29] *** tinyblak left
[15:30] <dalek> specs: ef4b8b7 | lizmat++ | S (4 files):

[15:30] <dalek> specs: Remove .graphs fossils

[15:30] <dalek> specs: review: https://github.com/perl6/specs/commit/ef4b8b725a

[15:32] *** _itz left
[15:34] *** itz joined
[15:35] *** tinyblak joined
[15:35] *** gagalicious left
[15:42] *** captain-adequate joined
[15:52] *** ab6tract joined
[15:53] <ab6tract> moritz: yup, ab6tract is my nick for the webchat

[15:54] <ab6tract> m: my %x = x => 8, y => 9, z => 8; my %r = %x.invert.unique; %r.say;

[15:54] <camelia> rakudo-moar 70abc0: OUTPUT«8 => z, 9 => y␤»

[15:54] <ab6tract> m: my %x = x => 8, y => 9, z => 8; (my %r).push: %x.invert.unique; %r.say;

[15:54] <camelia> rakudo-moar 70abc0: OUTPUT«8 => x z, 9 => y␤»

[15:56] <ab6tract> This makes sense to me conceptually, but I would love to read a deeper explanation of what is actually happening there. I guess it treats the values of %r as arrays and pushes onto them?

[15:56] <timotimo> yeah, push on a hash will turn values into lists if the same key is encountered multiple times

[15:57] <pmichaud> PerlJam: I would expect that    my $list = 1,2,3; for flat $list { ... };   will still be one iteration

[15:57] * moritz too

[15:58] *** diana_olhovik left
[15:58] <pmichaud> more concretely:     for flat $a, @b, $c { ... }    produces @b.elems+2 iterations, even if $a and $c are iterables

[15:59] <pmichaud> the real conclusion I was hoping to reach (and did)   is that     for <mumble> { ... }    basically desugars to    <mumble>.map({ ... })

[16:01] <pmichaud> that should be easy enough for simple folk :)

[16:02] <smls> will take some getting used to, but yeah, it's consistent.

[16:03] *** ab6tract left
[16:03] <smls> (though I didn't mind the flattening `for` either.)

[16:03] <timotimo> that's flattering

[16:04] <smls> :P

[16:04] <pmichaud> what really happens is that a lot of places where people were doing @(...)   or   .list    can disappear, I think.

[16:06] *** labster joined
[16:07] *** vendethiel joined
[16:08] <smls> Alright, so an undefined value will happily propagate through a postscripting chain, but as soon as it hits a method call, it blows up:

[16:08] <smls> m: my %x; say %x<foo>.<bar>.[4]; say %x<foo>.<bar>.[4].lc

[16:08] <camelia> rakudo-moar 70abc0: OUTPUT«(Any)␤Method 'lc' not found for invocant of class 'Any'␤  in block <unit> at /tmp/uHu7Ex_n9a:1␤␤»

[16:08] <smls> Do we have some way to say "only call this method if the invocant id defined; otherwise return the invocant directly"?

[16:09] <pmichaud> m: my %x; say %x<foo>.?lc

[16:09] <camelia> rakudo-moar 70abc0: OUTPUT«Nil␤»

[16:09] <timotimo> m: my %x; %x<foo>.<bar>.[5] = 5; say %x

[16:09] <camelia> rakudo-moar 70abc0: OUTPUT«foo => bar => (Any) (Any) (Any) (Any) (Any) 5␤»

[16:09] <pmichaud> hmm, not that.

[16:09] <timotimo> ^- this is why

[16:10] <smls> Maybe  &&  as metaop akin to the  =  metaop would be useful? As in  $foo&&.method

[16:10] <smls> Although, that looks kinda messy :P

[16:11] <timotimo> m: my %x; say %x<foo>.<bar>.[4]; say %x<foo>.<bar>.[4] andthen .lc

[16:11] <camelia> rakudo-moar 70abc0: OUTPUT«(Any)␤(Any)␤Method 'lc' not found for invocant of class 'Any'␤  in block <unit> at /tmp/7j1c0TFhUH:1␤␤»

[16:11] <timotimo> m: my %x; say %x<foo>.<bar>.[4]; say %x<foo>.<bar>.[4] andthen .perl.say

[16:11] <camelia> rakudo-moar 70abc0: OUTPUT«(Any)␤(Any)␤Any␤»

[16:11] <timotimo> m: my %x; say %x<foo>.<bar>.[4]; say %x<foo>.<bar>.[4] andthen *.say

[16:11] <camelia> rakudo-moar 70abc0: OUTPUT«(Any)␤(Any)␤True␤»

[16:11] <timotimo> m: my %x; say %x<foo>.<bar>.[4]; say (%x<foo>.<bar>.[4] andthen .lc)

[16:11] <camelia> rakudo-moar 70abc0: OUTPUT«(Any)␤(Any)␤»

[16:11] <timotimo> m: my %x; say %x<foo>.<bar>.[4]; say (%x<foo>.<bar>.[4] andthen "ooooh" orelse "noooo!")

[16:11] <camelia> rakudo-moar 70abc0: OUTPUT«(Any)␤noooo!␤»

[16:12] <smls> nice

[16:12] <timotimo> andthen has extremely low precedence

[16:12] <timotimo> that has to be kept in mind

[16:13] *** Celelibi left
[16:18] *** uncleyear left
[16:18] *** uncleyear joined
[16:20] *** muraiki left
[16:23] *** labster_ joined
[16:24] <tony-o_> m: .say for 1...Inf

[16:24] <camelia> rakudo-moar 70abc0: OUTPUT«(timeout)1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34␤35␤36␤37␤38␤39␤40␤41␤42␤43␤44␤45␤46␤47␤48␤49␤50␤51␤5…»

[16:24] *** larion left
[16:24] *** labster left
[16:24] *** labster_ is now known as labster

[16:25] <lizmat> m: my $a; say $a.?foo

[16:25] <camelia> rakudo-moar 70abc0: OUTPUT«Nil␤»

[16:25] <lizmat> this is assuming that Any doesn't have a foo method

[16:26] <lizmat> m: my $a; say $a.?Int

[16:26] <camelia> rakudo-moar 70abc0: OUTPUT«Nil␤»

[16:26] <lizmat> m: my $a; say $a.?keys

[16:26] <camelia> rakudo-moar 70abc0: OUTPUT«␤»

[16:27] <RabidGravy> ooh

[16:27] <RabidGravy> like

[16:28] *** vendethiel left
[16:29] *** ssqq joined
[16:29] <dalek> doc: 16c4d0c | pmichaud++ | lib/Language/operators.pod:

[16:29] <dalek> doc: Add note about topicalizing rhs for infix:<andthen>.

[16:29] <dalek> doc: review: https://github.com/perl6/doc/commit/16c4d0c036

[16:30] *** Petit_Dejeuner left
[16:30] *** diana_olhovik joined
[16:32] *** fhelmberger left
[16:33] <RabidGravy> lizmat, is that short cutting $a.defined && $a.can('foo') && $a.foo ? or just partially

[16:34] <pmichaud> RabidGravy: $a.?foo   returns Nil if $a doesn't have a 'foo' method.  It doesn't check definedness of $a, I don't think.

[16:35] <RabidGravy> still very useful

[16:35] <pmichaud> m:  say (Any.?list).WHAT

[16:35] <camelia> rakudo-moar 70abc0: OUTPUT«(List)␤»

[16:35] <ssqq> When get memory address of some object, How to return object according memory address?

[16:39] <timotimo> you can only do that with NativeCall

[16:39] <lizmat> RabidGravy: so yes, it's doing something close to what you want , but for maybe not th right reason

[16:39] <timotimo> if you're working with memory addresses of objects, you must know that MoarVM's garbage collector is moving

[16:40] <timotimo> if you hit a GC between calculating the address and grabbing the object from memory, you'll be majorly screwed

[16:41] <RabidGravy> seems reasonable

[16:41] *** phao joined
[16:43] <ssqq> timotimo: I want to know if it possible establish C language memory model using Perl6

[16:43] *** _mg_ left
[16:43] <JimmyZ_> I think he means object.id

[16:44] <timotimo> you can get access to the underlying MVMObject as a C Struct, but there's no way to put it back into the VM so that it gets managed properly

[16:46] *** yqt joined
[16:48] <lizmat> Q: how can you be sure your object will not be moved by the GC while reading/writing it?

[16:48] <lizmat> A: I don't think you can, therefore you should *always* use a MoarVM API function to read/write objects ?

[16:50] <JimmyZ_> the object won't move if object.id get called once

[16:50] <JimmyZ_> iirc

[16:50] <timotimo> ah, right, it gets put into the second generation

[16:50] <timotimo> but if it points at any other MVMObject, that pointer can change from under you

[16:50] <timotimo> since you don't get to add additional roots from "outside" the internals

[16:50] *** spider-mario joined
[16:53] <JimmyZ_> yeah

[16:57] <[ptc]> hoelzro, ugexe: have just updated the Travis build stuff to what BanzaiMan wanted to have, hopefully he's happy with that

[16:57] <[ptc]> hoelzro, ugexe: am looking into how to add the relevant Perl6 docs page to travis now

[16:59] *** vendethiel joined
[17:00] *** phao left
[17:01] <ugexe> [ptc]: did that `rakudo triple #{version} #{version} #{version}` get changed?

[17:02] *** labster left
[17:06] *** muraiki joined
[17:07] *** kurahaupo1 joined
[17:08] <[ptc]> ugexe: in what way?

[17:08] <[ptc]> ugexe: I updated both rakudobrew commands to be in a fold and to include timing info

[17:09] <smls> "rakudobrew triple nom master master"  still works for me

[17:09] <[ptc]> also, I think the perl6 build scripts will need testing once they are available on travis before the functionality gets advertised

[17:10] <ssqq> When parse C 'typedef int Int', new type would dynamically established, How to dynamically change grammar rule accordingly? 

[17:13] <JimmyZ_> ssqq, 你可以看一下 tinycc 是怎么实现的

[17:13] <Util> I am presenting a Perl 6 talk, 2 hours from now.

[17:13] <Util> If anyone (not attending) wants to sanity-check my code,

[17:13] <colomon> Util++

[17:14] <Util> I will welcome corrections (and even suggestions) until then. Thanks!

[17:14] <[ptc]> Util++

[17:14] <Util> http://home.p6c.org/~util/talks/YAPC/YAPC_NA_2015_Stop_Panicking/stop_panicking_Perl5_is_Perl6_where_it_counts.pdf

[17:14] <pmichaud> Util++

[17:15] <ssqq> p6: grammar G { my @types = <int float>; token type { @types }; token typedef-expr { 'typedef' \s+ <type> <ident> { push @types, $<name> }}

[17:15] <camelia> rakudo-moar 70abc0: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Missing block␤at /tmp/tmpfile:1␤------> 3<type> <ident> { push @types, $<name> }}7⏏5<EOL>␤    expecting any of:␤        postfix␤        statement end␤»

[17:15] <ugexe> [ptc]: That command is feeding the same $version as the perl6, moar, and nqp isnt it?

[17:16] <ugexe> it should either be 3 different $version variables, or just `rakudobrew triple`

[17:16] <ssqq> JimmyZ: 我想知道在Perl6中如何动态的修改 token 

[17:16] <[ptc]> ugexe: that it uses the same $version was the idea

[17:17] <pmichaud> Util: (slide 16)  Perl 6 now has a .is-prime method

[17:17] <ssqq> JimmyZ_: 我用数组实现了，但感觉不太对劲

[17:17] <timotimo> Util: is there a reason you show for @array.keys -> $i { and then use @array[$i] } rather than for @array.kv -> $i, $v { use $v } ?

[17:17] <[ptc]> ugexe: if I just use rakudobrew triple, that doesn't run (iirc)

[17:18] <timotimo> ah, it's in there later on

[17:18] <colomon> Util: seems like you address for (well, foreach), do a few other things, then come back to for?

[17:18] <[ptc]> ugexe: the version tie-in was something that I wanted: namely that a given Rakudo stack would be available when saying in .travis.yml, perl6: 2015.05 (for example)

[17:18] <timotimo> Ulti: on slide 49 there's "@r =('z') x 3);" which misses a "("

[17:18] <colomon> Util: all without ever showing for @array -> $v 

[17:19] <colomon> Util: (or did I miss it?)

[17:19] <ugexe> [ptc]: sounds like you want `rakudobrew build $backend $version`

[17:19] <Util> pmichaud: .is-prime omission intentions; teaser for Ovid's last few slides

[17:20] <Util> colomon: for() not all being together is intentional, for effect.

[17:20] <[ptc]> ugexe: don't think so...

[17:20] <ugexe> triple is for building version $0 of moar, version $1 of nqp, and version $2 of rakudo (order may be incorrect) i believe

[17:20] *** ssqq left
[17:20] <colomon> Util: k

[17:20] <[ptc]> ugexe: what I'm trying to do (and possibly doing it incorrectly) is to build a given Rakudo release

[17:21] <pmichaud> Util: just checking :)

[17:21] <ugexe> yes, thats what the build command i posted does

[17:21] <[ptc]> ugexe: and usually moar, nqp and rakudo are all at the same version number

[17:21] <[ptc]> ugexe: ah, ok

[17:21] <pmichaud> Slide 49 paren typo in last line?

[17:22] <Util> colomon: good point, I did never show single-var version, but I do say: for @array -> $city, $state, $zip

[17:22] <pmichaud> Util: ^^

[17:22] <colomon> Util: yeah, I’m still reading through, just got to the triple var version.

[17:22] <[ptc]> ugexe: I need to try that out, thanks for the tip

[17:23] <[ptc]> ugexe: btw: I added your email address as listed on GitHub to the build file, similarly to other community-supported languages, hope that's ok

[17:23] <Util> pmichaud: 49 paren typo - Fixed. Thanks!

[17:23] <ugexe> only if you are a nigerian prince

[17:24] <timotimo> BBIAB

[17:25] <[ptc]> ugexe: well, as it happens, I *do* have 10^9 USD which I need to put in a bank account somewhere.  Just send me all your bank details, passwords, etc. and I'll do the rest :-P

[17:25] <timotimo> m: my @field_names = < CITY  'STATE NAME' ZIP # will change later␤>; say @field_names;

[17:25] <camelia> rakudo-moar 70abc0: OUTPUT«CITY 'STATE NAME' ZIP # will change later␤»

[17:26] <timotimo> m: my @field_names = << CITY  'STATE NAME' ZIP # will change later␤>>; say @field_names;

[17:26] <camelia> rakudo-moar 70abc0: OUTPUT«CITY STATE NAME ZIP # will change later␤»

[17:26] *** uncleyear left
[17:26] *** uncleyear joined
[17:26] <pmichaud> m: my @field_names = < CITY  'STATE NAME' ZIP # will change later␤>; say @field_names.perl

[17:26] <camelia> rakudo-moar 70abc0: OUTPUT«["CITY", "'STATE", "NAME'", "ZIP", "#", "will", "change", "later"]<>␤»

[17:26] <timotimo> Util: one of your slides suggests this works -^

[17:26] <pmichaud> m: my @field_names = << CITY  'STATE NAME' ZIP # will change later␤>>; say @field_names.perl

[17:26] <camelia> rakudo-moar 70abc0: OUTPUT«["CITY", "STATE NAME", "ZIP", "#", "will", "change", "later"]<>␤»

[17:29] *** espadrine left
[17:30] *** JimmyZ_ left
[17:31] *** andreoss left
[17:31] <Util> timotimo: looksing...

[17:32] *** yqt left
[17:32] *** larion joined
[17:32] *** Celelibi joined
[17:32] *** JimmyZ_ joined
[17:33] <JimmyZ_> ssqq, token 里面是可以使用变量的

[17:35] <lizmat> Util: alternative to "say "My name is {$self.name}";" is "say "My name is $self.name()";

[17:35] <Util> timotimo: Thanks! I was remembering that that was specced to work, but did not check (in haste). Re-writing.

[17:35] *** JimmyZ_ left
[17:36] <Util> lizmat: Thanks! I had forgotten that (along with zen slices). I think that I will leave it as-is, though, since I am showing off interpolated code blocks.

[17:39] <[ptc]> ugexe: `rakudobrew build $backend $version` is much better

[17:39] <[ptc]> ugexe: I'm going to leave $backend hardcoded as moar for now, however we can change this to support the jvm in future as well, what do you think?

[17:41] *** llfourn_ left
[17:41] <ugexe> sounds like the best option

[17:42] <RabidGravy> boom

[17:48] *** FROGGS joined
[17:50] <FROGGS> o/

[17:50] <yoleaux> 14:04Z <hoelzro> FROGGS: I would like to do that; I just wanted to get the basics done

[17:51] <hoelzro> o/ FROGGS 

[17:52] *** kst left
[17:52] <FROGGS> hi hoelzro 

[17:54] *** abraxxa left
[17:54] <jdv79> m: for 1..3 { try "foo".IO.rename("bar");} # usually not "broken"

[17:54] <camelia> rakudo-moar 70abc0: ( no output )

[17:54] <jdv79> m: for 1..4 { try "foo".IO.rename("bar");} # usually "broken"

[17:54] <camelia> rakudo-moar 70abc0: ( no output )

[17:54] <flussence> it's a gc bug, afaik

[17:54] <jdv79> m: for 1..10 { try "foo".IO.rename("bar");} # usually "broken"

[17:54] <camelia> rakudo-moar 70abc0: ( no output )

[17:55] <jdv79> :( - that breaks pretty reliably locally and via msging camelia - idk

[17:56] <jdv79> m: for 1..20 { try "foo".IO.rename("bar");} # maybe

[17:56] <camelia> rakudo-moar 70abc0: OUTPUT«Use of uninitialized value <element> of type Any in string context  in code  at /tmp/9fpdYO6Mo0:1␤WARNING: unhandled Failure detected in DESTROY:␤Failed to rename '/home/camelia/foo' to '/home/camelia/bar': Failed to rename file: no such file or direct…»

[17:56] <jdv79> ah, there

[17:56] *** abraxxa joined
[17:56] *** abraxxa left
[17:56] <jdv79> is that a bug?

[17:56] <flussence> «dir('.').sort xx 2» gets me a segfault, and I have problems doing basic addition too many times, so I'm pretty convinced they all have the same root cause

[17:57] <jdv79> some gc thing you mean?

[17:57] <flussence> yeah. I believe it's already known about, at least

[17:57] <ugexe> can a role force an attribute on an interface like method stubs? or am i wandering into an anti-pattern...

[17:57] <jdv79> ok

[17:58] <jdv79> jnthn: ^^ is the golfed version of what i hit the other day

[17:58] <masak> evenin', #perl6

[17:58] *** labster joined
[17:58] <flussence> o/

[17:59] <lizmat> flussence: seems related to what *is* in dir "."

[17:59] <lizmat> can't get it to fail locally

[17:59] <flussence> oh, I'm on 32-bit, that might be why

[18:02] *** labster left
[18:03] *** [Sno] left
[18:03] *** [Sno] joined
[18:04] <geekosaur> very common cause of weirdness is stuff assuming that filenames are utf8, when on unixlikes they are octet strings and no encoding can safely be assumed

[18:04] <geekosaur> cue bug reports of gtk and OS X Aqua file picker crashes

[18:05] <pmichaud> Excellent talk from DrForr++ .

[18:07] <Util> DrForr++ indeed!

[18:10] <colomon> on what?

[18:11] *** amurf joined
[18:11] <Util> colomon: Quaternions! You would have loved it.

[18:11] <colomon> oooo, I think I would have!

[18:13] *** mtj_ left
[18:14] *** mtj_ joined
[18:15] *** tinyblak left
[18:15] *** lizmat left
[18:16] *** amurf left
[18:19] *** Petit_Dejeuner joined
[18:20] *** kst joined
[18:24] *** domidumont joined
[18:25] *** mohij joined
[18:29] *** Peter_R joined
[18:31] <jnthn> To correct an inaccuracy in the backlog: the object *may* move after calling getting its unique object ID, it's just that the ID won't change. It's currently implemented by pre-choosing a gen2 address; that is an implementation detail, though, and also not useful as the move is not immediate.

[18:31] *** diana_olhovik left
[18:32] <jnthn> flussence: I fixed a nasty SEGV this morning that was more likely to show up on 32-bit than 64-bit; you may want to grab latest if you haven't already

[18:32] <jnthn> m: dir('.').sort xx 2

[18:32] <camelia> rakudo-moar 70abc0: ( no output )

[18:32] <jnthn> m: dir('.').sort xx 10

[18:32] <camelia> rakudo-moar 70abc0: ( no output )

[18:32] <jnthn> m: dir('.').sort xx 100

[18:33] <camelia> rakudo-moar 70abc0: ( no output )

[18:35] *** diana_olhovik_ joined
[18:44] <hoelzro> I forget, does Str have a method that's like Perl 5's tr/abc/def/ expression?

[18:44] <hoelzro> ah, .trans

[18:44] <Util> hoelzro: $str.trans( %mapping.pairs );

[18:46] <hoelzro> thanks Util 

[18:46] <Util> yw

[18:52] <jnthn> TimToady: In Failure, it seems that if we actually throw the exception (maybe because it got fatalized) then we don't mark the Failure as handled. This seems to be one of our big sources of leaked Failure.

[18:52] <jnthn> TimToady: I figure since actually threw they count as handled at that point?

[18:53] <jnthn> This is why we leak the rename ones in a try, as in the jdv79++ example earlier.

[18:54] *** espadrine joined
[18:55] * jnthn tries a patch to do this

[18:56] *** kurahaupo1 left
[18:56] <moritz> marking a thrown Failure as handled sounds sensible

[18:56] <jnthn> OK. If the patch spectests fine I'll put it in :)

[18:56] <flussence> jnthn++ # thanks, will give it a try now

[18:59] <Ulti> not sure if anyone on here noticed http://www.reddit.com/r/perl/comments/392gz7/perl_6_multidimensional_arrays/

[18:59] <Ulti> whatever happened to the constraint version of the shaped array declaration was it just abandoned in favour of waiting to do proper native like aligned arrays?

[18:59] *** bin_005 joined
[19:03] <jnthn> Ulti: constraint versoin? 

[19:04] *** mohij left
[19:04] <FROGGS> Ulti: you are talking about this? https://github.com/rakudo/rakudo/commits/sized-arrays?author=Arcterus

[19:04] <FROGGS> IIRC it was had a "wrong approach"

[19:04] <jnthn> *nod*

[19:04] <FROGGS> s/was//

[19:05] <jnthn> I'm planning to work on multi-dim arrays; they're next up, except it kinda doesn't make sense to dig in until I see the way Array will be post-GLR

[19:05] <Ulti> sure

[19:06] <dalek> rakudo/nom: 80f8efc | jnthn++ | src/core/Failure.pm:

[19:06] <dalek> rakudo/nom: A Failure that throws counts as handled.

[19:06] <dalek> rakudo/nom: 

[19:06] <dalek> rakudo/nom: This means fatalized Failures will not report themselves as leaked.

[19:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/80f8efcce2

[19:06] <jnthn> jdv79: That should fix your rename issue, anyways.

[19:07] <Ulti> jnthn out of interest is this going to be something that adds constraints to normal lists i.e. checks some boundary or something that is a bit more like a C multi-dim array?

[19:08] <zostay> returning to my question last night about using .get or .lines on a :bin, it seems to me like that should work, but return a Blob instead of a Str or provide Blob-ish alternative methods

[19:08] <jnthn> Ulti: That's one of the things I'm working out at the moment; S09 doesn't clearly say it has to be one way or the other

[19:08] <Ulti> yeah

[19:08] <jnthn> Ulti: It hints that it *can* be C multi-dim style though

[19:09] <Ulti> I know which one everyone in PDL land would want >:3

[19:09] <jnthn> Ulti: 'cus it points out that you might have to create a "view" kinda thing if you access just one dimension

[19:09] <FROGGS> zostay: I understand it as .get/.lines being for strings, but .read is for bufs

[19:09] <Ulti> FORTRAN style arrays :)

[19:09] <jnthn> So I need to ponder the implementation consequences of that also. :-)

[19:11] <Ulti> yeah I guess something like Java solved that by having Iterator 

[19:12] *** smls left
[19:12] *** smls_ joined
[19:15] *** tinyblak joined
[19:15] <zostay> FROGGS: i understand that... but the :bin option has very little meaning for :r files, you might as well not bother because read doesn't bother with encodings anyway

[19:16] <zostay> i'm suggesting a way to make :bin more powerful, allowing you to buffer records in a binary file

[19:16] *** yqt joined
[19:17] <zostay> in fact, the only place :bin seems to make any useful difference is in slurp

[19:17] <zostay> in which you can pass :bin there directly

[19:18] <dalek> perl6-roast-data: 2542aff | coke++ | / (9 files):

[19:18] <dalek> perl6-roast-data: today (automated commit)

[19:18] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/2542aff42e

[19:18] *** brrt joined
[19:19] <zostay> IO::Handle could be treated as an Iterable over Blobs or Strs if :bin was used more

[19:19] <[Coke]> jnthn: I'm sure we can come up with a list of RTs or something if you're looking for work before GLR is done. :)

[19:21] <smls_> zostay: Isn't that what  IO::Handle.lines  and  IO::Handle.words  is for?

[19:22] <smls_> oh, nvm

[19:22] <zostay> yes and no... encoded, buffered files yes, binary files no

[19:23] <jnthn> [Coke]: I'm open to being given RTs people especially care about; I'm trying to pick off some of the most serious ones already :-)

[19:23] <rjbs> jnthn: A question!

[19:23] <jnthn> rjbs: An answer!

[19:23] <rjbs> jnthn: I had a /very/ short talk with Pm earlier about NFG's representation in memory.

[19:23] <jnthn> .oO( Meta-discussion is so easy! )

[19:24] <rjbs> jnthn: He said that it's an array of int16, and that high codepoints are /also/ represented by synthetics.

[19:24] <rjbs> (or at least negatives)

[19:24] *** smls_ is now known as smls

[19:24] <jnthn> rjbs: No, it's an array of int32 :)

[19:24] <rjbs> Thanks, question answered!

[19:24] *** Petit_Dejeuner left
[19:25] <jnthn> rjbs: Though we'll probably use an array of uint8 for things in the Latin-1 range in the future.

[19:25] *** smls_ joined
[19:25] *** Petit_Dejeuner joined
[19:25] <jnthn> To cheat a bit. :-)

[19:25] <jnthn> But for now, it's all 32 wide

[19:26] <rjbs> thanks!

[19:27] *** lizmat joined
[19:27] <nwc10> the slightly more funky plan was to use arrays of uint8s for anything with no more than 128 distinct non-ASCII codepoints

[19:28] <nwc10> but "just latin 1, and done" beats "funky vapourware"

[19:28] <nwc10> also, "just latin 1" (or some other fixed 8 bit) means memcmp()

[19:29] <jnthn> nwc10: That is funky but the latin 1 thing goes together well with us storing things in the bytecode file as latin-1 when we can also.

[19:29] *** smls left
[19:29] <jnthn> nwc10: Latin-1 is in NFG for free, so we save a bunch of time at startup things to this. :-)

[19:30] <jnthn> And if we can just use the bytes directly in the MVMString we build, we'll do even better.

[19:31] *** smls joined
[19:32] *** smls_ left
[19:34] <jdv79> jnthn: thanks!  seems so.

[19:39] <flussence> I thought up a crazy idea about strings a while back and now seems as good a time as any to ask it: what if NFG strings were to default to the smallest int type that can contain all the synthetics, instead of int32?

[19:39] *** brrt left
[19:39] <jnthn> You'd have to account for the non-synthetics too...

[19:40] <flussence> and here's the crazy part: what if we were to stuff any random unicode characters encountered into unused synthetic codepoints :)

[19:44] <flussence> or in layman's terms: "hey, let's abuse NFG to reinvent fixed-width codepages!"

[19:44] *** Petit_Dejeuner left
[19:44] <lizmat> or in other words: make all codepoints synthetic internally ?

[19:44] <pmichaud> okay, int32 array then.

[19:44] <pmichaud> works for me :)

[19:45] <pmichaud> I'm getting lots of vm-related questions here at yapc, so I'm having to make educated guesses :)

[19:45] *** zengargoyle left
[19:45] *** dwarring joined
[19:45] <flussence> lizmat: pretty much. the nice thing about the Str type is nobody using it in perl6 code has to ever know it's doing something horrifying underneath :)

[19:46] <pmichaud> but my answers are often prefaced with  "well, ask #perl6 to be sure, but I think it's likely ..... "

[19:46] <jnthn> :-)

[19:46] <pmichaud> I suppose I could actually learn about all of this stuff for real and become more authoritative... but  NAAAAAHH

[19:47] <moritz> flussence: except when you nativecall

[19:47] <FROGGS> pmichaud: :D

[19:47] <flussence> moritz: yeah, you got me there...

[19:48] <lizmat> but nativecall code would need to be able to handle any "real" synthetics anyway

[19:48] <jnthn> We encode a Str into an encoding before it escapes to native calls :)

[19:48] <lizmat> so then it wouldn't matter whether all codepoints were synthetic or not

[19:49] <jnthn> Synthetics are never to be leaked 

[19:49] *** zengargoyle joined
[19:51] <flussence> jnthn: before I forget to mention it: that segfault's fixed for me :D

[19:51] <jnthn> Phew :)

[19:51] <jnthn> It took some finding.

[19:56] <PerlJam> Util++

[19:56] <PerlJam> (watching now :)

[19:56] <flussence> also, if we end up with a scenario where strings can map to any list of codepoints internally, that giant mountain of Encode:: modules perl5 has becomes trivial to do in perl6...

[20:05] *** telex left
[20:06] *** telex joined
[20:12] *** Peter_R left
[20:12] <dalek> specs: 866db90 | (Stéphane Payrard)++ | S99-glossary.pod:

[20:12] <dalek> specs: S99: spotted "synthetic character" on #p6. Added entries"

[20:12] <dalek> specs: review: https://github.com/perl6/specs/commit/866db9044e

[20:13] <lizmat> cognominal: I think it was more "synthetic codepoint"  ?

[20:13] <jnthn> aye

[20:14] <cognominal> ok, will fix it

[20:18] <DrForr> colomon: It's on youtube.

[20:18] <colomon> DrForr++ \o/

[20:19] <DrForr> Thanks.

[20:21] <DrForr> Incidentally there's a possible way to do what I'm after (but not really seriously.) U+20D0..U+20FF have a Math property, and the combining solidus and arrows are in that range.

[20:21] <dalek> specs: afd68e6 | (Stéphane Payrard)++ | S99-glossary.pod:

[20:21] <dalek> specs: S99: fixed previous entries; thx jnthn++, lizmat++"

[20:21] <dalek> specs: review: https://github.com/perl6/specs/commit/afd68e6573

[20:22] *** uncleyear left
[20:22] *** isacloud left
[20:22] *** uncleyear joined
[20:24] *** isacloud joined
[20:27] *** larion left
[20:29] <DrForr> Looks like we're getting quite a bit of perl6 participation this time 'round.

[20:30] <pmichaud> yes, I estimated at least 50 people at Util++'s talk

[20:30] <pmichaud> my talk yesterday was standing-room-only (smaller room), which shocked me quite a lot

[20:30] *** darutoko left
[20:31] <pmichaud> I get to give my "How (not) to design a language" talk tomorrow :) :)

[20:31] <DrForr> I got aybe ... 30?

[20:31] *** sftp left
[20:34] <pmichaud> DrForr: I think it was at least 30, yes.

[20:35] <dalek> ecosystem/jgoff-ANTLR4: 4183365 | (Jeffrey Goff)++ | META.list:

[20:35] <dalek> ecosystem/jgoff-ANTLR4: Add ANTLR4

[20:35] <dalek> ecosystem/jgoff-ANTLR4: review: https://github.com/perl6/ecosystem/commit/4183365ab2

[20:36] <DrForr> That's the ANTLR-Perl6 translator.

[20:37] <lizmat> DrForr++  :-)

[20:38] *** llfourn joined
[20:39] *** domidumont left
[20:43] *** llfourn left
[20:46] <masak> 'night, #perl6

[20:46] <lizmat> good night, masak

[20:48] *** muraiki left
[20:51] <pmichaud> m: sub fib(Int $nth where * >= 0) { $n };   fib(-3)

[20:51] <camelia> rakudo-moar 80f8ef: OUTPUT«5===SORRY!5=== Error while compiling /tmp/EWs0VtiQxw␤Variable '$n' is not declared␤at /tmp/EWs0VtiQxw:1␤------> 3sub fib(Int $nth where * >= 0) { 7⏏5$n };   fib(-3)␤»

[20:51] <pmichaud> m: sub fib(Int $nth where * >= 0) { $nth };   fib(-3)

[20:51] <camelia> rakudo-moar 80f8ef: OUTPUT«Constraint type check failed for parameter '$nth'␤  in sub fib at /tmp/N0Ot8mbFJP:1␤  in block <unit> at /tmp/N0Ot8mbFJP:1␤␤»

[20:52] <pmichaud> why the "type" in "Constraint type check"?  Would "Constraint check" be better phrasing?

[20:53] <timotimo> because we claim "subset Int where * >= 0" as a whole is a constraint type

[20:54] <pmichaud> did you mean   "subset Foo of Int where * >= 0"  ?  In that case, Foo is a constraint type, yes.

[20:55] <timotimo> yeah

[20:55] <timotimo> that's how it's implemented anyway ... i think?

[20:55] <timotimo> hm, do we have the constraint directly on the Attribute object?

[20:55] <pmichaud> is that implementation detail important?

[20:56] <timotimo> if you think the wording should be better without "type" in there, we might be able to change it easily

[20:56] <pmichaud> m: subset PosInt of Int where * >= 0;  sub fib(PosInt $n) { $n };  fib(-3)

[20:56] <camelia> rakudo-moar 80f8ef: OUTPUT«Constraint type check failed for parameter '$n'␤  in sub fib at /tmp/T_mTHYOqYN:1␤  in block <unit> at /tmp/T_mTHYOqYN:1␤␤»

[20:56] *** Khisanth left
[20:58] <dalek> doc: 2b7d3ce | ab5tract++ | lib/Type/Hash.pod:

[20:58] <dalek> doc: Add an example for Hash.push

[20:58] <dalek> doc: review: https://github.com/perl6/doc/commit/2b7d3ce901

[21:01] *** skids left
[21:01] *** Khisanth joined
[21:02] *** bin_005 left
[21:02] <hoelzro> if I want to create my own sub lines() that does a bit extra on top of CORE::lines, I just have to call CORE::lines(), right?

[21:06] *** ranguard joined
[21:06] <lizmat> m: SETTING::&lines("foo").say

[21:06] <camelia> rakudo-moar 80f8ef: OUTPUT«foo␤»

[21:07] <lizmat> hoelzro: ^^

[21:07] *** sftp joined
[21:07] <hoelzro> lizmat: why SETTING and not CORE?

[21:07] <lizmat> m: CORE::&lines("foo").say   # also works  :-)

[21:07] <camelia> rakudo-moar 80f8ef: OUTPUT«foo␤»

[21:07] <jnthn> pmichaud: I don't think "type" adds a huge amount to the error

[21:07] *** ranguard left
[21:08] <jnthn> pmichaud: It's accurate, but not especially important.

[21:08] <pmichaud> I think it might actually add some confusion, since the part that failed (the constraint) wasn't really a "type" as the programmer would think of it.

[21:08] <hoelzro> ok, thanks lizmat!

[21:08] <pmichaud> Ovid++ is giving his talk now, and that error message came up, and the use of the word "type" was a bit jarring to me (nobody else noticed/commented on it)

[21:08] <jnthn> pmichaud: Depends on the programmer :P

[21:09] <jnthn> Anyway, no objections. I think of it was a type for sure, but I woudln't miss "type" being in there

[21:09] <jdv79> any thoughts on default and lazy on attrs?  default meaning being able to get back to the default value as a var can do with "is default(42)".

[21:09] *** FROGGS left
[21:10] <lizmat> I think there shouldn't be a difference between my and has wrt "is default"

[21:10] <jdv79> and lazy in general as rjbs asked and lazy {} may be able to do or something

[21:10] <lizmat> now, lazy, the word is still not out on that...

[21:11] <jdv79> i'd like to see an example of the back to default value case since i wasn't able to do it

[21:11] <lizmat> as you can for now easily work around it with method foo { $!foo //= lazy evaluation }

[21:11] <jnthn> Assigning Nil is the usual way to restore a default

[21:12] <Util> PerlJam: o/

[21:12] <jnthn> Time for some rest &

[21:13] <lizmat> m: class a { has $.a is default(42) }   # can't do is default on attrs yet

[21:13] <camelia> rakudo-moar 80f8ef: OUTPUT«5===SORRY!5=== Error while compiling /tmp/NS6Jy9v2Y3␤Can't use unknown trait 'is default' in an attribute declaration.␤at /tmp/NS6Jy9v2Y3:1␤    expecting any of:␤        rw␤        readonly␤        box_target␤        leading_docs␤      …»

[21:13] <lizmat> good night, jnthn 

[21:15] <pmichaud> m:  subset PL where -10.0 .. 10.0;   say pi ~~ PL

[21:15] <camelia> rakudo-moar 80f8ef: OUTPUT«True␤»

[21:15] *** molaf__ left
[21:15] <pmichaud> m:  subset PL where -10.0 .. 10.0;   say "Hello" ~~ PL

[21:15] <camelia> rakudo-moar 80f8ef: OUTPUT«False␤»

[21:16] <pmichaud> m:  subset PL where -10.0 .. 10.0;   my @a = (1,2,3); say @a ~~ PL

[21:16] <camelia> rakudo-moar 80f8ef: OUTPUT«True␤»

[21:20] <dalek> doc: 2e7179a | ab5tract++ | lib/Type/Hash.pod:

[21:20] <dalek> doc: Add example of initialization of Hash.push

[21:20] <dalek> doc: review: https://github.com/perl6/doc/commit/2e7179a349

[21:21] <pmichaud> question about "subset" keyword perhaps should be "subtype"

[21:21] <jdv79> m: class A { has $.a is rw = 42; }; my $c = A.new(:a("foo")); say $c.a; $c.a = Nil; say $c.a; # what?

[21:21] <camelia> rakudo-moar 80f8ef: OUTPUT«foo␤(Any)␤»

[21:22] <jdv79> did jnthn mean that should have returned "foo\n42\n"?

[21:22] *** lizmat left
[21:23] <RabidGravy> I don't think so, the default assignment is made when the object is constructed

[21:24] *** bin_005 joined
[21:24] <RabidGravy> as I understand it anyway

[21:24] <flussence> m: my Int $a is default(42); say $a; $a = 300; say $a; $a = Nil; say $a

[21:24] <camelia> rakudo-moar 80f8ef: OUTPUT«42␤300␤42␤»

[21:27] *** rindolf left
[21:27] <flussence> m: class A { has Int $.a is rw is default(42) }

[21:27] <camelia> rakudo-moar 80f8ef: OUTPUT«5===SORRY!5=== Error while compiling /tmp/k1DPqBsnI7␤Can't use unknown trait 'is default' in an attribute declaration.␤at /tmp/k1DPqBsnI7:1␤    expecting any of:␤        rw␤        readonly␤        box_target␤        leading_docs␤      …»

[21:28] <pmichaud> default assignment occurs for uninitialized attributes after all other initialization has taken place

[21:28] <flussence> m: my Int $a is default(42) = 300; say $a; $a = Nil; say $a

[21:28] <camelia> rakudo-moar 80f8ef: OUTPUT«300␤42␤»

[21:29] <pmichaud> however, I have a strong sense that default initialization and lazy are tightly coupled

[21:33] *** khisanth_ joined
[21:33] *** Khisanth left
[21:35] *** vendethiel- joined
[21:35] *** vendethiel left
[21:36] <timotimo> pmichaud: it feels to me you already get a "subtype" by deriving a class from another

[21:37] <pmichaud> timotimo: we're looking specifically at the case of

[21:37] <timotimo> case of $foo { ... } ? :)

[21:38] <pmichaud>     subset  PosInt of Int where * > 0;

[21:38] <pmichaud> why "subset" here instead of "subtype"  ?

[21:38] <pmichaud> (since we're effectively declaring a new "type", not a "set")

[21:39] <timotimo> hmm

[21:39] <timotimo> "subsettype" %)

[21:40] <PerlJam> pmichaud: also, "subset" looks like it might have some relation with set() and Set, but doesn't 

[21:40] *** kaare_ left
[21:40] <pmichaud> PerlJam: exactly what jarred me about the question (and why I think it's potentially legitimate)

[21:40] *** khisanth_ is now known as Khisanth

[21:41] <pmichaud> since we have built-in set operators now, I wonder if the term "subset" is subject to unfortunate punning

[21:41] <pmichaud> anyway, it's undoubtedly a TimToady call to make.

[21:41] <pmichaud> (unless/until someone comes up with the obvious reason it should remain 'subset')

[21:42] <pmichaud> moving tables

[21:42] <PerlJam> "derive PosInt from Int where * > 0"  :)

[21:42] <RabidGravy> though there is a danger subtype might imply something about the things that isn't true

[21:43] <RabidGravy> though I'd be happy with subtype

[21:43] <pmichaud> well, I think it's pretty clear that "PosInt" is what we commonly refer to and think of as a "type"

[21:44] *** andreoss joined
[21:45] <PerlJam> We also declare our other types with the "class" keyword.  Why not do the same with "subtypes"?

[21:45] *** lizmat joined
[21:46] <PerlJam> class PosInt of Int where * > 0;

[21:46] <pmichaud> oh, please no.

[21:46] <pmichaud> I'd think of class as being something more than just "subtype"

[21:46] <pmichaud> class also means "and add these methods and add these attributes and ..."

[21:47] <PerlJam> btw, some perl6 person needs to crash the "Symbolic Computation in Perl" talk  (the examples so far have been using rationals and complex numbers)

[21:47] <pmichaud> it's no so much that I want to see 'type' in the declarator, as much as I want it to not have 'set'

[21:47] <pmichaud> and we have several types of types.  :)

[21:47] <pmichaud> we have roles, we have constraint types, we have classes, ...

[21:49] <flussence> I propose s/subset/check/, since it's 5 chars like "class", and unambiguous about what comes next

[21:49] <PerlJam> too verby

[21:49] <lizmat> collection ?

[21:49] <flussence> (and +1 to not calling it subset in any case, since we already have subbuf and substr...)

[21:50] * PerlJam gets the feeling that we're now exploring all the bad ideas so that we can have more confidence in calling it "subtype"

[21:51] <flussence> .oO( there's also the option of picking a long word and abbreviating it like enum )

[21:51] <PerlJam> (though I did like the "derive" version)

[21:52] <PerlJam> flussence: anything-other-than-subset  or  abbreviated,  aots   :)

[21:53] <lizmat> restricto

[21:53] <flussence> .oO( "constraint" -> "aint" -> "ain't PosInt an Int where * > 0;"... )

[21:53] <PerlJam> flussence: nice!  :)

[21:54] <flussence> not a serious suggestion, but it worked there :)

[21:54] <PerlJam> lizmat: why the trailing "o"?   restrict PosInt of Int where * > 0;  isn't bad at all.

[21:54] <lizmat> too verby ?

[21:54] <PerlJam> though, again, it's probably ... yeah

[21:55] <lizmat> the "o" was for "I restrict"

[21:55] * flussence goes to see if postgres has a nice word for this, since their whole type system tends to align nicely with ours

[21:56] *** Petit_Dejeuner joined
[21:56] *** vendethiel- left
[21:56] <PerlJam> .oO( <flussence>  Guess what postgres uses?  "subtype"  )

[21:58] <flussence> hm, they only mention "subtype" in the context of constraining a range to a specific number type :)

[21:58] <flussence> everything else is just... "type".

[21:59] <pmichaud> I'm not strongly opposed to "subset", just noting the disconnect

[21:59] <PerlJam> type PosInt of Int where * > 0;  # works for me too  :)

[22:00] <pmichaud> Question of the day....

[22:01] <pmichaud> "Why a butterfly?"

[22:01] <pmichaud> :)

[22:01] *** khisanth_ joined
[22:02] *** Khisanth left
[22:03] <RabidGravy> that's me done for the day

[22:05] <Util> Thank you to everyone who checked my slides!

[22:06] <DrForr> +1

[22:07] <cognominal> pmichaud, maybe because of the long larval stage. :)    but then, the imago does not last long :(

[22:09] <Util> pmichaud: http://github.com/perl6/mu/raw/master/misc/camelia.txt

[22:11] *** RabidGravy left
[22:12] <cognominal> Util, I like the : you can extend just about anything by attaching "P6" wings to it. 

[22:17] *** silug joined
[22:18] *** diana_olhovik_ left
[22:18] <pmichaud> Util: I'm planning my counter-heckle(s) for TimToady after he heckled me at my talk yesterday (with that question)

[22:18] <andreoss> using something like 'has $.x = die "$.x is required"' is encouraged ?

[22:21] * TimToady avoids pmichaud...

[22:24] *** bin_005 left
[22:28] *** smls left
[22:34] <Util> pmichaud: Ah! Now I understand.

[22:37] <andreoss> m: class Z { has Int $.x = Any }; say Z.new;

[22:37] <camelia> rakudo-moar 80f8ef: OUTPUT«Type check failed in assignment to '$!x'; expected 'Int' but got 'Any'␤  in block <unit> at /tmp/fjbFvJ0BpL:1␤␤»

[22:37] <andreoss> m: class Z { has Int $.x = die }; say Z.new;

[22:37] <camelia> rakudo-moar 80f8ef: OUTPUT«Died␤  in method  at /tmp/wqDzhUXTHN:1␤  in block <unit> at /tmp/wqDzhUXTHN:1␤␤»

[22:37] *** vendethiel joined
[22:38] <pmichaud> do violins have unicode strings?

[22:39] <flussence> m: class Z { has Int $.x = Empty }; say Z.new # decently readable error, but not self-describing code

[22:39] <camelia> rakudo-moar 80f8ef: OUTPUT«Type check failed in assignment to '$!x'; expected 'Int' but got 'Empty'␤  in block <unit> at /tmp/wh18ZIz1mq:1␤␤»

[22:40] <zostay> is there a way to get the fileno of a file from an IO::Handle?

[22:42] <pmichaud> zostay: I don't know of one.

[22:44] <Util> zostay: looks like $the_handle.fileno . See: http://design.perl6.org/S32/IO.html#.fileno

[22:45] <zostay> i thought i saw that somewhere, but it does not appear to be implemented at this point

[22:45] <pmichaud> S32 is often conjectural, too

[22:45] <lizmat> yeah, NYI

[22:45] <zostay> that's fine... i'm thinking about how PSGI from Perl adapts to Perl 6

[22:46] <zostay> fileno is part of the Perl 5 PSGI spec so that it may be used as an optimization

[22:48] *** bjz left
[22:49] <pmichaud> Looks like fileno was added to S32 in Sep 2014, so it's a recent conjecture :)

[22:53] *** rookie11998 joined
[22:53] *** telex left
[22:59] *** telex joined
[23:00] *** vendethiel left
[23:03] *** rookie11998 left
[23:06] *** amurf joined
[23:14] *** andreoss left
[23:16] *** spider-mario left
[23:17] <zostay> if i want a lazy list containing each 100 bytes of a file, how would i write that... the equivalent to $fh.lines, but for fixed-length Blobs?

[23:18] *** spider-mario joined
[23:18] <flussence> probably easy to do in a gather/take loop

[23:18] <flussence> you'd "take $fh.read(100)"

[23:18] <timotimo> right

[23:19] <timotimo> and you'd have something to break it off on eof or exception

[23:19] <timotimo> don't know which it'll do when it reaches the end of the file

[23:19] <zostay> like, gather loop { take $h.read(10) or last }

[23:20] <timotimo> i'd imagine it'd look like that, yes

[23:20] <ugexe> my $bytes = Supply.from-list: gather while my $b = $byte-stream.read(1) { take $b } is what i use

[23:22] <timotimo> pro-tip: do actually use "take"

[23:22] <timotimo> you can probably get something nicer with map; isn't map also lazy?

[23:22] *** jack_rabbit joined
[23:22] <timotimo> m: my @test = 0..*.map({ say "test" }); say @test[^3]

[23:22] <camelia> rakudo-moar 80f8ef: OUTPUT«WhateverCode.new␤»

[23:23] <timotimo> m: my @test = 0..Inf.map({ say "test" }); say @test[^3]

[23:23] <camelia> rakudo-moar 80f8ef: OUTPUT«test␤0 1␤»

[23:23] <timotimo> m: my @test = (0..Inf).map({ say "test" }); say @test[^3]

[23:23] <timotimo> m: my @test = (0 xx *).map({ say "test" }); say @test[^3]

[23:23] <timotimo> ...

[23:24] <camelia> rakudo-moar 80f8ef: OUTPUT«(timeout)test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤test␤te…»

[23:24] <timotimo> m: my @test := (0 xx *).map({ say "test" }); say @test[^3]

[23:24] <camelia> rakudo-moar 80f8ef: OUTPUT«test␤test␤test␤True True True␤»

[23:24] <timotimo> there we go

[23:24] <timotimo> no gather/take needed

[23:24] <timotimo> (as it's quite a bit of overhead at the moment)

[23:24] <ugexe> IO::Socket internally uses uses gather/take for lines()

[23:24] <timotimo> hmm

[23:25] *** cognominal left
[23:26] <ugexe> i cant think of any reason it cant use map instead though

[23:32] <ugexe> didnt know about the overhead difference though. good to know

[23:33] <pmichaud> eventually it'll be simply:    my @list = while ($h.read(10)) -> $a { $a };    or somesuch

[23:33] <pmichaud> imo, gather/take is overused for laziness right now... while is a bet better

[23:34] <pmichaud> *bit better

[23:37] <ugexe> i just prefer the explicit statement to `take` something instead of whatever the last value is

[23:37] <pmichaud> well, map would do much the same then

[23:38] <pmichaud> (in the GLR, map() may end up being just a fancy form of while loop :)

[23:38] <flussence> would «$_ while $h.read(10)» be expected to work in that line there?

[23:39] <ugexe> but can i do map({ blah(); take $value })? what i mean is, i dislike map({ blah(); $value }) because if for whatever reason i put debug info after $value, then my code no longer behaves the same. and im a clutz so it happens a lot

[23:42] *** gfldex left
[23:44] <ugexe> i suppose that can be implemented as-is with a LEAVE 

[23:44] <dalek> doc: 48c0eb9 | ab5tract++ | lib/Type/Nil.pod:

[23:44] <dalek> doc: Add the return of default values when Nil is assigned

[23:44] <dalek> doc: review: https://github.com/perl6/doc/commit/48c0eb9960

[23:44] <ugexe> guess not

[23:48] <jferrero> m: say √2 == √2;

[23:48] <camelia> rakudo-moar 80f8ef: OUTPUT«5===SORRY!5===␤Argument to "say" seems to be malformed␤at /tmp/TBbMahtWoB:1␤------> 3say7⏏5 √2 == √2;␤Bogus postfix␤at /tmp/TBbMahtWoB:1␤------> 3say 7⏏5√2 == √2;␤    expecting any of:␤        infix␤        infix s…»

[23:50] <jferrero> m: say π == π;

[23:50] <camelia> rakudo-moar 80f8ef: OUTPUT«True␤»

[23:53] *** espadrine left
[23:58] <ugexe> m: say(2 == 2)

[23:58] <camelia> rakudo-moar 80f8ef: OUTPUT«True␤»

[23:58] <ugexe> er

[23:58] <ugexe> m: say(√2 == √2)

[23:58] <camelia> rakudo-moar 80f8ef: OUTPUT«5===SORRY!5=== Error while compiling /tmp/at4T5BQ4tC␤Unable to parse expression in argument list; couldn't find final ')' ␤at /tmp/at4T5BQ4tC:1␤------> 3say(7⏏5√2 == √2)␤    expecting any of:␤        argument list␤        prefix…»

