[00:00] <dalek> rakudo/nom: a4576a2 | peschwa++ | src/Perl6/Grammar.nqp:

[00:00] <dalek> rakudo/nom: Fix RT #77114.

[00:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a4576a2ba5

[00:00] <dalek> rakudo/nom: f53153d | moritz++ | src/Perl6/Grammar.nqp:

[00:00] <dalek> rakudo/nom: Merge pull request #340 from peschwa/rt77114

[00:00] <dalek> rakudo/nom: 

[00:00] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=77114

[00:00] <dalek> rakudo/nom: Fix RT #77114.

[00:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f53153de10

[00:00] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=77114

[00:03] *** raiph joined
[00:03] *** xfix left
[00:09] <Timbus> 2015-12-24 ...

[00:09] <yoleaux> 29 Dec 2014 16:30Z <psch> Timbus: the issue with .item in a grammar is already ticketed, #77350.  the example is with .any, but .item is a method on Mu as well

[00:09] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=77350

[00:09] <Timbus> what the

[00:09] <Timbus> oh. yeah i saw that

[00:10] *** FROGGS[tab] left
[00:13] *** adu left
[00:15] <b2gills> psch: The point of the exercise was to show off matching off of the numerator and denominator of a Rational, while throwing away the actual value. After getting a fair bit into I thought it would be good if it worked for any basic type.

[00:19] <timotimo> bcode: you can now also {new Year: :happy}

[00:19] <timotimo> m: new Year: :happy

[00:19] <camelia> rakudo-moar 80b912: OUTPUT«===SORRY!=== Error while compiling /tmp/X60rRiNNAy␤Undeclared name:␤    Year used at line 1␤␤»

[00:19] <timotimo> m: class Year { }; new Year: :happy

[00:19] <camelia> rakudo-moar 80b912: ( no output )

[00:20] <bcode> ah nice :)

[00:21] <psch> b2gills: oh, i see.  so your use case is actually about demonstrating subsignature unpacking, not about multis per se

[00:21] <psch> b2gills: or rather, from subsignature unpacking you wanted to generalize

[00:22] <psch> b2gills: with that i think what raydiak demonstrated is probably as good as you're going to get

[00:22] <b2gills> Really how both multis and subsignature unpacking interact

[00:22] <psch> well, they don't really, that's the issue, isn't it

[00:23] <b2gills> Actually they work just fine

[00:23] <psch> 'cause with Cool $x as Rational (:$numerator, :$denominator) you break on strings

[00:23] <b2gills> It's the going from Cool to Rational that isn't as simple as I'd like

[00:24] <psch> m: sub f(Cool $x as Rational) { $x }; say f "foo"

[00:24] <camelia> rakudo-moar 80b912: OUTPUT«foo␤»

[00:24] <psch> huh, it doesn't break

[00:24] <psch> that surprised me, i don't see how the coercion doesn't break it

[00:24] <psch> ooh, wait, there was discussion about this recently as well

[00:25] <psch> we actually want Cool Rat($x) or something instead iirc

[00:25] <b2gills> Rat(Cool)

[00:25] <psch> right, the target type is on the outside

[00:25] <b2gills> Similar to :fakename($realvar)

[00:26] <b2gills> Except backwards? I guess

[00:26] <psch> Rat(Cool) :fakename($realvar) # o.o

[00:27] <b2gills> I want to show my cousin who is going for a compsci something or other some cool Perl6 code

[00:28] <psch> my go-to-showoff is lazy fib :)

[00:28] <b2gills> of course, of course

[00:29] <b2gills> some of the codegolf.stackexchange.com code also

[00:31] <no_libsoup_for_y> On my system (Windows 7 x86_64, Cygwin x86_64, Rakudo Star 2014.12.1, Parrot 6.10.0), evalfile - with or without arguments - always causes the compiler to bail out with the message "no ICU lib loaded". The shell used doesn't seem to matter (bash, dash, cmd.exe, and C:\rakudo\bin\perl6.exe produce the same result). Running it via the "-e" flag, via REPL, or from a file makes no difference either. Any ideas on how to resolve this? I'm 

[00:37] *** MilkmanD1n is now known as MilkmanDan

[00:37] *** rurban left
[00:43] <muraiki_> your message was cut off at "I'm"

[00:46] <no_libsoup_for_y> odd

[00:46] <no_libsoup_for_y> "I'm not really sure where to start." was the rest

[00:48] *** rurban joined
[00:50] *** vukcrni left
[00:50] <huf> irc is like that, unless your client splits it into multiple messages for you

[00:53] *** vukcrni joined
[01:01] *** raiph left
[01:02] *** BenGoldberg joined
[01:02] *** adu joined
[01:04] <b2gills> It's almost as if irc predates http ( checks wikipedia ) apparently because it does (by about a year)

[01:05] *** muraiki_ left
[01:07] *** no_libsoup_for_y left
[01:18] <geekosaur> so, wasn't that bug fixed recently (but no new star release)?

[01:19] <geekosaur> mm, wait, no, both involve icu but not the same thing

[01:26] *** sirdancealot left
[01:28] *** colomon left
[01:30] *** colomon joined
[01:40] *** sivoais_ is now known as sivoais

[01:40] *** sivoais left
[01:40] *** sivoais joined
[01:51] *** rurban left
[01:59] <adu> any -05:00 timezone people here?

[02:07] <geekosaur> moo?

[02:08] <adu> any people in here?

[02:09] <adu> I still can't figure out why my grammar works with Grammar::Debugger, but not without it

[02:12] *** psch left
[02:13] *** zakharyas joined
[02:18] <adu> what does this mean? Unhandled exception: ctxlexpad needs an MVMContext"

[02:18] <colomon> some sort of internals leak into the outside world

[02:20] *** rmgk_ joined
[02:20] *** rmgk_ is now known as rmgk

[02:25] *** kjs_ joined
[02:27] <adu> does perl6 support mixins?

[02:29] <colomon> yes

[02:29] <colomon> though that might depend on your exact definition of mixin

[02:29] <adu> the docs talk about roles with undefined methods

[02:29] <colomon> that's what Roles do

[02:30] <adu> I was thinking more a class with precisely defined methods, where another class subclasses many of these

[02:30] <adu> multiple-inheritance?

[02:32] *** petercom1and is now known as petercommand

[02:33] *** petercommand left
[02:33] *** petercommand joined
[02:33] *** kjs_ left
[02:33] <adu> colomon: oh, you just say is a lot

[02:33] <adu> lol

[02:34] <adu> I'm so stupid

[02:34] <adu> class A is B is C

[02:36] <colomon> roles are "does"

[02:36] <colomon> afk

[02:45] <adu> omg, I can't believe it

[02:46] <adu> on Linux, my grammar works with and without Grammar::Debugger, on MacOSX my grammar only works with Grammar::Debugger

[02:46] <adu> I'm so confused

[02:46] <raydiak> heh, nice...

[02:47] <adu> so it'a bug specific to MacOSX + NOT using Grammar::Debugger

[02:47] <raydiak> them smart implementor folks have been working on hunting down a moar os x bug lately; wonder if it's the same one

[02:48] <adu> hmm

[02:48] <adu> raydiak: the behaviour is hard to diagnose because it just hangs, if I were to let it run, it would just run forever, I imagine

[02:49] <adu> if it were to encounter a null pointer, at least I could get some error message

[02:49] <raydiak> I'd recommend sprinkling says around in your grammar, but there is a good chance you'll have the same problem as with grammar::debugger

[02:49] <adu> raydiak: I did that, actually

[02:50] <adu> you can see the comments in github

[02:51] <adu> well, that makes me feel better that it's not my fault

[02:52] <raydiak> oh yes, it is certainly pretty much without doubt not your fault at this point :)

[02:52] *** zakharyas left
[02:52] <adu> "pretty much"

[02:53] <raydiak> I have pretty exacting standards for "certainly without doubt", which are not normally met by human beings

[02:53] <raydiak> but I haven't seen anything in your code that should be platform specific

[02:54] <adu> I'm not using any platform specific stuff

[02:55] <adu> the only thing I can think of is slurp

[02:55] <adu> but it get's past that point because it gets half-way through the grammar, and then just hangs

[02:55] <raydiak> nah that should be portable anywhere rakudo runs

[02:55] <adu> which implies that the slurp is complete

[02:56] <raydiak> hard to say with laziness and all though

[02:56] <adu> oh, is slurp lazy?

[02:56] <adu> I wonder if I read all file contents from it if the bug would go away

[02:57] *** Mso150 joined
[02:58] <raydiak> idk if slurp specifically is or isn't, just generalizing

[02:59] <raydiak> did you learn anything from all the says everywhere?  did they un-break it?

[02:59] <adu> I'm going to track down this bug in the next 2 hours

[02:59] <adu> raydiak: not really, but I gave up at some point, hence the comments, I think I'll try again and uncomment them

[03:02] <raydiak> if you do manage to narrow it down to something fairy specific, please document it for us in a bug report too

[03:02] <raydiak> *fairly

[03:02] <adu> raydiak: the "say"s did not fix the bug, it still hangs with "say"s all over the place

[03:03] <adu> that is my intention

[03:04] <raydiak> I'd just keep adding says between the last one you see before it hangs and the one after that, until you have it bisected

[03:05] <raydiak> ("between" in the order that it's traversing the rule heirarchy...obviously that could be very different from source code order)

[03:05] *** slavik joined
[03:20] <ugexe> raydiak++, also you might want to try to just use open() as i ran into a similar problem with spurt on linux at one time and manually using open() directly worked

[03:23] <adu> spurt?

[03:23] <adu> slurp?

[03:23] <ugexe> spurt yes, but i think the problem is the same between them (closing the file im guessing)

[03:26] <ugexe> so i ended up using like $file.IO.open(:bin, :w).write($content) and it worked. im an idiot though so take with a grain of salt :)

[03:32] <adu> raydiak: ok, maybe putting "say" does change behaviour

[03:33] *** xinming left
[03:33] <adu> becuase I put says around A and C, ran it, it hung on A, then I put says around B, ran it, and it printed A B C, and hung on C

[03:34] <adu> it's a heisenbug

[03:34] *** xinming joined
[03:36] <adu> how do I run roast?

[03:41] <ugexe> make rakudo-spectest

[03:43] *** noganex joined
[04:03] *** grondilu joined
[04:04] <grondilu> Happy new year #perl6 :-)

[04:04] <yoleaux> 27 Dec 2014 04:24Z <TimToady> grondilu: @a[0,2...*] works again in the latest rakudo

[04:04] <grondilu> ^yep, noticed that TimToady++

[04:37] <adu> grondilu: where are you?

[04:40] <adu> I think I may have found one indicator of "the heisenbug": http://pastie.org/9807719

[04:40] <adu> That's part of roast, btw

[04:52] *** perlfan left
[04:52] *** perlfan joined
[05:01] <adu> happy new year!

[05:03] * TimToady still has 3 hours to wait...

[05:03] * grondilu is currently in the middle of the Indian Ocean (France's Reunion island).

[05:03] *** KCL_ joined
[05:05] <grondilu> (9AM, 30°C)

[05:10] <adu> grondilu: wow, I never would have guessed that

[05:21] *** grondilu left
[05:26] *** grondilu joined
[05:30] <adu> raydiak: are you awake?

[05:35] <adu> hmm

[05:36] *** grondilu left
[05:38] *** grondilu joined
[05:41] *** sirdancealot joined
[05:47] <adu> should I file a report?

[05:53] *** xinming left
[05:54] *** xinming joined
[07:08] *** rindolf joined
[07:18] *** rindolf left
[07:19] <raydiak> adu: I am awake...even at a keyboard now...are you running latest/very recent rakudo on moar? if not I'd give that a shot

[07:19] *** BenGoldberg left
[07:20] <adu> raydiak: I'm running 2014.12.1

[07:20] <adu> on both linux and darwin

[07:21] <raydiak> adu: try latest via rakudobrew, see if it's the same

[07:21] <adu> rakudobrew?

[07:21] <raydiak> https://github.com/tadzik/rakudobrew

[07:22] <raydiak> makes it a lot easier to manage this stuff...just install the script and "rakudobrew build moar"

[07:22] <adu> ok

[07:24] <raydiak> essentially it'll build the very latest rakudo for you, without you jumping through a bunch of hoops to build moar, nqp, rakudo, panda, and so forth

[07:25] <raydiak> also does other stuff you may or may not care about, like switch between different versions of rakudo on different VMs

[07:25] <adu> is it more up to date than star?

[07:25] <raydiak> yes

[07:25] <adu> oh

[07:26] <adu> raydiak: so I found annother (smaller) grammar that displays the same bug

[07:27] <raydiak> the test you mentioned a while ago?

[07:27] <adu> https://github.com/perl6/roast/blob/master/S05-grammar/ws.t

[07:30] <raydiak> adu: if you run that file directly w/perl6, what is the last test it gives output for before it hangs?

[07:31] <raydiak> if it still happens with latest rakudo, I would report it

[07:36] *** xinming left
[07:37] *** xinming joined
[07:43] <adu> raydiak: hmm, it's "ok 10" on both linux and darwin

[07:44] <adu> I don't know

[07:47] <adu> what's the recommended way of running all of roast?

[07:55] <raydiak> 'make spectest' or something like that from the rakudo build dir iirc...I don't recall if the output is detailed enough to know exactly which test it was on when it hangs though

[07:55] <raydiak> or if you'll only know which file

[07:58] <adu> ok

[08:01] <raydiak> PST wishes you a happy new year, #perl6

[08:01] <ingy> Happy New Year

[08:02] <raydiak> .oO( Happy Release Year? :) )

[08:02] * ingy released the first CPAN 2015PST module

[08:02] <adu> happy new year

[08:02] <adu> lol

[08:02] <ingy> and attempted the first 4 GMT CPAN releases

[08:07] *** darutoko joined
[08:08] <raydiak> guess that's the last new year we'll hear unless someone chimes in from alaska, canada, or international waters again...

[08:10] <raydiak> s/canada/hawaii/

[08:16] <adu> raydiak: on linux rakudobrew installs to ~/.rakudobrew, but on darwin it installs to ~/.rakudobrew/moar-HEAD/install

[08:21] <raydiak> adu: rakudobrew itself should be in ~/.rakudobrew if you install like it says in the readme

[08:22] <raydiak> adu: and rakudobrew build moar should install rakudo moar in ~/.rakudobrew/moar-HEAD/install

[08:23] <adu> raydiak: I did exactly what the readme said, and it installed to ~/.rakudobrew/moar-HEAD/install

[08:23] <raydiak> adu: I have no idea how "git clone https://github.com/tadzik/rakudobrew ~/.rakudobrew" would end up putting it anywhere else

[08:23] <adu> no, the build moar part

[08:24] <raydiak> yeah that's where it puts moar when you build it

[08:25] <raydiak> but on linux mayhaps there is a runner script in ~/.rakudobrew/bin that is not used on OS X for some reason? guessing

[08:25] <raydiak> the actual install is in moar-HEAD/install though, on both

[08:25] <adu> yeah

[08:26] <adu> that also explains why perl6 panda etc. are in .rakudobrew/bin on linux but not on macosx

[08:26] <raydiak> but 'make spectest' should be run from moar-HEAD itself, I think (could be wrong)...if that's what you're doing

[08:27] <adu> I don't know what I'm doing

[08:28] <adu> I've been trying to build a Makefile from which I can run "make spectest" from

[08:28] <adu> The last makefile I found defaulted to --jvm, and I couldn't figure out how to switch it back to moar

[08:29] <raydiak> I think you can just run make spectest from moar-HEAD after you've built via rakudobrew

[08:29] <adu> ah, that worked

[08:31] <raydiak> would be cool to have a 'rakudobrew test' command for that

[08:35] *** xfix joined
[08:38] <adu> it's all "ok", so disappointing, wait are the "fudge" tests removed?

[08:38] <raydiak> adu: I notice that bin/cdump.pl6 is executable but has no shebang btw

[08:38] <adu> oops

[08:39] <raydiak> so does your problem still occur on OS X with bleeding edge rakudo?

[08:40] <raydiak> and yeah I think the fudge test are either not ran or ignored if they fail or something, not really familiar with the specifics

[08:40] <adu> raydiak: negative!

[08:41] *** rurban joined
[08:41] <raydiak> adu: \o/

[08:41] <adu> so what changed between 12.1 and 12.69?

[08:42] <adu> I'm guessing 68 things?

[08:43] <raydiak> sounds reasonable...I'm not really an implementor, I just run "rakudobrew build moar" as often as I feel like or if I hit a bug

[08:44] <raydiak> https://github.com/rakudo/rakudo/commits/nom rakudo commit log

[08:44] <raydiak> our master is called nom

[08:45] <adu> raydiak: how about "#!/usr/bin/env perl6"?

[08:46] <raydiak> adu: that's the one I use

[08:46] <raydiak> ever since I worked on a mac for a while, kept driving me nuts when people would assume they knew where my binaries live

[08:49] <adu> what about perl6 -I lib?

[08:50] <adu> wait, that's only in the current directory

[08:50] <raydiak> if you want that, do "use lib 'lib';"

[08:50] <adu> ok

[08:51] <raydiak> here is an example of doing it relative to the script instead: https://github.com/raydiak/pray/blob/master/bin/pray.p6#L5

[08:51] <raydiak> that's for '../lib', technically

[08:52] <adu> ok

[08:52] <adu> yey, now I can run "bin/cdump.pl6 t/data/null_main.c"

[08:52] <raydiak> awesome

[08:53] <adu> raydiak: thanks for your help

[08:54] <adu> I feel like new life has been given to my old project

[08:55] <raydiak> you're quite welcome...this is a really useful addition to the ecosystem, imo

[08:56] <raydiak> glad to have you around :)

[08:56] <adu> raydiak: I was personally going to use it for source-to-source transformations

[08:57] <adu> because for some reason 90% of the software easily available is in C, and yet 90% of the languages people want to write in are not C

[08:57] <adu> or is it 80 ... 20 ...

[08:57] *** kaare__ joined
[08:58] <raydiak> nice, that's an exciting idea

[08:59] <adu> I would imagine I could finish in a couple centuries

[09:00] <raydiak> what is this "finish" that you speak of?

[09:00] <adu> lol

[09:02] <raydiak> off to bed with me...g'night and good luck

[09:02] <adu> gnight

[09:12] *** adu left
[09:34] *** breinbaas joined
[09:49] *** FROGGS joined
[10:00] <nwc10> good 2015, #perl6

[10:00] *** LLamaRider left
[10:01] *** LLamaRider joined
[10:07] *** LLamaRider left
[10:07] *** LLamaRider joined
[10:23] <FROGGS> such year much new /o/

[10:23] <yoleaux> 30 Dec 2014 21:33Z <bartolin> FROGGS: looks like I'm ready to run 'PANDA_SUBMIT_TESTREPORTS=1 panda smoke' on a daily basis. do you want to get all those data at testers.perl6.org?

[10:23] <FROGGS> .tell bartolin ohh yes :o)

[10:23] <yoleaux> FROGGS: I'll pass your message to bartolin.

[10:25] *** LLamaRider left
[10:25] *** LLamaRider joined
[10:26] *** LLamaRider left
[10:27] *** LLamaRider joined
[10:27] *** LLamaRider left
[10:27] *** LLamaRider joined
[10:28] *** LLamaRider left
[10:28] *** LLamaRider joined
[10:32] *** LLamaRider left
[10:32] *** LLamaRider joined
[10:44] *** spider-mario joined
[10:47] *** LLamaRider left
[10:48] *** LLamaRider joined
[10:49] *** Ugator joined
[10:54] <bartolin> FROGGS: great; tomorrow you should get the first data for panda smoking on moar.

[10:54] <yoleaux> 10:23Z <FROGGS> bartolin: ohh yes :o)

[10:55] <bartolin> and: happy new year to everyone!

[10:59] <dalek> rakudo/nom: c8c47aa | (Lucas Buchala)++ | src/core/ (3 files):

[10:59] <dalek> rakudo/nom: Change Range excludes_ methods to dashes

[10:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c8c47aaf90

[10:59] <dalek> rakudo/nom: fcd34be | (Lucas Buchala)++ | src/core/Range.pm:

[10:59] <dalek> rakudo/nom: Add deprecated excludes_min/excludes_max methods to Range

[10:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fcd34bedd7

[10:59] <dalek> rakudo/nom: 49fab66 | moritz++ | src/core/Range.pm:

[10:59] <dalek> rakudo/nom: Fix whitespace

[10:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/49fab66717

[10:59] <dalek> rakudo/nom: 1f3bb95 | moritz++ | src/core/ (3 files):

[10:59] <dalek> rakudo/nom: Merge branch 'lucasbuchala-range-excludes' into nom

[10:59] <dalek> rakudo/nom: 

[10:59] <dalek> rakudo/nom: Conflicts:

[10:59] <dalek> rakudo/nom: 	src/core/Range.pm

[10:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1f3bb95f28

[10:59] *** rindolf joined
[11:28] *** rindolf left
[11:36] *** pjablons joined
[11:36] <pjablons> Is :shape implemented yet for compact arrays?

[11:41] *** virtualsue joined
[11:47] <jnthn> pjablons: No, nor are compact arrays really, though work on those is in progress.

[11:47] <jnthn> Happy New Year, #perl6 :)

[11:49] <moritz> happy new year, jnthn, *

[11:50] <JimmyZ> Happy New Year, you all

[11:54] *** Mso150 left
[12:02] *** Ugator left
[12:11] *** ggoebel111111117 left
[12:16] <pjablons> hrm... this is a little silly, but is there a cleaner way of writing a binary xor with a bunch of bits than just bit0 +^ bit1 +^ bit2 +^ bit3 +^ bit4 ?

[12:16] <jnthn> [+^] bit1, bit2, bit3, bit4 # though it will run a bit slower at the moment

[12:17] <pjablons> oh that works

[12:17] <jnthn> :)

[12:17] * jnthn away for a bit

[12:20] *** BigBear joined
[12:23] *** yeahnoob joined
[12:24] *** BigBear_ joined
[12:24] *** KCL joined
[12:25] *** ptc_p6 joined
[12:26] *** BigBear left
[12:26] *** BigBear_ is now known as BigBear

[12:27] *** KCL_ left
[12:32] *** Ven joined
[12:35] *** Ven left
[12:43] *** ptc_p6 left
[12:45] *** ptc_p6 joined
[12:50] *** virtualsue left
[13:00] *** molaf joined
[13:18] *** BenGoldberg joined
[13:20] *** ptc_p6 left
[13:22] <timotimo> i think someone made a template for travis CI at some point in the past, maybe szagab wants to know about that

[13:26] *** Rounin joined
[13:35] *** Ven joined
[13:45] *** isBEKaml joined
[13:46] *** zakharyas joined
[13:55] *** ggoebel111111117 joined
[14:00] *** kjs_ joined
[14:09] *** ggoebel111111117 left
[14:10] *** ggoebel111111117 joined
[14:13] *** kjs_ left
[14:17] *** yeahnoob left
[14:23] *** psch joined
[14:23] <psch> hi #perl6 \o

[14:30] *** yeahnoob joined
[14:32] *** telex left
[14:33] <moritz> \o psch 

[14:34] *** telex joined
[14:36] *** Ven left
[14:42] <psch> o/ moritz 

[14:42] *** rindolf joined
[14:43] <psch> moritz: did you have a look at more of #77064?

[14:43] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=77064

[14:43] *** rurban left
[14:43] <psch> i saw you fixed the literal optimization, but the alternation seems to work out differently

[14:49] <moritz> psch: I think the expections for alternations are off

[14:49] <moritz> modifiers are scoped to [] and () groups

[14:52] <psch> m: $_ = "Abc"; say /[A || :i B || C]+/

[14:52] <camelia> rakudo-moar 80b912: OUTPUT«␤»

[14:52] <psch> m: $_ = "Abc"; say /[A || :i B || :i C]+/

[14:52] <camelia> rakudo-moar 80b912: OUTPUT«␤»

[14:54] <psch> i'm not sure, i'll have to reread S05 a bit i think

[14:55] <moritz> m: $_ = "Abc"; say so /[A || :i B || C]+/

[14:55] <camelia> rakudo-moar 80b912: OUTPUT«Cannot call 'match'; none of these signatures match:␤:(Cool:D: Any $target, *%adverbs)␤  in method Bool at src/gen/m-CORE.setting:14352␤  in sub prefix:<so> at src/gen/m-CORE.setting:4317␤  in block <unit> at /tmp/ujWCcqPxEF:1␤␤»

[14:55] <psch> the nqp patch hasn't landed yet either i think

[14:56] <moritz> m: $_ = "Abc"; say so m/[A || :i B || C]+/

[14:56] <camelia> rakudo-moar 80b912: OUTPUT«True␤»

[14:57] <psch> it does seem a bit gotcha-y, but doing it differently break [ :i a || b ]

[14:57] <psch> which means "i agree with the expectation being wrong" i think :)

[14:57] <moritz> well, it's the same as  my $x = 42; my @a =  1, 2, my $x = 3, $x

[14:57] <moritz> m:  my $x = 42; my @a =  1, 2, my $x = 3, $x; say @a

[14:57] <camelia> rakudo-moar 80b912: OUTPUT«Potential difficulties:␤    Redeclaration of symbol $x␤    at /tmp/RAHuwpOXwi:1␤    ------> my $x = 42; my @a =  1, 2, my $x ⏏= 3, $x; say @a␤1 2 3 3␤»

[14:58] <psch> :D

[14:59] <dalek> rakudo/nom: 8f173a0 | moritz++ | tools/build/NQP_REVISION:

[14:59] <dalek> rakudo/nom: bump NQP revision to get regex fixes

[14:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8f173a0d55

[14:59] *** zakharyas left
[15:07] <moritz> psch: closed RT #77064; thanks!

[15:07] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=77064

[15:14] <psch> moritz: fwiw, i just pointed at it; you fixed it :)

[15:17] <moritz> psch: I've lost overview of RT about a year ago; such pointers are very valuable to me

[15:32] *** Ven joined
[15:32] <rindolf> Hi all. Happy New Year.

[15:35] <Ven> happy new year, #perl6 o/!

[15:36] *** yeahnoob left
[15:36] <rindolf> Ven: sup?

[15:37] <Ven> rindolf: sup?

[15:37] *** kjs_ joined
[15:37] <rindolf> Ven: I went on two walks today and watched an episode of Futurama and an episode of My Little Pony.

[15:38] <Ven> rindolf: I got drunk and am recovering

[15:38] <rindolf> Ven: ah, due to New Year's Eve?

[15:38] <Ven> yes

[15:39] <isBEKaml> Happy New Year, #perl6! 

[15:39] <rindolf> isBEKaml: happy new year.

[15:39] <rindolf> isBEKaml: what's new?

[15:40] <isBEKaml> rindolf: Nothing much. Eagerly looking forward to CPANPR :-) What's on your side?

[15:41] <Ven> also, trying to recode junctions in haskell :(

[15:41] <dalek> specs: 8969a74 | usev6++ | S32-setting-library/Exception.pod:

[15:41] <dalek> specs: [S32::Exception] Add X::Syntax::AddCategorial::MissingSeparator

[15:41] <dalek> specs: review: https://github.com/perl6/specs/commit/8969a74186

[15:41] <isBEKaml> Ven: drunk haskell.. must be fun :-)

[15:41] <rindolf> isBEKaml: today I had a busy day: I went on two walks, exercised, watched an episode of Futurama and and watched an episode of My Little Pony, and ate Shawrama/Gyros.

[15:41] <Ven> no, totally sober now. My stomach hates me, but I'm completly sober at least

[15:42] <moritz> bartolin++

[15:42] <Ven> bartolin++

[15:43] <isBEKaml> rindolf: Shawarma? It's a drink something, right? mediterranean?

[15:43] <rindolf> isBEKaml: no, it's food.

[15:44] <rindolf> isBEKaml: https://en.wikipedia.org/wiki/Shawarma

[15:44] <isBEKaml> rindolf: ah, I see that now. :-)

[15:44] <isBEKaml> rindolf: I don't watch a lot of TV series...

[15:46] <woolfy> Happy healthy succesful 2015 to all of you! <3

[15:46] <rindolf> isBEKaml: ah, neither do I.

[15:46] <rindolf> woolfy: thanks! To you too.

[15:49] *** kjs_ left
[15:50] *** kjs_ joined
[15:52] <Rounin> Oh, rindolf! Hey there. Happy new year!

[15:53] <rindolf> Rounin: hi, thanks.

[15:53] <rindolf> Rounin: what's new?

[15:54] <Rounin> Hmmmmmmmm, nothing much. I've taken a very long Christmas holiday (3,5 weeks)... Only thing I've really done is putting my savings into a risky stock fund, so now I'm watching the figures go up and down once a day :P

[15:54] <Rounin> What have you been up to lately?

[15:54] * Ven ponders at how to do a listop in haskell...

[15:56] <isBEKaml> Ven: map? fmap?

[15:56] <Ven> isBEKaml: how's that a listop? I want something like `1 | 3 | 4`, e.g.

[15:56] <Ven> the problem is that (|) cannot have overloads

[15:56] <Ven> so except if I provide two operators, I don't see a way to do it

[15:58] <isBEKaml> Ven: you could say something about infixr

[15:58] <Ven> isBEKaml: not sure what you mean

[16:00] <rindolf> Rounin: I've been mostly OK, but I lack interesting things to do.

[16:00] <lumimies> Ven: foldr?

[16:00] <rindolf> Rounin: had a job interview on Tuesday and I'm going to have another one on Sunday.

[16:01] <Ven> lumimies: not sure what you mean? doesn't help to declare a listop

[16:01] <Rounin> Ah, that's nice, rindolf... Good luck! Are they interesting jobs?

[16:01] <Rounin> Or seem interesting, anyway

[16:02] <dalek> doc: b249312 | usev6++ | / (2 files):

[16:02] <dalek> doc: Add exception X::Syntax::AddCategorial::MissingSeparator

[16:02] <dalek> doc: review: https://github.com/perl6/doc/commit/b249312b18

[16:02] <Ven> any and all exist in straight haskell

[16:02] <rindolf> Rounin: the one I've been to a job interview for seems interesting - don't know about the future one.

[16:03] <moritz> bartolin++ # thourough! rakudo, roast, doc, specs

[16:04] <lumimies> Ven: If you really need listop-like syntax, there are evil typeclassy things you can do. Check out Printf

[16:04] <Ven> lumimies: ooh that's right :DDD

[16:05] <lumimies> Ven: It's probably not worth it, though

[16:05] <Ven> I'm just playing around

[16:06] <Rounin> Ah well... Let's hope the future one is interesting as well then

[16:06] <bartolin> thanks! also moritz++ # I learned how to do it mostly by reading your blog posts and getting guidance here

[16:08] <Ven> lumimies: yaaaah I'm not sure I can do that without much more hackery

[16:08] <lumimies> Ven: That's what I meant - it's quite a lot of trouble

[16:08] *** virtualsue joined
[16:08] <Ven> lumimies: I mean, I can't have 2 different signatures :(

[16:09] <rindolf> Rounin: yes.

[16:13] *** zakharyas joined
[16:13] *** grondilu left
[16:33] *** jack13 joined
[16:37] <dalek> doc: cd38114 | moritz++ | lib/Type/Metamodel/Trusting.pod:

[16:37] <dalek> doc: Fix grammaro

[16:37] <dalek> doc: review: https://github.com/perl6/doc/commit/cd38114262

[16:37] <dalek> doc: 83da0d1 | moritz++ | lib/Type/Metamodel/Finalization.pod:

[16:37] <dalek> doc: Document type Metamodel::Finalization

[16:37] <dalek> doc: review: https://github.com/perl6/doc/commit/83da0d1a03

[16:40] *** jack13 left
[16:41] *** jack13 joined
[16:41] *** jack13 left
[16:44] <dalek> roast: 61919cf | usev6++ | S03-operators/range.t:

[16:44] <dalek> roast: Add test for recent fix: *.say for ^10

[16:44] <dalek> roast: cmp. https://github.com/rakudo/rakudo/commit/c5e7a7783d

[16:44] <dalek> roast: review: https://github.com/perl6/roast/commit/61919cfd4d

[16:47] <dalek> doc: 7e51211 | moritz++ | lib/Type/Metamodel/RoleContainer.pod:

[16:47] <dalek> doc: Document type Metamodel::RoleContainer

[16:47] <dalek> doc: review: https://github.com/perl6/doc/commit/7e51211da7

[16:55] <raydiak> good 2015 #perl6

[16:55] * TimToady watching Rose Parade

[16:55] <moritz> good raydiak, 2015

[16:55] * raydiak checking out the window for flying cars and holographic sharks

[16:56] <raydiak> heh \o moritz 

[16:56] <moritz> flying sharks and holographic cars!

[16:56] * moritz in silly mood

[16:56] <moritz> and I have to think of http://sadhillnews.com/wp-content/uploads/2010/11/cow-burps-dolphin-global-warming-eco-greenhouse-swim-sad-hill-news-Edit.jpg

[16:58] *** Khisanth joined
[16:59] <raydiak> hah good to start the day with a laugh...or, my day; guess it's closer to your dinner time

[17:01] *** rurban joined
[17:04] *** raiph joined
[17:07] *** isBEKaml left
[17:07] *** sirdancealot left
[17:09] *** kjs_ left
[17:13] *** btyler_ left
[17:16] <nine> I just finished this chapter http://zetcode.com/gui/pyqt4/firstprograms/ using Perl 6 and Inline::Python :) I can create and show windows and use dialogs and connect Qt's signals to slots.

[17:17] <nine> The first time I tried this was back in 2009 with Perl 5's Inline::Python. But I've never made it so far... finally I'm getting somewhere :)

[17:18] <Ven> wow, amazing. nine++

[17:19] *** dwarring joined
[17:19] <nine> https://gist.github.com/niner/435171022bb1dbff35a4 in case someone is curious how that looks like

[17:20] <timotimo> what's with all the whitespace

[17:20] <nine> Oh, copy&pasted that from vim.

[17:21] <timotimo> oooh

[17:21] <timotimo> you know about :set mouse=a ?

[17:22] <nine> timotimo: that's commented out in my .vimrc. Wonder why

[17:22] *** bcode_ joined
[17:22] <nine> Clean version: https://gist.github.com/niner/e5a2f324824fcd453ef0

[17:23] <nine> Now I just have to convert the 230 lines diff to Inline::Python to nice commits

[17:23] <timotimo> :)

[17:24] <raydiak> oh cool...nine++

[17:26] <timotimo> i like

[17:27] *** Celelibi joined
[17:28] *** btyler joined
[17:29] *** kjs_ joined
[17:34] *** bcode_ left
[17:35] <nine> But before, I think I have to read the P6 advent calendar :) Been so busy the last couple of weeks that I did not even find time to read it, much less contribute.

[17:35] *** bcode joined
[17:41] *** adu joined
[17:44] *** adu left
[18:01] *** pmqs_ joined
[18:07] *** Mso150 joined
[18:12] *** oetiker_ joined
[18:12] *** oetiker_ left
[18:13] *** FROGGS_ joined
[18:14] *** FROGGS left
[18:17] <dwarring> happy new year #perl6

[18:17] <dwarring> small panda PR https://github.com/tadzik/panda/pull/128

[18:18] <dwarring> adds a installdeps command

[18:20] *** colomon left
[18:21] *** leonid joined
[18:23] *** colomon joined
[18:30] <timotimo> cool

[18:31] *** spider-mario left
[18:38] *** adu joined
[18:58] *** Ven left
[19:01] *** Ven joined
[19:02] *** adu left
[19:07] <ugexe> can i make perl6 -e the same strictness as running perl6 code.pl6?

[19:14] <timotimo> yeah, i think starting the code with "use v6;" will do that?

[19:14] *** rindolf left
[19:14] <timotimo> yes, indeed

[19:18] <ugexe> sure does, timotimo++

[19:18] <[Coke]> consistency goblin: is-prime, but isNan

[19:18] <[Coke]> (isNaN, even)

[19:18] <dalek> perl6-roast-data: e691f58 | coke++ | / (5 files):

[19:18] <dalek> perl6-roast-data: today (automated commit)

[19:18] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/e691f5823e

[19:21] <raydiak> https://github.com/tadzik/rakudobrew/pull/23 dwarring++ inspired me to add a "rakudobrew test" command

[19:22] <colomon> [Coke]: I'm pro is-NaN

[19:25] <Ven> hmm, hard one

[19:25] *** spider-mario joined
[19:27] * colomon hopes raydiak++ knows what he's doing.  ;)

[19:28] <raydiak> colomon: heh that's always a gamble...but I did test it :)  about to open 1 more for a slightly more informative error when the requested implementation is not found

[19:28] <colomon> it's easier to accept the pull and test than it is to test first.  :)

[19:30] <raydiak> ah...true

[19:30] <colomon> I did look at your code, and liked the looks of it.

[19:30] <raydiak> okay the other one is up so people don't get confused

[19:31] <raydiak> yeah I noticed the syntactic theme and tried to stick with it :)

[19:31] <colomon> looks like it's spectesting properly, raydiak++

[19:32] <raydiak> only nit is that it runs 'make spectest' in each dir, so clones roast separately for each one...but figured this was better than not having it at all

[19:34] <colomon> that's cool by me

[19:34] * colomon is trying to set up Minecraft server on the Linux box for his six-year-old

[19:36] <colomon> Second patch merged too.

[19:36] <raydiak> oh cool, I should try that out some time...looked at it and thought "legos for millennials"

[19:36] *** M_o_C joined
[19:37] <colomon> He's been playing the pocket edition for a month or so, we're trying to get him up and running with the full version so he can play with his friends.

[19:39] *** narekius joined
[19:40] *** narekius left
[19:40] *** narekius joined
[19:40] *** narekius left
[19:41] *** rurban left
[19:43] <raydiak> it kinda reminds me of something I wrote as a teen...a crude quickbasic raytracer that rendered a scene of cube cells in black with yellow edges; everything it could draw looked like the holodeck on star trek tng

[19:49] *** kjs_ left
[19:50] <dalek> roast: f6f6e0b | usev6++ | S03-sequence/misc.t:

[19:50] <dalek> roast: Add tests for RT #112288

[19:50] <dalek> roast: review: https://github.com/perl6/roast/commit/f6f6e0b637

[19:50] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=112288

[19:56] *** M_o_C left
[20:06] *** darutoko left
[20:07] *** molaf left
[20:11] *** Mso150_d joined
[20:11] *** Mso150 left
[20:13] *** kjs_ joined
[20:22] *** M_o_C joined
[20:29] *** ilogger2 joined
[20:29] *** ChanServ sets mode: +v ilogger2

[20:33] *** telex joined
[20:36] *** anaeem1_ joined
[20:37] *** anaeem1_ left
[20:37] *** anaeem1 joined
[20:43] *** Sqirrel joined
[20:44] * raydiak kicks off "15k pushups for 2k15"

[20:47] *** anaeem1__ joined
[20:47] <raydiak> .oO( wonder how many years that progression could keep up for... )

[20:48] *** anaeem1 left
[20:57] <dalek> roast: 8f858cb | usev6++ | S32-exceptions/misc.t:

[20:57] <dalek> roast: Add test for RT #114014

[20:57] <dalek> roast: review: https://github.com/perl6/roast/commit/8f858cb654

[20:57] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=114014

[21:02] *** anaeem1__ left
[21:02] *** Ben_Goldberg joined
[21:04] *** Mso150_d joined
[21:05] *** atta_ joined
[21:06] *** anaeem1_ joined
[21:16] *** pmurias joined
[21:16] <pmurias> nine: can python object survive serialization?

[21:17] <pmurias> as you seem to be importing things at BEGIN time

[21:22] <dalek> roast: 9bad4dd | usev6++ | S05-mass/stdrules.t:

[21:22] <dalek> roast: Add test for RT #109674

[21:22] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=109674

[21:22] <dalek> roast: review: https://github.com/perl6/roast/commit/9bad4dd1af

[21:38] <dalek> roast: e21dde0 | (Lucas Buchala)++ | S03-operators/range-basic.t:

[21:38] <dalek> roast: Change Range excludes_ methods to dashes

[21:38] <dalek> roast: review: https://github.com/perl6/roast/commit/e21dde08e2

[21:38] <dalek> roast: d89ac19 | moritz++ | S03-operators/range-basic.t:

[21:38] <dalek> roast: Merge pull request #49 from lucasbuchala/master

[21:38] <dalek> roast: 

[21:38] <dalek> roast: Change Range excludes_ methods to dashes

[21:38] <dalek> roast: review: https://github.com/perl6/roast/commit/d89ac19e9b

[21:38] <dalek> specs: 1a4d949 | (Lucas Buchala)++ | S (2 files):

[21:38] <dalek> specs: Change Range excludes_* methods to dashes

[21:38] <dalek> specs: review: https://github.com/perl6/specs/commit/1a4d949358

[21:38] <dalek> specs: b983b23 | moritz++ | S (2 files):

[21:38] <dalek> specs: Merge pull request #74 from lucasbuchala/range-excludes

[21:38] <dalek> specs: 

[21:38] <dalek> specs: Change Range excludes_* methods to dashes

[21:38] <dalek> specs: review: https://github.com/perl6/specs/commit/b983b23af7

[21:41] <dalek> doc: 77ab13c | moritz++ | lib/Type/Range.pod:

[21:41] <dalek> doc: rename excludes_{min,max} methods to use dash

[21:41] <dalek> doc: review: https://github.com/perl6/doc/commit/77ab13c132

[21:54] *** hagirikan joined
[21:55] <hagirikan> TimToady, 

[21:55] <hagirikan> =)

[21:55] *** hagirikan is now known as hagiri

[22:05] *** Jablonski joined
[22:05] *** [particle] joined
[22:05] *** Brock joined
[22:06] *** hagiri left
[22:06] *** btyler_ joined
[22:06] *** petercom1and joined
[22:06] *** Util_ joined
[22:06] *** yeltzooo9 joined
[22:06] *** slavik1 joined
[22:06] *** telex left
[22:08] *** telex joined
[22:38] *** mephinet joined
[22:38] *** pmurias left
[22:39] *** pmurias joined
[22:46] *** kjs_ joined
[22:50] <dalek> doc: 4e03bc4 | raydiak++ | lib/Language/traps.pod:

[22:50] <dalek> doc: Typo fix

[22:50] <dalek> doc: review: https://github.com/perl6/doc/commit/4e03bc4d49

[22:55] *** Mso150_d left
[22:56] *** ugexe joined
[23:04] *** anaeem1_ left
[23:04] *** anaeem1 joined
[23:08] *** anaeem1 left
[23:12] *** kjs_ left
[23:25] <hoelzro> hello, #perl6! Happy New Year!

[23:25] <hoelzro> Year.new(:happy)

[23:27] *** anaeem1 joined
[23:28] *** anaeem1 left
[23:30] *** anaeem1 joined
[23:39] <raydiak> \o Happy New Year hoelzro 

[23:40] <[Coke]> hugme: hug 2014

[23:40] * hugme hugs 2014

[23:46] <raydiak> if I export an enum from my module, should the individual keys be imported when someone 'use's my module?

[23:47] <raydiak> I mean "should" in 2 different ways...I thought it would by default but it doesn't seem to...also, would it be better api design to not clutter the user's namespace that much anyway?

[23:53] <raydiak> m: module Foo { enum Bar is export <A B C> }; import Foo; say Bar::A; # iow, should I be able to 'say A' here without Bar:: ?

[23:53] <camelia> rakudo-moar 80b912: OUTPUT«A␤»

