[00:06] *** Peter_R left
[00:26] *** andreoss joined
[00:29] *** flaviusb left
[00:32] <tadzik> Hm, I would've used espeak

[00:33] <tadzik> It works.pretty much like say, as long as QA hackathons go

[00:34] <tadzik> Both allow you to have synthesized voice go “carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot” over the entire room :)

[00:40] *** tinyblak joined
[00:42] *** tinyblak left
[00:42] *** tinyblak joined
[01:09] *** atta_ left
[01:10] *** SevenWolf joined
[01:21] *** yoleaux joined
[01:21] *** ChanServ sets mode: +v yoleaux

[01:23] <timotimo> send-more-money-loops has reached this value now: JIT-Compiled Frames 

[01:23] <timotimo> 95.03% (30138714)

[01:24] <timotimo> didn't get much faster, though

[01:24] *** BenGoldberg joined
[01:25] <timotimo> i really wonder why neither &next nor &THROW-NIL gets inlined :\

[01:25] <timotimo> neither by the static optimizer nor by spesh

[01:25] *** skids joined
[01:33] <timotimo> i'd be glad if people could build a rakudo wih the jit_throw_ops branch of MoarVM and check spec tests and some modules if things are really correct; i'm not 100% sure of the jit implementation of some of these new ops ...

[01:33] <timotimo> with that, i'll probably go towards bed

[01:46] *** yoleaux left
[01:46] *** yoleaux joined
[01:46] *** ChanServ sets mode: +v yoleaux

[01:54] *** Sqirrel left
[01:56] *** Sqirrel joined
[01:58] *** andreoss left
[02:00] *** vendethiel left
[02:03] *** aborazmeh joined
[02:04] *** aborazmeh left
[02:04] *** aborazmeh joined
[02:09] *** vendethiel joined
[02:11] <timotimo> .tell tony-o_ in general i'm okay with being pm'd by anyone at any time :)

[02:11] <yoleaux> timotimo: I'll pass your message to tony-o_.

[02:11] <timotimo> .tell tony-o in general i'm okay with being pm'd by anyone at any time :)

[02:11] <yoleaux> timotimo: I'll pass your message to tony-o.

[02:11] *** atta joined
[02:21] *** yqt left
[02:34] *** rmgk_ joined
[02:34] *** rmgk left
[02:34] *** rmgk_ is now known as rmgk

[02:42] *** noganex_ joined
[02:44] *** noganex left
[02:48] *** bin_005 left
[02:49] *** bin_005 joined
[03:21] <zengargoyle> hehe, on the `say done` thing, wondering if Coke has figured out that `... ; say done` is preferable to `... && say done`.

[03:21] *** quester joined
[03:24] * zengargoyle has a remote-notify-send command and a port forwarding daemon so that `ssh example.com 'long_job; remote-notify-send done'` works

[03:26] *** BenGoldberg left
[03:39] <zostay> m: my $t = ($*SPEC.tmpdir ~ "test"); $t.IO.spurt("test"); my $h = $t.IO.open(:r); $h.read(2); say $h.tell; $h.seek(0, 0); say $h.tell;

[03:39] <camelia> rakudo-moar c2a57e: OUTPUT«Failed to open file /tmptest: permission denied␤  in block <unit> at /tmp/MG8WLOyWTe:1␤␤»

[03:40] <zostay> m: my $t = ($*SPEC.tmpdir ~ "/test"); $t.IO.spurt("test"); my $h = $t.IO.open(:r); $h.read(2); say $h.tell; $h.seek(0, 0); say $h.tell;

[03:40] <camelia> rakudo-moar c2a57e: OUTPUT«2␤0␤»

[03:40] *** vendethiel left
[03:43] <zostay> m: my $t = ($*SPEC.tmpdir ~ "/test"); $t.IO.spurt("test"); { my $h = $t.IO.open(:r); LEAVE { $h.seek(0, 0); say $h.tell }; $h.read(2); say $h.tell }

[03:43] <camelia> rakudo-moar c2a57e: OUTPUT«2␤0␤»

[03:45] <zostay> m: my $t = ($*SPEC.tmpdir ~ "/test"); $t.IO.spurt("test"); if True { my $h = $t.IO.open(:r); LEAVE { $h.seek(0, 0); say $h.tell }; $h.read(2); say $h.tell }

[03:45] <camelia> rakudo-moar c2a57e: OUTPUT«2␤0␤»

[03:49] *** vendethiel joined
[03:50] <zostay> m: sub foo { sub bar($s) { $s x 2 } }; say foo("test")

[03:50] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/56FKdpz7Dz␤Calling foo(str) will never work with declared signature ()␤at /tmp/56FKdpz7Dz:1␤------> 3sub foo { sub bar($s) { $s x 2 } }; say 7⏏5foo("test")␤»

[03:50] <zostay> m: sub foo() { sub bar($s) { $s x 2 } }; say foo("test")

[03:50] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/h8jjRdfhw4␤Calling foo(str) will never work with declared signature ()␤at /tmp/h8jjRdfhw4:1␤------> 3b foo() { sub bar($s) { $s x 2 } }; say 7⏏5foo("test")␤»

[03:50] <zostay> m: sub foo() { sub bar($s) { $s x 2 } }; say foo()("test")

[03:50] <camelia> rakudo-moar c2a57e: OUTPUT«testtest␤»

[03:52] *** tinyblak_ joined
[03:53] *** tinyblak left
[04:06] *** davido_ left
[04:06] *** davido_ joined
[04:32] <ugexe> i dont think theres much reason to use $*SPEC.tmpdir over $*TMPDIR is there?

[04:42] *** aborazmeh left
[04:58] <zostay> only because i didn't know there was a $*TMPDIR

[04:59] <zostay> m: class X is Excpeption { }; die X.new;

[04:59] <camelia> rakudo-moar c2a57e: OUTPUT«X<140648842773536>␤  in block <unit> at /tmp/y5uA2qAI7H:1␤␤»

[04:59] <zostay> m: class X is Exception { }; die X.new;

[04:59] <camelia> rakudo-moar c2a57e: OUTPUT«Unhandled exception: concatenate requires a concrete string, but got null␤   at <unknown>:1  (/home/camelia/rakudo-inst-2/share/perl6/runtime/CORE.setting.moarvm:print_exception:4294967295)␤ from src/gen/m-CORE.setting:15058  (/home/camelia/rakudo-inst…»

[05:00] <zostay> seems like there could be a nicer error like "Exception is missing method message()" or something rather than that mess

[05:01] <zostay> or just provide a default that returns "Bad Stuff" ;)

[05:14] *** mr-foobar left
[05:20] *** vendethiel left
[05:22] *** bin_005 left
[05:25] *** kaare__ joined
[05:28] *** mr-foobar joined
[05:33] *** bin_005 joined
[05:33] *** Sqirrel left
[05:42] <masak> morning, #perl6

[05:46] *** Psyche^ joined
[05:46] *** kurahaupo joined
[05:47] <masak> tadzik: thanks to you, I just had my laptop say 'carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot carrot' to the whole room ;)

[05:47] <masak> though the room is empty apart from me... :)

[05:48] <masak> oh, and a symlink later, now I have it as `say` :)

[05:49] *** Patterner left
[05:59] <masak> lizmat: `[:a]` triggers the reduce action at Actions.nqp:5811. `[:a,]` doesn't, nor `[(:a)]`.

[06:01] *** rindolf joined
[06:01] <tadzik> masak: there's more when it comes from :) Try hhhhhhhh, wwwwwwww similar :) The more the funnier

[06:02] <masak> :D

[06:09] <masak> lizmat: ah.

[06:09] <masak> lizmat: the parser gets stuck in this adverb-handling logic: https://github.com/rakudo/rakudo/commit/52d708

[06:10] <masak> it makes a sick, twisted kind of sense. operator adverbs, such as `3 + 4 :gently`, happen in "infix position" -- that is, when the parser has just seen a term and is ready to see another infix.

[06:11] <masak> but in the case of `[:a]` (or any kind of reduce op), an adverb in that position doesn't make any sense. there's no previous operator to modify after the `[`

[06:12] <masak> so the short-term fix could be to not consider that case if we're in a 'red'...

[06:12] * masak tries that

[06:14] <masak> yep, that fixes it.

[06:15] <masak> -        | <colonpair> <fake_infix> { $*OPER := $<fake_infix> }

[06:15] <masak> +        | <!{ $*IN_REDUCE }> <colonpair> <fake_infix> { $*OPER := $<fake_infix> }

[06:15] * masak makes spectest

[06:16] <dalek> roast: f7a1b9c | lizmat++ | S02-types/WHICH.t:

[06:16] <dalek> roast: Obsolete is no more

[06:16] <dalek> roast: review: https://github.com/perl6/roast/commit/f7a1b9c39c

[06:16] <dalek> roast: 7d6a177 | lizmat++ | S02-types/deprecations.t:

[06:16] <dalek> roast: Merge *OS/*OSVER test now they're compile time

[06:16] <dalek> roast: review: https://github.com/perl6/roast/commit/7d6a177192

[06:17] <lizmat> morning masak!  :-)

[06:17] <masak> lizmat: morning! fixed that for you! :D

[06:17] <masak> well, spectesting a fix now...

[06:18] <masak> let's not get ahead of ourselves (like the parser) :P

[06:19] <masak> basically, this was yet another "Leaky Unification"

[06:19] <masak> amazingly, we've had this code path (and presumably the `[:a]` bug) since Nov 7, 2012.

[06:20] *** itz2 joined
[06:20] <masak> yeah, nothing in the spectests looks like my doing.

[06:23] <dalek> rakudo/nom: 37e2c9c | (Carl Masak)++ | src/Perl6/Grammar.nqp:

[06:23] <dalek> rakudo/nom: Don't consider op adverbs inside of reduce metaop

[06:23] <dalek> rakudo/nom: 

[06:23] <dalek> rakudo/nom: This feels like a stopgap solution, in the sense of plugging the one gap that

[06:23] <dalek> rakudo/nom: we know about in this case. A more unified approach would be welcome.

[06:23] <dalek> rakudo/nom: 

[06:23] <dalek> rakudo/nom: This fixes RT #125289.

[06:23] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125289

[06:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/37e2c9c0cc

[06:23] <masak> the thing that feels uneasy about the solution is that it breaks separation of concerns a little.

[06:24] <masak> but that kind of breakage happens quite a bit in the Perl 6 grammar, sending signals all over the place with contextuals.

[06:25] <masak> so maybe that's nothing to worry about.

[06:25] <masak> but it could be that there's a cuter, more long-term solution.

[06:27] <masak> breakfast &

[06:32] *** mr-foobar left
[06:32] *** bin_005 left
[06:32] *** bin_005 joined
[06:32] <lizmat> ditto&

[06:39] *** mr-foobar joined
[06:42] *** itz2 left
[07:15] *** vendethiel joined
[07:24] *** gfldex joined
[07:39] *** skids left
[08:07] <dalek> roast: c2effba | lizmat++ | S03-metaops/reduce.t:

[08:07] <dalek> roast: Add some tests for #125289, masak++

[08:07] <dalek> roast: review: https://github.com/perl6/roast/commit/c2effba322

[08:07] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125289

[08:08] *** darutoko joined
[08:15] *** espadrine joined
[08:18] *** domidumont joined
[08:22] *** domidumont left
[08:22] *** domidumont joined
[08:23] *** itz2 joined
[08:28] <masak> lizmat++

[08:38] <dalek> rakudo/nom: 2976e70 | lizmat++ | src/Perl6/Grammar.nqp:

[08:38] <dalek> rakudo/nom: Remove whitespace at EOL

[08:38] <dalek> rakudo/nom: 

[08:38] <dalek> rakudo/nom: git diff --ignore-space-at-eol is clean

[08:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2976e70ec5

[08:38] <dalek> rakudo/nom: e9265ae | lizmat++ | src/Perl6/Actions.nqp:

[08:38] <dalek> rakudo/nom: Remove whitespace at EOL

[08:38] <dalek> rakudo/nom: 

[08:38] <dalek> rakudo/nom: git diff --ignore-space-at-eol is clean

[08:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e9265aea5d

[08:38] <dalek> rakudo/nom: 3f510ca | lizmat++ | src/Perl6/World.nqp:

[08:38] <dalek> rakudo/nom: Remove whitespace at EOL

[08:38] <dalek> rakudo/nom: 

[08:38] <dalek> rakudo/nom: git diff --ignore-space-at-eol is clean

[08:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3f510ca990

[08:40] *** amurf joined
[08:44] *** amurf left
[08:45] *** SevenWolf left
[08:46] *** vendethiel left
[08:47] *** quester left
[08:49] <dalek> rakudo/nom: 94eed8f | lizmat++ | src/core/ (6 files):

[08:49] <dalek> rakudo/nom: Remove whitespace at EOL

[08:49] <dalek> rakudo/nom: 

[08:49] <dalek> rakudo/nom: git diff --ignore-space-at-eol is clean

[08:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/94eed8f413

[08:53] *** kurahaupo left
[08:56] *** bin_005 left
[08:57] *** tinyblak joined
[08:57] *** itz2 left
[09:00] *** tinyblak_ left
[09:00] *** brrt joined
[09:01] *** bin_005 joined
[09:05] *** RabidGravy joined
[09:07] * moritz idly wonders why ssh-keygen can generate 4096 bit RSA keys basically in an instant, while gnupg takes several minutes, running out of entropy every so often

[09:08] <grondilu> I have libreadline-dev installed and yet no history or other editing shortcuts in my REPL :(

[09:09] *** itz2 joined
[09:09] *** bin_005_l joined
[09:11] <moritz> grondilu: did you have it installed when you configured MoarVM?

[09:11] *** bin_005 left
[09:13] <grondilu> I think so.  I don't remember having installed it myself, so I believe it was installed from scratch.

[09:15] <masak> I would say https://rt.perl.org/Ticket/Display.html?id=125216 comes down to this: is there a way in C to distinguish 0 and -0 (as n64 numbers)?

[09:16] <masak> and if there is, (a) could someone point me to how, and (b) will that slow down the comparison for everyone?

[09:16] *** itz2 left
[09:19] <dalek> specs: df6900d | moritz++ | pod6-files:

[09:19] <dalek> specs: Add a file which contains meta information about the pod6 files in this repo

[09:19] <dalek> specs: 

[09:19] <dalek> specs: I hope to automatically generate HTML from pod6 for the website.

[09:19] <dalek> specs: review: https://github.com/perl6/specs/commit/df6900d00c

[09:20] <moritz> masak: fwiw I'm vary of breaking the symmetry between == and === on value-type numbers

[09:21] <masak> ok, that is something I'm willing to stop and discuss :)

[09:21] <masak> moritz: isn't that symmetry already broken (but in "the other way") for NaN?

[09:21] <moritz> m: say NaN == NaN, NaN === NaN

[09:21] <camelia> rakudo-moar c2a57e: OUTPUT«FalseTrue␤»

[09:22] <moritz> masak: right, I didn't consider that

[09:22] <masak> (which I really like)

[09:22] <moritz> masak: consider my argument retracted

[09:22] <masak> yay

[09:22] * masak won, with LOGIC o/

[09:22] <masak> boolean logic, even

[09:23] * moritz hates people who can't change their minds

[09:23] <masak> I used to think like that... :P

[09:23] <masak> moritz: "strong opinions, weakly held" -- found that phrase recently. really like it.

[09:26] <masak> ok, right now infix:<===> for Nums does exactly the same job as infix:<==>

[09:26] <masak> but then NaN/NaN is special-cased.

[09:27] <masak> I guess I could solve this with special cases for 0e0/-0e0 and -0e0/0e0

[09:27] * masak tries that solution

[09:29] <lizmat> afk for quite a while&

[09:29] <moritz> masak: do we even generate -0e0 correctly?

[09:29] <moritz> m: say -0e0

[09:29] <camelia> rakudo-moar c2a57e: OUTPUT«-0␤»

[09:30] <moritz> ah yes, we do

[09:31] *** larion joined
[09:39] <dalek> mu: 17d94d5 | moritz++ | util/update-design.perl6.org.sh:

[09:39] <dalek> mu: Change util/update-design.perl6.org.sh to be run on hack.p6c.org

[09:39] <dalek> mu: 

[09:39] <dalek> mu: right now it runs on www.p6c.org, but we do not have a perl6 + Pod::To::HTML

[09:39] <dalek> mu: installation there, so we cannot easily compile the pod6 files to HTML there.

[09:39] <dalek> mu: review: https://github.com/perl6/mu/commit/17d94d5965

[09:42] *** larion left
[09:43] *** larion joined
[09:44] <dalek> mu: 558293a | moritz++ | util/update-design.perl6.org.sh:

[09:44] <dalek> mu: Make DEST_DIR a temporary directory

[09:44] <dalek> mu: 

[09:44] <dalek> mu: saves the problem of creating it and/or cleaning it out

[09:44] <dalek> mu: review: https://github.com/perl6/mu/commit/558293a61d

[09:47] <dalek> mu: e597d81 | moritz++ | util/update-design.perl6.org.sh:

[09:47] <dalek> mu: Only create temp dir if necessary

[09:47] <dalek> mu: review: https://github.com/perl6/mu/commit/e597d81b64

[09:47] <moritz> (passwordless ssh)++

[09:47] <moritz> if it didn't exist, it'd need to be invented immediately :-)

[09:49] *** larion left
[09:53] *** vendethiel joined
[09:53] *** larion joined
[09:53] <dalek> mu: a0609ab | moritz++ | util/update-design.perl6.org.sh:

[09:53] <dalek> mu: Abort on smartlinks.pl error

[09:53] <dalek> mu: review: https://github.com/perl6/mu/commit/a0609ab3fc

[10:00] <dalek> mu: f80d1a3 | moritz++ | util/update-design.perl6.org.sh:

[10:00] <dalek> mu: Make tempdir world-readable before rsyncing

[10:01] <dalek> mu: 

[10:01] <dalek> mu: otherwise Apache will not be able to read the generated files

[10:01] <dalek> mu: review: https://github.com/perl6/mu/commit/f80d1a30d4

[10:01] *** telex left
[10:01] <moritz> \o/ we now have a http://design.perl6.org/S15.html

[10:02] <moritz> on the downside, one of the tables is rendered completely bonkers

[10:02] *** telex joined
[10:04] *** smls joined
[10:04] <moritz> and now the pod6 files are converted to HTML from a cron job too

[10:06] <smls> What's the Perl 6 way of having a "state" variable shared by two subroutines?

[10:06] <smls> The P5 idiom won't work anymore because subs are lexical:

[10:06] <smls> BEGIN { my $state = ...; sub a {...}; sub b {...} }

[10:06] *** brrt left
[10:09] *** AlexDaniel joined
[10:10] <smls> I suppose I'll have to replace the variable with a sub of the form    sub mystate($new?) { state $x; defined($new) ?? $x = $new !! $x }

[10:10] <timotimo> moritz: awesome work!

[10:15] *** FROGGS joined
[10:15] <smls> m: sub a { return-rw (state $x) }; a() = 4; say $a

[10:15] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/zs4DPdUXS4␤Variable '$a' is not declared. Did you mean '&a'?␤at /tmp/zs4DPdUXS4:1␤------> 3 { return-rw (state $x) }; a() = 4; say 7⏏5$a␤»

[10:16] <smls> m: sub a { return-rw (state $x) }; a() = 4; say a()

[10:16] <camelia> rakudo-moar c2a57e: OUTPUT«4␤»

[10:16] <smls> nice

[10:27] *** larion left
[10:35] *** AlexDaniel left
[10:37] <grondilu> m: sub a is rw { state $ }; a() = 5; say a();

[10:37] <camelia> rakudo-moar c2a57e: OUTPUT«5␤»

[10:38] <vendethiel> m: sub a is rw { $ }; a() = 5; say a; # :P

[10:38] <camelia> rakudo-moar c2a57e: OUTPUT«5␤»

[10:38] <smls> :)

[10:39] <smls> m: my $a = 5; say ($a += 6)

[10:39] <camelia> rakudo-moar c2a57e: OUTPUT«11␤»

[10:39] <smls> ^^ are += and similar operators guaranteed to return the new value *after* the assignment?

[10:40] * grondilu expects them to

[10:41] <vendethiel> smls: it seems so http://design.perl6.org/S03.html#Assignment_operators

[10:41] <smls> ok

[11:10] *** nowan_ joined
[11:12] *** nowan left
[11:30] *** diana_olhovik_ joined
[11:38] *** diana_olhovik_ left
[11:40] *** cognominal left
[11:51] *** pecastro left
[11:51] <DrForr> They should get rewritten to $a.+=(6); #notionally, likely does not correspond to real Perl6 code.) so I'd assume so

[11:51] <DrForr> Damn, now I need curry for dinner :)

[12:08] *** koo6 joined
[12:17] *** amurf joined
[12:19] *** spider-mario joined
[12:21] *** cognominal joined
[12:22] *** amurf left
[12:22] *** tinyblak left
[12:29] *** domidumont left
[12:29] *** bin_005_l left
[12:31] *** yqt joined
[12:32] *** newbie joined
[12:32] *** newbie is now known as Guest83279

[12:33] *** itz2 joined
[12:35] *** yqt left
[12:39] *** FROGGS left
[12:48] *** pecastro joined
[12:52] *** tinyblak joined
[12:58] *** itz2 left
[13:09] *** rindolf left
[13:12] *** BenGoldberg joined
[13:13] *** aborazmeh joined
[13:13] *** aborazmeh left
[13:13] *** aborazmeh joined
[13:13] *** smls left
[13:13] *** larion joined
[13:17] *** larion left
[13:23] *** lolisa joined
[13:34] *** aborazmeh left
[13:36] *** orliesaurus joined
[13:36] *** orliesaurus left
[13:44] *** rindolf joined
[13:45] *** koo6 left
[13:56] *** beastd joined
[14:07] *** amurf joined
[14:11] *** amurf left
[14:26] *** kaare__ left
[14:34] *** Peter_R joined
[15:15] <llfourn> how to do equiv of $obj->$method_in_var in p6?

[15:16] <timotimo> you mean $method_in_var contains the method name or a method object?

[15:16] <llfourn> name :)

[15:16] <timotimo> ok

[15:16] <timotimo> $object."$methodname"(...)

[15:17] <llfourn> ahhh ofc thanks

[15:17] <timotimo> you're welcome :)

[15:17] <llfourn> btw I have got the -> thing working!

[15:17] <llfourn> the slang -- thanks for the help yesterday

[15:18] <timotimo> cool :)

[15:24] *** salv0 left
[15:25] *** FROGGS joined
[15:27] <moritz> \o

[15:28] <moritz> any objections to moving docs/feather/syn_index.html in the mu repo to specs/index.html?

[15:28] *** skids joined
[15:28] <hoelzro> [Coke]: is there a ticket open for that blocking-leading.t stuff?

[15:31] *** kaare__ joined
[15:33] <dalek> specs: 9c0d37f | moritz++ | index.html:

[15:33] <dalek> specs: Import index.html from mu:docs/feather/syn_index.html

[15:33] <dalek> specs: review: https://github.com/perl6/specs/commit/9c0d37fe9e

[15:33] <dalek> specs: 4dda21f | moritz++ | html/ (4 files):

[15:33] <dalek> specs: Import some more auxilliary files from mu:/docs/feather/

[15:33] <dalek> specs: review: https://github.com/perl6/specs/commit/4dda21f83c

[15:34] <dalek> mu: 2b903d2 | moritz++ | util/update-design.perl6.org.sh:

[15:34] <dalek> mu: Adjust paths for synopses HTML generation

[15:34] <dalek> mu: review: https://github.com/perl6/mu/commit/2b903d2382

[15:37] *** salv0 joined
[15:42] *** larion joined
[15:47] *** domidumont joined
[15:47] <dalek> specs: d736df3 | moritz++ | / (2 files):

[15:47] <dalek> specs: index.html cleanup

[15:47] <dalek> specs: 

[15:47] <dalek> specs: * delete accidentally duplicated index.html

[15:47] <dalek> specs: * remove passages that aren't true anymore

[15:47] <dalek> specs: * more "specification" -> "design doc" wording changes

[15:47] <dalek> specs: review: https://github.com/perl6/specs/commit/d736df3dfd

[16:03] *** zakharyas joined
[16:07] <dalek> specs: 19928e3 | moritz++ | html/ (2 files):

[16:07] <dalek> specs: index.html: get rid of a column

[16:07] <dalek> specs: 

[16:07] <dalek> specs: instead of heaving a name/description, and a separate "Synopsis" column as a link,

[16:07] <dalek> specs: make the name/description the link to the HTML version of the synopsis.

[16:07] <dalek> specs: 

[16:07] <dalek> specs: I hope this makes it clearer that the synopsis is the most interesting

[16:07] <dalek> specs: of these documents, and the "default" thing to go to

[16:07] <dalek> specs: review: https://github.com/perl6/specs/commit/19928e38dc

[16:10] <moritz> feedback on the new http://design.perl6.org/ front page welcome

[16:11] *** spider-mario left
[16:11] <RabidGravy> anyone more familiar with python than I am explain why you might do "xdg_data_dirs = [x for x in xdg_data_dirs if x]"?

[16:11] <RabidGravy> looks pointless to me

[16:12] *** tinyblak left
[16:13] <moritz> RabidGravy: it removes false entries from xdg_data_dirs

[16:13] <moritz> (None, empty list, 0)

[16:14] <RabidGravy> ah okay, my brane was parsing it wrong

[16:14] <RabidGravy> cheers

[16:19] <moritz> yes, the placement of the "if" is weird

[16:19] <moritz> it actually applies inside the loop

[16:23] *** tinyblak joined
[16:25] <timotimo> moritz: i welcome that change very much

[16:29] *** zakharyas left
[16:34] *** araujo left
[16:36] *** tinyblak left
[16:37] *** tinyblak joined
[16:37] *** tinyblak left
[16:55] <ugexe> seems odd it needs javascript enabled to view proper alignment

[17:01] <moritz> ugexe: huh?

[17:01] *** jepeway left
[17:01] <moritz> without javascript, more text is shown by default

[17:01] <moritz> with javascript, it's behind a [read more] link

[17:02] <moritz> but I don't see any alignm difference

[17:02] <ugexe> if i have javascript enabled, the links in the first column are center aligned in the column and the non-links are left aligned

[17:02] <ugexe> er, if i have js disabled^

[17:02] <ugexe> if i have js enabled, they are all left aligned

[17:02] <moritz> ugexe: try a ctrl+shift+r to reload the CSS?

[17:03] <ugexe> ah foolish me 

[17:03] <moritz> the synopsis links are now inside <th> elements, which are center-aligned by default, but the new CSS should left-align them

[17:07] <ugexe> can a grammar read a stream of data? like the theoretical `~=` here: `while my $r = $sock.recv { $grammar.parse ~= $r }` such that the match would be froze when it reaches the end (assuming it has not failed yet) and wait for more input?

[17:08] *** Ben_Goldberg joined
[17:09] <timotimo> we want something like that at some point, yeah

[17:10] <ugexe> ah. its nice i can emit data out of the grammar before its finished... just need to emit data into it now :)

[17:11] *** BenGoldberg left
[17:13] *** mr-foobar left
[17:14] *** mr-foobar joined
[17:21] *** andreoss joined
[17:27] *** FROGGS left
[17:28] *** FROGGS joined
[17:40] <TimToady> m: BEGIN (my $state = 0; sub a {say ++$state}; sub b {say --$state}); a;a;a;b;b

[17:40] <yoleaux> 29 May 2015 21:46Z <japhb> TimToady: Why doesn't '*@foo!' in a signature mean "slurp one or more"?  Was that a conscious decision or just not yet defined to have a meaning?

[17:40] <camelia> rakudo-moar c2a57e: OUTPUT«1␤2␤3␤2␤1␤»

[17:41] <TimToady> .tell smls see http://irclog.perlgeek.de/perl6/2015-05-31#i_10681349

[17:41] <yoleaux> TimToady: I'll pass your message to smls.

[17:41] <TimToady> japhb: I'd much rather see +@foo than *@foo!

[17:45] *** amurf joined
[17:45] *** Guest83279 left
[17:49] *** amurf left
[17:58] *** xfix joined
[18:04] *** andreoss left
[18:09] <rindolf> Hi all. Sup?

[18:09] * rindolf is psyched about perl-5.22.0.

[18:10] * sjn is psyched about perl6-1.0.0.

[18:10] <sjn> or something :)

[18:20] *** Sqirrel joined
[18:26] *** Sqirrel_ joined
[18:26] *** Sqirrel left
[18:26] <dalek> perl6-roast-data: 20624b8 | coke++ | / (9 files):

[18:26] <dalek> perl6-roast-data: today (automated commit)

[18:26] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/20624b85d6

[18:29] *** spider-mario joined
[18:35] *** Sqirrel_ left
[18:35] *** Sqirrel joined
[18:36] *** xfix left
[18:42] <DrForr> m: my %x; %x<a> = \%x; say %x

[18:42] <camelia> rakudo-moar c2a57e: OUTPUT«(timeout)»

[18:43] <DrForr> That bug's still there, eh.

[18:44] <dalek> specs: 92fb08d | (Anthony Parsons)++ | html/perl.css:

[18:44] <dalek> specs: Shuffle colours around for accessibility

[18:44] <dalek> specs: 

[18:44] <dalek> specs: Some LHF - the page was assuming nobody would ever change their browser default

[18:44] <dalek> specs: text colour from black, and most of these are redundant hard-coded declarations

[18:44] <dalek> specs: of default-defaults anyway.

[18:44] <dalek> specs: review: https://github.com/perl6/specs/commit/92fb08df87

[18:46] <flussence> (I'm scared to do anything more with that file... the first line says it's for modern browsers and the second mentions netscape 4)

[18:49] *** FROGGS left
[18:51] <moritz> flussence: feel free to completely redo it :-)

[18:51] *** [Tux] left
[18:52] <moritz> flussence: afaict it was copied from perl.org before the last redesign

[18:52] <moritz> and no, we don't need IE7 support

[18:52] <flussence> heh :)

[18:52] <moritz> I guess dropping IE8 support would be fine too (as long as it's not rendered completely bonkers with IE8)

[18:53] *** smls joined
[18:54] <smls> good evening

[18:54] <yoleaux> 17:41Z <TimToady> smls: see http://irclog.perlgeek.de/perl6/2015-05-31#i_10681349

[18:54] <smls> :P

[18:55] *** yqt joined
[18:57] <smls> TimToady: re "I'd much rather see +@foo than *@foo!", the problem with +@foo is that unlike *@foo it already has a commonly used meaning outside of signatures, which could make it confusing.

[18:58] <smls> Why is "*@arg" using a prefix but "$arg!" a postfix, anyway?

[18:59] <flussence> .oO( and why aren't the + and * postfix, like they are in regex? )

[18:59] *** mr-foobar left
[18:59] <smls> yeahm,   $foo?   @foo*   @foo+   could really push the analogy with regexes to the limit ;)

[18:59] *** mr-foobar joined
[19:00] <flussence> oh, I totally forgot about ?... and it's already used that way!

[19:00] <smls> yeah

[19:01] <flussence> +1 to that, as long as we don't start allowing things like @var+? in the middle of signatures :)

[19:01] <smls> there's probably some reason for the way things are, though

[19:03] <smls> probably something involving low-level parsing issues that only TimToady understands ;)

[19:03] <timotimo> i finally got to see The Princess Bride

[19:03] *** [Tux] joined
[19:05] <ugexe> im sorry

[19:06] <timotimo> hm?

[19:07] <ugexe> could have seen the new mad max instead

[19:11] <smls> m: my sub aaa (*$a) { say $a.perl }; aaa

[19:11] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/YyUSkyi6OU␤Calling aaa() will never work with declared signature (Any $a)␤at /tmp/YyUSkyi6OU:1␤------> 3my sub aaa (*$a) { say $a.perl }; 7⏏5aaa␤»

[19:11] <smls> ^^ Looks like the * is silently ignored there.

[19:11] <moritz> yes

[19:14] <vendethiel> I think we know we don't know what that's supposed to do, right?

[19:14] <vendethiel> *g*

[19:17] <timotimo> ugexe: i'd rather watch "Mario Kart: Fury Road"

[19:18] <ugexe> ill watch if they put the speaker truck + flamethrower guitar shtick in it

[19:19] <DrForr> King Koopa needs a soundtrack.

[19:20] <DrForr> As long as he's voiced by Anthony Hopkins :)

[19:20] *** ggoebel left
[19:21] *** domidumont left
[19:30] <[Coke]> hoelzro: no ticket yet, sorry.

[19:33] *** kurahaupo1 joined
[19:39] *** SevenWolf joined
[19:39] *** bin_005_l joined
[19:43] *** gfldex left
[19:50] *** kurahaupo1 is now known as kurahaupo

[19:52] *** koo6 joined
[19:52] *** bin_005 joined
[19:53] *** bin_005_l left
[19:57] <japhb> timotimo: "You keep using that word.  I do not think it means what you think it means."

[19:57] <japhb> "Iocaine powder.  I'd bet my life on it."

[19:57] <japhb> Oh dangit, now I got started ....

[20:01] *** gfldex joined
[20:01] *** yqt left
[20:05] <japhb> Does anyone happen to know where jnthn put the event processing framework he wrote for the "objects intersect concurrency" talk?  He's got GitHub repos for OO::Monitors and OO::Actors, but I didn't see one for the last framework.

[20:06] <japhb> I wonder if $jnthn.marriage has already happened ...

[20:06] <timotimo> japhb: i found that line about the powder quite amusing myself

[20:09] <japhb> timotimo: One of the things I love about that film is that if you stop to think about almost any line in the movie, you'll realize there's a joke in it.  "Now where is that secret knot?  It's impossible to find ...."  *immediately finds it*

[20:12] <dalek> specs: aac6f72 | (Anthony Parsons)++ | html/ (2 files):

[20:12] <dalek> specs: Give the index page a facelift

[20:12] <dalek> specs: 

[20:12] <dalek> specs: - 1 fresh stylesheet, perl6.org-flavoured

[20:12] <dalek> specs: - 1 heaped tablespoon of HTML5 semantic good stuff

[20:12] <dalek> specs: 

[20:12] <dalek> specs: (Synopses are still using the original CSS for now)

[20:12] <dalek> specs: review: https://github.com/perl6/specs/commit/aac6f724f6

[20:13] <flussence> (now for the "get it to work in IE8" part...)

[20:18] *** lizmat left
[20:18] *** nbdsp joined
[20:22] *** yqt joined
[20:22] *** zakharyas joined
[20:22] *** telex left
[20:24] *** telex joined
[20:24] *** nbdsp left
[20:26] *** darutoko left
[20:26] <timotimo> why do we have "*" and "+" instead of a hoverable piece of text or even -gasp- a symbol?

[20:27] <moritz> flussence++

[20:28] <moritz> I also wonder if the DRAFT markers should be in a separate "Status" column

[20:33] <dalek> specs: d04dd72 | (Anthony Parsons)++ | html/index.html:

[20:33] <dalek> specs: Add HTML5 hack for IE <= 8 to display correctly

[20:33] <dalek> specs: review: https://github.com/perl6/specs/commit/d04dd725d3

[20:34] <flussence> I hope that works, it looks mostly okay for everything else on browsershots.org

[20:36] <timotimo> https://developers.google.com/speed/pagespeed/insights/?utm_source=MFT&utm_campaign=MFT&utm_medium=incoming-link&priorityGroup=USABILITY&url=http%3A%2F%2Fdesign.perl6.org%2F

[20:36] <timotimo> :P

[20:36] <flussence> timotimo++ # didn't know about that site, neat!

[20:37] <moritz> http://domm.plix.at/perl/2015_05_a_very_simple_perl6_script.html

[20:42] <moritz> the error messages really shine

[20:42] *** Ben_Goldberg left
[20:43] <timotimo> except the "please use :g", which could also mention that it has to go in front or inside

[20:43] <timotimo> well, :g probably can't go inside

[20:43] <timotimo> but the other adverbs can

[20:45] <moritz> none of the match adverbs (:g, :x, :ov, :ex) can go inside

[20:46] <smls> Neat, you can use 'when'/'default' directives directly in an 'if' block without wrapping them in a 'given':

[20:46] <smls> if $foo -> $_ { when "a" {...}; when "b" {...}; default {...} }

[20:46] <timotimo> aye

[20:47] <smls> I already knew it forked with 'for' blocks; nice to know it's more general than that :P

[20:47] <smls> *worked

[20:49] <timotimo> works with any contextualizer

[20:49] <timotimo> also does the "skipping" stuff

[20:49] *** aindilis joined
[20:50] <smls> m: {$_ = 5; when 5 {say "when"}; default {say "default"}}

[20:50] <camelia> rakudo-moar c2a57e: OUTPUT«when␤»

[20:50] <smls> it seems the definition of 'contextualizer' is very loose ;)

[20:52] <timotimo> any block that sets a $_, or something like that

[20:52] <timotimo> well, it gets interesting to see if and how it does the skipping thing

[20:52] <smls> skips between all "sibling" when/default blocks I guess?

[20:53] <smls> i.e. ones in the same parent block

[20:53] <timotimo> it skips out of the block when one of the "when" blocks has not specifically "proceed"ed

[20:53] <timotimo> m: {$_ = 5; 1.say; when 5 {say "when"}; 2.say; default {say "default"}; 3.say;}

[20:53] <camelia> rakudo-moar c2a57e: OUTPUT«1␤when␤»

[20:54] <smls> m: $_ = 5; when 5 { say "when" }; say "alive"

[20:54] <camelia> rakudo-moar c2a57e: OUTPUT«when␤»

[20:54] <smls> :P

[20:54] *** cognominal left
[20:55] <timotimo> ok, whatevs :P

[20:55] *** zakharyas left
[21:04] *** bin_005_k joined
[21:04] *** Ben_Goldberg joined
[21:04] *** bin_005 left
[21:13] <dalek> specs: 5c624d1 | (Anthony Parsons)++ | html/style.css:

[21:13] <dalek> specs: We don't *really* need an explicit font size

[21:13] <dalek> specs: review: https://github.com/perl6/specs/commit/5c624d1d02

[21:13] <dalek> specs: 60c6126 | (Anthony Parsons)++ | html/index.html:

[21:13] <dalek> specs: Use HTML5 "hidden" attribute for «Read more» box

[21:13] <dalek> specs: 

[21:13] <dalek> specs: Instead of loading all of jQuery to do it.

[21:13] <dalek> specs: review: https://github.com/perl6/specs/commit/60c6126f06

[21:13] <dalek> specs: 74dc6b0 | (Anthony Parsons)++ | html/ (2 files):

[21:13] <dalek> specs: Make index slightly better on phones

[21:13] <dalek> specs: 

[21:14] <dalek> specs: As suggested by Google's analysis tools, add a meta[name=viewport] tag and

[21:14] <dalek> specs: adjust sizes so it doesn't render on phones using microscopic fonts and

[21:14] <dalek> specs: horizontal scrollbars. The table still scrolls horizontally, but at least the

[21:14] <dalek> specs: important bits fit on screen now.

[21:14] <dalek> specs: review: https://github.com/perl6/specs/commit/74dc6b0016

[21:14] *** dolmen joined
[21:14] <flussence> that oughta do it for now

[21:14] *** bin_005_k left
[21:15] *** bin_005 joined
[21:17] *** Peter_R left
[21:17] *** pierrot left
[21:17] *** pierrot joined
[21:19] *** smash joined
[21:19] *** bin_005_k joined
[21:20] *** Peter_R joined
[21:20] *** Ben_Goldberg left
[21:22] *** amurf joined
[21:22] *** bin_005 left
[21:24] <dalek> specs: 8bc51ea | (Anthony Parsons)++ | html/index.html:

[21:24] <dalek> specs: Make "Read more" button work as intended

[21:24] <dalek> specs: review: https://github.com/perl6/specs/commit/8bc51eaa2c

[21:26] *** amurf left
[21:27] *** rindolf left
[21:28] *** RabidGravy left
[21:30] *** lizmat joined
[21:32] <lizmat> japhb: $jnthn.marrage

[21:32] <lizmat> argh

[21:32] <lizmat> japhb: $jnthn.marriage ~~ blessed

[21:33] <timotimo> yeah, throw out jquery

[21:34] <dalek> specs: dbb3f62 | (Anthony Parsons)++ | html/style.css:

[21:34] <dalek> specs: Need a tiny bit more padding to fit the image in

[21:34] <dalek> specs: review: https://github.com/perl6/specs/commit/dbb3f629ef

[21:34] <flussence> okay, *now* it's done :)

[21:35] <flussence> .oO( time to do the same for the modules page? :)

[21:36] *** rarara left
[21:40] *** RabidGravy joined
[21:44] *** rararara joined
[21:45] <RabidGravy> why would  e,g.  $foo.d be false and $foo.Str.IO.d be true where $foo is an IO::Path of a directory I just created?

[21:45] <RabidGravy> very off

[21:45] <RabidGravy> very odd

[21:47] <lizmat> RabidGravy: that's indeed strange?  care to give an example?

[21:49] *** beastd left
[21:54] <lizmat> good night, #perl6!

[21:54] <RabidGravy> I'll split out in something concise I can test

[21:55] *** espadrine left
[21:56] *** smls left
[22:07] *** dolmen left
[22:08] <dalek> modules.perl6.org: bc179db | (Anthony Parsons)++ | web/ (2 files):

[22:08] <dalek> modules.perl6.org: Move stylesheet into its own file

[22:08] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/bc179db352

[22:08] *** kaare__ left
[22:08] <flussence> ...I think I'll leave that one alone for now, it's harder to hack on than I thought.

[22:09] *** andreoss joined
[22:13] *** vendethiel left
[22:18] *** vendethiel joined
[22:20] *** bin_005_k left
[22:28] *** rba_ left
[22:29] <flussence> oh crud, that didn't work how I thought it would...

[22:29] *** Ben_Goldberg joined
[22:30] <dalek> modules.perl6.org: 315c5b0 | (Anthony Parsons)++ | web/build-project-list.pl:

[22:30] <dalek> modules.perl6.org: Put style.css in the output directory during build

[22:30] <dalek> modules.perl6.org: 

[22:30] <dalek> modules.perl6.org: Oops.

[22:30] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/315c5b0ba5

[22:34] <timotimo> RabidGravy: we cache stat results, or something like that

[22:34] *** RabidGravy left
[22:37] <timotimo> you could maybe "strace" to figure out how often stat is being called?

[22:42] *** vendethiel left
[22:54] *** Khisanth left
[22:54] *** rararara left
[22:57] *** Ben_Goldberg left
[23:09] *** dayangkun joined
[23:13] *** amurf joined
[23:14] *** Ben_Goldberg joined
[23:16] *** Khisanth joined
[23:18] *** kurahaupo left
[23:20] *** vendethiel joined
[23:23] *** andreoss left
[23:24] *** salv0 left
[23:34] *** BenGoldberg joined
[23:37] *** Ben_Goldberg left
[23:39] *** SevenWolf left
[23:40] *** SevenWolf joined
[23:42] *** vendethiel left
[23:50] *** Akagi201 left
[23:51] *** Peter_R left
[23:52] *** SevenWolf left
[23:59] *** spider-mario left
