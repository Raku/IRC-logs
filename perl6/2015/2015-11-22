[00:00] <dalek> roast: 743b620 | TimToady++ | S32-array/shift.t:

[00:00] <dalek> roast: test that shift on sparse array produces Nil

[00:00] <dalek> roast: review: https://github.com/perl6/roast/commit/743b620115

[00:00] *** sprocket left
[00:01] <TimToady> BenGoldberg: you're right

[00:04] <BenGoldberg> Add another test, so that the second shift on that array produces the '2' 

[00:05] <BenGoldberg> m: my @a = 1, 2; @a[0]:delete; say so @a.shift; say so @a.shift;

[00:05] <camelia> rakudo-moar : OUTPUT«False␤False␤»

[00:05] *** sprocket joined
[00:05] <BenGoldberg> ^ Should be False True

[00:11] <dalek> rakudo/nom: c016df5 | TimToady++ | src/core/Array.pm:

[00:11] <dalek> rakudo/nom: actually shift the sparse array

[00:11] <dalek> rakudo/nom: 

[00:11] <dalek> rakudo/nom: BenGoldberg++ for the eyeballs.

[00:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c016df548c

[00:11] <dalek> roast: 7a2ad38 | TimToady++ | S32-array/shift.t:

[00:11] <dalek> roast: test we actually shifted sparse array

[00:11] <dalek> roast: review: https://github.com/perl6/roast/commit/7a2ad38067

[00:13] <BenGoldberg> m: say SEQ( say 'ah?'; 42 );

[00:13] <camelia> rakudo-moar : OUTPUT«ah?␤42␤»

[00:14] *** zakharyas joined
[00:15] *** Peter_R left
[00:18] *** polettix left
[00:20] *** leont left
[00:25] *** tokuhiro_ joined
[00:26] *** BenGoldberg left
[00:26] <TimToady> basically, C-comma semantics

[00:27] <TimToady> or a non-block block

[00:27] *** BenGoldberg joined
[00:27] *** colomon left
[00:28] *** BenGoldberg left
[00:29] *** BenGoldberg joined
[00:29] *** colomon joined
[00:29] <b2gills> m: say race map -*, ^100

[00:29] <camelia> rakudo-moar : OUTPUT«HyperSeq.new␤»

[00:30] *** yqt left
[00:30] *** Psyche^_ joined
[00:30] *** tokuhiro_ left
[00:34] <TimToady> m: say eager race map -*, ^100

[00:34] <camelia> rakudo-moar : OUTPUT«()␤»

[00:34] <TimToady> m: say first * %% 7, race map -*, ^100

[00:34] <camelia> rakudo-moar : OUTPUT«Nil␤»

[00:34] *** Psyche^ left
[00:34] <TimToady> m: .say for race map -*, ^100

[00:34] <camelia> rakudo-moar : OUTPUT«0␤-1␤-2␤-3␤-4␤-5␤-6␤-7␤-64␤-8␤-9␤-65␤-66␤-10␤-67␤-11␤-68␤-12␤-13␤-69␤-14␤-70␤-15␤-71␤-16␤-17␤-72␤-18␤-19␤-73␤-20␤-21␤-74␤-22␤-75␤-23␤-76␤-24␤-25␤-77␤-26␤-78␤-27␤-79␤-28␤-80…»

[00:35] <TimToady> seems some things aren't hooked up to HyperSeq quite right, just yet

[00:35] *** cdg joined
[00:41] *** colomon left
[00:42] *** colomon joined
[00:48] *** sprocket left
[00:50] <BenGoldberg> If I'm creating an infinite lazy Iterator, should sink-all throw an exception?

[00:51] <TimToady> what if you want to call it just for the side effects?

[00:52] <BenGoldberg> In this case, it's just generating primes, why would there be side effects?

[00:52] <BenGoldberg> Well, unless you count the debugging output as a side effect.

[00:52] <TimToady> there's no way to know your intent

[00:53] <TimToady> m: for 1..* { .say }

[00:53] *** colomon left
[00:53] <camelia> rakudo-moar : OUTPUT«(timeout)1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34␤35␤36␤37␤38␤39␤40␤41␤42␤43␤44␤45␤46␤47␤48␤49␤50␤51␤52␤53…»

[00:53] <TimToady> should that produce an exception?

[00:54] <diakopter> m: .say for 1..*

[00:54] <BenGoldberg> m: (1..*).iterator.say

[00:54] <camelia> rakudo-moar : OUTPUT«(timeout)1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34␤35␤36␤37␤38␤39␤40␤41␤42␤43␤44␤45␤46␤47␤48␤49␤50␤51␤52␤53…»

[00:54] <camelia> rakudo-moar : OUTPUT«<anon|304326384>.new␤»

[00:54] <BenGoldberg> m: (1..*).iterator.sink-all; say 'ok';

[00:54] <camelia> rakudo-moar : OUTPUT«(timeout)»

[00:55] *** bpmedley joined
[00:55] *** colomon joined
[00:59] *** zakharyas left
[01:00] <BenGoldberg> p6: https://gist.github.com/BenGoldberg1/467dff5994d16fb4af23

[01:00] <camelia> rakudo-moar: OUTPUT«ok 1␤(2 3 5 7 11 13 17 19 23 29 31 37 41 43 53 59 61 71 73 79 83 89 101 103 109 113 131 139 149 151)␤ok 2␤»

[01:00] <diakopter> .tell jnthn shaved 8% off CORE compilation by writing the idx after looking it up in interp.c http://i.imgur.com/WX35mFe.png

[01:00] <yoleaux> diakopter: I'll pass your message to jnthn.

[01:00] <BenGoldberg> j: https://gist.github.com/BenGoldberg1/467dff5994d16fb4af23

[01:00] <camelia> rakudo-jvm c016df: OUTPUT«ok 1␤(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 59 71 77 83 89 101 107 113 119 143 149 161 167 191 203)␤ok 2␤»

[01:00] <BenGoldberg> That's not good.

[01:02] * BenGoldberg slaps jakudo.

[01:06] <BenGoldberg> The output from moar is correct, and I don't know wtf is wrong with r-j, cause 53 and 61 are prime, and 77 definitely isn't.

[01:07] <zengargoyle> TIL, camelia runs urls...

[01:08] <BenGoldberg> Only github gists.

[01:08] <zengargoyle> neat enough.

[01:15] *** ifim left
[01:17] *** cdg left
[01:25] *** sprocket joined
[01:35] *** pmurias left
[01:39] *** skids joined
[02:17] *** Ben_Goldberg joined
[02:18] <Ben_Goldberg> m: https://gist.github.com/BenGoldberg1/7e365fc0a9fe49eed7be

[02:18] <camelia> rakudo-moar : OUTPUT«Start␤Produced 1426 primes: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 3…»

[02:18] <Ben_Goldberg> j: https://gist.github.com/BenGoldberg1/7e365fc0a9fe49eed7be

[02:18] <camelia> rakudo-jvm c016df: OUTPUT«Start␤Produced 67 primes: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 31…»

[02:20] <flussence> j: say ^200 .grep(*.is-prime) # I wonder if it at least gets *this* right?

[02:20] <camelia> rakudo-jvm c016df: OUTPUT«(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199)␤»

[02:20] *** BenGoldberg left
[02:21] <Ben_Goldberg> On the one hand, I'm glad that both moar and rakudo run this code the same.  On the other hand, I'm disappointed about how slow jakudo runs.

[02:27] *** tokuhiro_ joined
[02:32] *** tokuhiro_ left
[02:38] *** xpen joined
[02:39] *** lab left
[02:42] *** lab joined
[02:44] *** ilbot3 left
[02:46] *** ilbot3 joined
[02:47] *** Zoffix joined
[02:49] <Zoffix> m: say ^1000 .grep(.is-prime)

[02:49] <camelia> rakudo-moar : OUTPUT«Method 'is-prime' not found for invocant of class 'Any'␤  in block <unit> at /tmp/q1aLJ7nbk6:1␤␤»

[02:49] <Zoffix> m: say ^1000 .grep(*.is-prime)

[02:49] <camelia> rakudo-moar : OUTPUT«(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 36…»

[02:50] * Zoffix picks up the blown mind

[02:50] <Zoffix> Tweet-worthy :P

[02:52] <Zoffix> m: say ^1000000000000 .grep(*.is-prime)

[02:52] <camelia> rakudo-moar : OUTPUT«(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 36…»

[02:52] <Zoffix> 0.o

[02:53] <Zoffix> wait wat:

[02:53] <Zoffix> m: say ^1000000000000 .grep(*.is-prime).elems

[02:53] <Zoffix> How does it know to return early above, but now it'll timeout?

[02:53] <TimToady> .elems is never lazy

[02:53] <camelia> rakudo-moar : OUTPUT«(timeout)»

[02:53] <TimToady> also, say stops at 100 elements

[02:53] *** n0tjack joined
[02:53] <Zoffix> Ah

[02:53] *** xpen left
[02:54] <gfldex> does it stop at 100 all the time or just for camelia?

[02:56] <TimToady> all the time; use put if you want everything

[02:56] <TimToady> say is about "gist"

[02:56] <gfldex> this cheat should be documented

[02:57] <gfldex> even if it's clearly documented, it will lead to bugs

[02:59] <Zoffix> It's not really a "cheat". You're asking to print the .gist.

[03:00] *** lab left
[03:00] *** znpy joined
[03:00] <Zoffix> That the doc says about 4 times on one page :P http://doc.perl6.org/routine/say

[03:00] <Zoffix> Sure, there'll be bugs, but due to people not reading docs and expecting `say` to be the `print` version of other languages.

[03:02] *** xpen joined
[03:04] *** [Sno] left
[03:04] <gfldex> Zoffix: http://doc.perl6.org/type/List got a generic section for gist and does not mention what happens in https://github.com/rakudo/rakudo/blob/nom/src/core/List.pm#L591

[03:06] <gfldex> I'm trying to make Perl 6 foolproof by being the fool.

[03:06] *** kid51 left
[03:07] <Zoffix> gfldex, I opened an Issue: https://github.com/perl6/doc/issues/206

[03:19] *** lab joined
[03:21] *** noganex_ joined
[03:21] <dalek> modules.perl6.org/new-db-builder: 6dd1ad2 | (Zoffix Znet)++ | web/lib/DbBuilder (4 files):

[03:21] <dalek> modules.perl6.org/new-db-builder: GitHub Source experimental plugin fully functional

[03:21] <dalek> modules.perl6.org/new-db-builder: 

[03:21] <dalek> modules.perl6.org/new-db-builder: Missing docs / tests

[03:21] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/6dd1ad2bee

[03:22] <Zoffix> BTW, if we need to support more than just GitHub repos, let me know :P

[03:23] <Zoffix> At least on modules.perl6.org it'll soon be very trivial to add new sources :)

[03:23] <Zoffix> (not sure about how easy it is with panda tho)

[03:24] *** noganex left
[03:25] <dalek> doc: 455f420 | (Wenzel P. P. Peppmeyer)++ | doc/Type/Mu.pod:

[03:25] <dalek> doc: List::gist does truncate, others may do so as well.

[03:25] <dalek> doc: review: https://github.com/perl6/doc/commit/455f420259

[03:25] <dalek> doc: 38fc995 | (Wenzel P. P. Peppmeyer)++ | doc/Type/Mu.pod:

[03:25] <dalek> doc: Mention .put for machine readable output.

[03:25] <dalek> doc: review: https://github.com/perl6/doc/commit/38fc9951be

[03:25] <dalek> doc: 30db8ef | (Zoffix Znet)++ | doc/Type/Mu.pod:

[03:25] <dalek> doc: Merge pull request #207 from gfldex/master

[03:25] <dalek> doc: 

[03:25] <dalek> doc: .gist may truncate .put may be better for machine readable output

[03:25] <dalek> doc: review: https://github.com/perl6/doc/commit/30db8efa29

[03:25] <dalek> doc: 75af98e | (Brock Wilcox)++ | / (2 files):

[03:25] <dalek> doc: Add initial styleguide

[03:25] <dalek> doc: review: https://github.com/perl6/doc/commit/75af98ee4f

[03:25] <dalek> doc: aaf6572 | (Zoffix Znet)++ | / (2 files):

[03:25] <dalek> doc: Merge pull request #202 from perl6/initial-styleguide

[03:25] <dalek> doc: 

[03:25] <dalek> doc: Add initial styleguide

[03:25] <dalek> doc: review: https://github.com/perl6/doc/commit/aaf6572433

[03:26] *** lab left
[03:27] <flussence> iirc there's a few people using gitlab already, might want to add that

[03:27] <Zoffix> k

[03:27] *** lab joined
[03:28] <flussence> (I've been thinking of moving over there myself for a while, I just need to start producing actual code to move :)

[03:28] <dalek> doc: a188308 | (Zoffix Znet)++ | doc/Type/Mu.pod:

[03:28] <dalek> doc: Reword/grammar

[03:28] <dalek> doc: review: https://github.com/perl6/doc/commit/a188308420

[03:28] <Zoffix> I use it for private repos (they're free), but I often find the site is slow

[03:36] *** lab left
[03:41] *** advwp joined
[03:46] *** Zoffix left
[03:46] *** skids left
[03:46] *** MadcapJake left
[03:46] *** pecastro left
[03:46] *** havenwood left
[03:46] *** chewie_1982 left
[03:46] *** skaji_ left
[03:46] *** freeze_ left
[03:46] *** Guest86646 left
[03:46] *** psch left
[03:46] *** huf left
[03:46] *** colomon left
[03:46] *** xenu left
[03:46] *** bbarker left
[03:46] *** doublec left
[03:46] *** jevin_ left
[03:46] *** petercommand left
[03:46] *** go|dfish left
[03:46] *** Humbedooh left
[03:46] *** bitmap left
[03:46] *** dgl left
[03:46] *** mspo left
[03:46] *** salva left
[03:46] *** dpk left
[03:46] *** crux left
[03:46] *** mprelude left
[03:46] *** wtw left
[03:46] *** Ulti left
[03:46] *** ssflying left
[03:46] *** avar left
[03:46] *** confuseAcat left
[03:46] *** burnersk left
[03:46] *** jordman_ left
[03:46] *** yoleaux left
[03:46] *** brabo left
[03:46] *** sprocket left
[03:46] *** ugexe left
[03:46] *** jnthn left
[03:46] *** leedo_ left
[03:46] *** Khisanth left
[03:46] *** breinbaas left
[03:46] *** zostay left
[03:46] *** mrf left
[03:46] *** Timbus left
[03:46] *** [particle]1 left
[03:46] *** inokenty left
[03:46] *** DrForr left
[03:46] *** stux|RC-only left
[03:46] *** bbkr left
[03:46] *** stmuk_ left
[03:46] *** maddingu1 left
[03:46] *** cognominal left
[03:46] *** Bucciarati left
[03:46] *** noganex_ left
[03:46] *** BinGOs left
[03:46] *** nowan_ left
[03:46] *** pyrimidi_ left
[03:46] *** luis left
[03:46] *** Spot__ left
[03:46] *** ggherdov left
[03:46] *** lucs left
[03:46] *** M-Illandan left
[03:46] *** SmokeMachine_ left
[03:46] *** japhb left
[03:46] *** awwaiid left
[03:46] *** Psyche^_ left
[03:46] *** geekosaur left
[03:46] *** arnsholt left
[03:46] *** sftp left
[03:46] *** [Coke]_ left
[03:46] *** Juerd left
[03:46] *** samb1 left
[03:46] *** ribasushi left
[03:46] *** lsm-desktop left
[03:46] *** camelia left
[03:46] *** silug left
[03:46] *** ponbiki left
[03:46] *** flussence left
[03:46] *** quietfanatic left
[03:46] *** TEttinger left
[03:46] *** zengargoyle left
[03:46] *** jojotus_ left
[03:46] *** riatre left
[03:46] *** woodruffw left
[03:46] *** xinming left
[03:46] *** isacloud left
[03:46] *** autarch left
[03:46] *** boegel left
[03:46] *** mathw left
[03:46] *** JimmyZ left
[03:46] *** Hotkeys left
[03:46] *** novapatch left
[03:46] *** ilbot3 left
[03:46] *** Actualeyes left
[03:46] *** metasin left
[03:46] *** dj_goku left
[03:46] *** emdashcomma left
[03:46] *** cosimo left
[03:46] *** mr-fooba_ left
[03:46] *** eternaleye left
[03:46] *** oahong left
[03:46] *** bapa left
[03:46] *** jferrero left
[03:46] *** kst left
[03:46] *** sQuEE` left
[03:46] *** felher left
[03:46] *** konobi left
[03:46] *** lestrrat left
[03:46] *** n0tjack left
[03:46] *** bpmedley left
[03:46] *** frew left
[03:46] *** zhmylove left
[03:46] *** tony-o left
[03:46] *** bhm_ left
[03:46] *** roguelazer left
[03:46] *** vmbrasseur left
[03:46] *** mephinet- left
[03:46] *** avalenn_ left
[03:46] *** jsimonet left
[03:46] *** El_Che left
[03:46] *** mrsolo left
[03:46] *** Fleurety left
[03:46] *** sergot left
[03:46] *** timbunce left
[03:46] *** ilmari left
[03:46] *** integral left
[03:46] *** zemmihates left
[03:46] *** chansen_ left
[03:46] *** znpy left
[03:46] *** Woodi left
[03:46] *** baest left
[03:46] *** tudorconstantin left
[03:46] *** grondilu left
[03:46] *** Upasaka_ left
[03:46] *** Amnez777 left
[03:46] *** SHODAN left
[03:46] *** _sri left
[03:46] *** dbohdan left
[03:46] *** nebuchadnezzar left
[03:46] *** jdv79 left
[03:46] *** |Tux| left
[03:46] *** Axord left
[03:46] *** mtj_ left
[03:46] *** Exodist left
[03:46] *** yeltzooo left
[03:46] *** saaki left
[03:46] *** ggoebel left
[03:46] *** risou left
[03:46] *** rvchangue left
[03:46] *** tadzik left
[03:46] *** daxim left
[03:46] *** khw left
[03:46] *** f3ew_ left
[03:46] *** synbot6 left
[03:46] *** apejens left
[03:46] *** yakudza left
[03:46] *** gtodd left
[03:46] *** Util left
[03:46] *** [Tux] left
[03:46] *** masak left
[03:46] *** obra left
[03:46] *** ollej_ left
[03:46] *** corbyhaas left
[03:46] *** vike left
[03:46] *** mls left
[03:46] *** dalek left
[03:46] *** PotatoGim left
[03:46] *** olinkl left
[03:46] *** skarn left
[03:46] *** orevdiabl left
[03:46] *** clkao left
[03:46] *** simcop2387 left
[03:46] *** pnu left
[03:46] *** TimToady left
[03:46] *** llfourn left
[03:46] *** zoosha_ left
[03:46] *** xiaomiao left
[03:46] *** ShimmerFairy left
[03:46] *** pierrot left
[03:46] *** gensym left
[03:46] *** abaugher left
[03:46] *** thowe left
[03:46] *** aindilis left
[03:46] *** yubimusubi left
[03:46] *** ab5tract left
[03:46] *** pdcawley left
[03:46] *** gfldex left
[03:46] *** erdic left
[03:46] *** Praise left
[03:46] *** shamu_ left
[03:46] *** cibs left
[03:47] *** novapatch joined
[03:56] *** bhm joined
[03:56] *** sjn joined
[03:56] *** El_Che joined
[03:56] *** autarch joined
[03:56] *** tinita joined
[03:56] *** sergot joined
[03:56] *** JimmyZ joined
[03:56] *** zhmylove_ joined
[03:56] *** n0tjack_ joined
[03:56] *** nowan joined
[03:56] *** zengargoyle joined
[03:56] *** xinming joined
[03:56] *** chewie_1982 joined
[03:56] *** Zoffix joined
[03:56] *** luis` joined
[03:56] *** M-Illandan joined
[03:56] *** woodruff- joined
[03:56] *** freeze joined
[03:56] *** huf_ joined
[03:56] *** havenwood joined
[03:56] *** skaji joined
[03:56] *** hahainte1net joined
[03:56] *** isacloud joined
[03:56] *** domm_ joined
[03:56] *** riatre_ joined
[03:56] *** lucs joined
[03:56] *** awwaiid joined
[03:56] *** jojotus joined
[03:56] *** psch_ joined
[03:56] *** mathw_ joined
[03:56] *** boegel|quassel joined
[03:56] *** pecastro_ joined
[03:56] *** pyrimidine joined
[03:56] *** notostraca joined
[03:56] *** znpy joined
[03:56] *** ilbot3 joined
[03:56] *** sprocket joined
[03:56] *** colomon joined
[03:56] *** Psyche^_ joined
[03:56] *** stux|RC-only joined
[03:56] *** quietfanatic joined
[03:56] *** bbkr joined
[03:56] *** vmbrasseur joined
[03:56] *** tudorconstantin joined
[03:56] *** geekosaur joined
[03:56] *** ugexe joined
[03:56] *** khw joined
[03:56] *** gtodd joined
[03:56] *** stmuk_ joined
[03:56] *** TimToady joined
[03:56] *** Woodi joined
[03:56] *** Actualeyes joined
[03:56] *** arnsholt joined
[03:56] *** llfourn joined
[03:56] *** grondilu joined
[03:56] *** sftp joined
[03:56] *** jnthn joined
[03:56] *** [Coke]_ joined
[03:56] *** Upasaka_ joined
[03:56] *** maddingu1 joined
[03:56] *** metasin joined
[03:56] *** leedo_ joined
[03:56] *** f3ew_ joined
[03:56] *** zoosha_ joined
[03:56] *** BinGOs joined
[03:56] *** Juerd joined
[03:56] *** xenu joined
[03:56] *** roguelazer joined
[03:56] *** ollej_ joined
[03:56] *** Khisanth joined
[03:56] *** samb1 joined
[03:56] *** bbarker joined
[03:56] *** doublec joined
[03:56] *** breinbaas joined
[03:56] *** ribasushi joined
[03:56] *** xiaomiao joined
[03:56] *** zostay joined
[03:56] *** jevin_ joined
[03:56] *** ShimmerFairy joined
[03:56] *** lsm-desktop joined
[03:56] *** camelia joined
[03:56] *** petercommand joined
[03:56] *** cognominal joined
[03:56] *** silug joined
[03:56] *** synbot6 joined
[03:56] *** Amnez777 joined
[03:56] *** SHODAN joined
[03:56] *** mephinet- joined
[03:56] *** avalenn_ joined
[03:56] *** go|dfish joined
[03:56] *** mrf joined
[03:56] *** Timbus joined
[03:56] *** pierrot joined
[03:56] *** [particle]1 joined
[03:56] *** asimov.freenode.net sets mode: +v camelia

[03:56] *** dj_goku joined
[03:56] *** inokenty joined
[03:56] *** DrForr joined
[03:56] *** apejens joined
[03:56] *** _sri joined
[03:56] *** ggoebel joined
[03:56] *** gensym joined
[03:56] *** emdashcomma joined
[03:56] *** dbohdan joined
[03:56] *** yakudza joined
[03:56] *** cosimo joined
[03:56] *** mr-fooba_ joined
[03:56] *** Util joined
[03:56] *** baest joined
[03:56] *** [Tux] joined
[03:56] *** masak joined
[03:56] *** Bucciarati joined
[03:56] *** Humbedooh joined
[03:56] *** nebuchadnezzar joined
[03:56] *** Spot__ joined
[03:56] *** bitmap joined
[03:56] *** obra joined
[03:56] *** risou joined
[03:56] *** jsimonet joined
[03:56] *** dgl joined
[03:56] *** jdv79 joined
[03:56] *** mrsolo joined
[03:56] *** corbyhaas joined
[03:56] *** ponbiki joined
[03:56] *** |Tux| joined
[03:56] *** ggherdov joined
[03:56] *** Axord joined
[03:56] *** vike joined
[03:56] *** mls joined
[03:56] *** eternaleye joined
[03:56] *** oahong joined
[03:56] *** bapa joined
[03:56] *** dalek joined
[03:56] *** flussence joined
[03:56] *** rvchangue joined
[03:56] *** mspo joined
[03:56] *** PotatoGim joined
[03:56] *** olinkl joined
[03:56] *** SmokeMachine_ joined
[03:56] *** salva joined
[03:56] *** skarn joined
[03:56] *** orevdiabl joined
[03:56] *** asimov.freenode.net sets mode: +v dalek

[03:56] *** ilmari joined
[03:56] *** integral joined
[03:56] *** dpk joined
[03:56] *** crux joined
[03:56] *** zemmihates joined
[03:56] *** clkao joined
[03:56] *** simcop2387 joined
[03:56] *** chansen_ joined
[03:56] *** brabo joined
[03:56] *** mprelude joined
[03:56] *** rhr joined
[03:56] *** moznion joined
[03:56] *** rjbs joined
[03:56] *** hacst joined
[03:56] *** KotH joined
[03:56] *** sivoais joined
[03:56] *** timotimo joined
[03:56] *** bartolin joined
[03:56] *** nine joined
[03:56] *** pochi joined
[03:56] *** charsbar_ joined
[03:56] *** Gothmog_ joined
[03:56] *** krunen joined
[03:56] *** garu joined
[03:56] *** cfloare_ joined
[03:56] *** kipd joined
[03:56] *** [ptc] joined
[03:56] *** xdbr joined
[03:56] *** xnrand joined
[03:56] *** BooK joined
[03:56] *** sunnavy_ joined
[03:56] *** mst joined
[03:56] *** jantore joined
[03:56] *** pink_mist joined
[03:56] *** sitaram joined
[03:56] *** hoelzro joined
[03:56] *** robinsmidsrod joined
[03:56] *** Celelibi joined
[03:56] *** retupmoca joined
[03:56] *** hobbs joined
[03:56] *** Gardner joined
[03:56] *** pRiVi joined
[03:56] *** raydiak joined
[03:56] *** ilbelkyr joined
[03:56] *** cxreg joined
[03:56] *** diakopter joined
[03:56] *** broquaint joined
[03:56] *** matt_ joined
[03:56] *** sjohnson joined
[03:56] *** DarthGandalf joined
[03:56] *** shmibs joined
[03:56] *** solarbunny joined
[03:56] *** diegok joined
[03:56] *** d^_^b joined
[03:56] *** ashleydev joined
[03:56] *** mattp_ joined
[03:56] *** dustinm`_ joined
[03:56] *** ambs joined
[03:56] *** smash joined
[03:56] *** dylanwh joined
[03:56] *** ingy joined
[03:56] *** literal joined
[03:56] *** eiro joined
[03:56] *** vytas joined
[03:56] *** mtj_ joined
[03:56] *** wtw joined
[03:56] *** jferrero joined
[03:56] *** Ulti joined
[03:56] *** ssflying joined
[03:56] *** Exodist joined
[03:56] *** kst joined
[03:56] *** konobi joined
[03:56] *** avar joined
[03:56] *** yoleaux joined
[03:56] *** jordman_ joined
[03:56] *** sQuEE` joined
[03:56] *** felher joined
[03:56] *** lestrrat joined
[03:56] *** pnu joined
[03:56] *** yeltzooo joined
[03:56] *** saaki joined
[03:56] *** tadzik joined
[03:56] *** daxim joined
[03:56] *** burnersk joined
[03:56] *** confuseAcat joined
[03:56] *** asimov.freenode.net sets mode: +v yoleaux

[03:56] *** lab_ joined
[03:56] *** cgfbee left
[03:56] *** cibs joined
[03:56] *** DrParis joined
[03:56] *** YUAADMY8 joined
[03:56] *** noganex joined
[03:56] *** anon joined
[03:56] *** skids1 joined
[03:56] *** japhb_ joined
[03:56] *** abaugher joined
[03:56] *** thowe joined
[03:56] *** aindilis joined
[03:56] *** yubimusubi joined
[03:56] *** ab5tract joined
[03:56] *** pdcawley joined
[03:56] *** gfldex joined
[03:56] *** erdic joined
[03:56] *** Praise joined
[03:56] *** shamu_ joined
[03:56] *** krakan joined
[03:56] *** ycaymanbo joined
[03:56] *** cbk_ joined
[03:56] *** advwp left
[03:56] *** advwp joined
[03:56] *** herby joined
[03:56] <herby> Hello!

[03:57] *** anon is now known as Guest51288

[03:57] *** Hotkeys joined
[03:57] <gfldex> m: say 'Hi herby!';

[03:57] <camelia> rakudo-moar : OUTPUT«Hi herby!␤»

[03:58] *** MadcapJake joined
[03:58] *** telex left
[03:59] *** tony-o joined
[04:00] *** timbunce joined
[04:00] *** telex joined
[04:02] <herby> m: say 1+1

[04:02] <camelia> rakudo-moar : OUTPUT«2␤»

[04:04] *** sprocket left
[04:04] *** grondilu left
[04:06] *** frew joined
[04:06] *** grondilu joined
[04:07] *** lab_ left
[04:08] *** Fleurety joined
[04:08] *** cgfbee joined
[04:12] *** znpy left
[04:13] *** Actualeyes left
[04:15] *** aborazmeh joined
[04:15] *** aborazmeh left
[04:15] *** aborazmeh joined
[04:15] *** aborazmeh left
[04:26] *** sprocket joined
[04:29] *** tokuhiro_ joined
[04:33] *** tokuhiro_ left
[04:41] *** sprocket left
[04:44] *** herby left
[04:45] *** pecastro joined
[04:53] *** khw left
[04:53] *** BenGoldberg_ joined
[04:56] *** Ben_Goldberg left
[05:23] *** n0tjack_ left
[05:23] *** mephinet- left
[05:27] *** kaare_ joined
[05:31] *** mephinet joined
[05:48] *** pecastro left
[05:48] *** BenGoldberg_ left
[05:50] *** pecastro joined
[06:04] *** pecastro left
[06:04] *** Actualeyes joined
[06:16] *** MadcapJake left
[06:30] *** tokuhiro_ joined
[06:35] *** tokuhiro_ left
[07:14] *** xpen left
[07:18] *** skids1 left
[07:30] *** Actualeyes left
[07:30] *** rindolf joined
[07:36] *** rurban joined
[07:38] *** rindolf left
[07:42] *** CIAvash joined
[07:50] *** notostraca is now known as TEttinger

[07:55] *** darutoko joined
[08:08] *** domidumont joined
[08:12] *** xfix joined
[08:12] *** domidumont left
[08:13] *** domidumont joined
[08:15] *** xpen joined
[08:19] *** flaviusb joined
[08:20] *** xpen left
[08:29] *** doublec left
[08:31] *** doublec joined
[08:33] *** hankache joined
[08:34] <hankache> morning

[08:34] <yoleaux> 21 Nov 2015 20:05Z <TimToady> hankache: re - and ' in names, alpha is only required to the right; to the left can be numeric; think of it as a sequence of identifiers separated by - or '

[08:37] <hankache> .tell TimToady re - and ' noted. thank you for going through the doc

[08:37] <yoleaux> hankache: I'll pass your message to TimToady.

[08:38] *** n0tjack joined
[08:39] *** quietfanatic left
[08:42] *** n0tjack left
[08:59] *** FROGGS joined
[09:00] <FROGGS> o/

[09:00] <yoleaux> 21 Nov 2015 23:49Z <leont> FROGGS: I don't think so, though the interactive output uses \r a lot

[09:01] <FROGGS> .tell leont I try to golf it down to a testcase

[09:01] <yoleaux> FROGGS: I'll pass your message to leont.

[09:05] *** TEttinger left
[09:15] *** sno joined
[09:26] *** Peter_R joined
[09:28] <dalek> roast: 3e980b2 | usev6++ | S32-str/ (2 files):

[09:28] <dalek> roast: Tests for index/rindex with negative start position

[09:28] <dalek> roast: review: https://github.com/perl6/roast/commit/3e980b2f11

[09:33] <nine> m: say "hello"; say "world";

[09:33] <camelia> rakudo-moar : OUTPUT«hello␤world␤»

[09:39] <dalek> roast: bae740d | usev6++ | S32-str/ (2 files):

[09:39] <dalek> roast: Fix RT number

[09:39] <dalek> roast: review: https://github.com/perl6/roast/commit/bae740df3e

[09:42] <nine> Really? Of all the monospace fonts on my system only GNU Unifont and Source Code Pro have the newline symbol. And neither is really pretty :/

[09:47] *** polettix joined
[09:48] *** camelia left
[09:48] <bartolin> sorry, camelia

[09:48] *** doublec_ joined
[09:49] *** camelia joined
[09:50] *** doublec left
[09:50] *** ChanServ sets mode: +v camelia

[09:54] *** luis` is now known as luis

[09:57] *** Begi11115 joined
[09:58] <[Tux]> test             50000    21.222    21.109

[09:58] <[Tux]> test-t           50000    17.995    17.882

[09:58] <[Tux]> csv-parser       50000    28.856    28.742

[09:59] *** diana_olhovik_ joined
[10:00] <dalek> roast: 46754e8 | usev6++ | S15-unicode-information/uniname.t:

[10:00] <dalek> roast: Use existing RT number

[10:00] <dalek> roast: review: https://github.com/perl6/roast/commit/46754e8f53

[10:01] <arnsholt> nine: Inconsolata has it, I think

[10:03] *** s_kilk joined
[10:04] <[Tux]> nine DejaVu Sans Mono, I just tested

[10:04] <[Tux]> pretty is only in the eye of the beholder :) I personally think *all* serif fonts are ugly

[10:07] <nine> [Tux]: Odd. I still get the replacement square with DejaVu Sans Mono. liberation2 AKA Google Croscore may support it though. I've just installed it but to test I'd have to restart konsole which I can't because smart as I am I didn't start my system backup in screen...

[10:08] <nine> arnsholt: thanks, will try that, too

[10:09] *** domidumont left
[10:10] <[Tux]> http://tux.nl/Files/20151122111014.png

[10:10] <[Tux]> shown in xterm-319

[10:12] <nine> I guess there's something in the konsole -> bash -> ssh -> bash -> screen -> irssi chain screwing things up.

[10:13] *** doublec_ is now known as doublec

[10:13] *** diana_olhovik_ left
[10:24] *** Actualeyes joined
[10:29] *** hankache left
[10:30] *** rindolf joined
[10:30] *** diana_olhovik_ joined
[10:33] *** hankache joined
[10:38] *** diana_olhovik_ left
[10:41] *** hankache left
[10:45] <moritz> nine: the nice thing about debugging such a long chain is that you can bisect :-)

[10:46] <stmuk_> jnthn++ # blog post explanations

[10:48] <masak> today's mini-challenge: write, in Perl 6, a *small* thing which can show Rubik's cube positions (maybe as an ASCII version of https://commons.wikimedia.org/wiki/File:Rubik%E2%80%99s_cube_colors.svg ), and allow arbitrary moves on the cube. i.e. something a cube solver could be built on top of.

[10:48] <masak> g'day, #perl6

[10:48] <masak> "small" is in "don't overdo it", not "small" as in "golfed" :P

[10:49] *** snarkyboojum joined
[10:49] *** n0tjack joined
[10:51] *** dr4ngd joined
[10:51] <dr4ngd> anyone here?

[10:51] <masak> dr4ngd: hi

[10:52] <masak> in other news, there's a depressing lack of web pages of the form "here's a sane programmatic model for the cube, and here's an algorithm (in Perl/Python/Ruby/whatever) that always solves the cube [assuming it's solvable]"

[10:52] <masak> I'm *almost* tempted to fill that void :)

[10:52] <dr4ngd> I was wondering if you guys knew anything about books that are going to be published on Perl 6

[10:52] <nine> Next milestone finished: panda installs itself into a CompUnit::Repository::Installation

[10:53] *** n0tjack left
[10:57] <masak> this is the closest to that ideal that I've found: http://fulmicoton.com/posts/rubix/

[10:59] <dr4ngd> is that like some way of saying in heaven you know every possible rubix cube combination

[10:59] <dr4ngd> in multiple dimensions

[11:00] *** kjs_ joined
[11:01] *** domidumont joined
[11:02] <dr4ngd> anyway. I have a site I'm going to be working on in Perl. If you're expert level I'd love to share the project with you if anyones interested. It's a money maker...

[11:04] * moritz is an expert level procrastinator

[11:04] <FROGGS> nine: do you think it is a good time to join the CUR effort?

[11:06] *** s_kilk left
[11:06] <nine> FROGGS: it is always a good time to join :)

[11:06] <moritz> .oO( A Frogg is never late! )

[11:07] <nine> FROGGS: and considering that it's only a couple of weeks till the big one, we should really merge this sooner rather than later

[11:07] <dr4ngd> when is perl 6 coming out

[11:07] <masak> dr4ngd: "God's number" -- the fancy name for "the maximum number of cube moves required to optimally solve any position" -- was shown to be 20 back in 2010.

[11:08] <masak> dr4ngd: Perl 6 is coming out by Christmas.

[11:08] <moritz> this Christmas.

[11:08] <masak> dr4ngd: but it's an open source project, so you can download it today and play with it -- get ahead of the curve! :D

[11:09] * masak .oO( o/ this Christmas, I'll give you Perl 6, but the very next day, you'll RT away o/ )

[11:09] <stmuk_> hahaha

[11:10] <FROGGS> nine: okay, so expect questions :o)

[11:10] <dr4ngd> masak: thanks

[11:10] <nine> FROGGS: love them :)

[11:11] <dr4ngd> anyone interested in something like this to work on https://www.kickstarter.com/projects/dantecassara/xudlr-one-stop-shop-for-online-gaming-and-social

[11:12] <dr4ngd> I want to make a social site, for gamers, with their own private guild forums and pretty much everything MMO Players would want in one place...

[11:12] *** lizmat joined
[11:12] <dr4ngd> which is a rollout project to a more intensive project that you could get involved with too. done in Perl :)

[11:14] *** Upasaka_ left
[11:15] <moritz> aren't there two dozen projects like this out there already?

[11:15] <diakopter> gamifying gamer gamification

[11:16] <stmuk_> I think ovid has game plans .. it might be worth contacting him

[11:16] <masak> more than plans

[11:16] <dr4ngd> moritz: not even a little near the scope of what mines about

[11:16] <dr4ngd> moritz: in content or design

[11:17] <masak> can't fault you for lack of ambition :)

[11:17] * lizmat waves from Echt

[11:17] *** Upasaka joined
[11:17] *** molaf joined
[11:18] *** xpen joined
[11:20] <nine> o/ lizmat

[11:20] <lizmat> nine o/

[11:21] <masak> lizmat \o

[11:21] *** kjs_ left
[11:23] *** xpen left
[11:23] <stmuk_> you could make a social site about ethics in game journalism :>

[11:23] <lizmat> masak o/

[11:23] * lizmat is slightly jetlagged

[11:25] <dr4ngd> why is Perl 6 considered a sister project

[11:25] <masak> dr4ngd: because Perl 5 is still being actively developed, and with a large user base.

[11:26] <masak> dr4ngd: also, Perl 6 is not an incremental update, it's a fresh start in many ways.

[11:26] <stmuk_> it's intended as a supplement to perl 5 rather than a replacement

[11:26] <masak> each of Perl 5 and Perl 6 has its own strengths and specialties.

[11:26] <metasin> I'd like to read more about those specialties and strengths

[11:27] <dr4ngd> masak: So what happens when the larger user base gets to Perl 6 themselves? they'll both be Perl 6? lol

[11:28] <metasin> dr4ngd: think of how many numbers are in between 0 and 1. 

[11:28] *** tokuhiro_ joined
[11:28] <masak> metasin: lots of things. but perhaps most importantly: Perl 5 -- parsing text. Perl 6 -- parsing languages.

[11:28] <dr4ngd> metasin: 0.1 is a number too.

[11:28] <masak> metasin: that is, where Perl 5 has excellent regexes, Perl 6 has that plus excellent *grammars*.

[11:29] <metasin> masak: yes, which is why I'm having a hard time letter perl6 go

[11:30] <dr4ngd> I'm just concerned with learning Perl 6 without a book lol

[11:30] <metasin> masak: I'd love to put together some kind of comprehensive article on particular semantic differences though

[11:31] <metasin> masak: if you know of one... ^_^

[11:31] <metasin> dr4ngd: don't worry. You have an irc channel right here.

[11:31] <masak> dr4ngd: the "Perl 6" name/version number can be seen as an "unfortunate naming circumstance". maybe in retrospect a different name or something would've been more clear. but it's too late to re-brand it, because everyone knows it as "Perl 6".

[11:31] <masak> metasin: there are a couple good resources. moritz++' 5-to-6 articles come to mind.

[11:32] <nine> FROGGS: jnthn's design in case you don't have it at hand: https://gist.github.com/jnthn/47a42b2e86e7e552b2e2

[11:32] <masak> metasin: there's also https://github.com/perl6/mu/blob/master/docs/Perl6/Perl5/Differences.pod -- but watch out for occasional outdated stuff.

[11:32] *** tokuhiro_ left
[11:32] <dr4ngd> masak: where do I start?

[11:32] <masak> m: say "start here! :)"

[11:32] <camelia> rakudo-moar : OUTPUT«start here! :)␤»

[11:33] <metasin> masak: oddly, I've already gone through those. More inspiration I suppose. Time to write a lisp->perl6 tutorial or something

[11:33] <FROGGS> nine: yes, I need to re-read it carefully

[11:33] <moritz> also http://doc.perl6.org/language.html has links to various 5to6 documents

[11:33] <FROGGS> and then I somehow need the current state

[11:33] <metasin> inline::Perl5 is pretty nifty too

[11:34] <metasin> ^-- (pretty strong about what's different in perl6)

[11:35] <dr4ngd> so learn Perl 5 then move onto 6? cause I know JS, Python, C, some PHP. I decided to make my site in Perl and saw that Perl 6 was coming out, so I guess I was looking for a book to start from scratch

[11:35] <nine> FROGGS: the design is mostly implemented. @*INC still has to be removed and $?REPO has to be added. CompUnit only contains the attributes that are needed for loading ($.dist, $.ver, ... are missing). And I'm very close to having a fully functional panda.

[11:35] <masak> dr4ngd: there's also a nice big "Download" button at http://perl6.org/

[11:35] <metasin> dr4ngd: no learn perl6

[11:36] <masak> dr4ngd: it's possible to learn first-perl5-then-perl6, but it's also possible to start directly with Perl 6.

[11:36] <masak> depends what your goals are, I guess.

[11:36] <masak> Perl 5 is a very decent language too.

[11:36] <masak> well worth learning.

[11:36] <metasin> masak: is there a Higher Order Perl (6) ?

[11:36] <FROGGS> nine: okay, so looking at panda might be a good start

[11:36] <FROGGS> nine: I hope to have some time this evening

[11:38] <nine> FROGGS: great! I'll try to be available

[11:41] <masak> metasin: no, but that would be pretty awesome.

[11:41] <masak> by the way, diakopter++ dug up http://kociemba.org/cube.htm with what appears to be an optimal C solver.

[11:41] <masak> haven't tested it yet.

[11:43] <dr4ngd> so I'm downloading Rakudo

[11:44] <dr4ngd> what database do I use?

[11:44] <dr4ngd> for SQL and shit

[11:45] <diakopter> which one are you downloading

[11:45] <dr4ngd> rakudo star 2015.09 jit

[11:46] <moritz> dr4ngd: we have support for mysql, postgres and sqlite

[11:47] <dalek> rakudo/curli: 681c18b | (Stefan Seifert)++ | src/core/CompUnit/Repository/Installation.pm:

[11:47] <dalek> rakudo/curli: Work towards a fix installation of bin wrapper scripts

[11:47] <dalek> rakudo/curli: 

[11:47] <dalek> rakudo/curli: Store resources in the resources directory of the CompUnit::Repository::Installation.

[11:47] <dalek> rakudo/curli: Store bin wrappers in the bin directory.

[11:47] <dr4ngd> moritz: thank you

[11:47] <dalek> rakudo/curli: Fix lookup of the wrapped bin file.

[11:47] <dalek> rakudo/curli: review: https://github.com/rakudo/rakudo/commit/681c18bd6f

[11:47] <nine> FROGGS: pushed current state to rakudo/curli and panda/curli

[11:47] <nine> I'm out now for the afternoon for the christmas market with my girlfriend :)

[11:47] *** simcop2387 left
[11:47] <metasin> masak: blah.. Guess I'll get started.. Hehe ;) also, awesome!!

[11:48] *** FROGGS left
[11:49] *** simcop2387 joined
[11:51] *** geekosaur left
[11:51] <dalek> star: 2dfa7ba | moritz++ | tools/star/release-guide.pod:

[11:51] <dalek> star: Fix off-by-one error in the docs

[11:51] <dalek> star: review: https://github.com/rakudo/star/commit/2dfa7ba0aa

[11:51] *** CIAvash left
[11:52] *** geekosaur joined
[11:53] *** simcop2387 left
[11:53] *** simcop2387 joined
[11:54] <dr4ngd> can Perl 6 be used to make applications?

[11:55] <moritz> dr4ngd: as opposed to... what?

[11:55] <dr4ngd> moritz: not in a browser

[11:55] <metasin> o_o

[11:56] <moritz> dr4ngd: all programs are applications

[11:56] <dr4ngd> moritz: ok I meant nonweb-based

[11:56] <moritz> dr4ngd: do you mean something with a graphical user interface?

[11:56] <dr4ngd> moritz: yep

[11:57] <moritz> dr4ngd: ah. Yes, for example with https://github.com/perl6/gtk-simple/

[11:58] <dr4ngd> moritz: thanks

[11:58] *** vendethiel joined
[12:00] <dr4ngd> now something for discussion... what if there were to be an internet loaded operating system that overrides system control of your OS? :)

[12:01] <moritz> dr4ngd: you mean like a configuration management system?

[12:01] <moritz> see puppet, chef, ansible et. al.

[12:01] <dr4ngd> moritz: I was thinking something like windows, that literally overrode your windows. as its own operating system.

[12:01] *** leont joined
[12:01] <dr4ngd> that was accessible from the internet. from a site with your own account and settings.

[12:02] <moritz> dr4ngd: like a terminal server?

[12:03] <dr4ngd> moritz: um, I was thinking something that had operable ways of taking control of system functions for a large base of computers. but literally ran as the operating system. full GUI.

[12:03] *** vendethiel left
[12:03] <dr4ngd> sort of like a virtual machine, but no download necessary.

[12:03] *** vendethiel joined
[12:04] <moritz> "taking control of system functions for a large base of computers" -- a botnet?

[12:05] <dr4ngd> moritz: I don't mean a lot of computers. I just mean that I would code it specifically for certain computers. then you pick the computer you're using, and it overrides the OS.

[12:05] <dr4ngd> that way, you could always have your computer wherever you go. a cloud situation

[12:05] <moritz> dr4ngd: that's what a terminal server does

[12:06] <moritz> dr4ngd: your session is on the server, and you just need a very thin client that forwards your input to the server, and the server's answer to your local monitor

[12:06] <stmuk_> like VNC

[12:07] <dr4ngd> moritz: I honestly don't think we're talking about the same thing lol

[12:07] <moritz> dr4ngd: we are, you just don't want to realize it

[12:07] <moritz> stmuk_: or citrix receiver (*shudder*)

[12:08] <dr4ngd> moritz: it's a complete OS with its own apps running from the internet streaming your apps with a full GUI

[12:08] <moritz> dr4ngd: exactly

[12:09] <dr4ngd> moritz: the only thing I can think of like that is Chrome OS

[12:09] <dr4ngd> moritz: I think you're talking about how things work besides presented and accessed.

[12:10] <moritz> dr4ngd: no; I'm just telling you that terminal servers + clients provide exactly the user experience you seem to be looking for

[12:10] <stmuk_> maybe he means virtualisation

[12:11] <dr4ngd> moritz: I'm talking about something more presentable commercially.

[12:11] <dr4ngd> also with an operating system that isn't created by me yet.

[12:11] * moritz doesn't see what's comercially unpresentable about terminal servers

[12:12] <stmuk_> they are in wide use in the "enterprise"

[12:12] <moritz> indeed, at $work we're making lots of money with them

[12:15] <dr4ngd> so with a terminal server, I can login to the internet and it will run an operating system that overrides my operating system?

[12:16] *** Upasaka_ joined
[12:16] <dr4ngd> from a web browser?

[12:16] <moritz> dr4ngd: it makes your local operating system irrelevant

[12:16] <moritz> and yes, citrix for example has a web client

[12:16] <dr4ngd> moritz: that's fucking weird. why isn't it the status quo

[12:17] <moritz> dr4ngd: flakey networks, trust, latency, economics

[12:18] <moritz> dr4ngd: at $work, we have thin clients in all of our meeting rooms, which connect to a terminal server; it works very well

[12:18] <moritz> but it's a local network, and the terminal server is run in-house, so we have full control

[12:18] <moritz> I wouldn't want that for my local desktop

[12:18] <stmuk_> my experience of things like thin clients is that the server is under powered and overprovisioned

[12:18] *** Upasaka left
[12:19] <stmuk_> at least in the businesses I've been unfortunate to have worked in

[12:19] <dr4ngd> moritz: oh. that's just weird to me. I can think of a lot of utilizations of that that would make a lot of money.

[12:19] <dalek> star: a6b6afe | moritz++ | tools/star/Makefile:

[12:19] <dalek> star: Use Rakudo 2015.11

[12:19] <dalek> star: review: https://github.com/rakudo/star/commit/a6b6afed23

[12:19] <dalek> star: 5dd02c1 | moritz++ | modules/ (21 files):

[12:19] <dalek> star: Update modules to current version

[12:19] <dalek> star: review: https://github.com/rakudo/star/commit/5dd02c1ba6

[12:19] <dalek> star: 76e441f | moritz++ | tools/build/panda-state.p6:

[12:19] <dalek> star: Fix HTTP communication in panda-state.p6

[12:19] <dalek> star: review: https://github.com/rakudo/star/commit/76e441fb40

[12:20] <moritz> dr4ngd: there are lots of use cases where that already makes lots of money

[12:20] *** Upasaka_ left
[12:20] <moritz> dr4ngd: but it's more in the enterprise space, where "give everybody a consistent experience" trumps usability, customizability for the user etc.

[12:20] <stmuk_> and "save money"

[12:21] *** Upasaka joined
[12:21] <moritz> and that, yes

[12:21] <dr4ngd> moritz: I have a project that would take that type of connect to a social outlet

[12:22] <moritz> dr4ngd: then with all due respect, maybe you should do a thorough review of what's there first :-)

[12:22] <dr4ngd> moritz: yeah that's what I'm doing right now

[12:22] <dr4ngd> thanks :)!

[12:23] <moritz> I've done my fair share of side projects that ended up with "oh, somebody else has done it much better than me, I'll just use theirs instead"

[12:23] <dr4ngd> I have a whole project that but mines like, oh everyones done everything separately, I think I'll just put it all together

[12:24] *** rindolf left
[12:26] <dr4ngd> my work is sort of an overhaul with fresh new content.

[12:27] <dr4ngd> the only problem is I'm the only one working on the project. :/

[12:28] <metasin> oh, merry belated 4:20 to any of you at -8GMT

[12:30] <dr4ngd> I wish I had some acid

[12:30] <metasin> lol... do enough perl and you wont know the difference

[12:30] * masak .oO( what is this, eternal September? )

[12:31] <metasin> hehe

[12:31] <dr4ngd> are you telling me perl fries my brain

[12:31] <masak> metasin: believing Perl is unreadable is such a 90s notion.

[12:32] <metasin> masak: Perl is totally readable, ad-infinitum

[12:32] <dr4ngd> Perl looks intricate not unreadable.

[12:32] <metasin> masak: I admit though, I feel attached to the 90s. Help me

[12:33] <dr4ngd> yes let us all listen to third eye blind and the smashing pumpkins

[12:33] <dalek> star: 60378f2 | moritz++ | / (3 files):

[12:33] <dalek> star: Revert "introduce support for sdkroot and sysroot to support cross-builds"

[12:33] <dalek> star: 

[12:33] <dalek> star: This reverts commit f0def6dc7b4f576668e689cfd44745e506a305ad.

[12:33] <dalek> star: See https://github.com/rakudo/star/pull/53#issuecomment-158754696 for the

[12:33] <dalek> star: reason.

[12:33] <dalek> star: review: https://github.com/rakudo/star/commit/60378f2972

[12:36] *** bpmedley joined
[12:38] *** Zoffix left
[12:39] <masak> metasin: reading good Perl code from the last 15 years helps.

[12:39] *** azawawi joined
[12:39] <azawawi> hi

[12:39] <masak> hi, azawawi 

[12:40] <azawawi> how do I access the original text (i.e. including newlines) of a Pod::Block::Named object?

[12:40] <metasin> masak: I think you've missed the joke... >_> may I have some coffee?

[12:41] <sno> moritz: to fix an issue with a .git checkout a guide how to prepare a test environment is sane ...

[12:43] *** dr4ngd left
[12:43] <dalek> perl6.org: 533502a | (Zoffix Znet)++ | TODO:

[12:43] <dalek> perl6.org: Remove severely outdated TODO

[12:43] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/533502a23f

[12:47] *** pdcawley left
[12:49] *** Begi11115 left
[12:51] *** Begi11115 joined
[12:52] <azawawi> moritz: ping

[12:54] <dalek> perl6.org: da6e383 | (Zoffix Znet)++ | README.md:

[12:54] <dalek> perl6.org: Plack is also needed in deps for plackup

[12:54] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/da6e3838db

[12:58] *** Actualeyes left
[13:01] *** loren joined
[13:04] *** Averna joined
[13:06] *** polettix left
[13:09] *** Averna left
[13:11] <azawawi> .tell moritz how do I access the original text (i.e. including newlines) of a Pod::Block::Named object?

[13:11] <yoleaux> azawawi: I'll pass your message to moritz.

[13:14] *** azawawi left
[13:16] *** n0tjack joined
[13:16] *** Averna joined
[13:21] *** n0tjack left
[13:22] *** dr4ngd joined
[13:22] *** cschwenz joined
[13:23] *** cschwenz left
[13:24] *** s_kilk joined
[13:25] <moritz> .tell azawawi if .perl doesn't show it, it's not there anymore

[13:25] <yoleaux> 13:11Z <azawawi> moritz: how do I access the original text (i.e. including newlines) of a Pod::Block::Named object?

[13:25] <yoleaux> moritz: I'll pass your message to azawawi.

[13:26] *** Averna left
[13:27] *** pdcawley joined
[13:29] *** tokuhiro_ joined
[13:31] *** brrt joined
[13:32] *** dr4ngd left
[13:32] *** Upasaka_ joined
[13:33] <dalek> perl6.org: cf32971 | (Zoffix Znet)++ | source/js.css:

[13:33] <dalek> perl6.org: Remove useless file

[13:33] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/cf32971886

[13:33] *** Upasaka left
[13:33] *** tokuhiro_ left
[13:35] *** kjs_ joined
[13:44] *** pdcawley left
[13:47] *** lucasb joined
[13:47] *** diana_olhovik_ joined
[13:48] *** Upasaka_ left
[13:48] *** pdcawley joined
[13:49] <dalek> perl6.org: 35d9068 | (Zoffix Znet)++ | source/ (4 files):

[13:49] <dalek> perl6.org: Add "Recent Blog Posts" section on home page (Closes #42)

[13:49] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/35d90684e5

[13:50] *** Upasaka joined
[13:51] * DrForr breathes deeply while writing a tutorial proposal for OSCON.

[13:54] *** Upasaka left
[13:54] *** pdcawley left
[13:54] *** Actualeyes joined
[13:55] *** Upasaka joined
[13:56] <lucasb> "brace yourselves, christmas is coming" <-- it would be fun if this sentence gets added to the channel topic :)

[13:59] *** brrt left
[14:00] *** kjs_ left
[14:00] *** brrt joined
[14:01] <DrForr> Not by my hand, unfortunately.

[14:04] *** xpen joined
[14:08] <brrt> i think moritz++ can

[14:09] <DrForr> Is anyone interested in reviewing a biography I'm about to submit?

[14:10] *** brrt left
[14:11] *** diana_olhovik_ left
[14:13] <stmuk_> Zoffix++ # quicker than a JITed quick thing at perl6.org site features

[14:13] <dalek> modules.perl6.org/new-db-builder: 55dd564 | (Zoffix Znet)++ | web/lib/DbBuilder/Dist/Source (2 files):

[14:13] <dalek> modules.perl6.org/new-db-builder: Make base Dist Source class handle more of readme/tests setting instead of having subclasses do it

[14:13] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/55dd564d3d

[14:14] *** boegel|quassel left
[14:14] *** boegel joined
[14:16] *** dr4ngd joined
[14:18] <dalek> modules.perl6.org/new-db-builder: 42fcd2d | (Zoffix Znet)++ | web/lib/DbBuilder/Dist/Source/GitHub.pm:

[14:18] <dalek> modules.perl6.org/new-db-builder: Be paranoid about data source

[14:18] <dalek> modules.perl6.org/new-db-builder: 

[14:18] <dalek> modules.perl6.org/new-db-builder: If an attacker somehow sneaks arbitrary data into a GitHub commit SHA, they could exploit us. Prevent that.

[14:18] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/42fcd2d61a

[14:21] *** kid51 joined
[14:22] <dalek> modules.perl6.org/new-db-builder: 78a9552 | (Zoffix Znet)++ | web/lib/DbBuilder/Dist/Source/GitHub.pm:

[14:22] <dalek> modules.perl6.org/new-db-builder: Use saner code

[14:22] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/78a9552316

[14:22] *** sprocket joined
[14:22] *** BenGoldberg_ joined
[14:24] * zengargoyle thinks that POD handling of unknown named blocks is brokenish.  they shouldn't be processed like POD (all squished up), but left completely intact.

[14:24] <zengargoyle> otherwise you'll never actually be able to use their contents via some other process.

[14:24] *** Skarsnik joined
[14:26] *** BenGoldberg_ left
[14:26] <zengargoyle> i.e. « =begin Pic␤.....␤=end Pic » will be useless to a Pic processor if the contents have been munged.

[14:27] *** dr4ngd left
[14:28] <dalek> modules.perl6.org/new-db-builder: 3dd2058 | (Zoffix Znet)++ | web/lib/DbBuilder/Dist/Source/GitHub.pm:

[14:28] <dalek> modules.perl6.org/new-db-builder: Do not die if we don't understand date_updated format

[14:28] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/3dd205873f

[14:29] *** diana_olhovik_ joined
[14:29] <dalek> rakudo-star-daily: c233516 | coke++ | log/ (3 files):

[14:29] <dalek> rakudo-star-daily: today (automated commit)

[14:29] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/c2335167db

[14:29] <dalek> perl6-roast-data: 95c634b | coke++ | / (9 files):

[14:29] <dalek> perl6-roast-data: today (automated commit)

[14:29] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/95c634bac4

[14:30] <zengargoyle> sorta think the whole of POD stuff should be kept intact and not munged until it hits a PodToXXX parser (if that's possible)

[14:30] *** tokuhiro_ joined
[14:33] *** BenGoldberg joined
[14:35] *** tokuhiro_ left
[14:40] *** cdg joined
[14:41] *** kjs_ joined
[14:44] <zengargoyle> oh, and good * #perl 6

[14:45] *** sprocket left
[14:46] *** s_kilk left
[14:48] <BenGoldberg> Good MornAfternoonEvening.

[14:50] *** s_kilk joined
[14:54] *** n0tjack joined
[14:55] *** hankache joined
[14:57] <hankache> hello everyone

[14:58] *** vendethiel left
[14:58] *** n0tjack left
[15:00] *** sprocket joined
[15:04] *** loren left
[15:06] <dalek> rakudo/curli: f967ac2 | (Stefan Seifert)++ | src/core/CompUnit/Repository/Installation.pm:

[15:06] <dalek> rakudo/curli: Fixup: path to resource files has to contain 'resouces/'

[15:06] <dalek> rakudo/curli: 

[15:06] <dalek> rakudo/curli: This makes the generated panda wrapper work now!

[15:06] <dalek> rakudo/curli: review: https://github.com/rakudo/rakudo/commit/f967ac2e5b

[15:06] *** polettix joined
[15:07] <jdv79> m: role R[::T = Str] { has T $.r}; R.new.r.say

[15:07] <camelia> rakudo-moar : OUTPUT«Method 'say' not found for invocant of class 'T'␤  in block <unit> at /tmp/xp6lnrXp_I:1␤␤»

[15:08] <jdv79> shouldn't that work as if T was Str and not error like that?

[15:10] <Skarsnik> you can new on a role? that's weird x)

[15:10] <jdv79> Punning is the term

[15:10] <Skarsnik> and hello there

[15:11] <BenGoldberg> It's only doable for roles which don't have any unimpelmented required methods.

[15:11] <BenGoldberg> m: role R { method cant-pun-me { ... } }; say R.new;

[15:11] <camelia> rakudo-moar : OUTPUT«Method 'cant-pun-me' must be implemented by R because it is required by a role␤  in any compose_method_table at gen/moar/m-Metamodel.nqp:2680␤  in any apply at gen/moar/m-Metamodel.nqp:2690␤  in any compose at gen/moar/m-Metamodel.nqp:2826␤  in any make_…»

[15:11] <jdv79> i get the same error with just normal application as well

[15:12] <jdv79> well, composition i guess its called nowadays

[15:12] <BenGoldberg> m: role R[::T] { has T $.r}; R[Str].new.r.say

[15:12] <camelia> rakudo-moar : OUTPUT«Method 'say' not found for invocant of class 'T'␤  in block <unit> at /tmp/ZioBB4oCHI:1␤␤»

[15:12] <BenGoldberg> m: role R[::T] { has T $.r}; say R[Str].new.r

[15:12] <camelia> rakudo-moar : OUTPUT«Method 'gist' not found for invocant of class 'T'␤  in block <unit> at /tmp/pQ2Rh5b3WS:1␤␤»

[15:13] <BenGoldberg> m: role R[::T] { has T $.r}; say R[Str].new.r.WHAT

[15:13] <camelia> rakudo-moar : OUTPUT«Method 'gist' not found for invocant of class 'T'␤  in block <unit> at /tmp/Rdd5V1UeG0:1␤␤»

[15:13] <jdv79> m: role R[::T = Str] { has T $.r}; class A does R {}; A.new.r.say

[15:13] <camelia> rakudo-moar : OUTPUT«Method 'say' not found for invocant of class 'T'␤  in block <unit> at /tmp/EP4sdRY8Mj:1␤␤»

[15:13] <BenGoldberg> m: role R[::T] { has T $.r}; my $r = R[Str].new; say 'ok';

[15:13] <camelia> rakudo-moar : OUTPUT«ok␤»

[15:13] <BenGoldberg> m: role R[::T] { has T $.r}; my $r = R[Str].new; my $rr = $r.r; say 'ok'

[15:13] <camelia> rakudo-moar : OUTPUT«ok␤»

[15:13] <BenGoldberg> m: role R[::T] { has T $.r}; my $r = R[Str].new; my $rr = $r.r; say $rr

[15:13] <camelia> rakudo-moar : OUTPUT«Method 'gist' not found for invocant of class 'T'␤  in block <unit> at /tmp/wY6QugAGRZ:1␤␤»

[15:14] <jdv79> it seems to be because type/class T is not real

[15:14] <jdv79> which means the bind is failing or something?

[15:16] <nine> .tell FROGGS with my last rakudo patch, a panda installed into a Repository::Installation now works with the wrapper generated by rakudo and can install many modules :) The default repo list contains only Repository::Installation (perl6 -e 'say $*REPO.repo-chain')

[15:16] <yoleaux> nine: I'll pass your message to FROGGS.

[15:16] *** cdg left
[15:16] *** MadcapJake joined
[15:19] <BenGoldberg> m: role R[::T] { method diditbind { T.WHAT } }; my $r = R[Str].new; say $r; say $r.diditbind;

[15:19] <camelia> rakudo-moar : OUTPUT«R[Str].new␤(Str)␤»

[15:19] *** zacts joined
[15:19] <dalek> modules.perl6.org/new-db-builder: eda8def | (Zoffix Znet)++ | web/ (3 files):

[15:19] <dalek> modules.perl6.org/new-db-builder: Tests for GitHub dist Source [Repo without a README, tests, or logotype]

[15:19] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/eda8defcc4

[15:21] <moritz> rakudo star is now in shape that it only needs an announcement and some testing to be releasable

[15:22] <jdv79> BenGoldberg: huh.

[15:22] <moritz> nine++ # precomp work

[15:26] *** s_kilk left
[15:29] *** raiph joined
[15:32] <El_Che> tadzik: nothing but love for panda, but wouldn't the name confuse people coming from python? https://en.wikipedia.org/wiki/Pandas_%28software%29

[15:34] <tadzik> El_Che: I've never heard of this before

[15:34] <Begi11115> PandaS =! panda

[15:34] <moritz> El_Che: people are goot at putting stuff into context

[15:36] <jdv79> m: role R[::T = Str] { has T $.r =T}; class A does R; A.new.r.say

[15:36] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/lx74dRiHaz␤Too late for unit-scoped class definition;␤Please use the block form.␤at /tmp/lx74dRiHaz:1␤------> 3 = Str] { has T $.r =T}; class A does R;7⏏5 A.new.r.say␤»

[15:36] <jdv79> m: role R[::T = Str] { has T $.r =T}; R.new.r.say

[15:36] <camelia> rakudo-moar : OUTPUT«(Str)␤»

[15:36] <El_Che> tadzik: pandas is pretty big in the scientific community. Just so you know in case someone asks :)

[15:36] <jdv79> why is it necessary to set the default to the type obj in that case but not in general?

[15:36] <tadzik> El_Che: alright, noted :)

[15:36] <jdv79> or is that a bug?

[15:38] <lucasb> Is the problem with 'role R[::T] { has T $.x }' the fact that T will only be known at runtime and 'has' needs to know that at compile time?

[15:39] *** diana_olhovik_ left
[15:39] <timotimo> no, it has to be known at composition time

[15:40] <timotimo> which is when you apply the role to something or when you pun the role

[15:40] <timotimo> not sure why you use ::T there, tbh

[15:41] <timotimo> m: role R[T] { has T $.r}; say R[Str].new.r.WHAT

[15:41] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/pLd2F20ndY␤Invalid typename 'T' in parameter declaration.␤at /tmp/pLd2F20ndY:1␤------> 3role R[T7⏏5] { has T $.r}; say R[Str].new.r.WHAT␤»

[15:41] <timotimo> oh, that's why

[15:41] <timotimo> m: role R[::T] { has T $.r}; say R[Str].new.r.WHAT

[15:41] <camelia> rakudo-moar : OUTPUT«Method 'gist' not found for invocant of class 'T'␤  in block <unit> at /tmp/jxxLkXSbuk:1␤␤»

[15:41] <timotimo> it really shouldn't do that, why does it do that?

[15:41] <timotimo> m: role R[::T] { has T $.r}; class Test does R[Str] { }; Test.new.r.WHAT

[15:41] <camelia> rakudo-moar : ( no output )

[15:41] <timotimo> a problem with punning, i suppose?

[15:42] <timotimo> because it *should* work the exact same way there

[15:42] <timotimo> like, punning is designed to be the same as applying the role to an empty class

[15:42] <jdv79> no, composing that onto a class produces the same thing

[15:43] <timotimo> huh?

[15:43] <timotimo> camelia says no

[15:43] <DrForr> How is Bailador coming along?

[15:44] *** rindolf joined
[15:44] <DrForr> (I supposse I could just download it myself...)

[15:45] <timotimo> i don't know if there were many commits to bailador in the recent months?

[15:45] <DrForr> Hrm.

[15:46] <dalek> modules.perl6.org/new-db-builder: 4c0fb2e | (Zoffix Znet)++ | / (95 files):

[15:46] <dalek> modules.perl6.org/new-db-builder: Remove superfluous "web" dir

[15:46] <dalek> modules.perl6.org/new-db-builder: 

[15:46] <dalek> modules.perl6.org/new-db-builder: We are not building anything anymore, so we can do without any special dirs to keep the files in.

[15:46] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/4c0fb2e415

[15:46] <timotimo> oh

[15:46] <timotimo> there was a pull request to bailador 22 days ago

[15:46] <jdv79> m: role R[::T] { has T $.r}; class Test does R[Str] { }; Test.new.r.say

[15:46] <camelia> rakudo-moar : OUTPUT«Method 'say' not found for invocant of class 'T'␤  in block <unit> at /tmp/3rGqp2dydl:1␤␤»

[15:46] <timotimo> it adds a license file %)

[15:46] <timotimo> oh, i forgot the "say"!

[15:46] <timotimo> silly me!

[15:47] <DrForr> Well, if it's stable enough that someone can run the Plack equivalent and get a dynamic webpage that's all I'd ask.

[15:48] <timotimo> no clue

[15:48] <timotimo> i'm bad at web

[15:48] <DrForr> Actually that's another dependency that might scare people off. Backup plan.

[15:49] <timotimo> last time i web-app'd i used HTTP::Server::Async

[15:49] <stmuk_> I think gabor uses a perl6 web system in production for perl6maven

[15:49] <timotimo> is it a web server or a generator?

[15:49] <timotimo> you can easily see if you use siege or ab :P

[15:49] <moritz> server

[15:50] <moritz> m: put Int

[15:50] <camelia> rakudo-moar : OUTPUT«Use of uninitialized value of type Int in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at /tmp/6wUq_OA6Gv:1␤␤»

[15:53] <stmuk_> I think its nginx proxying bailidor

[15:54] <stmuk_> with the perl6 restarted frequently via a cron :)

[15:54] <timotimo> d'oh

[15:55] *** BenGoldberg left
[15:57] <Skarsnik> damn smoke/smokegen (the tool used by kde to bind qt/kde lib to other language) is not really good with C, but it's close x) http://pastebin.com/FKZPCAcL

[16:01] *** RabidGravy joined
[16:02] <lucasb> m: say '3' / '2'

[16:02] <camelia> rakudo-moar : OUTPUT«1.5␤»

[16:02] <lucasb> m: say '3' div '2'

[16:02] <camelia> rakudo-moar : OUTPUT«Cannot call infix:<div>(Str, Str); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at /tmp/Kc_tdIga6M:1␤␤»

[16:03] <lucasb> 'div' needs to be stricter for some reason?

[16:03] <moritz> yes.

[16:03] *** xinming left
[16:03] *** xpen left
[16:04] <hankache> lucasb div will only accept integers

[16:04] <dalek> star: e6cb388 | moritz++ | docs/announce/2015.11.md:

[16:04] <dalek> star: Add draft 2015.11 release announcements

[16:04] <dalek> star: review: https://github.com/rakudo/star/commit/e6cb3885af

[16:04] <hankache> m: say 3.0 div 2.0;

[16:04] <camelia> rakudo-moar : OUTPUT«Cannot call infix:<div>(Rat, Rat); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at /tmp/0LNb5Xfj4H:1␤␤»

[16:04] <hankache> lucasb not even Rat

[16:05] <moritz> div is specificallly *integer* division; use / if you want general division

[16:05] *** vendethiel joined
[16:05] <hankache> m: say 3 / 2;

[16:05] <camelia> rakudo-moar : OUTPUT«1.5␤»

[16:05] <autarch> what's the process by which bugs get on the Christmas list? is it too late to add anything?

[16:05] <hankache> m: say 3 div 2;

[16:05] <camelia> rakudo-moar : OUTPUT«1␤»

[16:06] <dalek> modules.perl6.org/new-db-builder: 74a2be4 | (Zoffix Znet)++ | build-project-list.pl:

[16:06] <dalek> modules.perl6.org/new-db-builder: Add --help usage instructions to builder script

[16:06] <dalek> modules.perl6.org/new-db-builder: review: https://github.com/perl6/modules.perl6.org/commit/74a2be40b5

[16:06] <lucasb> ok, thanks hankache, moritz

[16:06] <moritz> autarch: you convince jnthn or TimToady (I think; or maybe me) that it's a Christmas blocker

[16:06] <hankache> lucasb plus the result is always rounded down to the closest Int

[16:06] *** xinming joined
[16:07] <moritz> m: say (-3) div 2

[16:07] <camelia> rakudo-moar : OUTPUT«-2␤»

[16:07] <timotimo> rounded down or truncated?

[16:07] <stmuk_> hmmm I'm seeing use.t fail with Inline::Perl5

[16:07] <moritz> timotimo: ^^ doesn't look like truncation

[16:07] <hankache> timotimo isn't it the same thing?

[16:08] <hankache> from a mathematical point of view?

[16:08] <timotimo> well, there's "round towards 0" and "round towards negative inf"

[16:08] <timotimo> both could be called "round down"

[16:09] <moritz> except that zero isn't "down" from a negative number's POV

[16:10] *** BenGoldberg joined
[16:10] <timotimo> the absolute value goes down, though :P

[16:10] <timotimo> from -3.6 to -3

[16:11] <hankache> imho it's rounded down because if it was truncated -3 div 2 would have truncated -1.5 which would be -1

[16:11] <DrForr> Is this overkill for a tutorial description? http://paste.scsys.co.uk/501771

[16:11] *** FROGGS joined
[16:13] *** telex left
[16:13] <hankache> DrForr no

[16:14] *** telex joined
[16:14] <DrForr> Thanks. I tried to hit what I think is going to be a draw, and at least what I'm pretty sure I can teach.

[16:15] <lucasb> DrForr: Don't you think is better to change 'Please come to the tutorial with a laptop running the latest version of Rakudo Star' to 'We will teach you how to install the thing'? :)

[16:16] <pink_mist> maybe have a pre-tutorial workshop where you help people install it

[16:17] <DrForr> Guh. If it's going to be that hard by May then there's no point to a tutorial.

[16:18] <pink_mist> good point :P

[16:19] <DrForr> Rakudobrew went onto my system simply, but I'm guessing by what's being said here that I'm in the vast minority?

[16:19] <DrForr> Or am I simply describing the wrong install requirement?

[16:20] <hankache> DrForr chekout https://github.com/hankache/perl6intro

[16:20] <stmuk_> I suspect most people on the channel install rakudo daily but that the potential audience might be better off installing from docker or something

[16:20] <hankache> DrForr or http://www.perl6intro.com

[16:21] <hankache> I tried to compile an introductory tutorial. I would be glad if it can be of any help

[16:21] <masak> metasin: yes, I definitely missed the joke, whatever it was :)

[16:22] <DrForr> hankache: It'd be going into an OSCON tutorial link, ust so you're aware.

[16:22] <DrForr> *just

[16:23] <DrForr> OSCON US has a dearth of Perl material and I'm hoping to capitalize on that.

[16:23] *** FROGGS left
[16:24] <DrForr> And being a bit scared of the prospect of doing a 3-hour tutorial out of the gate.

[16:27] <hankache> DrForr good luck. I am still learning Perl 6 so if you need a beginner point of view i can help

[16:27] <DrForr> Cool,  may take you up on that.

[16:28] <Begi11115> That's my case too if you need DrForr

[16:28] * DrForr scratches notes down.

[16:29] <hankache> What is an OSCON tutorial link? Sorry in my part of the world we're way behind those things

[16:30] <timotimo> just means the description of the session will link to your site

[16:30] <DrForr> perl6info.com would be going into my tutorial description, and appear as part of the OSCON schedule, people interested in the tutorial would go there.

[16:30] *** pippo joined
[16:31] <hankache> DrForr ok. if it can help other people why not

[16:31] <DrForr> Just saying you might get more traffic than you bargained for :)

[16:31] <hankache> DrForr its perl6intro.com

[16:31] <timotimo> i think it's hosted on github.io

[16:32] *** tokuhiro_ joined
[16:32] <hankache> no it's on bluehost but its solid, should be able to handle the traffic

[16:33] <DrForr> Okay, cool. OTOH people interested in this will probably self-select for creativity and desire to do something, so I shouldn't worry *too* much.

[16:33] <hankache> the source is on github though

[16:33] <timotimo> ah, ok

[16:34] <DrForr> Yah, I'm not expecting much, and this only matters of course if it's accepted, which is a bit of a long shot.

[16:35] *** FROGGS joined
[16:36] <dalek> perl6.org: 4271a55 | (Steve Mynott)++ | source/documentation/index.html:

[16:36] <dalek> perl6.org: add perl6intro.com

[16:36] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/4271a5518d

[16:36] *** tokuhiro_ left
[16:37] <hankache> DrForr best of luck. ping me if you need any help

[16:37] <DrForr> Thanks.

[16:38] <DrForr> I'm currently working with 6Gb RAM, do we have any minimal hardware/software requirement docs hanging around?

[16:38] * DrForr goes looking.

[16:39] <moritz> /home/moritz/p6/star/install/bin/perl6-j --target=jar --output=/home/moritz/p6/star/install/share/perl6/lib/JSON/Fast.pm.jar /home/moritz/p6/star/install/share/perl6/lib/JSON/Fast.pm

[16:39] <moritz> ===SORRY!===

[16:39] <moritz> Cannot unbox a type object

[16:39] <Skarsnik> moar spawn like 100Mo at least I think?

[16:40] <moritz> for compiling the setting, I think you should have at least 1.5GB RAM

[16:40] *** woodruff- is now known as woodruffw

[16:43] <DrForr> That's decent.

[16:44] <diakopter> I just compiled the setting just now; it used max 921 MB real memory and max 3.27 GB virtual memory

[16:45] *** pdcawley joined
[16:47] <stmuk_> moritz: https://github.com/rakudo/star/pull/56

[16:51] *** khw joined
[16:54] *** Ben_Goldberg joined
[16:55] <dalek> star: a38ae2b | (Steve Mynott)++ | docs/2015-spw-perl6-course.pdf:

[16:55] <dalek> star: import newer Nov 21 version of jnthn slides

[16:55] <dalek> star: review: https://github.com/rakudo/star/commit/a38ae2bad3

[16:55] <dalek> star: 5660f6e | (Steve Mynott)++ | docs/announce/2015.11.md:

[16:55] <dalek> star: ref to updated tutorial in announce

[16:55] <dalek> star: review: https://github.com/rakudo/star/commit/5660f6e00b

[16:55] <dalek> star: 0548398 | moritz++ | docs/ (2 files):

[16:55] <dalek> star: Merge pull request #56 from stmuk/master

[16:55] <dalek> star: 

[16:55] <moritz> stmuk_: thanks!

[16:55] <dalek> star: Updated jnthn slides

[16:55] <dalek> star: review: https://github.com/rakudo/star/commit/054839828f

[16:56] <stmuk_> np

[16:56] <moritz> sno: I can give you access to hack.p6c.org, a shared linux box where the R* problems can be reproduced

[16:56] <moritz> sno: are you interested?

[16:57] *** pdcawley left
[16:57] <sno> moritz: I don't have time this evening for longer remote session

[16:57] *** FROGGS left
[16:57] <sno> moritz: I have such a machine upstairs, but trouble with family etc. ...

[16:58] <moritz> sno: ok

[16:58] *** BenGoldberg left
[16:58] <sno> I can manage that until ~ Tuesday

[16:59] <sno> and then I do both, fix Darwin tar misusage, too :D

[17:00] <hankache> bbiab

[17:00] *** FROGGS joined
[17:00] *** hankache left
[17:03] *** gypsydave5 joined
[17:13] *** sprocket left
[17:13] *** Ven joined
[17:14] *** FROGGS left
[17:16] <stmuk_> Usage: panda <action> [options]

[17:17] <stmuk_> but I have to do panda --notests install 007

[17:17] <stmuk_> I think it should be Usage: panda [options] <action>?

[17:18] <zengargoyle> stmuk_: think it's a limitation of MAIN() argument processing.  named things (flags) must be before positionals.

[17:18] *** Ven left
[17:18] <stmuk_> yes it's caused many problems over the last few months

[17:19] <stmuk_> also side effects from allowing multiple modules being installed at once

[17:20] *** zacts left
[17:21] *** Ven joined
[17:22] <zengargoyle> is that where it sometimes fails to reinstall everything during a rakudobrew build?

[17:23] <stmuk_> I was thinking more of the commandline arg processing .. not seen that other problem

[17:23] <zengargoyle> seems i'm always double checking and manually reinstalling something.

[17:25] *** skids joined
[17:28] *** s_kilk joined
[17:32] *** Ven left
[17:35] *** Ven joined
[17:44] *** s_kilk left
[17:45] *** rurban left
[17:47] *** Ven left
[17:49] <dalek> star: e33753b | moritz++ | docs/announce/2015.11.md:

[17:49] <dalek> star: Note about beta status, and brokenness of the JVM backend

[17:49] <dalek> star: review: https://github.com/rakudo/star/commit/e33753b084

[17:49] *** Ven joined
[17:52] *** diana_olhovik joined
[17:57] *** zakharyas joined
[18:00] <dalek> star: 222cce6 | moritz++ | / (2 files):

[18:00] <dalek> star: Bump version to 2015.11

[18:00] <dalek> star: review: https://github.com/rakudo/star/commit/222cce6ca8

[18:01] <moritz> http://hack.p6c.org/~moritz/rakudo-star-2015.11-rc0.tar.gz # R* 2015.11 Release Candidate

[18:01] <moritz> please test it

[18:02] *** hankache joined
[18:02] *** Ven left
[18:03] *** diana_olhovik left
[18:03] *** iH2O joined
[18:04] *** iH2O left
[18:04] *** sprocket joined
[18:11] *** thundergnat joined
[18:11] *** Ben_Goldberg is now known as BenGoldberg

[18:12] *** zakharyas left
[18:12] *** zakharyas joined
[18:13] <xfix> perl6: multi a(Int $n) is cached { $n }; say a 20

[18:14] <camelia> rakudo-jvm c016df: OUTPUT«20␤»

[18:14] <camelia> ..rakudo-moar: OUTPUT«Cannot invoke object with invocation handler in this context␤  in sub a at /tmp/tmpfile:1␤  in block <unit> at /tmp/tmpfile:1␤␤»

[18:14] <xfix> perl6: multi a(Int $n) is cached { $n }; say try a 20; say a 20;

[18:14] <camelia> rakudo-moar: OUTPUT«Nil␤20␤»

[18:14] <camelia> ..rakudo-jvm c016df: OUTPUT«20␤20␤»

[18:14] <xfix> Am I not understanding something, or is it a bug?

[18:17] <raiph> m: multi a(Int $n) is cached { $n }; say (a 20).WHAT

[18:17] <camelia> rakudo-moar : OUTPUT«Cannot invoke object with invocation handler in this context␤  in sub a at /tmp/F7DYn7By0G:1␤  in block <unit> at /tmp/F7DYn7By0G:1␤␤»

[18:18] <raiph> m: sub a(Int $n) is cached { $n }; a 20

[18:18] <camelia> rakudo-moar : ( no output )

[18:18] <raiph> m: sub multi a(Int $n) { $n }; a 20

[18:18] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/opEYzLKyNi␤Missing block␤at /tmp/opEYzLKyNi:1␤------> 3sub multi7⏏5 a(Int $n) { $n }; a 20␤    expecting any of:␤        new name to be defined␤»

[18:18] <raiph> m: multi a(Int $n) { $n }; a 20

[18:18] <camelia> rakudo-moar : ( no output )

[18:18] <raiph> m: multi a(Int $n) is cached { $n }; a 20

[18:18] <camelia> rakudo-moar : OUTPUT«Cannot invoke object with invocation handler in this context␤  in sub a at /tmp/3lx3Ni259v:1␤  in block <unit> at /tmp/3lx3Ni259v:1␤␤»

[18:19] <BenGoldberg> j:  multi a(Int $n) is cached { $n }; a(20).WHAT.say

[18:19] <camelia> rakudo-jvm c016df: OUTPUT«(Int)␤»

[18:19] <BenGoldberg> m: multi a(Int $n) is cached { $n }; a(20).WHAT.say

[18:19] <camelia> rakudo-moar : OUTPUT«Cannot invoke object with invocation handler in this context␤  in sub a at /tmp/ozhOVoIt_6:1␤  in block <unit> at /tmp/ozhOVoIt_6:1␤␤»

[18:20] <BenGoldberg> raiph, Maybe you should file a bug report?

[18:20] <diakopter> xfix: it's plainly a bug

[18:21] <xfix> Calling a function once while catching exceptions is a workaround, but I feel it's not supposed to work that way.

[18:23] <raiph> currently exploring if it's related to https://rt.perl.org/Ticket/Display.html?id=124016

[18:24] *** Fleurety left
[18:25] <hankache> raiph thank you for the typo correction

[18:25] *** psch_ is now known as psch

[18:26] <psch> RT #125278 exists, fwiw

[18:26] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125278

[18:28] <psch> no idea if "you need to proto that" would be the fix or if it should be more along the lines of "oh, it's cached, lets gen a cached proto"

[18:29] <lucasb> m: proto f(|) is cached {}; multi f($n) { $n }; say f 20

[18:29] <camelia> rakudo-moar : OUTPUT«Nil␤»

[18:29] <lucasb> ^^ even a proto doesn't fix that

[18:30] <psch> well, it fixes the LTA error :S

[18:30] <psch> m: proto f(|) is cached {*}; multi f($n) { $n }; say f 20

[18:30] <camelia> rakudo-moar : OUTPUT«20␤»

[18:30] <psch> and an empty proto just does nothing

[18:31] <psch> m: proto f(|) is cached {*}; multi f($n) { say "uncached yet"; $n }; say f 20; say f 20

[18:31] <camelia> rakudo-moar : OUTPUT«uncached yet␤20␤20␤»

[18:32] <lucasb> ^^ I made a mistake, forgot the {*} thing. nevermind my eval :)

[18:33] <psch> i don't know about use-cases for is cached, and whether caching on a proto-level (i.e. for all multis) or not is something a user might want to decide themselves...

[18:34] *** diana_olhovik joined
[18:34] <psch> as in, i can imagine a "give me a fresh result here" use-case, but i'm not sure MMD is what this should be delegated to

[18:34] <psch> although considering only the first non-cached proto multi invocation throws that error it probably should work on a candidate level

[18:37] <raiph> hankache: yw

[18:37] <raiph> psch: now *that* looks like the right rt :)

[18:38] <raiph> psch: "first non-cached proto multi invocation throws that error" <-- please repeat that with camelia so i understand :)

[18:39] <psch> m: multi a(Int $n) is cached { $n }; say try a 20; say a 20; # this one

[18:39] <camelia> rakudo-moar : OUTPUT«Nil␤20␤»

[18:39] <psch> m: multi a(Int $n) is cached { say "uncached yet"; $n }; say try a 20; say a 20; # this one

[18:39] <camelia> rakudo-moar : OUTPUT«Nil␤uncached yet␤20␤»

[18:39] <psch> m: multi a(Int $n) is cached { say "uncached yet"; $n }; say try a 20; say a 20; say a 20# this one

[18:39] <camelia> rakudo-moar : OUTPUT«Nil␤uncached yet␤20␤20␤»

[18:39] <psch> note it still caches afterwards

[18:40] <psch> (alternative let me rephrase: "[...] considering only the first invocation of a multi that is cached without a proto that is cached [...]")

[18:44] <xfix> perl6: say 9 ** 9 ** 90

[18:44] <camelia> rakudo-jvm c016df: OUTPUT«-Inf␤»

[18:44] <camelia> ..rakudo-moar: OUTPUT«0␤»

[18:44] <xfix> 0?

[18:45] *** hankache left
[18:46] <xfix> I see, Rakudo cannot calculate cannot Int ** Int where an exponent doesn't fit in a native integer.

[18:47] *** Ulti left
[18:47] <pink_mist> try a FatRat?

[18:50] <psch> m: say 9 ** FatRat.new(9 ** 90, 1)

[18:50] <camelia> rakudo-moar : OUTPUT«Inf␤»

[18:50] <psch> m: say FatRat.new(9 ** 90, 1)

[18:50] <camelia> rakudo-moar : OUTPUT«76177348045866392339289727720615561750424801402395196724001565744957137343033038019601␤»

[18:51] <psch> m: say FatRat.new(9, 1) ** FatRat.new(9 ** 90, 1)

[18:51] <camelia> rakudo-moar : OUTPUT«Inf␤»

[18:52] <skids> m: grammar foo {  rule TOP { . } }; foo.parse("foo",:subclass_arg_to_ignore)

[18:53] <camelia> rakudo-moar : OUTPUT«Unexpected named parameter 'subclass_arg_to_ignore' passed␤  in block <unit> at /tmp/cUwyy7Hppz:1␤␤»

[18:53] <skids> star: grammar foo {  rule TOP { . } }; foo.parse("foo",:subclass_arg_to_ignore)

[18:53] <camelia> star-m 2015.09: ( no output )

[18:53] <skids> That was breaking Grammar::BNF but I worked around it.

[18:54] <stmuk_> moritz: https://github.com/rakudo/star/pull/57

[18:55] <raiph> psch: thanks

[18:57] *** yqt joined
[18:59] * skids files as RT#126708

[19:00] <psch> m: say f(*%opts) { say %opts.perl }; f :subclass_arg_to_ignore

[19:00] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/ZrVtxYeq93␤Unexpected block in infix position (missing statement control word before the expression?)␤at /tmp/ZrVtxYeq93:1␤------> 3say f(*%opts)7⏏5 { say %opts.perl }; f :subclass_arg_to_␤    expecting…»

[19:00] <psch> m: sub f(*%opts) { say %opts.perl }; f :subclass_arg_to_ignore

[19:00] <camelia> rakudo-moar : OUTPUT«{:subclass_arg_to_ignore}␤»

[19:00] <psch> m: class A { method m(*%opts) { say %opts.perl } }; A.new.m :subclass_arg_to_ignore

[19:00] <camelia> rakudo-moar : OUTPUT«{:subclass_arg_to_ignore}␤»

[19:00] <psch> m: say Grammar.^can('parse')>>.candidates>>.signature

[19:00] <camelia> rakudo-moar : OUTPUT«(((Grammar $: $target, :$rule = { ... }, :$args = { ... }, Mu :$actions = { ... }, *%opt)))␤»

[19:01] <skids> Maybe it is actually the call to the .cursor method complaining.

[19:03] <timotimo> if it's a call to a method, a named parameter wouldn't complain without some extra code to do the complaining

[19:04] *** UKcodeFan joined
[19:04] <skids> Do nqp methods follow that convention as well?

[19:04] <timotimo> i believe so, yeah

[19:05] <timotimo> if you really do mean methods and not nqp:: things

[19:06] <skids> Well if it has to be caled as self."!cursor_init" who knows how it was cobbled together.

[19:06] <raiph> m: my $*foo = 1; say :$*foo # searched rakudo src and clogs for "unexpected named parameter"; I think this one's coming from `say`

[19:07] <camelia> rakudo-moar : OUTPUT«Unexpected named parameter 'foo' passed␤  in block <unit> at /tmp/t_aKAYrx6z:1␤␤»

[19:08] <psch> nqp-m: class A { method foo() { } }; A.new.foo :bar

[19:08] <camelia> nqp-moarvm: OUTPUT«Confused at line 2, near "A.new.foo "␤   at gen/moar/stage2/NQPHLL.nqp:521  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:panic:105)␤ from gen/moar/stage2/NQP.nqp:921  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/nqp.moarvm:comp_unit:872)␤ from …»

[19:08] <psch> nqp-m: class A { method foo() { } }; A.new.foo(:bar)

[19:08] <camelia> nqp-moarvm: OUTPUT«Unexpected named parameter 'bar' passed␤   at /tmp/K857Ys5RPJ:1  (<ephemeral file>:foo:3)␤ from /tmp/K857Ys5RPJ:1  (<ephemeral file>:<mainline>:37)␤ from gen/moar/stage2/NQPHLL.nqp:1303  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:eval:190)␤…»

[19:09] <psch> no interface consistency in nqp it seems

[19:09] <dalek> roast: 7e1ef3e | usev6++ | S16-io/lines.t:

[19:09] <dalek> roast: Fudge test for :nl-in and :chomp on JVM

[19:09] <dalek> roast: 

[19:09] <dalek> roast: Major duplication of code was necessary to be able to

[19:09] <dalek> roast: fudge failing tests. As elegant as nested 'for' loops

[19:09] <dalek> roast: are for testing different parameters, as hard it becomes

[19:09] <dalek> roast: to fudge specific tests.

[19:09] <dalek> roast: 

[19:09] <dalek> roast: Please revert if you find a better way to do the fudging.

[19:09] <dalek> roast: review: https://github.com/perl6/roast/commit/7e1ef3ee08

[19:11] *** zakharyas left
[19:14] *** diana_olhovik left
[19:15] *** pdcawley joined
[19:24] *** mj41 joined
[19:29] <mj41> .tell jnthn https://github.com/rakudo/star/blob/master/docs/2015-spw-perl6-course.pdf slide 23 s/# (Int)/# (Str)/

[19:29] <yoleaux> mj41: I'll pass your message to jnthn.

[19:35] <timotimo> hm, the rakudo star announcement didn't go out yet, right?

[19:38] <stmuk_> its in RC

[19:40] *** rindolf left
[19:41] *** polettix left
[19:47] *** xinming left
[19:47] *** xinming joined
[19:47] <stmuk_> I can't "panda install XML" with star rc0 I see "./prove: 1: ./prove: Cannot fork

[19:47] <stmuk_> The spawned process exited unsuccessfully (exit code: 2) in method throw at /home/steve/othersrc/star/rakudo-star-2015.11-rc0/install/share/perl6/runtime/CORE.setting.moarvm:1

[19:48] <stmuk_> I've seen this both on linux and os x

[19:48] * flussence came across this interesting article today about the PRNG in V8 being subtly, horribly broken: https://medium.com/@betable/tifu-by-using-math-random-f1c308c4fd9d

[19:49] *** Sqirrel joined
[19:50] <gfldex> m: for 1..5 { say ([+] 1.rand xx 100000) / 100000 }

[19:50] <camelia> rakudo-moar : OUTPUT«0.499856562498002␤0.498229974484659␤0.498956127554163␤0.498720718972541␤0.499470305202736␤»

[19:54] <psch> j: for 1..5 { say ([+] 1.rand xx 10000) / 10000 } # less precision, 'cause timeout

[19:54] <camelia> rakudo-jvm c016df: OUTPUT«0.500889111480991␤0.49810811090140594␤0.4977089177080055␤0.49838340840390394␤0.5054720095566693␤»

[19:55] *** UKcodeFan left
[19:55] <psch> yay noise :)

[19:55] <lucasb> This is a friendly reminder that the advent calendar schedule is empty. Hope you people are thinking about your post ideas :)

[19:56] <El_Che> In case no one linked here to the latest Larry Wall interview: https://twit.tv/shows/triangulation/episodes/225

[19:56] <metasin> El_Che: thanks

[19:58] <grondilu> there will be an advent calendar even this year?  Isn't that a bit of a waste of time/energy before Xmas?

[19:58] <stmuk_> "panda install XML" works fine for me with current rakudobrew

[20:00] <lucasb> grondilu: yep, I understand the developers will be busy with the release. Don't know what others think. Having advent calendars in all the past years and the release year doesn't have one would look strange.

[20:01] <ilmari> it would be nice (and better for search engin findability) if one of docs?.perl6.org redirected to the other

[20:02] *** zacts joined
[20:03] <jdv79> surely advent is better than no advent

[20:04] *** spider-mario joined
[20:05] <masak> +1 to advent calendar

[20:05] <masak> as usual, I'm ready to chip in with posts. can't do it alone, though :)

[20:05] *** eliasr joined
[20:07] <ilmari> m: say 2³

[20:07] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/H2qRJC5PlK␤Bogus postfix␤at /tmp/H2qRJC5PlK:1␤------> 3say 27⏏5³␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement modifier␤ …»

[20:07] <ilmari> m: say 2²

[20:07] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/phUHQ9bZgB␤Bogus postfix␤at /tmp/phUHQ9bZgB:1␤------> 3say 27⏏5²␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement modifier␤ …»

[20:08] <ilmari> m: my \x = 2; say x³

[20:08] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/ibSEnL61t7␤Bogus postfix␤at /tmp/ibSEnL61t7:1␤------> 3my \x = 2; say x7⏏5³␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement m…»

[20:09] <ilmari> m: sub postfix:<²> ($x) { $x ** 2 }; say 3²

[20:09] <camelia> rakudo-moar : OUTPUT«9␤»

[20:09] <ilmari> http://docs.perl6.org/language/unicode_entry#Superscripts_and_subscripts implies they should work OOTB

[20:10] <masak> ilmari: that's not how I read it.

[20:10] <ilmari> oh, no, that's not actually code

[20:10] <masak> it's talking about which characters might be useful when defining stuff like operators.

[20:11] <ilmari> yeah, I realised

[20:14] <ilmari> what I was actually looking for was the equivalent of perl5's \N{...}

[20:14] <dalek> star: 59c0536 | (Steve Mynott)++ | docs/announce/2015.11.md:

[20:14] <dalek> star: correct two minor typos

[20:14] <dalek> star: review: https://github.com/rakudo/star/commit/59c0536205

[20:14] <dalek> star: 349fb98 | moritz++ | docs/announce/2015.11.md:

[20:14] <dalek> star: Merge pull request #57 from stmuk/master

[20:14] <dalek> star: 

[20:14] <dalek> star: correct two minor typos

[20:14] <dalek> star: review: https://github.com/rakudo/star/commit/349fb9812e

[20:15] *** kjs_ left
[20:15] <masak> m: say "\c[WHITE SMILING FACE]" # <-- ilmari 

[20:15] <camelia> rakudo-moar : OUTPUT«☺␤»

[20:16] <ilmari> where is this documented?

[20:16] *** dwarring joined
[20:16] <masak> ilmari: perhaps more importantly, where did you expect but fail to find it? :)

[20:18] <stmuk_>   http://examples.perl6.org/categories/cookbook/01strings/01-05namedunicode.html

[20:20] *** darutoko left
[20:20] <lucasb> Just noticed that these 2 cheatsheets have minor differences: mu/docs/Perl6/Cheatsheet/cheatsheet.txt and star/docs/cheatsheet.txt. One should be the official and the other just a copy.

[20:21] <stmuk_> I suspect the mu one is outdated

[20:21] *** znpy joined
[20:21] *** FROGGS joined
[20:22] <FROGGS> o/

[20:22] <yoleaux> 15:16Z <nine> FROGGS: with my last rakudo patch, a panda installed into a Repository::Installation now works with the wrapper generated by rakudo and can install many modules :) The default repo list contains only Repository::Installation (perl6 -e 'say $*REPO.repo-chain')

[20:23] *** domidumont left
[20:24] <FROGGS> nine: and that's with the panda/curli branch as well?

[20:27] <ilmari> masak: http://docs.perl6.org/language/quoting was the first place I looked

[20:27] <lucasb> stmuk_: I saw you updated the star one. But it is a little misleading since the mu one says 'cheat sheet v4' and the star one says 'cheat sheet v2'

[20:27] <ilmari> masak: since it's part of interpolating string syntax

[20:28] <ilmari> I also looked under http://design.perl6.org/S15.html

[20:28] <ilmari> and http://design.perl6.org/S02.html#Strings%2C_the_Str_Type

[20:29] <masak> I agree those are good places to look.

[20:29] <ilmari> ah, http://design.perl6.org/S02.html#Unicode_codepoints

[20:29] <ilmari> I didn't look far enough down

[20:29] <masak> yes, S02 would be the first place I'd look :)

[20:29] *** rurban joined
[20:30] <stmuk_> lucasb: maybe vimdiff the two?

[20:30] <stmuk_> or ediff or *

[20:30] <FROGGS> nine: I'm unable to build the restricted setting: Too few positionals passed; expected 3 arguments but got 0

[20:30] <masak> but I have the advantage of knowing roughly how the synopses are structured...

[20:30] *** BenGoldberg left
[20:34] <diakopter> m: my int8 @a[-1;-1]; say @a[0;0]

[20:34] <camelia> rakudo-moar : OUTPUT«Index 0 for dimension 2 out of range (must be 0..-2)␤  in block <unit> at /tmp/Hf5peDxaf0:1␤␤»

[20:34] <diakopter> O_O

[20:34] <FROGGS> hehe

[20:34] <diakopter> masakbug: lookie

[20:34] <FROGGS> diakopter: good catch :o)

[20:35] *** znpy left
[20:35] <diakopter> m: my int8 @a[;]; 

[20:35] <camelia> rakudo-moar : OUTPUT«===SORRY!===␤Cannot find method 'returns': no method cache and no .^find_method␤»

[20:36] <diakopter> m: my int8 @a[0;0]; say @a[;]

[20:36] <camelia> rakudo-moar : OUTPUT«===SORRY!===␤Cannot find method 'flat': no method cache and no .^find_method␤»

[20:36] <diakopter> masak: ^^ three buggoes

[20:38] <timotimo> hehe.

[20:39] <timotimo> dinner time \o/

[20:39] <diakopter> m: my int8 @a[1;1]; @a[0;0] = 256; say @a[0;0]

[20:39] <camelia> rakudo-moar : OUTPUT«0␤»

[20:40] <diakopter> m: my int8 @a[0;0]; @a[0;0] = 256; say @a[0;0]

[20:40] <camelia> rakudo-moar : OUTPUT«Index 0 for dimension 2 out of range (must be 0..-1)␤  in block <unit> at /tmp/lRPSfpcJBs:1␤␤»

[20:40] <diakopter> # imho it shouldn't allow zero as a dimension

[20:40] <FROGGS> aye

[20:40] <Skarsnik> m: int4 @a[1;1]; @a[0;0;] = 256; say @a[0,0];

[20:40] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/L7o7TkaOQX␤Two terms in a row␤at /tmp/L7o7TkaOQX:1␤------> 3int47⏏5 @a[1;1]; @a[0;0;] = 256; say @a[0,0];␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        …»

[20:40] <Skarsnik> m: int4 @a[1;1]; @a[0;0] = 256; say @a[0,0];

[20:40] <camelia> rakudo-moar : OUTPUT«5===SORRY!5=== Error while compiling /tmp/TYr6XRowHF␤Two terms in a row␤at /tmp/TYr6XRowHF:1␤------> 3int47⏏5 @a[1;1]; @a[0;0] = 256; say @a[0,0];␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        s…»

[20:41] <Skarsnik> m: my int4 @a[1;1]; @a[0;0] = 256; say @a[0;0];

[20:41] <camelia> rakudo-moar : OUTPUT«MultiDimArray: Unhandled slot type␤  in block <unit> at /tmp/DslJ3nq3Jt:1␤␤»

[20:41] <diakopter> it doesn't get below int8 yet

[20:42] <psch> m: my int4 $x;

[20:42] <camelia> rakudo-moar : OUTPUT«===SORRY!===␤Invalid int size for local/lexical␤»

[20:42] <Skarsnik> m:use NativeCall; say nativesizeof(int8); say nativesizeof(int4);

[20:42] <Skarsnik> m: use NativeCall; say nativesizeof(int8); say nativesizeof(int4);

[20:42] <camelia> rakudo-moar : OUTPUT«1␤0␤»

[20:43] <FROGGS> nine: I have no idea what's wrong: https://gist.github.com/FROGGS/8f38f2ca2887d82ff0bb

[20:44] *** thundergnat left
[20:44] <dalek> rakudo/nom: bc52faa | usev6++ | lib/Test.pm:

[20:44] <dalek> rakudo/nom: Report long name for exceptions in 'throws-like'

[20:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bc52faa532

[20:44] <dalek> rakudo/nom: ae8216b | FROGGS++ | lib/Test.pm:

[20:44] <dalek> rakudo/nom: Merge pull request #597 from usev6/throws-like_longname

[20:44] <dalek> rakudo/nom: 

[20:44] <dalek> rakudo/nom: Report long name for exceptions in 'throws-like'

[20:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ae8216b881

[20:48] *** lucasb left
[20:48] *** sivoais left
[20:49] *** sivoais joined
[20:53] <masak> this might be of interest to the package/module people on this channel: http://blog.ezyang.com/2014/08/the-fundamental-problem-of-programming-language-package-management/

[20:54] <masak> just discovered it now, though it's more than a year old, as you can see by the URL.

[20:54] *** kjs_ joined
[20:55] <moritz> if it's as fundamental as the URL makes us believe, a year of age won't change much :-)

[20:55] *** kaare_ left
[20:57] <masak> ;)

[21:01] <Skarsnik> it's quite empty in the end x)

[21:01] *** BenGoldberg joined
[21:03] <diakopter> dependencies vs requirements; until we have holistic proof-oriented programming [languages, tools, AND entire OSes], we'll be in this quagmire

[21:03] <dalek> rakudo-star-daily: ba06d10 | coke++ | log/ (10 files):

[21:03] <dalek> rakudo-star-daily: today (automated commit)

[21:03] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/ba06d10358

[21:03] <dalek> perl6-roast-data: 8a49548 | coke++ | / (9 files):

[21:03] <dalek> perl6-roast-data: today (automated commit)

[21:03] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/8a495481d8

[21:05] *** geraud joined
[21:05] *** pippo left
[21:13] <masak> 'night, #perl6

[21:14] *** BenGoldberg left
[21:14] *** BenGoldberg joined
[21:21] <nine> FROGGS: that's...odd

[21:21] <nine> FROGGS: it build NQP revision 8ffafe6?

[21:22] <nine> FROGGS: have you nuked your install dir?

[21:24] <FROGGS> no, have not nuked my install... that might be it

[21:24] <FROGGS> nine: nqp is latest

[21:24] <nine> I haven't merged nom in a while. So the branch might no longer be compatible with current nqp.

[21:24] <FROGGS> hmm, let's see

[21:24] *** hankache joined
[21:28] <FROGGS> okay, looks like I want an older nqp

[21:28] <nine> I'll have a look at merging nom

[21:31] *** znpy joined
[21:31] <nine> It's just two simple conflicts. Building now.

[21:32] <FROGGS> All positional args must appear before named args

[21:32] <FROGGS> maybe I'd need an older moar too :o)

[21:32] <FROGGS> (or I'll just wait)

[21:34] <dalek> Heuristic branch merge: pushed 104 commits to rakudo/curli by niner

[21:34] <nine> Built successfully :)

[21:34] <FROGGS> cool :o)

[21:34] *** Averna joined
[21:38] *** TEttinger joined
[21:39] <FROGGS> ./perl6-m --target=mbc -Ilib --output=lib/NativeCall/Compiler/GNU.pm.moarvm lib/NativeCall/Compiler/GNU.pm

[21:39] <FROGGS> D05D5F27E9A6C63503C21B4A647CCBA1E706405A

[21:39] *** rurban left
[21:39] <FROGGS> nine: it built fine

[21:39] <FROGGS> \o/

[21:39] <nine> yeah!

[21:42] *** Averna left
[21:43] <jdv79> what just happened?

[21:44] <FROGGS> nine: ohh, panda is installing to home rather than site?

[21:44] *** xfix left
[21:44] <nine> It's installing to the first repo that allows installing.

[21:45] <FROGGS> k

[21:45] <FROGGS> then the search order is wrong I guess :o)

[21:45] <FROGGS> but it's nice that it works anyway :o)

[21:45] <nine> That's one of the points that could use some discussion. Search order for loading modules should probably be HOME, site, vendor but for installation just site, HOME

[21:46] <moritz> doesn't R* for example want to install into vendor?

[21:46] <FROGGS> there probably should be a way to tell panda to a specific repo anyway

[21:46] <nine> There already is

[21:47] *** spider-mario left
[21:47] <jdv79> what's wrong with installing to home in some cases?

[21:47] <nine> As root I usually want to install system wide

[21:49] <nine> panda install --prefix /home/nine/install/rakudo/install/share/perl6/site Foo will install into the site repo

[21:51] <jdv79> is that env var able?

[21:52] <jdv79> or config or whatever

[21:52] <nine> There's PANDA_DEFAULT_OPTS

[21:53] *** polettix joined
[21:53] <FROGGS> nine: one missing thing is precomp, right?

[21:54] <FROGGS> nine: or is there something else that I could look into in the upcoming days?

[21:57] *** hankache left
[21:59] <nine> FROGGS: CompUnit::Repository::Installation precompiles on installation (line 194), Repository::FileSystem in need (line 57).

[21:59] <FROGGS> ohh, cool

[21:59] *** Begi11116 joined
[22:00] <nine> I'm not sure if we invalidate precomp files in all situations. The one thing that's sorely missing is tests :/

[22:00] <FROGGS> hmmm, maybe then I do that

[22:01] <jdv79> where is this stuff that needs tests?

[22:01] <nine> jdv79: rakudo's curli branch

[22:01] <jdv79> ok

[22:02] *** Begi11115 left
[22:03] <nine> http://niner.name/curli_test.tar is the only synthetic test I've used. The rest was just building rakudo (which installs files), running the spectests (which do use lib quite a lot) and running panda

[22:05] *** kjs_ left
[22:08] *** sprocket left
[22:08] <nine> I also think that we should install the wrappers for scripts into /usr/local/bin and ~/bin directly instead of the repo. The wrappers are looking through repos and distributions to find the correct scripts anyway. And it'd be much more user friendly.

[22:10] *** Begi11116 left
[22:12] <FROGGS> nine: I'm going to bed now but tomorrow I'll add tests to roast

[22:13] <FROGGS> gnight

[22:13] *** FROGGS left
[22:13] *** [Coke]_ is now known as [Coke]

[22:15] *** sprocket joined
[22:16] <mj41> The Christmas is comming. Nice momentum in number of commits in October https://github.com/mj41/Perl6-Analytics-results/blob/master/slides/mj41-brnopm-prev2.md#id-all-commits

[22:17] *** RabidGravy left
[22:19] *** znpy left
[22:19] *** Skarsnik left
[22:21] *** David_Cassel joined
[22:22] *** sprocket left
[22:22] <gfldex> is there any way to force binding for a value returned by a sub, from inside the sub?

[22:24] <jdv79> wow, the git tree is a bit crazy unless i'm failing to follow this

[22:24] *** Zoffix joined
[22:25] *** tokuhiro_ joined
[22:28] <moritz> gfldex: this is a bit like asking "I want to sell those apples, but force everybody who buys them not to put them in a box" :-)

[22:29] <gfldex> moritz: i believe to be aware of some of the consequences but still would like to have that answer answered.

[22:34] *** tokuhiro_ left
[22:34] *** znpy joined
[22:38] *** AlexDaniel joined
[22:43] *** loren joined
[22:52] <bartolin> .tell [Coke] the spectest for JVM should be nearly clean by now. the three failures in S05-mass/properties-general.t (596-598) seem to happen because we test unicode characters not supported by Java 7 (the tests pass with JDK 1.8)

[22:52] <yoleaux> bartolin: I'll pass your message to [Coke].

[22:57] *** mj41 left
[22:59] <dalek> nqp: 0944ec5 | peschwa++ | src/vm/jvm/QAST/JASTNodes.nqp:

[22:59] <dalek> nqp: Make --target=jast work and somewhat comprehensible.

[22:59] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0944ec5acd

[22:59] *** leont left
[23:00] *** loren left
[23:00] <psch> ...and with that i can actually *see* where those args disappear (i hope :/ )

[23:05] *** vendethiel left
[23:05] <psch> ah, duh, of course not /o\

[23:05] <psch> 'cause compilation breaks before reaching there

[23:07] *** snarkyboojum left
[23:07] *** Sqirrel left
[23:07] *** Sqirrel_ joined
[23:07] *** snarkyboojum joined
[23:07] *** snarkyboojum left
[23:09] *** snarkyboojum joined
[23:09] <dalek> roast: f1df147 | usev6++ | S32- (2 files):

[23:09] <dalek> roast: Do not rely on order of @.unexpected in X::Adverb

[23:09] <dalek> roast: 

[23:09] <dalek> roast: Fixes RT #126671

[23:09] <dalek> roast: review: https://github.com/perl6/roast/commit/f1df147714

[23:09] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126671

[23:20] *** ggoebel2 joined
[23:20] *** ggoebel3 joined
[23:22] *** ggoebel4 joined
[23:22] *** ggoebel left
[23:24] *** ggoebel2 left
[23:25] *** ggoebel3 left
[23:27] *** znpy left
[23:28] *** Ben_Goldberg joined
[23:29] *** BenGoldberg left
[23:31] *** tokuhiro_ joined
[23:34] *** ggoebel5 joined
[23:35] *** Ben_Goldberg left
[23:35] *** ggoebel6 joined
[23:35] *** Ben_Goldberg joined
[23:35] *** tokuhiro_ left
[23:37] *** ggoebel4 left
[23:38] *** ggoebel5 left
[23:40] *** David_Cassel left
[23:46] *** raiph left
[23:47] *** MadcapJake left
[23:48] *** kid51 left
[23:48] *** geraud left
[23:49] *** raiph joined
[23:49] <lizmat> good *, #perl6!

[23:49] * lizmat wonders how you would do http://blogs.perl.org/users/ingy_dot_net/2015/11/perl-regular-expression-awesomeness.html in Perl 6

[23:50] *** Sqirrel_ left
[23:51] *** nowan left
[23:52] *** kid51 joined
[23:53] *** dayangkun joined
[23:57] *** nowan joined
[23:58] <lizmat> and whether that shouldn't be a rosettacode entry  :-)

[23:58] <psch> m: my @a = <you got mail man mailman manners>; say "yougotmailmanners" ~~ m:ex/@a/ # am i misunderstanding :ex..?

[23:58] <camelia> rakudo-moar : OUTPUT«(｢you｣ ｢got｣ ｢mailman｣ ｢manners｣)␤»

[23:58] <psch> i thought :ex gets all possible matches..?

[23:59] <psch> m: my @a = <you got mail man mailman manners>; say "yougotmailmanners" ~~ m:g:ov/@a/ # ...and i don't know if :ov and :ex should do the same here

[23:59] <camelia> rakudo-moar : OUTPUT«(｢you｣ ｢got｣ ｢mailman｣ ｢manners｣)␤»

