[00:01] *** krshn left
[00:01] *** pdcawley left
[00:01] <AlexDaniel> Skarsnik: so I nuked everything and now it works

[00:01] <AlexDaniel> Skarsnik: thanks

[00:02] <dalek> rakudo/nom: e360bd2 | TimToady++ | src/core/Exception.pm:

[00:02] <dalek> rakudo/nom: arrays don't interpolate without brackets

[00:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e360bd21b0

[00:02] <AlexDaniel> TimToady: “nsupported”

[00:03] <AlexDaniel> aaah

[00:03] <AlexDaniel> there's U

[00:03] <AlexDaniel> hehe

[00:06] <cygx> 'night o/

[00:06] *** cygx left
[00:07] *** vendethiel- joined
[00:08] <TimToady> not my code, just trying to make it actually work, while figuring out why the corresponding test in adverb.t always fails

[00:08] <TimToady> (but only under load)

[00:08] *** jcrespo joined
[00:09] <TimToady> I might just comment out those test for now, just to get the regression tests cleaner

[00:10] <TimToady> in any case, those tests don't seem to be testing what we want to test at the moment

[00:11] *** vendethiel left
[00:12] *** _nadim left
[00:14] <dalek> doc: 9edcf11 | skids++ | doc/Language/control.pod:

[00:14] <dalek> doc: Document return value of loop statement

[00:14] <dalek> doc: review: https://github.com/perl6/doc/commit/9edcf116a6

[00:15] <awwaiid> m: say (:x, :y, :z)

[00:15] <camelia> rakudo-moar e360bd: OUTPUT«(x => True y => True z => True)␤»

[00:15] <awwaiid> what does space separating them even mean?

[00:17] <TimToady> hmm, no, just commenting the tests moves the failure to a different test, huh

[00:18] <dalek> doc: 6e322dc | skids++ | doc/Language/control.pod:

[00:18] <dalek> doc: Document return value of while/repeat loops.

[00:18] <dalek> doc: review: https://github.com/perl6/doc/commit/6e322dc052

[00:19] *** BenGoldberg_ joined
[00:19] *** rurban1 joined
[00:21] *** Ben_Goldberg left
[00:22] *** rurban1 left
[00:22] <Skarsnik> hm, does we have access to internal stuff with nqp (like memory address of object?)

[00:22] *** rurban left
[00:22] *** BenGoldberg joined
[00:23] *** BenGoldberg_ left
[00:24] <TimToady> sure, but you can't depend on the address staying the same

[00:24] <skids> Skarsnik: objects do not necessarily have a memory address, they can be relocated by the VM.

[00:25] <Skarsnik> It's more the other way around. I was thinking on how to create Blob with NC. like maybe set the memory address and let the user set the size?

[00:25] <skids> Skarsnik: specific stuff like handles from C libraries might be accessiblt through nativecast-ish things.

[00:26] <skids> I did something like that in Sum for one of the hash libs.

[00:27] <Skarsnik> It's not really what I want. I want to return Blob (like in DBIIsh) to the user when dealing with binary data

[00:28] <skids> Right.

[00:28] <Skarsnik> I could probably return a CArray[int8] but it's not nice x)

[00:30] <skids> Yeah looking at my code, I used a CArray and then copied t into a blob for the user.

[00:30] <RabidGravy> Bah

[00:30] *** jcrespo left
[00:30] <Skarsnik> actually depending on when mysql and other free the memory returned it might be the solution

[00:31] <skids> https://github.com/skids/perl6sum/blob/master/lib/Sum/libmhash.pm6#L254

[00:31] <RabidGravy> Merry Xmas, I'm going to bed. Too beered up to fix these last two modules

[00:32] *** llfourn joined
[00:32] <diakopter> RabidGravy++ # 'nite

[00:32] <Skarsnik> Goog night then

[00:32] <Skarsnik> and me too ^^

[00:32] <ZoffixWin> night

[00:33] * Skarsnik hope tomorrow something will work x)

[00:33] *** Skarsnik left
[00:35] <skids> Hrm darn, my old trick for testing code in pod synopsis got broken.

[00:36] *** RabidGravy left
[00:37] *** llfourn left
[00:39] <BooK> merry christmas #perl6

[00:39] <BooK> not sure if I'm early or late

[00:43] <leont> Late for the solstice, early for the full moon ;-)

[00:43] *** hlsg joined
[00:48] *** virtualsue left
[00:48] *** lucasb left
[00:50] <leont> Ouch, the Dutch wikipedia page on Perl 6 is quite outdated, it mentions parrot as "an important part of the Perl 6 platform" (it also mentions Pugs as a current thing)

[00:50] *** hima joined
[00:50] *** hima left
[00:53] <AlexDaniel> leont: I see no pages in other languages though

[00:53] <AlexDaniel> leont: here, I mean: https://en.wikipedia.org/wiki/Perl_6

[00:53] <diakopter> leont: it's had only 1.5 views/day the past 90 days: http://stats.grok.se/nl/201512/Perl_6

[00:53] <AlexDaniel> leont: “Languages” list is empty

[00:53] <diakopter> er I mean http://stats.grok.se/nl/latest90/Perl_6

[00:54] <leont> Well, given the upcoming release, it may suddenly be a lot more pretty soon

[00:56] <skids> "NativeCall: Consider adding the api version of the library you want to use" any way  to silence that if you detect lib version at runtime?

[00:56] <AlexDaniel> leont: looking at Perl 6 page in other languages I see that most of them are outdated

[00:57] <AlexDaniel> leont: honestly the amount of languages out there makes me sad :)

[00:58] <leont> Spanish looks not that bad, and French looks definitely better than Dutch. Both are at least aware of Rakudo

[00:59] <thomax> i miss perl 6 on https://wiki.theory.org/YourLanguageSucks

[00:59] <diakopter> oh noo

[01:01] <quux> is this the new c2 wiki?

[01:01] <leont> Norwegian is rather short, Finish and Czech do look like they need an update too

[01:05] <thomax> the german perl 6 is embedded as a section in the perl page on the german wikipedia

[01:07] <Theophane> hahaha

[01:07] <Theophane> Erlang isn't in YourLanguageSucks

[01:07] <Theophane> \o/

[01:08] *** vendethiel- left
[01:10] *** orange_ joined
[01:12] *** yeahnoob joined
[01:12] <RandalSchwartz> kr24 in trouble?

[01:12] <RandalSchwartz> getting DMA errors on my virtual disks

[01:13] <RandalSchwartz> that's either noisy neighbor or RAID rebuild.

[01:13] <RandalSchwartz> Ooops... wrong channel

[01:15] *** Actualeyes joined
[01:17] *** joydon left
[01:28] <ZoffixWin> gfldex++ # writing docs

[01:29] *** seksi joined
[01:30] <seksi> what's the news?

[01:30] <ZoffixWin> seksi, we're about to release the language :)

[01:30] <seksi> good, good

[01:30] *** lustlife joined
[01:30] <ZoffixWin> yeah, pretty awesome

[01:31] *** AndyDee joined
[01:31] <seksi> I retweeted Matz, if that helps

[01:31] <ZoffixWin> No idea what 'Matz' is.. but if it's good... thanks :P

[01:31] <seksi> but is there something to download?

[01:32] <seksi> that Ruby guy

[01:32] <ZoffixWin> seksi, there's the Rakudo compiler that implements the Perl 6 language we're about to release. You could download that. It's pretty much what'd you get when we do the actual release, plus or minus a couple of bugs: http://rakudo.org/how-to-get-rakudo/

[01:32] *** tmw1 left
[01:33] <seksi> Cool, will do!

[01:33] *** llfourn joined
[01:33] <ZoffixWin> (note: the premade packages are likely currently outdated due to super-rapid fixes and additions in the last couple of weeks; you should build from source)

[01:34] *** thomax_ joined
[01:34] * ZoffixWin resumes drinking and playing Warframe

[01:34] *** RandalSchwartz left
[01:35] <seksi> okay, I am going to look into that and keep watching...

[01:35] * seksi goes back to whipping votes in the balls contest

[01:35] *** thomax left
[01:35] *** thomax_ is now known as thomax

[01:37] *** llfourn left
[01:38] *** rickbike left
[01:41] *** rickbike joined
[01:44] *** zengargo1le joined
[01:44] *** zengargoyle left
[01:49] *** orange_ left
[01:49] *** leont left
[01:49] *** mohae_ left
[01:50] *** seksi left
[01:52] <dalek> doc: 46dd698 | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod:

[01:52] <dalek> doc: doc Reduction Operators

[01:52] <dalek> doc: review: https://github.com/perl6/doc/commit/46dd6980aa

[01:52] <dalek> doc: 06b5c0c | (Wenzel P. P. Peppmeyer)++ | doc/Language/control.pod:

[01:52] <dalek> doc: Merge remote-tracking branch 'upstream/master'

[01:52] <dalek> doc: review: https://github.com/perl6/doc/commit/06b5c0cf6b

[01:52] <dalek> doc: 7da5ed5 | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod:

[01:52] <dalek> doc: Merge pull request #268 from gfldex/master

[01:52] <dalek> doc: 

[01:52] <dalek> doc: doc Reduction Operators

[01:52] <dalek> doc: review: https://github.com/perl6/doc/commit/7da5ed52dd

[01:54] *** yeahnoob left
[02:02] *** hallbjorn joined
[02:02] *** bpmedley_ joined
[02:08] *** yeahnoob joined
[02:10] *** FreezerburnV joined
[02:18] *** BenGoldberg left
[02:19] *** BenGoldberg joined
[02:22] *** zhi joined
[02:24] *** rickbike left
[02:25] *** FROGGS_ joined
[02:29] *** FROGGS left
[02:30] *** dmc joined
[02:34] *** llfourn joined
[02:35] <skids> m: role A { multi method a ($ where { $_.say; $_ ~~ /a/ } ) { "A".say }; multi method a ($ where { $_.say; $_ ~~ /b/ } ) { "B".say } }; class C does A { }; C.new.a("a");

[02:35] <camelia> rakudo-moar e360bd: OUTPUT«a␤a␤A␤»

[02:35] <skids> m: role A { multi method a ($ where { $_.say; $_ ~~ /a/ } ) { "A".say }; multi method a ($ where { $_.say; $_ ~~ /b/ } ) { "B".say } }; class C does A { }; C.new.a("b");

[02:35] <camelia> rakudo-moar e360bd: OUTPUT«b␤Cannot call a(C.new: "b"); none of these signatures match:␤    (C $: $ where { ... }, *%_)␤  in block <unit> at /tmp/xCHuJBsswV line 1␤␤»

[02:37] *** halto left
[02:37] *** gist_nb joined
[02:39] *** xpen joined
[02:39] *** llfourn left
[02:41] <skids> m: role A { multi method a ($ where { $_.say; $_ ~~ /a/ } ) { "A".say }; }; role B { multi method a ($ where { $_.say; $_ ~~ /b/ } ) { "B".say } }; class C does A does B { }; C.new.a("a");

[02:41] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/dMwEKoUikS␤Multi method 'a' with signature :(C $: $ where { ... }, *%_) must be resolved by class C because it exists in multiple roles (B, A)␤at /tmp/dMwEKoUikS:1␤»

[02:41] *** Mosai left
[02:41] <skids> star: role A { multi method a ($ where { $_.say; $_ ~~ /a/ } ) { "A".say }; }; role B { multi method a ($ where { $_.say; $_ ~~ /b/ } ) { "B".say } }; class C does A does B { }; C.new.a("a");

[02:41] <camelia> star-m 2015.09: OUTPUT«a␤a␤a␤A␤»

[02:42] <quux> perl6mas!

[02:43] <gfldex> quux: merry perl6max to you too

[02:43] <quux> :F

[02:43] <quux> :D

[02:47] *** rickbike joined
[02:48] <BenGoldberg> m: srand 1;(<a merry and We year new wish you chistmas, happy a>).pick(*).say;

[02:48] <camelia> rakudo-moar e360bd: OUTPUT«(We wish you a merry chistmas, and a happy new year)␤»

[02:48] *** skids left
[02:49] *** skids joined
[02:51] *** yqt left
[02:51] <BenGoldberg> star: role A { multi method a ($ where { "A/$_".say; $_ ~~ /a/ } ) { "A".say }; }; role B { multi method a ($ where { "B/$_".say; $_ ~~ /b/ } ) { "B".say } }; class C does A does B { }; C.new.a("a");

[02:51] <camelia> star-m 2015.09: OUTPUT«B/a␤A/a␤A/a␤A␤»

[02:53] <gfldex> m: multi infix:<[~~]> (@c, WhateverCode &test) is looser(&infix:<~~>) { gather for @c { take $_ if test($_) } }; my @l = 1,'a',2,'b'; say @l [~~] (* ~~ Str);

[02:53] <camelia> rakudo-moar e360bd: OUTPUT«WhateverCode.new␤»

[02:53] <a3r0> When does Perl6 get released? What time(UTC) exactly?

[02:53] <gfldex> is there any way to make that work with WhateverCode?

[02:53] <gfldex> a3r0: deadlines do not work

[02:55] <dalek> doc: 79f4639 | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod:

[02:55] <dalek> doc: user defined example is more better

[02:55] <dalek> doc: review: https://github.com/perl6/doc/commit/79f4639355

[02:55] <dalek> doc: e278984 | (Wenzel P. P. Peppmeyer)++ | /:

[02:55] <dalek> doc: Merge remote-tracking branch 'upstream/master'

[02:55] <dalek> doc: review: https://github.com/perl6/doc/commit/e278984dfa

[02:55] <dalek> doc: 6960caf | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod:

[02:55] <dalek> doc: Merge pull request #269 from gfldex/master

[02:55] <dalek> doc: 

[02:55] <dalek> doc: user defined example of reduction operator

[02:55] <dalek> doc: review: https://github.com/perl6/doc/commit/6960caf754

[02:55] <AlexDaniel> a3r0: what's your idea? Maybe there is a way to answer your question

[03:00] <ZoffixWin> a3r0, whenever it's ready. It's the holiday season; pretty silly to ask for the exact time of the release of a project made by volunteers :P

[03:01] <ZoffixWin> People have families and committments and all

[03:01] <AlexDaniel> and I'd also like to know the precision of “exactly”

[03:01] <AlexDaniel> hours? minutes? seconds? milliseconds?

[03:02] <ZoffixWin> Clearly it's number of oscilation of Cesium atoms.. and if we don't get it right.. the whole project is doomed XD

[03:03] <AlexDaniel> m: say now

[03:03] <camelia> rakudo-moar e360bd: OUTPUT«Instant:1451012617.630856␤»

[03:08] *** gist_nb left
[03:08] <AlexDaniel> I'd be interesting to see random people coming in and judging the language by their standards. That's going to be fun. Heh, luckily we have enough crazy unicode features to make the world go “what?” for the next couple of days until they start seeing any flaws :)

[03:10] <jdv79> .tell lizmat why did we not borrow p5's meta spec more?

[03:10] <yoleaux> jdv79: I'll pass your message to lizmat.

[03:12] *** quux left
[03:13] *** xinming_ left
[03:15] *** hallbjorn left
[03:15] *** xinming joined
[03:15] *** bpmedley_ left
[03:16] *** hallbjorn joined
[03:18] *** noganex joined
[03:22] *** noganex_ left
[03:26] *** hallbjorn left
[03:26] *** Ben_Goldberg joined
[03:26] *** zhi left
[03:27] <jdv79> so if i have a string like "JSON::Slow:auth<cpan:*>:ver(1..*)" how do i parse that?

[03:29] *** BenGoldberg left
[03:30] *** hallbjorn joined
[03:35] *** bpmedley_ joined
[03:35] *** hidden_perl_noob joined
[03:35] *** llfourn joined
[03:38] *** hidden_perl_noob left
[03:40] *** llfourn left
[03:45] *** dmc left
[03:52] *** atweiden left
[03:56] *** labster left
[04:03] *** labster joined
[04:06] <skids> jdv79: run perl6 --target=ast -e 'JSON::Slow:auth<cpan:*>:ver(1..*)'? :-)

[04:06] <flussence> src/Perl6/Grammar.nqp:2097 if you want to do it the hard way :)

[04:08] *** vendethiel joined
[04:09] *** kid51 left
[04:11] *** AndyDee left
[04:11] *** hallbjorn left
[04:14] *** cognominal joined
[04:14] *** bpmedley_ left
[04:29] *** labster left
[04:32] *** vendethiel left
[04:37] *** llfourn joined
[04:38] *** anshin joined
[04:38] *** hankache joined
[04:41] *** raiph joined
[04:41] *** llfourn left
[04:44] *** BenGoldberg_ joined
[04:46] *** Ben_Goldberg left
[04:50] <ugexe> star: my @a = 1,2,3,4,5,6; my $b = [1,2,3]; say @a[$b>>.item]

[04:50] <camelia> star-m 2015.09: OUTPUT«(2 3 4)␤»

[04:50] <ugexe> m: my @a = 1,2,3,4,5,6; my $b = [1,2,3]; say @a[$b>>.item]

[04:50] <camelia> rakudo-moar e360bd: OUTPUT«4␤»

[04:51] <ugexe> is the new behavior expected?

[04:53] *** pdcawley joined
[04:54] <skids> m: my $b = [1,2,3]; ($b».item).perl.say;

[04:54] <camelia> rakudo-moar e360bd: OUTPUT«$[1, 2, 3]␤»

[04:54] *** pdcawley left
[04:54] <skids> star: my $b = [1,2,3]; ($b».item).perl.say;

[04:54] <camelia> star-m 2015.09: OUTPUT«[1, 2, 3]␤»

[04:56] <skids> m: (?«[1,2,3]).perl.say

[04:56] <camelia> rakudo-moar e360bd: OUTPUT«[Bool::True, Bool::True, Bool::True]␤»

[04:56] <skids> star: (?«[1,2,3]).perl.say

[04:56] <camelia> star-m 2015.09: OUTPUT«[Bool::True, Bool::True, Bool::True]␤»

[04:56] *** sgt_baker joined
[04:56] <AlexDaniel> m: my @a = 1..6; my $b = [1,2,3]; say @a[$b[*]]

[04:56] <camelia> rakudo-moar e360bd: OUTPUT«(2 3 4)␤»

[04:56] <AlexDaniel> m: my @a = 1..6; my $b = [1,2,3]; say @a[$b]

[04:56] <camelia> rakudo-moar e360bd: OUTPUT«4␤»

[04:57] *** xinming_ joined
[04:58] <AlexDaniel> m: my @a = 1..6; my $b = [1,2,3]; say @a[@$b]

[04:58] <camelia> rakudo-moar e360bd: OUTPUT«(2 3 4)␤»

[04:59] <AlexDaniel> ugexe: well, all I can say is that other alternatives are much more readable

[04:59] *** mohae joined
[04:59] <ugexe> sure. but is the change of behavior expected

[04:59] <AlexDaniel> star: my @a = 1..6; my $b = [1,2,3]; say @a[@$b]

[04:59] <camelia> star-m 2015.09: OUTPUT«(2 3 4)␤»

[05:00] <AlexDaniel> star: my @a = 1..6; my $b = [1,2,3]; say @a[$b[*]]

[05:00] <camelia> star-m 2015.09: OUTPUT«(2 3 4)␤»

[05:00] <AlexDaniel> star: my @a = 1..6; my $b = [1,2,3]; say @a[$b]

[05:00] <camelia> star-m 2015.09: OUTPUT«4␤»

[05:00] <AlexDaniel> hm

[05:01] *** xinming left
[05:07] <thomax> the channel star is a bit old, isn't it?

[05:08] <ugexe> yes, thats why its being used to demonstrate old behavior

[05:08] <thomax> ok

[05:09] <flussence> m: my @a = 1,2,3,4,5,6; my $b = [1,2,3]; say @a[$b.flat]

[05:09] <camelia> rakudo-moar e360bd: OUTPUT«(2 3 4)␤»

[05:10] <flussence> glr happened since then

[05:10] <thomax> glr?

[05:11] <ugexe> @a[$b>>.item] worked after glr. it worked last month even

[05:11] <thomax> what is glr?

[05:11] <AlexDaniel> m: my @a = 1,2,3,4,5,6; my $b = [1,2,3]; say @a[|$b]

[05:11] <camelia> rakudo-moar e360bd: OUTPUT«(2 3 4)␤»

[05:11] <AlexDaniel> thomax: Great List Refactor

[05:12] <skids> star: (1,).perl.say # I think star is post-glr

[05:12] <camelia> star-m 2015.09: OUTPUT«(1,)␤»

[05:12] <thomax> oha

[05:12] <flussence> https://perl6advent.wordpress.com/2015/12/14/day-15-2015-the-year-of-the-great-list-refactor

[05:12] <AlexDaniel> 2015.09 is post-glr? I doubt it

[05:13] <skids> star: my @d = 1,2,3; (|@d).perl.say

[05:13] <camelia> star-m 2015.09: OUTPUT«(1, 2, 3)␤»

[05:13] <skids> Pre GLR then

[05:13] <skids> But it is surprising that ». is itemized and ?« not

[05:14] <flussence> yeah, I thought » sorta-flattened too

[05:14] <ugexe> a module i have broke within the last month due to that change

[05:14] <flussence> maybe adding shaped arrays changed how it behaves in this one case

[05:15] <thomax> oha

[05:15] <ugexe> im more just pointing it out in case it should actually still work

[05:15] <skids> Oh duh

[05:16] <AlexDaniel> hmm looking at the dates, it seems like 2015.09 should be post-GLR

[05:16] <skids> m: $b = [1,2,3]; $b».say;

[05:16] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/j28g9to12U␤Variable '$b' is not declared␤at /tmp/j28g9to12U:1␤------> 3<BOL>7⏏5$b = [1,2,3]; $b».say;␤»

[05:16] <AlexDaniel> my

[05:16] <flussence> yeah, changing my guess to NSA now that I remembered it :)

[05:16] <skids> m: my $b = [1,2,3]; $b».say;

[05:16] <camelia> rakudo-moar e360bd: OUTPUT«1␤2␤3␤»

[05:16] <skids> m: my @b = 1,2,3; @b».say;

[05:16] <camelia> rakudo-moar e360bd: OUTPUT«1␤2␤3␤»

[05:17] <skids> Hmm.

[05:18] <skids> m: my $b = [1,2,3]; $b».perl.say

[05:18] <camelia> rakudo-moar e360bd: OUTPUT«[1 2 3]␤»

[05:25] <thomax> m: my $h.{k} = 1; # the use of quotes for hashes is mandatory (if key isn't a var) ?

[05:25] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/I0UBOVj_SK␤Undeclared routine:␤    k used at line 1␤␤»

[05:26] <thomax> thats not sooo good.

[05:26] <skids> thomax: use angle quotes for barword strings

[05:27] <skids> m: m: my $h.<k> = 1; $h.perl.say;

[05:27] <camelia> rakudo-moar e360bd: OUTPUT«${:k(1)}␤»

[05:27] <thomax> quotes are quotes.

[05:27] <thomax> aah, ok

[05:27] <thomax> angle brackets.

[05:27] *** AlexDaniel left
[05:28] <skids> So it would make sense if $b did not get iterated by ».  But that does not match with $b».say iterating.

[05:29] <skids> m: my \b = [1,2,3]; (b».item).perl.say

[05:29] <camelia> rakudo-moar e360bd: OUTPUT«[1, 2, 3]␤»

[05:30] *** darutoko joined
[05:31] *** AlexDaniel joined
[05:32] <thomax> is there a 'pretty' dd with vertical output and horizontal  indents?

[05:32] *** xinming joined
[05:33] *** BenGoldberg_ left
[05:35] *** xinming_ left
[05:38] *** llfourn joined
[05:38] *** krshn joined
[05:40] *** krshn_ joined
[05:40] *** krshn_ left
[05:42] *** krshn left
[05:43] *** llfourn left
[05:49] <TimToady> I think the point is that hypers are supposed to keep the structure of the thing hypered, so it keeps the $

[05:49] <hankache> hello #perl6

[05:51] <hankache> m: say(0,3 ... 10);

[05:51] <camelia> rakudo-moar e360bd: OUTPUT«(0 3 6 9)␤»

[05:52] <hankache> m: say(0, { $_ + 3 } ... 10);

[05:52] <camelia> rakudo-moar e360bd: OUTPUT«(0 3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 99 102 105 108 111 114 117 120 123 126 129 132 135 138 141 144 147 150 153 156 159 162 165 168 171 174 177 180 183 186 189 192 195 198 201 204 207 210 213 216 2…»

[05:52] <hankache> TimToady we had a discussion yesterday about the above 2 lines ^^

[05:53] <hankache> what's your opinion?

[05:53] <TimToady> it's quite intentional and it's like not changing

[05:53] <TimToady> we went through lots of trials before settling on that

[05:53] <TimToady> *likely

[05:54] <hankache> oki dokey

[05:54] <TimToady> if we deduce the function ourselves, we can know whether it's monotonic

[05:54] *** bgoggin joined
[05:54] <TimToady> if don't, we can't, in general

[05:55] <hankache> TimToady thanks

[05:55] <hankache> just wanted to make sure it is not a bug that will be fixed later

[05:56] *** xinming_ joined
[05:57] <TimToady> for instance, the http://rosettacode.org/wiki/Stern-Brocot_sequence#Perl_6 entry shows a sequence that is not monotonic

[05:58] *** bgoggin left
[05:59] <hankache> yes

[05:59] <thomax> TimToady: but is there another way to limit the calculations?

[05:59] *** xinming left
[06:00] <TimToady> don't ask for all the values?  It's just a lazy list

[06:00] <TimToady> m: say (1,3...*)[^10]

[06:00] <camelia> rakudo-moar e360bd: OUTPUT«(1 3 5 7 9 11 13 15 17 19)␤»

[06:01] <TimToady> and if you know it's monotonic, you can supply your own inequality

[06:01] <TimToady> m: say (1,3...^ * > 100)

[06:01] <camelia> rakudo-moar e360bd: OUTPUT«(1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99)␤»

[06:01] <hankache> m: say (1,3...*)[10]

[06:01] <camelia> rakudo-moar e360bd: OUTPUT«21␤»

[06:01] <hankache> m: say (1,3...*)[9]

[06:01] <camelia> rakudo-moar e360bd: OUTPUT«19␤»

[06:02] <TimToady> ^10 is short for 0..^10

[06:02] <hankache> TimToady++

[06:05] <AlexDaniel> m: say 1,3 ...^ { 0.95 < rand }

[06:05] <camelia> rakudo-moar e360bd: OUTPUT«(1 3 5 7 9 11)␤»

[06:05] <AlexDaniel> m: say 1,3 ...^ { 0.95 < rand }

[06:05] <camelia> rakudo-moar e360bd: OUTPUT«(1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43)␤»

[06:05] <AlexDaniel> m: say 1,3 ...^ { 0.95 < rand }

[06:05] <camelia> rakudo-moar e360bd: OUTPUT«(1 3 5 7 9 11 13 15 17 19)␤»

[06:05] <AlexDaniel> no need to use ^ though

[06:07] <hankache> AlexDaniel you would need ^ for exclusion

[06:07] <hankache> m: say(0, { $_ + 3 } ...^ * > 10);

[06:07] <camelia> rakudo-moar e360bd: OUTPUT«(0 3 6 9)␤»

[06:07] <hankache> m: say(0, { $_ + 3 } ... * > 10);

[06:07] <camelia> rakudo-moar e360bd: OUTPUT«(0 3 6 9 12)␤»

[06:07] <hankache> see ^^

[06:07] <AlexDaniel> hankache: sure, but not that I need that with rand

[06:08] <hankache> AlexDaniel well yeah with rand it's useless 

[06:10] <hankache> i need some kind of definition for routine/subroutine/function/method

[06:11] <thomax> i guess the book publishers are happy with perl 6 official release. so many little, tiny operator differences to explain.

[06:12] *** kaare_ joined
[06:12] *** jasanj joined
[06:17] *** stanrifkin_ joined
[06:18] *** FreezerburnV left
[06:22] <thomax> and back to dd again: not only the 'pretty' output but also it should replace storables. but how? is it efficient to read/write dd output to/from a file? in opposite to a 'pretty' output i miss a binary, dense, output. am i'm completely wrong with that?

[06:24] <hankache> thomax show us what are you trying to do

[06:25] <hankache> maybe we can help

[06:25] *** totimkopf left
[06:25] *** hankache left
[06:26] *** hankache joined
[06:28] <thomax> hankache: actually i just settle my mind on concepts. what is possible in p5 and how to achieve the same in p6. like the dd output in p6 is on one line and didn't support human readers very well. but when i like to use it to (re)store huge data structures, it will not be efficient enough.

[06:28] <hankache> thomax have you tried Data::Dump

[06:28] <hankache> ?

[06:29] <thomax> in p5, yes. and also storable

[06:29] <hankache> https://github.com/tony-o/perl6-data-dump

[06:30] <hankache> you can install it using panda

[06:30] <thomax> oh! there is a data::dump module! i've skipped that because i saw the many dd usage on here.

[06:31] <hankache> thomax for one liners we use dd

[06:32] <thomax> hankache: actually i don't have rakudo installed localy, you guys and camelia help me a lot to understand some concepts in one-liners.

[06:33] <hankache> thomax i am glad we're being helpful 

[06:34] <hankache> if you can install rakudo locally you'll have more fun ;)

[06:35] <thomax> sure you are. i appreciate that

[06:36] <hankache> :)

[06:36] <thomax> well, i wait just 1 or 2 month to get my hands on it. first i need to try to catch some of the new ideas. just by hang out here or read blogs/tutorials

[06:37] <hankache> have you read perl6intro.com ?

[06:38] <thomax> yes, and also operators, diffs betwen p5 and p6 and some other parts of the doc.

[06:39] <hankache> excellent

[06:39] *** llfourn joined
[06:39] *** stanrifkin_ left
[06:41] <thomax> yes, and i like to read docs when they are enriched with pet examples. other examples are welcome to.

[06:41] <hankache> pet examples?

[06:41] <thomax> cats and dogs with tails and sounds..

[06:43] <hankache> oh lol

[06:44] *** llfourn left
[06:45] <thomax> ok, time to make some music

[06:45] *** sgt_baker left
[06:46] <hankache> see you later thomax

[06:49] *** pdcawley joined
[06:49] <pdcawley> Anyone got any good examples of writing ones own WHICH? Trying to make a value object that'll behave nicely in a set.

[06:50] <pdcawley> Merry christmas all, btw.

[06:51] *** stanrifkin_ joined
[06:53] <bartolin_> .tell TimToady there is RT #126823 for the failing test in adverbs.t

[06:53] <yoleaux> bartolin_: I'll pass your message to TimToady.

[06:53] <bartolin_> also: merry christmas, #perl6

[06:54] *** molaf joined
[06:55] <hankache> ho ho ho Merry Christmas

[06:56] *** labster joined
[06:57] <skids> m: "HO!" xx 3

[06:57] <camelia> rakudo-moar e360bd: ( no output )

[06:57] <skids> m: say "HO!" xx 3

[06:57] <camelia> rakudo-moar e360bd: OUTPUT«(HO! HO! HO!)␤»

[06:57] <hankache> m: say "HO" x 3;

[06:57] <camelia> rakudo-moar e360bd: OUTPUT«HOHOHO␤»

[06:58] <hankache> didn't know there was also xx

[06:58] <hankache> skids++

[06:59] <pdcawley> m: class Value { has $.thing }; say Value.new(thing:<a>) === Value.new(thing:<a>)

[06:59] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/_T3ehkEsyT␤Undeclared routine:␤    thing:<a> used at line 1␤␤»

[06:59] <pdcawley> m: class Value { has $.thing }; say Value.new(thing => 'a') === Value.new(thing => 'b')

[06:59] <camelia> rakudo-moar e360bd: OUTPUT«False␤»

[06:59] <pdcawley> I shall get :thing<a> internalized eventually.

[07:00] *** zhi joined
[07:00] <pdcawley> m: class Value { has $.thing; method WHICH { $.thing } }; say Value.new(thing => 'a') === Value.new(thing => 'b')

[07:00] <camelia> rakudo-moar e360bd: OUTPUT«False␤»

[07:00] <skids> pdcawley: value objects are currently a bit on the hard side to do.  Unless you can define it as a subset.

[07:00] <AlexDaniel> m: say (1..5).reverse.map(‘H’ ~ ‘O’ x * ~ ‘!’)

[07:00] <camelia> rakudo-moar e360bd: OUTPUT«(HOOOOO! HOOOO! HOOO! HOO! HO!)␤»

[07:00] <pdcawley> 'define it as a subset'?

[07:01] <pdcawley> m: {:thing<a>} === {:thing<b>}

[07:01] <camelia> rakudo-moar e360bd: OUTPUT«WARNINGS for /tmp/4fDYGRYZ8d:␤Useless use of "===" in expression "{:thing<a>} === {:thing<b>}" in sink context (line 1)␤»

[07:01] *** hankache left
[07:01] <pdcawley> m: say {:thing<a>} === {:thing<b>}

[07:01] <camelia> rakudo-moar e360bd: OUTPUT«False␤»

[07:02] <pdcawley> Is there a way of specifying the equality test for a Setty thing?

[07:02] <skids> e.g. just a restirctions on an existing value type.  "subset Foo of Int where * > 3" 

[07:02] *** raiph left
[07:03] *** labster left
[07:03] <skids> Eventually the MOP will probably catch up with value types.

[07:04] <pdcawley> skids: So, instead of using an object, use a tuple?

[07:04] <pdcawley> m: say [1,2] == [1,2]

[07:04] <camelia> rakudo-moar e360bd: OUTPUT«True␤»

[07:06] <pdcawley> skids: Can I declare a type alias for restricted length array?

[07:06] <skids> m: class A is Int { }; say A.new(3) == A.new(3);

[07:06] <camelia> rakudo-moar e360bd: OUTPUT«True␤»

[07:06] <pdcawley> skids: So... if I'm wanting an array of four values, each value can be an array of four values or undefined...

[07:07] <pdcawley> m: class A is Array where *.elems == 4; say A.new()

[07:07] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/SplHHToxYR␤Unable to parse class definition␤at /tmp/SplHHToxYR:1␤------> 3class A is Array7⏏5 where *.elems == 4; say A.new()␤»

[07:08] <pdcawley> m: class A is Array where *.elems == 4; say A.new(1,2,3,4)

[07:08] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/iYbjZhuEyO␤Unable to parse class definition␤at /tmp/iYbjZhuEyO:1␤------> 3class A is Array7⏏5 where *.elems == 4; say A.new(1,2,3,4)␤»

[07:08] <pdcawley> m: class A is Array where *.elems == 4 {}; say A.new(1,2,3,4)

[07:08] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/KxmmJ7_Ljm␤Unable to parse class definition␤at /tmp/KxmmJ7_Ljm:1␤------> 3class A is Array7⏏5 where *.elems == 4 {}; say A.new(1,2,3,␤»

[07:08] * pdcawley stops thrashing and returns to the docs :)

[07:10] <AlexDaniel> m: say (5...1).map(‘H’ ~ ‘O’ x * ~ ‘!’) # Oh! that's a bit shorter

[07:10] <camelia> rakudo-moar e360bd: OUTPUT«(HOOOOO! HOOOO! HOOO! HOO! HO!)␤»

[07:12] <b2gills> m: subset A of Array where *.elems == 4; say [1,2,3,4] ~~ A

[07:12] <b2gills> m: subset A of Array where :($,$,$,$); say [1,2,3,4] ~~ A

[07:12] <camelia> rakudo-moar e360bd: OUTPUT«True␤»

[07:13] <timotimo> Failed to create directory '/' with mode '0o777': Failed to mkdir: 2

[07:13] <timotimo> does that seem like an improvement?

[07:14] <pdcawley> m: subset A of Array where :(A,A,A,A); say [A,A,A,A] ~~ A

[07:14] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/3iVlImxbTL␤Invalid typename 'A' in parameter declaration.␤at /tmp/3iVlImxbTL:1␤------> 3subset A of Array where :(A7⏏5,A,A,A); say [A,A,A,A] ~~ A␤»

[07:14] <pdcawley> Dang!

[07:14] <AlexDaniel> m: subset A of Array[4]

[07:14] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/qenYWtMaDH␤An exception occurred while parameterizing Array␤at /tmp/qenYWtMaDH:1␤Exception details:␤  5===SORRY!5=== Error while compiling ␤  Parameter 't' requires a type object of type Int, but …»

[07:15] <AlexDaniel> ===SORRY!=== inside ===SORRY!===! We have to go deeper!

[07:16] *** xpen left
[07:19] <AlexDaniel> hehe

[07:19] <AlexDaniel> m: subset A of Any(); my A $x = Any

[07:19] <camelia> rakudo-moar e360bd: OUTPUT«Type check failed in assignment to $x; expected A but got Any␤  in block <unit> at /tmp/ENmpWJ7sqW line 1␤␤»

[07:19] <AlexDaniel> m: subset A of Any(); my A $x = Any()

[07:19] <camelia> rakudo-moar e360bd: ( no output )

[07:19] <AlexDaniel> m: say Any().WHAT

[07:19] <camelia> rakudo-moar e360bd: OUTPUT«Method 'shortname' not found for invocant of class 'Perl6::Metamodel::CoercionHOW'␤  in block <unit> at /tmp/RluhwOwACR line 1␤␤»

[07:19] <skids> m: my $a = 1 => 2 => 3 => 4; my $b = 1 => 2 => 3 => 4; say $a === $b; $a.perl.say # I feel dirty now

[07:19] <camelia> rakudo-moar e360bd: OUTPUT«True␤1 => 2 => 3 => 4␤»

[07:21] <AlexDaniel> skids: there's an easier way to write this

[07:21] <AlexDaniel> m: my $a = [=>] 1..4; say $a.perl

[07:21] <camelia> rakudo-moar e360bd: OUTPUT«1 => 2 => 3 => 4␤»

[07:21] <timotimo> anyway, i'm running a spec test over my mkdir change

[07:22] *** labster joined
[07:22] <AlexDaniel> skids: I'm not sure why would you do that though :D

[07:23] *** xpen joined
[07:26] *** xinming joined
[07:29] *** xinming_ left
[07:31] <timotimo> moar now has a little sanity check in its mkdir_p implementation that prevents endless recursion when trying to mkdir /

[07:33] *** labster left
[07:34] <skids> timotimo++

[07:34] <ChoHag> *Does* / always exist?

[07:34] <ChoHag> What about win32?

[07:35] <timotimo> psst

[07:35] <timotimo> i don't have a win32 to test it on

[07:35] <timotimo> are you interested in trying it out for me?

[07:35] <ChoHag> Also, the fact that making directories is complicated in 2015 is depressilarious.

[07:35] <skids> I think there / always exists but refers to the current drive.

[07:35] <ChoHag> I don't have win32 either.

[07:35] <skids> (and is \ :-)

[07:35] <timotimo> skids: good thing i'm not checking for "/", but for ""

[07:36] <ChoHag> Well I do, somewhere, but it's mostly used just to run enterprise apps and I haven't needed it for a few $orks now.

[07:36] <ChoHag> I don't even know if it still works...

[07:40] *** llfourn joined
[07:42] *** thomax left
[07:45] *** llfourn left
[07:49] <awwaiid> I got my REPL to fake dynamically create vars! Uses some crazy growing nested closures, https://github.com/awwaiid/p6-lrep/blob/master/lib/LREP.pm6#L32

[07:50] <awwaiid> (an idea I saw in some perl5 REPLs, iirc)

[07:50] *** rindolf joined
[07:51] *** pdcawley left
[07:51] <rindolf> Hi all.

[07:52] *** hankache joined
[07:54] *** _nadim joined
[07:55] <ChoHag> I have a magic string ("..." but Magic::Role) in order to add a few methods to it and make it subscriptable which all works out well enough except that now $magic ~~ /regex/ doesn't work, and even "$magic" ~~ /regex/ doesn't work, but "FUCK$magic" ~~ /FUCKregex/ does.

[07:55] *** xpen left
[07:55] <ChoHag> How can I make sure that the smartmatch with a regex on the RHS matches against the plain old string?

[07:58] *** Bleary joined
[08:00] *** mohae left
[08:00] <skids> m: say "foo" does role { method foo { 42.say } } ~~ /foo/

[08:00] <camelia> rakudo-moar e360bd: OUTPUT«｢foo｣␤»

[08:01] *** CIAvash joined
[08:01] *** RabidGravy joined
[08:01] <AlexDaniel> ChoHag: what about ~$magic ?

[08:01] <AlexDaniel> ChoHag: and also ‘’ ~ $magic

[08:02] <ChoHag> I tried the former.

[08:03] <ChoHag> ""~$magic works, ~$magic doesn't.

[08:03] <skids> Wel, I can't get it to fail but -- you sure you want "but" and not "does"?

[08:04] <ChoHag> I'm not entirely sure what the difference is. In some places I have but and in others does.

[08:04] <AlexDaniel> ChoHag: $magic.Str ?

[08:05] *** Bleary left
[08:05] <ChoHag> Seems as though I've done does in "$foo does Magic" to change $foo, but but in "'foo' does Magic" when there was no variable.

[08:05] <ChoHag> I should probably clear that up.

[08:05] <skids> ChoHag: I woud tink but would make the object produce a punned role when asked to become that role.  "does" actually mixes in the role.

[08:05] <skids> Unless but has been special-cased for roles.

[08:06] <skids> m: say (1 but "foo")

[08:06] <camelia> rakudo-moar e360bd: OUTPUT«foo␤»

[08:06] <ChoHag> Where would I be able to read about their definitions?

[08:09] <RabidGravy> Yeah, "but" with a role will create a copy of the applicant and apply a role to it, whereas does applies the role directly

[08:09] <skids> Ah, OK, then but would be fine.

[08:10] <skids> S14 is where they are describes

[08:10] <skids> *d

[08:10] *** xpen joined
[08:10] <RabidGravy> m: role Foo { method foor() { say "foo" }};  my $a = 1 but Foo;   say $a.foo;

[08:10] <camelia> rakudo-moar e360bd: OUTPUT«Method 'foo' not found for invocant of class 'Int+{Foo}'␤  in block <unit> at /tmp/PYgZjxfsg3 line 1␤␤»

[08:10] <RabidGravy> m: role Foo { method foor() { say "foo" }};  my $a = 1 but Foo;   say $a.foor;

[08:10] <camelia> rakudo-moar e360bd: OUTPUT«foo␤True␤»

[08:11] *** krshn joined
[08:12] <ChoHag> RabidGravy: So there's no practical difference between '$foo = "bar" but Role' and '$foo = "bar" does Role'?

[08:13] <skids> You can use "but" on 1.

[08:13] <skids> Though, it doesn't seem to complain when you use "does" hmm.

[08:14] <ChoHag> Hah! S14 is marked Draft...

[08:14] <RabidGravy> m: role Foo { method foor() { say "foo" }};  my $a = 1 does Foo;   say $a.foor;

[08:14] <camelia> rakudo-moar e360bd: OUTPUT«foo␤True␤»

[08:14] <RabidGravy> m: role Foo { method foor() { say "foo" }};  my $a = 1 does Foo;   say $a;

[08:14] <camelia> rakudo-moar e360bd: OUTPUT«1␤»

[08:14] <Hotkeys> Has 6.c released yet?

[08:14] <RabidGravy> m: role Foo { method foor() { say "foo" }};  my $a = 1 does Foo;   say $a.WHAT;

[08:14] <camelia> rakudo-moar e360bd: OUTPUT«(Int+{Foo})␤»

[08:14] <Hotkeys> I haven't been keeping up this week

[08:14] <skids> Hotkeys: the compiler release log is https://gist.github.com/coke/dc55e617e76a6f7082f9

[08:15] <skids> Time for me to hit the sack.

[08:15] <Hotkeys> Exciting

[08:16] <RabidGravy> if the RHS was a variable,  with does the RHS would have the role applied, with but it wouldn't

[08:18] <RabidGravy> e.g.  $a = $b does Foo;  is like $b does Foo; $a = $b; whereas $a = $b but Foo; is like $a = $b; $a does Foo   

[08:18] <RabidGravy> in a sort of vague way

[08:20] *** skids left
[08:23] *** saillinux joined
[08:25] *** pierre-vigier left
[08:27] *** vv3 joined
[08:27] *** vv3 left
[08:28] *** vv3 joined
[08:28] *** vv3 left
[08:29] *** vv3 joined
[08:29] *** vv3 left
[08:30] *** vv3 joined
[08:34] *** saillinux left
[08:35] *** vv3 left
[08:36] *** vv3 joined
[08:36] *** vv3 left
[08:36] *** vv3 joined
[08:36] *** vv3 left
[08:37] *** vv3 joined
[08:37] *** vv3 left
[08:38] *** vv3 joined
[08:38] *** xfix joined
[08:39] *** freeze left
[08:40] *** vv3 left
[08:41] *** freeze joined
[08:42] *** llfourn joined
[08:47] *** llfourn left
[08:47] *** stanrifkin_ left
[08:47] *** xinming left
[08:49] *** xinming joined
[08:50] *** kjs_ joined
[08:51] *** domidumont joined
[08:52] *** st_iron joined
[08:52] <st_iron> hello

[08:52] *** espadrine joined
[08:53] <hankache> hello

[08:55] *** sela joined
[08:56] *** domidumont left
[08:56] *** domidumont joined
[08:58] *** daydaynight joined
[09:00] *** andreoss joined
[09:07] *** test joined
[09:08] *** test is now known as Guest7256

[09:10] *** vv3 joined
[09:10] *** vv3 left
[09:11] *** st_iron left
[09:11] *** vv3 joined
[09:11] *** vv3 left
[09:12] *** vv3 joined
[09:12] *** vv3 left
[09:12] <RabidGravy> erp

[09:12] *** vv3 joined
[09:12] *** vv3 left
[09:13] *** vv3 joined
[09:13] *** vv3 left
[09:14] *** uruwi joined
[09:14] *** vv3 joined
[09:14] *** vv3 left
[09:14] *** molaf left
[09:15] *** vv3 joined
[09:17] <uruwi> Hey, is there any reason why Channel.list couldn't be implemented by calling Channel.poll until the channel is empty?

[09:20] <hankache> a lambda is a block right? or do we have something special for it?

[09:20] *** vv3 left
[09:20] *** kjs_ left
[09:20] *** firstdayonthejob joined
[09:20] *** vv3 joined
[09:20] *** vv3 left
[09:21] <RabidGravy> well, it's any anonymous sub in a generaly sense, but a single arg pointy block is the nearest to what lambda means in e.g. python I think

[09:21] *** vv3 joined
[09:21] *** vv3 left
[09:22] *** vv3 joined
[09:22] *** vv3 left
[09:23] *** vv3 joined
[09:23] <hankache> hm! RabidGravy where can i find doc about it?

[09:23] <hankache> pointy block

[09:24] <andreoss> m: my &z = -> { "hi "}; z.WHAT.say

[09:24] <camelia> rakudo-moar e360bd: OUTPUT«(Str)␤»

[09:25] <andreoss> m: my &z = -> { "hi "}; &z.WHAT.say

[09:25] <camelia> rakudo-moar e360bd: OUTPUT«(Block)␤»

[09:27] <RabidGravy> http://doc.perl6.org/type/Block

[09:28] *** vv3 left
[09:29] *** vv3 joined
[09:29] *** vv3 left
[09:29] *** vv3 joined
[09:29] *** vv3 left
[09:30] <hankache> thanks

[09:30] *** vv3 joined
[09:30] *** vv3 left
[09:31] *** vv3 joined
[09:31] <andreoss> or p6doc Type::Block

[09:36] *** vv3 left
[09:36] *** CIAvash left
[09:37] *** vv3 joined
[09:37] *** vv3 left
[09:37] *** Joy left
[09:38] *** vv3 joined
[09:38] *** vv3 left
[09:38] *** pierre-vigier joined
[09:38] *** vv3 joined
[09:38] *** vv3 left
[09:39] *** vv3 joined
[09:40] <nine> .tell TimToady adverb.t is even stranger than just load: it fails when run with PERL6LIB=lib,. as the harness does butvworks when run without

[09:40] <yoleaux> nine: I'll pass your message to TimToady.

[09:42] <peteretep> I would like a cookbook on sneaking Perl 6 in to production

[09:42] <peteretep> I might write that this fewtive season

[09:42] *** Bleary joined
[09:42] <peteretep> Get it in to Jenkins / whatever build system

[09:42] <peteretep> Write a cron job in it

[09:43] *** llfourn joined
[09:43] *** kmnns joined
[09:43] <peteretep> Grease the groove a little

[09:44] *** kjs_ joined
[09:44] *** vv3 left
[09:45] *** vv3 joined
[09:45] *** vv3 left
[09:46] *** vv3 joined
[09:46] *** vv3 left
[09:47] *** vv3 joined
[09:47] *** vv3 left
[09:47] <ChoHag> Ah there it is. My magic role does Iterable as well as Positional and both together are interfering with ~~ somehow.

[09:47] <ChoHag> m: class I { method pull-one { IterationEnd } }; role Foo { also does Positional; also does Iterable; method iterator { I.new } }; say ("bar" but Foo) ~~ /a/;'

[09:47] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/0B6tUkixfs␤Unable to parse expression in single quotes; couldn't find final "'" ␤at /tmp/0B6tUkixfs:1␤------> 3 I.new } }; say ("bar" but Foo) ~~ /a/;'7⏏5<EOL>␤    expecting any of:␤        sing…»

[09:47] *** llfourn left
[09:47] <ChoHag> m: class I { method pull-one { IterationEnd } }; role Foo { also does Positional; also does Iterable; method iterator { I.new } }; say ("bar" but Foo) ~~ /a/;

[09:47] <camelia> rakudo-moar e360bd: OUTPUT«Nil␤»

[09:47] *** vv3 joined
[09:49] *** Bleary left
[09:49] <ChoHag> Lose either one of the alsos, or concatenate "", and the result is the same (and what I want):

[09:49] <ChoHag> m: class I { method pull-one { IterationEnd } }; role Foo { also does Positional; also does Iterable; method iterator { I.new } }; say ("" ~ ("bar" but Foo)) ~~ /a/;

[09:49] <camelia> rakudo-moar e360bd: OUTPUT«｢a｣␤»

[09:49] *** rurban joined
[09:49] <[Tux]> test             50000    23.555    23.442

[09:49] <[Tux]> test-t           50000    12.970    12.856

[09:49] <[Tux]> csv-parser       50000    50.512    50.399

[09:50] <ChoHag> I think I'm reading the smartmatch table in S03 wrong though, because my understanding of that is that ~~ing a Positional with a Regex should fail.

[09:52] *** vv3 left
[09:52] <ChoHag> So why does a role with does both Positional and Iterable ~~ing to Nil, and how do I stop it and make it act like a string again (short of removing the magic altogether)?

[09:53] <ChoHag> That sentence sucks, sorry.

[09:53] *** vv3 joined
[09:53] *** vv3 left
[09:54] *** Atomic_Dz4vo joined
[09:54] *** vv3 joined
[09:54] *** vv3 left
[09:54] *** yeahnoob left
[09:55] *** vv3 joined
[09:55] *** vv3 left
[09:56] *** vv3 joined
[09:56] *** kmnns left
[09:56] *** pierre-vigier left
[09:57] <andreoss> .seen masak

[09:57] <yoleaux> I saw masak 22 Dec 2015 23:21Z in #perl6: <masak> 'night, #perl6

[09:57] <FROGGS_> m: (:w :h<1>) # I might tackle that today

[09:57] <camelia> rakudo-moar e360bd: OUTPUT«===SORRY!===␤Unknown QAST node type NQPMu␤»

[09:58] *** FROGGS_ is now known as FROGGS

[09:58] *** Atomic_Dz4vo left
[09:59] *** pierre-vigier joined
[10:00] *** vv3 left
[10:02] *** espadrine left
[10:02] *** espadrine joined
[10:03] *** zhi left
[10:03] *** test joined
[10:03] *** test is now known as Guest59994

[10:03] *** Atomic_Dz4vo joined
[10:04] <Guest59994> test

[10:04] *** vv3 joined
[10:04] *** pierre-vigier left
[10:04] *** Atomic_Dz4vo left
[10:04] *** domidumont left
[10:05] <nine> Guest59994: one, two, three

[10:07] *** spider-mario joined
[10:09] *** vv3 left
[10:09] *** espadrine_ joined
[10:09] *** rurban1 joined
[10:09] *** vv3 joined
[10:09] *** vv3 left
[10:10] *** espadrine left
[10:10] *** vv3 joined
[10:10] *** vv3 left
[10:10] *** rurban left
[10:11] *** patrickz joined
[10:11] *** vv3 joined
[10:11] *** vv3 left
[10:12] *** vv3 joined
[10:12] *** Guest59994 left
[10:14] *** rurban joined
[10:15] *** rurban1 left
[10:17] *** vv3 left
[10:18] *** vv3 joined
[10:18] *** vv3 left
[10:18] *** vv3 joined
[10:18] *** vv3 left
[10:19] *** vv3 joined
[10:19] *** vv3 left
[10:20] *** bpmedley_ joined
[10:20] *** vv3 joined
[10:21] *** daydaynight left
[10:24] *** kjs_ left
[10:24] <_nadim> Good morning

[10:25] <hankache> morning _nadim

[10:25] <_nadim> :)

[10:25] *** vv3 left
[10:25] <_nadim> m: $s= 'a' ; say $s - 'a' ;

[10:25] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/4eJ9rKEUwq␤Variable '$s' is not declared␤at /tmp/4eJ9rKEUwq:1␤------> 3<BOL>7⏏5$s= 'a' ; say $s - 'a' ;␤»

[10:25] <_nadim> m: my $s= 'a' ; say $s - 'a' ;

[10:25] <camelia> rakudo-moar e360bd: OUTPUT«Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at /tmp/uWpRUOfacS line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/uWpRUOfacS line 1␤␤»

[10:26] <_nadim> ^^ how does one do string arithmetics?

[10:26] *** vv3 joined
[10:26] *** vv3 left
[10:27] *** vv3 joined
[10:27] *** vv3 left
[10:27] *** joydon joined
[10:27] *** vv3 joined
[10:27] *** vv3 left
[10:28] <hankache> m: say -'a';

[10:28] <camelia> rakudo-moar e360bd: OUTPUT«Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at /tmp/_ocmEDkzNz line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/_ocmEDkzNz line 1␤␤»

[10:28] *** vv3 joined
[10:28] <_nadim> I tried with .ords but I et an even weirder error

[10:29] <_nadim> m: my $s= 'a' ; say $s.ords - 'a'.ords ;

[10:29] <camelia> rakudo-moar e360bd: OUTPUT«0␤»

[10:29] <_nadim> Hu! obviously not

[10:29] *** cygx joined
[10:30] <hankache> say "a".ords

[10:30] <hankache> m: say "a".ords

[10:30] <camelia> rakudo-moar e360bd: OUTPUT«(97)␤»

[10:30] <cygx> _nadim: ords returns an array, which numifies to the number of elements

[10:30] <cygx> use singular .ord

[10:30] <hankache> say ("b".ord)-1

[10:30] <hankache> m: say ("b".ord)-1

[10:30] <camelia> rakudo-moar e360bd: OUTPUT«97␤»

[10:30] <hankache> wait!!

[10:30] <cygx> m: say chr "b".ord - 1

[10:30] <camelia> rakudo-moar e360bd: OUTPUT«a␤»

[10:31] <hankache> m: say "a".succ

[10:31] <camelia> rakudo-moar e360bd: OUTPUT«b␤»

[10:31] <hankache> see ^^

[10:31] <hankache> m: say "z".prev

[10:31] <camelia> rakudo-moar e360bd: OUTPUT«Method 'prev' not found for invocant of class 'Str'␤  in block <unit> at /tmp/DOzGiKuZ0n line 1␤␤»

[10:31] <hankache> m: say "z".prec

[10:31] <camelia> rakudo-moar e360bd: OUTPUT«Method 'prec' not found for invocant of class 'Str'␤  in block <unit> at /tmp/MeC5AuF0Du line 1␤␤»

[10:31] <hankache> what was it called

[10:32] *** llfourn joined
[10:32] <hankache> m: say "z".pred

[10:32] <camelia> rakudo-moar e360bd: OUTPUT«y␤»

[10:33] <hankache> voila

[10:33] *** vv3 left
[10:34] *** vv3 joined
[10:34] *** vv3 left
[10:35] *** vv3 joined
[10:35] *** vv3 left
[10:37] *** vv3 joined
[10:37] *** labster joined
[10:37] *** labster left
[10:37] *** manu__ joined
[10:37] <_nadim> "abc" ~~ s:g/ (<[ a..z ]>)/{<ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖᵠʳˢᵗᵘᵛʷˣʸᶻ>[$0.ord - 'a'.ord]}/

[10:38] <_nadim> m: "abc" ~~ s:g/ (<[ a..z ]>)/{<ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖᵠʳˢᵗᵘᵛʷˣʸᶻ>[$0.ord - 'a'.ord]}/

[10:38] <camelia> rakudo-moar e360bd: OUTPUT«Index out of range. Is: 1, should be in 0..0␤  in block <unit> at /tmp/yqc1udEuS_ line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/yqc1udEuS_ line 1␤␤»

[10:39] <_nadim> range 0..0?

[10:41] <_nadim> m: "97354043" ~ s:g/(\d)/{ <⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹>[~$0]}/

[10:41] <camelia> rakudo-moar e360bd: OUTPUT«WARNINGS for /tmp/tX8PFYwWp_:␤Useless use of "~" in expression "\"97354043\" ~ s:g/(\\d)/{ <⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹>[~$0]}/" in sink context (line 1)␤Method 'match' not found for invocant of class 'Any'␤  in block <unit> at /tmp/tX8PFYwW…»

[10:41] <_nadim> m: "97354043" ~~ s:g/(\d)/{ <⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹>[~$0]}/

[10:41] <camelia> rakudo-moar e360bd: OUTPUT«Cannot modify an immutable Str␤  in block <unit> at /tmp/PaHB9QLriD line 1␤␤»

[10:41] <_nadim> m: imy $s = "97354043"; $s ~~ s:g/(\d)/{ <⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹>[~$0]}/

[10:41] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/op1D4N6rRB␤Variable '$s' is not declared␤at /tmp/op1D4N6rRB:1␤------> 3imy 7⏏5$s = "97354043"; $s ~~ s:g/(\d)/{ <⁰ ¹ ²␤»

[10:41] *** vv3 left
[10:42] <_nadim> m: my $s = "97354043";  $s ~~ s:g/(\d)/{ <⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹>[~$0]}/ ; $s.say

[10:42] <camelia> rakudo-moar e360bd: OUTPUT«⁹⁷³⁵⁴⁰⁴³␤»

[10:42] *** vv3 joined
[10:42] *** vv3 left
[10:43] *** vv3 joined
[10:43] *** vv3 left
[10:44] *** vv3 joined
[10:44] *** vv3 left
[10:45] *** vv3 joined
[10:45] *** saorge joined
[10:46] *** virtualsue joined
[10:47] <_nadim> m: my $s = "abc"; $s ~~ s:g/ (<[ a..z ]>)/{<ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖᵠʳˢᵗᵘᵛʷˣʸᶻ>[$0.ord - 'a'.ord]}/ ; $s.say

[10:47] <camelia> rakudo-moar e360bd: OUTPUT«Index out of range. Is: 1, should be in 0..0␤  in block <unit> at /tmp/KyEYFjIOFf line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/KyEYFjIOFf line 1␤␤»

[10:48] <_nadim> how does < .... > get a valid range of 0 ..0? 

[10:49] *** rurban left
[10:49] *** vv3 left
[10:50] *** jasanj left
[10:50] *** vv3 joined
[10:50] *** vv3 left
[10:51] *** vv3 joined
[10:51] *** vv3 left
[10:52] *** vv3 joined
[10:52] *** vv3 left
[10:52] <_nadim> OK, spaces needed

[10:53] *** vv3 joined
[10:54] *** Fritz joined
[10:54] <Fritz> p6: say 3;

[10:54] <camelia> rakudo-moar e360bd: OUTPUT«3␤»

[10:54] *** Fritz is now known as Guest68567

[10:54] <Guest68567> nick: Fritz

[10:55] *** edehont joined
[10:55] *** Guest68567 left
[10:56] <jdv79> how is it a ruby release tops hn?  is our release announce released yet?

[10:58] *** vv3 left
[10:58] *** vv3 joined
[10:58] *** vv3 left
[10:59] *** vv3 joined
[10:59] *** vv3 left
[11:00] <manu__> p6 : say hello

[11:00] <manu__> p6: say hello

[11:00] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Undeclared routine:␤    hello used at line 1. Did you mean 'shell'?␤␤»

[11:00] <manu__> p6: say hello;

[11:00] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Undeclared routine:␤    hello used at line 1. Did you mean 'shell'?␤␤»

[11:00] *** vv3 joined
[11:00] *** vv3 left
[11:00] <jdv79> m: say "hello"

[11:00] <camelia> rakudo-moar e360bd: OUTPUT«hello␤»

[11:01] *** vv3 joined
[11:05] *** saorge left
[11:05] *** manu__ left
[11:06] *** vv3 left
[11:06] *** jcrespo joined
[11:06] *** Skarsnik joined
[11:07] *** vv3 joined
[11:07] *** vv3 left
[11:07] *** ZoffixWin left
[11:07] *** vv3 joined
[11:07] *** vv3 left
[11:08] *** vv3 joined
[11:08] *** vv3 left
[11:09] *** vv3 joined
[11:10] *** Zoffix joined
[11:12] <Skarsnik> Hello, merry 6.C

[11:13] <Zoffix> jdv79, damn, that's kinda sucky. Ruby stealing the thunder

[11:14] *** vv3 left
[11:14] <Zoffix> OTOH, it demonstrates a good example of what *we* should have when we release. A good summary on the most likely page people will visit (perl6.org) that ends with "Download is HERE"

[11:15] *** vv3 joined
[11:15] *** vv3 left
[11:15] <andreoss> m: DateTime.now.say

[11:15] <camelia> rakudo-moar e360bd: OUTPUT«2015-12-25T12:15:57.767044+01:00␤»

[11:16] *** vv3 joined
[11:16] *** vv3 left
[11:16] *** vv3 joined
[11:16] *** vv3 left
[11:17] *** vv3 joined
[11:17] *** jcrespo left
[11:20] <timotimo> time for & with family rest of most of day ...

[11:20] *** cygx left
[11:21] <Zoffix> ^ that's why holiday releases are a bad idea :P

[11:21] <Zoffix> Both shortage of hands and shortage of people to receive the announcement :)

[11:22] *** abraxxa joined
[11:22] *** kjs_ joined
[11:22] *** rurban joined
[11:22] *** vv3 left
[11:23] *** vv3 joined
[11:23] *** vv3 left
[11:24] *** vv3 joined
[11:24] *** vv3 left
[11:25] *** vv3 joined
[11:25] *** vv3 left
[11:25] <Zoffix> I'm thinking when we release, we should put something like this up for a month or so: http://i.imgur.com/gREpELF.png

[11:25] *** vv3 joined
[11:30] *** Cheung joined
[11:30] *** leont joined
[11:30] *** vv3 left
[11:31] *** vv3 joined
[11:31] *** vv3 left
[11:31] *** yeahnoob joined
[11:32] <stmuk> what about one of those web 2.0 "stickers" -- "Download here!"

[11:32] *** vv3 joined
[11:32] *** vv3 left
[11:33] *** vv3 joined
[11:33] *** vv3 left
[11:33] <stmuk> or just swap the "Jump in!" box and Advent boxes?

[11:34] *** vv3 joined
[11:34] <stmuk> http://rakudo.org/how-to-get-rakudo/ is very wordy and confusing for n00bs IMO

[11:35] <Zoffix> Yes, very.

[11:36] <Zoffix> As for swapping boxes: I want something in-your-face that you see right away. 

[11:37] <Zoffix> I wonder why the advent box is missing from my screenshot :S I I thought I pulled

[11:37] <Zoffix> Ah, pulled, but not built

[11:38] <Zoffix> Time to unpack my presents \o/

[11:38] *** vv3 left
[11:39] <a3r0> I'd like to see live countdown like http://imgs.ntd.tv/pic/2014/9-9/p3804171a192814384.jpg on http://perl6.org 

[11:39] *** vv3 joined
[11:39] *** vv3 left
[11:40] *** vv3 joined
[11:40] *** vv3 left
[11:40] *** woolfy joined
[11:40] <Zoffix> Ah! It's just what I always wanted: http://i.imgur.com/sM60het.jpg

[11:41] *** vv3 joined
[11:41] *** vv3 left
[11:41] <Zoffix> a3r0, as there's no specific time when 6.c will be released, I'm unsure what that counter would count down to

[11:42] *** rurban left
[11:42] *** vv3 joined
[11:45] <stmuk> you could just make the "Download Rakudo Perl 6" red rather than blue

[11:46] <stmuk> and move up page

[11:47] *** vv3 left
[11:47] <stmuk> note I'm not a web designer but I play one on IRC

[11:47] *** vv3 joined
[11:47] *** vv3 left
[11:47] <Zoffix> heh

[11:48] *** vv3 joined
[11:48] *** vv3 left
[11:48] *** rurban joined
[11:49] *** vv3 joined
[11:49] *** vv3 left
[11:49] * stmuk "bought" gf a quadcopter :>

[11:49] * Zoffix gifts vv3 a better router

[11:50] <Zoffix> stmuk, why is bought in quotes? :)

[11:50] *** vv3 joined
[11:51] <stmuk> I may use it as well

[11:51] <stmuk> ;)

[11:51] <Zoffix> :)

[11:51] <Theophane> :p

[11:52] *** Psyche^_ joined
[11:53] <Ulti> the main improvement for release would be move the d/l button higher and have it actually download P6 for my specific OS not take me to a wordpress blog that starts with weird definitions of pedantic specifics about 100 people care about right now

[11:53] <Ulti> if I click DOWNLOAD NOW and get taken to a weird definition of what JVM and something called MoarVM are I'm not going to care

[11:53] <Ulti> (I would) but me the other 99% of people in the world wont

[11:54] <Zoffix> Right, but last I heard, we won't have a R* release just yet, so the download stuff becomes problematic :/

[11:54] <Ulti> im happy to write the stuff that works that out and gets the right link 

[11:54] <stmuk> well there will be no specific OS releases anyway

[11:54] <Zoffix> Yeah

[11:54] <Zoffix> Which sucks

[11:55] *** vv3 left
[11:55] *** ellybelly_ left
[11:55] *** ellybelly left
[11:55] *** ellybelly joined
[11:55] *** ellybelly_ joined
[11:56] <stmuk> maybe just instructions on building from the tarball

[11:56] *** vv3 joined
[11:56] *** vv3 left
[11:56] *** Psyche^ left
[11:56] <Ulti> then have something like `curl -L https://get.perl6.org | sh` do a rakudobrew build and setup?

[11:56] *** vv3 joined
[11:56] *** vv3 left
[11:57] <Ulti> since anyone on Windows will be screwed anyway if there isnt an MSI around

[11:57] <Zoffix> ^ that would be fantastic

[11:57] <stmuk> that won't happen today

[11:57] *** vv3 joined
[11:57] *** vv3 left
[11:57] <Ulti> I made a tiny url version a while ago...

[11:57] <stmuk> I'd favour a cutdown version of http://rakudo.org/how-to-get-rakudo/ which just explains the source build

[11:58] <stmuk> maybe hosted on perl6.org and then a link to the original http://rakudo.org/how-to-get-rakudo/

[11:58] *** vv3 joined
[11:59] <kjs_> re how to get rakudo: Perhaps split up that page into several pages, one for each platform/target

[11:59] <stmuk> there really is only one set of instructions for UNIX-type OSes

[12:00] <hankache> if we can get an MSI for windows that would be great

[12:00] <jdv79> how do we not have an msi build?  i thought this release was planned for a long time.

[12:00] <hankache> and a package for debian

[12:00] <Zoffix> jdv79, holidays

[12:00] <Zoffix> jdv79, people spending time with families and what not

[12:01] <jdv79> so we're releaseing on xmas but wait a few days or weeks until you can try it

[12:01] <Zoffix> jdv79, we're releasing the language

[12:01] <jdv79> i know what is happening

[12:01] <Zoffix> Compiler is a separate release, really.

[12:01] <stmuk> any end users are going to be fairly technical at this point

[12:01] <jdv79> i also know there will be people seeing "oh shiny.  wait, i can't play now.  bye bye."

[12:01] <stmuk> and familiar with building from source (mostly on linux)

[12:02] <jdv79> Zoffix: now you're making excuses too:)  you've been around here too long.

[12:02] <Zoffix> Well, I heard that argument earlier and I think it's over-exaggerated about the fatality of not having something polished right here and right now

[12:03] <jdv79> its not the end of hte world for sure but it would have been better.

[12:03] <stmuk> we don't even know what the tarball is going to be called .. I would guess rakudo-2015.12.tar.gz 

[12:03] <Zoffix> woulda coulda shoulda sure

[12:03] *** vv3 left
[12:03] * Zoffix does another shot

[12:03] <jdv79> you know someone is going to say "after fifteen years they can't even do a release well"

[12:03] <Zoffix> Ahh.... 

[12:04] <stmuk> jdv79: they will say that anyway

[12:04] *** vv3 joined
[12:04] *** vv3 left
[12:04] <jdv79> but i guess its done.  i would have volunteered to help if it i knew this in advance

[12:04] <Zoffix> jdv79, and if we do have something, they'll complain about something else :)

[12:04] <jdv79> yeah yeah

[12:04] <jdv79> :)

[12:04] <stmuk> Zoffix: are you planning on still linking directly to http://rakudo.org/how-to-get-rakudo/ from perl6.org?

[12:05] *** vv3 joined
[12:05] *** vv3 left
[12:05] <Zoffix> I'm actually really excited to see jberger in here asking about release. I still remember having a very heated discussion with them about Perl 6 ruining everything :P

[12:05] *** vv3 joined
[12:05] *** vv3 left
[12:05] <Zoffix> stmuk, I rather not, but I dunno what we're doing vis-a-vis announcements and all. 

[12:06] <Zoffix> Everyone's away. And by the time they come back I might be really wasted :P

[12:06] *** vv3 joined
[12:07] <stmuk> Zoffix: OK I will put up some shorter "install from source" instructions on a gist in an hour or two anyway

[12:07] <stmuk> with the warning I'm also starting to drink soon ;)

[12:07] <Theophane> ^^

[12:08] <jdv79> anyone know how to make the msi?  is there a instruction list?

[12:08] <stmuk> jdv79: I have done it .. you need the free VS compiler from MS

[12:08] <hankache> m: my @array = <0 1 2 3 4>; say @array>>.&is-prime;

[12:08] <camelia> rakudo-moar e360bd: OUTPUT«[False False True True False]␤»

[12:08] <hankache> m: my @array = <0 1 2 3 4>; say @array>>.is-prime;

[12:08] <camelia> rakudo-moar e360bd: OUTPUT«[False False True True False]␤»

[12:08] <jdv79> or is there a from source way that would be easier for now

[12:08] <stmuk> jdv79: slightly older ones seem to work better .. see irclog 

[12:09] <jdv79> like "msi will be avail in a few days but here's how to build from src on win.."

[12:09] <stmuk> jdv79: there are instructions in the tarball

[12:09] <hankache> m: my @array = <0 1 2 3 4>; sub is-even($var) { $var %% 2 }; say @array>>.&is-even;

[12:09] <camelia> rakudo-moar e360bd: OUTPUT«[True False True False True]␤»

[12:09] <hankache> m: my @array = <0 1 2 3 4>; sub is-even($var) { $var %% 2 }; say @array>>.is-even;

[12:09] <camelia> rakudo-moar e360bd: OUTPUT«Method 'is-even' not found for invocant of class 'IntStr'␤  in block <unit> at /tmp/AhehyKF0lY line 1␤␤»

[12:09] <hankache> is it normal that in the above examples, a builtin routine doesn't need & and a user defined sub needs one?

[12:10] <RabidGravy> I think the visual studio has an "installer project" target

[12:10] <Zoffix> hankache, yes, because is-prime is also a method 

[12:10] <Ulti> trying this now curl -L http://tinyurl.com/get-rakudo | sh

[12:10] <RabidGravy> or it did last time I used it

[12:11] <hankache> thanks Zoffix

[12:11] <stmuk> RabidGravy: I just used the windows dev command line and typed make

[12:11] <Ulti> can always make a windows powershell version of that 

[12:11] *** vv3 left
[12:11] <hankache> who was releasing the MSI's before?

[12:12] <Zoffix> m: use MONKEY-TYPING; augment class IntStr { method is-even { self %% 2 };  }; my @array = <0 1 2 3 4>; say @array>>.is-even;

[12:12] <camelia> rakudo-moar e360bd: OUTPUT«[True False True False True]␤»

[12:12] <stmuk> or maybe nmake

[12:12] *** vv3 joined
[12:12] *** vv3 left
[12:12] <hankache> Zoffix++

[12:13] <Zoffix> hankache, note that it's strongly discouraged to do the MONKEY-TYPING stuff :)

[12:13] *** vv3 joined
[12:13] *** vv3 left
[12:13] <Zoffix> http://doc.perl6.org/syntax/augment

[12:13] <hankache> Zoffix I know, everything that hjas MONKEY 

[12:14] *** vv3 joined
[12:14] *** vv3 left
[12:14] *** vv3 joined
[12:14] <_sri> you'd think the perl6 release would be getting more hype than ruby 2.3.0

[12:15] <Zoffix> Why?

[12:15] <Zoffix> We don't have a release yet

[12:15] <hankache> of course

[12:15] <hankache> they have been waiting for 15 years

[12:15] <hankache> :)

[12:15] <_sri> well, then you botched your release, social media thinks the blog post from yesterday was a bad release announcement

[12:16] *** rurban left
[12:16] <virtualsue> cheers _sri

[12:16] *** zengargoylew left
[12:16] <_sri> "Larry Wall announces that Perl 6 is ready for production" https://news.ycombinator.com/item?id=10789270

[12:16] <_nadim> given $sub = sub ....  Is it possible to find out where the sub was defined?

[12:16] *** zengargoylew joined
[12:17] <_sri> virtualsue: o/

[12:17] <Zoffix> Eh. the first comment on that is really disappointing "I expect that the reaction from most of the HN community will be somewhat similar to "why use perl these days when there are so many other more modern choices,""

[12:17] <Zoffix> I wonder if they mean the 20-year-old Python :P

[12:17] <_sri> Zoffix: that was to be expected

[12:17] <Zoffix> _sri, I spose

[12:17] <hankache> there is no such thing as bad publicity ;)

[12:18] <hankache> any publicity is good publicity

[12:18] <Zoffix> hankache, exactly my thought on it :)

[12:18] <virtualsue> i am not a big fan of hn

[12:18] <_sri> your announcement has to tell people why they want to use perl 6

[12:18] <hankache> Zoffix there is method in my madness

[12:19] <hankache> _sri it will.

[12:19] *** vv3 left
[12:19] *** rurban joined
[12:19] <virtualsue> today will be the biggest bikeshed day ever

[12:20] <Zoffix> Sweet

[12:20] * Zoffix decides on the colour in advance

[12:20] *** vv3 joined
[12:20] *** vv3 left
[12:20] <Zoffix> It should be pink!

[12:20] <hankache> lunch bbl

[12:20] *** hankache left
[12:21] *** vv3 joined
[12:21] *** vv3 left
[12:21] <Zoffix> hm, seems I found a 32-bit atom

[12:21] <Zoffix> It's a Christmas miracle!

[12:22] *** vv3 joined
[12:22] *** vv3 left
[12:22] *** vv3 joined
[12:23] <tadzik> :)

[12:26] *** kjs_ left
[12:26] *** kjs_ joined
[12:27] *** vv3 left
[12:28] *** vv3 joined
[12:28] *** vv3 left
[12:29] *** kjs_ left
[12:29] *** edehont left
[12:29] *** vv3 joined
[12:29] *** vv3 left
[12:30] *** vv3 joined
[12:30] *** vv3 left
[12:31] *** vv3 joined
[12:33] *** abraxxa left
[12:33] <Ulti> lame Task::Star choked on something that looks suspiciously like a precomp problem in Grammar::Debugger otherwise that curl line works well enough on OSX

[12:35] *** abraxxa joined
[12:35] *** vv3 left
[12:36] *** vv3 joined
[12:36] *** vv3 left
[12:37] *** joydon left
[12:37] *** vv3 joined
[12:37] *** vv3 left
[12:37] <thundergnat> m: sub super ($s) { $s.trans( ('a' .. 'z').join => 'ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖᵠʳˢᵗᵘᵛʷˣʸᶻ')}; say super 'merry christmas'; # \o/

[12:37] <camelia> rakudo-moar e360bd: OUTPUT«ᵐᵉʳʳʸ ᶜʰʳⁱˢᵗᵐᵃˢ␤»

[12:37] *** Fritz joined
[12:38] <Zoffix> neat

[12:38] *** Fritz is now known as Guest84737

[12:38] <abraxxa> seems the nested CArray type check is still broken ;(

[12:38] <Zoffix> .u ᵠ

[12:38] <yoleaux> U+1D60 MODIFIER LETTER SMALL GREEK PHI [Lm] (ᵠ)

[12:38] *** vv3 joined
[12:38] *** vv3 left
[12:38] <Zoffix> That q looks fishy :P

[12:38] <thundergnat> doesn't seem to be a superscipt q

[12:38] <Zoffix> Ulti, yeah, and it fails on URL too. Re-running works

[12:39] *** vv3 joined
[12:39] <Zoffix> That would be very strange, considering there are superscripts of all other letters

[12:39] <Zoffix> .u ᵖʳ

[12:39] <yoleaux> U+02B3 MODIFIER LETTER SMALL R [Lm] (ʳ)

[12:39] <yoleaux> U+1D56 MODIFIER LETTER SMALL P [Lm] (ᵖ)

[12:40] <Zoffix> hum https://www.quora.com/Why-is-there-no-character-for-superscript-q-in-Unicode

[12:41] <Zoffix> That second answer is whack. Even if all other letters have specific uses, a single letter missing is an obvious flaw. Especially when you have a symbol for poop -_-

[12:41] <leont> Is seems IO.stat is documented but not implemented :-/

[12:41] *** eone joined
[12:41] * leont needs a way to recognize loops in recursive dir iteration, inode and device numbers are useful but I can't find a way to get to them.

[12:42] <thundergnat> Zoffix: BTW, not to be a recurring PITA but travis reporting on modules.perl6.org is still flakey. MAny passing modules show up as

[12:42] <thundergnat> "not set up".

[12:42] <Zoffix> Oh

[12:42] <Zoffix> thundergnat, which ones?

[12:43] <RabidGravy> leont, check Linux::Fuser - uses some nqp malarkey to get them

[12:43] <Zoffix> Hm 007 is one example

[12:43] <Zoffix> Weird

[12:43] <thundergnat> Umm Sort::Naturally, Dependency::Sort, Text::Levenshtein... many more

[12:43] *** vv3 left
[12:43] <Zoffix> Oh weird.

[12:43] <Zoffix> Sort::Naturally showed up as "passing" when the last issue was happening

[12:44] * Zoffix looks

[12:44] <sergot> RabidGravy++: I'm looking into it 

[12:44] <sergot> thanks a lot!

[12:44] <thundergnat> Yeah, it was accurate for a day then changed again.

[12:44] <RabidGravy> sergot, I think FROGGS++ merged a fix

[12:45] <Zoffix> thundergnat, and it's not a PITA :) I didn't even know it was broken :)

[12:45] <sergot> RabidGravy: right, I've just noticed it's merged, thank you very much anyway ! :)

[12:45] <RabidGravy> it might not be right for the windows case but it works for things that don't use the bundled libs

[12:47] <RabidGravy> leont, specifically https://github.com/jonathanstowe/p6-Linux-Fuser/blob/master/lib/Linux/Fuser.pm#L60

[12:47] *** rurban left
[12:47] <leont> Yeah, I found it

[12:48] <RabidGravy> I ripped them out of IO::Path::More because it was failing more than it was passing

[12:48] *** Guest84737 left
[12:53] <RabidGravy> sergot, however https://github.com/sergot/IO-Capture-Simple/pull/8 probably needs your attention :)

[12:54] <leont> Thanks, that fixed my issues :-)

[12:54] <RabidGravy> cool

[12:54] <leont> (or at least, I think it did, still have to write tests for looping…)

[12:55] *** eone left
[12:55] <leont> Also, using two stats seems a bit wasteful, or does it cache?

[12:56] <abraxxa> can you run perl6 t/04-nativecall/05-arrays.t ?

[12:56] <abraxxa> ===SORRY!=== Error while compiling /home/abraxxa/perl6/git/rakudo/t/04-nativecall/CompileTestLib.pm

[12:56] <abraxxa> Semicolon form of 'module' without 'unit' is illegal.  You probably want to use 'unit module'

[12:56] <abraxxa> at /home/abraxxa/perl6/git/rakudo/t/04-nativecall/CompileTestLib.pm:1

[12:57] <abraxxa> ah, my clone wasn't up2date

[12:57] *** lucasb joined
[12:58] *** breinbaas left
[12:58] <sergot> RabidGravy: how could I miss those :)))

[12:58] <abraxxa> now I get P6M Merging GLOBAL symbols failed: duplicate definition of symbol NativeCall

[12:58] <abraxxa> and my use NativeCall isn't after the unit module 

[12:58] *** breinbaas joined
[13:00] <abraxxa> what is the difference between unit module and class?

[13:00] *** hankache joined
[13:03] * abraxxa reads S11

[13:04] <andreoss> where i can find default definition of ws token?

[13:05] <andreoss> m: Grammar.new.ws.perl.say

[13:05] <camelia> rakudo-moar e360bd: OUTPUT«P6opaque: no such attribute '$!shared'␤  in block <unit> at /tmp/CnC2vYGyGH line 1␤␤»

[13:05] <dalek> modules.perl6.org: 1ff22c1 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/TravisCI.pm:

[13:05] <dalek> modules.perl6.org: Do not consider "not set up" Travis statuses as cached

[13:05] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/1ff22c121c

[13:05] <dalek> modules.perl6.org: 734f5b3 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/TravisCI.pm:

[13:05] <dalek> modules.perl6.org: [REBUILD] Avoid deleting cached Travis status on each build

[13:05] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/734f5b311a

[13:06] <Zoffix> thundergnat, ^ that *probably* fixes the issue, but I'm too drunk to be 100% sure yet :) If you notice problems a week later, let me know :P

[13:07] <jnthn> andreoss: S05 has one

[13:07] <yoleaux> 24 Dec 2015 23:02Z <TimToady> jnthn: see thread safety question I asked at https://irclog.perlgeek.de/perl6/2015-12-24#i_11773124 which might be related to hang of throttle.t

[13:07] <jnthn>      / <.ws> /                # match "whitespace":

[13:07] <jnthn>                               #   \s+ if it's between two \w characters,

[13:07] <jnthn>                               #   \s* otherwise

[13:08] <andreoss> so it's now \h*

[13:08] <andreoss> *not

[13:08] <thundergnat> Zoffix, thanks, will do

[13:08] <andreoss> m: say "

[13:08] <camelia> rakudo-moar e360bd: OUTPUT«5===SORRY!5=== Error while compiling /tmp/rpD_ybfkn7␤Unable to parse expression in double quotes; couldn't find final '"' ␤at /tmp/rpD_ybfkn7:1␤------> 3say "7⏏5<EOL>␤    expecting any of:␤        argument list␤        double quotes…»

[13:09] <andreoss> m: say "\r" ~~ /\h/

[13:09] <camelia> rakudo-moar e360bd: OUTPUT«Nil␤»

[13:09] <andreoss> m: say "\r" ~~ /\s/

[13:09] <camelia> rakudo-moar e360bd: OUTPUT«｢

[13:09] <jnthn> .tell TimToady It does help to do that, ys, though much more advisable is to just declared a fixed dimension array.

[13:09] <yoleaux> jnthn: I'll pass your message to TimToady.

[13:09] <andreoss> m: say "\n" ~~ /\h/

[13:09] <camelia> rakudo-moar e360bd: OUTPUT«Nil␤»

[13:10] <jnthn> Note you can define ws in your own grammar if needed

[13:13] <lizmat> jnthn: the code in throttle.t had another thinko... the array went from 0..9, while the loop went from 1..10...

[13:13] <yoleaux> 03:10Z <jdv79> lizmat: why did we not borrow p5's meta spec more?

[13:13] <lizmat> fixing now

[13:13] <lizmat> jdv79: because we didn't want to make the same mistakes ?

[13:13] <El_Che> lizmat: you opted for a set of new ones? :)

[13:13] <lizmat> this was discussed at QA meatings...

[13:14] <El_Che> cheers people!

[13:14] <lizmat> "always make new mistakes"

[13:14] <El_Che> thx for the release!

[13:14] <jdv79> i was about to say.  what are the mistakes/justifications

[13:15] <abraxxa> can someone help me to write a test case for the failing my CArray[CArray[int8]] $foo .= new; in DBDish::Oracle?

[13:15] <jdv79> the current spec doesn't feel as well thought out as the current p5 one.  could be me.

[13:15] *** espadrine_ is now known as espadrine

[13:15] <Zoffix> There's the obvious missing piece: recommended/optional prereqs

[13:16] *** yeahnoob left
[13:16] <lizmat> jdv79: never said it was complete  :-)

[13:16] <Zoffix> :)

[13:17] <jdv79> i'm all for new stuff.  i'm just questioning the reasoning we didn't follow p5's example more closely.  for instance why have a seperate perl field for its version when it could just be part of the pre-reqs

[13:18] <jdv79> also, the prereqs in p5's spec is way more comprehensive

[13:19] <jdv79> also, the values in the p6 spec are "wrong" from what i can gather.  "v6" should be "6" and "JSON::Slow:auth<cpan:*>:ver(1..*)" should be seperate fields.

[13:19] <Zoffix> I'm fine with a separate perl field, since the prereqs is what is installed by the module installer, so having perl there is weird

[13:20] * stmuk seems to remember past CPAN modules trying to install brand new uneeded perl 5s :)

[13:20] *** lichtkind joined
[13:20] *** abraxxa left
[13:20] <Zoffix> :o

[13:20] <stmuk> that bug drove me nuts for a year or two!

[13:20] *** kid51 joined
[13:20] *** ellybelly_ left
[13:21] *** ellybelly_ joined
[13:21] <dalek> roast: c5e65d7 | lizmat++ | S17-supply/throttle.t:

[13:21] <dalek> roast: Hopefully fix hanging issues, TimToady++

[13:21] <dalek> roast: review: https://github.com/perl6/roast/commit/c5e65d781d

[13:22] <Zoffix> Template::Mojo, Bailador, DBIish seem like an overkill to have in Task::Star... I could look past DBIish, but Bailador? Is P6 positioning itself as a go-to tool for web dev and is it expected that most P6 devs will be doing web dev?

[13:22] <Zoffix> Seems a weird thing to include

[13:23] <Zoffix> Especially since it's still broken

[13:23] <jdv79> DBIish makes sense.  db is a huge bgen purpose thing.

[13:23] <jdv79> perl5 without dbi is drastically less useful

[13:24] *** xpen left
[13:24] <stmuk> Broken how? the Bailador tests passed a few hours ago when I tried it

[13:25] <jdv79> is Bailador one of the ones that triggers the precomp bug?

[13:25] *** xpen joined
[13:25] <stmuk> which bug?

[13:25] <jdv79> there were a few you had to run again to get past that annoyance

[13:25] <jdv79> the can't unbox type something

[13:26] <Zoffix> stmuk, passing tests != not broken :P

[13:26] <Zoffix> stmuk, this one: https://github.com/tadzik/Bailador/issues/43

[13:26] *** xpen left
[13:26] <Zoffix> I've not tried it right now, but I see there' still an open PR for my still-open issue, so I assume it's still not fixed

[13:26] <stmuk> the main problem I saw with Bailador was the slow install "hang" which larry fixed

[13:27] <Zoffix> There's also this: https://github.com/tadzik/Bailador/issues/42

[13:27] <stmuk> is the "unbox/retry" error module specific or does it affect all modules?

[13:27] <Zoffix> That really is a fatal issue, since it means I can't use Bailador in production

[13:27] <Zoffix> .oO( more like Failador )

[13:28] <Zoffix> stmuk, from what I understand, it affects all modules with uninstalled prereqs

[13:28] <Zoffix> Come to think of it, we can problem trick the issue by listing the prereqs of failing modules first, so they're installed when we get to failing modules, thus avoiding the failure.

[13:28] <Zoffix> s/problem/probably/;

[13:29] <stmuk> if Bailador is shipped in * maybe someone new will see and fix it :)

[13:29] <Zoffix> heh

[13:30] <Zoffix> Hm getting a bunch of warnings on DBIish install "NativeCall: Consider adding the api version of the library you want to use, sub foo is native(mysqlclient, v1)"

[13:30] <lichtkind> could we rewrite the desing page on perl6.org, i mean now the design is completed for first

[13:31] <lichtkind> it says part of lang spec are still in flix

[13:31] <virtualsue> who is "we"

[13:31] <Zoffix> lichtkind, well, they are

[13:31] <Zoffix> Macros are still experimental

[13:31] <lichtkind> i mean me but i want to listen opionon that

[13:31] <lichtkind> allright

[13:32] <Zoffix> lichtkind, I do think the "Notes (excerpt from Synopsis 1)" section could be replaced/updated

[13:32] <stmuk> I assume once rakudo feature freezes (ish) its more likely the design gets rewritten to resemble what we have

[13:32] <Zoffix> Since we now have the "solidified" spec. but I'm unsure what it should say now tho

[13:32] <Zoffix> Ah right, the spec ATM is likely outdated in places

[13:33] <Zoffix> (and roast is the real spec)

[13:33] *** lnx joined
[13:35] <Zoffix> Task::Star installs on freshly squeezed rakudo (looking past several re-runs to avoid the precomp bug) \o/

[13:36] * stmuk wonders if sprouts can be microwaved

[13:36] <Zoffix> sure

[13:36] <Zoffix> Why wouldn't they? :)

[13:37] <espadrine> they contain water, that's what matters

[13:37] <jdv79> what would a gen purpose dist list if it was made today

[13:38] <Zoffix> jdv79, Test::Meta for one

[13:38] <jdv79> s//contain/

[13:38] <Zoffix> And Acme::GiveUp ^_^

[13:40] <Zoffix> jdv79, call me crazy, but out of the current Task::Star list, I'd leave only Grammar::Debugger https://gist.github.com/zoffixznet/29959ee7cdb89921f06e

[13:40] <ChoHag> They can be microwaved.

[13:40] <krshn> the re-runs are very annoying if you do not know why it is happens. makes one suspect ones perl6 setup. we should have a way to communicate the bug to the user

[13:40] <Zoffix> And I only really say it because I've used it once

[13:40] <ChoHag> Eaten is another matter.

[13:40] <dalek> rakudo/nom: f2dd986 | lizmat++ | src/core/Supply.pm:

[13:40] <dalek> rakudo/nom: Fix spurious fails in Supply.interval tests

[13:40] <dalek> rakudo/nom: 

[13:40] <dalek> rakudo/nom: The cancel inside the CATCH block could also happen before the cancellation

[13:40] <dalek> rakudo/nom: value was set because of an exception.  And then bomb again, causing the test

[13:40] <dalek> rakudo/nom: failure.

[13:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f2dd986fab

[13:41] <Zoffix> So what I'm really saying is that Task::Star ATM is useless and all the issues we're having with it are a waste of time :)

[13:42] *** raiph joined
[13:43] *** rindolf left
[13:44] <jdv79> Zoffix: well, rakudo star is about useful stuff for early adopters so you're cut down is way less useful

[13:45] <jdv79> i'm just questioning some of the inclusions as actually being useful

[13:45] <Zoffix> Based on the quick scan of modules.perl6.org, this is what I'd have in Task::Star instead:    Data::Dump Grammar::Debugger Test::Meta DBIish File::Temp File::Find p6doc 

[13:45] <jdv79> and new stuff should probably go in.  like Test::Meta

[13:45] * leont just discovered unless foo() ->$ value { return $value } as a useful pattern :-)

[13:45] <Zoffix> I certainly wouldn't want Failador and JSON module of the day included in it

[13:46] * leont greatly prefers Path::Iterator over File::Find, but then again he wrote it :-p

[13:46] <jdv79> sure

[13:46] *** kanishka joined
[13:46] <hankache> Zoffix for the love of God remove ANY module that is failing from Rakudo Star

[13:46] <stmuk> moar sherry!

[13:47] <jdv79> JSON::Tiny isn't "of the day" though in my mind but sure.  its the canonical one based on grammars

[13:47] <jdv79> it just happens to be slow atm:(

[13:47] <krshn> hankache: +1

[13:47] <Zoffix> But grammars are sloooow

[13:47] <stmuk> nothing is failing in Task::Star any worse than anything else

[13:47] <jdv79> maybe that's useful to put out there:)

[13:47] <jdv79> idk

[13:47] <Zoffix> My choice is JSON::Fast ATM, but it's generation of JSON is total crap, because it adds about 40% of extra size with useless whitespace

[13:48] <Theophane> sucks :(

[13:48] <Zoffix> hankache, well, the real thing that's failing is panda TBH.

[13:48] <hankache> i just did rakudobrew build moar

[13:48] <hankache> nothing failed

[13:48] <hankache> even panda installed

[13:49] <hankache> what's the issue?

[13:49] <Zoffix> hankache, right, but panda is broken when installing modules with prereqs that aren't installing

[13:49] <Zoffix> hankache, *that* causes all the issues with several modules in Task::Star

[13:49] <Zoffix> *prereqs that aren't installED

[13:50] *** sela left
[13:51] <hankache> so if any module that is a prereq fails, everything fails?

[13:51] <hankache> isn't this what should happen?

[13:51] <Zoffix> Seems to be yes. And the reason it works on re-try is because by then those prereqs are already installed

[13:51] <Zoffix> Errr

[13:51] <Zoffix> hankache, no, there are no fails involved

[13:52] <hankache> shouldn't we fix these modules instead?

[13:52] <Zoffix> There's nothing to fix

[13:52] <Zoffix> hankache, if you want module X installed that depends on module Y that is NOT installed, your install of module X will fail. But if you install module Y first, then it'll succeed

[13:52] <hankache> Zoffix: ahhh!!!!!!!

[13:53] <hankache> Zoffix: when did this happen? dependencies where working fine like a week ago

[13:53] <Zoffix> several days ago, maybe a week

[13:53] <hankache> the Native libraries versioninig thing?

[13:56] <hankache> what about zef?

[13:56] <hankache> is it viable?

[13:56] <Zoffix> no idea

[13:57] *** kjs_ joined
[13:59] <hankache> zef is a no go

[14:05] <jdv79> zef is being refactored and is waiting for new precomp-ish bugs to be worked out 

[14:05] <jdv79> or so i gather from the README and ugexe

[14:07] * leont rather dislikes the structure of panda

[14:08] <Theophane> hm I wonder how fun it would be to write rakudo modules in Rust.

[14:11] *** halto joined
[14:11] <leont> I wanted to add TAP::Harness support, the structure is kind of hostile to that (the assumption of an external harness runs through several classes) :-.

[14:20] <Zoffix> For anyone curious, this is my TEST_JOBS=250 make spectest run: https://gist.github.com/zoffixznet/5166056e80d863f10fb8  hung on throttle.t

[14:21] *** Zoffix left
[14:26] *** jasanj joined
[14:26] <lizmat> .tell Zoffix, is that hang before or after I changed throttle.t earlier today ?

[14:26] <yoleaux> lizmat: What kind of a name is "Zoffix,"?!

[14:27] <lizmat> .tell Zoffix is that hang before or after I changed throttle.t earlier today ?

[14:27] <yoleaux> lizmat: I'll pass your message to Zoffix.

[14:29] *** ZoffixWin joined
[14:29] *** ZoffixWin left
[14:29] *** ZoffixWin joined
[14:29] <leont> K-Lined does not sound good…

[14:29] <lizmat> ZoffixWin: was that before or after my throttle.t fixes earlier today ?

[14:30] *** rurban joined
[14:30] <ZoffixWin> lizmat, after. After the tests finished, I ran git pull in the /rakudo dist just to ensure I had all the latest stuff, and it said "already up-to-date"

[14:30] <lizmat> :-(

[14:31] *** ZoffixWin is now known as Zoffix

[14:31] <Zoffix> .botsnack

[14:31] <yoleaux> 14:27Z <lizmat> Zoffix: is that hang before or after I changed throttle.t earlier today ?

[14:31] <yoleaux> :D

[14:31] *** furn_ joined
[14:31] <lizmat> well, at least the test is more correct now, as it was changing the size of the array when it shouldn't have

[14:32] *** halto left
[14:32] *** halto joined
[14:40] *** kjs_ left
[14:40] *** kjs_ joined
[14:42] *** kjs joined
[14:43] *** ab6tract joined
[14:43] <ab6tract> Zoffix: are you sure that rakudo/spec is pulled automatically from a git pull in rakudo/ ?

[14:43] *** furn_ left
[14:44] <lizmat> not from a git pull, but with a 'make spectest'

[14:45] <ab6tract> lizmat: then I'm not sure that he actually has the latest version of throttle.t

[14:45] <lizmat> ah...  hmmm....

[14:45] <lizmat> you could be right  :-)

[14:46] <ab6tract> how does a 250 worker run look on your machine? :)

[14:46] *** BenGoldberg joined
[14:46] <lizmat> I'll try in a moment...

[14:46] <Zoffix> Takes 15GB of RAM :)

[14:46] <Zoffix> I'd think I have the latest version. It took at most 10 minutes to run the test and I immediately posted the results and the last commit I see in roast is 1h20m ago

[14:46] <ab6tract> Zoffix: please explicitly pull in rakudo/spec .. that way we can be sure

[14:47] <Zoffix> and running the test pulls the latest roast

[14:47] <ab6tract> ok

[14:47] <Zoffix> I rebooted into Windows to play games, so I can't immediately run the test. I could reboot back and try again if really is needed, but I see lizmat is going to try themselves so... :)

[14:48] <lizmat> yes, we will  :)

[14:48] <Zoffix> ;)

[14:48] *** rindolf joined
[14:48] <ab6tract> Zoffix: cheers man, no worries!

[14:48] <ab6tract> i would run myself but about to hop in a car and travel so

[14:50] *** hankache left
[14:51] <pochi> m: grammar MyGrammar is Perl6::Grammar { ... }

[14:51] <camelia> rakudo-moar f2dd98: OUTPUT«5===SORRY!5=== Error while compiling /tmp/iZT6achxZZ␤'MyGrammar' cannot inherit from 'Perl6::Grammar' because it is unknown.␤at /tmp/iZT6achxZZ:1␤»

[14:51] <pochi> Grammar.nqp calls it Perl6::Grammar though ... How can I make my own grammar which inherits from the official grammar?

[14:53] *** ab6tract left
[14:55] *** xfix left
[14:57] <Zoffix> *le sigh* https://twitter.com/hashtag/perl6?src=hash

[14:58] <Zoffix> People making an assumption that TimToady++'s Advent Post is a release announcement and then criticizing it for not being release-announcement-like -_- Missing download link? Eh, well, there's ya first clue, bruh

[15:00] * lizmat starts the TEST_JOBS=250 spectest and goes away for a bit

[15:00] <Theophane> \o/

[15:02] <Zoffix> lizmat, if you have trouble reproducing the hang, I'll gladly reboot back to Linux and try again :)

[15:02] <FROGGS> pochi: if you need a slang example instead, there is this: https://github.com/FROGGS/p6-Slang-Tuxic

[15:03] <FROGGS> m: constant P6G = %*LANG<Perl6>; grammar MyGrammar is P6G { } # this compiles, but I dunno if it is of any use

[15:03] <camelia> rakudo-moar f2dd98: ( no output )

[15:04] <pochi> FROGGS: I'd like to MyGrammar.parse("some perl6 code", actions => $my-actions)

[15:04] <pochi> and my-actions doing something useful(?) like pretty-print/colorify etc

[15:06] *** Atomic_Dz4vo joined
[15:06] <FROGGS> pochi: the perl6 actions do quite a lot, you cannot remove them without breaking anything... mind that you need to run code while you compile a perl6 program

[15:07] <FROGGS> pochi: but you can perhaps wrap the action methods in an export sub

[15:07] <FROGGS> pochi: the export sub trick is what the slang example shows

[15:11] *** espadrine left
[15:11] *** jasabella joined
[15:12] <cognominal> m:  grammar A { token TOP {  <( <.a> )> }; token a { . <(a)> }}; say A.parse(".a")

[15:12] <camelia> rakudo-moar f2dd98: OUTPUT«｢.a｣␤»

[15:13] <cognominal> m:  grammar A { token TOP {  <( <.a> )> }; token a { . <(a)> }}; say A.parse(".a"); say $/.perl

[15:14] <camelia> rakudo-moar f2dd98: OUTPUT«｢.a｣␤Match.new(ast => Any, list => (), hash => Map.new(()), orig => ".a", to => 2, from => 0)␤»

[15:15] <cognominal> m:  grammar A { token TOP {  <( <a> )> }; token a { . <(a)> }}; say A.parse(".a"); say $/.perl

[15:15] <camelia> rakudo-moar f2dd98: OUTPUT«｢.a｣␤ a => ｢a｣␤Match.new(ast => Any, list => (), hash => Map.new((:a(Match.new(ast => Any, list => (), hash => Map.new(()), orig => ".a", to => 2, from => 1)))), orig => ".a", to => 2, from => 0)␤»

[15:15] *** vendethiel joined
[15:16] <Zoffix> Well, I just told the First Lady of Murica that her speech was stupid... I love the Internet

[15:16] * Zoffix passes around shots of vodka

[15:16] <cognominal> I would have expected the match to stringify to "a" not ".a".

[15:17] *** ponzii joined
[15:17] <Zoffix> cognominal, what if it has more than one capture?

[15:17] <Zoffix> like a and b

[15:17] <pochi> FROGGS: Hm, didn't think of BEGIN and CHECK blocks :-( (with role Tuxic, you swap out perls definition of some grammar terms?)

[15:18] <ponzii> I hHeard Perl 6 was out but can't see a Rakudo Star release since November's.

[15:18] <cognominal> not so sure how a    <( <a>  )>   should behave when the a rule uses itself a <( ... )>

[15:19] <cognominal> Zoffix, can you give an example ?

[15:19] <vendethiel> ponzii: indeed, everyone is busy with christmas. it's comin soon though :-)

[15:19] *** Ben_Goldberg joined
[15:19] *** rickbike left
[15:19] <Zoffix> ponzii, you heard wrong. There was some confusion in the wild regarding Larry Wall's Advent post recapping the past 15 years of development.

[15:20] <ponzii> Zoffix: So ... next Xmas then? :)

[15:20] <Zoffix> Nah

[15:20] <Zoffix> ponzii, the release of the Perl 6 language is coming soon in the next 24-48 hours, but I'm not so sure about Rakudo Star release. It's a release of the compiler implementing the Perl 6 language that is being released on Xmas, so... there'll be some delay :)

[15:21] *** hlafarge joined
[15:21] <Zoffix> ponzii, you could still try out right now, just build from source with rakudobrew: http://rakudo.org/how-to-get-rakudo/

[15:21] <ponzii> Larry should hire Matz. He always gets his Xmas presents out on time :)

[15:21] *** hankache joined
[15:21] <Zoffix> ponzii, yeah, I saw the trending post. Very nice.

[15:22] <ponzii> Zoffix: I use rakudobrew actually so are you saying it's out if I use that?

[15:22] *** BenGoldberg left
[15:22] <Zoffix> ponzii, pretty much, yeah. Just rebuild from HEAD (I believe running `rakudobrew triple` does that)

[15:23] <cognominal> If I understand Larry's post, xmas is more like the spec freeze, next is rakudo, after that rakudo star. He said festivities often last until January 5. So maybe rakudo start will be there at this time.

[15:23] <Zoffix> ponzii, and depending on how old your install is, you might need to nuke ~/.rakudobrew and ~/.perl6 first, as there were some changes to the module install process

[15:23] <FROGGS> pochi: I do, but you can also wrap methods I guess

[15:23] <FROGGS> ponzii: we are close to the december release though

[15:24] <Zoffix> ponzii, oh, I just remembered rakudobrew triple needs a patch to make it work right with make :P Ummm... maybe try rakudobrew build moar  that should be good 'nuf

[15:25] <ponzii> Zoffix: `rakudobrew build moar` is what I usually use.

[15:25] <Zoffix> cognominal, yeah, but that's not how the outside world sees it. "Release of Perl 6" mostly means release of a THING you can download and run and make do things

[15:26] *** rurban left
[15:26] *** Atomic_Dz4vo left
[15:27] *** ponzii left
[15:27] <Zoffix> Oh,

[15:27] <Zoffix> m: 'foo bar' ~~ /('foo') \s+ ('bar')/; say $/

[15:27] <camelia> rakudo-moar f2dd98: OUTPUT«｢foo bar｣␤ 0 => ｢foo｣␤ 1 => ｢bar｣␤»

[15:28] <Zoffix> nm

[15:29] <stmuk> I have to admit I was hoping the top post on Hackernews today to be different

[15:29] <andreoss> is there prompt() with GNU Readline features?

[15:31] <Zoffix> stmuk, well, we haven't released anything yet....

[15:32] <Zoffix> ...but that brings me to another point... Wtf is everybody? I thought the channel would be like super excited and super busy right now... Maybe I'm just in the wrong timezone

[15:32] <lucasb> Zoffix: I'm super excited and super busy right now :)

[15:33] <Zoffix> heh

[15:34] * au is too excited and too busy writing perl6 scripts, too :)

[15:34] <andreoss> ruby people have already done their Christmas release 

[15:34] *** nemsys joined
[15:34] <stmuk> it's almost as if there were a common holiday over north america and europe!

[15:36] <Theophane> wow

[15:38] <Zoffix> If there is any wisdom in any of this is that releasing things on Christmas is a stupid idea, unless you prepare the release well in advance and on the actual day all you have to do is click a button.

[15:38] <cognominal> Zoffix, except they think they know what kind of THING it is and they will judge it by existing metrics. Eventually, they will be surprised when camelia will fully deploy its wings  :)

[15:39] <cognominal> m:  grammar A { token TOP {  <( <a> )> }; token a { . <(a)> }}; say A.parse(".a"); say $/.perl

[15:39] <camelia> rakudo-moar f2dd98: OUTPUT«｢.a｣␤ a => ｢a｣␤Match.new(ast => Any, list => (), hash => Map.new((:a(Match.new(ast => Any, list => (), hash => Map.new(()), orig => ".a", to => 2, from => 1)))), orig => ".a", to => 2, from => 0)␤»

[15:40] <Zoffix> cognominal, that's a nice sentiment, but how much connection does it have to reality? I've seen the P6 release described as a "trainwreck" in the outside circles, and so far I actually agree (https://twitter.com/hashtag/perl6?src=hash)

[15:40] <cognominal> ^^^ vendethiel, what would you expect here

[15:40] <vendethiel> about the perl 6 release?

[15:41] <vendethiel> or about the snippet of code?

[15:41] <stmuk> I think we probably just have to wait a few more hours

[15:41] <stmuk> its just a tag anyway

[15:42] *** patrickz left
[15:43] <cognominal> recently, I have seen Perl 6 compared to Gnu Hurd on twitter. But the comparaison does not apply, a Unix kernel is bound by a well known interface while Perl 6 started with a blank slate.

[15:43] *** patrickz joined
[15:43] <cognominal> vendethiel, about the code snippet

[15:44] <andreoss> it's better compared with attempt to rewrite Emacs to Scheme

[15:44] <stmuk> gnu hurd works ok on 32 bit intel

[15:44] <andreoss> since 1999

[15:44] <vendethiel> Well, the fact we have some heavy bugs right before the release (precomp) etc will confuse a lot of people, but I got nothing to say :)

[15:44] <vendethiel> cognominal: never used <()>

[15:44] *** bpmedley_ left
[15:45] <cognominal> I am not happy with the current state of panda but it is clearly in transition

[15:45] <andreoss> emacs on scheme works, but too slow to usefull 

[15:45] <andreoss> about 70 times slower than original

[15:45] <Zoffix> vendethiel, well, it's the release of the *language* and issues in Rakudo are well-defined: https://github.com/rakudo/rakudo/blame/nom/docs/announce/2015.12.md#L28-L37

[15:46] <andreoss> *to be usefull

[15:46] <Zoffix> Not that it would stop people expecting the conventional deliverables in conventional state

[15:46] <Zoffix> But... that's what you get when you go bold and define new paradigms :)

[15:46] <vendethiel> Zoffix: to outsiders, it's "A 6.0 release is buggy"

[15:46] <Zoffix> vendethiel, yup

[15:47] <Zoffix> And I'm kinda fine with that.

[15:47] * Zoffix does another shot

[15:47] <Zoffix> To Perl 6 and all the people who can correctly comprehend release notes and don't expect things not promised :D

[15:47] <mattp__> Zoffix: I hope you're not in the eastern timezone for the amount of drinking your doing :)

[15:47] <Zoffix> mattp__, I am! I started drinking at 6AM today :P

[15:47] <cognominal> It seems that TimToady sees Perl 6 like a Rorschach test, it will be what the most imaginative people will see in it. Eventually, the crowd will follow.

[15:49] <diakopter> where are the social network announcements being posted? twitter? reddit?

[15:49] <Zoffix> cognominal, I'm kinda fine with that

[15:49] <Zoffix> diakopter, everywhere? :)

[15:50] <diakopter> such as?

[15:50] <Zoffix> diakopter, sadly, some people think Larry's Advent post was the release announcement: https://twitter.com/hashtag/perl6?src=hash

[15:50] <autarch> doh, panda seems to be broken for me

[15:50] <Zoffix> diakopter, what do you mean such as?

[15:50] <diakopter> everywhere, including?

[15:50] <autarch> because of Shell::Command

[15:50] <diakopter> twitter & reddit?

[15:50] <Zoffix> diakopter, when the release happens, post it everywhere you can, because why not? I may be misunderstanding the question.

[15:50] <lucasb> autarch: what's the issue? the 'as' keyword?

[15:50] <diakopter> hacker news?

[15:51] <diakopter> well it's just usually such things are planned

[15:51] <autarch> lucasb: yeah - and I just did "rakudobrew build-panda" to see if that'd help, no love

[15:51] <diakopter> such announcements & posting

[15:51] <Zoffix> diakopter, ah

[15:51] <Zoffix> *shrug* I think @responsible-parties are currently sleeping

[15:51] <Zoffix> I've no idea what's happening

[15:51] <diakopter> who are the responsible parties?

[15:51] <lucasb> autarch: I think both panda and Shell::Command fixed that already... maybe it's some file leftover

[15:52] <Zoffix> diakopter, [Coke]? TimToady?

[15:52] *** hlafarge left
[15:52] <autarch> lucasb: yeah, I did a "git clean -dxf" in ~/.rakudobrew/moar-nom/panda, then a new "rakudobrew build-panda" - still no love

[15:52] <autarch> I wonder if I just need to nuke my whole install

[15:53] * autarch tries that

[15:53] *** xinming_ joined
[15:53] <autarch> I'll report back in 10 minutes or so ;)

[15:53] <Zoffix> autarch, probably. My install went great an hour or so ago... And I did nuke ~/.rakudobrew and ~/.perl6

[15:55] <dalek> doc: 081331e | (Brock Wilcox)++ | doc/Language/phasers.pod:

[15:55] <dalek> doc: Initial phaser doc, from S04

[15:55] <dalek> doc: review: https://github.com/perl6/doc/commit/081331ea77

[15:55] <dalek> doc: 8a4831a | (Brock Wilcox)++ | doc/Language/phasers.pod:

[15:55] <dalek> doc: Start shuffling things into sections

[15:55] <dalek> doc: review: https://github.com/perl6/doc/commit/8a4831a538

[15:55] <dalek> doc: 243908a | (Brock Wilcox)++ | doc/Language/phasers.pod:

[15:55] <dalek> doc: Further refinement of Phasers doc, maybe even useable

[15:55] <dalek> doc: review: https://github.com/perl6/doc/commit/243908a02c

[15:55] <dalek> doc: 118835a | (Brock Wilcox)++ | doc/Language/phasers.pod:

[15:55] <dalek> doc: Modify subtitle a bit

[15:55] <dalek> doc: review: https://github.com/perl6/doc/commit/118835a87d

[15:55] <dalek> doc: 61f3747 | (Brock Wilcox)++ | doc/Language/phasers.pod:

[15:55] <dalek> doc: Merge pull request #260 from perl6/phasers

[15:55] <dalek> doc: 

[15:55] <dalek> doc: Phasers

[15:55] <dalek> doc: review: https://github.com/perl6/doc/commit/61f37473a3

[15:56] *** hankache left
[15:56] *** kjs_ left
[15:56] *** kjs_ joined
[15:56] *** xinming left
[16:03] *** jandrew joined
[16:07] *** patrickz left
[16:08] <autarch> nuke and rebuild did the trick

[16:09] <Theophane> \o/

[16:10] *** atweiden joined
[16:11] *** vendethiel- joined
[16:11] *** xinming_ left
[16:11] *** xinming joined
[16:11] * lizmat is back

[16:12] <lizmat> Files=1092, Tests=51412, 299 wallclock secs (23.61 usr  5.07 sys + 1788.66 cusr 185.18 csys = 2002.52 CPU)   # TEST_JOBS=250

[16:12] <lizmat> no hang in throttle.t

[16:12] *** Zoffix left
[16:13] *** kjs_ left
[16:14] *** Zoffix joined
[16:14] *** vendethiel left
[16:14] *** klapperl joined
[16:15] * Zoffix nukes rakudo and re-tries the test

[16:17] *** hlafarge joined
[16:19] <Zoffix> heh. I have a nagging thought that I may have seen throttle.t take more than a second or two and aborted it because I thought it hanged :P

[16:19] *** bpmedley_ joined
[16:20] <lizmat> Files=1, Tests=47, 35 wallclock secs ( 0.03 usr  0.00 sys +  2.24 cusr  0.25 csys =  2.52 CPU)   # typical wallclock on throttle.t

[16:21] *** christkind joined
[16:21] *** Skarsnik_ joined
[16:21] <FROGGS> throttle.t usually hangs on my box

[16:22] <christkind> p6: say "release date";

[16:22] <camelia> rakudo-moar f2dd98: OUTPUT«release date␤»

[16:22] *** edehont joined
[16:22] <dalek> perl6-roast-data: 119d1c7 | coke++ | / (7 files):

[16:22] <dalek> perl6-roast-data: today (automated commit)

[16:22] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/119d1c7b0e

[16:22] <christkind> p6: say "release date".WHEN;

[16:22] <camelia> rakudo-moar f2dd98: OUTPUT«Method 'WHEN' not found for invocant of class 'Str'␤  in block <unit> at /tmp/tmpfile line 1␤␤»

[16:23] <Zoffix> christkind, the answer is "sometime in the next 24-48 hours" :P

[16:23] <lizmat> FROGGS: does it still with the most recent throttle.t ?

[16:23] *** Skarsnik left
[16:23] * christkind keeps his fingers crossed

[16:23] *** jandrew left
[16:23] * lizmat notes that Christmas is celebrated well into January in some parts of the world

[16:24] <Zoffix> :)

[16:24] <christkind> And before I forget, Merry Christmas/Winter solstice/$CELEBRATION to everyone!

[16:24] <Zoffix> Same to you!

[16:24] *** jandrew joined
[16:24] <FROGGS> lizmat: ohh, I've not seen a patch to that file... will retry later

[16:25] <lizmat> https://en.wikipedia.org/wiki/Christmas#Listing

[16:27] <dalek> nqp: 0c02ffb | TimToady++ | tools/build/MOAR_REVISION:

[16:27] <dalek> nqp: And a Happy NQP Year

[16:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0c02ffbbc1

[16:27] <Zoffix> My grandma celebrates Christmas on Jan 6 

[16:28] <Zoffix> So it's not just Armenian whatever. Seems like Presbetarian(sp?) church celebrates it then

[16:30] <dalek> rakudo/nom: 8b4fe44 | lizmat++ | src/core/Date (2 files):

[16:30] <dalek> rakudo/nom: Give DateTime its own BUILD

[16:30] <dalek> rakudo/nom: 

[16:30] <dalek> rakudo/nom: making DateTime creation 1.5x faster.  Since CUR uses it a lot, this

[16:30] <dalek> rakudo/nom: should also mean a bare startup gain

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8b4fe44f68

[16:30] <Skarsnik_> Zoffix, the warning with mysqclient is because... libmysqlclient don't follow a nice versionning for its api, libmysqlclient18 is compatible with earlier version (until 14 maybe?), since 18 is recent I leave as it

[16:31] <Zoffix> Ah

[16:31] <Skarsnik_> I can probably have a way to force a non version and avoid the warning, but it's not something that should be done IMO

[16:31] *** xinming_ joined
[16:31] *** leont left
[16:31] *** cygx joined
[16:32] <Skarsnik_> I was thiking of something like is native('mysqlclient', False), but I should not be documented if so x)

[16:32] <cygx> Zoffix: that's an orthodox thing, not a Presbyterian one

[16:32] *** pierre-vigier joined
[16:32] <cygx> they used to reject Christmas altogether in the past

[16:32] *** zhi joined
[16:32] <cygx> Google result with some context: http://www.phcmontreat.org/Exhibit-Christmas.html

[16:33] *** lucasb left
[16:33] <Zoffix> Hm, now my spectest seems to have hung after "t/spec/S06-operator-overloading/sub.rakudo.moar ............... ok"

[16:33] * cygx is afk

[16:33] <Zoffix> It might be issues with my HDD tho, no need to panic :)

[16:33] <TimToady> well, throttle still hangs

[16:33] <yoleaux> 06:53Z <bartolin_> TimToady: there is RT #126823 for the failing test in adverbs.t

[16:33] <yoleaux> 09:40Z <nine> TimToady: adverb.t is even stranger than just load: it fails when run with PERL6LIB=lib,. as the harness does butvworks when run without

[16:33] <yoleaux> 13:09Z <jnthn> TimToady: It does help to do that, ys, though much more advisable is to just declared a fixed dimension array.

[16:34] *** xinming left
[16:34] *** zhi left
[16:34] * Zoffix reboots and retries

[16:34] *** Zoffix left
[16:34] <andreoss> m: say $*LANG

[16:34] <camelia> rakudo-moar f2dd98: OUTPUT«Dynamic variable $*LANG not found␤  in block <unit> at /tmp/ycfK8ytIQM line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/ycfK8ytIQM line 1␤␤»

[16:35] <andreoss> m: say $*PERL

[16:35] <camelia> rakudo-moar f2dd98: OUTPUT«Perl 6 (6.c)␤»

[16:35] <andreoss> okay

[16:35] *** rurban joined
[16:36] *** pierre-vigier left
[16:36] <TimToady> Merry Christmas everyone!

[16:37] *** edehont left
[16:37] <ChoHag> Seems busy.

[16:37] <thowe> Merry Christmas, TimToady 

[16:38] <thowe> Is it here?!?!  Is it here!!!!!?????   =O

[16:38] <TimToady> it's hereabouts :)

[16:38] *** Zoffix joined
[16:38] <thowe> Tell me it's here, for the love of Mike!

[16:39] <thowe> whoever Mike may be

[16:39] <araujo> Merry Christmas / Feliz Navidad !!!

[16:39] <lizmat> TimToady: throttle.t issue should be cleared up now

[16:39] <christkind> thowe: Mike Rowe, the host of Dirty Jobs :)

[16:39] <TimToady> it's not

[16:39] <lizmat> TimToady: lit's not?  :-(

[16:39] <Theophane> Joyeux Noël o/

[16:40] <TimToady> still hung here under TEST_JOBS=4

[16:40] <lizmat> grrr  :-(

[16:40] *** cygx left
[16:41] *** hlafarge_ joined
[16:41] <TimToady> but passes with just one job

[16:43] *** dakkar joined
[16:43] *** hlafarge left
[16:44] <lizmat> TimToady: any idea on which test it hangs ?

[16:44] *** leont joined
[16:44] <christkind> dakkar: buona sera e buon natale!

[16:44] *** eyck left
[16:45] <TimToady> lizmat: if I kill it in hung state, it reports: You planned 47 tests but ran 16.

[16:45] <dakkar> christkind: grazie, anche a te :)

[16:45] <TimToady> so presumably the 1st 16 tests are okay

[16:46] <nemsys> Cheers all, guys&girs, and continue to be so brave and powerful to keep the Camelia's free fly...

[16:46] <Theophane> :)

[16:49] <nine> lizmat: the throttle.t hang is a race condition caused by the block { @a[$_] = 1 } being just too fast. If you slow that block down by adding some extensive loop or the sleep (like in the following test), it is stable.

[16:49] <Theophane> nine: that's a bit sad :(

[16:49] <lizmat> yeah, but the theory was that the race was because of an error in the test

[16:49] <lizmat> apparently it was not just that

[16:50] <nine> lizmat: if I had to guess I would think that some Promise or Supply code only starts listening for "finished" messages when the block is already done.

[16:51] <nine> lizmat: I can easily reproduce it by running while prove6 t/spec/S17-supply/throttle.t ; do true ; done in one terminal and a TEST_JOBS=12 make spectest in another to generate some load

[16:52] <lizmat> TimToady: I assume t/spec/S11-modules/require.t is not failing for you?

[16:53] *** pierre-vigier joined
[16:53] * Zoffix is on t/spec/S17-supply/throttle.t 

[16:53] <Zoffix> waiting...

[16:54] <nine> Zoffix: have a look at ps output. If it's in S state, kill it. It won't finish anymore.

[16:54] *** Ben_Goldberg left
[16:54] *** FreezerburnV joined
[16:54] <RabidGravy> nine! y'know the https://github.com/niner/Inline-Perl5/commit/320187eb606dfe88304bb0034a200b8a0c0687bc is that actually working for you?

[16:54] <Zoffix> "SN+"... whatever that means

[16:55] <Zoffix> nine, it's just lizmat ran the spectest and the hang didn't happen....

[16:55] *** ChoHag left
[16:55] <nine> Zoffix: it's a race condition. It sometimes hangs, sometimes not

[16:55] <Zoffix> ah

[16:55] <nine> RabidGravy: yes, it does

[16:55] <nine> RabidGravy: otherwise I wouldn't have pushed it :)

[16:56] *** sgt_baker joined
[16:57] <RabidGravy> I've reproduced that for Sys::Utmp and get a resources/libraries/libutmphelper.so  but %?RESOURCES<libraries/utmphelper> gives me  ../resources/libraries/utmphelper rather than the actual filename

[16:57] *** christkind left
[16:58] <RabidGravy> weird

[16:58] <nine> RabidGravy: you can pass that to NativeCall and it should find the library, because NativeCall uses $*VM.platform-library-name

[16:58] *** kuma joined
[16:59] *** pmurias joined
[16:59] <Zoffix> k

[16:59] *** kuma is now known as Guest73012

[16:59] <RabidGravy> that's the thing, it isn't doing that

[16:59] <Zoffix> lizmat, repo'ed the hang. waited 6 minutes, but throttle.t did not budge. here's the full output of everything: https://gist.github.com/zoffixznet/1890b8a624dcf5d8efe1

[16:59] *** Ben_Goldberg joined
[16:59] <Zoffix> *repro'ed

[17:00] *** Zoffix left
[17:01] *** Skarsnik_ is now known as Skarsnik

[17:01] *** eyck joined
[17:02] <Skarsnik> m: use NativeCall :TEST; say guess_library_name('../resources/libraries/utmphelper');

[17:02] <camelia> rakudo-moar 8b4fe4: OUTPUT«/home/camelia/../resources/libraries/libutmphelper.so␤»

[17:02] <RabidGravy> ah

[17:04] <RabidGravy> but it doesn't do it if the argument to the trait is a Code

[17:04] <RabidGravy> duh

[17:04] <Skarsnik> Ah yes

[17:04] <RabidGravy> spent hours looking at this

[17:04] <awwaiid> I noticed that Zoffix's trace doesn't say anything about switching roast branch

[17:04] <Skarsnik> I think I screw up a bit the case when you give it a Callable 

[17:05] *** ZoffixWin joined
[17:05] <RabidGravy> just stick it in a constant

[17:05] *** Guest73012 left
[17:05] <autarch> panda is dying if I try to install a module that's already installed

[17:05] <RabidGravy> me-- # can't even read the code

[17:05] <Skarsnik> I remember the old call calling the sub and still doing stuff to it

[17:06] <Skarsnik> I should maybe document the :TEST to be able to call this sub to debug

[17:06] <ZoffixWin> awwaiid, right, though lizmat's fixed was pushed to master

[17:06] <ZoffixWin> autarch, dying or telling you it's already installed?

[17:07] <dalek> rakudo/nom: a9c49a2 | lizmat++ | src/core/Date (2 files):

[17:07] <dalek> rakudo/nom: Give Date its own BUILD

[17:07] <dalek> rakudo/nom: 

[17:07] <dalek> rakudo/nom: making Date creation 1.5x faster

[17:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a9c49a26ee

[17:07] <autarch> ZoffixWin: both!

[17:07] <ZoffixWin> autarch, re-installing usually requires --force argument

[17:07] <autarch> it's not every package

[17:07] <ZoffixWin> hm weird

[17:07] <autarch> telling me it's already installed is fine - dying is not

[17:07] * ZoffixWin nods

[17:07] <autarch> ok, it is every package

[17:07] <autarch> https://github.com/tadzik/panda/issues/269

[17:07] <Skarsnik> Yes panda die when already installed lol

[17:08] <ZoffixWin> 1.5x faster? lizmat++

[17:08] <Skarsnik> how having a build speed up object creation? x)

[17:09] <ZoffixWin> Who cares as long as it does :P

[17:09] <autarch> argh, now I'm getting a segfault with my rewrite of the doc site generator

[17:10] <ZoffixWin> :o

[17:10] <autarch> but not consistently

[17:11] <Skarsnik> that the worse *remember loosing an afternoon for a strlen(ptr + 1) instead of strlen(ptr) + 1*

[17:11] <dalek> doc/autarch/use-perl6-org-design: e15d434 | (Dave Rolsky)++ | html/css/pygments.css:

[17:11] <dalek> doc/autarch/use-perl6-org-design: Don't let pygments.css set a background for the body tag

[17:11] <dalek> doc/autarch/use-perl6-org-design: review: https://github.com/perl6/doc/commit/e15d434fba

[17:11] <dalek> doc/autarch/use-perl6-org-design: 440fa4c | (Dave Rolsky)++ | / (3 files):

[17:11] <dalek> doc/autarch/use-perl6-org-design: Work in progress on using perl6.org design for docs

[17:11] <dalek> doc/autarch/use-perl6-org-design: 

[17:11] <dalek> doc/autarch/use-perl6-org-design: Unfortunately I can't go much further without making Pod::To::HTML more

[17:11] <dalek> doc/autarch/use-perl6-org-design: flexible. Right now it hard-codes too much HTML.

[17:11] <dalek> doc/autarch/use-perl6-org-design: review: https://github.com/perl6/doc/commit/440fa4c7b3

[17:11] <dalek> doc/autarch/use-perl6-org-design: ca73df5 | (Dave Rolsky)++ | / (15 files):

[17:11] <dalek> doc/autarch/use-perl6-org-design: Work in progress on rewriting site generation to use my new Pod::To::HTML

[17:11] <dalek> doc/autarch/use-perl6-org-design: review: https://github.com/perl6/doc/commit/ca73df5671

[17:11] <dalek> doc/autarch/use-perl6-org-design: 1500f10 | (Dave Rolsky)++ | lib/DocSite/Generator.pm:

[17:11] <dalek> doc/autarch/use-perl6-org-design: use v6, uncomment mkdir, and show percentage on progress bars

[17:11] <dalek> doc/autarch/use-perl6-org-design: review: https://github.com/perl6/doc/commit/1500f10cfb

[17:11] <dalek> doc/autarch/use-perl6-org-design: dd61a61 | (Dave Rolsky)++ | lib/DocSite/Pod/To/HTML.pm:

[17:11] <dalek> doc/autarch/use-perl6-org-design: use v6 in lib files

[17:11] <dalek> doc/autarch/use-perl6-org-design: review: https://github.com/perl6/doc/commit/dd61a61fc7

[17:11] <dalek> doc/autarch/use-perl6-org-design: 02fa834 | (Dave Rolsky)++ | generate-site.p6:

[17:11] <dalek> doc/autarch/use-perl6-org-design: Fix formatting in generate-site.p6

[17:11] <dalek> doc/autarch/use-perl6-org-design: review: https://github.com/perl6/doc/commit/02fa834e95

[17:11] <autarch> well, that's a lot of noise

[17:11] *** rurban left
[17:11] <autarch> I figured I'd push my branch to the main repo - just ignore me for now

[17:12] <Skarsnik> most of the time you are lucky because malloc round to some value, but sometime not x)

[17:14] <leont> Given a list of pairs, how do I iterate it by $key, $value?

[17:14] <Skarsnik> .kv

[17:14] *** kjs left
[17:14] <Theophane> http://www.bbc.com/news/uk-england-suffolk-34993079 <= news from England!

[17:14] <nine> RabidGravy: aah...too bad. I actually had code ready that would resolve the full .so name when accessing $*RESOURCES, but did not commit it since everything seemed to be fine without

[17:14] <Skarsnik> you can even write (1 , 2 , 3).kv and you get indice + value with kv

[17:15] <leont> I mean the pair key, not the list index

[17:15] <leont> There must be a cute way to unpack it, right?

[17:15] <Skarsnik> I am not sure to understand what you want then x)

[17:15] *** xfix joined
[17:16] <TimToady> m: for :a<foo>, :b<bar> -> (:$key, :$value) { say "$key $value" }

[17:16] <camelia> rakudo-moar a9c49a: OUTPUT«a foo␤b bar␤»

[17:16] <leont> flatmap(*.kv) seems to do the trick

[17:17] <TimToady> at some point we'll allow => in a signature, but we never snuck that in

[17:17] <leont> TimToady: that doesn't look logical to me, but if it works…

[17:17] <TimToady> binding named parameters to an object looks for methods of that name

[17:17] <TimToady> and pair has .key and .value

[17:18] <lizmat> nine: I think you're missing the fact that someone might actually try to install a module a second time without intending to

[17:18] <lizmat> e.g. if it is part of a dependency ?

[17:19] <Skarsnik> m: use NativeCall :TEST; say guess_library_name('foo', Version);

[17:19] <camelia> rakudo-moar a9c49a: OUTPUT«5===SORRY!5=== Error while compiling /tmp/PxT91k0PO_␤Calling guess_library_name(Str, Version) will never work with declared signature ($lib)␤at /tmp/PxT91k0PO_:1␤------> 3use NativeCall :TEST; say 7⏏5guess_library_name('foo', Version);␤»

[17:19] <lizmat> in any case, it would be nicer if panda would just react with "already instaled  :-)

[17:19] <Skarsnik> m: use NativeCall :TEST; say guess_library_name('foo', Version.new());

[17:19] <camelia> rakudo-moar a9c49a: OUTPUT«Too many positionals passed; expected 1 argument but got 2␤  in sub guess_library_name at /home/camelia/rakudo-m-inst-2/share/perl6/sources/1B9F24F2A3C749A7E79BF4419506F20BF46C2722 line 169␤  in block <unit> at /tmp/7WJdNi52zE line 1␤␤»

[17:19] <Skarsnik> Oh right ><

[17:19] * geekosaur still thinks guessing a version is asking for trouble

[17:19] <Skarsnik> I am not calling the trait

[17:20] <Skarsnik> m: use NativeCall :TEST; say guess_library_name(('foo', Version));

[17:20] <camelia> rakudo-moar a9c49a: OUTPUT«Use of uninitialized value $apiversion of type Version in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub guess_library_name at /home/camelia/rakudo-m-inst-2/share/perl6/sources/1B9F24F2A3C749A7E79BF…»

[17:20] <nine> lizmat: yes, the error message can certainly be improved :) If panda tries to install a dependency, that's already installed, it's clearly a bug.

[17:20] <lizmat> and I think that is what's happening, then...

[17:20] <TimToady> the already installed message should mention --force too

[17:21] <leont> TimToady: how do I use that in a map?

[17:21] <autarch> nine: having panda _die_ is not an ok behavior!

[17:21] <leont> Switching trains & #back in 5 minutes

[17:21] <nine> Sounds like very low hanging fruit for one of the people who want a better installations behavior :)

[17:21] <autarch> people forget what they have installed

[17:21] <autarch> nine: right, so please don't close the bug

[17:22] <TimToady> this kinda falls in the category of throwing exception for things that are not all that exceptional

[17:22] <TimToady> *tions

[17:22] <nine> autarch: reopened

[17:23] <autarch> nine: it's also important that it not actually die - if you run "panda install URI File::Temp" and URI is installed, it should still install File::Temp

[17:23] <timotimo> i'm back, what did i miss?

[17:23] <nine> TimToady: it's exceptional from the repository perspective, because it expects the installation manager to be smarter. But panda should handle the situation more gracefully.

[17:24] <nine> autarch: yes, like I said. A good bug for a beginner to get into panda's code base.

[17:25] <autarch> I'm just trying to make a for a better bug report - "X should be fixed because of Y" is better than "X should be fixed"

[17:25] * [Coke] gets to work...

[17:25] <TimToady> \o/

[17:25] <TimToady> I already bumped moarvm for you

[17:26] *** leont left
[17:26] <TimToady> (in nqp)

[17:26] <timotimo> oh, release time? :)

[17:27] <TimToady> "Well, what did you expect on Christmas?"  --Ebenezer "TimToady" Scrooge

[17:27] <Skarsnik> Where I can see the tickets I opened in RT? 

[17:27] <lizmat> [Coke]: does that imply you don't want to see any commits anymore ?

[17:28] *** Phagus joined
[17:28] <TimToady> well, we should kinda be going easy on those anyway

[17:28] <Phagus> It's Christmas day. Larry said...

[17:29] <TimToady> He said it'll still be Christmas somewhere in the world when we release. :)

[17:29] * TimToady hasn't thought much about the Changelog though...

[17:29] <lizmat> the only behavioural thing I'd like to fix, is to not allow timezones that are not multiiples of 60

[17:30] <dakkar> Changelog: Perl 6 v0.0 - initial release

[17:30] <TimToady> lizmat: that would be antisocial

[17:30] <autarch> lizmat: do you mean multiples of 60 minutes? that'd be wrong

[17:30] <dakkar> seconds

[17:30] <autarch> ah

[17:30] <lizmat> no, seconds

[17:30] <TimToady> whew!

[17:30] <TimToady> I wouldn't consider the absence of such a check a blocker :)

[17:30] <lizmat> ok

[17:30] <nine> lizmat: do we anticipate, that there won't be timezones that are defined by fractions of seconds anymore?

[17:31] <dakkar> nine: ask Zefram :)

[17:31] <lizmat> fractions of seconds?   ???

[17:31] <nine> Wasn't it even a Dutch time zone that did that?

[17:31] <dakkar> also, no, timezone are defined to the minute

[17:31] <lizmat> anyway, it now warns when stringifying a DateTime with such a timezone

[17:32] <dakkar> lizmat++ # keeping up with Zefram

[17:32] <lizmat> which I think is stupid: if we allow such timezones, we shouldn't warna about them

[17:32] <autarch> actually, there are time zones with second offsets if you look at the Olson database

[17:32] <lizmat> autarch: there are ???

[17:32] <TimToady> let's please just be a little bit slushy, if not full code freeze; it's these last-minute tweaks that sometimes blow things up

[17:32] <peteretep> dakkar: merry xmas

[17:32] <autarch> the Olson db has some more or less made up zones to account for pre-standard times

[17:32] <lizmat> seconds?  I knew of mintes

[17:32] <lizmat> ok, post 6.c it is then

[17:33] <dakkar> peteretep: thanks, you too :)

[17:33] <autarch> lizmat: I'll double check

[17:33] <nine> lizmat: Amsterdam Time or Dutch Time: The exact timezone was GMT +0h 19m 32.13s until March 17, 1937, when it was simplified to GMT +0h 20m.

[17:33] <nine> https://en.wikipedia.org/wiki/UTC+00:20

[17:33] <autarch> lizmat: Zone America/New_York	-4:56:02 -	LMT	1883 Nov 18 12:03:58

[17:33] <Skarsnik> lizmat, should I close https://rt.perl.org/Ticket/Display.html?id=126948 ?

[17:33] <autarch> there's one of these for every named zone

[17:34] <lizmat> ok, so then the warning should go

[17:34] <peteretep> Shouldn't the warning just be able to be disabled?

[17:34] * TimToady is required to go and carve the ham, so don't break anything I wouldn't break...

[17:34] <peteretep> It will be proper to throw the warning in99.9999% of actual use cases

[17:34] *** leont joined
[17:35] <autarch> LMT = Local Mean Time - an approximation of local noon in the named zone

[17:35] <autarch> basically, time before trains - it's semi-meaningless, since another city in the zone had it's own LMT

[17:36] <lizmat> gotcha, I wasn't thinking as far back

[17:36] <peteretep> ISO8601 doesnt support second-lecel offsets

[17:36] <jasabella> merry christmas TimToady :D

[17:37] *** domidumont joined
[17:37] <autarch> peteretep: I'm pretty sure it does

[17:37] * peteretep looks again

[17:38] * autarch looks again too ;)

[17:38] * ZoffixWin look again three

[17:38] <autarch> I had a copy of the standard on my computer at one point ...

[17:38] <ZoffixWin> Wait... what are we looking at? :D

[17:39] <dalek> nqp: aac09db | coke++ | VERSION:

[17:39] <dalek> nqp: bump VERSION

[17:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/aac09dbf28

[17:39] <peteretep> Wikipedia suggests not, although obviously it's not canonical

[17:39] <autarch> I hate that the standard isn't actually open :(

[17:39] <nine> I hate that standards aren't actually open

[17:41] <peteretep> anywho, warnings conceptually exist to tell the user they might be doing something dumb

[17:41] <ZoffixWin> I hate that the bar isn't open

[17:41] <ZoffixWin> Oh, I thought we were doing like a game or something....

[17:41] <ZoffixWin> XD

[17:41] <autarch> oh, I had ISO 3166, not 8601

[17:41] * ZoffixWin may be too drunk to IRC

[17:42] <peteretep> That will be the case in almost every case where a second timezone is specified

[17:42] * leont had expected $foo.^add_method to create an anonymous class, apparently it adds to the main class. Bummer.

[17:43] <leont> Can one anonymize the class of an existing object? If so how?

[17:44] <lizmat> [Coke]: i have a patch for DateTime that will  remove the !%% 60 warning and streamline DateTime stringification, if you'll take it at this point

[17:44] <diakopter> leont: you can close/finalize a class also

[17:44] <autarch> peteretep: I think you're right

[17:45] <leont> Which is less useful for my use-case

[17:45] <autarch> (about ISO)

[17:45] <nine> The infamous "Cannot unbox a type object" that panda throws and that goes away on the second try is caused by "if not $force" in CompUnit::Repository::Installation::install. $force is just an optional Bool argument?!

[17:46] <lizmat> autarch peteretep but maybe it should be warning on object creation, rather than at stringification ?

[17:46] <autarch> I'm not sure it should warn at all - if it does there should probably be a way to suppress it

[17:47] *** dakkar left
[17:48] * lizmat fixed make t/spec/S11-modules/require.t by removing an old copy of Test.pm that lived in .

[17:48] *** sgt_baker left
[17:50] *** leont left
[17:50] *** virtualsue left
[17:52] <jdv79> nine: what?

[17:53] <jdv79> does $force have ill contents?

[17:53] <nebuchadnezzar> ho I Perl6 NFC discuss on lwn...

[17:53] *** skids joined
[17:53] <autarch> lizmat: yes, I think it makes more sense to warn at creation time

[17:56] <peteretep> +1

[17:56] <nine> ==> Successfully installed Task::Star

[17:56] <nine> I've just pushed a fix to panda that allows for this ^^^

[17:56] <jdv79> but is the bug clearly understood?

[17:57] <jdv79> nine++ though in any case

[17:57] <nine> I just set a default value for the $force flag.

[17:57] <nine> As I wrote in the commit message, it doesn't make any sense that we have to do this, but it will improve experience for too many people to not push it right away.

[17:57] <dalek> roast: 759ca2c | lizmat++ | S32- (2 files):

[17:57] <dalek> roast: Skip strange adverb tests to be caught by MMD

[17:57] <dalek> roast: 

[17:57] <dalek> roast: For some yet unknown reason, using a strange adverb that should be

[17:57] <dalek> roast: caught by MMD, does not always work.  Worse, if you skip the first

[17:57] <dalek> roast: test that failed to die, it will not die on the next test.  So for

[17:57] <dalek> roast: now, all such tests are skipped to provide a reliable test result

[17:57] <dalek> roast: for the 6.c release

[17:57] <dalek> roast: review: https://github.com/perl6/roast/commit/759ca2c4dd

[18:00] *** hlafarge_ left
[18:01] *** christkind joined
[18:02] <nebuchadnezzar> erf, the Unicode stuffs are quite rude to understand

[18:02] <jdv79> it was probably the most asked and answered thing in the last day or two

[18:03] <lizmat> Files=1092, Tests=51429, 274 wallclock secs (13.38 usr  3.74 sys + 1683.74 cusr 148.59 csys = 1849.45 CPU)   # first clean spectest for me in a *looong* time

[18:03] *** khw joined
[18:03] <jdv79> why do we have a perl6 group and a perl6 community modules group on github?

[18:03] <nine> I wonder why nobody invested the half hour of debugging necessary (of which the hardest part was adding the --ll-exception in the right place) to find at least a workaround

[18:04] <lizmat> jdv79: hysterical raisins ?

[18:04] *** LLamaRider joined
[18:06] <nine> Answering my own question: I guess people just assume that these bugs are super hard and you have to be a core dev with 5 years of experience to be able to fix them. Luckily both assumptions are wrong. Otherwise I couldn't fix such issues :)

[18:07] *** vivek joined
[18:07] *** vivek is now known as Guest96286

[18:08] <[Coke]> lizmat: do those roast changes need to be merge to 6.c branch?

[18:08] <Guest96286> Perl 6 is releasing today right? 

[18:08] <autarch> someone should maintain a count of how many times that gets asked today ;)

[18:09] <[Coke]> Guest96286: yes, working on it now

[18:09] <nine> jdv79: it is actually a Bool type object which is exactly what I would expect and what should work just fine.

[18:09] <lizmat> [Coke]: c5e65d781d9dd6e86e and 759ca2c4dd906a88bafea61   yes please

[18:09] <Guest96286> cool :-)

[18:09] <[Coke]> autarch: I'm at about 37 this week so far.

[18:09] <timotimo> i bet coke could work faster on the release if he didn't have to spend five minutes every half-hour saying "yeah, i'm working on it right now"

[18:09] <nine> m: my Bool $force; if not $force { say "works" }

[18:09] <camelia> rakudo-moar a9c49a: OUTPUT«works␤»

[18:09] <autarch> [Coke]: are you still working on the release? I just wanted to check ;)

[18:10] *** andreoss left
[18:11] <RabidGravy> right, Sys::Utmp fixed - only one left now

[18:11] <lizmat> ZoffixWin and others looking at why throttle.t hangs: could you try this diff and see if it still hangs? : https://gist.github.com/lizmat/57146a698f9537f7818f

[18:11] <[Coke]> timotimo: I'm having a happy christmas, everything is fine

[18:12] <lizmat> dinner&

[18:12] <jdv79> nine: got me.  'ts why i asked.  super weird.

[18:12] *** pierre-vigier left
[18:12] <[Coke]> someone wants to help they can double check the roast commits in master that aren't in 6.c branch and merge the ones that liz mentioned above and let me know if there are others that need review.

[18:12] <timotimo> :)

[18:13] <timotimo> i'm so exhausted i think i need a nap >_<

[18:13] * flussence gets on deck

[18:14] <flussence> got an ebuild done for moarvm 2015.12 already :)

[18:14] <[Coke]> flussence++

[18:15] *** halto left
[18:15] <[Coke]> Holy crap, I see au in backlog. hio!

[18:15] <flussence> if I can get a decent chunk of free time today I might try and hack at the install-core-dist.pl failure there too, bit more motivated to do something now I know I'm not the only one...

[18:16] *** Guest96286 left
[18:18] *** dragon3 joined
[18:19] <[Coke]> btw, everything thank my uncle in law for moving his christmas gathering to tomorrow, so I didn't have to try to do this from a moving car. :)

[18:19] <jdv79> 11min to install Task::Star without error.  nice.

[18:19] *** kanishka left
[18:20] <[Coke]> (commits) given our current release from nom strategy, yes, please seriously consider if something needs to get in before christmas at ths point.

[18:21] <[Coke]> I'm happy to take liz's datetime patch if it hasn't made it in yet.

[18:22] <[Coke]> and now I'm caught up. :)

[18:22] *** LLamaRider left
[18:22] *** FreezerburnV left
[18:23] <lizmat> [Coke]: verifying build, will then commit patch

[18:23] <jdv79> just curious - anyone know if spectest is clean on win?

[18:24] <[Coke]> git tag | grep 2011.05 # wonder if we can remove the non standard one.

[18:24] *** cygx joined
[18:24] <dalek> rakudo/nom: 98a9c6e | lizmat++ | src/core/DateTime.pm:

[18:24] <dalek> rakudo/nom: Remove warning for !%%60, streamline stringifier

[18:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/98a9c6ee25

[18:24] <[Coke]> jdv79: not having win, I could use some help verifying that. 

[18:24] <lizmat> back to dinner&

[18:24] <jnthn> o/

[18:25] <cygx> jdv79: not clean when using MinGW, but it's been liek that since $forever

[18:25] <jnthn> [Coke]++ # working on release :)

[18:25] <flussence> yayitsjnthn!

[18:25] <jdv79> evening jnthn

[18:25] <timotimo> oh hey jnthn :)

[18:25] <cygx> I've submitted sum patches, but didn't fix everything

[18:25] <cygx> *some

[18:25] <timotimo> m: "%foo"

[18:25] <camelia> rakudo-moar a9c49a: OUTPUT«WARNINGS for /tmp/QVk5WuHRz2:␤Useless use of constant string "%foo" in sink context (line 1)␤»

[18:25] * jnthn continues to be a somewhat ill shadow of his usual self...

[18:25] <jdv79> cygx: oh:(

[18:25] <timotimo> m: say "%foo"

[18:25] <camelia> rakudo-moar a9c49a: OUTPUT«%foo␤»

[18:25] <jnthn> But found energy to show up for a bit :)

[18:25] <timotimo> m: say "%%%foo"

[18:25] <camelia> rakudo-moar a9c49a: OUTPUT«5===SORRY!5=== Error while compiling /tmp/6yKy2Kbixz␤Variable '%foo' is not declared␤at /tmp/6yKy2Kbixz:1␤------> 3say "%%7⏏5%foo"␤»

[18:25] <timotimo> ^- this is kinda dumb :D

[18:26] <jnthn> timotimo: How so?

[18:26] <jnthn> Oh...

[18:26] <jnthn> I see

[18:26] <jnthn> hmm :)

[18:26] <jnthn> No, we won't sneak a patch in for that before the release )

[18:26] <timotimo> no worries

[18:27] *** dakkar joined
[18:27] * [Coke] doesn't like thta the downloads folder for rakudo bits shows an in-progress upload

[18:27] <timotimo> i only stumbled upon it because i fixed URI::Encode, where i had "boo".encode.list.fmt("%%%X", "") to get the same thing it had before with some much more complicated code

[18:28] <[Coke]> http://rakudo.org/downloads/nqp/ now has 2015.12 available.

[18:29] <[Coke]> I am surprised at the number of people asking in here if the release is done. if you make it to #perl6, I feel like you're already using git to checkout nom. :)

[18:29] <timotimo> nah, people just come in here to get a "nope, it was all a lie" answer or something

[18:30] * flussence has a spectest stuck on advent2013-day14.t and... throttle.t. argh

[18:30] <autarch> well, there's been a lot of noise on the net about the release (which is great), and so when people check perl6.org and don't see something to download, this is the next logical stop

[18:30] <[Coke]> ahhh.

[18:30] <timotimo> then post a screenshot on social media and receive all the internet karma for blowing this shady operation sky high

[18:30] <jnthn> [Coke]: Looking at ChangeLog and wondering if (or in addition to) the what's new, we want it to highlight some of the key things Perl 6 provides

[18:30] <ribasushi> [Coke]: one of the first things a user visiting http://perl6.org/ sees is a "Go to #perl6 and someone will be glad to help you get started"

[18:30] <jnthn> [Coke]: Given this one will be read by more people than usual.

[18:30] <jnthn> [Coke]: I'm happy to work on that if you'd like it.

[18:30] <[Coke]> jnthn: I had asked this yesterday - I think for this week we could have 2 lists: big stuff since last monthly release, and: language features.

[18:31] <ribasushi> [Coke]: so I'd expect most visitors now and in the future will not even know what "nom" is

[18:31] <jnthn> OK. I just noticed the ChangeLog is a bit bear too

[18:31] <jnthn> uh, a bit *bare* :)

[18:31] <[Coke]> jnthn: I would love it!

[18:31] <flussence> if I rerun those two tests separately they pass

[18:31] <jdv79> flussence: linux?

[18:31] <flussence> yep

[18:32] <jdv79> oh lookie there.  my run just stalled as you replied on throttle.t:(  fedora here.

[18:32] <jdv79> that's unfortunate

[18:32] <lizmat> flussence: did you try with my patch to Lock.pm ?

[18:32] <flussence> also “S17-supply/wait.t Failed test:  4” and “S17-channel/basic.t Failed test:  17”

[18:32] <flussence> lizmat: is that in nom?

[18:32] <[Coke]> ... have I really done the last 3 releases also? yikes.

[18:32] <lizmat> flussence: no, it's at https://gist.github.com/lizmat/57146a698f9537f7818f

[18:32] <jnthn> [Coke]: Glad it's in the hands of somebody experienced. :)

[18:33] <flussence> oh, I'll give it a try, hang on 10 minutes...

[18:33] <lizmat> flussence++

[18:33] <flussence> those other two tests also passed after retrying...

[18:33] <lizmat> flussence: yup, they're tricky bastards

[18:34] <lizmat> jnthn: my theory is that the problem is somehow in Promise.keep

[18:34] <flussence> (I usually run TEST_JOBS=8, fwiw)

[18:34] <lizmat> jnthn: when it takes the lock, the promise kept yet, so it winds up in the else

[18:34] <lizmat> jnthn: but at time of unlock, *then* it was already kept (or at least waiting for the lock in kept)

[18:35] <jnthn> lizmat: I'm...not keen to be patching that code path this close to the release...

[18:35] <lizmat> ok, then we'll have to live with it

[18:35] <jnthn> Yeah, I'm worried of doing something worse.

[18:36] <jnthn> If the answer is "throttle.t doesn't make the 6.c cut" then I can live with that, if others also can.

[18:36] <dalek> doc: 535899f | skids++ | doc/Language/control.pod:

[18:36] <dalek> doc: Fix some links... maybe.

[18:36] <dalek> doc: review: https://github.com/perl6/doc/commit/535899f2d1

[18:37] <flussence> right, spectest take 2...

[18:42] <Woodi> hi everyone *today* :)

[18:43] <Woodi> Merry Christmas and overall Good Times for everyone :)

[18:43] *** Phagus left
[18:44] * lizmat waits for flussence's result before committing skipping of hanging tests

[18:44] <flussence> almost done, but I already see a "13/47" in the status line...

[18:45] <flussence> grr, yep it's throttle.t again.

[18:45] <dalek> doc: 3a096df | skids++ | doc/Language/control.pod:

[18:45] <dalek> doc: Be accurate about what is said in example comment

[18:45] <dalek> doc: review: https://github.com/perl6/doc/commit/3a096df78e

[18:46] <flussence> less other failures than last time though

[18:47] <flussence> Files=1092, Tests=51395, 532 wallclock secs (15.06 usr  3.18 sys + 1828.20 cusr 70.29 csys = 1916.73 CPU)

[18:47] <flussence> Result: FAIL

[18:47] <flussence> just that hang and S17-channel/basic.t again

[18:47] <dalek> roast: 9b7b71f | lizmat++ | S17-supply/throttle.t:

[18:47] <dalek> roast: Remove potentially hanging tests for 6.c release

[18:47] <dalek> roast: review: https://github.com/perl6/roast/commit/9b7b71f341

[18:47] <lizmat> [Coke]: ^^^

[18:48] <lizmat> fwiw, I guess t/spectest.data is as much a part of 6.c as is roast

[18:49] *** [Sno] left
[18:50] *** dragon3 left
[18:53] <dalek> rakudo/nom: 56f428f | coke++ | tools/build/NQP_REVISION:

[18:53] <dalek> rakudo/nom: [release] bump NQP revision

[18:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/56f428f64a

[18:53] <dalek> rakudo/nom: 7486252 | coke++ | VERSION:

[18:53] <dalek> rakudo/nom: [release] bump VERSION

[18:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/74862525f2

[18:53] <dalek> rakudo/nom: 834d7e4 | coke++ | docs/release_guide.pod:

[18:53] <dalek> rakudo/nom: about to be history, move release

[18:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/834d7e47b2

[18:53] *** bpmedley_ left
[18:53] <RabidGravy> [Coke]++

[18:54] <dalek> doc: 47091a7 | skids++ | doc/Language/control.pod:

[18:54] <dalek> doc: Mention that "if 0 {...}" slips.

[18:54] <dalek> doc: review: https://github.com/perl6/doc/commit/47091a7cbd

[18:54] <[Coke]> lizmat: 6.c had test files removed that aren't to be run.

[18:54] <lizmat> was throttle.t among them ?

[18:55] <flussence> (otoh, it's a very good sign if I'm only getting the same test failures as everyone else - I've been using --has-libuv --has-libatomic_ops for years now)

[18:55] <[Coke]> no, it was driven off "is this file not in t/spectest.data"

[18:56] <[Coke]> so if there was a recent change to t/spectest data, that needs to be reflected in the 6.c branch also.

[18:56] <[Coke]> but it looked like you just fudged something.

[18:56] <dalek> rakudo/nom: 0053934 | jnthn++ | docs/announce/2015.12.md:

[18:56] <dalek> rakudo/nom: First pass at an overview of Perl 6 for announce.

[18:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0053934d04

[18:56] <jnthn> Review of ^^ welcome; bikeshedding vaguely tolerated. :)

[18:57] <flussence> you can't not mention how good it is at being a glue language!

[18:58] <jnthn> :)

[18:58] <jnthn> flussence: Concrete suggestion of where to incorporate that?

[18:58] * jnthn will take it given that :)

[18:58] <flussence> in the first point, imo

[18:58] <jnthn> Yeah

[18:58] <jnthn> Is anyone working on ChangeLog?

[18:58] <lizmat> jnthn: and glue and NatveCall and Inline::Perl5 ?

[18:59] <flussence> Perl 5 is a pretty good system glue thing, but 6 is pretty damn amazing with ^^

[18:59] <jnthn> ooh, maybe glue deserves a point of its own to mention Inline::Perl5 and NativeCall

[18:59] *** rurban joined
[18:59] *** pierre-vigier joined
[19:00] *** pierre-vigier left
[19:00] *** pierre-vigier joined
[19:01] <grondilu> m: say ([o] *.rotate(1) xx 2)([^10]);

[19:01] <camelia> rakudo-moar 98a9c6: OUTPUT«[2 3 4 5 6 7 8 9 0 1]␤»

[19:01] <grondilu> m: say ([o] *.rotate(1) xx 4)([^10]);

[19:01] <camelia> rakudo-moar 98a9c6: OUTPUT«Too many positionals passed; expected 1 argument but got 10␤  in block <unit> at /tmp/upY2Au8cAr line 1␤␤»

[19:01] * skids puts his paintcan down because the bikeshed is already the right color.

[19:01] <autarch> is there any agreed upon standard for Perl 6 module Changes files?

[19:02] <dalek> rakudo/nom: c4ce4f0 | jnthn++ | docs/announce/2015.12.md:

[19:02] <dalek> rakudo/nom: Note on glue language-ness; flussence++, lizmat++

[19:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c4ce4f0022

[19:02] <autarch> so far I can't even find any Changes files in distros at all :(

[19:02] <flussence> I think most people just leave that to git changelogs...

[19:02] <autarch> that's not a changes file

[19:03] <jnthn> lizmat, flussence: Let me know if ^^ covers it :)

[19:03] <jnthn> (or more important, if it doesn't)

[19:03] <diakopter> well there's been no deprecations yet

[19:03] <autarch> I'll jut go with markdown for now, I guess

[19:03] <flussence> jnthn: looks fine to me

[19:03] <skids> autarch: it could be if you use it right -- summarize changes when adding tags.

[19:03] <autarch> skids: yeah, that'd work

[19:04] <skids> But of course that does not help tarball users unless you extract it.

[19:04] <flussence> (could mention it can be extended to more, but maybe that's overselling it a bit)

[19:04] <[Coke]> I'm getting an error in m-install. :|

[19:04] <RabidGravy> there all 29 modules tested and fixed

[19:05] <flussence> autarch: the way I've seen people outside perl6 do it is just generate a changelog from git when making tarballs. That's pretty trivial, there's even a git command to do it

[19:05] <autarch> git changelogs make for terrible changes documentation

[19:05] <autarch> unless you're very very careful about what you commit and your commit messages

[19:05] <flussence> yeah, good point

[19:06] <autarch> "Removed extra whitespace" - I don't care, please don't tell me that, ever ;)

[19:06] <flussence> that's what `git-rebase -i` is for, but who does those :)

[19:07] * [Coke] wonders if it's .precomp directory related.

[19:08] <flussence> [Coke]: might be. is it around install-core-dist.pl?

[19:08] *** lichtkind_ joined
[19:09] <[Coke]> Aye. I'm doing a really clean and trying again.

[19:09] <lichtkind_> is POD a slang?

[19:10] <woolfy> jnthn: in case you need that overview of answers to "Why Perl 6?" that you and I and lizmat worked on, the file can be found here: https://github.com/wendyga/Perl6Brochure/blob/master/Perl%206%20Brochure.odt

[19:10] <flussence> that's what me and atweiden were seeing last night... dammit, I thought it was just a weird distro problem

[19:11] *** tef joined
[19:11] <jnthn> woolfy: Thanks; I had that in mind while I was writing it :)

[19:11] <autarch> flussence: I actually wouldn't want to rebase to combine tidying commits with substantial changes

[19:11] <jnthn> [Coke]: I'm working on the ChangeLog btw

[19:11] <[Coke]> jnthn++ # you're the best, thanks!

[19:12] *** ftrain2000 joined
[19:13] <dalek> rakudo/nom: a71479b | TimToady++ | docs/ChangeLog:

[19:13] <dalek> rakudo/nom: add TimToady's changelog entries

[19:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a71479b49d

[19:13] <TimToady> okay, Changelog is free for someone else to edit now

[19:14] <atweiden> flussence: can i look at your ebuild?

[19:14] <jnthn> grmbl, now I'll have to merge :P

[19:14] <TimToady> haha, I win :P

[19:14] <flussence> atweiden: yeah, https://gitlab.com/flussence/perl6-overlay/blob/master/dev-lang/rakudo/rakudo-9999.ebuild

[19:15] <flussence> the last line's the only important bit in it, really

[19:15] * TimToady will only be paying half a mind for a bit, we're doing presents

[19:15] <flussence> also I can reproduce the failures if I system-install moar/nqp and build my local rakudo git clone against those...

[19:16] <atweiden> flussence: did you manage to install from nom yet?

[19:17] <flussence> nope, 2015.11 is fine

[19:18] <woolfy> jnthn++

[19:18] *** virtualsue joined
[19:19] *** mr_ron joined
[19:19] <[Coke]> ./perl6-m tools/build/install-core-dist.pl

[19:19] <[Coke]> No writeable path found

[19:19] <flussence> that's the one, yeah :(

[19:19] *** Juerd joined
[19:19] <lizmat> [Coke]: are you running under root ?

[19:19] <atweiden> [Coke] it's due to a change in Makefile-Moar

[19:20] <[Coke]> no, I'm running as me.

[19:20] <[Coke]> and installing to ./install

[19:21] <[Coke]> atweiden: that file has changed since Dec 1st.

[19:22] <AlexDaniel> oh wow, what a backlog

[19:22] * [Coke] tries an even cleaner start. :|

[19:22] <TimToady> btw, my throttle still hung

[19:22] <AlexDaniel> Bailador is indeed not so nice. For example, you cannot use POST parameters right now

[19:22] <flussence> [Coke]: I don't think any amount of cleaning will fix this one :/

[19:22] <AlexDaniel> See this https://github.com/tadzik/Bailador/pull/44

[19:22] <TimToady> and my adverbs.t still didn't

[19:22] <lizmat> TimToady: still at test 17 ?

[19:23] <lizmat> adverbs.t never hung, did they ?

[19:23] <lizmat> only (not) fail when they were supposed to ?

[19:23] <TimToady> test 21

[19:23] *** kjs joined
[19:23] * flussence starts a TEST_JOBS=1 run and disappears for 5-10 mins

[19:24] <dalek> doc: 81f6147 | skids++ | doc/Language/control.pod:

[19:24] <dalek> doc: Sync some comments with reality, provide a non-slippy example

[19:24] <dalek> doc: review: https://github.com/perl6/doc/commit/81f6147a70

[19:24] <[Coke]> I was trying to do the release out of my long term rakudo dev copy; haven't had trouble with that in the past, or with builds in recent days, but it's possible a fresh clone will work.

[19:24] <jnthn> Why did I offer to do the ChangeLog when we had 800 commits?! :)

[19:25] <[Coke]> (also, I almost NEVER do --backends=ALL, which I am doing as part of the release)

[19:25] <[Coke]> jnthn++ # you're the best, thanks!

[19:25] * [Coke] adds that to a shortcut key.

[19:25] <atweiden> [Coke] are you running make DESTDIR=... install by chance?

[19:25] <lizmat> Files=1092, Tests=51419, 281 wallclock secs (13.77 usr  4.09 sys + 1717.74 cusr 151.43 csys = 1887.03 CPU)  # clean spectest for VERSION 2015.12

[19:26] <RabidGravy> yay

[19:27] <RabidGravy> everyone++

[19:27] <[Coke]> atweiden: no

[19:27] <dalek> roast: d51b8cb | lizmat++ | S17-supply/throttle.t:

[19:27] <dalek> roast: Don't run more tests that can hang for some

[19:27] <dalek> roast: review: https://github.com/perl6/roast/commit/d51b8cbe43

[19:27] <lizmat> TimToady [Coke]  ^^^

[19:28] *** mr_ron left
[19:28] <TimToady> running again

[19:29] <TimToady> I assume that's in master

[19:29] <[Coke]> looks like. we still need to merge any recent changes from master to 6.c if that makes sense.

[19:29] * [Coke] 's leg hair starts to singe as he builds the JVM backend...

[19:30] <lizmat> TimToady: yes

[19:30] <TimToady> [Coke]: don't you need a mainframe for that?

[19:30] <[Coke]> to singe my leg hair? ;)

[19:31] * lizmat suggests a paint stripper

[19:31] <TimToady> oh, I thought you said "sing"

[19:32] <cygx> master-master-nom spectest result on mingw: https://gist.github.com/cygx/c6a270471dddceae9682

[19:33] <cygx> bye, #perl6, and happy release day o/

[19:33] *** cygx left
[19:33] *** virtualsue left
[19:33] *** BenGoldberg_ joined
[19:34] *** virtualsue joined
[19:34] <TimToady> in any event, I'm not sure JVM supports unsinged yet

[19:35] *** regreg joined
[19:35] *** BenGoldberg_ left
[19:35] <rindolf> it may support unsung integers.

[19:36] <dalek> doc: b385a5d | skids++ | doc/Language/control.pod:

[19:36] <dalek> doc: Remove some spurious "#->"s and sync a couple comments to say output

[19:36] <dalek> doc: review: https://github.com/perl6/doc/commit/b385a5da48

[19:36] <dalek> doc: 9a5d617 | skids++ | doc/Language/control.pod:

[19:36] <dalek> doc: avoid a redeclaration warning if example code is run

[19:36] <dalek> doc: review: https://github.com/perl6/doc/commit/9a5d617ea3

[19:36] <RabidGravy> I'm fairly certain I couldn't actually put this laptop on my la[ safely

[19:36] <RabidGravy> lap

[19:36] *** Ben_Goldberg left
[19:37] *** BenGoldberg_ joined
[19:37] <TimToady> well, throttle.t didn't *hang* this time, but...

[19:37] <dalek> tablets: 78a2c9d | (Herbert Breunung)++ | docs/ (4 files):

[19:37] <dalek> tablets: first half of new concise B navigation

[19:37] <dalek> tablets: review: https://github.com/perl6/tablets/commit/78a2c9dead

[19:37] <lizmat> that's because I removed all of the potentially hanging tests

[19:38] <TimToady> but it says it failed 1/17

[19:38] <lizmat> Files=1139, Tests=125759, 407 wallclock secs (23.41 usr  4.87 sys + 2600.88 cusr 171.78 csys = 2800.94 CPU)  # make stresstest

[19:38] <TimToady> will know which one in a bit

[19:38] <lizmat> stresstest had one fail in t/spec/S17-procasync/stress.t

[19:38] <TimToady> t/spec/S32-io/IO-Socket-Async.t failed 3/6

[19:39] <TimToady> this is all with =4

[19:39] <FROGGS> woolfy: the "how-to-get-rakudo" link appears twice at the top of the second page of the brochure

[19:39] *** cbk_ joined
[19:40] <[Coke]> yup, still dies even with a completely fresh install. I suspect no one has done --backends=ALL in a while.

[19:40] *** cbk left
[19:40] <TimToady> throttle failed test 3

[19:40] <lizmat> [Coke]: I have separate clones for Moar and JVM  :-(

[19:41] <TimToady> on IO-Socket-Async, failed 1, then: planned 6 tests but ran 4

[19:42] *** vendethiel- left
[19:42] <TimToady> so failed 1, passed 2,3,4, blew up

[19:42] *** vendethiel joined
[19:42] <[Coke]> well, if my fix is remove the ALL option from the backend configurator, I think that's fine. 

[19:43] <[Coke]> checking to see if it works sans ALL

[19:43] <lizmat> TimToady: test 3 is timing related, may need a little tweak

[19:45] <[Coke]> yup. that was it.

[19:47] <dalek> roast: e226d6a | lizmat++ | S17-supply/throttle.t:

[19:47] <dalek> roast: Only use one now, instead of 4

[19:47] <dalek> roast: 

[19:47] <dalek> roast: Should be cheaper, so more likely to succeed because of larger

[19:47] <dalek> roast: maximum value range

[19:47] <dalek> roast: review: https://github.com/perl6/roast/commit/e226d6a923

[19:47] <lizmat> TimToady [Coke]  ^^^

[19:47] *** sno joined
[19:47] <lizmat> fwiw, t/spec/S17-procasync/stress.t also fails when run by itself

[19:48] *** pmurias left
[19:48] <dalek> rakudo/nom: 759b5cd | jnthn++ | docs/ChangeLog:

[19:48] <dalek> rakudo/nom: Fill out the ChangeLog.

[19:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/759b5cd5f4

[19:49] <jnthn> Phew!

[19:51] <lizmat> jnthn: List.first?   

[19:51] <lizmat> List.head / tail you mean?

[19:51] <dalek> rakudo/nom: bc35c92 | jnthn++ | docs/announce/2015.12.md:

[19:51] <dalek> rakudo/nom: Call out our excellent Unicode support too.

[19:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bc35c92a5d

[19:51] <jnthn> lizmat: I was just following the commit messages :P

[19:52] <lizmat> ah, that one... ok  :-)

[19:53] <lizmat> List.first() and List.first(:end)

[19:54] <jnthn> Please tweak it if you know better :)

[19:54] <flussence> Files=1092, Tests=51419, 1770 wallclock secs (10.07 usr  4.81 sys + 1486.49 cusr 77.22 csys = 1578.59 CPU)

[19:54] <jnthn> Same to everyone else, though the ChangeLog is so epic...

[19:54] <flussence> Result: PASS

[19:54] <flussence> :D

[19:55] * lizmat is tweaking

[19:55] <jnthn> woolfy++ # sending me the doc, reminidng me I should mention Unicode stuffs in the announce :)

[19:56] <woolfy> FROGGS: thanks, will update the file and upload

[19:57] <[Coke]> ... crap, I might have caused my own issues with ALL locally. re-retesting!

[19:57] <dalek> rakudo/nom: 88c778a | lizmat++ | docs/ChangeLog:

[19:57] <dalek> rakudo/nom: ChangeLog tweaks

[19:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/88c778a77a

[19:58] *** lichtkind left
[19:59] <Woodi> maybe mentioning Perl6 is good at prototyping stuff ? AlexDaniel mentioned lastly v6 code is shorter then pseudo-code :)

[19:59] <jnthn> lizmat: Nice catches :)

[20:00] <AlexDaniel> it is :)

[20:00] *** simcop2387 left
[20:00] *** rjbs left
[20:00] *** darutoko left
[20:01] *** zostay left
[20:01] *** geekosaur left
[20:01] <TimToady> IO-Socket-Async.t failed test 1, everything else clean

[20:01] <TimToady> (at =4)

[20:02] *** domidumont left
[20:02] <TimToady> run bare 'make spectest' now

[20:02] <TimToady> *ning

[20:02] <nine> jnthn: if I may bikeshed a little: I think it would be a good idea to use the words "backwards compatibility" in combination with Inline::Perl5. This really sets us apart from other well known languages.

[20:03] <TimToady> yeah, who else supports Perl 5 compatibility?

[20:04] <nine> or rather some ancestor ;)

[20:04] <TimToady> ohhh, is that what you meant? ;)

[20:07] *** rurban left
[20:08] <timotimo>    + Make (1,2,3)[2] = 4 and (1,2,3)[3] give same error

[20:08] *** hankache joined
[20:08] <timotimo> os?

[20:08] <timotimo> m: say (1,2,3][3]

[20:08] <camelia> rakudo-moar a71479: OUTPUT«5===SORRY!5=== Error while compiling /tmp/FLBwtfuErq␤Unable to parse expression in parenthesized expression; couldn't find final ')' ␤at /tmp/FLBwtfuErq:1␤------> 3say (1,2,37⏏5][3]␤    expecting any of:␤        statement end␤        …»

[20:08] <nine> TimToady: aren't you supposed to handle some presents right now? ;)

[20:09] <timotimo> m: say (1,2,3)[3]

[20:09] <camelia> rakudo-moar a71479: OUTPUT«Nil␤»

[20:09] <timotimo> m: say (1,2,3)[2] = 4

[20:09] <camelia> rakudo-moar a71479: OUTPUT«Cannot modify an immutable Int␤  in block <unit> at /tmp/UziRryGqSe line 1␤␤»

[20:09] <hankache> hola #perl6

[20:09] <timotimo> m: say (1,2,3)[3] = 4

[20:09] <camelia> rakudo-moar a71479: OUTPUT«Cannot modify an immutable Nil␤  in block <unit> at /tmp/Dj3FsZeDy_ line 1␤␤»

[20:09] <timotimo> oh, like that

[20:09] <TimToady> we're opening in order of increasing age, and there are still several before me

[20:09] <[Coke]> ok. the weird install error I got was my own fault. However, the jvm backend fails to install (which I believe is a known issue)

[20:09] <hankache> hiya timotimo nine TimToady [Coke]

[20:09] <FROGGS> [Coke]: it is

[20:10] <hankache> hello FROGGS

[20:10] <timotimo> hi you

[20:10] <FROGGS> hi hankache 

[20:10] <jnthn> nine: I'm struggling to see how to word it, but +1 if you want to tweak that :)

[20:11] <hankache> hello jnthn

[20:11] <timotimo> hankache: i'm not sure anybody knows that i wanted to put your perl6intro into the star release

[20:11] <dalek> doc: 0ac8b6c | skids++ | doc/Language/control.pod:

[20:11] <dalek> doc: Improve with/orwith section examples

[20:11] <dalek> doc: review: https://github.com/perl6/doc/commit/0ac8b6c1c6

[20:11] <timotimo> also, it'd be awesome if we had a new download rakudo page somehow

[20:12] <jnthn> o/ hankache 

[20:12] <hankache> timotimo i have no problem

[20:12] <[Coke]> I don't know who aside from pmichaud has access to rakudo.org

[20:12] <jdv79> is everyone taking off til the new year?

[20:12] <[Coke]> We should update perl6.org once the rakudo.org downloads are in place.

[20:12] <diakopter> [Coke]: pmichaud said to email him to ask for access

[20:13] <jdv79> or anyone

[20:13] <mst> Woodi: my pseudocode tends to look about half way between http://p3rl.org/Moops and perl6, yeah

[20:13] <hankache> Dear All, timotimo suggested that we put put the perl6intro.com text in rakudo star.

[20:13] <hankache> any objections?

[20:13] <timotimo> i *think* i have access to rakudo.org

[20:13] <[Coke]> diakopter: I don't think we need to update rakudo.org; perl6.org is more important.

[20:14] <stmuk> +1 for a new download page

[20:14] <jdv79> ditto

[20:14] <jnthn> +1

[20:14] <hankache> +1

[20:15] <hankache> a SINGLE download page (no swinging from perl6.org to rakudo.org to github/rakudobrew)

[20:15] <[Coke]> a new download page where? http://rakudo.org/downloads/ ?

[20:15] <hankache> [Coke] perl6.org

[20:16] <FROGGS> that might make sense indeed

[20:16] <hankache> host all instructions on a single page

[20:16] <stmuk> a download page on perl6.org with shorter install instructions

[20:16] <hankache> ++ what stmuk said

[20:16] <mst> also, I (or somebody) should patch rakudobrew so it still creates the shims if you don't have the dir in $PATH

[20:17] * mst did 'bin/rakudobrew build moar' and was most confused by that

[20:17] <hankache> are the MSI's for windows ready?

[20:17] <timotimo> hankache: um, how is it suppesod to be ready?

[20:18] <hankache> timotimo ready or not here I come ;)

[20:18] <hankache> new Perl 6 motto ^^

[20:18] <hankache> :D

[20:18] <diakopter> I think moritz has the .msi code signing keys?

[20:20] <hankache> well if we can let windows user have MSI and OSX use homebrew it would be great. We Linux users can always use rakudobrew

[20:20] <[Coke]> hankache: first is the moarvm release. then the nqp release. that is where we are now. then the compiler release (which is all that is on deck for today). then the star release. THEN the .msi release.

[20:20] <timotimo> i didn't know we could sign msi keys

[20:20] <hankache> [Coke] indeed

[20:21] *** espadrine joined
[20:21] <[Coke]> https://gist.github.com/coke/a98c654a92e8bcfcc105 - OS X test failures.

[20:21] <jdv79> arguably a one shot big bang release would have been more shock and awe ish

[20:21] <thowe> rakudobrew seems to work fine on OpenBSD.  You just need to alter your login.conf to up a mem limit to compile.

[20:22] <thowe> PM helped me figure that out at YAPC

[20:22] * hankache hopes that one day he can write code and help not only in documentation

[20:23] <jnthn> Documentation is also really important.

[20:23] <TimToady> bare 'make spectest' also fails t/spec/S32-io/IO-Socket-Async.t test 1, but maybe it's just my name service?

[20:23] <timotimo> you can say it's more important than code

[20:23] *** FROGGS left
[20:23] <[Coke]> # Failed test 'Async listen on bogus hostname'

[20:23] <[Coke]> # at t/spec/S32-io/IO-Socket-Async.t line 12

[20:23] <[Coke]> # expected: 'Failed to resolve host name'

[20:23] <[Coke]> #      got: 'address not available'

[20:24] *** gist_nb joined
[20:24] <TimToady> yeah, that

[20:24] <[Coke]> Where is that string coming from?

[20:24] <jnthn> That's an overspecific test...

[20:24] <hankache> thank you

[20:24] <jdv79> timotimo: you can say anything.  doesnt make it real;)

[20:24] <[Coke]> jnthn: do you see how to adjust it?

[20:25] *** bpmedley_ joined
[20:26] <[Coke]> t/spec/S17-procasync/stress.t ..

[20:26] <[Coke]> 1..1

[20:26] <[Coke]> Internal error: zeroed target thread ID in work pass

[20:26] <dalek> roast: edc672b | jnthn++ | S32-io/IO-Socket-Async.t:

[20:26] <dalek> roast: Don't rely on an unreliable message.

[20:26] <dalek> roast: review: https://github.com/perl6/roast/commit/edc672bd7f

[20:27] <lizmat> [Coke]: since jnthn will not tweak anything in that area atm, suggest we remove that file from stress test

[20:27] <[Coke]> jnthn++

[20:27] <[Coke]> the stress.t test?

[20:27] <lizmat> [Coke]: yes

[20:27] <jnthn> Yeah, let's...that would be a MoarVM fix and a hard to find one at that :/

[20:27] <[Coke]> ok. if I remove it from spectest.data, it's going to get removed from teh 6.c branch also.

[20:27] <jnthn> That's fine.

[20:28] <[Coke]> which seems reasonable. we can add it back in when it's working.

[20:28] <jnthn> [Coke]: ooc, what happened with 6.c and tests that "use experimental"?

[20:28] <[Coke]> okee dokey.

[20:28] <jnthn> Were they excluded?

[20:28] <woolfy> FROGGS: I changed the file already 2 weeks ago, never uploaded it...  (I am not quite familiar with github yet), did now (lizmat++ for help).

[20:28] <[Coke]> no, it wa a straight copy to save a snapshot.

[20:28] <jnthn> ok

[20:29] <[Coke]> if we decide we want to be more clever, we can do that. For now, I'll add a note to the README that anything that has an experimental in it isn't technically part of the spec.

[20:29] <jnthn> wfm

[20:30] <dalek> rakudo/nom: c87e351 | coke++ | t/spectest.data:

[20:30] <dalek> rakudo/nom: Remove temporarily problematic file.

[20:30] <dalek> rakudo/nom: 

[20:30] <dalek> rakudo/nom: The goal is to eventually make this part of Christmas, but not today

[20:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c87e351d88

[20:30] <vendethiel> m: sub f {Int}; sub x returns BEGIN f {};

[20:30] <camelia> rakudo-moar 88c778: OUTPUT«5===SORRY!5=== Error while compiling /tmp/jfWw_UGllD␤Invalid typename 'BEGIN'␤at /tmp/jfWw_UGllD:1␤------> 3sub f {Int}; sub x returns BEGIN7⏏5 f {};␤»

[20:30] <jdv79> i thought anything not tested by roast was not part of spec

[20:30] <vendethiel> on a scale of "you're insane" and "you're insane", how insane is that? ^

[20:31] <mst> [Coke]: what's the difference between 'compiler release' and 'star release' ?

[20:31] <jdv79> which is something of a blessing that some stuff is poorly tested

[20:32] <jdv79> :)

[20:32] <jnthn> m: sub f {Int}; constant T = f; sub x returns T { }

[20:32] <camelia> rakudo-moar 88c778: ( no output )

[20:32] <dalek> roast/6.c: 3576604 | coke++ | README:

[20:32] <dalek> roast/6.c: Experimental...

[20:32] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/3576604197

[20:33] <jnthn> m: sub f {Int}; sub x returns ::(BEGIN f) { }

[20:33] <camelia> rakudo-moar 88c778: ( no output )

[20:33] <jnthn> m: sub f {Int}; sub x returns ::(BEGIN f) { }; say &x.returns

[20:33] <camelia> rakudo-moar 88c778: OUTPUT«Method 'gist' not found for invocant of class '(BEGIN f)'␤  in block <unit> at /tmp/hEcANnzeVT line 1␤␤»

[20:33] <jnthn> lol

[20:33] <[Coke]> mst: kind of like the difference between the perl 5.22 release and the strawberry perl 5.22.02 release.

[20:33] <jnthn> vendethiel: Insane :)

[20:33] <[Coke]> R* is the compiler, and panda, and Task::Star, basically.

[20:34] <RabidGravy> on the Westbrook-Thompson scale it's Keith Richards

[20:34] <timotimo> mst: every compiler release has a section in it about the exact difference about rakudo release and star release

[20:34] <vendethiel> jnthn:..mmmh

[20:35] <jdv79> perhaps for 6.d we can release everyting at once?  that'd be cool.

[20:35] <vendethiel> m: sub f {Int}; sub x returns ::(BEGIN f) { 5 }; say x;

[20:35] <camelia> rakudo-moar 88c778: OUTPUT«Type check failed for return value; expected (BEGIN f) but got Int␤  in sub x at /tmp/mQuqsJ2CA1 line 1␤  in block <unit> at /tmp/mQuqsJ2CA1 line 1␤␤»

[20:35] <vendethiel> lol.

[20:35] <mst> timotimo: had I found that section, I wouldn't've asked :)

[20:36] <[Coke]> is there a way to view .md files on github using the UI but not rendered?

[20:36] <[Coke]> raw is too raw

[20:36] <timotimo> oof.

[20:36] <[Coke]> https://github.com/rakudo/rakudo/blob/nom/docs/announce/2015.12.md , scroll to the bottom

[20:37] *** simcop2387 joined
[20:37] <[Coke]> is there a way to ask git for all the commits that it would merge if you merged?

[20:37] *** cpage_ left
[20:37] <mst> merge to a scratch branch after mounting a scratch monkey

[20:37] <mst> beware of dropbears

[20:38] <timotimo> there's no problem with merging and then resetting :P

[20:38] <jdv79> monkeys and bears... where?!

[20:38] <dalek> roast/6.c: 0390411 | coke++ | S17-procasync/stress.t:

[20:38] <dalek> roast/6.c: No longer a Christmas present.

[20:38] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/0390411589

[20:39] *** zostay joined
[20:39] <timotimo> australia

[20:39] * jdv79 is out.  as i think zoffix is already.

[20:39] <timotimo> out of what?

[20:40] *** rjbs joined
[20:40] <jdv79> of here

[20:40] *** rindolf left
[20:40] <jdv79> more specifically passed out or about to be

[20:40] <[Coke]> I don't want to merge everything. Guess the easiest thing here is to cherry pick.

[20:40] <jdv79> nite

[20:41] <lizmat> gnight jdv79 

[20:41] <RabidGravy> I was just thinking of cracking the keg of Adnams Shingle Shells

[20:41] *** lucasb joined
[20:41] <AlexDaniel> tadzik: by the way, what about doing something with https://github.com/tadzik/Bailador/issues/43 ?

[20:41] <[Coke]> Sorry we're losing people in the early time zones. :|

[20:42] <timotimo> uh oh

[20:42] <TimToady> well, that's their fault :)

[20:42] <AlexDaniel> tadzik: I mean, there's a pull request that works

[20:42] *** geekosaur joined
[20:42] <woolfy> Dutch time zone still present!

[20:43] <mst> http://whats.all.this.brouhaha.com/2007/05/07/always-mount-a-scratch-monkey-the-real-story/ # always mount a scratch monkey

[20:44] <TimToady> anyone from an earlier timezone coulda volunteered to do the releng :)

[20:44] *** kjs left
[20:45] *** dakkar left
[20:45] <jnthn> [Coke]: You still have 13 days, 1 hour and 15 minutes in my current timezone ;)

[20:45] * [Coke] stares at git.

[20:46] <TimToady> .oO(and anything not tested here is implicitly experimental...)

[20:47] <tadzik> AlexDaniel: travis doesn't exactly agree with the "works" part :)

[20:50] <dalek> roast/6.c: 333841c | coke++ | README:

[20:50] <dalek> roast/6.c: Be more clear about the spec. TimToady++

[20:50] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/333841cf4e

[20:52] <dalek> roast/6.c: e764329 | lizmat++ | S17-supply/throttle.t:

[20:52] <dalek> roast/6.c: Hopefully fix hanging issues, TimToady++

[20:52] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/e764329e92

[20:52] <dalek> roast/6.c: 8079e28 | lizmat++ | S32- (2 files):

[20:52] <dalek> roast/6.c: Skip strange adverb tests to be caught by MMD

[20:52] <dalek> roast/6.c: 

[20:52] <dalek> roast/6.c: For some yet unknown reason, using a strange adverb that should be

[20:52] <dalek> roast/6.c: caught by MMD, does not always work.  Worse, if you skip the first

[20:52] <dalek> roast/6.c: test that failed to die, it will not die on the next test.  So for

[20:52] <dalek> roast/6.c: now, all such tests are skipped to provide a reliable test result

[20:52] <dalek> roast/6.c: for the 6.c release

[20:52] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/8079e280fb

[20:52] <dalek> roast/6.c: d016d27 | lizmat++ | S17-supply/throttle.t:

[20:52] <dalek> roast/6.c: Remove potentially hanging tests for 6.c release

[20:52] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/d016d27ce6

[20:52] <dalek> roast/6.c: 6b04927 | lizmat++ | S17-supply/throttle.t:

[20:52] <dalek> roast/6.c: Don't run more tests that can hang for some

[20:52] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/6b04927114

[20:52] <dalek> roast/6.c: 44d8d14 | lizmat++ | S17-supply/throttle.t:

[20:52] <dalek> roast/6.c: Only use one now, instead of 4

[20:52] <dalek> roast/6.c: 

[20:52] <dalek> roast/6.c: Should be cheaper, so more likely to succeed because of larger

[20:52] <dalek> roast/6.c: maximum value range

[20:52] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/44d8d140d0

[20:52] <dalek> roast/6.c: c5459b7 | jnthn++ | S32-io/IO-Socket-Async.t:

[20:52] <dalek> roast/6.c: Don't rely on an unreliable message.

[20:52] <dalek> roast/6.c: review: https://github.com/perl6/roast/commit/c5459b7d21

[20:52] *** daxim left
[20:53] * lizmat confirms 2015.12 built ok on JVM / OS X

[20:54] <[Coke]> build is ok, install dies, yes?

[20:54] <lizmat> running spectest without install atm

[20:54] <lizmat> want me to stop that and do a make install, [Coke] ?

[20:55] <[Coke]> no, that's fine. We're not worried about JVM today, really.

[20:57] <hahainternet> for all you perl6ers working on christmas

[20:57] <lizmat> ===SORRY!===

[20:57] <lizmat> Missing serialize function for REPR ContextRef

[20:57] <hahainternet> o/

[20:57] <lizmat> [Coke]: that's what you mean ?

[20:58] <[Coke]> aye

[20:59] <[Coke]> it's been like that for ages.

[20:59] <[Coke]> (weeks)

[20:59] *** Sm4rkey joined
[21:00] <lizmat> so basically precomp is dead on the JVM atm

[21:00] <timotimo> :(

[21:01] <[Coke]> We can probably commit to getting the JVM working in time for Divali. :)

[21:02] <hankache> timotimo when should a pdf version of perl6intro be ready? I need to see if I can sneak in some changes.

[21:03] *** kjs joined
[21:03] <timotimo> hankache: coke would know, he's doing the release

[21:04] <[Coke]> perl6intro doesn't have anything to do with the compiler release, SFAIK.

[21:04] <jnthn> Yeah, it'd go in the Star release

[21:04] <timotimo> yeah

[21:05] <timotimo> oh, coke isn't doing the star release?

[21:05] <hankache> yes of course

[21:05] *** cognominal left
[21:05] <[Coke]> timotimo: I never signed up for that, no.

[21:05] <timotimo> i see!

[21:05] <hankache> and that gives me what a day, two?

[21:05] <[Coke]> I'll check it out after the compiler is done and see what's involved.

[21:06] <[Coke]> hankache: probably.

[21:06] <[Coke]> but we're still doing a release every month.

[21:06] <hankache> excellent

[21:06] <hankache> [Coke] thanks

[21:07] <nine> git log nom..HEAD

[21:07] <nine> Coke: ^^^

[21:07] <nine> could also be three dots

[21:07] <[Coke]> nine: ?

[21:08] <[Coke]> if that's in answer to my previous question about merging for roast/ I'll all done, it's pushed.

[21:09] <RabidGravy> https://www.youtube.com/watch?v=0cPXEo6gqBI

[21:09] <TimToady> testing against 6.3, single threaded

[21:09] *** lichtkind__ joined
[21:09] <TimToady> er, 6.c

[21:10] *** lichtkind_ left
[21:11] <woolfy> Ah, no Rakudo Star yet.  Sompe people (on Facebook and elsewhere) will ask when that is going to happen.

[21:11] <[Coke]> jezu, it's 1600 already

[21:11] <[Coke]> there is currently no plan for Star. Today is the compiler.

[21:11] <[Coke]> and the spec.

[21:11] * TimToady is very happy that we are delivering exactly what we promised at the beginning of this year, so everyone++

[21:12] <woolfy> [Coke]: I know, but still, that is what is going to be asked.  I will stop nagging.

[21:12] <TimToady> we promised a test suite, and a compiler running on moarvm

[21:12] <[Coke]> I'm telling you the answer. :)

[21:12] <timotimo> how big is the amount of people who feel that we're delivering what we promised? :P

[21:12] <[Coke]> I suspect that a Star will hit by year end.

[21:12] <woolfy> woohoo!

[21:13] <stmuk> . o O ( Christmas Star )

[21:13] <TimToady> timotimo: the people who can read, I suspect :)

[21:13] <[Coke]> I'll work on it Monday if no one has grabbed it by then.

[21:13] <hankache> Working compiler + Release note + install instructions = we delivered

[21:13] <timotimo> a star will hit and destroy all of humanity on earth?

[21:13] <jnthn> People on the internet don't read, they just look at headlines and then it's back to cat pictures :P

[21:14] <woolfy> Meow

[21:14] <dalek> doc: c898c17 | lizmat++ | doc/Type/DateTime.pod:

[21:14] <dalek> doc: Note that you can use :day as synonym for :1day

[21:14] <dalek> doc: review: https://github.com/perl6/doc/commit/c898c177a4

[21:14] <TimToady> True!

[21:14] <[Coke]> I have never done an .msi before, however.

[21:15] <[Coke]> (nor do I have ready access to a win dev box)

[21:15] <stmuk> https://v.cdn.vine.co/r/videos/231FA81A331291756351206453248_4f545b6be62.5.0.3857687054576748397.mp4

[21:15] <stmuk> ^^ santa cat

[21:16] <timotimo> <3

[21:17] <AlexDaniel> tadzik: did you read my comment?

[21:17] *** Odud joined
[21:17] <timotimo> mroooowwww

[21:17] *** [ptc]_ joined
[21:18] <Woodi> so who promised compiler ? releasing tests alone would be much simpler... ;)

[21:18] * TimToady thought adding a compiler might be a nice gesture

[21:18] <vendethiel> @everyone>>++

[21:18] * [Coke] is going through what is hopefully the final moar stresstest run...

[21:18] * virtualsue gets ready to open some perlsecco

[21:19] * hankache looks for my bottle of absynthe

[21:19] <Skarsnik> I wonder how many RT/issue in eco the release will generate x)

[21:19] * [Coke] wishes he had a bottle of perl left to drink today!

[21:19] *** FROGGS joined
[21:19] *** colomon left
[21:20] <timotimo> Skarsnik: i'll be glad to smash some bugs to pieces

[21:20] <timotimo> but i really hope people will be kind enough to give us golfed examples and search for duplicates before submitting

[21:21] <Theophane> hmm

[21:21] <woolfy> [Coke] do I need to call FedEx to send you a box of the bubbles from Perl's Schmitt-Weber?  Like, "delivery in 2-3 hours!"...

[21:21] * TimToady saved his Braga port for today, but it's back home, so will have to wait a day or two :)

[21:21] <dalek> doc: b6f8478 | lizmat++ | doc/Type/Date.pod:

[21:21] <dalek> doc: Document Date.later/earlier functionality

[21:21] <dalek> doc: review: https://github.com/perl6/doc/commit/b6f84781b3

[21:21] <TimToady> I don't expect it will spoil in that time

[21:21] * woolfy still has some boxes with Perl wine...

[21:22] <RabidGravy> I've got some La Chouffe which will lively things up

[21:22] *** TomLeg joined
[21:22] * jnthn is sick and has been told by wife, "no alcohol"...so will have to wait to celebrate

[21:22] <AlexDaniel> tadzik: the only reason why current tests are passing is because something is wrong with tests

[21:22] <[Coke]> woolfy: hee. no, I have some scotch about.

[21:22] <AlexDaniel> tadzik: maybe there are no tests for POST params at all

[21:22] <woolfy> [Coke]++

[21:23] <stmuk> I'm considering this TL;DR friendly perl6.org page

[21:23] <stmuk> http://li1360-252.members.linode.com:5000/downloads/index.html

[21:23] <stmuk> I'm no zoffix so it looks rubbish

[21:24] <tadzik> AlexDaniel: it's very possible

[21:24] <AlexDaniel> tadzik: ah right, and current travis status is ｢build | error｣

[21:24] <autarch> stmuk - I'd say that currently the best way is to use rakudobrew, not to build from source directly

[21:24] *** pierre-v_ joined
[21:24] <autarch> which of course your page goes on to show, but the phrasing is a bit confusing

[21:24] *** colomon joined
[21:24] <timotimo> stmuk: got an idea for the bit on the right?

[21:25] <TimToady> is the best way to build from source really a tarball?  I'd think a git checkout would be more to the liking of some...

[21:26] <AlexDaniel> tadzik: anyway, you can try krakan's pull request in a separate branch (together with my 1-character change) and see what travis says

[21:26] <hankache> best way to build = rakudobrew

[21:26] <tadzik> AlexDaniel: yeah, it needs some love on multiple levels, clearly

[21:26] <autarch> yeah, I don't think documenting anything besides rakudobrew is a great idea

[21:26] <Skarsnik> TimToady, git from a fixed release them x)

[21:26] <autarch> s/documenting/recommending/

[21:26] <stmuk> timotimo: I'm a server-side dev not fullstack ;)

[21:26] <timotimo> TimToady: that'd be the best way if we start using master vs nom right away ;)

[21:27] <autarch> err, sorry - I meant .subst( rx{'documenting'}, 'recommending' )

[21:27] <stmuk> ok I will tweak wording

[21:27] <timotimo> or we could tell people to use 2015.12 tag like stmuks rakudobrew invocation example shows

[21:27] *** pierre-vigier left
[21:27] <virtualsue> huh? doesn't it say to use rakudobrew?

[21:28] <timotimo> it does

[21:28] <timotimo> but the very first part is about tarballs

[21:28] <Skarsnik> maybe some focus should be on a useful Task::Star for like the next month *throwing random idea around*

[21:28] <dalek> rakudo/nom: 6c93fdc | coke++ | docs/release_guide.pod:

[21:28] <dalek> rakudo/nom: don't forget to install

[21:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6c93fdcff0

[21:29] <timotimo> Skarsnik: what speaks against a star release this month?

[21:29] <hankache> stmuk you can make it simpler: "To build Perl 6 run the following: git clone..........rakudobrew build panda"

[21:29] <lizmat> [Coke]: shouldn't we run make test *before* make install ?

[21:29] <timotimo> i didn't know that's out of the question already

[21:29] <virtualsue> http://hellogiggles.com/wp-content/uploads/2014/07/22/you-popular-cute-cat-the-very-creative_113506.jpg

[21:29] <stmuk> "Currently the best way to install the first Perl 6 release is to build from source either via an extracted tarball or rakudobrew"

[21:29] <hankache> IMO let's not tell them to install TAsk::Star

[21:29] <[Coke]> lizmat: ... yah, that makes sense.

[21:29] * nine notes that all the weird module installation problems in the past few days involved rakudobrew

[21:29] <lizmat> even after make stresstest ?

[21:29] <timotimo> hankache: but didn't we just spend a bunch of time making sure task::star installs?

[21:30] <dalek> rakudo/nom: ab1a440 | coke++ | docs/release_guide.pod:

[21:30] <dalek> rakudo/nom: test first. lizmat++

[21:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ab1a4403ae

[21:30] <Skarsnik> I mean the content of task::star is hightly questionnable

[21:30] <hankache> timotimo DBIish needs scripts to be run on DB before installation

[21:30] <[Coke]> lizmat: note that these are the tests for the build/release, not for the common user.

[21:31] <timotimo> hankache: but it doesn't show test failures if the DB wasn't set up yet

[21:31] <hankache> it will light up and people will start complaining

[21:31] <lizmat> [Coke]: oki

[21:31] <[Coke]> if the install step is going to fail due to precomp, you want to know soon.

[21:31] <Skarsnik> hankache, hm.. the test should skip if not able to create stuff

[21:31] *** raiph left
[21:31] <hankache> in that case then ok

[21:31] <timotimo> yeah, it will light up. but the moment the people copy-paste the "error message" into a bug report, they'll probably see it's all "ok" and "skipped", not "FAIL"

[21:32] <TimToady> on Linux, 'make spectest', "All tests successful." quick, ship it!

[21:32] <Skarsnik> What is missing for DBIish install to be great is having panda informaing of what lib are needed to make it work ~~

[21:32] *** Odud left
[21:32] <hankache> if libs are not installed will it still complain?

[21:32] *** pierre-v_ left
[21:33] <Skarsnik> DBIish should install even with no lib/db server

[21:33] <stmuk> OK modified version

[21:33] <stmuk> http://li1360-252.members.linode.com:5000/downloads/index.html

[21:33] <timotimo> it should. doesn't it?

[21:33] <hankache> excellent no error messages = happy user

[21:33] <Skarsnik> I think it does

[21:33] <nine> bikeshed committe: this ok for the announcement? "Serves as a great glue language, allowing for easy calling of C/C++ (using NativeCall) and staying compatible with Perl 5 (via Inline::Perl5)"

[21:33] <stmuk> exact wording issues aside .. is that generally useful?

[21:34] <timotimo> stmuk: how do you feel about putting links to perl6intro.com, learnxinyminutes and the jnthn perl6 introduction course slides on the side in an extra box?

[21:34] *** bpmedley_ left
[21:34] <RabidGravy> yeah, I think there sould be some way of indicating external (i.e. non-perl) dependencies in the META6 but I haven't worked out how

[21:34] <Skarsnik> Last time I installed DBIish was on my dedicated server with no lib installed and only a pg server runing and it worked

[21:34] <timotimo> nine: i'd totally also include Inline::Python and perhaps even Inline::Lua

[21:34] <stmuk> timotimo: I've no idea how to do that but would welcome PR

[21:34] <Skarsnik> RabidGravy, I made a RT for that x)

[21:34] <timotimo> stmuk: let me have a quick look

[21:34] <hankache> stmuk zoffix should be able to help

[21:35] <Skarsnik> It will be greatly useful for package developer

[21:35] <RabidGravy> indeed

[21:35] <Skarsnik> or tools like dh_make in debian that create deb package from cpan

[21:35] <TimToady> how 'bout just: Serves as a great glue language, compatible with C/C++ via NativeCall, and with Perl 5 via Inline::Per5

[21:36] <hankache> if i may add something: wouldn't it be better to give the users one single option? installing user rakudobrew ?

[21:36] <nine> RabidGravy: well, using qualified names like "depends": [ "DBI:from<Perl5>" ]

[21:36] <Skarsnik> hm I am not sure about the great glue language. There is no doc to use perl6 in another stuff?

[21:36] <Skarsnik> *from

[21:36] <TimToady> glue mostly just refers to having lots of APIs

[21:36] <kjs> nine: glue language is underselling it perhaps.

[21:36] <TimToady> like DBIish

[21:36] <RabidGravy> nine, that doesn't help for C libraries

[21:36] <stmuk> timotimo: [email@hidden.address]
[21:36] <Skarsnik> But pointing Inline::Perl5 and NativeCall is still a good idea

[21:37] <hahainternet> when i can include perl6 in my Go program to run alongside libtcl i'll be the happiest persone ver

[21:37] <RabidGravy> and when I proposed an Alien type thing it all went off with the negativity

[21:38] <Skarsnik> Like "The ecosystem is still very young, but there is a great support to use perl5 modules and C/C++ library"

[21:38] <nine> note: the point about the glue language with NativeCall and Inline::Perl5 is already in the announcement. I'm just trying to get the point about compatibility into the sentence.

[21:38] <nine> RabidGravy: for C libraries I'd totally rip off whatever rpm does

[21:38] <RabidGravy> :)

[21:38] <hankache> throw something related to the web

[21:39] *** raiph joined
[21:39] <Skarsnik> Alien type thing?

[21:39] <RabidGravy> A module that arranges for the dependency

[21:40] <RabidGravy> so e.g Alien::Libshout would check whether libshout is installed and if not install it

[21:41] <hankache> we have a DSL for creating web applications. can we throw in something related?

[21:42] *** kaare_ left
[21:42] <RabidGravy> and you'd use the module to get the library details so it can put it wherever it wants

[21:42] <Skarsnik> sound like a workaround x) You mean you depend on module that will just have its test checking/trying to install stuff?

[21:42] <RabidGravy> yeah

[21:42] *** cpage_ joined
[21:42] <dalek> rakudo/nom: fc64e35 | coke++ | docs/ChangeLog:

[21:42] <dalek> rakudo/nom: fix typo

[21:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fc64e353b4

[21:42] <dalek> rakudo/nom: 7e50816 | coke++ | docs/announce/2015.12.md:

[21:42] <dalek> rakudo/nom: Add Changelog entries to release announcement

[21:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7e50816518

[21:42] <hankache> RabidGravy https://github.com/jonathanstowe/LibraryCheck

[21:43] <timotimo> stmuk: https://gist.github.com/timo/e0950aba2c31c7e5a314 - how do you like this?

[21:43] <timotimo> oh, you actaully do have a git repository for that

[21:43] <timotimo> let me give you an actual PR

[21:43] <RabidGravy> hankache, yes I wrote it :)

[21:43] <Skarsnik> I don't know, having just the info on Meta could allow for panda/whatever to have interesting behavior according to the plateform

[21:43] <hankache> oh silly me 

[21:43] *** raiph left
[21:44] <nine> RabidGravy: now that I think of it. I think, missed an opportunity there. Would have been cool to say use foo:from<C>:ver<13.2>; # loads libfoo.so.13.2 and then is native('foo'); # reference the already located and loaded lib instead of going off and search for every "is native"

[21:45] *** Sm4rkey left
[21:45] <stmuk> timotimo: cool

[21:45] <timotimo> stmuk: ugh, now i'll haev to fork the repo to make the PR

[21:45] <timotimo> can you just give me access? :P

[21:45] <RabidGravy> nine, yeah could fly

[21:45] *** raiph joined
[21:45] <Juerd> I think "as long as you stick to the features that are actually tested in the test suite, that is. " should mention how vast the test suite is. Someone who doesn't know how extensively rakudo is tested, could read the line as though it means that only a few things are set in stone.

[21:45] <Juerd> What's the current test count?

[21:45] <dalek> rakudo/nom: d62266b | coke++ | docs/announce/2015.12.md:

[21:45] <dalek> rakudo/nom: moar unicode

[21:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d62266b082

[21:45] <Skarsnik> nine, I was thinking of something like this for NC, having to say in your module "use this lib" and just say sub foo is native

[21:46] <timotimo> Juerd: to be fair, zefram thinks the test suite is a few orders of magnitude too small

[21:46] <Juerd> timotimo: I suggest we just add the number of tests and let people decide for themselves if that's a lot or not :)

[21:46] <awwaiid> timotimo: yeah... but it's pretty challenging to build an implementation that complies with it as-is :)

[21:46] <lizmat> 51K+

[21:47] <[Coke]> ok. I'm about to do the tag...

[21:47] <nine> timotimo: and from what I've seen so far, I'd actually say zefram's right.

[21:47] <Juerd> Oh, never mind then. Won't make it before the tag probably :)

[21:47] <jnthn> Well, we could mention the number of stress tests to make it sounds closer ;)

[21:48] <lizmat> 125K+

[21:48] <[Coke]> I can add that.

[21:48] <Juerd> One last request... can "Have the appropriate amount of fun" get an exclamation mark? :)

[21:49] <[Coke]> that are passing? I see 123911

[21:49] <Theophane> :)

[21:49] <lizmat> Juerd: http://irclog.perlgeek.de/perl6/2015-12-25#i_11776671

[21:49] <dalek> rakudo/nom: 686d3eb | coke++ | docs/announce/2015.12.md:

[21:49] <dalek> rakudo/nom: EXCITEMENT. I HAZ IT.

[21:49] <dalek> rakudo/nom: 

[21:49] <dalek> rakudo/nom: Juerd++

[21:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/686d3eb2fc

[21:49] <Juerd> :)

[21:49] <[Coke]> I'll just say over 120K. :)

[21:50] <Skarsnik> timotimo, and also mean for task::star to maybe focus on working on module that are lacking (or too WIP). Like I wanted to work on a ZIP file format, but the module only allow me to show the head and unzip somewhere, nothing else x)

[21:50] <timotimo> nine: yeah, kind of

[21:50] <[Coke]> lizmat: ah, does that include the inline::perl5 tests?

[21:50] <lizmat> [Coke]: no

[21:50] <timotimo> that's additional unicode tests and such

[21:51] <Juerd> Unicode tests are very important!

[21:51] <Juerd> That's as much part of the language as everything else, isn't it? :)

[21:51] <dalek> rakudo/nom: d925612 | (Stefan Seifert)++ | docs/announce/2015.12.md:

[21:51] <dalek> rakudo/nom: Tweak the glue language sentence in the announcement

[21:51] <dalek> rakudo/nom: 

[21:51] <dalek> rakudo/nom: Just want us to be clear about being compatible with Perl 5.

[21:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d9256124e1

[21:52] <[Coke]> jeez, nine.

[21:52] <hankache> are you HN and reddit accounts ready to upvote ?

[21:52] <timotimo> Juerd: well, this is the complete suite of unicode tests

[21:52] <jnthn> nine: I was tempted to mention Inline::Python too but that's just rubbing it in :P

[21:52] <flussence> hankache: don't have either :D

[21:52] <Skarsnik> hm, I should edit NC doc to mention c++ support somewhere 

[21:52] <[Coke]> does anyone else have last minute commits they are trying to sneak in? ;)

[21:52] <TimToady> and it's not really as smooth an integration as ip5 yet

[21:52] <dalek> rakudo/nom: 9ee1ff0 | coke++ | docs/announce/2015.12.md:

[21:52] <dalek> rakudo/nom: Mention the scale of the test suite.

[21:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9ee1ff0231

[21:52] <nine> jnthn: I had it there! But the bullet point would have grown to 3 lines and that just felt like bragging :)

[21:52] <flussence> [Coke]: did you figure out the install failure? /me is curious if it'll work here...

[21:52] <Woodi> but if tests are primary deliverable then tests.tgz could be created and moved to the front form subscripts...

[21:52] <jnthn> ;)

[21:53] <jnthn> [Coke]: None from me :)

[21:53] <hankache> the title of the link should be: Perl 6 Released

[21:53] <RabidGravy> the thing about the tests is that although the number is lower than some might expect, because so much of rakudo is written in Perl6 the coverage is probably quite good

[21:53] <nine> [Coke]: sorry, that was my commit for release day :)

[21:53] <[Coke]> flussence: it was a local issue. I did a build. I had two windows open. I moved the build dir out of the way, re-cloned rakudo... I still had one shell where I was still in the ORIGINAL build dir of the same name. things got really confused.

[21:54] <timotimo> hehehe

[21:54] <timotimo> yeah, it's "interesting" that you can be in a folder and move it from somewhere else and still "be in that folder"

[21:54] <flussence> [Coke]: well at least I was wrong about it being the same problem and the release will go ahead but... bah :(

[21:56] *** gori joined
[21:56] <Juerd> "Has clean, modern, syntax, rooted "

[21:56] <Juerd> Second comma is wrong I think

[21:56] *** ptc_p6 joined
[21:57] *** ptc_p6 left
[21:57] <timotimo> well, we have "make clean", but we don't have "make modern" or "make syntax"

[21:57] *** ptc_p6 joined
[21:57] <jnthn> My English ain't good enough to say either way :)

[21:57] <dalek> rakudo/nom: ec386e5 | coke++ | docs/announce/2015.12.md:

[21:57] <dalek> rakudo/nom: fix grammar-o

[21:57] <dalek> rakudo/nom: 

[21:57] <dalek> rakudo/nom: Juerd++

[21:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ec386e5ff5

[21:57] <Juerd> Thanks :)

[21:58] *** ptc_p6 left
[21:58] *** raiph left
[21:58] <dalek> doc: 386ea0d | (Sylvain Colinet)++ | doc/Language/nativecall.pod:

[21:58] <dalek> doc: Mention C++ support in NativeCall

[21:58] <dalek> doc: review: https://github.com/perl6/doc/commit/386ea0d475

[21:58] <[Coke]> thank you! I read that 3 times and missed it.

[21:58] <[Coke]> ok. Pulling the trigger.

[21:58] <flussence> hm, does github's renderer not understand footnotes in markdown or is that [^1] syntax not quite right...?

[21:58] * flussence goes to rtfm

[21:58] <Skarsnik> That not really a doc for it, but at least it mentionned x)

[21:58] <[Coke]> I thought that was just stylistic, I didn't think it was real footntes.

[21:59] <flussence> eh, it's readable. don't worry about it

[21:59] <[Coke]> I'll give you a minute to check... but the release note doesn't have to be 100% in the tagged version. :)

[21:59] <[Coke]> ok, pulling the trigger.

[21:59] * TimToady ducks

[21:59] <woolfy> woohoo

[21:59] <woolfy> triggerhappy

[21:59] *** raiph joined
[21:59] <stmuk> . o O ( can i haz perlseco now?)

[21:59] *** xfix left
[21:59] <Woodi> 22.59 here ;)

[21:59] *** [ptc]_ left
[22:00] <jnthn> 23.59 ;)

[22:00] * hankache Tequila!!

[22:00] <flussence> I think I confused it with asciidoc or rst or something, didn't find anything. never mind :)

[22:00] <timotimo> stmuk: will you merge that PR so people can see it on your linode host and bikeshed? 

[22:00] *** [ptc]_ joined
[22:00] * sjn toasts with a wonderful glass of rum o/

[22:00] <stmuk> sure

[22:00] *** pjcj joined
[22:01] <timotimo> <3

[22:01] * timotimo has some "volvic"

[22:01] * lizmat has some perlsecco

[22:01] <sjn> also, woolfy++ for keep Facebook in the loop :)

[22:01] * Skarsnik haz... nothing

[22:01] * Skarsnik will write something on linuxfr.org tomorrow

[22:01] * hankache has absynthe

[22:02] * flussence got soaked in the rain earlier and has whatever's warm...

[22:02] <lizmat> $ git describe

[22:02] <lizmat> v6.c

[22:02] * mst raises cider

[22:02] <lizmat> :-)

[22:02] * awwaiid does a little jig

[22:02] <[Coke]> uploading tarballs.

[22:02] <stmuk> timotimo: try now

[22:02] <nine> Massive congratulations to all the people who contributed to us reaching this day!

[22:02] <jnthn> \o/

[22:02] <lizmat> whooooo   :-)

[22:02] <jnthn> everyone++

[22:02] <timotimo> cool! this time it didn't take ~5 minutes to give me the page

[22:03] <[Coke]> Thanks everybody!

[22:03] <timotimo> http://li1360-252.members.linode.com:5000/downloads/index.html - please help me bikeshed the box on the right

[22:03] <kjs> Everyone++

[22:03] <AlexDaniel> yeeehaaa

[22:03] <jnthn> [Coke]++ for cutting the release :)

[22:03] <sjn> everyone++ # massive kudos for the efforts!

[22:03] <[Coke]> tarballs are up

[22:03] <Juerd> Congratulations!!

[22:03] <lizmat> everyone++ indeed !

[22:03] <woolfy> I am so f**ing proud to be witness of this!  everybody++

[22:03] <[Coke]> jnthn: thank you. I think I picked the easy bit!

[22:03] <flussence> 🙌

[22:03] <profan_> woop!

[22:03] <nine> Yeah special thanks to [Coke]++ for actually making the release :)

[22:04] <[Coke]> will make an advent post of the release announcement so we can have a page to link to.

[22:04] <Theophane> :)

[22:04] *** gori left
[22:04] <colomon> \o/

[22:05] <hankache> congrats!!

[22:05] * RabidGravy builds a new one just to get 2015.12

[22:05] <[ptc]_> congratulations everyone! Well done! Really stoked :-)

[22:05] * lucasb feels happy

[22:05] <lizmat> [ptc]_  Long time no see!  :-)

[22:06] * mst re-runs rakudobrew build moar

[22:06] <nine> Shamelessly ripping of my favourit Sci Fi show, I'd like to dedicate this release to all the people who predicted, that the Perl 6 project would fail. Community prevails :)

[22:06] <woolfy> Congratulations coming in via Perl6 on Facebook!

[22:06] <dalek> perl6.org: 16d70c5 | (Steve Mynott)++ | source/downloads/ (2 files):

[22:06] <dalek> perl6.org: import downloads page

[22:06] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/16d70c57b0

[22:06] <dalek> perl6.org: c68e877 | (Steve Mynott)++ | source/downloads/.index.html.un~:

[22:06] <dalek> perl6.org: rm mistake

[22:06] *** dalek left
[22:06] <woolfy> [Coke]++

[22:07] <[ptc]_> lizmat: I've only had time to lurk over the last while. Really, really happy!

[22:07] <hankache> timotimo reorder the links

[22:07] *** dalek joined
[22:07] *** ChanServ sets mode: +v dalek

[22:07] <timotimo> hankache: what should go where?

[22:07] <stmuk> *++

[22:07] <lizmat> [ptc]_ so is everybody around here

[22:08] <timotimo> **++

[22:08] <Juerd> Who's going to 32c3, by the way? Can we have a small release celebration there? :)

[22:08] <timotimo> how long until perl6.org sees stmuk's new changes?

[22:08] * mst starts the countdown to getting annoyed enough with rakudobrew to patch it within an inch of its life

[22:08] <mst> (this is not meant as a criticism, but it's a toolchain script and I'm me, so it's inevitably going to happen)

[22:09] *** Theophane left
[22:10] <hankache> timotimo 1-Perl 6 introductory slides 2-Perl 6 introduction 3- Learn Perl 6 in Y minutes 4 -Language tutorials

[22:10] <timotimo> isn't that how i have it?

[22:10] <timotimo> oh!

[22:10] *** raiph left
[22:10] <stmuk> timotimo: I think I read somewhere its a 15m cron

[22:10] <stmuk> if its running 

[22:11] <[Coke]> release email sent.

[22:11] <dalek> perl6.org: 8dcab23 | timo++ | source/downloads/index.html:

[22:11] <dalek> perl6.org: reorder the material links

[22:11] <dalek> perl6.org: 

[22:11] <dalek> perl6.org: hankache++

[22:11] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/8dcab23063

[22:11] <[Coke]> added a few more perl6 lists.

[22:11] <[Coke]> working on advent post...

[22:11] <timotimo> Fri Dec 25 22:00:01 UTC 2015

[22:12] * hankache rakudobrew buil moar

[22:12] <timotimo> stmuk: you forgot to make the button on the front page link to the downloads/ section

[22:12] * TimToady tweeted, after his long exile

[22:13] <hankache> retweet

[22:13] <colomon> TimToady++

[22:13] <dalek> perl6.org: f8eb259 | timo++ | source/index.html:

[22:13] <dalek> perl6.org: link to our new shiny downloads page from index

[22:13] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/f8eb259bb2

[22:14] <[Coke]> we've got some russian & chinese wordpress comments that someone who speaks needs to determine if we can approve 'em.

[22:14] * sjn retweeted TimToady++

[22:14] *** ellybelly left
[22:14] <hahainternet> just out of casual interest, does anyone know where the repl is handled in the source?

[22:14] *** ellybelly_ left
[22:14] <timotimo> hahainternet: it's in src/Perl6iCompiler.nqp

[22:14] <stmuk> timotimo: d'uh thanks I'm not really "fullstack"

[22:14] <hahainternet> timotimo: rgr

[22:15] <hahainternet> timotimo: as always, thx

[22:15] * timotimo eagerly awaits the arrival of that cron job

[22:15] <timotimo> aha!

[22:15] <timotimo> there it is, the new downloads page

[22:15] <timotimo> D'OH

[22:15] <autarch> heh, doesn't seem quite right

[22:15] <timotimo> takes a while to rsync

[22:16] <timotimo> um...

[22:16] <lizmat> the link appears to be wrong ?

[22:16] <timotimo> source/archive/list-summaries/2003 ...

[22:16] <timotimo> is that still needed?

[22:16] <lizmat> http://perl6.org/downloads/ is empty ?

[22:16] <timotimo> lizmat: a little bit of patience

[22:16] <stmuk> works now

[22:16] <lizmat> .oO( you doctor, me patient )

[22:16] <hankache> where is the release announcment?

[22:16] <timotimo> Processing File 'source/snippets/99-bottles.html'... Not syntax hilighting, Text::VimColor not found

[22:17] <timotimo> interesting

[22:17] <timotimo> lizmat: it exists now :)

[22:17] <btyler> http://perl6.org/getting-started/ also might point to 'downloads'? will PR if so

[22:17] <btyler> in the 'install a compiler' instruction

[22:17] <hankache> timotimo++ stmuk++  download page

[22:17] <timotimo> btyler: well, at least the panic-before-the-cronjob time is over :)

[22:18] <stmuk> ++zoffix # likely future fixage :)

[22:18] <timotimo> yes, it should be linked, btyler++

[22:18] <timotimo> actually, i'll just do it myself

[22:18] *** rurban joined
[22:18] <btyler> ok

[22:19] <dalek> perl6.org: f3929c4 | timo++ | source/getting-started/index.html:

[22:19] <dalek> perl6.org: btyler++ spotted another link to rakudo.org/how-to-get

[22:19] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/f3929c46b7

[22:19] <hankache> This is Rakudo version 2015.12 built on MoarVM version 2015.12

[22:19] <hankache> implementing Perl 6.c.

[22:19] <ggoebel9> Congratulations... Merry Christmas and Happy New Year!

[22:19] <hankache> yahooooooooooooo!

[22:19] <hankache> Ladies and Gents Merry Christmas!

[22:20] <AlexDaniel> yeah, sounds great

[22:20] <colomon> Merry Christmas!

[22:20] <AlexDaniel> .u christmas

[22:20] <yoleaux> U+1F384 CHRISTMAS TREE [So] (🎄)

[22:20] <yoleaux> U+1F385 FATHER CHRISTMAS [So] (🎅)

[22:20] <AlexDaniel> oh there it is 🎄

[22:21] <timotimo> "perl 6 free download now"

[22:22] * colomon spectests

[22:23] <hankache> is the release announcment up?

[22:23] <lizmat> Files=1092, Tests=51399, 276 wallclock secs (13.47 usr  3.91 sys + 1705.89 cusr 152.76 csys = 1876.03 CPU)   # 2015.12/2015.12/6.c

[22:23] <timotimo> now get ready for the storm of complaints :P

[22:23] <timotimo> i'm about to fix some n

[22:23] <timotimo> nativecall incompatibility in GTK::Simple

[22:23] <lizmat> hankache: the primary announcement is on perl6-compiler mailing list

[22:23] <lizmat> [Coke] is working on an advent blog post atm

[22:23] <timotimo> this time it'll go on the davent blog, too

[22:24] <hankache> oh i am not on the list

[22:24] <hankache> can someone add me?

[22:25] <timotimo> send a mail to [email@hidden.address]
[22:26] <TimToady> [Coke]: are you putting the release notes up for Day 25?

[22:26] <tadzik> so, it did happen

[22:27] <tadzik> :}

[22:27] <RabidGravy> you know a language hasn't really arrived until someone writes a mailling list manager in it

[22:27] <[Coke]> ok. someone want to preview this before I go live: https://perl6advent.wordpress.com/?p=4787&preview=true

[22:27] <timotimo> hey tadzik 

[22:27] <tadzik> I'm happy to have a brick of mine in there somewhere :)

[22:27] <timotimo> tadzik: you made rakudobrew and nine is very unhappy with it :)

[22:27] <timotimo> so is mst, actualyl :D

[22:27] <[Coke]> It's basically the release announcement with some minor html formatting improvements.

[22:27] <RabidGravy> naughty step for tadzik

[22:27] <mst> well, no, I'm just sliding down my gradual path to hating it because it's toolchain code

[22:28] <timotimo> [Coke]: do we want to advertise the jvm version if it doesn't work terribly well?

[22:28] <mst> "works well enough for me to use it long enough to hate it" should be considered a success

[22:28] <timotimo> cool

[22:28] <tadzik> it has not intended to be a public project :P

[22:29] <hankache> tadzik++ now it is

[22:29] <tadzik> I initially put it on github and said "I won't even accept bug reports for this, you're free to use it if you like it though"

[22:29] <mst> tadzik: yeah, and DBIx::Class was supposed to be a research project

[22:29] <mst> things escape.

[22:29] <tadzik> and it kind of blew up

[22:29] <lizmat> [Coke]: looks ok to me

[22:29] <tadzik> I guess I'm not very good at growing them small projects of mine

[22:29] <[Coke]> timotimo: ... that's fair. I'll remove it from the opening paragraph on the announcement.

[22:30] <[Coke]> updated.

[22:30] <mst> I think the only project of mine that hasn't escaped is my ex-vi fork

[22:30] <mst> and I intentionally didn't put the source code to that one anywhere people could find it ;)

[22:30] <obra> Congratulations, everyone!

[22:30] <lizmat> obra o/

[22:30] <timotimo> We

[22:30] <timotimo> would also like to thank everyone who submitted bug reports or dropped in on

[22:30] <timotimo> the

[22:30] <timotimo> ^- surprising line breaks

[22:30] <timotimo> [Coke]: 

[22:30] <obra> mst: I actually ran into some greybeards lamenting the lack of a true classic vi that builds on current operating systems.

[22:31] <hankache> are you ready to trend the announcment on HN

[22:31] <mst> obra: http://ex-vi.sf.net/ is Bill Joy's codebase and it totally builds on current systems

[22:31] <timotimo> [Coke]: also, the document refers to files in the rakudo repository, which don't really resolve in the heads of the people reading it on the advent blog :)

[22:31] <virtualsue> https://www.reddit.com/r/perl/comments/3y81oj/perl_60_is_now_live/?ref=share&ref_source=link

[22:31] <obra> mst: nice

[22:32] *** devop joined
[22:32] *** telex left
[22:32] <mst> mine uses malloc instead of treating the heap as one giant C array

[22:32] <obra> aw.

[22:32] <timotimo> [Coke]: other than that i have no issues! :)

[22:32] <mst> and has a couple tweaks and bugfixes

[22:32] <obra> & back in a while

[22:32] <mst> I was originally going to then turn it into an XS module

[22:32] <[Coke]> timotimo: is it just docs/changelog & and docs/rel*

[22:32] <Skarsnik> timotimo, the error on gtk::simple is something that can be fixed on nc, the 'old' code to find lib was still doing stuff when receiving a callable (like add .so) but I kind of decided that if you are doing your own stuff to find the lib by passing a sub to NC you have to do everything yourself

[22:32] <[Coke]> ?

[22:32] <mst> but then it would escape too :(

[22:32] <timotimo> [Coke]: i think so!

[22:32] *** ptc_p6 joined
[22:33] <timotimo> mst: malloc treats the heap as one giant C array! :)

[22:33] *** Phagus joined
[22:33] *** ptc_p6 left
[22:33] <Phagus> Thanks Larry!

[22:33] *** gist_nb left
[22:33] *** ptc_p6 joined
[22:33] <mst> timotimo: but then things like ncurses work rather than your editor stopping understanding window resizes eventually

[22:34] <timotimo> hehehe

[22:34] <[Coke]> timotimo: updated.

[22:34] *** telex joined
[22:34] <[Coke]> linked to the files in the repo.

[22:34] <Skarsnik> good night #perl6!

[22:35] *** [ptc]_ left
[22:35] <timotimo> good night Skarsnik 

[22:35] <[Coke]> ... published.

[22:35] <lizmat> [Coke]: on deeper reading, funny line endings at release; (why the ; there?), We and on

[22:35] *** Skarsnik left
[22:35] <[Coke]> https://perl6advent.wordpress.com/2015/12/25/christmas-is-here/

[22:36] <hankache> lizmat he can still edit it

[22:36] <lizmat> yup

[22:36] <timotimo> lizmat: i reported these line endings. didn't coke fix them by now?

[22:36] <lizmat> yeah, the ; is only strange thing left 

[22:36] <lizmat> but that was also in the announce

[22:37] <lizmat> [Coke]: fwiw, I still did not get a perl6-compiler mail

[22:37] *** idiosyncrat_ joined
[22:37] <timotimo> OK

[22:37] <timotimo> i did get that email

[22:37] <hankache> https://news.ycombinator.com/newest upvote the link "Perl 6.0 Released"

[22:37] <hankache> please :)

[22:37] *** rhr left
[22:38] <hankache> Let's try to trend it

[22:38] <[Coke]> updated the ; to a .

[22:38] <idiosyncrat_> Congratulations.

[22:39] <hankache> [Coke] links are not working? or is it supposed to be a ref?

[22:39] <idiosyncrat_> 28 Decembers ago I downloaded and compiled Perl 1, on the very first day of its release.

[22:39] <virtualsue> hankache: likewise my reddit post linked above 

[22:40] <idiosyncrat_> I had bid a contract fixed price, and was betting that this new language by a guy named Wall, which did have a good rep for rn would be a short cut.

[22:40] <hankache> virtualsue can you post a link on r/programming ?

[22:40] <hankache> virtualsue more exposure

[22:40] <idiosyncrat_> I was taking a big financial risk, betting on Larry but it paid off.

[22:41] <[Coke]> hankache: links not working where?

[22:41] <hankache> idiosyncrat_++

[22:41] <virtualsue> i've delegated that to stmuk

[22:41] <hankache> [Coke] links showing [^1] etc.

[22:41] <idiosyncrat_> So, anyway, for those wondering whether to bet on Perl 6 as of its first day ...

[22:42] <[Coke]> hankache: I didn't make the footnotes work in the HTML, no.

[22:42] <[Coke]> I did make the links at the bottom that they refer to work, though.

[22:42] <idiosyncrat_> I bet $$ on it first time round and did very well.

[22:42] *** kjs left
[22:43] <hankache> [Coke] ok then. Was just making sure it is not by mistake

[22:43] <idiosyncrat_> Congratulatons and good luck!

[22:43] *** idiosyncrat_ left
[22:43] <stmuk> https://www.reddit.com/r/programming/comments/3y839f/perl_6_finally_released/

[22:43] *** rhr joined
[22:43] <[Coke]> Merry Christmas from дядо Коледа 

[22:45] <Phagus> So is anyone working on a souped-up Perl6 shell, a la IPython or Pry (For Ruby)?

[22:45] <Phagus> REPL shell I mean.

[22:45] <timotimo> Phagus: yup, an ipython compatible kernel is WIP

[22:45] *** lucasb left
[22:46] <Phagus> timotimo: Beautiful. Do you have a link to the project?

[22:46] <timotimo> well, it's called "jupyter" now

[22:46] <Phagus> Cool!

[22:46] <timotimo> https://github.com/timo/iperl6kernel

[22:46] *** colomon left
[22:46] * [Coke] enjoys a scotch & soda to celebrate.

[22:47] * stmuk drinken Perlwein

[22:47] <Phagus> I don't konw if it's quite a kernel I'm asking for. Basically, IPython has nice features like syntax highlighting, tab completion, etc. Is there something like this for Perl6?

[22:47] <timotimo> merry christmas from τιμο παλσσεν

[22:47] <timotimo> (more or less)

[22:47] <TimToady> [Coke]: were we gonna put up a Day 25?

[22:48] <timotimo> Phagus: if you install "Linenoise" you get tab completion

[22:48] <timotimo> the jupyter kernel will have syntax highlighting, i think. it uses one of the JS editors we've written a highlighter for, i think. not 100% sure, though

[22:49] *** virtualsue_ joined
[22:49] *** virtualsue left
[22:49] *** virtualsue_ is now known as virtualsue

[22:49] <grondilu> congrats everyone and merry Xmas

[22:49] *** ptc_p6 left
[22:49] <hankache> Ladies and gents please upvote the Perl posts on https://www.reddit.com/r/programming/new/ and https://news.ycombinator.com/newest

[22:49] <hankache> **Perl 6 Posts

[22:50] *** [ptc]_ joined
[22:50] <hankache> we need to trend them

[22:50] <[Coke]> TimToady: I put up the release announcement.

[22:50] *** kjs_ joined
[22:50] <[Coke]> Do you want a different one?

[22:50] * [Coke] hurls https://perl6advent.wordpress.com/2015/12/25/christmas-is-here/ for TimToady 

[22:50] <TimToady> oh, was looking on planet by mistake

[22:50] <TimToady> nm

[22:50] <TimToady> thanks

[22:51] <TimToady> or should I say THANKS!!!!!

[22:51] <hankache> Thanks everyone

[22:51] * hankache is happy

[22:51] <lizmat> [Coke]: I just removed strange line ending from the contributor list

[22:52] <[Coke]> lizmat: thank you. I wasn't going to reformat the contributor list because I was lazy!

[22:52] <[Coke]> lizmat++

[22:52] <timotimo> :)

[22:52] * TimToady is glad we decided not to linebreak anyone's name; it looks more like real credits in a movie

[22:52] <[Coke]> TimToady++ for pushing us to release this year.

[22:52] <TimToady> I had faith in y'all

[22:52] <lizmat> copy from list, import into vi, press shifft-j until it's one line, copy and paste back

[22:52] <TimToady> and it was well-placed faith

[22:53] <timotimo> lizmat: i think you can select multiple lines and then hit shift-j to merge all at once

[22:53] <timotimo> so VggJ

[22:53] *** hankache left
[22:53] *** hankache joined
[22:53] <lizmat> keeping shift-j down is less typing :-)

[22:53] <timotimo> hah

[22:54] <lizmat> TimToady: if your name has a hyphen in it, it will I think

[22:54] <lizmat> .u non-breaking

[22:54] <yoleaux> U+00A0 NO-BREAK SPACE [Zs] ( )

[22:54] <yoleaux> U+2011 NON-BREAKING HYPHEN [Pd] (‑)

[22:54] <TimToady> yeah, didn't think of that

[22:56] <lizmat> s:g/-/‑/

[22:56] *** rurban1 joined
[22:56] <mst> :%!perl -pe ...

[22:56] <lizmat> 25 occurrences updated in list

[22:56] <grondilu> I don't see the HN post anymore

[22:56] *** rurban left
[22:56] <lizmat> updated blog

[22:56] <hankache> grondilu https://news.ycombinator.com/newest

[22:57] <grondilu> oh yeah forgot to sort by time

[22:58] <lichtkind__> set the german forum banner to p6 celebration

[22:58] <lichtkind__> article will come tomorrow

[22:59] *** lichtkind__ is now known as lichtkind

[23:00] *** kjs_ left
[23:01] <timotimo> the wordpress page just switched its stats over to the next day

[23:01] <timotimo> so it'll be easy-ish to see before/after release announcement stats

[23:01] <[Coke]> ycombinator - you click on the up arrow to upvote and then you lose the arrow and can't see it?

[23:01] <[Coke]> timotimo++

[23:01] <autarch> I ended up in the thank you list twice somehow

[23:02] <autarch> I'll fix it

[23:02] <timotimo> autarch: you're our 2x contributor

[23:02] <lizmat> I removed one earlier...

[23:02] <lizmat> but not Dave :-)

[23:02] <lizmat> forgot the name

[23:03] <TimToady> also, it split Wendy on my screen

[23:03] <TimToady> poor Wendy

[23:03] <[Coke]> dammit, we had that list for a month to catch dupes early. :)

[23:03] <lizmat> autarch: are you fixing now ?

[23:03] <lizmat> or shall I (and woolfy's ?

[23:03] <autarch> lizmat: yes

[23:03] <TimToady> they've been busy with something else :)

[23:03] <[Coke]> TimToady: she was probably my fault. ISTR adding her.

[23:03] *** avuserow joined
[23:04] <timotimo> Dave: liz, please open the perl6 advent calendar doors

[23:04] <lichtkind> congrats all

[23:04] <autarch> I uniquified the list in emacs - should be good

[23:06] <autarch> I unsplit wendy's name

[23:06] <lizmat> autarch++

[23:06] <mst> uniquified is an excellent word.

[23:06] <timotimo> m: say "uniquified".comb.sort.unique.join.say

[23:06] <camelia> rakudo-moar ec386e: OUTPUT«definqu␤True␤»

[23:07] <timotimo> unqifed

[23:07] <autarch> hmm, it's splitting on chinese chars on my screen - not sure what could be done about that

[23:07] *** hankache left
[23:07] <[Coke]> m: say "I love anagrams".comb.pick(*).join.say

[23:07] <camelia> rakudo-moar ec386e: OUTPUT«a svam alrogeIn␤True␤»

[23:07] <timotimo> add a non breaking no-width space between every two chinese characters? %)

[23:07] <lizmat> m: say "uniquified".comb.sort.squish.join.say

[23:07] <camelia> rakudo-moar ec386e: OUTPUT«definqu␤True␤»

[23:08] <TimToady> lichtkind is split too

[23:08] <grondilu> I look at the announce on https://www.reddit.com/r/perl/ and perlmonks.  Not sure how this is going to go.

[23:08] <[Coke]> oh, I can't vote on ycombinator because I'm a n00b.

[23:08] <lizmat> autarch: those are the ones I added, because I forgot about the non-breaking spaces

[23:09] <lichtkind> TimToady congrats but no i had been unnotified running a second instance of my irc client

[23:09] <autarch> are all the non-breaking spaces outside the name list intentional? there are tons of them

[23:09] <lizmat> lizmat / BooK probably also have that

[23:09] <autarch> I'm sure they're not - they're basically random

[23:09] <[Coke]> I manually edited it in wordpress to remove newlines. those might have been put in as NBSP, I don't know.

[23:09] *** ozmq joined
[23:09] *** yqt joined
[23:09] <[Coke]> ... I don't think you have to clean those up.

[23:09] <[Coke]> but if you insist, I won't stop you. 

[23:10] <ozmq> everyone++

[23:10] *** svetlana joined
[23:10] <autarch> [Coke]: once I see it I can't unsee it ;)

[23:10] <El_Che> \o/

[23:10] <[Coke]> autarch++ lizmat++ cleanups.

[23:11] *** kjs_ joined
[23:11] <autarch> rather than non-breaking spaces I think we want a <nobr> tag around each name - otherwise it still splits on chinese characters

[23:11] <autarch> I'll try that and see if it works

[23:11] <lizmat> autarch: I've fixed them all

[23:11] <lizmat> shall I edit ?

[23:11] <autarch> lizmat: to add <nobr> ?

[23:12] <lizmat> put non-breaking spaces in names that did not have them

[23:13] <autarch> lizmat: I fixed that - it was just a couple

[23:13] <lizmat> ok

[23:13] <lizmat> autarch++

[23:14] <hahainternet> TimToady: congrats, just saw the tweet

[23:14] <lizmat> autarch: empty line missing between Zoffix Znet ... If you would like...

[23:14] <autarch> lizmat: fixing that too

[23:16] <autarch> haha, wordpress appears to be eating my <nobr> tags

[23:16] <autarch> I fought wordpress and wordpress won

[23:17] <autarch> apparently it's not standard html anyway

[23:17] <[Coke]> "it's not going to be perfect, people. let it go"

[23:17] <mst> wordpress: *nom*

[23:18] *** Phagus left
[23:18] <TimToady> but it doesn't boot yet!

[23:18] <[Coke]> ... I'm not sure why that's in quotes. but it's close enough. :)

[23:18] <BooK> 15 years and no-one wrote a decent CMS in Perl 6 yet? ;-P

[23:18] <autarch> yeah, I'm done messing with - I'm not going to wrap every name with <span style="white-space:nowrap">

[23:18] <b2gills> flussence: Markdown uses [text][name or number of link] .... [name or number of link][] ... [text](http://perl6.org "optional pop-up text")␤[name or number of link]: http://perl6.org "optional pop-up text"␤

[23:19] <AlexDaniel> [Coke]: “The Perl 6 community” aww, no-break space please?

[23:20] <AlexDaniel> because it got wrapped on my screen in a very non-pleasant way

[23:20] <AlexDaniel> whoops, unpleasant is the right word

[23:21] <[Coke]> my kids got me magic cards, fallout 4, and coffee for christmas. This is awesome!

[23:21] <[Coke]> autarch: you can fix AlexDaniel's note there, :)

[23:21] <autarch> I think I just did if I'm following what he's talking about - AlexDaniel, can you check?

[23:22] <mst> autarch: that's what filtering the HTML through perl -pe is for

[23:22] <AlexDaniel> autarch: nope, not yet

[23:23] <autarch> AlexDaniel: where specifically?

[23:23] <AlexDaniel> autarch: “This is the Christmas release of Rakudo Perl 6. This version of the compiler targets the v6.c “Christmas” specification of the Perl 6 language. The Perl 6 community has been working toward this release over the last 15 years. Together, we’ve built a language that:”

[23:23] <dalek> perl6.org: 9d2868f | (Steve Mynott)++ | source/downloads/index.html:

[23:23] <dalek> perl6.org: correct build-panda

[23:23] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/9d2868f43c

[23:23] <stmuk> oops

[23:23] <AlexDaniel> autarch: basically everywhere whe you see “Perl 6”

[23:23] <lizmat> Create micro blog post on http://blogs.perl.org linking to [Coke]'s advent post

[23:23] <autarch> AlexDaniel: that's all wrapping normally from what I can see

[23:24] <AlexDaniel> autarch: that is, at least twice in this paragraph

[23:24] <autarch> AlexDaniel: oh, you want "Perl&nbsp;6" ?

[23:24] <AlexDaniel> yes

[23:24] <[Coke]> lizmat: You did or someone should? I can totally do that.

[23:24] <TimToady> otherwise someone might think it's really Perl...

[23:24] <lizmat> I just did that

[23:24] <[Coke]> lizmat++ thanks.

[23:24] <lizmat> http://blogs.perl.org/users/liz/2015/12/christmas-is-here.html

[23:25] <woolfy> "Perl&nbsp;6&nbsp;community" maybe?

[23:25] <[Coke]> just between perl & 6, I think.

[23:25] <AlexDaniel> woolfy: that's not really necessary :)

[23:25] <TimToady> it's mostly the widowed 6 that is an problem

[23:25] <autarch> ok, I did Perl&nbsp;6 - further edits are on someone else ;)

[23:25] <woolfy> ok ok ok

[23:25] <autarch> I note that the non-breaking space chars just look like spaces in the WP editor and are super easy to break - which is an argument for actually using &nbsp;

[23:26] <timotimo> stmuk: i thought rakudobrew has support for "build panda"

[23:27] <lichtkind> vhugs lizmat 

[23:27] <autarch> timotimo: it does - that should be "build-panda"

[23:27] <stmuk> timotimo: ah that's been fixed since I last typod I guess

[23:27] <stmuk> I think both work now

[23:27] <AlexDaniel> autarch: hmmm, still not fixed. Even after Ctrl+F5

[23:28] <timotimo> autarch: no, i mean you can just type "rakudobrew build panda"

[23:28] <autarch> timotimo: oh, I see

[23:28] <stmuk> https://www.reddit.com/r/programming/ <=- only one place under ruby

[23:28] <autarch> AlexDaniel: there's definitely a nbsp; in Perl 6 everywhere - dunno why it's not working

[23:29] *** [ptc]_ left
[23:29] <obra>   I like that the reddit post under the Perl 6 post is about Parrot. (but not our Parrot)

[23:29] <BenGoldberg_> . o O (Some noncompliant html displayer does not comprehend "non breaking", perhaps)

[23:30] <AlexDaniel> autarch: oh, now it's there!

[23:31] *** colomon joined
[23:31] <lichtkind> https://www.youtube.com/watch?v=3qoKorj-NGQ

[23:32] <lichtkind> sorry

[23:32] <lichtkind> wrong link

[23:32] <lichtkind> http://www.heise.de/developer/artikel/Larry-Wall-gibt-den-Rakudo-Perl-6-Compiler-auf-MoarVM-fuer-den-produktiven-Einsatz-frei-3055947.html

[23:32] *** spider-mario left
[23:32] <woolfy> https://wendyga.wordpress.com/2015/12/25/perl-6-0-0-aka-perl-6-c-is-released-this-christmas-so-lets-celebrate/

[23:33] *** colomon left
[23:33] <woolfy> lichtkind++

[23:34] * BenGoldberg_ clicks link anyway.  Very poignant music :)

[23:35] * jnthn did a blog post too: https://6guts.wordpress.com/2015/12/26/reflecting-celebrating-and-looking-forward/ :)

[23:36] <avuserow> congrats to everyone on the release! #perl6++

[23:36] <lichtkind> thanks woolfy 

[23:36] <lichtkind> \whois woolfy 

[23:36] <lichtkind> ups :)

[23:37] *** virtualsue_ joined
[23:38] <woolfy> jnthn++

[23:38] *** lucasb joined
[23:38] * woolfy is me!

[23:38] *** virtualsue left
[23:38] *** virtualsue_ is now known as virtualsue

[23:38] <lucasb> "Autoincrements on native ints are now faster than on Int

[23:39] <lucasb> autoincrements?

[23:39] <lucasb> this is from the changelog

[23:39] *** ozmq left
[23:39] <timotimo> yeah, auto as in self-, obviously %)

[23:39] <avuserow> lucasb: `$i++` is autoincrement

[23:41] *** ozmq joined
[23:41] <lichtkind> jnthn++ of course

[23:42] <timotimo> jnthn++, all the ++ forever ;)

[23:42] <lucasb> ah, ok. I thought autoincrement was a database term, but I think preincrement would be more specific. thanks :)

[23:42] *** gist_nb joined
[23:42] <timotimo> well, not only preincrement is faster

[23:42] <timotimo> postincrement is faster, too

[23:43] <Juerd> Given that use imports lexically, would it be better, style-wise, to "use experimental" in a small block than at the top of a module?

[23:43] <timotimo> jnthn: have all the rest you need :)

[23:45] <flussence> nqp and rakudo ebuilds are done (the latter fails to install, but I don't have enough tuits for it today...)

[23:46] <BenGoldberg_> Juerd, Probably.  That way, you can limit your use of experimental features to that small fraction of your code, and when those features change or are removed, you only need to change what's in that block.

[23:48] <lichtkind> woolfy are you the wendy i know?

[23:49] <Juerd> BenGoldberg_: Thanks

[23:49] <lizmat> lichtkind: she is

[23:49] *** xpen joined
[23:49] <lichtkind> my favorite infidel

[23:50] <jnthn> Wish you all a wonderful rest-of-Christmas. :-) I'm off to hibernate.

[23:50] * ZoffixWin has had passed out for a couple of hours

[23:50] <jnthn> o/

[23:50] *** firstdayonthejob left
[23:50] <ZoffixWin> But now I'm back!

[23:50] <flussence> night jnthn o/

[23:50] <timotimo> yo ZoffixWin, we did some terrible "web design" while you were gone ;) ;)

[23:51] <TimToady> o/ and a big thanks!

[23:51] <timotimo> the perl6.org has a "download" button now

[23:51] <jnthn> TimToady: It's been a pleasure. :-)

[23:51] <TimToady> and a pressure :)

[23:51] <timotimo> a nice in-between page for how-to-get-rakudo, IMO.

[23:51] <Juerd> jnthn: Enjoy :)

[23:51] <jnthn> That too ;)

[23:52] <lizmat> good hibernating jnthn!

[23:52] <timotimo> i'm glad to have been with y'all the last few years :)

[23:52] *** firstdayonthejob joined
[23:52] <timotimo> all of you taught me so much

[23:52] <jnthn> Thanks! Really going, before I fall asleep on the keyboard :-)

[23:52] <ZoffixWin> timotimo, does it? I'm not seeing it

[23:52] <AlexDaniel> jnthn: ah, that's how you fix all these bugs…

[23:53] <Juerd> ZoffixWin: s/button/navigation item/

[23:53] <ZoffixWin> Ah sweet

[23:53] <ZoffixWin> So we released?

[23:53] <Juerd> Nah... that's all been a dream

[23:53] <lichtkind> cheers jnthn, wonderful christmas

[23:53] <Juerd> ZoffixWin: Yes, the release is out :)

[23:53] <timotimo> Juerd: well, there's been a button on the front page, too. the bottom left

[23:53] *** espadrine left
[23:53] <ZoffixWin> Weeeeee

[23:54] <Juerd> timotimo: Yes, exactly where I didn't look for it. I like that download is in the menu too now.

[23:54] <timotimo> yeah

[23:54] <AlexDaniel> otherwise I have no explanation for jnthn productivity. Either he does not sleep at all or he “falls asleep on the keyboard” in a special way :)

[23:55] <Juerd> AlexDaniel: He sleeps between christmas and new year's eve, it seems :)

[23:55] *** regreg left
[23:55] <ZoffixWin> Well, congratulations to all on the release!

[23:55] <timotimo> hah

[23:55] <Juerd> ZoffixWin: Congrats to you too :)

[23:55] <timotimo> don't glorify trading well-needed/deserved sleep for "more work time" ;)

[23:56] <Juerd> Sleep time is work time

[23:56] *** gist_nb left
[23:57] <Juerd> Programmers who never sleep write horrible code... for about 48 hours, and then they pass away.

[23:57] <BenGoldberg_> ITYM pass out.

[23:57] *** firstdayonthejob left
[23:57] <stmuk> most of those 24 hr programmers aren't that productive .. there are diminishing returns

[23:57] <timotimo> if you really "never sleep", which is possible to do, you can indeed pass away

[23:58] <BenGoldberg_> Sure, but not in a mere two days.

[23:58] <timotimo> diminishing returns on top of the mid-term health consequences

[23:58] <Juerd> BenGoldberg_: Only if pass out means die.

[23:58] *** raiph joined
[23:58] <timotimo> BenGoldberg_: maybe they start their 48h coding spree after an extended weekend of playing the newest vidya game without sleeping in between

[23:58] <BenGoldberg_> Pass out means fall unconcious

[23:58] <RabidGravy> No but if you make a habit of it, you'll cark it quite  early

[23:58] <ZoffixWin> lizmat, do you still need me to do anything with throttle.t stuff?

[23:58] <Juerd> BenGoldberg_: I know, and that's what I had before I made it more dramatic by changing a word :)

[23:59] <lizmat> ZoffixWin: no, that ship has sailed

[23:59] <stmuk> some other programmers only pass out due to alcohol ;)

[23:59] <TEttinger> sleep's useful for a number of things including digesting food.

[23:59] <ZoffixWin> k :)

[23:59] <RabidGravy> stmuk, AND THEY'RE THE BEST!

[23:59] <Juerd> TEttinger: Yeah, it's a really nice way to sort integers too :)

[23:59] <timotimo> TEttinger: maybe i have a big belly because i don't sleep enough! so all the undigested food just gets stored there :P

[23:59] <timotimo> Juerd: sleep sort for your intestines? %)

[23:59] <TEttinger> ha

