[00:00] *** akakcolin left
[00:00] <japhb> profan: perl5's startup is a really difficult bar (it's only 2-3 ms).  But we already beat 'perl5 -Moose'

[00:01] <japhb> *perl5's *base* startup

[00:01] *** anocelot left
[00:01] *** diakopter left
[00:02] <profan> ahh, well, i'm sure there are strides to be made either way :), even if you dont get to where perl5 was, i'm sure you'll get to where it's most certainly fast enough

[00:02] <japhb> But personally I'd be happy if we got down to 20-30 ms for perl6 startup.  That's fast enough to be able to start *and get actual work done* before the user can react or the window can scroll.

[00:02] <profan> at that point most people won't register the difference most likely, sounds good

[00:03] <japhb> Right.

[00:04] <japhb> Certainly anything less than 17 ms, and you're faster than a single screen refresh, which is freaky, because then you can do things in such a way that the user feels like you time-warped on them.  But that's just showing off.  :-)

[00:05] <profan> japhb: gaslighting, in perl 6? apparently more likely than you think :)

[00:06] <japhb> Well, we try to only abuse the implementors, not the users.  ;-)

[00:07] *** TEttinger left
[00:12] *** lolisa left
[00:13] *** skids joined
[00:20] *** BenGoldberg joined
[00:24] *** akakcolin joined
[00:25] *** akakcolin left
[00:25] *** akakcolin joined
[00:26] *** akakcoli_ joined
[00:30] *** akakcolin left
[00:33] *** akakcoli_ left
[00:34] *** Wolf joined
[00:35] *** Wolf is now known as Guest29580

[00:36] *** akakcolin joined
[00:39] *** akakcoli_ joined
[00:41] *** akakcolin left
[00:41] *** Guest29580 left
[00:45] *** laouji joined
[00:48] *** Akagi201 joined
[01:24] *** uncleyear left
[01:25] *** uncleyear joined
[01:32] *** aborazmeh joined
[01:32] *** aborazmeh left
[01:32] *** aborazmeh joined
[01:46] *** dayangkun joined
[02:11] *** akakcoli_ left
[02:12] *** asdf12z_ joined
[02:12] *** akakcolin joined
[02:13] *** akakcolin left
[02:13] *** akakcolin joined
[02:13] *** akakcolin left
[02:14] *** akakcolin joined
[02:19] *** yqt left
[02:20] *** noganex joined
[02:20] *** telex left
[02:22] *** telex joined
[02:22] *** noganex_ left
[02:25] <hoelzro> anyone around who can help me upload the release tarballs?

[02:26] *** jepeway left
[02:28] *** jepeway joined
[02:34] *** meLon joined
[02:38] *** rmgk_ joined
[02:38] *** rmgk is now known as Guest48893

[02:38] *** Guest48893 left
[02:38] *** rmgk_ is now known as rmgk

[02:46] *** cognominal left
[02:51] *** aborazmeh left
[03:04] *** AlexDaniel left
[03:13] <dalek> nqp: 2488091 | hoelzro++ | tools/build/MOAR_REVISION:

[03:13] <dalek> nqp: Bump required MoarVM version

[03:13] <dalek> nqp: review: https://github.com/perl6/nqp/commit/248809154f

[03:13] <dalek> nqp: 61b5259 | hoelzro++ | VERSION:

[03:13] <dalek> nqp: Bump our version

[03:13] <dalek> nqp: review: https://github.com/perl6/nqp/commit/61b5259728

[03:15] *** nys left
[03:15] <hoelzro> whenever someone gets a chance, please upload the NQP tarball and signature; they're at http://hoelz.ro/files/nqp-2015.06.tar.gz and http://hoelz.ro/files/nqp-2015.06.tar.gz.asc

[03:19] *** akakcolin left
[03:23] *** dwarring left
[03:37] *** jack_rabbit left
[03:49] *** jack_rabbit joined
[03:51] *** jepeway left
[03:52] *** skids left
[04:04] * TimToady waves from Wilson, WY (near Jackson)

[04:06] *** prevost joined
[04:17] *** BenGoldberg left
[04:20] *** akakcolin joined
[04:32] *** laouji left
[04:32] *** laouji joined
[04:37] *** hobbs left
[04:37] *** laouji left
[04:44] *** Sqirrel left
[04:44] *** Sqirrel joined
[04:46] *** laouji joined
[04:48] *** prevost left
[04:51] *** kaare_ joined
[04:53] *** hobbs joined
[04:58] <zostay> is there a way to bind to a Pair value?

[04:58] *** laouji left
[04:58] *** laouji joined
[05:07] <zostay> m: my $x = 'A'; $p = X => \$x; $x = 'B'; $p.perl.say;

[05:07] <camelia> rakudo-moar 02c791: OUTPUT«5===SORRY!5=== Error while compiling /tmp/KnFCyyl9K6␤Variable '$p' is not declared␤at /tmp/KnFCyyl9K6:1␤------> 3my $x = 'A'; 7⏏5$p = X => \$x; $x = 'B'; $p.perl.say;␤»

[05:07] <zostay> m: my $x = 'A'; my $p = X => \$x; $x = 'B'; $p.perl.say;

[05:07] <camelia> rakudo-moar 02c791: OUTPUT«:X(\("B"))␤»

[05:07] <zostay> that's the closest i can come up with

[05:22] <TimToady> m: my $p = x => 42; $p.value = 43; say $p

[05:22] <camelia> rakudo-moar 02c791: OUTPUT«x => 43␤»

[05:22] <TimToady> why do you need to bind?

[05:25] * TimToady --> zzz &

[05:27] <zostay> i'm not sure i *need* to bind...

[05:28] <zostay> night night

[05:38] *** ponbiki joined
[05:39] *** ponbiki is now known as Guest33354

[05:54] *** spider-mario left
[05:57] *** xinming_ joined
[05:57] *** spider-mario joined
[05:59] *** domidumont joined
[05:59] *** xinming left
[06:03] *** domidumont left
[06:03] *** domidumont joined
[06:05] *** diana_olhovik joined
[06:06] *** _mg_ joined
[06:09] *** akakcolin left
[06:11] <ugexe> colomon: ABC might actually install if you fix your META.info provides section. You put the same file path for nearly every module

[06:11] <ugexe> otherwise its impossible to create a proper build order

[06:13] <ugexe> looks like it might have been autogenerated?

[06:15] *** Sqirrel left
[06:18] *** akakcolin joined
[06:21] *** Sqirrel joined
[06:45] *** espadrine joined
[06:46] *** kaare__ joined
[06:48] *** RabidGravy joined
[06:49] *** kaare_ left
[06:51] *** FROGGS joined
[07:00] <RabidGravy> marning!

[07:02] <moritz> \o

[07:04] *** zakharyas joined
[07:06] *** rindolf joined
[07:11] *** TEttinger joined
[07:12] *** larion left
[07:15] *** lizmat left
[07:17] *** [Tux] left
[07:28] *** [Tux] joined
[07:30] *** domidumont left
[07:31] *** domidumont joined
[07:44] *** rindolf left
[07:45] *** kaare__ is now known as kaare_

[07:53] *** amurf left
[07:54] *** amurf joined
[07:54] *** amurf left
[07:55] *** brrt joined
[08:01] *** zakharyas left
[08:03] *** CQ joined
[08:14] *** akakcoli_ joined
[08:15] *** akakcolin left
[08:18] *** espadrine left
[08:18] *** darutoko joined
[08:19] *** dakkar joined
[08:25] *** larion joined
[08:32] *** uncleyear left
[08:33] *** uncleyear joined
[08:34] *** spider-mario left
[08:37] *** Ven joined
[08:46] <timotimo> alart!

[08:47] <timotimo> (i think that's spanish for "i'm awake"?)

[08:51] *** xinming_ left
[08:52] *** xinming joined
[08:58] <DrForr> or "Aiee! LART!"

[09:01] *** espadrine joined
[09:02] *** kurahaupo left
[09:06] *** zakharyas joined
[09:09] <TEttinger> hm, that wasn't what I expected trying to build latest NQP

[09:09] <TEttinger> $ perl Configure.pl --backends=moar,jvm --gen-moar

[09:09] <TEttinger> Bareword found where operator expected at Configure.pl line 220, near "'tools/build"

[09:09] *** abraxxa joined
[09:12] <TEttinger> that is either 'tools/build/Makefile-Moar.in',     or      $MAKEFILE,

[09:12] <TEttinger> it also says it may continue line 217, which is:     // 'make';

[09:14] <FROGGS> ups

[09:15] <FROGGS> TEttinger: can you change the // to ||?

[09:15] <TEttinger> sure, will try

[09:15] <nwc10> I'd guess that Configure.pl is missing a 'use 5.010'

[09:15] <FROGGS> your perl binary is probably to old to know what // is

[09:15] <FROGGS> :/

[09:18] <timotimo> wow

[09:18] <timotimo> isn't 5.010 already extremely old?

[09:18] <DrForr> Oldest version not EOLed, maybe?

[09:18] <DrForr> (haven't checked, just guessing.)

[09:18] <moritz> 5.010.0 is 2007-12-18

[09:19] <timotimo> that's just "very old", not "extremely old"

[09:19] <DrForr> Though it would be (sigh) handy to be able to go back to 5.8 for hardcore legacy users, which is to say "most of them" :/

[09:19] <RabidGravy> AVAST!

[09:19] <moritz> DrForr: iirc two or three major releases are supported, so 5.22, 5.20 and maybe 5.18

[09:20] <moritz> hardcore legacy users that want Perl 6? :-)

[09:20] <timotimo> people on strange platforms who want to port perl6, perhaps? :)

[09:20] <TEttinger> yep, I have 5.8.8 because MSYS overrode the path

[09:21] <TEttinger> trying to figure out how to get it to see a newer version

[09:21] <itz_> vendors do try to backport at least some fixes to older perls sometimes

[09:21] <timotimo> oh, it's windows

[09:22] <RabidGravy> yeah but not "features"

[09:22] <DrForr> moritz: There's a difference between 'legacy users' and 'legacy fanboys' :)

[09:23] <dalek> doc: ec67361 | moritz++ | lib/Type/Str.pod:

[09:24] <dalek> doc: Str.encode returns Blob, not Buf. mt1957++

[09:24] <dalek> doc: review: https://github.com/perl6/doc/commit/ec67361815

[09:24] <TEttinger> ok, so you can't build perl6 with a pre-built older perl6, is this right?

[09:25] <TEttinger> I don't see any perl binary named 'perl' in rakudo star from march

[09:26] <moritz> you need a perl 5 to configure/build rakudo.

[09:27] <timotimo> rakudo star doesn't ship a "perl" binary, it's just "perl6"

[09:27] <TEttinger> right ok. installing strawberry perl, should be 5.22 if the version is accurate

[09:28] <itz_> the wrong perl5 version is specified in Configure.pl

[09:28] <moritz> TEttinger: that's new enough :-)

[09:29] *** hoelzro_trying_w left
[09:29] <moritz> itz_: what do you mean? That the minimal version requirement in Configure.pl is too low?

[09:29] <itz_> yes

[09:29] <dalek> nqp: 0dd9463 | FROGGS++ | Configure.pl:

[09:29] <dalek> nqp: use || instead of 'defined or' to work on older perls

[09:29] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0dd9463b17

[09:30] <FROGGS> we don't need // there anyway

[09:30] <TEttinger> this community rocks :)

[09:30] <itz_> has anyone tried it in 5.8 (I will if noone else is about to)

[09:30] <FROGGS> :D

[09:31] <FROGGS> itz_: that's most likely a 5.10 feature

[09:31] *** larion left
[09:31] <itz_> yes it is .. but is it the only >5.8 feature?

[09:31] <moritz> fwiw perl 5.8.8 is from  is from 2006-01-31

[09:31] <TEttinger> ha, I was in high school then

[09:31] <moritz> m: say Date.today - Date.new(2006-01-31)

[09:31] <camelia> rakudo-moar 02c791: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use 0o1 if you mean that␤    at /tmp/sXAN9nlNT7:1␤    ------> 3say Date.today - Date.new(2006-017⏏5-31)␤Default constructor for 'Date' only takes named arguments…»

[09:31] *** Ven left
[09:32] <bonsaikitten> ... and still the current version in CentOS 5

[09:32] <moritz> m: say Date.today - Date.new('2006-01-31')

[09:32] <camelia> rakudo-moar 02c791: OUTPUT«3425␤»

[09:32] <itz_> its still in RHEL 5.x until 2017 or something

[09:32] <nwc10> and the RHEL with 5.8.8 is common.

[09:32] <bonsaikitten> nwc10: no upgrade path

[09:32] <bonsaikitten> sigh

[09:33] <DrForr> Lots of CentOS users out there stuck on older perls :/

[09:34] <bonsaikitten> DrForr: the only 'upgrade path' is nuke and reinstall, forget about reusing anything

[09:34] <bonsaikitten> so people stay on centos5 until the pain is big enough

[09:34] <DrForr> Been there many times over.

[09:35] <bonsaikitten> I had to install newer java on a centos5 machine this week

[09:35] *** bin_005 joined
[09:38] <DrForr> I'm simply pointing out that being able to build on older boxes might help adoption. (and having much the same issue here at work, CentOS 5 for the main project and not able to install a newer perl to bootstrap to perl6.)

[09:40] <DrForr> Though it heartens me that BiP is on 6.5.

[09:40] *** andreoss joined
[09:42] <timotimo> what is BiP?

[09:42] <DrForr> Built In Perl.

[09:42] *** amurf joined
[09:43] <andreoss> [ptc]: have you had a chance to look at hanged build process?

[09:44] *** brrt left
[09:45] *** lolisa joined
[09:45] <TEttinger> sweet, it looks like it's building now with 5.22

[09:47] *** amurf left
[09:51] <TEttinger> aaand no

[09:51] <TEttinger> anyone built NQP on windows?

[09:51] <TEttinger>     probing whether your compiler thinks that it is gcc  Can't compile simple gcc probe, so something is badly wrong at build/probe.pm line 92.

[09:51] <FROGGS> TEttinger: that message is from MoarVM

[09:51] <TEttinger> I actually have gcc with both mingw and cygwin

[09:51] <itz_> grrr 5.8.9 doesn't even install on the three platforms I tried without hacking

[09:52] <FROGGS> TEttinger: try this in nqp: perl Configure.pl --backend=moar --moar-option='--os=mingw32'

[09:53] <FROGGS> TEttinger: though, if the cygwin gcc is in PATH before the mingw gcc, you won't be lucky

[09:53] <DrForr> itz_: Maybe perlbrew to the rescue?

[09:53] <TEttinger> I haven't done gen-moar yet

[09:54] <FROGGS> TEttinger: but your message is from moar, I'm pretty sure about that

[09:54] <TEttinger> woo FROGGS++

[09:54] <FROGGS> ncie

[09:54] <FROGGS> nice*

[09:54] <TEttinger> yeah I added --gen-moar to that, it's building now

[09:54] <FROGGS> awesome

[09:55] <itz_> DrForr: I doubt that works unless it contains backports to clang etc

[09:55] <itz_> it would be easiest just to spin up Centos 5.x VM

[09:55] *** hoelzro_trying_w joined
[09:56] <DrForr> yep, that's pretty much what I ended up having to do.

[09:57] <TEttinger> ok, I got an error building http://pastie.org/private/1yumfq1kbnv6sg1u6ht9ia

[09:57] <timotimo> /bin/sh: c:Strawberryperlbinperl.exe: command not found

[09:57] <timotimo> yeah, that looks great!

[09:57] <TEttinger> beforethat

[09:57] <itz_> DrForr: actually if you have that .. you could just perl -wc on the various Configure.pl (rakudo, nqp etc) with the 'use 5.008;' lines

[09:58] <TEttinger> dyncall_callf.c:90:75: error: invalid conversion from 'DCpointer {aka void*}' to 'DCstring {aka const char*}' [-fpermissive]

[09:58] <timotimo> right

[09:58] *** dayangkun left
[09:58] *** zj joined
[09:58] *** Ven joined
[09:58] <timotimo> that's 3rdparty code we include, i wonder why it doesn't work on your system

[09:59] <TEttinger> steve ballmer?

[09:59] <timotimo> it probably wants to have a cast in there, but it seems that cast isn't necessary with other compilers

[09:59] <timotimo> though you're using gcc, so you're not on "another compiler"r eally

[09:59] <TEttinger> I'll check that it's a recent mingw

[09:59] <TEttinger> mingw. gcc.exe (GCC) 4.8.1

[09:59] <timotimo> is -fpermissive the flag to allow this to not be an error?

[10:00] <timotimo> if you set CFLAGS in your environment when building dyncall, maybe it'll work

[10:00] <TEttinger> this is an interesting experience so far

[10:00] <TEttinger> really not that many windows devs huh

[10:01] <FROGGS> there are some, but they're not using cygwin

[10:01] <TEttinger> nor am I

[10:01] <DrForr> There's a reason :) Though I should really start.

[10:01] <FROGGS> TEttinger: can you rename your cygwin folder, and try again?

[10:01] <TEttinger> mingw

[10:01] <TEttinger> I have cygwin, but it's not using that gcc

[10:02] <FROGGS> but perhaps stuff from cygwin is in PATH

[10:02] <TEttinger> this is the mingw bash shell, `which gcc` outputs: /mingw/bin/gcc.exe

[10:02] <FROGGS> I just want to make sure it does not pick anything up

[10:02] <FROGGS> ohh... I use cmd.exe only

[10:02] <FROGGS> can you try that instead?

[10:02] <TEttinger> aha!

[10:03] <TEttinger> `which gmake` : /c/Strawberry/c/bin/gmake.exe

[10:03] <itz_> --moar-option=--cc=/whatever/cc?

[10:03] <TEttinger> strawberry perl's gmake

[10:03] *** kaare_ left
[10:03] <TEttinger> I didn't get cmd to work yet

[10:03] <FROGGS> gmake is fine...

[10:03] <FROGGS> I just fixed that last week

[10:03] <TEttinger> itz_, I will try that in cmd

[10:03] <FROGGS> or this week or so

[10:06] *** abraxxa left
[10:06] *** abraxxa joined
[10:08] *** larion joined
[10:10] *** espadrine left
[10:11] <TEttinger> ok, this is freaky.

[10:11] <TEttinger> the first gcc on the PATH is MinGW's GCC.  which gcc confirms this

[10:11] <TEttinger> it isn't correctly responding to the probe

[10:11] *** _mg_ left
[10:14] *** larion left
[10:14] <TEttinger> what gcc doe you use, FROGGS?

[10:15] <FROGGS> strawberry's

[10:15] <TEttinger> I tried TDM-GCC-64, it didn't work either

[10:15] <FROGGS> and its gmake

[10:15] <TEttinger> oh!

[10:15] <FROGGS> in cmd.exe

[10:15] <FROGGS> bbiab lunch&

[10:15] *** akakcoli_ left
[10:16] <JimmyZ> or you can install msvc  and use it in CMD too :)

[10:16] <lolisa> Hi, total beginner here, are there anyway to stop list of list from automatic flattening?

[10:16] *** Ven left
[10:16] <TEttinger> well strawberry perl's gcc doesn't work either.

[10:17] <TEttinger> same error, doesn't respond to compiling a probe

[10:17] *** espadrine_ joined
[10:17] <DrForr> lolisa: Sure, use a reference to the list contents. foo( [1,2,3], [4,5,6] ); sub foo($r1,$r2) { $r2.[2]++ }

[10:18] <lolisa> DrForr, thx

[10:18] <DrForr> new to perl5 and 6, or just 6?

[10:18] <lolisa> new to dynamically typed language

[10:19] <DrForr> Cool. How'd you find perl6?

[10:19] <TEttinger> JimmyZ: I have MSVC, can I use its weird toolchain to compile Moar?

[10:19] *** Akagi201 left
[10:20] <lolisa> one Haskeller has been telling me how great perl6 is and I dont have the taste for python anyway, so there isnt really much choice to choose what dynamic language to learn (well, scheme is another choice but that's it

[10:20] <JimmyZ> TEttinger: yeah, open the MSVC tool cmd, and make sure perl is in your PATH 

[10:20] <DrForr> Also, potential bug-o-the-day - 'Use of Nil in string context  in method element...' # The '  ' suggests that there's a missing something in there.

[10:21] <DrForr> 'string context  in' # The spaces are there, my irssi chose an awkward spot to linebreak.

[10:22] *** itz joined
[10:31] <TEttinger> ok, seems to be doing... something with VS now. thanks, JimmyZ++

[10:35] <TEttinger> woah.

[10:35] <TEttinger> never ever seen this before.

[10:35] <TEttinger> src\strings\unicode.c(45034): fatal error C1026: parser stack overflow, program too complex

[10:35] <andreoss> m: enum Letters <A B C E D F G H>; my @a = A..C; my @b = A,B,C; say @a eq @b;

[10:35] <camelia> rakudo-moar 02c791: OUTPUT«False␤»

[10:36] <andreoss> why enums are converted to Ints?

[10:36] <TEttinger> enum Letters <A B C E D F G H>; my @a = A..C; my @b = A,B,C; say @a eqv @b;

[10:37] <TEttinger> m: enum Letters <A B C E D F G H>; my @a = A..C; my @b = A,B,C; say @a eqv @b;

[10:37] <camelia> rakudo-moar 02c791: OUTPUT«False␤»

[10:37] <TEttinger> interesting

[10:37] <andreoss> m: enum Letters <A B C E D F G H>; my @a = A..C; say @a».perl;

[10:37] <camelia> rakudo-moar 02c791: OUTPUT«0 1 2␤»

[10:37] <TEttinger> andreoss, oh, because they're enumerated types, probably :)

[10:38] <RabidGravy> I guess, that the range constructor coerces them to either Ints or Strs before creating the range

[10:38] <andreoss> TEttinger: how can i stick with aliases i gave them here?

[10:39] <TEttinger> this is my, just starting 2nd day of being aware of perl 6

[10:39] <TEttinger> so my answer is I dunno?

[10:40] <psch> m: enum Letters <A B C E D F G H>; say A ~~ Str; say A ~~ Int # this is why they get converted

[10:40] <camelia> rakudo-moar 02c791: OUTPUT«False␤True␤»

[10:40] <moritz> m: enum Letters <A B C E D F G H>; say A.succ

[10:40] <camelia> rakudo-moar 02c791: OUTPUT«1␤»

[10:40] <moritz> andreoss: you can't, I think

[10:40] <TEttinger> names are names, their values are those numbers

[10:40] *** uncleyear left
[10:41] <psch> also hey #perl6 o/

[10:41] <TEttinger> hey psch

[10:41] <TEttinger> so compiling Moar with VS 2015's cl.exe has an interesting error

[10:41] *** uncleyear joined
[10:41] <TEttinger> src\strings\unicode.c(45034): fatal error C1026: parser stack overflow, program too complex

[10:42] <timotimo> m: enum Letters <A B C E D F G H>; say A.WHAT.values.perl

[10:42] <camelia> rakudo-moar 02c791: OUTPUT«()␤»

[10:42] <timotimo> m: enum Letters <A B C E D F G H>; say A.WHAT.keys.perl

[10:42] <camelia> rakudo-moar 02c791: OUTPUT«()␤»

[10:42] <timotimo> m: enum Letters <A B C E D F G H>; say A.WHO.keys.perl

[10:42] <camelia> rakudo-moar 02c791: OUTPUT«("F", "B", "A", "H", "G", "D", "E", "C")␤»

[10:42] <timotimo> m: enum Letters <A B C E D F G H>; say A.WHO.values.perl

[10:42] <camelia> rakudo-moar 02c791: OUTPUT«(Letters::F, Letters::B, Letters::A, Letters::H, Letters::G, Letters::D, Letters::E, Letters::C)␤»

[10:42] <timotimo> you could work with this?

[10:45] <RabidGravy> andreoss, if you really want to do something like that you will need to make them back into the enums:

[10:45] <RabidGravy> m: enum Letters <A B C E D F G H>; my @a =  (A..C).map({Letters($_)}); my @b = A, B, C; say @a ~~ @b

[10:45] <camelia> rakudo-moar 02c791: OUTPUT«True␤»

[10:45] <RabidGravy> for istance

[10:46] <RabidGravy> instance

[10:53] *** larion joined
[10:53] <timotimo> m: enum Letters <A B C E D F G H>; say Letters::[A..C].perl;

[10:53] <camelia> rakudo-moar 02c791: OUTPUT«Method 'parameterize' not found for invocant of class 'Perl6::Metamodel::EnumHOW'␤  in block <unit> at /tmp/8lMQYtMyOk:1␤␤»

[10:53] <timotimo> m: enum Letters <A B C E D F G H>; say Letters::(A..C).perl;

[10:53] <camelia> rakudo-moar 02c791: OUTPUT«5===SORRY!5=== Error while compiling /tmp/4tFt5FKK1p␤Combination of indirect name lookup and call not supported␤at /tmp/4tFt5FKK1p:1␤------> 3s <A B C E D F G H>; say Letters::(A..C)7⏏5.perl;␤    expecting any of:␤        argument list␤»

[10:53] <timotimo> m: enum Letters <A B C E D F G H>; say Letters::.[A..C].perl;

[10:53] <camelia> rakudo-moar 02c791: OUTPUT«(:F(Letters::F), :B(Letters::B), :A(Letters::A), :H(Letters::H), :G(Letters::G), :D(Letters::D), :E(Letters::E), :C(Letters::C), Failure.new(exception => X::OutOfRange.new(what => "Index", got => 1, range => "0..0", comment => Any), backtrace => Backtrace.…»

[10:53] <timotimo> m: enum Letters <A B C E D F G H>; say Letters::.list.[A..C].perl;

[10:53] <camelia> rakudo-moar 02c791: OUTPUT«(:F(Letters::F), :B(Letters::B), :A(Letters::A))␤»

[10:53] <timotimo> m: enum Letters <A B C E D F G H>; say Letters::.values.[A..C].perl;

[10:53] <camelia> rakudo-moar 02c791: OUTPUT«(Letters::F, Letters::B, Letters::A)␤»

[10:53] <timotimo> yikes! :)

[10:54] <timotimo> never rely on hash ordering, folks

[10:54] <timotimo> or package ordering for that matter

[10:57] *** bin_005 left
[11:01] *** abraxxa left
[11:02] *** abraxxa joined
[11:02] *** brrt joined
[11:06] *** laouji left
[11:07] *** laouji joined
[11:09] *** regreg joined
[11:09] <FROGGS> TEttinger: I know that VS 2012 works

[11:09] *** itz left
[11:09] *** brrt left
[11:09] <timotimo> anyway, the working version of that code above would be this:

[11:09] <TEttinger> trying with 2013

[11:09] <timotimo> m: enum Letters <A B C E D F G H>; say Letters::{'A'..'C'}.perl

[11:09] <camelia> rakudo-moar 02c791: OUTPUT«(Letters::A, Letters::B, Letters::C)␤»

[11:10] *** itz joined
[11:14] *** gagalicious left
[11:15] *** Guest33354 is now known as ponbiki

[11:16] *** brrt joined
[11:16] *** gagalicious joined
[11:16] <RabidGravy> testers.perl6.org is doing that "Test report submitted as: http://testers.perl6.org/reports/</html>.html" again if anyone is interested

[11:17] *** zacts left
[11:18] *** zacts joined
[11:19] *** _mg_ joined
[11:20] <dalek> ecosystem: 1dc6aa5 | RabidGravy++ | META.list:

[11:20] <dalek> ecosystem: Add AccessorFacade to the modules list

[11:20] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/1dc6aa5aa7

[11:21] <RabidGravy> there, not big, not clever but if nothing else it may serve as an example that you can do funky things with traits without having to bake them into the language

[11:25] *** laouji left
[11:27] *** dalek left
[11:28] *** dalek joined
[11:28] *** ChanServ sets mode: +v dalek

[11:29] *** Ven joined
[11:32] *** amurf joined
[11:36] *** larion left
[11:37] *** larion joined
[11:37] *** amurf left
[11:41] <ab5tract> good *, #perl6

[11:41] <hoelzro> o/ ab5tract 

[11:42] <ab5tract> I was playing with ranges recently, and was a bit bemused as to what op, if any, would take two ranges and return True/False based on whether there is any overlap between the two

[11:43] <moritz> why I start to prefer web apps over desktop applications: find-as-you-type

[11:43] <ab5tract> I didn't see any obvious methods defined on Range, at least in the docs

[11:44] *** abraxxa left
[11:44] *** kaare_ joined
[11:44] *** abraxxa joined
[11:45] <moritz> I don't know about such an op.

[11:45] <ab5tract> moritz: funny, find-as-you-type is something I would love to add to `p6doc` (or through a separate wrapper)

[11:45] *** aborazmeh joined
[11:45] *** aborazmeh left
[11:45] *** aborazmeh joined
[11:46] *** skids joined
[11:48] <ab5tract> moritz: would adding an 'overlaps' method to Range make sense?

[11:49] *** uncleyear left
[11:49] *** uncleyear joined
[11:50] <moritz> ab5tract: overlaps-with

[11:50] <moritz> maybe

[11:50] <moritz> though since it's a symmetric operation, it would better fit into a sub or method

[11:51] <moritz> m: say (1..3) ~~ (0..5)

[11:51] <camelia> rakudo-moar 02c791: OUTPUT«True␤»

[11:51] <moritz> m: say (1..3) ~~ (2..5)

[11:51] <camelia> rakudo-moar 02c791: OUTPUT«False␤»

[11:51] <moritz> ah, it's "contained in", not "overlaps"

[11:51] <moritz> m: say (1..3) ~~ (1^..3)

[11:51] <camelia> rakudo-moar 02c791: OUTPUT«False␤»

[11:52] <moritz> m: say (1^..3) ~~ (1..3)

[11:52] <camelia> rakudo-moar 02c791: OUTPUT«True␤»

[11:55] <ab5tract> moritz: Indeed. I thought of it as a moment where smart match has to make a choice where DWIM is a bit fuzzy.

[11:55] <ab5tract> Have there ever been adverbs on smart match?

[11:56] <ab5tract> I imagine that it would get too contextual and dirty, quickly

[11:57] <moritz> the idiomatic way is to say  all(range1) ~~ range2

[11:57] <moritz> but it's neither efficient nor totally correct

[11:58] *** AlexDaniel joined
[11:58] *** abraxxa left
[11:59] *** abraxxa joined
[12:04] <Mouq> m: say {$^a.min <= $^b.min <= $a.max or $b.min <= $a.min <= $b.max}(1..5,2..6)

[12:04] <camelia> rakudo-moar 02c791: OUTPUT«True␤»

[12:04] <ab5tract> moritz: do you mean any(range1) ~~ range2 ?

[12:05] *** skids left
[12:05] <Mouq> m: say {$^b.min ~~ $^a or $a.min ~~ $b}(1..5,2..6)

[12:05] <camelia> rakudo-moar 02c791: OUTPUT«True␤»

[12:05] <moritz> ab5tract: ah, yes

[12:05] <ab5tract> Mouq: that second one is nice and idiomatic as well

[12:05] <moritz> m: say so any(^1) ~~ (0.1..0.9)

[12:05] <camelia> rakudo-moar 02c791: OUTPUT«False␤»

[12:05] <moritz> ... and ignores excluded endpoints

[12:06] <Mouq> moritz: Ahh, dang

[12:06] <ab5tract> Mouq: however I still think there is an argument for encapsulating that inside a method that ranges can carry around with them

[12:06] <ab5tract> moritz: true that :)

[12:06] <Mouq> m: say {$^b.min ~~ $^a or $a.min ~~ $b}(1..5,5^..6)

[12:06] <camelia> rakudo-moar 02c791: OUTPUT«True␤»

[12:08] <Mouq> Hm… yeah, trying to account for that is a mess. You can be elegantish but not real succint

[12:08] *** akakcolin joined
[12:09] <ab5tract> Mouq: which also makes me yearn for something like an 'effective-min', which can do nearly-inevitable ternary conditional phrase

[12:09] <ab5tract> so that you don't have to

[12:10] <moritz> so, what would effective-min return?

[12:12] <RabidGravy> 85 unique module authors, that's quite healthy

[12:13] <ab5tract> m: my $exc-min = False; my $min= 5; sub effective-min { say $exc-min ?? $min+1 !! $min }; effective-min; $exc-min = True; effective-min

[12:13] <camelia> rakudo-moar 02c791: OUTPUT«5␤6␤»

[12:14] <Mouq> ab5tract: My thought is that the min of 5^..6 is 5.00000000…00000001

[12:14] <Mouq> :P

[12:14] <ab5tract> Mouq: very fair point :)

[12:18] <moritz> 5 + Epsilon

[12:19] <masak> this is why real math makes a distinction between "minimum" and "infimum".

[12:19] <masak> the range 5^..6 strictly has no minimum.

[12:19] <masak> it has an infimum, though. it's 5.

[12:20] <moritz> because for every Epsilon, you can find a smaller Epsilon' so that 5 + Epsilon' is still part of the range

[12:20] <masak> https://en.wikipedia.org/wiki/Infimum_and_supremum

[12:20] <masak> moritz: right. that end of the interval is open, which amounts to saying the same thing: you can always get closer to the edge.

[12:20] <hoelzro> jnthn: regarding changelogs for NQP: should that be rolled into the rakudo changelog?

[12:21] <moritz> hoelzro: example?

[12:21] <DrForr> paging Dr. Zeno: Cleanup on aisle 8... no, 4..., no, 2... :)

[12:21] <hoelzro> moritz: for example, I fixed that bug yesterday in NQP. NQP doesn't seem to have a changelog, so where should that be recorded?

[12:21] <jnthn> hoelzro: I don't think we bother producing an NQP one at the moment.

[12:21] <jnthn> hoelzro: Well, it's recorded in the commit log... :)

[12:22] <masak> DrForr: is the message getting twice as fast with every correction too? :P

[12:22] <jnthn> The chnage log is really just a curated version of that in a sense

[12:22] <hoelzro> fair enough =)

[12:22] <DrForr> You just can't see the bandwidth restrictions :)

[12:23] *** aborazmeh left
[12:23] <hoelzro> so it seems that m-stresstest is passing, but not j-stresstest; how much should I investigate into JVM-specific failures for the release?

[12:25] <moritz> hoelzro: if it was a bug that manifested itself in Perl 6 code, you can mention it in the rakudo changelog (if it seems noteworthy; we don't mention every change or bugfix)

[12:25] <hoelzro> alright

[12:26] <Mouq> m: class ε {}; role Greater[$n] { method near { $n }}; multi infix:«<»(Numeric:D $a, Greater $b) { $a == $b.near ?? True !! $a < $b.near }; multi infix:<+>(Numeric:D $n, ε:U $) { Greater[$n] }; say 5 < 5 + ε; say 5.00000001 < 5 + ε

[12:26] <camelia> rakudo-moar 02c791: OUTPUT«True␤False␤»

[12:27] *** uncleyear left
[12:27] *** uncleyear joined
[12:35] <dalek> perl6-examples: 6c2842a | andreoss++ | categories/euler/prob054-andreoss.pl:

[12:35] <dalek> perl6-examples: [euler] prob054 using objects as hash keys

[12:35] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/6c2842a5ca

[12:41] <andreoss> can i import java::util::*: with perl6-j? 

[12:43] *** Ven left
[12:56] <dalek> rakudo/nom: d71640a | hoelzro++ | docs/ChangeLog:

[12:56] <dalek> rakudo/nom: Update changelog for release

[12:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d71640a2b4

[12:56] <dalek> rakudo/nom: 1fd3f0d | hoelzro++ | docs/announce/2015.06.md:

[12:56] <dalek> rakudo/nom: Update 2015.06 announcement with final changes/contributors

[12:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1fd3f0d230

[12:57] *** telex left
[12:58] *** telex joined
[13:00] <dalek> rakudo/nom: 1ee7c94 | hoelzro++ | tools/build/NQP_REVISION:

[13:00] <dalek> rakudo/nom: [release] bump NQP revision

[13:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1ee7c945d3

[13:00] <dalek> rakudo/nom: 8532c0f | hoelzro++ | VERSION:

[13:00] <dalek> rakudo/nom: [release] bump VERSION

[13:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8532c0fe13

[13:05] *** Akagi201 joined
[13:09] <masak> ooh. http://blog.ionelmc.ro/2014/08/03/the-most-underrated-feature-in-python-3/

[13:09] <masak> how do we handle this one in Perl 6?

[13:10] <masak> (displaying nested exceptions)

[13:11] *** [Sno] left
[13:11] *** [Sno] joined
[13:11] <masak> they call it "chained exceptions" in the HN comments.

[13:11] *** aborazmeh joined
[13:11] *** aborazmeh left
[13:11] *** aborazmeh joined
[13:11] <masak> I'm pretty sure we have support for the nesting/chaining itself... but how do we display that, as a stacktrace?

[13:12] *** uncleyear left
[13:13] *** uncleyear joined
[13:14] <FROGGS> masak: I just had that here in channel the other day

[13:14] <timotimo> we have that for failure objects

[13:14] <timotimo> when they get thrown

[13:14] <FROGGS> m: sub f returns Int { fail "a" }; f() # like this

[13:14] <camelia> rakudo-moar 02c791: OUTPUT«Earlier failure:␤ a␤  in block <unit> at /tmp/CfDNyAcd95:1␤␤Final error:␤ Type check failed for return value; expected 'Int' but got 'Failure'␤  in any return_error at src/vm/moar/Perl6/Ops.nqp:639␤  in sub f at /tmp/CfDNyAcd95:1␤  in block…»

[13:14] <FROGGS> masak: ^^

[13:16] *** yqt joined
[13:17] <psch> fwiw, that's changing, in reference to RT #64990

[13:17] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=64990

[13:17] *** molaf joined
[13:17] <psch> i've finished moar and jvm letting Failure slip through p6typecheckrv, but still to adjust the Optimizer to not inline non-native return types anymore

[13:17] *** uncleyear left
[13:17] *** uncleyear joined
[13:18] <psch> +need

[13:18] <psch> m: sub f returns Int { fail "a" }; say f() ~~ Failure # will print "True" then

[13:18] <camelia> rakudo-moar 02c791: OUTPUT«Earlier failure:␤ a␤  in block <unit> at /tmp/bmS5b1iraL:1␤␤Final error:␤ Type check failed for return value; expected 'Int' but got 'Failure'␤  in any return_error at src/vm/moar/Perl6/Ops.nqp:639␤  in sub f at /tmp/bmS5b1iraL:1␤  in block…»

[13:20] <psch> i suppose that's only relevant to that specific example, though

[13:21] <psch> i.e. the "Earlier failure: ...\nFinal error:..." things stays

[13:22] <hoelzro> how much should I care about JVM stresstest failures pre-release?

[13:22] <hoelzro> there's a handful, but they seem to be around GLR-looking things

[13:23] * moritz ususally doesn't care too much about JVM stresstest failures

[13:25] <hoelzro> alright, I'll not worry about them, then

[13:27] <psch> jnthn: i'm not sure how the guarding for native types only is supposed to look.  in my understanding i'd just skip all of Perl6::Optimizer.inline_call..?

[13:27] <masak> FROGGS: oh, nice. then it ought to be possible to do something nice for chained exceptions as well.

[13:27] <masak> TimToady: suddenly I'm curious about why it's infix:<.> in Perl 5. do you remember what went into that particular language decision?

[13:31] <masak> (not asked in a critical way at all. pre-OO, it seems to have been a very sensible choice. and I know fivers who would still be ready to defend it.)

[13:35] *** vimal2012 joined
[13:38] <zostay> is the .key of a Pair always a string?

[13:39] *** zj left
[13:39] *** domidumont left
[13:39] <zostay> i ask because i see some eq comparisons in Enum for AT-KEY and EXISTS-KEY

[13:39] <zostay> i would have thought those would be eqbv

[13:39] *** domidumont joined
[13:39] <zostay> eqv

[13:41] <timotimo> m: say (True => 1).key.perl

[13:41] <camelia> rakudo-moar 8532c0: OUTPUT«"True"␤»

[13:41] <timotimo> i believe Pair coerces

[13:41] *** brrt left
[13:41] <timotimo> oh, wait

[13:41] <timotimo> that's autoquoted

[13:42] <timotimo> m: say ((True) => 1).key.perl

[13:42] <camelia> rakudo-moar 8532c0: OUTPUT«Bool::True␤»

[13:42] *** skids joined
[13:42] <timotimo> so yeah

[13:42] <timotimo> but hashes are String-keyed by default

[13:44] *** uncleyear left
[13:45] *** uncleyear joined
[13:45] <zostay> it'd be nice if there was a TypedPair to provide parity with TypeHash

[13:47] *** mrf left
[13:50] <hoelzro> would someone mind uploading the rakudo tarball and signature for me? they're at http://hoelz.ro/files/rakudo-2015.06.tar.gz and http://hoelz.ro/files/rakudo-2015.06.tar.gz.asc

[13:50] <itz> can someone close https://rt.perl.org/Ticket/Display.html?id=123728 please?

[13:51] <hoelzro> itz: done!

[13:51] <itz> ty

[13:51] <moritz> hoelzro: has the nqp tarball been uploaded already?

[13:51] <FROGGS> hoelzro: I can

[13:51] <FROGGS> moritz: not that I can see

[13:51] <hoelzro> moritz: no, it's on my server too

[13:52] <FROGGS> hoelzro: is the nqp tarball ready too?

[13:52] <hoelzro> whenever someone gets a chance, please upload the NQP tarball and signature; they're at http://hoelz.ro/files/nqp-2015.06.tar.gz and http://hoelz.ro/files/nqp-2015.06.tar.gz.asc

[13:52] <FROGGS> and moarvm also?

[13:52] <hoelzro> MoarVM too

[13:52] <FROGGS> that's what only jnthn can do

[13:52] <hoelzro> if anyone's around with upload permissions, I've uploaded the tarball to http://hoelz.ro/files/MoarVM-2015.06.tar.gz

[13:52] <moritz> hoelzro: nqp downloaded

[13:53] <moritz> erm, uploaded

[13:53] <moritz> whatever :-)

[13:53] *** vimal2012 left
[13:53] <FROGGS> moritz: and the signature?

[13:54] <moritz> done

[13:54] <FROGGS> moritz++

[13:54] <hoelzro> moritz++ indeed

[13:54] <moritz> rakudo done too

[13:54] <hoelzro> horray

[13:55] <hoelzro> we just need jnthn to upload MoarVM, and I'll send out the release announcement

[13:56] <jnthn> hoelzro: Where's the release now?

[13:56] <hoelzro> http://hoelz.ro/files/MoarVM-2015.06.tar.gz

[13:57] <jnthn> Done.

[13:57] <hoelzro> \o/

[13:57] <hoelzro> alright, out goes the email

[13:57] <psch> hoelzro++

[13:58] <skids> hoelzro++

[13:58] <moritz> hoelzro++ # release

[13:59] * nwc10 hammers reload on the website to see when it will change

[13:59] <nwc10> er, http://moarvm.org/ that is

[14:00] <nwc10> hoelzro++ # shipping stuff

[14:00] <jnthn> nwc10: I didn't change *that*

[14:00] *** mrf joined
[14:00] <jnthn> Just wget'd the file into place

[14:01] <FROGGS> hoelzro++

[14:01] <hoelzro> "You're done!  Celebrate with the appropriate amount of fun."

[14:01] <hoelzro> \o/

[14:01] <FROGGS> *g*

[14:02] *** lolisa left
[14:05] <CQ> is there a roadmap somewhere on what has to happen (major tasks / milestones?) for perl6 to turn RC / release this year?

[14:10] *** JimmyZ_ joined
[14:16] *** lizmat joined
[14:17] *** _mg_ left
[14:18] *** regreg left
[14:19] *** brrt joined
[14:19] *** regreg joined
[14:20] *** lucasb joined
[14:21] <PerlJam> hoelzro++

[14:23] <sjn> hoelzro++ # well volunteered

[14:24] <lucasb> Thanks for the release! My installed rakudo was two months old, will upgrade now.

[14:24] *** maettu left
[14:25] *** run4flat joined
[14:26] *** maettu joined
[14:26] <run4flat> yesterday jnthn mentioned that there is no email forum for discussing PDLish stuff for Perl 6

[14:26] <run4flat> I was thinking more about this

[14:26] <PerlJam> CQ: Since it's the test suite that defines the language, I think it's mostly just marking up the tests appropriately. 

[14:26] <run4flat> since the PDL-related stuff in S09 hasn't been touched much, it'll need some work to bring up to date

[14:27] <run4flat> wouldn't perl6-language be the forum for discussing that?

[14:27] <run4flat> I just feel like I would like an extended discussion on some of these things, i.e. not on irc

[14:27] <PerlJam> run4flat: Sure, it would be *a* forum for discussing that :)

[14:27] <PerlJam> run4flat: so would #perl6 

[14:28] <run4flat> Or, should I take my ideas to perl6-compiler?

[14:28] <brrt> what is PDL

[14:28] <PerlJam> run4flat: Are you ideas compiler-specific?  Like ways to implement some optimized data structure?

[14:28] <run4flat> Perl Data Langauge

[14:28] <brrt> ah

[14:28] <run4flat> like matlab, but for Perl (5)

[14:29] <run4flat> PerlJam, no

[14:29] <run4flat> I'm interested in talking about specs

[14:29] <PerlJam> run4flat: then, perl6-language sounds like the right place to me

[14:30] <run4flat> ... I guess I could write my ideas in a blog post, or discuss them on one of PDL's mailing lists, too

[14:30] <run4flat> I just feel like writing something lengthy, not chit-chatty

[14:30] * run4flat cogitates on the blog-post idea

[14:31] <PerlJam> run4flat: IF you do the blog post, make sure to mention the URL here

[14:31] <run4flat> yeah, good call

[14:32] * PerlJam kinda wishes we could take all of the work the PDL folks have already done and somehow integrate that into Perl 6.   I haven't looked, but my gut tells me that's probably not possible

[14:33] *** bjz joined
[14:34] * run4flat shares that wish, but doesn't believe it's possible, or the right way for Perl 6

[14:34] *** muraiki joined
[14:42] *** abraxxa left
[14:42] *** abraxxa joined
[14:43] *** uncleyear left
[14:44] <psch> hm, i don't know about changing Optimizer.nqp — it already looks like it works right from here: https://gist.github.com/peschwa/f399cf10914f1d287a74

[14:44] *** uncleyear joined
[14:51] *** gcole left
[14:55] *** run4flat left
[14:56] *** FROGGS left
[14:58] *** gagalicious left
[14:59] *** preyalone joined
[15:00] *** aborazmeh left
[15:00] *** brrt left
[15:00] *** brrt joined
[15:03] *** gagalicious joined
[15:05] *** uncleyear left
[15:06] *** uncleyear joined
[15:09] <JimmyZ_> psch: you forget to release failure_o 

[15:09] *** amurf joined
[15:13] <psch> JimmyZ_: thanks, corrected that

[15:14] *** amurf left
[15:19] *** larion left
[15:24] *** FROGGS joined
[15:25] *** uncleyear left
[15:26] *** gcole joined
[15:26] *** uncleyear joined
[15:29] *** Ven joined
[15:33] *** gfldex joined
[15:34] *** zakharyas left
[15:37] <psch> jnthn: can i provoke the inlining problems somehow? 'cause as mentioned, it looks fine as-is.

[15:42] <regreg> is there any reason why parrot fell out of favor other than implementation issues?

[15:42] <regreg> like non-inherent performance issues

[15:45] *** slavik left
[15:49] *** slavik joined
[15:50] *** diana_olhovik left
[15:52] <brrt> hmm, wish you hadn't asked that question

[15:52] <ugexe> because they want to release in December and maintaing support for 3 VMs would be too much. MoarVM is built for p6, so its the obvious choice for VM to get things done in time. JVM gives them a stable VM to test stuff with

[15:52] *** uncleyear left
[15:53] *** uncleyear joined
[15:53] <brrt> JVM is also 'popular' in an IT sense

[15:53] <ugexe> right. its got countless man hours behind it, hardening, etc

[15:54] *** domidumont left
[15:54] <brrt> that too, and IT managers trust it

[15:54] <ugexe> i think NQP might be maintaining parrot support

[15:55] <PerlJam> ugexe: I don't buy your "3 VMS is too much" argument :)

[15:55] <ugexe> its not 'too much', just too much to get done before december 

[15:56] <[ptc]> andreoss: you mean in the examples website?

[15:56] <brrt> anyway; i think you can safely say that parrots goals were too ambitious, and that this is inherently a performance issue

[15:56] <[ptc]> andreoss: last time I looked, it built ok, just took aaaaaaagggges to run, and no colour came out via Text::VimColour :S

[15:56] <PerlJam> brrt: mostly a "people performance" issue  :)

[15:57] *** Ven left
[15:57] <brrt> i.e. parrot wanted to support all dynamic languages. all dynamic languages are really different. ergo, these differences have to be abstracted. irreducible abstraction means poor performance

[15:57] <brrt> well, yes, parrot had lost the wind from its sails

[15:58] <brrt> to make matters worse, parrot had it's own PMC object system that didn't quite map onto perl6's object system

[15:59] <PerlJam> brrt: to be fair .... Parrot had PMCs long before Perl 6 knew what kind of object system it needed/wanted

[15:59] <brrt> oh, yes

[16:00] <brrt> in retrospect one of the greater mistakes (if i may call it that?) was starting on parrot before properly knowing what perl6 would be like

[16:00] <PerlJam> but, yeah, momentum kind of impeded parrot's progress towards Perl 6.

[16:00] *** lichtkind joined
[16:01] <PerlJam> brrt: I don't think that was a mistake.   We had to start somewhere.

[16:01] <PerlJam> brrt: perhaps the real mistake is building something of unknown suitability for Perl 6, then building infrastructure on top of it making it harder to change.

[16:02] <PerlJam> brrt: also, all the while trying to cater to "all dynamic languages" rather than just Perl 6

[16:02] <moritz> if you think of parrot as the prototype to throw away, as in the old saying "plan to throw one away, because you will anyway"

[16:02] <moritz> then parrot was quite a success

[16:02] <PerlJam> moritz: indeed

[16:02] <moritz> and still is, because we wouldn't have MoarVM without it

[16:03] <brrt> yes, that is true

[16:03] <brrt> also as a good cold lesson in the nature of programming languages

[16:03] <JimmyZ_> stepping-stone

[16:04] <JimmyZ_> fork mkarcvm

[16:04] *** uncleyear left
[16:05] <JimmyZ_> fork moarvm and s/moarvm/parrot/g and you will have a new parrot if it is allowed ;)

[16:05] <itz> I think the vim colour thing should work now .

[16:06] <itz> with examples.perl6.org .. I added a style sheet 

[16:06] <brrt> moritz: my only counterpoint would be that parrot was awfully overengineered to be a prototype

[16:06] <brrt> but overengineering is also a form of experimentation

[16:06] <itz> [ptc]: when did you last try it?

[16:06] *** muethos joined
[16:11] *** brrt left
[16:13] <moritz> http://stefan-marr.de/papers/pldi-marr-et-al-zero-overhead-metaprogramming/

[16:14] *** yqt left
[16:15] *** yqt joined
[16:18] *** akakcolin left
[16:30] <itz> how did the first stage0 files get generated? :)

[16:31] *** domidumont joined
[16:31] <moritz> it got bootstrapped by nqp-rx

[16:32] *** diana_olhovik_ joined
[16:32] <moritz> which in turn got bootstrapped by the previous nqp

[16:32] <moritz> which in turn was bootstrapped by PGE, which was written in PIR

[16:33] *** spider-mario joined
[16:34] <hoelzro> here I was thinking it was sung into existence

[16:39] <moritz> .oO( sung cost )

[16:42] <mst> sungo cost: one live badger

[16:43] <[ptc]> itz: a couple of days ago, I forget exactly when.  Around the time you recommended to me that I should give it another go

[16:44] <[ptc]> itz: on the 14th of June at just after 1pm, to be more exact

[16:45] <andreoss> [ptc]: i guess Text::VimColour is not installed, also vim 7.4 should be installed too 

[16:46] <andreoss> with plugins for perl6

[16:47] *** larion joined
[16:49] *** mohij joined
[16:49] <[ptc]> andreoss: hrm, I thought it was.  I'll have another look

[16:50] <andreoss> also it seems to use a bit outdated rakudo 2015.04

[16:50] <[ptc]> andreoss: I was getting the line numbers, but not the colour

[16:51] <[ptc]> andreoss: ok, I need to update the rakudo used for the examples

[16:53] <colomon> ugexe: I’m very confused by your patch, as panda installs ABC for me without any issue already.

[16:53] <andreoss> [ptc]: line numbers in html?

[16:54] <[ptc]> andreoss: the rakudo used on examples.perl6.org should use the most recent rakudo as installed on hack

[16:54] <[ptc]> andreoss: yes

[16:54] *** nys joined
[16:54] <[ptc]> andreoss: that's in my local build of the examples

[16:54] <AlexDaniel> hoelzro: fixed? What error are you seeing? I've just built the whole thing with rakudobrew 15 minutes ago and the problem is still there (https://rt.perl.org/Public/Bug/Display.html?id=125339)

[16:54] <andreoss> probably some local .vimrc caused that

[16:55] <[ptc]> duh, yes, just realised that was me...  sigh

[16:55] <ugexe> colomon: well, i use stricter rules that only use whats in the meta. anyways if you look at what is actually changed there is little to be confused about

[16:55] <AlexDaniel> m: take 1

[16:55] <camelia> rakudo-moar 8532c0: OUTPUT«take without gather␤␤»

[16:55] <[ptc]> strange that I don't get the colours though... I use the perl6 plugin which is more up to date than that delivered with vim on debian jessie

[16:56] <andreoss> [ptc]: probably css is missing, let me check

[16:57] *** JimmyZ_ left
[16:58] <[ptc]> andreoss: does Text::VimColour require that 'syntax on' is set somewhere in the process calling vim?

[16:58] <[ptc]> andreoss: it's just that the output on examples.perl6.org is also without colour

[16:59] <andreoss> syntax on is default

[17:01] <[ptc]> ok

[17:01] <itz> you need 7.4 which is in jessie I think

[17:01] <[ptc]> itz: yup, it's 7.4

[17:02] <[ptc]> it's also 7.4 on hack

[17:02] <andreoss> [ptc]: also are there perl6 plugins on examples.perl6.org?

[17:02] <andreoss> it does set lang=perl, but there might be no coloring for that

[17:02] <itz> I imported html/css/vim.css

[17:03] <[ptc]> andreoss: I just opened a perl6 file on hack.perl6.org (where examples.perl6.org is hosted) and was able to correctly syntax highlight using perl5 and perl6

[17:04] <[ptc]> my guess is that the plugins delivered with debian are the ones used on hack

[17:04] <[ptc]> should we be using the updated ones from vim-perl?

[17:05] <itz> I used vim from hg without upgraded vim plugins 

[17:05] *** espadrine_ left
[17:06] *** preyalone left
[17:07] <itz> hmmm I wonder if it's missing a debian package

[17:07] <[ptc]> hrm, let me check that hack actually has Text::VimColour installed...

[17:08] <itz> try :toHTML within vim

[17:08] <itz> oops :TOhtml

[17:10] <andreoss> i get no highlighting without vim-perl plugin

[17:10] <[ptc]> itz: should I be seeing anything in particular with :TOhtml (other than the html, of course)

[17:10] <itz> html I guess

[17:11] <itz> I have vim-common vim-runtime vim-tiny

[17:13] <[ptc]> just installing Text::VimColour in hack.p6c.org's rakudobrewed perl6

[17:14] <andreoss> itz: your name on github is stmuk?

[17:14] <itz> yes that's me seve

[17:14] <itz> err steve

[17:15] *** Psyche^ joined
[17:16] * [ptc] is building the examples website by hand

[17:18] <itz> I'm wondering if there is a dependency on a particular .vimrc or maybe the filename vim is called with

[17:19] *** uncleyear joined
[17:19] *** abraxxa left
[17:21] <timotimo> or maybe vim-perl or vim-python or something like that?

[17:22] <[ptc]> if code can be syntax highlighted with vim on hack, then it should work

[17:22] <[ptc]> my guess is that vim-perl is installed, however it's a virtual package, so 'aptitude search vim-perl' isn't that helpful...

[17:22] <itz> http://examples.perl6.org/css/vim.css does need to be in place

[17:23] <itz> I'm sure it doesn't need a perl linked into vim

[17:23] <[ptc]> itz: that css file doesn't seem to be available on examples.perl6.org; I'm getting a 404

[17:24] <andreoss> git pull?

[17:24] <itz> I checked it into git in the last week or so

[17:24] <[ptc]> it's there on hack

[17:25] *** ShimmerFairy left
[17:25] <[ptc]> but maybe it's not getting synced to the web site for some reason

[17:25] <ugexe> [ptc]: made a comment about panda-test for travis-build

[17:26] <[ptc]> ugexe: ok, haven't seen that yet

[17:27] <[ptc]> ugexe: we're installing panda as part of the rakudo installation on travis

[17:29] <ugexe> ouch. panda still breaks regularly, so it will end up blocking results

[17:29] <[ptc]> ugexe: hoelzro recommended that we use panda-test, since it is part of the current toolchain (I had used a similar incantation to what you recommend as an alternative)

[17:29] <[ptc]> ugexe: how should users then install dependent modules?

[17:30] <ugexe> install panda, its 1 extra command. and then they can choose how its installed as well

[17:30] <[ptc]> ugexe: my guess was that we should provide something similar to cpanm so that they can install dependencies required for them to test their modules

[17:30] <ugexe> make it easy to install panda. but if you have no dependencies then you have no need for it. cpanm doesnt break regularly, so thats different

[17:31] <[ptc]> it's all still somewhat up in the air if everything works on travis the way we want it from the word go; testing the travis scripts on my dev machine were... difficult

[17:31] <[ptc]> ugexe: ok, that's a good argument

[17:32] <[ptc]> strange that BanzaiMan pushed to get the updates in but then hasn't said boo since...

[17:32] *** meisl joined
[17:34] *** mrf left
[17:34] <[ptc]> itz, andreoss: btw: if things on examples.perl6.org don't seem to be working the way we expect, then  http://examples.perl6.org/build-log/ is a good place to look

[17:34] *** mrf joined
[17:34] <itz> ok thanks

[17:35] <[ptc]> I just found that the html wasn't being built since Text::VimColour wasn't installed :-)

[17:35] <meisl> hello #perl6

[17:35] *** akakcolin joined
[17:36] <itz> I've just discovered Text::VimColour doesn't pass the tests if I delete my .vimrc anyway :)

[17:37] *** ShimmerFairy joined
[17:38] <ugexe> [ptc]: looks like he regularly does blog posts, but hasnt in the last 18 days. so he is probably on vacation or something

[17:38] <[ptc]> good point

[17:38] <hoelzro> AlexDaniel: oh, my bad; I did a 'take;'

[17:40] <andreoss> i wonder if it would be possible to highlight syntax based on AST in Perl6, like Eclipse does for Java

[17:41] <timotimo> i'm pretty sure i saw a simple proof-of-concept recently

[17:41] <andreoss> probably parse code with STD, and it would be a graph coloring problem

[17:42] <[ptc]> hrm, vim.css is now there, however the perl6 code still isn't being highlighted

[17:43] <andreoss> though the really interesting thighs to have would be a scope coloring or context coloring.

[17:43] *** diana_olhovik_ left
[17:43] <itz> is this v0.2? do the tests pass?

[17:43] <andreoss> [ptc]: is the code inside <pre>?

[17:44] <[ptc]> itz: well, it installed via panda, so the tests should have passed

[17:44] <itz> actually i noticed the brew panda I just used seemed to skip tests

[17:45] <[ptc]> itz: yup, it's v0.2

[17:46] <[ptc]> andreoss: yes, it's inside a <pre>

[17:46] <itz> I think there is a further problem .. there is a hidden dependency on some lines in my .vimrc (which is quite long)

[17:47] <andreoss> [ptc]: it tries to call vim, but if it fails for soe reason the CATCH block wraps code in <pre> 

[17:47] <itz> I think its the issue where it just hangs .. I see that with the tests and no .vimrc present on jessie

[17:49] <andreoss> http://paste.debian.net/238648/ tests pass with my .vimrc

[17:49] <itz> there is something in our vimrc which isn't present in the vim shell line

[17:51] <andreoss> probably vim in debian has some smart stuff in it  

[17:52] <itz> thats quite possible .. I had problems with zsh configuration on debian recently caused by overzealous debian customisation

[17:53] <itz> my vimrc is 96 lines :

[17:53] <itz> :/

[17:59] <[ptc]> and when there's no vimrc?  What happens then?

[17:59] <itz> hangs

[18:02] *** dakkar left
[18:04] <tony-o> i always end up building vim from source in debian

[18:05] <tony-o> it behaves strangely

[18:08] <[ptc]> itz: I just tried `vim -T builtin_dumb -c 'set noswapfile|set bg=light|set ft=perl6|TOhtml|wq! P01-scottp.html|quit' P01-scottp.pl` in categores/99-problems on hack

[18:08] <itz> oh?

[18:08] <[ptc]> itz: it ran through fine (doesn't hang), however the html is wrapped in a <pre>

[18:08] <[ptc]> more specifically, <pre id='vimCodeElement'>

[18:09] <itz> thats correct behaavior

[18:09] <[ptc]> should that be highlighted, or is there something missing there?

[18:09] <[ptc]> htm

[18:09] <[ptc]> *hrm

[18:09] <itz> that should be the html

[18:10] <itz> I think there is an embedded style sheet by default 

[18:11] <[ptc]> itz: yes, it looks that way

[18:11] <itz> does the test pass?

[18:13] <[ptc]> https://gist.github.com/paultcochrane/e6e5d383dbe59852741a

[18:13] <[ptc]> itz: the tests pass afaik (well, they pass when installing via panda)

[18:15] <[ptc]> itz: btw, what is vim-let?

[18:15] <itz> ask andreoss :)

[18:15] <andreoss> you could pass aditional arguments to vim shell with it

[18:16] <andreoss> like set numbers

[18:16] <[ptc]> ah, ok

[18:16] <[ptc]> must dash for a while  # dindins

[18:16] <PerlJam> m: use Test; is-approx(1,1);  # why does it choose the 3rd variation of is-approx?

[18:16] <camelia> rakudo-moar 8532c0: OUTPUT«Absolute tolerance must be a positive number greater than zero␤  in sub is-approx at lib/Test.pm:254␤  in block <unit> at /tmp/LiirJJH2vd:1␤␤»

[18:20] <[ptc]> PerlJam: several links are mentioned in https://github.com/rakudo/rakudo/pull/366 concerning the implementation.  Hopefully one will help you answer that question!

[18:20] *** kjs_ joined
[18:21] <[ptc]> PerlJam: improvements to the algorithm are most certainly welcome!  And more discussion as to its correctness etc

[18:21] <[ptc]> PerlJam: I wish more discussion had happened before the patch got merged...

[18:21] * [ptc] really afk now

[18:22] <PerlJam> [ptc]: Well, that questions was really about multi dispatch.  But it was triggered by a problem I have with the current implementation that I hope to soon fix  (just as soon as I figure out what the right thing is :)

[18:22] <PerlJam> but [ptc]++ for is-approx

[18:25] <tony-o> http::server::async has a branch converted to conform to htt::server but async inet is even more broken with the cross thread read stuff

[18:27] *** [Sno] left
[18:27] *** ][Sno][ joined
[18:28] *** ][Sno][ is now known as [Sno]

[18:28] *** andreoss left
[18:32] *** _mg_ joined
[18:36] *** kjs_ left
[18:38] *** kurahaupo joined
[18:38] *** kurahaupo left
[18:39] *** bin_005 joined
[18:40] <dalek> ecosystem: 3a5ea41 | PerlJam++ | META.list:

[18:40] <dalek> ecosystem: Add Math::Trig

[18:40] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/3a5ea41ecc

[18:40] *** kjs_ joined
[18:44] <dalek> perl6-most-wanted: 53e10cb | PerlJam++ | most-wanted/modules.md:

[18:44] <dalek> perl6-most-wanted: Add WIP for Git::Wrapper

[18:44] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/53e10cb6c4

[18:44] *** hudo joined
[18:47] *** lucasb left
[18:47] *** amurf joined
[18:49] *** kjs_ left
[18:51] *** molaf_ joined
[18:51] *** amurf left
[18:54] *** molaf left
[19:02] *** brrt joined
[19:05] *** vendethiel joined
[19:06] *** vendethiel- left
[19:08] *** vendethiel- joined
[19:09] <[Coke]> (pdl discussion) I would recommend against perl6-language unless you're ready to deal with a million bikeshedders.

[19:09] *** vendethiel left
[19:10] <nwc10> we have a million interested people? \o/

[19:10] <nwc10> Or does it just feel like that, sometimes? :-/

[19:12] <[Coke]> FSVO interested.

[19:13] <masak> the bikeshedding in p6l is less bad than it used to be.

[19:13] <masak> and it tends to be OK if you set your expectations accordingly.

[19:14] <masak> sometimes I have the feeling that p6l is filled predominantly with people who are unaware that Perl 6 has an implementation... :)

[19:14] <moritz> aye

[19:14] <moritz> also, it's mostly inverse bikeshedding

[19:15] <PerlJam> .oO( p6l tends to be better if you have your mail filter set to drop mail from known trolls )

[19:15] <masak> what's inverse bikeshedding?

[19:15] <moritz> questions about how to paint the bike shed are answered with nuclear power plant construction musings

[19:15] <masak> hehe

[19:16] <masak> PerlJam: I never thought of anyone on that list as a troll, to be honest. but there sure are people who are a little too helpful.

[19:17] <PerlJam> honestly I don't have an automated mailfilter, but every once in a while I have a mental filter that tends to identify certain people as unproductive and I just don't read anything they have to say after the first couple of messages.

[19:17] <masak> *nod*

[19:18] <PerlJam> (if my mentail filter recognizes your name right away, that's either really good (you're masak, moritz, pmichaud, etc.)  or really bad :-)

[19:18] <itz> I think things are worse in the perl5 community tbh .. I was sent a Reini Urban blog post I wish I never saw :(

[19:20] * moritz is honored to be on PerlJam's "really good" list

[19:21] * jnthn wonders if he's on the "really bad" one for his puns... :D

[19:21] <nwc10> itz: it's hard to see how to avoid the more general problem - you want to have an open access project. You *need* to have an open access project, else you can't recruit new people

[19:22] <masak> jnthn: no, it's just that you haven't made any significant contributions to Perl 6 :P:P:P

[19:22] <PerlJam> heh

[19:22] <jnthn> :P

[19:22] <nwc10> itz: and you have a lot more people who care about *something*, but don't have the ability to see the big picture. Or don't have the time to learn to see it. Or don't have the skills to implement what they want doing. Or a whole bunch of things like that.

[19:22] *** bin_005 left
[19:22] <nwc10> and there's a lot of ways to break something

[19:23] <nwc10> and very few paths through that don't break much

[19:23] *** brrt left
[19:23] <itz> nwc10: yes people believe because they have personal investment of time in things that those things are Good

[19:24] * PerlJam ponders responding to nwc10 in a worst-of-p5p-parody sort of way, but totally lacks the energy.

[19:26] * masak is currently fixing 007, which was broken in a few places by Z semantics shifting

[19:29] *** kjs_ joined
[19:29] <nwc10> also, I hope this doesn't upset too many folks, but I think it's an unavoidable symptom of success

[19:29] <nwc10> if people aren't upset about changes/things not changing in the future

[19:29] <nwc10> then that means that Perl 6 hasn't made "it"

[19:30] <nwc10> (Although having the grammar lexically scoped is going to avoid a whole chunk of problems of legacy languages)

[19:30] <RabidGravy> aye, I warrant this channel will be unusable a year hence

[19:31] <PerlJam> RabidGravy: I'm not sure if you're an optimist or a pessimist

[19:32] <itz> RabidGravy is a glass full sort of guy ;)

[19:32] *** domidumont left
[19:32] <masak> this is not a purely theoretical concern. I remember what happened to this channel around the first R* release.

[19:32] <masak> a foretaste of a bigger community, with more chaos in it.

[19:33] *** hudo left
[19:33] *** bin_005 joined
[19:33] <RabidGravy> the touchstone is when you can't go for a piss before the scroll buffer runs out ;-)

[19:34] <PerlJam> RabidGravy: that's why we have irclogs!  :)

[19:34] *** akakcolin left
[19:35] <masak> I will miss the thoughtfulness and slowness of the #perl6, but it's a thing I'm willing to sacrifice...

[19:35] <masak> I do hope we manage to scale kindness pretty far, though.

[19:36] <jnthn> grmbl

[19:36] <jnthn> At some point, "make spectest" has gotten busted on Windows.

[19:38] <nwc10> Star is now an asterisk in a 4 letter word? :-(

[19:40] <jnthn> It's not that it fails any tests. It that it doesn't try to run any tests.

[19:40] <jnthn> Use of uninitialized value in split at t/harness line 155.

[19:40] <jnthn> Files=0, Tests=0,  0 wallclock secs ( 0.00 usr +  0.00 sys =  0.00 CPU)

[19:40] <jnthn> Result: NOTESTS

[19:40] <RabidGravy> boo!

[19:40] <jnthn> I'll grant it's faster this way, but I don't think it's going to enhance the quality of my commits...

[19:41] <itz> is it something clever to do with lists?

[19:41] *** molaf_ left
[19:44] *** _mg_ left
[19:44] *** lolisa joined
[19:45] <jnthn> omfg

[19:46] *** kjs_ left
[19:46] * masak guesses GLR somehow

[19:46] <FROGGS> O.o

[19:46] <FROGGS> no

[19:46] <FROGGS> that's about P5 only I guess

[19:46] <masak> oh, because t/harness is p5.

[19:46] <jnthn> No, this is a Perl 5 script

[19:47] <jnthn> bahaha

[19:47] <jnthn> Epic fail.

[19:47] <FROGGS> jnthn: do tell

[19:47] <jnthn>     my $cmd  = join ' ', $^X, 't/spec/fudgeall',

[19:47] <jnthn>                          @pass_through_options, $impl, @_;

[19:47] <jnthn>     return split ' ', `$cmd`;

[19:47] <FROGGS> ohh, space in path?

[19:47] <nwc10> space in path?

[19:47] <jnthn> `$cmd` comes back undef

[19:47] <jnthn> Nope

[19:47] <jnthn> Hint: if I comment out any spectest in spectest.data, it's OK

[19:47] <itz> line endings?

[19:48] <FROGGS> ETOOMANYTHINGS?

[19:48] <jnthn> Bigger hint: print length($cmd) . "\n";

[19:48] <FROGGS> ups

[19:48] <nwc10> oh. it's recently got a bit too big?

[19:48] <jnthn> With all the spectests it's 32776. When I delete one, it's 32734...and works fine :P

[19:48] <jnthn> Apparently, something doesn't like more than 32KB of command line args :P

[19:48] <nwc10> we have to many tests. obviously. delete some!

[19:49] <itz> cmd.exe?

[19:49] <FROGGS> hmmm

[19:49] <FROGGS> RLE to the rescue! /o/

[19:50] <jnthn> oh you're kidding, it's a Windows API level limitation

[19:50] <[Coke]> (embiggening #perl6) I suspect we will have to split into dev/help channels.

[19:51] <jnthn> It uses the UNICODE_STRING struct

[19:51] <jnthn> typedef struct _UNICODE_STRING {

[19:51] <jnthn>     USHORT Length;

[19:51] <jnthn> U r short indeed...

[19:51] *** brrt joined
[19:51] <FROGGS> :D

[19:51] <FROGGS> hehe

[19:51] <[Coke]> we prefudge everything at once, that doesn't need to happen.

[19:51] <jnthn> "32KB should be enough for everyone"

[19:51] <itz> [ptc]: it does work! see http://pl6anet.org/examples//cookbook/09directories/09-03-copy-move-file.html

[19:51] *** telex left
[19:52] *** telex joined
[19:52] <FROGGS> jnthn: we could batch it at around line 78

[19:53] <jnthn> FROGGS: Yeah, or in "sub fudge" itself

[19:53] <FROGGS> aye

[20:00] <RabidGravy> I don't suppose windows has am xargs?

[20:00] <RabidGravy> ;-)

[20:02] <PerlJam> RabidGravy: http://perlpowertools.com/  :)

[20:04] <dalek> rakudo/nom: df0c3a3 | jnthn++ | t/harness:

[20:04] <dalek> rakudo/nom: Batch files before sending to fudgeall.

[20:04] <dalek> rakudo/nom: 

[20:04] <dalek> rakudo/nom: We reached enough spectests to exceed the maximum command line length

[20:04] <dalek> rakudo/nom: possible on Windows when calling fudgeall.

[20:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/df0c3a3ede

[20:04] * jnthn apologizes for his probably non-idiomatic Perl 5 :)

[20:05] <nwc10> jnthn: the solution to *that* is for someone (else) to re-write the test script in Perl 6.

[20:05] <jnthn> :)

[20:05] <jnthn> yeah, then I'd have just used .rotor :)

[20:07] <FROGGS> isnt illegal to use undeclared vars in Java? https://github.com/perl6/nqp/blob/master/src/vm/jvm/runtime/org/perl6/nqp/io/ProcessHandle.java#L34

[20:07] <vendethiel-> FROGGS: https://github.com/perl6/nqp/blob/master/src/vm/jvm/runtime/org/perl6/nqp/io/SyncHandle.java#L20 :)

[20:08] <FROGGS> ohh, eeks

[20:08] <FROGGS> (twiggels ftw)

[20:11] *** darutoko left
[20:16] <[ptc]> PerlJam: really I just copied the algorithm from the Python people :-)

[20:17] <[ptc]> itz: wow, that looks good!

[20:17] <masak> if you have an array of arrays of primitives, and you want to clone it all, how would you write the clone logic?

[20:17] <masak> this is what I came up with:

[20:17] <[ptc]> itz: now to work out why it doesn't work on examples.p6.org ...

[20:17] <masak> m: my @a = [1], [2]; my @b = @a.map({ [.list] }); say @a[0] === @b[0]

[20:17] <camelia> rakudo-moar 8532c0: OUTPUT«False␤»

[20:18] <itz> [ptc]: I have made some minor tweaks as a result of testing on debian vim

[20:21] <raydiak> m: my @a = [1], [2]; my @b = @a».clone; say @a[0] === @b[0]

[20:21] <camelia> rakudo-moar df0c3a: OUTPUT«False␤»

[20:24] <raydiak> m: my @a = 1; @a.clone # hrm

[20:24] <camelia> rakudo-moar df0c3a: OUTPUT«Unhandled exception: This type does not support elems␤   at src/gen/m-CORE.setting:10953  (/home/camelia/rakudo-inst-2/share/perl6/runtime/CORE.setting.moarvm:REIFY:34)␤ from src/gen/m-CORE.setting:11471  (/home/camelia/rakudo-inst-2/share/perl6/runtim…»

[20:29] <RabidGravy> oops

[20:33] *** xaduha joined
[20:36] *** amurf joined
[20:38] <[ptc]> itz: is the new version already available via panda?

[20:39] <itz> [ptc]: yes I bumped the version to 0.3

[20:39] <itz> also the test actually tests for the presence of the colour syntax where it didn't really before

[20:41] *** amurf left
[20:43] <[ptc]> hrm, now the test fails on hack...

[20:43] *** xaduha left
[20:43] <[ptc]> failed test 4

[20:44] <[ptc]> unfortunately no further output than that (prove is sometimes not verbose enough....)

[20:44] <dalek> roast: 3192739 | usev6++ | S06-advanced/lexical-subs.t:

[20:44] <dalek> roast: Change two 'dies-ok' to 'throws-like'

[20:44] <dalek> roast: review: https://github.com/perl6/roast/commit/3192739e58

[20:44] <dalek> roast: 0867f11 | usev6++ | S06-advanced/lexical-subs.t:

[20:44] <dalek> roast: Add tests for RT #109322

[20:44] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=109322

[20:44] <dalek> roast: review: https://github.com/perl6/roast/commit/0867f11ce3

[20:45] *** nige joined
[20:47] <nige> masak++ like your idea of scaling kindness 

[20:48] *** [TuxCM] joined
[20:49] *** [Tux] left
[20:49] *** ribasushi left
[20:50] *** uncleyear left
[20:50] <masak> nige: I think that's the only thing one can affect as a community grows. seeding with good examples and good influence. it won't always help, but it will make a mark.

[20:50] *** uncleyear joined
[20:51] *** ribasushi joined
[20:52] <nige> yes - indeed - as a long time lurker from O(fun) days I hope the vibe continues - although I can see more success will bring challenges

[20:52] *** [Tux] joined
[20:53] *** meLon left
[20:54] *** kjs_ joined
[20:54] <nige> the artistic licence and camelia will also play a big part

[20:55] <brrt> join us now, share the software :-)

[20:59] *** kjs_ left
[20:59] <itz> \o/ join us now and freeee the software #  </rms>

[21:03] *** bin_005 left
[21:04] *** dolmen joined
[21:05] *** pyrimidi_ is now known as pyrimidine

[21:05] *** muraiki left
[21:06] *** skids left
[21:06] <nige> camelia is doing a good job of troll detector and defender

[21:06] <nige> she may be called upon more - post christmas

[21:07] * itz tries to unhear the stallman singing voice

[21:07] <nige> yes - me too - never drunk that KoolAid

[21:09] <nige> I like the theme in the artistic licence - about code as expression

[21:10] <nige> and perl6 is hyper expressive - so I see this as part of the brand

[21:11] * vendethiel- had perl6 not believe perl6.org was the real website at first. most probably the colors :D

[21:13] *** Sqirrel left
[21:14] *** bin_005 joined
[21:15] <dalek> perl6-examples: 9dc9344 | paultcochrane++ | t/000-check-dependencies.t:

[21:15] <dalek> perl6-examples: Check that dependencies for tests are installed

[21:15] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/9dc93440ea

[21:18] *** Sqirrel joined
[21:18] * [Coke] needs to work on a pull request to push down non-rakudo compilers at this point.

[21:18] <[Coke]> (on the perl6.org site)

[21:19] *** muethos left
[21:19] *** Vlavv left
[21:20] *** grondilu left
[21:20] <dalek> roast: 046ad7e | usev6++ | S32-array/pop.t:

[21:20] <dalek> roast: Add test for RT #111720

[21:20] <dalek> roast: review: https://github.com/perl6/roast/commit/046ad7e7e4

[21:20] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=111720

[21:20] *** grondilu joined
[21:23] *** Vlavv joined
[21:33] <masak> 'night, #perl6

[21:34] <bartolin> o/

[21:38] *** Sqirrel left
[21:41] *** itz left
[21:41] *** Sqirrel joined
[21:45] *** Sqirrel left
[21:50] *** Sqirrel joined
[21:53] *** dolmen left
[21:55] *** Sqirrel left
[21:59] *** Sqirrel joined
[22:04] *** brrt left
[22:06] *** dolmen joined
[22:06] *** bonsaikitten left
[22:08] *** mohij left
[22:09] *** xiaomiao joined
[22:09] *** kjs_ joined
[22:13] *** nige left
[22:15] *** larion left
[22:15] *** dolmen left
[22:22] *** lichtkind left
[22:23] *** bin_005 left
[22:32] *** kaare_ left
[22:40] *** skids joined
[22:46] *** meisl left
[22:49] *** sivoais left
[22:50] *** ruoso left
[22:50] *** sivoais joined
[22:52] *** kjs_ left
[22:55] *** grondilu left
[22:55] *** ribasushi left
[22:55] *** spider-mario left
[22:55] *** Akagi201 left
[22:55] *** ponbiki left
[22:55] *** pecastro left
[22:55] *** moritz left
[22:55] *** Possum left
[22:55] *** petercommand left
[22:55] *** lestrrat left
[22:55] *** agentzh left
[22:55] *** bartolin left
[22:55] *** cibs left
[22:56] *** kjs_ joined
[22:56] *** lolisa left
[22:56] <timotimo> hoelzro: you can remove yourself from the "future planned releases" list

[22:57] *** ruoso joined
[23:05] *** kjs_ left
[23:06] *** grondilu joined
[23:06] *** ribasushi joined
[23:06] *** Akagi201 joined
[23:06] *** ponbiki joined
[23:06] *** pecastro joined
[23:06] *** moritz joined
[23:06] *** Possum joined
[23:06] *** petercommand joined
[23:06] *** lestrrat joined
[23:06] *** agentzh joined
[23:06] *** cibs joined
[23:06] *** bartolin joined
[23:07] *** RabidGravy left
[23:07] *** Akagi201 left
[23:08] *** Akagi201 joined
[23:10] *** amurf joined
[23:12] <[ptc]> timotimo: are you going to the Swiss Perl Workshop?

[23:15] *** grondilu left
[23:16] *** grondilu joined
[23:22] <[ptc]> timotimo: anyway, if you are going, I was wondering if you'd be interested (or have the time) to work on the issues Coverity shows up for MoarVM

[23:26] *** Akagi201 left
[23:44] *** bjz left
[23:45] *** kst] joined
[23:47] *** xinming left
[23:47] *** kst joined
