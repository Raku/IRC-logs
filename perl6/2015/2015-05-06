[00:00] <ugexe> i dont think so. grepping the kept promises

[00:00] <raydiak> yes grepping currently (erroneously) breaks laziness if I'm not mistaken

[00:02] <ugexe> ah. i dont suspect its a bug though. i remember seeing it on one of jnthns slides in an example

[00:04] <raydiak> m: my $p = Promise.new; my @p = $p; $p.keep; await Promise.allof(@promises); say 'done';

[00:04] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/wPludcDqbH␤Variable '@promises' is not declared. Did you mean 'Promise'?␤at /tmp/wPludcDqbH:1␤------> 3; $p.keep; await Promise.allof(@promises7⏏5); say 'done';␤    expecting any of:␤        pos…»

[00:04] <raydiak> m: my $p = Promise.new; my @p = $p; $p.keep; await Promise.allof(@p); say 'done';

[00:04] <camelia> rakudo-moar 176304: OUTPUT«done␤»

[00:04] <raydiak> m: my $p = Promise.new; my @p = $p; start { $p.keep }; await Promise.allof(@p); say 'done';

[00:04] <camelia> rakudo-moar 176304: OUTPUT«done␤»

[00:05] *** pierrot joined
[00:05] <raydiak> m: my @p; start { my $p = Promise.new; @p.push: $p; $p.keep }; await Promise.allof(@p); say 'done';

[00:06] <camelia> rakudo-moar 176304: OUTPUT«(timeout)»

[00:06] <raydiak> m: my @p; await Promise.allof(@p); say 'done';

[00:06] <camelia> rakudo-moar 176304: OUTPUT«(timeout)»

[00:07] <raydiak> okay, the .allof(@promises) is running before $p2 is pushed...and $p never does get pushed...so awaiting on .allof(empty list) never returns I guess

[00:12] <raydiak> except that makes no sense with grep fixing it

[00:13] <raydiak> m: my @p; start { my $p = Promise.new; @p.push: $p; $p.keep }; say @p; await Promise.allof(@p); say 'done';

[00:13] <camelia> rakudo-moar 176304: OUTPUT«Promise.new(scheduler => ThreadPoolScheduler.new(initial_threads => 0, max_threads => 16, uncaught_handler => Callable), status => PromiseStatus::Kept)␤done␤»

[00:14] <raydiak> really looks like a laziness bug from there

[00:14] <raydiak> m: my @p; start { my $p = Promise.new; @p.push: $p; $p.keep }; await Promise.allof(@p); say 'done';

[00:14] <camelia> rakudo-moar 176304: OUTPUT«(timeout)»

[00:15] *** Akagi201_ left
[00:15] *** jack_rabbit_ left
[00:26] <danstoner> At this point should I be able to install / build IO::Socket::SSL via panda?

[00:26] <danstoner> Currently erroring on build of OpenSSL

[00:27] <danstoner> ===SORRY!=== Error while compiling lib/OpenSSL/Bio.pm6

[00:27] <danstoner> No appropriate parametric role variant available for 'Native'

[00:27] <danstoner> at lib/OpenSSL/Bio.pm6:40

[00:31] *** tinyblak joined
[00:32] *** tinyblak_ joined
[00:36] *** tinyblak left
[00:40] *** mr-foobar joined
[00:44] *** Ugator left
[00:47] *** telex left
[00:48] *** telex joined
[00:59] <raydiak> danstoner: works here; how old is your rakudo?

[00:59] <danstoner> This is perl6 version 2015.02 built on MoarVM version 2015.02

[00:59] <raydiak> that's why

[01:00] <danstoner> I should download the whole next version of rakudo? I didn't see a way to do an upgrade with panda.

[01:00] <raydiak> nope there isn't

[01:01] <danstoner> ok thanks!

[01:01] <raydiak> you're welcome :)

[01:03] <raydiak> if you use rakudobrew it can build the very latest version and reinstall the modules you had installed before (once you're already using it), but don't think it works on windows

[01:03] <ugexe> it did the last time i tried 2 months ago

[01:04] <raydiak> cool

[01:05] *** ][Sno][ left
[01:06] <timotimo> o/

[01:06] *** BenGoldberg left
[01:08] *** TimToady joined
[01:09] <raydiak> \o

[01:14] <danstoner> I'm on Linux (Ubuntu)

[01:16] <danstoner> rakudo star 2015.03 build process seems to be confused since I already have 2015.02 moar

[01:16] <danstoner> Building NQP ...

[01:16] <danstoner> /usr/bin/perl Configure.pl --prefix=/usr/local --backends=moar --make-install

[01:16] <danstoner> Found /usr/local/bin/moar version 2015.02, which is too old.

[01:16] <danstoner> That's after I do: 

[01:17] <danstoner> sudo perl Configure.pl --gen-moar --prefix=/usr/local/

[01:17] <danstoner> from the extracted 2015.03 directory

[01:20] <danstoner> I actually first tried:   $ sudo perl Configure.pl --backend=moar --gen-moar --prefix=/usr/local/

[01:21] <timotimo> oh, directly into /usr/local

[01:22] <timotimo> i have a special "install" folder that i use as the prefix so that i can sometimes just throw it away completely

[01:22] <danstoner> Heh. I moved /usr/local/bin/moar out of the way and then it built and used 2015.03 version.

[01:23] <raydiak> idk if that'll be new enough for the feature you're missing but we'll see

[01:23] <danstoner> is there a proper "uninstall" then for 2015.02 ?

[01:24] <timotimo> nope

[01:24] <danstoner> brb, looks like build is working....

[01:27] *** yeahnoob joined
[01:28] <raydiak> I did get a test failure on IO::Socket::SSL, but dunno if you'll get the same thing, my rakudo is from...30 hours ago

[01:32] *** dnmfarrell joined
[01:33] *** dnmfarrell left
[01:34] *** dfarrell joined
[01:37] <danstoner> Should I be using a "pastebin" here (for multiple lines) ?

[01:37] <danstoner> Got further but failed again in OpenSSL.

[01:38] <raydiak> yes please...we usually just gist it on github but whereever we can see it is fine

[01:38] *** Akagi201 joined
[01:39] <danstoner> The latest (30 hours ago) thing... same kind of .tar.gz as the release bundle?

[01:39] <raydiak> nope... https://github.com/tadzik/rakudobrew

[01:41] <danstoner> raydiak: thanks.  I'll either look at that or wait for next rakudo star release.

[01:41] <danstoner> p.s. panda needs a --version option

[01:43] <raydiak> it's very easy, just clone rakudobrew into a dir (usually ~/.rakudobrew), put its bin/ in your path, and run 'rakudobrew build moar' whenever you want the latest everything

[01:44] <raydiak> yes we are in a phase where we're working through many questions of deployment like versioning etc

[01:45] <raydiak> (oh you'll want a rakudobrew build-panda after "build moar" the first time, too)

[01:51] *** Ugator joined
[02:00] *** dayangkun joined
[02:01] *** Ugator left
[02:10] <raydiak> .tell sergot https://github.com/sergot/io-socket-ssl/pull/11

[02:10] <yoleaux> raydiak: I'll pass your message to sergot.

[02:12] *** cognominal left
[02:16] *** noganex joined
[02:17] <ugexe> merged

[02:17] <raydiak> thanks :)

[02:19] *** noganex_ left
[02:25] *** rmgk_ joined
[02:25] *** rmgk is now known as Guest64908

[02:25] *** Guest64908 left
[02:25] *** rmgk_ is now known as rmgk

[02:29] *** jack_rabbit_ joined
[02:33] <skids> m: my @h = (1,2,3); for 0..4 { @h X+= 1,0; }; @h.say

[02:33] <camelia> rakudo-moar 176304: OUTPUT«1 2 3␤»

[02:33] <skids> m: my @h = (1,2,3); for 0..4 { @h X+= 1,0; "OHAI".say }; @h.say

[02:33] <camelia> rakudo-moar 176304: OUTPUT«OHAI␤OHAI␤OHAI␤OHAI␤OHAI␤6 7 8␤»

[02:38] *** xinming_ joined
[02:40] *** dfarrell left
[02:41] *** xinming left
[02:50] <raydiak> I think that's the 3rd array heisenbug I've seen today; something recently wrong with laziness perhaps

[02:51] *** chenryn joined
[02:54] <timotimo> i don't see a reason for there to be any lazyness in there; perhaps sink-related things instead? :\

[02:58] * raydiak is very fuzzy on the lazy and the sinky

[02:59] <raydiak> probably because those things should be mostly invisible when they work right :)

[03:00] <timotimo> m: my @h = (1,2,3); for 0..4 { say "test"; @h X+= 1,0 }; @h.say

[03:00] <camelia> rakudo-moar 176304: OUTPUT«test␤test␤test␤test␤test␤1 2 3␤»

[03:01] <timotimo> m: my @h = (1,2,3); do for 0..4 { say "test"; @h X+= 1,0 }; @h.say

[03:01] <camelia> rakudo-moar 176304: OUTPUT«test␤test␤test␤test␤test␤6 7 8␤»

[03:02] <timotimo> my first guess: something clones the thing in the last statement of the block in the "for" case but not in the "do for" case?

[03:02] <timotimo> and with that, i'll leave you to it :P

[03:02] * timotimo goes to bed

[03:04] <raydiak> g'night timo

[03:05] <timotimo> i hope so!

[03:08] <skids> raydiak: I don't think my build is fresher than several days ago.

[03:13] *** Erendis42d joined
[03:33] *** jepeway_ left
[03:34] *** jepeway joined
[03:41] *** broquaint left
[03:42] *** thou joined
[03:57] *** skids left
[04:06] *** kaare_ joined
[04:07] *** vendethiel joined
[04:07] *** Akagi201 left
[04:08] *** Akagi201 joined
[04:26] *** konsolebox joined
[04:28] *** chenryn left
[04:30] *** vendethiel left
[04:41] *** mr-foobar left
[04:42] *** mr-foobar joined
[04:47] *** cognominal joined
[04:48] *** [Sno] joined
[04:49] *** vendethiel joined
[05:00] *** kaare_ left
[05:02] *** cognominal left
[05:08] *** mr-foobar left
[05:12] *** vendethiel left
[05:13] *** jack_rabbit_ left
[05:29] *** chenryn joined
[05:34] *** chenryn left
[05:38] <dalek> roast: 9c40515 | (David Farrell)++ | S (236 files):

[05:38] <dalek> roast: fixed appended RT number to be within quoted string

[05:38] <dalek> roast: review: https://github.com/perl6/roast/commit/9c40515983

[05:38] <dalek> roast: 8b45ba8 | usev6++ | S (232 files):

[05:38] <dalek> roast: Remove merge conflicts for PR 59

[05:38] <dalek> roast: review: https://github.com/perl6/roast/commit/8b45ba84b4

[05:38] <dalek> roast: 80933b1 | usev6++ | S (232 files):

[05:38] <dalek> roast: Merge PR 59 from dnmfarrell++ (added RT ticket #s to skip/todo tickets)

[05:38] <dalek> roast: review: https://github.com/perl6/roast/commit/80933b15c7

[05:38] <dalek> roast: c6ffcf7 | usev6++ | S (10 files):

[05:38] <dalek> roast: Fix wrongly quoted reasons for fudges

[05:38] <dalek> roast: review: https://github.com/perl6/roast/commit/c6ffcf7717

[05:43] *** bartolin left
[05:43] *** bartolin joined
[05:45] *** chenryn joined
[05:46] <bartolin> .tell [Coke] yes, there was an update on the pull request. that update didn't resolve all problems though.

[05:46] <yoleaux> bartolin: I'll pass your message to [Coke].

[05:47] <Erendis42d> nice!

[05:48] <Erendis42d> *v*

[05:48] *** dustinm` left
[05:49] <bartolin> .tell [Coke] a few 'RT #xxxxxx' were not moved inside 'reason' correctly and I had to resolve some other conflicts (like removing fudges for parrot and two other changes which happend to roast in the meantime)

[05:49] <yoleaux> bartolin: I'll pass your message to [Coke].

[05:53] <bartolin> .tell [Coke] also, there are still more than 300 fudged tests for rakudo without a RT number. I think they were missed because they are indented. (grep -r '#?rakudo' | grep -c -v 'RT')

[05:53] <yoleaux> bartolin: I'll pass your message to [Coke].

[05:58] *** cdc_ is now known as cdc

[06:03] *** dustinm` joined
[06:09] *** vendethiel joined
[06:11] *** jack_rabbit_ joined
[06:12] *** diana_olhovik_ joined
[06:16] *** Akagi201 left
[06:17] *** jack_rabbit_ left
[06:28] *** go|dfish left
[06:31] *** vendethiel left
[06:34] *** RabidGravy joined
[06:34] <RabidGravy> morning

[06:34] *** ycaymanbo left
[06:35] *** ycaymanbo joined
[06:35] *** aindilis left
[06:36] *** aindilis joined
[06:38] *** tinyblak joined
[06:39] *** kaare_ joined
[06:41] *** tinyblak_ left
[06:43] <Erendis42d> hi

[06:43] *** FROGGS left
[06:48] *** jdv79 left
[06:48] *** jdv79 joined
[06:50] *** domidumont joined
[06:54] *** itz_ left
[06:55] *** domidumont left
[06:56] *** domidumont joined
[06:56] <masak> morning, #perl6

[06:56] *** go|dfish joined
[06:57] *** Foxcool joined
[06:58] *** [particle] left
[06:58] <sjn> \o

[06:59] *** [particle] joined
[07:00] *** FROGGS joined
[07:00] *** colomon left
[07:01] *** _mg_ joined
[07:01] *** thou left
[07:02] *** itz joined
[07:03] *** vendethiel joined
[07:04] <[ptc]> o/

[07:04] *** Ven joined
[07:05] *** Ven left
[07:06] *** FROGGS left
[07:06] *** itz left
[07:13] *** bjz joined
[07:13] *** itz joined
[07:20] *** FROGGS joined
[07:25] <grondilu> have you seen http://pypyjs.org/ on HN lately?  It's sad that there's nothing like that yet for Perl6.

[07:26] <lizmat> good morning, #perl6!

[07:26] *** vendethiel left
[07:26] <lizmat> grondilu: I guess we need more people working on the Javascript backend ?  :-)

[07:28] <grondilu> I wish I was more talented and less lazy so I could help you guys.  But you have my full moral support :P

[07:28] *** bjz left
[07:30] *** _mg_ left
[07:31] <dalek> Heuristic branch merge: pushed 105 commits to roast/newio by lizmat

[07:31] <nwc10> good *, #perl6 

[07:32] *** pecastro left
[07:34] <lizmat> nwc10 o/

[07:34] <lizmat> did you make it to Dresden ?

[07:35] <nwc10> yes. train did run to Dresden.

[07:35] <nwc10> Message that point was .... .... .... bus .... .... bus .... bus .... bus .. bus bus

[07:35] <nwc10> (I did actually follow the .... bits)

[07:35] <nwc10> but, just in case you didn't get it, there was then a bus onwards to Berlin (the usual destination of the train)

[07:36] <nwc10> I have power, coffee and internet.

[07:36] <nwc10> and it looks like the organisers are really organised as there seems to be proper tea too.

[07:36] *** domidumont left
[07:36] <FROGGS> so much bus words :o)

[07:36] <lizmat> good to hear....

[07:37] <DrForr> I nearly had to do that on the way to Essen. Strike, but I had a ride Dusseldorf-Essen courtesy woolfy.

[07:37] * lizmat is about to take a smaller bus to Hornbaek

[07:37] <nwc10> however, I am not awake

[07:37] <RabidGravy> being awake is over-rated

[07:38] <lizmat> it's sort of a pre-req for *giving* a presentation

[07:38] <nwc10> I see that the trains are officially (and hence not inaccurately) described as "overnight trains"

[07:38] <nwc10> "sleeper" - no, wisely no such implied promise of sleep :-)

[07:38] <RabidGravy> lizmat, oh I don't know ;-)

[07:40] *** domidumont joined
[07:41] <lizmat> commute to OSDC, part 1 &

[07:42] *** lizmat left
[07:45] *** bjz joined
[07:46] *** bjz left
[07:50] *** domidumont left
[07:53] *** virtualsue joined
[07:54] *** darutoko joined
[07:54] *** zakharyas joined
[07:57] *** virtualsue_ joined
[07:58] *** virtualsue left
[07:58] *** virtualsue_ is now known as virtualsue

[07:58] *** abraxxa joined
[08:00] *** domidumont joined
[08:07] *** colomon joined
[08:08] *** Isp-sec joined
[08:12] *** Ven joined
[08:14] *** Ven left
[08:15] *** vendethiel joined
[08:18] *** Ven joined
[08:19] *** [Sno] left
[08:20] <Ven> \o, #perl6!

[08:20] *** [Sno] joined
[08:22] <Erendis42d> ¦*

[08:25] <tadzik> hello hello

[08:26] <Ven> Do we have a script for shell expansion-like things? I saw https://gist.github.com/eatonphil/7d57257f65673b343441 go through,  and I wondered if we had anything in perl6 to generate some nice Spam :P

[08:27] <Ven> Ha, sounds like this could be a thing that exists on rosettacode.

[08:34] <dalek> doc: 935985d | (Jonathan Stowe)++ | lib/Language/concurrency.pod:

[08:34] <dalek> doc: Add section for Lock

[08:34] <dalek> doc: review: https://github.com/perl6/doc/commit/935985dbdb

[08:34] *** fhelmberger joined
[08:38] *** vendethiel left
[08:42] *** ShimmerFairy left
[08:42] *** ShimmerFairy joined
[08:44] *** dakkar joined
[08:44] *** domidumont left
[08:47] *** domidumont joined
[08:58] *** colomon left
[08:58] *** darutoko left
[08:58] *** itz left
[08:58] *** chenryn left
[08:58] *** xinming_ left
[08:58] *** sjn left
[08:58] *** Possum left
[08:58] *** b^_^d left
[08:58] *** BooK_ left
[08:58] *** torbjorn left
[08:58] *** ponbiki left
[08:58] *** agentzh left
[08:58] *** vendethiel joined
[09:00] *** colomon joined
[09:00] *** darutoko joined
[09:00] *** itz joined
[09:00] *** chenryn joined
[09:00] *** xinming_ joined
[09:00] *** sjn joined
[09:00] *** Possum joined
[09:00] *** torbjorn joined
[09:00] *** b^_^d joined
[09:00] *** BooK_ joined
[09:00] *** ponbiki joined
[09:00] *** agentzh joined
[09:10] *** espadrine joined
[09:14] *** Ven left
[09:16] *** Akagi201 joined
[09:17] *** bjz joined
[09:17] *** broquaint joined
[09:19] *** vendethiel left
[09:35] *** rindolf joined
[09:42] *** Isp-sec left
[09:45] *** chenryn left
[09:46] *** pecastro joined
[09:46] *** chenryn joined
[09:47] *** Erendis42d left
[09:54] <RabidGravy> quiet this morning

[09:55] *** vendethiel joined
[09:56] *** yeahnoob left
[10:01] *** RabidGravy left
[10:03] *** FROGGS left
[10:07] *** RabidGravy joined
[10:07] <RabidGravy> there isn't anything in core or in a module that already does crypt(3) yet is there?

[10:14] *** domidumont left
[10:17] * grondilu runs 'ack crypt ~/rakudo' and finds nothing quite relevant

[10:18] *** dayangkun left
[10:18] <RabidGravy> 6 line module without POD

[10:18] * RabidGravy just does it

[10:18] *** vendethiel left
[10:28] *** FROGGS joined
[10:31] <grondilu> std: sub infix:<foo>($, $) is equiv(&infix:<+>) {...}

[10:31] <camelia> std 28329a7: OUTPUT«ok 00:00 145m␤»

[10:31] <grondilu> std: sub infix:<foo> is equiv(&infix:<+>) ($, $) {...}

[10:31] <camelia> std 28329a7: OUTPUT«ok 00:00 145m␤»

[10:32] <grondilu> I didn't know both of these syntaxes were ok ^

[10:32] <grondilu> m: sub infix:<foo> is equiv(&infix:<+>) ($, $) {...}

[10:32] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/7N1IAPqST4␤Missing block␤at /tmp/7N1IAPqST4:1␤------> 3sub infix:<foo> is equiv(&infix:<+>)7⏏5 ($, $) {...}␤    expecting any of:␤        new name to be defined␤»

[10:32] <grondilu> though apparently rakudo does not accept it

[10:32] * grondilu found out about this while looking at http://rosettacode.org/wiki/Ternary_logic#Perl_6

[10:35] *** FROGGS left
[10:35] <grondilu> btw what the shorthand for &infix:<+>?

[10:36] <grondilu> std: &[+]

[10:36] <camelia> std 28329a7: OUTPUT«ok 00:00 138m␤»

[10:37] <grondilu> m: say &[+](1, 2)

[10:37] <camelia> rakudo-moar 176304: OUTPUT«3␤»

[10:37] <grondilu> ok

[10:40] <grondilu> m: say 1 [&[+]] 2  # :P

[10:40] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/_Vbh6YboYs␤Unable to parse expression in bracketed infix; couldn't find final ']' ␤at /tmp/_Vbh6YboYs:1␤------> 3say 1 [&7⏏5[+]] 2  # :P␤»

[10:40] <grondilu> std: say 1 [&[+]] 2 

[10:40] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Unable to parse bracketed infix at /tmp/et9XcgJD5X line 1:␤------> 3say 1 7⏏5[&[+]] 2␤Couldn't find final ']'; gave up at /tmp/et9XcgJD5X line 1:␤------> 3say 1 [&7⏏5[+]] 2␤Parse failed␤FAILED 00:00 136m␤»

[10:40] <grondilu> std: say 1 [&atan2] 2 

[10:40] <camelia> std 28329a7: OUTPUT«ok 00:00 140m␤»

[10:40] <grondilu> m: say 1 [&atan2] 2 

[10:40] <camelia> rakudo-moar 176304: OUTPUT«0.463647609000806␤»

[10:41] <grondilu> m: say [&atan2] 1 .. 5

[10:41] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/b7EOykP4mZ␤Two terms in a row␤at /tmp/b7EOykP4mZ:1␤------> 3say [&atan2]7⏏5 1 .. 5␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤       …»

[10:41] <grondilu> m: say [[&atan2]] 1 .. 5

[10:41] <camelia> rakudo-moar 176304: OUTPUT«0.00766290033960824␤»

[10:42] <grondilu> m: say [\[&atan2]] 1 .. 5

[10:42] <camelia> rakudo-moar 176304: OUTPUT«1 0.463647609000806 0.153336049410316 0.038315251658701 0.00766290033960824␤»

[10:43] <grondilu> so that's how I can use the triangular reduce with an arbitrary binary function.

[10:43] <grondilu> m: say [\{ $^a + $^b }] 1 .. 5

[10:43] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/ovhET59CJl␤Two terms in a row␤at /tmp/ovhET59CJl:1␤------> 3say [\{ $^a + $^b }]7⏏5 1 .. 5␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end…»

[10:43] <grondilu> m: say [\[{ $^a + $^b }]] 1 .. 5

[10:43] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/avhbabhvbq␤Two terms in a row␤at /tmp/avhbabhvbq:1␤------> 3say [\[{ $^a + $^b }]]7⏏5 1 .. 5␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end…»

[10:44] <grondilu> hum, not quite

[10:44] <grondilu> m: say 1 [{ $^a + $^b }]] 2

[10:44] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/uOLO0bB8VI␤Missing infix inside []␤at /tmp/uOLO0bB8VI:1␤------> 3say 1 [7⏏5{ $^a + $^b }]] 2␤    expecting any of:␤        bracketed infix␤        infix␤        infix stopper␤»

[10:44] <grondilu> m: say 1 [{ $^a + $^b }] 2

[10:44] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/km7_JKs1Dx␤Missing infix inside []␤at /tmp/km7_JKs1Dx:1␤------> 3say 1 [7⏏5{ $^a + $^b }] 2␤    expecting any of:␤        bracketed infix␤        infix␤        infix stopper␤»

[10:45] <grondilu> m: say 1 [sub { $^a + $^b }] 2

[10:45] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Gdgff51hN0␤Missing infix inside []␤at /tmp/Gdgff51hN0:1␤------> 3say 1 [7⏏5sub { $^a + $^b }] 2␤    expecting any of:␤        bracketed infix␤        infix␤        infix stopper␤»

[10:47] *** Ven_ joined
[10:51] *** FROGGS joined
[10:53] *** uncleyear left
[10:54] <FROGGS> m: say "abab".match(rx/ab/, :g).WHAT

[10:54] <camelia> rakudo-moar 176304: OUTPUT«(List)␤»

[10:54] <FROGGS> m: say "abab".match(rx/ab/, :2x).WHAT

[10:54] <camelia> rakudo-moar 176304: OUTPUT«(Parcel)␤»

[10:54] <FROGGS> why is that?

[10:55] *** uncleyear joined
[10:59] <FROGGS> m: say "abab".match(rx/ab/, :1g).WHAT

[10:59] <camelia> rakudo-moar 176304: OUTPUT«(List)␤»

[11:00] *** telex left
[11:02] *** telex joined
[11:03] <FROGGS> 'think I found it

[11:04] *** andreoss joined
[11:04] <andreoss> m: my @x = 1,2,3; my @y = 0,2,5; say max @x Z<=> @y;

[11:04] <camelia> rakudo-moar 176304: OUTPUT«More␤»

[11:14] <FROGGS> okay, my regex problem boils down to this:

[11:14] <FROGGS> m: say 42 ~~ (42, 43); say 42 ~~ (42, 43).list

[11:14] <camelia> rakudo-moar 176304: OUTPUT«False␤42 43␤»

[11:18] <FROGGS> my fix will be to call .list on a subscript that produces a parcel, though I wonder if List.ACCEPTS is correct at all

[11:20] *** Akagi201 left
[11:21] <dalek> rakudo/nom: 240cf01 | FROGGS++ | src/core/Str.pm:

[11:21] <dalek> rakudo/nom: RT #125038 fix smart matching against m:2x/.../

[11:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/240cf01b10

[11:21] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125038

[11:22] <dalek> roast: 9277997 | FROGGS++ | S05-modifier/repetition.t:

[11:22] <dalek> roast: RT #125038 unfudge now passing rx:2x/.../ tests

[11:22] <dalek> roast: review: https://github.com/perl6/roast/commit/9277997415

[11:22] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125038

[11:24] *** Akagi201 joined
[11:26] *** chenryn left
[11:26] *** uncleyear left
[11:26] *** uncleyear joined
[11:30] <andreoss> is there a nicer way to iterate trough enums than MyEnum.enums.sort(*.value).keys.map({MyEnum($_)}) ?

[11:31] <Ven_> you want to iterate on values?

[11:32] <Ven_> m: enum X <a b c>; say X.enums.values.sort

[11:32] <andreoss> m: enum X<A B C D E F>; my @e = X.enums.sort(*.value).keys; say @e.perl;

[11:32] <camelia> rakudo-moar 176304: OUTPUT«0 1 2␤»

[11:32] <camelia> rakudo-moar 176304: OUTPUT«[0, 1, 2, 3, 4, 5]<>␤»

[11:33] <andreoss> m: enum X<A B C D E F>; my @e = X.enums.sort(*.value).keys.map({MyEnum($_)}); say @e.perl;

[11:33] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Undeclared::Symbols␤===SORRY!===␤Error while compiling, type X::Undeclared::Symbols␤  routine_suggestion: (unstringifiable object)␤  post_types: (unstringifiable o…»

[11:33] <andreoss> m: enum X<A B C D E F>; my @e = X.enums.sort(*.value).keys.map({X($_)}); say @e.perl;

[11:33] <camelia> rakudo-moar 176304: OUTPUT«[X::A, X::B, X::C, X::D, X::E, X::F]<>␤»

[11:34] *** domidumont joined
[11:35] <andreoss> why no .list on enums?

[11:39] * grondilu registered to a R forum in order to answer a question about a R slang: http://r.789695.n4.nabble.com/Integrate-R-in-perl6-td4706844.html

[11:52] <RabidGravy> boo! github broken

[11:56] * [ptc] wonders who's trying to hack github now...

[11:56] *** chenryn joined
[11:56] <[ptc]> is it possible for github users to do a ddos attack on the attackers?  ;-)

[11:58] <dalek> ecosystem: 1ea00fe | (Jonathan Stowe)++ | META.list:

[11:58] <dalek> ecosystem: Add Crypt::Libcrypt

[11:58] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/1ea00fe124

[11:59] <RabidGravy> there, it actually took longer to write the POD and README than make the module itself

[12:02] *** Sqirrel left
[12:06] *** Sqirrel joined
[12:08] <andreoss> m: enum X<A B C>; enum Q<D E F>; multi infix:«~~»(X $a, Q $b) { True # all X match all Q }; say A ~~ F;

[12:08] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Syntax::Missing␤===SORRY!===␤Cannot iterate object with P6str representation␤»

[12:09] <andreoss> works in REPL 

[12:11] <RabidGravy> not for me it doesn't

[12:11] <RabidGravy> "2015.04-153-g31f3db1 built on MoarVM version 2015.04-57-g0c052ea"

[12:12] <masak> andreoss: that '#' turns everything after it into a comment.

[12:12] <masak> m: enum X<A B C>; enum Q<D E F>; multi infix:«~~»(X $a, Q $b) { True

[12:12] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Syntax::Missing␤===SORRY!===␤Cannot iterate object with P6str representation␤»

[12:13] <masak> same error.

[12:13] <masak> (which is Less Than Awesome, granted)

[12:13] <andreoss> m: enum X<A B C>; enum Q<D E F>; multi infix:«~~»(X $a, Q $b) { True #`{all X match all Q} }; say A ~~ F;

[12:13] <camelia> rakudo-moar 176304: OUTPUT«False␤»

[12:13] * masak submits LTA rakudobug

[12:13] <masak> m: sub foo { True

[12:13] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/IPnz50B8lg␤Missing block␤at /tmp/IPnz50B8lg:1␤------> 3sub foo { True7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modifier loop␤»

[12:13] <masak> hm.

[12:14] <masak> m: multi infix:«~~»($a, $b) { True

[12:14] <camelia> rakudo-moar 176304: OUTPUT«5===SORRY!5=== Error while compiling /tmp/7JzNgtrdLj␤Missing block␤at /tmp/7JzNgtrdLj:1␤------> 3multi infix:«~~»($a, $b) { True7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modi…»

[12:14] <masak> m: enum X <A>; multi infix:«~~»(X $a, X $b) { True

[12:14] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Syntax::Missing␤===SORRY!===␤Cannot iterate object with P6str representation␤»

[12:15] <masak> heh, the enum is an irreducible part of the LTA bug. :)

[12:15] <masak> m: enum X <A>; sub infix:«~~»(X $a, X $b) { True

[12:15] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Syntax::Missing␤===SORRY!===␤Cannot iterate object with P6str representation␤»

[12:15] <masak> m: enum X <A>; sub foo(X $a) { True

[12:15] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Syntax::Missing␤===SORRY!===␤Cannot iterate object with P6str representation␤»

[12:16] *** brrt joined
[12:16] <andreoss> how i overload ~~ here?

[12:16] <brrt> i think you want ACCEPTS

[12:16] <masak> aye

[12:17] *** Vlavv left
[12:17] <masak> rhs.ACCEPTS(lhs), basically

[12:17] <brrt> m: class A { method ACCEPTS($x) { 1; } }; my $a = A.new; say $a ~~ "Foobar";

[12:17] <camelia> rakudo-moar 176304: OUTPUT«False␤»

[12:17] *** kaare_ left
[12:17] <brrt> uhm, i'm doing something wrong clearly 

[12:18] <[ptc]> andreoss: did you see the comment I left on PR #24 on perl6/examples?

[12:19] <[ptc]> andreoss: is that just a merge commit?

[12:19] <brrt> oh by the way... how much time/tuits would it cost to host git repositories of rakudo/nqp/moar somewhere on perl6.org

[12:21] <brrt> oh, rhs.ACCEPTS(lhs), i'm reading wrong

[12:21] <andreoss> [ptc]: i didn't mean this pull request, sorry, i was trying to merge my own branches

[12:21] <brrt> m: class A { method ACCEPTS($x) { True; } }; my $a = A.new; say "foobar" ~~ $a;

[12:21] <camelia> rakudo-moar 176304: OUTPUT«True␤»

[12:22] *** espadrine left
[12:22] *** tinyblak left
[12:24] <[ptc]> andreoss: no problems!  I just wondered

[12:24] <[ptc]> andreoss: it looked like a merge :-)

[12:24] <[ptc]> andreoss: is it ok if I close the PR?

[12:24] <andreoss> i've already closed it

[12:24] <[ptc]> andreoss: ah! I hadn't noticed, sorry

[12:25] *** Akagi201 left
[12:25] *** vendethiel joined
[12:28] *** rarara joined
[12:29] <dalek> perl6-examples: be215ad | paultcochrane++ | categories/cookbook/01strings/01-01substrings.pl:

[12:29] <dalek> perl6-examples: Explain why Perl5 subst code doesn't work in Perl6

[12:29] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/be215ad9d9

[12:29] <dalek> perl6-examples: 539edad | paultcochrane++ | categories/cookbook/01strings/01-03exchanging-values.pl:

[12:29] <dalek> perl6-examples: Minor whitespace improvement

[12:29] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/539edadf64

[12:29] <dalek> perl6-examples: fe9c110 | paultcochrane++ | categories/cookbook/01strings/01-19trim-whitespace.pl:

[12:29] <dalek> perl6-examples: Trim leading whitespace in pod

[12:29] <dalek> perl6-examples: 

[12:29] <dalek> perl6-examples: ... oh the irony

[12:29] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/fe9c11068b

[12:29] <dalek> perl6-examples: 0c6ea29 | paultcochrane++ | categories/cookbook/01strings/01-13upper-lower-case.pl:

[12:29] <dalek> perl6-examples: Trim more trailing whitespace

[12:29] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/0c6ea296ec

[12:29] <dalek> perl6-examples: 2d3a1a1 | paultcochrane++ | t/categories/cookbook/01strings.t:

[12:29] <dalek> perl6-examples: Add tests for the cookbook 01strings examples

[12:29] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/2d3a1a1757

[12:29] *** _mg_ joined
[12:30] *** Vlavv joined
[12:34] *** rararara joined
[12:34] *** rarara left
[12:39] *** tinyblak joined
[12:44] <[Coke]> brrt: if it took any energy to host git on perl6.org it'd be too much, I think.

[12:44] <yoleaux> 05:46Z <bartolin> [Coke]: yes, there was an update on the pull request. that update didn't resolve all problems though.

[12:44] <yoleaux> 05:48Z <bartolin> [Coke]: a few 'RT #xxxxxx' were not moved inside 'reason' correctly and I had to resolve some other conflicts (like removing fudges for parrot and two other changes which happend to roast in the meantime)

[12:44] <yoleaux> 05:53Z <bartolin> [Coke]: also, there are still more than 300 fudged tests for rakudo without a RT number. I think they were missed because they are indented. (grep -r '#?rakudo' | grep -c -v 'RT')

[12:47] *** Ven_ left
[12:49] <brrt> [Coke] really?

[12:49] <brrt> but everybody hates on github

[12:49] <brrt> mostly DDoS-ers

[12:49] <brrt> maybe even as a backup?

[12:50] <dalek> perl6-examples: 1412230 | paultcochrane++ | .travis.yml:

[12:50] <dalek> perl6-examples: Install dependency Algorithm::Soundex

[12:50] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/1412230c77

[12:51] *** cschwenz joined
[12:51] *** cschwenz left
[12:51] <[Coke]> brrt: we have dozens of backups.

[12:56] *** vendethiel left
[12:56] *** Ven_ joined
[12:56] *** muraiki joined
[12:56] *** espadrine_ joined
[12:56] <brrt> that is true, of course

[12:56] *** perlvim joined
[12:56] <brrt> i'm just being idealistic perhaps :-)

[12:59] *** perlvim_ joined
[12:59] *** Ven_ left
[13:00] <RabidGravy> leaving aside the DDoS thing for the moment, the winning advantage of using github is that it lowers the barrier to contribution - there are going to be drive-by patches from people who wouldn't otherwise be bothered to mail a patch 

[13:01] *** perlvim left
[13:03] *** _mg_ left
[13:04] <masak> also, Git *is* distributed, so even if Github is down, most of the day-to-day work can still be done. it's just the "push to colleagues" bit that gets delayed.

[13:04] *** _mg_ joined
[13:06] <FROGGS> well you can easily gist... ohh wait

[13:07] <brrt> fair enough. i'm not suggesting we move from github to our own server, just that we have an authoritive and available repository

[13:07] <masak> m: enum X <A>; sub foo(A $a) { True

[13:07] <camelia> rakudo-moar 176304: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Syntax::Missing␤===SORRY!===␤Cannot iterate object with P6str representation␤»

[13:08] <masak> ...and it doesn't have to be a type object (X), it can also be an enum (A).

[13:12] <perlvim_> masak: Perl 6's CPAN is on github, Could we use backup git site to download module? META.info => "source-url"  : [ "git://github.com/masak/ufo.git"

[13:12] <perlvim_> , "git://git.oschina.net/masak/ufo.git"]

[13:12] <dalek> nqp/jsoff: 4723b26 | FROGGS++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[13:12] <dalek> nqp/jsoff: foo

[13:12] <dalek> nqp/jsoff: review: https://github.com/perl6/nqp/commit/4723b26f0e

[13:12] <masak> perlvim_: as long as Panda knows what to do with that information, sure.

[13:13] <masak> (but I'm not one to decide that. someone else may have a better overview of META.info and the tradeoffs involved.)

[13:14] *** dayangkun joined
[13:15] <tadzik> what's up?

[13:15] <tadzik> oh, hmm

[13:16] <tadzik> so a list of mirrors embedded in each META.info, basically

[13:17] <masak> is there already such a functionality in META.info

[13:17] <masak> if not, I was going to suggest putting it on a separate (optional) property

[13:17] <masak> `mirror-urls` or suchlike

[13:17] <masak> for back-compat, and to not overload the type of the `source-url` prop

[13:18] <tadzik> it feels like we should rather have mirrors of the entire ecosystem, and teach panda to handle those

[13:18] <tadzik> as cpan has

[13:18] <masak> aye

[13:19] *** perlvim_ left
[13:25] *** skids joined
[13:31] *** FROGGS left
[13:31] *** chenryn left
[13:32] *** kaare_ joined
[13:33] *** FROGGS joined
[13:34] <andreoss> my multi method ACCEPTS(MyEnum: Int $a) { True } 

[13:34] <andreoss> is this a way to define ~~ for enums?

[13:34] *** _mg_ left
[13:34] <andreoss> or any method

[13:45] <dalek> perl6-examples: 52a2054 | paultcochrane++ | t/003-categories.t:

[13:45] <dalek> perl6-examples: Check number of appended subcategories

[13:45] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/52a2054014

[13:45] <dalek> perl6-examples: 5a57ec7 | paultcochrane++ | t/003-categories.t:

[13:45] <dalek> perl6-examples: Fix subcategories list ordering assumption

[13:45] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/5a57ec7209

[13:51] *** domidumont left
[13:52] *** cognominal joined
[13:52] *** domidumont joined
[13:54] *** Akagi201 joined
[13:55] *** _mg_ joined
[13:59] *** _mg_ left
[14:04] <RabidGravy> I am right in saying that a CStruct is not going to work for something like  struct foo { char bar[4]; char zub[32]; } because you can't specify the length?

[14:07] *** domidumont left
[14:08] *** domidumont joined
[14:08] <skids> RabidGravy: last time I checked array[] could not be a member.  Maybe char char char char ... as a workaround?

[14:09] *** larion joined
[14:09] <skids> The plan is for that to eventually work, I think.

[14:11] <RabidGravy> I think it's probably make a shim that copies the explicit arrays to char * in an otherwise similar structure

[14:12] * [Coke] finds himself having to convert some svn repos to git, and the recommend instruction set (http://john.albin.net/git/convert-subversion-to-git) dies on step 5. anyone here have a favorite set of instructions for the conversion?

[14:15] <nwc10> I used the (IIRC) KDE stuff at work

[14:16] <nwc10> I'm in Dresden. Work is in Vienna, and the machine in question has been hibernated, so I can't directly check

[14:16] <nwc10> this thing, I think

[14:16] <nwc10> https://techbase.kde.org/Projects/MoveToGit/UsingSvn2Git

[14:17] *** dayangkun left
[14:21] <timotimo> andreoss: you can mix in a role into your enum and that role can implement any method

[14:23] <[Coke]> nwc10: I will use that as a last resort as I'm on osx. Danke.

[14:24] <nwc10> it's really fast.

[14:24] <nwc10> the conversion is faster than svnadmindump load.

[14:24] <nwc10> on a machine with an SSD

[14:25] <[Coke]> nwc10: all the conversions I've seen are via git-svn at this point

[14:25] <nwc10> I used git-svn at previous employer.

[14:25] <nwc10> I found this one better, because it's faster (so re-doingit is less work) and alos it can map paths and move stuff around

[14:26] <nwc10> (although git filter-branch wasn't in my toolbox back then)

[14:26] <nwc10> at ex-employer I cleaned some things up by using sed on the Gb sized admin dumps

[14:28] *** zostay joined
[14:29] <btyler> [Coke]: I've used https://github.com/nirvdrum/svn2git#readme with success ... that looks like something different from the KDE link, since the KDR thing talks about compiling Qt, where this is just a ruby script

[14:29] <nwc10> the KDE thing does need Qt - I found that the 14.04 Ubuntu LTS packages were good enough

[14:29] <nwc10> ($foo was good enough, I think that $foo was 14.04)

[14:32] *** chenryn joined
[14:35] <nwc10> FROGGS++ # "schlau"

[14:35] <[Coke]> nwc10: tried to clone the svn2git repo, got: fatal: Could not read from remote repository. I'll keep digging, but fyi.

[14:35] <nwc10> oh. gitorious. closing down.

[14:35] <nwc10> first obvious casulaty.

[14:36] <nwc10> I (obviously) have a clone on work desktop

[14:37] *** chenryn left
[14:37] <PerlJam> Um ... jnthn == brrt?  http://news.perlfoundation.org/2015/05/perl-6-development-grant-succe.html

[14:38] <timotimo> that's strange

[14:39] <timotimo> jnthn + core dev fund + "first grant awarded" makes sense

[14:39] <timotimo> but the "advancing the moarvm jit" seems to be the wrong one

[14:39] <timotimo> did someone send a mail to karen yet?

[14:39] <[Coke]> I'll email Karen

[14:40] <timotimo> [Coke]++

[14:40] <TimToady> don't expect a quick response, it's after midnight in Japan

[14:41] <[Coke]> done.

[14:42] <[Coke]> yes, but if I wait to send the email, I'll forgot. :)

[14:43] <TimToady> it does seem to indicate that they're classified together somehow in someone's head :)

[14:43] *** vendethiel joined
[14:43] <[Coke]> http://photos2.meetupstatic.com/photos/event/e/7/2/b/highres_437159179.jpeg - shot of the hackathon. I'm the baldy standing up in the back. :)

[14:44] <[Coke]> sitting near me are the folks hacking on p6 that day.

[14:45] <timotimo> oh, many persons

[14:45] <PerlJam> nice

[14:47] <[Coke]> btyler: not to self. read -all- the docs on sv2git before running any of it. :)

[14:47] <hoelzro> morning #perl6

[14:48] <PerlJam> [Coke]: Is that a kid kinda on the right side of the image (in a blue shirt)?  Or am I mistaken?

[14:49] <[Coke]> someone brought his kid who was hacking, but not perl. (on some kid friendly GUI language toolkit)

[14:49] <andreoss> m: enum Hand <Left Right>; Hand.enums.sort(*.value).keys.map({Hand($_)}).perl.say;

[14:49] <camelia> rakudo-moar 240cf0: OUTPUT«(Hand::Left, Hand::Right)␤»

[14:49] <andreoss> is there a better way to make a list from enum? 

[14:50] <btyler> [Coke]: uh oh, that sounds like a burned finger. something I should have warned about?

[14:51] <btyler> I did this sufficiently long ago that I only remember that it worked, and not the various "ouch" moments along the way

[14:51] *** thou joined
[14:52] <PerlJam> andreoss: why do you want a list from an enum?  Maybe Enum should have a .list method (or are you creating just that?)

[14:53] <andreoss> PerlJam: to iterate through it, i wonder too why there's no .list for Enum 

[14:53] <moritz> m: enum Hand <Left Right>; say Hand.pairs.perl

[14:53] <camelia> rakudo-moar 240cf0: OUTPUT«()␤»

[14:53] <moritz> m: enum Hand <Left Right>; say Hand.enums.perl

[14:53] <camelia> rakudo-moar 240cf0: OUTPUT«{:Left(0), :Right(1)}<>␤»

[14:55] <timotimo> m: enum Hand <Left Right>; say @(Hand).perl

[14:55] <camelia> rakudo-moar 240cf0: OUTPUT«()␤»

[14:55] <timotimo> mhm, mh

[14:55] <timotimo> shouldn't we want to have this?

[14:57] <TimToady> from examination of EnumMap.pm, it does appear to be hard to achieve

[14:58] <TimToady> by which I mean, there's no current method to do that, but probably oughta be

[14:58] <jnthn> masak: Calling anything X is asking for trouble, since it hides the exceptions namespace

[14:58] <yoleaux> 5 May 2015 22:30Z <raydiak> jnthn: I've added the gdb backtrace to https://github.com/jnthn/grammar-generative/issues/1

[14:59] <[Coke]> does it make sense that we renamed uniq to unique but skipped Exception and went right to X ?

[15:00] <moritz> yes, because exception class names tend to become rather long already

[15:00] <moritz> http://doc.perl6.org/type-exceptions.html

[15:01] <PerlJam> (which would be fine if they weren't used so much :)

[15:01] <jnthn> raydiak: Thanks....thought looks...weird.

[15:01] <TimToady> and we renamed unique more for semantic distinction than for huffman

[15:01] <jnthn> *though

[15:02] <jnthn> Hah, TPF seems to have confuesd me and brrt. Maybe it's 'cus we're both wtht vwls... :)

[15:03] <timotimo> maybe i should become tmtm just to make matters a bit more ... interesting

[15:05] <moritz> mrtz!

[15:05] <jnthn> timotimo: Such tradmark!

[15:05] <timotimo> tmtm and tmtd

[15:05] <timotimo> what could go wrong

[15:05] <jnthn> *trademark

[15:05] <timotimo> ™™, yeah

[15:05] <geekosaur> or they'll wonder why a GPS is contributing :p

[15:05] <timotimo> gksr!

[15:06] <geekosaur> well, it'd at least be different from being confused with Russ :)

[15:10] <brrt> oh, yeah, i wanted to tell you about that jnthn :-)

[15:10] <brrt> it is in fact true that nthr f s hv vwls n r nms

[15:12] <jnthn> ts sprsng hw nmprtnt thy r

[15:12] <huf> hmm. i think the r-s are the vowels in your name.

[15:13] <timotimo> just compare the unique count of words with and without vowels in /usr/share/dict/words

[15:13] <TimToady> yes, any contiuant can be forced into the middle of a syllable: see also "psst"

[15:13] <huf> and that makes them a vowel of some sort :)

[15:13] <TimToady> *continuant

[15:13] <timotimo> n pssnt.

[15:13] <huf> i support free movement between the sound classes

[15:13] <TimToady> .oO(no pissant?)

[15:15] *** lolisa left
[15:15] <skids> http://www.ecenglish.com/learnenglish/lessons/can-you-read

[15:15] *** liztormato joined
[15:16] * liztormato waves from a ferry

[15:16] <brrt> why isn't y regarded a vowel...

[15:16] * brrt waves back

[15:16] <timotimo> it sometimes is

[15:16] <jnthn> liztormato: I sea the journey's going well... :)

[15:16] *** larion left
[15:16] <brrt> ah, such punning

[15:16] <jnthn> liztormato: Is that the Puttgarden one?

[15:16] <liztormato> Aye

[15:17] <jnthn> Enjoy it while it lasts.

[15:17] <timotimo> "waves" ... "ferry" ...

[15:17] <timotimo> lztrmt is still recognizable, too

[15:17] <liztormato> Only 10 more minutes ;-)

[15:17] <jnthn> Well, it's the "only a few more years" that I was thinking about.

[15:18] <timotimo> in this scheme, would nwc10 become just nwc or do we consider numbers closer to consonants than to vowels?

[15:18] <jnthn> (They're building a tunnel.)

[15:18] <PerlJam> brrt: y is a vowel in the word "hymn"

[15:18] <liztormato> The "tax-free" shop is noticeable more empty now ;-)

[15:18] <PerlJam> brrt: and w is a vowel in the word "cwm"

[15:18] <PerlJam> brrt: and english is a crazy language  ;)

[15:18] <jnthn> ;-)

[15:19] <timotimo> i wonder if camelia should have some environment variables set to things from the channel; so we can %*ENV<nicks>.words.pick or something :D

[15:19] <timotimo> %*ENV<lastline>, %*ENV<lastnick> ... the possibilities are endless :)

[15:19] <jnthn> When they build the tunnel, then I think Europe will be down to 1 place where they drive a train onto a ferry :(

[15:19] <timotimo> and perhaps a module "use IRC" that makes those simpler to use

[15:20] <jnthn> Well, finish building the tunnel, since I think they're already well on with it.

[15:20] <brrt> what, w is a vowel in ... what even

[15:20] <liztormato> Well, no train on the one we're on ;-(

[15:20] <brrt> what is 'cwm'

[15:21] <PerlJam> brrt: http://www.merriam-webster.com/dictionary/cwm

[15:22] <jnthn> Ah, a loan from Welsh

[15:22] <liztormato> Disembarking&

[15:22] <jnthn> That explains everything :p

[15:22] *** liztormato left
[15:22] <brrt> right

[15:29] *** vendethiel left
[15:30] *** vendethiel joined
[15:31] *** gfldex joined
[15:33] *** chenryn joined
[15:37] *** chenryn left
[15:38] <masak> jnthn: heh -- I'm usually the one to tell people about the X:: namespace :P

[15:38] *** sjn left
[15:38] <masak> jnthn: I don't think it's actually bad in itself -- Perl 6 can handle the ambiguity, and all the X::** classes are still there.

[15:38] <timotimo> does anybody want to implement something clever for this error message?

[15:38] <timotimo> m: when X::Test { }

[15:38] <camelia> rakudo-moar 240cf0: OUTPUT«5===SORRY!5===␤Function X::Test needs parens to avoid gobbling block␤at /tmp/ZH1w8GsJCs:1␤------> 3when X::Test { }7⏏5<EOL>␤Missing block (apparently taken by 'X::Test')␤at /tmp/ZH1w8GsJCs:1␤------> 3when X::Test { }7⏏5<EOL>␤␤»

[15:38] *** sjn joined
[15:38] <masak> it's more like it's bad style.

[15:39] <japhb> I saw a contest once to create a valid English sentence using every letter exactly once.  The results of the contest: every winning entrant used the word 'cwm'.

[15:39] *** muraiki left
[15:39] *** Akagi201 left
[15:39] <timotimo> like, if the actual function hasn't been declared yet, suggest that maybe the user meant to declare/import a class with that name?

[15:39] <timotimo> m: when WhatIsThis { }

[15:39] <camelia> rakudo-moar 240cf0: OUTPUT«5===SORRY!5===␤Function WhatIsThis needs parens to avoid gobbling block␤at /tmp/E9AS6HKwXR:1␤------> 3when WhatIsThis { }7⏏5<EOL>␤Missing block (apparently taken by 'WhatIsThis')␤at /tmp/E9AS6HKwXR:1␤------> 3when WhatIsThis { }7⏏…»

[15:39] <timotimo> doesn't even need the X::

[15:39] *** muraiki joined
[15:40] *** brrt left
[15:48] *** pecastro left
[15:48] <PerlJam> japhb: there's another welsh word they could have used at the sacrifice of a few letters:  crwth

[15:52] *** cognominal left
[15:53] <japhb> PerlJam: I'm guessing r, t, and h were too valuable for fitting other words into the sentence.  But getting c, w, and m in one shot?  Pure win.  :-)

[15:54] *** mr-foobar joined
[15:55] <PerlJam> http://www.fun-with-words.com/pang_example.html has one with crwth:  Squdgy fez, blank jimp crwth vox!

[15:55] <PerlJam> humans are a strange lot

[15:55] <japhb> So true.

[15:59] <TimToady> std: when X::Test { }

[15:59] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Function 'X::Test' needs parens to avoid gobbling block at /tmp/G638dwpU20 line 1:␤------> 3when X::Test7⏏5 { }␤Missing block (apparently gobbled by 'X::Test') at /tmp/G638dwpU20 line 1:␤------> 3when X::Test { }7⏏5<EOL>␤ …»

[16:00] <TimToady> std: X::Test

[16:00] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Undeclared name:␤        'X::Test' used at line 1␤Check failed␤FAILED 00:00 134m␤»

[16:00] <TimToady> m: X::Test

[16:00] <camelia> rakudo-moar 240cf0: OUTPUT«Could not find symbol '&Test'␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2914␤  in any find_method at src/gen/m-Metamodel.nqp:1053␤  in block <unit> at /tmp/7xi7QvnZWg:1␤␤»

[16:02] *** diana_olhovik_ left
[16:02] <TimToady> that's probably LTA

[16:02] <TimToady> adding & assumes it's a function

[16:03] <TimToady> and find_method_fallback should be invisible in its failure to find one

[16:04] <TimToady> m: X::NoNeSuCh

[16:04] <camelia> rakudo-moar 240cf0: OUTPUT«Could not find symbol '&NoNeSuCh'␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2914␤  in any find_method at src/gen/m-Metamodel.nqp:1053␤  in block <unit> at /tmp/XGD1kItSMy:1␤␤»

[16:04] <masak> m: enum D <A>; sub foo(D $a) { True

[16:04] <camelia> rakudo-moar 240cf0: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Qiqny5X8VK␤Missing block␤at /tmp/Qiqny5X8VK:1␤------> 3enum D <A>; sub foo(D $a) { True7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modif…»

[16:05] <masak> oh! so the choice of `X` actually matters o.O

[16:05] <masak> m: enum IO <A>; sub foo(IO $a) { True

[16:05] <camelia> rakudo-moar 240cf0: OUTPUT«5===SORRY!5=== Error while compiling /tmp/1h05FMUQXk␤Missing block␤at /tmp/1h05FMUQXk:1␤------> 3enum IO <A>; sub foo(IO $a) { True7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement mod…»

[16:05] <TimToady> m: XXX::NoNeSuCh

[16:05] <camelia> rakudo-moar 240cf0: OUTPUT«Could not find symbol '&NoNeSuCh'␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2914␤  in any find_method at src/gen/m-Metamodel.nqp:1053␤  in block <unit> at /tmp/G_CW5vYa9M:1␤␤»

[16:05] <TimToady> not there :)

[16:06] <masak> m: sub foo(X $a) { True

[16:06] *** zakharyas left
[16:06] <camelia> rakudo-moar 240cf0: OUTPUT«5===SORRY!5===␤X cannot be used as a type on a parameter␤at /tmp/c8cpb9Q2BA:1␤------> 3sub foo(X7⏏5 $a) { True␤Missing block␤at /tmp/c8cpb9Q2BA:1␤------> 3sub foo(X $a) { True7⏏5<EOL>␤    expecting any of:␤        statement …»

[16:06] <TimToady> huh?

[16:06] <masak> TimToady: it's an "uninhabited" namespace.

[16:07] <masak> m: enum X <A>; my X $x; say $x

[16:07] <camelia> rakudo-moar 240cf0: OUTPUT«(X)␤»

[16:11] *** fhelmberger left
[16:12] *** uncleyear left
[16:12] *** uncleyear joined
[16:13] *** domidumont left
[16:15] *** vendethiel left
[16:16] <TimToady> well, then it should say something more like that

[16:18] <jnthn> Well, it's more that it's a package, so not something you can type-check against

[16:18] <jnthn> Same with module

[16:21] *** perlvim joined
[16:21] *** tadzik left
[16:22] *** tadzik joined
[16:25] *** perlvim_ joined
[16:27] <perlvim_> p6: our $*foo = 1; say MY::<$*foo>; say OUR::<$*foo>;

[16:27] <camelia> rakudo-moar 240cf0: OUTPUT«1␤(Any)␤»

[16:28] <jnthn> m: class A { has $*foo }

[16:28] <camelia> rakudo-moar 240cf0: ( no output )

[16:28] <jnthn> Heh. :)

[16:28] <jnthn> Yeah, we should refuse to compile that :)

[16:28] <jnthn> (and the our one)

[16:28] *** perlvim left
[16:29] *** perlvim__ joined
[16:29] *** perlvim_ left
[16:31] <perlvim__> p6: my \var = 1; var.say;

[16:31] <camelia> rakudo-moar 240cf0: OUTPUT«1␤»

[16:31] *** espadrine_ left
[16:32] <timotimo> oh, what's the meaning behind the "perlvim" name? :)

[16:32] <perlvim__> timotimo: ssq

[16:32] <perlvim__> ssqq

[16:34] *** perlvim__ left
[16:36] *** ssqq joined
[16:38] *** vendethiel joined
[16:38] *** diana_olhovik_ joined
[16:42] <timotimo> this is why you don't set up your company's account to automatically retweet everything with your name in it ...

[16:42] <timotimo> https://twitter.com/alpnames

[16:46] <ssqq> timotimo: I can't landing it.(twitter,facebook,etc)

[16:47] <timotimo> ah

[16:47] <ssqq> timotimo: even wordpress.com

[16:47] <timotimo> well, basically i pointed out their "free domain for a year, then extremely expensive renewal" thing with the words "what a bargain!"

[16:47] <timotimo> and they retweeted it

[16:47] <timotimo> immediately

[16:49] <masak> "what speedy feedback!"

[16:49] <ssqq> timotimo: I have serval domain,

[16:50] <ssqq> timotimo: you means I'd better register a IRC username?

[16:53] <ssqq> timotimo: I wonder if any subroutine's signature could save in one scalar container, then how to replace it to an exists subroutine signature?

[16:54] <timotimo> i'm not sure i understand; do you mean something like { my $the_signatue = &my_subroutine.^signature }?

[16:54] <timotimo> and then { &my_subroutine.^replace_signature($other_signature) } ?

[16:54] <ssqq> timotimo: yes, it is.

[16:55] <timotimo> hmm. the signature is used when the code inside the signature is compiled

[16:55] <PerlJam> why would you want to replace a subroutine's signature?

[16:55] <timotimo> i don't know if it's possible to replace it with something very different

[16:56] <timotimo> well, there probably is some use case

[16:57] <ssqq> timotimo: If we could save a piece of code lazily, and then dynamically eval it. just like quote of `lisp`.

[16:57] <timotimo> i don't know much lisp :(

[16:57] <timotimo> can you write some pseudocode?

[16:58] <ssqq> p6: my @code = \(sub name ($x, $y) { $x + $y }); my $signature = @code[2]; 

[16:58] <camelia> rakudo-moar 240cf0: ( no output )

[16:59] <timotimo> p6: my &sub = sub name ($x, $y) { $x + $y }; my $signature = &sub.signature; say $signature.perl

[16:59] *** FROGGS left
[16:59] <camelia> rakudo-moar 240cf0: OUTPUT«:(Any $x, Any $y)␤»

[16:59] <timotimo> p6: my $signature = :($x, $y); say $signature.perl

[16:59] <camelia> rakudo-moar 240cf0: OUTPUT«:($x, $y)␤»

[17:00] *** dakkar left
[17:02] <ssqq> timotimo: How to set the default value of Type container? `my Int $x; $x == 1`;

[17:03] *** mr-foobar left
[17:03] <timotimo> p6: my Int $x is default 5; say $x;

[17:03] <camelia> rakudo-moar 240cf0: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Type check failed in assignment to '$x'; expected 'Int' but got 'Bool'␤at /tmp/tmpfile:1␤»

[17:03] <timotimo> p6: my Int $x is default(5); say $x;

[17:03] <camelia> rakudo-moar 240cf0: OUTPUT«5␤»

[17:03] <timotimo> p6: my Int $x is default(5); say $x; $x = 10; say $x; $x = Nil; say $x

[17:03] <camelia> rakudo-moar 240cf0: OUTPUT«5␤10␤5␤»

[17:03] <timotimo> do you mean that?

[17:04] <timotimo> or do you mean "the default value for 'Int' should be ..."?

[17:04] <ssqq> timotimo: this only set default value with some named variable, not Type container

[17:05] <timotimo> ah, yes

[17:05] <timotimo> that's difficult

[17:06] <timotimo> m: say 1 * Int; say 5 + Int;

[17:06] <camelia> rakudo-moar 240cf0: OUTPUT«Invocant requires a 'Int' instance, but a type object was passed.  Did you forget a .new?␤  in block <unit> at /tmp/_8NpQb0MTL:1␤␤»

[17:06] <timotimo> mhh

[17:07] <ssqq> timotimo: specs said: Any container's default may be overridden by the ... not Any value's containers

[17:07] *** konsolebox left
[17:07] <timotimo> oh

[17:07] <timotimo> "container" means like "the Scalar for $x"

[17:08] <timotimo> m: my $foo is default(10); say VAR($foo).perl

[17:08] <camelia> rakudo-moar 240cf0: OUTPUT«Int.new␤»

[17:08] <timotimo> ah, that call looks into the container again

[17:08] <timotimo> m: my $foo is default(10); say VAR($foo)

[17:08] <camelia> rakudo-moar 240cf0: OUTPUT«10␤»

[17:08] <timotimo> m: my $foo is default(10); VAR($foo).WHAT.say

[17:08] <camelia> rakudo-moar 240cf0: OUTPUT«(Scalar)␤»

[17:08] <timotimo> m: my $foo is default(10); VAR($foo).default.say

[17:08] <camelia> rakudo-moar 240cf0: OUTPUT«10␤»

[17:09] * timotimo is AFK for a bit

[17:10] *** xfix joined
[17:10] <ssqq> timotimo: I see, then this ability is less useless.

[17:12] <ssqq> timotimo: If I want use `5.times { say 'Oh' }` just like Ruby, How to design method of times with class `Int`, besides go to rakudo source code.

[17:12] <andreoss> [ptc]: should i commit in my own branch on perl6-examples or it's okay to commit on master?

[17:15] <geekosaur> ssqq, I think that's use MONEKY_PATCHING + augment class Int ...

[17:15] <geekosaur> *MONKEY_PATCHING

[17:15] <geekosaur> that being a hint that it's considered a bad idea

[17:17] *** yqt joined
[17:20] *** telex left
[17:20] *** bcode is now known as u

[17:22] *** chenryn joined
[17:22] *** telex joined
[17:24] *** FROGGS joined
[17:24] *** ssqq left
[17:27] *** chenryn left
[17:30] *** rindolf left
[17:31] *** rindolf joined
[17:33] <timotimo> well, you can 5.&times: { ... } and just have a "sub times(Int $foo, &code) { &code for ^$foo }

[17:33] <timotimo> we don't allow term + block just like that for custom things

[17:33] <timotimo> that's TTIAR, Two Terms In A Row

[17:34] <dalek> rakudo/nom: d7dbe15 | TimToady++ | src/core/Exception.pm:

[17:34] <dalek> rakudo/nom: Awesomeize insufficiently type-like message

[17:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d7dbe15484

[17:34] *** abraxxa left
[17:35] *** grondilu left
[17:37] <dalek> perl6-examples: e328821 | (Andrei Osipov)++ | categories/euler/p (2 files):

[17:37] <dalek> perl6-examples: [euler] problem 54 solution

[17:37] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/e328821982

[17:37] <dalek> perl6-examples: 5754db0 | (Andrei Osipov)++ | t/categories/euler.t:

[17:37] <dalek> perl6-examples: [euler] test for problem 54

[17:37] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/5754db0328

[17:38] <FROGGS> TimToady: /<foo>/ is always about regexes in scope (or methods of the current cursor), but never about subs, right?

[17:38] *** pochi left
[17:38] *** pochi joined
[17:39] <FROGGS> TimToady: for example, I think this is invalid: https://github.com/perl6/roast/blob/master/S05-metasyntax/angle-brackets.t#L52

[17:41] <TimToady> yes, that's invalid, but you could write it validly by having a Cursor as the first argument, and returning a Cursor

[17:41] <FROGGS> TimToady: so a subroutine which takes a Cursor would be valid?

[17:42] <FROGGS> because we do not consider subs at all atm

[17:42] <TimToady> m: sub try(Cursor $c) { say "HERE"; $c }; 'foobar' ~~ / foo <try> bar /

[17:42] <camelia> rakudo-moar 240cf0: OUTPUT«Method 'try' not found for invocant of class 'Cursor'␤  in block <unit> at /tmp/GqeHcgWkPr:1␤␤»

[17:42] <timotimo> that sub isn't annotated to return a cursor, though

[17:42] <timotimo> should it be considered?

[17:42] <TimToady> hmm, I would argue that should work

[17:43] <FROGGS> and if subs are preferred over Cursor method this would surprise a lot of ppl me thinks

[17:43] <TimToady> m: sub try(Cursor $c --> Cursor) { say "HERE"; $c }; 'foobar' ~~ / foo <try> bar /

[17:43] <camelia> rakudo-moar 240cf0: OUTPUT«Method 'try' not found for invocant of class 'Cursor'␤  in block <unit> at /tmp/buEb88qEOV:1␤␤»

[17:43] <timotimo> hopefully they would not be preferred

[17:43] <TimToady> there can be no cursor method there

[17:43] <TimToady> we aren't in a grammar, and // doesn't see the current grammar if there were one

[17:45] <FROGGS> m: grammar G; use Test; rule TOP { <ok> }; token ok { 'ok' }; say G.parse: 'ok'

[17:45] <camelia> rakudo-moar 240cf0: OUTPUT«｢ok｣␤ ok => ｢ok｣␤»

[17:45] <FROGGS> so this would not work if we would consider subs?

[17:46] <dalek> perl6-roast-data: e9002a9 | coke++ | / (9 files):

[17:46] <dalek> perl6-roast-data: today (automated commit)

[17:46] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/e9002a9160

[17:47] <[Coke]> karen responded, blog is fixed, I'm still in backscroll.

[17:47] <TimToady> we should probably recognize subs that take a Cursor as the first argument, and ignore the others

[17:48] <TimToady> we allow methods in places of regex, so it seems fair to also allow (some) subs

[17:49] <FROGGS> I guess the only thing that makes me worry is that this would be the first spot where we would do such a thing

[17:49] <TimToady> m: sub try(Cursor $c --> Cursor) { say "HERE"; $c }; 'foobar' ~~ / foo <&try> bar /

[17:49] <camelia> rakudo-moar d7dbe1: OUTPUT«HERE␤»

[17:49] *** liztormato joined
[17:50] <TimToady> I guess we can get there with explicit &, so maybe we can leave it as-is

[17:50] * liztormato waves from a hotel

[17:50] <FROGGS> hi liztormato 

[17:50] <FROGGS> TimToady: +1 to that because I think <...> does too many things already (as per implementation I mean)

[17:50] * TimToady is at Builder Stage at Collision

[17:51] <timotimo> heyo liztormato 

[17:52] * FROGGS is at the GPW but in a hotel and puts @kids[^2] to bed

[17:52] *** u is now known as ilbelkyr

[17:53] *** liztormato left
[17:55] *** mr-foobar joined
[17:55] *** liztormato joined
[17:55] <FROGGS> that's one of the tests (but without the &)

[17:55] <FROGGS> m: my $called_ok = 0; my sub test ($c, $a, $b) {$called_ok++ if $a && $b; $c}; say 'some text' ~~ /some <&test: 3, 5>/;

[17:55] <camelia> rakudo-moar d7dbe1: OUTPUT«P6opaque: no such attribute '$!pos'␤  in block <unit> at /tmp/OEESD9s30h:1␤␤»

[17:55] <FROGGS> and without the $c actually

[17:55] <FROGGS> m: my $called_ok = 0; my sub test (Cursor $c, $a, $b) {$called_ok++ if $a && $b; $c}; say 'some text' ~~ /some <&test: 3, 5>/;

[17:55] <camelia> rakudo-moar d7dbe1: OUTPUT«｢some｣␤»

[17:56] <FROGGS> m: say Cursor.^mro

[17:56] <camelia> rakudo-moar d7dbe1: OUTPUT«(Cursor) (Any) (Mu)␤»

[17:56] <TimToady> that latter probably fails if you try to match anything after the <>

[17:57] <TimToady> oh, wait, never mind

[17:57] <TimToady> misread

[17:57] *** domidumont joined
[17:57] *** Erendis42d joined
[17:58] *** liztormato left
[18:00] *** liztormato joined
[18:03] *** liztormato left
[18:04] *** Vlavv left
[18:06] *** [Sno] left
[18:07] *** [Sno] joined
[18:09] *** yqt left
[18:14] *** andreoss left
[18:15] <FROGGS> m: say 'foo:bar' ~~ m/ $1=(<-[:]>*) \:  $0=<.ident> /

[18:15] <camelia> rakudo-moar d7dbe1: OUTPUT«｢foo:bar｣␤ 1 => ｢foo｣␤ 0 => ｢bar｣␤»

[18:15] <FROGGS> m: say 'foo:bar' ~~ m/ $1=(<-[:]>*) \:  (<.ident>) /

[18:15] <camelia> rakudo-moar d7dbe1: OUTPUT«Method 'from' not found for invocant of class 'Any'␤  in block <unit> at /tmp/z6STnluoAs:1␤␤»

[18:15] <FROGGS> m: say 'foo:bar' ~~ m/ $1=(<-[:]>*) \:  (<ident>) /

[18:15] <camelia> rakudo-moar d7dbe1: OUTPUT«Method 'from' not found for invocant of class 'Any'␤  in block <unit> at /tmp/CJR1iC4pJM:1␤␤»

[18:15] <FROGGS> I guess that's worth an RT ticket

[18:16] <FROGGS> m: say 'foo:bar' ~~ m/ $0=(<-[:]>*) \:  (<ident>) /

[18:16] <camelia> rakudo-moar d7dbe1: OUTPUT«｢foo:bar｣␤ 0 => ｢foo｣␤ 1 => ｢bar｣␤  ident => ｢bar｣␤»

[18:16] <FROGGS> ahh

[18:18] *** Vlavv joined
[18:23] <Erendis42d> perl<3

[18:23] <timotimo> glad to hear it :)

[18:23] <timotimo> (<-[:]>*)  ... what kind of emoticon is this? %)

[18:25] <FROGGS> it is the so called Pig-Nosed Twinkle

[18:25] <timotimo> not bad

[18:26] <timotimo> though i think pig noses have the dots more like [··]

[18:27] <rindolf> Hi all. http://pastie.org/10174333 - this gives me an error on line 17 with "perl6" (Rakudo) - why?

[18:30] <rindolf> TimToady: hi! any idea?

[18:31] <FROGGS> m: -> ($foo) { }

[18:31] <camelia> rakudo-moar d7dbe1: ( no output )

[18:31] <FROGGS> m: -> ($foo, $bar) { }

[18:31] <camelia> rakudo-moar d7dbe1: ( no output )

[18:32] <FROGGS> m: (-> ($foo, $bar) { })( 1, 2 )

[18:32] <camelia> rakudo-moar d7dbe1: OUTPUT«Too few positionals passed; expected 2 arguments but got 0 in sub-signature␤  in block <unit> at /tmp/ZYLxcAHUc5:1␤␤»

[18:32] <FROGGS> m: (-> $foo, $bar { })( 1, 2 )

[18:32] <camelia> rakudo-moar d7dbe1: ( no output )

[18:32] <FROGGS> rindolf: remove the parens after ->

[18:33] <rindolf> FROGGS: ah. :-S

[18:33] <timotimo> superstitious parens etc etc

[18:33] <FROGGS> you can remove other parens too, but these are problematic

[18:33] <timotimo> no parens needed after if and for

[18:33] *** Isp-sec joined
[18:34] <timotimo> and "$size+1 .. 4" could also be "$size ^.. 4"

[18:34] *** Erendis42d left
[18:34] <timotimo> and i'd write ($cnt == 1 ?? 1 !! 0) as +$cnt.Bool :P

[18:34] <timotimo> oh, wait

[18:34] <timotimo> that's not right at all :)

[18:35] <timotimo> +($cnt == 1)

[18:35] <timotimo> given it's after a + anyway, no need for a prefix:<+> as well

[18:35] <timotimo> that pastebin has a pleasant font

[18:35] <timotimo> ah, it's probably using Monaco on my machine

[18:36] <rindolf> timotimo, FROGGS : http://pastie.org/10174355 - now I'm getting an error on lines 7 and 27.

[18:46] *** mr-foobar left
[18:46] *** gfldex left
[18:46] *** tinyblak left
[18:46] *** colomon left
[18:46] *** darutoko left
[18:46] *** itz left
[18:46] *** xinming_ left
[18:46] *** Possum left
[18:46] *** b^_^d left
[18:46] *** BooK_ left
[18:46] *** torbjorn left
[18:46] *** ponbiki left
[18:46] *** agentzh left
[18:47] *** diana_olhovik_ left
[18:47] *** TimToady left
[18:47] *** pierrot left
[18:47] *** hernan left
[18:47] *** ilbot3 left
[18:47] *** ycaymanbo left
[18:47] *** domidumont left
[18:47] *** broquaint left
[18:47] *** xiaomiao left
[18:47] *** Gothmog_ left
[18:47] *** eiro left
[18:47] *** pochi left
[18:47] *** thou left
[18:47] *** Khisanth left
[18:47] *** dsm left
[18:47] *** bayprogrammer left
[18:47] *** Spot__ left
[18:47] *** cosimo left
[18:47] *** krakan_ left
[18:47] *** Isp-sec left
[18:47] *** telex left
[18:47] *** tadzik left
[18:47] *** ggoebel left
[18:47] *** silug left
[18:47] *** b2gills left
[18:47] *** pyrimidine left
[18:47] *** rhr left
[18:47] *** kbenson left
[18:47] *** maddingue left
[18:47] *** yakudza left
[18:47] *** simcop2387 left
[18:47] *** raydiak left
[18:47] *** StavroMueller left
[18:47] *** betterworld left
[18:47] *** dylanwh left
[18:47] *** dg left
[18:47] *** cxreg left
[18:47] *** diegok left
[18:47] *** tony-o left
[18:47] *** RabidGravy left
[18:47] *** eternaleye left
[18:47] *** |Tux| left
[18:47] *** Guest90792 left
[18:47] *** masak left
[18:47] *** nwc10 left
[18:47] *** SHODAN left
[18:47] *** psch left
[18:47] *** MilkmanDan left
[18:47] *** anocelot_ left
[18:47] *** Celelibi left
[18:47] *** gargamel_ left
[18:47] *** mattp left
[18:47] *** yeltzooo9 left
[18:47] *** lestrrat left
[18:47] *** ashleydev left
[18:47] *** apejens left
[18:47] *** hobbs left
[18:47] *** integral left
[18:47] *** japhb left
[18:47] *** dalek left
[18:47] *** synbot6 left
[18:47] *** [Tux] left
[18:47] *** smi1er left
[18:47] *** felher left
[18:47] *** nine left
[18:47] *** ugexe left
[18:47] *** mephinet left
[18:47] *** yogan left
[18:47] *** retupmoca left
[18:47] *** skarn left
[18:47] *** stux|RC left
[18:47] *** BinGOs left
[18:47] *** ilbelkyr left
[18:47] *** nebuchadnezzar left
[18:47] *** hoelzro left
[18:47] *** shmibs left
[18:47] *** pnu left
[18:47] *** zostay left
[18:47] *** Sqirrel left
[18:47] *** sue_ left
[18:47] *** Guest96 left
[18:47] *** haroldwu left
[18:47] *** Timbus_ left
[18:47] *** rivarun left
[18:47] *** sunnavy left
[18:47] *** kst left
[18:47] *** btyler left
[18:47] *** sergot_ left
[18:47] *** atta left
[18:47] *** arnsholt left
[18:47] *** sftp left
[18:47] *** charsbar__ left
[18:47] *** DrForr left
[18:47] *** bjz left
[18:47] *** jdv79 left
[18:47] *** jepeway left
[18:47] *** mls left
[18:47] *** vike left
[18:47] *** Psyche^ left
[18:47] *** Alina-malina left
[18:47] *** PZt left
[18:47] *** labster left
[18:47] *** mtj__ left
[18:47] *** jercos left
[18:47] *** jnthn left
[18:47] *** oetiker left
[18:47] *** cbk1090 left
[18:47] *** rararara left
[18:47] *** bartolin left
[18:47] *** geekosaur left
[18:47] *** ruoso left
[18:47] *** mathw left
[18:47] *** robinsmidsrod left
[18:47] *** timotimo left
[18:47] *** [ptc] left
[18:47] *** JimmyZ left
[18:47] *** kd` left
[18:47] *** preyalone left
[18:47] *** ggherdov left
[18:47] *** xxx left
[18:47] *** ingy left
[18:47] *** fernando___ left
[18:47] *** FROGGS left
[18:47] *** xfix left
[18:47] *** uncleyear left
[18:47] *** [particle] left
[18:47] *** dustinm` left
[18:47] *** coffee` left
[18:47] *** salva left
[18:47] *** Bucciarati left
[18:47] *** mst left
[18:47] *** revdiablo left
[18:47] *** zoosha_ left
[18:47] *** muraiki left
[18:47] *** ShimmerFairy left
[18:47] *** Foxcool left
[18:47] *** ir2ivps4 left
[18:47] *** PerlJam left
[18:47] *** JoaquinFerrero left
[18:47] *** estrabd_ left
[18:47] *** leedo_ left
[18:47] *** bobkare left
[18:47] *** huf left
[18:47] *** sivoais left
[18:47] *** pRiVi_ left
[18:47] *** f3ew left
[18:47] *** rudi_s left
[18:47] *** _sri_ left
[18:47] *** kshannon left
[18:47] *** sjn left
[18:47] *** rmgk left
[18:47] *** krunen left
[18:47] *** Pauekn left
[18:47] *** Grrrr left
[18:47] *** egrep left
[18:47] *** erdic left
[18:47] *** petercommand left
[18:47] *** moritz left
[18:47] *** smash left
[18:47] *** pmichaud left
[18:47] *** tictac left
[18:47] *** Vlavv left
[18:47] *** [Sno] left
[18:47] *** vendethiel left
[18:47] *** kaare_ left
[18:47] *** skids left
[18:47] *** virtualsue left
[18:47] *** ribasushi_ left
[18:47] *** camelia left
[18:47] *** cdc left
[18:47] *** wtw left
[18:47] *** yoleaux left
[18:47] *** prammer left
[18:47] *** hahainternet left
[18:47] *** vytas left
[18:47] *** DarthGandalf left
[18:47] *** Mouq left
[18:47] *** jantore left
[18:47] *** awwaiid left
[18:47] *** Exodist left
[18:47] *** [Coke] left
[18:47] *** Util left
[18:47] *** risou left
[18:47] *** tinita left
[18:47] *** jschulz left
[18:47] *** burnersk left
[18:47] *** danstoner left
[18:47] *** woshty left
[18:47] *** Humbedooh left
[18:47] *** osfameron left
[18:47] *** profan left
[18:47] *** literal left
[18:47] *** avar left
[18:47] *** jfried left
[18:47] *** rindolf left
[18:47] *** noganex left
[18:47] *** isacloud left
[18:47] *** flussence left
[18:47] *** nbrown04 left
[18:47] *** avuserow1 left
[18:47] *** Juerd left
[18:47] *** clkao left
[18:49] *** Peter_R joined
[18:49] *** _mg_ joined
[18:49] *** Isp-sec joined
[18:49] *** Vlavv joined
[18:49] *** [Sno] joined
[18:49] *** domidumont joined
[18:49] *** pochi joined
[18:49] *** rindolf joined
[18:49] *** FROGGS joined
[18:49] *** telex joined
[18:49] *** xfix joined
[18:49] *** diana_olhovik_ joined
[18:49] *** vendethiel joined
[18:49] *** tadzik joined
[18:49] *** uncleyear joined
[18:49] *** muraiki joined
[18:49] *** sjn joined
[18:49] *** thou joined
[18:49] *** zostay joined
[18:49] *** kaare_ joined
[18:49] *** skids joined
[18:49] *** rararara joined
[18:49] *** Sqirrel joined
[18:49] *** RabidGravy joined
[18:49] *** broquaint joined
[18:49] *** bjz joined
[18:49] *** ShimmerFairy joined
[18:49] *** virtualsue joined
[18:49] *** [particle] joined
[18:49] *** Foxcool joined
[18:49] *** jdv79 joined
[18:49] *** ycaymanbo joined
[18:49] *** dustinm` joined
[18:49] *** bartolin joined
[18:49] *** jepeway joined
[18:49] *** rmgk joined
[18:49] *** noganex joined
[18:49] *** TimToady joined
[18:49] *** pierrot joined
[18:49] *** hernan joined
[18:49] *** isacloud joined
[18:49] *** ribasushi_ joined
[18:49] *** mls joined
[18:49] *** hobbs joined
[18:49] *** integral joined
[18:49] *** japhb joined
[18:49] *** camelia joined
[18:49] *** tepper.freenode.net sets mode: +v camelia

[18:49] *** cdc joined
[18:49] *** ggoebel joined
[18:49] *** sue_ joined
[18:49] *** dalek joined
[18:49] *** wtw joined
[18:49] *** synbot6 joined
[18:49] *** xiaomiao joined
[18:49] *** vike joined
[18:49] *** silug joined
[18:49] *** Guest96 joined
[18:49] *** yoleaux joined
[18:49] *** eternaleye joined
[18:49] *** coffee` joined
[18:49] *** krunen joined
[18:49] *** kd` joined
[18:49] *** |Tux| joined
[18:49] *** Pauekn joined
[18:49] *** [Tux] joined
[18:49] *** Grrrr joined
[18:49] *** Psyche^ joined
[18:49] *** egrep joined
[18:49] *** ir2ivps4 joined
[18:49] *** Gothmog_ joined
[18:49] *** Alina-malina joined
[18:49] *** ilbot3 joined
[18:49] *** erdic joined
[18:49] *** smi1er joined
[18:49] *** prammer joined
[18:49] *** Guest90792 joined
[18:49] *** PZt joined
[18:49] *** labster joined
[18:49] *** Khisanth joined
[18:49] *** haroldwu joined
[18:49] *** dsm joined
[18:49] *** bayprogrammer joined
[18:49] *** felher joined
[18:49] *** mtj__ joined
[18:49] *** Timbus_ joined
[18:49] *** nine joined
[18:49] *** hahainternet joined
[18:49] *** ugexe joined
[18:49] *** geekosaur joined
[18:49] *** mephinet joined
[18:49] *** rivarun joined
[18:49] *** sunnavy joined
[18:49] *** petercommand joined
[18:49] *** tepper.freenode.net sets mode: +vv dalek yoleaux

[18:49] *** salva joined
[18:49] *** kst joined
[18:49] *** b2gills joined
[18:49] *** masak joined
[18:49] *** Bucciarati joined
[18:49] *** moritz joined
[18:49] *** jercos joined
[18:49] *** vytas joined
[18:49] *** smash joined
[18:49] *** nwc10 joined
[18:49] *** yogan joined
[18:49] *** SHODAN joined
[18:49] *** pmichaud joined
[18:49] *** psch joined
[18:49] *** flussence joined
[18:49] *** pyrimidine joined
[18:49] *** rhr joined
[18:49] *** Spot__ joined
[18:49] *** jnthn joined
[18:49] *** btyler joined
[18:49] *** oetiker joined
[18:49] *** cbk1090 joined
[18:49] *** DarthGandalf joined
[18:49] *** PerlJam joined
[18:49] *** eiro joined
[18:49] *** retupmoca joined
[18:49] *** avuserow1 joined
[18:49] *** nbrown04 joined
[18:49] *** Mouq joined
[18:49] *** ruoso joined
[18:49] *** tictac joined
[18:49] *** skarn joined
[18:49] *** MilkmanDan joined
[18:49] *** cosimo joined
[18:49] *** JoaquinFerrero joined
[18:49] *** mathw joined
[18:49] *** anocelot_ joined
[18:49] *** krakan_ joined
[18:49] *** robinsmidsrod joined
[18:49] *** Juerd joined
[18:49] *** mst joined
[18:49] *** sergot_ joined
[18:49] *** leedo_ joined
[18:49] *** atta joined
[18:49] *** clkao joined
[18:49] *** stux|RC joined
[18:49] *** arnsholt joined
[18:49] *** jantore joined
[18:49] *** BinGOs joined
[18:49] *** sftp joined
[18:49] *** timotimo joined
[18:49] *** bobkare joined
[18:49] *** revdiablo joined
[18:49] *** kbenson joined
[18:49] *** [ptc] joined
[18:49] *** ilbelkyr joined
[18:49] *** Celelibi joined
[18:49] *** shmibs joined
[18:49] *** nebuchadnezzar joined
[18:49] *** charsbar__ joined
[18:49] *** zoosha_ joined
[18:49] *** huf joined
[18:49] *** sivoais joined
[18:49] *** gargamel_ joined
[18:49] *** JimmyZ joined
[18:49] *** hoelzro joined
[18:49] *** preyalone joined
[18:49] *** DrForr joined
[18:49] *** maddingue joined
[18:49] *** yakudza joined
[18:49] *** awwaiid joined
[18:49] *** simcop2387 joined
[18:49] *** pRiVi_ joined
[18:49] *** Exodist joined
[18:49] *** pnu joined
[18:49] *** apejens joined
[18:49] *** ashleydev joined
[18:49] *** lestrrat joined
[18:49] *** yeltzooo9 joined
[18:49] *** mattp joined
[18:49] *** jfried joined
[18:49] *** avar joined
[18:49] *** profan joined
[18:49] *** literal joined
[18:49] *** osfameron joined
[18:49] *** kshannon joined
[18:49] *** Humbedooh joined
[18:49] *** woshty joined
[18:49] *** fernando___ joined
[18:49] *** _sri_ joined
[18:49] *** danstoner joined
[18:49] *** burnersk joined
[18:49] *** jschulz joined
[18:49] *** tinita joined
[18:49] *** risou joined
[18:49] *** Util joined
[18:49] *** [Coke] joined
[18:49] *** rudi_s joined
[18:49] *** f3ew joined
[18:49] *** ingy joined
[18:49] *** xxx joined
[18:49] *** ggherdov joined
[18:49] *** raydiak joined
[18:49] *** StavroMueller joined
[18:49] *** betterworld joined
[18:49] *** dylanwh joined
[18:49] *** dg joined
[18:49] *** cxreg joined
[18:49] *** diegok joined
[18:49] *** tony-o joined
[18:49] *** gfldex joined
[18:49] *** tinyblak joined
[18:49] *** colomon joined
[18:49] *** darutoko joined
[18:49] *** itz joined
[18:49] *** xinming_ joined
[18:49] *** Possum joined
[18:49] *** torbjorn joined
[18:49] *** b^_^d joined
[18:49] *** BooK_ joined
[18:49] *** ponbiki joined
[18:49] *** agentzh joined
[18:50] <dalek> mu: 539bb9d | usev6++ | misc/rt.perl.org/cleanup_nyc_hackathon_tickets.txt:

[18:50] <dalek> mu: Keep track of merged tickets

[18:50] <dalek> mu: review: https://github.com/perl6/mu/commit/539bb9dd7d

[18:53] <dalek> perl6-examples: 76e4e37 | (Shlomi Fish)++ | categories/euler/prob151-shlomif.p6:

[18:53] <dalek> perl6-examples: Euler#151 solution. Slow...

[18:53] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/76e4e372ca

[18:54] *** Erendis42d joined
[18:54] <rindolf> https://github.com/perl6/perl6-examples/blob/master/categories/euler/prob151-shlomif.p6 - does anyone have any ideas for optimisation?

[18:56] *** raiph joined
[18:56] <dalek> perl6-examples: 0144c93 | (Shlomi Fish)++ | categories/euler/prob151-shlomif.p6:

[18:56] <dalek> perl6-examples: Made the code more idiomatic.

[18:56] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/0144c93a6e

[18:59] <raiph> rindolf: run it with --profile ?

[18:59] <rindolf> raiph: let me see.

[19:00] <raiph> rindolf: tip for current use of --profile; keep the run very short

[19:00] <rindolf> raiph: hmmm...

[19:01] <rindolf> raiph: I could try to use a more efficient algorithm - with caching/memoisation/etc.

[19:01] <rindolf> raiph: but the equivalent perl 5 program runs much quicker.

[19:02] <raiph> rindolf: it may still be useful to you and #perl6 to profile what you already have even if the conclusion based on the profile may be to try a different algo

[19:03] *** Erendis42d left
[19:04] <rindolf> raiph: OK. I'm profiling it now.

[19:05] <raiph> rindolf: i think you'll have to change the 4 on line 24 to 2 or perhaps 3

[19:07] *** yqt joined
[19:10] *** Peter_R left
[19:10] <rindolf> raiph: http://www.shlomifish.org/Files/files/text/profile-1430939175.55753.html - this is the profile report (with 4 in line 24).

[19:10] <timotimo> raiph: that's not it

[19:10] <timotimo> raiph: what's important for the size of the resulting file is the structure of the call tree

[19:10] <timotimo> and also, MoarVM got a thousand times more efficient at writing out the profiler results recently

[19:10] <raiph> timotimo: ah, thanks

[19:11] <timotimo> line 9724 ... that's most probably one of the reify's

[19:12] <timotimo> that's the number one by exclusive time

[19:12] *** chenryn joined
[19:12] <timotimo> 25% time spent in GC and 46% frames jit compiled, that's pretty bad

[19:13] <rindolf> OK, turns out I can get rid of keeping track of $total_num since it's equal to 1 at the end.

[19:14] *** Erendis42d joined
[19:14] <Erendis42d> .

[19:15] *** spider-mario joined
[19:16] *** chenryn left
[19:18] <dalek> perl6-examples: 212eb22 | (Shlomi Fish)++ | categories/euler/prob151-shlomif.p6:

[19:18] <dalek> perl6-examples: Optimisation. Get rid of $total_num .

[19:18] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/212eb22356

[19:18] *** Isp-sec left
[19:18] *** telex left
[19:18] *** tadzik left
[19:18] *** ggoebel left
[19:18] *** silug left
[19:18] *** b2gills left
[19:18] *** pyrimidine left
[19:18] *** rhr left
[19:18] *** kbenson left
[19:18] *** maddingue left
[19:18] *** yakudza left
[19:18] *** simcop2387 left
[19:18] *** raydiak left
[19:18] *** StavroMueller left
[19:18] *** betterworld left
[19:18] *** dylanwh left
[19:18] *** dg left
[19:18] *** cxreg left
[19:18] *** diegok left
[19:18] *** tony-o left
[19:18] *** gfldex left
[19:18] *** tinyblak left
[19:18] *** colomon left
[19:18] *** darutoko left
[19:18] *** itz left
[19:18] *** xinming_ left
[19:18] *** Possum left
[19:18] *** b^_^d left
[19:18] *** BooK_ left
[19:18] *** torbjorn left
[19:18] *** ponbiki left
[19:18] *** agentzh left
[19:18] *** RabidGravy left
[19:18] *** eternaleye left
[19:18] *** |Tux| left
[19:18] *** Guest90792 left
[19:18] *** masak left
[19:18] *** nwc10 left
[19:18] *** SHODAN left
[19:18] *** psch left
[19:18] *** MilkmanDan left
[19:18] *** anocelot_ left
[19:18] *** Celelibi left
[19:18] *** gargamel_ left
[19:18] *** mattp left
[19:18] *** yeltzooo9 left
[19:18] *** lestrrat left
[19:18] *** ashleydev left
[19:18] *** apejens left
[19:18] *** diana_olhovik_ left
[19:18] *** TimToady left
[19:18] *** pierrot left
[19:18] *** hernan left
[19:18] *** ilbot3 left
[19:18] *** yqt left
[19:18] *** ycaymanbo left
[19:18] *** _mg_ left
[19:18] *** domidumont left
[19:18] *** broquaint left
[19:18] *** xiaomiao left
[19:18] *** Gothmog_ left
[19:18] *** eiro left
[19:18] *** spider-mario left
[19:18] *** pochi left
[19:18] *** thou left
[19:18] *** Khisanth left
[19:18] *** dsm left
[19:18] *** bayprogrammer left
[19:18] *** Spot__ left
[19:18] *** cosimo left
[19:18] *** krakan_ left
[19:18] *** hobbs left
[19:18] *** integral left
[19:18] *** japhb left
[19:18] *** dalek left
[19:18] *** synbot6 left
[19:18] *** [Tux] left
[19:18] *** smi1er left
[19:18] *** felher left
[19:18] *** nine left
[19:18] *** ugexe left
[19:18] *** mephinet left
[19:18] *** yogan left
[19:18] *** retupmoca left
[19:18] *** skarn left
[19:18] *** stux|RC left
[19:18] *** BinGOs left
[19:18] *** ilbelkyr left
[19:18] *** nebuchadnezzar left
[19:18] *** hoelzro left
[19:18] *** shmibs left
[19:18] *** pnu left
[19:18] *** raiph left
[19:18] *** zostay left
[19:18] *** Sqirrel left
[19:18] *** sue_ left
[19:18] *** Guest96 left
[19:18] *** haroldwu left
[19:18] *** Timbus_ left
[19:18] *** rivarun left
[19:18] *** sunnavy left
[19:18] *** kst left
[19:18] *** btyler left
[19:18] *** sergot_ left
[19:18] *** atta left
[19:18] *** arnsholt left
[19:18] *** sftp left
[19:18] *** charsbar__ left
[19:18] *** DrForr left
[19:18] *** bjz left
[19:18] *** jdv79 left
[19:18] *** jepeway left
[19:18] *** mls left
[19:18] *** vike left
[19:18] *** Psyche^ left
[19:18] *** Alina-malina left
[19:18] *** PZt left
[19:18] *** labster left
[19:18] *** mtj__ left
[19:18] *** jercos left
[19:18] *** jnthn left
[19:18] *** oetiker left
[19:18] *** cbk1090 left
[19:18] *** rararara left
[19:18] *** bartolin left
[19:18] *** geekosaur left
[19:18] *** ruoso left
[19:18] *** mathw left
[19:18] *** robinsmidsrod left
[19:18] *** timotimo left
[19:18] *** [ptc] left
[19:18] *** JimmyZ left
[19:18] *** kd` left
[19:18] *** preyalone left
[19:18] *** ggherdov left
[19:18] *** xxx left
[19:18] *** ingy left
[19:18] *** fernando___ left
[19:18] *** FROGGS left
[19:18] *** xfix left
[19:18] *** uncleyear left
[19:18] *** [particle] left
[19:18] *** dustinm` left
[19:18] *** coffee` left
[19:18] *** salva left
[19:18] *** Bucciarati left
[19:18] *** mst left
[19:18] *** revdiablo left
[19:18] *** zoosha_ left
[19:18] *** muraiki left
[19:18] *** ShimmerFairy left
[19:18] *** Foxcool left
[19:18] *** ir2ivps4 left
[19:18] *** PerlJam left
[19:18] *** JoaquinFerrero left
[19:18] *** leedo_ left
[19:18] *** bobkare left
[19:18] *** huf left
[19:18] *** sivoais left
[19:18] *** pRiVi_ left
[19:18] *** f3ew left
[19:18] *** rudi_s left
[19:18] *** _sri_ left
[19:18] *** kshannon left
[19:18] *** sjn left
[19:18] *** rmgk left
[19:18] *** krunen left
[19:18] *** Pauekn left
[19:18] *** Grrrr left
[19:18] *** egrep left
[19:18] *** erdic left
[19:18] *** petercommand left
[19:18] *** moritz left
[19:18] *** smash left
[19:18] *** pmichaud left
[19:18] *** tictac left
[19:18] *** Erendis42d left
[19:18] *** Vlavv left
[19:18] *** [Sno] left
[19:18] *** vendethiel left
[19:18] *** kaare_ left
[19:18] *** skids left
[19:18] *** virtualsue left
[19:18] *** ribasushi_ left
[19:18] *** camelia left
[19:18] *** cdc left
[19:18] *** wtw left
[19:18] *** yoleaux left
[19:18] *** prammer left
[19:18] *** hahainternet left
[19:18] *** vytas left
[19:18] *** DarthGandalf left
[19:18] *** Mouq left
[19:18] *** jantore left
[19:18] *** awwaiid left
[19:18] *** Exodist left
[19:18] *** [Coke] left
[19:18] *** Util left
[19:18] *** risou left
[19:18] *** tinita left
[19:18] *** jschulz left
[19:18] *** burnersk left
[19:18] *** danstoner left
[19:18] *** woshty left
[19:18] *** Humbedooh left
[19:18] *** osfameron left
[19:18] *** profan left
[19:18] *** literal left
[19:18] *** avar left
[19:18] *** jfried left
[19:18] *** rindolf left
[19:18] *** noganex left
[19:18] *** isacloud left
[19:18] *** flussence left
[19:18] *** nbrown04 left
[19:18] *** avuserow1 left
[19:18] *** Juerd left
[19:18] *** clkao left
[19:20] *** spider-mario joined
[19:20] *** Erendis42d joined
[19:20] *** yqt joined
[19:20] *** raiph joined
[19:20] *** agentzh joined
[19:20] *** ponbiki joined
[19:20] *** BooK_ joined
[19:20] *** b^_^d joined
[19:20] *** torbjorn joined
[19:20] *** Possum joined
[19:20] *** xinming_ joined
[19:20] *** itz joined
[19:20] *** darutoko joined
[19:20] *** colomon joined
[19:20] *** tinyblak joined
[19:20] *** gfldex joined
[19:20] *** _mg_ joined
[19:20] *** Isp-sec joined
[19:20] *** Vlavv joined
[19:20] *** [Sno] joined
[19:20] *** domidumont joined
[19:20] *** pochi joined
[19:20] *** rindolf joined
[19:20] *** FROGGS joined
[19:20] *** telex joined
[19:20] *** xfix joined
[19:20] *** diana_olhovik_ joined
[19:20] *** vendethiel joined
[19:20] *** tadzik joined
[19:20] *** uncleyear joined
[19:20] *** muraiki joined
[19:20] *** sjn joined
[19:20] *** thou joined
[19:20] *** zostay joined
[19:20] *** kaare_ joined
[19:20] *** skids joined
[19:20] *** rararara joined
[19:20] *** Sqirrel joined
[19:20] *** RabidGravy joined
[19:20] *** broquaint joined
[19:20] *** bjz joined
[19:20] *** ShimmerFairy joined
[19:20] *** virtualsue joined
[19:20] *** [particle] joined
[19:20] *** Foxcool joined
[19:20] *** jdv79 joined
[19:20] *** ycaymanbo joined
[19:20] *** dustinm` joined
[19:20] *** bartolin joined
[19:20] *** jepeway joined
[19:20] *** rmgk joined
[19:20] *** noganex joined
[19:20] *** TimToady joined
[19:20] *** pierrot joined
[19:20] *** hernan joined
[19:20] *** isacloud joined
[19:20] *** ribasushi_ joined
[19:20] *** mls joined
[19:20] *** hobbs joined
[19:20] *** integral joined
[19:20] *** japhb joined
[19:20] *** camelia joined
[19:20] *** cdc joined
[19:20] *** ggoebel joined
[19:20] *** sue_ joined
[19:20] *** dalek joined
[19:20] *** wtw joined
[19:20] *** synbot6 joined
[19:20] *** xiaomiao joined
[19:20] *** vike joined
[19:20] *** silug joined
[19:20] *** Guest96 joined
[19:20] *** yoleaux joined
[19:20] *** eternaleye joined
[19:20] *** coffee` joined
[19:20] *** krunen joined
[19:20] *** kd` joined
[19:20] *** |Tux| joined
[19:20] *** Pauekn joined
[19:20] *** [Tux] joined
[19:20] *** Grrrr joined
[19:20] *** Psyche^ joined
[19:20] *** egrep joined
[19:20] *** ir2ivps4 joined
[19:20] *** Gothmog_ joined
[19:20] *** Alina-malina joined
[19:20] *** ilbot3 joined
[19:20] *** erdic joined
[19:20] *** smi1er joined
[19:20] *** prammer joined
[19:20] *** Guest90792 joined
[19:20] *** PZt joined
[19:20] *** labster joined
[19:20] *** tepper.freenode.net sets mode: +vvv camelia dalek yoleaux

[19:20] *** Khisanth joined
[19:20] *** haroldwu joined
[19:20] *** dsm joined
[19:20] *** bayprogrammer joined
[19:20] *** felher joined
[19:20] *** mtj__ joined
[19:20] *** Timbus_ joined
[19:20] *** nine joined
[19:20] *** hahainternet joined
[19:20] *** ugexe joined
[19:20] *** geekosaur joined
[19:20] *** mephinet joined
[19:20] *** rivarun joined
[19:20] *** sunnavy joined
[19:20] *** petercommand joined
[19:20] *** salva joined
[19:20] *** kst joined
[19:20] *** b2gills joined
[19:20] *** masak joined
[19:20] *** Bucciarati joined
[19:20] *** moritz joined
[19:20] *** jercos joined
[19:20] *** vytas joined
[19:20] *** smash joined
[19:20] *** nwc10 joined
[19:20] *** yogan joined
[19:20] *** SHODAN joined
[19:20] *** pmichaud joined
[19:20] *** psch joined
[19:20] *** flussence joined
[19:20] *** pyrimidine joined
[19:20] *** rhr joined
[19:20] *** Spot__ joined
[19:20] *** jnthn joined
[19:20] *** btyler joined
[19:20] *** oetiker joined
[19:20] *** cbk1090 joined
[19:20] *** DarthGandalf joined
[19:20] *** PerlJam joined
[19:20] *** eiro joined
[19:20] *** retupmoca joined
[19:20] *** avuserow1 joined
[19:20] *** nbrown04 joined
[19:20] *** Mouq joined
[19:20] *** ruoso joined
[19:20] *** tictac joined
[19:20] *** skarn joined
[19:20] *** MilkmanDan joined
[19:20] *** cosimo joined
[19:20] *** JoaquinFerrero joined
[19:20] *** mathw joined
[19:20] *** anocelot_ joined
[19:20] *** krakan_ joined
[19:20] *** robinsmidsrod joined
[19:20] *** Juerd joined
[19:20] *** mst joined
[19:20] *** sergot_ joined
[19:20] *** leedo_ joined
[19:20] *** atta joined
[19:20] *** clkao joined
[19:20] *** stux|RC joined
[19:20] *** arnsholt joined
[19:20] *** jantore joined
[19:20] *** BinGOs joined
[19:20] *** sftp joined
[19:20] *** timotimo joined
[19:20] *** bobkare joined
[19:20] *** revdiablo joined
[19:20] *** kbenson joined
[19:20] *** [ptc] joined
[19:20] *** ilbelkyr joined
[19:20] *** Celelibi joined
[19:20] *** shmibs joined
[19:20] *** nebuchadnezzar joined
[19:20] *** charsbar__ joined
[19:20] *** zoosha_ joined
[19:20] *** huf joined
[19:20] *** sivoais joined
[19:20] *** gargamel_ joined
[19:20] *** JimmyZ joined
[19:20] *** hoelzro joined
[19:20] *** preyalone joined
[19:20] *** DrForr joined
[19:20] *** maddingue joined
[19:20] *** yakudza joined
[19:20] *** awwaiid joined
[19:20] *** simcop2387 joined
[19:20] *** pRiVi_ joined
[19:20] *** Exodist joined
[19:20] *** pnu joined
[19:20] *** apejens joined
[19:20] *** ashleydev joined
[19:20] *** lestrrat joined
[19:20] *** yeltzooo9 joined
[19:20] *** mattp joined
[19:20] *** tony-o joined
[19:20] *** diegok joined
[19:20] *** cxreg joined
[19:20] *** dg joined
[19:20] *** dylanwh joined
[19:20] *** betterworld joined
[19:20] *** StavroMueller joined
[19:20] *** raydiak joined
[19:20] *** ggherdov joined
[19:20] *** xxx joined
[19:20] *** ingy joined
[19:20] *** f3ew joined
[19:20] *** rudi_s joined
[19:20] *** [Coke] joined
[19:20] *** Util joined
[19:20] *** risou joined
[19:20] *** tinita joined
[19:20] *** jschulz joined
[19:20] *** burnersk joined
[19:20] *** danstoner joined
[19:20] *** _sri_ joined
[19:20] *** fernando___ joined
[19:20] *** woshty joined
[19:20] *** Humbedooh joined
[19:20] *** kshannon joined
[19:20] *** osfameron joined
[19:20] *** literal joined
[19:20] *** profan joined
[19:20] *** avar joined
[19:20] *** jfried joined
[19:22] *** lizmat joined
[19:25] <timotimo> the gc times are blowing up pretty crazy

[19:27] <El_Che> rindolf: the "masak - “How Perl 6 could kill us all!” link on http://perl-begin.org/learn/perl6/ is broken: clicking on it sends you to http://use.perl.org/use.perl.org/~masak/journal/39912

[19:27] *** espadrine_ joined
[19:27] *** rindolf left
[19:28] *** rindolf joined
[19:28] <El_Che> rindolf: the "masak - “How Perl 6 could kill us all!” link on http://perl-begin.org/learn/perl6/ is broken: clicking on it sends you to http://use.perl.org/use.perl.org/~masak/journal/39912

[19:28] <moritz> updated link is http://strangelyconsistent.org/blog/how-perl-6-could-kill-us-all

[19:29] <rindolf> El_Che: yes, use.perl.org's URLs got broken.

[19:29] <masak> moritz++ beat me to it.

[19:30] <moritz> .oO( "have you stopped beating masak? ... to it, I mean" )

[19:30] <El_Che> you guys are faster than the perl6 runtime

[19:30] * El_Che ducks :)

[19:30] *** Peter_R joined
[19:31] *** domidumont left
[19:31] * masak decides to laugh at that, but only after a certain delay

[19:31] <El_Che> lol

[19:32] <dalek> rakudo/nom: 3434745 | FROGGS++ | src/core/Match.pm:

[19:32] <dalek> rakudo/nom: strip undefines from Match.caps we cannot sort by .from

[19:32] <dalek> rakudo/nom: 

[19:32] <dalek> rakudo/nom: This fixes a blowup for: say "foo" ~~ m/ $42=\w /

[19:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/34347456ca

[19:32] * jnthn notes that it's significantly faster than it used to be. :)

[19:33] * lizmat waves from a lounge

[19:34] <rindolf> El_Che, moritz, masak: Thanks! I updated it now.

[19:34] *** tinyblak left
[19:35] <thou> moritz: *minor* typo on your site: link at bottom of http://perlgeek.de/blog-en/perl-6/object-construction-and-initialization.html should go to http://doc.perl6.org/language/objects#Object_Construction , not ...#Object+Construction

[19:35] <TimToady> m: X::m: my X $x;

[19:35] <camelia> rakudo-moar d7dbe1: OUTPUT«5===SORRY!5=== Error while compiling /tmp/NKU0Pm3n3P␤Two terms in a row␤at /tmp/NKU0Pm3n3P:1␤------> 3X::7⏏5m: my X $x;␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤…»

[19:36] <jnthn> .u U

[19:36] <yoleaux> U+0055 LATIN CAPITAL LETTER U [Lu] (U)

[19:36] <jnthn> what on earth :)

[19:36] <TimToady> m: my X $x;

[19:36] <camelia> rakudo-moar d7dbe1: OUTPUT«5===SORRY!5=== Error while compiling /tmp/0w2ZUzYQWP␤Package X is insufficiently type-like to qualify a variable␤at /tmp/0w2ZUzYQWP:1␤------> 3my X $x7⏏5;␤    expecting any of:␤        constraint␤»

[19:36] <jnthn> works for me :)

[19:37] <TimToady> conference WiFi lag... :/

[19:37] <timotimo> rindolf: how deep does the recursion go?

[19:37] <timotimo> oh my god.

[19:37] *** mohij joined
[19:37] *** Peter_R left
[19:37] <TimToady> m: module XX {...}; sub foo (XX $p) {...}

[19:37] <camelia> rakudo-moar d7dbe1: OUTPUT«5===SORRY!5=== Error while compiling /tmp/OjioQszREf␤Module XX is insufficiently type-like to qualify a parameter␤at /tmp/OjioQszREf:1␤------> 3module XX {...}; sub foo (XX7⏏5 $p) {...}␤»

[19:37] <Erendis42d> .u ☕

[19:37] <yoleaux> U+2615 HOT BEVERAGE [So] (☕)

[19:37] *** _mg_ left
[19:37] <Erendis42d> :D

[19:38] <Erendis42d> ¦*

[19:38] <timotimo> http://t.h8.lv/sinkgimmereifyrec.png

[19:38] <timotimo> SERIOUSLY

[19:39] *** espadrine joined
[19:39] *** espadrine_ left
[19:39] <jnthn> timotimo: much wow :)

[19:39] <jnthn> timotimo: But yeah, the GC has to walk all the stack frames, so if you go that deep... :)

[19:39] <timotimo> yes, oh god

[19:40] <timotimo> the number of gen2 roots ...

[19:40] <timotimo> starts out innocent enough

[19:40] <timotimo> takes quite a while to switch over to the gc tab from the call graph tab

[19:40] <timotimo> 22512 gen2 roots ... 96326 gen2 roots

[19:41] <rindolf> timotimo: it goes up to 17.

[19:41] <lizmat> PerlJam was asking me the other day why Mu.clone did not have a multi for the no param, and the any named param case

[19:41] <lizmat> well, we can't with the current way MMD works

[19:42] <lizmat> m: multi a() { ... }; multi a(*%twiddles) { ... }; a

[19:42] <camelia> rakudo-moar d7dbe1: OUTPUT«Ambiguous call to 'a'; these signatures all match:␤:()␤:(*%twiddles)␤  in sub a at /tmp/WlMZY6I7MX:1␤  in block <unit> at /tmp/WlMZY6I7MX:1␤␤»

[19:42] <timotimo> rindolf: with one layer of gimme, reify and sink each ...

[19:42] <rindolf> timotimo: ah.

[19:42] <lizmat> m: multi a() { ... }; multi a(*%twiddles!) { ... }; a   # adding an exclamation mark doesn't work

[19:42] <camelia> rakudo-moar d7dbe1: OUTPUT«5===SORRY!5=== Error while compiling /tmp/ezfPnBLh_u␤Missing block␤at /tmp/ezfPnBLh_u:1␤------> 3multi a() { ... }; multi a(*%twiddles7⏏5!) { ... }; a   # adding an exclamation ␤»

[19:42] <rindolf> timotimo: don't know what those are?

[19:43] <lizmat> would be nice if that could somehow be made to work

[19:43] <jnthn> lizmat: But that case isn't relevant for a method, which Mu.clone is. 

[19:43] <jnthn> lizmat: And a method has an implicit *%_

[19:43] <jnthn> lizmat: You can't put ! on a slurpy...

[19:44] <jnthn> Even if we did decide to make the case you mentioned work for subs, it'd still not help.

[19:45] <jnthn> And if we do decide to make it work then we're in a real hole.

[19:45] <jnthn> 'cus every method has a *%_

[19:45] *** rindolf left
[19:45] *** rindolf joined
[19:45] <dalek> perl6-examples: f85b49d | (Shlomi Fish)++ | categories/euler/prob151-shlomif.p6:

[19:45] <dalek> perl6-examples: Cleanups/optimisations.

[19:45] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/f85b49d6d4

[19:46] <lizmat> m: class A { multi method a() { ... }; multi method a(*%twiddles) { ... } }; A.a   # as a method

[19:46] <camelia> rakudo-moar d7dbe1: OUTPUT«Ambiguous call to 'a'; these signatures all match:␤:(A $: *%_)␤:(A $: *%twiddles)␤  in block <unit> at /tmp/r6eNuCCgu1:1␤␤»

[19:46] <jnthn> Right, but that's correct

[19:46] <lizmat> perhaps we could make () on a method mean, no *%_  ?

[19:47] <lizmat> as opposed to the absence of () 

[19:47] <lizmat> ?

[19:47] <jnthn> That'd be a really weird discontinuity.

[19:47] <lizmat> anyways, my main point was really that my answer to PerlJam was wrong

[19:47] <lizmat> and this was the answer  :-)

[19:47] <jnthn> Aha, yes :)

[19:48] *** Peter_R joined
[19:49] <lizmat> I guess my point *also* is that for an experienced Perl6er like PerlJam, this wasn't obvious either  :-)

[19:49] <lizmat> so it is a bit of a WAT

[19:50] *** espadrine left
[19:50] *** espadrine_ joined
[19:50] <vendethiel> lizmat: I think in this case, it should match 'em all indeed

[19:51] <vendethiel> m: class A { multi method a() { ... }; multi method a(*%twiddles) { ... } }; A.a(:x) # you could argue for this one, however!

[19:51] <camelia> rakudo-moar 343474: OUTPUT«Ambiguous call to 'a'; these signatures all match:␤:(A $: *%_)␤:(A $: *%twiddles)␤  in block <unit> at /tmp/OwmP7h9VFb:1␤␤»

[19:51] <lizmat> vendethiel: no, because the () sig means (*%_)

[19:51] <vendethiel> lizmat: I know it does. I just mean -- the argumentless call has to be ambiguous with a splat one :)

[19:51] <FROGGS> m: my $foo; "abcd" ~~ m/a $foo=(..) d/ # inneresting

[19:51] <camelia> rakudo-moar 343474: OUTPUT«===SORRY!===␤QAST::Block with cuid cuid_1_1430941917.71998 has not appeared␤»

[19:52] <vendethiel> m: multi foo() { 1 }; multi foo(*@x) { say @x.elems }; say foo; # this should fail as well for the same reason?

[19:52] <camelia> rakudo-moar 343474: OUTPUT«1␤»

[19:52] <vendethiel> okay, then I agree :). The behavior is a bit weird, though.

[19:52] <vendethiel> I guess "empty" is considered more specific

[19:53] <jnthn> Named arguments don't really play in multi-dispatch.

[19:53] *** Peter_R left
[19:53] <jnthn> Only as constraints.

[19:53] *** lizmat_ joined
[19:53] <jnthn> And only then if they're required.

[19:54] *** Peter_R joined
[19:55] <lizmat_> FROGGS: I would have done that as:

[19:55] <lizmat_> +            } elsif $p.value.DEFINITE {

[19:55] <lizmat_> +                @caps.push: $p;

[19:55] <lizmat_> so we don't waste a branch on that

[19:56] <FROGGS> ahh, yeah

[19:56] <FROGGS> that's probably better

[19:57] *** lizmat left
[19:57] *** lizmat_ is now known as lizmat

[19:58] <lizmat> .oO( bit flaky hotel wifi )

[19:58] <vendethiel> m: multi foo() { 1 }; multi foo(*%x) { say %x.elems }; say foo; # this should fail as well for the same reason?

[19:58] <camelia> rakudo-moar 343474: OUTPUT«Ambiguous call to 'foo'; these signatures all match:␤:()␤:(*%x)␤  in sub foo at /tmp/k7Jz7WPoI5:1␤  in block <unit> at /tmp/k7Jz7WPoI5:1␤␤»

[19:58] <vendethiel> lizmat: see :P

[20:01] *** lizmat_ joined
[20:03] *** Peter_R left
[20:05] *** rurban joined
[20:05] *** lizmat left
[20:07] *** lizmat_ is now known as lizmat

[20:07] <dalek> rakudo/nom: 8dcef45 | FROGGS++ | t/spectest.data:

[20:07] <dalek> rakudo/nom: also run S05-capture/alias.t

[20:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8dcef4543a

[20:08] <dalek> roast: 7e8dc19 | FROGGS++ | S05-capture/alias.t:

[20:08] <dalek> roast: make capture aliasing tests valid and add more tests

[20:08] <dalek> roast: review: https://github.com/perl6/roast/commit/7e8dc19d9f

[20:08] <masak> m: module Flaky::Hotel {}; my bit $Flaky::Hotel::wifi = 42

[20:08] <camelia> rakudo-moar 343474: OUTPUT«===SORRY!===␤Invalid int size for local/lexical␤»

[20:09] <dalek> rakudo/nom: 4752e70 | FROGGS++ | src/core/Match.pm:

[20:09] <dalek> rakudo/nom: optimize latest patch to Match.caps, lizmat++

[20:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4752e701fd

[20:10] <FROGGS> m: say "foo" ~~ m/$42=\w/

[20:10] <camelia> rakudo-moar 343474: OUTPUT«｢f｣␤ 42 => ｢f｣␤»

[20:10] <FROGGS> gnight #perl6

[20:10] <[ptc]> gn8 FROGGS 

[20:10] <timotimo> gnite FROGGS and family :)

[20:10] <FROGGS> :o)

[20:10] *** FROGGS left
[20:11] *** Sqirrel left
[20:14] *** _dolmen_ joined
[20:15] *** rindolf left
[20:17] *** virtualsue_ joined
[20:18] *** colomon left
[20:19] *** virtualsue left
[20:19] *** virtualsue_ is now known as virtualsue

[20:20] <dalek> roast: 62f8f60 | usev6++ | S02-types/array-shapes.t:

[20:20] <dalek> roast: Use unique ticket number for 'array shapes NYI'

[20:20] <dalek> roast: review: https://github.com/perl6/roast/commit/62f8f60002

[20:20] <dalek> roast: 25f28b6 | usev6++ | S02-types/array-shapes.t:

[20:20] <dalek> roast: Remove superfluous curly braces

[20:20] <dalek> roast: review: https://github.com/perl6/roast/commit/25f28b6928

[20:20] <dalek> roast: 2945c76 | usev6++ | S02-types/array-shapes.t:

[20:20] <dalek> roast: Native arrays are implemented

[20:20] <dalek> roast: review: https://github.com/perl6/roast/commit/2945c76082

[20:22] *** kurahaupo1 joined
[20:25] <dalek> rakudo/nom: 6640006 | lizmat++ | src/core/Signature.pm:

[20:25] <dalek> rakudo/nom: Show an empty sig for what it really is

[20:25] <dalek> rakudo/nom: 

[20:25] <dalek> rakudo/nom: Make this MMD dispatch error a bit clearer, I hope:

[20:25] <dalek> rakudo/nom: $ perl6 -e 'multi a() { ... }; multi a(*%twiddles) { ... }; a'

[20:25] <dalek> rakudo/nom: Ambiguous call to 'a'; these signatures all match:

[20:25] <dalek> rakudo/nom: :(*%_)

[20:25] <dalek> rakudo/nom: :(*%twiddles)

[20:25] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6640006d41

[20:26] <masak> m: role Multiple {}; role prefix {}; role constraints {}; my Multiple prefix constraints $not-yet-implemented = "Sorry."

[20:26] <camelia> rakudo-moar 8dcef4: OUTPUT«5===SORRY!5=== Error while compiling /tmp/aFi6iDJRXv␤Multiple prefix constraints not yet implemented. Sorry. ␤at /tmp/aFi6iDJRXv:1␤------> 3aints {}; my Multiple prefix constraints7⏏5 $not-yet-implemented = "Sorry."␤»

[20:26] * masak is in a somewhat silly mood tonight, it seems

[20:26] <dalek> mu: d935289 | usev6++ | misc/rt.perl.org/cleanup_nyc_hackathon_tickets.txt:

[20:26] <dalek> mu: Some more resolved or merged tickets

[20:26] <dalek> mu: review: https://github.com/perl6/mu/commit/d9352895db

[20:26] <lizmat> masak jnthn : are you ok with the Signature.perl tweak ?

[20:27] <jnthn> lizmat: Uh...

[20:28] <jnthn> lizmat: but it's wrong?

[20:28] <jnthn> Subs don't have an implicit *%_

[20:28] <jnthn> Only mehtods

[20:28] <jnthn> *methods

[20:28] <jnthn> The ambiguity there is 'cus the multi-dispatcher doesn't consider one narrower than the other.

[20:28] <lizmat> then I don't understand why the MMD is ambiguous

[20:28] <lizmat> ah... 

[20:29] <lizmat> because named params don't really play in MMD

[20:29] <lizmat> ok

[20:29] <lizmat> reverting

[20:29] <jnthn> Yeah

[20:29] *** rurban left
[20:29] <jnthn> And I'm afraid that as far as I can tell, if I fix it, we will get into trouble with methods.

[20:29] <[ptc]> m: my %blah = "a" => 1, "b" => 2, "c" => 3; for %blah.kv.sort(:by<key>) -> $key, $value { say "$key: $value" }

[20:29] <camelia> rakudo-moar 8dcef4: OUTPUT«1: 2␤3: a␤b: c␤»

[20:29] <jnthn> Well, multi-methods

[20:30] <jnthn> [ptc]: By the time you do .kv you're already sorting a flat list of values

[20:30] <dalek> rakudo/nom: 51ccca9 | lizmat++ | src/core/Signature.pm:

[20:30] <dalek> rakudo/nom: It's ambiguous because named params don't matter

[20:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/51ccca96e1

[20:30] <[ptc]> jnthn: ok, but why isn't it sorted?

[20:31] <timotimo> right, you want .pairs.sort(*.key)

[20:31] <timotimo> um

[20:31] <timotimo> it is sorted

[20:31] <timotimo> 1, 2, 3, a, b, c

[20:31] <jnthn> It is sorted.

[20:31] <timotimo> m: my %blah = "a" => 1, "b" => 2, "c" => 3; say %blah.kv.perl

[20:31] <camelia> rakudo-moar 8dcef4: OUTPUT«("a", 1, "c", 3, "b", 2)␤»

[20:31] <[ptc]> m: my %blah = "a" => 1, "b" => 2, "c" => 3; for %blah.kv -> $key, $value { say "$key: $value" }

[20:31] <camelia> rakudo-moar 8dcef4: OUTPUT«a: 1␤c: 3␤b: 2␤»

[20:31] <[ptc]> the 'c' key comes out second

[20:31] <[ptc]> that's what I mean by it not being sorted

[20:32] <timotimo> oh

[20:32] <jnthn> That's how hashes work.

[20:32] <timotimo> we mean 1: 2␤3: a␤b: c

[20:32] <[ptc]> has something changed recently with how hashes and arrays work that I've missed?

[20:32] <lizmat> [ptc]: just as in P5  (but this happened only very recently)

[20:32] <masak> [ptc]: no. it was always like that.

[20:32] <[ptc]> some of the examples tests have stopped working and I'm trying to work out why

[20:32] <jnthn> MoarVM used to maintain insertion order

[20:32] <jnthn> JVM never has

[20:32] <masak> [ptc]: hashes give no ordering guarantees.

[20:32] <jnthn> MoarVM no longer does

[20:32] <[ptc]> aha, that'd it be it

[20:32] <jnthn> It was an accident that Moar did rather than intent.

[20:33] <[ptc]> yeah, hashes don't give ordering guarantees, I know that from P5

[20:33] <jnthn> Or rather, we choes a hash library that happened to do it that way.

[20:33] <jnthn> And only recenlty got around to ripping it out.

[20:33] <jnthn> *recently

[20:33] <jnthn> (Which saves a good bit of memory :))

[20:33] *** colomon joined
[20:33] <[ptc]> however, jnthn's comment about moarvm's behaviour explained why it used to work the way it did

[20:34] <[ptc]> that's good it's changed, that way my expectations about hashes are consistent across languages :-)

[20:34] <masak> which shows how dangerous it is to silently give people hash ordering :)

[20:34] <[Coke]> bartolin++ # rt cleanup.

[20:34] <[ptc]> yup :-)

[20:34] <[ptc]> timotimo: the tip with .pairs is a good one, I'll try it out

[20:34] <masak> JavaScript hashes^Wobjects also guarantee insertion order. and that's also basically because early implementations did, so they're forced to preserve that behavior.

[20:35] <[ptc]> also, didn't the repl support readline up until recently, or am I just more crazy than usual?

[20:35] <[ptc]> e.g., I'm sure I used to be able to edit my input and go to previously executed lines

[20:36] <jnthn> [ptc]: afaik it still *can* but that support is now implemented in a Perl 6 module

[20:36] <[ptc]> I updated my moarvm/nqp/rakudo stack today and am tripping over some stuff

[20:36] <[ptc]> jnthn: do you mean in linenoise?

[20:37] <jnthn> [ptc]: No, I mean the binding to linenoise (or maybe readline? dunno) that's now used by the REPL is a Perl 6 module using nativecall, rather than having to put that stuff down at the VM level.

[20:38] <[ptc]> m: my %blah = "a" => 1, "b" => 2, "c" => 3; for %blah.pairs.sort(*.key) -> $key, $value { say "$key: $value" }

[20:38] <camelia> rakudo-moar 8dcef4: OUTPUT«a    1: b    2␤Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at /tmp/dwYoj0rfs8:1␤␤»

[20:38] *** larion joined
[20:39] <[ptc]> jnthn: ah, ok

[20:39] <[ptc]> I tried looking for a readline-like module on modules.p6.org, but nothing relevant (other than linenoise) showed up

[20:40] <jnthn> Ah, maybe that's the one to use then

[20:40] <[ptc]> iirc hoelzro was working on that

[20:40] <jnthn> m: my %blah = "a" => 1, "b" => 2, "c" => 3; for %blah.sort(*.key)>>.kv -> $key, $value { say "$key: $value" }

[20:40] <camelia> rakudo-moar 8dcef4: OUTPUT«a 1: b 2␤Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at /tmp/zj5sQ7kFE5:1␤␤»

[20:40] <timotimo> [ptc]: in that snippet you put a pair into $key and a pair into $value

[20:40] <jnthn> ah, yeah

[20:40] <jnthn> m: my %blah = "a" => 1, "b" => 2, "c" => 3; for %blah.sort(*.key) -> (:$key, :$value) { say "$key: $value" }

[20:40] <camelia> rakudo-moar 8dcef4: OUTPUT«a: 1␤b: 2␤c: 3␤»

[20:41] <hoelzro> [ptc]: if you install Linenoise via panda, the old functionality (plus tab completion) will appear

[20:41] <hoelzro> however, due to CURLI problems (that may have been resolved? /me hasn't checked), you'll need to install liblinenoise.so by hand

[20:41] <[ptc]> hoelzro: sweet! will try it out in a mo

[20:42] * [ptc] wonders where to put the loop over a sorted hash stuff in the docs

[20:42] <[ptc]> it'd be good to know

[20:42] <b2gills> m: multi a( *% () ) { say 'no twiddles' }; multi a(*%twiddles) { say 'twiddles' }; a; a :b

[20:42] <camelia> rakudo-moar 8dcef4: OUTPUT«no twiddles␤twiddles␤»

[20:43] <[ptc]> timotimo: thanks for the explanation :-)

[20:43] *** Sqirrel joined
[20:44] *** darutoko left
[20:45] <dalek> rakudo/nom: af823c9 | lizmat++ | docs/ChangeLog:

[20:45] <dalek> rakudo/nom: Add some ChangeLog entries

[20:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/af823c90cb

[20:47] <skids> heheh.  There's a normally-python-coding workstudy working on perl5 code right now because that's what I wrote the original in.  Soon as a distro has a usable rakudo I'll have to sew some perl6 seeds.

[20:48] <[ptc]> hoelzro: is there anything else I need to install for linenoise to work?

[20:48] <hoelzro> [ptc]: nope, just the module

[20:48] <[ptc]> hoelzro: I just installed Linenoise via panda, however it's complaining about not being able to find liblinenoise.so

[20:49] <hoelzro> [ptc]: yes, there's an issue with CURLIs that makes liblinenoise.so unfindable

[20:49] <[ptc]> hoelzro: so I just update the LD_LIBRARY_PATH?

[20:49] <hoelzro> you'll have to install it by hand

[20:49] <[ptc]> ok, ta

[20:50] *** brrt joined
[20:51] <b2gills> m: class A { multi method a( *% () ) { ... }; multi method a(*%twiddles) { ... } }; A.a

[20:51] <camelia> rakudo-moar 51ccca: OUTPUT«Unhandled exception: Stub code executed␤   at src/gen/m-CORE.setting:14644  (/home/camelia/rakudo-inst-2/share/perl6/runtime/CORE.setting.moarvm:throw:121)␤ from src/gen/m-CORE.setting:16525  (/home/camelia/rakudo-inst-2/share/perl6/runtime/CORE.settin…»

[20:51] <masak> m: say "thanks".comb[0, 2].join

[20:51] <camelia> rakudo-moar 51ccca: OUTPUT«ta␤»

[20:52] <lizmat> b2gills: intriguing, I wonder why that works ?

[20:52] <jnthn> 'cus sub-signature forces a bind check

[20:52] <lizmat> aha, so from a performance point of view, a bad idea...

[20:52] <skids> sneaky b2gills++

[20:53] <jnthn> Yes, if your goal is optimizaiton it's not what you're looking for

[20:53] <lizmat> yeah... ok

[20:53] <jnthn> Better leave it as it is and hope spesh is smart enough to do away wiht it

[20:53] <jnthn> It already does away with most *%_ related allocations if it finds them unused.

[20:54] *** muraiki left
[20:56] *** Peter_R joined
[20:57] *** hernan left
[20:58] *** hernan joined
[21:00] *** Vlavv left
[21:01] *** chenryn joined
[21:01] *** espadrine_ left
[21:02] *** xfix left
[21:05] <Erendis42d> re

[21:05] *** chenryn left
[21:05] *** lizmat_ joined
[21:07] *** yqt left
[21:09] *** lizmat__ joined
[21:09] *** lizmat left
[21:09] <timotimo> [ptc]: welcome :)

[21:11] *** skids left
[21:11] <timotimo> m: class A { multi method a( *% () ) { say "twiddle-dee-doesn't" }; multi method a(*%twiddles) { say "twiddle-dee-do" } }; A.a

[21:11] <camelia> rakudo-moar 51ccca: OUTPUT«twiddle-dee-doesn't␤»

[21:11] <timotimo> mhm, mhm

[21:11] <timotimo> possibly the ordering

[21:12] *** lizmat_ left
[21:13] *** Vlavv joined
[21:14] *** colomon left
[21:16] * lizmat__ migrates to a horizontal position

[21:16] *** lizmat__ is now known as lizmat

[21:16] <lizmat> good night, #perl6!

[21:16] *** lizmat left
[21:16] *** coffee` left
[21:19] *** yqt joined
[21:21] *** brrt left
[21:22] <masak> timotimo: no, it's the subsig.

[21:22] <TimToady> wow, rakudo actually builds now if I remove () semantics from Nil...doesn't pass all the tests, of course...

[21:22] <masak> m: class A { multi method a( *% ) { say "twiddle-dee-doesn't" }; multi method a(*%twiddles) { say "twiddle-dee-do" } }; A.a

[21:22] <camelia> rakudo-moar af823c: OUTPUT«Ambiguous call to 'a'; these signatures all match:␤:(A $: *%)␤:(A $: *%twiddles)␤  in block <unit> at /tmp/4y6JrhltIa:1␤␤»

[21:22] <masak> timotimo: see? :)

[21:22] <jnthn> TimToady: ooh, yay :)

[21:25] <Erendis42d> o/ o_

[21:25] *** coffee` joined
[21:27] *** thou left
[21:28] <TimToady> only fails 19 test files, which is better than I expected

[21:29] <TimToady> oh wait, only 18, one was a TODO passed :)

[21:29] *** thou joined
[21:29] * TimToady -> next talk &

[21:31] <[Coke]> TimToady++

[21:37] <timotimo> TimToady: good progress \o/

[21:39] <timotimo> if someone wants to have a look, it seems like DIVIDE_NUMBERS allocates 1991776 Scalars in raiph's recursive thingie

[21:39] <timotimo> going to figure out how often that's called right now

[21:39] *** Peter_R left
[21:39] *** colomon joined
[21:40] <timotimo> 995888 times

[21:40] <timotimo> m: say "that's {1991776/995888} scalars per call, on average"

[21:40] <camelia> rakudo-moar af823c: OUTPUT«that's 2 scalars per call, on average␤»

[21:40] <timotimo> hm, not terrible

[21:42] <timotimo> i meant rindolf, not raiph

[21:43] <jercos> When no one was looking, Lex Luthor allocated 40 scalars. That's as many as four tens!

[21:43] <timotimo> what a jerc!

[21:44] <jercos> http://xyl.be/cakes.jpg

[21:45] <jercos> timotimo: congratulations, you're "jerk" comparison user number 1827346. You can frame that for your kids to look at in awe once we're up into the billions.

[21:45] <jnthn> 'night, #perl6

[21:46] *** tinyblak joined
[21:46] <masak> 'night, #perl6

[21:46] <labster> Perl 6.  It will be Christmas, and then there will be cake.

[21:47] <timotimo> \o/

[21:47] <timotimo> thank you for the source on that meme

[21:48] <timotimo> i wasn't aware of it

[21:48] *** kurahaupo1 left
[21:48] <timotimo> and i hope i didn't offend with the "jerc" thing :S

[21:48] <timotimo> maybe we'll invent a trigonometric function "jer", so that you can be jer-cos?

[21:49] <labster> .oO ( jer-arc-tan )

[21:49] *** grondilu joined
[21:49] <timotimo> jer a cos, harry!

[21:50] *** Peter_R joined
[21:56] <jercos> no'mnot, I'm just 'arry!

[21:56] <jercos> I'm rather difficult to offend, but I find the whole "jerc" thing grates after a few million times :p

[21:57] <jercos> more like... I'm disappointed in a lack of creativity in that area ;)

[21:57] <timotimo> i think i understand

[21:59] *** andreoss joined
[21:59] *** Erendis42d left
[22:02] *** grondilu left
[22:07] *** spider-mario left
[22:07] *** Zoffix joined
[22:08] *** Isp-sec left
[22:09] *** spider-mario joined
[22:12] *** Erendis42d joined
[22:12] *** virtualsue left
[22:17] *** Vlavv left
[22:20] *** raiph left
[22:27] *** cognominal joined
[22:27] *** bjz left
[22:28] *** diana_olhovik_ left
[22:29] *** Vlavv joined
[22:29] *** mohij left
[22:32] *** erdic left
[22:32] *** smash left
[22:32] *** smash joined
[22:32] *** diana_olhovik_ joined
[22:33] *** erdic joined
[22:37] <japhb> jercos: Perhaps they can just get a little more subtle, like referring to you as a minimal requirement for chaos ...

[22:37] <japhb> (But maybe that one has been tried a million times too ...)

[22:40] *** larion left
[22:41] *** diana_olhovik_ left
[22:43] *** larion joined
[22:45] <jercos> japhb: actually that one's new. :3

[22:48] <Erendis42d> XD

[22:50] *** chenryn joined
[22:54] *** chenryn left
[22:58] *** kaare_ left
[23:00] <andreoss> % time perl prob030.pl5 #  0m1.93s

[23:00] <andreoss> % time perl6 prob030.pl #  15m52.79s

[23:00] <andreoss> m: say (15*60 + 79) / 1.93

[23:00] *** vendethiel left
[23:00] <camelia> rakudo-moar af823c: OUTPUT«507.253886␤»

[23:01] <Zoffix> :(

[23:01] <andreoss> m: say (15*60 + 52.79) / 1.93

[23:01] <camelia> rakudo-moar af823c: OUTPUT«493.673575␤»

[23:02] *** Zoffix left
[23:05] *** telex left
[23:06] *** telex joined
[23:07] *** larion left
[23:08] *** larion joined
[23:11] *** vendethiel joined
[23:12] *** spider-mario left
[23:14] *** spider-mario joined
[23:16] *** RabidGravy left
[23:18] <timotimo> the student star craft ai tournament is running right now and over on hitbox.tv there's a stream that shows matches

[23:21] *** Sqirrel left
[23:22] <andreoss> sub xxx(*[$a, @a]) { $a.comb } ; say xxx(12,13,14)

[23:22] <andreoss> m: sub xxx(*[$a, @a]) { $a.comb } ; say xxx(12,13,14)

[23:22] <camelia> rakudo-moar af823c: OUTPUT«cannot stringify this␤  in sub xxx at /tmp/nqZSe2yC3u:1␤  in block <unit> at /tmp/nqZSe2yC3u:1␤␤»

[23:23] <andreoss> m: sub xxx(*[$a, @a]) { "Hay" } ; say xxx(12,13,14)

[23:23] <camelia> rakudo-moar af823c: OUTPUT«cannot stringify this␤  in sub xxx at /tmp/shwqSW8sNI:1␤  in block <unit> at /tmp/shwqSW8sNI:1␤␤»

[23:23] <andreoss> m: sub xxx([$a, @a]) { "Hay" } ; say xxx(12,13,14)

[23:23] <camelia> rakudo-moar af823c: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Haxsn_7Hj0␤Calling xxx(Int, Int, Int) will never work with declared signature (@ (Any $a, @a))␤at /tmp/Haxsn_7Hj0:1␤------> 3sub xxx([$a, @a]) { "Hay" } ; say 7⏏5xxx(12,13,14)␤»

[23:23] <andreoss> m: sub xxx(*[$a, *@a]) { $a.comb } ; say xxx(12,13,14)

[23:23] <camelia> rakudo-moar af823c: OUTPUT«1 2␤»

[23:23] <andreoss> okay

[23:25] <Erendis42d> i am actually playing sc right noe

[23:25] <Erendis42d> *now

[23:25] <Erendis42d> offline, though

[23:26] <Erendis42d> almost at the end pf Protoss and proud of it ^v^

[23:26] <Erendis42d> after that, i'll learn how to type properly

[23:26] <Erendis42d> _the_ rts

[23:28] *** yqt left
[23:28] *** thou left
[23:29] *** Sqirrel joined
[23:30] *** _dolmen_ left
[23:33] <timotimo> i'm bad at starcraft; i'm also much more interested in zero-k nowadays, but i'm very bad at that as well :(

[23:33] *** vendethiel left
[23:33] <timotimo> i never really played SC1 ... that's also why i have a hard time following what buildings and units are being used

[23:35] <timotimo> i played some sc2 2v2 on ladder with a friend

[23:37] *** spider-mario left
[23:41] <dalek> specs: 35bcd42 | (Stéphane Payrard)++ | S99-glossary.pod:

[23:41] <dalek> specs: TBD: Redundant material in grammar/parser/syntax analysis

[23:41] <dalek> specs: review: https://github.com/perl6/specs/commit/35bcd42e4e

[23:50] <Erendis42d> :)

[23:50] *** chenryn joined
[23:54] *** chenryn left
[23:57] *** gfldex left
[23:58] *** laouji joined
