[00:17] *** raiph joined
[00:28] *** laouji joined
[00:28] *** Ben_Goldberg joined
[00:30] *** ShimmerFairy joined
[00:31] *** BenGoldberg left
[00:35] *** virtualsue joined
[00:35] <[Coke]> jnthn++ #congrats

[00:39] *** laouji left
[00:42] *** virtualsue left
[00:50] *** firefish5000 left
[00:50] *** laouji joined
[00:54] *** laouji_ joined
[00:58] *** laouji_ left
[01:07] *** vendethiel joined
[01:11] *** kurahaupo1 joined
[01:13] *** firefish5000 joined
[01:26] *** BenGoldberg_ joined
[01:26] *** zcm joined
[01:29] *** Ben_Goldberg left
[01:30] *** vendethiel left
[01:39] *** dayangkun joined
[01:55] *** laouji_ joined
[02:00] *** laouji_ left
[02:02] <japhb> .tell jnthn Congratulations!  Where are you getting married?  (Given your propensity to travel, I'm not ruling any countries out.  :-)

[02:02] <yoleaux> japhb: I'll pass your message to jnthn.

[02:09] *** dolmen joined
[02:12] <hoelzro> jnthn: congratulations!

[02:16] *** laouji left
[02:20] *** laouji joined
[02:21] *** egrep left
[02:22] *** egrepnix joined
[02:23] *** egrepnix is now known as egrep

[02:27] *** BenGoldberg_ left
[02:27] *** davido_ joined
[02:27] *** BenGoldberg_ joined
[02:27] *** dolmen left
[02:29] <colomon> jnthn: congratulations indeed!

[02:34] *** rmgk_ joined
[02:34] *** rmgk is now known as Guest43566

[02:34] *** Guest43566 left
[02:34] *** rmgk_ is now known as rmgk

[02:43] *** colomon left
[02:43] *** zengargoyle left
[02:43] *** colomon joined
[02:46] *** noganex joined
[02:48] *** noganex_ left
[02:49] *** laouji left
[02:50] *** laouji joined
[02:54] *** Ben_Goldberg joined
[02:54] *** aborazmeh joined
[02:54] *** aborazmeh left
[02:54] *** aborazmeh joined
[02:56] *** BenGoldberg_ left
[03:01] *** raiph left
[03:11] *** kurahaupo1 left
[03:19] *** fhelmberger joined
[03:22] *** laouji left
[03:23] *** fhelmberger left
[03:32] *** BenGoldberg_ joined
[03:32] *** zcm left
[03:34] *** koo6 left
[03:35] *** Ben_Goldberg left
[03:41] *** laouji joined
[03:45] *** zcm joined
[03:46] *** laouji left
[03:46] *** BenGoldberg joined
[03:49] *** BenGoldberg_ left
[04:05] *** zcm left
[04:11] *** laouji joined
[04:11] *** BenGoldberg left
[04:15] *** aborazmeh left
[04:20] <skids> m: multi sub postfix:<ꜝ> (Int $i where * == 0) { 1 }; multi sub postfix:<ꜝ> (Int $i where * > 0) is cached { "OHAI".say; $i * ($i - 1)ꜝ }; *ꜝ.say for 0..4 # LTA error

[04:20] <camelia> rakudo-moar c2a57e: OUTPUT«1␤Cannot invoke object with invocation handler in this context␤  in whatevercode  at /tmp/JYRKWVt1gG:1␤␤»

[04:21] <skids> m: proto sub postfix:<ꜝ> ($i) is cached { * }; multi sub postfix:<ꜝ> (Int $i where * == 0) { 1 }; multi sub postfix:<ꜝ> (Int $i where * > 0) { "OHAI".say; $i * ($i - 1)ꜝ }; *ꜝ.say for 0..4 # (this works fine)

[04:21] <camelia> rakudo-moar c2a57e: OUTPUT«1␤OHAI␤1␤OHAI␤2␤OHAI␤6␤OHAI␤24␤»

[04:22] <skids> I don't know if the first one is supposed to work or not.

[04:35] *** Brock left
[04:41] <dalek> ecosystem: d84495f | (David Warring [email@hidden.address] | META.list:

[04:41] <dalek> ecosystem: added Font::AFM (Perl 6 port); moved PDF::Grammar

[04:41] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/d84495f07c

[04:42] *** awwaiid joined
[04:56] *** gtodd left
[04:57] *** gtodd joined
[05:02] *** inokenty left
[05:04] *** jack_rabbit joined
[05:04] *** skids left
[05:04] <b2gills> skids: that's at the wrong precedence level though

[05:04] <b2gills> m: proto sub postfix:<ꜝ> ($i) is cached { * }; multi sub postfix:<ꜝ> (Int $i where * == 0) { 1 }; multi sub postfix:<ꜝ> (Int $i where * > 0) { "OHAI".say; $i * ($i - 1)ꜝ }; say -1ꜝ

[05:04] <camelia> rakudo-moar c2a57e: OUTPUT«OHAI␤-1␤»

[05:05] *** zengargoyle joined
[05:05] <b2gills> I don't know what the precedence should be, but I have come across an example that uses:

[05:05] <b2gills> m: proto sub postfix:<ꜝ> ($i) is cached is tighter(&[*]) { * }; multi sub postfix:<ꜝ> (Int $i where * == 0) { 1 }; multi sub postfix:<ꜝ> (Int $i where * > 0) { "OHAI".say; $i * ($i - 1)ꜝ }; say -1ꜝ

[05:05] <camelia> rakudo-moar c2a57e: OUTPUT«Cannot call postfix:<ꜝ>(-1); none of these signatures match:␤    (Int $i where { ... })␤    (Int $i where { ... })␤  in any call_with_capture at src/gen/m-Metamodel.nqp:3470␤  in any enter at src/gen/m-Metamodel.nqp:3542␤  in block <unit> at /t…»

[05:16] *** inokenty joined
[05:24] *** awwaiid left
[05:27] *** vendethiel joined
[05:30] *** laouji_ joined
[05:31] *** awwaiid joined
[05:31] *** gfldex joined
[05:34] *** jack_rabbit left
[05:34] *** laouji_ left
[05:35] *** virtualsue joined
[05:42] *** [Sno] left
[05:44] *** virtualsue left
[05:47] *** cognominal joined
[05:50] *** xinming left
[05:51] *** xinming joined
[06:00] *** diana_olhovik_ joined
[06:00] *** gfldex left
[06:14] *** amurf left
[06:15] *** domidumont joined
[06:15] *** kaare_ joined
[06:17] *** xinming left
[06:18] *** domidumont left
[06:19] *** domidumont joined
[06:22] *** _mg_ joined
[06:26] *** jack_rabbit joined
[06:27] *** virtualsue joined
[06:32] *** pdcawley joined
[06:33] *** pdcawley left
[06:38] *** awwaiid left
[06:39] *** pdcawley joined
[06:45] *** awwaiid joined
[06:51] *** brrt joined
[06:52] *** zakharyas joined
[06:55] *** RabidGravy joined
[06:57] *** virtualsue left
[07:04] *** ab5tract_ joined
[07:10] *** awwaiid left
[07:10] *** tinyblak left
[07:11] *** tinyblak joined
[07:12] *** domidumont left
[07:13] *** FROGGS joined
[07:13] *** domidumont joined
[07:14] *** tinyblak_ joined
[07:15] *** tinyblak left
[07:17] *** awwaiid joined
[07:18] *** salv0 joined
[07:19] *** tinyblak joined
[07:23] *** tinyblak_ left
[07:26] *** jack_rabbit left
[07:28] *** FROGGS left
[07:30] *** tinyblak left
[07:34] *** AlexDaniel joined
[07:37] *** g4 joined
[07:37] *** g4 left
[07:37] *** g4 joined
[07:37] *** [Sno] joined
[07:40] <masak> morning, #perl6

[07:41] <nwc10> morning masak

[07:42] *** vendethiel left
[07:47] <brrt> \o masak

[07:50] *** vendethiel joined
[07:52] <lizmat> morning masak nwc10 brrt 

[07:56] <ab5tract_> m: (4..5).rand.ray

[07:56] <camelia> rakudo-moar c2a57e: OUTPUT«Method 'ray' not found for invocant of class 'Num'␤  in block <unit> at /tmp/ZrkJta_Opv:1␤␤»

[07:56] <ab5tract_> m: (4..5).rand.say

[07:56] <camelia> rakudo-moar c2a57e: OUTPUT«1.92761249929782␤»

[07:56] <ab5tract_> not what I was expecting, there

[07:56] <ab5tract_> and: good morning, #perl6

[07:57] <ab5tract_> derp

[07:57] <ab5tract_> that's what pick and roll are for :)

[07:58] *** abraxxa joined
[07:58] <lizmat> Files=1010, Tests=42510, 168 wallclock secs (10.08 usr  3.36 sys + 988.13 cusr 104.52 csys = 1106.09 CPU)

[07:58] *** xinming joined
[07:58] <lizmat> first time in a long time that I see a spectest < 170 secs

[07:59] <lizmat> and at such a low CPU

[07:59] <ab5tract_> lizmat: sweet!

[08:00] <dalek> rakudo/nom: 014597e | lizmat++ | src/core/ (2 files):

[08:00] <dalek> rakudo/nom: Put in goto NYI stub

[08:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/014597e1ca

[08:00] <lizmat> $ 6 'FOO: goto FOO'

[08:00] <lizmat> Label.goto() not yet implemented. Sorry. 

[08:00] <lizmat> $ 6 'FOO: FOO.goto'

[08:00] <lizmat> Label.goto() not yet implemented. Sorry.

[08:07] <lizmat> timotimo: yeah, I saw that, and that's exactly what I got with the THROW MMD change

[08:07] *** itz2 left
[08:08] <lizmat> I also tried MMDing 'return', but that has a weird failure mode in building / starting the setting  :-(

[08:08] <lizmat> pity, I think we can gain a lot there as well...

[08:11] *** darutoko joined
[08:13] *** vendethiel left
[08:19] <dalek> specs/newio: d2d0057 | lizmat++ | S32-setting-library/Containers.pod:

[08:19] <dalek> specs/newio: Mention :into / :as for classify / categorize

[08:19] <dalek> specs/newio: review: https://github.com/perl6/specs/commit/d2d0057cf1

[08:20] *** firefish5000 left
[08:21] *** stux|RC-only joined
[08:30] <dalek> rakudo/nom: f5b360b | lizmat++ | docs/ChangeLog:

[08:30] <dalek> rakudo/nom: Some more recent changes

[08:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f5b360bd4e

[08:32] <dalek> rakudo/nom: 802983e | lizmat++ | tools/contributors.pl6:

[08:32] <dalek> rakudo/nom: Include any changes to "doc" in contributors

[08:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/802983e773

[08:39] *** telex left
[08:40] *** telex joined
[08:44] *** dakkar joined
[08:49] *** laouji_ joined
[08:51] *** espadrine joined
[08:51] *** spider-mario left
[08:53] *** laouji_ left
[08:57] <masak> "This synopsis summarizes the non-existent Apocalypse 9, which discussed in detail the design of Perl 6 data structures. It was primarily a discussion of how the existing features of Perl 6 combine to make it easier for the PDL folks to write numeric Perl." -- S09

[08:57] <masak> I've always been a bit curious about how this non-existent A09 would look :>

[08:58] <masak> today is not the day, but maybe some day I'll attempt to write it, just to see what it looks like.

[08:59] <masak> naturally, it would have to contain (a) TimToady's "voice" and jokes, (b) understandable mis-features that were since fixed, some of them historical, some of them not.

[09:00] <masak> (c) later corrections to these misfeatures, explaining how things are now in S09

[09:00] <masak> (d) discussions around the appropriate RFCs

[09:01] <masak> (but probably not focused on that, since by the time of A06 and A12, Perl 6 had already established itself enough that "ok, here's what we'll do" was the main thrust of an apocalypse)

[09:01] *** laouji left
[09:02] *** laouji joined
[09:02] *** fhelmberger joined
[09:02] *** fhelmberger left
[09:02] *** fhelmberger joined
[09:03] <masak> by the way, I think `use autoindex;` would be a misfeature, and would be much better served by a cute, targeted slang.

[09:05] <masak> m: my num %hash; say %hash.^name

[09:05] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/rbVL630mYq␤native value types for hashes not yet implemented. Sorry. ␤at /tmp/rbVL630mYq:1␤------> 3my num %hash7⏏5; say %hash.^name␤    expecting any of:␤        constraint␤»

[09:05] <masak> m: my Num %hash; say %hash.^name

[09:05] <camelia> rakudo-moar c2a57e: OUTPUT«Hash[Num]␤»

[09:05] <masak> m: my Num %hash{<a b c d e f>}; say %hash.^name

[09:05] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/bBm3QzYSDN␤Invalid hash shape; type expected␤at /tmp/bBm3QzYSDN:1␤------> 3my Num %hash{<a b c d e f>}7⏏5; say %hash.^name␤    expecting any of:␤        constraint␤»

[09:05] *** andreoss joined
[09:06] * masak is really looking forward to all the "shape" shenanigans of S09

[09:10] *** andreoss left
[09:11] *** andreoss joined
[09:12] *** darutoko- joined
[09:16] *** darutoko left
[09:19] <andreoss> m: my @x; @x.push($_) for 1..1000000; @x.join.chars.say #

[09:19] <camelia> rakudo-moar c2a57e: OUTPUT«5888896␤»

[09:19] <andreoss> m: say chars [~] do $_ for 1..1000000

[09:20] <camelia> rakudo-moar c2a57e: OUTPUT«Memory allocation failed; could not allocate 2833620 bytes␤»

[09:20] *** inokenty left
[09:31] <moritz> repeated string concatenation with immutable strings is a Really Bad Idea[tm]

[09:33] <masak> one might hope that some day [~] will copmile down to the right thing, though...

[09:33] <masak> it's a fairly natural pattern to apply to that problem.

[09:34] *** inokenty joined
[09:48] *** g4 left
[09:51] *** tinyblak joined
[10:03] <andreoss> the second variant calls Str.new only as twice as much 

[10:05] <andreoss> so it's really ~ which is slowing things down. am i wrong?

[10:05] *** _mg_ left
[10:05] <andreoss> my point was .join works much faster than ~

[10:07] *** larion joined
[10:09] * brrt is not really sure how ~ is implemented

[10:10] <brrt> hmm

[10:10] <brrt> can i do this:

[10:10] <moritz> [~] probably naively iterates + concatenates, which is a O(n^2) algorithm

[10:11] <brrt> m: sub foo($a,$b) { $a + $b*$a }; say [&foo] 1..6;

[10:11] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/1_Ex3WpXB_␤Two terms in a row␤at /tmp/1_Ex3WpXB_:1␤------> 3ub foo($a,$b) { $a + $b*$a }; say [&foo]7⏏5 1..6;␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤    …»

[10:11] <andreoss> m: sub foo($a,$b) { $a + $b*$a }; say [[&foo]] 1..6;  [06:11]

[10:11] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5===␤Confused␤at /tmp/MDUcLLiN1v:1␤------> 3{ $a + $b*$a }; say [[&foo]] 1..6;  [06:7⏏0511]␤    expecting any of:␤        colon pair␤Other potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use…»

[10:11] <andreoss> m: sub foo($a,$b) { $a + $b*$a }; say [[&foo]] 1..6;  

[10:11] <camelia> rakudo-moar c2a57e: OUTPUT«2520␤»

[10:11] <moritz> m: sub foo($a,$b) { $a + $b*$a }; say reduce &foo 1..6;

[10:11] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/DE8IzTFbZT␤Two terms in a row␤at /tmp/DE8IzTFbZT:1␤------> 3o($a,$b) { $a + $b*$a }; say reduce &foo7⏏5 1..6;␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤    …»

[10:12] <brrt> why's that with double [[]]

[10:12] <moritz> m: sub foo($a,$b) { $a + $b*$a }; say reduce &foo, 1..6;

[10:12] <camelia> rakudo-moar c2a57e: OUTPUT«2520␤»

[10:12] <brrt> ah, ok

[10:12] <andreoss> brrt: the first pair makes it infix, the second pair makes it a reducer

[10:12] <moritz> I'd say the other way round :-)

[10:12] <brrt> oh, [foo] is reducing... clearly

[10:12] <brrt> ah

[10:13] <brrt> that explains why your code blows up, indeed

[10:13] <brrt> actually

[10:13] <andreoss> m: sub infix:«foo>($a,$b) { $a + $b*$a }; say [&foo] 1..6;  

[10:13] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/mTz04ZIbP5␤Unable to parse expression in shell-quote words; couldn't find final '»' ␤at /tmp/mTz04ZIbP5:1␤------> 3($a,$b) { $a + $b*$a }; say [&foo] 1..6;7⏏5<EOL>␤    expecting any of:␤       …»

[10:13] *** g4 joined
[10:13] *** g4 left
[10:13] *** g4 joined
[10:13] <andreoss> m: sub infix:«foo»($a,$b) { $a + $b*$a }; say [&foo] 1..6;  

[10:13] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/_nan6g6aRl␤Two terms in a row␤at /tmp/_nan6g6aRl:1␤------> 3:«foo»($a,$b) { $a + $b*$a }; say [&foo]7⏏5 1..6;␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤  …»

[10:13] <brrt> it does not really explain it, unless the reduce is recursive?

[10:14] *** rarara left
[10:14] *** dayangkun left
[10:14] <moritz> infix:«foo> doens't install a &foo

[10:14] <andreoss> m: sub infix:«foo»($a,$b) { $a + $b*$a }; say [foo] 1..6;  

[10:14] <camelia> rakudo-moar c2a57e: OUTPUT«2520␤»

[10:29] *** Ven joined
[10:31] *** vendethiel joined
[10:31] *** Ven_ joined
[10:31] *** Ven left
[10:32] * brrt afk

[10:32] *** brrt left
[10:33] *** oetiker joined
[10:34] <Ven_> o/, #perl6

[10:34] <Ven_> jnthn++: congrats as well

[10:54] *** vendethiel left
[10:57] *** dustinm` joined
[11:15] *** vendethiel joined
[11:16] *** brrt joined
[11:23] *** [ptc] left
[11:23] *** burnersk left
[11:23] <lizmat> is there a reason why ops like infix:<===> do not have any Mu candidates ?

[11:24] *** firefish5000 joined
[11:24] <lizmat> m: Mu === Any  # expecting False

[11:24] <camelia> rakudo-moar c2a57e: OUTPUT«Cannot call infix:<===>(Mu, Any); none of these signatures match:␤    (Any $?)␤    (Any $a, Any $b)␤    (Int:D \a, Int:D \b)␤    (int $a, int $b)␤    (Num:D \a, Num:D \b)␤    (Num $ where { ... }, Num $ where { ... })␤    (num $a, num $b --> …»

[11:25] <lizmat> m: (100..200).classify({.comb})   # how I found it

[11:25] <camelia> rakudo-moar c2a57e: ( no output )

[11:25] <lizmat> m: (100..200).classify({.comb}).perl   # how I found it

[11:25] <camelia> rakudo-moar c2a57e: OUTPUT«Cannot call infix:<===>(Any, Mu); none of these signatures match:␤    (Any $?)␤    (Any $a, Any $b)␤    (Int:D \a, Int:D \b)␤    (int $a, int $b)␤    (Num:D \a, Num:D \b)␤    (Num $ where { ... }, Num $ where { ... })␤    (num $a, num $b --> …»

[11:25] *** [ptc] joined
[11:25] *** burnersk joined
[11:26] *** pauluu joined
[11:28] <moritz> lizmat: === autothreads (by TimToady++'s explicit wish), so it can't accept Mu as its argument

[11:28] <moritz> m: (100..200).classify({.comb}).eager

[11:28] <camelia> rakudo-moar c2a57e: ( no output )

[11:29] <moritz> m: (100..200).classify({.comb}).perl

[11:29] <camelia> rakudo-moar c2a57e: OUTPUT«Cannot call infix:<===>(Any, Mu); none of these signatures match:␤    (Any $?)␤    (Any $a, Any $b)␤    (Int:D \a, Int:D \b)␤    (int $a, int $b)␤    (Num:D \a, Num:D \b)␤    (Num $ where { ... }, Num $ where { ... })␤    (num $a, num $b --> …»

[11:29] *** _mg_ joined
[11:29] <moritz> I'm not too happy with this.

[11:29] *** Ven_ left
[11:30] <lizmat> so: 'TValue === Mu' is by definition wrong then

[11:31] <moritz> right

[11:35] *** RabidGravy left
[11:37] *** vendethiel left
[11:41] *** laouji left
[11:44] *** brrt left
[11:50] *** laouji joined
[11:50] *** noface joined
[11:51] <noface> Testing

[11:51] <masak> noface: hi! \o

[11:52] <noface> Oh my, are you really bored? I just needed a channel to test my theme on, I really detest perl. I like C, Lisp and Haskell.

[11:53] <DrForr> Sorry you accidentally joined us then.

[11:54] *** laouji_ joined
[11:54] * masak hugs noface 

[11:54] <masak> noface: not bored, far from it ;)

[11:55] <masak> doing $dayjob stuff, wishing I had more time for #perl6 today

[11:56] <noface> Why would anyone like Perl? Python for scripting. 

[11:57] <DrForr> Fun language, quirky syntax, plenty of tools to play wth.

[11:57] <DrForr> *with

[11:57] <masak> maybe you've been unfortunate enough to see a lot of shoddy Perl. if you've seen enough beautiful Perl, your perspective changes.

[11:58] <masak> of course, Perl 6 makes it easier to get things right in this regard. it's been rebased on more modern industry standards.

[11:58] *** laouji_ left
[11:59] <noface> It's practically a flavour of the month language

[11:59] *** tinyblak left
[11:59] <DrForr> Flavor of the month that's been around for 25+ years, I'd call that staying power.

[12:00] <noface> Flavour of the month in terms of usage. Hipsters wanting to use new libraries and so on, so forth

[12:02] <DrForr> Shrug, you mean like new frameworks like Dancer and Mojolicious? You're right, that's *so* last month.

[12:03] *** rindolf joined
[12:03] <masak> wow, I had honestly not heard Perl called that before.

[12:04] <noface> I have no idea, as I don't use Perl. Like I've said before, I use python for scripting, and C/Haskell/Lisp for everything else. GLSL for shaders, though I have contributed to HLSL projects since I dualboot windows.

[12:04] <masak> maybe you meant to troll #ruby?

[12:04] <noface> Ruby and Perl are constantly at war with each other, I know that muhc

[12:04] <noface> much*

[12:05] <masak> your knowledge does you credit.

[12:05] <noface> Still, I'm not too fond of high level languages like Perl. For that, I'd much rather use python, as it's far more pleasant to use.

[12:05] <profan> who joins a language channel just to say they don't like the language though?

[12:05] <noface> I was merely testing my theme! 

[12:05] <masak> profan: we don't get a lot of them, for sure. but they do exist.

[12:05] <DrForr> profan: Boring trolls.

[12:06] <noface> Hardly a "troll"

[12:06] <profan> noface: the "i detest perl" part though wasn't really necessary was it though? :P

[12:06] <profan> but i digress

[12:06] <masak> noface: I use both Perl and Python. I find Perl a lot more pleasant to use, for several reasons. people's tastes diverge.

[12:07] <DrForr> You're right. Minor nuisance would be a better description. Maybe go back to #python and practice somewhere first?

[12:07] <noface> Well, Perl is objectively less intuitive, which is slightly off putting when all you want to do is write a high level script

[12:07] <masak> he's not a very good troll, I agree.

[12:07] <masak> needs practice.

[12:07] <masak> but I admit I laughed at the "testing my theme" excuse :D

[12:08] <noface> Back to python? Never been there, never will be. Barely use it anyway.

[12:08] <DrForr> Good to know that intuition is so objective, I'm sure philosophers worldwide will cheer.

[12:08] <noface> It's not an excuse. I was testing some themes and couldn't find a channel to test them on (would rather not annoy my home channels!)

[12:09] <masak> well, you annoyed a very agreeable channel instead.

[12:09] <profan> Maybe he redefined what objective means? He does like C after all, them there "macros" and all ;)

[12:09] <DrForr> I fail to see how joining a random channel to chatter at it is considered a "theme".

[12:09] <masak> it is if the theme is trolling...

[12:09] <noface> I said "test" and Masak immediately greeted me

[12:09] <profan> I assume he means his client's theme

[12:09] <masak> noface: how dare he!

[12:09] <noface> Profan is right

[12:10] <nwc10> test?

[12:10] <DrForr> I assume I don't care. *plonk*

[12:10] <masak> nwc10: hi! \o

[12:10] <profan> nwc10: test!

[12:10] <masak> profan: hi! \o

[12:10] <profan> masak: hi :D

[12:10] <masak> :D

[12:10] <noface> Very well. What are you guys working on?

[12:11] <masak> there's a compiler called Rakudo. a lot of work goes on that.

[12:11] <masak> but also the underlying VMs (JVM and MoarVM) and specification/documentation work.

[12:11] <masak> this year is a big year for Perl 6.

[12:11] <DrForr> Tracing a segfault in a perl6 readline module while setting up a Redis cluster.

[12:12] *** tinyblak joined
[12:12] * profan is writing a toy language and compiler to learn P6

[12:12] <masak> last time I had time for Perl 6 I was tinkering with scripts and old modules of mine.

[12:12] <DrForr> profan: Check out perl6-ANTLR4 on github for ideas :)

[12:12] <andreoss> profan: don't forget to put it in perl6-examples

[12:13] <DrForr> Oh, yeah, I probably should add that to the module list.

[12:13] <profan> DrForr: nice, thanks

[12:13] *** tinyblak_ joined
[12:13] <profan> it's pretty hard to find whats out there for perl6 already sometimes

[12:13] <masak> yeah, it's a tough problem to crack :/

[12:14] <DrForr> I'm almost done writing the AST, which should make an ANTLR => Perl6 grammar translator straightforward, with the exception of a few edge cases.

[12:15] <profan> It's pretty interesting to see how different the attitude is in certain communities surrounding programming languages

[12:15] <noface> profan: You mocked C a few minutes ago, but knowing C is very useful, especially when you want to branch out to GPU programming, like writing shaders for instance, since HLSL and GLSL both look a lot like C.

[12:15] <profan> noface: There are valid reasons to mock every language, I like C myself, but that doesn't mean I can't criticize it, quite the opposite

[12:16] <masak> I believe C macros can be used for good. MoarVM's use of them is a nice example of this.

[12:17] <profan> If one is comfortable in their choices of tools, you should be well versed in both the pros and cons!

[12:17] *** tinyblak left
[12:17] <masak> but I also believe there are macro systems which help you a lot more and which are safer.

[12:17] <noface> And if you know C to a reasonable degree, you most likely know some assembly as well (it actually makes pointers considerably easier to understand and use since you know WHY they were created in the first place)

[12:17] <arnsholt> Yeah. You can do good things with C macros, it's just that they go out of their way to make it hard to do so

[12:17] <DrForr> One of my backlog projects is to snarf enough of the existing C parser to write a quick C=>P6 nativecall converter.

[12:18] <DrForr> Sort of like the old h2xs but with less cruft :)

[12:18] <arnsholt> Yeah, it's on my list of awesome things too

[12:19] <arnsholt> Just be warned: There's a whole army of dragons lurking in there

[12:19] <DrForr> I assume the pun was intentional.

[12:20] <profan> the best puns are unintentional

[12:20] <arnsholt> Not sure which pun you mean, so not intended, no =)

[12:20] <profan> arnsholt: compilers... dragons? :P

[12:20] <DrForr> That one, yes.

[12:21] *** larion left
[12:21] <DrForr> noface: I keep meaning to check out GPU stuff, got any references?

[12:21] <arnsholt> Oh right, that one

[12:21] *** larion joined
[12:21] *** pdcawley left
[12:23] <noface> Depends, what would you like to do?

[12:24] <noface> I am in the process of fixing MPDN's (media player dot net) chroma scaler, since it upscales each chroma channel individually before merging them, instead of merging them AND THEN upscaling

[12:24] <DrForr> Offloading matrix calculations, nothing actually screen-visible.

[12:24] <noface> Which incurs a large performance penalty (80-100%)

[12:24] *** tinyblak_ left
[12:24] <noface> You can just use OpenCL

[12:25] <DrForr> Nod, checking the usual references.

[12:25] *** tinyblak joined
[12:26] <dalek> rakudo/nom: 478994f | lizmat++ | src/core/Hash.pm:

[12:26] <dalek> rakudo/nom: Fix .perl on uncontained typed hashes

[12:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/478994fba4

[12:27] <DrForr> Roight.

[12:27] <DrForr> WW

[12:27] <masak> :)

[12:28] <lizmat> afk&

[12:29] *** Alina-malina left
[12:29] <DrForr> The FFT compute kernel on Wikipedia looks reasonable.

[12:29] *** Alina-malina joined
[12:31] <hoelzro> morning #perl6

[12:31] <DrForr> Morning yourself ;)

[12:38] *** noface is now known as no_face

[12:47] *** Ven joined
[12:47] *** no_face left
[12:51] *** Ven left
[12:53] *** inokenty left
[12:53] *** muraiki joined
[13:02] *** pdcawley joined
[13:03] *** pdcawley left
[13:03] *** pdcawley joined
[13:03] <jdv79> moritz: can i get an acct on the server?

[13:03] *** pdcawley left
[13:04] <moritz> jdv79: sure; what username do you want?

[13:05] <jdv79> jdv is fine

[13:06] *** inokenty joined
[13:09] <jdv79> moritz: seems ok, thanks

[13:10] *** inokenty left
[13:11] *** skids joined
[13:12] *** RabidGravy joined
[13:14] *** tinyblak left
[13:17] <DrForr> Cool, I just blew up MoarVM core :)

[13:17] <DrForr> Unhandled exception: Label with no handler passed to newlexotic at src/gen/m-CORE.setting:17011  (/home/jeffreygoff/.rakudobrew/moar-nom/install/share/perl6/runtime/CORE.setting.moarvm:MATCH_SAVE:0)

[13:18] <lizmat> wow, wonder if any of my recent Label related changes is to blame

[13:19] <DrForr> There's NativeCall involved here as well, just so you're aware.

[13:19] <Util> m: say [ 10 <<**<< (1,2,3,4) ].perl;

[13:19] <camelia> rakudo-moar c2a57e: OUTPUT«[10, 100, 1000, 10000]␤»

[13:19] <Util> say [ 10 <<**<< (1..4) ].perl;

[13:19] <Util> m: say [ 10 <<**<< (1..4) ].perl;

[13:19] <camelia> rakudo-moar c2a57e: OUTPUT«Cannot find method 'Range'␤  in block <unit> at /tmp/nk6UBshobl:1␤␤»

[13:19] <DrForr> And also not easily repeatable. Should I perlbug it though?

[13:19] <Util> ??? Bug?

[13:20] <masak> Util: looks like.

[13:21] <lizmat> repeatable WAT's should be perlbugged  :-)

[13:22] <masak> Util: please submit.

[13:24] <Util> lizmat: Noted. masak: will do.

[13:24] <Util> lizmat: I confess that when I post 2 (working,then non-working) `m:` on this channel, and ask `bug?`

[13:24] <Util> I am also secretly asking "is this a *known* bug, that I would already know if I read the channel as much as I should" :^)

[13:24] *** laouji_ joined
[13:25] <Util> thanks all!

[13:25] <lizmat> Util: fwiw, it didn't look familiar to me

[13:25] *** inokenty joined
[13:28] *** raiph joined
[13:28] <Util> Is there a bug script now, or do we submit directly to RT?

[13:28] <lizmat> [email@hidden.address]
[13:29] <Util> lizmat: right, thanks!

[13:29] <lizmat> yw  :-)

[13:29] *** laouji_ left
[13:30] *** tinyblak joined
[13:31] *** smls joined
[13:41] <lizmat> afk again

[14:04] *** g4 left
[14:04] *** laouji left
[14:10] <smls> Is pipe() documented anywhere?

[14:11] <smls> S32 only says "pipe   Gone, see Pipe.pair"

[14:11] <smls> yet that does not reflect reality :P

[14:12] *** Ven joined
[14:12] <smls> Ok, this seems to work locally:   .say for pipe("ls -l").lines.map({ "<$_>" })

[14:13] * Ven waves

[14:13] <masak> \o

[14:13] <smls> Who needs documentation when your programming languages has simple english routine names and built-in introspection capabilities :P

[14:16] * cognominal particulates

[14:20] * masak is more about information, probabilities, observables, and how they relate to each other

[14:21] <masak> man, that's probably the innest in-joke I've ever done. I'd be (happily) surprised if someone gets the reference. :)

[14:22] <DrForr> Grammar matches with optional keys now dump rather oddly.

[14:22] <Woodi> masak: I instantly thinked about La Femme Nikita :)

[14:22] <Woodi> hi today :)

[14:23] <DrForr> actions => , content => action => (Any ), ... # for a quick sample.

[14:25] <DrForr> Actually a lot has gone away.

[14:27] <RabidGravy> making a Solaris VM just for fun

[14:29] <smls> Another thing I like about Perl 6: It has syntactic sugar which lets me often avoid writing things twice...

[14:29] <smls> m: my %color = (<cherry strawberry> X=> "red"), (<banana lemon> X=> "yellow"); say %color.perl

[14:29] <camelia> rakudo-moar c2a57e: OUTPUT«{:banana("yellow"), :cherry("red"), :lemon("yellow"), :strawberry("red")}<>␤»

[14:30] <Ven> smls: that's why cobol doesn't have docs (it actually does)

[14:30] <DrForr> eval: grammar Foo { token TOP { <Foo>? <Bar> } token Foo { 'foo' } token Bar { 'bar' } } class Action { method TOP($/) { make { foo => $/<Foo>.ast, bar => $/<Bar>.ast } } method Foo { make ~$/ } method Bar { ~$/ } } my $g=Grammar.new;my $a=Action.new;my $x=$g.parse('bar',:actions($a));say $x;

[14:30] *** _mg_ left
[14:30] <DrForr> m: grammar Foo { token TOP { <Foo>? <Bar> } token Foo { 'foo' } token Bar { 'bar' } } class Action { method TOP($/) { make { foo => $/<Foo>.ast, bar => $/<Bar>.ast } } method Foo { make ~$/ } method Bar { ~$/ } } my $g=Grammar.new;my $a=Action.new;my $x=$g.parse('bar',:actions($a));say $x;

[14:30] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/NO5vuc_z3I␤Strange text after block (missing semicolon or comma?)␤at /tmp/NO5vuc_z3I:1␤------> 3grammar Foo { token TOP { <Foo>? <Bar> }7⏏5 token Foo { 'foo' } token Bar { 'bar' }␤    expecting an…»

[14:31] <DrForr> Hit another whitespace "improvement", have I.

[14:32] <DrForr> m: grammar Foo { token TOP { 'a' } token Foo { 'a' } }

[14:32] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/2NDELqetlt␤Strange text after block (missing semicolon or comma?)␤at /tmp/2NDELqetlt:1␤------> 3grammar Foo { token TOP { 'a' }7⏏5 token Foo { 'a' } }␤    expecting any of:␤        infix␤     …»

[14:32] <DrForr> yep.

[14:33] <DrForr> I swear, if I keep hitting these "improvements"...

[14:34] <DrForr> m: grammar Foo { token TOP { 'a' }; token Foo { 'a' } }

[14:34] <camelia> rakudo-moar c2a57e: ( no output )

[14:34] <PerlJam> DrForr: ... you'll get used to them?

[14:35] <DrForr> m: grammar Foo { token TOP { <Foo>? <Bar> }; token Foo { 'foo' }; token Bar { 'bar' } } class Action { method TOP($/) { make { foo => $/<Foo>.ast, bar => $/<Bar>.ast } } method Foo { make ~$/ } method Bar { ~$/ } } my $g=Grammar.new;my $a=Action.new;my $x=$g.parse('bar',:actions($a));say $x;

[14:35] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/LfL6VKlwu4␤Strange text after block (missing semicolon or comma?)␤at /tmp/LfL6VKlwu4:1␤------> 3ken Foo { 'foo' }; token Bar { 'bar' } }7⏏5 class Action { method TOP($/) { make { ␤    expecting an…»

[14:35] <DrForr> m: grammar Foo { token TOP { <Foo>? <Bar> }; token Foo { 'foo' }; token Bar { 'bar' } }; class Action { method TOP($/) { make { foo => $/<Foo>.ast, bar => $/<Bar>.ast } }; method Foo { make ~$/ }; method Bar { ~$/ } }; my $g=Grammar.new;my $a=Action.new;my $x=$g.parse('bar',:actions($a));say $x;

[14:35] <camelia> rakudo-moar c2a57e: OUTPUT«P6opaque: no such attribute '$!shared'␤  in block <unit> at /tmp/2xxvhA0I36:1␤␤»

[14:35] *** koo6 joined
[14:36] <DrForr> It's just the cumulative effect.

[14:36] <PerlJam> per unit time probably

[14:37] <DrForr> In any case, what I was hoping to demonstrate without too much code is that the output from 'say' on a match was readable and I seem to remember actually nested, but that's gone completely away.

[14:41] *** dayangkun joined
[14:41] <DrForr> https://gist.github.com/drforr/70b62c98f623b0495176

[14:46] *** dayangkun left
[14:46] <DrForr> I would swear that Match or datastructure output was *much* more informative than this dump that I'm now getting.

[14:47] <PerlJam> DrForr: are you outputting your Match object for debugging purposes?

[14:47] <DrForr> Yep.

[14:47] <PerlJam> If so, consider using perl6-debug-m for executing your program.

[14:49] <DrForr> <facepalm/>

[14:50] <masak> Woodi: nope, not La Femme Nikita. :)

[14:54] <DrForr> Okay, I'm guessing that the rationale was that ... displaying nesting and quoting on a nested data structure would encourage people to use 'say' for simple serializing rather than resorting to a proper module?

[14:55] <skids> say is always supposed to be for humans.

[14:57] <DrForr> And humans shouldn't be confused with nesting?

[14:58] <[Coke]> say is definitely no longer meant to be a canonical rep of the data

[14:58] <[Coke]> it's using .gist, which by design doesn't show you everything.

[14:59] *** larion left
[14:59] <DrForr> Hrm, I was getting used to not having to use a separate module. What's the new recommended method for being able to view nested data structures? Running under -debug-m?

[15:00] *** robinsmidsrod joined
[15:00] <PerlJam> DrForr: perhaps you want  $match.perl  ?

[15:02] <skids> m: grammar Foo { token TOP { <Foo>? <Bar> }; token Foo { foo }; token Bar { bar } }; class Action { method TOP($/) { make { foo => $/<Foo>.ast, bar => $/<Bar>.ast } }; method Foo ($/) { make ~$/ }; method Bar ($/) { make ~$/ } }; Foo.parse("bar",:actions(Action)).print;

[15:02] <camelia> rakudo-moar c2a57e: OUTPUT«bar»

[15:02] <skids> m: grammar Foo { token TOP { <Foo>? <Bar> }; token Foo { foo }; token Bar { bar } }; class Action { method TOP($/) { make { foo => $/<Foo>.ast, bar => $/<Bar>.ast } }; method Foo ($/) { make ~$/ }; method Bar ($/) { make ~$/ } }; Foo.parse("bar",:actions(Action)).perl.print;

[15:02] <camelia> rakudo-moar c2a57e: OUTPUT«Match.new(ast => {:bar("bar"), :foo(Any)}, list => (), hash => EnumMap.new(:Bar(Match.new(ast => "bar", list => (), hash => EnumMap.new(), orig => "bar", to => 3, from => 0))), orig => "bar", to => 3, from => 0)»

[15:03] <DrForr> Ah, yes. And good to see that no longer dumps the entire string each time. That was what drove me away from it in the first place.

[15:08] <hoelzro> TimToady: I'm giving a talk about Perl 6 tonight, and I use your likeness in one of the slides.  Is that ok with you? If not, I'll happily remove it!

[15:09] <dalek> ecosystem: 34a5fa2 | (Sterling Hanenkamp)++ | META.list:

[15:09] <dalek> ecosystem: Adding HTTP::Headers to the ecosystem

[15:09] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/34a5fa2bcf

[15:10] *** cognominal left
[15:13] *** diana_olhovik_ left
[15:23] *** zakharyas left
[15:23] *** vendethiel joined
[15:26] *** circ-user-IRjqo joined
[15:27] *** circ-user-IRjqo is now known as grondilu_

[15:27] * grondilu_ bought a rasb

[15:27] * grondilu_ bought a raspberry pi 2

[15:27] <grondilu_> I can insrt

[15:27] <grondilu_> o

[15:27] <grondilu_> ahh new keyboard, sorry

[15:28] <grondilu_> so, I bought a raspberry pi.  I can install rakudo on ths

[15:28] <grondilu_> so, I bought a raspberry pi.  I can install rakudo on this, right?

[15:29] * grondilu_ also bought a chromebook

[15:29] <[Tux]> building your questions to a climax?

[15:30] <grondilu_> no, just not quite used to the keyboard on the chromebook

[15:30] *** captain-adequate joined
[15:31] *** ssqq_ joined
[15:35] *** rarara joined
[15:35] *** ab5tract_ left
[15:40] <Ulti> grondilu_ the downside is floating point is not straight forward on the pi if you want it to be fast, you need to get a special JVM for it no idea how hard it would be to hack that into moarvm

[15:41] *** domidumont left
[15:44] *** raiph left
[15:46] *** vendethiel left
[15:47] *** cosimo left
[15:53] <skids> zostay++

[15:54] <timotimo> hmm

[15:54] <timotimo> ah, it's the raspberry pi *2*

[15:55] <timotimo> that one's a whole lot more powerful than the number 1

[15:55] <timotimo> i'm not sure anybody has tried building rakudo on it yet

[15:56] *** raiph joined
[15:57] *** raiph left
[15:58] <ugexe> i did

[15:58] <lizmat> sometimes I wish we had slurpies like: sub a(*?@a) { ... }

[15:58] <lizmat> which would match on at least 1 parameter passed, and not none

[15:58] <ugexe> i built rakudo on rpi2 on linux and netbsd. jvm takes too much memory though

[15:59] *** Ven left
[15:59] <lizmat> m: await  # #125257

[15:59] <camelia> rakudo-moar c2a57e: ( no output )

[16:00] *** ssqq_ left
[16:00] *** diana_olhovik_ joined
[16:00] <dalek> rakudo/nom: d841d4e | lizmat++ | src/core/asyncops.pm:

[16:00] <dalek> rakudo/nom: Make bare await die (fixes #125257)

[16:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d841d4e14f

[16:01] <lizmat> $ 6 'await'

[16:01] <lizmat> Must specify a Promise or Channel to await on

[16:01] <grondilu_> timotimo: I'd gladly report success on the Raspb 2 but I need to buy a micro SD and it's late.  So later in the week.

[16:01] <lizmat> if we would have something like a slurpy of 1..Inf parameters, the above would become a compile time error

[16:03] <timotimo> right

[16:03] *** raiph joined
[16:03] <dalek> roast: 5df1265 | lizmat++ | S17-promise/start.t:

[16:03] <dalek> roast: Add test for bare await

[16:03] <dalek> roast: review: https://github.com/perl6/roast/commit/5df1265317

[16:03] <timotimo> wouldn't that be +@a rather than *?@a?

[16:04] <lizmat> timotimo: perhaps

[16:04] <lizmat> but that would be ambiguous with @a.elems ?

[16:04] <lizmat> perhaps *+@a

[16:05] <timotimo> well, it's only in signatures, but you're right

[16:05] <lizmat> std: sub a(+@a) { }

[16:05] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Malformed parameter at /tmp/_t7EQs9zOW line 1:␤------> 3sub a(7⏏5+@a) { }␤    expecting any of:␤     name␤   new name to be defined␤ parameter␤      routine_def␤    signature␤Parse failed␤FAILED 00:01 136m␤»

[16:06] <lizmat> std: sub a(*+@a) { }

[16:06] <camelia> std 28329a7: OUTPUT«5===SORRY!5===␤Malformed parameter at /tmp/DQhvOLtVNm line 1:␤------> 3sub a(7⏏5*+@a) { }␤    expecting any of:␤    name␤   new name to be defined␤ parameter␤      routine_def␤    signature␤Parse failed␤FAILED 00:00 136m␤»

[16:06] <lizmat> m: sub a(+@a) { }

[16:06] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/55RU8tWEgp␤Malformed parameter␤at /tmp/55RU8tWEgp:1␤------> 3sub a(7⏏5+@a) { }␤    expecting any of:␤        formal parameter␤»

[16:09] *** vendethiel joined
[16:11] *** telex left
[16:12] *** telex joined
[16:12] *** muraiki left
[16:12] *** dakkar left
[16:13] <hoelzro> if one wanted to add better .gist/.perl support for Regex objects, what would be the best way to go about that? I was thinking of storing the raw source in the Regex object, but it occurred to me that might bloat things up a bit

[16:16] <zostay> skids: thx, perl6 made that fun to write

[16:18] *** gfldex joined
[16:19] *** muraiki joined
[16:20] <lizmat> m: use trace; rx/foo/; no trace; say "bar"   # perhaps some of the trace code can be repurposed ?

[16:20] <camelia> rakudo-moar c2a57e: OUTPUT«2 (/tmp/YhE_BBcwCY:1)␤rx/foo/␤bar␤»

[16:21] <lizmat> hoelzro ^^

[16:21] <hoelzro> lizmat: nice tip, thanks!

[16:21] *** laouji joined
[16:24] * hoelzro .oO( TIL about 'use trace' )

[16:25] <hoelzro> ah, it seems use trace just prints out the source to stderr

[16:25] <lizmat> yeah, it's underdocumented 

[16:25] <lizmat> yes, that's what it does atm

[16:25] *** domidumont joined
[16:26] <lizmat> I was thinking about making it write to a file instead of STDERR

[16:26] <Juerd> stderr can be very useful; please make it configurable

[16:26] <tony-o_>  does it just print what is executed or all source?

[16:27] *** larion joined
[16:27] <lizmat> it prints the source of the statement, as seen at compile time

[16:27] <lizmat> it basically just adds the ops to do that at compile time

[16:27] <lizmat> Juerd: yeah, but I lacked the nqp / QAST foo to make that happen 

[16:28] <masak> +1 to making regexes .gist/.perl to their source text

[16:29] <smls> how about normal Perl 6 routines? shouldn't they be deparsed as well in .perl

[16:29] <PerlJam> surely not .gist?  That seems slightly counter to gist's purpose

[16:30] *** vendethiel left
[16:30] <[Coke]> I would imagine a human readable version of a regex would have to include its source. no?

[16:31] <[Coke]> even if it was truncated due to size limits.

[16:31] <[Coke]> m: my $a = rx/foo/; say $a

[16:31] <camelia> rakudo-moar c2a57e: OUTPUT«␤»

[16:32] <lizmat> if we're  doing this, should this text make it to precomped versions ?

[16:32] *** laouji left
[16:32] <lizmat> fwiw, use trace will not put the statements in the code when precomping

[16:34] <tony-o_> anyone here very familiar with apache log format?

[16:38] <moritz> tony-o_: you mean the "combined" access log format?

[16:38] <moritz> or error log? other formats?

[16:38] *** vendethiel joined
[16:40] <tony-o_> the common log formats - i was trying to determine if %!401{Content-type}i would be skip the log or if it was replaced with '-' on the line

[16:40] <tony-o_> right now i'm just replacing '-' until i can get a clearer understanding of the format

[16:43] <tony-o_> found it in some older docs, finally, i've been looking for about 3 hours.  way more than i spent even on this module hah

[16:43] *** brrt joined
[16:46] <hoelzro> lizmat: I would expect that it would make it into precomp

[16:46] <hoelzro> maybe I should just TIAS

[16:46] <hoelzro> see how much things bloat up

[16:47] <lizmat> TIAS ?

[16:48] <[Coke]> try it and see

[16:49] <PerlJam> S99:TIAS

[16:49] <PerlJam> (seeing if the bot is alive)

[16:50] *** synbot6 joined
[16:51] *** larion left
[16:51] <PerlJam> S99:TIAS

[16:51] <synbot6> Link: http://design.perl6.org/S99.html#TIAS

[16:52] <lizmat> .oO( I tried and I didn't see )

[16:52] *** [Sno] left
[16:55] *** grondilu_ left
[16:56] <TimToady> hoelzro: I think I'm officially in the category of "famous enough that they cannot prevent people from using their photo" :)

[16:56] <TimToady> but thanks for asking :)

[16:56] <hoelzro> =)

[16:59] <PerlJam> If I do a google image search for "larry wall" there's a few pictures of RMS thrown in the mix.  Pick one of those as your "larry"  ;)

[17:00] *** espadrine left
[17:00] <tony-o_> hail larry

[17:03] *** Jonis joined
[17:03] <hoelzro> PerlJam: I noticed that when looking for pictures

[17:03] <hoelzro> TimToady: I should probably mention that the picture in question has your face on Ned Stark's body, with the caption "Christmas is Coming"

[17:04] <tony-o_> m: $*PID.say;

[17:04] <camelia> rakudo-moar c2a57e: OUTPUT«21125␤»

[17:05] <hoelzro> (in the interest of full disclosure)

[17:05] <TimToady> you could use Boromir's body instead, with all the arrows...

[17:05] <brrt> can you check in $*STDIN is a tty?

[17:05] <hoelzro> hahaha

[17:06] <brrt> m: say $*STDIN :t;

[17:06] <camelia> rakudo-moar c2a57e: OUTPUT«Unexpected named parameter 't' passed␤  in block <unit> at /tmp/_RPPKxlUWd:1␤␤»

[17:06] <lizmat> brrt: that *is* specced, but not implemented

[17:06] <brrt> oh really

[17:06] <brrt> hmmm

[17:06] <brrt> how would you do it

[17:07] <brrt> m: say $*IN.IO :t;

[17:07] <camelia> rakudo-moar c2a57e: OUTPUT«IO::Special.new(what => "<STDIN>")␤»

[17:07] * brrt supsect camelia special-cases that

[17:09] <lizmat> m: say $*IN.t

[17:09] <camelia> rakudo-moar c2a57e: OUTPUT«Cannot find method 'isatty': no method cache and no .^find_method␤  in block <unit> at /tmp/S8ETcGRlxl:1␤␤»

[17:11] *** koo6 left
[17:13] <lizmat> brrt: it expects to be able to call "isatty" on the $!PIO of the IO::Handle

[17:13] <brrt> aye

[17:16] <smls> I explored the inconsistent itemization of values going through .make some more: https://gist.github.com/smls/8a16296b48b4e4f6f011

[17:16] <smls> Surely that's a bug, right?

[17:16] <smls> (look at the output at the bottom)

[17:18] <smls> Wasn't it decided sometime last year that 'make' should never force itemization?

[17:18] <smls> ^^ TimToady, lizmat & co

[17:18] <TimToady> I believe that's correct

[17:18] <brrt> (surely we can implement isatty?)

[17:19] <brrt> (method isatty is not found on instance of class BOOTIO .. either)

[17:19] <smls> TimToady: your reply is ambiguous :P

[17:19] <TimToady> I meant I agree with you

[17:19] *** andreoss left
[17:20] <smls> ok

[17:23] <brrt> oh, hmm

[17:23] <brrt> windows *does* have isatty, but calls it _isatty instead

[17:23] <lizmat> brrt: please do  :-)

[17:24] <smls> brrt: see rt #123347

[17:24] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=123347

[17:24] <smls> isatty seems to be availabe on parrot, but not on moar and jvm

[17:25] <brrt> yes, lets check that out, shall i

[17:25] <lizmat> please  :-)

[17:27] *** pauluu left
[17:32] *** virtualsue joined
[17:32] <colomon> please please please make isatty work!

[17:34] <RabidGravy> it would be easy if the fd was available from an IO::Handle

[17:35] <lizmat> fwiw, I seem to recall it being less than straightforward because of libuv

[17:35] <lizmat> but I could very well be misremembering

[17:36] *** fhelmberger left
[17:39] <smls> TimToady: I'm looking at the Rakudo source code, and method make does   $!made = made;  while sub make does  nqp::bindattr(..., '$!made', made);

[17:39] <smls> Changing the first to  $!made := made;  might fix it, right?

[17:40] <dalek> perl6-roast-data: f0863ce | coke++ | / (8 files):

[17:40] <dalek> perl6-roast-data: today (automated commit)

[17:40] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/f0863cec45

[17:46] *** spider-mario joined
[17:54] <lizmat> smls: think so

[17:54] <lizmat> commute to FRA&

[17:54] *** lizmat left
[17:57] <vendethiel> FRA?

[17:58] <masak> Frankfurt.

[17:58] <vendethiel> thanks masak :)

[17:58] <masak> Frankfurt airport, to be exact.

[17:58] *** ShimmerFairy left
[17:58] * masak has traveled a bit -- one gets to Frankfurt sooner or later :)

[18:00] * nwc10 has travelled quite a bit within Frankfurt Airport

[18:00] *** ShimmerFairy joined
[18:01] <nwc10> by foot, bus and taxiing aircraft

[18:02] <nwc10> it's faster to get from the airport to central Franfurt than from some of the gates to one of the runways.

[18:02] <nwc10> this is LTA

[18:02] <RabidGravy> I'd just like to say building rakudo on FreeBSD 9.2 on a KVM is quite awfully slow

[18:03] <TimToady> don't ever try to reclaim your VAT at Frankfurt, they can run you from one place to another for hours until you have to catch your flight

[18:05] <masak> yeah, FRA is huge. but it's also nice and new and airy.

[18:06] <masak> I've traveled a fair bit, but not enough to be jaded and tired of trav'lin'.

[18:06] <japhb> nwc10: My impression of FRA was roughly a shopping mall embedded in a labyrinth masquerading as an airport.

[18:06] <RabidGravy> I think all airports should be modeled on LCY

[18:07] <DrForr> Naah, give me AMS any day.

[18:07] <DrForr> I may be a touch biased :)

[18:07] * masak likes CPH

[18:08] <japhb> LCY: Fifth busiest airport *serving London*.  Wow, that's a lot of airports ...

[18:09] *** [Sno] joined
[18:09] <RabidGravy> heathrow, gatwick,luton, stansted,city

[18:09] <DrForr> I'm heading CLJ-OTP-CDG-SLC;SLC-STL;STL-ATL-MUC-OPT-CLJ for YAPC. Someone's going to have to get me home in a *wheelbarrow*.

[18:10] <RabidGravy> I remember when stansted was just a bunch of left over WWII huts

[18:11] <DrForr> Stansted was where I got to spend some time in the back room, and no longer has to wonder what happens when you're in that little roped-off area.

[18:11] *** yqt joined
[18:13] <DrForr> *that* was a conversation killer :)

[18:14] <masak> :)

[18:18] <DrForr> It's a litle long to explain over IRC, if you're intereted ask me @YAPC :)

[18:19] *** brrt left
[18:21] *** laouji joined
[18:22] *** pierrot left
[18:22] *** synbot6 left
[18:23] <masak> I'll try to remember that :)

[18:23] *** synbot6 joined
[18:23] *** abraxxa left
[18:25] *** pierrot joined
[18:25] <DrForr> Wish I could be there for the hackathon, but family matters intrude.

[18:26] *** laouji left
[18:33] <smls> lizmat:  $!made := made;  does indeed fix it, and the 'make spectest' still passes with it. I've submitted the patch to rt.

[18:35] *** synbot6 left
[18:36] <smls> Not that a formal patch was necessarily warranted, seeing as it only adds a single character which you could have easily added yourself, but I never made a Rakudo patch before so I though why not... :)

[18:38] *** AlexDaniel left
[18:38] *** synbot6 joined
[18:39] <PerlJam> S99::TTIAR

[18:39] <PerlJam> S99:TTIAR

[18:39] <synbot6> Link: http://design.perl6.org/S99.html#TTIAR

[18:46] *** [Sno] left
[18:47] <[Coke]> The HTML of that seems odd. quotes around words signifies to me that we're using an incorrect word deliberately, when we really just wanted to show some kind of emphasis.

[18:48] *** [Sno] joined
[18:48] <smls> yeah, that probably wants <i>...</i> instaed of "..."

[18:49] * jercos places a "T_PAAMAYIM_NEKUDOTAYIM" on Text::SmartLinks

[18:50] <TimToady> The T_PAAMAYIM_NEKUDOTAYIM sits on the Text::SmarLinks, but appears to do nothing.

[18:51] <jercos> back in the pokéball then

[18:52] <TimToady> The Text::SmartLinks suddenly explodes.

[18:52] <jercos> I just don't know what went wrong.

[18:53] *** rindolf left
[18:53] <DrForr> you die. --more--

[18:53] <jercos> DYWYPI?

[18:53] *** AlexDaniel joined
[18:54] *** brrt joined
[18:57] *** raiph left
[19:01] *** _mg_ joined
[19:07] <masak> S99:floofudoofugronkle

[19:07] <synbot6> Link: http://design.perl6.org/S99.html#floofudoofugronkle

[19:09] <masak> "warnocked - This lemma will never be explained." -- a case of trying to make a joke but ending up frustrating whoever was looking for information, methinks.

[19:10] <masak> and I agree about the quotes. most of those quotes around links should just go away. no need even for <i>...</i>

[19:14] <masak> wow, the `ufo` project is so old it has a non-Markdown README!

[19:14] <masak> despite all the fun I had writing that README file, my favorite sentence nowadays is one that was added later: "My friend Ingy, who has lots of prior experience with alien technology [...]" :P

[19:17] <moritz> :-)

[19:22] *** laouji joined
[19:26] *** laouji left
[19:32] *** ab5tract_ joined
[19:32] *** raiph joined
[19:34] *** tinyblak left
[19:37] *** _mg_ left
[19:37] *** ab5tract_ left
[19:38] *** domidumont left
[19:48] *** captain-adequate left
[19:50] <DrForr> Ingy *is* alien technology. Wasn't sure you knew that.

[19:51] <masak> Ingy is a hoopy frood.

[19:52] *** diana_olhovik_ left
[19:54] *** zakharyas joined
[19:55] *** virtualsue left
[19:57] *** diana_olhovik_ joined
[20:01] *** virtualsue joined
[20:01] *** koo6 joined
[20:03] <moritz> .oO( Sounds like bunny technology )

[20:08] *** virtualsue left
[20:08] <jdv79> the same ingy that created yaml?

[20:10] <masak> the very same.

[20:12] *** pdcawley joined
[20:27] *** darutoko- left
[20:30] <dalek> roast: 1c19fa4 | jdv79++ | S14-roles/parameterized-basic.t:

[20:30] <dalek> roast: Add tests for RT #109880.

[20:30] <dalek> roast: review: https://github.com/perl6/roast/commit/1c19fa41a7

[20:30] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=109880

[20:34] <tony-o_> m: require Test; Test.perl.say;

[20:34] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Hh512cn5_n␤Undeclared name:␤    Test used at line 1␤␤»

[20:34] <tony-o_> m: require Test; Test::.perl.say;

[20:34] <camelia> rakudo-moar c2a57e: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Xb1gGt_QqX␤Variable '&Test' is not declared␤at /tmp/Xb1gGt_QqX:1␤------> 3require Test; 7⏏5Test::.perl.say;␤»

[20:34] <tony-o_> m: require Test; ::('Test').perl.say;

[20:34] <camelia> rakudo-moar c2a57e: OUTPUT«Test␤»

[20:35] <retupmoca> masak: I'm building a new markdown module: https://github.com/retupmoca/p6-markdown - can I steal the Text::Markdown name from you, or would you prefer that both modules are in the ecosystem?

[20:35] <masak> retupmoca: if you exceed what my Text::Markdown already does, then feel free to steal.

[20:35] <[Coke]> Or you could test that having two modules with the same name works as expected. :)

[20:36] *** brrt left
[20:36] <masak> or that.

[20:36] <masak> 'night, #perl6

[20:37] <retupmoca> is that actually supposed to be supported now?

[20:37] * retupmoca still needs to get up to speed on all the CompUnitRepo changes

[20:38] <retupmoca> if same-name-different-auth is supposed to work, or can easily be made to work, I'll just do that

[20:45] *** muraiki left
[20:48] *** Peter_R joined
[20:56] *** dolmen joined
[20:57] <tony-o_> timotimo: HTTP::Server::Logger now works with anything abiding by HTTP::Server

[21:00] *** skids left
[21:00] <timotimo> neat :)

[21:00] <timotimo> do we have anything to track exceptions and such, btw?

[21:01] <timotimo> is there any way to get something like a "debug overlay" into a H:S:* powered program?

[21:08] <tony-o_> timotimo: i'm building that into the perl6-hiker app i'm working on

[21:08] <timotimo> ooooh, you're already up to that? :D

[21:08] <tony-o_> mvc framework

[21:08] <tony-o_> otherwise, right now it just catches and .says 

[21:11] <tony-o_> https://github.com/tony-o/perl6-hiker/tree/master/usage

[21:11] <tony-o_> that's kind of the syntax i'm going for

[21:11] <tony-o_> similar to mojo but more concise

[21:11] <timotimo> why is it "$app.bind; $app.listen" instead of "$trail.go-hiking"? :)

[21:12] <tony-o_> haha, because it's still really rough atm :-)

[21:12] *** espadrine joined
[21:13] *** raiph left
[21:17] *** zakharyas left
[21:35] *** RabidGravy left
[21:40] *** mr-foobar left
[21:41] *** liztormato joined
[21:42] * liztormato waves from a labyrinth / shopping mall / airport / train station / hotel lobby

[21:45] *** gfldex left
[21:46] <timotimo> o/ liztormato 

[21:46] *** raiph joined
[21:47] <liztormato> timotimo: /o

[21:51] *** liztormato left
[21:52] *** telex left
[21:54] *** telex joined
[21:58] <tony-o_> m: role A { proto method x {...}; }; class B does A { has $.x = 5; }; B.new.x.say; #is there a better way to write this role?

[21:58] <camelia> rakudo-moar c2a57e: OUTPUT«5␤»

[22:00] *** espadrine left
[22:01] *** vendethiel left
[22:03] *** vendethiel joined
[22:06] *** dolmen left
[22:09] *** lizmat joined
[22:13] *** diana_olhovik_ left
[22:15] <tony-o_> another question, does .WHO require an instance?

[22:16] <lizmat> tony-o_: a type object is an instance of the MOP class, afaik  :-)

[22:17] <lizmat> m: say Int.WHO

[22:17] <camelia> rakudo-moar c2a57e: OUTPUT«␤»

[22:17] <lizmat> m: say Int.WHO.WHAT

[22:17] <camelia> rakudo-moar c2a57e: OUTPUT«(Stash)␤»

[22:17] <lizmat> m: say Int.WHO.methods

[22:17] <camelia> rakudo-moar c2a57e: OUTPUT«Method 'methods' not found for invocant of class 'Stash'␤  in block <unit> at /tmp/lNM5MymLvi:1␤␤»

[22:17] <lizmat> hmmm....

[22:17] * lizmat mixed hop WHO and HOW

[22:17] <lizmat> *up

[22:18] <dalek> rakudo/nom: 0a0051c | lizmat++ | src/core/Match.pm:

[22:18] <dalek> rakudo/nom: Make sure Match.make doesn't containerize, smls++

[22:18] <dalek> rakudo/nom: 

[22:18] <dalek> rakudo/nom: Fixes #125269

[22:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a0051c697

[22:18] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125269

[22:19] <timotimo> excellent

[22:19] <timotimo> smls++ lizmat++

[22:20] * lizmat has an early flight in the morning, so tries to get some sleep

[22:22] <tony-o_> night

[22:23] *** laouji joined
[22:27] *** smls left
[22:27] *** vendethiel left
[22:27] <timotimo> good night lizmat :)

[22:28] *** laouji left
[22:34] *** Peter_R left
[22:48] *** kaare_ left
[22:52] *** jepeway left
[22:55] *** vendethiel joined
[22:59] *** jepeway joined
[23:11] <AlexDaniel> how can I write a comment on rt.perl.org without having an account? It said that all I have to do is just write an email with the bug id in the title, and it said that just replying to this message should work. And that's what I did. But my comment did not appear

[23:17] *** amurf joined
[23:18] *** vendethiel left
[23:20] *** tinyblak joined
[23:29] *** laouji joined
[23:34] *** koo6 left
[23:34] *** vendethiel joined
[23:43] *** laouji left
[23:44] *** tinyblak_ joined
[23:44] *** AlexDaniel left
[23:48] *** tinyblak left
[23:57] *** vendethiel left
[23:57] *** itz2 joined
